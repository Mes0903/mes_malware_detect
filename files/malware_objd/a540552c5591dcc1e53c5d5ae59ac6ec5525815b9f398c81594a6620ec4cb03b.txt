
a540552c5591dcc1e53c5d5ae59ac6ec5525815b9f398c81594a6620ec4cb03b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	cmp    eax,0x7c2e87e2
  4025f0:	jl     0x40266e
  4025f2:	jl     0x4025c7
  4025f4:	pop    edi
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	mov    ds:0x6d6c6c7a,eax
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi+0x171c44f2]
  40269c:	jg     0x402709
  40269e:	jge    0x402679
  4026a0:	pop    ebp
  4026a1:	or     ah,BYTE PTR [eax+0x37bf18c4]
  4026a7:	fwait
  4026a8:	loopne 0x402678
  4026aa:	daa    
  4026ab:	add    al,0x81
  4026ad:	iret   
  4026ae:	ins    BYTE PTR es:[edi],dx
  4026af:	inc    ecx
  4026b0:	pushf  
  4026b1:	fisttp DWORD PTR [ecx+eax*2+0x2d]
  4026b5:	jbe    0x4026e5
  4026b7:	imul   edi,edx,0x3a
  4026ba:	(bad)  [edx+0x23f9d579]
  4026c0:	xor    esi,DWORD PTR [ebx]
  4026c2:	in     eax,dx
  4026c3:	retf   0x9ee9
  4026c6:	shl    BYTE PTR [ecx+edi*4],0xe8
  4026ca:	jbe    0x402726
  4026cc:	dec    ebp
  4026cd:	imul   esp,edi,0x24986ca2
  4026d3:	xor    ebp,DWORD PTR [ebp-0x69]
  4026d6:	leave  
  4026d7:	lahf   
  4026d8:	imul   ebp,ebp,0x65510aa2
  4026de:	dec    edi
  4026df:	mov    esp,0xa6c9db28
  4026e4:	nop
  4026e5:	jl     0x40271a
  4026e7:	jecxz  0x402755
  4026e9:	jns    0x402712
  4026eb:	add    edi,DWORD PTR [esi-0x36]
  4026ee:	mov    bl,ch
  4026f0:	push   0x17
  4026f2:	lds    ebx,FWORD PTR [esi]
  4026f4:	aas    
  4026f5:	push   ebp
  4026f6:	inc    ebp
  4026f7:	popf   
  4026f8:	retf   
  4026f9:	int    0x8a
  4026fb:	std    
  4026fc:	mov    ah,0xb0
  4026fe:	fidiv  DWORD PTR [edi+0x28a90d96]
  402704:	jns    0x4026a1
  402706:	adc    BYTE PTR [edi],al
  402708:	jmp    0x4026ef
  40270a:	push   eax
  40270b:	push   ebp
  40270c:	or     BYTE PTR [esi+ebp*1+0x48a8e436],cl
  402713:	mov    al,BYTE PTR [ecx-0x203edfec]
  402719:	push   edx
  40271a:	outs   dx,BYTE PTR ds:[esi]
  40271b:	xor    BYTE PTR [ebx+0xc9a94df],bl
  402721:	pop    ecx
  402722:	ficom  DWORD PTR [eax+0x1a9deac5]
  402728:	cdq    
  402729:	mov    edi,0xae778ad7
  40272e:	dec    edx
  40272f:	in     al,0x24
  402731:	cwde   
  402732:	mov    eax,ds:0xef05a1b2
  402737:	xchg   ebp,eax
  402738:	stos   DWORD PTR es:[edi],eax
  402739:	inc    edi
  40273a:	cmp    ch,ah
  40273c:	add    al,BYTE PTR [esi+0x2be9d47]
  402742:	sub    esi,DWORD PTR [edi]
  402744:	fldcw  WORD PTR ss:[ebp+0x1a958b75]
  40274b:	(bad)  
  40274c:	loopne 0x402714
  40274e:	jne    0x40271f
  402750:	es push ecx
  402752:	sbb    dl,BYTE PTR [eax+0x6cdefe9e]
  402758:	pop    ss
  402759:	sub    al,0x4b
  40275b:	dec    esp
  40275c:	in     al,dx
  40275d:	sub    BYTE PTR [ecx+0x14],ah
  402760:	(bad)  
  402761:	xchg   ebx,eax
  402762:	arpl   WORD PTR [ecx+0x65d67422],cx
  402768:	aad    0x49
  40276a:	jle    0x402765
  40276c:	pop    es
  40276d:	jecxz  0x402724
  40276f:	fimul  WORD PTR [eax]
  402771:	popa   
  402772:	nop
  402773:	fsub   QWORD PTR [ecx+0x62]
  402776:	stc    
  402777:	or     eax,0x9d5b41a5
  40277c:	mov    edx,esi
  40277e:	je     0x40278e
  402780:	scas   al,BYTE PTR es:[edi]
  402781:	es jnp 0x4027bc
  402784:	pop    esi
  402785:	xchg   esp,eax
  402786:	jb     0x4027dd
  402788:	and    al,0x54
  40278a:	and    DWORD PTR [ecx+0x6d],edx
  40278d:	clc    
  40278e:	test   edx,0xbf3d0b5f
  402794:	inc    edi
  402795:	push   ebp
  402796:	(bad)  
  402797:	jle    0x402742
  402799:	jo     0x40279f
  40279b:	xchg   esp,eax
  40279c:	sbb    al,BYTE PTR [eax-0x58]
  40279f:	lds    esi,FWORD PTR [eax+0x71d64e2c]
  4027a5:	daa    
  4027a6:	test   dh,dh
  4027a8:	push   ebp
  4027a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027aa:	retf   
  4027ab:	pusha  
  4027ac:	bound  esi,QWORD PTR [ecx-0x63]
  4027af:	sub    eax,0xf8aedc83
  4027b4:	cmp    BYTE PTR [ecx+0xa],bh
  4027b7:	scas   al,BYTE PTR es:[edi]
  4027b8:	loope  0x402839
  4027ba:	rcl    DWORD PTR [edi+0x6e641dc3],cl
  4027c0:	and    eax,0xf60e71bb
  4027c5:	push   ebx
  4027c6:	push   edi
  4027c7:	stc    
  4027c8:	mov    bh,0xd0
  4027ca:	rcr    BYTE PTR [ecx],0xec
  4027cd:	loop   0x4027fb
  4027cf:	in     eax,0x2c
  4027d1:	xor    BYTE PTR ds:0x78df7bc2,bh
  4027d7:	push   es
  4027d8:	sahf   
  4027d9:	mov    cl,ah
  4027db:	aas    
  4027dc:	mov    al,ds:0x72711e5c
  4027e1:	addr16 pop eax
  4027e3:	stos   BYTE PTR es:[edi],al
  4027e4:	mov    al,0x73
  4027e6:	int3   
  4027e7:	stos   BYTE PTR es:[edi],al
  4027e8:	pop    es
  4027e9:	mov    ebx,0x7474e48e
  4027ee:	fs imul edx,edi,0xcc558c8b
  4027f5:	(bad)  
  4027f6:	enter  0x7ce4,0xbd
  4027fa:	aaa    
  4027fb:	inc    esp
  4027fc:	mov    bl,0xc
  4027fe:	and    BYTE PTR [esp+ebp*2],ah
  402801:	jbe    0x4027be
  402803:	(bad)  
  402804:	mov    dh,0x1c
  402806:	sbb    ebx,DWORD PTR [ebx+0x6ae451ca]
  40280c:	or     al,0x70
  40280e:	and    DWORD PTR [edi-0x31],ecx
  402811:	icebp  
  402812:	and    BYTE PTR [edi+eax*2],bl
  402815:	ss mov cx,0xeb78
  40281a:	mov    dh,0x51
  40281c:	add    al,0x32
  40281e:	and    eax,0x96ef6907
  402823:	sbb    ecx,0xffffffe6
  402826:	test   dh,al
  402828:	jno    0x40283c
  40282a:	push   esp
  40282b:	jge    0x40287d
  40282d:	ret    0xef4b
  402830:	xchg   ebp,eax
  402831:	jne    0x4027fa
  402833:	call   0xf02f:0xc4631940
  40283a:	daa    
  40283b:	outs   dx,DWORD PTR ds:[esi]
  40283c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40283d:	scas   eax,DWORD PTR es:[edi]
  40283e:	mov    dl,0xcd
  402840:	jmp    0x7917fa4f
  402845:	cli    
  402846:	or     BYTE PTR [edi],al
  402848:	push   0xea35c4d7
  40284d:	popa   
  40284e:	fadd   QWORD PTR [ecx]
  402850:	mov    al,0xd7
  402852:	ins    BYTE PTR es:[edi],dx
  402853:	dec    ebp
  402854:	jb     0x402870
  402856:	jmp    0x8187:0xf013756a
  40285d:	aad    0x53
  40285f:	mov    bl,0x13
  402861:	ficom  WORD PTR [ebp-0x57]
  402864:	arpl   cx,sp
  402866:	push   0xffffff91
  402868:	mov    eax,0x95648772
  40286d:	inc    ebx
  40286e:	jle    0x40285b
  402870:	repnz cld 
  402872:	mov    DWORD PTR [eax+0x61],0xfe360974
  402879:	mul    DWORD PTR [ebx+0x3c]
  40287c:	or     bl,BYTE PTR [ebx]
  40287e:	and    DWORD PTR [ecx-0x2c],edx
  402881:	aaa    
  402882:	cmp    BYTE PTR ds:0x25971eda,bl
  402888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402889:	or     ch,BYTE PTR [ebx+esi*2]
  40288c:	dec    edx
  40288d:	ins    BYTE PTR es:[edi],dx
  40288e:	fdiv   st(7),st
  402890:	stc    
  402891:	ins    BYTE PTR es:[edi],dx
  402892:	sub    ebx,ebx
  402894:	jl     0x402825
  402896:	fst    DWORD PTR [esi]
  402898:	mov    ebp,0x98eb7a38
  40289d:	stos   BYTE PTR es:[edi],al
  40289e:	sbb    cl,BYTE PTR [edi]
  4028a0:	jecxz  0x40284d
  4028a2:	test   al,0xea
  4028a4:	clc    
  4028a5:	jae    0x4028f0
  4028a7:	or     eax,0xdbdda1d7
  4028ac:	adc    esi,DWORD PTR [edi-0x6b07988d]
  4028b2:	sbb    BYTE PTR [ecx-0x18b16c13],bl
  4028b8:	jg     0x402852
  4028ba:	mov    al,ds:0x4d4bce9e
  4028bf:	adc    eax,0x24fb8e27
  4028c4:	push   es
  4028c5:	ja     0x40292b
  4028c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c8:	loop   0x402923
  4028ca:	rcr    BYTE PTR ds:0xb2b24114,1
  4028d0:	adc    eax,0xce8012de
  4028d5:	or     BYTE PTR [eax-0x4b],ah
  4028d8:	or     cl,ah
  4028da:	push   ebx
  4028db:	pop    ss
  4028dc:	xchg   esp,eax
  4028dd:	nop
  4028de:	xchg   ebp,eax
  4028df:	(bad)  
  4028e0:	cmp    al,0x42
  4028e2:	pop    es
  4028e3:	and    eax,0xe2a778db
  4028e8:	sbb    ebx,DWORD PTR [edx]
  4028ea:	or     al,0xb2
  4028ec:	mov    ecx,edi
  4028ee:	ret    0xa590
  4028f1:	popf   
  4028f2:	dec    esp
  4028f3:	rol    DWORD PTR [bx+0xec5],1
  4028f8:	js     0x402894
  4028fa:	sar    edi,cl
  4028fc:	sbb    al,0x76
  4028fe:	push   0x76
  402900:	jmp    0xdb43:0xf5b066cd
  402907:	loope  0x402974
  402909:	add    al,BYTE PTR [edx-0xa]
  40290c:	cmp    dl,BYTE PTR ds:0x91752977
  402912:	fs ret 0x37be
  402916:	push   0x4d
  402918:	push   0x6b3125a6
  40291d:	lea    esp,[edi]
  40291f:	mov    cl,0x8f
  402921:	or     BYTE PTR [esi+0x3722bb8c],ah
  402927:	sub    al,0xdf
  402929:	add    DWORD PTR [eax-0x30],edx
  40292c:	xor    DWORD PTR ds:0xf654d15a,edi
  402932:	mov    edi,0xf677a8df
  402937:	dec    ebx
  402938:	neg    DWORD PTR [edx-0x1db77ca8]
  40293e:	jnp    0x4028f7
  402940:	retf   0x9ea5
  402943:	cmp    eax,0xc48bf5b2
  402948:	mov    ebx,0x8003fc3d
  40294d:	xor    bl,dl
  40294f:	mov    eax,0x4b96b2ee
  402954:	out    dx,al
  402955:	popa   
  402956:	ins    DWORD PTR es:[edi],dx
  402957:	scas   al,BYTE PTR es:[edi]
  402958:	(bad)  
  40295a:	mov    dh,dh
  40295c:	fst    QWORD PTR [eax+edi*1]
  40295f:	shr    DWORD PTR [esi+ebx*4+0x38011172],1
  402966:	pop    ebx
  402967:	test   eax,0xca324ff5
  40296c:	add    BYTE PTR [edi*1+0x2df8e70c],ch
  402973:	dec    esp
  402974:	jmp    0x54772431
  402979:	popa   
  40297a:	sbb    al,0x3
  40297c:	mov    ds:0x91dfb528,al
  402981:	dec    ebp
  402982:	xchg   ecx,eax
  402983:	xchg   edi,eax
  402984:	dec    edx
  402985:	push   cs
  402986:	lea    ebp,[ebx-0x33c21e1f]
  40298c:	pop    esi
  40298d:	sub    al,0x47
  40298f:	jp     0x402969
  402991:	lahf   
  402992:	stos   BYTE PTR es:[edi],al
  402993:	xchg   esi,eax
  402994:	jmp    0x7035:0x9005536
  40299b:	pop    ebx
  40299c:	outs   dx,BYTE PTR ds:[esi]
  40299d:	sub    al,0x29
  40299f:	pop    ss
  4029a0:	xchg   esi,eax
  4029a1:	jmp    0xea1e7306
  4029a6:	pusha  
  4029a7:	jp     0x40293a
  4029a9:	div    DWORD PTR [eax+0x70]
  4029ac:	cmc    
  4029ad:	jmp    0x208f:0x3aad722e
  4029b4:	fcom   QWORD PTR [edi]
  4029b6:	in     al,dx
  4029b7:	xlat   BYTE PTR fs:[ebx]
  4029b9:	in     eax,dx
  4029ba:	jo     0x402a13
  4029bc:	jmp    0xda91:0x686f1a98
  4029c3:	and    ch,dh
  4029c5:	into   
  4029c6:	xchg   esp,eax
  4029c7:	xchg   ecx,eax
  4029c8:	ret    0x29b3
  4029cb:	push   edx
  4029cc:	jle    0x4029ed
  4029ce:	cld    
  4029cf:	dec    ecx
  4029d0:	fwait
  4029d1:	jl     0x4029d5
  4029d3:	(bad)  
  4029d4:	ja     0x4029dc
  4029d6:	mov    bh,0x7d
  4029d8:	jge    0x402978
  4029da:	push   0x4286ec20
  4029df:	icebp  
  4029e0:	mov    bh,0x87
  4029e2:	fstp   TBYTE PTR [edx-0x3e]
  4029e5:	das    
  4029e6:	mov    ebx,?
  4029e8:	pop    ebx
  4029e9:	bound  edi,QWORD PTR [ebx+ebp*1-0x5d493e0f]
  4029f0:	lods   al,BYTE PTR ds:[esi]
  4029f1:	mov    DWORD PTR ss:0x773d0ac5,ebx
  4029f8:	frstor [edi-0x23b82e4a]
  4029fe:	jae    0x402987
  402a00:	sar    edx,cl
  402a02:	inc    esi
  402a03:	popf   
  402a04:	or     bl,BYTE PTR [esi+0xe]
  402a07:	wbinvd 
  402a09:	mov    al,0xea
  402a0b:	sbb    BYTE PTR [ebx],ch
  402a0d:	mov    ds:0xfacd6425,eax
  402a12:	fwait
  402a13:	fwait
  402a14:	imul   ebp,esp,0xa1ee1adb
  402a1a:	mov    ebx,0xe9f72a26
  402a1f:	fsub   st,st(5)
  402a21:	shl    BYTE PTR [edi],0xa
  402a24:	adc    DWORD PTR [esp+esi*1+0x16],ebp
  402a28:	cld    
  402a29:	ds sbb eax,0xef4b9232
  402a2f:	sbb    ebp,DWORD PTR [edi+eiz*4]
  402a32:	mov    edx,0x43405e9c
  402a37:	push   ebx
  402a38:	dec    eax
  402a39:	xor    bh,BYTE PTR [ebp+0x76]
  402a3c:	sti    
  402a3d:	imul   ecx,eax,0x5
  402a40:	adc    al,0xfb
  402a42:	inc    edi
  402a43:	nop
  402a44:	jmp    0x9b9b:0x6f494dbb
  402a4b:	and    DWORD PTR [edi+0x47ea3a5c],edi
  402a51:	xchg   DWORD PTR [ecx+ebx*8+0x3d],edx
  402a55:	push   ebx
  402a56:	ss stc 
  402a58:	mov    ch,BYTE PTR [edi-0x64fe78a4]
  402a5e:	adc    eax,0xc10ff502
  402a63:	(bad)  
  402a64:	mov    ebp,0xfcb8e957
  402a69:	and    al,BYTE PTR [esi]
  402a6b:	xchg   ebx,eax
  402a6c:	arpl   WORD PTR [esi+0x7],di
  402a6f:	adc    al,0xab
  402a71:	cmp    edi,DWORD PTR [ebp+0x36]
  402a74:	adc    ebx,0x10d26b29
  402a7a:	adc    dl,dh
  402a7c:	adc    DWORD PTR [ebp+0x29],esp
  402a7f:	xchg   esi,eax
  402a80:	mov    bl,BYTE PTR [ebx+0x70]
  402a83:	xchg   ecx,eax
  402a84:	enter  0x7d57,0x53
  402a88:	jl     0x402adb
  402a8a:	fldenv [ecx]
  402a8c:	jmp    0x63be:0x6655ed02
  402a93:	push   ebx
  402a94:	jg     0x402b05
  402a96:	stos   DWORD PTR es:[edi],eax
  402a97:	sub    BYTE PTR [esp+ebp*8+0x64],ah
  402a9b:	push   edi
  402a9c:	mov    esp,0xcf6d8b06
  402aa1:	pusha  
  402aa2:	adc    BYTE PTR [edx],bl
  402aa4:	fwait
  402aa5:	mov    ah,0x61
  402aa7:	and    edi,DWORD PTR [esi+0x3c]
  402aaa:	pop    eax
  402aab:	cmp    esi,DWORD PTR [esp+ecx*4-0x62]
  402aaf:	jge    0x402abf
  402ab1:	loop   0x402ac9
  402ab3:	mov    eax,0x18d01913
  402ab8:	dec    eax
  402ab9:	repnz cli 
  402abb:	int3   
  402abc:	fild   DWORD PTR [edi+0x1d]
  402abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac0:	jmp    0x509c8814
  402ac5:	retf   
  402ac6:	lock aam 0x24
  402ac9:	rcr    esp,cl
  402acb:	arpl   WORD PTR [esi+0x23],bp
  402ace:	jl     0x402adb
  402ad0:	dec    ebx
  402ad1:	(bad)  
  402ad2:	pop    edi
  402ad3:	mov    BYTE PTR [ebx],cl
  402ad5:	xchg   dl,ch
  402ad7:	imul   eax,esi,0xb06e8072
  402add:	ins    DWORD PTR es:[edi],dx
  402ade:	xchg   esi,eax
  402adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae0:	out    0x43,al
  402ae2:	jae    0x402b45
  402ae4:	pop    ebx
  402ae5:	xchg   edi,eax
  402ae6:	xor    DWORD PTR [eax-0x42ee1429],0x7f661f0e
  402af0:	dec    eax
  402af1:	add    BYTE PTR [esi+edi*8],ah
  402af4:	les    edi,FWORD PTR [ebp+0x69]
  402af7:	dec    ecx
  402af8:	cld    
  402af9:	mov    es,WORD PTR [eax]
  402afb:	lods   al,BYTE PTR ds:[esi]
  402afc:	mov    WORD PTR [eax-0x707734],fs
  402b02:	dec    edi
  402b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b04:	push   ebp
  402b05:	jle    0x402afa
  402b07:	push   eax
  402b08:	push   ebx
  402b09:	out    0xc6,al
  402b0b:	sbb    DWORD PTR [eax-0x20],edx
  402b0e:	jo     0x402b75
  402b10:	aaa    
  402b11:	adc    DWORD PTR [edx-0x730826ae],edx
  402b17:	xchg   ecx,eax
  402b18:	push   ecx
  402b19:	sub    eax,0x59ace937
  402b1e:	pop    edi
  402b1f:	adc    al,BYTE PTR ds:[edi+ebx*4-0x7d589dfc]
  402b27:	in     al,0xa1
  402b29:	jmp    0xe1ddf197
  402b2e:	jno    0x402ac7
  402b30:	xlat   BYTE PTR ds:[ebx]
  402b31:	outs   dx,DWORD PTR ds:[esi]
  402b32:	ds (bad) 
  402b34:	xchg   DWORD PTR [esi+0x6f23a464],esi
  402b3a:	cwde   
  402b3b:	mov    DWORD PTR [ecx+0x368f1edd],0x8a01856f
  402b45:	cli    
  402b46:	or     eax,DWORD PTR [edi]
  402b48:	mov    BYTE PTR [ebx+0x276b9e88],ch
  402b4e:	jne    0x402ba0
  402b50:	inc    edx
  402b51:	adc    BYTE PTR [ebp-0x2ee2e5dd],0x12
  402b58:	sub    cl,BYTE PTR [ecx+0x35]
  402b5b:	xchg   ebx,eax
  402b5c:	rcl    DWORD PTR [edi+ebx*4],1
  402b5f:	push   ebx
  402b60:	jnp    0x402bd1
  402b62:	jge    0x402bd2
  402b64:	xchg   ecx,eax
  402b65:	ja     0x402bde
  402b67:	push   edi
  402b68:	loope  0x402b58
  402b6a:	sub    eax,DWORD PTR [edx-0x70]
  402b6d:	push   edi
  402b6e:	lds    edi,FWORD PTR [esi-0x5b]
  402b71:	pop    es
  402b72:	jns    0x402af7
  402b74:	(bad)  
  402b75:	out    0xfd,al
  402b77:	and    dh,ah
  402b79:	xchg   edi,eax
  402b7a:	mov    cl,0xb
  402b7c:	cs cmp eax,0xc5bbac7d
  402b82:	adc    bh,BYTE PTR [eax+0x2cffeb9c]
  402b88:	push   es
  402b89:	popa   
  402b8a:	fwait
  402b8b:	sub    eax,0xdc585a00
  402b90:	(bad)  
  402b91:	cmp    eax,0x4fdc6f9a
  402b96:	push   esi
  402b97:	add    eax,0x2b4444b
  402b9c:	(bad)  
  402b9d:	jno    0x402b6c
  402b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba1:	adc    DWORD PTR [ebx-0x37043def],0xc5320f76
  402bab:	and    eax,0x294fdfc5
  402bb0:	ins    BYTE PTR es:[edi],dx
  402bb1:	add    dl,BYTE PTR [edx+0x466e44ec]
  402bb7:	mov    ecx,0xbbcde7fc
  402bbc:	sbb    eax,0x595d812d
  402bc1:	pusha  
  402bc2:	fisub  DWORD PTR [eax-0x6d36a095]
  402bc8:	xchg   edx,eax
  402bc9:	mov    ds:0x8565ed8c,al
  402bce:	xchg   esi,eax
  402bcf:	push   es
  402bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd1:	in     al,0x79
  402bd3:	push   es
  402bd4:	mov    al,ds:0xebc655df
  402bd9:	pop    es
  402bda:	repz ds dec ebp
  402bdd:	lea    edi,[esi]
  402bdf:	adc    al,0x65
  402be1:	scas   al,BYTE PTR es:[edi]
  402be2:	jb     0x402c4a
  402be4:	fisubr DWORD PTR [ecx]
  402be6:	sub    ch,BYTE PTR ds:0x8b05832d
  402bec:	sbb    bh,al
  402bee:	cwde   
  402bef:	ja     0x402b8a
  402bf1:	in     al,dx
  402bf2:	shl    BYTE PTR [ecx-0x4f],0x5c
  402bf6:	mov    eax,0xa3847090
  402bfb:	push   ss
  402bfc:	stc    
  402bfd:	xchg   ebx,eax
  402bfe:	popf   
  402bff:	sbb    ebx,DWORD PTR [ebp-0x6]
  402c02:	xor    DWORD PTR [ecx+edi*2+0x61],ebx
  402c06:	sub    DWORD PTR [edi-0x27],esp
  402c09:	ror    ebp,cl
  402c0b:	mov    esp,esi
  402c0d:	rcr    DWORD PTR [ecx],cl
  402c0f:	lahf   
  402c10:	out    dx,eax
  402c11:	lods   al,BYTE PTR ds:[esi]
  402c12:	cmp    DWORD PTR [edx-0x3],0x7d10b65c
  402c19:	das    
  402c1a:	lods   al,BYTE PTR ds:[esi]
  402c1b:	mov    ah,0xff
  402c1d:	pusha  
  402c1e:	push   cs
  402c1f:	shl    BYTE PTR [ebx],1
  402c21:	inc    edi
  402c22:	mov    BYTE PTR [ecx-0xf],ah
  402c25:	imul   edx,DWORD PTR ds:0x2c1c389f,0x7ec8066d
  402c2f:	and    eax,0xf9d7133c
  402c34:	mov    dl,0xdf
  402c36:	jg     0x402c0e
  402c38:	(bad)  
  402c39:	enter  0xaee8,0xa3
  402c3d:	cmovbe eax,DWORD PTR [esi+ebp*8+0x7f]
  402c42:	push   es
  402c43:	or     dl,BYTE PTR [eax]
  402c45:	adc    DWORD PTR [ebx-0x2b78f1f7],edx
  402c4b:	adc    DWORD PTR [ebp+0x40e44e11],ecx
  402c51:	test   BYTE PTR [ebx],bh
  402c53:	dec    edx
  402c54:	int    0x79
  402c56:	dec    eax
  402c57:	imul   edx,esp,0x2c
  402c5a:	idiv   DWORD PTR [eax]
  402c5c:	dec    ecx
  402c5d:	aaa    
  402c5e:	scas   al,BYTE PTR es:[edi]
  402c5f:	icebp  
  402c60:	fdiv   DWORD PTR [ebp+0x4ad6109f]
  402c66:	jl     0x402ce2
  402c68:	sub    BYTE PTR [ebx+0x3ec8693],ch
  402c6e:	test   DWORD PTR [edx],esp
  402c70:	push   0x567d2553
  402c75:	aad    0xae
  402c77:	add    al,0x34
  402c79:	out    0x6a,al
  402c7b:	pop    edx
  402c7c:	jae    0x402c6f
  402c7e:	or     eax,0x1640a9eb
  402c83:	xor    edi,DWORD PTR [eax+ecx*2-0x48]
  402c87:	jge    0x402cc8
  402c89:	cs je  0x402cf7
  402c8c:	sbb    bh,BYTE PTR [esi+eiz*4+0x30]
  402c90:	pop    edx
  402c91:	adc    esp,DWORD PTR [ebx]
  402c93:	adc    dl,ah
  402c95:	push   ebp
  402c96:	(bad)  
  402c97:	cwde   
  402c98:	push   esp
  402c99:	or     eax,0x53cf9f7a
  402c9e:	sub    al,0x12
  402ca0:	xor    eax,0x60186069
  402ca5:	cmp    al,0x9c
  402ca7:	out    dx,eax
  402ca8:	or     BYTE PTR [eax+0x27113f07],0x77
  402caf:	mov    ss,esi
  402cb1:	xchg   ebp,eax
  402cb2:	pop    ebx
  402cb3:	sbb    DWORD PTR [edi+0x4499f7cb],edx
  402cb9:	sub    eax,0x27356974
  402cbe:	xor    al,BYTE PTR [edi]
  402cc0:	fsub   DWORD PTR [esi+edi*8-0x5fdc529e]
  402cc7:	nop
  402cc8:	imul   ch
  402cca:	cmp    eax,0x89122997
  402ccf:	pop    ebp
  402cd0:	mov    edx,0xcacdc9ba
  402cd5:	mov    ch,0xb6
  402cd7:	aad    0x67
  402cd9:	test   DWORD PTR [ecx+0x75da1442],0x985b592d
  402ce3:	repnz lahf 
  402ce5:	ror    ecx,cl
  402ce7:	lods   eax,DWORD PTR ds:[esi]
  402ce8:	or     al,0x57
  402cea:	lods   eax,DWORD PTR ds:[esi]
  402ceb:	fiadd  WORD PTR [ecx]
  402ced:	adc    DWORD PTR [ebx],ebx
  402cef:	sub    cl,BYTE PTR [edx+0x9]
  402cf2:	ret    0xe74
  402cf5:	push   ebp
  402cf6:	jbe    0x402d14
  402cf8:	xor    bh,BYTE PTR [ebp-0x2d]
  402cfb:	xor    DWORD PTR [eax-0x1f3ed732],ebp
  402d01:	pop    esi
  402d02:	mov    bh,0xe1
  402d04:	xchg   ecx,eax
  402d05:	adc    edx,DWORD PTR [ebx]
  402d07:	add    ecx,eax
  402d09:	jg     0x402cad
  402d0b:	retf   
  402d0c:	jo     0x402d79
  402d0e:	dec    edx
  402d0f:	loope  0x402d4a
  402d11:	and    al,0xde
  402d13:	test   ebx,0x572a106
  402d19:	out    0xfc,al
  402d1b:	ret    0xdba3
  402d1e:	mov    DWORD PTR [edx+0xd7fd0e3],ecx
  402d24:	xor    BYTE PTR [esi+esi*8-0x4bc28d15],al
  402d2b:	dec    ebp
  402d2c:	or     eax,0x3538aa06
  402d31:	xchg   ebp,eax
  402d32:	jmp    0xda65:0xa409e5e2
  402d39:	xlat   BYTE PTR ds:[ebx]
  402d3a:	popa   
  402d3b:	jns    0x402da3
  402d3d:	jecxz  0x402cc0
  402d3f:	or     al,0x8a
  402d41:	pop    edx
  402d42:	lods   al,BYTE PTR ds:[esi]
  402d43:	jmp    0x402d67
  402d45:	(bad)  
  402d47:	mov    ah,0xba
  402d49:	test   eax,0x7c200f12
  402d4e:	ins    DWORD PTR es:[edi],dx
  402d4f:	dec    esp
  402d50:	pop    ebp
  402d51:	sub    dl,BYTE PTR [ecx+0x6aff35ce]
  402d57:	sahf   
  402d58:	(bad)  
  402d59:	xor    eax,0x141fc8f5
  402d5e:	jp     0x402dc2
  402d60:	ret    0xd18
  402d63:	mov    al,ds:0xe65bd22
  402d68:	(bad)  
  402d69:	std    
  402d6a:	out    dx,eax
  402d6b:	mov    BYTE PTR [ecx+edx*1+0x74],0xb0
  402d70:	push   0xb94838d1
  402d75:	enter  0x86c1,0x25
  402d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7a:	lock les esp,FWORD PTR [edi+0x6]
  402d7e:	mov    dl,0xe5
  402d80:	call   0x8679208
  402d85:	aaa    
  402d86:	lods   eax,DWORD PTR ds:[esi]
  402d87:	add    eax,0xf03a7a7c
  402d8c:	rol    BYTE PTR [esi],cl
  402d8e:	nop
  402d8f:	mov    edi,0xdcfc9cd0
  402d94:	push   ebx
  402d95:	ret    0xb797
  402d98:	int3   
  402d99:	mov    ah,BYTE PTR [ecx+0x4377b01f]
  402d9f:	mov    esp,0x2be849ff
  402da4:	jl     0x402dff
  402da6:	sub    edx,DWORD PTR [eax-0x39]
  402da9:	mov    ch,0x91
  402dab:	mov    esi,0xc605d824
  402db0:	mov    WORD PTR [edi+0x67],fs
  402db3:	pushf  
  402db4:	mov    ch,0x73
  402db6:	adc    dh,dl
  402db8:	retf   
  402db9:	push   edi
  402dba:	loope  0x402e2f
  402dbc:	and    DWORD PTR [edi],0xffffffe2
  402dbf:	scas   eax,DWORD PTR es:[edi]
  402dc0:	jge    0x402d89
  402dc2:	inc    esp
  402dc3:	les    eax,FWORD PTR [ebp+ebp*4-0x74]
  402dc7:	dec    esi
  402dc8:	jb     0x402df0
  402dca:	dec    edi
  402dcb:	xor    esi,esp
  402dcd:	ret    0x8707
  402dd0:	(bad)  
  402dd1:	jmp    0x402df3
  402dd3:	int    0x3f
  402dd5:	ss hlt 
  402dd7:	sbb    BYTE PTR [ecx+0x12ac6ef6],bh
  402ddd:	pop    edi
  402dde:	sbb    edx,DWORD PTR [edi]
  402de0:	mov    ecx,0xf835ba1f
  402de5:	(bad)  
  402de8:	adc    DWORD PTR [edx],ebx
  402dea:	inc    esi
  402deb:	ins    BYTE PTR es:[edi],dx
  402dec:	xor    DWORD PTR [esi+0x39],eax
  402def:	or     eax,eax
  402df1:	pop    edx
  402df2:	or     ebp,DWORD PTR [edx+0x72]
  402df5:	je     0x402dee
  402df7:	sub    edx,esp
  402df9:	bound  eax,QWORD PTR [esi+0x66]
  402dfc:	sbb    eax,0x573df3a6
  402e01:	pushf  
  402e02:	dec    ebp
  402e03:	mov    ebx,0xc7c3b022
  402e08:	sar    BYTE PTR [ebx],0xa4
  402e0b:	or     bl,dh
  402e0d:	lahf   
  402e0e:	mov    ebx,0x6eee8f22
  402e13:	inc    esp
  402e14:	fcomp  QWORD PTR [ebx]
  402e16:	mov    eax,ds:0x1d655d03
  402e1b:	mov    ah,0x10
  402e1e:	sub    eax,0xbf3535c7
  402e23:	cmp    eax,0x87ab65c5
  402e28:	in     eax,dx
  402e29:	mov    ecx,0x46493919
  402e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e2f:	ins    BYTE PTR es:[edi],dx
  402e30:	mov    edi,0x56f8449c
  402e35:	out    dx,al
  402e36:	arpl   WORD PTR [eax-0x317096f2],bx
  402e3c:	dec    edi
  402e3d:	or     DWORD PTR [ebx],eax
  402e3f:	jg     0x402e14
  402e41:	sbb    cl,BYTE PTR [ebp-0x3a6921b2]
  402e47:	les    edx,FWORD PTR [eax+0x5fffb8ed]
  402e4d:	std    
  402e4e:	(bad)  
  402e4f:	loopne 0x402ea5
  402e51:	into   
  402e52:	jle    0x402ecb
  402e54:	cli    
  402e55:	sbb    eax,0xab4bf4f1
  402e5a:	jns    0x402dea
  402e5c:	pop    ebp
  402e5d:	push   ecx
  402e5e:	js     0x402e0a
  402e60:	shl    DWORD PTR [eax],1
  402e62:	and    eax,0xdb9386ea
  402e67:	aaa    
  402e68:	sbb    edi,ecx
  402e6a:	xchg   esi,eax
  402e6b:	adc    ah,BYTE PTR [ecx-0x4a]
  402e6e:	or     DWORD PTR [ebx-0x10708350],edi
  402e74:	xchg   ecx,eax
  402e75:	jmp    0xbd839e29
  402e7a:	ins    BYTE PTR es:[edi],dx
  402e7b:	daa    
  402e7c:	out    dx,al
  402e7d:	sub    cl,BYTE PTR [ecx-0x78437466]
  402e83:	sub    BYTE PTR [eax+0x60],bh
  402e86:	je     0x402e9a
  402e88:	les    eax,FWORD PTR [ecx]
  402e8a:	adc    bl,BYTE PTR [ebx-0x63e28168]
  402e90:	pusha  
  402e91:	jo     0x402eb8
  402e93:	pop    edx
  402e94:	push   ebx
  402e95:	loop   0x402e73
  402e97:	jno    0x402e9d
  402e99:	aas    
  402e9a:	mov    bh,0xf5
  402e9c:	loopne 0x402e62
  402e9e:	dec    ebx
  402e9f:	add    esi,DWORD PTR es:[eax+0x64]
  402ea3:	or     DWORD PTR [esi+0xf08a76c],edx
  402ea9:	or     BYTE PTR [eax-0x26],dh
  402eac:	call   0xd32969c3
  402eb1:	cmp    BYTE PTR [edx+0x20],al
  402eb4:	push   ecx
  402eb5:	loopne 0x402e63
  402eb7:	dec    edi
  402eb8:	dec    ebp
  402eb9:	add    eax,0xc471b177
  402ebe:	xor    BYTE PTR [esi],dh
  402ec0:	inc    eax
  402ec1:	dec    ebx
  402ec2:	pop    ebp
  402ec3:	shr    al,cl
  402ec5:	cli    
  402ec6:	sbb    eax,0x7bfffe7a
  402ecb:	mov    ebx,0xda965618
  402ed0:	inc    ebp
  402ed1:	(bad)  
  402ed2:	out    0x5f,al
  402ed4:	and    DWORD PTR [ebp-0x43f5227c],edx
  402eda:	(bad)  
  402edb:	mov    bl,0xc2
  402edd:	adc    al,dh
  402edf:	nop
  402ee0:	jmp    0x402f14
  402ee2:	test   al,0x4
  402ee4:	outs   dx,BYTE PTR ds:[esi]
  402ee5:	xor    BYTE PTR [eax+0x6f],ah
  402ee8:	jb     0x402ef1
  402eea:	adc    BYTE PTR [edx+eiz*8-0x40],al
  402eee:	scas   al,BYTE PTR es:[edi]
  402eef:	in     eax,dx
  402ef0:	shl    al,cl
  402ef2:	arpl   WORD PTR [esi-0x664a0165],si
  402ef8:	pop    edx
  402ef9:	shl    DWORD PTR [ebx+0x30d19fa9],1
  402eff:	xor    edx,DWORD PTR [ebx-0x7fa10aa9]
  402f05:	into   
  402f06:	lods   eax,DWORD PTR ds:[esi]
  402f07:	(bad)  
  402f08:	loopne 0x402f19
  402f0a:	push   esp
  402f0b:	mov    al,ds:0x68d78893
  402f10:	jo     0x402ed8
  402f12:	std    
  402f13:	jle    0x402e97
  402f15:	push   esi
  402f16:	push   ecx
  402f17:	lea    edx,[ecx-0x24aa01ac]
  402f1d:	ret    0xb34a
  402f20:	jmp    0xe7e5305f
  402f25:	lahf   
  402f26:	shl    DWORD PTR [esi],0x3d
  402f29:	int3   
  402f2a:	sbb    eax,0x3220a39c
  402f2f:	(bad)  
  402f30:	repz arpl WORD PTR [ebx+0x10cdfca6],cx
  402f37:	pop    ebx
  402f38:	outs   dx,DWORD PTR ds:[esi]
  402f39:	retf   0x4e7c
  402f3c:	mov    dl,0xb6
  402f3e:	adc    DWORD PTR [edi-0x75],ebx
  402f41:	imul   edx,DWORD PTR [eax+0x24],0x36bef59a
  402f48:	js     0x402f3d
  402f4a:	(bad)  
  402f4b:	shr    DWORD PTR ds:0xef08aedb,cl
  402f51:	cmp    al,al
  402f53:	ins    BYTE PTR es:[edi],dx
  402f54:	sahf   
  402f55:	rol    DWORD PTR [ecx],0x88
  402f58:	xor    edi,ebp
  402f5a:	mov    bl,0x30
  402f5c:	and    al,0xf1
  402f5e:	int    0x50
  402f60:	int    0x39
  402f62:	outs   dx,DWORD PTR ds:[esi]
  402f63:	dec    edi
  402f64:	sbb    al,0xc3
  402f66:	mov    esp,0xae6965da
  402f6b:	popf   
  402f6c:	rol    DWORD PTR [ecx+eax*4-0x24],1
  402f70:	push   edx
  402f71:	ja     0x402fc0
  402f73:	mov    eax,ds:0xc040b6a
  402f78:	push   ss
  402f79:	and    ebp,DWORD PTR [edi+0x31]
  402f7c:	push   0x6d10caec
  402f81:	cmc    
  402f82:	sbb    bh,BYTE PTR [ebp-0x1d85b63b]
  402f88:	sub    BYTE PTR [esi],bl
  402f8a:	xchg   esi,eax
  402f8b:	fs in  eax,0x6b
  402f8e:	mov    cl,0x72
  402f90:	adc    al,0x7e
  402f92:	lds    edx,FWORD PTR [esi-0x4e345a24]
  402f98:	jns    0x402f93
  402f9a:	mov    BYTE PTR [ecx],ah
  402f9c:	cmp    eax,0xd65fadce
  402fa1:	jmp    0x403007
  402fa3:	(bad)  [esp+esi*2+0x3c]
  402fa7:	in     al,0xb2
  402fa9:	push   ebx
  402faa:	push   edx
  402fab:	push   esp
  402fac:	inc    BYTE PTR [esp+eiz*2+0x436fd6c0]
  402fb3:	push   esi
  402fb4:	jmp    0x402f7b
  402fb6:	push   edi
  402fb7:	xchg   esp,eax
  402fb8:	sub    BYTE PTR [ecx+0x7e],dh
  402fbb:	ins    BYTE PTR es:[edi],dx
  402fbc:	mov    esi,0x32eb55b3
  402fc1:	lods   al,BYTE PTR ds:[esi]
  402fc2:	aam    0xd7
  402fc4:	inc    eax
  402fc5:	pop    edi
  402fc6:	add    dl,BYTE PTR [ecx+0x11244c0c]
  402fcc:	fmul   QWORD PTR [ebx]
  402fce:	adc    eax,0xd24ac9d5
  402fd3:	xchg   ch,dh
  402fd5:	outs   dx,BYTE PTR ds:[esi]
  402fd6:	nop
  402fd7:	adc    eax,edi
  402fd9:	aaa    
  402fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fdb:	pop    ebp
  402fdc:	add    eax,0xb9582e5d
  402fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe2:	lods   al,BYTE PTR ds:[esi]
  402fe3:	mov    ?,WORD PTR [ebp+0x720d98ee]
  402fe9:	and    BYTE PTR [ebx+edi*4-0x4d],dl
  402fed:	popf   
  402fee:	adc    edi,DWORD PTR [ebx+0x74]
  402ff1:	push   cs
  402ff2:	sbb    ch,BYTE PTR [ecx-0x6]
  402ff5:	mov    esi,0x1a721fec
  402ffa:	stc    
  402ffb:	loop   0x402fbc
  402ffd:	sbb    BYTE PTR [esi],dl
  402fff:	mov    eax,ds:0xb6f92b01
  403004:	pop    ebp
  403005:	int3   
  403006:	jns    0x403034
  403008:	mov    ebp,0x134e127
  40300d:	jo     0x402fad
  40300f:	cmp    al,0xec
  403011:	cwde   
  403012:	ins    BYTE PTR es:[edi],dx
  403013:	sti    
  403014:	mov    eax,ds:0xe414e22f
  403019:	imul   ebx,DWORD PTR [edx-0x7748871f],0xff1bce47
  403023:	sbb    edx,ecx
  403025:	test   eax,0x85817fc
  40302a:	dec    eax
  40302b:	leave  
  40302c:	add    BYTE PTR [ebx*4+0x4b75f3d7],bh
  403033:	mov    cl,0xc5
  403035:	sub    dh,al
  403037:	ret    0x5804
  40303a:	rcr    ah,cl
  40303c:	imul   ebx,DWORD PTR [bx+si+0x5a03],0xfffffff8
  403042:	mov    WORD PTR ds:0x72b71283,ss
  403048:	nop
  403049:	push   0xffffffcd
  40304b:	into   
  40304c:	into   
  40304d:	bound  edx,QWORD PTR [ebx+0x7c]
  403050:	iret   
  403051:	pop    ds
  403052:	mov    dl,0x3f
  403054:	(bad)  
  403055:	dec    edx
  403056:	scas   al,BYTE PTR es:[edi]
  403057:	jge    0x403003
  403059:	scas   eax,DWORD PTR es:[edi]
  40305a:	adc    eax,0x1322d0cd
  40305f:	sahf   
  403060:	jge    0x4030ae
  403062:	shl    DWORD PTR [ecx+0x3170039],1
  403068:	push   ds
  403069:	sbb    eax,0x6d8739a3
  40306e:	pop    esi
  40306f:	mov    dl,0x50
  403071:	dec    esp
  403072:	sbb    eax,0xf99033b0
  403077:	shr    DWORD PTR [edx-0x1c19cb40],0x92
  40307e:	mov    DWORD PTR [ecx+0x1b],edx
  403081:	stos   DWORD PTR es:[edi],eax
  403082:	ret    
  403083:	jle    0x403067
  403085:	jb     0x403081
  403087:	fbld   TBYTE PTR [ecx]
  403089:	into   
  40308a:	jmp    0x4030e6
  40308c:	mov    al,al
  40308e:	adc    BYTE PTR [eax-0x4feb5287],bh
  403094:	sbb    BYTE PTR [ecx+0x63],bh
  403097:	fisttp QWORD PTR [esi]
  403099:	and    ch,dh
  40309b:	out    0xf2,eax
  40309d:	fldenv [eiz*8+0x20fabcfe]
  4030a4:	pop    es
  4030a5:	mov    bl,0xfa
  4030a7:	xor    DWORD PTR [ebx],0xffffffbc
  4030aa:	pop    edx
  4030ab:	mov    bl,0x32
  4030ad:	les    esi,FWORD PTR [ebx]
  4030af:	rcr    BYTE PTR [edi],0x81
  4030b2:	mov    al,0x9e
  4030b4:	shr    ah,1
  4030b6:	inc    ebx
  4030b7:	mov    al,ds:0x7f0029b7
  4030bc:	mov    esp,0xe7c81e34
  4030c1:	cld    
  4030c2:	dec    esp
  4030c3:	mov    esi,0x14da7d0e
  4030c8:	pop    esi
  4030c9:	sub    DWORD PTR [esi+edx*4],esi
  4030cc:	repnz (bad) fs:[eax+eiz*1+0x72]
  4030d2:	ror    BYTE PTR [ebx+ebp*1],0x91
  4030d6:	in     al,dx
  4030d7:	les    esp,FWORD PTR es:[ecx+0x6f41340f]
  4030de:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4030e0:	inc    edx
  4030e1:	(bad)  
  4030e2:	pushf  
  4030e3:	lods   eax,DWORD PTR ds:[esi]
  4030e4:	xor    DWORD PTR [ebp-0x3fefe28],edi
  4030ea:	pop    edi
  4030eb:	cmp    BYTE PTR [esi+0x6f04a197],0xc6
  4030f2:	scas   eax,DWORD PTR es:[edi]
  4030f3:	inc    ebx
  4030f4:	dec    eax
  4030f5:	adc    esp,eax
  4030f7:	cmp    BYTE PTR [edi+eiz*1-0x2f25f0ad],ch
  4030fe:	call   0x6b92:0x4f06f385
  403105:	pushf  
  403106:	sti    
  403107:	mov    cl,0x67
  403109:	pushf  
  40310a:	pop    ss
  40310b:	mov    DWORD PTR [edi+0xe],ebp
  40310e:	pushf  
  40310f:	ja     0x4030e5
  403111:	std    
  403112:	daa    
  403113:	mov    edi,0x1fd961cc
  403118:	pop    esp
  403119:	ins    BYTE PTR es:[edi],dx
  40311a:	sub    BYTE PTR [ebx],dh
  40311c:	xchg   ebp,eax
  40311d:	mov    dl,0x2f
  40311f:	cmp    BYTE PTR [ecx+esi*8-0x40],bl
  403123:	mov    dh,0xc7
  403125:	cmc    
  403126:	add    eax,0xe81f2b60
  40312b:	jle    0x4030bd
  40312d:	or     al,0x19
  40312f:	cwde   
  403130:	ror    BYTE PTR [edi],cl
  403132:	les    ebp,FWORD PTR [ebp+0x2f]
  403135:	jp     0x4030ec
  403137:	into   
  403138:	mov    ecx,0x12cf2772
  40313d:	test   eax,0xf4b22ceb
  403142:	es jmp 0xcffbad95
  403148:	push   eax
  403149:	mov    ebp,0x1ec9962b
  40314e:	fild   WORD PTR [edx+ebp*8-0x30]
  403152:	xchg   ebx,eax
  403153:	sahf   
  403154:	xchg   edx,eax
  403155:	adc    edi,esp
  403157:	jl     0x403129
  403159:	sub    ch,BYTE PTR [ecx]
  40315b:	add    cl,BYTE PTR [ebx]
  40315d:	std    
  40315e:	mov    ah,0x27
  403160:	xor    DWORD PTR [eax+0x7aa415e2],0x2f
  403167:	dec    ebp
  403168:	ror    ecx,0xad
  40316b:	out    0xef,al
  40316d:	stos   DWORD PTR es:[edi],eax
  40316e:	adc    dh,BYTE PTR [esi-0x14775a2c]
  403174:	push   ebx
  403175:	mov    edx,0x3797f3b0
  40317a:	xchg   ebp,eax
  40317b:	dec    edi
  40317c:	push   esi
  40317d:	jae    0x4031b0
  40317f:	imul   ecx,DWORD PTR [esi-0x9],0x1
  403183:	or     ebx,DWORD PTR [ebx-0x45]
  403186:	inc    ebp
  403187:	into   
  403188:	test   eax,0x165a3460
  40318d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318e:	pushf  
  40318f:	fs xchg edx,eax
  403191:	cmp    DWORD PTR [eax-0x3defa39b],0xb6cd3e8e
  40319b:	adc    al,0xeb
  40319d:	pop    ds
  40319e:	xor    al,0x86
  4031a0:	cmp    eax,0x544290f8
  4031a5:	ss jp  0x4031de
  4031a8:	icebp  
  4031a9:	inc    dl
  4031ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ac:	push   ebx
  4031ad:	outs   dx,BYTE PTR ds:[esi]
  4031ae:	jmp    0x40318a
  4031b0:	je     0x4031eb
  4031b2:	into   
  4031b3:	test   BYTE PTR [ecx+0x53],ch
  4031b6:	pop    ss
  4031b7:	pusha  
  4031b8:	cmp    esp,DWORD PTR [esi]
  4031ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031bb:	and    eax,0x9cdb7b75
  4031c0:	loopne 0x4031bf
  4031c2:	dec    BYTE PTR [edx]
  4031c4:	sbb    DWORD PTR [ebp-0xa],esi
  4031c7:	ret    
  4031c8:	retf   
  4031c9:	fistp  DWORD PTR [esi+0x1f]
  4031cc:	xchg   ch,ch
  4031ce:	(bad)  
  4031d0:	loopne 0x403169
  4031d2:	icebp  
  4031d3:	loopne 0x403158
  4031d5:	rol    DWORD PTR [esi-0x7b],1
  4031d8:	inc    edx
  4031d9:	push   ebp
  4031da:	rol    BYTE PTR [esi],1
  4031dc:	test   eax,0x5902af2a
  4031e1:	ret    0x9ffe
  4031e4:	or     ch,al
  4031e6:	rcpps  xmm6,xmm2
  4031e9:	gs test al,0x1a
  4031ec:	outs   dx,BYTE PTR ds:[esi]
  4031ed:	pop    esi
  4031ee:	stos   BYTE PTR es:[edi],al
  4031ef:	lock arpl WORD PTR [ecx],cx
  4031f2:	xlat   BYTE PTR ds:[ebx]
  4031f3:	(bad)  
  4031f5:	sbb    ch,al
  4031f7:	fwait
  4031f8:	xchg   esi,eax
  4031f9:	clc    
  4031fa:	push   ecx
  4031fb:	mov    eax,ds:0xa3b8c598
  403200:	fwait
  403201:	jmp    0xc8a615e5
  403206:	and    al,0xa
  403208:	fidiv  WORD PTR [eax-0x6]
  40320b:	jle    0x403221
  40320d:	mov    cl,BYTE PTR [edx]
  40320f:	sti    
  403210:	dec    eax
  403211:	out    0x78,eax
  403213:	cwde   
  403214:	dec    eax
  403215:	pusha  
  403216:	rcl    DWORD PTR [edi+0x79b60cc3],0xc4
  40321d:	cwde   
  40321e:	adc    eax,0x9469dfa4
  403223:	jb     0x4031f1
  403225:	les    ebp,FWORD PTR [edi]
  403227:	adc    eax,0x53c8d9fb
  40322c:	scas   eax,DWORD PTR es:[edi]
  40322d:	sub    eax,0xc78e252a
  403232:	xchg   BYTE PTR [ecx-0x14],dh
  403235:	pop    ecx
  403236:	outs   dx,BYTE PTR ds:[esi]
  403237:	dec    ebp
  403238:	lock cmp al,BYTE PTR [edi-0x3a]
  40323c:	mov    bh,BYTE PTR gs:[esi+esi*1]
  403240:	mov    bl,BYTE PTR [esi+esi*1+0x2a838877]
  403247:	add    DWORD PTR [ebp-0x58900c00],eax
  40324d:	cmp    al,BYTE PTR [ebp-0x5a]
  403250:	mov    bh,0x5b
  403252:	bound  esi,QWORD PTR [edi+ebp*4-0x3b]
  403256:	les    ebp,FWORD PTR [ebx+0x42]
  403259:	loopne 0x4032d9
  40325b:	fnstcw WORD PTR [eax+0x5ce2b1b9]
  403261:	dec    edx
  403262:	mov    al,0x61
  403264:	dec    ebx
  403265:	jecxz  0x403253
  403267:	push   esi
  403268:	mul    DWORD PTR [ecx-0x19505761]
  40326e:	sar    DWORD PTR [edx],0x48
  403271:	shr    al,cl
  403273:	jbe    0x403274
  403275:	sbb    bl,BYTE PTR ds:0xcf8c96f7
  40327b:	stos   DWORD PTR es:[edi],eax
  40327c:	ins    BYTE PTR es:[edi],dx
  40327d:	mov    dl,0x7d
  40327f:	lahf   
  403280:	ror    ebx,0xbd
  403283:	and    BYTE PTR [edx-0x41],al
  403286:	shl    DWORD PTR [eax+0x550e3c8f],1
  40328c:	mov    eax,ds:0x74c602cd
  403291:	lahf   
  403292:	jbe    0x4032a0
  403294:	(bad)  
  403295:	and    edi,DWORD PTR [ebx]
  403297:	inc    edi
  403298:	jnp    0x4032d4
  40329a:	fnstcw WORD PTR [eax+0x4a]
  40329d:	push   cs
  40329e:	xchg   ecx,eax
  40329f:	sbb    eax,0x3b9a09b4
  4032a4:	dec    edx
  4032a5:	dec    ecx
  4032a6:	rcl    DWORD PTR [ebx],1
  4032a8:	xor    BYTE PTR [edi],0xbf
  4032ab:	push   ebx
  4032ac:	mov    cl,0x26
  4032ae:	adc    edi,eax
  4032b0:	xor    DWORD PTR [eax+0x20],ebp
  4032b3:	leave  
  4032b4:	sub    bl,BYTE PTR [edx]
  4032b6:	sbb    ebx,ebp
  4032b8:	test   al,0x20
  4032ba:	out    dx,al
  4032bb:	bound  edx,QWORD PTR [ebp-0x2c42bde5]
  4032c1:	stos   BYTE PTR es:[edi],al
  4032c2:	pop    esi
  4032c3:	cmp    BYTE PTR [ebp-0x6b],ch
  4032c6:	push   ebx
  4032c7:	or     BYTE PTR [edx+0xd41d6dd],dl
  4032cd:	mov    BYTE PTR [esi],ch
  4032cf:	ror    BYTE PTR [edx],cl
  4032d1:	lods   eax,DWORD PTR ds:[esi]
  4032d2:	mov    eax,0x816657cb
  4032d7:	test   BYTE PTR [edi],cl
  4032d9:	aaa    
  4032da:	sbb    dh,BYTE PTR [ebp-0x7d]
  4032dd:	mov    ch,ah
  4032df:	cmp    DWORD PTR [esi],0x1e88f51f
  4032e5:	fwait
  4032e6:	mul    DWORD PTR [eax-0x1da3454]
  4032ec:	inc    esp
  4032ed:	fs das 
  4032ef:	in     al,dx
  4032f0:	inc    ebx
  4032f1:	inc    edx
  4032f2:	cmp    esp,DWORD PTR [eax-0x49a7d967]
  4032f8:	pop    ss
  4032f9:	xchg   edx,eax
  4032fa:	cdq    
  4032fb:	outs   dx,DWORD PTR ds:[esi]
  4032fc:	dec    esi
  4032fd:	jmp    0x403315
  4032ff:	fadd   DWORD PTR ds:[edx+0x74]
  403303:	pop    esi
  403304:	jo     0x4032f9
  403306:	xchg   edx,eax
  403307:	push   ds
  403308:	loopne 0x4032c7
  40330a:	dec    esp
  40330b:	mov    DWORD PTR [eiz*1+0x11315228],ebx
  403312:	sbb    al,ah
  403314:	mov    gs,WORD PTR [ebx-0x32]
  403317:	pop    ss
  403318:	dec    edx
  403319:	lds    edi,FWORD PTR [esi+0x3d]
  40331c:	jns    0x403362
  40331e:	call   0x7e122844
  403323:	mov    dl,0x65
  403325:	fmul   DWORD PTR [esi+0x28]
  403328:	pop    ebp
  403329:	imul   esi,DWORD PTR [edx-0x57],0x1e
  40332d:	mov    edx,DWORD PTR [ebp-0x78]
  403330:	add    al,cl
  403332:	or     DWORD PTR es:[ebp+0x79739e33],ebp
  403339:	jg     0x403323
  40333b:	lea    esp,[ebp+ecx*1-0x25]
  40333f:	inc    esi
  403340:	sbb    eax,0x8fcb2618
  403345:	stc    
  403346:	aas    
  403347:	mov    ebp,0x73081ecb
  40334c:	mov    ah,dl
  40334e:	lds    eax,FWORD PTR [eax-0x58]
  403351:	pop    ds
  403352:	add    BYTE PTR [edi+eax*4],dl
  403355:	fnstcw WORD PTR [edx]
  403357:	out    dx,eax
  403358:	jle    0x4033d7
  40335a:	es mov bl,0x8e
  40335d:	retf   0x25b7
  403360:	repnz add edx,DWORD PTR ss:[ecx+0x14]
  403365:	ret    
  403366:	mov    al,0x84
  403368:	jg     0x4033d9
  40336a:	call   0xfc71:0x78e32340
  403371:	(bad)
  403375:	enter  0xdd3d,0x4d
  403379:	pop    ebp
  40337a:	aad    0x9d
  40337c:	xchg   ecx,eax
  40337d:	addr16 ja 0x403383
  403380:	or     ebx,esi
  403382:	jecxz  0x4033e4
  403384:	fs dec edi
  403386:	je     0x4033ca
  403388:	popa   
  403389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338a:	(bad)  
  40338b:	out    dx,eax
  40338c:	out    dx,eax
  40338d:	mov    dh,0xb
  40338f:	mov    ch,0x7e
  403391:	and    DWORD PTR [ebx],ebp
  403393:	jmp    0x4033d3
  403395:	adc    al,0x77
  403397:	jecxz  0x4033c6
  403399:	test   al,0x3
  40339b:	das    
  40339c:	jnp    0x4033a6
  40339e:	stos   DWORD PTR es:[edi],eax
  40339f:	pop    esi
  4033a0:	lahf   
  4033a1:	jnp    0x40335b
  4033a3:	dec    esi
  4033a4:	push   eax
  4033a5:	mov    eax,0xb4d18311
  4033aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ab:	xchg   ebx,eax
  4033ac:	sbb    eax,0xe1671474
  4033b1:	fnstcw WORD PTR [edx-0x578a1129]
  4033b7:	mov    dl,BYTE PTR [ebp+0x69]
  4033ba:	js     0x403429
  4033bc:	shr    DWORD PTR [ebx],cl
  4033be:	pop    ds
  4033bf:	popa   
  4033c0:	lea    ecx,[esi-0x4c2d3368]
  4033c6:	push   ebp
  4033c7:	xor    edi,DWORD PTR [ecx+0x3b]
  4033ca:	adc    BYTE PTR [esi],al
  4033cc:	ds out dx,eax
  4033ce:	daa    
  4033cf:	mov    bh,0x7e
  4033d1:	(bad)  
  4033d2:	stos   BYTE PTR es:[edi],al
  4033d3:	sub    BYTE PTR [edi-0x4b],0xe4
  4033d7:	lods   eax,DWORD PTR ds:[esi]
  4033d8:	popf   
  4033d9:	dec    edx
  4033da:	outs   dx,BYTE PTR ds:[esi]
  4033db:	cmp    al,0x8
  4033dd:	hlt    
  4033de:	mov    esi,DWORD PTR [ebx-0x2088e111]
  4033e4:	popa   
  4033e5:	shr    DWORD PTR [edx-0x3e],0xf0
  4033e9:	aaa    
  4033ea:	inc    ecx
  4033eb:	mov    ch,dh
  4033ed:	push   ecx
  4033ee:	rcr    BYTE PTR [eax],1
  4033f0:	retf   0x6bc7
  4033f3:	retf   
  4033f4:	xor    al,0x5d
  4033f6:	(bad)  
  4033f7:	xchg   edx,eax
  4033f8:	add    eax,eax
  4033fa:	sbb    edx,ebx
  4033fc:	mov    bl,0xb8
  4033fe:	jle    0x403451
  403400:	dec    ebp
  403401:	jne    0x40346b
  403403:	gs in  al,dx
  403405:	je     0x40341f
  403407:	js     0x4033cc
  403409:	aad    0xf2
  40340b:	inc    esp
  40340c:	arpl   si,bp
  40340e:	mov    dh,0xb1
  403410:	int3   
  403411:	jo     0x40347c
  403413:	jmp    0x86dc08b7
  403418:	out    dx,eax
  403419:	popa   
  40341a:	sbb    edx,DWORD PTR [edi+0x3ab03c65]
  403420:	sbb    eax,0x9fdd08ea
  403425:	cmp    eax,0x542fe53e
  40342a:	mov    BYTE PTR [ecx-0x5686dcb6],dh
  403430:	and    BYTE PTR [eax+ebx*8+0xe],dl
  403434:	mov    ds:0x8a06d646,eax
  403439:	pop    esi
  40343a:	ins    DWORD PTR es:[edi],dx
  40343b:	es pop ebp
  40343d:	xchg   edx,eax
  40343e:	sub    ah,cl
  403440:	add    esi,DWORD PTR [esi+0x6b305397]
  403446:	adc    edx,edx
  403448:	mov    bh,0xb9
  40344a:	iret   
  40344b:	call   0xf102:0xfb804064
  403452:	pop    es
  403453:	jns    0x4033eb
  403455:	mov    cl,BYTE PTR [ebx]
  403457:	add    DWORD PTR [esp+eax*8-0x33252e9e],ecx
  40345e:	(bad)  
  40345f:	fcom   QWORD PTR [esi+0x204b1d47]
  403465:	fisttp WORD PTR [ecx+0x3cf412cb]
  40346b:	pop    esi
  40346c:	sub    bh,0xe1
  40346f:	or     al,0xb9
  403471:	std    
  403472:	and    eax,0x42c76dac
  403477:	mov    al,ds:0x25d9717d
  40347c:	lods   eax,DWORD PTR ds:[esi]
  40347d:	jg     0x40343a
  40347f:	std    
  403480:	mov    edx,0x53420c75
  403485:	sbb    DWORD PTR [eax+0x2],ebp
  403488:	nop
  403489:	sub    eax,0xd66af01f
  40348e:	jbe    0x403489
  403490:	rcr    BYTE PTR [ebp-0x43],cl
  403493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403494:	xchg   esi,eax
  403495:	lahf   
  403496:	cdq    
  403497:	xchg   esi,eax
  403498:	icebp  
  403499:	add    BYTE PTR [ecx+0x1ab626b8],0x18
  4034a0:	bound  ebx,QWORD PTR [ebx+esi*8]
  4034a3:	dec    esp
  4034a4:	mov    dh,0x23
  4034a6:	lahf   
  4034a7:	pop    ebx
  4034a8:	xchg   edi,eax
  4034a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034aa:	fstp   DWORD PTR [esi]
  4034ac:	jbe    0x403470
  4034ae:	call   0xd1c0:0x5c947a65
  4034b5:	in     eax,dx
  4034b6:	ins    DWORD PTR es:[edi],dx
  4034b7:	lods   eax,DWORD PTR ds:[esi]
  4034b8:	pop    ss
  4034b9:	sbb    al,0x75
  4034bb:	pop    eax
  4034bc:	inc    eax
  4034bd:	imul   edi,DWORD PTR [ebx],0xfffffff3
  4034c0:	adc    al,0x69
  4034c2:	sub    al,0xd
  4034c4:	mov    ch,0x7b
  4034c6:	add    DWORD PTR [eax+eax*1+0x1],ebx
  4034ca:	sbb    DWORD PTR [edx-0x25aacf4e],0xb2ed0f6
  4034d4:	adc    esi,esi
  4034d6:	inc    eax
  4034d7:	jmp    0x8f1289d
  4034dc:	and    BYTE PTR [ebp+eax*4-0x68ee7050],bh
  4034e3:	xlat   BYTE PTR ds:[ebx]
  4034e4:	inc    edi
  4034e5:	xchg   ebp,eax
  4034e6:	or     eax,0x2db6e070
  4034eb:	inc    esi
  4034ec:	lods   al,BYTE PTR ds:[esi]
  4034ed:	mov    esi,0xea454dc
  4034f2:	mov    ds:0x8fc25d7d,eax
  4034f7:	nop
  4034f8:	mov    esi,0x3b990f2a
  4034fd:	jnp    0x403568
  4034ff:	xchg   edi,eax
  403500:	jno    0x4034c6
  403502:	ret    
  403503:	fs pop esp
  403505:	mov    ecx,0x3a2ab559
  40350a:	aam    0xa9
  40350c:	sti    
  40350d:	gs pop esi
  40350f:	fistp  WORD PTR [edi+0x68]
  403512:	xor    al,bh
  403514:	inc    ecx
  403515:	sbb    DWORD PTR [esi+0x68],ecx
  403518:	xchg   esi,eax
  403519:	leave  
  40351a:	xchg   BYTE PTR [eax],cl
  40351c:	xor    edx,esi
  40351e:	push   ecx
  40351f:	dec    ebx
  403520:	cmp    DWORD PTR [esi+0x51],esi
  403523:	stos   DWORD PTR es:[edi],eax
  403524:	dec    ecx
  403525:	adc    eax,0x5e8290a2
  40352a:	shr    ebp,cl
  40352c:	sahf   
  40352d:	adc    DWORD PTR [edi+0x3],ebp
  403530:	out    0xc2,al
  403532:	jge    0x4034b6
  403534:	cs sbb al,0xa6
  403537:	pop    es
  403538:	dec    edi
  403539:	fimul  DWORD PTR [edi+0x5b]
  40353c:	adc    dh,BYTE PTR [edx]
  40353e:	xchg   ebx,eax
  40353f:	sub    cl,BYTE PTR [esi+0x5e]
  403542:	shl    BYTE PTR [edx],0x21
  403545:	add    BYTE PTR [ebx],ah
  403547:	xor    BYTE PTR [edx+0x7925e2be],dh
  40354d:	aam    0x8
  40354f:	test   eax,0xad06b825
  403554:	ffreep st(1)
  403556:	and    BYTE PTR [esi],ch
  403558:	es sub eax,0x6d8d37e3
  40355e:	outs   dx,DWORD PTR ds:[esi]
  40355f:	jbe    0x403512
  403561:	and    esi,DWORD PTR [eax+0xe]
  403564:	lds    ebp,FWORD PTR [ebx-0x6585727e]
  40356a:	popa   
  40356b:	jmp    0x2ab1:0xad29f243
  403572:	push   esp
  403573:	out    dx,eax
  403574:	icebp  
  403575:	inc    esp
  403576:	xchg   esp,eax
  403577:	lods   al,BYTE PTR ds:[esi]
  403578:	mov    ebx,0x54508f6f
  40357d:	mov    al,ds:0x81d171c3
  403582:	int3   
  403583:	mov    ecx,0xc591173e
  403588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403589:	and    cl,BYTE PTR ds:0x745cb36a
  40358f:	pop    esp
  403590:	sbb    al,0xc0
  403592:	add    BYTE PTR [ecx+0x4d],dh
  403595:	sub    bh,dh
  403597:	mov    ebp,0xb285920d
  40359c:	dec    edx
  40359d:	test   eax,0xfc2ea60d
  4035a2:	push   ds
  4035a3:	in     eax,0x1b
  4035a5:	xor    BYTE PTR [edi],ah
  4035a7:	dec    edi
  4035a8:	jge    0x403551
  4035aa:	in     eax,0x2a
  4035ac:	inc    ebp
  4035ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ae:	add    ecx,DWORD PTR [edx-0x69]
  4035b1:	scas   eax,DWORD PTR es:[edi]
  4035b2:	and    dh,bh
  4035b4:	inc    edi
  4035b5:	adc    eax,0x6891361e
  4035ba:	ins    DWORD PTR es:[edi],dx
  4035bb:	mov    ds:0x64f1019d,eax
  4035c0:	xchg   BYTE PTR [edx+0x354c83e2],ah
  4035c6:	hlt    
  4035c7:	imul   BYTE PTR [ebp+0x66]
  4035ca:	xor    eax,DWORD PTR [eax]
  4035cc:	inc    eax
  4035cd:	xchg   ebx,eax
  4035ce:	jb     0x40356b
  4035d0:	mov    bh,dh
  4035d2:	dec    ecx
  4035d3:	dec    edx
  4035d4:	push   cs
  4035d5:	shl    esp,cl
  4035d7:	fs adc al,0xc4
  4035da:	sbb    eax,0xc7029a3
  4035df:	push   ss
  4035e0:	call   0xe8aec455
  4035e5:	sbb    esi,DWORD PTR [esi-0x74308409]
  4035eb:	mov    cl,BYTE PTR ds:0x7790cebc
  4035f1:	shr    DWORD PTR [ecx],cl
  4035f3:	add    DWORD PTR [ebp-0x6],edi
  4035f6:	sahf   
  4035f7:	dec    edx
  4035f8:	xchg   ebp,eax
  4035f9:	xor    ebx,DWORD PTR [edi+0x63]
  4035fc:	mov    cl,0x78
  4035fe:	mov    bh,0x46
  403600:	sbb    ah,dl
  403602:	(bad)  
  403603:	dec    ecx
  403604:	xor    dl,BYTE PTR [eax]
  403606:	cmc    
  403607:	inc    edi
  403608:	imul   ebp,DWORD PTR [edx-0x475e86b9],0xffffffa9
  40360f:	int3   
  403610:	adc    al,0x68
  403612:	dec    edx
  403613:	mov    ebp,0xfc8adf5e
  403618:	enter  0x71d6,0xe7
  40361c:	sbb    eax,0x9e3eabbe
  403621:	inc    edi
  403622:	cmc    
  403623:	(bad)  
  403624:	inc    ebx
  403625:	addr16 and al,0xde
  403628:	push   0x63
  40362a:	retf   
  40362b:	int3   
  40362c:	pop    ebx
  40362d:	in     al,0xfd
  40362f:	mov    ds:0x6de89b5d,eax
  403634:	sub    BYTE PTR [edi+0x78c90bac],0x22
  40363b:	fld    QWORD PTR [esi-0x1b]
  40363e:	adc    dl,BYTE PTR [ecx-0x43]
  403641:	fcom   QWORD PTR [ebx]
  403643:	and    eax,0x5bbda983
  403648:	leave  
  403649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40364a:	dec    edx
  40364b:	mov    edx,0xa16445ee
  403650:	xor    esi,DWORD PTR es:[edx]
  403653:	std    
  403654:	xchg   edi,eax
  403655:	mov    ecx,0xd345409f
  40365a:	(bad)  
  40365b:	push   cs
  40365c:	jle    0x4036cc
  40365e:	les    esi,FWORD PTR [esi-0x15]
  403661:	(bad)  
  403662:	sbb    eax,0x78aa9bbc
  403667:	maskmovq mm1,(bad)
  403668:	test   DWORD PTR ds:0x5ed6f97c,0x5454b2af
  403672:	int    0xed
  403674:	inc    edi
  403675:	mov    bl,0x6
  403677:	test   DWORD PTR [ebx+0x2cf3b88d],ebp
  40367d:	(bad)  
  40367e:	xor    BYTE PTR [ebx+0x1b77ab33],ch
  403684:	imul   edi,DWORD PTR [ebx+0x7fe8f79b],0xce7b62f5
  40368e:	sub    esp,DWORD PTR [edi-0xf9dd31a]
  403694:	jnp    0x4036d2
  403696:	retf   0x96f3
  403699:	ja     0x40361c
  40369b:	xlat   BYTE PTR ds:[ebx]
  40369c:	aam    0xa1
  40369e:	aad    0x54
  4036a0:	cmp    dl,BYTE PTR [edi+edi*2]
  4036a3:	mov    ebx,0x42489ad5
  4036a8:	jo     0x403668
  4036aa:	fwait
  4036ab:	dec    BYTE PTR [ebp-0x24]
  4036ae:	pop    eax
  4036af:	push   es
  4036b0:	sbb    DWORD PTR [eax+0x5f2331d0],esp
  4036b6:	sbb    DWORD PTR [edi],edx
  4036b8:	scas   eax,DWORD PTR es:[edi]
  4036b9:	or     eax,0xc25f3fc4
  4036be:	adc    esi,DWORD PTR [ebp-0x4d]
  4036c1:	es jne 0x403661
  4036c4:	sbb    BYTE PTR [ebp-0x129e6adf],bl
  4036ca:	leave  
  4036cb:	or     BYTE PTR [edx-0x73ef266c],cl
  4036d1:	or     BYTE PTR [ebx+0x32],al
  4036d4:	imul   esp,DWORD PTR [ebx+0x147b28b4],0xffffffc7
  4036db:	pusha  
  4036dc:	mov    ch,0xb7
  4036de:	aad    0x2e
  4036e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e1:	xchg   BYTE PTR [edi],cl
  4036e3:	jae    0x4036e6
  4036e5:	pop    esp
  4036e6:	scas   eax,DWORD PTR es:[edi]
  4036e7:	imul   esi,ecx,0x6
  4036ea:	jb     0x40372b
  4036ec:	jle    0x40375f
  4036ee:	dec    edx
  4036ef:	fistp  WORD PTR [ebx-0x7569dedb]
  4036f5:	xchg   edi,eax
  4036f6:	sbb    DWORD PTR [eax],ecx
  4036f8:	ror    BYTE PTR [edx+0x4ef16b17],0xef
  4036ff:	mov    ebx,es
  403701:	ja     0x4036f0
  403703:	xor    DWORD PTR [ebx],edi
  403705:	imul   ebx,esp,0x52
  403708:	pop    es
  403709:	jge    0x40376f
  40370b:	cli    
  40370c:	mov    WORD PTR [ecx+0x3305cd63],gs
  403712:	push   edx
  403713:	das    
  403714:	mov    ebx,0xd876cb41
  403719:	shl    BYTE PTR [ebx-0x1fbb1da3],0x28
  403720:	add    BYTE PTR [esi+0x279d74e1],dl
  403726:	(bad)  
  403727:	cmc    
  403728:	enter  0xf352,0x52
  40372c:	rcr    BYTE PTR [ebx],1
  40372e:	mov    eax,0xe9d3e692
  403733:	lea    edi,[edi+0x63fd57a7]
  403739:	in     al,dx
  40373a:	sbb    eax,0xbd680df4
  40373f:	and    DWORD PTR cs:[eax+0x41],ebx
  403743:	adc    al,0x2f
  403745:	pop    es
  403746:	pop    esi
  403747:	retf   
  403748:	out    0x53,eax
  40374a:	pop    ss
  40374b:	in     al,dx
  40374c:	sbb    bh,BYTE PTR [eax-0x55]
  40374f:	sahf   
  403750:	clc    
  403751:	xchg   esp,eax
  403752:	add    eax,0x13abb990
  403757:	mov    BYTE PTR [ecx-0x28d5c8f0],bh
  40375d:	pop    es
  40375e:	mov    bl,0x73
  403760:	mov    dl,0xaa
  403762:	jne    0x403794
  403764:	add    al,0x52
  403766:	scas   al,BYTE PTR es:[edi]
  403767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403768:	std    
  403769:	jmp    0x95c0804b
  40376e:	scas   al,BYTE PTR es:[edi]
  40376f:	jb     0x403736
  403771:	push   ecx
  403772:	adc    dl,cl
  403774:	xor    al,BYTE PTR [ecx]
  403776:	sub    ch,BYTE PTR ds:0x17e1efb3
  40377c:	or     DWORD PTR [edi+0x3b5f926b],ecx
  403782:	jo     0x4037e5
  403784:	int3   
  403785:	cld    
  403786:	fsub   DWORD PTR [esi+0x3810eecd]
  40378c:	fcom   QWORD PTR [edx+0x57]
  40378f:	lods   eax,DWORD PTR ds:[esi]
  403790:	aad    0x16
  403792:	mov    DWORD PTR [ebx+0x60],edx
  403795:	mul    bh
  403797:	or     al,0xa5
  403799:	mov    bl,0xfc
  40379b:	and    BYTE PTR [ecx+edx*8],bl
  40379e:	loope  0x403800
  4037a0:	or     al,0x6
  4037a2:	mov    esp,0x377f63fa
  4037a7:	add    eax,0x9b519d7
  4037ac:	out    dx,eax
  4037ad:	add    edi,edi
  4037af:	sar    ah,cl
  4037b1:	neg    bh
  4037b3:	cld    
  4037b4:	sti    
  4037b5:	sar    bh,1
  4037b7:	or     al,0x24
  4037b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ba:	arpl   WORD PTR [ebx],sp
  4037bc:	shr    DWORD PTR [esi+esi*4+0x41a196c4],cl
  4037c3:	and    al,0x33
  4037c5:	and    al,0x41
  4037c7:	js     0x4037c7
  4037c9:	loopne 0x403754
  4037cb:	sub    ebp,DWORD PTR [ebx-0x2]
  4037ce:	mov    edx,0xee7f39e0
  4037d3:	push   0xffffff9f
  4037d5:	add    BYTE PTR [edi],ch
  4037d7:	nop
  4037d8:	xor    al,0x51
  4037da:	xor    al,0x82
  4037dc:	out    dx,al
  4037dd:	mov    ah,BYTE PTR [ebx-0x2d]
  4037e0:	cmp    eax,ebp
  4037e2:	lods   eax,DWORD PTR ds:[esi]
  4037e3:	mov    esp,0xbd23f9f
  4037e8:	adc    al,BYTE PTR [edx-0x2f255c4]
  4037ee:	xchg   edi,eax
  4037ef:	imul   eax,DWORD PTR [ebx-0x61070edc],0x57
  4037f6:	mov    esp,0x939c09af
  4037fb:	jno    0x4037c0
  4037fd:	or     esp,DWORD PTR [ebp+0x4dd0db72]
  403803:	sbb    BYTE PTR [ebx+edi*1-0x40],dl
  403807:	mov    ds:0x7614ac21,eax
  40380c:	mov    eax,ds:0x93c819
  403811:	mov    dl,0xc3
  403813:	xchg   BYTE PTR [ebp-0x7b554252],dh
  403819:	(bad)  
  40381a:	pop    edi
  40381b:	sar    BYTE PTR [ebp+0x49bda8ac],cl
  403821:	dec    ebp
  403822:	lods   eax,DWORD PTR ds:[esi]
  403823:	stos   DWORD PTR es:[edi],eax
  403824:	sub    ebx,DWORD PTR [edi]
  403826:	lock mov ch,0x3c
  403829:	mov    al,ds:0xd83e57b0
  40382e:	mov    esp,0x87913a26
  403833:	add    DWORD PTR [esi],ecx
  403835:	pop    ebp
  403836:	popf   
  403837:	jne    0x4037ce
  403839:	jp     0x403849
  40383b:	sub    al,0xc0
  40383d:	and    edi,ecx
  40383f:	push   0x6178dbb9
  403844:	repnz in eax,dx
  403846:	clc    
  403847:	push   ebp
  403848:	bound  ebp,QWORD PTR [edi+0x3427a9f3]
  40384e:	iret   
  40384f:	inc    eax
  403850:	pop    ebp
  403851:	inc    ebp
  403852:	mov    cl,BYTE PTR [edi-0x22]
  403855:	test   edi,0x5fb0f577
  40385b:	dec    edx
  40385c:	push   ecx
  40385d:	or     eax,DWORD PTR [edi-0x75]
  403860:	loopne 0x4038bf
  403862:	add    ebx,eax
  403864:	cli    
  403865:	push   esi
  403866:	out    0x30,eax
  403868:	jmp    0x7f98eddd
  40386d:	inc    eax
  40386e:	cmp    edi,DWORD PTR [ecx+eiz*8+0x3]
  403872:	inc    ecx
  403873:	loopne 0x403819
  403875:	inc    edi
  403876:	out    0xe2,al
  403878:	sbb    DWORD PTR [ebx-0x10],0x4
  40387c:	into   
  40387d:	fimul  DWORD PTR [edx]
  40387f:	mov    ah,0x64
  403881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403882:	and    ah,BYTE PTR fs:[esi+esi*8]
  403886:	push   edi
  403887:	fstp   TBYTE PTR [esi-0x7bc2ea42]
  40388d:	adc    DWORD PTR [edi-0x4f42c943],ebp
  403893:	cdq    
  403894:	jne    0x40388e
  403896:	icebp  
  403897:	dec    ecx
  403898:	shl    DWORD PTR [edx+0x3],1
  40389b:	out    dx,eax
  40389c:	fwait
  40389d:	mov    al,ds:0x23ba7d23
  4038a2:	dec    eax
  4038a3:	cwde   
  4038a4:	dec    esp
  4038a5:	ins    DWORD PTR es:[edi],dx
  4038a6:	div    BYTE PTR [eax]
  4038a8:	fist   DWORD PTR [esi+edx*4]
  4038ab:	ret    
  4038ac:	xor    eax,0x35592400
  4038b1:	adc    al,0x9c
  4038b3:	imul   edi,DWORD PTR [edx+ebp*4-0x4f],0x5b40ce1
  4038bb:	jmp    0x2d6e:0xe7e985ca
  4038c2:	std    
  4038c3:	and    eax,ebp
  4038c5:	sbb    eax,0x4a01840a
  4038ca:	dec    ebp
  4038cb:	push   0x412d828e
  4038d0:	xor    BYTE PTR [ecx],0x29
  4038d3:	xchg   ebp,eax
  4038d4:	scas   al,BYTE PTR es:[edi]
  4038d5:	into   
  4038d6:	mov    bh,0x7
  4038d8:	xor    eax,0x49a04531
  4038dd:	ss retf 0x95a5
  4038e1:	loop   0x4038e6
  4038e3:	push   ebx
  4038e4:	adc    cl,dl
  4038e6:	cmp    DWORD PTR [eax+0x4bf778d0],0xfffffff8
  4038ed:	and    cl,BYTE PTR [eax+0x4f068b4e]
  4038f3:	inc    esi
  4038f4:	jmp    0x2acfac0a
  4038f9:	enter  0x57a8,0x5
  4038fd:	adc    BYTE PTR [edx],dh
  4038ff:	add    al,0xcb
  403901:	pop    es
  403902:	test   eax,0x5f57de0e
  403907:	jl     0x40388b
  403909:	scas   eax,DWORD PTR es:[edi]
  40390a:	mov    edx,0x21021ba7
  40390f:	cmp    DWORD PTR [eax],edx
  403911:	out    dx,al
  403912:	stc    
  403913:	pop    edx
  403914:	out    dx,eax
  403915:	scas   al,BYTE PTR es:[edi]
  403916:	(bad)  
  403917:	dec    ecx
  403918:	mov    eax,ds:0x55a7e63
  40391d:	mov    cl,0x9f
  40391f:	jae    0x4038c3
  403921:	retf   
  403922:	mov    gs,WORD PTR [ebp+eax*1+0x4a1e1fe1]
  403929:	or     DWORD PTR [ebx+0x26dbb483],0x60
  403930:	mov    ax,0xa2c6
  403934:	in     eax,dx
  403935:	add    cl,BYTE PTR [edx]
  403937:	sub    eax,0xc25ae6cc
  40393c:	int    0x53
  40393e:	aaa    
  40393f:	push   esp
  403940:	xlat   BYTE PTR ds:[ebx]
  403941:	mov    eax,0x1c53e4b9
  403946:	push   ebp
  403947:	and    ebp,DWORD PTR [edx-0x7538c195]
  40394d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40394e:	push   ebp
  40394f:	jp     0x4038e4
  403951:	pop    ebp
  403952:	(bad)  
  403953:	push   0x69
  403955:	jmp    0x9ba0c20c
  40395a:	push   0x404a4415
  40395f:	mov    dl,0x12
  403961:	icebp  
  403962:	add    eax,ecx
  403964:	cmc    
  403965:	js     0x4038f1
  403967:	(bad)  
  403968:	mov    bl,0xb9
  40396a:	cmp    BYTE PTR [ebx],dl
  40396c:	add    DWORD PTR [ebp-0x3e7a9691],ecx
  403972:	mov    esp,0x84413672
  403977:	jecxz  0x40397b
  403979:	(bad)  
  40397b:	sub    BYTE PTR [eax+0x67],ah
  40397e:	ja     0x403907
  403980:	push   0x8
  403982:	xchg   edi,eax
  403983:	rcl    dh,1
  403985:	sub    bh,ch
  403987:	sahf   
  403988:	inc    ebp
  403989:	test   bl,al
  40398b:	test   DWORD PTR cs:[edx+0x5c],0x5a1f338f
  403993:	and    BYTE PTR [ecx+0x33],bh
  403996:	lods   al,BYTE PTR ds:[esi]
  403997:	js     0x4039a2
  403999:	and    DWORD PTR [edx],ebx
  40399b:	stos   DWORD PTR es:[edi],eax
  40399c:	inc    edx
  40399d:	loop   0x4039b0
  40399f:	mov    dl,0xd9
  4039a1:	nop
  4039a2:	xchg   BYTE PTR [esi+0xa],bl
  4039a5:	lea    esp,[edi-0x52]
  4039a8:	cmp    ebp,ebp
  4039aa:	(bad)  
  4039ac:	in     al,dx
  4039ad:	int3   
  4039ae:	jl     0x4039e8
  4039b0:	pop    ss
  4039b1:	inc    ebx
  4039b2:	jne    0x82e33ddc
  4039b8:	icebp  
  4039b9:	jl     0x403949
  4039bb:	stc    
  4039bc:	adc    eax,DWORD PTR [edx-0x427b3779]
  4039c2:	push   esp
  4039c3:	add    eax,0xb394c5e9
  4039c8:	sti    
  4039c9:	pusha  
  4039ca:	mov    al,ds:0x3b5929da
  4039cf:	icebp  
  4039d0:	sti    
  4039d1:	ds addr16 push 0x32
  4039d5:	fwait
  4039d6:	adc    DWORD PTR [ebx+ecx*1],0x652fd48a
  4039dd:	aam    0x12
  4039df:	leave  
  4039e0:	(bad)  
  4039e1:	jg     0x403965
  4039e3:	add    ebp,ebp
  4039e5:	sub    BYTE PTR [esi],ch
  4039e7:	fnstenv [ebp-0x58dc18b8]
  4039ed:	pop    ds
  4039ee:	lea    ecx,[ebx-0x3c1ba980]
  4039f4:	mov    ch,0x17
  4039f6:	fiadd  DWORD PTR [ebx+0x2ef75b9c]
  4039fc:	mov    eax,ds:0x96452d66
  403a01:	inc    esi
  403a02:	rol    edi,0xd1
  403a05:	mov    dl,0xc1
  403a07:	xadd   DWORD PTR [edx],ecx
  403a0a:	pop    ebp
  403a0b:	popa   
  403a0c:	add    ecx,DWORD PTR [edi-0x8]
  403a0f:	add    dh,BYTE PTR [edx-0x22]
  403a12:	add    al,0x25
  403a14:	mov    ds:0x1a6013f4,al
  403a19:	shl    BYTE PTR gs:[eax-0x7633d828],0x28
  403a21:	or     esp,esi
  403a23:	lods   al,BYTE PTR ds:[esi]
  403a24:	test   bh,cl
  403a26:	inc    ecx
  403a27:	push   es
  403a28:	adc    cl,BYTE PTR [edx]
  403a2a:	arpl   WORD PTR [ebx-0x18],dx
  403a2d:	(bad)  
  403a2e:	fistp  WORD PTR [ecx+edi*2+0x7c35392f]
  403a35:	stos   BYTE PTR es:[edi],al
  403a36:	push   edx
  403a37:	mov    BYTE PTR [ecx-0xf97a30f],0xa
  403a3e:	xchg   ebx,eax
  403a3f:	ins    DWORD PTR es:[edi],dx
  403a40:	jno    0x403a01
  403a42:	xchg   ebx,eax
  403a43:	xchg   esi,eax
  403a44:	(bad)  [ebx+0x54]
  403a47:	das    
  403a48:	pop    ss
  403a49:	bnd js 0x4039fd
  403a4c:	cli    
  403a4d:	js     0x403a7d
  403a4f:	cs enter 0x8e6e,0xd
  403a54:	mov    al,0x3
  403a56:	jmp    0x403a49
  403a58:	pop    ebp
  403a59:	pop    ebp
  403a5a:	cli    
  403a5b:	jp     0x4039ef
  403a5d:	mov    BYTE PTR [edx],ch
  403a5f:	pop    ds
  403a60:	test   al,0xbd
  403a62:	inc    ebx
  403a63:	test   BYTE PTR [edi+0x469b8144],dh
  403a69:	fadd   DWORD PTR [eax-0x422164bb]
  403a6f:	aaa    
  403a70:	xchg   ebx,eax
  403a71:	push   edi
  403a72:	ins    DWORD PTR es:[edi],dx
  403a73:	es push esp
  403a75:	push   esp
  403a77:	bndstx [eax+0x3f],(bad)
  403a7b:	cmp    BYTE PTR [ebp+0x1914bd76],dh
  403a81:	jle    0x403a90
  403a83:	mov    al,0x23
  403a85:	cmp    BYTE PTR [edi-0x7d],dh
  403a88:	push   ss
  403a89:	retf   0x774e
  403a8c:	jp     0x403abb
  403a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a8f:	stc    
  403a90:	jge    0x403a94
  403a92:	(bad)  
  403a93:	das    
  403a94:	xchg   DWORD PTR [ebp+edx*8-0x6f804a98],esp
  403a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a9c:	jg     0x403b0b
  403a9e:	sar    DWORD PTR [ecx],0x9f
  403aa1:	shl    dl,cl
  403aa3:	adc    al,0xbc
  403aa5:	xchg   ebp,eax
  403aa6:	scas   al,BYTE PTR es:[edi]
  403aa7:	ins    BYTE PTR es:[edi],dx
  403aa8:	and    dh,BYTE PTR ds:0xe566d1a1
  403aae:	jne    0x403b23
  403ab0:	jne    0x403a5f
  403ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ab3:	lods   eax,DWORD PTR ds:[esi]
  403ab4:	push   0x2b5531b7
  403ab9:	in     eax,0xbf
  403abb:	or     esi,esi
  403abd:	shl    DWORD PTR [edi-0x3],0x7
  403ac1:	mov    esp,0x1fa4688d
  403ac6:	xor    ah,BYTE PTR [edx-0x14fa7db2]
  403acc:	jo     0x403a50
  403ace:	in     eax,0x71
  403ad0:	mov    edx,0x968fbcd2
  403ad5:	call   0x70fad408
  403ada:	and    BYTE PTR [esi-0x527b0877],cl
  403ae0:	sub    esp,DWORD PTR [ecx]
  403ae2:	cmc    
  403ae3:	or     BYTE PTR [ebx+eax*8],dl
  403ae6:	push   ebx
  403ae7:	and    al,0x34
  403ae9:	out    dx,al
  403aea:	sar    BYTE PTR [ecx+0x2d0ce23e],cl
  403af0:	pusha  
  403af1:	popa   
  403af2:	popa   
  403af3:	push   eax
  403af4:	out    0x3d,al
  403af6:	or     BYTE PTR [ecx-0x22cc822e],al
  403afc:	pop    eax
  403afd:	dec    eax
  403afe:	cmc    
  403aff:	(bad)  
  403b00:	cmp    DWORD PTR [esi-0x778ed4],eax
  403b06:	fist   WORD PTR [esi]
  403b08:	cmc    
  403b09:	mov    ah,0xb0
  403b0b:	test   eax,0xbb457d80
  403b10:	sub    BYTE PTR [edi-0x68],bl
  403b13:	pop    eax
  403b14:	add    dh,BYTE PTR [edx-0x7a]
  403b17:	xor    dl,ah
  403b19:	jmp    0x97b7:0x1f93fd0f
  403b20:	sub    dh,al
  403b22:	mov    bh,0x5a
  403b24:	mov    bh,0x4b
  403b26:	js     0x403b91
  403b28:	xchg   edi,eax
  403b29:	add    DWORD PTR [ebx-0x29aa25e7],edx
  403b2f:	std    
  403b30:	aad    0xa3
  403b32:	test   dl,dl
  403b34:	cmp    DWORD PTR [eax+0x71],ecx
  403b37:	cwde   
  403b38:	jge    0x403b29
  403b3a:	pop    ebp
  403b3b:	ret    0xfa07
  403b3e:	mov    ecx,0x52e0fa42
  403b43:	sub    eax,0x19efe3e1
  403b48:	ds aas 
  403b4a:	add    ch,ch
  403b4c:	aam    0xb7
  403b4e:	ret    
  403b4f:	push   0xffffffbd
  403b51:	cmp    eax,0xffffffc6
  403b54:	fisubr WORD PTR [ecx+0x7faf369b]
  403b5a:	pop    es
  403b5b:	lds    edx,FWORD PTR [esi+eax*4+0x83ac892]
  403b62:	sbb    dh,BYTE PTR [esi+0x66c4abda]
  403b68:	add    al,0x32
  403b6a:	es iret 
  403b6c:	(bad)  
  403b6d:	lds    ebp,FWORD PTR [ebx-0x68f0da44]
  403b73:	mov    ebx,0x8c3bc919
  403b78:	inc    ebx
  403b79:	ret    
  403b7a:	ins    BYTE PTR es:[edi],dx
  403b7b:	(bad)  
  403b7c:	and    DWORD PTR [edx],ebp
  403b7e:	or     ebx,eax
  403b80:	out    dx,al
  403b81:	addr16 mov eax,ds:0x88d5
  403b85:	test   al,0xdd
  403b87:	cmp    eax,0xfbeb380e
  403b8c:	xchg   esp,eax
  403b8d:	loope  0x403bec
  403b8f:	mov    eax,ds:0xc970a710
  403b94:	inc    eax
  403b95:	mov    edi,eax
  403b97:	or     al,0xef
  403b99:	cmc    
  403b9a:	xchg   bh,ch
  403b9c:	push   cs
  403b9d:	xchg   ebp,eax
  403b9e:	xchg   ebp,eax
  403b9f:	xchg   esp,eax
  403ba0:	inc    ebp
  403ba1:	sti    
  403ba2:	fs cld 
  403ba4:	mov    edx,0xda7ff0e5
  403ba9:	test   DWORD PTR [edi+0x6d7f3d7b],eax
  403baf:	jae    0x403c1b
  403bb1:	xchg   esp,eax
  403bb2:	frstor ds:0xbb465b0e
  403bb8:	cld    
  403bb9:	push   esi
  403bba:	test   eax,0x5f26cb90
  403bbf:	leave  
  403bc0:	fild   QWORD PTR [esi-0x3d99b475]
  403bc6:	imul   edx,DWORD PTR [edx+0x71],0x14
  403bca:	jno    0x403b7d
  403bcc:	js     0x403c31
  403bce:	xor    ebx,edi
  403bd0:	shl    BYTE PTR [esi],1
  403bd2:	adc    DWORD PTR [ebp-0x45],esp
  403bd5:	ret    0xc843
  403bd8:	inc    esp
  403bd9:	lods   eax,DWORD PTR ds:[esi]
  403bda:	pop    esi
  403bdb:	or     ecx,DWORD PTR [edi]
  403bdd:	sub    dh,BYTE PTR [edi]
  403bdf:	xor    al,0x53
  403be1:	arpl   WORD PTR [ebp+0x41aefdd5],bx
  403be7:	sub    bh,cl
  403be9:	cmp    ebp,DWORD PTR [edx]
  403beb:	mov    bh,0xae
  403bed:	sar    bl,0xd3
  403bf0:	pop    ebp
  403bf1:	call   FWORD PTR [ebp+0x14]
  403bf4:	jge    0x403c65
  403bf6:	ret    0x37f5
  403bf9:	inc    edx
  403bfa:	mov    ds,WORD PTR [ebx-0x4fbe507f]
  403c00:	out    0xf9,eax
  403c02:	pop    edx
  403c03:	mov    edi,0xb3f7eebc
  403c08:	les    edi,FWORD PTR [eax-0x7a751ca8]
  403c0e:	aas    
  403c0f:	jmp    0xda1b8b24
  403c14:	ret    
  403c15:	fist   DWORD PTR [ebx-0x43aa334c]
  403c1b:	mov    eax,ds:0xd4c9770a
  403c20:	dec    esi
  403c21:	mov    ds:0x34240aae,al
  403c26:	sub    al,0xd5
  403c28:	(bad)  
  403c29:	mov    bl,0x68
  403c2b:	sbb    BYTE PTR [edi-0x48],al
  403c2e:	test   ch,0x9f
  403c31:	push   ebp
  403c32:	and    al,0x4b
  403c34:	add    BYTE PTR [eax+0xe],ch
  403c37:	mov    dh,0xf5
  403c39:	aad    0x4f
  403c3b:	or     eax,0x5bd6cb5d
  403c40:	in     al,0x88
  403c42:	ins    DWORD PTR es:[edi],dx
  403c43:	enter  0x8552,0x6e
  403c47:	mov    ds:0xd10ab6a1,al
  403c4c:	mov    eax,0x85e34eb4
  403c51:	xchg   edx,eax
  403c52:	out    0x24,al
  403c54:	sub    DWORD PTR [edx+0x2d],edi
  403c57:	(bad)  
  403c58:	fadd   DWORD PTR ds:0xd6d1c00c
  403c5e:	sub    eax,0x9b40a2f3
  403c64:	or     BYTE PTR [ebx],dl
  403c66:	jns    0x403c1f
  403c68:	stos   BYTE PTR es:[edi],al
  403c69:	jb     0x403cbb
  403c6b:	mov    edx,0x4dc0abd6
  403c70:	arpl   bx,bp
  403c72:	sti    
  403c73:	call   ecx
  403c75:	stc    
  403c76:	push   ebx
  403c77:	push   0xd09aea99
  403c7c:	inc    ebp
  403c7d:	push   ebp
  403c7e:	sub    ecx,DWORD PTR [ebx+0x11]
  403c81:	lock dec ecx
  403c83:	lds    edi,FWORD PTR ds:0xd483547e
  403c89:	(bad)
  403c8c:	jns    0x403c87
  403c8e:	pop    esi
  403c8f:	aaa    
  403c90:	cmp    ebx,DWORD PTR [eax+0x36]
  403c93:	aad    0xd
  403c95:	jnp    0x403cb6
  403c97:	ja     0x403c3d
  403c99:	aas    
  403c9a:	xor    al,0x93
  403c9c:	and    al,BYTE PTR [edx+edi*2-0x4f]
  403ca0:	into   
  403ca1:	xchg   DWORD PTR [esi-0x331641b7],ebp
  403ca7:	pop    edx
  403ca8:	(bad)  
  403ca9:	sahf   
  403caa:	jae    0x403c9e
  403cac:	jnp    0x403cd7
  403cae:	inc    ecx
  403caf:	jbe    0x403cc8
  403cb1:	inc    ebx
  403cb2:	out    0x6e,al
  403cb4:	nop
  403cb5:	or     BYTE PTR [ecx+0x71181464],dl
  403cbb:	inc    ecx
  403cbc:	and    dh,BYTE PTR [eax-0x57]
  403cbf:	cmc    
  403cc0:	inc    esp
  403cc1:	cmp    BYTE PTR [eax-0x79b413c1],cl
  403cc7:	inc    esi
  403cc8:	xchg   edx,eax
  403cc9:	xlat   BYTE PTR ds:[ebx]
  403cca:	mov    edi,eax
  403ccc:	add    BYTE PTR [ebx+0x4f39c79d],bh
  403cd2:	pop    eax
  403cd3:	jg     0x403c62
  403cd5:	xchg   ecx,eax
  403cd6:	mov    ds:0x56f3ef2d,eax
  403cdb:	bound  esp,QWORD PTR [esi]
  403cdd:	ds xchg ebx,eax
  403cdf:	xor    edx,edx
  403ce1:	pop    ebp
  403ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce3:	jae    0x403c8a
  403ce5:	addr16 push 0x2d057a8
  403ceb:	lea    esi,[ebx]
  403ced:	jmp    0xc4cb:0x543581e3
  403cf4:	imul   eax,DWORD PTR [edx+0x24f5e9a6],0x4fe3e076
  403cfe:	aaa    
  403cff:	xchg   ecx,eax
  403d00:	dec    edx
  403d01:	mov    ah,0x1a
  403d03:	test   bh,bl
  403d05:	push   ds
  403d06:	jnp    0x403d13
  403d08:	inc    esi
  403d09:	test   eax,0xfef79c4a
  403d0e:	and    eax,0xd01a4ed5
  403d13:	sbb    ebp,DWORD PTR [edi]
  403d15:	push   ecx
  403d16:	mov    edi,0x669a671f
  403d1b:	lods   al,BYTE PTR ds:[esi]
  403d1c:	xchg   BYTE PTR [edi+esi*2-0x280b7d7e],dh
  403d23:	clc    
  403d24:	in     eax,0x26
  403d26:	fwait
  403d27:	push   ecx
  403d28:	inc    eax
  403d29:	cld    
  403d2a:	pop    esi
  403d2b:	dec    edx
  403d2c:	loop   0x403cfa
  403d2e:	sar    DWORD PTR [edx-0x23],cl
  403d31:	and    al,0x1a
  403d33:	das    
  403d34:	mov    bl,0xfa
  403d36:	or     al,0xca
  403d38:	sub    dh,BYTE PTR [ebx]
  403d3a:	rol    BYTE PTR [ecx-0x652a9ae7],1
  403d40:	jmp    0x403d10
  403d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d43:	push   ds
  403d44:	or     ah,BYTE PTR [ebp-0x78]
  403d47:	std    
  403d48:	test   DWORD PTR [ecx],ecx
  403d4a:	mov    ds:0xf9079884,al
  403d4f:	into   
  403d50:	adc    ch,BYTE PTR [ecx+0x6e]
  403d53:	loop   0x403d84
  403d55:	jb     0x403d36
  403d57:	push   ecx
  403d58:	icebp  
  403d59:	ins    DWORD PTR es:[edi],dx
  403d5a:	sahf   
  403d5b:	(bad)  
  403d5c:	shl    bl,1
  403d5e:	aas    
  403d5f:	aaa    
  403d60:	cs sub eax,0xf7c75aa6
  403d66:	clc    
  403d67:	(bad)  
  403d68:	pop    ebp
  403d69:	sub    eax,0x71a8501c
  403d6e:	mov    dh,BYTE PTR [esi+0x554bb60d]
  403d74:	fsubr  QWORD PTR [eax-0x76]
  403d77:	sub    cl,cl
  403d79:	test   al,0xdf
  403d7b:	xor    cl,ch
  403d7d:	dec    DWORD PTR [ebx+0x35]
  403d80:	adc    ebx,edi
  403d82:	pop    ecx
  403d83:	pushf  
  403d84:	sahf   
  403d85:	xchg   edi,eax
  403d86:	retf   0x4b3b
  403d89:	fidivr DWORD PTR [esi]
  403d8b:	fs int 0x76
  403d8e:	aam    0x8d
  403d90:	pop    esi
  403d91:	or     al,0x4b
  403d93:	icebp  
  403d94:	enter  0xe031,0xbd
  403d98:	sbb    ebp,DWORD PTR [edx+edx*8+0x2f5c291]
  403d9f:	test   edx,edi
  403da1:	mov    WORD PTR [edi-0x723ac12e],ss
  403da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da8:	and    eax,0xd3c1dd
  403dad:	xchg   esp,eax
  403dae:	fiadd  WORD PTR [edi]
  403db0:	pushf  
  403db1:	sbb    al,BYTE PTR [eax]
  403db3:	pop    ebx
  403db4:	or     eax,DWORD PTR [ebx]
  403db6:	ja     0x403db4
  403db8:	cdq    
  403db9:	push   es
  403dba:	mov    ds:0xf6e6cf9a,al
  403dbf:	shr    BYTE PTR [ebp-0x5e6c1894],1
  403dc5:	sbb    BYTE PTR [esi+ebp*1+0x3fd42095],dh
  403dcc:	test   eax,0xa7ca0caa
  403dd1:	adc    eax,0xb2d7c088
  403dd6:	mov    edi,0x2b88fadd
  403ddb:	push   0x3d38fbea
  403de0:	neg    BYTE PTR [ebx]
  403de2:	xchg   ebp,eax
  403de3:	fcomip st,st(7)
  403de5:	loopne 0x403d67
  403de7:	(bad)  
  403de8:	push   ecx
  403de9:	pop    edi
  403dea:	mov    BYTE PTR [ecx],bl
  403dec:	or     ebp,DWORD PTR [eax-0x30]
  403def:	mov    esi,0x2c11ebc2
  403df4:	ins    DWORD PTR es:[edi],dx
  403df5:	mul    DWORD PTR [ebx+0x34]
  403df8:	retf   
  403df9:	jmp    0x403d9d
  403dfb:	or     ch,BYTE PTR [eax-0x44]
  403dfe:	pop    ss
  403dff:	iret   
  403e00:	xchg   edx,eax
  403e01:	sub    al,0x58
  403e03:	mov    edx,0x3d3235b2
  403e08:	or     al,0x19
  403e0a:	aam    0x16
  403e0c:	test   BYTE PTR [eax+0x42fe4fb8],0xd7
  403e13:	(bad)  
  403e14:	pop    bx
  403e16:	adc    al,0xcb
  403e18:	mov    ebx,eax
  403e1a:	idiv   DWORD PTR [esi+ecx*1+0x1d00f11e]
  403e21:	dec    edx
  403e22:	cli    
  403e23:	mov    eax,0xa510ca8a
  403e28:	test   eax,0x8bd872ce
  403e2d:	jp     0x403e82
  403e2f:	pop    edi
  403e30:	imul   edx,DWORD PTR [eax+eiz*4-0x51],0x6916d1e9
  403e38:	sar    DWORD PTR [ebx],1
  403e3a:	jnp    0x403e86
  403e3c:	jp     0x403e82
  403e3e:	xor    ecx,DWORD PTR [eax-0x4c]
  403e41:	mov    eax,ds:0xc935b5ce
  403e46:	dec    esi
  403e47:	xor    eax,0x78cec846
  403e4c:	(bad)  [ebp+eax*1-0x4e]
  403e50:	mov    WORD PTR [esi-0x36],cs
  403e53:	cdq    
  403e54:	and    esi,0xfededddf
  403e5a:	push   0x2c
  403e5c:	retf   
  403e5d:	sub    eax,0xb88619d4
  403e62:	mov    ecx,0x4b910ecb
  403e67:	sub    eax,DWORD PTR [ebp-0xd17c6e0]
  403e6d:	cmp    BYTE PTR [edi+eiz*4-0x72bf865c],0xe0
  403e75:	mov    cl,cl
  403e77:	or     BYTE PTR [ebx+0x60],bh
  403e7a:	enter  0x1c99,0x81
  403e7e:	outs   dx,BYTE PTR ds:[esi]
  403e7f:	xor    cl,BYTE PTR [eax]
  403e81:	sbb    esp,DWORD PTR [eax]
  403e83:	push   0xfffffffd
  403e85:	mov    esp,0x679dd9e3
  403e8a:	aaa    
  403e8b:	scas   eax,DWORD PTR es:[edi]
  403e8c:	fsubp  st(0),st
  403e8e:	dec    eax
  403e8f:	hlt    
  403e90:	fisubr DWORD PTR [edi+ebx*8]
  403e93:	cs sahf 
  403e95:	and    al,0x8e
  403e97:	ficomp DWORD PTR [ecx-0x2b]
  403e9a:	not    DWORD PTR [eax+0x74fc6724]
  403ea0:	leave  
  403ea1:	dec    edx
  403ea2:	push   ss
  403ea3:	test   BYTE PTR [esi],ah
  403ea5:	jg     0x403e83
  403ea7:	ds ds fsubr st,st(3)
  403eab:	leave  
  403eac:	inc    eax
  403ead:	xchg   esi,eax
  403eae:	pop    es
  403eaf:	mov    fs,WORD PTR [eax]
  403eb1:	push   cs
  403eb2:	mov    ebp,0x2a9d1e30
  403eb7:	pop    esp
  403eb8:	inc    eax
  403eb9:	sub    ebp,esi
  403ebb:	xor    bl,BYTE PTR [esi+0xa6558e7]
  403ec1:	mov    edi,0xfe4b2c0
  403ec6:	jle    0x403e74
  403ec8:	add    ecx,edx
  403eca:	dec    eax
  403ecb:	bound  edx,QWORD PTR [ecx]
  403ecd:	mov    ebx,0xfb3fa1a2
  403ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed3:	jae    0x403ebd
  403ed5:	xchg   DWORD PTR [ebx+0x5dcc915d],edi
  403edb:	xchg   ebx,eax
  403edc:	sbb    BYTE PTR [edx],0x17
  403edf:	popa   
  403ee0:	jo     0x403f4a
  403ee2:	pop    esi
  403ee3:	mov    ds:0x2e2a7657,eax
  403ee8:	mov    ah,BYTE PTR ds:0x2f339361
  403eee:	inc    esp
  403eef:	jge    0x403ea6
  403ef1:	out    0xfe,al
  403ef3:	xchg   edx,eax
  403ef4:	xor    ecx,DWORD PTR [edi-0x52]
  403ef7:	loope  0x403ef5
  403ef9:	mov    ah,0x2e
  403efb:	imul   edi,DWORD PTR [ebp+ebp*2-0x51],0xffffffc7
  403f00:	jnp    0x403ed5
  403f02:	es jmp 0x14467cb4
  403f08:	push   es
  403f09:	and    DWORD PTR [ecx],0xffffffd2
  403f0c:	mov    WORD PTR ds:0xa5071e4c,ss
  403f12:	pop    ebp
  403f13:	call   0xf3ad19dd
  403f18:	pop    edx
  403f19:	sbb    ch,BYTE PTR [edx+esi*8]
  403f1c:	mov    ah,0x21
  403f1e:	popf   
  403f1f:	mov    gs,WORD PTR [esi+0x5b]
  403f22:	push   ebx
  403f23:	xchg   esp,eax
  403f24:	mov    dl,0xc5
  403f26:	mov    edi,fs
  403f28:	add    eax,DWORD PTR [edx]
  403f2a:	test   al,0x1
  403f2c:	sbb    DWORD PTR cs:[eax+ebx*8],esi
  403f30:	aaa    
  403f31:	push   esi
  403f32:	call   0xc837:0xc18bd766
  403f39:	inc    edi
  403f3a:	sub    DWORD PTR [esi-0x54],edi
  403f3d:	xchg   esp,eax
  403f3e:	arpl   bx,ax
  403f40:	lahf   
  403f41:	mov    bh,0x2f
  403f43:	cmp    al,0x26
  403f45:	(bad)  
  403f46:	repz cmp al,0x1a
  403f49:	mov    al,0x7e
  403f4b:	jmp    0xda41:0xd5a694e4
  403f52:	add    DWORD PTR [ebp-0x57],esp
  403f55:	(bad)
  403f5a:	int3   
  403f5b:	(bad)  
  403f5c:	sar    BYTE PTR ds:0xf3b37764,1
  403f62:	shl    edi,1
  403f64:	mov    BYTE PTR [ebx-0x351c16f9],bl
  403f6a:	jl     0x403fd2
  403f6c:	cmp    eax,0xd4933e5a
  403f71:	(bad)  
  403f72:	sahf   
  403f73:	push   ds
  403f74:	and    cl,al
  403f76:	xchg   esp,eax
  403f77:	or     DWORD PTR ds:[edx+0x2f079a0f],ebp
  403f7e:	ret    0xa850
  403f81:	(bad)  
  403f83:	mov    esi,0x571e8adf
  403f88:	cmp    ecx,DWORD PTR [ecx-0x3ea207bc]
  403f8e:	aad    0x79
  403f90:	ja     0x403f42
  403f92:	mov    al,0x3a
  403f94:	gs cld 
  403f96:	pop    ss
  403f97:	add    DWORD PTR [esi-0x749a45c],esp
  403f9d:	dec    eax
  403f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f9f:	mov    ch,0x81
  403fa1:	and    dh,BYTE PTR [ebp-0x53e05aa0]
  403fa7:	or     esp,eax
  403fa9:	or     cl,al
  403fab:	jmp    0x403f95
  403fad:	inc    ebp
  403fae:	xchg   esp,eax
  403faf:	mov    bh,BYTE PTR [ebx-0xd]
  403fb2:	lock sub eax,0xe94431b5
  403fb8:	sub    al,0x46
  403fba:	add    al,0x41
  403fbc:	outs   dx,BYTE PTR ds:[esi]
  403fbd:	mov    ecx,0xea634bad
  403fc2:	cmp    DWORD PTR [edx-0x541dfcea],eax
  403fc8:	xor    BYTE PTR [ecx],al
  403fca:	retf   0x455
  403fcd:	dec    esp
  403fce:	or     al,0x88
  403fd0:	lea    eax,[edx]
  403fd2:	dec    esp
  403fd3:	mov    edx,0x1794ad0c
  403fd8:	xchg   esi,eax
  403fd9:	(bad)  
  403fda:	lahf   
  403fdb:	int3   
  403fdc:	and    ch,BYTE PTR [edi]
  403fde:	cmp    cl,BYTE PTR [eax+eax*2+0x76]
  403fe2:	mov    bh,0x1b
  403fe4:	inc    edx
  403fe5:	or     DWORD PTR [esi+esi*1+0x2e],edi
  403fe9:	lods   al,BYTE PTR ds:[esi]
  403fea:	dec    edx
  403feb:	iret   
  403fec:	adc    dl,BYTE PTR [ecx-0x18]
  403fef:	jne    0x40406f
  403ff1:	xchg   esi,eax
  403ff2:	xchg   DWORD PTR [edx-0x776b017],ebx
  403ff8:	arpl   WORD PTR [esi-0x6d68dc7b],ax
  403ffe:	adc    BYTE PTR [ebx],ch
  404000:	mov    edx,0xc3bc2b81
  404005:	addr16 sti 
  404007:	lds    edx,FWORD PTR [eax+0x6bc66540]
  40400d:	repz fcom QWORD PTR [ecx+eax*1+0x6ba7380e]
  404015:	ins    DWORD PTR es:[edi],dx
  404016:	lock or BYTE PTR [edi-0x334e4f3a],bh
  40401d:	adc    dh,BYTE PTR [ebx-0x6a]
  404020:	push   eax
  404021:	lahf   
  404022:	sahf   
  404023:	push   cs
  404024:	lds    ecx,FWORD PTR es:[edi]
  404027:	jbe    0x403ffb
  404029:	cmp    al,0x10
  40402b:	inc    edx
  40402c:	ret    
  40402d:	pop    edi
  40402e:	scas   al,BYTE PTR es:[edi]
  40402f:	or     BYTE PTR [eax],al
  404031:	push   ecx
  404032:	sub    eax,0xe540852b
  404037:	mov    cl,0x71
  404039:	jge    0x404073
  40403b:	dec    esp
  40403c:	das    
  40403d:	inc    edi
  40403e:	fsubr  DWORD PTR [ebp+0x6c]
  404041:	mov    eax,0x4dc6e725
  404046:	in     al,0xa4
  404048:	inc    edi
  404049:	scas   al,BYTE PTR es:[edi]
  40404a:	das    
  40404b:	stc    
  40404c:	dec    eax
  40404d:	mov    dh,0xa0
  40404f:	and    ch,BYTE PTR [eax+0xf1309a2]
  404055:	inc    edx
  404056:	sti    
  404057:	test   DWORD PTR es:[ebp+eiz*8-0x17643f4e],esi
  40405f:	pop    ds
  404060:	mov    DWORD PTR [edi],ecx
  404062:	mov    ch,0x9b
  404064:	and    eax,0xd41f8b4d
  404069:	xor    DWORD PTR [edi+0x3ca98449],esi
  40406f:	add    al,0x5b
  404071:	inc    esp
  404072:	jbe    0x404076
  404074:	aas    
  404075:	test   ebx,ecx
  404077:	adc    esp,DWORD PTR [eax+ebp*4+0x17]
  40407b:	mov    ah,0xb5
  40407d:	shl    BYTE PTR [ecx+0x633864af],1
  404083:	push   ebx
  404084:	xchg   ebx,eax
  404085:	mov    edi,ebx
  404087:	test   BYTE PTR [ebx],dl
  404089:	sti    
  40408a:	and    al,0x8d
  40408c:	jmp    0x404028
  40408e:	pop    ss
  40408f:	sub    al,0x20
  404091:	out    dx,al
  404092:	mov    dl,0xe1
  404094:	add    dl,BYTE PTR [eax]
  404096:	retf   0x412f
  404099:	sub    al,0x49
  40409c:	mov    BYTE PTR [edx+0x65],dh
  40409f:	jnp    0x4040d3
  4040a1:	lock int 0xcb
  4040a4:	out    dx,al
  4040a5:	or     bl,dh
  4040a7:	push   0xa5382c9b
  4040ac:	jl     0x404100
  4040ae:	mov    ah,0x6e
  4040b0:	(bad)  
  4040b1:	mov    esp,0xe85750c6
  4040b6:	and    edi,DWORD PTR [esi-0x4560276d]
  4040bc:	adc    esi,DWORD PTR [ebx]
  4040be:	cmp    edi,DWORD PTR [esi-0x5600d12]
  4040c4:	add    dl,0x64
  4040c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c8:	push   edx
  4040c9:	ret    0x8559
  4040cc:	add    bh,BYTE PTR [esi+0x4a5c6802]
  4040d2:	push   ebp
  4040d3:	jp     0x4040e6
  4040d5:	out    dx,al
  4040d6:	or     eax,0xc8e25cc6
  4040db:	cmove  ebx,ebp
  4040de:	int    0x29
  4040e0:	(bad)  ds:0xd4d6bf4f
  4040e6:	fadd   QWORD PTR [ebx+0x260a7f6f]
  4040ec:	mov    bh,0xf4
  4040ee:	js     0x404123
  4040f0:	iret   
  4040f1:	cmp    eax,0x7ab181f7
  4040f6:	mov    al,ds:0x55f340c5
  4040fb:	pushf  
  4040fc:	sub    edi,ebx
  4040fe:	(bad)  
  404100:	inc    esp
  404101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404102:	mov    esp,0x89b3e80e
  404107:	mov    dl,0xc0
  404109:	inc    edx
  40410a:	movsx  esp,BYTE PTR [edi+ebp*8+0x7600c96]
  404112:	jnp    0x4040ba
  404114:	pop    esp
  404115:	fwait
  404116:	or     eax,0x89083b9c
  40411b:	push   esp
  40411c:	addr16 mov bl,0x65
  40411f:	mov    edx,0x264270da
  404124:	fld    QWORD PTR [ebx+ecx*1]
  404127:	loope  0x4040e8
  404129:	test   BYTE PTR [esi+0x3fd96ba3],0x60
  404130:	fmul   DWORD PTR [eax+0x432cc81e]
  404136:	mov    al,ds:0x25159e51
  40413b:	inc    BYTE PTR [esi+0x1cfa0298]
  404141:	mov    cl,0x5f
  404143:	pop    esp
  404144:	add    edx,DWORD PTR [ebx]
  404146:	mov    ebx,0x87051d19
  40414b:	pop    ebp
  40414c:	std    
  40414d:	push   ds
  40414e:	xchg   dh,cl
  404150:	gs ret 0x6b0c
  404154:	or     edx,DWORD PTR [esi]
  404156:	mov    ebx,0xa0c4e921
  40415b:	mov    esi,0x8e7a9813
  404160:	push   cs
  404161:	test   DWORD PTR [ebx+0x7a5dd97d],0x8755c48b
  40416b:	mov    bl,cl
  40416d:	jmp    0x40410f
  40416f:	repnz pop ebp
  404171:	and    bh,al
  404173:	jl     0x4041e4
  404175:	xchg   edx,eax
  404176:	(bad)  
  404177:	mov    al,BYTE PTR [edx]
  404179:	(bad)  
  40417a:	lock push edx
  40417c:	jmp    0x88de0b6d
  404181:	mov    ebp,0x222239a6
  404186:	lahf   
  404187:	sbb    esi,esp
  404189:	stos   DWORD PTR es:[edi],eax
  40418a:	pop    eax
  40418b:	xor    ah,BYTE PTR [ebx+ebp*2+0x3d]
  40418f:	shr    DWORD PTR [edi*1-0x68bdff85],1
  404196:	xor    ebx,edi
  404198:	clc    
  404199:	xchg   ecx,eax
  40419a:	loop   0x4041ca
  40419c:	pop    edi
  40419d:	stos   BYTE PTR es:[edi],al
  40419e:	pushf  
  40419f:	(bad)  
  4041a1:	aad    0x30
  4041a3:	jo     0x404140
  4041a5:	std    
  4041a6:	add    DWORD PTR [esi],ecx
  4041a8:	and    ecx,DWORD PTR [eax+esi*8]
  4041ab:	aam    0xd6
  4041ad:	jnp    0x404165
  4041af:	pop    esi
  4041b0:	pop    esp
  4041b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b2:	sbb    ch,BYTE PTR [edi+0x3a]
  4041b5:	jp     0x40421e
  4041b7:	shl    DWORD PTR [ecx-0x54d51256],1
  4041bd:	aad    0xf6
  4041bf:	(bad)  
  4041c0:	idiv   al
  4041c2:	ret    0xee66
  4041c5:	jg     0x40420f
  4041c7:	push   cs
  4041c8:	es mov ah,0xf5
  4041cb:	inc    eax
  4041cc:	mov    DWORD PTR [ecx-0x7ad47ea9],esi
  4041d2:	xor    al,0xc2
  4041d4:	dec    ebx
  4041d5:	mov    al,0xf8
  4041d7:	xor    eax,0xb40ec46b
  4041dc:	xchg   DWORD PTR [esi+eiz*1],esp
  4041df:	(bad)  
  4041e0:	je     0x4041fe
  4041e2:	ins    DWORD PTR es:[edi],dx
  4041e3:	xor    cl,ah
  4041e5:	fisubr DWORD PTR [edi]
  4041e7:	xor    cl,dh
  4041e9:	sahf   
  4041ea:	pop    esi
  4041eb:	pop    ss
  4041ec:	xor    ebx,edx
  4041ee:	jnp    0x404269
  4041f0:	cmp    al,0xd1
  4041f2:	mov    al,ds:0xe02424f1
  4041f7:	dec    esi
  4041f8:	xor    BYTE PTR [edx-0x62],0xe3
  4041fc:	rcr    DWORD PTR [edi+ebx*4-0x62],1
  404200:	sub    DWORD PTR [ebx],eax
  404202:	push   cs
  404203:	add    ebx,DWORD PTR [edi-0x56]
  404206:	fs dec esi
  404208:	pop    esi
  404209:	and    al,0x70
  40420b:	dec    eax
  40420c:	xlat   BYTE PTR ds:[ebx]
  40420d:	pop    ss
  40420e:	clc    
  40420f:	jo     0x404219
  404211:	xor    DWORD PTR [ecx-0x75e03530],ecx
  404217:	enter  0xac20,0x22
  40421b:	and    ecx,edx
  40421d:	or     esp,DWORD PTR [ebx-0x6d]
  404220:	adc    edx,DWORD PTR [ecx*2-0x51fb1f35]
  404227:	montmul (bad)
  404228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404229:	xchg   dl,ah
  40422b:	or     eax,esp
  40422d:	mov    WORD PTR [ebx+eiz*1-0x628d58dc],?
  404234:	into   
  404235:	(bad)  
  404236:	outs   dx,BYTE PTR ds:[esi]
  404237:	ror    DWORD PTR [eax-0xffd9b98],1
  40423d:	mov    ?,WORD PTR [eax+0x54a7cf0a]
  404243:	jns    0x4041f7
  404245:	push   esi
  404246:	mov    al,0x66
  404248:	cwde   
  404249:	or     BYTE PTR [esi],0x3a
  40424c:	push   ecx
  40424d:	push   ebx
  40424e:	retf   
  40424f:	xchg   DWORD PTR [ebp+eiz*1+0x135bd97d],ebp
  404256:	into   
  404257:	mov    eax,ds:0xb09033f3
  40425c:	aad    0x4a
  40425e:	fs ret 0x8095
  404262:	fdivrp st(1),st
  404264:	ja     0x404239
  404266:	or     edi,edx
  404268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404269:	mov    eax,0xcc583722
  40426e:	sub    cl,bh
  404270:	retf   
  404271:	mov    cl,0x41
  404273:	adc    al,0xf8
  404275:	xchg   esp,eax
  404276:	mov    al,ds:0xdb5dbccf
  40427b:	sub    bh,BYTE PTR [esi-0x23]
  40427e:	cli    
  40427f:	cmp    ah,BYTE PTR [ebx]
  404281:	hlt    
  404282:	js     0x404244
  404284:	ins    BYTE PTR es:[edi],dx
  404285:	jbe    0x404279
  404287:	fstp   QWORD PTR [edx-0x4f9ac169]
  40428d:	out    0x89,eax
  40428f:	jg     0x404278
  404291:	out    0xdd,eax
  404293:	jle    0xd872a68e
  404299:	aam    0xc4
  40429b:	mov    dl,0x9f
  40429d:	mov    edx,0xc5e47473
  4042a2:	or     al,0xf4
  4042a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a5:	ins    DWORD PTR es:[edi],dx
  4042a6:	sub    al,BYTE PTR [edi-0x2e]
  4042a9:	int    0xfa
  4042ab:	and    al,0x92
  4042ad:	or     ebx,DWORD PTR [eax+eiz*2]
  4042b0:	imul   ebp,edx,0xffffffa4
  4042b3:	mov    DWORD PTR [edx],esp
  4042b5:	ret    
  4042b6:	or     BYTE PTR [esi+0x1223fda5],0x5c
  4042bd:	push   ds
  4042be:	sbb    eax,0x7313915e
  4042c3:	imul   edx,eax,0xfffffffd
  4042c6:	test   ecx,esi
  4042c8:	xor    DWORD PTR [edi+0xe36c4c8],ebp
  4042ce:	and    bl,BYTE PTR [ecx]
  4042d0:	push   0x63b6fb1
  4042d5:	aas    
  4042d6:	push   edx
  4042d7:	cmp    BYTE PTR [eax+eiz*4+0x1986b1b4],al
  4042de:	fyl2x  
  4042e0:	and    esp,ecx
  4042e2:	rcl    BYTE PTR fs:[ecx+0x5a],cl
  4042e6:	(bad)  
  4042e7:	sub    al,0x39
  4042e9:	inc    ebx
  4042ea:	mov    ?,ebx
  4042ec:	ror    dh,0x1b
  4042ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f0:	inc    esi
  4042f1:	repz bound esi,QWORD PTR [edx+0x2d]
  4042f5:	push   cs
  4042f6:	rol    bh,cl
  4042f8:	or     BYTE PTR [eax+ebx*8+0xb6db3cc],bh
  4042ff:	mov    bh,0x6
  404301:	js     0x404348
  404303:	xor    DWORD PTR [edx+edi*8-0x60c5932d],0x3f
  40430b:	out    dx,eax
  40430c:	int3   
  40430d:	sahf   
  40430e:	or     al,0xaf
  404310:	lahf   
  404311:	or     al,bl
  404313:	inc    esi
  404314:	(bad)  
  404315:	xchg   ebx,eax
  404316:	lar    edi,bx
  404319:	pop    es
  40431a:	push   0x862dcf14
  40431f:	pop    DWORD PTR [eax]
  404321:	xchg   edi,eax
  404322:	test   al,0x19
  404324:	sub    eax,0x3746c991
  404329:	push   ds
  40432a:	or     eax,0x77dd7731
  40432f:	xchg   esi,eax
  404330:	pop    ss
  404331:	mov    edx,0x8c47e3f1
  404336:	sub    eax,0x5dd5908
  40433b:	fst    QWORD PTR [ebp+0x37ef6e12]
  404341:	jl     0x404325
  404343:	xchg   ecx,eax
  404344:	int3   
  404345:	mov    eax,edx
  404347:	imul   esi,DWORD PTR [edi],0xffffffa1
  40434a:	arpl   WORD PTR [ecx+0x34],si
  40434d:	adc    bh,BYTE PTR [eax+0xb]
  404350:	xor    bl,BYTE PTR ds:0x3860b667
  404356:	ret    
  404357:	jns    0x404381
  404359:	shl    bl,0x4d
  40435c:	icebp  
  40435d:	adc    al,0x7b
  40435f:	sahf   
  404360:	xor    BYTE PTR [esi-0x12364388],cl
  404366:	arpl   WORD PTR ds:0xd9f864c3,cx
  40436c:	mov    ds:0xa6ae9e3b,eax
  404371:	lods   al,BYTE PTR ds:[esi]
  404372:	jb     0x404387
  404374:	mov    al,ds:0x13e9cc15
  404379:	adc    edx,DWORD PTR [ebp-0x15d83df1]
  40437f:	out    dx,eax
  404380:	jne    0x4043ad
  404382:	mov    ecx,ds
  404384:	sub    DWORD PTR [eax*2+0x7a5a5ff2],esi
  40438b:	stc    
  40438c:	jbe    0x404375
  40438e:	int3   
  40438f:	clc    
  404390:	aaa    
  404391:	neg    BYTE PTR ds:0x50d3b845
  404397:	push   es
  404398:	stos   DWORD PTR es:[edi],eax
  404399:	lods   eax,DWORD PTR ds:[esi]
  40439a:	and    BYTE PTR [esi-0x35837dec],ch
  4043a0:	rcr    BYTE PTR [eax],cl
  4043a2:	in     al,dx
  4043a3:	scas   al,BYTE PTR es:[edi]
  4043a4:	push   ecx
  4043a5:	jo     0x404408
  4043a7:	add    dh,cl
  4043a9:	jp     0x40437a
  4043ab:	imul   bh
  4043ad:	retf   
  4043ae:	jmp    0x4976f862
  4043b3:	fidiv  WORD PTR [edx-0x19eedcbe]
  4043b9:	out    0x4a,eax
  4043bb:	and    eax,0x7c6c44f6
  4043c0:	cmp    BYTE PTR [edi+ebp*2-0x1d80fe70],0x1d
  4043c8:	call   0x527b:0xed9b030b
  4043cf:	sbb    BYTE PTR [esi+0x16],dl
  4043d2:	les    edi,FWORD PTR [esi]
  4043d4:	test   DWORD PTR [edi-0x41cd396b],ebp
  4043da:	adc    al,0x8
  4043dc:	dec    esp
  4043dd:	in     al,dx
  4043de:	xor    al,0xb3
  4043e0:	shr    DWORD PTR ds:[esi+edx*8-0x27fb4cbf],0xe9
  4043e9:	ja     0x40443c
  4043eb:	fimul  WORD PTR [esp+eax*2+0x60fab54a]
  4043f2:	ds pop eax
  4043f4:	pop    eax
  4043f5:	sbb    eax,0xa696d587
  4043fa:	pusha  
  4043fb:	xor    DWORD PTR [eax],0xffffffe7
  4043fe:	cmp    eax,0x6508b23b
  404403:	adc    al,0xec
  404405:	xchg   ecx,eax
  404406:	ror    BYTE PTR [edx+0x7f548c74],0xd8
  40440d:	and    al,0xcf
  40440f:	jno    0x4043f7
  404411:	xchg   BYTE PTR [edx-0x783f615a],cl
  404417:	sbb    al,0x30
  404419:	jp     0x40443e
  40441b:	xchg   ebx,eax
  40441c:	jmp    0x1ef:0x3ac286f8
  404423:	jnp    0x40449a
  404425:	adc    esp,0x2b
  404428:	or     ecx,DWORD PTR [edi+0x34]
  40442b:	add    BYTE PTR [edx-0x61],bh
  40442e:	out    0x10,al
  404430:	repnz int 0x38
  404433:	and    BYTE PTR [esp+ebx*1+0x559363c4],dh
  40443a:	pushf  
  40443b:	or     BYTE PTR [edi],al
  40443d:	mov    DWORD PTR [ecx+0x50b68c41],edx
  404443:	jle    0x4043fe
  404445:	(bad)  
  404446:	cld    
  404447:	into   
  404448:	(bad)  
  404449:	dec    eax
  40444a:	jno    0x4043fc
  40444c:	sub    BYTE PTR [esi-0xb],ah
  40444f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404450:	dec    esi
  404451:	gs sub al,0xd
  404454:	sub    BYTE PTR [edx+0x696d6f4d],dh
  40445a:	mov    eax,0x3019bae8
  40445f:	lea    eax,[edx+eiz*8+0x229023bd]
  404466:	mov    ds:0x52ce82c7,al
  40446b:	mov    BYTE PTR [edi],al
  40446d:	mov    edx,0xbdcf25ba
  404472:	je     0x4044bd
  404474:	repnz push ecx
  404476:	sahf   
  404477:	and    esi,edi
  404479:	fild   DWORD PTR [esi]
  40447b:	call   0xbb4:0xe16110d5
  404482:	call   0xb4fa8dea
  404487:	jecxz  0x4044a7
  404489:	mov    ebx,0x99d0a168
  40448e:	and    ecx,esi
  404490:	mov    WORD PTR [ebx+0x9],fs
  404493:	push   es
  404494:	jmp    0xab7a:0x8ae26521
  40449b:	scas   eax,DWORD PTR es:[edi]
  40449c:	dec    esp
  40449d:	mov    esi,0x15b3012c
  4044a2:	das    
  4044a3:	loop   0x40451d
  4044a5:	push   0x48
  4044a7:	popa   
  4044a8:	lock xor BYTE PTR [edx+0x31],ch
  4044ac:	sbb    DWORD PTR [esi+0x41eae952],ebx
  4044b2:	adc    ebx,ebx
  4044b4:	mov    ch,0xe2
  4044b6:	mov    dl,0x49
  4044b8:	add    eax,0x4a9f52
  4044bd:	sbb    ecx,ecx
  4044bf:	pop    ebx
  4044c0:	sbb    dh,al
  4044c2:	jmp    0xe48380a2
  4044c7:	or     al,0x2a
  4044c9:	(bad)  
  4044ca:	aaa    
  4044cb:	xchg   esp,eax
  4044cc:	fwait
  4044cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ce:	test   al,0xc
  4044d0:	jecxz  0x404512
  4044d2:	cli    
  4044d3:	mov    ebp,0xf9328d78
  4044d8:	popa   
  4044d9:	mov    esi,0x5e1744fb
  4044de:	mov    cs,WORD PTR [ebp+eax*8-0x1b50811f]
  4044e5:	mov    ch,0x5b
  4044e7:	gs cs jnp 0x404555
  4044eb:	stos   DWORD PTR es:[edi],eax
  4044ec:	scas   eax,DWORD PTR es:[edi]
  4044ed:	retf   
  4044ee:	imul   edi,esi,0xaee7abe7
  4044f4:	add    ch,BYTE PTR [ebx]
  4044f6:	push   ds
  4044f7:	cmp    BYTE PTR [ebx-0x78fb835c],al
  4044fd:	cli    
  4044fe:	add    al,0x26
  404500:	data16 clc 
  404502:	fs xchg esi,eax
  404504:	push   ds
  404505:	lahf   
  404506:	mov    ch,0xfc
  404508:	xchg   ebx,eax
  404509:	mov    edx,edi
  40450b:	push   edx
  40450c:	push   edi
  40450d:	out    0xa4,eax
  40450f:	fcomp  QWORD PTR [ebx+0x78]
  404512:	(bad)  
  404514:	enter  0xdd78,0x57
  404518:	inc    edi
  404519:	pop    esi
  40451a:	push   ecx
  40451b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40451c:	xchg   ebp,eax
  40451d:	add    edx,DWORD PTR [edi-0x30]
  404520:	data16 (bad) 
  404522:	push   esi
  404523:	(bad)  
  404524:	pushf  
  404525:	push   ss
  404526:	add    eax,0xaddc2814
  40452b:	in     eax,dx
  40452c:	test   BYTE PTR [esp+eax*8+0x35bc4144],dh
  404533:	stc    
  404534:	sub    DWORD PTR [edx],edi
  404536:	loope  0x404530
  404538:	arpl   ax,di
  40453a:	sar    DWORD PTR [eax+0x3e72ebe1],0x6c
  404541:	jecxz  0x4044ed
  404543:	rcl    BYTE PTR [edx+0x42],cl
  404546:	out    0x55,al
  404548:	(bad)  
  404549:	call   DWORD PTR [esi+0x5fc96489]
  40454f:	sbb    al,0x49
  404551:	ror    edx,1
  404553:	sti    
  404554:	in     al,0xd5
  404556:	pop    ss
  404557:	out    dx,al
  404558:	int    0xad
  40455a:	cli    
  40455b:	sub    BYTE PTR [ecx-0x44],al
  40455e:	sub    al,0x80
  404560:	xor    al,0xb9
  404562:	mov    esi,0xc61b9d8c
  404567:	fild   WORD PTR [bx+di-0xfcb]
  40456c:	loopne 0x404534
  40456e:	dec    ecx
  40456f:	mov    BYTE PTR [edi+0x3a],dh
  404572:	sub    eax,0x980d8e38
  404577:	add    bh,ah
  404579:	(bad)  
  40457b:	mov    edx,0x2c7597de
  404580:	adc    BYTE PTR [edi],dl
  404582:	(bad)  
  404584:	test   BYTE PTR [ebx],ah
  404586:	jge    0x404600
  404588:	adc    cl,bl
  40458a:	and    al,0xd1
  40458c:	cwde   
  40458d:	in     al,dx
  40458e:	sahf   
  40458f:	ror    BYTE PTR [esi-0x7469aafd],0xfd
  404596:	xor    al,0x4a
  404598:	xor    eax,DWORD PTR [esi-0x5e]
  40459b:	out    0xa,al
  40459d:	js     0x4045ed
  40459f:	sub    al,0x8b
  4045a1:	cmp    DWORD PTR [ecx+0x31],edi
  4045a4:	jmp    0x1f49d459
  4045a9:	dec    edi
  4045aa:	and    DWORD PTR [edi],0xffffffbc
  4045ad:	js     0x4045a3
  4045af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b0:	dec    esp
  4045b1:	ins    BYTE PTR es:[edi],dx
  4045b2:	cmp    DWORD PTR [ebx+0x6a],edx
  4045b5:	xchg   edi,eax
  4045b6:	call   0x1800:0xe04d7ca5
  4045bd:	hlt    
  4045be:	ret    0xea49
  4045c1:	sbb    edx,ebx
  4045c3:	test   al,0x6a
  4045c5:	(bad)  
  4045c6:	xor    dh,BYTE PTR [edi]
  4045c8:	jmp    0xe8059c99
  4045cd:	bound  ecx,QWORD PTR [esi]
  4045cf:	retf   0xf34c
  4045d2:	bswap  ebp
  4045d4:	adc    al,0x85
  4045d6:	mov    ds,WORD PTR [ecx+0x4c7f92ad]
  4045dc:	adc    al,0xe5
  4045de:	scas   al,BYTE PTR es:[edi]
  4045df:	pop    ebx
  4045e0:	pusha  
  4045e1:	in     eax,dx
  4045e2:	js     0x4045f1
  4045e4:	sub    esp,DWORD PTR [ecx+0x72]
  4045e7:	popa   
  4045e8:	adc    bl,BYTE PTR [ebx+0x6af88864]
  4045ee:	pop    edi
  4045ef:	and    dh,BYTE PTR [esi]
  4045f1:	aad    0xf6
  4045f3:	xchg   ecx,eax
  4045f4:	retf   
  4045f5:	pop    ebp
  4045f6:	sub    bh,bh
  4045f8:	(bad)  
  4045f9:	es dec eax
  4045fb:	pop    ss
  4045fc:	push   es
  4045fd:	pop    es
  4045fe:	call   0xd85d89e9
  404603:	stc    
  404604:	dec    esi
  404605:	fucomip st,st(5)
  404607:	sbb    BYTE PTR [eax],dl
  404609:	sti    
  40460a:	push   ebp
  40460b:	call   0xc1606d1d
  404610:	stc    
  404611:	mov    ecx,0xaac3da74
  404616:	js     0x404645
  404618:	out    0xae,al
  40461a:	inc    ebp
  40461b:	popf   
  40461c:	int    0x15
  40461e:	loope  0x4045f2
  404620:	repz test al,0x0
  404623:	jb     0x404659
  404625:	aad    0xf3
  404627:	cmc    
  404628:	mov    esi,0x86640e11
  40462d:	adc    edx,DWORD PTR [esi]
  40462f:	add    ah,ch
  404631:	inc    edi
  404632:	jne    0x404613
  404634:	int    0x24
  404636:	mov    ds:0xa8eea7a7,al
  40463b:	repnz in al,0xb3
  40463e:	in     eax,dx
  40463f:	jmp    FWORD PTR [edi-0x58]
  404642:	fsubr  QWORD PTR [ebx+0x12]
  404645:	popa   
  404646:	inc    ebp
  404647:	not    DWORD PTR [esi+0x6a91b498]
  40464d:	cmp    eax,0x3183ada0
  404652:	jge    0x4046af
  404654:	jmp    0x74cac2d5
  404659:	inc    ebx
  40465a:	cmp    ebx,DWORD PTR [edx+0x2e0246f2]
  404660:	cmp    eax,0x5079f5d2
  404665:	jmp    0x3ad7dd5
  40466a:	aas    
  40466b:	je     0x40469d
  40466d:	push   cs
  40466e:	adc    eax,0x9f566c46
  404673:	pop    ebx
  404674:	jne    0x40463e
  404676:	or     dh,dh
  404678:	enter  0xee5f,0xe8
  40467c:	dec    ecx
  40467d:	das    
  40467e:	mov    dh,BYTE PTR [eax+0x342899f]
  404684:	retf   
  404685:	jmp    0xb5efb494
  40468a:	call   0x4dfe400
  40468f:	adc    eax,0x98e0f71b
  404694:	add    eax,0xe24a55f2
  404699:	add    al,0x34
  40469b:	dec    edx
  40469c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40469d:	push   ss
  40469e:	sahf   
  40469f:	adc    cl,ch
  4046a1:	sbb    DWORD PTR [edx],ebx
  4046a3:	sub    BYTE PTR [esi],cl
  4046a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a6:	(bad)  
  4046a7:	mov    esi,0xe4c1db7d
  4046ac:	das    
  4046ad:	xor    eax,0xe8c588a4
  4046b2:	cmp    BYTE PTR [edi-0x79],cl
  4046b5:	(bad)  
  4046b7:	outs   dx,BYTE PTR ds:[esi]
  4046b8:	daa    
  4046b9:	jp     0x4046f3
  4046bb:	sbb    BYTE PTR [ecx+0x18],ah
  4046be:	cmp    esp,ebx
  4046c0:	popf   
  4046c1:	mov    BYTE PTR [edx+0x7],0xd0
  4046c5:	xlat   BYTE PTR ds:[ebx]
  4046c6:	xchg   ecx,eax
  4046c7:	push   0x5d
  4046c9:	iretw  
  4046cb:	aas    
  4046cc:	je     0x404682
  4046ce:	xchg   DWORD PTR [edx+ecx*4-0x6cd4c512],esi
  4046d5:	sti    
  4046d6:	jl     0x404749
  4046d8:	test   al,0x70
  4046da:	mov    edx,0xb9d2205e
  4046df:	cmp    eax,0xd2803490
  4046e4:	jno    0x40475a
  4046e6:	(bad)  
  4046e7:	shl    BYTE PTR [ebx-0x46a70340],1
  4046ed:	sbb    al,0xe6
  4046ef:	daa    
  4046f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f1:	fimul  DWORD PTR [ebx]
  4046f3:	jge    0x40476d
  4046f5:	mov    esp,0x5da99ffc
  4046fa:	(bad)
  4046fd:	shl    BYTE PTR [ebx],0x59
  404700:	push   ss
  404701:	ret    
  404702:	imul   esp,DWORD PTR [ebp+0x175638d],0x5c
  404709:	xchg   BYTE PTR [ebp-0x1d],bh
  40470c:	sbb    edi,ebx
  40470e:	es es xor DWORD PTR ds:[eax],esp
  404713:	jne    0x40473c
  404715:	es inc eax
  404717:	sub    edi,DWORD PTR [ebx+0x74]
  40471a:	pop    ebp
  40471b:	lods   eax,DWORD PTR ds:[esi]
  40471c:	retf   
  40471d:	push   ebx
  40471e:	adc    BYTE PTR [ecx-0x21228822],al
  404724:	sar    ch,cl
  404726:	xchg   ebx,eax
  404727:	dec    edx
  404728:	aaa    
  404729:	push   esi
  40472a:	xor    edx,DWORD PTR [edx]
  40472c:	je     0x40479a
  40472e:	in     al,dx
  40472f:	sbb    dl,bl
  404731:	sbb    dl,dh
  404733:	mov    ebp,?
  404735:	js     0x404733
  404737:	ds scas al,BYTE PTR es:[edi]
  404739:	jmp    0x40477e
  40473b:	aaa    
  40473c:	jbe    0x40476e
  40473e:	and    cl,BYTE PTR ds:0x682f3d57
  404744:	int3   
  404745:	pop    ss
  404746:	int    0x2f
  404748:	dec    esi
  404749:	sti    
  40474a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40474b:	outs   dx,BYTE PTR ds:[esi]
  40474c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40474d:	pop    ds
  40474e:	and    al,0x16
  404750:	mov    dh,0x25
  404752:	(bad)  
  404755:	idiv   BYTE PTR [eax+0x2205819e]
  40475b:	and    al,0xc0
  40475d:	(bad)  
  40475f:	shr    DWORD PTR [ecx-0x71b20f4],0xa0
  404766:	out    0x7d,eax
  404768:	rcl    ebx,1
  40476a:	mov    eax,0xd1779cbc
  40476f:	xor    DWORD PTR ss:[esi-0x68],0xfb51c90c
  404777:	adc    eax,0xfca77776
  40477c:	aaa    
  40477d:	adc    ecx,DWORD PTR [eax-0x56b3e149]
  404783:	jne    0x4047d6
  404785:	jg     0x40470d
  404787:	adc    ebx,ecx
  404789:	mov    esi,0xe65f3c5f
  40478e:	sbb    bh,cl
  404790:	add    al,0x4b
  404792:	dec    eax
  404793:	cmp    DWORD PTR [eax-0x68],0xffffff81
  404797:	into   
  404798:	in     eax,0xfe
  40479a:	outs   dx,DWORD PTR ds:[esi]
  40479b:	add    eax,0xa34808be
  4047a0:	(bad)  
  4047a1:	retf   0x4b02
  4047a4:	jl     0x4047e9
  4047a6:	inc    esp
  4047a7:	(bad)  
  4047a8:	or     al,0xe6
  4047aa:	mov    al,ds:0x50dab12
  4047af:	push   ds
  4047b0:	mov    ecx,0x13b81da0
  4047b5:	xor    eax,0x868bdaed
  4047ba:	mov    bl,0xcf
  4047bc:	add    BYTE PTR [edi+0x5aaa61e7],0x63
  4047c3:	jae    0x4047c1
  4047c5:	adc    BYTE PTR [ebx-0x6e],ah
  4047c8:	mov    ecx,0xb37742b8
  4047cd:	enter  0x5c81,0xb4
  4047d1:	fild   QWORD PTR [edx+0x12a62943]
  4047d7:	xor    BYTE PTR ds:0xca1676f3,bl
  4047dd:	in     eax,dx
  4047de:	out    0x53,eax
  4047e0:	cli    
  4047e1:	or     al,0xd8
  4047e3:	imul   ebp,DWORD PTR [edi-0xcda7ff4],0x691f3bc3
  4047ed:	rol    DWORD PTR [edi+0x7],1
  4047f0:	cli    
  4047f1:	mov    bl,0x33
  4047f3:	pop    eax
  4047f4:	adc    BYTE PTR [edi+0x2a],al
  4047f7:	adc    DWORD PTR [eax+edx*4+0xd4ae0d3],ebx
  4047fe:	stos   BYTE PTR es:[edi],al
  4047ff:	or     ah,BYTE PTR [edi+0x76311718]
  404805:	fwait
  404806:	xor    dh,0x4f
  404809:	or     eax,0xa8438310
  40480e:	ror    BYTE PTR [esi],cl
  404810:	shr    BYTE PTR [edi],0xe3
  404813:	mov    ah,0x28
  404815:	mov    eax,?
  404817:	retf   
  404818:	pop    edx
  404819:	inc    esi
  40481a:	lahf   
  40481b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481c:	scas   al,BYTE PTR es:[edi]
  40481d:	ins    BYTE PTR es:[edi],dx
  40481e:	lods   al,BYTE PTR ds:[esi]
  40481f:	imul   esp,edx,0x9b3975b5
  404825:	not    BYTE PTR [eax+0x78]
  404828:	inc    ecx
  404829:	adc    bh,BYTE PTR [ebx]
  40482b:	add    al,BYTE PTR [eax]
  40482d:	sub    ah,BYTE PTR [edi]
  40482f:	jp     0x40480e
  404831:	pusha  
  404832:	ret    0x4fa9
  404835:	loope  0x40486f
  404837:	loope  0x404838
  404839:	mov    al,0x13
  40483b:	pop    esp
  40483c:	nop
  40483d:	xchg   WORD PTR [esi-0x1b],bp
  404841:	pop    ecx
  404842:	sahf   
  404843:	mov    dh,0xc9
  404845:	mov    ebx,esp
  404847:	fs and al,0xf5
  40484a:	mov    edi,ebp
  40484c:	inc    edi
  40484d:	daa    
  40484e:	ins    BYTE PTR es:[edi],dx
  40484f:	aaa    
  404850:	pusha  
  404851:	ins    DWORD PTR es:[edi],dx
  404852:	jns    0x4048c1
  404854:	cmp    dh,bl
  404856:	mov    ecx,0x4debff60
  40485b:	cmp    DWORD PTR [esi],ecx
  40485d:	in     al,dx
  40485e:	loopne 0x4047f0
  404860:	and    DWORD PTR [esi+0x2123580b],esi
  404866:	add    eax,0xc585cffb
  40486b:	call   0xa84b:0x7b934c7f
  404872:	xlat   BYTE PTR ds:[ebx]
  404873:	sbb    BYTE PTR [esi+0xfcb6422],cl
  404879:	mov    WORD PTR [esp+edx*1],ss
  40487c:	push   0x8bcecad2
  404881:	stc    
  404882:	and    esi,0x7048da90
  404888:	fcom   QWORD PTR [eax+0x797f7762]
  40488e:	push   esi
  40488f:	mov    BYTE PTR [esi],ah
  404891:	iret   
  404892:	jl     0x404863
  404894:	ins    BYTE PTR es:[edi],dx
  404895:	and    eax,0x7f562ee4
  40489a:	jp     0x40488d
  40489c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40489d:	out    0xb6,al
  40489f:	rol    ah,1
  4048a1:	or     dh,BYTE PTR [edi+0x4f]
  4048a4:	add    BYTE PTR [ecx+0x65],0x43
  4048a8:	mov    esp,0x872a672c
  4048ad:	leave  
  4048ae:	ss xchg ebx,eax
  4048b0:	out    dx,al
  4048b1:	loopne 0x4048ad
  4048b3:	dec    edx
  4048b4:	test   eax,0xcc1724e
  4048b9:	push   esp
  4048ba:	add    ebp,DWORD PTR [edx-0x614d1027]
  4048c0:	mov    ebp,0x63bfd00
  4048c5:	add    al,0xef
  4048c7:	addr16 fwait
  4048c9:	imul   edx,DWORD PTR [ebx+0x50],0xffffff87
  4048cd:	les    esi,FWORD PTR [ebx-0x7ca8751a]
  4048d3:	mov    eax,ds:0x75c61217
  4048d8:	jle    0x4048cf
  4048da:	push   esi
  4048db:	and    eax,0x563b1d64
  4048e0:	test   DWORD PTR [ebx],0xa423c444
  4048e6:	mov    esi,0x5dbe4e02
  4048eb:	dec    eax
  4048ec:	(bad)  
  4048ee:	cmp    eax,0x14d4d1ed
  4048f3:	dec    eax
  4048f4:	jns    0x40490e
  4048f6:	(bad)  
  4048f7:	retf   0x8e75
  4048fa:	xor    eax,0x161a162c
  4048ff:	jne    0x404935
  404901:	aaa    
  404902:	(bad)  
  404904:	or     edi,edx
  404906:	out    dx,eax
  404907:	mov    ch,0x80
  40490a:	mov    al,0x6e
  40490c:	mov    BYTE PTR [eax-0x12c289f2],ch
  404912:	push   DWORD PTR [edi-0x5645c51c]
  404918:	mov    BYTE PTR [eax+0x738c517f],ch
  40491e:	into   
  40491f:	gs cmc 
  404921:	in     eax,0xbf
  404923:	rol    BYTE PTR [edx-0x6b86d58f],1
  404929:	jnp    0x4048ba
  40492b:	addr16 test ebp,0xd4937c67
  404932:	mov    BYTE PTR [esi+0x6215bc3b],ch
  404938:	xor    DWORD PTR [ecx-0x4b],edi
  40493b:	(bad)  
  40493c:	adc    eax,0x2c04d7e7
  404941:	loop   0x4048dc
  404943:	test   eax,0x2f971101
  404949:	dec    eax
  40494a:	psraw  mm5,0xb4
  40494e:	cmp    dh,bh
  404950:	retf   0xbc2f
  404953:	xchg   esp,eax
  404954:	xor    eax,0x14f2b18c
  404959:	mov    cs,WORD PTR ds:0xa2efee32
  40495f:	in     eax,0x13
  404961:	outs   dx,DWORD PTR ds:[esi]
  404962:	nop
  404963:	sahf   
  404964:	adc    ecx,ebp
  404966:	xchg   DWORD PTR [ebx+0x1310bbad],ecx
  40496c:	mov    dl,0x56
  40496e:	jecxz  0x40497b
  404970:	loope  0x404936
  404972:	rol    DWORD PTR [edx+0x1ba6d088],cl
  404978:	inc    esi
  404979:	les    esi,FWORD PTR [edx+ebp*8-0x2559871]
  404980:	out    0x26,al
  404982:	dec    edx
  404983:	fwait
  404984:	xchg   al,cl
  404986:	cmp    eax,0xb0b3ab53
  40498b:	pushf  
  40498c:	add    BYTE PTR [esi+0x46],bh
  40498f:	mov    bh,BYTE PTR [edi]
  404991:	xchg   esp,eax
  404992:	imul   ebp,DWORD PTR [ecx*1-0x317ea985],0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x8aa2ca25
  4056ec:	rcl    bl,0x5f
  4056ef:	jl     0x40576d
  4056f1:	dec    edx
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	or     DWORD PTR [eax-0x3d],eax
  4056f8:	fdivrp st(1),st
  4056fa:	leave  
  4056fb:	or     cl,cl
  4056fd:	jecxz  0x40573f
  4056ff:	or     al,BYTE PTR [ebp-0x26]
  405702:	leave  
  405703:	scas   eax,DWORD PTR es:[edi]
  405704:	cdq    
  405705:	cmp    ch,dh
  405707:	xchg   BYTE PTR [eax-0x7c8829d5],bh
  40570d:	inc    esi
  40570e:	push   cs
  40570f:	xchg   edx,eax
  405710:	pop    eax
  405711:	inc    esi
  405712:	xchg   edx,eax
  405713:	pop    esi
  405714:	jns    0x40577e
  405716:	lds    edi,FWORD PTR [esi-0x4b]
  405719:	aaa    
  40571a:	jp     0x4056fe
  40571c:	or     ebp,DWORD PTR [ecx]
  40571e:	cwde   
  40571f:	imul   ebx,DWORD PTR cs:[eax],0xffffffbf
  405723:	dec    ebx
  405724:	xchg   DWORD PTR [ecx-0x24],edi
  405727:	pop    ds
  405728:	dec    ebx
  405729:	shl    esp,1
  40572b:	inc    eax
  40572c:	pop    ebx
  40572d:	xor    al,0x6b
  40572f:	(bad)  
  405730:	(bad)  
  405731:	add    bl,BYTE PTR [ebp-0x37]
  405734:	add    bh,BYTE PTR [ecx-0x53]
  405737:	xchg   edi,eax
  405738:	push   edx
  405739:	sub    bh,BYTE PTR [edi+eiz*4+0x6bd7023f]
  405740:	sub    esi,DWORD PTR cs:[edx+0x67]
  405744:	dec    edx
  405745:	jmp    0x6d9b4139
  40574a:	sub    BYTE PTR [esi],bh
  40574c:	faddp  st(4),st
  40574e:	or     DWORD PTR [edi+0x449ee653],edi
  405754:	add    eax,0x61d12acb
  405759:	icebp  
  40575a:	jecxz  0x4056f6
  40575c:	(bad)  
  40575d:	(bad)  
  40575e:	pop    esi
  40575f:	ja     0x405781
  405761:	mov    bl,0x3a
  405763:	or     edx,DWORD PTR [edx-0x48]
  405766:	cmp    BYTE PTR [edi-0x4259f9cf],dh
  40576c:	or     BYTE PTR [ecx-0x4504e6c2],0xca
  405773:	ins    BYTE PTR es:[edi],dx
  405774:	fcomp  QWORD PTR [edi]
  405776:	jae    0x4057e9
  405778:	cs sbb eax,0xe3bde92c
  40577e:	push   ecx
  40577f:	xchg   BYTE PTR [ecx],dh
  405781:	sbb    eax,0xdb3d39a8
  405786:	or     dh,cl
  405788:	jno    0x4057c3
  40578a:	jb     0x40574a
  40578c:	loopne 0x40575c
  40578e:	xor    al,0x7e
  405790:	sbb    al,0x3b
  405792:	bound  eax,QWORD PTR [ebx+ecx*2]
  405795:	adc    DWORD PTR [eax],ebp
  405797:	dec    esp
  405798:	lods   al,BYTE PTR cs:[esi]
  40579a:	mov    edx,0x3c4650e6
  40579f:	push   edx
  4057a0:	dec    eax
  4057a1:	xchg   edi,eax
  4057a2:	mov    fs,WORD PTR [esi-0x4b]
  4057a5:	sub    al,0xae
  4057a7:	push   esi
  4057a8:	or     al,0xc5
  4057aa:	out    dx,al
  4057ab:	pop    esi
  4057ac:	lods   eax,DWORD PTR ds:[esi]
  4057ad:	enter  0xbb98,0x3
  4057b1:	(bad)  
  4057b3:	shl    DWORD PTR [esi-0x1f],cl
  4057b6:	je     0x40574f
  4057b8:	inc    edi
  4057b9:	mov    esp,0xff25482c
  4057be:	rol    ecx,1
  4057c0:	sbb    edi,esi
  4057c2:	test   BYTE PTR [edx-0x7562a563],ch
  4057c8:	fst    QWORD PTR [ebx-0x1c]
  4057cb:	dec    eax
  4057cc:	xchg   BYTE PTR [edx+edi*2],dh
  4057cf:	mov    BYTE PTR [esp+ebx*8],dl
  4057d2:	pop    ecx
  4057d3:	mov    esi,0xde3f4c42
  4057d8:	pop    eax
  4057d9:	jge    0x40576e
  4057db:	adc    bl,dl
  4057dd:	mov    esp,0xdcf6a88b
  4057e2:	sbb    DWORD PTR ds:0x8fe17454,esi
  4057e8:	and    ch,BYTE PTR [eax]
  4057ea:	mov    edx,0x18b41d04
  4057ef:	jno    0x4057cd
  4057f1:	sahf   
  4057f2:	pop    ds
  4057f3:	outs   dx,BYTE PTR ds:[esi]
  4057f4:	push   cs
  4057f5:	lds    ecx,FWORD PTR [esi+0x18a20436]
  4057fb:	push   esp
  4057fc:	pusha  
  4057fd:	(bad)  
  4057fe:	call   DWORD PTR [esi-0x63]
  405801:	push   eax
  405802:	inc    ebx
  405803:	jecxz  0x4057f4
  405805:	loopne 0x405871
  405807:	lds    ecx,FWORD PTR [edx-0x4f]
  40580a:	dec    esp
  40580b:	pop    esp
  40580c:	push   esi
  40580d:	cmp    ecx,ebp
  40580f:	mov    dl,0x61
  405811:	push   ebx
  405812:	retf   
  405813:	stos   BYTE PTR es:[edi],al
  405814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405815:	pop    ecx
  405816:	(bad)  
  405817:	test   al,0xf9
  405819:	adc    esi,ebx
  40581b:	cwde   
  40581c:	dec    edx
  40581d:	ss cmc 
  40581f:	(bad)  
  405820:	mov    esi,0xea30babf
  405825:	mov    edx,0x58d213a0
  40582a:	adc    al,0x27
  40582c:	sbb    edx,ecx
  40582e:	add    DWORD PTR [eax-0xd],ebx
  405831:	xor    edi,DWORD PTR [ecx]
  405833:	jp     0x405847
  405835:	pop    ebx
  405836:	xchg   DWORD PTR [edx+0x5c],ecx
  405839:	aad    0x45
  40583b:	add    al,ah
  40583d:	das    
  40583e:	arpl   WORD PTR [edx],di
  405840:	addr16 inc ecx
  405842:	inc    ebp
  405843:	(bad)  [esp+ecx*4]
  405846:	jbe    0x4057fc
  405848:	mov    esp,DWORD PTR [ecx]
  40584a:	ins    BYTE PTR es:[edi],dx
  40584b:	dec    esi
  40584c:	pop    ecx
  40584d:	cli    
  40584e:	ins    BYTE PTR es:[edi],dx
  40584f:	xor    al,0x99
  405851:	and    al,0xa
  405853:	leave  
  405854:	test   BYTE PTR [ecx+ecx*2+0x7a],bh
  405858:	inc    esp
  405859:	or     al,0x7b
  40585b:	mov    cl,0x64
  40585d:	lds    ebx,FWORD PTR [eax+0x50]
  405860:	lahf   
  405861:	inc    ebx
  405862:	add    ecx,edi
  405864:	sub    DWORD PTR [ebx],eax
  405866:	mov    al,ds:0x311176b8
  40586b:	popa   
  40586c:	jle    0x405869
  40586e:	cs fsubr st,st(7)
  405871:	in     eax,dx
  405872:	mov    esp,0x860290be
  405877:	lea    ecx,[esi]
  405879:	je     0x4058b2
  40587b:	test   esi,0x8cd96a90
  405881:	pop    esi
  405882:	add    eax,0xcb118705
  405887:	jle    0x405905
  405889:	std    
  40588a:	and    DWORD PTR [edx+ecx*4],esp
  40588d:	(bad)  
  40588e:	mov    BYTE PTR [edi+0x1f],ah
  405891:	aam    0xbb
  405893:	pop    es
  405894:	or     DWORD PTR [esi+0x66fdaf04],ecx
  40589a:	push   esi
  40589b:	mov    esi,0x953e9d8e
  4058a0:	pop    ds
  4058a1:	mov    esp,0xf5a94bbc
  4058a6:	lahf   
  4058a7:	push   0x417f3270
  4058ac:	inc    edi
  4058ad:	ret    
  4058ae:	sub    edx,DWORD PTR [edi+0x7ad90308]
  4058b4:	pop    ss
  4058b5:	(bad)
  4058b9:	push   eax
  4058ba:	out    0xd8,eax
  4058bc:	cli    
  4058bd:	sub    al,cl
  4058bf:	dec    esp
  4058c0:	add    eax,0x1c4367e2
  4058c5:	les    ebx,FWORD PTR [ebx-0x749ecf48]
  4058cb:	cmp    ah,bh
  4058cd:	fdiv   st,st(0)
  4058cf:	jno    0x4058ab
  4058d1:	repnz icebp 
  4058d3:	imul   ecx,DWORD PTR [eax],0xb07cd241
  4058d9:	jae    0x4058ef
  4058db:	pop    ebp
  4058dc:	sbb    eax,edx
  4058de:	inc    esp
  4058df:	or     ebp,DWORD PTR [eax-0x77fa5e6d]
  4058e5:	or     DWORD PTR [esi],eax
  4058e7:	jo     0x40594a
  4058e9:	xchg   ebp,eax
  4058ea:	lea    edx,[edi-0x26d2f7f5]
  4058f0:	sub    esi,DWORD PTR [esi]
  4058f2:	push   eax
  4058f3:	arpl   WORD PTR [esi-0x5b],cx
  4058f6:	rcr    DWORD PTR [eax],0xdf
  4058f9:	sbb    DWORD PTR [eax],edi
  4058fb:	cmp    BYTE PTR [edi-0x6f],cl
  4058fe:	popa   
  4058ff:	sbb    al,al
  405901:	ror    DWORD PTR [ecx+esi*8],1
  405904:	ret    0xa46e
  405907:	cmp    eax,0xf8461183
  40590c:	hlt    
  40590d:	pop    es
  40590e:	and    edx,DWORD PTR [esi]
  405910:	clc    
  405911:	jo     0x40595a
  405913:	mov    ebx,0xfcdbaf36
  405918:	not    BYTE PTR [esi+0x624b2c4b]
  40591e:	inc    ebp
  40591f:	(bad)  
  405920:	adc    ah,bl
  405922:	jecxz  0x40598e
  405924:	cmp    DWORD PTR [edi-0x2e5af4fe],ebp
  40592a:	mov    esi,DWORD PTR [edi]
  40592c:	sub    al,0x29
  40592e:	xchg   ebx,eax
  40592f:	iret   
  405930:	jbe    0x4059ac
  405932:	imul   esp,DWORD PTR [esi+eax*8-0x16],0x71
  405937:	or     ch,BYTE PTR [edx-0x8]
  40593a:	sub    BYTE PTR [ebx],ah
  40593c:	and    DWORD PTR [ecx-0x6b],ecx
  40593f:	sub    BYTE PTR [edi+edx*4-0x3d],bl
  405943:	push   eax
  405944:	jns    0x405920
  405946:	pop    esp
  405947:	(bad)  
  405948:	mov    ebp,gs
  40594a:	stc    
  40594b:	sar    bh,1
  40594d:	ret    0xb31c
  405950:	rol    BYTE PTR [ebp*8+0x3e9c8c0f],cl
  405957:	jne    0x40595c
  405959:	rol    bl,1
  40595b:	pop    ss
  40595c:	sbb    al,BYTE PTR ds:0xed8a55da
  405962:	dec    ebp
  405963:	mov    esi,0xf1af55f7
  405968:	js     0x4058ef
  40596a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40596b:	sub    dh,BYTE PTR [ebx-0x32]
  40596e:	jb     0x4af8209e
  405974:	xor    eax,0xe2a1245d
  405979:	xor    eax,0xf29f172e
  40597e:	repnz rol BYTE PTR [esi],1
  405981:	jmp    0xc6e23bcd
  405986:	jge    0x405926
  405988:	dec    ecx
  405989:	jnp    0x4059b5
  40598b:	(bad)  
  40598c:	out    dx,al
  40598d:	add    eax,0xd961fa3e
  405992:	(bad)  
  405993:	and    ch,BYTE PTR [edi+0x7c525970]
  405999:	cli    
  40599a:	sbb    edi,DWORD PTR [edi-0x29]
  40599d:	xor    ecx,DWORD PTR [ebx+0x5f202e69]
  4059a3:	out    dx,eax
  4059a4:	in     eax,0xb8
  4059a6:	cwde   
  4059a7:	idiv   DWORD PTR [ecx+0x5a617167]
  4059ad:	xchg   esp,edi
  4059af:	pusha  
  4059b0:	cmp    al,0x63
  4059b2:	ins    BYTE PTR es:[edi],dx
  4059b3:	jecxz  0x4059c9
  4059b5:	ds ins BYTE PTR es:[edi],dx
  4059b7:	mov    al,0x1f
  4059b9:	adc    esi,DWORD PTR [edx-0x7f8f1324]
  4059bf:	xor    al,0x80
  4059c1:	jp     0x405a0a
  4059c3:	call   0x418b:0x67be37c1
  4059ca:	pusha  
  4059cb:	mul    BYTE PTR [ebx+edi*2-0x34]
  4059cf:	add    al,0xe7
  4059d1:	fcomp  DWORD PTR [edi+0x45265e70]
  4059d7:	adc    eax,0x50f2a37f
  4059dc:	mov    ah,ch
  4059de:	pop    ss
  4059df:	push   edx
  4059e0:	jmp    0xb232:0x4dcf26b0
  4059e7:	repnz xchg ecx,eax
  4059e9:	and    al,0x8f
  4059eb:	or     bh,BYTE PTR [eax-0x1b946425]
  4059f1:	xchg   ebp,eax
  4059f2:	inc    esp
  4059f3:	daa    
  4059f4:	mov    cl,dh
  4059f6:	pop    ebx
  4059f7:	nop
  4059f8:	pop    ds
  4059f9:	cdq    
  4059fa:	add    al,0xa8
  4059fc:	push   ebx
  4059fd:	dec    ebp
  4059fe:	pop    ds
  4059ff:	imul   edx,DWORD PTR [ecx],0x31f805ce
  405a05:	fsubr  QWORD PTR [ebx-0x33a84d20]
  405a0b:	ror    eax,cl
  405a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a0e:	out    dx,al
  405a0f:	jg     0x405a08
  405a11:	mov    dl,0xa2
  405a13:	(bad)  
  405a14:	mov    ds:0x76f32c6c,eax
  405a19:	inc    ebx
  405a1a:	stos   DWORD PTR es:[edi],eax
  405a1b:	out    dx,eax
  405a1c:	add    ah,dl
  405a1e:	sbb    DWORD PTR [edx+ebp*8],esp
  405a21:	dec    esp
  405a22:	inc    ebx
  405a23:	cdq    
  405a24:	data16 je 0x405a76
  405a27:	gs jns 0x405a95
  405a2a:	sub    DWORD PTR [ecx],esi
  405a2c:	out    dx,eax
  405a2d:	ins    BYTE PTR es:[edi],dx
  405a2e:	mov    dh,0x27
  405a30:	dec    esp
  405a31:	push   0xffffff8a
  405a33:	ret    
  405a34:	ret    
  405a35:	out    dx,al
  405a36:	mov    dh,0xa2
  405a38:	pusha  
  405a39:	mov    ebx,0x3a21360d
  405a3e:	sbb    bh,BYTE PTR [edi+0x3b]
  405a41:	pop    edi
  405a42:	xchg   BYTE PTR [edx],ah
  405a44:	mov    edi,0x26af0476
  405a49:	pushf  
  405a4a:	jecxz  0x405a6d
  405a4c:	js     0x405aa4
  405a4e:	jae    0x405aa7
  405a50:	cmc    
  405a51:	inc    eax
  405a52:	sub    BYTE PTR [eax+0x5f],bl
  405a55:	xchg   edx,eax
  405a56:	jp     0x405a0a
  405a58:	cli    
  405a59:	sbb    BYTE PTR [eax-0x2d],0xbf
  405a5d:	push   0xa6b3324b
  405a62:	fcmovb st,st(7)
  405a64:	inc    esi
  405a65:	cwde   
  405a66:	mov    ds:0x3bc4d76,eax
  405a6b:	adc    eax,0x54a27f3b
  405a70:	adc    BYTE PTR [edx-0x7f],bh
  405a73:	ds ss imul edx,esi,0x2e
  405a78:	dec    ebx
  405a79:	push   ebx
  405a7a:	in     al,0x2
  405a7c:	adc    al,0x13
  405a7e:	dec    ebx
  405a7f:	lods   eax,DWORD PTR ds:[esi]
  405a80:	ja     0x405a91
  405a82:	icebp  
  405a83:	mov    bl,0xb4
  405a85:	aaa    
  405a86:	(bad)  [edi-0x2b5aae6a]
  405a8c:	jmp    0x57f89e6d
  405a91:	pop    esi
  405a92:	sbb    ch,BYTE PTR [eax+0x7f]
  405a95:	push   ebx
  405a96:	or     edi,DWORD PTR [esi+0x50]
  405a99:	mov    ah,0xe1
  405a9b:	adc    eax,0x875eda80
  405aa0:	mov    al,ds:0x9beb695
  405aa5:	mov    cl,0xe1
  405aa7:	jns    0x405a2b
  405aa9:	imul   ebp,esp,0x24051679
  405aaf:	sahf   
  405ab0:	cmp    eax,0xe093d2aa
  405ab5:	and    DWORD PTR [ecx],esi
  405ab7:	jnp    0x405a66
  405ab9:	jae    0x405acb
  405abb:	dec    ecx
  405abc:	pop    ebx
  405abd:	or     al,0x28
  405abf:	inc    esp
  405ac0:	sub    eax,0xb4ceacd0
  405ac5:	jmp    0xa29d:0x5f528285
  405acc:	(bad)  
  405acd:	sbb    BYTE PTR [ebp-0x41],ch
  405ad0:	and    WORD PTR [esi+eax*1+0x33],dx
  405ad5:	(bad)  
  405ad6:	or     cl,bl
  405ad8:	daa    
  405ad9:	cmp    DWORD PTR [edi-0x42a050d],ebx
  405adf:	cld    
  405ae0:	xor    ch,BYTE PTR [eax]
  405ae2:	pop    sp
  405ae4:	pop    esi
  405ae5:	mov    ebx,0xa54b91e6
  405aea:	jbe    0x405b13
  405aec:	lahf   
  405aed:	out    0x83,al
  405aef:	add    edi,ebp
  405af1:	sub    eax,0xbc896e62
  405af6:	push   0x5f
  405af8:	sbb    al,0x1e
  405afa:	inc    esi
  405afb:	mov    ebx,0xd2206e85
  405b00:	push   0xc3b78de2
  405b05:	dec    esi
  405b06:	fld    TBYTE PTR [ecx+eax*4+0x62588ee4]
  405b0d:	(bad)  
  405b0e:	std    
  405b0f:	push   ebp
  405b10:	enter  0xeb53,0x9e
  405b14:	xor    cl,al
  405b16:	fsub   st,st(1)
  405b18:	xchg   edx,eax
  405b19:	popf   
  405b1a:	test   ebp,ebx
  405b1c:	ja     0x405afe
  405b1e:	popf   
  405b1f:	out    dx,al
  405b20:	dec    esp
  405b21:	sub    al,0x19
  405b23:	or     al,0x25
  405b25:	xchg   ecx,eax
  405b26:	and    ah,BYTE PTR [edx-0x1c]
  405b29:	ja     0x405b38
  405b2b:	jmp    0x50fbe9ac
  405b30:	dec    esp
  405b31:	(bad)  
  405b32:	mov    dh,0xc
  405b34:	mov    ds:0x5d25f1c5,eax
  405b39:	stos   DWORD PTR es:[edi],eax
  405b3a:	psllw  mm3,QWORD PTR [ecx]
  405b3d:	lds    esi,FWORD PTR [eax-0x2e4ee9a2]
  405b43:	or     ebp,DWORD PTR [edi+edi*8]
  405b46:	jae    0x405b38
  405b48:	outs   dx,DWORD PTR ds:[esi]
  405b49:	pop    esp
  405b4a:	jmp    0x80229fe6
  405b4f:	sub    BYTE PTR [ebx-0x65],cl
  405b52:	inc    ebp
  405b53:	ins    BYTE PTR es:[edi],dx
  405b54:	js     0x405bcc
  405b56:	sub    BYTE PTR ds:0xef3a8890,dh
  405b5c:	jnp    0x405baa
  405b5e:	sbb    DWORD PTR [eax],0xfffffff3
  405b61:	hlt    
  405b62:	fist   DWORD PTR [edx+0x34]
  405b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b66:	shl    DWORD PTR [esi-0x4c],0xb1
  405b6a:	dec    eax
  405b6b:	add    eax,0x8e6a9c82
  405b70:	cdq    
  405b71:	xchg   ecx,eax
  405b72:	in     eax,dx
  405b73:	lahf   
  405b74:	cs pusha 
  405b76:	std    
  405b77:	or     BYTE PTR [ebx],dl
  405b79:	xor    al,0x75
  405b7b:	enter  0xb36e,0xf3
  405b7f:	or     BYTE PTR ds:0x53117a16,0x55
  405b86:	or     ebp,ebp
  405b88:	cmp    BYTE PTR [eax+0x2cc206e8],cl
  405b8e:	in     eax,dx
  405b8f:	pop    ebp
  405b90:	enter  0xd6ba,0xda
  405b94:	int3   
  405b95:	push   0xc0d22d6c
  405b9a:	pop    ecx
  405b9b:	std    
  405b9c:	cmp    ebx,DWORD PTR [edi]
  405b9e:	mov    DWORD PTR [edx+eiz*1+0x28],edi
  405ba2:	jl     0x405bc5
  405ba4:	and    al,0x36
  405ba6:	ret    0xf26d
  405ba9:	dec    ecx
  405baa:	push   cs
  405bab:	ss xchg ebx,eax
  405bad:	pop    ebp
  405bae:	aaa    
  405baf:	ficomp DWORD PTR [ebp-0x2f053cb]
  405bb5:	push   esp
  405bb6:	popa   
  405bb7:	push   es
  405bb8:	dec    ebx
  405bb9:	jg     0x405b7c
  405bbb:	mov    ah,bh
  405bbd:	xor    al,0x91
  405bbf:	xchg   DWORD PTR [ebx],ebp
  405bc1:	lea    esp,[ecx]
  405bc3:	stos   DWORD PTR es:[edi],eax
  405bc4:	lds    eax,FWORD PTR [eax+0x3bf93dea]
  405bca:	sub    edx,DWORD PTR [edx]
  405bcc:	mul    bh
  405bce:	(bad)  
  405bcf:	push   0xc91a454
  405bd4:	retf   0xec6e
  405bd7:	ins    DWORD PTR es:[edi],dx
  405bd8:	push   esi
  405bd9:	mov    bh,0x2b
  405bdb:	and    al,0xb0
  405bdd:	cs mov bh,0xde
  405be0:	repz sub edi,DWORD PTR ds:0x6c2ef4dd
  405be7:	and    esi,DWORD PTR [esi+0x367b9fac]
  405bed:	push   0xffffffc0
  405bef:	or     BYTE PTR [ecx],0x7
  405bf2:	imul   edi,edx,0xeaa16d92
  405bf8:	and    cl,BYTE PTR [ebx+0x8]
  405bfb:	push   ebx
  405bfc:	(bad)  
  405bfd:	cmp    al,0x1a
  405bff:	sbb    BYTE PTR [eax+0x7e1de00f],ch
  405c05:	pop    edx
  405c06:	ret    
  405c07:	fst    DWORD PTR [esi]
  405c09:	add    BYTE PTR [edx+0xc33ec85],0x88
  405c10:	(bad)  
  405c11:	sbb    al,0xa
  405c13:	and    ah,dh
  405c15:	or     eax,0x2eec2e53
  405c1a:	es or  al,0x3a
  405c1d:	xchg   DWORD PTR ds:0x5a95cd98,ebp
  405c23:	push   es
  405c24:	jg     0x405be9
  405c26:	dec    ebp
  405c27:	hlt    
  405c28:	lock dec ebp
  405c2a:	pop    ecx
  405c2b:	mov    DWORD PTR ss:[edi+0x2d],esp
  405c2f:	xchg   esp,eax
  405c30:	xor    al,0x3f
  405c32:	popf   
  405c33:	lock sub BYTE PTR [edi-0xf],bl
  405c37:	add    eax,0x4cb755b7
  405c3c:	sbb    DWORD PTR [esi-0x58],0xfffffff5
  405c40:	xchg   BYTE PTR [esi+ebx*1-0x5f],bh
  405c44:	pop    ecx
  405c45:	in     eax,0x5
  405c47:	mov    bh,0xbf
  405c49:	shl    dh,cl
  405c4b:	jns    0x405ca2
  405c4d:	call   0xf7b9:0x5cea92b6
  405c54:	cli    
  405c55:	stos   DWORD PTR es:[edi],eax
  405c56:	icebp  
  405c57:	test   eax,0xcd457ffa
  405c5c:	loope  0x405c70
  405c5e:	dec    ebx
  405c5f:	call   0x4811f52c
  405c64:	mov    edx,0x6fec7d9b
  405c69:	fdiv   QWORD PTR [ecx+0x7d90d229]
  405c6f:	xor    eax,0xdd8f935f
  405c74:	mov    al,ds:0x6b2a8dac
  405c79:	cwde   
  405c7a:	sbb    ah,BYTE PTR ds:0xb655f982
  405c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c81:	pop    esp
  405c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c83:	int3   
  405c84:	cmp    BYTE PTR [eax],al
  405c86:	jmp    0x405ce9
  405c88:	mov    al,0xc4
  405c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c8b:	repnz fsub DWORD PTR [ecx-0x6f6943bd]
  405c92:	xor    eax,0xf6c1a4fa
  405c97:	lea    ebx,[ecx]
  405c99:	mov    ch,0x72
  405c9b:	adc    BYTE PTR [eax+0x47de2fb0],dh
  405ca1:	ins    BYTE PTR es:[edi],dx
  405ca2:	dec    esp
  405ca3:	imul   ebx,DWORD PTR [esp+esi*8+0x24183653],0x993f492b
  405cae:	mov    edx,0xf358ee05
  405cb3:	stc    
  405cb4:	xchg   esp,eax
  405cb5:	repnz fnstenv [edx+0xd]
  405cb9:	pop    ebx
  405cba:	dec    edx
  405cbb:	sub    BYTE PTR [ebp+0x27],dl
  405cbe:	fwait
  405cbf:	bt     DWORD PTR [ebx],ebp
  405cc2:	fimul  WORD PTR [ebp-0x48]
  405cc5:	adc    DWORD PTR [esi],esi
  405cc7:	in     eax,dx
  405cc8:	sahf   
  405cc9:	scas   al,BYTE PTR es:[edi]
  405cca:	inc    esi
  405ccb:	lods   eax,DWORD PTR es:[esi]
  405ccd:	cwde   
  405cce:	dec    ebp
  405ccf:	sar    BYTE PTR [eax],0xe5
  405cd2:	add    cl,BYTE PTR ds:0xa206e4d3
  405cd8:	push   edx
  405cd9:	mov    cs:0xc2a9be38,al
  405cdf:	ja     0x405c68
  405ce1:	jmp    0x405cd4
  405ce3:	mov    esi,DWORD PTR [eax-0x60e1401c]
  405ce9:	pop    esp
  405cea:	ret    0x48f0
  405ced:	jle    0x405cba
  405cef:	jmp    0x6d3:0x9843c496
  405cf6:	call   0xa6be:0xf40b8f48
  405cfd:	icebp  
  405cfe:	pop    ecx
  405cff:	mov    esp,DWORD PTR [edi-0x3f21879]
  405d05:	jno    0x405d67
  405d07:	or     al,0x84
  405d09:	ds loope 0x405cbf
  405d0c:	ret    
  405d0d:	(bad)  
  405d0f:	pop    edi
  405d10:	mov    eax,0xfb4058b7
  405d15:	sbb    esp,0xfffffff4
  405d18:	jge    0x405d8f
  405d1a:	cs sbb al,0x36
  405d1d:	xor    DWORD PTR [ecx],edx
  405d1f:	add    bh,bh
  405d21:	sahf   
  405d22:	in     al,0x8f
  405d24:	fsub   QWORD PTR [eax]
  405d26:	cli    
  405d27:	mov    bl,0x34
  405d29:	sub    al,0x8d
  405d2b:	jmp    0xa3af:0x3425f8cd
  405d32:	push   0x3609d7f6
  405d37:	popf   
  405d38:	jae    0x405d5a
  405d3a:	mov    ah,0x6
  405d3c:	push   ebp
  405d3d:	in     eax,dx
  405d3e:	loope  0x405d78
  405d40:	add    eax,0x46bdf7db
  405d45:	in     eax,dx
  405d46:	clc    
  405d47:	mov    fs,edx
  405d49:	int    0xb9
  405d4b:	(bad)  
  405d4c:	lods   al,BYTE PTR ds:[esi]
  405d4d:	rcr    BYTE PTR [edx+0x1fc18c2b],0xe6
  405d54:	jmp    0x405d69
  405d56:	int    0x2c
  405d58:	sub    eax,0x8a081424
  405d5d:	cmp    cl,BYTE PTR [ebp-0x1ae6dc19]
  405d63:	fidivr DWORD PTR [esi]
  405d65:	xchg   ebp,eax
  405d66:	in     al,0xe7
  405d68:	mov    ds:0x3c0d0460,al
  405d6d:	add    BYTE PTR [ebx],0x19
  405d70:	jb     0x405d1a
  405d72:	out    0x0,eax
  405d74:	add    DWORD PTR [ecx-0x7e],edx
  405d77:	jmp    0x60030f52
  405d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7d:	inc    edi
  405d7e:	mov    ds:0x621dac34,al
  405d83:	ret    0x7994
  405d86:	push   ds
  405d87:	pop    esi
  405d88:	mov    al,ds:0x69aa91e9
  405d8d:	(bad)  
  405d8e:	ficomp WORD PTR [ebp+0x4d9f133b]
  405d94:	and    ebx,DWORD PTR ds:0x1138467d
  405d9a:	mov    ah,BYTE PTR [edx]
  405d9c:	mov    bl,0xc1
  405d9e:	jmp    0x405d91
  405da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da1:	sub    DWORD PTR [eax],esp
  405da3:	mov    ch,0xe4
  405da5:	clc    
  405da6:	lea    eax,[eax-0x4d]
  405da9:	mov    ds:0xf7d55d4f,eax
  405dae:	add    BYTE PTR [esi],bh
  405db0:	leave  
  405db1:	rcr    DWORD PTR [esi+0x4668705f],1
  405db7:	pusha  
  405db8:	test   eax,0x56c1c639
  405dbd:	out    0xed,eax
  405dbf:	adc    BYTE PTR [ebp+0x56],ch
  405dc2:	xor    al,0x74
  405dc4:	mov    ?,ebp
  405dc6:	ins    DWORD PTR es:[edi],dx
  405dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc8:	mov    eax,ds:0x61e923bc
  405dcd:	mov    esp,0x163afed0
  405dd2:	fbld   TBYTE PTR [ebx+ebx*1-0x54]
  405dd6:	cmp    edi,edi
  405dd8:	lea    ecx,[eax-0x44e69c42]
  405dde:	inc    ebp
  405ddf:	push   edx
  405de0:	and    al,0x9c
  405de2:	jg     0x405e5c
  405de4:	and    DWORD PTR [edi-0x578e7f7c],edx
  405dea:	int    0xe0
  405dec:	xor    BYTE PTR [edi],bl
  405dee:	jg     0x405df3
  405df0:	pop    ss
  405df1:	stos   DWORD PTR es:[edi],eax
  405df2:	mov    ah,0xb9
  405df4:	xor    al,0xf0
  405df6:	clc    
  405df7:	bound  eax,QWORD PTR [edx]
  405df9:	sbb    DWORD PTR [eax-0x209f83bd],esp
  405dff:	packssdw mm1,QWORD PTR [ebp-0x67b7f1b]
  405e06:	popf   
  405e07:	(bad)  [edi-0x31]
  405e0a:	aam    0x6f
  405e0c:	mov    esi,DWORD PTR [edi]
  405e0e:	in     al,dx
  405e0f:	and    eax,0xaae44829
  405e14:	adc    esi,eax
  405e16:	push   esi
  405e17:	sahf   
  405e18:	mov    eax,0x47b3ffca
  405e1d:	cmp    DWORD PTR [edx+eiz*4+0x6f78997b],esi
  405e24:	mov    ebx,DWORD PTR [eax-0x21]
  405e27:	sbb    bh,cl
  405e29:	(bad)  
  405e2a:	sub    edx,DWORD PTR [ebp+0x2d1bc42a]
  405e30:	sahf   
  405e31:	pusha  
  405e32:	mov    esi,0xb8747f02
  405e37:	add    BYTE PTR [edi+ebx*2],dl
  405e3a:	data16 fist WORD PTR [esi+0x702707e9]
  405e41:	js     0x405e65
  405e43:	jg     0x405e67
  405e45:	cdq    
  405e46:	cld    
  405e47:	jbe    0x405e9c
  405e49:	sub    BYTE PTR [esi-0x1f],0x50
  405e4d:	mov    ebp,0x9c599bb9
  405e52:	ins    DWORD PTR es:[edi],dx
  405e53:	aad    0x5d
  405e55:	push   esi
  405e56:	pop    edi
  405e57:	jle    0x405e8e
  405e59:	loop   0x405e97
  405e5b:	inc    edi
  405e5c:	out    0x34,al
  405e5e:	test   DWORD PTR [ecx],ecx
  405e60:	std    
  405e61:	and    BYTE PTR [ebx-0x30a7ca9d],bl
  405e67:	imul   ecx,edx,0x9cd60aef
  405e6d:	cdq    
  405e6e:	xchg   edi,eax
  405e6f:	loopne 0x405e1a
  405e71:	pop    esp
  405e72:	jbe    0x405ecd
  405e74:	outs   dx,BYTE PTR cs:[esi]
  405e76:	(bad)  
  405e77:	jno    0x405e82
  405e79:	or     DWORD PTR [edx-0x713d114b],edi
  405e7f:	fs aad 0x9
  405e82:	popa   
  405e83:	(bad)  [edx+esi*4]
  405e86:	ds mov eax,0xaf5325c8
  405e8c:	imul   ebp,DWORD PTR ds:0xfef0f45c,0x23
  405e93:	gs mov ch,0x4a
  405e96:	mov    ah,0x38
  405e98:	adc    esi,DWORD PTR [edx]
  405e9a:	xor    dl,ch
  405e9c:	sub    edi,esi
  405e9e:	cmc    
  405e9f:	add    esp,esi
  405ea1:	fstp   QWORD PTR [ebx+0x75]
  405ea4:	mov    eax,0xab4bf225
  405ea9:	jmp    0x6847fff5
  405eae:	push   ss
  405eaf:	or     esi,esi
  405eb1:	test   DWORD PTR [ebx],edi
  405eb3:	sub    dl,BYTE PTR [esi+ecx*4+0x55aa1bcc]
  405eba:	add    edx,DWORD PTR [edi+edx*4]
  405ebd:	pop    edx
  405ebe:	inc    ebx
  405ebf:	mov    esi,0x20477f55
  405ec4:	call   FWORD PTR [esp+esi*8-0x67]
  405ec8:	popf   
  405ec9:	cwde   
  405eca:	push   edx
  405ecb:	addr16 pop edi
  405ecd:	dec    edi
  405ece:	gs mov ah,0x1e
  405ed1:	or     edi,DWORD PTR [edi+0x2162a113]
  405ed7:	(bad)  
  405ed8:	jl     0x405f1f
  405eda:	push   ds
  405edb:	stc    
  405edc:	test   al,0x36
  405ede:	mov    ebp,0xb31d9964
  405ee3:	dec    esi
  405ee4:	std    
  405ee5:	int    0x2c
  405ee7:	and    eax,0x9b4329dc
  405eec:	inc    esi
  405eed:	cmp    al,0xcb
  405eef:	and    DWORD PTR [edx-0x4c],ecx
  405ef2:	loopne 0x405f45
  405ef4:	mov    al,ds:0xedee74e1
  405ef9:	fsub   QWORD PTR [ebx+0x3b1e4b15]
  405eff:	scas   eax,DWORD PTR es:[edi]
  405f00:	es push esp
  405f02:	loope  0x405f3a
  405f04:	push   ebp
  405f05:	adc    bh,bl
  405f07:	out    dx,eax
  405f08:	mov    BYTE PTR [ecx-0x42],dh
  405f0b:	cmp    al,0xbc
  405f0d:	fwait
  405f0e:	and    ah,cl
  405f10:	stos   BYTE PTR es:[edi],al
  405f11:	pop    ecx
  405f12:	inc    ebp
  405f13:	push   0xffffff83
  405f15:	adc    BYTE PTR [edx-0x2d5a3bc2],bh
  405f1b:	(bad)  
  405f1d:	(bad)  
  405f1e:	cmp    DWORD PTR [esi+0x68b8b8b0],esp
  405f24:	and    BYTE PTR [edi+ebx*1],bh
  405f27:	or     BYTE PTR [ebp+0x779ce4dc],ch
  405f2d:	pop    ds
  405f2e:	popa   
  405f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f30:	fist   WORD PTR ds:0x917b9a9b
  405f36:	inc    eax
  405f37:	enter  0x35d5,0xb
  405f3b:	js     0x405ee6
  405f3d:	xchg   DWORD PTR [ebx-0x59],edi
  405f40:	pop    ds
  405f41:	add    dl,dh
  405f43:	js     0x405f52
  405f45:	inc    edx
  405f46:	sti    
  405f47:	push   0x6e
  405f49:	mov    bl,BYTE PTR [ebp+0x5]
  405f4c:	scas   al,BYTE PTR es:[edi]
  405f4d:	out    0xe8,eax
  405f4f:	and    DWORD PTR [esi+ebp*2+0x22567860],esp
  405f56:	pop    ebp
  405f57:	adc    DWORD PTR [ecx+0x42],esp
  405f5a:	sub    BYTE PTR [ebx+0x5f07f664],0xfd
  405f61:	das    
  405f62:	pushf  
  405f63:	shl    DWORD PTR [esi+0x6e0b4191],0xa
  405f6a:	cmp    cl,BYTE PTR [eax+ebp*8-0x5b]
  405f6e:	push   edx
  405f6f:	daa    
  405f70:	jle    0x405f17
  405f72:	aas    
  405f73:	icebp  
  405f74:	dec    BYTE PTR [ecx]
  405f76:	dec    eax
  405f77:	stos   BYTE PTR es:[edi],al
  405f78:	arpl   bp,bp
  405f7a:	pop    ds
  405f7b:	xor    ebp,edi
  405f7d:	in     al,dx
  405f7e:	jge    0x405f2c
  405f80:	inc    esp
  405f81:	and    esi,edx
  405f83:	or     dh,BYTE PTR [esi+0x5357c357]
  405f89:	mov    dh,0x75
  405f8b:	mov    cl,0x6f
  405f8d:	bound  edx,QWORD PTR [esi-0x23]
  405f90:	int3   
  405f91:	out    dx,al
  405f92:	sbb    eax,0x7c8a78cd
  405f97:	push   edx
  405f98:	xchg   edi,eax
  405f99:	dec    ecx
  405f9a:	lahf   
  405f9b:	xchg   edi,eax
  405f9c:	scas   eax,DWORD PTR es:[edi]
  405f9d:	jge    0x405f86
  405f9f:	dec    esi
  405fa0:	mov    ebx,fs
  405fa2:	xchg   esp,eax
  405fa3:	das    
  405fa4:	pop    edx
  405fa5:	and    ebx,DWORD PTR ds:0x67f19fcb
  405fab:	fs and al,0x5f
  405fae:	xor    ah,BYTE PTR [edx]
  405fb0:	pop    edx
  405fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb2:	mov    ah,0x2b
  405fb4:	icebp  
  405fb5:	mov    cl,0x1a
  405fb7:	or     edx,DWORD PTR [edx+0x7650c247]
  405fbd:	loop   0x405f89
  405fbf:	mov    bh,0xed
  405fc1:	push   esi
  405fc2:	add    DWORD PTR [edi],ebp
  405fc4:	jae    0x405f91
  405fc6:	inc    edx
  405fc7:	push   ss
  405fc8:	inc    esi
  405fc9:	jp     0x405f9d
  405fcb:	push   cs
  405fcc:	sub    esp,ebp
  405fce:	jmp    0x327c:0x7f7ef871
  405fd5:	pop    eax
  405fd6:	cmp    BYTE PTR [edx+0x4210f250],ch
  405fdc:	imul   edi,DWORD PTR [eax+0x41687fef],0xca06008b
  405fe6:	fwait
  405fe7:	or     edi,ebx
  405fe9:	push   es
  405fea:	loopne 0x405fb9
  405fec:	sub    DWORD PTR [esi-0x2d9d9cbd],esp
  405ff2:	xor    BYTE PTR [esi+0x33],ah
  405ff5:	adc    ebx,DWORD PTR [esi]
  405ff7:	pop    ss
  405ff8:	xchg   ebx,eax
  405ff9:	out    dx,al
  405ffa:	inc    eax
  405ffb:	call   0x2f3dc765
  406000:	mov    ch,0xf8
  406002:	jbe    0x405f8a
  406004:	jle    0x406006
  406006:	retf   0xad50
  406009:	pop    eax
  40600a:	mov    eax,ds:0x42b864a0
  40600f:	push   ds
  406010:	ja     0x406030
  406012:	in     eax,dx
  406013:	dec    eax
  406014:	fild   DWORD PTR [esi]
  406016:	jmp    0x405f9c
  406018:	lahf   
  406019:	loopne 0x40605c
  40601b:	jge    0x406052
  40601d:	push   0x4e
  40601f:	sub    esi,DWORD PTR [ebp+0x75036d9e]
  406025:	or     edi,esp
  406027:	adc    DWORD PTR [esi],ebx
  406029:	inc    esi
  40602a:	dec    ebx
  40602b:	sbb    ah,cl
  40602d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40602e:	mov    bh,0x5b
  406030:	adc    al,0xa
  406032:	loopne 0x406021
  406034:	(bad)  
  406035:	stc    
  406036:	xchg   ebx,eax
  406037:	nop
  406038:	xchg   ebx,eax
  406039:	jg     0x4060b7
  40603b:	lds    edi,FWORD PTR [edx+0x58]
  40603e:	pop    ebx
  40603f:	pusha  
  406040:	cmp    al,0x6c
  406042:	add    edx,DWORD PTR [eax+0x7fa4bcd5]
  406048:	repz imul ebx,ebx,0x40
  40604c:	inc    ebp
  40604d:	test   BYTE PTR cs:[ebp+esi*4+0x5a],ah
  406052:	cmp    DWORD PTR [ebx-0x26],esi
  406055:	inc    edi
  406056:	jmp    0xc69e:0xd7cdd8ee
  40605d:	xlat   BYTE PTR ds:[ebx]
  40605e:	sbb    al,0x4f
  406060:	outs   dx,BYTE PTR ds:[esi]
  406061:	jns    0x40605e
  406063:	sub    eax,0x3012ddfc
  406068:	mov    WORD PTR [edi+0x41],?
  40606b:	loopne 0x406022
  40606d:	sbb    al,0xf8
  40606f:	mov    ?,WORD PTR [edi]
  406071:	push   ecx
  406072:	xchg   edx,eax
  406073:	push   ecx
  406074:	fld    DWORD PTR [edx+0x1f]
  406077:	jo     0x40604c
  406079:	cli    
  40607a:	(bad)  
  40607c:	cmp    dl,BYTE PTR [esi+0x5b]
  40607f:	cmp    bl,BYTE PTR [edi]
  406081:	push   ss
  406082:	fadd   QWORD PTR [ebp-0x34db09eb]
  406088:	jmp    0x5ff3:0xaa4f2101
  40608f:	icebp  
  406090:	cmp    al,0xbf
  406092:	(bad)  
  406093:	icebp  
  406094:	jno    0x406024
  406096:	mov    bl,0x36
  406098:	add    al,0x8
  40609a:	aas    
  40609b:	mov    esp,0x52271001
  4060a0:	pop    ebp
  4060a1:	adc    DWORD PTR [ecx-0x77],0x6e
  4060a5:	lds    esp,FWORD PTR [ebp+ecx*2-0x5e]
  4060a9:	popf   
  4060aa:	dec    ebx
  4060ab:	pushf  
  4060ac:	xor    edi,eax
  4060ae:	xor    ch,BYTE PTR [ecx]
  4060b0:	jns    0x4060a1
  4060b2:	lock pop esi
  4060b4:	push   ss
  4060b5:	inc    DWORD PTR [esi-0x5d]
  4060b8:	sar    BYTE PTR [edx+0x6e],1
  4060bb:	jmp    0x65f6:0xd3b20b7d
  4060c2:	push   ds
  4060c3:	mov    bh,0xf1
  4060c5:	mov    esp,0x2ca973a3
  4060ca:	pop    ss
  4060cb:	or     al,0x70
  4060cd:	pop    ecx
  4060ce:	out    0x69,al
  4060d0:	mov    ebp,0x3e7cbff3
  4060d5:	lods   eax,DWORD PTR ds:[esi]
  4060d6:	out    dx,al
  4060d7:	add    cl,BYTE PTR [edx+esi*4-0x5bfe0b65]
  4060de:	mov    eax,ds:0xc4aeac42
  4060e3:	xchg   ebp,eax
  4060e4:	adc    DWORD PTR [edx+0x61cfbf4f],0xdc1eb2a3
  4060ee:	scas   eax,DWORD PTR es:[edi]
  4060ef:	push   edx
  4060f0:	jge    0x40610b
  4060f2:	(bad)  
  4060f3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f5:	out    dx,eax
  4060f6:	pop    ebp
  4060f7:	test   BYTE PTR [edx-0x7588ad9],ah
  4060fd:	neg    BYTE PTR [ebx+0x83f5f18]
  406103:	or     eax,0xfcfbaa26
  406108:	jne    0x40615c
  40610a:	daa    
  40610b:	imul   ebp,DWORD PTR [edi-0x7d],0x71064048
  406112:	xor    BYTE PTR [esi],ch
  406114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406115:	jge    0x406116
  406117:	dec    edx
  406118:	push   0xffffffcc
  40611a:	or     al,0xb1
  40611c:	(bad)  
  40611d:	test   BYTE PTR [edi+edi*4],ch
  406120:	aaa    
  406121:	leave  
  406122:	push   ebp
  406123:	aaa    
  406124:	cmp    BYTE PTR [ecx-0x1f1de6bb],ch
  40612a:	lods   al,BYTE PTR ds:[esi]
  40612b:	dec    edx
  40612c:	mov    es,WORD PTR [edi+eiz*8-0x1d822e63]
  406133:	cmp    eax,DWORD PTR [ebx-0x98bd264]
  406139:	test   eax,0xe449be51
  40613e:	(bad)  
  406140:	mov    dh,0x47
  406142:	daa    
  406143:	xchg   ebp,eax
  406144:	xor    eax,0xcaace4ff
  406149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40614a:	jmp    0x4617:0x6058a211
  406151:	(bad)  
  406153:	mov    WORD PTR [ebx-0x6d],ds
  406156:	fidivr WORD PTR [eax+0x8]
  406159:	mov    DWORD PTR ss:[esi-0x7],0xf935f7b
  406161:	ret    0xf2a1
  406164:	in     eax,0x71
  406166:	adc    eax,0xa4edefe4
  40616b:	inc    edi
  40616c:	lock mov fs,WORD PTR [esi-0x5600aac6]
  406173:	(bad)  
  406174:	jg     0x4061a0
  406176:	scas   eax,DWORD PTR es:[edi]
  406177:	outs   dx,BYTE PTR ds:[esi]
  406178:	out    0x2b,al
  40617a:	xchg   DWORD PTR [ebx+0x9cf8cf6],eax
  406180:	and    BYTE PTR [edi+0x43],0x2a
  406184:	jmp    0x406141
  406186:	mov    eax,ds:0xe22d5387
  40618b:	xlat   BYTE PTR ds:[ebx]
  40618c:	out    0x8c,eax
  40618e:	fisub  DWORD PTR [eax+0x3e3fc333]
  406194:	ins    DWORD PTR es:[edi],dx
  406195:	inc    esp
  406196:	mov    ch,cl
  406198:	push   ebx
  406199:	and    bl,BYTE PTR [eax+eiz*1-0x61]
  40619d:	sbb    bl,ah
  40619f:	pop    ss
  4061a0:	cmc    
  4061a1:	or     eax,DWORD PTR [edx]
  4061a3:	pop    ss
  4061a4:	jns    0x406130
  4061a6:	pop    es
  4061a7:	es push esi
  4061a9:	lds    ebp,FWORD PTR [ebp+0xc]
  4061ac:	nop
  4061ad:	(bad)  
  4061ae:	ss es js 0x40618c
  4061b2:	mov    bh,0x47
  4061b4:	xchg   esp,eax
  4061b5:	pop    ebp
  4061b6:	mov    ebx,0x4d5c2c5f
  4061bb:	loope  0x4061a5
  4061bd:	jl     0x4061b9
  4061bf:	out    0xe1,al
  4061c1:	add    al,0x9
  4061c3:	int3   
  4061c4:	clc    
  4061c5:	mov    ebx,0xbd0c4e4c
  4061ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061cb:	adc    eax,eax
  4061cd:	xlat   BYTE PTR ds:[ebx]
  4061ce:	icebp  
  4061cf:	add    dh,BYTE PTR [edi-0x7a66151f]
  4061d5:	mov    cl,0xe5
  4061d7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4061d9:	xchg   ebx,eax
  4061da:	push   ss
  4061db:	mov    bl,0x6f
  4061dd:	xchg   ecx,eax
  4061de:	std    
  4061df:	rol    DWORD PTR [ecx],0xa2
  4061e2:	or     esi,DWORD PTR [ecx]
  4061e4:	cld    
  4061e5:	aaa    
  4061e6:	xchg   DWORD PTR [esi+esi*2],eax
  4061e9:	xor    bh,bl
  4061eb:	imul   ebp,DWORD PTR [ebp+edi*2+0x11f20aca],0xffffffdb
  4061f3:	ins    DWORD PTR es:[edi],dx
  4061f4:	and    BYTE PTR [edx],0x98
  4061f7:	inc    eax
  4061f8:	repnz pop es
  4061fa:	in     al,dx
  4061fb:	inc    ebp
  4061fc:	jbe    0x4061ab
  4061fe:	inc    ecx
  4061ff:	and    BYTE PTR [esi],cl
  406201:	test   dl,0x28
  406204:	push   ss
  406205:	(bad)  
  406206:	mov    al,0x53
  406208:	retf   0x3b55
  40620b:	daa    
  40620c:	pusha  
  40620d:	into   
  40620e:	les    ecx,FWORD PTR [eax+ebp*1+0x31318306]
  406215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406216:	cli    
  406217:	pop    ss
  406218:	std    
  406219:	outs   dx,DWORD PTR ds:[esi]
  40621a:	jae    0x40625e
  40621c:	xchg   esp,edi
  40621e:	xor    al,0xd1
  406220:	inc    eax
  406221:	pushf  
  406222:	jmp    0x30df:0x977bf674
  406229:	cdq    
  40622a:	shl    BYTE PTR [esi+0x7b],cl
  40622d:	mov    ds:0x2276afa9,al
  406232:	nop
  406233:	sar    bl,0x4e
  406236:	(bad)  
  406237:	xor    ch,ah
  406239:	pop    esi
  40623a:	mov    ebx,0xf56baa3d
  40623f:	scas   al,BYTE PTR es:[edi]
  406240:	js     0x406226
  406242:	loopne 0x4062bc
  406244:	and    bh,bh
  406246:	dec    esi
  406247:	or     DWORD PTR [ecx+0x6220ca98],edx
  40624d:	jge    0x40623b
  40624f:	and    al,0xa4
  406251:	setno  ch
  406254:	test   eax,0x9f34cec6
  406259:	(bad)  
  40625a:	(bad)  
  40625b:	xor    DWORD PTR [ebp+0x34505a93],edx
  406261:	and    eax,0x86af0651
  406266:	mov    eax,ds:0xacccd33f
  40626b:	mov    eax,ds:0x883b4fee
  406270:	in     al,dx
  406271:	mov    ah,0xc1
  406273:	xor    ecx,DWORD PTR [edx+0x2]
  406276:	dec    esi
  406277:	pusha  
  406278:	xchg   edi,eax
  406279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40627a:	imul   eax,esp,0x772eb71a
  406280:	bound  edi,QWORD PTR [edx+ecx*8+0x4fd3575b]
  406287:	jl     0x406223
  406289:	enter  0x5248,0x9e
  40628d:	add    al,0xcc
  40628f:	xor    BYTE PTR [edx+edi*8],ah
  406292:	repz push ds
  406294:	jae    0x40630e
  406296:	xor    al,0x8a
  406298:	rcr    BYTE PTR [ebx],1
  40629a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40629b:	cdq    
  40629c:	xchg   ebx,eax
  40629d:	retf   
  40629e:	fdivr  st(0),st
  4062a0:	test   ch,ah
  4062a2:	xchg   esi,eax
  4062a3:	mov    edx,0x1f105804
  4062a8:	adc    ebx,ebp
  4062aa:	xor    bh,ah
  4062ac:	mov    cl,0xad
  4062ae:	sbb    DWORD PTR ds:0x33451534,esi
  4062b4:	jns    0x40632d
  4062b6:	jmp    0xafb82ae0
  4062bb:	je     0x4062ab
  4062bd:	add    esp,ebp
  4062bf:	stc    
  4062c0:	out    dx,eax
  4062c1:	sub    ebx,0x74
  4062c4:	sbb    edi,DWORD PTR [ebx]
  4062c6:	popf   
  4062c7:	sub    al,0xf4
  4062c9:	(bad)  
  4062ca:	hlt    
  4062cb:	push   ecx
  4062cc:	int3   
  4062cd:	fld    TBYTE PTR [ecx+0x2d58486]
  4062d3:	loopne 0x4062cf
  4062d5:	das    
  4062d6:	pop    ecx
  4062d7:	mov    al,0x6b
  4062d9:	add    DWORD PTR [ecx-0x4c],0xffffffa7
  4062dd:	int3   
  4062de:	mov    eax,ds:0x60c5164
  4062e3:	rcr    DWORD PTR [ebx+0x48],1
  4062e6:	jmp    0x761a3985
  4062eb:	fcomp  st(7)
  4062ed:	pop    ebx
  4062ee:	pop    edi
  4062ef:	shl    DWORD PTR [edx+0x1125a34d],cl
  4062f5:	iret   
  4062f6:	lahf   
  4062f7:	and    al,0x57
  4062f9:	push   ss
  4062fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062fb:	iret   
  4062fc:	daa    
  4062fd:	js     0x4062ec
  4062ff:	fcomp  DWORD PTR [edx+0x25]
  406302:	inc    bp
  406304:	add    esp,DWORD PTR [edi]
  406306:	jge    0x40636e
  406308:	lahf   
  406309:	adc    DWORD PTR [edx+0x221af200],edx
  40630f:	mov    ch,0xd1
  406311:	cmp    ebp,ebp
  406313:	xchg   esp,eax
  406314:	int    0x71
  406316:	pop    esi
  406317:	mov    esi,DWORD PTR ds:0x3684ee1c
  40631d:	cmp    BYTE PTR [ebx+0x5574c6a6],dl
  406323:	and    DWORD PTR [esi+0x179ddb75],esp
  406329:	mov    esp,0xd1ca13fe
  40632e:	xor    DWORD PTR [ecx-0x38],ebx
  406331:	dec    edi
  406332:	pop    ds
  406333:	xor    esi,DWORD PTR [eax]
  406335:	push   eax
  406336:	ret    0x2e79
  406339:	int3   
  40633a:	mov    ecx,0x507048da
  40633f:	popa   
  406340:	inc    esp
  406341:	das    
  406342:	and    eax,0x4700327c
  406347:	(bad)  
  406349:	add    DWORD PTR [ebx],ebx
  40634b:	adc    esi,ebx
  40634d:	rcl    DWORD PTR [esi],cl
  40634f:	jae    0x40633c
  406351:	leave  
  406352:	mov    ebp,0x1d3e3cc4
  406357:	push   cs
  406358:	mov    eax,ds:0x64d1dae9
  40635d:	mov    BYTE PTR ds:0xe5e260f7,cl
  406363:	sbb    bl,bh
  406365:	xor    dh,BYTE PTR [eax+0x54]
  406368:	sub    eax,0xcfeef504
  40636d:	ds jmp 0x4063d2
  406370:	ins    DWORD PTR es:[edi],dx
  406371:	mov    ah,0x4
  406373:	pop    edx
  406374:	push   ebx
  406375:	push   ebx
  406376:	push   esp
  406377:	mov    ecx,0x697e0225
  40637c:	pusha  
  40637d:	xchg   esp,eax
  40637e:	fidivr DWORD PTR [ecx+0x53]
  406381:	fwait
  406382:	test   DWORD PTR [eax],esp
  406384:	push   ds
  406385:	jmp    0x4063f9
  406387:	cs retf 
  406389:	add    cl,BYTE PTR [esi]
  40638b:	dec    esi
  40638c:	jns    0x406357
  40638e:	xor    DWORD PTR [ecx+0x669da55e],ecx
  406394:	xchg   esp,eax
  406395:	sub    esi,DWORD PTR [ecx]
  406397:	inc    edi
  406398:	in     al,0xc6
  40639a:	pusha  
  40639b:	imul   edx,DWORD PTR [eax-0x14],0xffffffc0
  40639f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a0:	add    eax,DWORD PTR [edx]
  4063a2:	lahf   
  4063a3:	jbe    0x4063c8
  4063a5:	mov    cl,0xec
  4063a7:	cmp    BYTE PTR [edx],ch
  4063a9:	sar    BYTE PTR [edi+0xb],0x6a
  4063ad:	nop
  4063ae:	enter  0xf67f,0x7a
  4063b2:	jae    0x4063f4
  4063b4:	sub    edx,DWORD PTR [eax]
  4063b6:	pop    ebx
  4063b7:	dec    eax
  4063b8:	inc    esp
  4063b9:	ds sub al,0xcf
  4063bc:	sub    eax,0x1317c1c0
  4063c1:	test   eax,0x49ba0338
  4063c6:	pushf  
  4063c7:	xchg   esp,eax
  4063c8:	outs   dx,BYTE PTR ds:[esi]
  4063c9:	adc    al,0x48
  4063cb:	cmp    BYTE PTR [ebx-0x21],dl
  4063ce:	aaa    
  4063cf:	mov    al,0x80
  4063d1:	dec    ecx
  4063d2:	push   edi
  4063d3:	lods   al,BYTE PTR ds:[esi]
  4063d4:	sub    ah,BYTE PTR [edi*8+0x38949868]
  4063db:	aad    0x2a
  4063dd:	fadd   DWORD PTR [ebp-0x644649c5]
  4063e3:	es mov bl,0x49
  4063e6:	mov    eax,0x1034701a
  4063eb:	mov    al,ds:0xbed02381
  4063f0:	and    ah,al
  4063f2:	or     al,ch
  4063f4:	pop    ss
  4063f5:	pop    ebp
  4063f6:	outs   dx,DWORD PTR ds:[esi]
  4063f7:	adc    esi,DWORD PTR [esi-0x3705a6d0]
  4063fd:	adc    eax,0x7cf7d944
  406402:	add    eax,0xf5fd3d9b
  406407:	loop   0x406411
  406409:	in     al,0xbc
  40640b:	push   cs
  40640c:	and    al,0xa7
  40640e:	shl    BYTE PTR [ecx-0x36],0xb4
  406412:	sahf   
  406413:	mov    dh,0x11
  406415:	mov    eax,0x5a68d9ca
  40641a:	mov    ds:0x2c10d150,al
  40641f:	add    ah,ah
  406421:	(bad)  
  406422:	cmp    bh,bl
  406424:	and    esi,DWORD PTR [ebx]
  406426:	or     al,0x19
  406428:	cmp    DWORD PTR ds:[ecx+edx*2],ebp
  40642c:	lock dec esp
  40642e:	in     eax,dx
  40642f:	call   0x6d90:0x8c87a4e
  406436:	dec    edi
  406437:	clc    
  406438:	push   ebx
  406439:	shl    DWORD PTR [edi-0x39],1
  40643c:	scas   al,BYTE PTR es:[edi]
  40643d:	sahf   
  40643e:	or     DWORD PTR [eax+eax*8-0x6],edi
  406442:	test   DWORD PTR [esi+0x51],0xf62efbc1
  406449:	pop    ds
  40644a:	outs   dx,BYTE PTR ds:[esi]
  40644b:	shl    DWORD PTR [eax-0x34],0xf3
  40644f:	and    dl,al
  406451:	adc    BYTE PTR ds:0xfaed345c,0x54
  406458:	sbb    al,0x31
  40645a:	cmp    al,0x5d
  40645c:	mov    dh,0xec
  40645e:	or     esp,esp
  406460:	cmp    al,0xa4
  406462:	aad    0x2c
  406464:	inc    eax
  406465:	adc    eax,0xf00252d1
  40646a:	repnz mov bh,0x3e
  40646d:	stc    
  40646e:	mov    esp,0x1224338e
  406473:	repnz jecxz 0x40647e
  406476:	shr    BYTE PTR [edi],1
  406478:	sub    al,0x5c
  40647a:	lock mov esp,0xf1d96977
  406480:	adc    eax,0xbb02af6f
  406485:	popf   
  406486:	pop    edi
  406487:	pop    ecx
  406488:	mov    ebx,0x667dcc53
  40648d:	mov    ds:0xd85245a0,eax
  406492:	lahf   
  406493:	mov    ah,0x28
  406495:	adc    al,0x81
  406497:	xor    BYTE PTR [edx],cl
  406499:	inc    esp
  40649a:	sbb    BYTE PTR [edi+0x7f4f440f],al
  4064a0:	sub    eax,0x58f31ffa
  4064a5:	inc    ebx
  4064a6:	push   edi
  4064a7:	sub    DWORD PTR [esi+0x1c],0xffffffe9
  4064ab:	(bad)  
  4064ac:	mov    bh,0xcc
  4064ae:	xlat   BYTE PTR ds:[ebx]
  4064af:	push   eax
  4064b1:	xor    dh,dl
  4064b3:	aad    0x20
  4064b5:	fdivr  DWORD PTR [esi]
  4064b7:	fcom   DWORD PTR [esi+0x2ea210ae]
  4064bd:	adc    BYTE PTR cs:[ecx],al
  4064c0:	add    eax,0x2a5fda26
  4064c5:	fstp   DWORD PTR [edx-0x11]
  4064c8:	fwait
  4064c9:	jne    0x4064bb
  4064cb:	mov    DWORD PTR [edi-0x7a64d259],edi
  4064d1:	dec    edi
  4064d2:	int3   
  4064d3:	jmp    0x4064b0
  4064d5:	and    al,BYTE PTR [edx]
  4064d7:	iret   
  4064d8:	stos   DWORD PTR es:[edi],eax
  4064d9:	xchg   BYTE PTR [ebp-0x68bde52f],al
  4064df:	mov    bl,0x9e
  4064e1:	fdivp  st(1),st
  4064e3:	(bad)  
  4064e4:	pop    edx
  4064e5:	lock jbe 0x4064ee
  4064e8:	in     eax,dx
  4064e9:	repz popa 
  4064eb:	jecxz  0x406534
  4064ed:	adc    esi,ebx
  4064ef:	xor    eax,DWORD PTR [edx]
  4064f1:	mov    dh,0x74
  4064f3:	dec    edi
  4064f4:	out    0xea,al
  4064f6:	or     esp,DWORD PTR [ecx]
  4064f8:	cmp    al,0x21
  4064fa:	mov    al,0xa3
  4064fc:	sbb    eax,0xa6eae420
  406501:	adc    ah,BYTE PTR [eax-0x53]
  406504:	bound  eax,QWORD PTR [esi-0x3f]
  406507:	jle    0x4064e5
  406509:	lock mov esi,0x9f55578d
  40650f:	dec    esp
  406510:	xchg   edi,eax
  406511:	lds    esp,FWORD PTR [eax]
  406513:	pushf  
  406514:	cld    
  406515:	xchg   ebp,eax
  406516:	test   al,0xdb
  406518:	test   bl,bl
  40651a:	adc    al,0x3f
  40651c:	sti    
  40651d:	mov    esi,ds
  40651f:	xor    bl,BYTE PTR [esi+0x33]
  406522:	cli    
  406523:	mov    bh,BYTE PTR [ebx-0x2b]
  406526:	and    eax,0x963a0a6a
  40652b:	ja     0x406580
  40652d:	test   ebp,edi
  40652f:	pop    ebx
  406530:	cmp    ebp,0x67
  406533:	imul   esi,ebx,0xffffffb3
  406536:	ret    
  406537:	in     al,0x46
  406539:	adc    ecx,DWORD PTR ds:0x6c73b3a
  40653f:	xchg   ebx,eax
  406540:	xchg   esi,eax
  406541:	sbb    edx,ebx
  406543:	add    DWORD PTR [ebx],ecx
  406545:	retf   
  406546:	test   BYTE PTR [edi-0x45],dl
  406549:	xchg   esp,eax
  40654a:	jp     0x40655f
  40654c:	jb     0x406531
  40654e:	jmp    0xac2b57c4
  406553:	fstp   QWORD PTR [ecx]
  406555:	fdivp  st(1),st
  406557:	xchg   ebp,eax
  406558:	lods   eax,DWORD PTR ds:[esi]
  406559:	or     esi,ebp
  40655b:	(bad)
  40655e:	adc    dl,ch
  406560:	or     cl,al
  406562:	fs inc ebp
  406564:	iret   
  406565:	mov    ch,0x9c
  406567:	ds call 0x609d:0x63accb3f
  40656f:	bound  ecx,QWORD PTR [ebx]
  406571:	pushf  
  406572:	cmp    ah,BYTE PTR [esi-0x60a401b0]
  406578:	jecxz  0x4065e3
  40657a:	add    ebp,DWORD PTR [ebp-0x5]
  40657d:	mov    esp,0x846fa526
  406582:	gs mov al,0x24
  406585:	and    DWORD PTR [edx+0x2fdf617b],eax
  40658b:	pop    esi
  40658c:	out    dx,eax
  40658d:	push   edi
  40658e:	fdivr  QWORD PTR [esi+0x4e]
  406591:	fnsave [ebp-0x5d]
  406594:	lahf   
  406595:	punpcklbw mm0,DWORD PTR [edx]
  406598:	inc    edi
  406599:	out    0xb2,al
  40659b:	shl    BYTE PTR [edi+0x47e58617],1
  4065a1:	pop    edi
  4065a2:	das    
  4065a3:	adc    al,BYTE PTR [eax+0x40e35a84]
  4065a9:	or     BYTE PTR [eax-0x9],bl
  4065ac:	cmp    esi,DWORD PTR [ecx+esi*1+0x2e]
  4065b0:	jecxz  0x4065b3
  4065b2:	push   es
  4065b3:	aad    0x44
  4065b5:	lea    eax,[eax]
  4065b7:	xlat   BYTE PTR ds:[ebx]
  4065b8:	add    al,0xeb
  4065ba:	xor    al,0x18
  4065bc:	pop    ebx
  4065bd:	push   0xffffffb1
  4065bf:	(bad)  
  4065c0:	sbb    esp,DWORD PTR [edx-0x53]
  4065c3:	push   esi
  4065c4:	fldcw  WORD PTR [edx+0x67]
  4065c7:	clc    
  4065c8:	inc    esp
  4065c9:	ja     0x406602
  4065cb:	int3   
  4065cc:	test   DWORD PTR [esi],edi
  4065ce:	cmp    BYTE PTR [ebx],dh
  4065d0:	sub    eax,0x5b25695c
  4065d5:	mov    al,es:0x10d001ba
  4065db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065dc:	and    BYTE PTR [ecx],dl
  4065de:	xchg   edi,eax
  4065df:	adc    DWORD PTR [eax-0x369fc4e4],edx
  4065e5:	dec    ebx
  4065e6:	xchg   ebx,eax
  4065e7:	aad    0xfb
  4065e9:	mov    eax,0x56c69eae
  4065ee:	or     ebx,edx
  4065f0:	jns    0x406573
  4065f2:	add    eax,0xb7dab4fa
  4065f7:	out    dx,eax
  4065f8:	mov    ds:0xd6092701,al
  4065fd:	sub    BYTE PTR [ebx-0x4aa83dfd],al
  406603:	sahf   
  406604:	mov    esp,0x7700fd12
  406609:	xchg   ebp,eax
  40660a:	jnp    0x4065e8
  40660c:	je     0x4065b2
  40660e:	ins    DWORD PTR es:[edi],dx
  40660f:	sub    BYTE PTR [eax-0x4],dl
  406612:	cmp    al,0xfa
  406614:	cmc    
  406615:	mov    bh,0x1a
  406617:	aaa    
  406618:	dec    ebx
  406619:	test   bh,ah
  40661b:	js     0x4065f8
  40661d:	jl     0x4065e0
  40661f:	push   eax
  406620:	daa    
  406621:	push   eax
  406622:	ins    DWORD PTR es:[edi],dx
  406623:	sar    DWORD PTR [esp+ebp*8-0x3cf9ef63],0x2d
  40662b:	xor    esi,DWORD PTR [esi]
  40662d:	fld    st(4)
  40662f:	xlat   BYTE PTR ds:[bx]
  406631:	jmp    0x1040af7b
  406636:	in     al,dx
  406637:	inc    edi
  406638:	push   0xffffffb0
  40663a:	ret    0x9b2c
  40663d:	repz int 0x21
  406640:	(bad)  
  406641:	hlt    
  406642:	and    ecx,DWORD PTR [edx-0x29]
  406645:	mov    cl,0xdc
  406647:	(bad)
  40664a:	adc    BYTE PTR [esi+0xe1496da],al
  406650:	(bad)  
  406651:	fistp  QWORD PTR [ecx+0x28]
  406654:	xchg   ebp,eax
  406655:	mov    al,ds:0x53fe271e
  40665a:	jne    0x40668e
  40665c:	mov    cl,0xa
  40665e:	cmp    ecx,DWORD PTR ds:0x5f373664
  406664:	cmp    eax,0x67c64c32
  406669:	jp     0x406672
  40666b:	gs mov ebp,0xb8b82c9f
  406671:	cmp    al,0x24
  406673:	xchg   edi,eax
  406674:	push   ecx
  406675:	lds    esi,FWORD PTR [edx+ecx*8+0x69160fcc]
  40667c:	inc    ebp
  40667d:	div    BYTE PTR [edi-0x12e185cd]
  406683:	inc    DWORD PTR [ebx-0x2a]
  406686:	dec    ebp
  406687:	sbb    BYTE PTR [edi+0x5e4fe0e8],ch
  40668d:	test   BYTE PTR [edi+0x60e34b98],dh
  406693:	iret   
  406694:	xor    edx,DWORD PTR [ebp-0x45767986]
  40669a:	leave  
  40669b:	mov    WORD PTR [eax-0x2f],?
  40669e:	pop    ebx
  40669f:	dec    esi
  4066a0:	sbb    BYTE PTR [ebx-0x60],bl
  4066a3:	imul   esi,DWORD PTR [esi],0x62559441
  4066a9:	cli    
  4066aa:	inc    ebx
  4066ab:	jns    0x4066a0
  4066ad:	icebp  
  4066ae:	pop    es
  4066af:	in     eax,0x7b
  4066b1:	leave  
  4066b2:	push   edx
  4066b3:	ja     0x406677
  4066b5:	outs   dx,BYTE PTR ds:[esi]
  4066b6:	icebp  
  4066b7:	or     bh,ah
  4066b9:	pop    esp
  4066ba:	inc    edi
  4066bb:	sbb    BYTE PTR [edi+esi*2-0x63632a42],dh
  4066c2:	mov    bl,0x23
  4066c4:	cli    
  4066c5:	outs   dx,BYTE PTR ds:[esi]
  4066c6:	mov    DWORD PTR [edx-0x4b6d3183],ebp
  4066cc:	or     dl,0xc0
  4066cf:	inc    ecx
  4066d0:	mov    al,0x56
  4066d2:	push   edx
  4066d3:	fcom   st(5)
  4066d5:	jp     0x406698
  4066d7:	outs   dx,DWORD PTR ds:[esi]
  4066d8:	gs and esi,edi
  4066db:	xor    al,0xf9
  4066dd:	push   esp
  4066de:	add    al,0xf8
  4066e0:	stos   DWORD PTR es:[edi],eax
  4066e1:	scas   eax,DWORD PTR es:[edi]
  4066e2:	jno    0x406726
  4066e4:	jmp    0x40667b
  4066e6:	jle    0x406764
  4066e8:	lock jge 0x4066fa
  4066eb:	shl    BYTE PTR [ecx+0x1adb845c],1
  4066f1:	xor    eax,0x99108932
  4066f6:	jmp    0x4066cb
  4066f8:	xchg   esi,eax
  4066f9:	or     eax,esi
  4066fb:	loop   0x406735
  4066fd:	inc    ebp
  4066fe:	push   0xffffffb2
  406700:	(bad)  
  406701:	dec    ebx
  406702:	out    dx,al
  406703:	jnp    0x406777
  406705:	add    BYTE PTR [ebp-0x392b7d2],cl
  40670b:	retf   0x3252
  40670e:	push   eax
  40670f:	sar    BYTE PTR gs:[eax],0x67
  406713:	test   eax,ebp
  406715:	(bad)  
  406716:	dec    edx
  406717:	daa    
  406718:	fxch   st(6)
  40671a:	mov    edx,0x9ef9de29
  40671f:	shr    BYTE PTR [edi+eiz*4-0x709a9950],cl
  406726:	jns    0x4066d6
  406728:	push   ds
  406729:	push   0xfffffffe
  40672b:	mov    bl,0xc0
  40672d:	push   ebx
  40672e:	fsub   QWORD PTR [eax-0x63]
  406731:	mov    edx,0x75f2ca94
  406736:	repz popf 
  406738:	adc    ecx,edx
  40673a:	lods   al,BYTE PTR ds:[esi]
  40673b:	pusha  
  40673c:	mov    eax,eax
  40673e:	inc    edi
  40673f:	lods   al,BYTE PTR ds:[esi]
  406740:	mov    BYTE PTR [ebx],dl
  406742:	push   ecx
  406743:	cdq    
  406744:	dec    eax
  406745:	sbb    edx,DWORD PTR [esi-0xeca06a]
  40674b:	pop    ds
  40674c:	clc    
  40674d:	pop    es
  40674e:	sbb    al,0xea
  406750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406751:	inc    edx
  406752:	adc    BYTE PTR ds:0x7d5c6772,0x42
  406759:	fsub   DWORD PTR [ecx]
  40675b:	push   ecx
  40675c:	xchg   BYTE PTR [ebp-0x28],dl
  40675f:	arpl   WORD PTR [ecx+0x43],cx
  406762:	dec    ecx
  406763:	rol    BYTE PTR [ecx-0x29],cl
  406766:	retf   0x91f4
  406769:	fbld   TBYTE PTR [esi+0x1d]
  40676c:	jmp    DWORD PTR [esi]
  40676e:	out    0xc4,eax
  406770:	std    
  406771:	pop    edx
  406772:	mov    dl,BYTE PTR [esp+esi*8]
  406775:	sub    eax,0xa86ed711
  40677a:	adc    esp,DWORD PTR [ebx-0x5]
  40677d:	dec    ebx
  40677e:	mov    bl,0xf5
  406780:	sbb    al,al
  406782:	mov    ebp,0xb875d7ac
  406787:	mov    ecx,0x2dd09f0
  40678c:	data16 jge 0x4067c9
  40678f:	cmp    BYTE PTR [edx+0x12],bh
  406792:	je     0x406802
  406794:	(bad)  [esi+ecx*1+0x3ff738f]
  40679b:	jmp    0x4067f8
  40679d:	cs dec ebp
  40679f:	mov    esp,0x7f479f87
  4067a4:	sti    
  4067a5:	lds    ebx,FWORD PTR [ebx-0xc]
  4067a8:	mov    ebp,DWORD PTR [ebp-0x6e371e61]
  4067ae:	repnz fild WORD PTR [edx+0x51]
  4067b2:	retf   0xde87
  4067b5:	xchg   ebx,eax
  4067b6:	and    edx,DWORD PTR [eax]
  4067b8:	shr    DWORD PTR [esi],0xad
  4067bb:	xor    esi,DWORD PTR [edx-0x58]
  4067be:	shl    BYTE PTR ds:0xfdaff1a1,cl
  4067c4:	test   eax,0xe024f5e6
  4067ca:	jae    0x40676c
  4067cc:	scas   eax,DWORD PTR es:[edi]
  4067cd:	std    
  4067ce:	sbb    ecx,ebx
  4067d0:	inc    edx
  4067d1:	fldcw  WORD PTR [ebp+0x61]
  4067d4:	jo     0x4067ae
  4067d6:	cmp    bl,BYTE PTR [ecx+0x19]
  4067d9:	inc    edx
  4067da:	fsub   QWORD PTR [edx+0x3ea87bdb]
  4067e0:	or     al,0x0
  4067e2:	xor    dh,BYTE PTR [edx]
  4067e4:	arpl   WORD PTR [edi],sp
  4067e6:	imul   eax,DWORD PTR [ebx],0xdbc4b10
  4067ec:	or     BYTE PTR [si+0x3110],ch
  4067f1:	adc    cl,BYTE PTR [ebx+0x59]
  4067f4:	rcr    ah,0xf6
  4067f7:	add    al,0x59
  4067f9:	pop    edi
  4067fa:	ds xchg esp,eax
  4067fc:	aad    0x3d
  4067fe:	fs rol eax,0x44
  406802:	out    0x12,eax
  406804:	nop
  406805:	js     0x406841
  406807:	jmp    0x40680e
  406809:	scas   al,BYTE PTR es:[edi]
  40680a:	dec    edx
  40680b:	imul   esp,edx,0x2c
  40680e:	shl    BYTE PTR [edi-0xe],cl
  406811:	inc    eax
  406812:	pop    edi
  406813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406814:	int    0x45
  406816:	(bad)  
  406817:	fcmovbe st,st(7)
  406819:	cmc    
  40681a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40681b:	push   esi
  40681c:	sahf   
  40681d:	sbb    BYTE PTR [ecx],0x11
  406820:	jmp    0x40681f
  406822:	fdiv   DWORD PTR [edx+eiz*1-0xc5f809c]
  406829:	in     eax,dx
  40682a:	mov    dh,0x74
  40682c:	pop    esp
  40682d:	jmp    0x14e416ea
  406832:	dec    edi
  406833:	stos   DWORD PTR es:[edi],eax
  406834:	push   ecx
  406835:	and    bl,BYTE PTR [esi-0x577d4f5d]
  40683b:	ret    0x5966
  40683e:	mov    dh,0x6a
  406840:	in     al,dx
  406841:	fwait
  406842:	pop    ds
  406843:	or     al,0xe9
  406845:	mov    WORD PTR [esp+eax*4-0x1],?
  406849:	mov    ?,ecx
  40684b:	pop    ds
  40684c:	jo     0x406896
  40684e:	and    BYTE PTR [edx-0x5eb2ace2],dl
  406854:	fist   WORD PTR [edx+0x625f7163]
  40685a:	jp     0x406859
  40685c:	pop    edx
  40685d:	cwde   
  40685e:	rol    edx,1
  406860:	xor    BYTE PTR [eax],bl
  406862:	sub    eax,0xd53dd6ad
  406867:	mov    edi,0x2682a08d
  40686c:	addr16 pushw cs
  40686f:	into   
  406870:	jnp    0x4067f2
  406872:	fcom   QWORD PTR [ebx+0x7be06f15]
  406878:	jp     0x406849
  40687a:	out    0x3c,al
  40687c:	and    edx,ecx
  40687e:	mov    edi,0x3d8e51f1
  406883:	cmp    al,0x31
  406885:	iret   
  406886:	mov    DWORD PTR [ebx+0x2fc8b337],ebx
  40688c:	mov    edx,0x5549f309
  406891:	mov    eax,ds:0x4c89556
  406896:	xchg   edx,eax
  406897:	out    0xc1,eax
  406899:	ja     0x40684b
  40689b:	jmp    0xebc0:0x82ca84f1
  4068a2:	xchg   ebx,eax
  4068a3:	mov    ch,0xf8
  4068a5:	ficom  WORD PTR [ebp+0x30ff46da]
  4068ab:	sbb    bl,BYTE PTR [ebx]
  4068ad:	add    BYTE PTR [eax-0x2a6eaf72],al
  4068b3:	push   eax
  4068b4:	push   ebp
  4068b5:	mov    eax,DWORD PTR [edi]
  4068b7:	add    eax,0xada8e266
  4068bc:	dec    esp
  4068bd:	jp     0x4068d7
  4068bf:	push   es
  4068c0:	mov    edi,0x24bb671f
  4068c5:	mov    ch,0x79
  4068c7:	jmp    0xd1db873e
  4068cc:	inc    esp
  4068cd:	sbb    dh,BYTE PTR [esi]
  4068cf:	mov    edi,0xfe47b649
  4068d4:	std    
  4068d5:	sub    eax,0xe1f86af0
  4068da:	adc    eax,DWORD PTR [esi-0x6a]
  4068dd:	mov    al,0x69
  4068df:	aaa    
  4068e0:	inc    eax
  4068e1:	(bad)  
  4068e2:	sahf   
  4068e3:	and    BYTE PTR ds:[bx],ch
  4068e7:	push   ss
  4068e8:	add    ebx,eax
  4068ea:	cmp    ch,BYTE PTR [edx]
  4068ec:	push   ss
  4068ed:	into   
  4068ee:	adc    ch,BYTE PTR [ebp-0x35131145]
  4068f4:	aaa    
  4068f5:	add    esp,DWORD PTR [ebx+0x1748d324]
  4068fb:	push   ebp
  4068fc:	(bad)  
  4068fd:	je     0x4068a2
  4068ff:	push   edi
  406900:	fbstp  TBYTE PTR [ecx+0x73]
  406903:	pop    ebp
  406904:	repnz adc al,0xea
  406907:	push   ss
  406908:	push   ds
  406909:	fs ins DWORD PTR es:[edi],dx
  40690b:	and    DWORD PTR [edx+0x732f6649],0x5b
  406912:	adc    eax,0x3dcb8a88
  406917:	mov    ah,0x63
  406919:	pop    esi
  40691a:	or     ebp,DWORD PTR [ecx]
  40691c:	sbb    cl,bh
  40691e:	mov    esi,0xb8a2bf10
  406923:	sbb    edx,0x63a91552
  406929:	add    esi,DWORD PTR [esi-0x2e]
  40692c:	cmc    
  40692d:	cmp    al,0xcd
  40692f:	les    ebx,FWORD PTR [eax+esi*2-0x561453ec]
  406936:	add    ecx,DWORD PTR [esi+ecx*1-0x7fdd99fb]
  40693d:	jne    0x40697e
  40693f:	or     BYTE PTR [edx],0x11
  406942:	movd   mm7,DWORD PTR [ebx+edx*1+0x7a]
  406947:	add    ecx,DWORD PTR [ecx+0x46e5a8e4]
  40694d:	adc    al,0xc
  40694f:	sahf   
  406950:	sub    DWORD PTR [edi],ebx
  406952:	test   al,0x22
  406954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406955:	mov    ch,0x9
  406957:	xlat   BYTE PTR ds:[ebx]
  406958:	and    ah,bl
  40695a:	(bad)  [esi-0x6e]
  40695d:	loop   0x40693f
  40695f:	xor    al,0x4f
  406961:	and    BYTE PTR [edi+eiz*2-0x3925ca6d],bh
  406968:	stos   BYTE PTR es:[edi],al
  406969:	push   es
  40696a:	not    DWORD PTR [ecx]
  40696c:	xor    eax,0xd23c369c
  406971:	adc    esi,esi
  406973:	fild   QWORD PTR [edx]
  406975:	(bad)  
  406976:	(bad)  
  406977:	pop    ecx
  406978:	mov    edx,ebp
  40697a:	inc    ebp
  40697b:	xor    al,0x8c
  40697d:	xchg   ecx,eax
  40697e:	pop    edx
  40697f:	dec    edi
  406980:	scas   al,BYTE PTR es:[edi]
  406981:	cld    
  406982:	fstp   TBYTE PTR [ecx]
  406984:	jmp    0x406958
  406986:	sahf   
  406987:	lahf   
  406988:	mov    eax,ds:0x751504a8
  40698d:	pop    ds
  40698e:	rep outs dx,DWORD PTR ds:[esi]
  406990:	mov    ds:0x5616f04e,eax
  406995:	lea    esi,[edx+0x75c9bf6d]
  40699b:	push   edx
  40699c:	cld    
  40699d:	pop    esi
  40699e:	fsubrp st(1),st
  4069a0:	imul   eax,DWORD PTR [eax],0x4b
  4069a3:	ror    DWORD PTR [eax-0x3603939b],0x22
  4069aa:	pop    edi
  4069ab:	rcr    BYTE PTR [esi],0x5b
  4069ae:	(bad)  
  4069af:	xchg   ebx,eax
  4069b0:	in     eax,dx
  4069b1:	fs push esi
  4069b3:	and    cl,dh
  4069b5:	adc    ebp,DWORD PTR [edi+0x3a3ec801]
  4069bb:	ins    DWORD PTR es:[edi],dx
  4069bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069bd:	xlat   BYTE PTR ds:[ebx]
  4069be:	mov    dl,0x9a
  4069c0:	xchg   ebp,eax
  4069c1:	mov    ah,0x22
  4069c3:	mov    bh,0x80
  4069c5:	iret   
  4069c6:	out    0xff,eax
  4069c8:	cmc    
  4069c9:	rol    BYTE PTR ds:0x71a2d69,1
  4069cf:	pop    ebx
  4069d0:	dec    eax
  4069d1:	jg     0x40697f
  4069d3:	cs popf 
  4069d5:	mov    esi,0x9ce3f88
  4069da:	and    BYTE PTR [edi],0x3e
  4069dd:	cdq    
  4069de:	loop   0x4069c4
  4069e0:	retf   
  4069e1:	and    ch,cl
  4069e3:	mov    BYTE PTR [edx*8-0x2c6ccadf],0xa5
  4069eb:	push   ecx
  4069ec:	fist   WORD PTR [ecx]
  4069ee:	gs dec ecx
  4069f0:	push   ss
  4069f1:	push   es
  4069f2:	mov    bl,0x99
  4069f4:	scas   al,BYTE PTR es:[edi]
  4069f5:	jle    0x406988
  4069f7:	and    DWORD PTR [edi-0x2c],ebp
  4069fa:	cmp    eax,0xe129d42a
  4069ff:	sbb    cl,bl
  406a01:	les    ecx,FWORD PTR [edi+0x46]
  406a04:	mov    cl,0x2d
  406a06:	test   DWORD PTR [edx+0x1fd89cd7],ebp
  406a0c:	xor    eax,0x99ad3cbd
  406a11:	pushf  
  406a12:	pop    ss
  406a13:	stc    
  406a14:	and    eax,0x172bc5e0
  406a19:	sbb    al,0x65
  406a1b:	lds    ebx,FWORD PTR [esi+0xe]
  406a1e:	lahf   
  406a1f:	bnd jno 0x4069cd
  406a22:	retf   
  406a23:	loope  0x406aa0
  406a25:	mov    ds,WORD PTR [esi]
  406a27:	(bad)  
  406a29:	loope  0x406a68
  406a2b:	ret    
  406a2c:	(bad)  
  406a2d:	stos   BYTE PTR es:[edi],al
  406a2e:	popa   
  406a2f:	mov    al,0x22
  406a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a32:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406a34:	sti    
  406a35:	sub    bl,al
  406a37:	xchg   esi,eax
  406a38:	sub    DWORD PTR [edi],eax
  406a3a:	repnz mov DWORD PTR [esi+0x10],eax
  406a3e:	sub    DWORD PTR [eax-0x12],edx
  406a41:	aas    
  406a42:	fst    QWORD PTR [edi+0x7d]
  406a45:	mov    ecx,0x27185905
  406a4a:	call   0x7c55:0x21634efb
  406a51:	mov    BYTE PTR [ebx],cl
  406a53:	xor    ch,BYTE PTR [edx]
  406a55:	cld    
  406a56:	dec    ebp
  406a57:	dec    eax
  406a58:	dec    esi
  406a59:	sub    BYTE PTR [ecx],0xe7
  406a5c:	rol    eax,0xab
  406a5f:	inc    esi
  406a60:	pop    es
  406a61:	jnp    0x406a3c
  406a63:	stos   BYTE PTR es:[edi],al
  406a64:	cwde   
  406a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a66:	pop    eax
  406a67:	push   ss
  406a68:	sbb    BYTE PTR [eax+0x48917a5c],0x56
  406a6f:	jmp    0xe722:0xd31f0b42
  406a76:	inc    edi
  406a77:	enter  0xddc2,0x38
  406a7b:	jns    0x406ad1
  406a7d:	dec    ebp
  406a7e:	cli    
  406a7f:	lds    edi,FWORD PTR [ecx]
  406a81:	inc    ecx
  406a82:	popf   
  406a83:	ds aad 0x69
  406a86:	dec    eax
  406a87:	jl     0x406a4a
  406a89:	add    BYTE PTR [ebx-0x63c01ac6],cl
  406a8f:	mov    dh,0xcb
  406a91:	gs (bad) 
  406a93:	jnp    0x406a59
  406a95:	mov    ecx,0x787d1c1d
  406a9a:	(bad)  [ebx+0x4c03e2ca]
  406aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa2:	std    
  406aa3:	push   eax
  406aa4:	or     ecx,edi
  406aa6:	iret   
  406aa7:	call   0x12fc66b4
  406aac:	pop    eax
  406aad:	ret    
  406aae:	xchg   edx,eax
  406aaf:	xchg   edx,eax
  406ab0:	sbb    eax,DWORD PTR [eax+0xd]
  406ab3:	aad    0x5e
  406ab5:	push   esi
  406ab6:	and    eax,0x7665055d
  406abb:	inc    edx
  406abc:	ins    DWORD PTR es:[edi],dx
  406abd:	mov    esp,DWORD PTR [esi+0x449e4993]
  406ac3:	clc    
  406ac4:	jg     0x406aad
  406ac6:	sbb    al,0x6e
  406ac8:	dec    esi
  406ac9:	jmp    0x2b12:0x5d7ed3a4
  406ad0:	aam    0x23
  406ad2:	das    
  406ad3:	xchg   ebp,eax
  406ad4:	mov    esp,0xccbb4e84
  406ad9:	sbb    al,0x2b
  406adb:	std    
  406adc:	adc    al,0x7
  406ade:	adc    dh,ch
  406ae0:	xchg   esp,eax
  406ae1:	pxor   mm1,mm3
  406ae4:	loop   0x406a82
  406ae6:	push   0x17
  406ae8:	out    dx,al
  406ae9:	test   al,0xfc
  406aeb:	data16 shl dh,1
  406aee:	dec    eax
  406aef:	pop    ebp
  406af0:	inc    edx
  406af1:	repz adc al,0xdb
  406af4:	sbb    BYTE PTR [ecx+ecx*8-0x77],dl
  406af8:	add    ebp,DWORD PTR [esi+0x65cb7ccc]
  406afe:	in     al,dx
  406aff:	xor    DWORD PTR [esi+0x6d],esi
  406b02:	mov    ah,0xfa
  406b04:	test   DWORD PTR [esi+0x5de34f88],edi
  406b0a:	js     0x406a9d
  406b0c:	xor    eax,DWORD PTR [edx-0x728f8fe2]
  406b12:	sbb    esp,DWORD PTR [edi+0x28c9aa0f]
  406b18:	lahf   
  406b19:	rcr    DWORD PTR [edx+0x2],cl
  406b1c:	xor    DWORD PTR [esp+ecx*8-0x4735e270],0xba0addc6
  406b27:	push   ebx
  406b28:	sahf   
  406b29:	mov    al,ds:0x28d450d8
  406b2e:	and    bh,BYTE PTR [edx+0x6fdfd45d]
  406b34:	(bad)  
  406b35:	adc    al,0x2d
  406b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b38:	in     al,0x89
  406b3a:	xchg   edx,eax
  406b3b:	sub    BYTE PTR [edi+ecx*2-0x31475931],dh
  406b42:	ja     0x406b5b
  406b44:	and    ebp,DWORD PTR [esi+eiz*2]
  406b47:	mov    cl,0x2
  406b49:	sbb    dh,dh
  406b4b:	sbb    ebp,DWORD PTR [eax+0x6]
  406b4e:	test   BYTE PTR [eax],0xd7
  406b51:	dec    eax
  406b52:	inc    esp
  406b53:	std    
  406b54:	xchg   ebx,eax
  406b55:	inc    edi
  406b56:	ins    DWORD PTR es:[edi],dx
  406b57:	pop    edx
  406b58:	mov    al,0xe0
  406b5a:	ds std 
  406b5c:	retf   0x4129
  406b5f:	std    
  406b60:	std    
  406b61:	idiv   DWORD PTR [ecx]
  406b63:	sbb    al,0x21
  406b65:	(bad)  
  406b66:	fdivr  st,st(3)
  406b68:	adc    al,0xe4
  406b6a:	adc    ebx,ecx
  406b6c:	mov    edx,0x7befe6cd
  406b71:	mov    es,WORD PTR [ebp-0x56a0970c]
  406b77:	les    edi,FWORD PTR [ebx-0x7d]
  406b7a:	xchg   ecx,eax
  406b7b:	and    DWORD PTR [ebx],esp
  406b7d:	fdiv   st(3),st
  406b7f:	test   BYTE PTR [edx-0x5b],dh
  406b82:	xchg   esp,eax
  406b83:	mov    ah,0x1d
  406b85:	cmp    eax,0xf3ca0c9a
  406b8a:	mov    ss,WORD PTR [esi+0x35]
  406b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b8e:	adc    eax,0xf98c8b77
  406b93:	fwait
  406b94:	iret   
  406b95:	dec    BYTE PTR [edx-0x5b]
  406b98:	xor    al,0x3
  406b9a:	jo     0x406b4e
  406b9c:	int    0x72
  406b9e:	add    DWORD PTR [ecx+esi*4+0x1],0x2b43cfef
  406ba6:	fcmovu st,st(6)
  406ba8:	xor    BYTE PTR [ecx-0x40b6f7ac],0x81
  406baf:	or     DWORD PTR [edx-0x46],0x2f
  406bb3:	(bad)  
  406bb5:	jnp    0x406bf5
  406bb7:	adc    eax,0xb6cd3ba
  406bbc:	inc    ebp
  406bbd:	in     eax,0x77
  406bbf:	retf   
  406bc0:	sub    BYTE PTR [ebp+0x24],0xe6
  406bc4:	pop    eax
  406bc5:	test   DWORD PTR [esi],ebx
  406bc7:	std    
  406bc8:	in     eax,0x3a
  406bca:	stc    
  406bcb:	ins    DWORD PTR es:[edi],dx
  406bcc:	iret   
  406bcd:	mov    ah,0xec
  406bcf:	outs   dx,DWORD PTR ds:[esi]
  406bd0:	imul   esi,DWORD PTR [ecx+0x14a0d1b5],0xffffffa7
  406bd7:	fstp   DWORD PTR [edi-0x15]
  406bda:	adc    ch,BYTE PTR [ebx+eax*8+0x38f8830]
  406be1:	adc    edi,esp
  406be3:	std    
  406be4:	out    0x9a,eax
  406be6:	xchg   edx,eax
  406be7:	inc    BYTE PTR [ebx+0x51]
  406bea:	pop    ebp
  406beb:	cdq    
  406bec:	test   al,0x88
  406bee:	push   eax
  406bef:	repz pushf 
  406bf1:	popf   
  406bf2:	xor    bh,BYTE PTR [eax+0x22]
  406bf5:	inc    eax
  406bf6:	jmp    0x7c446656
  406bfb:	cdq    
  406bfc:	xchg   ebx,eax
  406bfd:	mov    edx,0x2cb5f5ee
  406c02:	sub    bh,ch
  406c04:	mov    ds:0x20a11228,al
  406c09:	in     al,0xc1
  406c0b:	xchg   edi,eax
  406c0c:	adc    al,0xbd
  406c0e:	adc    eax,0xe07af705
  406c13:	dec    edi
  406c14:	xor    eax,0x9443550f
  406c19:	jmp    0x406c1a
  406c1b:	and    BYTE PTR [ebp-0x5e230ae],dh
  406c21:	mov    bl,dh
  406c23:	(bad)  
  406c24:	es cs out dx,al
  406c27:	xchg   esi,eax
  406c28:	add    al,0x31
  406c2a:	repnz nop
  406c2c:	cwde   
  406c2d:	ret    
  406c2e:	retf   0x6ae6
  406c31:	and    edi,DWORD PTR [ebp+0x559e403a]
  406c37:	dec    ebx
  406c38:	lahf   
  406c39:	sub    ecx,ebx
  406c3b:	aaa    
  406c3c:	jnp    0x406bf5
  406c3e:	add    ch,0xb0
  406c41:	inc    ebx
  406c42:	jbe    0x406c3e
  406c44:	ja     0x406c8e
  406c46:	fistp  DWORD PTR [ecx+0x4c]
  406c49:	stos   BYTE PTR es:[di],al
  406c4b:	inc    edi
  406c4c:	add    ah,BYTE PTR [ebx+eiz*8]
  406c4f:	jmp    0x406cc8
  406c51:	mov    es,WORD PTR [ebx]
  406c53:	aam    0x11
  406c55:	stos   BYTE PTR es:[edi],al
  406c56:	jl     0x406c3e
  406c58:	loopne 0x406c35
  406c5a:	adc    esi,DWORD PTR [edx+0x247bbd5e]
  406c60:	es jnp 0x406cdc
  406c63:	dec    ebx
  406c64:	cmc    
  406c65:	pop    ebx
  406c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c67:	xor    bl,BYTE PTR [eax+0x41fd3e67]
  406c6d:	push   edi
  406c6e:	dec    DWORD PTR [eax-0x193b23a1]
  406c74:	out    dx,eax
  406c75:	retf   
  406c76:	enter  0x62fe,0xc2
  406c7a:	add    al,0xdb
  406c7c:	jg     0x406c2b
  406c7e:	lods   al,BYTE PTR ds:[esi]
  406c7f:	test   al,0x59
  406c81:	cmp    edx,DWORD PTR [edx]
  406c83:	enter  0x6e3b,0x16
  406c87:	and    eax,0x7e4624c
  406c8c:	xchg   BYTE PTR [edi+0x5ff4842e],bh
  406c92:	in     eax,dx
  406c93:	cdq    
  406c94:	neg    bh
  406c96:	dec    ebp
  406c97:	sbb    ecx,esp
  406c99:	inc    ebx
  406c9a:	std    
  406c9b:	and    DWORD PTR [edi-0xb6e4bc3],edi
  406ca1:	xchg   ebp,eax
  406ca2:	xchg   ecx,eax
  406ca3:	mov    dl,0x6d
  406ca5:	jnp    0x406ce4
  406ca7:	inc    ebx
  406ca8:	rol    BYTE PTR [edi-0x2c256701],cl
  406cae:	jnp    0x406cd9
  406cb0:	mov    DWORD PTR [ebx-0x36e65d96],0x9adbeff2
  406cba:	mov    eax,ds:0xadcb8637
  406cbf:	cmp    eax,0x748a6088
  406cc4:	jo     0x406d43
  406cc6:	xchg   edx,eax
  406cc7:	or     al,0x49
  406cc9:	inc    ecx
  406cca:	cmp    BYTE PTR [ebp-0x428913c6],0x81
  406cd1:	xor    esp,DWORD PTR [ebx+0x3d10eef]
  406cd7:	jecxz  0x406c5d
  406cd9:	pop    ebp
  406cda:	mov    eax,0x272770c1
  406cdf:	xor    bh,bh
  406ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce2:	popf   
  406ce3:	xchg   esi,eax
  406ce4:	call   0xac9d:0x10f2643c
  406ceb:	stos   BYTE PTR es:[edi],al
  406cec:	test   al,0xfe
  406cee:	sbb    DWORD PTR ds:0xf32f249b,ecx
  406cf4:	mov    ebx,0x7062d8e8
  406cf9:	sti    
  406cfa:	dec    esi
  406cfb:	xchg   eax,esp
  406cfd:	dec    esp
  406cfe:	xchg   ebp,eax
  406cff:	sbb    eax,0xb6c6f48e
  406d04:	in     al,0x32
  406d06:	popf   
  406d07:	into   
  406d08:	xchg   edx,eax
  406d09:	inc    eax
  406d0a:	mov    ebx,0x69531857
  406d0f:	pop    es
  406d10:	or     BYTE PTR [eax-0x31],bl
  406d13:	imul   esp,DWORD PTR [ebx],0xffffff8e
  406d16:	icebp  
  406d17:	int3   
  406d18:	aaa    
  406d19:	pop    ss
  406d1a:	pop    ecx
  406d1b:	mov    bl,0x94
  406d1d:	call   0x57c73374
  406d22:	xchg   esi,eax
  406d23:	xchg   esp,eax
  406d24:	mov    eax,0x5463255a
  406d29:	push   edi
  406d2a:	inc    esp
  406d2b:	out    0xbd,eax
  406d2d:	push   0xffffff92
  406d2f:	and    eax,0x18b6c560
  406d34:	sti    
  406d35:	inc    edi
  406d36:	pop    ecx
  406d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d38:	sub    BYTE PTR [ebp+0x3e],bh
  406d3b:	xchg   ebx,eax
  406d3c:	adc    cl,BYTE PTR [edi+0x3b]
  406d3f:	sbb    ah,BYTE PTR [eax+0x9]
  406d42:	inc    edx
  406d43:	aaa    
  406d44:	mov    cl,0x95
  406d46:	pop    ebp
  406d47:	in     eax,dx
  406d48:	fnstcw WORD PTR [edx+0x306dfc75]
  406d4e:	sub    bl,BYTE PTR [ebx-0x331854c0]
  406d54:	add    eax,0xc74e50de
  406d59:	dec    edi
  406d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5b:	jmp    0x5ec4:0xf63fdbd8
  406d62:	pop    ds
  406d63:	in     eax,0xef
  406d65:	(bad)  
  406d66:	pop    eax
  406d67:	test   eax,0xbe60793f
  406d6c:	pop    ebx
  406d6d:	cmp    eax,0x78f18728
  406d72:	and    DWORD PTR [edi-0x3ed3e1b3],ecx
  406d78:	pop    ecx
  406d79:	jle    0x406df0
  406d7b:	push   es
  406d7c:	popa   
  406d7d:	cli    
  406d7e:	xor    BYTE PTR [ebx+0x6e],bl
  406d81:	mov    esp,0x63a05ff0
  406d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d87:	pushfw 
  406d89:	jle    0x406d7f
  406d8b:	in     eax,0x7f
  406d8d:	or     BYTE PTR [eax],al
  406d8f:	xor    bh,al
  406d91:	xchg   esi,eax
  406d92:	das    
  406d93:	stc    
  406d94:	div    eax
  406d96:	jp     0x406db8
  406d98:	scas   al,BYTE PTR es:[edi]
  406d99:	pushf  
  406d9a:	fs mov esi,0xb6102881
  406da0:	shl    DWORD PTR [ecx],cl
  406da2:	jp     0x406d4e
  406da4:	rcl    DWORD PTR [ebx],cl
  406da6:	sbb    al,0x8e
  406da8:	add    bl,BYTE PTR [edx+ebp*4+0x52]
  406dac:	jb     0x406dc4
  406dae:	nop
  406daf:	sbb    BYTE PTR [edx],bl
  406db1:	sub    eax,0x69aed756
  406db6:	or     DWORD PTR [esp+esi*4+0x5eaf2927],0xa20e7da3
  406dc1:	mov    WORD PTR [edx+0x40],fs
  406dc4:	dec    edx
  406dc5:	test   ebp,ebx
  406dc7:	jne    0x406d4c
  406dc9:	mov    ah,0x49
  406dcb:	jnp    0x406de1
  406dcd:	imul   edx,ebp,0x4f
  406dd0:	cdq    
  406dd1:	adc    al,0xa1
  406dd3:	add    DWORD PTR [edi],esi
  406dd5:	clc    
  406dd6:	cwde   
  406dd7:	push   0xffffffb3
  406dd9:	aas    
  406dda:	xlat   BYTE PTR ds:[ebx]
  406ddb:	jnp    0x406d67
  406ddd:	xchg   BYTE PTR [edi],bl
  406ddf:	xor    DWORD PTR [ebx],esp
  406de1:	adc    DWORD PTR [ebp-0x4e94c0c2],eax
  406de7:	pusha  
  406de8:	aas    
  406de9:	stos   BYTE PTR es:[edi],al
  406dea:	(bad)  
  406deb:	in     al,dx
  406dec:	mov    eax,ds:0xae373b2c
  406df1:	mov    ds:0xdbf43487,al
  406df6:	dec    ecx
  406df7:	push   0x43b081f3
  406dfc:	push   0x6d
  406dfe:	loope  0x406d96
  406e00:	dec    ecx
  406e01:	xchg   ebx,eax
  406e02:	push   0xffffff9e
  406e04:	mov    bl,0x2d
  406e06:	loopne 0x406da9
  406e08:	rcr    DWORD PTR [edx],cl
  406e0a:	std    
  406e0b:	(bad)  
  406e0c:	jo     0x406e43
  406e0e:	xor    eax,0x99a2467f
  406e13:	sbb    esp,ebp
  406e15:	add    BYTE PTR [edi+ebx*8+0x3c],bh
  406e19:	lods   eax,DWORD PTR ds:[esi]
  406e1a:	or     DWORD PTR [edi-0x64],ebp
  406e1d:	sbb    BYTE PTR [edi+0x11214aef],0xe8
  406e24:	cli    
  406e25:	or     eax,0xe2bb9099
  406e2a:	je     0x406df9
  406e2c:	add    esi,edi
  406e2e:	or     eax,0xd4990e54
  406e33:	mov    bh,0xfb
  406e35:	sub    al,0x4b
  406e37:	cmp    bl,BYTE PTR [ebp+0x1a957c27]
  406e3d:	retf   
  406e3e:	mov    dh,0xc8
  406e40:	scas   eax,DWORD PTR es:[edi]
  406e41:	xchg   DWORD PTR [ecx],edx
  406e43:	adc    esi,DWORD PTR [esi]
  406e45:	inc    ebx
  406e46:	ins    DWORD PTR es:[edi],dx
  406e47:	or     dl,dh
  406e49:	pusha  
  406e4a:	jl     0x406ea0
  406e4c:	and    al,0x10
  406e4e:	dec    ecx
  406e4f:	stos   BYTE PTR es:[edi],al
  406e50:	xchg   edx,eax
  406e51:	jnp    0x406e9f
  406e53:	pop    ebp
  406e54:	sti    
  406e55:	retf   0xd5f
  406e58:	sub    edi,ebp
  406e5a:	dec    edx
  406e5b:	xor    BYTE PTR [ecx-0x370f7c8d],bl
  406e61:	out    dx,al
  406e62:	push   esp
  406e63:	addr16 adc eax,0x2eef5901
  406e69:	push   ebx
  406e6a:	push   0x3d55b1c6
  406e6f:	cdq    
  406e70:	inc    esi
  406e71:	stc    
  406e72:	inc    ebp
  406e73:	jp     0x406e1c
  406e75:	cmp    BYTE PTR [ebx],dh
  406e77:	pop    eax
  406e78:	mov    edi,0x7f27a8ca
  406e7d:	sahf   
  406e7e:	xor    DWORD PTR [esp+esi*1-0x31],edx
  406e82:	lds    ebp,FWORD PTR [esi]
  406e84:	test   BYTE PTR [ecx],0x2e
  406e87:	mov    BYTE PTR [esi],al
  406e89:	(bad)  
  406e8a:	hlt    
  406e8b:	pop    es
  406e8c:	shr    BYTE PTR [eax+0x7562bde3],cl
  406e92:	xor    BYTE PTR [eax+0x52d1a583],dl
  406e98:	inc    eax
  406e99:	sar    ecx,0x44
  406e9c:	(bad)  
  406e9d:	adc    al,0x68
  406e9f:	stc    
  406ea0:	enter  0x303c,0x37
  406ea4:	xor    al,BYTE PTR [ebp+0x3737a6d6]
  406eaa:	int3   
  406eab:	push   esi
  406eac:	retf   0xe5a4
  406eaf:	ror    DWORD PTR ds:0xe0894afe,cl
  406eb5:	jae    0x406e73
  406eb7:	in     al,dx
  406eb8:	cld    
  406eb9:	dec    esp
  406eba:	mov    ds:0x536d589f,al
  406ebf:	mov    dh,0x2a
  406ec1:	mov    dl,0xca
  406ec3:	sub    eax,0xee68f10b
  406ec8:	(bad)  
  406eca:	call   0xec2ea77d
  406ecf:	push   ds
  406ed0:	(bad)  
  406ed2:	mov    esi,0xbb592382
  406ed7:	cdq    
  406ed8:	(bad)  
  406ed9:	or     DWORD PTR [edi],esp
  406edb:	rol    DWORD PTR [eax+0x5100024b],0x0
  406ee2:	clc    
  406ee3:	mov    ecx,0xba5ecc9d
  406ee8:	shl    ch,cl
  406eea:	or     eax,0x3cb6a9ab
  406eef:	cmp    bh,BYTE PTR [ecx-0x1e]
  406ef2:	xchg   edx,eax
  406ef3:	cdq    
  406ef4:	inc    ebp
  406ef5:	dec    ecx
  406ef6:	lahf   
  406ef7:	inc    eax
  406ef8:	mov    DWORD PTR [esi-0x6c],0x32f9cda5
  406eff:	and    bl,BYTE PTR [esi+0x66ed6cce]
  406f05:	mov    WORD PTR [edx],gs
  406f07:	popf   
  406f08:	pop    es
  406f09:	or     dh,BYTE PTR [ebp+0x41]
  406f0c:	jb     0x406f43
  406f0e:	xor    al,0xa0
  406f10:	sub    DWORD PTR [ecx+eiz*4-0x35],eax
  406f14:	mov    ebp,0x767b9921
  406f19:	addr16 dec ebx
  406f1b:	jmp    0x398d:0x68c72d70
  406f22:	popa   
  406f23:	jbe    0x406f94
  406f25:	jb     0x406eb9
  406f27:	rol    ebp,cl
  406f29:	ret    0x1311
  406f2c:	dec    esi
  406f2d:	adc    DWORD PTR [ebx+0x30],ecx
  406f30:	mov    edx,0x277fc782
  406f35:	inc    ebx
  406f36:	mov    dl,0xd6
  406f38:	xchg   esp,eax
  406f39:	in     eax,dx
  406f3a:	pop    ds
  406f3b:	cdq    
  406f3c:	and    al,BYTE PTR [esi-0x3a]
  406f3f:	sub    al,BYTE PTR [edi]
  406f41:	mov    DWORD PTR [ebx+eiz*2-0x42fe18c3],eax
  406f48:	mov    DWORD PTR [esi+0x1a],edi
  406f4b:	sbb    BYTE PTR [eax],ah
  406f4d:	fs test al,0x1b
  406f50:	stos   BYTE PTR es:[edi],al
  406f51:	int3   
  406f52:	dec    eax
  406f53:	jbe    0x406f37
  406f55:	popf   
  406f56:	gs inc edi
  406f58:	test   eax,0xd125649
  406f5d:	lahf   
  406f5e:	sahf   
  406f5f:	inc    ebp
  406f60:	(bad)  
  406f61:	(bad)  
  406f62:	xchg   esi,eax
  406f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f65:	add    bh,BYTE PTR cs:[edx-0xc]
  406f69:	das    
  406f6a:	cmp    eax,0x64b452b6
  406f6f:	inc    ecx
  406f70:	add    BYTE PTR [edx+0x10d52652],0x6d
  406f77:	fcmovbe st,st(2)
  406f79:	test   al,0x8f
  406f7b:	popa   
  406f7c:	and    BYTE PTR [esi],bh
  406f7e:	xor    BYTE PTR [ebp-0x59ab2d43],bl
  406f84:	fcomp  DWORD PTR [ebx+0x6fd6809f]
  406f8a:	ret    
  406f8b:	data16 cli 
  406f8d:	push   edx
  406f8e:	mov    ch,0xf4
  406f90:	pop    ebp
  406f91:	in     al,0x7f
  406f93:	push   edi
  406f94:	lods   al,BYTE PTR ds:[esi]
  406f95:	xchg   ecx,eax
  406f96:	retf   
  406f97:	mov    esp,ebx
  406f99:	loop   0x406f36
  406f9b:	test   BYTE PTR [edx],bh
  406f9d:	shr    ebp,1
  406f9f:	sub    DWORD PTR [eax-0x24991c4f],0x2f
  406fa6:	inc    esi
  406fa7:	shl    BYTE PTR [edi-0x2c46913e],cl
  406fad:	fimul  DWORD PTR [ecx-0x66]
  406fb0:	dec    edx
  406fb1:	jnp    0x406f7c
  406fb3:	sub    DWORD PTR [ebx+0x79655dca],ebp
  406fb9:	(bad)  
  406fba:	mov    dl,0x18
  406fbc:	inc    ecx
  406fbd:	scas   eax,DWORD PTR es:[edi]
  406fbe:	add    DWORD PTR [ebx+0x5f],eax
  406fc1:	mov    WORD PTR [edx+eax*1+0x31ab587f],?
  406fc8:	mov    eax,0xb7ecb97e
  406fcd:	clc    
  406fce:	push   esi
  406fcf:	xor    ah,BYTE PTR [ecx]
  406fd1:	imul   ecx,DWORD PTR [edi],0xffffff91
  406fd4:	popa   
  406fd5:	sbb    al,0x6e
  406fd7:	js     0x407002
  406fd9:	aam    0x3d
  406fdb:	mov    ecx,0x252110fe
  406fe0:	es ret 
  406fe2:	mov    ch,0xf0
  406fe4:	add    esi,DWORD PTR [eax]
  406fe6:	les    ebx,FWORD PTR [ebx+ecx*8+0x2]
  406fea:	mov    ch,0x89
  406fec:	xlat   BYTE PTR ds:[ebx]
  406fed:	push   ecx
  406fee:	sbb    al,0xd7
  406ff0:	xchg   esi,eax
  406ff1:	mov    esi,0x31872167
  406ff6:	aas    
  406ff7:	add    DWORD PTR [ebx],ecx
  406ff9:	cmc    
  406ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ffb:	pop    eax
  406ffc:	fwait
  406ffd:	dec    edx
  406ffe:	(bad)
  407001:	xchg   ebp,eax
  407002:	loopne 0x406fcd
  407004:	push   eax
  407005:	push   0x5494a8c5
  40700a:	mov    edx,0xf9efff79
  40700f:	mov    dl,0xc7
  407011:	mov    ecx,0xeecde2d6
  407016:	inc    ecx
  407017:	ret    
  407018:	mov    edi,0xe5389f8f
  40701d:	xor    BYTE PTR [edi],0xe3
  407020:	cmp    dh,bl
  407022:	dec    ebx
  407023:	call   0xae9c:0x2087cdbc
  40702a:	sub    DWORD PTR [eax],eax
  40702c:	cs lock push 0x3f00b33
  407033:	aas    
  407034:	imul   esi,DWORD PTR [ebp-0x26654365],0x6b8f4187
  40703e:	pop    edi
  40703f:	push   esp
  407040:	dec    ecx
  407041:	mov    edi,DWORD PTR [edx+0x60]
  407044:	dec    ecx
  407045:	add    al,0xcf
  407047:	and    ecx,eax
  407049:	mov    ch,0x51
  40704b:	mov    edi,0x750680da
  407050:	adc    al,BYTE PTR fs:[edi-0xd9e1691]
  407057:	xchg   DWORD PTR ds:0xb031cdd4,edi
  40705d:	ret    0x90f0
  407060:	sub    al,0xae
  407062:	jl     0x406ff0
  407064:	mov    edx,0x55788db0
  407069:	add    al,0x5c
  40706c:	add    BYTE PTR ds:0xc6f9898,dh
  407072:	ins    BYTE PTR es:[edi],dx
  407073:	xor    DWORD PTR [ebp-0x5b],0xffffffa3
  407077:	mov    esi,0x7756a0b4
  40707c:	outs   dx,BYTE PTR ds:[esi]
  40707d:	pop    ecx
  40707e:	sub    BYTE PTR [ebx+0x53],ch
  407081:	inc    eax
  407082:	sub    ch,BYTE PTR [esi]
  407084:	jle    0x4070b7
  407086:	inc    edi
  407087:	jo     0x4070fb
  407089:	mov    ds:0xcf69a4a,al
  40708e:	stos   DWORD PTR es:[edi],eax
  40708f:	lods   al,BYTE PTR ds:[esi]
  407090:	push   0x7c
  407092:	mov    ebp,0xc2a42c1c
  407097:	cld    
  407098:	inc    edi
  407099:	mov    ecx,0x4e45e38a
  40709e:	pop    ebp
  40709f:	jle    0x407074
  4070a1:	sbb    al,0xed
  4070a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070a4:	loop   0x4070e0
  4070a6:	xchg   edx,eax
  4070a7:	jge    0x407033
  4070a9:	push   ss
  4070aa:	pop    edx
  4070ab:	arpl   WORD PTR [ebp+0x2b],di
  4070ae:	and    al,0x89
  4070b0:	pop    edx
  4070b1:	inc    edx
  4070b2:	xor    DWORD PTR [ebp-0x64633db],0xffffffce
  4070b9:	xchg   ebp,eax
  4070ba:	loope  0x4070ec
  4070bc:	mov    esi,0x2551cdd2
  4070c1:	mov    ah,0x3c
  4070c3:	lahf   
  4070c4:	(bad)  
  4070c5:	ja     0x4070b3
  4070c7:	inc    ecx
  4070c8:	psllw  mm6,QWORD PTR [ebx+0x45065137]
  4070cf:	mov    ebx,0x9709db22
  4070d4:	gs inc edi
  4070d6:	jb     0x4070f4
  4070d8:	or     al,0x14
  4070da:	rcl    edi,0xf6
  4070dd:	pop    ss
  4070de:	xor    DWORD PTR fs:[edx+0x4596d6f2],ecx
  4070e5:	shr    BYTE PTR [eax+0x6371248e],cl
  4070eb:	mov    eax,ds:0x9a449704
  4070f0:	jno    0x4070d9
  4070f2:	fcmovnb st,st(1)
  4070f4:	sti    
  4070f5:	out    0x3b,al
  4070f7:	(bad)  
  4070f8:	sahf   
  4070f9:	imul   ecx,DWORD PTR [edi],0x64f9eebf
  4070ff:	jmp    0x4070a2
  407101:	cwde   
  407102:	add    cl,ch
  407104:	xchg   ebx,eax
  407105:	xor    al,0x9c
  407107:	jno    0x40710b
  407109:	pop    es
  40710a:	shl    ch,1
  40710c:	stos   DWORD PTR es:[edi],eax
  40710d:	out    dx,al
  40710e:	xor    ecx,DWORD PTR [edx+0x2e]
  407111:	retf   0x3706
  407114:	xchg   ebx,eax
  407115:	pushf  
  407116:	inc    edx
  407117:	fstp   QWORD PTR [eax-0x3a]
  40711a:	sar    BYTE PTR [ebx+0x7b],1
  40711d:	inc    ebp
  40711e:	in     eax,dx
  40711f:	lock push esp
  407121:	rcl    al,0x85
  407124:	mov    edx,0xa79cf796
  407129:	test   DWORD PTR [edi+0x24f7f24b],edi
  40712f:	div    ebx
  407131:	jmp    0x3d56:0x645e713f
  407138:	dec    al
  40713a:	mov    dh,0xe2
  40713c:	sbb    ecx,DWORD PTR [ebx-0x41]
  40713f:	xchg   ebp,eax
  407140:	sbb    eax,0x8370a2c6
  407145:	push   ss
  407146:	pop    ecx
  407147:	sub    ch,bh
  407149:	(bad)  
  40714a:	cdq    
  40714b:	ja     0x407193
  40714d:	push   ecx
  40714e:	jle    0x4071b7
  407150:	mov    ah,0xe
  407152:	leave  
  407153:	add    esi,DWORD PTR [esi+ebp*8+0x46f56049]
  40715a:	fs cmp eax,0xea8f955f
  407160:	xchg   esp,eax
  407161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407162:	inc    ecx
  407163:	test   BYTE PTR [eax-0x1a3345f6],bl
  407169:	mov    ds:0x1a291e3b,al
  40716e:	ret    0xbaac
  407171:	mov    BYTE PTR ds:0x4f5f8b58,dl
  407177:	inc    ebp
  407178:	xlat   BYTE PTR ds:[ebx]
  407179:	es mov dh,0x74
  40717c:	add    eax,0x788b32cd
  407181:	and    al,0x5d
  407183:	imul   ebp,esp,0x915c0e69
  407189:	ror    BYTE PTR [ebx+ebx*1-0x5d],cl
  40718d:	sub    eax,0xb0927418
  407192:	mov    esi,0xa6aff8ae
  407197:	dec    ebp
  407198:	or     cl,ch
  40719a:	pop    ss
  40719b:	mov    ecx,0xd95e549c
  4071a0:	ret    
  4071a1:	daa    
  4071a2:	int    0x21
  4071a4:	push   ebp
  4071a5:	cmc    
  4071a6:	inc    edi
  4071a7:	nop
  4071a8:	outs   dx,DWORD PTR ds:[si]
  4071aa:	(bad)  
  4071ab:	adc    BYTE PTR [eax],cl
  4071ad:	xor    BYTE PTR [ecx],bh
  4071af:	jae    0x407141
  4071b1:	test   eax,0x45904895
  4071b6:	loopne 0x4071bb
  4071b8:	and    DWORD PTR [esi],eax
  4071ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071bb:	cmp    BYTE PTR [ebp+0xf],0x86
  4071bf:	(bad)  
  4071c0:	(bad)  
  4071c1:	retf   
  4071c2:	xchg   edi,eax
  4071c3:	iret   
  4071c4:	(bad)  
  4071c5:	ins    DWORD PTR es:[edi],dx
  4071c6:	push   ss
  4071c7:	push   ds
  4071c8:	sahf   
  4071c9:	adc    ebp,ebx
  4071cb:	fs inc ecx
  4071cd:	aad    0x20
  4071cf:	or     dh,BYTE PTR [ebx-0x7ba75ad]
  4071d5:	lock sbb DWORD PTR [edx-0x4a87f568],ebp
  4071dc:	in     al,0x5
  4071de:	leave  
  4071df:	test   eax,0x822c8d70
  4071e4:	adc    ch,bl
  4071e6:	sbb    bh,BYTE PTR [edi]
  4071e8:	ins    DWORD PTR es:[edi],dx
  4071e9:	test   BYTE PTR [esi+0x23],ah
  4071ec:	(bad)  
  4071ed:	in     al,dx
  4071ee:	inc    ebp
  4071ef:	or     DWORD PTR [ebx-0x62],eax
  4071f2:	(bad)  
  4071f3:	out    dx,al
  4071f4:	retf   
  4071f5:	jp     0x40722c
  4071f7:	popf   
  4071f8:	jb     0x4071ff
  4071fa:	repnz xor DWORD PTR [esi-0x12],edi
  4071fe:	xchg   ecx,eax
  4071ff:	sbb    eax,0xdda6026d
  407204:	adc    eax,0xf3bc58aa
  407209:	retf   0xa7eb
  40720c:	ret    0x65ac
  40720f:	sub    ebx,DWORD PTR [ebp+0x77cd5298]
  407215:	pop    ecx
  407216:	pushf  
  407217:	and    DWORD PTR ds:0x8d43795f,ebp
  40721d:	shr    DWORD PTR [esi+0x18],0x1c
  407221:	pop    edi
  407222:	int3   
  407223:	ret    0x90cb
  407226:	push   esp
  407227:	xor    cl,dl
  407229:	mov    bh,0xfb
  40722b:	mov    BYTE PTR cs:[esi-0x7b],cl
  40722f:	lods   al,BYTE PTR ds:[esi]
  407230:	in     eax,0xd4
  407232:	fsub   DWORD PTR [ecx-0x1a717562]
  407238:	popa   
  407239:	and    DWORD PTR [eax-0x23],edx
  40723c:	sahf   
  40723d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40723e:	add    dl,BYTE PTR [edi+eax*4+0x54a4583c]
  407245:	jo     0x4072bf
  407247:	xchg   edx,eax
  407248:	in     al,dx
  407249:	xor    edx,DWORD PTR [ecx]
  40724b:	mov    ecx,0xe10149e3
  407250:	dec    ecx
  407251:	daa    
  407252:	aaa    
  407253:	stc    
  407254:	leave  
  407255:	mov    edx,ss
  407257:	cld    
  407258:	mov    BYTE PTR [esp+ebp*4],ah
  40725b:	xchg   edi,eax
  40725c:	sub    al,0xa3
  40725e:	mov    esp,eax
  407260:	fcmovnu st,st(6)
  407262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407263:	or     al,0x26
  407265:	lea    esp,[eax+eiz*8]
  407268:	mov    ds,esi
  40726a:	pop    esp
  40726b:	and    DWORD PTR [edx],eax
  40726d:	movd   mm5,DWORD PTR [ebx+0x4cf57dc7]
  407274:	shl    DWORD PTR [ebx+0x10eb53d2],1
  40727a:	pushf  
  40727b:	inc    eax
  40727c:	scas   eax,DWORD PTR es:[edi]
  40727d:	xchg   edi,eax
  40727e:	jb     0x40722c
  407280:	ret    0x1ca2
  407283:	inc    ebx
  407284:	jnp    0x40723f
  407286:	bound  ebx,QWORD PTR [ecx-0x2e]
  407289:	std    
  40728a:	xchg   ebp,eax
  40728b:	cmp    DWORD PTR [ebp+ebp*1+0x5dafe0d8],edx
  407292:	dec    ebp
  407293:	or     eax,0xa143774b
  407298:	(bad)  
  407299:	jne    0x407277
  40729b:	push   0x8a587ea9
  4072a0:	push   0x1b
  4072a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a3:	mov    eax,0xc47834ca
  4072a8:	xchg   DWORD PTR [edx],ebx
  4072aa:	fwait
  4072ab:	test   al,0xa5
  4072ad:	mov    al,0xae
  4072af:	push   esi
  4072b0:	push   ebp
  4072b1:	adc    al,0xdf
  4072b3:	pop    ecx
  4072b4:	dec    esi
  4072b5:	inc    edi
  4072b6:	(bad)  
  4072b8:	xchg   esi,eax
  4072b9:	fbstp  TBYTE PTR [si]
  4072bc:	jmp    0x8803:0x99a8e72f
  4072c3:	add    BYTE PTR [eax+0x3bf8cafc],dl
  4072c9:	xor    cl,BYTE PTR [ebx-0x26]
  4072cc:	stos   DWORD PTR es:[edi],eax
  4072cd:	or     BYTE PTR [edi+0x10],bl
  4072d0:	popa   
  4072d1:	outs   dx,DWORD PTR ds:[esi]
  4072d2:	imul   esp,ecx,0xffffffa8
  4072d5:	xor    edi,ebp
  4072d7:	cmp    DWORD PTR [eax-0x5c],0xffffffda
  4072db:	jl     0x4072d9
  4072dd:	or     eax,0x3a8b8a72
  4072e2:	push   ds
  4072e3:	(bad)  
  4072e4:	(bad)  
  4072e5:	pop    ebx
  4072e6:	or     dl,BYTE PTR [ebp+0x7f3d48a3]
  4072ec:	pushf  
  4072ed:	rol    BYTE PTR [ebp-0x6a51f9eb],0x4
  4072f4:	xchg   edx,eax
  4072f5:	jb     0x40730b
  4072f7:	(bad)  
  4072f8:	div    DWORD PTR [ebp-0x6a53f84f]
  4072fe:	sbb    al,0xb4
  407300:	and    al,0x57
  407302:	clc    
  407303:	and    eax,0x5affaf7f
  407308:	in     al,0x8d
  40730a:	cmp    edi,DWORD PTR [esi+eax*8-0x69]
  40730e:	xchg   DWORD PTR [ebx],eax
  407310:	std    
  407311:	adc    bh,ch
  407313:	cmp    BYTE PTR [ebx-0x31],0xbf
  407317:	fucomp st(1)
  407319:	adc    ch,0xa7
  40731c:	ja     0x407306
  40731e:	mov    eax,0x54b985c5
  407323:	push   edi
  407324:	aaa    
  407325:	ins    DWORD PTR es:[edi],dx
  407326:	fcomp  QWORD PTR [edi-0x28]
  407329:	repz add esp,esp
  40732c:	mov    ds:0xe8169190,eax
  407331:	sbb    ebx,DWORD PTR [edi-0x5df7ef4b]
  407337:	mov    eax,0x27bd5e51
  40733c:	(bad)  
  40733d:	retf   0x366a
  407340:	and    DWORD PTR [ecx+0x55],edi
  407343:	mov    bl,0x26
  407345:	into   
  407346:	outs   dx,BYTE PTR ds:[esi]
  407347:	jp     0x407355
  407349:	adc    eax,0x62b6fec1
  40734e:	out    0x38,al
  407350:	push   DWORD PTR [eax-0x4d1deac3]
  407356:	and    DWORD PTR [eax+0x4572c8d4],0x37a5b8d1
  407360:	mov    dl,0xec
  407362:	stc    
  407363:	or     DWORD PTR [ebx-0x4c],edi
  407366:	sub    DWORD PTR [eax+0x10],esp
  407369:	pop    esi
  40736a:	stc    
  40736b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40736c:	mov    ebx,ss
  40736e:	dec    esi
  40736f:	mov    BYTE PTR [esi],bl
  407371:	cmp    esi,ebx
  407373:	pop    esp
  407374:	nop
  407375:	ret    
  407376:	fadd   DWORD PTR ds:0x7a5dd6c6
  40737c:	jmp    0x4073f7
  40737e:	mov    ch,0x73
  407380:	inc    esp
  407381:	sub    eax,0x3ddb431b
  407386:	cdq    
  407387:	imul   ebx,DWORD PTR [ebp+0x2],0xda13c5df
  40738e:	pusha  
  40738f:	pop    esp
  407390:	adc    BYTE PTR [ebx+0x2c],0x17
  407394:	push   0x1f
  407396:	mov    ah,0xf2
  407398:	stos   DWORD PTR es:[edi],eax
  407399:	mov    ds:0xbca44297,eax
  40739e:	sub    dl,ah
  4073a0:	dec    ecx
  4073a1:	pop    ecx
  4073a2:	test   BYTE PTR [edx-0x2327f32e],bl
  4073a8:	jo     0x4073c5
  4073aa:	xor    DWORD PTR [edi],ebx
  4073ac:	rol    BYTE PTR [eax+0x41],cl
  4073af:	inc    esi
  4073b0:	sub    eax,DWORD PTR [esi]
  4073b2:	(bad)  
  4073b3:	jmp    0x4073c0
  4073b5:	les    esi,FWORD PTR [ecx-0x4d6eaa3a]
  4073bb:	or     eax,0xf03746ac
  4073c0:	cmp    DWORD PTR [ebp-0x7360e1b3],0xffffffae
  4073c7:	jns    0x40738e
  4073c9:	je     0x40738f
  4073cb:	jl     0x4073d7
  4073cd:	and    eax,0xec794eda
  4073d2:	clc    
  4073d3:	adc    al,0xc7
  4073d5:	inc    edx
  4073d6:	adc    ah,al
  4073d8:	scas   al,BYTE PTR es:[edi]
  4073d9:	fist   DWORD PTR [eax]
  4073db:	pop    ebx
  4073dc:	stos   BYTE PTR es:[edi],al
  4073dd:	cmp    al,0x65
  4073df:	daa    
  4073e0:	adc    ecx,DWORD PTR [ebx]
  4073e2:	sti    
  4073e3:	add    eax,0x404f597f
  4073e8:	dec    edi
  4073e9:	mov    ebx,0xf71a97bb
  4073ee:	dec    esp
  4073ef:	or     al,0x93
  4073f1:	dec    ebp
  4073f2:	out    dx,al
  4073f3:	in     al,dx
  4073f4:	xchg   edx,eax
  4073f5:	mov    ebx,0xb397f8be
  4073fa:	nop
  4073fb:	pop    ebx
  4073fc:	mov    edx,0xbfc4b71c
  407401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407402:	dec    esp
  407403:	add    dh,ah
  407405:	pop    DWORD PTR [edi]
  407407:	cmp    dh,dl
  407409:	ret    0x78a1
  40740c:	call   ebp
  40740e:	pop    ecx
  40740f:	jg     0x407481
  407411:	mov    ah,0x49
  407413:	mov    bl,0x88
  407415:	pop    eax
  407416:	sbb    DWORD PTR [edx],ebx
  407418:	mov    dh,0x48
  40741a:	sbb    BYTE PTR [eax-0x1e0f5d20],al
  407420:	cdq    
  407421:	fld    DWORD PTR [esi]
  407423:	cmp    eax,0xc21a6d3a
  407428:	stos   DWORD PTR es:[edi],eax
  407429:	push   esp
  40742a:	call   0xd2de8ece
  40742f:	gs clc 
  407431:	lods   al,BYTE PTR ds:[esi]
  407432:	xchg   edi,eax
  407433:	lahf   
  407434:	or     al,0xae
  407436:	mov    dh,0x5
  407438:	stc    
  407439:	fwait
  40743a:	out    0x86,eax
  40743c:	es das 
  40743e:	sbb    DWORD PTR [esi-0x325dce9f],0xeb481f2b
  407448:	and    al,0x29
  40744a:	loope  0x40743c
  40744c:	jb     0x4073dd
  40744e:	dec    edx
  40744f:	in     eax,0x68
  407451:	mov    al,0x42
  407453:	cld    
  407454:	adc    eax,0x651cc75f
  407459:	(bad)  
  40745a:	and    DWORD PTR [esi*2+0x512adcc5],ecx
  407461:	pushf  
  407462:	fstp   DWORD PTR [esi-0x1d8271d1]
  407468:	xchg   edi,eax
  407469:	push   edx
  40746a:	sbb    BYTE PTR [edi+0x3b],bl
  40746d:	fwait
  40746e:	mov    al,ds:0x17cba32c
  407473:	sub    eax,0xb79919a0
  407478:	dec    esi
  407479:	xchg   edi,eax
  40747a:	cli    
  40747b:	out    0x10,eax
  40747d:	sbb    DWORD PTR [ecx+0xca94a47],eax
  407483:	outs   dx,DWORD PTR ds:[esi]
  407484:	mov    dh,cl
  407486:	and    DWORD PTR [edx+eiz*4+0x5f],0x88c65d2e
  40748e:	jg     0x4074a9
  407490:	xchg   esp,eax
  407491:	sub    DWORD PTR [edx-0x488212e3],0xdb48bb63
  40749b:	inc    ebp
  40749c:	adc    eax,0x687a406f
  4074a1:	call   0x2c7:0x96e1699e
  4074a8:	mov    WORD PTR [edx],fs
  4074aa:	mov    dh,0xe
  4074ac:	test   ch,0x81
  4074af:	and    BYTE PTR [esi],0xc9
  4074b2:	xor    eax,0xffffffd8
  4074b5:	and    BYTE PTR [ebx+edi*4+0x62],ah
  4074b9:	cmp    cl,al
  4074bb:	mov    cl,0x93
  4074bd:	sbb    eax,0x8e550fea
  4074c2:	ds jp  0x407480
  4074c5:	xor    bl,bl
  4074c7:	sub    BYTE PTR [ebp-0x24],0xd1
  4074cb:	xchg   edi,eax
  4074cc:	scas   eax,DWORD PTR es:[edi]
  4074cd:	loopne 0x407463
  4074cf:	sub    al,0x8
  4074d1:	jmp    0x40754d
  4074d3:	ret    
  4074d4:	xchg   ebx,eax
  4074d5:	ins    BYTE PTR es:[edi],dx
  4074d6:	stos   DWORD PTR es:[edi],eax
  4074d7:	rcl    DWORD PTR [eax-0x5fc8db1e],0xe5
  4074de:	shl    cl,0xd9
  4074e1:	mov    DWORD PTR [ecx-0x23],ebx
  4074e4:	in     eax,dx
  4074e5:	cwde   
  4074e6:	ret    
  4074e7:	sti    
  4074e8:	mov    al,0xa2
  4074ea:	xor    eax,DWORD PTR [eax+0x4626b95f]
  4074f0:	inc    edx
  4074f1:	cdq    
  4074f2:	loope  0x4074db
  4074f4:	mov    WORD PTR ds:0x4867bb2a,cs
  4074fa:	stos   DWORD PTR es:[edi],eax
  4074fb:	iret   
  4074fc:	mov    edx,0x917208db
  407501:	rcl    DWORD PTR [ebx],1
  407503:	dec    eax
  407504:	mul    BYTE PTR [ecx-0x211d9a5]
  40750a:	adc    eax,0xde95b7df
  40750f:	loope  0x40756c
  407511:	repz pop ecx
  407513:	fld    DWORD PTR ds:0x69c89653
  407519:	dec    ecx
  40751a:	xlat   BYTE PTR ds:[ebx]
  40751b:	cmp    al,0xc5
  40751d:	xor    DWORD PTR [ebx+0x6856d8f8],edi
  407523:	mov    eax,0xd5efca90
  407528:	mov    esi,0x45ebdd83
  40752d:	retfw  0x17fb
  407531:	js     0x4074dd
  407533:	outs   dx,BYTE PTR ds:[esi]
  407534:	pop    esp
  407535:	rcl    BYTE PTR [edi],0xeb
  407538:	std    
  407539:	stos   BYTE PTR es:[edi],al
  40753a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40753c:	das    
  40753d:	push   ds
  40753e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40753f:	fbstp  TBYTE PTR [edi-0x73]
  407542:	pop    ebp
  407543:	xor    ah,BYTE PTR [edx-0x49]
  407546:	sbb    al,0xd
  407548:	rol    DWORD PTR [edx],1
  40754a:	int    0x1f
  40754c:	cmp    al,0x1d
  40754e:	loopne 0x40759c
  407550:	cmp    al,0xf
  407552:	mov    al,ah
  407554:	or     cl,0x3e
  407557:	adc    cl,BYTE PTR [eax+0xe]
  40755a:	sub    BYTE PTR [ebp-0x42],dh
  40755d:	outs   dx,DWORD PTR ds:[esi]
  40755e:	dec    edi
  40755f:	adc    esp,DWORD PTR [ecx]
  407561:	push   esp
  407562:	pop    eax
  407563:	adc    ch,ah
  407565:	xor    bl,dl
  407567:	fdiv   QWORD PTR ds:0x2c293047
  40756d:	and    bl,bl
  40756f:	push   es
  407570:	xchg   edi,eax
  407571:	xor    BYTE PTR [edx+0x33],bh
  407574:	mov    edi,0xc4b3bf6e
  407579:	adc    al,0x28
  40757b:	ret    0x3fc6
  40757e:	test   al,0x78
  407580:	test   BYTE PTR [edi],ah
  407582:	test   DWORD PTR [edi+0x33651951],0xdbaf7a4d
  40758c:	cdq    
  40758d:	xchg   edi,eax
  40758e:	daa    
  40758f:	jp     0x407598
  407591:	daa    
  407592:	cwde   
  407593:	imul   ebx,esi,0x9
  407596:	jne    0x40754a
  407598:	add    al,0xc3
  40759a:	adc    edx,DWORD PTR [edx-0x39]
  40759d:	(bad)  
  40759e:	call   DWORD PTR [esi-0x51901e95]
  4075a4:	add    BYTE PTR [ecx-0x3e62ddca],bl
  4075aa:	add    ah,BYTE PTR [esi]
  4075ac:	push   edx
  4075ad:	cli    
  4075ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075af:	fbstp  TBYTE PTR [esi+0x29]
  4075b2:	stos   BYTE PTR es:[edi],al
  4075b3:	shr    BYTE PTR [ebx-0xe2cb89b],1
  4075b9:	mov    dh,0x48
  4075bb:	sub    eax,0x90a9e54
  4075c0:	test   al,0xb2
  4075c2:	mov    BYTE PTR [edx-0x5513e3cf],bl
  4075c8:	aad    0x27
  4075ca:	add    DWORD PTR [edx],ecx
  4075cc:	call   0xde7a:0x22820d27
  4075d3:	sub    eax,DWORD PTR [edi]
  4075d5:	or     ch,BYTE PTR [ebp+ecx*4-0x78]
  4075d9:	bound  ecx,QWORD PTR [edx-0x4bdeed13]
  4075df:	xchg   esp,eax
  4075e0:	or     eax,0xb0845f4
  4075e5:	hlt    
  4075e6:	or     al,0x72
  4075e8:	cmc    
  4075e9:	idiv   DWORD PTR [eax-0x3b]
  4075ec:	jns    0x4075ff
  4075ee:	mov    cl,0xc5
  4075f0:	and    eax,0x42cd87ee
  4075f5:	adc    ecx,ebx
  4075f7:	les    esi,FWORD PTR [edi]
  4075f9:	xchg   DWORD PTR [eax],eax
  4075fb:	out    dx,al
  4075fc:	xchg   ebx,eax
  4075fd:	dec    ebx
  4075fe:	inc    edx
  4075ff:	in     al,0x22
  407601:	fs ins DWORD PTR es:[edi],dx
  407603:	outs   dx,BYTE PTR ds:[esi]
  407604:	jb     0x4075ad
  407606:	adc    al,0xae
  407608:	inc    eax
  407609:	test   DWORD PTR [eax],0x9ed5a2f1
  40760f:	xchg   esp,eax
  407610:	ret    0x3c1d
  407613:	pushw  0x4
  407616:	push   0xffffffc7
  407618:	loop   0x40765e
  40761a:	cmp    eax,edi
  40761c:	inc    ebp
  40761d:	mov    bl,0x8a
  40761f:	mov    dl,0x2d
  407621:	xchg   edx,eax
  407622:	fstp   QWORD PTR [ebx+0x2]
  407625:	pop    es
  407626:	jbe    0x40760d
  407628:	cmp    bl,BYTE PTR [ebx+0x7f]
  40762b:	xor    BYTE PTR [eax-0x4d801516],cl
  407631:	test   eax,0x805de0da
  407636:	in     al,0xf
  407638:	loopne 0x407651
  40763a:	push   cs
  40763b:	std    
  40763c:	hlt    
  40763d:	dec    ebx
  40763e:	jnp    0x407632
  407640:	loop   0x40769f
  407642:	les    esi,FWORD PTR [eax-0x5e]
  407645:	mov    ebp,0xe0a731a5
  40764a:	push   eax
  40764b:	ss mov bh,0x52
  40764e:	addr16 mov ecx,0x4c681693
  407654:	adc    eax,0x5401c46e
  407659:	push   esp
  40765a:	push   ecx
  40765b:	lds    ecx,FWORD PTR [eax-0x3468de1]
  407661:	jb     0x407605
  407663:	idiv   eax
  407665:	xlat   BYTE PTR ds:[ebx]
  407666:	adc    BYTE PTR [eax],ch
  407668:	sbb    eax,0xd2af8992
  40766d:	inc    esi
  40766e:	neg    BYTE PTR [ebp+0x6c58d519]
  407674:	rcl    ah,0x77
  407677:	mov    bl,ch
  407679:	push   ds
  40767a:	cmp    cl,BYTE PTR [eax+ecx*8]
  40767d:	lods   eax,DWORD PTR ds:[esi]
  40767e:	enter  0x18dc,0x81
  407682:	add    dl,BYTE PTR [eax]
  407684:	ja     0x407690
  407686:	jae    0x4076f5
  407688:	sub    al,BYTE PTR [edi+eax*8-0x7b5ac8de]
  40768f:	loopne 0x4076c5
  407691:	push   es
  407692:	aaa    
  407693:	js     0x4076d8
  407695:	loop   0x4076a0
  407697:	lods   eax,DWORD PTR ds:[esi]
  407698:	xor    dl,0x94
  40769b:	add    edi,DWORD PTR [edi-0x70ba1a1f]
  4076a1:	pop    ecx
  4076a2:	mov    dl,0x19
  4076a4:	call   0x391a4d40
  4076a9:	outs   dx,DWORD PTR es:[esi]
  4076ab:	xchg   ecx,eax
  4076ac:	into   
  4076ad:	retf   0x4d0b
  4076b0:	or     DWORD PTR ds:0xc89db8d,esp
  4076b6:	sub    ah,BYTE PTR [ecx+eiz*2]
  4076b9:	in     al,dx
  4076ba:	push   ds
  4076bb:	jecxz  0x40765e
  4076bd:	and    esp,esi
  4076bf:	loope  0x407713
  4076c1:	cmp    BYTE PTR [edi+0x5e971c7],dl
  4076c7:	xchg   ebx,eax
  4076c8:	mov    ecx,0x6fab2525
  4076cd:	loop   0x40768d
  4076cf:	jle    0x407704
  4076d1:	mov    ch,0x98
  4076d3:	cmp    eax,0x97d5e46
  4076d8:	jp     0x40774b
  4076da:	sbb    ecx,eax
  4076dc:	inc    ebp
  4076dd:	sar    ebx,cl
  4076df:	add    ebx,DWORD PTR ds:0x4d4e9158
  4076e5:	xor    eax,0x62da8a43
  4076ea:	fsubr  QWORD PTR [edi+0x46]
  4076ed:	mov    al,ch
  4076ef:	adc    dh,dl
  4076f1:	pop    esp
  4076f2:	lock mov al,fs:0x2ddc3b6f
  4076f9:	cmp    al,0xf7
  4076fb:	add    eax,0x2e11dcc3
  407700:	adc    eax,0xdd0ffa74
  407705:	pop    ds
  407706:	push   esi
  407707:	outs   dx,BYTE PTR ds:[esi]
  407708:	test   al,0xe3
  40770a:	int    0x3c
  40770c:	jo     0x407783
  40770e:	shl    BYTE PTR [eax+0x5],cl
  407711:	cmp    cl,dh
  407713:	(bad)  
  407714:	test   al,0x9e
  407716:	ins    DWORD PTR es:[edi],dx
  407717:	push   cs
  407718:	iret   
  407719:	stos   DWORD PTR es:[edi],eax
  40771a:	cs inc ecx
  40771c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40771d:	xor    al,0x5
  40771f:	inc    esp
  407720:	and    cl,BYTE PTR [edx+0x46]
  407723:	and    eax,0xb77b5e60
  407728:	not    BYTE PTR [ebp-0x15]
  40772b:	div    BYTE PTR [ecx-0x1a50c2c7]
  407731:	lea    esp,[edi+0x4aab6d3d]
  407737:	mov    edx,0xc999a422
  40773c:	fs dec ecx
  40773e:	jbe    0x4076cf
  407740:	or     al,0xea
  407742:	cdq    
  407743:	jae    0x407774
  407745:	int3   
  407746:	jns    0x407777
  407748:	rcr    DWORD PTR [ecx+ebp*1],0xb8
  40774c:	imul   ebx,esi,0xfb5606ba
  407752:	out    dx,al
  407753:	xor    eax,0x2e412f09
  407758:	jns    0x40777f
  40775a:	mov    eax,0xae1ea919
  40775f:	and    BYTE PTR [esi+0xd],cl
  407762:	cmp    eax,ebx
  407764:	push   ds
  407765:	mov    ebx,0x73c126f4
  40776a:	je     0x407737
  40776c:	xchg   DWORD PTR [ecx],ebx
  40776e:	(bad)  [esi-0x25]
  407771:	popf   
  407772:	xor    BYTE PTR [edx],al
  407774:	push   esp
  407775:	jb     0x4077ba
  407777:	jae    0x407732
  407779:	xlat   BYTE PTR ds:[ebx]
  40777a:	adc    bh,al
  40777c:	xchg   ebp,eax
  40777d:	pop    es
  40777e:	cmp    edx,eax
  407780:	jnp    0x40771d
  407782:	push   edi
  407783:	pop    esp
  407784:	mov    al,ds:0x1b9b539a
  407789:	jg     0x4077b9
  40778b:	ret    
  40778c:	jp     0x40777a
  40778e:	jmp    0x7b10710b
  407793:	jmp    0x5d64:0xa061ec7a
  40779a:	push   ecx
  40779b:	fiadd  WORD PTR [ecx+ebx*4]
  40779e:	adc    eax,0x52398086
  4077a3:	loope  0x407768
  4077a5:	add    eax,0xa3436141
  4077aa:	jle    0x40781a
  4077ac:	mov    cl,0x84
  4077ae:	scas   al,BYTE PTR es:[edi]
  4077af:	xchg   ecx,eax
  4077b0:	loop   0x407815
  4077b2:	lds    eax,FWORD PTR [eax+0x3d]
  4077b5:	xchg   ecx,eax
  4077b6:	in     al,0x40
  4077b8:	jmp    0x2c0bcf34
  4077bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077be:	call   0xf47d58ff
  4077c3:	jb     0x4077d1
  4077c5:	push   ss
  4077c6:	mov    bl,dh
  4077c8:	xchg   BYTE PTR ds:0xb606a389,dh
  4077ce:	mov    eax,0x58f9d507
  4077d3:	cld    
  4077d4:	enter  0xc80e,0xe6
  4077d8:	cmp    eax,0xe86d3442
  4077dd:	pusha  
  4077de:	outs   dx,DWORD PTR ds:[esi]
  4077df:	mov    ch,0x2a
  4077e1:	das    
  4077e2:	push   ebp
  4077e3:	stc    
  4077e4:	mov    edi,0xe43db338
  4077e9:	adc    ebp,edx
  4077eb:	stos   BYTE PTR es:[edi],al
  4077ec:	mov    BYTE PTR [edi-0x2d017bac],ah
  4077f2:	fld    TBYTE PTR [edx-0x6269ea8f]
  4077f8:	jg     0x40779b
  4077fa:	push   ebp
  4077fb:	ret    
  4077fc:	imul   eax,DWORD PTR [eax+esi*4+0x6f978acc],0xffffffdd
  407804:	adc    DWORD PTR ds:0x2f0b8d79,edi
  40780a:	add    DWORD PTR [ebp+0x69],edx
  40780d:	daa    
  40780e:	mov    dl,0xd
  407810:	and    ebp,DWORD PTR [eax+edi*2]
  407813:	add    BYTE PTR [eax],bl
  407815:	lahf   
  407816:	jno    0x40782e
  407818:	sbb    al,0x1d
  40781a:	jge    0x407873
  40781c:	icebp  
  40781d:	pop    ebx
  40781e:	rol    DWORD PTR [ebp+esi*2+0x3d],cl
  407822:	adc    BYTE PTR [esi],dh
  407824:	adc    dl,BYTE PTR [ebx+0x4502fa24]
  40782a:	push   cs
  40782b:	pop    edi
  40782c:	repz lea eax,[edx-0x79]
  407830:	add    BYTE PTR [esi-0x64b20fc8],0xfb
  407837:	mov    cl,BYTE PTR [ebx]
  407839:	ins    BYTE PTR es:[edi],dx
  40783a:	xchg   ecx,eax
  40783b:	dec    esp
  40783c:	push   0x24
  40783e:	je     0x407887
  407840:	(bad)  
  407841:	xlat   BYTE PTR ds:[ebx]
  407842:	inc    esi
  407843:	(bad)  
  407845:	cmc    
  407846:	push   edx
  407847:	pop    ecx
  407848:	mov    edx,0x2a8fbc61
  40784d:	adc    eax,0x90c14988
  407852:	and    esp,DWORD PTR [esp+ebx*8-0x51]
  407856:	pop    esp
  407857:	xor    BYTE PTR [eax+edi*4-0x30],bh
  40785b:	leave  
  40785c:	les    ebp,FWORD PTR [ebx-0x2f17a984]
  407862:	xor    cl,BYTE PTR [edi+0x1f]
  407865:	(bad)  
  407866:	neg    BYTE PTR [edx+0x6c]
  407869:	fbstp  TBYTE PTR [esi-0x7aa26b51]
  40786f:	pop    ss
  407870:	xor    al,0x5e
  407872:	jno    0x4078bf
  407874:	not    dl
  407876:	cmc    
  407877:	imul   ecx,ecx,0x55
  40787a:	adc    al,al
  40787c:	jbe    0x4078e5
  40787e:	jne    0x4078f9
  407880:	fild   QWORD PTR [eax-0x51]
  407883:	mov    ebx,0x2d0072fa
  407888:	inc    eax
  407889:	xchg   al,bl
  40788b:	and    BYTE PTR [ecx-0x7a232944],cl
  407891:	shl    BYTE PTR [ecx+edx*2-0x6283e3e9],0xd5
  407899:	ret    
  40789a:	pavgw  mm7,QWORD PTR [esi]
  40789d:	cmp    al,0x21
  40789f:	(bad)  
  4078a1:	jbe    0x407899
  4078a3:	sub    al,0xb3
  4078a5:	pop    edx
  4078a6:	mov    esi,0x4dc065a
  4078ab:	xchg   edi,eax
  4078ac:	das    
  4078ad:	fist   WORD PTR [edx+0xa]
  4078b0:	push   ebp
  4078b1:	mov    ah,bl
  4078b3:	lock adc al,0x35
  4078b6:	mov    ecx,0x8cb6f86
  4078bb:	pushw  ds
  4078bd:	adc    dl,BYTE PTR fs:[ecx]
  4078c0:	adc    bh,BYTE PTR [esi-0x8]
  4078c3:	mov    edi,DWORD PTR [esi]
  4078c5:	xor    BYTE PTR [eax+0x2ee63331],0xaa
  4078cc:	add    eax,0x7ccbf1ed
  4078d1:	stc    
  4078d2:	(bad)  
  4078d3:	dec    ebp
  4078d4:	enter  0xc5bb,0x9c
  4078d8:	ss fwait
  4078da:	push   cs
  4078db:	into   
  4078dc:	data16 lahf 
  4078de:	(bad)  
  4078df:	push   ebp
  4078e0:	and    DWORD PTR [edi-0x26],edi
  4078e3:	hlt    
  4078e4:	jmp    0x7860:0x138253e3
  4078eb:	ja     0x40788a
  4078ed:	fwait
  4078ee:	inc    ecx
  4078ef:	pop    esp
  4078f0:	jle    0x407918
  4078f2:	idiv   ah
  4078f4:	push   ecx
  4078f5:	arpl   WORD PTR [ecx-0x139104a4],dx
  4078fb:	enter  0xdfa8,0x16
  4078ff:	dec    edx
  407900:	shl    BYTE PTR [esi-0x6a],1
  407903:	rol    BYTE PTR [edx],1
  407905:	cli    
  407906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407907:	call   0x1fc6:0x72d44afc
  40790e:	paddusw mm5,QWORD PTR [eax+0x78]
  407912:	enter  0x54d2,0x4a
  407916:	out    0x30,al
  407918:	(bad)  
  407919:	jmp    0x407968
  40791b:	pop    edx
  40791c:	adc    BYTE PTR [edi-0x6f],ch
  40791f:	fst    QWORD PTR [edi-0x39]
  407922:	pop    ebx
  407923:	push   eax
  407924:	and    DWORD PTR [ecx+0x1c1bca64],esi
  40792a:	in     eax,dx
  40792b:	sti    
  40792c:	das    
  40792d:	jno    0x407940
  40792f:	bound  esp,QWORD PTR [edi]
  407931:	js     0x407987
  407933:	push   esi
  407934:	int    0x0
  407936:	mov    dh,cl
  407938:	mov    al,0xd4
  40793a:	jnp    0x4079b3
  40793c:	ror    DWORD PTR ds:0xac565b07,cl
  407942:	add    esp,edi
  407944:	jb     0x4078df
  407946:	xchg   ebp,eax
  407947:	sbb    al,0xc4
  407949:	pusha  
  40794a:	(bad)  
  40794b:	mov    esp,0xdc0053e
  407950:	inc    edi
  407951:	lahf   
  407952:	cwde   
  407953:	aaa    
  407954:	sbb    eax,0xf30b480
  407959:	cmp    BYTE PTR [eax-0x3c],ch
  40795c:	dec    eax
  40795d:	neg    DWORD PTR [esi+0x4b]
  407960:	in     eax,dx
  407961:	dec    ebx
  407962:	inc    eax
  407963:	fisubr DWORD PTR [ebx+0x35]
  407966:	adc    al,BYTE PTR [ebp+0x5f00076b]
  40796c:	inc    ebp
  40796d:	sbb    al,0xa1
  40796f:	popa   
  407970:	outs   dx,BYTE PTR ds:[esi]
  407971:	mov    ss,WORD PTR [esi]
  407973:	aaa    
  407974:	sbb    al,0x42
  407976:	inc    edi
  407977:	dec    eax
  407978:	sbb    bl,BYTE PTR [ebx+0xf34aca2]
  40797e:	in     eax,dx
  40797f:	mov    eax,ds:0xc539c2e
  407984:	or     al,0x35
  407986:	pop    edx
  407987:	test   ah,bh
  407989:	(bad)  
  40798a:	fbstp  TBYTE PTR [edi]
  40798c:	sbb    al,0x1f
  40798e:	xor    al,0x34
  407990:	test   al,0xf3
  407992:	push   0xffffffe5
  407994:	call   0x485664f1
  407999:	mov    esi,0xd55422d5
  40799e:	cmp    BYTE PTR ds:0xb09f1eb2,al
  4079a4:	pop    edi
  4079a5:	int3   
  4079a6:	sar    edi,1
  4079a8:	or     bl,ch
  4079aa:	mov    ah,0x35
  4079ac:	leave  
  4079ad:	push   ss
  4079ae:	inc    ecx
  4079af:	fwait
  4079b0:	sbb    BYTE PTR [ebp+0x58dc4a38],ah
  4079b6:	and    DWORD PTR [edx+edi*2],esi
  4079b9:	mov    cl,0x5a
  4079bb:	test   DWORD PTR [edi+0xaaa621b],ebp
  4079c1:	arpl   dx,bx
  4079c3:	cmp    al,0x5f
  4079c5:	sbb    cl,dh
  4079c7:	std    
  4079c8:	cmp    dh,cl
  4079ca:	jmp    0x73db:0xe61ecde3
  4079d1:	xor    BYTE PTR [esi],dl
  4079d3:	inc    ebx
  4079d4:	ds pop esi
  4079d6:	rcl    BYTE PTR ds:0x3d382913,1
  4079dc:	in     al,0xf4
  4079de:	(bad)  
  4079e0:	repnz les ax,DWORD PTR [ebx+0x5a6f069d]
  4079e8:	cmp    eax,0xd8612663
  4079ed:	inc    edx
  4079ee:	pop    eax
  4079ef:	mov    bl,0x84
  4079f1:	mov    esi,0x58b5e11a
  4079f6:	and    BYTE PTR [ecx-0x5b6d8662],al
  4079fc:	fwait
  4079fd:	(bad)  
  4079fe:	jbe    0x4079f3
  407a00:	cmc    
  407a01:	push   0x48
  407a03:	mov    eax,ds:0xf6022811
  407a08:	xor    eax,DWORD PTR [eax]
  407a0a:	fstp   TBYTE PTR [ebx]
  407a0c:	add    edi,DWORD PTR [ebx+0x225c3878]
  407a12:	repnz aas 
  407a14:	mov    bh,0x7f
  407a16:	jns    0x407a7e
  407a18:	inc    ebp
  407a19:	add    bl,ch
  407a1b:	cmp    eax,0x666f63ef
  407a20:	push   es
  407a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a22:	test   al,0x6a
  407a24:	sbb    ah,BYTE PTR [eax+0x36]
  407a27:	push   0x1f
  407a29:	mov    esi,0x8c35ff47
  407a2e:	mov    ds:0x35ff0043,eax
  407a33:	push   esp
  407a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a35:	inc    ebx
  407a36:	add    bh,bh
  407a38:	jne    0x407a12
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0xe874:0xd265c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	mov    al,0xf5
  407ebe:	dec    edx
  407ebf:	sbb    BYTE PTR [edx-0x1d],0xd2
  407ec3:	jecxz  0x407f23
  407ec5:	rcr    DWORD PTR [ebp+0x3b7332ae],1
  407ecb:	mov    al,0x84
  407ecd:	inc    edx
  407ece:	pop    ecx
  407ecf:	leave  
  407ed0:	adc    DWORD PTR [edi+0x14],ebx
  407ed3:	mov    ecx,0x68a969ea
  407ed8:	jo     0x407f3c
  407eda:	add    al,0xa7
  407edc:	dec    eax
  407edd:	call   0x23592698
  407ee2:	and    ebx,DWORD PTR [ebx+0x20]
  407ee5:	cmp    al,0x61
  407ee7:	mov    bl,0x10
  407ee9:	cmp    esp,DWORD PTR [edi]
  407eeb:	pop    ebx
  407eec:	fs push edx
  407eee:	cmp    BYTE PTR [ebx],bl
  407ef0:	das    
  407ef1:	push   esp
  407ef2:	jl     0x407ea0
  407ef4:	pop    ebx
  407ef5:	ins    DWORD PTR es:[edi],dx
  407ef6:	rol    BYTE PTR [ebx],0x38
  407ef9:	mov    esi,0xa92e5d98
  407efe:	push   ss
  407eff:	test   al,0x93
  407f01:	sub    DWORD PTR [edx+ebx*4],eax
  407f04:	ja     0x407f75
  407f06:	rcr    ecx,0x32
  407f09:	or     al,0x3e
  407f0b:	neg    edx
  407f0d:	cmp    edi,edx
  407f0f:	mov    edx,0x59dcfe2f
  407f14:	mov    al,ds:0x6c39c540
  407f19:	cmp    DWORD PTR [ebx+0x40],ebx
  407f1c:	add    BYTE PTR [ecx+0x142222c7],0xbd
  407f23:	scas   eax,DWORD PTR es:[edi]
  407f24:	das    
  407f25:	mov    dl,0x3c
  407f27:	mov    ecx,0x95e4982b
  407f2c:	xor    bh,ah
  407f2e:	inc    ebx
  407f2f:	stc    
  407f30:	dec    esp
  407f31:	in     eax,dx
  407f32:	mov    ds:0x8c08e06,eax
  407f37:	add    ah,BYTE PTR [edi-0x47e9be93]
  407f3d:	fs out 0xa4,al
  407f40:	inc    edx
  407f41:	push   edi
  407f42:	loopne 0x407f9e
  407f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f45:	sbb    DWORD PTR [esi+0x6256fde0],esp
  407f4b:	out    0x79,al
  407f4d:	in     al,0x45
  407f4f:	xchg   esp,eax
  407f50:	pop    ecx
  407f51:	inc    ebp
  407f52:	dec    edi
  407f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f54:	lods   al,BYTE PTR ds:[esi]
  407f55:	sub    eax,0x235975e6
  407f5a:	iret   
  407f5b:	or     bh,dl
  407f5d:	(bad)  
  407f5e:	iret   
  407f5f:	aam    0x31
  407f61:	sub    ecx,DWORD PTR [ecx-0x45a22681]
  407f67:	test   al,0x73
  407f69:	mov    edx,edx
  407f6b:	mov    cl,0x6b
  407f6d:	popa   
  407f6e:	push   ss
  407f6f:	sub    al,0xe
  407f71:	stc    
  407f72:	jns    0x407f27
  407f74:	add    al,0x33
  407f76:	ss scas al,BYTE PTR es:[edi]
  407f78:	jmp    0x479adcf9
  407f7d:	cmc    
  407f7e:	xor    esi,DWORD PTR [edx]
  407f80:	idiv   BYTE PTR fs:[ecx]
  407f83:	jge    0x407fbb
  407f85:	push   ds
  407f86:	sub    edi,0x3799ef05
  407f8c:	inc    esp
  407f8d:	mov    dl,ch
  407f8f:	das    
  407f90:	pusha  
  407f91:	mov    DWORD PTR [ebp-0x59f81d3c],eax
  407f97:	aam    0xe6
  407f99:	mov    ds:0x984b1a22,eax
  407f9e:	mov    BYTE PTR [ebp-0x20],dl
  407fa1:	retf   
  407fa2:	xor    esp,DWORD PTR [edx-0x18]
  407fa5:	dec    edi
  407fa6:	xlat   BYTE PTR ds:[ebx]
  407fa7:	les    esp,FWORD PTR [eax]
  407fa9:	fst    QWORD PTR [ebx]
  407fab:	iret   
  407fac:	nop
  407fad:	xchg   edx,eax
  407fae:	fcom   DWORD PTR [ecx+0x63]
  407fb1:	cld    
  407fb2:	test   BYTE PTR [ebx+0x3f],al
  407fb5:	push   edi
  407fb6:	dec    esi
  407fb7:	mov    ds:0xa18af960,eax
  407fbc:	cdq    
  407fbd:	ins    BYTE PTR es:[edi],dx
  407fbe:	rcr    esi,cl
  407fc0:	push   ss
  407fc1:	jl     0x40802d
  407fc3:	mov    cs,WORD PTR [ebx+0xcb598d3]
  407fc9:	out    dx,al
  407fca:	shr    BYTE PTR [edx-0x26],1
  407fcd:	sub    DWORD PTR [ecx+0x1ab73717],ebp
  407fd3:	pusha  
  407fd4:	addr16 cli 
  407fd6:	bound  ebp,QWORD PTR [ecx+edx*2]
  407fd9:	mov    ah,0x1
  407fdb:	ins    BYTE PTR es:[edi],dx
  407fdc:	xor    cl,cl
  407fde:	js     0x407fe8
  407fe0:	push   esp
  407fe1:	mov    ds:0xf6bea38d,eax
  407fe6:	cmp    BYTE PTR [ebp-0x44de0a7b],bl
  407fec:	aas    
  407fed:	adc    DWORD PTR [ebp+0x27],ebp
  407ff0:	cmp    dl,BYTE PTR [ebx]
  407ff2:	inc    ecx
  407ff3:	push   esp
  407ff4:	push   ecx
  407ff5:	(bad)  
  407ff6:	imul   DWORD PTR [eax-0x28fbd911]
  407ffc:	fs jmp 0x40805b
  407fff:	popf   
  408000:	cmp    eax,0x1880c1f5
  408005:	or     ah,BYTE PTR [esi]
  408007:	jb     0x408030
  408009:	(bad)
  40800c:	pop    eax
  40800d:	cdq    
  40800e:	sbb    esi,DWORD PTR es:[esi]
  408011:	scas   al,BYTE PTR es:[edi]
  408012:	pushf  
  408013:	fdivr  DWORD PTR [ebx]
  408015:	cmp    al,0x2d
  408017:	lds    ebx,FWORD PTR [ecx+0xc2c909c]
  40801d:	sub    bl,cl
  40801f:	call   0x74b8:0x674ad0c9
  408026:	(bad)  
  408027:	xchg   ebp,eax
  408028:	jae    0x40808e
  40802a:	stos   BYTE PTR es:[edi],al
  40802b:	xchg   ecx,eax
  40802c:	jns    0x40802f
  40802e:	sub    eax,0x7b7608f6
  408033:	mov    bl,0x10
  408035:	fs push 0x62
  408038:	aad    0xc5
  40803a:	imul   edi,DWORD PTR [ebp+0x2506ec4a],0xc7ff0fd6
  408044:	les    ebp,FWORD PTR [esi-0x70]
  408047:	mov    eax,0x616c59e8
  40804c:	loope  0x40806f
  40804e:	xor    eax,0x25906828
  408053:	push   edi
  408054:	adc    ebx,DWORD PTR [ebx]
  408056:	clc    
  408057:	add    dh,ch
  408059:	xchg   ebp,eax
  40805a:	ret    
  40805b:	out    0x9,eax
  40805d:	push   eax
  40805e:	aas    
  40805f:	(bad)  
  408060:	xchg   ecx,eax
  408061:	sbb    ebp,eax
  408063:	gs push 0x36
  408066:	lea    ebp,[esi-0x2b4bd53e]
  40806c:	fdiv   QWORD PTR ds:[edi-0x29]
  408070:	mov    ds:0xc43307e1,al
  408075:	ds fsubp st(3),st
  408078:	inc    eax
  408079:	cwde   
  40807a:	imul   BYTE PTR [ecx+0x28]
  40807d:	pop    es
  40807e:	or     DWORD PTR ds:0x2ca47dd9,esi
  408084:	lahf   
  408085:	js     0x4080c2
  408087:	mov    cl,0xcc
  408089:	xor    al,0xaa
  40808b:	call   0x2273:0x1de460a5
  408092:	ror    edi,1
  408094:	fld    QWORD PTR [ebx+edi*1]
  408097:	sbb    cl,BYTE PTR [esi]
  408099:	lds    esi,FWORD PTR [ecx+0x1e]
  40809c:	fiadd  WORD PTR [eax]
  40809e:	add    DWORD PTR [edi-0x7ebb9d9],ecx
  4080a4:	xor    al,0x2b
  4080a6:	adc    cl,bl
  4080a8:	mov    ecx,0xf7fe98b2
  4080ad:	js     0x4080e4
  4080af:	mov    ebp,0x5b45e52b
  4080b4:	out    dx,eax
  4080b5:	call   0x58b36b94
  4080ba:	icebp  
  4080bb:	in     al,dx
  4080bc:	and    BYTE PTR [bx+0x3d],bh
  4080c0:	into   
  4080c1:	mov    al,ds:0x9e7cdeb8
  4080c6:	retf   
  4080c7:	lahf   
  4080c8:	xor    DWORD PTR es:[esi-0x53],0xffffffe0
  4080cd:	mov    ch,0xea
  4080cf:	scas   eax,DWORD PTR es:[edi]
  4080d0:	add    BYTE PTR [edi],dl
  4080d2:	in     eax,0x9c
  4080d4:	lods   al,BYTE PTR ds:[esi]
  4080d5:	or     ah,BYTE PTR [ebx+0x2b]
  4080d8:	mov    eax,ds:0x9b3f5591
  4080dd:	push   0xc43927a1
  4080e2:	jge    0x4080ae
  4080e4:	push   esp
  4080e5:	fisubr WORD PTR [ebx-0x4e5c13a9]
  4080eb:	mov    ah,0x25
  4080ed:	daa    
  4080ee:	dec    ebx
  4080ef:	add    DWORD PTR [ecx-0x15],esp
  4080f2:	retf   0x8b9a
  4080f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f6:	pop    es
  4080f7:	sub    bh,BYTE PTR [esi+0x58]
  4080fa:	sub    DWORD PTR [ebx],edx
  4080fc:	stos   DWORD PTR es:[edi],eax
  4080fd:	jns    0x4080d1
  4080ff:	adc    DWORD PTR [ebx],0x2c
  408102:	mov    ah,0x22
  408104:	push   ss
  408105:	xor    al,0x6f
  408107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408108:	cmp    esi,DWORD PTR [ebp+0x19ab7add]
  40810e:	mov    WORD PTR [ebx-0x38],fs
  408111:	add    eax,0x81450bd9
  408116:	sbb    al,0xfd
  408118:	(bad)  
  40811a:	fwait
  40811b:	jmp    0x179e:0x28543226
  408122:	pmovmskb esp,mm6
  408125:	in     al,dx
  408126:	push   edx
  408127:	sub    al,bl
  408129:	mov    al,BYTE PTR [esi+0x5eed4e4d]
  40812f:	cmc    
  408130:	std    
  408131:	fsubr  DWORD PTR [esi+0x2743123a]
  408137:	push   edi
  408138:	imul   edx,DWORD PTR [eax],0x67
  40813b:	mov    ch,0x4c
  40813d:	cmp    dl,dl
  40813f:	or     edi,eax
  408141:	push   esi
  408142:	add    BYTE PTR [ecx+ecx*2+0x5],dh
  408146:	mov    ds:0x79a56cf9,al
  40814b:	jbe    0x4081b1
  40814d:	gs xchg ebx,eax
  40814f:	std    
  408150:	jbe    0x4080fa
  408152:	add    DWORD PTR [esi+ebx*2+0x24],ecx
  408156:	repnz and eax,DWORD PTR [edx-0x10]
  40815a:	call   0xbf34:0xef442273
  408161:	mov    esi,0xb5becf29
  408166:	push   eax
  408167:	jmp    0xefc:0x40b2504b
  40816e:	shr    BYTE PTR [ebx+edi*8-0x65],cl
  408172:	repz pushf 
  408174:	iret   
  408175:	aad    0x52
  408177:	pop    esi
  408178:	in     al,dx
  408179:	lea    edx,[eax+0x3]
  40817c:	jnp    0x40813d
  40817e:	ret    0x9b7b
  408181:	push   0xd3a398b6
  408186:	xchg   BYTE PTR [ecx+0x2198a82b],bl
  40818c:	cwde   
  40818d:	ret    
  40818e:	or     BYTE PTR [esi+eax*8],bl
  408191:	sub    al,0x3e
  408193:	or     al,BYTE PTR [ecx-0x39e70be5]
  408199:	test   DWORD PTR [eax+0x42],eax
  40819c:	mov    ebx,DWORD PTR [eax-0x30cef644]
  4081a2:	sbb    esp,eax
  4081a4:	lods   al,BYTE PTR ds:[esi]
  4081a5:	inc    edx
  4081a6:	jle    0x4081d2
  4081a8:	xchg   edi,eax
  4081a9:	cs repz mov dl,0x75
  4081ad:	xchg   ebp,eax
  4081ae:	cmp    bl,BYTE PTR [edi+ecx*4+0x7e]
  4081b2:	lods   eax,DWORD PTR ds:[esi]
  4081b3:	fs sub dh,bl
  4081b6:	pop    ecx
  4081b7:	loope  0x40817f
  4081b9:	mov    esp,0x443a9757
  4081be:	mov    DWORD PTR [ecx-0x4ddff810],0x633c6abb
  4081c8:	jl     0x4081ca
  4081ca:	mov    ah,0x39
  4081cc:	xor    eax,0xaaf13018
  4081d1:	jb     0x40820c
  4081d3:	xor    al,0x5e
  4081d5:	jp     0x4081f7
  4081d7:	sbb    edx,eax
  4081d9:	test   al,0x59
  4081db:	xchg   esp,eax
  4081dc:	mov    al,bh
  4081de:	mov    ds:0xcdc8f3d5,al
  4081e3:	out    dx,al
  4081e4:	cmp    DWORD PTR [edi+0x365acdce],eax
  4081ea:	mov    dh,BYTE PTR ds:0x12dc9abb
  4081f0:	jge    0x4081e5
  4081f2:	mov    al,0x38
  4081f4:	inc    ecx
  4081f5:	sbb    esi,esi
  4081f7:	test   BYTE PTR [edi+0x2e],bh
  4081fa:	scas   al,BYTE PTR es:[edi]
  4081fb:	adc    al,0x18
  4081fd:	fdivr  QWORD PTR [ecx+0x43307416]
  408203:	in     eax,0xa9
  408205:	fistp  WORD PTR [eax]
  408207:	or     BYTE PTR [edx],ah
  408209:	ret    0xb99e
  40820c:	rcr    DWORD PTR [ebx-0x34],1
  40820f:	pop    ss
  408210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408212:	jbe    0x4081de
  408214:	aam    0x8e
  408216:	(bad)  
  408218:	inc    ecx
  408219:	mov    ss,esp
  40821b:	mov    dh,BYTE PTR [edx-0x8]
  40821e:	lds    eax,FWORD PTR ds:0xcd89114
  408224:	sbb    al,0x14
  408226:	and    dh,BYTE PTR [edi+0x1]
  408229:	stos   BYTE PTR es:[edi],al
  40822a:	mov    eax,cs
  40822c:	push   edx
  40822d:	out    0xe8,eax
  40822f:	fbld   TBYTE PTR [edx]
  408231:	idiv   esp
  408233:	dec    eax
  408234:	push   ds
  408235:	fcom   QWORD PTR [ebp-0x5b]
  408238:	fcom   QWORD PTR [edi-0x7a3ffae3]
  40823e:	dec    ebx
  40823f:	ror    DWORD PTR [ebx-0x65],cl
  408242:	in     al,dx
  408243:	mov    esi,0x1996dcd0
  408248:	push   ss
  408249:	inc    edi
  40824a:	dec    edi
  40824b:	cmp    ecx,edx
  40824d:	retf   
  40824e:	mov    bl,0xc0
  408250:	pop    edi
  408251:	sub    al,0x48
  408253:	js     0x40824e
  408255:	dec    ebx
  408256:	mov    dh,0x2c
  408258:	ins    BYTE PTR es:[edi],dx
  408259:	stos   DWORD PTR es:[edi],eax
  40825a:	test   DWORD PTR [edx+0xac1d385],esi
  408260:	imul   eax,DWORD PTR [eax],0xffffff9e
  408263:	inc    ebx
  408264:	cld    
  408265:	cs inc eax
  408267:	mov    cl,0x43
  408269:	mov    ecx,0x3c6b16e3
  40826e:	jg     0x40827a
  408270:	hlt    
  408271:	push   esp
  408272:	in     eax,dx
  408273:	adc    DWORD PTR [ecx],esp
  408275:	push   esi
  408276:	mov    bh,0xe0
  408278:	mov    ch,0xf0
  40827a:	pop    ds
  40827b:	cli    
  40827c:	cmp    al,0xa5
  40827e:	add    eax,0x9f88e7f2
  408283:	xchg   DWORD PTR [eax],edi
  408285:	mov    dh,BYTE PTR [edx]
  408287:	and    eax,0xc707de42
  40828c:	mov    esi,0x7beea042
  408291:	cmp    eax,0x979de87b
  408296:	jmp    0xaf98:0x8d85c32b
  40829d:	outs   dx,BYTE PTR ds:[esi]
  40829e:	jb     0x4082ce
  4082a0:	test   al,0xb8
  4082a2:	mov    ah,BYTE PTR [ebp-0x762df2f4]
  4082a8:	mov    ah,0xc9
  4082aa:	loopne 0x408318
  4082ac:	fsub   QWORD PTR ds:0x5d6537a5
  4082b2:	push   ecx
  4082b3:	sahf   
  4082b4:	mov    ebp,0x79f8abcf
  4082b9:	sbb    esi,DWORD PTR ds:[edi+0x3f]
  4082bd:	xor    bh,BYTE PTR ds:0x852b375c
  4082c3:	rcl    DWORD PTR [esi+0x26f6d790],1
  4082c9:	stos   BYTE PTR es:[edi],al
  4082ca:	xor    al,0x97
  4082cc:	xor    al,0xc6
  4082ce:	or     bl,dl
  4082d0:	ficom  DWORD PTR [ebx]
  4082d2:	sbb    edx,ecx
  4082d4:	push   ds
  4082d5:	fcmovbe st,st(7)
  4082d7:	sbb    esp,esp
  4082d9:	xchg   ebp,eax
  4082da:	pop    esp
  4082db:	sahf   
  4082dc:	jg     0x4082f6
  4082de:	xchg   edx,eax
  4082df:	xchg   ecx,eax
  4082e0:	jmp    0x196936e
  4082e5:	arpl   WORD PTR ds:0xc580e0cc,ax
  4082eb:	mov    ah,0xfc
  4082ed:	adc    eax,0x63b15522
  4082f2:	sub    eax,0xa93960
  4082f7:	inc    edx
  4082f8:	add    ah,BYTE PTR [edx+0x50]
  4082fb:	loop   0x4082f8
  4082fd:	xor    ecx,ecx
  4082ff:	push   es
  408300:	xchg   DWORD PTR [edi+0x6ca16a4c],eax
  408306:	ja     0x4082b1
  408308:	fld    QWORD PTR [edx]
  40830a:	and    cl,BYTE PTR [ebx-0x69]
  40830d:	fisubr WORD PTR [ebx]
  40830f:	cdq    
  408310:	dec    edi
  408311:	stc    
  408312:	imul   ebx,DWORD PTR [edi],0x52
  408315:	push   esp
  408316:	xlat   BYTE PTR ds:[ebx]
  408317:	in     al,dx
  408318:	pop    ecx
  408319:	mov    edi,0x3a007c45
  40831e:	fnstcw WORD PTR [edx+ebp*4]
  408321:	and    DWORD PTR [ebp+ebp*4+0x7232a97d],0x7e
  408329:	js     0x40832a
  40832b:	mov    esi,0x8111a3f8
  408330:	adc    eax,0xffffffa6
  408333:	ror    BYTE PTR [eax-0x33],0xbb
  408337:	inc    esi
  408338:	gs or  dl,0x32
  40833c:	mov    esi,0xa9709218
  408341:	jg     0x408384
  408343:	hlt    
  408344:	xchg   esi,eax
  408345:	fcmovnbe st,st(1)
  408347:	sahf   
  408348:	jge    0x40831c
  40834a:	adc    bh,dl
  40834c:	jns    0x408390
  40834e:	popa   
  40834f:	dec    ebx
  408350:	pop    ebx
  408351:	pop    ebp
  408352:	xor    al,0xc6
  408354:	std    
  408355:	out    dx,eax
  408356:	enter  0x73ba,0x5b
  40835a:	push   cs
  40835b:	mov    DWORD PTR [esi-0x71],0xa3bd920f
  408362:	or     BYTE PTR [ebp-0x23],dl
  408365:	pop    ds
  408366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408368:	addr16 mov edi,0x46f2e3e0
  40836e:	mov    ds:0x18caa5a7,al
  408373:	cmp    dh,cl
  408375:	lock mov eax,0x4b3ffbcd
  40837b:	push   edi
  40837c:	cmp    DWORD PTR [edx-0x312987fd],ebp
  408382:	mov    BYTE PTR [edi-0x474bba6d],ah
  408388:	rcl    bl,cl
  40838a:	push   ecx
  40838b:	pop    esp
  40838c:	xor    BYTE PTR [edi+edx*8],ch
  40838f:	add    BYTE PTR [edi+0x50],al
  408392:	xchg   eax,eax
  408394:	xlat   BYTE PTR ds:[ebx]
  408395:	mov    ebx,0x2483d0f0
  40839a:	mov    BYTE PTR [ebp-0x39678042],ch
  4083a0:	fdivr  st,st(7)
  4083a2:	mov    al,0x90
  4083a4:	in     al,0x4
  4083a6:	aas    
  4083a7:	repz arpl WORD PTR [eax],si
  4083aa:	and    DWORD PTR [eax+0x3f769695],esp
  4083b0:	out    0x27,al
  4083b2:	inc    eax
  4083b3:	adc    al,0x42
  4083b5:	and    eax,0x184a91ae
  4083ba:	fiadd  WORD PTR ds:0xe0f2311c
  4083c0:	pop    edi
  4083c1:	jp     0x40841a
  4083c3:	jbe    0x408443
  4083c5:	jb     0x4083e2
  4083c7:	mov    cl,0xc2
  4083c9:	mov    ebx,ebp
  4083cb:	pop    ebp
  4083cc:	push   ebx
  4083cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ce:	data16 fdivrp st(3),st
  4083d1:	lods   eax,DWORD PTR ds:[esi]
  4083d2:	cmp    dl,BYTE PTR [edi+0x34c9bc6e]
  4083d8:	lahf   
  4083d9:	add    ebp,esi
  4083db:	ret    0xeb2f
  4083de:	sub    eax,0x88249321
  4083e3:	mov    bh,0x2b
  4083e5:	fstp   QWORD PTR [eax+0x6f9740c2]
  4083eb:	mov    ds:0x4774ffaa,eax
  4083f0:	adc    ah,ah
  4083f2:	or     eax,ebx
  4083f4:	outs   dx,DWORD PTR ds:[esi]
  4083f5:	ret    0x9943
  4083f8:	pop    ebx
  4083f9:	mov    ?,WORD PTR [ebp-0x3e]
  4083fc:	jbe    0x40847c
  4083fe:	dec    edi
  4083ff:	(bad)  
  408400:	call   0x221f:0x9c439229
  408407:	out    dx,al
  408408:	jns    0x4083b5
  40840a:	test   ebx,edx
  40840c:	push   ds
  40840d:	int3   
  40840e:	loopne 0x4083f8
  408410:	jno    0x408404
  408412:	in     eax,dx
  408413:	je     0x408425
  408415:	push   cs
  408416:	enter  0xd1f0,0xb3
  40841a:	fcmovu st,st(4)
  40841c:	pop    ds
  40841d:	inc    edi
  40841e:	push   ecx
  40841f:	cld    
  408420:	mov    eax,0x2758f8d1
  408425:	cmp    eax,DWORD PTR [edx]
  408427:	inc    edi
  408428:	mov    esp,0x66a2d7d5
  40842d:	ret    
  40842e:	shr    BYTE PTR [ebx+0x2324f836],cl
  408434:	or     al,0xf7
  408436:	inc    edi
  408437:	pop    eax
  408438:	inc    ebp
  408439:	and    ebp,DWORD PTR [eax]
  40843b:	adc    eax,0x93d98f3f
  408440:	div    BYTE PTR [edx-0xb]
  408443:	mov    ah,0x4b
  408445:	inc    ecx
  408446:	dec    esi
  408447:	cmp    DWORD PTR [ecx+0x27],0xffffffd4
  40844b:	(bad)  [ebx-0x2a]
  40844e:	push   esi
  40844f:	data16 jns 0x408485
  408452:	cmp    eax,DWORD PTR [ecx+eiz*1-0x5d]
  408456:	or     eax,0xae2b717a
  40845b:	or     eax,0xec22eb6c
  408460:	loope  0x4084d8
  408462:	gs mov ebx,0x928c5d58
  408468:	and    eax,0x8f84213a
  40846d:	dec    ebp
  40846e:	stos   DWORD PTR es:[edi],eax
  40846f:	sub    al,0x8d
  408471:	sbb    BYTE PTR [edx-0x60],cl
  408474:	outs   dx,BYTE PTR ds:[esi]
  408475:	or     bh,BYTE PTR ss:[esp+edx*1]
  408479:	cmp    ebp,edx
  40847b:	xchg   esp,eax
  40847c:	push   esp
  40847d:	cmp    eax,0x28f53587
  408482:	(bad)
  408486:	aam    0x67
  408488:	scas   eax,DWORD PTR es:[edi]
  408489:	sbb    eax,0xfdb597cc
  40848e:	mov    bh,0xa3
  408490:	fcmove st,st(1)
  408492:	fist   DWORD PTR [edx]
  408494:	arpl   WORD PTR [bx+si+0x5f],bx
  408498:	adc    eax,0xd7051f95
  40849d:	push   DWORD PTR [ebp-0x44726bf8]
  4084a3:	icebp  
  4084a4:	iret   
  4084a5:	cld    
  4084a6:	(bad)  
  4084a7:	(bad)  
  4084a8:	sti    
  4084a9:	aaa    
  4084aa:	outs   dx,BYTE PTR ds:[esi]
  4084ab:	imul   DWORD PTR [esi]
  4084ad:	xor    ebp,DWORD PTR [edx]
  4084af:	icebp  
  4084b0:	add    BYTE PTR [edi-0x44d3fe86],al
  4084b6:	call   0xb2163120
  4084bb:	or     eax,0x1aef0f94
  4084c0:	mov    al,ds:0x3062b839
  4084c5:	mov    edi,0x90aab53b
  4084ca:	sbb    eax,DWORD PTR [ebp+0x6b]
  4084cd:	push   edi
  4084ce:	lea    ebx,[ebp-0x3d]
  4084d1:	test   al,0x73
  4084d3:	pop    ebx
  4084d4:	xor    al,0x55
  4084d6:	and    cl,BYTE PTR [esp+ebp*8]
  4084d9:	jmp    0xc81:0xb1b5ca83
  4084e0:	stos   DWORD PTR es:[edi],eax
  4084e1:	sub    dh,BYTE PTR [ebx-0x1a]
  4084e4:	icebp  
  4084e5:	jno    0x4084dd
  4084e7:	push   esi
  4084e8:	xor    BYTE PTR [esi-0x5f6b3a5],dl
  4084ee:	sub    BYTE PTR [eax],bh
  4084f0:	adc    ecx,DWORD PTR [ebx]
  4084f2:	pushf  
  4084f3:	xlat   BYTE PTR ds:[ebx]
  4084f4:	or     edi,eax
  4084f6:	dec    ebp
  4084f7:	push   0xffffffb0
  4084f9:	fadd   st(0),st
  4084fb:	in     al,dx
  4084fc:	in     eax,0xa9
  4084fe:	std    
  4084ff:	fimul  DWORD PTR [eax]
  408501:	(bad)  
  408502:	pushf  
  408503:	lock fld QWORD PTR [ecx+0x25]
  408507:	ss push 0xffffffa7
  40850a:	fadd   DWORD PTR [eax+0x29dd8fce]
  408510:	push   eax
  408511:	mov    eax,0xf291048f
  408516:	stos   BYTE PTR es:[edi],al
  408517:	(bad)  
  408518:	in     eax,0x68
  40851a:	outs   dx,BYTE PTR ds:[esi]
  40851b:	dec    ebp
  40851c:	cdq    
  40851d:	(bad)  
  40851f:	in     eax,0x8d
  408521:	pop    edi
  408522:	gs add esp,ebp
  408525:	rcr    BYTE PTR [esp+eiz*2+0x30],1
  408529:	mov    ebp,0x4c7a726a
  40852e:	shl    DWORD PTR [eax-0xb17620e],1
  408534:	int    0xcc
  408536:	or     DWORD PTR [edx+ebx*2-0x59],edx
  40853a:	push   ebp
  40853b:	fsubr  DWORD PTR [ecx+0x212f82fa]
  408541:	icebp  
  408542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408543:	push   cs
  408544:	and    al,BYTE PTR [edi-0x58]
  408547:	xchg   esi,eax
  408548:	imul   esi,ebx,0x7d2af73b
  40854e:	xchg   BYTE PTR [esi-0x58ff473b],ch
  408554:	ss jae 0x4085cd
  408557:	int    0xd4
  408559:	retf   0xa402
  40855c:	pop    edx
  40855d:	or     DWORD PTR [ebp+0x61b74374],ebx
  408563:	mov    ?,WORD PTR [eax]
  408565:	ror    bh,1
  408567:	xchg   esi,eax
  408568:	sub    dl,BYTE PTR [ebp-0x45233f14]
  40856e:	repnz enter 0xcd32,0x46
  408573:	mov    al,0xc1
  408575:	aaa    
  408576:	fwait
  408577:	sbb    edi,DWORD PTR [ebx]
  408579:	in     al,0x4e
  40857b:	fwait
  40857c:	outs   dx,DWORD PTR ds:[esi]
  40857d:	mov    ebx,0xbc971b1d
  408582:	inc    eax
  408583:	stos   BYTE PTR es:[edi],al
  408584:	es xchg ebx,eax
  408586:	cmp    BYTE PTR [edx+ebp*1+0x715a9b1f],dh
  40858d:	push   ebp
  40858e:	mov    ebx,0xf2c1a151
  408593:	sti    
  408594:	std    
  408595:	jg     0x408594
  408597:	fwait
  408598:	inc    eax
  408599:	sbb    DWORD PTR [edi],ebp
  40859b:	cld    
  40859c:	(bad)  
  40859d:	mov    al,ds:0x135a09d
  4085a2:	in     al,0x99
  4085a4:	jmp    0xdf3b:0xff5c073
  4085ab:	jmp    0x4085ac
  4085ad:	lds    ebx,FWORD PTR [ecx+ebx*2-0x7f]
  4085b1:	loope  0x40857e
  4085b3:	test   BYTE PTR [ecx+edi*4],bh
  4085b6:	mov    bl,0x42
  4085b8:	out    0xf6,al
  4085ba:	fsubrp st(0),st
  4085bc:	ret    
  4085bd:	add    DWORD PTR [eax-0x77ab682],ecx
  4085c3:	test   BYTE PTR [ebx],bl
  4085c5:	or     BYTE PTR [eax-0x690c9bc3],0x66
  4085cc:	shl    ebp,1
  4085ce:	jne    0x40855e
  4085d0:	outs   dx,BYTE PTR ds:[esi]
  4085d1:	inc    esi
  4085d2:	cs push ds
  4085d4:	mov    cs,WORD PTR [ebp-0x43]
  4085d7:	inc    ebp
  4085d8:	mov    ebp,0x10167e3
  4085dd:	imul   ebp,DWORD PTR [ecx],0x9e6c9b2c
  4085e3:	rcr    BYTE PTR [ebx-0x49],cl
  4085e6:	jmp    0x6ac:0x3563ecc0
  4085ed:	xchg   edi,eax
  4085ee:	mov    edx,0x194b1130
  4085f3:	xor    al,0x8b
  4085f5:	(bad)  
  4085f6:	jl     0x408651
  4085f8:	push   esi
  4085f9:	outs   dx,BYTE PTR ds:[esi]
  4085fa:	cmp    al,0xfd
  4085fc:	aas    
  4085fd:	mov    eax,esi
  4085ff:	outs   dx,DWORD PTR ds:[esi]
  408600:	fdiv   st(1),st
  408602:	mov    esi,0x875923cf
  408607:	sub    bl,bh
  408609:	jne    0x40862a
  40860b:	call   0x6feb:0x697e270f
  408612:	ja     0x4085da
  408614:	cmp    eax,0x4122805c
  408619:	pop    edx
  40861a:	or     WORD PTR [ebx-0x208e60e0],sp
  408621:	jnp    0x408699
  408623:	ja     0x4086a2
  408625:	dec    edi
  408626:	pop    ecx
  408627:	xor    DWORD PTR [ecx],ebp
  408629:	dec    ebp
  40862a:	lea    ebx,[edi]
  40862c:	xor    al,0x22
  40862e:	bnd jp 0x4086ad
  408631:	js     0x40860d
  408633:	clc    
  408634:	mov    WORD PTR [ebp+0x7d],ds
  408637:	cld    
  408638:	fidiv  DWORD PTR [edx-0x1e]
  40863b:	jecxz  0x408667
  40863d:	daa    
  40863e:	pushaw 
  408640:	jae    0x4085ee
  408642:	ficom  DWORD PTR [edx+0x59c61601]
  408648:	repnz xor bh,BYTE PTR [ecx-0x9]
  40864c:	retf   
  40864d:	mov    bh,0x67
  40864f:	setb   ch
  408652:	jecxz  0x4086ce
  408654:	dec    ecx
  408655:	or     al,ah
  408657:	dec    edi
  408658:	int3   
  408659:	push   cs
  40865a:	jbe    0x4086a2
  40865c:	int    0xb8
  40865e:	xor    eax,DWORD PTR [edx]
  408660:	and    DWORD PTR [edi+0xd591729],edi
  408666:	daa    
  408667:	call   0x7b6b:0x6a73fcca
  40866e:	loopne 0x40868a
  408670:	lods   al,BYTE PTR ds:[esi]
  408671:	loop   0x408654
  408673:	lea    esp,[edx-0x1eca5206]
  408679:	dec    eax
  40867a:	mov    ds,WORD PTR [esp+edi*1+0x72fe5777]
  408681:	xor    DWORD PTR [ebx+ebx*4-0x16],0x68
  408686:	out    dx,al
  408687:	cld    
  408688:	or     ebp,DWORD PTR [edi+0x17]
  40868b:	jae    0x408634
  40868d:	and    eax,0x831b2ee3
  408692:	dec    edi
  408693:	push   es
  408694:	cmp    edx,DWORD PTR [eax-0x3dc8c619]
  40869a:	cmp    DWORD PTR [edx],edi
  40869c:	mov    ds:0xa82509fe,eax
  4086a1:	mov    cl,0x83
  4086a3:	pop    eax
  4086a4:	mov    ch,0x29
  4086a6:	fild   WORD PTR [edi-0x22ccd3c3]
  4086ac:	fisttp DWORD PTR [esi+ecx*2+0x4]
  4086b0:	sti    
  4086b1:	cmp    al,0x6
  4086b3:	into   
  4086b4:	aas    
  4086b5:	pop    esi
  4086b6:	xchg   edx,eax
  4086b7:	mov    ds:0xf08e1fd2,eax
  4086bc:	sbb    bh,bh
  4086be:	push   es
  4086bf:	jmp    0x408653
  4086c1:	cmp    ch,BYTE PTR [eax-0x77]
  4086c4:	adc    eax,DWORD PTR [esi]
  4086c6:	sub    eax,0x819878ed
  4086cb:	dec    ebp
  4086cc:	inc    edi
  4086cd:	fild   DWORD PTR [edx-0x7f]
  4086d0:	fild   WORD PTR [ebx-0x1d]
  4086d3:	into   
  4086d4:	call   FWORD PTR [ebp+0x2a29184]
  4086da:	adc    edi,esi
  4086dc:	add    edx,DWORD PTR [eax-0x3f4c06c8]
  4086e2:	les    esi,FWORD PTR [ebx+0x6f]
  4086e5:	push   ecx
  4086e6:	gs sbb ch,BYTE PTR ss:[esi+0x3ea277bd]
  4086ee:	les    ebx,FWORD PTR [ecx-0x584c5303]
  4086f4:	fdivr  DWORD PTR [edi]
  4086f6:	bound  esi,QWORD PTR [ecx+0x6bdae639]
  4086fc:	mov    ds:0x4324fad7,eax
  408701:	and    dh,BYTE PTR [ebx-0x56]
  408704:	lds    edi,FWORD PTR [esp+edi*2]
  408707:	mov    ah,0xe6
  408709:	fmulp  st(4),st
  40870b:	pop    ebx
  40870c:	mov    bh,0xd4
  40870e:	jnp    0x408745
  408710:	and    DWORD PTR [edi-0x4c69fdb0],esi
  408716:	or     dl,BYTE PTR [ebx]
  408718:	sbb    ch,BYTE PTR [ebx]
  40871a:	adc    edx,esp
  40871c:	outs   dx,DWORD PTR ds:[esi]
  40871d:	jecxz  0x4086b0
  40871f:	xchg   ebx,eax
  408720:	popa   
  408721:	pop    ecx
  408722:	jg     0x408737
  408724:	push   eax
  408725:	adc    DWORD PTR [ebp-0x5d86bb64],0xffffffcf
  40872c:	jne    0x4086fe
  40872e:	jb     0x408725
  408730:	cdq    
  408731:	cmp    eax,0x681cd76d
  408736:	xchg   ecx,eax
  408737:	lods   al,BYTE PTR ds:[esi]
  408738:	push   0x9dd9a54f
  40873d:	cli    
  40873e:	xor    ecx,DWORD PTR [eax-0x6cebe225]
  408744:	push   ebp
  408745:	fsubr  QWORD PTR [edi]
  408747:	or     BYTE PTR [ebx+0x20d4edf1],0x13
  40874e:	add    eax,0xd4ee12cc
  408753:	pop    es
  408754:	push   ebp
  408755:	in     al,dx
  408756:	xor    DWORD PTR es:[edi],ebp
  408759:	jo     0x408726
  40875b:	les    eax,FWORD PTR [ebp+0x6a]
  40875e:	ror    al,1
  408760:	(bad)  
  408761:	xlat   BYTE PTR ds:[ebx]
  408762:	les    ecx,FWORD PTR ds:0xa526adbe
  408768:	and    al,0x4f
  40876a:	js     0x408716
  40876c:	stos   DWORD PTR es:[edi],eax
  40876d:	inc    edx
  40876e:	sub    DWORD PTR [ecx+0x6c78dee2],eax
  408774:	scas   al,BYTE PTR es:[edi]
  408775:	jae    0x408780
  408777:	lds    ebx,FWORD PTR [ebp+0x19f89ef5]
  40877d:	push   esi
  40877e:	mov    esi,0xec7b221b
  408783:	push   es
  408784:	mov    ds:0x1d9c2fa5,eax
  408789:	out    0x45,al
  40878b:	push   esi
  40878c:	dec    esi
  40878d:	mov    DWORD PTR [eax+0x5e],edx
  408790:	and    DWORD PTR [ecx-0x6f],edx
  408793:	retf   
  408794:	jnp    0x4087fd
  408796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408797:	cmp    dl,BYTE PTR [ebp-0x6f]
  40879a:	pop    eax
  40879b:	mov    eax,0x3c1e7316
  4087a0:	popa   
  4087a1:	pop    esi
  4087a2:	aaa    
  4087a3:	add    ecx,DWORD PTR [edi+eiz*1]
  4087a6:	xor    al,0x38
  4087a8:	adc    BYTE PTR [ecx-0x3a],cl
  4087ab:	int    0xce
  4087ad:	mov    ebx,0x98164be1
  4087b2:	popw   es
  4087b4:	mov    DWORD PTR [ecx],edi
  4087b6:	inc    edx
  4087b7:	shr    BYTE PTR [ebp-0x5359cac3],cl
  4087bd:	jae    0x408788
  4087bf:	mov    DWORD PTR [bp-0x12],0x480ed337
  4087c7:	cdq    
  4087c8:	add    BYTE PTR [edx+0x73],0xde
  4087cc:	xchg   edx,eax
  4087cd:	pusha  
  4087ce:	adc    bh,bh
  4087d0:	cmp    dl,0xd1
  4087d3:	dec    edi
  4087d4:	(bad)  
  4087d5:	pop    ebx
  4087d6:	shl    DWORD PTR [esi],1
  4087d8:	int    0x3c
  4087da:	inc    ebx
  4087db:	xor    eax,DWORD PTR ds:0x70219b68
  4087e1:	lea    ecx,[esi]
  4087e3:	xchg   esi,eax
  4087e4:	aam    0x59
  4087e6:	mov    bl,0x96
  4087e8:	mov    ecx,cs
  4087ea:	sub    ebx,ebp
  4087ec:	sbb    al,0xc3
  4087ee:	pop    esi
  4087ef:	or     dl,dl
  4087f1:	data16 adc BYTE PTR [edi+0x329d13c1],ah
  4087f8:	lods   al,BYTE PTR ds:[esi]
  4087f9:	fadd   st,st(3)
  4087fb:	pop    edx
  4087fc:	ins    DWORD PTR es:[edi],dx
  4087fd:	or     BYTE PTR [eax-0x5f],ch
  408800:	mov    esp,0x64233be4
  408805:	int    0x62
  408807:	clc    
  408808:	test   al,0xf4
  40880a:	test   BYTE PTR [eax],al
  40880c:	rcl    BYTE PTR [edx+0x31b1d8ae],cl
  408812:	inc    eax
  408813:	jecxz  0x408822
  408815:	stc    
  408816:	jle    0x40884e
  408818:	or     DWORD PTR [esi-0x4ad27bf1],edi
  40881e:	rcr    BYTE PTR [esi+0x5f6703a9],cl
  408824:	push   ss
  408825:	jle    0x4087f2
  408827:	movd   ebx,mm7
  40882a:	xor    DWORD PTR [esi+eax*4-0x7a8e7606],ecx
  408831:	cli    
  408832:	xor    ecx,DWORD PTR [esi-0x5a]
  408835:	fcom   DWORD PTR ds:0x209ea26e
  40883b:	lahf   
  40883c:	call   0xd4626d65
  408841:	sbb    eax,0x54839280
  408846:	mov    ebp,0x168ff289
  40884b:	push   ebp
  40884c:	or     al,0xac
  40884e:	mov    esp,0x5218d89d
  408853:	xchg   edx,eax
  408854:	or     DWORD PTR [edx-0x44e3b45b],ebx
  40885a:	mov    bl,BYTE PTR [eax-0x9]
  40885d:	popa   
  40885e:	outs   dx,BYTE PTR ds:[esi]
  40885f:	or     al,0x5c
  408862:	ss retf 0xe09d
  408866:	pop    eax
  408867:	jne    0x4088c7
  408869:	mov    bh,0x76
  40886b:	push   DWORD PTR [eax-0x35]
  40886e:	jne    0x408817
  408870:	inc    ebp
  408871:	dec    ebp
  408872:	sbb    ah,BYTE PTR [esi]
  408874:	fstp   QWORD PTR ds:0x6f510de1
  40887a:	and    eax,ecx
  40887c:	mov    ah,0xad
  40887e:	xchg   ah,ch
  408880:	push   ebx
  408881:	cmc    
  408882:	mov    bl,0x1d
  408884:	push   esp
  408885:	ret    
  408886:	mov    WORD PTR [ecx-0x6e],ds
  408889:	jecxz  0x40881c
  40888b:	pop    eax
  40888c:	mov    cl,0x82
  40888e:	mov    ebx,0xf9f1332c
  408893:	jnp    0x408857
  408895:	retf   0x65ba
  408898:	aad    0xdd
  40889a:	pop    esi
  40889b:	arpl   WORD PTR [edi],di
  40889d:	mov    eax,ds:0x3753923d
  4088a2:	sbb    edx,ecx
  4088a4:	inc    edi
  4088a5:	leave  
  4088a6:	sub    bl,dh
  4088a8:	push   es
  4088a9:	mov    bl,0xcc
  4088ab:	jle    0x4088d2
  4088ad:	test   BYTE PTR [ecx+0x74e680ca],cl
  4088b3:	sbb    ebx,DWORD PTR [ebx]
  4088b5:	mov    al,0x59
  4088b7:	mov    edi,DWORD PTR [edx+0x51]
  4088ba:	data16 out 0x24,al
  4088bd:	imul   ebp,esp,0xffffffce
  4088c0:	mov    esi,0x8fd4cd3
  4088c5:	inc    edx
  4088c6:	sbb    DWORD PTR [esi],edx
  4088c8:	jno    0x4088d0
  4088ca:	jae    0x40891d
  4088cc:	xchg   edi,eax
  4088cd:	loope  0x4088eb
  4088cf:	ins    BYTE PTR es:[edi],dx
  4088d0:	cmp    eax,0x80d7f87c
  4088d5:	(bad)  
  4088d6:	adc    bh,cl
  4088d8:	add    BYTE PTR [edx-0x5f],al
  4088db:	mov    cl,0xb7
  4088dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088de:	aam    0x17
  4088e0:	add    esi,edi
  4088e2:	test   esi,eax
  4088e4:	mov    al,ds:0xa7da458d
  4088e9:	shr    BYTE PTR [ecx-0x6f8a7895],0x37
  4088f0:	mov    esp,0x18335d0d
  4088f5:	pop    ecx
  4088f6:	mov    bh,0x84
  4088f8:	xor    al,0xb6
  4088fb:	cmp    eax,0xb0a3c705
  408900:	xchg   BYTE PTR [ecx+0x419092ca],ah
  408906:	pop    ecx
  408907:	sub    BYTE PTR [edi],al
  408909:	sub    BYTE PTR [ebx],bl
  40890b:	js     0x408931
  40890d:	rol    BYTE PTR [ebp+0x14265406],0x83
  408914:	test   al,0x84
  408916:	(bad)
  408919:	xor    BYTE PTR [ebx],dh
  40891b:	xchg   esp,eax
  40891c:	daa    
  40891d:	stc    
  40891e:	mov    esp,0x1c3c8152
  408923:	mov    bl,0xdc
  408925:	sub    BYTE PTR [esi+eiz*8],dl
  408928:	jp     0x408917
  40892a:	nop
  40892b:	test   BYTE PTR [eax-0x1a],al
  40892e:	cmp    eax,0x9a1b5692
  408933:	cld    
  408934:	dec    edi
  408935:	pcmpgtd mm7,QWORD PTR [edi-0x27]
  408939:	ret    0x4e7b
  40893c:	out    dx,al
  40893d:	sub    esi,DWORD PTR [ecx-0x258418d2]
  408943:	je     0x4089a4
  408945:	leave  
  408946:	pop    esp
  408947:	xor    BYTE PTR [ebx],dh
  408949:	sbb    esp,0xfffffff8
  40894c:	push   cs
  40894d:	bound  eax,QWORD PTR [ebx]
  40894f:	cmp    esi,DWORD PTR [esi+0x6176e7fe]
  408955:	mov    esi,0x3d27e562
  40895a:	mov    al,ds:0xe667a751
  40895f:	jb     0x408982
  408961:	jne    0x408993
  408963:	adc    ebx,DWORD PTR [ebx-0xb5add20]
  408969:	ins    DWORD PTR es:[edi],dx
  40896a:	mov    edx,0x7df1dd47
  40896f:	dec    ecx
  408970:	(bad)  [edi]
  408972:	je     0x4088fd
  408974:	inc    eax
  408975:	add    esp,DWORD PTR [ebx+0x4a]
  408978:	pop    edi
  408979:	add    al,0x3f
  40897b:	in     al,0xdd
  40897d:	pop    ebx
  40897e:	push   ebp
  40897f:	or     dh,BYTE PTR [ecx+0x3411f9e6]
  408985:	in     al,0x99
  408987:	mov    eax,0xb30487ca
  40898c:	out    dx,eax
  40898d:	or     bh,al
  40898f:	les    ebp,FWORD PTR [esi]
  408991:	lea    edi,[esp+ebp*4-0x7dcf251a]
  408998:	jo     0x408961
  40899a:	and    al,0xa4
  40899c:	test   al,0xbf
  40899e:	sbb    DWORD PTR [ebx+0x34650036],0x2c
  4089a5:	or     BYTE PTR [esi],ch
  4089a7:	repnz addr16 or al,0x8a
  4089ab:	sbb    BYTE PTR [edi+0x794c2894],ah
  4089b1:	cwde   
  4089b2:	out    dx,eax
  4089b3:	es ret 0xbf44
  4089b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b8:	(bad)  
  4089b9:	loope  0x4089b4
  4089bb:	outs   dx,BYTE PTR ds:[esi]
  4089bc:	ficomp DWORD PTR [edi]
  4089be:	cld    
  4089bf:	fwait
  4089c0:	and    al,0x7d
  4089c2:	cmp    cl,cl
  4089c4:	scas   al,BYTE PTR es:[edi]
  4089c5:	xor    DWORD PTR [ebx+0x7a],eax
  4089c8:	les    esp,FWORD PTR [edi]
  4089ca:	lods   eax,DWORD PTR ds:[esi]
  4089cb:	and    ah,BYTE PTR [ecx+0x11aa6aa2]
  4089d1:	ins    BYTE PTR es:[edi],dx
  4089d2:	mov    esp,DWORD PTR [edi-0x38]
  4089d5:	imul   bl
  4089d7:	in     eax,0x78
  4089d9:	pop    ds
  4089da:	mov    ch,0x9f
  4089dc:	adc    edi,DWORD PTR [edi-0x2]
  4089df:	leave  
  4089e0:	xor    al,0x50
  4089e2:	mov    edi,0x7835fdbf
  4089e7:	jns    0x408a67
  4089e9:	js     0x408992
  4089eb:	pop    ebx
  4089ec:	xchg   ecx,eax
  4089ed:	test   BYTE PTR [eax+0x2e],cl
  4089f0:	bound  edi,QWORD PTR [ebx-0x50]
  4089f3:	jb     0x408a3a
  4089f5:	jnp    0x408a38
  4089f7:	mov    bh,0xb5
  4089f9:	xchg   esp,eax
  4089fa:	or     ecx,ebx
  4089fc:	loopne 0x40898f
  4089fe:	sub    esp,esp
  408a00:	cdq    
  408a01:	sub    DWORD PTR [edi],ebx
  408a03:	dec    ebp
  408a04:	aam    0x29
  408a06:	dec    esp
  408a07:	cli    
  408a08:	push   esi
  408a09:	push   eax
  408a0a:	test   BYTE PTR [edi+0x1bc4ecc8],bh
  408a10:	(bad)  
  408a11:	out    dx,al
  408a12:	adc    cl,BYTE PTR [eax+0x4b45aedd]
  408a18:	dec    ecx
  408a19:	mov    esp,0xe36fc172
  408a1e:	add    bl,BYTE PTR [ebx]
  408a20:	repz xchg si,ax
  408a23:	xchg   DWORD PTR [edx],edi
  408a25:	aaa    
  408a26:	add    eax,0xec21c950
  408a2b:	or     al,0xd2
  408a2d:	sub    eax,0xe61b1026
  408a32:	(bad)  
  408a33:	mov    edx,0xf309654e
  408a38:	aad    0x3
  408a3a:	jbe    0x408a59
  408a3c:	or     eax,0x950b9bdc
  408a41:	sbb    al,0x1f
  408a43:	add    BYTE PTR [edi],0xe
  408a46:	adc    eax,0xd121745e
  408a4b:	jl     0x408a67
  408a4d:	push   esp
  408a4e:	add    esp,DWORD PTR [edx-0xd5e7a50]
  408a54:	push   edi
  408a55:	in     al,0x7f
  408a57:	dec    eax
  408a58:	sub    eax,0x64608839
  408a5d:	fcom   QWORD PTR [edx]
  408a60:	cmp    DWORD PTR [esi],esi
  408a62:	cdq    
  408a63:	xor    eax,0xe644a0e2
  408a68:	ins    BYTE PTR es:[edi],dx
  408a69:	sti    
  408a6a:	rcpps  xmm4,XMMWORD PTR [edi-0x24]
  408a6e:	sub    DWORD PTR [ebp+0x1c39a673],ebx
  408a74:	or     ah,BYTE PTR ds:0x414d8a2b
  408a7a:	cmp    DWORD PTR [eax-0x4b2db4c],edi
  408a80:	setl   BYTE PTR [edi-0x36fa5bc5]
  408a87:	popf   
  408a88:	cld    
  408a89:	fs push 0x58
  408a8c:	push   ss
  408a8d:	jp     0x408a42
  408a8f:	loopne 0x408a82
  408a91:	mov    ds:0xfd98d3c0,al
  408a96:	ret    
  408a97:	push   es
  408a98:	fadd   st,st(4)
  408a9a:	inc    ebp
  408a9b:	add    eax,0x16984874
  408aa0:	in     eax,0x7e
  408aa2:	pushf  
  408aa3:	sbb    BYTE PTR [eax+eiz*2+0x28e9904b],ah
  408aaa:	sub    eax,0xfb61924b
  408aaf:	(bad)  
  408ab0:	fcmovnb st,st(5)
  408ab2:	jbe    0x408b17
  408ab4:	dec    ebp
  408ab5:	inc    esi
  408ab6:	sbb    DWORD PTR [edx-0x80],ecx
  408ab9:	fcomp  DWORD PTR [ebx+ebx*2]
  408abc:	mov    eax,0xae2547d6
  408ac1:	mov    dl,0xc0
  408ac4:	xchg   esi,eax
  408ac5:	mov    al,ds:0x7f890de7
  408aca:	and    DWORD PTR [ebx+0x11],edx
  408acd:	sar    BYTE PTR [eax+0x0],cl
  408ad0:	sbb    esp,esi
  408ad2:	mov    eax,ds:0x220a8a43
  408ad7:	cld    
  408ad8:	rcr    BYTE PTR [edi],0x30
  408adb:	mov    WORD PTR [edi-0x40],fs
  408ade:	in     al,dx
  408adf:	push   ss
  408ae0:	push   0x501ef413
  408ae5:	mov    dh,ch
  408ae7:	ret    0x2f72
  408aea:	stc    
  408aeb:	mov    WORD PTR [ecx],?
  408aed:	jecxz  0x408af1
  408aef:	pop    esp
  408af0:	and    al,BYTE PTR [edx+ecx*2]
  408af3:	inc    esi
  408af4:	push   0x98b41b7d
  408af9:	adc    DWORD PTR [ebx],ebx
  408afb:	pop    eax
  408afc:	add    eax,0x3c6023cd
  408b01:	add    al,bh
  408b03:	jmp    0x408a8d
  408b05:	or     eax,0x5d73808f
  408b0a:	(bad)  
  408b0b:	adc    cl,BYTE PTR [eax+0x43]
  408b0e:	and    BYTE PTR es:[ecx+0x47579d9f],bl
  408b15:	jl     0x408b05
  408b17:	and    eax,0x219e1bb8
  408b1c:	mov    edi,0x60adb6ae
  408b21:	dec    ebp
  408b22:	stos   DWORD PTR es:[edi],eax
  408b23:	pop    eax
  408b24:	je     0x408b42
  408b26:	leave  
  408b27:	retf   
  408b28:	mov    ah,BYTE PTR [eax+0x63]
  408b2b:	and    BYTE PTR [ecx],cl
  408b2d:	fcomp  QWORD PTR [eax+0x7099e3d8]
  408b33:	mov    ebx,0xb46cbf78
  408b38:	repz xor edx,DWORD PTR [ebp+0x4d]
  408b3c:	inc    ebx
  408b3d:	mov    eax,0xc559c24f
  408b42:	pop    ss
  408b43:	mov    ebp,0x75116e3
  408b48:	(bad)  
  408b49:	loopne 0x408b7b
  408b4b:	pop    ds
  408b4c:	pop    ecx
  408b4d:	xlat   BYTE PTR ds:[ebx]
  408b4e:	in     al,dx
  408b4f:	popa   
  408b50:	add    cl,BYTE PTR [edi]
  408b52:	push   eax
  408b53:	and    eax,0xe1a846cc
  408b58:	sub    al,0x3e
  408b5a:	pop    DWORD PTR [bp+0x6a01]
  408b5f:	test   BYTE PTR [esi],ch
  408b61:	xlat   BYTE PTR ds:[bx]
  408b63:	pop    es
  408b64:	cli    
  408b65:	lock sbb al,0x6
  408b68:	in     al,dx
  408b69:	iret   
  408b6a:	mov    bl,0x42
  408b6c:	push   ds
  408b6d:	and    DWORD PTR [ecx+0x43],0xd5c820ce
  408b74:	ss aaa 
  408b76:	js     0x408bc7
  408b78:	popf   
  408b79:	pop    edx
  408b7a:	test   bl,dh
  408b7c:	ror    DWORD PTR [edx-0x6b],1
  408b7f:	les    esi,FWORD PTR [esp+edx*4]
  408b82:	cli    
  408b83:	test   eax,0xd86b94b2
  408b88:	xor    BYTE PTR [eax+0x53],ah
  408b8b:	imul   esi,DWORD PTR [esi+ebx*2-0x40],0xac0f634b
  408b93:	inc    ecx
  408b94:	stos   BYTE PTR es:[edi],al
  408b95:	das    
  408b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b97:	lahf   
  408b98:	jb     0x408be1
  408b9a:	jp     0x408bef
  408b9c:	mov    edi,0x95cc5659
  408ba1:	outs   dx,DWORD PTR ds:[esi]
  408ba2:	sbb    al,BYTE PTR [ecx+0x66]
  408ba5:	ret    
  408ba6:	adc    BYTE PTR [eax],dl
  408ba8:	mov    bh,0x32
  408baa:	imul   ebx,DWORD PTR [ecx-0x32],0x494fdcbf
  408bb1:	xor    ah,dl
  408bb3:	xchg   esp,eax
  408bb4:	sbb    BYTE PTR ds:0xa7f84ffe,bh
  408bba:	and    eax,0x767facc2
  408bbf:	ror    BYTE PTR [ebx+0x39],1
  408bc2:	call   0xb3faa61f
  408bc7:	mov    ds:0x758bf3d,eax
  408bcc:	enter  0xb7df,0xdf
  408bd0:	xchg   dl,dh
  408bd2:	jo     0x408b58
  408bd4:	shr    dh,1
  408bd6:	mov    BYTE PTR [ecx-0x2a678f1e],dh
  408bdc:	lahf   
  408bdd:	out    0x36,al
  408bdf:	(bad)  
  408be0:	pop    eax
  408be1:	ret    0x843e
  408be4:	mov    DWORD PTR [ebx+eiz*4+0x3225e622],0xbbbc7cd3
  408bef:	adc    dl,BYTE PTR [edi]
  408bf1:	sub    dl,BYTE PTR ds:0x572bc18
  408bf7:	or     eax,0xb1a2fc15
  408bfc:	cmp    bl,dh
  408bfe:	add    DWORD PTR [edi],eax
  408c00:	std    
  408c01:	xchg   ebp,eax
  408c02:	js     0x408c73
  408c04:	xor    bl,BYTE PTR [edx-0x62]
  408c07:	jb     0x408c78
  408c09:	jb     0xd57b3ca7
  408c0f:	pop    esi
  408c10:	lods   al,BYTE PTR ds:[esi]
  408c11:	cs jecxz 0x408bd7
  408c14:	arpl   WORD PTR [ebx],sp
  408c16:	aas    
  408c17:	add    ch,dh
  408c19:	dec    eax
  408c1a:	call   0x8bb79f37
  408c1f:	mov    eax,ds:0x79012efd
  408c24:	rcl    DWORD PTR [ebx+edi*4],1
  408c27:	hlt    
  408c28:	scas   eax,DWORD PTR es:[edi]
  408c29:	montmul (bad)
  408c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2b:	ret    0x4bc2
  408c2e:	test   ebp,esi
  408c30:	mov    dh,0x6a
  408c32:	aas    
  408c33:	stc    
  408c34:	pop    edx
  408c35:	mov    ah,0xa0
  408c37:	adc    DWORD PTR [eax],ecx
  408c39:	ds adc bl,BYTE PTR es:[eax+ebx*1+0x51fc16b9]
  408c42:	pop    edx
  408c43:	cmc    
  408c44:	call   0x3418:0x72868c23
  408c4b:	jl     0x408c13
  408c4d:	pop    ecx
  408c4e:	aaa    
  408c4f:	test   eax,0x7be07c19
  408c54:	cld    
  408c55:	cwde   
  408c56:	xor    al,0x29
  408c58:	sar    BYTE PTR ds:0x670e4d76,cl
  408c5e:	adc    DWORD PTR [esi-0x6d],edx
  408c61:	mov    al,0x7a
  408c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c64:	jo     0x408c67
  408c66:	jle    0x408c8f
  408c68:	mov    ebp,0xb706bed7
  408c6d:	js     0x408c9c
  408c6f:	mov    ebp,0x93c3ebc4
  408c74:	add    al,0x72
  408c76:	and    bh,dh
  408c78:	xchg   ebx,eax
  408c79:	pushf  
  408c7a:	xchg   BYTE PTR [eax],dh
  408c7c:	xor    BYTE PTR [edi+edi*2],cl
  408c7f:	cwde   
  408c80:	aaa    
  408c81:	inc    ebx
  408c82:	dec    edi
  408c83:	push   ecx
  408c84:	pop    esi
  408c85:	mov    ebp,DWORD PTR [esi+0x27]
  408c88:	mov    eax,0x27d30bce
  408c8d:	stos   BYTE PTR es:[edi],al
  408c8e:	in     eax,dx
  408c8f:	dec    DWORD PTR [esi+0x12]
  408c92:	push   esi
  408c93:	mov    bh,0x47
  408c95:	fidiv  DWORD PTR [ebx]
  408c97:	cdq    
  408c98:	rcr    esp,0x18
  408c9b:	mov    dh,0x6e
  408c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c9e:	mov    ah,BYTE PTR [edi-0x42058634]
  408ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca5:	push   ds
  408ca6:	ret    
  408ca7:	xchg   BYTE PTR [ecx-0x1169cce3],dh
  408cad:	js     0x408c9d
  408caf:	stc    
  408cb0:	jb     0x408cfe
  408cb2:	sbb    edx,DWORD PTR [esi-0x50]
  408cb5:	fwait
  408cb6:	in     eax,0xa4
  408cb8:	xchg   ecx,eax
  408cb9:	pusha  
  408cba:	aaa    
  408cbb:	pop    ss
  408cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cbd:	repnz das 
  408cbf:	fsubr  DWORD PTR [ebx-0x2d]
  408cc2:	out    dx,eax
  408cc3:	out    0x34,al
  408cc5:	jecxz  0x408cc9
  408cc7:	ret    
  408cc8:	dec    ebp
  408cc9:	cmp    ebp,DWORD PTR [eax+ecx*2-0x29]
  408ccd:	push   cs
  408cce:	in     al,0x9a
  408cd0:	imul   bx,WORD PTR [ebx-0x83dcf21],0xef79
  408cd9:	out    dx,eax
  408cda:	or     ecx,DWORD PTR [ecx-0x6]
  408cdd:	fist   WORD PTR [edx-0x3c5b6abf]
  408ce3:	lods   al,BYTE PTR ds:[esi]
  408ce4:	test   al,0x2
  408ce6:	mov    ds:0x95483c95,al
  408ceb:	test   DWORD PTR [eax+0x3b],esp
  408cee:	jg     0x408cdd
  408cf0:	push   0xffffff87
  408cf2:	mov    ds:0x57b9edba,eax
  408cf7:	leave  
  408cf8:	add    edi,DWORD PTR [esi+eiz*4]
  408cfb:	sub    cl,ch
  408cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cfe:	aas    
  408cff:	les    ecx,FWORD PTR ds:0x25733e09
  408d05:	shl    al,0xc5
  408d08:	mov    esi,ds
  408d0a:	test   BYTE PTR ds:0xcd327784,ah
  408d10:	or     bl,BYTE PTR [edx-0x42]
  408d13:	inc    ebp
  408d14:	test   al,0x5b
  408d16:	outs   dx,BYTE PTR ds:[esi]
  408d17:	jo     0x408d5a
  408d19:	adc    al,0x11
  408d1b:	and    eax,0xa3809f10
  408d20:	mov    al,ds:0xc0091dfb
  408d25:	test   al,0x69
  408d27:	out    dx,eax
  408d28:	imul   edi,DWORD PTR [edx-0x3b],0x3b0cb6eb
  408d2f:	loop   0x408d0e
  408d31:	popf   
  408d32:	dec    ebp
  408d33:	inc    esp
  408d34:	bsf    ebp,DWORD PTR [ebp+0x4e75521c]
  408d3b:	or     eax,0x7c6d6004
  408d40:	jne    0x408cd6
  408d42:	sub    ecx,ebx
  408d44:	cmc    
  408d45:	mov    al,0x3
  408d47:	add    BYTE PTR [ecx],al
  408d49:	repnz mov esi,0xdc612580
  408d4f:	jle    0x408dcc
  408d51:	push   edx
  408d52:	enter  0x29be,0x37
  408d56:	repnz cwde 
  408d58:	jge    0x408dc2
  408d5a:	add    BYTE PTR [ecx+0x54b1c591],dl
  408d60:	jne    0x408dd5
  408d62:	jns    0x408db5
  408d64:	std    
  408d65:	xchg   BYTE PTR [edx+0x6642704f],bl
  408d6b:	ja     0x408d7e
  408d6d:	cmp    cl,BYTE PTR [edi]
  408d6f:	adc    BYTE PTR [edi-0x5e],bh
  408d72:	stos   DWORD PTR es:[edi],eax
  408d73:	jp     0x408d8b
  408d75:	loop   0x408d0e
  408d77:	xchg   esp,eax
  408d78:	mov    ds:0x1942ed4c,eax
  408d7d:	pop    edx
  408d7e:	mov    al,0x5e
  408d80:	(bad)  
  408d81:	gs sti 
  408d83:	inc    edi
  408d84:	inc    ebp
  408d85:	aad    0xbd
  408d87:	cmp    eax,0x88c954a4
  408d8c:	add    cl,BYTE PTR [esi-0x48]
  408d8f:	mov    gs,WORD PTR [eax]
  408d91:	mov    eax,ds:0xee9cafa4
  408d96:	push   ebp
  408d97:	sbb    eax,0xba7e3a62
  408d9c:	jbe    0x408d1e
  408d9e:	dec    ebx
  408d9f:	test   eax,0x536dbd99
  408da4:	dec    ebp
  408da5:	xchg   ebp,eax
  408da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408da8:	(bad)  
  408da9:	xor    eax,esi
  408dab:	mov    cl,BYTE PTR [ecx]
  408dad:	dec    ecx
  408dae:	adc    al,dl
  408db0:	(bad)  
  408db2:	retf   0x6feb
  408db5:	jae    0x408ddf
  408db7:	int    0x47
  408db9:	add    dh,bh
  408dbb:	dec    ebp
  408dbc:	popa   
  408dbd:	(bad)  
  408dbe:	pop    edx
  408dbf:	lods   eax,DWORD PTR ds:[esi]
  408dc0:	pop    es
  408dc1:	imul   edi,ebx,0xf
  408dc4:	dec    edi
  408dc5:	and    al,0xc2
  408dc7:	leave  
  408dc8:	push   edi
  408dc9:	dec    esi
  408dca:	or     DWORD PTR [ecx+0x12],eax
  408dcd:	xchg   esi,eax
  408dce:	call   0xbafa:0x6f497e78
  408dd5:	mov    ebp,0xf13bffc8
  408dda:	scas   eax,DWORD PTR es:[edi]
  408ddb:	sbb    BYTE PTR [ebp+0x40ba803a],cl
  408de1:	mov    al,ds:0xaca25560
  408de6:	add    BYTE PTR [ecx+0x33],0x5a
  408dea:	enter  0x6493,0x85
  408dee:	mov    ecx,0xb86e9699
  408df3:	mov    bl,0xb9
  408df5:	idiv   BYTE PTR es:[edi]
  408df8:	push   es
  408df9:	fadd   st,st(5)
  408dfb:	out    dx,eax
  408dfc:	mov    esi,DWORD PTR [ebx-0x5e]
  408dff:	jmp    0x2e91:0x7432b350
  408e06:	rcl    esi,0xb9
  408e09:	sub    cl,BYTE PTR [eax]
  408e0b:	dec    ecx
  408e0c:	out    dx,eax
  408e0d:	pop    esp
  408e0e:	shl    BYTE PTR [ecx+0x3902530],cl
  408e14:	mov    ecx,0x5b7c621b
  408e19:	stos   BYTE PTR es:[edi],al
  408e1a:	mov    edx,0x8ada20da
  408e1f:	mov    BYTE PTR [ebx+ebx*4-0x2ce6f8ae],ch
  408e26:	xor    DWORD PTR [edi],edi
  408e28:	scas   al,BYTE PTR es:[edi]
  408e29:	lods   eax,DWORD PTR ds:[esi]
  408e2a:	sub    al,0xae
  408e2c:	dec    ebx
  408e2d:	clc    
  408e2e:	cld    
  408e2f:	rol    BYTE PTR [esi-0x1e43e23],cl
  408e35:	and    DWORD PTR [esi-0x7b1134f2],esp
  408e3b:	ins    BYTE PTR es:[edi],dx
  408e3c:	cmp    dl,BYTE PTR [eax]
  408e3e:	dec    edi
  408e3f:	push   esp
  408e40:	push   ecx
  408e41:	jmp    0x408ea4
  408e43:	rol    dl,0x6c
  408e46:	add    eax,0xc2a198c2
  408e4b:	retf   
  408e4c:	xchg   DWORD PTR ds:0x3a9a3bdf,ebx
  408e52:	cs mov ch,0x90
  408e55:	shl    DWORD PTR [ebx],0x2d
  408e58:	mov    al,ds:0x508b657f
  408e5d:	ror    bh,cl
  408e5f:	xor    BYTE PTR [ebp-0x2d],ch
  408e62:	cmp    al,0x42
  408e64:	es iret 
  408e66:	and    eax,0x3c08711a
  408e6b:	sbb    DWORD PTR [esi+0x18],edi
  408e6e:	mov    al,ds:0xe81782e1
  408e73:	pop    es
  408e74:	int    0x99
  408e76:	cmp    DWORD PTR [edx],edx
  408e78:	clc    
  408e79:	dec    ebp
  408e7a:	adc    eax,0x9d07dcea
  408e7f:	fistp  QWORD PTR [esi+0x15]
  408e82:	dec    ecx
  408e83:	xor    BYTE PTR [esi],0x3
  408e86:	clc    
  408e87:	es pop esp
  408e89:	mov    DWORD PTR [ebp-0x64],esp
  408e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e8d:	adc    al,0xc1
  408e8f:	test   eax,0xf56a87d0
  408e94:	or     ebp,DWORD PTR [eax-0x709c1ddf]
  408e9a:	pop    eax
  408e9b:	xchg   DWORD PTR [edi+eiz*4+0xb],edi
  408e9f:	pop    ecx
  408ea0:	push   esi
  408ea1:	ficomp WORD PTR ds:0xcd6bdc8e
  408ea7:	nop
  408ea8:	add    DWORD PTR [eax+0x3d],0xda17f6df
  408eaf:	stos   BYTE PTR es:[edi],al
  408eb0:	into   
  408eb1:	xchg   esi,eax
  408eb2:	cmp    eax,0x9c68a517
  408eb7:	jge    0x408f0f
  408eb9:	ss sbb ebx,eax
  408ebc:	xchg   ebx,eax
  408ebd:	test   DWORD PTR [esp+0xe],edi
  408ec1:	mov    esp,0x99072822
  408ec6:	cmp    eax,0x399b634a
  408ecb:	(bad)  
  408ecc:	daa    
  408ecd:	mov    al,ds:0x2ce7688
  408ed2:	sahf   
  408ed3:	fmul   DWORD PTR [edi-0x275b844b]
  408ed9:	shl    BYTE PTR [ebx-0x7a12fc90],1
  408edf:	outs   dx,BYTE PTR ds:[esi]
  408ee0:	dec    ebx
  408ee1:	ret    
  408ee2:	sbb    dl,BYTE PTR [ecx-0x37512c73]
  408ee8:	xor    ah,BYTE PTR [ecx]
  408eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eeb:	sti    
  408eec:	cs inc ebp
  408eee:	adc    BYTE PTR ds:0xad442150,al
  408ef4:	mov    ecx,0x8d5753fa
  408ef9:	mov    eax,ds:0x806e1c6b
  408efe:	cmp    edi,DWORD PTR [ecx-0x51d44f04]
  408f04:	xor    BYTE PTR [eax],0x3
  408f07:	(bad)  
  408f08:	popf   
  408f09:	mov    esi,0xf12e3606
  408f0e:	mov    dh,0x1e
  408f10:	xchg   ecx,eax
  408f11:	mov    bh,0xb9
  408f13:	adc    al,0xb8
  408f15:	aam    0x3a
  408f17:	ja     0x408f25
  408f19:	and    eax,0xcea73571
  408f1e:	mov    ah,0x58
  408f20:	xchg   edx,eax
  408f21:	stc    
  408f22:	call   0xa062ec90
  408f27:	stos   DWORD PTR es:[edi],eax
  408f28:	bound  edx,QWORD PTR ds:0x50783d8f
  408f2e:	nop
  408f2f:	mov    BYTE PTR [esi],cl
  408f31:	test   BYTE PTR [ebx],dl
  408f33:	sbb    al,0xfa
  408f35:	je     0x408ef7
  408f37:	push   esp
  408f38:	imul   edi,DWORD PTR [ebp+0x63a6c517],0xffffffae
  408f3f:	mov    bh,0x19
  408f41:	ins    BYTE PTR es:[edi],dx
  408f42:	pop    es
  408f43:	in     al,0x79
  408f45:	scas   al,BYTE PTR es:[edi]
  408f46:	(bad)  
  408f47:	jns    0x408fc6
  408f49:	and    eax,0xab5d021a
  408f4e:	jp     0x408f21
  408f50:	sbb    bl,BYTE PTR [edi-0x2d3fe1f2]
  408f56:	cmp    ebp,DWORD PTR [ebp-0x34c98480]
  408f5c:	pop    ebx
  408f5d:	pop    esi
  408f5e:	push   edx
  408f5f:	(bad)  
  408f60:	jg     0x408f74
  408f62:	gs dec edx
  408f64:	mov    bh,0x2c
  408f66:	cmp    esp,eax
  408f68:	leave  
  408f69:	dec    edx
  408f6a:	jnp    0x408f62
  408f6c:	fcomp  DWORD PTR [ebx]
  408f6e:	cwde   
  408f6f:	adc    al,0xfe
  408f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f72:	sub    al,0x7a
  408f74:	xchg   esi,eax
  408f75:	loopne 0x408f0f
  408f77:	sub    bh,ah
  408f79:	leave  
  408f7a:	jg     0x408f11
  408f7c:	loope  0x408fb2
  408f7e:	test   eax,0xa8f06b1b
  408f83:	inc    ebp
  408f84:	add    DWORD PTR [edx],esp
  408f86:	xor    esp,DWORD PTR [ecx]
  408f88:	cdq    
  408f89:	imul   eax,DWORD PTR [ebx],0x14
  408f8c:	push   0xa7f16d1b
  408f91:	aad    0x10
  408f93:	inc    DWORD PTR [edx-0x74]
  408f96:	pop    eax
  408f97:	pop    eax
  408f98:	pushf  
  408f99:	mov    ebx,DWORD PTR [edx]
  408f9b:	jl     0x409017
  408f9d:	bound  ecx,QWORD PTR [edi+ecx*2-0x76]
  408fa1:	aam    0x10
  408fa3:	(bad)  
  408fa4:	out    dx,eax
  408fa5:	lods   eax,DWORD PTR ds:[esi]
  408fa6:	xchg   ebx,eax
  408fa7:	cmc    
  408fa8:	push   ecx
  408fa9:	xchg   ebp,eax
  408faa:	cs jmp 0x408f81
  408fad:	outs   dx,DWORD PTR ds:[esi]
  408fae:	mov    al,ds:0xb0ecee9a
  408fb3:	adc    BYTE PTR [ecx+eiz*4],bh
  408fb6:	jp     0x408f38
  408fb8:	ret    
  408fb9:	or     al,0x82
  408fbb:	xor    BYTE PTR [ebp+0x7a25609d],al
  408fc1:	adc    esi,DWORD PTR [esi+0x17]
  408fc4:	jb     0x408fbf
  408fc6:	add    eax,0x7cccffa1
  408fcb:	int    0xa2
  408fcd:	or     al,ah
  408fcf:	xchg   edx,esp
  408fd1:	mov    dh,0x86
  408fd3:	pop    edx
  408fd4:	sbb    esp,DWORD PTR [edi]
  408fd6:	and    BYTE PTR [edx-0x77],al
  408fd9:	jnp    0x408f93
  408fdb:	lahf   
  408fdc:	dec    esp
  408fdd:	pop    ecx
  408fde:	xchg   edx,eax
  408fdf:	lods   al,BYTE PTR ds:[esi]
  408fe0:	xlat   BYTE PTR ds:[ebx]
  408fe1:	adc    BYTE PTR [ebx+esi*8],ch
  408fe4:	inc    esi
  408fe5:	shl    BYTE PTR [ecx+0x24],0x47
  408fe9:	fadd   DWORD PTR [esi]
  408feb:	std    
  408fec:	ss push edx
  408fee:	and    al,BYTE PTR [ecx+0x5ecb348]
  408ff4:	leave  
  408ff5:	lahf   
  408ff6:	push   edx
  408ff7:	stos   BYTE PTR es:[edi],al
  408ff8:	xor    bl,cl
  408ffa:	enter  0x1607,0x2f
  408ffe:	fcomp  QWORD PTR [edx]
  409000:	test   bl,cl
  409002:	pop    ss
  409003:	bound  edx,QWORD PTR [edi+0x1c]
  409006:	xchg   ecx,eax
  409007:	push   cs
  409008:	push   esi
  409009:	(bad)  
  40900a:	shr    al,cl
  40900c:	xchg   esi,eax
  40900d:	stc    
  40900e:	nop
  40900f:	add    ebx,DWORD PTR [eax]
  409011:	xchg   BYTE PTR [ebx+eax*2],ah
  409014:	mov    ecx,0xbf091838
  409019:	adc    BYTE PTR [ebp-0x66],dl
  40901c:	clc    
  40901d:	adc    BYTE PTR [esi+0x308ef9b0],0x4c
  409024:	xor    BYTE PTR [edx],dl
  409026:	add    ebp,DWORD PTR [esi]
  409028:	inc    edx
  409029:	mov    ebx,0x8d82b6db
  40902e:	push   esi
  40902f:	clc    
  409030:	mov    dl,0x48
  409032:	dec    ebx
  409033:	jp     0x408ffd
  409035:	test   BYTE PTR [esi],cl
  409037:	aad    0xd8
  409039:	ja     0x409044
  40903b:	aas    
  40903c:	push   ds
  40903d:	sbb    DWORD PTR [eax],edx
  40903f:	je     0x408ff8
  409041:	jno    0x409082
  409043:	push   es
  409044:	xor    edi,DWORD PTR [edi]
  409046:	out    0x5a,al
  409048:	inc    BYTE PTR [eax-0x21]
  40904b:	stos   DWORD PTR es:[edi],eax
  40904c:	fild   WORD PTR [ecx-0x450b7034]
  409052:	jnp    0x409048
  409054:	ret    
  409055:	call   0x11a8cc26
  40905a:	retf   
  40905b:	xor    bl,cl
  40905d:	aas    
  40905e:	cmc    
  40905f:	scas   eax,DWORD PTR es:[edi]
  409060:	fmul   QWORD PTR [eax+0x45]
  409063:	inc    eax
  409064:	(bad)  
  409065:	int3   
  409066:	ss call 0x56c2d3f1
  40906c:	cmp    bl,BYTE PTR ds:0x3a4d6c56
  409072:	cmp    ecx,ebp
  409074:	dec    ecx
  409075:	vpunpckhbw xmm6,xmm5,XMMWORD PTR [edi-0x2c]
  40907a:	mov    ah,0x4c
  40907c:	neg    DWORD PTR [edx-0x52b74b62]
  409082:	scas   eax,DWORD PTR es:[edi]
  409083:	push   ecx
  409084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409085:	mov    edx,0x868f1c50
  40908a:	es hlt 
  40908c:	daa    
  40908d:	mov    eax,ds:0xe42ee08c
  409092:	popa   
  409093:	or     DWORD PTR [ebp-0x3caa83f8],0xfffffffd
  40909a:	or     eax,0xc1cf5a4c
  40909f:	inc    esp
  4090a0:	ins    BYTE PTR es:[edi],dx
  4090a1:	jbe    0x409099
  4090a3:	sti    
  4090a4:	mov    ds:0x8b97dd89,al
  4090a9:	pop    ebx
  4090aa:	jmp    0x733b0cdc
  4090af:	(bad)  
  4090b0:	jmp    0x40908a
  4090b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b3:	out    0x5e,al
  4090b5:	mov    ecx,0x7db93bf4
  4090ba:	xchg   edi,eax
  4090bb:	cdq    
  4090bc:	mov    al,ds:0x2f6b1242
  4090c1:	jp     0x4090e1
  4090c3:	fnstenv [eax+esi*8+0x11]
  4090c7:	stos   DWORD PTR es:[edi],eax
  4090c8:	sub    dh,BYTE PTR [eax]
  4090ca:	aad    0xb6
  4090cc:	mov    DWORD PTR [ebx-0x65],edx
  4090cf:	push   cs
  4090d0:	out    dx,eax
  4090d1:	and    al,0x82
  4090d3:	mov    al,BYTE PTR [esi+0x77]
  4090d6:	dec    ebx
  4090d7:	xchg   ecx,eax
  4090d8:	xchg   ecx,eax
  4090d9:	bound  eax,QWORD PTR [edi]
  4090db:	retf   0x205c
  4090de:	ret    
  4090df:	cmp    BYTE PTR [edx+0x6c20948a],bh
  4090e5:	mov    al,ds:0xe59a27cf
  4090ea:	xchg   DWORD PTR [ebx-0x73bca1ac],edx
  4090f0:	ret    
  4090f1:	cmp    DWORD PTR [edi-0x16869c37],edx
  4090f7:	bnd jno 0x4090de
  4090fa:	lock cmp edx,DWORD PTR [ebx+0x67fc13bf]
  409101:	getsec 
  409103:	(bad)  
  409104:	jbe    0x40908b
  409106:	bound  edi,QWORD PTR [esi+0x55]
  409109:	mov    ds:0x6b455d69,eax
  40910e:	xor    al,0xf5
  409110:	dec    esp
  409111:	mov    esp,0xebd14f8c
  409116:	std    
  409117:	cmp    bh,BYTE PTR [edx-0x18]
  40911a:	xchg   ebp,eax
  40911b:	push   ebp
  40911c:	pop    es
  40911d:	cmp    ah,0x2b
  409120:	pop    eax
  409121:	arpl   WORD PTR [ebp-0x3c2d0f95],si
  409127:	mov    ch,0xc4
  409129:	arpl   WORD PTR [ebp+0x7db52e93],si
  40912f:	cmp    BYTE PTR [edx+0x63],bh
  409132:	les    ebx,FWORD PTR [edi+eax*8+0x1bf54cfb]
  409139:	sbb    eax,0x29d187cb
  40913e:	push   ecx
  40913f:	outs   dx,DWORD PTR ds:[esi]
  409140:	jge    0x4090f7
  409142:	shl    DWORD PTR [ebx-0x10],cl
  409145:	jp     0x4090ce
  409147:	fsubr  QWORD PTR [ecx]
  409149:	test   eax,0x20e2015e
  40914e:	dec    ebp
  40914f:	out    dx,eax
  409150:	mov    bh,0xe2
  409152:	popa   
  409153:	dec    ebp
  409154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409155:	adc    DWORD PTR [edx+0x6d87a897],0x5a
  40915c:	fisub  DWORD PTR ds:0xbbbb7558
  409162:	iret   
  409163:	xor    BYTE PTR [edi],ah
  409165:	je     0x409170
  409167:	mov    dl,0x53
  409169:	test   al,0xfd
  40916b:	fwait
  40916c:	push   ss
  40916d:	mov    ecx,0xeb03b826
  409172:	cmp    dl,BYTE PTR [ebx]
  409174:	mov    ebx,0xf5201cfe
  409179:	or     eax,0xf2ce8d6d
  40917e:	sub    BYTE PTR [eax],ah
  409180:	cmp    ecx,edi
  409182:	imul   edi,DWORD PTR [edi-0x3caec48c],0x9240db63
  40918c:	mov    al,0xda
  40918e:	adc    eax,0xb928812f
  409193:	je     0x40916e
  409195:	retf   0x18d0
  409198:	xchg   DWORD PTR [eax],eax
  40919a:	dec    ecx
  40919b:	aaa    
  40919c:	xchg   ebx,eax
  40919d:	cmp    DWORD PTR [edx+0x10],0xffffffc8
  4091a1:	inc    edx
  4091a2:	out    dx,al
  4091a3:	fcom   QWORD PTR [edx+0x22]
  4091a6:	adc    DWORD PTR [ebx+0x400f4046],esi
  4091ac:	cmp    eax,DWORD PTR ds:0x28c97367
  4091b2:	xchg   edi,eax
  4091b3:	rcl    dh,1
  4091b5:	cmp    BYTE PTR [ecx-0x71443a65],ah
  4091bb:	arpl   bp,sp
  4091bd:	out    dx,al
  4091be:	mov    ecx,0xffed59d7
  4091c3:	jmp    0x409166
  4091c5:	addr16 das 
  4091c7:	and    DWORD PTR [ebx-0x5d729182],ecx
  4091cd:	mov    bl,0xa4
  4091cf:	add    al,0x74
  4091d1:	not    DWORD PTR [esi-0x5236a014]
  4091d7:	data16 (bad) 
  4091d9:	imul   edx,eax,0x22
  4091dc:	xchg   edi,eax
  4091dd:	test   BYTE PTR [edi],ch
  4091df:	leave  
  4091e0:	stc    
  4091e1:	lds    ebp,FWORD PTR [ebx]
  4091e3:	push   esp
  4091e4:	pop    ebp
  4091e5:	jbe    0x4091e9
  4091e7:	add    dh,al
  4091e9:	cmp    esi,DWORD PTR [eax+0x25]
  4091ec:	or     eax,0xa3bd39bc
  4091f1:	pop    ebp
  4091f2:	cdq    
  4091f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f4:	clc    
  4091f5:	push   ebp
  4091f6:	data16 cld 
  4091f8:	imul   ebp,edx,0xffffffd4
  4091fb:	ins    DWORD PTR es:[edi],dx
  4091fc:	jo     0x4091e1
  4091fe:	sub    cl,ch
  409200:	mov    cs,WORD PTR [edi+0x48]
  409203:	ror    bh,1
  409205:	xor    al,0x20
  409207:	xchg   edi,eax
  409208:	stos   BYTE PTR es:[edi],al
  409209:	shl    DWORD PTR [edi],cl
  40920b:	int3   
  40920c:	pop    esi
  40920d:	js     0x40921c
  40920f:	mov    WORD PTR [edx+0x4ed85560],?
  409215:	scas   al,BYTE PTR es:[edi]
  409216:	(bad)  
  409217:	mov    bl,bh
  409219:	push   esi
  40921a:	das    
  40921b:	outs   dx,BYTE PTR ds:[esi]
  40921c:	(bad)  
  40921d:	mov    edx,0x6948d1a0
  409223:	outs   dx,DWORD PTR ds:[esi]
  409224:	add    BYTE PTR [edx-0x77],al
  409227:	fstp   QWORD PTR [ebx]
  409229:	mov    bh,0x49
  40922b:	in     al,0xdb
  40922d:	lods   eax,DWORD PTR ds:[esi]
  40922e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40922f:	dec    esp
  409230:	pop    ss
  409231:	or     al,BYTE PTR [eax-0x58]
  409234:	lahf   
  409235:	sahf   
  409236:	xchg   BYTE PTR [esi+0x334c929b],cl
  40923c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40923d:	das    
  40923e:	test   DWORD PTR [eax+0x4b0409ea],ecx
  409244:	add    BYTE PTR [ebp-0x1c],ah
  409247:	shl    DWORD PTR [edx-0x1e],cl
  40924a:	es inc ebx
  40924c:	inc    edi
  40924d:	mov    eax,0x2db43fa0
  409252:	or     eax,0x17f6e7d7
  409257:	and    esp,DWORD PTR [ecx+edx*2+0x74da2141]
  40925e:	jmp    0x4092cb
  409260:	fchs   
  409262:	or     eax,DWORD PTR [edi-0x40]
  409265:	mov    bl,0x1b
  409267:	hlt    
  409268:	out    0xd7,al
  40926a:	inc    ecx
  40926b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40926c:	retf   0xd256
  40926f:	sub    BYTE PTR [esp+eax*4+0x246313e1],ch
  409276:	mov    eax,0xda5dbedb
  40927b:	or     bh,BYTE PTR [edx-0x34]
  40927e:	mov    ds,WORD PTR [edi-0x72]
  409281:	dec    esi
  409282:	icebp  
  409283:	fist   WORD PTR [edi-0x8d09a19]
  409289:	push   eax
  40928a:	dec    ebp
  40928b:	and    BYTE PTR [ebp-0x61501dcc],0x83
  409292:	xlat   BYTE PTR ds:[ebx]
  409293:	sbb    eax,0x4503fee4
  409298:	xlat   BYTE PTR ds:[ebx]
  409299:	sub    ebp,DWORD PTR [eax+esi*8+0x1723479b]
  4092a0:	pop    es
  4092a1:	mov    al,ds:0x80ac39fa
  4092a6:	or     edx,esp
  4092a8:	jmp    0x4092a9
  4092aa:	pop    ebp
  4092ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092ac:	push   eax
  4092ad:	in     eax,0x65
  4092af:	(bad)  
  4092b0:	stc    
  4092b1:	mov    BYTE PTR ss:[ebp-0x421061c4],cl
  4092b8:	cmp    al,0x81
  4092ba:	shl    BYTE PTR [eax+ebx*2],0xcf
  4092be:	aam    0xae
  4092c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c1:	outs   dx,DWORD PTR ds:[esi]
  4092c2:	pop    ds
  4092c3:	mov    ds:0x7a075f54,eax
  4092c8:	adc    ecx,DWORD PTR [ecx+0x36a01c76]
  4092ce:	ins    BYTE PTR es:[edi],dx
  4092cf:	data16 ins BYTE PTR es:[edi],dx
  4092d1:	cs lahf 
  4092d3:	jnp    0x409332
  4092d5:	sub    esi,edi
  4092d7:	icebp  
  4092d8:	fdiv   QWORD PTR [ecx]
  4092da:	outs   dx,DWORD PTR ds:[esi]
  4092db:	cmp    BYTE PTR [ebp*8-0x6f15d653],dl
  4092e2:	mov    BYTE PTR [ebx+0x2d22f2bc],0xb8
  4092e9:	sbb    eax,0xb84b64f6
  4092ee:	jae    0x4092e1
  4092f0:	pop    eax
  4092f1:	dec    ebp
  4092f2:	jge    0x4092d3
  4092f4:	sbb    DWORD PTR [edi],0x6c8bbe90
  4092fa:	(bad)  
  4092fb:	mov    esp,0xde2aa07e
  409300:	inc    ebp
  409301:	mov    al,0x28
  409303:	add    eax,0xab79d3b2
  409308:	mov    esp,0xc2e3a8f1
  40930d:	mov    es,esp
  40930f:	pop    eax
  409310:	popa   
  409311:	inc    ecx
  409312:	push   esp
  409313:	sbb    ah,BYTE PTR [eax+ecx*8-0x337c1f3b]
  40931a:	es pop edi
  40931c:	dec    eax
  40931d:	cwde   
  40931e:	inc    esp
  40931f:	sbb    DWORD PTR [ebx+0x32dac4b5],esi
  409325:	shl    BYTE PTR [ecx+0x54],0xe5
  409329:	add    eax,0x860461d4
  40932e:	adc    al,0x58
  409330:	retf   
  409331:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409333:	cmc    
  409334:	jg     0x409389
  409336:	mov    ah,0x78
  409338:	mov    ch,0xd3
  40933a:	push   edx
  40933b:	in     al,0xfd
  40933d:	in     al,0x8
  40933f:	sbb    eax,0x5094e329
  409344:	jae    0x4093c5
  409346:	mov    ds:0xda2b1cc6,eax
  40934b:	and    al,0xda
  40934d:	mov    ds:0x68e2c787,eax
  409352:	jno    0x409313
  409354:	add    edx,DWORD PTR [ebx+0x769386e1]
  40935a:	sahf   
  40935b:	mov    edi,0x632bacb4
  409360:	(bad)  
  409361:	out    dx,eax
  409362:	xchg   esp,eax
  409363:	call   0xe882:0xbec2a4c3
  40936a:	push   esp
  40936b:	(bad)  
  40936c:	xor    eax,DWORD PTR [eax-0x1f]
  40936f:	clc    
  409370:	enter  0xf6ae,0x91
  409374:	retf   
  409375:	sbb    al,0x34
  409377:	jl     0x4093cc
  409379:	cmp    BYTE PTR [ecx-0x45],bl
  40937c:	pop    esp
  40937d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40937e:	ins    DWORD PTR es:[edi],dx
  40937f:	loope  0x4093f5
  409381:	call   0x392725ea
  409386:	push   eax
  409387:	xor    eax,0x50ba05f4
  40938c:	enter  0x56bb,0x5c
  409390:	popa   
  409391:	aad    0x34
  409393:	adc    al,dl
  409395:	jmp    0x40939c
  409397:	std    
  409398:	popf   
  409399:	sbb    DWORD PTR [ebx+eiz*1],ecx
  40939c:	lock sbb BYTE PTR [ecx],dh
  40939f:	stos   BYTE PTR es:[edi],al
  4093a0:	mov    ah,0x97
  4093a2:	out    0x2,eax
  4093a4:	mov    bl,0x76
  4093a6:	leave  
  4093a7:	lock push 0x69
  4093aa:	sar    ah,1
  4093ac:	aas    
  4093ad:	imul   eax,edx,0x57b31ec
  4093b3:	inc    eax
  4093b4:	xchg   ebx,eax
  4093b5:	mov    esp,0x2865d7d3
  4093ba:	sbb    ebp,DWORD PTR [edx-0x715eec9f]
  4093c0:	xchg   edi,ebp
  4093c2:	data16 mov BYTE PTR [edx],dl
  4093c5:	retf   
  4093c6:	int3   
  4093c7:	mov    bh,0xae
  4093c9:	sub    al,0x8
  4093cb:	int    0x4d
  4093cd:	dec    esp
  4093ce:	mov    al,0x71
  4093d0:	jns    0x40935b
  4093d2:	fcmovu st,st(3)
  4093d4:	mov    dh,0x60
  4093d6:	daa    
  4093d7:	sbb    al,0xd9
  4093d9:	push   ds
  4093da:	sbb    esi,DWORD PTR [eax-0x1c6e0e63]
  4093e0:	inc    edx
  4093e1:	push   0xad8fea23
  4093e6:	(bad)  
  4093e7:	lock mov ds:0x96c96f4e,al
  4093ed:	fild   WORD PTR [ebx-0x1a1fb795]
  4093f3:	sahf   
  4093f4:	mov    dh,0x3
  4093f6:	and    BYTE PTR [ebp-0x1ef745e6],ah
  4093fc:	xor    ecx,DWORD PTR [edx]
  4093fe:	xor    dh,dl
  409400:	pusha  
  409401:	inc    ebp
  409402:	jp     0x4093aa
  409404:	push   ss
  409405:	pushf  
  409406:	pop    ebx
  409407:	push   eax
  409408:	push   edi
  409409:	push   ebx
  40940a:	adc    ecx,esp
  40940c:	loope  0x40945b
  40940e:	sbb    BYTE PTR [ecx-0x62],ch
  409411:	and    bl,cl
  409413:	sbb    bl,BYTE PTR ds:0x7e19db8
  409419:	push   ecx
  40941a:	mov    ebx,0xd3054773
  40941f:	mov    cs,WORD PTR [ecx-0x48a1e310]
  409425:	push   cs
  409426:	fs jp  0x4093ad
  409429:	mov    ds:0xe212fab8,al
  40942e:	xchg   ebp,eax
  40942f:	stos   BYTE PTR es:[edi],al
  409430:	pop    esp
  409431:	fnstsw ax
  409433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409434:	pop    ecx
  409435:	xor    DWORD PTR [esi-0x67f759cb],esi
  40943b:	arpl   si,bp
  40943d:	or     edx,DWORD PTR [edi+0x36]
  409440:	jl     0x4094b2
  409442:	mov    ch,0xff
  409444:	xchg   esi,eax
  409445:	push   esp
  409446:	cmp    DWORD PTR [eax+0x60],edx
  409449:	xor    DWORD PTR [edi],ebp
  40944b:	sbb    eax,ecx
  40944d:	jmp    0x80c2:0x14ba41d7
  409454:	push   edx
  409455:	push   esi
  409456:	sub    dh,BYTE PTR [ecx-0x5d]
  409459:	call   eax
  40945b:	lods   eax,DWORD PTR ds:[esi]
  40945c:	mov    dl,0xc
  40945e:	xor    eax,0xaf786ef5
  409463:	ficom  WORD PTR [esi-0x29]
  409466:	loopne 0x40942e
  409468:	mov    ebx,0x40ed6ea1
  40946d:	sbb    BYTE PTR [esi],0x85
  409470:	es ss jmp 0x3fd6cfd0
  409477:	ds and al,0x85
  40947a:	xor    BYTE PTR [edx+0x3b],ah
  40947d:	pop    es
  40947e:	ja     0x4094a4
  409480:	pop    edx
  409481:	fadd   st(6),st
  409483:	jne    0x4094b5
  409485:	mov    ebp,0x7e8b4605
  40948a:	sbb    DWORD PTR [ebx+0x3d528b55],ebp
  409490:	cdq    
  409491:	adc    dl,BYTE PTR [ebx-0x6570983c]
  409497:	mov    fs,WORD PTR [esi+0x6ce07a90]
  40949d:	fnsave [edi-0x39]
  4094a0:	outs   dx,BYTE PTR ds:[esi]
  4094a1:	int    0x88
  4094a3:	ficomp DWORD PTR [ecx]
  4094a5:	jne    0x409489
  4094a7:	xor    ah,BYTE PTR cs:[ebx]
  4094aa:	je     0x409440
  4094ac:	jl     0x409504
  4094ae:	lods   eax,DWORD PTR ds:[esi]
  4094af:	imul   edx,esi,0xffffff82
  4094b2:	mov    es,WORD PTR ds:0x90e02ef
  4094b8:	aad    0x25
  4094ba:	in     eax,dx
  4094bb:	inc    edx
  4094bc:	jge    0x4094d2
  4094be:	sbb    DWORD PTR [ebx-0x7f928d23],edx
  4094c4:	pop    ds
  4094c5:	mov    al,ds:0xffc24bfa
  4094ca:	outs   dx,BYTE PTR ds:[esi]
  4094cb:	into   
  4094cc:	mov    edi,0xee37961c
  4094d1:	imul   ebx,ebx,0x36
  4094d4:	imul   ebp,esp,0xc15f07
  4094da:	xchg   edx,eax
  4094db:	cmp    DWORD PTR [ebp+0x54057786],ebx
  4094e1:	repnz test al,0x31
  4094e4:	pushf  
  4094e5:	fld    st(0)
  4094e7:	sbb    eax,0x7552622e
  4094ec:	mov    eax,0x770d4d1f
  4094f1:	mov    bh,0x94
  4094f3:	fstp   QWORD PTR [eax-0x5c]
  4094f6:	push   cs
  4094f7:	cmp    al,0xc1
  4094f9:	pushf  
  4094fa:	nop
  4094fb:	push   ebp
  4094fc:	pushf  
  4094fd:	sub    BYTE PTR [edx+0x33],bh
  409500:	sub    BYTE PTR [ecx],dh
  409502:	unpcklps xmm2,xmm0
  409505:	mov    esp,0x94e0072
  40950a:	jnp    0x40948c
  40950c:	pop    eax
  40950d:	mov    bl,0x7b
  40950f:	and    BYTE PTR [edx+edi*2-0x4c],dh
  409513:	jmp    0x39b4d126
  409518:	xchg   edx,eax
  409519:	ja     0x4094ab
  40951b:	std    
  40951c:	fnstenv [ecx+0x20]
  40951f:	shl    DWORD PTR [esi+0x14],1
  409522:	fwait
  409523:	rcl    eax,1
  409525:	xchg   ebp,eax
  409526:	rcr    DWORD PTR [edx-0x4b],0x93
  40952a:	inc    ebx
  40952b:	mov    esp,0x9ca0993e
  409530:	(bad)  
  409531:	out    0xe7,eax
  409533:	shr    esp,1
  409535:	and    eax,0x504ea9d6
  40953a:	fistp  DWORD PTR [ebp-0x12]
  40953d:	aas    
  40953e:	mov    cl,0x7a
  409540:	dec    edx
  409541:	cmp    DWORD PTR [ebp-0x3c],edx
  409544:	mov    eax,0x16658e92
  409549:	fldcw  WORD PTR [ebp+0x71]
  40954c:	and    BYTE PTR [edx],al
  40954e:	(bad)  
  40954f:	js     0x4094f3
  409551:	in     eax,dx
  409552:	and    al,0x40
  409554:	pop    edi
  409555:	add    DWORD PTR [ecx-0x5b6113b9],0xefbbfe2f
  40955f:	ret    0xbf38
  409562:	cmp    eax,0x7976b687
  409567:	mov    esi,0xb4e20f13
  40956c:	xchg   esi,eax
  40956d:	inc    ebp
  40956e:	mov    esp,0xba332b8a
  409573:	iret   
  409574:	mov    ebx,0xb6b6aabd
  409579:	mov    bl,0xba
  40957b:	push   ecx
  40957c:	js     0x4095d5
  40957e:	(bad)  [edx-0x29f5d42e]
  409584:	inc    esp
  409585:	jl     0x4095f7
  409587:	mov    ch,0xa4
  409589:	stc    
  40958a:	inc    eax
  40958b:	jbe    0x40952f
  40958d:	or     eax,0xda162591
  409592:	xchg   ecx,eax
  409593:	fwait
  409594:	sub    dh,al
  409596:	inc    edi
  409597:	jp     0x4095c6
  409599:	push   0x41
  40959b:	imul   edi,DWORD PTR [edi+0x78c24ae4],0x87af1b71
  4095a5:	sbb    dh,BYTE PTR [ecx]
  4095a7:	les    esi,FWORD PTR [edx]
  4095a9:	das    
  4095aa:	sahf   
  4095ab:	xchg   ebp,eax
  4095ac:	hlt    
  4095ad:	cmp    dh,ah
  4095af:	out    0xf1,eax
  4095b1:	or     DWORD PTR [ecx],ebp
  4095b3:	ret    
  4095b4:	ds out dx,al
  4095b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b7:	(bad)
  4095bb:	jo     0x409624
  4095bd:	mov    edx,0x35b8afb
  4095c2:	push   cs
  4095c3:	push   esi
  4095c4:	nop
  4095c5:	retf   
  4095c6:	loope  0x409577
  4095c8:	out    0xc,al
  4095ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095cb:	xchg   ebp,eax
  4095cc:	mov    bh,0x4e
  4095ce:	icebp  
  4095cf:	xor    DWORD PTR [eax],ebx
  4095d1:	loope  0x409626
  4095d3:	xor    al,0xda
  4095d5:	(bad)  
  4095d6:	fldenv [esi+eiz*8-0x56]
  4095da:	pop    edx
  4095db:	(bad)  
  4095dc:	add    edx,DWORD PTR [edx-0x28164cea]
  4095e2:	jp     0x409625
  4095e4:	push   edx
  4095e5:	inc    ebx
  4095e6:	std    
  4095e7:	int    0xd5
  4095e9:	jns    0x4095ab
  4095eb:	shr    ecx,0x8c
  4095ee:	mov    al,ds:0x37508f53
  4095f3:	jmp    0xcfd0:0x16599439
  4095fa:	(bad)
  4095fd:	mov    ch,0xcc
  4095ff:	adc    BYTE PTR [ebx+0x1a],ah
  409602:	mov    ecx,0x9217be78
  409607:	rol    DWORD PTR [eax+0x56],0x40
  40960b:	sbb    dh,BYTE PTR [ebx-0x20]
  40960e:	pusha  
  40960f:	(bad)  
  409610:	push   ss
  409611:	jl     0x4095e4
  409613:	xor    al,0x1b
  409615:	sahf   
  409616:	faddp  st(6),st
  409618:	stos   DWORD PTR es:[edi],eax
  409619:	add    DWORD PTR [ebx+eiz*1-0x24c1ee89],ebx
  409620:	inc    eax
  409621:	mov    edi,0x7db02ea3
  409626:	and    eax,0x900a0a94
  40962b:	leave  
  40962c:	pusha  
  40962d:	retf   
  40962e:	sub    DWORD PTR [ecx+ecx*2-0x38],ecx
  409632:	not    DWORD PTR [ecx+edx*2-0x4a]
  409636:	dec    edi
  409637:	pop    ss
  409638:	test   BYTE PTR [ecx],bl
  40963a:	xchg   esi,eax
  40963b:	pop    eax
  40963c:	mov    esi,0xb813f84b
  409641:	lock out 0x35,eax
  409644:	inc    edi
  409645:	push   esi
  409646:	push   eax
  409647:	or     cl,BYTE PTR [eax+ebx*8]
  40964a:	or     DWORD PTR [ecx],ecx
  40964c:	scas   eax,DWORD PTR es:[edi]
  40964d:	inc    eax
  40964e:	mov    dl,0x71
  409650:	push   ss
  409651:	lods   al,BYTE PTR ds:[esi]
  409652:	(bad)  
  409653:	xchg   esi,eax
  409654:	ret    0x3031
  409657:	stos   BYTE PTR es:[edi],al
  409658:	push   esi
  409659:	leave  
  40965a:	xchg   ecx,eax
  40965b:	mov    al,ds:0x11610da
  409660:	ror    cl,1
  409662:	push   ebx
  409663:	iret   
  409664:	adc    BYTE PTR [ebp+0x23dee8ee],bh
  40966a:	cmp    ebx,DWORD PTR [edi]
  40966c:	push   esp
  40966d:	dec    esi
  40966e:	mov    ecx,0x1676ca11
  409673:	sub    edi,ebp
  409675:	mov    esp,0x11135dc3
  40967a:	cwde   
  40967b:	jb     0x4095fd
  40967d:	sti    
  40967e:	rol    edi,cl
  409680:	xchg   ecx,eax
  409681:	sti    
  409682:	sbb    al,0x3b
  409684:	push   eax
  409685:	adc    al,0x2c
  409687:	mov    ecx,0x40bd07f4
  40968c:	in     eax,0xca
  40968e:	mov    esi,0x2e34dd2c
  409693:	shl    BYTE PTR [edx+0x3],0xd0
  409697:	out    0x8f,eax
  409699:	lahf   
  40969a:	jp     0x40968a
  40969c:	sub    eax,0xb6ed196d
  4096a1:	mov    bh,0x67
  4096a3:	pop    esi
  4096a4:	out    0xd7,eax
  4096a6:	jns    0x409670
  4096a8:	popf   
  4096a9:	ss (bad) 
  4096ab:	int    0x5c
  4096ad:	inc    edi
  4096ae:	imul   esp,DWORD PTR [edx],0xfffffff5
  4096b1:	pusha  
  4096b2:	int3   
  4096b3:	push   esi
  4096b4:	sbb    al,0xaf
  4096b6:	inc    edx
  4096b7:	add    eax,0x93fba880
  4096bc:	jo     0x4096ee
  4096be:	inc    ebp
  4096bf:	cdq    
  4096c0:	xor    DWORD PTR [ebx+0x6e],esi
  4096c3:	pop    esi
  4096c4:	pop    es
  4096c5:	jnp    0x409682
  4096c7:	aas    
  4096c8:	xchg   edx,eax
  4096c9:	xchg   edi,eax
  4096ca:	cld    
  4096cb:	addr16 adc esp,0x819ab74
  4096d2:	shl    bh,cl
  4096d4:	(bad)  
  4096d5:	jo     0x40970b
  4096d7:	and    bh,BYTE PTR [ebx+0x4fa3f80]
  4096dd:	sub    ecx,edx
  4096df:	xor    al,bl
  4096e1:	scas   al,BYTE PTR es:[edi]
  4096e2:	shr    dh,1
  4096e4:	sahf   
  4096e5:	je     0x409750
  4096e7:	fs mov dh,0xe1
  4096ea:	(bad)  
  4096eb:	jge    0x4096b7
  4096ed:	sub    eax,0x907a4f38
  4096f2:	adc    BYTE PTR [ecx-0x20],cl
  4096f5:	leave  
  4096f6:	xchg   edi,eax
  4096f8:	sbb    al,0x9b
  4096fa:	mov    eax,ds:0x56977e77
  4096ff:	add    eax,0x81a85b23
  409704:	adc    eax,0x5c49183
  409709:	scas   eax,DWORD PTR es:[edi]
  40970a:	pop    ebx
  40970b:	adc    DWORD PTR [ebx-0x1c92eb68],edi
  409711:	mov    ebp,0x4b7ce24b
  409716:	mov    eax,0xd168a56b
  40971b:	sub    BYTE PTR [eax-0x547afcab],bl
  409721:	(bad)  
  409722:	push   0xffffffb7
  409724:	pushf  
  409725:	shl    BYTE PTR [ecx-0x3a6fb3f6],1
  40972b:	aam    0xa4
  40972d:	into   
  40972e:	or     eax,0x9463b2a
  409733:	xor    al,0x0
  409735:	nop
  409736:	xlat   BYTE PTR ds:[ebx]
  409737:	ja     0x4097a7
  409739:	pop    esp
  40973a:	out    0x11,al
  40973c:	aaa    
  40973d:	adc    eax,0x89c2c7ae
  409742:	dec    esp
  409743:	and    ebx,eax
  409745:	popa   
  409746:	mov    WORD PTR [edi],cs
  409748:	ins    BYTE PTR es:[edi],dx
  409749:	aaa    
  40974a:	mov    dl,0x4
  40974c:	or     al,0x71
  40974e:	cld    
  40974f:	sub    DWORD PTR [eax-0x5322a5a6],edx
  409755:	pop    ecx
  409756:	or     BYTE PTR [edi+eax*2-0x29a93f50],bh
  40975d:	test   esp,eax
  40975f:	daa    
  409760:	lahf   
  409761:	jae    0x409730
  409763:	daa    
  409764:	lea    eax,ds:0x56932e28
  40976a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40976b:	jae    0x409745
  40976d:	mov    ds:0x78686d92,eax
  409772:	nop
  409773:	lock push ebx
  409775:	mov    dl,0xcc
  409777:	inc    eax
  409778:	mov    ebx,0xf8b5d8e3
  40977d:	jp     0x4097f9
  40977f:	mov    cl,al
  409781:	call   0x7c844d74
  409786:	fsub   st(0),st
  409788:	jmp    0x1baabdf2
  40978d:	jne    0x4097fb
  40978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409790:	jecxz  0x4097d4
  409792:	add    esp,DWORD PTR [ecx]
  409794:	arpl   WORD PTR [esi],si
  409796:	cdq    
  409797:	mov    bh,0x3a
  409799:	adc    al,0x2c
  40979b:	cmp    ah,BYTE PTR [ebx-0x6d77c921]
  4097a1:	add    edi,esp
  4097a3:	cli    
  4097a4:	cmp    BYTE PTR ds:0xd0ba4068,0xe8
  4097ab:	(bad)  
  4097ac:	sbb    al,0x6e
  4097ae:	sub    BYTE PTR [edi-0x49160763],bl
  4097b4:	and    BYTE PTR [edi],bl
  4097b6:	js     0x409747
  4097b8:	lahf   
  4097b9:	add    DWORD PTR [ecx-0x57],ecx
  4097bc:	cwde   
  4097bd:	test   al,0xef
  4097bf:	pop    es
  4097c0:	popf   
  4097c1:	retf   0x7024
  4097c4:	add    ah,bl
  4097c6:	xchg   ebx,eax
  4097c7:	xchg   esp,eax
  4097c8:	xchg   esp,eax
  4097c9:	into   
  4097ca:	lods   al,BYTE PTR ds:[esi]
  4097cb:	or     bl,BYTE PTR [edi]
  4097cd:	cwde   
  4097ce:	or     al,0x2e
  4097d0:	fwait
  4097d1:	xchg   edi,eax
  4097d2:	cmp    eax,0x8a0e60c7
  4097d7:	mov    eax,ds:0xec0b2664
  4097dc:	xchg   edx,eax
  4097dd:	xchg   DWORD PTR [edi+0x51922c86],edi
  4097e3:	add    al,0x53
  4097e5:	push   0x1f8fbcef
  4097ea:	rol    BYTE PTR [eax-0x539aa864],0x43
  4097f1:	pop    edi
  4097f2:	mov    bh,ah
  4097f4:	imul   edi,DWORD PTR [ebx*4+0x47db83de],0x8d390d37
  4097ff:	stc    
  409800:	mov    esp,0xd8a8f6db
  409805:	lahf   
  409806:	lahf   
  409807:	test   eax,0xa1a47be7
  40980c:	adc    bh,BYTE PTR [eax+0x32]
  40980f:	ret    0x1509
  409812:	jo     0x409844
  409814:	pop    esi
  409815:	adc    bl,BYTE PTR [edi]
  409817:	int3   
  409818:	pop    ebx
  409819:	mov    ah,0xb8
  40981b:	pop    esp
  40981c:	pop    es
  40981d:	mov    ds:0x26b13a0c,eax
  409822:	cld    
  409823:	adc    al,0xc9
  409825:	dec    ebx
  409826:	inc    DWORD PTR [ebx]
  409828:	cdq    
  409829:	cmp    eax,0x92631428
  40982e:	lahf   
  40982f:	scas   eax,DWORD PTR es:[edi]
  409830:	adc    eax,0x8affd206
  409835:	mov    ah,0xdd
  409837:	lahf   
  409838:	inc    ecx
  409839:	enter  0x2286,0x55
  40983d:	loope  0x4098b6
  40983f:	imul   esp,DWORD PTR [ebp+0x7fdd2255],0x1b
  409846:	push   esp
  409847:	dec    esp
  409848:	in     eax,0x5a
  40984a:	pcmpgtd mm2,QWORD PTR [edi]
  40984d:	push   ebx
  40984e:	push   ebx
  40984f:	push   esp
  409850:	aam    0xfc
  409852:	mov    dl,0xd4
  409854:	sti    
  409855:	sbb    edx,DWORD PTR [ebx-0x2f4b3943]
  40985b:	lahf   
  40985c:	ficomp WORD PTR [esi+0x59]
  40985f:	mov    dl,0xaa
  409861:	jg     0x40981c
  409863:	js     0x409852
  409865:	aad    0xc7
  409867:	jns    0x40984a
  409869:	xchg   BYTE PTR [esi+0x3245f85f],ah
  40986f:	dec    edx
  409870:	in     al,0x7e
  409872:	mov    esi,DWORD PTR [ebx-0x26c5f5a4]
  409878:	dec    edi
  409879:	test   eax,0x4521c039
  40987e:	jno    0x4098d4
  409880:	dec    edx
  409881:	clc    
  409882:	ins    DWORD PTR es:[edi],dx
  409883:	retf   
  409884:	cld    
  409885:	mov    DWORD PTR [ecx],edx
  409887:	dec    edx
  409888:	push   ebp
  409889:	sti    
  40988a:	shl    DWORD PTR [ecx+0x36],0x75
  40988e:	dec    esi
  40988f:	jnp    0x4098c1
  409891:	(bad)  
  409892:	push   eax
  409893:	in     al,0xeb
  409895:	or     esp,esp
  409897:	sbb    BYTE PTR [edi+edx*4-0x62],al
  40989b:	sbb    dh,BYTE PTR [ecx-0x9c8c3a5]
  4098a1:	or     ecx,DWORD PTR [edi+0x2258fae7]
  4098a7:	cmp    DWORD PTR [ecx-0x1cbce8a3],0x77e46985
  4098b1:	test   edx,ebx
  4098b3:	add    bl,0xe
  4098b6:	call   0x1107:0x938ef300
  4098bd:	aaa    
  4098be:	jnp    0x4098f0
  4098c0:	sub    esi,DWORD PTR [ecx+0x759e9827]
  4098c6:	push   es
  4098c7:	scas   eax,DWORD PTR es:[edi]
  4098c8:	rol    ecx,0xf7
  4098cb:	or     ebx,ebp
  4098cd:	mov    esi,DWORD PTR [ebp-0x71]
  4098d0:	ins    BYTE PTR es:[edi],dx
  4098d1:	sbb    DWORD PTR [ecx],ebp
  4098d3:	lock mov al,0x9a
  4098d6:	xchg   edi,eax
  4098d7:	push   edi
  4098d8:	inc    ebx
  4098d9:	pop    ecx
  4098da:	(bad)  
  4098db:	out    0xe7,al
  4098dd:	imul   ebp,edx,0x5b
  4098e0:	add    eax,0xda68bb9c
  4098e5:	jnp    0x409929
  4098e7:	shl    BYTE PTR [ebp-0x5f614326],cl
  4098ed:	cwde   
  4098ee:	xor    esi,DWORD PTR [eax-0x124a1f29]
  4098f4:	in     al,0x16
  4098f6:	repz cmp al,bh
  4098f9:	imul   edi,DWORD PTR [edx],0xffffff8b
  4098fc:	shl    BYTE PTR [eax+0x31cd9e9b],cl
  409902:	xchg   ebp,eax
  409903:	pop    es
  409904:	push   ebx
  409905:	jecxz  0x4098c9
  409907:	mov    bh,0xcd
  409909:	outs   dx,DWORD PTR ds:[esi]
  40990a:	clc    
  40990b:	test   BYTE PTR [edi],dl
  40990d:	mov    bl,0x8b
  40990f:	cmp    eax,0x90a14f4b
  409914:	dec    ebp
  409915:	xchg   esp,eax
  409916:	sti    
  409917:	arpl   WORD PTR [edx],sp
  409919:	scas   al,BYTE PTR es:[edi]
  40991a:	out    0x9f,eax
  40991c:	scas   al,BYTE PTR es:[edi]
  40991d:	in     eax,0x10
  40991f:	mov    dl,BYTE PTR [ecx-0x2f4cc0ea]
  409925:	jg     0x40994f
  409927:	inc    esp
  409928:	xchg   ecx,eax
  409929:	in     al,0xb3
  40992b:	and    ecx,DWORD PTR [ebx-0xf00eec9]
  409931:	cmp    DWORD PTR [ebp+0x51],edi
  409934:	sub    al,0xf7
  409936:	sub    eax,0xaa8e876b
  40993b:	push   ss
  40993c:	int    0xe1
  40993e:	mov    ebp,0xf98b6ba3
  409943:	mov    al,0x45
  409945:	pushf  
  409946:	arpl   WORD PTR [ebp-0x4a1ef691],si
  40994c:	clc    
  40994d:	sbb    DWORD PTR [ecx],esi
  40994f:	shl    eax,0x40
  409952:	leave  
  409953:	inc    eax
  409954:	(bad)  
  409955:	loop   0x409908
  409957:	cmp    eax,0x6a3cce4f
  40995c:	jmp    0x409954
  40995e:	add    BYTE PTR [ebp-0x2ce2b7a7],0x7
  409965:	pop    edx
  409966:	call   0x1472:0x514ffd6c
  40996d:	sbb    esi,DWORD PTR [ecx-0x10]
  409970:	ss or  al,0x41
  409973:	jb     0x4099f0
  409975:	mov    esp,DWORD PTR [ebx]
  409977:	inc    edx
  409978:	fcom   QWORD PTR [ebx+edx*1+0x32231a4a]
  40997f:	addr16 pushf 
  409981:	sar    DWORD PTR cs:[ebp-0x73192e1],1
  409988:	outs   dx,DWORD PTR ds:[esi]
  409989:	ins    BYTE PTR es:[edi],dx
  40998a:	cld    
  40998b:	lea    eax,[edi]
  40998d:	fcmovb st,st(1)
  40998f:	or     eax,0xc5bd15d0
  409994:	je     0x40991e
  409996:	inc    edi
  409997:	out    dx,eax
  409998:	loopne 0x4099c0
  40999a:	push   edx
  40999b:	jp     0x4099fd
  40999d:	(bad)  
  40999e:	push   ebp
  40999f:	stc    
  4099a0:	jbe    0x40994a
  4099a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099a3:	mov    ds:0xc6d3b3b,eax
  4099a8:	ret    
  4099a9:	stc    
  4099aa:	stos   DWORD PTR es:[edi],eax
  4099ab:	popf   
  4099ac:	push   edi
  4099ad:	xor    BYTE PTR [ecx-0x4d],al
  4099b0:	ins    BYTE PTR es:[edi],dx
  4099b1:	cld    
  4099b2:	jb     0x4099cd
  4099b4:	push   0xffffff9f
  4099b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b7:	jg     0x4099c1
  4099b9:	mov    ebx,0x662c3b45
  4099be:	mov    edi,0x74691eee
  4099c3:	or     eax,0xb52eb2b2
  4099c8:	leave  
  4099c9:	xchg   ecx,eax
  4099ca:	add    al,0x6d
  4099cc:	jmp    FWORD PTR [ebp+ebx*4-0x20]
  4099d0:	sti    
  4099d1:	ins    DWORD PTR es:[edi],dx
  4099d2:	clc    
  4099d3:	mov    DWORD PTR [ebp-0x71],ebp
  4099d6:	ret    
  4099d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d8:	mov    ch,0xe6
  4099da:	mov    al,0x6b
  4099dc:	ins    BYTE PTR es:[edi],dx
  4099dd:	sbb    ah,BYTE PTR [esi+ebx*2-0x73787069]
  4099e4:	pop    ebp
  4099e5:	stc    
  4099e6:	or     edi,esi
  4099e8:	jle    0x4099a7
  4099ea:	ret    
  4099eb:	es dec eax
  4099ed:	mov    ?,WORD PTR [esi]
  4099ef:	pop    esi
  4099f0:	mov    bh,0x65
  4099f2:	outs   dx,DWORD PTR ds:[esi]
  4099f3:	or     DWORD PTR [eax],esi
  4099f5:	clc    
  4099f6:	jb     0x4099cc
  4099f8:	xor    edx,DWORD PTR [ebx+0x2b]
  4099fb:	adc    dl,BYTE PTR [edx]
  4099fd:	inc    edi
  4099fe:	pop    ebp
  4099ff:	jo     0x409a71
  409a01:	xor    eax,0x862f32fa
  409a06:	pushf  
  409a07:	loope  0x409a5f
  409a09:	mov    eax,0x8ea12eac
  409a0e:	es and eax,0x53814242
  409a14:	fnsave [eax+0xe]
  409a17:	mov    ds:0xa1bd294d,eax
  409a1c:	mov    bl,0x41
  409a1e:	es retf 0xfd35
  409a22:	pop    edx
  409a23:	in     ax,0xbb
  409a26:	cld    
  409a27:	fcomp  QWORD PTR [ebp-0x48f611c7]
  409a2d:	jo     0x409a79
  409a2f:	and    dh,dh
  409a31:	xchg   edx,eax
  409a32:	js     0x4099bb
  409a34:	repnz mov dl,0xb4
  409a37:	adc    BYTE PTR [edi+0xb340043],ah
  409a3d:	push   0x55
  409a3f:	ret    0xcb3b
  409a42:	retf   
  409a43:	(bad)  
  409a44:	xchg   edx,eax
  409a45:	pop    esi
  409a46:	scas   al,BYTE PTR es:[edi]
  409a47:	fs ds pop edi
  409a4a:	inc    edx
  409a4b:	ss and bl,0x23
  409a4f:	adc    BYTE PTR [bx+di+0x4d],cl
  409a53:	sub    al,0xc1
  409a55:	jmp    0x5fda:0x287d0c67
  409a5c:	rol    esp,1
  409a5e:	lods   al,BYTE PTR gs:[esi]
  409a60:	mov    ebx,0x2f04b978
  409a65:	out    dx,al
  409a66:	mov    al,0xd3
  409a68:	ins    DWORD PTR es:[edi],dx
  409a69:	adc    DWORD PTR [edi-0x22],esp
  409a6c:	adc    bl,BYTE PTR [ecx]
  409a6e:	add    eax,0xcaa92783
  409a73:	add    dx,WORD PTR [ebp+0x36]
  409a77:	xchg   ebp,eax
  409a78:	or     bl,BYTE PTR [edx-0x2e]
  409a7b:	dec    ebx
  409a7c:	sbb    DWORD PTR [edx],esi
  409a7e:	daa    
  409a7f:	imul   esi,DWORD PTR [si-0x355d],0xa
  409a85:	imul   ebx,DWORD PTR [ecx-0x76b14891],0xeaceafd
  409a8f:	icebp  
  409a90:	test   DWORD PTR [ebp+ebx*1+0x63],esi
  409a94:	mov    ecx,0xf4e0e26
  409a99:	mov    dh,bl
  409a9b:	dec    ebx
  409a9c:	not    ebp
  409a9e:	pop    esp
  409a9f:	and    eax,0xaee251db
  409aa4:	dec    edx
  409aa5:	add    BYTE PTR [ecx+eiz*8-0x1199b893],bl
  409aac:	mov    ds:0x7c7429df,eax
  409ab1:	or     cl,BYTE PTR [ebx]
  409ab3:	stos   BYTE PTR es:[edi],al
  409ab4:	fwait
  409ab5:	sub    edi,DWORD PTR [esi-0x5576f760]
  409abb:	popf   
  409abc:	jno    0x409a78
  409abe:	sbb    al,0x92
  409ac0:	push   0x9c67373a
  409ac5:	in     eax,dx
  409ac6:	and    eax,0x1111a5ab
  409acb:	dec    ebx
  409acc:	add    eax,0xbfa956ac
  409ad1:	test   al,0x55
  409ad3:	aaa    
  409ad4:	lods   eax,DWORD PTR ds:[esi]
  409ad5:	icebp  
  409ad6:	fsub   st(6),st
  409ad8:	add    ebx,DWORD PTR [ecx+0x7c8435e4]
  409ade:	ins    DWORD PTR es:[edi],dx
  409adf:	pop    edi
  409ae0:	std    
  409ae1:	push   ds
  409ae2:	pop    ds
  409ae3:	xchg   BYTE PTR [ecx-0x6d],bh
  409ae6:	jp     0x409b16
  409ae8:	mov    BYTE PTR [ebx],ah
  409aea:	cmc    
  409aeb:	jg     0x409a94
  409aed:	cmp    eax,0x722a209a
  409af2:	lods   eax,DWORD PTR ds:[esi]
  409af3:	shl    DWORD PTR [ebp-0x4b],cl
  409af6:	jmp    0x4eb88ba1
  409afb:	sbb    bl,BYTE PTR [ebp-0x30c64541]
  409b01:	mov    fs,WORD PTR [edi-0xf03f418]
  409b07:	sub    ebx,DWORD PTR [edx+0x361a6a21]
  409b0d:	mov    BYTE PTR [edx-0xb0cb7ce],ch
  409b13:	(bad)  
  409b14:	pop    eax
  409b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b16:	fnsave [edi+0x7c]
  409b19:	push   0x29b7ecaf
  409b1e:	repnz lahf 
  409b20:	dec    esi
  409b21:	pop    ebp
  409b22:	fist   DWORD PTR [edi+0x3527365b]
  409b28:	push   es
  409b29:	pop    esp
  409b2a:	gs mov ss,edx
  409b2d:	mov    bl,0x6e
  409b2f:	stos   DWORD PTR es:[edi],eax
  409b30:	cwde   
  409b31:	repnz fst st(1)
  409b34:	popf   
  409b35:	ins    DWORD PTR es:[edi],dx
  409b36:	je     0x409afe
  409b38:	dec    edi
  409b39:	inc    ecx
  409b3a:	mov    BYTE PTR [ebx+ebp*4-0x72f0cec1],dh
  409b41:	sbb    BYTE PTR [ecx+0x66],0xe9
  409b45:	push   ds
  409b46:	sbb    al,0x25
  409b48:	adc    eax,0xa4653c29
  409b4d:	xchg   BYTE PTR [edx-0x1b180a9b],ch
  409b53:	stos   DWORD PTR es:[edi],eax
  409b54:	dec    edx
  409b55:	jne    0x409b86
  409b57:	popf   
  409b58:	popa   
  409b59:	fiadd  DWORD PTR [ebx+0x5c]
  409b5c:	dec    edx
  409b5d:	mov    BYTE PTR [ebx-0x43a71902],dh
  409b63:	or     al,0xc3
  409b65:	xchg   edi,eax
  409b66:	call   0xb5696e11
  409b6b:	add    DWORD PTR ds:0x2dc27ceb,esi
  409b71:	mov    ebx,0x86f9e9b4
  409b76:	les    edx,FWORD PTR [esi]
  409b78:	inc    esi
  409b79:	jns    0x409b6a
  409b7b:	mov    ch,0xbe
  409b7d:	gs es icebp 
  409b80:	xor    ecx,DWORD PTR [eax-0x23]
  409b83:	lea    esp,[ebx+0x6ec95de4]
  409b89:	repz sbb eax,0xb3731e8e
  409b8f:	test   al,0x89
  409b91:	xor    edi,DWORD PTR [edi-0x70]
  409b94:	dec    eax
  409b95:	(bad)
  409b99:	(bad)  
  409b9a:	test   eax,0xf3372e9d
  409b9f:	push   ebx
  409ba0:	stos   BYTE PTR es:[edi],al
  409ba1:	xchg   ebx,eax
  409ba2:	sbb    ch,al
  409ba4:	nop
  409ba5:	adc    DWORD PTR [edi+0x41ebc72d],0xffffffa6
  409bac:	xor    BYTE PTR [esi+eiz*1-0x78b03e98],dl
  409bb3:	lds    ebp,FWORD PTR ds:0x4f9e2677
  409bb9:	cmp    eax,0x1b522129
  409bbe:	mov    eax,ds:0xbefb0401
  409bc3:	sub    eax,0xfc1d5a07
  409bc8:	ins    DWORD PTR es:[edi],dx
  409bc9:	popa   
  409bca:	retf   
  409bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bcc:	add    eax,0x12fa6c48
  409bd1:	xchg   DWORD PTR [ebp-0x7d],edx
  409bd4:	je     0x409bbe
  409bd6:	jge    0x409c46
  409bd8:	fistp  DWORD PTR [ebp+0x2b]
  409bdb:	mov    bl,0xe1
  409bdd:	or     eax,0x2d1c2472
  409be2:	pop    edx
  409be3:	or     esi,DWORD PTR [ecx-0x48]
  409be6:	lahf   
  409be7:	mov    cl,0xea
  409be9:	jnp    0x409c32
  409beb:	sub    al,0x50
  409bed:	mov    ah,0x49
  409bef:	test   eax,0x4e917dba
  409bf4:	div    DWORD PTR [edx]
  409bf6:	jbe    0x409bae
  409bf8:	cmp    eax,DWORD PTR [edx]
  409bfa:	pop    eax
  409bfb:	jmp    0x8f0868fe
  409c00:	mov    al,ds:0x7082f866
  409c05:	dec    esi
  409c06:	jmp    0x3380:0x1107b2ef
  409c0d:	adc    al,0x4a
  409c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c10:	jmp    0xa47c80c8
  409c15:	and    DWORD PTR [edi-0x53],esi
  409c18:	add    esp,DWORD PTR [esi]
  409c1a:	adc    DWORD PTR [eax-0x5a6be3c4],edx
  409c20:	rol    DWORD PTR [esi],cl
  409c22:	inc    ecx
  409c23:	stos   DWORD PTR es:[edi],eax
  409c24:	mul    DWORD PTR [eax]
  409c26:	clc    
  409c27:	add    eax,0x557f76d0
  409c2c:	int3   
  409c2d:	mov    dh,0x5d
  409c2f:	jne    0x409bfb
  409c31:	les    ebp,FWORD PTR [ebp+0x7]
  409c34:	pop    ecx
  409c35:	sti    
  409c36:	sbb    DWORD PTR [edx],edi
  409c38:	imul   esp,DWORD PTR ss:[esi-0x26],0x6dce6019
  409c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c41:	test   bl,bl
  409c43:	iret   
  409c44:	mov    bh,0x3d
  409c46:	leave  
  409c47:	pushf  
  409c48:	sbb    DWORD PTR [edx-0x28a6ba62],eax
  409c4e:	neg    BYTE PTR [ebx-0x2c]
  409c51:	pop    esp
  409c52:	mov    edi,0x2a4d52ea
  409c57:	and    al,0x96
  409c59:	or     dh,BYTE PTR [edi-0x160d11b5]
  409c5f:	dec    esi
  409c60:	in     eax,dx
  409c61:	ret    0x37b6
  409c64:	jmp    0xc1e3583a
  409c69:	mov    esi,0xa2d56336
  409c6e:	les    edx,FWORD PTR [eax-0xc3d21b0]
  409c74:	adc    eax,0x1d6865ad
  409c79:	repz inc ecx
  409c7b:	fnstcw WORD PTR [eax-0x58]
  409c7e:	and    al,0x88
  409c80:	lods   eax,DWORD PTR ds:[esi]
  409c81:	stc    
  409c82:	retf   0x84bb
  409c85:	or     BYTE PTR [eax-0x58ea65bb],al
  409c8b:	push   0x516428fb
  409c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c91:	dec    ebx
  409c92:	js     0x409cb4
  409c94:	mov    eax,ds:0xc9098d0f
  409c99:	in     eax,0x98
  409c9b:	lea    esi,cs:[edx+0x69]
  409c9f:	les    esp,FWORD PTR [eax]
  409ca1:	retf   
  409ca2:	int3   
  409ca3:	push   edi
  409ca4:	retf   
  409ca5:	scas   eax,DWORD PTR es:[edi]
  409ca6:	xchg   edi,eax
  409ca7:	retf   0x5cf7
  409caa:	jmp    0x409c46
  409cac:	adc    eax,0xfd4a0565
  409cb1:	xor    ebx,esi
  409cb3:	es mov ch,0xab
  409cb6:	(bad)  
  409cb8:	and    BYTE PTR [ebx+edi*1-0x2b],cl
  409cbc:	sub    BYTE PTR [ecx+0x7a],dl
  409cbf:	inc    edx
  409cc0:	mov    esp,0x3d25cff4
  409cc5:	imul   edx,ebp,0xffffff9a
  409cc8:	das    
  409cc9:	cmp    DWORD PTR [ecx+0x5fdf05c8],eax
  409ccf:	test   DWORD PTR [edx+0x7b825724],ecx
  409cd5:	dec    eax
  409cd6:	xchg   esi,eax
  409cd7:	ret    0x5f38
  409cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cdb:	jmp    0xeea0:0x497ed88c
  409ce2:	push   esp
  409ce3:	add    al,0x45
  409ce5:	dec    ebp
  409ce6:	push   ebp
  409ce7:	fwait
  409ce8:	sbb    al,0xd5
  409cea:	or     esi,edi
  409cec:	ds mov cl,0x49
  409cef:	cmp    al,dl
  409cf1:	or     DWORD PTR [ebx-0x885dee2],edi
  409cf7:	div    BYTE PTR [ecx]
  409cf9:	outs   dx,BYTE PTR ds:[esi]
  409cfa:	adc    BYTE PTR [edi],bl
  409cfc:	div    eax
  409cfe:	jae    0x409ca7
  409d00:	xchg   ebp,eax
  409d01:	fbstp  TBYTE PTR [edx+0x3d]
  409d04:	jmp    0xc799323d
  409d09:	pushf  
  409d0a:	fisttp WORD PTR [edx+0x1e]
  409d0d:	cwde   
  409d0e:	mov    edx,0xa9f4f403
  409d13:	out    dx,eax
  409d14:	xor    eax,0x3ebb96ff
  409d19:	pop    ecx
  409d1a:	adc    BYTE PTR [ecx-0x31],bh
  409d1d:	push   ebx
  409d1e:	xchg   BYTE PTR [ecx],dl
  409d20:	iret   
  409d21:	inc    edi
  409d22:	test   DWORD PTR [ecx-0x2233f22c],0xc2205021
  409d2c:	pop    ds
  409d2d:	(bad)  
  409d2f:	jle    0x409d5b
  409d31:	mov    ebp,0x81a8daea
  409d36:	xor    DWORD PTR [esi+0x1f],edi
  409d39:	push   ds
  409d3a:	or     eax,0x9eacfd1c
  409d3f:	repz xchg esi,eax
  409d41:	xor    al,0x5e
  409d43:	push   esp
  409d44:	test   DWORD PTR [ecx+0x48],edi
  409d47:	fsub   st(1),st
  409d49:	push   0xc21c477b
  409d4e:	jl     0x409d5d
  409d50:	cmp    al,0x27
  409d52:	xlat   BYTE PTR ds:[ebx]
  409d53:	stos   DWORD PTR es:[edi],eax
  409d54:	push   es
  409d55:	push   esp
  409d56:	push   ebp
  409d57:	outs   dx,BYTE PTR ds:[esi]
  409d58:	pop    es
  409d59:	mov    al,ds:0x7113fbd6
  409d5e:	xor    ecx,DWORD PTR [edx]
  409d60:	mov    ds:0x7d420fa1,eax
  409d65:	fdiv   QWORD PTR [edi+0x42]
  409d68:	jle    0x409d44
  409d6a:	outs   dx,DWORD PTR ds:[esi]
  409d6b:	mov    BYTE PTR [ebx-0x7d],bl
  409d6e:	mov    ebp,0x95dc4856
  409d73:	(bad)  
  409d74:	into   
  409d75:	ss mov edx,0xafbd3826
  409d7b:	test   BYTE PTR [edi+edx*2+0x1e62b65b],dh
  409d82:	lods   eax,DWORD PTR ds:[esi]
  409d83:	daa    
  409d84:	loop   0x409d8a
  409d86:	push   0x316fddb7
  409d8b:	imul   ebp,DWORD PTR [ebp-0x1790b17],0x42
  409d92:	pop    es
  409d93:	mov    al,0x24
  409d95:	push   es
  409d96:	xor    edi,0xffffffb3
  409d99:	push   ecx
  409d9a:	pusha  
  409d9b:	(bad)  
  409d9d:	mov    ch,0xbb
  409d9f:	pop    ss
  409da0:	xchg   BYTE PTR [ebx+edi*4],bh
  409da3:	es mov dl,0x5c
  409da6:	mov    esi,0x5ee64035
  409dab:	pop    ss
  409dac:	sbb    DWORD PTR [ebx],eax
  409dae:	push   0x50
  409db0:	xchg   ebx,eax
  409db1:	repnz pop eax
  409db3:	mov    ah,0x49
  409db5:	loopne 0x409d98
  409db7:	aaa    
  409db8:	inc    ecx
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	cmp    ebp,DWORD PTR [eax+esi*8+0x21482e11]
  409dc1:	lods   eax,DWORD PTR ds:[esi]
  409dc2:	pop    DWORD PTR [edi+0x16833f07]
  409dc8:	adc    cl,bh
  409dca:	sbb    DWORD PTR [esi-0x1e],esp
  409dcd:	and    ecx,DWORD PTR [ebx-0x357e40e]
  409dd3:	inc    ebp
  409dd4:	jp     0x409e1b
  409dd6:	push   esi
  409dd7:	push   0xffffffb7
  409dd9:	mov    ebx,edx
  409ddb:	hlt    
  409ddc:	jnp    0x409dac
  409dde:	cmp    DWORD PTR [edi+0x726df194],esp
  409de4:	outs   dx,DWORD PTR ds:[esi]
  409de5:	push   ebp
  409de6:	add    ecx,esi
  409de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409de9:	inc    ebp
  409dea:	in     al,0x1f
  409dec:	cmp    eax,0x304f9520
  409df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df2:	(bad)  
  409df3:	and    BYTE PTR [edi],0x4a
  409df6:	scas   eax,DWORD PTR es:[edi]
  409df7:	dec    esi
  409df8:	shl    DWORD PTR [ebx],cl
  409dfa:	pop    eax
  409dfb:	in     eax,dx
  409dfc:	inc    ecx
  409dfd:	mov    ebp,0x81f202f4
  409e02:	xchg   ebp,eax
  409e03:	retf   0x63ef
  409e06:	popf   
  409e07:	add    eax,0x91b83c17
  409e0c:	cmp    esi,DWORD PTR [esi+0x5]
  409e0f:	lea    esi,[ecx-0x53]
  409e12:	mov    edx,0xcfe7367b
  409e17:	or     DWORD PTR [edi],ebp
  409e19:	ss nop
  409e1b:	pop    ds
  409e1c:	push   edi
  409e1d:	or     bl,dh
  409e1f:	mov    WORD PTR [esi-0xf],ds
  409e22:	aam    0x8f
  409e24:	fs test eax,0xa8bf69f0
  409e2a:	repz sbb eax,0x7dcfd8de
  409e30:	xchg   esp,eax
  409e31:	jb     0x409e71
  409e33:	mov    ah,0xf1
  409e35:	lock pushf 
  409e37:	pop    esi
  409e38:	call   0x295:0xb0e5f9e3
  409e3f:	les    eax,FWORD PTR [ebx-0x5e7b8da0]
  409e45:	pushf  
  409e46:	mov    al,0x21
  409e48:	daa    
  409e49:	retf   
  409e4a:	retf   
  409e4b:	call   0x42d3f5d7
  409e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e51:	test   al,0x2d
  409e53:	stos   BYTE PTR es:[edi],al
  409e54:	inc    esi
  409e55:	test   DWORD PTR [ebp+0x487a4160],edi
  409e5b:	loope  0x409e69
  409e5d:	leave  
  409e5e:	pop    ebx
  409e5f:	push   0xffffffc3
  409e61:	std    
  409e62:	loop   0x409ec4
  409e64:	inc    ebp
  409e65:	call   0xa93fc611
  409e6a:	mov    ds:0x2a39433,al
  409e6f:	and    eax,0x207020e6
  409e74:	outs   dx,BYTE PTR ds:[esi]
  409e75:	inc    edi
  409e76:	jp     0x409e4d
  409e78:	mov    ds:0x3c08490a,al
  409e7d:	fidiv  DWORD PTR [edi-0x621b2d01]
  409e83:	lods   eax,DWORD PTR ds:[esi]
  409e84:	aad    0x21
  409e86:	inc    esi
  409e87:	xchg   ebx,eax
  409e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e89:	fwait
  409e8a:	and    BYTE PTR [ebx+edx*2-0x2a46dd0d],ah
  409e91:	mov    bl,0xf5
  409e93:	fld    TBYTE PTR [ebx]
  409e95:	jp     0x409e88
  409e97:	cld    
  409e98:	sbb    esp,ebx
  409e9a:	inc    esp
  409e9b:	je     0x409ec7
  409e9d:	inc    edi
  409e9e:	iret   
  409e9f:	pop    es
  409ea0:	mov    WORD PTR [ebp+0x68513283],?
  409ea6:	sub    ch,0xf5
  409ea9:	mov    BYTE PTR [ebp-0x3b],dh
  409eac:	and    esp,DWORD PTR ds:0x7c1dd07f
  409eb2:	pop    es
  409eb3:	inc    ebp
  409eb4:	add    BYTE PTR [esi],dl
  409eb6:	xchg   ebp,eax
  409eb7:	sub    al,0x47
  409eb9:	dec    edx
  409eba:	pop    ds
  409ebb:	leave  
  409ebc:	mov    esi,0x5d4b0ba8
  409ec1:	and    DWORD PTR [ebp+0x76f91548],0xffffffa8
  409ec8:	cld    
  409ec9:	push   esp
  409eca:	(bad)
  409ecd:	push   esp
  409ece:	data16 lahf 
  409ed0:	mov    al,ds:0xd8021db0
  409ed5:	sub    al,0xe2
  409ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed8:	xchg   ecx,eax
  409ed9:	div    DWORD PTR [ecx+0x39]
  409edc:	mov    BYTE PTR [edx],ch
  409ede:	fcom   QWORD PTR [eax+0x74]
  409ee1:	out    0x8d,eax
  409ee3:	(bad)  
  409ee4:	gs loop 0x409ec0
  409ee7:	loopne 0x409f53
  409ee9:	inc    edx
  409eea:	pop    esi
  409eeb:	xchg   edx,eax
  409eec:	mov    ebx,0xceda1296
  409ef1:	jae    0x409eda
  409ef3:	mov    ah,0x28
  409ef5:	(bad)  
  409ef6:	dec    ebp
  409ef7:	mov    ah,0x40
  409ef9:	xchg   edi,eax
  409efa:	sti    
  409efb:	sub    edx,DWORD PTR [edi+ebx*8-0x2b]
  409eff:	and    al,0xf9
  409f01:	jns    0x409f0e
  409f03:	shr    BYTE PTR [edi],cl
  409f05:	xlat   BYTE PTR ds:[ebx]
  409f06:	xor    ebx,DWORD PTR [esi+0x4]
  409f09:	jecxz  0x409f2d
  409f0b:	in     eax,0xff
  409f0d:	clc    
  409f0e:	lea    esp,[ecx+0x249b7643]
  409f14:	mov    dh,0xa5
  409f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f17:	sub    DWORD PTR [eax],0xc3929605
  409f1d:	or     BYTE PTR [eax-0x2516b71b],bh
  409f23:	std    
  409f24:	and    bh,BYTE PTR [ebp+0x3f7ecd7c]
  409f2a:	dec    esi
  409f2b:	mov    eax,ds:0xcfec57d7
  409f30:	int    0x76
  409f32:	adc    BYTE PTR [esi-0x26bc4579],bl
  409f38:	shl    DWORD PTR [edx-0x966b142],1
  409f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f3f:	cmp    BYTE PTR [ebp-0x21],ah
  409f42:	mov    cl,0x16
  409f44:	sahf   
  409f45:	cli    
  409f46:	or     eax,0x6c47c6e5
  409f4b:	shl    DWORD PTR [esi+esi*2+0x3e],cl
  409f4f:	ror    BYTE PTR [edx+0x6c7abdf6],1
  409f55:	jmp    0x13569bd7
  409f5a:	push   esp
  409f5b:	fdivr  DWORD PTR [edx+edx*1+0x9b25d2]
  409f62:	retf   0x2731
  409f65:	int3   
  409f66:	leave  
  409f67:	mov    cl,0x8e
  409f69:	rcr    BYTE PTR [esi-0x4e],cl
  409f6c:	dec    ecx
  409f6d:	stos   DWORD PTR es:[edi],eax
  409f6e:	js     0x409fc1
  409f70:	rol    bl,1
  409f72:	fsub   st,st(1)
  409f74:	jmp    0xdd9600fa
  409f79:	sub    DWORD PTR [ebp+0x67],0xa02cdd6e
  409f80:	pop    esi
  409f81:	xchg   DWORD PTR [ecx+edx*2],ebp
  409f84:	add    BYTE PTR [edx+0x79d82be2],0x4d
  409f8b:	out    0x82,al
  409f8d:	ret    
  409f8e:	sbb    bh,al
  409f90:	jl     0x40a00c
  409f92:	loop   0x409f7e
  409f94:	sub    al,0xf9
  409f96:	inc    ebp
  409f97:	sbb    al,0x4
  409f99:	ja     0x409f2c
  409f9b:	and    BYTE PTR [ebp+0x5f],dh
  409f9e:	loop   0x409f9a
  409fa0:	repz xchg esi,eax
  409fa2:	(bad)  
  409fa3:	cmp    al,0xf6
  409fa5:	sbb    DWORD PTR [edi*4-0x72ed0470],0x5a18fb82
  409fb0:	or     bl,dh
  409fb2:	clc    
  409fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb4:	jns    0x409f59
  409fb6:	jmp    0x409f6d
  409fb8:	xor    eax,0xd8048f88
  409fbd:	jmp    0x409f85
  409fbf:	mov    ecx,0xc3c4c508
  409fc4:	or     dl,BYTE PTR [ecx+0x4a]
  409fc7:	push   es
  409fc8:	jle    0x40a039
  409fca:	std    
  409fcb:	add    esi,DWORD PTR [edx+edx*4]
  409fce:	adc    dl,BYTE PTR [esi+0x66293980]
  409fd4:	test   al,0xdd
  409fd6:	bound  esi,QWORD PTR [ebx-0x3a]
  409fd9:	fdiv   QWORD PTR [esi-0x6a872d2a]
  409fdf:	jbe    0x40a040
  409fe1:	adc    eax,0x5f8982d6
  409fe6:	inc    ecx
  409fe7:	push   ebp
  409fe8:	out    dx,eax
  409fe9:	push   cs
  409fea:	mov    al,cs:0xbb202c09
  409ff0:	xor    al,0x3e
  409ff2:	aam    0xd3
  409ff4:	pop    ecx
  409ff5:	mov    dl,0x7c
  409ff7:	mov    ss,WORD PTR [esi-0x75]
  409ffa:	push   ecx
  409ffb:	add    BYTE PTR [ecx-0x4909e24d],dl
  40a001:	je     0x409ff8
  40a003:	sbb    BYTE PTR [edx-0x72],0xa7
  40a007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a008:	jb     0x40a039
  40a00a:	add    BYTE PTR [edi],0x6
  40a00d:	push   esi
  40a00e:	ins    BYTE PTR es:[edi],dx
  40a00f:	add    eax,0x33e8c30c
  40a014:	xchg   cl,bl
  40a016:	cli    
  40a017:	in     eax,0x81
  40a019:	or     ah,BYTE PTR [ecx+0x1609970f]
  40a01f:	fld    TBYTE PTR ds:[eax]
  40a022:	fild   QWORD PTR [eax-0x19b933cc]
  40a028:	add    dh,BYTE PTR [ecx]
  40a02a:	cmp    edx,ecx
  40a02c:	cmp    eax,DWORD PTR ds:0x941f651b
  40a032:	jmp    0x163fa0f5
  40a037:	dec    ebp
  40a038:	add    dl,BYTE PTR [edi+0x58]
  40a03b:	arpl   WORD PTR [edx-0x14f5d09d],dx
  40a041:	dec    edi
  40a042:	or     bh,BYTE PTR [ecx]
  40a044:	mov    ds:0xbfa792da,al
  40a049:	out    0xba,eax
  40a04b:	cmp    DWORD PTR [esi],edx
  40a04d:	lods   eax,DWORD PTR ds:[esi]
  40a04e:	jae    0x40a05d
  40a050:	mov    dl,0x25
  40a052:	call   0x60be:0x18881968
  40a059:	mov    ecx,gs
  40a05b:	jno    0x40a02f
  40a05d:	sub    cl,dh
  40a05f:	adc    ah,BYTE PTR [ebx-0x77]
  40a062:	dec    esi
  40a063:	dec    edi
  40a064:	dec    ebp
  40a065:	repz clc 
  40a067:	fistp  QWORD PTR [ebp+0x25]
  40a06a:	mov    BYTE PTR [edi+esi*4+0x79],cl
  40a06e:	push   0x72
  40a070:	repz mov esi,0xfd5d3ade
  40a076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a077:	fimul  DWORD PTR [ecx-0x56]
  40a07a:	jmp    0x40a025
  40a07c:	adc    edx,ecx
  40a07e:	inc    ebp
  40a07f:	cwde   
  40a080:	pop    ebp
  40a081:	out    dx,al
  40a082:	test   al,0x4a
  40a084:	out    0x1e,al
  40a086:	fimul  WORD PTR [edi-0x74]
  40a089:	xchg   ebx,eax
  40a08a:	popa   
  40a08b:	rcr    dl,1
  40a08d:	or     cl,BYTE PTR [eax]
  40a08f:	loop   0x40a05f
  40a091:	push   ebp
  40a092:	aam    0xce
  40a094:	pop    eax
  40a095:	into   
  40a096:	mov    DWORD PTR [edx+0x49e00f87],0x94c4b4a5
  40a0a0:	jnp    0x40a0ef
  40a0a2:	aam    0x5b
  40a0a4:	jb     0x40a0fe
  40a0a6:	fcomi  st,st(6)
  40a0a8:	dec    esp
  40a0a9:	add    al,BYTE PTR [ecx+ebp*1-0x58dbe41e]
  40a0b0:	and    al,0x4
  40a0b2:	aas    
  40a0b3:	add    BYTE PTR [ebx-0x7501a950],dl
  40a0b9:	ds sub eax,0x344e6485
  40a0bf:	enter  0x5f65,0x86
  40a0c3:	test   DWORD PTR [ecx+0x1a],edx
  40a0c6:	lds    esi,FWORD PTR [ebp+0x41]
  40a0c9:	fcomp  QWORD PTR [eax+0x2de8ce2b]
  40a0cf:	jb     0x40a0bc
  40a0d1:	les    esp,FWORD PTR [eax+0x32]
  40a0d4:	stos   BYTE PTR es:[edi],al
  40a0d5:	mov    edi,0xacc90b0e
  40a0da:	in     eax,dx
  40a0db:	inc    ebp
  40a0dc:	jle    0x40a158
  40a0de:	jl     0x40a072
  40a0e0:	mov    esi,0xbfbee18f
  40a0e5:	repnz add bl,BYTE PTR [eax-0x4df91a2e]
  40a0ec:	add    eax,0x43be0e38
  40a0f1:	xchg   ecx,eax
  40a0f2:	idiv   DWORD PTR [ecx-0x7f]
  40a0f5:	rcr    BYTE PTR [edx+0x20],cl
  40a0f8:	stos   BYTE PTR es:[edi],al
  40a0f9:	cmp    al,0x46
  40a0fb:	sub    eax,0x2eb667a3
  40a100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a101:	inc    esp
  40a102:	mov    edx,0xd1cc8d53
  40a107:	das    
  40a108:	inc    edi
  40a109:	ror    BYTE PTR [edi*2+0x445fe914],cl
  40a110:	aad    0x6c
  40a112:	iret   
  40a113:	lods   eax,DWORD PTR ds:[esi]
  40a114:	mov    ebx,edx
  40a116:	jge    0x40a137
  40a118:	mov    DWORD PTR [ebx-0x7f],esp
  40a11b:	push   0x285f4a6f
  40a120:	test   al,0x4
  40a122:	sub    al,0x8e
  40a124:	je     0x40a159
  40a126:	cs inc esp
  40a128:	or     DWORD PTR [ebp+eiz*8+0x5e],esi
  40a12c:	imul   esi,ebp,0xec04f980
  40a132:	repz cwde 
  40a134:	and    eax,0x5859a769
  40a139:	mov    ds:0xc68932c5,eax
  40a13e:	call   0x14bce3fc
  40a143:	aam    0x73
  40a145:	add    eax,DWORD PTR [ecx]
  40a147:	cmp    eax,0x87dd9b7f
  40a14c:	push   0x4da3c72
  40a151:	repz cs jae 0x40a1bc
  40a155:	in     al,0x85
  40a157:	adc    eax,DWORD PTR [edx+eiz*4+0x2b]
  40a15b:	dec    eax
  40a15c:	lea    ebx,[ecx+0x4a]
  40a15f:	sbb    ecx,DWORD PTR ds:0x87ec094d
  40a165:	push   ebp
  40a166:	sub    dl,BYTE PTR [edi-0x3d]
  40a169:	mov    bh,0x83
  40a16b:	rol    DWORD PTR [edx+0x16df7feb],1
  40a171:	sbb    bh,BYTE PTR [esi+0x2f7af237]
  40a177:	cmp    dl,dh
  40a179:	xor    ecx,ebx
  40a17b:	mov    ds:0xdb457a57,eax
  40a180:	sub    eax,DWORD PTR [ebp+0x16]
  40a183:	jecxz  0x40a143
  40a185:	outs   dx,BYTE PTR ds:[esi]
  40a186:	push   edx
  40a187:	push   ecx
  40a188:	pop    ds
  40a189:	fist   DWORD PTR [edi]
  40a18b:	ins    BYTE PTR es:[edi],dx
  40a18c:	(bad)  
  40a18d:	arpl   WORD PTR [edx-0x48],si
  40a190:	cmovge edi,esi
  40a193:	mov    ds:0xe6c90801,eax
  40a198:	test   DWORD PTR [edi],eax
  40a19a:	inc    esi
  40a19b:	pop    ebp
  40a19c:	adc    al,0xbd
  40a19e:	js     0x40a1fc
  40a1a0:	mov    ds:0x81468450,al
  40a1a5:	std    
  40a1a6:	pop    esi
  40a1a7:	cs pop eax
  40a1a9:	jnp    0x40a159
  40a1ab:	mov    al,0x9e
  40a1ad:	jle    0x40a210
  40a1af:	inc    esi
  40a1b0:	jae    0x40a219
  40a1b2:	and    esi,ebp
  40a1b4:	pop    ecx
  40a1b5:	and    dh,dl
  40a1b7:	and    dh,dh
  40a1b9:	pop    ebp
  40a1ba:	inc    esp
  40a1bb:	popf   
  40a1bc:	retf   
  40a1bd:	fimul  WORD PTR [edi]
  40a1c0:	xor    ebp,DWORD PTR [edi]
  40a1c2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a1c4:	add    ecx,DWORD PTR [ecx]
  40a1c6:	cmp    ebp,DWORD PTR gs:[ebx+edi*4+0x19]
  40a1cb:	jns    0x40a221
  40a1cd:	(bad)  
  40a1ce:	cmp    BYTE PTR [ebx-0x141849fd],cl
  40a1d4:	jnp    0x40a22d
  40a1d6:	mov    al,0xd
  40a1d8:	sar    DWORD PTR [eax+ecx*2-0x56d1676e],0xff
  40a1e0:	ins    BYTE PTR es:[edi],dx
  40a1e1:	push   es
  40a1e2:	sahf   
  40a1e3:	mov    bl,BYTE PTR [ecx+0x70]
  40a1e6:	adc    eax,0x8284becb
  40a1eb:	into   
  40a1ec:	adc    eax,0x8696c757
  40a1f1:	inc    edi
  40a1f2:	mov    edx,0xbcf5a7e6
  40a1f7:	or     al,0x4
  40a1f9:	sub    DWORD PTR [edx],ecx
  40a1fb:	xchg   esi,eax
  40a1fc:	add    dl,BYTE PTR [edx]
  40a1fe:	stos   BYTE PTR es:[edi],al
  40a1ff:	mov    DWORD PTR [edi+edx*4-0x30f17121],ebx
  40a206:	jmp    0x71e1:0x5f9e2559
  40a20d:	inc    ecx
  40a20e:	jl     0x40a21a
  40a210:	inc    eax
  40a211:	mov    ebp,0xc3b9a4ce
  40a216:	mov    eax,ds:0x808d3ce2
  40a21b:	push   cs
  40a21c:	outs   dx,BYTE PTR ds:[esi]
  40a21d:	add    BYTE PTR [ebx-0x54438a4],bl
  40a223:	push   cs
  40a224:	xor    al,0x79
  40a226:	repz pop ss
  40a228:	retf   0x27aa
  40a22b:	arpl   WORD PTR [edi+0x4e],ax
  40a22e:	dec    edx
  40a22f:	mov    edx,0x5c0dd504
  40a234:	sub    eax,0x34da8185
  40a239:	pop    esi
  40a23a:	mov    esp,0xbd409345
  40a23f:	inc    ebx
  40a240:	xlat   BYTE PTR ds:[ebx]
  40a241:	in     al,0xc2
  40a243:	jl     0x40a23a
  40a245:	fwait
  40a246:	lds    esp,FWORD PTR fs:[edi+0x10f66d53]
  40a24d:	int3   
  40a24e:	add    eax,0xa2ec983b
  40a253:	mov    DWORD PTR [ecx],0x824a674a
  40a259:	lea    eax,[eax+edi*1+0x64e5c4]
  40a260:	mov    edi,DWORD PTR [ebp+0xc]
  40a263:	xor    edi,ecx
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	(bad)  [ecx]
  40abd9:	xlat   BYTE PTR ds:[ebx]
  40abda:	lea    ecx,[esi]
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	sbb    dl,dh
  40abe5:	xchg   ebp,eax
  40abe6:	adc    ch,bl
  40abe8:	inc    esp
  40abe9:	push   ss
  40abea:	xlat   BYTE PTR ds:[ebx]
  40abeb:	loopne 0x40ab6f
  40abed:	leave  
  40abee:	and    edx,ecx
  40abf0:	lahf   
  40abf1:	inc    esi
  40abf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf3:	xchg   edx,eax
  40abf4:	sar    ebp,1
  40abf6:	ja     0x40aba6
  40abf8:	pop    es
  40abf9:	repnz cmp eax,0xd8304317
  40abff:	jno    0x40abad
  40ac01:	push   es
  40ac02:	fcmove st,st(3)
  40ac04:	out    0xac,eax
  40ac06:	mov    esi,DWORD PTR [eax+0x1e32703d]
  40ac0c:	fwait
  40ac0d:	mov    al,0x3f
  40ac0f:	and    esi,DWORD PTR [edx]
  40ac11:	loop   0x40ab9c
  40ac13:	rcl    DWORD PTR [ecx*1+0x6abde229],1
  40ac1a:	call   0xb1fabb9b
  40ac1f:	or     bh,al
  40ac21:	cmp    BYTE PTR [ecx-0x6f],cl
  40ac24:	sti    
  40ac25:	mov    ecx,ebp
  40ac27:	div    esp
  40ac29:	cmp    edx,DWORD PTR [ebx+edx*4+0x72]
  40ac2d:	mov    dh,0x7d
  40ac2f:	std    
  40ac30:	push   0x14
  40ac32:	add    BYTE PTR [ebx],dh
  40ac34:	cmc    
  40ac35:	lds    ebx,FWORD PTR [ecx+ecx*8+0x17e6a018]
  40ac3c:	mov    dh,0x36
  40ac3e:	add    BYTE PTR [esi-0x50],ch
  40ac41:	enter  0xc9b8,0xff
  40ac45:	fcom   QWORD PTR [ebp-0x7a]
  40ac48:	(bad)  
  40ac49:	jge    0x40ac80
  40ac4b:	push   esi
  40ac4c:	jb     0x40aca4
  40ac4e:	mov    esp,0x21477918
  40ac53:	shl    ecx,1
  40ac55:	mov    WORD PTR [ecx],?
  40ac57:	add    bl,BYTE PTR [ecx+0x2e]
  40ac5a:	dec    esp
  40ac5b:	icebp  
  40ac5c:	neg    DWORD PTR es:[esi-0x3f]
  40ac60:	ja     0x40ac38
  40ac62:	push   esi
  40ac63:	inc    eax
  40ac64:	rcr    BYTE PTR [edx+0x7ca9d3aa],0x51
  40ac6b:	fsub   QWORD PTR [esi+edi*8]
  40ac6e:	fcomip st,st(2)
  40ac70:	sbb    edx,DWORD PTR [eax+0x9]
  40ac73:	xor    ebx,DWORD PTR [ebp+0x4d313dc3]
  40ac79:	pop    eax
  40ac7a:	loop   0x40acb5
  40ac7c:	sub    DWORD PTR [ebx-0x2f],eax
  40ac7f:	cwde   
  40ac80:	out    dx,eax
  40ac81:	scas   al,BYTE PTR es:[edi]
  40ac82:	pop    esi
  40ac83:	out    dx,eax
  40ac84:	mov    ecx,0x504a379c
  40ac89:	push   ds
  40ac8a:	(bad)  
  40ac8c:	ins    DWORD PTR es:[edi],dx
  40ac8d:	aaa    
  40ac8e:	dec    ebp
  40ac8f:	push   edi
  40ac90:	call   0x7000:0xf1dbd954
  40ac97:	popa   
  40ac98:	cwde   
  40ac99:	jl     0x40aca8
  40ac9b:	jb     0x40ad14
  40ac9d:	mov    WORD PTR [edx-0x6ab31b42],cs
  40aca3:	cwde   
  40aca4:	adc    DWORD PTR [eax],ebx
  40aca6:	mov    ebp,0x8aac288d
  40acab:	inc    ecx
  40acac:	pop    ebx
  40acad:	mov    edx,0xe01af512
  40acb2:	(bad)  
  40acb3:	lahf   
  40acb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acb5:	pop    ecx
  40acb6:	popa   
  40acb7:	jno    0x40ac58
  40acb9:	and    eax,DWORD PTR [edx-0x1b]
  40acbc:	xchg   ebp,eax
  40acbd:	push   eax
  40acbe:	sub    bh,bh
  40acc0:	enter  0x95e6,0xab
  40acc4:	jle    0x40ad19
  40acc6:	dec    ecx
  40acc7:	mov    ds:0x885f1215,eax
  40accc:	jbe    0x40ac5d
  40acce:	add    DWORD PTR [eax-0x10caeba8],esp
  40acd4:	pop    esi
  40acd5:	fcomp  DWORD PTR [ebx+eiz*2-0x6b]
  40acd9:	lock push 0x233255ee
  40acdf:	in     al,dx
  40ace0:	mov    cl,0x4f
  40ace2:	outs   dx,BYTE PTR ds:[esi]
  40ace3:	imul   edx,DWORD PTR [edx-0x6efb36e3],0x66d28b1c
  40aced:	jo     0x40accd
  40acef:	ins    BYTE PTR es:[edi],dx
  40acf0:	mov    dh,0x1f
  40acf2:	cmc    
  40acf3:	mov    ds:0xeee70afa,al
  40acf8:	or     DWORD PTR [esi+0xc3c2fbf],edx
  40acfe:	outs   dx,DWORD PTR ds:[esi]
  40acff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad00:	call   0x52c1:0x4f848018
  40ad07:	or     al,0xc6
  40ad09:	mov    eax,ds:0x4ca04861
  40ad0e:	jns    0x40acb0
  40ad10:	xchg   edx,eax
  40ad11:	and    DWORD PTR [ebx+0x6df06485],esi
  40ad17:	or     ebx,edi
  40ad19:	mov    bl,0x2a
  40ad1b:	inc    esi
  40ad1c:	stos   BYTE PTR es:[edi],al
  40ad1d:	dec    ecx
  40ad1e:	push   0xffffffc8
  40ad20:	into   
  40ad21:	enter  0xe7d2,0x51
  40ad25:	xchg   edx,eax
  40ad26:	push   0x15b57491
  40ad2b:	bound  esi,QWORD PTR [esi+0x6b]
  40ad2e:	in     al,dx
  40ad2f:	shr    BYTE PTR ss:[esi+0x77],cl
  40ad33:	mov    esp,0xd1fff079
  40ad38:	push   eax
  40ad39:	call   0xabea:0xfb50ee71
  40ad40:	jno    0x40acf1
  40ad42:	push   es
  40ad43:	pop    es
  40ad44:	mov    edx,0x9e9df255
  40ad49:	sbb    DWORD PTR [ebp-0x77],eax
  40ad4c:	fs push ebx
  40ad4e:	sahf   
  40ad4f:	xor    al,0x1a
  40ad51:	add    BYTE PTR es:[edx-0xc],cl
  40ad55:	mov    cl,0x10
  40ad57:	cmp    eax,0xd8f8b80d
  40ad5c:	pushf  
  40ad5d:	xchg   edi,eax
  40ad5e:	push   0x84b7793
  40ad63:	out    0xa3,al
  40ad65:	cmp    BYTE PTR [ecx],ch
  40ad67:	jns    0x40ad35
  40ad69:	lahf   
  40ad6a:	aaa    
  40ad6b:	add    edx,DWORD PTR [ebx+ecx*2]
  40ad6e:	aaa    
  40ad6f:	sub    dh,BYTE PTR [esi+eax*4]
  40ad72:	popa   
  40ad73:	pop    ds
  40ad74:	repz xor eax,DWORD PTR [ebp-0x78]
  40ad78:	pop    ds
  40ad79:	sbb    DWORD PTR [esi],ebp
  40ad7b:	or     DWORD PTR [ebx],edi
  40ad7d:	es inc edx
  40ad7f:	or     eax,0xe22ff691
  40ad84:	push   edx
  40ad85:	pop    eax
  40ad86:	(bad)  
  40ad88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad89:	cmp    BYTE PTR [esi+0x42fcad03],dh
  40ad8f:	lods   al,BYTE PTR ds:[esi]
  40ad90:	or     DWORD PTR [ebx+0x6da509f9],ecx
  40ad96:	in     al,0x79
  40ad98:	and    al,0xca
  40ad9a:	push   edx
  40ad9b:	in     al,dx
  40ad9c:	(bad)
  40ad9f:	stos   BYTE PTR es:[edi],al
  40ada0:	aam    0xe9
  40ada2:	iret   
  40ada3:	adc    BYTE PTR [esi-0x11],0xa4
  40ada7:	lahf   
  40ada8:	enter  0x6f59,0xee
  40adac:	pop    ebx
  40adad:	fdivr  DWORD PTR [ebp+0x50]
  40adb0:	mov    al,ds:0xbd58e3a8
  40adb5:	mov    dl,0x7d
  40adb7:	int3   
  40adb8:	in     eax,dx
  40adb9:	dec    ebx
  40adba:	jg     0x40adb4
  40adbc:	mov    dh,0xb5
  40adbe:	pop    edx
  40adbf:	or     al,0xd3
  40adc1:	xchg   esi,eax
  40adc2:	mov    eax,0x314c9b92
  40adc7:	mov    dl,0x3d
  40adc9:	push   0xd1ce7811
  40adce:	fcmovnbe st,st(5)
  40add0:	sub    BYTE PTR ds:0x6a36060e,dl
  40add6:	mov    al,ds:0x2a61e54b
  40addb:	dec    esi
  40addc:	jge    0x40ae3b
  40adde:	mov    ebp,0x2830cc1
  40ade3:	sub    BYTE PTR [ebx+0xb01f06a],0xf8
  40adea:	aad    0x59
  40adec:	jmp    0x57f:0x740156e6
  40adf3:	and    DWORD PTR [edi+0x7439b138],edi
  40adf9:	push   ebx
  40adfa:	mov    edi,0xeb7b687
  40adff:	xchg   edi,eax
  40ae00:	or     al,0xdc
  40ae02:	outs   dx,BYTE PTR ds:[esi]
  40ae03:	idiv   BYTE PTR [ebx]
  40ae05:	out    0xbe,eax
  40ae07:	(bad)  
  40ae08:	lock adc eax,0xf9de0470
  40ae0e:	in     al,dx
  40ae0f:	jle    0x40ae2f
  40ae11:	outs   dx,BYTE PTR ds:[esi]
  40ae12:	jae    0x40ae87
  40ae14:	test   BYTE PTR [esi-0x2a],dh
  40ae17:	test   al,0xb5
  40ae19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae1a:	mov    esp,ebx
  40ae1c:	mov    cl,0x9d
  40ae1e:	mov    esi,0x37b081ad
  40ae23:	sbb    BYTE PTR [ebx-0x2b0f0462],0xa4
  40ae2a:	add    DWORD PTR [eax+0x3c],ebp
  40ae2d:	out    0x35,al
  40ae2f:	jb     0x40add9
  40ae31:	mov    ebp,0xfb076592
  40ae36:	retf   
  40ae37:	cmp    DWORD PTR [esi-0x79],edx
  40ae3a:	stos   BYTE PTR es:[edi],al
  40ae3b:	adc    dl,dh
  40ae3d:	arpl   WORD PTR [edi+0x40],bp
  40ae40:	jb     0x40aeac
  40ae42:	sbb    eax,esp
  40ae44:	adc    eax,0x47490684
  40ae49:	push   ebx
  40ae4a:	(bad)  
  40ae4b:	(bad)
  40ae4f:	push   0xffffffe6
  40ae51:	inc    ebp
  40ae52:	iret   
  40ae53:	dec    esi
  40ae54:	shl    DWORD PTR [edx+0x12a0bff7],1
  40ae5a:	cmp    ah,BYTE PTR [edi+0xa]
  40ae5d:	popf   
  40ae5e:	push   esp
  40ae5f:	dec    ebx
  40ae60:	imul   ebp,DWORD PTR [edi+0x176ba4b3],0xffffffc4
  40ae67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae68:	(bad)  
  40ae69:	out    dx,al
  40ae6a:	dec    ecx
  40ae6b:	fldcw  WORD PTR [ebp-0x1dc0c86f]
  40ae71:	pusha  
  40ae72:	sbb    cl,BYTE PTR [edi]
  40ae74:	(bad)  
  40ae75:	pop    ecx
  40ae76:	pop    ds
  40ae77:	daa    
  40ae78:	sub    BYTE PTR [esi],al
  40ae7a:	mov    ecx,eax
  40ae7c:	sar    bh,0x35
  40ae7f:	pop    es
  40ae80:	xchg   ecx,eax
  40ae81:	inc    esi
  40ae82:	jl     0x40ae24
  40ae84:	ror    BYTE PTR [eax+ecx*1+0x3920c2c8],1
  40ae8b:	add    cl,BYTE PTR [edx]
  40ae8d:	pop    esp
  40ae8e:	loopne 0x40aedf
  40ae90:	imul   esi,DWORD PTR [edx+0x21fc550d],0xcae747f4
  40ae9a:	pop    ss
  40ae9b:	xchg   esi,eax
  40ae9c:	aam    0xa1
  40ae9e:	push   0x2d
  40aea0:	mov    ch,0x61
  40aea2:	lds    ebp,FWORD PTR [edi-0x4b]
  40aea5:	xor    BYTE PTR [edx+edi*2],al
  40aea8:	adc    dl,0x71
  40aeab:	sbb    esp,ebp
  40aead:	and    BYTE PTR [eax],dh
  40aeaf:	push   esp
  40aeb0:	leave  
  40aeb1:	mov    eax,0x868cc639
  40aeb6:	bound  esp,QWORD PTR [edi-0x21433e38]
  40aebc:	xchg   ebp,eax
  40aebd:	push   esp
  40aebe:	dec    esi
  40aebf:	mov    bl,0xf0
  40aec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec2:	in     al,dx
  40aec3:	into   
  40aec4:	repz mov ds:0xaf7ead06,al
  40aeca:	add    dh,cl
  40aecc:	lea    ebx,[ebx+0x78]
  40aecf:	add    al,0xbe
  40aed1:	ja     0x40ae6a
  40aed3:	mov    edx,0x362e1fb
  40aed8:	pop    esi
  40aed9:	dec    esp
  40aeda:	std    
  40aedb:	pop    ebp
  40aedc:	into   
  40aedd:	pop    ebp
  40aede:	add    DWORD PTR [edx-0x5a007d91],eax
  40aee4:	pop    ss
  40aee5:	adc    al,0xd7
  40aee7:	cmp    eax,0x1819e301
  40aeec:	outs   dx,DWORD PTR ds:[esi]
  40aeed:	js     0x40af6d
  40aeef:	mov    ebx,0x5de0d7eb
  40aef4:	in     eax,0x55
  40aef6:	inc    edx
  40aef7:	leave  
  40aef8:	or     DWORD PTR [ebp-0x2c],ecx
  40aefb:	js     0x40aed6
  40aefd:	pop    es
  40aefe:	rcl    DWORD PTR [ebp+ecx*4-0x5e4e007c],0x45
  40af06:	cs push 0xc58ffe5
  40af0c:	stos   DWORD PTR es:[edi],eax
  40af0d:	mov    ds:0x931da8e,al
  40af12:	push   esp
  40af13:	jnp    0x40af66
  40af15:	call   0x1f63:0x61c95b3c
  40af1c:	jp     0x40aed4
  40af1e:	fcmovnbe st,st(5)
  40af20:	xchg   ebx,eax
  40af21:	shr    BYTE PTR es:[edi-0x56],1
  40af25:	pop    ebx
  40af26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af27:	xchg   ecx,eax
  40af28:	(bad)  
  40af29:	adc    bh,BYTE PTR [ecx-0x75]
  40af2c:	sub    ah,BYTE PTR [ecx]
  40af2e:	cld    
  40af2f:	jl     0x40aee1
  40af31:	out    0xd7,al
  40af33:	or     ebx,ebx
  40af35:	(bad)  
  40af36:	fdiv   st,st(4)
  40af38:	shl    ch,cl
  40af3a:	aas    
  40af3b:	adc    ebp,DWORD PTR [esi+0x59]
  40af3e:	xchg   ch,ch
  40af40:	jno    0x40aed2
  40af42:	adc    al,0xce
  40af44:	or     BYTE PTR [esi-0x322bb631],al
  40af4a:	mov    dh,0xd3
  40af4c:	xchg   ebx,eax
  40af4d:	fdiv   DWORD PTR [ebx-0x23]
  40af50:	inc    esp
  40af51:	imul   DWORD PTR [eax+ebp*4]
  40af54:	or     eax,0x2e8aa18b
  40af59:	stos   DWORD PTR es:[edi],eax
  40af5a:	jmp    0xa9d3:0x3d76557d
  40af61:	cmp    DWORD PTR [edi+0x32],0xffffffd0
  40af65:	icebp  
  40af66:	cmp    ch,BYTE PTR [ecx]
  40af68:	test   eax,0xfdfe631e
  40af6d:	xlat   BYTE PTR ds:[ebx]
  40af6e:	in     eax,0xa4
  40af70:	in     al,0xe7
  40af72:	push   0x2e0446cd
  40af77:	inc    eax
  40af78:	jne    0x40afa2
  40af7a:	in     al,0x8e
  40af7c:	push   ebx
  40af7d:	cdq    
  40af7e:	paddd  mm7,mm2
  40af81:	out    0x7e,al
  40af83:	mov    DWORD PTR [ebp+0x26],esi
  40af86:	add    eax,eax
  40af88:	mov    eax,0xb5cc5440
  40af8d:	sbb    ah,BYTE PTR [ecx]
  40af8f:	jns    0x40af93
  40af91:	dec    edi
  40af92:	add    BYTE PTR ds:0x4871accc,bl
  40af98:	mov    dh,0xf8
  40af9a:	pusha  
  40af9b:	pop    ecx
  40af9c:	(bad)  
  40af9d:	dec    eax
  40af9e:	sbb    al,0xb5
  40afa0:	push   eax
  40afa1:	icebp  
  40afa2:	or     BYTE PTR [esi+0x64c5d828],bl
  40afa8:	jp     0x40af3a
  40afaa:	cmp    eax,0x44fdced3
  40afaf:	fist   DWORD PTR [esi+0x6a]
  40afb2:	pop    eax
  40afb3:	mov    ch,0x4
  40afb5:	xchg   ebx,eax
  40afb6:	adc    ch,BYTE PTR [edx]
  40afb8:	push   edi
  40afb9:	and    al,0xd8
  40afbb:	sub    al,0x39
  40afbd:	sbb    BYTE PTR [esi-0x2],0xb9
  40afc1:	jge    0x40afba
  40afc3:	out    0x70,al
  40afc5:	(bad)  
  40afc6:	loopne 0x40afe6
  40afc8:	popf   
  40afc9:	aad    0xf3
  40afcb:	mov    ecx,0xa1868466
  40afd0:	sub    bl,0xce
  40afd3:	retf   0xb716
  40afd6:	push   eax
  40afd7:	mov    ds:0x7ca6f4d5,al
  40afdc:	pop    ecx
  40afdd:	mov    cs,WORD PTR gs:[edx-0x3d]
  40afe1:	push   cs
  40afe2:	cs inc esi
  40afe4:	pop    ecx
  40afe5:	(bad)  
  40afe6:	in     al,dx
  40afe7:	ret    0x301
  40afea:	pop    ebp
  40afeb:	mov    eax,0x7a234e42
  40aff0:	shr    dh,cl
  40aff2:	lods   eax,DWORD PTR ds:[esi]
  40aff3:	mov    ds:0x35502711,al
  40aff8:	cwde   
  40aff9:	lock pop ebp
  40affb:	mov    al,0x5e
  40affd:	mov    edx,DWORD PTR [edx+0x1d5ed605]
  40b003:	xor    DWORD PTR [ecx-0x63],0x8d8ee4f2
  40b00a:	(bad)  
  40b00b:	xor    dh,BYTE PTR ds:0xc9fb869f
  40b011:	sub    esi,DWORD PTR [ebx+eiz*1+0x3c1e39b3]
  40b018:	gs pop ebx
  40b01a:	cmp    al,0x9f
  40b01c:	iret   
  40b01d:	jp     0x40b03a
  40b01f:	iret   
  40b020:	bnd jno 0x40b019
  40b023:	sub    BYTE PTR ds:0x18c87bda,cl
  40b029:	xor    edx,0xffffffc5
  40b02c:	pop    ds
  40b02d:	push   esi
  40b02e:	stos   DWORD PTR es:[edi],eax
  40b02f:	pusha  
  40b030:	mov    cl,0x70
  40b032:	call   0x969a:0xe3f4f08f
  40b039:	mov    bh,BYTE PTR [ebx-0xe6d2be1]
  40b03f:	jbe    0x40b099
  40b041:	dec    edi
  40b042:	in     eax,dx
  40b043:	xchg   ecx,eax
  40b044:	jne    0x40afd0
  40b046:	in     eax,0x12
  40b048:	mov    esi,0xfb89f854
  40b04d:	xor    esi,esi
  40b04f:	adc    DWORD PTR [edi+0x51],ebp
  40b052:	pusha  
  40b053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b054:	pop    es
  40b055:	xchg   BYTE PTR [eax],ch
  40b057:	mov    al,ds:0x743214c3
  40b05c:	dec    ebp
  40b05d:	pop    esi
  40b05e:	mov    cl,0x87
  40b060:	push   esp
  40b061:	push   ss
  40b062:	(bad)  
  40b063:	int3   
  40b064:	adc    bl,bl
  40b066:	sub    cl,BYTE PTR [eax]
  40b068:	jns    0x40b0d7
  40b06a:	mov    ds:0x4b0fd10b,eax
  40b06f:	pop    ds
  40b070:	stos   BYTE PTR es:[edi],al
  40b071:	pop    ds
  40b072:	sub    ebp,DWORD PTR [edi+0x29704dd8]
  40b078:	mov    ebp,0xc599c159
  40b07d:	xchg   edx,eax
  40b07e:	jmp    0x31d461ce
  40b083:	inc    ebp
  40b084:	fidiv  WORD PTR [ecx+0x789c749b]
  40b08a:	lds    esi,FWORD PTR [ebp-0x39903ea8]
  40b090:	pop    ss
  40b091:	lea    esp,[esi]
  40b093:	jnp    0x40b07b
  40b095:	push   edx
  40b096:	adc    BYTE PTR ds:[edi+eiz*8-0x529bb85],dl
  40b09e:	dec    ebp
  40b09f:	sbb    DWORD PTR [ebx+0x7204e83c],ecx
  40b0a5:	mov    al,ds:0xac96fb41
  40b0aa:	out    dx,al
  40b0ab:	stos   DWORD PTR es:[edi],eax
  40b0ac:	push   ebx
  40b0ad:	lds    eax,FWORD PTR [edx+0x51941dba]
  40b0b3:	push   ebp
  40b0b4:	outs   dx,BYTE PTR ds:[esi]
  40b0b5:	ror    cl,1
  40b0b7:	shr    DWORD PTR [eax-0x70],0xbd
  40b0bb:	jb     0x40b12d
  40b0bd:	xchg   ebx,eax
  40b0be:	inc    ebx
  40b0bf:	and    al,0x32
  40b0c1:	cwde   
  40b0c2:	push   edx
  40b0c3:	rcl    BYTE PTR [ebx+0x2b],cl
  40b0c6:	int3   
  40b0c7:	inc    edi
  40b0c8:	mov    al,0x67
  40b0ca:	xlat   BYTE PTR ds:[ebx]
  40b0cb:	jbe    0x40b102
  40b0cd:	jecxz  0x40b127
  40b0cf:	gs cmc 
  40b0d1:	inc    esp
  40b0d2:	mov    ah,0x1f
  40b0d4:	mov    DWORD PTR [ebp+0x29],esi
  40b0d7:	adc    BYTE PTR [ecx+eax*8],cl
  40b0da:	jo     0x40b08a
  40b0dc:	ret    
  40b0dd:	into   
  40b0de:	bts    DWORD PTR [esi+0xb],ebx
  40b0e2:	dec    edi
  40b0e3:	and    al,0x28
  40b0e5:	dec    ecx
  40b0e6:	(bad)  [esi-0x3c]
  40b0e9:	xchg   ecx,eax
  40b0ea:	ins    DWORD PTR es:[edi],dx
  40b0eb:	in     eax,0x95
  40b0ed:	pop    ss
  40b0ee:	repz adc esi,DWORD PTR [esi+0x62]
  40b0f2:	out    dx,eax
  40b0f3:	gs ins BYTE PTR es:[edi],dx
  40b0f5:	call   0x13a:0x9d9f5144
  40b0fc:	adc    BYTE PTR [ebx-0x1e],dh
  40b0ff:	cli    
  40b100:	mov    ch,0xfd
  40b102:	push   ss
  40b103:	mov    al,0x54
  40b105:	mov    al,ds:0x550241ca
  40b10a:	test   eax,0x1ad38696
  40b10f:	cmp    eax,0x1f3a93b2
  40b114:	in     al,dx
  40b115:	into   
  40b116:	mov    bl,0x55
  40b118:	or     ah,0xde
  40b11b:	adc    cl,bl
  40b11d:	loope  0x40b117
  40b11f:	inc    edi
  40b120:	arpl   bx,si
  40b122:	xchg   ebp,eax
  40b123:	test   BYTE PTR [ecx],al
  40b125:	sbb    ecx,edx
  40b127:	es jp  0x40b124
  40b12a:	inc    eax
  40b12b:	sbb    dh,BYTE PTR [edi]
  40b12d:	xor    DWORD PTR [ecx+esi*8-0x75],0xf7170ca
  40b135:	xor    ebp,0xfffffff8
  40b138:	mov    eax,0xa14e818d
  40b13d:	and    DWORD PTR fs:[edx-0x78],esi
  40b141:	fs jbe 0x40b11a
  40b144:	adc    BYTE PTR [ebp-0x6fb24772],al
  40b14a:	jb     0x40b0d4
  40b14c:	out    dx,eax
  40b14d:	pop    esi
  40b14e:	mov    edx,0xae670429
  40b153:	inc    esp
  40b154:	mov    eax,ds:0xc4601e6d
  40b159:	sub    eax,0x230a520a
  40b15e:	push   eax
  40b15f:	daa    
  40b160:	sbb    BYTE PTR [edi],ch
  40b162:	test   DWORD PTR [edx],eax
  40b164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b165:	ss nop
  40b167:	push   cs
  40b168:	sti    
  40b169:	imul   ebp,DWORD PTR [edi],0x4206a111
  40b16f:	mov    eax,ds:0xd611aee7
  40b174:	push   0x167913be
  40b179:	lock xacquire add BYTE PTR ds:0x36cfcf00,al
  40b181:	sti    
  40b182:	test   DWORD PTR [esi],0xa3ccd422
  40b188:	mov    ecx,0x7daab316
  40b18d:	adc    al,0xe0
  40b18f:	es call 0x4481d5d8
  40b195:	sbb    esp,DWORD PTR [edi+0x6f]
  40b198:	cmp    eax,0x1b453cc9
  40b19d:	lds    eax,FWORD PTR [esi]
  40b19f:	mov    al,BYTE PTR [ecx+0x3707f617]
  40b1a5:	sub    dl,BYTE PTR [ebp-0x3a]
  40b1a8:	mov    cl,0xc2
  40b1aa:	mov    ebp,0x964cf7b6
  40b1af:	fwait
  40b1b0:	js     0x40b1ad
  40b1b2:	mov    edx,0x3268809c
  40b1b7:	add    al,0x10
  40b1b9:	ds inc ebp
  40b1bb:	jl     0x40b17f
  40b1bd:	or     al,0x92
  40b1bf:	mov    bh,0x3e
  40b1c1:	gs sbb eax,0x9e1f952b
  40b1c7:	scas   eax,DWORD PTR es:[edi]
  40b1c8:	push   esp
  40b1c9:	cld    
  40b1ca:	or     ecx,DWORD PTR [esi]
  40b1cc:	out    dx,eax
  40b1cd:	xor    al,BYTE PTR [edi-0x7066f1b]
  40b1d3:	xchg   ebx,eax
  40b1d4:	inc    ecx
  40b1d5:	dec    eax
  40b1d6:	inc    edi
  40b1d7:	cld    
  40b1d8:	inc    ebp
  40b1d9:	aaa    
  40b1da:	xchg   edx,eax
  40b1db:	enter  0x3412,0xb7
  40b1df:	mov    dh,0xa3
  40b1e1:	iret   
  40b1e2:	xor    eax,0xaa14ea6b
  40b1e7:	pop    ds
  40b1e8:	stos   BYTE PTR es:[edi],al
  40b1e9:	inc    esi
  40b1ea:	jo     0x40b190
  40b1ec:	das    
  40b1ed:	mov    DWORD PTR [ecx],esp
  40b1ef:	mov    esi,0x46e159c8
  40b1f4:	jae    0x40b217
  40b1f6:	retf   0x3a58
  40b1f9:	or     ah,dh
  40b1fb:	xchg   esp,eax
  40b1fc:	repnz xchg ecx,eax
  40b1fe:	and    edx,eax
  40b200:	push   ebx
  40b201:	jmp    0x40b256
  40b203:	stos   BYTE PTR es:[edi],al
  40b204:	shl    DWORD PTR [eax+esi*1],cl
  40b207:	push   esi
  40b208:	mov    ecx,0x4c3a89f3
  40b20d:	cld    
  40b20e:	scas   al,BYTE PTR es:[edi]
  40b20f:	dec    esi
  40b210:	sbb    DWORD PTR [edx+0x346251ae],ebp
  40b216:	fs in  al,0x20
  40b219:	xchg   edi,eax
  40b21a:	and    BYTE PTR [esi+0xe8b5951],ch
  40b220:	ds jle 0x40b27d
  40b223:	data16 daa 
  40b225:	ret    0x236e
  40b228:	adc    al,0xbb
  40b22a:	loop   0x40b2a1
  40b22c:	mov    bh,0xd0
  40b22e:	jbe    0x40b25e
  40b230:	jmp    0x40b1db
  40b232:	aam    0x79
  40b234:	mov    dl,0xad
  40b236:	or     eax,0xcabbea43
  40b23b:	push   eax
  40b23c:	mov    ds:0xe7c37f18,eax
  40b241:	shl    BYTE PTR [eax],cl
  40b243:	icebp  
  40b244:	xlat   BYTE PTR ds:[ebx]
  40b245:	xchg   esi,eax
  40b246:	pop    ebp
  40b247:	arpl   WORD PTR [ebx+0x6c48bc3b],si
  40b24d:	repnz fs aad 0xe9
  40b251:	mov    esi,DWORD PTR [ebp+0x28]
  40b254:	xchg   ebx,eax
  40b255:	shr    esp,cl
  40b257:	jmp    0x40b202
  40b259:	int    0x9
  40b25b:	adc    dl,BYTE PTR [edi+edx*8]
  40b25e:	push   ds
  40b25f:	shl    BYTE PTR [eax],0x81
  40b262:	cmp    DWORD PTR [ecx+0xd],esp
  40b265:	in     al,dx
  40b266:	add    DWORD PTR [ebx],ecx
  40b268:	aas    
  40b269:	rol    DWORD PTR [ebx],cl
  40b26b:	std    
  40b26c:	ins    DWORD PTR es:[edi],dx
  40b26d:	push   esi
  40b26e:	cmp    bl,BYTE PTR [ebx-0x65]
  40b271:	lock xchg ebx,eax
  40b273:	xor    bh,dl
  40b275:	frstor [edi+eax*4]
  40b278:	test   edx,ecx
  40b27a:	cmc    
  40b27b:	shl    BYTE PTR [ecx+0x4],0xad
  40b27f:	dec    esi
  40b280:	sub    al,0x2
  40b282:	jno    0x40b256
  40b284:	or     eax,0x50c8be13
  40b289:	loopne 0x40b227
  40b28b:	add    ah,bh
  40b28d:	cwde   
  40b28e:	ds pusha 
  40b290:	icebp  
  40b291:	and    esi,ebp
  40b293:	cmp    esi,DWORD PTR [esi+eiz*8-0x264734a5]
  40b29a:	neg    BYTE PTR [esp+esi*2]
  40b29d:	mov    ebx,ebp
  40b29f:	addr16 xchg ebp,eax
  40b2a1:	adc    dh,ch
  40b2a3:	daa    
  40b2a4:	and    eax,0x59f4237b
  40b2a9:	outs   dx,BYTE PTR ds:[esi]
  40b2aa:	loopne 0x40b271
  40b2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ad:	mov    al,ds:0xad513786
  40b2b2:	jmp    0x1d67:0xc4f9bc1e
  40b2b9:	xchg   edx,eax
  40b2ba:	or     DWORD PTR ds:0x8bddb2df,ebp
  40b2c0:	shr    ch,cl
  40b2c2:	mov    dl,0x71
  40b2c4:	jb     0x40b26f
  40b2c6:	test   al,0x1f
  40b2c8:	sbb    bl,dl
  40b2ca:	mov    ebx,0x9d7f96b2
  40b2cf:	fs xor ah,ch
  40b2d2:	mov    cl,cl
  40b2d4:	pop    ebp
  40b2d5:	adc    esi,DWORD PTR [ebp-0x1d271a3a]
  40b2db:	xchg   ebx,eax
  40b2dc:	loopne 0x40b266
  40b2de:	idiv   DWORD PTR ds:0xb7d03831
  40b2e4:	(bad)  
  40b2e5:	and    esp,esp
  40b2e7:	outs   dx,BYTE PTR ds:[esi]
  40b2e8:	scas   eax,DWORD PTR es:[edi]
  40b2e9:	cld    
  40b2ea:	mov    ebp,0x3315e9a9
  40b2ef:	dec    esp
  40b2f0:	xchg   ebx,eax
  40b2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f2:	inc    esi
  40b2f3:	mov    ch,0x22
  40b2f5:	pop    edx
  40b2f6:	fbstp  TBYTE PTR [ecx+0x7534931e]
  40b2fc:	jae    0x40b36a
  40b2fe:	(bad)  
  40b2ff:	(bad)  
  40b300:	sbb    ebx,DWORD PTR [eax-0x48d06c7c]
  40b306:	xchg   ecx,eax
  40b307:	nop
  40b308:	cli    
  40b309:	pop    esp
  40b30a:	or     esp,DWORD PTR [ebx-0x44419c01]
  40b310:	ja     0x40b32a
  40b312:	lahf   
  40b313:	jg     0x40b367
  40b315:	iret   
  40b316:	neg    BYTE PTR [edx+0x44]
  40b319:	hlt    
  40b31a:	call   0xaf0b95f3
  40b31f:	cmp    eax,DWORD PTR [ebp+0x6aed7ed0]
  40b325:	or     BYTE PTR [edx+ebx*8],dl
  40b328:	es sub al,0x1a
  40b32b:	dec    eax
  40b32c:	js     0x40b2d7
  40b32e:	int    0xed
  40b330:	out    0x51,eax
  40b332:	fist   WORD PTR [ebx+0x76]
  40b335:	adc    cl,BYTE PTR [ecx-0x6b0fe703]
  40b33b:	aam    0xab
  40b33d:	(bad)  
  40b33e:	fmul   QWORD PTR [eax]
  40b340:	mov    ch,ch
  40b342:	or     eax,0x15e9d5a2
  40b347:	push   es
  40b348:	xchg   ebx,eax
  40b349:	dec    esi
  40b34a:	gs scas eax,DWORD PTR es:[edi]
  40b34c:	jbe    0x40b351
  40b34e:	icebp  
  40b34f:	out    0x3c,eax
  40b351:	arpl   bp,si
  40b353:	mov    al,0x1d
  40b355:	hlt    
  40b356:	push   ebx
  40b357:	jae    0x40b3b3
  40b359:	sub    al,0xa1
  40b35b:	xor    esi,DWORD PTR [edi+0x73]
  40b35e:	jge    0x40b35c
  40b360:	push   0x98f49fc3
  40b365:	jnp    0x40b35c
  40b367:	or     DWORD PTR es:[esi+0x6b48e1bc],ebx
  40b36e:	test   al,0x4e
  40b370:	jne    0x40b32a
  40b372:	gs add eax,0x6aa53f77
  40b378:	mov    edx,0x3510dc6
  40b37d:	fs xchg esi,eax
  40b37f:	inc    eax
  40b380:	int3   
  40b381:	lahf   
  40b382:	cmp    ebp,0x44
  40b385:	push   esp
  40b386:	mov    esi,0x38f7c20c
  40b38b:	inc    esp
  40b38c:	fisubr DWORD PTR [eax-0x102150a8]
  40b392:	lahf   
  40b393:	jns    0x40b3a5
  40b395:	push   eax
  40b396:	test   DWORD PTR [esi-0x182a90d5],eax
  40b39c:	(bad)  
  40b39d:	(bad)  
  40b39e:	mov    bh,0x11
  40b3a0:	(bad)  
  40b3a1:	out    dx,al
  40b3a2:	or     al,BYTE PTR [ecx+esi*1+0x38]
  40b3a6:	push   esi
  40b3a7:	ror    DWORD PTR [esi],0x9b
  40b3aa:	xchg   ebx,eax
  40b3ab:	jb     0x40b370
  40b3ad:	and    DWORD PTR [esi+0xdacf48],0xfffffff1
  40b3b4:	sbb    dl,ah
  40b3b6:	call   0xbfaf8e07
  40b3bb:	enter  0x2665,0xe7
  40b3bf:	xchg   esi,eax
  40b3c0:	mov    ds:0x79790b56,al
  40b3c5:	pop    ss
  40b3c6:	scas   al,BYTE PTR es:[edi]
  40b3c7:	dec    ebp
  40b3c8:	aaa    
  40b3c9:	outs   dx,BYTE PTR ds:[esi]
  40b3ca:	jl     0x40b417
  40b3cc:	stc    
  40b3cd:	cmp    BYTE PTR [ecx-0x43],bh
  40b3d0:	pop    edi
  40b3d1:	push   edx
  40b3d2:	pushf  
  40b3d3:	data16 jmp 0x40b3a9
  40b3d6:	mov    eax,DWORD PTR [ebx]
  40b3d8:	shl    BYTE PTR [edi+0x46],1
  40b3db:	jp     0x40b40e
  40b3dd:	outs   dx,BYTE PTR ds:[esi]
  40b3de:	ss dec esp
  40b3e0:	inc    ah
  40b3e2:	(bad)  
  40b3e3:	pop    esp
  40b3e4:	popa   
  40b3e5:	or     al,0xc7
  40b3e7:	call   0x73b0:0xff8641b8
  40b3ee:	mov    esp,0xf8233019
  40b3f3:	cmp    eax,0xf0174809
  40b3f8:	pop    es
  40b3f9:	jo     0x40b3af
  40b3fb:	xchg   esp,eax
  40b3fc:	mov    ebp,0xce12fc67
  40b401:	jae    0x40b3dd
  40b403:	and    eax,0x2a331486
  40b408:	data16 fadd QWORD PTR [eax+0x444d9ac]
  40b40f:	fst    DWORD PTR [edi]
  40b411:	int    0xe8
  40b413:	es dec ebx
  40b415:	or     DWORD PTR [esi+edx*2],esp
  40b418:	addr16 dec edi
  40b41a:	lea    edx,fs:[esi-0x1f]
  40b41e:	imul   esi,DWORD PTR [ebp-0x35],0x14dfd180
  40b425:	xor    ch,BYTE PTR [esi-0x5275ce7d]
  40b42b:	push   cs
  40b42c:	sbb    eax,0x9cdf71c
  40b431:	jno    0x40b460
  40b433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b434:	inc    ecx
  40b435:	push   ebp
  40b436:	fs loop 0x40b4b3
  40b439:	sub    eax,0xe30ccc3a
  40b43e:	dec    esi
  40b43f:	scas   eax,DWORD PTR es:[edi]
  40b440:	jne    0x40b47e
  40b442:	js     0x40b470
  40b444:	jbe    0x40b44d
  40b446:	push   0xffffffcf
  40b448:	xchg   ebx,eax
  40b449:	adc    al,0x20
  40b44b:	dec    edx
  40b44c:	es scas al,BYTE PTR es:[edi]
  40b44e:	xlat   BYTE PTR ds:[ebx]
  40b44f:	pop    ds
  40b450:	jb     0x40b406
  40b452:	jl     0x40b457
  40b454:	dec    edx
  40b455:	cmp    BYTE PTR [ebx-0x31ac9037],bh
  40b45b:	mov    edi,0x7aeaee0e
  40b460:	mov    ecx,0xd8df86dd
  40b465:	jp     0x40b49a
  40b467:	sub    BYTE PTR [esp+esi*4],ah
  40b46a:	mov    esp,0xf2a50723
  40b46f:	scas   eax,DWORD PTR es:[edi]
  40b470:	xchg   esi,eax
  40b471:	pop    esp
  40b472:	xlat   BYTE PTR ds:[ebx]
  40b473:	int3   
  40b474:	sahf   
  40b475:	cmp    eax,0x1916c03b
  40b47a:	pop    eax
  40b47b:	inc    eax
  40b47c:	scas   ax,WORD PTR es:[edi]
  40b47e:	jmp    0x5fd8307a
  40b483:	and    eax,0xe87b87c3
  40b488:	(bad)
  40b48d:	popa   
  40b48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b48f:	loop   0x40b4c7
  40b491:	lea    ecx,cs:[edi]
  40b494:	sub    dh,BYTE PTR [esi]
  40b496:	cmp    ebx,DWORD PTR [ebp+0x7d]
  40b499:	or     ah,BYTE PTR [ebp+0x7f094542]
  40b49f:	ss gs mov ch,0x4d
  40b4a3:	out    0x4d,eax
  40b4a5:	cmovb  dx,di
  40b4a9:	mov    cl,BYTE PTR [ebx+0x24598d89]
  40b4af:	xor    al,dl
  40b4b1:	push   es
  40b4b2:	cmp    ch,dl
  40b4b4:	data16 data16 fist WORD PTR [edi]
  40b4b8:	in     al,0xc1
  40b4ba:	sub    esi,DWORD PTR [edx]
  40b4bc:	push   edx
  40b4bd:	pushf  
  40b4be:	aad    0x85
  40b4c0:	fldcw  WORD PTR [edx+0x78ab9a23]
  40b4c6:	and    bl,BYTE PTR [edi+0xb0d348e]
  40b4cc:	xor    edx,ebp
  40b4ce:	stos   BYTE PTR es:[edi],al
  40b4cf:	inc    ebp
  40b4d0:	addr16 push 0x42607329
  40b4d6:	push   ss
  40b4d7:	jno    0x40b552
  40b4d9:	jmp    0x7b0d:0xca3be397
  40b4e0:	cli    
  40b4e1:	push   0x51
  40b4e3:	push   esp
  40b4e4:	aaa    
  40b4e5:	pop    ss
  40b4e6:	mov    bh,0xb4
  40b4e8:	sar    DWORD PTR [ecx+0x22b1a349],0x4
  40b4ef:	cld    
  40b4f0:	cli    
  40b4f1:	out    dx,al
  40b4f2:	outs   dx,DWORD PTR ds:[esi]
  40b4f3:	dec    ebx
  40b4f4:	xor    DWORD PTR [ebp+0x367a6d03],edi
  40b4fa:	lods   al,BYTE PTR ds:[esi]
  40b4fb:	sub    al,0x44
  40b4fd:	or     al,0xd6
  40b4ff:	add    BYTE PTR es:[edi+0x34f859a7],ch
  40b506:	xor    cl,BYTE PTR [eax-0x38]
  40b509:	adc    BYTE PTR [edx],ah
  40b50b:	cli    
  40b50c:	sti    
  40b50d:	sub    DWORD PTR [eax-0x63],0x60
  40b511:	dec    esp
  40b512:	in     eax,0x83
  40b514:	jecxz  0x40b559
  40b516:	mov    ecx,0xc0f21e05
  40b51b:	rcr    DWORD PTR [eax],0xeb
  40b51e:	mov    esp,0xa249f12b
  40b523:	push   ebx
  40b524:	jo     0x40b57a
  40b526:	scas   al,BYTE PTR es:[edi]
  40b527:	rcr    DWORD PTR [ebx],1
  40b529:	cmp    eax,0x60a93a4d
  40b52e:	sti    
  40b52f:	clc    
  40b530:	es or  al,0xde
  40b533:	mov    gs,esi
  40b535:	dec    ebp
  40b536:	sbb    al,0x14
  40b538:	ins    DWORD PTR es:[edi],dx
  40b539:	cmp    eax,0xb9a775e
  40b53e:	adc    edi,DWORD PTR [edi]
  40b540:	dec    eax
  40b541:	mov    ebx,0xfa442660
  40b546:	lahf   
  40b547:	sbb    esp,edx
  40b549:	cld    
  40b54a:	fadd   QWORD PTR [esi+0x6f]
  40b54d:	add    al,BYTE PTR [eax-0x6033a8ca]
  40b553:	(bad)
  40b557:	cmc    
  40b558:	jmp    0x753a:0x14dc6716
  40b55f:	repnz add eax,0xce9e15b0
  40b565:	imul   ebp,DWORD PTR [esi+eax*8],0x4cf0c610
  40b56c:	inc    esi
  40b56d:	fcom   st(4)
  40b56f:	pop    es
  40b570:	adc    DWORD PTR [ebp-0x5],ecx
  40b573:	jns    0x40b595
  40b575:	xor    ebx,ecx
  40b577:	mov    ebx,0x86ba622b
  40b57c:	ret    0x67ab
  40b57f:	xchg   ebp,eax
  40b580:	into   
  40b581:	sub    bh,BYTE PTR [edi-0x4]
  40b584:	sub    eax,0x8ee14a69
  40b589:	addr16 jmp 0x40b5ba
  40b58c:	(bad)  
  40b58d:	ds ret 0xc9d6
  40b591:	pop    esp
  40b592:	or     BYTE PTR [ebx-0x711eff17],dh
  40b598:	outs   dx,DWORD PTR ds:[esi]
  40b599:	mov    ecx,DWORD PTR [ecx]
  40b59b:	pop    ecx
  40b59c:	inc    eax
  40b59d:	pop    edx
  40b59e:	jmp    0xab25:0x2211b92f
  40b5a5:	xor    edi,DWORD PTR [eax+0x50]
  40b5a8:	sub    DWORD PTR [ecx],esp
  40b5aa:	lea    edx,[eax+0x30]
  40b5ad:	test   BYTE PTR [ecx+0x60],cl
  40b5b0:	dec    edx
  40b5b1:	push   esp
  40b5b2:	mov    ecx,0x1c567ee7
  40b5b7:	mov    eax,?
  40b5b9:	lds    edi,FWORD PTR [ecx]
  40b5bb:	and    BYTE PTR [ecx-0x7e],cl
  40b5be:	call   0xc0af:0xe54ae09c
  40b5c5:	dec    eax
  40b5c6:	dec    eax
  40b5c7:	mov    esi,0xbb511f0
  40b5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5cd:	je     0x40b5f3
  40b5cf:	stos   BYTE PTR es:[edi],al
  40b5d0:	jmp    0x828b4132
  40b5d5:	pop    edi
  40b5d6:	shl    DWORD PTR [ecx+0x77],1
  40b5d9:	sub    DWORD PTR [esi+ebx*4+0x3ce79ac3],0x93853d8f
  40b5e4:	fisub  WORD PTR gs:0xb316f434
  40b5eb:	push   0xffffffe3
  40b5ed:	pop    ebx
  40b5ee:	pusha  
  40b5ef:	mov    dl,0xa4
  40b5f1:	pop    es
  40b5f2:	addr16 leave 
  40b5f4:	xor    bl,BYTE PTR [esi-0x5e105007]
  40b5fa:	mov    bl,0xf9
  40b5fc:	jge    0x40b5e8
  40b5fe:	xor    eax,0xf4577553
  40b603:	call   0x611a881
  40b608:	(bad)
  40b60b:	hlt    
  40b60c:	pop    ds
  40b60d:	mov    ebx,edi
  40b60f:	mov    al,0x96
  40b611:	xor    eax,0xa93bddb5
  40b616:	nop
  40b617:	loop   0x40b5d1
  40b619:	lods   eax,DWORD PTR ds:[esi]
  40b61a:	cli    
  40b61b:	ja     0x40b644
  40b61d:	sbb    edi,DWORD PTR [ecx]
  40b61f:	and    DWORD PTR [ebx],eax
  40b621:	jp     0x40b69b
  40b623:	pusha  
  40b624:	fistp  DWORD PTR [ecx+0x4c]
  40b627:	jge    0x40b647
  40b629:	sub    eax,0x40513d16
  40b62e:	mov    eax,0x4aead4
  40b633:	ret    
  40b634:	sbb    bh,BYTE PTR [ebx]
  40b636:	dec    edi
  40b637:	fbstp  TBYTE PTR [esi]
  40b639:	out    0x15,al
  40b63b:	aam    0x20
  40b63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b63e:	aaa    
  40b63f:	sbb    edi,eax
  40b641:	ins    DWORD PTR es:[edi],dx
  40b642:	sub    al,0xdb
  40b644:	ret    0x2d90
  40b647:	jge    0x40b6b0
  40b649:	adc    al,0xb1
  40b64b:	add    ebp,DWORD PTR [ebp-0x43]
  40b64e:	ss loopne 0x40b642
  40b651:	xor    edi,DWORD PTR [ebp-0x52]
  40b654:	dec    edx
  40b655:	xchg   ebx,eax
  40b656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b657:	push   eax
  40b658:	adc    al,0x58
  40b65a:	lds    ebp,FWORD PTR ds:0x4a6a46ee
  40b660:	adc    BYTE PTR [ecx-0x48],cl
  40b663:	icebp  
  40b664:	mov    ds:0x10090ee3,al
  40b669:	rol    ch,0x3d
  40b66c:	xor    al,0x6e
  40b66e:	in     al,0xd7
  40b670:	aas    
  40b671:	call   0x416d6092
  40b676:	fs inc esi
  40b678:	popf   
  40b679:	or     DWORD PTR [edi+0x24],0x717f80a4
  40b680:	mov    cl,0xd1
  40b682:	dec    edx
  40b683:	(bad)  
  40b684:	push   ds
  40b685:	stos   DWORD PTR es:[edi],eax
  40b686:	leave  
  40b687:	xchg   BYTE PTR [edx-0x17686d53],dh
  40b68d:	in     eax,dx
  40b68e:	ins    BYTE PTR es:[edi],dx
  40b68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b690:	jmp    0xb9806b55
  40b695:	daa    
  40b696:	jo     0x40b631
  40b698:	xchg   ebx,eax
  40b699:	js     0x40b6d9
  40b69b:	mov    dh,0x9c
  40b69d:	dec    esi
  40b69e:	rcl    edx,0xbe
  40b6a1:	imul   edi,DWORD PTR [ebp-0x4c],0x5799e8fd
  40b6a8:	(bad)  [esi]
  40b6aa:	repnz mov dh,BYTE PTR [edx-0x14]
  40b6ae:	and    eax,0xa61daa4e
  40b6b3:	sub    DWORD PTR [eax],ebp
  40b6b5:	loope  0x40b6af
  40b6b7:	cld    
  40b6b8:	sar    DWORD PTR [ebx+0x38],cl
  40b6bb:	in     eax,0xd4
  40b6bd:	jnp    0x40b701
  40b6bf:	aas    
  40b6c0:	fxch   st(7)
  40b6c2:	and    al,0x42
  40b6c4:	mov    esi,0xa7eecf4f
  40b6c9:	inc    edx
  40b6ca:	jg     0x40b6ea
  40b6cc:	int3   
  40b6cd:	or     ebp,DWORD PTR [eax-0x46a15d35]
  40b6d3:	lods   al,BYTE PTR ds:[esi]
  40b6d4:	jmp    0xf0f2:0x612a5f83
  40b6db:	pop    eax
  40b6dc:	scas   al,BYTE PTR es:[edi]
  40b6dd:	add    esp,DWORD PTR [ebx+edi*4-0x7c0de84f]
  40b6e4:	add    al,0x92
  40b6e6:	mov    al,ds:0xdfc0c654
  40b6eb:	mov    cl,0x5
  40b6ed:	sahf   
  40b6ee:	and    eax,0x3597ffcf
  40b6f3:	mov    dl,0x47
  40b6f5:	vpsubusw ymm5,ymm0,ymm2
  40b6f9:	jae    0x40b69e
  40b6fb:	test   eax,0xd97502b0
  40b700:	lods   eax,DWORD PTR ds:[esi]
  40b701:	imul   BYTE PTR [edi]
  40b703:	mov    bl,0x17
  40b705:	add    al,0xc2
  40b707:	and    bl,bl
  40b709:	fs xchg edx,eax
  40b70b:	cmp    eax,esp
  40b70d:	cld    
  40b70e:	shl    DWORD PTR [eax],0x3a
  40b711:	nop
  40b712:	mov    esi,0xae8c10e8
  40b717:	loop   0x40b715
  40b719:	out    0x9a,eax
  40b71b:	sbb    al,0x2f
  40b71d:	xlat   BYTE PTR ds:[ebx]
  40b71e:	push   esi
  40b71f:	repz xor al,0xdd
  40b722:	push   edx
  40b723:	adc    DWORD PTR [edi+0x73],ecx
  40b726:	imul   esp,edx,0x7f
  40b729:	xor    al,0xd
  40b72b:	not    DWORD PTR [edi+0x49]
  40b72e:	cmp    eax,esi
  40b730:	mov    bl,al
  40b732:	lea    ebp,[esi+0x7e]
  40b735:	js     0x40b790
  40b737:	jecxz  0x40b78d
  40b739:	dec    ecx
  40b73a:	jo     0x40b789
  40b73c:	mov    ebx,0xf02d1b18
  40b741:	stc    
  40b742:	adc    esp,ebp
  40b744:	clc    
  40b745:	jnp    0x40b76d
  40b747:	xchg   dh,ah
  40b749:	ret    
  40b74a:	sbb    al,BYTE PTR [esi-0x69]
  40b74d:	pop    edi
  40b74e:	xor    dh,BYTE PTR [esi]
  40b750:	xchg   ebx,eax
  40b751:	mov    ds:0xc387bee8,eax
  40b756:	fcom   DWORD PTR [eax]
  40b758:	mov    dl,0xae
  40b75a:	push   eax
  40b75b:	mov    ch,0x9d
  40b75d:	adc    dh,BYTE PTR ds:0xd54c39c5
  40b763:	ins    DWORD PTR es:[edi],dx
  40b764:	pushf  
  40b765:	pushf  
  40b766:	or     ch,BYTE PTR [edx+0x15]
  40b769:	repnz inc eax
  40b76b:	sub    al,0x91
  40b76d:	hlt    
  40b76e:	pop    ss
  40b76f:	rol    BYTE PTR [ebp+0x5346bd6b],0x4f
  40b776:	cmp    eax,0x72c5d5a7
  40b77b:	and    DWORD PTR ds:0x3a12a6ae,esi
  40b781:	inc    ebx
  40b782:	mov    WORD PTR [edx-0x33be01e9],es
  40b788:	fs jae 0x40b7c4
  40b78b:	dec    ecx
  40b78c:	loopne 0x40b7b0
  40b78e:	jno    0x40b759
  40b790:	inc    edi
  40b791:	or     edx,edi
  40b793:	push   edi
  40b794:	adc    DWORD PTR [ebx+ecx*2],esp
  40b797:	jbe    0x40b78d
  40b799:	fucom  st(3)
  40b79b:	bound  edx,QWORD PTR [edx-0x1c339520]
  40b7a1:	sub    bh,cl
  40b7a3:	ins    DWORD PTR es:[edi],dx
  40b7a4:	and    eax,0x1af4ea8
  40b7a9:	(bad)  
  40b7aa:	fcmovb st,st(6)
  40b7ac:	into   
  40b7ad:	jns    0x40b775
  40b7af:	cmc    
  40b7b0:	or     BYTE PTR [edx-0xe],al
  40b7b3:	dec    edi
  40b7b4:	lahf   
  40b7b5:	mov    bh,BYTE PTR [edx+0x4c03bfd]
  40b7bb:	mov    ds:0x58e1d17f,al
  40b7c0:	jp     0x40b763
  40b7c2:	out    0xf1,eax
  40b7c4:	out    0xd8,eax
  40b7c6:	xchg   ebp,eax
  40b7c7:	in     eax,0x23
  40b7c9:	jo     0x40b79f
  40b7cb:	fcomp  DWORD PTR [edi]
  40b7cd:	or     eax,0xfe4d65d
  40b7d2:	ins    BYTE PTR es:[edi],dx
  40b7d3:	je     0x40b7bc
  40b7d5:	pinsrw mm1,WORD PTR [edx+ebp*4+0x5d],0x56
  40b7db:	fstp   TBYTE PTR ds:0xe79a2cb4
  40b7e1:	loope  0x40b821
  40b7e3:	mov    ebx,DWORD PTR [ecx+ebx*1+0x789468c4]
  40b7ea:	or     cl,bh
  40b7ec:	sub    BYTE PTR [ebp-0x14],bl
  40b7ef:	jp     0x40b805
  40b7f1:	(bad)  [esi+0x2b]
  40b7f4:	mov    DWORD PTR [esi],eax
  40b7f6:	mov    esp,0x9254cf2b
  40b7fb:	and    ebp,DWORD PTR [ebp-0x1c]
  40b7fe:	sbb    BYTE PTR es:[esi],al
  40b801:	bound  esi,QWORD PTR [esi]
  40b803:	ja     0x40b78c
  40b805:	aas    
  40b806:	shr    DWORD PTR [ebx+0x25],0xc4
  40b80a:	dec    ecx
  40b80b:	imul   ebp,DWORD PTR [edx-0x17],0x99ebba46
  40b812:	aam    0xcf
  40b814:	scas   eax,DWORD PTR es:[edi]
  40b815:	mov    esi,gs
  40b817:	outs   dx,BYTE PTR ds:[esi]
  40b818:	lods   al,BYTE PTR fs:[esi]
  40b81a:	enter  0x3266,0x14
  40b81e:	lea    eax,[esi]
  40b820:	repz or ecx,esi
  40b823:	adc    al,0xd6
  40b825:	not    BYTE PTR [eax+ecx*4]
  40b828:	call   0x786c:0x32633c95
  40b82f:	aam    0x2c
  40b831:	(bad)  
  40b832:	xor    BYTE PTR [ebp+0x40],dh
  40b835:	(bad)  
  40b836:	xchg   esi,eax
  40b837:	cmp    BYTE PTR [ebp-0x75c738da],0x51
  40b83e:	test   BYTE PTR [ecx],ah
  40b840:	pushf  
  40b841:	sbb    BYTE PTR [edi-0x7a],bl
  40b844:	or     dl,BYTE PTR [ebx]
  40b846:	pushf  
  40b847:	inc    ebp
  40b848:	mov    ds:0x83c92b44,eax
  40b84d:	jnp    0x40b7e6
  40b84f:	push   0x5d
  40b851:	enter  0x2f2f,0xea
  40b855:	aas    
  40b856:	pusha  
  40b857:	iret   
  40b858:	add    edi,DWORD PTR [esi+ebx*4-0x9]
  40b85c:	daa    
  40b85d:	mov    eax,ds:0xb498f2b8
  40b862:	dec    eax
  40b863:	jb     0x40b84f
  40b865:	aas    
  40b866:	cmp    BYTE PTR [esi+0x6667a0e1],dl
  40b86c:	mov    DWORD PTR [edi+ebx*8+0x10],ebx
  40b870:	pop    esp
  40b871:	aaa    
  40b872:	cmp    al,0x8f
  40b874:	jecxz  0x40b898
  40b876:	add    al,0x2c
  40b878:	(bad)  
  40b879:	and    eax,0x9148047b
  40b87e:	test   DWORD PTR [esi-0x3282cbe3],edi
  40b884:	int3   
  40b885:	adc    eax,0xf8400635
  40b88a:	popa   
  40b88b:	cmc    
  40b88c:	jp     0x40b90a
  40b88e:	cmp    dl,dh
  40b890:	js     0x40b886
  40b892:	inc    ebx
  40b893:	ins    BYTE PTR es:[edi],dx
  40b894:	pop    ds
  40b895:	out    0xb0,al
  40b897:	sub    ecx,esi
  40b899:	push   ecx
  40b89a:	(bad)  
  40b89b:	clc    
  40b89c:	mov    ds:0xbcd72d34,eax
  40b8a1:	je     0x40b855
  40b8a3:	shl    BYTE PTR [esi+0x16],1
  40b8a6:	in     eax,0xb2
  40b8a8:	xchg   ebp,eax
  40b8a9:	xor    DWORD PTR [eax],edi
  40b8ab:	sbb    DWORD PTR [esi+0x436aac21],0xf94c090a
  40b8b5:	pop    ebp
  40b8b6:	stos   BYTE PTR es:[edi],al
  40b8b7:	xor    al,0xbf
  40b8b9:	cmp    BYTE PTR [eax],bl
  40b8bb:	push   0x14
  40b8bd:	aad    0x6b
  40b8bf:	cmp    esp,DWORD PTR [esi-0x1d]
  40b8c2:	dec    edx
  40b8c3:	dec    eax
  40b8c4:	mov    ds:0x86f7352f,eax
  40b8c9:	pop    ss
  40b8ca:	and    BYTE PTR [ecx],0x4d
  40b8cd:	jl     0x40b874
  40b8cf:	and    DWORD PTR [ebp+0x8cc1ca3],esi
  40b8d5:	popf   
  40b8d6:	test   DWORD PTR [ecx],edx
  40b8d8:	sbb    DWORD PTR [esi],0x6
  40b8db:	ins    BYTE PTR es:[edi],dx
  40b8dc:	fiadd  DWORD PTR [esi]
  40b8de:	jnp    0x40b956
  40b8e0:	cmp    eax,DWORD PTR [ecx-0x14be9cba]
  40b8e6:	test   DWORD PTR [eax+0x62],eax
  40b8e9:	xor    ebx,eax
  40b8eb:	pusha  
  40b8ec:	hlt    
  40b8ed:	inc    BYTE PTR [esi-0x6]
  40b8f0:	(bad)  
  40b8f1:	lods   eax,DWORD PTR ds:[esi]
  40b8f3:	pop    ds
  40b8f4:	sti    
  40b8f5:	mov    BYTE PTR [esp+eiz*4],bh
  40b8f8:	mov    ch,0x5b
  40b8fa:	xchg   ebx,eax
  40b8fb:	sbb    eax,0xbef23349
  40b900:	in     al,dx
  40b901:	cli    
  40b902:	enter  0x2eac,0x23
  40b906:	popf   
  40b907:	add    bl,bl
  40b909:	push   0xffffff8a
  40b90b:	ins    BYTE PTR es:[edi],dx
  40b90c:	mov    dh,0xd8
  40b90e:	int3   
  40b90f:	dec    eax
  40b910:	in     al,dx
  40b911:	idiv   BYTE PTR [edx+0x55]
  40b914:	and    BYTE PTR [ecx+0x3d],0xb9
  40b918:	out    0x2d,eax
  40b91a:	mov    edx,DWORD PTR [edi-0x2c717468]
  40b920:	xchg   ebx,eax
  40b921:	adc    al,0x51
  40b923:	mov    dl,0x17
  40b925:	pop    ds
  40b926:	imul   ebx,ebp,0xafe98052
  40b92c:	sub    eax,0x1a91a279
  40b931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b932:	inc    edi
  40b933:	in     al,0x2e
  40b935:	dec    esp
  40b936:	(bad)  
  40b937:	dec    esi
  40b938:	(bad)  
  40b939:	jns    0x40b901
  40b93b:	dec    edx
  40b93c:	mov    bl,0x56
  40b93e:	or     al,0x28
  40b940:	push   ss
  40b941:	test   al,0xf1
  40b943:	fcom   DWORD PTR [esi]
  40b945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b946:	or     BYTE PTR [ecx],0x77
  40b949:	jg     0x40b974
  40b94b:	addr16 (bad) 
  40b94d:	pop    edi
  40b94e:	mov    ds:0x71d70dfd,eax
  40b953:	push   ebp
  40b954:	lds    edi,FWORD PTR [ecx]
  40b956:	push   edi
  40b957:	sbb    al,BYTE PTR [ebx-0x4]
  40b95a:	mov    esp,0x96340793
  40b95f:	lods   al,BYTE PTR ds:[esi]
  40b960:	mov    DWORD PTR [esi-0x107220c1],0xb92a51a4
  40b96a:	sar    BYTE PTR [esi+0x38],1
  40b96d:	adc    eax,0x64c828c5
  40b972:	aas    
  40b973:	xlat   BYTE PTR ds:[ebx]
  40b974:	push   ecx
  40b975:	(bad)  
  40b976:	loopne 0x40b915
  40b978:	mov    ebp,0x948348dd
  40b97d:	xchg   ebp,eax
  40b97e:	js     0x40b907
  40b980:	aas    
  40b981:	xchg   edx,eax
  40b982:	lea    edi,[eax+0x37e7f8d5]
  40b988:	sbb    bh,al
  40b98a:	push   edi
  40b98b:	(bad)  
  40b98c:	stc    
  40b98d:	mov    ds:0xed64dfd0,al
  40b992:	xlat   BYTE PTR ds:[ebx]
  40b993:	(bad)  
  40b994:	jle    0x40b9bc
  40b996:	les    ebp,FWORD PTR [eax+ebp*1+0x5c]
  40b99a:	in     al,0xab
  40b99c:	jbe    0x40b992
  40b99e:	(bad)  
  40b9a0:	popf   
  40b9a1:	(bad)  
  40b9a2:	mov    ebx,0x589f211f
  40b9a7:	mov    ecx,edi
  40b9a9:	inc    ebp
  40b9aa:	lea    esp,[esi]
  40b9ac:	in     al,0x16
  40b9ae:	add    edi,DWORD PTR [edi+edx*2-0x15]
  40b9b2:	popa   
  40b9b3:	rcl    ah,0xf
  40b9b6:	mov    dh,0x6
  40b9b8:	mov    bh,0x97
  40b9ba:	sbb    ebx,DWORD PTR [ebx]
  40b9bc:	add    al,BYTE PTR [ebx]
  40b9be:	add    edx,DWORD PTR [ebx+0xb]
  40b9c1:	mov    cl,0xdc
  40b9c3:	dec    ebp
  40b9c4:	jae    0x40ba0b
  40b9c6:	mov    cl,0xb6
  40b9c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9c9:	inc    ecx
  40b9ca:	sbb    esi,eax
  40b9cc:	xor    al,0x8e
  40b9ce:	pop    esp
  40b9cf:	fst    st(1)
  40b9d1:	mov    ecx,0x7427ab04
  40b9d6:	clc    
  40b9d7:	sti    
  40b9d8:	stos   BYTE PTR es:[edi],al
  40b9d9:	out    0x5a,al
  40b9db:	ja     0x40b9db
  40b9dd:	sbb    BYTE PTR ds:0x6213e763,dh
  40b9e3:	add    DWORD PTR cs:[edi+0x1c73e7f1],ebx
  40b9ea:	nop
  40b9eb:	cmp    BYTE PTR [esi+0x6d],cl
  40b9ee:	repz sub edi,DWORD PTR [esp+esi*4+0x17c1fce3]
  40b9f6:	(bad)  
  40b9f7:	mov    cl,0x51
  40b9f9:	xor    edi,0xffffff99
  40b9fc:	sbb    esp,DWORD PTR [eax-0xf63d904]
  40ba02:	or     eax,0xe9508b61
  40ba07:	jp     0x40b9e3
  40ba09:	aas    
  40ba0a:	fnstcw WORD PTR [ecx-0x132b9d44]
  40ba10:	inc    edi
  40ba11:	das    
  40ba12:	fldcw  WORD PTR [ecx+0x19]
  40ba15:	hlt    
  40ba16:	jecxz  0x40ba1c
  40ba18:	call   0x50fd:0xf2c2e53d
  40ba1f:	xor    eax,0x17303e9d
  40ba24:	sub    eax,0x8aaecfe5
  40ba29:	inc    esi
  40ba2a:	push   es
  40ba2b:	pop    ebx
  40ba2c:	nop
  40ba2d:	xchg   DWORD PTR ds:0x4ceeeef3,ecx
  40ba33:	je     0x40ba87
  40ba35:	pop    ebx
  40ba36:	xor    bl,BYTE PTR [ebp-0x45eaeb7d]
  40ba3c:	mov    ds:0x8963e5df,eax
  40ba41:	and    dh,dh
  40ba43:	push   cs
  40ba44:	jno    0x40ba20
  40ba46:	gs inc ecx
  40ba48:	jp     0x40b9d9
  40ba4a:	pop    esi
  40ba4b:	es ret 0x1642
  40ba4f:	out    0xb0,eax
  40ba51:	enter  0xac03,0x14
  40ba55:	mov    esp,0x1af8d880
  40ba5a:	mov    ah,0x9d
  40ba5c:	sti    
  40ba5d:	int3   
  40ba5e:	repnz in eax,dx
  40ba60:	dec    ecx
  40ba61:	and    cl,BYTE PTR [edi]
  40ba63:	xor    al,cl
  40ba65:	dec    edi
  40ba66:	or     al,0x7b
  40ba68:	mov    edx,0x6bb883f0
  40ba6d:	mov    ebp,0x35eb0f96
  40ba72:	dec    eax
  40ba73:	mov    dl,0x5a
  40ba75:	sbb    ah,BYTE PTR [esi]
  40ba77:	sub    eax,0x14f8a842
  40ba7c:	cmp    eax,0xfa2d65a4
  40ba81:	call   0x8a400d5
  40ba86:	ins    DWORD PTR es:[edi],dx
  40ba87:	dec    ebp
  40ba88:	mov    esi,0xec2bd1eb
  40ba8d:	xchg   esi,eax
  40ba8e:	mov    ecx,0xa5b2de28
  40ba93:	xchg   esp,eax
  40ba94:	clc    
  40ba95:	test   BYTE PTR [edx-0x15521afe],bl
  40ba9b:	mov    ecx,0x7345a700
  40baa0:	cmc    
  40baa1:	mov    al,ds:0xcf9a1197
  40baa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa7:	jae    0x40ba78
  40baa9:	loope  0x40ba71
  40baab:	ret    0xb259
  40baae:	push   ecx
  40baaf:	bound  ebx,QWORD PTR ds:0xd35683cb
  40bab5:	rol    al,0x3f
  40bab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bab9:	xor    esi,DWORD PTR [edi]
  40babb:	pop    esi
  40babc:	retf   0x6750
  40babf:	mov    edi,0x30f26c3c
  40bac4:	push   eax
  40bac5:	cmc    
  40bac6:	xchg   edi,eax
  40bac7:	xor    edx,ebx
  40bac9:	ins    BYTE PTR es:[edi],dx
  40baca:	mov    cl,0x6e
  40bacc:	xor    DWORD PTR [ebp-0x7e],eax
  40bacf:	jmp    0x4e7f45f4
  40bad4:	mov    cl,0x47
  40bad6:	(bad)  
  40bad7:	jle    0x40baf7
  40bad9:	inc    edi
  40bada:	sub    DWORD PTR [edi*2+0x2811ceb6],edi
  40bae1:	bound  edi,QWORD PTR [ebx+0x2e]
  40bae4:	push   0xfffffff0
  40bae6:	(bad)  
  40bae7:	cwde   
  40bae8:	xor    edx,DWORD PTR [si]
  40baeb:	out    dx,eax
  40baec:	pop    edx
  40baed:	push   ecx
  40baee:	jmp    0xc2630706
  40baf3:	adc    DWORD PTR [ebx],0xffffffe1
  40baf6:	popf   
  40baf7:	xchg   ebx,eax
  40baf8:	inc    ecx
  40baf9:	mov    ds:0xbb0625e8,al
  40bafe:	adc    eax,0x4c0199d5
  40bb03:	es mov ah,0xaa
  40bb06:	and    ch,BYTE PTR [edx-0x7]
  40bb09:	dec    edx
  40bb0a:	jle    0x40bb45
  40bb0c:	sbb    al,0xc5
  40bb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb0f:	xchg   edx,eax
  40bb10:	fstp   TBYTE PTR [esi+0x4f01e495]
  40bb16:	fstp   st(1)
  40bb18:	cmp    ch,BYTE PTR [esi]
  40bb1a:	dec    ebx
  40bb1b:	sbb    ch,BYTE PTR [eax]
  40bb1d:	out    dx,al
  40bb1e:	int    0x32
  40bb20:	push   esp
  40bb21:	cs jp  0x40bb0f
  40bb24:	sbb    al,0xa5
  40bb26:	jp     0x40bb8d
  40bb28:	mov    ds:0x42da2fbc,al
  40bb2d:	mov    dh,BYTE PTR [edx-0x2b3ace11]
  40bb33:	js     0x40bb39
  40bb35:	rcl    DWORD PTR [ebx+ecx*2+0x29],0x68
  40bb3a:	mov    ds:0xa35219dd,al
  40bb3f:	ins    DWORD PTR es:[edi],dx
  40bb40:	clc    
  40bb41:	inc    edx
  40bb42:	stc    
  40bb43:	(bad)  
  40bb44:	xchg   edi,eax
  40bb45:	scas   al,BYTE PTR es:[edi]
  40bb46:	or     eax,esi
  40bb48:	rcl    DWORD PTR [ebx+0x69ddf7fe],0xda
  40bb4f:	clc    
  40bb50:	mov    dl,0xa6
  40bb52:	call   0xa048:0xde5194d3
  40bb59:	(bad)  
  40bb5a:	mov    eax,ds:0xc62dd16c
  40bb5f:	xor    DWORD PTR [ecx-0x3a],edx
  40bb62:	mov    ah,0x7c
  40bb64:	inc    ebp
  40bb65:	or     al,0x6d
  40bb67:	sub    esp,DWORD PTR [ecx]
  40bb69:	jge    0x40bb29
  40bb6b:	out    0x40,eax
  40bb6d:	rcr    dl,1
  40bb6f:	shl    ecx,cl
  40bb71:	sub    esp,DWORD PTR [esi+0x36]
  40bb74:	sub    esp,DWORD PTR [esi+0x1700bfb9]
  40bb7a:	sbb    DWORD PTR [eax],edi
  40bb7c:	push   es
  40bb7d:	fst    QWORD PTR [edi+0x18]
  40bb80:	cmp    ecx,eax
  40bb82:	sbb    eax,0xca9d2e34
  40bb87:	lock imul esp,DWORD PTR [ebp-0x56],0x7f
  40bb8c:	adc    eax,0x1ce2589e
  40bb91:	xchg   esp,eax
  40bb92:	pushf  
  40bb93:	inc    edi
  40bb94:	outs   dx,DWORD PTR ds:[esi]
  40bb95:	out    dx,eax
  40bb96:	or     BYTE PTR [ecx],dh
  40bb98:	sub    bh,BYTE PTR [ebx]
  40bb9a:	adc    edx,DWORD PTR [ebx-0x6f]
  40bb9d:	ret    
  40bb9e:	dec    edi
  40bb9f:	rcr    DWORD PTR [eax-0x5d072896],cl
  40bba5:	test   edi,eax
  40bba7:	lods   eax,DWORD PTR ds:[esi]
  40bba8:	(bad)  
  40bba9:	retf   
  40bbaa:	out    0x5a,al
  40bbac:	push   ebp
  40bbad:	mov    edi,0x196ab968
  40bbb2:	loopne 0x40bb50
  40bbb4:	add    al,BYTE PTR [ebx]
  40bbb6:	cmp    esi,DWORD PTR [ebp+ecx*4-0x1672be20]
  40bbbd:	out    0x80,eax
  40bbbf:	sub    BYTE PTR ds:0x2ee4c0b3,dl
  40bbc5:	xchg   ecx,eax
  40bbc6:	mov    ds:0xdc1e1347,al
  40bbcb:	hlt    
  40bbcc:	test   ecx,esp
  40bbce:	idiv   DWORD PTR [eax-0x46e746cd]
  40bbd4:	aas    
  40bbd5:	xchg   esi,eax
  40bbd6:	icebp  
  40bbd7:	sahf   
  40bbd8:	mov    dl,0xf9
  40bbda:	stos   BYTE PTR es:[edi],al
  40bbdb:	dec    ecx
  40bbdc:	add    al,0xa9
  40bbde:	inc    esi
  40bbdf:	lea    si,[esi-0x68]
  40bbe3:	mov    edi,0x4f7a30a3
  40bbe8:	fisttp QWORD PTR [eax-0x4a]
  40bbeb:	imul   esi,DWORD PTR [ecx+0x4a],0xf6e677b
  40bbf2:	jl     0x40bb8b
  40bbf4:	es push eax
  40bbf6:	cwde   
  40bbf7:	sbb    al,0xc5
  40bbf9:	and    BYTE PTR [ecx+0xf],dh
  40bbfc:	sbb    BYTE PTR [ecx+ebx*4+0x78],bl
  40bc00:	inc    eax
  40bc01:	xlat   BYTE PTR ds:[ebx]
  40bc02:	push   ds
  40bc03:	fwait
  40bc04:	mov    ebx,0x9416f1b0
  40bc09:	enter  0x4705,0x61
  40bc0d:	sbb    al,0x9
  40bc0f:	gs xchg edi,eax
  40bc11:	addr16 cli 
  40bc13:	or     al,0x27
  40bc15:	jmp    0x1812955f
  40bc1a:	sbb    al,0x1b
  40bc1c:	fsub   DWORD PTR [eax-0x3b632dc7]
  40bc22:	add    DWORD PTR [ecx-0x38],esp
  40bc25:	mov    al,0xc9
  40bc27:	mov    esi,0x254855b7
  40bc2c:	les    ecx,FWORD PTR [esi-0x88c37f1]
  40bc32:	popa   
  40bc33:	js     0x40bc14
  40bc35:	pushf  
  40bc36:	push   ss
  40bc37:	in     eax,dx
  40bc38:	cmc    
  40bc39:	jg     0x40bca1
  40bc3b:	xchg   ebx,eax
  40bc3c:	cmc    
  40bc3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc3e:	and    eax,0xd935a395
  40bc43:	jmp    0x6d8c7f5f
  40bc48:	jmp    0x1afab306
  40bc4d:	push   eax
  40bc4e:	(bad)  
  40bc4f:	iretw  
  40bc51:	inc    edx
  40bc52:	jecxz  0x40bbe7
  40bc54:	cld    
  40bc55:	mov    ah,0x81
  40bc57:	mov    bl,0x44
  40bc59:	push   ecx
  40bc5a:	pop    ss
  40bc5b:	xchg   edi,eax
  40bc5c:	push   edi
  40bc5d:	into   
  40bc5e:	sar    esi,0xac
  40bc61:	push   ebx
  40bc62:	push   es
  40bc63:	cld    
  40bc64:	push   sp
  40bc66:	ins    BYTE PTR es:[edi],dx
  40bc67:	sbb    BYTE PTR [eax],0xc3
  40bc6a:	int    0x6a
  40bc6c:	es cs xchg esi,eax
  40bc6f:	xchg   ebp,eax
  40bc70:	dec    eax
  40bc71:	scas   eax,DWORD PTR es:[edi]
  40bc72:	shr    DWORD PTR [edx+0x22],cl
  40bc75:	inc    edi
  40bc76:	jl     0x40bcde
  40bc78:	loopne 0x40bc3c
  40bc7a:	arpl   dx,ax
  40bc7c:	test   al,0xac
  40bc7e:	ror    DWORD PTR [edi],0x3d
  40bc81:	inc    edi
  40bc82:	xchg   BYTE PTR [ebp-0x769a85dd],bl
  40bc88:	or     eax,0xbf7ed7f0
  40bc8d:	int    0x70
  40bc8f:	test   DWORD PTR [edi],ebx
  40bc91:	(bad)  
  40bc92:	push   cs
  40bc93:	ret    
  40bc94:	(bad)  
  40bc95:	in     al,0xf7
  40bc97:	imul   ebx,DWORD PTR [esp+ecx*8+0x6ab25f9e],0xf70aa262
  40bca2:	lods   eax,DWORD PTR ds:[esi]
  40bca3:	fild   QWORD PTR [eax-0x69]
  40bca6:	es inc edi
  40bca8:	popa   
  40bca9:	cmp    eax,0xd40d0325
  40bcae:	xor    al,0xcc
  40bcb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb1:	dec    eax
  40bcb2:	add    al,0x7b
  40bcb4:	push   esi
  40bcb5:	les    eax,FWORD PTR [ebx]
  40bcb7:	cli    
  40bcb8:	pop    esp
  40bcb9:	push   0x2c784394
  40bcbe:	test   DWORD PTR [eax+eiz*4],0x8b0a7909
  40bcc5:	out    dx,al
  40bcc6:	retf   
  40bcc7:	mov    dl,0xa
  40bcc9:	jne    0x40bc8c
  40bccb:	jb     0x40bceb
  40bccd:	adc    DWORD PTR [eax],esp
  40bccf:	test   eax,0x9f533093
  40bcd4:	adc    cl,ah
  40bcd6:	call   0xbf0f6224
  40bcdb:	loope  0x40bd1c
  40bcdd:	ja     0x40bd24
  40bcdf:	inc    edx
  40bce0:	sbb    al,0xe3
  40bce2:	sub    dl,BYTE PTR [esi]
  40bce4:	pop    edi
  40bce5:	cmp    dh,0x6f
  40bce8:	jecxz  0x40bc84
  40bcea:	push   ds
  40bceb:	call   0xdd3448b1
  40bcf0:	inc    ebx
  40bcf1:	push   ss
  40bcf2:	sub    eax,esp
  40bcf4:	jne    0x40bc7f
  40bcf6:	loop   0x40bd2d
  40bcf8:	sbb    DWORD PTR [eax],edx
  40bcfa:	lods   al,BYTE PTR ds:[esi]
  40bcfb:	push   0x61
  40bcfd:	mov    esp,0xb1138030
  40bd02:	inc    eax
  40bd03:	add    al,0xef
  40bd05:	les    eax,FWORD PTR [ecx+0x1264293c]
  40bd0b:	das    
  40bd0c:	ret    
  40bd0d:	into   
  40bd0e:	ficomp DWORD PTR [eax+0x27]
  40bd11:	imul   ebx,DWORD PTR [edx+ecx*8-0x7a],0x15
  40bd16:	shl    DWORD PTR [ecx+0x7f],cl
  40bd19:	call   0x2aba:0xc19a60f9
  40bd20:	(bad)  
  40bd21:	or     BYTE PTR [ebp-0x19],bh
  40bd24:	jns    0x40bd7c
  40bd26:	add    edi,DWORD PTR [edx+0x1c8720d9]
  40bd2c:	mov    gs,esp
  40bd2e:	(bad)  
  40bd30:	lock add al,0x22
  40bd34:	cwde   
  40bd35:	pop    es
  40bd36:	in     eax,dx
  40bd37:	cwde   
  40bd38:	fwait
  40bd39:	aaa    
  40bd3a:	cmc    
  40bd3b:	popa   
  40bd3c:	adc    al,0xd1
  40bd3e:	popa   
  40bd3f:	cld    
  40bd40:	sbb    al,0x15
  40bd42:	dec    esp
  40bd43:	iret   
  40bd44:	les    eax,FWORD PTR [ebx-0x1b892bbd]
  40bd4a:	xor    bl,BYTE PTR [edx+0x32493c30]
  40bd50:	or     eax,0x9283ea49
  40bd55:	js     0x40bd21
  40bd57:	sub    ebx,DWORD PTR [edi-0x59]
  40bd5a:	out    0xea,al
  40bd5c:	mov    edi,0x5ea4609a
  40bd61:	push   cs
  40bd62:	sbb    BYTE PTR [eax],al
  40bd64:	xor    BYTE PTR [eax+0x6944ad3c],dl
  40bd6a:	call   0xedc0:0xb1f62c1f
  40bd71:	xor    bh,bh
  40bd73:	data16 (bad) 
  40bd75:	shl    dh,1
  40bd77:	test   BYTE PTR ds:0x3c8e93f7,bl
  40bd7d:	push   ebx
  40bd7e:	je     0x40bd1d
  40bd80:	mov    eax,0x8d6e4ec
  40bd85:	pusha  
  40bd86:	xor    eax,0xd7330ff4
  40bd8b:	inc    ecx
  40bd8c:	dec    ebx
  40bd8d:	(bad)  
  40bd8e:	mov    ecx,0xd1c5e4d2
  40bd93:	test   BYTE PTR [eax-0x600d5ebb],ah
  40bd99:	xchg   ecx,eax
  40bd9a:	neg    DWORD PTR [esi]
  40bd9c:	rol    ah,1
  40bd9e:	and    edx,eax
  40bda0:	stc    
  40bda1:	call   0x89da2f29
  40bda6:	aaa    
  40bda7:	mov    BYTE PTR [edi+0x52],ch
  40bdaa:	fld    DWORD PTR [ecx]
  40bdac:	pop    esi
  40bdad:	xlat   BYTE PTR ds:[ebx]
  40bdae:	sbb    eax,0x28259dc
  40bdb3:	fcom   st(0)
  40bdb5:	pop    esi
  40bdb6:	fld    st(1)
  40bdb8:	std    
  40bdb9:	outs   dx,DWORD PTR ds:[esi]
  40bdba:	jbe    0x40bd8a
  40bdbc:	jbe    0x40bd41
  40bdbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdbf:	sub    dl,ch
  40bdc1:	dec    ebp
  40bdc2:	int    0xaf
  40bdc4:	pop    ebx
  40bdc5:	jge    0x40bdb4
  40bdc7:	add    eax,0xa2ea284e
  40bdcc:	sbb    cl,cl
  40bdce:	call   0x83de:0xfeccb8df
  40bdd5:	xor    esi,esp
  40bdd7:	mov    cl,0xc3
  40bdd9:	push   edi
  40bdda:	jnp    0x40bd9f
  40bddc:	add    ebx,ecx
  40bdde:	outs   dx,BYTE PTR ds:[esi]
  40bddf:	add    dh,0x53
  40bde2:	add    eax,0xbc997f62
  40bde7:	mov    ah,0x43
  40bde9:	push   ds
  40bdea:	and    ch,BYTE PTR [ebx+ebx*4+0x373605df]
  40bdf1:	add    eax,0xbcd263f4
  40bdf6:	inc    edx
  40bdf7:	sar    DWORD PTR [ebx+0x6d],1
  40bdfa:	ja     0x40be10
  40bdfc:	jb     0x40be2b
  40bdfe:	arpl   WORD PTR [edi],bp
  40be00:	xchg   edi,eax
  40be01:	mov    eax,ds
  40be03:	jnp    0x40bd9a
  40be05:	xchg   esi,eax
  40be06:	shl    DWORD PTR [edi-0x1d94a9bd],cl
  40be0c:	inc    ebx
  40be0d:	icebp  
  40be0e:	fs adc eax,0x6046e94b
  40be14:	pop    ss
  40be15:	or     al,0x91
  40be17:	mov    dh,0x6a
  40be19:	dec    esi
  40be1a:	xchg   eax,esi
  40be1c:	sub    DWORD PTR [eax+0x687abf21],eax
  40be22:	or     al,bh
  40be24:	cli    
  40be25:	xchg   edx,eax
  40be26:	aaa    
  40be27:	stos   BYTE PTR es:[edi],al
  40be28:	xor    al,0x3d
  40be2a:	push   0xb5c71e52
  40be2f:	pop    esi
  40be30:	mov    di,0x30e0
  40be34:	add    DWORD PTR [ecx+0x75d88fd1],0xf7ab2457
  40be3e:	xlat   BYTE PTR ss:[ebx]
  40be40:	cmc    
  40be41:	ficomp DWORD PTR ds:0x913ffe75
  40be47:	mov    cl,0x10
  40be49:	pop    es
  40be4a:	mov    ebp,0x2c0a1ff7
  40be4f:	adc    edx,DWORD PTR [ebp-0x1d44651a]
  40be55:	cld    
  40be56:	jo     0x40beaa
  40be58:	clc    
  40be59:	clc    
  40be5a:	pop    ss
  40be5b:	int    0x17
  40be5d:	lods   al,BYTE PTR ds:[esi]
  40be5e:	pusha  
  40be5f:	jno    0x40be54
  40be61:	addr16 mov ebx,0x193db15a
  40be67:	fisttp WORD PTR [eax-0x38]
  40be6a:	test   al,0x84
  40be6c:	mov    al,0x13
  40be6e:	fmul   st(2),st
  40be70:	out    0x4d,eax
  40be72:	and    ebp,ebp
  40be74:	(bad)  
  40be75:	ret    
  40be76:	rcr    BYTE PTR [edi-0x892e3a1],0x7b
  40be7d:	or     al,0xbb
  40be7f:	adc    dl,al
  40be81:	jge    0x40beba
  40be83:	sbb    BYTE PTR [eax-0x39],dh
  40be86:	je     0x40be0a
  40be88:	sub    DWORD PTR ds:[edi],edx
  40be8b:	inc    edx
  40be8c:	sub    BYTE PTR ds:0xb9e270b3,ah
  40be92:	sbb    DWORD PTR [edx],ecx
  40be94:	imul   esi,DWORD PTR [eax+0x6a],0x7b
  40be98:	mov    eax,ds:0x4e4a76ea
  40be9d:	jbe    0x40bf11
  40be9f:	inc    ebx
  40bea0:	fbld   TBYTE PTR [ebx+ebp*8]
  40bea3:	mov    ebx,DWORD PTR [ebx+eiz*2-0x2b1b1b0f]
  40beaa:	scas   al,BYTE PTR es:[edi]
  40beab:	nop
  40beac:	sub    eax,0x77973b66
  40beb1:	les    esi,FWORD PTR [ebx-0x3a703694]
  40beb7:	dec    ecx
  40beb8:	or     BYTE PTR [edx+edi*1+0x4bdc10d9],0x64
  40bec0:	in     eax,dx
  40bec1:	jmp    edx
  40bec3:	retf   
  40bec4:	sbb    ch,BYTE PTR ds:0x86e52574
  40beca:	into   
  40becb:	lods   al,BYTE PTR ds:[esi]
  40becc:	scas   al,BYTE PTR es:[edi]
  40becd:	aas    
  40bece:	rcr    BYTE PTR [edi+0x758f3cc7],cl
  40bed4:	add    edx,ecx
  40bed6:	xor    dh,BYTE PTR [esi+0x47]
  40bed9:	jmp    0x40be77
  40bedb:	gs add bh,bl
  40bede:	mov    dh,0xad
  40bee0:	es inc ebp
  40bee2:	into   
  40bee3:	aad    0x52
  40bee5:	pop    edx
  40bee6:	jns    0x40bebd
  40bee8:	int    0x6d
  40beea:	mov    ecx,0x5f318634
  40beef:	adc    esp,DWORD PTR [edx-0xff874f1]
  40bef5:	xchg   ebp,eax
  40bef6:	enter  0x6a5d,0x70
  40befa:	add    bl,dh
  40befc:	test   al,0xfb
  40befe:	push   ebx
  40beff:	and    al,0xa7
  40bf01:	sahf   
  40bf02:	int    0x1f
  40bf04:	shr    DWORD PTR [ebx+0x53],cl
  40bf07:	jp     0x40bf74
  40bf09:	test   dh,dh
  40bf0b:	fwait
  40bf0c:	ret    
  40bf0d:	popf   
  40bf0e:	and    al,0xce
  40bf10:	xlat   BYTE PTR ds:[ebx]
  40bf11:	push   edi
  40bf12:	arpl   WORD PTR [ecx-0x2d1a6fe8],cx
  40bf18:	adc    eax,0x26f88a95
  40bf1d:	cli    
  40bf1e:	mov    esi,0x29bff9be
  40bf23:	push   eax
  40bf24:	cmp    DWORD PTR [esi+0x56906447],esp
  40bf2a:	sbb    ah,BYTE PTR [ebp+0x45]
  40bf2d:	xor    ebp,DWORD PTR [ecx+ebp*4-0x4127d240]
  40bf34:	or     DWORD PTR [esi],edx
  40bf36:	push   0xffffff8a
  40bf38:	dec    ebp
  40bf39:	jne    0x40bfb9
  40bf3b:	fcomp  DWORD PTR [eax+0x2]
  40bf3e:	test   DWORD PTR [edx-0x21],edi
  40bf41:	aad    0x84
  40bf43:	push   cs
  40bf44:	(bad)  
  40bf45:	mov    DWORD PTR [ebx+edi*8],0x605255f0
  40bf4c:	bound  esi,QWORD PTR [esi+0x7d]
  40bf4f:	or     esi,DWORD PTR ds:0x729fe62b
  40bf55:	icebp  
  40bf56:	or     eax,0x4ece95cf
  40bf5b:	cmp    al,0x5d
  40bf5d:	inc    edi
  40bf5e:	fld    QWORD PTR [ebx-0x21ff5989]
  40bf64:	call   0x8d1ef781
  40bf69:	or     bh,ah
  40bf6b:	pop    eax
  40bf6c:	in     al,dx
  40bf6d:	xor    DWORD PTR [edx+0x30a400e2],edi
  40bf73:	je     0x40bf45
  40bf75:	and    BYTE PTR [ebx-0x76],dl
  40bf78:	mov    ebp,0xb138c326
  40bf7d:	ror    BYTE PTR [eax],0x30
  40bf80:	pop    ss
  40bf81:	(bad)  
  40bf82:	fcmovnbe st,st(2)
  40bf84:	sub    bh,BYTE PTR [esi]
  40bf86:	push   ss
  40bf87:	mov    al,0x60
  40bf89:	inc    eax
  40bf8a:	xchg   edx,eax
  40bf8b:	cmc    
  40bf8c:	jge    0x40bfa9
  40bf8e:	push   eax
  40bf8f:	xchg   esp,eax
  40bf90:	xchg   ebp,eax
  40bf91:	iret   
  40bf92:	sbb    edx,esi
  40bf94:	ja     0x40bf85
  40bf96:	loopne 0x40bf8e
  40bf98:	and    eax,0x5cbbaec4
  40bf9d:	add    DWORD PTR [edx+0x215d0cbd],0xffa5489c
  40bfa7:	cmp    BYTE PTR [eax],ah
  40bfa9:	adc    eax,DWORD PTR [ebp+0x5856436e]
  40bfaf:	sbb    dh,bl
  40bfb1:	dec    eax
  40bfb2:	jl     0x40bf93
  40bfb4:	cwde   
  40bfb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb6:	and    dh,bh
  40bfb8:	repnz int 0xff
  40bfbb:	pop    esi
  40bfbc:	fadd   QWORD PTR [edi]
  40bfbe:	mov    bl,0xf8
  40bfc0:	inc    ebp
  40bfc1:	adc    BYTE PTR [ecx+0x4043e926],cl
  40bfc7:	mov    ch,0xc7
  40bfc9:	jmp    0xb044:0x42d7fc3b
  40bfd0:	jno    0x40c024
  40bfd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd3:	rol    DWORD PTR [edx],1
  40bfd5:	sub    BYTE PTR [edi+0x4e54c33e],bl
  40bfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfdc:	clc    
  40bfdd:	scas   al,BYTE PTR es:[edi]
  40bfde:	test   BYTE PTR ds:0xf4e8fbcc,dl
  40bfe4:	clc    
  40bfe5:	js     0x40bf78
  40bfe7:	mov    ds:0xa9509962,al
  40bfec:	fidiv  WORD PTR [esi-0x482adc2]
  40bff2:	cmp    esi,DWORD PTR [ecx-0x22ed4424]
  40bff8:	mov    dh,BYTE PTR [edx+0x24]
  40bffb:	neg    BYTE PTR [edi+0x58cc1389]
  40c001:	or     DWORD PTR [ecx],esi
  40c003:	jmp    0x40bf85
  40c005:	arpl   dx,cx
  40c007:	adc    al,0x82
  40c009:	test   al,0xa5
  40c00b:	sbb    DWORD PTR [edx+0x68],eax
  40c00e:	jle    0x40c038
  40c010:	or     BYTE PTR [eax+0x47b40e52],0x8c
  40c017:	mov    edx,DWORD PTR [edx+eax*4+0x38]
  40c01b:	xor    ebx,eax
  40c01d:	pop    ebx
  40c01e:	xor    dl,BYTE PTR [ebp+0x6616044]
  40c024:	icebp  
  40c025:	mov    ch,BYTE PTR [esi-0x6f3249f3]
  40c02b:	xchg   esp,eax
  40c02c:	(bad)  
  40c02e:	push   ss
  40c02f:	add    BYTE PTR [ecx],bl
  40c031:	in     al,dx
  40c032:	push   ebx
  40c033:	ins    BYTE PTR es:[edi],dx
  40c034:	fcom   DWORD PTR [edx*8-0x59f6a4b3]
  40c03b:	dec    ecx
  40c03c:	jb     0x40c097
  40c03e:	cmp    DWORD PTR [edi],edi
  40c040:	stos   DWORD PTR es:[edi],eax
  40c041:	sub    esi,ecx
  40c043:	mov    ds,esp
  40c045:	stos   BYTE PTR es:[edi],al
  40c046:	sub    bl,BYTE PTR [esi-0x70263342]
  40c04c:	lds    ebx,FWORD PTR [edi+0x42]
  40c04f:	scas   al,BYTE PTR es:[edi]
  40c050:	aam    0xb3
  40c052:	pusha  
  40c053:	enter  0x6081,0x9
  40c057:	pop    ebp
  40c058:	ss mov ebx,0x1f53c9a2
  40c05e:	enter  0x4fec,0xc1
  40c062:	xor    BYTE PTR [edi],0x64
  40c065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c066:	mov    bh,0x6d
  40c068:	pusha  
  40c069:	sub    DWORD PTR ds:0x335732f7,ebx
  40c06f:	frstor [ebx-0x44337234]
  40c075:	or     al,0xac
  40c077:	jnp    0x40c067
  40c079:	fist   DWORD PTR [ebx-0x2e]
  40c07c:	ficomp DWORD PTR [ecx-0x6ee5e626]
  40c082:	cli    
  40c083:	aas    
  40c084:	xchg   BYTE PTR [esi-0xc04d3de],bh
  40c08a:	jbe    0x40c093
  40c08c:	fwait
  40c08d:	cwde   
  40c08e:	and    esi,edi
  40c090:	jmp    0xd7cd1106
  40c095:	cli    
  40c096:	push   0x53
  40c098:	mov    ecx,0x6eec7a42
  40c09d:	pop    ecx
  40c09e:	out    0x6f,eax
  40c0a0:	repz push edx
  40c0a2:	cmp    eax,0x37c40bdb
  40c0a7:	jge    0x40c095
  40c0a9:	mov    esp,0x35d0f922
  40c0ae:	or     eax,0xaf2afdac
  40c0b3:	sahf   
  40c0b4:	jb     0x40c0de
  40c0b6:	sub    eax,0x96fcf605
  40c0bb:	push   ebp
  40c0bc:	push   ebp
  40c0bd:	push   esi
  40c0be:	pop    ebp
  40c0bf:	mov    bh,0x61
  40c0c1:	test   eax,0x4d5b67ab
  40c0c6:	jnp    0x40c115
  40c0c8:	iret   
  40c0c9:	jne    0x40c11c
  40c0cb:	mov    dh,0xb8
  40c0cd:	div    BYTE PTR [edx-0x57ab73ae]
  40c0d3:	dec    ebx
  40c0d4:	mov    dh,0x12
  40c0d6:	add    bl,0x82
  40c0d9:	jae    0x40c0c6
  40c0db:	lea    esi,[ecx+0x1a08dfc1]
  40c0e1:	push   edi
  40c0e2:	and    al,ah
  40c0e4:	cwde   
  40c0e5:	sub    DWORD PTR [ecx-0x71dc37ea],edx
  40c0eb:	jae    0x40c0ad
  40c0ed:	enter  0xcd94,0x9
  40c0f1:	sbb    DWORD PTR [ebp-0x4c6a4f17],ebp
  40c0f7:	or     esi,eax
  40c0f9:	je     0x40c13e
  40c0fb:	jne    0x40c167
  40c0fd:	sub    DWORD PTR [ebp-0x6f],ebp
  40c100:	mov    cl,0xe2
  40c102:	sti    
  40c103:	ss dec edi
  40c105:	push   ecx
  40c106:	ret    
  40c107:	jmp    0x40c142
  40c109:	mov    cl,0x8d
  40c10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c10c:	cmp    DWORD PTR [edx+ebp*1+0x6e],ecx
  40c110:	gs mov edx,0xfdb0d808
  40c116:	pop    ss
  40c117:	xchg   edx,eax
  40c118:	fmul   DWORD PTR [esi-0xb]
  40c11b:	jo     0x40c0a6
  40c11d:	sbb    esp,DWORD PTR [ebp+ecx*4-0x40f9c364]
  40c124:	push   ebp
  40c125:	daa    
  40c126:	adc    al,0xab
  40c128:	mov    ?,WORD PTR [edx+ebp*4-0x758d1550]
  40c12f:	pop    ebp
  40c130:	jmp    0x40c181
  40c132:	or     eax,0x4da6e0
  40c137:	xor    esi,DWORD PTR [ecx]
  40c139:	xchg   ecx,eax
  40c13a:	jp     0x40c12c
  40c13c:	fst    QWORD PTR [ebx+0x52]
  40c13f:	not    DWORD PTR ds:0x8f26c0c4
  40c145:	mov    ss,edi
  40c147:	mov    ecx,0x79064e09
  40c14c:	pushf  
  40c14d:	pop    ds
  40c14e:	or     BYTE PTR [edi+0x3d],ch
  40c151:	add    al,0x7e
  40c153:	and    eax,0x2b62dbd5
  40c158:	jp     0x40c183
  40c15a:	psrlw  mm0,QWORD PTR [ecx-0x2d]
  40c15e:	ror    bl,1
  40c160:	push   ebp
  40c161:	xchg   esi,eax
  40c162:	xor    bl,0x5d
  40c165:	sub    DWORD PTR [eax],ebx
  40c167:	adc    BYTE PTR [ebp-0x76],dh
  40c16a:	dec    esp
  40c16b:	inc    ebx
  40c16c:	mov    BYTE PTR [eax+0x5c4bafc4],ah
  40c172:	jecxz  0x40c16b
  40c174:	jo     0x40c182
  40c176:	jl     0x40c190
  40c178:	(bad)  
  40c179:	adc    ebx,DWORD PTR [edi+ecx*8]
  40c17c:	js     0x40c152
  40c17e:	enter  0x19e1,0x2e
  40c182:	out    0xdf,eax
  40c184:	mov    cl,0xf0
  40c186:	cmp    BYTE PTR [ebx+0x7fd0f026],ch
  40c18c:	xchg   esp,eax
  40c18d:	nop
  40c18e:	and    ebx,DWORD PTR [edi-0x309bb84f]
  40c194:	inc    esi
  40c195:	loop   0x40c136
  40c197:	xchg   ebx,eax
  40c198:	repnz (bad) 
  40c19a:	mov    ds:0x5dc27f06,eax
  40c19f:	push   esi
  40c1a0:	mov    ebp,0x2672536b
  40c1a5:	sub    al,0x0
  40c1a7:	add    ecx,DWORD PTR [esi-0x7e8a3671]
  40c1ad:	xor    BYTE PTR [edx-0xa57ac2f],bl
  40c1b3:	lds    ebp,FWORD PTR [ebx-0x43]
  40c1b6:	daa    
  40c1b7:	cwde   
  40c1b8:	sub    eax,DWORD PTR [edx-0x75]
  40c1bb:	(bad)  
  40c1bc:	sbb    al,0x2e
  40c1be:	push   ebp
  40c1bf:	mov    ah,0xd6
  40c1c1:	stos   DWORD PTR es:[edi],eax
  40c1c2:	jns    0x40c19f
  40c1c4:	shr    BYTE PTR [ebp+0x7db663ad],cl
  40c1ca:	mov    al,0xb8
  40c1cc:	push   esi
  40c1cd:	mov    al,0x61
  40c1cf:	push   ebp
  40c1d0:	scas   eax,DWORD PTR es:[edi]
  40c1d1:	mov    ds,WORD PTR [ebx+ecx*1+0x3d]
  40c1d5:	cdq    
  40c1d6:	xchg   esp,eax
  40c1d7:	add    al,0x4c
  40c1d9:	cwde   
  40c1da:	push   ebx
  40c1db:	or     al,0x10
  40c1dd:	pusha  
  40c1de:	pop    ds
  40c1df:	pop    es
  40c1e0:	adc    eax,0xa028dadb
  40c1e5:	mov    es,esp
  40c1e7:	stc    
  40c1e8:	stc    
  40c1e9:	push   edx
  40c1ea:	rol    DWORD PTR [ebx+0x4b],cl
  40c1ed:	push   0x5d8e17bb
  40c1f2:	ret    
  40c1f3:	out    0x2b,eax
  40c1f5:	or     eax,ebx
  40c1f7:	les    ebx,FWORD PTR [ebx-0x60]
  40c1fa:	fld    DWORD PTR [ecx*4+0x7294e268]
  40c201:	cmp    dh,BYTE PTR ds:0xe862df1d
  40c207:	call   FWORD PTR [esi]
  40c209:	xchg   ebp,eax
  40c20a:	adc    bl,dh
  40c20c:	adc    eax,0x9f97a6b4
  40c211:	aad    0xb4
  40c213:	dec    ecx
  40c214:	rol    DWORD PTR [edi-0x1b],0x5f
  40c218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c219:	ins    BYTE PTR es:[edi],dx
  40c21a:	(bad)  
  40c21b:	shr    DWORD PTR [esi],0x35
  40c21e:	mov    cl,0x6d
  40c220:	aad    0x13
  40c222:	cmp    eax,0xd56b87de
  40c227:	mov    ch,0xb
  40c229:	push   eax
  40c22a:	cmp    al,0xa2
  40c22c:	jge    0x40c1f4
  40c22e:	leave  
  40c22f:	and    DWORD PTR [edx],0x3f
  40c232:	mov    edx,DWORD PTR [esi-0x58]
  40c235:	or     al,0x5
  40c237:	xchg   esp,eax
  40c238:	mov    ebx,0x9d49335b
  40c23d:	push   cs
  40c23e:	leave  
  40c23f:	mov    DWORD PTR [ecx],edi
  40c241:	arpl   WORD PTR [edi],bx
  40c243:	pop    es
  40c244:	mov    ah,0x99
  40c246:	cmp    eax,0x2939fda4
  40c24b:	adc    esp,ecx
  40c24d:	add    eax,edx
  40c24f:	(bad)  
  40c250:	icebp  
  40c251:	jg     0x40c2c3
  40c253:	test   bl,ah
  40c255:	das    
  40c256:	sub    BYTE PTR [esi+0x556301d7],bl
  40c25c:	cs pop esi
  40c25e:	lds    ebp,FWORD PTR [esp+ebp*1+0xb]
  40c262:	pop    ebp
  40c263:	inc    ebx
  40c264:	dec    esp
  40c265:	add    DWORD PTR [esi+0x6bcb458c],ecx
  40c26b:	ins    BYTE PTR es:[edi],dx
  40c26c:	or     bh,BYTE PTR ds:0xfa424fc8
  40c272:	cmp    eax,0x5d
  40c275:	push   edi
  40c276:	or     al,0xd4
  40c278:	sub    al,0x76
  40c27a:	push   cs
  40c27b:	enter  0x7adc,0x7e
  40c27f:	and    BYTE PTR [edx+0x54770a95],dl
  40c285:	inc    esi
  40c286:	and    al,BYTE PTR [edx]
  40c288:	iret   
  40c289:	dec    edx
  40c28a:	pop    esp
  40c28b:	add    DWORD PTR [ecx],0x3d
  40c28e:	hlt    
  40c28f:	cmp    eax,0x2c809f31
  40c294:	pusha  
  40c295:	sbb    al,0xdb
  40c297:	lds    edi,FWORD PTR [esi+0x7c]
  40c29a:	xchg   edi,ebx
  40c29c:	inc    ebx
  40c29d:	mov    bl,0xd6
  40c29f:	push   0x69e54120
  40c2a4:	or     eax,0x37774787
  40c2a9:	mov    esp,0x20ef928c
  40c2ae:	std    
  40c2af:	adc    BYTE PTR [esi+edi*8+0x3da533fd],0x36
  40c2b7:	mov    dl,0xff
  40c2b9:	iret   
  40c2ba:	ins    DWORD PTR es:[edi],dx
  40c2bb:	cld    
  40c2bc:	mov    dl,0x8
  40c2be:	ret    0x1224
  40c2c1:	add    ebx,edx
  40c2c3:	js     0x40c319
  40c2c5:	aas    
  40c2c6:	daa    
  40c2c7:	mov    edi,0x62797b7
  40c2cc:	inc    eax
  40c2cd:	jmp    0xf9a6:0xd9d6446a
  40c2d4:	jnp    0x40c322
  40c2d6:	mov    al,0x5a
  40c2d8:	outs   dx,BYTE PTR ds:[esi]
  40c2d9:	(bad)  
  40c2da:	out    dx,eax
  40c2db:	icebp  
  40c2dc:	jle    0x40c294
  40c2de:	out    dx,al
  40c2df:	out    dx,al
  40c2e0:	dec    ebp
  40c2e1:	inc    ecx
  40c2e2:	inc    esp
  40c2e3:	shr    DWORD PTR [eax+0x13e4c199],cl
  40c2e9:	pushf  
  40c2ea:	xor    dh,BYTE PTR [edi+0x0]
  40c2ed:	ja     0x40c290
  40c2ef:	(bad)  [ebp+0x61344525]
  40c2f5:	(bad)  
  40c2f6:	outs   dx,DWORD PTR ds:[esi]
  40c2f7:	mov    cs,edi
  40c2f9:	push   edi
  40c2fa:	push   edi
  40c2fb:	adc    esp,DWORD PTR [ebx+0x1]
  40c2fe:	in     eax,0x3a
  40c300:	jb     0x40c365
  40c302:	cmp    DWORD PTR [eax-0x7e],esi
  40c305:	or     ch,BYTE PTR [esi-0x4f]
  40c308:	std    
  40c309:	mov    ebx,0xed0898dc
  40c30e:	(bad)  
  40c30f:	mov    ebp,0xcdfeb379
  40c314:	fcomi  st,st(5)
  40c316:	mov    al,0xcb
  40c318:	sbb    bh,BYTE PTR [eax]
  40c31a:	clc    
  40c31b:	push   es
  40c31c:	ret    0x2964
  40c31f:	pop    ss
  40c320:	add    BYTE PTR [ebx+0x31],cl
  40c323:	std    
  40c324:	fs mov ch,0xb4
  40c327:	push   edx
  40c328:	adc    eax,0xd88d1ca
  40c32d:	dec    DWORD PTR [eax+0x4e]
  40c330:	das    
  40c331:	xchg   DWORD PTR [ebx+0x14],ebp
  40c334:	les    ebp,FWORD PTR [edi-0x77]
  40c337:	mov    esi,0x4b335c23
  40c33c:	pop    eax
  40c33d:	scas   al,BYTE PTR es:[edi]
  40c33e:	xchg   DWORD PTR [edi],edi
  40c340:	mov    ecx,0xeaba2586
  40c345:	sar    BYTE PTR [ecx+ecx*8-0x4c],0xf
  40c34a:	outs   dx,BYTE PTR ds:[esi]
  40c34b:	jns    0x40c3be
  40c34d:	dec    esp
  40c34e:	popf   
  40c34f:	cmp    DWORD PTR [edx*4-0x78fe7c84],ebx
  40c356:	fbstp  TBYTE PTR [esi-0x14]
  40c359:	ret    
  40c35a:	xor    DWORD PTR [eax+0x5e],0x3dc496e4
  40c361:	mov    eax,0x691ee563
  40c366:	test   al,0xec
  40c368:	ins    DWORD PTR es:[edi],dx
  40c369:	fdivr  QWORD PTR [eax+ebp*1]
  40c36c:	popa   
  40c36d:	jo     0x40c38f
  40c36f:	sbb    bl,BYTE PTR [edi+0x3f]
  40c372:	jns    0x40c3ca
  40c374:	fisub  WORD PTR [edx-0x6f4f420a]
  40c37a:	jb     0x40c318
  40c37c:	je     0x40c395
  40c37e:	shl    BYTE PTR [esi],1
  40c380:	retf   0xfe75
  40c383:	sbb    eax,0xc1a141e1
  40c388:	out    0xaa,eax
  40c38a:	mov    WORD PTR [edi-0x15b6b521],es
  40c390:	mov    ebx,0x2b1cdcda
  40c395:	imul   ecx,DWORD PTR [eax+0x59],0x56
  40c399:	adc    BYTE PTR [ecx+0x4b915816],ah
  40c39f:	nop
  40c3a0:	test   bl,dh
  40c3a2:	fs or  eax,0x374c98ed
  40c3a8:	jmp    0x8f47:0x51aa2474
  40c3af:	sbb    bh,al
  40c3b1:	sub    esp,DWORD PTR [ebp+eax*2-0x60af90d7]
  40c3b8:	cmp    ecx,DWORD PTR [esi-0x5b]
  40c3bb:	ret    0x927c
  40c3be:	xchg   ecx,ecx
  40c3c0:	ftst   
  40c3c2:	cmp    eax,0x1bbd26ff
  40c3c7:	int    0x1d
  40c3c9:	daa    
  40c3ca:	xchg   esi,eax
  40c3cb:	pushf  
  40c3cc:	add    eax,0xde42055e
  40c3d1:	adc    DWORD PTR [esp+ebx*2+0x5023a479],edi
  40c3d8:	imul   DWORD PTR fs:[ebx+ebp*1+0x3f]
  40c3dd:	xchg   ebp,eax
  40c3de:	into   
  40c3df:	sub    al,bl
  40c3e1:	cmp    eax,edi
  40c3e3:	and    ebp,DWORD PTR [edx+0x19]
  40c3e6:	(bad)  
  40c3e7:	aaa    
  40c3e8:	push   0xffffffb6
  40c3ea:	adc    ebp,esp
  40c3ec:	int    0xcb
  40c3ee:	add    BYTE PTR [esi+0x60],bl
  40c3f1:	scas   eax,DWORD PTR es:[edi]
  40c3f2:	xor    al,BYTE PTR [ebx]
  40c3f4:	sti    
  40c3f5:	dec    edi
  40c3f6:	add    eax,0xa42b6d35
  40c3fb:	pusha  
  40c3fc:	mov    cl,0x37
  40c3fe:	dec    ebp
  40c3ff:	mov    dh,0x6f
  40c401:	div    DWORD PTR ds:0x165984d7
  40c407:	xchg   ebp,eax
  40c408:	sahf   
  40c409:	pop    edi
  40c40a:	in     al,0x9
  40c40c:	sub    esp,DWORD PTR [ebx-0x9]
  40c40f:	adc    esi,eax
  40c411:	iret   
  40c412:	push   esi
  40c413:	mov    edi,0x3764785d
  40c418:	xor    esp,DWORD PTR [edx]
  40c41a:	xchg   esp,eax
  40c41b:	pop    ebx
  40c41c:	iret   
  40c41d:	(bad)  
  40c41e:	pop    edx
  40c41f:	arpl   bx,bp
  40c421:	cmc    
  40c422:	pop    ebp
  40c423:	or     eax,0x160c6ccf
  40c428:	jnp    0x40c3bd
  40c42a:	or     DWORD PTR [eax-0x44a57b75],esi
  40c430:	and    dh,BYTE PTR [edx+ecx*4-0x16]
  40c434:	xchg   ebx,eax
  40c435:	dec    ebx
  40c436:	ins    DWORD PTR es:[edi],dx
  40c437:	adc    eax,0x40975c88
  40c43c:	popa   
  40c43d:	mov    edi,ecx
  40c43f:	nop
  40c440:	xchg   eax,edx
  40c442:	inc    esi
  40c443:	adc    DWORD PTR [ebx+eax*1],edi
  40c446:	fcomi  st,st(5)
  40c448:	imul   edi,eax,0xfffffffb
  40c44b:	in     eax,0xd7
  40c44d:	jmp    0x1d40:0xebdcc721
  40c454:	lods   al,BYTE PTR ds:[esi]
  40c455:	sahf   
  40c456:	stc    
  40c457:	and    al,0x2c
  40c459:	sub    bh,BYTE PTR [eax]
  40c45b:	adc    ebp,DWORD PTR [edx]
  40c45d:	and    BYTE PTR [edi+ebx*4],dh
  40c460:	jbe    0x40c4c4
  40c462:	mov    cl,0xd9
  40c464:	pop    es
  40c465:	dec    ebx
  40c466:	shl    DWORD PTR [edx*8-0x1fd40c8d],cl
  40c46d:	mov    ebp,DWORD PTR [ecx-0x2e676c36]
  40c473:	jbe    0x40c457
  40c475:	adc    al,0x2c
  40c477:	mov    ch,0x15
  40c479:	sub    eax,0xfffffff3
  40c47c:	sbb    BYTE PTR ds:0xb9e896d0,al
  40c482:	jns    0x40c467
  40c484:	sub    DWORD PTR [eax-0x53],0xffffffc4
  40c488:	psubusw mm1,QWORD PTR [eax-0x17ffaa8]
  40c48f:	xchg   ecx,eax
  40c490:	xchg   cl,bl
  40c492:	std    
  40c493:	xchg   edi,eax
  40c494:	shl    BYTE PTR ds:0x251232a6,1
  40c49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c49b:	pop    ecx
  40c49c:	xor    cl,BYTE PTR [edx+0x6b017ac3]
  40c4a2:	icebp  
  40c4a3:	mov    bh,0x3a
  40c4a5:	sar    ebx,1
  40c4a7:	fiadd  WORD PTR [edi+ebp*2]
  40c4aa:	scas   al,BYTE PTR es:[edi]
  40c4ab:	arpl   WORD PTR [ebx],bx
  40c4ad:	add    DWORD PTR [esi+ebx*8+0x251f09e3],ebp
  40c4b4:	aaa    
  40c4b5:	rcr    esp,0xe9
  40c4b8:	xchg   ebx,eax
  40c4b9:	popa   
  40c4ba:	adc    esp,DWORD PTR ds:0x3c58160f
  40c4c0:	fmul   QWORD PTR [ecx+0x519de2f]
  40c4c6:	mov    eax,ds:0xce0d7b8d
  40c4cb:	daa    
  40c4cc:	push   esi
  40c4cd:	(bad)  
  40c4ce:	jge    0x40c529
  40c4d0:	dec    edx
  40c4d1:	and    DWORD PTR [ebx],ebx
  40c4d3:	ret    0xf911
  40c4d6:	inc    esp
  40c4d7:	jb     0x40c536
  40c4d9:	test   al,0x28
  40c4db:	mov    eax,fs
  40c4dd:	out    0x35,eax
  40c4df:	sahf   
  40c4e0:	mov    cl,0xc1
  40c4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e3:	mov    bl,0xe6
  40c4e5:	xchg   ecx,eax
  40c4e6:	pop    ebx
  40c4e7:	daa    
  40c4e8:	lods   al,BYTE PTR ds:[esi]
  40c4e9:	js     0x40c4c9
  40c4eb:	pop    ebx
  40c4ec:	pop    ecx
  40c4ed:	cmp    al,0x1e
  40c4ef:	mov    dh,0x5e
  40c4f1:	mov    dh,0x2b
  40c4f3:	xor    eax,0x3a0d7dee
  40c4f8:	lahf   
  40c4f9:	xchg   eax,edx
  40c4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4fc:	cdq    
  40c4fd:	std    
  40c4fe:	dec    esi
  40c4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c500:	pop    ebx
  40c501:	adc    eax,0x98f47e13
  40c506:	sbb    DWORD PTR [eax-0x36],esi
  40c509:	sub    cl,BYTE PTR [edx-0x3f]
  40c50c:	jns    0x40c566
  40c50e:	push   ds
  40c50f:	in     al,0x5a
  40c511:	lods   eax,DWORD PTR ds:[esi]
  40c512:	sub    al,0xde
  40c514:	xchg   BYTE PTR [edx],dh
  40c516:	dec    eax
  40c517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c518:	stc    
  40c519:	mov    dl,0x2a
  40c51b:	mov    esp,0x89773692
  40c520:	jae    0x40c4c2
  40c522:	push   es
  40c523:	les    ebp,FWORD PTR [ebx-0x9]
  40c526:	shr    DWORD PTR [eax-0x46],cl
  40c529:	and    eax,0x427ff1e9
  40c52e:	shr    bh,1
  40c530:	ret    0xc3bc
  40c533:	int    0x34
  40c535:	int3   
  40c536:	add    BYTE PTR [esi+0x4ffc1a0d],cl
  40c53c:	sub    eax,0xe98c6de0
  40c541:	jp     0x40c555
  40c543:	sub    al,dl
  40c545:	sub    edx,DWORD PTR [edx-0x7ff7eb4d]
  40c54b:	enter  0xa47e,0x10
  40c54f:	rcr    bh,1
  40c551:	int    0x9d
  40c553:	shl    DWORD PTR [ecx-0x61],1
  40c556:	hlt    
  40c557:	adc    bl,BYTE PTR [ebx+eax*8-0x37]
  40c55b:	inc    eax
  40c55c:	shl    BYTE PTR [edi+ecx*1],0xb2
  40c560:	push   esp
  40c561:	pop    ecx
  40c562:	ficom  DWORD PTR es:[ebx-0x365bb4c2]
  40c569:	sbb    al,0x8c
  40c56b:	in     al,dx
  40c56c:	aas    
  40c56d:	ror    dh,cl
  40c56f:	pop    edx
  40c570:	in     eax,0x28
  40c572:	mov    WORD PTR [edi+0x45],ds
  40c575:	stos   BYTE PTR es:[edi],al
  40c576:	imul   esi,DWORD PTR [esi-0x7e],0x82d60662
  40c57d:	fisub  DWORD PTR [esp+eax*8]
  40c580:	cmp    BYTE PTR [edx+0x36],0x99
  40c584:	push   esp
  40c585:	mov    ds:0x6332a149,eax
  40c58a:	pop    ds
  40c58b:	inc    eax
  40c58c:	mov    al,0x35
  40c58e:	mov    eax,DWORD PTR [bx+si+0x341a]
  40c593:	mov    DWORD PTR [ebx-0x4e],ebp
  40c596:	add    al,0xe0
  40c598:	add    al,0x3e
  40c59a:	jno    0x40c60d
  40c59c:	jno    0x40c54c
  40c59e:	stos   BYTE PTR es:[edi],al
  40c59f:	or     BYTE PTR [ebx],ah
  40c5a1:	and    BYTE PTR ds:0xc3a1084e,bl
  40c5a7:	xchg   BYTE PTR [ebx-0x46],dl
  40c5aa:	lea    ecx,[edi-0xe]
  40c5ad:	xchg   BYTE PTR [esi],ch
  40c5af:	out    0x83,al
  40c5b1:	(bad)  
  40c5b2:	jae    0x40c56d
  40c5b4:	add    ebx,esp
  40c5b6:	add    esi,DWORD PTR [esi-0x1ec1d0d8]
  40c5bc:	xchg   esi,eax
  40c5bd:	stos   DWORD PTR es:[edi],eax
  40c5be:	enter  0x5fc1,0xef
  40c5c2:	jnp    0x40c5d0
  40c5c4:	jnp    0x40c631
  40c5c6:	mov    cl,0x72
  40c5c8:	out    0xe9,eax
  40c5ca:	(bad)  
  40c5cb:	lds    eax,FWORD PTR [eax+0x1f484a98]
  40c5d1:	add    bl,cl
  40c5d3:	cmp    BYTE PTR [ecx+0x41257efd],0xab
  40c5da:	in     eax,0x40
  40c5dc:	xadd   ecx,esi
  40c5df:	or     BYTE PTR [edx+0x3b],cl
  40c5e2:	ins    BYTE PTR es:[edi],dx
  40c5e3:	mov    ds:0x67948058,eax
  40c5e8:	dec    ebx
  40c5e9:	cmc    
  40c5ea:	cmp    eax,0x46de9995
  40c5ef:	xchg   ebx,eax
  40c5f0:	popf   
  40c5f1:	dec    esi
  40c5f2:	daa    
  40c5f3:	hlt    
  40c5f4:	push   ss
  40c5f5:	add    DWORD PTR [edi+0x73],eax
  40c5f8:	hlt    
  40c5f9:	inc    ebx
  40c5fa:	jl     0x40c5cc
  40c5fc:	cwde   
  40c5fd:	xor    dh,ah
  40c5ff:	dec    esp
  40c600:	sub    cl,dh
  40c602:	dec    edx
  40c603:	mov    ds:0x1abc5f19,al
  40c608:	ja     0x40c5fa
  40c60a:	fcomi  st,st(3)
  40c60c:	jmp    0xe6bb:0x21993b61
  40c613:	add    esi,DWORD PTR [ebx+0x17]
  40c616:	dec    edx
  40c617:	jbe    0x40c645
  40c619:	jmp    0x9c64e0c2
  40c61e:	aad    0x52
  40c620:	or     DWORD PTR [ebp-0x4514a54a],esi
  40c626:	imul   ecx,edx,0x6fdf89c3
  40c62c:	ins    DWORD PTR es:[edi],dx
  40c62d:	pop    ecx
  40c62e:	push   edx
  40c62f:	xor    eax,0xa4c85fc
  40c634:	mov    eax,0x1b14ad05
  40c639:	adc    cl,ch
  40c63b:	pop    edx
  40c63c:	les    esi,FWORD PTR [edx-0x4f91286c]
  40c642:	mov    gs,WORD PTR [ebp-0xd]
  40c645:	push   cs
  40c646:	push   ss
  40c647:	mov    al,ds:0xddc9de78
  40c64c:	or     ebp,DWORD PTR [eax]
  40c64e:	pop    ebp
  40c64f:	dec    eax
  40c650:	adc    edx,DWORD PTR [edx]
  40c652:	cmp    eax,0xa4dbd037
  40c657:	arpl   si,sp
  40c659:	jb     0x40c6d0
  40c65b:	jmp    0xb6ea70a8
  40c660:	js     0x40c6a3
  40c662:	push   ds
  40c663:	and    al,0x17
  40c665:	adc    eax,0xdb394cc
  40c66a:	mov    bh,0x8c
  40c66c:	shl    dh,0x6a
  40c66f:	outs   dx,DWORD PTR ds:[esi]
  40c670:	test   BYTE PTR [ebp-0x200c1c7c],dh
  40c676:	xchg   edi,eax
  40c677:	push   0xffffff80
  40c679:	cdq    
  40c67a:	loopne 0x40c60f
  40c67c:	cmp    dl,BYTE PTR [ecx+0x7a496e1d]
  40c682:	mov    eax,0x7e4faf25
  40c687:	arpl   WORD PTR [ebx-0x6e794313],sp
  40c68d:	mov    esp,0x70f8585
  40c692:	add    dl,BYTE PTR [edi+0x3c0ed900]
  40c698:	fild   WORD PTR es:[edx+0x403fd4e9]
  40c69f:	data16 jns 0x40c669
  40c6a2:	xor    BYTE PTR ds:[edi-0x34fa36e1],al
  40c6a9:	lods   al,BYTE PTR ds:[esi]
  40c6aa:	clc    
  40c6ab:	stc    
  40c6ac:	pop    edx
  40c6ad:	loopne 0x40c6c5
  40c6af:	add    eax,0xf1393599
  40c6b4:	fdiv   QWORD PTR [edi-0x41]
  40c6b7:	mov    bh,0xbe
  40c6b9:	aaa    
  40c6ba:	in     al,0x14
  40c6bc:	jmp    0x546871e
  40c6c1:	repnz push ecx
  40c6c3:	jle    0x40c705
  40c6c5:	inc    ebp
  40c6c6:	out    dx,al
  40c6c7:	and    dl,ch
  40c6c9:	push   fs
  40c6cb:	xchg   ecx,eax
  40c6cc:	ja     0x40c71a
  40c6ce:	shl    DWORD PTR [ecx+0x3],cl
  40c6d1:	rcl    DWORD PTR [ebp-0x30],cl
  40c6d4:	(bad)  
  40c6d5:	in     al,dx
  40c6d6:	jge    0x40c749
  40c6d8:	sbb    cl,dl
  40c6da:	xor    BYTE PTR [edi],bl
  40c6dc:	cmp    DWORD PTR [ebx],edi
  40c6de:	sub    dl,cl
  40c6e0:	push   eax
  40c6e1:	icebp  
  40c6e2:	pop    esp
  40c6e3:	sub    dl,BYTE PTR [edi+0x2d5710ec]
  40c6e9:	adc    esp,esp
  40c6eb:	push   cs
  40c6ec:	jnp    0x40c75d
  40c6ee:	cmp    BYTE PTR [edi+0x77],al
  40c6f1:	and    eax,0xcbf68e5b
  40c6f6:	push   ecx
  40c6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f8:	inc    edi
  40c6f9:	dec    eax
  40c6fa:	ret    0x76fb
  40c6fd:	pop    edx
  40c6fe:	ins    DWORD PTR es:[edi],dx
  40c6ff:	jl     0x40c715
  40c701:	mov    ds:0x81dfe7af,al
  40c706:	jge    0x40c68e
  40c708:	adc    BYTE PTR [edx],ah
  40c70a:	cmp    BYTE PTR [edx-0x70],ch
  40c70d:	push   ecx
  40c70e:	mov    DWORD PTR [eax-0x3c],ebp
  40c711:	fcomp  DWORD PTR [eax-0xac524bf]
  40c717:	inc    esi
  40c718:	mov    DWORD PTR [ebx],esp
  40c71a:	sub    al,0xfa
  40c71c:	or     eax,0xe676d7dd
  40c721:	cmp    BYTE PTR [ecx+0x5e],cl
  40c724:	mov    edx,0xfde7bf7a
  40c729:	adc    dh,BYTE PTR [edi]
  40c72b:	mov    esi,0x4b0521b0
  40c730:	scas   eax,DWORD PTR es:[edi]
  40c731:	sbb    al,0x34
  40c733:	out    dx,eax
  40c734:	and    al,0x6e
  40c736:	stos   DWORD PTR es:[edi],eax
  40c737:	in     al,0x31
  40c739:	ins    DWORD PTR es:[edi],dx
  40c73a:	push   esi
  40c73b:	mov    ebp,edi
  40c73d:	gs mov bh,0x8b
  40c740:	call   FWORD PTR [ebp-0x7f]
  40c743:	mov    ds:0x1fdf76dc,eax
  40c748:	sti    
  40c749:	ret    
  40c74a:	(bad)  
  40c74b:	iret   
  40c74c:	gs mov edi,0x467433e4
  40c752:	(bad)  
  40c753:	(bad)  
  40c754:	out    dx,al
  40c755:	js     0x40c7a5
  40c757:	arpl   WORD PTR [ecx],bx
  40c759:	out    dx,al
  40c75a:	mov    ebp,0x6e1245ba
  40c75f:	cmp    BYTE PTR [ebx],0xba
  40c762:	rcl    BYTE PTR [ebp+ebx*8-0xd],1
  40c766:	xchg   esi,eax
  40c767:	sbb    cl,bl
  40c769:	pusha  
  40c76a:	addr16 inc ecx
  40c76c:	adc    edi,esp
  40c76e:	and    eax,0x7ea909d0
  40c773:	xchg   ecx,eax
  40c774:	cld    
  40c775:	stos   DWORD PTR es:[edi],eax
  40c776:	sbb    BYTE PTR [eax-0x6522c242],ch
  40c77c:	mov    ebx,0x18fe7c3c
  40c781:	pop    esi
  40c782:	fwait
  40c783:	dec    esp
  40c784:	jae    0x40c79e
  40c786:	and    ch,ch
  40c788:	(bad)  
  40c789:	std    
  40c78a:	sbb    DWORD PTR [edx],esp
  40c78c:	or     al,0x9d
  40c78e:	ss ds loope 0x40c7f3
  40c792:	and    dh,BYTE PTR [ebp-0x6d]
  40c795:	aam    0x6
  40c797:	js     0x40c79b
  40c799:	pop    eax
  40c79a:	add    BYTE PTR [edx+0x6a],al
  40c79d:	repz dec esi
  40c79f:	inc    eax
  40c7a0:	push   esp
  40c7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7a2:	or     BYTE PTR [eax-0x34],dl
  40c7a5:	pop    ecx
  40c7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a7:	call   edi
  40c7a9:	pop    ecx
  40c7aa:	push   0x8c7e2f0f
  40c7af:	mov    eax,0x7d85356
  40c7b4:	popf   
  40c7b5:	xchg   ebp,eax
  40c7b6:	jno    0x40c746
  40c7b8:	fimul  WORD PTR [eax+0x16]
  40c7bb:	jne    0x40c82f
  40c7bd:	or     eax,0x8bccc73b
  40c7c2:	cmp    cl,BYTE PTR [eax+ebp*1]
  40c7c5:	outs   dx,BYTE PTR ds:[esi]
  40c7c6:	test   al,0x23
  40c7c8:	shl    DWORD PTR [ebx],1
  40c7ca:	pop    ss
  40c7cb:	mov    ds:0xb64477b4,eax
  40c7d0:	xchg   esi,eax
  40c7d1:	jae    0x40c789
  40c7d3:	pop    ss
  40c7d4:	cmp    ah,dh
  40c7d6:	mov    esp,0x97407e10
  40c7db:	adc    BYTE PTR [ecx+0xb],bl
  40c7de:	in     al,0xef
  40c7e0:	jno    0x40c7b4
  40c7e2:	cmc    
  40c7e3:	aas    
  40c7e4:	mov    ah,0x63
  40c7e6:	add    bh,BYTE PTR [ecx-0x1656982c]
  40c7ec:	addr16 jmp 0xd1873969
  40c7f2:	adc    DWORD PTR [ecx+ebx*2-0x65],ebp
  40c7f6:	push   ecx
  40c7f7:	lods   al,BYTE PTR ds:[esi]
  40c7f8:	xchg   esi,eax
  40c7f9:	inc    ecx
  40c7fa:	add    BYTE PTR [edx+0x60],bh
  40c7fd:	mov    BYTE PTR [esi+0x33],ah
  40c800:	jecxz  0x40c782
  40c802:	sub    ebx,DWORD PTR [esi+0x45f35d5d]
  40c808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c809:	loop   0x40c7e1
  40c80b:	pop    ebp
  40c80c:	jb     0x40c857
  40c80e:	xchg   esi,eax
  40c80f:	rcl    esp,1
  40c811:	repnz pop edx
  40c813:	pop    ecx
  40c814:	ins    DWORD PTR es:[edi],dx
  40c815:	outs   dx,DWORD PTR ds:[esi]
  40c816:	mov    cl,0xeb
  40c818:	aas    
  40c819:	outs   dx,BYTE PTR ss:[esi]
  40c81b:	sbb    al,0xc1
  40c81d:	sbb    al,BYTE PTR [edx-0x787ba151]
  40c823:	mov    ds:0x35e0f671,al
  40c828:	mov    ebx,DWORD PTR [edx]
  40c82a:	mov    edx,0xa02247c9
  40c82f:	mov    ah,al
  40c831:	es mov esi,0xdeb2d36
  40c837:	imul   edx,DWORD PTR [ecx-0x17],0x18
  40c83b:	mov    eax,0x49f55a1e
  40c840:	push   0xdd304a59
  40c845:	cdq    
  40c846:	fidiv  WORD PTR [edi+0x69f4364e]
  40c84c:	xchg   al,cl
  40c84e:	dec    ebx
  40c84f:	fsin   
  40c851:	fcom   st(4)
  40c853:	jecxz  0x40c818
  40c855:	mov    dl,0x87
  40c857:	fld    DWORD PTR [ebx+0x70]
  40c85a:	push   0x84f8ad8a
  40c85f:	cwde   
  40c860:	mov    ch,0x9
  40c862:	and    BYTE PTR [edx],bl
  40c864:	inc    ebx
  40c865:	or     al,0x99
  40c867:	xor    eax,0x3b693209
  40c86c:	mov    gs,WORD PTR [eax+0x1127e68]
  40c872:	cmp    dl,BYTE PTR [edi]
  40c874:	dec    ecx
  40c875:	vsqrtsd xmm3,xmm7,QWORD PTR [eax-0x2292609e]
  40c87d:	dec    esi
  40c87e:	popa   
  40c87f:	inc    esp
  40c880:	jecxz  0x40c8dc
  40c882:	fidiv  DWORD PTR [edi+0x2f]
  40c885:	sub    al,0xb0
  40c887:	jmp    0xea38:0xd412cb03
  40c88e:	jg     0x40c8f6
  40c890:	add    eax,0xeec9963b
  40c895:	hlt    
  40c896:	add    dl,BYTE PTR [ecx+0x7a]
  40c899:	shl    eax,0xb7
  40c89c:	imul   esp,DWORD PTR [esi-0x22],0x61
  40c8a0:	scas   al,BYTE PTR es:[edi]
  40c8a1:	mov    ebx,0xbdbb4719
  40c8a6:	and    BYTE PTR [esi],bh
  40c8a8:	push   ds
  40c8a9:	int    0xf7
  40c8ab:	dec    eax
  40c8ad:	adc    DWORD PTR [ebx+ebp*1-0x651ca1dc],esi
  40c8b4:	push   0xe
  40c8b6:	mov    DWORD PTR [ebx+0x51],esp
  40c8b9:	xor    BYTE PTR [edx-0x22],dh
  40c8bc:	cmp    eax,0xb9445fed
  40c8c1:	mov    ds:0x75235f4f,eax
  40c8c6:	push   es
  40c8c7:	icebp  
  40c8c8:	cmp    eax,0x613fb179
  40c8cd:	cmp    ebp,DWORD PTR [edi-0x12]
  40c8d0:	ins    DWORD PTR es:[edi],dx
  40c8d1:	out    dx,al
  40c8d2:	pop    ecx
  40c8d3:	fist   DWORD PTR [esi+0x5b5f809a]
  40c8d9:	loope  0x40c944
  40c8db:	or     eax,0xc006172c
  40c8e0:	inc    ebx
  40c8e1:	stos   DWORD PTR es:[edi],eax
  40c8e2:	ds jae 0x40c90e
  40c8e5:	or     esi,DWORD PTR [esi]
  40c8e7:	xor    al,0x5e
  40c8e9:	pop    edi
  40c8ea:	cld    
  40c8eb:	cld    
  40c8ec:	call   0x8d31:0xc56684f9
  40c8f3:	(bad)  
  40c8f5:	mov    al,ds:0xf7fa8caa
  40c8fa:	mov    ds:0xb069612d,eax
  40c8ff:	pop    ss
  40c900:	xchg   esp,eax
  40c901:	aaa    
  40c902:	sbb    esp,DWORD PTR [edx-0x11]
  40c905:	addr16 leave 
  40c907:	cli    
  40c908:	(bad)  
  40c909:	out    0x38,eax
  40c90b:	add    DWORD PTR [ebx],0xffffff97
  40c90e:	pop    edi
  40c90f:	mov    eax,ds:0xfbaaa0d1
  40c914:	cli    
  40c915:	inc    esp
  40c916:	stc    
  40c917:	jno    0x40c943
  40c919:	xor    esi,edx
  40c91b:	cmc    
  40c91c:	add    esp,edi
  40c91e:	hlt    
  40c91f:	mov    bh,0x84
  40c921:	cmp    DWORD PTR [ecx+0x37],0xb55d9de0
  40c928:	push   edx
  40c929:	pop    ebp
  40c92a:	fprem1 
  40c92c:	scas   eax,DWORD PTR es:[edi]
  40c92d:	mov    dl,0xa7
  40c92f:	lods   eax,DWORD PTR ds:[esi]
  40c930:	xor    al,bh
  40c932:	int3   
  40c933:	(bad)  
  40c934:	std    
  40c935:	mov    DWORD PTR [edi+0x43],ebp
  40c938:	es mov bh,ah
  40c93b:	inc    ebp
  40c93c:	ret    0xc11d
  40c93f:	push   edx
  40c940:	bound  esi,QWORD PTR [ecx-0x64]
  40c943:	lds    edi,FWORD PTR ds:0x9a6f0f1e
  40c949:	jne    0x40c8e4
  40c94b:	out    0xc3,eax
  40c94d:	retf   0xe77
  40c950:	enter  0x5d96,0x19
  40c954:	jmp    0x8f76:0x742cedc2
  40c95b:	int    0x66
  40c95d:	mov    eax,ds:0xd4289360
  40c962:	ss xor al,0x2e
  40c965:	sub    DWORD PTR [edi+esi*4+0x7b],ecx
  40c969:	jecxz  0x40c9a0
  40c96b:	mov    dh,0x55
  40c96d:	in     al,dx
  40c96e:	dec    ebx
  40c96f:	(bad)  
  40c971:	fwait
  40c972:	std    
  40c973:	fcomi  st,st(4)
  40c975:	sub    BYTE PTR [ebp-0x1d5e99ee],cl
  40c97b:	dec    esp
  40c97c:	and    BYTE PTR cs:[ecx+0x30],dl
  40c980:	std    
  40c981:	pop    esi
  40c982:	mov    bh,0x3f
  40c984:	jns    0x40c919
  40c986:	push   es
  40c987:	jns    0x40c9cb
  40c989:	(bad)  
  40c98a:	es nop
  40c98c:	mov    ecx,0xa161719f
  40c991:	pop    ss
  40c992:	stc    
  40c993:	adc    al,0x33
  40c995:	jl     0x40c982
  40c997:	ror    edi,cl
  40c999:	test   al,0x55
  40c99b:	rcl    BYTE PTR [ebx+0x74],cl
  40c99e:	and    al,0xa1
  40c9a0:	mov    al,ds:0xadacf696
  40c9a5:	mov    dl,0x42
  40c9a7:	int    0x1d
  40c9a9:	aam    0xf7
  40c9ab:	call   DWORD PTR [edi]
  40c9ad:	shl    esp,0x4f
  40c9b0:	xchg   ebp,eax
  40c9b1:	jae    0x40c940
  40c9b3:	jle    0x40c9f9
  40c9b5:	add    edx,edx
  40c9b7:	or     al,0x7f
  40c9b9:	data16 mov ss:0x2d10188e,al
  40c9c0:	fstp   QWORD PTR [eax+0x10f4e513]
  40c9c6:	repz icebp 
  40c9c8:	(bad)  
  40c9c9:	aam    0x19
  40c9cb:	outs   dx,BYTE PTR ds:[esi]
  40c9cc:	add    edx,DWORD PTR [edx]
  40c9ce:	lock mov ebp,0x849cbb80
  40c9d4:	xor    BYTE PTR [edx+ebp*4+0x10],cl
  40c9d8:	arpl   ax,bp
  40c9da:	lods   eax,DWORD PTR ds:[esi]
  40c9db:	not    BYTE PTR [eax-0x7376083c]
  40c9e1:	xchg   ebp,eax
  40c9e2:	pop    ecx
  40c9e3:	xchg   ebp,eax
  40c9e4:	sbb    eax,0xfa323ebb
  40c9e9:	retf   
  40c9ea:	cmp    al,0x44
  40c9ec:	push   ebp
  40c9ed:	mov    ds:0xca306322,eax
  40c9f2:	or     DWORD PTR [edx],eax
  40c9f4:	mov    edi,0x3b881d60
  40c9f9:	mov    ds:0x741691e6,al
  40c9fe:	mov    esi,0x6c9338eb
  40ca03:	push   esp
  40ca04:	paddsb mm6,QWORD PTR [edi]
  40ca07:	push   ds
  40ca08:	scas   al,BYTE PTR es:[edi]
  40ca09:	xchg   esi,eax
  40ca0a:	in     al,0xc
  40ca0c:	push   ebx
  40ca0d:	jl     0x40ca50
  40ca0f:	in     eax,dx
  40ca10:	fwait
  40ca11:	jle    0x40c9f0
  40ca13:	cmp    BYTE PTR [edx+0x47],cl
  40ca16:	dec    eax
  40ca17:	inc    esi
  40ca18:	adc    esp,DWORD PTR [ebx+edx*2-0x21]
  40ca1c:	pop    ebx
  40ca1d:	and    esp,ebp
  40ca1f:	in     eax,0x61
  40ca21:	sbb    al,0x57
  40ca23:	sub    BYTE PTR [edx],cl
  40ca25:	rcr    DWORD PTR [ebx-0x32],0xaa
  40ca29:	ds mov eax,0xec7d0084
  40ca2f:	xchg   BYTE PTR [edx+0x2c2a4728],dh
  40ca35:	pop    edx
  40ca36:	in     eax,dx
  40ca37:	xchg   esp,eax
  40ca38:	dec    ebp
  40ca39:	outs   dx,BYTE PTR ds:[esi]
  40ca3a:	sbb    dl,BYTE PTR [ecx+0xa]
  40ca3d:	imul   esi,DWORD PTR [esi-0x337f31ca],0x82bd547a
  40ca47:	push   eax
  40ca48:	pop    ebx
  40ca49:	inc    edi
  40ca4a:	ret    
  40ca4b:	sbb    al,0xb5
  40ca4d:	outs   dx,DWORD PTR ds:[esi]
  40ca4e:	jb     0x40caab
  40ca50:	lods   eax,DWORD PTR ds:[esi]
  40ca51:	fistp  DWORD PTR [ebp+0x165f8d63]
  40ca57:	shl    BYTE PTR [eax-0x5ca836d2],0x53
  40ca5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca5f:	xsha1  (bad)
  40ca60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca61:	dec    esp
  40ca62:	fdecstp 
  40ca64:	lahf   
  40ca65:	add    al,0x46
  40ca67:	pop    esi
  40ca68:	aas    
  40ca69:	dec    edi
  40ca6a:	pop    ss
  40ca6b:	xchg   ecx,eax
  40ca6c:	mov    WORD PTR [ecx+0x4f],fs
  40ca6f:	stos   DWORD PTR es:[edi],eax
  40ca70:	inc    eax
  40ca71:	push   ebx
  40ca72:	cdq    
  40ca73:	push   esp
  40ca74:	adc    edx,DWORD PTR [ebp+0x7c]
  40ca77:	adc    al,ch
  40ca79:	mov    al,ds:0xe9c967c7
  40ca7e:	push   ebp
  40ca7f:	jne    0x40cab1
  40ca81:	push   ss
  40ca82:	push   ds
  40ca83:	pushf  
  40ca84:	outs   dx,DWORD PTR ds:[esi]
  40ca85:	call   0xd2f00fde
  40ca8a:	sbb    bl,cl
  40ca8c:	mov    WORD PTR [ebp-0x2d6da426],ds
  40ca92:	enter  0x769,0x85
  40ca96:	lock stc 
  40ca98:	fadd   st(6),st
  40ca9a:	xchg   edx,eax
  40ca9b:	jmp    0x40ca73
  40ca9d:	test   cl,ch
  40ca9f:	fiadd  WORD PTR [esi+ebp*4+0x23]
  40caa3:	cmp    dl,BYTE PTR [ebp-0x5d913933]
  40caa9:	jae    0x40cab9
  40caab:	imul   ebx,DWORD PTR [ecx+0x758e387b],0x2d6d0007
  40cab5:	push   esi
  40cab6:	mov    al,0xa7
  40cab8:	lea    esi,[ebp+0x2d]
  40cabb:	inc    esi
  40cabc:	jno    0x40cb32
  40cabe:	repz or esp,DWORD PTR [ecx+0x3c36f949]
  40cac5:	xlat   BYTE PTR ds:[ebx]
  40cac6:	xor    eax,0x361807b7
  40cacb:	ficom  WORD PTR [ebp+0x3a28920e]
  40cad1:	pusha  
  40cad2:	pop    edx
  40cad3:	stc    
  40cad4:	(bad)  
  40cad5:	stos   BYTE PTR es:[edi],al
  40cad6:	(bad)  
  40cad8:	sbb    al,0x72
  40cada:	sub    al,0xc5
  40cadc:	xor    eax,0x1ee0372b
  40cae1:	ins    BYTE PTR es:[edi],dx
  40cae2:	add    BYTE PTR [esi],dh
  40cae4:	test   al,0x1e
  40cae6:	cli    
  40cae7:	in     al,dx
  40cae8:	mov    esp,0xa3b4994f
  40caed:	push   0xd514b08f
  40caf2:	mov    ch,0x7
  40caf4:	mov    ah,cl
  40caf6:	aas    
  40caf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf8:	aas    
  40caf9:	mov    ds:0xdf6559c4,al
  40cafe:	push   edi
  40caff:	loopne 0x40cb03
  40cb01:	add    al,0xc9
  40cb03:	dec    edx
  40cb04:	jge    0x40caa1
  40cb06:	inc    eax
  40cb07:	in     eax,dx
  40cb08:	icebp  
  40cb09:	inc    esi
  40cb0a:	lods   eax,DWORD PTR ds:[esi]
  40cb0b:	cld    
  40cb0c:	mov    cl,BYTE PTR [ebx]
  40cb0e:	cmp    al,0x76
  40cb10:	xchg   ebp,eax
  40cb11:	pop    ss
  40cb12:	daa    
  40cb13:	sub    al,0x8a
  40cb15:	out    dx,eax
  40cb16:	addr16 gs jno 0x40cada
  40cb1a:	call   0x64f0b6f2
  40cb1f:	enter  0x600d,0x44
  40cb23:	pop    edi
  40cb24:	call   0xb421ccbf
  40cb29:	fidiv  DWORD PTR [edx-0x12]
  40cb2c:	call   0x8349:0x1af5704b
  40cb33:	cld    
  40cb34:	into   
  40cb35:	or     BYTE PTR [ecx+0x9ae9462],0xa6
  40cb3c:	test   BYTE PTR [ebp-0x53],0xbb
  40cb40:	mov    eax,ds:0xb6ac8e05
  40cb45:	sub    al,BYTE PTR [eax]
  40cb47:	push   eax
  40cb48:	test   DWORD PTR ds:0xa600c999,eax
  40cb4e:	cmc    
  40cb4f:	cmp    bl,cl
  40cb51:	mov    edx,DWORD PTR [esi-0x4c]
  40cb54:	jae    0x40cb13
  40cb56:	repnz add eax,0xf9ef63d5
  40cb5c:	mov    ecx,0x3ff627c3
  40cb61:	push   ss
  40cb62:	mov    al,ds:0x19969b99
  40cb67:	cmp    eax,0x18d3a48e
  40cb6c:	call   0xcfed:0x2548cf29
  40cb73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb74:	test   BYTE PTR [edx],0x3a
  40cb77:	add    BYTE PTR cs:[edi+0xe],bh
  40cb7b:	adc    eax,0xee17da4d
  40cb80:	sub    DWORD PTR ds:0x404f502f,ebp
  40cb86:	cmp    eax,0x3a8bf34a
  40cb8b:	jmp    0x40cbb5
  40cb8d:	push   cs
  40cb8e:	or     al,0x72
  40cb90:	mov    eax,0xf0a5b026
  40cb95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb96:	cmp    dh,BYTE PTR [esi-0x7d]
  40cb99:	add    bl,bl
  40cb9b:	cwde   
  40cb9c:	dec    eax
  40cb9d:	popa   
  40cb9e:	int3   
  40cb9f:	push   edi
  40cba0:	das    
  40cba1:	pop    edx
  40cba2:	lahf   
  40cba3:	iret   
  40cba4:	stos   BYTE PTR es:[edi],al
  40cba5:	mov    eax,0xa6f3ca73
  40cbaa:	js     0x40cb5c
  40cbac:	leave  
  40cbad:	jns    0x40cb41
  40cbaf:	cmp    ch,BYTE PTR [ecx-0x38fc233a]
  40cbb5:	leave  
  40cbb6:	jns    0x40cba6
  40cbb8:	out    dx,eax
  40cbb9:	popa   
  40cbba:	je     0x40cc00
  40cbbc:	(bad)  
  40cbbd:	inc    esi
  40cbbe:	pusha  
  40cbbf:	xchg   DWORD PTR [ecx-0x35],esp
  40cbc2:	test   DWORD PTR [ebp-0x38],esp
  40cbc5:	push   ds
  40cbc6:	pop    ss
  40cbc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbc8:	inc    edi
  40cbc9:	fld    QWORD PTR [edi+eax*1]
  40cbcc:	lock jb 0x40cc0a
  40cbcf:	fs pusha 
  40cbd1:	mov    eax,0x491e0992
  40cbd6:	scas   al,BYTE PTR es:[edi]
  40cbd7:	loopne 0x40cb92
  40cbd9:	call   0x73df:0x65e8d138
  40cbe0:	mov    dl,0x45
  40cbe2:	lea    esi,[edx]
  40cbe4:	rcr    DWORD PTR [ebp+0x1c88dc62],cl
  40cbea:	jg     0x40cbfe
  40cbec:	dec    ebx
  40cbed:	push   esp
  40cbee:	sub    esp,DWORD PTR [ebp-0xe7151d2]
  40cbf4:	push   esp
  40cbf5:	stos   BYTE PTR es:[edi],al
  40cbf6:	fsub   DWORD PTR gs:[edx+0x18]
  40cbfa:	(bad)  
  40cbfb:	pop    ss
  40cbfc:	mov    ecx,0xefa43187
  40cc01:	(bad)  
  40cc02:	mov    bl,0xbc
  40cc04:	out    0x17,al
  40cc06:	push   0xfffffff6
  40cc08:	lock mov al,ds:0x3bbec1e2
  40cc0e:	loopne 0x40cc4d
  40cc10:	sbb    eax,0xc218f0c7
  40cc15:	xlat   BYTE PTR ds:[ebx]
  40cc16:	xor    eax,0xfbae609c
  40cc1b:	int3   
  40cc1c:	nop
  40cc1d:	loope  0x40cbb1
  40cc1f:	and    eax,DWORD PTR [eax]
  40cc21:	push   cs
  40cc22:	adc    ebp,DWORD PTR [esi+0x37]
  40cc25:	out    dx,eax
  40cc26:	xor    esi,DWORD PTR [ecx+edi*8]
  40cc29:	pop    ds
  40cc2a:	ret    
  40cc2b:	retf   
  40cc2c:	call   0x898ac65b
  40cc31:	adc    al,0xb6
  40cc33:	sub    eax,0xa2dc7864
  40cc38:	outs   dx,BYTE PTR ds:[esi]
  40cc39:	cmp    eax,0x1a6f2e95
  40cc3e:	mov    BYTE PTR [ebx-0x5],ch
  40cc41:	pop    esi
  40cc42:	mov    al,ds:0x7feb0bd4
  40cc47:	loope  0x40ccc3
  40cc49:	(bad)  
  40cc4a:	xchg   ebx,eax
  40cc4b:	inc    edi
  40cc4c:	leave  
  40cc4d:	out    0x15,al
  40cc4f:	imul   edx,edx,0x42
  40cc52:	jecxz  0x40cc05
  40cc54:	ret    
  40cc55:	jae    0x40cc82
  40cc57:	les    esi,FWORD PTR [ebx]
  40cc59:	aam    0xa1
  40cc5b:	mov    al,0xf1
  40cc5d:	punpckhwd mm4,mm3
  40cc60:	pop    esi
  40cc61:	dec    ebx
  40cc62:	lds    esi,FWORD PTR [edi+0x37]
  40cc65:	mov    edi,0xb6095af0
  40cc6a:	pop    esp
  40cc6b:	adc    BYTE PTR [ebx],cl
  40cc6d:	xchg   BYTE PTR [edx-0x7c],ch
  40cc70:	jmp    0x90bbef6e
  40cc75:	out    dx,al
  40cc76:	int3   
  40cc77:	xor    ecx,DWORD PTR [ebx+0x2e67107d]
  40cc7d:	jnp    0x40ccc1
  40cc7f:	jmp    0x40ccbe
  40cc81:	xchg   DWORD PTR [ebx+0x60],ebx
  40cc84:	inc    edi
  40cc85:	int3   
  40cc86:	cmc    
  40cc87:	sbb    BYTE PTR [ebx],0xa8
  40cc8a:	add    bh,BYTE PTR [ebx]
  40cc8c:	lahf   
  40cc8d:	push   ebp
  40cc8e:	in     eax,0xe4
  40cc90:	in     al,dx
  40cc91:	scas   al,BYTE PTR es:[edi]
  40cc92:	sub    DWORD PTR [edx],edx
  40cc94:	outs   dx,DWORD PTR ds:[esi]
  40cc95:	clc    
  40cc96:	stos   DWORD PTR es:[edi],eax
  40cc97:	fild   WORD PTR [ebp-0x37]
  40cc9a:	dec    ebx
  40cc9b:	call   0x1a956633
  40cca0:	cs push ebp
  40cca2:	shr    DWORD PTR [ecx-0x49593668],cl
  40cca8:	inc    esp
  40cca9:	xor    al,0xd8
  40ccab:	inc    esp
  40ccac:	adc    bl,BYTE PTR [edx]
  40ccae:	in     eax,dx
  40ccaf:	or     dl,dl
  40ccb1:	and    al,0x4b
  40ccb3:	add    dh,ah
  40ccb5:	jmp    0x40cc55
  40ccb7:	das    
  40ccb8:	outs   dx,BYTE PTR ds:[esi]
  40ccb9:	stos   DWORD PTR es:[edi],eax
  40ccba:	les    ebx,FWORD PTR [edi+eiz*8-0x7f]
  40ccbe:	mov    DWORD PTR [edi],eax
  40ccc0:	push   edi
  40ccc1:	mov    ah,0xfe
  40ccc3:	imul   esi,DWORD PTR [esi+0x35],0x227c9b19
  40ccca:	jp     0x40cc7c
  40cccc:	or     al,0x5e
  40ccce:	jns    0x40ccb3
  40ccd0:	arpl   WORD PTR [esi],bp
  40ccd2:	fnstcw WORD PTR [esp+ebx*2-0x4d]
  40ccd6:	mov    ds:0xeacc3a,al
  40ccdb:	inc    edx
  40ccdc:	iret   
  40ccdd:	xor    al,0xa
  40ccdf:	adc    al,0x9b
  40cce1:	add    DWORD PTR [edx+0x6a4acaff],esp
  40cce7:	repz sbb bh,dh
  40ccea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cceb:	(bad)  
  40ccee:	xor    eax,0xa7801b27
  40ccf3:	add    ebx,DWORD PTR [ecx]
  40ccf5:	ret    0x79e0
  40ccf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccf9:	jp     0x40cc8a
  40ccfb:	retf   
  40ccfc:	repnz cmp eax,DWORD PTR [ebx+esi*2-0x43]
  40cd01:	sub    cl,BYTE PTR [ebx-0x68e78a84]
  40cd07:	dec    eax
  40cd08:	cli    
  40cd09:	mov    ah,BYTE PTR [ebx+0x4d2717b5]
  40cd0f:	ret    
  40cd10:	adc    esi,0xb
  40cd13:	pusha  
  40cd14:	div    cl
  40cd16:	xchg   edx,eax
  40cd17:	push   esi
  40cd18:	fcom   QWORD PTR [ebx]
  40cd1a:	sub    edi,DWORD PTR [ebx+0xecfda9a]
  40cd20:	test   eax,0xe291b40a
  40cd25:	cmp    al,0x9c
  40cd27:	int    0xe
  40cd29:	sbb    edi,DWORD PTR [ebp+0x2389c046]
  40cd2f:	les    edx,FWORD PTR [edx+0x27f58494]
  40cd35:	imul   eax,eax,0x32
  40cd38:	clc    
  40cd39:	and    BYTE PTR [ebx],ch
  40cd3b:	mov    al,ds:0xdd45ef78
  40cd40:	(bad)  
  40cd41:	mov    bl,0xa3
  40cd43:	cld    
  40cd44:	mov    ds:0x2725b0d4,eax
  40cd49:	fstp   QWORD PTR [esi+0x65b58acd]
  40cd4f:	adc    al,0x7f
  40cd51:	add    esp,ecx
  40cd53:	inc    esp
  40cd54:	mov    al,ah
  40cd56:	sbb    ch,BYTE PTR [edx-0x3]
  40cd59:	add    BYTE PTR [edx+0x55e3fc8a],0x97
  40cd60:	ret    0xeb7
  40cd63:	cmp    eax,0xc806a29f
  40cd68:	or     BYTE PTR [eax+0x50],ah
  40cd6b:	jns    0x40cd0c
  40cd6d:	sub    al,0x27
  40cd6f:	es jle 0x40cd92
  40cd72:	pop    ecx
  40cd73:	loopne 0x40cd00
  40cd75:	in     al,0xf7
  40cd77:	out    dx,al
  40cd78:	rcl    al,cl
  40cd7a:	mov    esi,0x56a43bef
  40cd7f:	adc    eax,0x63031cd6
  40cd84:	in     al,0xdc
  40cd86:	jg     0x40cd26
  40cd88:	ret    
  40cd89:	inc    ecx
  40cd8a:	mov    ch,0x1a
  40cd8c:	xlat   BYTE PTR ds:[ebx]
  40cd8d:	(bad)  
  40cd8e:	mov    dh,0xa5
  40cd90:	pop    ds
  40cd91:	imul   esi,DWORD PTR [eax-0x74c99d56],0xaa1de91c
  40cd9b:	outs   dx,DWORD PTR ds:[esi]
  40cd9c:	(bad)  
  40cd9e:	rcl    DWORD PTR [edi+0x5d70c553],0xba
  40cda5:	jmp    0x4b84:0xc41c5287
  40cdac:	mov    ebx,0xebf3a44b
  40cdb1:	inc    esi
  40cdb2:	add    bh,BYTE PTR [edi-0x61ae79f3]
  40cdb8:	jae    0x40ce07
  40cdba:	adc    al,BYTE PTR ds:0xa545a4da
  40cdc0:	jmp    0xaf5d09cd
  40cdc5:	mov    ds:0x8075343a,eax
  40cdca:	rol    DWORD PTR [ebx-0x39],1
  40cdcd:	sbb    al,0xb
  40cdcf:	stos   BYTE PTR es:[edi],al
  40cdd0:	daa    
  40cdd1:	repz je 0x40ce18
  40cdd4:	cmp    al,0x65
  40cdd6:	inc    ecx
  40cdd7:	xor    al,0xfc
  40cdd9:	or     BYTE PTR [ebx+0x39c2a244],bh
  40cddf:	jnp    0x40ce28
  40cde1:	mov    eax,0x38a10550
  40cde6:	inc    esi
  40cde7:	in     eax,dx
  40cde8:	jecxz  0x40ce1b
  40cdea:	cmc    
  40cdeb:	push   ecx
  40cdec:	pop    ebp
  40cded:	jns    0x40cde2
  40cdef:	dec    esi
  40cdf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf1:	cmp    eax,DWORD PTR [edx]
  40cdf3:	sbb    eax,0x2ea04be8
  40cdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdf9:	dec    ebp
  40cdfa:	sar    ch,0x24
  40cdfd:	pop    edi
  40cdfe:	lods   al,BYTE PTR fs:[esi]
  40ce00:	push   ebx
  40ce01:	xor    DWORD PTR [ebp+0x2c],ebx
  40ce04:	and    ebp,edi
  40ce06:	push   ebx
  40ce07:	xchg   BYTE PTR [ebp+0x2b],bh
  40ce0a:	xchg   edx,eax
  40ce0b:	ss retf 
  40ce0d:	fxch   st(2)
  40ce0f:	ja     0x40ce7e
  40ce11:	outs   dx,BYTE PTR ds:[esi]
  40ce12:	ins    DWORD PTR es:[edi],dx
  40ce13:	sbb    BYTE PTR [edi+0x21],ch
  40ce16:	jnp    0x40ce91
  40ce18:	sbb    eax,ebx
  40ce1a:	inc    ecx
  40ce1b:	sahf   
  40ce1c:	ja     0x40cda1
  40ce1e:	not    DWORD PTR ds:[edi]
  40ce21:	lahf   
  40ce22:	jo     0x40ce79
  40ce24:	in     eax,0x30
  40ce26:	lods   al,BYTE PTR ds:[esi]
  40ce27:	shl    DWORD PTR [esi-0x166b3cac],0xa1
  40ce2e:	stos   DWORD PTR es:[edi],eax
  40ce2f:	lods   eax,DWORD PTR ds:[esi]
  40ce30:	and    dl,BYTE PTR [ebx-0x51]
  40ce33:	xor    BYTE PTR [edx-0x28],ah
  40ce36:	dec    ecx
  40ce37:	mov    ds:0x49f0c43,al
  40ce3c:	jno    0x40ce33
  40ce3e:	out    dx,al
  40ce3f:	sub    al,0xd
  40ce41:	rol    esi,cl
  40ce43:	sbb    eax,0x9516cd18
  40ce48:	div    BYTE PTR [ebx+0x65c77d62]
  40ce4e:	jae    0x40ce4c
  40ce50:	add    BYTE PTR [eax],dl
  40ce52:	mov    esi,?
  40ce54:	cmp    cl,BYTE PTR [ebx-0x58561178]
  40ce5a:	arpl   di,dx
  40ce5c:	sahf   
  40ce5d:	mov    ebp,0xa533bd30
  40ce62:	out    0xca,eax
  40ce64:	jns    0x40ce08
  40ce66:	push   0x8bf25e19
  40ce6b:	shl    ch,cl
  40ce6d:	sahf   
  40ce6e:	icebp  
  40ce6f:	adc    al,0x1c
  40ce71:	sbb    DWORD PTR [eax+esi*4],0x39199572
  40ce78:	push   edi
  40ce79:	xor    BYTE PTR [ebp+0x656d8aee],dl
  40ce7f:	mov    ?,esi
  40ce81:	scas   eax,DWORD PTR es:[edi]
  40ce82:	mov    ds:0xa9ee6b3,eax
  40ce87:	(bad)  
  40ce88:	xor    DWORD PTR [edx],edx
  40ce8a:	xor    eax,0x3a325cd4
  40ce8f:	push   eax
  40ce90:	adc    eax,0xd0b34d31
  40ce95:	jns    0x40ce28
  40ce97:	cld    
  40ce98:	xlat   BYTE PTR ds:[ebx]
  40ce99:	ret    
  40ce9a:	hlt    
  40ce9b:	inc    esi
  40ce9c:	mov    WORD PTR [esi+0x3a],ss
  40ce9f:	adc    cl,BYTE PTR [edi+0x53c2c9e2]
  40cea5:	jmp    0x40ce83
  40cea7:	mov    esp,0x9fa160ed
  40ceac:	jbe    0x40ce7a
  40ceae:	and    DWORD PTR [eax],esi
  40ceb0:	jge    0x40ceed
  40ceb2:	sub    eax,0x5c0e228b
  40ceb7:	bound  edx,QWORD PTR ds:0x8fca0295
  40cebd:	mov    esi,DWORD PTR [edx+0x7d]
  40cec0:	add    BYTE PTR [ebp-0x6f4a6017],0x7b
  40cec7:	and    al,0xdd
  40cec9:	imul   ebp
  40cecb:	push   esi
  40cecc:	pop    ecx
  40cecd:	mov    ah,0x17
  40cecf:	sub    eax,0x9e390f77
  40ced4:	inc    ebp
  40ced5:	push   eax
  40ced6:	mov    esi,ss
  40ced8:	or     BYTE PTR [eax],cl
  40ceda:	and    DWORD PTR [edi+ebp*4-0x2f08653],ecx
  40cee1:	(bad)
  40cee5:	shl    DWORD PTR [ebx+edi*4],cl
  40cee8:	imul   ebx,DWORD PTR [esi],0xfffffffa
  40ceeb:	mov    ebp,0xb9d43778
  40cef0:	mov    edi,0xcb1ed890
  40cef5:	pop    ds
  40cef6:	xlat   BYTE PTR ds:[ebx]
  40cef7:	dec    ebx
  40cef8:	icebp  
  40cef9:	std    
  40cefa:	les    edi,FWORD PTR [eax+0x7c526c2b]
  40cf00:	xor    ebp,DWORD PTR [edi]
  40cf02:	cmp    edi,eax
  40cf04:	inc    ebx
  40cf05:	adc    bl,0x28
  40cf08:	xchg   esp,eax
  40cf09:	and    BYTE PTR [ecx+esi*4-0x23d66834],ch
  40cf10:	xchg   ebx,eax
  40cf11:	dec    ebp
  40cf12:	rol    BYTE PTR [esi+0x1d],1
  40cf15:	aam    0x5b
  40cf17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf18:	arpl   cx,bx
  40cf1a:	lods   al,BYTE PTR ds:[esi]
  40cf1b:	aam    0xc9
  40cf1d:	and    edx,DWORD PTR [edx+0x575187b5]
  40cf23:	data16 sub al,0x78
  40cf26:	adc    edx,esp
  40cf28:	sti    
  40cf29:	mov    edx,0xe6915686
  40cf2e:	lods   al,BYTE PTR ds:[esi]
  40cf2f:	into   
  40cf30:	cdq    
  40cf31:	int3   
  40cf32:	stos   DWORD PTR es:[edi],eax
  40cf33:	scas   al,BYTE PTR es:[edi]
  40cf34:	fimul  WORD PTR [eax-0x34c01fad]
  40cf3a:	pop    esi
  40cf3b:	cmp    cl,BYTE PTR [esi+edx*1]
  40cf3e:	repz add al,0x39
  40cf41:	call   0xbc2ef7a3
  40cf46:	push   esi
  40cf47:	sub    al,0x13
  40cf49:	fsub   DWORD PTR [ecx-0x68]
  40cf4c:	sub    ebp,eax
  40cf4e:	cs jp  0x40cf6f
  40cf51:	popf   
  40cf52:	icebp  
  40cf53:	mov    al,0x26
  40cf55:	pop    ds
  40cf56:	daa    
  40cf57:	jns    0x40cf42
  40cf59:	inc    ecx
  40cf5a:	daa    
  40cf5b:	test   DWORD PTR ds:0x909406af,ecx
  40cf61:	xchg   BYTE PTR gs:[edx+eiz*1],bh
  40cf65:	mov    esp,0xa170dc87
  40cf6a:	(bad)  
  40cf6c:	mov    esi,0xd596e3c6
  40cf71:	mov    ebp,0x4912ba59
  40cf76:	ret    
  40cf77:	es dec esp
  40cf79:	test   BYTE PTR [ebx],al
  40cf7b:	shl    DWORD PTR [ebx],1
  40cf7d:	ror    DWORD PTR [ebx+0x4340141d],cl
  40cf83:	add    BYTE PTR [ecx],cl
  40cf85:	sbb    eax,0x436018
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	xchg   edi,eax
  40cfb1:	sbb    dh,dl
  40cfb3:	repz gs loop 0x40d033
  40cfb7:	jl     0x40cfa4
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	sar    BYTE PTR [edx],cl
  40cfbe:	jg     0x40cf60
  40cfc0:	pop    ebp
  40cfc1:	sub    al,0x52
  40cfc3:	pop    esp
  40cfc4:	daa    
  40cfc5:	jb     0x40d032
  40cfc7:	sub    al,0xb6
  40cfc9:	out    0x49,eax
  40cfcb:	std    
  40cfcc:	sbb    edi,DWORD PTR [esi-0x1e677b45]
  40cfd2:	sbb    edi,DWORD PTR [eax-0x80]
  40cfd5:	adc    al,0xcd
  40cfd7:	mov    al,ds:0x84843aff
  40cfdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfdd:	jne    0x40d006
  40cfdf:	inc    ecx
  40cfe0:	jl     0x40cf6d
  40cfe2:	inc    edi
  40cfe3:	adc    eax,0x9d7f1993
  40cfe8:	out    dx,al
  40cfe9:	adc    ebp,DWORD PTR ds:0xae76806c
  40cfef:	div    DWORD PTR [eax]
  40cff1:	mov    esp,0xd8b3d84d
  40cff6:	call   0xddea:0x2ca9528b
  40cffd:	pop    esp
  40cffe:	mov    al,0xf8
  40d000:	mov    ds:0x9ace52bd,eax
  40d005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d006:	mov    esp,0xc2b21318
  40d00b:	adc    DWORD PTR [edx],eax
  40d00d:	aad    0xb1
  40d00f:	jbe    0x40d086
  40d011:	fs mov eax,0xa3038f77
  40d017:	sub    BYTE PTR [ecx],0xab
  40d01a:	add    ch,BYTE PTR [ebx-0x26605caf]
  40d020:	push   0x3c
  40d022:	dec    ebp
  40d023:	xor    dh,BYTE PTR [ebx+0x2ba7042b]
  40d029:	sub    al,0x5f
  40d02b:	stos   BYTE PTR es:[edi],al
  40d02c:	jno    0x40cfdb
  40d02e:	inc    ecx
  40d02f:	lods   eax,DWORD PTR ds:[esi]
  40d030:	rol    DWORD PTR [ecx],1
  40d032:	cs out dx,eax
  40d034:	enter  0xba32,0x8a
  40d038:	add    ebp,DWORD PTR [ebx]
  40d03a:	mov    ch,0xfa
  40d03c:	test   eax,0x288eb66b
  40d041:	jno    0x40d074
  40d043:	aas    
  40d044:	std    
  40d045:	ja     0x40d078
  40d047:	dec    eax
  40d048:	mov    DWORD PTR [eax-0x53],eax
  40d04b:	fcomp  st(1)
  40d04d:	loope  0x40d0c2
  40d04f:	xchg   BYTE PTR [ebp+0x78],ah
  40d052:	jns    0x40cff2
  40d054:	icebp  
  40d055:	pop    ebx
  40d056:	sbb    DWORD PTR [eax],esp
  40d058:	dec    DWORD PTR ds:0x3d39ef02
  40d05e:	call   0xae3e:0x85d8755c
  40d065:	ficomp DWORD PTR [eax]
  40d067:	popf   
  40d068:	push   ss
  40d069:	pop    ds
  40d06a:	bnd jbe 0x40d080
  40d06d:	leave  
  40d06e:	pop    esi
  40d06f:	inc    esp
  40d070:	mov    cl,BYTE PTR [ebp+0x43]
  40d073:	fisttp DWORD PTR [eax]
  40d075:	or     BYTE PTR [edx-0x1],al
  40d078:	and    eax,0x62d3a86b
  40d07d:	mov    edi,0x3f646757
  40d082:	je     0x40d045
  40d084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d085:	mov    esp,0xe1b42285
  40d08a:	(bad)  
  40d08b:	pop    ss
  40d08c:	aaa    
  40d08d:	popa   
  40d08e:	dec    esi
  40d08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d090:	cmp    eax,0xf71ebf47
  40d095:	pop    es
  40d096:	push   ds
  40d097:	ja     0x40d09b
  40d099:	rol    DWORD PTR [ebp+0x18],0x42
  40d09d:	or     eax,0xd711e168
  40d0a2:	cmp    cl,BYTE PTR [edx]
  40d0a4:	xor    BYTE PTR [ebx-0x7cc8bad7],dl
  40d0aa:	and    ebx,DWORD PTR [ecx+0x1d]
  40d0ad:	sar    edx,cl
  40d0af:	pop    esi
  40d0b0:	pop    eax
  40d0b1:	mov    dh,BYTE PTR [esp+ecx*4-0x45]
  40d0b5:	xchg   esi,eax
  40d0b6:	xchg   esi,eax
  40d0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b8:	pop    edi
  40d0b9:	rol    DWORD PTR [ebx+ebx*2+0x423772b9],0x11
  40d0c1:	data16 fsub DWORD PTR [edi]
  40d0c4:	sub    BYTE PTR gs:[ebp+esi*1+0x72],cl
  40d0c9:	add    bh,BYTE PTR [ebx+0x5334fa21]
  40d0cf:	outs   dx,DWORD PTR ds:[esi]
  40d0d0:	gs push ebx
  40d0d2:	scas   al,BYTE PTR es:[edi]
  40d0d3:	xlat   BYTE PTR ds:[ebx]
  40d0d4:	pop    ebp
  40d0d5:	dec    esi
  40d0d6:	and    eax,0x67cd6444
  40d0db:	xor    DWORD PTR [esi+ebx*1-0x6b],edx
  40d0df:	push   ds
  40d0e0:	icebp  
  40d0e1:	mov    al,ds:0xe71a7380
  40d0e6:	or     DWORD PTR [ebx],0xbc8fdb34
  40d0ec:	retf   
  40d0ed:	jp     0x40d11e
  40d0ef:	xchg   BYTE PTR [esi],al
  40d0f1:	xor    DWORD PTR [edx],ebx
  40d0f3:	inc    ecx
  40d0f4:	dec    esp
  40d0f5:	cld    
  40d0f6:	(bad)  
  40d0f7:	data16 (bad) 
  40d0f9:	or     BYTE PTR [edx+0x3fe36dd2],dl
  40d0ff:	or     BYTE PTR [edx+ecx*8-0x41a302c6],0x1d
  40d107:	ss cmp eax,0xa0cf81f3
  40d10d:	dec    ebp
  40d10e:	dec    ebp
  40d10f:	mov    ecx,0xd629b0f7
  40d114:	retf   
  40d115:	mov    cl,0x65
  40d117:	adc    al,0xac
  40d119:	xor    al,0x90
  40d11b:	dec    eax
  40d11c:	inc    esp
  40d11d:	mov    ah,0x7e
  40d11f:	(bad)  
  40d120:	adc    al,0xe7
  40d122:	adc    al,0xb0
  40d124:	(bad)  
  40d126:	es stos BYTE PTR es:[edi],al
  40d128:	or     al,0xb7
  40d12a:	call   0x402d1f18
  40d12f:	sub    ecx,DWORD PTR ss:[edx]
  40d132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d133:	inc    eax
  40d134:	cld    
  40d135:	adc    al,0x8f
  40d137:	arpl   WORD PTR [esi],si
  40d139:	jnp    0x40d0ca
  40d13b:	jae    0x40d109
  40d13d:	(bad)  
  40d13e:	ret    
  40d13f:	adc    eax,0xfa402b6e
  40d144:	cld    
  40d145:	and    al,0x23
  40d147:	cmp    ah,BYTE PTR [ebp-0x190f89d8]
  40d14d:	hlt    
  40d14e:	sbb    ah,BYTE PTR [ebx]
  40d150:	cmp    esi,DWORD PTR [ecx]
  40d152:	jns    0x40d1af
  40d154:	jbe    0x40d113
  40d156:	dec    edi
  40d157:	jle    0x40d124
  40d159:	push   edx
  40d15a:	js     0x40d1ae
  40d15c:	sub    al,0xc0
  40d15e:	jecxz  0x40d1d2
  40d160:	cmp    DWORD PTR [edi],esp
  40d162:	push   edi
  40d163:	pop    ss
  40d164:	ja     0x40d158
  40d166:	fwait
  40d167:	push   0xffffffc8
  40d169:	fisttp WORD PTR [ebx+0x70a3b102]
  40d16f:	jl     0x40d1e3
  40d171:	cdq    
  40d172:	jmp    0x5331:0xb543954d
  40d179:	ins    DWORD PTR es:[edi],dx
  40d17a:	jmp    0x26092010
  40d17f:	lods   al,BYTE PTR ds:[esi]
  40d180:	repnz imul ecx,DWORD PTR cs:[ebx],0x4d
  40d185:	mov    ah,0x2
  40d187:	imul   esp,DWORD PTR [ecx],0x66c9fa80
  40d18d:	in     eax,dx
  40d18e:	sbb    DWORD PTR ds:0xfb121f37,edx
  40d194:	scas   al,BYTE PTR es:[edi]
  40d195:	or     al,0x22
  40d197:	ficom  DWORD PTR [ebp-0x78]
  40d19a:	mov    edi,DWORD PTR [ecx-0x22e944c6]
  40d1a0:	dec    esp
  40d1a1:	adc    DWORD PTR [ebp-0x79f1719],ebp
  40d1a7:	in     eax,0xef
  40d1a9:	fistp  DWORD PTR [edx-0x45707892]
  40d1af:	cli    
  40d1b0:	sub    eax,0x364ee01f
  40d1b5:	or     DWORD PTR [edi],ebx
  40d1b7:	stos   BYTE PTR es:[edi],al
  40d1b8:	clc    
  40d1b9:	xor    al,0x8f
  40d1bb:	shl    DWORD PTR [esi],0x20
  40d1be:	xor    BYTE PTR [ecx-0x65577023],ch
  40d1c4:	cmp    esi,ecx
  40d1c6:	xchg   edx,eax
  40d1c7:	pop    ebp
  40d1c8:	into   
  40d1c9:	test   al,0xc3
  40d1cb:	mov    ch,0x7a
  40d1cd:	sbb    edi,DWORD PTR [ebx+ebx*8+0x66]
  40d1d1:	xlat   BYTE PTR ds:[ebx]
  40d1d2:	push   esp
  40d1d3:	(bad)  
  40d1d4:	in     al,dx
  40d1d5:	mov    BYTE PTR [esi+edx*2-0x427a8153],ch
  40d1dc:	pop    ebx
  40d1dd:	inc    ebp
  40d1de:	pop    ss
  40d1df:	popw   ds
  40d1e1:	fst    DWORD PTR [ebp+ebp*2-0x6e]
  40d1e5:	mov    edi,0x2d554bd7
  40d1ea:	mov    bh,0x5e
  40d1ec:	dec    ebp
  40d1ed:	in     eax,0x8b
  40d1ef:	ficomp DWORD PTR ds:0xfe371808
  40d1f5:	jb     0x40d187
  40d1f7:	ins    BYTE PTR es:[edi],dx
  40d1f8:	cmp    edi,DWORD PTR [eax+0x5e1b8581]
  40d1fe:	jb     0x40d27e
  40d200:	jae    0x40d1fc
  40d202:	or     al,BYTE PTR [eax+0x3b]
  40d205:	jnp    0x40d238
  40d207:	or     eax,0x282cf24b
  40d20c:	es fwait
  40d20e:	mov    bh,dh
  40d210:	dec    ecx
  40d211:	nop
  40d212:	or     DWORD PTR [ebx-0x6f423522],esi
  40d218:	addr16 enter 0xc29a,0xa0
  40d21d:	test   eax,0x412e82e2
  40d222:	es in  eax,dx
  40d224:	aam    0x27
  40d226:	mov    edx,0x782818a9
  40d22b:	mov    edx,0xd30249bb
  40d230:	leave  
  40d231:	fdivrp st(4),st
  40d233:	adc    BYTE PTR cs:[ecx],ah
  40d236:	cdq    
  40d237:	sbb    al,0x1
  40d239:	jb     0x40d1bb
  40d23b:	xchg   ebp,eax
  40d23c:	or     BYTE PTR [eax],dh
  40d23e:	cs cdq 
  40d240:	cs fcmovu st,st(4)
  40d243:	dec    eax
  40d244:	lahf   
  40d245:	sbb    BYTE PTR [edi+ebp*8],al
  40d248:	pop    esp
  40d249:	(bad)  
  40d24b:	mov    ds:0xd839b89,eax
  40d250:	clc    
  40d251:	retf   0x1eb5
  40d254:	lods   eax,DWORD PTR ds:[esi]
  40d255:	mov    ch,0xc9
  40d257:	ins    DWORD PTR es:[edi],dx
  40d258:	cwde   
  40d259:	leave  
  40d25a:	jb     0x40d289
  40d25c:	adc    al,0x3
  40d25e:	xor    esp,eax
  40d260:	out    0x37,eax
  40d262:	jmp    0x16b24914
  40d267:	sub    DWORD PTR [edx-0x1a],ebx
  40d26a:	jecxz  0x40d24c
  40d26c:	sub    DWORD PTR [ebx],eax
  40d26e:	and    esi,ecx
  40d270:	fiadd  WORD PTR [eax+0xf]
  40d273:	sub    esi,0x3962c519
  40d279:	mov    ds:0x8988b51e,al
  40d27e:	sti    
  40d27f:	pop    esi
  40d280:	xor    esp,DWORD PTR [eax+esi*2-0x3980bd51]
  40d287:	cmp    dh,BYTE PTR [edx+eax*4-0x7b]
  40d28b:	xor    ecx,DWORD PTR [ebx]
  40d28d:	add    al,BYTE PTR [edi+0x26394f41]
  40d293:	(bad)  
  40d294:	cs mov dh,0x96
  40d297:	shl    ebp,cl
  40d299:	sbb    bl,BYTE PTR [eax-0x80]
  40d29c:	xchg   DWORD PTR [ecx+0x47242a0e],esp
  40d2a2:	pop    ebp
  40d2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a4:	ds jno 0x40d235
  40d2a7:	adc    bl,cl
  40d2a9:	sbb    esp,ecx
  40d2ab:	stos   BYTE PTR es:[edi],al
  40d2ac:	mov    ah,BYTE PTR [edx]
  40d2ae:	data16 out dx,al
  40d2b0:	fwait
  40d2b1:	rcr    ecx,0x9
  40d2b4:	cmp    al,0xf5
  40d2b6:	rol    BYTE PTR [esi-0x73e86864],cl
  40d2bc:	pushf  
  40d2bd:	loope  0x40d2a5
  40d2bf:	ins    BYTE PTR es:[edi],dx
  40d2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2c1:	call   0xefc7:0x983d9194
  40d2c8:	lahf   
  40d2c9:	pop    ds
  40d2ca:	(bad)  
  40d2cb:	jmp    0x40d33d
  40d2cd:	fisubr WORD PTR [eax-0x4d]
  40d2d0:	out    dx,eax
  40d2d1:	clc    
  40d2d2:	ret    0xb7c6
  40d2d5:	ret    
  40d2d6:	lods   al,BYTE PTR ds:[esi]
  40d2d7:	pxor   mm5,QWORD PTR [esi+0x7c]
  40d2db:	gs sti 
  40d2dd:	dec    esp
  40d2de:	and    al,0x12
  40d2e0:	add    al,0xa
  40d2e2:	xlat   BYTE PTR ds:[ebx]
  40d2e3:	or     ecx,DWORD PTR [ecx-0x6f]
  40d2e6:	sub    ebp,DWORD PTR [esp+ebp*2]
  40d2e9:	pop    es
  40d2ea:	ja     0x40d369
  40d2ec:	adc    esp,DWORD PTR [ecx+0xdc09796]
  40d2f2:	test   eax,0xb05446ee
  40d2f7:	aad    0x6f
  40d2f9:	test   DWORD PTR [edi+0x213227dc],ecx
  40d2ff:	retf   
  40d300:	push   esi
  40d301:	jmp    0x40d334
  40d303:	in     eax,0x21
  40d305:	mov    ecx,DWORD PTR [ecx]
  40d307:	(bad)  
  40d308:	pop    ss
  40d309:	mov    esp,edi
  40d30b:	stos   DWORD PTR es:[edi],eax
  40d30c:	push   ebx
  40d30d:	in     al,0xdd
  40d30f:	mov    ah,0xc5
  40d311:	inc    ebp
  40d312:	outs   dx,BYTE PTR ds:[esi]
  40d313:	inc    edx
  40d314:	ror    DWORD PTR [ecx],0x2d
  40d317:	push   ebp
  40d318:	push   ds
  40d319:	cld    
  40d31a:	sbb    cl,bl
  40d31c:	shr    bh,cl
  40d31e:	lds    ebp,FWORD PTR [edi]
  40d320:	lds    di,DWORD PTR [edx]
  40d323:	jl     0x40d34a
  40d325:	xchg   ebx,eax
  40d326:	jns    0x40d398
  40d328:	dec    ebx
  40d329:	(bad)  
  40d32a:	and    BYTE PTR [esp+edx*1-0x70f814cc],bh
  40d331:	clc    
  40d332:	pop    ebp
  40d333:	sub    eax,0xa8f487d5
  40d338:	push   es
  40d339:	sub    esp,eax
  40d33b:	xchg   edi,eax
  40d33c:	mov    edi,0x5d0c45ce
  40d341:	jno    0x40d328
  40d343:	push   ebx
  40d344:	test   eax,0x4dc8d946
  40d349:	xor    BYTE PTR [ebx],ch
  40d34b:	push   edx
  40d34c:	xchg   esi,eax
  40d34d:	mov    ebp,0x14c6ec06
  40d352:	jb     0x40d36e
  40d354:	and    al,0xcd
  40d356:	xchg   DWORD PTR [ecx],edx
  40d358:	push   ecx
  40d359:	fstp   TBYTE PTR [ebx+ecx*2-0x1b6613dd]
  40d360:	sbb    BYTE PTR [esi-0x7ff71ad6],ah
  40d366:	push   eax
  40d367:	imul   eax,eax,0xfc4562d2
  40d36d:	es push 0xc70748b0
  40d373:	cdq    
  40d374:	adc    ah,dh
  40d376:	inc    ebx
  40d377:	test   al,0x35
  40d379:	in     eax,dx
  40d37a:	add    edi,edi
  40d37c:	pop    ss
  40d37d:	fs jp  0x40d38a
  40d380:	sbb    esi,esp
  40d382:	and    DWORD PTR [esi-0x127d3edf],0x39b2d94b
  40d38c:	push   esp
  40d38d:	xchg   esp,eax
  40d38e:	out    dx,eax
  40d38f:	xchg   edi,eax
  40d390:	enter  0x9e35,0x9b
  40d394:	sbb    eax,0x1221e4b8
  40d399:	jne    0x40d33b
  40d39b:	sahf   
  40d39c:	pop    ecx
  40d39d:	xchg   edi,eax
  40d39e:	gs mov ah,0xb8
  40d3a1:	jnp    0x40d397
  40d3a3:	dec    ecx
  40d3a4:	sub    eax,0x8eb477c
  40d3a9:	das    
  40d3aa:	pop    esp
  40d3ab:	clc    
  40d3ac:	push   0xffffffeb
  40d3ae:	fwait
  40d3af:	icebp  
  40d3b0:	pop    ds
  40d3b1:	int3   
  40d3b2:	std    
  40d3b3:	jns    0x40d3a9
  40d3b5:	shl    BYTE PTR [edi],0xb0
  40d3b8:	jbe    0x40d376
  40d3ba:	add    ebp,DWORD PTR [ecx-0x5e]
  40d3bd:	int    0xdb
  40d3bf:	int3   
  40d3c0:	or     al,0x5c
  40d3c2:	push   edx
  40d3c3:	mov    esp,0xab212ac9
  40d3c8:	jecxz  0x40d3fc
  40d3ca:	jg     0x40d445
  40d3cc:	fld    DWORD PTR [edx]
  40d3ce:	dec    esp
  40d3cf:	push   ecx
  40d3d0:	inc    eax
  40d3d1:	fisubr DWORD PTR ds:0x4e1791d2
  40d3d7:	shl    BYTE PTR [ecx-0x65a1b957],1
  40d3dd:	in     eax,0x39
  40d3df:	repz loop 0x40d438
  40d3e2:	jge    0x40d389
  40d3e4:	mov    eax,0xde9345db
  40d3e9:	adc    eax,0xe605d6e2
  40d3ee:	js     0x40d38b
  40d3f0:	mov    ah,0x67
  40d3f2:	jb     0x40d431
  40d3f4:	lock push esp
  40d3f6:	push   esi
  40d3f7:	mov    cl,0xf0
  40d3f9:	out    0x26,al
  40d3fb:	jg     0x40d3c8
  40d3fd:	popf   
  40d3fe:	xor    eax,0x6484a5b0
  40d403:	ins    BYTE PTR es:[edi],dx
  40d404:	mov    esi,DWORD PTR [ebx-0x1a]
  40d407:	mov    ds:0xc2aeddf0,al
  40d40c:	jle    0x40d40f
  40d40e:	jge    0x40d39e
  40d410:	add    dl,ah
  40d412:	clc    
  40d413:	mov    bl,0x7f
  40d415:	sbb    eax,0xc3a8a6dd
  40d41a:	mul    DWORD PTR [edi+0x22b0dc27]
  40d420:	pop    eax
  40d421:	cmp    al,0xd8
  40d423:	and    eax,0x2cbf00b
  40d428:	lea    esp,[esi-0x6f]
  40d42b:	(bad)  
  40d42d:	lahf   
  40d42e:	in     eax,dx
  40d42f:	aaa    
  40d430:	clc    
  40d431:	adc    eax,0xbe1bdd8f
  40d436:	mov    al,0x57
  40d438:	hlt    
  40d439:	leave  
  40d43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43b:	scas   eax,DWORD PTR es:[edi]
  40d43c:	pop    esi
  40d43d:	mov    bl,0x6b
  40d43f:	cmp    ah,dh
  40d441:	jg     0x40d4a7
  40d443:	push   esp
  40d444:	scas   al,BYTE PTR es:[edi]
  40d445:	add    al,0x0
  40d447:	retf   0xd465
  40d44a:	shr    BYTE PTR [ecx],0xe2
  40d44d:	stc    
  40d44e:	jns    0x40d468
  40d450:	cmp    DWORD PTR [esi+ebp*8+0x74],0xffffff9f
  40d455:	(bad)  
  40d456:	into   
  40d457:	inc    ecx
  40d458:	jo     0x40d4a5
  40d45a:	adc    DWORD PTR [ecx+edi*8+0x4b2f53e9],esp
  40d461:	shl    ah,cl
  40d463:	aaa    
  40d464:	jmp    0xd59171a0
  40d469:	add    BYTE PTR [eax],bh
  40d46b:	inc    ecx
  40d46c:	(bad)  
  40d46d:	cli    
  40d46e:	mov    ah,BYTE PTR [ecx+0x6d]
  40d471:	sub    esp,eax
  40d473:	in     eax,dx
  40d474:	pusha  
  40d475:	mov    edx,0x8e8fb70a
  40d47a:	hlt    
  40d47b:	or     BYTE PTR [ebx-0x38],dh
  40d47e:	lock loopne 0x40d4c7
  40d481:	adc    ch,BYTE PTR [eax-0x7679eec4]
  40d487:	aam    0x25
  40d489:	loope  0x40d50a
  40d48b:	mov    al,ds:0x71fe813b
  40d490:	adc    al,bl
  40d492:	aas    
  40d493:	adc    DWORD PTR [ebp+0x1d],edx
  40d496:	test   eax,0xa8127c7d
  40d49b:	loopne 0x40d449
  40d49d:	xchg   ecx,eax
  40d49e:	loop   0x40d423
  40d4a0:	js     0x40d45a
  40d4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a3:	mov    dh,0x62
  40d4a5:	je     0x40d4c1
  40d4a7:	mov    dl,0x44
  40d4a9:	push   cs
  40d4aa:	sbb    al,BYTE PTR [ebx]
  40d4ac:	sbb    ebp,ebp
  40d4ae:	(bad)  
  40d4af:	mov    ah,0x4f
  40d4b1:	ret    0xab66
  40d4b4:	fdivr  st(4),st
  40d4b6:	pop    es
  40d4b7:	adc    BYTE PTR [ebx+ebp*1],0xaa
  40d4bb:	stos   DWORD PTR es:[edi],eax
  40d4bc:	mov    fs,WORD PTR [ebp+0x7e0a3cba]
  40d4c2:	cmp    esi,DWORD PTR [esi-0x2f]
  40d4c5:	xchg   esp,eax
  40d4c6:	std    
  40d4c7:	in     al,0x38
  40d4c9:	push   0x63
  40d4cb:	mov    ah,0xe2
  40d4cd:	cmp    dh,dh
  40d4cf:	ss ja  0x40d518
  40d4d2:	dec    esi
  40d4d3:	test   DWORD PTR [ecx-0x2],0x43b631d7
  40d4da:	(bad)  
  40d4db:	mov    ds:0x4944c08d,eax
  40d4e0:	mov    ah,0x27
  40d4e2:	aas    
  40d4e3:	xor    eax,esi
  40d4e5:	mov    eax,DWORD PTR [edi+0x41]
  40d4e8:	mov    bl,0xcf
  40d4ea:	daa    
  40d4eb:	dec    esp
  40d4ec:	test   eax,0xd15b5634
  40d4f1:	pop    eax
  40d4f2:	aaa    
  40d4f3:	cs out dx,eax
  40d4f5:	mov    ebx,0xde92f67c
  40d4fa:	es mov edi,0x81b50ed6
  40d500:	leave  
  40d501:	pop    edi
  40d502:	mov    ebx,0x49d32367
  40d507:	push   edx
  40d508:	lea    ecx,[eax+0x66]
  40d50b:	and    eax,0x457ae84f
  40d510:	adc    edi,DWORD PTR [eax+0x4d90ec5d]
  40d516:	sub    BYTE PTR [eax],dl
  40d518:	not    BYTE PTR [edx]
  40d51a:	mov    dh,0x9d
  40d51c:	pop    edi
  40d51d:	push   esp
  40d51e:	cmp    BYTE PTR [ecx+0x2de47ca1],dh
  40d524:	ret    0x29f0
  40d527:	dec    ebx
  40d528:	test   al,0x13
  40d52a:	jge    0x40d578
  40d52c:	test   BYTE PTR [edi-0x45],dh
  40d52f:	jmp    0x8707:0xf2d59dd5
  40d536:	test   DWORD PTR [eax+0x75acd753],0x4711ff24
  40d540:	jge    0x40d4c6
  40d542:	inc    edi
  40d543:	xchg   esi,eax
  40d544:	pop    edi
  40d545:	(bad)  
  40d546:	mov    al,ds:0xc81ece42
  40d54b:	cmp    bh,ah
  40d54d:	add    ah,dh
  40d54f:	push   ecx
  40d550:	inc    edi
  40d551:	xchg   esi,ebx
  40d553:	pop    ss
  40d554:	outs   dx,BYTE PTR ds:[esi]
  40d555:	shr    BYTE PTR [ecx-0x175daf8b],1
  40d55b:	cmp    ch,BYTE PTR [edi-0x5f]
  40d55e:	push   ds
  40d55f:	fisubr DWORD PTR [edx+ebx*1-0x7d]
  40d563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d564:	dec    ebx
  40d565:	or     esi,0x43
  40d568:	sub    eax,0xd2015335
  40d56d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d56f:	mov    dl,BYTE PTR [ebp-0x60]
  40d572:	stos   DWORD PTR es:[edi],eax
  40d573:	inc    ebx
  40d574:	cmp    DWORD PTR [eax-0x40],esp
  40d577:	lock cmp BYTE PTR [edx],ah
  40d57a:	pop    ecx
  40d57b:	push   ebx
  40d57c:	int3   
  40d57d:	bound  esp,QWORD PTR [edx]
  40d57f:	or     eax,0xb8bd84d8
  40d584:	jae    0x40d51b
  40d586:	mov    dh,0x20
  40d588:	mov    dh,0x5b
  40d58a:	test   cl,dl
  40d58c:	inc    esi
  40d58d:	in     al,dx
  40d58e:	jae    0x40d599
  40d590:	cmp    al,0x6b
  40d592:	add    ah,al
  40d594:	out    dx,al
  40d595:	popf   
  40d596:	adc    eax,0x845fe995
  40d59b:	or     al,0x92
  40d59d:	push   ds
  40d59e:	in     al,0x87
  40d5a0:	xchg   ebx,eax
  40d5a1:	in     eax,0xdb
  40d5a3:	test   al,0x92
  40d5a5:	add    al,0x21
  40d5a7:	(bad)  
  40d5a8:	loop   0x40d59b
  40d5aa:	shl    bl,1
  40d5ac:	ret    
  40d5ad:	xchg   esp,eax
  40d5ae:	adc    ebx,DWORD PTR [ebx-0x20]
  40d5b1:	sti    
  40d5b2:	loop   0x40d5a5
  40d5b4:	dec    eax
  40d5b5:	sar    DWORD PTR [ecx],0x43
  40d5b8:	fs int3 
  40d5ba:	jns    0x40d5fe
  40d5bc:	or     al,0x2a
  40d5be:	stos   BYTE PTR es:[edi],al
  40d5bf:	mov    dh,0x86
  40d5c1:	mov    ds:0x34f40a1a,eax
  40d5c6:	dec    eax
  40d5c7:	repnz inc edx
  40d5c9:	out    dx,eax
  40d5ca:	jecxz  0x40d603
  40d5cc:	loopne 0x40d5b5
  40d5ce:	(bad)  
  40d5d0:	(bad)  
  40d5d2:	(bad)  
  40d5d3:	mov    ds:0x92dac255,eax
  40d5d8:	xchg   ebx,eax
  40d5d9:	or     edx,DWORD PTR [edx]
  40d5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5dc:	stc    
  40d5dd:	and    ebp,ecx
  40d5df:	out    dx,al
  40d5e0:	dec    ebp
  40d5e1:	retf   
  40d5e2:	or     al,0xdb
  40d5e4:	cmp    ecx,DWORD PTR [esi-0x66fb988c]
  40d5ea:	div    BYTE PTR [ebp+0x79e0a666]
  40d5f0:	int    0xb9
  40d5f2:	xchg   DWORD PTR [ebx-0x7f],eax
  40d5f5:	xchg   esi,eax
  40d5f6:	leave  
  40d5f7:	push   eax
  40d5f8:	mov    ebx,0x50eb8378
  40d5fd:	fsub   QWORD PTR [edi+0x1a]
  40d600:	repz adc edx,esp
  40d603:	jbe    0x40d5f4
  40d605:	je     0x40d60b
  40d607:	or     ebx,DWORD PTR [esi-0x7dea8672]
  40d60d:	pusha  
  40d60e:	out    0xf9,eax
  40d610:	dec    ecx
  40d611:	pop    ebx
  40d612:	mov    eax,ds:0x7f5fb34
  40d617:	cld    
  40d618:	loopne 0x40d697
  40d61a:	out    0xce,al
  40d61c:	dec    esi
  40d61d:	loope  0x40d675
  40d61f:	xor    al,bl
  40d621:	add    dh,BYTE PTR [esi+0x7dd0f664]
  40d627:	in     eax,0x48
  40d629:	adc    al,ch
  40d62b:	es rcl bl,0x9d
  40d62f:	shr    al,1
  40d631:	dec    ebx
  40d632:	sbb    al,0x7e
  40d634:	dec    edx
  40d635:	out    0x4c,eax
  40d637:	clc    
  40d638:	dec    ebp
  40d639:	push   ebx
  40d63a:	mov    ah,0x5f
  40d63c:	(bad)
  40d640:	jge    0x40d620
  40d642:	inc    ecx
  40d643:	call   0x4f1443d6
  40d648:	xor    eax,0x155faf28
  40d64d:	test   ebp,0xc393d5c7
  40d653:	adc    DWORD PTR [edi-0x58f81bb0],ebx
  40d659:	jae    0x40d661
  40d65b:	jbe    0x40d699
  40d65d:	sub    DWORD PTR [ebx-0x47],edi
  40d660:	(bad)  
  40d661:	cmp    dl,dh
  40d663:	xchg   esp,eax
  40d664:	jp     0x40d675
  40d666:	mov    bh,0xf7
  40d668:	dec    edi
  40d669:	imul   edi,DWORD PTR [ebp+0x50],0xffffffec
  40d66d:	jns    0x40d652
  40d66f:	outs   dx,DWORD PTR ds:[esi]
  40d670:	(bad)  
  40d672:	inc    esi
  40d673:	mov    al,0xfc
  40d675:	jecxz  0x40d622
  40d677:	jnp    0x40d6ae
  40d679:	arpl   sp,di
  40d67b:	mov    cs,WORD PTR [edi-0x6f]
  40d67e:	data16 rcl BYTE PTR [ebp+edi*4-0x55aa9eb8],0x38
  40d687:	mov    ds:0xe67e4fc1,al
  40d68c:	(bad)  
  40d68d:	mov    esp,0x113184eb
  40d692:	pop    ecx
  40d693:	nop
  40d694:	push   ss
  40d695:	lods   eax,DWORD PTR ds:[esi]
  40d696:	cmp    DWORD PTR [ebp-0x6d],ebx
  40d699:	sub    al,0xab
  40d69b:	iret   
  40d69c:	rcl    DWORD PTR [ecx-0x1fa6191a],0xc3
  40d6a3:	adc    ebp,esi
  40d6a5:	stc    
  40d6a6:	mov    eax,0x3eefd150
  40d6ab:	pushf  
  40d6ac:	ret    
  40d6ad:	cmp    cl,BYTE PTR [ecx+0x3fee063]
  40d6b3:	xchg   edi,eax
  40d6b4:	inc    esp
  40d6b5:	push   0x656ad07e
  40d6ba:	xchg   BYTE PTR [edi-0x7f9603db],ch
  40d6c0:	out    0x9c,eax
  40d6c2:	push   es
  40d6c3:	dec    ebx
  40d6c4:	nop
  40d6c5:	(bad)  
  40d6c7:	rcl    BYTE PTR [edx-0x709ac53b],0x67
  40d6ce:	cmp    ebx,esi
  40d6d0:	add    edi,DWORD PTR [ebx]
  40d6d2:	mov    bl,BYTE PTR [esi]
  40d6d4:	daa    
  40d6d5:	or     eax,0x6d694d46
  40d6da:	or     BYTE PTR [ecx+edx*2-0x1a],ah
  40d6de:	push   ecx
  40d6df:	hlt    
  40d6e0:	adc    BYTE PTR [eax],dh
  40d6e2:	aad    0xf0
  40d6e4:	shl    DWORD PTR ds:0x2933d72f,cl
  40d6ea:	xor    al,0xf9
  40d6ec:	gs jnp 0x40d6e8
  40d6ef:	call   0x9a9:0x6d413ada
  40d6f6:	xor    DWORD PTR [esi-0x74175063],esp
  40d6fc:	jno    0x40d6ea
  40d6fe:	mov    ah,0xab
  40d700:	icebp  
  40d701:	mov    DWORD PTR [edi],edi
  40d703:	mov    ah,0xd2
  40d705:	push   esi
  40d706:	fldenv [edi+0x42]
  40d709:	pushf  
  40d70a:	lea    ebp,[ebx+0x6f409a68]
  40d710:	mov    ds:0xf76a9cd7,al
  40d715:	or     BYTE PTR [esp+esi*4],dh
  40d718:	or     BYTE PTR [esi-0x3fe5139e],0xe2
  40d71f:	cwde   
  40d720:	test   BYTE PTR [ecx],dl
  40d722:	mov    ecx,0x12ab1b78
  40d727:	push   ebp
  40d728:	jmp    0x318b:0x58a32b54
  40d72f:	outs   dx,BYTE PTR ds:[esi]
  40d730:	inc    esi
  40d731:	push   ebp
  40d732:	or     eax,0x63d5e992
  40d737:	inc    ecx
  40d738:	popa   
  40d739:	dec    edx
  40d73a:	stos   BYTE PTR es:[edi],al
  40d73b:	mov    ebp,0xbc828577
  40d740:	aam    0x64
  40d742:	into   
  40d743:	pushf  
  40d744:	in     al,dx
  40d745:	jns    0x40d72b
  40d747:	popa   
  40d748:	stos   BYTE PTR es:[edi],al
  40d749:	mov    ch,0x5c
  40d74b:	and    BYTE PTR [ebp+0x31a14c48],al
  40d751:	das    
  40d752:	jl     0x40d73f
  40d754:	repnz xor dh,bl
  40d757:	ins    BYTE PTR es:[edi],dx
  40d758:	repz in eax,0xa6
  40d75b:	ror    dh,cl
  40d75d:	lock inc edi
  40d75f:	repz retf 
  40d761:	pusha  
  40d762:	leave  
  40d763:	mov    eax,ds:0x208a7cd7
  40d768:	adc    ecx,ebp
  40d76a:	lods   eax,DWORD PTR ds:[esi]
  40d76b:	xor    ecx,DWORD PTR [ebx]
  40d76d:	mov    bh,0x85
  40d76f:	jmp    0x40d7a3
  40d771:	je     0x40d794
  40d773:	retf   0xc26c
  40d776:	ins    DWORD PTR es:[edi],dx
  40d777:	pop    ebp
  40d778:	mov    dh,0x11
  40d77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77b:	jge    0x40d7ac
  40d77d:	pop    ds
  40d77e:	call   0x82539330
  40d783:	cmp    ebx,DWORD PTR [esi]
  40d785:	inc    esp
  40d786:	adc    BYTE PTR [edi+0x45198284],cl
  40d78c:	mov    ch,0x32
  40d78e:	stos   DWORD PTR es:[edi],eax
  40d78f:	cmp    ebx,esi
  40d791:	sbb    eax,0x5691570f
  40d796:	int3   
  40d797:	jnp    0x40d7ef
  40d799:	int    0xe8
  40d79b:	popf   
  40d79c:	pop    esi
  40d79d:	repz and eax,0x4d895317
  40d7a3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a5:	es cmp eax,0x5d8a0a62
  40d7ab:	mov    WORD PTR [ebp+0x55c00b22],ss
  40d7b1:	cmp    BYTE PTR [edx],ch
  40d7b3:	shl    BYTE PTR [ebp+0x36b28257],cl
  40d7b9:	stos   DWORD PTR es:[edi],eax
  40d7ba:	adc    al,0x92
  40d7bc:	das    
  40d7bd:	ins    BYTE PTR es:[edi],dx
  40d7be:	pop    ss
  40d7bf:	xor    al,0x5b
  40d7c1:	stos   BYTE PTR es:[edi],al
  40d7c2:	jo     0x40d747
  40d7c4:	out    dx,eax
  40d7c5:	loop   0x40d7cc
  40d7c7:	inc    esp
  40d7c8:	cdq    
  40d7c9:	dec    edx
  40d7ca:	lea    esi,ds:0x72609ac7
  40d7d0:	mov    bl,0x46
  40d7d2:	jmp    0xcf84:0xfff3a145
  40d7d9:	jle    0x40d762
  40d7db:	and    al,0xe1
  40d7dd:	out    0x2c,eax
  40d7df:	sbb    BYTE PTR [ecx+esi*1-0x432abd6d],ch
  40d7e6:	stos   BYTE PTR es:[edi],al
  40d7e7:	iret   
  40d7e8:	mov    dl,0x62
  40d7ea:	aas    
  40d7eb:	xor    DWORD PTR [ecx],0xe51354d4
  40d7f1:	jnp    0x40d847
  40d7f3:	ret    
  40d7f4:	jmp    0x8f9425a5
  40d7f9:	mov    ecx,esi
  40d7fb:	jb     0x40d7af
  40d7fd:	jp     0x40d86e
  40d7ff:	(bad)  
  40d800:	jb     0x40d83c
  40d802:	pop    edi
  40d803:	retf   0x4793
  40d806:	cmp    BYTE PTR [edi+0x4d],0x3b
  40d80a:	sub    al,0xf
  40d80c:	iret   
  40d80d:	mov    ecx,0x587e7bb2
  40d812:	(bad)  
  40d813:	jmp    0x703b9312
  40d818:	mov    esi,0xe757ea9
  40d81d:	hlt    
  40d81e:	push   eax
  40d81f:	dec    eax
  40d820:	fdecstp 
  40d822:	clc    
  40d823:	adc    BYTE PTR [eax-0x6a],ah
  40d826:	test   BYTE PTR [di-0x616a],ch
  40d82b:	stos   BYTE PTR es:[edi],al
  40d82c:	push   ebp
  40d82d:	(bad)  
  40d82f:	inc    eax
  40d830:	pop    ss
  40d831:	out    0x4d,eax
  40d833:	fs push es
  40d835:	jmp    0x5dd4:0xd878926c
  40d83c:	mov    ds:0x7738281b,eax
  40d841:	mov    ebp,0xb27172db
  40d846:	pusha  
  40d847:	pop    ecx
  40d848:	ret    0xf01c
  40d84b:	sbb    eax,0x32869910
  40d850:	inc    esi
  40d851:	jmp    0x8cc8:0x2e2c5836
  40d858:	mov    ds:0xeb47b97d,al
  40d85d:	daa    
  40d85e:	dec    ebp
  40d85f:	and    DWORD PTR [eax+eiz*8],0x55067064
  40d866:	pushf  
  40d867:	loopne 0x40d81f
  40d869:	push   ecx
  40d86a:	ror    BYTE PTR [esi],cl
  40d86c:	cdq    
  40d86d:	push   ecx
  40d86e:	call   0xc9e1ccc
  40d873:	neg    DWORD PTR [edx+0x80ff7bf]
  40d879:	outs   dx,DWORD PTR ds:[esi]
  40d87a:	jg     0x40d813
  40d87c:	xchg   esp,eax
  40d87d:	dec    ecx
  40d87e:	inc    edi
  40d87f:	fstp   QWORD PTR [ecx+0x13]
  40d882:	fistp  DWORD PTR [ebx]
  40d884:	cmp    edx,DWORD PTR [ecx]
  40d886:	push   es
  40d887:	or     eax,0xdf8505ef
  40d88c:	test   ebx,esi
  40d88e:	popf   
  40d88f:	add    edi,esi
  40d891:	cmp    ah,ah
  40d893:	in     eax,dx
  40d894:	cdq    
  40d895:	scas   eax,DWORD PTR es:[edi]
  40d896:	sti    
  40d897:	xchg   ebp,eax
  40d898:	mov    WORD PTR [ebp+0x36],cs
  40d89b:	add    edx,DWORD PTR [eax+ecx*1+0x41]
  40d89f:	pop    edi
  40d8a0:	iret   
  40d8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a2:	rcr    DWORD PTR [ecx],0x58
  40d8a5:	ins    BYTE PTR es:[edi],dx
  40d8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a7:	xchg   edx,eax
  40d8a8:	or     ch,BYTE PTR [edx-0x67283c66]
  40d8ae:	ficomp DWORD PTR [ebp-0x72]
  40d8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8b2:	sbb    DWORD PTR [eax-0x53],eax
  40d8b5:	ss cmp al,0x7a
  40d8b8:	lods   eax,DWORD PTR ds:[esi]
  40d8b9:	aam    0xe8
  40d8bb:	fwait
  40d8bc:	sub    eax,0x8a94dc11
  40d8c1:	mov    ebp,0x427a47c2
  40d8c6:	(bad)  
  40d8c7:	or     al,0x8
  40d8c9:	fsubr  QWORD PTR [ebx-0x30d43d70]
  40d8cf:	sbb    ecx,DWORD PTR [edi-0xcb61421]
  40d8d5:	test   al,0xe
  40d8d7:	in     al,0x97
  40d8d9:	jbe    0x40d8b1
  40d8db:	xchg   DWORD PTR [ebp+0x17],ebp
  40d8de:	pop    ebx
  40d8df:	mov    esi,0x38c40ee1
  40d8e4:	mov    eax,ds:0x1de98164
  40d8e9:	imul   eax,DWORD PTR [ecx],0xffffff86
  40d8ec:	pop    ss
  40d8ed:	push   0x7a598154
  40d8f2:	int    0xb3
  40d8f4:	and    eax,DWORD PTR [esp+eiz*4+0x61673691]
  40d8fb:	and    eax,0xb2e319cf
  40d900:	jmp    0xeb5b8043
  40d905:	into   
  40d906:	fist   DWORD PTR [ebx+0x30]
  40d909:	sub    ah,BYTE PTR [ebx+esi*1+0x3]
  40d90d:	sub    dh,BYTE PTR [edx-0x535b59e1]
  40d913:	fidivr WORD PTR [esp+eiz*4-0x50]
  40d917:	fild   WORD PTR [ecx+ecx*2-0x2a]
  40d91b:	xchg   DWORD PTR [esi+ebx*8-0x23bcfd9f],ebp
  40d922:	repnz push 0x5eefd31
  40d928:	mov    ah,0x4e
  40d92a:	push   es
  40d92b:	inc    esi
  40d92c:	imul   eax,DWORD PTR [edi+edx*4-0x49e19419],0x51
  40d934:	inc    ebp
  40d935:	je     0x40d94a
  40d937:	pusha  
  40d938:	fcomp  QWORD PTR [edi-0x7e]
  40d93b:	in     al,0xa9
  40d93d:	sub    DWORD PTR [edi+0xf],ecx
  40d940:	sub    al,0x53
  40d942:	adc    al,BYTE PTR [ebx]
  40d944:	out    dx,al
  40d945:	pop    ss
  40d946:	call   0x4cee0cd5
  40d94b:	mov    fs,esi
  40d94d:	sbb    eax,0x5d0549d7
  40d952:	xor    bh,dh
  40d954:	shr    BYTE PTR ds:[esi-0x6773e35d],1
  40d95b:	inc    ebp
  40d95c:	enter  0xbd9a,0x17
  40d960:	aam    0x8d
  40d962:	pop    esp
  40d963:	sbb    edi,DWORD PTR [ebx]
  40d965:	or     esp,edx
  40d967:	fwait
  40d968:	and    bh,dh
  40d96a:	push   edx
  40d96b:	jno    0x40d955
  40d96d:	fcom   st(1)
  40d96f:	jne    0x40d9de
  40d971:	aaa    
  40d972:	and    bh,BYTE PTR [edx]
  40d974:	dec    eax
  40d975:	arpl   bp,si
  40d977:	mov    gs,esi
  40d979:	mov    dl,0xe6
  40d97b:	repz mov ebp,ecx
  40d97e:	(bad)  
  40d97f:	xor    ebx,esi
  40d981:	jmp    0x40d934
  40d983:	push   esp
  40d984:	loope  0x40d9f5
  40d986:	mov    ch,0x19
  40d988:	stc    
  40d989:	add    dl,al
  40d98b:	dec    ecx
  40d98c:	popf   
  40d98d:	push   esp
  40d98e:	push   eax
  40d98f:	clc    
  40d990:	lea    esi,ds:0xef9c7c8f
  40d996:	mov    ?,WORD PTR [eax-0x5c]
  40d999:	xor    BYTE PTR [esi-0x29],0xd3
  40d99d:	mov    ch,0xa6
  40d99f:	aam    0x5c
  40d9a1:	jmp    0xfa3ee576
  40d9a6:	push   ecx
  40d9a7:	sbb    al,0x28
  40d9a9:	mov    dl,0xb6
  40d9ab:	(bad)  
  40d9ac:	xor    al,0x76
  40d9ae:	jmp    0xaa82:0xbb84aa66
  40d9b5:	add    ebp,0xfcbdceaa
  40d9bb:	or     al,0xe5
  40d9bd:	cmp    dh,BYTE PTR [esi+0x17]
  40d9c0:	enter  0xe4d2,0x69
  40d9c4:	sub    DWORD PTR [eax+0x5d],ebx
  40d9c7:	ds jle 0x40d9f5
  40d9ca:	sub    BYTE PTR [eax+0x35],dh
  40d9cd:	pop    esp
  40d9ce:	mov    DWORD PTR [ecx+0x28],esi
  40d9d1:	jb     0x40da32
  40d9d3:	icebp  
  40d9d4:	adc    eax,0x89d326a0
  40d9d9:	xchg   DWORD PTR [esi],esi
  40d9db:	aam    0x8d
  40d9dd:	mov    edi,0x2e14a3
  40d9e2:	and    DWORD PTR [edi+ecx*8],ebx
  40d9e5:	nop
  40d9e6:	popf   
  40d9e7:	out    0xae,al
  40d9e9:	add    DWORD PTR [ecx],eax
  40d9eb:	out    0x5f,eax
  40d9ed:	jbe    0x40da3f
  40d9ef:	mov    esi,0x2b1da5e8
  40d9f4:	pop    esp
  40d9f5:	add    eax,0xf6da4f70
  40d9fa:	adc    ecx,eax
  40d9fc:	nop
  40d9fd:	add    ch,BYTE PTR [ebx]
  40d9ff:	dec    esi
  40da00:	cmp    BYTE PTR [ecx+eax*2],0x71
  40da04:	jns    0x40d9fb
  40da06:	test   eax,edx
  40da08:	popf   
  40da09:	dec    edx
  40da0a:	iret   
  40da0b:	rol    DWORD PTR [edi-0x3d6b0c72],cl
  40da11:	mov    ecx,0x7dfc03d7
  40da16:	arpl   WORD PTR [ebx],cx
  40da18:	xchg   ebp,eax
  40da19:	push   esp
  40da1a:	xchg   DWORD PTR [eax+0x3349bb9b],esi
  40da20:	arpl   bp,di
  40da22:	sub    al,0x56
  40da24:	pop    edi
  40da25:	mov    cl,0x86
  40da27:	imul   ebp,DWORD PTR [esi+0x68],0xffffff8d
  40da2b:	or     DWORD PTR [ecx+eax*4],edx
  40da2e:	pop    edx
  40da2f:	sub    al,0x89
  40da31:	dec    edi
  40da32:	ret    0x2674
  40da35:	stos   BYTE PTR es:[edi],al
  40da36:	daa    
  40da37:	add    al,0x14
  40da39:	inc    edx
  40da3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da3b:	outs   dx,DWORD PTR ds:[esi]
  40da3c:	int3   
  40da3d:	inc    edx
  40da3e:	cmp    al,0x5e
  40da40:	js     0x40d9ea
  40da42:	shl    BYTE PTR [edi],0x9b
  40da45:	das    
  40da46:	mov    al,ds:0x606f79d2
  40da4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da4c:	rcr    BYTE PTR [edx+0x71adce7f],1
  40da52:	aas    
  40da53:	cmp    eax,0xd0c55b32
  40da58:	ret    0x9d51
  40da5b:	rol    DWORD PTR [ebp*1-0x162d6810],cl
  40da62:	cmp    BYTE PTR [ebp+0x4],cl
  40da65:	mov    ss,WORD PTR [eax]
  40da67:	sub    DWORD PTR [edi+0x3750c7e3],esp
  40da6d:	(bad)  [ebp+0x549b0528]
  40da73:	imul   esi,edx,0x4e
  40da76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da77:	and    DWORD PTR [ebx+0x3f7569ac],esp
  40da7d:	add    dl,BYTE PTR [eax]
  40da7f:	jmp    0xb2a7bde5
  40da84:	ins    BYTE PTR es:[edi],dx
  40da85:	sub    al,0x6f
  40da87:	fild   DWORD PTR [esi+0x4a]
  40da8a:	pusha  
  40da8b:	sbb    edx,0xffffffed
  40da8e:	push   ebp
  40da8f:	cmp    al,0x8
  40da91:	gs out dx,al
  40da93:	js     0x40daaf
  40da95:	sub    esi,DWORD PTR [eax+0x45]
  40da98:	aaa    
  40da99:	pop    eax
  40da9a:	cmp    ah,BYTE PTR [edi+0x6c7f3044]
  40daa0:	addr16 cmp eax,0xb2f023e7
  40daa6:	xlat   BYTE PTR ds:[ebx]
  40daa7:	add    eax,0xc782a9a5
  40daac:	dec    esi
  40daad:	jl     0x40da7c
  40daaf:	enter  0x12a7,0x3b
  40dab3:	rol    edx,cl
  40dab5:	mov    ch,0x17
  40dab7:	ds jno 0x40dab6
  40daba:	mov    edi,0xb28a2fb2
  40dabf:	push   ss
  40dac0:	mul    BYTE PTR [edx+0x4d78fc17]
  40dac6:	mov    ah,BYTE PTR [esi+edi*2+0xd61eb83]
  40dacd:	jne    0x40da4f
  40dacf:	frstor [edx]
  40dad1:	imul   ebp,DWORD PTR [ecx+0x6eb94672],0xffffffcf
  40dad8:	xor    esi,DWORD PTR [ebx+0x4de605b0]
  40dade:	adc    edx,DWORD PTR [esi]
  40dae0:	lds    ecx,FWORD PTR [ebx-0x44]
  40dae3:	inc    esi
  40dae4:	sti    
  40dae5:	imul   eax,DWORD PTR [edx],0xffffff93
  40dae8:	cmp    dh,BYTE PTR ss:[esi]
  40daeb:	jp     0x40db3c
  40daed:	popf   
  40daee:	mov    ebp,DWORD PTR [esp+eiz*4+0x2f7628e9]
  40daf5:	pop    ebx
  40daf6:	int    0x10
  40daf8:	fcom   DWORD PTR [edi+0x6]
  40dafb:	daa    
  40dafc:	add    ebx,DWORD PTR [ecx+eiz*1+0x70]
  40db00:	push   edi
  40db01:	mov    dl,0x95
  40db03:	xchg   esi,eax
  40db04:	aaa    
  40db05:	pop    esi
  40db06:	add    eax,0xd421db7c
  40db0b:	xchg   ecx,eax
  40db0c:	les    ecx,FWORD PTR [ebx+0x5c]
  40db0f:	and    eax,0x7dfeefda
  40db14:	jecxz  0x40db50
  40db16:	std    
  40db17:	or     BYTE PTR gs:[ebx+edx*4-0x381ea6a2],bl
  40db1f:	bound  ebx,QWORD PTR [esi+0x62]
  40db22:	scas   eax,DWORD PTR es:[edi]
  40db23:	push   esi
  40db24:	outs   dx,BYTE PTR ds:[esi]
  40db25:	out    dx,al
  40db26:	xchg   esi,eax
  40db27:	push   edx
  40db28:	sahf   
  40db29:	ret    
  40db2a:	jo     0x40daaf
  40db2c:	sub    DWORD PTR [eax+0x12],0xc463336e
  40db33:	jge    0x40db76
  40db35:	sub    BYTE PTR [ebx],dh
  40db37:	cdq    
  40db38:	add    eax,0xb1bff12d
  40db3d:	xchg   edx,eax
  40db3e:	adc    DWORD PTR [ebx+0x52aff6c2],0xfdf00154
  40db48:	nop
  40db49:	jae    0x40dbab
  40db4b:	in     al,0xc1
  40db4d:	cmp    ah,BYTE PTR [esi]
  40db4f:	(bad)  
  40db50:	gs pop es
  40db52:	cmp    BYTE PTR [eax+0x79c07c2],0x82
  40db59:	retf   0xff85
  40db5c:	adc    eax,0x7e10ea04
  40db61:	pop    ss
  40db62:	and    eax,ebx
  40db64:	mov    fs,esi
  40db66:	add    edx,DWORD PTR [esi]
  40db68:	inc    esp
  40db69:	daa    
  40db6a:	add    DWORD PTR ds:0x5dc454aa,ecx
  40db70:	jle    0x40daf4
  40db72:	mov    edi,0xa4d745c6
  40db77:	dec    DWORD PTR [edx]
  40db79:	jne    0x40db57
  40db7b:	aas    
  40db7c:	outs   dx,BYTE PTR ds:[esi]
  40db7d:	cli    
  40db7e:	in     al,dx
  40db7f:	cmp    edi,DWORD PTR [edx+0x75bee311]
  40db85:	sub    BYTE PTR [ebx-0x3d],dl
  40db88:	cld    
  40db89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db8a:	jg     0x40db32
  40db8c:	jmp    0x4938:0x2aa54aa1
  40db93:	push   edx
  40db94:	aaa    
  40db95:	gs adc al,0x77
  40db98:	inc    eax
  40db99:	repz jne 0x40dbfa
  40db9c:	xchg   esi,eax
  40db9d:	jno    0x40dbc9
  40db9f:	inc    edx
  40dba0:	mov    eax,0x84325c01
  40dba5:	sub    eax,0x22ea7436
  40dbaa:	out    0xa6,eax
  40dbac:	ss aam 0x62
  40dbaf:	dec    ebp
  40dbb0:	imul   esi,DWORD PTR [esi],0xffffff9b
  40dbb3:	hlt    
  40dbb4:	add    ecx,esp
  40dbb6:	and    edi,DWORD PTR [edi-0x59]
  40dbb9:	sbb    ecx,DWORD PTR [ebp+0x60]
  40dbbc:	test   DWORD PTR [edx],esp
  40dbbe:	daa    
  40dbbf:	xor    BYTE PTR [ebp+0x48],ch
  40dbc2:	and    al,0x25
  40dbc4:	vpsrlq ymm0,ymm3,XMMWORD PTR [eax+0x227134c3]
  40dbcc:	sbb    al,0xa5
  40dbce:	xchg   ebx,eax
  40dbcf:	xchg   esp,eax
  40dbd0:	sbb    esp,DWORD PTR [esi+0x5a]
  40dbd3:	int3   
  40dbd4:	jne    0x40dc31
  40dbd6:	push   esp
  40dbd7:	js     0x40dc30
  40dbd9:	or     al,BYTE PTR [edi+0x68]
  40dbdc:	aaa    
  40dbdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbde:	fist   DWORD PTR [edx-0x2e]
  40dbe1:	inc    ebp
  40dbe2:	push   ecx
  40dbe3:	jnp    0x40dbfa
  40dbe5:	pop    edx
  40dbe6:	xor    ah,BYTE PTR [ebx-0x5c]
  40dbe9:	pop    ds
  40dbea:	xchg   ebp,eax
  40dbeb:	cs popf 
  40dbed:	and    ebx,DWORD PTR [ebx-0x37]
  40dbf0:	lahf   
  40dbf1:	repz mov al,0xe5
  40dbf4:	cdq    
  40dbf5:	jnp    0x40dc5e
  40dbf7:	nop    DWORD PTR [edx]
  40dbfa:	xor    bh,BYTE PTR ds:0x8318f083
  40dc00:	mov    esi,0xbbe7853f
  40dc05:	ror    DWORD PTR [ebp+0x5dca82a3],0x3d
  40dc0c:	add    al,0x1c
  40dc0e:	loop   0x40dc26
  40dc10:	mov    eax,0x6deb0c0a
  40dc15:	imul   ecx,eax,0xffffffe5
  40dc18:	sar    BYTE PTR ds:0x528e3c71,0x9d
  40dc1f:	retf   
  40dc20:	pop    edi
  40dc21:	push   ebx
  40dc22:	cli    
  40dc23:	adc    bh,BYTE PTR [ecx]
  40dc25:	push   0x15
  40dc27:	adc    eax,0xbb0d71a9
  40dc2c:	or     eax,0x7d80f084
  40dc31:	das    
  40dc32:	and    al,0x85
  40dc34:	fwait
  40dc35:	mov    esi,0x547d2bb5
  40dc3a:	push   0xffffffca
  40dc3c:	jae    0x40dc12
  40dc3e:	sbb    DWORD PTR [edx+esi*4-0x4bbaac5c],esp
  40dc45:	cld    
  40dc46:	sub    BYTE PTR [eax],bh
  40dc48:	lock and dh,bh
  40dc4b:	inc    edx
  40dc4c:	adc    BYTE PTR ds:[esi-0x7a],0x4a
  40dc51:	jnp    0x40dbd9
  40dc53:	xchg   ebx,eax
  40dc54:	aad    0x4e
  40dc56:	sub    bh,dl
  40dc58:	mov    eax,ds:0xc4980bba
  40dc5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5e:	jae    0x40dc38
  40dc60:	mov    ebx,DWORD PTR [edx+0x1c]
  40dc63:	bound  edi,QWORD PTR [edx]
  40dc65:	int    0xe8
  40dc67:	cdq    
  40dc68:	das    
  40dc69:	scas   al,BYTE PTR es:[edi]
  40dc6a:	stc    
  40dc6b:	cmp    esi,DWORD PTR [ebp+0x4e]
  40dc6e:	dec    eax
  40dc6f:	sbb    al,BYTE PTR [ebx]
  40dc71:	imul   edx,DWORD PTR [edi+0x5c],0x74
  40dc75:	and    bh,BYTE PTR [eax-0x52]
  40dc78:	pusha  
  40dc79:	pop    ss
  40dc7a:	sar    BYTE PTR [eax],cl
  40dc7c:	int    0xa8
  40dc7e:	sbb    ecx,DWORD PTR [edi]
  40dc80:	and    BYTE PTR ds:0xb547582a,al
  40dc86:	ror    BYTE PTR [esi+0x12],0xe4
  40dc8a:	xchg   ch,dh
  40dc8c:	and    bh,BYTE PTR [ebx+0x155dd6f8]
  40dc92:	pop    edi
  40dc93:	push   cs
  40dc94:	bound  ebx,QWORD PTR [eax-0x136fe91b]
  40dc9a:	sar    cl,cl
  40dc9c:	test   BYTE PTR gs:[ebx+0x4c345d8e],0x47
  40dca4:	jmp    0x40dc59
  40dca6:	test   eax,0x25661d9b
  40dcab:	dec    esi
  40dcac:	pushf  
  40dcad:	dec    edi
  40dcae:	add    dl,BYTE PTR [edi-0x2c9a7853]
  40dcb4:	cmp    eax,0x6fc10c39
  40dcb9:	xor    al,al
  40dcbb:	call   0xa8003a87
  40dcc0:	mov    edi,0x12f4d317
  40dcc5:	cld    
  40dcc6:	rcr    BYTE PTR [edx-0x61f502d0],0x57
  40dccd:	or     eax,0xd4ff6c96
  40dcd2:	es push 0x5a
  40dcd5:	js     0x40dca1
  40dcd7:	mov    ebx,0x74aa266b
  40dcdc:	or     eax,0x5c3b042f
  40dce1:	ds int 0x64
  40dce4:	mov    eax,0xd509c997
  40dce9:	push   es
  40dcea:	push   ss
  40dceb:	popa   
  40dcec:	call   0x451a40f9
  40dcf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf2:	pop    esi
  40dcf3:	add    DWORD PTR [edi],esp
  40dcf5:	int    0xca
  40dcf7:	sahf   
  40dcf8:	mov    DWORD PTR [ebp+edx*1-0x1e],ecx
  40dcfc:	das    
  40dcfd:	xchg   esp,eax
  40dcfe:	jno    0x40dd16
  40dd00:	inc    ebx
  40dd01:	or     al,0xb4
  40dd03:	into   
  40dd04:	push   es
  40dd05:	faddp  st(3),st
  40dd07:	enter  0xaaf4,0x59
  40dd0b:	pop    esi
  40dd0c:	inc    esp
  40dd0d:	ds retf 
  40dd0f:	mov    esi,0xcf549a88
  40dd14:	(bad)  
  40dd15:	shl    DWORD PTR ds:[ebx],cl
  40dd18:	mov    ecx,0x8e85c66
  40dd1d:	(bad)  [eax+0x4e]
  40dd20:	(bad)
  40dd24:	and    BYTE PTR [edx],bl
  40dd26:	mov    esp,DWORD PTR [edx+edi*1-0x52679768]
  40dd2d:	jle    0x40dd9e
  40dd2f:	aas    
  40dd30:	mov    BYTE PTR [edi],dl
  40dd32:	add    dh,dh
  40dd34:	outs   dx,DWORD PTR ds:[esi]
  40dd35:	scas   eax,DWORD PTR es:[edi]
  40dd36:	js     0x40dcc4
  40dd38:	and    BYTE PTR [edx+0x4d597ad6],ch
  40dd3e:	mov    ebx,0x48ac4295
  40dd43:	into   
  40dd44:	cli    
  40dd45:	xchg   DWORD PTR [ecx],edx
  40dd47:	sbb    ch,BYTE PTR [ebp+0x7897b3d2]
  40dd4d:	pushf  
  40dd4e:	mov    edx,DWORD PTR [esi+0x1d03ae6f]
  40dd54:	sar    DWORD PTR [eax+0x44],0xff
  40dd58:	sub    DWORD PTR [edx+ebp*1-0x6c8d0ba9],0xe2c8caf3
  40dd63:	scas   al,BYTE PTR es:[edi]
  40dd64:	fwait
  40dd65:	push   eax
  40dd66:	cmp    BYTE PTR [edx-0x57423e12],cl
  40dd6c:	imul   esp,DWORD PTR [esi+ecx*8-0x67],0x4b8a3302
  40dd74:	and    dh,BYTE PTR [edx+eax*8-0x269a002c]
  40dd7b:	lahf   
  40dd7c:	test   DWORD PTR [ebx],eax
  40dd7e:	lahf   
  40dd7f:	mov    gs,eax
  40dd81:	sbb    DWORD PTR [edx+eiz*4-0x1b],ebp
  40dd85:	ins    BYTE PTR es:[edi],dx
  40dd86:	mov    dh,0xc1
  40dd88:	fisttp WORD PTR [edi]
  40dd8a:	fisub  WORD PTR [ecx+0x8]
  40dd8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd8e:	rcr    esp,1
  40dd90:	lock inc esi
  40dd92:	and    al,0x5f
  40dd94:	mov    bh,0x96
  40dd96:	sub    DWORD PTR [edi],esi
  40dd98:	mov    eax,ebx
  40dd9a:	or     ecx,ebp
  40dd9c:	loop   0x40ddde
  40dd9e:	jnp    0x40dd6e
  40dda0:	adc    bh,BYTE PTR [ebx-0x10]
  40dda3:	test   eax,0x201c8ea6
  40dda8:	je     0x40de0f
  40ddaa:	cmc    
  40ddab:	dec    ebx
  40ddac:	test   BYTE PTR [edx+0x3526b549],0x54
  40ddb3:	xchg   ah,dl
  40ddb5:	xchg   ebp,eax
  40ddb6:	xor    ah,ah
  40ddb8:	push   0x11
  40ddba:	int3   
  40ddbb:	push   ss
  40ddbc:	pusha  
  40ddbd:	adc    BYTE PTR [eax+0x5eb7c293],0x15
  40ddc4:	stos   BYTE PTR es:[edi],al
  40ddc5:	pop    edx
  40ddc6:	sub    bh,cl
  40ddc8:	in     al,0xda
  40ddca:	std    
  40ddcb:	jp     0x40ddaf
  40ddcd:	jl     0x40de3a
  40ddcf:	cwde   
  40ddd0:	and    esp,DWORD PTR [ecx+0x34531bff]
  40ddd6:	push   ds
  40ddd7:	jg     0x40ddb4
  40ddd9:	sub    eax,0x4788c362
  40ddde:	pop    eax
  40dddf:	sbb    al,al
  40dde1:	or     ecx,esp
  40dde3:	icebp  
  40dde4:	loope  0x40de19
  40dde6:	add    al,0x30
  40dde8:	dec    eax
  40dde9:	fstp   TBYTE PTR [edi+0xf]
  40ddec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dded:	xor    ecx,DWORD PTR [esi+edi*4]
  40ddf0:	jb     0x40de45
  40ddf2:	imul   edi,DWORD PTR [edi-0x560eb401],0xfffffff2
  40ddf9:	mov    WORD PTR [ebp+0x45],gs
  40ddfc:	inc    esp
  40ddfd:	jno    0x40dd7f
  40ddff:	add    al,0xd3
  40de01:	mov    ds:0xcfdd8de6,eax
  40de06:	push   cs
  40de07:	js     0x40ddbe
  40de09:	(bad)  
  40de0a:	jmp    0x40de54
  40de0c:	dec    ebx
  40de0d:	lods   al,BYTE PTR ds:[esi]
  40de0e:	mov    dh,0xbd
  40de10:	xor    DWORD PTR [ebp+0x46271e68],ebp
  40de16:	inc    ebx
  40de17:	xor    BYTE PTR [ecx+0x4c7671f4],dh
  40de1d:	fcom   QWORD PTR [ecx-0x22]
  40de20:	cdq    
  40de21:	fisub  WORD PTR [ebp-0xc8722b9]
  40de27:	cmp    bl,BYTE PTR [ebp+0x5b60530e]
  40de2d:	pop    eax
  40de2e:	stos   BYTE PTR es:[edi],al
  40de2f:	fsub   QWORD PTR [ebx+edi*1-0x4df058c3]
  40de36:	add    DWORD PTR [eax-0x7efbb439],edx
  40de3c:	adc    cl,BYTE PTR [esi]
  40de3e:	shl    DWORD PTR [edi+0x545e6fac],cl
  40de44:	xchg   ecx,eax
  40de45:	nop
  40de46:	adc    BYTE PTR [esi-0x6180554d],dh
  40de4c:	or     eax,0x106b16e0
  40de51:	lods   eax,DWORD PTR ds:[esi]
  40de52:	add    BYTE PTR [eax-0x46],dh
  40de55:	push   0xffffffce
  40de57:	adc    WORD PTR [eax-0x3d4e9f1c],di
  40de5e:	(bad)  
  40de5f:	jbe    0x40deb2
  40de61:	cli    
  40de62:	and    ecx,DWORD PTR [ecx-0x6b]
  40de65:	aam    0xa1
  40de67:	cmp    dh,bl
  40de69:	je     0x40de28
  40de6b:	popa   
  40de6c:	repz pop edi
  40de6e:	loopne 0x40de82
  40de70:	mov    ds:0x58237b51,eax
  40de75:	cmp    bh,cl
  40de77:	loope  0x40de43
  40de79:	cmp    eax,0x90c27055
  40de7e:	pop    ss
  40de7f:	daa    
  40de80:	mov    dl,BYTE PTR [edi]
  40de82:	jmp    0x5c06a300
  40de87:	shl    DWORD PTR [bp+si],0x3a
  40de8b:	xchg   DWORD PTR [edi*2-0xd4b5942],eax
  40de92:	xchg   ecx,eax
  40de93:	dec    esp
  40de94:	in     eax,dx
  40de95:	and    dl,BYTE PTR [edx-0x516faf6d]
  40de9b:	cmp    al,0x51
  40de9d:	ret    0x3f79
  40dea0:	and    dh,BYTE PTR [ebx]
  40dea2:	push   esp
  40dea3:	mov    al,ds:0xa95b1492
  40dea8:	or     al,0x65
  40deaa:	push   ebp
  40deab:	outs   dx,BYTE PTR ds:[esi]
  40deac:	loop   0x40de5d
  40deae:	ins    BYTE PTR es:[edi],dx
  40deaf:	es inc edi
  40deb1:	xor    DWORD PTR [ebp+0x71984cc6],edi
  40deb7:	addr16 add cl,0x3d
  40debb:	je     0x40df17
  40debd:	clc    
  40debe:	push   edi
  40debf:	jb     0x40de5c
  40dec1:	dec    eax
  40dec2:	sub    eax,0xf7b25b25
  40dec7:	pop    ds
  40dec8:	ficomp DWORD PTR [esi-0x1f]
  40decb:	aas    
  40decc:	xor    eax,edi
  40dece:	cmp    DWORD PTR [ecx],ecx
  40ded0:	out    0x7c,eax
  40ded2:	mov    edx,0x9d77c7ed
  40ded7:	jmp    0xe8:0x89e595ef
  40dede:	push   edi
  40dedf:	lock in eax,0xfb
  40dee2:	add    DWORD PTR [edx+eiz*2+0x7a],edx
  40dee6:	in     eax,0x32
  40dee8:	aaa    
  40dee9:	and    dl,dl
  40deeb:	dec    ebx
  40deec:	push   esi
  40deed:	fstp   QWORD PTR [edx]
  40deef:	stos   BYTE PTR es:[edi],al
  40def0:	adc    cl,dl
  40def2:	lods   al,BYTE PTR ds:[esi]
  40def3:	ds inc ecx
  40def5:	pop    ds
  40def6:	fmulp  st(0),st
  40def8:	add    esi,DWORD PTR [ebp-0x2e]
  40defb:	cmc    
  40defc:	pop    es
  40defd:	scas   al,BYTE PTR es:[edi]
  40defe:	mov    bl,0x33
  40df00:	pop    esi
  40df01:	ret    
  40df02:	xchg   ebx,eax
  40df03:	add    bl,0x8c
  40df06:	test   eax,0x476c4717
  40df0b:	mov    ds:0xebc47a6,eax
  40df10:	popf   
  40df11:	or     DWORD PTR [eax],esi
  40df13:	(bad)  
  40df14:	in     eax,0x89
  40df16:	dec    ebx
  40df17:	xchg   edx,eax
  40df18:	add    eax,0x86a92f97
  40df1d:	fstp   TBYTE PTR [esi]
  40df1f:	out    dx,al
  40df20:	jp     0x40debb
  40df22:	stos   BYTE PTR es:[edi],al
  40df23:	mov    ds:0x1c096e1a,al
  40df28:	addr16 (bad) 
  40df2a:	mov    edi,eax
  40df2c:	pop    ds
  40df2d:	adc    ebx,DWORD PTR ds:[ebp-0x16]
  40df31:	xchg   esp,eax
  40df32:	mov    WORD PTR [esp+esi*8-0x90891dd],ds
  40df39:	xchg   esp,eax
  40df3a:	sti    
  40df3b:	mov    BYTE PTR [ecx],ch
  40df3d:	sbb    DWORD PTR [eax-0x52],ebx
  40df40:	pop    ds
  40df41:	daa    
  40df42:	outs   dx,BYTE PTR ds:[esi]
  40df43:	add    bh,dh
  40df45:	test   esi,esp
  40df47:	and    DWORD PTR [edi-0x4a934a3a],0x4f
  40df4e:	sub    BYTE PTR [esi],dl
  40df50:	sbb    al,0x4c
  40df52:	sub    esi,DWORD PTR [esp+esi*1]
  40df55:	sub    DWORD PTR [ebx+ecx*2-0x7d],ecx
  40df59:	jl     0x40dfda
  40df5b:	xchg   ecx,eax
  40df5c:	mov    cl,0x37
  40df5e:	inc    ebp
  40df5f:	jmp    0x40dfc7
  40df61:	sub    eax,0x61e80331
  40df66:	cs jecxz 0x40df87
  40df69:	test   DWORD PTR [ecx-0xd2b37cd],edx
  40df6f:	jle    0x40df7d
  40df71:	int    0x77
  40df73:	adc    DWORD PTR [eax+0x3ea022a0],eax
  40df79:	adc    al,0x61
  40df7b:	arpl   WORD PTR [ecx],di
  40df7d:	outs   dx,BYTE PTR ds:[esi]
  40df7e:	in     al,dx
  40df7f:	popa   
  40df80:	repnz outs dx,DWORD PTR ds:[esi]
  40df82:	sbb    DWORD PTR [edi+edx*4],0x6204a79f
  40df89:	pop    eax
  40df8a:	stos   BYTE PTR es:[edi],al
  40df8b:	aas    
  40df8c:	mov    bl,0xb2
  40df8e:	jecxz  0x40dfe5
  40df90:	mov    edx,DWORD PTR [edx+0x34]
  40df93:	stos   BYTE PTR es:[edi],al
  40df94:	dec    ebp
  40df95:	retf   
  40df96:	push   eax
  40df97:	fild   QWORD PTR [ecx]
  40df99:	icebp  
  40df9a:	xor    BYTE PTR [edx-0x7e50d695],dh
  40dfa0:	dec    eax
  40dfa1:	adc    bl,BYTE PTR [esi]
  40dfa3:	mov    eax,DWORD PTR [ebp-0x20]
  40dfa6:	popf   
  40dfa7:	jo     0x40dfbb
  40dfa9:	add    DWORD PTR [esi+0x69],ebp
  40dfac:	pop    esi
  40dfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfae:	ds out 0x2d,eax
  40dfb1:	jg     0x40df63
  40dfb3:	push   ds
  40dfb4:	(bad)  
  40dfb5:	xor    BYTE PTR ds:[ebx-0x7],al
  40dfb9:	adc    al,0x26
  40dfbb:	mov    ds:0x3c9dcbdc,al
  40dfc0:	adc    esp,DWORD PTR ds:0x2ea035c
  40dfc6:	inc    ebp
  40dfc7:	or     ebp,esi
  40dfc9:	(bad)  
  40dfca:	adc    al,0xe9
  40dfcc:	test   eax,0x2b1bbce9
  40dfd1:	mov    ebx,edi
  40dfd3:	dec    ebp
  40dfd4:	jnp    0x40e001
  40dfd6:	push   edx
  40dfd7:	mov    DWORD PTR [eax+eax*4-0x20064b6f],edi
  40dfde:	mov    edi,0x37e7c1c6
  40dfe3:	int    0x22
  40dfe5:	into   
  40dfe6:	das    
  40dfe7:	mov    al,ds:0x6073e441
  40dfec:	push   ecx
  40dfed:	int    0x4d
  40dfef:	or     eax,0x10c36fc2
  40dff4:	sbb    ah,BYTE PTR [edx+ebp*1+0x57]
  40dff8:	mov    edx,0xaa0764e3
  40dffd:	test   al,0xf1
  40dfff:	sub    DWORD PTR [ecx+0x31],esp
  40e002:	ds repnz dec ecx
  40e005:	fst    DWORD PTR [esi]
  40e007:	leave  
  40e008:	(bad)  
  40e009:	push   ebx
  40e00a:	jae    0x40e071
  40e00c:	std    
  40e00d:	mov    esi,0x81e0d891
  40e012:	loope  0x40e06b
  40e014:	test   al,0x16
  40e016:	jl     0x40e01c
  40e018:	(bad)  
  40e019:	mov    dh,0x82
  40e01b:	cs cli 
  40e01d:	scas   eax,DWORD PTR es:[edi]
  40e01e:	dec    eax
  40e01f:	push   0xffffffbc
  40e021:	ror    DWORD PTR [ecx+0x2e8fb3bb],0x5d
  40e028:	mov    ds:0x2200f36a,al
  40e02d:	popa   
  40e02e:	mov    ah,0xa2
  40e030:	pop    edi
  40e031:	xor    al,0x4c
  40e033:	test   BYTE PTR [esp+eiz*8],dh
  40e036:	ror    BYTE PTR [edx+edi*4],1
  40e039:	cmp    BYTE PTR [edx+0x7f],bh
  40e03c:	push   ecx
  40e03d:	jp     0x40e099
  40e03f:	outs   dx,BYTE PTR ds:[esi]
  40e040:	in     al,dx
  40e041:	xor    BYTE PTR [eax+eiz*2+0x1c3e4701],0x9b
  40e049:	ins    BYTE PTR es:[edi],dx
  40e04a:	fsubr  QWORD PTR [esi]
  40e04c:	lock adc eax,0xd6d44643
  40e052:	dec    esp
  40e053:	inc    ebx
  40e054:	inc    edx
  40e055:	push   eax
  40e056:	hlt    
  40e057:	xor    eax,0xa0948a8b
  40e05c:	(bad)  [ecx]
  40e05e:	fwait
  40e05f:	mov    gs,edi
  40e061:	mov    esp,0xe721911b
  40e066:	gs push edx
  40e068:	dec    edi
  40e069:	fidiv  WORD PTR [esi+0x2e515de]
  40e06f:	sub    al,0xeb
  40e071:	push   edx
  40e072:	popf   
  40e073:	(bad)  [edx+0x6a84aff6]
  40e079:	add    cl,ch
  40e07b:	bound  ebp,QWORD PTR [ecx-0x14]
  40e07e:	in     eax,dx
  40e07f:	mov    ecx,0x2de8df29
  40e084:	push   esi
  40e085:	in     al,dx
  40e086:	xchg   DWORD PTR [esi],edi
  40e088:	cmc    
  40e089:	popa   
  40e08a:	xor    BYTE PTR ds:0x20dbc800,bh
  40e090:	or     al,0xeb
  40e092:	jae    0x40e111
  40e094:	push   eax
  40e095:	into   
  40e096:	sbb    BYTE PTR [eax],al
  40e098:	std    
  40e099:	jns    0x40e030
  40e09b:	push   cs
  40e09c:	push   0x47926265
  40e0a1:	loopne 0x40e03b
  40e0a3:	mov    al,ds:0x9edea0da
  40e0a8:	call   0xd2ce:0x513d6e6
  40e0af:	sbb    ebx,DWORD PTR [eax+0x58436936]
  40e0b5:	repz or al,0xa6
  40e0b8:	adc    BYTE PTR [eax+eax*2],ch
  40e0bb:	adc    dh,ah
  40e0bd:	shl    DWORD PTR [esi+0x58653b50],0x3c
  40e0c4:	jae    0x40e0c1
  40e0c6:	push   0xffffffaf
  40e0c8:	std    
  40e0c9:	or     al,BYTE PTR [ebx]
  40e0cb:	shr    DWORD PTR [eax],cl
  40e0cd:	adc    eax,0xbb615d9c
  40e0d2:	repz mov dh,0x18
  40e0d5:	je     0x40e099
  40e0d7:	clc    
  40e0d8:	in     al,dx
  40e0d9:	ds repnz or al,0x11
  40e0dd:	jns    0x40e0d1
  40e0df:	fild   QWORD PTR [eax+0x6afa6c8f]
  40e0e5:	aad    0xec
  40e0e7:	loopne 0x40e157
  40e0e9:	push   0xb867e081
  40e0ee:	or     dl,dl
  40e0f0:	shl    DWORD PTR [ebp+0x6],1
  40e0f3:	jne    0x40e105
  40e0f5:	push   ecx
  40e0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0f7:	pop    edi
  40e0f8:	fsub   st,st(1)
  40e0fa:	inc    edx
  40e0fb:	ins    BYTE PTR es:[edi],dx
  40e0fc:	fisub  DWORD PTR [esi-0x53c3d6d6]
  40e102:	xchg   ecx,eax
  40e103:	icebp  
  40e104:	adc    al,0x67
  40e106:	fbld   TBYTE PTR [ebx-0x61cbc916]
  40e10c:	repnz test eax,0x82e569f3
  40e112:	das    
  40e113:	push   ds
  40e114:	cmc    
  40e115:	in     eax,0x0
  40e117:	test   BYTE PTR [eax+edx*4],cl
  40e11a:	jmp    0x467d:0x96e36f61
  40e121:	lahf   
  40e122:	fldcw  WORD PTR [ebp-0x61]
  40e125:	xchg   DWORD PTR [edi],ecx
  40e127:	xchg   DWORD PTR [edx],ebx
  40e129:	popf   
  40e12a:	shl    BYTE PTR [edx-0x6ec7d1e],0xe
  40e131:	idiv   DWORD PTR [edi+0x50]
  40e134:	mov    eax,0xcac1ba63
  40e139:	sbb    dl,BYTE PTR [ebx-0x4]
  40e13c:	es in  eax,dx
  40e13e:	add    ecx,DWORD PTR [edx+0x4c1f8c37]
  40e144:	mov    bl,0x81
  40e146:	out    0x92,eax
  40e148:	call   0x18bb:0xb008f432
  40e14f:	dec    DWORD PTR [ebx+0x75388b80]
  40e155:	cdq    
  40e156:	jg     0x40e1b9
  40e158:	sbb    bl,dl
  40e15a:	push   ss
  40e15b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e15c:	xor    bh,dl
  40e15e:	xchg   BYTE PTR [ebx-0x427cdf21],cl
  40e164:	jnp    0x40e171
  40e166:	mov    WORD PTR [ebx+0x19],gs
  40e169:	call   0x1c1cc8d3
  40e16e:	xor    dl,BYTE PTR [edi]
  40e170:	inc    esi
  40e171:	loop   0x40e17e
  40e173:	jp     0x40e109
  40e175:	push   edx
  40e176:	fld    QWORD PTR [edi-0x2]
  40e179:	call   0x8456:0x8576800a
  40e180:	or     ebx,ebp
  40e182:	push   ebx
  40e183:	mul    BYTE PTR [esi+eax*1]
  40e186:	push   es
  40e187:	cmc    
  40e188:	adc    bl,BYTE PTR [edi-0x80]
  40e18b:	pop    edi
  40e18c:	inc    eax
  40e18d:	mov    dl,0x0
  40e18f:	dec    esi
  40e190:	add    BYTE PTR [eax-0x7],0x95
  40e194:	xor    dl,ch
  40e196:	add    ecx,0x185e2466
  40e19c:	fdivr  QWORD PTR [eax+edi*8]
  40e19f:	and    bl,BYTE PTR [edi]
  40e1a1:	repnz sbb al,0x91
  40e1a4:	pop    eax
  40e1a5:	call   FWORD PTR [ecx+ebx*8]
  40e1a8:	inc    ecx
  40e1a9:	push   es
  40e1aa:	and    bh,BYTE PTR [esp+eax*2-0x3e2f417b]
  40e1b1:	mov    esi,0x53628f76
  40e1b6:	add    DWORD PTR [esi],ebp
  40e1b8:	jae    0x40e1ff
  40e1ba:	fsubr  st,st(2)
  40e1bc:	push   esi
  40e1bd:	pop    edx
  40e1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bf:	aas    
  40e1c0:	jg     0x40e17c
  40e1c2:	cmp    BYTE PTR [eax+0x6],ch
  40e1c5:	pushf  
  40e1c6:	add    esp,DWORD PTR [edx+0x3a]
  40e1c9:	jns    0x40e220
  40e1cb:	pop    esp
  40e1cc:	xchg   esi,eax
  40e1cd:	rcr    DWORD PTR [ecx],1
  40e1cf:	into   
  40e1d0:	mov    al,es:0x138417ca
  40e1d6:	jnp    0x40e168
  40e1d8:	lods   al,BYTE PTR ds:[esi]
  40e1d9:	or     ebp,DWORD PTR [edi]
  40e1db:	dec    ebp
  40e1dc:	lea    ebx,[ebx+eiz*8-0x8]
  40e1e0:	sbb    BYTE PTR [ebx],0xe3
  40e1e3:	imul   eax,DWORD PTR [ebp-0x46],0xffffffe1
  40e1e7:	rcr    BYTE PTR [eax-0x33],1
  40e1ea:	cmp    eax,DWORD PTR [edi+eax*1+0x6e]
  40e1ee:	dec    edx
  40e1ef:	cmp    DWORD PTR [edi],ebp
  40e1f1:	xor    cl,ah
  40e1f3:	add    DWORD PTR [ecx-0x6d],ebp
  40e1f6:	dec    esp
  40e1f7:	jmp    0x40e1dd
  40e1f9:	pop    esp
  40e1fa:	popa   
  40e1fb:	iret   
  40e1fc:	ficom  DWORD PTR [ecx+eax*8]
  40e1ff:	sbb    bl,BYTE PTR [esi-0x2339ce4]
  40e205:	dec    edx
  40e206:	int    0xc0
  40e208:	push   esi
  40e209:	fcmove st,st(4)
  40e20b:	gs aas 
  40e20d:	inc    ebp
  40e20e:	fild   WORD PTR [esi]
  40e210:	ret    0x3337
  40e213:	data16 mov BYTE PTR [ecx],bl
  40e216:	jge    0x40e1a2
  40e218:	mov    BYTE PTR [eax+0x6c],ah
  40e21b:	(bad)  
  40e21c:	idiv   BYTE PTR [esi]
  40e21e:	add    cl,BYTE PTR ds:0x76a189da
  40e224:	arpl   WORD PTR [ecx+0x554cc57e],ax
  40e22a:	in     eax,0x61
  40e22c:	sbb    al,0x79
  40e22e:	not    ebp
  40e230:	xchg   DWORD PTR [ebp+0x7c],ebx
  40e233:	xor    ah,BYTE PTR [ecx+0x4b]
  40e236:	jo     0x40e255
  40e238:	sbb    eax,esi
  40e23a:	iret   
  40e23b:	dec    ebx
  40e23c:	loopne 0x40e265
  40e23e:	sub    ah,BYTE PTR [eax+0x2d]
  40e241:	xchg   BYTE PTR [ecx+0x16736ca7],bl
  40e247:	(bad)  
  40e248:	mov    edi,0x5cae25
  40e24d:	jl     0x40e25e
  40e24f:	fwait
  40e250:	popf   
  40e251:	push   ecx
  40e252:	pop    esi
  40e253:	imul   ebx,DWORD PTR [edx],0xb72cc850
  40e259:	mov    ch,0x9e
  40e25b:	shr    BYTE PTR [edi],cl
  40e25d:	adc    dl,bh
  40e25f:	test   BYTE PTR [ecx+0x20],cl
  40e262:	popf   
  40e263:	addr16 (bad) 
  40e265:	jno    0x40e27b
  40e267:	aad    0x56
  40e269:	ss into 
  40e26b:	sub    ecx,ecx
  40e26d:	xchg   edi,eax
  40e26e:	int    0x52
  40e270:	leave  
  40e271:	sbb    al,0xa1
  40e273:	mov    ds:0x198a55cb,al
  40e278:	xchg   esp,eax
  40e279:	adc    edx,DWORD PTR [ebp+ebx*1+0x38e9c339]
  40e280:	mov    ebx,0x3870d414
  40e285:	lea    eax,[edi-0x101477a0]
  40e28b:	dec    eax
  40e28c:	sub    eax,0xb9293022
  40e291:	mov    WORD PTR [ebx],es
  40e293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e294:	into   
  40e295:	sbb    DWORD PTR [edi-0x24a848a6],edi
  40e29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29c:	inc    edx
  40e29d:	dec    edx
  40e29e:	inc    ecx
  40e29f:	outs   dx,DWORD PTR ds:[esi]
  40e2a0:	lock mov esp,ds
  40e2a3:	cmp    DWORD PTR [eax+ecx*8-0x53092ed6],ebx
  40e2aa:	xor    BYTE PTR [edx+0x79],dl
  40e2ad:	xor    cl,BYTE PTR [ebx]
  40e2af:	push   es
  40e2b0:	inc    esp
  40e2b1:	or     bl,bh
  40e2b3:	mov    edi,edi
  40e2b5:	or     DWORD PTR [ebx+0x10],ecx
  40e2b8:	cmp    al,0x57
  40e2ba:	jecxz  0x40e326
  40e2bc:	sti    
  40e2bd:	cmp    ebp,DWORD PTR [eax+0x30]
  40e2c0:	fst    st(3)
  40e2c2:	divps  xmm5,XMMWORD PTR [ecx+edi*4+0x546b3a28]
  40e2ca:	in     eax,0x4f
  40e2cc:	mov    edx,0xc2b7af3c
  40e2d1:	mul    DWORD PTR [edi+0x241c2164]
  40e2d7:	and    BYTE PTR [ecx+0xc8076da],dh
  40e2dd:	pop    ds
  40e2de:	in     eax,0x51
  40e2e0:	in     eax,dx
  40e2e1:	mov    dl,0xd8
  40e2e3:	mov    esi,0x5ba70b
  40e2e8:	add    al,0x8c
  40e2ea:	dec    ebx
  40e2eb:	popf   
  40e2ec:	lock mov ebx,0x29f49914
  40e2f2:	shl    esp,0x3a
  40e2f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2f6:	jae    0x40e34d
  40e2f8:	jae    0x40e2fb
  40e2fa:	push   ebp
  40e2fb:	cmp    ebx,edx
  40e2fd:	addr16 push es
  40e2ff:	inc    edi
  40e300:	add    dh,BYTE PTR [edx]
  40e302:	mov    cs,WORD PTR [ebp+0xd]
  40e305:	mov    ch,0x76
  40e307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e308:	mov    gs,WORD PTR [ecx]
  40e30a:	xor    al,0xa2
  40e30c:	fbld   TBYTE PTR [esi]
  40e30e:	pop    es
  40e30f:	push   0xf084206
  40e314:	dec    esi
  40e315:	pop    ebx
  40e316:	xchg   cl,cl
  40e318:	cmp    BYTE PTR [ecx-0x1e],0x92
  40e31c:	push   edi
  40e31d:	in     al,dx
  40e31e:	xor    al,0xbb
  40e320:	popf   
  40e321:	pop    esp
  40e322:	mov    ch,BYTE PTR [ebp+eiz*1+0x73ced67e]
  40e329:	aam    0x4b
  40e32b:	pushf  
  40e32c:	aas    
  40e32d:	add    edi,DWORD PTR ds:[ebx-0x3b]
  40e331:	jle    0x40e31d
  40e333:	lods   eax,DWORD PTR ds:[esi]
  40e334:	addr16 mov ds:0xed72,eax
  40e338:	cmp    al,0xd6
  40e33a:	mov    DWORD PTR [ebx],esi
  40e33c:	cmp    DWORD PTR [edi+0x6f],edi
  40e33f:	je     0x40e313
  40e341:	(bad)  
  40e342:	fild   WORD PTR [edi]
  40e344:	xchg   edx,eax
  40e345:	mov    bh,cl
  40e347:	cmp    al,0x12
  40e349:	cwde   
  40e34a:	add    BYTE PTR [edi-0x57724a33],al
  40e350:	out    0x98,al
  40e352:	fdiv   QWORD PTR [ecx-0x65]
  40e355:	pop    esp
  40e356:	mov    al,ds:0x850ae43d
  40e35b:	aas    
  40e35c:	add    BYTE PTR [ebx+0x4a],bh
  40e35f:	test   DWORD PTR [edi-0x30],edi
  40e362:	int    0xf5
  40e364:	out    0xaa,eax
  40e366:	(bad)  
  40e367:	mov    eax,0x5c92fe3c
  40e36c:	(bad)  
  40e36d:	mov    bh,0x78
  40e36f:	enter  0x99a0,0xa0
  40e373:	cmp    DWORD PTR [esi-0x25576c96],ebp
  40e379:	sbb    ebx,DWORD PTR [eax+0x6c87c1e6]
  40e37f:	pusha  
  40e380:	lea    ebp,[eax-0x52]
  40e383:	xor    BYTE PTR [ebp-0x4b4b688d],al
  40e389:	(bad)  
  40e38a:	cli    
  40e38b:	out    dx,eax
  40e38c:	shl    DWORD PTR [ebp+0x78197eb8],0xb6
  40e393:	outs   dx,BYTE PTR ds:[esi]
  40e394:	shl    BYTE PTR [edi-0x5c],1
  40e397:	adc    dl,BYTE PTR [esp+edx*8-0x11]
  40e39b:	test   DWORD PTR [ebx-0x4df12615],edx
  40e3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3a2:	jbe    0x40e336
  40e3a4:	bound  si,DWORD PTR [ecx]
  40e3a7:	cmp    esi,DWORD PTR ss:[edx]
  40e3aa:	sub    edx,DWORD PTR [esi+0x5d2767c8]
  40e3b0:	jmp    0x40e415
  40e3b2:	dec    ebp
  40e3b3:	mov    ds:0x9b7ab98,eax
  40e3b8:	dec    esp
  40e3b9:	mov    esi,0x9cd8a344
  40e3be:	mov    esp,0x539de5ea
  40e3c3:	adc    DWORD PTR [esi+ecx*2+0x4c],0xffffffa0
  40e3c8:	ret    
  40e3c9:	push   ebx
  40e3ca:	retf   0x1657
  40e3cd:	jbe    0x40e400
  40e3cf:	mov    edx,DWORD PTR [ecx+0x669e7b2b]
  40e3d5:	(bad)  
  40e3d6:	fdiv   QWORD PTR [eax+0x4124751c]
  40e3dc:	add    eax,0xfe4ec696
  40e3e1:	sub    eax,0xc1f9ec8b
  40e3e6:	outs   dx,DWORD PTR ds:[esi]
  40e3e7:	stc    
  40e3e8:	pop    eax
  40e3e9:	push   esi
  40e3ea:	sbb    BYTE PTR [ecx+0x70],ah
  40e3ed:	mov    esp,DWORD PTR [ebp+0x1f]
  40e3f0:	lahf   
  40e3f1:	ds push ebp
  40e3f3:	repz into 
  40e3f5:	rol    BYTE PTR [ecx+0x5d],1
  40e3f8:	ret    
  40e3f9:	shl    DWORD PTR [ebp-0x24],0xe6
  40e3fd:	ds leave 
  40e3ff:	cdq    
  40e400:	rcr    BYTE PTR ds:0x517c42d8,0x2f
  40e407:	dec    ebx
  40e408:	adc    DWORD PTR [ecx+0x15aa3b32],ebx
  40e40e:	dec    ebp
  40e40f:	dec    esp
  40e410:	jecxz  0x40e472
  40e412:	ins    DWORD PTR es:[edi],dx
  40e413:	imul   eax,DWORD PTR [edx+0x8594031],0xffffffa8
  40e41a:	fstp   TBYTE PTR [eax+0x2c]
  40e41d:	pop    eax
  40e41e:	in     al,dx
  40e41f:	fild   DWORD PTR [ebp-0x7edd2df7]
  40e425:	add    DWORD PTR [edx],edx
  40e427:	or     DWORD PTR [ebp+0x32034962],ebx
  40e42d:	addr16 mov ah,0xa1
  40e430:	pop    ebp
  40e431:	fadd   DWORD PTR [ebx-0x7c04c061]
  40e437:	(bad)  
  40e438:	fisub  DWORD PTR [edi]
  40e43a:	pop    ebx
  40e43b:	retf   0x4195
  40e43e:	mov    BYTE PTR [ebp-0x67],dl
  40e441:	sahf   
  40e442:	ffreep st(1)
  40e444:	sub    al,0xa4
  40e446:	and    esi,DWORD PTR [ebx]
  40e448:	mov    edx,0xad1c6826
  40e44d:	call   0x2a5a3964
  40e452:	lock das 
  40e454:	out    dx,al
  40e455:	adc    BYTE PTR [edx-0x4f],ah
  40e458:	push   ebx
  40e459:	fistp  DWORD PTR ds:0x3902e133
  40e45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e460:	les    ebp,FWORD PTR [eax]
  40e462:	xchg   edx,eax
  40e463:	add    ch,al
  40e465:	and    edx,DWORD PTR [edx+ebx*4+0x584654b5]
  40e46c:	mov    cl,BYTE PTR [edx]
  40e46e:	adc    DWORD PTR gs:[ebx-0x3b],edi
  40e472:	mov    ds:0x4561c9e3,eax
  40e477:	cmp    al,0xe
  40e479:	jne    0x40e4de
  40e47b:	add    ch,al
  40e47d:	es jle 0x40e46b
  40e480:	mov    bh,0x95
  40e482:	push   ss
  40e483:	sbb    BYTE PTR [edi-0x6d],al
  40e486:	dec    eax
  40e487:	pusha  
  40e488:	sub    eax,0xacdca5b4
  40e48d:	fld    QWORD PTR [ebp+0x10]
  40e490:	dec    esp
  40e491:	ret    0xa122
  40e494:	daa    
  40e495:	sahf   
  40e496:	add    BYTE PTR [ecx-0x79bfa9be],cl
  40e49c:	mov    bl,BYTE PTR [esp+ecx*8+0x5d]
  40e4a0:	sbb    esi,DWORD PTR [edx+0x25]
  40e4a3:	jnp    0x40e4b6
  40e4a5:	pop    es
  40e4a6:	push   ebp
  40e4a7:	dec    ecx
  40e4a8:	aaa    
  40e4a9:	retf   0x4a0d
  40e4ac:	jl     0x40e514
  40e4ae:	mov    ah,0x22
  40e4b0:	pop    ss
  40e4b1:	mov    bh,0x29
  40e4b3:	mov    BYTE PTR [eax+edx*1-0x55],0xaa
  40e4b8:	pop    esp
  40e4b9:	lds    edi,FWORD PTR [eax-0x5eb87285]
  40e4bf:	sub    ecx,DWORD PTR [esi]
  40e4c1:	ds into 
  40e4c3:	ror    DWORD PTR [ecx],1
  40e4c5:	mov    bl,0xf8
  40e4c7:	les    ecx,FWORD PTR [edx-0x2a]
  40e4ca:	mov    ah,0x52
  40e4cc:	cmp    bl,BYTE PTR [edx]
  40e4ce:	push   ecx
  40e4cf:	jg     0x40e451
  40e4d1:	lar    esp,WORD PTR [ecx+0x1899d74f]
  40e4d8:	loope  0x40e546
  40e4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4db:	sbb    ah,BYTE PTR [edi]
  40e4dd:	add    ch,dl
  40e4df:	pop    ebx
  40e4e0:	jmp    0x40e525
  40e4e2:	test   al,0xb5
  40e4e4:	lds    eax,FWORD PTR [ecx-0x2ee8d551]
  40e4ea:	and    eax,0xa98c3486
  40e4ef:	push   0xb74e5dce
  40e4f4:	or     eax,0x5c5f6b19
  40e4f9:	daa    
  40e4fa:	repnz outs dx,DWORD PTR ds:[esi]
  40e4fc:	dec    edi
  40e4fd:	rcr    dh,0xe6
  40e500:	in     eax,dx
  40e501:	std    
  40e502:	loope  0x40e50d
  40e504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e505:	pusha  
  40e506:	lock into 
  40e508:	pop    edi
  40e509:	jge    0x40e56c
  40e50b:	sbb    esi,DWORD PTR [eax-0x4e76996d]
  40e511:	cmp    bl,BYTE PTR [ebp+0x62ece6c4]
  40e517:	dec    ecx
  40e518:	scas   al,BYTE PTR es:[edi]
  40e519:	mov    ds:0xac1685be,eax
  40e51e:	ds inc edx
  40e520:	ret    
  40e521:	inc    esi
  40e522:	xor    eax,0xba066ada
  40e527:	jb     0x40e587
  40e529:	inc    ah
  40e52b:	and    al,al
  40e52d:	jb     0x40e5a7
  40e52f:	shl    BYTE PTR [ebx+0x312a966c],1
  40e535:	add    DWORD PTR [ebx+eiz*1],esi
  40e538:	adc    al,0xa8
  40e53a:	mul    DWORD PTR [ebx]
  40e53c:	test   DWORD PTR [ecx],esi
  40e53e:	mov    edi,0x984fc008
  40e543:	stos   DWORD PTR es:[edi],eax
  40e544:	and    BYTE PTR [esi+0x5a],bh
  40e547:	popa   
  40e548:	cwde   
  40e549:	cmp    BYTE PTR [ebx],ch
  40e54b:	cld    
  40e54c:	sbb    edx,eax
  40e54e:	stos   BYTE PTR es:[edi],al
  40e54f:	test   eax,0x7f2250f5
  40e554:	jo     0x40e56d
  40e556:	cwde   
  40e557:	jmp    0x5716:0x4d27cee1
  40e55e:	push   ebx
  40e55f:	cmp    DWORD PTR [ebp-0x7e0c8185],ecx
  40e565:	iret   
  40e566:	jmp    0x40e598
  40e568:	mov    cl,0x9f
  40e56a:	push   edx
  40e56b:	(bad)  
  40e56c:	pop    ss
  40e56d:	retf   0x77da
  40e570:	push   ebx
  40e571:	add    ebp,ebp
  40e573:	fcomp  QWORD PTR [edx+0x0]
  40e576:	outs   dx,BYTE PTR ds:[esi]
  40e577:	aaa    
  40e578:	cmp    ebx,DWORD PTR [esi-0x4646d821]
  40e57e:	xchg   DWORD PTR [ecx],ebx
  40e580:	in     eax,0x48
  40e582:	cmp    BYTE PTR fs:[ecx+0x78],bl
  40e586:	fistp  DWORD PTR [ecx-0x170813db]
  40e58c:	imul   cl
  40e58e:	xchg   ebx,eax
  40e58f:	rcr    DWORD PTR [ecx+0x5b51bae6],1
  40e595:	das    
  40e596:	and    ecx,ebp
  40e598:	sub    eax,ecx
  40e59a:	enter  0x4dda,0x81
  40e59e:	dec    edi
  40e59f:	(bad)  
  40e5a0:	les    ecx,FWORD PTR [ebx+edi*4]
  40e5a3:	mov    esp,ss
  40e5a5:	js     0x40e5e0
  40e5a7:	mul    DWORD PTR [ebp-0x7f1cb6d4]
  40e5ad:	push   ebp
  40e5ae:	mul    DWORD PTR [eax]
  40e5b0:	push   ebx
  40e5b1:	cmp    BYTE PTR [esi-0x27d57b0e],bh
  40e5b7:	push   ss
  40e5b8:	push   0x5e
  40e5ba:	pop    esi
  40e5bb:	push   eax
  40e5bc:	int3   
  40e5bd:	adc    al,0x6e
  40e5bf:	push   es
  40e5c0:	inc    ebx
  40e5c1:	add    edx,edx
  40e5c3:	xlat   BYTE PTR ds:[ebx]
  40e5c4:	cmp    edx,esp
  40e5c6:	pop    edx
  40e5c7:	mov    esi,0x5440a09d
  40e5cc:	aam    0xaf
  40e5ce:	dec    eax
  40e5cf:	daa    
  40e5d0:	dec    esi
  40e5d1:	mov    dh,0x35
  40e5d3:	test   al,0x87
  40e5d5:	xor    edx,DWORD PTR [ecx+0x6c018366]
  40e5db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5dc:	out    0x22,eax
  40e5de:	cmp    al,0x53
  40e5e0:	jbe    0x40e646
  40e5e2:	mov    ds:0x53ee3e28,eax
  40e5e7:	call   0xc32857d8
  40e5ec:	mov    dh,0x56
  40e5ee:	scas   eax,DWORD PTR es:[edi]
  40e5ef:	loopne 0x40e572
  40e5f1:	lods   al,BYTE PTR ds:[esi]
  40e5f2:	test   BYTE PTR [esi+0x1aeadab0],dh
  40e5f8:	scas   eax,DWORD PTR es:[edi]
  40e5f9:	mov    cl,dl
  40e5fb:	and    ebp,ebx
  40e5fd:	pop    ecx
  40e5fe:	xchg   edx,edi
  40e600:	call   0x302dd8fd
  40e605:	test   al,0x83
  40e607:	cmp    ch,BYTE PTR [ecx+0x5cb501e6]
  40e60d:	adc    eax,0xafeb3e42
  40e612:	not    DWORD PTR [edi+0xc59c0fb]
  40e618:	or     al,0x11
  40e61a:	xor    BYTE PTR ss:[ecx-0x67],0x79
  40e61f:	inc    eax
  40e620:	add    BYTE PTR [eax+0x24911492],cl
  40e626:	xchg   esi,eax
  40e627:	aad    0xbd
  40e629:	push   edx
  40e62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62b:	jbe    0x40e67c
  40e62d:	jb     0x40e641
  40e62f:	pop    eax
  40e630:	in     eax,0x3d
  40e632:	loopne 0x40e628
  40e634:	frstor [ebx+0x2b]
  40e637:	sbb    ebp,edi
  40e639:	jl     0x40e688
  40e63b:	push   ss
  40e63c:	xchg   edi,eax
  40e63d:	mov    ch,0xd1
  40e63f:	rol    esp,cl
  40e641:	pop    esp
  40e643:	mov    edi,0x5f5388bc
  40e648:	adc    cl,BYTE PTR [edx]
  40e64a:	int3   
  40e64b:	lea    eax,[ecx]
  40e64d:	stos   BYTE PTR es:[edi],al
  40e64e:	jo     0x40e654
  40e650:	sbb    BYTE PTR [ebx-0x61],dh
  40e653:	mov    ebx,0x8274f60c
  40e658:	ins    BYTE PTR es:[edi],dx
  40e659:	push   ecx
  40e65a:	push   edi
  40e65b:	or     bl,BYTE PTR [ecx+eiz*1+0x5d]
  40e65f:	xor    edi,DWORD PTR es:[edi-0x5a]
  40e663:	xchg   edi,eax
  40e664:	inc    edi
  40e665:	inc    ebp
  40e666:	fldenv [ebp-0x4bed7efd]
  40e66c:	out    0x6,al
  40e66e:	push   ss
  40e66f:	fnstenv [ebx-0x6e]
  40e672:	xchg   edi,eax
  40e673:	ret    
  40e674:	mov    ah,0xa6
  40e676:	add    al,0xec
  40e678:	cmp    eax,0xc3a643f2
  40e67d:	mov    ecx,0xfeab3370
  40e682:	(bad)  
  40e683:	jo     0x40e642
  40e685:	sub    ecx,DWORD PTR cs:[edx-0x60]
  40e689:	jp     0x40e6ae
  40e68b:	icebp  
  40e68c:	jp     0x40e632
  40e68e:	dec    ebx
  40e68f:	stos   DWORD PTR es:[edi],eax
  40e690:	das    
  40e691:	lods   al,BYTE PTR ds:[esi]
  40e692:	pop    ds
  40e693:	mov    bl,0x0
  40e695:	inc    ebp
  40e696:	dec    esi
  40e697:	lds    esp,FWORD PTR [esi+0x4839423a]
  40e69d:	imul   ebx,DWORD PTR [ebx],0xffffffba
  40e6a0:	sub    ebp,DWORD PTR [edi]
  40e6a2:	dec    edx
  40e6a3:	push   edx
  40e6a4:	push   ebx
  40e6a5:	push   ecx
  40e6a6:	push   ecx
  40e6a7:	outs   dx,DWORD PTR ds:[esi]
  40e6a8:	(bad)  
  40e6a9:	retf   
  40e6aa:	jnp    0x40e6ef
  40e6ac:	cdq    
  40e6ad:	add    esi,ebp
  40e6af:	sbb    DWORD PTR [esi+0xa],ecx
  40e6b2:	dec    ecx
  40e6b3:	sub    al,0x5c
  40e6b5:	ror    BYTE PTR [edi],1
  40e6b7:	shr    DWORD PTR [esi],cl
  40e6b9:	cmp    BYTE PTR [ecx-0xc],0x7b
  40e6bd:	mov    ah,0x8b
  40e6bf:	dec    esi
  40e6c0:	fwait
  40e6c1:	push   esp
  40e6c2:	cs (bad) 
  40e6c4:	mov    esp,0xb171367f
  40e6c9:	or     eax,0xc380f871
  40e6ce:	and    bh,dl
  40e6d0:	loope  0x40e70f
  40e6d2:	push   ebx
  40e6d3:	jmp    0xd18f:0xfbfe8ce4
  40e6da:	inc    ecx
  40e6db:	jmp    0xcd3ce4ae
  40e6e0:	inc    edx
  40e6e1:	dec    ecx
  40e6e2:	cld    
  40e6e3:	ds or  al,0x27
  40e6e6:	jp     0x40e714
  40e6e8:	xchg   esp,eax
  40e6e9:	mov    al,bl
  40e6eb:	gs fdivr st(5),st
  40e6ee:	fbld   TBYTE PTR [ebp+0x2ac841d9]
  40e6f4:	arpl   WORD PTR ds:0x9a2868e4,ax
  40e6fa:	(bad)  
  40e6fc:	in     eax,dx
  40e6fd:	xor    DWORD PTR [ebp-0x626424c8],esp
  40e703:	jo     0x40e745
  40e705:	mov    dl,0x27
  40e707:	aad    0x7
  40e709:	lods   eax,DWORD PTR ds:[esi]
  40e70a:	mov    ecx,0x540b73c4
  40e70f:	mov    BYTE PTR gs:[ebp+0x634429df],ah
  40e716:	dec    eax
  40e717:	pusha  
  40e718:	ficomp DWORD PTR [ebx+0x2048c6b6]
  40e71e:	icebp  
  40e71f:	frstor [edx]
  40e721:	retf   
  40e722:	jmp    0x40e72a
  40e724:	js     0x40e72e
  40e726:	sub    ch,BYTE PTR [eax-0x5]
  40e729:	cs jmp 0xb8d6dd1e
  40e72f:	and    BYTE PTR [ebp+0x7a],0x78
  40e733:	push   cs
  40e734:	outs   dx,DWORD PTR ds:[esi]
  40e735:	popa   
  40e736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e737:	jmp    0x4b5bf13e
  40e73c:	and    DWORD PTR [ebx+eiz*2+0x18],eax
  40e740:	dec    DWORD PTR [ebx+0x2b473a2e]
  40e746:	xor    cl,BYTE PTR [esi+0x4c]
  40e749:	mov    al,ds:0x4ab871ce
  40e74e:	nop
  40e74f:	cmp    eax,0x939f0bb4
  40e754:	push   0xffffffd1
  40e756:	cdq    
  40e757:	fdivr  st,st(0)
  40e759:	sub    DWORD PTR [ecx-0x1946d717],esp
  40e75f:	pop    es
  40e760:	and    bh,BYTE PTR [ebp-0x77]
  40e763:	mov    edx,0xedb76c1e
  40e768:	sub    eax,eax
  40e76a:	mov    ch,0xfa
  40e76c:	xchg   edx,ecx
  40e76e:	or     bl,BYTE PTR [eax]
  40e770:	push   0x9d3e8442
  40e775:	xchg   ebp,edi
  40e777:	inc    edx
  40e778:	retf   0x2cef
  40e77b:	jecxz  0x40e7ca
  40e77d:	cmc    
  40e77e:	or     ebp,DWORD PTR [esi+0x1de10872]
  40e784:	mov    DWORD PTR [edx],eax
  40e786:	pop    cx
  40e788:	jbe    0x40e730
  40e78a:	lods   al,BYTE PTR ds:[esi]
  40e78b:	call   0xeb155ccb
  40e790:	neg    BYTE PTR [esi+0x55d9d822]
  40e796:	or     eax,0x28ad6a19
  40e79b:	xchg   edx,eax
  40e79c:	and    eax,0xb326ddfe
  40e7a1:	push   esi
  40e7a2:	int    0xfa
  40e7a4:	pop    ss
  40e7a5:	je     0x40e7f1
  40e7a7:	sbb    eax,0x29a408d4
  40e7ac:	sti    
  40e7ad:	dec    esi
  40e7ae:	and    eax,0xa1db8b2f
  40e7b3:	adc    al,0x2c
  40e7b5:	enter  0x5f2f,0x8d
  40e7b9:	(bad)  [ebx]
  40e7bb:	mov    ds:0x19956772,al
  40e7c0:	add    bl,BYTE PTR ds:0xfed0cf3e
  40e7c6:	outs   dx,BYTE PTR ds:[esi]
  40e7c7:	fisttp DWORD PTR [ecx-0x4]
  40e7ca:	rol    DWORD PTR [esi],1
  40e7cc:	fsub   DWORD PTR [esi+0x75]
  40e7cf:	mov    cl,0xa8
  40e7d1:	icebp  
  40e7d2:	xchg   DWORD PTR [edx+ebx*1],esp
  40e7d5:	shl    DWORD PTR [ecx],0xdd
  40e7d8:	add    DWORD PTR [esi],0x5b
  40e7db:	in     eax,dx
  40e7dc:	imul   eax,DWORD PTR [eax],0x9e9fd6d2
  40e7e2:	mov    dl,0x6c
  40e7e4:	js     0x40e7f6
  40e7e6:	push   cs
  40e7e7:	in     al,dx
  40e7e8:	rol    BYTE PTR [edi+0x19],1
  40e7eb:	add    ebp,esi
  40e7ed:	ins    DWORD PTR es:[edi],dx
  40e7ee:	xchg   BYTE PTR [ecx+0x34c90199],dh
  40e7f4:	mov    DWORD PTR [edi+0x49],ebx
  40e7f7:	xchg   edi,eax
  40e7f8:	fisttp DWORD PTR [ebx-0x7e]
  40e7fb:	inc    BYTE PTR [ecx]
  40e7fd:	mov    eax,ds:0x5b52966f
  40e802:	rol    DWORD PTR [edi-0x6cad6c31],0xcf
  40e809:	fs push ecx
  40e80b:	mov    BYTE PTR [ebx],bh
  40e80d:	adc    DWORD PTR [ebx],edx
  40e80f:	pop    esi
  40e810:	add    al,0x71
  40e812:	pushf  
  40e813:	or     BYTE PTR [ecx-0xbfb5d7d],cl
  40e819:	xchg   ch,cl
  40e81b:	jnp    0x40e818
  40e81d:	cmp    ebp,DWORD PTR [ebx]
  40e81f:	mov    edx,0xe0f3f329
  40e824:	icebp  
  40e825:	out    dx,al
  40e826:	fist   WORD PTR [eax+ebp*4-0x131b8c43]
  40e82d:	into   
  40e82e:	sub    eax,DWORD PTR [edx+0x24]
  40e831:	push   esi
  40e832:	lea    edi,[eax]
  40e834:	mov    eax,ds:0x606463c9
  40e839:	out    dx,al
  40e83a:	test   al,0xfc
  40e83c:	or     ecx,DWORD PTR [edx-0x73]
  40e83f:	or     ecx,0x2773feec
  40e845:	dec    esi
  40e846:	and    ah,BYTE PTR [esi-0x2cf94b6]
  40e84c:	jne    0x40e7f1
  40e84e:	and    BYTE PTR ss:[esi-0x74c34f8b],0x9a
  40e856:	xor    eax,0x64
  40e859:	jae    0x40e833
  40e85b:	ror    edx,0xd4
  40e85e:	dec    ecx
  40e85f:	test   eax,0x7cbfa335
  40e864:	mov    cl,BYTE PTR [ebp-0x4611a35]
  40e86a:	pop    edi
  40e86b:	or     eax,0xd3b67de9
  40e870:	(bad)  
  40e872:	dec    ebp
  40e873:	je     0x40e808
  40e875:	xchg   edi,eax
  40e876:	(bad)  
  40e877:	stos   BYTE PTR es:[edi],al
  40e878:	mov    ds:0xbebe61b1,eax
  40e87d:	mov    cl,0xd0
  40e87f:	xchg   edi,eax
  40e880:	mov    bl,dh
  40e882:	sub    eax,DWORD PTR [edi+0x2c]
  40e885:	fadd   st(1),st
  40e887:	imul   ebx,DWORD PTR [esi+ebx*8],0x45
  40e88b:	mov    bl,0x77
  40e88d:	mov    ah,0xd9
  40e88f:	adc    DWORD PTR [esi],0x4712005
  40e895:	es and eax,0x6e118eb9
  40e89b:	adc    DWORD PTR [edi],0x79a7551c
  40e8a1:	push   edi
  40e8a2:	cmc    
  40e8a3:	and    BYTE PTR [esp+esi*8-0x59],ah
  40e8a7:	jmp    0x40e923
  40e8a9:	je     0x40e8fa
  40e8ab:	push   edi
  40e8ac:	idiv   DWORD PTR [esi+0x5bd3fdc9]
  40e8b2:	shl    cl,cl
  40e8b4:	test   BYTE PTR [ecx-0x7d],ah
  40e8b7:	ins    BYTE PTR es:[edi],dx
  40e8b8:	mov    dh,cl
  40e8ba:	ret    0x4201
  40e8bd:	inc    esi
  40e8be:	call   0x6ae2a921
  40e8c3:	inc    ebp
  40e8c4:	jne    0x40e8d1
  40e8c6:	pop    ds
  40e8c7:	test   DWORD PTR [ebx+0x760bdd5a],esi
  40e8cd:	outs   dx,BYTE PTR ds:[esi]
  40e8ce:	mov    eax,0x9a2baa17
  40e8d3:	aam    0x91
  40e8d5:	jmp    0x7c1d2c9c
  40e8da:	mov    eax,0xbacc8ee1
  40e8df:	into   
  40e8e0:	lods   al,BYTE PTR ds:[esi]
  40e8e1:	into   
  40e8e2:	cmp    ebx,ebp
  40e8e4:	nop
  40e8e5:	outs   dx,BYTE PTR ds:[esi]
  40e8e6:	int    0x5a
  40e8e8:	shl    esi,cl
  40e8ea:	push   edx
  40e8eb:	inc    ecx
  40e8ec:	(bad)  [ebx-0x2d3e1000]
  40e8f2:	mov    esi,edi
  40e8f4:	sub    ah,al
  40e8f6:	jbe    0x40e90f
  40e8f8:	mov    edi,0x7a135360
  40e8fd:	shr    ah,1
  40e8ff:	in     al,dx
  40e900:	popa   
  40e901:	imul   ebp,DWORD PTR [edx+0x28332f0b],0xae1cedb4
  40e90b:	jnp    0x40e8b7
  40e90d:	call   0x8216ef82
  40e912:	hlt    
  40e913:	shl    BYTE PTR [edi+0x73],cl
  40e916:	fdivr  st,st(0)
  40e918:	popf   
  40e919:	in     al,dx
  40e91a:	fild   QWORD PTR [eax+eiz*2]
  40e91d:	stos   DWORD PTR es:[edi],eax
  40e91e:	mov    ebx,0x8d596ca7
  40e923:	jb     0x40e97e
  40e925:	rcl    ch,0x56
  40e928:	nop
  40e929:	(bad)  
  40e92a:	jbe    0x40e96a
  40e92c:	shl    ebx,cl
  40e92e:	inc    ecx
  40e92f:	jo     0x40e918
  40e931:	ror    bl,cl
  40e933:	fadd   st,st(3)
  40e935:	push   eax
  40e936:	xor    bl,BYTE PTR [edx]
  40e938:	shr    BYTE PTR ss:[eax+0x6e],cl
  40e93c:	mov    BYTE PTR [esi-0x293c10a5],al
  40e942:	gs in  eax,dx
  40e944:	nop
  40e945:	fwait
  40e946:	or     eax,0xf4811568
  40e94b:	pop    esp
  40e94c:	sbb    ebp,ecx
  40e94e:	push   es
  40e94f:	jge    0x40e958
  40e951:	repnz pop esi
  40e953:	mov    dl,0x6e
  40e955:	pop    eax
  40e956:	int3   
  40e957:	mov    al,ds:0x610d7796
  40e95c:	cmp    DWORD PTR [edx-0x5408c90c],eax
  40e962:	inc    edx
  40e963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e964:	dec    esi
  40e965:	scas   eax,DWORD PTR es:[edi]
  40e966:	inc    edi
  40e967:	push   ebp
  40e968:	retf   
  40e969:	cmc    
  40e96a:	or     cl,al
  40e96c:	xchg   BYTE PTR [edi+0x302cfc89],dh
  40e972:	jno    0x40e97b
  40e974:	(bad)  
  40e975:	or     DWORD PTR [esi],eax
  40e977:	push   cs
  40e978:	(bad)  [ebx+0x4a]
  40e97b:	xlat   BYTE PTR ds:[ebx]
  40e97c:	fsubr  DWORD PTR [edx]
  40e97e:	or     ecx,DWORD PTR [esi]
  40e980:	xchg   BYTE PTR ds:0x3497fc71,al
  40e986:	and    BYTE PTR [edx+0xc578547],cl
  40e98c:	mov    fs,ebx
  40e98e:	mov    edi,0xa5182caa
  40e993:	mov    ah,0x63
  40e995:	sbb    eax,0x648af7b5
  40e99a:	push   es
  40e99b:	push   ebp
  40e99c:	jecxz  0x40e9ff
  40e99e:	xchg   esp,eax
  40e99f:	das    
  40e9a0:	and    esi,DWORD PTR [eax-0x6a5b505b]
  40e9a6:	call   0x799c:0x985f5001
  40e9ad:	daa    
  40e9ae:	ins    DWORD PTR es:[edi],dx
  40e9af:	cmp    al,BYTE PTR [esi-0x5]
  40e9b2:	add    al,0xae
  40e9b4:	cmp    ebx,esp
  40e9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9b7:	int    0x68
  40e9b9:	ret    
  40e9ba:	or     esi,DWORD PTR ds:0xafd90975
  40e9c0:	add    edx,ebp
  40e9c2:	test   al,0x63
  40e9c4:	or     ecx,esi
  40e9c6:	outs   dx,BYTE PTR ds:[esi]
  40e9c7:	inc    ebx
  40e9c8:	(bad)  
  40e9c9:	cli    
  40e9ca:	push   edi
  40e9cb:	in     al,dx
  40e9cc:	add    BYTE PTR [esi-0x2f55b43f],cl
  40e9d2:	jl     0x40ea19
  40e9d4:	icebp  
  40e9d5:	or     eax,0xcbf7c9b2
  40e9da:	sbb    eax,0x33fef9e3
  40e9df:	mov    eax,ds:0x305daef0
  40e9e4:	push   es
  40e9e5:	loop   0x40ea32
  40e9e7:	cmp    eax,0x5254dc6
  40e9ec:	add    ebp,0x232171a6
  40e9f2:	mov    ecx,?
  40e9f4:	xor    DWORD PTR [esi-0x78],esi
  40e9f7:	xor    esi,DWORD PTR [ebx-0x5f]
  40e9fa:	push   ds
  40e9fb:	daa    
  40e9fc:	jge    0x40ea26
  40e9fe:	sbb    esi,DWORD PTR [ebx+ebp*4+0xfa37a55]
  40ea05:	popf   
  40ea06:	mov    ecx,0x41e18b4a
  40ea0b:	(bad)  
  40ea0c:	cmp    al,BYTE PTR [ecx-0x35]
  40ea0f:	out    0x37,al
  40ea11:	or     eax,0x7d57a531
  40ea16:	rcl    BYTE PTR [edi+0x5b189423],cl
  40ea1c:	jno    0x40e9a9
  40ea1e:	xlat   BYTE PTR ds:[ebx]
  40ea1f:	(bad)  
  40ea20:	xor    esi,edx
  40ea22:	and    ch,BYTE PTR [ebx+edx*8+0x4]
  40ea26:	add    al,0x2e
  40ea28:	scas   al,BYTE PTR es:[edi]
  40ea29:	out    dx,al
  40ea2a:	das    
  40ea2b:	pop    esp
  40ea2c:	outs   dx,BYTE PTR ds:[esi]
  40ea2d:	push   ebx
  40ea2e:	push   eax
  40ea2f:	and    edi,edi
  40ea31:	inc    ebx
  40ea32:	and    DWORD PTR [edi-0x7e],0x69fc0696
  40ea39:	ja     0x40ea9c
  40ea3b:	jbe    0x40ea4f
  40ea3d:	xchg   DWORD PTR [edi-0x85fb66d],ecx
  40ea43:	push   0xeca8537c
  40ea48:	aad    0x55
  40ea4a:	test   BYTE PTR [eax+0x3499d204],0xc5
  40ea51:	lea    eax,[ecx]
  40ea53:	ror    DWORD PTR [ebx+esi*8-0x63],0x31
  40ea58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea59:	push   es
  40ea5a:	xchg   ecx,eax
  40ea5b:	iret   
  40ea5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5d:	xchg   ebx,eax
  40ea5e:	adc    al,0x36
  40ea60:	lds    esp,FWORD PTR [esi*1+0x2f52ac47]
  40ea67:	dec    ecx
  40ea68:	or     al,0x2b
  40ea6a:	call   0x929b9b64
  40ea6f:	or     bh,ch
  40ea71:	fidiv  DWORD PTR [edx]
  40ea73:	dec    edx
  40ea74:	cmp    dl,ah
  40ea76:	dec    edx
  40ea77:	jbe    0x40eac2
  40ea79:	cmp    bl,BYTE PTR fs:[ebx+0x4c]
  40ea7d:	in     al,dx
  40ea7e:	dec    ebx
  40ea7f:	and    al,0xe
  40ea81:	shl    DWORD PTR [esp+edx*1+0x49c1f150],1
  40ea88:	call   FWORD PTR [ebx+0x2d]
  40ea8b:	xor    ebp,DWORD PTR [ebp+0x7bf13a19]
  40ea91:	mov    bl,0x5c
  40ea93:	cmp    dh,BYTE PTR [ebx]
  40ea95:	sbb    BYTE PTR ds:0x5b4b81d7,bh
  40ea9b:	call   0x2280:0x7c430258
  40eaa2:	push   eax
  40eaa3:	xchg   edi,eax
  40eaa4:	fiadd  DWORD PTR [ecx+0x4c8f3c2f]
  40eaaa:	add    BYTE PTR [edx],ch
  40eaac:	into   
  40eaad:	loopne 0x40eadf
  40eaaf:	cmp    DWORD PTR ds:0xe83b1c6a,edx
  40eab5:	repnz rcr BYTE PTR [ebp-0x32d4bc6a],0xff
  40eabd:	cld    
  40eabe:	out    0xbe,eax
  40eac0:	dec    edx
  40eac1:	sbb    bl,BYTE PTR [esi+0x1f]
  40eac4:	or     eax,DWORD PTR [edx]
  40eac6:	jg     0x40ea55
  40eac8:	mov    ecx,0x6cbe7800
  40eacd:	push   esi
  40eace:	ss and eax,0xf82a15df
  40ead4:	sbb    bh,ch
  40ead6:	es xchg edx,esp
  40ead9:	xchg   edi,eax
  40eada:	adc    eax,0x47babdcf
  40eadf:	test   BYTE PTR [ecx-0x4a225116],bl
  40eae5:	and    ecx,0xd0622501
  40eaeb:	dec    esp
  40eaec:	jnp    0x40ea8f
  40eaee:	test   eax,0x7fce6753
  40eaf3:	xchg   edi,eax
  40eaf4:	pop    ds
  40eaf5:	rcl    bl,1
  40eaf7:	or     eax,0x46614549
  40eafc:	gs jo  0x40eb44
  40eaff:	adc    BYTE PTR [ebx-0x80],bh
  40eb02:	mov    es,WORD PTR [ebx+0x1e8ea7ff]
  40eb08:	scas   eax,DWORD PTR es:[edi]
  40eb09:	lods   eax,DWORD PTR ds:[esi]
  40eb0a:	sub    eax,0xcaa5b6dc
  40eb0f:	dec    ecx
  40eb10:	mov    cl,0xfa
  40eb12:	pop    ebx
  40eb13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb14:	cdq    
  40eb15:	inc    edx
  40eb16:	pop    esi
  40eb17:	mov    cl,0x14
  40eb19:	outs   dx,BYTE PTR es:[esi]
  40eb1b:	jmp    0xcd5c:0x4786b826
  40eb22:	aaa    
  40eb23:	test   DWORD PTR [edi],ebp
  40eb25:	mov    esp,fs
  40eb27:	mov    edx,?
  40eb29:	add    BYTE PTR [ebp-0x1df16eef],ah
  40eb2f:	aas    
  40eb30:	inc    eax
  40eb31:	ror    DWORD PTR [ecx],cl
  40eb33:	sub    al,0xe8
  40eb35:	(bad)  
  40eb36:	pop    edx
  40eb37:	xchg   ebx,eax
  40eb38:	add    DWORD PTR [edi+eiz*4],esp
  40eb3b:	(bad)
  40eb3e:	cmp    eax,0xf679c004
  40eb43:	or     BYTE PTR [ebx],0x2e
  40eb46:	sub    cl,BYTE PTR [eax-0x74264ac7]
  40eb4c:	xchg   ecx,eax
  40eb4d:	ret    
  40eb4e:	and    ebx,DWORD PTR [ebx-0x5710cf27]
  40eb54:	test   dl,dl
  40eb56:	mov    bl,0x5f
  40eb58:	dec    esp
  40eb59:	rcr    esp,0xe0
  40eb5c:	fwait
  40eb5d:	mov    edx,0xf10de5b3
  40eb62:	mov    edx,0xaa4fde2e
  40eb67:	xchg   ebx,eax
  40eb68:	scas   al,BYTE PTR es:[edi]
  40eb69:	in     al,dx
  40eb6a:	popa   
  40eb6b:	mov    BYTE PTR [edi],dh
  40eb6d:	xchg   DWORD PTR [ebx],ecx
  40eb6f:	or     edx,DWORD PTR [eax+0x4d]
  40eb72:	popa   
  40eb73:	pop    esi
  40eb74:	popa   
  40eb75:	cmp    edi,0x68
  40eb78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb79:	jg     0x40eb1e
  40eb7b:	pop    esi
  40eb7c:	jle    0x40ebdb
  40eb7e:	mov    al,ds:0x33304240
  40eb83:	push   es
  40eb84:	adc    BYTE PTR [esi+0x7c115753],bl
  40eb8a:	mov    esi,0x923fd1b0
  40eb8f:	js     0x40ebc0
  40eb91:	sbb    al,0x8e
  40eb94:	int3   
  40eb95:	or     edx,ebx
  40eb97:	push   edx
  40eb98:	into   
  40eb99:	mov    al,0xd9
  40eb9b:	jp     0x40eb6d
  40eb9d:	jle    0x40eb43
  40eb9f:	push   edi
  40eba0:	push   eax
  40eba1:	sub    BYTE PTR [edi-0x1de66d32],bl
  40eba7:	push   ebp
  40eba8:	sbb    DWORD PTR [edx],edx
  40ebaa:	xchg   ebx,eax
  40ebab:	in     al,0xd3
  40ebad:	ror    BYTE PTR [esp+ecx*8-0x6e3337ac],1
  40ebb4:	sub    dh,BYTE PTR ds:0x206c3d3e
  40ebba:	sbb    eax,0x66fefc4
  40ebbf:	xor    DWORD PTR [esi],edx
  40ebc1:	mov    eax,ds:0xb463a3ff
  40ebc6:	sub    al,0xad
  40ebc8:	cs xchg ecx,eax
  40ebca:	retf   
  40ebcb:	daa    
  40ebcc:	sub    edi,ebp
  40ebce:	test   BYTE PTR [esi],0x6b
  40ebd1:	test   eax,edi
  40ebd3:	mov    esp,0xac2be1b4
  40ebd8:	xor    ebx,ebx
  40ebda:	xchg   edi,eax
  40ebdb:	jle    0x40eb71
  40ebdd:	push   eax
  40ebde:	loope  0x40ebae
  40ebe0:	sbb    ebp,esi
  40ebe2:	fld    DWORD PTR [esi+0x3d]
  40ebe5:	xchg   esi,eax
  40ebe6:	or     eax,0x9b2d8f96
  40ebeb:	ffree  st(4)
  40ebed:	outs   dx,DWORD PTR ds:[esi]
  40ebee:	jbe    0x40ec3d
  40ebf0:	jecxz  0x40ec32
  40ebf2:	int    0xd1
  40ebf4:	mov    eax,0x9b4a04e5
  40ebf9:	inc    ecx
  40ebfa:	iret   
  40ebfb:	mov    ebp,0x6839a9ce
  40ec00:	aas    
  40ec01:	xor    BYTE PTR [eax],0x90
  40ec04:	xor    al,0x9c
  40ec06:	loope  0x40ebdf
  40ec08:	xor    DWORD PTR [ebx],esp
  40ec0a:	das    
  40ec0b:	daa    
  40ec0c:	ret    0xdf7d
  40ec0f:	cmp    al,0x37
  40ec11:	xchg   esi,eax
  40ec12:	pop    ebp
  40ec13:	(bad)  
  40ec14:	cmp    al,0x9e
  40ec16:	or     al,0x4d
  40ec18:	and    bl,BYTE PTR [ecx+0x5d69e0]
  40ec1e:	call   0xe57650d
  40ec23:	sbb    edx,DWORD PTR [eax+0x47b5e1b8]
  40ec29:	push   edi
  40ec2a:	cmp    al,0x12
  40ec2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec2d:	pop    ss
  40ec2e:	jmp    0x40ec20
  40ec30:	pop    ebx
  40ec31:	pop    eax
  40ec32:	call   0xc3d66804
  40ec37:	rcr    DWORD PTR [esi+0x12b4eb4f],cl
  40ec3d:	inc    eax
  40ec3e:	int3   
  40ec3f:	ret    0xe9cf
  40ec42:	shr    DWORD PTR [ecx+0x4708fba1],0x16
  40ec49:	(bad)  
  40ec4a:	jmp    0x1bec:0xa3cf618d
  40ec51:	push   edi
  40ec52:	sbb    DWORD PTR [edx+0x21],ebx
  40ec55:	jns    0x40ec79
  40ec57:	pop    edi
  40ec58:	repz xor DWORD PTR [ecx],esp
  40ec5b:	ret    
  40ec5c:	aam    0xf2
  40ec5e:	xchg   esi,eax
  40ec5f:	jg     0x40ecc6
  40ec61:	push   0x2189be48
  40ec66:	mov    ds:0x998c141e,eax
  40ec6b:	test   al,0x7f
  40ec6d:	or     ecx,0xffffff8a
  40ec70:	aas    
  40ec71:	lea    ebp,[edi+0x38994283]
  40ec77:	jbe    0x40ec34
  40ec79:	(bad)  
  40ec7a:	retf   
  40ec7b:	fisub  DWORD PTR [eax]
  40ec7d:	adc    eax,0xbaa1fff7
  40ec82:	pop    ebx
  40ec83:	fs cmc 
  40ec85:	dec    ebx
  40ec86:	jbe    0x40ece2
  40ec88:	pusha  
  40ec89:	sub    BYTE PTR [ebx+eiz*1-0x3a],ah
  40ec8d:	into   
  40ec8e:	outs   dx,BYTE PTR ds:[esi]
  40ec8f:	sub    eax,0xb8756ad1
  40ec94:	adc    DWORD PTR [ebx],esi
  40ec96:	js     0x40ecfe
  40ec98:	hlt    
  40ec99:	jb     0x40ed0f
  40ec9b:	sub    BYTE PTR [ebp+esi*2-0x5710e267],0x17
  40eca3:	ins    DWORD PTR es:[edi],dx
  40eca4:	mov    cl,0x5c
  40eca6:	jne    0x40ec2f
  40eca8:	add    al,0x8d
  40ecaa:	sbb    al,0x7a
  40ecac:	adc    bh,ah
  40ecae:	imul   edx,ecx,0xfffffffb
  40ecb1:	inc    eax
  40ecb2:	or     eax,0xd316b10d
  40ecb7:	inc    edi
  40ecb8:	adc    edx,DWORD PTR [esi-0x1]
  40ecbb:	scas   eax,DWORD PTR es:[edi]
  40ecbc:	mov    ebp,0xc3226dfd
  40ecc1:	xor    ch,BYTE PTR [edx+ecx*4]
  40ecc4:	addr16 mov dh,0x6e
  40ecc7:	shl    eax,0xd9
  40ecca:	bound  ecx,QWORD PTR [edx+ecx*8-0x3eebf522]
  40ecd1:	jns    0x40ec73
  40ecd3:	ds push esi
  40ecd5:	push   esp
  40ecd6:	mov    ebx,0xd3abd91b
  40ecdb:	inc    ecx
  40ecdc:	sbb    eax,0x134ebc07
  40ece1:	jmp    0x793ccef8
  40ece6:	and    ah,BYTE PTR [ecx+0x7bb92b98]
  40ecec:	ror    BYTE PTR [ebx+esi*8],0x26
  40ecf0:	jg     0x40ecb2
  40ecf2:	mov    ecx,0x25d25683
  40ecf7:	retf   
  40ecf8:	pop    edx
  40ecf9:	xchg   eax,esi
  40ecfb:	add    bl,BYTE PTR [ebx*1+0xf0c14b9]
  40ed02:	jnp    0x40ed71
  40ed04:	js     0x40ed3d
  40ed06:	bound  edx,QWORD PTR [ecx-0x6a]
  40ed09:	in     eax,0x85
  40ed0b:	adc    eax,ecx
  40ed0d:	repnz std 
  40ed0f:	leave  
  40ed10:	outs   dx,DWORD PTR ds:[esi]
  40ed11:	sahf   
  40ed12:	lds    eax,FWORD PTR [ebx-0x317484ce]
  40ed18:	loope  0x40ed3b
  40ed1a:	jle    0x40ed7d
  40ed1c:	mov    cl,0x8a
  40ed1e:	fisttp WORD PTR [esp+ebp*2+0x77]
  40ed22:	addr16 pop ebp
  40ed24:	cdq    
  40ed25:	(bad)  
  40ed26:	sbb    DWORD PTR [edi],eax
  40ed28:	jge    0x40ed56
  40ed2a:	adc    BYTE PTR [eax-0x1d],bl
  40ed2d:	in     eax,dx
  40ed2e:	sub    al,0x43
  40ed30:	not    bh
  40ed32:	int    0x71
  40ed34:	sbb    BYTE PTR [esp+eax*4-0x44],ah
  40ed38:	in     al,0x4
  40ed3a:	test   eax,0x3e98501f
  40ed3f:	ja     0x40ed6e
  40ed41:	xor    eax,0x94444a85
  40ed46:	je     0x40ed72
  40ed48:	or     al,BYTE PTR [ebp+0x5d]
  40ed4b:	mov    ecx,DWORD PTR [eax-0x53]
  40ed4e:	inc    edx
  40ed4f:	and    al,0xd7
  40ed51:	in     al,dx
  40ed52:	mov    ds:0x286420b3,al
  40ed57:	xor    al,0xe9
  40ed59:	xchg   BYTE PTR [esi+esi*1-0x72],bl
  40ed5d:	ja     0x40ed11
  40ed5f:	sti    
  40ed60:	jno    0x40ecff
  40ed62:	pop    ebx
  40ed63:	adc    DWORD PTR [ebx-0x49],ebx
  40ed66:	add    ebp,ecx
  40ed68:	push   ebx
  40ed69:	and    edx,DWORD PTR [edi]
  40ed6b:	rol    BYTE PTR [ebx-0x782b680c],1
  40ed71:	inc    esp
  40ed72:	lock xor DWORD PTR [ebx+0x2d4fc5e9],edi
  40ed79:	mov    dh,bl
  40ed7b:	dec    dx
  40ed7d:	mov    al,0xdb
  40ed7f:	jnp    0x40edda
  40ed81:	data16 (bad) [edi+0x6a1276f0]
  40ed88:	enter  0x45a1,0x47
  40ed8c:	stos   BYTE PTR es:[edi],al
  40ed8d:	sbb    bl,BYTE PTR [eax-0xa]
  40ed90:	ret    
  40ed91:	or     al,cl
  40ed93:	jmp    0x40ed72
  40ed95:	lods   eax,DWORD PTR ds:[esi]
  40ed96:	mov    gs,WORD PTR [esi-0x348b66db]
  40ed9c:	mov    eax,ds:0x15b6a7f
  40eda1:	sub    al,0xa4
  40eda3:	aaa    
  40eda4:	retf   
  40eda5:	lock push cs
  40eda7:	add    eax,0x5b9364cc
  40edac:	ror    DWORD PTR ds:0x705c66b,cl
  40edb2:	and    eax,ecx
  40edb4:	cmp    al,0xb0
  40edb6:	arpl   WORD PTR [ebx],bp
  40edb8:	push   esi
  40edb9:	dec    esp
  40edba:	(bad)  
  40edbb:	(bad)  
  40edbd:	push   ebp
  40edbe:	jp     0x40ed6e
  40edc0:	ret    
  40edc1:	fwait
  40edc2:	sbb    BYTE PTR [edx+0x24],bh
  40edc5:	xor    BYTE PTR ds:[ebp-0x70],bh
  40edc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edca:	mov    eax,0xde66179d
  40edcf:	jp     0x40ede4
  40edd1:	and    BYTE PTR ds:0x656c0026,ah
  40edd7:	dec    ebx
  40edd8:	jbe    0x40edcb
  40edda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eddb:	aad    0x1
  40eddd:	sti    
  40edde:	pusha  
  40eddf:	sbb    edx,eax
  40ede1:	rol    BYTE PTR [eax+eiz*4],cl
  40ede4:	ficomp WORD PTR [edx+0x185ec8cf]
  40edea:	fs mov ebx,0x36bd67b2
  40edf0:	xor    eax,0xafd2ec05
  40edf5:	and    bh,al
  40edf7:	xor    al,BYTE PTR [edx]
  40edf9:	fmul   DWORD PTR [edi-0x7b]
  40edfc:	ss xchg edi,eax
  40edfe:	pop    edx
  40edff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee00:	fist   DWORD PTR ds:0x95230afa
  40ee06:	imul   esi,esp,0x51
  40ee09:	push   eax
  40ee0a:	pop    es
  40ee0b:	jg     0x40ee42
  40ee0d:	xchg   ebx,eax
  40ee0e:	adc    ah,cl
  40ee10:	repz jns 0x40ee1a
  40ee13:	mov    BYTE PTR [edx-0x74a141df],dh
  40ee19:	sub    al,0x4f
  40ee1b:	out    0xb,al
  40ee1d:	xor    esi,DWORD PTR [esp+eax*8+0x18071f0c]
  40ee24:	cmp    DWORD PTR [eax-0x1f],edi
  40ee27:	push   0xf67bd2e8
  40ee2c:	mov    DWORD PTR [edi],esp
  40ee2e:	sbb    BYTE PTR [esi],bh
  40ee30:	push   esp
  40ee31:	cmp    eax,0x4c679aa2
  40ee36:	adc    ebp,DWORD PTR [ebx+0x7d]
  40ee39:	adc    al,0x71
  40ee3b:	dec    edi
  40ee3c:	pop    edi
  40ee3d:	sub    al,0xb4
  40ee3f:	xchg   BYTE PTR [ebx-0x2bc62533],al
  40ee45:	lahf   
  40ee46:	std    
  40ee47:	cmp    BYTE PTR [ecx],dl
  40ee49:	adc    al,BYTE PTR [eax+0x15]
  40ee4c:	push   es
  40ee4d:	cmp    BYTE PTR [ebx+0x15],0xff
  40ee51:	test   al,0x12
  40ee53:	in     al,dx
  40ee54:	push   ecx
  40ee55:	int    0xc0
  40ee57:	mov    ecx,0x583c8e82
  40ee5c:	outs   dx,DWORD PTR ds:[esi]
  40ee5d:	xchg   ecx,eax
  40ee5e:	inc    edx
  40ee5f:	dec    ebp
  40ee60:	push   ebp
  40ee61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee62:	and    DWORD PTR [ebx-0x296f348a],ebp
  40ee68:	(bad)  
  40ee69:	iret   
  40ee6a:	jle    0x40ee83
  40ee6c:	jo     0x40ee86
  40ee6e:	call   0x380b:0xfad468ba
  40ee75:	pop    ds
  40ee76:	fstp   QWORD PTR [edi]
  40ee78:	mov    cl,0x78
  40ee7a:	sbb    edx,esi
  40ee7c:	dec    esi
  40ee7d:	xor    eax,0xd64168e8
  40ee82:	add    BYTE PTR [ebp+0x34],dl
  40ee85:	dec    esi
  40ee86:	fcmovnu st,st(4)
  40ee88:	(bad)  
  40ee89:	cmp    eax,0xa0d14f7b
  40ee8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8f:	sbb    esi,DWORD PTR [esi+0x37bbf98]
  40ee95:	out    0x76,al
  40ee97:	xor    dl,BYTE PTR [edx-0x7da10bff]
  40ee9d:	jg     0x40ee2e
  40ee9f:	fcomp  DWORD PTR [edx]
  40eea1:	push   ebx
  40eea2:	(bad)  
  40eea3:	pushf  
  40eea4:	add    cl,ch
  40eea6:	and    ebx,DWORD PTR ds:0x9d4cd61a
  40eeac:	in     eax,dx
  40eead:	add    BYTE PTR [edx-0x5b],dl
  40eeb0:	jle    0x40eec0
  40eeb2:	(bad)  
  40eeb4:	pop    esp
  40eeb5:	xchg   edx,eax
  40eeb6:	pop    ds
  40eeb7:	in     eax,dx
  40eeb8:	adc    al,0x18
  40eeba:	icebp  
  40eebb:	fpatan 
  40eebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eebe:	(bad)  
  40eebf:	cmp    al,0x85
  40eec1:	mov    bh,0xed
  40eec3:	push   es
  40eec4:	es pop esp
  40eec6:	fs pop ebx
  40eec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec9:	dec    esi
  40eeca:	popa   
  40eecb:	scas   eax,DWORD PTR es:[edi]
  40eecc:	adc    eax,0x99ad57ea
  40eed1:	dec    ebx
  40eed2:	pop    ebx
  40eed3:	pop    edi
  40eed4:	xor    esi,DWORD PTR [ecx-0x3f]
  40eed7:	dec    edx
  40eed8:	in     eax,0xfc
  40eeda:	mov    dh,0x32
  40eedc:	dec    esi
  40eedd:	mov    esi,fs
  40eedf:	cs call 0x153d20e3
  40eee5:	les    ecx,FWORD PTR [esi+eax*1]
  40eee8:	and    ebx,DWORD PTR [ecx+0x31]
  40eeeb:	mov    ch,0xf0
  40eeed:	outs   dx,DWORD PTR ds:[esi]
  40eeee:	sti    
  40eeef:	jns    0x40ef45
  40eef1:	sahf   
  40eef2:	xchg   DWORD PTR [edx+0x48],ecx
  40eef5:	retf   0xcdb5
  40eef8:	inc    esi
  40eef9:	adc    al,0xbb
  40eefb:	jb     0x40eedb
  40eefd:	add    al,0xf
  40eeff:	nop
  40ef00:	mov    BYTE PTR [edi],al
  40ef02:	cmp    al,0x3a
  40ef04:	outs   dx,DWORD PTR ds:[esi]
  40ef05:	loopne 0x40ef83
  40ef07:	sbb    eax,0x76391e68
  40ef0c:	inc    ebp
  40ef0d:	mov    bh,0xa7
  40ef0f:	adc    al,dl
  40ef11:	dec    ebp
  40ef12:	in     eax,0x6c
  40ef14:	adc    bl,BYTE PTR [edx]
  40ef16:	cdq    
  40ef17:	fst    DWORD PTR [ecx+ebx*2]
  40ef1a:	lea    edx,[edx+0x67]
  40ef1d:	mov    ebx,0xac1672f4
  40ef22:	sbb    esi,ecx
  40ef24:	cld    
  40ef25:	fist   WORD PTR [ebp-0x309152d8]
  40ef2b:	or     al,BYTE PTR [edi+0x24]
  40ef2e:	push   eax
  40ef2f:	mov    bl,cl
  40ef31:	lds    edi,FWORD PTR [esi+ebx*2-0x76]
  40ef35:	mov    ds:0x99bad997,al
  40ef3a:	adc    DWORD PTR [ecx],edx
  40ef3c:	test   BYTE PTR [esi+edi*2],dh
  40ef3f:	pop    edx
  40ef40:	jg     0x40ef16
  40ef42:	sub    ebp,esp
  40ef44:	jbe    0x40efc2
  40ef46:	sahf   
  40ef47:	xor    DWORD PTR [edi-0x516ef7c7],ebp
  40ef4d:	call   0x9a9e6b89
  40ef52:	pop    esp
  40ef53:	outs   dx,DWORD PTR ds:[esi]
  40ef54:	iret   
  40ef55:	in     al,0xca
  40ef57:	inc    esi
  40ef58:	imul   dl
  40ef5a:	aaa    
  40ef5b:	xchg   edi,eax
  40ef5c:	add    DWORD PTR [ecx],esi
  40ef5e:	sbb    al,0x95
  40ef60:	std    
  40ef61:	gs test al,0x8c
  40ef64:	fcomp  st(5)
  40ef66:	imul   ebx,DWORD PTR [ebp-0x7d],0x52
  40ef6a:	loope  0x40ef01
  40ef6c:	cmp    DWORD PTR [eax],esi
  40ef6e:	dec    edx
  40ef6f:	add    esi,0xd05792e5
  40ef75:	shl    BYTE PTR [esi+ecx*8+0x7cc6563b],1
  40ef7c:	push   es
  40ef7d:	enter  0x389d,0x40
  40ef81:	pop    esp
  40ef82:	jge    0x40ef6a
  40ef84:	fnstcw WORD PTR [eax]
  40ef86:	int    0xcc
  40ef88:	sub    eax,0x2dff5eae
  40ef8d:	lods   al,BYTE PTR ds:[esi]
  40ef8e:	(bad)  
  40ef8f:	out    dx,al
  40ef90:	outs   dx,DWORD PTR cs:[esi]
  40ef92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef93:	jne    0x40efad
  40ef95:	hlt    
  40ef96:	inc    esp
  40ef97:	xchg   DWORD PTR ds:0x913fec82,esp
  40ef9d:	jno    0x40efb3
  40ef9f:	test   al,0x92
  40efa1:	pop    ss
  40efa2:	push   eax
  40efa3:	mov    esp,0x2c39031a
  40efa8:	mov    dl,BYTE PTR [edx]
  40efaa:	pop    ecx
  40efab:	daa    
  40efac:	popa   
  40efad:	aaa    
  40efae:	outs   dx,DWORD PTR ds:[esi]
  40efaf:	jo     0x40ef5d
  40efb1:	xor    DWORD PTR [ebp-0x51257b81],ebx
  40efb7:	push   edx
  40efb8:	add    al,0xd2
  40efba:	jge    0x40ef99
  40efbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efbd:	jbe    0x40efd3
  40efbf:	dec    eax
  40efc0:	mov    esi,0x33e7107
  40efc5:	cdq    
  40efc6:	and    ebp,esi
  40efc8:	test   eax,0x2704cc08
  40efcd:	not    DWORD PTR [edx]
  40efcf:	sbb    ecx,DWORD PTR [ecx+0x7dabf4b4]
  40efd5:	xor    eax,0xc11685b7
  40efda:	outs   dx,DWORD PTR ds:[esi]
  40efdb:	lahf   
  40efdc:	pop    es
  40efdd:	push   ebx
  40efde:	aaa    
  40efdf:	mov    dh,0x2b
  40efe1:	test   DWORD PTR [edi-0x57],esp
  40efe4:	stc    
  40efe5:	and    al,0x37
  40efe7:	fistp  QWORD PTR [ecx+0x31]
  40efea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efeb:	sahf   
  40efec:	sub    BYTE PTR [ebp+edx*2-0x1c580ac8],bl
  40eff3:	rcl    DWORD PTR [ecx-0x65],0xed
  40eff7:	xor    edx,DWORD PTR [edx]
  40eff9:	pop    ebx
  40effa:	xchg   esi,eax
  40effb:	adc    ecx,DWORD PTR [eax]
  40effd:	pop    ebx
  40effe:	ins    BYTE PTR es:[edi],dx
  40efff:	fbld   TBYTE PTR [ebx-0x20]
  40f002:	pop    ecx
  40f003:	and    al,0x9f
  40f005:	xor    bh,bh
  40f007:	mov    cl,0x56
  40f009:	sbb    DWORD PTR [edi],0xab40c060
  40f00f:	jl     0x40f03d
  40f011:	rcr    DWORD PTR [eax-0x913c9b6],0x2e
  40f018:	and    al,0x50
  40f01a:	sub    al,0x64
  40f01c:	fwait
  40f01d:	aam    0xff
  40f01f:	mov    ds:0x2e34d435,al
  40f024:	ins    DWORD PTR es:[edi],dx
  40f025:	(bad)  
  40f026:	push   0x274e8871
  40f02b:	adc    al,0xcc
  40f02d:	loope  0x40efb1
  40f02f:	pop    es
  40f030:	xchg   ecx,eax
  40f031:	sbb    BYTE PTR [edi+eiz*8-0x2d],0x3e
  40f036:	sbb    ch,ah
  40f038:	fistp  WORD PTR [ecx+eiz*1+0x4c58146a]
  40f03f:	sub    DWORD PTR [esp+esi*1+0x5f],esi
  40f043:	pop    eax
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	sti    
  40f046:	sub    eax,0xadde218c
  40f04b:	push   ebp
  40f04c:	mov    al,ds:0x9dd33842
  40f051:	retf   0xa76d
  40f054:	std    
  40f055:	mov    bl,0x53
  40f057:	int    0xf7
  40f059:	xlat   BYTE PTR ds:[ebx]
  40f05a:	aad    0x68
  40f05c:	sbb    dh,BYTE PTR [esi+0x2497bd4d]
  40f062:	xchg   ebp,eax
  40f063:	psrad  mm6,QWORD PTR [ebx]
  40f066:	pop    esp
  40f067:	mov    ds:0xe6336221,al
  40f06c:	inc    ebx
  40f06d:	fnstenv [edi-0x31]
  40f070:	mov    dl,BYTE PTR [ecx+edx*2]
  40f073:	retf   
  40f074:	pop    ds
  40f075:	mov    WORD PTR [esi],es
  40f077:	cli    
  40f078:	mov    WORD PTR [esi-0xf],fs
  40f07b:	stos   BYTE PTR es:[edi],al
  40f07c:	mov    esi,0x13833d05
  40f081:	jmp    0x5512deaa
  40f086:	pop    ss
  40f087:	ror    BYTE PTR [ebp-0x17dcc327],1
  40f08d:	stos   DWORD PTR es:[edi],eax
  40f08e:	aad    0xfb
  40f090:	sahf   
  40f091:	jnp    0x40f0c0
  40f093:	jecxz  0x40f077
  40f095:	aaa    
  40f096:	pop    esp
  40f097:	(bad)  
  40f098:	mov    cl,BYTE PTR [edx]
  40f09a:	mov    DWORD PTR [edx],eax
  40f09c:	inc    ecx
  40f09d:	and    al,0x42
  40f09f:	into   
  40f0a0:	test   al,dh
  40f0a2:	out    dx,al
  40f0a3:	test   al,0x14
  40f0a5:	call   0x1a09:0xddd5c302
  40f0ac:	mov    esp,0x36e9b099
  40f0b1:	ret    
  40f0b2:	cwde   
  40f0b3:	mov    bh,0xb6
  40f0b5:	sbb    eax,0x9adbfb42
  40f0ba:	sub    DWORD PTR [eax+0x5a6fec30],ebx
  40f0c0:	fcom   QWORD PTR [edi+0x1e7a9051]
  40f0c6:	retf   0xbfb
  40f0c9:	inc    ecx
  40f0ca:	mov    esp,0xf661f41
  40f0cf:	jne    0x40f06c
  40f0d1:	lock jecxz 0x40f065
  40f0d4:	call   0x9bd082b7
  40f0d9:	dec    ecx
  40f0da:	jmp    0xace2ebcd
  40f0df:	push   ecx
  40f0e0:	(bad)  [edi-0x24]
  40f0e3:	mov    ebx,0xb24c9c72
  40f0e8:	sbb    edi,0x3a1f1c3f
  40f0ee:	fmul   DWORD PTR [ecx]
  40f0f0:	ins    BYTE PTR es:[edi],dx
  40f0f1:	cmp    ecx,DWORD PTR [eax+0x59867361]
  40f0f7:	mov    esi,0x5c77bc8c
  40f0fc:	jb     0x40f130
  40f0fe:	fs jecxz 0x40f092
  40f101:	or     eax,0xf177c0cb
  40f106:	push   es
  40f107:	jbe    0x40f0c1
  40f109:	xchg   ebx,eax
  40f10a:	rcl    DWORD PTR [ebp-0x16],cl
  40f10d:	push   esi
  40f10e:	xor    DWORD PTR [edx],ebx
  40f110:	inc    ebp
  40f111:	aas    
  40f112:	xchg   al,dl
  40f114:	push   edi
  40f116:	repnz (bad) 
  40f118:	aad    0x76
  40f11a:	(bad)  
  40f11b:	loope  0x40f09d
  40f11d:	inc    edx
  40f11e:	push   0x65b0bee5
  40f123:	ret    0x8ee9
  40f126:	enter  0x2f43,0xdc
  40f12a:	scas   al,BYTE PTR es:[edi]
  40f12b:	aad    0xe7
  40f12d:	fisttp DWORD PTR [ecx-0xd79b3e7]
  40f133:	dec    edx
  40f134:	push   esp
  40f135:	bnd jmp 0x30b3b5a5
  40f13b:	ret    0xc334
  40f13e:	test   edi,ebx
  40f140:	fist   DWORD PTR [eax+eax*8-0x7b]
  40f144:	in     al,0x6f
  40f146:	not    bl
  40f148:	inc    edx
  40f149:	cli    
  40f14a:	push   esp
  40f14b:	mov    eax,0x5705f61a
  40f150:	int    0xd3
  40f152:	je     0x40f0f0
  40f154:	jns    0x40f1b9
  40f156:	stc    
  40f157:	cwde   
  40f158:	xor    edi,DWORD PTR [edi+ebp*4-0x25]
  40f15c:	and    al,0x13
  40f15e:	(bad)  
  40f15f:	push   ds
  40f160:	retf   0x4af
  40f163:	sub    al,0x71
  40f165:	mov    esi,0xeed9228c
  40f16a:	sub    eax,0x390e39aa
  40f16f:	lock and al,0x59
  40f172:	adc    DWORD PTR [ebp-0xa77b601],edi
  40f178:	jle    0x40f0ff
  40f17a:	ins    DWORD PTR es:[edi],dx
  40f17b:	cmp    ebx,DWORD PTR [ecx+0x29]
  40f17e:	(bad)  
  40f17f:	in     eax,0x5f
  40f181:	xor    eax,0xab8a0cba
  40f186:	xor    eax,0x56d96aae
  40f18b:	jle    0x40f177
  40f18d:	or     BYTE PTR [eax+0xe824353],dl
  40f193:	fdivp  st(1),st
  40f195:	push   esp
  40f196:	pop    ss
  40f197:	fs das 
  40f199:	ins    BYTE PTR es:[edi],dx
  40f19a:	adc    BYTE PTR [ecx+0x6dff461d],ah
  40f1a0:	adc    DWORD PTR [ecx+0x34],0xeba71a79
  40f1a7:	adc    ch,dl
  40f1a9:	xchg   esi,eax
  40f1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ab:	push   esp
  40f1ac:	std    
  40f1ad:	sahf   
  40f1ae:	inc    ecx
  40f1af:	inc    edi
  40f1b0:	dec    ebx
  40f1b1:	or     al,BYTE PTR [edi-0x75]
  40f1b4:	scas   al,BYTE PTR es:[edi]
  40f1b5:	cmp    eax,0xc4b03695
  40f1ba:	or     eax,DWORD PTR [esi+0x28]
  40f1bd:	lahf   
  40f1be:	(bad)  
  40f1bf:	mov    ch,0xc0
  40f1c1:	or     eax,0x5241a716
  40f1c6:	jne    0x40f21d
  40f1c8:	aam    0x6e
  40f1ca:	and    BYTE PTR [ecx-0x773033a6],0xdf
  40f1d1:	pop    ebx
  40f1d2:	(bad)  
  40f1d3:	jp     0x40f1e4
  40f1d5:	pop    edi
  40f1d6:	les    edx,FWORD PTR [ecx]
  40f1d8:	(bad)  
  40f1d9:	push   ecx
  40f1da:	xchg   edx,eax
  40f1db:	pop    DWORD PTR [ecx+eax*1+0x5112171e]
  40f1e2:	bound  ecx,QWORD PTR [edx+0x51]
  40f1e5:	sub    esi,ecx
  40f1e7:	cmp    DWORD PTR [ecx+0x3a],edx
  40f1ea:	xor    dh,ah
  40f1ec:	xor    cl,BYTE PTR [ebp+0x374dd663]
  40f1f2:	test   al,0x9f
  40f1f4:	and    ebp,eax
  40f1f6:	cld    
  40f1f7:	lock sar BYTE PTR [ecx],0x35
  40f1fb:	lea    esi,[edi+0x5e]
  40f1fe:	pop    ebx
  40f1ff:	ss adc al,0x12
  40f202:	icebp  
  40f203:	mov    ebp,0x201255f6
  40f208:	popf   
  40f209:	mov    edx,0x87f843b
  40f20e:	ror    ebx,1
  40f210:	lahf   
  40f211:	and    edi,DWORD PTR [esp+esi*4+0x4e]
  40f215:	int3   
  40f216:	mov    eax,ds:0xf288e91f
  40f21b:	sbb    cl,ah
  40f21d:	(bad)  
  40f21e:	sbb    al,0x4a
  40f220:	adc    BYTE PTR [esi+0x2a265fea],0xea
  40f227:	mov    edx,0xcb73ed23
  40f22c:	out    0xa1,eax
  40f22e:	lahf   
  40f22f:	fmul   st,st(3)
  40f231:	mov    BYTE PTR [ebp+0x366ef7ba],ch
  40f237:	mov    ch,0x2c
  40f239:	int    0xd2
  40f23b:	inc    eax
  40f23c:	pop    eax
  40f23d:	arpl   cx,bp
  40f23f:	add    bl,BYTE PTR [edi]
  40f241:	jle    0x40f2c1
  40f243:	dec    eax
  40f244:	inc    BYTE PTR [ebx+0x247b8e36]
  40f24a:	sub    eax,0x4abf5c5a
  40f24f:	fwait
  40f250:	xor    bh,ah
  40f252:	je     0x40f2a1
  40f254:	xor    esp,ecx
  40f256:	aam    0x3e
  40f258:	pop    ecx
  40f259:	rcr    ah,1
  40f25b:	xor    ah,BYTE PTR [esi-0x4241420d]
  40f261:	or     BYTE PTR [edx-0x1],dh
  40f264:	pusha  
  40f265:	fisttp WORD PTR [edi+edx*8-0x20aefc9d]
  40f26c:	arpl   WORD PTR [ebp-0x22ef6366],ax
  40f272:	sbb    eax,0xc0aabfe3
  40f277:	fimul  DWORD PTR [esi+0x67]
  40f27a:	or     al,0x18
  40f27c:	sub    al,0x78
  40f27e:	inc    ebp
  40f27f:	adc    eax,esi
  40f281:	nop
  40f282:	pop    ecx
  40f283:	fldcw  WORD PTR [ebx-0x37]
  40f286:	mov    edi,0x5f2958dc
  40f28b:	outs   dx,DWORD PTR ds:[esi]
  40f28c:	not    BYTE PTR [esi-0x7f]
  40f28f:	xor    eax,0x3b0b6aa2
  40f294:	xchg   edx,ecx
  40f296:	sbb    edx,DWORD PTR [edx-0x20]
  40f299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29a:	lds    esi,FWORD PTR [edx+0x32dcddac]
  40f2a0:	sti    
  40f2a1:	xor    al,0xee
  40f2a3:	mov    al,ds:0x588833a1
  40f2a8:	add    DWORD PTR [edx],ebp
  40f2aa:	iret   
  40f2ab:	lds    esi,FWORD PTR [eax-0x13]
  40f2ae:	in     al,0x9a
  40f2b0:	and    dl,BYTE PTR [ebp-0x3e]
  40f2b3:	push   0xd22117fa
  40f2b8:	shl    BYTE PTR [ebx-0x35],0x96
  40f2bc:	mov    cl,0x2e
  40f2be:	dec    ebp
  40f2bf:	sub    DWORD PTR [edx+eiz*1+0x16],edi
  40f2c3:	repnz rcr DWORD PTR [esi-0x3412a002],1
  40f2ca:	mov    eax,ds:0xc9b83f77
  40f2cf:	mov    bh,0xe5
  40f2d1:	cwde   
  40f2d2:	sub    DWORD PTR [ecx],ebx
  40f2d4:	cmp    edi,DWORD PTR ds:0x350bf7bc
  40f2da:	pop    ebp
  40f2db:	or     DWORD PTR [esi-0x37],ebp
  40f2de:	arpl   WORD PTR [edx],dx
  40f2e0:	loope  0x40f2e2
  40f2e2:	lock jmp 0x37e:0x5ad1b0af
  40f2ea:	test   BYTE PTR [edx-0x7f],ch
  40f2ed:	sar    eax,cl
  40f2ef:	fiadd  WORD PTR [esi-0x48]
  40f2f2:	imul   eax,DWORD PTR [ebp-0x28],0xffffffe4
  40f2f6:	sbb    ch,BYTE PTR [ecx-0x225b6d9d]
  40f2fc:	sbb    DWORD PTR [edx-0x7a],ebp
  40f2ff:	fidiv  DWORD PTR [ecx]
  40f301:	fstp   DWORD PTR [edx]
  40f303:	outs   dx,DWORD PTR ds:[esi]
  40f304:	mov    esi,0x67c1be01
  40f309:	jb     0x40f382
  40f30b:	jmp    0x3644:0x1d399180
  40f312:	lods   al,BYTE PTR ds:[esi]
  40f313:	jmp    0x40f309
  40f315:	jnp    0x40f369
  40f317:	dec    ebp
  40f318:	xchg   DWORD PTR [edx+0x14],edi
  40f31b:	pop    ds
  40f31c:	inc    edx
  40f31d:	pop    ecx
  40f31e:	cmc    
  40f31f:	add    BYTE PTR [esi+0x44],bh
  40f322:	loopne 0x40f363
  40f324:	cmp    ebp,DWORD PTR [eax+edx*2+0x65d27f45]
  40f32b:	dec    ebp
  40f32c:	jae    0x40f2e6
  40f32e:	xchg   ebx,eax
  40f32f:	xlat   BYTE PTR ds:[ebx]
  40f330:	ins    BYTE PTR es:[edi],dx
  40f331:	xor    eax,esp
  40f333:	add    eax,0xfd828241
  40f338:	or     cl,BYTE PTR [esi-0x5]
  40f33b:	ds test esp,edi
  40f33e:	in     al,0xd6
  40f340:	cmc    
  40f341:	enter  0xdf0e,0x8a
  40f345:	mov    esi,0x73ae5870
  40f34a:	(bad)  
  40f34b:	jb     0x40f2f8
  40f34d:	imul   ebx,esi,0x1b6302f0
  40f353:	add    edx,edi
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	test   BYTE PTR [ebp-0x32230ec4],bh
  40f70d:	jl     0x40f78b
  40f70f:	jmp    0x40f770
  40f711:	jl     0x40f78f
  40f713:	stc    
  40f714:	iret   
  40f715:	pop    ebx
  40f716:	iret   
  40f717:	push   ss
  40f718:	pop    ebp
  40f719:	pushaw 
  40f71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f71c:	int    0xa8
  40f71e:	sbb    bl,al
  40f720:	cdq    
  40f721:	scas   al,BYTE PTR es:[edi]
  40f722:	div    DWORD PTR gs:[esi]
  40f725:	in     al,0xb2
  40f727:	int    0x62
  40f729:	mov    al,ds:0x2b820f06
  40f72e:	xchg   ecx,eax
  40f72f:	add    al,0xce
  40f731:	sbb    bh,BYTE PTR [ebx-0x7e]
  40f734:	dec    eax
  40f735:	or     eax,0xddb1fbaf
  40f73a:	or     BYTE PTR [edi+0x2e],bh
  40f73d:	int3   
  40f73e:	jecxz  0x40f6cc
  40f740:	cmp    BYTE PTR [eax+0x66],ch
  40f743:	mov    eax,ds:0xc5465ff4
  40f748:	in     al,0x41
  40f74a:	mov    ecx,0x6d8fc1ae
  40f74f:	cs clc 
  40f751:	imul   esi,DWORD PTR [edx],0xbe296c72
  40f757:	in     eax,0x12
  40f759:	call   0x8ee7:0xbe8b5833
  40f760:	sub    al,0x4d
  40f762:	addr16 icebp 
  40f764:	aas    
  40f765:	ret    0xc0cd
  40f768:	cld    
  40f769:	cld    
  40f76a:	and    eax,0x21c1fdfa
  40f76f:	sbb    al,0x88
  40f771:	pop    es
  40f772:	jbe    0x40f727
  40f774:	lds    edx,FWORD PTR [ebx]
  40f776:	lods   al,BYTE PTR ds:[esi]
  40f777:	push   ecx
  40f778:	std    
  40f779:	rcr    ebx,0x47
  40f77c:	mov    eax,ds:0x63b9ed8f
  40f781:	fild   WORD PTR [ebx+0x6e]
  40f784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f785:	mov    ds:0xd902fa19,eax
  40f78a:	sub    DWORD PTR [ecx-0x5ec6bcef],esi
  40f790:	in     al,dx
  40f791:	pop    ds
  40f792:	pushf  
  40f793:	mov    ah,0x3
  40f795:	pinsrw mm4,edi,0x0
  40f799:	add    eax,0xb6247500
  40f79e:	add    bl,cl
  40f7a0:	mov    al,ds:0xfc99c6a8
  40f7a5:	dec    edx
  40f7a6:	jbe    0x40f73b
  40f7a8:	push   cs
  40f7a9:	bound  eax,QWORD PTR [di-0x75]
  40f7ad:	or     dl,BYTE PTR [ecx+0x1a]
  40f7b0:	jae    0x40f788
  40f7b2:	ins    DWORD PTR es:[edi],dx
  40f7b3:	or     al,0x57
  40f7b5:	out    0x7f,al
  40f7b7:	inc    eax
  40f7b8:	cmp    BYTE PTR [esp+esi*4-0x5435ed69],dl
  40f7bf:	lock jbe 0x40f7f4
  40f7c2:	pusha  
  40f7c3:	add    eax,0xaff55c27
  40f7c8:	loope  0x40f772
  40f7ca:	push   ds
  40f7cb:	sub    edx,esi
  40f7cd:	jo     0x40f7fa
  40f7cf:	hlt    
  40f7d0:	mov    ebx,0x6cc4ca1f
  40f7d5:	mov    ss,WORD PTR [esi+0x63eee08d]
  40f7db:	xchg   DWORD PTR [ecx+eiz*4-0x33],edi
  40f7df:	inc    ebp
  40f7e0:	or     al,0xcc
  40f7e2:	push   esi
  40f7e3:	outs   dx,BYTE PTR ds:[esi]
  40f7e4:	popf   
  40f7e5:	shr    BYTE PTR [esi],1
  40f7e7:	adc    DWORD PTR [edx+0x108ae359],esi
  40f7ed:	jae    0x40f7d8
  40f7ef:	sub    DWORD PTR [edx],0x11d96e02
  40f7f5:	addr16 xor al,0xb9
  40f7f8:	call   0xc8e0:0x1d787be
  40f7ff:	gs mov esi,0x1f9f5247
  40f805:	fld    DWORD PTR [eax]
  40f807:	and    ch,al
  40f809:	xlat   BYTE PTR ds:[ebx]
  40f80a:	(bad)  
  40f80b:	mov    cs:0x29e1dc3f,eax
  40f811:	dec    edx
  40f812:	(bad)  
  40f814:	ror    DWORD PTR [ebp-0x57],0xb1
  40f818:	mov    ebp,0x21819efe
  40f81d:	push   ebp
  40f81e:	(bad)  
  40f81f:	xlat   BYTE PTR ds:[ebx]
  40f820:	sub    eax,0x67a067ee
  40f825:	popf   
  40f826:	xchg   esi,eax
  40f827:	imul   esi,esi,0x37
  40f82a:	pop    ss
  40f82b:	inc    eax
  40f82c:	ficomp WORD PTR ds:0xb612f3bb
  40f832:	xchg   DWORD PTR [ebx+0x75],esi
  40f835:	jmp    0x9d03:0x6a09ad53
  40f83c:	mov    edi,0xa9db38a7
  40f841:	sbb    eax,0xdadc522c
  40f846:	stos   DWORD PTR es:[edi],eax
  40f847:	out    0x14,eax
  40f849:	rcr    bh,1
  40f84b:	or     DWORD PTR [eax+ebx*2],esi
  40f84e:	div    BYTE PTR [edx]
  40f850:	stos   DWORD PTR es:[edi],eax
  40f851:	ins    DWORD PTR es:[edi],dx
  40f852:	xchg   edx,eax
  40f853:	fldcw  WORD PTR [ecx+0x1]
  40f856:	pop    edi
  40f857:	jp     0x40f88d
  40f859:	mov    cl,0x91
  40f85b:	lea    ebp,[ecx+eiz*4-0x3f34cb4b]
  40f862:	sahf   
  40f863:	(bad)  
  40f864:	xchg   ebx,eax
  40f865:	outs   dx,DWORD PTR ds:[esi]
  40f866:	sahf   
  40f867:	sub    al,0xcf
  40f869:	push   edi
  40f86a:	xor    BYTE PTR [edx-0x14],dh
  40f86d:	and    ebp,ebp
  40f86f:	repnz inc esp
  40f871:	daa    
  40f872:	popa   
  40f873:	jecxz  0x40f8c6
  40f875:	xchg   edx,eax
  40f876:	(bad)
  40f879:	inc    eax
  40f87a:	cdq    
  40f87b:	push   cs
  40f87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f87d:	mov    ax,0xac2a
  40f881:	dec    ebx
  40f882:	mov    al,0x4b
  40f884:	lods   al,BYTE PTR ds:[esi]
  40f885:	mov    al,0x72
  40f887:	les    ecx,FWORD PTR [eax+eiz*1+0x363e5471]
  40f88e:	lahf   
  40f88f:	stos   DWORD PTR es:[edi],eax
  40f890:	xor    eax,0x28a27b83
  40f895:	sub    eax,0x29e97c42
  40f89a:	nop
  40f89b:	jnp    0x40f8d7
  40f89d:	mov    esp,0x2f655e0d
  40f8a2:	adc    DWORD PTR [edx],0xc0fefd66
  40f8a8:	pop    esp
  40f8a9:	cmp    al,0x53
  40f8ab:	xchg   ecx,eax
  40f8ac:	jbe    0x40f85e
  40f8ae:	cmp    bh,BYTE PTR [ebp+0x1d]
  40f8b1:	or     dl,dh
  40f8b3:	mov    ds:0xd5273b4d,al
  40f8b8:	xor    esi,DWORD PTR ds:0x9e8900b5
  40f8be:	or     BYTE PTR [edi-0x1e],dh
  40f8c1:	loopne 0x40f896
  40f8c3:	add    bl,BYTE PTR [ecx+eiz*8-0x3b7695fe]
  40f8ca:	in     al,0xca
  40f8cc:	or     BYTE PTR [ebp+eiz*1-0x21],0xae
  40f8d1:	cmp    DWORD PTR [eax+0x18857d3a],ecx
  40f8d7:	push   ds
  40f8d8:	xlat   BYTE PTR ds:[ebx]
  40f8d9:	ret    0x60a5
  40f8dc:	icebp  
  40f8dd:	xchg   edx,eax
  40f8de:	mov    dh,0x37
  40f8e0:	mov    BYTE PTR [ebp+0x5f],al
  40f8e3:	outs   dx,DWORD PTR ds:[esi]
  40f8e4:	test   eax,0x73a369df
  40f8e9:	ds ret 0xeacd
  40f8ed:	sub    BYTE PTR [esi+0x40],dl
  40f8f0:	shl    BYTE PTR [edx+edx*1-0x58af2b3a],0xe2
  40f8f8:	pop    ecx
  40f8f9:	fsub   st,st(0)
  40f8fb:	jmp    0xf214:0x41f60750
  40f902:	or     eax,0x96880946
  40f907:	pusha  
  40f908:	ins    BYTE PTR es:[edi],dx
  40f909:	addr16 in al,dx
  40f90b:	adc    DWORD PTR [esi],ebx
  40f90d:	(bad)  
  40f90e:	aad    0x8
  40f910:	xchg   esp,eax
  40f911:	retf   0xd68
  40f914:	retf   0xe31d
  40f917:	and    WORD PTR [esi+0x64c23bd8],0x4b57
  40f920:	fs xor ah,ah
  40f923:	push   es
  40f924:	push   ebp
  40f925:	fsub   DWORD PTR [eax+0x63f75f4f]
  40f92b:	mov    ebx,0xad92f63a
  40f930:	stos   BYTE PTR es:[edi],al
  40f931:	dec    edx
  40f932:	jnp    0x40f90b
  40f934:	adc    eax,0x1e7a9822
  40f939:	adc    eax,0xbbb594e7
  40f93e:	dec    ebp
  40f93f:	das    
  40f940:	stc    
  40f941:	into   
  40f942:	or     DWORD PTR [ebx],edi
  40f944:	mov    DWORD PTR [edi],eax
  40f946:	jb     0x40f909
  40f948:	mov    edx,0x740480f6
  40f94d:	and    DWORD PTR [ecx],eax
  40f94f:	aaa    
  40f950:	(bad)  
  40f951:	and    bh,al
  40f953:	test   dl,bh
  40f955:	aad    0xf2
  40f957:	xor    eax,DWORD PTR [esi+0x49]
  40f95a:	out    dx,eax
  40f95b:	imul   ebp,DWORD PTR [ecx],0x6d590a8d
  40f961:	jle    0x40f8f0
  40f963:	push   0xecd305d0
  40f968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f969:	cmp    DWORD PTR [ebx+0x5e],0xfffffff7
  40f96d:	push   0xffffffb6
  40f96f:	jge    0x40f91f
  40f971:	fcmovnb st,st(4)
  40f973:	out    dx,eax
  40f974:	ja     0x40f9c7
  40f976:	sbb    al,0xfe
  40f978:	or     al,0xc0
  40f97a:	in     eax,0xe9
  40f97c:	jecxz  0x40f91f
  40f97e:	inc    esi
  40f97f:	push   esp
  40f980:	clc    
  40f981:	je     0x40f9e1
  40f983:	aas    
  40f984:	mov    dh,0x64
  40f986:	test   DWORD PTR [ecx+ebp*1-0xc],0xd0d93a82
  40f98e:	cmp    esp,esi
  40f990:	(bad)  
  40f991:	sub    eax,0xd5c191f9
  40f996:	ficom  WORD PTR [ecx+edi*2-0x3d]
  40f99b:	mov    DWORD PTR [ecx+0x1a92c3a7],edi
  40f9a1:	retf   
  40f9a2:	lods   eax,DWORD PTR ds:[esi]
  40f9a3:	es xchg ebp,eax
  40f9a5:	in     al,dx
  40f9a6:	xchg   DWORD PTR [edx],ebp
  40f9a8:	cmp    eax,0x3e1ed410
  40f9ad:	leave  
  40f9ae:	sub    al,0xdd
  40f9b0:	mov    WORD PTR [edx],gs
  40f9b2:	lahf   
  40f9b3:	inc    edx
  40f9b4:	sbb    DWORD PTR [ecx+0x6c04c961],eax
  40f9ba:	sbb    al,0x28
  40f9bc:	mov    esi,0x5947993b
  40f9c1:	adc    al,0x83
  40f9c3:	sub    cl,bh
  40f9c5:	and    eax,0x99b7463a
  40f9ca:	enter  0xdaa3,0xf
  40f9ce:	add    al,0x95
  40f9d0:	push   cs
  40f9d1:	or     al,0xdd
  40f9d3:	hlt    
  40f9d4:	aas    
  40f9d5:	fidivr DWORD PTR [ebx+ecx*4-0x3f334656]
  40f9dc:	dec    esi
  40f9dd:	jbe    0x40f992
  40f9df:	mov    ecx,0x68eb787f
  40f9e4:	ja     0x40fa11
  40f9e6:	xchg   esp,eax
  40f9e7:	aad    0xae
  40f9e9:	or     al,0xd8
  40f9eb:	and    BYTE PTR ds:[edi+eax*8+0x3a6dc59a],ah
  40f9f3:	add    al,0x5c
  40f9f5:	cmp    ah,bh
  40f9f7:	leave  
  40f9f8:	into   
  40f9f9:	cld    
  40f9fa:	cs sbb bl,BYTE PTR cs:[ecx]
  40f9fe:	inc    esp
  40f9ff:	(bad)  
  40fa00:	push   ebx
  40fa01:	mov    bl,0x8e
  40fa03:	xor    al,0x8a
  40fa05:	push   0x2d
  40fa07:	stos   DWORD PTR es:[edi],eax
  40fa08:	or     DWORD PTR [esi-0x2d5eb873],0xffffffcc
  40fa0f:	sahf   
  40fa10:	sub    esp,edi
  40fa12:	cmp    dl,BYTE PTR [edi+0x33b4b566]
  40fa18:	mov    ds:0xffff90d1,al
  40fa1d:	mov    ecx,0x2cf2b07b
  40fa22:	(bad)  
  40fa23:	hlt    
  40fa24:	pop    ds
  40fa25:	out    0xf8,eax
  40fa27:	aam    0xd8
  40fa29:	mov    al,BYTE PTR [ecx-0x2]
  40fa2c:	and    ch,BYTE PTR [edx+eiz*2]
  40fa2f:	mov    ah,0x45
  40fa31:	call   0xcd9a:0x2d80a732
  40fa38:	pop    edi
  40fa39:	sub    BYTE PTR [ebp+0x3f],dh
  40fa3c:	xchg   ecx,eax
  40fa3d:	dec    ebx
  40fa3e:	stos   DWORD PTR es:[edi],eax
  40fa3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa40:	repnz xchg edx,eax
  40fa42:	retf   
  40fa43:	or     eax,0x76faa669
  40fa48:	lahf   
  40fa49:	xor    DWORD PTR [edx],edx
  40fa4b:	in     al,dx
  40fa4c:	pop    edx
  40fa4d:	cmp    BYTE PTR [esi+edi*1],bh
  40fa50:	xchg   DWORD PTR [esp+esi*2],ebx
  40fa53:	clc    
  40fa54:	mov    ds,WORD PTR [edx]
  40fa56:	mov    al,0xe3
  40fa58:	jp     0x40fa2d
  40fa5a:	cld    
  40fa5b:	clc    
  40fa5c:	fstp   DWORD PTR [esi+0x7ec5025b]
  40fa62:	outs   dx,BYTE PTR ds:[esi]
  40fa63:	arpl   ax,si
  40fa65:	dec    ecx
  40fa66:	dec    ebx
  40fa67:	fsub   DWORD PTR [esi-0x769bf3b6]
  40fa6d:	sbb    al,0xb5
  40fa6f:	fcmovnu st,st(0)
  40fa71:	sbb    eax,0x1605fdbb
  40fa76:	and    DWORD PTR [ecx-0x13b55007],esi
  40fa7c:	loop   0x40fa44
  40fa7e:	adc    BYTE PTR [eax+0x6f8fa682],0x39
  40fa85:	sub    BYTE PTR es:[eax+0x4f],ah
  40fa89:	mov    eax,ds:0x907a945b
  40fa8e:	push   ebx
  40fa8f:	leave  
  40fa90:	inc    ecx
  40fa91:	lock dec edi
  40fa93:	aam    0x6d
  40fa95:	fs and eax,0xbc4196d2
  40fa9b:	adc    esp,DWORD PTR [edi]
  40fa9d:	outs   dx,BYTE PTR ds:[esi]
  40fa9e:	ja     0x40fafd
  40faa0:	shl    DWORD PTR ds:0x6f71b366,0x33
  40faa7:	sbb    DWORD PTR [ebp+0x5f650b83],ecx
  40faad:	dec    eax
  40faae:	mov    al,ds:0xaebe7e89
  40fab3:	push   0x61688b95
  40fab8:	cli    
  40fab9:	mov    ebx,0x5c68aaa1
  40fabe:	mov    ds:0x917310ed,eax
  40fac3:	xchg   edx,eax
  40fac4:	nop
  40fac5:	rol    DWORD PTR [edx-0x2f],0xc8
  40fac9:	jge    0x40fb30
  40facb:	jecxz  0x40fae8
  40facd:	inc    eax
  40face:	fwait
  40facf:	int    0x6f
  40fad1:	fistp  DWORD PTR [ebx+0x3d]
  40fad4:	mov    ds,WORD PTR [ebx+ebx*4+0x78]
  40fad8:	mov    esi,0xf77396d9
  40fadd:	arpl   WORD PTR [edi+esi*2+0x9499c17],si
  40fae4:	test   ah,al
  40fae6:	adc    BYTE PTR [edi+0x743aff9e],dh
  40faec:	add    al,0xf5
  40faee:	adc    ecx,DWORD PTR [eax]
  40faf0:	jnp    0x40fb4b
  40faf2:	aaa    
  40faf3:	popf   
  40faf4:	repz (bad) 
  40faf6:	jnp    0x40fabb
  40faf8:	inc    esp
  40faf9:	imul   edx,DWORD PTR [ebp+0x57],0x2f43b3d
  40fb00:	add    edi,edx
  40fb02:	sub    al,0x1
  40fb04:	iret   
  40fb05:	daa    
  40fb06:	scas   al,BYTE PTR es:[edi]
  40fb07:	imul   eax,edi,0xffffff82
  40fb0a:	test   al,0xf4
  40fb0c:	add    BYTE PTR [edx-0x67101f94],0xe4
  40fb13:	mov    BYTE PTR [edx+ebp*1-0x7101e28b],cl
  40fb1a:	xchg   ebx,eax
  40fb1b:	adc    eax,0xe4deaddd
  40fb20:	aas    
  40fb21:	loope  0x40fb5e
  40fb23:	pop    ss
  40fb24:	ins    BYTE PTR es:[edi],dx
  40fb25:	cmovnp edi,DWORD PTR [ebx+0x72340a06]
  40fb2c:	or     dl,bh
  40fb2e:	mov    edi,?
  40fb30:	test   DWORD PTR [eax-0x474f5056],0xd8cb7e0d
  40fb3a:	out    dx,al
  40fb3b:	pusha  
  40fb3c:	ror    al,1
  40fb3e:	stos   BYTE PTR es:[edi],al
  40fb3f:	and    BYTE PTR [ecx],al
  40fb41:	lods   eax,DWORD PTR ds:[esi]
  40fb42:	pop    ss
  40fb43:	adc    ch,BYTE PTR [edx-0x63]
  40fb46:	fwait
  40fb47:	mov    DWORD PTR [ecx-0x22],ebp
  40fb4a:	and    esp,DWORD PTR [eiz*8-0x5d32907b]
  40fb51:	cs mov esp,edi
  40fb54:	and    eax,0xc66f8b9c
  40fb59:	add    BYTE PTR [edx-0x62b5554f],0xe3
  40fb60:	iret   
  40fb61:	ss jns 0x40fb9c
  40fb64:	mov    cl,0x49
  40fb66:	or     al,0x11
  40fb68:	cmp    BYTE PTR [ebx+0x60cd6b0f],ah
  40fb6e:	(bad)  
  40fb6f:	rcr    BYTE PTR ds:0xbfb4e385,cl
  40fb75:	or     BYTE PTR [ecx+0x1a],bh
  40fb78:	pop    edi
  40fb79:	sub    BYTE PTR [esi+0x72],0x90
  40fb7d:	scas   al,BYTE PTR es:[edi]
  40fb7e:	stos   BYTE PTR es:[edi],al
  40fb7f:	fldenv [eax-0x62]
  40fb82:	push   esp
  40fb83:	xchg   edi,eax
  40fb84:	xchg   ecx,eax
  40fb85:	mov    eax,0xf4105678
  40fb8a:	jge    0x40fb41
  40fb8c:	dec    edi
  40fb8d:	pop    ebp
  40fb8e:	sub    eax,0x45b8fc3a
  40fb93:	push   edi
  40fb94:	jns    0x40fbc5
  40fb96:	loope  0x40fbb7
  40fb98:	popa   
  40fb99:	daa    
  40fb9a:	sbb    al,0x62
  40fb9c:	aam    0xf2
  40fb9e:	push   ecx
  40fb9f:	sbb    al,0x6f
  40fba1:	xchg   ebp,eax
  40fba2:	add    DWORD PTR [edi-0xc],edx
  40fba5:	iret   
  40fba6:	adc    bh,BYTE PTR ds:0xf0e34493
  40fbac:	sti    
  40fbad:	sub    eax,DWORD PTR [esp+ebp*2-0x4b]
  40fbb1:	pop    ds
  40fbb2:	inc    edi
  40fbb3:	add    DWORD PTR [ebp+0x34f79dd],edx
  40fbb9:	pop    edi
  40fbba:	and    al,0xe6
  40fbbc:	aad    0x45
  40fbbe:	out    dx,eax
  40fbbf:	fisttp WORD PTR ds:0x5883df00
  40fbc5:	dec    edi
  40fbc6:	neg    ebp
  40fbc8:	mov    ebx,DWORD PTR [edx-0x4a8e6502]
  40fbce:	jo     0x40fc3e
  40fbd0:	add    eax,0x8bc10ace
  40fbd5:	pop    ebx
  40fbd6:	popf   
  40fbd7:	mov    ecx,0xc3ada079
  40fbdc:	push   es
  40fbdd:	inc    ebx
  40fbde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbdf:	popa   
  40fbe0:	mov    eax,ds:0x88a919b0
  40fbe5:	fsub   QWORD PTR [ecx]
  40fbe7:	or     ah,BYTE PTR [eax-0x656f122f]
  40fbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbee:	sub    dh,BYTE PTR [ebx+0x7d521d82]
  40fbf4:	in     al,dx
  40fbf5:	mov    esp,0xb2a2366e
  40fbfa:	into   
  40fbfb:	test   al,0x78
  40fbfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbfe:	retf   
  40fbff:	inc    ecx
  40fc00:	and    ch,dh
  40fc02:	xor    BYTE PTR [esi-0x3fa4b02],ch
  40fc08:	ficom  WORD PTR fs:[bx+si]
  40fc0c:	sub    eax,0x75ccc48
  40fc11:	mov    ebx,0x8779cda9
  40fc16:	inc    ebp
  40fc17:	cmp    edi,edx
  40fc19:	mov    esp,DWORD PTR [edi+0x27]
  40fc1c:	sub    eax,0x6f6d604c
  40fc21:	mov    al,0x3c
  40fc23:	and    BYTE PTR [esi],cl
  40fc25:	std    
  40fc26:	cli    
  40fc27:	mov    esp,0xfbd3dc50
  40fc2c:	jg     0x40fca8
  40fc2e:	ret    0xffef
  40fc31:	shrd   DWORD PTR [eax],ebp,0x7f
  40fc35:	lock (bad) 
  40fc38:	sbb    dh,BYTE PTR [esi+0x61ac330e]
  40fc3e:	icebp  
  40fc3f:	xor    DWORD PTR [ecx+esi*2],edi
  40fc42:	mov    bh,0x37
  40fc44:	cmp    cl,BYTE PTR [edi]
  40fc46:	inc    esi
  40fc47:	sti    
  40fc48:	add    eax,0x2a15dfba
  40fc4d:	ret    
  40fc4e:	dec    esp
  40fc4f:	mov    al,0xeb
  40fc51:	cmc    
  40fc52:	add    al,0x83
  40fc54:	and    ecx,DWORD PTR [edx+0x359d174e]
  40fc5a:	leave  
  40fc5b:	pop    ss
  40fc5c:	adc    ecx,ebp
  40fc5e:	daa    
  40fc5f:	jmp    0x7921a4fe
  40fc64:	and    al,0xd5
  40fc66:	mov    WORD PTR [ebp-0x50],?
  40fc69:	adc    BYTE PTR [esi+0x3ae187cc],ah
  40fc6f:	mov    al,ds:0x8c78f0a1
  40fc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc75:	fs xchg esp,eax
  40fc77:	jp     0x40fc98
  40fc79:	xchg   DWORD PTR [ecx+0x18],ebx
  40fc7c:	shl    BYTE PTR [ebx+0x5d12b63f],cl
  40fc82:	icebp  
  40fc83:	pop    ebx
  40fc84:	cmp    esp,ebx
  40fc86:	pop    ebx
  40fc87:	pusha  
  40fc88:	rcl    DWORD PTR [edi],cl
  40fc8a:	or     al,0x69
  40fc8c:	mov    cl,0x90
  40fc8e:	stos   BYTE PTR es:[edi],al
  40fc8f:	xchg   ebp,eax
  40fc90:	rcl    BYTE PTR [eax+0x1b4d8ee8],cl
  40fc96:	(bad)  
  40fc97:	neg    ecx
  40fc99:	nop
  40fc9a:	stc    
  40fc9b:	inc    ecx
  40fc9c:	adc    esp,DWORD PTR es:[ecx-0x5d]
  40fca0:	mov    ebp,gs
  40fca2:	jge    0x40fd1d
  40fca4:	leave  
  40fca5:	in     al,0x63
  40fca7:	cs daa 
  40fca9:	(bad)  
  40fcaa:	lds    ebx,FWORD PTR [ebx+0x18]
  40fcad:	xlat   BYTE PTR ds:[ebx]
  40fcae:	es mov edi,0x78ade52d
  40fcb4:	and    al,0x19
  40fcb6:	outs   dx,DWORD PTR ds:[esi]
  40fcb7:	and    DWORD PTR [si],ecx
  40fcba:	inc    ebp
  40fcbb:	lahf   
  40fcbc:	pop    esp
  40fcbd:	mov    esp,0xdc500dc3
  40fcc2:	call   0xeb409649
  40fcc7:	jmp    0x40fce2
  40fcc9:	and    eax,0xb5cbdc20
  40fcce:	aad    0x73
  40fcd0:	shl    DWORD PTR [edx-0x7ac6d86f],cl
  40fcd6:	push   ds
  40fcd7:	(bad)  
  40fcd8:	cwde   
  40fcd9:	dec    ebx
  40fcda:	data16 jns 0x40fc61
  40fcdd:	mov    edx,DWORD PTR [eax-0x57fe6164]
  40fce3:	enter  0xacca,0x1d
  40fce7:	imul   ebx,DWORD PTR [esi],0xfffffff1
  40fcea:	in     al,dx
  40fceb:	clc    
  40fcec:	sbb    ch,ah
  40fcee:	xchg   edi,eax
  40fcf0:	xchg   BYTE PTR [eax-0x44],dl
  40fcf3:	and    ax,0x4857
  40fcf7:	pop    ds
  40fcf8:	xchg   BYTE PTR [ecx],bl
  40fcfa:	jbe    0x40fd4c
  40fcfc:	cmp    al,0x74
  40fcfe:	jg     0x40fc88
  40fd00:	adc    edx,DWORD PTR [ecx+esi*2-0x21]
  40fd04:	fidiv  DWORD PTR [edx+0x58]
  40fd07:	add    al,0xf7
  40fd09:	lea    eax,[esi+0x3e5a10a9]
  40fd0f:	or     eax,0xcd289d9f
  40fd14:	pop    ebx
  40fd15:	pop    eax
  40fd16:	jge    0x40fcd2
  40fd18:	stos   DWORD PTR es:[edi],eax
  40fd19:	leave  
  40fd1a:	sar    BYTE PTR [ebp-0x48613be2],1
  40fd20:	and    al,0xbe
  40fd22:	fcomp  st(1)
  40fd24:	or     bh,ah
  40fd26:	ret    
  40fd27:	or     ebx,0xe7266151
  40fd2d:	jge    0x40fd0b
  40fd2f:	dec    edx
  40fd30:	test   ah,ah
  40fd32:	jno    0x40fd06
  40fd34:	push   edi
  40fd35:	stc    
  40fd36:	sbb    eax,0x70a4d44f
  40fd3b:	imul   esp,DWORD PTR [edx-0x19],0x4f
  40fd3f:	jp     0x40fd24
  40fd41:	inc    edi
  40fd42:	loop   0x40fd23
  40fd44:	sub    al,0xc9
  40fd46:	mov    dl,0xf9
  40fd48:	xor    DWORD PTR [esi],ebx
  40fd4a:	sub    DWORD PTR [ecx+0x3d3abe26],edi
  40fd50:	(bad)  
  40fd51:	or     ecx,DWORD PTR [ecx+ecx*2]
  40fd54:	xor    DWORD PTR ds:0x2eef13b9,0xa9e0a2b8
  40fd5e:	shl    BYTE PTR [ebx+edi*8-0x2c],0xed
  40fd63:	mov    ds:0x125e8bda,al
  40fd68:	not    al
  40fd6a:	das    
  40fd6b:	and    ebx,DWORD PTR [esi]
  40fd6d:	dec    edx
  40fd6e:	xchg   ecx,eax
  40fd6f:	pop    ecx
  40fd70:	aam    0x71
  40fd72:	sub    DWORD PTR [esi-0x244b5dbd],esi
  40fd78:	mov    esp,0x1a29da9b
  40fd7d:	icebp  
  40fd7e:	lods   al,BYTE PTR ss:[esi]
  40fd80:	cmp    edx,ebx
  40fd82:	mov    ah,0xbe
  40fd84:	lods   al,BYTE PTR ds:[esi]
  40fd85:	call   0xaccd:0x224425bf
  40fd8c:	adc    BYTE PTR [ecx+0x1e],ch
  40fd8f:	push   ebx
  40fd90:	mov    cl,0x3a
  40fd92:	nop
  40fd93:	rcr    BYTE PTR [edi-0x4f],0x65
  40fd97:	test   BYTE PTR ds:0x15aadff1,al
  40fd9d:	pmulhw mm2,QWORD PTR [ecx+0x63bd49b3]
  40fda4:	adc    eax,0xb7949aa3
  40fda9:	mov    ebp,0x449a5bb4
  40fdae:	mov    ebx,0xfb89ff96
  40fdb3:	push   0xc1a85b6f
  40fdb8:	jl     0x40fd9e
  40fdba:	out    0x7b,eax
  40fdbc:	cmp    eax,0xfd4a1ae4
  40fdc1:	cmc    
  40fdc2:	retf   0xfd26
  40fdc5:	rcr    DWORD PTR [ebx-0x19e7c626],cl
  40fdcb:	aaa    
  40fdcc:	fwait
  40fdcd:	sub    esi,esi
  40fdcf:	ret    
  40fdd0:	ins    BYTE PTR es:[edi],dx
  40fdd1:	jns    0x40fe1f
  40fdd3:	dec    edx
  40fdd4:	mov    eax,0xe94ab8c1
  40fdd9:	or     DWORD PTR [edx],edx
  40fddb:	(bad)  
  40fddc:	xor    esi,DWORD PTR [edi]
  40fdde:	mov    eax,ds:0x6a39070f
  40fde3:	lods   al,BYTE PTR ds:[esi]
  40fde4:	ds adc ch,cl
  40fde7:	int3   
  40fde8:	inc    edx
  40fde9:	fld    TBYTE PTR [edi]
  40fdeb:	std    
  40fdec:	adc    edx,esi
  40fdee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdef:	(bad)  
  40fdf0:	ja     0x40fd72
  40fdf2:	jno    0x40fe3a
  40fdf4:	pop    edx
  40fdf5:	sbb    al,0x69
  40fdf7:	push   es
  40fdf8:	xor    DWORD PTR [edi+0x39c64a8d],esi
  40fdfe:	mov    ecx,0x29551bd1
  40fe03:	cmp    edx,ecx
  40fe05:	mov    dl,0x38
  40fe07:	pushf  
  40fe08:	or     DWORD PTR [ecx-0x24],edx
  40fe0b:	fadd   QWORD PTR [edi-0x2721fb01]
  40fe11:	cld    
  40fe12:	or     ah,dl
  40fe14:	hlt    
  40fe15:	xchg   edx,eax
  40fe16:	rep outs dx,BYTE PTR ds:[esi]
  40fe18:	hlt    
  40fe19:	ss sbb eax,0xbf2bb946
  40fe1f:	scas   eax,DWORD PTR es:[edi]
  40fe20:	inc    esp
  40fe21:	push   ecx
  40fe22:	hlt    
  40fe23:	call   FWORD PTR [edx-0x6a258332]
  40fe29:	add    dl,BYTE PTR [ebx+0x59]
  40fe2c:	jmp    0xa786f69
  40fe31:	xor    DWORD PTR [edi+0x68],edx
  40fe34:	xchg   esi,eax
  40fe35:	jl     0x40fe1b
  40fe37:	imul   eax,esi,0xa8ab197
  40fe3d:	int3   
  40fe3e:	fild   QWORD PTR [ebp+0x17]
  40fe41:	in     al,dx
  40fe42:	aaa    
  40fe43:	scas   eax,DWORD PTR es:[edi]
  40fe44:	xor    dh,BYTE PTR ds:0xe590455c
  40fe4a:	jge    0x40fdf5
  40fe4c:	(bad)  
  40fe4d:	sub    DWORD PTR es:[edx+ebp*4+0x17],edi
  40fe52:	test   eax,0xad8d711a
  40fe57:	mov    ebx,0x5c953651
  40fe5c:	jg     0x40fe3b
  40fe5e:	xchg   esi,eax
  40fe5f:	aad    0x26
  40fe61:	sbb    al,0x1e
  40fe63:	mov    cl,0x8f
  40fe65:	in     eax,dx
  40fe66:	push   0x4701f55b
  40fe6b:	out    0x58,al
  40fe6d:	ja     0x40fe65
  40fe6f:	fidiv  WORD PTR [ecx]
  40fe71:	jnp    0x40fe05
  40fe73:	jecxz  0x40fed3
  40fe75:	call   0xbc092677
  40fe7a:	jns    0x40fed7
  40fe7c:	sub    esi,0x44
  40fe7f:	imul   esi,DWORD PTR [eax],0x5d32ce88
  40fe85:	stc    
  40fe86:	inc    eax
  40fe87:	ret    0x85d
  40fe8a:	out    0x6e,al
  40fe8c:	ss mov bl,0x84
  40fe8f:	(bad)  
  40fe90:	lods   al,BYTE PTR ds:[esi]
  40fe91:	mov    ebx,0x19a44623
  40fe96:	xchg   DWORD PTR [edi+ecx*2],edx
  40fe99:	pop    esp
  40fe9a:	mov    eax,ss:0x737ddfe5
  40fea0:	and    al,0x3c
  40fea2:	enter  0x6cfd,0xdf
  40fea6:	add    cl,dh
  40fea8:	out    dx,al
  40fea9:	push   edi
  40feaa:	enter  0x258,0x94
  40feae:	jns    0x40ff29
  40feb0:	pop    ebx
  40feb1:	xchg   edx,eax
  40feb2:	outs   dx,DWORD PTR ds:[esi]
  40feb3:	pop    ss
  40feb4:	pop    esi
  40feb5:	mov    al,dh
  40feb7:	lods   al,BYTE PTR ds:[esi]
  40feb8:	dec    ebx
  40feb9:	sahf   
  40feba:	dec    esi
  40febb:	jo     0x40fe62
  40febd:	or     eax,DWORD PTR [eax-0x5a3879f4]
  40fec3:	mov    dl,0xbb
  40fec5:	ss pop es
  40fec7:	pop    esp
  40fec8:	cmp    eax,0x88b71b96
  40fecd:	hlt    
  40fece:	xor    al,0xba
  40fed0:	aaa    
  40fed1:	or     eax,0x6da79197
  40fed6:	or     dh,0x2b
  40fed9:	adc    dl,BYTE PTR [ecx-0x58]
  40fedc:	cmp    bh,dh
  40fede:	(bad)  
  40fedf:	cld    
  40fee0:	jg     0x40ff0f
  40fee2:	hlt    
  40fee3:	inc    edi
  40fee4:	and    DWORD PTR [edi+0x51913bed],0x13
  40feeb:	into   
  40feec:	xor    eax,0x245c57c7
  40fef1:	je     0x40ff01
  40fef3:	mov    ebp,0x34e75f37
  40fef8:	call   0x1583:0x14a70f4b
  40feff:	xchg   ecx,eax
  40ff00:	xor    ebp,DWORD PTR [eax+ebp*1-0x6f]
  40ff04:	jo     0x40ff6d
  40ff06:	stos   BYTE PTR es:[edi],al
  40ff07:	push   ds
  40ff08:	xchg   BYTE PTR [esi+0x13],dh
  40ff0b:	jle    0x40fee6
  40ff0d:	addr16 and al,0xe5
  40ff10:	mov    dh,BYTE PTR [ebp+0x15]
  40ff13:	mov    esi,0xace110a5
  40ff18:	inc    edi
  40ff19:	xor    al,0x76
  40ff1b:	dec    esp
  40ff1c:	(bad)  
  40ff1d:	mov    ds:0xc694468e,al
  40ff22:	outs   dx,BYTE PTR ds:[esi]
  40ff23:	cmp    ecx,esp
  40ff25:	mov    BYTE PTR [edx+0x707c2861],dh
  40ff2b:	dec    edi
  40ff2c:	inc    ecx
  40ff2d:	clc    
  40ff2e:	mov    esp,0x19b559c9
  40ff33:	mov    ecx,0xfdfc6373
  40ff38:	call   0x53df:0x76f9e0b4
  40ff3f:	jnp    0x40fed3
  40ff41:	fidiv  DWORD PTR [edi]
  40ff43:	pop    ebx
  40ff44:	cld    
  40ff45:	in     eax,dx
  40ff46:	lea    ecx,[esi-0x6f27a4fc]
  40ff4c:	pop    ecx
  40ff4d:	pop    esp
  40ff4e:	and    ebx,ebp
  40ff50:	and    al,0x32
  40ff52:	mov    bh,0xae
  40ff54:	cmc    
  40ff55:	je     0x40ff72
  40ff57:	aad    0x0
  40ff59:	xor    DWORD PTR [ecx],ebp
  40ff5b:	dec    edi
  40ff5c:	les    ebp,FWORD PTR [ecx-0x30]
  40ff5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff60:	mov    BYTE PTR [esp+eax*2],bh
  40ff63:	cwde   
  40ff64:	sbb    eax,0x6e8f4c1d
  40ff69:	dec    esi
  40ff6a:	inc    esi
  40ff6b:	xchg   esp,eax
  40ff6c:	int    0x57
  40ff6e:	outs   dx,BYTE PTR ds:[esi]
  40ff6f:	dec    ebp
  40ff70:	push   es
  40ff71:	out    0x52,al
  40ff73:	fs cmp eax,0xf873779
  40ff79:	pop    ebp
  40ff7a:	mov    BYTE PTR [edi-0x5d],dh
  40ff7d:	ficom  DWORD PTR [ebx+0xc7b49d]
  40ff83:	push   ebp
  40ff84:	pop    edx
  40ff85:	inc    esi
  40ff86:	mov    ebx,0xce911bbe
  40ff8b:	push   cs
  40ff8c:	jmp    0xdc0b8fcc
  40ff91:	icebp  
  40ff92:	cs loopne 0x40ffd6
  40ff95:	cmp    al,0xd7
  40ff97:	cmp    BYTE PTR [eax-0x7f0709cf],0xcf
  40ff9e:	mov    eax,0xb1015ed9
  40ffa3:	pop    ecx
  40ffa4:	(bad)  
  40ffa5:	adc    edi,edi
  40ffa7:	mov    bl,0x89
  40ffa9:	mov    cl,0xd5
  40ffab:	xor    eax,0x9b60d5ce
  40ffb0:	inc    edx
  40ffb1:	cmp    eax,0x41d8c42b
  40ffb6:	mov    edx,0xcef5e9de
  40ffbb:	adc    DWORD PTR [ebp+edx*8-0x196456e5],edx
  40ffc2:	dec    edi
  40ffc3:	sbb    al,0x49
  40ffc5:	add    al,0xb7
  40ffc7:	retf   
  40ffc8:	call   0x1a3a:0x3a5d7787
  40ffcf:	fucomip st,st(2)
  40ffd1:	clc    
  40ffd2:	idiv   esp
  40ffd4:	out    0x89,al
  40ffd6:	not    edi
  40ffd8:	push   es
  40ffd9:	adc    dh,dh
  40ffdb:	dec    esi
  40ffdc:	test   al,0x82
  40ffde:	ret    0x4a40
  40ffe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe2:	adc    esi,DWORD PTR [edi+0x2f]
  40ffe5:	jmp    0x40ffac
  40ffe7:	ror    DWORD PTR [ebx],cl
  40ffe9:	mov    es:0x6859eec0,eax
  40ffef:	mov    al,ds:0xdb8d8465
  40fff4:	call   0x4c81:0xa9b690c6
  40fffb:	or     ebx,edx
  40fffd:	lods   eax,DWORD PTR ds:[esi]
  40fffe:	dec    edx
  40ffff:	sar    ecx,1
  410001:	and    eax,ecx
  410003:	jg     0x410035
  410005:	jb     0x41003f
  410007:	dec    edi
  410008:	xor    ah,BYTE PTR [edx+0x2aa7e8fc]
  41000e:	adc    al,bl
  410010:	adc    DWORD PTR [ebp-0x5c7c6a40],esi
  410016:	cs push 0x34456f63
  41001c:	or     al,0x37
  41001e:	xor    edx,DWORD PTR [edx]
  410020:	jnp    0x40fffb
  410022:	mov    al,ds:0x42a0801a
  410027:	retf   
  410028:	loop   0x40ffea
  41002a:	xor    DWORD PTR [ebp+edi*2-0x1921c086],ecx
  410031:	push   edx
  410032:	out    0x5f,al
  410034:	shr    BYTE PTR [ebx-0x5be39645],0xb9
  41003b:	jmp    0x4100b6
  41003d:	fistp  QWORD PTR [edi-0x3b0aa25a]
  410043:	test   BYTE PTR [eax-0x4c],dh
  410046:	iret   
  410047:	call   0x7d53:0x9347d516
  41004e:	cs into 
  410050:	lahf   
  410051:	and    BYTE PTR [eax-0x813693c],dh
  410057:	adc    ch,BYTE PTR [eax-0x6788aae5]
  41005d:	shl    BYTE PTR [ebx],0x81
  410060:	les    esi,FWORD PTR [edi-0x213ec677]
  410066:	adc    DWORD PTR [edx+0x56],esi
  410069:	or     eax,0x1855ead4
  41006e:	pop    edx
  41006f:	fld    TBYTE PTR [edx-0x51]
  410072:	mov    ebx,edi
  410074:	loopne 0x410020
  410076:	mov    cs,ecx
  410078:	stc    
  410079:	inc    ebx
  41007a:	aaa    
  41007b:	sbb    DWORD PTR [ecx+0x72f7e464],esp
  410081:	mov    bh,0x65
  410083:	jae    0x410074
  410085:	jg     0x41008b
  410087:	mov    al,0xdd
  410089:	jns    0x410082
  41008b:	jmp    0x9d58:0x20c6cab6
  410092:	add    ecx,DWORD PTR [edi-0x1e]
  410095:	pop    edx
  410096:	sub    dh,BYTE PTR [ebx-0x559ad37f]
  41009c:	xchg   ecx,eax
  41009d:	push   ecx
  41009e:	mov    edx,0x5357506b
  4100a3:	mov    bl,0x5a
  4100a5:	dec    ebp
  4100a6:	add    dl,BYTE PTR [edi+ebp*8]
  4100a9:	xor    cl,BYTE PTR [ecx-0x5e]
  4100ac:	fisttp WORD PTR [ebx-0x4452aa44]
  4100b2:	movhps QWORD PTR [edx-0x60],xmm0
  4100b6:	xor    esp,eax
  4100b8:	ins    BYTE PTR es:[edi],dx
  4100b9:	les    ebp,FWORD PTR [ecx]
  4100bb:	mov    al,ds:0x5be170b3
  4100c0:	and    eax,0x5e788b52
  4100c5:	or     dl,dh
  4100c7:	test   eax,0x32e97618
  4100cc:	mov    ebp,0x7628b61f
  4100d1:	or     dl,BYTE PTR [ecx]
  4100d3:	dec    ebx
  4100d4:	aad    0x62
  4100d6:	out    dx,eax
  4100d7:	lods   al,BYTE PTR ds:[esi]
  4100d8:	int    0x99
  4100da:	adc    edx,ecx
  4100dc:	and    DWORD PTR [ebx-0x12a21b0c],0xffffffcd
  4100e3:	enter  0x68c7,0xe9
  4100e7:	jnp    0x4100e5
  4100e9:	jae    0x4100b6
  4100eb:	and    BYTE PTR [edx+0x43],dh
  4100ee:	push   edx
  4100ef:	inc    ecx
  4100f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100f1:	mov    bh,0x5e
  4100f3:	lods   eax,DWORD PTR ds:[esi]
  4100f4:	push   eax
  4100f5:	mov    ds:0xd38bf820,eax
  4100fa:	jg     0x4100b6
  4100fc:	or     al,0xd4
  4100fe:	call   0x6b96fa83
  410103:	aam    0x35
  410105:	cmp    ch,BYTE PTR [edx-0x10eef175]
  41010b:	cmp    BYTE PTR [esi-0x13],0xc7
  41010f:	cdq    
  410110:	cld    
  410111:	popf   
  410112:	push   cs
  410113:	ror    BYTE PTR [edi-0x1c],1
  410116:	and    BYTE PTR [ebp+0x6],0x5b
  41011a:	pcmpgtw mm2,QWORD PTR [ebp+0x6cabd057]
  410121:	fxch   st(1)
  410123:	xchg   BYTE PTR [ecx*2-0x12258d3],al
  41012a:	add    eax,0x30ca9ea9
  41012f:	fnsave [esi+0xae093a6]
  410135:	(bad)  
  410136:	adc    eax,0xa1b37e05
  41013b:	dec    ebx
  41013c:	and    DWORD PTR [ebp+0x4e696292],esi
  410142:	mov    eax,0xca5bc15a
  410147:	ss jl  0x4100cf
  41014a:	pop    ds
  41014b:	lods   eax,DWORD PTR ds:[esi]
  41014c:	inc    edx
  41014d:	add    BYTE PTR [ebx+0x26ca7771],ch
  410153:	dec    esp
  410154:	jb     0x4101a4
  410156:	and    DWORD PTR [ebx],0x5b4fbeff
  41015c:	inc    edx
  41015d:	lds    edx,FWORD PTR [edx]
  41015f:	sub    bh,BYTE PTR [ebx]
  410161:	push   cs
  410162:	mov    eax,ds:0xf01d88a4
  410167:	pusha  
  410168:	je     0x4101bd
  41016a:	and    DWORD PTR [edx-0x38],edx
  41016d:	std    
  41016e:	mov    BYTE PTR [edx+0x7e],bh
  410171:	(bad)  
  410172:	xlat   BYTE PTR ds:[ebx]
  410173:	pop    ss
  410174:	lea    esp,[edx]
  410176:	pop    ebp
  410177:	jnp    0x41015a
  410179:	cwde   
  41017a:	shr    DWORD PTR [edi+0x70ede6c0],0xe0
  410181:	scas   al,BYTE PTR es:[edi]
  410182:	(bad)  
  410183:	cmp    cl,BYTE PTR [edx+0xc]
  410186:	ret    0x5eac
  410189:	push   cs
  41018a:	cmp    DWORD PTR [ecx+0x64],edi
  41018d:	jno    0x410135
  41018f:	sbb    BYTE PTR [edx],cl
  410191:	jo     0x4101d4
  410193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410194:	ds stc 
  410196:	push   0xd35a14f5
  41019b:	xchg   ebp,eax
  41019c:	nop
  41019d:	jmp    0x5ec4:0xf3b86047
  4101a4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4101a6:	daa    
  4101a7:	add    ch,bh
  4101a9:	mov    dh,0x8e
  4101ab:	stos   DWORD PTR es:[edi],eax
  4101ac:	xlat   BYTE PTR ds:[ebx]
  4101ad:	mov    ecx,0xef378326
  4101b2:	and    cl,BYTE PTR [edx]
  4101b4:	mov    eax,0xb98f2f83
  4101b9:	arpl   WORD PTR [edx-0x2c],ax
  4101bc:	mov    eax,fs:0x2f74d855
  4101c2:	sub    al,0xd5
  4101c4:	xchg   BYTE PTR [ecx],bl
  4101c6:	jbe    0x41022a
  4101c8:	add    al,0x88
  4101ca:	or     edx,0xffffff9a
  4101cd:	out    0xd3,eax
  4101cf:	sub    dh,bl
  4101d1:	test   DWORD PTR [eax+0x8],ebx
  4101d4:	sar    DWORD PTR [edi+eiz*1-0x4a],1
  4101d8:	adc    al,dl
  4101da:	jge    0x41022e
  4101dc:	add    BYTE PTR [eax-0x42741a82],ch
  4101e2:	xchg   dh,cl
  4101e4:	push   es
  4101e5:	mov    DWORD PTR [ebp+edx*1-0xa9cc404],eax
  4101ec:	mov    al,ds:0xa9550081
  4101f1:	sub    al,0x87
  4101f3:	sub    eax,0x4b765e9e
  4101f8:	lods   eax,DWORD PTR ds:[esi]
  4101f9:	(bad)  
  4101fa:	dec    edx
  4101fb:	jle    0x4101b8
  4101fd:	ins    DWORD PTR es:[edi],dx
  4101fe:	dec    edx
  4101ff:	sbb    BYTE PTR [esi],ah
  410201:	sbb    edi,DWORD PTR [edx+0x5b546cbd]
  410207:	mov    edi,0xe2cecf0b
  41020c:	loope  0x410207
  41020e:	mov    eax,ds:0xf9771934
  410213:	fwait
  410214:	or     cl,BYTE PTR [ecx-0xe]
  410217:	mov    al,BYTE PTR [esi+0x71]
  41021a:	xchg   DWORD PTR [eax-0x91c7bdd],ecx
  410220:	dec    ecx
  410221:	fstp   DWORD PTR cs:[ebp-0x6]
  410225:	cmp    BYTE PTR [edx-0x25],ch
  410228:	jg     0x41027d
  41022a:	and    BYTE PTR ds:0xe1d836a9,ah
  410230:	scas   al,BYTE PTR es:[edi]
  410231:	(bad)  
  410233:	daa    
  410234:	pop    eax
  410235:	fidiv  DWORD PTR [ebx+eiz*4-0x63]
  410239:	pop    ebx
  41023a:	adc    edx,edx
  41023c:	push   0xdb551511
  410241:	pop    esi
  410242:	sbb    ebp,DWORD PTR [edi]
  410244:	outs   dx,DWORD PTR ds:[esi]
  410245:	xchg   DWORD PTR [ebx+0xb],ebp
  410248:	cmp    esi,ebp
  41024a:	std    
  41024b:	xchg   BYTE PTR [eax+0x4f2e42d6],bh
  410251:	mov    eax,DWORD PTR [ecx-0xc]
  410254:	addr16 retf 
  410256:	aam    0x64
  410258:	jle    0x41024c
  41025a:	mov    DWORD PTR [esi],esp
  41025c:	jnp    0x410299
  41025e:	fsub   st,st(4)
  410260:	push   cs
  410261:	add    al,0x46
  410263:	mov    dh,0x6e
  410265:	xlat   BYTE PTR ds:[ebx]
  410266:	pop    ss
  410267:	scas   eax,DWORD PTR es:[edi]
  410268:	sbb    cl,ah
  41026a:	rcr    DWORD PTR cs:[bp+di+0x43],0x57
  410270:	sti    
  410271:	dec    eax
  410272:	sub    BYTE PTR ds:0x36474bfb,cl
  410278:	or     DWORD PTR [edi+0x46],eax
  41027b:	pop    esi
  41027c:	and    DWORD PTR [esi],ebp
  41027e:	es gs sub eax,0x1acfd409
  410285:	sub    al,0x9
  410287:	retf   0x852d
  41028a:	fs (bad) 
  41028c:	adc    eax,0x6e5cd98f
  410291:	pop    esi
  410292:	pop    ds
  410293:	and    al,0x74
  410295:	add    al,0xfd
  410297:	and    eax,0xeb851b44
  41029c:	in     eax,0xf5
  41029e:	sahf   
  41029f:	cmp    DWORD PTR [edi-0x6070d53c],0x7b
  4102a6:	sti    
  4102a7:	xchg   esp,eax
  4102a8:	cmp    edi,DWORD PTR [ebx]
  4102aa:	popf   
  4102ab:	icebp  
  4102ac:	xor    ah,ah
  4102ae:	push   es
  4102af:	pop    es
  4102b0:	(bad)  
  4102b2:	inc    eax
  4102b3:	xchg   edi,eax
  4102b4:	pop    ebp
  4102b5:	mov    bl,0x80
  4102b7:	and    al,0x2e
  4102b9:	or     al,0x2b
  4102bb:	jg     0x410285
  4102bd:	pusha  
  4102be:	test   eax,0x616caa86
  4102c3:	sub    esp,DWORD PTR [ebp+0x174963]
  4102c9:	stos   BYTE PTR es:[edi],al
  4102ca:	push   0x14364d4
  4102cf:	dec    esi
  4102d0:	jae    0x410350
  4102d2:	cs iret 
  4102d4:	ja     0x4102c1
  4102d6:	push   cs
  4102d7:	xor    BYTE PTR [ebp+0x2b56feef],bh
  4102dd:	sub    al,BYTE PTR [ebp+0x9]
  4102e0:	dec    ebx
  4102e1:	arpl   WORD PTR [eax+0x6e],dx
  4102e4:	mov    esp,0xc8e7117c
  4102e9:	jge    0x410323
  4102eb:	push   ebp
  4102ec:	sbb    eax,0x64aa5e5b
  4102f1:	test   eax,0x59e2c5da
  4102f6:	push   esp
  4102f7:	push   ds
  4102f8:	mov    bh,0x61
  4102fa:	mov    dl,0x9e
  4102fc:	adc    al,0x3f
  4102fe:	mov    ebp,0x1385427e
  410303:	dec    eax
  410304:	lods   eax,DWORD PTR ds:[esi]
  410305:	jae    0x410322
  410307:	or     DWORD PTR [edi+0x38cf636e],ecx
  41030d:	push   ebx
  41030e:	push   ds
  41030f:	(bad)  
  410310:	in     al,dx
  410311:	ins    DWORD PTR es:[edi],dx
  410312:	adc    DWORD PTR [edi+eax*1-0x20],eax
  410316:	dec    esi
  410317:	ins    BYTE PTR es:[edi],dx
  410318:	aad    0x32
  41031a:	push   cs
  41031b:	mov    ebx,0x74b60d17
  410320:	(bad)
  410323:	jl     0x410349
  410325:	and    BYTE PTR [ebx+0x3bf94692],dh
  41032b:	out    dx,al
  41032c:	push   edi
  41032d:	xchg   ebx,eax
  41032e:	leave  
  41032f:	mov    bl,0x62
  410331:	jo     0x410360
  410333:	mov    ecx,0xbe0f0afa
  410338:	dec    ebx
  410339:	pop    esp
  41033a:	hlt    
  41033b:	or     al,0x63
  41033d:	gs inc ebx
  41033f:	push   esi
  410340:	jmp    FWORD PTR [edx]
  410342:	xor    edi,DWORD PTR [edx-0x44]
  410345:	jmp    0x410316
  410347:	xchg   esp,eax
  410348:	mov    DWORD PTR [ecx],esi
  41034a:	mov    dl,0xc7
  41034c:	add    bl,BYTE PTR [eax]
  41034e:	cmp    al,BYTE PTR [eax]
  410350:	jecxz  0x4103c1
  410352:	push   ebx
  410353:	mov    edi,0x33046074
  410358:	xchg   ecx,eax
  410359:	cs cdq 
  41035b:	or     eax,0x8413abe5
  410360:	das    
  410361:	dec    ebx
  410362:	pop    es
  410363:	pushfw 
  410365:	rcl    al,0x50
  410368:	add    DWORD PTR [esi+ecx*2],edx
  41036b:	inc    ebp
  41036c:	not    BYTE PTR [ecx-0x53a3fbbd]
  410372:	jmp    0xdcfb:0xa18d60d4
  410379:	xchg   esi,eax
  41037a:	xchg   esp,eax
  41037b:	add    edi,DWORD PTR ds:0x741d365a
  410381:	inc    ebp
  410382:	jmp    0x1d5:0x53ee89f7
  410389:	call   0x3c97:0xb5e436b7
  410390:	(bad)  
  410391:	mov    dh,0x8f
  410393:	out    dx,eax
  410394:	push   cs
  410395:	je     0x4103a6
  410397:	or     BYTE PTR [edi-0x39],ah
  41039a:	inc    esp
  41039b:	inc    ebx
  41039c:	or     ah,ch
  41039e:	push   ds
  41039f:	pusha  
  4103a0:	mov    ds:0x4d959008,al
  4103a5:	mov    ah,0x2a
  4103a7:	add    DWORD PTR [ebx+ebx*1+0x45],ecx
  4103ab:	je     0x41040a
  4103ad:	pop    eax
  4103ae:	xchg   ebx,eax
  4103af:	cld    
  4103b0:	sub    DWORD PTR [ebp-0x2625ce5],ecx
  4103b6:	imul   eax,DWORD PTR [ebx+0x1f],0xb07dcb80
  4103bd:	test   DWORD PTR [ebx-0x68],esi
  4103c0:	pop    ebp
  4103c1:	push   ebp
  4103c2:	shl    DWORD PTR [edx-0x21e71d26],0x87
  4103c9:	push   eax
  4103ca:	sar    BYTE PTR [edi-0x77a6f2b4],1
  4103d0:	pop    ebp
  4103d1:	jge    0x4103c7
  4103d3:	mov    edx,0x2f5f9ce6
  4103d8:	pop    edx
  4103d9:	mov    eax,ds:0x647e1e5a
  4103de:	rol    BYTE PTR [ebx+eax*8],0x7e
  4103e2:	sub    bh,BYTE PTR [ebp+0x1c]
  4103e5:	scas   eax,DWORD PTR es:[edi]
  4103e6:	mov    dh,0x27
  4103e8:	inc    esi
  4103e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ea:	add    al,BYTE PTR [esi]
  4103ec:	sbb    eax,0xf905881
  4103f1:	scas   eax,DWORD PTR es:[edi]
  4103f2:	jne    0x4103d9
  4103f4:	and    bl,bh
  4103f6:	stos   BYTE PTR es:[edi],al
  4103f7:	aas    
  4103f8:	pop    edi
  4103f9:	or     al,0xea
  4103fb:	pop    ss
  4103fc:	popa   
  4103fd:	lods   eax,DWORD PTR ds:[esi]
  4103fe:	mov    edi,0xc6465c12
  410403:	inc    esi
  410404:	outs   dx,DWORD PTR ds:[esi]
  410405:	shl    eax,1
  410407:	mov    es,esp
  410409:	lds    ecx,FWORD PTR [ebp+0x5]
  41040c:	repnz clc 
  41040e:	inc    esp
  41040f:	jecxz  0x4103b6
  410411:	retf   
  410412:	sbb    eax,0x9a877c07
  410417:	gs jmp 0x12e6a959
  41041d:	dec    ebx
  41041e:	mov    esi,0x6477e8f5
  410423:	scas   al,BYTE PTR es:[edi]
  410424:	sbb    eax,ecx
  410426:	xchg   esp,eax
  410427:	in     eax,0x3f
  410429:	scas   al,BYTE PTR es:[edi]
  41042a:	clc    
  41042b:	leave  
  41042c:	hlt    
  41042d:	imul   eax,DWORD PTR [ebp+eax*2+0x52],0x41
  410432:	push   cs
  410433:	repnz (bad) 
  410435:	pop    ss
  410436:	add    al,dh
  410438:	(bad)  
  410439:	jl     0x41041d
  41043b:	cld    
  41043c:	test   al,0x5a
  41043e:	adc    al,0x7d
  410440:	(bad)  
  410441:	inc    eax
  410442:	repnz (bad) 
  410444:	out    dx,eax
  410445:	dec    edi
  410446:	sub    eax,0x2c7f79d8
  41044b:	test   al,0x7f
  41044d:	pop    es
  41044e:	ror    BYTE PTR [eax+0x1b],0x71
  410452:	push   ebx
  410453:	add    esi,DWORD PTR [esi+ebp*8-0x5d]
  410457:	lds    edx,FWORD PTR [ecx-0x21]
  41045a:	inc    ebx
  41045b:	xor    ebp,esi
  41045d:	loop   0x41042d
  41045f:	mov    edx,0x69b143ea
  410464:	retf   
  410465:	add    DWORD PTR [eax],0xd7d07783
  41046b:	lea    ebp,ss:[ebp-0x352a050e]
  410472:	sti    
  410473:	add    eax,0xf4d1dfcc
  410478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410479:	jle    0x410481
  41047b:	in     eax,0x7c
  41047d:	add    esi,esi
  41047f:	mov    al,ds:0xaef4c2f8
  410484:	dec    edi
  410485:	xlat   BYTE PTR ds:[ebx]
  410486:	adc    esp,0xb6cc8b12
  41048c:	mov    eax,0x62d67336
  410491:	cmp    ch,BYTE PTR [edx-0x58]
  410494:	adc    DWORD PTR [esi-0x1d],ebx
  410497:	ret    
  410498:	jl     0x41042b
  41049a:	dec    ebp
  41049b:	aam    0x2b
  41049d:	fst    QWORD PTR [edx-0x75bbb457]
  4104a3:	jbe    0x4104fc
  4104a5:	dec    edi
  4104a6:	mov    al,0x3f
  4104a8:	mov    ds:0xd5b51aba,eax
  4104ad:	lahf   
  4104ae:	mov    eax,ds:0xa580d6f8
  4104b3:	xchg   esp,eax
  4104b4:	push   eax
  4104b5:	push   edi
  4104b6:	sbb    edx,esp
  4104b8:	ds loop 0x410491
  4104bb:	xchg   edx,eax
  4104bc:	into   
  4104bd:	nop
  4104be:	aad    0x87
  4104c0:	fs pop ebx
  4104c2:	(bad)  
  4104c4:	fwait
  4104c5:	loopne 0x410505
  4104c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c8:	and    ecx,esp
  4104ca:	inc    esi
  4104cb:	dec    esi
  4104cc:	cmp    esi,0x7f
  4104cf:	fs loopne 0x410540
  4104d2:	aam    0xfc
  4104d4:	in     eax,dx
  4104d5:	scas   al,BYTE PTR es:[edi]
  4104d6:	in     al,dx
  4104d7:	mov    eax,0x14a2de8a
  4104dc:	retf   0x9078
  4104df:	mov    DWORD PTR [eax+0x6f],eax
  4104e2:	fmul   DWORD PTR [esi+0x6656b300]
  4104e8:	bound  edx,QWORD PTR [ebx-0x1d]
  4104eb:	dec    ecx
  4104ec:	xor    al,0xb1
  4104ee:	fnstcw WORD PTR [ecx]
  4104f0:	pop    ss
  4104f1:	stos   DWORD PTR es:[edi],eax
  4104f2:	aas    
  4104f3:	mov    ecx,0x1828833c
  4104f8:	inc    esp
  4104f9:	imul   esp,DWORD PTR [ebp-0x78],0x5d7ca7da
  410500:	int    0x76
  410502:	inc    ebp
  410503:	not    DWORD PTR [esi+ebp*8+0x4d85d2a4]
  41050a:	jnp    0x410574
  41050c:	inc    edx
  41050d:	mov    ecx,0x1e588fb
  410512:	or     al,0x78
  410514:	dec    ebx
  410515:	iret   
  410516:	pop    ebx
  410517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410518:	lock jmp 0x410597
  41051b:	fsubr  QWORD PTR [edx+0x4be3ab4f]
  410521:	pop    ebp
  410522:	iret   
  410523:	shl    BYTE PTR [ebp-0x7a],0x45
  410527:	cmp    cl,ah
  410529:	mov    bl,0x42
  41052b:	add    al,0xa1
  41052d:	sbb    eax,0x8b7ef350
  410532:	dec    ebp
  410533:	fcmovu st,st(4)
  410535:	push   eax
  410536:	push   ebx
  410537:	cmp    eax,0x1791f66a
  41053c:	add    eax,0x4590768b
  410541:	repz dec edx
  410543:	push   edx
  410544:	(bad)  
  410545:	jl     0x410539
  410547:	in     eax,dx
  410548:	pop    ss
  410549:	sbb    al,0xb5
  41054b:	call   0xa697a13e
  410550:	in     al,dx
  410551:	sub    ebx,DWORD PTR [esi+0x438eed4f]
  410557:	or     eax,0x32c018
  41055c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41055d:	stos   BYTE PTR es:[edi],al
  41055e:	loopne 0x41058d
  410560:	fidiv  DWORD PTR [edi+esi*4+0x3e]
  410564:	add    cl,dh
  410566:	(bad)  
  410567:	outs   dx,DWORD PTR ds:[esi]
  410568:	xor    DWORD PTR [ecx+0x22ee4b49],eax
  41056e:	int    0xda
  410570:	cmp    al,0x23
  410572:	sar    DWORD PTR [esi+0x5e7edd5e],1
  410578:	inc    eax
  410579:	adc    ebp,DWORD PTR [esi-0x4]
  41057c:	ins    DWORD PTR es:[edi],dx
  41057d:	push   ebp
  41057e:	mov    esp,0xad6155b4
  410584:	pop    ss
  410585:	or     al,0xc7
  410587:	lods   eax,DWORD PTR ds:[esi]
  410588:	(bad)  
  410589:	addr16 pop eax
  41058b:	mov    dl,0x2
  41058d:	fnsave [ebp*8-0x761bfbc9]
  410594:	xchg   ecx,eax
  410595:	jb     0x4105ad
  410597:	and    al,0x47
  410599:	xor    eax,0x8e8a10cd
  41059e:	push   esp
  41059f:	out    0xa0,eax
  4105a1:	adc    al,0x8f
  4105a3:	and    bh,BYTE PTR [ebx+ebx*8-0x20]
  4105a7:	fstp   DWORD PTR [eax+edi*1-0x6bb55642]
  4105ae:	adc    eax,0xe53e7cc6
  4105b3:	imul   eax,DWORD PTR [ebp-0x47fbf35b],0xffffffee
  4105ba:	jmp    0x410579
  4105bc:	xor    al,0x8d
  4105be:	fldcw  WORD PTR [ecx-0x58]
  4105c1:	shl    eax,cl
  4105c3:	test   al,0x2d
  4105c5:	add    al,0xb5
  4105c7:	scas   eax,DWORD PTR es:[edi]
  4105c8:	(bad)  
  4105c9:	je     0x4105a2
  4105cb:	lea    esi,[ebx+edx*8+0x71]
  4105cf:	mov    bl,0x5f
  4105d1:	nop
  4105d2:	mov    ecx,?
  4105d4:	mov    dh,0xa9
  4105d6:	sub    eax,0x8aefa509
  4105db:	sbb    eax,0xae2fc7e1
  4105e0:	pop    ebx
  4105e1:	retf   0x5ae0
  4105e4:	dec    edx
  4105e5:	pop    eax
  4105e6:	das    
  4105e7:	std    
  4105e8:	je     0x410653
  4105ea:	int3   
  4105eb:	adc    ah,dh
  4105ed:	(bad)
  4105f2:	adc    BYTE PTR [ecx],ah
  4105f4:	jmp    0x62ab:0x797a7079
  4105fb:	push   ecx
  4105fc:	repz inc esi
  4105fe:	jmp    0x4105cd
  410600:	sahf   
  410601:	cmp    ebp,eax
  410603:	(bad)  
  410604:	cmc    
  410605:	aad    0x18
  410607:	inc    ebx
  410608:	jp     0x410686
  41060a:	out    dx,eax
  41060b:	xchg   esp,eax
  41060c:	sub    al,0x62
  41060e:	in     eax,dx
  41060f:	and    dh,BYTE PTR [esi-0x383dc8bb]
  410615:	push   esi
  410616:	xchg   edx,eax
  410617:	pop    esp
  410618:	out    dx,eax
  410619:	jo     0x4105aa
  41061b:	int    0x8d
  41061d:	loopne 0x41064c
  41061f:	xor    esp,ebp
  410621:	test   BYTE PTR [edx+ecx*8-0x67],bh
  410625:	test   BYTE PTR [ebp+0x36],cl
  410628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410629:	shl    BYTE PTR ds:0xd932d3af,1
  41062f:	ficom  WORD PTR [eax+0x30]
  410632:	push   esp
  410633:	arpl   WORD PTR [esi-0x2e],si
  410636:	imul   ebp,ebp,0xffffff9e
  410639:	mov    BYTE PTR [edi+0x1ac5ea27],ah
  41063f:	pop    edi
  410640:	shl    bl,cl
  410642:	dec    ebp
  410643:	mov    eax,0xc9b751ab
  410648:	dec    esp
  410649:	lahf   
  41064a:	retf   0x628d
  41064d:	add    esi,edi
  41064f:	adc    BYTE PTR [esp+esi*2],bh
  410652:	and    eax,0x8d538cb
  410657:	lods   eax,DWORD PTR ds:[esi]
  410658:	test   BYTE PTR [ebx+0x25d977fb],dl
  41065e:	aad    0x1e
  410660:	imul   esp,edi,0xffffff9f
  410663:	call   0xe90c:0x3cb26e37
  41066a:	pop    ds
  41066b:	stc    
  41066c:	mov    ebx,0x1794901d
  410671:	lods   eax,DWORD PTR ds:[esi]
  410672:	and    BYTE PTR [ecx-0x554359ff],bl
  410678:	jb     0x410685
  41067a:	pop    esi
  41067b:	sub    eax,0x666b1672
  410680:	icebp  
  410681:	loopne 0x410636
  410683:	xor    al,0xce
  410685:	ds xchg esp,eax
  410687:	fs daa 
  410689:	imul   esp,ebx,0x24
  41068c:	test   BYTE PTR [eax],al
  41068e:	ja     0x41068e
  410690:	fld    st(7)
  410692:	loope  0x41068f
  410694:	adc    ebx,edi
  410696:	jns    0x4106c8
  410698:	les    esi,FWORD PTR [edx]
  41069a:	iret   
  41069b:	in     al,dx
  41069c:	cs stc 
  41069e:	add    al,0xca
  4106a0:	int3   
  4106a1:	popa   
  4106a2:	sbb    al,BYTE PTR [ebp+edx*8-0x10a117d0]
  4106a9:	shr    BYTE PTR [edi+0x7105272f],0x5
  4106b0:	std    
  4106b1:	pop    esi
  4106b2:	push   esp
  4106b3:	adc    esi,DWORD PTR ds:[esi-0x80]
  4106b7:	and    BYTE PTR [ebx],al
  4106b9:	rcl    BYTE PTR [ebx+0x74573604],1
  4106bf:	and    DWORD PTR [eax-0x302fd483],esp
  4106c5:	push   es
  4106c6:	jmp    0xebe4caff
  4106cb:	sbb    DWORD PTR [edx+0x7df59e02],ebp
  4106d1:	out    0xd7,al
  4106d3:	mov    ah,0x10
  4106d5:	repnz pop ebp
  4106d7:	inc    edi
  4106d8:	adc    al,0x45
  4106da:	adc    bl,0x93
  4106dd:	cmp    BYTE PTR [ecx+0x4],ah
  4106e0:	xor    DWORD PTR [esi],eax
  4106e2:	ins    BYTE PTR es:[edi],dx
  4106e3:	push   ecx
  4106e4:	jmp    0xd42c6dd4
  4106e9:	fcom   st(2)
  4106eb:	in     al,dx
  4106ec:	in     eax,0x69
  4106ee:	lods   al,BYTE PTR ds:[esi]
  4106ef:	push   ss
  4106f0:	leave  
  4106f1:	outs   dx,DWORD PTR ds:[esi]
  4106f2:	xor    dl,BYTE PTR [edx-0x18d380d8]
  4106f8:	loop   0x410691
  4106fa:	inc    esi
  4106fb:	imul   edi,DWORD PTR [ebp-0x2c6a8199],0x3f
  410702:	jmp    0xecc5e687
  410707:	pusha  
  410708:	sub    edi,eax
  41070a:	test   BYTE PTR [edi],0x38
  41070d:	ret    0x638e
  410710:	cli    
  410711:	icebp  
  410712:	fnstsw WORD PTR [ebp-0x17]
  410715:	pop    ebp
  410716:	ins    DWORD PTR es:[edi],dx
  410717:	jle    0x4106a0
  410719:	push   eax
  41071a:	lods   eax,DWORD PTR ds:[esi]
  41071b:	xor    BYTE PTR [edx],0x14
  41071e:	xor    edi,DWORD PTR [eax+edi*2+0x14bfb029]
  410725:	xchg   ebp,eax
  410726:	sahf   
  410727:	pop    edi
  410728:	std    
  410729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072a:	addr16 call 0x9193df1b
  410730:	retf   
  410731:	push   edx
  410732:	and    DWORD PTR [esi],ebp
  410734:	mov    ch,0x7c
  410736:	ds scas al,BYTE PTR es:[edi]
  410738:	aas    
  410739:	call   0xf8fa7417
  41073e:	cmp    edi,DWORD PTR [esi+0x17]
  410741:	mov    BYTE PTR ds:[ebx+0x3e5735c2],ah
  410748:	in     eax,0x8a
  41074a:	mov    esp,0xcf171215
  41074f:	inc    ebx
  410750:	xor    BYTE PTR [eax-0x6d],bh
  410753:	sar    DWORD PTR [ebx-0x7fc617bb],0x74
  41075a:	mov    DWORD PTR [ecx-0x40fce6a2],edx
  410760:	xchg   BYTE PTR [edi-0x53247e4a],bh
  410766:	scas   eax,DWORD PTR es:[edi]
  410767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410768:	out    0xc8,eax
  41076a:	push   edx
  41076b:	aas    
  41076c:	ret    0x1ba1
  41076f:	xor    esi,DWORD PTR [ecx-0x640c796d]
  410775:	pushf  
  410776:	(bad)  
  410777:	jb     0x4107a2
  410779:	stos   DWORD PTR es:[edi],eax
  41077a:	(bad)  
  41077b:	call   0x761e968
  410780:	cmp    BYTE PTR [esi],bl
  410782:	in     al,dx
  410783:	push   ecx
  410784:	sub    al,0xef
  410786:	push   edi
  410787:	test   al,0x65
  410789:	imul   ecx,edx,0x470c9a98
  41078f:	mov    ds:0xeba84831,al
  410794:	adc    edi,DWORD PTR [ebx+0x96d583d]
  41079a:	sbb    edi,DWORD PTR [edx]
  41079c:	mov    ecx,0x9fac27e9
  4107a1:	mov    esi,0x257643a2
  4107a6:	lods   al,BYTE PTR ds:[esi]
  4107a7:	sub    BYTE PTR [edi],bl
  4107a9:	cmp    eax,0x375ae9
  4107ae:	cmp    eax,0xa423bc41
  4107b3:	mov    esi,0xc2af928d
  4107b8:	mov    WORD PTR [ebx-0x1acf9b05],ds
  4107be:	sbb    ecx,edx
  4107c0:	popa   
  4107c1:	sub    bh,BYTE PTR [edx-0x27]
  4107c4:	lea    esp,[edi+eiz*8+0x3e7bf88]
  4107cb:	lods   al,BYTE PTR ds:[esi]
  4107cc:	aas    
  4107cd:	leave  
  4107ce:	imul   eax,DWORD PTR [esi],0xffffffcf
  4107d1:	inc    esp
  4107d2:	sti    
  4107d3:	jmp    0x4107bb
  4107d5:	mov    ebx,0x2ccf7137
  4107da:	in     eax,0x94
  4107dc:	mov    al,ds:0x50a6119a
  4107e1:	jbe    0x4107e0
  4107e3:	xchg   ebp,eax
  4107e4:	call   0xea0577de
  4107e9:	outs   dx,BYTE PTR ds:[esi]
  4107ea:	aaa    
  4107eb:	xchg   DWORD PTR [edx+0x50],esp
  4107ee:	imul   BYTE PTR [ebx+0x55]
  4107f1:	sub    ah,0xe9
  4107f4:	call   DWORD PTR [ecx-0x37]
  4107f7:	jne    0x4107a9
  4107f9:	inc    eax
  4107fa:	dec    edx
  4107fb:	mov    al,ds:0x6b4cbdd4
  410800:	mov    al,0x9c
  410802:	ror    DWORD PTR [ebp+0x22],1
  410805:	sti    
  410806:	mov    al,0x72
  410808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410809:	and    eax,0x9a73566e
  41080e:	mov    edx,0xc39c3ab7
  410813:	mov    ah,0x95
  410815:	mov    al,ds:0x6be6e2c6
  41081a:	dec    ebp
  41081b:	test   al,0xf3
  41081d:	pop    esi
  41081e:	sbb    dl,BYTE PTR [ecx+0x2e54cef9]
  410824:	mov    al,ds:0x790e4809
  410829:	jno    0x41083a
  41082b:	xor    eax,DWORD PTR [ecx+0x75b95cbf]
  410831:	lahf   
  410832:	jmp    0x1f271cce
  410837:	fsubr  QWORD PTR [eax+edi*1+0x52318955]
  41083e:	aaa    
  41083f:	(bad)  
  410840:	sub    esp,DWORD PTR [esp+edi*8-0x9]
  410844:	jae    0x410872
  410846:	fs jbe 0x410850
  410849:	xchg   esp,eax
  41084a:	dec    BYTE PTR [eax-0x47986237]
  410850:	fnstsw WORD PTR [edx]
  410852:	mov    eax,DWORD PTR [ecx-0x3334685]
  410858:	or     DWORD PTR [eax+0x26],esi
  41085b:	or     DWORD PTR [ecx+0x3ae6c612],ecx
  410861:	mov    bl,0xfe
  410863:	scas   eax,DWORD PTR es:[edi]
  410864:	pushf  
  410865:	sub    DWORD PTR [edi],0x5c
  410868:	retf   0x6890
  41086b:	loope  0x4108b0
  41086d:	nop
  41086e:	aad    0xe7
  410870:	or     bl,bh
  410872:	push   0x7723c09e
  410877:	and    ah,BYTE PTR [ebx+0xa7d0724]
  41087d:	cli    
  41087e:	aas    
  41087f:	cwde   
  410880:	scas   al,BYTE PTR es:[edi]
  410881:	rcl    BYTE PTR [edx-0x1],0xf8
  410885:	mov    ebp,0x6d53c612
  41088a:	dec    esi
  41088b:	mov    cs,WORD PTR [edx-0x23]
  41088e:	(bad)  
  41088f:	ja     0x4108a9
  410891:	xor    al,0x26
  410893:	(bad)  
  410894:	sbb    BYTE PTR [esi],ch
  410896:	jmp    0xa1f596d2
  41089b:	xchg   ebp,eax
  41089c:	dec    ebx
  41089d:	xchg   dx,ax
  41089f:	sub    edx,esi
  4108a1:	sbb    BYTE PTR [edi-0x72],cl
  4108a4:	mov    BYTE PTR [edi+0x50],ch
  4108a7:	cmp    BYTE PTR [eax+0xa70084f],bh
  4108ad:	mov    ds:0x73701b6a,eax
  4108b2:	stos   BYTE PTR es:[edi],al
  4108b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108b4:	lods   al,BYTE PTR ds:[esi]
  4108b5:	pop    esi
  4108b6:	or     DWORD PTR [esi],esp
  4108b8:	lock pusha 
  4108ba:	pop    edx
  4108bb:	repnz sub eax,0x7ee4a29d
  4108c1:	gs dec edx
  4108c3:	imul   esp,DWORD PTR [edi],0x6e
  4108c6:	jmp    DWORD PTR [esi+ebx*8+0x531c1731]
  4108cd:	dec    esi
  4108ce:	sti    
  4108cf:	push   0x76417df9
  4108d4:	mov    ch,BYTE PTR [ecx+0x1cb58968]
  4108da:	jmp    0x4108f6
  4108dc:	repz mov WORD PTR [eax+eiz*1+0x11],gs
  4108e1:	sbb    eax,0xa445151f
  4108e6:	lock call 0x2d1c:0xbf9d88f5
  4108ee:	adc    ah,al
  4108f0:	adc    BYTE PTR [esi-0x1a],dl
  4108f3:	test   BYTE PTR [eax-0x3f],dl
  4108f6:	bound  ebx,QWORD PTR [eax+0x653d1bac]
  4108fc:	leave  
  4108fd:	adc    ebx,ebp
  4108ff:	xor    bl,dl
  410901:	mov    eax,DWORD PTR [ecx]
  410903:	mov    esp,0x7d989c9f
  410908:	or     al,0xb0
  41090a:	jbe    0x410930
  41090c:	or     ecx,edx
  41090e:	and    BYTE PTR [ebp-0x1f85bff8],ch
  410914:	mov    ecx,0xf7114249
  410919:	push   ds
  41091a:	aam    0xa5
  41091c:	xor    eax,0x481f4589
  410921:	cld    
  410922:	adc    ch,cl
  410924:	xor    DWORD PTR [ecx+0x7b],0xdbaf8edc
  41092b:	leave  
  41092c:	leave  
  41092d:	leave  
  41092e:	mov    dl,0xd6
  410930:	and    ebx,esp
  410932:	sbb    DWORD PTR [esi+esi*1],edx
  410935:	add    DWORD PTR [edx-0x575f1228],ebp
  41093b:	mov    DWORD PTR [edi+0x2dd5c300],ebp
  410941:	ins    DWORD PTR es:[edi],dx
  410942:	shr    BYTE PTR [edi-0x56],0x71
  410946:	jl     0x41092a
  410948:	or     al,0xbd
  41094a:	xchg   DWORD PTR [edi+0x1787e1db],edx
  410950:	in     al,dx
  410951:	mov    edi,0x4cd8f31a
  410956:	mov    bh,0x87
  410958:	sahf   
  410959:	ficom  DWORD PTR [edi+0x5]
  41095c:	mov    ah,0x87
  41095e:	out    dx,eax
  41095f:	sets   BYTE PTR [esi]
  410962:	sub    edi,DWORD PTR [ecx+0x3ed7d609]
  410968:	jge    0x410954
  41096a:	ret    
  41096b:	(bad)  
  41096c:	xor    edx,DWORD PTR [esi+ecx*4+0x79]
  410970:	jmp    0xcf348c0
  410975:	sbb    BYTE PTR ds:0x416f2e4c,0x66
  41097c:	xor    eax,0xc2c01576
  410981:	imul   edi,DWORD PTR [esi],0xffffffae
  410984:	dec    ecx
  410985:	cvtps2pd xmm0,QWORD PTR [ecx]
  410988:	call   0x719f:0xacc35ce2
  41098f:	push   edi
  410990:	aaa    
  410991:	daa    
  410992:	out    0x3a,eax
  410994:	mov    edi,0xcd10d52d
  410999:	jno    0x410944
  41099b:	jle    0x410a12
  41099d:	dec    esp
  41099e:	xor    BYTE PTR [edx+0x48726865],cl
  4109a4:	icebp  
  4109a5:	lds    ebp,FWORD PTR [ebx]
  4109a7:	adc    edx,ebp
  4109a9:	xchg   esi,eax
  4109aa:	ins    DWORD PTR es:[edi],dx
  4109ab:	or     al,0x76
  4109ad:	enter  0x71a0,0x58
  4109b1:	adc    edx,DWORD PTR [ebx]
  4109b3:	pushf  
  4109b4:	in     eax,dx
  4109b5:	ja     0x4109e0
  4109b7:	call   DWORD PTR [eax-0x69]
  4109ba:	aas    
  4109bb:	dec    esi
  4109bc:	cmc    
  4109bd:	aaa    
  4109be:	mov    al,ds:0xd44fa241
  4109c3:	inc    edi
  4109c4:	cmc    
  4109c5:	loope  0x410985
  4109c7:	enter  0xe83e,0xc4
  4109cb:	jbe    0x4109d9
  4109cd:	out    dx,eax
  4109ce:	inc    edx
  4109cf:	std    
  4109d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109d1:	iret   
  4109d2:	mov    ds:0x10b0d63c,eax
  4109d7:	lock mov dh,0x14
  4109da:	retf   0x1b63
  4109dd:	pop    edx
  4109de:	(bad)  
  4109df:	popf   
  4109e0:	shl    ah,1
  4109e2:	sbb    dh,ch
  4109e4:	cmp    al,0x9
  4109e6:	imul   edx,eax,0xd6e34377
  4109ec:	cld    
  4109ed:	add    dl,dh
  4109ef:	test   al,0x56
  4109f1:	sub    ebx,esp
  4109f3:	rol    BYTE PTR [edi],cl
  4109f5:	mov    edi,0xb57e7665
  4109fa:	push   0x8f77cbe0
  4109ff:	sub    al,0x5f
  410a01:	ins    BYTE PTR es:[edi],dx
  410a02:	loopne 0x4109d1
  410a04:	stos   BYTE PTR es:[edi],al
  410a05:	jmp    0x410a3c
  410a07:	test   eax,0x2f48a25e
  410a0c:	(bad)  
  410a0d:	out    0x64,al
  410a0f:	and    al,0xd1
  410a11:	push   ebx
  410a12:	or     ecx,DWORD PTR [ebx+0x3]
  410a15:	pop    edi
  410a16:	shr    DWORD PTR ds:0x15448f36,cl
  410a1c:	mov    ecx,esp
  410a1e:	mov    al,ds:0xb87b3d5
  410a23:	fimul  DWORD PTR [edx]
  410a25:	aad    0xa2
  410a27:	ret    
  410a28:	dec    edx
  410a29:	int3   
  410a2a:	les    edi,FWORD PTR [edx+0x34]
  410a2d:	psrld  mm7,QWORD PTR [ecx]
  410a30:	outs   dx,DWORD PTR ds:[esi]
  410a31:	arpl   bp,di
  410a33:	sbb    al,0x32
  410a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a36:	dec    esp
  410a37:	pop    ebx
  410a38:	jno    0x410a56
  410a3a:	and    eax,0xffffffb1
  410a3d:	mov    eax,ds:0xbcef6047
  410a42:	enter  0xf9df,0xf0
  410a46:	xor    ah,BYTE PTR [eax]
  410a48:	es inc edx
  410a4a:	sub    esi,ecx
  410a4c:	add    al,0xc1
  410a4e:	xchg   edi,eax
  410a4f:	syscall 
  410a51:	pop    edx
  410a52:	xchg   edi,eax
  410a53:	mov    edi,0x6c59ee8f
  410a58:	cmp    ebx,esi
  410a5a:	pop    ebx
  410a5b:	in     eax,0x96
  410a5d:	add    DWORD PTR [esi-0x7539aa3a],edx
  410a63:	mov    ds:0x87cb6ad7,al
  410a68:	mov    bl,0xfe
  410a6a:	retf   0xf790
  410a6d:	dec    bl
  410a6f:	fisttp WORD PTR [ebp-0x45]
  410a72:	inc    edi
  410a73:	mov    cl,0xe8
  410a75:	push   ebp
  410a76:	inc    edx
  410a77:	or     al,0x78
  410a79:	cmp    esp,DWORD PTR ds:0xb5c830a9
  410a7f:	popf   
  410a80:	outs   dx,BYTE PTR ds:[esi]
  410a81:	mov    cl,0x8f
  410a83:	shl    DWORD PTR [edx+0x75a6e6aa],cl
  410a89:	shr    al,cl
  410a8b:	cmp    DWORD PTR [eax+0x48],ebx
  410a8e:	in     eax,0xf
  410a90:	push   0x4a
  410a92:	xor    dh,BYTE PTR [ecx+0x2e495169]
  410a98:	push   DWORD PTR [ebx+0x4db2592c]
  410a9e:	inc    esi
  410a9f:	in     al,0xe1
  410aa1:	sub    DWORD PTR [ebp+0x16e2af51],ebp
  410aa7:	pop    edx
  410aa8:	lods   eax,DWORD PTR ds:[esi]
  410aa9:	pop    ds
  410aaa:	call   0x8dce:0x29b23961
  410ab1:	pop    ebx
  410ab2:	pop    esp
  410ab3:	and    eax,0x90a694e2
  410ab8:	adc    eax,DWORD PTR [ebx]
  410aba:	nop
  410abb:	and    eax,0xe7625d35
  410ac0:	out    0xe4,eax
  410ac2:	sub    bh,BYTE PTR [ebp+0x7c1232a7]
  410ac8:	lea    esi,[edi]
  410aca:	fbld   TBYTE PTR [edi+0x77227962]
  410ad0:	mov    dl,0xf2
  410ad2:	mov    esp,0x8178d954
  410ad7:	and    ah,ah
  410ad9:	test   DWORD PTR [esi+0x73],edx
  410adc:	xor    BYTE PTR [ebp-0x5fe81b67],ah
  410ae2:	in     eax,dx
  410ae3:	dec    edi
  410ae4:	clc    
  410ae5:	dec    ebx
  410ae6:	ja     0x410af8
  410ae8:	and    eax,0xc3d95d2e
  410aed:	bound  edx,QWORD PTR [esp+esi*4-0x6ab14a4d]
  410af4:	push   ds
  410af5:	dec    ecx
  410af7:	stos   BYTE PTR es:[edi],al
  410af8:	lahf   
  410af9:	push   edi
  410afa:	or     dl,BYTE PTR [ebx-0x5]
  410afd:	xchg   ebx,eax
  410afe:	jno    0x410b6c
  410b00:	stos   DWORD PTR es:[edi],eax
  410b01:	addr16 ret 
  410b03:	mov    cs,WORD PTR [ebx-0x5e]
  410b06:	dec    ecx
  410b07:	xor    eax,0x96174bfb
  410b0c:	in     al,0xc3
  410b0e:	pop    es
  410b0f:	jge    0x410ad4
  410b11:	sub    DWORD PTR [ebx],esp
  410b13:	mov    edi,0x7dfbc3f
  410b18:	adc    al,0xdc
  410b1a:	dec    eax
  410b1b:	ficom  DWORD PTR ds:0xf995b7cd
  410b21:	or     ebp,edi
  410b23:	push   es
  410b24:	mov    ebp,0x7b31783e
  410b29:	xchg   BYTE PTR [ebx],bl
  410b2b:	cld    
  410b2c:	mov    ?,eax
  410b2e:	add    eax,0xcd6988cb
  410b33:	sbb    eax,0x9b4e33f9
  410b38:	arpl   WORD PTR [esi],si
  410b3a:	sbb    DWORD PTR [edx+0x42],0x60
  410b3e:	std    
  410b3f:	pop    ds
  410b40:	lods   al,BYTE PTR ds:[esi]
  410b41:	aam    0x1c
  410b43:	pop    edx
  410b44:	or     esi,DWORD PTR [ebp-0x2f]
  410b47:	int3   
  410b48:	inc    edi
  410b49:	in     eax,dx
  410b4a:	in     eax,0x97
  410b4c:	pop    ebp
  410b4d:	idiv   BYTE PTR [esi-0x74b927c0]
  410b53:	and    BYTE PTR [esi+0x7074d251],cl
  410b59:	and    eax,0x24f1090a
  410b5e:	je     0x410bc0
  410b60:	and    dh,BYTE PTR [ecx]
  410b62:	rcr    esi,1
  410b64:	jne    0x410b6d
  410b66:	shl    DWORD PTR [ebp+0x19],cl
  410b69:	add    bh,BYTE PTR [ebp-0x3b0b9ba8]
  410b6f:	jb     0x410be0
  410b71:	inc    edi
  410b72:	and    al,0xcd
  410b74:	lods   al,BYTE PTR ds:[esi]
  410b75:	jmp    0x1ad2:0x127d5ef9
  410b7c:	or     BYTE PTR [esp+edi*8],0x2d
  410b80:	adc    cl,0x6
  410b83:	cmc    
  410b84:	sub    DWORD PTR [eax],esp
  410b86:	aam    0xca
  410b88:	test   DWORD PTR [esi],eax
  410b8a:	jb     0x410b1e
  410b8c:	jmp    0x8575:0x6a98307
  410b93:	std    
  410b94:	mov    ds:0x57519c1c,al
  410b99:	sub    ecx,eax
  410b9b:	mov    ah,0x6b
  410b9d:	pop    esp
  410b9e:	sub    al,0x24
  410ba0:	adc    bh,dl
  410ba2:	iret   
  410ba3:	add    eax,DWORD PTR [ecx+0x4f1750f9]
  410ba9:	pusha  
  410baa:	cmp    eax,0x672e6231
  410baf:	nop
  410bb0:	fmul   st(4),st
  410bb2:	je     0x410bb9
  410bb4:	(bad)  
  410bb5:	stos   DWORD PTR es:[edi],eax
  410bb6:	cld    
  410bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb8:	neg    DWORD PTR [eax+0x2f]
  410bbb:	(bad)  
  410bbc:	loop   0x410b64
  410bbe:	and    esp,DWORD PTR [edx-0x63]
  410bc1:	outs   dx,DWORD PTR ds:[esi]
  410bc2:	test   al,0xfc
  410bc4:	mov    ch,dh
  410bc6:	outs   dx,BYTE PTR ds:[esi]
  410bc7:	das    
  410bc8:	jg     0x410bf6
  410bca:	iret   
  410bcb:	adc    al,0x3d
  410bcd:	call   0x6795:0xdab00030
  410bd4:	dec    esp
  410bd5:	rol    BYTE PTR [esi+0x26],1
  410bd8:	mov    ebp,0x1127f23
  410bdd:	data16 mov cl,ah
  410be0:	adc    DWORD PTR [edi+0x4e4af89c],eax
  410be6:	(bad)
  410be9:	sahf   
  410bea:	arpl   WORD PTR [ecx+0x64],bp
  410bed:	cli    
  410bee:	inc    edi
  410bef:	leave  
  410bf0:	sub    ecx,esp
  410bf2:	mov    bh,BYTE PTR [ebp-0x4bef9546]
  410bf8:	sti    
  410bf9:	push   ebx
  410bfa:	int3   
  410bfb:	icebp  
  410bfc:	sbb    edi,DWORD PTR [eax+0x42ae41af]
  410c02:	pop    edx
  410c03:	rcr    BYTE PTR [ebp+0x2c43f386],cl
  410c09:	aas    
  410c0a:	fcom   QWORD PTR [eax]
  410c0c:	xor    eax,0x7c485de2
  410c11:	adc    DWORD PTR [edx+0xb],0x19
  410c15:	fcom   QWORD PTR [esi+0x7448f00a]
  410c1b:	loopne 0x410c2e
  410c1d:	dec    esi
  410c1e:	dec    ebx
  410c1f:	sbb    eax,0x49af690f
  410c24:	fnstcw WORD PTR [ebx]
  410c26:	repnz sbb bl,dh
  410c29:	xor    ch,BYTE PTR [eax+esi*2]
  410c2c:	enter  0x382c,0xd4
  410c30:	shr    al,0x12
  410c33:	adc    ebp,DWORD PTR [ecx]
  410c35:	out    dx,al
  410c36:	fldenv [eax]
  410c38:	push   0xf80c968f
  410c3d:	aas    
  410c3e:	xor    BYTE PTR [ebx+0x3f],dl
  410c41:	mov    dl,0x1b
  410c43:	mov    al,ds:0x9f1a07e7
  410c48:	push   esi
  410c49:	int3   
  410c4a:	adc    edx,ecx
  410c4c:	add    DWORD PTR [ecx],ecx
  410c4e:	cmp    bh,al
  410c50:	(bad)  
  410c51:	(bad)  
  410c52:	repz aaa 
  410c54:	sbb    BYTE PTR [ebx+0x70],ch
  410c57:	push   edx
  410c58:	and    eax,0x30ae0d44
  410c5d:	pop    eax
  410c5e:	mov    esp,0x329176dc
  410c63:	imul   cl
  410c65:	sar    ch,cl
  410c67:	pop    esi
  410c68:	mov    ebp,0xc12ad3ef
  410c6d:	sbb    ebp,eax
  410c6f:	dec    ebp
  410c70:	ins    BYTE PTR es:[edi],dx
  410c71:	or     eax,0x8633e913
  410c76:	xor    BYTE PTR [ebx+0x13],ch
  410c79:	adc    al,0x72
  410c7b:	sbb    eax,0x544173e3
  410c80:	rcl    DWORD PTR [edi],0x6b
  410c83:	shl    DWORD PTR [esi+0x1d9d9d69],cl
  410c89:	fadd   QWORD PTR [esi+0x62]
  410c8c:	popa   
  410c8d:	fistp  QWORD PTR [ebp+0x33afaca8]
  410c93:	mov    WORD PTR ds:0xfa63622c,es
  410c99:	shl    DWORD PTR [edx-0x74],cl
  410c9c:	or     dh,BYTE PTR [edi+edi*4+0x5e]
  410ca0:	inc    esi
  410ca1:	xchg   edx,eax
  410ca2:	jae    0x410c48
  410ca4:	retf   0x4878
  410ca7:	outs   dx,DWORD PTR ds:[esi]
  410ca8:	ficomp WORD PTR [edx]
  410caa:	or     eax,0x2ba64ca0
  410caf:	dec    ebx
  410cb0:	or     DWORD PTR [ebp-0x5c],edi
  410cb3:	test   eax,0xfd41c0ae
  410cb8:	and    al,0x6b
  410cba:	mov    dl,0xb
  410cbc:	dec    ecx
  410cbd:	out    0xa9,eax
  410cbf:	shr    dh,cl
  410cc1:	lods   eax,DWORD PTR ds:[esi]
  410cc2:	test   al,0x27
  410cc4:	fnstsw WORD PTR [edi+eax*2-0x563ebc0]
  410ccb:	inc    esi
  410ccc:	or     DWORD PTR [edi+ebx*2],edi
  410ccf:	jle    0x410cf4
  410cd1:	dec    esi
  410cd2:	xchg   esp,eax
  410cd3:	pop    edi
  410cd4:	jmp    0x3650:0xed00d9c3
  410cdb:	out    dx,al
  410cdc:	imul   ecx,DWORD PTR [ebx],0xffffffb4
  410cdf:	pop    ebp
  410ce0:	xchg   esi,eax
  410ce1:	out    0xf,al
  410ce3:	or     ah,dh
  410ce5:	dec    esi
  410ce6:	adc    bl,ah
  410ce8:	mov    dh,0x2f
  410cea:	sti    
  410ceb:	neg    DWORD PTR [eax+0x60524b3d]
  410cf1:	sbb    esp,DWORD PTR [ecx-0x57080294]
  410cf7:	or     WORD PTR ss:[esi],0xff8a
  410cfc:	and    bh,cl
  410cfe:	push   ecx
  410cff:	inc    edx
  410d00:	scas   eax,DWORD PTR es:[edi]
  410d01:	push   ebx
  410d02:	push   ebx
  410d03:	add    eax,0xd2e2c040
  410d08:	fucom  st(5)
  410d0a:	aam    0xdf
  410d0c:	jmp    0xef92144c
  410d11:	shl    DWORD PTR [ecx+0x41033dd1],cl
  410d17:	call   0x25c1:0x9a31cf41
  410d1e:	sbb    BYTE PTR [esi],al
  410d20:	(bad)  
  410d22:	xchg   edi,eax
  410d23:	retf   0x4bac
  410d26:	sbb    eax,0x1293c5c8
  410d2b:	lahf   
  410d2c:	push   edi
  410d2d:	mov    esp,cr6
  410d30:	dec    ebp
  410d31:	sbb    al,0xb7
  410d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d34:	mov    dl,BYTE PTR [eax+0x43]
  410d37:	(bad)  
  410d38:	lahf   
  410d39:	inc    esp
  410d3a:	int    0xe4
  410d3c:	push   es
  410d3d:	stos   BYTE PTR es:[edi],al
  410d3e:	cmp    eax,DWORD PTR [edi+0x7]
  410d41:	fisubr WORD PTR ds:0xbeb4d956
  410d47:	in     eax,0x8a
  410d49:	push   ecx
  410d4a:	inc    esp
  410d4b:	adc    DWORD PTR [esi+0x5d878888],esp
  410d51:	scas   eax,DWORD PTR es:[edi]
  410d52:	adc    BYTE PTR [ebx],al
  410d54:	xor    al,0xac
  410d56:	ins    DWORD PTR es:[edi],dx
  410d57:	xlat   BYTE PTR ds:[ebx]
  410d58:	jo     0x410d70
  410d5a:	jge    0x410dbb
  410d5c:	add    ebp,DWORD PTR [edi-0x42]
  410d5f:	xor    al,0xbd
  410d61:	xchg   edx,eax
  410d62:	mov    edx,0x3a855c9a
  410d67:	mov    cl,0x8f
  410d69:	jae    0x410d23
  410d6b:	pusha  
  410d6c:	pop    es
  410d6d:	repnz sbb al,0xb2
  410d70:	jecxz  0x410dae
  410d72:	loopne 0x410df3
  410d74:	test   al,0x93
  410d76:	jg     0x410dec
  410d78:	sub    BYTE PTR [eax-0x4c31b2d6],dl
  410d7e:	into   
  410d7f:	mov    ebx,0x30812084
  410d84:	clc    
  410d85:	or     eax,0x83dd7f58
  410d8a:	mov    cl,BYTE PTR [edi-0x6]
  410d8d:	stc    
  410d8e:	in     al,dx
  410d8f:	gs push ecx
  410d91:	jl     0x410d2b
  410d93:	rol    ch,1
  410d95:	adc    ecx,esp
  410d97:	jnp    0x410dbe
  410d99:	bnd jmp 0x410dc0
  410d9c:	pop    ss
  410d9d:	xor    ebp,DWORD PTR [eax-0x5b]
  410da0:	pop    edx
  410da1:	mov    cl,0xf2
  410da3:	(bad)  
  410da5:	dec    eax
  410da6:	ja     0x410de6
  410da8:	add    BYTE PTR [ebx-0x14],bh
  410dab:	pop    ecx
  410dac:	test   al,bh
  410dae:	dec    edi
  410daf:	aad    0x89
  410db1:	and    esi,DWORD PTR [ecx]
  410db3:	pop    ebp
  410db4:	fs loope 0x410d3f
  410db7:	xchg   esp,eax
  410db8:	jae    0x410e03
  410dba:	in     al,dx
  410dbb:	mov    edi,0x3a77071f
  410dc0:	lea    edi,[edi+ebx*1+0x4907ec36]
  410dc7:	mov    eax,ds:0x8592b15c
  410dcc:	or     esi,DWORD PTR [ebx]
  410dce:	test   BYTE PTR ds:0xcc5bcf52,ch
  410dd4:	sti    
  410dd5:	les    esp,FWORD PTR [edx]
  410dd7:	sbb    ebx,DWORD PTR [esi-0x2897e1e0]
  410ddd:	jmp    0x410e3e
  410ddf:	pop    ecx
  410de0:	imul   eax,DWORD PTR [eax+0x788dc326],0x6f
  410de7:	(bad)  
  410de8:	xchg   ebp,eax
  410de9:	sbb    al,0xc1
  410deb:	les    eax,FWORD PTR [eax]
  410ded:	test   BYTE PTR [ecx],ah
  410def:	in     eax,0x65
  410df1:	jno    0x410e3c
  410df3:	rep lods al,BYTE PTR ds:[esi]
  410df5:	pop    ds
  410df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df7:	std    
  410df8:	arpl   WORD PTR [ebp+0x429d7407],si
  410dfe:	sbb    edx,DWORD PTR ds:0x8425426e
  410e04:	adc    eax,0xf42fa6ee
  410e09:	sub    BYTE PTR [ecx+esi*2],bl
  410e0c:	push   esi
  410e0d:	inc    ecx
  410e0e:	arpl   di,di
  410e10:	bound  edx,QWORD PTR [ecx]
  410e12:	push   eax
  410e13:	jmp    0x2127dad3
  410e18:	inc    esi
  410e19:	in     eax,0x1a
  410e1b:	jp     0x410e5e
  410e1d:	repnz shl al,0x3f
  410e21:	sbb    ebx,0xbbbbccfb
  410e27:	ja     0x410df2
  410e29:	push   edx
  410e2a:	and    esi,DWORD PTR [edi-0x5b]
  410e2d:	jmp    0x410e55
  410e2f:	sbb    DWORD PTR [ecx],0x5e1c6209
  410e35:	out    0x8a,eax
  410e37:	or     ch,BYTE PTR [ebx]
  410e39:	sti    
  410e3a:	leave  
  410e3b:	push   0x1d
  410e3d:	xchg   edi,eax
  410e3e:	xor    ecx,DWORD PTR [edx+0xa]
  410e41:	sbb    ebp,DWORD PTR [esp]
  410e44:	pop    ebx
  410e45:	cmc    
  410e46:	outs   dx,BYTE PTR ds:[esi]
  410e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e48:	xlat   BYTE PTR ds:[ebx]
  410e49:	and    eax,0xb53cf05f
  410e4e:	nop
  410e4f:	add    eax,0x77d0492c
  410e54:	adc    eax,0x59be6925
  410e59:	add    eax,0xd9c66fdd
  410e5e:	adc    al,0x24
  410e60:	loope  0x410e82
  410e62:	gs pop ecx
  410e64:	scas   al,BYTE PTR es:[edi]
  410e65:	adc    al,0xe1
  410e67:	cmp    dh,BYTE PTR [edi-0x42f5116]
  410e6d:	nop
  410e6e:	mov    ebx,0x3a805994
  410e73:	iret   
  410e74:	mov    dh,0x34
  410e76:	ficom  WORD PTR [edi+0x8]
  410e79:	stos   DWORD PTR es:[edi],eax
  410e7a:	xchg   edi,eax
  410e7b:	into   
  410e7c:	or     al,0xb
  410e7e:	aaa    
  410e7f:	ds ret 0xfcf8
  410e83:	data16 xor al,0x41
  410e86:	mov    esi,0x234840da
  410e8b:	and    bh,cl
  410e8d:	(bad)  [ebx+0x51028eb5]
  410e93:	ins    BYTE PTR es:[edi],dx
  410e94:	dec    esp
  410e95:	add    DWORD PTR [ebx],ebp
  410e97:	int    0xa5
  410e99:	add    BYTE PTR [eax],ah
  410e9b:	addr16 test ecx,ecx
  410e9e:	mov    edi,0x1fb49a5c
  410ea3:	out    dx,eax
  410ea4:	shl    bh,0x91
  410ea7:	jmp    0x410ee5
  410ea9:	jmp    0x410ea2
  410eab:	dec    edi
  410eac:	push   cs
  410ead:	pop    DWORD PTR [eax-0x7e]
  410eb0:	xor    BYTE PTR [ecx+0x18],0x8b
  410eb4:	pop    esp
  410eb5:	jmp    0xed3d:0x881b3973
  410ebc:	in     eax,dx
  410ebd:	mov    al,ds:0x709b43a2
  410ec2:	aam    0x48
  410ec4:	pop    ds
  410ec5:	addr16 push cs
  410ec7:	xchg   esi,eax
  410ec8:	ds jnp 0x410ef7
  410ecb:	lea    eax,[esp+eax*2+0x71c2e191]
  410ed2:	or     cl,BYTE PTR [esi-0x6c]
  410ed5:	push   ecx
  410ed6:	cmp    bl,BYTE PTR [esi+0x55e5b239]
  410edc:	or     al,0xa8
  410ede:	test   eax,0xa7109001
  410ee3:	add    ah,BYTE PTR [ebx+0x1950ef84]
  410ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eea:	imul   ecx,DWORD PTR [esi-0x2e],0x51
  410eee:	scas   al,BYTE PTR es:[edi]
  410eef:	ss jle 0x410eda
  410ef2:	xor    BYTE PTR [ebx],dl
  410ef4:	xchg   cl,cl
  410ef6:	pop    ebp
  410ef7:	inc    esp
  410ef8:	sub    eax,0x609b0c68
  410efd:	and    BYTE PTR [edi],al
  410eff:	mov    bl,0x5b
  410f01:	aad    0x61
  410f03:	pop    ebx
  410f04:	(bad)  
  410f05:	cmp    BYTE PTR [ebp-0x492bfef3],ah
  410f0b:	or     DWORD PTR [ebx],0xfffffffa
  410f0e:	xchg   esi,eax
  410f0f:	mov    ds:0x204c3ea0,eax
  410f14:	push   ebx
  410f15:	jmp    0x410ef8
  410f17:	xlat   BYTE PTR ds:[ebx]
  410f18:	push   esi
  410f19:	dec    eax
  410f1a:	aaa    
  410f1b:	call   FWORD PTR [eax]
  410f1d:	xchg   esi,eax
  410f1e:	adc    al,0x8c
  410f20:	int    0x18
  410f22:	mov    ebx,0x2a1f3dbc
  410f27:	dec    esi
  410f28:	(bad)  
  410f29:	fdivr  DWORD PTR ds:0x6a93a62c
  410f2f:	xchg   edi,eax
  410f30:	xchg   ebx,eax
  410f31:	xor    al,0xb4
  410f33:	push   0x1d
  410f35:	inc    ebx
  410f36:	shr    DWORD PTR [edx-0xcb036cc],1
  410f3c:	xor    BYTE PTR [ebx],ch
  410f3e:	xor    ch,dl
  410f40:	cld    
  410f41:	push   ds
  410f42:	xor    edi,DWORD PTR [edi+esi*1-0x63]
  410f46:	sub    cl,bl
  410f48:	sub    eax,0xc53477cc
  410f4d:	js     0x410fb6
  410f4f:	add    DWORD PTR [eax-0x2aa778ba],edx
  410f55:	inc    edi
  410f56:	sbb    eax,0xeb34c374
  410f5b:	mov    al,ds:0x135f57f4
  410f60:	adc    BYTE PTR [edi-0x54],dh
  410f63:	int3   
  410f64:	push   esp
  410f65:	jne    0x410f69
  410f67:	xor    cl,BYTE PTR [eax-0x6b]
  410f6a:	mov    ebp,0x4f459ccd
  410f6f:	imul   eax,DWORD PTR [eax-0x1982b37],0x6821ba4d
  410f79:	jno    0x410fe4
  410f7b:	ins    DWORD PTR es:[edi],dx
  410f7c:	xchg   ebx,eax
  410f7d:	test   eax,ebx
  410f7f:	test   edx,ecx
  410f81:	xchg   DWORD PTR [ebp-0x2d],ecx
  410f84:	pushf  
  410f85:	icebp  
  410f86:	add    eax,0x622aa5fc
  410f8b:	mov    edx,0xaf6a61dd
  410f90:	(bad)  
  410f91:	sub    al,0x36
  410f93:	das    
  410f94:	pop    ecx
  410f95:	call   0x6a0c:0xefc072cc
  410f9c:	xchg   esi,eax
  410f9d:	mov    ss,WORD PTR [edi-0x5a]
  410fa0:	shr    BYTE PTR [edi+0x5a],0xa3
  410fa4:	pop    eax
  410fa5:	ror    ecx,cl
  410fa7:	mov    ebp,0xd4f656f0
  410fac:	xor    BYTE PTR [ebx],dl
  410fae:	pusha  
  410faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb0:	ret    0x2be7
  410fb3:	inc    edx
  410fb4:	xor    al,0xc9
  410fb6:	xor    ah,BYTE PTR [edx+0x2b]
  410fb9:	std    
  410fba:	jge    0x411020
  410fbc:	push   ss
  410fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fbe:	scas   eax,DWORD PTR es:[edi]
  410fbf:	inc    eax
  410fc0:	shr    DWORD PTR [ebp+0x40064162],cl
  410fc6:	pop    ecx
  410fc7:	sti    
  410fc8:	push   ebx
  410fc9:	mov    ds:0x302228e3,al
  410fce:	in     al,dx
  410fcf:	xor    BYTE PTR [ebx-0x61],bl
  410fd2:	mov    ebp,0x9062f426
  410fd7:	ror    BYTE PTR [ecx-0x5f6b9dfa],0x70
  410fde:	mov    ebx,0xa5a3da18
  410fe3:	mov    ebp,0x85a67a1c
  410fe8:	cwde   
  410fe9:	cmp    eax,0x7fb69a57
  410fee:	jl     0x41106b
  410ff0:	call   0x3be0:0x4da9fa33
  410ff7:	retf   0x1ff5
  410ffa:	call   0x780c7fe2
  410fff:	cmp    DWORD PTR [ebx-0x512146c1],esp
  411005:	iret   
  411006:	jnp    0x411061
  411008:	dec    esi
  411009:	xchg   esp,eax
  41100a:	sbb    al,0xc3
  41100c:	outs   dx,BYTE PTR ds:[esi]
  41100d:	lea    ebx,gs:[edx]
  411010:	jns    0x411015
  411012:	and    dh,BYTE PTR [eax]
  411014:	fxtract 
  411016:	mov    dh,0xf2
  411018:	lds    edx,FWORD PTR [eax-0x2]
  41101b:	in     al,dx
  41101c:	sub    edx,0x74
  41101f:	and    al,0xa0
  411021:	sub    eax,0x7d60b740
  411026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411027:	xor    bl,BYTE PTR [ebx+0x782f207c]
  41102d:	fisttp DWORD PTR ds:0xe8810cd9
  411033:	push   ecx
  411034:	mov    es,WORD PTR [esi-0x154068fb]
  41103a:	daa    
  41103b:	xor    eax,0xe78d8c81
  411040:	mov    al,BYTE PTR [ebx+0x5d1e0e18]
  411046:	das    
  411047:	gs push esp
  411049:	gs jo  0x4110c8
  41104c:	sub    dh,BYTE PTR [ebx-0x23]
  41104f:	jb     0x410fe4
  411051:	test   esi,edx
  411053:	xor    BYTE PTR ds:0x8c0cc33f,dl
  411059:	cmp    ebp,DWORD PTR ds:[edx-0x48e1cf3a]
  411060:	fcom   QWORD PTR [eax]
  411062:	repz push ds
  411064:	mov    cl,0xc6
  411066:	call   0x3bbe:0x966c531
  41106d:	enter  0x4b9b,0x65
  411071:	shl    BYTE PTR [esi],0x81
  411074:	mov    dh,0x6f
  411076:	std    
  411077:	inc    edi
  411078:	mov    dl,0x72
  41107a:	data16 into 
  41107c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41107d:	mov    bh,0x30
  41107f:	adc    edx,DWORD PTR [edi]
  411081:	pop    eax
  411082:	sbb    ch,0xc4
  411085:	mov    al,0xa1
  411087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411088:	fistp  QWORD PTR [edx-0x65b013df]
  41108e:	inc    ebx
  41108f:	dec    ebp
  411090:	add    BYTE PTR [edx-0x3daab29d],dl
  411096:	ret    0x8a15
  411099:	pop    ds
  41109a:	or     BYTE PTR [eax+0x5b502d78],al
  4110a0:	add    eax,0x7c897c5c
  4110a5:	arpl   WORD PTR [ebx+0x15],bx
  4110a8:	test   DWORD PTR cs:[esi],0xfdcae2b4
  4110af:	xor    esi,DWORD PTR [edi]
  4110b1:	cwde   
  4110b2:	sub    al,0x2f
  4110b4:	cmp    esp,eax
  4110b6:	les    edx,FWORD PTR [edx+0x2b0a6d71]
  4110bc:	sub    ebx,DWORD PTR [ebp-0x45]
  4110bf:	ins    DWORD PTR es:[edi],dx
  4110c0:	xchg   ecx,eax
  4110c1:	cmp    BYTE PTR [edi+0x406dce5e],al
  4110c7:	scas   eax,DWORD PTR es:[edi]
  4110c8:	mov    DWORD PTR [ebx*2+0x51dfcac4],esi
  4110cf:	dec    esp
  4110d0:	dec    ebp
  4110d1:	ds sbb edx,ecx
  4110d4:	or     bl,BYTE PTR [edi+0x1ed8fb97]
  4110da:	outs   dx,BYTE PTR ds:[esi]
  4110db:	mov    bh,BYTE PTR [edi+0x603f671a]
  4110e1:	(bad)  
  4110e2:	into   
  4110e3:	sahf   
  4110e4:	(bad)  
  4110e5:	sbb    ch,dl
  4110e7:	mov    ch,ah
  4110e9:	aad    0x2d
  4110eb:	in     eax,dx
  4110ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ed:	test   DWORD PTR [edx+ecx*2+0x3a444f16],eax
  4110f4:	jno    0x411165
  4110f6:	sbb    dl,BYTE PTR [ecx]
  4110f8:	cli    
  4110f9:	pop    edx
  4110fa:	inc    edx
  4110fb:	shl    BYTE PTR [ecx-0x2521c44a],0x66
  411102:	ins    BYTE PTR es:[edi],dx
  411103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411104:	ret    
  411105:	in     al,0xf5
  411107:	push   eax
  411108:	ret    
  411109:	hlt    
  41110a:	add    al,0x6b
  41110c:	js     0x4110e5
  41110e:	add    eax,0x8193d293
  411113:	stc    
  411114:	ss int3 
  411116:	in     eax,dx
  411117:	mov    DWORD PTR [ebx-0x16],ecx
  41111a:	cmc    
  41111b:	add    DWORD PTR [eax-0x6f260764],0xffffffe5
  411122:	sbb    BYTE PTR [esi+edx*8],dh
  411125:	je     0x4110c5
  411127:	dec    eax
  411128:	jnp    0x4110b7
  41112a:	xor    al,0x1b
  41112c:	xchg   edi,eax
  41112d:	faddp  st(5),st
  41112f:	cdq    
  411130:	push   0x26bb62bf
  411135:	das    
  411136:	scas   al,BYTE PTR es:[edi]
  411137:	cs xchg esi,eax
  411139:	pop    edi
  41113a:	je     0x411182
  41113c:	(bad)  
  41113d:	jne    0x4110e3
  41113f:	pop    ebx
  411140:	cli    
  411141:	dec    eax
  411142:	mov    ds:0x59a704f5,eax
  411147:	mov    eax,ds:0xa15d9db
  41114c:	sar    DWORD PTR [eax],0xf0
  41114f:	jp     0x411181
  411151:	enter  0xbb67,0x82
  411155:	pop    ebx
  411156:	mov    ds:0x489f357d,al
  41115b:	shl    BYTE PTR [edx+ecx*1],0x56
  41115f:	icebp  
  411160:	out    0xbd,al
  411162:	dec    edx
  411163:	cli    
  411164:	(bad)  
  411165:	dec    esi
  411166:	repz sti 
  411168:	stos   DWORD PTR es:[edi],eax
  411169:	das    
  41116a:	ror    DWORD PTR [ebp+0x1],cl
  41116d:	jo     0x411144
  41116f:	das    
  411170:	sub    eax,0x5af7757c
  411175:	sti    
  411176:	push   es
  411177:	inc    eax
  411178:	out    dx,al
  411179:	pop    es
  41117a:	popf   
  41117b:	push   ds
  41117c:	retf   0x7a55
  41117f:	cdq    
  411180:	xlat   BYTE PTR ds:[ebx]
  411181:	adc    al,0x4a
  411183:	jnp    0x411161
  411185:	jae    0x41111d
  411187:	loop   0x41115d
  411189:	or     BYTE PTR [ebx-0x51af8d46],ch
  41118f:	fwait
  411190:	ss out dx,al
  411192:	dec    esi
  411193:	out    dx,eax
  411194:	shl    DWORD PTR [ebx-0x3175208c],cl
  41119a:	sar    BYTE PTR [esi-0x5],cl
  41119d:	push   ebx
  41119e:	mov    ebx,es
  4111a0:	sti    
  4111a1:	in     al,dx
  4111a2:	aad    0x1
  4111a4:	outs   dx,BYTE PTR ds:[esi]
  4111a5:	repnz xlat BYTE PTR ds:[ebx]
  4111a7:	jo     0x411190
  4111a9:	mov    DWORD PTR [ebp-0x48],eax
  4111ac:	dec    ecx
  4111ad:	js     0x411151
  4111af:	gs hlt 
  4111b1:	frstor [ecx]
  4111b3:	addr16 mov ebp,0x5d2ff44f
  4111b9:	ds jns 0x4111f3
  4111bc:	xchg   ecx,eax
  4111bd:	cmp    eax,edx
  4111bf:	push   ds
  4111c0:	scas   al,BYTE PTR es:[edi]
  4111c1:	sub    dh,dl
  4111c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c4:	nop
  4111c5:	loope  0x411148
  4111c7:	cmp    DWORD PTR [esi+0x215f461e],edi
  4111cd:	ret    0xf73a
  4111d0:	fnstsw WORD PTR [edx-0x695e137e]
  4111d6:	adc    BYTE PTR [eax-0x20],0xc7
  4111da:	inc    ebx
  4111db:	lds    edi,FWORD PTR [eax]
  4111dd:	gs xor al,0xef
  4111e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e1:	lods   al,BYTE PTR ds:[esi]
  4111e2:	repnz iret 
  4111e4:	mov    bl,0x19
  4111e6:	dec    edi
  4111e7:	shr    al,cl
  4111e9:	addr16 aam 0xaa
  4111ec:	nop
  4111ed:	xlat   BYTE PTR ds:[ebx]
  4111ee:	mov    ah,0x22
  4111f0:	outs   dx,DWORD PTR ds:[esi]
  4111f1:	call   0x3153:0xb33b017
  4111f8:	xor    eax,0xf7a21ae0
  4111fd:	sbb    eax,0xe6ce68c3
  411202:	sub    cl,BYTE PTR [edx-0x26292392]
  411208:	fld    st(0)
  41120a:	test   DWORD PTR [ebp+0x325b0d84],edi
  411210:	stos   DWORD PTR es:[edi],eax
  411211:	ds push eax
  411213:	cmp    eax,0xb96cde71
  411218:	fsub   DWORD PTR [esp+eax*1-0x1d183c4c]
  41121f:	and    DWORD PTR [ecx-0x4b],0x42
  411223:	int3   
  411224:	mov    bh,0xfc
  411226:	sub    cl,BYTE PTR [esi-0x12]
  411229:	adc    al,ah
  41122b:	mov    ah,0x6b
  41122d:	push   edx
  41122e:	pop    ebx
  41122f:	xor    ch,al
  411231:	sbb    al,0x3a
  411233:	imul   edi,ebp,0x2dd0dc5e
  411239:	ret    0x5668
  41123c:	xchg   edi,eax
  41123d:	mov    ch,0x8b
  41123f:	push   ds
  411240:	pushf  
  411241:	std    
  411242:	xchg   esp,eax
  411243:	pmuludq mm6,QWORD PTR [edx]
  411246:	mov    ebx,0xe726015a
  41124b:	jae    0x41124d
  41124d:	jne    0x4112cb
  41124f:	lahf   
  411250:	stos   DWORD PTR es:[edi],eax
  411251:	pop    es
  411252:	mov    eax,es
  411254:	lahf   
  411255:	jmp    0xf643:0x48e3d17e
  41125c:	dec    eax
  41125d:	jmp    0x29c64fa9
  411262:	mov    al,ds:0xa0a93cdf
  411267:	mov    BYTE PTR [eax-0x59f497f],al
  41126d:	(bad)  
  41126e:	xchg   ecx,eax
  41126f:	adc    bl,ch
  411271:	mov    ebx,0x922ab871
  411276:	lods   eax,DWORD PTR ds:[esi]
  411277:	jp     0x411246
  411279:	push   ss
  41127a:	ins    DWORD PTR es:[edi],dx
  41127b:	into   
  41127c:	out    0x79,al
  41127e:	lock cmp ecx,DWORD PTR [ecx+0x7fc14232]
  411285:	jge    0x411299
  411287:	add    ch,BYTE PTR [ebp+0x343c8297]
  41128d:	cmc    
  41128e:	mov    BYTE PTR [ebx-0xe],dh
  411291:	jbe    0x411214
  411293:	cmp    DWORD PTR [eax+0x5420762d],edx
  411299:	adc    DWORD PTR [eax+esi*4+0x5f91fbe4],ebx
  4112a0:	jns    0x4112a4
  4112a2:	rcr    bl,0xfe
  4112a5:	stc    
  4112a6:	cmp    BYTE PTR [esi],0x27
  4112a9:	fisubr DWORD PTR [edi+edx*2+0x15]
  4112ad:	ss (bad) 
  4112af:	sar    BYTE PTR [ecx],1
  4112b1:	scas   eax,DWORD PTR es:[edi]
  4112b2:	out    dx,al
  4112b3:	out    dx,eax
  4112b4:	enter  0x87a6,0x5e
  4112b8:	sbb    eax,0x4afa2521
  4112bd:	inc    esp
  4112be:	sbb    bl,BYTE PTR [ebx-0x19fbb27e]
  4112c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c5:	loop   0x411271
  4112c7:	xor    eax,0xef0d36f
  4112cc:	cmc    
  4112cd:	xchg   BYTE PTR [edi+0x6432b22f],bh
  4112d3:	test   edi,edi
  4112d5:	lods   eax,DWORD PTR ds:[esi]
  4112d7:	ds test eax,0x74012602
  4112dd:	or     al,0x9b
  4112df:	sahf   
  4112e0:	das    
  4112e1:	or     ch,cl
  4112e3:	idiv   BYTE PTR [edi+0x7]
  4112e6:	test   DWORD PTR [ecx+0x6f],ebx
  4112e9:	jae    0x41128c
  4112eb:	fwait
  4112ec:	xor    eax,0x93967086
  4112f1:	xchg   BYTE PTR [ebp-0x4a04b190],al
  4112f7:	fstp   DWORD PTR [ebx-0x3ff2e39e]
  4112fd:	ds stos BYTE PTR es:[edi],al
  4112ff:	call   DWORD PTR [edx+0x16445421]
  411305:	(bad)  
  411306:	mov    esp,0x9a1d02d1
  41130b:	jo     0x4112bc
  41130d:	lds    ecx,FWORD PTR [ebx]
  41130f:	xor    eax,0x92f7aa05
  411314:	push   esi
  411315:	jbe    0x41138c
  411317:	fwait
  411318:	push   ebx
  411319:	not    esi
  41131b:	pop    ebp
  41131c:	icebp  
  41131d:	lock and eax,eax
  411320:	imul   esp,edx,0xb1bc475f
  411326:	test   BYTE PTR [esi],bl
  411328:	sub    dh,BYTE PTR [ebp+0x41da5b58]
  41132e:	push   ebp
  41132f:	push   eax
  411330:	add    esi,DWORD PTR [edi+0x39]
  411333:	sub    al,0x96
  411335:	push   es
  411336:	repnz in eax,dx
  411338:	pmaxsw mm0,QWORD PTR [edx+0x4d88f423]
  41133f:	cmp    BYTE PTR [ebp+0x5f871a8f],0x4f
  411346:	hlt    
  411347:	mov    ecx,0xc5ba1d22
  41134c:	and    eax,0x7de39e32
  411351:	pop    ss
  411352:	popa   
  411353:	push   esp
  411354:	mov    ch,BYTE PTR ds:0xece8e5d1
  41135a:	pop    ss
  41135b:	out    dx,eax
  41135c:	(bad)  
  41135d:	pop    ecx
  41135e:	sbb    dh,BYTE PTR [edi-0x2fbca65f]
  411364:	adc    DWORD PTR [esi],0x1a808928
  41136a:	loope  0x411349
  41136c:	stos   BYTE PTR es:[edi],al
  41136d:	jecxz  0x4113ca
  41136f:	or     eax,0x6296488e
  411374:	xor    BYTE PTR [ecx-0x20],bl
  411377:	lahf   
  411378:	jge    0x41133d
  41137a:	in     eax,0xf1
  41137c:	push   ebp
  41137d:	jmp    0x6a4cc861
  411382:	(bad)  
  411383:	jmp    0x6045951e
  411388:	fcmovnbe st,st(5)
  41138a:	test   al,0x8a
  41138c:	inc    ebp
  41138d:	xchg   esi,eax
  41138e:	jle    0x4113d2
  411390:	xchg   esp,eax
  411391:	jp     0x411399
  411393:	shl    BYTE PTR [ecx+ebp*8+0x7d6b9f77],cl
  41139a:	mov    edx,0xb27bdc26
  41139f:	cmp    al,0x48
  4113a1:	mov    bh,0x4
  4113a3:	push   ds
  4113a4:	xchg   dh,dh
  4113a6:	jno    0x4113e1
  4113a8:	adc    DWORD PTR [esi],edi
  4113aa:	mov    ch,0x17
  4113ac:	ins    BYTE PTR es:[edi],dx
  4113ad:	jb     0x4113da
  4113af:	(bad)  
  4113b0:	jg     0x411339
  4113b2:	(bad)  
  4113b3:	sub    cl,cl
  4113b5:	xchg   ecx,eax
  4113b6:	scas   eax,DWORD PTR es:[edi]
  4113b7:	inc    ebp
  4113b8:	push   ebx
  4113b9:	jb     0x411364
  4113bb:	clc    
  4113bc:	retf   
  4113bd:	fstp   DWORD PTR [ecx+ecx*1-0x43f236b7]
  4113c4:	outs   dx,DWORD PTR ds:[esi]
  4113c5:	out    0xf8,al
  4113c7:	dec    esp
  4113c8:	jnp    0x41135f
  4113ca:	idiv   DWORD PTR [esi-0x33]
  4113cd:	inc    edx
  4113ce:	out    0x1a,al
  4113d0:	cwde   
  4113d1:	mov    esi,0x880c8eaa
  4113d6:	push   edi
  4113d7:	out    0xc4,eax
  4113d9:	int3   
  4113da:	sbb    DWORD PTR [esi-0x38855bce],esi
  4113e0:	lahf   
  4113e1:	and    BYTE PTR [ebx+edi*4],dl
  4113e4:	add    eax,0xa8cb7db0
  4113e9:	scas   al,BYTE PTR es:[edi]
  4113ea:	dec    edx
  4113eb:	idiv   BYTE PTR [esi+0x19]
  4113ee:	mov    ebp,ebx
  4113f0:	rcr    BYTE PTR [ecx+0x2bdcbc25],0x62
  4113f7:	push   edi
  4113f8:	or     ecx,DWORD PTR [edi-0x2d]
  4113fb:	mov    BYTE PTR [eax-0x3b306f26],cl
  411401:	jmp    0x41141b
  411403:	(bad)  
  411404:	pop    edx
  411405:	add    al,bh
  411407:	(bad)  
  411408:	ss inc edx
  41140a:	xchg   DWORD PTR [esi+0x2f2e7ba6],ebp
  411410:	scas   al,BYTE PTR es:[edi]
  411411:	pop    edx
  411412:	ret    
  411413:	fucomp st(6)
  411415:	sbb    eax,0xa45fc2e1
  41141a:	popa   
  41141b:	mov    ah,0xad
  41141d:	fs call 0x8c3a7e26
  411423:	les    esi,FWORD PTR [eax-0x392babd1]
  411429:	xchg   ecx,eax
  41142a:	push   es
  41142b:	add    al,0xe4
  41142d:	dec    esp
  41142e:	push   esi
  41142f:	xor    cl,BYTE PTR [edx+0x24feec1]
  411435:	not    bh
  411437:	cli    
  411438:	jb     0x411479
  41143a:	lods   eax,DWORD PTR ds:[esi]
  41143b:	lds    edx,FWORD PTR [ebx+0x68e80ca0]
  411441:	hlt    
  411442:	and    al,0x1c
  411444:	fcom   DWORD PTR [ebp+eiz*8-0x20]
  411448:	cmp    BYTE PTR [ebx-0x70],al
  41144b:	ret    
  41144c:	cmp    DWORD PTR [esi],esp
  41144e:	clc    
  41144f:	push   es
  411450:	sub    eax,0x60a1fe38
  411455:	sti    
  411456:	add    ebx,edi
  411458:	pop    ss
  411459:	xor    DWORD PTR [edx+edi*4+0x6c3deac2],0x968da577
  411464:	add    dh,BYTE PTR [edi]
  411466:	outs   dx,BYTE PTR ds:[esi]
  411467:	mov    cl,0xc3
  411469:	xchg   edx,eax
  41146a:	push   edi
  41146b:	or     al,0x7
  41146d:	aad    0xcd
  41146f:	add    bl,BYTE PTR ds:0x1cfb5882
  411475:	stc    
  411476:	sub    ch,ch
  411478:	xchg   edx,eax
  411479:	inc    ebx
  41147a:	mov    ecx,0xc3900695
  41147f:	cld    
  411480:	sbb    BYTE PTR [edx+ecx*4-0x783a394b],dh
  411487:	int    0xd5
  411489:	imul   ebp,DWORD PTR ds:0x686ec515,0xd1b209b6
  411493:	pop    ebx
  411494:	add    eax,0x897c853b
  411499:	mov    eax,ds:0x60883b7c
  41149e:	sub    esp,DWORD PTR [edi+0x5a63350d]
  4114a4:	pop    ebx
  4114a5:	test   eax,0x7deb0e9
  4114aa:	jno    0x41145b
  4114ac:	imul   ebx,DWORD PTR [ecx],0xfffffffa
  4114af:	dec    ecx
  4114b0:	add    BYTE PTR [ecx-0x42],cl
  4114b3:	mov    esp,0x1b4c2e5e
  4114b8:	loop   0x41148f
  4114ba:	mov    BYTE PTR [edx+ebx*8],dh
  4114bd:	aaa    
  4114be:	cli    
  4114bf:	dec    eax
  4114c0:	adc    ah,bh
  4114c2:	int3   
  4114c3:	jge    0x41147a
  4114c5:	repnz cmp BYTE PTR [edi+0x39],dh
  4114c9:	xchg   ebx,eax
  4114ca:	stos   DWORD PTR es:[edi],eax
  4114cb:	jecxz  0x41147b
  4114cd:	mov    ebp,0x122d0194
  4114d2:	ror    DWORD PTR ds:0x470e4593,1
  4114d8:	pop    es
  4114d9:	and    al,BYTE PTR [edi]
  4114db:	xchg   DWORD PTR [ebp+0x71],ecx
  4114de:	iret   
  4114df:	dec    eax
  4114e0:	jmp    eax
  4114e2:	pop    esi
  4114e3:	adc    edx,DWORD PTR [eax]
  4114e5:	ja     0x411519
  4114e7:	mov    dh,0x3d
  4114e9:	data16 out dx,al
  4114eb:	pop    esp
  4114ec:	ins    BYTE PTR es:[edi],dx
  4114ed:	imul   esi,DWORD PTR ds:0x857bb408,0x63
  4114f4:	dec    esp
  4114f5:	js     0x4114f4
  4114f7:	mov    ebp,DWORD PTR [ecx-0x9]
  4114fa:	sbb    cl,dh
  4114fc:	cmp    al,0xff
  4114fe:	in     al,dx
  4114ff:	pop    ecx
  411500:	xchg   edx,eax
  411501:	in     al,0x8b
  411503:	mov    edx,0x18d5df91
  411508:	add    edi,0xdeb7cebf
  41150e:	push   edi
  41150f:	pop    ss
  411510:	jb     0x41153f
  411512:	sub    ebp,eax
  411514:	push   esi
  411515:	pop    ds
  411516:	in     eax,dx
  411517:	loop   0x4114a2
  411519:	xchg   BYTE PTR [ebx-0x5b],bl
  41151c:	mov    eax,0xc32f1d02
  411521:	popa   
  411522:	jns    0x41157f
  411524:	and    esi,DWORD PTR [bp+di]
  411527:	add    edi,DWORD PTR [ebx]
  411529:	xchg   dh,bh
  41152b:	adc    esp,DWORD PTR [ebx+edx*2-0x69]
  41152f:	mov    ch,0x6b
  411531:	rol    esp,0x4c
  411534:	mov    BYTE PTR [eax-0x3c],cl
  411537:	dec    edx
  411538:	das    
  411539:	dec    eax
  41153a:	icebp  
  41153b:	icebp  
  41153c:	push   edx
  41153d:	jnp    0x4114d9
  41153f:	xlat   BYTE PTR ds:[ebx]
  411540:	(bad)  
  411541:	dec    ebp
  411542:	push   esi
  411543:	sub    ebx,ecx
  411545:	iret   
  411546:	call   DWORD PTR [edx+0x4f4ff210]
  41154c:	pop    ds
  41154d:	xor    ah,BYTE PTR [ebp-0x67]
  411550:	popa   
  411551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411552:	xor    ch,0x9e
  411555:	iret   
  411556:	pop    eax
  411557:	pusha  
  411558:	inc    edx
  411559:	jb     0x411533
  41155b:	adc    BYTE PTR [esi],cl
  41155d:	pop    edx
  41155e:	popf   
  41155f:	icebp  
  411560:	jae    0x4115c7
  411562:	jo     0x411596
  411564:	scas   eax,DWORD PTR es:[edi]
  411565:	mov    ebp,0x3c99afbd
  41156a:	popa   
  41156b:	pop    ebx
  41156c:	cli    
  41156d:	out    0xb,eax
  41156f:	cmp    eax,0xc0169a43
  411574:	jle    0x411502
  411576:	sbb    ecx,DWORD PTR [edi-0x46b888ef]
  41157c:	xor    al,0x1d
  41157e:	(bad)  
  41157f:	fsubr  st(0),st
  411581:	adc    dl,BYTE PTR [eax+0x30]
  411584:	cmc    
  411585:	into   
  411586:	imul   ch
  411588:	ret    0xeef4
  41158b:	fstp   QWORD PTR [esi+0x3a700173]
  411591:	sub    DWORD PTR [edx],0xc38df295
  411597:	fs push ss
  411599:	test   ebx,edi
  41159b:	pop    eax
  41159c:	add    cl,BYTE PTR fs:[ebx]
  41159f:	xchg   esp,eax
  4115a0:	retf   0xfdc7
  4115a3:	jae    0x4115a5
  4115a5:	inc    eax
  4115a6:	mov    BYTE PTR [edx],ch
  4115a8:	or     dl,BYTE PTR [ebx]
  4115aa:	pusha  
  4115ab:	sbb    si,WORD PTR [esi+0x25]
  4115af:	add    esi,esp
  4115b1:	in     al,dx
  4115b2:	pop    edx
  4115b3:	or     DWORD PTR [eax-0x4890ca07],esi
  4115b9:	sub    ebx,DWORD PTR [edx]
  4115bb:	mov    dh,0xa2
  4115bd:	int3   
  4115be:	mov    ch,0x1e
  4115c0:	jo     0x411553
  4115c2:	jo     0x41162d
  4115c4:	dec    ebp
  4115c5:	imul   ebx,DWORD PTR ds:0xa3275183,0x39
  4115cc:	sub    DWORD PTR ds:0x49b7147,esp
  4115d2:	stc    
  4115d3:	dec    ebx
  4115d4:	nop
  4115d5:	jne    0x4115b0
  4115d7:	dec    edi
  4115d8:	loope  0x4115ce
  4115da:	iret   
  4115db:	or     DWORD PTR [eax-0x6f],edx
  4115de:	ss pop ebp
  4115e0:	les    edi,FWORD PTR [edx+0x62]
  4115e3:	daa    
  4115e4:	cmp    edi,eax
  4115e6:	pushf  
  4115e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115e8:	lahf   
  4115e9:	jb     0x411651
  4115eb:	add    dl,bl
  4115ed:	jle    0x4115b4
  4115ef:	add    eax,0xbbb3ddcb
  4115f4:	scas   al,BYTE PTR es:[edi]
  4115f5:	loope  0x411674
  4115f7:	cmovbe ebp,DWORD PTR [esi-0x664edc9]
  4115fe:	rcl    BYTE PTR [esi+0x7b],1
  411601:	enter  0xb314,0xdf
  411605:	inc    ebp
  411606:	pop    ds
  411607:	stos   BYTE PTR es:[edi],al
  411608:	adc    dl,BYTE PTR [edi]
  41160a:	mov    ds:0x70b395a,al
  41160f:	test   eax,0xabce878e
  411614:	pop    ecx
  411615:	dec    ebx
  411616:	dec    ebx
  411617:	mov    ah,0xbb
  411619:	jae    0x41160f
  41161b:	pop    ebp
  41161c:	xor    al,BYTE PTR [ebx-0x55]
  41161f:	adc    dh,BYTE PTR [ebp+0x9f6ae83]
  411625:	add    edi,ebx
  411627:	sbb    dl,0xb1
  41162a:	mov    dh,ch
  41162c:	push   edi
  41162d:	fisub  DWORD PTR [edi+edx*4+0x7d4bf76e]
  411634:	mov    edi,0x4c4a65a3
  411639:	and    DWORD PTR [edi],edi
  41163b:	ret    
  41163c:	jecxz  0x411668
  41163e:	xor    bh,bl
  411640:	dec    esp
  411641:	cmp    DWORD PTR [eax],esp
  411643:	leave  
  411644:	inc    edx
  411645:	xchg   ebx,eax
  411646:	iret   
  411647:	sahf   
  411648:	inc    eax
  411649:	test   al,0xd3
  41164b:	fsubr  st(1),st
  41164d:	and    eax,0x227989a0
  411652:	and    al,0x36
  411654:	clc    
  411655:	int3   
  411656:	inc    eax
  411657:	aad    0x5b
  411659:	mov    bl,dh
  41165b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165c:	or     edi,DWORD PTR [esi]
  41165e:	mov    edi,0x3a2e00ee
  411663:	ret    0x208c
  411666:	popf   
  411667:	pop    ebx
  411668:	and    eax,0x3ecd5f3b
  41166d:	fs and cl,bh
  411670:	sbb    cl,bl
  411672:	pop    ds
  411673:	scas   al,BYTE PTR es:[edi]
  411674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411675:	inc    edx
  411676:	popa   
  411677:	stos   DWORD PTR es:[edi],eax
  411678:	lods   al,BYTE PTR ds:[esi]
  411679:	jmp    0x4c4c:0x33732a5
  411680:	xor    edi,esi
  411682:	xchg   ecx,eax
  411683:	mov    edi,0x65299219
  411688:	out    0x90,al
  41168a:	ins    BYTE PTR es:[edi],dx
  41168b:	xchg   edi,eax
  41168c:	push   ss
  41168d:	sahf   
  41168e:	adc    DWORD PTR [eax-0x38bb87e6],ebx
  411694:	fimul  DWORD PTR [esi+ecx*2-0x9bf64b3]
  41169b:	or     al,0xf3
  41169d:	xchg   esp,eax
  41169e:	dec    ebx
  41169f:	mov    fs,WORD PTR [esi]
  4116a1:	push   0xffffffbf
  4116a3:	xor    DWORD PTR ds:0xd1f9f6eb,0x4a
  4116aa:	pop    esp
  4116ab:	in     eax,0x5e
  4116ad:	(bad)  
  4116af:	and    BYTE PTR [eax+0x5e],bl
  4116b2:	fadd   st,st(7)
  4116b4:	(bad)  
  4116b5:	arpl   bp,bx
  4116b7:	mul    BYTE PTR [ecx-0x1377f97c]
  4116bd:	call   0x7c3a492e
  4116c2:	cmc    
  4116c3:	pushf  
  4116c4:	inc    ebp
  4116c5:	mov    al,ds:0x132842a1
  4116ca:	stos   BYTE PTR es:[edi],al
  4116cb:	in     al,0x66
  4116cd:	fwait
  4116ce:	mov    ?,WORD PTR [esi-0x7f]
  4116d1:	shr    BYTE PTR [eax+0x4c8d9af8],cl
  4116d7:	mov    WORD PTR [ebx+0x1f],es
  4116da:	dec    ebp
  4116db:	push   edi
  4116dc:	loop   0x41170f
  4116de:	pop    edi
  4116df:	mov    WORD PTR [esi-0x4ecb64fc],?
  4116e5:	mov    cl,0x72
  4116e7:	mov    cl,0x97
  4116e9:	inc    edx
  4116ea:	frstor [esi]
  4116ec:	mov    ds,WORD PTR [ebx]
  4116ee:	and    BYTE PTR [ebp-0x13ad1648],ah
  4116f4:	xchg   edi,eax
  4116f5:	leave  
  4116f6:	cmp    DWORD PTR [ecx-0x23],esp
  4116f9:	jo     0x411733
  4116fb:	loope  0x41168b
  4116fd:	xor    bl,bh
  4116ff:	fwait
  411700:	ds clc 
  411702:	lahf   
  411703:	push   esp
  411704:	fs pop ss
  411706:	mov    BYTE PTR [edi+0x14],al
  411709:	or     edi,DWORD PTR [esi-0x12]
  41170c:	push   ecx
  41170d:	ret    0xc102
  411710:	(bad)  
  411711:	lds    esi,FWORD PTR [edx+0x7b56e6de]
  411717:	xchg   esi,eax
  411718:	pop    ebx
  411719:	cmp    dl,BYTE PTR [ebx]
  41171b:	aas    
  41171c:	(bad)  
  41171d:	sahf   
  41171e:	jle    0x41172e
  411720:	add    DWORD PTR ds:0x28cfa319,eax
  411726:	rcl    BYTE PTR [esi],1
  411728:	add    ch,dh
  41172a:	push   edi
  41172b:	shl    DWORD PTR [ebx-0x7f22035f],0x5e
  411732:	cmp    eax,0xf8adf030
  411737:	fstp   QWORD PTR [edi+0x69]
  41173a:	sub    DWORD PTR [ecx+0x4ba1a2af],0x7d551f19
  411744:	or     BYTE PTR [esi+0x46],ah
  411747:	mov    bl,0xa6
  411749:	cdq    
  41174a:	std    
  41174b:	jo     0x4116d2
  41174d:	fs sti 
  41174f:	std    
  411750:	fld    QWORD PTR [esi+0x21625013]
  411756:	stos   BYTE PTR es:[edi],al
  411757:	loopne 0x41170d
  411759:	fstp   TBYTE PTR ds:0x71d927d5
  41175f:	mov    DWORD PTR [edx],0x77dc0cdd
  411765:	adc    al,0x9a
  411767:	inc    edx
  411768:	ror    BYTE PTR [ebx-0x14],cl
  41176b:	pop    es
  41176c:	aam    0xd0
  41176e:	mov    DWORD PTR [ecx+0x4a],esp
  411771:	test   eax,0x9b182e11
  411776:	clc    
  411777:	xor    al,0x2e
  41177a:	mov    ebp,0x39fafa20
  41177f:	loop   0x4117f6
  411781:	jle    0x4117be
  411783:	pop    es
  411784:	pop    ebx
  411785:	wbinvd 
  411787:	fistp  WORD PTR [ebp+0x7df403ce]
  41178d:	jnp    0x4117cc
  41178f:	jle    0x411711
  411791:	mov    edx,0x1443f80
  411796:	leave  
  411797:	inc    edx
  411798:	mov    ebp,DWORD PTR [edi]
  41179a:	scas   eax,DWORD PTR es:[edi]
  41179b:	ret    0x9f9f
  41179e:	add    ebp,DWORD PTR [eax]
  4117a0:	add    esi,DWORD PTR [ebx]
  4117a2:	sub    ch,dh
  4117a4:	cs lock ret 
  4117a7:	jl     0x4117cd
  4117a9:	lea    esp,[edx]
  4117ab:	sahf   
  4117ac:	or     BYTE PTR [esi-0x33],bl
  4117af:	push   cs
  4117b0:	hlt    
  4117b1:	in     al,0x20
  4117b3:	sbb    DWORD PTR [edx+0x29],edi
  4117b6:	xor    DWORD PTR [ecx+0x1f],esi
  4117b9:	adc    al,0x75
  4117bb:	test   BYTE PTR ds:0xcc2edbda,ah
  4117c1:	pop    esp
  4117c2:	fs push esp
  4117c4:	jg     0x41182e
  4117c6:	jle    0x4117f8
  4117c8:	push   0x6d8202e4
  4117cd:	out    0xca,al
  4117cf:	xor    al,0xfd
  4117d1:	dec    eax
  4117d2:	xor    BYTE PTR [edx-0x1eaa9955],ah
  4117d8:	(bad)  
  4117d9:	ror    DWORD PTR ss:[edi+0x16],cl
  4117dd:	xchg   ebx,eax
  4117de:	(bad)  
  4117df:	jg     0x4117f5
  4117e1:	mov    bh,0x7e
  4117e3:	data16 jle 0x4117bd
  4117e6:	(bad)  
  4117e7:	mov    esi,0x61d0d29e
  4117ec:	jge    0x411840
  4117ee:	arpl   WORD PTR [eax+0x67b26a94],si
  4117f4:	dec    edx
  4117f5:	pop    ds
  4117f6:	ins    DWORD PTR es:[edi],dx
  4117f7:	jle    0x411875
  4117f9:	sbb    ecx,eax
  4117fb:	ins    DWORD PTR es:[edi],dx
  4117fc:	sbb    eax,0x4fcecefc
  411801:	inc    ebx
  411802:	push   edi
  411803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411804:	adc    bh,BYTE PTR fs:[eax]
  411807:	xchg   esp,eax
  411808:	out    dx,eax
  411809:	popf   
  41180a:	sar    cl,1
  41180c:	cmp    DWORD PTR [ebp+ebp*1+0x2f],0x6afb2901
  411814:	pop    ss
  411815:	push   edx
  411816:	scas   eax,DWORD PTR es:[edi]
  411817:	call   0x9ad1:0x908d484b
  41181e:	sbb    BYTE PTR [ebx-0x4d85ba22],ah
  411824:	aaa    
  411825:	fisubr WORD PTR [ebp+edx*2-0x62]
  411829:	mov    BYTE PTR [eax],bl
  41182b:	mov    esp,0x4c729b15
  411830:	daa    
  411831:	dec    eax
  411832:	fmul   DWORD PTR [ebx+0x4c]
  411835:	pushf  
  411836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411837:	sub    DWORD PTR [edi+0xa],ecx
  41183a:	test   BYTE PTR [eax-0x19d11f9e],dh
  411840:	or     bl,dl
  411842:	adc    DWORD PTR [ebp+esi*2-0x80],ecx
  411846:	mov    esp,0x7d986bd0
  41184b:	out    dx,al
  41184c:	and    eax,0x38237b3d
  411851:	stc    
  411852:	ss retf 0x9f0e
  411856:	in     al,dx
  411857:	retf   0x5a42
  41185a:	jg     0x411876
  41185c:	dec    ebx
  41185d:	fwait
  41185e:	inc    eax
  41185f:	lods   al,BYTE PTR cs:[esi]
  411861:	push   ds
  411862:	imul   esi,ecx,0xffffffaf
  411865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411866:	nop
  411867:	sub    eax,0x85c37e71
  41186c:	cmp    ebp,DWORD PTR [edi-0x15]
  41186f:	adc    cl,BYTE PTR [eax+0x47]
  411872:	cld    
  411873:	das    
  411874:	or     BYTE PTR [ebx+ecx*1+0x4305460a],ah
  41187b:	stos   DWORD PTR es:[edi],eax
  41187c:	pop    esp
  41187d:	jo     0x411896
  41187f:	in     al,0xed
  411881:	xor    DWORD PTR [esi+0x17],0xffffff9b
  411885:	add    ch,BYTE PTR [ecx+eax*1+0x3104b362]
  41188c:	xor    DWORD PTR [ebx],ecx
  41188e:	(bad)  
  41188f:	test   DWORD PTR [edx-0x53],ebx
  411892:	push   0x1
  411894:	int    0x81
  411896:	(bad)
  41189a:	addr16 das 
  41189c:	push   ecx
  41189d:	or     DWORD PTR [edx+0x5cb6d79a],ebp
  4118a3:	adc    BYTE PTR [esi],cl
  4118a5:	in     al,0x2c
  4118a7:	xor    DWORD PTR [esi+0x1d],esi
  4118aa:	adc    eax,0x9167208a
  4118af:	jns    0x4118f5
  4118b1:	call   0xb102ceb2
  4118b6:	sub    dl,BYTE PTR ds:0x8ce6bf3e
  4118bc:	aam    0xe4
  4118be:	dec    ecx
  4118bf:	lea    esp,[eax-0x49]
  4118c2:	cld    
  4118c3:	xor    al,0xe3
  4118c5:	cdq    
  4118c6:	iret   
  4118c7:	inc    ecx
  4118c8:	jmp    0x4118fa
  4118ca:	nop
  4118cb:	js     0x411867
  4118cd:	push   es
  4118ce:	mov    ah,0xcb
  4118d0:	(bad)  
  4118d1:	dec    ebx
  4118d2:	rol    dh,cl
  4118d4:	xor    al,0xcd
  4118d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d7:	rcr    ebp,0x2e
  4118da:	sub    DWORD PTR [esi+0xd],0xffffffeb
  4118de:	popf   
  4118df:	test   DWORD PTR [edx-0x66af258c],esi
  4118e5:	inc    esi
  4118e6:	loop   0x41191f
  4118e8:	dec    edx
  4118e9:	mov    ds:0x69c41e6,eax
  4118ee:	popf   
  4118ef:	mov    DWORD PTR [ebp+0x21117975],eax
  4118f5:	jno    0x41188e
  4118f7:	sub    ebx,DWORD PTR [ebx]
  4118f9:	jno    0x4118b8
  4118fb:	add    BYTE PTR [ebx+0x1ab52e68],bh
  411901:	outs   dx,BYTE PTR ds:[esi]
  411902:	fsubr  DWORD PTR [edx-0x6f]
  411905:	das    
  411906:	add    eax,0x68ebde8d
  41190b:	sahf   
  41190c:	ins    BYTE PTR es:[edi],dx
  41190d:	mov    esi,0xc20c01fd
  411912:	xor    al,0xac
  411914:	mov    al,ds:0xae38ace5
  411919:	(bad)  
  41191a:	jmp    0x411900
  41191c:	test   BYTE PTR [esi+0x1d],al
  41191f:	sbb    BYTE PTR [edi+0x72],ah
  411922:	sub    ah,ah
  411924:	xor    BYTE PTR [edx+0x7d],ah
  411927:	push   ebx
  411928:	pop    edi
  411929:	outs   dx,BYTE PTR ds:[esi]
  41192a:	sub    BYTE PTR [edi-0x165aaf7d],0x52
  411931:	mov    al,ds:0xb99aadc8
  411936:	cmp    dl,BYTE PTR [edi+edi*8]
  411939:	aaa    
  41193a:	out    0x84,al
  41193c:	add    DWORD PTR [edi+eiz*2+0x28cc41b6],esp
  411943:	inc    eax
  411944:	push   es
  411945:	outs   dx,DWORD PTR ds:[esi]
  411946:	xchg   edi,eax
  411947:	ins    DWORD PTR es:[edi],dx
  411948:	jge    0x41199b
  41194a:	and    eax,esp
  41194c:	mov    cl,BYTE PTR [edi*1+0x6b8c57fd]
  411953:	pop    edx
  411954:	and    eax,0x92b5d345
  411959:	mov    WORD PTR [eax+edi*8],cs
  41195c:	xchg   ebp,eax
  41195d:	outs   dx,DWORD PTR ds:[esi]
  41195e:	pop    ss
  41195f:	fadd   st,st(1)
  411961:	mov    eax,0xac714865
  411966:	cld    
  411967:	push   0x4b63d1e1
  41196c:	sar    ecx,cl
  41196e:	cmp    bh,al
  411970:	leave  
  411971:	rcr    ecx,0xd5
  411974:	cli    
  411975:	xor    DWORD PTR [eax-0x4b],esp
  411978:	mov    cl,BYTE PTR [edx-0x34]
  41197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41197c:	inc    eax
  41197d:	xor    dl,BYTE PTR [edi]
  41197f:	or     DWORD PTR [esi-0x44],eax
  411982:	js     0x41197d
  411984:	add    bh,bh
  411986:	inc    ebp
  411987:	jo     0x4119b2
  411989:	mov    ds:0xcb154769,eax
  41198e:	inc    edx
  41198f:	fsub   QWORD PTR [esi+0x33]
  411992:	push   0xfffffff6
  411994:	push   es
  411995:	retf   0x4104
  411998:	outs   dx,BYTE PTR ds:[esi]
  411999:	scas   eax,DWORD PTR es:[edi]
  41199a:	jne    0x4119f6
  41199c:	mov    esp,0x2079b9b9
  4119a1:	sbb    BYTE PTR fs:[ecx-0x151f02be],bl
  4119a8:	jo     0x411a27
  4119aa:	push   ebx
  4119ab:	push   eax
  4119ac:	pop    edx
  4119ad:	and    BYTE PTR [ecx+ebp*4],0x94
  4119b1:	ds inc edx
  4119b3:	out    0x6a,al
  4119b5:	add    eax,0x8e971552
  4119ba:	jmp    0xa79:0x472d60f5
  4119c1:	add    DWORD PTR fs:[eax+0x31],ecx
  4119c5:	nop
  4119c6:	adc    BYTE PTR [ebx+esi*2],ch
  4119c9:	mov    esp,0x214e9186
  4119ce:	dec    eax
  4119cf:	outs   dx,DWORD PTR ds:[esi]
  4119d0:	es adc al,0x52
  4119d3:	xchg   BYTE PTR [bp+si-0x20],bh
  4119d7:	mov    cl,0x54
  4119d9:	mov    BYTE PTR [edi-0x30],bl
  4119dc:	jg     0x411a1a
  4119de:	adc    ch,dh
  4119e0:	shl    BYTE PTR [eax+eax*2-0x7c38a2c8],cl
  4119e7:	and    al,0xd4
  4119e9:	and    eax,0xf02d72e9
  4119ee:	iret   
  4119ef:	xor    al,0x57
  4119f1:	xor    esi,DWORD PTR [eax+0x37fcc815]
  4119f7:	cli    
  4119f8:	jne    0x4119d0
  4119fa:	sbb    eax,0xf0917f15
  4119ff:	hlt    
  411a00:	icebp  
  411a01:	aas    
  411a02:	aam    0xa1
  411a04:	cmp    ebp,0x6dda41b2
  411a0a:	adc    al,0x5b
  411a0c:	xor    eax,0x174c6dd0
  411a11:	repnz mov WORD PTR [eax-0x39],ds
  411a15:	dec    esp
  411a16:	idiv   ch
  411a18:	mov    fs,WORD PTR [edi-0x247b5bd2]
  411a1e:	in     al,dx
  411a1f:	test   DWORD PTR [edx+0x1],edx
  411a22:	dec    esi
  411a23:	adc    al,0x45
  411a25:	sbb    al,dl
  411a27:	mov    ecx,0xf81e4c2a
  411a2c:	pop    esi
  411a2d:	int    0xda
  411a2f:	es leave 
  411a31:	jge    0x411a91
  411a33:	mov    al,0xa3
  411a35:	mov    esi,0xc9dd4316
  411a3a:	sbb    eax,0xd9b00e2b
  411a3f:	in     eax,dx
  411a40:	add    al,0x86
  411a42:	lea    edi,[ebx-0x74c41566]
  411a48:	push   0xffffff9e
  411a4a:	aam    0x8f
  411a4c:	mov    dl,0xfa
  411a4e:	(bad)  [esi-0x70eaaedb]
  411a54:	inc    ecx
  411a55:	test   BYTE PTR [esi+ebx*2+0x47],cl
  411a59:	sub    bl,al
  411a5b:	mov    ds:0x4b484636,eax
  411a60:	sahf   
  411a61:	xchg   ecx,eax
  411a62:	push   ds
  411a63:	mov    eax,ds:0xdccebd10
  411a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a69:	scas   al,BYTE PTR es:[edi]
  411a6a:	sti    
  411a6b:	enter  0xef45,0x11
  411a6f:	ja     0x411a6e
  411a71:	icebp  
  411a72:	leave  
  411a73:	cmp    eax,0x61eca43e
  411a78:	add    cl,BYTE PTR [edx+0x51]
  411a7b:	mov    ecx,0xfbabaccf
  411a80:	or     eax,0xea711a42
  411a85:	retw   0xc601
  411a89:	xor    BYTE PTR [eax+eax*4-0x33],dh
  411a8d:	xchg   ebx,eax
  411a8e:	cwde   
  411a8f:	pop    ss
  411a90:	xchg   ebx,eax
  411a91:	lds    esp,FWORD PTR [edi+0x7cf2e304]
  411a97:	cmp    esi,eax
  411a99:	fsub   QWORD PTR [eax-0x39]
  411a9c:	add    dl,bl
  411a9e:	adc    DWORD PTR [eax+0x56],0x7d9f4123
  411aa5:	and    DWORD PTR [esi],ebp
  411aa7:	fisub  WORD PTR [ebx+0x1b]
  411aaa:	mov    edx,DWORD PTR [ebp-0x18]
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	or     eax,0x4b2db7c9
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	sar    BYTE PTR [ecx],cl
  411c05:	lock jge 0x411bc7
  411c08:	and    DWORD PTR [ecx+0x10ec33d0],0x70
  411c0f:	fimul  DWORD PTR [ecx]
  411c11:	xor    DWORD PTR [eax-0xe],esi
  411c14:	cmp    al,0x1b
  411c16:	arpl   WORD PTR ds:0x569a01e4,ax
  411c1c:	call   0xa5c6:0xa93fd66b
  411c23:	jp     0x411c20
  411c25:	mov    dh,0x57
  411c27:	(bad)  
  411c28:	pop    ebp
  411c29:	inc    esi
  411c2a:	fisttp WORD PTR [ebx+0x5faff02e]
  411c30:	dec    DWORD PTR [ebx-0x19]
  411c33:	jmp    0x17c00993
  411c38:	sub    eax,0xc4ea929d
  411c3d:	cmp    al,0x9a
  411c3f:	mov    ds:0x287d2574,eax
  411c44:	adc    DWORD PTR [eax-0x5b],esi
  411c47:	xchg   esi,eax
  411c48:	scas   eax,DWORD PTR es:[edi]
  411c49:	cli    
  411c4a:	add    ebp,DWORD PTR [ebx+0x66]
  411c4d:	jle    0x411c1f
  411c4f:	call   ebp
  411c51:	jns    0x411c4a
  411c53:	push   ecx
  411c54:	arpl   WORD PTR [eax+eax*2+0x49163d83],ax
  411c5b:	data16 cmp BYTE PTR [edx+edx*8],dh
  411c5f:	push   cs
  411c60:	shl    DWORD PTR [esi],0xa1
  411c63:	mov    bh,0x90
  411c65:	imul   edi,DWORD PTR [ebp+0x40],0xc0d47f12
  411c6c:	adc    al,0xc2
  411c6e:	shl    DWORD PTR [edx+0x5aca708d],1
  411c74:	jns    0x411ced
  411c76:	(bad)
  411c79:	jne    0x411cda
  411c7b:	jmp    0x411c97
  411c7d:	jno    0x411c66
  411c7f:	scas   al,BYTE PTR es:[edi]
  411c80:	sub    edi,ecx
  411c82:	mov    dl,0x10
  411c84:	inc    esi
  411c85:	push   esi
  411c86:	addr16 in eax,0xad
  411c89:	lahf   
  411c8a:	sub    eax,0xe1181570
  411c8f:	aad    0x37
  411c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c92:	and    DWORD PTR [edx],0xffffffb3
  411c95:	mov    ebp,0xb40a6100
  411c9a:	pop    edi
  411c9b:	dec    eax
  411c9c:	out    dx,al
  411c9d:	and    ah,dl
  411c9f:	sub    ecx,DWORD PTR [esi-0x59]
  411ca2:	sbb    eax,0xc6a182ee
  411ca7:	cmp    BYTE PTR [eax+0x4e],dl
  411caa:	add    eax,0xb4028f65
  411caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb0:	ret    0xe875
  411cb3:	loop   0x411cf4
  411cb5:	jo     0x411cf3
  411cb7:	cmp    DWORD PTR [esi],ecx
  411cb9:	xchg   esp,eax
  411cba:	pop    ds
  411cbb:	mov    bh,0xd3
  411cbd:	or     eax,0x99e493a8
  411cc2:	and    BYTE PTR [edx+0xe4e526f],bl
  411cc8:	sub    ch,ch
  411cca:	in     eax,dx
  411ccb:	fwait
  411ccc:	sub    BYTE PTR [esi+0x4d293cfc],0x5d
  411cd3:	imul   ecx,DWORD PTR [eax+0x2c],0x74
  411cd7:	pusha  
  411cd8:	mov    esp,0x31895ed5
  411cdd:	mov    ecx,0x6b9ead28
  411ce2:	push   es
  411ce3:	imul   edx,DWORD PTR [esi],0xffffffcc
  411ce6:	iret   
  411ce7:	cmp    ch,cl
  411ce9:	push   cs
  411cea:	mov    al,ds:0xf67f81a1
  411cef:	mov    edx,0xeb533756
  411cf4:	inc    esi
  411cf5:	rep outs dx,DWORD PTR ds:[esi]
  411cf7:	push   edx
  411cf8:	mov    ah,0x6b
  411cfa:	xchg   esi,eax
  411cfb:	dec    ecx
  411cfc:	xor    al,0xd4
  411cfe:	cmp    BYTE PTR [edx-0x30b1fbfb],cl
  411d04:	dec    edi
  411d05:	stos   BYTE PTR es:[edi],al
  411d06:	jmp    0x411cd9
  411d08:	inc    edx
  411d09:	shl    BYTE PTR [ecx],cl
  411d0b:	loope  0x411cd3
  411d0d:	in     eax,0x6
  411d0f:	js     0x411d49
  411d11:	div    BYTE PTR [eax+0x32]
  411d14:	xor    bl,dh
  411d16:	ss add bh,bl
  411d19:	push   0x6b
  411d1b:	cli    
  411d1c:	sbb    al,0xe9
  411d1e:	retf   0xf705
  411d21:	pushf  
  411d22:	pusha  
  411d23:	das    
  411d24:	sbb    al,0xb6
  411d26:	call   0xff7:0xa0ff7bc1
  411d2d:	pop    eax
  411d2e:	add    al,ch
  411d30:	jecxz  0x411d41
  411d32:	sbb    al,0x54
  411d34:	mov    gs,WORD PTR [ecx+esi*2]
  411d37:	cdq    
  411d38:	xor    edi,DWORD PTR [ebp+0x64]
  411d3b:	shr    DWORD PTR [eax-0x2c],0xfe
  411d3f:	inc    eax
  411d40:	push   cs
  411d41:	sbb    cl,BYTE PTR [ecx+0x62382056]
  411d47:	and    ebp,eax
  411d49:	imul   ebp,ecx,0x41c66060
  411d4f:	pusha  
  411d50:	adc    ebx,DWORD PTR [ebx+0x3fa70905]
  411d56:	iret   
  411d57:	ins    DWORD PTR es:[edi],dx
  411d58:	dec    esi
  411d59:	test   DWORD PTR [edx+0x1d],ebp
  411d5c:	psllw  mm7,QWORD PTR [edx]
  411d5f:	in     eax,0xa5
  411d61:	pop    ebp
  411d62:	das    
  411d63:	fadd   QWORD PTR [ebx-0x4e00f6fd]
  411d69:	loop   0x411dd8
  411d6b:	leave  
  411d6c:	push   ds
  411d6d:	iret   
  411d6e:	std    
  411d6f:	pusha  
  411d70:	push   es
  411d71:	xchg   ebp,eax
  411d72:	fisubr DWORD PTR [edi]
  411d74:	add    esi,edx
  411d76:	inc    eax
  411d77:	inc    edi
  411d78:	fldenv ss:[ebp-0x4437201e]
  411d7f:	xor    al,0xac
  411d81:	mov    bl,0x90
  411d83:	push   ebp
  411d84:	xor    BYTE PTR [ebx+0x3c6bcf0b],dh
  411d8a:	clc    
  411d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8c:	mov    DWORD PTR [eax+0x72de517e],esp
  411d92:	add    eax,0xd9ed566e
  411d97:	xchg   ecx,eax
  411d98:	add    al,0xe7
  411d9a:	lea    ebp,[edi-0x72]
  411d9d:	hlt    
  411d9e:	addr16 loope 0x411deb
  411da1:	push   edi
  411da2:	pop    es
  411da3:	jl     0x411d52
  411da5:	pop    ebp
  411da6:	mov    ecx,DWORD PTR [edx]
  411da8:	sbb    al,0xa4
  411daa:	inc    esp
  411dab:	test   al,0xda
  411dad:	cmp    al,0x50
  411daf:	daa    
  411db0:	inc    edi
  411db1:	shl    BYTE PTR ds:0x2cab6479,0x81
  411db8:	sbb    bl,BYTE PTR [ecx]
  411dba:	pusha  
  411dbb:	in     eax,0x31
  411dbd:	push   ss
  411dbe:	stc    
  411dbf:	pop    ecx
  411dc0:	mov    bh,0xfd
  411dc2:	xor    eax,0x9615ceab
  411dc7:	jg     0x411d4c
  411dc9:	push   ss
  411dca:	pop    ecx
  411dcb:	out    dx,eax
  411dcc:	lock xchg esi,eax
  411dce:	push   ss
  411dcf:	in     eax,0x49
  411dd1:	daa    
  411dd2:	cdq    
  411dd3:	imul   eax,DWORD PTR ds:0x2e4616d7,0xffffff9f
  411dda:	push   edx
  411ddb:	mov    al,0x44
  411ddd:	adc    dl,BYTE PTR [ecx+0x18f265ec]
  411de3:	stc    
  411de4:	jo     0x411da8
  411de6:	sbb    BYTE PTR [ecx],ah
  411de8:	mov    al,ds:0x69540c88
  411ded:	cmc    
  411dee:	mov    edx,0xa95fcbb8
  411df3:	repz jnp 0x411e03
  411df6:	sbb    al,0xbc
  411df8:	mov    ebp,0xe2bca6af
  411dfd:	in     al,dx
  411dfe:	in     al,dx
  411dff:	inc    ecx
  411e00:	jo     0x411e17
  411e02:	jp     0x411d8e
  411e04:	std    
  411e05:	xchg   edi,eax
  411e06:	and    eax,eax
  411e08:	push   ebp
  411e09:	sub    cl,BYTE PTR [edx+0x7f0f4f31]
  411e0f:	call   0x3253:0xe0d8549d
  411e16:	rcl    DWORD PTR [esi+0x2],0xce
  411e1a:	repnz stos DWORD PTR es:[edi],eax
  411e1c:	retf   
  411e1d:	aaa    
  411e1e:	cmp    edx,DWORD PTR [edi+edi*2]
  411e21:	loopne 0x411e09
  411e23:	loopne 0x411e71
  411e25:	fwait
  411e26:	jne    0x411e79
  411e28:	dec    edx
  411e29:	adc    esp,ebx
  411e2b:	mov    ds:0x9866a8a9,al
  411e30:	sbb    esp,DWORD PTR [eiz*8-0x1ad13f87]
  411e37:	mov    cl,0x91
  411e39:	pop    ecx
  411e3a:	dec    ecx
  411e3b:	repz jnp 0x411eb4
  411e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3f:	xor    eax,0xb0d61e7f
  411e44:	inc    edi
  411e45:	mov    dh,0x48
  411e47:	jnp    0x411e60
  411e49:	sti    
  411e4a:	fnstcw WORD PTR [esi]
  411e4c:	push   ds
  411e4d:	or     DWORD PTR [eax],ebx
  411e4f:	pop    ss
  411e50:	sbb    bl,ah
  411e52:	push   ds
  411e53:	das    
  411e54:	fwait
  411e55:	test   BYTE PTR [ecx+0xf20bf49],ah
  411e5b:	(bad)  
  411e5c:	mov    bl,0x4d
  411e5e:	pushf  
  411e5f:	or     DWORD PTR [ecx],esi
  411e61:	ss pop ds
  411e63:	loop   0x411dff
  411e65:	add    bh,bl
  411e67:	xchg   edi,eax
  411e68:	lea    ecx,[edx+edx*2-0x2a]
  411e6c:	inc    esi
  411e6d:	ins    BYTE PTR es:[edi],dx
  411e6e:	jge    0x411ee5
  411e70:	pop    esp
  411e71:	fist   DWORD PTR [edi-0x542a5930]
  411e77:	(bad)  
  411e78:	xchg   esp,eax
  411e79:	jmp    0x14c8:0x1adf9d06
  411e80:	sbb    DWORD PTR [esi-0x4a4b01f9],esp
  411e86:	xor    dl,bl
  411e88:	cld    
  411e89:	sbb    eax,0x22e01ad8
  411e8e:	mov    al,0x4c
  411e90:	popa   
  411e91:	jb     0x411e21
  411e93:	js     0x411e7d
  411e95:	sti    
  411e96:	repnz scas eax,DWORD PTR es:[edi]
  411e98:	clc    
  411e99:	jmp    0xc1aa:0xfacfad4b
  411ea0:	nop
  411ea1:	adc    ebx,DWORD PTR [edi-0x6535c8f5]
  411ea7:	pop    esp
  411ea8:	std    
  411ea9:	mov    ds:0xb8d7e67e,eax
  411eae:	xor    al,0x41
  411eb0:	and    al,0xf9
  411eb2:	cld    
  411eb3:	ret    
  411eb4:	dec    ecx
  411eb5:	call   0x6abc0f01
  411eba:	pushf  
  411ebb:	loop   0x411ef7
  411ebd:	test   al,0xe5
  411ebf:	jbe    0x411ecd
  411ec1:	add    eax,0x67a34d23
  411ec6:	stc    
  411ec7:	data16 xlat BYTE PTR ds:[ebx]
  411ec9:	mov    esp,0xe3e5779
  411ece:	add    bl,BYTE PTR [eax]
  411ed0:	push   edi
  411ed1:	shl    DWORD PTR [esi+0x4f08fb5f],1
  411ed7:	jmp    0x1118:0x8706d857
  411ede:	test   dl,al
  411ee0:	add    ch,BYTE PTR [edi+0x6229a203]
  411ee6:	inc    ebx
  411ee7:	arpl   WORD PTR [ebx],ax
  411ee9:	cli    
  411eea:	out    dx,eax
  411eeb:	shl    BYTE PTR [esi],1
  411eed:	mov    cl,0x8a
  411eef:	nop
  411ef0:	cmp    ebp,DWORD PTR [esi-0x1dcba4a0]
  411ef6:	mov    ah,0xd6
  411ef8:	push   es
  411ef9:	iret   
  411efa:	outs   dx,BYTE PTR ds:[esi]
  411efb:	pop    ebp
  411efc:	and    eax,0x4fcfe3b3
  411f01:	dec    edx
  411f02:	pop    es
  411f03:	cs jnp 0x411ec9
  411f06:	shl    BYTE PTR [ebx-0x59beed47],cl
  411f0c:	gs jp  0x411eb3
  411f0f:	adc    al,0xa9
  411f11:	popf   
  411f12:	sbb    BYTE PTR [ecx-0x717a12b1],bh
  411f18:	adc    BYTE PTR [edi+0x386fe17f],dl
  411f1e:	addr16 push es
  411f20:	inc    esi
  411f21:	sbb    BYTE PTR [esi-0x1ec5496e],ah
  411f27:	and    eax,0x6c5df79b
  411f2c:	xor    eax,0x9504330
  411f31:	loopne 0x411f2f
  411f33:	jno    0x411f1b
  411f35:	lea    ebp,[eax+eax*2+0x468d161]
  411f3c:	push   0xffffff89
  411f3e:	dec    ebx
  411f3f:	retf   0x223
  411f42:	inc    edi
  411f43:	fnstsw WORD PTR [eax]
  411f45:	fsub   QWORD PTR [eax+0x1a]
  411f48:	jo     0x411ee2
  411f4a:	mov    ds:0xe207030a,eax
  411f4f:	xchg   ebp,eax
  411f50:	sti    
  411f51:	xchg   esp,eax
  411f52:	push   ds
  411f53:	sub    edi,DWORD PTR [eax-0x1d5652c1]
  411f59:	(bad)  
  411f5a:	adc    al,0x3c
  411f5c:	pop    ebp
  411f5d:	lea    esi,ds:0xfefd3d27
  411f63:	ins    BYTE PTR es:[edi],dx
  411f64:	pop    esp
  411f65:	xrelease xchg BYTE PTR [esi-0x6a],dh
  411f69:	aam    0x8f
  411f6b:	(bad)  
  411f6c:	cli    
  411f6d:	jns    0x411fd2
  411f6f:	inc    ebx
  411f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f71:	mov    esp,0xed864917
  411f76:	and    BYTE PTR [ebp+0x3bea292b],bh
  411f7c:	or     eax,0xd8276ee2
  411f81:	and    BYTE PTR [ecx-0x5e6ab273],ah
  411f87:	push   ebx
  411f88:	aaa    
  411f89:	lea    esi,[ecx+0xeb40aeb]
  411f8f:	arpl   dx,di
  411f91:	(bad)  
  411f92:	and    DWORD PTR [esi+0x10],ebp
  411f95:	and    DWORD PTR [edx],0x39
  411f98:	call   0x32157ce8
  411f9d:	mov    eax,0x78915236
  411fa2:	mov    ds:0x6a9b055a,al
  411fa7:	outs   dx,BYTE PTR ds:[esi]
  411fa8:	or     BYTE PTR [edi-0x14],0x50
  411fac:	cmp    bh,BYTE PTR [edi+0x33]
  411faf:	mov    al,ds:0x790c55f0
  411fb4:	repz cmp DWORD PTR [ebx+eax*8+0x2e12e811],0xa77fae43
  411fc0:	out    0x9,eax
  411fc2:	push   0xffffffd0
  411fc4:	pop    esi
  411fc5:	xor    cl,0x73
  411fc8:	sahf   
  411fc9:	pusha  
  411fca:	ret    0x3661
  411fcd:	pop    ecx
  411fce:	jmp    0x2ed76020
  411fd3:	loope  0x412054
  411fd5:	icebp  
  411fd6:	push   es
  411fd7:	xchg   ecx,eax
  411fd9:	data16 add bh,BYTE PTR [ecx+esi*1-0x35]
  411fde:	pop    ebx
  411fdf:	pop    ds
  411fe0:	xchg   ebx,eax
  411fe1:	aam    0xe2
  411fe3:	loope  0x411fb0
  411fe5:	pop    eax
  411fe6:	pushf  
  411fe7:	add    dh,0x58
  411fea:	adc    BYTE PTR [ecx],al
  411fec:	or     BYTE PTR [ecx+0x6e549e15],cl
  411ff2:	or     ecx,eax
  411ff4:	inc    ebp
  411ff5:	jmp    0x8d65:0x91caa211
  411ffc:	scas   eax,DWORD PTR es:[edi]
  411ffd:	popa   
  411ffe:	call   0x94a47187
  412003:	xor    al,0x53
  412005:	adc    eax,0x3a55a6b9
  41200a:	in     al,0xec
  41200c:	mov    esp,0xe198ab29
  412011:	test   eax,0x778a33e4
  412016:	std    
  412017:	xor    eax,0x5a67059e
  41201c:	push   eax
  41201d:	iret   
  41201e:	pusha  
  41201f:	fucomi st,st(4)
  412021:	add    BYTE PTR [eax+esi*4-0x47],bh
  412025:	std    
  412026:	test   BYTE PTR [esi-0x1f4776f9],dh
  41202c:	sub    DWORD PTR [ecx+ebp*1+0x21585374],0xe6995df0
  412037:	loop   0x412054
  412039:	push   esi
  41203a:	jns    0x41209b
  41203c:	imul   ebx,DWORD PTR [ebx+eax*8+0x3ef0b9af],0xa7ecd041
  412047:	dec    edi
  412048:	mov    esi,0x35d10978
  41204d:	or     ecx,edx
  41204f:	and    ch,BYTE PTR [ecx-0xf]
  412052:	in     al,0x0
  412054:	rcl    BYTE PTR [edx+edx*1],0x21
  412058:	mov    eax,ds:0x78931851
  41205d:	test   BYTE PTR [esi],al
  41205f:	ds (bad) 
  412061:	and    DWORD PTR [edi+0x496f07b3],eax
  412067:	es adc al,0x14
  41206a:	aas    
  41206b:	nop
  41206c:	xor    eax,0x2d903b6f
  412071:	jge    0x412078
  412073:	outs   dx,DWORD PTR ds:[esi]
  412074:	push   ss
  412075:	fcom   DWORD PTR [eax-0x2eb834e9]
  41207b:	pop    edi
  41207c:	addr16 push 0x7d
  41207f:	daa    
  412080:	jmp    0x8b0ec8ec
  412085:	pusha  
  412086:	sub    BYTE PTR [esi+ebp*4+0x26250677],ah
  41208d:	repz mov esp,0xcd76b9fb
  412093:	(bad)  
  412094:	call   0x8c6b:0xf5106378
  41209b:	pop    edx
  41209c:	xor    bl,BYTE PTR [ecx+edi*8+0x5cecfab5]
  4120a3:	enter  0x538c,0x86
  4120a7:	minps  xmm5,XMMWORD PTR [ebx-0x40]
  4120ab:	test   ch,dl
  4120ad:	mov    dh,0xb8
  4120af:	sbb    eax,0x25437e46
  4120b4:	mov    eax,edi
  4120b6:	inc    edx
  4120b7:	pop    ss
  4120b8:	or     al,0xbb
  4120ba:	ret    0x7b28
  4120bd:	shr    BYTE PTR [edi+ebx*1-0xe14a263],cl
  4120c4:	cmp    al,0x58
  4120c6:	mov    ch,0x5a
  4120c8:	xlat   BYTE PTR ds:[ebx]
  4120c9:	xor    eax,0xa47503cd
  4120ce:	out    dx,al
  4120cf:	jbe    0x4120b6
  4120d1:	push   0x1476d6b4
  4120d6:	call   0xb3a4:0x116dfd61
  4120dd:	xchg   BYTE PTR [eax],al
  4120df:	fdivr  QWORD PTR [edx+0x44]
  4120e2:	dec    BYTE PTR [edx+ebp*8+0x63]
  4120e6:	xor    esi,ebx
  4120e8:	pop    ebx
  4120e9:	les    edx,FWORD PTR [edx+ecx*2+0x729baac1]
  4120f0:	adc    al,0x10
  4120f2:	add    esp,DWORD PTR [edx-0x70]
  4120f5:	pusha  
  4120f6:	mov    ds,ebx
  4120f8:	xchg   ebp,eax
  4120f9:	push   eax
  4120fa:	sar    DWORD PTR [edi],1
  4120fc:	add    edi,ebp
  4120fe:	xchg   ebx,eax
  4120ff:	cmp    edx,DWORD PTR [ebx-0x5c]
  412102:	mov    DWORD PTR [esi+0x66bee795],ebp
  412108:	mov    ebx,0x40e9ec3
  41210d:	stos   BYTE PTR es:[edi],al
  41210e:	jge    0x412124
  412110:	lock jnp 0x41215e
  412113:	dec    edi
  412114:	dec    esi
  412115:	ret    
  412116:	sub    eax,0xf1d0f112
  41211b:	mov    ebp,0x45dba86a
  412120:	sbb    al,BYTE PTR [ecx]
  412122:	sbb    DWORD PTR [ecx+0x6c],edi
  412125:	jmp    0xf37d:0x6d957f64
  41212c:	sub    edx,DWORD PTR ds:0xd94c13a6
  412132:	push   0x55
  412134:	sbb    BYTE PTR [edi+ecx*8+0x73247e42],bh
  41213b:	leave  
  41213c:	int3   
  41213d:	inc    esp
  41213e:	loopne 0x4120df
  412140:	mov    DWORD PTR [edx-0x9],ebp
  412143:	sub    BYTE PTR ds:0x4fc64bc6,bl
  412149:	and    ebp,DWORD PTR [ebp+ecx*2-0x71039617]
  412150:	jg     0x4121c4
  412152:	out    0x7f,eax
  412154:	mov    dh,0xa5
  412156:	test   DWORD PTR ds:0xe54da40e,ecx
  41215c:	call   0x1bd5:0x5ded6f00
  412163:	fist   DWORD PTR [ecx+0x7c48fd55]
  412169:	add    al,0x8
  41216b:	das    
  41216c:	fidivr DWORD PTR [edx-0x1c3f3924]
  412172:	xchg   esi,eax
  412173:	mov    esi,0x6180e636
  412178:	aaa    
  412179:	fs aaa 
  41217b:	loopne 0x41219c
  41217d:	dec    esi
  41217e:	hlt    
  41217f:	sahf   
  412180:	pop    edx
  412181:	imul   esi,DWORD PTR [edi-0x21],0x71
  412185:	test   dl,0x9d
  412188:	mov    eax,0x29494b12
  41218d:	pop    ecx
  41218e:	and    eax,0x9797be9f
  412193:	pop    ss
  412194:	mov    ecx,0x63854385
  412199:	mov    esp,fs
  41219b:	arpl   WORD PTR [edi-0x25],sp
  41219e:	xchg   esi,esp
  4121a0:	xchg   edx,eax
  4121a1:	sbb    BYTE PTR [ebp-0x27b8e8b7],bh
  4121a7:	out    dx,eax
  4121a8:	push   ebp
  4121a9:	push   esi
  4121aa:	pop    esi
  4121ab:	cmp    bl,ah
  4121ad:	mov    ebp,0x6029b11c
  4121b2:	xchg   ebx,eax
  4121b3:	cmp    ch,BYTE PTR [eax+esi*1+0x3f]
  4121b7:	aas    
  4121b8:	shl    BYTE PTR [eax-0x10],cl
  4121bb:	stos   BYTE PTR es:[edi],al
  4121bc:	imul   ebp,DWORD PTR [eax+esi*4-0x254bbe27],0xe72acfe1
  4121c7:	add    DWORD PTR [eax+0x15ff610b],edx
  4121cd:	lods   al,BYTE PTR ds:[esi]
  4121ce:	in     al,dx
  4121cf:	dec    ebp
  4121d0:	(bad)  
  4121d1:	outs   dx,DWORD PTR ds:[esi]
  4121d2:	sub    BYTE PTR [edx],bl
  4121d4:	pop    esi
  4121d5:	mov    ?,WORD PTR [eax+ebp*4]
  4121d8:	popa   
  4121d9:	xor    DWORD PTR [ecx-0x788c5876],edx
  4121df:	jp     0x41224c
  4121e1:	sub    eax,0x480dafc5
  4121e6:	inc    esp
  4121e8:	and    edi,DWORD PTR [edx]
  4121ea:	in     eax,0xb1
  4121ec:	adc    esi,DWORD PTR ds:0xf8a2083f
  4121f2:	mov    dh,BYTE PTR [edx+0x2d]
  4121f5:	scas   eax,DWORD PTR es:[edi]
  4121f6:	push   eax
  4121f7:	repz pop esi
  4121f9:	dec    ebx
  4121fa:	test   BYTE PTR [edi-0x2b],ch
  4121fd:	(bad)  
  4121fe:	or     BYTE PTR [edx],bh
  412200:	(bad)  
  412202:	adc    edx,DWORD PTR ds:0xf3cbae5f
  412208:	int3   
  412209:	push   ecx
  41220a:	cwde   
  41220b:	add    ebx,esi
  41220d:	jge    0x4121e2
  41220f:	pop    eax
  412210:	mov    WORD PTR [ecx+0x6aaa22f0],gs
  412216:	dec    esp
  412217:	shr    BYTE PTR [eax+0x1f82eaed],0x15
  41221e:	lock push edx
  412220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412221:	mov    dl,0xc9
  412223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412224:	inc    esi
  412225:	(bad)  
  412226:	fild   WORD PTR ds:0xbbe72e2d
  41222c:	lods   eax,DWORD PTR ds:[esi]
  41222d:	or     cl,cl
  41222f:	test   BYTE PTR [ebx],al
  412231:	or     al,0x62
  412233:	ds add ah,dl
  412236:	cmp    dh,cl
  412238:	xor    BYTE PTR [esi+ebp*8-0x58],al
  41223c:	dec    eax
  41223d:	xor    eax,0x697e1ff5
  412242:	repnz aas 
  412244:	adc    al,0x40
  412246:	jo     0x412293
  412248:	lods   eax,DWORD PTR ds:[esi]
  412249:	imul   BYTE PTR [edx]
  41224b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41224c:	and    bh,bh
  41224e:	icebp  
  41224f:	mov    al,ds:0x9f7c5adb
  412254:	js     0x4122ba
  412256:	(bad)  
  412257:	mov    BYTE PTR [eax],dl
  412259:	shl    DWORD PTR [esi+0x42],1
  41225c:	jne    0x41223b
  41225e:	inc    edi
  41225f:	cmp    dh,BYTE PTR [ecx-0x39]
  412262:	bound  ebx,QWORD PTR [esi]
  412264:	cdq    
  412265:	lods   al,BYTE PTR ds:[esi]
  412266:	or     DWORD PTR [esi],ebx
  412268:	ins    BYTE PTR es:[edi],dx
  412269:	pop    ebx
  41226a:	push   eax
  41226b:	mov    bl,0xe5
  41226d:	sub    al,0xdd
  412270:	popa   
  412271:	imul   esp,DWORD PTR [esi-0x7f],0x7a
  412275:	iret   
  412276:	push   0x5200b85b
  41227b:	mov    ebx,0xb6cabf27
  412280:	pop    ebp
  412281:	jb     0x41223c
  412283:	push   ebx
  412284:	(bad)  
  412285:	cdq    
  412286:	setp   BYTE PTR [edi-0x46ab82ac]
  41228d:	xor    ebp,ebx
  41228f:	test   DWORD PTR [edi-0x43],ebx
  412292:	mov    edx,0xa3ee8b7b
  412297:	ror    ecx,1
  412299:	push   es
  41229a:	or     bh,ah
  41229c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41229d:	mov    al,0x6d
  41229f:	dec    ebx
  4122a0:	(bad)  
  4122a2:	nop
  4122a3:	call   DWORD PTR [esi+0x73]
  4122a6:	xchg   esp,eax
  4122a7:	or     ecx,DWORD PTR [esi+edx*1]
  4122aa:	mov    eax,0x7082b9ed
  4122af:	(bad)  [edx]
  4122b1:	sti    
  4122b2:	ins    DWORD PTR es:[edi],dx
  4122b3:	pop    esp
  4122b4:	pop    ebx
  4122b5:	mov    bh,0xad
  4122b7:	inc    BYTE PTR es:[eax]
  4122ba:	lods   al,BYTE PTR ds:[esi]
  4122bb:	mov    ds:0x45c1197b,al
  4122c0:	in     al,dx
  4122c1:	adc    bl,BYTE PTR [ebp-0x2b8292c8]
  4122c7:	and    cl,BYTE PTR [edx+0x50b3ea8d]
  4122cd:	xchg   ch,bh
  4122cf:	into   
  4122d0:	sub    ecx,ebx
  4122d2:	adc    esi,DWORD PTR [edi-0x73b1186b]
  4122d8:	sub    cl,BYTE PTR [ecx-0xd641adc]
  4122de:	cli    
  4122df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e0:	test   al,0x24
  4122e2:	nop
  4122e3:	mov    WORD PTR [esi-0x201c60cd],ss
  4122e9:	xor    DWORD PTR [ebx+0x18a90914],eax
  4122ef:	js     0x4122dc
  4122f1:	popf   
  4122f2:	mov    ds:0x5ae97229,al
  4122f7:	ins    DWORD PTR es:[edi],dx
  4122f8:	pop    ds
  4122f9:	mov    ds:0x7a6aa65,eax
  4122fe:	and    eax,0x44f3c392
  412303:	sbb    al,dl
  412305:	iret   
  412306:	call   0x44ce0b23
  41230b:	add    DWORD PTR [ebp-0x75aeb924],eax
  412311:	pop    ss
  412312:	or     bh,BYTE PTR [edi]
  412314:	mov    esi,0xf767f52c
  412319:	popa   
  41231a:	in     al,dx
  41231b:	push   esi
  41231c:	imul   esp,DWORD PTR [edx],0x47
  41231f:	jno    0x412335
  412321:	push   cs
  412322:	aaa    
  412323:	jne    0x4123a4
  412325:	(bad)  
  412326:	lea    ecx,[edi]
  412328:	adc    eax,0xf3d35e7
  41232d:	xor    ecx,DWORD PTR [ebx+0x46]
  412330:	sub    BYTE PTR [edx+0x3953abc5],0x36
  412337:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  412339:	jg     0x412309
  41233b:	inc    ecx
  41233c:	pusha  
  41233d:	sub    BYTE PTR [ebp+0x5bd3b141],0x51
  412344:	arpl   WORD PTR [ecx-0x3f4a57e5],bx
  41234a:	push   es
  41234b:	sub    BYTE PTR [ebx],0x7e
  41234e:	push   ds
  41234f:	pop    esi
  412350:	xor    ecx,DWORD PTR [edi+esi*8+0x7735cc65]
  412357:	fmul   DWORD PTR [ecx+0x1a]
  41235a:	(bad)  
  41235b:	cmp    edx,DWORD PTR [eax-0x66d05131]
  412361:	xor    DWORD PTR [edi+0x551a95a8],ebx
  412367:	or     ebp,esi
  412369:	or     edx,DWORD PTR [edi]
  41236b:	or     al,0xb9
  41236d:	mov    dh,0x4f
  41236f:	mov    ebx,0xbdd5d131
  412374:	jmp    0x9fa6:0x271a3f19
  41237b:	in     eax,0xa3
  41237d:	in     eax,0x76
  41237f:	je     0x4123c1
  412381:	push   ecx
  412382:	jae    0x4123ed
  412384:	or     BYTE PTR [eax+0xd],al
  412387:	(bad)
  41238b:	in     al,dx
  41238c:	dec    ebp
  41238d:	out    0x99,eax
  41238f:	xchg   ebx,eax
  412390:	mov    ebp,0xde48a341
  412395:	sbb    eax,0xd3869417
  41239a:	mov    esi,0xc3906571
  41239f:	or     BYTE PTR [esi-0x74e51c4],0x22
  4123a6:	or     ecx,edx
  4123a8:	ds aad 0xa0
  4123ab:	enter  0xcdae,0x74
  4123af:	popf   
  4123b0:	ins    BYTE PTR es:[edi],dx
  4123b1:	jl     0x412405
  4123b3:	cmp    eax,0x33be79d8
  4123b8:	mov    edi,0x7b6fe4c1
  4123bd:	(bad)  [esi+0x74360c89]
  4123c3:	sub    DWORD PTR [edi-0x44],esi
  4123c6:	mov    dh,0x19
  4123c8:	leave  
  4123c9:	hlt    
  4123ca:	add    eax,0x781466fc
  4123cf:	push   0x4b06fe78
  4123d4:	popf   
  4123d5:	cli    
  4123d6:	or     edi,ebp
  4123d8:	push   eax
  4123d9:	(bad)  
  4123da:	out    dx,eax
  4123db:	push   edx
  4123dc:	xchg   edx,eax
  4123dd:	jae    0x41241a
  4123df:	adc    BYTE PTR [ebx+0x4b],dh
  4123e2:	mov    ecx,0xc9964e07
  4123e7:	adc    BYTE PTR [edi],al
  4123e9:	sub    al,BYTE PTR [esi-0x85719ec]
  4123ef:	out    dx,al
  4123f0:	shl    DWORD PTR [edi+0x10],1
  4123f3:	(bad)  
  4123f4:	push   ecx
  4123f5:	fwait
  4123f6:	call   0xc065:0xedfffa3
  4123fd:	cld    
  4123fe:	aam    0x4c
  412400:	sbb    ebx,DWORD PTR [ebx+0x5f]
  412403:	pushf  
  412404:	adc    eax,0x114e55ff
  412409:	jg     0x4123d3
  41240b:	pop    ecx
  41240c:	fwait
  41240d:	cmp    cl,dh
  41240f:	push   0xffffff85
  412411:	or     ecx,0x20242f4f
  412417:	retf   0x9a3f
  41241a:	push   es
  41241b:	cmp    eax,0xa29ba258
  412420:	(bad)  
  412421:	xor    dh,bl
  412423:	sbb    eax,0x166c022
  412428:	call   0x86e8:0x7f3c4423
  41242f:	aad    0x99
  412431:	pop    edi
  412432:	hlt    
  412433:	sub    BYTE PTR [edi],ah
  412435:	mov    ebx,0x2a6ac7f5
  41243a:	xchg   esp,eax
  41243b:	pop    edi
  41243c:	sbb    dl,dh
  41243e:	cmc    
  41243f:	or     al,0xca
  412441:	aaa    
  412442:	imul   edi,DWORD PTR [ebp+ecx*8-0x52a2a5b6],0x1985605c
  41244d:	sbb    eax,0xd28100ca
  412452:	push   0x10
  412454:	inc    ebx
  412455:	inc    edx
  412456:	cmp    DWORD PTR [edx],0x4593948f
  41245c:	pop    edx
  41245d:	pop    es
  41245e:	xchg   ebp,eax
  41245f:	(bad)  
  412460:	inc    esp
  412461:	xor    dl,ch
  412463:	sbb    esi,DWORD PTR [eax+0x12]
  412466:	clc    
  412467:	xlat   BYTE PTR ds:[ebx]
  412468:	fiadd  WORD PTR ss:[edx+ebp*2-0x4]
  41246d:	mov    bl,0x9e
  41246f:	xlat   BYTE PTR ds:[ebx]
  412470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412471:	xchg   ebx,eax
  412472:	sub    bl,bl
  412474:	xor    al,0x27
  412476:	cmp    al,0x98
  412478:	dec    edx
  412479:	xchg   ecx,eax
  41247a:	sub    cl,BYTE PTR [esi-0x1]
  41247d:	inc    edx
  41247e:	jg     0x412418
  412480:	daa    
  412481:	enter  0x7687,0x15
  412485:	jne    0x4124fd
  412487:	push   esp
  412488:	call   0x9acdf912
  41248d:	icebp  
  41248e:	sbb    DWORD PTR [eax],ebx
  412490:	jno    0x41247f
  412492:	les    esp,FWORD PTR [ecx+0x15]
  412495:	scas   al,BYTE PTR es:[edi]
  412496:	shl    dl,1
  412498:	ins    BYTE PTR es:[edi],dx
  412499:	jle    0x412467
  41249b:	cld    
  41249c:	test   edi,ecx
  41249e:	rcr    DWORD PTR [eax-0x23],1
  4124a1:	or     eax,0x1f8be192
  4124a6:	clc    
  4124a7:	or     ah,BYTE PTR [ecx-0x7c]
  4124aa:	mov    ch,0x97
  4124ac:	ins    BYTE PTR es:[edi],dx
  4124ad:	mul    ch
  4124af:	jnp    0x41244b
  4124b1:	stos   DWORD PTR es:[edi],eax
  4124b2:	or     ah,bh
  4124b4:	xchg   esp,eax
  4124b5:	cmp    al,0x9b
  4124b7:	out    0xee,al
  4124b9:	adc    DWORD PTR [edx-0x38],esp
  4124bc:	(bad)  
  4124bd:	adc    al,0x2f
  4124bf:	sub    ebp,DWORD PTR [edi+eiz*2-0x13]
  4124c3:	xchg   ebp,eax
  4124c4:	sar    ecx,cl
  4124c6:	or     al,0x71
  4124c8:	sbb    eax,0x93cecd0a
  4124cd:	pop    ebx
  4124ce:	cli    
  4124cf:	adc    DWORD PTR [ebp-0x278e5875],0xffffffe6
  4124d6:	outs   dx,BYTE PTR ds:[esi]
  4124d7:	mov    eax,ds:0xf4fe547
  4124dc:	ss leave 
  4124de:	(bad)  
  4124df:	mov    ds:0xb6d8d991,al
  4124e4:	leave  
  4124e5:	add    eax,0x54ef6c44
  4124ea:	dec    esp
  4124eb:	xchg   edi,eax
  4124ec:	lds    eax,FWORD PTR [edi+esi*4]
  4124ef:	test   al,0x18
  4124f1:	sbb    DWORD PTR [edx],eax
  4124f3:	dec    edx
  4124f4:	pop    edx
  4124f5:	sar    BYTE PTR [edx-0x7b6821e0],0x59
  4124fc:	test   eax,0x4b5e2c7f
  412501:	xor    bl,BYTE PTR [ecx]
  412503:	xlat   BYTE PTR ds:[ebx]
  412504:	pop    ebx
  412505:	out    0xd8,al
  412507:	push   cs
  412508:	test   DWORD PTR [ecx],edi
  41250a:	pushf  
  41250b:	lods   al,BYTE PTR ds:[esi]
  41250c:	stos   DWORD PTR es:[edi],eax
  41250d:	jnp    0x412500
  41250f:	xor    al,0x6f
  412511:	add    BYTE PTR [edx],0x29
  412514:	hlt    
  412515:	scas   al,BYTE PTR es:[edi]
  412516:	test   BYTE PTR [esi],0x6e
  412519:	adc    cl,BYTE PTR [esp+eax*2]
  41251c:	or     dl,BYTE PTR [eax-0xb]
  41251f:	xor    edx,DWORD PTR [eax-0x4fd80a75]
  412525:	push   ebx
  412526:	mov    WORD PTR [edi+0x36],es
  412529:	jbe    0x412538
  41252b:	ins    BYTE PTR es:[edi],dx
  41252c:	push   0xffffffdb
  41252e:	(bad)  
  412530:	pop    ecx
  412531:	add    eax,0x7a5a2b22
  412536:	sbb    ebp,DWORD PTR [edi+0x5c]
  412539:	rol    BYTE PTR [edi],0xc
  41253c:	jb     0x412589
  41253e:	mov    edx,0xb9227152
  412543:	and    BYTE PTR [ecx],cl
  412545:	push   edi
  412546:	sbb    ebp,ebx
  412548:	fdiv   DWORD PTR [eax+0x2e96c51f]
  41254e:	pushf  
  41254f:	pop    edi
  412550:	fisubr WORD PTR [edi-0x24]
  412553:	adc    DWORD PTR [eax-0x2],edx
  412556:	xor    BYTE PTR [ebp+0x456e3f7f],bl
  41255c:	imul   DWORD PTR [ebp+0x5b15b6e4]
  412562:	jmp    0xd42b:0xe57db5f4
  412569:	dec    ebp
  41256a:	dec    eax
  41256b:	dec    ebp
  41256c:	aad    0x5c
  41256e:	fstp   TBYTE PTR [edx+0x3edbd72c]
  412574:	mov    esi,0x9e971c1d
  412579:	inc    ebx
  41257a:	mov    fs,WORD PTR [edx+0xaeb66da]
  412580:	lahf   
  412581:	es gs and bl,bl
  412585:	dec    ebx
  412586:	xor    esp,0xffffffe3
  412589:	sbb    DWORD PTR [eax+eax*2+0x1be219a0],ecx
  412590:	mov    esp,gs
  412592:	fist   DWORD PTR [edx+0x61]
  412595:	add    edx,DWORD PTR [esi-0x442dcff8]
  41259b:	popf   
  41259c:	enter  0x1b9a,0xb6
  4125a0:	(bad)  
  4125a1:	and    dl,BYTE PTR [edx-0x6ebc78d8]
  4125a7:	inc    esi
  4125a8:	js     0x41261a
  4125aa:	shr    DWORD PTR [esi],0x6
  4125ad:	lock inc ebp
  4125af:	arpl   WORD PTR [esi+0x6c],sp
  4125b2:	push   0xe9f66873
  4125b7:	inc    edx
  4125b8:	mov    ds:0x7f7a6354,al
  4125bd:	xor    ah,BYTE PTR [esi]
  4125bf:	inc    esi
  4125c0:	adc    BYTE PTR [edx-0x7c],0x6a
  4125c4:	fcomp  st(1)
  4125c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c7:	ds mov esi,0x99fb407b
  4125cd:	jnp    0x412554
  4125cf:	iret   
  4125d0:	aam    0x18
  4125d2:	repz sbb DWORD PTR [ebp-0x1893c9c4],ecx
  4125d9:	lea    esp,[esi-0x3894f01c]
  4125df:	dec    esp
  4125e0:	jns    0x7aeb4d5c
  4125e6:	pop    ds
  4125e7:	fidivr WORD PTR [ebx+0x63]
  4125ea:	scas   al,BYTE PTR es:[edi]
  4125eb:	push   0x4c92c9d2
  4125f0:	mov    ah,0x15
  4125f2:	xchg   esp,eax
  4125f3:	icebp  
  4125f4:	popa   
  4125f5:	xchg   ebx,eax
  4125f6:	mov    ch,bl
  4125f8:	leave  
  4125f9:	adc    BYTE PTR [eax-0x27],al
  4125fc:	or     al,0xd
  4125fe:	sbb    eax,0x6950098e
  412603:	cmp    al,0xe2
  412605:	lods   al,BYTE PTR ds:[esi]
  412606:	dec    ebx
  412607:	lea    eax,[esi]
  412609:	jmp    0xe3db1298
  41260e:	or     eax,0xd95d7f5
  412613:	fild   DWORD PTR [ebx]
  412615:	idiv   DWORD PTR ds:0x713a2595
  41261b:	pop    edi
  41261c:	xchg   BYTE PTR [edx-0x47],bl
  41261f:	sbb    ecx,DWORD PTR [ebp-0x406fbf88]
  412625:	xchg   ebp,eax
  412626:	fwait
  412627:	push   eax
  412628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412629:	repz mov ebx,0x6d63de1
  41262f:	jb     0x41265f
  412631:	xchg   DWORD PTR [ebx+0x43b4d86d],esi
  412637:	or     eax,0x573232e1
  41263c:	shr    BYTE PTR [eax+0x2c],0x8f
  412640:	push   edx
  412641:	pop    es
  412642:	mul    ebp
  412644:	lods   al,BYTE PTR ds:[esi]
  412645:	mov    ah,0xce
  412647:	or     BYTE PTR [esi+0x77],dl
  41264a:	inc    BYTE PTR [eax-0x59bd099b]
  412650:	mov    bl,0x7f
  412652:	sub    BYTE PTR [edx+0x44f578ba],cl
  412658:	mov    eax,ds:0xb0a5a932
  41265d:	paddq  mm7,QWORD PTR [eax]
  412660:	outs   dx,BYTE PTR ds:[esi]
  412661:	icebp  
  412662:	pop    ebx
  412663:	lock xor ch,BYTE PTR [esi-0x56]
  412667:	mov    ecx,0x8c8102cc
  41266c:	add    al,0x8f
  41266e:	outs   dx,BYTE PTR ds:[esi]
  41266f:	push   esp
  412670:	in     al,0xe9
  412672:	mov    BYTE PTR [ebx-0x47],0x9a
  412676:	sbb    BYTE PTR [edx+0x3a],cl
  412679:	sub    esp,ebp
  41267b:	xor    DWORD PTR ds:0x9c385b1a,esp
  412681:	pop    ebp
  412682:	ins    BYTE PTR es:[edi],dx
  412683:	lods   al,BYTE PTR ds:[esi]
  412684:	mov    ds:0xef4c4398,eax
  412689:	jle    0x41263d
  41268b:	sub    al,0x86
  41268d:	mov    esi,0x24add6b5
  412692:	fstp   st(4)
  412694:	dec    eax
  412695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412696:	int    0x73
  412698:	mov    BYTE PTR [ebp+0x6a],ah
  41269b:	xchg   ebp,eax
  41269c:	inc    edi
  41269d:	shl    BYTE PTR [edi+eax*4-0x11cd9e10],1
  4126a4:	mov    al,0x4a
  4126a6:	dec    ecx
  4126a7:	jns    0x4126af
  4126a9:	jmp    0x412668
  4126ab:	cdq    
  4126ac:	lods   eax,DWORD PTR ds:[esi]
  4126ad:	adc    esp,edx
  4126af:	pop    eax
  4126b0:	and    DWORD PTR [esi],ebx
  4126b2:	je     0x412642
  4126b4:	call   0x9476:0xf377f2c1
  4126bb:	mov    bl,0x60
  4126bd:	or     al,ah
  4126bf:	outs   dx,BYTE PTR ds:[esi]
  4126c0:	pop    eax
  4126c1:	sub    eax,0x6ae9877f
  4126c6:	or     BYTE PTR [edx+0xd],0xb2
  4126ca:	scas   eax,DWORD PTR es:[edi]
  4126cb:	int    0x30
  4126cd:	or     BYTE PTR [ecx-0x5b],cl
  4126d0:	addr16 retf 
  4126d2:	adc    bh,0x97
  4126d5:	test   DWORD PTR [edi-0xa],eax
  4126d8:	js     0x412741
  4126da:	dec    esp
  4126db:	outs   dx,DWORD PTR ds:[esi]
  4126dc:	imul   edi,DWORD PTR [ebx],0x75583570
  4126e2:	lods   al,BYTE PTR ds:[esi]
  4126e3:	mov    ch,0xc6
  4126e5:	pushf  
  4126e6:	pop    esi
  4126e7:	sar    BYTE PTR [esi],cl
  4126e9:	push   es
  4126ea:	lock sub eax,0x4c562c0a
  4126f0:	xchg   edi,eax
  4126f1:	inc    esi
  4126f2:	mov    BYTE PTR [esi+0x455812ec],ch
  4126f8:	sahf   
  4126f9:	add    bh,BYTE PTR [ebp+eiz*8+0x65c9980a]
  412700:	in     eax,dx
  412701:	or     BYTE PTR [ecx+0xec3b447],dh
  412707:	dec    ebp
  412708:	inc    esp
  412709:	std    
  41270a:	in     al,dx
  41270b:	mov    BYTE PTR [esi+0x267a0f6d],0xc9
  412712:	in     al,0xa4
  412714:	scas   al,BYTE PTR es:[edi]
  412715:	ret    
  412716:	es into 
  412718:	xchg   edi,eax
  412719:	sbb    al,BYTE PTR [ebp-0x54c8612]
  41271f:	mov    al,ds:0x908ca04b
  412724:	test   DWORD PTR [esi],ebx
  412726:	jnp    0x4126ae
  412728:	or     BYTE PTR [ecx+0x3fc7d7d9],ah
  41272e:	cld    
  41272f:	mov    cl,0xf5
  412731:	test   DWORD PTR [edx+eax*1+0xc],ebp
  412735:	sub    ch,bl
  412737:	sbb    BYTE PTR [eax],dl
  412739:	(bad)  
  41273b:	cmp    ebx,DWORD PTR [edi]
  41273d:	lds    ebp,FWORD PTR [edx-0x3b9336cd]
  412743:	test   BYTE PTR [eax],0xaa
  412746:	jae    0x4127af
  412748:	mov    WORD PTR [edx+ebp*4-0x635850bc],gs
  41274f:	and    eax,0x3ee5aee8
  412754:	pop    es
  412755:	test   BYTE PTR [esi+0x26bc4a54],ch
  41275b:	pop    ds
  41275c:	sbb    eax,0x7cedb63e
  412761:	jle    0x4126ec
  412763:	test   eax,0xe08227df
  412768:	out    dx,al
  412769:	mov    bh,0x2d
  41276b:	scas   al,BYTE PTR es:[edi]
  41276c:	icebp  
  41276d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41276e:	add    BYTE PTR [esi],bl
  412770:	scas   al,BYTE PTR es:[edi]
  412771:	push   0xf11fde1e
  412776:	sbb    dl,al
  412778:	xchg   DWORD PTR [ebp-0x61],ebp
  41277b:	push   ebx
  41277c:	pop    esi
  41277d:	rol    ah,0x3b
  412780:	fild   QWORD PTR cs:[ebx+0x35fbd818]
  412787:	jmp    0x1e70:0xc555a95a
  41278e:	push   esi
  41278f:	xchg   ecx,eax
  412790:	retf   0xd3b3
  412793:	outs   dx,DWORD PTR ds:[esi]
  412794:	xchg   edx,eax
  412795:	sahf   
  412796:	pop    ss
  412797:	jmp    0x4127fe
  412799:	jl     0x412721
  41279b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41279c:	sti    
  41279d:	add    eax,0xb2b023ef
  4127a2:	xor    BYTE PTR [edi],dl
  4127a4:	mov    ebx,ds
  4127a6:	ror    BYTE PTR [eax],1
  4127a8:	dec    ecx
  4127a9:	aas    
  4127aa:	push   es
  4127ab:	daa    
  4127ac:	inc    esp
  4127ad:	(bad)  
  4127af:	sbb    dh,ah
  4127b1:	ror    eax,0xc1
  4127b4:	imul   edx,eax,0xe79fb092
  4127ba:	leave  
  4127bb:	sub    ch,dl
  4127bd:	adc    DWORD PTR [ebp-0x25],0x4b099f25
  4127c4:	inc    ebp
  4127c5:	retf   0x3d3d
  4127c8:	lahf   
  4127c9:	mov    ss,WORD PTR [esi]
  4127cb:	inc    ebp
  4127cc:	bound  esi,QWORD PTR [edx+0x1a79b92d]
  4127d2:	jmp    0x5177:0xa5cabcd
  4127d9:	xchg   ebp,eax
  4127da:	aad    0xef
  4127dc:	adc    DWORD PTR [edi+0x8],edx
  4127df:	sar    DWORD PTR [ecx+0x5d],0x74
  4127e3:	or     al,0x1
  4127e5:	xlat   BYTE PTR ds:[ebx]
  4127e6:	imul   edx,DWORD PTR [ebx-0x40ba8616],0x79
  4127ed:	jb     0x412798
  4127ef:	add    al,0xa9
  4127f1:	popf   
  4127f2:	add    BYTE PTR [ebp-0x67],al
  4127f5:	sbb    ch,BYTE PTR [ebx]
  4127f7:	jno    0x412824
  4127f9:	sti    
  4127fa:	sub    ah,BYTE PTR [ecx+0x421b588b]
  412800:	fisttp QWORD PTR [ebx-0x1d]
  412803:	test   DWORD PTR [edx+0x52],eax
  412806:	mov    edi,0x59ceef35
  41280b:	(bad)  
  41280c:	jg     0x41284c
  41280e:	jmp    0x936a:0xd6683eb1
  412815:	dec    ebp
  412816:	js     0x4127d9
  412818:	jmp    0x5ab93824
  41281d:	punpckhbw mm3,mm5
  412820:	push   ds
  412821:	lods   eax,DWORD PTR ds:[esi]
  412822:	retf   0xede0
  412825:	jo     0x4127f6
  412827:	nop
  412828:	iret   
  412829:	popa   
  41282a:	jge    0x412873
  41282c:	xchg   ebx,eax
  41282d:	mov    edi,0x8c987faf
  412832:	push   DWORD PTR [esi+0x629ad1f3]
  412838:	xor    ebx,ecx
  41283a:	fs fwait
  41283c:	data16 mov ds:0xb05655a0,al
  412842:	retf   0xb7be
  412845:	retf   0xa972
  412848:	xlat   BYTE PTR ds:[ebx]
  412849:	and    eax,0x3f6c7653
  41284e:	sbb    eax,0x19dea647
  412853:	fcmovnbe st,st(4)
  412855:	jmp    0x4127f7
  412857:	mov    edi,0x2fc1c0a7
  41285c:	iret   
  41285d:	xor    al,0x64
  41285f:	mov    BYTE PTR ds:0xf3bccd83,dl
  412865:	loop   0x412841
  412867:	fdiv   DWORD PTR [ebx-0x66]
  41286a:	push   ebp
  41286b:	repz out dx,eax
  41286d:	in     al,0x45
  41286f:	mov    dl,0xa3
  412871:	loop   0x4128e8
  412873:	rcl    DWORD PTR [esi],cl
  412875:	jb     0x41281c
  412877:	mov    dl,0xba
  412879:	cwde   
  41287a:	aad    0x36
  41287c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41287d:	fst    DWORD PTR [ebx]
  41287f:	scas   eax,DWORD PTR es:[edi]
  412880:	mov    esi,0x32c264f1
  412885:	(bad)  
  412887:	imul   DWORD PTR [edx+0x51ee3b45]
  41288d:	mov    esp,edi
  41288f:	pusha  
  412890:	(bad)  
  412891:	adc    al,0xaf
  412893:	adc    eax,ebp
  412895:	scas   eax,DWORD PTR es:[edi]
  412896:	es jb  0x4128dd
  412899:	aas    
  41289a:	test   al,0x4c
  41289c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41289d:	mov    ?,esp
  41289f:	jge    0x4128dd
  4128a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a2:	fist   WORD PTR [ecx-0x31]
  4128a5:	mov    ebx,0xd4d9fbf2
  4128aa:	xor    al,0xdb
  4128ac:	jns    0x412846
  4128ae:	aam    0x8f
  4128b0:	stc    
  4128b1:	adc    al,BYTE PTR [ebx]
  4128b3:	pusha  
  4128b4:	inc    esi
  4128b5:	rcl    DWORD PTR [ecx-0x47792a9d],cl
  4128bb:	in     al,0x4e
  4128bd:	in     eax,0x63
  4128bf:	test   BYTE PTR [bx-0x4b],0x54
  4128c4:	push   ebx
  4128c5:	mov    bh,0x77
  4128c7:	outs   dx,DWORD PTR ds:[esi]
  4128c8:	pop    esi
  4128c9:	ja     0x412909
  4128cb:	jle    0x412917
  4128cd:	sub    dh,BYTE PTR [edx+0x6f1fc3d0]
  4128d3:	mov    eax,ds:0x711e34b3
  4128d8:	fnstsw WORD PTR [eax+0x629ee8c6]
  4128de:	test   eax,0xce1ae84d
  4128e3:	test   al,al
  4128e5:	jmp    0xf734c810
  4128ea:	loop   0x412950
  4128ec:	push   es
  4128ed:	xchg   edi,eax
  4128ee:	pop    esi
  4128ef:	xor    eax,0xec229a1b
  4128f4:	push   ds
  4128f5:	dec    edi
  4128f6:	(bad)  [ebp+ebx*8-0x4f4c315a]
  4128fd:	shl    BYTE PTR [edi+edi*1],1
  412900:	or     BYTE PTR [ebp*4+0x65f046a9],ch
  412907:	shr    DWORD PTR [ebx+0x3b],1
  41290a:	les    eax,FWORD PTR [edi+ebp*2]
  41290d:	xchg   BYTE PTR [edx+0x28232376],dh
  412913:	xchg   edx,eax
  412914:	pop    es
  412915:	stc    
  412916:	es aaa 
  412918:	sbb    eax,0xcca98653
  41291d:	pop    esp
  41291e:	lock jg 0x4128c7
  412921:	push   ebp
  412922:	ja     0x4128c1
  412924:	mov    bh,0x92
  412926:	inc    ebp
  412927:	pusha  
  412928:	xchg   edx,eax
  412929:	sub    eax,0xf3f5f341
  41292e:	shr    DWORD PTR [ecx+0x7c],cl
  412931:	pushf  
  412932:	pusha  
  412933:	das    
  412934:	retf   0x896c
  412937:	daa    
  412938:	pop    es
  412939:	inc    edi
  41293a:	sbb    eax,0xb55c3695
  41293f:	dec    esp
  412940:	call   0x5fb5526e
  412945:	xor    eax,0x2e003f9b
  41294a:	push   ds
  41294b:	cmp    DWORD PTR ds:0x12c8c0a7,esi
  412951:	push   ebx
  412952:	lock shr dl,1
  412955:	and    ebx,esi
  412957:	and    DWORD PTR [eax+0x0],esp
  41295a:	mov    bl,BYTE PTR [ebx]
  41295c:	push   ebp
  41295d:	cld    
  41295e:	rol    BYTE PTR [edi],cl
  412960:	adc    al,0x2e
  412962:	xor    DWORD PTR [edx],ecx
  412964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412965:	out    0x1b,eax
  412967:	pop    ds
  412968:	bnd jns 0x4129b0
  41296b:	pop    edx
  41296c:	add    DWORD PTR [ebx],eax
  41296e:	jmp    0xa2a6:0x2c433a1e
  412975:	addr16 push ecx
  412977:	test   DWORD PTR [edx+0x2271b1c9],esp
  41297d:	loopne 0x41297c
  41297f:	ins    DWORD PTR es:[edi],dx
  412980:	cmp    ch,BYTE PTR [edi-0x75db0761]
  412986:	or     edi,DWORD PTR ds:0xcafdcca4
  41298c:	lock dec DWORD PTR [edx]
  41298f:	not    esp
  412991:	xchg   DWORD PTR [edx+0x176d5d9c],ecx
  412997:	jg     0x41294a
  412999:	repnz cdq 
  41299b:	push   ds
  41299c:	cld    
  41299d:	adc    edi,DWORD PTR [ecx+0x2ba494f4]
  4129a3:	pop    eax
  4129a4:	gs retw 0x9bfd
  4129a9:	jg     0x41293e
  4129ab:	hlt    
  4129ac:	mov    esi,ecx
  4129ae:	fsub   st(3),st
  4129b0:	lods   al,BYTE PTR ds:[esi]
  4129b1:	(bad)  
  4129b2:	into   
  4129b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b4:	daa    
  4129b5:	ss cli 
  4129b7:	jecxz  0x4129df
  4129b9:	jp     0x4129de
  4129bb:	cmc    
  4129bc:	mov    esi,0x47fb3b1c
  4129c1:	adc    DWORD PTR [ecx+0x54],esi
  4129c4:	scas   eax,DWORD PTR es:[edi]
  4129c5:	les    esp,FWORD PTR [eax+edi*8-0x6524c933]
  4129cc:	push   ss
  4129cd:	ror    ecx,0xea
  4129d0:	and    al,0x9a
  4129d2:	xor    edi,0xfffffffd
  4129d5:	mov    ?,WORD PTR [esi-0x14]
  4129d8:	xchg   ecx,eax
  4129d9:	add    al,0x39
  4129db:	rcr    esi,1
  4129dd:	jae    0x4129cf
  4129df:	jmp    0xdfd:0xaaa6340e
  4129e6:	rcl    DWORD PTR [eax],cl
  4129e8:	fstp   TBYTE PTR [edi]
  4129ea:	mov    BYTE PTR [eax+0x6e],0x2b
  4129ee:	jnp    0x412a48
  4129f0:	xchg   ebx,eax
  4129f1:	push   0x7d
  4129f3:	mov    dh,bl
  4129f5:	fst    st(5)
  4129f7:	cdq    
  4129f8:	clc    
  4129f9:	add    DWORD PTR [edi],esp
  4129fb:	test   BYTE PTR ds:[eax-0x6e],ah
  4129ff:	in     eax,0xae
  412a01:	xchg   esp,eax
  412a02:	mov    ebx,0x5f7a6d22
  412a07:	adc    al,0xe1
  412a09:	cmp    BYTE PTR [esp+ecx*8],bl
  412a0c:	retf   
  412a0d:	in     eax,0x54
  412a0f:	sub    bl,cl
  412a11:	daa    
  412a12:	jl     0x412a5e
  412a14:	lods   eax,DWORD PTR ds:[esi]
  412a15:	(bad)  
  412a17:	and    eax,0xb9174d0
  412a1c:	cmp    ecx,DWORD PTR [edi-0x5d648a4c]
  412a22:	jl     0x412a4f
  412a24:	rol    DWORD PTR [edx+0x20],cl
  412a27:	adc    cl,BYTE PTR [edi]
  412a29:	cwde   
  412a2a:	popf   
  412a2b:	cdq    
  412a2c:	pop    edi
  412a2d:	sub    edx,esp
  412a2f:	mov    edi,0xab3535ce
  412a34:	push   0xffffffee
  412a36:	outs   dx,BYTE PTR ds:[esi]
  412a37:	and    BYTE PTR [eax],ah
  412a39:	fcom   st(7)
  412a3b:	test   al,0x52
  412a3d:	or     edi,DWORD PTR [ecx+0x7afc00c4]
  412a43:	xor    al,0xed
  412a45:	sub    DWORD PTR [edx+0x7fd60107],ebp
  412a4b:	push   cs
  412a4c:	xchg   ecx,eax
  412a4d:	int    0xa3
  412a4f:	dec    ebx
  412a50:	(bad)  
  412a52:	movaps XMMWORD PTR [ebx+esi*1-0x3a],xmm1
  412a57:	jns    0x412a1f
  412a59:	xchg   ebx,ebp
  412a5b:	jns    0x412a82
  412a5d:	xor    eax,0x82d00e11
  412a62:	mov    ebx,0x8a7020f3
  412a67:	xchg   dl,cl
  412a69:	sbb    al,0xd6
  412a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a6c:	repz or al,0xab
  412a6f:	aas    
  412a70:	jp     0x412ac2
  412a72:	cmp    al,0x9c
  412a74:	lock and BYTE PTR [edx-0x30],ah
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	sbb    eax,0x2df12f20
  412a7e:	jge    0x412a00
  412a80:	pop    ss
  412a81:	mov    ds:0x81d9616b,al
  412a86:	cdq    
  412a87:	mov    eax,DWORD PTR [esi-0x8]
  412a8a:	rol    BYTE PTR [eax-0x505cdf5d],0x5e
  412a91:	repz push ds
  412a93:	in     al,dx
  412a94:	sahf   
  412a95:	repnz mov esi,0x1aa6751b
  412a9b:	call   0x764572fc
  412aa0:	das    
  412aa1:	mov    dl,0x22
  412aa3:	sub    dl,BYTE PTR [esi+ecx*4]
  412aa6:	cmp    edi,DWORD PTR [esi-0x33ad6d40]
  412aac:	inc    ecx
  412aad:	sub    DWORD PTR [ebx+0x14],0xcbb91d57
  412ab4:	and    BYTE PTR [ebx+0x121153b8],cl
  412aba:	popa   
  412abb:	cld    
  412abc:	arpl   WORD PTR [edi+0x38a279fc],sp
  412ac2:	pop    edx
  412ac3:	cmp    cl,ch
  412ac5:	jecxz  0x412a57
  412ac7:	jns    0x412ab1
  412ac9:	jge    0x412a87
  412acb:	nop
  412acc:	fwait
  412acd:	jle    0x412ae9
  412acf:	and    DWORD PTR [edx+edi*1+0x4],esi
  412ad3:	dec    esp
  412ad4:	fist   DWORD PTR [edi-0x59]
  412ad7:	aam    0x69
  412ad9:	add    al,0x11
  412adb:	sbb    al,0x87
  412add:	lea    ebp,[edi+0x5e1868dd]
  412ae3:	cmp    BYTE PTR [edx],0x5d
  412ae6:	jp     0x412aa5
  412ae8:	loope  0x412b51
  412aea:	not    DWORD PTR [eax-0x1cbe9499]
  412af0:	cmc    
  412af1:	jmp    0x412ad7
  412af3:	retf   
  412af4:	fld    QWORD PTR [edx-0x7dc64349]
  412afa:	jg     0x412b37
  412afc:	pop    eax
  412afd:	cs sub al,0x34
  412b00:	dec    DWORD PTR [ebp-0x35]
  412b03:	xchg   esp,eax
  412b04:	cwde   
  412b05:	pop    ebp
  412b06:	cs stos DWORD PTR es:[edi],eax
  412b08:	outs   dx,DWORD PTR ds:[esi]
  412b09:	ins    DWORD PTR es:[edi],dx
  412b0a:	add    BYTE PTR [esi],bl
  412b0c:	addr16 pop ds
  412b0e:	loop   0x412b56
  412b10:	aaa    
  412b11:	in     eax,0x59
  412b13:	sub    DWORD PTR [edx],ebp
  412b15:	dec    edi
  412b16:	jo     0x412b11
  412b18:	fadd   QWORD PTR [edx+0xa]
  412b1b:	or     ecx,0x1c75f14c
  412b21:	lock sub DWORD PTR [ebx],0x6c346277
  412b28:	sbb    BYTE PTR [edi-0x4835c532],bh
  412b2e:	jle    0x412ab9
  412b30:	das    
  412b31:	cli    
  412b32:	repz xchg edx,eax
  412b34:	sub    BYTE PTR [edx+0x59926853],dh
  412b3a:	sub    eax,0xa1acbc19
  412b3f:	pushf  
  412b40:	sbb    al,0x50
  412b42:	aas    
  412b43:	lods   eax,DWORD PTR ds:[esi]
  412b44:	cmp    eax,0xede0316a
  412b49:	mov    cl,BYTE PTR [eax+0x1a]
  412b4c:	mov    dl,BYTE PTR [eax-0x1]
  412b4f:	dec    eax
  412b50:	dec    edx
  412b51:	cld    
  412b52:	icebp  
  412b53:	add    DWORD PTR [ebx+0x51b58011],eax
  412b59:	test   BYTE PTR [edx],0x9b
  412b5c:	call   0xc145:0xd27c300e
  412b63:	xchg   BYTE PTR [ecx-0x4f],bl
  412b66:	shr    ecx,0xdb
  412b69:	push   esp
  412b6a:	adc    eax,0xf17873be
  412b6f:	pop    ss
  412b70:	pop    ebx
  412b71:	xor    esi,DWORD PTR [edx-0x4c]
  412b74:	adc    DWORD PTR [ecx-0x32],ecx
  412b77:	inc    edi
  412b78:	push   0x6d50d974
  412b7d:	push   cs
  412b7e:	leave  
  412b7f:	add    dh,BYTE PTR [edx]
  412b81:	sub    ah,bl
  412b83:	push   0x4a
  412b85:	(bad)
  412b88:	adc    al,0x5f
  412b8a:	aaa    
  412b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b8c:	inc    esi
  412b8d:	test   al,0xc1
  412b8f:	jb     0x412b30
  412b91:	jo     0x412bb6
  412b93:	ror    BYTE PTR [eax-0x1fafd45a],1
  412b99:	jns    0x412bf6
  412b9b:	xor    ebp,DWORD PTR [edi-0x167351e3]
  412ba1:	jno    0x412b2a
  412ba3:	dec    esp
  412ba4:	popf   
  412ba5:	push   ds
  412ba6:	out    dx,al
  412ba7:	or     dl,dh
  412ba9:	jl     0x412c06
  412bab:	pop    ss
  412bac:	dec    ebx
  412bad:	jb     0x412ba7
  412baf:	cmp    BYTE PTR [ecx-0x2],ah
  412bb2:	jne    0x412c1e
  412bb4:	in     al,dx
  412bb5:	(bad)  
  412bb6:	in     eax,0xb
  412bb8:	xchg   DWORD PTR [ebp+0x5c],ecx
  412bbb:	lds    eax,FWORD PTR [ebp+0x4065bd13]
  412bc1:	add    ebx,DWORD PTR [edi]
  412bc3:	push   0x12da57e0
  412bc8:	sub    al,BYTE PTR [ebp*1+0x4957667c]
  412bcf:	cli    
  412bd0:	out    0xa5,al
  412bd2:	mov    dh,0x5
  412bd4:	xor    bh,BYTE PTR [ebp-0x230278d9]
  412bda:	xlat   BYTE PTR ds:[ebx]
  412bdb:	mov    ah,BYTE PTR [edi+0x75c6aee1]
  412be1:	fwait
  412be2:	scas   eax,DWORD PTR es:[edi]
  412be3:	(bad)  
  412be4:	push   edi
  412be5:	jno    0x412bac
  412be7:	sub    BYTE PTR ds:0x6b5b813,bl
  412bed:	ss aad 0x56
  412bf0:	out    dx,al
  412bf1:	les    edi,FWORD PTR [edi-0x68]
  412bf4:	out    dx,al
  412bf5:	or     DWORD PTR [ecx-0x62],edx
  412bf8:	pop    ebp
  412bf9:	(bad)  
  412bfa:	pop    edi
  412bfb:	or     eax,0x14cf61fb
  412c00:	sub    eax,DWORD PTR [ebx+0x6c4653b8]
  412c06:	sbb    ecx,0x25
  412c09:	call   0xe13a:0xc9defc08
  412c10:	fstp   QWORD PTR [esp+edx*8-0x71]
  412c14:	out    dx,al
  412c15:	or     dl,BYTE PTR [ecx+0x625d432e]
  412c1b:	imul   edi,DWORD PTR [edi+eiz*8],0xffffff86
  412c1f:	xor    al,0x1
  412c21:	gs inc esp
  412c23:	retf   
  412c24:	rcr    DWORD PTR [ebx],0x84
  412c27:	fs repz cdq 
  412c2a:	test   eax,0x1f51fca2
  412c2f:	mov    edi,0x552b5681
  412c34:	add    eax,edi
  412c36:	iret   
  412c37:	jno    0x412c4c
  412c39:	sbb    esi,DWORD PTR [ecx+0x54]
  412c3c:	jmp    0x5e54:0x2aea4364
  412c43:	xor    ebp,edx
  412c45:	mov    esp,ebp
  412c47:	sub    cl,BYTE PTR [esi-0x68a7095d]
  412c4d:	out    0x79,al
  412c4f:	data16 (bad) 
  412c51:	call   0x629e403a
  412c56:	(bad)  
  412c57:	xor    al,cl
  412c59:	lods   al,BYTE PTR ds:[esi]
  412c5a:	nop
  412c5b:	ins    BYTE PTR es:[edi],dx
  412c5c:	loop   0x412c16
  412c5e:	mov    bh,0xe3
  412c60:	push   esp
  412c61:	test   BYTE PTR [ebp+0x1739814b],al
  412c67:	(bad)  
  412c68:	scas   eax,DWORD PTR es:[edi]
  412c69:	push   edx
  412c6a:	es ss add al,0xc3
  412c6e:	mov    bh,0x64
  412c70:	int3   
  412c71:	dec    ebp
  412c72:	xlat   BYTE PTR ds:[ebx]
  412c73:	mov    al,ds:0xbc3ed630
  412c78:	int    0xf9
  412c7a:	cs mov ebp,0x18eceafc
  412c80:	out    dx,al
  412c81:	mov    edx,0x9599a46d
  412c86:	out    0xeb,al
  412c88:	stos   DWORD PTR es:[edi],eax
  412c89:	push   edx
  412c8a:	sti    
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jne    0x412cf0
  412c8e:	mov    esp,0x20c1c227
  412c93:	or     eax,0x605b2adf
  412c98:	dec    edx
  412c99:	mov    cl,0x41
  412c9b:	ret    0xd565
  412c9e:	imul   edi,DWORD PTR [ebx+0x77],0x5e9af633
  412ca5:	xlat   BYTE PTR ds:[ebx]
  412ca6:	push   cs
  412ca7:	fadd   QWORD PTR [esi+0x1c399080]
  412cad:	and    eax,0x1b24f074
  412cb2:	and    BYTE PTR [edi-0x667a545e],ch
  412cb8:	mov    eax,ds:0xa01cacb6
  412cbd:	push   esi
  412cbe:	xchg   DWORD PTR [ecx+0x5413a6c7],edi
  412cc4:	xor    bh,BYTE PTR [ebx+ebp*4+0x548e6fbb]
  412ccb:	bound  esp,QWORD PTR [esi-0x42]
  412cce:	push   edx
  412ccf:	xor    eax,0x6fe931fd
  412cd4:	jb     0x412c87
  412cd6:	in     eax,dx
  412cd7:	mov    DWORD PTR [ebx-0x14],edi
  412cda:	xchg   edi,eax
  412cdb:	nop
  412cdc:	push   esp
  412cdd:	fidivr WORD PTR [esi-0x80]
  412ce0:	cdq    
  412ce1:	bound  esp,QWORD PTR ds:0x11e6a085
  412ce7:	icebp  
  412ce8:	leave  
  412ce9:	cdq    
  412cea:	add    al,0x7c
  412cec:	push   esp
  412ced:	jp     0x412cb7
  412cef:	ins    DWORD PTR es:[edi],dx
  412cf0:	lods   al,BYTE PTR ds:[esi]
  412cf1:	mov    cl,0xbe
  412cf3:	ret    0xbd54
  412cf6:	dec    ecx
  412cf7:	popf   
  412cf8:	jmp    0x412d59
  412cfa:	js     0x412cea
  412cfc:	add    ebp,DWORD PTR [ecx-0x2860f95b]
  412d02:	retf   
  412d03:	imul   edi,edi,0x66
  412d06:	fwait
  412d07:	stos   BYTE PTR es:[edi],al
  412d08:	aaa    
  412d09:	popf   
  412d0a:	add    al,BYTE PTR [ebp+0x16432703]
  412d10:	stc    
  412d11:	popf   
  412d12:	sub    esp,ecx
  412d14:	imul   esp,DWORD PTR [eax],0x6e
  412d17:	aam    0x76
  412d19:	out    0x8f,eax
  412d1b:	ins    DWORD PTR es:[edi],dx
  412d1c:	rcl    BYTE PTR [eax+edi*2+0x5f],cl
  412d20:	test   al,0x7
  412d22:	call   0xf942:0xf11bc71d
  412d29:	jbe    0x412d0b
  412d2b:	jl     0x412cd4
  412d2d:	pop    ds
  412d2e:	je     0x412d2b
  412d30:	mov    cl,BYTE PTR [edi]
  412d32:	sub    esi,DWORD PTR [ecx+0x59]
  412d35:	inc    edi
  412d36:	pop    esi
  412d37:	(bad)  
  412d38:	gs jg  0x412d6f
  412d3b:	dec    ecx
  412d3c:	or     BYTE PTR [edx-0x4e5b26cd],al
  412d42:	stc    
  412d43:	int3   
  412d44:	test   BYTE PTR [ecx-0x18],0x26
  412d48:	inc    esi
  412d49:	iret   
  412d4a:	jb     0x412d58
  412d4c:	call   0x12fff14f
  412d51:	push   cs
  412d52:	ja     0x412d6b
  412d54:	les    esp,FWORD PTR [edi]
  412d56:	inc    eax
  412d57:	pop    eax
  412d58:	ss scas eax,DWORD PTR es:[edi]
  412d5a:	dec    edx
  412d5b:	mov    ds:0xc6d2e588,eax
  412d60:	les    ebp,FWORD PTR ds:0x9a9613d0
  412d66:	ret    
  412d67:	or     ebp,esi
  412d69:	dec    ecx
  412d6a:	popf   
  412d6b:	add    esp,ecx
  412d6d:	mov    ebp,0x5b72adf
  412d72:	jno    0x412d4e
  412d74:	(bad)  
  412d75:	in     eax,0x32
  412d77:	fild   WORD PTR [edx]
  412d79:	stos   BYTE PTR es:[edi],al
  412d7a:	fst    DWORD PTR [ebp+0x4e5745b0]
  412d80:	add    eax,0x11824e33
  412d85:	or     bh,bh
  412d87:	mov    dl,0x8a
  412d89:	jns    0x412db2
  412d8b:	push   0x43
  412d8d:	jmp    0x9740a6aa
  412d92:	and    dh,cl
  412d94:	lods   al,BYTE PTR ds:[esi]
  412d95:	ret    
  412d96:	in     eax,dx
  412d97:	loopne 0x412d3c
  412d99:	mov    esi,0x449c095d
  412d9e:	mov    bh,0x9c
  412da0:	test   BYTE PTR [ebp-0x6a],bh
  412da3:	imul   eax,DWORD PTR [edi],0xfffffff1
  412da6:	mov    ebp,0x45dbcef7
  412dab:	mov    dl,0x31
  412dad:	pop    es
  412dae:	retf   0x7742
  412db1:	pushf  
  412db2:	xchg   DWORD PTR [edi+0x19],esi
  412db5:	jbe    0x412df4
  412db7:	fsubr  QWORD PTR [ebx-0x50ff7472]
  412dbd:	pusha  
  412dbe:	sub    DWORD PTR [edx],eax
  412dc0:	cmp    BYTE PTR [ebp+0x39d754a9],dl
  412dc6:	sub    ebx,0x4ea8d223
  412dcc:	or     DWORD PTR [ebx+0x14406904],ebx
  412dd2:	mov    eax,DWORD PTR [esp+ecx*4]
  412dd5:	mov    ebp,0x1476208d
  412dda:	sbb    esi,edx
  412ddc:	inc    ecx
  412ddd:	add    edi,esp
  412ddf:	(bad)
  412de3:	mov    bl,0x23
  412de5:	shl    BYTE PTR [ebp-0x45],cl
  412de8:	mov    WORD PTR ds:0x23c35455,ds
  412dee:	hlt    
  412def:	push   edi
  412df0:	div    bl
  412df2:	xor    ch,BYTE PTR [edi-0x18b37443]
  412df8:	fisttp QWORD PTR [eax]
  412dfa:	int    0xc1
  412dfc:	es scas al,BYTE PTR es:[edi]
  412dfe:	push   eax
  412dff:	lds    ebx,FWORD PTR [edx+0xb]
  412e02:	pop    edx
  412e03:	pop    esi
  412e04:	xor    DWORD PTR [edi],edx
  412e06:	fsub   DWORD PTR [esi+0x2b]
  412e09:	sbb    al,0xc2
  412e0b:	push   ecx
  412e0c:	fisttp WORD PTR [ecx-0x13]
  412e0f:	xchg   edi,eax
  412e10:	ja     0x412db9
  412e12:	sub    dh,bl
  412e14:	fdiv   st,st(0)
  412e16:	add    DWORD PTR [edi-0x6f],ebp
  412e19:	push   ds
  412e1a:	and    ah,al
  412e1c:	je     0x412e4b
  412e1e:	xchg   BYTE PTR [ecx],cl
  412e20:	push   ss
  412e21:	mov    ds:0x11410fd5,al
  412e26:	js     0x412e76
  412e28:	enter  0x85bc,0x53
  412e2c:	mov    ecx,0xb3b558e0
  412e31:	pop    esi
  412e32:	ficomp WORD PTR [ecx+edx*4]
  412e35:	xchg   esi,eax
  412e36:	mov    ds:0xb77a6180,al
  412e3b:	xor    eax,0x404c76ad
  412e40:	ins    BYTE PTR es:[edi],dx
  412e41:	inc    edx
  412e42:	lock out dx,al
  412e44:	sbb    BYTE PTR [eax+0x65cfb36e],dh
  412e4a:	cld    
  412e4b:	out    dx,eax
  412e4c:	test   DWORD PTR ds:0x479d6462,ebx
  412e52:	loop   0x412dfd
  412e54:	jge    0x412df3
  412e56:	xor    al,0x2e
  412e58:	mov    ds:0xbdc305fa,al
  412e5d:	mov    ecx,0x3f9965f4
  412e62:	(bad)  
  412e63:	out    dx,eax
  412e64:	mov    edi,0x73334163
  412e69:	mov    esp,0x61f24cfd
  412e6e:	sbb    DWORD PTR [esi+0x6b545a42],0xe
  412e75:	cmp    DWORD PTR [eax+esi*4],esi
  412e78:	pop    edi
  412e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e7a:	xchg   DWORD PTR [edi+0x5d],ebx
  412e7d:	rcl    BYTE PTR [ebx+ecx*8],1
  412e80:	dec    esp
  412e81:	pop    edi
  412e82:	call   DWORD PTR [edi-0x5392d8b6]
  412e88:	adc    bh,BYTE PTR [edx]
  412e8a:	or     al,0xa1
  412e8c:	add    ebx,DWORD PTR [edi+0x16]
  412e8f:	loope  0x412ede
  412e91:	mov    ds:0xa73683cf,eax
  412e96:	lahf   
  412e97:	shl    BYTE PTR [eax],1
  412e99:	cmp    BYTE PTR [ecx],ah
  412e9b:	test   al,0xd7
  412e9d:	xor    eax,0x8fbaa976
  412ea2:	push   esi
  412ea3:	inc    ecx
  412ea4:	mov    ax,ds:0x5f326701
  412eaa:	mov    WORD PTR [edx],ss
  412eac:	in     eax,dx
  412ead:	cmp    edi,edx
  412eaf:	imul   esi,ebx,0xfffffff9
  412eb2:	mov    ebx,0xd355a9fd
  412eb7:	ficomp WORD PTR [eax]
  412eb9:	(bad)  
  412eba:	shl    edx,1
  412ebc:	(bad)  
  412ebd:	shl    cl,1
  412ebf:	add    eax,0x91a1c5dc
  412ec4:	xor    bh,BYTE PTR [edi+0x30]
  412ec7:	fcomp  DWORD PTR [eax-0x71]
  412eca:	mov    bh,BYTE PTR [eax-0x32038053]
  412ed0:	sbb    al,BYTE PTR [edx+0x5f]
  412ed3:	inc    ebx
  412ed4:	in     al,dx
  412ed5:	inc    edi
  412ed6:	mov    bl,0x7b
  412ed8:	cmc    
  412ed9:	aam    0x3f
  412edb:	jb     0x412e60
  412edd:	dec    edi
  412ede:	ret    0xf77f
  412ee1:	mov    BYTE PTR [ebp-0x615ce307],dh
  412ee7:	xchg   DWORD PTR [ecx-0x1ba9e05f],edx
  412eed:	push   edx
  412eee:	stos   BYTE PTR es:[edi],al
  412eef:	repz daa 
  412ef1:	sub    BYTE PTR [ecx-0x227a4a44],ah
  412ef7:	xchg   edx,eax
  412ef8:	and    eax,0x5b4e0ace
  412efd:	pop    ebp
  412efe:	(bad)  
  412eff:	sub    al,0x47
  412f01:	mov    ch,BYTE PTR [eax+0x24549fba]
  412f07:	pop    esp
  412f08:	and    dh,0x62
  412f0b:	retf   
  412f0c:	sbb    dh,BYTE PTR [ebx-0x59]
  412f0f:	and    eax,0xb40cd0e3
  412f14:	in     eax,dx
  412f15:	mov    eax,0x406c6ae1
  412f1a:	lahf   
  412f1b:	inc    esi
  412f1c:	mov    dh,0x97
  412f1e:	in     al,dx
  412f1f:	pop    esp
  412f20:	adc    eax,0xe54b8979
  412f25:	inc    esp
  412f26:	test   bl,ah
  412f28:	jg     0x412ede
  412f2a:	loopne 0x412eb9
  412f2c:	mov    bl,0xe9
  412f2e:	pop    esi
  412f2f:	sub    al,BYTE PTR ds:0x3e37dfaa
  412f35:	icebp  
  412f36:	test   DWORD PTR [ebp+0x76da1a35],0x536293ce
  412f40:	fadd   st,st(3)
  412f42:	cmc    
  412f43:	loope  0x412fab
  412f45:	je     0x412eef
  412f47:	adc    DWORD PTR [ebx-0x1e],0x2e
  412f4b:	mov    WORD PTR [esp+edi*4],ss
  412f4e:	lds    ecx,FWORD PTR [edx+eax*4]
  412f51:	sub    DWORD PTR [edi-0x64],0xf3c2b715
  412f58:	pop    ss
  412f59:	aam    0x82
  412f5b:	and    edx,ebp
  412f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5e:	jmp    0x18e8:0x8f606349
  412f65:	push   esi
  412f66:	and    BYTE PTR [eax],0xb2
  412f69:	and    cl,BYTE PTR [ebx+0x288e0c37]
  412f6f:	fisub  DWORD PTR [eax-0x20]
  412f72:	rcl    edx,1
  412f74:	js     0x412fd5
  412f76:	loope  0x412f50
  412f78:	jmp    0xb3ed:0xb2c08d35
  412f7f:	fstp   DWORD PTR [ecx+0x2cb901e7]
  412f85:	mov    al,0xa2
  412f87:	repz jo 0x412f83
  412f8a:	mov    dl,0x7b
  412f8c:	cld    
  412f8d:	mov    ?,WORD PTR [edx-0x18]
  412f90:	out    dx,al
  412f91:	out    dx,eax
  412f92:	or     DWORD PTR [esp+edi*2],0x4674eb32
  412f99:	out    0xd,eax
  412f9b:	add    DWORD PTR [ebx+edx*2-0x46],esi
  412f9f:	test   cl,bl
  412fa1:	sub    DWORD PTR [edi+0x1f729252],ebx
  412fa7:	hlt    
  412fa8:	and    DWORD PTR [eax-0x4b56c3cd],0x5a9041f9
  412fb2:	push   ss
  412fb3:	mov    ds:0xcfe88b7d,al
  412fb8:	dec    ebx
  412fb9:	and    eax,0x18e456dd
  412fbe:	int3   
  412fbf:	retf   
  412fc0:	mov    eax,ds:0xaf2d04bd
  412fc5:	cmp    BYTE PTR [edi-0x6aacfa5f],cl
  412fcb:	fnstsw WORD PTR [ebx]
  412fcd:	imul   edx,DWORD PTR [edi+0x635a5199],0x39
  412fd4:	dec    ebx
  412fd5:	or     ebp,DWORD PTR [edx]
  412fd7:	retf   0xc930
  412fda:	add    al,0x10
  412fdc:	call   0xd1fa:0x9fd7b529
  412fe3:	dec    ebx
  412fe4:	sbb    ah,ch
  412fe6:	leave  
  412fe7:	mov    ecx,0xee95f22f
  412fec:	repnz aaa 
  412fee:	push   0x4d
  412ff0:	je     0x412fab
  412ff2:	mov    ch,0x5d
  412ff4:	cmp    dl,BYTE PTR [edx+0x75]
  412ff7:	shr    DWORD PTR [ecx+0x2863d1e3],cl
  412ffd:	mov    dl,0x2a
  412fff:	or     dl,BYTE PTR [edx+0x6d]
  413002:	xchg   DWORD PTR [esp+edx*8+0x3ddf75cb],ebp
  413009:	or     BYTE PTR [ecx-0x5f33044d],0xe8
  413010:	jecxz  0x413053
  413012:	ss stc 
  413014:	repnz mov eax,DWORD PTR [edx+0x1]
  413018:	adc    eax,0x41f9f898
  41301d:	bound  esp,QWORD PTR [edx+0x7f]
  413020:	sub    eax,0x468214dd
  413025:	inc    ebp
  413026:	pop    edi
  413027:	(bad)  
  413028:	pop    ss
  413029:	in     al,0x76
  41302b:	sub    ebp,DWORD PTR [ebx]
  41302d:	push   eax
  41302e:	push   esp
  41302f:	aas    
  413030:	push   esi
  413031:	add    al,0xd0
  413033:	or     al,BYTE PTR [edx+0x2a]
  413036:	pop    edi
  413037:	sub    eax,DWORD PTR [esp+ebx*4]
  41303a:	cmp    edx,DWORD PTR [ecx-0x22255365]
  413040:	jns    0x412fe4
  413042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413043:	push   es
  413044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413045:	cmp    cl,ch
  413047:	neg    DWORD PTR [esi+eiz*8]
  41304a:	cld    
  41304b:	xchg   BYTE PTR [eax],ah
  41304d:	loopne 0x41308d
  41304f:	jae    0x41305e
  413051:	pop    ecx
  413052:	loop   0x412fe8
  413054:	pop    ebp
  413055:	push   ds
  413056:	inc    esp
  413057:	mov    esp,0x71b03445
  41305c:	pushf  
  41305d:	add    dh,bl
  41305f:	std    
  413060:	and    eax,ebx
  413062:	aas    
  413063:	pusha  
  413064:	test   al,0x7f
  413066:	int    0xdb
  413068:	test   DWORD PTR [ebp*2-0xdf4cb79],eax
  41306f:	dec    edi
  413070:	scas   eax,DWORD PTR es:[edi]
  413071:	push   edx
  413072:	push   esp
  413073:	sub    edi,edi
  413075:	jbe    0x4130e0
  413077:	loop   0x4130f2
  413079:	cdq    
  41307a:	sub    eax,0x578f4776
  41307f:	dec    edx
  413080:	mov    al,0xd0
  413082:	and    ecx,DWORD PTR [ecx-0x54052e6b]
  413088:	js     0x413051
  41308a:	adc    bl,bl
  41308c:	sar    ebp,cl
  41308e:	repnz sub ebx,DWORD PTR [eax+0x2cf21cf3]
  413095:	call   0x27bd:0xa6f8d63d
  41309c:	or     BYTE PTR [edx+0x2e60c9c3],cl
  4130a2:	sub    BYTE PTR [eax+eax*4],ch
  4130a5:	test   al,0xca
  4130a7:	clc    
  4130a8:	stos   DWORD PTR es:[edi],eax
  4130a9:	imul   esi,DWORD PTR [esi+0x8],0xc20418f9
  4130b0:	cdq    
  4130b1:	enter  0x81da,0xdc
  4130b5:	nop
  4130b6:	outs   dx,DWORD PTR ds:[esi]
  4130b7:	or     ch,BYTE PTR [ebx-0x71]
  4130ba:	xor    ah,BYTE PTR [ecx+0x7623928f]
  4130c0:	pop    es
  4130c1:	(bad)  
  4130c2:	cs mov ch,BYTE PTR cs:[ebx-0xf]
  4130c7:	sbb    bh,BYTE PTR [esi+eiz*8+0x13]
  4130cb:	icebp  
  4130cc:	xchg   BYTE PTR [esi+edi*1+0x2c],dh
  4130d0:	jecxz  0x4130c8
  4130d2:	pop    esi
  4130d3:	cmp    al,0x99
  4130d5:	xor    bl,dh
  4130d7:	sbb    edx,eax
  4130d9:	ret    
  4130da:	or     al,0xf5
  4130dc:	xchg   ebx,eax
  4130dd:	jecxz  0x413064
  4130df:	dec    edi
  4130e0:	add    al,0x26
  4130e2:	mov    ds:0x7b7c11be,eax
  4130e7:	push   edi
  4130e8:	enter  0x24b2,0xcb
  4130ec:	mov    dh,0x51
  4130ee:	test   eax,0xe73905af
  4130f3:	retf   
  4130f4:	cmp    BYTE PTR [eax],ah
  4130f6:	xor    bl,al
  4130f8:	push   ss
  4130f9:	(bad)  [eax-0x64]
  4130fc:	jb     0x413167
  4130fe:	gs aaa 
  413100:	dec    edx
  413101:	xchg   ecx,eax
  413102:	popa   
  413103:	iret   
  413104:	lahf   
  413105:	cmp    DWORD PTR ds:0x1ee3504d,0xffffff93
  41310c:	pop    ss
  41310d:	xchg   edi,eax
  41310e:	(bad)  
  41310f:	fbld   TBYTE PTR [edx]
  413111:	or     eax,0xc82bcbde
  413116:	clc    
  413117:	push   ds
  413118:	xchg   DWORD PTR [ebp+ebx*4-0xf7033],eax
  41311f:	iret   
  413120:	mov    al,ds:0xe6601b92
  413125:	retf   0xbdc0
  413128:	pop    esi
  413129:	cmp    bl,dh
  41312b:	aaa    
  41312c:	fdivr  DWORD PTR [edx+edx*4-0x6d320c8d]
  413133:	popa   
  413134:	lods   al,BYTE PTR ds:[esi]
  413135:	mov    dh,BYTE PTR [ecx-0x32]
  413138:	fnstsw WORD PTR [esi-0x62]
  41313b:	mov    bh,BYTE PTR [esi]
  41313d:	nop
  41313e:	pop    edx
  41313f:	mov    ah,0x11
  413141:	jb     0x4130cf
  413143:	or     bl,bl
  413145:	sbb    edx,ebp
  413147:	sub    eax,0x3c020a96
  41314c:	xor    eax,0x4544646a
  413151:	outs   dx,DWORD PTR ds:[esi]
  413152:	mov    DWORD PTR [esi],esi
  413154:	push   ds
  413155:	xchg   DWORD PTR [ebx+ebx*2],ebx
  413158:	or     al,0x90
  41315a:	adc    eax,0x15e916da
  41315f:	cld    
  413160:	sti    
  413161:	imul   esi,DWORD PTR [ecx-0x12],0xc1d925bf
  413168:	sub    ebp,DWORD PTR [edi-0x57]
  41316b:	xor    BYTE PTR [edx-0x4c],0x65
  41316f:	xchg   edi,eax
  413170:	ja     0x4131d7
  413172:	pop    eax
  413173:	fild   QWORD PTR [esi+ebx*1]
  413176:	aas    
  413177:	mov    ds:0x7c21ddad,eax
  41317c:	push   ecx
  41317d:	mov    ebp,0xa70821d8
  413182:	repz mov edx,0x7967b9dc
  413188:	add    ecx,DWORD PTR [ecx-0x53efc867]
  41318e:	cmc    
  41318f:	lea    eax,[eax+ecx*1+0x58]
  413193:	fldcw  WORD PTR [edi-0x63af61ec]
  413199:	(bad)  
  41319a:	icebp  
  41319b:	lds    edx,FWORD PTR [esi]
  41319d:	push   ecx
  41319e:	pop    ss
  41319f:	pop    ss
  4131a0:	shr    BYTE PTR [edx-0x1bf5a0f8],cl
  4131a6:	pop    eax
  4131a7:	jo     0x413222
  4131a9:	sub    al,0xbc
  4131ab:	das    
  4131ac:	int3   
  4131ad:	shl    BYTE PTR [ebp-0x563f3855],1
  4131b3:	dec    esi
  4131b4:	mov    edx,DWORD PTR [eax+0x986be26]
  4131ba:	retf   
  4131bb:	aad    0x72
  4131bd:	jns    0x41320a
  4131bf:	xor    ebp,eax
  4131c1:	cs hlt 
  4131c3:	btc    DWORD PTR [esi+0x7abbc5b1],ebp
  4131ca:	pop    ebx
  4131cb:	imul   esp,ebx,0xaddf9330
  4131d1:	mov    al,ds:0xe1f05df2
  4131d6:	sub    BYTE PTR [ebx],0xc6
  4131d9:	syscall 
  4131db:	xor    al,0x96
  4131dd:	int    0xc3
  4131df:	ss popf 
  4131e1:	aaa    
  4131e2:	lods   eax,DWORD PTR ds:[esi]
  4131e3:	or     edi,DWORD PTR ds:0xcafd832c
  4131e9:	xchg   ebp,eax
  4131ea:	jno    0x41324b
  4131ec:	xchg   ebx,eax
  4131ed:	push   es
  4131ee:	outs   dx,BYTE PTR ds:[esi]
  4131ef:	add    BYTE PTR [esi+ecx*8-0x5],cl
  4131f3:	add    al,0x99
  4131f5:	pop    edi
  4131f6:	jns    0x413210
  4131f8:	xchg   ebp,eax
  4131f9:	xor    al,0x40
  4131fb:	xchg   edi,eax
  4131fc:	push   ecx
  4131fd:	jecxz  0x413270
  4131ff:	sbb    ebx,DWORD PTR ds:0xebcfa9bc
  413205:	(bad)  
  413206:	stc    
  413207:	push   ebp
  413208:	sub    eax,0x7a5c6b1d
  41320d:	cdq    
  41320e:	out    dx,al
  41320f:	and    eax,0x87b0e9d3
  413214:	mov    esi,0x643d5232
  413219:	mov    ds:0x23fd8c3e,eax
  41321e:	in     al,dx
  41321f:	mov    edx,0xb11f2f70
  413224:	ret    0x7450
  413227:	xchg   ebx,eax
  413228:	pop    esp
  413229:	jnp    0x413205
  41322b:	inc    edi
  41322c:	cmp    BYTE PTR [eax+ebp*4],al
  41322f:	mov    cl,0x8a
  413231:	stos   BYTE PTR es:[edi],al
  413232:	push   esp
  413233:	gs add ch,al
  413236:	add    eax,0x7b8eb21c
  41323b:	adc    eax,0x49ea71ce
  413240:	or     dl,BYTE PTR [ecx]
  413242:	js     0x413278
  413244:	fisub  WORD PTR [ebx-0x4fcd51c2]
  41324a:	fwait
  41324b:	ss scas eax,DWORD PTR es:[edi]
  41324d:	push   ecx
  41324e:	jl     0x4131fa
  413250:	and    DWORD PTR [edx-0xd],edi
  413253:	arpl   WORD PTR [ecx],bx
  413255:	int3   
  413256:	frstor [ebp+0x362d32e1]
  41325c:	imul   eax,DWORD PTR [ebp+0x45],0xc5893d0a
  413263:	mov    dl,dh
  413265:	jns    0x4131eb
  413267:	jns    0x413220
  413269:	pop    esi
  41326a:	frndint 
  41326c:	jmp    0x413289
  41326e:	push   esp
  41326f:	ja     0x41329c
  413271:	retf   0x22de
  413274:	inc    DWORD PTR [ebx-0x68bb9b3d]
  41327a:	sub    BYTE PTR [ecx+edx*4+0x10],0x87
  41327f:	pop    es
  413280:	mov    edx,0xeffffe9c
  413285:	push   esp
  413286:	mov    ds:0xd58900c7,eax
  41328b:	pop    ebx
  41328c:	adc    dl,BYTE PTR [edi+0x14f8e182]
  413292:	cmc    
  413293:	mov    al,0x24
  413295:	stc    
  413296:	out    dx,eax
  413297:	mov    bl,bh
  413299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41329a:	sub    esi,DWORD PTR [edi-0x51]
  41329d:	data16 (bad) 
  41329f:	out    0xf5,eax
  4132a1:	stc    
  4132a2:	xchg   DWORD PTR [ebp+0x7ff7aa6],edi
  4132a8:	pop    edi
  4132a9:	sar    BYTE PTR [eax+0x43d87010],1
  4132af:	jns    0x413295
  4132b1:	jle    0x4132c5
  4132b3:	call   0xd29f3f88
  4132b8:	hlt    
  4132b9:	div    BYTE PTR [ecx*1-0x1ac44f98]
  4132c0:	clc    
  4132c1:	mov    al,ds:0x24d97df8
  4132c6:	or     al,0x60
  4132c8:	or     BYTE PTR [eax],cl
  4132ca:	push   ebp
  4132cb:	ret    0x4c63
  4132ce:	popf   
  4132cf:	(bad)  
  4132d0:	xlat   BYTE PTR ds:[ebx]
  4132d1:	push   0x8fc2a9ea
  4132d6:	mov    dl,0xac
  4132d8:	and    al,BYTE PTR [ebp-0x60d7b4e]
  4132de:	jb     0x41328e
  4132e0:	xor    DWORD PTR [ebx-0x1b],eax
  4132e3:	aad    0xb6
  4132e5:	int    0xed
  4132e7:	or     esi,ecx
  4132e9:	fiadd  WORD PTR [edx]
  4132eb:	xchg   ecx,eax
  4132ec:	jo     0x4132cf
  4132ee:	daa    
  4132ef:	xchg   edx,eax
  4132f0:	fcmovnbe st,st(0)
  4132f2:	adc    dh,BYTE PTR [esp+eax*8+0x642568c8]
  4132f9:	scas   al,BYTE PTR es:[edi]
  4132fa:	mov    bh,0x22
  4132fc:	sub    al,BYTE PTR [edx+0xf]
  4132ff:	addr16 mov ch,0xd7
  413302:	je     0x41329a
  413304:	push   edi
  413305:	adc    al,0x4
  413307:	push   edx
  413308:	fwait
  413309:	and    al,0xd8
  41330b:	xor    eax,0xe47edd22
  413310:	mov    WORD PTR [ebx+0x19d8e7c6],?
  413316:	lods   eax,DWORD PTR ds:[esi]
  413317:	xlat   BYTE PTR ds:[ebx]
  413318:	xor    cl,BYTE PTR [edx+ecx*4-0x4eb939ad]
  41331f:	adc    esp,DWORD PTR [ebx+0x2dce63f]
  413325:	dec    ecx
  413326:	mov    BYTE PTR [ecx-0x61ab5e8f],bh
  41332c:	enter  0x39fd,0x3f
  413330:	ror    dh,1
  413332:	dec    esi
  413333:	jo     0x413321
  413335:	leave  
  413336:	imul   esp,DWORD PTR [edi+0x5],0xc9a497f3
  41333d:	xchg   ebp,eax
  41333e:	fbld   TBYTE PTR [ebp-0x21]
  413341:	popa   
  413342:	bound  esi,QWORD PTR [edi]
  413344:	dec    ecx
  413345:	push   ds
  413346:	stos   BYTE PTR es:[edi],al
  413347:	jge    0x413304
  413349:	nop
  41334a:	mov    ds:0xde1dc1ad,al
  41334f:	lahf   
  413350:	sti    
  413351:	pop    ebp
  413352:	aam    0x79
  413354:	fcompp 
  413356:	pop    edi
  413357:	jnp    0x41335b
  413359:	rcl    BYTE PTR [edi],cl
  41335b:	icebp  
  41335c:	sbb    ch,ah
  41335e:	outs   dx,BYTE PTR ds:[esi]
  41335f:	iret   
  413360:	mov    esi,0x8d7069c8
  413365:	push   ss
  413366:	daa    
  413367:	shl    BYTE PTR [ebp+0xd7b1d52],1
  41336d:	mov    fs,WORD PTR [edx-0x43a116e2]
  413373:	sbb    eax,0x7b0f17a0
  413378:	cs stos DWORD PTR es:[edi],eax
  41337a:	jne    0x413340
  41337c:	jl     0x413308
  41337e:	pop    esp
  41337f:	in     al,dx
  413380:	jo     0x41338b
  413382:	mov    BYTE PTR fs:[ebx-0xb3055d3],dh
  413389:	sbb    BYTE PTR [edi+0x45],al
  41338c:	mov    BYTE PTR [ecx],cl
  41338e:	jge    0x4133cf
  413390:	icebp  
  413391:	add    ebx,edx
  413393:	fcmovnu st,st(5)
  413395:	popf   
  413396:	xor    BYTE PTR [edx+0x39d3d7d9],0x70
  41339d:	and    al,0x2d
  41339f:	xchg   edi,eax
  4133a0:	inc    edi
  4133a1:	int3   
  4133a2:	mov    al,0xe0
  4133a4:	aam    0x8d
  4133a6:	xchg   ecx,eax
  4133a7:	retf   0xed63
  4133aa:	or     eax,0x725c5608
  4133af:	(bad)  
  4133b0:	fld    DWORD PTR [edx-0x6d]
  4133b3:	mov    ebp,0x6b08e074
  4133b8:	mov    al,ds:0xba24a0ec
  4133bd:	adc    ah,cl
  4133bf:	sbb    eax,ebp
  4133c1:	mov    cl,0xd
  4133c3:	outs   dx,BYTE PTR ds:[esi]
  4133c4:	push   es
  4133c5:	dec    ebx
  4133c6:	lahf   
  4133c7:	xchg   esi,esi
  4133c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ca:	fimul  DWORD PTR [ecx-0x67]
  4133cd:	cmp    cl,dh
  4133cf:	add    al,0x65
  4133d1:	mov    edi,0x75f782dc
  4133d6:	jne    0x413407
  4133d8:	cmp    al,0x9a
  4133da:	adc    al,0xe8
  4133dc:	mov    eax,ds:0xc5538afc
  4133e1:	adc    edx,DWORD PTR [edi]
  4133e3:	jg     0x4133bf
  4133e5:	push   0x44c665d2
  4133ea:	dec    esi
  4133eb:	retf   
  4133ec:	(bad)  
  4133ed:	test   DWORD PTR [edi+0x77],ecx
  4133f0:	xchg   BYTE PTR ds:[edi+0xfcae6db],cl
  4133f7:	dec    esi
  4133f8:	cmp    bl,BYTE PTR [esi]
  4133fa:	jmp    0xd9ec:0x497b65e
  413401:	mov    esi,0xcfed4120
  413406:	test   eax,0x2b9e6db1
  41340b:	adc    eax,0x4ccff3be
  413410:	mov    cl,0x10
  413412:	int3   
  413413:	jb     0x413472
  413415:	mov    BYTE PTR [eax-0x18cbf29c],bl
  41341b:	add    BYTE PTR [edi-0x47],0xde
  41341f:	mov    dh,0xe5
  413421:	ins    DWORD PTR es:[edi],dx
  413422:	mov    ebx,0xaf18ff60
  413427:	shr    BYTE PTR [esi+ecx*1+0x19749a28],1
  41342e:	xchg   ebx,eax
  41342f:	arpl   WORD PTR [ebp+0x55d04ea4],si
  413435:	fadd   st,st(7)
  413437:	inc    ecx
  413438:	mov    dl,0x16
  41343a:	inc    esp
  41343b:	cmp    eax,0xe491bb48
  413440:	push   cs
  413441:	add    DWORD PTR [ecx-0x7],esp
  413444:	aas    
  413445:	and    edi,DWORD PTR [esi-0x2f]
  413448:	iret   
  413449:	int3   
  41344a:	sahf   
  41344b:	ds or  dh,ah
  41344e:	jbe    0x4134b9
  413450:	in     al,0xbd
  413452:	cmp    BYTE PTR [ebx-0x13],al
  413455:	dec    eax
  413456:	dec    esi
  413457:	adc    al,0xb2
  413459:	cmp    al,0x48
  41345b:	fist   WORD PTR [ecx+0x314a0598]
  413461:	cmp    DWORD PTR [edi+0x10898a55],ebp
  413467:	out    0xe5,eax
  413469:	xor    ebp,eax
  41346b:	es jg  0x413487
  41346e:	gs jl  0x413416
  413471:	mov    dl,0xc4
  413473:	retf   0x855
  413476:	loopne 0x413405
  413478:	int    0xb2
  41347a:	pop    es
  41347b:	xlat   BYTE PTR ds:[ebx]
  41347c:	and    al,0x1e
  41347e:	std    
  41347f:	cmp    DWORD PTR [ebp+0x2a],esp
  413482:	outs   dx,BYTE PTR ds:[esi]
  413483:	dec    ecx
  413484:	jno    0x4134ef
  413486:	rol    DWORD PTR [edx+0x4f],0xcc
  41348a:	stos   BYTE PTR es:[edi],al
  41348b:	cld    
  41348c:	repnz int 0x8
  41348f:	and    eax,0x60a5652b
  413494:	lahf   
  413495:	sbb    ah,BYTE PTR [ecx+eax*8]
  413498:	call   0x4bd839e5
  41349d:	xor    BYTE PTR [ecx+0x34],al
  4134a0:	aaa    
  4134a1:	pop    ebp
  4134a2:	jg     0xaf791973
  4134a8:	mov    eax,0xda7f1f66
  4134ad:	mov    esp,0x86c7cae2
  4134b2:	rcr    BYTE PTR [edi-0x7ec34da7],cl
  4134b8:	mov    ds:0x9af2581a,al
  4134bd:	adc    edi,eax
  4134bf:	into   
  4134c0:	jns    0x41352e
  4134c2:	mov    esi,0xdf162ac1
  4134c7:	xor    BYTE PTR [edx],0x40
  4134ca:	sbb    eax,0xb2961323
  4134cf:	aam    0xba
  4134d1:	push   ecx
  4134d2:	dec    eax
  4134d3:	sbb    al,0xf7
  4134d5:	xchg   edi,eax
  4134d6:	inc    edi
  4134d7:	add    eax,0xe54e12e6
  4134dc:	ja     0x413490
  4134de:	mov    ebx,0x952b8c16
  4134e3:	inc    edi
  4134e4:	dec    edx
  4134e5:	xor    esp,DWORD PTR [eax*2-0x79092cb3]
  4134ec:	pop    esp
  4134ed:	jb     0x413537
  4134ef:	fs iret 
  4134f1:	fld    QWORD PTR [ebx+0x39]
  4134f4:	sbb    DWORD PTR [eax-0xaa5edb4],ecx
  4134fa:	xchg   ecx,eax
  4134fb:	shl    DWORD PTR [ecx+0x7a6e0b4],1
  413501:	out    0x93,al
  413503:	mov    ebx,0x5cebb498
  413508:	(bad)  
  413509:	je     0x413490
  41350b:	jg     0x41349c
  41350d:	push   cs
  41350e:	push   edi
  41350f:	mov    ecx,0xa4f22d6a
  413514:	jnp    0x413523
  413516:	and    edi,0xffffffc6
  413519:	div    BYTE PTR ds:0xafa96a52
  41351f:	jl     0x4134c5
  413521:	and    eax,0xe08fd408
  413526:	push   ss
  413527:	bound  ecx,QWORD PTR [edx]
  413529:	mov    ds:0xdc5479df,eax
  41352e:	into   
  41352f:	mov    bh,0xbd
  413531:	(bad)  
  413532:	mov    ds:0x7c4e7623,eax
  413537:	(bad)  
  413538:	xchg   esp,eax
  413539:	adc    DWORD PTR [ebx*4-0x7bd9830e],ecx
  413540:	pop    es
  413541:	pusha  
  413542:	inc    esp
  413543:	xor    al,0x12
  413545:	jbe    0x4135c3
  413547:	cs (bad) 
  413549:	dec    edi
  41354a:	push   esi
  41354b:	hlt    
  41354c:	adc    eax,0x30853ea3
  413551:	aam    0x9
  413553:	hlt    
  413554:	rcr    BYTE PTR [ecx],cl
  413556:	stc    
  413557:	inc    eax
  413558:	mov    eax,DWORD PTR [esi]
  41355a:	daa    
  41355b:	jl     0x41359f
  41355d:	xor    al,0x7
  41355f:	rol    BYTE PTR [ebx-0x60],1
  413562:	lds    ebx,FWORD PTR [ecx-0x6a7fb0b]
  413568:	aam    0x8b
  41356a:	scas   al,BYTE PTR es:[edi]
  41356b:	mov    al,0x8d
  41356d:	cmp    bh,BYTE PTR [ebp+0x4b16c8c0]
  413573:	shl    BYTE PTR ds:0x9010c74d,cl
  413579:	cli    
  41357a:	pop    ds
  41357b:	xor    ecx,DWORD PTR [ebx-0x214c9349]
  413581:	sahf   
  413582:	inc    ecx
  413583:	xchg   ebp,eax
  413584:	mov    ah,0x2e
  413586:	xor    BYTE PTR [edi],ch
  413588:	repz xchg edx,eax
  41358a:	inc    edx
  41358b:	mov    BYTE PTR [ecx],dl
  41358d:	jb     0x413563
  41358f:	or     DWORD PTR [edx-0x26394831],ebp
  413595:	je     0x4135a5
  413597:	adc    DWORD PTR [edx+0x1acc9e0e],ebx
  41359d:	xchg   ebx,eax
  41359e:	mov    ah,0x97
  4135a0:	mov    esp,0x9781d602
  4135a5:	(bad)  
  4135a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135a7:	shl    DWORD PTR [ecx-0x31],cl
  4135aa:	add    eax,0x2ef2c8d5
  4135af:	js     0x41356f
  4135b1:	scas   al,BYTE PTR es:[edi]
  4135b2:	push   ebx
  4135b3:	xchg   ebp,eax
  4135b4:	rcr    BYTE PTR [edi-0x10d460f5],0xb
  4135bb:	pusha  
  4135bc:	pop    eax
  4135bd:	lock cs daa 
  4135c0:	push   edx
  4135c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135c2:	js     0x4135e1
  4135c4:	xchg   ebx,eax
  4135c5:	xor    ch,dl
  4135c7:	xor    al,0xec
  4135c9:	jno    0x4135b7
  4135cb:	push   ebx
  4135cc:	ds sub eax,0x861008c2
  4135d2:	push   ss
  4135d3:	jnp    0x4135b0
  4135d5:	stc    
  4135d6:	clc    
  4135d7:	mov    dh,0x33
  4135d9:	out    0xe2,al
  4135db:	arpl   bx,cx
  4135dd:	mov    ebx,0xcb5eab31
  4135e2:	mov    edx,0x4882d9ff
  4135e7:	and    edx,DWORD PTR [edx-0x71]
  4135ea:	add    al,0xdd
  4135ec:	cli    
  4135ed:	ss push ds
  4135ef:	dec    eax
  4135f0:	mov    al,0xac
  4135f2:	pop    ebp
  4135f3:	stos   DWORD PTR es:[edi],eax
  4135f4:	xor    ah,BYTE PTR [ecx]
  4135f6:	inc    edi
  4135f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135f8:	ret    
  4135f9:	shl    esp,1
  4135fb:	jno    0x413624
  4135fd:	xchg   ebp,eax
  4135fe:	inc    esp
  4135ff:	test   dh,0x85
  413602:	add    bl,al
  413604:	out    dx,al
  413605:	jno    0x4135c7
  413607:	add    bl,BYTE PTR [edx+0x28e8c482]
  41360d:	call   0x679:0x48e87858
  413614:	cdq    
  413615:	pop    ebx
  413616:	pop    edx
  413617:	sub    ebx,DWORD PTR [ecx+ebx*2+0x112e5e1]
  41361e:	(bad)  
  413620:	sbb    bh,BYTE PTR [ebp-0x49]
  413623:	push   edx
  413624:	add    BYTE PTR [eax-0xda05983],dl
  41362a:	popa   
  41362b:	lds    esi,FWORD PTR [ebx-0x12a0a117]
  413631:	mov    edx,0x44dd20d1
  413637:	push   ebx
  413638:	(bad)  
  413639:	sbb    edi,ecx
  41363b:	push   esi
  41363c:	jecxz  0x4135fc
  41363e:	xchg   DWORD PTR [edx+0x15ba596f],ecx
  413644:	call   0x74a6:0xe82139b7
  41364b:	out    dx,al
  41364c:	sti    
  41364d:	pushf  
  41364e:	in     eax,dx
  41364f:	mov    edx,DWORD PTR [edi-0x49fb09bf]
  413655:	mov    bl,0x6a
  413657:	mov    eax,ds:0x99541a39
  41365c:	iret   
  41365d:	fwait
  41365e:	xchg   ebp,eax
  41365f:	mov    al,ds:0x2187a24e
  413664:	mov    ds:0x87ff353e,eax
  413669:	in     eax,dx
  41366a:	add    al,0x76
  41366c:	jne    0x4136e6
  41366e:	sub    bh,bh
  413670:	push   ds
  413671:	pop    ebx
  413672:	in     al,dx
  413673:	mov    edi,0x51ce986d
  413679:	pop    esp
  41367a:	xchg   edi,eax
  41367b:	lods   al,BYTE PTR ds:[esi]
  41367c:	mov    eax,0xef123b3b
  413681:	repz cmp edx,edx
  413684:	cmp    ah,BYTE PTR [edi]
  413686:	dec    edi
  413687:	popa   
  413688:	ins    BYTE PTR es:[edi],dx
  413689:	fwait
  41368a:	lds    edx,FWORD PTR [edi-0xebf0996]
  413690:	data16 rcr BYTE PTR [eax+0x230352b0],0x69
  413698:	or     eax,0x211152ec
  41369d:	xchg   edi,eax
  41369e:	fdivrp st(7),st
  4136a0:	mov    al,0xe7
  4136a2:	mov    ds:0x65ccd7c2,al
  4136a7:	sahf   
  4136a8:	ror    BYTE PTR [esi-0x46e5ba7e],0x75
  4136af:	mov    ?,WORD PTR [esi+0x150c581]
  4136b5:	out    0xdd,al
  4136b7:	into   
  4136b8:	jle    0x4136b5
  4136ba:	xchg   esi,eax
  4136bb:	dec    esi
  4136bc:	and    BYTE PTR [ebx],dl
  4136be:	(bad)  
  4136bf:	mov    bh,0x9c
  4136c1:	rcl    BYTE PTR [esi+0x68b78880],1
  4136c7:	sbb    esp,DWORD PTR [ecx]
  4136c9:	test   esp,ecx
  4136cb:	sub    DWORD PTR [edi+edi*2-0x435c68b1],eax
  4136d2:	mov    ebp,0x51bffadc
  4136d7:	or     DWORD PTR [ebp-0x6c0e256],0x13
  4136de:	scas   eax,DWORD PTR es:[edi]
  4136df:	adc    dh,BYTE PTR [ebp+0xf9ce51d]
  4136e5:	js     0x4136ff
  4136e7:	mov    ch,0x8f
  4136e9:	push   0x91c3ae97
  4136ee:	sbb    ecx,edi
  4136f0:	in     al,dx
  4136f1:	mov    edx,0xe633125e
  4136f6:	and    bl,BYTE PTR [ebp-0x71]
  4136f9:	jle    0x413768
  4136fb:	push   ebx
  4136fc:	ins    BYTE PTR es:[edi],dx
  4136fd:	jb     0x41371f
  4136ff:	push   esp
  413700:	sbb    DWORD PTR [ecx-0x506d946f],edi
  413706:	jle    0x41368e
  413708:	mov    dh,0x6
  41370a:	sar    BYTE PTR [eax+edi*1-0x5a],cl
  41370e:	sub    al,0x94
  413710:	fstp   DWORD PTR [ebx-0x291910d7]
  413716:	les    ebp,FWORD PTR [eax-0x2d8b48e9]
  41371c:	add    eax,0x8c3657d3
  413721:	cmc    
  413722:	(bad)  
  413723:	icebp  
  413724:	pop    ebp
  413725:	add    ecx,DWORD PTR [eax+0x2c]
  413728:	dec    ebp
  413729:	cmp    BYTE PTR [edx],0xe6
  41372c:	in     eax,dx
  41372d:	mov    bh,0x82
  41372f:	pop    edi
  413730:	push   ds
  413731:	out    0xed,al
  413733:	pop    esi
  413734:	repnz nop
  413736:	inc    esp
  413737:	adc    al,0x58
  413739:	rcl    BYTE PTR [esi-0x43e01eb9],cl
  41373f:	retf   0x5efc
  413742:	push   ecx
  413743:	adc    eax,0x56303429
  413748:	fmul   DWORD PTR [esi+0x5]
  41374b:	xlat   BYTE PTR ds:[ebx]
  41374c:	jle    0x4137bc
  41374e:	add    BYTE PTR ds:0xe3b991a5,dl
  413754:	sub    cl,dl
  413756:	data16 icebp 
  413758:	call   0x7577cb3f
  41375d:	cmc    
  41375e:	sbb    BYTE PTR [esi-0x62981f03],bl
  413764:	jnp    0x413722
  413766:	outs   dx,DWORD PTR ds:[esi]
  413767:	stos   DWORD PTR es:[edi],eax
  413768:	ret    
  413769:	fistp  WORD PTR [ebx]
  41376b:	fimul  DWORD PTR [edi]
  41376d:	jns    0x41375e
  41376f:	xor    DWORD PTR [ecx+0x24],ecx
  413772:	das    
  413773:	gs push es
  413775:	fstp   TBYTE PTR [ecx+eax*4+0x1e58d85b]
  41377c:	pop    eax
  41377d:	(bad)  
  41377e:	iret   
  41377f:	call   0x1a9b4f1
  413784:	ds push esp
  413786:	push   ss
  413787:	les    esp,FWORD PTR [edx+0x15c06202]
  41378d:	outs   dx,DWORD PTR ds:[esi]
  41378e:	add    cl,BYTE PTR [edx-0x73fe3d38]
  413794:	push   esi
  413795:	(bad)  
  413796:	or     DWORD PTR [ebp-0x75],edi
  413799:	mov    WORD PTR [ecx+eiz*1],?
  41379c:	bts    ebx,edi
  41379f:	int3   
  4137a0:	sub    esi,0x7e
  4137a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137a4:	cli    
  4137a5:	mov    ch,0x7c
  4137a7:	jle    0x4137d0
  4137a9:	ss addr16 loope 0x4137e3
  4137ad:	in     eax,dx
  4137ae:	cmp    esi,DWORD PTR [edx]
  4137b0:	fincstp 
  4137b2:	mov    ebp,0xb587ac2d
  4137b7:	out    dx,al
  4137b8:	fs push ss
  4137ba:	mov    WORD PTR [esi-0x41a5d5],?
  4137c0:	mov    ah,0x1f
  4137c2:	and    al,0xc1
  4137c4:	jbe    0x41377d
  4137c6:	inc    edi
  4137c7:	mov    al,ds:0xc37b347d
  4137cc:	call   0x314fbaa7
  4137d1:	xchg   DWORD PTR [eax-0x1bd7da42],edi
  4137d7:	mov    cl,0x34
  4137d9:	add    al,ch
  4137db:	add    esp,DWORD PTR [ebx+ecx*2-0x2de94ed5]
  4137e2:	mov    dh,0xb1
  4137e4:	mov    bl,0x9e
  4137e6:	test   al,0xdb
  4137e8:	shl    dh,0x5c
  4137eb:	xchg   ebp,eax
  4137ec:	mov    ebx,0xfad8ac44
  4137f1:	push   ecx
  4137f2:	gs ins DWORD PTR es:[edi],dx
  4137f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137f5:	test   ecx,esp
  4137f7:	cmp    BYTE PTR [esi],dl
  4137f9:	lds    edx,FWORD PTR [ebx-0x23d219b0]
  4137ff:	jb     0x413805
  413801:	and    BYTE PTR [eax-0x2a9fd604],ah
  413807:	mul    BYTE PTR [edi-0x3399c442]
  41380d:	push   ss
  41380e:	retf   0x4639
  413811:	or     BYTE PTR [ecx+0x6d7b79c5],ch
  413817:	cdq    
  413818:	add    eax,0x9b06c683
  41381d:	dec    ecx
  41381e:	sub    eax,0xfa5d26f1
  413823:	xor    al,0x8a
  413825:	lods   eax,DWORD PTR ds:[esi]
  413826:	out    0x6d,al
  413828:	sbb    BYTE PTR [ebx+0xc],cl
  41382b:	shl    DWORD PTR [edx+edx*4],1
  41382e:	jmp    0xfec123d3
  413833:	mov    eax,ds:0x6cdb09a8
  413838:	mov    WORD PTR [edi+0x4d37cd3d],?
  41383e:	jne    0x41386b
  413840:	mov    al,0x6d
  413842:	lea    ebp,[edi+0x76dc3667]
  413848:	in     eax,0x2c
  41384a:	pop    ds
  41384b:	retf   0x9f6a
  41384e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41384f:	cmp    eax,0xe4afe369
  413854:	dec    esp
  413855:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413857:	pop    ss
  413858:	js     0x413830
  41385a:	sbb    al,0xf3
  41385c:	popf   
  41385d:	xchg   edi,eax
  41385e:	or     eax,0x3154e3f1
  413863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413864:	mov    al,0xf6
  413866:	pop    esp
  413867:	cmp    al,0x9
  413869:	inc    eax
  41386a:	repz out 0x80,eax
  41386d:	push   es
  41386e:	xchg   esi,eax
  41386f:	lock inc edx
  413871:	loop   0x413893
  413873:	push   cs
  413874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413875:	scas   eax,DWORD PTR es:[edi]
  413876:	and    bh,BYTE PTR [eax]
  413878:	js     0x4138a7
  41387a:	iret   
  41387b:	in     eax,dx
  41387c:	mov    DWORD PTR ds:0xa50383f4,eax
  413882:	mov    ah,0x2e
  413884:	pop    edi
  413885:	aaa    
  413886:	inc    ebx
  413887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413889:	push   ecx
  41388a:	dec    esp
  41388b:	test   eax,0xbddee31f
  413890:	cmc    
  413891:	pop    edx
  413892:	cli    
  413893:	lods   al,BYTE PTR ds:[esi]
  413894:	ror    DWORD PTR [esi-0xd],cl
  413897:	mov    ah,0x2d
  413899:	pop    ss
  41389a:	iret   
  41389b:	mov    edx,0x37f5fb65
  4138a0:	in     al,0x12
  4138a2:	mov    BYTE PTR [edi+0x60ca439c],ch
  4138a8:	cmc    
  4138a9:	in     al,0x64
  4138ab:	push   ebp
  4138ac:	fisub  WORD PTR [ecx-0x14]
  4138af:	dec    edx
  4138b0:	add    DWORD PTR [ebp-0x7b],edi
  4138b3:	xchg   DWORD PTR [edx+0x3b],edi
  4138b6:	sub    DWORD PTR ds:0xb81e944e,esp
  4138bc:	mov    bh,0xd1
  4138be:	aaa    
  4138bf:	xchg   esp,eax
  4138c0:	mov    ebp,0xf27e9c54
  4138c5:	adc    al,0xb6
  4138c7:	xchg   esi,eax
  4138c8:	inc    esp
  4138c9:	imul   edi,DWORD PTR [esi-0x5de7c41e],0xf0b357b1
  4138d3:	dec    eax
  4138d4:	fbstp  TBYTE PTR [edi+0x330099e0]
  4138da:	(bad)  
  4138dc:	cli    
  4138dd:	pop    es
  4138de:	fist   WORD PTR [eax+0x27]
  4138e1:	push   edx
  4138e2:	add    al,0x88
  4138e4:	and    eax,DWORD PTR [ecx]
  4138e6:	xor    al,0x5e
  4138e8:	cmp    bh,al
  4138ea:	loope  0x41394a
  4138ec:	arpl   si,si
  4138ee:	add    bl,BYTE PTR [ebx+0x5b]
  4138f1:	ret    0x2389
  4138f4:	(bad)  
  4138f5:	cmp    eax,0xbb7220e1
  4138fa:	or     BYTE PTR [edi+ecx*8],dh
  4138fd:	add    DWORD PTR [esi+0x43],esi
  413900:	pop    ds
  413901:	das    
  413902:	(bad)  
  413903:	or     edi,edi
  413905:	mov    eax,ds:0x419a1f1e
  41390a:	(bad)  
  41390b:	jne    0x413954
  41390d:	test   BYTE PTR [eax-0x5],0x1c
  413911:	or     DWORD PTR ds:0x963e1996,ebp
  413917:	lds    edx,FWORD PTR es:[edi+0x452204c]
  41391e:	ds adc al,0x72
  413921:	pop    ecx
  413922:	inc    esi
  413923:	xchg   edi,eax
  413924:	imul   esp,DWORD PTR [esi-0x1e],0xffffff9b
  413928:	inc    ebp
  413929:	push   es
  41392a:	sti    
  41392b:	icebp  
  41392c:	adc    BYTE PTR [ebx],dl
  41392e:	push   0x3
  413930:	xchg   BYTE PTR [ebx+edi*1-0x1b0c0314],dh
  413937:	and    ecx,0x14
  41393a:	inc    ecx
  41393b:	push   0x7c
  41393d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41393e:	push   ecx
  41393f:	sbb    al,BYTE PTR [esi+esi*1+0x5c33694e]
  413946:	(bad)
  413949:	pop    edi
  41394a:	pop    ebx
  41394b:	add    ecx,DWORD PTR [eax+0x1edca346]
  413951:	cwde   
  413952:	and    BYTE PTR [ebp-0x6e],ch
  413955:	and    al,0xa5
  413957:	adc    ch,dl
  413959:	or     esi,esp
  41395b:	mov    edi,0xac5a1aa
  413960:	cmp    cl,BYTE PTR [edi+esi*2+0x66466060]
  413967:	ret    
  413968:	or     al,0x71
  41396a:	and    al,0xd9
  41396c:	test   eax,0xeab68585
  413971:	js     0x4139e3
  413973:	in     eax,dx
  413974:	push   es
  413975:	(bad)  
  413976:	shl    BYTE PTR [ebx-0x418aa622],1
  41397c:	js     0x4139f6
  41397e:	stos   BYTE PTR es:[edi],al
  41397f:	repz lahf 
  413981:	ret    0x3d78
  413984:	cmp    dh,ah
  413986:	adc    esp,DWORD PTR [ebx]
  413988:	lea    ebp,[ecx]
  41398a:	pop    esi
  41398b:	push   ebx
  41398c:	dec    eax
  41398d:	push   es
  41398e:	clc    
  41398f:	in     al,0x22
  413991:	mov    al,0x31
  413993:	push   es
  413994:	jmp    0xe55e5fa4
  413999:	leave  
  41399a:	outs   dx,DWORD PTR ds:[esi]
  41399b:	and    al,BYTE PTR [esi+0x6841209b]
  4139a1:	mov    DWORD PTR [edi+0x42],edi
  4139a4:	jp     0x4139d7
  4139a6:	mov    edx,0xedd9bd0c
  4139ab:	mov    ecx,0xa2d54eec
  4139b0:	or     DWORD PTR [edx-0x35],0x3ac80a8e
  4139b7:	popa   
  4139b8:	mov    esi,DWORD PTR [ecx-0x3d]
  4139bb:	xor    DWORD PTR [edi+eiz*2],0xffffff98
  4139bf:	ins    BYTE PTR es:[edi],dx
  4139c0:	mov    dh,0x78
  4139c2:	test   eax,0xb237875f
  4139c7:	jnp    0x413957
  4139c9:	mov    es:0x85486206,eax
  4139cf:	aas    
  4139d0:	cmp    al,0xc1
  4139d2:	shl    DWORD PTR [edx],1
  4139d4:	fst    QWORD PTR [ecx]
  4139d6:	ins    BYTE PTR es:[edi],dx
  4139d7:	xor    dh,BYTE PTR [ebx]
  4139d9:	push   edx
  4139da:	xor    al,0x10
  4139dc:	lahf   
  4139dd:	sahf   
  4139de:	xor    esp,DWORD PTR [eax+0x35]
  4139e1:	ja     0x4139b1
  4139e3:	ja     0x4139ab
  4139e5:	and    al,0x82
  4139e7:	or     BYTE PTR [esi],ch
  4139e9:	(bad)  
  4139ea:	stos   DWORD PTR es:[edi],eax
  4139eb:	pop    esi
  4139ec:	ror    BYTE PTR [edi+edi*8],1
  4139ef:	enter  0xf39b,0x9d
  4139f3:	out    0x3e,eax
  4139f5:	imul   ebp,DWORD PTR [ebp-0x2a],0x44e44bbb
  4139fc:	pop    ss
  4139fd:	test   al,0xe
  4139ff:	jmp    0x875f:0xce49bc0
  413a06:	add    eax,0x30a1011b
  413a0b:	add    DWORD PTR [ebx-0x4d],esp
  413a0e:	sbb    DWORD PTR [eax+0x61a6b296],edx
  413a14:	cmp    eax,0x69f31dd6
  413a19:	and    eax,0x3713eb34
  413a1e:	jne    0x4139aa
  413a20:	jge    0x413a77
  413a22:	ret    
  413a23:	adc    bl,bh
  413a25:	or     edx,edi
  413a27:	push   eax
  413a28:	pop    ebx
  413a29:	or     al,0xdd
  413a2b:	out    dx,al
  413a2c:	into   
  413a2d:	jp     0x413a7a
  413a2f:	jge    0x413a13
  413a31:	dec    eax
  413a32:	pop    ds
  413a33:	jnp    0x4139d5
  413a35:	adc    dh,bl
  413a37:	adc    al,0x80
  413a39:	aam    0x1e
  413a3b:	cmp    edx,DWORD PTR [eax]
  413a3d:	mov    ebx,0x15ea13cd
  413a42:	push   cs
  413a43:	clc    
  413a44:	je     0x4139d9
  413a46:	pop    esi
  413a47:	stc    
  413a48:	jae    0x413aa1
  413a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a4b:	retf   0xe27c
  413a4e:	xchg   DWORD PTR [edx-0x24],edi
  413a51:	mov    edx,0x171058a
  413a56:	dec    ebp
  413a57:	int    0x27
  413a59:	ss aaa 
  413a5b:	sahf   
  413a5c:	adc    al,0xa9
  413a5e:	loop   0x413aa9
  413a60:	pop    ss
  413a61:	sar    BYTE PTR [edi-0x75],1
  413a64:	push   cs
  413a65:	ins    DWORD PTR es:[edi],dx
  413a66:	repz xor BYTE PTR [ebx],cl
  413a69:	xchg   DWORD PTR [ebp-0x44],eax
  413a6c:	mov    edi,0x5f0a2ed2
  413a71:	push   cs
  413a72:	jne    0x413ad7
  413a74:	cli    
  413a75:	fsubr  QWORD PTR ds:0x10f35491
  413a7b:	cld    
  413a7c:	jl     0x413af8
  413a7e:	cmp    al,0x5e
  413a80:	jg     0x413a5c
  413a82:	cdq    
  413a83:	shl    BYTE PTR [ebx+0x2b],1
  413a86:	push   ecx
  413a87:	pop    ds
  413a88:	dec    edi
  413a89:	popa   
  413a8a:	sbb    BYTE PTR [eax-0x71e19789],cl
  413a90:	loop   0x413ab2
  413a92:	call   0x38c4456b
  413a97:	jmp    0x413a54
  413a99:	push   ss
  413a9a:	int3   
  413a9b:	adc    ebx,DWORD PTR [eax+0x2ea4d4f3]
  413aa1:	(bad)  
  413aa2:	xchg   edi,eax
  413aa3:	mov    ecx,DWORD PTR [esi-0x16b497b7]
  413aa9:	loopne 0x413acc
  413aab:	mov    dh,0x73
  413aad:	pop    ebx
  413aae:	push   ds
  413aaf:	xchg   esp,eax
  413ab0:	out    dx,al
  413ab1:	fcomi  st,st(4)
  413ab3:	(bad)  
  413ab4:	sub    eax,0x8adb4516
  413ab9:	call   0xae68127a
  413abe:	xor    BYTE PTR [esi],bh
  413ac0:	sbb    al,0x6
  413ac2:	inc    eax
  413ac3:	push   eax
  413ac4:	int3   
  413ac5:	xor    ah,BYTE PTR [ecx+ecx*2+0x7e0c7518]
  413acc:	xchg   DWORD PTR [ebx+ebx*4-0x17],ebx
  413ad0:	ja     0x413ab6
  413ad2:	mov    al,0x21
  413ad4:	xor    eax,DWORD PTR ds:0xba72b866
  413ada:	aam    0xf3
  413adc:	push   0x9485656e
  413ae1:	ja     0x413a6c
  413ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae4:	inc    esi
  413ae5:	repz je 0x413af3
  413ae8:	icebp  
  413ae9:	mov    DWORD PTR [ebp+esi*2+0xf],esp
  413aed:	lock fadd QWORD PTR [si-0x18]
  413af2:	xor    ch,BYTE PTR [edx+esi*8+0x63f8deda]
  413af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413afa:	loope  0x413b5d
  413afc:	hlt    
  413afd:	idiv   BYTE PTR [eax+0x6a8d3822]
  413b03:	(bad)  
  413b04:	dec    DWORD PTR [ebp-0x10f85dbf]
  413b0a:	outs   dx,BYTE PTR ds:[esi]
  413b0b:	mov    esp,DWORD PTR [edi+edi*8-0x24]
  413b0f:	(bad)  
  413b10:	xchg   ecx,eax
  413b11:	stos   DWORD PTR es:[edi],eax
  413b12:	dec    ebp
  413b13:	mov    fs,WORD PTR [edx-0x6d]
  413b16:	cmp    edi,DWORD PTR [edx+0x2fe15bec]
  413b1c:	push   0x11
  413b1e:	sub    esp,DWORD PTR [edx+0x20cb6b58]
  413b24:	xchg   ecx,eax
  413b25:	mov    cl,0x19
  413b27:	or     eax,0x102bcfa5
  413b2c:	fsubr  QWORD PTR gs:[ebp-0x1bda5c7e]
  413b33:	int    0x6d
  413b35:	jbe    0x413bab
  413b37:	and    DWORD PTR [eax+0x6b788b8b],ecx
  413b3d:	jle    0x413b73
  413b3f:	xlat   BYTE PTR ds:[ebx]
  413b40:	loope  0x413bab
  413b42:	inc    esi
  413b43:	retf   0x98b8
  413b46:	pusha  
  413b47:	sar    edi,0x57
  413b4a:	dec    ecx
  413b4b:	test   eax,0xa009cff8
  413b50:	jmp    0x1b4ba59b
  413b55:	(bad)  
  413b56:	lods   al,BYTE PTR ds:[esi]
  413b57:	push   ecx
  413b58:	fwait
  413b59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b5a:	ds out 0x68,eax
  413b5d:	sub    al,bl
  413b5f:	sub    al,0xee
  413b61:	xor    DWORD PTR [ebx-0x18566ba8],0xffffff95
  413b68:	cld    
  413b69:	or     ecx,ecx
  413b6b:	sub    BYTE PTR [ecx+0x4919fb2b],dh
  413b71:	mov    esi,0x700059cf
  413b76:	rcl    DWORD PTR [ecx],cl
  413b78:	call   ebx
  413b7a:	cmp    eax,0xe4c7e7cf
  413b7f:	into   
  413b80:	or     al,0x64
  413b82:	repnz pop eax
  413b84:	sub    DWORD PTR [edx+edx*1+0x65],0x5d
  413b89:	pop    es
  413b8a:	test   eax,0xd4a47d80
  413b8f:	retf   
  413b90:	mov    bh,BYTE PTR [ecx]
  413b92:	or     DWORD PTR [edi-0x6a],esi
  413b95:	mov    ds:0x2eb4b05a,al
  413b9a:	xor    esp,ebx
  413b9c:	lahf   
  413b9d:	repz cli 
  413b9f:	clc    
  413ba0:	out    dx,eax
  413ba1:	imul   eax,DWORD PTR [edx+0x33],0x87af3e7f
  413ba8:	xor    eax,0x2af6c9c8
  413bad:	sub    ah,BYTE PTR [ebx+0x76]
  413bb0:	adc    eax,0x7500f5d0
  413bb5:	push   cs
  413bb6:	aad    0xd9
  413bb8:	or     BYTE PTR ds:0xd6a5c9cc,al
  413bbe:	sub    DWORD PTR [ecx-0x4e6d5cef],ebx
  413bc4:	popf   
  413bc5:	rcr    BYTE PTR [eax],0x49
  413bc8:	mov    al,0x36
  413bca:	adc    al,0x50
  413bcc:	sar    BYTE PTR [edx+0x410d5538],cl
  413bd2:	pusha  
  413bd3:	dec    ebx
  413bd4:	push   esp
  413bd5:	cld    
  413bd6:	add    ah,al
  413bd8:	jle    0x413bbf
  413bda:	rcl    DWORD PTR [ebx-0x39d38a29],0xc5
  413be1:	jp     0x413b73
  413be3:	in     al,0x3d
  413be5:	sbb    DWORD PTR [esi+0x2818fa02],edi
  413beb:	mov    ?,WORD PTR [ecx-0x2f588dbc]
  413bf1:	cmp    eax,0x2423a4cc
  413bf6:	in     al,dx
  413bf7:	test   BYTE PTR [ebx-0x39],ch
  413bfa:	mov    cl,0x26
  413bfc:	rcr    DWORD PTR [ebp-0x4b],1
  413bff:	inc    ebp
  413c00:	(bad)  
  413c01:	fcomp  DWORD PTR [edx+0x60]
  413c04:	jno    0x413c4b
  413c06:	or     eax,0x5351527
  413c0b:	xor    DWORD PTR [ebp+0x2e],esi
  413c0e:	stos   DWORD PTR es:[edi],eax
  413c0f:	out    0xb2,al
  413c11:	xchg   ebx,eax
  413c12:	les    edx,FWORD PTR [edi]
  413c14:	dec    ebp
  413c15:	mov    bl,0x89
  413c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c18:	fmul   DWORD PTR [ecx+0x2ba45f0b]
  413c1e:	mov    bh,0x70
  413c20:	test   al,0x91
  413c22:	jmp    FWORD PTR [edx+0x319c90ce]
  413c28:	dec    esi
  413c29:	sbb    edx,edi
  413c2b:	jle    0x413bb3
  413c2d:	push   ecx
  413c2e:	add    BYTE PTR [eax],dh
  413c30:	inc    eax
  413c31:	sti    
  413c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c33:	iret   
  413c34:	or     ecx,DWORD PTR [ebp+0x70]
  413c37:	mov    WORD PTR [edi-0x1e],es
  413c3a:	push   cs
  413c3b:	out    dx,eax
  413c3c:	paddw  mm2,QWORD PTR [ecx-0x3c432fd8]
  413c43:	lahf   
  413c44:	jecxz  0x413c61
  413c46:	rcr    BYTE PTR [edx-0x685894cd],1
  413c4c:	cmp    eax,0x3dbd77a7
  413c51:	xor    eax,0xe6d8f56d
  413c56:	add    al,BYTE PTR [edi-0x6127a6bd]
  413c5c:	push   eax
  413c5d:	mov    esi,0x586fdfc6
  413c62:	les    edx,FWORD PTR [ebx]
  413c64:	jle    0x413c7d
  413c66:	inc    eax
  413c67:	pop    ss
  413c68:	outs   dx,BYTE PTR ds:[esi]
  413c69:	xor    ebp,DWORD PTR [ebp-0x1a]
  413c6c:	imul   eax,DWORD PTR [edi+0x7a963070],0xdc58a3a9
  413c76:	ja     0x413cde
  413c78:	lahf   
  413c79:	outs   dx,DWORD PTR ds:[esi]
  413c7a:	arpl   WORD PTR [eax],bx
  413c7c:	jmp    0x71f29cc2
  413c81:	int3   
  413c82:	xchg   esi,eax
  413c83:	loopne 0x413c20
  413c85:	lea    eax,[ebx-0x17]
  413c88:	mov    bl,0x96
  413c8a:	dec    ecx
  413c8b:	sub    esp,DWORD PTR [esi-0x27]
  413c8e:	(bad)  
  413c8f:	cmp    eax,DWORD PTR [eax-0xf]
  413c92:	adc    eax,ebp
  413c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c95:	jne    0x413c2d
  413c97:	imul   ebx,DWORD PTR [esp+esi*1],0xffffffd9
  413c9b:	cld    
  413c9c:	mov    eax,0xac0c26f1
  413ca1:	int3   
  413ca2:	in     eax,0x6e
  413ca4:	jmp    0x413c41
  413ca6:	test   eax,0x149a7204
  413cab:	ds cli 
  413cad:	sahf   
  413cae:	sar    dh,0xfc
  413cb1:	xchg   esp,eax
  413cb2:	xor    al,0x6
  413cb4:	cmp    BYTE PTR [eax],cl
  413cb6:	and    al,0xa3
  413cb8:	cdq    
  413cb9:	push   ebp
  413cba:	aaa    
  413cbb:	xlat   BYTE PTR ds:[ebx]
  413cbc:	data16 add al,0xec
  413cbf:	rol    DWORD PTR [ecx+0x7d],1
  413cc2:	enter  0x9003,0x1a
  413cc6:	adc    DWORD PTR [ebx],edx
  413cc8:	mov    ch,0xa1
  413cca:	mov    DWORD PTR ds:[edx+0x0],ecx
  413cce:	(bad)  
  413cd0:	loope  0x413ceb
  413cd2:	and    al,0xba
  413cd4:	not    DWORD PTR [ecx]
  413cd6:	shl    BYTE PTR [ebx+ecx*4-0x20],0x37
  413cdb:	dec    eax
  413cdc:	popa   
  413cdd:	test   BYTE PTR [edx],dl
  413cdf:	fisubr WORD PTR [edi-0x748d675c]
  413ce5:	in     al,dx
  413ce6:	cmp    BYTE PTR [ebp-0x76bad4b8],cl
  413cec:	test   DWORD PTR [ebx+0x7],ecx
  413cef:	or     DWORD PTR [esi-0x76196a99],edi
  413cf5:	dec    edx
  413cf6:	sahf   
  413cf7:	or     eax,DWORD PTR [eax+eiz*2+0xf]
  413cfb:	jnp    0x413d29
  413cfd:	out    0xf9,eax
  413cff:	ins    DWORD PTR es:[edi],dx
  413d00:	pusha  
  413d01:	ret    
  413d02:	int3   
  413d03:	xchg   ebx,eax
  413d04:	les    edi,FWORD PTR [eax+0x452dbe4c]
  413d0a:	dec    edx
  413d0b:	jg     0x413d02
  413d0d:	out    0x12,eax
  413d0f:	lds    ebp,FWORD PTR [ebx]
  413d11:	lea    eax,[ebp-0x63c1f16c]
  413d17:	mov    bl,0xf2
  413d19:	cmovp  edi,DWORD PTR [edx+ebp*1-0x6e49f3ad]
  413d21:	adc    eax,0x6c7dc924
  413d26:	jecxz  0x413d73
  413d28:	adc    BYTE PTR [esi-0x4dd8ca0c],cl
  413d2e:	xchg   edi,eax
  413d2f:	out    0x32,al
  413d31:	mov    eax,0x1b0a0bff
  413d36:	inc    edx
  413d37:	pop    ss
  413d38:	pushf  
  413d39:	cmp    eax,0x2ca893b0
  413d3e:	cmc    
  413d3f:	inc    eax
  413d40:	lods   eax,DWORD PTR ds:[esi]
  413d41:	mov    al,0x9a
  413d43:	sbb    al,0xd
  413d45:	mov    WORD PTR es:[edi],cs
  413d48:	pop    ds
  413d49:	xlat   BYTE PTR ds:[ebx]
  413d4a:	fistp  QWORD PTR [edi+0x1f]
  413d4d:	push   ds
  413d4e:	scas   al,BYTE PTR es:[edi]
  413d4f:	ins    DWORD PTR es:[edi],dx
  413d50:	xchg   esi,eax
  413d51:	jl     0x413cfe
  413d53:	cs (bad) 
  413d56:	ror    DWORD PTR [ecx+0xab332b3],0x8e
  413d5d:	xchg   ebx,eax
  413d5e:	add    esi,DWORD PTR [ebx-0xd3df124]
  413d64:	cmp    esi,DWORD PTR [esi-0xeb45ae8]
  413d6a:	cwde   
  413d6b:	inc    esi
  413d6c:	data16 mov ?,WORD PTR [ecx+0x1afff2e4]
  413d73:	inc    ecx
  413d74:	dec    ebx
  413d75:	push   ds
  413d76:	adc    eax,0xc790036b
  413d7b:	sahf   
  413d7c:	pop    ds
  413d7d:	sbb    BYTE PTR ds:0x364c8c0d,bl
  413d83:	ds dec ebx
  413d85:	out    0xbe,al
  413d87:	mov    bh,0xe1
  413d89:	add    eax,0x8b3a47bd
  413d8e:	jmp    0x413d60
  413d90:	loope  0x413d46
  413d92:	jmp    0x84be9270
  413d97:	aas    
  413d98:	xchg   esp,eax
  413d99:	(bad)  
  413d9b:	lea    edi,[ecx]
  413d9d:	loope  0x413d41
  413d9f:	sub    DWORD PTR [eax],edi
  413da1:	je     0x413dbd
  413da3:	add    al,0xda
  413da5:	ror    BYTE PTR [esi+0x48],0x26
  413da9:	push   ss
  413daa:	scas   al,BYTE PTR es:[edi]
  413dab:	mov    dh,bl
  413dad:	(bad)  
  413daf:	sub    eax,0x62284db8
  413db4:	adc    DWORD PTR [edi+0x6b7af3fd],edi
  413dba:	adc    al,0x57
  413dbc:	lahf   
  413dbd:	test   al,0xb5
  413dbf:	ins    DWORD PTR es:[edi],dx
  413dc0:	pushf  
  413dc1:	lahf   
  413dc2:	pop    ebx
  413dc3:	add    eax,0x169f29c4
  413dc8:	loope  0x413da9
  413dca:	fs add ah,dl
  413dcd:	je     0x413e44
  413dcf:	pushf  
  413dd0:	in     eax,0x2f
  413dd2:	fwait
  413dd3:	lods   eax,DWORD PTR ds:[esi]
  413dd4:	add    dl,dh
  413dd6:	mov    ah,0xbc
  413dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd9:	mov    bh,0xa7
  413ddb:	fdivrp st(4),st
  413ddd:	mov    al,0x36
  413ddf:	fst    QWORD PTR [ecx+0x756fbf85]
  413de5:	scas   eax,DWORD PTR es:[edi]
  413de6:	fmul   DWORD PTR [edx+0x55]
  413de9:	out    0x88,eax
  413deb:	pop    eax
  413dec:	cld    
  413ded:	jb     0x413d8c
  413def:	call   0x8b75e0e6
  413df4:	jmp    0x1930:0x5356ac45
  413dfb:	popf   
  413dfc:	shl    DWORD PTR [eax+0x26],cl
  413dff:	aad    0x77
  413e01:	rcr    DWORD PTR [esi-0x4c53ba0d],1
  413e07:	pop    ds
  413e08:	and    eax,0x2d22289
  413e0d:	js     0x413dc1
  413e0f:	dec    esp
  413e10:	add    eax,DWORD PTR [ebp+ebp*4+0x70ecf9f]
  413e17:	add    BYTE PTR ds:0x42c7d295,ah
  413e1d:	stc    
  413e1e:	push   ds
  413e1f:	inc    BYTE PTR [edx]
  413e21:	out    dx,eax
  413e22:	ret    
  413e23:	mov    eax,ds:0x1d64dc36
  413e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e29:	jb     0x413df3
  413e2b:	inc    edi
  413e2c:	(bad)  
  413e2d:	cmp    esp,DWORD PTR [ebx+0x69]
  413e30:	dec    esp
  413e31:	pop    edx
  413e32:	jp     0x413e34
  413e34:	push   ss
  413e35:	addr16 addr16 in eax,dx
  413e38:	adc    eax,0xcad18355
  413e3d:	cwde   
  413e3e:	inc    eax
  413e3f:	gs push eax
  413e41:	cmp    BYTE PTR [esi],dh
  413e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e44:	pop    es
  413e45:	(bad)  
  413e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e47:	sub    ch,BYTE PTR [ecx+0x5747db32]
  413e4d:	xchg   edx,eax
  413e4e:	or     eax,0x356f30ac
  413e53:	adc    DWORD PTR [eax+0x2cca054e],esp
  413e59:	mov    esp,0xf1e3c702
  413e5e:	and    DWORD PTR [ebx+ecx*4],esp
  413e61:	mov    cs,ecx
  413e63:	test   DWORD PTR [edi+0x4a],0x1778c0f1
  413e6a:	imul   ebx,DWORD PTR [ebx-0x7dcf0ea7],0xffffff8b
  413e71:	xor    al,0x3d
  413e73:	adc    al,0x23
  413e75:	jmp    0x2e9492c4
  413e7a:	loope  0x413e77
  413e7c:	cmp    al,0x55
  413e7e:	dec    eax
  413e7f:	dec    eax
  413e80:	adc    esp,0x4ecf08bf
  413e86:	mov    esi,0x3caedd47
  413e8b:	cli    
  413e8c:	enter  0xac2f,0x45
  413e90:	imul   dh
  413e92:	iret   
  413e93:	cld    
  413e94:	mov    esi,0x79c041b9
  413e99:	hlt    
  413e9a:	adc    BYTE PTR ds:0x5f1489c2,ch
  413ea0:	(bad)  
  413ea1:	xor    eax,0x47fb09cb
  413ea6:	push   esi
  413ea7:	inc    eax
  413ea8:	push   es
  413ea9:	out    0x5c,al
  413eab:	fs call 0xda44:0x1a968d1f
  413eb3:	test   BYTE PTR [edx],bl
  413eb5:	data16 add al,0xd
  413eb8:	mov    ebx,0xc78aeedc
  413ebd:	mov    eax,ds:0x3944d023
  413ec2:	retf   0x7d4f
  413ec5:	rcl    BYTE PTR [ebp-0x6fe3a206],0x46
  413ecc:	repnz out 0x13,al
  413ecf:	adc    DWORD PTR [edi-0x49],esp
  413ed2:	or     ebx,DWORD PTR [ebx]
  413ed4:	pop    eax
  413ed5:	xlat   BYTE PTR ds:[ebx]
  413ed6:	sub    ebx,edx
  413ed8:	and    ah,BYTE PTR [esi+0x2c218f79]
  413ede:	mov    edi,0xb002e126
  413ee3:	(bad)  
  413ee4:	jae    0x413ea0
  413ee6:	jge    0x413ebd
  413ee8:	cdq    
  413ee9:	xchg   ebp,eax
  413eea:	mov    edx,0x470f538
  413eef:	add    cl,dh
  413ef1:	xchg   ebp,eax
  413ef2:	cs add al,0x1f
  413ef5:	and    DWORD PTR ds:0x5713a587,eax
  413efb:	mov    bh,0xc9
  413efd:	fild   WORD PTR [ebx]
  413eff:	add    eax,0xb388d07d
  413f04:	xchg   edx,eax
  413f05:	mov    edi,0x20f149ad
  413f0a:	cmp    al,0x4
  413f0c:	push   es
  413f0d:	sbb    BYTE PTR [ecx-0x6f22ef8],bl
  413f13:	lock in al,dx
  413f15:	jno    0x413eed
  413f17:	jae    0x413f18
  413f19:	pop    esp
  413f1a:	add    al,0x64
  413f1c:	xchg   esp,eax
  413f1d:	sub    BYTE PTR [edi],dh
  413f1f:	in     eax,0x95
  413f21:	adc    ebp,ecx
  413f23:	test   DWORD PTR [eax-0x73],ebx
  413f26:	mov    edi,0xd0c9d66e
  413f2b:	fcmovnu st,st(3)
  413f2d:	push   ebp
  413f2e:	cmp    eax,0x19efb6fc
  413f33:	aam    0xf3
  413f35:	je     0x413ef5
  413f37:	das    
  413f38:	int3   
  413f39:	retf   0x7dd7
  413f3c:	cmp    ebx,DWORD PTR [edi*8+0x6c40925f]
  413f43:	or     bl,al
  413f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f46:	ja     0x413f62
  413f48:	sub    DWORD PTR [esi],0x46
  413f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f4c:	mov    DWORD PTR [edx],edi
  413f4e:	push   esi
  413f4f:	mov    cl,0x2b
  413f51:	cli    
  413f52:	mov    edi,ebx
  413f54:	jl     0x413f18
  413f56:	push   0x413445a4
  413f5b:	sbb    eax,0x654867a1
  413f60:	dec    ecx
  413f61:	dec    esp
  413f62:	fimul  WORD PTR [edx-0x3a]
  413f65:	sub    BYTE PTR [ecx+0x52f7baf5],dh
  413f6b:	mov    dh,bl
  413f6d:	and    dl,al
  413f6f:	call   0x9f7c:0x215da12d
  413f76:	std    
  413f77:	push   es
  413f78:	(bad)  
  413f79:	and    esi,DWORD PTR [ecx+esi*2]
  413f7c:	add    eax,0x881c4651
  413f81:	sbb    BYTE PTR [eax-0x38],dh
  413f84:	cld    
  413f85:	cmp    DWORD PTR [edx],edx
  413f87:	sbb    ebp,ebx
  413f89:	cmp    bl,BYTE PTR ds:0xa787cf42
  413f8f:	jg     0x413f36
  413f91:	je     0x413f9f
  413f93:	add    BYTE PTR [ecx],dl
  413f95:	dec    edx
  413f96:	lods   al,BYTE PTR ds:[esi]
  413f97:	in     eax,0x68
  413f99:	(bad)  
  413f9a:	mov    edx,DWORD PTR [ebp+0x8]
  413f9d:	mov    ebx,DWORD PTR [ebp-0x8]
  413fa0:	xor    edx,eax
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	loop   0x414037
  414015:	ja     0x413fdc
  414017:	mov    ds:0xeb7c7c74,al
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	xor    ecx,DWORD PTR [eax]
  414021:	mov    esi,0x33d551b9
  414026:	sub    eax,0x33415d99
  41402b:	pop    edx
  41402c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402d:	jge    0x413fd9
  41402f:	jmp    0xceb:0x725af319
  414036:	and    BYTE PTR [eax+ebp*1-0x70],bl
  41403a:	and    eax,0xd20fa441
  41403f:	jnp    0x414053
  414041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414042:	sti    
  414043:	jle    0x414055
  414045:	sbb    BYTE PTR [ecx],ch
  414047:	or     al,0xb3
  414049:	shr    BYTE PTR [edx+0x1e],1
  41404c:	mov    ds:0xd229a943,eax
  414051:	add    bh,BYTE PTR [eax+0x13accff8]
  414057:	xor    BYTE PTR [edi+0x5437bd3c],bl
  41405d:	adc    BYTE PTR [eax],cl
  41405f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414060:	arpl   WORD PTR [ecx-0x2aeee1e6],bx
  414066:	xor    al,0xc7
  414068:	call   0xdaed79fa
  41406d:	rcl    DWORD PTR [edx],cl
  41406f:	enter  0xd8e,0x92
  414073:	shl    BYTE PTR [ecx+0x2ac9a586],0x84
  41407a:	mov    bh,0xb1
  41407c:	fsqrt  
  41407e:	mov    esi,0xd6863933
  414083:	std    
  414084:	jne    0x414060
  414086:	(bad)  
  414087:	mov    cl,0xc3
  414089:	mov    ch,0xa8
  41408b:	scas   eax,DWORD PTR es:[edi]
  41408c:	dec    ebp
  41408d:	es jmp 0x52fb:0x4bcf3e92
  414095:	push   cs
  414096:	push   0x44
  414098:	mov    esi,0xc617e748
  41409d:	or     BYTE PTR [ebx],dl
  41409f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a0:	ret    0x1d84
  4140a3:	mov    ebx,0x6019cadb
  4140a8:	imul   DWORD PTR [ecx]
  4140aa:	jbe    0x414125
  4140ac:	out    dx,al
  4140ad:	mov    WORD PTR [edi+0x28d32f01],fs
  4140b3:	mov    esi,0xf3a2b352
  4140b8:	popf   
  4140b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ba:	mov    ah,0x55
  4140bc:	enter  0xdb39,0xc6
  4140c0:	push   eax
  4140c1:	or     DWORD PTR [esp+ebp*8],ebx
  4140c4:	and    dh,BYTE PTR [ebx-0x1b020cc8]
  4140ca:	sbb    eax,0x952235bd
  4140cf:	xor    ah,BYTE PTR [edi-0x1f08764a]
  4140d5:	in     eax,dx
  4140d6:	loop   0x41407a
  4140d8:	scas   al,BYTE PTR es:[edi]
  4140d9:	or     bh,bh
  4140db:	push   esp
  4140dc:	popa   
  4140dd:	mov    cl,0x25
  4140df:	ins    DWORD PTR es:[edi],dx
  4140e0:	loope  0x41412c
  4140e2:	jno    0x414125
  4140e4:	xlat   BYTE PTR ds:[ebx]
  4140e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e6:	shr    BYTE PTR [edx],0x7
  4140e9:	mov    ebx,0xd3398ba2
  4140ee:	push   ecx
  4140ef:	jmp    0x9ce8:0xcaafbdda
  4140f6:	xor    bh,BYTE PTR [ecx+ebx*1-0x79]
  4140fa:	dec    esp
  4140fb:	jl     0x4140e0
  4140fd:	mov    bh,0x2c
  4140ff:	add    BYTE PTR [edi-0x3ae88458],0x7
  414106:	stos   BYTE PTR es:[edi],al
  414107:	add    eax,0x2e6048c3
  41410c:	addr16 lock cmp eax,0xbc71529
  414113:	les    ebp,FWORD PTR [edi-0x388c011a]
  414119:	stos   BYTE PTR es:[di],al
  41411b:	out    dx,al
  41411c:	sub    BYTE PTR [ecx+0x1d52f794],0xe
  414123:	daa    
  414124:	(bad)
  414128:	or     al,0x1a
  41412a:	push   es
  41412b:	inc    ebp
  41412c:	aam    0xb8
  41412e:	fs pop eax
  414130:	(bad)  
  414131:	fidivr DWORD PTR [edi+0x3085b009]
  414137:	fidivr DWORD PTR [esi+0x6d8e20fc]
  41413d:	popf   
  41413e:	scas   eax,DWORD PTR es:[edi]
  41413f:	sbb    ebx,edx
  414141:	and    BYTE PTR ds:0xcdcc35bb,0xcf
  414148:	jle    0x414122
  41414a:	nop
  41414b:	inc    esi
  41414c:	loope  0x4141ac
  41414e:	inc    ecx
  41414f:	mov    eax,0x441949a4
  414154:	test   edi,esp
  414156:	inc    esi
  414157:	imul   ebp,DWORD PTR [esi+eiz*1],0xd6cb97a6
  41415e:	lods   al,BYTE PTR ds:[esi]
  41415f:	push   eax
  414160:	mov    eax,DWORD PTR [eax+edx*4-0x22]
  414164:	fnstcw WORD PTR [eax-0x48]
  414167:	shl    dh,0x92
  41416a:	gs jge 0x414160
  41416d:	sbb    BYTE PTR [ebx],ch
  41416f:	imul   esi,DWORD PTR [edi+0x2c0dbe71],0xcb9af858
  414179:	or     eax,DWORD PTR [esi-0x4d]
  41417c:	add    BYTE PTR [ebx+0x70],bh
  41417f:	mov    esp,0xed8af008
  414184:	(bad)  
  414185:	fsub   st(0),st
  414187:	stos   DWORD PTR es:[edi],eax
  414188:	dec    ebp
  414189:	mov    BYTE PTR [ecx+0x3e],cl
  41418c:	js     0x4141dc
  41418e:	mov    ch,0x45
  414190:	ins    BYTE PTR es:[edi],dx
  414191:	in     eax,dx
  414192:	(bad)  
  414193:	cmp    al,0x5a
  414195:	int3   
  414196:	add    ebx,DWORD PTR [esi+eiz*8+0x67]
  41419a:	push   esp
  41419b:	adc    eax,0xb2182577
  4141a0:	loop   0x41415b
  4141a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a3:	sar    DWORD PTR [edi-0x15],0x61
  4141a7:	mov    fs,WORD PTR [eax-0x43ded543]
  4141ad:	fucomp st(2)
  4141af:	dec    esp
  4141b0:	test   ebx,ebx
  4141b2:	pop    edx
  4141b3:	adc    eax,DWORD PTR [edi-0x7e0ca1fd]
  4141b9:	mov    ecx,0xabc5bb62
  4141be:	sti    
  4141bf:	jbe    0x4141af
  4141c1:	mov    gs,WORD PTR [ecx]
  4141c3:	cs (bad) 
  4141c5:	cs jno 0x414244
  4141c8:	das    
  4141c9:	fsub   DWORD PTR [esi-0x1301de7c]
  4141cf:	adc    dl,BYTE PTR [ecx-0x2284d21a]
  4141d5:	sub    al,0xe5
  4141d7:	and    DWORD PTR [ecx-0xdeaa78a],0x111a5504
  4141e1:	into   
  4141e2:	cmp    bl,ch
  4141e4:	ins    DWORD PTR es:[edi],dx
  4141e5:	mov    ebp,0x5db32f54
  4141ea:	scas   al,BYTE PTR es:[edi]
  4141eb:	sub    DWORD PTR [eax],0x64
  4141ee:	push   edi
  4141ef:	mov    ebp,0xcc0467ec
  4141f4:	jno    0x414200
  4141f6:	(bad)
  4141fa:	pusha  
  4141fb:	dec    BYTE PTR [eax+0x5c817fd6]
  414201:	(bad)  
  414202:	or     eax,0xed120bd0
  414207:	inc    esi
  414208:	dec    edx
  414209:	dec    eax
  41420a:	sahf   
  41420b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41420c:	retf   
  41420d:	and    eax,0xa016a61a
  414212:	mov    esp,0x2d9c42c3
  414217:	stc    
  414218:	push   ss
  414219:	cmp    DWORD PTR [eax],0x24
  41421c:	or     al,0xf3
  41421e:	add    al,0xaa
  414220:	adc    DWORD PTR [edx+0x6148e058],ecx
  414226:	test   al,0xd9
  414228:	out    0xf4,al
  41422a:	or     al,0xd5
  41422c:	or     bl,BYTE PTR [ecx-0x36519e93]
  414232:	ret    
  414233:	rcl    DWORD PTR [edi-0x1d10d81a],0x4a
  41423a:	jl     0x41426e
  41423c:	pop    edi
  41423d:	test   eax,0x7d6389e5
  414242:	clc    
  414243:	js     0x41427a
  414245:	int3   
  414246:	repnz inc esi
  414248:	loope  0x414267
  41424a:	pop    es
  41424b:	ds sbb bl,dh
  41424e:	out    0x16,eax
  414250:	dec    esi
  414251:	mov    esi,0x5e70de75
  414256:	mov    ds:0x33af3028,eax
  41425b:	and    ecx,edi
  41425d:	or     ch,BYTE PTR [esi-0x2468253b]
  414263:	and    edx,DWORD PTR [ecx]
  414265:	dec    esi
  414266:	cmp    al,0x4a
  414268:	out    0xc1,al
  41426a:	int3   
  41426b:	cmp    dh,BYTE PTR [edx+eiz*1-0x9]
  41426f:	inc    ecx
  414270:	cmc    
  414271:	mov    ah,0x83
  414273:	repz (bad) 
  414275:	pop    ds
  414276:	xor    DWORD PTR [eax-0x28],0xfffffffa
  41427a:	daa    
  41427b:	aas    
  41427c:	ror    BYTE PTR ds:0xc894736a,cl
  414282:	dec    ebx
  414283:	loopne 0x414274
  414285:	scas   eax,DWORD PTR es:[edi]
  414286:	inc    esi
  414287:	xchg   ebx,eax
  414288:	xchg   esp,edi
  41428a:	xchg   edx,eax
  41428b:	xchg   edx,eax
  41428c:	add    esi,DWORD PTR [ebx+ebp*4-0x80]
  414290:	mov    eax,0xadbce5c5
  414295:	inc    edx
  414296:	and    dh,ah
  414298:	mov    edi,0xf439804d
  41429d:	xchg   ebx,eax
  41429e:	enter  0x15f5,0xea
  4142a2:	inc    edi
  4142a3:	push   esp
  4142a4:	cmp    ah,BYTE PTR [ebx-0x75]
  4142a7:	xchg   ecx,eax
  4142a8:	sbb    BYTE PTR ds:[edx+0x66f71a2e],dl
  4142af:	mov    bh,0xb6
  4142b1:	pop    ss
  4142b2:	into   
  4142b3:	sbb    BYTE PTR [esi-0x27],bh
  4142b6:	cmp    DWORD PTR [edi-0x19],edx
  4142b9:	jmp    0xef9fc0df
  4142be:	mov    ecx,0x70ffea9
  4142c3:	pop    ecx
  4142c4:	test   al,0x79
  4142c6:	xchg   ecx,eax
  4142c7:	test   DWORD PTR [edi+0x7],edx
  4142ca:	xchg   BYTE PTR [edx+0x38],ah
  4142cd:	int3   
  4142ce:	arpl   WORD PTR cs:[ebp+0x52493a19],bx
  4142d5:	add    eax,0xa7dc7868
  4142da:	mov    edx,0x7dd05e7b
  4142df:	xor    ebx,DWORD PTR [edx-0x76]
  4142e2:	aam    0xbb
  4142e4:	popf   
  4142e5:	adc    al,0x49
  4142e7:	(bad)  
  4142e8:	and    BYTE PTR [ecx+ebx*4+0x2a],dh
  4142ec:	xchg   edi,eax
  4142ed:	iret   
  4142ee:	mov    ds:0xd8d863f2,eax
  4142f3:	loope  0x4142d3
  4142f5:	inc    esi
  4142f6:	jae    0x4142a9
  4142f8:	cmp    bl,BYTE PTR ds:0xa5509d22
  4142fe:	xor    cl,BYTE PTR [ebx]
  414300:	les    edi,FWORD PTR [edi+0x7f129ae4]
  414306:	inc    esi
  414307:	outs   dx,BYTE PTR ds:[esi]
  414308:	mov    eax,0x961b1784
  41430d:	xor    ch,BYTE PTR [esi-0x759a480c]
  414313:	fisub  DWORD PTR [ebp+0x68dc4c79]
  414319:	sar    BYTE PTR [edi],cl
  41431b:	cld    
  41431c:	jae    0x414380
  41431e:	jmp    0x838:0xccdd
  414324:	mov    dh,0xc1
  414326:	out    dx,al
  414327:	faddp  st(5),st
  414329:	pop    es
  41432a:	add    esp,DWORD PTR [ebp-0x3a69098]
  414330:	adc    esi,DWORD PTR [esi+0x2a79300e]
  414336:	sub    DWORD PTR [esi],esp
  414338:	sti    
  414339:	or     BYTE PTR ss:[eax+edx*4+0x5d],ah
  41433e:	add    ecx,DWORD PTR [ebx-0x12c071e2]
  414344:	xor    BYTE PTR [ecx],dl
  414346:	pusha  
  414347:	inc    eax
  414348:	sar    DWORD PTR [esi+0x429d9b91],cl
  41434e:	(bad)  
  41434f:	(bad)  
  414351:	xchg   ebx,eax
  414352:	sub    dl,dh
  414354:	out    0x49,eax
  414356:	nop
  414357:	aad    0x5b
  414359:	or     BYTE PTR [eax+0x5cac81ff],ch
  41435f:	xchg   ebx,eax
  414360:	xor    BYTE PTR es:[ebp-0x46c7d3f4],bl
  414367:	pop    ds
  414368:	addr16 xchg ebx,eax
  41436a:	push   cs
  41436b:	xlat   BYTE PTR ds:[ebx]
  41436c:	int    0x5f
  41436e:	jmp    0xa5fc6417
  414373:	(bad)  
  414374:	sub    al,0x5f
  414376:	retf   0xc500
  414379:	ds sub edi,ebx
  41437c:	mov    WORD PTR [ecx+0x6d08525],ds
  414382:	hlt    
  414383:	mov    ecx,0xecd64b3d
  414388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414389:	and    edi,DWORD PTR [esi-0x65]
  41438c:	mov    eax,0x28987208
  414391:	mov    dh,ah
  414393:	(bad)  
  414394:	sub    eax,0x9145a9cd
  414399:	cdq    
  41439a:	inc    ebp
  41439b:	sub    DWORD PTR [edi],eax
  41439d:	out    dx,eax
  41439e:	xor    al,0xd7
  4143a0:	mov    ah,0xd5
  4143a2:	in     al,0x76
  4143a4:	jg     0x41434f
  4143a6:	or     eax,0x9c50e676
  4143ab:	fcomi  st,st(6)
  4143ad:	dec    esi
  4143ae:	ret    
  4143af:	xor    ebx,0x42
  4143b2:	cmc    
  4143b3:	ins    BYTE PTR es:[edi],dx
  4143b4:	inc    edi
  4143b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143b6:	jecxz  0x41436e
  4143b8:	popf   
  4143b9:	aaa    
  4143ba:	out    dx,al
  4143bb:	push   esi
  4143bc:	mov    bh,0x1
  4143be:	push   esp
  4143bf:	jl     0x414366
  4143c1:	test   al,0xb1
  4143c3:	popf   
  4143c4:	sti    
  4143c5:	pop    ebx
  4143c6:	and    dl,BYTE PTR [esi+0x22]
  4143c9:	xchg   ebx,eax
  4143ca:	xlat   BYTE PTR ds:[ebx]
  4143cb:	lea    edi,[ebx]
  4143cd:	xchg   esi,eax
  4143ce:	mov    ah,0xb6
  4143d0:	cmp    ebp,DWORD PTR [edx]
  4143d2:	retf   0x9cd6
  4143d5:	dec    esi
  4143d6:	xlat   BYTE PTR ds:[ebx]
  4143d7:	fisubr WORD PTR [edi]
  4143d9:	xchg   edi,eax
  4143da:	int3   
  4143db:	dec    ebp
  4143dc:	aas    
  4143dd:	fld    TBYTE PTR [ebp+0x72]
  4143e0:	xchg   edi,eax
  4143e1:	in     eax,dx
  4143e2:	ficom  WORD PTR [edi+0x62]
  4143e5:	push   ds
  4143e6:	aas    
  4143e7:	adc    al,0xcd
  4143e9:	push   cs
  4143ea:	pop    ecx
  4143eb:	inc    edx
  4143ec:	dec    edi
  4143ed:	mov    ebx,0x64c9814
  4143f2:	imul   eax,DWORD PTR [ebx+0x59ddbe7],0xf
  4143f9:	mov    esp,0xff9757bb
  4143fe:	jns    0x414448
  414400:	xchg   DWORD PTR [ebp-0x1e9a995c],edi
  414406:	aaa    
  414407:	mov    eax,ds:0xc57717d7
  41440c:	bswap  ebx
  41440e:	sub    DWORD PTR [ebx+edx*8+0x7a51653d],ebp
  414415:	retf   0x5a9d
  414418:	push   ds
  414419:	call   0xfc615042
  41441e:	mov    ah,0x8d
  414420:	and    DWORD PTR [edx+0x70],esp
  414423:	mov    eax,ds:0xd7fa9a5b
  414428:	outs   dx,BYTE PTR ds:[esi]
  414429:	(bad)  
  41442a:	fdivr  st,st(4)
  41442c:	mov    dh,0xbf
  41442e:	fwait
  41442f:	mov    DWORD PTR [eax-0x166ddd1d],esp
  414435:	mov    al,ds:0x990faee
  41443a:	mov    esi,0xa0e413bf
  41443f:	ficom  WORD PTR [ecx]
  414441:	les    edx,FWORD PTR [ecx]
  414443:	push   ss
  414444:	jmp    DWORD PTR ds:0x26a558ec
  41444a:	rol    DWORD PTR [ebp+0x62],1
  41444d:	inc    esp
  41444e:	push   edx
  41444f:	repz mov eax,ds:0xc2a3942
  414455:	push   ss
  414456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414457:	sbb    eax,0x7c7729e1
  41445c:	dec    ecx
  41445d:	inc    edx
  41445e:	and    al,0xbf
  414460:	xor    eax,0xbf751264
  414465:	jno    0x4144ae
  414467:	scas   al,BYTE PTR es:[edi]
  414468:	loope  0x4144e6
  41446a:	pop    ebp
  41446b:	or     edx,DWORD PTR [edx]
  41446d:	push   ebp
  41446e:	jmp    0xbff5:0x705e8628
  414475:	outs   dx,BYTE PTR ds:[esi]
  414476:	call   0x45e2:0x4705cea7
  41447d:	leave  
  41447e:	das    
  41447f:	out    dx,eax
  414480:	add    eax,0xf5bd35ec
  414485:	xor    eax,0xf925f7b8
  41448a:	inc    ebx
  41448b:	and    eax,0x1bbe78bb
  414490:	mov    ebp,0x7c453f8
  414495:	xchg   esp,eax
  414496:	lods   al,BYTE PTR ds:[esi]
  414497:	(bad)  
  414498:	enter  0xbb6b,0x23
  41449c:	push   es
  41449d:	sub    DWORD PTR [ebx],edi
  41449f:	dec    edi
  4144a0:	maxps  xmm7,XMMWORD PTR [ebp-0x67]
  4144a4:	arpl   WORD PTR [esi-0x981372d],bx
  4144aa:	mov    ch,0x4f
  4144ac:	and    DWORD PTR [edi],ebx
  4144ae:	les    edi,FWORD PTR [edx+ebx*2-0x45a3868e]
  4144b5:	inc    eax
  4144b6:	bound  esp,QWORD PTR [edi-0x7c]
  4144b9:	pop    ecx
  4144ba:	in     al,dx
  4144bb:	xchg   esi,eax
  4144bc:	(bad)  
  4144bd:	neg    DWORD PTR [esi]
  4144bf:	push   0x455575f2
  4144c4:	pop    DWORD PTR [ebp-0x2c]
  4144c7:	fidiv  WORD PTR [esi-0x19]
  4144ca:	push   ebx
  4144cb:	lods   eax,DWORD PTR ds:[esi]
  4144cc:	bound  edi,QWORD PTR [ecx+ebp*4]
  4144cf:	test   eax,0x54ff1edd
  4144d4:	rol    ecx,0xf0
  4144d7:	xchg   esi,eax
  4144d8:	push   ebp
  4144d9:	xchg   esi,eax
  4144da:	or     ebx,DWORD PTR [edi+0x32]
  4144dd:	fnstenv [ebp+0x7e]
  4144e0:	nop
  4144e1:	lea    ebx,[ebx]
  4144e3:	scas   eax,DWORD PTR es:[edi]
  4144e4:	sbb    eax,DWORD PTR [esi]
  4144e6:	scas   al,BYTE PTR es:[edi]
  4144e7:	or     eax,0x9144ed44
  4144ec:	or     BYTE PTR [edi],al
  4144ee:	pop    ebx
  4144ef:	leave  
  4144f0:	xchg   edx,eax
  4144f1:	xor    BYTE PTR [ebx+0x371e4db5],dh
  4144f7:	mov    dl,0x13
  4144f9:	ins    BYTE PTR es:[edi],dx
  4144fa:	xor    ebx,esp
  4144fc:	aam    0x5
  4144fe:	adc    ecx,DWORD PTR [edx]
  414500:	into   
  414501:	rcr    ebp,1
  414503:	int3   
  414504:	jb     0x41456f
  414506:	mov    es,WORD PTR [edi-0x5]
  414509:	adc    BYTE PTR [esi-0x65e3bddb],0xcf
  414510:	cmc    
  414511:	xchg   ebp,eax
  414512:	icebp  
  414513:	lods   eax,DWORD PTR ds:[esi]
  414514:	xor    al,0x78
  414516:	and    al,0xdb
  414518:	push   esi
  414519:	mov    eax,ds:0xe24db3df
  41451e:	andps  xmm2,XMMWORD PTR [ebx]
  414521:	xor    eax,0x86bbb991
  414526:	leave  
  414527:	pop    ebx
  414528:	push   es
  414529:	or     ah,BYTE PTR [edx-0x1f]
  41452c:	retf   
  41452d:	pushf  
  41452e:	mov    eax,ds:0x6478dffc
  414533:	inc    ebx
  414534:	cwde   
  414535:	push   0xa039e0e7
  41453a:	cmp    DWORD PTR [esi-0xc],ebx
  41453d:	out    0x2a,eax
  41453f:	iret   
  414540:	cmp    ebx,edi
  414542:	mov    cl,BYTE PTR [eax]
  414544:	mov    edi,0x9b0a0248
  414549:	pop    esi
  41454a:	mov    esp,0x9289ceca
  41454f:	(bad)
  414552:	sub    bh,cl
  414554:	cmp    DWORD PTR [edx+0x240625e9],0x9d9505d1
  41455e:	push   ss
  41455f:	mov    al,ds:0xee9eaf05
  414564:	jno    0x414514
  414566:	jmp    0xe7e7:0x8f0e4139
  41456d:	fldcw  WORD PTR [ebp+0x3b9081e]
  414573:	iret   
  414574:	mov    edx,0xe91f0f22
  414579:	adc    DWORD PTR [esi],esp
  41457b:	jmp    0x723b5841
  414580:	add    eax,0x4049c100
  414585:	cmp    al,ah
  414587:	stc    
  414588:	xchg   DWORD PTR [eax],eax
  41458a:	out    0xee,eax
  41458c:	rcr    BYTE PTR ds:0x3607badb,1
  414592:	lock (bad) 
  414594:	xor    eax,0xea769afc
  414599:	dec    ecx
  41459a:	xchg   esp,eax
  41459b:	leave  
  41459c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41459d:	xor    BYTE PTR [edx-0x3f53b9fe],0xb
  4145a4:	jae    0x4145a4
  4145a6:	pop    esi
  4145a7:	sbb    dh,BYTE PTR [edx]
  4145a9:	jecxz  0x41455c
  4145ab:	lods   al,BYTE PTR ds:[esi]
  4145ac:	or     DWORD PTR [ebp+ecx*1+0x2d],ebp
  4145b0:	je     0x41455b
  4145b2:	shl    edi,cl
  4145b4:	dec    ebx
  4145b5:	or     DWORD PTR [ebx+0x57],edx
  4145b8:	pop    esp
  4145b9:	bnd jp 0x414635
  4145bc:	(bad)  
  4145bd:	mov    bl,0xbf
  4145bf:	outs   dx,DWORD PTR ds:[esi]
  4145c0:	and    ebx,edi
  4145c2:	arpl   WORD PTR [edx-0x6a9394f7],ax
  4145c8:	hlt    
  4145c9:	call   0xb7a366b9
  4145ce:	aas    
  4145cf:	push   edi
  4145d0:	fild   QWORD PTR ds:0x34d28131
  4145d6:	xchg   bl,ah
  4145d8:	dec    edi
  4145d9:	cmp    edx,DWORD PTR [edx+0xc4c0f05]
  4145df:	scas   al,BYTE PTR es:[edi]
  4145e0:	icebp  
  4145e1:	mov    ss,WORD PTR [edx+ebx*2]
  4145e4:	imul   ebp,ebp,0xffffff83
  4145e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145e8:	(bad)  
  4145ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145eb:	hlt    
  4145ec:	sbb    ch,BYTE PTR [eax]
  4145ee:	(bad)  
  4145ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f0:	push   edi
  4145f1:	inc    esi
  4145f2:	retf   0x5633
  4145f5:	xchg   ebx,eax
  4145f6:	into   
  4145f7:	pop    edi
  4145f8:	adc    eax,0xaa7d7dd2
  4145fd:	jb     0x41465f
  4145ff:	inc    edi
  414600:	xchg   BYTE PTR [eax-0x413c6956],bh
  414606:	cdq    
  414607:	jl     0x414598
  414609:	ret    0x8d18
  41460c:	add    eax,0x2d50f97e
  414611:	mov    esp,0x190a1391
  414616:	xor    ecx,DWORD PTR [eax-0x2f]
  414619:	or     eax,edi
  41461b:	inc    ecx
  41461c:	xchg   edx,eax
  41461d:	adc    DWORD PTR [eax-0x49dd9f4],ebp
  414623:	or     ebx,0x47
  414626:	xchg   ebx,eax
  414627:	aaa    
  414628:	cmp    edx,edi
  41462a:	mov    WORD PTR [ebx+ebx*2-0x7f2c8f49],cs
  414631:	xlat   BYTE PTR ds:[ebx]
  414632:	mov    dh,0x2e
  414634:	call   0xdaf6685d
  414639:	out    dx,eax
  41463a:	pushf  
  41463b:	sbb    dh,BYTE PTR [edx]
  41463d:	push   eax
  41463e:	jl     0x4145c8
  414640:	idiv   BYTE PTR [edx+0x3d]
  414643:	jae    0x414639
  414645:	inc    edx
  414646:	mov    al,0x13
  414648:	add    BYTE PTR [eax+0x108117ec],ah
  41464e:	scas   eax,DWORD PTR es:[edi]
  41464f:	scas   al,BYTE PTR es:[edi]
  414650:	cmp    eax,0x3a425bf6
  414655:	sub    eax,0x5a529fcf
  41465a:	pop    es
  41465b:	in     eax,dx
  41465c:	or     al,0xfe
  41465e:	dec    esp
  41465f:	jecxz  0x414614
  414661:	scas   eax,DWORD PTR es:[edi]
  414662:	xor    al,0x14
  414664:	jmp    0x414697
  414666:	aad    0x69
  414668:	inc    ecx
  414669:	leave  
  41466a:	mov    ch,0x5d
  41466c:	sbb    al,0x3a
  41466e:	daa    
  41466f:	xor    eax,0xed7bf8bf
  414674:	dec    ecx
  414675:	mov    ch,0xb4
  414677:	sbb    al,0x76
  414679:	call   0xdfc1ea04
  41467e:	push   edx
  41467f:	pop    ecx
  414680:	fadd   st,st(6)
  414682:	repnz nop
  414684:	mov    edi,0x97c3c544
  414689:	inc    edi
  41468a:	in     al,0xb6
  41468c:	or     DWORD PTR [esi],edi
  41468e:	push   ss
  41468f:	push   0xffffffbe
  414691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414692:	ret    0x14fa
  414695:	xor    esi,ecx
  414697:	sub    BYTE PTR [ebp+0x3be03eb2],dl
  41469d:	std    
  41469e:	arpl   WORD PTR [eax],bx
  4146a0:	call   DWORD PTR [ecx-0x7181af5f]
  4146a6:	aaa    
  4146a7:	and    ch,BYTE PTR [edi]
  4146a9:	cdq    
  4146aa:	push   0xdeb182e
  4146af:	mov    dl,0x3a
  4146b1:	push   es
  4146b2:	test   BYTE PTR [ebp+0x69462546],bl
  4146b8:	pop    edx
  4146b9:	sahf   
  4146ba:	call   0x3498:0x34a95bb5
  4146c1:	mov    eax,0x4e68835e
  4146c6:	loopne 0x41471e
  4146c8:	jmp    0xc9f1:0x55a65506
  4146cf:	mov    ecx,DWORD PTR [ebx+0x7d17d6cf]
  4146d5:	sbb    al,0xf6
  4146d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d8:	adc    bh,0xad
  4146db:	jb     0x41468c
  4146dd:	dec    esp
  4146de:	sbb    BYTE PTR [edx+esi*8-0x78c77c6f],0x85
  4146e6:	and    eax,0x82f46f7
  4146eb:	inc    esi
  4146ec:	pushf  
  4146ed:	scas   al,BYTE PTR es:[edi]
  4146ee:	sahf   
  4146ef:	xchg   ecx,eax
  4146f0:	jmp    0x63eb:0xd8395a5b
  4146f7:	ss pop ecx
  4146f9:	dec    edi
  4146fa:	xor    eax,0x722d3133
  4146ff:	sub    eax,0x27278456
  414704:	cld    
  414705:	js     0x41476a
  414707:	pop    esp
  414708:	cmp    eax,0x3d7deafc
  41470d:	and    esi,DWORD PTR [ecx-0x59c83ec9]
  414713:	jbe    0x414715
  414715:	lods   al,BYTE PTR ds:[esi]
  414716:	cdq    
  414717:	jae    0x414727
  414719:	imul   eax,DWORD PTR [ecx+0x52e001fb],0x60e43cc2
  414723:	inc    ebx
  414724:	ins    DWORD PTR es:[edi],dx
  414725:	pop    ebx
  414726:	(bad)  [edi]
  414728:	push   eax
  414729:	sub    bh,BYTE PTR [ebp+0x3ad15d31]
  41472f:	jbe    0x41472e
  414731:	mov    ecx,0x19d8557a
  414736:	add    al,0x71
  414738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414739:	xchg   esp,eax
  41473b:	pop    ebx
  41473c:	dec    eax
  41473d:	in     eax,dx
  41473e:	sub    eax,0x48facf9
  414743:	das    
  414744:	mov    ecx,0x6baf06d
  414749:	mov    dh,BYTE PTR [edx-0xf]
  41474c:	test   DWORD PTR [esi+0x38],esp
  41474f:	outs   dx,BYTE PTR ds:[esi]
  414750:	xchg   esi,eax
  414751:	fwait
  414752:	xor    edx,DWORD PTR [edi-0x21]
  414755:	inc    esp
  414756:	dec    esi
  414757:	shl    BYTE PTR [eax-0x15],0xb3
  41475b:	(bad)  
  41475c:	out    dx,eax
  41475d:	nop
  41475e:	jae    0x414710
  414760:	jae    0x414734
  414762:	xor    ch,ah
  414764:	add    esp,ecx
  414766:	fild   WORD PTR [edx]
  414768:	xchg   esi,eax
  414769:	aad    0x1b
  41476b:	and    eax,0xcc7384d2
  414770:	popa   
  414771:	jl     0x4147dd
  414773:	and    eax,0x4c28f7e8
  414778:	ins    DWORD PTR es:[edi],dx
  414779:	outs   dx,DWORD PTR ds:[esi]
  41477a:	inc    esp
  41477b:	sar    DWORD PTR [ebp+0x59],0xd8
  41477f:	mov    eax,ds:0x7b1323a8
  414784:	mov    ds:0x7d471353,eax
  414789:	jo     0x4147e1
  41478b:	cli    
  41478c:	jge    0x4147ee
  41478e:	ficom  WORD PTR [ebx+0x44]
  414791:	xor    DWORD PTR [eax+0x7ce8e7e6],esi
  414797:	test   BYTE PTR [edx+0x1c],bl
  41479a:	mov    dh,0xf7
  41479c:	sti    
  41479d:	jno    0x41477c
  41479f:	pop    esi
  4147a0:	jno    0x4147e0
  4147a2:	and    BYTE PTR [edi+0x131723e5],bh
  4147a8:	pusha  
  4147a9:	rcr    ah,0x8b
  4147ac:	loope  0x4147dc
  4147ae:	sub    DWORD PTR [ebx-0x5d12178d],ebx
  4147b4:	mov    bh,0x30
  4147b6:	inc    edi
  4147b7:	in     eax,dx
  4147b8:	fdiv   DWORD PTR [esi+0x28227a76]
  4147be:	frstor [esi-0x572f4599]
  4147c4:	ret    
  4147c5:	cld    
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	push   cs
  4147c8:	(bad)  
  4147c9:	fninit 
  4147cb:	adc    DWORD PTR [edi+0x17b25d97],ebp
  4147d1:	in     eax,0x77
  4147d3:	fmul   QWORD PTR [eax-0x8]
  4147d6:	mov    dh,0x6
  4147d8:	xor    esp,edx
  4147da:	and    cl,bl
  4147dc:	mov    ecx,0x6ec6ea20
  4147e1:	or     al,dh
  4147e3:	jns    0x41482f
  4147e5:	jne    0x4147a4
  4147e7:	xchg   BYTE PTR [esi],cl
  4147e9:	imul   edx,DWORD PTR [esi+eiz*4],0xfffffff7
  4147ed:	sub    esi,DWORD PTR [ebx]
  4147ef:	jp     0x4147d5
  4147f1:	sbb    eax,0x444764e9
  4147f6:	add    edi,DWORD PTR [edi+0x69]
  4147f9:	sbb    BYTE PTR [ebp-0x7],dh
  4147fc:	fstp   DWORD PTR [eax-0x40]
  4147ff:	inc    DWORD PTR [edx+0x46]
  414802:	or     al,0x57
  414805:	mov    ds:0x62e52c2b,eax
  41480a:	fwait
  41480b:	(bad)  
  41480c:	lock aad 0x27
  41480f:	icebp  
  414810:	pop    edx
  414811:	mov    edx,ebx
  414813:	(bad)  
  414815:	fistp  WORD PTR [ecx-0x1a]
  414818:	pop    ebp
  414819:	inc    edi
  41481a:	jb     0x41485c
  41481c:	mov    ch,0x58
  41481e:	pop    ecx
  41481f:	inc    edi
  414820:	test   BYTE PTR [edx-0x10df8e68],ah
  414826:	inc    ecx
  414827:	jne    0x4147aa
  414829:	(bad)  
  41482a:	(bad)  
  41482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41482d:	add    cl,BYTE PTR [edx+0x5a]
  414830:	mov    ah,0x69
  414832:	loop   0x4147d2
  414834:	sbb    eax,0x3e6baabd
  414839:	(bad)  
  41483a:	mov    al,ds:0xcdb09f55
  41483f:	scas   al,BYTE PTR es:[edi]
  414840:	imul   edx,DWORD PTR [ebx+0x7cedf014],0xe22df782
  41484a:	jmp    DWORD PTR [eax]
  41484c:	push   0xf29ab216
  414851:	mov    dh,0x8b
  414853:	xchg   esp,eax
  414854:	(bad)  
  414855:	in     al,0xd2
  414857:	jp     0x414869
  414859:	mov    bh,BYTE PTR [edi+0x8]
  41485c:	(bad)  
  41485d:	pop    ss
  41485e:	mov    al,ds:0x7493b6f2
  414863:	(bad)  
  414864:	outs   dx,BYTE PTR ds:[esi]
  414865:	mov    eax,0xbba279ff
  41486a:	test   eax,0xb3d2aeb1
  41486f:	stc    
  414870:	push   0xffffffc5
  414872:	push   edx
  414873:	aaa    
  414874:	retf   
  414875:	cmp    eax,0xc71a69fd
  41487a:	jno    0x4148cc
  41487c:	add    ecx,DWORD PTR [edx-0x66]
  41487f:	fidivr WORD PTR [eax]
  414881:	xchg   ebx,eax
  414882:	pop    esi
  414883:	fadd   QWORD PTR gs:[eax]
  414886:	jecxz  0x41487b
  414888:	adc    DWORD PTR [ecx-0x1a],edx
  41488b:	stos   BYTE PTR es:[edi],al
  41488c:	xchg   ebp,eax
  41488d:	mov    ebp,0xbe120c34
  414892:	push   edx
  414893:	pop    ds
  414894:	sub    eax,DWORD PTR [edi+eax*8-0x6fbe8288]
  41489b:	inc    ecx
  41489c:	std    
  41489d:	adc    eax,DWORD PTR [ebx-0x5907d838]
  4148a3:	lds    edi,FWORD PTR [ebp+0x546c2e58]
  4148a9:	fs mov eax,0x3f81d2
  4148af:	ins    BYTE PTR es:[edi],dx
  4148b0:	mov    ch,0x83
  4148b2:	out    0x71,al
  4148b4:	out    dx,al
  4148b5:	in     eax,dx
  4148b6:	and    eax,0x70289c0d
  4148bb:	jno    0x414901
  4148bd:	dec    esp
  4148be:	xchg   esp,eax
  4148bf:	pop    ecx
  4148c0:	push   esp
  4148c1:	clc    
  4148c2:	xchg   ebp,eax
  4148c3:	sar    BYTE PTR [edx-0x165c7b39],1
  4148c9:	xor    DWORD PTR [ebx],esi
  4148cb:	inc    eax
  4148cc:	jge    0x4148f3
  4148ce:	ret    0xe60d
  4148d1:	sub    BYTE PTR [edi+esi*2],al
  4148d4:	mov    BYTE PTR [ebp+0x3d],0x55
  4148d8:	std    
  4148d9:	pop    ecx
  4148da:	or     ebx,DWORD PTR [ebp-0x76cd0bf6]
  4148e0:	dec    ebx
  4148e1:	lods   al,BYTE PTR ds:[esi]
  4148e2:	(bad)  [esi]
  4148e4:	mov    esi,DWORD PTR [esi-0x235d31c3]
  4148ea:	jne    0x414912
  4148ec:	pop    edx
  4148ed:	es dec esi
  4148ef:	mov    ecx,0xf30b8f69
  4148f4:	add    al,0x5c
  4148f6:	mov    esi,0xb6a7a283
  4148fb:	push   ebp
  4148fc:	mov    edx,ecx
  4148fe:	or     al,0x43
  414900:	mov    al,0x9e
  414902:	push   edi
  414903:	sbb    ecx,DWORD PTR fs:[edx]
  414906:	ins    BYTE PTR es:[edi],dx
  414907:	jno    0x41493b
  414909:	adc    al,0x1a
  41490b:	div    BYTE PTR [ecx+0x2000f416]
  414911:	jecxz  0x414907
  414913:	dec    esi
  414914:	into   
  414915:	(bad)  
  414916:	retf   
  414917:	retf   0xd12d
  41491a:	dec    edi
  41491b:	ins    BYTE PTR es:[edi],dx
  41491c:	nop
  41491d:	js     0x41496c
  41491f:	das    
  414920:	mov    al,BYTE PTR [eax]
  414922:	add    DWORD PTR [ebx],eax
  414924:	ds mov al,bl
  414927:	sahf   
  414928:	enter  0x733f,0x60
  41492c:	out    dx,al
  41492d:	lods   al,BYTE PTR ds:[esi]
  41492e:	and    BYTE PTR [edx],0xc2
  414931:	dec    ebx
  414932:	repz mov ch,0x26
  414935:	call   ecx
  414937:	icebp  
  414938:	(bad)  
  414939:	and    al,0x99
  41493b:	pushf  
  41493c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41493d:	add    DWORD PTR [ebp+0x62f215e9],esp
  414943:	lods   al,BYTE PTR ds:[esi]
  414944:	pusha  
  414945:	outs   dx,BYTE PTR ds:[esi]
  414946:	xor    bh,BYTE PTR [ecx]
  414948:	rcr    BYTE PTR [edi-0x7a],0x1f
  41494c:	aam    0xff
  41494e:	call   0xd03d:0xdf263fa2
  414955:	xor    ebx,eax
  414957:	sar    BYTE PTR [ecx+ebx*1-0x3fb40c57],1
  41495e:	inc    ebp
  41495f:	mov    BYTE PTR ds:0xe39187a6,bl
  414965:	pop    ebp
  414966:	mov    DWORD PTR [edx-0x4f],esi
  414969:	push   DWORD PTR [esi+0x7d2ff512]
  41496f:	mov    eax,ds:0xc108a666
  414974:	jo     0x414990
  414976:	cmp    DWORD PTR ds:0xf8f1,0x4a
  41497c:	and    ch,dl
  41497e:	pop    ds
  41497f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414980:	aas    
  414981:	push   ss
  414982:	scas   al,BYTE PTR es:[edi]
  414983:	leave  
  414984:	mov    ebp,0x8614a279
  414989:	dec    esp
  41498a:	push   ebx
  41498b:	rcr    DWORD PTR [edi+0xd],1
  41498e:	sbb    al,0x89
  414990:	push   edi
  414991:	call   0xe5d4689c
  414996:	cmp    eax,0xd68a206a
  41499b:	ret    
  41499c:	(bad)  
  41499d:	clc    
  41499e:	fild   DWORD PTR [esi-0x5f]
  4149a1:	xchg   esp,eax
  4149a2:	call   0x32c9da7c
  4149a7:	add    eax,0xfa872f5d
  4149ac:	dec    ebx
  4149ad:	fxch   st(4)
  4149af:	and    ecx,DWORD PTR [ebp-0x6a]
  4149b2:	aam    0xca
  4149b4:	psllw  mm1,QWORD PTR [ebx-0x28]
  4149b8:	fmul   DWORD PTR [ecx-0x55a07ecc]
  4149be:	add    eax,0x76138c6a
  4149c3:	popa   
  4149c4:	fisttp QWORD PTR [eax+0x11]
  4149c7:	inc    ecx
  4149c8:	xchg   edi,eax
  4149c9:	mov    esp,0x1106c231
  4149ce:	aas    
  4149cf:	or     DWORD PTR [ebx+edx*8+0x7f6b7055],esi
  4149d6:	out    0x40,al
  4149d8:	mov    ch,0x17
  4149da:	in     eax,0x85
  4149dc:	dec    eax
  4149dd:	jmp    0x686fcea1
  4149e2:	adc    bh,BYTE PTR ds:0x9dd50119
  4149e8:	xchg   ax,ax
  4149ea:	xchg   edx,eax
  4149eb:	lea    edi,[esi]
  4149ed:	adc    DWORD PTR [ecx+0x4e],edx
  4149f0:	sahf   
  4149f1:	in     al,0xe8
  4149f3:	js     0x414a0d
  4149f5:	shl    BYTE PTR [eax+0x191f5da],cl
  4149fb:	stos   DWORD PTR es:[edi],eax
  4149fc:	xlat   BYTE PTR ds:[ebx]
  4149fd:	pushf  
  4149fe:	out    dx,eax
  4149ff:	push   esi
  414a00:	jle    0x414a01
  414a02:	shl    ch,0xaa
  414a05:	push   esi
  414a06:	mov    ebp,0xafe6ec7a
  414a0b:	sub    eax,0x507fb45b
  414a10:	mov    ebx,0xfff64fa8
  414a15:	xchg   DWORD PTR [ebx],edx
  414a17:	in     al,dx
  414a18:	and    al,0x9a
  414a1a:	gs mov cl,0x64
  414a1d:	scas   eax,DWORD PTR es:[edi]
  414a1e:	inc    edx
  414a1f:	sbb    DWORD PTR [edi-0x55],esi
  414a22:	pop    es
  414a23:	in     eax,dx
  414a24:	xchg   esp,eax
  414a25:	ss loopne 0x4149d4
  414a28:	pop    eax
  414a29:	or     DWORD PTR [esi+ecx*8],ebp
  414a2c:	adc    ecx,ebx
  414a2e:	cmp    DWORD PTR [eax],edx
  414a30:	pop    ecx
  414a31:	jo     0x414aa9
  414a33:	iret   
  414a34:	leave  
  414a35:	not    BYTE PTR ds:0x9d0c9684
  414a3b:	in     eax,0x79
  414a3d:	mov    esp,0x49d15f0a
  414a42:	mov    ds:0x9a0e9e19,al
  414a47:	sub    ah,BYTE PTR ds:0xd1a25de7
  414a4d:	fwait
  414a4e:	shr    BYTE PTR [esi-0x5b],1
  414a51:	int    0xe5
  414a53:	push   edi
  414a54:	scas   eax,DWORD PTR es:[edi]
  414a55:	add    DWORD PTR [edi-0x11],esi
  414a58:	sbb    bh,BYTE PTR [eax+ebx*2-0x2d]
  414a5c:	ret    0x1834
  414a5f:	daa    
  414a60:	icebp  
  414a61:	popf   
  414a62:	clc    
  414a63:	pop    esi
  414a64:	xor    edi,DWORD PTR [ebx+esi*8-0x75e5c34]
  414a6b:	mov    ebx,0x3662050e
  414a70:	xor    eax,0x148448ae
  414a75:	mov    eax,ss
  414a77:	mov    eax,ds:0x8508eda2
  414a7c:	call   0xd1f2:0xc9f24100
  414a83:	jb     0x414a8c
  414a85:	dec    ebx
  414a86:	rcl    eax,0x61
  414a89:	xor    BYTE PTR [edx+0x4b1c73],dh
  414a8f:	cwde   
  414a90:	fs inc ebp
  414a92:	dec    esp
  414a93:	inc    esp
  414a94:	pop    esp
  414a95:	leave  
  414a96:	out    dx,eax
  414a97:	mov    ecx,0x905b249b
  414a9c:	daa    
  414a9d:	mov    ebx,DWORD PTR [esi+0x42]
  414aa0:	inc    esi
  414aa1:	and    eax,0x69729c1e
  414aa6:	gs enter 0x7729,0xa6
  414aab:	or     ecx,DWORD PTR [edi+0x1923e564]
  414ab1:	test   al,0xb0
  414ab3:	lods   eax,DWORD PTR ds:[esi]
  414ab4:	nop
  414ab5:	add    al,0x56
  414ab7:	pop    esi
  414ab8:	inc    ebx
  414ab9:	sar    BYTE PTR [eax-0x477346ac],1
  414abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ac0:	rcl    DWORD PTR [eax+0x7aa23c19],1
  414ac6:	out    dx,eax
  414ac7:	adc    ebp,DWORD PTR [eax]
  414ac9:	add    DWORD PTR [ecx+0x6a],esp
  414acc:	fisubr WORD PTR [ecx]
  414ace:	fcom   st(4)
  414ad0:	add    DWORD PTR [eax-0x60],ebx
  414ad3:	push   eax
  414ad4:	add    eax,0x95e36666
  414ad9:	mov    ch,0xfc
  414adb:	xchg   ebp,eax
  414adc:	or     DWORD PTR [edx],ebp
  414ade:	mov    edi,0xe918cca3
  414ae3:	xor    al,0xd9
  414ae5:	out    dx,al
  414ae6:	inc    edi
  414ae7:	outs   dx,DWORD PTR ds:[esi]
  414ae8:	mov    DWORD PTR [eax+0x26],esi
  414aeb:	xchg   edi,eax
  414aec:	pop    ds
  414aed:	jae    0x414b2b
  414aef:	shl    BYTE PTR [esi+0x54],cl
  414af2:	adc    al,0x1c
  414af4:	sub    DWORD PTR [ebp-0x5],0x6c
  414af8:	dec    eax
  414af9:	icebp  
  414afa:	push   0x5cb2bb21
  414aff:	cmp    bl,BYTE PTR [ecx-0x4d]
  414b02:	(bad)  
  414b03:	xchg   edx,eax
  414b04:	mov    edi,0x920dd0dc
  414b09:	xchg   esp,eax
  414b0a:	cli    
  414b0b:	retf   0xd889
  414b0e:	adc    BYTE PTR [edx],cl
  414b10:	push   es
  414b11:	adc    DWORD PTR [eax+0x7ae09f5c],edx
  414b17:	xor    esp,DWORD PTR [eax]
  414b19:	xchg   edx,eax
  414b1a:	in     al,dx
  414b1b:	aas    
  414b1c:	mov    bh,0x77
  414b1e:	das    
  414b1f:	inc    eax
  414b20:	call   0xbdaacc22
  414b25:	pop    edi
  414b26:	icebp  
  414b27:	sub    BYTE PTR [eax+0x7e],bl
  414b2a:	sub    BYTE PTR [esi],dl
  414b2c:	out    dx,eax
  414b2d:	pop    ebp
  414b2e:	cmp    DWORD PTR [ebx+0x3b],eax
  414b31:	scas   al,BYTE PTR es:[edi]
  414b32:	jae    0x414ae4
  414b34:	and    al,0x9c
  414b36:	sub    dh,BYTE PTR [eax+0x2b398d2e]
  414b3c:	or     eax,0xca8adfe5
  414b41:	shr    edx,0xf8
  414b44:	repz test DWORD PTR [eax-0x351cffca],edi
  414b4b:	repz std 
  414b4d:	outs   dx,DWORD PTR ds:[esi]
  414b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b4f:	mov    ds:0x7bcc35c7,al
  414b54:	sbb    eax,0xf0198820
  414b59:	int3   
  414b5a:	repz int3 
  414b5c:	loop   0x414afe
  414b5e:	aad    0x56
  414b60:	int3   
  414b61:	or     eax,0x8d26b1d6
  414b66:	xchg   edx,eax
  414b67:	sub    al,0x88
  414b69:	fwait
  414b6a:	add    dl,cl
  414b6c:	out    dx,al
  414b6d:	lahf   
  414b6e:	dec    ebx
  414b6f:	mov    ds:0x844e5941,al
  414b74:	rcr    BYTE PTR [edi-0x566ef6b5],1
  414b7a:	daa    
  414b7b:	gs pop es
  414b7d:	(bad)  
  414b7e:	push   edx
  414b7f:	aaa    
  414b80:	fdivr  QWORD PTR [ecx]
  414b82:	cdq    
  414b83:	sbb    esi,DWORD PTR [ebp-0x79]
  414b86:	mov    esp,0x1c2ffba9
  414b8b:	or     ebp,ebx
  414b8d:	inc    ecx
  414b8e:	xchg   esi,eax
  414b8f:	(bad)  
  414b90:	aaa    
  414b91:	je     0x414bba
  414b93:	div    BYTE PTR [esi]
  414b95:	or     eax,0x9bfaf6a7
  414b9a:	mov    bh,0x54
  414b9c:	dec    ebp
  414b9d:	ret    0x7e14
  414ba0:	cdq    
  414ba1:	icebp  
  414ba2:	test   ebp,esp
  414ba4:	cmp    al,0x9c
  414ba6:	fwait
  414ba7:	or     al,bl
  414ba9:	add    ecx,DWORD PTR [eax]
  414bab:	div    BYTE PTR ds:0xa830b940
  414bb1:	test   eax,0xc0a3d70
  414bb6:	xlat   BYTE PTR ds:[ebx]
  414bb7:	push   esp
  414bb8:	cmc    
  414bb9:	out    dx,eax
  414bba:	int3   
  414bbb:	int    0x6e
  414bbd:	sbb    al,0xc4
  414bbf:	cld    
  414bc0:	xor    DWORD PTR [ebp-0x27],esi
  414bc3:	jne    0x414bfd
  414bc5:	js     0x414bcd
  414bc7:	aas    
  414bc8:	int    0x44
  414bca:	dec    ebp
  414bcb:	(bad)  
  414bcc:	test   al,0xc9
  414bce:	pop    es
  414bcf:	repnz or al,0x99
  414bd2:	es enter 0xbc2,0x73
  414bd7:	pop    es
  414bd8:	ss xchg edx,eax
  414bda:	stc    
  414bdb:	or     ebx,esi
  414bdd:	inc    esp
  414bde:	xchg   ebp,eax
  414bdf:	loop   0x414c2d
  414be1:	iret   
  414be2:	and    eax,0xf35bdca8
  414be7:	ret    0xbb1a
  414bea:	adc    BYTE PTR [edx-0x54],dh
  414bed:	dec    esi
  414bee:	sbb    eax,0x6bf058db
  414bf3:	push   cs
  414bf4:	cmp    al,0xb4
  414bf6:	test   al,0x39
  414bf8:	mov    ds:0xa15d65f3,al
  414bfd:	sub    esp,DWORD PTR [ebx-0x24fc9ee3]
  414c03:	push   ebx
  414c04:	cmp    BYTE PTR [esi+edx*1],0x13
  414c08:	xor    eax,0xf555824d
  414c0d:	mul    bh
  414c0f:	jo     0x414c68
  414c11:	add    DWORD PTR [esi],esp
  414c13:	lods   eax,DWORD PTR ds:[esi]
  414c14:	cmp    cl,BYTE PTR [esi+0x13]
  414c17:	repnz xor esi,edi
  414c1a:	push   ebx
  414c1b:	mov    BYTE PTR [ebx],ah
  414c1d:	arpl   sp,si
  414c1f:	lock xchg esp,eax
  414c21:	and    BYTE PTR [edi-0x24],dl
  414c24:	ds jbe 0x414c7f
  414c27:	jne    0x414bfd
  414c29:	jmp    0xaae8:0x8bd909ef
  414c30:	fwait
  414c31:	ins    BYTE PTR es:[edi],dx
  414c32:	sub    DWORD PTR [esi-0x31],ebp
  414c35:	or     ebp,0x1e40b6b6
  414c3b:	sar    dh,1
  414c3d:	inc    edi
  414c3e:	adc    DWORD PTR [ecx+edx*1+0x7e39aeeb],esp
  414c45:	call   0x906:0x2fd4d657
  414c4c:	jp     0x414c5c
  414c4e:	push   0x56
  414c50:	inc    ebx
  414c51:	sar    bl,cl
  414c53:	push   cs
  414c54:	jbe    0x414c56
  414c56:	daa    
  414c57:	sub    ebp,esp
  414c59:	div    DWORD PTR [eax-0x56]
  414c5c:	ins    BYTE PTR es:[edi],dx
  414c5d:	loope  0x414c23
  414c5f:	loopne 0x414c5c
  414c61:	std    
  414c62:	mov    esp,DWORD PTR [ebx+0x2]
  414c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c66:	and    eax,0xed3c4869
  414c6b:	xchg   esi,eax
  414c6c:	(bad)  
  414c6d:	xlat   BYTE PTR ds:[ebx]
  414c6e:	pop    es
  414c6f:	mov    BYTE PTR [eax-0x707ce497],cl
  414c75:	xor    edi,edi
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	(bad)  [ebx]
  414c7a:	cmp    esi,edi
  414c7c:	repnz push 0x58
  414c7f:	adc    ebp,DWORD PTR [edx-0x68420922]
  414c85:	mov    eax,0x5826aa93
  414c8a:	(bad)  
  414c8c:	or     eax,0x81eb2527
  414c91:	push   es
  414c92:	out    dx,eax
  414c93:	je     0x414cc3
  414c95:	push   ebp
  414c96:	push   ebp
  414c97:	push   ebp
  414c98:	inc    esp
  414c99:	jmp    0x414c72
  414c9b:	push   ebp
  414c9c:	nop
  414c9d:	and    ebx,0x9f2a7777
  414ca3:	mov    dh,ah
  414ca5:	retf   
  414ca6:	daa    
  414ca7:	mov    al,0x5c
  414ca9:	stc    
  414caa:	mov    ecx,esp
  414cac:	jmp    0xb0ed3412
  414cb1:	inc    ecx
  414cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb3:	shl    esi,cl
  414cb5:	mov    ebp,0xb1edd8f1
  414cba:	inc    eax
  414cbb:	imul   ebp,edx,0x37c523c1
  414cc1:	jge    0x414d37
  414cc3:	cmp    DWORD PTR [ebp-0x4c],eax
  414cc6:	adc    DWORD PTR [ecx+eiz*1-0x555025e2],0xffffff8b
  414cce:	mov    ecx,0xb44f7d2a
  414cd3:	icebp  
  414cd4:	out    0x1f,eax
  414cd6:	cld    
  414cd7:	inc    edi
  414cd8:	xchg   edi,eax
  414cd9:	retf   0xc60e
  414cdc:	loopne 0x414d35
  414cde:	jnp    0x414d0c
  414ce0:	adc    eax,DWORD PTR [edi]
  414ce2:	js     0x414d09
  414ce4:	popa   
  414ce5:	gs (bad) 
  414ce8:	sub    eax,0x30e39249
  414ced:	jg     0x414d54
  414cef:	jmp    0x87b00854
  414cf4:	inc    eax
  414cf5:	test   DWORD PTR [ebp-0x6b],0x5438dce4
  414cfc:	inc    esp
  414cfd:	(bad)  
  414cfe:	adc    BYTE PTR [edx-0x66ab7039],ch
  414d04:	(bad)  
  414d05:	or     eax,0x323603c8
  414d0a:	cld    
  414d0b:	mov    ebp,0x161af343
  414d10:	sahf   
  414d11:	cmp    ebx,edx
  414d13:	fwait
  414d14:	inc    ecx
  414d15:	aaa    
  414d16:	sbb    al,0xc3
  414d18:	repnz xor BYTE PTR [edi-0x58],0x2d
  414d1d:	lock dec ebp
  414d1f:	cmp    BYTE PTR [eax],ah
  414d21:	in     eax,0xba
  414d23:	xlat   BYTE PTR ds:[ebx]
  414d24:	pushf  
  414d25:	ins    BYTE PTR es:[edi],dx
  414d26:	cli    
  414d27:	into   
  414d28:	test   eax,0x7bdca78
  414d2d:	add    eax,0x50bcc38e
  414d32:	mov    DWORD PTR [edi-0x54],edi
  414d35:	mov    esi,0x2c0a0ad6
  414d3a:	mov    ebx,0x94d495e3
  414d3f:	nop
  414d40:	rcr    cl,0xfe
  414d43:	or     esp,eax
  414d45:	je     0x414d81
  414d47:	push   ebx
  414d48:	imul   ebx,esp,0xffffffbe
  414d4b:	mov    dl,bl
  414d4d:	xchg   ebx,eax
  414d4e:	call   0xb98b:0xa5caf309
  414d55:	jne    0x414cf2
  414d57:	cli    
  414d58:	rcl    BYTE PTR [ecx+edx*4-0x3d],1
  414d5c:	fs hlt 
  414d5e:	bound  ebx,QWORD PTR [edi]
  414d60:	add    dh,BYTE PTR [edi]
  414d62:	mov    ?,WORD PTR [eax+0x28d46132]
  414d68:	sbb    al,0x21
  414d6a:	xor    al,0xd5
  414d6c:	jp     0x414d31
  414d6e:	cmp    BYTE PTR ds:0x6a57bfa0,bl
  414d74:	or     BYTE PTR [esi-0x56120d58],ch
  414d7a:	into   
  414d7b:	or     eax,0x356b2c69
  414d80:	mov    ebp,0xb43b677f
  414d85:	call   0xadc5:0xb23a0486
  414d8c:	xor    al,0xa4
  414d8e:	sub    ch,bl
  414d90:	mov    ch,0x8
  414d92:	bound  ebx,QWORD PTR [esi]
  414d94:	imul   esp,DWORD PTR [esi-0x30],0xed8a6627
  414d9b:	and    al,0xf
  414d9d:	rcl    ecx,0x6c
  414da0:	push   ss
  414da1:	idiv   DWORD PTR [edx]
  414da3:	dec    esi
  414da4:	mov    eax,0xb2925fc6
  414da9:	in     al,0xa7
  414dab:	(bad)  [esi+eax*4-0x56]
  414daf:	test   BYTE PTR [ebx],ch
  414db1:	add    ecx,DWORD PTR [edi]
  414db3:	sub    ebp,ebp
  414db5:	icebp  
  414db6:	push   ds
  414db7:	inc    ebx
  414db8:	and    edi,esp
  414dba:	(bad)  
  414dbb:	push   edi
  414dbc:	mov    DWORD PTR [eax+0x7fcbf44b],edi
  414dc2:	adc    al,0xd3
  414dc4:	mov    ebp,0xe0897bd
  414dc9:	or     ebx,DWORD PTR [ebx]
  414dcb:	es sub eax,0xa2e71adf
  414dd1:	inc    edi
  414dd2:	js     0x414d88
  414dd4:	adc    BYTE PTR [ebp-0xb],cl
  414dd7:	or     dh,BYTE PTR [esi-0x36]
  414dda:	inc    esp
  414ddb:	pop    edx
  414ddc:	jns    0x414dfc
  414dde:	into   
  414ddf:	aaa    
  414de0:	inc    ecx
  414de1:	les    ecx,FWORD PTR [edx-0x37c5bffe]
  414de7:	add    BYTE PTR [esi],ch
  414de9:	push   eax
  414dea:	shl    BYTE PTR [esi+0x76],0x6f
  414dee:	inc    ebp
  414def:	mul    ecx
  414df1:	inc    edi
  414df2:	pop    ebx
  414df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414df4:	xchg   ecx,eax
  414df5:	in     al,dx
  414df6:	mov    ss:0xf596a0db,eax
  414dfc:	fisub  WORD PTR [esi]
  414dfe:	fwait
  414dff:	xor    eax,0xf78753cc
  414e04:	xor    edx,DWORD PTR [edi-0x4]
  414e07:	popf   
  414e08:	test   BYTE PTR [edx+edx*4],ah
  414e0b:	add    DWORD PTR [edi+0x7],eax
  414e0e:	xchg   BYTE PTR [ebp+0x3d],ah
  414e11:	ja     0x414e20
  414e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e14:	neg    BYTE PTR [esi]
  414e16:	enter  0xc94d,0x78
  414e1a:	add    eax,0xfbaac795
  414e1f:	int    0xb9
  414e21:	mov    bh,BYTE PTR ds:0x5c85c12c
  414e27:	push   ecx
  414e28:	xchg   edi,eax
  414e29:	bound  edi,QWORD PTR [ebx+0x784271ea]
  414e2f:	push   ebp
  414e30:	shr    esp,cl
  414e32:	and    al,0x6
  414e34:	cmc    
  414e35:	push   0x7350df60
  414e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e3b:	pop    ebx
  414e3c:	shl    BYTE PTR [esi],cl
  414e3e:	jne    0x414e48
  414e40:	inc    eax
  414e41:	out    0x73,eax
  414e43:	stos   DWORD PTR es:[edi],eax
  414e44:	ja     0x414de6
  414e46:	std    
  414e47:	adc    cl,cl
  414e49:	and    DWORD PTR [esp+edx*2],esp
  414e4c:	mov    eax,0xaf22d8f5
  414e51:	and    al,0xe3
  414e53:	jnp    0x414e15
  414e55:	mov    ecx,0xf715c12b
  414e5a:	rol    BYTE PTR [edx+0xa],1
  414e5d:	mov    WORD PTR [ebx-0x20],ss
  414e60:	add    BYTE PTR [ebp+0x15134cb2],dh
  414e66:	mov    dh,0xfc
  414e68:	in     al,0x4e
  414e6a:	pop    esi
  414e6b:	push   cs
  414e6c:	jg     0x414e8b
  414e6e:	popa   
  414e6f:	jne    0x414df7
  414e71:	jnp    0x414e0c
  414e73:	mov    ecx,0x531ad26e
  414e78:	hlt    
  414e79:	xchg   DWORD PTR [ebx-0xa30661e],eax
  414e7f:	pop    ecx
  414e80:	popa   
  414e81:	jns    0x414eea
  414e83:	dec    edi
  414e84:	ficomp DWORD PTR [ebx]
  414e86:	icebp  
  414e87:	pop    esi
  414e89:	lea    ax,[esi-0x64]
  414e8d:	mov    esp,0x67b6795f
  414e92:	push   ebx
  414e93:	loope  0x414ef9
  414e95:	cmp    bh,BYTE PTR [ebx]
  414e97:	shl    DWORD PTR ds:0xaf591780,0x66
  414e9e:	cdq    
  414e9f:	in     al,0xd0
  414ea1:	jbe    0x414edd
  414ea3:	jle    0x414e6c
  414ea5:	es clc 
  414ea7:	clc    
  414ea8:	into   
  414ea9:	fimul  WORD PTR [esi+0xd]
  414eac:	adc    BYTE PTR [ebx],dh
  414eae:	mov    al,0xe3
  414eb0:	jecxz  0x414ebe
  414eb2:	aad    0x26
  414eb4:	ror    bh,cl
  414eb6:	retf   0x7b1f
  414eb9:	out    0x13,al
  414ebb:	jmp    0xed21ddb5
  414ec0:	das    
  414ec1:	and    DWORD PTR [esi+0x1249821],0xffffff91
  414ec8:	mul    BYTE PTR [ebx+edi*1-0x28]
  414ecc:	aam    0xc0
  414ece:	sub    BYTE PTR [edx-0x48],0x8d
  414ed2:	cmp    eax,0xc9bed657
  414ed7:	retf   
  414ed8:	(bad)  
  414ed9:	ficom  DWORD PTR [ecx+0x438a00f7]
  414edf:	jle    0x414e93
  414ee1:	push   esp
  414ee2:	jle    0x414f23
  414ee4:	popa   
  414ee5:	leave  
  414ee6:	das    
  414ee7:	dec    esi
  414ee8:	push   ecx
  414ee9:	sahf   
  414eea:	lods   eax,DWORD PTR ds:[esi]
  414eeb:	mov    dl,0x87
  414eed:	div    dh
  414eef:	dec    ecx
  414ef0:	ret    0x3aa
  414ef3:	neg    ecx
  414ef5:	stos   BYTE PTR es:[edi],al
  414ef6:	lds    edi,FWORD PTR ds:0x4030eb72
  414efc:	dec    esp
  414efd:	jge    0x414f67
  414eff:	lds    esp,FWORD PTR [edx]
  414f01:	imul   ebp,DWORD PTR [edx],0xffffffaa
  414f04:	dec    ecx
  414f05:	test   BYTE PTR [ebx-0x5d5df99a],dh
  414f0b:	out    dx,al
  414f0c:	mov    esp,ecx
  414f0e:	jnp    0x414f5a
  414f10:	mov    ebp,ebx
  414f12:	rcr    edi,1
  414f14:	pop    ebp
  414f15:	and    cl,BYTE PTR [edi-0x6df2242a]
  414f1b:	ins    BYTE PTR es:[edi],dx
  414f1c:	mov    al,0xc5
  414f1e:	adc    BYTE PTR [ebp+0x3c],dl
  414f21:	das    
  414f22:	loopne 0x414f1e
  414f24:	add    DWORD PTR [edi-0x7],0xee970495
  414f2b:	add    eax,esp
  414f2d:	xchg   esp,eax
  414f2e:	fimul  DWORD PTR [edx-0x55d8ab63]
  414f34:	or     al,0x89
  414f36:	push   esi
  414f37:	sub    al,BYTE PTR [eax+0xe]
  414f3a:	sahf   
  414f3b:	mov    ch,0x32
  414f3d:	mov    eax,0x6d604220
  414f42:	and    eax,0xaaa8f1
  414f47:	lods   al,BYTE PTR ds:[esi]
  414f48:	loopne 0x414f2b
  414f4a:	bound  edx,QWORD PTR [edx+0x11753e42]
  414f50:	xor    eax,0xfd666748
  414f55:	pop    ds
  414f56:	ins    DWORD PTR es:[edi],dx
  414f57:	lahf   
  414f58:	enter  0x79b8,0x81
  414f5c:	xor    eax,0xb1bac35c
  414f61:	cmc    
  414f62:	push   cs
  414f63:	xor    al,0x55
  414f65:	xor    BYTE PTR [eax],al
  414f67:	jb     0x414fe3
  414f69:	and    DWORD PTR [edi+ecx*1-0x18],edx
  414f6d:	and    bh,BYTE PTR [eax-0x11ceef1c]
  414f73:	retf   0x811f
  414f76:	std    
  414f77:	cmp    BYTE PTR [ebp+ebx*2+0x1d8202d7],bh
  414f7e:	loop   0x414f6c
  414f80:	retf   0x7ab5
  414f83:	scas   eax,DWORD PTR es:[edi]
  414f84:	inc    ecx
  414f85:	xor    al,0x90
  414f87:	add    eax,0x3e26beab
  414f8c:	pop    esi
  414f8d:	push   ss
  414f8e:	imul   ebx,DWORD PTR [ebx+0x3f274022],0x27
  414f95:	or     eax,0x18cae49
  414f9a:	imul   esi,DWORD PTR [ecx-0x5eda18ed],0x66
  414fa1:	dec    esi
  414fa2:	ins    BYTE PTR es:[edi],dx
  414fa3:	lea    edx,[eax-0x461d32e2]
  414fa9:	ficom  DWORD PTR [ecx]
  414fab:	pop    ss
  414fac:	repz je 0x414f50
  414faf:	out    dx,al
  414fb0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  414fb2:	push   0x3344819d
  414fb7:	mov    DWORD PTR [edx-0x3447e6e9],ebp
  414fbd:	sbb    eax,0xe044a398
  414fc2:	dec    ebp
  414fc3:	xchg   ebx,eax
  414fc4:	adc    al,0x47
  414fc6:	push   ebp
  414fc7:	dec    esi
  414fc8:	pop    ss
  414fc9:	retf   
  414fca:	sbb    eax,0x3549f40d
  414fcf:	addr16 loope 0x414f5d
  414fd2:	xor    ah,dl
  414fd4:	pop    esp
  414fd5:	out    dx,al
  414fd6:	arpl   WORD PTR [eax],bx
  414fd8:	repnz enter 0xb56e,0xa
  414fdd:	xchg   esp,eax
  414fde:	push   ss
  414fdf:	mov    cl,0x74
  414fe1:	pop    esp
  414fe2:	sub    BYTE PTR [eax],0xf8
  414fe5:	jg     0x415056
  414fe7:	aad    0xe9
  414fe9:	mov    al,ds:0x8a8934a7
  414fee:	xor    edx,DWORD PTR [edi+eiz*8]
  414ff1:	push   edi
  414ff2:	push   ebp
  414ff3:	dec    eax
  414ff4:	push   ebx
  414ff5:	mov    al,bl
  414ff7:	jmp    0xb4a4b14b
  414ffc:	loopne 0x41503c
  414ffe:	fcomp  QWORD PTR [ebp-0x19]
  415001:	push   0x49efe47d
  415006:	jno    0x414fc6
  415008:	mov    edx,ecx
  41500a:	mov    ebx,0x21ecd351
  41500f:	aam    0xa8
  415011:	mov    esp,DWORD PTR [ecx-0x6523af9e]
  415017:	inc    ebp
  415018:	pop    esi
  415019:	sti    
  41501a:	test   DWORD PTR ds:0x4d3584de,esi
  415020:	or     ecx,ebx
  415022:	pop    ss
  415023:	gs jns 0x414fbb
  415026:	iret   
  415027:	test   al,0x64
  415029:	scas   eax,DWORD PTR es:[edi]
  41502a:	mov    bh,0x61
  41502c:	mov    ch,0xbe
  41502e:	call   0xffa37f3b
  415033:	add    bl,al
  415035:	dec    esi
  415036:	sti    
  415037:	repz adc ecx,DWORD PTR [eax+0xc]
  41503b:	xor    edx,DWORD PTR [eax-0x20]
  41503e:	es mov bh,0x21
  415041:	mov    ebx,DWORD PTR [edi]
  415043:	stc    
  415044:	push   esi
  415045:	inc    esi
  415046:	(bad)  
  415047:	sbb    edx,DWORD PTR [edi+ebx*4-0x2e]
  41504b:	jge    0x415020
  41504d:	js     0x414fdf
  41504f:	outs   dx,DWORD PTR ds:[esi]
  415050:	lahf   
  415051:	fdivp  st(6),st
  415053:	int    0x19
  415055:	cwde   
  415056:	imul   ecx,ebx,0x6256f76d
  41505c:	inc    ebp
  41505d:	add    edi,esi
  41505f:	outs   dx,BYTE PTR ds:[esi]
  415060:	mov    ch,bh
  415062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415063:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415065:	adc    BYTE PTR [ebx],cl
  415067:	out    0x7c,eax
  415069:	sub    al,0x71
  41506b:	sbb    al,0xda
  41506d:	dec    ebx
  41506e:	jp     0x41506f
  415070:	jae    0x4150b5
  415072:	loopne 0x415047
  415074:	push   edx
  415075:	xchg   ebp,eax
  415076:	adc    edx,DWORD PTR [ecx]
  415078:	sub    BYTE PTR [edx+ebx*8+0xa],bl
  41507c:	rcr    DWORD PTR [ebx+0x1e],0x10
  415080:	les    ebp,FWORD PTR [edi-0xe96b275]
  415086:	sbb    BYTE PTR [edi],ah
  415088:	leave  
  415089:	sub    al,0x5c
  41508b:	push   ds
  41508c:	jg     0x4150e7
  41508e:	cwde   
  41508f:	sbb    edx,ebp
  415091:	pop    edx
  415092:	sti    
  415093:	sub    dh,dl
  415095:	dec    eax
  415096:	enter  0xe872,0x9d
  41509a:	pop    esi
  41509b:	add    edi,DWORD PTR [eax-0x4eaad142]
  4150a1:	std    
  4150a2:	int3   
  4150a3:	dec    ebx
  4150a4:	sub    ch,ah
  4150a6:	inc    edx
  4150a7:	adc    ah,BYTE PTR [edi+eiz*2]
  4150aa:	mov    bh,0xd8
  4150ac:	mov    esi,0x3d61daeb
  4150b1:	(bad)  
  4150b2:	(bad)  
  4150b4:	test   al,0xd3
  4150b6:	push   ebx
  4150b7:	push   ds
  4150b8:	int    0xae
  4150ba:	loope  0x41509b
  4150bc:	mov    BYTE PTR [eax+0x563129dc],al
  4150c2:	std    
  4150c3:	mov    bl,0x23
  4150c5:	les    edx,FWORD PTR [eax+0x1f]
  4150c8:	mov    eax,ds:0x75aee262
  4150cd:	mov    dl,0x7a
  4150cf:	sti    
  4150d0:	dec    edi
  4150d1:	inc    eax
  4150d2:	test   BYTE PTR [bx],dh
  4150d5:	push   es
  4150d6:	mov    BYTE PTR [esi-0x80],ah
  4150d9:	add    BYTE PTR [edi-0x43],bl
  4150dc:	loopne 0x415091
  4150de:	jns    0x4150ba
  4150e0:	test   edx,ebx
  4150e2:	into   
  4150e3:	repnz stc 
  4150e5:	hlt    
  4150e6:	adc    eax,0x385624bd
  4150eb:	pop    es
  4150ec:	mov    WORD PTR [esi],es
  4150ee:	push   0xffffffdc
  4150f0:	jb     0x41512e
  4150f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150f3:	dec    ebp
  4150f4:	loope  0x415117
  4150f6:	push   ds
  4150f7:	aam    0xbb
  4150f9:	inc    ebp
  4150fa:	or     DWORD PTR [ebx-0x71],0xffffff8c
  4150fe:	shl    DWORD PTR [ebp+0x679782b0],0x76
  415105:	jbe    0x415092
  415107:	test   eax,0x293497e1
  41510c:	mov    ds:0x83ff24c7,eax
  415111:	and    BYTE PTR gs:[ecx+0x24],al
  415115:	xchg   edx,esi
  415117:	movzx  edi,BYTE PTR [eax+0x1a0aa6a4]
  41511e:	cmp    al,ch
  415120:	rol    BYTE PTR [eax-0x6c],cl
  415123:	mov    ebp,0x4035926
  415128:	cmp    al,0xae
  41512a:	sub    BYTE PTR [ecx],cl
  41512c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41512d:	fcomp  QWORD PTR [edi]
  41512f:	mov    al,0x4
  415131:	fstp   QWORD PTR [ebx-0x3c]
  415134:	push   eax
  415135:	push   esi
  415136:	imul   ebp,DWORD PTR [edx-0x72],0x20
  41513a:	fnstenv [ecx+eiz*2-0x559d2e9e]
  415141:	inc    ah
  415143:	inc    ebp
  415144:	add    ecx,0xffffffb3
  415147:	cs jmp 0x415152
  41514a:	mov    dh,0x9d
  41514c:	xchg   ebx,eax
  41514d:	mov    ebx,0x851b8ca0
  415152:	or     ebx,DWORD PTR [edx+0x6f]
  415155:	inc    eax
  415156:	pop    esi
  415157:	mov    ebp,0x11b07e25
  41515c:	add    al,cl
  41515e:	jmp    0x6550:0x798c867d
  415165:	or     ebp,DWORD PTR [ebx]
  415167:	icebp  
  415168:	retf   0x4cae
  41516b:	jae    0x415186
  41516d:	and    edi,DWORD PTR [eax]
  41516f:	dec    ecx
  415170:	gs adc eax,0x48f55ff9
  415176:	std    
  415177:	mov    eax,ds:0x75bf6bdc
  41517c:	in     eax,0xd3
  41517e:	ins    DWORD PTR es:[edi],dx
  41517f:	mov    esp,0xe7d7e1b2
  415184:	cmp    edx,edi
  415186:	mov    esp,0x968d1ae5
  41518b:	pop    edx
  41518c:	sub    al,0xa
  41518e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518f:	loop   0x41518d
  415191:	adc    edi,DWORD PTR [eax]
  415193:	movsx  edx,BYTE PTR [ebp-0x5b]
  415197:	sbb    bh,bh
  415199:	jno    0x415211
  41519b:	mov    bl,0xae
  41519d:	cmc    
  41519e:	inc    ecx
  41519f:	rcr    BYTE PTR [eax],1
  4151a1:	sub    al,0x8f
  4151a3:	(bad)  
  4151a4:	xchg   ecx,eax
  4151a5:	fisttp QWORD PTR [ebp-0x60]
  4151a8:	(bad)  
  4151a9:	fnsave [edi+0x49]
  4151ac:	imul   ebx,esi,0x2173b1f0
  4151b2:	into   
  4151b3:	mov    edx,0x2f1483e7
  4151b8:	mov    bh,0x8f
  4151ba:	adc    ebx,DWORD PTR [ebp-0x699d97e1]
  4151c0:	pop    eax
  4151c1:	jns    0x4151ff
  4151c3:	lahf   
  4151c4:	std    
  4151c5:	ja     0x4151f3
  4151c7:	rcl    BYTE PTR [edi+0x4325335c],1
  4151cd:	mov    esi,0xd9768285
  4151d2:	and    eax,DWORD PTR [ebx+0xb]
  4151d5:	fwait
  4151d6:	pop    eax
  4151d7:	jp     0x415240
  4151d9:	jmp    0x4151f1
  4151db:	xchg   esp,eax
  4151dc:	push   cs
  4151dd:	repnz inc eax
  4151df:	lock xchg ecx,eax
  4151e1:	outs   dx,DWORD PTR ds:[esi]
  4151e2:	push   ds
  4151e3:	or     eax,0x3802ce95
  4151e8:	mov    ecx,0xdc230049
  4151ed:	add    edi,eax
  4151ef:	int3   
  4151f0:	mov    DWORD PTR [esi-0x5c],ebp
  4151f3:	or     ecx,ecx
  4151f5:	in     eax,0x76
  4151f7:	dec    edi
  4151f8:	test   BYTE PTR [ecx],dl
  4151fa:	jl     0x415236
  4151fc:	aad    0x3f
  4151fe:	and    BYTE PTR [eax+esi*2],0xdb
  415202:	dec    edx
  415203:	lods   al,BYTE PTR ds:[esi]
  415204:	push   esi
  415205:	adc    DWORD PTR [eax],ecx
  415207:	xchg   DWORD PTR [ebx],edi
  415209:	add    DWORD PTR [ebx],0x25
  41520c:	cmp    DWORD PTR [esi],edx
  41520e:	cmp    cl,dh
  415210:	in     al,0x50
  415212:	add    DWORD PTR [eax],ebx
  415214:	sbb    ecx,DWORD PTR [ecx+0x27]
  415217:	ss xchg eax,edi
  41521a:	xlat   BYTE PTR ds:[ebx]
  41521b:	pop    ds
  41521c:	push   ds
  41521d:	push   cs
  41521e:	lods   al,BYTE PTR ds:[esi]
  41521f:	push   cs
  415220:	in     al,dx
  415221:	add    al,0x13
  415223:	test   eax,0xd06cd2c1
  415228:	push   ecx
  415229:	xchg   ecx,eax
  41522a:	pop    ebx
  41522b:	stos   DWORD PTR es:[edi],eax
  41522c:	ret    0xdee5
  41522f:	(bad)  
  415231:	dec    eax
  415232:	mov    ebx,0xdddd1b05
  415237:	cmp    DWORD PTR [edi-0x9],eax
  41523a:	inc    ebx
  41523b:	(bad)  
  41523c:	imul   ebp,DWORD PTR [edx-0x701c0783],0x1b754f26
  415246:	or     eax,0xeebd900a
  41524b:	jns    0x415271
  41524d:	xor    eax,0xdf7ac278
  415252:	sub    al,0x9f
  415254:	add    ecx,edx
  415256:	jae    0x41527f
  415258:	(bad)  
  41525a:	ret    
  41525b:	mov    ebp,0xfba2295d
  415260:	sub    BYTE PTR [eax],0xcf
  415263:	fisttp WORD PTR [ebx+0x2f]
  415266:	xchg   edi,eax
  415267:	lea    eax,[esi]
  415269:	jns    0x41524f
  41526b:	mov    ds:0x27a56027,al
  415270:	adc    ebp,eax
  415272:	xor    eax,0x847c9bfc
  415277:	fld    TBYTE PTR [ebx]
  415279:	daa    
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	gs scas eax,DWORD PTR es:[edi]
  41527d:	bound  ebx,QWORD PTR [ecx+edx*2-0x27]
  415281:	sahf   
  415282:	xchg   ecx,eax
  415283:	loop   0x41522f
  415285:	dec    ecx
  415286:	shl    DWORD PTR [edi+0x43],1
  415289:	jns    0x415253
  41528b:	xor    al,0x14
  41528d:	inc    ecx
  41528e:	mov    ebp,0x2240582d
  415293:	xlat   BYTE PTR ds:[ebx]
  415294:	mov    ds:0x3b1718b,eax
  415299:	xor    ecx,ebx
  41529b:	jmp    0x4152ba
  41529d:	stos   DWORD PTR es:[edi],eax
  41529e:	or     bh,dh
  4152a0:	jmp    0xefdfa884
  4152a5:	iret   
  4152a6:	and    DWORD PTR gs:[ecx],eax
  4152a9:	jae    0x415272
  4152ab:	mov    eax,0x77234349
  4152b0:	inc    ebx
  4152b1:	fdivr  DWORD PTR [eax+0x66]
  4152b4:	pop    edi
  4152b5:	inc    ecx
  4152b6:	mov    bl,0x6d
  4152b8:	push   cs
  4152b9:	rcl    ch,0xf
  4152bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152bd:	xor    BYTE PTR [esi-0x5776c07d],al
  4152c3:	push   es
  4152c4:	cmp    BYTE PTR [edx+0x78],ch
  4152c7:	retf   0xc338
  4152ca:	repz cmp DWORD PTR [ebx+0x4510158c],edi
  4152d1:	mov    esi,0x54f6de27
  4152d6:	in     al,dx
  4152d7:	int3   
  4152d8:	aaa    
  4152d9:	inc    esi
  4152da:	push   edx
  4152db:	in     al,0xbf
  4152dd:	test   al,0x85
  4152df:	cmp    al,cl
  4152e1:	push   edi
  4152e2:	push   ds
  4152e3:	call   0xfba:0xd72efcc7
  4152ea:	xor    al,0x7e
  4152ec:	xchg   DWORD PTR [edi+0x401ceaf4],ecx
  4152f2:	stos   DWORD PTR es:[edi],eax
  4152f3:	and    bh,BYTE PTR [ebp+0x24]
  4152f6:	jno    0x415368
  4152f8:	sbb    al,0xef
  4152fa:	push   es
  4152fb:	sbb    al,0xcd
  4152fd:	cmp    ebp,ebx
  4152ff:	test   BYTE PTR [edx+edx*1],dh
  415302:	mov    WORD PTR [ecx],ss
  415304:	ins    BYTE PTR es:[edi],dx
  415305:	(bad)  
  415306:	pop    ebp
  415307:	sub    DWORD PTR [ebp-0x29a9815c],esi
  41530d:	adc    al,0x1d
  41530f:	(bad)  
  415310:	imul   ebp,edx,0xffffffe5
  415313:	popa   
  415314:	push   esi
  415315:	mov    eax,0xe72c219
  41531a:	fcom   st(2)
  41531c:	mov    DWORD PTR [ebx],eax
  41531e:	in     eax,dx
  41531f:	test   eax,0x9df1b153
  415324:	xor    eax,0x973aa8b5
  415329:	cmp    dh,BYTE PTR [edx+edx*4+0x1c]
  41532d:	cmp    al,0x78
  41532f:	xor    ah,bh
  415331:	lock fwait
  415333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415334:	loopne 0x4152cc
  415336:	mov    ?,esp
  415338:	mov    ds:0x722eed7b,eax
  41533d:	aas    
  41533e:	mov    ch,0x6b
  415340:	sbb    DWORD PTR [ebx+esi*1+0x26b1db47],esp
  415347:	stc    
  415348:	xchg   BYTE PTR [eax+0x5028e9d7],bl
  41534e:	pop    ecx
  41534f:	dec    ecx
  415350:	call   FWORD PTR [ebx]
  415352:	cdq    
  415353:	mov    ah,0xf8
  415355:	mov    eax,ds:0xac05ca09
  41535a:	out    0x2b,eax
  41535c:	cli    
  41535d:	mov    al,0xc
  41535f:	mov    esi,0x58f44fd1
  415364:	lea    edi,[eax+edx*1-0x87d1ee2]
  41536b:	das    
  41536c:	nop
  41536d:	out    dx,al
  41536e:	jo     0x4153bd
  415370:	or     al,0xd1
  415372:	jge    0x4153ed
  415374:	add    al,0x84
  415376:	rcl    DWORD PTR [edx],1
  415378:	and    eax,0x2af8d1c9
  41537d:	pusha  
  41537e:	retf   
  41537f:	in     eax,0x88
  415381:	out    0x73,al
  415383:	test   al,0xbf
  415385:	sub    eax,0x54b3b692
  41538a:	stos   DWORD PTR es:[edi],eax
  41538b:	adc    BYTE PTR [edx],ah
  41538d:	inc    esi
  41538e:	repz shl edx,1
  415391:	stos   DWORD PTR es:[edi],eax
  415392:	cmp    al,0x3
  415394:	xchg   DWORD PTR [ebx+0x44],eax
  415397:	dec    esp
  415398:	(bad)  
  415399:	cmp    BYTE PTR [edi-0x30149be3],ah
  41539f:	jp     0x415341
  4153a1:	dec    eax
  4153a2:	les    eax,FWORD PTR [ebp+0x9dd7e1a]
  4153a8:	ds data16 sahf 
  4153ab:	sub    BYTE PTR [ebp+ebx*2+0x455d28f0],0x72
  4153b3:	ret    0x8b8d
  4153b6:	and    al,0x43
  4153b8:	fadd   QWORD PTR ds:0x8926a107
  4153be:	shr    BYTE PTR [esi+0x40],0xda
  4153c2:	inc    edx
  4153c3:	inc    edx
  4153c4:	xchg   edx,eax
  4153c5:	xchg   esi,eax
  4153c6:	sub    BYTE PTR [ebp+0x76],dl
  4153c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153ca:	int    0x81
  4153cc:	mov    WORD PTR [esi+0x6b],?
  4153cf:	retf   
  4153d0:	and    ecx,esi
  4153d2:	mov    esp,0x7da659c
  4153d7:	pop    ecx
  4153d8:	lahf   
  4153d9:	and    ecx,DWORD PTR [ebx-0x42ffcddf]
  4153df:	jb     0x4153c1
  4153e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153e2:	sbb    ecx,DWORD PTR [ebp+0x14]
  4153e5:	ins    BYTE PTR es:[edi],dx
  4153e6:	cwde   
  4153e7:	stos   BYTE PTR es:[edi],al
  4153e8:	jle    0x4153b5
  4153ea:	loope  0x4153c4
  4153ec:	daa    
  4153ed:	xchg   esi,eax
  4153ee:	inc    ecx
  4153ef:	outs   dx,BYTE PTR ds:[esi]
  4153f0:	push   ss
  4153f1:	and    esp,eax
  4153f3:	mov    esi,0xfaab6ad5
  4153f8:	dec    ecx
  4153f9:	in     eax,dx
  4153fa:	dec    eax
  4153fb:	fnstsw WORD PTR [edi+0x3abd0aab]
  415401:	pop    eax
  415402:	or     edx,ebp
  415404:	xor    esi,DWORD PTR [edx]
  415406:	jge    0x4153b7
  415408:	pop    ebx
  415409:	je     0x4153d4
  41540b:	enter  0x107c,0xae
  41540f:	mov    dl,0x29
  415411:	jl     0x4153f9
  415413:	push   esi
  415414:	mov    ebp,0x9a8c6c56
  415419:	clc    
  41541a:	fdivr  QWORD PTR [esi]
  41541c:	inc    eax
  41541d:	dec    eax
  41541e:	mov    DWORD PTR [ebx*1+0x59bb5162],eax
  415425:	dec    esi
  415426:	not    dl
  415428:	mov    ds:0x37dbb43a,al
  41542d:	imul   ebx,DWORD PTR [ecx+ebx*8],0x20
  415431:	cwde   
  415432:	or     eax,DWORD PTR [ebp-0x27a5cb53]
  415438:	sub    DWORD PTR [edx],0x2f
  41543b:	ss push ds
  41543d:	das    
  41543e:	hlt    
  41543f:	cs (bad) 
  415441:	loopne 0x4153fb
  415443:	lods   al,BYTE PTR ds:[esi]
  415444:	test   al,0xbf
  415446:	lahf   
  415447:	loopne 0x415456
  415449:	(bad)  
  41544a:	into   
  41544b:	icebp  
  41544c:	mov    ebx,0x31d7044c
  415451:	xchg   esi,eax
  415452:	mov    bl,0x6e
  415454:	jne    0x4154a5
  415456:	jge    0x41540d
  415458:	je     0x4154c4
  41545a:	jmp    0x4154cb
  41545c:	repnz mov dh,0x9
  41545f:	inc    edi
  415460:	cdq    
  415461:	out    dx,al
  415462:	jecxz  0x4154b3
  415464:	dec    esp
  415465:	int3   
  415466:	jb     0x4154b8
  415468:	fiadd  DWORD PTR [ecx]
  41546a:	lds    esp,FWORD PTR [ebp-0x56]
  41546d:	xchg   esi,eax
  41546e:	adc    bl,bl
  415470:	aad    0x9d
  415472:	stos   DWORD PTR es:[edi],eax
  415473:	xchg   edi,eax
  415474:	retf   
  415475:	call   DWORD PTR [eax+0x6]
  415478:	iret   
  415479:	xor    DWORD PTR [edx+edx*2+0x52],edi
  41547d:	loope  0x4154f2
  41547f:	mov    BYTE PTR [ecx+0x6e9540c4],ah
  415485:	lahf   
  415486:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415488:	out    0xc1,eax
  41548a:	dec    ebx
  41548b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41548c:	adc    al,0xe
  41548e:	pop    ebx
  41548f:	pop    ss
  415490:	and    esi,DWORD PTR [eax]
  415492:	cmp    ecx,ecx
  415494:	sar    BYTE PTR [ecx-0x555c61d6],1
  41549a:	loop   0x4154a6
  41549c:	add    BYTE PTR [edx],bl
  41549e:	and    esp,0xc85fc925
  4154a4:	mov    ecx,0xe549bbe6
  4154a9:	ja     0x415474
  4154ab:	sbb    eax,0x429dacb6
  4154b0:	les    edi,FWORD PTR [eax]
  4154b2:	clc    
  4154b3:	nop
  4154b4:	les    esi,FWORD PTR [esi]
  4154b6:	das    
  4154b7:	in     eax,0xae
  4154b9:	test   DWORD PTR [esi],esp
  4154bb:	jbe    0x41543d
  4154bd:	sub    eax,0xcad8e239
  4154c2:	xor    DWORD PTR [edi-0x43],0x11
  4154c6:	fst    DWORD PTR [ecx-0x4f]
  4154c9:	pop    esp
  4154ca:	mov    bh,0x66
  4154cc:	(bad)
  4154d1:	mov    ecx,DWORD PTR [ebp-0x63]
  4154d4:	cdq    
  4154d5:	jbe    0x4154ff
  4154d7:	inc    ebp
  4154d8:	sub    al,BYTE PTR [edx+0x59]
  4154db:	mov    dh,0xc1
  4154dd:	sub    BYTE PTR cs:[ebx+0x63],dl
  4154e1:	scas   al,BYTE PTR es:[edi]
  4154e2:	xor    ebx,esp
  4154e4:	sub    DWORD PTR [ebx+0x4e],ebx
  4154e7:	stos   DWORD PTR es:[edi],eax
  4154e8:	outs   dx,DWORD PTR ds:[esi]
  4154e9:	xchg   BYTE PTR [ecx],dh
  4154eb:	cmp    esp,esp
  4154ed:	jno    0x4154a8
  4154ef:	scas   al,BYTE PTR es:[edi]
  4154f0:	inc    edx
  4154f1:	inc    esi
  4154f2:	xor    DWORD PTR [esi+0x720a92f4],esp
  4154f8:	sub    bh,al
  4154fa:	imul   ecx,eax,0xffffff99
  4154fd:	push   esp
  4154fe:	mov    BYTE PTR [esi-0x6687c0c8],0x9d
  415505:	dec    eax
  415506:	adc    ch,BYTE PTR [eax+0x34466300]
  41550c:	pop    ebx
  41550d:	and    al,0x2
  41550f:	pop    ecx
  415510:	push   0xfb00a7f0
  415515:	jg     0x415512
  415517:	and    DWORD PTR [edi+0x16],esp
  41551a:	adc    eax,0x817ce4fb
  41551f:	data16 add al,BYTE PTR [edx]
  415522:	jp     0x41555e
  415524:	(bad)  
  415525:	sbb    esi,DWORD PTR [ecx+0x29067a53]
  41552b:	add    DWORD PTR ds:0x8a674f73,ecx
  415531:	xor    DWORD PTR [ebx-0x24619985],eax
  415537:	test   BYTE PTR [ebx],dh
  415539:	push   ecx
  41553a:	mov    ch,0x15
  41553c:	arpl   WORD PTR [edx],dx
  41553e:	inc    ebp
  41553f:	inc    edi
  415540:	call   0xe205:0x58f441dc
  415547:	test   eax,0x11d7caca
  41554c:	mov    cs,WORD PTR [esi+0x66]
  41554f:	sahf   
  415550:	pop    eax
  415551:	push   eax
  415552:	xor    esp,DWORD PTR [edx+edx*1+0x5711d3d0]
  415559:	(bad)  
  41555a:	mov    esi,0x15214a4b
  41555f:	data16 aas 
  415561:	and    ecx,ecx
  415563:	cmp    ch,BYTE PTR [edx+0xc4a6f23]
  415569:	sub    eax,0x419eaad3
  41556e:	in     al,0x4d
  415570:	jae    0x4155d2
  415572:	or     BYTE PTR [esi],bh
  415574:	or     BYTE PTR [ecx],bl
  415576:	mov    eax,0xfcbea90d
  41557b:	loopne 0x41558f
  41557d:	dec    edx
  41557e:	mov    bh,0x98
  415580:	scas   eax,DWORD PTR es:[edi]
  415581:	rol    BYTE PTR [eax],cl
  415583:	mov    al,0x89
  415585:	(bad)  
  415586:	lock ss sbb ebx,esi
  41558a:	shr    BYTE PTR [ebp+0x211cb75c],cl
  415590:	fld    DWORD PTR [ecx-0x15]
  415593:	pop    ebp
  415594:	ja     0x4155f3
  415596:	jbe    0x4155c0
  415598:	mov    bh,0x72
  41559a:	fst    st(5)
  41559c:	ja     0x415613
  41559e:	les    ecx,FWORD PTR [esi-0x7c]
  4155a1:	out    dx,al
  4155a2:	lahf   
  4155a3:	cmp    edx,ebp
  4155a5:	lods   al,BYTE PTR ds:[esi]
  4155a6:	inc    ebx
  4155a7:	sub    BYTE PTR [edi+0x1f874e70],dl
  4155ad:	xchg   esp,eax
  4155ae:	or     ch,BYTE PTR [ebx-0x2098d6b4]
  4155b4:	pop    esi
  4155b5:	neg    BYTE PTR [edx]
  4155b7:	sub    DWORD PTR [edx+0x3c],0x340b27bc
  4155be:	stos   BYTE PTR es:[edi],al
  4155bf:	xchg   ecx,eax
  4155c0:	xchg   BYTE PTR [edx-0x1f],dh
  4155c3:	sub    al,0x78
  4155c5:	inc    esi
  4155c6:	push   es
  4155c7:	add    dl,bl
  4155c9:	xchg   edx,eax
  4155ca:	loop   0x4155bf
  4155cc:	dec    esi
  4155cd:	pop    edi
  4155ce:	and    DWORD PTR [ecx],eax
  4155d0:	cdq    
  4155d1:	mov    dl,0x3b
  4155d3:	dec    edi
  4155d4:	dec    ebp
  4155d5:	jle    0x415604
  4155d7:	loop   0x41556a
  4155d9:	cmc    
  4155da:	cmp    al,0x29
  4155dc:	inc    ebx
  4155dd:	mov    ch,0x15
  4155df:	mov    bl,0xc8
  4155e1:	sti    
  4155e2:	mov    bl,0x52
  4155e4:	sti    
  4155e5:	cmp    eax,DWORD PTR [edx-0x57]
  4155e8:	and    DWORD PTR [eax-0x57a4930c],ebp
  4155ee:	xor    ch,BYTE PTR [eax+eiz*8-0x3a]
  4155f2:	dec    edi
  4155f3:	add    edi,ecx
  4155f5:	leave  
  4155f6:	xchg   ah,al
  4155f8:	lods   eax,DWORD PTR ds:[esi]
  4155fa:	fstp   TBYTE PTR [edi+edx*4+0x549bfdef]
  415601:	jmp    0x6e41:0x9ba14a45
  415608:	rcr    DWORD PTR [ecx],1
  41560a:	rol    DWORD PTR [edx],0x15
  41560d:	push   ds
  41560e:	xchg   BYTE PTR [esi],dh
  415610:	pop    ecx
  415611:	ds pop edx
  415613:	dec    esi
  415614:	cdq    
  415615:	rcl    BYTE PTR [eax+edx*8+0xdef7993],cl
  41561c:	bound  edx,QWORD PTR ds:0xa6b58940
  415622:	js     0x415651
  415624:	dec    edi
  415625:	loopne 0x4155b4
  415627:	push   es
  415628:	mov    ecx,0x101c5156
  41562d:	dec    eax
  41562e:	or     dh,BYTE PTR [ebp+edi*2-0x23674985]
  415635:	push   ds
  415636:	call   0xbfdc:0xd2113595
  41563d:	sbb    edi,DWORD PTR [edx+edi*2-0x17717012]
  415644:	jnp    0x4155f9
  415646:	xor    DWORD PTR [eax-0x41],esp
  415649:	jb     0x41560c
  41564b:	push   0x3
  41564d:	enter  0xc974,0x5f
  415651:	ins    DWORD PTR es:[edi],dx
  415652:	adc    ecx,DWORD PTR [edi+0x78c82995]
  415658:	ror    DWORD PTR [edi+0x2b],cl
  41565b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41565c:	shrd   DWORD PTR [edx+esi*8+0x5ea13abd],esi,0x48
  415665:	ins    BYTE PTR es:[edi],dx
  415666:	cmp    BYTE PTR [eax-0x2b2a32a4],ah
  41566c:	mov    ds:0xcfc8bd7a,al
  415671:	sub    DWORD PTR [edi+0x3bf8c42a],edi
  415677:	div    BYTE PTR [esi+0x2d28d444]
  41567d:	push   esp
  41567e:	and    al,0x76
  415680:	mov    ds:0xbef5e3a7,eax
  415685:	cmp    eax,0x24b3fb53
  41568a:	(bad)  
  41568b:	(bad)  
  41568d:	(bad)  [ebx]
  41568f:	aas    
  415690:	test   BYTE PTR [edi+0xf],ah
  415693:	mov    dl,0x7b
  415695:	out    dx,al
  415696:	loope  0x4156e3
  415698:	out    0x5d,eax
  41569a:	mov    ss,eax
  41569c:	addr16 pop esi
  41569e:	fdivr  QWORD PTR [eax-0x1d]
  4156a1:	xchg   edi,eax
  4156a2:	out    dx,eax
  4156a3:	lods   eax,DWORD PTR ds:[esi]
  4156a4:	dec    ecx
  4156a5:	jo     0x41568a
  4156a7:	push   eax
  4156a8:	pop    ecx
  4156a9:	out    dx,al
  4156aa:	idiv   dl
  4156ac:	xchg   ebp,eax
  4156ad:	pop    edi
  4156ae:	shl    BYTE PTR [eax-0x46212ef3],0x26
  4156b5:	inc    eax
  4156b6:	scas   al,BYTE PTR es:[edi]
  4156b7:	outs   dx,DWORD PTR ds:[esi]
  4156b8:	jmp    0xcb254bd4
  4156bd:	jmp    0x34681067
  4156c2:	xchg   esi,eax
  4156c3:	xchg   edx,eax
  4156c4:	and    al,0x60
  4156c6:	mov    cl,0x6d
  4156c8:	aam    0x28
  4156ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156cb:	and    esi,DWORD PTR [eax+0x2d]
  4156ce:	sub    eax,0x2e2d14d2
  4156d3:	xor    BYTE PTR [edi],0xcf
  4156d6:	loop   0x415688
  4156d8:	out    dx,al
  4156d9:	clc    
  4156da:	and    DWORD PTR [ecx+eiz*4-0x7f36f55a],0xdf7b8d7b
  4156e5:	(bad)  
  4156e6:	sar    DWORD PTR [edi],cl
  4156e8:	cmp    bl,BYTE PTR [edi+0x3f387a75]
  4156ee:	or     eax,DWORD PTR [eax]
  4156f0:	push   ds
  4156f1:	push   ss
  4156f2:	mov    bl,0xba
  4156f4:	mov    cl,0x2e
  4156f6:	jnp    0x415708
  4156f8:	or     DWORD PTR [edx],0xdbc3b865
  4156fe:	in     eax,0xc7
  415700:	xchg   ebx,eax
  415701:	scas   eax,DWORD PTR es:[edi]
  415702:	or     BYTE PTR [esi-0x4f],dl
  415705:	(bad)  
  415706:	fdivr  QWORD PTR [edi-0x1eae3612]
  41570c:	dec    esi
  41570d:	add    eax,0x31575f28
  415712:	sbb    DWORD PTR [edx-0x473120ca],esi
  415718:	sti    
  415719:	jnp    0x4156b1
  41571b:	cs jp  0x415782
  41571e:	jle    0x4156d6
  415720:	mov    edi,0xda1c4e5d
  415725:	add    DWORD PTR [ebx],edi
  415727:	fimul  DWORD PTR [esi+0x39]
  41572a:	xchg   ebx,eax
  41572b:	and    BYTE PTR [esi+ebx*8],dh
  41572e:	inc    esi
  41572f:	test   eax,0xe2b57a52
  415734:	scas   eax,DWORD PTR es:[edi]
  415735:	mov    al,0x9a
  415737:	push   ebp
  415738:	retf   
  415739:	pop    esp
  41573a:	cmp    esp,DWORD PTR [ecx]
  41573c:	loop   0x4156c9
  41573e:	xchg   edi,eax
  41573f:	lods   al,BYTE PTR ds:[esi]
  415740:	and    BYTE PTR [edx-0x2991bedf],bh
  415746:	out    dx,eax
  415747:	rcr    BYTE PTR [ebp-0x13db3f7f],0x8d
  41574e:	inc    edx
  41574f:	cmp    ebp,DWORD PTR [esi-0x1f2bbcbb]
  415755:	fist   DWORD PTR [eax-0x165ea4eb]
  41575b:	push   edi
  41575c:	mov    cl,0x97
  41575e:	dec    esp
  41575f:	sub    eax,DWORD PTR [ecx-0x36f088e8]
  415765:	fmul   QWORD PTR [esi+0x5e]
  415768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415769:	sub    eax,0x8b897f36
  41576e:	iret   
  41576f:	jae    0x4157f0
  415771:	fild   DWORD PTR [esp+ebx*1+0x5a46576b]
  415778:	jmp    0x3e97:0xcaae51b8
  41577f:	push   cs
  415780:	jecxz  0x4157a8
  415782:	adc    al,0x62
  415784:	push   edi
  415785:	xchg   esp,eax
  415786:	out    dx,al
  415787:	pusha  
  415788:	je     0x415733
  41578a:	jp     0x41572b
  41578c:	xchg   BYTE PTR [edi],dh
  41578e:	(bad)  
  41578f:	fsub   DWORD PTR [ebx]
  415791:	(bad)  [edi+0x5c724e67]
  415797:	sbb    esi,DWORD PTR [ebx-0x74878fc5]
  41579d:	mov    dl,0xee
  41579f:	addr16 xchg ecx,eax
  4157a1:	daa    
  4157a2:	fstp   QWORD PTR [eax+0x2632a789]
  4157a8:	xor    al,0x18
  4157aa:	hlt    
  4157ab:	add    al,0x80
  4157ad:	sar    DWORD PTR [eax-0x6d180102],1
  4157b3:	test   edx,0x6d573a73
  4157b9:	cld    
  4157ba:	inc    ebp
  4157bb:	shl    DWORD PTR [edx],0x90
  4157be:	repz sub eax,DWORD PTR [ebp-0x43119cb7]
  4157c5:	jge    0x415800
  4157c7:	xor    al,0xfb
  4157c9:	aaa    
  4157ca:	sbb    al,0x28
  4157cc:	mov    es,WORD PTR [edi-0x2d]
  4157cf:	out    dx,eax
  4157d0:	retf   
  4157d1:	pop    eax
  4157d2:	lods   eax,DWORD PTR ds:[esi]
  4157d3:	push   ebx
  4157d4:	shl    BYTE PTR [esi-0x7a],0xd3
  4157d8:	repnz pop esi
  4157da:	push   edi
  4157db:	arpl   bp,sp
  4157dd:	mov    ds:0x275eb10f,eax
  4157e2:	imul   esp,DWORD PTR [ebx+ebp*1],0x2e
  4157e6:	sub    ah,cl
  4157e8:	and    bl,dl
  4157ea:	push   ecx
  4157eb:	cmp    al,0x7a
  4157ed:	lods   al,BYTE PTR ds:[esi]
  4157ee:	ins    BYTE PTR es:[edi],dx
  4157ef:	cld    
  4157f0:	bound  edi,QWORD PTR [edi+0x60]
  4157f3:	test   al,0x90
  4157f5:	pop    eax
  4157f6:	cld    
  4157f7:	xchg   edx,eax
  4157f8:	cmp    ebx,DWORD PTR [edx-0x5b1f291f]
  4157fe:	or     al,0x5b
  415800:	inc    ebx
  415801:	test   bh,0x32
  415804:	imul   ecx,ecx,0xffffff8f
  415807:	or     dl,al
  415809:	(bad)  
  41580a:	in     eax,dx
  41580b:	xor    al,0xf6
  41580d:	push   edx
  41580e:	mov    ebp,0xb455279c
  415813:	test   eax,0xeab0e562
  415818:	inc    esp
  415819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41581a:	clc    
  41581b:	cld    
  41581c:	adc    al,0x74
  41581e:	(bad)  
  41581f:	std    
  415820:	jmp    0x415860
  415822:	inc    edi
  415823:	xchg   ebx,eax
  415824:	sti    
  415825:	xor    ecx,DWORD PTR gs:[esi+0x1e]
  415829:	(bad)  
  41582a:	jle    0x4157e7
  41582c:	int    0xe
  41582e:	add    al,0x3b
  415830:	ds cdq 
  415832:	push   esi
  415833:	imul   ebp,esp,0x70
  415836:	repz aaa 
  415838:	int3   
  415839:	mov    dh,0x3d
  41583b:	stos   BYTE PTR es:[edi],al
  41583c:	in     al,0x51
  41583e:	push   cs
  41583f:	add    esi,0xffffff8a
  415842:	int3   
  415843:	shr    bl,0x3f
  415846:	xchg   ebp,eax
  415847:	sbb    eax,0xc2dacfdc
  41584c:	push   ds
  41584d:	mov    DWORD PTR [ebp-0x41],eax
  415850:	mov    edi,0x63a2b48e
  415855:	xchg   ebx,eax
  415856:	neg    DWORD PTR [ebx]
  415858:	jnp    0x41580c
  41585a:	adc    BYTE PTR [esi+0x50],bh
  41585d:	pusha  
  41585e:	xor    ecx,edx
  415860:	sahf   
  415861:	mov    WORD PTR [edi-0x8],gs
  415864:	dec    esp
  415865:	aas    
  415866:	mov    eax,0xa983e865
  41586b:	arpl   WORD PTR [eax],bp
  41586d:	jns    0x415847
  41586f:	jns    0x4158ec
  415871:	shl    DWORD PTR [esi-0x483cefad],1
  415877:	pop    ecx
  415878:	rol    DWORD PTR [ebx-0x6100f6d7],1
  41587e:	jno    0x41588f
  415880:	mov    al,0xd1
  415882:	push   0xc382b541
  415887:	rcr    DWORD PTR [esi-0x2f36d442],1
  41588d:	loop   0x415900
  41588f:	imul   eax,esi,0xfffffff2
  415892:	and    ebp,ebp
  415894:	pusha  
  415895:	adc    esp,DWORD PTR ds:0xf2a336a8
  41589b:	adc    eax,0x8510d059
  4158a0:	inc    edi
  4158a1:	xchg   esp,eax
  4158a2:	sub    ch,dh
  4158a4:	inc    edi
  4158a5:	pop    esp
  4158a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a7:	cmc    
  4158a8:	aaa    
  4158a9:	mov    DWORD PTR [esi-0x6b],ebp
  4158ac:	adc    esp,DWORD PTR [eax]
  4158ae:	mov    dl,0xfb
  4158b0:	dec    esi
  4158b1:	mov    dl,0x2b
  4158b3:	imul   esi,DWORD PTR [edx-0x50b52b0f],0xfffffffd
  4158ba:	adc    eax,0x9d0e9727
  4158bf:	or     al,0x20
  4158c1:	mov    eax,ds:0xcd9ad121
  4158c6:	enter  0x19e5,0xd5
  4158ca:	xor    bl,BYTE PTR [ebp+0x911a89d]
  4158d0:	push   ds
  4158d1:	xchg   edi,eax
  4158d2:	ins    DWORD PTR es:[edi],dx
  4158d3:	cli    
  4158d4:	xchg   edx,eax
  4158d5:	loopne 0x41593b
  4158d7:	push   cs
  4158d8:	mov    bh,0xa
  4158da:	jmp    0xa7e6:0xad7eeb50
  4158e1:	cmp    DWORD PTR [edi-0x6b347f1f],esi
  4158e7:	fistp  QWORD PTR [ebx]
  4158e9:	mov    esi,DWORD PTR [ecx]
  4158eb:	cli    
  4158ec:	mov    WORD PTR [esi+0x6e35f8a7],ds
  4158f2:	(bad)  
  4158f4:	mov    eax,0x5204cd5
  4158f9:	mov    bh,0xde
  4158fb:	push   esp
  4158fc:	es stos DWORD PTR es:[di],eax
  4158ff:	mov    bl,BYTE PTR [ebp+0x37c84d43]
  415905:	call   0xd66a1b48
  41590a:	mov    edx,0xbf9890e4
  41590f:	pop    edx
  415910:	adc    ebx,DWORD PTR [edx-0x34]
  415913:	jne    0x41595a
  415915:	repnz cmp ch,BYTE PTR [edi-0x46]
  415919:	test   BYTE PTR [esi-0x7d],cl
  41591c:	jne    0x41597b
  41591e:	push   ds
  41591f:	pop    eax
  415920:	cmp    BYTE PTR [edx],0xdd
  415923:	loope  0x415973
  415925:	cmp    BYTE PTR ds:0x59db2cb1,ah
  41592b:	popf   
  41592c:	jno    0x41592d
  41592e:	cwde   
  41592f:	pop    esp
  415930:	dec    esi
  415931:	push   ecx
  415932:	pop    esp
  415933:	(bad)  
  415935:	test   BYTE PTR ds:0x5bddaa93,al
  41593b:	(bad)  [ecx+ecx*1+0x7c]
  41593f:	lods   al,BYTE PTR ds:[esi]
  415940:	jmp    0x4158d2
  415942:	or     DWORD PTR ds:0x1a11bef,eax
  415948:	clc    
  415949:	sbb    DWORD PTR [eax],0xbb7cfbb8
  41594f:	jecxz  0x41596d
  415951:	dec    edi
  415952:	stos   BYTE PTR es:[edi],al
  415953:	jnp    0x415984
  415955:	jo     0x415997
  415957:	mov    ebp,0xfb0f87ca
  41595c:	scas   al,BYTE PTR es:[edi]
  41595d:	xor    bl,BYTE PTR [ecx+ebx*8+0x122e917d]
  415964:	popa   
  415965:	idiv   DWORD PTR [eax+0x6e]
  415968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415969:	pop    es
  41596a:	or     eax,0x2d81124a
  41596f:	pop    eax
  415970:	xor    BYTE PTR [esi-0xb574658],ah
  415976:	inc    ebp
  415977:	cmp    ebp,esp
  415979:	inc    ecx
  41597a:	xlat   BYTE PTR ds:[ebx]
  41597b:	xor    eax,0xbcec728b
  415980:	jg     0x4159c6
  415982:	sub    al,al
  415984:	mov    ebp,0xe9f42d7d
  415989:	jmp    0x2446:0xd896581c
  415990:	inc    esi
  415991:	repz test DWORD PTR [ebx+0x772079ea],esi
  415998:	or     eax,0x7be1fa21
  41599d:	inc    esi
  41599e:	in     al,dx
  41599f:	in     eax,dx
  4159a0:	(bad)  
  4159a1:	jne    0x41597c
  4159a3:	test   al,0xe9
  4159a5:	(bad)  
  4159a6:	lea    ebx,[ecx]
  4159a8:	sub    dl,BYTE PTR [esi+0x39e728e0]
  4159ae:	arpl   WORD PTR [edx+0x75e77114],bp
  4159b4:	fidiv  WORD PTR [esi-0x74]
  4159b7:	(bad)  
  4159b8:	jmp    0x415a26
  4159ba:	jp     0x415954
  4159bc:	aam    0xf0
  4159be:	lahf   
  4159bf:	inc    edx
  4159c0:	xchg   edx,eax
  4159c1:	jb     0x415986
  4159c3:	adc    eax,0x1c98165f
  4159c8:	dec    ecx
  4159c9:	lods   eax,DWORD PTR ds:[esi]
  4159ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159cb:	ror    cl,0xd
  4159ce:	les    eax,FWORD PTR [ecx+0x31]
  4159d1:	pop    ebx
  4159d2:	mov    bh,BYTE PTR [ecx-0x47]
  4159d5:	stos   BYTE PTR es:[edi],al
  4159d6:	add    al,ch
  4159d8:	cmp    DWORD PTR [edi+0x32485e8f],esi
  4159de:	arpl   WORD PTR [edx],bp
  4159e0:	push   0x8fdf4930
  4159e5:	test   BYTE PTR [eax-0x3b],bl
  4159e8:	scas   al,BYTE PTR es:[edi]
  4159e9:	or     ecx,eax
  4159eb:	adc    al,0x8
  4159ed:	cld    
  4159ee:	and    edx,DWORD PTR [esi+edx*8-0x7712727b]
  4159f5:	test   eax,0x249a1a5
  4159fa:	pop    es
  4159fb:	mov    ds:0x5013c3ab,eax
  415a00:	pop    ebp
  415a01:	fcom   QWORD PTR [eax]
  415a03:	retf   0xbcc0
  415a06:	icebp  
  415a07:	pavgw  mm6,mm0
  415a0a:	inc    esi
  415a0b:	fcom   DWORD PTR [eax]
  415a0d:	ins    DWORD PTR es:[edi],dx
  415a0e:	inc    edx
  415a0f:	pop    edx
  415a10:	pop    eax
  415a11:	dec    ecx
  415a12:	adc    al,0x1d
  415a14:	sbb    DWORD PTR [ebp-0x7a],edx
  415a17:	call   0x837a:0x4ff8533d
  415a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a1f:	jle    0x415a9f
  415a21:	mov    eax,0x3fb552d4
  415a26:	loop   0x415a90
  415a28:	xchg   esi,eax
  415a29:	stc    
  415a2a:	int    0xdc
  415a2c:	mov    esi,DWORD PTR [edi]
  415a2e:	(bad)  [edi+0x5e917fac]
  415a34:	jb     0x415a6a
  415a36:	frstor [ebx-0x56]
  415a39:	inc    esi
  415a3a:	sub    ecx,eax
  415a3c:	cmc    
  415a3d:	xchg   edi,eax
  415a3e:	adc    BYTE PTR [ebp+0x1f],al
  415a41:	pop    ss
  415a42:	std    
  415a43:	inc    edx
  415a44:	out    0x5e,al
  415a46:	jno    0x415a84
  415a48:	pop    eax
  415a49:	pop    eax
  415a4a:	dec    ecx
  415a4b:	jmp    0x1c36156a
  415a50:	and    BYTE PTR [eax],bl
  415a52:	(bad)
  415a56:	adc    eax,0xe4a2302d
  415a5b:	jne    0x415a24
  415a5d:	pop    ss
  415a5e:	xor    eax,0xfc6c1fc
  415a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a64:	loopne 0x415a0a
  415a66:	stos   DWORD PTR es:[edi],eax
  415a67:	test   al,0x1
  415a69:	push   edi
  415a6a:	mov    ebx,0xf1dfddd7
  415a6f:	stos   BYTE PTR es:[edi],al
  415a70:	pop    esp
  415a71:	(bad)  
  415a73:	clc    
  415a74:	pop    ss
  415a75:	mov    ss,WORD PTR [eax+0x39]
  415a78:	(bad)  
  415a79:	fnsave [ebp-0x57729330]
  415a7f:	(bad)  
  415a80:	pop    edx
  415a81:	jne    0x415a3f
  415a83:	scas   eax,DWORD PTR es:[edi]
  415a84:	stc    
  415a85:	dec    edi
  415a86:	pop    esi
  415a87:	popa   
  415a88:	out    0x57,eax
  415a8a:	(bad)  
  415a8b:	fisttp WORD PTR [edi-0x1d470ff0]
  415a91:	sub    BYTE PTR [esi+edx*1],0x17
  415a95:	lahf   
  415a96:	mov    edx,0x9b7894e7
  415a9b:	sub    eax,0x3dac7bc3
  415aa0:	loopne 0x415a5e
  415aa2:	popa   
  415aa3:	lea    ecx,[ebp-0x77149cfa]
  415aa9:	ds or  ah,0x6a
  415aad:	pop    es
  415aae:	inc    eax
  415aaf:	mov    al,0x7
  415ab1:	add    eax,0xeb32d926
  415ab6:	mov    ebx,0xfb6edc7b
  415abb:	dec    eax
  415abc:	mov    ds:0x365cd44b,eax
  415ac1:	popfw  
  415ac3:	jb     0x415a64
  415ac5:	sub    ecx,DWORD PTR [edi*1+0x6755544f]
  415acc:	rol    BYTE PTR [ecx-0x2703e8fa],1
  415ad2:	fdivr  st,st(1)
  415ad4:	out    0xbd,al
  415ad6:	sub    al,0xc8
  415ad8:	pop    esi
  415ad9:	and    BYTE PTR [ecx+0x664cb540],0xce
  415ae0:	rcr    ebp,cl
  415ae2:	adc    ebp,eax
  415ae4:	(bad)  
  415ae5:	fimul  WORD PTR [edi+edx*8-0x69]
  415ae9:	mov    dh,0x4a
  415aeb:	inc    eax
  415aec:	adc    edx,DWORD PTR [esi-0x3]
  415aef:	sbb    al,0x2b
  415af1:	into   
  415af2:	push   edi
  415af3:	sbb    eax,0xf2963c1b
  415af8:	pop    eax
  415af9:	stos   BYTE PTR es:[edi],al
  415afa:	sub    esi,DWORD PTR [ebx+ebp*1]
  415afd:	fnstsw WORD PTR [edx-0x5]
  415b00:	call   0x78c0d9a0
  415b05:	(bad)  
  415b06:	bound  ebx,QWORD PTR [eax]
  415b08:	jg     0x415b7b
  415b0a:	lock (bad) 
  415b0d:	pop    ebx
  415b0e:	loope  0x415b83
  415b10:	mov    ds:0xd2b5b79e,al
  415b15:	popa   
  415b16:	int    0xa7
  415b18:	cmp    bh,bh
  415b1a:	in     eax,0x34
  415b1c:	lods   eax,DWORD PTR ds:[esi]
  415b1d:	pop    ds
  415b1e:	jmp    0x415ae6
  415b20:	jbe    0x415b7b
  415b22:	xor    bl,BYTE PTR [edx+0x6]
  415b25:	mov    ebx,0xcde7141
  415b2a:	mov    dl,0x41
  415b2c:	and    ebx,DWORD PTR [ecx]
  415b2e:	fdivr  st(0),st
  415b30:	adc    DWORD PTR [ebx],ebp
  415b32:	push   ds
  415b33:	sub    eax,0x4e3d6887
  415b38:	xlat   BYTE PTR ds:[ebx]
  415b39:	cmp    al,0x53
  415b3b:	xlat   BYTE PTR ds:[ebx]
  415b3c:	jo     0x415b87
  415b3e:	psubw  mm1,mm1
  415b41:	push   edx
  415b42:	mov    bl,0x64
  415b44:	ins    BYTE PTR es:[edi],dx
  415b45:	mov    esi,0x46583fa3
  415b4a:	add    BYTE PTR [eax-0x6e],dl
  415b4d:	daa    
  415b4e:	sbb    edx,DWORD PTR [eax+0x5eae437e]
  415b54:	popf   
  415b55:	out    dx,eax
  415b56:	aaa    
  415b57:	es int 0xc5
  415b5a:	add    BYTE PTR [edx],0x71
  415b5d:	test   bh,0x7b
  415b60:	shl    DWORD PTR [eax-0x7e1d7a4d],cl
  415b66:	cwde   
  415b67:	arpl   WORD PTR [ebx+0xaa31f95],sp
  415b6d:	mov    ebp,0x21655fde
  415b72:	jl     0x415b87
  415b74:	mov    ds:0x57f32ffa,eax
  415b79:	push   ebx
  415b7a:	jp     0x415afe
  415b7c:	and    eax,0x174d6c8d
  415b81:	mov    DWORD PTR [esi],edi
  415b83:	test   al,0xff
  415b85:	and    DWORD PTR [ebp-0x6f],ecx
  415b88:	dec    ebx
  415b89:	jns    0x415bdf
  415b8b:	(bad)  
  415b8c:	leave  
  415b8d:	aam    0x69
  415b8f:	mov    edx,DWORD PTR [ebx]
  415b91:	in     al,dx
  415b92:	inc    edx
  415b93:	setnp  BYTE PTR [ecx+0x46662023]
  415b9a:	cmp    ecx,DWORD PTR [ecx]
  415b9c:	or     BYTE PTR [edi],0x60
  415b9f:	aam    0xf
  415ba1:	lods   al,BYTE PTR ds:[esi]
  415ba2:	add    eax,0x16671454
  415ba7:	stc    
  415ba8:	cld    
  415ba9:	or     al,0x3
  415bab:	outs   dx,DWORD PTR ds:[esi]
  415bac:	push   ecx
  415bad:	cmp    bh,cl
  415baf:	cmp    BYTE PTR [ecx+0x5],dh
  415bb2:	add    cl,BYTE PTR [ebx]
  415bb4:	daa    
  415bb5:	xor    ah,bl
  415bb7:	push   edx
  415bb8:	xlat   BYTE PTR ds:[ebx]
  415bb9:	out    0xb7,eax
  415bbb:	pushw  0xbd6e
  415bbf:	adc    BYTE PTR [esi+0x64],0x1
  415bc3:	cmp    eax,0x25acd48b
  415bc8:	cmp    al,0x47
  415bca:	shr    BYTE PTR [eax-0x3c],1
  415bcd:	bound  ax,DWORD PTR gs:[edi+0x10f11dab]
  415bd5:	mov    edx,0x275fe6d4
  415bda:	add    al,bh
  415bdc:	xchg   esp,eax
  415bdd:	ins    DWORD PTR es:[edi],dx
  415bde:	enter  0xa05,0xf
  415be2:	daa    
  415be3:	mov    ebx,0x3b4dd9fb
  415be8:	sub    cl,0xc7
  415beb:	mov    eax,0xbf9935a2
  415bf0:	dec    ecx
  415bf1:	js     0x415c3c
  415bf3:	repz jl 0x415c6f
  415bf6:	add    ecx,ecx
  415bf8:	lahf   
  415bf9:	pop    es
  415bfa:	fucomip st,st(0)
  415bfc:	mov    BYTE PTR [eax-0x11d8a23d],ch
  415c02:	pop    ss
  415c03:	popa   
  415c04:	ffree  st(4)
  415c06:	xchg   BYTE PTR [edx],bh
  415c08:	sti    
  415c09:	es hlt 
  415c0b:	fistp  WORD PTR [ebx+0x25]
  415c0e:	push   0x7c80efa8
  415c13:	fdivr  QWORD PTR [edi]
  415c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c16:	mov    esp,ebp
  415c18:	xor    eax,0xcd345ba0
  415c1d:	push   ss
  415c1e:	loop   0x415c5e
  415c20:	pop    edi
  415c21:	sti    
  415c22:	jle    0x415bb3
  415c24:	push   0x3067b00c
  415c29:	xlat   BYTE PTR ds:[ebx]
  415c2a:	rol    dl,cl
  415c2c:	xchg   ebx,eax
  415c2d:	test   DWORD PTR [edi+0x3b9a483f],ebp
  415c33:	mov    esp,0xa69078c8
  415c38:	xchg   esi,eax
  415c39:	jge    0x415c22
  415c3b:	in     eax,0x25
  415c3d:	je     0x415c4f
  415c3f:	mov    eax,0x62493df5
  415c44:	inc    edx
  415c45:	sub    al,0xbf
  415c47:	lods   al,BYTE PTR ds:[esi]
  415c48:	and    ebp,DWORD PTR [edx]
  415c4a:	adc    DWORD PTR [edi+0x2ea3f1b5],0x9
  415c51:	rcr    ecx,cl
  415c53:	mov    edi,0x902acc69
  415c58:	repnz pop ss
  415c5a:	mov    dl,0xc1
  415c5c:	inc    eax
  415c5d:	cs stc 
  415c5f:	scas   eax,DWORD PTR es:[edi]
  415c60:	sub    edi,ecx
  415c62:	or     al,0x59
  415c64:	adc    BYTE PTR [edi-0x38],ah
  415c67:	xchg   edi,eax
  415c68:	(bad)  
  415c6a:	(bad)  
  415c6c:	into   
  415c6d:	xchg   ebx,eax
  415c6e:	sub    eax,0x7adaf200
  415c73:	js     0x415cea
  415c75:	jecxz  0x415ce7
  415c77:	or     eax,0x89a8bd2a
  415c7c:	ret    0x2c4e
  415c7f:	mov    DWORD PTR [ebp+ecx*8+0xd87c10],esi
  415c86:	or     dl,BYTE PTR [edx-0x73]
  415c89:	shl    DWORD PTR [ecx+0x29b7630d],1
  415c8f:	mov    dl,0xb
  415c91:	fld    DWORD PTR [eax-0x48]
  415c94:	dec    esi
  415c95:	call   0xfd8c:0xf404ac4d
  415c9c:	rcr    DWORD PTR [edi-0x4e19f929],cl
  415ca2:	mov    al,ds:0x726ee02e
  415ca7:	retf   
  415ca8:	icebp  
  415ca9:	adc    dh,ch
  415cab:	cmc    
  415cac:	clc    
  415cad:	push   ss
  415cae:	cmp    eax,DWORD PTR [edx-0x2f]
  415cb1:	rol    DWORD PTR [eax-0x1f0a24a8],cl
  415cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cb8:	mov    ds:0xb03376ca,al
  415cbd:	jl     0x415cc0
  415cbf:	call   0x96e0:0xd6a342e8
  415cc6:	cs loopne 0x415caa
  415cc9:	in     al,dx
  415cca:	pop    es
  415ccb:	jns    0x415d0b
  415ccd:	add    DWORD PTR [edi+0x11],edi
  415cd0:	aas    
  415cd1:	push   esi
  415cd2:	push   ebx
  415cd3:	adc    BYTE PTR [ebx-0x619bbe18],dl
  415cd9:	mov    DWORD PTR [eax],eax
  415cdb:	psadbw mm5,mm4
  415cde:	inc    ecx
  415cdf:	mov    ?,WORD PTR [di+0x32]
  415ce3:	data16 fld TBYTE PTR [ebx]
  415ce6:	or     al,0x26
  415ce8:	sub    al,0x5c
  415cea:	pop    ecx
  415ceb:	adc    eax,DWORD PTR [esi+edx*1-0x1b]
  415cef:	enter  0x1bd,0x64
  415cf3:	jmp    0x59376be6
  415cf8:	dec    ebx
  415cf9:	fidiv  WORD PTR [ebp+0x1360cd4]
  415cff:	lods   eax,DWORD PTR ds:[esi]
  415d00:	cmp    DWORD PTR [edi-0x79],ecx
  415d03:	sub    BYTE PTR [ebx+0x4b],bh
  415d06:	xor    esp,DWORD PTR [ecx]
  415d08:	fisttp WORD PTR [edx-0x71]
  415d0b:	inc    ebx
  415d0c:	dec    edi
  415d0d:	aad    0xc7
  415d0f:	and    bl,al
  415d11:	xor    ch,ch
  415d13:	mov    esi,0x5201d2dc
  415d18:	call   0x5344c139
  415d1d:	enter  0x3d96,0x61
  415d21:	cld    
  415d22:	inc    ebp
  415d23:	jecxz  0x415d40
  415d25:	das    
  415d26:	in     al,dx
  415d27:	imul   esi,DWORD PTR [edx-0x15],0x47002408
  415d2e:	xor    edx,edx
  415d30:	shr    esp,0x99
  415d33:	mov    dh,0x94
  415d35:	adc    al,0xde
  415d37:	mov    ecx,0xed3b3c4f
  415d3c:	dec    eax
  415d3d:	rcr    eax,1
  415d3f:	in     al,0x78
  415d41:	pop    esp
  415d42:	mov    esi,0x89946d13
  415d47:	xor    eax,0x6730605c
  415d4c:	aas    
  415d4d:	and    eax,0xb0409549
  415d52:	(bad)  
  415d54:	jae    0x415d7c
  415d56:	mov    ebx,0x4f93b2e0
  415d5b:	sar    BYTE PTR [edx+0x356c74ad],1
  415d61:	pop    ebp
  415d62:	inc    eax
  415d63:	and    al,dl
  415d65:	add    eax,0x82104381
  415d6a:	fstp   QWORD PTR [ebp+0x1051304c]
  415d70:	or     BYTE PTR [edi-0x42d75fbb],0xa3
  415d77:	jecxz  0x415d8d
  415d79:	sub    ecx,DWORD PTR [ecx+0x1b96b1d2]
  415d7f:	and    ebp,DWORD PTR [eax+0x59db84c8]
  415d85:	jmp    0x39a67d0e
  415d8a:	add    BYTE PTR [edi],0xf9
  415d8d:	jmp    0x415e0c
  415d8f:	xchg   ebx,eax
  415d90:	out    0x4,eax
  415d92:	std    
  415d93:	xchg   edi,eax
  415d94:	into   
  415d95:	pop    eax
  415d96:	das    
  415d97:	push   eax
  415d98:	retf   0x811e
  415d9b:	loope  0x415dfa
  415d9d:	adc    eax,0x7a1e1ec9
  415da2:	aad    0xb0
  415da4:	aad    0x4
  415da6:	mov    al,ds:0xb184668
  415dab:	jmp    0x415d40
  415dad:	add    DWORD PTR [eax-0x1a],edi
  415db0:	xlat   BYTE PTR ds:[ebx]
  415db1:	lock adc eax,DWORD PTR [eax+0x459c39fa]
  415db8:	sti    
  415db9:	inc    edi
  415dba:	jbe    0x415dce
  415dbc:	cs iret 
  415dbe:	jns    0x415dd0
  415dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc1:	inc    eax
  415dc2:	mov    dl,BYTE PTR [ebx+0x40]
  415dc5:	out    dx,eax
  415dc6:	call   0xbf47:0x51b0b08c
  415dcd:	inc    ebp
  415dce:	pop    ecx
  415dcf:	push   esp
  415dd0:	jge    0x415de8
  415dd2:	inc    ebp
  415dd3:	popf   
  415dd4:	and    eax,0x53609ff0
  415dd9:	in     al,dx
  415dda:	xchg   ecx,eax
  415ddb:	jb     0x415dd0
  415ddd:	call   0xecba9325
  415de2:	inc    ecx
  415de3:	(bad)  
  415de4:	mov    ch,0x7a
  415de6:	add    al,0x90
  415de8:	add    eax,0x85539f8b
  415ded:	mov    ecx,0xf7d537b7
  415df2:	or     al,0x43
  415df4:	out    0xec,al
  415df6:	addr16 inc esp
  415df8:	ror    eax,0xfd
  415dfb:	lahf   
  415dfc:	dec    ebx
  415dfd:	xchg   BYTE PTR [esi+0x5f31010f],ch
  415e03:	add    eax,0x728f6e11
  415e08:	dec    ecx
  415e09:	xor    BYTE PTR [edi],bl
  415e0b:	clc    
  415e0c:	pop    esi
  415e0d:	push   es
  415e0e:	into   
  415e0f:	xchg   ebx,eax
  415e10:	inc    ecx
  415e11:	sub    DWORD PTR [ebx-0xb1e75d4],edx
  415e17:	jle    0x415e57
  415e19:	lock dec eax
  415e1b:	add    eax,0xf966ad48
  415e20:	jl     0x415e15
  415e22:	das    
  415e23:	cmp    eax,ebx
  415e25:	les    ecx,FWORD PTR [edx-0x3d6b8842]
  415e2b:	add    BYTE PTR [ecx+0x2c713faa],bh
  415e31:	lods   al,BYTE PTR ds:[esi]
  415e32:	test   al,0xd6
  415e34:	test   DWORD PTR [eax],esi
  415e36:	aas    
  415e37:	fbld   TBYTE PTR [esi]
  415e39:	sbb    eax,0x5e540bc8
  415e3e:	mov    edx,0x3660d293
  415e43:	std    
  415e44:	xor    eax,edi
  415e46:	push   es
  415e47:	mov    gs,ebp
  415e49:	cwde   
  415e4a:	cs jl  0x415e82
  415e4d:	lock sub al,0xff
  415e50:	push   ss
  415e51:	mov    dl,0x2d
  415e53:	jl     0x415e76
  415e55:	mov    esi,0xacfcc8c1
  415e5a:	and    eax,0x628ee090
  415e5f:	cmp    edi,DWORD PTR [ecx]
  415e61:	stos   BYTE PTR es:[edi],al
  415e62:	xchg   DWORD PTR [esi+0x1e],edx
  415e65:	jno    0x415e08
  415e67:	xchg   esp,eax
  415e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e69:	push   edx
  415e6a:	mov    bh,0x5e
  415e6c:	or     dh,BYTE PTR [esp+edx*4+0x4a]
  415e70:	hlt    
  415e71:	jmp    0x559ef93e
  415e76:	xor    ch,BYTE PTR [ecx]
  415e78:	push   ecx
  415e79:	mov    ebp,0xc20ad987
  415e7e:	push   0x3ef78da2
  415e83:	push   esp
  415e84:	xor    al,0x14
  415e86:	in     al,dx
  415e87:	daa    
  415e88:	jb     0x415e35
  415e8a:	xor    al,0x58
  415e8c:	arpl   WORD PTR [edi-0x124fe17f],di
  415e92:	cwde   
  415e93:	cmp    cl,dl
  415e95:	mov    cl,0xd4
  415e97:	mov    DWORD PTR [edi-0x9],ebp
  415e9a:	mov    dh,bh
  415e9c:	pop    esp
  415e9d:	mov    edi,cs
  415e9f:	add    ch,dl
  415ea1:	xchg   ebx,ebx
  415ea3:	inc    esp
  415ea4:	jecxz  0x415eb2
  415ea6:	push   ss
  415ea7:	mov    ah,0xc2
  415ea9:	inc    edx
  415eaa:	pop    edx
  415eab:	fadd   DWORD PTR [ecx]
  415ead:	jecxz  0x415e61
  415eaf:	xrelease mov BYTE PTR [edx+0x1d88f90d],ch
  415eb6:	cmp    eax,0x3354d2de
  415ebb:	fwait
  415ebc:	rol    DWORD PTR [edi-0x5a828ac5],0x9b
  415ec3:	xchg   edx,eax
  415ec4:	call   FWORD PTR ds:0x33de49c8
  415eca:	add    cl,bl
  415ecc:	pop    edx
  415ecd:	jo     0x415e77
  415ecf:	push   0xf53a3b6c
  415ed4:	stos   BYTE PTR es:[edi],al
  415ed5:	gs cmp edx,eax
  415ed8:	sub    DWORD PTR [esi-0x18],eax
  415edb:	mov    edi,0x7eb92aec
  415ee0:	fnstsw WORD PTR [ecx+0x68]
  415ee3:	xor    dh,cl
  415ee5:	cmp    eax,0xd66b759a
  415eea:	retf   
  415eeb:	(bad)  
  415eec:	cld    
  415eed:	mov    eax,0x340804cb
  415ef2:	mov    ds:0x35683a0a,eax
  415ef7:	iret   
  415ef8:	lods   al,BYTE PTR ds:[esi]
  415ef9:	popa   
  415efa:	mov    ds:0x39eac87a,al
  415eff:	inc    ebx
  415f00:	test   DWORD PTR [eax*2-0x77a04dfc],0x2f0f0980
  415f0b:	scas   al,BYTE PTR es:[edi]
  415f0c:	cmp    bl,BYTE PTR [eax-0x69ff27c0]
  415f12:	(bad)  
  415f15:	lods   al,BYTE PTR ds:[esi]
  415f16:	sbb    BYTE PTR [edi],bl
  415f18:	in     eax,0xb
  415f1a:	mov    dl,0x76
  415f1c:	xor    eax,edx
  415f1e:	sbb    eax,0x7c3e6e92
  415f23:	repz cmp DWORD PTR [edi+0x6696dd15],ebp
  415f2a:	ins    DWORD PTR es:[edi],dx
  415f2b:	xchg   ebp,eax
  415f2c:	dec    eax
  415f2d:	jp     0x415f55
  415f2f:	loopne 0x415eef
  415f31:	stos   DWORD PTR es:[edi],eax
  415f32:	jle    0x415fa8
  415f34:	mov    ds:0xdaddbc75,eax
  415f39:	and    eax,0x91b37a1f
  415f3e:	int    0x2c
  415f40:	mov    al,ds:0xc3ef15a3
  415f45:	pop    ds
  415f46:	test   eax,0xbb010f7c
  415f4b:	mov    ah,bl
  415f4d:	bnd jl 0x415ede
  415f50:	mov    ah,0x5f
  415f52:	or     DWORD PTR [ebp+0x57d84f7c],eax
  415f58:	lock mov esp,0x780b5ced
  415f5e:	repz inc esp
  415f60:	pop    ebp
  415f61:	scas   eax,DWORD PTR es:[edi]
  415f62:	pop    edx
  415f63:	aad    0xa3
  415f65:	adc    ah,ch
  415f67:	call   0xd5cf:0x95cd4a79
  415f6e:	nop
  415f6f:	sbb    DWORD PTR [eax],eax
  415f71:	leave  
  415f72:	pop    esp
  415f73:	das    
  415f74:	out    dx,eax
  415f75:	in     al,dx
  415f76:	sub    BYTE PTR [ecx-0x5c],al
  415f79:	or     BYTE PTR [edx-0x2f],0x88
  415f7d:	jno    0x415f29
  415f7f:	push   0x4bf862d
  415f84:	clc    
  415f85:	and    BYTE PTR [edi-0x26],dh
  415f88:	outs   dx,BYTE PTR ds:[esi]
  415f89:	lea    esi,[edi+0x39]
  415f8c:	nop
  415f8d:	xor    eax,0x72e9f232
  415f92:	adc    BYTE PTR [edi-0x2c0c241d],al
  415f98:	loopne 0x415f6a
  415f9a:	xor    DWORD PTR [edx-0x4b],edx
  415f9d:	and    al,0xa8
  415f9f:	pop    ebp
  415fa0:	test   cl,dh
  415fa2:	lock push ecx
  415fa4:	sub    DWORD PTR [ebx-0x5e32b6b9],ebx
  415faa:	in     eax,dx
  415fab:	leave  
  415fac:	mov    al,0x9c
  415fae:	or     al,0xd4
  415fb0:	mov    ebx,0xe62ee5d3
  415fb5:	mov    cl,bl
  415fb7:	xchg   DWORD PTR [ebx-0x6e],ebx
  415fba:	xor    dh,cl
  415fbc:	inc    eax
  415fbd:	je     0x415f47
  415fbf:	jmp    0x415ff6
  415fc1:	inc    ebx
  415fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc3:	inc    ecx
  415fc4:	jnp    0x415fc9
  415fc6:	or     dh,BYTE PTR [ecx-0x2]
  415fc9:	xchg   esp,eax
  415fca:	jl     0x415fae
  415fcc:	mov    cl,0xb5
  415fce:	jnp    0x415f64
  415fd0:	mov    ebp,edi
  415fd2:	dec    ebp
  415fd3:	or     eax,0xa7576ee6
  415fd8:	mov    ah,dl
  415fda:	das    
  415fdb:	jmp    0x5949:0xe79c6a29
  415fe2:	and    eax,0x9f3862b
  415fe7:	cmp    edx,DWORD PTR [ecx-0x41]
  415fea:	leave  
  415feb:	jge    0x41600e
  415fed:	pop    edx
  415fee:	mov    edi,0xa65e74ee
  415ff3:	out    dx,eax
  415ff4:	rcl    DWORD PTR [ebp-0xa],0xc2
  415ff8:	push   es
  415ff9:	icebp  
  415ffa:	adc    bh,0xee
  415ffd:	cmc    
  415ffe:	inc    esi
  415fff:	sti    
  416000:	montmul (bad)
  416001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416002:	xchg   edx,esi
  416004:	or     esi,esp
  416006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416007:	loop   0x415fae
  416009:	ss mov edx,0xe6d1a178
  41600f:	push   esi
  416010:	mov    esi,0x890630ae
  416015:	xor    al,BYTE PTR [eax+edx*2-0x49]
  416019:	pop    esp
  41601a:	xlat   BYTE PTR ds:[ebx]
  41601b:	sub    al,0xa8
  41601d:	mov    ds:0xb9b93f0d,eax
  416022:	aaa    
  416023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416024:	xor    ch,BYTE PTR [ebx+0x63]
  416027:	pop    ebx
  416028:	repnz dec ecx
  41602a:	es jbe 0x415fc2
  41602d:	loopne 0x415fc0
  41602f:	cmp    dl,bl
  416031:	repnz test DWORD PTR [ebp+0x26],0x8bf3cece
  416039:	in     eax,dx
  41603a:	cmp    al,0x30
  41603c:	ror    edx,1
  41603e:	push   esp
  41603f:	push   es
  416040:	sbb    eax,0xf1063902
  416045:	call   0x4f32:0x2a331d6c
  41604c:	dec    eax
  41604d:	in     eax,0xf
  41604f:	rol    DWORD PTR [eax-0x4ed1ea79],cl
  416055:	aad    0x64
  416057:	mov    eax,0x62ec9b25
  41605c:	mov    dh,0xaf
  41605e:	out    0x78,al
  416060:	data16 or ch,0x2a
  416064:	inc    eax
  416065:	sahf   
  416066:	inc    ecx
  416067:	mov    ch,0xd2
  416069:	adc    ebx,ebp
  41606b:	adc    esi,ecx
  41606d:	mov    dh,0x5c
  41606f:	lods   eax,DWORD PTR ds:[esi]
  416070:	sub    edi,eax
  416072:	xor    al,0x4f
  416074:	adc    al,0x39
  416076:	fild   QWORD PTR [esi]
  416078:	pusha  
  416079:	aas    
  41607a:	jl     0x416089
  41607c:	push   ss
  41607d:	mov    dl,BYTE PTR [ecx-0x6f]
  416080:	fst    st(0)
  416082:	jae    0x416058
  416084:	dec    ecx
  416085:	mov    dh,0xe2
  416087:	inc    DWORD PTR [ebp+0x68c401e3]
  41608d:	jbe    0x416031
  41608f:	dec    esi
  416090:	(bad)  
  416091:	jmp    0x75f6:0xd012f350
  416098:	test   eax,0xbb71f3ff
  41609d:	and    DWORD PTR [ecx],esp
  41609f:	sbb    BYTE PTR [esi+0x7d292444],dh
  4160a5:	cmp    al,0xd2
  4160a7:	dec    edi
  4160a8:	leave  
  4160a9:	fild   DWORD PTR [ecx]
  4160ab:	and    ah,bh
  4160ad:	sbb    bl,BYTE PTR [ebx+0x7d]
  4160b0:	mov    fs:0x9a349438,al
  4160b6:	jae    0x41607a
  4160b8:	mov    dh,ah
  4160ba:	push   0x474dae63
  4160bf:	je     0x416077
  4160c1:	cmp    ebx,esp
  4160c3:	jmp    0x4160a2
  4160c5:	iret   
  4160c6:	jl     0x4160f7
  4160c8:	mov    ah,0x1c
  4160ca:	jnp    0x416127
  4160cc:	clc    
  4160cd:	mov    edx,gs
  4160cf:	ds out 0x38,al
  4160d2:	sti    
  4160d3:	stos   DWORD PTR es:[edi],eax
  4160d4:	js     0x41613e
  4160d6:	dec    ecx
  4160d7:	(bad)
  4160db:	cmp    dh,cl
  4160dd:	mov    al,ds:0x2c4d2d07
  4160e2:	xor    eax,0x982aa7f2
  4160e7:	push   esi
  4160e8:	aad    0x82
  4160ea:	mov    esp,ebp
  4160ec:	(bad)  
  4160ed:	inc    BYTE PTR [ebx+0x5b68f948]
  4160f3:	add    edi,0x692148f0
  4160f9:	dec    ecx
  4160fa:	push   0xc5c968a4
  4160ff:	xchg   edi,eax
  416100:	and    al,0xda
  416102:	pop    ebx
  416103:	ret    
  416104:	je     0x41612d
  416106:	jmp    0xd0f4:0xbe30db31
  41610d:	scas   al,BYTE PTR es:[edi]
  41610e:	pop    es
  41610f:	xchg   ecx,eax
  416110:	cld    
  416111:	jg     0x4160d6
  416113:	rol    DWORD PTR [edx],0x46
  416116:	fnstenv [ecx-0x358b0d40]
  41611c:	rcr    BYTE PTR [edi+0x13c65cd3],cl
  416122:	leave  
  416123:	sbb    edi,ebx
  416125:	inc    esp
  416126:	adc    DWORD PTR [ecx-0x633e1318],ebx
  41612c:	xor    eax,0x319072b5
  416131:	cld    
  416132:	idiv   eax
  416134:	mov    dl,0x0
  416136:	push   ebx
  416137:	sub    eax,0xbd86d4a9
  41613c:	xor    al,0x55
  41613e:	popa   
  41613f:	scas   eax,DWORD PTR es:[edi]
  416140:	push   cs
  416141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416142:	aaa    
  416143:	sbb    al,0xda
  416145:	out    0xd8,al
  416147:	jno    0x4160fa
  416149:	or     al,0xef
  41614b:	cwde   
  41614c:	mov    DWORD PTR [esi+edx*1+0x485cc881],eax
  416153:	sub    BYTE PTR [ecx+0x21],al
  416156:	mov    edi,0x7a7a6ce7
  41615b:	pop    edi
  41615c:	lock lahf 
  41615e:	mov    bl,BYTE PTR [eax-0x2]
  416161:	fwait
  416162:	push   0xa
  416164:	das    
  416165:	fmul   DWORD PTR [eax+0x18ee3305]
  41616b:	iret   
  41616c:	or     esp,edi
  41616e:	(bad)  
  41616f:	xor    eax,0x939dab95
  416174:	or     bl,BYTE PTR [ecx-0x27286788]
  41617a:	gs aaa 
  41617c:	and    al,0x5c
  41617e:	mov    eax,ecx
  416180:	dec    ecx
  416181:	pop    esi
  416182:	cmp    al,BYTE PTR [edx-0x15436c63]
  416188:	loope  0x41610d
  41618a:	xlat   BYTE PTR ds:[ebx]
  41618b:	xchg   ecx,eax
  41618c:	and    DWORD PTR [edi],ecx
  41618e:	(bad)  
  41618f:	sar    BYTE PTR [edx+0x7b308647],0xe1
  416196:	test   BYTE PTR [ecx+edx*1-0x12d9a3f3],0xe9
  41619e:	aaa    
  41619f:	jmp    0xbb4019d8
  4161a4:	nop
  4161a5:	cmp    BYTE PTR [ebp+0x1fc2fad0],bl
  4161ab:	adc    BYTE PTR [ebx],dh
  4161ad:	lea    esi,[esi+edi*4-0x426ab836]
  4161b4:	addr16 dec esp
  4161b6:	je     0x4161fd
  4161b8:	push   eax
  4161b9:	push   0xa7c9f232
  4161be:	add    ebx,ebp
  4161c0:	xchg   ebx,eax
  4161c1:	push   ds
  4161c2:	fdiv   st,st(3)
  4161c4:	adc    ch,al
  4161c6:	test   al,0x77
  4161c8:	push   ecx
  4161c9:	dec    esp
  4161ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161cb:	lods   eax,DWORD PTR ds:[esi]
  4161cc:	or     BYTE PTR [ebx],ch
  4161ce:	jmp    0x4161ce
  4161d0:	cmp    al,0x4d
  4161d2:	push   ebx
  4161d3:	adc    eax,0x4ad8be77
  4161d8:	in     al,0x82
  4161da:	bound  ecx,QWORD PTR [esi+0x3623fdd0]
  4161e0:	(bad)  
  4161e1:	out    dx,eax
  4161e2:	gs in  al,0x3e
  4161e5:	adc    DWORD PTR [edi],ebp
  4161e7:	mov    ah,0xa
  4161e9:	popa   
  4161ea:	aad    0x24
  4161ec:	dec    esi
  4161ed:	push   esi
  4161ee:	test   ch,dh
  4161f0:	jmp    0x1b03:0x71375f53
  4161f7:	das    
  4161f8:	retf   
  4161f9:	imul   di,WORD PTR [ecx+0x6c],0x22aa
  4161ff:	xor    BYTE PTR [edi+0x4ecdb78b],cl
  416205:	test   DWORD PTR [ebp-0x3872d504],0xc718141
  41620f:	xchg   edx,eax
  416210:	ficomp DWORD PTR [ebx]
  416212:	sar    al,cl
  416214:	fisttp WORD PTR [ecx-0x256c59bf]
  41621a:	aam    0xcc
  41621c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621d:	xchg   ebx,eax
  41621e:	mov    esp,0xd43831a
  416223:	jbe    0x416218
  416225:	fwait
  416226:	ret    
  416227:	sbb    ecx,esp
  416229:	ds pushf 
  41622b:	xor    ah,BYTE PTR [edx+0x29]
  41622e:	loopne 0x4162a8
  416230:	cwde   
  416231:	mov    bh,0x76
  416233:	mov    dh,0xf6
  416235:	xchg   ebx,eax
  416236:	xlat   BYTE PTR ds:[ebx]
  416237:	add    ah,BYTE PTR [ebp-0x44]
  41623a:	int3   
  41623b:	hlt    
  41623c:	adc    DWORD PTR [esi],0x7e
  41623f:	push   0x1164e6d3
  416244:	ficom  DWORD PTR [esi-0x482b6798]
  41624a:	lods   eax,DWORD PTR ds:[esi]
  41624b:	outs   dx,DWORD PTR ds:[esi]
  41624c:	test   BYTE PTR [ebx+0x5],cl
  41624f:	dec    esi
  416250:	jecxz  0x4161f0
  416252:	jmp    0x4162a8
  416254:	mov    dl,0x8d
  416256:	cli    
  416257:	xor    BYTE PTR [ebp+0x20],bh
  41625a:	cmp    BYTE PTR [ecx-0x36],dl
  41625d:	jl     0x4162a9
  41625f:	data16 sub al,0xbf
  416262:	sti    
  416263:	sbb    esi,ebx
  416265:	int    0x19
  416267:	push   esi
  416268:	out    dx,eax
  416269:	cdq    
  41626a:	cmp    ecx,DWORD PTR [ebx-0x4e]
  41626d:	xor    bl,bh
  41626f:	lea    esi,[ecx+0x3a25242e]
  416275:	dec    esi
  416276:	repz in eax,0xcc
  416279:	stos   DWORD PTR es:[edi],eax
  41627a:	xchg   esp,eax
  41627b:	repz xchg esp,eax
  41627d:	jmp    0x41627f
  41627f:	and    cl,bl
  416281:	hlt    
  416282:	repz mov bh,0x83
  416285:	je     0x416289
  416287:	or     ebx,DWORD PTR [ebx]
  416289:	mov    dh,bh
  41628b:	jno    0x4162f9
  41628d:	and    DWORD PTR ds:0x1ea81885,edx
  416293:	div    BYTE PTR [edi-0x5f4d88ce]
  416299:	add    BYTE PTR [edi+ebp*4+0x1715b82f],al
  4162a0:	sbb    eax,0xbb902654
  4162a5:	cmp    DWORD PTR [esi],ecx
  4162a7:	inc    esp
  4162a8:	add    ebx,0xffffffd0
  4162ab:	pop    ebx
  4162ac:	and    DWORD PTR [edi-0x72e6dcc4],ebp
  4162b2:	inc    esi
  4162b3:	adc    eax,0x9d921021
  4162b8:	jmp    0x4162f1
  4162ba:	out    dx,al
  4162bb:	cld    
  4162bc:	lods   eax,DWORD PTR ds:[esi]
  4162bd:	pushf  
  4162be:	out    0x8b,al
  4162c0:	test   DWORD PTR [edi-0x3a],esi
  4162c3:	shl    BYTE PTR [edi],cl
  4162c5:	in     al,0x42
  4162c7:	sbb    al,BYTE PTR [bp+0x4a]
  4162cb:	mov    BYTE PTR [edx+0x63],dh
  4162ce:	stos   DWORD PTR es:[edi],eax
  4162cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d0:	mov    ecx,0x14e11963
  4162d5:	and    eax,DWORD PTR [edi+0x54]
  4162d8:	add    bl,BYTE PTR [ecx+0x3252b391]
  4162de:	into   
  4162df:	ja     0xb8453c26
  4162e5:	inc    eax
  4162e6:	rcr    DWORD PTR [esi],1
  4162e8:	fwait
  4162e9:	dec    edi
  4162ea:	sub    bl,cl
  4162ec:	pop    eax
  4162ed:	jmp    0x41634a
  4162ef:	or     al,0xe1
  4162f1:	mov    WORD PTR [ebx+0x51a5b3c6],dx
  4162f8:	loopne 0x41627c
  4162fa:	(bad)  
  4162fb:	cwde   
  4162fc:	mov    bh,0x4f
  4162fe:	leave  
  4162ff:	xchg   ebx,eax
  416300:	lock stc 
  416302:	jecxz  0x41632e
  416304:	xor    eax,0xea0ac326
  416309:	push   edi
  41630a:	jns    0x416347
  41630c:	add    DWORD PTR [esi-0x6a],esi
  41630f:	dec    edx
  416310:	pop    esi
  416311:	icebp  
  416312:	mov    ds:0x46318d8,al
  416317:	push   esi
  416318:	xlat   BYTE PTR ds:[ebx]
  416319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631a:	inc    ebx
  41631b:	ja     0x4162b0
  41631d:	aaa    
  41631e:	xor    ch,BYTE PTR [ebx+0x77]
  416321:	jmp    0x4405:0x523c22b
  416328:	retf   0x7cc9
  41632b:	pop    ecx
  41632c:	fs adc al,0x3
  41632f:	pop    ebp
  416330:	fwait
  416331:	mov    ch,0x39
  416333:	repz sub ecx,DWORD PTR [edx]
  416336:	sti    
  416337:	mov    eax,ebp
  416339:	std    
  41633a:	lock push esp
  41633c:	test   al,0xd1
  41633e:	and    eax,0xa2d3c7e7
  416343:	pop    ecx
  416344:	jb     0x41638b
  416346:	cmp    al,0x4a
  416348:	(bad)  
  416349:	fsubp  st(4),st
  41634b:	pop    ds
  41634c:	and    ecx,esi
  41634e:	inc    eax
  41634f:	aaa    
  416350:	std    
  416351:	cmp    DWORD PTR ds:0x1544c8e6,0xffffff8a
  416358:	ins    BYTE PTR es:[edi],dx
  416359:	das    
  41635a:	jmp    0x7f90:0x7d4fce83
  416361:	popa   
  416362:	out    0x5a,al
  416364:	dec    esi
  416365:	dec    edx
  416366:	push   eax
  416367:	dec    edi
  416368:	(bad)  
  416369:	pop    eax
  41636a:	mov    eax,ds:0xf46a71a
  41636f:	mov    al,0xea
  416371:	sahf   
  416372:	mov    bl,0xf6
  416374:	(bad)  
  416376:	(bad)  
  416377:	(bad)  
  416378:	addr16 (bad) 
  41637a:	mov    ch,0xf2
  41637c:	daa    
  41637d:	bound  esi,QWORD PTR [ecx+ecx*8+0x6c]
  416381:	xchg   edx,eax
  416382:	sub    bl,dh
  416384:	mov    ebp,0xe0169f3b
  416389:	std    
  41638a:	and    eax,0x8fac05c
  41638f:	shl    ebp,1
  416391:	jle    0x416398
  416393:	cli    
  416394:	in     eax,0xc
  416396:	lahf   
  416397:	nop
  416398:	call   0x17daf3f4
  41639d:	xor    ebp,DWORD PTR [edx-0x3933bf8e]
  4163a3:	pushf  
  4163a4:	sbb    edi,DWORD PTR [esi+edx*4-0x2f4ff367]
  4163ab:	mov    eax,0xa626bfc4
  4163b0:	pop    esp
  4163b1:	daa    
  4163b2:	or     eax,0x2b37f0ec
  4163b7:	fiadd  DWORD PTR [ebx]
  4163b9:	pop    ebp
  4163ba:	mov    esp,0x8bbc5d89
  4163bf:	push   ebp
  4163c0:	or     BYTE PTR [ebx],dh
  4163c2:	rol    BYTE PTR [ebx],1
  4163c4:	(bad)  
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	inc    DWORD PTR [eax]
  4165c6:	cmp    edi,DWORD PTR [ebx+0x62]
  4165c9:	inc    edx
  4165ca:	dec    eax
  4165cb:	inc    esp
  4165cc:	test   al,0x1c
  4165ce:	lods   al,BYTE PTR ds:[esi]
  4165cf:	jg     0x41662c
  4165d1:	arpl   WORD PTR [esi],ax
  4165d3:	inc    esp
  4165d4:	add    DWORD PTR [eax],eax
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x131040ae
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx+eax*1+0x5460000],ch
  419e8b:	arpl   WORD PTR [edx],di
  419e8d:	adc    eax,0x407dcdc5
  419e92:	loopne 0x419e30
  419e94:	dec    edi
  419e95:	(bad)  
  419e96:	enter  0x78e4,0x66
  419e9a:	or     esi,DWORD PTR [ecx+0x75]
  419e9d:	mov    ecx,0xf0a2c942
  419ea2:	into   
  419ea3:	enter  0xaf75,0x8f
  419ea7:	push   0x3a
  419ea9:	xor    ch,ah
  419eab:	cmp    BYTE PTR [ebx+0x65],dh
  419eae:	mov    ebp,0xa027162d
  419eb3:	add    al,0xef
  419eb5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb7:	adc    eax,0x8ec54621
  419ebc:	sbb    ecx,DWORD PTR [eax+edi*1+0x3bfb12f]
  419ec3:	mov    ds:0x730f9daf,al
  419ec8:	sbb    eax,0x3d70cd3
  419ecd:	sbb    bl,al
  419ecf:	xor    ecx,DWORD PTR [ebp-0x2eb220c4]
  419ed5:	repnz and ah,0x9
  419ed9:	or     ebp,eax
  419edb:	add    DWORD PTR [eax-0x169b7ff5],0xffffffec
  419ee2:	aaa    
  419ee3:	in     al,dx
  419ee4:	adc    bh,bh
  419ee6:	dec    eax
  419ee7:	(bad)  
  419ee8:	jle    0x419f4d
  419eea:	das    
  419eeb:	and    eax,0xb2d6d540
  419ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef1:	mov    esi,0x7bdf3a5d
  419ef6:	and    BYTE PTR [edi],bh
  419ef8:	or     al,0x5d
  419efa:	sbb    DWORD PTR [ebp+0xa33cf72],0xb47efb8b
  419f04:	add    BYTE PTR [eax-0x35e0859a],dh
  419f0a:	xchg   edx,eax
  419f0b:	mov    ebp,DWORD PTR [edi]
  419f0d:	gs cmp al,0x89
  419f10:	leave  
  419f11:	mov    WORD PTR [edi],ds
  419f13:	pop    edi
  419f14:	out    0x17,al
  419f16:	scas   al,BYTE PTR es:[edi]
  419f17:	jg     0x419f47
  419f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1a:	mov    eax,DWORD PTR [edi]
  419f1c:	xchg   ebx,eax
  419f1d:	xor    al,0x58
  419f1f:	inc    ebp
  419f20:	or     BYTE PTR [ecx-0x34],dl
  419f23:	(bad)  
  419f24:	jl     0x419eba
  419f26:	xor    cl,dl
  419f28:	mov    WORD PTR [ebx+0x16],?
  419f2b:	adc    bl,ah
  419f2d:	pop    es
  419f2e:	push   edx
  419f2f:	pop    ecx
  419f30:	and    eax,esi
  419f32:	lahf   
  419f33:	(bad)  
  419f35:	pop    esp
  419f36:	jmp    0x419eee
  419f38:	push   esp
  419f39:	adc    ah,bl
  419f3b:	retf   0x56cb
  419f3e:	xor    BYTE PTR [esi],bh
  419f40:	xchg   DWORD PTR [ebx+0x41],ebp
  419f43:	mov    ch,0x61
  419f45:	mov    eax,0x3011080
  419f4a:	fisubr DWORD PTR [edi+0x1612c89d]
  419f50:	push   ebx
  419f51:	nop
  419f52:	sbb    al,0xba
  419f54:	jg     0x419edf
  419f56:	push   cs
  419f57:	pushf  
  419f58:	dec    esp
  419f59:	ss sub al,0x5c
  419f5c:	aas    
  419f5d:	mov    bh,0xdb
  419f5f:	adc    bl,dh
  419f61:	push   edi
  419f62:	test   al,0x44
  419f64:	icebp  
  419f65:	jl     0x419fa6
  419f67:	push   edx
  419f68:	ret    0x61f9
  419f6b:	pop    ebp
  419f6c:	and    al,BYTE PTR [ecx+0x44950f77]
  419f72:	cmp    esp,esp
  419f74:	sub    edx,eax
  419f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f77:	jecxz  0x419f38
  419f79:	xchg   cx,ax
  419f7b:	lds    edi,FWORD PTR [ecx-0x711751]
  419f81:	lahf   
  419f82:	sbb    eax,0x6931f4ca
  419f87:	pop    eax
  419f88:	jns    0x419ffa
  419f8a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  419f8c:	out    0x19,al
  419f8e:	pop    ss
  419f8f:	push   0xf8de179c
  419f94:	int    0x3a
  419f96:	in     al,0x67
  419f98:	sahf   
  419f99:	fwait
  419f9a:	mov    eax,ds:0x316a49dc
  419f9f:	dec    esp
  419fa0:	jb     0x419fab
  419fa2:	pop    ss
  419fa3:	mov    dl,0x14
  419fa5:	fadd   DWORD PTR [ebx]
  419fa7:	xor    ebx,DWORD PTR [ecx]
  419fa9:	sub    ebp,DWORD PTR [ebp-0x6c]
  419fac:	test   eax,0xbe84463c
  419fb1:	sbb    dh,0x3f
  419fb4:	push   ebx
  419fb5:	in     al,0x71
  419fb7:	(bad)  
  419fb8:	and    ecx,DWORD PTR [edx-0x16344d49]
  419fbe:	sub    esi,eax
  419fc0:	jne    0x419fc0
  419fc2:	out    dx,al
  419fc3:	xchg   esp,eax
  419fc4:	cmp    al,BYTE PTR [edi+0x462dab68]
  419fca:	in     al,dx
  419fcb:	xor    ah,BYTE PTR [ebp+0x29]
  419fce:	std    
  419fcf:	leave  
  419fd0:	adc    bl,BYTE PTR [ecx+0x123f60bc]
  419fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd7:	js     0x41a055
  419fd9:	(bad)  [eax-0x77ada45d]
  419fdf:	pop    ss
  419fe0:	pop    ss
  419fe1:	pop    ecx
  419fe2:	sub    dl,ah
  419fe4:	mov    bh,0x7a
  419fe6:	outs   dx,BYTE PTR ds:[esi]
  419fe7:	ds push esi
  419fe9:	sub    esi,esp
  419feb:	retf   
  419fec:	jne    0x419f8a
  419fee:	lds    eax,FWORD PTR [ebp+0x267c601d]
  419ff4:	int3   
  419ff5:	and    dh,BYTE PTR [edi-0x49]
  419ff8:	pop    ebx
  419ff9:	loop   0x419fa1
  419ffb:	jnp    0x41a007
  419ffd:	leave  
  419ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fff:	mov    eax,ds:0xed14b7a8
  41a004:	ret    
  41a005:	mov    ebp,edi
  41a007:	jge    0x419fe6
  41a009:	pop    esp
  41a00a:	test   BYTE PTR [ebp+0x6e621356],dh
  41a010:	mov    dh,0x9
  41a012:	add    esi,edx
  41a014:	mov    esp,DWORD PTR [esi]
  41a016:	into   
  41a017:	ins    DWORD PTR es:[edi],dx
  41a018:	mov    al,dh
  41a01a:	dec    eax
  41a01b:	imul   edi,edx,0x9ccfa804
  41a021:	sahf   
  41a022:	mov    edi,0x47b0de11
  41a027:	push   ebx
  41a028:	inc    ecx
  41a029:	jbe    0x41a04f
  41a02b:	xor    DWORD PTR [ebx+0x6ad8bb3b],0x4f
  41a032:	fistp  DWORD PTR [ecx]
  41a034:	sbb    al,BYTE PTR [eax]
  41a036:	jmp    0x71b7e87b
  41a03b:	out    dx,eax
  41a03c:	into   
  41a03d:	push   ds
  41a03e:	add    DWORD PTR [ebx+0x33],esi
  41a041:	inc    edi
  41a042:	sti    
  41a043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a044:	and    ah,ch
  41a046:	inc    ebx
  41a047:	pop    esp
  41a048:	mov    ds:0xc78514c8,al
  41a04d:	jmp    0x73c49cc7
  41a052:	cwde   
  41a053:	push   esi
  41a054:	mov    edx,DWORD PTR [edx-0x5614a2f]
  41a05a:	mov    edx,0x957f929a
  41a05f:	mov    bh,0x56
  41a061:	hlt    
  41a062:	lahf   
  41a063:	repz scas eax,DWORD PTR es:[edi]
  41a065:	les    esp,FWORD PTR [ebx+0x45]
  41a068:	jecxz  0x41a07f
  41a06a:	stos   DWORD PTR es:[edi],eax
  41a06b:	lea    ebp,ds:0xe4cd5e39
  41a071:	and    BYTE PTR [edx],al
  41a073:	rcl    ecx,1
  41a075:	iret   
  41a076:	push   ecx
  41a077:	fidivr DWORD PTR [eax+0x276e1687]
  41a07d:	cmp    eax,0x621ab81d
  41a082:	pop    ebp
  41a083:	mov    cl,BYTE PTR [edx+0x2af22b5e]
  41a089:	xor    BYTE PTR [eax],ch
  41a08b:	adc    eax,0xc005a04f
  41a090:	xor    al,0xe1
  41a092:	pushf  
  41a093:	dec    ebp
  41a094:	sub    ah,BYTE PTR [edi+0x60f40c79]
  41a09a:	aas    
  41a09b:	push   esi
  41a09c:	and    DWORD PTR [edi-0x24],0xffffffef
  41a0a0:	xor    DWORD PTR [esi],ebx
  41a0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a3:	add    dh,al
  41a0a5:	sbb    eax,0xf77092fb
  41a0aa:	sbb    edx,esp
  41a0ac:	sbb    eax,0x477d52f1
  41a0b1:	pop    ds
  41a0b2:	mov    ebx,0xdf79686e
  41a0b7:	ret    
  41a0b8:	sbb    eax,DWORD PTR [eax]
  41a0ba:	jns    0x41a077
  41a0bc:	push   es
  41a0bd:	mov    ecx,eax
  41a0bf:	inc    ecx
  41a0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c1:	xchg   esp,eax
  41a0c2:	out    0xd9,al
  41a0c4:	cli    
  41a0c5:	inc    esp
  41a0c6:	xor    BYTE PTR [ecx],al
  41a0c8:	inc    BYTE PTR [ecx-0x7b]
  41a0cb:	mov    bh,0x2e
  41a0cd:	mov    ds:0x1f6a5fc8,eax
  41a0d2:	mov    ebp,0x420c16ef
  41a0d7:	js     0x41a114
  41a0d9:	(bad)  
  41a0da:	repnz cs or cl,bl
  41a0de:	dec    ecx
  41a0df:	pop    ds
  41a0e0:	rol    DWORD PTR [esi],0x9b
  41a0e3:	(bad)  [ebp+0x42]
  41a0e6:	mov    BYTE PTR [ecx+esi*4+0x4ca171d4],cl
  41a0ed:	rcl    BYTE PTR [ecx-0x6c],cl
  41a0f0:	in     eax,0x13
  41a0f2:	push   ecx
  41a0f3:	mov    al,ds:0x9500d9c6
  41a0f8:	ss mov edi,0x744b99b3
  41a0fe:	nop
  41a0ff:	and    dl,BYTE PTR [esi+edi*4]
  41a102:	ret    
  41a103:	mov    ah,0x75
  41a105:	retf   
  41a106:	xor    BYTE PTR gs:[edi],cl
  41a109:	sub    eax,0x15e0d80a
  41a10e:	mov    BYTE PTR [edi],bl
  41a110:	outs   dx,BYTE PTR ds:[esi]
  41a111:	bound  esp,QWORD PTR [edx+0x6f]
  41a114:	out    dx,al
  41a115:	fild   DWORD PTR [edx+0x72]
  41a118:	inc    edx
  41a119:	xchg   ebx,eax
  41a11a:	cmc    
  41a11b:	pop    ss
  41a11c:	fsub   DWORD PTR [edx]
  41a11e:	sbb    eax,0xefda114d
  41a123:	mov    BYTE PTR [edx-0x39],dh
  41a126:	popa   
  41a127:	or     edx,DWORD PTR [ebx+0x5e4efac4]
  41a12d:	mov    bl,0x89
  41a12f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a130:	pop    ebx
  41a131:	pcmpgtd mm6,mm3
  41a134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a135:	mov    ecx,0x1fe9f175
  41a13a:	jge    0x41a1b9
  41a13c:	(bad)  
  41a13d:	data16 mov dl,0x36
  41a140:	pop    edi
  41a141:	or     al,0x4c
  41a143:	imul   ecx,eax,0x2710fe1b
  41a149:	outs   dx,BYTE PTR ds:[esi]
  41a14a:	ins    BYTE PTR es:[edi],dx
  41a14b:	mov    al,0xb8
  41a14d:	loopne 0x41a0ea
  41a14f:	fcmovu st,st(2)
  41a151:	repnz out dx,eax
  41a153:	push   esi
  41a154:	int    0x2e
  41a156:	outs   dx,BYTE PTR ds:[esi]
  41a157:	xchg   ecx,eax
  41a158:	sub    eax,0xdd655bbd
  41a15d:	cld    
  41a15e:	mov    ebx,0x3cd41839
  41a163:	push   edi
  41a164:	mov    eax,ds:0x53c25c0e
  41a169:	or     BYTE PTR ds:0xa052e1b4,cl
  41a16f:	cmp    BYTE PTR [edi-0x3d5edb4b],dh
  41a175:	mov    BYTE PTR [esi-0x7b],dh
  41a178:	(bad)  
  41a17a:	pop    edx
  41a17b:	add    ax,0x6c4e
  41a17f:	retf   0x3417
  41a182:	fcmovnu st,st(7)
  41a184:	gs jmp 0x1146:0x4950814d
  41a18c:	inc    ecx
  41a18d:	jge    0x41a1ee
  41a18f:	aaa    
  41a190:	xlat   BYTE PTR ds:[ebx]
  41a191:	in     al,0x41
  41a193:	ja     0x41a199
  41a195:	aam    0x54
  41a197:	shr    ebx,1
  41a199:	mov    ds:0x4600b52f,al
  41a19e:	test   al,0xf6
  41a1a0:	dec    esi
  41a1a1:	ss mov al,0xb2
  41a1a4:	pop    ebp
  41a1a5:	cmp    ebx,DWORD PTR [edx]
  41a1a7:	mov    eax,ds:0xa9de727f
  41a1ac:	mov    dl,0x38
  41a1ae:	dec    ebx
  41a1af:	retf   
  41a1b0:	fnstcw WORD PTR [esi-0x57]
  41a1b3:	popf   
  41a1b4:	clc    
  41a1b5:	(bad)  [eax-0xf511ac]
  41a1bb:	xor    esp,esp
  41a1bd:	add    ah,dh
  41a1bf:	shl    BYTE PTR ss:[edx-0x1c],0xad
  41a1c4:	push   eax
  41a1c5:	cli    
  41a1c6:	mov    bh,0x98
  41a1c8:	push   eax
  41a1c9:	nop
  41a1ca:	test   eax,0x49a78845
  41a1cf:	not    bl
  41a1d1:	xchg   edi,eax
  41a1d2:	mov    ebp,0xc146dd2e
  41a1d7:	sub    BYTE PTR [ebp+eax*1+0x1e86d73e],al
  41a1de:	lea    eax,[edi+0x40]
  41a1e1:	jne    0x41a260
  41a1e3:	sete   ah
  41a1e6:	cmp    DWORD PTR [edi-0x35],ecx
  41a1e9:	add    BYTE PTR [edi-0x2184f4f6],ah
  41a1ef:	and    ebp,DWORD PTR [eax]
  41a1f1:	(bad)  
  41a1f3:	mov    al,0x70
  41a1f5:	lahf   
  41a1f6:	test   BYTE PTR [ecx+0x35b534a8],cl
  41a1fc:	ret    
  41a1fd:	(bad)  
  41a1fe:	ja     0x41a27a
  41a200:	pop    esp
  41a201:	std    
  41a202:	xchg   edi,eax
  41a203:	ret    0x1aa7
  41a206:	(bad)  
  41a207:	ds loopne 0x41a1d5
  41a20a:	stos   BYTE PTR es:[edi],al
  41a20b:	clc    
  41a20c:	dec    edi
  41a20d:	push   esi
  41a20e:	fxch   st(4)
  41a210:	or     eax,0x2b34b926
  41a215:	and    ebp,ebp
  41a217:	repnz (bad) 
  41a219:	popf   
  41a21a:	xor    BYTE PTR [eax-0xa],bh
  41a21d:	sub    bh,bh
  41a21f:	test   eax,0x311a9e88
  41a224:	push   esp
  41a225:	mov    ds,ebx
  41a227:	imul   ebp,DWORD PTR [ecx-0x434ba23a],0x2
  41a22e:	ret    
  41a22f:	cli    
  41a230:	inc    ebp
  41a231:	imul   esi,DWORD PTR [ebx-0x64],0xffffffe7
	...
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	add    ebx,ebp
  41a244:	mov    ds:0xdeeebef,eax
  41a249:	mov    ebp,DWORD PTR [edi]
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	adc    DWORD PTR [ebx+0x11c6706c],eax
  41a252:	and    BYTE PTR [ecx],al
  41a254:	add    BYTE PTR [ebx+eax*1-0x6adb0000],ch
  41a25b:	jb     0x41a263
  41a25d:	xchg   edx,eax
  41a25e:	mov    ah,0x64
  41a260:	sbb    DWORD PTR ds:0x43f60b24,esi
  41a266:	xchg   bh,bl
  41a268:	mov    dh,BYTE PTR [edi-0x5a]
  41a26b:	or     ebx,esp
  41a26d:	sub    eax,0xd4f2d53c
  41a272:	push   0x165dd37d
  41a277:	fld    DWORD PTR [esi]
  41a279:	push   0xfffffff0
  41a27b:	and    al,0x7e
  41a27d:	jae    0x41a27f
  41a27f:	mov    edx,0xeb4647f1
  41a284:	mov    ah,0xd7
  41a286:	in     al,dx
  41a287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a288:	dec    ebp
  41a289:	mov    ebp,0x275ce109
  41a28e:	dec    ebp
  41a28f:	retf   0xb670
  41a292:	out    dx,eax
  41a293:	push   ds
  41a294:	mov    esp,0x630b8507
  41a299:	inc    ecx
  41a29a:	add    ah,BYTE PTR [edi+edx*4-0x30]
  41a29e:	repnz fsub st(4),st
  41a2a1:	std    
  41a2a2:	fidiv  WORD PTR [eax]
  41a2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2a5:	sbb    BYTE PTR [ebx+0x3fbc9fde],0x86
  41a2ac:	cld    
  41a2ad:	mov    ecx,DWORD PTR ds:0xddeb405
  41a2b3:	nop
  41a2b4:	jmp    0xdf256b54
  41a2b9:	rcr    DWORD PTR ds:0x706f47c6,0x43
  41a2c0:	inc    eax
  41a2c1:	push   ss
  41a2c2:	mov    bh,0xc8
  41a2c4:	add    BYTE PTR [ebp+0x56],al
  41a2c7:	(bad)  
  41a2c8:	fstp   DWORD PTR [ecx]
  41a2ca:	push   edi
  41a2cb:	lahf   
  41a2cc:	shr    BYTE PTR [edi-0x1832b005],0x67
  41a2d3:	fcomp  st(2)
  41a2d5:	js     0x41a264
  41a2d7:	les    ecx,FWORD PTR [edi+0x8af0340]
  41a2dd:	push   eax
  41a2de:	cld    
  41a2df:	add    DWORD PTR [eax],esi
  41a2e1:	cmp    DWORD PTR [edx-0x9c60b82],esp
  41a2e7:	dec    ecx
  41a2e8:	sub    DWORD PTR [ecx],0x4dc166d5
  41a2ee:	stc    
  41a2ef:	push   ecx
  41a2f0:	je     0x41a34c
  41a2f2:	xchg   edi,eax
  41a2f3:	jb     0x41a287
  41a2f5:	jmp    0xe953:0x45286ed5
  41a2fc:	jnp    0x41a341
  41a2fe:	jecxz  0x41a2dc
  41a300:	ret    0x2bd6
  41a303:	sub    eax,0x5a74450e
  41a308:	lods   eax,DWORD PTR ds:[esi]
  41a309:	lock scas eax,DWORD PTR es:[edi]
  41a30b:	out    dx,al
  41a30c:	mov    cl,ah
  41a30e:	mov    cl,0x83
  41a310:	data16 and al,BYTE PTR ds:0xf6e2a950
  41a317:	retf   
  41a318:	jge    0x41a320
  41a31a:	push   edx
  41a31b:	pop    edx
  41a31c:	sahf   
  41a31d:	stos   DWORD PTR es:[edi],eax
  41a31e:	cs mov esp,0xf2060c16
  41a324:	adc    ch,bh
  41a326:	sub    BYTE PTR ss:[ebp-0x60805790],bl
  41a32d:	into   
  41a32e:	mov    bl,0x39
  41a330:	xor    ah,BYTE PTR ds:[ebx]
  41a333:	ins    BYTE PTR es:[edi],dx
  41a334:	pop    ds
  41a335:	(bad)  
  41a336:	jmp    0x41a2b9
  41a338:	pusha  
  41a339:	mov    ebp,0xf9e3bef7
  41a33e:	ror    esi,0x8f
  41a341:	xor    ah,BYTE PTR [edi]
  41a343:	cmp    eax,eax
  41a345:	cli    
  41a346:	neg    DWORD PTR [eax]
  41a348:	jmp    0xe708:0xe3ae910f
  41a34f:	xchg   BYTE PTR [ebx+0xb],dh
  41a352:	and    DWORD PTR [ebp-0x44e3730],ebp
  41a358:	adc    BYTE PTR [eax+0x60],al
  41a35b:	and    ax,WORD PTR [eax+0x5]
  41a35f:	gs test eax,0xe629d321
  41a365:	sub    al,0x7a
  41a367:	lahf   
  41a368:	sub    al,0x5
  41a36a:	push   ebx
  41a36b:	inc    esi
  41a36c:	(bad)  
  41a36d:	cmp    cl,BYTE PTR [eax+0x33e3f662]
  41a373:	mov    cl,0x9c
  41a375:	repz inc edi
  41a377:	cmp    ch,BYTE PTR [ebp-0x3]
  41a37a:	sahf   
  41a37b:	shl    DWORD PTR [ebx+0x4],0xd5
  41a37f:	push   ebp
  41a380:	mov    ah,0xe0
  41a382:	lock or al,0x25
  41a385:	cmp    ah,BYTE PTR ds:0x286f4fa3
  41a38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38c:	sub    DWORD PTR ss:[esi+0x67],ecx
  41a390:	int3   
  41a391:	ds cld 
  41a393:	adc    esp,0x9552535b
  41a399:	fdivr  st(6),st
  41a39b:	int    0xde
  41a39d:	sbb    BYTE PTR [edx-0x2b],bl
  41a3a0:	ret    0x119
  41a3a3:	in     al,0x97
  41a3a5:	jmp    edi
  41a3a7:	sub    BYTE PTR [esi+0x25cfaec9],ah
  41a3ad:	outs   dx,BYTE PTR ds:[esi]
  41a3ae:	popf   
  41a3af:	ror    BYTE PTR [ebx-0x54],cl
  41a3b2:	aaa    
  41a3b3:	leave  
  41a3b4:	sub    bh,BYTE PTR ds:0xda4c92ea
  41a3ba:	and    ecx,DWORD PTR [eax]
  41a3bc:	mov    ch,0x52
  41a3be:	jecxz  0x41a39f
  41a3c0:	xlat   BYTE PTR ds:[ebx]
  41a3c1:	mov    al,ds:0x5583e015
  41a3c6:	cmp    BYTE PTR [ecx+0x4a87d268],0x53
  41a3cd:	push   ss
  41a3ce:	mov    dh,BYTE PTR [edx-0x5e]
  41a3d1:	inc    esp
  41a3d2:	pop    ebp
  41a3d3:	sub    BYTE PTR [edx-0x56a6b38b],dl
  41a3d9:	(bad)  
  41a3da:	xor    BYTE PTR [ebx+esi*1],dh
  41a3dd:	or     ah,al
  41a3df:	xor    BYTE PTR [eax+0x2fa4be46],al
  41a3e5:	push   ss
  41a3e6:	cwde   
  41a3e7:	sahf   
  41a3e8:	mov    bl,0x97
  41a3ea:	mov    esi,0x6d51e77f
  41a3ef:	push   0x63e320d2
  41a3f4:	dec    eax
  41a3f5:	add    eax,0xf7de5f86
  41a3fa:	lahf   
  41a3fb:	fyl2xp1 
  41a3fd:	cmp    BYTE PTR [edx-0x47327c94],ch
  41a403:	ins    BYTE PTR es:[edi],dx
  41a404:	or     DWORD PTR [ebx+0x6b6b9cb9],ebx
  41a40a:	add    eax,0x673fa99c
  41a40f:	jno    0x41a3af
  41a411:	adc    DWORD PTR [edx+0x78ead176],0xffffffea
  41a418:	xchg   esp,eax
  41a419:	or     al,0x27
  41a41b:	add    DWORD PTR [ecx-0xcc61a40],ebp
  41a421:	jns    0x41a42e
  41a423:	test   al,0xce
  41a425:	pop    ebp
  41a426:	rol    BYTE PTR [esi-0x4db0415e],0x8
  41a42d:	cmp    al,BYTE PTR [ecx+eiz*4]
  41a430:	jbe    0x41a486
  41a432:	stos   BYTE PTR es:[edi],al
  41a433:	inc    BYTE PTR [esi+0xaea3d71]
  41a439:	cmc    
  41a43a:	pop    esp
  41a43b:	fnstenv [ebp+edx*2-0x73]
  41a43f:	repz sbb edi,DWORD PTR [ebx]
  41a442:	inc    eax
  41a443:	push   ebx
  41a444:	xchg   edx,eax
  41a445:	or     BYTE PTR [ebx+0x8],bh
  41a448:	loop   0x41a494
  41a44a:	mov    BYTE PTR [edx-0x1a53b02c],cl
  41a450:	pop    ss
  41a451:	cmp    al,0x3a
  41a453:	data16 fisubr DWORD PTR cs:[edi-0x1d]
  41a458:	or     esp,ebp
  41a45a:	ja     0x41a4b2
  41a45c:	jo     0x41a4cc
  41a45e:	sub    al,0x11
  41a460:	add    eax,0x7a422588
  41a465:	loop   0x41a4a3
  41a467:	repz xor BYTE PTR [esi-0x26],ah
  41a46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a46c:	nop
  41a46d:	inc    esp
  41a46e:	int    0xa4
  41a470:	sbb    BYTE PTR [edx+0x1df6b1f],dl
  41a476:	(bad)  
  41a477:	scas   eax,DWORD PTR es:[edi]
  41a478:	and    BYTE PTR [esi+0x3a],0x95
  41a47c:	xchg   ebx,eax
  41a47d:	aas    
  41a47e:	int3   
  41a47f:	xchg   esi,eax
  41a480:	pushw  0x5507
  41a484:	or     edi,DWORD PTR [ebx-0x3d33bc85]
  41a48a:	in     eax,dx
  41a48b:	pop    ss
  41a48c:	loopne 0x41a424
  41a48e:	scas   eax,DWORD PTR es:[edi]
  41a48f:	jb     0x41a46e
  41a491:	jl     0x41a495
  41a493:	popa   
  41a494:	xor    BYTE PTR [edi],bh
  41a496:	dec    esp
  41a497:	push   ss
  41a498:	das    
  41a499:	rcr    ah,cl
  41a49b:	sbb    bl,BYTE PTR [eax-0x70]
  41a49e:	pop    es
  41a49f:	nop
  41a4a0:	mov    bh,0x2d
  41a4a2:	dec    ecx
  41a4a3:	push   DWORD PTR [edi+0x18e6a4a8]
  41a4a9:	hlt    
  41a4aa:	cwde   
  41a4ab:	outs   dx,BYTE PTR ds:[esi]
  41a4ac:	push   ecx
  41a4ad:	sti    
  41a4ae:	push   esp
  41a4af:	repnz sbb DWORD PTR [eax-0xd],eax
  41a4b3:	outs   dx,DWORD PTR ds:[esi]
  41a4b4:	xchg   ebx,eax
  41a4b5:	add    dl,BYTE PTR [esi*8+0x3eec97e3]
  41a4bc:	inc    edx
  41a4bd:	cdq    
  41a4be:	mov    ds:0xb7a8110d,eax
  41a4c3:	or     ebp,ebx
  41a4c5:	mov    bh,0xdc
  41a4c7:	stc    
  41a4c8:	in     al,0x55
  41a4ca:	jno    0x41a4b5
  41a4cc:	les    edi,FWORD PTR [eax-0x37040433]
  41a4d2:	mov    eax,0x4238f41c
  41a4d7:	add    BYTE PTR [ebp+0x8a7c8],ah
  41a4dd:	or     DWORD PTR [edi-0x2],ecx
  41a4e0:	or     BYTE PTR [ebx],dh
  41a4e2:	fnstenv [edx]
  41a4e4:	out    0xfc,al
  41a4e6:	jnp    0x41a511
  41a4e8:	lea    esi,[ebx+0x27]
  41a4eb:	fild   DWORD PTR ds:[ebp-0x8af183]
  41a4f2:	(bad)  
  41a4f3:	or     DWORD PTR [ebx-0x73425f69],edx
  41a4f9:	inc    edx
  41a4fa:	ss pop esp
  41a4fc:	fwait
  41a4fd:	push   0x85bc8bc
  41a502:	repnz xor ah,BYTE PTR [ebx+0x10]
  41a506:	popf   
  41a507:	js     0x41a545
  41a509:	fs stos DWORD PTR es:[edi],eax
  41a50b:	push   0x3333b434
  41a510:	(bad)  
  41a511:	mov    ah,0xc
  41a513:	xor    dl,BYTE PTR [esi]
  41a515:	loope  0x41a4e5
  41a517:	shl    BYTE PTR [ebp+0x41],1
  41a51a:	ret    
  41a51b:	cmc    
  41a51c:	les    eax,FWORD PTR [ebx+0x2f990c03]
  41a522:	sub    esi,DWORD PTR cs:[edi]
  41a525:	ret    
  41a526:	or     ecx,esp
  41a528:	(bad)
  41a52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a52c:	pop    edi
  41a52d:	lods   eax,DWORD PTR ds:[esi]
  41a52e:	in     eax,0xaa
  41a530:	pop    ds
  41a531:	and    ebp,DWORD PTR [edx+0x50ecf8f5]
  41a537:	inc    edi
  41a538:	les    edx,FWORD PTR [edx+0x69]
  41a53b:	adc    cl,BYTE PTR [ecx-0x204c78b]
  41a541:	ins    DWORD PTR es:[edi],dx
  41a542:	push   cs
  41a543:	and    BYTE PTR [edx],al
  41a545:	mov    esp,0x56f7cae4
  41a54a:	test   al,0xca
  41a54c:	jg     0x41a5b5
  41a54e:	sub    BYTE PTR [ecx+0x41],cl
  41a551:	ja     0x41a4dd
  41a553:	pop    ss
  41a554:	push   ebp
  41a555:	pushf  
  41a556:	mov    ch,0xc4
  41a558:	loop   0x41a593
  41a55a:	jae    0x41a504
  41a55c:	stos   DWORD PTR es:[edi],eax
  41a55d:	jle    0x41a574
  41a55f:	jge    0x41a4ee
  41a561:	inc    edx
  41a562:	cld    
  41a563:	or     DWORD PTR [eax],edx
  41a565:	ror    BYTE PTR [ecx-0x2e52aec2],1
  41a56b:	ret    
  41a56c:	out    0x14,al
  41a56e:	adc    DWORD PTR [edi+0x15],esi
  41a571:	fmul   st,st(0)
  41a573:	scas   al,BYTE PTR es:[edi]
  41a574:	repz dec edx
  41a576:	stc    
  41a577:	xor    al,dh
  41a579:	cmp    al,0x11
  41a57b:	ds and ecx,edi
  41a57e:	stc    
  41a57f:	xchg   ebx,eax
  41a580:	ja     0x41a5aa
  41a582:	mov    esi,0xd69f8dff
  41a587:	loope  0x41a555
  41a589:	fcmovb st,st(2)
  41a58b:	inc    ebx
  41a58c:	enter  0x9dca,0x2b
  41a590:	cmp    bl,BYTE PTR [ecx]
  41a592:	sahf   
  41a593:	push   edx
  41a594:	nop
  41a595:	mov    edi,0x6c2247a7
  41a59a:	stc    
  41a59b:	nop
  41a59c:	inc    ecx
  41a59d:	lea    esi,fs:[ecx+eiz*1]
  41a5a1:	and    bl,ah
  41a5a3:	mov    esi,0xba3378a5
  41a5a8:	lock bound ebp,QWORD PTR [ecx-0x14]
  41a5ac:	push   cs
  41a5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ae:	push   esi
  41a5af:	lahf   
  41a5b0:	enter  0x3d88,0x49
  41a5b4:	push   edi
  41a5b5:	das    
  41a5b6:	add    al,0x26
  41a5b8:	ss loop 0x41a565
  41a5bb:	int3   
  41a5bc:	xchg   ebp,eax
  41a5bd:	call   0x79e1a348
  41a5c2:	pusha  
  41a5c3:	or     al,0x6e
  41a5c5:	mov    eax,ds:0xe567de9b
  41a5ca:	xchg   DWORD PTR [ebp-0x9],edi
  41a5cd:	lods   al,BYTE PTR ds:[esi]
  41a5ce:	sub    bl,BYTE PTR [esi+ebp*8-0x415d7b5d]
  41a5d5:	ret    
  41a5d6:	scas   eax,DWORD PTR es:[edi]
  41a5d7:	pop    eax
  41a5d8:	jmp    0x41a5fb
  41a5da:	sbb    al,0x40
  41a5dc:	jne    0x41a5cc
  41a5de:	cdq    
  41a5df:	and    al,0x2c
  41a5e1:	inc    esp
  41a5e2:	imul   esi,edx,0xf0bd231
  41a5e8:	stc    
  41a5e9:	iret   
  41a5ea:	out    0xec,al
  41a5ec:	ds mov ch,0x6d
  41a5ef:	adc    DWORD PTR [eax],eax
  41a5f1:	iret   
  41a5f2:	(bad)  
  41a5f3:	std    
  41a5f4:	add    al,BYTE PTR [ecx]
  41a5f6:	or     al,BYTE PTR [ecx]
  41a5f8:	stos   DWORD PTR es:[edi],eax
  41a5f9:	add    BYTE PTR [ebx-0x2e],dl
  41a5fc:	jns    0x41a593
  41a5fe:	push   ss
  41a5ff:	sub    eax,0x1f4f93ee
  41a604:	mov    ah,0x0
	...
  41a60e:	add    BYTE PTR [eax],al
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbd13:0x9f02aa4e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+eax*1-0x4f4f0000],ch
  41a62b:	stos   BYTE PTR es:[edi],al
  41a62c:	mov    gs,WORD PTR [ebx+0x37]
  41a62f:	xlat   BYTE PTR ds:[ebx]
  41a630:	mov    dh,0x64
  41a632:	rcr    DWORD PTR [eax+0xc],0x64
  41a636:	gs iret 
  41a638:	jmp    0xf26c:0xd9e07614
  41a63f:	cmp    ch,bl
  41a641:	icebp  
  41a642:	ret    
  41a643:	pop    ebx
  41a644:	and    al,0x7c
  41a646:	cld    
  41a647:	clc    
  41a648:	jge    0x41a63f
  41a64a:	pop    ds
  41a64b:	mov    ch,0x2a
  41a64d:	add    eax,0xb71f09d6
  41a652:	test   DWORD PTR [esi-0x58c574e5],ebp
  41a658:	sti    
  41a659:	and    eax,0xd4d2cc98
  41a65e:	stos   BYTE PTR es:[edi],al
  41a65f:	imul   BYTE PTR [esi-0x15]
  41a662:	mov    ds:0xab3f9e3f,eax
  41a667:	js     0x41a648
  41a669:	nop
  41a66a:	loopne 0x41a694
  41a66c:	hlt    
  41a66d:	in     al,0x94
  41a66f:	pop    esi
  41a670:	sahf   
  41a671:	cld    
  41a672:	push   ds
  41a673:	rcr    DWORD PTR [ecx+0xc],cl
  41a676:	fs std 
  41a678:	jg     0x41a693
  41a67a:	cwde   
  41a67b:	sbb    edi,DWORD PTR [edi+0x2cbec74c]
  41a681:	push   ecx
  41a682:	inc    ebx
  41a683:	outs   dx,BYTE PTR ds:[esi]
  41a684:	imul   ecx,DWORD PTR [edi+ebx*1],0xffffffb0
  41a688:	push   ebp
  41a689:	sub    al,0xde
  41a68b:	outs   dx,BYTE PTR ds:[esi]
  41a68c:	and    eax,DWORD PTR [edi+ebp*4]
  41a68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a690:	das    
  41a691:	(bad)  [edi]
  41a693:	push   ebx
  41a694:	push   esp
  41a695:	sub    al,0x61
  41a697:	outs   dx,DWORD PTR ds:[esi]
  41a698:	xchg   edx,eax
  41a699:	loopne 0x41a6a6
  41a69b:	adc    esp,eax
  41a69d:	and    ch,BYTE PTR [edx]
  41a69f:	and    bl,BYTE PTR [ebp-0x12]
  41a6a2:	mov    bl,0x9
  41a6a4:	inc    ebx
  41a6a5:	sub    eax,0xc80db77f
  41a6aa:	fild   WORD PTR [eax]
  41a6ac:	pusha  
  41a6ad:	pop    ds
  41a6ae:	scas   eax,DWORD PTR es:[edi]
  41a6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6b0:	cdq    
  41a6b1:	dec    ebx
  41a6b2:	rcr    DWORD PTR ds:[esp+ebx*1-0x1987a147],1
  41a6ba:	mov    dl,0x5a
  41a6bc:	inc    edi
  41a6bd:	sahf   
  41a6be:	(bad)
  41a6c1:	in     eax,dx
  41a6c2:	cmp    DWORD PTR [edi-0x58c79202],ebx
  41a6c8:	push   eax
  41a6c9:	pusha  
  41a6ca:	jns    0x41a727
  41a6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6cd:	ins    DWORD PTR es:[edi],dx
  41a6ce:	(bad)  
  41a6d0:	add    DWORD PTR [ecx-0xc],ebx
  41a6d3:	outs   dx,DWORD PTR ds:[esi]
  41a6d4:	retf   
  41a6d5:	mov    bl,dh
  41a6d7:	mov    eax,ds:0xa4fc6c7
  41a6dc:	pop    es
  41a6dd:	or     eax,0xc0f8320f
  41a6e2:	mov    DWORD PTR [esi-0x45],0xa6912d13
  41a6e9:	repz (bad) 
  41a6eb:	aad    0x75
  41a6ed:	push   edx
  41a6ee:	dec    eax
  41a6ef:	jns    0x41a715
  41a6f1:	push   ecx
  41a6f2:	sub    eax,0x5eaaf3ed
  41a6f7:	mov    dh,BYTE PTR [edi-0x27]
  41a6fa:	jg     0x41a76f
  41a6fc:	out    dx,eax
  41a6fd:	popa   
  41a6fe:	add    dh,dh
  41a700:	push   eax
  41a701:	xchg   edx,eax
  41a702:	data16 mov BYTE PTR [ebp+0x556cf932],bh
  41a709:	stos   DWORD PTR es:[edi],eax
  41a70a:	rol    ch,1
  41a70c:	call   0x6b67:0xcf754804
  41a713:	pop    edx
  41a714:	pop    es
  41a715:	stos   BYTE PTR es:[edi],al
  41a716:	mov    dl,0xfc
  41a718:	mov    bl,0x4b
  41a71a:	or     DWORD PTR [edx-0xcc3ee5b],0xd65555c2
  41a724:	(bad)  
  41a725:	and    dl,BYTE PTR [ebx]
  41a727:	add    DWORD PTR [edx+ebp*1-0x9],esp
  41a72b:	push   esp
  41a72c:	mov    ds:0xe8204842,eax
  41a731:	pusha  
  41a732:	repz and ch,BYTE PTR [edi-0x7a]
  41a736:	rcr    BYTE PTR [eax-0x1a],cl
  41a739:	div    bl
  41a73b:	(bad)  
  41a73c:	pusha  
  41a73d:	push   esi
  41a73e:	test   al,0x22
  41a740:	xchg   esi,eax
  41a741:	popa   
  41a742:	mov    esp,0x959fa174
  41a747:	stc    
  41a748:	inc    esi
  41a749:	xchg   edi,eax
  41a74a:	cdq    
  41a74b:	test   al,0xb3
  41a74d:	pop    edx
  41a74e:	mov    bh,BYTE PTR [eax-0x3d]
  41a751:	mov    dh,0xfa
  41a753:	mov    cl,0x7e
  41a755:	pop    ecx
  41a756:	inc    ebx
  41a757:	sbb    ecx,DWORD PTR [edi-0x4c]
  41a75a:	es push es
  41a75c:	mov    al,ds:0xdea0a1d
  41a761:	mov    eax,ds:0xe5cdd5d9
  41a766:	push   cs
  41a767:	fucomip st,st(2)
  41a769:	mov    ecx,DWORD PTR [edx]
  41a76b:	stos   BYTE PTR es:[edi],al
  41a76c:	xor    bh,BYTE PTR [esi+0x3a]
  41a76f:	nop
  41a770:	push   0xf89ccd4f
  41a775:	pop    es
  41a776:	pop    ebx
  41a777:	mov    DWORD PTR [edx+eiz*1],ebx
  41a77a:	jb     0x41a78f
  41a77c:	push   0x620a75b8
  41a781:	dec    edi
  41a782:	cmp    BYTE PTR [ebp+0x232fadbb],cl
  41a788:	push   ebp
  41a789:	jle    0x41a7b3
  41a78b:	call   0x42bb8b3e
  41a790:	lds    esp,FWORD PTR [edx-0x1]
  41a793:	and    bl,BYTE PTR ds:0xb2c2ef94
  41a799:	cmp    al,0x92
  41a79b:	fisub  DWORD PTR [edi-0x7a]
  41a79e:	add    DWORD PTR [ebx-0x32c50ada],esp
  41a7a4:	aad    0xbb
  41a7a6:	add    eax,0xcbf98cad
  41a7ac:	sti    
  41a7ad:	add    esp,DWORD PTR [edx+0x51]
  41a7b0:	mov    al,0xe9
  41a7b2:	ret    
  41a7b3:	outs   dx,DWORD PTR ds:[esi]
  41a7b4:	mov    ds:0x44c0d22f,al
  41a7b9:	or     BYTE PTR [esi-0x82f01de],ch
  41a7bf:	sub    bh,BYTE PTR [esp+eax*1-0xc]
  41a7c3:	mov    eax,0x50c94568
  41a7c8:	xlat   BYTE PTR ds:[ebx]
  41a7c9:	mov    ebp,0xaf8182d6
  41a7ce:	pop    ds
  41a7cf:	call   0xe907:0x24975297
  41a7d6:	jl     0x41a781
  41a7d8:	jbe    0x41a795
  41a7da:	dec    eax
  41a7db:	pop    edi
  41a7dc:	shl    BYTE PTR [ebp+eiz*4-0x35],0xd2
  41a7e1:	je     0x41a840
  41a7e3:	sbb    al,0x38
  41a7e5:	data16 or dl,bh
  41a7e8:	pop    edi
  41a7e9:	sbb    BYTE PTR [ebx+ebp*4-0x4d],bh
  41a7ed:	call   0x4524:0xc8901ce7
  41a7f4:	fist   DWORD PTR [ebx]
  41a7f6:	iret   
  41a7f7:	jp     0x41a7a9
  41a7f9:	jg     0x41a7fc
  41a7fb:	adc    BYTE PTR ds:0x76e41dbf,0x14
  41a802:	enter  0xd7ba,0x92
  41a806:	sbb    al,0xe0
  41a808:	out    dx,eax
  41a809:	add    bl,BYTE PTR [ecx+0xdd2902]
  41a80f:	push   0x4e
  41a811:	test   BYTE PTR [ebp+0x6a771d33],0x67
  41a818:	jno    0x41a7d5
  41a81a:	std    
  41a81b:	xchg   ebx,ecx
  41a81d:	mov    ch,0xd3
  41a81f:	push   ds
  41a820:	gs (bad) 
  41a822:	repnz aaa 
  41a824:	inc    edi
  41a825:	leave  
  41a826:	mov    ds:0x108832c5,eax
  41a82b:	test   eax,0x6dcd29a6
  41a830:	fstp   TBYTE PTR [ebx]
  41a832:	jae    0x41a820
  41a834:	repz add dh,dl
  41a837:	push   ds
  41a838:	lahf   
  41a839:	adc    ebx,DWORD PTR [eax]
  41a83b:	mov    WORD PTR [edi],ss
  41a83d:	daa    
  41a83e:	fst    QWORD PTR [esi-0x28aeb966]
  41a844:	leave  
  41a845:	(bad)  
  41a846:	cli    
  41a847:	das    
  41a848:	mov    esi,0x1cbaf220
  41a84d:	xor    al,0xc7
  41a84f:	jp     0x41a82f
  41a851:	mov    esp,DWORD PTR [ebp-0x3b]
  41a854:	mov    ebp,DWORD PTR [ecx+0x29]
  41a857:	sub    bh,BYTE PTR [ecx+0x57]
  41a85a:	aas    
  41a85b:	bound  esi,QWORD PTR [edx+0x2c]
  41a85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a85f:	mov    esi,0xe122a890
  41a864:	test   BYTE PTR [esi-0x1d],bh
  41a867:	ja     0x41a84d
  41a869:	std    
  41a86a:	adc    eax,0x7c346fd
  41a86f:	repz mov ds:0x2d5f6c36,al
  41a875:	fnsave [ebp-0x76]
  41a878:	daa    
  41a879:	in     eax,dx
  41a87a:	xchg   edx,eax
  41a87b:	loope  0x41a8da
  41a87d:	sar    BYTE PTR [ebx+0x2643bb8d],1
  41a883:	mov    dl,0x76
  41a885:	dec    esi
  41a886:	or     al,0x65
  41a888:	clc    
  41a889:	arpl   sp,ax
  41a88b:	fldenv [ecx]
  41a88d:	fadd   DWORD PTR ds:0xeefad19d
  41a893:	pop    ds
  41a894:	dec    esi
  41a895:	jae    0x41a821
  41a897:	sub    cl,dh
  41a899:	sbb    bh,BYTE PTR [ecx]
  41a89b:	retf   0x8621
  41a89e:	sbb    eax,0x7b706207
  41a8a3:	xor    eax,ebp
  41a8a5:	pop    edi
  41a8a6:	call   ebp
  41a8a8:	pop    es
  41a8a9:	hlt    
  41a8aa:	ds ins DWORD PTR es:[edi],dx
  41a8ac:	mov    cl,0x7a
  41a8ae:	inc    edi
  41a8af:	sbb    al,0x95
  41a8b1:	iret   
  41a8b2:	or     ebp,DWORD PTR [esi-0x3]
  41a8b5:	test   eax,0xf16524ed
  41a8ba:	(bad)  
  41a8bb:	fdivr  DWORD PTR [edx-0x12]
  41a8be:	gs inc edi
  41a8c0:	sbb    BYTE PTR [eax-0x713aee17],cl
  41a8c6:	repz cwde 
  41a8c8:	or     BYTE PTR [ebx-0x6370c325],bl
  41a8ce:	dec    ecx
  41a8cf:	push   ebp
  41a8d0:	mov    cl,0x79
  41a8d2:	std    
  41a8d3:	gs dec ebp
  41a8d5:	mov    WORD PTR [ebx-0x11],?
  41a8d8:	xchg   BYTE PTR [ecx],bl
  41a8da:	cmp    eax,0xb4dafa4e
  41a8df:	and    al,0x8e
  41a8e1:	add    al,0xdd
  41a8e3:	arpl   WORD PTR [ecx+0x1897ec68],dx
  41a8e9:	in     al,0x8b
  41a8eb:	jle    0x41a8f1
  41a8ed:	jae    0x41a8ec
  41a8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f0:	cld    
  41a8f1:	cmp    eax,0x8d487d95
  41a8f6:	fs jmp 0x41a886
  41a8f9:	xchg   edx,eax
  41a8fa:	pop    es
  41a8fb:	cmp    BYTE PTR [edx-0x3f],cl
  41a8fe:	jae    0x41a97e
  41a900:	hlt    
  41a901:	sub    al,0x6a
  41a903:	fmul   DWORD PTR [edx-0x59]
  41a906:	xchg   ebx,eax
  41a907:	popa   
  41a908:	call   DWORD PTR [ecx+0x4298afe]
  41a90e:	pop    ebp
  41a90f:	inc    esi
  41a910:	daa    
  41a911:	dec    ebx
  41a912:	in     al,0x98
  41a914:	pop    edi
  41a915:	mov    bl,0x33
  41a917:	xchg   edx,eax
  41a918:	sub    ebp,DWORD PTR [ecx]
  41a91a:	inc    ebx
  41a91b:	or     dl,bh
  41a91d:	loopne 0x41a8e0
  41a91f:	aaa    
  41a920:	ds popa 
  41a922:	mov    DWORD PTR [ebx+ecx*4],esi
  41a925:	data16 fwait
  41a927:	jae    0x41a938
  41a929:	mov    BYTE PTR [ecx],ch
  41a92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a92c:	out    dx,al
  41a92d:	int    0x96
  41a92f:	dec    esp
  41a930:	adc    BYTE PTR [ecx-0x47],bl
  41a933:	ja     0x41a8fa
  41a935:	fucomp st(0)
  41a937:	pop    ebp
  41a938:	mov    bh,0x62
  41a93a:	xchg   BYTE PTR [eax],bh
  41a93c:	mov    ?,ecx
  41a93e:	xchg   ebx,eax
  41a93f:	add    al,0x8e
  41a941:	fsub   QWORD PTR [ebx-0x3a]
  41a944:	enter  0xfcb,0x3a
  41a948:	pop    eax
  41a949:	add    al,0x40
  41a94b:	fcmovnb st,st(0)
  41a94d:	pop    ebp
  41a94e:	xchg   edi,eax
  41a94f:	neg    BYTE PTR [ecx-0xb559614]
  41a955:	pop    ecx
  41a956:	or     dh,BYTE PTR [ebp-0xde1776f]
  41a95c:	xchg   ebx,eax
  41a95d:	mov    edi,DWORD PTR [ecx+0x76]
  41a960:	stc    
  41a961:	ins    BYTE PTR es:[edi],dx
  41a962:	imul   ecx,DWORD PTR [edi],0xffffffdd
  41a965:	xor    BYTE PTR [edx-0xc],al
  41a968:	iret   
  41a969:	xor    al,0xa9
  41a96b:	jmp    0x7782:0x3dba659f
  41a972:	test   DWORD PTR [esi],ecx
  41a974:	out    0x1e,eax
  41a976:	sbb    eax,0x4a7b0855
  41a97b:	xchg   esi,eax
  41a97c:	dec    edi
  41a97d:	(bad)
  41a981:	or     al,0x5b
  41a983:	cmp    al,0xcd
  41a985:	pop    edx
  41a986:	(bad)
  41a989:	stc    
  41a98a:	mov    ds:0xaa83c23c,al
  41a98f:	dec    eax
  41a990:	out    dx,al
  41a991:	cmp    eax,0x5e14a010
  41a996:	fnstenv [ebx+edi*1-0x31]
  41a99a:	es push esi
  41a99c:	mov    esp,0xeb2eb962
  41a9a1:	retf   0x9014
  41a9a4:	jmp    0x35c2:0xc30db553
  41a9ab:	je     0x41a9c7
  41a9ad:	shl    ebx,cl
  41a9af:	and    DWORD PTR [edi-0x2382956a],ecx
  41a9b5:	cmp    BYTE PTR [ecx+esi*8+0x49],bl
  41a9b9:	repz repz pop ds
  41a9bc:	sbb    al,0xaf
  41a9be:	outs   dx,DWORD PTR ds:[esi]
  41a9c0:	fwait
  41a9c1:	cmp    eax,0xffa5ab22
  41a9c7:	aaa    
  41a9c8:	shr    DWORD PTR [edx+edi*8],1
  41a9cb:	xor    al,0xf9
  41a9cd:	sub    DWORD PTR [eax],eax
  41a9cf:	jge    0x41a9b4
  41a9d1:	cmp    DWORD PTR [ebp+0x11d3],0x0
  41a9db:	add    BYTE PTR [eax],al
  41a9dd:	add    BYTE PTR [eax],al
  41a9df:	add    BYTE PTR [eax],al
  41a9e1:	inc    ebx
  41a9e2:	clc    
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	adc    BYTE PTR [ecx-0x38],bh
  41a9f0:	shr    BYTE PTR [ecx+0x27],1
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	lods   al,BYTE PTR ds:[esi]
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [eax+esi*8-0x2677b180],bh
  41a9ff:	shl    esi,1
  41aa01:	adc    bl,0x6c
  41aa04:	xor    BYTE PTR ds:0x50a70344,ah
  41aa0a:	jmp    0x41aa6b
  41aa0c:	push   cs
  41aa0d:	push   ecx
  41aa0e:	add    al,0x82
  41aa10:	mov    dl,0x7b
  41aa12:	sbb    eax,0x23190ae6
  41aa17:	in     al,dx
  41aa18:	sub    DWORD PTR [esi+0x11313286],edi
  41aa1e:	int3   
  41aa1f:	scas   al,BYTE PTR es:[edi]
  41aa20:	mov    ds:0xdbd6effa,eax
  41aa25:	pop    edi
  41aa26:	das    
  41aa27:	push   eax
  41aa28:	retf   
  41aa29:	aad    0xb7
  41aa2b:	xor    BYTE PTR [ecx+0x62972977],ah
  41aa31:	aad    0x8c
  41aa33:	inc    ecx
  41aa34:	sbb    al,0x56
  41aa36:	and    eax,0x9b92fba5
  41aa3b:	fst    DWORD PTR [edi]
  41aa3d:	mov    esp,0x423cbbf9
  41aa42:	in     al,0x5d
  41aa44:	lds    di,DWORD PTR [ebx+eiz*1]
  41aa48:	inc    eax
  41aa49:	mov    WORD PTR [esi+esi*2-0x3d],?
  41aa4d:	mov    al,ds:0x9aa4a25e
  41aa52:	mov    bl,BYTE PTR [edx]
  41aa54:	mov    WORD PTR [ebx-0xd],?
  41aa57:	xchg   dl,dh
  41aa59:	sahf   
  41aa5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa5b:	ret    0x470f
  41aa5e:	jl     0x41aa25
  41aa60:	(bad)  
  41aa61:	daa    
  41aa62:	mov    ecx,0x6942ff4
  41aa67:	(bad)  
  41aa68:	imul   esp,DWORD PTR [ebx+0x67],0x3129edf0
  41aa6f:	and    BYTE PTR [ebp-0x24],ah
  41aa72:	jnp    0x41a9f8
  41aa74:	jg     0x41aa3e
  41aa76:	lahf   
  41aa77:	je     0x41aa13
  41aa79:	mov    ds:0xe49ce782,eax
  41aa7e:	mov    DWORD PTR [ecx-0x3baa582],ecx
  41aa84:	or     dl,dh
  41aa86:	cmp    BYTE PTR [ecx-0x1e],dh
  41aa89:	mov    bp,0xa2f5
  41aa8d:	out    0x2a,al
  41aa8f:	or     esi,DWORD PTR [ecx]
  41aa91:	xchg   edi,ecx
  41aa93:	push   ebx
  41aa94:	push   esp
  41aa95:	jmp    0x641bbe5c
  41aa9a:	jge    0x41aaac
  41aa9c:	mov    ch,0xef
  41aa9e:	pop    edi
  41aa9f:	data16 jns 0x41aa78
  41aaa2:	mov    eax,esi
  41aaa4:	(bad)  
  41aaa5:	int3   
  41aaa6:	xchg   edi,eax
  41aaa7:	in     eax,dx
  41aaa8:	(bad)  
  41aaa9:	repz clc 
  41aaab:	pop    es
  41aaac:	call   0xfce1:0x434b6e9
  41aab3:	rol    DWORD PTR [eax],0x68
  41aab6:	in     al,dx
  41aab7:	je     0x41aa9f
  41aab9:	test   DWORD PTR [ebx*4-0x7e6e92de],eax
  41aac0:	out    0xe1,eax
  41aac2:	mov    esi,0xeebd19de
  41aac7:	sub    al,0xb7
  41aac9:	add    eax,DWORD PTR [esi+esi*4]
  41aacc:	outs   dx,BYTE PTR ds:[esi]
  41aacd:	scas   al,BYTE PTR es:[edi]
  41aace:	pop    esp
  41aacf:	dec    ebx
  41aad0:	pop    ebx
  41aad1:	jbe    0x41ab15
  41aad3:	(bad)  
  41aad5:	inc    edi
  41aad6:	cdq    
  41aad7:	mov    DWORD PTR [ebx+eax*1+0x616c9063],esp
  41aade:	mov    ecx,0xde7e3b03
  41aae3:	push   ds
  41aae4:	icebp  
  41aae5:	shl    BYTE PTR [edx],0x62
  41aae8:	adc    BYTE PTR [edx-0x39],0x17
  41aaec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaed:	lods   eax,DWORD PTR ds:[esi]
  41aaee:	ror    BYTE PTR [esi+0x11],1
  41aaf1:	hlt    
  41aaf2:	daa    
  41aaf3:	push   cs
  41aaf4:	mov    bh,dl
  41aaf6:	sti    
  41aaf7:	(bad)  
  41aaf8:	xor    al,0x38
  41aafa:	fs gs pop edi
  41aafd:	mov    ebx,0x520e67b7
  41ab02:	or     DWORD PTR [ecx-0x7a],ebx
  41ab05:	in     al,0x43
  41ab07:	out    0xb2,eax
  41ab09:	or     edi,DWORD PTR [ebx*1-0x1c0c6e29]
  41ab10:	sub    eax,0xf53ad497
  41ab15:	retf   
  41ab16:	add    DWORD PTR [edi],0x75
  41ab19:	popa   
  41ab1a:	jge    0x41ab1e
  41ab1c:	mov    al,ds:0xb14aebef
  41ab21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab22:	fild   QWORD PTR [ebx+0x668f2647]
  41ab28:	outs   dx,DWORD PTR ds:[esi]
  41ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2a:	or     eax,DWORD PTR [esi]
  41ab2c:	xor    al,0x71
  41ab2e:	inc    edi
  41ab2f:	ss mov dl,0x35
  41ab32:	inc    esi
  41ab33:	stc    
  41ab34:	cmp    al,0x7d
  41ab36:	inc    esp
  41ab37:	push   ds
  41ab38:	in     al,dx
  41ab39:	pop    ss
  41ab3a:	fcmovu st,st(0)
  41ab3c:	repz xchg sp,ax
  41ab3f:	stos   DWORD PTR es:[edi],eax
  41ab40:	dec    esp
  41ab41:	pop    es
  41ab42:	pop    edx
  41ab43:	rcl    DWORD PTR [ebx],1
  41ab45:	nop
  41ab46:	jp     0x41ab58
  41ab48:	mov    ecx,0xdf66ef68
  41ab4d:	sub    BYTE PTR ds:0xcb0f07db,bl
  41ab53:	adc    al,0x33
  41ab55:	jecxz  0x41aba6
  41ab57:	or     al,0xa8
  41ab59:	lods   eax,DWORD PTR ds:[esi]
  41ab5a:	rol    DWORD PTR [ecx+0x2e1de26b],1
  41ab60:	scas   al,BYTE PTR es:[edi]
  41ab61:	mov    cl,dl
  41ab63:	retf   
  41ab64:	ret    0xa89f
  41ab67:	in     eax,0xc0
  41ab69:	pop    eax
  41ab6a:	sub    dl,BYTE PTR [ebx]
  41ab6c:	js     0x41abda
  41ab6e:	clc    
  41ab6f:	and    esi,DWORD PTR [edx]
  41ab71:	arpl   WORD PTR [esi],si
  41ab73:	push   edx
  41ab74:	sub    eax,0x2d6204ff
  41ab79:	or     DWORD PTR [ecx+0x1c03f917],edi
  41ab7f:	xchg   ecx,eax
  41ab80:	jecxz  0x41ab1a
  41ab82:	ror    esi,0x67
  41ab85:	mov    DWORD PTR [ecx],ebp
  41ab87:	mov    edx,0x9affced7
  41ab8c:	aam    0xf8
  41ab8e:	enter  0x5cf5,0x59
  41ab92:	cld    
  41ab93:	arpl   WORD PTR [esp+edi*4-0xa9b9f2c],di
  41ab9a:	jno    0x41abdd
  41ab9c:	pop    es
  41ab9d:	fsubr  DWORD PTR [ebx+0x3f]
  41aba0:	in     eax,0x30
  41aba2:	rcr    al,1
  41aba4:	shl    BYTE PTR [edi],cl
  41aba6:	jbe    0x41ab2c
  41aba8:	dec    ebp
  41aba9:	hlt    
  41abaa:	sub    BYTE PTR [ebp+0x3d],bl
  41abad:	inc    edx
  41abae:	clc    
  41abaf:	jp     0x41ac22
  41abb1:	dec    esp
  41abb2:	leave  
  41abb3:	shl    BYTE PTR [ecx+0x49],1
  41abb6:	sbb    al,0xc1
  41abb8:	jno    0x41ab5d
  41abba:	mov    ds:0x6a4c2502,al
  41abbf:	test   eax,0x41fb1a2f
  41abc4:	in     eax,0xd9
  41abc6:	outs   dx,BYTE PTR ds:[esi]
  41abc7:	jno    0x41ab82
  41abc9:	lock inc ebp
  41abcb:	ja     0x41ac23
  41abcd:	push   edx
  41abce:	repnz test BYTE PTR [ebx+edx*4+0x2b850dad],ah
  41abd6:	test   al,0xa9
  41abd8:	loop   0x41ab9c
  41abda:	lds    edi,FWORD PTR [ecx+eiz*4]
  41abdd:	(bad)  
  41abde:	cmp    al,0x20
  41abe0:	in     eax,0x1f
  41abe2:	mov    dl,0xf8
  41abe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abe5:	imul   esi,DWORD PTR [ecx],0x6783bb62
  41abeb:	cmp    DWORD PTR es:[ecx-0xb],ebp
  41abef:	xchg   ebp,eax
  41abf0:	mov    ds,esp
  41abf2:	cs mov eax,0x66fb9ecb
  41abf8:	loope  0x41abbc
  41abfa:	add    DWORD PTR [edi+0x20],edi
  41abfd:	mov    ecx,0xee7ed14b
  41ac02:	loopne 0x41ac72
  41ac04:	(bad)  
  41ac05:	cli    
  41ac06:	dec    esi
  41ac07:	mov    dh,0x6a
  41ac09:	inc    ebp
  41ac0a:	fs mov eax,0x5e08d57e
  41ac10:	jge    0x41ac8d
  41ac12:	and    cl,BYTE PTR [ecx-0x2e]
  41ac15:	leave  
  41ac16:	mov    BYTE PTR [edx-0xa],ah
  41ac19:	mov    al,0xb9
  41ac1b:	dec    eax
  41ac1c:	mov    dl,0xc8
  41ac1e:	fdivr  st,st(0)
  41ac20:	enter  0xb68b,0xf3
  41ac24:	call   0xa87e:0x2a9dac10
  41ac2b:	and    ebp,DWORD PTR [ebp-0x5b]
  41ac2e:	lods   eax,DWORD PTR ds:[esi]
  41ac2f:	popf   
  41ac30:	sbb    esp,ecx
  41ac32:	cmc    
  41ac33:	lods   al,BYTE PTR ds:[esi]
  41ac34:	sub    ebp,DWORD PTR [eax-0x30]
  41ac37:	sbb    dl,BYTE PTR [ecx+0x4f]
  41ac3a:	jmp    0x41ac77
  41ac3c:	xchg   edx,eax
  41ac3d:	retf   0x1991
  41ac40:	(bad)  
  41ac41:	fcomp  QWORD PTR [edx]
  41ac43:	or     ebp,DWORD PTR [edi-0x40]
  41ac46:	loop   0x41acc3
  41ac48:	xchg   esi,eax
  41ac49:	and    bh,bh
  41ac4b:	mov    BYTE PTR [esi],ah
  41ac4d:	push   es
  41ac4e:	sub    eax,0x5ee172cf
  41ac53:	pop    ss
  41ac54:	ror    WORD PTR [edi],1
  41ac57:	jne    0x41ac55
  41ac59:	jg     0x41ac34
  41ac5b:	(bad)  
  41ac5c:	inc    esi
  41ac5d:	int3   
  41ac5e:	xchg   ebp,eax
  41ac5f:	push   es
  41ac60:	mov    al,0xe8
  41ac62:	cs inc ecx
  41ac64:	inc    edx
  41ac65:	mov    al,0x42
  41ac67:	adc    BYTE PTR [edi-0x3e17e283],bl
  41ac6d:	nop
  41ac6e:	pop    ss
  41ac6f:	push   0xe52470a9
  41ac74:	jecxz  0x41acbc
  41ac76:	push   ecx
  41ac77:	cdq    
  41ac78:	cs cmp eax,0x72313859
  41ac7e:	pop    eax
  41ac7f:	call   FWORD PTR gs:[edi+0x5b]
  41ac83:	ds mov bl,0x20
  41ac86:	adc    BYTE PTR [edx+0x69],dl
  41ac89:	cs jp  0x41ac4b
  41ac8c:	inc    ebx
  41ac8d:	data16 mov ?,WORD PTR [ebx+eiz*2-0x71072d5d]
  41ac95:	fs cdq 
  41ac97:	push   eax
  41ac98:	and    DWORD PTR [ecx-0x6cb23fe9],esi
  41ac9e:	cdq    
  41ac9f:	out    0xeb,al
  41aca1:	pop    ecx
  41aca2:	xlat   BYTE PTR ds:[ebx]
  41aca3:	or     bh,BYTE PTR [edi-0x30a5435f]
  41aca9:	adc    al,bh
  41acab:	loopne 0x41acfd
  41acad:	push   edi
  41acae:	out    0x26,eax
  41acb0:	xchg   ecx,eax
  41acb1:	dec    esi
  41acb2:	jg     0x41ac65
  41acb4:	lods   al,BYTE PTR ds:[esi]
  41acb5:	pop    esi
  41acb6:	test   eax,0xfd04ea41
  41acbb:	mov    bh,0xdf
  41acbd:	dec    esp
  41acbe:	and    DWORD PTR [edx+0x28],ebp
  41acc1:	stos   DWORD PTR es:[edi],eax
  41acc2:	sub    al,0x79
  41acc4:	sti    
  41acc5:	imul   ebp,eax,0x492fa4ff
  41accb:	fld    TBYTE PTR [eax]
  41accd:	jle    0x41acf8
  41accf:	mov    edi,0xd3b9af92
  41acd4:	add    eax,0x18d26a05
  41acd9:	mov    bl,0x8e
  41acdb:	mov    ebp,DWORD PTR [ebx+0x4c]
  41acde:	adc    ebx,DWORD PTR [ebx]
  41ace0:	sbb    edx,edx
  41ace2:	imul   ebx,ebp,0x12
  41ace5:	ds pop es
  41ace7:	jmp    0xaefd4b7c
  41acec:	mov    bl,0xcf
  41acee:	fimul  WORD PTR [edx+0x11]
  41acf1:	pop    edi
  41acf2:	int    0x4
  41acf4:	pop    esp
  41acf5:	cmp    edi,DWORD PTR [edi+0x34c3e98f]
  41acfb:	sub    DWORD PTR [ebx-0x55],ebx
  41acfe:	xchg   esp,eax
  41acff:	mov    ecx,0xa223fe6f
  41ad04:	div    DWORD PTR [eax]
  41ad06:	sub    ah,al
  41ad08:	inc    ebx
  41ad09:	or     al,0xdf
  41ad0b:	lahf   
  41ad0c:	sar    BYTE PTR [ecx+edx*1-0x6c],cl
  41ad10:	loopne 0x41ad55
  41ad12:	loopne 0x41ad72
  41ad14:	test   cl,cl
  41ad16:	mov    ds:0x759258f1,al
  41ad1b:	and    BYTE PTR [esi],dh
  41ad1d:	jl     0x41ad8a
  41ad1f:	xchg   ebp,eax
  41ad20:	dec    edi
  41ad21:	inc    esp
  41ad22:	pop    ebx
  41ad23:	jb     0x41ad97
  41ad25:	das    
  41ad26:	lds    edi,FWORD PTR [ebx+0x5]
  41ad29:	icebp  
  41ad2a:	mov    ecx,0x615d5bb
  41ad2f:	mov    dl,0x73
  41ad31:	(bad)  
  41ad32:	jne    0x41ad8f
  41ad34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad35:	sub    BYTE PTR [ebx+0x34],dl
  41ad38:	jno    0x41ad07
  41ad3a:	jne    0x41ad13
  41ad3c:	mov    BYTE PTR [ebp-0x6550b788],al
  41ad42:	mov    esp,0xadbd4fca
  41ad47:	xor    DWORD PTR [ebx-0x36],ebp
  41ad4a:	mov    dl,0x54
  41ad4c:	jecxz  0x41ad8f
  41ad4e:	xor    BYTE PTR [ebx+0x1f96c507],cl
  41ad54:	leave  
  41ad55:	cdq    
  41ad56:	ret    0x322c
  41ad59:	inc    ebx
  41ad5a:	fisub  WORD PTR [edi]
  41ad5c:	xchg   esi,eax
  41ad5d:	pop    ds
  41ad5e:	test   dh,ch
  41ad60:	or     DWORD PTR [edx+0x7740c530],esi
  41ad66:	out    0x13,al
  41ad68:	cli    
  41ad69:	stos   BYTE PTR es:[edi],al
  41ad6a:	shl    bl,0xd6
  41ad6d:	ret    0xfd84
  41ad70:	out    dx,eax
  41ad71:	inc    ebp
  41ad72:	mov    edx,0xfe76a555
  41ad77:	not    DWORD PTR [ebp+0x5a3eb52d]
  41ad7d:	mov    ebp,0xd7c88071
  41ad82:	and    eax,0x68adc8f1
  41ad87:	daa    
  41ad88:	pop    ss
  41ad89:	mov    edi,0xd706e5f9
  41ad8e:	cmp    BYTE PTR [ebp-0x415946f2],ch
  41ad94:	rcr    DWORD PTR [ebp-0x4b],1
  41ad97:	iret   
  41ad98:	pop    esp
  41ad99:	push   0x4c
  41ad9b:	mov    eax,ds:0x927cca59
  41ada0:	mov    edx,0x147674d8
	...
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4-0x481e6570],0x15
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx+eax*1+0x46ab0000],ch
  41adcb:	xor    BYTE PTR [edi-0x20],0xb5
  41adcf:	nop
  41add0:	bswap  esp
  41add2:	push   edi
  41add3:	pop    esp
  41add4:	test   al,0x8c
  41add6:	inc    ecx
  41add7:	shrd   DWORD PTR [eax-0x7e],ebx,cl
  41addb:	and    bh,dl
  41addd:	inc    eax
  41adde:	mov    cl,0x5b
  41ade0:	mov    dl,0x50
  41ade2:	sub    al,BYTE PTR [ecx]
  41ade4:	add    al,0xd9
  41ade6:	repz and eax,0x30e23cfd
  41adec:	mov    ebp,0xca632da1
  41adf1:	std    
  41adf2:	loop   0x41ae29
  41adf4:	push   ds
  41adf5:	cmp    ah,dh
  41adf7:	outs   dx,BYTE PTR ds:[esi]
  41adf8:	mov    ds:0xe272b846,eax
  41adfd:	scas   al,BYTE PTR es:[edi]
  41adfe:	pop    es
  41adff:	out    dx,eax
  41ae00:	jg     0x41ad96
  41ae02:	xchg   ebp,eax
  41ae03:	(bad)  
  41ae04:	jb     0x41ad9f
  41ae06:	int    0x7e
  41ae08:	xchg   ecx,eax
  41ae09:	jne    0x41ade0
  41ae0b:	scas   eax,DWORD PTR es:[edi]
  41ae0c:	ss in  al,0x6d
  41ae0f:	out    0x3d,al
  41ae11:	sub    bh,BYTE PTR [edi]
  41ae13:	adc    esp,DWORD PTR [edx+ebp*1]
  41ae16:	arpl   WORD PTR [edx+0x39],ax
  41ae19:	jns    0x41ae87
  41ae1b:	in     eax,dx
  41ae1c:	dec    DWORD PTR [edx-0x414d95da]
  41ae22:	dec    ebx
  41ae23:	mov    ebp,0xbcfa77b5
  41ae28:	stc    
  41ae29:	in     al,0xab
  41ae2b:	repnz cli 
  41ae2d:	and    al,0x18
  41ae2f:	int    0xaa
  41ae31:	fwait
  41ae32:	cmp    al,0x5f
  41ae34:	lods   al,BYTE PTR ds:[esi]
  41ae35:	sub    BYTE PTR [edi],bl
  41ae37:	push   esp
  41ae38:	neg    edi
  41ae3a:	adc    DWORD PTR [edx+0x20],0xffffffec
  41ae3e:	ret    0x35f8
  41ae41:	outs   dx,BYTE PTR ds:[esi]
  41ae42:	ins    DWORD PTR es:[edi],dx
  41ae43:	mov    eax,ds:0x92c86582
  41ae48:	inc    ebp
  41ae49:	rcl    DWORD PTR [ecx],cl
  41ae4b:	cmp    DWORD PTR [eax-0x72],edx
  41ae4e:	in     eax,dx
  41ae4f:	jns    0x41ae47
  41ae51:	cmp    edi,DWORD PTR [eax+0x1f797265]
  41ae57:	sbb    al,BYTE PTR [eax]
  41ae59:	repz add eax,0x17669b9d
  41ae5f:	cdq    
  41ae60:	push   0xffffffe3
  41ae62:	retf   
  41ae63:	cmp    DWORD PTR [eax+ebx*1],ebx
  41ae66:	adc    BYTE PTR [ebx],ah
  41ae68:	pop    edi
  41ae69:	jbe    0x41ae77
  41ae6b:	mov    esi,0x4da75dda
  41ae70:	es or  eax,0xd0676ddb
  41ae76:	or     BYTE PTR [ebx],0x3a
  41ae79:	push   ebp
  41ae7a:	sub    al,0xb8
  41ae7c:	cmp    dh,BYTE PTR [ebp-0x2c]
  41ae7f:	push   edx
  41ae80:	rcl    DWORD PTR [edi],cl
  41ae82:	gs pusha 
  41ae84:	hlt    
  41ae85:	rol    BYTE PTR [ecx-0x25],1
  41ae88:	inc    edx
  41ae89:	sbb    cl,BYTE PTR [esi]
  41ae8b:	push   cs
  41ae8c:	aas    
  41ae8d:	jl     0x41ae6c
  41ae8f:	sub    al,0x91
  41ae91:	and    bl,dh
  41ae93:	popf   
  41ae94:	jp     0x41af15
  41ae96:	shl    esi,0xf7
  41ae99:	push   ebx
  41ae9a:	ror    DWORD PTR [eax+0x61072153],1
  41aea0:	jecxz  0x41aeda
  41aea2:	out    dx,al
  41aea3:	test   edx,eax
  41aea5:	xchg   esp,eax
  41aea6:	adc    edi,DWORD PTR [edi+0x57]
  41aea9:	xchg   edi,eax
  41aeaa:	push   ebx
  41aeab:	mov    edi,0xa09a373c
  41aeb0:	inc    ebx
  41aeb1:	icebp  
  41aeb2:	pop    ecx
  41aeb3:	ss jmp 0x8093d914
  41aeb9:	add    DWORD PTR [eax-0x6fb71b9c],esi
  41aebf:	inc    esp
  41aec0:	fistp  WORD PTR [ecx+0x5d]
  41aec3:	push   edx
  41aec4:	jns    0x41aed0
  41aec6:	retf   
  41aec7:	dec    eax
  41aec8:	xor    ch,BYTE PTR [ebx-0x16ce9693]
  41aece:	inc    edx
  41aecf:	ret    
  41aed0:	and    ecx,edx
  41aed2:	addr16 pop es
  41aed4:	or     BYTE PTR ds:0x95d9de2,al
  41aeda:	push   es
  41aedb:	sbb    ebx,ecx
  41aedd:	or     dh,cl
  41aedf:	fisttp WORD PTR [edi]
  41aee1:	into   
  41aee2:	add    al,0x67
  41aee4:	mov    cl,0x8a
  41aee6:	inc    ebp
  41aee7:	mov    al,0x6b
  41aee9:	repnz xor DWORD PTR [edx+0x32dff00d],eax
  41aef0:	inc    eax
  41aef1:	and    DWORD PTR [esi],0x77
  41aef4:	fcmovnb st,st(7)
  41aef6:	dec    edx
  41aef7:	and    BYTE PTR [eax],ch
  41aef9:	jg     0x41af2f
  41aefb:	rcl    bh,1
  41aefd:	xor    edx,DWORD PTR [eax]
  41aeff:	pop    ebx
  41af00:	mov    dh,0x5b
  41af02:	hlt    
  41af03:	pop    ebp
  41af04:	mov    edx,0x1a58fe4d
  41af09:	sar    DWORD PTR [edx-0x404e75f3],cl
  41af0f:	stc    
  41af10:	and    al,bl
  41af12:	js     0x41af93
  41af14:	retf   0x1ef7
  41af17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af18:	adc    ch,BYTE PTR [edi+edi*1]
  41af1b:	jo     0x41aec9
  41af1d:	xchg   DWORD PTR [edi],esi
  41af1f:	stos   DWORD PTR es:[edi],eax
  41af20:	or     eax,0xe72e6c11
  41af25:	stos   BYTE PTR es:[edi],al
  41af26:	loop   0x41af36
  41af28:	mov    ds:0x9f059601,eax
  41af2d:	cwde   
  41af2e:	xor    al,0x2
  41af30:	addr16 bnd ja 0x41af58
  41af34:	jno    0x41af1c
  41af36:	mov    bl,0x8a
  41af38:	mov    gs,WORD PTR [edi+0x5e2b87a1]
  41af3e:	cld    
  41af3f:	pop    ecx
  41af40:	cwde   
  41af41:	out    0xa0,al
  41af43:	je     0x41afc3
  41af45:	in     al,0x43
  41af47:	mov    BYTE PTR [edi+0x40],al
  41af4a:	test   eax,0x1b169827
  41af4f:	ret    
  41af50:	mov    ah,0x48
  41af52:	(bad)  
  41af53:	(bad)  
  41af54:	leave  
  41af55:	inc    esp
  41af56:	pop    es
  41af57:	push   DWORD PTR [ebx-0x1]
  41af5a:	jge    0x41aef3
  41af5c:	jmp    0x41aee8
  41af5e:	js     0x41af55
  41af60:	push   0xffffff97
  41af62:	sahf   
  41af63:	jge    0x41af67
  41af65:	fsub   DWORD PTR [esi]
  41af67:	mov    bh,0xb3
  41af69:	xchg   esp,eax
  41af6a:	jb     0x41af64
  41af6c:	jmp    0x41afa2
  41af6e:	pop    ecx
  41af6f:	fiadd  DWORD PTR [edi-0x6e3b7400]
  41af75:	(bad)  
  41af76:	mov    cl,0xb8
  41af78:	cmp    edi,DWORD PTR [ecx+0x284095af]
  41af7e:	xchg   DWORD PTR [edx],esi
  41af80:	out    dx,eax
  41af81:	inc    ecx
  41af82:	inc    ecx
  41af83:	adc    eax,0x64c5d9ab
  41af88:	idiv   BYTE PTR [edx+0x78364e9f]
  41af8e:	hlt    
  41af8f:	push   ds
  41af90:	dec    esp
  41af91:	lds    esp,FWORD PTR [ebx]
  41af93:	stc    
  41af94:	fcomp  QWORD PTR [edi-0x11ae065a]
  41af9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af9b:	ficomp DWORD PTR [eax+0x6dbc7da0]
  41afa1:	push   0x9b0a5a56
  41afa6:	cmp    al,0x44
  41afa8:	ficomp WORD PTR [ebx]
  41afaa:	loop   0x41af55
  41afac:	pcmpeqd mm1,mm0
  41afaf:	mov    esi,0x32ca05ae
  41afb4:	ret    
  41afb5:	sub    ecx,DWORD PTR [edx+0x6113bf3a]
  41afbb:	inc    ebp
  41afbc:	dec    eax
  41afbd:	dec    ebx
  41afbe:	and    bl,0x1f
  41afc1:	push   edx
  41afc2:	iret   
  41afc3:	sbb    ah,BYTE PTR [ecx+ebp*2]
  41afc6:	stos   DWORD PTR es:[edi],eax
  41afc7:	mov    dl,BYTE PTR [edx]
  41afc9:	aaa    
  41afca:	or     DWORD PTR [edi+ebx*1+0x4b35d09c],eax
  41afd1:	mov    al,ds:0x298dc853
  41afd6:	in     eax,0x7f
  41afd8:	mov    al,0x2
  41afda:	das    
  41afdb:	fwait
  41afdc:	sbb    eax,0x468ea077
  41afe1:	fwait
  41afe2:	mov    bl,0xee
  41afe4:	add    eax,0x13ea10b
  41afe9:	and    bl,al
  41afeb:	add    dl,BYTE PTR [ebp+edi*4+0x4096e292]
  41aff2:	stos   DWORD PTR es:[edi],eax
  41aff3:	sub    al,0xdd
  41aff5:	cmp    eax,0x2a40840d
  41affa:	fistp  WORD PTR [ebp+0x63136044]
  41b000:	pop    eax
  41b001:	and    DWORD PTR [ecx+0x68],ebp
  41b004:	jp     0x41b03f
  41b006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b007:	jns    0x41b005
  41b009:	pop    ss
  41b00a:	or     edi,ecx
  41b00c:	and    esp,DWORD PTR [edx-0x4e]
  41b00f:	repz repz arpl bx,bp
  41b013:	push   0x832330a5
  41b018:	and    DWORD PTR [ebp+0x4f19b85c],ebx
  41b01e:	test   al,0x1
  41b020:	xchg   ebp,eax
  41b021:	(bad)  
  41b022:	rol    DWORD PTR [esp+edi*1-0x7],cl
  41b026:	jns    0x41afc9
  41b028:	cld    
  41b029:	sub    eax,0x6cff8570
  41b02e:	out    dx,eax
  41b02f:	bts    DWORD PTR [eax+0x19],esi
  41b033:	add    edi,ebp
  41b035:	xor    DWORD PTR [edi+ecx*8],ebx
  41b038:	outs   dx,DWORD PTR ds:[esi]
  41b039:	inc    esi
  41b03a:	mov    dh,0xc8
  41b03c:	add    eax,0x4f553914
  41b041:	sub    eax,0x714684dc
  41b046:	das    
  41b047:	mov    WORD PTR [edi+0x269e0b20],es
  41b04d:	push   0x57
  41b04f:	int3   
  41b050:	mov    ch,0x28
  41b052:	call   0x1e51:0x4d14ee9d
  41b059:	push   esp
  41b05a:	and    eax,0xa39c7efa
  41b05f:	sbb    DWORD PTR [edi-0x15],ecx
  41b062:	mov    eax,0x885cbdef
  41b067:	mov    al,0x8d
  41b069:	sti    
  41b06a:	pop    ss
  41b06b:	add    edx,DWORD PTR [ebx-0x309da2e5]
  41b071:	inc    DWORD PTR [edi+ebp*4+0x44]
  41b075:	shl    ah,0xd9
  41b078:	jmp    0x293b:0x3de29669
  41b07f:	(bad)  
  41b080:	mov    esp,0x1d41be39
  41b085:	jl     0x41b028
  41b087:	mov    esi,0x206d0747
  41b08c:	test   eax,0x81037f3d
  41b091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b092:	or     cl,dh
  41b094:	jne    0x41b017
  41b096:	mul    DWORD PTR [ebx+0x1b13560d]
  41b09c:	add    dh,BYTE PTR [eax+0x78]
  41b09f:	loop   0x41b106
  41b0a1:	xlat   BYTE PTR ds:[ebx]
  41b0a2:	adc    eax,0x3a4e5cc9
  41b0a7:	arpl   di,dx
  41b0a9:	rol    DWORD PTR [ecx],cl
  41b0ab:	adc    BYTE PTR [edx+0x11],dh
  41b0ae:	mov    bl,0xe4
  41b0b0:	call   0x9e3d:0xda34425f
  41b0b7:	jbe    0x41b0f0
  41b0b9:	jbe    0x41b081
  41b0bb:	sbb    al,0xb9
  41b0bd:	popf   
  41b0be:	scas   eax,DWORD PTR es:[edi]
  41b0bf:	mov    ds:0xbe4aab0d,eax
  41b0c4:	jne    0x41b142
  41b0c6:	and    DWORD PTR [ebp+0x40617915],0x966547e4
  41b0d0:	push   es
  41b0d1:	lods   eax,DWORD PTR ds:[esi]
  41b0d2:	scas   eax,DWORD PTR es:[edi]
  41b0d3:	ss xchg esp,eax
  41b0d5:	sahf   
  41b0d6:	dec    esp
  41b0d7:	retf   
  41b0d8:	(bad)  
  41b0da:	bound  eax,QWORD PTR [eax+0x5e003316]
  41b0e0:	sti    
  41b0e1:	mov    ebp,0xdd35849c
  41b0e6:	mov    fs,WORD PTR [edi-0x3a6b73cd]
  41b0ec:	xchg   ebx,eax
  41b0ed:	add    al,0x89
  41b0ef:	neg    al
  41b0f1:	movq   QWORD PTR [ebp-0x18],mm6
  41b0f5:	fcom   DWORD PTR [ecx+0x3e63559d]
  41b0fb:	outs   dx,BYTE PTR ds:[esi]
  41b0fc:	push   ebp
  41b0fd:	sbb    eax,0xe45949f1
  41b102:	push   ebx
  41b103:	xor    ebx,edi
  41b105:	fwait
  41b106:	test   BYTE PTR [ebx+0x54],ch
  41b109:	scas   eax,DWORD PTR es:[edi]
  41b10a:	push   0x81743fde
  41b10f:	imul   ebp,esi,0xffffffdd
  41b112:	stos   BYTE PTR es:[edi],al
  41b113:	mov    eax,?
  41b115:	fdiv   st(7),st
  41b117:	scas   eax,DWORD PTR es:[edi]
  41b118:	or     DWORD PTR [ecx+0x9f0d7c9],edx
  41b11e:	shl    BYTE PTR [eax+ecx*8],cl
  41b121:	cs sub eax,0xaa91b069
  41b127:	mov    bl,0x22
  41b129:	outs   dx,DWORD PTR ds:[esi]
  41b12a:	sbb    DWORD PTR ds:0x7f699b29,ecx
  41b130:	lock rcl BYTE PTR [ebx],0x68
  41b134:	rcr    BYTE PTR [ebx+0x14],0xa9
  41b138:	ret    
  41b139:	push   ss
  41b13a:	pop    edi
  41b13b:	inc    edx
  41b13c:	inc    esi
  41b13d:	ss adc eax,0xe6797e3a
  41b143:	xchg   DWORD PTR [esi],eax
  41b145:	add    al,0x5f
  41b147:	(bad)  
  41b148:	adc    eax,0x1c072f2b
  41b14d:	minps  xmm4,xmm6
  41b150:	and    edx,DWORD PTR [edi]
  41b152:	dec    edi
  41b153:	mov    cl,0x14
  41b155:	sub    DWORD PTR [ebx-0x29],ebp
  41b158:	ret    0x8151
  41b15b:	mov    dl,0xe
  41b15d:	js     0x41b154
  41b15f:	addr16 push 0xae924d9a
  41b165:	dec    ebp
  41b166:	cmc    
  41b167:	retf   
  41b168:	jns    0x41b1de
  41b16a:	mov    ah,0x9c
  41b16c:	xor    ecx,esi
  41b16e:	mov    eax,es
  41b170:	sar    DWORD PTR [ecx-0x38],0xf9
  41b174:	push   ebp
	...
  41b181:	jecxz  0x41b16b
  41b183:	nop
  41b184:	rcr    BYTE PTR [ebx+0x79fbe3f8],1
  41b18a:	dec    edx
  41b18b:	shr    ebp,0x3d
  41b18e:	lods   al,BYTE PTR ds:[esi]
  41b18f:	arpl   WORD PTR [edi],bp
  41b191:	shr    DWORD PTR [esi],0x1
  41b194:	add    BYTE PTR [ebx+eax*1-0xfdf0000],ch
  41b19b:	inc    edx
  41b19c:	ret    
  41b19d:	cmp    DWORD PTR [eax+eax*4],0xd461ffc6
  41b1a4:	jp     0x41b166
  41b1a6:	and    eax,0xe7aa18b2
  41b1ab:	adc    DWORD PTR [ebx+0x48],0x6
  41b1af:	ficomp WORD PTR [eax-0x10]
  41b1b2:	sbb    ah,BYTE PTR [ebx-0x71]
  41b1b5:	sub    ebp,DWORD PTR [eax-0x24]
  41b1b8:	add    al,0x44
  41b1ba:	popf   
  41b1bb:	mov    dl,0x43
  41b1bd:	fisttp DWORD PTR [esi+0x348c08ab]
  41b1c3:	call   0x9af3:0xc5c30d96
  41b1ca:	sub    BYTE PTR [edi+0x1f],dl
  41b1cd:	mov    dh,0x5
  41b1cf:	jp     0x41b1be
  41b1d1:	mov    WORD PTR [edi+0x79b86055],?
  41b1d7:	inc    edx
  41b1d8:	fcom   st(3)
  41b1da:	outs   dx,DWORD PTR ds:[esi]
  41b1db:	and    eax,0xe2889f7d
  41b1e0:	mov    esi,0xcb86b80d
  41b1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e6:	retf   
  41b1e7:	mov    bl,0x5e
  41b1e9:	shl    bl,0xea
  41b1ec:	and    DWORD PTR [edi-0x2bf9d44f],edx
  41b1f2:	mov    ebx,0xd42f18a
  41b1f7:	inc    esp
  41b1f8:	xor    al,0xfe
  41b1fa:	ins    BYTE PTR es:[edi],dx
  41b1fb:	adc    ecx,eax
  41b1fd:	lods   al,BYTE PTR ds:[esi]
  41b1fe:	mov    cl,0x67
  41b200:	dec    ebp
  41b201:	push   ebp
  41b202:	fst    DWORD PTR [ecx+0x3062f52d]
  41b208:	enter  0xb4ac,0xbe
  41b20c:	es hlt 
  41b20e:	mov    cl,0x9d
  41b210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b211:	inc    ecx
  41b212:	iret   
  41b213:	inc    ebx
  41b214:	not    cl
  41b216:	adc    al,0x56
  41b218:	imul   esp,DWORD PTR [ebp+0x5f],0xe023fc7
  41b21f:	inc    ecx
  41b220:	or     al,0x23
  41b222:	outs   dx,BYTE PTR ds:[esi]
  41b223:	jae    0x41b1d6
  41b225:	jge    0x41b280
  41b227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b228:	mov    al,ds:0x2ba58800
  41b22d:	sub    ah,ch
  41b22f:	jmp    0x9321:0xab40a047
  41b236:	sbb    cl,BYTE PTR [eax]
  41b238:	or     edi,DWORD PTR [ebp+0x36cc3919]
  41b23e:	imul   ebx,edi,0xd2e84cf9
  41b244:	out    dx,eax
  41b245:	out    dx,eax
  41b246:	inc    edx
  41b247:	out    0xe9,eax
  41b249:	icebp  
  41b24a:	and    DWORD PTR [ecx],ecx
  41b24c:	aaa    
  41b24d:	test   eax,0x69914743
  41b252:	ror    DWORD PTR [edi+esi*4-0x37e56443],cl
  41b259:	out    dx,al
  41b25a:	or     eax,0xe8598c3e
  41b25f:	jmp    0xca25:0x84b8c5f2
  41b266:	push   es
  41b267:	jno    0x41b259
  41b269:	sbb    al,0x90
  41b26b:	mov    ebx,0x1391496b
  41b270:	imul   eax,DWORD PTR [ecx+0x9],0xffffff90
  41b274:	xor    BYTE PTR [esi-0x3c],bl
  41b277:	popf   
  41b278:	xor    bh,BYTE PTR [eax-0x4f]
  41b27b:	jnp    0x41b294
  41b27d:	and    dl,BYTE PTR [ecx+ebp*1+0xc]
  41b281:	sbb    DWORD PTR [eax+0x22],ecx
  41b284:	lahf   
  41b285:	add    eax,0x62644b6b
  41b28a:	or     DWORD PTR [eax-0x27],ebp
  41b28d:	fidivr DWORD PTR [edi]
  41b28f:	xchg   cl,bl
  41b291:	fs dec edx
  41b293:	mov    bl,0x6e
  41b295:	fnstsw WORD PTR [ebp-0x733a90c7]
  41b29b:	lods   al,BYTE PTR ds:[esi]
  41b29c:	add    BYTE PTR [edi+0x49],cl
  41b29f:	mov    ch,0x5
  41b2a1:	and    al,0xc6
  41b2a3:	lock ficom DWORD PTR [ebx+edx*2-0x8]
  41b2a8:	rcr    dl,cl
  41b2aa:	mov    edi,0x449a8196
  41b2af:	jecxz  0x41b2cf
  41b2b1:	(bad)  
  41b2b2:	xor    edi,DWORD PTR [ecx-0x3944711]
  41b2b8:	xor    eax,0xc03b4e8c
  41b2bd:	(bad)  
  41b2be:	fcomi  st,st(0)
  41b2c0:	(bad)  
  41b2c1:	in     eax,0x54
  41b2c3:	fs sbb al,0x25
  41b2c6:	sub    eax,0xd4a8442f
  41b2cb:	pop    ss
  41b2cc:	jmp    0x84f1:0xf99682f8
  41b2d3:	or     edx,esi
  41b2d5:	add    bh,0x9e
  41b2d8:	mov    DWORD PTR [ebp+ebp*1-0x386e72ae],edx
  41b2df:	cwde   
  41b2e0:	inc    esp
  41b2e1:	pop    ss
  41b2e2:	mov    ds:0xa6a964af,eax
  41b2e7:	cs (bad) 
  41b2e9:	xchg   ebp,eax
  41b2ea:	push   0xffffffa3
  41b2ec:	xchg   ebx,eax
  41b2ed:	or     ebp,edx
  41b2ef:	sbb    BYTE PTR [ebp+0x28],cl
  41b2f2:	mov    al,ds:0x23d34512
  41b2f7:	pop    esi
  41b2f8:	shr    DWORD PTR [ebx],1
  41b2fa:	ret    0x66de
  41b2fd:	test   al,0x7f
  41b2ff:	js     0x41b2b4
  41b301:	sbb    DWORD PTR [ebx+0x687fe718],ecx
  41b307:	mov    dh,0x41
  41b309:	mov    bh,0xf4
  41b30b:	dec    ebp
  41b30c:	loope  0x41b33e
  41b30e:	inc    ecx
  41b30f:	repnz adc eax,0x642b3489
  41b315:	pop    esi
  41b316:	test   al,0xb4
  41b318:	les    ebp,FWORD PTR [ebx+0x4e]
  41b31b:	(bad)  [edi-0x44d01423]
  41b321:	dec    esp
  41b322:	and    al,0x16
  41b324:	and    al,0x2c
  41b326:	fmul   QWORD PTR [eax-0x3805b3f0]
  41b32c:	rcr    BYTE PTR [ebx+0x2255f161],0x81
  41b333:	sbb    DWORD PTR [esi-0x495715e7],ecx
  41b339:	push   0x3fefed9d
  41b33e:	mov    eax,ds:0x562bb2b4
  41b343:	mov    ds:0xd56d9537,al
  41b348:	dec    DWORD PTR [ebx]
  41b34a:	addr16 pop eax
  41b34c:	ret    
  41b34d:	repz sbb BYTE PTR [edi-0x40],dl
  41b351:	jge    0x41b355
  41b353:	adc    dh,BYTE PTR [eax+eiz*2-0x166f92da]
  41b35a:	push   cs
  41b35b:	xlat   BYTE PTR ds:[ebx]
  41b35c:	dec    edi
  41b35d:	sbb    dh,cl
  41b35f:	lds    esp,FWORD PTR [edi+0x13]
  41b362:	pop    ds
  41b363:	fisub  WORD PTR [esp+edi*2+0x1c834ff0]
  41b36a:	cmp    al,0xb5
  41b36c:	std    
  41b36d:	push   ds
  41b36e:	sti    
  41b36f:	push   ss
  41b370:	sbb    al,0x21
  41b372:	shl    WORD PTR [ecx-0x40],0x7d
  41b377:	aam    0x27
  41b379:	xchg   DWORD PTR [eax-0x31d53314],ebx
  41b37f:	mov    edx,0xcb25d2cd
  41b384:	mov    cl,BYTE PTR [edx-0x2cebbfc]
  41b38a:	dec    esp
  41b38b:	jno    0x41b3d4
  41b38d:	xlat   BYTE PTR ds:[ebx]
  41b38e:	cs dec ecx
  41b390:	sbb    DWORD PTR [edi-0x8139aae],edi
  41b396:	pop    ebp
  41b397:	mov    bh,0x6c
  41b399:	adc    al,0x57
  41b39b:	sbb    esp,DWORD PTR ds:0x32f4367
  41b3a1:	test   al,0x61
  41b3a3:	(bad)  
  41b3a4:	je     0x41b365
  41b3a6:	lock test DWORD PTR [ebp-0x6b56bda2],edx
  41b3ad:	mov    edx,DWORD PTR [ecx+0x39]
  41b3b0:	add    dl,BYTE PTR [ebx+0x23]
  41b3b3:	aas    
  41b3b4:	das    
  41b3b5:	arpl   bp,dx
  41b3b7:	mov    ch,0x9f
  41b3b9:	dec    ebp
  41b3ba:	cs dec ebp
  41b3bc:	add    BYTE PTR [edx],al
  41b3be:	fs push eax
  41b3c0:	and    DWORD PTR [edi+esi*1+0x58],ebp
  41b3c4:	je     0x41b36f
  41b3c6:	pop    es
  41b3c7:	push   ss
  41b3c8:	pop    ecx
  41b3c9:	xchg   edi,eax
  41b3ca:	fs icebp 
  41b3cc:	xor    al,0xd5
  41b3ce:	and    bh,BYTE PTR [edx]
  41b3d0:	sbb    eax,0x6b8de089
  41b3d5:	adc    eax,0xa95041ee
  41b3da:	cmc    
  41b3db:	mov    ah,0xba
  41b3dd:	cmp    BYTE PTR [esi],bl
  41b3df:	lds    ebp,FWORD PTR [ebp-0x59ba4d3b]
  41b3e5:	fnstsw WORD PTR ds:0x92c2cabd
  41b3eb:	arpl   bp,bx
  41b3ed:	in     eax,0xe6
  41b3ef:	fidivr WORD PTR [edx-0x26]
  41b3f2:	iret   
  41b3f3:	hlt    
  41b3f4:	xchg   edx,eax
  41b3f5:	pop    eax
  41b3f6:	push   cs
  41b3f7:	loope  0x41b46c
  41b3f9:	(bad)  
  41b3fa:	and    ebp,DWORD PTR [edi-0x7d]
  41b3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3fe:	sbb    ebp,DWORD PTR [ebx]
  41b400:	xchg   ebx,eax
  41b401:	sbb    ah,BYTE PTR [ecx*4+0x20e05749]
  41b408:	jnp    0x41b40a
  41b40a:	outs   dx,DWORD PTR ds:[esi]
  41b40b:	add    DWORD PTR [ebp+0x3d],0xffffff9c
  41b40f:	push   ds
  41b410:	fld    QWORD PTR [eax-0x7b]
  41b413:	adc    al,0xb2
  41b415:	dec    eax
  41b416:	and    DWORD PTR [ebx+ecx*4],0xfffffff6
  41b41a:	ret    0x7997
  41b41d:	push   esi
  41b41e:	push   ss
  41b41f:	cld    
  41b420:	mov    ebx,0x139ab733
  41b425:	popf   
  41b426:	(bad)  
  41b427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b428:	mov    dl,0xce
  41b42a:	(bad)  
  41b42b:	sti    
  41b42c:	push   cs
  41b42d:	(bad)  
  41b42e:	fwait
  41b42f:	rcr    ecx,1
  41b431:	xor    DWORD PTR [edi],ebx
  41b433:	in     al,0xcd
  41b435:	shl    BYTE PTR [edx],cl
  41b437:	dec    ebp
  41b438:	mov    WORD PTR [edi+0x7a],?
  41b43b:	sbb    bh,BYTE PTR [edi-0x55]
  41b43e:	inc    ecx
  41b43f:	jecxz  0x41b424
  41b441:	les    edi,FWORD PTR [esi]
  41b443:	cmc    
  41b444:	xor    eax,0x720035c2
  41b449:	xchg   esp,eax
  41b44a:	sbb    eax,0x17
  41b44d:	std    
  41b44e:	dec    edx
  41b44f:	adc    edx,esi
  41b451:	mov    al,bh
  41b453:	jns    0x41b43f
  41b455:	retf   0xc478
  41b458:	xchg   DWORD PTR [esp+eax*1+0x3d],ecx
  41b45c:	dec    edx
  41b45d:	xchg   esi,eax
  41b45e:	push   ebp
  41b45f:	push   ebp
  41b460:	dec    esi
  41b461:	ins    BYTE PTR es:[edi],dx
  41b462:	add    eax,0x902ffed8
  41b467:	push   ecx
  41b468:	call   0xfb19:0x6ec6013
  41b46f:	push   es
  41b470:	mov    edx,edx
  41b472:	in     al,dx
  41b473:	imul   bh
  41b475:	add    eax,0x2295d492
  41b47a:	mov    dh,0x8
  41b47c:	and    ch,BYTE PTR [esp+edx*4]
  41b47f:	ror    BYTE PTR ds:0x75fb2827,1
  41b485:	inc    eax
  41b486:	sbb    ah,BYTE PTR [ecx+0x2b]
  41b489:	and    BYTE PTR [ebp-0x36b18b17],ch
  41b48f:	arpl   bp,bx
  41b491:	mov    ebp,edx
  41b493:	sub    eax,0xd50cd059
  41b498:	xor    al,0x45
  41b49a:	mov    eax,eax
  41b49c:	add    al,0xbc
  41b49e:	dec    esi
  41b49f:	ins    DWORD PTR es:[edi],dx
  41b4a0:	cmp    esi,ebp
  41b4a2:	sub    ebx,DWORD PTR [ebx+0x1a]
  41b4a5:	mov    al,0x70
  41b4a7:	jecxz  0x41b43d
  41b4a9:	leave  
  41b4aa:	jp     0x41b4eb
  41b4ac:	into   
  41b4ad:	jmp    0xbecf:0x3b4c73eb
  41b4b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b5:	imul   bh
  41b4b7:	cld    
  41b4b8:	pop    ecx
  41b4b9:	gs add ebp,esi
  41b4bc:	pushf  
  41b4bd:	(bad)  
  41b4be:	popf   
  41b4bf:	adc    DWORD PTR [esi-0x2ab72699],ecx
  41b4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4c6:	ss pop edi
  41b4c8:	mov    ecx,0xce6094a
  41b4cd:	adc    eax,DWORD PTR [eax+0x78a42208]
  41b4d3:	mov    eax,es
  41b4d5:	sub    ecx,DWORD PTR [ebp+0x48]
  41b4d8:	leave  
  41b4d9:	adc    BYTE PTR [ebx-0x4f],0x66
  41b4dd:	mov    cl,0xe2
  41b4df:	fild   WORD PTR [ebx+edx*2]
  41b4e2:	pop    es
  41b4e3:	mov    ds:0x61649d0b,eax
  41b4e8:	and    eax,DWORD PTR ds:0xcc2b8b56
  41b4ee:	in     eax,dx
  41b4ef:	fwait
  41b4f0:	xchg   edi,eax
  41b4f1:	popf   
  41b4f2:	jo     0x41b4e3
  41b4f4:	out    dx,al
  41b4f5:	(bad)  
  41b4f6:	mov    cl,0xd0
  41b4f8:	mov    bh,0x51
  41b4fa:	push   0x1
  41b4fc:	jb     0x41b515
  41b4fe:	sbb    DWORD PTR [ebx-0x21e96824],eax
  41b504:	repz xor cl,BYTE PTR [ecx+ecx*1+0x2c]
  41b509:	xchg   edx,eax
  41b50a:	mov    esi,0x761806df
  41b510:	mov    ah,0xd0
  41b512:	ror    BYTE PTR [esp+esi*4-0x2cfa4306],cl
  41b519:	cld    
  41b51a:	mov    esp,0xa41c321b
  41b51f:	repnz fwait
  41b521:	lods   al,BYTE PTR ds:[esi]
  41b522:	je     0x41b4ac
  41b524:	mov    ebx,ebx
  41b526:	dec    ebp
  41b527:	ja     0x41b520
  41b529:	into   
  41b52a:	es in  al,0xa0
  41b52d:	(bad)  
  41b52e:	out    0x30,eax
  41b530:	mov    ebx,0xa4407059
  41b535:	(bad)  
  41b537:	bound  edi,QWORD PTR [edi-0x46f43b3b]
  41b53d:	push   ebx
  41b53e:	dec    ecx
  41b53f:	(bad)  
  41b541:	inc    ebp
  41b542:	(bad)  
  41b543:	(bad)  
  41b544:	mov    edx,0x0
	...
  41b551:	out    dx,al
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x1b4f3bc6
  41b561:	ins    DWORD PTR es:[edi],dx
  41b562:	xor    al,BYTE PTR [ecx]
  41b564:	add    BYTE PTR [ebx+eax*1+0x2ce00000],ch
  41b56b:	mov    eax,ds:0x7bf54bcb
  41b570:	repnz xchg edx,eax
  41b572:	pop    esp
  41b573:	push   0xffffffdd
  41b575:	out    0xe,eax
  41b577:	inc    edx
  41b578:	inc    edi
  41b579:	cld    
  41b57a:	or     edi,eax
  41b57c:	add    al,0x81
  41b57e:	pop    ss
  41b57f:	rcr    BYTE PTR [edx+0x9],1
  41b582:	mov    es,WORD PTR [esi]
  41b584:	pop    ecx
  41b585:	jmp    0xcc204167
  41b58a:	je     0x41b604
  41b58c:	push   edi
  41b58d:	jmp    0x41b585
  41b58f:	xor    cl,BYTE PTR [ebx-0x4f]
  41b592:	xchg   ecx,eax
  41b593:	push   edx
  41b594:	rcr    DWORD PTR fs:[edx+0x6c],1
  41b598:	les    ebx,FWORD PTR [ebp+0x4c]
  41b59b:	jle    0x41b536
  41b59d:	ret    
  41b59e:	dec    ecx
  41b59f:	inc    eax
  41b5a0:	or     DWORD PTR [eax],ebx
  41b5a2:	shl    DWORD PTR [ecx+0x3564cadf],cl
  41b5a8:	push   ebx
  41b5a9:	cmc    
  41b5aa:	adc    ch,BYTE PTR [ebx+0x924ae4]
  41b5b0:	pusha  
  41b5b1:	xchg   esp,eax
  41b5b2:	inc    ecx
  41b5b3:	das    
  41b5b4:	les    ecx,FWORD PTR [edi]
  41b5b6:	dec    esp
  41b5b7:	retf   
  41b5b8:	aam    0x8c
  41b5ba:	addr16 sbb eax,0xf15b6888
  41b5c0:	test   al,0x3c
  41b5c2:	push   esp
  41b5c3:	inc    edx
  41b5c4:	leave  
  41b5c5:	scas   al,BYTE PTR es:[edi]
  41b5c6:	dec    ebp
  41b5c7:	push   edx
  41b5c8:	push   ds
  41b5c9:	fisub  WORD PTR [ebp-0x3f]
  41b5cc:	adc    cl,ch
  41b5ce:	pop    ebx
  41b5cf:	icebp  
  41b5d0:	stc    
  41b5d1:	mov    bl,0xa7
  41b5d3:	mov    eax,0xd3947ba0
  41b5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5d9:	jmp    0x3c43:0x8485706d
  41b5e0:	inc    eax
  41b5e1:	mov    dl,0xc2
  41b5e3:	dec    edx
  41b5e4:	imul   esi,DWORD PTR [ebx-0x3a],0xffffffa1
  41b5e8:	inc    ecx
  41b5e9:	and    DWORD PTR [esi+0x5935761d],edi
  41b5ef:	pop    es
  41b5f0:	imul   ebp,DWORD PTR [ecx+0x698c0090],0xef8845e
  41b5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5fb:	int3   
  41b5fc:	push   esp
  41b5fd:	addr16 int 0x3c
  41b600:	scas   eax,DWORD PTR es:[edi]
  41b601:	sub    cl,cl
  41b603:	fadd   QWORD PTR [edx]
  41b605:	push   esp
  41b606:	mov    esp,0xa4fae92a
  41b60b:	add    ecx,DWORD PTR [esi]
  41b60d:	pop    ebx
  41b60e:	dec    ecx
  41b60f:	shr    BYTE PTR [esi-0x5cfac525],1
  41b615:	int    0xa9
  41b617:	mov    esp,0x3221333e
  41b61c:	int    0xa2
  41b61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61f:	jmp    0xbf921348
  41b624:	out    0x4d,al
  41b626:	jle    0x41b680
  41b628:	xchg   ecx,eax
  41b629:	test   DWORD PTR [esi],esp
  41b62b:	sti    
  41b62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b62e:	retf   
  41b62f:	lods   eax,DWORD PTR ds:[esi]
  41b630:	movd   mm5,DWORD PTR [edx-0x175b1cca]
  41b637:	jb     0x41b63c
  41b639:	mov    ebx,0x2b3d3c73
  41b63e:	test   eax,0xb0b8c863
  41b643:	frstor [ecx+0x1b6f5e0]
  41b649:	cdq    
  41b64a:	ja     0x41b61c
  41b64c:	adc    al,BYTE PTR [ecx+edx*2-0x1820822f]
  41b653:	xchg   DWORD PTR [eax-0x6e],edx
  41b656:	add    eax,0xea016a72
  41b65b:	push   esp
  41b65c:	push   0x673b4859
  41b661:	adc    eax,0xca2ed861
  41b666:	loope  0x41b634
  41b668:	dec    ebp
  41b669:	ja     0x41b677
  41b66b:	fsub   QWORD PTR [esp+esi*4]
  41b66e:	xchg   ecx,eax
  41b66f:	mov    DWORD PTR [ecx-0x5661334],edx
  41b675:	pop    ds
  41b676:	rcr    BYTE PTR [ebx-0x4a86f97],0x59
  41b67d:	xchg   ebp,eax
  41b67e:	loope  0x41b6b2
  41b680:	loope  0x41b6d2
  41b682:	sahf   
  41b683:	ins    DWORD PTR es:[edi],dx
  41b684:	mov    ebp,0x4154f7d1
  41b689:	pop    ebp
  41b68a:	xchg   esi,eax
  41b68b:	aaa    
  41b68c:	mov    esi,esp
  41b68e:	shl    eax,1
  41b690:	addr16 cs pop ecx
  41b693:	inc    ebx
  41b694:	clc    
  41b695:	mov    ebp,0x4fd29872
  41b69a:	cmc    
  41b69b:	adc    al,0xca
  41b69d:	fistp  WORD PTR [esp+ecx*1+0x14952105]
  41b6a4:	cwde   
  41b6a5:	and    edi,edx
  41b6a7:	push   edx
  41b6a8:	cdq    
  41b6a9:	xchg   ecx,eax
  41b6aa:	jecxz  0x41b6db
  41b6ac:	call   0x7903:0xe88eee0e
  41b6b3:	sub    al,0xec
  41b6b5:	lea    eax,[ecx]
  41b6b7:	sub    dl,BYTE PTR [eax]
  41b6b9:	stos   BYTE PTR es:[edi],al
  41b6ba:	ins    DWORD PTR es:[edi],dx
  41b6bb:	clc    
  41b6bc:	mov    ?,WORD PTR [eax]
  41b6be:	lods   al,BYTE PTR ds:[esi]
  41b6bf:	mov    BYTE PTR [esi+eax*8-0x22],al
  41b6c3:	(bad)  
  41b6c4:	xor    al,0x26
  41b6c6:	pusha  
  41b6c7:	out    dx,al
  41b6c8:	mov    cl,BYTE PTR [ebx]
  41b6ca:	lods   eax,DWORD PTR ds:[esi]
  41b6cb:	mov    edx,DWORD PTR [edx+0x7d]
  41b6ce:	aam    0x96
  41b6d0:	jmp    0xac519a58
  41b6d5:	add    esp,DWORD PTR [edi+0x297df2d8]
  41b6db:	dec    ebx
  41b6dc:	ja     0x41b666
  41b6de:	and    al,0xc7
  41b6e0:	popa   
  41b6e1:	pusha  
  41b6e2:	int3   
  41b6e3:	pop    ss
  41b6e4:	lock mov cl,0xb2
  41b6e7:	xlat   BYTE PTR ds:[ebx]
  41b6e8:	adc    ebp,DWORD PTR [eax-0x255af325]
  41b6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ef:	and    eax,0xa41c9e69
  41b6f4:	xchg   esi,eax
  41b6f5:	push   edx
  41b6f6:	test   eax,0xb0d48fa4
  41b6fb:	adc    BYTE PTR [ebx+0x108996f5],al
  41b701:	data16 jo 0x41b76b
  41b704:	stos   BYTE PTR es:[edi],al
  41b705:	ret    
  41b706:	arpl   WORD PTR [edi],di
  41b708:	sahf   
  41b709:	dec    eax
  41b70a:	xor    edi,DWORD PTR ds:[ebp+0x35cdad9d]
  41b711:	arpl   WORD PTR [edi-0xa8a64cd],si
  41b717:	jl     0x41b6b2
  41b719:	pop    edx
  41b71a:	mov    ebx,0x88070ce8
  41b71f:	pop    esp
  41b720:	xchg   ecx,eax
  41b721:	pop    ecx
  41b722:	push   esi
  41b723:	mov    WORD PTR ds:0x91454913,ds
  41b729:	lds    esp,FWORD PTR [ebx-0x476863df]
  41b72f:	sbb    eax,0xbfd3ed13
  41b734:	push   cs
  41b735:	cmp    esi,DWORD PTR [ecx+0x8]
  41b738:	mov    ds:0xd51acfde,al
  41b73d:	call   0x1a1a:0xd8a2df68
  41b744:	mov    eax,0xd129b499
  41b749:	lahf   
  41b74a:	sub    DWORD PTR [edi],ebx
  41b74c:	jne    0x41b72e
  41b74e:	xchg   esi,eax
  41b74f:	jne    0x41b76e
  41b751:	imul   DWORD PTR [esi]
  41b753:	add    eax,0x5b7ff510
  41b758:	stos   DWORD PTR es:[edi],eax
  41b759:	sbb    al,0x80
  41b75b:	outs   dx,DWORD PTR ds:[esi]
  41b75c:	mov    al,ds:0x675624cf
  41b761:	dec    esi
  41b762:	inc    ebp
  41b763:	fcomp  DWORD PTR [ebx+0x36]
  41b766:	ss pop esp
  41b768:	loopne 0x41b6fa
  41b76a:	xchg   DWORD PTR [edi+0x56d901a5],edi
  41b770:	cmp    BYTE PTR [ecx],0x81
  41b773:	pop    edx
  41b774:	lds    esp,FWORD PTR [ebp-0x3c]
  41b777:	inc    esp
  41b778:	int3   
  41b779:	retf   0x71ef
  41b77c:	(bad)  
  41b77d:	jge    0x41b7af
  41b77f:	jecxz  0x41b7b9
  41b781:	push   esp
  41b782:	mov    eax,0x44b257f0
  41b787:	xor    ecx,DWORD PTR [eax+0x6937017f]
  41b78d:	mov    ah,0x63
  41b78f:	inc    edx
  41b790:	cs dec edi
  41b792:	dec    ebp
  41b793:	fcom   DWORD PTR [eax+0x7da65578]
  41b799:	mov    ds:0xa01af30a,eax
  41b79e:	mov    bh,0x8d
  41b7a0:	xor    DWORD PTR [ebp+0x5757c06a],esi
  41b7a6:	add    BYTE PTR [edi+0x4c],dl
  41b7a9:	mov    ebx,esp
  41b7ab:	mov    edi,0x4711a22d
  41b7b0:	mov    dh,cl
  41b7b2:	mov    ds:0xcba14bf6,eax
  41b7b7:	and    al,0x4d
  41b7b9:	push   0x5c
  41b7bb:	pop    ecx
  41b7bc:	xor    eax,0xfb831d2c
  41b7c1:	adc    al,0x34
  41b7c3:	sub    BYTE PTR [edx+0x67],al
  41b7c6:	jbe    0x41b7bf
  41b7c8:	imul   ebp,DWORD PTR [ecx],0x21136b78
  41b7ce:	push   es
  41b7cf:	mov    ebp,0x9cbdcb3f
  41b7d4:	jno    0x41b7b3
  41b7d6:	inc    edi
  41b7d7:	jg     0x41b81e
  41b7d9:	mov    cl,0xf
  41b7db:	into   
  41b7dc:	mov    edi,ecx
  41b7de:	bnd ret 
  41b7e0:	adc    esp,esp
  41b7e2:	out    0xb4,eax
  41b7e4:	xor    ax,0xdb8
  41b7e8:	sar    BYTE PTR [ebx+edi*8],0xb
  41b7ec:	sub    eax,0x6e94c059
  41b7f1:	or     BYTE PTR [ebx-0x76],0xe6
  41b7f5:	mov    DWORD PTR [edx],esi
  41b7f7:	pop    ss
  41b7f8:	or     DWORD PTR [edi+esi*4+0x5804749e],ebx
  41b7ff:	mov    esi,0xa56d0e57
  41b804:	and    bh,cl
  41b806:	dec    ebp
  41b807:	sub    bh,BYTE PTR [ebp-0x2b45e2aa]
  41b80d:	and    eax,0x2006da34
  41b812:	(bad)  
  41b813:	outs   dx,DWORD PTR ds:[esi]
  41b814:	sub    eax,0xa06df407
  41b81a:	ret    
  41b81b:	out    dx,al
  41b81c:	and    eax,0xbf25cbba
  41b821:	cli    
  41b822:	jle    0x41b7d0
  41b824:	dec    esi
  41b825:	push   0x4ea1d142
  41b82a:	enter  0x60ee,0xe0
  41b82e:	or     ebx,DWORD PTR [ebx-0x4d]
  41b831:	stos   DWORD PTR es:[edi],eax
  41b832:	out    0x7a,eax
  41b834:	and    ebp,DWORD PTR [ebx+ecx*1+0x2e]
  41b838:	ss stos DWORD PTR es:[edi],eax
  41b83a:	or     DWORD PTR [esi+0x6b],ebx
  41b83d:	adc    al,0xa2
  41b83f:	(bad)  
  41b840:	add    BYTE PTR [ebp-0x7d],al
  41b843:	sbb    DWORD PTR [ecx+0x2a],eax
  41b846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b847:	sub    DWORD PTR ss:[ecx-0x69],0xffffffa9
  41b84c:	mov    esi,0x5cd8e707
  41b851:	pop    esp
  41b852:	xchg   edi,eax
  41b853:	jo     0x41b7f6
  41b855:	(bad)  
  41b856:	push   edx
  41b857:	xchg   esp,eax
  41b858:	cmp    al,0x7
  41b85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b85b:	jb     0x41b8ac
  41b85d:	add    al,0x6c
  41b85f:	jecxz  0x41b812
  41b861:	fstsw  WORD PTR [ebx]
  41b864:	add    BYTE PTR [ebx],bh
  41b866:	fidivr DWORD PTR [ecx+0x2b09d7db]
  41b86c:	stc    
  41b86d:	mov    ebp,0x6c67fdeb
  41b872:	test   DWORD PTR [ecx+0x61],edx
  41b875:	gs ins DWORD PTR es:[edi],dx
  41b877:	out    dx,eax
  41b878:	or     al,0xed
  41b87a:	or     dl,BYTE PTR ds:0x4a446100
  41b880:	jmp    0xe5f3:0xfe71c17e
  41b887:	or     ah,BYTE PTR [ecx+0x59]
  41b88a:	mov    BYTE PTR [ebx-0x6],ch
  41b88d:	push   edx
  41b88e:	lea    eax,[edi]
  41b890:	xchg   esp,eax
  41b891:	inc    ebp
  41b892:	push   ds
  41b893:	js     0x41b8d0
  41b895:	test   BYTE PTR [edx],dh
  41b897:	aad    0x4e
  41b899:	repnz imul ecx,DWORD PTR [edx],0xdd1f1973
  41b8a0:	data16 jp 0x41b8b8
  41b8a3:	jns    0x41b8c0
  41b8a5:	dec    ebp
  41b8a6:	jmp    0x487dbcba
  41b8ab:	adc    al,0xb6
  41b8ad:	not    DWORD PTR [ebp+ecx*4-0x27]
  41b8b1:	sub    DWORD PTR [ebp+0x76],edx
  41b8b4:	mov    cl,0x41
  41b8b6:	jmp    0xd1fe:0xa377ed9b
  41b8bd:	test   ch,dh
  41b8bf:	push   esp
  41b8c0:	and    eax,0x5f04bce0
  41b8c5:	mov    al,0x68
  41b8c7:	and    bl,BYTE PTR [edx]
  41b8c9:	dec    esi
  41b8ca:	cwde   
  41b8cb:	mov    esp,0x2677fc89
  41b8d0:	in     al,dx
  41b8d1:	mul    BYTE PTR [ebx+0x13]
  41b8d4:	pop    esp
  41b8d5:	mov    ch,0xa2
  41b8d7:	pusha  
  41b8d8:	cdq    
  41b8d9:	mov    WORD PTR [edi],gs
  41b8db:	ss es cmp al,0xbd
  41b8df:	jmp    0x9f2c0183
  41b8e4:	or     esp,DWORD PTR [ebp+0x4fd46db8]
  41b8ea:	and    al,0x9
  41b8ec:	pop    ebp
  41b8ed:	loope  0x41b932
  41b8ef:	push   eax
  41b8f0:	mov    ebx,cr0
  41b8f3:	scas   eax,DWORD PTR es:[edi]
  41b8f4:	arpl   di,sp
  41b8f6:	mov    ds:0x69d89f37,eax
  41b8fb:	ds xchg esi,eax
  41b8fd:	outs   dx,DWORD PTR ds:[esi]
  41b8fe:	dec    ebp
  41b8ff:	(bad)  
  41b900:	stc    
  41b901:	pop    ds
  41b902:	rcr    dh,cl
  41b904:	jmp    0xc9a84d04
  41b909:	sbb    BYTE PTR [esi+ebp*8+0xa],cl
  41b90d:	add    eax,0x7790e9f5
  41b912:	xor    DWORD PTR ds:0x68,ecx
	...
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi+0x76],ah
  41b92e:	sub    al,0x2d
  41b930:	(bad)  
  41b931:	sbb    DWORD PTR [esi],esi
  41b933:	add    DWORD PTR [eax],eax
  41b935:	lods   al,BYTE PTR ds:[esi]
  41b936:	add    eax,DWORD PTR [eax]
  41b938:	add    bl,al
  41b93a:	cs xchg edx,eax
  41b93c:	mov    ds:0x3f3c6c7f,eax
  41b941:	cmc    
  41b942:	not    DWORD PTR [esi+0x25]
  41b945:	xor    BYTE PTR [edi],ch
  41b947:	(bad)  
  41b949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b94a:	in     al,0xe8
  41b94c:	fld    st(6)
  41b94e:	sbb    eax,0xd401aa16
  41b953:	sub    eax,0xc76d9b09
  41b958:	pop    eax
  41b959:	xor    eax,esp
  41b95b:	mov    WORD PTR [edx+0x5a],fs
  41b95e:	xlat   BYTE PTR ds:[ebx]
  41b95f:	and    eax,0xfaac3f75
  41b964:	aad    0x68
  41b966:	stos   BYTE PTR es:[edi],al
  41b967:	inc    ecx
  41b968:	jmp    0x41b9a0
  41b96a:	dec    edi
  41b96b:	xchg   esp,eax
  41b96c:	cmp    bl,BYTE PTR [ebp-0x360aca36]
  41b972:	hlt    
  41b973:	mov    DWORD PTR [edi+0x2c],ebx
  41b976:	test   al,0x2f
  41b978:	scas   al,BYTE PTR es:[edi]
  41b979:	mov    edi,DWORD PTR [esi+ebx*4]
  41b97c:	pop    edi
  41b97d:	lds    esp,FWORD PTR [ebx-0x447cd70a]
  41b983:	cld    
  41b984:	ins    DWORD PTR es:[edi],dx
  41b985:	push   eax
  41b986:	or     ah,al
  41b988:	int3   
  41b989:	or     al,0xf9
  41b98b:	jo     0x41b9fc
  41b98d:	call   0xd12d48a4
  41b992:	in     al,0xef
  41b994:	sbb    DWORD PTR [edx+0x24],edi
  41b997:	push   edx
  41b998:	hlt    
  41b999:	xchg   esi,eax
  41b99a:	dec    edi
  41b99b:	inc    esi
  41b99c:	fwait
  41b99d:	je     0x41b9da
  41b99f:	loope  0x41b936
  41b9a1:	inc    edi
  41b9a2:	dec    ebp
  41b9a3:	cmp    DWORD PTR [eax],ebx
  41b9a5:	push   0xffffffcc
  41b9a7:	add    edx,edx
  41b9a9:	jmp    0x41b966
  41b9ab:	js     0x41b98a
  41b9ad:	ror    BYTE PTR [eax+0x1c],cl
  41b9b0:	jg     0x41b984
  41b9b2:	mov    esi,0x7ba6c3fd
  41b9b7:	lods   al,BYTE PTR ds:[esi]
  41b9b8:	(bad)  
  41b9b9:	adc    eax,0xba52a2d7
  41b9be:	inc    edi
  41b9bf:	sbb    edx,DWORD PTR [esi]
  41b9c1:	pop    edx
  41b9c2:	adc    al,0x3b
  41b9c4:	mov    eax,esi
  41b9c6:	retf   0xbe6c
  41b9c9:	jns    0x41ba09
  41b9cb:	xchg   ebp,eax
  41b9cc:	cdq    
  41b9cd:	cld    
  41b9ce:	adc    ebp,esi
  41b9d0:	cwde   
  41b9d1:	dec    BYTE PTR [ecx]
  41b9d3:	xlat   BYTE PTR ds:[ebx]
  41b9d4:	out    0xdb,al
  41b9d6:	or     BYTE PTR [ecx+ebx*4+0x3cb213],bl
  41b9dd:	pop    esi
  41b9de:	fisub  WORD PTR [ecx+0x17b226d9]
  41b9e4:	adc    eax,0x2ace4d4f
  41b9e9:	in     al,dx
  41b9ea:	cmc    
  41b9eb:	and    al,0xbb
  41b9ed:	dec    edi
  41b9ee:	xchg   BYTE PTR [eax],al
  41b9f0:	les    ecx,FWORD PTR [edx+0x4a]
  41b9f3:	xor    al,0xff
  41b9f5:	out    dx,al
  41b9f6:	push   esi
  41b9f7:	sub    al,0x69
  41b9f9:	xchg   DWORD PTR [esi-0x4c],ebx
  41b9fc:	and    DWORD PTR [ebx-0x66],eax
  41b9ff:	lods   eax,DWORD PTR ds:[esi]
  41ba00:	les    edi,FWORD PTR [edi-0x1b95f16e]
  41ba06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba07:	shr    BYTE PTR [esi],cl
  41ba09:	xor    dl,BYTE PTR [ebx-0x57d991d3]
  41ba0f:	(bad)  
  41ba10:	imul   edi,DWORD PTR [esi],0x169d1893
  41ba16:	test   DWORD PTR [esp+edi*4+0x68057f57],0xceabee80
  41ba21:	aaa    
  41ba22:	das    
  41ba23:	dec    eax
  41ba24:	jp     0x41ba0e
  41ba26:	neg    DWORD PTR [ebp+ebx*2-0x7b8b07e4]
  41ba2d:	mov    al,0xa2
  41ba2f:	std    
  41ba30:	dec    edi
  41ba31:	lea    eax,[edi+0x4eb9d5ea]
  41ba37:	fst    QWORD PTR [ebp+0x7fc66197]
  41ba3d:	jge    0x41ba00
  41ba3f:	repz mov bh,0x4d
  41ba42:	retf   0x4f49
  41ba45:	in     eax,dx
  41ba46:	or     eax,0x1d6a2849
  41ba4b:	push   edi
  41ba4c:	sbb    dh,bl
  41ba4e:	push   ss
  41ba4f:	mov    cl,BYTE PTR [edx]
  41ba51:	adc    BYTE PTR [edx],cl
  41ba53:	adc    ebx,DWORD PTR [ebx+0x74]
  41ba56:	icebp  
  41ba57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba58:	pop    ds
  41ba59:	rcr    esp,cl
  41ba5b:	jecxz  0x41ba3d
  41ba5d:	and    bh,BYTE PTR [eax]
  41ba5f:	(bad)  
  41ba60:	xchg   esi,eax
  41ba61:	aaa    
  41ba62:	mov    esp,0xbe8fac2
  41ba67:	fwait
  41ba68:	aaa    
  41ba69:	or     eax,0x9ef7030c
  41ba6e:	mov    eax,0x876355b7
  41ba73:	xlat   BYTE PTR ds:[ebx]
  41ba74:	xlat   BYTE PTR ds:[ebx]
  41ba75:	push   es
  41ba76:	add    al,0xe3
  41ba78:	mov    ah,0x2a
  41ba7a:	mov    ebx,0xbf48ca64
  41ba7f:	call   0x7de3d79d
  41ba84:	stos   DWORD PTR es:[edi],eax
  41ba85:	and    DWORD PTR [edx+0x5c86ecfa],ecx
  41ba8b:	xchg   edx,eax
  41ba8c:	inc    ebp
  41ba8d:	mov    cl,0x8a
  41ba8f:	push   ss
  41ba90:	push   eax
  41ba91:	(bad)  
  41ba92:	jl     0x41bab7
  41ba94:	sub    al,0xe3
  41ba96:	ss cmc 
  41ba98:	ins    BYTE PTR es:[edi],dx
  41ba99:	push   ecx
  41ba9a:	add    eax,0x7d726cef
  41ba9f:	cmp    al,0x4d
  41baa1:	pxor   mm1,QWORD PTR [esi]
  41baa4:	fstp   DWORD PTR [ecx]
  41baa6:	jge    0x41bafe
  41baa8:	scas   eax,DWORD PTR es:[edi]
  41baa9:	ror    DWORD PTR [eax],0xf2
  41baac:	sbb    dl,BYTE PTR [eax+0x40d911a7]
  41bab2:	mov    al,ds:0xbd5f0fe2
  41bab7:	mov    edi,0x502f8bee
  41babc:	in     al,0x4e
  41babe:	ficom  DWORD PTR [esi+ebx*1]
  41bac1:	jg     0x41ba8e
  41bac3:	and    edx,eax
  41bac5:	stos   DWORD PTR es:[edi],eax
  41bac6:	jb     0x41bab8
  41bac8:	xchg   esp,eax
  41bac9:	mov    esp,0x53e3d781
  41bace:	sbb    BYTE PTR [edx-0x215a4e78],0x2c
  41bad5:	test   DWORD PTR [edx+0x149ee4b2],0x8c36e88e
  41badf:	pop    esi
  41bae0:	rcl    BYTE PTR [ebx],1
  41bae2:	into   
  41bae3:	ins    DWORD PTR es:[edi],dx
  41bae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bae5:	mov    ecx,0x27115134
  41baea:	nop
  41baeb:	xadd   ebx,edi
  41baee:	stos   DWORD PTR es:[edi],eax
  41baef:	jno    0x41baff
  41baf1:	sub    ah,ch
  41baf3:	or     ah,ch
  41baf5:	jge    0x41bb40
  41baf7:	icebp  
  41baf8:	(bad)  
  41baf9:	push   ebx
  41bafa:	in     al,dx
  41bafb:	cmp    DWORD PTR [edx+0x17],ebx
  41bafe:	ret    0xe917
  41bb01:	call   0x78a0:0xb270adc6
  41bb08:	popa   
  41bb09:	push   edi
  41bb0a:	and    al,0x47
  41bb0c:	ja     0x41bae0
  41bb0e:	cmp    DWORD PTR [ebx],esp
  41bb10:	ds loop 0x41bb84
  41bb13:	call   0xa731bffe
  41bb18:	pop    eax
  41bb19:	push   0x3d0c698d
  41bb1e:	jnp    0x41bb98
  41bb20:	lock sbb BYTE PTR [edx+0x56],bl
  41bb24:	jmp    0x41bad8
  41bb26:	pop    esp
  41bb27:	mov    ds:0xcde0f43f,eax
  41bb2c:	add    al,0x65
  41bb2e:	xlat   BYTE PTR ds:[ebx]
  41bb2f:	lods   eax,DWORD PTR ds:[esi]
  41bb30:	test   al,0xc7
  41bb32:	inc    eax
  41bb33:	pop    ebx
  41bb34:	xchg   ebx,eax
  41bb35:	mov    ds:0xab8ff645,eax
  41bb3a:	mov    eax,ds:0x18322205
  41bb3f:	call   0x41fa:0x9b5ac0d
  41bb46:	jmp    0x41bb96
  41bb48:	xchg   edi,eax
  41bb49:	push   ecx
  41bb4a:	and    BYTE PTR [esi],cl
  41bb4c:	test   al,0xbf
  41bb4e:	pushf  
  41bb4f:	cld    
  41bb50:	sbb    edx,DWORD PTR [ebx-0x69]
  41bb53:	push   edx
  41bb54:	cmp    edx,DWORD PTR [esi-0x6e]
  41bb57:	or     eax,DWORD PTR [ecx-0x4e]
  41bb5a:	(bad)  
  41bb5b:	lock xchg edi,eax
  41bb5d:	in     al,dx
  41bb5e:	sbb    eax,0x3546c98c
  41bb63:	dec    ebp
  41bb64:	in     eax,0xf0
  41bb66:	pop    es
  41bb67:	cli    
  41bb68:	loop   0x41bb65
  41bb6a:	xchg   esp,eax
  41bb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb6c:	or     bh,BYTE PTR [ecx+edx*2+0x23cbe5f4]
  41bb73:	ins    DWORD PTR es:[edi],dx
  41bb74:	packsswb mm6,mm0
  41bb77:	lods   eax,DWORD PTR ds:[esi]
  41bb78:	fwait
  41bb79:	xor    bl,al
  41bb7b:	das    
  41bb7c:	sub    ebp,DWORD PTR [edx-0x532df0c6]
  41bb82:	hlt    
  41bb83:	js     0x41bbe6
  41bb85:	add    eax,0x3564c214
  41bb8a:	push   cs
  41bb8b:	stos   BYTE PTR es:[edi],al
  41bb8c:	or     BYTE PTR [edx+0x42],0xe6
  41bb90:	jp     0x41bb7f
  41bb92:	xor    eax,0xcd3c01bc
  41bb97:	(bad)  
  41bb98:	cmp    esp,DWORD PTR ds:0x3b5ee2f6
  41bb9e:	test   DWORD PTR cs:[ebx+0x5d2cb90f],ecx
  41bba5:	add    esi,DWORD PTR [eax]
  41bba7:	stos   BYTE PTR es:[edi],al
  41bba8:	inc    esp
  41bba9:	js     0x41bb86
  41bbab:	mov    edx,0x2229040b
  41bbb0:	bound  esp,QWORD PTR [ebp+0x18]
  41bbb3:	mov    edx,0x394c4e97
  41bbb8:	mov    edi,0x931278b
  41bbbd:	dec    eax
  41bbbe:	cmp    ah,dh
  41bbc0:	mov    edx,0xa88ac88d
  41bbc5:	call   0xe2f3:0x7be18028
  41bbcc:	dec    ebp
  41bbcd:	adc    al,0x7c
  41bbcf:	push   ss
  41bbd0:	lods   eax,DWORD PTR ds:[esi]
  41bbd1:	ret    0xb4e9
  41bbd4:	mov    eax,DWORD PTR [ebx-0x27]
  41bbd7:	fidivr DWORD PTR [esi-0x76]
  41bbda:	enter  0xcff,0x5e
  41bbde:	test   eax,esp
  41bbe0:	and    al,0x71
  41bbe2:	fld    QWORD PTR [ecx+0x23]
  41bbe5:	xchg   ebx,eax
  41bbe6:	enter  0xc468,0xdd
  41bbea:	push   ebx
  41bbeb:	push   0x60
  41bbed:	popf   
  41bbee:	push   cs
  41bbef:	push   ebx
  41bbf0:	lock fild QWORD PTR [ebx+0x361eca02]
  41bbf7:	sbb    bl,bl
  41bbf9:	fsub   DWORD PTR [edx-0x709d50fc]
  41bbff:	das    
  41bc00:	loopne 0x41bbf1
  41bc02:	cmp    BYTE PTR [ecx],bh
  41bc04:	cdq    
  41bc05:	mov    ds:0x8e1e015d,eax
  41bc0a:	retf   
  41bc0b:	neg    dl
  41bc0d:	pop    esi
  41bc0e:	addr16 out dx,eax
  41bc10:	xchg   esi,eax
  41bc11:	enter  0xf1fe,0xc1
  41bc15:	jbe    0x41bc4a
  41bc17:	or     ebp,DWORD PTR [ecx]
  41bc19:	or     al,0xb7
  41bc1b:	pop    esp
  41bc1c:	push   ecx
  41bc1d:	inc    ebp
  41bc1e:	push   esp
  41bc1f:	cmp    ax,0x5320
  41bc23:	fs das 
  41bc25:	repnz (bad) 
  41bc27:	out    dx,al
  41bc28:	(bad)  
  41bc29:	popf   
  41bc2a:	mov    esp,0xaf076083
  41bc2f:	imul   edx,DWORD PTR [eax+0x273e326],0xe4bceaaf
  41bc39:	outs   dx,BYTE PTR ds:[esi]
  41bc3a:	add    ch,BYTE PTR [eax]
  41bc3c:	and    ch,BYTE PTR [eax-0x36]
  41bc3f:	mov    BYTE PTR [ebp+0x77],dl
  41bc42:	mov    ds:0x114c7010,al
  41bc47:	call   0xc3acf0c2
  41bc4c:	inc    ebx
  41bc4d:	ret    
  41bc4e:	mov    al,0x56
  41bc50:	fidiv  DWORD PTR [ebx*8-0x2cad654]
  41bc57:	xlat   BYTE PTR ds:[ebx]
  41bc58:	cmp    BYTE PTR [ecx+eax*4-0x49accf3f],bl
  41bc5f:	stos   BYTE PTR es:[edi],al
  41bc60:	(bad)  
  41bc61:	scas   eax,DWORD PTR es:[edi]
  41bc62:	cmp    eax,0xdc09cc14
  41bc67:	addr16 dec edx
  41bc69:	lds    esi,FWORD PTR [ebx+0x3f]
  41bc6c:	pop    esp
  41bc6d:	sub    ah,BYTE PTR [eax+ecx*2]
  41bc70:	sbb    esp,esi
  41bc72:	rcl    DWORD PTR [eax-0x6e],0xfa
  41bc76:	or     eax,0xb4f6a2dc
  41bc7b:	adc    esi,DWORD PTR [ebx-0x5a]
  41bc7e:	mov    dh,0x33
  41bc80:	jecxz  0x41bcd9
  41bc82:	(bad)  
  41bc83:	fnstsw WORD PTR ds:0x50cb1248
  41bc89:	in     al,dx
  41bc8a:	add    eax,0x85d14ee4
  41bc8f:	add    al,0xc1
  41bc91:	inc    ebp
  41bc92:	sbb    eax,0xe2d5ee18
  41bc97:	in     al,0xb8
  41bc99:	sub    esi,ebx
  41bc9b:	and    BYTE PTR [esp+ebx*4-0x5ba6550a],bl
  41bca2:	pop    ebp
  41bca3:	shr    DWORD PTR [edi-0x72],1
  41bca6:	push   edx
  41bca7:	inc    ecx
  41bca8:	jmp    FWORD PTR [edi-0x64dd289a]
  41bcae:	enter  0xef5b,0xb0
  41bcb2:	nop
  41bcb3:	sbb    al,0x96
  41bcb5:	test   al,0x4a
  41bcb7:	fisubr DWORD PTR [ebx+0x28]
  41bcba:	jge    0x41bc91
  41bcbc:	push   ds
  41bcbd:	jmp    0xb48a:0x9dfd1fca
  41bcc4:	jg     0x41bcfd
  41bcc6:	sbb    esi,DWORD PTR [ecx]
  41bcc8:	repnz sub eax,0x5b6ba944
  41bcce:	shr    BYTE PTR ds:0x4a8a87a8,1
  41bcd4:	hlt    
  41bcd5:	(bad)  
  41bcd6:	fsub   QWORD PTR [eax-0x38]
  41bcd9:	div    DWORD PTR [esi-0x62]
  41bcdc:	arpl   WORD PTR [edi-0xa],sp
  41bcdf:	lds    edi,FWORD PTR [ebx-0x27]
  41bce2:	loope  0x41bcdc
  41bce4:	bound  eax,QWORD PTR [eax]
	...
  41bcee:	add    BYTE PTR [eax],al
  41bcf0:	add    ah,bh
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	add    ah,BYTE PTR [edx]
  41bcff:	lahf   
  41bd00:	scas   eax,DWORD PTR es:[edi]
  41bd01:	lds    edi,FWORD PTR [ecx]
  41bd03:	add    DWORD PTR [eax],eax
  41bd05:	lods   al,BYTE PTR ds:[esi]
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    BYTE PTR [eax],cl
  41bd0a:	inc    esp
  41bd0b:	int3   
  41bd0c:	mov    edi,0x6973c232
  41bd11:	push   esp
  41bd12:	pop    edx
  41bd13:	fscale 
  41bd15:	mov    eax,0x2eb26447
  41bd1a:	inc    esp
  41bd1b:	mov    eax,ds:0x1cd816e0
  41bd20:	adc    al,0x2f
  41bd22:	arpl   cx,bp
  41bd24:	fcomi  st,st(5)
  41bd26:	jns    0x41bd33
  41bd28:	aas    
  41bd29:	cmp    DWORD PTR [ecx+0x5e36256f],ebp
  41bd2f:	xchg   esi,eax
  41bd30:	adc    al,0x59
  41bd32:	adc    cl,BYTE PTR [ebp+0x4d676a9e]
  41bd38:	fild   QWORD PTR [ecx-0x7ca995ca]
  41bd3e:	xor    eax,0xcc8e4069
  41bd43:	mov    dh,0x18
  41bd45:	mov    ecx,0xeeadc88
  41bd4a:	jl     0x41bd50
  41bd4c:	mov    edi,ebp
  41bd4e:	(bad)  
  41bd4f:	retf   
  41bd50:	jp     0x41bcfb
  41bd52:	mov    ds:0x69769c54,eax
  41bd57:	daa    
  41bd58:	sti    
  41bd59:	jle    0x41bd8c
  41bd5b:	xchg   edx,eax
  41bd5c:	xchg   ebp,eax
  41bd5d:	pusha  
  41bd5e:	mov    edi,0x6533b362
  41bd63:	scas   al,BYTE PTR es:[edi]
  41bd64:	and    eax,0xa0772e82
  41bd69:	in     eax,dx
  41bd6a:	push   eax
  41bd6b:	into   
  41bd6c:	adc    ah,BYTE PTR [ebx+0x581ffaf3]
  41bd72:	pop    ebp
  41bd73:	mov    ds:0xe430ab6c,al
  41bd78:	enter  0xfeba,0xf
  41bd7c:	jae    0x41bdfa
  41bd7e:	pop    esp
  41bd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd80:	mov    bl,0x7
  41bd82:	retf   
  41bd83:	mov    dl,0x56
  41bd85:	ins    DWORD PTR es:[edi],dx
  41bd86:	es sub bx,cx
  41bd8a:	xchg   esi,eax
  41bd8b:	or     DWORD PTR [eax+esi*4-0x2a399251],0x15
  41bd93:	xor    edx,DWORD PTR [esp+ebp*4]
  41bd96:	int    0x65
  41bd98:	mov    ebx,0x7388e1f5
  41bd9d:	or     al,0xd2
  41bd9f:	mov    ch,0xda
  41bda1:	jmp    0xd932:0xca11bf76
  41bda8:	push   ss
  41bda9:	aam    0x39
  41bdab:	nop
  41bdac:	fwait
  41bdad:	or     BYTE PTR [ebx+0x6f],0x47
  41bdb1:	mov    al,BYTE PTR [esi+0x3e0e6ad6]
  41bdb7:	xor    BYTE PTR [ecx+0x22381a],0x36
  41bdbe:	and    eax,0x196674a2
  41bdc3:	sbb    al,0x25
  41bdc5:	adc    BYTE PTR [eax-0x23713ad1],0xd1
  41bdcc:	adc    DWORD PTR [esi],edx
  41bdce:	ficomp DWORD PTR [ebp+0x7a]
  41bdd1:	sbb    eax,0x44495ad0
  41bdd6:	mov    al,ds:0x7c52c7c2
  41bddb:	push   edx
  41bddc:	stc    
  41bddd:	dec    ebx
  41bdde:	cli    
  41bddf:	clc    
  41bde0:	inc    eax
  41bde1:	jno    0x41bdc9
  41bde3:	sub    eax,0x393addf
  41bde8:	and    eax,0x3ac6b6e2
  41bded:	mov    ds:0xb97f8491,eax
  41bdf2:	cmp    esp,DWORD PTR [ebx-0x1c5aab42]
  41bdf8:	jns    0x41bd7e
  41bdfa:	daa    
  41bdfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdfc:	leave  
  41bdfd:	xchg   ebp,eax
  41bdfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdff:	pop    ebp
  41be00:	cli    
  41be01:	mov    ebx,0x79982b76
  41be06:	mov    al,0x3c
  41be08:	dec    ecx
  41be09:	jle    0x41be2d
  41be0b:	xor    bl,BYTE PTR [ecx+0x68]
  41be0e:	aad    0xf6
  41be10:	push   edi
  41be11:	mov    edi,0x1bff8e8a
  41be16:	je     0x41bdc8
  41be18:	clc    
  41be19:	ins    BYTE PTR es:[edi],dx
  41be1a:	push   edx
  41be1b:	sbb    ebp,ebx
  41be1d:	adc    esi,DWORD PTR [edx-0x7b0e12ab]
  41be23:	inc    DWORD PTR [ebp+0x6]
  41be26:	rol    DWORD PTR [eax],0x96
  41be29:	fisubr DWORD PTR [ecx]
  41be2b:	inc    edi
  41be2c:	pushf  
  41be2d:	fstp   DWORD PTR [ebx-0x69]
  41be30:	pushf  
  41be31:	sti    
  41be32:	test   DWORD PTR [edi-0x68],edi
  41be35:	pop    eax
  41be36:	or     ebx,DWORD PTR [edi+0xa]
  41be39:	fcmove st,st(3)
  41be3b:	or     DWORD PTR [eax+0x3],esi
  41be3e:	mov    ss,WORD PTR [ebp-0x5a]
  41be41:	scas   al,BYTE PTR es:[edi]
  41be42:	inc    edi
  41be43:	(bad)  
  41be44:	loop   0x41be91
  41be46:	clc    
  41be47:	rcr    ebp,cl
  41be49:	rep ins DWORD PTR es:[edi],dx
  41be4b:	ins    DWORD PTR es:[edi],dx
  41be4c:	xchg   esi,eax
  41be4d:	pop    ds
  41be4e:	test   BYTE PTR [esp+edi*8-0x1ab342f9],ch
  41be55:	sbb    ecx,esi
  41be57:	popa   
  41be58:	or     DWORD PTR [eax+0x22],ecx
  41be5b:	inc    ecx
  41be5c:	cld    
  41be5d:	call   0x862c:0x215f4c86
  41be64:	push   ebp
  41be65:	in     al,0x8
  41be67:	sbb    edx,ecx
  41be69:	mov    dl,0x98
  41be6b:	mov    BYTE PTR [edx],bl
  41be6d:	and    al,0x48
  41be6f:	mov    esp,0x5c3319ee
  41be74:	inc    esi
  41be75:	lahf   
  41be76:	jb     0x41be69
  41be78:	dec    esp
  41be79:	scas   eax,DWORD PTR es:[edi]
  41be7a:	leave  
  41be7b:	in     eax,0xf1
  41be7d:	stos   DWORD PTR es:[edi],eax
  41be7e:	mov    ebp,DWORD PTR [ebx-0xff17e6b]
  41be84:	enter  0x7c88,0xe0
  41be88:	mov    eax,DWORD PTR [edi-0x75]
  41be8b:	mov    eax,ds:0x5426bc6a
  41be90:	adc    al,0x98
  41be92:	mov    ebp,DWORD PTR [edx-0x2d2913f]
  41be98:	ss in  al,dx
  41be9a:	stos   DWORD PTR es:[edi],eax
  41be9b:	loop   0x41be3e
  41be9d:	or     ebp,DWORD PTR [eax+esi*8-0x7b]
  41bea1:	push   eax
  41bea2:	jmp    DWORD PTR [esi+0x3e]
  41bea5:	popa   
  41bea6:	jge    0x41be64
  41bea8:	push   edx
  41bea9:	sub    al,0x1f
  41beab:	mov    ecx,0x341b3608
  41beb0:	adc    bh,BYTE PTR [eax-0x75]
  41beb3:	adc    ax,0x1987
  41beb7:	aaa    
  41beb8:	dec    eax
  41beb9:	imul   eax,esi,0xb1cb7eaf
  41bebf:	sahf   
  41bec0:	test   BYTE PTR [eax+0x44],dl
  41bec3:	xor    BYTE PTR [eax+esi*8-0x60109161],ch
  41beca:	je     0x41befd
  41becc:	std    
  41becd:	test   al,0xc9
  41becf:	repz mov dl,0x7f
  41bed2:	bound  esi,QWORD PTR [esi-0x66976e93]
  41bed8:	add    ah,dh
  41beda:	or     ecx,DWORD PTR [edi-0x50e0476a]
  41bee0:	(bad)  
  41bee1:	sbb    ah,BYTE PTR [edi+0x7a]
  41bee4:	test   al,dl
  41bee6:	(bad)  
  41bee7:	pop    esi
  41bee8:	out    dx,al
  41bee9:	xchg   edx,eax
  41beea:	adc    DWORD PTR [esi-0x4d],esi
  41beed:	fld    DWORD PTR [esi]
  41beef:	add    eax,0xc13b9574
  41bef4:	repz push ebp
  41bef6:	xor    BYTE PTR [ecx-0x53],bh
  41bef9:	or     al,0x8d
  41befb:	xor    al,0xd3
  41befd:	inc    esi
  41befe:	or     ebx,DWORD PTR [esi+0x668da43]
  41bf04:	mov    al,0x6d
  41bf06:	stos   DWORD PTR es:[edi],eax
  41bf07:	dec    edx
  41bf08:	add    DWORD PTR [ebx-0x2ac98f21],ecx
  41bf0e:	dec    ebp
  41bf0f:	sub    edi,ecx
  41bf11:	cmp    BYTE PTR [eax+0x6389f38b],al
  41bf17:	enter  0x237a,0x4f
  41bf1b:	dec    ecx
  41bf1c:	add    DWORD PTR [ecx],edi
  41bf1e:	aam    0xcf
  41bf20:	fs jae 0x41bee6
  41bf23:	sub    ebp,edi
  41bf25:	pop    ss
  41bf26:	xor    eax,0x75029b4c
  41bf2b:	call   0x781d:0xafb67d48
  41bf32:	rcl    BYTE PTR [edx+0x3d1d3b19],0x66
  41bf39:	adc    dl,BYTE PTR [esi+0x15]
  41bf3c:	arpl   bx,si
  41bf3e:	or     al,0x41
  41bf40:	sub    al,0x9b
  41bf42:	xchg   ebp,eax
  41bf43:	in     eax,dx
  41bf44:	xor    DWORD PTR [edx],0xffffffb4
  41bf47:	enter  0xaa2e,0xa
  41bf4b:	aaa    
  41bf4c:	pop    es
  41bf4d:	test   edi,ecx
  41bf4f:	int    0x49
  41bf51:	mov    ds:0xf3de6d57,eax
  41bf56:	mov    ss,WORD PTR [ecx+0x33]
  41bf59:	push   0x22
  41bf5b:	xchg   BYTE PTR [esp+esi*4],al
  41bf5e:	mov    dh,0xbb
  41bf60:	xchg   ebp,eax
  41bf61:	(bad)  
  41bf63:	adc    al,0xa4
  41bf65:	les    edi,FWORD PTR [ebx+0x6c]
  41bf68:	leave  
  41bf69:	jae    0x41bf69
  41bf6b:	fidiv  DWORD PTR [ebp-0x57269d80]
  41bf71:	xor    ebx,DWORD PTR [ecx+ebp*2+0x759e2cf7]
  41bf78:	les    esp,FWORD PTR [edx-0x32]
  41bf7b:	xchg   ebp,eax
  41bf7c:	sbb    DWORD PTR [ebx-0x42],ecx
  41bf7f:	daa    
  41bf80:	aam    0xd
  41bf82:	pop    eax
  41bf83:	ds icebp 
  41bf85:	sbb    cl,BYTE PTR [esi+0x8d42206]
  41bf8b:	add    BYTE PTR [edx-0x2e546c05],dl
  41bf91:	inc    esi
  41bf92:	(bad)  
  41bf93:	cmp    eax,0xca48a112
  41bf98:	out    0xe0,al
  41bf9a:	jmp    0x41c004
  41bf9c:	xor    DWORD PTR [ebp+edx*4+0x3f],ebx
  41bfa0:	out    0x3f,al
  41bfa2:	or     ah,dh
  41bfa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfa5:	cmp    bh,dh
  41bfa7:	mov    eax,ds:0xd7074c07
  41bfac:	push   esi
  41bfad:	fdiv   QWORD PTR [ecx]
  41bfaf:	push   edi
  41bfb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfb1:	dec    ebx
  41bfb2:	fdiv   QWORD PTR ds:0xb50a504b
  41bfb8:	jle    0x41c02b
  41bfba:	aas    
  41bfbb:	(bad)  
  41bfbd:	push   ds
  41bfbe:	fwait
  41bfbf:	jbe    0x41c01b
  41bfc1:	or     BYTE PTR [ebx-0x61c7884f],bl
  41bfc7:	clc    
  41bfc8:	pusha  
  41bfc9:	pop    ss
  41bfca:	xor    eax,0xe3ccf210
  41bfcf:	clc    
  41bfd0:	cmp    BYTE PTR [edi],ah
  41bfd2:	dec    eax
  41bfd3:	jbe    0x41bfb7
  41bfd5:	lods   al,BYTE PTR ds:[esi]
  41bfd6:	sti    
  41bfd7:	dec    edi
  41bfd8:	sbb    DWORD PTR ds:0xf8ff7ac5,edx
  41bfde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdf:	push   ecx
  41bfe0:	pusha  
  41bfe1:	call   0xdb64:0xfa399efb
  41bfe8:	push   esp
  41bfe9:	ret    0xfd53
  41bfec:	les    ebp,FWORD PTR [ecx+ebp*4]
  41bfef:	loope  0x41bf74
  41bff1:	pop    es
  41bff2:	push   eax
  41bff3:	mov    bh,0xd1
  41bff5:	cmp    al,0x32
  41bff7:	dec    edi
  41bff8:	fild   WORD PTR ds:0xd56e1474
  41bffe:	cmp    BYTE PTR [edx+0x27],dh
  41c001:	jno    0x41c030
  41c003:	pop    ebx
  41c004:	fwait
  41c005:	jg     0x41c01a
  41c007:	(bad)  
  41c008:	lea    esp,[esi]
  41c00a:	xor    al,BYTE PTR [edx-0x6a43012e]
  41c010:	ffreep st(7)
  41c012:	jbe    0x41c03f
  41c014:	out    dx,al
  41c015:	retf   0x71fa
  41c018:	pusha  
  41c019:	cmp    eax,0x487bf576
  41c01e:	push   0x2
  41c020:	mov    edi,0x47db7a29
  41c025:	jb     0x41c019
  41c027:	jecxz  0x41c08b
  41c029:	fnstsw WORD PTR [eax+esi*1+0x10]
  41c02d:	jg     0x41c05c
  41c02f:	cmp    BYTE PTR [edi],ch
  41c031:	fsubr  st,st(7)
  41c033:	hlt    
  41c034:	bound  edx,QWORD PTR [ebx-0x24]
  41c037:	jns    0x41bfff
  41c039:	mov    dh,0xa
  41c03b:	out    0xd9,al
  41c03d:	outs   dx,BYTE PTR ds:[esi]
  41c03e:	pop    edi
  41c03f:	pop    es
  41c040:	push   es
  41c041:	jmp    0xbc8d:0x22d75b61
  41c048:	push   0x897db4e2
  41c04d:	out    0x4d,eax
  41c04f:	cmc    
  41c050:	pop    ecx
  41c051:	out    0x3f,al
  41c053:	fs sub eax,0xbab91f33
  41c059:	or     ecx,eax
  41c05b:	sub    al,0xb1
  41c05d:	mov    gs,eax
  41c05f:	pop    esi
  41c060:	push   ecx
  41c061:	outs   dx,BYTE PTR ds:[esi]
  41c062:	pop    ebp
  41c063:	cdq    
  41c064:	lods   al,BYTE PTR ds:[esi]
  41c065:	jge    0x41c024
  41c067:	cli    
  41c068:	pop    ebx
  41c069:	cdq    
  41c06a:	push   esp
  41c06b:	pop    ss
  41c06c:	jo     0x41c0b5
  41c06e:	ret    
  41c06f:	mov    ebp,DWORD PTR [ebx+0x3d]
  41c072:	scas   al,BYTE PTR es:[edi]
  41c073:	push   0xffffffda
  41c075:	imul   eax,ecx,0xd
  41c078:	sbb    DWORD PTR [ebx+0x77],esp
  41c07b:	sub    edx,ecx
  41c07d:	mov    dl,cl
  41c07f:	mov    ds:0xf865ac46,eax
  41c084:	pop    ecx
  41c085:	adc    eax,0xf4d1532b
  41c08a:	imul   BYTE PTR [eax+0x69]
  41c08d:	enter  0xd5f6,0x45
  41c091:	pop    esp
  41c092:	dec    edi
  41c093:	in     eax,0x84
  41c095:	xchg   ebp,eax
  41c096:	add    BYTE PTR [ebx],0x24
  41c099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c09a:	adc    BYTE PTR [ebp+0x7f],0x35
  41c09e:	adc    eax,0xb236d7a
  41c0a3:	cmp    al,bh
  41c0a5:	cmp    edx,DWORD PTR [ecx]
  41c0a7:	aas    
  41c0a8:	xchg   edi,ecx
  41c0aa:	repnz sub DWORD PTR [eiz*2-0x8ab06f],0x3d6a7c
	...
  41c0be:	add    BYTE PTR [eax],al
  41c0c0:	add    bl,cl
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1-0x46]
  41c0ce:	or     esi,DWORD PTR [esi+ecx*4+0x71]
  41c0d2:	cmp    eax,0x3ac0001
  41c0d7:	add    BYTE PTR [eax],al
  41c0d9:	cmp    DWORD PTR [eax-0x9],ebp
  41c0dc:	add    eax,0x5cef2f94
  41c0e1:	cvtdq2ps xmm6,XMMWORD PTR [esi+0x4a34ae9a]
  41c0e8:	inc    ebp
  41c0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ea:	lods   al,BYTE PTR ds:[esi]
  41c0eb:	retf   
  41c0ec:	daa    
  41c0ed:	sub    al,0x4f
  41c0ef:	add    eax,0x62e81d85
  41c0f4:	stos   BYTE PTR es:[edi],al
  41c0f5:	push   es
  41c0f6:	mov    edx,0x7ffe174a
  41c0fb:	xchg   edx,eax
  41c0fc:	xor    eax,0xf31c7b1e
  41c101:	jo     0x41c0ca
  41c103:	(bad)  
  41c104:	xor    BYTE PTR [esi-0x77],bh
  41c107:	fsubr  DWORD PTR [esp+edx*1+0x76]
  41c10b:	mov    eax,ds:0xdcaf1724
  41c110:	push   edx
  41c111:	cs adc al,0x58
  41c114:	adc    al,0xa
  41c116:	mov    ebp,DWORD PTR [edx-0x33603ccd]
  41c11c:	pop    ebp
  41c11d:	les    ebx,FWORD PTR [edx+0x9]
  41c120:	add    al,0x74
  41c122:	push   esi
  41c123:	add    cl,BYTE PTR ds:0xd524f11c
  41c129:	inc    esi
  41c12a:	ins    BYTE PTR es:[edi],dx
  41c12b:	dec    ecx
  41c12c:	js     0x41c0e6
  41c12e:	(bad)  
  41c12f:	cmc    
  41c130:	rol    BYTE PTR [ebx+0x5b5d54b7],1
  41c136:	pop    ecx
  41c137:	adc    esi,DWORD PTR [ecx+0x3b]
  41c13a:	push   0x690704c4
  41c13f:	lea    esp,[edi+0x2b]
  41c142:	test   eax,0x687abf32
  41c147:	sbb    eax,0x237ff9b5
  41c14c:	sub    cl,BYTE PTR [eax]
  41c14e:	stc    
  41c14f:	sbb    eax,edx
  41c151:	mov    dh,0xcd
  41c153:	stc    
  41c154:	xchg   edx,eax
  41c155:	shr    DWORD PTR [esi+0x2cc16249],0x21
  41c15c:	gs stos BYTE PTR es:[edi],al
  41c15e:	in     eax,0xfb
  41c160:	loope  0x41c161
  41c162:	repz stc 
  41c164:	les    ebx,FWORD PTR [ebx-0x6a1631c8]
  41c16a:	jp     0x41c1c6
  41c16c:	cmp    bl,dh
  41c16e:	sbb    eax,0xcd869f22
  41c173:	add    DWORD PTR ds:0x218db0b8,ebp
  41c179:	mov    dh,0x12
  41c17b:	jmp    0x41c1e7
  41c17d:	jmp    0x14f:0x814d23de
  41c184:	fyl2x  
  41c186:	inc    ebp
  41c187:	mov    esi,0x9e355fd1
  41c18c:	test   al,0x95
  41c18e:	stc    
  41c18f:	dec    eax
  41c190:	add    al,0x9a
  41c192:	dec    ebp
  41c193:	pop    ebx
  41c194:	test   al,0xeb
  41c196:	rol    DWORD PTR [bp+0x3cfc],0xb6
  41c19c:	xor    dl,BYTE PTR [ecx+0x7e]
  41c19f:	inc    ebp
  41c1a0:	ror    esi,1
  41c1a2:	add    eax,ebx
  41c1a4:	test   DWORD PTR [esi-0x1e],ebp
  41c1a7:	dec    esp
  41c1a8:	or     ah,BYTE PTR [ecx-0x5d9779d2]
  41c1ae:	sbb    ecx,DWORD PTR [ecx]
  41c1b0:	cdq    
  41c1b1:	(bad)  ds:0x19aa2a41
  41c1b7:	lock outs dx,BYTE PTR ds:[esi]
  41c1b9:	fcmovnu st,st(4)
  41c1bb:	ret    0x3566
  41c1be:	sar    bl,cl
  41c1c0:	adc    eax,0xce0fce67
  41c1c5:	and    bh,bh
  41c1c7:	push   eax
  41c1c8:	test   al,0xfe
  41c1ca:	xchg   ebx,eax
  41c1cb:	add    eax,0xc46219fe
  41c1d0:	jle    0x41c236
  41c1d2:	scas   eax,DWORD PTR es:[edi]
  41c1d3:	and    DWORD PTR [ebp+0x4],0xffffffa2
  41c1d7:	and    al,0x58
  41c1d9:	sub    eax,0xfe14731
  41c1de:	dec    esi
  41c1df:	adc    DWORD PTR [ebx],0x1ada44fc
  41c1e5:	xor    al,0x47
  41c1e7:	jno    0x41c1b8
  41c1e9:	xchg   edi,eax
  41c1ea:	mov    ds:0x4fbb10c6,al
  41c1ef:	cs sub eax,0xb2613ac9
  41c1f5:	clc    
  41c1f6:	jns    0x41c236
  41c1f8:	or     esi,DWORD PTR [ecx+0x43]
  41c1fb:	jecxz  0x41c201
  41c1fd:	jno    0x41c180
  41c1ff:	(bad)  
  41c200:	jge    0x41c196
  41c202:	sbb    edi,DWORD PTR [edi+0x57]
  41c205:	adc    dh,BYTE PTR [bx-0xc]
  41c209:	cld    
  41c20a:	jmp    0x41c241
  41c20c:	mov    DWORD PTR [ecx+0x346ce33],ecx
  41c212:	ss cmp al,0x47
  41c215:	push   ecx
  41c216:	xor    WORD PTR [esi],0xffb9
  41c21a:	in     al,0xe
  41c21c:	jbe    0x41c257
  41c21e:	mov    ds:0x5d7ca9a3,eax
  41c223:	out    0x3d,eax
  41c225:	xor    eax,0xfdfea5f2
  41c22a:	ret    0x9ffe
  41c22d:	enter  0xae4e,0x1d
  41c231:	lods   eax,DWORD PTR ds:[esi]
  41c232:	lea    esi,[edx]
  41c234:	out    dx,eax
  41c235:	fcomp  QWORD PTR [esi+0xb]
  41c238:	shl    BYTE PTR [eax-0x458a83aa],1
  41c23e:	sbb    BYTE PTR [eax],ch
  41c240:	stos   BYTE PTR es:[edi],al
  41c241:	sub    dh,BYTE PTR [ebx]
  41c243:	inc    ebp
  41c244:	pop    esi
  41c245:	sar    BYTE PTR [ebx],0x65
  41c248:	inc    edi
  41c249:	inc    esi
  41c24a:	shl    DWORD PTR [edi+0x37],1
  41c24d:	fsubr  st,st(3)
  41c24f:	aas    
  41c250:	shl    BYTE PTR [esi],cl
  41c252:	(bad)  
  41c253:	jge    0x41c24b
  41c255:	or     DWORD PTR ds:0x2e6f774c,eax
  41c25b:	dec    esi
  41c25c:	(bad)
  41c260:	dec    esp
  41c261:	adc    eax,0xeab3af22
  41c266:	jecxz  0x41c2af
  41c268:	clc    
  41c269:	xor    edx,DWORD PTR [esi+edi*8+0x28]
  41c26d:	mov    al,ds:0x5fc3c82c
  41c272:	(bad)  
  41c273:	retf   0x675f
  41c276:	add    eax,0xecabc683
  41c27b:	ins    DWORD PTR es:[edi],dx
  41c27c:	mov    ds:0x84ad921f,al
  41c281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c282:	popf   
  41c283:	cdq    
  41c284:	lds    ecx,FWORD PTR [ebp+0xd]
  41c287:	cmp    al,0x8a
  41c289:	int    0x52
  41c28b:	adc    eax,0xc1bbdcd
  41c290:	and    al,0xf6
  41c292:	clc    
  41c293:	cmp    DWORD PTR [bp+si+0x322f],ecx
  41c298:	cmc    
  41c299:	sbb    ecx,esp
  41c29b:	cdq    
  41c29c:	mov    dl,0xf
  41c29e:	push   cs
  41c29f:	push   ecx
  41c2a0:	stc    
  41c2a1:	push   ebp
  41c2a2:	(bad)  
  41c2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2a4:	push   esp
  41c2a5:	jmp    0x705a:0xb86ca8d2
  41c2ac:	call   ecx
  41c2ae:	lds    esp,FWORD PTR [esi]
  41c2b0:	xchg   edi,eax
  41c2b1:	dec    ebp
  41c2b2:	mov    bl,0xa2
  41c2b4:	add    al,0xea
  41c2b6:	ficom  WORD PTR [esi]
  41c2b8:	int    0x1d
  41c2ba:	ja     0x41c31d
  41c2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2bd:	jmp    0x247c983c
  41c2c2:	repnz dec eax
  41c2c4:	jb     0x41c2f9
  41c2c6:	cdq    
  41c2c7:	shl    BYTE PTR [edi],cl
  41c2c9:	retf   0x44de
  41c2cc:	xchg   ebx,eax
  41c2cd:	inc    esi
  41c2ce:	aaa    
  41c2cf:	sar    DWORD PTR [edi-0x284631f],0xe2
  41c2d6:	aaa    
  41c2d7:	and    al,0x42
  41c2d9:	stos   BYTE PTR es:[edi],al
  41c2da:	adc    DWORD PTR ds:0x183d27c7,ecx
  41c2e0:	loop   0x41c28b
  41c2e2:	aam    0x4
  41c2e4:	dec    ecx
  41c2e5:	jge    0x41c316
  41c2e7:	xlat   BYTE PTR ds:[ebx]
  41c2e8:	cmp    BYTE PTR [esi],ch
  41c2ea:	push   ecx
  41c2eb:	pop    eax
  41c2ec:	mov    edx,0xd11973b0
  41c2f1:	sub    esp,DWORD PTR [esi-0x72]
  41c2f4:	ss (bad) 
  41c2f6:	repnz xchg ebp,eax
  41c2f8:	mov    bl,0xf1
  41c2fa:	mov    edi,DWORD PTR [edi]
  41c2fc:	dec    esp
  41c2fd:	aam    0xe6
  41c2ff:	jae    0x41c344
  41c301:	dec    eax
  41c302:	xchg   esp,eax
  41c303:	sar    ebp,cl
  41c305:	bswap  ecx
  41c307:	mov    eax,0x604bccf0
  41c30c:	xchg   DWORD PTR [esi+0x73],ebx
  41c30f:	xchg   esi,eax
  41c310:	repz sub DWORD PTR [eax],ebp
  41c313:	hlt    
  41c314:	enter  0x772d,0xb5
  41c318:	es popa 
  41c31a:	test   esp,edx
  41c31c:	sbb    DWORD PTR [ecx-0x69b22eda],eax
  41c322:	clc    
  41c323:	cmp    bh,BYTE PTR [eax]
  41c325:	dec    ebp
  41c326:	push   eax
  41c327:	cdq    
  41c328:	hlt    
  41c329:	pop    ecx
  41c32a:	add    al,0xba
  41c32c:	mov    esp,0x26f3f92
  41c331:	xor    DWORD PTR [ebx-0x33],eax
  41c334:	push   ecx
  41c335:	push   es
  41c336:	aas    
  41c337:	dec    edi
  41c338:	push   cs
  41c339:	mov    bl,0x8e
  41c33b:	in     eax,dx
  41c33c:	cs adc ebp,ecx
  41c33f:	sbb    edi,ebp
  41c341:	jbe    0x41c394
  41c343:	(bad)  
  41c344:	xchg   ebx,eax
  41c345:	mov    al,0xd0
  41c347:	ins    BYTE PTR es:[edi],dx
  41c348:	sub    DWORD PTR [ecx+0x1d],0xffffff9f
  41c34c:	push   ebp
  41c34d:	enter  0x5221,0xd
  41c351:	pop    ss
  41c352:	(bad)  
  41c354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c355:	sub    eax,0x7d643314
  41c35a:	pop    ds
  41c35b:	fst    DWORD PTR [edx]
  41c35d:	fisubr WORD PTR [edi+eax*4-0x3af097fb]
  41c364:	mov    eax,ds:0xdc75fee5
  41c369:	mov    ds:0x1b983f58,al
  41c36e:	mov    ebx,0x555493a
  41c373:	and    ch,BYTE PTR [edi]
  41c375:	inc    esp
  41c376:	fcomp  DWORD PTR [eax+0x3a4ed556]
  41c37c:	(bad)  
  41c37d:	(bad)  
  41c37f:	pushw  0xffe8
  41c382:	sar    BYTE PTR [ecx-0x29],0x1f
  41c386:	sbb    eax,0x9ac8bfac
  41c38b:	pop    edi
  41c38c:	dec    esi
  41c38d:	pop    edi
  41c38e:	bound  esp,QWORD PTR [ebp+0x6dfc9795]
  41c394:	out    dx,al
  41c395:	cmp    ecx,DWORD PTR [ebx+0x28bac204]
  41c39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39c:	in     al,dx
  41c39d:	sub    DWORD PTR [edx-0x25],eax
  41c3a0:	or     bh,BYTE PTR [ebp+0x74dc4822]
  41c3a6:	mov    ch,BYTE PTR [ecx+0x190f1b64]
  41c3ac:	out    0x29,al
  41c3ae:	fcom   DWORD PTR [edi+ebp*4+0x48]
  41c3b2:	mov    bl,BYTE PTR [edi-0x72]
  41c3b5:	aam    0x4e
  41c3b7:	out    dx,eax
  41c3b8:	mov    ebp,0x6d9fdd36
  41c3bd:	xor    eax,ecx
  41c3bf:	ja     0x41c370
  41c3c1:	xchg   edx,eax
  41c3c2:	pop    ss
  41c3c3:	lock daa 
  41c3c5:	mov    al,0xa7
  41c3c7:	xor    BYTE PTR [edx+0x51],ah
  41c3ca:	retf   0x6e3d
  41c3cd:	std    
  41c3ce:	and    al,0x8c
  41c3d0:	ins    BYTE PTR es:[edi],dx
  41c3d1:	dec    edx
  41c3d2:	jge    0x41c3c4
  41c3d4:	sub    al,0x9
  41c3d6:	jl     0x41c41a
  41c3d8:	cmp    al,0x6
  41c3da:	sub    ebp,DWORD PTR [ebx-0x3d]
  41c3dd:	fcom   QWORD PTR [esi]
  41c3df:	in     eax,dx
  41c3e0:	(bad)  
  41c3e1:	cld    
  41c3e2:	jl     0x41c39f
  41c3e4:	call   0x739e012c
  41c3e9:	jge    0x41c3e0
  41c3eb:	sub    eax,ebx
  41c3ed:	xor    edi,0xbbbf5581
  41c3f3:	fcomp  QWORD PTR [ebx]
  41c3f5:	loopne 0x41c401
  41c3f7:	xchg   esp,eax
  41c3f8:	jbe    0x41c425
  41c3fa:	jmp    0xbb59:0xfda735f1
  41c401:	and    esi,DWORD PTR [ecx]
  41c403:	jg     0x41c483
  41c405:	and    BYTE PTR [esi],ah
  41c407:	repnz popa 
  41c409:	jmp    0xcd6b042b
  41c40e:	ins    DWORD PTR es:[edi],dx
  41c40f:	jo     0x41c3f2
  41c411:	or     edx,DWORD PTR [eax+0x2c8558d0]
  41c417:	inc    edi
  41c418:	adc    eax,0x4c63e98a
  41c41d:	imul   edi,edx,0xffffffd2
  41c420:	xchg   DWORD PTR [edx+ebp*1-0x20],ebx
  41c424:	cmp    BYTE PTR [esp+esi*8],0x86
  41c428:	cmp    ecx,ecx
  41c42a:	lods   al,BYTE PTR ds:[esi]
  41c42b:	dec    edi
  41c42c:	pop    es
  41c42d:	sbb    eax,DWORD PTR [eax-0x3ad66ddd]
  41c433:	xor    BYTE PTR [eax+0x13],ah
  41c436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c437:	daa    
  41c438:	and    al,0x46
  41c43a:	lods   eax,DWORD PTR ds:[esi]
  41c43b:	inc    ebp
  41c43c:	sub    DWORD PTR [edx+0x5e],0x7a5517a
  41c443:	xchg   esi,eax
  41c444:	jno    0x41c3db
  41c446:	daa    
  41c447:	bound  esi,QWORD PTR [esi+0x3f7f95ac]
  41c44d:	inc    esi
  41c44e:	adc    BYTE PTR [edx+ebp*2-0x3a],al
  41c452:	in     al,dx
  41c453:	loopne 0x41c3eb
  41c455:	xor    cl,al
  41c457:	ds cmc 
  41c459:	mov    eax,0x6f8a2805
  41c45e:	pop    esp
  41c45f:	mul    ch
  41c461:	jmp    0x9236:0x1902a90a
  41c468:	inc    ebp
  41c469:	cmp    BYTE PTR [eax],al
  41c46b:	cmp    dl,BYTE PTR [edi-0x50]
  41c46e:	mov    DWORD PTR [ebx-0x29ecc7a5],esi
  41c474:	mov    eax,0x1fc79578
  41c479:	les    edi,FWORD PTR [eax]
  41c47b:	add    al,BYTE PTR [ebp+0x41a17719]
  41c481:	mov    ch,0x78
  41c483:	ins    DWORD PTR es:[edi],dx
  41c484:	add    al,BYTE PTR [eax]
	...
  41c48e:	add    BYTE PTR [eax],al
  41c490:	add    BYTE PTR [edi+ecx*2+0x53ff531c],dh
  41c497:	(bad)  
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0x81144a32
  41c4a0:	jmp    0x3ac:0x1411d
  41c4a7:	add    BYTE PTR [eax],al
  41c4a9:	mov    DWORD PTR [ecx+0x78],0x1c034b79
  41c4b0:	or     ch,bh
  41c4b2:	pushf  
  41c4b3:	stc    
  41c4b4:	dec    esp
  41c4b5:	sub    BYTE PTR [eax+0x2e],ch
  41c4b8:	and    ecx,0xffffffac
  41c4bb:	out    dx,al
  41c4bc:	push   ebp
  41c4bd:	pop    esp
  41c4be:	mov    ebx,0xc195ba19
  41c4c3:	aaa    
  41c4c4:	or     edi,DWORD PTR [eax+0x0]
  41c4c7:	add    ecx,esi
  41c4c9:	fs dec esi
  41c4cb:	xchg   esi,eax
  41c4cc:	mov    ch,0xa6
  41c4ce:	add    eax,0x70e6129a
  41c4d3:	jp     0x41c510
  41c4d5:	push   es
  41c4d6:	iret   
  41c4d7:	sahf   
  41c4d8:	out    dx,al
  41c4d9:	xchg   ebx,eax
  41c4da:	mov    cl,0x47
  41c4dc:	pop    ss
  41c4dd:	mov    bh,0x3
  41c4df:	pop    ebp
  41c4e0:	xor    eax,ecx
  41c4e2:	not    ebp
  41c4e4:	stos   DWORD PTR es:[edi],eax
  41c4e5:	int3   
  41c4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4e7:	dec    ecx
  41c4e8:	sub    eax,0xd5026356
  41c4ed:	xor    DWORD PTR [ecx],ebx
  41c4ef:	ins    BYTE PTR es:[edi],dx
  41c4f0:	and    eax,0x327e9e16
  41c4f5:	mov    cl,BYTE PTR [eax+0x360709d6]
  41c4fb:	inc    eax
  41c4fc:	loopne 0x41c4ca
  41c4fe:	adc    eax,0xecda35ac
  41c503:	fcom   DWORD PTR [ebx]
  41c505:	xchg   edx,eax
  41c506:	jl     0x41c570
  41c508:	fstp   QWORD PTR [edx-0x24]
  41c50b:	xchg   ah,bh
  41c50d:	dec    ebp
  41c50e:	imul   ebx,DWORD PTR [edx+eiz*2-0x33982516],0xffffffef
  41c516:	jmp    0x16e9c76c
  41c51b:	fst    QWORD PTR es:[esi]
  41c51e:	jne    0x41c537
  41c520:	mov    bh,ah
  41c522:	int3   
  41c523:	xor    edi,edx
  41c525:	popf   
  41c526:	je     0x41c52d
  41c528:	aad    0x82
  41c52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52b:	das    
  41c52c:	cmp    esp,edx
  41c52e:	mov    BYTE PTR [ecx+0x4cfb3327],bl
  41c534:	jl     0x41c50f
  41c536:	stc    
  41c537:	mov    dh,0x25
  41c539:	test   eax,0xd6dbd0a8
  41c53e:	dec    eax
  41c53f:	icebp  
  41c540:	add    DWORD PTR [eax],edi
  41c542:	xchg   ecx,eax
  41c543:	cmc    
  41c544:	inc    esi
  41c545:	sbb    ecx,DWORD PTR es:[ebp+0x52]
  41c549:	ret    
  41c54a:	and    BYTE PTR ds:0x4cc5189e,0x2d
  41c551:	cmp    eax,0xce5bdb48
  41c556:	clc    
  41c557:	sahf   
  41c558:	out    0x60,eax
  41c55a:	dec    eax
  41c55b:	cwde   
  41c55c:	xor    esp,DWORD PTR [ecx-0x27]
  41c55f:	(bad)  [ecx-0x727c28ed]
  41c565:	outs   dx,DWORD PTR ds:[esi]
  41c566:	pop    es
  41c567:	inc    edx
  41c568:	add    BYTE PTR [eax-0x7c6a6c35],bh
  41c56e:	pop    edi
  41c56f:	pop    esp
  41c570:	fsub   st(0),st
  41c572:	xor    esp,DWORD PTR [esi+0x76]
  41c575:	das    
  41c576:	cmp    edx,eax
  41c578:	(bad)  
  41c579:	push   eax
  41c57a:	mov    ecx,0x182c86cb
  41c57f:	jl     0x41c57c
  41c581:	repnz adc esi,edi
  41c584:	xchg   edx,eax
  41c585:	mov    ecx,0xd821cbc6
  41c58a:	push   ecx
  41c58b:	aad    0xcb
  41c58d:	loopne 0x41c5ef
  41c58f:	mov    ebp,ebx
  41c591:	push   edi
  41c592:	push   esp
  41c593:	add    DWORD PTR [eax+0x65df3662],0xb75fc9d2
  41c59d:	inc    edi
  41c59e:	cmp    eax,0x27f5ac5d
  41c5a3:	push   edi
  41c5a4:	mov    esp,DWORD PTR [ecx+0x68]
  41c5a7:	ret    0x8e50
  41c5aa:	xchg   ebp,eax
  41c5ab:	mov    BYTE PTR [ebp+0x69],0xd3
  41c5af:	loop   0x41c56b
  41c5b1:	ret    0x2a23
  41c5b4:	or     edi,ebp
  41c5b6:	retf   
  41c5b7:	rep ins DWORD PTR es:[edi],dx
  41c5b9:	clc    
  41c5ba:	lahf   
  41c5bb:	jp     0x41c541
  41c5bd:	popa   
  41c5be:	(bad)  
  41c5bf:	lock lods al,BYTE PTR ds:[esi]
  41c5c1:	lahf   
  41c5c2:	xchg   ecx,eax
  41c5c3:	xor    dl,BYTE PTR [eax]
  41c5c5:	shl    DWORD PTR [esp+edx*1],cl
  41c5c8:	(bad)  
  41c5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5ca:	clc    
  41c5cb:	sbb    cl,BYTE PTR gs:0x7828aadf
  41c5d2:	and    al,bh
  41c5d4:	(bad)
  41c5d7:	pop    ebp
  41c5d8:	xchg   esp,eax
  41c5d9:	jmp    DWORD PTR [eax]
  41c5db:	cmp    BYTE PTR [eax+esi*2],0x34
  41c5df:	icebp  
  41c5e0:	and    ebx,DWORD PTR [eax-0x1363020d]
  41c5e6:	jmp    0x36733227
  41c5eb:	xchg   esi,eax
  41c5ec:	push   cs
  41c5ed:	mov    edi,0xb2e4012
  41c5f2:	xor    DWORD PTR [ecx-0x68c527ee],ebp
  41c5f8:	adc    BYTE PTR [ebx+0x77],al
  41c5fb:	je     0x41c5ff
  41c5fd:	in     eax,0x57
  41c5ff:	aaa    
  41c600:	scas   eax,DWORD PTR es:[edi]
  41c601:	(bad)  
  41c602:	enter  0x3f6c,0x8f
  41c606:	leave  
  41c607:	or     DWORD PTR [edi-0x56],ecx
  41c60a:	(bad)  
  41c60b:	scas   al,BYTE PTR es:[edi]
  41c60c:	add    dl,BYTE PTR [esi-0x25a4be96]
  41c612:	dec    esp
  41c613:	jecxz  0x41c668
  41c615:	les    ecx,FWORD PTR [edi-0x1ff26323]
  41c61b:	push   ebp
  41c61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c61d:	sahf   
  41c61e:	and    BYTE PTR [ebp+ecx*4-0x2c],ch
  41c622:	xor    ah,BYTE PTR [esi]
  41c624:	and    eax,0x544e6dda
  41c629:	and    al,0xdb
  41c62b:	rcl    BYTE PTR [edx],1
  41c62d:	sbb    DWORD PTR [eax+0x22520894],edi
  41c633:	aam    0x8a
  41c635:	xor    al,0x65
  41c637:	imul   edx,DWORD PTR [esi],0x63535ca2
  41c63d:	bound  edi,QWORD PTR [ebx+0x2b]
  41c640:	cmp    eax,0x67d14a81
  41c645:	mov    esp,0xfc23c83d
  41c64b:	sbb    BYTE PTR [esi+0x3b87cd40],bl
  41c651:	adc    DWORD PTR [ecx],edx
  41c653:	sti    
  41c654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c655:	mov    edi,esp
  41c657:	loopne 0x41c69d
  41c659:	adc    al,0x1d
  41c65b:	rcl    bl,0x7b
  41c65e:	es stos BYTE PTR es:[edi],al
  41c660:	inc    ebx
  41c661:	loope  0x41c605
  41c663:	mov    WORD PTR [edi+0x77],gs
  41c666:	inc    edi
  41c667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c668:	cld    
  41c669:	les    ecx,FWORD PTR [edx]
  41c66b:	adc    ch,BYTE PTR [edx+0x6bb53af1]
  41c671:	inc    ebp
  41c672:	es pop esp
  41c674:	fnstsw WORD PTR [edi]
  41c676:	loope  0x41c60a
  41c678:	mov    ah,0xf1
  41c67a:	sbb    al,0xea
  41c67c:	call   0x6afe:0xa5685a83
  41c683:	inc    eax
  41c684:	jne    0x41c61c
  41c686:	mov    esp,0x3a6f1ebf
  41c68b:	or     al,0x8b
  41c68d:	xor    cl,BYTE PTR [ecx-0x7eee9c54]
  41c693:	sar    edi,cl
  41c695:	pop    esp
  41c696:	mov    bh,0x58
  41c698:	push   ebp
  41c699:	(bad)  
  41c69a:	jmp    0xa78b24ce
  41c69f:	mov    ah,bh
  41c6a1:	sti    
  41c6a2:	and    esp,DWORD PTR [ebx+0x21]
  41c6a5:	cmp    DWORD PTR [ebx+0x5a],eax
  41c6a8:	xor    DWORD PTR [ecx+0x30feaf11],ebp
  41c6ae:	fcom   QWORD PTR [edi-0x7fc662ad]
  41c6b4:	push   edi
  41c6b5:	out    0x24,eax
  41c6b7:	not    eax
  41c6b9:	fwait
  41c6ba:	xchg   ebx,eax
  41c6bb:	arpl   WORD PTR [esp+edx*8],ax
  41c6be:	cli    
  41c6bf:	xchg   ecx,eax
  41c6c0:	pop    esi
  41c6c1:	fstp   DWORD PTR [eax+0x76]
  41c6c4:	outs   dx,DWORD PTR ds:[esi]
  41c6c5:	sbb    edx,ebp
  41c6c7:	push   ebp
  41c6c8:	aaa    
  41c6c9:	in     al,dx
  41c6ca:	cmc    
  41c6cb:	jnp    0x41c67d
  41c6cd:	retf   
  41c6ce:	fadd   QWORD PTR [edx+0x6d]
  41c6d1:	sub    ebx,DWORD PTR [ecx]
  41c6d3:	popa   
  41c6d4:	adc    eax,0x8e40def3
  41c6d9:	outs   dx,BYTE PTR ds:[esi]
  41c6da:	fnstenv [ebx]
  41c6dc:	mov    eax,0x2102638d
  41c6e1:	enter  0xa9ee,0xcf
  41c6e5:	(bad)  
  41c6e6:	shr    BYTE PTR [ecx+0x5a],1
  41c6e9:	scas   al,BYTE PTR es:[edi]
  41c6ea:	mov    ecx,0xced47b29
  41c6ef:	jp     0x41c758
  41c6f1:	inc    esp
  41c6f2:	pusha  
  41c6f3:	(bad)  
  41c6f5:	repz cmp esp,edi
  41c6f8:	aaa    
  41c6f9:	mov    ds:0x1699331e,al
  41c6fe:	ins    DWORD PTR es:[edi],dx
  41c6ff:	pop    ebx
  41c700:	or     dl,bl
  41c702:	(bad)  
  41c704:	scas   al,BYTE PTR es:[edi]
  41c705:	pop    es
  41c706:	jg     0x41c787
  41c708:	call   0x7d6a407d
  41c70d:	sub    al,0x33
  41c70f:	mov    ebp,0x6150d8ff
  41c714:	out    0xbd,al
  41c716:	cwde   
  41c717:	dec    esi
  41c718:	adc    dh,BYTE PTR [ecx-0x79a47b18]
  41c71e:	data16 jp 0x41c736
  41c721:	jge    0x41c739
  41c723:	ja     0x41c6b7
  41c725:	fimul  DWORD PTR [edx]
  41c727:	inc    edi
  41c728:	cmp    eax,0x56e14ba
  41c72d:	dec    edi
  41c72e:	int    0x6a
  41c730:	fnstcw WORD PTR fs:[ebx+0x72d774e]
  41c737:	dec    ebp
  41c738:	dec    eax
  41c739:	cdq    
  41c73a:	ror    BYTE PTR [esi-0x72],cl
  41c73d:	or     cl,BYTE PTR [esi-0x5f]
  41c740:	xchg   esp,eax
  41c741:	cli    
  41c742:	mov    ebx,0xfe9ceb71
  41c747:	mov    edi,0x58031ba3
  41c74c:	push   ecx
  41c74d:	dec    ecx
  41c74e:	call   0x429:0x38f9f845
  41c755:	pop    eax
  41c756:	repz test eax,0x6c519ac7
  41c75c:	stos   DWORD PTR es:[edi],eax
  41c75d:	popf   
  41c75e:	sub    eax,DWORD PTR [ebx-0x5f9af2f9]
  41c764:	dec    edx
  41c765:	mov    cl,0x24
  41c767:	and    al,0xbc
  41c769:	mov    bl,0xcd
  41c76b:	adc    BYTE PTR [edi],al
  41c76d:	jo     0x41c730
  41c76f:	(bad)  
  41c770:	pop    ss
  41c771:	xor    eax,0x2697ae9d
  41c776:	cmp    esp,edi
  41c778:	into   
  41c779:	xor    bl,BYTE PTR [eax+0x4d]
  41c77c:	push   cs
  41c77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c77e:	hlt    
  41c77f:	int    0xf4
  41c781:	je     0x41c7e2
  41c783:	xchg   ecx,eax
  41c784:	mov    dh,0x9b
  41c786:	lock dec ecx
  41c788:	sahf   
  41c789:	fstp   DWORD PTR [ebp+0x1bd18c4c]
  41c78f:	div    BYTE PTR [edx]
  41c791:	outs   dx,DWORD PTR ds:[esi]
  41c792:	cmp    eax,0x69d3f9c7
  41c797:	iret   
  41c798:	cmp    al,0xb0
  41c79a:	into   
  41c79b:	fwait
  41c79c:	sti    
  41c79d:	enter  0xcf74,0xc3
  41c7a1:	rol    DWORD PTR [esi-0x4fe6df64],cl
  41c7a7:	popf   
  41c7a8:	mov    BYTE PTR [ecx+0x3d],ch
  41c7ab:	adc    DWORD PTR [esi],ebp
  41c7ad:	sbb    ebx,eax
  41c7af:	push   ds
  41c7b0:	inc    esp
  41c7b1:	sub    dl,BYTE PTR [edx]
  41c7b3:	inc    esi
  41c7b4:	push   esp
  41c7b5:	enter  0x9231,0xff
  41c7b9:	sbb    bh,BYTE PTR [eax]
  41c7bb:	loopne 0x41c7fb
  41c7bd:	and    al,0xc1
  41c7bf:	pop    ebx
  41c7c0:	daa    
  41c7c1:	stc    
  41c7c2:	mov    ebp,0x57e895b
  41c7c7:	jmp    0x41c791
  41c7c9:	mov    dl,0x5a
  41c7cb:	(bad)  
  41c7cc:	and    eax,0xd4695030
  41c7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d2:	jp     0x41c759
  41c7d4:	test   al,0x6f
  41c7d6:	pop    ebx
  41c7d7:	int    0x67
  41c7d9:	into   
  41c7da:	into   
  41c7db:	cmp    BYTE PTR [eax-0x1d],bl
  41c7de:	ror    BYTE PTR [esi-0x1ad0fe62],0xbc
  41c7e5:	xchg   ecx,eax
  41c7e6:	jbe    0x41c7d7
  41c7e8:	adc    BYTE PTR [esi-0x18e3a2ef],dh
  41c7ee:	inc    eax
  41c7ef:	fstp   TBYTE PTR [eax+ecx*8-0x7d9f5b7d]
  41c7f6:	sub    edx,DWORD PTR [ecx+0x2b]
  41c7f9:	retf   
  41c7fa:	mov    ah,0xd0
  41c7fc:	pop    esp
  41c7fd:	cmp    ch,dl
  41c7ff:	jbe    0x41c847
  41c801:	inc    esp
  41c802:	push   0xe95998c5
  41c807:	or     ebx,DWORD PTR [edx]
  41c809:	dec    ecx
  41c80a:	stc    
  41c80b:	mov    edi,0xb3f42490
  41c810:	jns    0x41c823
  41c812:	cmc    
  41c813:	pop    eax
  41c814:	inc    eax
  41c815:	mov    eax,fs
  41c817:	xchg   edx,eax
  41c818:	push   edx
  41c819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c81a:	sar    DWORD PTR [edi],cl
  41c81c:	adc    ebx,DWORD PTR [ebp-0x67]
  41c81f:	imul   esi,DWORD PTR [ebp+0x5e],0xb50f9678
  41c826:	pop    ebx
  41c827:	pop    eax
  41c828:	call   0x94657e6c
  41c82d:	inc    ecx
  41c82e:	xor    dl,BYTE PTR [edi+ebx*4]
  41c831:	add    dl,cl
  41c833:	xchg   ebx,eax
  41c834:	inc    edx
  41c835:	pop    ecx
  41c836:	into   
  41c837:	push   esp
  41c838:	or     BYTE PTR [ecx-0x49],0xac
  41c83c:	or     al,0xb2
  41c83e:	loopne 0x41c882
  41c840:	mov    DWORD PTR [ebx+0x1f],esp
  41c843:	in     eax,dx
  41c844:	pop    es
  41c845:	dec    edx
  41c846:	cmp    al,0xb6
  41c848:	fdiv   DWORD PTR [ecx-0x5e]
  41c84b:	mov    WORD PTR [eax-0x24],ss
  41c84e:	nop
  41c84f:	(bad)  [edi+0x449483cd]
	...
  41c861:	(bad)  
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     ebp,eax
  41c86e:	dec    esp
  41c86f:	inc    esi
  41c870:	push   eax
  41c871:	leave  
  41c872:	inc    esp
  41c873:	add    DWORD PTR [eax],eax
  41c875:	lods   al,BYTE PTR ds:[esi]
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    dh,bl
  41c87a:	pop    edi
  41c87b:	loopne 0x41c872
  41c87d:	test   eax,0x4c7c3bd2
  41c882:	jne    0x41c8d8
  41c884:	cmp    eax,0x43baccda
  41c889:	jmp    0x41c8c9
  41c88b:	(bad)  
  41c88c:	mov    esp,0x199e3e35
  41c891:	adc    BYTE PTR [ebp-0x48],cl
  41c894:	dec    ebp
  41c895:	mov    ah,0xe8
  41c897:	ficomp WORD PTR [edi-0x10]
  41c89a:	sahf   
  41c89b:	xchg   edi,eax
  41c89c:	push   edi
  41c89d:	and    BYTE PTR [edx],dl
  41c89f:	jbe    0x41c84c
  41c8a1:	gs icebp 
  41c8a3:	xchg   edi,eax
  41c8a4:	jge    0x41c8b0
  41c8a6:	call   0x650e:0xec605323
  41c8ad:	or     BYTE PTR [edi-0x5349af57],bl
  41c8b3:	adc    BYTE PTR [eax+edx*2-0x3e378639],0xb1
  41c8bb:	lea    eax,[edx+0x765fc8bf]
  41c8c1:	mov    cl,0x37
  41c8c3:	aaa    
  41c8c4:	repnz sub bh,ah
  41c8c7:	mov    BYTE PTR [edi-0x4e47d1c2],dl
  41c8cd:	mov    esp,0x94271f2b
  41c8d2:	ficomp DWORD PTR [ebx-0x2a81c7f4]
  41c8d8:	hlt    
  41c8d9:	sub    ah,bl
  41c8db:	enter  0x6480,0x9a
  41c8df:	fild   DWORD PTR [eax]
  41c8e1:	das    
  41c8e2:	outs   dx,BYTE PTR ds:[esi]
  41c8e3:	test   eax,0x4f4e9b14
  41c8e8:	inc    edi
  41c8e9:	mov    esi,0x6238657f
  41c8ee:	fidivr WORD PTR gs:[ebx-0x7f376d16]
  41c8f5:	add    DWORD PTR [edi-0x65],0xc20d8379
  41c8fc:	xchg   dl,dl
  41c8fe:	sub    al,0xab
  41c900:	out    dx,al
  41c901:	ret    
  41c902:	ins    BYTE PTR es:[edi],dx
  41c903:	outs   dx,DWORD PTR ds:[esi]
  41c904:	push   0x78d6369c
  41c909:	test   bh,cl
  41c90b:	mov    DWORD PTR [edx+eax*4-0xc23dd8],eax
  41c912:	idiv   BYTE PTR [esp+eiz*8-0x19]
  41c916:	xchg   ebp,eax
  41c917:	sbb    esp,ebp
  41c919:	fabs   
  41c91b:	push   ebx
  41c91c:	aam    0x43
  41c91e:	icebp  
  41c91f:	cmp    al,0xbb
  41c921:	inc    DWORD PTR [ecx+ebp*1-0x60]
  41c925:	jns    0x41c8d4
  41c927:	sar    BYTE PTR ds:0x99db75f,0x81
  41c92e:	mov    bl,0x4c
  41c930:	mov    ah,0xd8
  41c932:	test   al,0x78
  41c934:	xchg   esp,eax
  41c935:	cmp    ebx,DWORD PTR [ebx+0x7]
  41c938:	nop
  41c939:	or     DWORD PTR [ecx+0x77],0xffffff8b
  41c93d:	jne    0x41c8fe
  41c93f:	outs   dx,DWORD PTR ds:[esi]
  41c940:	sub    DWORD PTR [esi+0x50],esi
  41c943:	cmp    esp,edx
  41c945:	and    ecx,DWORD PTR [ebx]
  41c947:	adc    DWORD PTR [ecx+0x3e1b1c94],ebp
  41c94d:	xor    eax,0x205b94d3
  41c952:	repnz mov ecx,0x5a127b4f
  41c958:	xchg   DWORD PTR [edx-0x2e],ebp
  41c95b:	ja     0x41c9c7
  41c95d:	pusha  
  41c95e:	cld    
  41c95f:	push   ecx
  41c960:	or     ebx,DWORD PTR [eax+0x41]
  41c963:	shr    BYTE PTR [ebx+0x4bd88b11],1
  41c969:	cli    
  41c96a:	bound  ebx,QWORD PTR [ebp-0x438c8283]
  41c970:	mov    eax,ds:0x9b3b2c58
  41c975:	stc    
  41c976:	test   eax,0x5680d7b4
  41c97b:	mov    al,0x2b
  41c97d:	sub    esp,DWORD PTR [eax+0x2b720e80]
  41c983:	ficom  WORD PTR [edi]
  41c985:	out    0x43,al
  41c987:	jbe    0x41c97e
  41c989:	pop    edx
  41c98a:	int    0xf5
  41c98c:	dec    ecx
  41c98d:	mov    ah,0xd3
  41c98f:	inc    ebp
  41c990:	xchg   BYTE PTR [ebx+0x6adfebbd],cl
  41c996:	and    BYTE PTR [edi],bl
  41c998:	mov    bx,0xad54
  41c99c:	sub    dl,BYTE PTR [edx+0x3d]
  41c99f:	aad    0xd9
  41c9a1:	rcl    bh,1
  41c9a3:	fadd   DWORD PTR [ebp-0x1e093453]
  41c9a9:	add    cl,BYTE PTR [esi-0x9]
  41c9ac:	or     DWORD PTR [eax],esi
  41c9ae:	popf   
  41c9af:	push   ss
  41c9b0:	(bad)  
  41c9b1:	sbb    ebx,DWORD PTR [edx+0x2a]
  41c9b4:	adc    BYTE PTR [esp+edi*8-0xc],0x52
  41c9b9:	cdq    
  41c9ba:	mov    bh,0x54
  41c9bc:	seto   BYTE PTR ds:0x5506d343
  41c9c3:	cli    
  41c9c4:	add    eax,0x88feaf5e
  41c9c9:	xchg   ebp,esp
  41c9cb:	mov    al,ds:0x864f45c1
  41c9d0:	es iret 
  41c9d2:	xor    ebx,eax
  41c9d4:	inc    ebp
  41c9d5:	xor    al,0xc0
  41c9d7:	pop    esi
  41c9d8:	jge    0x41c9ba
  41c9da:	in     eax,0xd4
  41c9dc:	retf   
  41c9dd:	add    DWORD PTR [ebp+0x3da52710],0x71233bcc
  41c9e7:	push   cs
  41c9e8:	test   eax,0xc7aa4163
  41c9ed:	test   bl,0x3e
  41c9f0:	shr    DWORD PTR ds:0x6204bc57,0x6
  41c9f7:	ss xchg ebp,eax
  41c9f9:	add    eax,0xc955b144
  41c9fe:	dec    edx
  41c9ff:	out    dx,al
  41ca00:	mov    BYTE PTR [esi+0x20],0xc4
  41ca04:	sti    
  41ca05:	out    0x67,al
  41ca07:	gs mov edi,0xcd8d9b11
  41ca0d:	pop    DWORD PTR gs:0xb835847
  41ca14:	xchg   edi,eax
  41ca15:	cld    
  41ca16:	into   
  41ca17:	jb     0x41ca8a
  41ca19:	xor    eax,0x5dc63814
  41ca1e:	xor    eax,0xbf1529fd
  41ca23:	loopne 0x41c9c5
  41ca25:	sbb    dl,BYTE PTR [edx]
  41ca27:	adc    al,0xcb
  41ca29:	clc    
  41ca2a:	mov    cl,0xd1
  41ca2c:	rcr    DWORD PTR [edi-0x2e],cl
  41ca2f:	sub    dh,BYTE PTR [eax-0x655b6659]
  41ca35:	out    dx,al
  41ca36:	enter  0xca21,0x53
  41ca3a:	lea    eax,[ecx+0x74]
  41ca3d:	push   DWORD PTR [esi]
  41ca3f:	ins    BYTE PTR es:[edi],dx
  41ca40:	hlt    
  41ca41:	retw   0xe4b8
  41ca45:	std    
  41ca46:	in     eax,dx
  41ca47:	pushf  
  41ca48:	ficomp WORD PTR [ebx]
  41ca4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca4b:	sti    
  41ca4c:	xchg   ebx,eax
  41ca4d:	inc    edx
  41ca4e:	mov    ch,0xb2
  41ca50:	je     0x41ca89
  41ca52:	into   
  41ca53:	inc    edi
  41ca54:	mov    eax,0x480701c9
  41ca59:	js     0x41ca5e
  41ca5b:	mov    edi,0x78ff4cb
  41ca60:	lea    ebp,[edx+edi*8+0x60]
  41ca64:	fcomp  DWORD PTR ds:0xa4490de6
  41ca6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6b:	ins    BYTE PTR es:[edi],dx
  41ca6c:	pop    ebx
  41ca6d:	jecxz  0x41caa1
  41ca6f:	shl    al,cl
  41ca71:	icebp  
  41ca72:	pop    fs
  41ca74:	leave  
  41ca75:	sahf   
  41ca76:	mov    eax,0xa6956ad8
  41ca7b:	cmp    eax,0x60f91302
  41ca80:	icebp  
  41ca81:	in     eax,0x1
  41ca83:	push   ebp
  41ca84:	or     BYTE PTR [ebx-0x73],cl
  41ca87:	rol    BYTE PTR [edx-0x76],0xa9
  41ca8b:	and    eax,0xde8e54c9
  41ca90:	or     dl,ah
  41ca92:	inc    edi
  41ca93:	jge    0x41ca20
  41ca95:	sub    al,0xae
  41ca97:	push   0x7bab7d0b
  41ca9c:	leave  
  41ca9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca9e:	out    0x4e,al
  41caa0:	jae    0x41cabf
  41caa2:	xchg   ebx,eax
  41caa3:	mov    esi,0x2b0f2260
  41caa8:	je     0x41cabf
  41caaa:	test   al,0x36
  41caac:	push   ecx
  41caad:	popa   
  41caae:	cmc    
  41caaf:	cwde   
  41cab0:	mov    bl,0x84
  41cab2:	cmp    ebx,ecx
  41cab4:	push   ebp
  41cab5:	fiadd  WORD PTR [ebx-0x44bb07]
  41cabb:	inc    ebx
  41cabc:	repz jb 0x41cac8
  41cabf:	dec    eax
  41cac0:	sbb    ebp,edi
  41cac2:	mov    WORD PTR [edx],?
  41cac4:	popa   
  41cac5:	sub    bl,BYTE PTR [edi]
  41cac7:	add    al,0xfb
  41cac9:	ins    DWORD PTR es:[edi],dx
  41caca:	in     al,0xd5
  41cacc:	add    eax,0x3c06e3e9
  41cad1:	lods   eax,DWORD PTR ds:[esi]
  41cad2:	daa    
  41cad3:	fbstp  TBYTE PTR [eax]
  41cad5:	icebp  
  41cad6:	dec    ecx
  41cad7:	arpl   WORD PTR ds:0x494cfe5f,bx
  41cadd:	cs or  ebp,eax
  41cae0:	pop    ebx
  41cae1:	inc    ebp
  41cae2:	adc    eax,0x13430d2d
  41cae7:	lods   al,BYTE PTR ds:[esi]
  41cae8:	push   ebx
  41cae9:	sbb    al,0xc4
  41caeb:	ret    
  41caec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caed:	fdiv   DWORD PTR [edx-0xb]
  41caf0:	jbe    0x41cac8
  41caf2:	mov    eax,ds:0x348f4e4d
  41caf7:	outs   dx,DWORD PTR ds:[esi]
  41caf8:	sub    esp,DWORD PTR [edi-0x7e2d6b2b]
  41cafe:	cmc    
  41caff:	pop    esi
  41cb00:	jmp    0x4b21:0xe8e5689e
  41cb07:	adc    al,0x0
  41cb09:	sbb    BYTE PTR [eax-0x34],0x59
  41cb0d:	das    
  41cb0e:	cs mov esi,esp
  41cb11:	or     DWORD PTR ds:0xb8b5deba,esi
  41cb17:	cmp    cl,BYTE PTR [ecx-0x30722e88]
  41cb1d:	fdivr  QWORD PTR [esi+0x70d37c84]
  41cb23:	mov    eax,0x93e1ae0c
  41cb28:	push   ebp
  41cb29:	ret    
  41cb2a:	sbb    edi,DWORD PTR [edx-0x70498f25]
  41cb30:	stc    
  41cb31:	ss gs out dx,eax
  41cb34:	sub    DWORD PTR [edi-0x3d],edx
  41cb37:	loope  0x41cb68
  41cb39:	pop    ss
  41cb3a:	(bad)  
  41cb3b:	and    ah,BYTE PTR [ebx-0x69bd50f9]
  41cb41:	mov    dh,BYTE PTR [ebx]
  41cb43:	inc    esi
  41cb44:	jp     0x41cb7b
  41cb46:	loopne 0x41cae1
  41cb48:	int    0xef
  41cb4a:	ror    DWORD PTR [ebx-0x63],cl
  41cb4d:	push   ds
  41cb4e:	xchg   ebp,eax
  41cb4f:	pop    edi
  41cb50:	fld    DWORD PTR [esi]
  41cb52:	cmp    DWORD PTR [ebp-0x12028bd1],esi
  41cb58:	xchg   esp,eax
  41cb59:	and    al,0xf
  41cb5b:	jo     0x41cbc7
  41cb5d:	repz add ch,ah
  41cb60:	sub    eax,0x87c54a76
  41cb65:	push   cs
  41cb66:	jecxz  0x41cbb2
  41cb68:	es xchg edx,eax
  41cb6a:	jmp    0xb9de:0x2339b51c
  41cb71:	mov    cs,WORD PTR ds:0xb415cc32
  41cb77:	cmp    DWORD PTR [ecx-0x1396121b],0x127abe9f
  41cb81:	js     0x41cb9e
  41cb83:	cdq    
  41cb84:	(bad)  
  41cb85:	iret   
  41cb86:	data16 jle 0x41cbf5
  41cb89:	add    BYTE PTR es:[esi-0x3f],cl
  41cb8d:	xor    BYTE PTR [edi+0x5b],cl
  41cb90:	retf   
  41cb91:	jle    0x41cbd5
  41cb93:	ror    DWORD PTR [ebx+edi*2-0x7d],1
  41cb97:	(bad)  
  41cb99:	sub    DWORD PTR [ebp+0x61276b03],ebx
  41cb9f:	ss xchg ebx,eax
  41cba1:	pop    es
  41cba2:	rol    DWORD PTR [eax],1
  41cba4:	cdq    
  41cba5:	sbb    ch,BYTE PTR ds:0x30af079b
  41cbab:	repnz repz push es
  41cbae:	icebp  
  41cbaf:	or     DWORD PTR [eax+ebp*2-0x24],0x208e019e
  41cbb7:	aam    0x72
  41cbb9:	out    dx,al
  41cbba:	sub    ah,BYTE PTR [ecx+0x3e]
  41cbbd:	cmp    dl,0xd2
  41cbc0:	mov    edi,0xe2545647
  41cbc5:	fwait
  41cbc6:	int    0x64
  41cbc8:	jecxz  0x41cc1a
  41cbca:	jae    0x41cb85
  41cbcc:	mov    edi,0xf15106a0
  41cbd1:	into   
  41cbd2:	pusha  
  41cbd3:	je     0x41cc42
  41cbd5:	stos   BYTE PTR es:[edi],al
  41cbd6:	fcom   QWORD PTR [esi]
  41cbd8:	frstor [ebp+0x4a]
  41cbdb:	rcr    DWORD PTR [ebp-0x4f80d237],1
  41cbe1:	cmp    al,0xc0
  41cbe3:	rol    BYTE PTR [edx+0x5e],1
  41cbe6:	adc    al,0xf6
  41cbe8:	lea    ecx,[edi+0x57]
  41cbeb:	xlat   BYTE PTR ds:[ebx]
  41cbec:	aaa    
  41cbed:	dec    ecx
  41cbee:	icebp  
  41cbef:	xchg   bh,cl
  41cbf1:	inc    ebx
  41cbf2:	mov    ds:0xabb7d0a5,eax
  41cbf7:	out    0x56,al
  41cbf9:	adc    ebx,DWORD PTR [edi-0x14]
  41cbfc:	xchg   ebp,eax
  41cbfd:	fld    QWORD PTR [eax]
  41cbff:	std    
  41cc00:	std    
  41cc01:	pushf  
  41cc02:	cdq    
  41cc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc04:	call   0xcb71:0xabab1f6c
  41cc0b:	sbb    DWORD PTR ds:0x3b9ee19d,0xfffffff5
  41cc12:	je     0x41cc8d
  41cc14:	cmp    BYTE PTR [ebx],ch
  41cc16:	cmp    al,0xd3
  41cc18:	(bad)  
  41cc19:	cmp    esp,esp
  41cc1b:	add    bl,al
  41cc1d:	pop    eax
  41cc1e:	cdq    
  41cc1f:	pop    esp
  41cc20:	push   cs
  41cc21:	jp     0x41cc58
  41cc23:	pusha  
  41cc24:	add    DWORD PTR [eax],0x0
	...
  41cc2f:	add    BYTE PTR [eax],al
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0x647a8df4,ecx
  41cc41:	jne    0x41cc8b
  41cc43:	add    DWORD PTR [eax],eax
  41cc45:	lods   al,BYTE PTR ds:[esi]
  41cc46:	add    eax,DWORD PTR [eax]
  41cc48:	add    BYTE PTR [edx-0x647917d1],bh
  41cc4e:	into   
  41cc4f:	pop    eax
  41cc50:	cli    
  41cc51:	lahf   
  41cc52:	icebp  
  41cc53:	mov    ds:0xfcb37346,eax
  41cc58:	xor    ebx,ebp
  41cc5a:	ffreep st(4)
  41cc5c:	jnp    0x41cc20
  41cc5e:	test   BYTE PTR [ebp-0x1f],0x84
  41cc62:	frstor [ebx-0xb]
  41cc65:	std    
  41cc66:	ror    BYTE PTR [esi+ebp*8-0x3f],1
  41cc6a:	cmp    dl,BYTE PTR [esi+ebp*2-0x6309c21]
  41cc71:	cmc    
  41cc72:	and    BYTE PTR [ecx+ebx*2+0x38a20b9b],0x8
  41cc7a:	jmp    0x41ccce
  41cc7c:	push   edx
  41cc7d:	mov    BYTE PTR [edi+0x17],dl
  41cc80:	xchg   edi,eax
  41cc81:	pop    ds
  41cc82:	cmp    DWORD PTR ds:0xd484ba3e,0xa2b9c037
  41cc8c:	inc    ebx
  41cc8d:	mov    ecx,0xef1cadf8
  41cc92:	cld    
  41cc93:	push   0x8db9c250
  41cc98:	cmp    BYTE PTR [bp+0x258d],ch
  41cc9d:	mov    ds:0xb514e549,eax
  41cca2:	in     eax,dx
  41cca3:	dec    esp
  41cca4:	sub    al,0xb9
  41cca6:	mov    eax,ds:0xae11ac8c
  41ccab:	mov    bl,0xe
  41ccad:	aam    0x52
  41ccaf:	test   BYTE PTR [eax-0x12e93239],al
  41ccb5:	adc    eax,0xde035265
  41ccba:	inc    esi
  41ccbb:	sub    ecx,DWORD PTR [ebp-0x59]
  41ccbe:	add    DWORD PTR [esi-0x4f],0x5946c588
  41ccc5:	sub    edx,DWORD PTR [ebx+ebx*4-0x32a01662]
  41cccc:	nop
  41cccd:	test   BYTE PTR [eax+0x59],ch
  41ccd0:	ins    DWORD PTR es:[edi],dx
  41ccd1:	jne    0x41cd46
  41ccd3:	aaa    
  41ccd4:	sbb    BYTE PTR [ebx+0x5cd37ead],cl
  41ccda:	add    dl,BYTE PTR [edi-0x3f6e0e6a]
  41cce0:	xor    BYTE PTR [esi-0x38fac042],al
  41cce6:	scas   al,BYTE PTR es:[edi]
  41cce7:	and    eax,DWORD PTR [eax+0x5a]
  41ccea:	mov    BYTE PTR ss:[ebx],al
  41cced:	iret   
  41ccee:	rcr    eax,0xd6
  41ccf1:	rdtsc  
  41ccf3:	outs   dx,BYTE PTR ds:[esi]
  41ccf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccf5:	test   eax,edi
  41ccf7:	dec    edi
  41ccf8:	push   esp
  41ccf9:	sar    BYTE PTR [ebp+0x5e],1
  41ccfc:	sub    edx,DWORD PTR [ebx+0xf]
  41ccff:	cld    
  41cd00:	shl    BYTE PTR [eax-0x1e9427bb],0x2f
  41cd07:	jbe    0x41cd6d
  41cd09:	lahf   
  41cd0a:	fstp   DWORD PTR [eax-0x69501aa]
  41cd10:	xchg   edi,eax
  41cd11:	add    BYTE PTR [edx-0x2d],bl
  41cd14:	repnz lods al,BYTE PTR ds:[esi]
  41cd16:	add    BYTE PTR [edi+edi*8],0x8c
  41cd1a:	int    0xf1
  41cd1c:	sti    
  41cd1d:	pop    eax
  41cd1e:	dec    esi
  41cd1f:	pop    bp
  41cd21:	mov    ebx,0x5fbc20b9
  41cd26:	xor    edi,ebx
  41cd28:	pusha  
  41cd29:	dec    ecx
  41cd2a:	sbb    DWORD PTR [edx-0x4990abec],ebp
  41cd30:	xchg   ebp,ebx
  41cd32:	shl    BYTE PTR [ebp*1-0x3b556672],1
  41cd39:	xchg   DWORD PTR ds:0x494e16f3,esp
  41cd3f:	int3   
  41cd40:	sub    eax,ebp
  41cd42:	mov    bl,0x70
  41cd44:	leave  
  41cd45:	pop    eax
  41cd46:	and    ebx,DWORD PTR [esi+0xc7ecc6f]
  41cd4c:	jnp    0x41cd77
  41cd4e:	fs pop eax
  41cd50:	jecxz  0x41cd12
  41cd52:	jne    0x41cdc3
  41cd54:	mov    esp,DWORD PTR [eax+0x60]
  41cd57:	jp     0x41cd63
  41cd59:	scas   eax,DWORD PTR es:[edi]
  41cd5a:	pushf  
  41cd5b:	fwait
  41cd5c:	xchg   ecx,eax
  41cd5d:	mov    ds:0x9f4dabc5,al
  41cd62:	into   
  41cd63:	mov    DWORD PTR [edx],eax
  41cd65:	jge    0x41cd70
  41cd67:	mov    ds:0x88c9242f,eax
  41cd6c:	sub    dl,dl
  41cd6e:	out    dx,al
  41cd6f:	add    ah,BYTE PTR cs:[edi]
  41cd72:	mov    bh,0x64
  41cd74:	add    dh,bl
  41cd76:	adc    al,0x65
  41cd78:	ins    DWORD PTR es:[edi],dx
  41cd79:	fs or  eax,0xfd0251cb
  41cd7f:	push   edi
  41cd80:	push   ecx
  41cd81:	mov    ecx,0x647db37f
  41cd86:	or     eax,0x78c43e54
  41cd8b:	sub    esi,edx
  41cd8d:	sbb    bh,al
  41cd8f:	std    
  41cd90:	xor    BYTE PTR [ebp-0x23a4357d],0xe
  41cd97:	jo     0x41cdad
  41cd99:	xor    eax,0x247ade53
  41cd9e:	(bad)
  41cda1:	inc    edx
  41cda2:	xchg   edx,eax
  41cda3:	add    BYTE PTR [ecx+ebx*4-0x39578775],ch
  41cdaa:	repz jmp 0x41cd2f
  41cdad:	cmp    DWORD PTR [eax-0x46],0xe685474b
  41cdb4:	push   cs
  41cdb5:	xor    eax,0xe40b9c7e
  41cdba:	cdq    
  41cdbb:	xchg   edx,eax
  41cdbc:	jg     0x41cdf2
  41cdbe:	mov    dl,0x1c
  41cdc0:	add    esp,DWORD PTR [ebp+ebp*8+0x42e2ea86]
  41cdc7:	fs in  eax,dx
  41cdc9:	mov    bl,0xc1
  41cdcb:	mov    edx,0x116cd708
  41cdd0:	xchg   ebp,eax
  41cdd1:	add    BYTE PTR [ecx-0x31],al
  41cdd4:	add    ch,cl
  41cdd6:	imul   esp,DWORD PTR [edx-0x8],0x72318d7e
  41cddd:	les    ecx,FWORD PTR [esi-0x6e]
  41cde0:	mov    ds:0xef1e7dd7,al
  41cde5:	push   ss
  41cde6:	adc    BYTE PTR [ecx],bh
  41cde8:	mov    edx,0x81c76b8a
  41cded:	lock jmp 0x6adb178d
  41cdf3:	rol    DWORD PTR [ebp-0x5b],0x20
  41cdf7:	xchg   esp,eax
  41cdf8:	sbb    BYTE PTR ds:0x91f3689e,dh
  41cdfe:	jecxz  0x41cd94
  41ce00:	loop   0x41ce06
  41ce02:	add    al,0xf2
  41ce04:	inc    ebp
  41ce05:	or     al,0xb2
  41ce07:	cdq    
  41ce08:	pop    ebx
  41ce09:	inc    dx
  41ce0b:	and    al,0xb7
  41ce0d:	mov    esp,DWORD PTR [eax-0x63283278]
  41ce13:	lahf   
  41ce14:	das    
  41ce15:	cmc    
  41ce16:	adc    eax,0x32488733
  41ce1b:	fistp  WORD PTR [edi+eax*4+0x665397b8]
  41ce22:	pop    edi
  41ce23:	dec    esi
  41ce24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce25:	fdiv   QWORD PTR [ebx]
  41ce27:	and    al,0xc2
  41ce29:	lods   eax,DWORD PTR ds:[esi]
  41ce2a:	mov    ah,0x1f
  41ce2c:	add    al,0x15
  41ce2e:	cdq    
  41ce2f:	sub    esp,DWORD PTR [ebp-0x46fcfd28]
  41ce35:	jns    0x41ce83
  41ce37:	div    BYTE PTR [ebp+0x307e23b2]
  41ce3d:	xchg   BYTE PTR [ecx+edx*1],ah
  41ce40:	xchg   esi,eax
  41ce41:	xor    DWORD PTR fs:[edx+eax*2+0x47a20692],eax
  41ce49:	cmp    DWORD PTR [edi-0x7e],esi
  41ce4c:	xchg   BYTE PTR [edx-0x28319a6],cl
  41ce52:	mov    bl,0xd
  41ce54:	in     eax,dx
  41ce55:	aas    
  41ce56:	cs gs pop edi
  41ce59:	div    DWORD PTR [esi]
  41ce5b:	cmp    BYTE PTR [eax],ch
  41ce5d:	inc    esp
  41ce5e:	xchg   esp,eax
  41ce5f:	pop    esi
  41ce60:	cdq    
  41ce61:	jmp    0x70e6:0x952c9010
  41ce68:	scas   eax,DWORD PTR es:[edi]
  41ce69:	jge    0x41cdff
  41ce6b:	pop    ecx
  41ce6c:	scas   al,BYTE PTR es:[edi]
  41ce6d:	(bad)  
  41ce6e:	sub    BYTE PTR [ebx],al
  41ce70:	(bad)  
  41ce71:	fcmovnbe st,st(6)
  41ce73:	xchg   ebp,eax
  41ce74:	jnp    0x41cdf9
  41ce76:	bound  edx,QWORD PTR ds:0x7a84ec2
  41ce7c:	outs   dx,DWORD PTR ds:[esi]
  41ce7d:	dec    edx
  41ce7e:	sub    ebp,DWORD PTR [esi]
  41ce80:	add    al,BYTE PTR [edx-0x4a3e72da]
  41ce86:	push   cs
  41ce87:	jmp    0xf06c6724
  41ce8c:	push   0x9abbf375
  41ce91:	mov    dl,0xf7
  41ce93:	repz push esp
  41ce95:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce97:	mov    cl,BYTE PTR [eax+0x4d]
  41ce9a:	loope  0x41cee0
  41ce9c:	mov    ebx,0xba3a9b65
  41cea1:	test   DWORD PTR [esi],edi
  41cea3:	test   eax,0x6ddf7d2c
  41cea8:	push   esp
  41cea9:	out    0xfb,al
  41ceab:	sub    DWORD PTR [edi+0x5dc10058],ebx
  41ceb1:	and    ebp,edi
  41ceb3:	pusha  
  41ceb4:	inc    ebx
  41ceb5:	mov    WORD PTR [ebp-0x9ce941c],ds
  41cebb:	push   ebp
  41cebc:	imul   di,ax,0xdc81
  41cec1:	ins    BYTE PTR es:[edi],dx
  41cec2:	xchg   esi,eax
  41cec3:	out    0xc2,al
  41cec5:	sub    BYTE PTR [ebp-0x3a],dh
  41cec8:	cmp    eax,0xdeb35008
  41cecd:	cmp    eax,ecx
  41cecf:	ins    BYTE PTR es:[edi],dx
  41ced0:	les    ebp,FWORD PTR [ebx]
  41ced2:	jle    0x41ceda
  41ced4:	push   ss
  41ced5:	nop
  41ced6:	gs scas al,BYTE PTR es:[edi]
  41ced8:	sbb    DWORD PTR [ebp-0x79],0xffffffee
  41cedc:	mov    edi,0x972d6bc8
  41cee1:	gs dec ebp
  41cee3:	rol    BYTE PTR [esp+ebp*4],cl
  41cee6:	mov    al,ds:0x13bb62a3
  41ceeb:	adc    cl,BYTE PTR [esi]
  41ceed:	pop    ds
  41ceee:	lock sub esi,ebx
  41cef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cef2:	jge    0x41ce87
  41cef4:	pushf  
  41cef5:	outs   dx,DWORD PTR ds:[esi]
  41cef6:	mov    edx,0x27df3460
  41cefb:	xchg   edx,eax
  41cefc:	lods   eax,DWORD PTR ds:[esi]
  41cefd:	add    al,0xd5
  41ceff:	enter  0x8c4,0xb3
  41cf03:	fist   DWORD PTR [edx-0x7d]
  41cf06:	xor    eax,0xee9d66d1
  41cf0b:	fs ret 
  41cf0d:	dec    esp
  41cf0e:	jne    0x41cf7e
  41cf10:	jl     0x41cef3
  41cf12:	mov    edi,ebp
  41cf14:	js     0x41cedb
  41cf16:	enter  0x1b86,0xd1
  41cf1a:	lahf   
  41cf1b:	clc    
  41cf1c:	(bad)  
  41cf1d:	or     eax,0x560218d8
  41cf22:	div    DWORD PTR [esi]
  41cf24:	xchg   ecx,eax
  41cf25:	mov    ch,0x7f
  41cf27:	shl    BYTE PTR [ebx+0x5],0x99
  41cf2b:	retf   0xcfab
  41cf2e:	push   edi
  41cf2f:	shl    DWORD PTR [esi+0x54bad021],1
  41cf35:	sti    
  41cf36:	sbb    edi,esi
  41cf38:	and    dh,dl
  41cf3a:	dec    eax
  41cf3b:	jns    0x41cf8b
  41cf3d:	in     al,0x50
  41cf3f:	pop    eax
  41cf40:	bound  esi,QWORD PTR [ebp-0x5]
  41cf43:	inc    eax
  41cf44:	mov    cl,BYTE PTR [eax+0x2a06dc0f]
  41cf4a:	fsubr  QWORD PTR [ecx-0x63e8912b]
  41cf50:	hlt    
  41cf51:	pop    ds
  41cf52:	out    0x3e,al
  41cf54:	pushf  
  41cf55:	aaa    
  41cf56:	mov    bh,0xe0
  41cf58:	inc    eax
  41cf59:	push   0x7f
  41cf5b:	das    
  41cf5c:	ret    
  41cf5d:	dec    ecx
  41cf5e:	cld    
  41cf5f:	cmp    eax,0x8eae1a14
  41cf64:	and    DWORD PTR [edx+0x39],ebp
  41cf67:	cmp    edi,DWORD PTR [ecx]
  41cf69:	sar    DWORD PTR [ebx+0x2b],1
  41cf6c:	mov    ch,0xce
  41cf6e:	xchg   BYTE PTR [ebx-0x28],dh
  41cf71:	xor    DWORD PTR [esi-0x4e007cca],edx
  41cf77:	popf   
  41cf78:	jge    0x41cf58
  41cf7a:	in     al,dx
  41cf7b:	push   esp
  41cf7c:	lea    esp,[ebp-0x7]
  41cf7f:	cmp    edx,edi
  41cf81:	lock fidiv WORD PTR [ecx-0x41]
  41cf85:	(bad)  
  41cf86:	jmp    0x41cf7e
  41cf88:	icebp  
  41cf89:	call   0xc059:0xc593b7f2
  41cf90:	and    ebx,DWORD PTR [esi-0x7a]
  41cf93:	call   0x811f070
  41cf98:	out    dx,al
  41cf99:	and    DWORD PTR [esi-0x1615f8bc],esp
  41cf9f:	push   cs
  41cfa0:	aad    0xdb
  41cfa2:	add    edi,eax
  41cfa4:	xlat   BYTE PTR ds:[ebx]
  41cfa5:	dec    esp
  41cfa6:	rol    BYTE PTR [ecx+0x1e],0x52
  41cfaa:	dec    ecx
  41cfab:	rcr    DWORD PTR [ebp+0x6a],0xe2
  41cfaf:	stos   BYTE PTR es:[edi],al
  41cfb0:	adc    edi,0x7ea83c11
  41cfb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfb7:	imul   esp,DWORD PTR [ebp+0x71],0x9f81b467
  41cfbe:	or     al,BYTE PTR [ebx+0x2ab5dbc9]
  41cfc4:	out    dx,al
  41cfc5:	push   esp
  41cfc6:	stos   DWORD PTR es:[edi],eax
  41cfc7:	cmp    DWORD PTR [esi+0x64],edx
  41cfca:	fcomp  DWORD PTR [eax-0xc893383]
  41cfd0:	sar    DWORD PTR [ebp+0x3cf31758],1
  41cfd6:	jo     0x41cfab
  41cfd8:	test   al,0xed
  41cfda:	mov    dh,0x78
  41cfdc:	icebp  
  41cfdd:	cli    
  41cfde:	and    eax,ecx
  41cfe0:	add    BYTE PTR [edi+0x5e],ch
  41cfe3:	mov    ebx,0x75bc5535
  41cfe8:	cwde   
  41cfe9:	and    al,0xa4
  41cfeb:	and    eax,0x23aa1a57
  41cff0:	sbb    BYTE PTR [esi+eiz*2],dh
  41cff3:	enter  0xa3,0x0
	...
  41cfff:	add    BYTE PTR [eax],al
  41d001:	xchg   edx,eax
  41d002:	inc    esp
  41d003:	mov    al,BYTE PTR [edi+0x559fcfde]
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	loope  0x41d006
  41d00f:	sbb    bl,BYTE PTR ds:0x14c21
  41d015:	lods   al,BYTE PTR ds:[esi]
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    dl,cl
  41d01a:	adc    eax,0xb2f61689
  41d01f:	test   BYTE PTR [ebx+edi*8],al
  41d022:	js     0x41cffe
  41d024:	inc    esp
  41d025:	daa    
  41d026:	je     0x41d019
  41d028:	push   es
  41d029:	(bad)
  41d02c:	push   edx
  41d02d:	mov    WORD PTR [esi],gs
  41d02f:	inc    esp
  41d030:	or     bl,dl
  41d032:	fcmovb st,st(4)
  41d034:	cmp    DWORD PTR [edi-0x6a],0xee0524f7
  41d03b:	push   es
  41d03c:	inc    edx
  41d03d:	test   DWORD PTR [ecx-0x56],0xe5aaac3a
  41d044:	sti    
  41d045:	or     ebp,DWORD PTR [edi+0x73]
  41d048:	adc    cl,BYTE PTR [edx]
  41d04a:	cdq    
  41d04b:	lahf   
  41d04c:	cmp    ch,BYTE PTR [eax-0x3edd9030]
  41d052:	mov    cl,BYTE PTR [edx]
  41d054:	sbb    DWORD PTR [ecx],edx
  41d056:	das    
  41d057:	mov    ch,0x5f
  41d059:	jmp    0xb945:0x2d2bcceb
  41d060:	mov    DWORD PTR [ecx+0x7a],ecx
  41d063:	and    ecx,ebp
  41d065:	fstp   DWORD PTR [edi]
  41d067:	and    bh,dh
  41d069:	push   edx
  41d06a:	lea    esp,ds:0xb8ee64b
  41d070:	xlat   BYTE PTR ds:[ebx]
  41d071:	shl    edx,cl
  41d073:	sbb    al,dh
  41d075:	lods   al,BYTE PTR ds:[esi]
  41d076:	mov    edx,0xd2259225
  41d07b:	cmc    
  41d07c:	cmp    ah,ch
  41d07e:	inc    esp
  41d07f:	jo     0x41d009
  41d081:	and    al,0x75
  41d083:	dec    esp
  41d084:	nop
  41d085:	repnz push ds
  41d087:	pop    esi
  41d088:	xor    ah,cl
  41d08a:	scas   al,BYTE PTR es:[edi]
  41d08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d08c:	ss inc ecx
  41d08f:	loop   0x41d045
  41d091:	aas    
  41d092:	cmp    eax,0x298432dd
  41d097:	mov    esp,0xcb392db4
  41d09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d09e:	aas    
  41d09f:	nop
  41d0a0:	push   ss
  41d0a1:	adc    al,0xea
  41d0a3:	sbb    eax,0x2c2c0681
  41d0a8:	jge    0x41d122
  41d0aa:	mov    ebp,0x415e6a19
  41d0af:	les    ebx,FWORD PTR es:[ecx+0x38]
  41d0b3:	js     0x41d11e
  41d0b5:	mov    ebx,0xda4cbc49
  41d0ba:	dec    esp
  41d0bb:	mov    bh,0x53
  41d0bd:	hlt    
  41d0be:	sti    
  41d0bf:	jbe    0x41d102
  41d0c1:	pop    ebx
  41d0c2:	gs jmp 0x41d04f
  41d0c5:	je     0x41d0ad
  41d0c7:	xchg   DWORD PTR [ebp-0x145bff0f],edi
  41d0cd:	adc    al,0x49
  41d0cf:	aaa    
  41d0d0:	sti    
  41d0d1:	das    
  41d0d2:	ret    
  41d0d3:	and    BYTE PTR gs:[edi+ecx*8-0x3],bh
  41d0d8:	jns    0x41d0f7
  41d0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0db:	and    eax,0xcdc708df
  41d0e0:	repnz cmc 
  41d0e2:	outs   dx,DWORD PTR ds:[esi]
  41d0e3:	int    0xe2
  41d0e5:	rcl    BYTE PTR [edx-0x4275d798],0xf5
  41d0ec:	loope  0x41d158
  41d0ee:	adc    eax,0xae1323c0
  41d0f3:	aam    0xc4
  41d0f5:	mov    bl,0x7
  41d0f7:	out    0x53,al
  41d0f9:	mov    ah,0xe4
  41d0fb:	xchg   BYTE PTR [edi-0x7c],al
  41d0fe:	xor    eax,0xdcdca2a4
  41d103:	popa   
  41d104:	lahf   
  41d105:	loopne 0x41d08d
  41d107:	test   al,0x81
  41d109:	popf   
  41d10a:	sbb    eax,0x19be4a09
  41d10f:	add    DWORD PTR [edi],edx
  41d111:	xchg   ebx,eax
  41d112:	lock push cs
  41d114:	xchg   BYTE PTR [edx+ebx*1-0x64],al
  41d118:	push   ecx
  41d119:	adc    esi,DWORD PTR [ebx]
  41d11b:	fcomip st,st(4)
  41d11d:	dec    esp
  41d11e:	jg     0x41d101
  41d120:	adc    esp,DWORD PTR [ecx+0x1e]
  41d123:	or     al,0xbf
  41d125:	xchg   ecx,eax
  41d126:	int3   
  41d127:	(bad)  
  41d128:	push   ss
  41d129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12a:	aas    
  41d12b:	mov    esi,0xeae876c1
  41d130:	xchg   edx,eax
  41d131:	jne    0x41d171
  41d133:	ficomp WORD PTR [eax]
  41d135:	mov    bh,0x80
  41d137:	call   0x929c7835
  41d13c:	mov    bh,0x7c
  41d13e:	cli    
  41d13f:	std    
  41d140:	mov    eax,DWORD PTR [ebx+0xcdffaf7]
  41d146:	stos   BYTE PTR es:[edi],al
  41d147:	mov    ah,0xb9
  41d149:	call   0xb6b1:0xa4924605
  41d150:	(bad)  
  41d152:	jmp    0x41d141
  41d154:	in     eax,dx
  41d155:	push   edi
  41d156:	jae    0x41d1a2
  41d158:	mov    eax,0xf33e3fd4
  41d15d:	inc    ebp
  41d15e:	mov    edx,?
  41d160:	ss mov edx,0xc56ebe69
  41d166:	fcomp  QWORD PTR [ecx+0x6d]
  41d169:	outs   dx,BYTE PTR ds:[esi]
  41d16a:	xchg   esp,eax
  41d16b:	xor    bl,BYTE PTR [edi]
  41d16d:	adc    eax,0xcbae255e
  41d172:	popf   
  41d173:	mov    al,BYTE PTR [edi+0x2f]
  41d176:	test   al,0x94
  41d178:	aad    0x62
  41d17a:	mov    BYTE PTR [eax],0x74
  41d17d:	jge    0x41d19f
  41d17f:	test   al,0xe
  41d181:	inc    edi
  41d182:	xchg   al,dh
  41d184:	popf   
  41d185:	lds    esp,FWORD PTR [ebx-0x6d]
  41d188:	setno  BYTE PTR [edi]
  41d18b:	mov    dl,0x91
  41d18d:	mov    dh,0x7b
  41d18f:	loope  0x41d208
  41d191:	or     DWORD PTR [ebx-0x62],0xbc74bfce
  41d198:	ja     0x41d20a
  41d19a:	push   ecx
  41d19b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d19c:	data16 and al,0x69
  41d19f:	in     al,dx
  41d1a0:	loopne 0x41d156
  41d1a2:	imul   edi,DWORD PTR [eax+0x36],0xece4f0be
  41d1a9:	mov    al,ds:0x628b2c43
  41d1ae:	rcr    BYTE PTR [edx-0xe175cef],cl
  41d1b4:	mov    al,0x5b
  41d1b6:	adc    al,0x6f
  41d1b8:	in     al,dx
  41d1b9:	dec    ecx
  41d1ba:	cmp    al,0xda
  41d1bc:	xchg   edx,eax
  41d1bd:	adc    dh,dh
  41d1bf:	push   0x35
  41d1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1c2:	and    al,0x86
  41d1c4:	fdivr  DWORD PTR [eax-0x19]
  41d1c7:	sub    edx,DWORD PTR [ecx]
  41d1c9:	mov    edi,0x8bfa62d3
  41d1ce:	xor    BYTE PTR [eax-0x29],ah
  41d1d1:	stc    
  41d1d2:	aas    
  41d1d3:	fwait
  41d1d4:	adc    DWORD PTR [esi],esp
  41d1d6:	inc    ebp
  41d1d7:	mov    eax,ds:0x18bc7315
  41d1dc:	or     al,0xbc
  41d1de:	addr16 loop 0x41d23e
  41d1e1:	sub    bh,BYTE PTR ds:0x532e507c
  41d1e7:	stos   DWORD PTR es:[edi],eax
  41d1e8:	and    BYTE PTR [esi+ebp*8-0x3],0xeb
  41d1ed:	or     al,BYTE PTR [ebx-0x4d59a4f1]
  41d1f3:	dec    ebx
  41d1f4:	jne    0x41d1cb
  41d1f6:	je     0x41d17e
  41d1f8:	mov    cl,0xab
  41d1fa:	pop    esp
  41d1fb:	xchg   edi,eax
  41d1fc:	pop    eax
  41d1fd:	jo     0x41d1b0
  41d1ff:	mov    edx,0x50a84486
  41d204:	ds inc esp
  41d206:	mov    cl,0x2a
  41d208:	push   edx
  41d209:	sbb    ebp,esi
  41d20b:	jne    0x41d1de
  41d20d:	call   0x4470262
  41d212:	sti    
  41d213:	xchg   ecx,eax
  41d214:	add    ch,al
  41d216:	arpl   WORD PTR ds:0x34c6,bx
  41d21b:	inc    ecx
  41d21c:	cwde   
  41d21d:	bnd js 0x41d203
  41d220:	dec    ebp
  41d221:	jno    0x41d1a8
  41d223:	sub    ebp,ebx
  41d225:	bound  ebp,QWORD PTR [ecx-0x71a9df60]
  41d22b:	leave  
  41d22c:	adc    dh,dl
  41d22e:	adc    bl,dl
  41d230:	push   ss
  41d231:	mov    DWORD PTR [esi+0x5ec0470b],edi
  41d237:	push   eax
  41d238:	cmp    DWORD PTR [ecx-0x64830d9c],esp
  41d23e:	adc    esi,DWORD PTR ds:0x4391196a
  41d244:	and    eax,0x989905de
  41d249:	push   ds
  41d24a:	pusha  
  41d24b:	push   ebx
  41d24c:	mov    dl,0xad
  41d24e:	enter  0xb1e,0x2b
  41d252:	(bad)  
  41d254:	push   0x2a
  41d256:	add    dh,BYTE PTR [esi]
  41d258:	div    DWORD PTR [esi+0x6]
  41d25b:	retf   0xebe0
  41d25e:	test   DWORD PTR [eax-0x7d],ebx
  41d261:	sti    
  41d262:	jp     0x41d263
  41d264:	push   ebp
  41d265:	jge    0x41d2ae
  41d267:	(bad)  
  41d268:	sub    eax,esi
  41d26a:	pop    ecx
  41d26b:	push   ds
  41d26c:	xor    al,BYTE PTR [eax+0x1f]
  41d26f:	or     bh,BYTE PTR gs:[ebp+0x1d8e5a67]
  41d276:	dec    eax
  41d277:	rol    dl,0xf5
  41d27a:	scas   eax,DWORD PTR es:[edi]
  41d27b:	or     BYTE PTR [eax+esi*8-0x72],bl
  41d27f:	or     DWORD PTR [edi+edi*2],esp
  41d282:	jle    0x41d2e5
  41d284:	or     ch,al
  41d286:	mov    edx,0x9f976065
  41d28b:	xor    BYTE PTR [ecx+0x644028e5],0x58
  41d292:	inc    BYTE PTR [ecx]
  41d294:	test   al,0x7e
  41d296:	clc    
  41d297:	out    0xed,eax
  41d299:	mov    bh,0x98
  41d29b:	inc    ebx
  41d29c:	sbb    edi,0xffffff80
  41d29f:	rcl    edi,0x79
  41d2a2:	sbb    eax,0xdefc5672
  41d2a7:	aaa    
  41d2a8:	mov    dh,0xa3
  41d2aa:	inc    ebx
  41d2ab:	inc    ebx
  41d2ac:	cmp    esi,edi
  41d2ae:	in     eax,dx
  41d2af:	imul   ecx,ebp,0xdc50c1eb
  41d2b5:	aaa    
  41d2b6:	(bad)  
  41d2b8:	mov    ecx,0x14ffdd67
  41d2bd:	daa    
  41d2be:	sub    esp,edi
  41d2c0:	push   ecx
  41d2c1:	ins    BYTE PTR es:[edi],dx
  41d2c2:	jno    0x41d33b
  41d2c4:	mov    edi,ecx
  41d2c6:	in     al,dx
  41d2c7:	push   edx
  41d2c8:	and    eax,eax
  41d2ca:	ss (bad) 
  41d2cc:	cwde   
  41d2cd:	jns    0x41d276
  41d2cf:	bts    DWORD PTR [ebx-0x53],0xa
  41d2d4:	stc    
  41d2d5:	push   cs
  41d2d6:	ja     0x41d31e
  41d2d8:	pop    eax
  41d2d9:	dec    eax
  41d2da:	and    DWORD PTR cs:[eax+0x2c],edx
  41d2de:	popf   
  41d2df:	loopne 0x41d2af
  41d2e1:	inc    esp
  41d2e2:	xchg   esp,eax
  41d2e3:	enter  0x2093,0xf7
  41d2e7:	ds enter 0xef06,0x5c
  41d2ec:	dec    edx
  41d2ed:	xor    al,0x97
  41d2ef:	fidivr WORD PTR [ebp-0x60]
  41d2f2:	dec    edx
  41d2f3:	pop    esp
  41d2f4:	and    DWORD PTR [edi+0x60f47b6a],edi
  41d2fa:	xchg   edx,eax
  41d2fb:	rol    DWORD PTR [eax],cl
  41d2fd:	popa   
  41d2fe:	or     eax,DWORD PTR [esi]
  41d300:	mov    edx,DWORD PTR [edi]
  41d302:	fwait
  41d303:	popa   
  41d304:	adc    BYTE PTR [ebx+0x5],bl
  41d307:	fistp  DWORD PTR ds:0x8ca21d24
  41d30d:	adc    al,0xd9
  41d30f:	dec    esi
  41d310:	call   0x8cac:0x9801f0d5
  41d317:	jp     0x41d2f0
  41d319:	shr    DWORD PTR [ecx-0xd2cae8b],1
  41d31f:	xor    eax,0x302aa2ec
  41d324:	dec    edx
  41d325:	(bad)  
  41d326:	(bad)
  41d32a:	popf   
  41d32b:	dec    esp
  41d32c:	lahf   
  41d32d:	xor    cl,BYTE PTR gs:[edx]
  41d330:	ins    BYTE PTR es:[edi],dx
  41d331:	push   cs
  41d332:	call   0x1221acaa
  41d337:	xor    ebp,0x21
  41d33a:	adc    dh,BYTE PTR [esi-0x1]
  41d33d:	pop    ds
  41d33e:	cmp    bh,dh
  41d340:	sbb    edx,DWORD PTR [edx+0x74]
  41d343:	stos   BYTE PTR es:[edi],al
  41d344:	push   ds
  41d345:	leave  
  41d346:	test   al,0x1e
  41d348:	in     eax,dx
  41d349:	mov    ds:0x922d20e7,al
  41d34e:	jp     0x41d3af
  41d350:	lds    edi,FWORD PTR [edx]
  41d352:	mov    ecx,0x506f71de
  41d357:	adc    esp,DWORD PTR [edi]
  41d359:	ret    
  41d35a:	or     DWORD PTR [edx+ebp*4-0x53],0x1d
  41d35f:	les    esi,FWORD PTR [ebx-0x7f548e50]
  41d365:	mov    esp,0x7e2f5aaa
  41d36a:	pushf  
  41d36b:	xchg   BYTE PTR [edx+ebx*1+0x68],bl
  41d36f:	sbb    eax,0xf55b6b8b
  41d374:	inc    ecx
  41d375:	icebp  
  41d376:	xchg   ecx,eax
  41d377:	cmc    
  41d378:	data16 mov cl,0x3c
  41d37b:	xchg   edi,eax
  41d37c:	mov    esi,0xbf4577ec
  41d381:	test   DWORD PTR [ecx],edi
  41d383:	addr16 push ebp
  41d385:	jne    0x41d402
  41d387:	xchg   edx,eax
  41d388:	stos   DWORD PTR es:[edi],eax
  41d389:	jg     0x41d3d9
  41d38b:	jo     0x41d3df
  41d38d:	fist   DWORD PTR [edi]
  41d38f:	cmp    ebp,DWORD PTR ds:0x1d66d938
  41d395:	cs dec eax
  41d397:	popa   
  41d398:	mov    ebx,esp
  41d39a:	les    ebp,FWORD PTR [ebp+0x6d]
  41d39d:	jp     0x41d3e6
  41d39f:	jae    0x41d36f
  41d3a1:	retf   
  41d3a2:	fcmovu st,st(7)
  41d3a4:	mov    ds:0x82fd0ede,al
  41d3a9:	mov    ds:0x64ce7271,al
  41d3ae:	das    
  41d3af:	hlt    
  41d3b0:	jmp    0x8dc1b159
  41d3b5:	push   ss
  41d3b6:	push   ss
  41d3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b8:	(bad)  
  41d3b9:	shl    DWORD PTR [edi],cl
  41d3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3bc:	es inc edx
  41d3be:	retf   0x17d5
  41d3c1:	enter  0x3dd6,0x7c
	...
  41d3d1:	call   0xbef9:0xcff14f56
  41d3d8:	jg     0x41d423
  41d3da:	push   ss
  41d3db:	jecxz  0x41d387
  41d3dd:	inc    esp
  41d3de:	and    BYTE PTR [ecx],ch
  41d3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e1:	int    0x4f
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	lods   al,BYTE PTR ds:[esi]
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [ecx-0x51f52de7],bh
  41d3ee:	mov    ch,0x2e
  41d3f0:	mov    ebx,0x778cf19a
  41d3f5:	sub    esp,edx
  41d3f7:	add    al,0x5e
  41d3f9:	sbb    ebp,esi
  41d3fb:	mov    esi,DWORD PTR [eax+0x7d]
  41d3fe:	mov    ah,0xd1
  41d400:	mov    ch,BYTE PTR [esp+esi*1-0x72fbb60c]
  41d407:	push   ds
  41d408:	aas    
  41d409:	jnp    0x41d3a4
  41d40b:	cld    
  41d40c:	(bad)  
  41d40d:	out    dx,al
  41d40e:	aad    0x1a
  41d410:	add    eax,0x122da565
  41d415:	push   eax
  41d416:	out    0xb9,eax
  41d418:	dec    ecx
  41d419:	ror    DWORD PTR [edx],1
  41d41b:	push   ebx
  41d41c:	dec    edi
  41d41d:	adc    BYTE PTR [ebp+ebp*4-0x7a],dh
  41d421:	(bad)  
  41d422:	icebp  
  41d423:	leave  
  41d424:	cmp    cl,bh
  41d426:	mul    DWORD PTR [edx]
  41d428:	stos   BYTE PTR es:[edi],al
  41d429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d42a:	pop    edx
  41d42b:	std    
  41d42c:	dec    esp
  41d42d:	(bad)  
  41d42f:	push   edx
  41d430:	mov    ecx,0xea74ebcb
  41d435:	add    eax,0x477f1a36
  41d43a:	jl     0x41d3c0
  41d43c:	clc    
  41d43d:	lds    ecx,FWORD PTR [ebx-0x3a]
  41d440:	pop    es
  41d441:	in     al,dx
  41d442:	xor    BYTE PTR [eax+0x54a9a4a9],ah
  41d448:	(bad)
  41d44b:	push   esp
  41d44c:	sbb    edi,ecx
  41d44e:	sub    eax,0x6f4b721d
  41d453:	inc    esp
  41d454:	psubsw mm1,QWORD PTR [edx]
  41d457:	fs xchg ebp,eax
  41d459:	jae    0x41d45e
  41d45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d45c:	sbb    al,0x52
  41d45e:	sbb    BYTE PTR [edx+0x9],cl
  41d461:	call   0xc183b2a9
  41d466:	inc    esi
  41d467:	outs   dx,BYTE PTR ds:[esi]
  41d468:	aas    
  41d469:	fisubr WORD PTR [eax+0x19308d30]
  41d46f:	imul   edx,DWORD PTR [edx+eax*2+0xd],0xe9eaf930
  41d477:	mov    eax,0xd0027d46
  41d47c:	iret   
  41d47d:	lds    esi,FWORD PTR [esi-0x23]
  41d480:	rcr    dl,cl
  41d482:	xor    al,0xc1
  41d484:	shl    BYTE PTR [edx],1
  41d486:	cmp    ah,BYTE PTR [ebx-0x1b]
  41d489:	(bad)  
  41d48a:	fidivr WORD PTR [eax+0x5768e915]
  41d490:	jecxz  0x41d486
  41d492:	inc    ecx
  41d493:	ins    BYTE PTR es:[edi],dx
  41d494:	orps   xmm4,XMMWORD PTR [ecx+ebp*1+0x50]
  41d499:	and    BYTE PTR [eax],bh
  41d49b:	jmp    0xcb931dab
  41d4a0:	ret    
  41d4a1:	xlat   BYTE PTR ds:[ebx]
  41d4a2:	mov    edi,0xabae0bee
  41d4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a8:	shr    DWORD PTR [edi+0x66],cl
  41d4ab:	push   0xffffffbf
  41d4ad:	icebp  
  41d4ae:	arpl   WORD PTR [edi],ax
  41d4b0:	mov    ch,0x9a
  41d4b2:	popa   
  41d4b3:	pop    ss
  41d4b4:	hlt    
  41d4b5:	cli    
  41d4b6:	jne    0x41d52e
  41d4b8:	push   0x44
  41d4ba:	jne    0x41d51c
  41d4bc:	scas   al,BYTE PTR es:[edi]
  41d4bd:	push   0x18328fd7
  41d4c2:	int    0x28
  41d4c4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d4c6:	jnp    0x41d44f
  41d4c8:	or     al,0xfb
  41d4ca:	fcomp  QWORD PTR [ecx]
  41d4cc:	fmulp  st(4),st
  41d4ce:	jb     0x41d4e5
  41d4d0:	push   ebx
  41d4d1:	(bad)  
  41d4d2:	lods   al,BYTE PTR ds:[esi]
  41d4d3:	and    bh,BYTE PTR [eax]
  41d4d5:	stc    
  41d4d6:	or     ecx,DWORD PTR [ebx+0x9]
  41d4d9:	cld    
  41d4da:	sub    ebx,DWORD PTR [edx]
  41d4dc:	(bad)  
  41d4dd:	xchg   ebp,eax
  41d4de:	cmp    DWORD PTR [eax+0x4acbd6ee],esi
  41d4e4:	adc    eax,0xf13da8f
  41d4e9:	test   eax,0x75257bab
  41d4ee:	inc    esi
  41d4ef:	push   edi
  41d4f0:	sbb    ecx,ebx
  41d4f2:	iret   
  41d4f3:	inc    ebx
  41d4f4:	xchg   esp,eax
  41d4f5:	ret    
  41d4f6:	or     BYTE PTR [ecx+0x36e287bb],0x30
  41d4fd:	(bad)  
  41d4fe:	xchg   edx,eax
  41d4ff:	nop
  41d500:	lods   eax,DWORD PTR ds:[esi]
  41d501:	push   ebp
  41d502:	pop    es
  41d503:	jne    0x41d501
  41d505:	sub    DWORD PTR [esi-0x1a36d184],eax
  41d50b:	push   es
  41d50c:	or     esp,DWORD PTR [eax+0x32fd61b2]
  41d512:	xor    al,0xcf
  41d514:	(bad)  
  41d515:	sub    al,0x41
  41d517:	in     al,0x52
  41d519:	retf   
  41d51a:	fcom   QWORD PTR [esi+0x26854e7]
  41d520:	mov    ebp,0x680e38cd
  41d525:	add    bh,BYTE PTR [esi-0x27]
  41d528:	sahf   
  41d529:	test   eax,0x3c5ef2c
  41d52e:	mov    ah,0xf
  41d530:	xor    BYTE PTR [ebp+0x27],dh
  41d533:	mov    edi,esi
  41d535:	jne    0x41d4d9
  41d537:	cmp    DWORD PTR [ebx],ecx
  41d539:	jecxz  0x41d5ab
  41d53b:	adc    al,0x36
  41d53d:	push   es
  41d53e:	sub    DWORD PTR [eax+0x41],edi
  41d541:	loop   0x41d4f9
  41d543:	inc    ecx
  41d544:	add    esi,DWORD PTR [edi+eax*8-0x20b59d6b]
  41d54b:	mov    al,ds:0x3fe58a06
  41d550:	lods   eax,DWORD PTR ds:[esi]
  41d551:	or     eax,DWORD PTR [ebx+0x97a6f43]
  41d557:	cli    
  41d558:	rcr    DWORD PTR [ebp-0x2b2153db],0x7d
  41d55f:	push   ebx
  41d560:	nop
  41d561:	sbb    BYTE PTR [esp+esi*1],bl
  41d564:	sub    ebp,ebp
  41d566:	inc    esp
  41d567:	and    ebx,ecx
  41d569:	fs xchg esi,eax
  41d56b:	sbb    DWORD PTR [ebx+0x2b],ecx
  41d56e:	sbb    DWORD PTR ds:0x78fe0ee8,0x4fa838fe
  41d578:	and    BYTE PTR [ebx],cl
  41d57a:	fsubr  QWORD PTR [esi-0x47ef5fdc]
  41d580:	nop
  41d581:	retf   
  41d582:	imul   ebx,ebx,0x5
  41d585:	push   edx
  41d586:	ret    0x171d
  41d589:	aad    0xcb
  41d58b:	dec    edi
  41d58c:	pop    edi
  41d58d:	inc    esi
  41d58e:	adc    ecx,DWORD PTR [ebx]
  41d590:	cdq    
  41d591:	scas   eax,DWORD PTR es:[edi]
  41d592:	jmp    DWORD PTR [edx+0xc]
  41d595:	cmp    ecx,edx
  41d597:	retf   0xfd11
  41d59a:	test   ebp,ebp
  41d59c:	fwait
  41d59d:	jo     0x41d616
  41d59f:	or     eax,0xa16ce10b
  41d5a4:	push   es
  41d5a5:	(bad)  
  41d5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a7:	mov    al,0x58
  41d5a9:	inc    eax
  41d5aa:	or     BYTE PTR [eax-0x4c4ba2d7],ah
  41d5b0:	call   0xcc00:0x3a3def67
  41d5b7:	mov    bl,0xe6
  41d5b9:	cmp    eax,0xeccb76a0
  41d5be:	in     al,dx
  41d5bf:	mov    esp,0xde247ebf
  41d5c4:	mov    ah,0x94
  41d5c6:	leave  
  41d5c7:	dec    edx
  41d5c8:	xlat   BYTE PTR ds:[ebx]
  41d5c9:	in     eax,0x8
  41d5cb:	scas   eax,DWORD PTR es:[edi]
  41d5cc:	xchg   DWORD PTR [ebx-0x75d2f736],esp
  41d5d2:	dec    ecx
  41d5d3:	popf   
  41d5d4:	add    BYTE PTR [edx-0x564dca2f],0x53
  41d5db:	lds    ebp,FWORD PTR [edi+0x54829188]
  41d5e1:	adc    eax,0xdd45b142
  41d5e6:	mov    al,ds:0xf25e5c60
  41d5eb:	cdq    
  41d5ec:	sbb    bh,BYTE PTR [eax]
  41d5ee:	inc    eax
  41d5ef:	out    0x5,eax
  41d5f1:	pop    ecx
  41d5f2:	xor    DWORD PTR [ebp+0x3b],esi
  41d5f5:	inc    ebx
  41d5f6:	popa   
  41d5f7:	out    dx,eax
  41d5f8:	push   0x152bfccc
  41d5fd:	lods   al,BYTE PTR ds:[esi]
  41d5fe:	jno    0x892f64a9
  41d604:	mov    esp,0x506ae5f6
  41d609:	cmp    BYTE PTR [eax+ecx*8+0x5f3bbd58],bl
  41d610:	inc    edx
  41d611:	or     edi,ebx
  41d613:	add    DWORD PTR [edi-0x62],esi
  41d616:	(bad)  
  41d617:	fistp  WORD PTR [ecx+0xf]
  41d61a:	xchg   esi,eax
  41d61b:	add    ah,dl
  41d61d:	xor    dh,BYTE PTR [edi-0x5573c3a0]
  41d623:	xchg   ebx,eax
  41d624:	sub    cl,BYTE PTR [ebx-0x35]
  41d627:	shl    BYTE PTR [ecx+0x14],1
  41d62a:	inc    edi
  41d62b:	mov    esi,0x6f4d827a
  41d630:	rdmsr  
  41d632:	xchg   edx,eax
  41d633:	sub    DWORD PTR [esp+ecx*8],esp
  41d636:	dec    ecx
  41d637:	jmp    0x6443:0xc4b4a7a6
  41d63e:	fdiv   st,st(4)
  41d640:	sbb    BYTE PTR [ebx+0x753f4c5b],0x33
  41d647:	stc    
  41d648:	js     0x41d65a
  41d64a:	mov    al,ds:0x948027b9
  41d64f:	jb     0x41d60d
  41d651:	xchg   esp,eax
  41d652:	scas   eax,DWORD PTR es:[edi]
  41d653:	mov    al,ds:0xc0e57320
  41d658:	pushf  
  41d659:	inc    esi
  41d65a:	sbb    DWORD PTR [ebp*8+0x62eb118f],edx
  41d661:	jmp    FWORD PTR [edx]
  41d663:	test   BYTE PTR [ebx],dl
  41d665:	daa    
  41d666:	mov    edx,0xed4aad10
  41d66b:	sub    ah,BYTE PTR [ebx-0x6e81493c]
  41d671:	cmp    eax,0xb6db3003
  41d676:	or     eax,0x46b984de
  41d67b:	push   edi
  41d67c:	pop    edi
  41d67d:	jno    0x41d612
  41d67f:	fidivr DWORD PTR [esi+0xddf01c7]
  41d685:	pop    es
  41d686:	and    DWORD PTR [esi+ebp*1],eax
  41d689:	inc    edi
  41d68a:	cld    
  41d68b:	xchg   BYTE PTR [esi+esi*8-0x68],dh
  41d68f:	sahf   
  41d690:	jne    0x41d6e5
  41d692:	(bad)  
  41d693:	push   edi
  41d694:	outs   dx,BYTE PTR ds:[esi]
  41d695:	data16 ror dl,1
  41d698:	lahf   
  41d699:	cmp    cl,BYTE PTR [ecx]
  41d69b:	out    dx,eax
  41d69c:	in     eax,0x7
  41d69e:	xor    DWORD PTR [ecx],edi
  41d6a0:	cmp    BYTE PTR [ebp+0x60bf4cd5],ah
  41d6a6:	mov    dh,0xbb
  41d6a8:	mov    esi,0x5ef555b6
  41d6ad:	cdq    
  41d6ae:	cmp    DWORD PTR [ebx-0x5e],edx
  41d6b1:	push   esi
  41d6b2:	stc    
  41d6b3:	dec    edx
  41d6b4:	jl     0x41d716
  41d6b6:	sahf   
  41d6b7:	shr    BYTE PTR [edi+0x5a],0x38
  41d6bb:	or     BYTE PTR [edi],cl
  41d6bd:	mov    cl,0x75
  41d6bf:	div    DWORD PTR [edi+esi*4-0x70]
  41d6c3:	jle    0x41d70e
  41d6c5:	mov    gs,WORD PTR [ecx]
  41d6c7:	mov    edx,0x6d475a2d
  41d6cc:	stos   DWORD PTR es:[edi],eax
  41d6cd:	xchg   esp,eax
  41d6ce:	xchg   ebx,eax
  41d6cf:	mov    ah,0x17
  41d6d1:	ins    BYTE PTR es:[edi],dx
  41d6d2:	cmp    eax,DWORD PTR [edx+0x41efcc29]
  41d6d8:	sub    dl,BYTE PTR [edx]
  41d6da:	sbb    dh,bh
  41d6dc:	mov    ?,WORD PTR [ebx]
  41d6de:	cdq    
  41d6df:	cdq    
  41d6e0:	cld    
  41d6e1:	shl    BYTE PTR [ebx-0x10c452c0],cl
  41d6e7:	in     eax,dx
  41d6e8:	retf   
  41d6e9:	mov    esp,DWORD PTR [edx-0x4]
  41d6ec:	and    ecx,DWORD PTR [ebp+0x57]
  41d6ef:	jg     0x41d681
  41d6f1:	sub    edx,DWORD PTR [ebx]
  41d6f3:	outs   dx,DWORD PTR ds:[esi]
  41d6f4:	cmp    BYTE PTR [ebx],bl
  41d6f6:	mov    ds:0xbeda489b,al
  41d6fb:	cli    
  41d6fc:	mov    DWORD PTR [esi+0x40],esp
  41d6ff:	bound  eax,QWORD PTR [esi+0x3c3e0893]
  41d705:	mul    DWORD PTR [edx+ebx*2-0xf7f4a97]
  41d70c:	add    DWORD PTR [ebx-0x64aa4dd2],eax
  41d712:	mov    eax,ds:0x24e73f03
  41d717:	stos   DWORD PTR es:[edi],eax
  41d718:	pop    esp
  41d719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d71a:	inc    ebp
  41d71b:	outs   dx,BYTE PTR ds:[esi]
  41d71c:	push   0x2f
  41d71e:	lea    esp,[edx-0x6e869003]
  41d724:	mov    eax,ecx
  41d726:	pop    ecx
  41d727:	inc    esi
  41d728:	pop    ecx
  41d729:	jb     0x41d6c2
  41d72b:	or     eax,0x903c6f4
  41d730:	addr16 mov eax,ds:0x47dc
  41d734:	fcomp  DWORD PTR [ebp+0x54]
  41d737:	int    0x93
  41d739:	sbb    esi,edi
  41d73b:	cmp    bl,BYTE PTR [esi+0x57]
  41d73e:	mov    al,ch
  41d740:	repnz data16 and al,0x57
  41d744:	or     ah,BYTE PTR [ebx-0x7e78d22f]
  41d74a:	xchg   BYTE PTR [ebx+0x6],al
  41d74d:	dec    edi
  41d74e:	jbe    0x41d79c
  41d750:	pop    edx
  41d751:	pop    es
  41d752:	inc    ecx
  41d753:	jae    0x41d7d0
  41d755:	sbb    eax,0x14569964
  41d75a:	mov    ecx,0xd1cce8bd
  41d75f:	pop    esi
  41d760:	pop    eax
  41d761:	xor    esp,DWORD PTR [edi+0x3bfda553]
  41d767:	ret    
  41d768:	stc    
  41d769:	loop   0x41d727
  41d76b:	lea    ebp,[ebp+0x562fc558]
  41d771:	icebp  
  41d772:	push   ebx
  41d773:	outs   dx,BYTE PTR ds:[esi]
  41d774:	xchg   ebx,eax
  41d775:	ins    BYTE PTR es:[edi],dx
  41d776:	lea    edi,[esi]
  41d778:	mov    dl,0xc9
  41d77a:	(bad)  
  41d77b:	in     eax,dx
  41d77c:	inc    edi
  41d77d:	sub    BYTE PTR [ebx-0x5eec2a88],ah
  41d783:	mov    ds:0x60f86ceb,eax
  41d788:	jmp    0xe807ba3c
  41d78d:	mov    dh,0x5c
  41d78f:	mov    DWORD PTR [edx],esp
  41d791:	inc    edx
  41d792:	in     al,0xa3
  41d794:	lock add BYTE PTR [eax],al
	...
  41d79f:	add    BYTE PTR [eax],al
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx+0x33f713a2],ah
  41d7af:	dec    edi
  41d7b0:	sbb    al,0x79
  41d7b2:	push   ebx
  41d7b3:	add    DWORD PTR [eax],eax
  41d7b5:	lods   al,BYTE PTR ds:[esi]
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    BYTE PTR [edx],ah
  41d7ba:	cli    
  41d7bb:	jle    0x41d7c2
  41d7bd:	adc    bh,dl
  41d7bf:	dec    dx
  41d7c1:	shr    DWORD PTR [eax],cl
  41d7c3:	push   edx
  41d7c4:	ins    BYTE PTR es:[edi],dx
  41d7c5:	xor    eax,0x1864d87
  41d7ca:	aas    
  41d7cb:	dec    esp
  41d7cc:	add    DWORD PTR [edx-0x472adb93],esp
  41d7d2:	(bad)  
  41d7d3:	fist   WORD PTR [ebx]
  41d7d5:	pop    eax
  41d7d6:	out    0x21,eax
  41d7d8:	cld    
  41d7d9:	pop    eax
  41d7da:	adc    al,0x68
  41d7dc:	test   al,0xd3
  41d7de:	retf   
  41d7df:	push   ss
  41d7e0:	cmp    eax,0x5b3687cf
  41d7e5:	imul   eax,ecx,0x17
  41d7e8:	cdq    
  41d7e9:	sbb    ebp,DWORD PTR gs:[ebx-0x3e]
  41d7ed:	test   BYTE PTR [ebx+0x4bbdf848],al
  41d7f3:	repnz push esi
  41d7f5:	dec    edi
  41d7f6:	or     al,0x5
  41d7f8:	scas   eax,DWORD PTR es:[edi]
  41d7f9:	test   BYTE PTR [eax],dh
  41d7fb:	fstp   DWORD PTR es:[eax+0x13085e0e]
  41d802:	mov    dl,0x98
  41d804:	cmp    esp,DWORD PTR ds:[ecx+0x3c]
  41d808:	fsubr  st,st(6)
  41d80a:	sbb    DWORD PTR [eax],eax
  41d80c:	cli    
  41d80d:	mov    bh,0xdc
  41d80f:	and    DWORD PTR [edx-0x483abb76],edi
  41d815:	repz arpl WORD PTR [eax+0x582aab8b],bp
  41d81c:	into   
  41d81d:	and    dh,BYTE PTR [esi-0x7]
  41d820:	pop    esi
  41d821:	and    al,0x7c
  41d823:	imul   edi,ecx,0xffffffd2
  41d826:	mov    ecx,0x5beda8ae
  41d82b:	cmc    
  41d82c:	aad    0x17
  41d82e:	ja     0x41d876
  41d830:	xor    eax,0x84bd2375
  41d835:	int3   
  41d836:	cmp    ah,BYTE PTR [ebp-0x65]
  41d839:	mov    dl,0xb3
  41d83b:	dec    edx
  41d83c:	je     0x41d85c
  41d83e:	js     0x41d89f
  41d840:	sar    BYTE PTR [esi],cl
  41d842:	push   eax
  41d843:	cmp    al,0x92
  41d845:	shl    esi,1
  41d847:	mov    ecx,0x95f8dceb
  41d84c:	daa    
  41d84d:	mov    esi,0x182a2d83
  41d852:	das    
  41d853:	leave  
  41d854:	pop    ds
  41d855:	retf   
  41d856:	adc    edi,0xb2571f0f
  41d85c:	adc    DWORD PTR [ebp+0x4],ebp
  41d85f:	scas   eax,DWORD PTR es:[edi]
  41d860:	fcomp  QWORD PTR [ebx]
  41d862:	inc    ecx
  41d863:	or     edi,ecx
  41d865:	data16 ins BYTE PTR es:[edi],dx
  41d867:	fidivr WORD PTR [eax]
  41d869:	and    eax,0xd934746d
  41d86e:	add    ecx,ebp
  41d870:	test   BYTE PTR [ebp-0x3e287b9b],0x3e
  41d877:	jo     0x41d7fc
  41d879:	stc    
  41d87a:	xchg   esi,eax
  41d87b:	sub    DWORD PTR [ecx],ebp
  41d87d:	mov    dl,0xce
  41d87f:	int3   
  41d880:	mov    ebp,0xf162640a
  41d885:	inc    esi
  41d886:	or     al,dh
  41d888:	test   ecx,ecx
  41d88a:	bound  edi,QWORD PTR [edx]
  41d88c:	inc    edi
  41d88d:	and    dl,BYTE PTR [esi]
  41d88f:	lods   eax,DWORD PTR ds:[esi]
  41d890:	nop
  41d891:	adc    ah,BYTE PTR [ecx-0x495bf860]
  41d897:	adc    bh,bl
  41d899:	dec    BYTE PTR [edi+ebp*8+0x4cde5a71]
  41d8a0:	ins    DWORD PTR es:[edi],dx
  41d8a1:	xchg   BYTE PTR [eax-0x44],ch
  41d8a4:	out    dx,eax
  41d8a5:	push   ebp
  41d8a6:	fld    st(2)
  41d8a8:	mov    ecx,0x9edae539
  41d8ad:	lods   al,BYTE PTR ds:[esi]
  41d8ae:	mov    al,ds:0xa6b12392
  41d8b3:	mov    bl,0xc4
  41d8b5:	jg     0x41d901
  41d8b7:	loope  0x41d8af
  41d8b9:	rcl    DWORD PTR [ecx],1
  41d8bb:	xor    bl,bl
  41d8bd:	xor    DWORD PTR [edi+0x47a9a901],esp
  41d8c3:	sar    DWORD PTR [edx+0x78],cl
  41d8c6:	lods   eax,DWORD PTR ds:[esi]
  41d8c7:	xor    cl,cl
  41d8c9:	cmp    DWORD PTR [ebx],edi
  41d8cb:	mov    ebp,0x5e26888c
  41d8d0:	ret    0x100f
  41d8d3:	loope  0x41d917
  41d8d5:	call   0x789471d9
  41d8da:	xchg   esp,eax
  41d8db:	repnz pop esi
  41d8dd:	lea    edi,[edx-0x4d455e6]
  41d8e3:	mov    ds:0x19a11a41,al
  41d8e8:	mov    esp,0xd757cdc7
  41d8ed:	fst    QWORD PTR [esi-0x6d]
  41d8f0:	stos   BYTE PTR es:[edi],al
  41d8f1:	stc    
  41d8f2:	add    DWORD PTR [edi+0x626eebc6],esp
  41d8f8:	xchg   esp,eax
  41d8f9:	imul   eax,DWORD PTR [eax],0x47
  41d8fc:	bound  edx,QWORD PTR [ebx-0x42]
  41d8ff:	mov    eax,ds:0x5e5dfc4d
  41d904:	inc    ebp
  41d905:	pushf  
  41d906:	mov    ds:0xac762343,eax
  41d90b:	add    esi,DWORD PTR [eax]
  41d90d:	repz ret 0x50ad
  41d911:	imul   edi,DWORD PTR [ecx-0x64673e1c],0x912610c9
  41d91b:	inc    esp
  41d91c:	fild   WORD PTR [ebp-0x5f044f21]
  41d922:	jne    0x41d8c2
  41d924:	dec    edx
  41d925:	jmp    0x5c29:0x23632cd3
  41d92c:	add    al,0xcd
  41d92e:	cwde   
  41d92f:	dec    edi
  41d930:	fiadd  WORD PTR [edx-0x71]
  41d933:	shl    bh,0x42
  41d936:	sub    BYTE PTR [ecx+eax*2+0x75],bh
  41d93a:	push   esi
  41d93b:	mov    eax,ds:0xd6a3a010
  41d940:	add    ax,0xab1d
  41d944:	test   DWORD PTR [esi+0x58d3498b],0x1b86c6f7
  41d94e:	int3   
  41d94f:	das    
  41d950:	mov    ?,WORD PTR [eax+edx*2+0x23ce6a11]
  41d957:	sub    cl,BYTE PTR [ebx]
  41d959:	or     DWORD PTR [ecx],ebx
  41d95b:	int    0x70
  41d95d:	ss inc ecx
  41d95f:	push   ebx
  41d960:	mov    bl,0xfb
  41d962:	add    bh,BYTE PTR [ebp-0x68]
  41d965:	out    dx,al
  41d966:	sbb    al,0xd9
  41d968:	mov    bl,0x44
  41d96a:	cmp    dh,BYTE PTR [ecx+eax*4-0xb]
  41d96e:	std    
  41d96f:	cmp    bh,dl
  41d971:	int    0xa
  41d973:	adc    al,0x2d
  41d975:	mov    ch,0x96
  41d977:	pop    edx
  41d978:	mov    WORD PTR [ecx+0x43324da3],ds
  41d97e:	test   eax,0xa28ba165
  41d983:	inc    ecx
  41d984:	imul   edi,DWORD PTR [eax+0x1f138db6],0x22c5e31d
  41d98e:	test   dh,dl
  41d990:	out    dx,al
  41d991:	cld    
  41d992:	lahf   
  41d993:	and    BYTE PTR [edi-0xb5bcca0],bl
  41d999:	les    edi,FWORD PTR ds:0x822c9155
  41d99f:	daa    
  41d9a0:	push   eax
  41d9a1:	fwait
  41d9a2:	int3   
  41d9a3:	adc    ebp,DWORD PTR [ebp-0x55]
  41d9a6:	aad    0xb5
  41d9a8:	xor    eax,0xb6907867
  41d9ad:	cmp    ah,BYTE PTR [edi-0x1]
  41d9b0:	add    al,0x1e
  41d9b2:	call   0xef60:0x45ccba96
  41d9b9:	xor    DWORD PTR [ecx-0x12],ebx
  41d9bc:	dec    edx
  41d9bd:	lods   al,BYTE PTR ds:[esi]
  41d9be:	iret   
  41d9bf:	retf   0x62a
  41d9c2:	dec    ebx
  41d9c3:	add    DWORD PTR [ebx+esi*1+0x21493b5e],edx
  41d9ca:	les    ecx,FWORD PTR [ecx]
  41d9cc:	dec    ecx
  41d9cd:	jno    0x41d976
  41d9cf:	out    0xc0,al
  41d9d1:	rcr    BYTE PTR [eax+ebx*2],cl
  41d9d4:	xor    esp,DWORD PTR [edi-0x3ae810c3]
  41d9da:	jne    0x41da21
  41d9dc:	jnp    0x41da2c
  41d9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9df:	cmp    edx,DWORD PTR [edi-0x6f]
  41d9e2:	dec    eax
  41d9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9e4:	or     dl,BYTE PTR [ebp+0x6ab4c2fe]
  41d9ea:	inc    edx
  41d9eb:	lea    esi,ds:0xfbdc3fe4
  41d9f1:	push   0xfffffff8
  41d9f3:	or     DWORD PTR [eax+0x4d],eax
  41d9f6:	in     al,0xc8
  41d9f8:	rol    BYTE PTR [ebx+ebx*1+0x61],cl
  41d9fc:	data16 and dh,BYTE PTR ds:0xb6452b5d
  41da03:	in     al,dx
  41da04:	jg     0x41da2e
  41da06:	shr    ebp,0x45
  41da09:	and    cl,BYTE PTR [edx+0x22]
  41da0c:	outs   dx,BYTE PTR ds:[esi]
  41da0d:	sti    
  41da0e:	lock mov ecx,0xa92f43e2
  41da14:	ins    DWORD PTR es:[edi],dx
  41da15:	dec    BYTE PTR [esi]
  41da17:	cmp    edx,ecx
  41da19:	and    BYTE PTR gs:[esi-0x6adf6fce],ch
  41da20:	pop    edx
  41da21:	dec    eax
  41da22:	aaa    
  41da23:	sbb    eax,0x8c15e6bf
  41da28:	je     0x41da58
  41da2a:	lock pushf 
  41da2c:	mov    dh,0xc4
  41da2e:	push   ebp
  41da2f:	mov    ds:0xc4a75ebb,eax
  41da34:	mov    ds:0x824f5371,al
  41da39:	lods   al,BYTE PTR ds:[esi]
  41da3a:	and    BYTE PTR [edx+0x260b55cb],ch
  41da40:	mov    dh,0xd9
  41da42:	xor    ah,bh
  41da44:	sbb    BYTE PTR [ebp+0x5f789356],bh
  41da4a:	sbb    ah,BYTE PTR [edi+eax*8+0xb]
  41da4e:	in     al,0x85
  41da50:	aad    0xc7
  41da52:	xor    BYTE PTR [eax],0x46
  41da55:	(bad)  
  41da56:	mov    esi,0xbbc55d40
  41da5b:	sub    BYTE PTR [eax+0xb],al
  41da5e:	xchg   ebx,eax
  41da5f:	enter  0xfad,0x59
  41da63:	pop    ss
  41da64:	push   ecx
  41da65:	gs cwde 
  41da67:	int    0x1e
  41da69:	or     BYTE PTR ds:[esi],0x61
  41da6d:	inc    esi
  41da6e:	sub    ecx,DWORD PTR [ecx]
  41da70:	scas   eax,DWORD PTR es:[edi]
  41da71:	jle    0x41dabb
  41da73:	inc    edx
  41da74:	in     al,dx
  41da75:	inc    ebp
  41da76:	(bad)  
  41da77:	jp     0x41da6b
  41da79:	sub    al,0xea
  41da7b:	in     eax,dx
  41da7c:	mov    eax,ds:0x38eb1e67
  41da81:	jbe    0x41da21
  41da83:	stos   BYTE PTR es:[edi],al
  41da84:	jb     0x41da34
  41da86:	lds    esi,FWORD PTR [edx-0x7e]
  41da89:	jbe    0x41dad3
  41da8b:	mov    esi,0xe7e7a130
  41da90:	adc    DWORD PTR [edx+eiz*1+0x2a],ebp
  41da94:	shl    BYTE PTR [ebp+0x4a],1
  41da97:	mov    al,BYTE PTR [esi-0x4d]
  41da9a:	cld    
  41da9b:	mov    DWORD PTR [esi+0x7f97e484],eax
  41daa1:	pop    edi
  41daa2:	pop    edx
  41daa3:	pop    ds
  41daa4:	imul   edx,ebx,0x1e32c9ca
  41daaa:	inc    edi
  41daab:	mov    ss:0x18c0792f,al
  41dab1:	jl     0x41da54
  41dab3:	test   BYTE PTR [ebx-0x5b727b65],dh
  41dab9:	cld    
  41daba:	fisub  DWORD PTR [edi+ecx*4+0x6765ec36]
  41dac1:	jne    0x41daf2
  41dac3:	lahf   
  41dac4:	ret    0xd78
  41dac7:	pop    ss
  41dac8:	sbb    DWORD PTR [esi],esi
  41daca:	lods   eax,DWORD PTR ds:[esi]
  41dacb:	xor    DWORD PTR [ebp+0x58fb84b],edx
  41dad1:	sub    al,0x24
  41dad3:	dec    edi
  41dad4:	imul   BYTE PTR [esi]
  41dad6:	pop    ss
  41dad7:	xchg   edx,eax
  41dad8:	jnp    0x41db47
  41dada:	stos   BYTE PTR es:[edi],al
  41dadb:	xor    DWORD PTR [eax+0x189c779],0x7b
  41dae2:	push   ss
  41dae3:	or     bh,BYTE PTR [eax+0x2caf6e2d]
  41dae9:	popa   
  41daea:	cmc    
  41daeb:	std    
  41daec:	push   edx
  41daed:	jnp    0x41daf8
  41daef:	cmp    eax,0x5759ffe9
  41daf4:	jnp    0x41db65
  41daf6:	pop    ebx
  41daf7:	or     DWORD PTR [edi+ebp*2],edx
  41dafa:	push   cs
  41dafb:	pop    esp
  41dafc:	shr    ch,cl
  41dafe:	mov    eax,0x9ba4fa55
  41db03:	into   
  41db04:	aad    0x57
  41db06:	mov    ebx,0xfe105e78
  41db0b:	(bad)  
  41db0c:	mov    ebx,0x1bcce6ee
  41db11:	test   al,0x54
  41db13:	xchg   ecx,eax
  41db14:	sbb    al,0xf
  41db16:	retf   0xe5f3
  41db19:	jmp    0x41db1f
  41db1b:	into   
  41db1c:	jns    0x41db09
  41db1e:	inc    ebx
  41db1f:	jno    0x41db63
  41db21:	jae    0x41db76
  41db23:	std    
  41db24:	test   eax,0x9eaa687f
  41db29:	push   ss
  41db2a:	cs retf 
  41db2c:	and    DWORD PTR [eax-0x35],ebx
  41db2f:	ins    DWORD PTR es:[edi],dx
  41db30:	jmp    0xf849ef30
  41db35:	fcmovb st,st(3)
  41db37:	shl    DWORD PTR [ecx-0x44],0x89
  41db3b:	and    eax,0x72a9730c
  41db40:	ja     0x41db54
  41db42:	outs   dx,DWORD PTR ds:[esi]
  41db43:	wrmsr  
  41db45:	jmp    0x41db61
  41db47:	cmp    ebp,ecx
  41db49:	push   ebp
  41db4a:	inc    esp
  41db4b:	inc    esi
  41db4c:	cli    
  41db4d:	jecxz  0x41db78
  41db4f:	lods   eax,DWORD PTR ds:[esi]
  41db50:	pop    ecx
  41db51:	in     eax,dx
  41db52:	imul   ebx,ebx,0x31
  41db55:	dec    eax
  41db56:	cmp    DWORD PTR [ebp+0x7a],ebx
  41db59:	sbb    WORD PTR ds:0xfc95a6e4,di
  41db60:	mov    esi,0xe1f212e6
	...
  41db71:	inc    ecx
  41db72:	out    dx,eax
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0x3d97ad62
  41db80:	out    dx,al
  41db81:	and    eax,0xac000157
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    bh,cl
  41db8a:	mov    bh,0xc9
  41db8c:	xor    esi,DWORD PTR [ebp+0x55]
  41db8f:	pop    eax
  41db90:	cdq    
  41db91:	pushf  
  41db92:	adc    BYTE PTR fs:[ebx-0x42],0xd9
  41db97:	push   ds
  41db98:	and    edi,DWORD PTR [edx]
  41db9a:	fbstp  TBYTE PTR [edi+0x5b]
  41db9d:	aad    0xb7
  41db9f:	inc    edi
  41dba0:	dec    eax
  41dba1:	push   edi
  41dba2:	sub    al,0x81
  41dba4:	mov    al,ds:0x159926f
  41dba9:	sti    
  41dbaa:	lahf   
  41dbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbac:	inc    edi
  41dbad:	js     0x41db47
  41dbaf:	mov    ds:0xfb980950,al
  41dbb4:	out    dx,al
  41dbb5:	lods   eax,DWORD PTR ds:[esi]
  41dbb6:	adc    DWORD PTR [esi],eax
  41dbb8:	jo     0x41dbb4
  41dbba:	arpl   si,sp
  41dbbc:	or     al,ah
  41dbbe:	pusha  
  41dbbf:	lods   al,BYTE PTR ds:[esi]
  41dbc0:	xchg   DWORD PTR [ebx-0x37],ebx
  41dbc3:	sub    DWORD PTR [edx-0xc],edi
  41dbc6:	sbb    BYTE PTR [eax+0x6df9ee5d],ch
  41dbcc:	xor    BYTE PTR [eax+0x3f],0x96
  41dbd0:	gs out dx,eax
  41dbd2:	jb     0x41db97
  41dbd4:	imul   ecx,DWORD PTR [ecx-0x67],0xd8866ad2
  41dbdb:	inc    eax
  41dbdc:	push   es
  41dbdd:	push   0x3744a0fc
  41dbe2:	xor    BYTE PTR [ebp-0x15],ch
  41dbe5:	xchg   ebp,eax
  41dbe6:	in     al,dx
  41dbe7:	(bad)  
  41dbe8:	pop    ds
  41dbe9:	dec    ebp
  41dbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbeb:	cdq    
  41dbec:	(bad)  
  41dbed:	xor    edx,esi
  41dbef:	aas    
  41dbf0:	fnstcw WORD PTR [edi]
  41dbf2:	icebp  
  41dbf3:	or     eax,DWORD PTR [esi+eiz*4-0x71]
  41dbf7:	retf   
  41dbf8:	test   eax,0xabe99575
  41dbfd:	xor    ebx,edx
  41dbff:	push   esp
  41dc00:	aaa    
  41dc01:	mov    ds:0x15fd62e6,eax
  41dc06:	sub    al,dh
  41dc08:	lods   eax,DWORD PTR ds:[esi]
  41dc09:	cmp    bh,BYTE PTR [edx]
  41dc0b:	into   
  41dc0c:	sub    al,0xb8
  41dc0e:	ret    0xdabf
  41dc11:	sbb    BYTE PTR [esp+eax*4],ch
  41dc14:	inc    dh
  41dc16:	hlt    
  41dc17:	mov    ebx,0xd220af3
  41dc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc1d:	mov    cl,0xa9
  41dc1f:	mov    edx,0x159a4efc
  41dc24:	mov    ebx,edi
  41dc26:	pop    edx
  41dc27:	mov    al,0x69
  41dc29:	fisttp WORD PTR [edi]
  41dc2b:	jo     0x41dbde
  41dc2d:	adc    DWORD PTR [edx+0xc],0xffffffe5
  41dc31:	push   esi
  41dc32:	push   0xffffff99
  41dc34:	lock shl dl,1
  41dc37:	stc    
  41dc38:	sub    eax,0x57360fbc
  41dc3d:	pushf  
  41dc3e:	jb     0x41dc06
  41dc40:	mov    WORD PTR [ecx],cs
  41dc42:	loopne 0x41dcb0
  41dc44:	and    al,0x84
  41dc46:	fadd   DWORD PTR [ecx-0x3]
  41dc49:	xor    ch,al
  41dc4b:	xor    esi,eax
  41dc4d:	adc    dh,BYTE PTR [edx+0x501faf33]
  41dc53:	xchg   DWORD PTR [esi],edx
  41dc55:	stos   DWORD PTR es:[edi],eax
  41dc56:	std    
  41dc57:	jp     0x41dbdd
  41dc59:	xor    bh,ah
  41dc5b:	inc    esp
  41dc5c:	xchg   esp,ebx
  41dc5e:	pop    DWORD PTR [edi+eiz*4]
  41dc61:	(bad)
  41dc64:	scas   eax,DWORD PTR es:[edi]
  41dc65:	pusha  
  41dc66:	adc    al,0xe8
  41dc68:	jb     0x41dc53
  41dc6a:	imul   esp,DWORD PTR ss:[esi-0x3b9f4b4a],0x3a
  41dc72:	push   0xffffffd3
  41dc74:	sub    DWORD PTR [ebp-0x67],eax
  41dc77:	xchg   esi,eax
  41dc78:	xchg   DWORD PTR [ecx-0x73],edx
  41dc7b:	mov    ebx,0xa7522e5
  41dc80:	stos   DWORD PTR es:[edi],eax
  41dc81:	or     al,cl
  41dc83:	popa   
  41dc84:	fs pop edx
  41dc86:	pop    ebx
  41dc87:	pop    ss
  41dc88:	cld    
  41dc89:	mov    esi,0x163297aa
  41dc8e:	dec    esi
  41dc8f:	fisub  DWORD PTR [esi+esi*4]
  41dc92:	hlt    
  41dc93:	dec    esi
  41dc94:	mov    edx,0x8613b3c5
  41dc99:	mov    edi,0xf6377705
  41dc9e:	loopne 0x41dcf8
  41dca0:	ins    BYTE PTR es:[edi],dx
  41dca1:	stc    
  41dca2:	gs sahf 
  41dca4:	cmp    DWORD PTR [ebx-0x15],esi
  41dca7:	xchg   DWORD PTR [esi-0x19],eax
  41dcaa:	pushf  
  41dcab:	mov    cl,0x8d
  41dcad:	inc    ebp
  41dcae:	ss addr16 mov ah,0xba
  41dcb2:	lods   eax,DWORD PTR ds:[esi]
  41dcb3:	cmp    al,0x48
  41dcb5:	add    cl,BYTE PTR [edi-0x56]
  41dcb8:	adc    DWORD PTR [edi],0x8
  41dcbb:	fmul   QWORD PTR [edx]
  41dcbd:	adc    bh,BYTE PTR [ebx+eiz*2]
  41dcc0:	mov    bh,0xd1
  41dcc2:	pop    ebp
  41dcc3:	sub    ch,BYTE PTR [edx]
  41dcc5:	(bad)  
  41dcc6:	bnd fs jg 0x41dc85
  41dcca:	xchg   ecx,eax
  41dccb:	aam    0x1a
  41dccd:	xchg   esi,eax
  41dcce:	jge    0x41dcce
  41dcd0:	mov    dl,0x28
  41dcd2:	jb     0x41dc59
  41dcd4:	sub    al,0x74
  41dcd6:	cs popf 
  41dcd8:	arpl   bx,ax
  41dcda:	push   ss
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	call   0xb2a9c230
  41dce1:	aam    0x46
  41dce3:	push   cs
  41dce4:	add    al,0x5c
  41dce6:	sub    edx,edi
  41dce8:	(bad)  
  41dce9:	cmp    ah,BYTE PTR [ebp-0x5c]
  41dcec:	popf   
  41dced:	dec    ebp
  41dcee:	arpl   WORD PTR [esp+eax*8+0x23],si
  41dcf2:	loopne 0x41dd17
  41dcf4:	cli    
  41dcf5:	cmp    dl,BYTE PTR cs:[ebx]
  41dcf8:	ins    DWORD PTR es:[edi],dx
  41dcf9:	into   
  41dcfa:	jp     0x41dd11
  41dcfc:	jecxz  0x41dd5d
  41dcfe:	inc    esp
  41dcff:	test   eax,0x7a161fc2
  41dd04:	lock xor eax,0xc59451f9
  41dd0a:	inc    ebp
  41dd0b:	or     BYTE PTR [ecx-0x70],dh
  41dd0e:	bound  ebx,QWORD PTR [eax+0x35]
  41dd11:	in     eax,dx
  41dd12:	push   esp
  41dd13:	push   ebx
  41dd14:	mov    ds:0xedf2ea26,eax
  41dd19:	mov    esp,0x8f3c75
  41dd1e:	mov    BYTE PTR [edx+0x71feca8f],bh
  41dd24:	scas   al,BYTE PTR es:[edi]
  41dd25:	cmp    eax,0xbe649046
  41dd2a:	test   BYTE PTR [ebx],dh
  41dd2c:	or     BYTE PTR [edx],al
  41dd2e:	pop    es
  41dd2f:	and    ch,BYTE PTR [esi-0x3b11819b]
  41dd35:	pushf  
  41dd36:	mov    ah,0xfa
  41dd38:	pop    edi
  41dd39:	ficomp WORD PTR [eax]
  41dd3b:	hlt    
  41dd3c:	sub    al,0x4
  41dd3e:	jno    0x41dd73
  41dd40:	mov    ds:0x5b08df1a,eax
  41dd45:	mov    ebx,0x619795df
  41dd4a:	aaa    
  41dd4b:	cmp    BYTE PTR [esi+0x33],al
  41dd4e:	jg     0x41dcdb
  41dd50:	xor    DWORD PTR [edi],ebp
  41dd52:	inc    esp
  41dd53:	or     BYTE PTR [edx],dl
  41dd55:	push   cs
  41dd56:	mov    ds:0x2bf1e9f5,al
  41dd5b:	data16 fisubr WORD PTR [esi+ebx*2]
  41dd5f:	rcr    ebx,1
  41dd61:	cmp    BYTE PTR [ecx+0x5c],al
  41dd64:	mul    BYTE PTR [edx]
  41dd66:	ror    DWORD PTR [ebx-0x62],0x24
  41dd6a:	std    
  41dd6b:	iret   
  41dd6c:	inc    edx
  41dd6d:	pop    ecx
  41dd6e:	jp     0x41dd0e
  41dd70:	sub    al,0xeb
  41dd72:	test   ecx,0x60e2b7b6
  41dd78:	stos   DWORD PTR es:[edi],eax
  41dd79:	jbe    0x41dd00
  41dd7b:	sub    eax,0xb937aeb2
  41dd80:	stos   DWORD PTR es:[edi],eax
  41dd81:	xor    eax,0xa96b9920
  41dd86:	dec    ebx
  41dd87:	leave  
  41dd88:	int3   
  41dd89:	push   esp
  41dd8a:	mov    ch,0x44
  41dd8c:	arpl   WORD PTR [eax],dx
  41dd8e:	call   0xba168229
  41dd93:	adc    eax,0x619cc37
  41dd98:	mov    ds:0xc10b68e0,al
  41dd9d:	fsub   DWORD PTR [esi-0x56]
  41dda0:	and    dl,BYTE PTR [ebx]
  41dda2:	(bad)  
  41dda3:	push   ebx
  41dda4:	sbb    ebp,DWORD PTR [ebx-0x79]
  41dda7:	int    0x2f
  41dda9:	add    eax,0x3d60b479
  41ddae:	lods   al,BYTE PTR ds:[esi]
  41ddaf:	lods   al,BYTE PTR ds:[esi]
  41ddb0:	push   0x576ce898
  41ddb5:	pop    ds
  41ddb6:	ror    BYTE PTR [ebp-0x350e4ae4],0xc8
  41ddbd:	push   esp
  41ddbe:	and    edi,DWORD PTR [ecx+0x60616840]
  41ddc4:	xor    DWORD PTR ds:0x6aff690f,eax
  41ddca:	sub    eax,0x77c86bc6
  41ddcf:	mov    WORD PTR [eax],ds
  41ddd1:	ins    DWORD PTR es:[edi],dx
  41ddd2:	sbb    bh,cl
  41ddd4:	pop    esp
  41ddd5:	dec    ebp
  41ddd6:	add    BYTE PTR [ecx],0x50
  41ddd9:	fadd   QWORD PTR [ebp+0x2a]
  41dddc:	xor    eax,0x56f7f677
  41dde1:	pop    ecx
  41dde2:	jl     0x41ddb5
  41dde4:	inc    dl
  41dde6:	dec    edi
  41dde7:	xlat   BYTE PTR ds:[ebx]
  41dde8:	cmc    
  41dde9:	mov    es,WORD PTR [edx+esi*1+0x17]
  41dded:	push   ss
  41ddee:	shr    BYTE PTR [edx],1
  41ddf0:	loope  0x41ddaa
  41ddf2:	cwde   
  41ddf3:	add    cl,BYTE PTR [edi+eax*4]
  41ddf6:	daa    
  41ddf7:	dec    edi
  41ddf8:	xor    BYTE PTR [ebp-0x70],ch
  41ddfb:	out    dx,eax
  41ddfc:	les    edi,FWORD PTR [ebx+0x3241cec3]
  41de02:	mov    dl,0xb2
  41de04:	es pop esi
  41de06:	add    DWORD PTR [ecx],eax
  41de08:	cmp    al,0x82
  41de0a:	imul   edi,DWORD PTR [ebp+eax*2-0x2f232e66],0xffffffde
  41de12:	shl    BYTE PTR [ebx-0xb],cl
  41de15:	jp     0x41de44
  41de17:	fwait
  41de18:	(bad)  
  41de19:	arpl   WORD PTR [eax+0x5a],ax
  41de1c:	mov    ds:0xc395f722,al
  41de21:	xchg   ecx,eax
  41de22:	jnp    0x41de1d
  41de24:	addr16 stc 
  41de26:	xchg   ebp,eax
  41de27:	test   eax,0x82475395
  41de2c:	(bad)  
  41de2d:	mov    ?,WORD PTR [edx+edi*8]
  41de30:	es jae 0x41ddc6
  41de33:	sahf   
  41de34:	lods   eax,DWORD PTR ds:[esi]
  41de35:	jnp    0x41ddf3
  41de37:	pushf  
  41de38:	mov    dl,0x7e
  41de3a:	sbb    edx,DWORD PTR [bx+0x24]
  41de3e:	mov    cl,0xdd
  41de40:	fsub   st,st(2)
  41de42:	sti    
  41de43:	or     eax,0x238ed2d3
  41de48:	push   0x9fec4fc9
  41de4d:	push   0x69
  41de4f:	and    ecx,ecx
  41de51:	inc    edi
  41de52:	or     DWORD PTR [edi+0x16],edx
  41de55:	arpl   WORD PTR [ecx-0x54],bx
  41de58:	adc    BYTE PTR [edi+0x5346f8b],0xb5
  41de5f:	pop    ebx
  41de60:	retf   0x3fd5
  41de63:	mov    ecx,0xf5834a7a
  41de68:	rcr    DWORD PTR [ebx+0x798df64e],1
  41de6e:	call   0x2bc41750
  41de73:	(bad)  
  41de74:	jo     0x41de0a
  41de76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de77:	mov    eax,0xf8baf68
  41de7c:	imul   ecx,edx,0x3c
  41de7f:	retf   
  41de80:	inc    edx
  41de81:	dec    edi
  41de82:	out    0xeb,al
  41de84:	push   0x68a5aebd
  41de89:	ins    BYTE PTR es:[edi],dx
  41de8a:	cmp    eax,0xa0703615
  41de8f:	sub    al,0x10
  41de91:	push   0x61
  41de93:	lock mov ch,0xc9
  41de96:	daa    
  41de97:	inc    ecx
  41de98:	sub    BYTE PTR [eax-0x5e7b838],ah
  41de9e:	dec    eax
  41de9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dea0:	cld    
  41dea1:	jg     0x41de41
  41dea3:	xchg   BYTE PTR [edi+0x5e09c25b],dh
  41dea9:	(bad)  
  41deab:	into   
  41deac:	adc    esp,DWORD PTR [ebp+0x1bbdf049]
  41deb2:	push   ds
  41deb3:	jl     0x41de39
  41deb5:	xchg   edx,eax
  41deb6:	scas   eax,DWORD PTR es:[edi]
  41deb7:	dec    eax
  41deb8:	cwde   
  41deb9:	aam    0xa3
  41debb:	(bad)  
  41debc:	cli    
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	cdq    
  41debf:	lea    ebx,ds:0xa00a7944
  41dec5:	out    dx,al
  41dec6:	push   0x67d1f515
  41decb:	xchg   BYTE PTR [edi],cl
  41decd:	fst    DWORD PTR [ebx-0x5a]
  41ded0:	dec    ecx
  41ded1:	cmp    al,BYTE PTR [edi-0x13]
  41ded4:	sbb    al,0x71
  41ded6:	and    esi,DWORD PTR [ebx-0x48]
  41ded9:	imul   ecx,DWORD PTR [edx],0xffffffd3
  41dedc:	push   edx
  41dedd:	sbb    eax,0xd260c475
  41dee2:	mov    edi,0xbebcd5c0
  41dee7:	xchg   edi,eax
  41dee8:	sub    al,0xfa
  41deea:	cmp    DWORD PTR [ebp-0x5565912e],ebp
  41def0:	mov    eax,0x89474529
  41def5:	call   0x3a43:0x76c7f9a1
  41defc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41defd:	and    BYTE PTR [ecx+0x24e4988d],dl
  41df03:	mov    ds:0xc169b95b,eax
  41df08:	mov    DWORD PTR ds:0xcd339da3,0x9ab17d0f
  41df12:	push   esi
  41df13:	and    BYTE PTR [esi+0x710a85],cl
  41df19:	data16 lods al,BYTE PTR ds:[esi]
  41df1b:	pop    esp
  41df1c:	pop    esp
  41df1d:	daa    
  41df1e:	jg     0x41df45
  41df20:	test   al,0x7
  41df22:	test   BYTE PTR [ebp+0x68d3b807],al
  41df28:	loop   0x41df39
  41df2a:	add    ebx,DWORD PTR [edi]
  41df2c:	xor    BYTE PTR [ebp-0x4757f6f5],ch
  41df32:	mov    ch,BYTE PTR [ecx]
  41df34:	lea    eax,[eax]
	...
  41df3e:	add    BYTE PTR [eax],al
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	xor    BYTE PTR [esi+ecx*4],0x3a
  41df50:	ins    DWORD PTR es:[edi],dx
  41df51:	rcr    DWORD PTR [edx+0x1],1
  41df54:	add    BYTE PTR [ebx+eax*1+0x4d590000],ch
  41df5b:	(bad)
  41df5f:	pusha  
  41df60:	int3   
  41df61:	ins    DWORD PTR es:[edi],dx
  41df62:	enter  0xe4c3,0xc4
  41df66:	lar    ebx,WORD PTR fs:[ebp+edi*8+0x17d13cea]
  41df6f:	jnp    0x41dfb7
  41df71:	test   DWORD PTR [esi],esi
  41df73:	in     eax,dx
  41df74:	inc    ebx
  41df75:	dec    ebx
  41df76:	dec    ecx
  41df77:	mov    DWORD PTR [eax-0xe],0xaa902a9d
  41df7e:	mov    al,ds:0xe31dd042
  41df83:	test   DWORD PTR [edx-0x20bdfa72],edx
  41df89:	push   es
  41df8a:	data16 daa 
  41df8c:	(bad)  
  41df8d:	hlt    
  41df8e:	or     al,0xc2
  41df90:	test   DWORD PTR [ecx-0x46],esp
  41df93:	jecxz  0x41dfab
  41df95:	push   0x7f
  41df97:	retf   
  41df98:	and    al,0x51
  41df9a:	xchg   esi,eax
  41df9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df9c:	dec    ecx
  41df9d:	fst    DWORD PTR [ebp-0x4beff7a4]
  41dfa3:	(bad)  
  41dfa4:	pusha  
  41dfa5:	pop    ds
  41dfa6:	lock adc eax,0xe29ccda
  41dfac:	frstor [ebx+ebx*2-0xe]
  41dfb0:	inc    edi
  41dfb1:	mov    ch,0x56
  41dfb3:	cmp    al,BYTE PTR [ebx]
  41dfb5:	fdivr  DWORD PTR [eax]
  41dfb7:	and    esi,DWORD PTR [ecx+0x3d5c097a]
  41dfbd:	aad    0x40
  41dfbf:	ins    BYTE PTR es:[edi],dx
  41dfc0:	fs pop ds
  41dfc2:	shl    DWORD PTR [edi],cl
  41dfc4:	retf   
  41dfc5:	fstp   QWORD PTR [ebx-0xdd8341f]
  41dfcb:	and    BYTE PTR [edi],ch
  41dfcd:	inc    ebp
  41dfce:	mov    edx,0x8f1f2960
  41dfd3:	add    al,0x79
  41dfd5:	jo     0x41dfc5
  41dfd7:	add    esp,ecx
  41dfd9:	inc    esi
  41dfda:	ficom  DWORD PTR [esi+0x6eee0f96]
  41dfe0:	lock stos DWORD PTR es:[edi],eax
  41dfe2:	dec    esi
  41dfe3:	xor    dl,BYTE PTR [edi]
  41dfe5:	aas    
  41dfe6:	push   cs
  41dfe7:	sbb    BYTE PTR [eax],0xc9
  41dfea:	arpl   WORD PTR [esi-0x44661522],cx
  41dff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff1:	dec    edi
  41dff2:	cmp    bh,BYTE PTR [eax+eax*1-0x2e2e8acd]
  41dff9:	push   ecx
  41dffa:	push   cs
  41dffb:	and    DWORD PTR [eax+0x7d],ebp
  41dffe:	push   0x737ce4ea
  41e003:	xchg   ebx,eax
  41e004:	ins    DWORD PTR es:[edi],dx
  41e005:	cmp    DWORD PTR [esi+0x1e],esp
  41e008:	sub    al,0x30
  41e00a:	cmp    bh,al
  41e00c:	xor    al,0x2d
  41e00e:	and    edi,DWORD PTR es:[ebp+0x4e]
  41e012:	std    
  41e013:	sub    bl,0x1e
  41e016:	xor    edx,esp
  41e018:	repnz xchg edi,eax
  41e01a:	(bad)  
  41e01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e01c:	push   edx
  41e01d:	retf   0xc97f
  41e020:	icebp  
  41e021:	jbe    0x41e037
  41e023:	lock fidiv WORD PTR [eax-0x23d0aa2d]
  41e02a:	lds    edi,FWORD PTR [eax+0x49750a17]
  41e030:	sbb    eax,0x62a50417
  41e035:	mov    ebp,DWORD PTR [ecx]
  41e037:	mov    esp,0x837dd1c0
  41e03c:	push   esp
  41e03d:	push   0xffffff9d
  41e03f:	or     BYTE PTR [eax-0x18edaf6c],0x5c
  41e046:	inc    ebx
  41e047:	cmp    BYTE PTR [eax-0x29d71f8d],0xba
  41e04e:	sub    DWORD PTR [edi+0x7a952a72],esi
  41e054:	adc    ebp,0xffffffb9
  41e057:	mov    WORD PTR [edi+0x59],?
  41e05a:	mov    DWORD PTR [eax+0x464d45d5],ebp
  41e060:	jg     0x41e014
  41e062:	adc    eax,0xaed7818b
  41e067:	imul   ecx,DWORD PTR [edx+0x4005042e],0xffffffef
  41e06e:	inc    ebp
  41e06f:	retf   0x16b2
  41e072:	ret    0x6d95
  41e075:	call   DWORD PTR [ebx]
  41e077:	mov    edi,es
  41e079:	xor    BYTE PTR [esi+0x70],ch
  41e07c:	rcr    DWORD PTR [eax+edi*2-0x6d5acd16],0x39
  41e084:	dec    ecx
  41e085:	jmp    0xd4706070
  41e08a:	jo     0x41e08e
  41e08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e08d:	cs and al,0x68
  41e090:	arpl   bp,di
  41e092:	and    al,0x80
  41e094:	in     eax,dx
  41e095:	mov    ah,0x59
  41e097:	inc    edi
  41e098:	cmp    BYTE PTR [eax],bh
  41e09a:	lds    ecx,FWORD PTR [esi]
  41e09c:	jl     0x41e024
  41e09e:	popf   
  41e09f:	add    cl,BYTE PTR [ebx]
  41e0a1:	retf   
  41e0a2:	xor    eax,0xb3a50ac4
  41e0a7:	xlat   BYTE PTR ds:[ebx]
  41e0a8:	jnp    0x41e0b9
  41e0aa:	mov    WORD PTR [ebx],fs
  41e0ac:	mov    cl,0xcd
  41e0ae:	pop    eax
  41e0af:	(bad)  
  41e0b1:	add    DWORD PTR [edi],0x90e01364
  41e0b7:	mov    WORD PTR [ebx+0x299d9d7f],?
  41e0bd:	adc    dl,BYTE PTR [edi-0x3e]
  41e0c0:	lock inc esp
  41e0c2:	push   es
  41e0c3:	or     DWORD PTR [esi-0x25d56ac6],esi
  41e0c9:	jno    0x41e10a
  41e0cb:	pop    edi
  41e0cc:	xchg   DWORD PTR [ecx-0x736c3436],esp
  41e0d2:	nop
  41e0d3:	retf   0xadfe
  41e0d6:	jle    0x41e0df
  41e0d8:	sbb    dl,ch
  41e0da:	xchg   edx,eax
  41e0db:	mov    ebp,0x2a1acf0f
  41e0e0:	retf   
  41e0e1:	dec    ebp
  41e0e2:	add    al,0x33
  41e0e4:	(bad)
  41e0e8:	inc    ebx
  41e0e9:	call   0x734b8e76
  41e0ee:	iret   
  41e0ef:	push   eax
  41e0f0:	out    dx,eax
  41e0f1:	adc    ebx,edi
  41e0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f4:	in     al,0x51
  41e0f6:	ror    DWORD PTR [esi-0x11],1
  41e0f9:	dec    bl
  41e0fb:	(bad)  
  41e0fc:	dec    esi
  41e0fd:	pop    ebx
  41e0fe:	pushf  
  41e0ff:	lds    ecx,FWORD PTR cs:[edx-0x4f]
  41e103:	mov    edx,DWORD PTR [esi+0x26]
  41e106:	jbe    0x41e186
  41e108:	(bad)  
  41e109:	call   0xb040:0x8022ef84
  41e110:	int    0x12
  41e112:	or     cl,BYTE PTR [ebp+0x759dfa35]
  41e118:	and    eax,0xe73c660e
  41e11d:	jo     0x41e10a
  41e11f:	and    ecx,ecx
  41e121:	aas    
  41e122:	nop
  41e123:	fldz   
  41e125:	in     al,dx
  41e126:	ror    DWORD PTR [edi+0x559eaaf8],cl
  41e12c:	push   eax
  41e12d:	dec    edi
  41e12e:	lock xor BYTE PTR [esi-0x5f33988c],0xa4
  41e136:	sbb    ebx,DWORD PTR [eax+0x55]
  41e139:	les    ebp,FWORD PTR [eax+0xadf7ab0]
  41e13f:	xor    ebx,DWORD PTR [edi-0x5b931f15]
  41e145:	ins    BYTE PTR es:[edi],dx
  41e146:	pop    edx
  41e147:	sbb    dl,ah
  41e149:	int    0x6e
  41e14b:	xor    BYTE PTR [ecx+0x4c2ee62],bl
  41e151:	retf   
  41e152:	lea    ebx,[ebx-0x4133ce84]
  41e158:	mov    eax,0x9c6523a4
  41e15d:	jl     0x41e0e3
  41e15f:	gs sub esp,ebx
  41e162:	mul    DWORD PTR [ebx+ecx*2+0x21635b72]
  41e169:	push   0xc69502eb
  41e16e:	mov    ebx,DWORD PTR [ebx-0x6f92b2ab]
  41e174:	and    eax,0x376457a7
  41e179:	(bad)  
  41e17a:	jge    0x41e164
  41e17c:	mov    ch,0xa1
  41e17e:	jmp    DWORD PTR [eax+0x18]
  41e181:	dec    esi
  41e182:	sbb    eax,0xcb1e7be3
  41e187:	push   es
  41e188:	cli    
  41e189:	enter  0x3097,0x59
  41e18d:	xlat   BYTE PTR ds:[ebx]
  41e18e:	aam    0xf8
  41e190:	shr    DWORD PTR [ecx],1
  41e192:	mov    edx,0xaf1693b5
  41e197:	jns    0x41e11c
  41e199:	dec    edi
  41e19a:	mov    cl,0xfc
  41e19c:	aas    
  41e19d:	xchg   BYTE PTR [eax],cl
  41e19f:	inc    ebx
  41e1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a1:	jge    0x41e152
  41e1a3:	cdq    
  41e1a4:	inc    ebp
  41e1a5:	jnp    0x41e1f4
  41e1a7:	mov    ds:0x1aa6412,eax
  41e1ac:	jne    0x41e197
  41e1ae:	ins    DWORD PTR es:[edi],dx
  41e1af:	aam    0xad
  41e1b1:	cmp    cl,0xa9
  41e1b4:	paddb  mm7,QWORD PTR [eax+edi*2-0x7008414f]
  41e1bc:	xchg   ecx,eax
  41e1bd:	fprem  
  41e1bf:	lods   eax,DWORD PTR gs:[esi]
  41e1c1:	xor    ah,BYTE PTR [edi+0x5a]
  41e1c4:	and    DWORD PTR [edi+edx*8],0x706870f4
  41e1cb:	jbe    0x41e20f
  41e1cd:	push   ecx
  41e1ce:	je     0x41e172
  41e1d0:	mov    ebx,0x518cfd27
  41e1d5:	mov    ds:0xdce98c0d,eax
  41e1da:	jnp    0x41e1fc
  41e1dc:	test   DWORD PTR [edx*1-0x463389fe],0x348fa520
  41e1e7:	sbb    eax,0x1402ee5d
  41e1ec:	shl    DWORD PTR [eax-0x1b],cl
  41e1ef:	mov    al,0xdb
  41e1f1:	adc    eax,0xd61d2248
  41e1f6:	retf   0xf170
  41e1f9:	mov    ecx,DWORD PTR [ebx-0x7229311f]
  41e1ff:	lea    edi,[eax-0x621db7b4]
  41e205:	lock (bad) 
  41e207:	jbe    0x41e254
  41e209:	and    edi,DWORD PTR [ebx]
  41e20b:	mov    al,ds:0xa2f70d18
  41e210:	jns    0x41e1de
  41e212:	rcl    DWORD PTR [ebx-0x25c8acb8],cl
  41e218:	into   
  41e219:	ja     0x41e19d
  41e21b:	xchg   DWORD PTR [ebx+eiz*4],ecx
  41e21e:	lds    esi,FWORD PTR [esi]
  41e220:	inc    esi
  41e221:	cmp    dh,cl
  41e223:	jmp    0x6e04dc08
  41e228:	or     eax,ebp
  41e22a:	jle    0x41e1f2
  41e22c:	mov    edi,0x8e8f2e0
  41e231:	or     bl,BYTE PTR ds:0x200656bf
  41e237:	pop    ecx
  41e238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e239:	and    eax,0x6977c2e
  41e23e:	xchg   esp,eax
  41e23f:	pop    edi
  41e240:	retf   0x10bd
  41e243:	test   BYTE PTR [esi+0x74fe28dd],dl
  41e249:	cwde   
  41e24a:	dec    eax
  41e24b:	int    0x54
  41e24d:	mov    bh,0xe3
  41e24f:	daa    
  41e250:	xor    al,0x8c
  41e252:	or     BYTE PTR [eax+esi*4+0x46],dl
  41e256:	mov    ?,WORD PTR [eax+ecx*2+0x61d3d5e3]
  41e25d:	mov    BYTE PTR [ecx-0x318fa42a],cl
  41e263:	and    al,BYTE PTR [esi+ecx*2+0x521311d9]
  41e26a:	and    BYTE PTR [edx+0x1f],0x2f
  41e26e:	push   esp
  41e26f:	scas   al,BYTE PTR es:[edi]
  41e270:	jge    0x41e263
  41e272:	xor    dh,dh
  41e274:	fdivr  st,st(4)
  41e276:	popa   
  41e277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e278:	inc    ebx
  41e279:	add    dh,BYTE PTR [edx]
  41e27b:	das    
  41e27c:	and    BYTE PTR [esi+0x27],dh
  41e27f:	dec    edi
  41e280:	dec    ecx
  41e281:	(bad)  
  41e282:	hlt    
  41e283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e284:	cmc    
  41e285:	cwde   
  41e286:	into   
  41e287:	(bad)  
  41e288:	cli    
  41e289:	dec    esi
  41e28a:	call   0xda3f:0xd2c7a439
  41e291:	pop    edi
  41e292:	sbb    edx,0x56f4da9e
  41e298:	gs cmp al,0x72
  41e29b:	daa    
  41e29c:	hlt    
  41e29d:	pop    eax
  41e29e:	pop    ecx
  41e29f:	pop    esi
  41e2a0:	imul   esi,DWORD PTR [ebp-0x66b6c57b],0xffffffa6
  41e2a7:	stos   BYTE PTR es:[edi],al
  41e2a8:	adc    dl,BYTE PTR [esi+edi*4+0xc]
  41e2ac:	fs stc 
  41e2ae:	fild   DWORD PTR [esi-0x37bb72b5]
  41e2b4:	push   edi
  41e2b5:	or     esi,DWORD PTR [edx-0x157748aa]
  41e2bb:	addr16 and al,0x5f
  41e2be:	sbb    esp,ebx
  41e2c0:	outs   dx,DWORD PTR ds:[esi]
  41e2c1:	push   ecx
  41e2c2:	rcl    ch,1
  41e2c4:	sub    cl,BYTE PTR [edi-0xc12c3e7]
  41e2ca:	rcl    BYTE PTR [edx],0x5e
  41e2cd:	(bad)  [esi]
  41e2cf:	ja     0x41e31f
  41e2d1:	mov    ebp,0xa33d685e
  41e2d6:	std    
  41e2d7:	adc    DWORD PTR ds:0x3b462c4d,0x58
  41e2de:	mov    eax,0xa267ac03
  41e2e3:	mov    ecx,es
  41e2e5:	jge    0x41e2d3
  41e2e7:	das    
  41e2e8:	xchg   edx,eax
  41e2e9:	fild   QWORD PTR [edi+0x6c]
  41e2ec:	ficomp WORD PTR [ecx+0x6a]
  41e2ef:	jecxz  0x41e35c
  41e2f1:	adc    dh,dh
  41e2f3:	xchg   esi,eax
  41e2f4:	adc    DWORD PTR [ebp+0x7],esi
  41e2f7:	sub    BYTE PTR [ebp+0x670d826d],bl
  41e2fd:	or     cl,BYTE PTR [ecx+esi*4]
  41e300:	jno    0x41e2b6
  41e302:	cdq    
  41e303:	ror    BYTE PTR [esi+0x0],1
	...
  41e311:	outs   dx,BYTE PTR ds:[esi]
  41e312:	idiv   DWORD PTR [ebx-0x1924497]
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	fisttp WORD PTR [edi+edi*4]
  41e320:	jmp    0x3ac:0x15e7d
  41e327:	add    BYTE PTR [eax],al
  41e329:	jns    0x41e2e1
  41e32b:	or     BYTE PTR [ebp+edx*2+0x5619d73c],0xcb
  41e333:	(bad)  
  41e334:	push   edx
  41e335:	dec    ebx
  41e336:	icebp  
  41e337:	std    
  41e338:	cwde   
  41e339:	int3   
  41e33a:	jne    0x41e3b9
  41e33c:	(bad)  
  41e33d:	dec    ecx
  41e33e:	mov    BYTE PTR [esi-0x264ac725],bl
  41e344:	div    BYTE PTR [edx-0xc84405d]
  41e34a:	daa    
  41e34b:	lahf   
  41e34c:	sub    eax,0xf8be323b
  41e351:	mov    dh,ah
  41e353:	arpl   WORD PTR [edi],cx
  41e355:	cmp    dl,BYTE PTR [edx]
  41e357:	mov    bh,BYTE PTR [ebx]
  41e359:	lods   al,BYTE PTR ds:[esi]
  41e35a:	stos   DWORD PTR es:[edi],eax
  41e35b:	jns    0x41e393
  41e35d:	repz mov ds:0xc19a24f3,al
  41e363:	fwait
  41e364:	stc    
  41e365:	jb     0x41e2f2
  41e367:	add    eax,0xbbf896df
  41e36c:	stos   BYTE PTR es:[edi],al
  41e36d:	ror    BYTE PTR [esi+0x7e],cl
  41e370:	nop
  41e371:	repz push edi
  41e373:	sub    eax,0x4401d19c
  41e378:	and    al,0x3a
  41e37a:	xor    ebx,DWORD PTR [ecx+edi*2-0x3e]
  41e37e:	jle    0x41e323
  41e380:	sbb    eax,0xf68c3740
  41e385:	je     0x41e356
  41e387:	imul   ebp,DWORD PTR [esi],0x9aab39f
  41e38d:	icebp  
  41e38e:	add    eax,0xc0038b2f
  41e393:	popa   
  41e394:	mov    bl,0x37
  41e396:	push   edx
  41e397:	and    BYTE PTR [edi+0x4d0d2444],0xd4
  41e39e:	mov    DWORD PTR [ecx-0x7e4ce913],edx
  41e3a4:	sbb    al,0x83
  41e3a6:	pop    esp
  41e3a7:	je     0x41e3a6
  41e3a9:	popf   
  41e3aa:	xchg   sp,ax
  41e3ac:	add    bl,bh
  41e3ae:	retf   
  41e3af:	pop    eax
  41e3b0:	push   esp
  41e3b1:	in     al,0x34
  41e3b3:	mov    esp,0x9bfbbf59
  41e3b8:	stc    
  41e3b9:	lahf   
  41e3ba:	retf   
  41e3bb:	pop    ss
  41e3bc:	and    eax,0x8fc79cd6
  41e3c1:	sub    al,0x1c
  41e3c3:	xchg   edi,eax
  41e3c4:	pusha  
  41e3c5:	jle    0x41e352
  41e3c7:	in     al,0xcb
  41e3c9:	lea    ebx,[ecx+0x5825054a]
  41e3cf:	pusha  
  41e3d0:	adc    al,0x63
  41e3d2:	jmp    0x173c:0x21d5d57e
  41e3d9:	rcr    edx,cl
  41e3db:	lds    esi,FWORD PTR [ebp+0x11]
  41e3de:	fld    st(7)
  41e3e0:	data16 stos BYTE PTR es:[edi],al
  41e3e2:	(bad)  
  41e3e3:	ficomp DWORD PTR ds:0x435c7186
  41e3e9:	outs   dx,BYTE PTR ds:[esi]
  41e3ea:	(bad)  
  41e3eb:	jg     0x41e462
  41e3ed:	shl    ch,cl
  41e3ef:	jae    0x41e432
  41e3f1:	jmp    0x41e40e
  41e3f3:	or     edx,ebp
  41e3f5:	mov    eax,ds:0xd4d7ac5e
  41e3fa:	mov    edx,0x90e52f9d
  41e3ff:	stos   DWORD PTR es:[edi],eax
  41e400:	clc    
  41e401:	mov    dl,BYTE PTR [ebx-0x494c5c98]
  41e407:	mov    al,0xbe
  41e409:	jl     0x41e41a
  41e40b:	adc    DWORD PTR [ecx],edx
  41e40d:	loope  0x41e417
  41e40f:	mov    al,ds:0xf8b0ad47
  41e414:	les    esi,FWORD PTR [eax+0x67]
  41e417:	(bad)  
  41e418:	dec    ebx
  41e419:	push   esp
  41e41a:	addr16 xchg esi,eax
  41e41c:	ucomiss xmm3,DWORD PTR [edx+0x10d87761]
  41e423:	pop    ebp
  41e424:	inc    eax
  41e425:	jae    0x41e3ff
  41e427:	std    
  41e428:	and    DWORD PTR [eax],ebp
  41e42a:	cmp    ch,BYTE PTR [edx]
  41e42c:	loop   0x41e449
  41e42e:	pusha  
  41e42f:	(bad)  
  41e430:	je     0x41e48c
  41e432:	cmp    al,0xd3
  41e434:	pop    edx
  41e435:	loope  0x41e418
  41e437:	push   es
  41e438:	out    dx,eax
  41e439:	(bad)  
  41e43a:	mov    bl,0x1f
  41e43c:	sub    bl,bh
  41e43e:	ret    0xb09f
  41e441:	nop
  41e442:	div    esp
  41e444:	jne    0x41e47b
  41e446:	retf   
  41e447:	mov    al,0xbf
  41e449:	adc    DWORD PTR [eax],ebx
  41e44b:	shl    BYTE PTR [edi],cl
  41e44d:	mov    WORD PTR [edx],?
  41e44f:	je     0x41e400
  41e451:	mov    ds:0xbb209f51,al
  41e456:	shl    ecx,cl
  41e458:	retf   
  41e459:	retf   0xd36a
  41e45c:	pop    gs
  41e45e:	lods   al,BYTE PTR ds:[esi]
  41e45f:	fs (bad) 
  41e462:	ret    0xb13d
  41e465:	jecxz  0x41e411
  41e467:	out    0xfa,eax
  41e469:	test   DWORD PTR [ecx+0x40],edi
  41e46c:	sub    al,0x2d
  41e46e:	out    dx,eax
  41e46f:	dec    eax
  41e470:	call   0xbf1d:0x4de0a007
  41e477:	inc    edi
  41e478:	call   0xe4a6:0x3aa4ca20
  41e47f:	add    DWORD PTR [esi],eax
  41e481:	leave  
  41e482:	inc    esp
  41e483:	lods   eax,DWORD PTR ds:[esi]
  41e484:	push   ecx
  41e485:	ror    BYTE PTR [ebp-0x21],cl
  41e488:	shr    bh,cl
  41e48a:	push   edi
  41e48b:	hlt    
  41e48c:	mov    ds:0x92b21b5a,eax
  41e491:	push   0x65
  41e493:	mov    al,0x13
  41e495:	test   eax,0xe9e26b45
  41e49a:	mov    dl,0xe0
  41e49c:	jae    0x41e4e6
  41e49e:	xchg   esp,eax
  41e49f:	adc    eax,0x68666dfa
  41e4a4:	neg    DWORD PTR [edi+0x19281bf7]
  41e4aa:	and    ebp,ebx
  41e4ac:	xchg   ecx,eax
  41e4ad:	out    0x21,al
  41e4af:	test   al,0x7d
  41e4b1:	mov    ebx,0xaba24b71
  41e4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b7:	stos   DWORD PTR es:[edi],eax
  41e4b8:	fwait
  41e4b9:	mov    al,0xb2
  41e4bb:	lahf   
  41e4bc:	cmp    BYTE PTR [esi-0x37bceea8],al
  41e4c2:	jmp    0xbebb:0xf6a427fc
  41e4c9:	and    DWORD PTR [edi-0x570519b],edi
  41e4cf:	sub    DWORD PTR [ebx+0x20],0x6f
  41e4d3:	sbb    DWORD PTR [esp-0x40],edx
  41e4d7:	push   esp
  41e4d8:	mov    cl,0x5d
  41e4da:	push   ebp
  41e4db:	cmp    BYTE PTR [edx-0x3ff493b3],ch
  41e4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e2:	dec    esp
  41e4e3:	shl    esi,1
  41e4e5:	mov    bh,BYTE PTR [edx+eiz*4]
  41e4e8:	test   cl,al
  41e4ea:	cdq    
  41e4eb:	pop    ds
  41e4ec:	(bad)
  41e4ef:	stos   DWORD PTR es:[edi],eax
  41e4f0:	shl    BYTE PTR [ebx-0x1b],cl
  41e4f3:	test   BYTE PTR [ecx-0x16b0feb6],ah
  41e4f9:	inc    eax
  41e4fa:	into   
  41e4fb:	jle    0x41e525
  41e4fd:	inc    eax
  41e4fe:	outs   dx,BYTE PTR ds:[esi]
  41e4ff:	test   al,0xb2
  41e501:	leave  
  41e502:	in     eax,dx
  41e503:	test   BYTE PTR [edx-0x26],al
  41e506:	or     edx,ebp
  41e508:	sbb    esi,DWORD PTR [ebx]
  41e50a:	(bad)  
  41e50c:	xor    al,0x33
  41e50e:	call   0xd5d60a19
  41e513:	pop    ss
  41e514:	sbb    al,0xd3
  41e517:	add    DWORD PTR [ebp-0x6],edx
  41e51a:	aam    0x99
  41e51c:	mov    ebx,0x47f3b9ac
  41e521:	in     al,dx
  41e522:	pop    ss
  41e523:	enter  0xe40c,0x67
  41e527:	loope  0x41e579
  41e529:	xchg   BYTE PTR [ebp+eiz*2+0x311b73e],dh
  41e530:	call   0x8136:0x8973f362
  41e537:	sbb    al,0x3c
  41e539:	xor    BYTE PTR [edi],dh
  41e53b:	iret   
  41e53c:	jbe    0x41e4cb
  41e53e:	add    BYTE PTR [ebp+0x2],bh
  41e541:	mov    bl,0x92
  41e543:	rol    BYTE PTR [edi+0x26],cl
  41e546:	mov    ecx,0x3b35e107
  41e54b:	push   edx
  41e54c:	cli    
  41e54d:	push   0x21921bab
  41e552:	jnp    0x41e519
  41e554:	sub    BYTE PTR [edi],0x63
  41e557:	jnp    0x41e559
  41e559:	call   0x580f2208
  41e55e:	dec    ebx
  41e55f:	sbb    edi,eax
  41e561:	cmp    ch,BYTE PTR [edx+0x5128e1ad]
  41e567:	jno    0x41e5a0
  41e569:	push   ecx
  41e56a:	xchg   ebx,eax
  41e56b:	cwde   
  41e56c:	xor    ebp,DWORD PTR [ebp+0x67]
  41e56f:	add    BYTE PTR [edx+ebp*4],0x11
  41e573:	fcom   QWORD PTR [edx-0x37]
  41e576:	jecxz  0x41e53b
  41e578:	xchg   edi,eax
  41e579:	add    bl,0x93
  41e57c:	sar    DWORD PTR [eax],0x38
  41e57f:	ja     0x41e5c9
  41e581:	(bad)  
  41e582:	jnp    0x41e5c7
  41e584:	push   edx
  41e585:	clc    
  41e586:	inc    ebx
  41e587:	adc    DWORD PTR [ecx+esi*8],esp
  41e58a:	adc    dh,BYTE PTR [esi+0x4772eb32]
  41e590:	mov    edi,0x44e6fce9
  41e595:	mov    dl,0x1
  41e597:	aaa    
  41e598:	ins    BYTE PTR es:[edi],dx
  41e599:	sar    BYTE PTR [eax],0x99
  41e59c:	and    dh,BYTE PTR [edx-0x39]
  41e59f:	js     0x41e5db
  41e5a1:	dec    edx
  41e5a2:	outs   dx,BYTE PTR ds:[esi]
  41e5a3:	out    dx,al
  41e5a4:	mov    bh,BYTE PTR [edx-0x7034fa3c]
  41e5aa:	add    BYTE PTR [ecx-0x6468754e],cl
  41e5b0:	stos   BYTE PTR es:[edi],al
  41e5b1:	sub    eax,0x889f960d
  41e5b6:	popf   
  41e5b7:	jnp    0x41e5ac
  41e5b9:	mov    ds:0x5e2a3807,al
  41e5be:	outs   dx,DWORD PTR ds:[esi]
  41e5bf:	xor    al,0x69
  41e5c1:	stos   BYTE PTR es:[edi],al
  41e5c2:	js     0x41e608
  41e5c4:	pop    eax
  41e5c5:	repz adc edi,DWORD PTR [eax+0x42]
  41e5c9:	lock jmp 0x21e6b4da
  41e5cf:	push   0xd
  41e5d1:	or     DWORD PTR [eax-0x32],esi
  41e5d4:	icebp  
  41e5d5:	retf   0x6656
  41e5d8:	mov    esp,0xfd586320
  41e5dd:	cmp    DWORD PTR [edx-0x7c],ebx
  41e5e0:	jp     0x41e5a7
  41e5e2:	and    DWORD PTR [ecx],ebx
  41e5e4:	sub    DWORD PTR [ebx+0x79b1f36a],esi
  41e5ea:	mov    ecx,ebp
  41e5ec:	mov    edi,0xe5d74076
  41e5f1:	xchg   ebp,eax
  41e5f2:	push   esi
  41e5f3:	mov    al,ds:0xdeccff70
  41e5f8:	iret   
  41e5f9:	clc    
  41e5fa:	sar    BYTE PTR ds:0x612d982c,cl
  41e600:	xchg   ebx,eax
  41e601:	mov    ?,eax
  41e603:	dec    DWORD PTR [edi]
  41e605:	aad    0xc9
  41e607:	push   ebp
  41e608:	sub    BYTE PTR [ecx+0x79],cl
  41e60b:	sub    DWORD PTR [ebx],edx
  41e60d:	inc    ecx
  41e60e:	out    dx,al
  41e60f:	mov    edi,0xc5f48c9d
  41e614:	adc    esi,ebp
  41e616:	ds pop edx
  41e618:	push   cs
  41e619:	fwait
  41e61a:	jp     0x41e5d4
  41e61c:	lods   eax,DWORD PTR ds:[esi]
  41e61d:	out    dx,al
  41e61e:	cmc    
  41e61f:	(bad)  [edx]
  41e621:	sahf   
  41e622:	xor    DWORD PTR [ebx+0x7e23c364],0x7f49e616
  41e62c:	stos   BYTE PTR es:[edi],al
  41e62d:	mov    BYTE PTR [edx+0x45758f65],bh
  41e633:	ja     0x41e5eb
  41e635:	cld    
  41e636:	jmp    0x41e682
  41e638:	not    BYTE PTR [eax]
  41e63a:	inc    ecx
  41e63b:	jle    0x41e5f6
  41e63d:	xchg   edi,eax
  41e63e:	cmp    DWORD PTR [edi-0x1a92be52],ebp
  41e644:	jo     0x41e5ed
  41e646:	clc    
  41e647:	dec    edi
  41e648:	pop    esi
  41e649:	rcl    DWORD PTR [edi+0x5],1
  41e64c:	mov    DWORD PTR [eax],0x91f42b90
  41e652:	cmp    al,0xfa
  41e654:	or     esp,esp
  41e656:	packsswb mm1,mm5
  41e659:	pop    ss
  41e65a:	aaa    
  41e65b:	frstor [esp+ebp*2+0x6]
  41e65f:	addr16 cdq 
  41e661:	and    eax,DWORD PTR [ebp+0x5f]
  41e664:	pop    ebp
  41e665:	sub    esp,DWORD PTR [ebp-0x4c]
  41e668:	mov    dh,0xb9
  41e66a:	rol    edx,1
  41e66c:	(bad)  
  41e66d:	mov    bl,0x1
  41e66f:	xchg   esi,eax
  41e670:	adc    BYTE PTR [ecx-0x1d8343e0],ch
  41e676:	int3   
  41e677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e678:	inc    edi
  41e679:	sbb    BYTE PTR [esp+eiz*8+0x23],0x25
  41e67e:	push   cs
  41e67f:	or     ecx,edx
  41e681:	gs push ecx
  41e683:	xchg   BYTE PTR ds:0xa64f5928,ah
  41e689:	ficomp DWORD PTR [eax]
  41e68b:	leave  
  41e68c:	test   al,0x4c
  41e68e:	mov    cl,0x74
  41e690:	nop
  41e691:	lds    ebp,FWORD PTR [edx+esi*4]
  41e694:	in     eax,dx
  41e695:	pop    ds
  41e696:	mov    ebx,0x12f75059
  41e69b:	retf   
  41e69c:	lods   eax,DWORD PTR ds:[esi]
  41e69d:	dec    ebx
  41e69e:	je     0x41e6fe
  41e6a0:	mov    ds:0xb5c05a76,eax
  41e6a5:	adc    bh,BYTE PTR [ebx]
  41e6a7:	or     dh,BYTE PTR [ecx+0xf]
  41e6aa:	sub    eax,0x53a3aa23
  41e6af:	scas   eax,DWORD PTR es:[edi]
  41e6b0:	or     DWORD PTR [ebp+0xc17d391],esi
  41e6b6:	pop    ebx
  41e6b7:	call   0x2eed:0x1a1b04df
  41e6be:	and    eax,0xbe6f5599
  41e6c3:	cmp    eax,ebp
  41e6c5:	xor    BYTE PTR [edx+edx*2-0x45],dl
  41e6c9:	sbb    al,al
  41e6cb:	sbb    esi,ebp
  41e6cd:	inc    eax
  41e6ce:	sar    dl,0x2a
  41e6d1:	and    esi,ecx
  41e6d3:	jbe    0x41e6cf
	...
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0xf11ca75d
  41e6f0:	mov    eax,0x16229
  41e6f5:	lods   al,BYTE PTR ds:[esi]
  41e6f6:	add    eax,DWORD PTR [eax]
  41e6f8:	add    BYTE PTR [ebx-0x75],bh
  41e6fb:	dec    edx
  41e6fc:	sahf   
  41e6fd:	inc    ebp
  41e6fe:	add    dl,BYTE PTR [ecx+0x35]
  41e701:	es in  eax,0xc5
  41e704:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e706:	push   ebp
  41e707:	mov    ecx,0x35cfd9b4
  41e70c:	rcr    DWORD PTR [esp+edi*1+0x49715564],cl
  41e713:	sub    BYTE PTR [esi-0x59caa0db],ch
  41e719:	push   DWORD PTR [ebp+0x1282b207]
  41e71f:	pusha  
  41e720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e721:	ins    DWORD PTR es:[edi],dx
  41e722:	sbb    DWORD PTR [edx+0x6],esi
  41e725:	jmp    FWORD PTR [eiz*8-0x6f80d193]
  41e72c:	mov    dl,0xee
  41e72e:	cmp    al,0x81
  41e730:	cmp    edx,ecx
  41e732:	dec    esi
  41e733:	ins    BYTE PTR es:[edi],dx
  41e734:	xchg   edx,eax
  41e735:	jmp    0x41e731
  41e737:	and    al,0x59
  41e739:	(bad)  
  41e73a:	xchg   ecx,eax
  41e73b:	aad    0xac
  41e73d:	sti    
  41e73e:	pop    edx
  41e73f:	xchg   edi,eax
  41e740:	pusha  
  41e741:	mov    bh,0x71
  41e743:	int3   
  41e744:	and    eax,0xc56f0d7c
  41e749:	sub    DWORD PTR [edx],ecx
  41e74b:	dec    edx
  41e74c:	or     al,0x6f
  41e74e:	add    eax,0x276596e6
  41e753:	pop    ebp
  41e754:	jns    0x41e701
  41e756:	mov    WORD PTR [esi],?
  41e758:	push   ebp
  41e759:	ret    
  41e75a:	scas   eax,DWORD PTR es:[edi]
  41e75b:	addr16 xchg ebx,eax
  41e75d:	rcr    BYTE PTR [eax],cl
  41e75f:	dec    eax
  41e760:	push   ebp
  41e761:	ret    
  41e762:	loop   0x41e7cf
  41e764:	inc    eax
  41e765:	and    bl,BYTE PTR [ecx+0x4fd814e4]
  41e76b:	or     DWORD PTR [esi-0x61],0x53
  41e76f:	jo     0x41e721
  41e771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e772:	rol    dl,cl
  41e774:	int    0x44
  41e776:	cli    
  41e777:	pop    edx
  41e778:	stos   DWORD PTR es:[edi],eax
  41e779:	add    ebx,edx
  41e77b:	xlat   BYTE PTR ds:[ebx]
  41e77c:	push   esi
  41e77d:	call   0x203d6a9f
  41e782:	push   0x1f
  41e784:	add    ch,cl
  41e786:	test   DWORD PTR [eax-0xdc5a3a9],ecx
  41e78c:	add    eax,0x7519c670
  41e791:	test   al,0x45
  41e793:	mov    al,0xd1
  41e795:	or     dh,BYTE PTR ds:0x1573bd16
  41e79b:	xchg   ecx,eax
  41e79c:	scas   eax,DWORD PTR es:[edi]
  41e79d:	jmp    DWORD PTR [eax+0x31909917]
  41e7a3:	retf   
  41e7a4:	dec    eax
  41e7a5:	jnp    0x41e7f4
  41e7a7:	mov    gs,WORD PTR [edi+0xe]
  41e7aa:	cmp    al,0x47
  41e7ac:	mov    dh,0xe8
  41e7ae:	lea    ecx,[edi-0x30e502c7]
  41e7b4:	es (bad) 
  41e7b6:	pop    ds
  41e7b7:	dec    ebp
  41e7b8:	pop    es
  41e7b9:	sbb    dl,0x5c
  41e7bc:	xor    edx,esp
  41e7be:	jl     0x41e801
  41e7c0:	mov    ecx,0xffda187f
  41e7c5:	leave  
  41e7c6:	fwait
  41e7c7:	jns    0x41e755
  41e7c9:	cmp    eax,0xf82ac733
  41e7ce:	xor    ebp,esp
  41e7d0:	sbb    edx,esp
  41e7d2:	push   esi
  41e7d3:	sub    BYTE PTR [edx-0x45f26ec6],ch
  41e7d9:	xchg   ebx,eax
  41e7da:	test   esp,0x4d38e1c0
  41e7e0:	dec    ebx
  41e7e1:	popa   
  41e7e2:	add    eax,0x24f6930b
  41e7e7:	jne    0x41e815
  41e7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ea:	add    al,0xfb
  41e7ec:	hlt    
  41e7ed:	or     ch,BYTE PTR [edx]
  41e7ef:	jle    0x41e815
  41e7f1:	aas    
  41e7f2:	mov    ds:0x39705341,eax
  41e7f7:	jb     0x41e83d
  41e7f9:	mov    esi,0x21c4b562
  41e7fe:	sbb    DWORD PTR ds:0x8a814d03,ebp
  41e804:	mov    bl,0x68
  41e806:	adc    esp,DWORD PTR [eax]
  41e808:	ret    
  41e809:	mul    DWORD PTR [ecx-0x78534c8]
  41e80f:	mov    WORD PTR [edi+esi*1],gs
  41e812:	adc    al,0x22
  41e814:	(bad)  
  41e815:	mov    ch,0x6b
  41e817:	out    dx,eax
  41e818:	dec    eax
  41e819:	xor    eax,0x4b495360
  41e81e:	(bad)  
  41e81f:	clc    
  41e820:	sub    al,BYTE PTR [edx]
  41e822:	mov    ebx,DWORD PTR [edx+0x41a096e4]
  41e828:	push   edi
  41e829:	adc    al,0xe9
  41e82b:	lods   al,BYTE PTR ds:[esi]
  41e82c:	xchg   esp,eax
  41e82d:	cli    
  41e82e:	push   0x2a
  41e830:	mov    esi,gs
  41e832:	imul   edx,DWORD PTR [edi-0x1f08c6ac],0xffffffc9
  41e839:	rol    dl,cl
  41e83b:	fdiv   DWORD PTR [esi-0x73]
  41e83e:	xor    al,0x27
  41e840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e841:	aam    0xc1
  41e843:	jb     0x41e84f
  41e845:	sar    BYTE PTR [ecx],cl
  41e847:	mov    edx,0xd1421e3a
  41e84c:	popf   
  41e84d:	aaa    
  41e84e:	mov    edi,0x6f368cb
  41e853:	mov    WORD PTR [bx+0x15fb],ds
  41e858:	data16 arpl WORD PTR [edx],dx
  41e85b:	imul   ecx,DWORD PTR [esi],0x9a3c6cd1
  41e861:	arpl   WORD PTR [ebx+0x6bddbc93],si
  41e867:	loop   0x41e815
  41e869:	push   cs
  41e86a:	imul   ebp,DWORD PTR [ebx],0xffffffd3
  41e86d:	mov    esp,DWORD PTR [ecx-0x4203dd4]
  41e873:	lds    edi,FWORD PTR ds:0x62ee7bba
  41e879:	dec    esi
  41e87a:	pop    edi
  41e87b:	mov    edi,0xba716907
  41e880:	stc    
  41e881:	mov    dh,0xdd
  41e883:	jecxz  0x41e86d
  41e885:	into   
  41e886:	jle    0x41e810
  41e888:	dec    esp
  41e889:	rcr    BYTE PTR [esi],0xab
  41e88c:	scas   eax,DWORD PTR es:[edi]
  41e88d:	out    dx,al
  41e88e:	leave  
  41e88f:	or     edx,esp
  41e891:	mov    esp,0x363aa6f6
  41e896:	lea    esp,[eax-0x6e]
  41e899:	or     dh,BYTE PTR [edx]
  41e89b:	(bad)  
  41e89d:	sar    BYTE PTR [bx+di-0x3a],cl
  41e8a1:	rcl    BYTE PTR [esi+edx*2],0xf0
  41e8a5:	xor    ecx,ebx
  41e8a7:	pop    ds
  41e8a8:	test   al,0x21
  41e8aa:	out    0xaa,eax
  41e8ac:	inc    eax
  41e8ad:	sub    DWORD PTR [edi+0x47ca676b],ebx
  41e8b3:	in     al,dx
  41e8b4:	gs jmp 0xf4628d8b
  41e8ba:	mov    ds:0x4f55f9df,eax
  41e8bf:	call   FWORD PTR [ebx]
  41e8c1:	rcr    BYTE PTR [edx+edi*1-0x18],0xef
  41e8c6:	sbb    BYTE PTR [edx-0x51],ch
  41e8c9:	(bad)  
  41e8ca:	mov    bh,0xf5
  41e8cc:	std    
  41e8cd:	popa   
  41e8ce:	jmp    0x75a303aa
  41e8d3:	xor    edi,esi
  41e8d5:	push   es
  41e8d6:	fsubr  st,st(3)
  41e8d8:	fdiv   DWORD PTR [eax]
  41e8da:	xchg   DWORD PTR [edx],ebx
  41e8dc:	mov    ecx,0xecab40a5
  41e8e1:	and    DWORD PTR [ecx],0x930efa82
  41e8e7:	lods   eax,DWORD PTR ds:[esi]
  41e8e8:	out    0x4b,al
  41e8ea:	jg     0x41e8b4
  41e8ec:	inc    ebp
  41e8ed:	mul    DWORD PTR [esi-0x2d]
  41e8f0:	daa    
  41e8f1:	sub    al,0x53
  41e8f3:	xor    al,0xb0
  41e8f5:	out    dx,eax
  41e8f6:	jne    0x41e93d
  41e8f8:	dec    esp
  41e8f9:	idiv   DWORD PTR [ecx-0x2c]
  41e8fc:	cmp    cl,BYTE PTR [eax+ebx*8-0xcc73843]
  41e903:	popa   
  41e904:	dec    edi
  41e905:	sub    DWORD PTR [edi+0x664d83d8],edx
  41e90b:	pop    ebp
  41e90c:	sahf   
  41e90d:	fadd   st,st(5)
  41e90f:	mov    bl,0xfd
  41e911:	ins    BYTE PTR es:[edi],dx
  41e912:	mov    dl,0x6c
  41e914:	retf   
  41e915:	push   ebp
  41e916:	mov    cl,0x61
  41e918:	and    BYTE PTR [esi+0x6],al
  41e91b:	int3   
  41e91c:	xor    edx,DWORD PTR [ebx-0x679cf72a]
  41e922:	lahf   
  41e923:	sub    eax,0x842e4e57
  41e928:	adc    al,0x59
  41e92a:	fld    TBYTE PTR [ebp+0x14]
  41e92d:	(bad)  [edx]
  41e92f:	inc    DWORD PTR [edi-0x59]
  41e932:	out    dx,al
  41e933:	mov    esp,0xf3d9c63
  41e938:	fild   WORD PTR [esi]
  41e93a:	push   esi
  41e93b:	fild   WORD PTR ds:0xaf1f651a
  41e941:	test   BYTE PTR [edi-0x73191782],ah
  41e947:	add    eax,0x4658c1ea
  41e94c:	int3   
  41e94d:	mov    cl,0xa6
  41e94f:	ja     0x41e927
  41e951:	stc    
  41e952:	mov    WORD PTR [ebx+0x45],?
  41e955:	or     eax,0xb61f5a7
  41e95a:	sbb    ebp,esp
  41e95c:	add    al,0x77
  41e95e:	push   edx
  41e95f:	into   
  41e960:	sub    eax,0xc2255022
  41e965:	mov    eax,DWORD PTR [edx+0x1e]
  41e968:	or     ah,BYTE PTR [ecx-0x43]
  41e96b:	pop    esp
  41e96c:	fst    QWORD PTR [ecx]
  41e96e:	jecxz  0x41e989
  41e970:	cmc    
  41e971:	xor    ebx,DWORD PTR [ebp-0x34]
  41e974:	in     eax,0x73
  41e976:	push   eax
  41e977:	cmp    BYTE PTR [ebp+0x4b97c6b4],dl
  41e97d:	test   BYTE PTR [esi+0x7d],cl
  41e980:	out    0x88,eax
  41e982:	sub    al,BYTE PTR [edi+esi*8-0x27e14f1f]
  41e989:	sbb    eax,0xa489da72
  41e98e:	jp     0x41e9f5
  41e990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e991:	aad    0xf0
  41e993:	inc    DWORD PTR [esi+esi*4]
  41e996:	adc    al,0xc8
  41e998:	sub    al,al
  41e99a:	cli    
  41e99b:	ret    0x4d2d
  41e99e:	sbb    cl,BYTE PTR [esi+edi*1]
  41e9a1:	pop    esp
  41e9a2:	jae    0x41e966
  41e9a4:	or     dl,BYTE PTR [eax]
  41e9a6:	stc    
  41e9a7:	imul   eax,edi,0xfc10cb65
  41e9ad:	(bad)  
  41e9ae:	je     0x41e9a9
  41e9b0:	pop    ebx
  41e9b1:	lahf   
  41e9b2:	(bad)  
  41e9b3:	retf   0x24bb
  41e9b6:	mov    al,ds:0x3703abaa
  41e9bb:	popf   
  41e9bc:	stos   DWORD PTR es:[edi],eax
  41e9bd:	hlt    
  41e9be:	inc    ebx
  41e9bf:	xor    DWORD PTR [edx-0x2f71a2ea],ecx
  41e9c5:	xor    eax,0xa1ea71e9
  41e9ca:	iret   
  41e9cb:	jecxz  0x41e9d1
  41e9cd:	mov    ch,0xd2
  41e9cf:	inc    esp
  41e9d0:	rol    BYTE PTR [ebx-0x1ad1bef3],0xf
  41e9d7:	sbb    BYTE PTR [eax],bh
  41e9d9:	jne    0x41e980
  41e9db:	push   esi
  41e9dc:	jecxz  0x41ea13
  41e9de:	repnz xlat BYTE PTR ds:[ebx]
  41e9e0:	add    dl,BYTE PTR ds:0xf6150054
  41e9e6:	add    bl,BYTE PTR [ebx+ebx*8]
  41e9e9:	sbb    edi,DWORD PTR [esi+0x63004a2]
  41e9ef:	fild   QWORD PTR [esi]
  41e9f1:	inc    esi
  41e9f2:	and    al,0x82
  41e9f4:	xor    al,0xb7
  41e9f6:	aam    0x7b
  41e9f8:	sub    ch,BYTE PTR [edi-0x4c07992b]
  41e9fe:	shl    ecx,cl
  41ea00:	dec    eax
  41ea01:	adc    ch,BYTE PTR [ecx-0x54]
  41ea04:	int    0x8d
  41ea06:	hlt    
  41ea07:	pop    ecx
  41ea08:	cwde   
  41ea09:	sub    dl,bh
  41ea0b:	push   cs
  41ea0c:	adc    ebx,ebx
  41ea0e:	xor    cl,BYTE PTR [edx]
  41ea10:	xchg   edi,eax
  41ea11:	in     al,dx
  41ea12:	mov    BYTE PTR [eax+0x38],0x22
  41ea16:	adc    BYTE PTR [edi+0x1de0a08e],bl
  41ea1c:	push   edi
  41ea1d:	pop    es
  41ea1e:	cs test eax,0xbe3ded65
  41ea24:	mov    eax,ds:0x331ebb6b
  41ea29:	push   eax
  41ea2a:	sub    al,0x14
  41ea2c:	mov    ds:0x89b735a9,eax
  41ea31:	test   al,0x7a
  41ea33:	add    eax,0x7d754d09
  41ea38:	inc    eax
  41ea39:	popf   
  41ea3a:	scas   al,BYTE PTR es:[edi]
  41ea3b:	nop
  41ea3c:	jnp    0x41ea05
  41ea3e:	cdq    
  41ea3f:	jle    0x41ea8d
  41ea41:	lds    eax,FWORD PTR [ebp+0x0]
  41ea44:	lahf   
  41ea45:	or     BYTE PTR [ebx+0x7f7001e9],bh
  41ea4b:	add    eax,0x16030ffd
  41ea50:	xchg   esi,eax
  41ea51:	hlt    
  41ea52:	dec    ecx
  41ea53:	int3   
  41ea54:	cwde   
  41ea55:	or     dh,BYTE PTR [esi+0x381d4cea]
  41ea5b:	ror    BYTE PTR [esi-0x22],cl
  41ea5e:	adc    cl,bh
  41ea60:	std    
  41ea61:	data16 stos BYTE PTR es:[edi],al
  41ea63:	pop    ebp
  41ea64:	ret    
  41ea65:	in     eax,0x2f
  41ea67:	mov    edi,0x1fd14cbe
  41ea6c:	loope  0x41ea9e
  41ea6e:	jns    0x41eae1
  41ea70:	push   0x697edcc4
  41ea75:	sbb    eax,0x9e0cbc61
  41ea7a:	ror    DWORD PTR [edx-0x2e],1
  41ea7d:	mov    DWORD PTR [edi-0x7f7ba72d],edi
  41ea83:	cmp    BYTE PTR [edi+0x5a],0xf4
  41ea87:	sbb    esp,esp
  41ea89:	dec    ebx
  41ea8a:	daa    
  41ea8b:	mov    ds:0xc5075710,eax
  41ea90:	pop    ds
  41ea91:	mov    dh,0x88
  41ea93:	cwde   
  41ea94:	jmp    0x23d5:0x8e2877f4
  41ea9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea9c:	pop    eax
  41ea9d:	or     ebp,DWORD PTR [edi-0x37335c7c]
  41eaa3:	xor    bl,al
	...
  41eab1:	jle    0x41ea75
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x79
  41eabe:	clc    
  41eabf:	fld    TBYTE PTR [ebp+edx*8+0x65]
  41eac3:	add    DWORD PTR [eax],eax
  41eac5:	lods   al,BYTE PTR ds:[esi]
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    dh,bl
  41eaca:	xchg   edi,eax
  41eacb:	loop   0x41eaf6
  41eacd:	dec    eax
  41eace:	or     ecx,DWORD PTR [edx]
  41ead0:	add    DWORD PTR [eax+0x59],edx
  41ead3:	and    esi,0xffffff9c
  41ead6:	and    DWORD PTR [esi+0x339a0e47],esi
  41eadc:	sbb    BYTE PTR [ecx+0x7],0xdf
  41eae0:	or     al,0x23
  41eae2:	stos   BYTE PTR es:[edi],al
  41eae3:	cmp    cl,BYTE PTR [ebx-0x52]
  41eae6:	pop    esp
  41eae7:	imul   ebx,DWORD PTR [edi+0x1c],0x428766fb
  41eaee:	dec    ebx
  41eaef:	push   ecx
  41eaf0:	mov    DWORD PTR [eax+0x11fa870a],eax
  41eaf6:	and    BYTE PTR [edi],bh
  41eaf8:	mov    eax,ds:0x6b9324bc
  41eafd:	aad    0x69
  41eaff:	mov    BYTE PTR [esi],cl
  41eb01:	maskmovq mm7,mm6
  41eb04:	outs   dx,BYTE PTR ds:[esi]
  41eb05:	inc    esp
  41eb06:	repnz int 0x14
  41eb09:	mov    al,0x43
  41eb0b:	mov    ebp,0xcf15a86d
  41eb10:	push   edi
  41eb11:	fs imul edi,ebp,0xffffffc0
  41eb15:	cmp    dh,bh
  41eb17:	aas    
  41eb18:	inc    eax
  41eb19:	into   
  41eb1a:	mov    ss,esi
  41eb1c:	pop    ebp
  41eb1d:	and    ebx,DWORD PTR [ebx+0x18]
  41eb20:	jne    0x41eb5b
  41eb22:	sbb    al,0x5b
  41eb24:	pop    es
  41eb25:	jnp    0x41eb36
  41eb27:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb2a:	adc    DWORD PTR [eax+0x43788608],ecx
  41eb30:	dec    esp
  41eb31:	push   esi
  41eb32:	pop    esi
  41eb33:	daa    
  41eb34:	pop    eax
  41eb35:	popa   
  41eb36:	pop    edx
  41eb37:	inc    edi
  41eb38:	enter  0x231e,0x8f
  41eb3c:	daa    
  41eb3d:	call   0x6507ed08
  41eb42:	mov    edi,DWORD PTR [ecx-0x184fe6bb]
  41eb48:	adc    ebp,DWORD PTR [eax+0x56f1190f]
  41eb4e:	pop    edx
  41eb4f:	jp     0x41eb9b
  41eb51:	out    0x3a,eax
  41eb53:	pop    esp
  41eb54:	sbb    BYTE PTR es:[eax+0x17829179],0x1a
  41eb5c:	rol    cl,0x46
  41eb5f:	gs jle 0x41eb56
  41eb62:	and    al,0xb3
  41eb64:	sbb    BYTE PTR [ebx-0x34],bl
  41eb67:	inc    BYTE PTR [ecx-0x7f4f3f68]
  41eb6d:	push   ds
  41eb6e:	sub    DWORD PTR [ebp-0x71],0x70
  41eb72:	call   0x17c5:0x1cfd2fe6
  41eb79:	mov    ah,0x3
  41eb7b:	xor    eax,0xe8601249
  41eb80:	jo     0x41eb87
  41eb82:	imul   eax,DWORD PTR [edx+0x46165a60],0xffffffe1
  41eb89:	pop    ecx
  41eb8a:	push   cs
  41eb8b:	sub    eax,esi
  41eb8d:	cmp    ch,BYTE PTR [edi-0x434b503e]
  41eb93:	push   edx
  41eb94:	sbb    DWORD PTR [edx-0x4f110e42],esp
  41eb9a:	mov    ah,BYTE PTR [ebx]
  41eb9c:	add    al,0xf4
  41eb9e:	out    0x83,eax
  41eba0:	add    ebx,DWORD PTR [edx+0x53ed52da]
  41eba6:	ss inc ecx
  41eba8:	push   cs
  41eba9:	and    bh,0x45
  41ebac:	push   0x43
  41ebae:	mov    edi,0x9350b0dd
  41ebb3:	test   al,0xfa
  41ebb5:	imul   edx,DWORD PTR [ebp-0x3],0x34
  41ebb9:	mov    al,0xd0
  41ebbb:	and    esp,esp
  41ebbd:	bound  ecx,QWORD PTR ds:0xe268b321
  41ebc3:	stos   DWORD PTR es:[edi],eax
  41ebc4:	popa   
  41ebc5:	push   ebx
  41ebc6:	push   ecx
  41ebc7:	cmp    DWORD PTR [eax+0xdc5b87e],ebp
  41ebcd:	sti    
  41ebce:	add    bl,dl
  41ebd0:	jnp    0x41ec39
  41ebd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd3:	outs   dx,BYTE PTR ds:[esi]
  41ebd4:	inc    esi
  41ebd5:	out    dx,al
  41ebd6:	out    0xbc,al
  41ebd8:	call   0x64eb:0xf8d7096f
  41ebdf:	mov    eax,0x778e150a
  41ebe4:	mov    dh,0xd
  41ebe6:	mov    bl,0x39
  41ebe8:	push   ebx
  41ebe9:	cld    
  41ebea:	data16 jle 0x41ebb3
  41ebed:	(bad)  
  41ebee:	sub    ah,BYTE PTR [edx-0x23]
  41ebf1:	dec    esp
  41ebf2:	(bad)  
  41ebf3:	fwait
  41ebf4:	mov    al,0x4b
  41ebf6:	cld    
  41ebf7:	out    dx,eax
  41ebf8:	jp     0x41ebf0
  41ebfa:	fldenv [eax+ebp*1]
  41ebfd:	mov    ecx,0x4dba7747
  41ec02:	fistp  DWORD PTR [ebx]
  41ec04:	into   
  41ec05:	or     al,0xfd
  41ec07:	cmp    eax,0x321d092d
  41ec0c:	repz jp 0x41ebba
  41ec0f:	std    
  41ec10:	push   ebp
  41ec11:	outs   dx,DWORD PTR ds:[esi]
  41ec12:	push   edx
  41ec13:	clc    
  41ec14:	scas   eax,DWORD PTR es:[edi]
  41ec15:	cmp    al,0xdb
  41ec17:	mov    cl,0x59
  41ec19:	mov    dh,0x9e
  41ec1b:	loope  0x41ec91
  41ec1d:	lds    ebp,FWORD PTR [ecx]
  41ec1f:	inc    edi
  41ec20:	sahf   
  41ec21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec22:	popf   
  41ec23:	xor    ebx,DWORD PTR [edi+0x7107c0a]
  41ec29:	mov    ebx,0xdc568eef
  41ec2e:	push   ss
  41ec2f:	jae    0x41ec31
  41ec31:	xor    al,BYTE PTR [ecx-0x6472afda]
  41ec37:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ec39:	and    BYTE PTR [ebx-0x1d36d1d3],bl
  41ec3f:	cmp    DWORD PTR [edx],eax
  41ec41:	fisubr WORD PTR [eax+0x5e593d3f]
  41ec47:	scas   al,BYTE PTR es:[edi]
  41ec48:	leave  
  41ec49:	rcr    dh,0x6f
  41ec4c:	mov    WORD PTR [esi+0x7a],ds
  41ec4f:	sbb    bl,BYTE PTR [eax]
  41ec51:	or     DWORD PTR [esi],0x75
  41ec54:	iret   
  41ec55:	test   al,0x87
  41ec57:	xchg   edx,eax
  41ec58:	je     0x41ebe6
  41ec5a:	outs   dx,DWORD PTR ds:[esi]
  41ec5b:	mov    al,ds:0x8fb6943f
  41ec60:	in     eax,0xb1
  41ec62:	loop   0x41ec89
  41ec64:	aam    0x1d
  41ec66:	outs   dx,DWORD PTR ds:[esi]
  41ec67:	(bad)  
  41ec68:	std    
  41ec69:	mov    ebp,0x608546f1
  41ec6e:	push   ds
  41ec6f:	cmp    ebx,DWORD PTR [ebx+0x2b]
  41ec72:	dec    edx
  41ec73:	js     0x41ec92
  41ec75:	pop    ebp
  41ec76:	and    eax,0x3951c28c
  41ec7b:	xor    eax,0xeb7b9a5a
  41ec80:	jmp    0x9cc4:0xc7ea9fd3
  41ec87:	push   esi
  41ec88:	lahf   
  41ec89:	lods   eax,DWORD PTR ds:[esi]
  41ec8a:	sahf   
  41ec8b:	push   ebx
  41ec8c:	ins    BYTE PTR es:[edi],dx
  41ec8d:	inc    esp
  41ec8e:	cld    
  41ec8f:	leave  
  41ec90:	xchg   BYTE PTR [esi-0x2],dh
  41ec93:	push   0x54
  41ec95:	pop    edx
  41ec96:	jne    0x41ecdd
  41ec98:	mov    bh,0xa6
  41ec9a:	sti    
  41ec9b:	stc    
  41ec9c:	popf   
  41ec9d:	fsubr  DWORD PTR [edx-0x34]
  41eca0:	xchg   esp,eax
  41eca1:	xchg   esi,eax
  41eca2:	sti    
  41eca3:	iret   
  41eca4:	fsub   QWORD PTR [esi+ebp*1-0x3b]
  41eca8:	repz enter 0x240f,0x6e
  41ecad:	arpl   WORD PTR [edx-0x53],cx
  41ecb0:	cli    
  41ecb1:	rol    DWORD PTR [eax+0x59],1
  41ecb4:	mov    ch,0xb1
  41ecb6:	xor    BYTE PTR [ecx],0xeb
  41ecb9:	mov    al,ds:0x9d1e5d22
  41ecbe:	push   esp
  41ecbf:	xor    BYTE PTR ds:0x9d7bab57,bh
  41ecc5:	xor    edi,DWORD PTR [eax+0x1a]
  41ecc8:	dec    ecx
  41ecc9:	add    BYTE PTR [eax-0x2a55068],dl
  41eccf:	ins    BYTE PTR es:[edi],dx
  41ecd0:	nop
  41ecd1:	addr16 mov eax,ds:0xba3d
  41ecd5:	cdq    
  41ecd6:	push   ds
  41ecd7:	cmp    al,0x24
  41ecd9:	or     dh,bl
  41ecdb:	jmp    0xdb73e9c1
  41ece0:	or     eax,0xbd17622
  41ece5:	rol    BYTE PTR [edi-0x2c3674f7],cl
  41eceb:	cmp    al,0xab
  41eced:	xor    eax,0x5879123c
  41ecf2:	adc    ebx,ecx
  41ecf4:	inc    edx
  41ecf5:	mov    ebx,0x8a18c0e8
  41ecfa:	mov    ebp,0x24b584f3
  41ecff:	xchg   BYTE PTR [edi+edi*2-0x2306a941],bh
  41ed06:	push   esi
  41ed07:	add    eax,0x5fe44f44
  41ed0c:	sub    al,ah
  41ed0e:	push   ss
  41ed0f:	adc    bl,BYTE PTR [ebx-0x65]
  41ed12:	pop    eax
  41ed13:	jo     0x41ed11
  41ed15:	xchg   DWORD PTR [eax+0x3c110f75],edx
  41ed1b:	fwait
  41ed1c:	mov    dl,BYTE PTR [edx-0x5d]
  41ed1f:	add    DWORD PTR [edx+0x5f12ae3f],edx
  41ed25:	fldcw  WORD PTR [esi-0xfab7cbd]
  41ed2b:	add    DWORD PTR [ecx-0x3d],0x95ed69c5
  41ed32:	jnp    0x41ed83
  41ed34:	retf   
  41ed35:	dec    ecx
  41ed36:	out    dx,eax
  41ed37:	push   cs
  41ed38:	aad    0xf7
  41ed3a:	mov    edx,DWORD PTR [eax-0x2b]
  41ed3d:	or     BYTE PTR [esi+0x5e4b503d],0x47
  41ed44:	shl    DWORD PTR [esi],0x64
  41ed47:	pusha  
  41ed48:	mov    al,0x2b
  41ed4a:	stos   BYTE PTR es:[edi],al
  41ed4b:	inc    ecx
  41ed4c:	jae    0x41edc5
  41ed4e:	mov    BYTE PTR [eax-0x7081a669],dh
  41ed54:	jno    0x41edbe
  41ed56:	xchg   cl,dl
  41ed58:	es xchg edi,eax
  41ed5a:	jb     0x41ed80
  41ed5c:	test   al,0xcc
  41ed5e:	adc    al,0xbc
  41ed60:	xor    dh,BYTE PTR [ebx+0x2be6d05e]
  41ed66:	push   edi
  41ed67:	dec    ecx
  41ed68:	(bad)  
  41ed69:	pop    ss
  41ed6a:	adc    ah,0xa7
  41ed6d:	int    0x5a
  41ed6f:	fsub   st,st(7)
  41ed71:	stos   BYTE PTR es:[edi],al
  41ed72:	nop
  41ed73:	mov    bh,0x45
  41ed75:	arpl   si,bp
  41ed77:	xlat   BYTE PTR ds:[ebx]
  41ed78:	add    DWORD PTR [ebx+0x47],0xffffffe5
  41ed7c:	jg     0x41eda2
  41ed7e:	sbb    al,0x17
  41ed80:	stos   BYTE PTR es:[edi],al
  41ed81:	out    0x61,eax
  41ed83:	mov    al,0x9
  41ed85:	sti    
  41ed86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed87:	(bad)  
  41ed88:	mov    ebp,0x398c40fd
  41ed8d:	jecxz  0x41ed41
  41ed8f:	sbb    BYTE PTR [eax-0x26],cl
  41ed92:	mov    ?,WORD PTR gs:[esi-0xc]
  41ed96:	pusha  
  41ed97:	call   0xa24f:0x547ffe6a
  41ed9e:	fdiv   QWORD PTR [ebx+0xe]
  41eda1:	jle    0x41ed9a
  41eda3:	pop    es
  41eda4:	or     DWORD PTR [eax+0x3f],esi
  41eda7:	inc    ebx
  41eda9:	cld    
  41edaa:	fs call 0x4319:0xed2d0632
  41edb2:	jnp    0x41edf9
  41edb4:	xchg   ebp,eax
  41edb5:	jg     0x41ed65
  41edb7:	sti    
  41edb8:	jne    0x41eddf
  41edba:	int3   
  41edbb:	in     al,0xf7
  41edbd:	push   ss
  41edbe:	fcmovnu st,st(7)
  41edc0:	xchg   ecx,eax
  41edc1:	cs (bad) 
  41edc3:	mov    edx,0x73247bf0
  41edc8:	outs   dx,DWORD PTR ds:[esi]
  41edc9:	inc    esi
  41edca:	arpl   WORD PTR [edi-0x6e],bx
  41edcd:	ja     0x41ed80
  41edcf:	mov    dh,0x8a
  41edd1:	je     0x41ee23
  41edd3:	push   esp
  41edd4:	sub    eax,0x8422071f
  41edd9:	stos   BYTE PTR es:[edi],al
  41edda:	cmp    eax,0x69bfd057
  41eddf:	jge    0x41ee13
  41ede1:	add    al,0x86
  41ede3:	dec    edi
  41ede4:	xchg   esp,eax
  41ede5:	call   0x9e2d:0xcd109bfc
  41edec:	test   eax,0x7caea7a4
  41edf1:	popf   
  41edf2:	jmp    0x41ad:0xf14beafb
  41edf9:	out    dx,al
  41edfa:	mov    bl,0x33
  41edfc:	daa    
  41edfd:	mov    al,0x33
  41edff:	inc    ecx
  41ee00:	inc    eax
  41ee01:	xchg   ecx,eax
  41ee02:	scas   al,BYTE PTR es:[edi]
  41ee03:	mov    eax,0xcd320ddf
  41ee08:	sbb    al,0x2a
  41ee0a:	clc    
  41ee0b:	stos   BYTE PTR es:[edi],al
  41ee0c:	jno    0x41edf3
  41ee0e:	sbb    al,0x58
  41ee10:	(bad)  
  41ee11:	pusha  
  41ee12:	cmp    edx,ebp
  41ee14:	fwait
  41ee15:	inc    esi
  41ee16:	enter  0x8b2b,0xd0
  41ee1a:	and    ecx,DWORD PTR [ebx+eiz*8]
  41ee1d:	enter  0xf65c,0x17
  41ee21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee22:	xchg   al,dl
  41ee24:	mov    ds:0xf36820f1,al
  41ee29:	pop    ecx
  41ee2a:	cmp    eax,0xa877cb45
  41ee2f:	out    0x5d,al
  41ee31:	and    ebp,esp
  41ee33:	adc    eax,0xef8e09a7
  41ee38:	leave  
  41ee39:	out    dx,al
  41ee3a:	outs   dx,DWORD PTR ds:[esi]
  41ee3b:	in     eax,0x59
  41ee3d:	cdq    
  41ee3e:	xchg   esp,eax
  41ee3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee40:	aad    0x27
  41ee42:	pop    ss
  41ee43:	sub    ah,BYTE PTR [eax]
  41ee45:	das    
  41ee46:	pop    edx
  41ee47:	pop    esp
  41ee48:	shl    esp,0xd4
  41ee4b:	loop   0x41ee09
  41ee4d:	jo     0x41ee21
  41ee4f:	mov    ebx,0xa08b7640
  41ee54:	inc    edi
  41ee55:	cmp    edx,DWORD PTR [ecx+edx*1+0x1f]
  41ee59:	mov    edi,0x6ba3e390
  41ee5e:	jnp    0x41ee1a
  41ee60:	push   0xffffffc2
  41ee62:	jecxz  0x41eedc
  41ee64:	std    
  41ee65:	xchg   ebp,eax
  41ee66:	mov    edx,0x52d5e335
  41ee6b:	adc    DWORD PTR [ebp-0x18580553],ebp
  41ee71:	sub    cl,0x39
  41ee74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41ee81:	dec    esi
  41ee82:	leave  
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0xc2f76e4
  41ee8e:	lods   eax,DWORD PTR ds:[esi]
  41ee8f:	mov    ebx,0x1698157
  41ee94:	add    BYTE PTR [ebx+eax*1-0x5b7e0000],ch
  41ee9b:	retf   0xa7f7
  41ee9e:	repnz or al,0xe9
  41eea1:	cdq    
  41eea2:	hlt    
  41eea3:	mov    al,0x18
  41eea5:	ds mov eax,0x9c0b167
  41eeab:	inc    esi
  41eeac:	push   eax
  41eead:	dec    esi
  41eeae:	push   ss
  41eeaf:	cli    
  41eeb0:	retf   0xb03e
  41eeb3:	push   esi
  41eeb4:	and    eax,0x91db1fd6
  41eeb9:	xor    ah,ah
  41eebb:	test   eax,0x27f67615
  41eec0:	test   esp,0x83f3dffe
  41eec6:	pop    es
  41eec7:	mov    ebx,0xdbcc83c7
  41eecc:	sbb    DWORD PTR [esi],0x89be94b1
  41eed2:	mov    DWORD PTR [ebx-0x17fcc4e0],edx
  41eed8:	addr16 (bad) 
  41eeda:	cmp    al,0xda
  41eedc:	xor    BYTE PTR [edi],bl
  41eede:	or     DWORD PTR [ebx+0x3],ebp
  41eee1:	stc    
  41eee2:	retf   0xd76d
  41eee5:	or     al,0xad
  41eee7:	into   
  41eee8:	ret    0xbcc1
  41eeeb:	nop
  41eeec:	cmp    cl,cl
  41eeee:	cmp    DWORD PTR [edx-0x21],0x4d32548e
  41eef5:	pmaxub mm5,mm5
  41eef8:	inc    BYTE PTR [edx]
  41eefa:	adc    ecx,DWORD PTR [eax-0x4c]
  41eefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eefe:	mov    ebp,0x1a8ff110
  41ef03:	push   eax
  41ef04:	jae    0x41ef80
  41ef06:	jl     0x41eee1
  41ef08:	push   es
  41ef09:	cdq    
  41ef0a:	pusha  
  41ef0b:	mov    ecx,0xc17eb257
  41ef10:	sbb    ebp,DWORD PTR [edx-0x41]
  41ef13:	pusha  
  41ef14:	loopne 0x41eef3
  41ef16:	fwait
  41ef17:	das    
  41ef18:	xor    ch,bl
  41ef1a:	retf   
  41ef1b:	adc    eax,0xb88609e5
  41ef20:	je     0x41ef2b
  41ef22:	rol    DWORD PTR [esi+0x33],cl
  41ef25:	push   cs
  41ef26:	out    0xe1,al
  41ef28:	(bad)  
  41ef29:	popa   
  41ef2a:	pop    ds
  41ef2b:	pop    edi
  41ef2c:	int3   
  41ef2d:	outs   dx,DWORD PTR ds:[esi]
  41ef2e:	sahf   
  41ef2f:	fsub   st,st(1)
  41ef31:	sub    DWORD PTR [eax+eax*4+0xc3a1c3c],esp
  41ef38:	ins    BYTE PTR es:[edi],dx
  41ef39:	mov    ch,0x4a
  41ef3b:	test   al,0xed
  41ef3d:	int    0xc0
  41ef3f:	xchg   ecx,eax
  41ef40:	inc    edx
  41ef41:	std    
  41ef42:	jle    0x41ef02
  41ef44:	add    al,0x6f
  41ef46:	mov    BYTE PTR [ecx+0x5c9073d9],bl
  41ef4c:	adc    DWORD PTR [ebx+0x62],0xfffffff1
  41ef50:	adc    al,0x4f
  41ef52:	xchg   DWORD PTR [edi-0x6f],eax
  41ef55:	clc    
  41ef56:	push   esi
  41ef57:	mov    DWORD PTR [esi+0x39],ebx
  41ef5a:	inc    edi
  41ef5b:	mov    eax,ds:0x833f9fe8
  41ef60:	pushf  
  41ef61:	pop    ds
  41ef62:	out    dx,al
  41ef63:	xlat   BYTE PTR ds:[ebx]
  41ef64:	sub    BYTE PTR [ecx-0x16d93744],0xfe
  41ef6b:	pusha  
  41ef6c:	int    0xad
  41ef6e:	int    0x9a
  41ef70:	cmp    edx,DWORD PTR [edi]
  41ef72:	repnz retf 0x40c8
  41ef76:	call   0x86f8:0x4c5dcd69
  41ef7d:	stc    
  41ef7e:	popf   
  41ef7f:	push   eax
  41ef80:	loope  0x41efd3
  41ef82:	mov    edi,0x5be3b5d1
  41ef87:	ja     0x41efd6
  41ef89:	add    ebp,esi
  41ef8b:	jge    0x41ef87
  41ef8d:	lock stos BYTE PTR es:[edi],al
  41ef8f:	sub    bl,BYTE PTR ds:0xa960248f
  41ef95:	aas    
  41ef96:	jne    0x41efab
  41ef98:	sbb    bh,BYTE PTR [ecx]
  41ef9a:	into   
  41ef9b:	shl    DWORD PTR [ecx+0x12],0xb0
  41ef9f:	mov    al,ds:0x20d6349f
  41efa4:	leave  
  41efa5:	jle    0x41ef5e
  41efa7:	ss pop ebp
  41efa9:	ins    DWORD PTR es:[edi],dx
  41efaa:	or     ch,BYTE PTR [eax-0x59]
  41efad:	xor    dl,bl
  41efaf:	xor    ebp,ecx
  41efb1:	arpl   si,bp
  41efb3:	or     eax,0x36eeb6c3
  41efb8:	or     ebp,DWORD PTR [ebp+0x73]
  41efbb:	fimul  DWORD PTR [ecx+0x3a]
  41efbe:	in     al,0x10
  41efc0:	jnp    0x41efbb
  41efc2:	xor    BYTE PTR [ebp+0x54],cl
  41efc5:	fstp   DWORD PTR [esi]
  41efc7:	or     ah,BYTE PTR [ebx-0x78467b44]
  41efcd:	mov    bl,0xcf
  41efcf:	cmp    DWORD PTR [edi+0x2837f0ff],ecx
  41efd5:	jno    0x41efb9
  41efd7:	sti    
  41efd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efd9:	mov    esi,edx
  41efdb:	cmp    ch,cl
  41efdd:	cli    
  41efde:	(bad)  
  41efdf:	mov    BYTE PTR [ebp-0x46613228],bl
  41efe5:	dec    edi
  41efe6:	dec    esi
  41efe7:	add    ecx,edx
  41efe9:	mov    edi,0xbd678fa3
  41efee:	xor    al,0x6e
  41eff0:	(bad)  
  41eff1:	sub    ah,BYTE PTR [ebx]
  41eff3:	jae    0x41f015
  41eff5:	xchg   ebp,eax
  41eff6:	sbb    cl,cl
  41eff8:	neg    DWORD PTR [edx-0x7b]
  41effb:	and    BYTE PTR [ebp-0x75],bh
  41effe:	shl    BYTE PTR [bx+di+0x5d2d],cl
  41f003:	cdq    
  41f004:	mov    ds:0xf0c67571,eax
  41f009:	pop    edx
  41f00a:	es jmp 0x1856:0x724250fb
  41f012:	(bad)  
  41f013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f014:	popf   
  41f015:	imul   edx,DWORD PTR [ecx+0x7038f237],0x39637526
  41f01f:	outs   dx,DWORD PTR ds:[esi]
  41f020:	jmp    0xf42d:0xfc3f8fe4
  41f027:	pop    eax
  41f028:	cmp    BYTE PTR [esi+ecx*1],ah
  41f02b:	scas   al,BYTE PTR es:[edi]
  41f02c:	xchg   ebx,eax
  41f02d:	mov    al,0xaa
  41f02f:	mov    eax,ds:0xc2094637
  41f034:	xlat   BYTE PTR ds:[ebx]
  41f035:	add    al,0x9e
  41f037:	mov    bh,BYTE PTR [esp+ebp*2]
  41f03a:	ret    
  41f03b:	jo     0x41f06e
  41f03d:	cmp    cl,BYTE PTR [eax+0x4f]
  41f040:	cmp    BYTE PTR [esi-0x6ddfa948],0x77
  41f047:	jmp    0xb05e:0x228ff1b0
  41f04e:	cdq    
  41f04f:	test   al,0xeb
  41f051:	dec    eax
  41f052:	sar    DWORD PTR [ecx],cl
  41f054:	aad    0xdb
  41f056:	ror    DWORD PTR [esi+0x6a],cl
  41f059:	pop    ebx
  41f05a:	sub    al,0xe3
  41f05c:	fbstp  TBYTE PTR [edi-0x56]
  41f05f:	pop    ebp
  41f060:	xchg   BYTE PTR [eax],bl
  41f062:	lods   al,BYTE PTR ds:[esi]
  41f063:	xor    DWORD PTR [bx+si+0x738b],ecx
  41f068:	das    
  41f069:	rol    BYTE PTR [ebp-0x332be31b],1
  41f06f:	cmp    al,cl
  41f071:	int3   
  41f072:	rcr    edi,0xd2
  41f075:	and    ecx,DWORD PTR [eax-0x10]
  41f078:	stc    
  41f079:	cmp    ah,BYTE PTR [ecx+0x11160f1e]
  41f07f:	or     al,BYTE PTR ss:[edi]
  41f082:	pop    edi
  41f083:	out    dx,eax
  41f084:	pop    es
  41f085:	pop    edx
  41f086:	aad    0xf4
  41f088:	and    DWORD PTR [edx],eax
  41f08a:	push   edi
  41f08b:	mov    esi,0xab5189c3
  41f090:	je     0x41f066
  41f092:	add    ah,ah
  41f094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f095:	sbb    cl,BYTE PTR [ebx]
  41f097:	repnz push esp
  41f099:	es (bad) 
  41f09b:	scas   al,BYTE PTR es:[edi]
  41f09c:	jge    0x41f0d0
  41f09e:	sub    bh,dl
  41f0a0:	(bad)  
  41f0a2:	pop    ecx
  41f0a3:	(bad)  
  41f0a4:	sbb    eax,0x1091aeb3
  41f0a9:	mov    ah,0x97
  41f0ab:	and    DWORD PTR [edx],ecx
  41f0ad:	add    DWORD PTR [edx+ebx*8],ecx
  41f0b0:	mov    ds:0xb68d48eb,al
  41f0b5:	das    
  41f0b6:	ficom  WORD PTR [eax-0x46e54665]
  41f0bc:	popa   
  41f0bd:	retf   
  41f0be:	push   ss
  41f0bf:	push   ebx
  41f0c0:	ja     0x41f116
  41f0c2:	imul   esi,DWORD PTR [esp+edi*8+0x43],0x41cd1bf1
  41f0ca:	adc    eax,0x11cd446b
  41f0cf:	stos   DWORD PTR es:[edi],eax
  41f0d0:	mov    cs,esp
  41f0d2:	adc    al,0x3d
  41f0d4:	push   ebp
  41f0d5:	in     al,0x11
  41f0d7:	mov    edx,0x549523b4
  41f0dc:	outs   dx,DWORD PTR ds:[esi]
  41f0dd:	and    al,0xd6
  41f0df:	mov    ebx,0x370b4e9d
  41f0e4:	cmp    eax,0xfb8ac2a6
  41f0e9:	loope  0x41f10f
  41f0eb:	xor    ebx,DWORD PTR ds:0x7a9faf25
  41f0f1:	pushf  
  41f0f2:	stc    
  41f0f3:	ret    
  41f0f4:	mov    ebx,0x3f73203
  41f0f9:	jo     0x41f0c3
  41f0fb:	jns    0x41f0bc
  41f0fd:	xchg   esi,eax
  41f0fe:	gs or  eax,0x1a42380a
  41f104:	sub    DWORD PTR [edi-0x26b26a7],edi
  41f10a:	stos   BYTE PTR es:[edi],al
  41f10b:	(bad)  
  41f10c:	shl    esi,1
  41f10e:	sar    eax,1
  41f110:	mov    dl,dh
  41f112:	pop    esi
  41f113:	mov    BYTE PTR [ebp+0x72],al
  41f116:	(bad)  
  41f117:	xchg   edi,eax
  41f118:	(bad)  
  41f119:	adc    ah,BYTE PTR [ebx-0x6e]
  41f11c:	adc    BYTE PTR [ebx-0x544622a1],dl
  41f122:	jp     0x41f0f3
  41f124:	gs sub eax,0x8389e133
  41f12a:	mov    ebx,DWORD PTR [ebp-0x78]
  41f12d:	rol    BYTE PTR [ebp+0x7c],cl
  41f130:	stos   DWORD PTR es:[edi],eax
  41f131:	push   edi
  41f132:	mov    edx,0xe0d8d2df
  41f137:	aaa    
  41f138:	jne    0x41f0d9
  41f13a:	nop
  41f13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f13c:	inc    eax
  41f13d:	fwait
  41f13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f13f:	push   ecx
  41f140:	lahf   
  41f141:	aam    0x7
  41f143:	jle    0x41f145
  41f145:	xor    ch,bh
  41f147:	sahf   
  41f148:	test   eax,0xa2ddab88
  41f14d:	test   BYTE PTR [ecx-0x37],bl
  41f150:	fwait
  41f151:	pmovmskb ecx,mm6
  41f154:	out    dx,al
  41f155:	lods   al,BYTE PTR ds:[esi]
  41f156:	test   eax,0x62363b93
  41f15b:	sbb    DWORD PTR ds:0x99ad39bd,esi
  41f161:	out    0x26,al
  41f163:	adc    DWORD PTR [esi+0xe68d4dd],eax
  41f169:	(bad)  
  41f16a:	int3   
  41f16b:	and    BYTE PTR [ebx+0x11],ch
  41f16e:	stc    
  41f16f:	neg    BYTE PTR [eax]
  41f171:	jno    0x41f115
  41f173:	push   ebx
  41f174:	adc    bl,bh
  41f176:	mov    ds:0x22aeb92b,eax
  41f17b:	sbb    BYTE PTR [ecx+ebx*4+0x32279e88],dl
  41f182:	jecxz  0x41f165
  41f184:	iret   
  41f185:	xchg   BYTE PTR [ebp+0x3b2f4ff4],ch
  41f18b:	(bad)  
  41f18c:	push   0xbe006df9
  41f191:	inc    edi
  41f192:	loop   0x41f141
  41f194:	mov    ds:0x5f4fbde4,eax
  41f199:	push   edi
  41f19a:	sbb    esi,esi
  41f19c:	lods   eax,DWORD PTR ds:[esi]
  41f19d:	mov    esp,0x815ab82
  41f1a2:	cmp    eax,0x18a39fe9
  41f1a7:	cdq    
  41f1a8:	add    DWORD PTR [edi],0x90a92d0c
  41f1ae:	xor    esp,DWORD PTR cs:[ebx-0x53]
  41f1b2:	aas    
  41f1b3:	icebp  
  41f1b4:	mov    esp,0x9338f3fd
  41f1b9:	xor    BYTE PTR [edx],cl
  41f1bb:	arpl   dx,di
  41f1bd:	push   ds
  41f1be:	idiv   BYTE PTR [esi]
  41f1c0:	xchg   BYTE PTR [ebx+0x6],bl
  41f1c3:	sahf   
  41f1c4:	xor    ebp,DWORD PTR [edi+0x6e]
  41f1c7:	jmp    0x41f20f
  41f1c9:	pop    ebx
  41f1ca:	push   edx
  41f1cb:	and    BYTE PTR [ebp+0x66],0x9e
  41f1cf:	jg     0x41f228
  41f1d1:	sar    BYTE PTR [ebx],1
  41f1d3:	xchg   esp,eax
  41f1d4:	retf   0xc4fa
  41f1d7:	dec    eax
  41f1d8:	rol    BYTE PTR ds:0x93299aca,0x81
  41f1df:	push   0x2ebd510d
  41f1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e5:	add    eax,0x18e1b167
  41f1ea:	or     al,0xf5
  41f1ec:	fidiv  DWORD PTR [edi-0x26]
  41f1ef:	xor    BYTE PTR [ecx],dh
  41f1f1:	dec    esi
  41f1f2:	sbb    BYTE PTR [eax],ah
  41f1f4:	xor    BYTE PTR [ebx-0x6de03cb5],al
  41f1fa:	je     0x41f276
  41f1fc:	jbe    0x41f1e5
  41f1fe:	daa    
  41f1ff:	rcl    DWORD PTR [edx],cl
  41f201:	pop    esi
  41f202:	cmp    ch,BYTE PTR fs:[edx+ebx*2+0x34]
  41f207:	mov    dl,0x9f
  41f209:	jmp    0x8acf1d5
  41f20e:	add    BYTE PTR [edi+0x6a],al
  41f211:	test   eax,0x5038f77e
  41f216:	outs   dx,BYTE PTR ds:[esi]
  41f217:	add    al,dh
  41f219:	sahf   
  41f21a:	loop   0x41f223
  41f21c:	jne    0x41f26e
  41f21e:	lock and DWORD PTR [ebx],edx
  41f221:	pop    dx
  41f223:	mov    ebp,0xcf6e063d
  41f228:	shl    BYTE PTR [eax+0x1bfff26a],cl
  41f22e:	sbb    al,0x49
  41f230:	sub    BYTE PTR [edi],dl
  41f232:	(bad)  
  41f233:	(bad)  
  41f234:	jecxz  0x41f213
  41f236:	fisubr WORD PTR [esi-0x74c3aceb]
  41f23c:	push   ds
  41f23d:	fcmovne st,st(1)
  41f23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f240:	push   eax
  41f241:	jo     0x41f235
  41f243:	jb     0x41f222
	...
  41f251:	xor    dl,al
  41f253:	and    ecx,ebp
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx-0x55],ebx
  41f25e:	out    dx,eax
  41f25f:	je     0x41f240
  41f261:	sub    eax,0xac00016d
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [ecx],dl
  41f26a:	push   esp
  41f26b:	in     al,0x1
  41f26d:	cmc    
  41f26e:	adc    ebp,esp
  41f270:	mov    esi,0x21879661
  41f275:	aas    
  41f276:	mov    eax,0xb9009dc
  41f27b:	mov    ebp,0xd643f18c
  41f280:	shl    BYTE PTR [ecx+0x58cfbda],cl
  41f286:	cmp    cl,ah
  41f288:	mov    WORD PTR [edi-0x6a512dc],es
  41f28e:	mov    BYTE PTR [edx-0x7f3ed691],al
  41f294:	mov    DWORD PTR [ecx+0x248050e4],ecx
  41f29a:	(bad)  
  41f29b:	xor    esp,edx
  41f29d:	out    0x63,eax
  41f29f:	retf   0xa6c8
  41f2a2:	xor    ch,BYTE PTR [esi+edx*2]
  41f2a5:	pop    ds
  41f2a6:	jno    0x41f2fa
  41f2a8:	dec    edx
  41f2a9:	rcr    BYTE PTR [eax+0x42],cl
  41f2ac:	je     0x41f305
  41f2ae:	mov    ch,BYTE PTR [esp+ecx*1+0x44]
  41f2b2:	sti    
  41f2b3:	lds    esi,FWORD PTR [esi+0x23]
  41f2b6:	sti    
  41f2b7:	je     0x41f307
  41f2b9:	cs mov cl,0xdb
  41f2bc:	and    DWORD PTR [edi+0x8],esi
  41f2bf:	adc    dh,ch
  41f2c1:	adc    DWORD PTR [edi-0x43],ecx
  41f2c4:	lahf   
  41f2c5:	adc    al,0xc5
  41f2c7:	push   DWORD PTR [ebx-0x1c7ef77e]
  41f2cd:	sti    
  41f2ce:	aaa    
  41f2cf:	inc    esp
  41f2d0:	add    edx,edi
  41f2d2:	mov    WORD PTR [ebx+0x1b],cs
  41f2d5:	jns    0x41f355
  41f2d7:	sub    eax,0xb2aac69e
  41f2dc:	ror    BYTE PTR [eax+0x4e],1
  41f2df:	cli    
  41f2e0:	and    ch,0xd6
  41f2e3:	stc    
  41f2e4:	aaa    
  41f2e5:	iret   
  41f2e6:	pop    ebx
  41f2e7:	jg     0x41f29c
  41f2e9:	adc    ch,BYTE PTR [ecx]
  41f2eb:	aas    
  41f2ec:	fs adc cl,ah
  41f2ef:	adc    eax,0xeaef74e8
  41f2f4:	ret    
  41f2f5:	mov    ah,0x43
  41f2f7:	not    DWORD PTR [ecx+0x6ae89873]
  41f2fd:	enter  0x42cb,0x57
  41f301:	inc    edx
  41f302:	out    dx,al
  41f303:	repnz fidiv WORD PTR [ebx]
  41f306:	dec    ecx
  41f307:	inc    ecx
  41f308:	mov    es:0xb3e6d2ed,al
  41f30e:	rcr    BYTE PTR [ecx-0x17],0x73
  41f312:	mov    bh,al
  41f314:	test   eax,0x59a8e051
  41f319:	dec    ebp
  41f31a:	fild   DWORD PTR [ebp-0x55768209]
  41f320:	in     al,0x1
  41f322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f323:	sbb    eax,0x3a10c1f6
  41f328:	fsubr  st,st(6)
  41f32a:	push   edi
  41f32b:	mov    ds:0x8405cef6,eax
  41f330:	or     BYTE PTR [esi+0x5161b78c],0xaa
  41f337:	ja     0x41f2f1
  41f339:	test   al,0x51
  41f33b:	adc    BYTE PTR [edx+ebp*2+0x3e],ah
  41f33f:	mov    esp,0x2967e3f4
  41f344:	sahf   
  41f345:	gs mov edx,0x488205ac
  41f34b:	xchg   ebx,eax
  41f34c:	mov    bh,0x32
  41f34e:	aam    0xaf
  41f350:	leave  
  41f351:	arpl   WORD PTR [edx],dx
  41f353:	test   BYTE PTR [edi-0x4167d412],ah
  41f359:	sub    edi,eax
  41f35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f35c:	dec    esi
  41f35d:	pop    ecx
  41f35e:	dec    eax
  41f35f:	cwde   
  41f360:	jl     0x41f3dc
  41f362:	div    DWORD PTR [ebx-0x3a70338]
  41f368:	mov    eax,0xd52e0942
  41f36d:	in     al,0x86
  41f36f:	(bad)  
  41f370:	or     BYTE PTR [ebx],ah
  41f372:	cwde   
  41f373:	out    dx,eax
  41f374:	dec    ecx
  41f375:	jne    0x41f3e8
  41f377:	rcr    DWORD PTR [edi-0x1968e92c],cl
  41f37d:	fnstsw WORD PTR [edx-0x676b26d2]
  41f383:	pusha  
  41f384:	imul   esp
  41f386:	out    dx,eax
  41f387:	push   esp
  41f388:	dec    eax
  41f389:	xor    ebp,DWORD PTR [edi+0x6]
  41f38c:	sub    eax,0x9305287d
  41f391:	jnp    0x41f384
  41f393:	cmp    eax,0x8e18395d
  41f398:	jo     0x41f39b
  41f39a:	int    0xb9
  41f39c:	in     al,dx
  41f39d:	pop    esp
  41f39e:	adc    DWORD PTR [ebp-0x29434795],edi
  41f3a4:	xor    eax,0x536f22bc
  41f3a9:	cwde   
  41f3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3ab:	fcmovne st,st(7)
  41f3ad:	inc    ecx
  41f3ae:	xchg   ecx,eax
  41f3af:	ds jmp 0x63e0:0xe5684752
  41f3b7:	and    al,0xb5
  41f3b9:	xchg   ebp,eax
  41f3ba:	and    BYTE PTR [ebx-0x75],0x76
  41f3be:	fimul  WORD PTR [edi+0x6d31d794]
  41f3c4:	push   esp
  41f3c5:	mov    cl,0x59
  41f3c7:	inc    edi
  41f3c8:	or     al,0x48
  41f3ca:	mov    ds:0x6870e3bb,eax
  41f3cf:	shl    BYTE PTR [ebx+0x55],0xac
  41f3d3:	shl    DWORD PTR [ecx-0x2c],1
  41f3d6:	std    
  41f3d7:	int3   
  41f3d8:	idiv   BYTE PTR [edi]
  41f3da:	and    eax,0x3118ae60
  41f3df:	(bad)  
  41f3e0:	in     eax,dx
  41f3e1:	repnz mov ah,0xb0
  41f3e4:	sbb    esi,edi
  41f3e6:	mov    ah,0xfe
  41f3e8:	dec    eax
  41f3e9:	test   BYTE PTR [ebx+0x718e87a6],cl
  41f3ef:	ss push ebx
  41f3f1:	mov    ebp,0x8db315db
  41f3f6:	or     edi,DWORD PTR [ebx+ecx*4]
  41f3f9:	inc    ebx
  41f3fa:	(bad)  
  41f3fb:	jecxz  0x41f437
  41f3fd:	fs stc 
  41f3ff:	scas   al,BYTE PTR es:[edi]
  41f400:	and    DWORD PTR [esi+eiz*1],0x804c07d6
  41f407:	cmp    cl,BYTE PTR [ecx-0x77fbe60]
  41f40d:	mov    ecx,0xa74bee32
  41f412:	outs   dx,BYTE PTR ds:[esi]
  41f413:	outs   dx,BYTE PTR ds:[esi]
  41f414:	or     BYTE PTR [edx+0x6f2ffa38],bh
  41f41a:	or     esi,DWORD PTR [eax]
  41f41c:	std    
  41f41d:	jmp    0xc155:0xb0a9bc9
  41f424:	and    dh,BYTE PTR [eax+0x21f9e196]
  41f42a:	lea    ebp,[esi]
  41f42c:	push   eax
  41f42d:	lock dec ebx
  41f42f:	mov    bh,0xa9
  41f431:	sbb    al,0xa4
  41f433:	mov    edx,0xd83ebe6f
  41f438:	dec    eax
  41f439:	aad    0x1d
  41f43b:	push   ss
  41f43c:	ret    0x368
  41f43f:	and    ah,BYTE PTR [ebp-0x1d]
  41f442:	jge    0x41f3d8
  41f444:	lahf   
  41f445:	sbb    DWORD PTR [ebx+0x973057c],0x7b
  41f44c:	cmp    eax,0x82e4dd6b
  41f451:	sbb    DWORD PTR [ebp-0x14],esi
  41f454:	out    dx,eax
  41f455:	loope  0x41f451
  41f457:	add    eax,0xd744c899
  41f45c:	adc    BYTE PTR [eax-0x69],bl
  41f45f:	data16 and al,0xf0
  41f462:	imul   ecx,esp,0xf43034e5
  41f468:	xlat   BYTE PTR ds:[ebx]
  41f469:	sbb    cl,BYTE PTR [edi-0x43cf9076]
  41f46f:	dec    esp
  41f470:	repz sub BYTE PTR ds:0xb4af65d9,0xc4
  41f478:	mov    ds,edx
  41f47a:	in     eax,0xa5
  41f47c:	(bad)  
  41f47d:	in     al,dx
  41f47e:	loopne 0x41f432
  41f480:	and    ch,BYTE PTR [ecx]
  41f482:	nop
  41f483:	dec    esi
  41f484:	and    ch,BYTE PTR [eax+0x2a]
  41f487:	xlat   BYTE PTR ds:[ebx]
  41f488:	pop    edx
  41f489:	sbb    ah,ah
  41f48b:	pop    ebx
  41f48c:	es popf 
  41f48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f48f:	ja     0x41f44a
  41f491:	dec    edx
  41f492:	or     esi,edi
  41f494:	jae    0x41f421
  41f496:	xchg   ecx,eax
  41f497:	mov    dh,0x41
  41f499:	or     al,0xe7
  41f49b:	push   0xf492f6fa
  41f4a0:	(bad)  
  41f4a1:	(bad)  
  41f4a2:	jl     0x41f4ab
  41f4a4:	call   0xd143d074
  41f4a9:	jmp    0x5e07:0xe36d4621
  41f4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b1:	sbb    DWORD PTR [edx],edi
  41f4b3:	int3   
  41f4b4:	dec    ebx
  41f4b5:	jb     0x41f46b
  41f4b7:	retf   0x179d
  41f4ba:	cld    
  41f4bb:	pop    ecx
  41f4bc:	pop    DWORD PTR [edi]
  41f4be:	fild   QWORD PTR [ebp+0x6115f855]
  41f4c4:	dec    ebx
  41f4c5:	xchg   edx,eax
  41f4c6:	outs   dx,BYTE PTR ds:[esi]
  41f4c7:	not    bl
  41f4c9:	ror    DWORD PTR [eax],1
  41f4cb:	inc    edi
  41f4cc:	or     ah,bh
  41f4ce:	les    esp,FWORD PTR [ebx-0x62]
  41f4d1:	bndldx (bad),[ebp-0x555a589c]
  41f4d8:	mov    eax,ds:0x4114b96b
  41f4dd:	push   ss
  41f4de:	jo     0x41f515
  41f4e0:	and    ch,BYTE PTR [esi+0x5d]
  41f4e3:	lods   al,BYTE PTR ds:[esi]
  41f4e4:	test   eax,0xb5e78dd1
  41f4e9:	add    DWORD PTR [edx+0x4d],esi
  41f4ec:	loop   0x41f470
  41f4ee:	pop    edx
  41f4ef:	lea    ecx,ds:0xd6d07b6e
  41f4f5:	dec    ebx
  41f4f6:	arpl   WORD PTR [eax],bx
  41f4f8:	and    esp,ecx
  41f4fa:	jmp    0x8321:0x44e21ca6
  41f501:	lods   eax,DWORD PTR ds:[esi]
  41f502:	and    BYTE PTR [eax+0x7a243580],ah
  41f508:	adc    esp,DWORD PTR [ecx-0x5d61e855]
  41f50e:	rol    BYTE PTR [esi],1
  41f510:	or     bl,BYTE PTR [ecx+0x14]
  41f513:	jp     0x41f568
  41f515:	sahf   
  41f516:	aad    0x3d
  41f518:	push   esi
  41f519:	(bad)  
  41f51a:	or     eax,0x33737bcf
  41f51f:	mov    ch,0xc1
  41f521:	(bad)  
  41f523:	clc    
  41f524:	add    eax,0x152afa52
  41f529:	pop    edx
  41f52a:	iret   
  41f52b:	push   edi
  41f52c:	sbb    ah,BYTE PTR [ecx+0x292f88e3]
  41f532:	xor    al,0xbe
  41f534:	jp     0x41f4be
  41f536:	in     eax,0xf
  41f538:	xor    edx,esi
  41f53a:	fstp   TBYTE PTR [esi-0x5487f35e]
  41f540:	fadd   DWORD PTR [ebx]
  41f542:	shl    DWORD PTR [ebx],cl
  41f544:	push   ebp
  41f545:	(bad)  
  41f546:	in     eax,dx
  41f547:	ins    BYTE PTR es:[edi],dx
  41f548:	xlat   BYTE PTR ds:[ebx]
  41f549:	retf   
  41f54a:	jle    0x41f598
  41f54c:	cmc    
  41f54d:	mov    ah,0x7f
  41f54f:	aas    
  41f550:	push   cs
  41f551:	test   DWORD PTR [ebp+0x3cea3aeb],edx
  41f557:	push   ss
  41f558:	mul    BYTE PTR [ecx]
  41f55a:	fcmovnb st,st(3)
  41f55c:	loop   0x41f523
  41f55e:	push   0xba1c2b2
  41f563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f564:	jge    0x41f5e4
  41f566:	imul   eax,DWORD PTR [esi+0x5b],0x9e96e97b
  41f56d:	jno    0x41f5ae
  41f56f:	bound  edx,QWORD PTR [eax-0x50]
  41f572:	shr    BYTE PTR [edi+0x41907e19],0x4c
  41f579:	ficom  WORD PTR [ebx-0x4e]
  41f57c:	sar    DWORD PTR [edx-0x691083fe],0xb7
  41f583:	nop
  41f584:	bound  eax,QWORD PTR [ecx+0x4a]
  41f587:	test   eax,0xd20600ff
  41f58c:	gs dec ebx
  41f58e:	and    al,BYTE PTR [eax-0x18]
  41f591:	sahf   
  41f592:	sub    al,0xb9
  41f594:	push   ss
  41f595:	fwait
  41f596:	dec    ebx
  41f597:	dec    edi
  41f598:	(bad)  
  41f599:	stc    
  41f59a:	fistp  DWORD PTR [ecx]
  41f59c:	xor    BYTE PTR [ebx-0x10],bh
  41f59f:	jno    0x41f57b
  41f5a1:	call   DWORD PTR cs:[eax]
  41f5a4:	xchg   esp,eax
  41f5a5:	xchg   edx,eax
  41f5a6:	ja     0x41f559
  41f5a8:	retf   
  41f5a9:	sti    
  41f5aa:	ins    BYTE PTR es:[edi],dx
  41f5ab:	jmp    0xa0816ec1
  41f5b0:	(bad)
  41f5b3:	jle    0x41f5ec
  41f5b5:	or     DWORD PTR [edx-0x36],ecx
  41f5b8:	xchg   DWORD PTR [eax-0x12],edx
  41f5bb:	mov    WORD PTR ds:0x7e1c8e0e,es
  41f5c1:	pop    edx
  41f5c2:	arpl   di,ax
  41f5c4:	xor    eax,DWORD PTR [ebp+0x1a358ffe]
  41f5ca:	xchg   ebx,eax
  41f5cb:	pop    edi
  41f5cc:	jbe    0x41f5c5
  41f5ce:	mov    eax,DWORD PTR [eax+0x57]
  41f5d1:	xchg   ebx,eax
  41f5d2:	popa   
  41f5d3:	adc    BYTE PTR [ecx+0x48929c5c],bl
  41f5d9:	and    eax,0xd6c7fb55
  41f5de:	sub    esp,DWORD PTR [esi+0x69caa799]
  41f5e4:	push   edi
  41f5e5:	xchg   ebx,eax
  41f5e6:	outs   dx,BYTE PTR ds:[esi]
  41f5e7:	push   eax
  41f5e8:	iret   
  41f5e9:	mov    edx,0x3dcd1afc
  41f5ee:	mov    esp,0xc1897919
  41f5f3:	scas   eax,DWORD PTR es:[edi]
  41f5f4:	jg     0x41f5c2
  41f5f6:	pop    eax
  41f5f7:	arpl   WORD PTR [eax-0x68],dx
  41f5fa:	sar    DWORD PTR [ecx+0x5d769cc1],cl
  41f600:	test   al,0x55
  41f602:	push   esi
  41f603:	dec    edx
  41f604:	outs   dx,DWORD PTR ds:[esi]
  41f605:	(bad)  
  41f607:	addr16 mov ds:0x6e2c,al
  41f60b:	loopne 0x41f5f1
  41f60d:	lahf   
  41f60e:	sub    al,0x82
  41f610:	int    0x94
  41f612:	push   ds
  41f613:	icebp  
  41f614:	add    BYTE PTR gs:[eax],al
	...
  41f61f:	add    BYTE PTR [eax],al
  41f621:	inc    edx
  41f622:	add    eax,0x65676020
  41f627:	inc    edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	cli    
  41f62e:	mov    esp,0x70d90520
  41f633:	add    DWORD PTR [eax],eax
  41f635:	lods   al,BYTE PTR ds:[esi]
  41f636:	add    eax,DWORD PTR [eax]
  41f638:	add    cl,bh
  41f63a:	push   esp
  41f63b:	sar    DWORD PTR ds:0xb92ab28f,cl
  41f641:	fidivr DWORD PTR [ebp+0x64]
  41f644:	inc    eax
  41f645:	add    al,BYTE PTR [ebx+edx*2]
  41f648:	xchg   ecx,eax
  41f649:	and    esi,DWORD PTR [eax]
  41f64b:	mov    al,0xd0
  41f64d:	mov    eax,ds:0x9ba0b8d5
  41f652:	repnz cmp DWORD PTR [ebx],esp
  41f655:	jae    0x41f67e
  41f657:	jo     0x41f63e
  41f659:	aaa    
  41f65a:	add    ecx,edi
  41f65c:	icebp  
  41f65d:	xchg   ebx,eax
  41f65e:	iret   
  41f65f:	cmp    bl,BYTE PTR [esi+0x10138b39]
  41f665:	in     al,0xca
  41f667:	and    al,0xf8
  41f669:	adc    BYTE PTR [ebx-0x22],0x67
  41f66d:	sub    ah,BYTE PTR [edi]
  41f66f:	pop    ds
  41f670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f671:	xor    eax,0x6139c3ea
  41f676:	lea    ebx,[ebx]
  41f678:	(bad)  
  41f679:	push   cs
  41f67a:	mov    bl,0xb9
  41f67c:	enter  0xfb51,0xa7
  41f680:	jge    0x41f658
  41f682:	(bad)  
  41f683:	jle    0x41f66f
  41f685:	jb     0x41f673
  41f687:	cmp    eax,0x58c7133d
  41f68c:	and    eax,0x25d9ee69
  41f691:	call   ebx
  41f693:	xor    eax,0x4f3aed55
  41f698:	mov    dl,0x9d
  41f69a:	inc    ecx
  41f69b:	cmc    
  41f69c:	stos   DWORD PTR es:[edi],eax
  41f69d:	or     dl,BYTE PTR [ecx-0x7e]
  41f6a0:	mul    DWORD PTR [edi-0x78]
  41f6a3:	dec    esi
  41f6a4:	push   edx
  41f6a5:	pop    edi
  41f6a6:	pop    ss
  41f6a7:	in     eax,dx
  41f6a8:	mov    dh,0x89
  41f6aa:	push   es
  41f6ab:	popf   
  41f6ac:	adc    al,al
  41f6ae:	xor    eax,0xa3a66b96
  41f6b3:	cdq    
  41f6b4:	dec    ebx
  41f6b5:	xlat   BYTE PTR ds:[ebx]
  41f6b6:	test   esp,0xdfc7ba73
  41f6bc:	dec    eax
  41f6bd:	add    ecx,DWORD PTR [edi+0x5e]
  41f6c0:	pop    ebx
  41f6c1:	je     0x41f6db
  41f6c3:	jnp    0x41f726
  41f6c5:	aad    0x8
  41f6c7:	jge    0x41f67a
  41f6c9:	enter  0x7764,0x9
  41f6cd:	xchg   edx,eax
  41f6ce:	xchg   esi,eax
  41f6cf:	or     ecx,DWORD PTR [esi+0x26]
  41f6d2:	jbe    0x41f65c
  41f6d4:	das    
  41f6d5:	out    0xfd,al
  41f6d7:	stos   BYTE PTR es:[edi],al
  41f6d8:	cs jnp 0x41f712
  41f6db:	aad    0xaa
  41f6dd:	repz inc ebx
  41f6df:	(bad)  
  41f6e0:	and    DWORD PTR [ebx+0x1c],ebx
  41f6e3:	in     al,0x98
  41f6e5:	or     BYTE PTR [ecx+0x12],bh
  41f6e8:	xchg   edi,eax
  41f6e9:	push   ebx
  41f6ea:	add    eax,DWORD PTR [edi]
  41f6ec:	cwde   
  41f6ed:	and    DWORD PTR [edx-0x680bb272],ebp
  41f6f3:	sbb    esp,ebp
  41f6f5:	stos   DWORD PTR es:[edi],eax
  41f6f6:	dec    esi
  41f6f7:	retf   
  41f6f8:	xchg   esp,eax
  41f6f9:	(bad)  
  41f6fa:	mov    WORD PTR [esi+0x20071506],gs
  41f700:	retf   0x757a
  41f703:	arpl   WORD PTR [ebx-0x57],sp
  41f706:	mov    BYTE PTR [edx-0x61],0x61
  41f70a:	push   esi
  41f70b:	jle    0x41f6f7
  41f70d:	pop    es
  41f70e:	test   al,0x33
  41f710:	call   0x9a29497b
  41f715:	in     eax,0xc8
  41f717:	mov    cl,0xee
  41f719:	adc    BYTE PTR [ebx],0xeb
  41f71c:	clc    
  41f71d:	add    esi,DWORD PTR [ecx]
  41f71f:	int    0xdf
  41f721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f722:	sahf   
  41f723:	adc    DWORD PTR [edx],esp
  41f725:	(bad)
  41f728:	std    
  41f729:	sbb    BYTE PTR [ebx],bh
  41f72b:	iret   
  41f72c:	sbb    eax,0x533147de
  41f731:	shl    cl,cl
  41f733:	mov    ecx,0xf61c9836
  41f738:	adc    dl,BYTE PTR [ecx]
  41f73a:	dec    edx
  41f73b:	daa    
  41f73c:	xchg   ecx,eax
  41f73d:	shr    edi,1
  41f73f:	fdivr  DWORD PTR [ebx+0x51725277]
  41f745:	mov    dh,0x6c
  41f747:	jae    0x41f6f1
  41f749:	ret    0x985c
  41f74c:	mov    bl,0xfa
  41f74e:	add    ah,BYTE PTR [ebp+0x65422c95]
  41f754:	xchg   ecx,eax
  41f755:	ja     0x41f773
  41f757:	sub    DWORD PTR [esi-0x26],eax
  41f75a:	jno    0x41f760
  41f75c:	hlt    
  41f75d:	fdiv   QWORD PTR [edx-0x3c]
  41f760:	dec    edi
  41f761:	scas   eax,DWORD PTR es:[edi]
  41f762:	inc    ebx
  41f763:	mov    ecx,0x4f9a052b
  41f768:	call   0xa398:0x56d9d5b1
  41f76f:	iret   
  41f770:	je     0x41f780
  41f772:	clc    
  41f773:	fstp   QWORD PTR [ebp-0x7d315306]
  41f779:	inc    esp
  41f77a:	add    bl,cl
  41f77c:	nop
  41f77d:	ret    
  41f77e:	mov    dl,0x56
  41f780:	imul   eax,DWORD PTR [esi+0x75],0xffffff8d
  41f784:	loop   0x41f737
  41f786:	mov    bl,0xbc
  41f788:	js     0x41f7e2
  41f78a:	stos   DWORD PTR es:[edi],eax
  41f78b:	cmp    BYTE PTR [ebx+ebp*1+0xeda4860],cl
  41f792:	mov    ecx,0x43b228d4
  41f797:	ja     0x41f739
  41f799:	outs   dx,DWORD PTR ds:[esi]
  41f79a:	mov    bh,BYTE PTR [ebx-0x16]
  41f79d:	loopne 0x41f7bb
  41f79f:	out    dx,eax
  41f7a0:	xchg   esp,eax
  41f7a1:	sbb    ecx,edx
  41f7a3:	add    esp,DWORD PTR [ecx-0x3b]
  41f7a6:	jg     0x41f823
  41f7a8:	(bad)  
  41f7a9:	xor    al,0xb2
  41f7ab:	and    DWORD PTR ds:0x4b6a2d79,ebx
  41f7b1:	lods   eax,DWORD PTR ds:[esi]
  41f7b2:	or     DWORD PTR [edi],esp
  41f7b4:	repz repnz pop ss
  41f7b7:	push   es
  41f7b8:	or     BYTE PTR [ebx-0x4b89c26e],0xe4
  41f7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c0:	adc    DWORD PTR [edi*1-0x5bd89882],ebx
  41f7c7:	jecxz  0x41f7e6
  41f7c9:	fcmovnu st,st(2)
  41f7cb:	jbe    0x41f81c
  41f7cd:	add    ch,BYTE PTR [edi+0x3c]
  41f7d0:	and    eax,0xef5b3eb
  41f7d5:	repz and eax,0x3f
  41f7d9:	mov    DWORD PTR [esi+0x2b29b643],eax
  41f7df:	aad    0xcf
  41f7e1:	pop    ebp
  41f7e2:	pop    esi
  41f7e3:	popa   
  41f7e4:	cld    
  41f7e5:	pop    ds
  41f7e6:	(bad)  
  41f7e7:	xor    DWORD PTR [edx+0x731c4a5e],esp
  41f7ed:	mov    ch,BYTE PTR [edi]
  41f7ef:	inc    edx
  41f7f0:	mov    ds:0x3e509384,al
  41f7f5:	call   0x7ba1e966
  41f7fa:	mov    ?,WORD PTR gs:[edi+ebx*4]
  41f7fe:	test   al,0xcb
  41f800:	pop    ebx
  41f801:	call   0x5d3b4d60
  41f806:	jle    0x41f85b
  41f808:	(bad)  
  41f80a:	jg     0x41f7d1
  41f80c:	mov    dl,0xe3
  41f80e:	jno    0x41f7ae
  41f810:	dec    edx
  41f811:	push   ds
  41f812:	call   FWORD PTR [edi-0x7a0e2d10]
  41f818:	xor    ch,BYTE PTR [edi+0x26]
  41f81b:	add    BYTE PTR [esi],al
  41f81d:	dec    esi
  41f81e:	xchg   ebp,eax
  41f81f:	mov    eax,0x3ceb20f7
  41f824:	test   eax,esp
  41f826:	sbb    ebx,DWORD PTR [edx-0x7e]
  41f829:	dec    ecx
  41f82a:	mov    bl,0xe4
  41f82c:	push   0xffffffc1
  41f82e:	dec    esp
  41f82f:	jmp    0xa74c:0xc7a25d5f
  41f836:	(bad)  
  41f837:	push   ecx
  41f838:	add    DWORD PTR [edx+0x36],edi
  41f83b:	fidivr DWORD PTR [ebp-0x52]
  41f83e:	pop    ss
  41f83f:	mov    bh,0x3e
  41f841:	dec    eax
  41f842:	dec    edi
  41f843:	mov    esp,0x27e15aad
  41f848:	mov    ds:0xf2b66dd7,eax
  41f84d:	iret   
  41f84e:	test   eax,0xd38ad9e4
  41f853:	call   DWORD PTR [edi]
  41f855:	inc    ecx
  41f856:	dec    edi
  41f857:	rcr    ecx,1
  41f859:	addr16 push es
  41f85b:	or     DWORD PTR [edi+0x64],ebp
  41f85e:	xor    DWORD PTR [edx+0x3d672f3d],0x938ae41
  41f868:	push   es
  41f869:	pop    edx
  41f86a:	jle    0x41f805
  41f86c:	adc    eax,0x932408f3
  41f871:	mov    bh,dl
  41f873:	sub    BYTE PTR [ebp+0x77],0x21
  41f877:	pop    ebp
  41f878:	jmp    0xe7d9876d
  41f87d:	xchg   ebx,eax
  41f87e:	dec    edi
  41f87f:	stos   DWORD PTR es:[edi],eax
  41f880:	mov    dh,BYTE PTR [esi-0x4554d711]
  41f886:	sti    
  41f887:	pop    eax
  41f888:	pop    ebx
  41f889:	or     ebx,DWORD PTR [ebx]
  41f88b:	add    eax,0xbc477fd3
  41f890:	xor    DWORD PTR [ebp+eax*4-0x22],esp
  41f894:	mov    BYTE PTR [edi],bl
  41f896:	xchg   BYTE PTR [edi+0x77],ah
  41f899:	mov    edi,eax
  41f89b:	jnp    0x41f91c
  41f89d:	jmp    0xc80796fd
  41f8a2:	or     ch,BYTE PTR [edi-0x7e217e57]
  41f8a8:	stos   BYTE PTR es:[edi],al
  41f8a9:	xchg   BYTE PTR [eax-0x3cc87981],dh
  41f8af:	inc    eax
  41f8b0:	xor    DWORD PTR [esi],ecx
  41f8b2:	sub    eax,DWORD PTR [eax+eax*1+0x6c]
  41f8b6:	es cmp cl,bh
  41f8b9:	cmp    cl,dh
  41f8bb:	xor    DWORD PTR [edi],eax
  41f8bd:	dec    edx
  41f8be:	les    ax,DWORD PTR [edi]
  41f8c1:	(bad)  
  41f8c2:	add    al,0x8f
  41f8c4:	push   edi
  41f8c5:	sbb    eax,0x7c18b413
  41f8ca:	es inc esp
  41f8cc:	push   esi
  41f8cd:	lds    esp,FWORD PTR [ebx+ebx*8-0x19431b6]
  41f8d4:	sub    DWORD PTR [eax-0x68],ebx
  41f8d7:	jmp    0x2b6364b
  41f8dc:	or     al,0xe0
  41f8de:	mov    es,WORD PTR [edx]
  41f8e0:	or     ebp,DWORD PTR [ebp+eax*8+0x33933ba1]
  41f8e7:	adc    cl,ch
  41f8e9:	pop    ds
  41f8ea:	sbb    eax,0x83a81487
  41f8ef:	pop    es
  41f8f0:	daa    
  41f8f1:	xor    eax,0xbb786cdc
  41f8f6:	sub    eax,0x5c0e9b86
  41f8fb:	enter  0x8f99,0xa6
  41f8ff:	je     0x41f8af
  41f901:	xchg   ebp,eax
  41f902:	cld    
  41f903:	mov    eax,0xb479f21
  41f908:	add    esp,DWORD PTR [eax-0x54f57f6]
  41f90e:	push   es
  41f90f:	ret    0x4ea5
  41f912:	in     eax,0x4c
  41f914:	inc    esp
  41f915:	loopne 0x41f93a
  41f917:	popf   
  41f918:	jmp    0x326c:0x86e0986a
  41f91f:	sahf   
  41f920:	pushf  
  41f921:	pop    esp
  41f922:	daa    
  41f923:	mov    BYTE PTR [edi-0x7d],dl
  41f926:	pop    es
  41f927:	adc    al,0xa3
  41f929:	sbb    al,bl
  41f92b:	dec    edx
  41f92c:	xor    BYTE PTR [ecx-0x546b024e],dh
  41f932:	std    
  41f933:	add    edx,DWORD PTR [edi+eiz*1+0x68ca7f48]
  41f93a:	adc    eax,0x4fff6063
  41f93f:	sbb    eax,0x89b087ba
  41f944:	cmp    DWORD PTR [esi],edx
  41f946:	outs   dx,BYTE PTR ds:[esi]
  41f947:	mov    esi,DWORD PTR [edx+eiz*1]
  41f94a:	sub    ah,BYTE PTR [esi]
  41f94c:	test   eax,0xcbbec333
  41f951:	rcr    BYTE PTR [ecx-0x1fd8c405],cl
  41f957:	or     BYTE PTR [ecx+0x28],cl
  41f95a:	dec    eax
  41f95b:	ja     0x41f97d
  41f95d:	xor    DWORD PTR [esi-0x40530f82],eax
  41f963:	or     bl,al
  41f965:	stc    
  41f966:	pop    ss
  41f967:	mov    esp,0xc5898180
  41f96c:	in     al,dx
  41f96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96e:	ret    0x779a
  41f971:	mov    ch,BYTE PTR [esi+0x1b]
  41f974:	jbe    0x41f936
  41f976:	loope  0x41f9dc
  41f978:	call   0x3b46:0xec6aa203
  41f97f:	push   eax
  41f980:	push   esi
  41f981:	pop    esi
  41f982:	js     0x41f973
  41f984:	inc    edx
  41f985:	and    ah,BYTE PTR [ebp+0x4b]
  41f988:	add    al,0xec
  41f98a:	dec    eax
  41f98b:	adc    al,cl
  41f98d:	out    dx,eax
  41f98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f98f:	mov    ebp,0xe8a14018
  41f994:	inc    ebx
  41f995:	sahf   
  41f996:	and    edi,DWORD PTR [edi+0x49]
  41f999:	mov    ch,0x17
  41f99b:	sahf   
  41f99c:	sti    
  41f99d:	inc    edi
  41f99e:	fidivr DWORD PTR [edi+ecx*1-0x38]
  41f9a2:	mov    esi,DWORD PTR [edi]
  41f9a4:	jb     0x41f98d
  41f9a6:	jge    0x41f9da
  41f9a8:	jb     0x41f9e0
  41f9aa:	inc    ebp
  41f9ab:	mov    ebp,0xfd913dc1
  41f9b0:	xor    dl,BYTE PTR [esi+0x13]
  41f9b3:	adc    edx,esp
  41f9b5:	mov    al,BYTE PTR [ebp+esi*8-0x4b4d172]
  41f9bc:	cmp    eax,0xec8ac13c
  41f9c1:	ins    BYTE PTR es:[edi],dx
  41f9c2:	call   0x7110:0x4d5222a3
  41f9c9:	lahf   
  41f9ca:	sbb    dl,BYTE PTR [edx+0x67483442]
  41f9d0:	popa   
  41f9d1:	popa   
  41f9d2:	jmp    0x41fa26
  41f9d4:	pop    ebp
  41f9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9d6:	cmp    ebx,ebx
  41f9d8:	fld    TBYTE PTR [ebp+0x99fec2a]
  41f9de:	pop    esp
  41f9df:	fcomp  DWORD PTR [ebx-0x5a]
  41f9e2:	aam    0xf7
  41f9e4:	mov    DWORD PTR [eax],eax
	...
  41f9ee:	add    BYTE PTR [eax],al
  41f9f0:	add    BYTE PTR [edi-0x637fe3d1],bh
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	mul    BYTE PTR [esi+0x39]
  41fa00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa01:	test   DWORD PTR [ecx+eax*1+0x0],esi
  41fa05:	lods   al,BYTE PTR ds:[esi]
  41fa06:	add    eax,DWORD PTR [eax]
  41fa08:	add    BYTE PTR [ebx],ch
  41fa0a:	or     BYTE PTR [edx],bh
  41fa0c:	mov    dh,0x62
  41fa0e:	or     al,BYTE PTR [esi]
  41fa10:	(bad)  
  41fa11:	addr16 int 0xc5
  41fa14:	retf   0x635d
  41fa17:	(bad)  
  41fa18:	mov    bh,0x35
  41fa1a:	mov    esp,0xdf6e167b
  41fa1f:	cmp    ch,BYTE PTR [ebx]
  41fa21:	cmp    edx,DWORD PTR [esi+0x71]
  41fa24:	adc    BYTE PTR [edi],al
  41fa26:	(bad)  
  41fa27:	in     al,0xda
  41fa29:	mov    ds:0x57c1d1c8,eax
  41fa2e:	push   0x7c
  41fa30:	aam    0x33
  41fa32:	mov    ah,0x9c
  41fa34:	sub    eax,DWORD PTR [ebx+0x60]
  41fa37:	jbe    0x41f9f5
  41fa39:	sbb    ebp,0x6dc9bd7d
  41fa3f:	jno    0x41faa5
  41fa41:	rcl    esp,0x55
  41fa44:	jnp    0x41f9d4
  41fa46:	daa    
  41fa47:	or     BYTE PTR [ecx],ch
  41fa49:	and    DWORD PTR [ebx+ebp*1-0x6e],esp
  41fa4d:	xchg   esp,eax
  41fa4e:	outs   dx,BYTE PTR ds:[esi]
  41fa4f:	add    cl,BYTE PTR [ebx]
  41fa51:	andps  xmm6,XMMWORD PTR [ecx-0x5181346f]
  41fa58:	int3   
  41fa59:	and    BYTE PTR [esi],bh
  41fa5b:	lods   eax,DWORD PTR ds:[esi]
  41fa5c:	cli    
  41fa5d:	cmp    eax,esi
  41fa5f:	aaa    
  41fa60:	mov    cl,0xa
  41fa62:	test   dl,al
  41fa64:	test   al,0x85
  41fa66:	mov    ah,0x76
  41fa68:	shr    DWORD PTR [esi],cl
  41fa6a:	push   esp
  41fa6b:	push   ebx
  41fa6c:	xor    esp,DWORD PTR [esi+edi*8+0x6c]
  41fa70:	xchg   ecx,eax
  41fa71:	jg     0x41fac6
  41fa73:	mov    edi,0x43b155b8
  41fa78:	pop    ebx
  41fa79:	push   ecx
  41fa7a:	push   ds
  41fa7b:	iret   
  41fa7c:	dec    ebp
  41fa7d:	sbb    bh,dh
  41fa7f:	sti    
  41fa80:	rol    edx,0xff
  41fa83:	std    
  41fa84:	xor    eax,0xab374091
  41fa89:	aas    
  41fa8a:	popa   
  41fa8b:	push   eax
  41fa8c:	xor    ch,cl
  41fa8e:	pusha  
  41fa8f:	mov    bl,0x7
  41fa91:	adc    al,0x24
  41fa93:	sti    
  41fa94:	hlt    
  41fa95:	fbld   TBYTE PTR [esi-0x61cc1cdc]
  41fa9b:	cmp    eax,0x8b953421
  41faa0:	xor    BYTE PTR [ecx+0x15fb8fa3],dh
  41faa6:	fnstenv [eax-0x7fc44bca]
  41faac:	arpl   WORD PTR [edi],dx
  41faae:	ja     0x41fb20
  41fab0:	or     bl,cl
  41fab2:	sub    eax,0x2898e044
  41fab7:	fs js  0x41fad4
  41faba:	xor    dh,0x20
  41fabd:	sub    DWORD PTR [ebx],esp
  41fabf:	ja     0x41fb0d
  41fac1:	popa   
  41fac2:	xor    al,0xca
  41fac4:	sbb    BYTE PTR [edi+ecx*1+0x4e643925],0x3f
  41facc:	jp     0x41fb27
  41face:	jae    0x41fb27
  41fad0:	inc    eax
  41fad1:	pop    ebx
  41fad2:	pusha  
  41fad3:	mov    edx,0x5afe818c
  41fad8:	add    cl,dh
  41fada:	push   ss
  41fadb:	pushf  
  41fadc:	fnsave [ecx]
  41fade:	mov    esi,0x91a708d9
  41fae3:	fld    QWORD PTR [eax+0x28]
  41fae6:	(bad)  
  41fae7:	jo     0x41faa8
  41fae9:	popf   
  41faea:	add    edi,esi
  41faec:	push   cs
  41faed:	repz pop edx
  41faef:	cld    
  41faf0:	xor    DWORD PTR [ecx-0xb39dd9d],ecx
  41faf6:	pop    esp
  41faf7:	mov    ebx,0xd9eda003
  41fafc:	fst    QWORD PTR ds:0x48dbc7e0
  41fb02:	(bad)  
  41fb04:	xor    ebx,DWORD PTR [esi+ebx*8-0xfae247d]
  41fb0b:	dec    ecx
  41fb0c:	imul   esp,DWORD PTR [ebp+0x4],0xdce16b70
  41fb13:	add    ebx,0x70
  41fb16:	pop    esp
  41fb17:	out    dx,al
  41fb18:	jno    0x41faad
  41fb1a:	(bad)  
  41fb1b:	or     DWORD PTR [ecx-0x38],edi
  41fb1e:	add    BYTE PTR [edx-0x76],dh
  41fb21:	push   edx
  41fb22:	ins    DWORD PTR es:[edi],dx
  41fb23:	xor    esp,edi
  41fb25:	add    cl,BYTE PTR [ebp+ecx*2+0x6e]
  41fb29:	mov    bl,0x84
  41fb2b:	push   esi
  41fb2c:	ss push 0xffffff87
  41fb2f:	fucomip st,st(5)
  41fb31:	stos   DWORD PTR es:[edi],eax
  41fb32:	fsubrp st(7),st
  41fb34:	es push ecx
  41fb36:	sti    
  41fb37:	sahf   
  41fb38:	dec    ebx
  41fb39:	pop    esi
  41fb3a:	add    ebp,DWORD PTR [edi+eiz*2-0x6c43b62c]
  41fb41:	sbb    edx,DWORD PTR [edi+0x3921399c]
  41fb47:	cmc    
  41fb48:	mov    ebx,0xe73a3c23
  41fb4d:	repnz sub eax,0x4605612a
  41fb53:	add    bh,ch
  41fb55:	lods   eax,DWORD PTR ds:[esi]
  41fb56:	shl    cl,cl
  41fb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb59:	xor    ch,BYTE PTR [esi+0x78]
  41fb5c:	aam    0x63
  41fb5e:	retf   0xa0e6
  41fb61:	dec    edi
  41fb62:	push   esp
  41fb63:	clc    
  41fb64:	adc    eax,0x236fde70
  41fb69:	arpl   WORD PTR ds:0x4a56f8fb,bp
  41fb6f:	jg     0x41fb60
  41fb71:	pop    ebx
  41fb72:	aam    0xa
  41fb74:	aas    
  41fb75:	jge    0x41fb31
  41fb77:	pop    esi
  41fb78:	xor    DWORD PTR [ecx+0x48],edi
  41fb7b:	scas   eax,DWORD PTR es:[edi]
  41fb7c:	cmp    al,0xb9
  41fb7e:	pop    edx
  41fb7f:	and    al,BYTE PTR [eax]
  41fb81:	pop    ecx
  41fb82:	inc    esp
  41fb83:	shl    DWORD PTR [ebp-0x179bb46c],1
  41fb89:	push   0xfffffff8
  41fb8b:	mov    ds:0xda045165,eax
  41fb90:	in     al,dx
  41fb91:	fidiv  DWORD PTR [eax+0x61]
  41fb94:	cmp    dh,ah
  41fb96:	nop
  41fb97:	mov    WORD PTR [ebx-0x2ae7ecf7],ds
  41fb9d:	mov    dl,0x18
  41fb9f:	lods   al,BYTE PTR ds:[esi]
  41fba0:	bswap  ebx
  41fba2:	mov    ds:0x7bf9e831,al
  41fba7:	(bad)  
  41fba8:	out    0xb7,al
  41fbaa:	imul   eax,DWORD PTR [ecx+ebp*1+0x2d6e6a43],0x34201502
  41fbb5:	loope  0x41fb3f
  41fbb7:	fsubr  st(3),st
  41fbb9:	unpcklps xmm5,XMMWORD PTR [edx+0x58af9e05]
  41fbc0:	push   0xe0f32a2b
  41fbc5:	mov    al,ds:0x7c8f9a46
  41fbca:	sti    
  41fbcb:	bound  eax,QWORD PTR [ebx+0x26]
  41fbce:	repnz fiadd DWORD PTR [edx]
  41fbd1:	cld    
  41fbd2:	lods   al,BYTE PTR ds:[esi]
  41fbd3:	scas   al,BYTE PTR es:[edi]
  41fbd4:	ret    
  41fbd5:	inc    edi
  41fbd6:	add    BYTE PTR [esi],cl
  41fbd8:	pop    edx
  41fbd9:	rol    DWORD PTR [edi],0x5d
  41fbdc:	out    dx,eax
  41fbdd:	pop    esi
  41fbde:	lock xchg ebx,eax
  41fbe0:	jo     0x41fbf9
  41fbe2:	dec    ebp
  41fbe3:	dec    edi
  41fbe4:	arpl   WORD PTR [edi+0x15d4800f],bp
  41fbea:	dec    eax
  41fbeb:	retf   
  41fbec:	mov    eax,ds:0xc0dbaf1
  41fbf1:	mov    dh,0xf8
  41fbf3:	mov    al,0xfd
  41fbf5:	or     eax,0xfdcc8a9d
  41fbfa:	push   0x292f8e23
  41fbff:	xchg   DWORD PTR [ecx+0x7dd7d5a9],ebx
  41fc05:	aas    
  41fc06:	push   esi
  41fc07:	adc    esp,DWORD PTR ss:[ecx+0x1a1376e3]
  41fc0e:	sub    bl,BYTE PTR [ebp+0x7faf47db]
  41fc14:	fdiv   DWORD PTR [ebx+ecx*2]
  41fc17:	idiv   DWORD PTR ds:0x88b07245
  41fc1d:	cmc    
  41fc1e:	jecxz  0x41fc27
  41fc20:	cli    
  41fc21:	push   ecx
  41fc22:	xor    edx,DWORD PTR [esi]
  41fc24:	sub    ah,cl
  41fc26:	out    0xf3,eax
  41fc28:	ds mov dl,0x1a
  41fc2b:	cld    
  41fc2c:	lods   eax,DWORD PTR ds:[esi]
  41fc2d:	inc    edx
  41fc2e:	out    0x41,al
  41fc30:	ja     0x41fc0c
  41fc32:	xor    eax,0xadc89156
  41fc37:	and    DWORD PTR [eax],esp
  41fc39:	hlt    
  41fc3a:	pop    esp
  41fc3b:	cdq    
  41fc3c:	les    ebx,FWORD PTR [edi-0x40bce402]
  41fc42:	xchg   ebp,eax
  41fc43:	add    ch,bh
  41fc45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc46:	iret   
  41fc47:	sbb    eax,0x9902609
  41fc4c:	lock mov bl,0xa3
  41fc4f:	jb     0x41fca7
  41fc51:	pop    es
  41fc52:	dec    edi
  41fc53:	push   ebp
  41fc54:	inc    ecx
  41fc55:	xor    al,0x67
  41fc57:	(bad)  
  41fc58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc59:	pop    es
  41fc5a:	lock idiv DWORD PTR ds:0xa952281e
  41fc61:	scas   eax,DWORD PTR es:[edi]
  41fc62:	(bad)  
  41fc63:	jb     0x41fcaa
  41fc65:	fs inc esp
  41fc67:	shr    DWORD PTR [ebp+0x297d552c],cl
  41fc6d:	call   0xc4037510
  41fc72:	adc    al,0x56
  41fc74:	loopne 0x41fcee
  41fc76:	or     ebx,DWORD PTR [ebp+0x14]
  41fc79:	neg    DWORD PTR [ebx+0x56]
  41fc7c:	(bad)  
  41fc7d:	jle    0x41fc84
  41fc7f:	in     eax,0xca
  41fc81:	add    eax,0x856b232
  41fc86:	adc    edi,edi
  41fc88:	jbe    0x41fc46
  41fc8a:	out    0x1c,al
  41fc8c:	sub    eax,0x70251943
  41fc91:	je     0x41fc87
  41fc93:	jae    0x41fcd6
  41fc95:	ret    
  41fc96:	push   ebp
  41fc97:	cwde   
  41fc98:	lds    ecx,FWORD PTR [ecx]
  41fc9a:	inc    ebx
  41fc9b:	stos   BYTE PTR es:[edi],al
  41fc9c:	push   eax
  41fc9d:	push   eax
  41fc9e:	add    edi,DWORD PTR [ebx]
  41fca0:	sbb    eax,0x55cdf542
  41fca5:	sub    esp,ebx
  41fca7:	and    bl,dl
  41fca9:	aaa    
  41fcaa:	leave  
  41fcab:	jmp    0xa20e:0x577c401
  41fcb2:	inc    ebp
  41fcb3:	add    BYTE PTR [esi-0x60],dh
  41fcb6:	mov    ebx,fs
  41fcb8:	xor    ebx,DWORD PTR [edi]
  41fcba:	push   cs
  41fcbb:	jmp    0xb84683f6
  41fcc0:	inc    eax
  41fcc1:	jno    0x41fd3e
  41fcc3:	imul   eax,DWORD PTR [esi-0x4a4c256f],0x33365e26
  41fccd:	rol    BYTE PTR [ecx-0x14],0x54
  41fcd1:	sti    
  41fcd2:	jnp    0x41fcbf
  41fcd4:	mov    ebp,0xfbfd7aa9
  41fcd9:	add    DWORD PTR [edi-0x67],esp
  41fcdc:	repz retf 
  41fcde:	aaa    
  41fcdf:	jbe    0x41fd03
  41fce1:	mov    al,0x4b
  41fce3:	test   al,0xd
  41fce5:	call   0x74391553
  41fcea:	or     bh,ch
  41fcec:	jl     0x41fca6
  41fcee:	cmc    
  41fcef:	sub    ecx,0xfffffff4
  41fcf2:	neg    DWORD PTR [ebp-0x44]
  41fcf5:	pop    ss
  41fcf6:	lea    edx,[esi]
  41fcf8:	(bad)  
  41fcf9:	and    dl,BYTE PTR [esi-0x3d]
  41fcfc:	and    esp,DWORD PTR [edx+ebp*8-0x6d]
  41fd00:	lds    esi,FWORD PTR [edi]
  41fd02:	hlt    
  41fd03:	inc    edx
  41fd04:	mov    WORD PTR [edi+ecx*2-0x2c],?
  41fd08:	sub    eax,0x6ae483de
  41fd0d:	adc    BYTE PTR [ecx],cl
  41fd0f:	fmulp  st(7),st
  41fd11:	xchg   eax,eax
  41fd13:	rcr    cl,cl
  41fd15:	hlt    
  41fd16:	(bad)  
  41fd17:	fld    QWORD PTR [ecx+0x4f]
  41fd1a:	mov    al,0x54
  41fd1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1d:	mov    ah,0xe9
  41fd1f:	jbe    0x41fd5d
  41fd21:	mov    ch,0x4b
  41fd23:	ins    BYTE PTR es:[edi],dx
  41fd24:	pop    esi
  41fd25:	dec    esp
  41fd26:	and    DWORD PTR ds:0x472a7444,eax
  41fd2c:	xchg   ebx,eax
  41fd2d:	and    eax,0x48573931
  41fd32:	xor    eax,0x4d57c0ab
  41fd37:	xchg   edx,eax
  41fd38:	ret    
  41fd39:	pop    esi
  41fd3a:	popa   
  41fd3b:	fimul  DWORD PTR [ebx-0x69]
  41fd3e:	adc    ah,al
  41fd40:	jbe    0x41fd0b
  41fd42:	xor    bl,BYTE PTR [esi+0x2a]
  41fd45:	push   ebp
  41fd46:	aaa    
  41fd47:	jno    0x41fdbd
  41fd49:	test   DWORD PTR [esi-0x38],edx
  41fd4c:	test   DWORD PTR [esi],ebp
  41fd4e:	jg     0x41fce7
  41fd50:	popa   
  41fd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd52:	adc    BYTE PTR [ebx+0x7b],ch
  41fd55:	or     BYTE PTR [eax],al
  41fd57:	outs   dx,DWORD PTR ds:[esi]
  41fd58:	mov    edx,DWORD PTR ss:[ebx]
  41fd5b:	inc    ebx
  41fd5c:	call   FWORD PTR [edi+0x3ce4bba]
  41fd62:	pop    edi
  41fd63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd64:	push   ebx
  41fd65:	fcom   DWORD PTR [ecx+0xe]
  41fd68:	lods   eax,DWORD PTR ds:[esi]
  41fd69:	add    eax,0x43beba8
  41fd6e:	mov    WORD PTR [edx+0x61],cs
  41fd71:	ret    0xb3be
  41fd74:	sbb    DWORD PTR [esi-0x135957ca],ecx
  41fd7a:	or     al,0xc2
  41fd7c:	pop    esi
  41fd7d:	xchg   BYTE PTR [ecx],ch
  41fd7f:	gs push esi
  41fd81:	(bad)  
  41fd82:	jnp    0x41fd2c
  41fd84:	fidivr WORD PTR [esi-0x3b]
  41fd87:	mov    bh,0xd1
  41fd89:	je     0x41fddb
  41fd8b:	add    eax,0x7814f0f9
  41fd90:	(bad)  
  41fd91:	jmp    0x778e0dba
  41fd96:	cmp    ch,0xc7
  41fd99:	sbb    bl,BYTE PTR [esi]
  41fd9b:	sar    ch,cl
  41fd9d:	dec    eax
  41fd9e:	inc    eax
  41fd9f:	add    eax,DWORD PTR [ebp+0x496c2e69]
  41fda5:	ret    0x522e
  41fda8:	test   bh,ch
  41fdaa:	sbb    al,0x35
  41fdac:	jmp    0xa07f:0x1cfd70e0
  41fdb3:	fimul  WORD PTR [esi+0x0]
	...
  41fdc1:	mov    DWORD PTR [esi+esi*4-0x320c400d],esi
  41fdc8:	(bad)  
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	fnstenv [edx]
  41fdcf:	ins    BYTE PTR es:[edi],dx
  41fdd0:	(bad)  
  41fdd1:	xor    DWORD PTR [eax+0x1],edi
  41fdd4:	add    BYTE PTR [ebx+eax*1+0x52770000],ch
  41fddb:	icebp  
  41fddc:	ins    BYTE PTR es:[edi],dx
  41fddd:	ja     0x41fdb3
  41fddf:	cmp    BYTE PTR [ebp+0x58fc71d9],ch
  41fde5:	vpunpckhqdq xmm0,xmm5,xmm2
  41fde9:	pusha  
  41fdea:	add    BYTE PTR [ebx+0x26b45f24],0x6e
  41fdf1:	pop    ebp
  41fdf2:	not    BYTE PTR [eax-0x65c9709a]
  41fdf8:	sbb    bh,BYTE PTR [ebx]
  41fdfa:	jae    0x41fe63
  41fdfc:	adc    eax,0x78a4c045
  41fe01:	pop    ds
  41fe02:	test   BYTE PTR [ecx+0x66],dh
  41fe05:	(bad)  
  41fe06:	lock loope 0x41fe14
  41fe09:	aam    0x8c
  41fe0b:	lock sbb esp,DWORD PTR [eax]
  41fe0e:	(bad)
  41fe12:	and    DWORD PTR [ecx-0x52],edi
  41fe15:	leave  
  41fe16:	shr    BYTE PTR [ebp+0x25],cl
  41fe19:	jle    0x41fe35
  41fe1b:	sub    DWORD PTR [edx+eiz*4+0x11787bc6],eax
  41fe22:	xchg   DWORD PTR [ebp-0x5ef8d614],ecx
  41fe28:	pop    ss
  41fe29:	mov    ebp,0x15ca962
  41fe2e:	pop    ecx
  41fe2f:	paddsw mm1,QWORD PTR [edi-0xe]
  41fe33:	inc    bp
  41fe35:	pusha  
  41fe36:	in     al,dx
  41fe37:	or     eax,0x6aa9a238
  41fe3c:	repnz or eax,0x20d2c5c9
  41fe42:	(bad)  
  41fe43:	mov    esi,0xa8a477b
  41fe48:	xchg   edi,eax
  41fe49:	mov    al,0x62
  41fe4b:	aaa    
  41fe4c:	test   al,0xcc
  41fe4e:	xchg   esi,eax
  41fe4f:	pop    ebp
  41fe50:	mov    bh,dl
  41fe52:	fwait
  41fe53:	repz cmp BYTE PTR [edi+0x1a],cl
  41fe57:	and    cl,BYTE PTR [edi]
  41fe59:	xlat   BYTE PTR ds:[ebx]
  41fe5a:	mov    ebx,0x836655ee
  41fe5f:	test   eax,0xd4c564f
  41fe64:	push   edi
  41fe65:	ins    BYTE PTR es:[edi],dx
  41fe66:	ret    
  41fe67:	in     eax,0xab
  41fe69:	pusha  
  41fe6a:	xor    al,0x77
  41fe6c:	add    al,0xa
  41fe6e:	add    al,0x13
  41fe70:	fistp  WORD PTR [ebx-0x64d03af6]
  41fe76:	xchg   edx,eax
  41fe77:	dec    edi
  41fe78:	sub    al,0x8b
  41fe7a:	lods   al,BYTE PTR ds:[esi]
  41fe7b:	std    
  41fe7c:	mov    eax,ds:0x798428c0
  41fe81:	call   0xf4b2:0x37272316
  41fe88:	mov    esi,0xe7a7c777
  41fe8d:	dec    ecx
  41fe8e:	out    dx,eax
  41fe8f:	in     al,0x79
  41fe91:	xor    ch,bl
  41fe93:	fidiv  WORD PTR [eax-0x6e]
  41fe96:	retf   
  41fe97:	fnstcw WORD PTR [edi]
  41fe99:	sbb    al,BYTE PTR [ebx-0x9]
  41fe9c:	mov    eax,0x574a4078
  41fea1:	std    
  41fea2:	dec    edx
  41fea3:	bound  edx,QWORD PTR [ebx+0x2aae8da2]
  41fea9:	ins    BYTE PTR es:[edi],dx
  41feaa:	jecxz  0x41ff25
  41feac:	xchg   edi,eax
  41fead:	retf   0x941c
  41feb0:	pop    ebp
  41feb1:	mov    ch,0x3e
  41feb3:	cwde   
  41feb4:	add    dh,BYTE PTR [esp+eiz*2]
  41feb7:	push   0xe2bec191
  41febc:	xchg   edx,eax
  41febd:	je     0x41fee8
  41febf:	aas    
  41fec0:	sub    al,0xa9
  41fec2:	sub    edx,edx
  41fec4:	xlat   BYTE PTR ds:[ebx]
  41fec5:	xor    BYTE PTR ds:0x52a53c03,dl
  41fecb:	jmp    FWORD PTR [esi+eax*8]
  41fece:	ins    DWORD PTR es:[edi],dx
  41fecf:	lods   al,BYTE PTR ds:[esi]
  41fed0:	fcom   st(4)
  41fed2:	dec    edx
  41fed3:	loope  0x41fe69
  41fed5:	jb     0x41fec9
  41fed7:	jg     0x41fe5e
  41fed9:	fwait
  41feda:	icebp  
  41fedb:	fbld   TBYTE PTR [edx+0xc74b808]
  41fee1:	jp     0x41fe84
  41fee3:	mov    ds:0xd7ecd90e,eax
  41fee8:	add    al,0x27
  41feea:	pop    ss
  41feeb:	loop   0x41ff3d
  41feed:	repz cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  41fef0:	mov    ah,0x42
  41fef2:	and    eax,0xe35d185
  41fef7:	jno    0x41fe9a
  41fef9:	and    ch,BYTE PTR [eax-0x66372eec]
  41feff:	sub    ebx,DWORD PTR ds:0xb751268a
  41ff05:	inc    ecx
  41ff06:	and    ecx,DWORD PTR ds:0xf6c973b9
  41ff0c:	jecxz  0x41feb9
  41ff0e:	dec    edi
  41ff0f:	inc    edx
  41ff10:	gs test al,0x77
  41ff13:	cmp    eax,0xca29e07c
  41ff18:	call   0x678536e1
  41ff1d:	loopne 0x41ff23
  41ff1f:	sbb    edx,DWORD PTR [edi-0x30]
  41ff22:	pop    ds
  41ff23:	inc    esi
  41ff24:	dec    ecx
  41ff25:	cmp    al,0x18
  41ff27:	lods   al,BYTE PTR ds:[esi]
  41ff28:	imul   eax,DWORD PTR [ebx-0x791273d1],0xffffff9a
  41ff2f:	xlat   BYTE PTR ds:[ebx]
  41ff30:	fsub   QWORD PTR ds:0xfb0fb039
  41ff36:	push   0xffffffcd
  41ff38:	or     al,0x54
  41ff3a:	retf   0x63a5
  41ff3d:	xchg   edx,eax
  41ff3e:	aaa    
  41ff3f:	aad    0x5d
  41ff41:	aaa    
  41ff42:	pop    es
  41ff43:	jg     0x41ff6e
  41ff45:	scas   al,BYTE PTR es:[edi]
  41ff46:	into   
  41ff47:	and    al,0xed
  41ff49:	or     cl,al
  41ff4b:	inc    edi
  41ff4c:	out    0x6f,eax
  41ff4e:	sbb    eax,0xcc871de3
  41ff53:	jnp    0x41fee6
  41ff55:	mov    eax,ds:0x3e503052
  41ff5a:	add    al,0xdc
  41ff5c:	jb     0x41ff7c
  41ff5e:	pop    ss
  41ff5f:	popf   
  41ff60:	test   DWORD PTR [edx-0x4c8478b6],0x804b717a
  41ff6a:	pop    eax
  41ff6b:	cmp    BYTE PTR [edx-0x31fa4de1],al
  41ff71:	and    BYTE PTR [esp+ecx*1-0x192af859],bh
  41ff78:	and    DWORD PTR [ecx-0x56cfe259],0x894091af
  41ff82:	adc    BYTE PTR [edx],bl
  41ff84:	loop   0x41ff08
  41ff86:	sbb    eax,0x4e8b2bf1
  41ff8b:	mov    ch,0x35
  41ff8d:	lods   eax,DWORD PTR ds:[esi]
  41ff8e:	inc    edx
  41ff8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff90:	mov    al,ds:0xe2f853a2
  41ff95:	(bad)  
  41ff97:	pusha  
  41ff98:	stos   DWORD PTR es:[edi],eax
  41ff99:	jp     0x420011
  41ff9b:	xchg   ebx,esp
  41ff9d:	pop    esi
  41ff9e:	fwait
  41ff9f:	loope  0x41ffc1
  41ffa1:	inc    esi
  41ffa2:	push   0x55df6782
  41ffa7:	dec    esp
  41ffa8:	int    0x21
  41ffaa:	pop    eax
  41ffab:	fnstenv [ecx]
  41ffad:	pop    ds
  41ffae:	xor    dl,dl
  41ffb0:	xchg   edi,eax
  41ffb1:	das    
  41ffb2:	int3   
  41ffb3:	pop    ecx
  41ffb4:	xchg   esi,eax
  41ffb5:	push   es
  41ffb6:	test   BYTE PTR [ecx],0x5f
  41ffb9:	adc    DWORD PTR [esi-0x74b79eab],edi
  41ffbf:	les    ecx,FWORD PTR [edx]
  41ffc1:	loop   0x41ffbe
  41ffc3:	or     DWORD PTR [edi+0x1b],esp
  41ffc6:	cmc    
  41ffc7:	jecxz  0x41ff62
  41ffc9:	mov    gs,eax
  41ffcb:	xchg   ecx,eax
  41ffcc:	cld    
  41ffcd:	inc    ebp
  41ffce:	inc    ebp
  41ffcf:	jmp    0x1af8346a
  41ffd4:	sti    
  41ffd5:	adc    al,0xba
  41ffd7:	int3   
  41ffd8:	jbe    0x42002e
  41ffda:	mov    ds:0x395988dc,al
  41ffdf:	mov    ecx,0x85e3b505
  41ffe4:	pop    ss
  41ffe5:	js     0x420043
  41ffe7:	imul   edi,DWORD PTR [ebx-0x55],0x6d
  41ffeb:	mov    DWORD PTR [eax+ecx*2-0x6b7f1344],ebp
  41fff2:	test   al,0xd9
  41fff4:	fnstcw WORD PTR [ebp+ecx*8+0x64537cfa]
  41fffb:	xor    edx,DWORD PTR [esp+edx*2-0x6f448af2]
  420002:	(bad)  
  420003:	sub    BYTE PTR [edx*2+0x31ab7f27],al
  42000a:	xchg   ebx,eax
  42000b:	(bad)  
  42000c:	fld    TBYTE PTR [eax+0x73]
  42000f:	(bad)  
  420010:	jge    0x41ffcc
  420012:	fldenv [ebp+0x49]
  420015:	mov    ch,0xff
  420017:	adc    ecx,DWORD PTR ds:[esi]
  42001a:	rcl    BYTE PTR [esi+0x40],1
  42001d:	adc    bh,BYTE PTR [esi+0x2ec2f05e]
  420023:	loopne 0x420065
  420025:	rol    dh,0xcd
  420028:	or     cl,BYTE PTR [eax+0x1a]
  42002b:	pop    ebx
  42002c:	xchg   ebx,eax
  42002d:	(bad)  
  42002e:	cmc    
  42002f:	xchg   esi,eax
  420030:	shr    bh,cl
  420032:	xor    edi,eax
  420034:	mov    eax,ds:0xd2f1be9a
  420039:	mov    eax,0xebced056
  42003e:	add    eax,0x987bfb45
  420043:	inc    edi
  420044:	or     DWORD PTR ds:0x95dc1332,0x18
  42004b:	inc    edi
  42004c:	js     0x420082
  42004e:	outs   dx,BYTE PTR ds:[esi]
  42004f:	xchg   bl,cl
  420051:	scas   eax,DWORD PTR es:[edi]
  420052:	retf   
  420053:	hlt    
  420054:	div    BYTE PTR [ebx-0x73495387]
  42005a:	lods   eax,DWORD PTR ds:[esi]
  42005b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42005c:	clc    
  42005d:	dec    ebp
  42005e:	mov    al,ds:0xa8f2f52b
  420063:	rcr    DWORD PTR [edi+0x77],cl
  420066:	xor    eax,0xc00d4770
  42006b:	inc    edx
  42006c:	fidiv  WORD PTR [ecx+0x34ee934b]
  420072:	popa   
  420073:	in     al,0x9
  420075:	jns    0x4200e0
  420077:	aad    0x76
  420079:	push   0xf28337c8
  42007e:	imul   ebp,DWORD PTR [ebp+0x117c30fd],0x885e596b
  420088:	pushf  
  420089:	(bad)  
  42008a:	fidivr DWORD PTR [esp+ebp*1]
  42008d:	jmp    0xfc104ac7
  420092:	cmp    bl,0x19
  420095:	or     DWORD PTR [ecx+ecx*8-0x46dd3b61],esp
  42009c:	mov    dh,0x6
  42009e:	xchg   ebx,eax
  42009f:	lods   al,BYTE PTR ds:[esi]
  4200a0:	push   ds
  4200a1:	stos   BYTE PTR es:[edi],al
  4200a2:	in     al,dx
  4200a3:	sub    bh,bh
  4200a5:	jecxz  0x42006d
  4200a7:	mov    dh,0x91
  4200a9:	mov    al,ds:0xa1ddd5cc
  4200ae:	cwde   
  4200af:	push   0x7e355b93
  4200b4:	mov    ds:0x381a66d9,eax
  4200b9:	loop   0x4200e9
  4200bb:	cmc    
  4200bc:	pop    esi
  4200bd:	jmp    0x70436083
  4200c2:	leave  
  4200c3:	mov    ah,0x69
  4200c5:	xchg   esp,eax
  4200c6:	(bad)  
  4200c7:	outs   dx,BYTE PTR ds:[esi]
  4200c8:	lods   eax,DWORD PTR ds:[esi]
  4200c9:	xchg   edx,eax
  4200ca:	ss or  al,0xc3
  4200cd:	mov    ah,0xc2
  4200cf:	shl    BYTE PTR [esi+0x60],0xa3
  4200d3:	je     0x420137
  4200d5:	push   ecx
  4200d6:	sub    eax,0x7dfe2919
  4200db:	push   edx
  4200dc:	arpl   dx,di
  4200de:	je     0x420063
  4200e0:	call   0xb3d9e8fb
  4200e5:	add    ch,BYTE PTR [eax]
  4200e7:	xchg   esp,eax
  4200e8:	mov    ds:0xf78d8e55,eax
  4200ed:	push   eax
  4200ee:	mov    ds,WORD PTR [edx]
  4200f0:	push   edi
  4200f1:	xlat   BYTE PTR ds:[ebx]
  4200f2:	adc    dh,BYTE PTR [edx+esi*4]
  4200f5:	call   0x973d3421
  4200fa:	cmp    edx,DWORD PTR [esi+ecx*8]
  4200fd:	mov    ebp,0x87b7d036
  420102:	xor    BYTE PTR [edi-0x79],bh
  420105:	push   0x73
  420107:	addr16 jmp 0x420149
  42010a:	cmp    al,ah
  42010c:	loope  0x42010e
  42010e:	sub    bl,BYTE PTR [ecx+0x4]
  420111:	fidiv  DWORD PTR [ebx+0x322d1926]
  420117:	imul   ecx,DWORD PTR [eax],0xffffffd9
  42011a:	(bad)  
  42011b:	mov    edi,0x7e1a1ec1
  420120:	mov    edi,0x3156e7c0
  420125:	out    dx,al
  420126:	jmp    0x420139
  420128:	inc    edi
  420129:	popf   
  42012a:	(bad)  
  42012b:	leave  
  42012c:	cmp    DWORD PTR [ebx+0x77931164],0xffffffcb
  420133:	out    0xd0,al
  420135:	shl    DWORD PTR [eax-0x39cbc19f],1
  42013b:	or     eax,0xa1a35a97
  420140:	scas   al,BYTE PTR es:[edi]
  420141:	mov    ds:0x768646eb,eax
  420146:	mov    ch,0x66
  420148:	sbb    ecx,DWORD PTR [esi]
  42014a:	cs cs push edx
  42014d:	cmp    al,0xa3
  42014f:	lods   al,BYTE PTR ds:[esi]
  420150:	lods   al,BYTE PTR ds:[esi]
  420151:	fisttp DWORD PTR [edi+0x2dc7873e]
  420157:	ins    BYTE PTR es:[edi],dx
  420158:	xor    al,0xf9
  42015a:	adc    al,0xc5
  42015c:	pop    esp
  42015d:	fst    DWORD PTR [esi+edx*8]
  420160:	mov    esi,DWORD PTR [edx]
  420162:	or     al,0x62
  420164:	int3   
  420165:	icebp  
  420166:	jb     0x4201cb
  420168:	out    dx,eax
  420169:	sbb    DWORD PTR [ecx+0x3b],eax
  42016c:	mov    dl,0x15
  42016e:	jp     0x4200f6
  420170:	test   DWORD PTR [ecx+0x20337c11],0x85f8fb2d
  42017a:	les    edx,FWORD PTR [edx]
  42017c:	ds dec esi
  42017e:	iret   
  42017f:	enter  0xa868,0xce
  420183:	jle    0x4201ab
	...
  420191:	xchg   esp,eax
  420192:	or     bl,BYTE PTR [ebp-0x6a6060f4]
  420198:	call   0x2f3d:0x7836e732
  42019f:	ins    BYTE PTR es:[edi],dx
  4201a0:	iret   
  4201a1:	fnstsw WORD PTR [ebx+0x1]
  4201a4:	add    BYTE PTR [ebx+eax*1-0x72b90000],ch
  4201ab:	mov    ds:0x24aaca1a,eax
  4201b0:	pop    ss
  4201b1:	cmp    BYTE PTR [esi+edx*4-0x7b6ca971],ah
  4201b8:	sbb    eax,eax
  4201ba:	jge    0x4201db
  4201bc:	mov    ds:0x717c083f,al
  4201c1:	adc    DWORD PTR [edx],edx
  4201c3:	iret   
  4201c4:	dec    esp
  4201c5:	add    cl,cl
  4201c7:	jmp    0x32c8:0x25c4b973
  4201ce:	sbb    eax,0xf7c49d28
  4201d3:	data16 ds clc 
  4201d6:	enter  0xb1bb,0x23
  4201da:	shl    DWORD PTR [ecx-0x9],1
  4201dd:	fcomp  st(1)
  4201df:	mov    ch,0x9d
  4201e1:	cmp    BYTE PTR [ebx+0x77],cl
  4201e4:	inc    eax
  4201e5:	arpl   WORD PTR [eax],dx
  4201e7:	xlat   BYTE PTR ds:[ebx]
  4201e8:	adc    DWORD PTR [ecx],ecx
  4201ea:	test   al,0xae
  4201ec:	pop    eax
  4201ed:	fs das 
  4201ef:	pop    esp
  4201f0:	leave  
  4201f1:	push   0x2e6aecc9
  4201f6:	mov    esi,DWORD PTR [edi-0x2c]
  4201f9:	and    ch,al
  4201fb:	mov    cl,BYTE PTR [esi-0x7d4f8c16]
  420201:	xchg   ebp,eax
  420202:	icebp  
  420203:	popa   
  420204:	test   eax,0x782724dc
  420209:	je     0x420286
  42020b:	mov    ss,WORD PTR [esi]
  42020d:	inc    esp
  42020e:	les    edi,FWORD PTR [ebp+0x36]
  420211:	arpl   sp,cx
  420213:	pop    esi
  420214:	(bad)  
  420215:	fisubr WORD PTR [ecx-0x28]
  420218:	cmp    eax,0xddc5a812
  42021d:	mov    DWORD PTR [esi+0x4e34d7e8],esi
  420223:	(bad)  
  420225:	sbb    BYTE PTR [edx],0xbe
  420228:	into   
  420229:	xchg   esi,eax
  42022a:	out    dx,eax
  42022b:	repnz push eax
  42022d:	gs jne 0x420228
  420230:	mov    esi,0x4d0e7a05
  420235:	push   esp
  420236:	jl     0x4202b3
  420238:	rol    cl,0x54
  42023b:	nop
  42023c:	les    esi,FWORD PTR [ebp-0x4aa2b2b]
  420242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420243:	add    eax,0xdce3bef1
  420248:	mov    bl,0xf4
  42024a:	xchg   esp,eax
  42024b:	stos   DWORD PTR es:[edi],eax
  42024c:	xchg   edi,eax
  42024d:	jge    0x420217
  42024f:	int3   
  420250:	stc    
  420251:	dec    ebx
  420252:	call   0x291f668f
  420257:	push   ecx
  420258:	ds push es
  42025a:	shl    BYTE PTR [edi+0x29],0xb0
  42025e:	lock cwd 
  420261:	xor    BYTE PTR [ecx+0x51],0xe7
  420265:	xor    DWORD PTR [edx],esi
  420267:	lock shr BYTE PTR gs:[ecx+0x1baba51e],1
  42026f:	sbb    al,0x5e
  420271:	adc    dh,BYTE PTR [ecx]
  420273:	icebp  
  420274:	cmp    al,0xa9
  420276:	sub    DWORD PTR [edx-0x14],eax
  420279:	je     0x4202ec
  42027b:	iret   
  42027c:	cmp    BYTE PTR [edi-0x70],0x76
  420280:	jl     0x42029f
  420282:	iret   
  420283:	cmp    al,0xd9
  420285:	mov    ss,WORD PTR [ecx-0x36698991]
  42028b:	xor    DWORD PTR [eax+ebx*1],ecx
  42028e:	adc    ebp,DWORD PTR [eax+0xf8a7e65]
  420294:	pop    ds
  420295:	xor    edi,DWORD PTR [ecx]
  420297:	ror    DWORD PTR ds:0xecc7594,1
  42029d:	pop    es
  42029e:	xor    al,0x98
  4202a0:	xchg   ebx,eax
  4202a1:	and    ebx,DWORD PTR [ebp+0x4c]
  4202a4:	gs into 
  4202a6:	outs   dx,DWORD PTR ds:[esi]
  4202a7:	mov    bl,dl
  4202a9:	je     0x4202e9
  4202ab:	aas    
  4202ac:	js     0x420327
  4202ae:	dec    ecx
  4202af:	pop    esi
  4202b0:	cmovle edi,edi
  4202b3:	xchg   al,ch
  4202b5:	sar    DWORD PTR [ecx+0x1cee5a25],cl
  4202bb:	adc    bh,ah
  4202bd:	imul   ebp,edi,0x8e56d572
  4202c3:	jns    0x420308
  4202c5:	jge    0x4202b2
  4202c7:	jle    0x42028f
  4202c9:	push   cs
  4202ca:	mov    bl,0x55
  4202cc:	pop    ebp
  4202cd:	aam    0xdc
  4202cf:	jbe    0x420307
  4202d1:	dec    esp
  4202d2:	and    ebx,DWORD PTR [ebx+edx*2]
  4202d5:	jl     0x420342
  4202d7:	mov    bl,0xa9
  4202d9:	jl     0x4202ce
  4202db:	ins    DWORD PTR es:[edi],dx
  4202dc:	sub    al,0x69
  4202de:	xchg   DWORD PTR [ecx-0x44],eax
  4202e1:	sti    
  4202e2:	lahf   
  4202e3:	and    al,0xce
  4202e5:	sbb    eax,0xafb0c253
  4202ea:	adc    eax,eax
  4202ec:	je     0x420327
  4202ee:	fnsave [esi]
  4202f0:	sbb    DWORD PTR [eax+esi*2+0x4dbce33d],ebx
  4202f7:	jnp    0x4202e6
  4202f9:	popa   
  4202fa:	lea    ecx,[ebx-0x41]
  4202fd:	sbb    BYTE PTR [eax],0xed
  420300:	ss pop ebx
  420302:	not    BYTE PTR [edi+0x5f]
  420305:	push   edx
  420306:	ins    BYTE PTR es:[edi],dx
  420307:	mul    BYTE PTR [ebp-0x5c]
  42030a:	pushf  
  42030b:	jmp    0x4202c9
  42030d:	jnp    0x4202f3
  42030f:	mov    bh,0x70
  420311:	sub    al,BYTE PTR [ecx-0x191dac57]
  420317:	sti    
  420318:	repz jge 0x4202b5
  42031b:	data16 adc BYTE PTR [ebp-0x352cc917],ah
  420322:	lods   al,BYTE PTR ds:[esi]
  420323:	not    BYTE PTR [eax+ebx*2+0x6922c705]
  42032a:	popa   
  42032b:	popa   
  42032c:	loopne 0x420324
  42032e:	cli    
  42032f:	into   
  420330:	push   ebx
  420331:	jg     0x420398
  420333:	aam    0x1f
  420335:	mov    bl,0xd2
  420337:	shl    DWORD PTR [edi],1
  420339:	stos   BYTE PTR es:[edi],al
  42033a:	xor    eax,DWORD PTR [esi]
  42033c:	hlt    
  42033d:	push   es
  42033e:	jns    0x4203bc
  420340:	mov    BYTE PTR [ebx+0x31153414],al
  420346:	push   edi
  420347:	cmp    esi,esp
  420349:	loope  0x42039e
  42034b:	(bad)  
  42034c:	into   
  42034d:	push   ecx
  42034e:	xor    DWORD PTR [ecx+edi*4+0x18],ebx
  420352:	cs mov dh,dh
  420355:	jle    0x4203cb
  420357:	das    
  420358:	xchg   edx,eax
  420359:	mov    esp,0xaca37776
  42035e:	or     BYTE PTR [ecx-0x36],ah
  420361:	jg     0x42032a
  420363:	push   ebp
  420364:	int3   
  420365:	nop
  420366:	cld    
  420367:	inc    ebp
  420368:	inc    esi
  420369:	xchg   edi,eax
  42036a:	and    DWORD PTR [esi+ebp*2-0x3],edx
  42036e:	imul   ebx,DWORD PTR [ecx-0x5c6aeb18],0xbea739d2
  420378:	or     BYTE PTR [eax+0x6293e709],cl
  42037e:	aaa    
  42037f:	jb     0x4203cb
  420381:	pop    es
  420382:	push   esi
  420383:	fisttp QWORD PTR ds:0x33eb6c22
  420389:	inc    esp
  42038a:	outs   dx,DWORD PTR ds:[esi]
  42038b:	(bad)  
  42038d:	and    DWORD PTR [ebx+edi*1-0x25],0xc214c9a3
  420395:	sbb    BYTE PTR [eax-0x3],dl
  420398:	outs   dx,BYTE PTR ds:[esi]
  420399:	mov    edi,0x4737bbea
  42039e:	aaa    
  42039f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203a0:	mov    ?,WORD PTR [ebp-0x299f0354]
  4203a6:	sbb    ebp,DWORD PTR [ebx-0x50]
  4203a9:	push   ss
  4203aa:	(bad)  
  4203ab:	fnstsw WORD PTR [esi+0x78]
  4203ae:	mov    cl,0xd
  4203b0:	ins    BYTE PTR es:[edi],dx
  4203b1:	and    DWORD PTR [ebx-0x7157714d],eax
  4203b7:	cmp    al,0x3
  4203b9:	or     BYTE PTR [ebp-0x54],bl
  4203bc:	push   ss
  4203bd:	popa   
  4203be:	pop    es
  4203bf:	jne    0x4203b6
  4203c1:	push   0x2e64e4e0
  4203c6:	icebp  
  4203c7:	stc    
  4203c8:	push   esi
  4203c9:	inc    esi
  4203ca:	fiadd  DWORD PTR [edi-0x51fa83a7]
  4203d0:	mov    esp,0x438f3d5b
  4203d5:	push   ebp
  4203d6:	aam    0x97
  4203d8:	sub    edi,DWORD PTR [ebx+0x289ad85f]
  4203de:	mov    ah,0xd1
  4203e0:	cmp    esp,edi
  4203e2:	mov    esp,0xdb7ad8a2
  4203e7:	fsub   DWORD PTR [ebp-0x2a]
  4203ea:	lds    ebx,FWORD PTR [edx+0x51527a4b]
  4203f0:	mov    esp,0xc80a4b77
  4203f5:	push   ecx
  4203f6:	(bad)  
  4203f7:	xchg   ebx,eax
  4203f8:	imul   DWORD PTR [edi]
  4203fa:	loop   0x4203a7
  4203fc:	jp     0x42045c
  4203fe:	fnstcw WORD PTR [di-0x273a]
  420403:	add    BYTE PTR [esi],dl
  420405:	gs xchg esp,eax
  420407:	dec    edx
  420408:	xchg   esp,eax
  420409:	jae    0x420467
  42040b:	adc    bh,BYTE PTR ds:0x8d3055e6
  420411:	shr    BYTE PTR [ecx],1
  420413:	icebp  
  420414:	xchg   edi,eax
  420415:	pop    es
  420416:	xchg   ebp,eax
  420417:	jle    0x4203fc
  420419:	add    BYTE PTR [esi-0x152809da],dl
  42041f:	daa    
  420420:	addr16 std 
  420422:	loope  0x420423
  420424:	jp     0x4203e7
  420426:	mov    dh,0xd3
  420428:	cmp    cl,BYTE PTR [ecx+0x8]
  42042b:	pusha  
  42042c:	or     eax,0xd7e9d165
  420431:	fwait
  420432:	jp     0x420421
  420434:	push   eax
  420435:	mov    al,0x40
  420437:	sahf   
  420438:	int3   
  420439:	and    ch,BYTE PTR [ecx-0x26c3d9f4]
  42043f:	(bad)  
  420440:	les    edi,FWORD PTR [ebx+0x64d63d17]
  420446:	push   es
  420447:	fcmovu st,st(0)
  420449:	js     0x420497
  42044b:	ficom  WORD PTR [eax]
  42044d:	imul   ebp,DWORD PTR [ebx],0xffffffeb
  420450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420451:	cld    
  420452:	(bad)  
  420453:	pop    ds
  420454:	les    eax,FWORD PTR [eax-0x38]
  420457:	pop    ebx
  420458:	mov    bh,0x8e
  42045a:	aas    
  42045b:	(bad)  
  42045c:	mov    eax,0xdf365647
  420461:	loope  0x420423
  420463:	sahf   
  420464:	ror    cl,cl
  420466:	leave  
  420467:	mov    dh,BYTE PTR [esi]
  420469:	shl    BYTE PTR [edx-0x39],1
  42046c:	lds    eax,FWORD PTR [edi]
  42046e:	push   0x17b8218f
  420473:	or     BYTE PTR [edi],bl
  420475:	xchg   DWORD PTR [eax-0x675a5013],ecx
  42047b:	loopne 0x4204ab
  42047d:	enter  0xcc2a,0xb2
  420481:	mov    DWORD PTR [eax-0x2e11dfb8],eax
  420487:	push   ebp
  420488:	adc    DWORD PTR [ecx-0x2e],esi
  42048b:	scas   eax,DWORD PTR es:[edi]
  42048c:	clc    
  42048d:	push   0x5c98ab35
  420492:	push   ss
  420493:	into   
  420494:	ret    0xd115
  420497:	outs   dx,BYTE PTR ds:[esi]
  420498:	mov    ch,0x2c
  42049a:	cmp    eax,0xe411a032
  42049f:	dec    esp
  4204a0:	imul   DWORD PTR [esi]
  4204a2:	xchg   esp,eax
  4204a3:	fdiv   DWORD PTR [ebx+ebp*8]
  4204a6:	test   eax,0x47854fa2
  4204ab:	inc    esp
  4204ac:	and    eax,0xc0763530
  4204b1:	cmp    al,BYTE PTR ds:0xe31513f2
  4204b7:	pop    ebp
  4204b8:	adc    eax,0xc3e1eb42
  4204bd:	mov    edx,0xc8e71f03
  4204c2:	and    al,0x70
  4204c4:	inc    esi
  4204c5:	arpl   WORD PTR [ecx+0x1a],bp
  4204c8:	gs jno 0x4204d5
  4204cb:	cmp    ecx,DWORD PTR [edi+0x24c4d332]
  4204d1:	cmp    BYTE PTR [edi+0x6b],bh
  4204d4:	xor    eax,0x512649c4
  4204d9:	(bad)  
  4204da:	enter  0x7196,0x1f
  4204de:	hlt    
  4204df:	xor    bh,bh
  4204e1:	dec    esi
  4204e2:	cmp    al,0xf3
  4204e4:	js     0x420478
  4204e6:	icebp  
  4204e7:	hlt    
  4204e8:	xchg   ebp,eax
  4204e9:	fidivr WORD PTR [esi]
  4204eb:	pop    edi
  4204ec:	and    cl,BYTE PTR [eax-0x76]
  4204ef:	and    dl,dh
  4204f1:	rcl    edx,cl
  4204f3:	popa   
  4204f4:	and    DWORD PTR [eax+0x0],eax
  4204f7:	(bad)  
  4204f8:	fld    TBYTE PTR [ebx]
  4204fa:	and    eax,0xb0e499dd
  4204ff:	adc    esi,DWORD PTR [eax+eax*2+0x79]
  420503:	mov    ds:0x8c7df591,al
  420508:	or     al,BYTE PTR [esi+ecx*2+0x70dbe30a]
  42050f:	icebp  
  420510:	rcr    DWORD PTR [ecx+ebp*2+0x43e5effb],cl
  420517:	fist   DWORD PTR [ecx]
  420519:	icebp  
  42051a:	hlt    
  42051b:	xor    dh,al
  42051d:	or     dl,BYTE PTR [esi+ebp*8+0x7c]
  420521:	pop    esi
  420522:	mov    dh,0x7f
  420524:	inc    edi
  420525:	xor    bl,ch
  420527:	xchg   esp,eax
  420528:	add    bl,ch
  42052a:	push   esi
  42052b:	data16 mov ds:0x92a497f7,al
  420531:	cmp    bh,BYTE PTR [ebp+edi*1+0x37d3e6f1]
  420538:	scas   eax,DWORD PTR es:[edi]
  420539:	xchg   ecx,eax
  42053a:	ret    0x6fdb
  42053d:	rcr    BYTE PTR ds:0x4142f3cb,0x1f
  420544:	xchg   edi,eax
  420545:	ja     0x420566
  420547:	mov    al,0x4a
  420549:	loope  0x4204df
  42054b:	sub    BYTE PTR [ecx-0x43b3c0df],bl
  420551:	mov    ds:0x66aaa,eax
	...
  42055e:	add    BYTE PTR [eax],al
  420560:	add    BYTE PTR [eax-0x5020734d],dl
  420566:	call   ebx
  420568:	jmp    esp
  42056a:	and    dh,0xd4
  42056d:	jecxz  0x42056c
  42056f:	enter  0x89d4,0x7f
  420573:	add    DWORD PTR [eax],eax
  420575:	lods   al,BYTE PTR ds:[esi]
  420576:	add    eax,DWORD PTR [eax]
  420578:	add    BYTE PTR [edx+0x2],cl
  42057b:	stc    
  42057c:	mov    esi,ds
  42057e:	add    BYTE PTR [edx],dl
  420580:	stos   BYTE PTR es:[edi],al
  420581:	in     eax,dx
  420582:	pop    ebp
  420583:	and    al,0x4e
  420585:	mov    fs,WORD PTR [edx+0x74]
  420588:	add    bl,BYTE PTR [edi+0x7b]
  42058b:	jge    0x42050d
  42058d:	jge    0x4205ce
  42058f:	imul   edi,DWORD PTR [esp+edi*1+0x58657152],0x53
  420597:	lahf   
  420598:	imul   esi,DWORD PTR [edx],0xffffff9d
  42059b:	adc    ax,0x9f70
  42059f:	jnp    0x420555
  4205a1:	out    dx,eax
  4205a2:	mov    ebx,DWORD PTR [ecx-0x1347c4c2]
  4205a8:	(bad)  
  4205a9:	mov    esi,DWORD PTR [esi]
  4205ab:	inc    esi
  4205ac:	scas   al,BYTE PTR es:[edi]
  4205ad:	sar    BYTE PTR [esp+esi*8+0x4b],0x94
  4205b2:	pop    edx
  4205b3:	ficomp DWORD PTR [edx-0x2c]
  4205b6:	cwde   
  4205b7:	inc    esp
  4205b8:	jno    0x4205d2
  4205ba:	icebp  
  4205bb:	std    
  4205bc:	jmp    0x82efe6ad
  4205c1:	sbb    BYTE PTR [ebx-0x557b9c47],ch
  4205c7:	mov    al,ds:0x63814672
  4205cc:	or     BYTE PTR [eax-0x17],0x32
  4205d0:	out    dx,al
  4205d1:	cmp    ah,BYTE PTR [ebx]
  4205d3:	out    dx,al
  4205d4:	jb     0x4205ba
  4205d6:	cld    
  4205d7:	call   0x20ade84d
  4205dc:	(bad)  
  4205dd:	cdq    
  4205de:	mov    dl,dh
  4205e0:	test   BYTE PTR [eax-0x6e],0x22
  4205e4:	dec    esi
  4205e5:	ret    
  4205e6:	mov    ebp,DWORD PTR [edx-0x95060e]
  4205ec:	cpuid  
  4205ee:	(bad)  
  4205ef:	loopne 0x42063f
  4205f1:	sbb    DWORD PTR [ebx+0x3e904af0],ebp
  4205f7:	fsub   QWORD PTR [edi]
  4205f9:	mov    ?,WORD PTR [ebp-0x6321a154]
  4205ff:	mov    edi,0x58c966fd
  420604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420605:	xchg   DWORD PTR [ebx+0x6f],edi
  420608:	std    
  420609:	in     al,0xe5
  42060b:	jl     0x42068c
  42060d:	mov    cl,BYTE PTR [ecx-0x74]
  420610:	pop    esp
  420611:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420613:	je     0x4205d8
  420615:	pop    edi
  420616:	bnd addr16 jg 0x42063a
  42061a:	pop    ecx
  42061b:	sub    al,0x89
  42061d:	and    eax,DWORD PTR [ebp-0x6d]
  420620:	mov    eax,0x279b631f
  420625:	mov    cl,0xd2
  420627:	je     0x420692
  420629:	adc    cl,bl
  42062b:	sti    
  42062c:	retf   0x5ed3
  42062f:	push   edi
  420630:	(bad)  
  420631:	(bad)  
  420633:	mov    esp,DWORD PTR [edi+0x14]
  420636:	ins    DWORD PTR es:[edi],dx
  420637:	loop   0x4205e1
  420639:	pop    esp
  42063a:	dec    ebx
  42063b:	ss pusha 
  42063d:	std    
  42063e:	or     eax,0x824b1383
  420643:	scas   eax,DWORD PTR es:[edi]
  420644:	add    eax,0x72e60ab8
  420649:	out    0x14,al
  42064b:	mov    ds:0x8a5058a4,al
  420650:	(bad)
  420654:	cmp    al,0x97
  420656:	sub    eax,edi
  420658:	cmp    BYTE PTR [ebp-0x7a],bl
  42065b:	push   eax
  42065c:	sub    BYTE PTR [esi],0x3d
  42065f:	mov    dl,0xa0
  420661:	icebp  
  420662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420663:	and    esi,0x9
  420666:	call   0x31ba2f79
  42066b:	adc    BYTE PTR [ebp-0x32],ah
  42066e:	in     al,0x2d
  420670:	adc    DWORD PTR [edx+0x574e63af],eax
  420676:	and    bh,BYTE PTR [ebx-0x18]
  420679:	jecxz  0x420637
  42067b:	push   edi
  42067c:	stos   DWORD PTR es:[edi],eax
  42067d:	pushf  
  42067e:	cmp    BYTE PTR ds:0x610dbad,dh
  420684:	retf   
  420685:	jl     0x42065a
  420687:	jg     0x42064c
  420689:	push   ebx
  42068a:	add    bl,bh
  42068c:	add    DWORD PTR [edi+0x18],edx
  42068f:	mov    bl,0x72
  420691:	add    BYTE PTR [edx+ebx*8],cl
  420694:	pop    edi
  420695:	test   edx,esi
  420697:	jb     0x420650
  420699:	push   cs
  42069a:	fisttp QWORD PTR ss:[ecx-0xe]
  42069e:	rol    BYTE PTR [eax],0x86
  4206a1:	inc    ebp
  4206a2:	out    dx,eax
  4206a3:	js     0x4206aa
  4206a5:	into   
  4206a6:	jmp    0x4dd70073
  4206ab:	or     BYTE PTR [eax],cl
  4206ad:	mov    dh,0x75
  4206af:	push   es
  4206b0:	inc    esi
  4206b1:	(bad)  
  4206b3:	dec    edx
  4206b4:	inc    ebp
  4206b5:	arpl   WORD PTR [edx],bp
  4206b7:	mov    eax,ds:0x984bbf0f
  4206bc:	inc    ebx
  4206bd:	std    
  4206be:	xchg   esp,eax
  4206bf:	jl     0x420696
  4206c1:	pop    edx
  4206c2:	cmp    eax,0x6e39f04e
  4206c7:	adc    eax,DWORD PTR [edi]
  4206c9:	xchg   ebp,eax
  4206ca:	inc    edi
  4206cb:	jnp    0x42072e
  4206cd:	(bad)  
  4206cf:	aaa    
  4206d0:	jno    0x4206f1
  4206d2:	push   ds
  4206d3:	add    DWORD PTR [esi-0x24],ecx
  4206d6:	ins    DWORD PTR es:[edi],dx
  4206d7:	and    eax,0x4d1c9cfc
  4206dc:	pop    ebp
  4206dd:	ret    
  4206de:	push   edx
  4206df:	cld    
  4206e0:	jae    0x4206e2
  4206e2:	inc    edi
  4206e3:	pop    eax
  4206e4:	inc    ebx
  4206e5:	call   0x8282:0xe5636e51
  4206ec:	pop    ecx
  4206ed:	sub    bl,BYTE PTR [ebx-0x3cc067a]
  4206f3:	pop    esp
  4206f4:	aas    
  4206f5:	cmp    al,0x0
  4206f7:	jle    0x4206c6
  4206f9:	mov    ch,0xee
  4206fb:	xor    DWORD PTR [edi+0x49],esp
  4206fe:	mov    dl,0xd8
  420700:	stos   DWORD PTR es:[edi],eax
  420701:	scas   al,BYTE PTR es:[edi]
  420702:	test   eax,0x84184d7b
  420707:	or     DWORD PTR [edx+0x7b],esp
  42070a:	mov    ah,0x7a
  42070c:	dec    esi
  42070d:	shl    BYTE PTR [edx+0x25115570],1
  420713:	rol    BYTE PTR [edx-0x3b],cl
  420716:	inc    eax
  420717:	fst    DWORD PTR [edx+0x90983d9]
  42071d:	sti    
  42071e:	and    eax,0x558a5710
  420723:	scas   eax,DWORD PTR es:[edi]
  420724:	mov    bh,0xe8
  420726:	test   DWORD PTR [edx+eiz*4+0x45],ebx
  42072a:	out    0xbb,al
  42072c:	call   0xba4ecd30
  420731:	jb     0x42074a
  420733:	mov    cl,0x98
  420735:	out    0x3,al
  420737:	bts    esp,0x77
  42073b:	jmp    0xdeda592f
  420740:	push   ds
  420741:	jo     0x420721
  420743:	and    bl,BYTE PTR [eax+ecx*4]
  420746:	and    ebx,edx
  420748:	pop    esi
  420749:	sbb    al,0x12
  42074b:	cmc    
  42074c:	test   al,0xfe
  42074e:	inc    esi
  42074f:	rcl    DWORD PTR [eax],1
  420751:	and    dh,BYTE PTR [ecx+0x51]
  420754:	pusha  
  420755:	popf   
  420756:	inc    esp
  420757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420758:	cdq    
  420759:	sbb    BYTE PTR [eax+0x9302ad],0xfa
  420760:	push   ebx
  420761:	jbe    0x42074d
  420763:	jl     0x42073d
  420765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420766:	repz push es
  420768:	aam    0x3d
  42076a:	in     eax,dx
  42076b:	sbb    eax,0xac61a793
  420770:	adc    ch,BYTE PTR [ebx-0x64]
  420773:	mov    ch,0xee
  420775:	xor    DWORD PTR [eax],edx
  420777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420778:	scas   al,BYTE PTR es:[edi]
  420779:	imul   ebx,ecx,0xfffffffe
  42077c:	pop    ss
  42077d:	imul   BYTE PTR [edx+0x54fc19fb]
  420783:	test   WORD PTR gs:[ebx+0x72],bp
  420788:	leave  
  420789:	daa    
  42078a:	pop    ecx
  42078b:	fidivr WORD PTR [ebp-0x14]
  42078e:	(bad)  
  420790:	loope  0x4207ba
  420792:	push   edi
  420793:	sub    edx,DWORD PTR [edx+0x10]
  420796:	jge    0x42076e
  420798:	pop    edi
  420799:	fisub  DWORD PTR [ebx+0x4d]
  42079c:	int3   
  42079d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079f:	xchg   ecx,eax
  4207a0:	jmp    0xefad423c
  4207a5:	ss (bad) 
  4207a7:	sar    ebx,cl
  4207a9:	adc    eax,0x935c0c4a
  4207ae:	sbb    ch,cl
  4207b0:	in     al,dx
  4207b1:	popf   
  4207b2:	sbb    al,0xf1
  4207b4:	test   DWORD PTR [edi-0xc],0x3a8e99b3
  4207bb:	sbb    esp,DWORD PTR [edi+0x74361f0e]
  4207c1:	sti    
  4207c2:	icebp  
  4207c3:	in     eax,0xf1
  4207c5:	lods   al,BYTE PTR ds:[esi]
  4207c6:	dec    edi
  4207c7:	add    edi,ebx
  4207c9:	jle    0x420764
  4207cb:	add    DWORD PTR [ebx],edx
  4207cd:	call   0xfa7c7610
  4207d2:	fpatan 
  4207d4:	xor    al,0xe2
  4207d6:	gs pop ebx
  4207d8:	dec    ebx
  4207d9:	fdivr  st(3),st
  4207db:	hlt    
  4207dc:	mov    al,0xd5
  4207de:	stos   BYTE PTR es:[edi],al
  4207df:	in     eax,0xa8
  4207e1:	cmc    
  4207e2:	pop    eax
  4207e3:	cld    
  4207e4:	out    0xa1,eax
  4207e6:	mov    sp,0xa27c
  4207ea:	add    al,0x2e
  4207ec:	scas   eax,DWORD PTR es:[edi]
  4207ed:	push   0x4ee7efcb
  4207f2:	loop   0x42077e
  4207f4:	inc    esp
  4207f5:	mov    edx,0xa5ec3d8e
  4207fa:	leave  
  4207fb:	adc    DWORD PTR [edi+0xc],eax
  4207fe:	loop   0x420875
  420800:	cwde   
  420801:	enter  0x91b8,0x83
  420805:	xchg   BYTE PTR ds:0xad9e1c54,bl
  42080b:	cs repz push ebx
  42080e:	sub    dl,al
  420810:	idiv   DWORD PTR [ecx-0x2df44ada]
  420816:	jb     0x4207d7
  420818:	out    0x37,eax
  42081a:	push   0x38
  42081c:	or     BYTE PTR ds:0x4a1459c6,cl
  420822:	mov    esp,0x662f6d
  420827:	cmp    esi,eax
  420829:	sub    edx,DWORD PTR [eax]
  42082b:	fisttp QWORD PTR [ecx]
  42082d:	es pop edi
  42082f:	aam    0xc6
  420831:	jae    0x420808
  420833:	dec    ecx
  420834:	test   edi,eax
  420836:	push   esp
  420837:	test   BYTE PTR [eax+0xdaeeeea],ch
  42083d:	inc    ecx
  42083e:	int3   
  42083f:	scas   al,BYTE PTR es:[edi]
  420840:	xor    al,0x95
  420842:	cmp    dh,dh
  420844:	dec    ecx
  420845:	push   es
  420846:	retf   0xac05
  420849:	les    ebp,FWORD PTR [esi]
  42084b:	stos   DWORD PTR es:[edi],eax
  42084c:	cmp    DWORD PTR [ecx-0x4c],ebx
  42084f:	gs xor eax,0xa13b9b9d
  420855:	adc    ebp,ebp
  420857:	jmp    0x42082e
  420859:	pop    eax
  42085a:	inc    ebx
  42085b:	ficomp WORD PTR [ecx-0x4b02fe2]
  420861:	sub    DWORD PTR [esi],ecx
  420863:	jmp    0x34546f71
  420868:	inc    edi
  420869:	xor    eax,DWORD PTR [edx]
  42086b:	call   0x10c1:0x23004e80
  420872:	cld    
  420873:	xor    DWORD PTR [ecx-0x370ec752],0xafbc77b4
  42087d:	mov    edx,0xf3f9f453
  420882:	lods   al,BYTE PTR ds:[esi]
  420883:	mov    DWORD PTR [esi+0x53],eax
  420886:	mov    edi,0xf8b948f9
  42088b:	retf   0xa819
  42088e:	cli    
  42088f:	ret    0x5966
  420892:	mov    edx,DWORD PTR [edx]
  420894:	scas   al,BYTE PTR es:[edi]
  420895:	and    BYTE PTR [esi-0x61789baa],0x48
  42089c:	pop    ebx
  42089d:	pop    edi
  42089e:	ret    
  42089f:	pop    ebx
  4208a0:	xchg   ebx,eax
  4208a1:	vpxor  ymm5,ymm4,YMMWORD PTR [ecx-0x43d3d488]
  4208a9:	adc    ebx,ecx
  4208ab:	jne    0x4208f8
  4208ad:	and    ah,BYTE PTR [ecx+0x5e]
  4208b0:	fisttp QWORD PTR [ebp-0x4f]
  4208b3:	xchg   ecx,eax
  4208b4:	inc    ecx
  4208b5:	add    eax,0xd8f73f5c
  4208ba:	pop    ecx
  4208bb:	sub    DWORD PTR [ebx-0x605fc5ea],esi
  4208c1:	inc    edx
  4208c2:	mov    ds:0x25786c99,eax
  4208c7:	ins    DWORD PTR es:[edi],dx
  4208c8:	(bad)  
  4208ca:	inc    ebp
  4208cb:	into   
  4208cc:	mov    eax,0x33d6a0b5
  4208d1:	call   0x5203ee23
  4208d6:	push   ebx
  4208d7:	scas   eax,DWORD PTR es:[edi]
  4208d8:	sub    eax,0x6f9f05ab
  4208dd:	push   0x79b34482
  4208e2:	xlat   BYTE PTR ds:[ebx]
  4208e3:	xchg   esp,eax
  4208e4:	repz imul eax,ebp,0xffffffef
  4208e8:	xor    DWORD PTR [esi-0x2c],esi
  4208eb:	add    al,0x44
  4208ed:	icebp  
  4208ee:	inc    esp
  4208ef:	ja     0x42092f
  4208f1:	mov    edi,0x2b9aaf72
  4208f6:	rcr    DWORD PTR ds:0x2a8c6f59,0x31
  4208fd:	and    eax,0x9ba04c1f
  420902:	xor    BYTE PTR [ebx],bh
  420904:	pop    ebx
  420905:	pop    ebx
  420906:	xor    eax,0x36b12bac
  42090b:	in     eax,dx
  42090c:	sbb    edx,esp
  42090e:	xlat   BYTE PTR ds:[ebx]
  42090f:	frstor [ebx+0x23]
  420912:	mov    bh,0xd2
  420914:	xor    edi,0xffffffec
  420917:	adc    dh,bl
  420919:	sub    dl,dl
  42091b:	(bad)  
  42091c:	mov    bl,0x5a
  42091e:	lock adc BYTE PTR [eax-0x22],bl
  420922:	push   edi
  420923:	push   edx
  420924:	fld    DWORD PTR [eax]
	...
  42092e:	add    BYTE PTR [eax],al
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x190d0292],0x35
  420942:	add    DWORD PTR [ecx],0x0
  420945:	lods   al,BYTE PTR ds:[esi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    BYTE PTR [eax],cl
  42094a:	pusha  
  42094b:	push   0x6043abea
  420950:	sbb    eax,esi
  420952:	pop    es
  420953:	mov    ds:0x7248c76,eax
  420958:	jo     0x4208f2
  42095a:	rcr    BYTE PTR [edx+0x32],1
  42095d:	adc    al,0xc
  42095f:	neg    DWORD PTR [ecx-0x1bea0939]
  420965:	inc    esp
  420966:	mov    al,ds:0x6d22401c
  42096b:	cmp    BYTE PTR [ebx+0x126f2630],dh
  420971:	dec    esp
  420972:	push   ecx
  420973:	gs mov esi,0x2e14f808
  420979:	jo     0x42099c
  42097b:	pop    ebx
  42097c:	cli    
  42097d:	xchg   ebx,eax
  42097e:	fsub   QWORD PTR [esi*2-0x69b82bc7]
  420985:	or     al,0xea
  420987:	icebp  
  420988:	scas   al,BYTE PTR es:[edi]
  420989:	cmc    
  42098a:	dec    edi
  42098b:	push   ss
  42098c:	xchg   ecx,eax
  42098d:	mov    esp,0x6ccc2b46
  420992:	add    ebx,esp
  420994:	fbld   TBYTE PTR [ebx-0x4b]
  420997:	ret    0x85
  42099a:	jae    0x420927
  42099c:	push   ebp
  42099d:	cmp    al,0xfd
  42099f:	mov    ebp,DWORD PTR [ebp+ebp*1+0x19cf6b6a]
  4209a6:	(bad)  
  4209a7:	bound  esi,QWORD PTR [ecx-0xd7e90c6]
  4209ad:	sti    
  4209ae:	pop    es
  4209af:	jge    0x42099e
  4209b1:	mov    al,ds:0xd73605ce
  4209b6:	jmp    0xf3fbe086
  4209bb:	es out 0x16,eax
  4209be:	jge    0x420a00
  4209c0:	ret    0xbfff
  4209c3:	dec    eax
  4209c4:	mov    ebp,0x2db53a7f
  4209c9:	ins    BYTE PTR es:[edi],dx
  4209ca:	cs sub eax,0x22af985f
  4209d0:	(bad)  
  4209d1:	retf   
  4209d2:	sub    edi,edx
  4209d4:	fbstp  TBYTE PTR [edi]
  4209d6:	fwait
  4209d7:	jp     0x420a1f
  4209d9:	fwait
  4209da:	xor    ebx,esp
  4209dc:	jg     0x420988
  4209de:	mov    bl,0xde
  4209e0:	mov    al,0xb2
  4209e2:	inc    edx
  4209e3:	mov    al,ds:0x8b71a8de
  4209e8:	pop    ss
  4209e9:	fmul   DWORD PTR [ecx-0x55378fd]
  4209ef:	dec    ecx
  4209f0:	in     al,dx
  4209f1:	add    DWORD PTR [edx+0x6e48e687],ebp
  4209f7:	jle    0x420a04
  4209f9:	sbb    BYTE PTR [ebx-0x18],0x8a
  4209fd:	cmp    bh,BYTE PTR [ecx-0x6994a987]
  420a03:	jp     0x4209ad
  420a05:	lods   eax,DWORD PTR ds:[esi]
  420a06:	out    0x6a,al
  420a08:	and    eax,0xee51cb7a
  420a0d:	shr    BYTE PTR [eax-0x1b],0xb9
  420a11:	xchg   edi,eax
  420a12:	jge    0x4209c9
  420a14:	push   esp
  420a15:	cdq    
  420a16:	inc    edx
  420a17:	out    dx,eax
  420a18:	xchg   edi,eax
  420a19:	xor    dh,BYTE PTR [ebx+0x2c]
  420a1c:	popf   
  420a1d:	adc    ch,BYTE PTR [edx]
  420a1f:	inc    edx
  420a20:	pop    ss
  420a21:	xor    ah,cl
  420a23:	jns    0x420a43
  420a25:	cli    
  420a26:	shl    DWORD PTR [eax-0x77],1
  420a29:	mov    eax,ds:0x86bd4723
  420a2e:	neg    BYTE PTR [edx]
  420a30:	jo     0x4209d6
  420a32:	or     BYTE PTR [ebx+eax*1+0x22],dl
  420a36:	or     al,0x8c
  420a38:	sar    eax,0x8d
  420a3b:	fimul  WORD PTR [edi-0x7d77d069]
  420a41:	inc    ebx
  420a42:	push   esp
  420a43:	mov    DWORD PTR [ecx-0x29],esp
  420a46:	shr    ah,cl
  420a48:	scas   al,BYTE PTR es:[edi]
  420a49:	(bad)  
  420a4a:	aam    0xa7
  420a4c:	cmp    eax,0x14d668df
  420a51:	ins    BYTE PTR es:[edi],dx
  420a52:	iret   
  420a53:	fsub   DWORD PTR [ecx-0x191ea107]
  420a59:	sti    
  420a5a:	jb     0x420a0c
  420a5c:	aam    0x43
  420a5e:	cdq    
  420a5f:	sub    BYTE PTR [edx-0x6d66d97e],0xe0
  420a66:	repnz or eax,0xf1da0b0d
  420a6c:	pushf  
  420a6d:	(bad)  
  420a6e:	mov    edx,0x135f35df
  420a73:	xor    edi,0xd057ba54
  420a79:	neg    BYTE PTR [esi-0x3d8a415f]
  420a7f:	(bad)  
  420a80:	in     eax,dx
  420a81:	pushf  
  420a82:	xor    al,0x9d
  420a84:	mov    ebx,0xa02c1fc4
  420a89:	daa    
  420a8a:	push   ebx
  420a8b:	xor    al,0xe3
  420a8d:	xchg   DWORD PTR [ebp-0x42],edx
  420a90:	inc    esi
  420a91:	jae    0x420a44
  420a93:	add    al,0x4a
  420a95:	push   es
  420a96:	fld    TBYTE PTR [eax+edx*4+0x11c38b55]
  420a9d:	mov    ss,WORD PTR [esi-0x46]
  420aa0:	sub    ebp,ebp
  420aa2:	in     al,0xd1
  420aa4:	push   ds
  420aa5:	cmp    al,0x98
  420aa7:	mov    esi,0xc1c681a3
  420aac:	mov    ebx,DWORD PTR [eax+eax*2+0x44bc9bbe]
  420ab3:	dec    ebp
  420ab4:	sbb    dh,BYTE PTR [ebp+0x57]
  420ab7:	mov    edi,0xd8a28b5e
  420abc:	jns    0x420b1a
  420abe:	lds    esp,FWORD PTR [esi+0x11]
  420ac1:	out    0xae,al
  420ac3:	add    al,BYTE PTR [edx+0x63]
  420ac6:	shr    DWORD PTR [ecx-0xf],cl
  420ac9:	mov    eax,0x3dd1fb88
  420ace:	sub    bh,BYTE PTR [ebx+0x58d7ecb6]
  420ad4:	and    esp,DWORD PTR [edx-0x44ba0e60]
  420ada:	lea    ecx,[ebp-0x5b]
  420add:	fmul   DWORD PTR [edi+0x4cbea023]
  420ae3:	push   ebx
  420ae4:	add    bl,BYTE PTR [edx]
  420ae6:	fdivr  DWORD PTR [ecx-0x1e7d554]
  420aec:	in     eax,dx
  420aed:	mov    ah,0xf2
  420aef:	jp     0x420acd
  420af1:	adc    DWORD PTR [ecx],ebp
  420af3:	stos   BYTE PTR es:[edi],al
  420af4:	xor    al,0xca
  420af6:	or     esi,DWORD PTR [ebx+ecx*8]
  420af9:	inc    ebx
  420afa:	pop    esi
  420afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afc:	mov    esi,0x40bd0722
  420b01:	jl     0x420b19
  420b03:	fcom   QWORD PTR [ebp-0x32]
  420b06:	xchg   edx,eax
  420b07:	fistp  WORD PTR [ecx-0x7a9bfd2f]
  420b0d:	pop    ebp
  420b0e:	add    DWORD PTR [edx-0x3ffe096],ebp
  420b14:	push   cs
  420b15:	dec    esi
  420b16:	jge    0x420b24
  420b18:	dec    eax
  420b19:	or     al,0x32
  420b1b:	mov    ch,BYTE PTR [eax-0xe85a245]
  420b21:	pop    ecx
  420b22:	(bad)  
  420b23:	jle    0x420b84
  420b25:	cmp    dl,BYTE PTR cs:[esi-0x79f2585d]
  420b2c:	inc    esp
  420b2d:	xlat   BYTE PTR ds:[ebx]
  420b2e:	inc    esp
  420b2f:	clc    
  420b30:	rep outs dx,BYTE PTR ds:[esi]
  420b32:	mov    bl,0x8c
  420b34:	icebp  
  420b35:	ret    0x6f31
  420b38:	sbb    ecx,esp
  420b3a:	dec    ebp
  420b3b:	xor    DWORD PTR [ebx+ebx*1-0x41],eax
  420b3f:	fimul  DWORD PTR [edi]
  420b41:	fmul   QWORD PTR [esi-0x226b5298]
  420b47:	jg     0x420b2e
  420b49:	xor    eax,DWORD PTR [eax+0x7bef6c16]
  420b4f:	(bad)  
  420b50:	inc    edx
  420b51:	pop    ebx
  420b52:	and    al,0x47
  420b54:	sar    BYTE PTR [edi+0x57ef02a],cl
  420b5a:	shr    DWORD PTR [ebp+0x54],1
  420b5d:	ins    BYTE PTR es:[edi],dx
  420b5e:	std    
  420b5f:	dec    esp
  420b60:	out    0x4b,al
  420b62:	push   es
  420b63:	je     0x420b2c
  420b65:	fld    TBYTE PTR [esi-0x5d666225]
  420b6b:	cmp    eax,0x2d6b4d38
  420b70:	ja     0x420b42
  420b72:	jb     0x420b86
  420b74:	mov    WORD PTR [ebp+0x38e2099],ss
  420b7a:	addr16 std 
  420b7c:	xor    eax,0xb9507a58
  420b81:	fbstp  TBYTE PTR [esi]
  420b83:	sub    al,0x5b
  420b85:	int3   
  420b86:	and    BYTE PTR ds:0xd7e674ee,bh
  420b8c:	cmc    
  420b8d:	jp     0x420b6b
  420b8f:	jno    0x420b89
  420b91:	dec    esi
  420b92:	cmp    ecx,edi
  420b94:	cli    
  420b95:	loope  0x420c01
  420b97:	rcr    ebx,0x6a
  420b9a:	out    dx,al
  420b9b:	cdq    
  420b9c:	pop    es
  420b9d:	fwait
  420b9e:	adc    eax,0x9c0dfd0b
  420ba3:	add    eax,0x6755181d
  420ba8:	test   DWORD PTR [edi-0x76775bfd],0x3942b821
  420bb2:	es cmp eax,0x43a0ceb8
  420bb8:	inc    ebp
  420bb9:	push   ebp
  420bba:	xchg   BYTE PTR [ebx+edi*2],al
  420bbd:	sub    cl,ch
  420bbf:	cmp    DWORD PTR [esi-0x1cbafae2],edx
  420bc5:	fst    DWORD PTR [edi]
  420bc7:	cdq    
  420bc8:	or     eax,0xeaae9883
  420bcd:	adc    al,0xd0
  420bcf:	loope  0x420b57
  420bd1:	sbb    DWORD PTR [edi+0x15],esi
  420bd4:	pop    esi
  420bd5:	jno    0x420ba6
  420bd7:	adc    DWORD PTR [ebp-0x1c032b33],esp
  420bdd:	push   cs
  420bde:	cli    
  420bdf:	pop    edx
  420be0:	jmp    0x420c60
  420be2:	add    al,0x99
  420be5:	std    
  420be6:	hlt    
  420be7:	inc    eax
  420be8:	scas   al,BYTE PTR es:[edi]
  420be9:	push   esi
  420bea:	adc    eax,DWORD PTR [edx+ecx*1]
  420bed:	cmp    DWORD PTR [esi],ebx
  420bef:	cmp    dl,bl
  420bf1:	mov    ebx,0x69c722b7
  420bf6:	imul   edx,DWORD PTR [edx],0xffffffc2
  420bf9:	retf   
  420bfa:	outs   dx,DWORD PTR ds:[esi]
  420bfb:	test   al,0x2
  420bfd:	cmp    bl,BYTE PTR [eax+0x34]
  420c00:	fwait
  420c01:	stc    
  420c02:	cmp    edi,DWORD PTR [ebx-0x70]
  420c05:	iret   
  420c06:	adc    esp,DWORD PTR [ebx+edi*2-0x28ba634]
  420c0d:	mov    esp,0x1c0c3d0a
  420c12:	das    
  420c13:	xchg   ecx,eax
  420c14:	addr16 dec edx
  420c16:	repnz xchg edx,eax
  420c18:	clc    
  420c19:	shl    BYTE PTR [edx+0x5b4066c2],1
  420c1f:	pusha  
  420c20:	mov    ds:0x84e51,al
  420c25:	neg    BYTE PTR [edx]
  420c27:	daa    
  420c28:	lods   al,BYTE PTR ds:[esi]
  420c29:	lds    ebx,FWORD PTR [edi-0x33]
  420c2c:	daa    
  420c2d:	sbb    eax,0x5799766f
  420c32:	pop    eax
  420c33:	in     al,dx
  420c34:	popa   
  420c35:	cdq    
  420c36:	(bad)  
  420c38:	sar    BYTE PTR [ecx],1
  420c3a:	shl    DWORD PTR [ebp+0x1],cl
  420c3d:	pop    es
  420c3e:	add    edi,eax
  420c40:	jmp    0x4fbcaca3
  420c45:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c47:	pop    eax
  420c48:	push   ds
  420c49:	and    eax,0xace96322
  420c4e:	cli    
  420c4f:	scas   eax,DWORD PTR es:[edi]
  420c50:	ds and al,0x11
  420c53:	in     eax,dx
  420c54:	mov    ch,BYTE PTR [edx-0x20]
  420c57:	sub    DWORD PTR [ebx+0x2261dd21],ebx
  420c5d:	daa    
  420c5e:	aam    0x90
  420c60:	das    
  420c61:	jo     0x420c0a
  420c63:	xchg   edi,eax
  420c64:	lds    esp,FWORD PTR [ebx+0x31]
  420c67:	sub    ebp,esi
  420c69:	std    
  420c6a:	outs   dx,DWORD PTR ds:[esi]
  420c6b:	push   eax
  420c6c:	cwde   
  420c6d:	sub    BYTE PTR [ebx],0x43
  420c70:	imul   eax,DWORD PTR [edi+0x61e1adb0],0xffffffcc
  420c77:	repnz mov ah,0x8d
  420c7a:	mov    esp,0xf264bccd
  420c7f:	dec    edx
  420c80:	mov    ecx,0xa92cabf0
  420c85:	aad    0x6e
  420c87:	pop    ecx
  420c88:	lea    edi,[edi]
  420c8a:	dec    ebx
  420c8b:	cmp    eax,0xf140eb15
  420c90:	shl    BYTE PTR [esi-0x2395047],cl
  420c96:	cmp    DWORD PTR [ecx-0x2402fca6],edx
  420c9c:	mov    edi,?
  420c9e:	frstor [edi+ebx*2+0x0]
  420ca2:	mov    ebp,0x120cd7d6
  420ca7:	xor    al,0x4f
  420ca9:	ja     0x420c80
  420cab:	add    BYTE PTR [edx+ecx*1],bh
  420cae:	mov    eax,es:0x5cfb69fc
  420cb4:	sub    al,0x7f
  420cb6:	arpl   WORD PTR [ebx+0x4f1a0891],di
  420cbc:	sti    
  420cbd:	int    0xe
  420cbf:	shl    DWORD PTR ss:[esi],cl
  420cc2:	dec    edx
  420cc3:	mov    ah,0xe9
  420cc5:	out    dx,eax
  420cc6:	jmp    0x700c:0xd5d6be35
  420ccd:	inc    edx
  420cce:	and    cl,BYTE PTR [ebx+0x3a]
  420cd1:	lahf   
  420cd2:	add    BYTE PTR [eax-0x11282130],ch
  420cd8:	xchg   ecx,eax
  420cd9:	out    0x94,eax
  420cdb:	mov    DWORD PTR [edi],eax
  420cdd:	popf   
  420cde:	adc    eax,0xd111d71e
  420ce3:	add    al,0x9d
  420ce5:	ret    
  420ce6:	retf   0x6018
  420ce9:	and    al,0x82
  420ceb:	add    al,0xba
  420ced:	dec    eax
  420cee:	(bad)  
  420cef:	fstp   DWORD PTR [ebp+esi*2+0x3d0438]
	...
  420cfe:	add    BYTE PTR [eax],al
  420d00:	add    BYTE PTR [esi],ah
  420d02:	mov    eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	ficom  WORD PTR [esi-0x7a]
  420d10:	add    al,0xe1
  420d12:	xchg   BYTE PTR [ecx],al
  420d14:	add    BYTE PTR [ebx+eax*1-0x28250000],ch
  420d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d1c:	(bad)  
  420d1d:	cmp    dh,BYTE PTR [edx+ecx*2-0x5ed6ea]
  420d24:	(bad)
  420d27:	or     eax,0x3d4ae6df
  420d2c:	pop    esi
  420d2d:	loope  0x420cdb
  420d2f:	lds    edx,FWORD PTR [esi]
  420d31:	cmp    BYTE PTR [ecx+0xb],al
  420d34:	cwde   
  420d35:	inc    esp
  420d36:	and    ebp,ecx
  420d38:	test   DWORD PTR [eax+0x46],ecx
  420d3b:	and    ch,BYTE PTR [ebx-0x18]
  420d3e:	pop    ebx
  420d3f:	pop    esp
  420d40:	loope  0x420d0d
  420d42:	retf   
  420d43:	dec    edx
  420d44:	and    dl,BYTE PTR [ecx]
  420d46:	(bad)  
  420d47:	test   eax,0x9636df47
  420d4c:	clc    
  420d4d:	xchg   esp,eax
  420d4e:	mov    bh,0x17
  420d50:	stc    
  420d51:	rcl    DWORD PTR [ecx+0x74],0xee
  420d55:	adc    BYTE PTR [ecx],al
  420d57:	and    DWORD PTR [esi+0x34],ebp
  420d5a:	(bad)  
  420d5c:	mov    edi,0xb6dc90d9
  420d61:	mov    eax,ds:0x21b6a50f
  420d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d67:	sbb    ch,dh
  420d69:	push   esi
  420d6a:	jo     0x420d35
  420d6c:	add    BYTE PTR [esi+ecx*2+0x9],al
  420d70:	mov    ebp,0x42ea1d44
  420d75:	pop    esp
  420d76:	cmp    al,0x63
  420d78:	xor    dl,BYTE PTR [ecx]
  420d7a:	lods   eax,DWORD PTR ds:[esi]
  420d7b:	call   0x302:0x1f3c7ddc
  420d82:	mov    BYTE PTR [eax+0x28],cl
  420d85:	and    ebp,esi
  420d87:	leave  
  420d88:	ins    BYTE PTR es:[edi],dx
  420d89:	and    BYTE PTR [ebx],bh
  420d8b:	out    dx,eax
  420d8c:	sti    
  420d8d:	pop    ds
  420d8e:	into   
  420d8f:	sbb    ch,BYTE PTR [ecx-0x770281d2]
  420d95:	test   al,0xa8
  420d97:	xchg   edx,eax
  420d98:	sub    eax,0x2ef7ad69
  420d9d:	mov    ebp,?
  420d9f:	repnz int 0x24
  420da2:	push   esi
  420da3:	inc    ebx
  420da4:	scas   eax,DWORD PTR es:[edi]
  420da5:	mov    ch,0xcf
  420da7:	jne    0x420def
  420da9:	jp     0x420d59
  420dab:	(bad)  
  420dad:	mov    edi,0xc8636e1
  420db2:	pop    edi
  420db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420db4:	cli    
  420db5:	aaa    
  420db6:	ja     0x420d6a
  420db8:	push   ebx
  420db9:	loopne 0x420d54
  420dbb:	mov    esp,0x1d865048
  420dc0:	pusha  
  420dc1:	(bad)  
  420dc2:	fisubr WORD PTR [esi+0x6894e105]
  420dc8:	adc    al,0x54
  420dca:	sbb    eax,0x1fbc5df8
  420dcf:	(bad)  
  420dd0:	xchg   edi,eax
  420dd1:	inc    eax
  420dd2:	xchg   ebx,eax
  420dd3:	dec    eax
  420dd4:	jb     0x420dbe
  420dd6:	jl     0x420df5
  420dd8:	das    
  420dd9:	push   esp
  420dda:	mov    ds,WORD PTR [ecx]
  420ddc:	xor    bh,dh
  420dde:	inc    edx
  420ddf:	cs int3 
  420de1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  420de3:	xlat   BYTE PTR ds:[ebx]
  420de4:	adc    eax,0x5ac044a0
  420de9:	and    al,0x10
  420deb:	dec    ebx
  420dec:	push   eax
  420ded:	test   DWORD PTR [ecx],0x95669d4e
  420df3:	stc    
  420df4:	xchg   ebp,eax
  420df5:	shl    BYTE PTR [ecx-0x1aedbc61],0xf2
  420dfc:	cmp    edi,DWORD PTR [esi+0x12]
  420dff:	sub    BYTE PTR [eax],ah
  420e01:	cmc    
  420e02:	xchg   edi,eax
  420e03:	std    
  420e04:	jnp    0x420d89
  420e06:	xchg   BYTE PTR [ecx],ch
  420e08:	sub    al,0xad
  420e0a:	push   ds
  420e0b:	ret    0x1056
  420e0e:	push   es
  420e0f:	mov    bh,0x2d
  420e11:	inc    edi
  420e12:	jns    0x420e0e
  420e14:	arpl   WORD PTR [edx+edi*1],sp
  420e17:	fisttp WORD PTR [edi+0x544ed475]
  420e1d:	pop    ebx
  420e1e:	push   ebx
  420e1f:	frstor [ebp+0x66ee4a80]
  420e25:	inc    ecx
  420e26:	push   0xdbc38a3e
  420e2b:	sbb    eax,0x857c6cae
  420e30:	cs rcpps xmm6,xmm7
  420e34:	call   0x1168:0xaf1bf3a5
  420e3b:	cld    
  420e3c:	adc    al,0x4c
  420e3e:	(bad)  
  420e3f:	enter  0x7e90,0x2
  420e43:	cmp    eax,0x79b1749a
  420e48:	sub    DWORD PTR [ecx+0x3c],ecx
  420e4b:	sbb    bh,BYTE PTR [eax-0x1b40d0a6]
  420e51:	sbb    eax,0xab3ad2e8
  420e56:	stos   BYTE PTR es:[edi],al
  420e57:	jle    0x420e16
  420e59:	adc    ah,BYTE PTR [edx-0x6d75266b]
  420e5f:	pop    ds
  420e60:	mov    eax,ds:0xa6226f2
  420e65:	leave  
  420e66:	pop    ds
  420e67:	xchg   ebx,eax
  420e68:	cs in  al,dx
  420e6a:	outs   dx,BYTE PTR ds:[esi]
  420e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e6c:	sti    
  420e6d:	stos   BYTE PTR es:[edi],al
  420e6e:	inc    ebp
  420e6f:	lea    ecx,[ecx]
  420e71:	in     al,dx
  420e72:	push   0xffffffe6
  420e74:	cli    
  420e75:	mov    al,es:0x80a58d36
  420e7b:	repz inc edx
  420e7d:	push   cs
  420e7e:	pop    ss
  420e7f:	shl    BYTE PTR [esi-0x29],0x2c
  420e83:	gs jae 0x420e28
  420e86:	pop    eax
  420e87:	mov    edi,0xa9f5716d
  420e8c:	imul   edi,edi,0x29
  420e8f:	xchg   esi,eax
  420e90:	push   ecx
  420e91:	out    dx,al
  420e92:	out    0x48,eax
  420e94:	dec    esp
  420e95:	aad    0xb8
  420e97:	bswap  edi
  420e99:	cld    
  420e9a:	ret    
  420e9b:	stos   DWORD PTR es:[edi],eax
  420e9c:	retf   0x1eb0
  420e9f:	cmp    ah,BYTE PTR [ebp-0x529feaad]
  420ea5:	xchg   ebx,eax
  420ea6:	es fwait
  420ea8:	dec    ebx
  420ea9:	jb     0x420f13
  420eab:	lods   eax,DWORD PTR ds:[esi]
  420eac:	and    BYTE PTR [esi-0x3],dh
  420eaf:	pushf  
  420eb0:	dec    edi
  420eb1:	push   es
  420eb2:	cmp    al,0xb8
  420eb4:	xchg   edx,eax
  420eb5:	stc    
  420eb6:	push   ecx
  420eb7:	xlat   BYTE PTR ds:[ebx]
  420eb8:	add    al,0xc5
  420eba:	ja     0x420ed9
  420ebc:	cmp    DWORD PTR [edi+0x255d0fc4],0x2a
  420ec3:	jecxz  0x420ea2
  420ec5:	ret    
  420ec6:	addr16 cmc 
  420ec8:	xchg   dl,dl
  420eca:	jp     0x420ea2
  420ecc:	sub    ch,BYTE PTR [edi-0x5a]
  420ecf:	(bad)  
  420ed0:	pop    ebx
  420ed1:	lods   eax,DWORD PTR ds:[esi]
  420ed2:	je     0x420f04
  420ed4:	jb     0x420ec3
  420ed6:	sti    
  420ed7:	adc    DWORD PTR [ecx],esp
  420ed9:	and    BYTE PTR [ebx],ah
  420edb:	mov    al,0xe4
  420edd:	lahf   
  420ede:	dec    ebp
  420edf:	add    al,0x2a
  420ee1:	mov    ah,0x6c
  420ee3:	dec    ebp
  420ee4:	add    eax,DWORD PTR [ebx-0x1ad232be]
  420eea:	into   
  420eeb:	loope  0x420ec9
  420eed:	ins    DWORD PTR es:[edi],dx
  420eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eef:	fcom   DWORD PTR [esi-0x55]
  420ef2:	imul   ebx,DWORD PTR [edx+0x1a],0x9
  420ef6:	mov    eax,ds:0x8ef3d1a
  420efb:	scas   eax,DWORD PTR es:[edi]
  420efc:	pop    ebp
  420efd:	jnp    0x420f3d
  420eff:	leave  
  420f00:	repnz lock (bad) 
  420f03:	das    
  420f04:	cmp    eax,0xc3f47c48
  420f09:	mov    cl,0xca
  420f0b:	outs   dx,WORD PTR ds:[esi]
  420f0d:	cmc    
  420f0e:	xchg   esp,eax
  420f0f:	and    BYTE PTR [ebp-0x77583271],dh
  420f15:	cli    
  420f16:	push   ecx
  420f17:	outs   dx,DWORD PTR ds:[esi]
  420f18:	mov    bh,bl
  420f1a:	pop    esp
  420f1b:	xchg   DWORD PTR [eax],esp
  420f1d:	inc    eax
  420f1e:	lahf   
  420f1f:	jg     0x420f4c
  420f21:	test   al,0xdf
  420f23:	ss mov eax,0x90dff146
  420f29:	push   ecx
  420f2a:	ins    DWORD PTR es:[edi],dx
  420f2b:	add    al,0xb0
  420f2d:	jns    0x420ec8
  420f2f:	das    
  420f30:	adc    esi,DWORD PTR [edx+0x10]
  420f33:	jmp    0x9d24:0x15745bc4
  420f3a:	data16 es fcom st(1)
  420f3e:	(bad)  
  420f3f:	adc    al,0x8b
  420f41:	mov    ds:0xaa695eae,eax
  420f46:	fsub   st,st(1)
  420f48:	jl     0x420fc8
  420f4a:	push   edi
  420f4b:	fiadd  WORD PTR [edi-0x774f8b7e]
  420f51:	adc    edi,ebp
  420f53:	cmp    BYTE PTR [edx-0x65],bh
  420f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f57:	mov    edi,0xb5e657a0
  420f5c:	test   BYTE PTR [ebx-0x448ba544],dh
  420f62:	fld    DWORD PTR [edx]
  420f64:	test   eax,0x795c437a
  420f69:	mov    al,0x77
  420f6b:	sbb    eax,0x7ff4ff2f
  420f70:	div    BYTE PTR [esi+0xa]
  420f73:	in     al,0xe4
  420f75:	jbe    0x420fa8
  420f77:	sbb    esi,0x1ef16511
  420f7d:	mov    dl,0xa2
  420f7f:	mov    edx,0x815a1690
  420f84:	dec    edx
  420f85:	dec    esp
  420f86:	std    
  420f87:	repnz outs dx,DWORD PTR ds:[esi]
  420f89:	loopne 0x420f66
  420f8b:	cdq    
  420f8c:	imul   edi,ebp,0xd602e7dc
  420f92:	aam    0xcb
  420f94:	ret    
  420f95:	sbb    eax,0x6310f0fe
  420f9a:	nop
  420f9b:	cdq    
  420f9c:	sbb    al,0x5b
  420f9e:	in     eax,0xdc
  420fa0:	push   ss
  420fa1:	cmp    al,0x9a
  420fa3:	loope  0x420f40
  420fa5:	daa    
  420fa6:	cmp    al,0x89
  420fa8:	dec    esp
  420fa9:	jg     0x420fdc
  420fab:	out    0x0,eax
  420fad:	push   es
  420fae:	cmc    
  420faf:	pusha  
  420fb0:	add    BYTE PTR [edi-0x7],0xf2
  420fb4:	xor    DWORD PTR [ebx-0x16],edi
  420fb7:	mov    ecx,DWORD PTR [edx+0x1d]
  420fba:	cs mov ah,0xe2
  420fbd:	sti    
  420fbe:	xchg   edx,eax
  420fbf:	cmp    BYTE PTR [eax+0x3deadb14],dl
  420fc5:	sbb    eax,0x87114d6f
  420fca:	scas   al,BYTE PTR es:[edi]
  420fcb:	arpl   si,cx
  420fcd:	cmp    edx,ebp
  420fcf:	or     edi,DWORD PTR [edx-0x6a]
  420fd2:	xor    BYTE PTR [ebp-0x6c],dh
  420fd5:	xchg   esp,eax
  420fd6:	inc    edx
  420fd7:	and    eax,0x19d0c677
  420fdc:	jle    0x420ff3
  420fde:	jns    0x420fcf
  420fe0:	in     eax,dx
  420fe1:	add    eax,0x7b5136d5
  420fe6:	cmp    bh,ch
  420fe8:	or     al,0x20
  420fea:	cwde   
  420feb:	loop   0x420f86
  420fed:	hlt    
  420fee:	adc    esi,DWORD PTR [eax+0x7]
  420ff1:	and    eax,0xec2e5a49
  420ff6:	jae    0x420fca
  420ff8:	mov    esi,DWORD PTR [edx-0x39]
  420ffb:	push   0xcbe4ce00
  421000:	xchg   edi,eax
  421001:	pusha  
  421002:	sub    cl,BYTE PTR [ebp+0x2e886db]
  421008:	mov    ds,WORD PTR [ecx+0x59]
  42100b:	inc    esi
  42100c:	sbb    al,0x3f
  42100e:	mov    ebx,0xec77ecba
  421013:	repnz cdq 
  421015:	jo     0x421031
  421017:	add    eax,DWORD PTR [ecx]
  421019:	and    ecx,DWORD PTR [ebp-0x6c383591]
  42101f:	shl    BYTE PTR [edx+0x5c],cl
  421022:	iret   
  421023:	pop    ss
  421024:	mov    ah,0x6f
  421026:	icebp  
  421027:	add    eax,esi
  421029:	xlat   BYTE PTR ds:[ebx]
  42102a:	push   esi
  42102b:	or     BYTE PTR [ecx-0x13],al
  42102e:	fs jg  0x420fc9
  421031:	rcr    ecx,1
  421033:	mov    ds:0xd351c540,al
  421038:	add    DWORD PTR fs:[ecx],edx
  42103b:	adc    DWORD PTR [edi],ecx
  42103d:	add    esi,edi
  42103f:	icebp  
  421040:	les    ebp,FWORD PTR [edi-0x61a76d95]
  421046:	push   edx
  421047:	fbstp  TBYTE PTR [ebp+0x32]
  42104a:	cs daa 
  42104c:	mov    edi,0x95775eda
  421051:	call   0x5fd0:0xb01602af
  421058:	pop    edx
  421059:	bound  esi,QWORD PTR [eax-0x3e97821b]
  42105f:	push   edi
  421060:	mov    bh,0x70
  421062:	xchg   esp,eax
  421063:	popa   
  421064:	das    
  421065:	sar    DWORD PTR [edi+0x48d3cc24],0xd3
  42106c:	(bad)  
  42106d:	mov    eax,0x5f661ac0
  421072:	cmp    eax,edx
  421074:	fiadd  DWORD PTR ds:0xa4bde036
  42107a:	xchg   ecx,eax
  42107b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42107c:	jbe    0x4210f4
  42107e:	sbb    DWORD PTR [edi-0x44],edi
  421081:	pop    ebp
  421082:	test   al,0xcd
  421084:	lea    eax,[esi]
  421086:	xor    DWORD PTR [ebp+0x34],ebx
  421089:	mov    ebp,0xadeee6b5
  42108e:	adc    al,0xa
  421090:	packuswb mm3,QWORD PTR [eax]
  421093:	int    0xd5
  421095:	dec    ebx
  421096:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421098:	and    edx,edx
  42109a:	dec    edx
  42109b:	mov    ds:0x90986f1d,al
  4210a0:	daa    
  4210a1:	js     0x42104d
  4210a3:	les    edi,FWORD PTR [edx]
  4210a5:	mov    ah,0x10
  4210a7:	push   ebp
  4210a8:	out    0x6a,al
  4210aa:	rcr    BYTE PTR [ebx+edi*8-0x17d57081],0xa3
  4210b2:	pop    edi
  4210b3:	mov    ds:0x5a600ab3,al
  4210b8:	xlat   BYTE PTR fs:[ebx]
  4210ba:	fwait
  4210bb:	xchg   ebp,eax
  4210bd:	mov    ebx,0x61542758
  4210c2:	mov    WORD PTR [edi+0xd6],?
	...
  4210d0:	add    BYTE PTR [edx+0x70],cl
  4210d3:	fdivr  DWORD PTR [edx+edi*8-0x4]
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	push   ds
  4210de:	jae    0x42106d
  4210e0:	ja     0x42106f
  4210e2:	mov    al,BYTE PTR [ecx]
  4210e4:	add    BYTE PTR [ebx+eax*1+0x70c80000],ch
  4210eb:	(bad)  
  4210ec:	jmp    0xdeaf23e4
  4210f1:	or     esi,eax
  4210f3:	cdq    
  4210f4:	(bad)
  4210f7:	repz clc 
  4210f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210fa:	mov    edi,0xec786939
  4210ff:	sbb    al,ah
  421101:	cmp    eax,0x5488a640
  421106:	and    ah,BYTE PTR [edi]
  421108:	xchg   esi,eax
  421109:	fldenv [esi]
  42110b:	mov    esi,0x9abbd2db
  421110:	sub    ch,BYTE PTR [edx]
  421112:	adc    dh,dh
  421114:	loopne 0x4210c1
  421116:	ins    DWORD PTR es:[edi],dx
  421117:	jo     0x4210fd
  421119:	mov    edx,0x4ff8085a
  42111e:	scas   eax,DWORD PTR es:[edi]
  42111f:	xlat   BYTE PTR ds:[ebx]
  421120:	lds    esp,FWORD PTR [eax-0x3bad5bf0]
  421126:	mov    BYTE PTR [edi],ch
  421128:	iret   
  421129:	mov    ecx,0x8c1d2c8d
  42112e:	pop    edi
  42112f:	mov    DWORD PTR [ecx*4-0x219f14a5],ebx
  421136:	xchg   esi,eax
  421137:	ret    0x319
  42113a:	jg     0x421159
  42113c:	pop    edi
  42113d:	dec    BYTE PTR ds:0x9cc76de3
  421143:	adc    ch,BYTE PTR [eax-0x588ae7ab]
  421149:	or     eax,0xbf90464c
  42114e:	mov    ebx,0x992a28a5
  421153:	xor    al,0x83
  421155:	movzx  ebx,BYTE PTR [eax]
  421158:	repz push esp
  42115a:	pop    edi
  42115b:	not    DWORD PTR [esi+0x35342990]
  421161:	xchg   ecx,eax
  421162:	jp     0x421152
  421164:	(bad)  
  421166:	xchg   edx,eax
  421167:	pop    ss
  421168:	jge    0x421189
  42116a:	(bad)  
  42116b:	cmp    dl,BYTE PTR [eax+eiz*4-0x5b]
  42116f:	cmc    
  421170:	ss js  0x421117
  421173:	mov    dh,0x47
  421175:	stos   BYTE PTR es:[edi],al
  421176:	outs   dx,DWORD PTR ss:[esi]
  421178:	pop    eax
  421179:	fcom   DWORD PTR gs:[ebp+esi*4-0x7afc3091]
  421181:	jle    0x42117e
  421183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421184:	cdq    
  421185:	mov    esp,0x2721178
  42118a:	pusha  
  42118b:	(bad)  
  42118c:	sti    
  42118d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42118e:	aaa    
  42118f:	adc    esp,DWORD PTR [ebx+eax*4]
  421192:	jo     0x421206
  421194:	dec    eax
  421195:	cmp    ch,dl
  421197:	pop    ebx
  421198:	pop    ebp
  421199:	jno    0x4211ea
  42119b:	mov    edx,0xb193d1ff
  4211a0:	sbb    DWORD PTR [edx],0x9d7729e3
  4211a6:	pop    es
  4211a7:	iret   
  4211a8:	push   ecx
  4211a9:	adc    BYTE PTR [edi-0xb1d769e],dl
  4211af:	sub    al,ah
  4211b1:	sahf   
  4211b2:	xchg   ecx,eax
  4211b3:	sahf   
  4211b4:	xchg   ebp,eax
  4211b5:	test   DWORD PTR ds:0x962ac51d,esi
  4211bb:	adc    eax,0x926f66c
  4211c0:	fcomp  DWORD PTR [edx]
  4211c2:	add    al,0x11
  4211c4:	push   ss
  4211c5:	mov    ah,0x74
  4211c7:	and    esi,esp
  4211c9:	cmp    DWORD PTR [ebp-0x1b2f1042],ecx
  4211cf:	ret    
  4211d0:	test   BYTE PTR [ecx+0x2da40bb3],ch
  4211d6:	cld    
  4211d7:	loop   0x4211c5
  4211d9:	dec    edx
  4211da:	sub    ebp,DWORD PTR [ebx-0x5a7a9b9e]
  4211e0:	ja     0x42120b
  4211e2:	aas    
  4211e3:	jg     0x421223
  4211e5:	(bad)  
  4211e6:	pop    eax
  4211e7:	leave  
  4211e8:	popa   
  4211e9:	mov    al,ds:0x7c996e32
  4211ee:	xchg   edx,eax
  4211ef:	dec    edx
  4211f0:	enter  0x6c84,0xb5
  4211f4:	pop    es
  4211f5:	fcom   st(7)
  4211f7:	lock std 
  4211f9:	or     eax,0xd37e947d
  4211fe:	(bad)  
  421200:	mov    ebp,DWORD PTR [ecx]
  421202:	std    
  421203:	mov    dl,0xc3
  421206:	sub    al,0x7d
  421208:	aad    0x65
  42120a:	repz repnz mov ds,WORD PTR [eax-0x58]
  42120f:	shl    BYTE PTR [edi],cl
  421211:	inc    edi
  421212:	fidiv  DWORD PTR [eax]
  421214:	mov    edx,ebx
  421216:	inc    ecx
  421217:	push   esp
  421218:	inc    ecx
  421219:	dec    eax
  42121a:	mov    ecx,0xd5761c5d
  42121f:	retf   
  421220:	jno    0x421252
  421222:	jmp    0x6f56b74e
  421227:	dec    edi
  421228:	loope  0x4211b0
  42122a:	add    BYTE PTR [ebx],0xc6
  42122d:	sbb    eax,0xd43cd21b
  421232:	in     al,0x72
  421234:	fild   WORD PTR [ecx]
  421236:	clc    
  421237:	dec    esi
  421238:	push   0x5f
  42123a:	push   eax
  42123b:	cmp    BYTE PTR [ecx],cl
  42123d:	fs das 
  42123f:	test   al,0xeb
  421241:	cmp    ch,BYTE PTR [edx+0x519471ed]
  421247:	cmc    
  421248:	daa    
  421249:	mov    esp,0x29a1a1d6
  42124e:	inc    ecx
  42124f:	jo     0x421222
  421251:	call   0xbff0:0xbd7d778a
  421258:	cmp    al,dl
  42125a:	mov    al,ds:0x6855ccb6
  42125f:	sti    
  421260:	mov    esp,0x2901a1c5
  421265:	ins    DWORD PTR es:[edi],dx
  421266:	aas    
  421267:	adc    BYTE PTR [ecx-0x1e0880c2],ch
  42126d:	int    0x14
  42126f:	popf   
  421270:	dec    edi
  421271:	cli    
  421272:	sar    DWORD PTR [ebp-0x7c6e97c8],0xf
  421279:	or     ebx,DWORD PTR ss:[esi+0x22]
  42127d:	xchg   BYTE PTR [edi+edx*1+0x1c55f34c],dh
  421284:	neg    ecx
  421286:	add    BYTE PTR [eax],0xc2
  421289:	nop
  42128a:	fs int 0xb5
  42128d:	dec    edx
  42128e:	std    
  42128f:	jl     0x4212a8
  421291:	mov    esp,0x6815ec48
  421296:	xchg   esp,eax
  421297:	in     eax,0xf8
  421299:	(bad)  
  42129a:	aad    0xb
  42129c:	adc    al,BYTE PTR [ecx-0x2d44697b]
  4212a2:	out    dx,al
  4212a3:	mov    ?,WORD PTR [ecx]
  4212a5:	xchg   ebx,eax
  4212a6:	mov    DWORD PTR [eax],ebx
  4212a8:	xchg   ebx,eax
  4212a9:	out    dx,eax
  4212aa:	add    BYTE PTR [ebx],dl
  4212ac:	pop    ds
  4212ad:	or     ch,bh
  4212af:	retf   0x3531
  4212b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b3:	cli    
  4212b4:	mov    bl,0x1b
  4212b6:	data16 hlt 
  4212b8:	adc    DWORD PTR [ecx+0x49],edi
  4212bb:	cmp    bh,BYTE PTR ds:0xfc18bf9b
  4212c1:	ins    DWORD PTR es:[edi],dx
  4212c2:	test   eax,0x5a95430
  4212c7:	xor    bh,ah
  4212c9:	nop
  4212ca:	in     al,0x9b
  4212cc:	stos   DWORD PTR es:[edi],eax
  4212cd:	frstor [ebx]
  4212cf:	inc    esp
  4212d0:	test   al,0x42
  4212d2:	cmp    ah,ah
  4212d4:	adc    BYTE PTR [ebx+ecx*4-0x33],cl
  4212d8:	jbe    0x4212e6
  4212da:	mov    edi,0xb9f9340
  4212df:	cdq    
  4212e0:	pop    ds
  4212e1:	pop    ecx
  4212e2:	mov    ebp,0x9a290b4f
  4212e7:	and    ebx,DWORD PTR [eax]
  4212e9:	pusha  
  4212ea:	sbb    cl,0x64
  4212ed:	outs   dx,BYTE PTR fs:[esi]
  4212ef:	ins    BYTE PTR es:[edi],dx
  4212f0:	aas    
  4212f1:	dec    edx
  4212f2:	arpl   WORD PTR [ebp-0x75],ax
  4212f5:	repnz sbb DWORD PTR [ebp+0x27],edx
  4212f9:	cmp    bh,BYTE PTR [ebx]
  4212fb:	aad    0x7d
  4212fd:	iret   
  4212fe:	jg     0x42136e
  421300:	mov    ebx,0xf239b6d5
  421305:	xor    eax,0xb75b93a1
  42130a:	fistp  QWORD PTR [eax-0x43a137b]
  421310:	jae    0x421314
  421312:	iret   
  421313:	mov    edi,0x8c2e223
  421318:	inc    eax
  421319:	pop    edx
  42131a:	loope  0x4212b3
  42131c:	into   
  42131d:	pusha  
  42131e:	inc    esi
  42131f:	add    eax,0x81654e79
  421324:	adc    DWORD PTR [ecx-0x43],edi
  421327:	sbb    ah,BYTE PTR [edi+0x5af2843]
  42132d:	pop    edx
  42132e:	shl    ebp,1
  421330:	jne    0x421318
  421332:	push   0xfffffff0
  421334:	repnz dec ebp
  421336:	pop    ebx
  421337:	adc    esi,DWORD PTR [ebp+0x94aad5a]
  42133d:	call   0x8d1a:0x856093f0
  421344:	cmp    esp,DWORD PTR [ebx-0x60e7a689]
  42134a:	in     eax,0x83
  42134c:	jge    0x42136b
  42134e:	jbe    0x4213bc
  421350:	ret    
  421351:	push   0xf334f6bc
  421356:	es mov ah,0xc8
  421359:	push   es
  42135a:	xchg   ecx,eax
  42135b:	lds    eax,FWORD PTR [ebp-0x3691b9d2]
  421361:	and    eax,esp
  421363:	add    al,0x80
  421365:	push   ds
  421366:	xor    BYTE PTR [esi],al
  421368:	or     DWORD PTR [ebp+0x49db0e56],eax
  42136e:	xchg   edi,eax
  42136f:	pop    es
  421370:	sub    ch,BYTE PTR [ebp+0x16]
  421373:	fs xchg esi,eax
  421375:	jmp    0x421315
  421377:	cmc    
  421378:	adc    eax,0x6b06e2b2
  42137d:	inc    esp
  42137e:	sar    DWORD PTR [edi-0xf8d5379],cl
  421384:	or     al,0x5e
  421386:	or     DWORD PTR [esi-0x1ff0e61c],ecx
  42138c:	lds    ebp,FWORD PTR [edx]
  42138e:	ror    DWORD PTR [ecx+0x1fe41991],1
  421394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421395:	mov    al,0x2
  421397:	xor    DWORD PTR es:[ecx-0x80],edx
  42139b:	gs ins BYTE PTR es:[edi],dx
  42139d:	inc    edi
  42139e:	and    BYTE PTR ds:[ebx-0x1832b27e],ah
  4213a5:	adc    DWORD PTR [esp+ecx*2+0x511c1465],esi
  4213ac:	pop    eax
  4213ad:	or     eax,ecx
  4213af:	dec    edx
  4213b0:	sar    BYTE PTR [esp+ebx*1+0x28c1812e],0xb2
  4213b8:	xchg   ecx,eax
  4213b9:	adc    al,0x5d
  4213bb:	addr16 or eax,0x7164488a
  4213c1:	sub    al,0x1
  4213c3:	pop    ebp
  4213c4:	(bad)  
  4213c5:	mov    ebx,0x5103295e
  4213ca:	(bad)  
  4213cb:	fsubrp st(4),st
  4213cd:	call   0xb6977d1f
  4213d2:	mov    bh,0xb2
  4213d4:	std    
  4213d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213d6:	shl    BYTE PTR [ecx+eiz*4],cl
  4213d9:	scas   al,BYTE PTR es:[edi]
  4213da:	adc    dl,BYTE PTR [esi+0x5cc855d0]
  4213e0:	mov    edi,0xbc0d504c
  4213e5:	sub    DWORD PTR [ecx+ebx*1+0xc1c134b],ebx
  4213ec:	inc    esp
  4213ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ee:	add    al,0xe9
  4213f0:	popa   
  4213f1:	add    bl,BYTE PTR [ebx]
  4213f3:	aam    0x8e
  4213f5:	mov    ds:0x51eff989,al
  4213fa:	add    DWORD PTR [ecx+eax*2-0x1d87cc4c],edx
  421401:	std    
  421402:	cli    
  421403:	cmp    eax,0x2eb1fae8
  421408:	loop   0x4213ae
  42140a:	adc    ebp,ecx
  42140c:	scas   eax,DWORD PTR es:[edi]
  42140d:	sub    ah,BYTE PTR [edx]
  42140f:	test   DWORD PTR [esi+0x4f],ebx
  421412:	rcr    DWORD PTR [esi+0x1877f1e2],1
  421418:	icebp  
  421419:	add    al,al
  42141b:	pop    edx
  42141c:	aad    0x5a
  42141e:	into   
  42141f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421420:	add    al,BYTE PTR [esi-0x6e8aa6e9]
  421426:	sbb    DWORD PTR [ecx+0x6d1b1051],ebx
  42142c:	and    DWORD PTR [edx+ebx*4-0x568e4e65],edi
  421433:	fcmovne st,st(4)
  421435:	jl     0x4213e2
  421437:	pop    ss
  421438:	cmp    al,0x1a
  42143a:	adc    eax,0x6a37006c
  42143f:	out    0xf0,eax
  421441:	mul    ah
  421443:	dec    ecx
  421444:	das    
  421445:	inc    ebx
  421446:	js     0x4213df
  421448:	mov    ecx,0x2e60203d
  42144d:	jmp    0xa2985e46
  421452:	stos   BYTE PTR es:[edi],al
  421453:	sbb    eax,0x8e9995cf
  421458:	shl    DWORD PTR ds:0x4e1f98dc,0x19
  42145f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421460:	mov    dl,0xbd
  421462:	sub    bh,BYTE PTR [ebp+0x228a2c1e]
  421468:	xor    ebx,esi
  42146a:	int    0x46
  42146c:	sti    
  42146d:	jg     0x4213f6
  42146f:	lods   eax,DWORD PTR ds:[esi]
  421470:	adc    eax,0x700dad6c
  421475:	outs   dx,BYTE PTR ds:[esi]
  421476:	shr    BYTE PTR [edi-0x43cdce95],0x17
  42147d:	pop    ebx
  42147e:	dec    ecx
  42147f:	les    ecx,FWORD PTR [ecx]
  421481:	fsub   st,st(2)
  421483:	rol    BYTE PTR [esi],cl
  421485:	aas    
  421486:	xchg   ebp,eax
  421487:	scas   al,BYTE PTR es:[edi]
  421488:	dec    ecx
  421489:	les    eax,FWORD PTR [esi+0xff4856b]
  42148f:	adc    al,0xd7
  421491:	fisttp WORD PTR [edi+0xdc53]
	...
  42149f:	add    BYTE PTR [eax],al
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp+0x28279950]
  4214ae:	pop    esp
  4214af:	ret    
  4214b0:	ret    0x8e39
  4214b3:	add    DWORD PTR [eax],eax
  4214b5:	lods   al,BYTE PTR ds:[esi]
  4214b6:	add    eax,DWORD PTR [eax]
  4214b8:	add    BYTE PTR [ebp-0x3b68f9ca],bl
  4214be:	outs   dx,BYTE PTR ds:[esi]
  4214bf:	stos   BYTE PTR es:[edi],al
  4214c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214c1:	fwait
  4214c2:	xor    BYTE PTR [ecx+ebx*1-0x1b],cl
  4214c6:	push   0x84a58db
  4214cb:	cdq    
  4214cc:	cmp    eax,0x8bc1fd89
  4214d1:	adc    ch,dh
  4214d3:	repz sub edi,DWORD PTR [ebx-0x34d4eba1]
  4214da:	je     0x4214c9
  4214dc:	sub    BYTE PTR [ebx-0x3f],0x63
  4214e0:	(bad)  
  4214e1:	(bad)  
  4214e2:	mov    ebp,0xd20e99d2
  4214e7:	or     DWORD PTR [ecx+0x3ff0f007],0x297b481a
  4214f1:	mov    eax,0xbe5fd053
  4214f6:	lahf   
  4214f7:	mov    edx,ss
  4214f9:	add    dl,ch
  4214fb:	rcl    DWORD PTR [edx],1
  4214fd:	cmp    eax,ecx
  4214ff:	in     al,dx
  421500:	adc    al,al
  421502:	jl     0x4214a6
  421504:	shl    esi,1
  421506:	repnz pop esi
  421508:	nop
  421509:	push   ebx
  42150a:	leave  
  42150b:	adc    dl,bl
  42150d:	dec    ebx
  42150e:	out    dx,eax
  42150f:	mul    DWORD PTR [esi+0x1a]
  421512:	fld    TBYTE PTR [edi+eiz*4-0x33]
  421516:	mov    ch,0x9d
  421518:	or     al,0x2b
  42151a:	mov    ecx,DWORD PTR [eax+eiz*4]
  42151d:	pop    ebx
  42151e:	cmp    BYTE PTR [ecx],dh
  421520:	inc    ebp
  421521:	into   
  421522:	cwde   
  421523:	mov    ecx,0x9e1464d4
  421528:	push   ebp
  421529:	dec    edi
  42152a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42152b:	dec    eax
  42152c:	outs   dx,DWORD PTR ds:[esi]
  42152d:	mov    WORD PTR [edx+0x63],ds
  421530:	jle    0x4214cf
  421532:	mov    ds:0x95ed2443,eax
  421537:	pop    edx
  421538:	sar    BYTE PTR [ebx+edx*4+0x79],cl
  42153c:	or     ch,BYTE PTR [ebx]
  42153e:	aaa    
  42153f:	add    eax,0x5b9f5df
  421544:	push   ds
  421545:	push   ebx
  421546:	stc    
  421547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421548:	dec    ebx
  421549:	ss mov al,0x6b
  42154c:	add    ah,BYTE PTR [ebp-0x17]
  42154f:	aas    
  421550:	in     eax,0xfd
  421552:	daa    
  421553:	sbb    dl,cl
  421555:	jg     0x4214e8
  421557:	inc    ch
  421559:	hlt    
  42155a:	pop    eax
  42155b:	dec    ebp
  42155c:	shr    DWORD PTR [eax-0x1],0xaa
  421560:	mov    ah,0xe7
  421562:	ins    BYTE PTR es:[edi],dx
  421563:	test   BYTE PTR [ecx],al
  421565:	sbb    DWORD PTR [esi-0x75],ebp
  421568:	into   
  421569:	xor    DWORD PTR [eax],edi
  42156b:	ds cli 
  42156d:	repnz mov dh,BYTE PTR [ebp+0x3b42bbe]
  421574:	sub    eax,DWORD PTR [ebx+0x1d2376d5]
  42157a:	sbb    ebx,0xfe3c157e
  421580:	dec    ecx
  421581:	daa    
  421582:	xchg   DWORD PTR [esi+0x6d],esi
  421585:	outs   dx,BYTE PTR ds:[esi]
  421586:	vunpcklpd xmm5,xmm6,XMMWORD PTR [ebx+0x6ada592f]
  42158e:	add    DWORD PTR [eax*1+0x16548338],0xde6f200f
  421599:	imul   edi,DWORD PTR [ecx-0x44],0x1a
  42159d:	arpl   WORD PTR [edx+0x687ca209],dx
  4215a3:	in     eax,0xb8
  4215a5:	cmp    DWORD PTR [ecx+ecx*1],eax
  4215a8:	dec    esp
  4215a9:	lds    eax,FWORD PTR ds:0x5bf9cc8d
  4215af:	sbb    BYTE PTR [ecx+0x7a1cd648],ah
  4215b5:	or     ch,BYTE PTR [ecx+0x570f4d2e]
  4215bb:	mov    ch,0x54
  4215bd:	fldenv [edx]
  4215bf:	ror    DWORD PTR [ebp-0x1f7d259b],1
  4215c5:	xor    edx,eax
  4215c7:	repz shl DWORD PTR [edi],1
  4215ca:	icebp  
  4215cb:	push   edi
  4215cc:	jne    0x421626
  4215ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215cf:	and    eax,0x3af132e7
  4215d4:	xchg   ecx,eax
  4215d5:	xchg   edx,eax
  4215d6:	xor    eax,0x37b2309b
  4215db:	aas    
  4215dc:	mov    al,0x57
  4215de:	dec    ecx
  4215df:	call   0x6327:0xfe795970
  4215e6:	sbb    BYTE PTR [edx+0x3e0a3ef9],dh
  4215ec:	je     0x421580
  4215ee:	ins    BYTE PTR es:[edi],dx
  4215ef:	pop    ebp
  4215f0:	imul   edx,ebp,0xffffff9d
  4215f3:	das    
  4215f4:	(bad)  
  4215f5:	xchg   ebp,eax
  4215f6:	add    dl,BYTE PTR [esi]
  4215f8:	out    0x5b,eax
  4215fa:	xchg   esi,ecx
  4215fc:	(bad)  
  4215fe:	pop    es
  4215ff:	imul   edi,DWORD PTR [edi-0x78],0xab90dc2e
  421606:	test   bl,ah
  421608:	adc    bl,BYTE PTR [esi+edx*8+0x68a72387]
  42160f:	scas   eax,DWORD PTR es:[edi]
  421610:	rcl    BYTE PTR [eax],0x20
  421613:	sahf   
  421614:	xlat   BYTE PTR ds:[ebx]
  421615:	mov    ds:0x4c6a0e52,al
  42161a:	stos   DWORD PTR es:[edi],eax
  42161b:	cmc    
  42161c:	dec    ebp
  42161d:	pop    edx
  42161e:	push   ebx
  42161f:	fsubr  QWORD PTR [ebp+0x4d]
  421622:	aad    0x7f
  421624:	push   0x8defea83
  421629:	loop   0x421695
  42162b:	pop    edx
  42162c:	inc    esi
  42162d:	retf   0x6af2
  421630:	push   ss
  421631:	(bad)  
  421632:	imul   esi,DWORD PTR [ecx+0x580ba802],0x84977031
  42163c:	sub    eax,0xdaded711
  421641:	ret    0xa841
  421644:	mov    esi,0xa66e61c2
  421649:	pop    eax
  42164a:	in     al,0x62
  42164c:	test   al,0x18
  42164e:	xchg   ebx,eax
  42164f:	or     al,BYTE PTR [ebp+0x19]
  421652:	fidivr DWORD PTR [edi-0x51]
  421655:	cmp    eax,DWORD PTR [ecx-0x2fe2196]
  42165b:	or     al,0x4e
  42165d:	push   cs
  42165e:	sub    al,0x3
  421660:	scas   eax,DWORD PTR es:[edi]
  421661:	cmp    BYTE PTR [edx],dh
  421663:	int3   
  421664:	outs   dx,DWORD PTR ds:[esi]
  421665:	and    eax,0xc543e46a
  42166a:	scas   al,BYTE PTR es:[edi]
  42166b:	and    esp,ecx
  42166d:	fxch   st(4)
  42166f:	mov    esp,0x20711282
  421674:	jae    0x421633
  421676:	loope  0x421626
  421678:	push   eax
  421679:	scas   eax,DWORD PTR es:[edi]
  42167a:	lahf   
  42167b:	fsubr  DWORD PTR [edx]
  42167d:	gs (bad) 
  42167f:	std    
  421680:	loope  0x421622
  421682:	jae    0x421699
  421684:	sbb    eax,0x5032766c
  421689:	in     al,dx
  42168a:	arpl   WORD PTR [esi+0x5d],bx
  42168d:	fwait
  42168e:	pop    ebp
  42168f:	loop   0x4216e3
  421691:	call   0xf762763f
  421696:	inc    ecx
  421697:	out    0x42,eax
  421699:	or     BYTE PTR ds:0x8e506e34,0x8d
  4216a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216a1:	rol    esp,cl
  4216a3:	dec    ebp
  4216a4:	mov    dh,0x95
  4216a6:	(bad)  
  4216a7:	fnstcw WORD PTR [ebp+0x67b22ff2]
  4216ad:	cmp    dl,BYTE PTR [edx-0x47]
  4216b0:	shr    BYTE PTR [esi+0x22],0x5b
  4216b4:	sub    al,0xbc
  4216b6:	add    DWORD PTR [edx+ebp*1-0x60],esi
  4216ba:	and    eax,0xa87ee261
  4216bf:	cmp    edi,DWORD PTR [ecx+0x2fca6d21]
  4216c5:	retf   
  4216c6:	xchg   DWORD PTR [ebx+ebp*2+0x7b],ecx
  4216ca:	adc    eax,0x978bb57b
  4216cf:	ins    DWORD PTR es:[edi],dx
  4216d0:	in     eax,dx
  4216d1:	shld   DWORD PTR [esi-0x73670def],ebp,0x8a
  4216d9:	sub    bl,BYTE PTR [ebp+0x97a9c45]
  4216df:	es jbe 0x42175a
  4216e2:	iret   
  4216e3:	mov    esp,0x80f946e8
  4216e8:	or     BYTE PTR [esp+edi*8-0x2e3b33a],bl
  4216ef:	bound  ebx,QWORD PTR [esi+0x39]
  4216f2:	dec    ebx
  4216f3:	mov    ebx,0x7fb54ddd
  4216f8:	hlt    
  4216f9:	xor    BYTE PTR [edx-0x3f07773d],dh
  4216ff:	mov    edx,0x718eac5d
  421704:	div    BYTE PTR [edi+0x35]
  421707:	in     al,dx
  421708:	ds call 0x4bbf4787
  42170e:	hlt    
  42170f:	ret    0x3355
  421712:	imul   esp,DWORD PTR [ebx+0x29],0xffffffd5
  421716:	jo     0x421718
  421718:	into   
  421719:	xor    al,0x2a
  42171b:	xor    ah,BYTE PTR [esi+ecx*4+0xc]
  42171f:	icebp  
  421720:	sub    ch,BYTE PTR [esi+0x16]
  421723:	sub    DWORD PTR [ebp+0x27f55dac],eax
  421729:	les    ebp,FWORD PTR [ebx]
  42172b:	mov    ebp,0xe981ee32
  421730:	inc    eax
  421731:	jmp    FWORD PTR [edx-0x6c]
  421734:	aad    0x13
  421736:	cmp    BYTE PTR [eax-0x27],cl
  421739:	jbe    0x421734
  42173b:	and    al,0x56
  42173d:	test   BYTE PTR [ebx-0x69392ba3],dl
  421743:	pop    edx
  421744:	aaa    
  421745:	and    al,BYTE PTR ss:[esi-0xe76f09d]
  42174c:	out    0xb1,al
  42174e:	sbb    dl,cl
  421750:	daa    
  421751:	push   ebx
  421752:	leave  
  421753:	jecxz  0x42170a
  421755:	cmc    
  421756:	test   eax,0x3780cd13
  42175b:	aaa    
  42175c:	push   es
  42175d:	int3   
  42175e:	and    ebx,DWORD PTR [ecx-0x5f18a45c]
  421764:	fcomp  DWORD PTR es:[ebx+edx*1]
  421768:	jmp    0xbdcb:0xc715a924
  42176f:	dec    esi
  421770:	inc    edx
  421771:	xor    eax,0xa685e19
  421776:	loop   0x4217ec
  421778:	sub    eax,0x40ae4f44
  42177d:	and    al,0x51
  42177f:	iret   
  421780:	(bad)  
  421781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421782:	enter  0x5d8b,0xfb
  421786:	mov    esp,0x108a340b
  42178b:	adc    BYTE PTR [ebx-0x7d6e4046],bl
  421791:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421793:	and    dl,BYTE PTR [ebx-0x4]
  421796:	retf   
  421797:	jbe    0x421796
  421799:	jae    0x421730
  42179b:	rcr    DWORD PTR [edi+0x6e],cl
  42179e:	mov    dh,0xf5
  4217a0:	push   ebx
  4217a1:	adc    ecx,DWORD PTR [edi+0x27]
  4217a4:	call   0x7879:0x3e37e4e7
  4217ab:	and    DWORD PTR [edi+ebx*2+0x6d7763ed],esp
  4217b2:	push   esp
  4217b3:	call   0x8d9f1a7
  4217b8:	lock xor ebp,eax
  4217bb:	inc    edx
  4217bc:	out    dx,eax
  4217bd:	xchg   BYTE PTR [ecx+ebx*2+0x694949b0],ah
  4217c4:	cwde   
  4217c5:	fdivr  st,st(0)
  4217c7:	out    dx,eax
  4217c8:	or     eax,0xad197c20
  4217cd:	jbe    0x4217f8
  4217cf:	inc    ecx
  4217d0:	dec    edi
  4217d1:	dec    ecx
  4217d2:	mov    esi,0x666824d1
  4217d7:	fdiv   DWORD PTR [edx]
  4217d9:	loope  0x42176a
  4217db:	pop    esi
  4217dc:	adc    al,0x9f
  4217de:	mov    ebx,0x48c92b1b
  4217e3:	mov    dh,BYTE PTR ds:0x8ee24fdc
  4217e9:	inc    ebx
  4217ea:	dec    esi
  4217eb:	stc    
  4217ec:	push   edi
  4217ed:	mov    al,0xc3
  4217ef:	repnz stos DWORD PTR es:[edi],eax
  4217f1:	push   edi
  4217f2:	pusha  
  4217f3:	shl    DWORD PTR [esi],0xdf
  4217f6:	mov    al,ds:0xb66b4ce6
  4217fb:	imul   DWORD PTR [ecx]
  4217fd:	and    eax,0xc861b198
  421802:	xor    eax,0xc338d9f2
  421807:	push   esp
  421808:	mov    al,0x97
  42180a:	call   0x4b3d:0x62d62410
  421811:	mov    WORD PTR [ecx+0x64],es
  421814:	push   edi
  421815:	movq   QWORD PTR [edi+ebp*1+0x47],mm5
  42181a:	xchg   ebp,eax
  42181b:	jl     0x421892
  42181d:	xchg   ecx,eax
  42181e:	pop    esi
  42181f:	stos   DWORD PTR es:[edi],eax
  421820:	rol    BYTE PTR [esi],0xf3
  421823:	fcmovu st,st(2)
  421825:	and    edx,ebp
  421827:	and    edi,ecx
  421829:	sbb    ebp,DWORD PTR [eax-0x6d]
  42182c:	dec    edi
  42182d:	mov    ebx,0xec181da3
  421832:	ins    DWORD PTR es:[edi],dx
  421833:	add    DWORD PTR [edi-0x2917c6f9],ecx
  421839:	and    al,bh
  42183b:	int3   
  42183c:	ins    DWORD PTR es:[edi],dx
  42183d:	pop    ecx
  42183e:	(bad)  
  42183f:	int    0x2a
  421841:	jno    0x4218a5
  421843:	imul   ebx,DWORD PTR [ecx],0xaf6329e3
  421849:	test   al,0xee
  42184b:	jmp    0xd2d52305
  421850:	jmp    0x3c35:0x3ba42ee4
  421857:	adc    ah,bl
  421859:	inc    esp
  42185a:	add    edi,edi
  42185c:	or     al,0x5f
  42185e:	je     0x4218da
  421860:	and    DWORD PTR [ebp+edi*1+0x5e],esp
  421864:	jno    0x421866
	...
  42186e:	add    BYTE PTR [eax],al
  421870:	add    BYTE PTR [esi],bh
  421872:	inc    esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [ecx+0x1e],eax
  42187f:	mov    BYTE PTR [ecx+0x191e5],bl
  421885:	lods   al,BYTE PTR ds:[esi]
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    dh,bl
  42188a:	jge    0x421855
  42188c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42188d:	fbld   TBYTE PTR [ebx]
  42188f:	fnstenv [edx+0x6274c939]
  421895:	push   ebp
  421896:	scas   eax,DWORD PTR es:[edi]
  421897:	push   0x66
  421899:	in     al,0x70
  42189b:	es sub al,0x1
  42189e:	mov    ah,0x66
  4218a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a1:	lea    eax,[ecx-0x40]
  4218a4:	call   0x754b:0xed95d00d
  4218ab:	xchg   ecx,eax
  4218ac:	and    eax,0xa9886a21
  4218b1:	mov    ebx,0x8bd25a90
  4218b6:	dec    esi
  4218b7:	(bad)
  4218ba:	xchg   ebp,eax
  4218bb:	cmp    ah,BYTE PTR [eax-0x2d]
  4218be:	dec    esi
  4218bf:	neg    DWORD PTR [edi-0x24d63b9e]
  4218c5:	sub    edx,edx
  4218c7:	xchg   BYTE PTR [edi+ecx*4-0x3da8d882],al
  4218ce:	pop    ebx
  4218cf:	fwait
  4218d0:	sti    
  4218d1:	dec    ebx
  4218d2:	add    DWORD PTR [ebx-0x155fa37d],edi
  4218d8:	(bad)  
  4218d9:	(bad)  
  4218da:	fdivr  DWORD PTR [ebx+esi*2-0x1f3c38f7]
  4218e1:	jle    0x4218ac
  4218e3:	push   ds
  4218e4:	pop    edx
  4218e5:	imul   edi,DWORD PTR [edx],0x5f
  4218e8:	push   0x9b1bcc05
  4218ed:	mov    BYTE PTR [ebx],bl
  4218ef:	or     DWORD PTR [ebx-0x21],ebx
  4218f2:	xor    edi,esp
  4218f4:	shr    DWORD PTR [edi+0x49578e00],1
  4218fa:	outs   dx,BYTE PTR ds:[esi]
  4218fb:	add    DWORD PTR ds:0x3caf5e5d,eax
  421901:	add    esi,DWORD PTR [edi]
  421903:	and    eax,0x882c6276
  421908:	sbb    edi,DWORD PTR ss:[esi+0x2e4c51de]
  42190f:	(bad)  
  421910:	push   edx
  421911:	out    0xd2,al
  421913:	inc    esp
  421914:	loop   0x42196c
  421916:	xchg   edi,eax
  421917:	dec    BYTE PTR [ebx+0x12bfb58e]
  42191d:	jmp    0x421988
  42191f:	and    eax,0x89467435
  421924:	xchg   edi,eax
  421925:	gs ds and ah,ch
  421929:	mov    eax,ds:0xd6aee7db
  42192e:	popf   
  42192f:	lea    eax,ds:0xf4b0fd42
  421935:	mul    BYTE PTR [ecx+0x42]
  421938:	xor    BYTE PTR [ebx],dh
  42193a:	fwait
  42193b:	jecxz  0x42196e
  42193d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42193e:	iret   
  42193f:	cmp    eax,0x745f4532
  421944:	out    0xc5,eax
  421946:	jge    0x4218f9
  421948:	scas   eax,DWORD PTR es:[edi]
  421949:	repz fsubr QWORD PTR [ebx+0x36]
  42194d:	test   BYTE PTR [bx+si-0x4d],bh
  421951:	mov    esp,0xe0c04db4
  421956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421957:	mov    bl,0xff
  421959:	sar    DWORD PTR [eax-0x4c4f073f],0x30
  421960:	mov    ch,0xf
  421962:	jg     0x421984
  421964:	fsub   DWORD PTR [ebx+edi*8]
  421967:	inc    esp
  421968:	dec    edx
  421969:	cmp    al,0xdd
  42196b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42196c:	aas    
  42196d:	out    0x28,eax
  42196f:	xchg   esi,eax
  421970:	aas    
  421971:	je     0x421963
  421973:	cmp    bh,BYTE PTR [eax-0x2f]
  421976:	scas   al,BYTE PTR es:[edi]
  421977:	sbb    BYTE PTR [ebp+0x632066c0],dh
  42197d:	pop    ecx
  42197e:	xchg   esp,eax
  42197f:	(bad)  
  421980:	(bad)  
  421982:	mov    ebp,0xea58e824
  421987:	sbb    edx,DWORD PTR [esi+0x3fdb8ea8]
  42198d:	mov    esi,0x70f23d9d
  421992:	lods   eax,DWORD PTR ds:[esi]
  421993:	dec    ebp
  421994:	and    esp,esp
  421996:	mov    dl,0x57
  421998:	test   al,0x99
  42199a:	(bad)  
  42199b:	jns    0x421982
  42199d:	sar    ecx,0x9b
  4219a0:	test   DWORD PTR [esi],esi
  4219a2:	daa    
  4219a3:	xor    BYTE PTR [ebp-0x3e81603d],dh
  4219a9:	popf   
  4219aa:	rol    DWORD PTR [esi-0x33],0x65
  4219ae:	add    al,0x2d
  4219b0:	nop
  4219b1:	jnp    0x4219f8
  4219b3:	cmp    eax,0xf9c0a4f1
  4219b8:	sti    
  4219b9:	and    DWORD PTR [edi],ecx
  4219bb:	scas   eax,DWORD PTR es:[edi]
  4219bc:	pop    esp
  4219bd:	add    edx,DWORD PTR [eax+0x394bd013]
  4219c3:	in     eax,0x42
  4219c5:	mov    ebx,0x51d3c0f6
  4219ca:	sub    BYTE PTR [ebx],dl
  4219cc:	ds sti 
  4219ce:	pop    es
  4219cf:	pop    eax
  4219d0:	loop   0x421991
  4219d2:	out    dx,al
  4219d3:	daa    
  4219d4:	hlt    
  4219d5:	mov    ebp,0x9de23e49
  4219da:	xor    ebx,eax
  4219dc:	xchg   edi,eax
  4219dd:	aaa    
  4219de:	dec    ebx
  4219df:	jg     0x421a06
  4219e1:	dec    ebp
  4219e2:	call   0xb73b:0x8f42741d
  4219e9:	xor    dl,BYTE PTR [edx]
  4219eb:	dec    DWORD PTR [ebp-0x6546050f]
  4219f1:	nop
  4219f2:	inc    ebx
  4219f3:	pop    es
  4219f4:	out    0x70,eax
  4219f6:	fsub   st(6),st
  4219f8:	jae    0x421a5c
  4219fa:	adc    ch,dh
  4219fc:	xor    al,0xfd
  4219fe:	fprem1 
  421a00:	and    ah,BYTE PTR [ebx+0x2081f0f6]
  421a06:	sbb    bl,al
  421a08:	test   BYTE PTR [edi],dl
  421a0a:	jg     0x421a4e
  421a0c:	inc    esp
  421a0d:	inc    eax
  421a0e:	add    eax,0x52887c68
  421a13:	ds fdivr st(2),st
  421a16:	xor    al,0x60
  421a18:	mov    bh,0x69
  421a1a:	and    eax,0x2e4100cf
  421a1f:	js     0x421a5e
  421a21:	xchg   ebx,eax
  421a22:	dec    ebx
  421a23:	xchg   edi,eax
  421a24:	xchg   esi,eax
  421a25:	xor    dh,BYTE PTR [edi+0x7e]
  421a28:	scas   al,BYTE PTR es:[edi]
  421a29:	int    0xe6
  421a2b:	inc    eax
  421a2c:	pop    edx
  421a2d:	repz sti 
  421a2f:	mov    ecx,0xe6e87a93
  421a34:	repz aam 0x2b
  421a37:	adc    ecx,eax
  421a39:	and    BYTE PTR [eax-0x166749c2],0xf
  421a40:	mov    eax,ds:0xe819109
  421a45:	jl     0x421aa3
  421a47:	cmp    dl,BYTE PTR [eax-0x76]
  421a4a:	xchg   edx,eax
  421a4b:	je     0x4219e0
  421a4d:	pop    ecx
  421a4e:	fwait
  421a4f:	test   al,0x6f
  421a51:	mov    ebp,0x3506df31
  421a56:	shl    BYTE PTR [edx],0xc6
  421a59:	popf   
  421a5a:	mov    al,ds:0x8423382f
  421a5f:	pop    ecx
  421a60:	lahf   
  421a61:	lods   al,BYTE PTR ds:[esi]
  421a62:	xor    DWORD PTR [esi+esi*1],ecx
  421a65:	add    ah,BYTE PTR [edx+0xaf7ce1e]
  421a6b:	fisubr WORD PTR [edi+0x7d]
  421a6e:	adc    al,0x12
  421a70:	pop    ebp
  421a71:	(bad)  
  421a72:	daa    
  421a73:	adc    eax,DWORD PTR [si-0x3d]
  421a77:	adc    ebx,edx
  421a79:	(bad)  
  421a7a:	sbb    al,0x87
  421a7c:	jmp    0xa652b755
  421a81:	mov    eax,0xfcc9b0dc
  421a86:	jnp    0x421a3b
  421a88:	adc    DWORD PTR [esi+ecx*8-0x59],0xfffffff0
  421a8d:	push   esp
  421a8e:	inc    eax
  421a8f:	(bad)  
  421a90:	mov    esi,0x8d6acf56
  421a95:	std    
  421a96:	and    al,0x4b
  421a98:	cmp    dh,dl
  421a9a:	sub    DWORD PTR [eax-0x19021a42],ecx
  421aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aa1:	add    esi,DWORD PTR [edi+ecx*4-0x1c]
  421aa5:	call   0x9571:0x4341bab
  421aac:	loope  0x421aa1
  421aae:	(bad)  
  421ab1:	mov    al,0x60
  421ab3:	jg     0x421af3
  421ab5:	jge    0x421aef
  421ab7:	(bad)  
  421ab8:	(bad)  
  421ab9:	call   0x414ec20a
  421abe:	mov    ecx,es
  421ac0:	cmp    BYTE PTR [ebp+edi*2+0x76ba06ee],cl
  421ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ac8:	cs js  0x421a90
  421acb:	arpl   WORD PTR [edi+0x3],sp
  421ace:	xchg   BYTE PTR [ecx+eax*1-0x22d77f7a],ch
  421ad5:	aad    0xcf
  421ad7:	mov    edx,0x812ff053
  421adc:	sbb    WORD PTR [ebx+0x7b],di
  421ae0:	ds mov eax,0xa96362de
  421ae6:	leave  
  421ae7:	fwait
  421ae8:	pop    esi
  421ae9:	dec    ecx
  421aea:	dec    esp
  421aeb:	inc    esp
  421aec:	and    eax,0xd90f7880
  421af1:	mov    ecx,0x34a878cf
  421af6:	fldcw  WORD PTR [ecx+ebp*1+0x11]
  421afa:	mov    edx,0x28d97f5d
  421aff:	std    
  421b00:	mov    esi,0x467373d
  421b05:	loope  0x421af9
  421b07:	push   cs
  421b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b09:	and    BYTE PTR [ebx],bh
  421b0b:	cs mov bh,0x88
  421b0e:	mov    eax,cs
  421b10:	pusha  
  421b11:	push   esp
  421b12:	mov    al,ds:0x74de08f9
  421b17:	pop    ebx
  421b18:	xchg   DWORD PTR [eax+eiz*1+0x4936b6f5],edi
  421b1f:	repz aam 0x13
  421b22:	inc    esp
  421b23:	dec    esp
  421b24:	popa   
  421b25:	sub    BYTE PTR [ebp+0x17],ah
  421b28:	jns    0x421b1f
  421b2a:	cmp    BYTE PTR [ecx-0x54],cl
  421b2d:	iret   
  421b2e:	push   ds
  421b2f:	ror    dl,cl
  421b31:	arpl   WORD PTR [ebx-0x2e],bx
  421b34:	imul   ebp,DWORD PTR [edi+0x24],0x2f6b5738
  421b3b:	out    dx,eax
  421b3c:	leave  
  421b3d:	adc    bh,dh
  421b3f:	cmp    dh,al
  421b41:	xchg   BYTE PTR [esp+ebp*8-0x5d3298d2],dl
  421b48:	dec    edx
  421b49:	push   ebx
  421b4a:	jmp    0x421b02
  421b4c:	cmc    
  421b4d:	pop    ecx
  421b4e:	sub    bl,BYTE PTR [edx+0x7e3ab03f]
  421b54:	mov    edi,DWORD PTR [edx]
  421b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b57:	mov    ds:0xd1c29da8,al
  421b5c:	stc    
  421b5d:	push   edi
  421b5e:	fisubr DWORD PTR [eax+0x5a]
  421b61:	dec    ebx
  421b62:	cwde   
  421b63:	sub    bh,BYTE PTR [edi-0x44aa9921]
  421b69:	sbb    DWORD PTR [ecx],edi
  421b6b:	pop    ds
  421b6c:	mov    DWORD PTR [ebp+0x3dc0071e],esi
  421b72:	jl     0x421b53
  421b74:	add    cl,BYTE PTR [ebx-0x5fb29101]
  421b7a:	outs   dx,DWORD PTR ds:[esi]
  421b7b:	and    al,0xc5
  421b7d:	sbb    bh,0x83
  421b80:	mov    edx,cs
  421b82:	es inc ecx
  421b84:	push   ebp
  421b85:	nop
  421b86:	jo     0x421b7f
  421b88:	pop    ecx
  421b89:	xor    esi,DWORD PTR [eax-0x70b8ab2]
  421b8f:	fdivr  QWORD PTR [esi-0x1b]
  421b92:	call   0x1c91e8c
  421b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b98:	sub    eax,0x69eed64d
  421b9d:	mov    cl,0xc1
  421b9f:	call   0x924:0x56fbea7d
  421ba6:	cld    
  421ba7:	push   cs
  421ba8:	push   edx
  421ba9:	xchg   edx,eax
  421baa:	mov    gs,WORD PTR [ecx-0x64f36c6c]
  421bb0:	xchg   ch,bl
  421bb2:	sbb    al,BYTE PTR [edx]
  421bb4:	inc    ebx
  421bb5:	mov    ds:0xcef0004c,eax
  421bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bbb:	sbb    ah,bl
  421bbd:	aad    0x46
  421bbf:	adc    ch,BYTE PTR ds:0xbbe8d620
  421bc5:	loope  0x421b56
  421bc7:	cmp    al,0x42
  421bc9:	sub    al,0xc4
  421bcb:	mov    WORD PTR [edi+0x0],fs
  421bce:	cwde   
  421bcf:	ins    BYTE PTR es:[edi],dx
  421bd0:	inc    ecx
  421bd1:	adc    BYTE PTR [eax-0x32be7a31],ch
  421bd7:	dec    eax
  421bd8:	and    cl,BYTE PTR [edi+edx*4+0x3a]
  421bdc:	pop    esi
  421bdd:	mov    BYTE PTR [edi-0x66],dl
  421be0:	cli    
  421be1:	xor    BYTE PTR [ebx],al
  421be3:	setle  bh
  421be6:	loope  0x421b80
  421be8:	mov    ebx,ebp
  421bea:	aas    
  421beb:	test   DWORD PTR [esi+0x5ad48c3f],edx
  421bf1:	cmp    dh,0xf
  421bf4:	inc    BYTE PTR [esi-0x4452c10f]
  421bfa:	xchg   edi,eax
  421bfb:	pushf  
  421bfc:	pop    ebx
  421bfd:	aad    0x3
  421bff:	mov    dl,0xbc
  421c01:	dec    esi
  421c02:	sbb    bh,cl
  421c04:	or     bh,BYTE PTR [ebx-0x2f]
  421c07:	loopne 0x421bc3
  421c09:	aam    0x21
  421c0b:	sub    ah,BYTE PTR [edx+eax*8]
  421c0e:	call   0xa665:0x86f2cada
  421c15:	jnp    0x421be4
  421c17:	loope  0x421be3
  421c19:	push   esi
  421c1a:	mov    ebp,0x7661f9d7
  421c1f:	cmp    eax,0x1a62f107
  421c24:	mov    ds:0x770954fc,eax
  421c29:	test   esp,0x730bc873
  421c2f:	jmp    0x421c44
  421c31:	mov    al,ds:0xf86bef
	...
  421c3e:	add    BYTE PTR [eax],al
  421c40:	add    BYTE PTR [edx+eax*8],cl
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0xe6971a56
  421c4e:	das    
  421c4f:	jb     0x421c2e
  421c51:	xchg   ecx,eax
  421c52:	xchg   ebp,eax
  421c53:	add    DWORD PTR [eax],eax
  421c55:	lods   al,BYTE PTR ds:[esi]
  421c56:	add    eax,DWORD PTR [eax]
  421c58:	add    BYTE PTR [eax+ebx*4],ch
  421c5b:	paddw  mm1,QWORD PTR [ecx]
  421c5e:	fstp   QWORD PTR [ecx-0x75355d51]
  421c64:	mov    bl,0x13
  421c66:	call   0xe8e07899
  421c6b:	out    0x6b,al
  421c6d:	xchg   edx,eax
  421c6e:	cmp    al,0x73
  421c70:	dec    ebp
  421c71:	xchg   esp,eax
  421c72:	popa   
  421c73:	pop    es
  421c74:	stc    
  421c75:	loop   0x421c5c
  421c77:	mov    edi,0xcae785d6
  421c7c:	retf   
  421c7d:	inc    ebp
  421c7e:	ds addr16 enter 0x753e,0xa7
  421c84:	retf   
  421c85:	adc    eax,0xd46de048
  421c8a:	leave  
  421c8b:	rol    al,0x76
  421c8e:	retf   
  421c8f:	pop    esp
  421c90:	jno    0x421c40
  421c92:	or     al,BYTE PTR [ecx]
  421c94:	gs cdq 
  421c96:	push   ebx
  421c97:	lods   al,BYTE PTR ds:[esi]
  421c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c99:	push   edi
  421c9a:	les    edx,FWORD PTR [ebx-0x2d]
  421c9d:	push   ebx
  421c9e:	fnstsw WORD PTR [ebx+0x13c108b0]
  421ca4:	or     al,0x28
  421ca6:	test   BYTE PTR [eax-0x7d],ch
  421ca9:	sbb    al,0x64
  421cab:	inc    eax
  421cac:	jmp    0x1367:0x411fbd4a
  421cb3:	push   eax
  421cb4:	adc    al,0x59
  421cb6:	ins    BYTE PTR es:[edi],dx
  421cb7:	mov    ds:0x707432b6,al
  421cbc:	or     DWORD PTR [edi+0xf],edi
  421cbf:	dec    ecx
  421cc0:	inc    ebp
  421cc1:	loop   0x421cf9
  421cc3:	pusha  
  421cc4:	xchg   esi,eax
  421cc5:	mov    eax,ds:0x64b96c9f
  421cca:	and    BYTE PTR [edx-0x7c1f859],0xda
  421cd1:	aaa    
  421cd2:	mov    BYTE PTR [edi+0x3ef87932],dl
  421cd8:	add    ah,cl
  421cda:	retf   
  421cdb:	cs leave 
  421cdd:	pop    eax
  421cde:	fisttp WORD PTR [esi-0x16]
  421ce1:	dec    ebp
  421ce2:	inc    ecx
  421ce3:	sub    eax,0x5122a0bf
  421ce8:	ficom  WORD PTR [edi+eiz*1]
  421ceb:	jmp    0x421cfa
  421ced:	mov    al,0x6e
  421cef:	fld    DWORD PTR [edx+ebp*4-0x2c055806]
  421cf6:	push   0xffffff94
  421cf8:	xchg   DWORD PTR [ebx],edi
  421cfa:	or     ebp,DWORD PTR [ebx+eiz*2+0x567f7ee2]
  421d01:	and    eax,0x9f5f4bf3
  421d06:	scas   eax,DWORD PTR es:[edi]
  421d07:	lods   eax,DWORD PTR gs:[esi]
  421d09:	scas   eax,DWORD PTR es:[edi]
  421d0a:	mov    dh,0x3b
  421d0c:	and    cl,BYTE PTR [ecx-0x4049d7a0]
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	test   dl,ch
  421d15:	dec    ecx
  421d16:	scas   eax,DWORD PTR es:[edi]
  421d17:	sbb    DWORD PTR [edi+0x15],ebx
  421d1a:	pop    ebp
  421d1b:	xchg   esi,eax
  421d1c:	test   eax,0x26e7206a
  421d21:	push   0xbd23557a
  421d26:	jp     0x421da6
  421d28:	addr16 stc 
  421d2a:	ror    DWORD PTR [ecx+0x60],0x41
  421d2e:	or     DWORD PTR ds:0x75cbfca6,edx
  421d34:	mov    dl,0x8b
  421d36:	jmp    0x7d294b45
  421d3b:	rcr    BYTE PTR [esi],cl
  421d3d:	jmp    DWORD PTR [ebp-0x7]
  421d40:	das    
  421d41:	adc    DWORD PTR [ecx],esp
  421d43:	std    
  421d44:	hlt    
  421d45:	cld    
  421d46:	dec    esi
  421d47:	aaa    
  421d48:	adc    DWORD PTR [edi-0x41],ebp
  421d4b:	dec    ebx
  421d4c:	ja     0x421d68
  421d4e:	cmp    esi,DWORD PTR [ebx-0x19]
  421d51:	jnp    0x421da4
  421d53:	pop    ebx
  421d54:	add    DWORD PTR [ecx],0xa
  421d57:	pmulhw mm4,QWORD PTR [ebx]
  421d5a:	loope  0x421d70
  421d5c:	sub    eax,0x5d80b196
  421d61:	ins    DWORD PTR es:[edi],dx
  421d62:	std    
  421d63:	dec    esp
  421d64:	pop    ss
  421d65:	jle    0x421d7e
  421d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d68:	jnp    0x421d79
  421d6a:	(bad)  
  421d6b:	jo     0x421dd5
  421d6d:	or     al,0xb8
  421d6f:	(bad)  [edi-0x3b]
  421d72:	or     BYTE PTR [edi+0x2406827d],bl
  421d78:	dec    edi
  421d79:	je     0x421d00
  421d7b:	cli    
  421d7c:	repnz cmp dh,BYTE PTR [ebx]
  421d7f:	inc    edx
  421d80:	hlt    
  421d81:	clc    
  421d82:	js     0x421d33
  421d84:	imul   ecx,DWORD PTR [eiz*4-0x5331a834],0xfa7b7bc5
  421d8f:	pop    ss
  421d90:	scas   eax,DWORD PTR es:[edi]
  421d91:	fs ret 0xaaa8
  421d95:	inc    edi
  421d96:	into   
  421d97:	sahf   
  421d98:	fs push ebx
  421d9a:	repnz sbb eax,0x76b406c
  421da0:	sbb    BYTE PTR [ebx],0x95
  421da3:	ret    
  421da4:	imul   esp,DWORD PTR [ebp-0x6b],0x64
  421da8:	xchg   edi,eax
  421da9:	lds    edi,FWORD PTR [esi+0x542a273a]
  421daf:	cmp    DWORD PTR [eax+0x440fcd5c],0xffffffaa
  421db6:	test   BYTE PTR [ebx+ebp*2+0x34],0x60
  421dbb:	push   ebp
  421dbc:	ins    BYTE PTR es:[edi],dx
  421dbd:	adc    cl,ch
  421dbf:	dec    edi
  421dc0:	cmp    esi,edi
  421dc2:	mov    bh,0x8a
  421dc4:	inc    edx
  421dc5:	enter  0x3a95,0xdd
  421dc9:	(bad)  
  421dca:	dec    esp
  421dcb:	mov    eax,0x42d73010
  421dd0:	sub    DWORD PTR [edi-0x4fe8293e],ebx
  421dd6:	jb     0x421dc0
  421dd8:	jbe    0x421d97
  421dda:	mov    bh,0xe0
  421ddc:	cmp    edx,DWORD PTR [ecx-0x228ed975]
  421de2:	fist   WORD PTR [eax-0x6ce088d0]
  421de8:	sub    al,0x50
  421dea:	cmp    DWORD PTR [esi+esi*4+0x336bcd13],0x5be68848
  421df5:	cmc    
  421df6:	mov    ebp,0x21caf84b
  421dfb:	rcr    dl,0xf1
  421dfe:	mov    BYTE PTR [edx-0x56f23c4d],ch
  421e04:	retf   
  421e05:	(bad)  
  421e06:	out    0x57,eax
  421e08:	jae    0x421d9b
  421e0a:	dec    ebx
  421e0b:	fcom   st(6)
  421e0d:	or     al,0x6e
  421e0f:	pop    esp
  421e10:	pop    edx
  421e11:	or     bh,dl
  421e13:	sbb    ecx,0x12ba4fd
  421e19:	adc    BYTE PTR [ebx-0x2a],dh
  421e1c:	push   edi
  421e1d:	xchg   edi,eax
  421e1e:	neg    bh
  421e20:	call   0x1939:0x5b0dd486
  421e27:	cmp    bh,ch
  421e29:	inc    edx
  421e2a:	rcl    BYTE PTR [edi+0x7fcbe231],0x5b
  421e31:	clc    
  421e32:	add    ebp,DWORD PTR [edx+0x2601aa35]
  421e38:	xchg   ebx,eax
  421e39:	in     eax,0xc3
  421e3b:	rol    BYTE PTR [ecx+0x18],0xac
  421e3f:	jmp    0x7373:0x222d254f
  421e46:	ror    BYTE PTR [eax+0x31],1
  421e49:	repz retf 
  421e4b:	mov    esi,0x3eebd7e7
  421e50:	or     al,0xb5
  421e52:	mov    ecx,0x5f378ccd
  421e57:	scas   al,BYTE PTR es:[edi]
  421e58:	or     ebp,DWORD PTR [esi-0x5106de8f]
  421e5e:	shr    DWORD PTR [ecx-0x49],1
  421e61:	lahf   
  421e62:	out    0x98,eax
  421e64:	call   0xf81a0099
  421e69:	and    eax,0xbee2533c
  421e6e:	imul   ebx,DWORD PTR [edi+ebx*8],0x34
  421e72:	dec    eax
  421e73:	cmp    DWORD PTR [edx+0x1e],eax
  421e76:	and    al,0x7e
  421e78:	(bad)  
  421e79:	cli    
  421e7a:	mov    ah,0x80
  421e7c:	sbb    eax,0x68ddab5e
  421e81:	or     ecx,esi
  421e83:	xchg   edi,eax
  421e84:	cs clc 
  421e86:	out    dx,al
  421e87:	and    dl,BYTE PTR [eax+ebx*1]
  421e8a:	mov    ah,0x86
  421e8c:	inc    esi
  421e8d:	in     al,dx
  421e8e:	xchg   edi,eax
  421e8f:	inc    edi
  421e90:	aaa    
  421e91:	dec    esi
  421e92:	addr16 mov al,ds:0xfbc2
  421e96:	or     al,BYTE PTR [ecx]
  421e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e99:	shl    BYTE PTR [eax+0x57],cl
  421e9c:	pop    ss
  421e9d:	dec    edi
  421e9e:	lods   al,BYTE PTR ds:[esi]
  421e9f:	test   al,0xc1
  421ea1:	int3   
  421ea2:	loop   0x421ef9
  421ea4:	int    0x31
  421ea6:	xchg   edi,eax
  421ea7:	push   edi
  421ea8:	loope  0x421f23
  421eaa:	call   0x4de047d2
  421eaf:	loope  0x421ec2
  421eb1:	out    0xdb,eax
  421eb3:	arpl   WORD PTR [edx+0x2c55ce30],bp
  421eb9:	mov    es,WORD PTR [ebp-0x450a261e]
  421ebf:	sub    al,0x60
  421ec1:	ret    
  421ec2:	shr    DWORD PTR [edx-0x23c52a70],cl
  421ec8:	mov    DWORD PTR [esi-0x1],eax
  421ecb:	sub    al,0x28
  421ecd:	mov    al,0xd3
  421ecf:	retf   
  421ed0:	stos   BYTE PTR es:[edi],al
  421ed1:	sub    DWORD PTR [edx+0x42bff478],edi
  421ed7:	pop    es
  421ed8:	call   0xb092a7af
  421edd:	xchg   edi,eax
  421ede:	and    DWORD PTR [edi-0x49],0x25
  421ee2:	cmp    al,0xf8
  421ee4:	cs and eax,0x1571380b
  421eea:	adc    al,0x5c
  421eec:	mov    eax,ds:0xa8231b54
  421ef1:	xchg   DWORD PTR [edi],edi
  421ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ef4:	add    bh,bl
  421ef6:	leave  
  421ef7:	les    ecx,FWORD PTR [edi+0x1f138e7a]
  421efd:	cmc    
  421efe:	inc    edi
  421eff:	push   ds
  421f00:	adc    DWORD PTR [eax-0x52],0x5c
  421f04:	(bad)  
  421f05:	jno    0x421f70
  421f07:	cmp    eax,ebx
  421f09:	xor    bl,BYTE PTR [eax]
  421f0b:	inc    ebx
  421f0c:	push   es
  421f0d:	jg     0x421f77
  421f0f:	jl     0x421f84
  421f11:	(bad)
  421f14:	sub    dh,BYTE PTR [edi+ebx*4-0x79]
  421f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f19:	js     0x421f50
  421f1b:	pop    es
  421f1c:	cwde   
  421f1d:	popa   
  421f1e:	cwde   
  421f1f:	mov    al,BYTE PTR [edx+0x50]
  421f22:	popf   
  421f23:	test   DWORD PTR [ecx+0x2b1d77f2],ecx
  421f29:	cmp    ah,BYTE PTR [edi]
  421f2b:	push   esp
  421f2c:	fistp  QWORD PTR [edx]
  421f2e:	fxch   st(1)
  421f30:	call   0x2589e4a2
  421f35:	ins    BYTE PTR es:[edi],dx
  421f36:	inc    ebp
  421f37:	push   ds
  421f38:	in     al,dx
  421f39:	(bad)  
  421f3a:	pop    ebp
  421f3b:	cmp    al,0x42
  421f3d:	pop    es
  421f3e:	adc    DWORD PTR [ecx+0x1b],edx
  421f41:	pop    ds
  421f42:	std    
  421f43:	lea    ebp,[ebx+0x4875f8c9]
  421f49:	iret   
  421f4a:	dec    ebp
  421f4b:	pop    ebp
  421f4c:	popf   
  421f4d:	jle    0x421f6e
  421f4f:	stc    
  421f50:	sbb    esp,edi
  421f52:	jle    0x421f1e
  421f54:	loope  0x421f30
  421f56:	and    esi,ebx
  421f58:	rcl    BYTE PTR [ebx-0x2580e3ce],1
  421f5e:	aad    0x17
  421f60:	mov    ebx,0x9dd4fd8d
  421f65:	(bad)  
  421f66:	in     al,dx
  421f67:	cwde   
  421f68:	adc    DWORD PTR [eax+eiz*8+0x1a491408],0xffffffb5
  421f70:	lock fcom DWORD PTR ds:[ebx+0x69140962]
  421f78:	add    al,al
  421f7a:	and    eax,0x62db67b5
  421f7f:	xchg   esi,eax
  421f80:	add    DWORD PTR [eax+0x72],edi
  421f83:	imul   ebx,DWORD PTR [ecx],0xffffffeb
  421f86:	in     al,0x4
  421f88:	cmp    ebx,DWORD PTR [eax]
  421f8a:	mov    ds:0x24b8015b,eax
  421f8f:	add    al,0xcc
  421f91:	lea    edi,[edi]
  421f93:	xor    al,0xd6
  421f95:	retf   
  421f96:	inc    esi
  421f97:	push   esi
  421f98:	clc    
  421f99:	hlt    
  421f9a:	adc    al,BYTE PTR [edx]
  421f9c:	and    DWORD PTR [edi+0x2b],eax
  421f9f:	outs   dx,DWORD PTR ds:[esi]
  421fa0:	jmp    0x421f77
  421fa2:	shl    dh,cl
  421fa4:	jg     0x421f89
  421fa6:	add    DWORD PTR [eax],eax
  421fa8:	int    0x95
  421faa:	push   cs
  421fab:	cmp    esi,DWORD PTR [esi]
  421fad:	cli    
  421fae:	int    0x7b
  421fb0:	pop    ss
  421fb1:	clc    
  421fb2:	out    0x73,al
  421fb4:	sar    edx,1
  421fb6:	mov    bh,0xc2
  421fb8:	ret    
  421fb9:	add    bl,dh
  421fbb:	imul   edx,edx,0xffffffaf
  421fbe:	loopne 0x421f70
  421fc0:	pop    esi
  421fc1:	outs   dx,BYTE PTR ds:[esi]
  421fc2:	call   0xa9cae428
  421fc7:	lods   al,BYTE PTR ds:[esi]
  421fc8:	push   edi
  421fc9:	jae    0x421f60
  421fcb:	mov    bl,0x77
  421fcd:	cmp    al,0x19
  421fcf:	(bad)  
  421fd0:	stos   DWORD PTR es:[edi],eax
  421fd1:	or     edx,esi
  421fd3:	ja     0x421fdb
  421fd5:	jmp    0x421fb3
  421fd7:	pop    ebx
  421fd8:	jl     0x421f81
  421fda:	push   0xcbf8a03e
  421fdf:	push   ebp
  421fe0:	iret   
  421fe1:	outs   dx,BYTE PTR ds:[esi]
  421fe2:	cmp    edi,DWORD PTR ds:0xd70e24a4
  421fe8:	repz jmp 0x422003
  421feb:	(bad)  
  421fec:	nop
  421fed:	xor    DWORD PTR [ebx],ecx
  421fef:	inc    ebx
  421ff0:	outs   dx,DWORD PTR ds:[esi]
  421ff1:	sub    eax,esi
  421ff3:	lahf   
  421ff4:	mov    bl,0x7
  421ff6:	and    esi,eax
  421ff8:	fst    DWORD PTR [esi-0x293cb2f3]
  421ffe:	xor    eax,0xa500c555
  422003:	pop    edi
  422004:	clc    
	...
  422011:	inc    edx
  422012:	dec    edi
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0x8893e376
  422020:	adc    edi,DWORD PTR ds:0xac000199
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    ch,bh
  42202a:	mov    bl,0x7
  42202c:	xchg   edx,eax
  42202d:	mov    ds,ebp
  42202f:	adc    al,dh
  422031:	ret    
  422032:	ins    WORD PTR es:[edi],dx
  422034:	loope  0x422013
  422036:	push   ss
  422037:	ror    edi,cl
  422039:	test   al,0x20
  42203b:	mov    edx,0x1397fd31
  422040:	loope  0x4220bd
  422042:	js     0x4220bf
  422044:	push   ss
  422045:	int3   
  422046:	retf   0x1816
  422049:	mov    al,ds:0x4872b285
  42204e:	adc    al,0xab
  422050:	mov    eax,ds:0x61d4360f
  422055:	or     edi,DWORD PTR [eax]
  422057:	imul   ebp,DWORD PTR [eax],0xb4cf2daf
  42205d:	and    al,0xdd
  42205f:	xor    al,0x33
  422061:	dec    esi
  422062:	(bad)  
  422063:	jnp    0x42204e
  422065:	loop   0x421fea
  422067:	pushf  
  422068:	retf   0xccf6
  42206b:	scas   al,BYTE PTR es:[edi]
  42206c:	and    al,0x9f
  42206e:	rol    DWORD PTR [edi+0x1477117d],1
  422074:	fisubr DWORD PTR [eax+0x40]
  422077:	(bad)  
  422078:	cld    
  422079:	clc    
  42207a:	aas    
  42207b:	outs   dx,DWORD PTR ds:[esi]
  42207c:	jno    0x42208f
  42207e:	cmp    dh,BYTE PTR [eax-0x6b]
  422081:	rcl    DWORD PTR ds:0x989df3ca,cl
  422087:	inc    ebx
  422088:	inc    edi
  422089:	in     eax,dx
  42208a:	idiv   DWORD PTR [edi-0x4233b54f]
  422090:	iret   
  422091:	fimul  DWORD PTR ds:0xf275e4d4
  422097:	loope  0x422112
  422099:	jbe    0x4220b4
  42209b:	lahf   
  42209c:	adc    BYTE PTR [ecx+0x47],ch
  42209f:	inc    esp
  4220a0:	aad    0xec
  4220a2:	fcomp  DWORD PTR [esi+edi*8]
  4220a5:	cwde   
  4220a6:	bound  eax,QWORD PTR [esi]
  4220a8:	pushf  
  4220a9:	(bad)  [eax]
  4220ab:	pop    ebx
  4220ac:	popf   
  4220ad:	pop    edx
  4220ae:	pop    ebp
  4220af:	cmp    DWORD PTR [eax],ebx
  4220b1:	dec    ebx
  4220b2:	ror    ebx,0xdb
  4220b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b6:	cmc    
  4220b7:	xchg   ecx,eax
  4220b8:	mov    ah,dl
  4220ba:	cs inc esi
  4220bc:	xor    al,0x9b
  4220be:	ja     0xec94
  4220c3:	mov    BYTE PTR [eax-0x116b6568],ah
  4220c9:	test   eax,0xbc502883
  4220ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220cf:	aas    
  4220d0:	or     DWORD PTR [ebx+0x45e2b713],ebx
  4220d6:	and    ch,BYTE PTR [esp+eiz*2]
  4220d9:	das    
  4220da:	sbb    BYTE PTR [edx],dh
  4220dc:	adc    BYTE PTR [ebx],dh
  4220de:	ds (bad) 
  4220e0:	xchg   edi,eax
  4220e1:	sub    eax,0x4f46bce
  4220e6:	mov    esi,0x66a00fa1
  4220eb:	inc    edi
  4220ec:	inc    esp
  4220ed:	rcr    bh,1
  4220ef:	stos   BYTE PTR es:[edi],al
  4220f0:	shl    BYTE PTR [eax],0xcf
  4220f3:	mov    edi,DWORD PTR [ebx+0x568d52d6]
  4220f9:	mov    bh,0xa5
  4220fb:	hlt    
  4220fc:	sbb    BYTE PTR [edx],0xb4
  4220ff:	iret   
  422100:	dec    ecx
  422101:	mov    ch,cl
  422103:	jmp    0xfb5983b1
  422108:	int3   
  422109:	inc    esi
  42210a:	in     eax,0x8e
  42210c:	retf   0x2d37
  42210f:	sub    dh,dl
  422111:	mov    esi,0xd70fa0ab
  422116:	inc    edx
  422117:	or     BYTE PTR [ecx],0xb2
  42211a:	js     0x42214b
  42211c:	xor    BYTE PTR [edx+0x2a155848],bh
  422122:	cli    
  422123:	dec    eax
  422124:	push   esi
  422125:	scas   al,BYTE PTR es:[edi]
  422126:	clc    
  422127:	push   edi
  422128:	gs push es
  42212a:	outs   dx,BYTE PTR ds:[esi]
  42212b:	imul   esi,DWORD PTR [edi-0x5eab1ff2],0x2b
  422132:	ins    DWORD PTR es:[edi],dx
  422133:	jl     0x4220be
  422135:	sbb    DWORD PTR ds:0xfd4d0fdb,0xffffffdb
  42213c:	jnp    0x422143
  42213e:	inc    edx
  42213f:	push   cs
  422140:	iret   
  422141:	data16 adc bh,ch
  422144:	enter  0xa34,0x85
  422148:	pop    ebx
  422149:	dec    esp
  42214a:	lahf   
  42214b:	stos   DWORD PTR es:[edi],eax
  42214c:	(bad)  
  42214d:	mov    WORD PTR [edi+0x781662a],es
  422153:	and    al,0x3c
  422155:	(bad)  
  422156:	xor    al,0x7a
  422158:	imul   ebp,ecx,0xfffffff6
  42215b:	pushf  
  42215c:	inc    esi
  42215d:	pusha  
  42215e:	and    dl,ah
  422160:	push   edi
  422161:	push   edi
  422162:	inc    edx
  422163:	xlat   BYTE PTR ds:[ebx]
  422164:	cmp    al,0x0
  422166:	cmp    al,0xcc
  422168:	pop    ecx
  422169:	shl    DWORD PTR [esi-0x23],0x56
  42216d:	sbb    BYTE PTR [esi],ah
  42216f:	or     cl,BYTE PTR [ebp-0x52]
  422172:	jnp    0x422142
  422174:	int3   
  422175:	lahf   
  422176:	ret    0xb836
  422179:	jl     0x422164
  42217b:	lock cli 
  42217d:	mov    esp,0x662b0706
  422182:	out    dx,eax
  422183:	push   esi
  422184:	int3   
  422185:	(bad)  
  422186:	cs mov ecx,0xec286183
  42218c:	and    al,0xc0
  42218e:	stos   DWORD PTR es:[edi],eax
  42218f:	cmp    bl,BYTE PTR [esi+0x1a]
  422192:	neg    BYTE PTR [ecx-0x5e439a9c]
  422198:	and    DWORD PTR [ebp+0x1c],edx
  42219b:	aas    
  42219c:	dec    edi
  42219d:	mov    esi,0xbce86698
  4221a2:	test   al,0x69
  4221a4:	fld    QWORD PTR [esi-0x5cc2090f]
  4221aa:	dec    edi
  4221ab:	mov    ebp,0x5d7184a6
  4221b0:	mov    ss,WORD PTR [ebp+0x27]
  4221b3:	sbb    DWORD PTR [edx-0x3a],esi
  4221b6:	sbb    dl,BYTE PTR [edx]
  4221b8:	mov    al,ds:0x8a11da2d
  4221bd:	mov    dh,BYTE PTR [ebp+0x4f]
  4221c0:	shl    esi,1
  4221c2:	and    eax,0x8651b0c2
  4221c7:	test   ch,bh
  4221c9:	sbb    al,0xef
  4221cb:	fisub  WORD PTR [edi+eax*8+0x62]
  4221cf:	pop    esp
  4221d0:	mov    esi,0xd3c747fd
  4221d5:	xchg   esp,eax
  4221d6:	in     eax,0x31
  4221d8:	sbb    esp,ebx
  4221da:	addr16 data16 (bad) 
  4221dd:	std    
  4221de:	sub    bh,BYTE PTR ss:[esi+ecx*2+0x25]
  4221e3:	ficomp WORD PTR ds:0xdd33c9a0
  4221e9:	inc    eax
  4221ea:	jne    0x42222b
  4221ec:	adc    eax,0x855b5afd
  4221f1:	inc    ebx
  4221f2:	iret   
  4221f3:	mov    eax,0x879cef5f
  4221f8:	aam    0x47
  4221fa:	frstor [edx-0x1a325e1d]
  422200:	add    ah,bh
  422202:	sbb    ah,0x60
  422205:	cmp    al,0x78
  422207:	jmp    0x3e41:0x1b538c38
  42220e:	and    al,0x88
  422210:	nop
  422211:	leave  
  422212:	cs pushfw 
  422215:	shr    dh,cl
  422217:	mov    edi,0xf45caebf
  42221c:	and    ch,ah
  42221e:	adc    eax,0x7285079a
  422223:	jecxz  0x42225a
  422225:	sub    ebx,DWORD PTR [ecx+0x6e766373]
  42222b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42222c:	mov    ebx,0x2b57c620
  422231:	inc    edi
  422232:	mov    eax,ds:0xad9d04ea
  422237:	and    ecx,DWORD PTR [ecx+0x7c]
  42223a:	jge    0x422247
  42223c:	stc    
  42223d:	and    BYTE PTR [esi-0x10f92461],bl
  422243:	and    BYTE PTR [eax],bl
  422245:	pop    ecx
  422246:	pushf  
  422247:	xor    edi,DWORD PTR [esi-0x444ff5e2]
  42224d:	lahf   
  42224e:	mov    eax,ds:0x8b0116be
  422253:	lahf   
  422254:	jnp    0x42227f
  422256:	pop    es
  422257:	es retf 
  422259:	mov    edi,fs
  42225b:	daa    
  42225c:	rol    DWORD PTR [eax+0x50],1
  42225f:	loope  0x4221fb
  422261:	lods   al,BYTE PTR ds:[esi]
  422262:	(bad)  
  422263:	and    BYTE PTR [edi-0x2a],bh
  422266:	inc    ebp
  422267:	stc    
  422268:	push   esp
  422269:	int    0x7c
  42226b:	retf   
  42226c:	adc    ebx,DWORD PTR [edi-0x4eb37d11]
  422272:	cdq    
  422273:	clc    
  422274:	lods   al,BYTE PTR ds:[esi]
  422275:	int    0x9c
  422277:	pusha  
  422278:	(bad)  
  42227a:	hlt    
  42227b:	ins    BYTE PTR es:[edi],dx
  42227c:	test   al,0x6f
  42227e:	std    
  42227f:	call   0x1912:0x9f11ac60
  422286:	push   ebp
  422287:	push   eax
  422288:	enter  0x2a79,0x66
  42228c:	sbb    DWORD PTR [esi+0x55],edx
  42228f:	rcl    BYTE PTR [eax-0x3c],1
  422292:	std    
  422293:	mov    bl,0xe6
  422295:	or     al,0x40
  422297:	pop    ds
  422298:	aam    0x56
  42229a:	daa    
  42229b:	stc    
  42229c:	xor    DWORD PTR [edx+0x6aae15bd],edx
  4222a2:	bswap  esi
  4222a4:	outs   dx,DWORD PTR ds:[esi]
  4222a5:	pusha  
  4222a6:	and    edi,DWORD PTR [edi+eiz*8+0x7e]
  4222aa:	and    eax,0xf06f6921
  4222af:	cdq    
  4222b0:	mov    eax,ds:0xebfb99f8
  4222b5:	add    DWORD PTR [edi],0xffffffc5
  4222b8:	pop    ebp
  4222b9:	and    eax,0x18f0168e
  4222be:	sti    
  4222bf:	mov    al,ds:0xa2cd7c75
  4222c4:	ja     0x4222a8
  4222c6:	push   ss
  4222c7:	push   edx
  4222c8:	mov    al,ds:0x9f3a68ec
  4222cd:	int3   
  4222ce:	arpl   WORD PTR [ebp+edx*2+0x45],bx
  4222d2:	ss inc esp
  4222d4:	cmp    al,0x9c
  4222d6:	xor    al,0x7e
  4222d8:	cmp    dl,ah
  4222da:	mov    eax,ds:0x581da367
  4222df:	pop    edx
  4222e0:	scas   al,BYTE PTR es:[edi]
  4222e1:	test   al,0xc5
  4222e3:	cwde   
  4222e4:	(bad)  
  4222e5:	enter  0xa93,0xe9
  4222e9:	test   al,0xc5
  4222eb:	mov    BYTE PTR [ebp+ecx*1-0x5017b9db],ah
  4222f2:	out    0xa2,eax
  4222f4:	push   0xb755ac53
  4222f9:	(bad)  [esi-0xa6e9ab2]
  4222ff:	pushf  
  422300:	stos   DWORD PTR es:[edi],eax
  422301:	jno    0x4222bf
  422303:	xchg   ecx,eax
  422304:	pop    ebp
  422305:	imul   edi,ecx,0xffffffb1
  422308:	and    eax,0xca91a08
  42230d:	mov    bh,0x50
  42230f:	retf   
  422310:	lock adc ah,BYTE PTR [edi]
  422313:	sahf   
  422314:	sub    al,0xc3
  422316:	sbb    BYTE PTR [eax+0x70e437dc],cl
  42231c:	xchg   ebx,ebp
  42231e:	lock out 0x4e,eax
  422321:	jmp    0x6ae39323
  422326:	xor    eax,0xc4b39340
  42232b:	int    0x7b
  42232d:	mov    ecx,0xac906fd1
  422332:	imul   esp,ebx,0xffffffaf
  422335:	xchg   DWORD PTR [edi],edi
  422337:	jp     0x422338
  422339:	jb     0x42230e
  42233b:	ja     0x4222cd
  42233d:	push   cs
  42233e:	idiv   dl
  422340:	cdq    
  422341:	jg     0x4222e0
  422343:	and    dh,BYTE PTR ds:0x85e6b8cd
  422349:	mov    bl,0xd
  42234b:	adc    esi,ecx
  42234d:	mov    bh,0xe6
  42234f:	aam    0x9c
  422351:	fisub  WORD PTR [ebx+0x50]
  422354:	and    DWORD PTR ds:0x99af454a,0xffffffbb
  42235b:	mov    ds:0x4b897199,al
  422360:	retf   0x6e8b
  422363:	xor    BYTE PTR [ecx+0x68],cl
  422366:	dec    esp
  422367:	xchg   esi,eax
  422368:	mov    DWORD PTR [edi-0x73d9ec3a],eax
  42236e:	and    al,BYTE PTR [ebx+edx*1]
  422371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422372:	cmc    
  422373:	cmc    
  422374:	add    ebp,eax
  422376:	sub    al,0x8f
  422378:	jns    0x4223d0
  42237a:	mov    al,0x40
  42237c:	dec    edx
  42237d:	pusha  
  42237e:	jle    0x422388
  422380:	push   cs
  422381:	xchg   esp,eax
  422382:	add    BYTE PTR [ebp+0x3],ah
  422385:	je     0x4223ce
  422387:	data16 fs js 0x4223d1
  42238b:	xchg   esp,eax
  42238c:	xchg   edi,eax
  42238d:	gs sub eax,0xe350606f
  422393:	pop    eax
  422394:	mov    esi,0xb48c63fe
  422399:	nop
  42239a:	cmp    DWORD PTR [edx],0x77289663
  4223a0:	xor    dl,al
  4223a2:	xchg   ebx,eax
  4223a3:	pop    ebx
  4223a4:	fwait
  4223a5:	stos   DWORD PTR es:[edi],eax
  4223a6:	lds    edx,FWORD PTR [esp+eiz*2-0x2d]
  4223aa:	iret   
  4223ab:	adc    al,0xd6
  4223ad:	push   ebp
  4223ae:	mov    DWORD PTR [edx],esi
  4223b0:	rol    DWORD PTR [edx-0x65],1
  4223b3:	push   0x318e2e5d
  4223b8:	adc    eax,0x7f49f4f4
  4223bd:	jmp    0x4223a7
  4223bf:	test   eax,0xdb7f59d1
  4223c4:	div    BYTE PTR [edi+ebx*8-0x6b]
  4223c8:	js     0x4223a5
  4223ca:	or     ch,BYTE PTR ds:0x29736a4f
  4223d0:	clc    
  4223d1:	in     al,dx
  4223d2:	das    
  4223d3:	push   0x53
	...
  4223e1:	data16 jl 0x4223c4
  4223e4:	mov    ebx,0xfd7fbffa
  4223e9:	pop    esp
  4223ea:	mov    eax,ds:0x44144f5c
  4223ef:	cmp    ch,BYTE PTR ds:0x19ce9
  4223f5:	lods   al,BYTE PTR ds:[esi]
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    BYTE PTR [edx],ch
  4223fa:	idiv   BYTE PTR [edx+0x49fd6268]
  422400:	jle    0x42244a
  422402:	into   
  422403:	cmp    BYTE PTR [ebp-0x47],0xb7
  422407:	xchg   ecx,eax
  422408:	adc    al,bh
  42240a:	mov    ds:0x302971fb,eax
  42240f:	adc    ch,0xd
  422412:	pop    edi
  422413:	xor    al,0x6f
  422415:	imul   edx,DWORD PTR [edx+0x40],0x88e25aea
  42241c:	mov    bl,0xce
  42241e:	int    0x85
  422420:	and    BYTE PTR [ebp+0x1171c64a],bl
  422426:	daa    
  422427:	mov    dh,0xa4
  422429:	call   DWORD PTR [ebx]
  42242b:	mov    esi,0xff25995c
  422430:	xlat   BYTE PTR ds:[ebx]
  422431:	test   DWORD PTR [ecx+0x62],esp
  422434:	fimul  WORD PTR [esi+edx*1]
  422437:	fs cdq 
  422439:	cmp    al,0xc8
  42243b:	sbb    ah,bl
  42243d:	lds    esp,FWORD PTR [edi+0x59]
  422440:	stos   BYTE PTR es:[edi],al
  422441:	jb     0x4224b0
  422443:	sbb    bl,BYTE PTR [ebp+0xc22dac7]
  422449:	push   esp
  42244a:	(bad)  [ecx+0x6842c6c9]
  422450:	in     eax,0xb7
  422452:	repnz sahf 
  422454:	pop    ss
  422455:	pop    ss
  422456:	pop    ecx
  422457:	pop    DWORD PTR [edx-0xc7cb085]
  42245d:	inc    eax
  42245e:	shl    DWORD PTR fs:[esp+ecx*1],0xe9
  422463:	sub    ebp,DWORD PTR [edi]
  422465:	(bad)  
  422466:	mov    ah,BYTE PTR [edx+0x68]
  422469:	or     ah,BYTE PTR [ebp-0x64113eda]
  42246f:	in     eax,dx
  422470:	adc    ecx,DWORD PTR [ecx+0x1ac4ea0f]
  422476:	adc    BYTE PTR [ebx],ch
  422478:	dec    ebx
  422479:	ss (bad) 
  42247b:	in     eax,dx
  42247c:	stos   DWORD PTR es:[edi],eax
  42247d:	xor    ah,BYTE PTR [esi+0x2]
  422480:	and    ebp,DWORD PTR [ecx-0x6e]
  422483:	ror    ecx,cl
  422485:	ror    BYTE PTR [esi+0x2],1
  422488:	push   esp
  422489:	add    edx,ebp
  42248b:	sbb    DWORD PTR [ebx-0x1f],0xffffff80
  42248f:	jne    0x4224fa
  422491:	push   edi
  422492:	jmp    0x880797ee
  422497:	mov    ds:0xdd4ccc1d,al
  42249c:	stc    
  42249d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42249e:	outs   dx,BYTE PTR ds:[esi]
  42249f:	pop    ds
  4224a0:	jo     0x42250b
  4224a2:	lahf   
  4224a3:	cmp    ch,dh
  4224a5:	push   esi
  4224a6:	pushf  
  4224a7:	pop    es
  4224a8:	mov    al,ds:0xa472dfde
  4224ad:	pop    ebx
  4224ae:	mov    edx,0x4fa3b902
  4224b3:	xor    DWORD PTR [edx],edx
  4224b5:	push   eax
  4224b6:	mov    eax,ds:0xc4ce9211
  4224bb:	push   ss
  4224bc:	fstp   QWORD PTR [ecx]
  4224be:	xchg   BYTE PTR [ebx],ah
  4224c0:	inc    esp
  4224c1:	(bad)  
  4224c2:	iret   
  4224c3:	rcl    DWORD PTR ds:0xf2adef62,1
  4224c9:	pop    ebp
  4224ca:	adc    eax,0x92fc02cc
  4224cf:	stos   DWORD PTR es:[edi],eax
  4224d0:	scas   eax,DWORD PTR es:[edi]
  4224d1:	hlt    
  4224d2:	in     eax,dx
  4224d3:	das    
  4224d4:	scas   al,BYTE PTR es:[edi]
  4224d5:	shl    DWORD PTR [esi-0x47],0x50
  4224d9:	pop    es
  4224da:	retf   0xd430
  4224dd:	adc    esi,DWORD PTR [ecx+0x66]
  4224e0:	push   cs
  4224e1:	scas   eax,DWORD PTR es:[edi]
  4224e2:	shl    DWORD PTR [eax+0x4dc2db1e],0x88
  4224e9:	or     BYTE PTR [esp+ebx*2],al
  4224ec:	push   ss
  4224ed:	std    
  4224ee:	sub    bh,BYTE PTR [ebp+0x66]
  4224f1:	add    eax,0x31fab755
  4224f6:	mov    al,0xea
  4224f8:	ja     0x4224c5
  4224fa:	bound  eax,QWORD PTR [edx+0x44d50a4c]
  422500:	dec    ebx
  422501:	out    0x23,eax
  422503:	stos   DWORD PTR es:[edi],eax
  422504:	or     al,cl
  422506:	(bad)  
  422507:	xchg   esi,eax
  422508:	xor    DWORD PTR [edi-0x3624efea],eax
  42250e:	fwait
  42250f:	xor    edx,DWORD PTR [edx+0x284062ad]
  422515:	enter  0x2936,0x27
  422519:	inc    esp
  42251a:	jge    0x42251a
  42251c:	inc    ecx
  42251d:	add    eax,0xcd814b4b
  422522:	iret   
  422523:	imul   esi,DWORD PTR [ebx-0x15],0xcf5a5142
  42252a:	mov    dh,al
  42252c:	loop   0x422567
  42252e:	ins    BYTE PTR es:[edi],dx
  42252f:	aam    0x8e
  422531:	push   ebx
  422532:	sub    BYTE PTR [edx],dh
  422534:	mov    al,0x96
  422536:	and    al,0x56
  422538:	mov    eax,0x652b3644
  42253d:	sub    al,BYTE PTR [edx]
  42253f:	and    dl,BYTE PTR [esi]
  422541:	xor    al,0x53
  422543:	imul   esi,DWORD PTR [edi],0x2e1f0373
  422549:	(bad)  
  42254a:	jne    0x4225b2
  42254c:	mov    ds:0x161b7dd5,eax
  422551:	loopne 0x4224e7
  422553:	loopne 0x4225d3
  422555:	mov    al,ds:0x7e018b21
  42255a:	cmp    BYTE PTR [eax+0x57],bh
  42255d:	adc    eax,0xf0d8fd5d
  422562:	dec    edi
  422563:	jp     0x422505
  422565:	fwait
  422566:	push   es
  422567:	test   eax,0x50860608
  42256c:	and    BYTE PTR [edx-0x12aee7ff],dh
  422572:	xor    bh,0xe3
  422575:	shl    BYTE PTR [esi+0x18395828],cl
  42257b:	mov    ch,0x84
  42257d:	in     eax,dx
  42257e:	xchg   ecx,eax
  42257f:	jne    0x4225f2
  422581:	mov    WORD PTR [ebp+0x3],?
  422584:	xchg   esp,eax
  422585:	pop    ebx
  422586:	in     al,dx
  422587:	push   ss
  422588:	sbb    DWORD PTR [ecx+eiz*2+0x28b97f12],esp
  42258f:	int3   
  422590:	lods   al,BYTE PTR ds:[esi]
  422591:	pop    es
  422592:	imul   edi,DWORD PTR [eax+0x5e],0xd21aa2dc
  422599:	mov    ch,0x1a
  42259b:	fsubr  st,st(7)
  42259d:	gs push ebp
  42259f:	or     DWORD PTR ds:0x6a1079c1,0x9b28b796
  4225a9:	popa   
  4225aa:	xchg   ebx,eax
  4225ab:	dec    ebp
  4225ac:	mov    eax,0xa9c2a964
  4225b1:	and    BYTE PTR [eax-0x313d418f],bh
  4225b7:	das    
  4225b8:	rcl    DWORD PTR [eax],1
  4225ba:	inc    eax
  4225bb:	push   0xffffff9e
  4225bd:	xchg   esp,eax
  4225be:	jbe    0x42262a
  4225c0:	adc    al,ah
  4225c2:	je     0x42256e
  4225c4:	push   ds
  4225c5:	inc    ecx
  4225c6:	nop
  4225c7:	fadd   DWORD PTR [esi-0x12]
  4225ca:	mov    eax,ds:0xf9e2bbc
  4225cf:	enter  0xa690,0x4f
  4225d3:	jbe    0x4225c6
  4225d5:	jp     0x4225cf
  4225d7:	push   0xb080b3b8
  4225dc:	rol    DWORD PTR [ebx+ecx*2+0x1],0xf2
  4225e1:	mov    ds:0x310cc42f,al
  4225e6:	out    dx,al
  4225e7:	jo     0x4225d4
  4225e9:	or     al,0x71
  4225eb:	fbstp  TBYTE PTR [esp+edi*8-0x10]
  4225ef:	scas   al,BYTE PTR es:[edi]
  4225f0:	push   edi
  4225f1:	fsub   DWORD PTR [ebx-0x772dc038]
  4225f7:	xchg   dh,cl
  4225f9:	mov    esp,0xad04e950
  4225fe:	enter  0xd1d0,0xf6
  422602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422603:	lahf   
  422604:	rcr    DWORD PTR [esi],0xb5
  422607:	adc    DWORD PTR ds:0x2fb818c4,0x74
  42260e:	cwde   
  42260f:	jl     0x4225e0
  422611:	mov    dl,0x4f
  422613:	push   ebp
  422614:	ins    BYTE PTR es:[edi],dx
  422615:	push   es
  422616:	cdq    
  422617:	or     ebx,DWORD PTR [esi]
  422619:	cmp    eax,0x7351ee8f
  42261e:	ja     0x42260c
  422620:	sub    al,BYTE PTR [edi+0xe]
  422623:	mov    cl,bh
  422625:	popa   
  422626:	cmp    bl,BYTE PTR [esi*8-0x73e2f29f]
  42262d:	jno    0x422659
  42262f:	ins    BYTE PTR es:[edi],dx
  422630:	repz (bad) 
  422632:	sahf   
  422633:	push   esp
  422634:	push   cs
  422635:	mov    al,ds:0x3106628c
  42263a:	add    eax,0xf5e26510
  42263f:	mov    ebx,0x25d6ab2d
  422644:	xor    ebx,DWORD PTR [ecx]
  422646:	mov    edi,0x8b2ecc4b
  42264b:	inc    edx
  42264c:	shr    cl,1
  42264e:	sbb    al,0xea
  422650:	sub    esi,edi
  422652:	mov    cl,0x5
  422654:	cmp    bl,cl
  422656:	in     eax,dx
  422657:	dec    eax
  422658:	cmp    DWORD PTR [ecx-0x4d],ebp
  42265b:	pop    ebx
  42265c:	jl     0x4226a6
  42265e:	out    0xac,al
  422660:	and    edi,DWORD PTR [edx+0x747b802]
  422666:	cmp    eax,0xd8e69f09
  42266b:	jmp    0x90d9395b
  422670:	leave  
  422671:	scas   eax,DWORD PTR es:[edi]
  422672:	jne    0x422633
  422674:	(bad)  
  422676:	push   edi
  422677:	sub    eax,0x4b36628c
  42267c:	dec    ecx
  42267d:	pop    eax
  42267e:	lock in al,0x4b
  422681:	add    ah,BYTE PTR [ecx-0x2e083829]
  422687:	popf   
  422688:	and    eax,0x216ca319
  42268d:	and    eax,0xc5cb1575
  422692:	or     esi,DWORD PTR [edi]
  422694:	dec    ebp
  422695:	push   ebp
  422696:	enter  0xff89,0x81
  42269a:	imul   esi,DWORD PTR [esi-0x2d],0x57de7dbe
  4226a1:	add    ch,BYTE PTR [eax]
  4226a3:	mov    dh,0x7f
  4226a5:	cmc    
  4226a6:	ror    BYTE PTR [ebp+0x3e9fc86e],0x82
  4226ad:	(bad)  
  4226ae:	or     ebp,DWORD PTR [esi+0x168c1f91]
  4226b4:	mov    WORD PTR [eax-0x3bc03d03],gs
  4226ba:	std    
  4226bb:	jmp    0x422671
  4226bd:	sti    
  4226be:	push   esi
  4226bf:	cmp    eax,0x2db1f7aa
  4226c4:	sub    al,0x27
  4226c6:	iret   
  4226c7:	call   0x3751:0x3dc7b147
  4226ce:	jmp    FWORD PTR [eax-0x2bd87ddf]
  4226d4:	dec    esi
  4226d5:	ret    
  4226d6:	jmp    0x42270f
  4226d8:	sub    bh,BYTE PTR [esi-0x3468791f]
  4226de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226df:	fistp  DWORD PTR [eax+0x23]
  4226e2:	push   es
  4226e3:	cmp    BYTE PTR ds:0x390cd501,bl
  4226e9:	push   ds
  4226ea:	sbb    ecx,DWORD PTR [ebx+0x18]
  4226ed:	fmul   st(6),st
  4226ef:	dec    ecx
  4226f0:	push   eax
  4226f1:	sub    DWORD PTR [ebx-0x9],esi
  4226f4:	cmp    dl,BYTE PTR [esi-0x23]
  4226f7:	inc    ebx
  4226f8:	push   cs
  4226f9:	xor    DWORD PTR [ecx+0x48bc0257],eax
  4226ff:	ficom  WORD PTR [edi]
  422701:	jne    0x42272c
  422703:	cmp    BYTE PTR [ebx-0x2a5844d6],al
  422709:	inc    ebp
  42270a:	add    ebp,edi
  42270c:	fcom   QWORD PTR [eax-0x40]
  42270f:	lock in al,dx
  422711:	addr16 mov eax,ds:0xe6ed
  422715:	sbb    eax,0xa2988e94
  42271a:	mov    DWORD PTR [esi+0x4a0c9ae9],esi
  422720:	add    DWORD PTR [edi+0x7a],ecx
  422723:	and    bh,cl
  422725:	aam    0x17
  422727:	fcomp  DWORD PTR [ebp+0x248a4778]
  42272d:	mov    edx,0xeaeaeda1
  422732:	xchg   esp,eax
  422733:	sti    
  422734:	nop
  422735:	or     cl,cl
  422737:	cwde   
  422738:	cdq    
  422739:	mov    al,0x8a
  42273b:	scas   eax,DWORD PTR es:[edi]
  42273c:	mov    ah,0x56
  42273e:	lahf   
  42273f:	and    BYTE PTR [eax+ebp*4+0x78],0xe0
  422744:	or     edx,ebx
  422746:	test   BYTE PTR [ecx+edx*1],ah
  422749:	adc    DWORD PTR [ebp-0xf24731e],0x66
  422750:	cmp    eax,0x25dfb43f
  422755:	jno    0x4227ac
  422757:	push   esp
  422758:	add    al,0x9f
  42275a:	pop    ebx
  42275b:	inc    edx
  42275c:	adc    bh,bh
  42275e:	stc    
  42275f:	adc    ebp,0xc48a4f25
  422765:	nop
  422766:	je     0x422755
  422768:	mul    DWORD PTR [esi]
  42276a:	add    ecx,DWORD PTR [ecx]
  42276c:	pop    sp
  42276e:	inc    esi
  42276f:	or     al,0x42
  422771:	push   esp
  422772:	fs clc 
  422774:	inc    edx
  422775:	fldcw  WORD PTR [ebp+0x69]
  422778:	push   ebp
  422779:	jo     0x422758
  42277b:	or     eax,0x3ea37a31
  422780:	or     ch,BYTE PTR [edi-0x53]
  422783:	xchg   edi,eax
  422784:	or     BYTE PTR [edx+0x70d6296a],dh
  42278a:	add    DWORD PTR [edi-0x67f8c9b9],edi
  422790:	out    0xff,eax
  422792:	mov    ah,0x67
  422794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422795:	pushw  es
  422797:	sbb    edi,eax
  422799:	inc    ebx
  42279a:	xchg   edi,eax
  42279b:	jg     0x42278c
  42279d:	sahf   
  42279e:	mov    bl,0xc5
  4227a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a1:	pushf  
  4227a2:	and    ebx,ecx
  4227a4:	bound  eax,QWORD PTR [eax]
	...
  4227ae:	add    BYTE PTR [eax],al
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	mov    eax,0x95fbae80
  4227c2:	mov    al,ds:0x3ac0001
  4227c7:	add    BYTE PTR [eax],al
  4227c9:	inc    ebx
  4227ca:	or     edi,DWORD PTR [ecx+0x6c]
  4227cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ce:	cmp    esi,eax
  4227d0:	sbb    dh,BYTE PTR [eax-0x17]
  4227d3:	sub    dl,BYTE PTR [edi]
  4227d5:	sub    eax,0x9ed5e3c7
  4227da:	in     eax,0xa5
  4227dc:	or     al,0xb
  4227de:	or     BYTE PTR [ebx+0x26],al
  4227e1:	mov    ebx,0xe70a8113
  4227e6:	fwait
  4227e7:	cmp    BYTE PTR [edx+0x3c],bl
  4227ea:	sub    al,0x4c
  4227ec:	pushf  
  4227ed:	cmp    bh,0x6b
  4227f0:	sbb    ebp,DWORD PTR [edi+0x6f]
  4227f3:	mov    ebp,0x1b62710b
  4227f8:	add    eax,0x27ec8b49
  4227fd:	xchg   ecx,eax
  4227fe:	mov    ebx,?
  422800:	in     eax,dx
  422801:	jge    0x4227c6
  422803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422804:	les    edi,FWORD PTR [ecx-0x19d7c833]
  42280a:	imul   eax,DWORD PTR [ebx+0x40c44344],0xa
  422811:	or     DWORD PTR [ebx],esp
  422813:	adc    eax,0xc49a47da
  422818:	(bad)  
  42281a:	pop    esi
  42281b:	xchg   DWORD PTR [edx],ebp
  42281d:	out    0xdd,al
  42281f:	push   ecx
  422820:	lock inc esp
  422822:	fcomp  DWORD PTR [edx+0x11]
  422825:	ror    BYTE PTR [ecx],1
  422827:	lods   al,BYTE PTR ds:[esi]
  422828:	ins    BYTE PTR es:[edi],dx
  422829:	into   
  42282a:	mov    BYTE PTR [ebx],bh
  42282c:	pop    eax
  42282d:	fs pop esp
  42282f:	xchg   ebx,eax
  422831:	cmp    al,0x83
  422833:	add    eax,0x1aa6b62b
  422838:	iret   
  422839:	xor    bh,BYTE PTR [ecx]
  42283b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42283c:	cmp    BYTE PTR [eax+0x7],ah
  42283f:	dec    DWORD PTR [ebx+0x3a]
  422842:	xchg   edi,eax
  422843:	call   0x897bff80
  422848:	and    al,0xd6
  42284a:	sbb    DWORD PTR [ecx+0x2b],esp
  42284d:	ja     0x422869
  42284f:	mov    ebx,0x6adf2e99
  422854:	dec    edi
  422855:	sbb    al,0x81
  422857:	das    
  422858:	inc    edi
  422859:	je     0x42283d
  42285b:	out    0x6d,eax
  42285d:	add    DWORD PTR [ecx+0x567c3982],ecx
  422863:	xchg   BYTE PTR [ebp+0x617b4f2f],bl
  422869:	sub    BYTE PTR [ecx+0x7e],ch
  42286c:	pop    esi
  42286d:	cmp    BYTE PTR [edx-0x67cd78a8],bl
  422873:	add    DWORD PTR [esi+0x7a4eb309],edx
  422879:	pop    edi
  42287a:	mov    ecx,0x736183e2
  42287f:	jns    0x422890
  422881:	push   ecx
  422882:	dec    eax
  422883:	jl     0x42289c
  422885:	iret   
  422886:	aaa    
  422887:	out    dx,al
  422888:	leave  
  422889:	div    BYTE PTR [ebx]
  42288b:	stos   BYTE PTR es:[edi],al
  42288c:	pop    ss
  42288d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42288e:	mov    dh,0x75
  422890:	fisttp WORD PTR [ebx*2+0xd4a7fe7]
  422897:	pop    ds
  422898:	dec    edi
  422899:	sbb    eax,0x1247cf7a
  42289e:	mov    esi,0xb872a8b9
  4228a3:	or     bh,BYTE PTR [ebp-0x5210337d]
  4228a9:	mov    cl,bh
  4228ab:	dec    esp
  4228ac:	push   esi
  4228ad:	mov    al,0x81
  4228af:	imul   BYTE PTR [esi+edx*2-0x53]
  4228b3:	adc    DWORD PTR [esi],0x1a
  4228b6:	rol    DWORD PTR [ebp+0x71],cl
  4228b9:	stc    
  4228ba:	cwde   
  4228bb:	les    eax,FWORD PTR [ebp+0x65]
  4228be:	sbb    ch,bl
  4228c0:	leave  
  4228c1:	ret    
  4228c2:	xor    dl,cl
  4228c4:	loopne 0x4228ae
  4228c6:	jge    0x422923
  4228c8:	jle    0x422935
  4228ca:	push   ebp
  4228cb:	jge    0x4228d9
  4228cd:	mov    esp,DWORD PTR [eax]
  4228cf:	in     al,0xcd
  4228d1:	lahf   
  4228d2:	test   eax,0x751aeab7
  4228d7:	mov    cl,0xf3
  4228d9:	lods   eax,DWORD PTR ds:[esi]
  4228da:	inc    ebx
  4228db:	add    ebx,DWORD PTR [ecx-0x49]
  4228de:	jecxz  0x42290e
  4228e0:	bound  ebx,QWORD PTR [ebp+0x2]
  4228e3:	push   eax
  4228e4:	xlat   BYTE PTR ds:[ebx]
  4228e5:	inc    esi
  4228e6:	and    ecx,ebp
  4228e8:	mov    ebp,0x31def9d9
  4228ed:	adc    dl,BYTE PTR [ebx]
  4228ef:	repnz adc al,BYTE PTR [eax-0x5e]
  4228f3:	and    BYTE PTR [eax],al
  4228f5:	ja     0x42296d
  4228f7:	adc    al,0xe1
  4228f9:	in     eax,0xc1
  4228fb:	dec    edi
  4228fc:	inc    edx
  4228fd:	pop    ecx
  4228fe:	mov    eax,ds:0x1d2f00d0
  422903:	xchg   ebp,eax
  422904:	cmp    BYTE PTR [eax],0x44
  422907:	adc    DWORD PTR [edi+0x6c],esi
  42290a:	and    ch,BYTE PTR [edx+0x3c]
  42290d:	or     DWORD PTR [ebx+0x5c],edx
  422910:	push   es
  422911:	test   ch,al
  422913:	lahf   
  422914:	mov    ?,edi
  422916:	icebp  
  422917:	icebp  
  422918:	in     al,0x92
  42291a:	jno    0x422955
  42291c:	pop    es
  42291d:	adc    BYTE PTR [esi+0x17],dl
  422920:	dec    ebx
  422921:	scas   al,BYTE PTR es:[edi]
  422922:	lds    ecx,FWORD PTR [edx+0x1]
  422925:	int3   
  422926:	call   0x742671a8
  42292b:	pop    eax
  42292c:	sub    ecx,DWORD PTR [esi]
  42292e:	outs   dx,BYTE PTR ds:[esi]
  42292f:	ins    DWORD PTR es:[edi],dx
  422930:	ret    
  422931:	repz push esp
  422933:	cmp    BYTE PTR [ecx-0x55],0xbb
  422937:	mov    bh,0x6
  422939:	push   0x7589a79b
  42293e:	not    BYTE PTR [eax+0x38]
  422941:	inc    edi
  422942:	mov    eax,ds:0x48f48483
  422947:	fldcw  WORD PTR [esi+0x4d6a7d82]
  42294d:	mov    ebx,0xb682b923
  422952:	pop    ss
  422953:	(bad)  
  422954:	loop   0x4229c4
  422956:	mov    bl,0xa2
  422958:	push   0x5f30e63c
  42295d:	inc    ebx
  42295e:	in     al,dx
  42295f:	js     0x422958
  422961:	inc    ecx
  422962:	mov    al,0x35
  422964:	aaa    
  422965:	dec    edi
  422966:	inc    esp
  422967:	ss out dx,al
  422969:	mov    ds:0xe819cc3f,al
  42296e:	cmp    eax,0x731d29a5
  422973:	xchg   ecx,eax
  422974:	jle    0x42295a
  422976:	out    dx,eax
  422977:	lock fsubr st(0),st
  42297a:	mov    ebx,0x67e34620
  42297f:	adc    al,0x28
  422981:	ror    DWORD PTR [ebx-0x27],cl
  422984:	mov    al,ds:0xd6f2bbe0
  422989:	jns    0x42298b
  42298b:	adc    DWORD PTR [ecx],0x13
  42298e:	std    
  42298f:	rcl    esp,0xfe
  422992:	and    al,0x99
  422994:	and    eax,0xf8a93862
  422999:	test   ebp,eax
  42299b:	inc    ecx
  42299c:	jno    0x4229d0
  42299e:	test   eax,ebp
  4229a0:	xchg   ebx,eax
  4229a1:	mov    cl,0x3b
  4229a3:	in     eax,dx
  4229a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229a5:	mov    ebx,0xadf1fcce
  4229aa:	jae    0x4229be
  4229ac:	xchg   esp,eax
  4229ad:	test   DWORD PTR [ebp+0x48],ebp
  4229b0:	div    bh
  4229b2:	pop    ebx
  4229b3:	inc    ebx
  4229b4:	and    BYTE PTR [ebp+0x4de51b62],bh
  4229ba:	and    al,0x33
  4229bc:	mov    edx,ds
  4229be:	sub    bl,ah
  4229c0:	cdq    
  4229c1:	imul   esp,DWORD PTR [edi-0x2b],0xc97c1aa
  4229c8:	adc    eax,0xe0ecaffe
  4229cd:	cs push eax
  4229cf:	push   ebp
  4229d0:	add    BYTE PTR [eax],dh
  4229d2:	xlat   BYTE PTR ds:[ebx]
  4229d3:	repnz xchg ebp,eax
  4229d5:	mov    bh,dh
  4229d7:	ss (bad) gs:[edi]
  4229db:	inc    edi
  4229dc:	bound  ecx,QWORD PTR [ebx]
  4229de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229df:	xor    eax,DWORD PTR [edx]
  4229e1:	jmp    0x422979
  4229e3:	inc    edi
  4229e4:	lods   al,BYTE PTR ds:[esi]
  4229e5:	loop   0x422986
  4229e7:	loope  0x422a1c
  4229e9:	mov    ds:0xe2e8c268,al
  4229ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ef:	cmp    al,BYTE PTR [esi-0x66c4fe70]
  4229f5:	ss mov ebx,0x4309fdf7
  4229fb:	pushf  
  4229fc:	in     ax,0xd6
  4229ff:	(bad)  
  422a00:	pop    edi
  422a01:	rcr    BYTE PTR [ebp-0x31353003],1
  422a07:	mov    ecx,0xf0ce8351
  422a0c:	mov    eax,0xd561a28
  422a11:	sub    edi,DWORD PTR [esi-0x69]
  422a14:	fisttp WORD PTR [esi+0x2e5023de]
  422a1a:	add    BYTE PTR [ebx],0x2d
  422a1d:	mov    DWORD PTR ds:0xa2fb8f0c,edi
  422a23:	dec    ebx
  422a24:	pop    ss
  422a25:	jb     0x422a8d
  422a27:	pop    ebp
  422a28:	mov    bh,0xe7
  422a2a:	shr    BYTE PTR [esi],1
  422a2c:	and    ah,al
  422a2e:	jno    0x4229bd
  422a30:	cli    
  422a31:	stos   BYTE PTR es:[edi],al
  422a32:	popa   
  422a33:	mov    al,0xbe
  422a35:	mov    esi,0x570cf0fd
  422a3a:	cmp    BYTE PTR [ecx-0x70],dl
  422a3d:	mov    ch,0x64
  422a3f:	ins    BYTE PTR es:[edi],dx
  422a40:	loope  0x4229fa
  422a42:	fnstenv [edi-0x3a]
  422a45:	push   DWORD PTR [esi-0x2d]
  422a48:	cli    
  422a49:	fadd   st(7),st
  422a4b:	jae    0x422a9b
  422a4d:	(bad)  
  422a4e:	in     al,0x50
  422a50:	scas   eax,DWORD PTR es:[edi]
  422a51:	fwait
  422a52:	ins    BYTE PTR es:[edi],dx
  422a53:	pop    ds
  422a54:	mov    al,0x8b
  422a56:	xor    al,0xf4
  422a58:	add    eax,0xbb0f7b8
  422a5d:	stc    
  422a5e:	lds    ebp,FWORD PTR [edx-0x3d]
  422a61:	clc    
  422a62:	sub    al,0x8a
  422a64:	dec    esi
  422a65:	sbb    eax,0x4b60648b
  422a6a:	jne    0x422a11
  422a6c:	mov    esp,0x98e328a0
  422a71:	xchg   DWORD PTR [esi],ebp
  422a73:	pop    ss
  422a74:	mov    ecx,0x6aad194b
  422a79:	outs   dx,BYTE PTR ds:[esi]
  422a7a:	pop    esp
  422a7b:	pop    ss
  422a7c:	cmp    BYTE PTR [edi+0x74f9912],dl
  422a82:	inc    ebx
  422a83:	stc    
  422a84:	scas   al,BYTE PTR es:[edi]
  422a85:	ja     0x422a0a
  422a87:	cdq    
  422a88:	outs   dx,BYTE PTR ds:[esi]
  422a89:	sbb    dl,0x7e
  422a8c:	mov    WORD PTR [edi],es
  422a8e:	popf   
  422a8f:	jnp    0x422aff
  422a91:	ficomp WORD PTR [edx+0x23e9b473]
  422a97:	bound  ebx,QWORD PTR [eax]
  422a99:	mov    ch,0xea
  422a9b:	in     al,0x81
  422a9d:	out    0x0,al
  422a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aa0:	gs ds mov ebp,0x8487dfcd
  422aa7:	ret    0xc039
  422aaa:	sub    bl,BYTE PTR [ebp+0x111a2ea8]
  422ab0:	mov    ah,0x76
  422ab2:	adc    DWORD PTR [edi+0x58],0x30
  422ab6:	(bad)  
  422ab7:	dec    esp
  422ab8:	jne    0x422ad7
  422aba:	loop   0x422a90
  422abc:	test   DWORD PTR [edx],edi
  422abe:	or     DWORD PTR [edx+0x1],0x37
  422ac2:	pop    eax
  422ac3:	xchg   ecx,eax
  422ac4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ac6:	xor    dh,BYTE PTR [esi]
  422ac8:	mov    edx,0x9ff3f3cb
  422acd:	push   esi
  422ace:	lods   al,BYTE PTR ds:[esi]
  422acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ad0:	sbb    BYTE PTR [ebx-0x65],ah
  422ad3:	or     BYTE PTR ds:0xee12fce,ch
  422ad9:	mov    al,ds:0xbbfdf5d8
  422ade:	lock push eax
  422ae0:	xor    dh,BYTE PTR [esi]
  422ae2:	arpl   WORD PTR [eax+0x75],si
  422ae5:	test   DWORD PTR [esi+0x33],ebp
  422ae8:	push   0x5a
  422aea:	ins    BYTE PTR es:[edi],dx
  422aeb:	jmp    0x422ae8
  422aed:	push   ebx
  422aee:	push   ebx
  422aef:	sbb    al,0x34
  422af1:	mov    cl,0x26
  422af3:	out    dx,al
  422af4:	jne    0x422af6
  422af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af7:	xchg   DWORD PTR [ecx+0x16],ebp
  422afa:	jb     0x422b69
  422afc:	repnz adc ch,bh
  422aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b00:	fs in  al,dx
  422b02:	adc    ch,bh
  422b04:	mov    DWORD PTR [esi-0x2d92ee5],esi
  422b0a:	pushf  
  422b0b:	push   0x62c66f41
  422b10:	icebp  
  422b11:	dec    esp
  422b12:	mov    WORD PTR [ecx+eax*2-0x575c2cdf],?
  422b19:	add    BYTE PTR [eax-0x5d],dh
  422b1c:	fcom   QWORD PTR [ebx]
  422b1e:	sbb    eax,0xfc5db610
  422b23:	or     al,0xd5
  422b25:	or     eax,ebp
  422b27:	push   DWORD PTR ds:0x4bd1a209
  422b2d:	fadd   DWORD PTR [ebp-0xbd4166f]
  422b33:	mov    gs,WORD PTR [ebp+0x61dab8f8]
  422b39:	je     0x422b27
  422b3b:	xor    BYTE PTR [ecx+0x5f],ch
  422b3e:	stos   DWORD PTR es:[edi],eax
  422b3f:	mov    ds:0x6675e48f,eax
  422b44:	in     al,dx
  422b45:	sbb    ah,al
  422b47:	into   
  422b48:	cmp    al,0xff
  422b4a:	das    
  422b4b:	or     bl,cl
  422b4d:	(bad)  
  422b4e:	fnstsw WORD PTR [edx-0xc7e27f]
  422b54:	ins    DWORD PTR es:[edi],dx
  422b55:	xchg   edi,eax
  422b56:	(bad)  
  422b57:	ja     0x422b7a
  422b59:	leave  
  422b5a:	dec    ebp
  422b5b:	loop   0x422ba2
  422b5d:	sub    eax,0xd4ef6990
  422b62:	push   esi
  422b63:	int3   
  422b64:	push   ss
  422b65:	xor    DWORD PTR [ecx],ebp
  422b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b68:	out    dx,eax
  422b69:	or     DWORD PTR [ebp+0x2d],0x3c
  422b6d:	or     eax,0x90bfc2a
  422b72:	push   ecx
  422b73:	out    dx,eax
  422b74:	xor    eax,0x0
	...
  422b81:	mov    al,ds:0xbc09b42c
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    dh,BYTE PTR [edi+0x41845ac4]
  422b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	add    DWORD PTR [eax],eax
  422b95:	lods   al,BYTE PTR ds:[esi]
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR [ecx+0x44ead72d],bl
  422b9e:	iret   
  422b9f:	rcl    bl,0x2f
  422ba2:	fisubr WORD PTR [ebp+esi*1+0x22]
  422ba6:	mov    eax,ds:0xed6be7e0
  422bab:	shr    BYTE PTR [edx+0x19867cc8],0xc3
  422bb2:	mov    edi,eax
  422bb4:	xchg   ecx,edi
  422bb6:	(bad)  
  422bb7:	outs   dx,BYTE PTR ds:[si]
  422bb9:	dec    edx
  422bba:	ficomp DWORD PTR es:[bp-0x2a]
  422bbf:	adc    BYTE PTR [eax-0x2d],ah
  422bc2:	adc    eax,0x6029fa1
  422bc7:	xor    BYTE PTR [ebx],dh
  422bc9:	xor    BYTE PTR [eax-0x459d89e],al
  422bcf:	jno    0x422bef
  422bd1:	lock enter 0xd88c,0xd0
  422bd6:	pushf  
  422bd7:	sbb    DWORD PTR [esi+esi*8-0x300b0c4f],edx
  422bde:	xchg   DWORD PTR [ebp-0x61],esp
  422be1:	xchg   ecx,eax
  422be2:	sub    DWORD PTR [ecx-0x5ff921b2],edi
  422be8:	dec    ebp
  422be9:	(bad)  
  422bea:	fcomp  QWORD PTR ds:0xbd6fe66d
  422bf0:	lock jb 0x422c03
  422bf3:	dec    ebp
  422bf4:	nop
  422bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bf6:	jecxz  0x422bfa
  422bf8:	clc    
  422bf9:	hlt    
  422bfa:	jns    0x422c3c
  422bfc:	cmp    DWORD PTR [edx+0x46],0xfffffff8
  422c00:	push   eax
  422c01:	cmp    edi,DWORD PTR [ecx-0x23149435]
  422c07:	(bad)  [ecx+0x27]
  422c0a:	add    eax,edi
  422c0c:	(bad)  
  422c0d:	fidiv  WORD PTR [esi]
  422c0f:	and    DWORD PTR [edi],esp
  422c11:	jl     0x422c30
  422c13:	and    dl,bh
  422c15:	loop   0x422bc0
  422c17:	and    esi,ebx
  422c19:	add    eax,0xea77eeef
  422c1e:	les    eax,FWORD PTR [edx-0x7a]
  422c21:	sub    BYTE PTR [ebx-0x5e7b59e8],al
  422c27:	mov    edx,esi
  422c29:	push   edi
  422c2a:	inc    edi
  422c2b:	out    dx,al
  422c2c:	xor    ebp,0x4a9648f0
  422c32:	in     eax,dx
  422c33:	cmp    DWORD PTR [edx+0x6a6477f7],edi
  422c39:	mov    dh,0x8f
  422c3b:	and    eax,DWORD PTR [edi-0x31]
  422c3e:	not    DWORD PTR [edx]
  422c40:	xchg   edx,eax
  422c41:	aad    0x5a
  422c43:	add    eax,edi
  422c45:	dec    ebx
  422c46:	inc    ebx
  422c47:	sbb    al,0x23
  422c49:	imul   BYTE PTR [ebx+0x36]
  422c4c:	inc    edi
  422c4d:	enter  0x3d32,0xd5
  422c51:	int3   
  422c52:	sbb    eax,0x34601d57
  422c57:	pop    ebp
  422c58:	(bad)  
  422c59:	ror    BYTE PTR [ecx+0x6f4f0c2a],1
  422c5f:	mov    edx,0x1d7facac
  422c64:	mov    eax,0xffc54eb6
  422c69:	cmc    
  422c6a:	pop    ss
  422c6b:	mov    ds:0xa8119068,eax
  422c70:	push   es
  422c71:	pop    eax
  422c72:	jp     0x422cb1
  422c74:	cmp    ch,BYTE PTR [edx+0x52]
  422c77:	mov    ch,0x9a
  422c79:	retf   0xbfc
  422c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c7d:	mov    ah,0x99
  422c7f:	mov    edx,0xde8aa650
  422c84:	xor    al,0xdb
  422c86:	(bad)  
  422c87:	or     ecx,DWORD PTR [eax+ebp*2-0x60]
  422c8b:	push   ebp
  422c8c:	inc    ebx
  422c8d:	jmp    0x3195:0xc9ae188d
  422c94:	jno    0x422cb4
  422c96:	shl    dl,0x33
  422c99:	sbb    DWORD PTR [ecx+0x6ccdb4cc],edx
  422c9f:	xor    cl,BYTE PTR [esi]
  422ca1:	and    al,BYTE PTR [ebx]
  422ca3:	jnp    0x422d22
  422ca5:	scas   al,BYTE PTR es:[edi]
  422ca6:	mov    cl,0x5b
  422ca8:	rcl    DWORD PTR [edi+0x2e],0xb4
  422cac:	shr    DWORD PTR [ebp-0x1e7de2a5],cl
  422cb2:	cdq    
  422cb3:	arpl   WORD PTR [esi],bp
  422cb5:	mov    ch,0x18
  422cb7:	retf   
  422cb8:	add    BYTE PTR [ecx+ebx*1-0x931964e],cl
  422cbf:	adc    ebx,DWORD PTR [ecx]
  422cc1:	mov    dl,0xfc
  422cc3:	cs (bad) 
  422cc5:	shr    DWORD PTR [edx-0x2e39e527],0xf5
  422ccc:	call   0xa398e59f
  422cd1:	inc    edx
  422cd2:	aam    0xbe
  422cd4:	pop    ebx
  422cd5:	add    al,0x4e
  422cd7:	xchg   ebp,eax
  422cd8:	push   ebp
  422cd9:	or     dh,BYTE PTR [ebp-0x3819a471]
  422cdf:	loop   0x422cc9
  422ce1:	fild   QWORD PTR [edx-0x6bf3c168]
  422ce7:	jecxz  0x422c95
  422ce9:	push   esi
  422cea:	mov    WORD PTR [ebx+0x235a020a],ds
  422cf0:	fstp   st(6)
  422cf2:	mul    dh
  422cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf5:	sar    DWORD PTR [ebp+0x4a],cl
  422cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf9:	es jae 0x422ceb
  422cfc:	lds    eax,FWORD PTR [eax-0x13cc666f]
  422d02:	(bad)  
  422d03:	cld    
  422d04:	xor    DWORD PTR [eax],0x17
  422d07:	mov    dh,0xcf
  422d09:	add    BYTE PTR [ebp+ecx*2+0x5d],dh
  422d0d:	iret   
  422d0e:	rcl    BYTE PTR [eax+0x64],cl
  422d11:	adc    eax,DWORD PTR [edi+0x764e99b0]
  422d17:	jne    0x422d64
  422d19:	and    ebp,DWORD PTR [ebx]
  422d1b:	add    bl,BYTE PTR [edi+0x1f]
  422d1e:	pop    ss
  422d1f:	jmp    0x6b73:0xab4ecb52
  422d26:	mov    cs,WORD PTR [edx+0x6caba32b]
  422d2c:	sbb    dh,BYTE PTR [esp+edx*8-0x22102f]
  422d33:	bound  edx,QWORD PTR [esi-0x76]
  422d36:	mov    ebx,DWORD PTR ds:0x1bde20d7
  422d3c:	setns  cl
  422d3f:	jns    0x422ccb
  422d41:	ds pop ss
  422d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d44:	or     BYTE PTR [ecx-0x11],dl
  422d47:	loop   0x422d21
  422d49:	dec    edx
  422d4a:	jg     0x422d61
  422d4c:	inc    ecx
  422d4d:	dec    ecx
  422d4e:	repnz add al,0xe7
  422d51:	push   es
  422d52:	and    BYTE PTR [esi+0x60],dh
  422d55:	xchg   ecx,eax
  422d56:	or     esi,DWORD PTR [eax-0x71a0520b]
  422d5c:	sub    BYTE PTR [esi+0x4a96d3a5],0x7e
  422d63:	(bad)  
  422d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d65:	sbb    eax,0x27ea72a5
  422d6a:	pop    eax
  422d6b:	dec    ecx
  422d6c:	ins    BYTE PTR es:[edi],dx
  422d6d:	addr16 into 
  422d6f:	or     BYTE PTR [ebx+eiz*1],cl
  422d72:	les    esp,FWORD PTR [edx+0xd66ac5c]
  422d78:	pusha  
  422d79:	test   DWORD PTR [edx],0x9ecc908c
  422d7f:	ins    DWORD PTR es:[edi],dx
  422d80:	sbb    al,0x39
  422d82:	xchg   esp,eax
  422d83:	mov    ds:0xee444fa8,al
  422d88:	cld    
  422d89:	push   edi
  422d8a:	lods   eax,DWORD PTR ds:[esi]
  422d8b:	xchg   edx,eax
  422d8c:	xchg   edi,eax
  422d8d:	imul   BYTE PTR [edx+ebx*2+0x5bc9840d]
  422d94:	test   esi,edi
  422d96:	adc    DWORD PTR [ebp+ebp*8-0x12644f2a],eax
  422d9d:	or     BYTE PTR [esi],dl
  422d9f:	adc    ch,BYTE PTR [ebx]
  422da1:	in     eax,0xb9
  422da3:	(bad)  
  422da4:	enter  0xdf3,0x9b
  422da8:	mov    edx,0xc47e5cf3
  422dad:	call   0xf5f14518
  422db2:	loopne 0x422e1e
  422db4:	cvtpi2ps xmm0,mm6
  422db7:	xor    cx,dx
  422dba:	enter  0x7e95,0x6e
  422dbe:	stc    
  422dbf:	pop    ss
  422dc0:	and    dl,bh
  422dc2:	aad    0xf5
  422dc4:	jno    0x422d68
  422dc6:	popf   
  422dc7:	ror    DWORD PTR [esp+eax*1-0x6ddaf35d],0x81
  422dcf:	jg     0x422d7d
  422dd1:	add    ecx,DWORD PTR [ecx+eiz*1+0x1b41784]
  422dd8:	add    eax,0xdc750d99
  422ddd:	mov    esp,0x239d508
  422de2:	sbb    ah,0xea
  422de5:	adc    BYTE PTR [esi+ebx*2],al
  422de8:	or     al,0xf7
  422dea:	push   esi
  422deb:	shl    esi,0x88
  422dee:	addr16 push cs
  422df0:	retf   
  422df1:	dec    esi
  422df2:	jb     0x422dc0
  422df4:	ja     0x422dcf
  422df6:	mov    WORD PTR [ecx+esi*8],?
  422df9:	dec    eax
  422dfa:	icebp  
  422dfb:	test   eax,0x9b83f989
  422e00:	ror    DWORD PTR [ebx-0x49],cl
  422e03:	push   ebx
  422e04:	inc    edx
  422e05:	inc    edi
  422e06:	popf   
  422e07:	dec    edx
  422e08:	add    BYTE PTR [esi+0x7bb3a828],ch
  422e0e:	jl     0x422e2d
  422e10:	push   esi
  422e11:	xor    bh,BYTE PTR [ecx]
  422e13:	(bad)  
  422e14:	xlat   BYTE PTR ds:[ebx]
  422e15:	jge    0x422e3a
  422e17:	mov    cl,0xfc
  422e19:	push   ecx
  422e1a:	cmp    esp,DWORD PTR [eax]
  422e1c:	cmc    
  422e1d:	inc    esi
  422e1e:	test   BYTE PTR [edi+eax*2],cl
  422e21:	xchg   ecx,eax
  422e22:	lods   al,BYTE PTR ds:[esi]
  422e23:	mov    ebp,0x3850cd80
  422e28:	call   0x71d5c3e1
  422e2d:	les    ecx,FWORD PTR [eax-0x595952ec]
  422e33:	ss adc al,0x26
  422e36:	push   esp
  422e37:	push   es
  422e38:	xor    edi,edi
  422e3a:	aad    0xd1
  422e3c:	(bad)
  422e41:	xchg   edx,eax
  422e42:	xchg   edx,eax
  422e43:	ss inc ecx
  422e45:	xchg   esi,eax
  422e46:	mov    DWORD PTR [ebp+0x64],ebp
  422e49:	mov    esi,esi
  422e4b:	lods   al,BYTE PTR ds:[esi]
  422e4c:	dec    edi
  422e4d:	test   BYTE PTR [edx],0xdd
  422e50:	jne    0x422e43
  422e52:	lahf   
  422e53:	xor    BYTE PTR ds:0xae0a965c,ch
  422e59:	cmp    al,0x35
  422e5b:	pop    es
  422e5c:	repnz mov bh,0xbf
  422e5f:	shl    BYTE PTR [edi-0x20],cl
  422e62:	aam    0x6e
  422e64:	inc    esi
  422e65:	xchg   esi,eax
  422e66:	jbe    0x422e11
  422e68:	stc    
  422e69:	jl     0x422e6a
  422e6b:	mov    ecx,0xa253981b
  422e70:	pop    edx
  422e71:	or     bh,BYTE PTR [ecx+eax*4+0x65]
  422e75:	xchg   ebp,eax
  422e76:	data16 jecxz 0x422e1f
  422e79:	xor    cl,BYTE PTR [ebx-0x600fb011]
  422e7f:	sti    
  422e80:	mov    cl,0x5a
  422e82:	mov    ah,0xb8
  422e84:	inc    esp
  422e85:	add    eax,0xfe9b5464
  422e8a:	fdivr  st,st(2)
  422e8c:	pushf  
  422e8d:	imul   esi,ebx,0xffffffb8
  422e90:	gs inc ebp
  422e92:	mov    al,ds:0x930b09d4
  422e97:	test   al,0x2d
  422e99:	and    eax,0x96706810
  422e9e:	mov    eax,ds:0xb76476ed
  422ea3:	stos   DWORD PTR es:[edi],eax
  422ea4:	outs   dx,BYTE PTR ds:[esi]
  422ea5:	ss js  0x422ee1
  422ea8:	mov    eax,ds:0xfa82153d
  422ead:	adc    edx,DWORD PTR [ecx+edi*4-0x21]
  422eb1:	inc    eax
  422eb2:	lock cmp esi,DWORD PTR [ebx+0x54]
  422eb6:	fistp  DWORD PTR [eax-0x2bca85f2]
  422ebc:	push   esp
  422ebd:	mov    eax,0x568252e7
  422ec2:	ds clc 
  422ec4:	pop    esi
  422ec5:	push   ebx
  422ec6:	call   0x9e97c704
  422ecb:	jae    0x422ea0
  422ecd:	repz sahf 
  422ecf:	and    ch,ah
  422ed1:	in     eax,0xdf
  422ed3:	loop   0x422ed6
  422ed5:	mov    dl,0xd7
  422ed7:	(bad)  
  422ed8:	mov    esi,0x79948010
  422edd:	lds    esi,FWORD PTR [eax-0x7ec23003]
  422ee3:	inc    esi
  422ee4:	div    BYTE PTR [eax]
  422ee6:	push   esi
  422ee7:	rcr    DWORD PTR [edi+ebx*1-0x44],1
  422eeb:	ja     0x422ec0
  422eed:	sbb    ebp,eax
  422eef:	xchg   dl,bh
  422ef1:	sbb    DWORD PTR [ebx+0x5b],eax
  422ef4:	jno    0x422efd
  422ef6:	xor    BYTE PTR [edx+esi*4],bl
  422ef9:	mov    ch,0x75
  422efb:	cli    
  422efc:	in     al,0x70
  422efe:	mov    ds:0x864bfd8b,eax
  422f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f04:	lds    edi,FWORD PTR [eax-0x1a55fc7c]
  422f0a:	call   0x29f8bf4d
  422f0f:	mov    WORD PTR [ecx],gs
  422f11:	jmp    0x422edc
  422f13:	into   
  422f14:	cwde   
  422f15:	test   al,0xa1
  422f17:	push   es
  422f18:	ins    BYTE PTR es:[edi],dx
  422f19:	jmp    0x422f5e
  422f1b:	fwait
  422f1c:	add    ch,BYTE PTR [edx-0x690459a8]
  422f22:	popa   
  422f23:	mov    bl,0x8c
  422f25:	les    esi,FWORD PTR [ebx-0x4835cc37]
  422f2b:	cmp    bh,BYTE PTR [ebx+0x74696066]
  422f31:	and    al,BYTE PTR [edx-0x20]
  422f34:	push   es
  422f35:	jl     0x422f9d
  422f37:	inc    ebx
  422f38:	gs dec eax
  422f3a:	push   eax
  422f3b:	sub    ch,cl
  422f3d:	shl    bh,0x8e
  422f40:	(bad)  
  422f41:	pusha  
  422f42:	int3   
  422f43:	sbb    DWORD PTR [eax+eax*1+0x0],ebx
  422f4a:	add    BYTE PTR [eax],al
  422f4c:	add    BYTE PTR [eax],al
  422f4e:	add    BYTE PTR [eax],al
  422f50:	add    BYTE PTR [edx],al
  422f52:	xor    ecx,DWORD PTR [ebx-0x4c4744c8]
  422f58:	cmp    esi,DWORD PTR [esi-0x8481422]
  422f5e:	shl    DWORD PTR [esi+0x1a7edca],cl
  422f64:	add    BYTE PTR [ebx+eax*1+0x5da70000],ch
  422f6b:	rol    DWORD PTR [ebx],1
  422f6d:	mov    eax,0x12cf1531
  422f72:	repnz push edi
  422f74:	xchg   DWORD PTR [esi+0x8],ebx
  422f77:	or     al,BYTE PTR [ebx]
  422f79:	mov    al,ds:0xadd657f2
  422f7e:	mov    esi,0xa15c1707
  422f83:	mov    ds:0x2f1637fa,al
  422f88:	xchg   ebp,eax
  422f89:	ja     0x422fae
  422f8b:	(bad)
  422f8e:	ja     0x422f21
  422f90:	cdq    
  422f91:	fdivr  QWORD PTR [ecx+0x68]
  422f94:	push   edx
  422f95:	dec    ebp
  422f96:	mov    ch,0x3
  422f98:	sub    eax,DWORD PTR [edi-0x50]
  422f9b:	sub    ah,bl
  422f9d:	push   cs
  422f9e:	cmp    eax,0xa61df1a5
  422fa3:	cmp    al,0x80
  422fa5:	addr16 pop ss
  422fa7:	sahf   
  422fa8:	mov    ds:0x59ac0e36,eax
  422fad:	scas   al,BYTE PTR es:[edi]
  422fae:	lds    ebx,FWORD PTR [esi-0x61]
  422fb1:	pop    edi
  422fb2:	xchg   DWORD PTR [esi+eiz*4-0x657f9c60],esp
  422fb9:	mov    ch,0x31
  422fbb:	or     eax,0x54a3c03a
  422fc0:	test   DWORD PTR [ecx-0x2e52cbd8],esi
  422fc6:	sub    edi,DWORD PTR [esi-0x49]
  422fc9:	push   eax
  422fca:	cdq    
  422fcb:	daa    
  422fcc:	cmp    DWORD PTR [ebx],esp
  422fce:	jge    0x422ff1
  422fd0:	adc    eax,0xe997372f
  422fd5:	je     0x422f96
  422fd7:	stc    
  422fd8:	xchg   ebx,eax
  422fd9:	(bad)  
  422fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdc:	hlt    
  422fdd:	or     al,0xb
  422fdf:	jge    0x422f80
  422fe1:	mov    ds:0xecd01e9f,eax
  422fe6:	jmp    0x7f66f883
  422feb:	mov    ds:0x85790db5,eax
  422ff0:	sbb    DWORD PTR [edi-0x14],ebp
  422ff3:	xlat   BYTE PTR cs:[ebx]
  422ff5:	inc    esp
  422ff6:	dec    edi
  422ff7:	outs   dx,DWORD PTR ds:[esi]
  422ff8:	(bad)  
  422ffa:	inc    esp
  422ffb:	pusha  
  422ffc:	cmp    BYTE PTR [ebp+0x65e5bf4d],ch
  423002:	sub    bl,BYTE PTR [esi+0x65]
  423005:	sbb    BYTE PTR [ecx-0x3bd3abd6],0x81
  42300c:	icebp  
  42300d:	int3   
  42300e:	mov    ebx,0xa8f146ff
  423013:	inc    esp
  423014:	jmp    0x3f28:0x365e3b
  42301b:	stc    
  42301c:	std    
  42301d:	inc    edx
  42301e:	xchg   ebx,eax
  42301f:	call   0x16fc74b8
  423024:	jb     0x423027
  423026:	and    DWORD PTR [ebp+0x4dd0813],edi
  42302c:	sub    eax,0x619198ba
  423031:	mov    eax,0x63edb466
  423036:	sar    ch,1
  423038:	mov    WORD PTR [ebx-0x288d6fc4],cs
  42303e:	lods   al,BYTE PTR ds:[esi]
  42303f:	xchg   edx,eax
  423040:	lahf   
  423041:	out    0x52,al
  423043:	push   esp
  423044:	mov    fs,esi
  423046:	cmp    BYTE PTR [edx],0xe0
  423049:	sub    ebx,DWORD PTR [esp+ebp*2+0x26]
  42304d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42304e:	pop    ss
  42304f:	xchg   BYTE PTR [esi],ah
  423051:	mov    bh,0x74
  423053:	gs iret 
  423055:	les    esi,FWORD PTR [ecx]
  423057:	push   eax
  423058:	add    edx,DWORD PTR [ecx+ebp*1]
  42305b:	idiv   BYTE PTR [ecx-0x1e3cbae5]
  423061:	dec    eax
  423062:	(bad)  
  423063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423064:	mov    ebx,0x881a0cb5
  423069:	mov    eax,ds:0x9193df5f
  42306e:	mov    ebx,0xbc6623ea
  423073:	pop    edx
  423074:	mov    edi,0x5dcbbf40
  423079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42307a:	pop    esp
  42307b:	ins    DWORD PTR es:[edi],dx
  42307c:	int3   
  42307d:	imul   ecx,esp,0x22c248a
  423083:	xchg   al,dh
  423085:	sbb    eax,0x69b731f3
  42308a:	inc    ecx
  42308b:	dec    esp
  42308c:	repnz pop edx
  42308e:	aam    0x20
  423090:	pop    edx
  423091:	shr    DWORD PTR [ebp-0x7137811a],cl
  423097:	dec    edi
  423098:	push   ss
  423099:	inc    ecx
  42309a:	dec    ebx
  42309b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42309c:	daa    
  42309d:	xchg   BYTE PTR [edx+0x69],ah
  4230a0:	sub    DWORD PTR [edx-0x5e82b235],0xffffff82
  4230a7:	inc    esi
  4230a8:	in     al,0x73
  4230aa:	mov    eax,ds:0x37730f79
  4230af:	ds xor eax,ebp
  4230b2:	ins    DWORD PTR es:[edi],dx
  4230b3:	(bad)  
  4230b4:	sti    
  4230b5:	cmp    dl,0x15
  4230b8:	mov    eax,0x2b63b445
  4230bd:	sub    DWORD PTR [esi+edi*1+0x72],0x21
  4230c2:	push   cs
  4230c3:	push   ecx
  4230c4:	fistp  DWORD PTR [edi]
  4230c6:	clc    
  4230c7:	pop    eax
  4230c8:	push   ebx
  4230c9:	jb     0x423068
  4230cb:	imul   ecx,DWORD PTR [esi],0x2e6a0002
  4230d1:	jcxz   0x4230c5
  4230d4:	call   0xe9d9:0xe9118b23
  4230db:	mov    edx,0xc5207c7b
  4230e0:	pop    es
  4230e1:	push   es
  4230e2:	adc    esi,edi
  4230e4:	ret    
  4230e5:	add    bh,BYTE PTR [edi+0x69]
  4230e8:	ret    0x9d53
  4230eb:	ds in  eax,0x15
  4230ee:	pusha  
  4230ef:	(bad)  
  4230f0:	cmp    DWORD PTR [eiz*2+0x44999fff],esi
  4230f7:	or     esp,DWORD PTR [esi-0x5d]
  4230fa:	pop    esi
  4230fb:	jae    0x423112
  4230fd:	(bad)  
  4230fe:	sbb    DWORD PTR [ebp+0x1bbeb9ab],eax
  423104:	sub    bl,BYTE PTR [ecx-0x443bfe04]
  42310a:	mov    al,0xaa
  42310c:	(bad)  
  42310d:	ja     0x4230ef
  42310f:	jecxz  0x4230be
  423111:	xor    ebx,DWORD PTR [eax]
  423113:	sar    DWORD PTR [eax-0x891eb65],0x4
  42311a:	fadd   DWORD PTR [edx-0x1e]
  42311d:	cmp    esi,DWORD PTR [ebp-0x3e72bb6f]
  423123:	mov    edi,0x542aa410
  423128:	mov    ds:0x4955ce4b,eax
  42312d:	aas    
  42312e:	and    DWORD PTR [ebp-0x1b],eax
  423131:	jmp    DWORD PTR [ebx]
  423133:	(bad)  
  423134:	test   eax,0x6f05423b
  423139:	leave  
  42313a:	fsub   QWORD PTR [ecx-0x5f]
  42313d:	add    BYTE PTR [edx+eax*4-0x5],bl
  423141:	sar    edx,cl
  423143:	mov    edi,0xcda2f19
  423148:	or     ebx,0xdecfaab0
  42314e:	xchg   ebp,eax
  42314f:	in     al,dx
  423150:	mov    esi,DWORD PTR [eax+0x38660717]
  423156:	into   
  423157:	add    eax,0xa36160d3
  42315c:	ror    DWORD PTR [ebx-0x2a],1
  42315f:	dec    esp
  423160:	add    DWORD PTR [ecx-0x1de8418f],ecx
  423166:	hlt    
  423167:	ss stos DWORD PTR es:[edi],eax
  423169:	mov    dl,0x67
  42316b:	xchg   DWORD PTR [ecx-0x62],ebx
  42316e:	arpl   bp,sp
  423170:	push   edx
  423171:	test   al,0xdd
  423173:	inc    edi
  423174:	dec    esi
  423175:	call   0x7d167b0b
  42317a:	(bad)  
  42317b:	sbb    al,0xb0
  42317d:	sub    edx,edi
  42317f:	es or  edi,ebp
  423182:	xchg   ebx,eax
  423183:	mov    dh,0x9f
  423185:	hlt    
  423186:	imul   edx,edi,0xffffffc0
  423189:	inc    ebp
  42318a:	adc    esp,DWORD PTR [edi+eax*1+0x75]
  42318e:	mov    edx,0xbc255187
  423193:	jle    0x42315b
  423195:	push   esp
  423196:	inc    edi
  423197:	xor    DWORD PTR [eax+0x38],ecx
  42319a:	cli    
  42319b:	jmp    0x4231c0
  42319d:	or     BYTE PTR [ebx-0x14],bl
  4231a0:	adc    DWORD PTR [ebx+0x3f5d77d8],esi
  4231a6:	xchg   ebx,eax
  4231a7:	scas   al,BYTE PTR es:[edi]
  4231a8:	test   BYTE PTR [edx],0xda
  4231ab:	icebp  
  4231ac:	push   ds
  4231ad:	adc    ah,BYTE PTR [eax-0x5737d1de]
  4231b3:	dec    edx
  4231b4:	xor    BYTE PTR [ecx-0x23d30577],dh
  4231ba:	xchg   DWORD PTR [ebx+ecx*4-0x7df3270c],edi
  4231c1:	lds    edi,FWORD PTR [ebx-0x71]
  4231c4:	lods   al,BYTE PTR ds:[esi]
  4231c5:	rcl    BYTE PTR [ebx],1
  4231c7:	es sahf 
  4231c9:	xchg   ecx,eax
  4231ca:	mov    ch,BYTE PTR [ebx-0x521ca54b]
  4231d0:	retf   0xe9a6
  4231d3:	jno    0x42317a
  4231d5:	ret    
  4231d6:	gs xchg bh,bh
  4231d9:	jecxz  0x4231b5
  4231db:	scas   eax,DWORD PTR es:[edi]
  4231dc:	or     al,0xbe
  4231de:	div    DWORD PTR [eax-0x46994c99]
  4231e4:	(bad)  
  4231e5:	sub    BYTE PTR [ecx],dl
  4231e7:	push   ds
  4231e8:	(bad)  
  4231e9:	cmp    BYTE PTR [edi-0x2a],ch
  4231ec:	sub    BYTE PTR ds:0x9b5d3ecf,0xc8
  4231f3:	dec    edx
  4231f4:	push   cs
  4231f5:	cmp    edx,DWORD PTR [edi]
  4231f7:	test   al,0x63
  4231f9:	mov    WORD PTR [ebx-0x5a],ds
  4231fc:	out    dx,al
  4231fd:	adc    al,0xec
  4231ff:	and    eax,0x36e62ab6
  423204:	pop    ss
  423205:	div    DWORD PTR [edi]
  423207:	daa    
  423208:	daa    
  423209:	and    bl,bh
  42320b:	dec    edi
  42320c:	sub    eax,0xe8c91750
  423211:	idiv   DWORD PTR [esi-0x74]
  423214:	xor    ah,BYTE PTR [ecx-0x39]
  423217:	inc    ecx
  423218:	shr    DWORD PTR [ebp+0x68c64f43],cl
  42321e:	icebp  
  42321f:	mov    eax,ds:0x59c1e882
  423224:	pop    esp
  423225:	test   DWORD PTR [edx],ebp
  423227:	jmp    0xcda9:0x73f8d8e0
  42322e:	pop    esi
  42322f:	xchg   ecx,eax
  423230:	fwait
  423231:	inc    edi
  423232:	fwait
  423233:	mov    ebx,0xa5a59b33
  423238:	inc    esp
  423239:	fistp  WORD PTR [ecx]
  42323b:	add    BYTE PTR [edi+0x68ab7148],dl
  423241:	(bad)  
  423242:	ins    DWORD PTR es:[edi],dx
  423243:	and    al,0x1f
  423245:	xor    BYTE PTR ds:0x84db06f3,dl
  42324c:	xor    eax,0x7fd14629
  423251:	adc    edi,DWORD PTR [ebx]
  423253:	(bad)  
  423255:	out    0xb6,eax
  423257:	mov    cl,dh
  423259:	mov    BYTE PTR [eax-0x6ad4320a],bh
  42325f:	mov    edi,0xb346feb5
  423264:	cwde   
  423265:	add    al,0xa8
  423267:	mov    DWORD PTR [ebp+0x2bb388e7],ecx
  42326d:	int3   
  42326e:	hlt    
  42326f:	dec    ecx
  423270:	jp     0x423220
  423272:	and    al,0xee
  423274:	push   0x39ce82a1
  423279:	dec    ebp
  42327a:	adc    DWORD PTR [ecx+edx*1-0x58],ebx
  42327e:	mov    ebp,0x5010231e
  423283:	sub    eax,0x6f2e0643
  423288:	add    eax,0x67493d03
  42328d:	fwait
  42328e:	js     0x4232c3
  423290:	repz xor al,0x8f
  423293:	ins    BYTE PTR es:[edi],dx
  423294:	in     al,0x98
  423296:	mov    al,0x2e
  423298:	inc    ebx
  423299:	int    0x8a
  42329b:	mov    bh,0xf7
  42329d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42329e:	jne    0x42324e
  4232a0:	or     di,WORD PTR [eax+0x48]
  4232a4:	jbe    0x42325a
  4232a6:	pop    esp
  4232a7:	aam    0xe6
  4232a9:	mov    DWORD PTR [eax],esp
  4232ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232ac:	in     al,0xe5
  4232ae:	stos   DWORD PTR es:[edi],eax
  4232af:	adc    BYTE PTR [eax],ch
  4232b1:	push   edx
  4232b2:	jl     0x4232ee
  4232b4:	mov    dh,0xe3
  4232b6:	add    dl,BYTE PTR [ecx-0x1d01a5c0]
  4232bc:	fcomp  QWORD PTR [ecx-0x5418bca8]
  4232c2:	loop   0x42333e
  4232c4:	hlt    
  4232c5:	mov    edi,0x8e0a40f7
  4232ca:	jne    0x423284
  4232cc:	imul   ebp,DWORD PTR [edi],0x855408a
  4232d2:	sub    ebp,esi
  4232d4:	(bad)  
  4232d6:	neg    DWORD PTR [eax-0x4aa0ab47]
  4232dc:	inc    eax
  4232dd:	push   ds
  4232de:	loopne 0x423291
  4232e0:	lods   eax,DWORD PTR ds:[esi]
  4232e1:	das    
  4232e2:	stos   DWORD PTR es:[edi],eax
  4232e3:	mov    ebp,0x479d27df
  4232e8:	mov    dl,0x5f
  4232ea:	cdq    
  4232eb:	int    0xa4
  4232ed:	xor    esi,DWORD PTR [eax+0x23]
  4232f0:	mov    bl,0x9a
  4232f2:	sub    ecx,eax
  4232f4:	xchg   ah,bl
  4232f6:	mov    dh,0x20
  4232f8:	dec    esp
  4232f9:	sbb    al,0xc
  4232fb:	push   cs
  4232fc:	and    BYTE PTR [edx+edi*2+0x5ccc8279],0x48
  423304:	sahf   
  423305:	push   eax
  423306:	push   0x3e365d64
  42330b:	and    BYTE PTR [esi+0x45270c91],al
  423311:	aam    0x96
  423313:	les    eax,FWORD PTR [edi]
	...
  423321:	cli    
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x2c
  42332e:	aas    
  42332f:	adc    BYTE PTR [ecx+ebx*4-0x55],al
  423333:	add    DWORD PTR [eax],eax
  423335:	lods   al,BYTE PTR ds:[esi]
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    BYTE PTR [ebx-0x51],dl
  42333b:	fcmove st,st(1)
  42333d:	push   eax
  42333e:	pop    ecx
  42333f:	sbb    edx,DWORD PTR [eax+0x73b2fc18]
  423345:	jnp    0x423301
  423347:	or     eax,0x7057a409
  42334c:	dec    esi
  42334d:	adc    DWORD PTR [edx],eax
  42334f:	rol    DWORD PTR [esi+0x106609e2],1
  423355:	fst    DWORD PTR [ebp-0x62]
  423358:	cmp    DWORD PTR [esi+0x5d4eb995],ebp
  42335e:	repnz pop ebx
  423360:	pop    es
  423361:	scas   eax,DWORD PTR es:[edi]
  423362:	cmc    
  423363:	arpl   WORD PTR [esi],cx
  423365:	std    
  423366:	cwde   
  423367:	jbe    0x423379
  423369:	int3   
  42336a:	xor    BYTE PTR [ebp-0x48],bh
  42336d:	dec    edi
  42336e:	ins    DWORD PTR es:[edi],dx
  42336f:	jno    0x423329
  423371:	mov    dh,0xb0
  423373:	mov    BYTE PTR [eax],ch
  423375:	mov    edi,?
  423377:	inc    esp
  423378:	and    DWORD PTR [esi+0x1a618d7d],esi
  42337e:	mov    eax,0xb88a96ad
  423383:	add    eax,0x8b7fdde5
  423388:	call   0xf7cfded4
  42338d:	dec    edi
  42338e:	fs cmp al,0x6f
  423391:	push   eax
  423392:	inc    ebp
  423393:	stc    
  423394:	dec    ebp
  423395:	add    ch,BYTE PTR [edx]
  423397:	mov    dl,0x25
  423399:	sbb    cl,BYTE PTR [ecx+0x34e8e0e4]
  42339f:	lods   al,BYTE PTR ds:[esi]
  4233a0:	shl    BYTE PTR [edi],1
  4233a2:	cmp    DWORD PTR [esi+0x69],ebx
  4233a5:	xchg   edx,eax
  4233a6:	pop    ds
  4233a7:	stc    
  4233a8:	jge    0x423385
  4233aa:	mov    ecx,0xbaccf600
  4233af:	dec    ebx
  4233b0:	xchg   esp,eax
  4233b1:	adc    edx,ebx
  4233b3:	xchg   esi,eax
  4233b4:	pop    ds
  4233b5:	iret   
  4233b6:	jns    0x4233bb
  4233b8:	idiv   DWORD PTR [ecx+0x30]
  4233bb:	mov    ah,0x69
  4233bd:	mov    BYTE PTR [ecx-0x453f232e],al
  4233c3:	icebp  
  4233c4:	dec    esp
  4233c5:	in     eax,dx
  4233c6:	cmp    DWORD PTR [esp+eax*2],0x24346161
  4233cd:	jb     0x42344d
  4233cf:	in     al,dx
  4233d0:	mov    ecx,0x594112e7
  4233d5:	imul   esp,DWORD PTR [edi-0x759fdb70],0xfac3c58f
  4233df:	pop    edi
  4233e0:	xchg   edi,eax
  4233e1:	jl     0x423442
  4233e3:	inc    esp
  4233e4:	lea    esi,[ecx+0x24]
  4233e7:	(bad)  
  4233e8:	(bad)  
  4233e9:	gs sti 
  4233eb:	jecxz  0x423447
  4233ed:	jl     0x423444
  4233ef:	std    
  4233f0:	jp     0x42346e
  4233f2:	shl    BYTE PTR [edx+0x22],cl
  4233f5:	xor    esp,edi
  4233f7:	push   edi
  4233f8:	(bad)
  4233fc:	push   ebx
  4233fd:	popa   
  4233fe:	inc    edx
  4233ff:	cwde   
  423400:	mov    eax,ds:0x59612381
  423405:	nop
  423406:	jo     0x4233a2
  423408:	push   edi
  423409:	sbb    al,BYTE PTR [eax-0x7c1163a9]
  42340f:	mov    edi,0x7ebbcee8
  423414:	and    eax,DWORD PTR [ebp-0x18ed46d2]
  42341a:	repz jmp 0x2e4c:0x561959fd
  423422:	aad    0x23
  423424:	dec    ebp
  423425:	xchg   ebp,eax
  423426:	push   eax
  423427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423428:	fsub   DWORD PTR [ebp+edi*2-0x29]
  42342c:	retf   0x36d0
  42342f:	enter  0xeb7d,0x2b
  423433:	test   eax,0xcf035f23
  423438:	mov    ecx,0xe3402eb0
  42343d:	popf   
  42343e:	das    
  42343f:	pop    ecx
  423440:	cmp    al,0x18
  423442:	fistp  DWORD PTR [edx]
  423444:	retf   0xb163
  423447:	push   esi
  423448:	xchg   edx,eax
  423449:	or     eax,0x6b03bb17
  42344e:	mov    eax,0xee5ad7ab
  423453:	add    al,BYTE PTR [ebp+0x77]
  423456:	push   edx
  423457:	sub    edi,edi
  423459:	test   bl,bl
  42345b:	mov    eax,0x5c3dddc5
  423460:	pop    edx
  423461:	loope  0x423451
  423463:	shl    edi,1
  423465:	loope  0x423413
  423467:	outs   dx,BYTE PTR ds:[esi]
  423468:	xchg   ecx,eax
  423469:	fstp   QWORD PTR [eax]
  42346b:	adc    al,0xd6
  42346d:	(bad)  
  42346e:	je     0x4234b1
  423470:	add    al,bl
  423472:	adc    ecx,DWORD PTR [edi]
  423474:	cmp    al,0x21
  423476:	dec    eax
  423477:	int3   
  423478:	inc    ebp
  423479:	pop    esi
  42347a:	dec    eax
  42347b:	mov    ah,0x39
  42347d:	fwait
  42347e:	jp     0x423476
  423480:	not    al
  423482:	cmp    al,0xf0
  423484:	pushf  
  423485:	dec    esp
  423486:	sbb    ebp,edi
  423488:	or     al,0x77
  42348a:	rol    edx,0xb9
  42348d:	sbb    eax,0x3cf7934f
  423492:	sub    BYTE PTR [esi+ebx*8+0x5a8c4f95],ah
  423499:	shl    BYTE PTR [edi-0x78f59ff7],1
  42349f:	push   ds
  4234a0:	cmp    eax,0x7daa2267
  4234a5:	or     ecx,DWORD PTR [ebp+0x5a73d86e]
  4234ab:	dec    esi
  4234ac:	push   ds
  4234ad:	ror    DWORD PTR [esi-0x30463e2d],1
  4234b3:	unpcklps xmm4,XMMWORD PTR [ebx+eax*1+0x29ea9a85]
  4234bb:	add    eax,0x9f42c1db
  4234c0:	std    
  4234c1:	xchg   esi,eax
  4234c2:	test   BYTE PTR [edi-0x756856e0],bh
  4234c8:	jnp    0x423460
  4234ca:	jno    0x423532
  4234cc:	mov    ds:0xc4c719eb,eax
  4234d1:	or     BYTE PTR [edi+0xd],al
  4234d4:	xchg   esp,eax
  4234d5:	or     DWORD PTR [esp+ebp*1-0x7b],eax
  4234d9:	cmp    BYTE PTR [ebx],ah
  4234db:	pop    ds
  4234dc:	dec    esi
  4234dd:	aaa    
  4234de:	push   ebp
  4234df:	aad    0x7
  4234e1:	push   edx
  4234e2:	ds inc eax
  4234e4:	and    eax,0x20908416
  4234e9:	and    eax,0x235339f6
  4234ee:	pop    ecx
  4234ef:	fsub   st(4),st
  4234f1:	push   esp
  4234f2:	push   esp
  4234f3:	in     al,dx
  4234f4:	lock mov bh,0xd1
  4234f7:	ds pop ebx
  4234f9:	sti    
  4234fa:	jg     0x423553
  4234fc:	fs test eax,0x321ae8d4
  423502:	test   DWORD PTR [edx+0x72],eax
  423505:	loop   0x4234db
  423507:	jne    0x4234ab
  423509:	fmul   st,st(0)
  42350b:	test   DWORD PTR [eax-0x2cb4ca0c],esp
  423511:	mov    eax,0x13670318
  423516:	dec    ecx
  423517:	dec    ecx
  423518:	lods   eax,DWORD PTR ds:[esi]
  423519:	xor    edx,DWORD PTR [edi]
  42351b:	add    al,BYTE PTR [esp+edx*1+0x23b7aa1e]
  423522:	shl    DWORD PTR [ebx-0x210fcdf1],cl
  423528:	shr    BYTE PTR [ebp+0x6465299b],0xfc
  42352f:	cs pop es
  423531:	mov    ah,0xb9
  423533:	cs out dx,al
  423535:	stos   BYTE PTR es:[edi],al
  423536:	jle    0x4234f7
  423538:	(bad)  
  42353a:	retf   
  42353b:	pop    ebx
  42353c:	stos   BYTE PTR es:[edi],al
  42353d:	sbb    al,0x11
  42353f:	loopne 0x4234ed
  423541:	cli    
  423542:	scas   al,BYTE PTR es:[edi]
  423543:	(bad)  
  423544:	loopne 0x423565
  423546:	imul   esi,DWORD PTR [esi],0xc93980c2
  42354c:	xlat   BYTE PTR ds:[ebx]
  42354d:	adc    ebx,esp
  42354f:	mov    esp,esi
  423551:	adc    ch,ah
  423553:	pop    edx
  423554:	loopne 0x4235c6
  423556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423557:	mov    ds:0xe6a1dc5,eax
  42355c:	push   ebx
  42355d:	or     al,BYTE PTR [ecx]
  42355f:	outs   dx,BYTE PTR ds:[esi]
  423560:	stos   DWORD PTR es:[edi],eax
  423561:	push   0x9bf8e543
  423566:	adc    BYTE PTR [ebx+0x5d446564],cl
  42356c:	mov    ebx,0x75721d0f
  423571:	push   edi
  423572:	adc    al,0x28
  423574:	outs   dx,DWORD PTR ds:[esi]
  423575:	dec    esi
  423576:	pop    ds
  423577:	repnz inc ecx
  423579:	inc    edi
  42357a:	mov    eax,0x336f58ef
  42357f:	jl     0x42354a
  423581:	jmp    0x1b83942d
  423586:	repnz add BYTE PTR [ecx-0x68],0xe4
  42358b:	or     eax,0x45fed03a
  423590:	jg     0x423531
  423592:	add    al,dl
  423594:	xchg   BYTE PTR [esi],bh
  423596:	aad    0xba
  423598:	jne    0x4235aa
  42359a:	ret    0x1d15
  42359d:	das    
  42359e:	xor    eax,0x7396eddb
  4235a3:	pop    ecx
  4235a4:	inc    esp
  4235a5:	test   DWORD PTR [edx],edi
  4235a7:	mov    ds:0x66502fe,al
  4235ac:	jmp    0xf36f:0xc372e22
  4235b3:	sub    al,0xd3
  4235b5:	(bad)  
  4235b7:	jb     0x4235af
  4235b9:	out    0xf8,al
  4235bb:	jecxz  0x423602
  4235bd:	jmp    0x42360c
  4235bf:	pop    eax
  4235c0:	mov    ebx,0xb93aeb3d
  4235c5:	push   ecx
  4235c6:	ins    BYTE PTR es:[edi],dx
  4235c7:	ins    DWORD PTR es:[edi],dx
  4235c8:	ds scas al,BYTE PTR es:[di]
  4235cb:	sbb    eax,0xae9bed48
  4235d0:	mov    esp,0x31c8ae30
  4235d5:	inc    edi
  4235d6:	cmp    eax,0xae4b47f6
  4235db:	aam    0x13
  4235dd:	hlt    
  4235de:	inc    esi
  4235df:	cmp    eax,DWORD PTR [edi+edx*1]
  4235e2:	fist   WORD PTR [edi]
  4235e4:	pop    esp
  4235e5:	ror    BYTE PTR [edx-0x16],1
  4235e8:	fisub  DWORD PTR [ecx+0x10]
  4235eb:	and    edi,edx
  4235ed:	xchg   ecx,eax
  4235ee:	xchg   ebp,eax
  4235ef:	or     al,BYTE PTR [edx+0x12c4f25]
  4235f5:	mov    DWORD PTR [ebx],0x981d442f
  4235fb:	out    dx,al
  4235fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235fd:	adc    ebp,DWORD PTR [esi+0x22]
  423600:	mov    DWORD PTR [eax+0x154b698d],eax
  423606:	test   DWORD PTR [ecx+eiz*2],ebx
  423609:	stc    
  42360a:	out    0xe5,al
  42360c:	mov    DWORD PTR [eax+0x1f88b287],ebp
  423612:	xchg   DWORD PTR [edi+0x51],ecx
  423615:	push   0xffffff89
  423617:	(bad)  
  423618:	out    dx,al
  423619:	cs icebp 
  42361b:	in     eax,0xae
  42361d:	test   al,0x14
  42361f:	mov    BYTE PTR [edx+0x65b440dd],bh
  423625:	shl    DWORD PTR [edx-0x4a],0xd5
  423629:	cdq    
  42362a:	sbb    BYTE PTR [ebx+0x49ce310a],al
  423630:	cmp    al,0x25
  423632:	sub    DWORD PTR [esi],eax
  423634:	mov    esp,0x75b1542
  423639:	stos   DWORD PTR es:[edi],eax
  42363a:	sbb    eax,0x121ac181
  42363f:	and    al,0x99
  423641:	(bad)  
  423643:	or     ch,al
  423645:	js     0x42368e
  423647:	cdq    
  423648:	cs inc edx
  42364a:	dec    ebp
  42364b:	repz int3 
  42364d:	inc    edx
  42364e:	inc    ebp
  42364f:	lods   al,BYTE PTR ds:[esi]
  423650:	sbb    dh,bl
  423652:	imul   edi,DWORD PTR [ecx+0x24],0xffffffd2
  423656:	les    ebp,FWORD PTR [ebx+0x31]
  423659:	add    al,BYTE PTR [ecx]
  42365b:	fwait
  42365c:	rol    cl,1
  42365e:	sub    ebx,DWORD PTR [ebp+0x4053bdb1]
  423664:	and    al,0x57
  423666:	nop
  423667:	and    eax,eax
  423669:	adc    DWORD PTR [ebp*1+0xa6d42c0],esi
  423670:	mov    ebp,eax
  423672:	cmp    eax,0x536797a0
  423677:	(bad)  
  423678:	popf   
  423679:	xor    ah,BYTE PTR [ebx+ecx*4]
  42367c:	popa   
  42367d:	aad    0xa7
  42367f:	adc    BYTE PTR [esi-0xd1d7dd6],0x8e
  423686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423687:	mov    ?,WORD PTR [ecx+0x47]
  42368a:	imul   edx,DWORD PTR [esi-0x1abd2e0f],0x32
  423691:	dec    esi
  423692:	aad    0x3b
  423694:	xor    eax,0x3a336f37
  423699:	in     eax,0x44
  42369b:	inc    esp
  42369c:	pop    esp
  42369d:	pop    esi
  42369e:	idiv   al
  4236a0:	aad    0xa5
  4236a2:	enter  0x77c,0x63
  4236a6:	hlt    
  4236a7:	adc    DWORD PTR ds:0xedac2604,0x38
  4236ae:	call   0xb26b9e40
  4236b3:	scas   al,BYTE PTR es:[edi]
  4236b4:	aam    0x15
  4236b6:	or     al,0xd0
  4236b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236b9:	push   ebx
  4236ba:	xchg   ecx,eax
  4236bb:	cmp    al,0xb7
  4236bd:	push   ds
  4236be:	pushf  
  4236bf:	cwde   
  4236c0:	inc    ebp
  4236c1:	mov    al,ds:0x8d779a4c
  4236c6:	int    0x8b
  4236c8:	aad    0x8d
  4236ca:	cmp    BYTE PTR [eax-0x10b9777a],ch
  4236d0:	je     0x42371f
  4236d2:	mov    esi,0xb99aeb04
  4236d7:	imul   ch
  4236d9:	(bad)  
  4236da:	rcl    BYTE PTR [edx+0x77],0xcf
  4236de:	add    cl,BYTE PTR [ecx+0x7]
  4236e1:	subps  xmm0,XMMWORD PTR [edi+0x20]
	...
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x3e1cc0eb],dh
  423701:	inc    ebp
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	add    DWORD PTR [eax],eax
  423705:	lods   al,BYTE PTR ds:[esi]
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [ecx-0x5c],bl
  42370b:	mov    esi,0xa59c024d
  423710:	retf   
  423711:	out    0xad,al
  423713:	push   ebp
  423714:	and    DWORD PTR [edx-0x35],0x2c
  423718:	jle    0x4236b8
  42371a:	inc    edi
  42371b:	mov    ah,0x0
  42371d:	ins    DWORD PTR es:[edi],dx
  42371e:	pop    ds
  42371f:	mov    bh,0x5c
  423721:	xchg   edx,eax
  423722:	ret    0xb963
  423725:	pop    esp
  423726:	or     al,0xfd
  423728:	add    ah,al
  42372a:	add    DWORD PTR [ebp+0x17],esp
  42372d:	aas    
  42372e:	jmp    0x423741
  423730:	mov    cl,0x9f
  423732:	in     al,0xa
  423734:	inc    esi
  423735:	je     0x4236c1
  423737:	adc    ecx,0xffffff95
  42373a:	iret   
  42373b:	dec    edi
  42373c:	push   ebx
  42373d:	xchg   ebp,eax
  42373e:	fwait
  42373f:	mov    ebp,esp
  423741:	mov    al,0xca
  423743:	fistp  QWORD PTR [esi]
  423745:	lock and eax,DWORD PTR [edi]
  423748:	into   
  423749:	sbb    ah,BYTE PTR [edx+0x6e]
  42374c:	test   eax,0x7c2a3f82
  423751:	shl    DWORD PTR [ebp+0x5d6aa65],1
  423757:	mov    dh,0x9
  423759:	rol    BYTE PTR [edi-0x73af8c98],1
  42375f:	jb     0x423797
  423761:	or     BYTE PTR [esi+0x67],bh
  423764:	push   ecx
  423765:	arpl   bp,dx
  423767:	jb     0x423778
  423769:	inc    ecx
  42376a:	jg     0x42374a
  42376c:	xchg   esi,eax
  42376d:	arpl   WORD PTR [ebx-0x650ece9d],sp
  423773:	lea    esi,[edx]
  423775:	jae    0x423708
  423777:	pop    esi
  423778:	in     eax,0x46
  42377a:	inc    edi
  42377b:	and    al,0x61
  42377d:	inc    edx
  42377e:	xor    BYTE PTR [ebp-0x54cf5abe],bh
  423784:	frstor [edi+0x27]
  423787:	jl     0x4237ed
  423789:	mov    edx,0x7cbe4a58
  42378e:	enter  0x6387,0x8a
  423792:	mov    edx,0xf285b6af
  423797:	xchg   BYTE PTR [eax-0xd],dl
  42379a:	sbb    BYTE PTR [esi],bh
  42379c:	pushf  
  42379d:	adc    BYTE PTR [ebx-0x62a76042],bh
  4237a3:	rol    DWORD PTR [ebp+0x4b],1
  4237a6:	xor    esp,DWORD PTR [edx+0x551b16ad]
  4237ac:	not    DWORD PTR [eax+edi*4-0x4b]
  4237b0:	or     edi,DWORD PTR [esi]
  4237b2:	dec    ebx
  4237b3:	test   eax,0x2cff5d4d
  4237b8:	leave  
  4237b9:	in     eax,dx
  4237ba:	dec    edx
  4237bb:	adc    DWORD PTR [esi+0x79b987],0x4336099e
  4237c5:	sub    DWORD PTR [ecx+eiz*4],0xffffff84
  4237c9:	hlt    
  4237ca:	es dec edi
  4237cc:	loopne 0x4237c8
  4237ce:	cmp    eax,0x3c6a9e8f
  4237d3:	lods   eax,DWORD PTR ds:[esi]
  4237d4:	jbe    0x4237c4
  4237d6:	ins    BYTE PTR es:[edi],dx
  4237d7:	lods   al,BYTE PTR ds:[esi]
  4237d8:	pop    ds
  4237d9:	cdq    
  4237da:	and    dl,al
  4237dc:	pop    ss
  4237dd:	push   edx
  4237de:	push   esp
  4237df:	add    al,0x63
  4237e1:	out    dx,al
  4237e2:	lea    ebp,[esi-0x14]
  4237e5:	das    
  4237e6:	rol    DWORD PTR [edi-0x48],0x52
  4237ea:	dec    edi
  4237eb:	dec    esp
  4237ec:	mov    es,WORD PTR [ebx]
  4237ee:	sbb    BYTE PTR [esi+0x21],dh
  4237f1:	fs retf 
  4237f3:	push   cs
  4237f4:	xchg   BYTE PTR [ebx+0x2d],ah
  4237f7:	retf   0xd2b5
  4237fa:	ja     0x42383d
  4237fc:	or     DWORD PTR [esi-0x248925e6],ecx
  423802:	cs jnp 0x423855
  423805:	retf   
  423806:	hlt    
  423807:	pop    ss
  423808:	xchg   ebx,eax
  423809:	sub    DWORD PTR [esi],esp
  42380b:	jo     0x4237a3
  42380d:	leave  
  42380e:	shr    esi,1
  423810:	add    ah,dh
  423812:	adc    bh,ah
  423814:	pushw  ds
  423816:	pop    ebp
  423817:	adc    edi,DWORD PTR [edx+0x6f]
  42381a:	xchg   dl,ch
  42381c:	retf   
  42381d:	ror    BYTE PTR [ebp+0x5],cl
  423820:	(bad)  [edi]
  423822:	fxch   st(7)
  423824:	aam    0x54
  423826:	xchg   ebp,eax
  423827:	lods   eax,DWORD PTR ds:[esi]
  423828:	out    dx,al
  423829:	shl    dh,1
  42382b:	sub    esp,edx
  42382d:	dec    eax
  42382e:	(bad)  
  42382f:	int3   
  423830:	push   0xffffff91
  423832:	dec    ecx
  423833:	cdq    
  423834:	adc    eax,0xf05705a4
  423839:	cs mov edi,0xacfe5020
  42383f:	cmp    al,0xf0
  423841:	inc    edx
  423842:	sahf   
  423843:	sub    eax,0xafd6e34e
  423848:	lock jns 0x42388f
  42384b:	mov    BYTE PTR [ebp-0x24d6f2cd],al
  423851:	xchg   ebp,eax
  423852:	and    esp,DWORD PTR [edi+0x1959d738]
  423858:	add    ebx,DWORD PTR [ecx-0x32]
  42385b:	in     eax,0x98
  42385d:	push   ds
  42385e:	pop    ebp
  42385f:	sub    al,0xa
  423861:	jl     0x4238c7
  423863:	lds    edx,FWORD PTR [eax+edx*8+0x5a7b181e]
  42386a:	enter  0x5861,0xf7
  42386e:	cld    
  42386f:	sbb    al,0x4e
  423871:	out    0xd9,eax
  423873:	pop    edi
  423874:	shl    ebp,0x41
  423877:	aad    0x49
  423879:	mov    dl,0xad
  42387b:	pop    ds
  42387c:	rcl    BYTE PTR ds:0x5ec150bc,0x6b
  423883:	inc    esi
  423884:	je     0x423831
  423886:	loopne 0x4238de
  423888:	jge    0x423825
  42388a:	push   ebx
  42388b:	push   es
  42388c:	push   es
  42388d:	mov    edx,0x708f814c
  423892:	pcmpgtd mm4,mm4
  423895:	lahf   
  423896:	fwait
  423897:	xor    al,0x99
  423899:	in     al,dx
  42389a:	adc    BYTE PTR [eax+0x18],al
  42389d:	push   ds
  42389e:	push   edx
  42389f:	neg    edi
  4238a1:	sahf   
  4238a2:	(bad)  [ecx]
  4238a4:	and    DWORD PTR [edi-0x4cdc1b87],ebp
  4238aa:	out    0x5a,eax
  4238ac:	cld    
  4238ad:	outs   dx,DWORD PTR ds:[esi]
  4238ae:	shl    BYTE PTR [eax+0x1cd6fc43],1
  4238b4:	dec    ebp
  4238b5:	sbb    ebx,DWORD PTR [ebx]
  4238b7:	aam    0xc
  4238b9:	and    eax,esp
  4238bb:	pop    edx
  4238bc:	mov    cl,0x9c
  4238be:	popf   
  4238bf:	ror    BYTE PTR [ebx+ebx*4-0x2fe5740],1
  4238c6:	enter  0xa120,0xb7
  4238ca:	add    DWORD PTR [ebp+0x6d9bbd4a],edi
  4238d0:	xchg   esp,eax
  4238d1:	popf   
  4238d2:	xor    ch,dh
  4238d4:	push   edx
  4238d5:	mov    DWORD PTR [ebx-0x659b7d8],ecx
  4238db:	xlat   BYTE PTR ds:[ebx]
  4238dc:	stos   DWORD PTR es:[edi],eax
  4238dd:	cmp    bl,cl
  4238df:	ins    DWORD PTR es:[edi],dx
  4238e0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4238e2:	push   es
  4238e3:	lock pop esp
  4238e5:	mov    dh,0x16
  4238e7:	xchg   esp,eax
  4238e8:	call   0xa8eea614
  4238ed:	add    al,bh
  4238ef:	aaa    
  4238f0:	out    dx,al
  4238f1:	xchg   edx,eax
  4238f2:	jmp    0x423882
  4238f4:	out    dx,eax
  4238f5:	ss mov edi,0x19a4856
  4238fb:	fld    TBYTE PTR [edi+0x5effb1f3]
  423901:	mov    ch,0xb8
  423903:	sbb    al,0x16
  423905:	adc    DWORD PTR [edi+eiz*4+0x24],esp
  423909:	pop    esi
  42390a:	push   esi
  42390b:	fcom   DWORD PTR [ebx+0x6416ce83]
  423911:	push   cs
  423912:	push   esp
  423913:	out    0x1d,al
  423915:	iret   
  423916:	sub    eax,0xb08e0aa1
  42391b:	arpl   WORD PTR [ebx+0x7f21dcf2],bp
  423921:	lea    edx,[eax-0x18]
  423924:	pushf  
  423925:	pop    edx
  423926:	cwde   
  423927:	push   esi
  423928:	ficomp WORD PTR [ebx]
  42392a:	repnz xchg edi,eax
  42392c:	push   ecx
  42392d:	add    ebx,DWORD PTR [edi-0x21088c92]
  423933:	loop   0x4238b5
  423935:	fcom   st(5)
  423937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423938:	and    bh,BYTE PTR [esi-0x41e919f2]
  42393e:	sub    edi,ebp
  423940:	repnz xchg ecx,eax
  423942:	push   edi
  423943:	push   0x4a813b22
  423948:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42394a:	or     DWORD PTR [ebp-0x23],edi
  42394d:	rsqrtps xmm0,XMMWORD PTR [ecx+0x2a]
  423951:	pusha  
  423952:	enter  0x8b22,0xc6
  423956:	ins    BYTE PTR es:[edi],dx
  423957:	jl     0x4238fe
  423959:	(bad)  
  42395a:	push   ds
  42395b:	out    dx,al
  42395c:	pop    edx
  42395d:	inc    esp
  42395e:	and    eax,0x2cabc773
  423963:	mov    ah,0xf0
  423965:	mov    edi,0x282a1176
  42396a:	inc    ebp
  42396b:	jle    0x4239da
  42396d:	inc    esp
  42396e:	mov    ?,WORD PTR [edi+0x59560557]
  423974:	inc    esp
  423975:	fadd   st,st(4)
  423977:	lods   eax,DWORD PTR ds:[esi]
  423978:	dec    eax
  423979:	call   0xc71a:0x707fa33e
  423980:	inc    edx
  423981:	pop    edi
  423982:	out    dx,al
  423983:	int3   
  423984:	daa    
  423985:	out    0x7c,al
  423987:	scas   al,BYTE PTR es:[edi]
  423988:	daa    
  423989:	inc    edi
  42398a:	repnz pushf 
  42398c:	xchg   ebp,eax
  42398d:	lahf   
  42398e:	mov    ds:0x654478f7,eax
  423993:	js     0x4239c2
  423995:	enter  0x7466,0xb3
  423999:	and    eax,eax
  42399b:	inc    ebp
  42399c:	in     eax,dx
  42399d:	mov    esi,0x7b8eb73f
  4239a2:	push   edi
  4239a3:	or     al,0x6c
  4239a5:	cmp    esp,ecx
  4239a7:	pop    esi
  4239a8:	repnz cwde 
  4239aa:	add    eax,edi
  4239ac:	jno    0x423a0a
  4239ae:	js     0x4239ba
  4239b0:	(bad)  
  4239b1:	in     eax,dx
  4239b2:	and    eax,0x18679d99
  4239b7:	repnz jecxz 0x42397c
  4239ba:	pop    ebx
  4239bb:	dec    ecx
  4239bc:	jne    0x423972
  4239be:	clc    
  4239bf:	push   es
  4239c0:	mov    ebx,0x585f97b3
  4239c5:	mov    edx,0x3e6ac131
  4239ca:	int    0x24
  4239cc:	in     al,dx
  4239cd:	mov    edi,0x59329e1d
  4239d2:	cmp    eax,0x504daf04
  4239d7:	mov    edi,DWORD PTR [eax+0x1c85f18]
  4239dd:	push   edi
  4239de:	shl    cl,0x29
  4239e1:	or     cl,BYTE PTR [esi-0x1e9a083f]
  4239e7:	adc    DWORD PTR ds:0x1f11ad66,esi
  4239ed:	cld    
  4239ee:	push   0x54
  4239f0:	adc    edi,edx
  4239f2:	lods   eax,DWORD PTR ds:[esi]
  4239f3:	mov    ch,0x8d
  4239f5:	in     eax,0x7
  4239f7:	dec    esi
  4239f8:	(bad)  
  4239fa:	inc    edx
  4239fb:	sbb    DWORD PTR ds:0xea74b110,ebp
  423a01:	les    ebx,FWORD PTR [ecx-0x9]
  423a04:	push   edi
  423a05:	cvtpi2ps xmm0,QWORD PTR [edi+0x76]
  423a09:	mov    eax,0xee051713
  423a0e:	daa    
  423a0f:	xchg   esp,eax
  423a10:	sti    
  423a11:	sub    BYTE PTR [eax],cl
  423a13:	js     0x4239ef
  423a15:	ins    BYTE PTR es:[edi],dx
  423a16:	arpl   WORD PTR [eax-0x46],dx
  423a19:	lea    esp,[eax+0x5d9e2dbd]
  423a1f:	ins    DWORD PTR es:[edi],dx
  423a20:	dec    ebx
  423a21:	jmp    0x423a75
  423a23:	push   0x13
  423a25:	sub    dh,BYTE PTR [ebp+eiz*1-0x7a4d6b05]
  423a2c:	inc    esi
  423a2d:	in     eax,0xe8
  423a2f:	cld    
  423a30:	xchg   edx,eax
  423a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a32:	daa    
  423a33:	fiadd  DWORD PTR [ebx+0x57]
  423a36:	jmp    0x989d:0x8be92f5e
  423a3d:	enter  0x1550,0xa3
  423a41:	push   ds
  423a42:	or     dh,bl
  423a44:	aam    0x2c
  423a46:	std    
  423a47:	dec    ebp
  423a48:	rol    BYTE PTR [esi-0x197744ad],1
  423a4e:	pop    ebp
  423a4f:	jno    0x423a89
  423a51:	push   esi
  423a52:	pop    ecx
  423a53:	and    eax,eax
  423a55:	repz pop ss
  423a57:	push   es
  423a58:	mov    eax,ds:0xee074769
  423a5d:	lock inc ecx
  423a5f:	mov    eax,ds:0xdb2797c3
  423a64:	pop    esi
  423a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a66:	push   esp
  423a67:	xor    edx,DWORD PTR [eax]
  423a69:	mov    eax,ds:0x2d763be2
  423a6e:	inc    esi
  423a6f:	pop    eax
  423a70:	add    bh,BYTE PTR ds:0x9919a45
  423a76:	pop    es
  423a77:	(bad)  
  423a78:	(bad)  [ebp+eiz*2+0x3bc56ccb]
  423a7f:	and    ecx,edx
  423a81:	and    al,0xd4
  423a83:	lods   al,BYTE PTR ds:[esi]
  423a84:	pop    eax
  423a85:	mov    bl,0x7e
  423a87:	mov    cl,0x54
  423a89:	and    esi,0xe8408849
  423a8f:	mov    ds:0x8e0031f2,al
  423a94:	fidivr WORD PTR [edx]
  423a96:	in     eax,dx
  423a97:	loopne 0x423ae9
  423a99:	test   DWORD PTR [ebx+0x2c],edi
  423a9c:	iret   
  423a9d:	xor    al,0x6f
  423a9f:	cmp    DWORD PTR [edx],ecx
  423aa1:	dec    esi
  423aa2:	data16 cmp al,0xc0
  423aa5:	dec    ebx
  423aa6:	loopne 0x423a93
  423aa8:	fadd   QWORD PTR [ecx-0x65]
  423aab:	sub    edi,DWORD PTR [esp+ebx*4+0x9]
  423aaf:	push   ebx
  423ab0:	cmp    al,0xc8
  423ab2:	pop    eax
  423ab3:	hlt    
  423ab4:	lds    eax,FWORD PTR [eax]
	...
  423abe:	add    BYTE PTR [eax],al
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x61],cs
  423ace:	out    dx,eax
  423acf:	ss (bad) 
  423ad1:	icebp  
  423ad2:	mov    dl,0x1
  423ad4:	add    BYTE PTR [ebx+eax*1+0x4eaa0000],ch
  423adb:	pop    ecx
  423adc:	or     DWORD PTR [edi+0x32],ebp
  423adf:	mov    esp,0xe528bf56
  423ae4:	mov    eax,0xaadf5e63
  423ae9:	jno    0x423b2e
  423aeb:	or     eax,DWORD PTR [edx]
  423aed:	sbb    eax,0x4971aecc
  423af2:	mov    edx,0xfe3604c1
  423af7:	outs   dx,DWORD PTR ds:[esi]
  423af8:	scas   al,BYTE PTR es:[edi]
  423af9:	push   0x6c
  423afb:	xor    DWORD PTR [ecx+ebp*4],0xad628872
  423b02:	inc    edx
  423b03:	test   DWORD PTR [ebx],edi
  423b05:	inc    ebx
  423b06:	sbb    bh,al
  423b08:	push   edx
  423b09:	xchg   esi,eax
  423b0a:	sub    DWORD PTR [edi+0x286e2859],0x83d590f6
  423b14:	jnp    0x423b4e
  423b16:	xchg   DWORD PTR [ebp+0x58adb674],esp
  423b1c:	adc    BYTE PTR [eax-0x4c2c6e73],0xd0
  423b23:	add    bh,BYTE PTR [ebx]
  423b25:	daa    
  423b26:	je     0x423ae5
  423b28:	dec    edx
  423b29:	pop    edi
  423b2a:	aad    0xfd
  423b2c:	rcr    BYTE PTR [esi+0x7a286a29],1
  423b32:	push   cs
  423b33:	(bad)  
  423b34:	aad    0x24
  423b36:	fwait
  423b37:	cmp    ecx,eax
  423b39:	sbb    edi,edi
  423b3b:	mov    ah,BYTE PTR [esi-0x31]
  423b3e:	sub    DWORD PTR [edx+0x49e79ac7],ecx
  423b44:	cmp    DWORD PTR [edi],eax
  423b46:	sub    eax,0x6fe0bf66
  423b4b:	xor    edi,DWORD PTR [esi-0x68]
  423b4e:	scas   al,BYTE PTR es:[edi]
  423b4f:	adc    BYTE PTR [esi+edx*1+0xc],ch
  423b53:	stc    
  423b54:	pop    ecx
  423b55:	das    
  423b56:	push   esi
  423b57:	mov    ecx,0x70ce698b
  423b5c:	add    DWORD PTR [ebx+0x125b3807],esp
  423b62:	sub    eax,0xfcbdda1a
  423b67:	mov    ah,0x6e
  423b69:	mov    al,0x3b
  423b6b:	pop    es
  423b6c:	dec    ecx
  423b6d:	push   ds
  423b6e:	sub    ch,BYTE PTR [eax-0x33]
  423b71:	lods   eax,DWORD PTR ds:[esi]
  423b72:	fidivr WORD PTR [ecx]
  423b74:	and    eax,0x2b8371d3
  423b79:	mov    dl,0x73
  423b7b:	jecxz  0x423b9f
  423b7d:	ss dec edx
  423b7f:	in     al,dx
  423b80:	cmp    DWORD PTR [eax+0x4c],0x38d227ec
  423b87:	adc    eax,0xee2e0992
  423b8c:	lds    edx,FWORD PTR [ecx+0x19fb5aa2]
  423b92:	mov    eax,0x57a03c4a
  423b97:	pop    ebp
  423b98:	inc    esp
  423b99:	xor    al,0x52
  423b9b:	in     al,0x49
  423b9d:	aas    
  423b9e:	adc    al,0xa1
  423ba0:	xor    eax,0xc9a62990
  423ba5:	ror    bl,0xa0
  423ba8:	clc    
  423ba9:	add    al,BYTE PTR [edx]
  423bab:	mov    edi,DWORD PTR [ebx+0x25]
  423bae:	fs iret 
  423bb0:	or     al,0x2a
  423bb2:	hlt    
  423bb3:	iret   
  423bb4:	mov    edx,0x4d2c91e
  423bb9:	inc    ecx
  423bba:	dec    ecx
  423bbb:	mov    ch,bl
  423bbd:	jge    0x423b98
  423bbf:	push   ss
  423bc0:	mov    eax,ds:0x13b6bc
  423bc5:	fistp  DWORD PTR [ebx+0x5e]
  423bc8:	jle    0x423bcc
  423bca:	in     al,0x26
  423bcc:	call   0x89da859
  423bd1:	test   DWORD PTR [eax],0xbbc29475
  423bd7:	das    
  423bd8:	into   
  423bd9:	fsub   QWORD PTR [esp+edi*4-0x13]
  423bdd:	mov    ds:0x43f275fe,eax
  423be2:	xlat   BYTE PTR ds:[ebx]
  423be3:	cmp    dh,BYTE PTR es:[eax+0x1a17737]
  423bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423beb:	add    eax,0xe1991407
  423bf0:	mov    ebp,0x961146b6
  423bf5:	fsub   DWORD PTR [esi+0x2b]
  423bf8:	mov    ds:0x8c2f92bc,al
  423bfd:	bswap  ebx
  423bff:	(bad)  [ebx-0x6e]
  423c02:	mov    eax,ds:0xbd07816c
  423c07:	jl     0x423c2a
  423c09:	retf   0x9609
  423c0c:	je     0x423c8b
  423c0e:	btc    DWORD PTR [esi+0x12],0xa0
  423c13:	xor    DWORD PTR [edi+0x4627f915],0x67
  423c1a:	adc    edx,DWORD PTR [ebx-0x6fbed4d4]
  423c20:	fdivp  st(3),st
  423c22:	sbb    DWORD PTR [esi],edx
  423c24:	and    ecx,DWORD PTR [edx-0x191d4cfc]
  423c2a:	retf   
  423c2b:	push   eax
  423c2c:	jne    0x423c5f
  423c2e:	or     bh,BYTE PTR [edi+0x521a0d88]
  423c34:	inc    esp
  423c35:	cmp    bl,BYTE PTR [edi+0x13]
  423c38:	test   BYTE PTR [esi+ecx*4-0x12],bl
  423c3c:	mov    ebx,DWORD PTR [ecx-0x6a]
  423c3f:	jae    0x423be5
  423c41:	inc    eax
  423c42:	es jae 0x423c05
  423c45:	out    dx,eax
  423c46:	pop    ecx
  423c47:	inc    ebx
  423c48:	jecxz  0x423c2d
  423c4a:	mov    ch,0xae
  423c4c:	jecxz  0x423c94
  423c4e:	add    ecx,DWORD PTR [eax-0x53d1400e]
  423c54:	stc    
  423c55:	adc    BYTE PTR [ecx+edx*1-0x6182eb47],dl
  423c5c:	lahf   
  423c5d:	jb     0x423c59
  423c5f:	xor    DWORD PTR [eax+0x14],eax
  423c62:	sti    
  423c63:	jge    0x423cb1
  423c65:	mov    esi,0x71b449e5
  423c6a:	xchg   edx,eax
  423c6b:	dec    ebx
  423c6c:	jl     0x423cb7
  423c6e:	cmp    dh,bh
  423c70:	test   BYTE PTR [esi+0x79],al
  423c73:	mov    eax,ds:0x8c74b9c3
  423c78:	in     al,dx
  423c79:	jnp    0x423c6e
  423c7b:	shl    BYTE PTR [ecx+0x73],0x44
  423c7f:	aas    
  423c80:	xchg   edx,eax
  423c81:	mov    ecx,edi
  423c83:	push   esi
  423c84:	and    DWORD PTR [edi],esi
  423c86:	or     BYTE PTR [ecx],ah
  423c88:	pop    ecx
  423c89:	mov    bh,dl
  423c8b:	mov    dh,0xe1
  423c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c8e:	loop   0x423c79
  423c90:	pop    ecx
  423c91:	mov    ds:0xeac8ec35,eax
  423c96:	int3   
  423c97:	adc    DWORD PTR [eax-0x2d],0xffffffae
  423c9b:	loope  0x423c56
  423c9d:	int3   
  423c9e:	xor    eax,0xd66b11c5
  423ca3:	xor    bh,bh
  423ca5:	sub    BYTE PTR [eax+0x6],ah
  423ca8:	inc    esp
  423ca9:	repnz and BYTE PTR [eax+0x71426e95],dh
  423cb0:	mov    esi,DWORD PTR [ebp+0x74d917ab]
  423cb6:	repnz or al,0xde
  423cb9:	pop    ebp
  423cba:	xchg   DWORD PTR [edx+0x3acb2542],ebp
  423cc0:	(bad)  
  423cc1:	cmp    al,0x60
  423cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cc4:	out    dx,al
  423cc5:	inc    edi
  423cc6:	push   cs
  423cc7:	outs   dx,DWORD PTR ds:[esi]
  423cc8:	pop    ebp
  423cc9:	cwde   
  423cca:	xchg   DWORD PTR [ebx-0x4c],edi
  423ccd:	cmp    dh,dl
  423ccf:	cmp    ecx,DWORD PTR [eax]
  423cd1:	push   0xffffffe5
  423cd3:	call   0xef67:0x83a54897
  423cda:	jae    0x423ce1
  423cdc:	mov    bh,0x30
  423cde:	or     eax,DWORD PTR [esi+0x31]
  423ce1:	push   ebx
  423ce2:	lods   eax,DWORD PTR ds:[esi]
  423ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ce4:	aas    
  423ce5:	pop    ecx
  423ce6:	dec    ecx
  423ce7:	fisubr WORD PTR [ecx+0x57]
  423cea:	loop   0x423d1a
  423cec:	sbb    DWORD PTR [edi+0x29],0x3
  423cf0:	mov    WORD PTR [ecx+ebp*2-0x6a],ss
  423cf4:	(bad)  
  423cf5:	mov    ds:0x763ea4d4,al
  423cfa:	(bad)  
  423cfb:	out    dx,al
  423cfc:	inc    edi
  423cfd:	jmp    0x423d04
  423cff:	les    edi,FWORD PTR [ebx]
  423d01:	(bad)  
  423d02:	mov    edx,0x28c92740
  423d07:	lds    ebx,FWORD PTR [edx]
  423d09:	pop    ebp
  423d0a:	aaa    
  423d0b:	ins    BYTE PTR es:[edi],dx
  423d0c:	pop    ds
  423d0d:	test   al,0x61
  423d0f:	jo     0x423d5f
  423d11:	ret    
  423d12:	mov    bh,0x4
  423d14:	sub    WORD PTR [esi],0x3edb
  423d19:	xchg   esi,eax
  423d1a:	cdq    
  423d1b:	mov    ah,0x37
  423d1d:	inc    ebx
  423d1e:	jno    0x423d6d
  423d20:	inc    esi
  423d21:	add    al,0x62
  423d23:	mov    dh,bh
  423d25:	pop    esi
  423d26:	ret    
  423d27:	rcr    dh,1
  423d29:	neg    DWORD PTR [esi+0x7e4aa5d]
  423d2f:	inc    edx
  423d30:	(bad)  
  423d31:	inc    edx
  423d32:	mov    bh,0x17
  423d34:	sahf   
  423d35:	hlt    
  423d36:	xor    al,0x6c
  423d38:	retf   0x5236
  423d3b:	adc    DWORD PTR [eax],0x74d841e8
  423d41:	sub    bh,bl
  423d43:	push   edx
  423d44:	pop    ebx
  423d45:	xor    BYTE PTR [edi+0x14],bh
  423d48:	xchg   esi,eax
  423d49:	push   edi
  423d4a:	xchg   ecx,eax
  423d4b:	out    0xda,eax
  423d4d:	fstp   TBYTE PTR [edx]
  423d4f:	(bad)  
  423d50:	call   0xb300:0xb9e5f0fe
  423d57:	add    eax,0x82af6b8a
  423d5c:	xor    edi,eax
  423d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d5f:	pop    edi
  423d60:	sbb    dl,BYTE PTR [ecx-0x7d]
  423d63:	test   DWORD PTR gs:[edi+edx*2-0x5c],eax
  423d68:	fdiv   QWORD PTR [eax]
  423d6a:	popa   
  423d6b:	and    al,0x9b
  423d6d:	dec    esp
  423d6e:	xor    dh,BYTE PTR [ebp+0x61]
  423d71:	in     eax,0x3b
  423d73:	(bad)  
  423d74:	push   ebx
  423d75:	dec    edi
  423d76:	push   ebp
  423d77:	mov    ch,0xcf
  423d79:	shl    BYTE PTR [edx],cl
  423d7b:	aam    0xda
  423d7d:	arpl   WORD PTR [ecx+0x5e],si
  423d80:	and    al,0xa6
  423d82:	sbb    eax,0x62942412
  423d87:	mov    ds:0x935cb336,al
  423d8c:	(bad)  
  423d8d:	mov    ecx,0x42248a50
  423d92:	push   ds
  423d93:	loop   0x423d44
  423d95:	adc    DWORD PTR [esi+0x4e9bd6d7],eax
  423d9b:	sbb    eax,DWORD PTR [edx+0x17763824]
  423da1:	sub    cl,BYTE PTR [ecx+eiz*2]
  423da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da5:	sar    DWORD PTR [edx-0x66f8b700],1
  423dab:	push   edi
  423dac:	pop    esp
  423dad:	fdivr  QWORD PTR [edi+ecx*4-0x38ac6f48]
  423db4:	push   0x44
  423db6:	repz inc eax
  423db8:	rcr    DWORD PTR [edi-0x2e89a7e0],0x85
  423dbf:	xlat   BYTE PTR ds:[ebx]
  423dc0:	fisttp QWORD PTR [ecx]
  423dc2:	jge    0x423d9d
  423dc4:	xlat   BYTE PTR ds:[ebx]
  423dc5:	imul   esp,DWORD PTR [ebp-0x67],0x110fd22a
  423dcc:	ret    
  423dcd:	in     eax,dx
  423dce:	xchg   edi,eax
  423dcf:	std    
  423dd0:	out    0x93,eax
  423dd2:	cmp    DWORD PTR [ebx+0x43fb22b8],eax
  423dd8:	out    dx,al
  423dd9:	in     eax,0x35
  423ddb:	fwait
  423ddc:	leave  
  423ddd:	xor    ebp,DWORD PTR [esi-0xbcfcd67]
  423de3:	sbb    BYTE PTR [edx-0x65e3281b],cl
  423de9:	div    BYTE PTR [esi+ebp*4+0x0]
  423ded:	or     DWORD PTR [ebp-0x5bdd731e],0x10
  423df4:	xchg   ecx,eax
  423df5:	inc    edi
  423df6:	not    ch
  423df8:	dec    ebp
  423df9:	cmp    DWORD PTR [esi-0x67d355e0],0x9bafbe1d
  423e03:	sub    DWORD PTR es:[edi+0x32094384],0x457a87
  423e0e:	or     ecx,esp
  423e10:	shl    BYTE PTR [edi],1
  423e12:	mov    al,0x9c
  423e14:	mov    eax,ds:0x2220735a
  423e19:	mov    dh,0x4b
  423e1b:	or     cl,BYTE PTR [edx]
  423e1d:	xor    al,BYTE PTR [ecx-0x6c]
  423e20:	outs   dx,BYTE PTR ds:[esi]
  423e21:	arpl   WORD PTR [esi+ebp*2-0x4c691680],bx
  423e28:	push   eax
  423e29:	inc    eax
  423e2a:	es pop ebp
  423e2c:	and    eax,ecx
  423e2e:	inc    ecx
  423e2f:	pop    eax
  423e30:	fwait
  423e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e32:	sbb    DWORD PTR [ebp+0x175d368],edi
  423e38:	scas   eax,DWORD PTR es:[edi]
  423e39:	lahf   
  423e3a:	iret   
  423e3b:	mov    bh,0xac
  423e3d:	xor    al,0x2d
  423e3f:	pop    esp
  423e40:	test   al,ah
  423e42:	aam    0x21
  423e44:	jno    0x423dec
  423e46:	pop    edi
  423e47:	retf   0x8c79
  423e4a:	lahf   
  423e4b:	or     al,0xd4
  423e4d:	outs   dx,BYTE PTR ds:[esi]
  423e4e:	ss jge 0x423e47
  423e51:	dec    edi
  423e52:	inc    eax
  423e53:	lds    esi,FWORD PTR [esi]
  423e55:	add    eax,0x22410ff4
  423e5a:	sub    DWORD PTR [eax+0x4e336301],edx
  423e60:	mov    esi,0x7c8e2034
  423e65:	mov    edx,0x1f2a7cf2
  423e6a:	pop    ebp
  423e6b:	xlat   BYTE PTR ds:[ebx]
  423e6c:	dec    ebx
  423e6d:	mov    ebp,es
  423e6f:	shr    BYTE PTR [esi-0x6351f7bb],1
  423e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e76:	inc    esp
  423e77:	push   es
  423e78:	loope  0x423edf
  423e7a:	adc    eax,0x89414354
  423e7f:	pop    edx
  423e80:	jo     0x423e40
  423e82:	inc    edi
  423e83:	fmul   QWORD PTR [edi+0x0]
	...
  423e8e:	add    BYTE PTR [eax],al
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xffffffc3
  423e9e:	out    dx,al
  423e9f:	aad    0xa
  423ea1:	popf   
  423ea2:	mov    dh,0x1
  423ea4:	add    BYTE PTR [ebx+eax*1+0x6f9a0000],ch
  423eab:	xchg   esi,eax
  423eac:	sub    eax,0xfef676a4
  423eb1:	push   0x14149f55
  423eb6:	adc    DWORD PTR es:[ebx-0x77],esi
  423eba:	popa   
  423ebb:	inc    ecx
  423ebc:	imul   esp,DWORD PTR [ebp+0x20],0xffffffa3
  423ec0:	fwait
  423ec1:	gs out 0x6e,al
  423ec4:	fld    DWORD PTR [ecx-0x7d]
  423ec7:	(bad)  
  423ec8:	daa    
  423ec9:	xchg   esi,eax
  423eca:	mov    eax,0x1e6de6
  423ecf:	sub    eax,0xbd42af1f
  423ed4:	mov    bl,0x71
  423ed6:	xor    BYTE PTR [ebp+0x1b5023d4],bh
  423edc:	adc    DWORD PTR [ecx+0x42],0x1e
  423ee0:	and    eax,0xfce17515
  423ee5:	pusha  
  423ee6:	and    DWORD PTR [eax+0x32],0x7a
  423eea:	out    dx,eax
  423eeb:	ja     0x423f0b
  423eed:	enter  0x12f1,0x6
  423ef1:	adc    edi,DWORD PTR [eax+0x761483cf]
  423ef7:	fwait
  423ef8:	sub    al,0xb5
  423efa:	icebp  
  423efb:	and    al,0xed
  423efd:	clc    
  423efe:	(bad)  
  423eff:	and    BYTE PTR [edx+esi*4+0x51224754],bl
  423f06:	and    BYTE PTR [esi+0x2b],0x8a
  423f0a:	dec    DWORD PTR [eax-0x26]
  423f0d:	(bad)  
  423f0f:	sub    al,0x90
  423f11:	sbb    eax,0x7e
  423f14:	aad    0xdb
  423f16:	inc    BYTE PTR cs:[ecx-0x70]
  423f1a:	jno    0x423ebb
  423f1c:	xor    al,cl
  423f1e:	dec    edx
  423f1f:	pusha  
  423f20:	lea    esp,[ebx-0x6c80e83f]
  423f26:	jp     0x423f45
  423f28:	push   edx
  423f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f2a:	inc    eax
  423f2b:	lea    edx,[edi]
  423f2d:	push   eax
  423f2e:	hlt    
  423f2f:	xchg   ebx,eax
  423f30:	in     al,dx
  423f31:	retf   
  423f32:	ror    DWORD PTR [esp+ebx*1+0x20],0x23
  423f37:	cmp    DWORD PTR [eax+0x62],ecx
  423f3a:	stos   BYTE PTR es:[edi],al
  423f3b:	nop
  423f3c:	push   0x1b8d5722
  423f41:	pop    eax
  423f42:	bound  ebx,QWORD PTR [ebx]
  423f44:	adc    DWORD PTR [edi+ebp*1],eax
  423f47:	inc    ebx
  423f48:	jbe    0x423f3a
  423f4a:	jmp    0x4de5:0xdedb505d
  423f51:	repz inc eax
  423f53:	jnp    0x423f49
  423f55:	mov    di,0x418
  423f59:	pop    es
  423f5a:	pusha  
  423f5b:	mov    dl,0x22
  423f5d:	xchg   BYTE PTR [edi-0xd],ch
  423f60:	or     DWORD PTR [edx+0x5e],0x37
  423f64:	pop    edi
  423f65:	inc    esp
  423f66:	ds jecxz 0x423fcd
  423f69:	icebp  
  423f6a:	inc    ebp
  423f6b:	sti    
  423f6c:	cmp    esi,edx
  423f6e:	enter  0x97f9,0xd
  423f72:	sbb    eax,0xffffff99
  423f75:	push   esp
  423f76:	jmp    0xabaa0593
  423f7b:	jg     0x423f30
  423f7d:	push   ss
  423f7e:	mov    edi,0x98d22fcb
  423f83:	jbe    0x423f20
  423f85:	addr16 pushf 
  423f87:	fucomip st,st(0)
  423f89:	ja     0x423f5b
  423f8b:	dec    edi
  423f8c:	sub    ebx,DWORD PTR [edx+0x4f]
  423f8f:	mov    bh,0x5
  423f91:	dec    ebx
  423f92:	push   es
  423f93:	cli    
  423f94:	pop    eax
  423f95:	cdq    
  423f96:	repnz push esp
  423f98:	int    0xc9
  423f9a:	es clc 
  423f9c:	cmc    
  423f9d:	stc    
  423f9e:	test   BYTE PTR [ebx-0x60],0x95
  423fa2:	mov    edi,0x5c8ba891
  423fa7:	mov    dl,0x94
  423fa9:	(bad)  
  423faa:	xor    DWORD PTR [ebp-0x79f55454],edx
  423fb0:	dec    esp
  423fb1:	mov    esp,0xfdfbaecf
  423fb6:	cdq    
  423fb7:	out    dx,eax
  423fb8:	xchg   ebp,eax
  423fb9:	jae    0x423ff0
  423fbb:	jg     0x423f62
  423fbd:	or     BYTE PTR [edx+0x74],ah
  423fc0:	jmp    0xfd6b:0x966914be
  423fc7:	test   eax,0x2ed08d0
  423fcc:	test   BYTE PTR [edi+ebp*4],0x25
  423fd0:	in     eax,dx
  423fd1:	push   es
  423fd2:	adc    edi,DWORD PTR ds:0x3971cedd
  423fd8:	mov    DWORD PTR [eiz*2+0x711a56cf],ebx
  423fdf:	inc    esi
  423fe0:	mov    ch,0xf8
  423fe2:	sbb    al,0xd9
  423fe4:	jmp    0x424019
  423fe6:	push   esi
  423fe7:	aad    0x26
  423fe9:	dec    ebx
  423fea:	sbb    al,0xa2
  423fec:	jb     0x423fa1
  423fee:	jmp    0x60f1a606
  423ff3:	push   ss
  423ff4:	sbb    DWORD PTR [ecx+0x31],edi
  423ff7:	data16 ins BYTE PTR es:[edi],dx
  423ff9:	in     eax,0x7c
  423ffb:	stos   DWORD PTR es:[edi],eax
  423ffc:	mov    al,cl
  423ffe:	std    
  423fff:	push   ss
  424000:	inc    edi
  424001:	add    al,0x58
  424003:	adc    eax,0xafa1934a
  424008:	sbb    al,0x79
  42400a:	(bad)  
  42400b:	stos   DWORD PTR es:[edi],eax
  42400c:	icebp  
  42400d:	cmp    DWORD PTR [ecx],ebx
  42400f:	sti    
  424010:	inc    ebx
  424011:	mov    edx,DWORD PTR [esi]
  424013:	sub    ecx,DWORD PTR ds:0x97aabd3f
  424019:	sar    BYTE PTR [edi-0x63],cl
  42401c:	sub    al,0xca
  42401e:	and    eax,0x1a8e7866
  424023:	into   
  424024:	lods   eax,DWORD PTR ds:[esi]
  424025:	pop    ecx
  424026:	or     al,0xac
  424028:	jae    0x424039
  42402a:	pop    eax
  42402b:	bound  edx,QWORD PTR [ecx-0x7]
  42402e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42402f:	cmp    BYTE PTR [edi-0x11],dh
  424032:	retf   
  424033:	inc    ecx
  424034:	out    0x7a,eax
  424036:	popa   
  424037:	leave  
  424038:	mov    BYTE PTR [edi+0x584afb21],ch
  42403e:	cmp    esi,DWORD PTR [edx-0x8b16138]
  424044:	pop    ecx
  424045:	inc    ebp
  424046:	iret   
  424047:	sbb    esp,DWORD PTR [eax]
  424049:	dec    edi
  42404a:	and    edi,0x17b062c7
  424050:	xor    ch,BYTE PTR [edi-0x67]
  424053:	leave  
  424054:	cli    
  424055:	push   edi
  424056:	stos   BYTE PTR es:[edi],al
  424057:	mov    edi,DWORD PTR [ecx+0x48]
  42405a:	push   esi
  42405b:	adc    DWORD PTR [edi],edi
  42405d:	xor    eax,0xfdd6284c
  424062:	mov    esi,0x4cd1908b
  424067:	shl    dl,1
  424069:	sbb    bh,bh
  42406b:	xlat   BYTE PTR ds:[ebx]
  42406c:	sub    eax,DWORD PTR [esi]
  42406e:	sub    bl,cl
  424070:	inc    eax
  424071:	loope  0x4240ab
  424073:	icebp  
  424074:	or     ebp,DWORD PTR [edi]
  424076:	cmp    ch,BYTE PTR ds:0xcee6f5d0
  42407c:	jmp    0x693d571b
  424081:	lea    eax,[edx]
  424083:	xchg   DWORD PTR [ecx],edx
  424085:	shl    DWORD PTR [ebp+ecx*8-0x55],0x99
  42408a:	addr16 aas 
  42408c:	fist   WORD PTR [esi-0x8f95c51]
  424092:	cmp    BYTE PTR [ebp-0x23],dh
  424095:	call   0x6f16:0xd1e450ca
  42409c:	xchg   ebp,eax
  42409d:	and    DWORD PTR [ebp+0x6e5fadde],esi
  4240a3:	mov    ebp,0xfefd927f
  4240a8:	push   edx
  4240a9:	into   
  4240aa:	mov    ebp,ds
  4240ac:	and    DWORD PTR [esi+ebp*4-0x2e901197],eax
  4240b3:	das    
  4240b4:	in     eax,0x31
  4240b6:	sbb    al,0x5c
  4240b8:	sbb    bh,BYTE PTR fs:[eax]
  4240bb:	mov    BYTE PTR [ebp+0xa5ad009],bh
  4240c1:	mov    bl,dh
  4240c3:	xor    al,0xbf
  4240c5:	jle    0x42412c
  4240c7:	xor    al,0xe4
  4240c9:	dec    edi
  4240ca:	inc    ebx
  4240cb:	ret    0xad73
  4240ce:	test   BYTE PTR [eax+eax*2-0xee3716e],bl
  4240d5:	in     al,0x6b
  4240d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240d8:	dec    esp
  4240d9:	imul   ebx,DWORD PTR [eax-0x674e4dbf],0xef3d19a5
  4240e3:	mov    ecx,0x15c9fa11
  4240e8:	ins    DWORD PTR es:[edi],dx
  4240e9:	jb     0x4240e9
  4240eb:	fmul   DWORD PTR [edx+0x2994726e]
  4240f1:	sbb    al,0x55
  4240f3:	push   esi
  4240f4:	push   ds
  4240f5:	jge    0x42414f
  4240f7:	pop    es
  4240f8:	jecxz  0x4240d1
  4240fa:	std    
  4240fb:	jecxz  0x4240ef
  4240fd:	sahf   
  4240fe:	test   al,0x1e
  424100:	retf   0xaeb9
  424103:	push   ecx
  424104:	div    BYTE PTR [edi]
  424106:	out    0xbe,al
  424108:	push   esi
  424109:	jo     0x424116
  42410b:	lds    esp,FWORD PTR [eax-0x43]
  42410e:	jl     0x424170
  424110:	push   edi
  424111:	aad    0xd7
  424113:	fmul   DWORD PTR [ebp-0x42]
  424116:	inc    ecx
  424117:	jecxz  0x424178
  424119:	inc    ebp
  42411a:	bound  ecx,QWORD PTR [ebx-0x19]
  42411d:	inc    ecx
  42411e:	push   ecx
  42411f:	aad    0xa6
  424121:	retf   
  424122:	add    edi,ecx
  424124:	cmp    al,0xe3
  424126:	lahf   
  424127:	loopne 0x4241a7
  424129:	mov    esi,0x5f1557e7
  42412e:	(bad)  
  42412f:	jne    0x424174
  424131:	int    0x60
  424133:	mov    ah,0x7d
  424135:	out    0x8e,al
  424137:	or     eax,0x58401392
  42413c:	sub    DWORD PTR [ebx+0x6bcc8280],ebp
  424142:	call   0x27188226
  424147:	lods   eax,DWORD PTR ds:[esi]
  424148:	in     al,0x3d
  42414a:	sub    al,ah
  42414c:	cmp    esp,DWORD PTR [edi-0x161f35c0]
  424152:	fild   WORD PTR [eax+0x493fe706]
  424158:	push   esp
  424159:	fdiv   DWORD PTR [ecx+0x5cf6cf47]
  42415f:	xor    DWORD PTR [edx-0x15],ebx
  424162:	nop
  424163:	xchg   edx,eax
  424164:	test   edi,esp
  424166:	dec    ebx
  424167:	xchg   edx,eax
  424168:	dec    ebx
  424169:	and    al,0x6
  42416b:	and    BYTE PTR [ebx+0x2d177195],0x26
  424172:	pop    ebp
  424173:	mul    BYTE PTR [ebp-0x71b50343]
  424179:	outs   dx,BYTE PTR ds:[esi]
  42417a:	ret    
  42417b:	call   0x2611:0xc927769a
  424182:	xor    ch,BYTE PTR ds:0x989ee053
  424188:	xchg   esi,eax
  424189:	test   BYTE PTR [ebx],bh
  42418b:	cmp    ah,BYTE PTR [edi]
  42418d:	push   esp
  42418e:	xchg   esp,eax
  42418f:	xor    ecx,DWORD PTR [edi-0x4f]
  424192:	dec    ecx
  424193:	xchg   BYTE PTR [ebp-0x5e6f0766],dh
  424199:	and    BYTE PTR [ebp-0x2aa934f7],0xe3
  4241a0:	bound  esi,QWORD PTR [esi]
  4241a2:	or     ah,BYTE PTR [edi]
  4241a4:	mov    ebp,0x1a4dba71
  4241a9:	(bad)
  4241ac:	sahf   
  4241ad:	es cli 
  4241af:	(bad)  
  4241b0:	(bad)  
  4241b1:	fidivr DWORD PTR [esi+0x5931c3c8]
  4241b7:	xchg   ebx,eax
  4241b8:	scas   al,BYTE PTR es:[edi]
  4241b9:	rcl    DWORD PTR [ebp-0x8ea93df],0xa8
  4241c0:	dec    ebx
  4241c1:	sub    eax,0xc32df16b
  4241c6:	sbb    ah,BYTE PTR [ebp-0x6e]
  4241c9:	push   esp
  4241ca:	ja     0x4241a9
  4241cc:	cs enter 0xecbe,0x43
  4241d1:	popf   
  4241d2:	add    ch,BYTE PTR [ecx-0x49fdf9e2]
  4241d8:	ror    DWORD PTR [eax+ecx*8-0x2a],1
  4241dc:	aas    
  4241dd:	mov    ebx,0xf59feb3
  4241e2:	pushf  
  4241e3:	push   edx
  4241e4:	push   edi
  4241e5:	mov    dl,0xdc
  4241e7:	push   edx
  4241e8:	add    ch,BYTE PTR [ebx+ebp*4-0x7]
  4241ec:	push   ds
  4241ed:	rcl    BYTE PTR [ecx-0x44],cl
  4241f0:	sbb    BYTE PTR [edx+edi*1-0x21],dl
  4241f4:	xor    al,0xdb
  4241f6:	loope  0x42418e
  4241f8:	mov    edx,ebx
  4241fa:	jge    0x42427a
  4241fc:	test   eax,0xf3a2dfc2
  424201:	std    
  424202:	test   dh,dh
  424204:	sar    eax,1
  424206:	adc    bh,BYTE PTR [edx+0x76d59725]
  42420c:	aam    0x0
  42420e:	dec    edi
  42420f:	mov    eax,0x35c33a86
  424214:	pop    ecx
  424215:	xor    eax,0x8da4a641
  42421a:	mov    ebp,0xd30097ff
  42421f:	sbb    ebx,edx
  424221:	jno    0x4241d7
  424223:	jnp    0x42424f
  424225:	ds sti 
  424227:	out    dx,eax
  424228:	retf   0x4a56
  42422b:	add    eax,0x3b4c4c8e
  424230:	or     al,0x2
  424232:	cmp    dx,WORD PTR [eax+ebp*4]
  424236:	cmc    
  424237:	xor    al,0x50
  424239:	mov    cl,0x78
  42423b:	ins    BYTE PTR es:[edi],dx
  42423c:	loopne 0x4241ca
  42423e:	jnp    0x42420b
  424240:	das    
  424241:	test   BYTE PTR [eax+0x5a],ah
  424244:	int3   
  424245:	gs stos DWORD PTR es:[edi],eax
  424247:	xor    DWORD PTR [ebx-0xd],ecx
  42424a:	dec    ecx
  42424b:	and    esp,esp
  42424d:	clc    
  42424e:	inc    esp
  42424f:	push   ss
  424250:	into   
  424251:	cmp    esi,DWORD PTR [edi+0x8575]
	...
  42425f:	add    BYTE PTR [eax],al
  424261:	mul    ebp
  424263:	lahf   
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x3821212c],1
  42426f:	jmp    0x42422b
  424271:	dec    ecx
  424272:	mov    edx,0x3ac0001
  424277:	add    BYTE PTR [eax],al
  424279:	cmp    eax,DWORD PTR ds:0x742afb86
  42427f:	mov    al,ds:0xe54aff86
  424284:	add    ecx,ecx
  424286:	pop    ecx
  424287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424288:	jnp    0x424234
  42428a:	scas   eax,DWORD PTR es:[edi]
  42428b:	xchg   esp,eax
  42428c:	mov    edx,0xeb978b35
  424291:	push   ecx
  424292:	ins    BYTE PTR es:[edi],dx
  424293:	push   0x64
  424295:	(bad)  
  424297:	push   ds
  424298:	add    BYTE PTR [ebp+0x44],0x4d
  42429c:	jle    0x4242d4
  42429e:	push   0xa
  4242a0:	xchg   ecx,eax
  4242a1:	sbb    eax,0xa2676dcd
  4242a6:	xor    DWORD PTR [edi+0x6d],eax
  4242a9:	loopne 0x4242a1
  4242ab:	xor    al,0xf
  4242ad:	shr    dl,cl
  4242af:	cmp    cl,0x84
  4242b2:	pop    ss
  4242b3:	addr16 cmp esi,0xf2ea9cf1
  4242ba:	hlt    
  4242bb:	sbb    al,0xa7
  4242bd:	cmp    cl,BYTE PTR [edx]
  4242bf:	jo     0x4242fa
  4242c1:	es cmp eax,0xbeda56f1
  4242c7:	cmp    DWORD PTR [esi],eax
  4242c9:	js     0x424255
  4242cb:	push   edx
  4242cc:	mov    al,0x3a
  4242ce:	dec    ebx
  4242cf:	paddusb mm2,mm7
  4242d2:	out    dx,eax
  4242d3:	fdivr  QWORD PTR [edi-0x49f5c044]
  4242d9:	mov    eax,0xafd7a63b
  4242de:	cmp    BYTE PTR gs:[ebx],dh
  4242e1:	xlat   BYTE PTR ds:[ebx]
  4242e2:	jmp    0xfb68:0xcfc8ad6a
  4242e9:	dec    ebx
  4242ea:	dec    ecx
  4242eb:	cmc    
  4242ec:	pop    eax
  4242ed:	loope  0x424304
  4242ef:	pop    ds
  4242f0:	sub    cl,dh
  4242f2:	imul   BYTE PTR [ebx-0x4193c84e]
  4242f8:	push   0x262a9513
  4242fd:	std    
  4242fe:	xchg   ecx,eax
  4242ff:	cmp    eax,0x82ce7a2
  424304:	(bad)  
  424306:	data16 adc BYTE PTR [ecx],ch
  424309:	xor    ch,bh
  42430b:	test   DWORD PTR [esi],edx
  42430d:	sub    eax,0xaf5d67c
  424312:	lock loopne 0x4242cb
  424315:	test   DWORD PTR [edi+ecx*2-0x17],ecx
  424319:	push   eax
  42431a:	jbe    0x424301
  42431c:	cmp    BYTE PTR [edi+0x25],dl
  42431f:	es adc eax,0x1f00e1df
  424325:	jmp    0xdc77:0xfbddad23
  42432c:	and    al,0xdc
  42432e:	or     edx,DWORD PTR [eax-0x7d]
  424331:	mov    ah,0xf7
  424333:	aad    0xe7
  424335:	nop    DWORD PTR [ebx-0x59]
  424339:	(bad)  
  42433b:	loope  0x4242f9
  42433d:	add    eax,ecx
  42433f:	adc    ecx,ecx
  424341:	xchg   ecx,eax
  424342:	cmp    eax,0x85533386
  424347:	dec    eax
  424348:	push   ds
  424349:	pop    ecx
  42434a:	sbb    ecx,esi
  42434c:	add    BYTE PTR [eax+ecx*2],dl
  42434f:	mov    ebx,0x985b5b85
  424354:	out    0xb5,eax
  424356:	or     cl,bh
  424358:	js     0x42432e
  42435a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42435b:	ror    DWORD PTR [ebx+0x45506ac5],cl
  424361:	inc    esp
  424362:	call   0x935a4fa
  424367:	xchg   ecx,eax
  424368:	mov    bh,0x65
  42436a:	sbb    al,0xf2
  42436c:	pop    edi
  42436d:	das    
  42436e:	pop    es
  42436f:	push   0xd201d3bd
  424374:	and    BYTE PTR [edi+0x7f],bl
  424377:	mov    ebp,0x59b41b6b
  42437c:	inc    edi
  42437d:	in     eax,dx
  42437e:	bound  eax,QWORD PTR [edx-0x3f]
  424381:	inc    DWORD PTR ds:0xd6fdad8
  424387:	jno    0x42430b
  424389:	push   eax
  42438a:	addr16 pop eax
  42438c:	and    esp,esi
  42438e:	push   cs
  42438f:	rcr    BYTE PTR [esi+ebp*1],cl
  424392:	push   0xffffffbc
  424394:	sub    al,0xcb
  424396:	imul   edx,DWORD PTR [eax-0x5b310b23],0xb6815cc3
  4243a0:	rcl    BYTE PTR ds:0xa3457b1f,cl
  4243a6:	jbe    0x424367
  4243a8:	jmp    0xcdb6:0x371a5a8d
  4243af:	fild   WORD PTR [edi+0x8f2272e]
  4243b5:	out    dx,al
  4243b6:	mov    esp,0x32a46154
  4243bb:	lea    ebx,[edi]
  4243bd:	xchg   esi,eax
  4243be:	jp     0x424365
  4243c0:	sar    DWORD PTR [ecx],cl
  4243c2:	stos   BYTE PTR es:[edi],al
  4243c3:	je     0x4243e0
  4243c5:	xchg   esi,eax
  4243c6:	lods   eax,DWORD PTR ds:[esi]
  4243c7:	lods   eax,DWORD PTR ds:[esi]
  4243c8:	and    BYTE PTR [eax+0x3a],ch
  4243cb:	mov    al,fs:0x1afcec88
  4243d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243d2:	xchg   ebx,ebp
  4243d4:	ret    
  4243d5:	aad    0x18
  4243d7:	aas    
  4243d8:	pop    esi
  4243d9:	out    dx,al
  4243da:	nop
  4243db:	std    
  4243dc:	push   ebx
  4243dd:	repz lea edx,[edi]
  4243e0:	jmp    0x43e9349
  4243e5:	cmp    DWORD PTR [ebp-0x43],esi
  4243e8:	inc    edx
  4243e9:	mov    al,0x34
  4243eb:	hlt    
  4243ec:	sbb    ah,dh
  4243ee:	imul   ah
  4243f0:	sub    DWORD PTR [edi+0x2],edx
  4243f3:	or     ebp,eax
  4243f5:	lea    ebp,[edx+0x635583e5]
  4243fb:	push   es
  4243fc:	(bad)  
  4243fd:	mov    ebx,0xeeb0214e
  424402:	jo     0x4243f2
  424404:	pushf  
  424405:	jge    0x424458
  424407:	loop   0x424482
  424409:	inc    ebp
  42440a:	out    dx,eax
  42440b:	mov    bl,0x20
  42440d:	xchg   esp,eax
  42440e:	in     eax,dx
  42440f:	in     al,dx
  424410:	xchg   ebx,eax
  424411:	mov    DWORD PTR [ebx],edi
  424413:	rcr    ebp,0x0
  424416:	jbe    0x424448
  424418:	inc    edx
  424419:	aas    
  42441a:	xchg   ebx,eax
  42441b:	fcomip st,st(6)
  42441d:	stos   DWORD PTR es:[edi],eax
  42441e:	pusha  
  42441f:	push   edi
  424420:	add    al,0x66
  424422:	imul   esp,DWORD PTR [ecx+0x4b85f8d7],0x3
  424429:	xor    eax,0x229d444c
  42442e:	mov    ah,0xf3
  424430:	add    ah,BYTE PTR [ecx-0x3f2c20a0]
  424436:	pusha  
  424437:	dec    edx
  424438:	pop    ecx
  424439:	fldcw  WORD PTR [ebp+0x7b]
  42443c:	add    bl,bl
  42443e:	pop    ecx
  42443f:	inc    eax
  424440:	cmp    DWORD PTR [eax],esi
  424442:	jo     0x4243d0
  424444:	inc    eax
  424445:	xchg   edx,eax
  424446:	daa    
  424447:	cli    
  424448:	aaa    
  424449:	fnstsw WORD PTR [edi]
  42444b:	loope  0x424459
  42444d:	xor    DWORD PTR [ebx+0x74d48c56],ecx
  424453:	das    
  424454:	sub    ch,BYTE PTR ds:0xb44ca857
  42445a:	pop    ss
  42445b:	setb   BYTE PTR [ebx]
  42445e:	mov    ds:0xa409806f,al
  424463:	nop
  424464:	fwait
  424465:	pop    es
  424466:	iret   
  424467:	mov    cl,0x67
  424469:	pop    ebx
  42446a:	cmp    eax,0x46e7ac25
  42446f:	sub    cl,0xc6
  424472:	or     cl,dh
  424474:	aaa    
  424475:	jecxz  0x42446d
  424477:	out    dx,eax
  424478:	cdq    
  424479:	ret    0x6360
  42447c:	dec    ebp
  42447d:	or     ecx,ebp
  42447f:	xchg   DWORD PTR [eax-0x6c],esp
  424482:	sub    eax,0xf63c4592
  424487:	jnp    0x4244fd
  424489:	pushaw 
  42448b:	enter  0x43c4,0x7d
  42448f:	in     eax,0xa4
  424491:	jle    0x42442d
  424493:	cwde   
  424494:	inc    edx
  424495:	xchg   DWORD PTR [ebx-0xe06b322],edi
  42449b:	fwait
  42449c:	das    
  42449d:	popf   
  42449e:	mov    ch,dl
  4244a0:	or     eax,0xbb11cac7
  4244a5:	cmc    
  4244a6:	es dec esi
  4244a8:	addr16 jno 0x4244e5
  4244ab:	test   edx,ecx
  4244ad:	ror    DWORD PTR [ecx],cl
  4244af:	stos   BYTE PTR es:[edi],al
  4244b0:	dec    esi
  4244b1:	ret    0xe93a
  4244b4:	into   
  4244b5:	or     BYTE PTR [eax+0xb],bl
  4244b8:	(bad)  
  4244b9:	or     eax,0x7baa57af
  4244be:	push   ds
  4244bf:	push   ebx
  4244c0:	add    BYTE PTR [eax-0x5c],dl
  4244c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244c5:	jo     0x424462
  4244c7:	inc    edi
  4244c8:	sub    ch,bl
  4244ca:	in     al,dx
  4244cb:	sub    eax,0x6e25c260
  4244d0:	inc    edi
  4244d1:	mov    ah,0xa6
  4244d3:	loop   0x424476
  4244d5:	jge    0x4244b4
  4244d7:	xor    ecx,DWORD PTR [esi-0x7b8df653]
  4244dd:	sub    ebx,DWORD PTR [ebp-0x13]
  4244e0:	or     DWORD PTR [edi-0x4b],0xfffffffe
  4244e4:	data16 in al,dx
  4244e6:	jno    0x4244bb
  4244e8:	push   ds
  4244e9:	cmp    DWORD PTR [eiz*2+0x31be7073],ecx
  4244f0:	mov    ds:0x2c857513,eax
  4244f5:	data16 stc 
  4244f7:	jge    0x42454e
  4244f9:	jo     0x424537
  4244fb:	ficomp WORD PTR [edi]
  4244fd:	push   edi
  4244fe:	int    0x1e
  424500:	jmp    0xf231:0x4ae5ce51
  424507:	sbb    eax,0xda8d9db8
  42450c:	or     al,BYTE PTR [esi-0x2a]
  42450f:	(bad)  
  424510:	hlt    
  424511:	jecxz  0x424569
  424513:	mov    ebx,ecx
  424515:	outs   dx,DWORD PTR ds:[esi]
  424516:	mov    DWORD PTR [eax+eax*1+0x25c94953],ebp
  42451d:	mov    eax,ds:0x83974ca
  424522:	rcr    DWORD PTR [edi-0x67],1
  424525:	adc    al,0x30
  424527:	repz (bad) 
  424529:	jns    0x4244f3
  42452b:	dec    ebx
  42452c:	dec    eax
  42452d:	or     ah,BYTE PTR [ecx]
  42452f:	call   0x75fc:0x3448275e
  424536:	xchg   esi,eax
  424537:	mov    bh,0xfd
  424539:	or     bl,BYTE PTR [esi]
  42453b:	cmp    edi,DWORD PTR es:[ebx-0x3a2acd5b]
  424542:	out    0x13,eax
  424544:	in     eax,dx
  424545:	imul   esi,DWORD PTR [ebp+0x36],0xf481e7b5
  42454c:	sub    eax,0x50f28e18
  424551:	popf   
  424552:	shl    BYTE PTR [ecx],0x48
  424555:	mov    ch,0xc6
  424557:	add    eax,0xbba88b4e
  42455c:	lods   al,BYTE PTR ds:[esi]
  42455d:	ror    ebx,1
  42455f:	jb     0x424502
  424561:	pop    ebp
  424562:	sahf   
  424563:	mov    bh,0x75
  424565:	fild   WORD PTR [edi-0x66]
  424568:	mov    ds:0xd069ec6d,eax
  42456d:	push   ebp
  42456e:	leave  
  42456f:	repnz mov ecx,0xbf4230e1
  424575:	xchg   esi,eax
  424576:	test   DWORD PTR [ebx],esi
  424578:	mov    ds:0xc195fdb,eax
  42457d:	ja     0x424580
  42457f:	jne    0x4245a6
  424581:	in     al,dx
  424582:	mov    ch,BYTE PTR [ebp+0x5a22b866]
  424588:	and    ecx,edx
  42458a:	pop    edx
  42458b:	mov    ?,ecx
  42458d:	mov    eax,0xb052f519
  424592:	or     DWORD PTR [esi+0x1d6e277b],esp
  424598:	(bad)  
  424599:	mov    dh,0xf9
  42459b:	add    esp,eax
  42459d:	xchg   DWORD PTR [edx],ecx
  42459f:	dec    esi
  4245a0:	push   0x2f
  4245a2:	and    ch,BYTE PTR [eax-0x6b]
  4245a5:	and    esp,edi
  4245a7:	push   esp
  4245a8:	pop    esp
  4245a9:	js     0x42460f
  4245ab:	inc    esp
  4245ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ad:	adc    al,0x95
  4245af:	popa   
  4245b0:	pop    esi
  4245b1:	int3   
  4245b2:	nop
  4245b3:	and    DWORD PTR [ecx-0x75],ecx
  4245b6:	xchg   esi,eax
  4245b7:	mov    WORD PTR ds:0xd974baa9,gs
  4245bd:	xor    esp,edx
  4245bf:	mov    bl,0xbd
  4245c1:	xor    DWORD PTR [esi-0x62c70e1a],eax
  4245c7:	ret    0xd3f2
  4245ca:	int3   
  4245cb:	jno    0x42458b
  4245cd:	test   eax,0xbc9f4127
  4245d2:	mov    edx,0x7bdefe3d
  4245d7:	mov    eax,ds:0x90480a6f
  4245dc:	sbb    cl,dl
  4245de:	dec    ebx
  4245df:	shl    dh,1
  4245e1:	pop    ecx
  4245e2:	mov    bh,0x7c
  4245e4:	call   0xe9ca:0x7f2889bb
  4245eb:	leave  
  4245ec:	mov    edx,0x1095287d
  4245f1:	cmp    eax,0x3700e7ee
  4245f6:	gs cmp al,0x6
  4245f9:	pop    ecx
  4245fa:	xchg   esi,eax
  4245fb:	aad    0x48
  4245fd:	cmp    BYTE PTR [ebp+0x6c],al
  424600:	fdivr  DWORD PTR [edx]
  424602:	and    DWORD PTR [edx+0x58],esi
  424605:	mov    ah,0xad
  424607:	inc    eax
  424608:	sub    al,0x7d
  42460a:	idiv   DWORD PTR [ecx]
  42460c:	or     cl,dh
  42460e:	jmp    0x424621
  424610:	mov    dl,0x5e
  424612:	test   BYTE PTR [edi],ch
  424614:	popa   
  424615:	std    
  424616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424617:	xlat   BYTE PTR ds:[ebx]
  424618:	mov    dl,BYTE PTR [esi-0x73]
  42461b:	inc    DWORD PTR [esi]
  42461d:	(bad)  [ebp+0x418a36d9]
  424623:	or     DWORD PTR [ecx],edi
	...
  424631:	imul   ecx,DWORD PTR [edi+0x7dee7c8a],0xffffffff
  424638:	lahf   
  424639:	push   esi
  42463a:	jl     0x4245fd
  42463c:	dec    edi
  42463d:	pop    es
  42463e:	pop    ss
  42463f:	cmc    
  424640:	fcomip st,st(5)
  424642:	mov    ebp,0x3ac0001
  424647:	add    BYTE PTR [eax],al
  424649:	sbb    al,0x7f
  42464b:	popa   
  42464c:	mov    ecx,DWORD PTR [eax+0x23e16081]
  424652:	into   
  424653:	lea    edx,[ecx]
  424655:	stos   DWORD PTR es:[edi],eax
  424656:	dec    ebx
  424657:	pop    edi
  424658:	mov    WORD PTR [ecx],fs
  42465a:	daa    
  42465b:	push   ss
  42465c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42465d:	mov    dh,0x4c
  42465f:	cmp    eax,0x36e7298
  424664:	mov    WORD PTR ds:0x74962c31,gs
  42466a:	leave  
  42466b:	sbb    esp,DWORD PTR [eax]
  42466d:	mov    ch,0x78
  42466f:	ds loopne 0x424638
  424672:	mov    ebp,0x25b525d0
  424677:	dec    ebp
  424678:	mov    al,ds:0x922c6cb2
  42467d:	retf   
  42467e:	pop    ss
  42467f:	mov    ecx,0x3a191cb5
  424684:	or     al,BYTE PTR [ecx]
  424686:	jl     0x4246af
  424688:	mov    al,ds:0xa71dbb3f
  42468d:	ins    BYTE PTR es:[edi],dx
  42468e:	retf   0x4f5f
  424691:	push   edi
  424692:	xchg   esp,esi
  424694:	jmp    0x572a:0x174480e7
  42469b:	add    al,0xa
  42469d:	and    al,0x71
  42469f:	iret   
  4246a0:	test   al,0x5c
  4246a2:	jnp    0x4246a3
  4246a4:	xor    al,0xbb
  4246a6:	mov    ebp,0x93787318
  4246ab:	hlt    
  4246ac:	jbe    0x42466d
  4246ae:	mov    eax,0xfddc41cd
  4246b3:	int    0x71
  4246b5:	imul   di,WORD PTR [edi-0x23],0x5f
  4246ba:	sub    DWORD PTR [edi+0x39],eax
  4246bd:	pop    ds
  4246be:	dec    esi
  4246bf:	xchg   ecx,edi
  4246c1:	lea    eax,[edi-0x1c]
  4246c4:	and    esp,DWORD PTR [edi+0x5a3e7db2]
  4246ca:	sub    al,0xf8
  4246cc:	out    0xa9,al
  4246ce:	add    eax,DWORD PTR [ebx+0x38]
  4246d1:	add    edx,DWORD PTR [edi]
  4246d3:	sar    BYTE PTR [edx+0x16],cl
  4246d6:	push   es
  4246d7:	sub    esp,ecx
  4246d9:	(bad)  
  4246da:	pop    ss
  4246db:	cld    
  4246dc:	xchg   edi,eax
  4246dd:	bound  eax,QWORD PTR [esi-0x8664055]
  4246e3:	popf   
  4246e4:	scas   eax,DWORD PTR es:[edi]
  4246e5:	into   
  4246e6:	pusha  
  4246e7:	or     al,0xea
  4246e9:	cdq    
  4246ea:	add    ebx,DWORD PTR [ecx+0x5d]
  4246ed:	cmp    al,BYTE PTR [esi+edx*1]
  4246f0:	shl    DWORD PTR [esi+0x58],0x6
  4246f4:	sbb    ch,bh
  4246f6:	shl    bl,1
  4246f8:	jnp    0x42470a
  4246fa:	lods   eax,DWORD PTR ds:[esi]
  4246fb:	outs   dx,BYTE PTR ds:[esi]
  4246fc:	cli    
  4246fd:	cmp    BYTE PTR [esi+0x661fb7fb],bh
  424703:	es test al,0xf2
  424706:	in     al,0xa7
  424708:	push   0x75f5f8c8
  42470d:	js     0x424779
  42470f:	xor    ah,BYTE PTR [edi]
  424711:	pop    esi
  424712:	xor    dl,bl
  424714:	ror    BYTE PTR [esi-0x2b794b6e],0xb
  42471b:	add    eax,0xc6d32b62
  424720:	xchg   DWORD PTR [edx-0x38],edx
  424723:	cdq    
  424724:	sbb    DWORD PTR [edi-0x5a],ecx
  424727:	inc    edx
  424728:	in     eax,0xcf
  42472a:	mov    ebp,0x270783d6
  42472f:	aas    
  424730:	sub    eax,0x4fa5c550
  424735:	shr    DWORD PTR [edx+0x3eb42c90],1
  42473b:	mov    bh,BYTE PTR [edi]
  42473d:	scas   eax,DWORD PTR es:[edi]
  42473e:	and    DWORD PTR ss:[edi+0xc],ecx
  424742:	ret    0xd245
  424745:	cmp    al,0x1e
  424747:	jo     0x4247a4
  424749:	dec    eax
  42474a:	push   ebx
  42474b:	push   ecx
  42474c:	shl    BYTE PTR [esi-0x95f6bcb],0x11
  424753:	fcomip st,st(1)
  424755:	hlt    
  424756:	inc    eax
  424757:	nop
  424758:	mov    ebx,0x6f102daf
  42475d:	adc    DWORD PTR [edi-0x346e560a],ebp
  424763:	mov    DWORD PTR [eax-0x2a90601],eax
  424769:	xchg   ebx,eax
  42476a:	adc    BYTE PTR [ebp+0x1d],dh
  42476d:	mov    al,0x6e
  42476f:	fdivr  QWORD PTR [edi]
  424771:	pop    edx
  424772:	add    ecx,ebx
  424774:	repnz pop ebp
  424776:	call   0xaf7523a4
  42477b:	jle    0x4247f7
  42477d:	arpl   WORD PTR [edx],di
  42477f:	push   ecx
  424780:	sub    dl,0x27
  424783:	xchg   edx,eax
  424784:	outs   dx,BYTE PTR ds:[esi]
  424785:	add    cl,cl
  424787:	mov    ds:0x25a2aff0,al
  42478c:	or     dh,dl
  42478e:	xchg   ecx,eax
  42478f:	out    0xd1,al
  424791:	jge    0x42479c
  424793:	das    
  424794:	outs   dx,DWORD PTR ds:[esi]
  424795:	lds    ebp,FWORD PTR [eax+0x5e0e3add]
  42479b:	pop    ebx
  42479c:	daa    
  42479d:	loop   0x424806
  42479f:	les    ecx,FWORD PTR ds:0x11561edc
  4247a5:	iret   
  4247a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247a7:	sbb    ch,ch
  4247a9:	stos   DWORD PTR es:[edi],eax
  4247aa:	jnp    0x42474d
  4247ac:	jecxz  0x42478d
  4247ae:	add    esi,DWORD PTR [ebp+esi*4+0x292bbfd3]
  4247b5:	mov    esp,DWORD PTR [ebx-0x4c6ef3fa]
  4247bb:	and    eax,0xdba5044a
  4247c0:	aam    0xa0
  4247c2:	fs das 
  4247c4:	int    0x80
  4247c6:	mov    bl,0xff
  4247c8:	clc    
  4247c9:	mov    dh,0xa5
  4247cb:	push   ebx
  4247cc:	push   esi
  4247cd:	mov    DWORD PTR [ebp-0x62],ebp
  4247d0:	xchg   esi,eax
  4247d1:	cdq    
  4247d2:	ja     0x42478e
  4247d4:	ss xchg ecx,eax
  4247d6:	cmp    al,0x1d
  4247d8:	lahf   
  4247d9:	jl     0x4247d9
  4247db:	fisttp WORD PTR [ebp-0x7]
  4247de:	xor    DWORD PTR [ebp-0x6e],ebp
  4247e1:	sbb    al,0x1
  4247e3:	xor    eax,0x89c18119
  4247e8:	aas    
  4247e9:	in     eax,0xc
  4247eb:	(bad)  
  4247ec:	rcl    bh,1
  4247ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247ef:	pop    es
  4247f0:	repnz call 0x946a:0xb29ce3cd
  4247f8:	clc    
  4247f9:	xor    eax,0xb335fa35
  4247fe:	cdq    
  4247ff:	cdq    
  424800:	mov    bl,0xfb
  424802:	sar    DWORD PTR [ebx],0x53
  424805:	retf   0x799f
  424808:	mov    bh,BYTE PTR [edx]
  42480a:	stos   DWORD PTR es:[edi],eax
  42480b:	jmp    0x6a02ae60
  424810:	push   cs
  424811:	cmp    DWORD PTR [ecx-0x10],esi
  424814:	xchg   BYTE PTR [ecx-0x50],ch
  424817:	and    bl,al
  424819:	outs   dx,BYTE PTR ds:[esi]
  42481a:	push   esp
  42481b:	push   es
  42481c:	adc    dh,0x11
  42481f:	clc    
  424820:	stos   BYTE PTR es:[edi],al
  424821:	out    dx,al
  424822:	sub    al,ch
  424824:	xchg   ebx,eax
  424825:	sbb    al,0x37
  424827:	push   esp
  424828:	and    ecx,DWORD PTR [eax-0x70144352]
  42482e:	imul   esi,DWORD PTR [esp+edx*4-0xb4a1468],0xffffff9b
  424836:	xchg   edi,eax
  424837:	es repnz stos BYTE PTR es:[edi],al
  42483a:	call   0x476f:0x2831b38f
  424841:	push   edx
  424842:	iret   
  424843:	or     cl,bh
  424845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424846:	es in  al,0x9
  424849:	popa   
  42484a:	xchg   esi,eax
  42484b:	pop    ebp
  42484c:	cvtdq2ps xmm5,XMMWORD PTR [edx-0x59]
  424850:	out    0x8c,al
  424852:	jp     0x424858
  424854:	call   0x4d68:0xb2327a
  42485b:	aad    0xf5
  42485d:	add    ah,BYTE PTR [edx-0x3c03b495]
  424863:	sti    
  424864:	or     ebp,esp
  424866:	mov    esi,0x5d6af480
  42486b:	inc    eax
  42486c:	sub    BYTE PTR [ebp+0x1609b14c],0xf4
  424873:	and    dh,ah
  424875:	cli    
  424876:	pop    esi
  424877:	hlt    
  424878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424879:	xchg   edx,eax
  42487a:	ror    DWORD PTR [ecx],0xdf
  42487d:	inc    ecx
  42487e:	xchg   esp,eax
  42487f:	sub    bh,BYTE PTR [ecx]
  424881:	popf   
  424882:	and    DWORD PTR gs:[ebp+0x61],edx
  424886:	sbb    DWORD PTR [esi+0x1c],edi
  424889:	lea    edi,[esi+edx*2]
  42488c:	in     eax,dx
  42488d:	push   0xbdbc57e3
  424892:	into   
  424893:	nop
  424894:	sbb    edi,ebp
  424896:	push   cs
  424897:	sti    
  424898:	mov    DWORD PTR [edi+0x65],ecx
  42489b:	pop    edi
  42489c:	xchg   edi,eax
  42489d:	mov    al,0x91
  42489f:	dec    esi
  4248a0:	inc    eax
  4248a1:	imul   eax,DWORD PTR [eax+0x5485f22c],0xb72bf1d
  4248ab:	mov    eax,ds:0x39cc7933
  4248b0:	jp     0x4248bd
  4248b2:	test   eax,0x7ce1b95d
  4248b7:	fadd   st,st(6)
  4248b9:	adc    edx,DWORD PTR [ebx+0x70]
  4248bc:	call   DWORD PTR ds:0x23e8c877
  4248c2:	jmp    0x4248ee
  4248c4:	test   edi,esi
  4248c6:	mov    ecx,0xee2279f9
  4248cb:	push   ds
  4248cc:	mov    al,0xda
  4248ce:	xor    DWORD PTR ds:0x77367c23,edi
  4248d4:	daa    
  4248d5:	mov    al,0xe1
  4248d7:	(bad)  
  4248d9:	cmp    al,0xc2
  4248db:	and    al,0x65
  4248dd:	test   eax,0xf0384bf5
  4248e2:	addr16 leave 
  4248e4:	cdq    
  4248e5:	inc    edx
  4248e6:	sub    al,al
  4248e8:	inc    edi
  4248e9:	les    eax,FWORD PTR [edx+0x1d]
  4248ec:	mov    al,0xbf
  4248ee:	or     BYTE PTR [esi-0x339d8235],dh
  4248f4:	arpl   WORD PTR [edi],bp
  4248f6:	sub    eax,0xd4ceec92
  4248fb:	sub    esp,ecx
  4248fd:	not    DWORD PTR [ecx+esi*8]
  424900:	(bad)  [eax-0x2971c8f7]
  424906:	es das 
  424908:	fstp   TBYTE PTR [ecx]
  42490a:	push   ecx
  42490b:	xchg   ebx,eax
  42490c:	inc    DWORD PTR [eax-0x66bdc1f8]
  424912:	addr16 out dx,eax
  424914:	(bad)  
  424915:	cld    
  424916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424917:	lea    ecx,[edx]
  424919:	mov    ebp,0xc0cb69df
  42491e:	sti    
  42491f:	repnz mov edi,0x16244e8e
  424925:	imul   ecx,DWORD PTR [esi+0x6d],0xffffffa5
  424929:	adc    eax,DWORD PTR [esi]
  42492b:	cwde   
  42492c:	dec    di
  42492e:	(bad)  
  42492f:	push   ds
  424930:	aad    0xf2
  424932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424933:	or     dl,BYTE PTR [edi]
  424935:	xchg   edi,eax
  424936:	mov    ds:0x28d165ac,eax
  42493b:	or     ecx,DWORD PTR [esi+ecx*1+0x7f]
  42493f:	or     eax,DWORD PTR [eax-0x1f678f84]
  424945:	(bad)  
  424947:	dec    edi
  424948:	and    cl,BYTE PTR [ebp+0x73]
  42494b:	test   ebx,esp
  42494d:	cmp    bh,BYTE PTR [esi]
  42494f:	cwde   
  424950:	aad    0x92
  424952:	mov    DWORD PTR [eax-0x1c],ebp
  424955:	(bad)  
  424956:	jmp    0x2250:0x3e9b479c
  42495d:	jne    0x424985
  42495f:	into   
  424960:	sbb    BYTE PTR [ebp+ebp*1-0x2168f789],0xa8
  424968:	or     DWORD PTR [ebp-0x2eeb8616],ebx
  42496e:	dec    edx
  42496f:	clc    
  424970:	or     edx,DWORD PTR [ecx+edx*1]
  424973:	xor    edx,edx
  424975:	fist   WORD PTR [ecx-0xd]
  424978:	addr16 hlt 
  42497a:	jmp    0xd65:0xdf94b5b9
  424981:	in     eax,dx
  424982:	rcr    esi,0xea
  424985:	sub    edi,esp
  424987:	in     al,dx
  424988:	or     BYTE PTR [eax+0x38],cl
  42498b:	fnstenv [eax-0x63]
  42498e:	sub    cl,BYTE PTR [ebx-0xa]
  424991:	and    bh,BYTE PTR [ecx+ebp*4+0x2c6950ae]
  424998:	dec    ebx
  424999:	popa   
  42499a:	adc    esi,DWORD PTR [edx-0x42f21a3d]
  4249a0:	mov    al,0xde
  4249a2:	pop    ds
  4249a3:	xor    DWORD PTR [ebx],0xffffff96
  4249a6:	cld    
  4249a7:	imul   esi,DWORD PTR [eax],0x7a
  4249aa:	jb     0x424975
  4249ac:	push   0xffffffab
  4249ae:	dec    edx
  4249af:	repnz lds ebx,FWORD PTR [ecx+ecx*2]
  4249b3:	popa   
  4249b4:	(bad)  
  4249b5:	out    dx,al
  4249b6:	inc    ebx
  4249b7:	inc    edx
  4249b8:	psrld  mm3,QWORD PTR [esi]
  4249bb:	std    
  4249bc:	sub    DWORD PTR [edx],0x4
  4249bf:	test   eax,0x5b473fbd
  4249c4:	and    esp,DWORD PTR [edx]
  4249c6:	stos   DWORD PTR es:[edi],eax
  4249c7:	jle    0x424983
  4249c9:	xor    BYTE PTR [ebx+0x400f5586],cl
  4249cf:	ins    DWORD PTR es:[edi],dx
  4249d0:	push   es
  4249d1:	xchg   edx,eax
  4249d2:	outs   dx,DWORD PTR ds:[esi]
  4249d3:	jb     0x4249ef
  4249d5:	rcl    BYTE PTR [ecx],cl
  4249d7:	out    0x74,eax
  4249d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249da:	call   0x85e2:0xe9692530
  4249e1:	pop    ebx
  4249e2:	pop    edi
  4249e3:	arpl   ax,sp
  4249e5:	add    edx,DWORD PTR gs:[esi]
  4249e8:	mov    ds:0xb0d49529,eax
  4249ed:	mov    BYTE PTR [ebp+edx*8-0x76],dh
  4249f1:	cs inc edx
  4249f3:	fistp  WORD PTR [eax+0x0]
	...
  424a01:	push   ebp
  424a02:	push   0xffffffe6
  424a04:	mov    bl,0xff
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	rcr    BYTE PTR [edx+esi*8],cl
  424a10:	mov    cl,0xa1
  424a12:	rol    DWORD PTR [ecx],0x0
  424a15:	lods   al,BYTE PTR ds:[esi]
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    dh,dh
  424a1a:	xchg   edx,eax
  424a1b:	adc    edi,DWORD PTR [edx-0x1d94cbbc]
  424a21:	sahf   
  424a22:	fwait
  424a23:	sbb    DWORD PTR [esi-0x2233d19d],edi
  424a29:	xlat   BYTE PTR ds:[ebx]
  424a2a:	fs xor al,0xf
  424a2d:	ret    0x8d11
  424a30:	repz xchg esp,eax
  424a32:	fs aad 0x33
  424a35:	sbb    DWORD PTR [ebx-0x240b194c],ecx
  424a3b:	in     eax,0xd8
  424a3d:	lds    esi,FWORD PTR [ebp-0x14bc47fa]
  424a43:	cld    
  424a44:	retf   
  424a45:	sub    BYTE PTR [ecx-0x23],ah
  424a48:	in     al,dx
  424a49:	sub    al,0x3b
  424a4b:	sbb    BYTE PTR [edx-0x27],bh
  424a4e:	adc    BYTE PTR [edi],al
  424a50:	cmp    eax,0x840d2e44
  424a55:	jmp    0x3c614bba
  424a5a:	mov    ds:0xe266e7d4,eax
  424a5f:	ins    DWORD PTR es:[edi],dx
  424a60:	or     bh,BYTE PTR [edx-0xc]
  424a63:	fmul   QWORD PTR [eax-0x17ded12a]
  424a69:	(bad)  
  424a6a:	xchg   ebx,eax
  424a6b:	sar    BYTE PTR [eax-0x1b58a0a5],1
  424a71:	test   DWORD PTR [ebp+0x7b],esi
  424a74:	cdq    
  424a75:	popf   
  424a76:	out    dx,eax
  424a77:	test   DWORD PTR [edi+0x61],ecx
  424a7a:	mov    bl,0x74
  424a7c:	mov    ch,0xc8
  424a7e:	xchg   ebx,eax
  424a7f:	push   esi
  424a80:	adc    bl,BYTE PTR [esi+0x1d]
  424a83:	fnstsw WORD PTR [eax]
  424a85:	add    eax,0x408cf0b4
  424a8a:	mov    edi,eax
  424a8c:	mov    BYTE PTR [edx+0x1e37298a],bh
  424a92:	pusha  
  424a93:	jne    0x424a82
  424a95:	ret    0xc9f8
  424a98:	cli    
  424a99:	jl     0x424a52
  424a9b:	adc    eax,0xc8fe80c2
  424aa0:	push   0x21783457
  424aa5:	test   DWORD PTR [esi],edi
  424aa7:	inc    ecx
  424aa8:	push   esp
  424aa9:	lods   eax,DWORD PTR ds:[esi]
  424aaa:	pop    edx
  424aab:	int3   
  424aac:	mov    edi,0x74529400
  424ab1:	sub    BYTE PTR [ecx+0x66],al
  424ab4:	dec    ecx
  424ab5:	add    esp,esp
  424ab7:	inc    ebx
  424ab8:	xchg   ebx,eax
  424ab9:	mov    esp,0x17a5078a
  424abe:	sar    DWORD PTR [edi-0x21],0x26
  424ac2:	lock popf 
  424ac4:	jb     0x424a88
  424ac6:	jnp    0x424af7
  424ac8:	mov    ebp,DWORD PTR [esi-0x5ddcf08c]
  424ace:	sbb    eax,0x3ee8cd1a
  424ad3:	jo     0x424b4d
  424ad5:	(bad)  
  424ad6:	es mov esp,0x24ddb988
  424adc:	jno    0x424abd
  424ade:	or     BYTE PTR [edi-0xd1e7141],0x97
  424ae5:	pop    ecx
  424ae6:	sub    eax,0x628668c3
  424aeb:	add    edi,esp
  424aed:	mov    cl,0xb6
  424aef:	(bad)  
  424af1:	mov    edi,0xb97df15c
  424af6:	sbb    ch,BYTE PTR [edx-0x3]
  424af9:	(bad)
  424afd:	cmp    al,0xbd
  424aff:	into   
  424b00:	stos   DWORD PTR es:[edi],eax
  424b01:	leave  
  424b02:	stos   BYTE PTR es:[edi],al
  424b03:	jnp    0x424b12
  424b05:	ret    0xb472
  424b08:	call   0x8f261313
  424b0d:	gs xor eax,0xe3f04411
  424b13:	aam    0xb4
  424b15:	cwde   
  424b16:	xchg   ecx,eax
  424b17:	sbb    edx,DWORD PTR [ecx]
  424b19:	push   edx
  424b1a:	mov    esi,0x10259785
  424b1f:	imul   edx,DWORD PTR [edx+ecx*1-0x16],0xb305c946
  424b27:	fidivr WORD PTR [eax-0x3d65da01]
  424b2d:	icebp  
  424b2e:	jae    0x424b20
  424b30:	pop    eax
  424b31:	ss ds sbb eax,0xce6ab665
  424b38:	push   ecx
  424b39:	mov    cl,0xf4
  424b3b:	add    DWORD PTR [ecx-0x29b0d862],esi
  424b41:	aaa    
  424b42:	cmc    
  424b43:	adc    eax,0x6e20769d
  424b48:	push   ecx
  424b49:	repz iret 
  424b4b:	mov    esp,eax
  424b4d:	pop    esp
  424b4e:	enter  0x6f5a,0xea
  424b52:	ret    
  424b53:	cli    
  424b54:	jg     0x424b08
  424b56:	xchg   edx,eax
  424b57:	dec    edi
  424b58:	push   ds
  424b59:	and    ebx,edx
  424b5b:	xlat   BYTE PTR ds:[ebx]
  424b5c:	inc    edi
  424b5d:	sub    al,BYTE PTR ds:0x2cb5f4b5
  424b63:	mov    esp,0x37c02244
  424b68:	fisub  WORD PTR [edx+0xe62540b]
  424b6e:	sar    BYTE PTR [ebp+0x24],1
  424b71:	mov    bl,bl
  424b73:	jp     0x424b25
  424b75:	jo     0x424bd5
  424b77:	test   eax,0x9eb2c0cc
  424b7c:	ds jg  0x424bae
  424b7f:	xlat   BYTE PTR ds:[ebx]
  424b80:	leave  
  424b81:	cmp    DWORD PTR [eax+0x5],0x4bb1e43f
  424b88:	and    dl,bl
  424b8a:	cmp    esi,DWORD PTR [eax-0x7c4d190f]
  424b90:	dec    eax
  424b91:	pusha  
  424b92:	mov    al,ds:0x1257f321
  424b97:	pop    edx
  424b98:	xchg   edx,eax
  424b99:	push   cs
  424b9a:	fnstsw WORD PTR [edi]
  424b9c:	adc    BYTE PTR [ebp-0x664e8165],cl
  424ba2:	cmp    DWORD PTR [eax-0x600122de],ebp
  424ba8:	mov    fs,WORD PTR [esi-0x42350648]
  424bae:	jo     0x424ba5
  424bb0:	cld    
  424bb1:	mov    al,ds:0x621d1d97
  424bb6:	xchg   ebp,eax
  424bb7:	xchg   edx,eax
  424bb8:	and    ebp,DWORD PTR [eax-0x7e]
  424bbb:	pop    esp
  424bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bbd:	(bad)  [eax]
  424bbf:	push   edi
  424bc0:	sti    
  424bc1:	(bad)  
  424bc2:	adc    eax,0x86ad7034
  424bc7:	xor    bl,dh
  424bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bca:	inc    ebp
  424bcb:	shr    esi,cl
  424bcd:	in     eax,dx
  424bce:	mov    BYTE PTR [edx-0x1],dh
  424bd1:	fwait
  424bd2:	addr16 mov ebx,0xd00dd74a
  424bd8:	arpl   WORD PTR [eax-0x74],cx
  424bdb:	add    bh,BYTE PTR [ecx-0x1e8b6e7]
  424be1:	inc    ebp
  424be2:	cmp    esi,ecx
  424be4:	fdiv   QWORD PTR [edi+0x570725aa]
  424bea:	sub    DWORD PTR [edx+eiz*1],esi
  424bed:	xchg   edx,eax
  424bee:	(bad)  [edi]
  424bf0:	push   ebx
  424bf1:	push   0xffffff82
  424bf3:	inc    edi
  424bf4:	xor    ah,BYTE PTR [ebx+eiz*2]
  424bf7:	mov    ch,0xe7
  424bf9:	fstp   TBYTE PTR [ebx]
  424bfb:	int3   
  424bfc:	sbb    al,0xe2
  424bfe:	stos   DWORD PTR es:[edi],eax
  424bff:	mov    eax,ds:0xa49da145
  424c04:	mov    dh,0x16
  424c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c07:	push   ebp
  424c08:	addr16 jp 0x424b90
  424c0b:	or     eax,0x66291822
  424c10:	inc    ebx
  424c11:	pop    esp
  424c12:	rol    dh,0x5a
  424c15:	test   eax,0x1bee915d
  424c1a:	js     0x424c6e
  424c1c:	jns    0x424c13
  424c1e:	gs data16 fwait
  424c21:	and    cl,bl
  424c23:	fld    DWORD PTR [ebp+0x6b]
  424c26:	pop    esi
  424c27:	aaa    
  424c28:	sbb    DWORD PTR [ecx],ebx
  424c2a:	xchg   ebp,eax
  424c2b:	test   eax,0x1861e5e6
  424c30:	out    dx,al
  424c31:	aam    0x84
  424c33:	inc    ebp
  424c34:	mov    esp,0x2c9dd2c2
  424c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c3a:	cmp    al,cl
  424c3c:	jo     0x424c84
  424c3e:	sti    
  424c3f:	data16 cmp BYTE PTR [eax],bh
  424c42:	xor    edi,DWORD PTR [edx-0x49]
  424c45:	mov    esi,0x762e9623
  424c4a:	xchg   ebx,eax
  424c4b:	imul   ecx,DWORD PTR [edx],0xad6709ff
  424c51:	fcomip st,st(1)
  424c53:	xchg   ecx,eax
  424c54:	sahf   
  424c55:	sub    ch,dh
  424c57:	jae    0x424c1c
  424c59:	rcr    BYTE PTR [ecx-0x3abaaebd],1
  424c5f:	sahf   
  424c60:	in     eax,0x68
  424c62:	add    BYTE PTR [edx-0x7aa2d06e],0x20
  424c69:	imul   eax,DWORD PTR [ecx-0x31095e68],0x40
  424c70:	fs pop es
  424c72:	mov    ch,BYTE PTR [edx-0x37]
  424c75:	cmp    al,0x3a
  424c77:	fild   DWORD PTR [eax-0x3b8078b3]
  424c7d:	stos   DWORD PTR es:[edi],eax
  424c7e:	jge    0x424c43
  424c80:	frstor [esi+0x2b2c2e05]
  424c86:	xor    dh,BYTE PTR [eax-0x73]
  424c89:	cld    
  424c8a:	sbb    esi,DWORD PTR [edx+ebx*1]
  424c8d:	je     0x424cb4
  424c8f:	xchg   edx,eax
  424c90:	aaa    
  424c91:	pop    ecx
  424c92:	retf   
  424c93:	xor    al,0xed
  424c95:	stos   DWORD PTR es:[edi],eax
  424c96:	push   DWORD PTR [esi-0x19]
  424c99:	mov    DWORD PTR [eax],eax
  424c9b:	and    bh,0xf9
  424c9e:	fild   QWORD PTR [di]
  424ca1:	lahf   
  424ca2:	sti    
  424ca3:	mov    esi,0xf2836184
  424ca8:	or     eax,0x390996ad
  424cad:	push   ebp
  424cae:	inc    ebp
  424caf:	add    al,0xb5
  424cb1:	push   0x6ede763a
  424cb6:	repz dec ebx
  424cb8:	sub    al,0xc
  424cba:	test   al,0x14
  424cbc:	retf   
  424cbd:	mov    ?,WORD PTR [ecx]
  424cbf:	and    bh,BYTE PTR [eax+ecx*2-0x7969887]
  424cc6:	in     al,0xf1
  424cc8:	pop    ecx
  424cc9:	mov    ch,0x1
  424ccb:	inc    ebx
  424ccc:	inc    edi
  424ccd:	sub    BYTE PTR [ebp-0x71],cl
  424cd0:	or     eax,0x299eb423
  424cd5:	and    BYTE PTR [esi],al
  424cd7:	xchg   edx,eax
  424cd8:	xchg   BYTE PTR [edx+edi*2-0x77],bl
  424cdc:	jecxz  0x424d12
  424cde:	push   edi
  424cdf:	rcl    dl,1
  424ce1:	push   edi
  424ce2:	pushf  
  424ce3:	mov    esi,ds
  424ce5:	icebp  
  424ce6:	sub    eax,0x1667c06c
  424ceb:	xor    ebx,DWORD PTR [edi+0x5247ba97]
  424cf1:	arpl   WORD PTR [esi],bx
  424cf3:	dec    ebp
  424cf4:	mov    bl,0x8a
  424cf6:	jge    0x424d6b
  424cf8:	push   ecx
  424cf9:	les    eax,FWORD PTR [eax-0x7dacfc21]
  424cff:	mov    ah,0xa4
  424d01:	mov    es,WORD PTR [edx+eax*1-0x16f83bbb]
  424d08:	mov    esp,0x1684235e
  424d0d:	or     al,0x29
  424d0f:	pop    es
  424d10:	and    bl,dl
  424d12:	add    eax,0x9d8cddc9
  424d17:	add    dl,BYTE PTR [ecx+0x7f]
  424d1a:	jle    0x424ceb
  424d1c:	jmp    0x912c:0xfa8f14e1
  424d23:	ja     0x424d69
  424d25:	stos   BYTE PTR es:[edi],al
  424d26:	dec    esi
  424d27:	or     al,0x15
  424d29:	fistp  QWORD PTR [esi+0x74]
  424d2c:	inc    edx
  424d2d:	inc    edi
  424d2e:	jmp    0xae8:0x9c2d4aef
  424d35:	pop    eax
  424d36:	fs jb  0x424da5
  424d39:	cmp    BYTE PTR [edi-0xb7bf652],dl
  424d3f:	cmp    BYTE PTR [ebp-0xbfbe239],0xda
  424d46:	push   eax
  424d47:	mov    eax,DWORD PTR [ebx]
  424d49:	pop    ebx
  424d4a:	in     al,0x5d
  424d4c:	daa    
  424d4d:	jecxz  0x424d3a
  424d4f:	pop    edi
  424d50:	dec    eax
  424d51:	fnstsw WORD PTR [ebp+0x7257e27b]
  424d57:	adc    BYTE PTR [ebp+0x1714c032],0x1f
  424d5e:	pop    esi
  424d5f:	xchg   ebp,eax
  424d60:	push   edi
  424d61:	fwait
  424d62:	xor    esp,DWORD PTR [ebx-0x42c28a08]
  424d68:	xor    al,0x11
  424d6a:	jg     0x424cf7
  424d6c:	add    al,0x49
  424d6e:	sbb    eax,0xc7dc1dc5
  424d73:	outs   dx,DWORD PTR ds:[esi]
  424d74:	push   ds
  424d75:	and    esp,DWORD PTR [edi]
  424d77:	cmp    BYTE PTR [ebx],0x78
  424d7a:	add    al,0x6f
  424d7c:	push   ss
  424d7d:	add    BYTE PTR [ebp-0x719c33d3],dh
  424d83:	mov    edx,0x6d67abe0
  424d88:	pop    ss
  424d89:	shl    DWORD PTR [edx+0x71],0x3c
  424d8d:	adc    eax,0x5fe41be4
  424d92:	jbe    0x424d84
  424d94:	(bad)  
  424d95:	sbb    al,0x25
  424d97:	iret   
  424d98:	inc    ebx
  424d99:	mov    DWORD PTR [edx],edx
  424d9b:	dec    esp
  424d9c:	repz cmc 
  424d9e:	pop    ebp
  424d9f:	mov    ds:0x70571e20,eax
  424da4:	push   0x5df4c66a
  424da9:	aad    0xc1
  424dab:	sbb    BYTE PTR [eax],ah
  424dad:	data16 and BYTE PTR ds:0x617c2c63,dh
  424db4:	lods   eax,DWORD PTR ds:[esi]
  424db5:	into   
  424db6:	add    DWORD PTR [eax+eiz*4-0x2246210a],edx
  424dbd:	loopne 0x424d4c
  424dbf:	jp     0x424d65
  424dc1:	push   0x43
  424dc3:	test   al,0xf4
	...
  424dd1:	mov    ds,WORD PTR ds:0xfffbdb6b
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    bl,BYTE PTR [eax+0x4d413b74]
  424de2:	lds    eax,FWORD PTR [ecx]
  424de4:	add    BYTE PTR [ebx+eax*1+0xd200000],ch
  424deb:	pop    ebp
  424dec:	mov    bl,0xa4
  424dee:	mov    bl,BYTE PTR [ecx+0x49]
  424df1:	ins    DWORD PTR es:[edi],dx
  424df2:	dec    edx
  424df3:	out    0xa6,eax
  424df5:	js     0x424e31
  424df7:	xor    dl,BYTE PTR [edx+0x3ce4e2eb]
  424dfd:	mov    al,0x9
  424dff:	pop    esp
  424e00:	es (bad) 
  424e03:	sbb    dh,BYTE PTR [edi]
  424e05:	xchg   DWORD PTR ds:0xf3c91e15,ebx
  424e0b:	rcl    edi,cl
  424e0d:	jnp    0x424e01
  424e0f:	nop
  424e10:	pop    ebx
  424e11:	inc    ecx
  424e12:	aaa    
  424e13:	mov    al,ds:0x5931ec76
  424e18:	shl    DWORD PTR [edi+0x1e5db157],cl
  424e1e:	cli    
  424e1f:	cmp    cl,BYTE PTR [ebp+edx*1-0x1b]
  424e23:	leave  
  424e24:	inc    ebx
  424e25:	in     eax,dx
  424e26:	mov    ebp,0xffb4d34
  424e2b:	pop    eax
  424e2c:	add    esi,DWORD PTR [ecx]
  424e2e:	xchg   ebp,eax
  424e2f:	stos   DWORD PTR es:[edi],eax
  424e30:	jne    0x424e03
  424e32:	sub    BYTE PTR [ebx-0x42c9621d],dh
  424e38:	and    ecx,DWORD PTR [ebx-0x55c634c]
  424e3e:	mov    DWORD PTR [eax-0xa88f92d],ecx
  424e44:	push   ss
  424e45:	data16 or al,0x27
  424e48:	push   cs
  424e49:	push   ebp
  424e4a:	cmp    ecx,edi
  424e4c:	add    DWORD PTR [ecx-0x39],0x659ab523
  424e53:	fidivr WORD PTR [ebx-0x43]
  424e56:	xchg   DWORD PTR [ecx-0x66fb0f0c],eax
  424e5c:	inc    edx
  424e5d:	and    edi,DWORD PTR [esi]
  424e5f:	add    eax,0x1ed50dc4
  424e64:	add    dl,cl
  424e66:	retf   0x16e5
  424e69:	inc    ebp
  424e6a:	sti    
  424e6b:	gs cmp ecx,ecx
  424e6e:	std    
  424e6f:	adc    BYTE PTR [ebp-0x74e5d829],ch
  424e75:	sar    BYTE PTR [eax-0x62d9a97d],1
  424e7b:	or     al,0x87
  424e7d:	or     al,0xdf
  424e7f:	sub    DWORD PTR [esi+0x59],eax
  424e82:	xchg   edx,eax
  424e83:	(bad)  
  424e84:	pop    ds
  424e85:	mov    ch,0x33
  424e87:	cmp    eax,0xbeab5791
  424e8c:	sar    BYTE PTR [edx+ebp*8+0x6c],cl
  424e90:	aaa    
  424e91:	jge    0x424e1e
  424e93:	jl     0x424f14
  424e95:	cmp    esp,DWORD PTR [ecx+0x45]
  424e98:	fstp   QWORD PTR [esp+edx*2+0x52]
  424e9c:	jno    0x424e67
  424e9e:	jmp    0x48f5:0x2226c62b
  424ea5:	sbb    dh,bh
  424ea7:	std    
  424ea8:	dec    ebx
  424ea9:	push   ecx
  424eaa:	stos   BYTE PTR es:[edi],al
  424eab:	mov    dl,0x1f
  424ead:	and    DWORD PTR [ecx],0xc62ac9ed
  424eb3:	ret    0xaf6d
  424eb6:	into   
  424eb7:	shl    DWORD PTR [edi-0x54b88714],1
  424ebd:	xor    eax,0x6d9ae1a0
  424ec2:	add    al,0x23
  424ec4:	lock adc bl,dl
  424ec7:	int3   
  424ec8:	jmp    0xe5a5:0x174d5ce1
  424ecf:	fwait
  424ed0:	std    
  424ed1:	mov    edi,0x13ef3ba8
  424ed6:	jecxz  0x424f21
  424ed8:	call   DWORD PTR [edx*4+0x6d1606df]
  424edf:	or     eax,0x6801bab2
  424ee4:	push   ecx
  424ee5:	add    DWORD PTR [ecx+0x62c68e75],esp
  424eeb:	loopne 0x424ec6
  424eed:	loopne 0x424e71
  424eef:	aas    
  424ef0:	pusha  
  424ef1:	repnz mov dl,0xeb
  424ef4:	push   ds
  424ef5:	stc    
  424ef6:	xchg   edi,eax
  424ef7:	int3   
  424ef8:	fmulp  st(6),st
  424efa:	loope  0x424f0f
  424efc:	mov    dh,0x2b
  424efe:	or     bl,bl
  424f00:	sar    DWORD PTR [ebx-0x1b],1
  424f03:	adc    ebp,DWORD PTR [esi-0x5e]
  424f06:	ds test al,0x33
  424f09:	sub    al,0xd9
  424f0b:	jge    0x424f26
  424f0d:	push   ebp
  424f0e:	(bad)  
  424f0f:	jo     0x424f25
  424f11:	mov    bh,0x97
  424f13:	cwde   
  424f14:	int3   
  424f15:	lock ins DWORD PTR es:[edi],dx
  424f17:	sub    BYTE PTR [ebx],dl
  424f19:	push   esp
  424f1a:	adc    DWORD PTR [ebp-0x1f],esi
  424f1d:	inc    ebp
  424f1e:	pop    edi
  424f1f:	inc    eax
  424f20:	lock int3 
  424f22:	adc    DWORD PTR [eax-0x11],0x9
  424f26:	push   esi
  424f27:	dec    edi
  424f28:	pop    ss
  424f29:	dec    eax
  424f2a:	outs   dx,DWORD PTR ds:[esi]
  424f2b:	lods   al,BYTE PTR ds:[esi]
  424f2c:	inc    ebp
  424f2d:	ins    DWORD PTR es:[edi],dx
  424f2e:	imul   esi,DWORD PTR ds:0x7ff17c9f,0xa90415a0
  424f38:	in     al,0x5c
  424f3a:	arpl   WORD PTR fs:[edi+0x1a],ax
  424f3e:	mov    eax,DWORD PTR [edi-0x6d]
  424f41:	add    DWORD PTR [ebp+eiz*1+0xf],edi
  424f45:	sbb    dl,BYTE PTR [ebp-0x1c9aae86]
  424f4b:	sbb    BYTE PTR [ecx],ah
  424f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4e:	repz ss clc 
  424f51:	out    0xc9,eax
  424f53:	and    al,0x31
  424f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f56:	scas   al,BYTE PTR es:[edi]
  424f57:	pop    ebp
  424f58:	and    bl,dh
  424f5a:	lock out 0x3f,al
  424f5d:	bound  ebx,QWORD PTR [ecx]
  424f5f:	add    eax,0x96fbdeec
  424f64:	add    edi,esi
  424f66:	shl    DWORD PTR [edx-0x2dabd0f6],0xd3
  424f6d:	outs   dx,BYTE PTR ds:[esi]
  424f6e:	sub    BYTE PTR [esi],al
  424f70:	stc    
  424f71:	out    0xa0,al
  424f73:	jl     0x424ff4
  424f75:	push   cs
  424f76:	cmc    
  424f77:	ins    BYTE PTR es:[edi],dx
  424f78:	or     BYTE PTR [esi-0x43a5451b],al
  424f7e:	fdiv   st,st(2)
  424f80:	inc    ecx
  424f81:	sub    dh,bh
  424f83:	fidiv  WORD PTR [ebx-0x4c]
  424f86:	lods   eax,DWORD PTR ds:[esi]
  424f87:	xor    al,0x16
  424f8a:	(bad)  
  424f8b:	das    
  424f8c:	mov    edi,0x2931db2f
  424f91:	cmp    BYTE PTR [eax-0x7721edd8],al
  424f97:	ins    BYTE PTR es:[edi],dx
  424f98:	(bad)  
  424f99:	cli    
  424f9a:	daa    
  424f9b:	in     al,0xd5
  424f9d:	xchg   esi,eax
  424f9e:	xchg   BYTE PTR [ecx+0x40432f66],al
  424fa4:	ret    
  424fa5:	int    0x5f
  424fa7:	xor    eax,0xdd9c8e0d
  424fac:	shl    BYTE PTR [ebp-0x1101d627],cl
  424fb2:	mov    ebx,0x24bbf4d6
  424fb7:	sahf   
  424fb8:	jl     0x425037
  424fba:	fidiv  DWORD PTR [ebx-0x44]
  424fbd:	pop    ebp
  424fbe:	lods   eax,DWORD PTR ds:[esi]
  424fbf:	push   0xf731500a
  424fc4:	call   0xa981:0x35c33fff
  424fcb:	retf   
  424fcc:	or     dl,ch
  424fce:	inc    DWORD PTR [edi+0x39]
  424fd1:	cmp    bl,BYTE PTR [esi]
  424fd3:	std    
  424fd4:	push   cs
  424fd5:	jae    0x424f5e
  424fd7:	xlat   BYTE PTR ds:[ebx]
  424fd8:	dec    esi
  424fd9:	add    al,0xb2
  424fdb:	pop    esp
  424fdc:	popa   
  424fdd:	in     al,0xdc
  424fdf:	iret   
  424fe0:	cmp    DWORD PTR [ebp-0x566c1bbc],ebx
  424fe6:	scas   eax,DWORD PTR es:[edi]
  424fe7:	loop   0x42504c
  424fe9:	ss adc eax,0x910296d9
  424fef:	into   
  424ff0:	pop    ebp
  424ff1:	pop    esp
  424ff2:	xor    DWORD PTR [esi],edx
  424ff4:	frstor [ecx-0x4ec50fc9]
  424ffa:	into   
  424ffb:	out    dx,al
  424ffc:	and    BYTE PTR [ecx+0x3e57c14],dh
  425002:	fcom   DWORD PTR [edi-0x685d0eaa]
  425008:	mov    edx,0xdfce60e1
  42500d:	das    
  42500e:	adc    DWORD PTR [esi-0x15],edx
  425011:	jp     0x424fe7
  425013:	add    dl,BYTE PTR [ebp+0x10]
  425016:	(bad)  
  425017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425018:	push   eax
  425019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42501a:	xchg   ebp,eax
  42501b:	arpl   WORD PTR [edi-0x3],si
  42501e:	rcr    DWORD PTR [edx+0x39b62d99],0xe1
  425025:	pop    ds
  425026:	push   eax
  425027:	lds    edx,FWORD PTR [ebx+0x43ddb1eb]
  42502d:	test   al,0xf3
  42502f:	cmp    eax,0x319ef05
  425034:	in     al,0x81
  425036:	pushf  
  425037:	pushf  
  425038:	pop    es
  425039:	push   edi
  42503a:	or     esp,DWORD PTR [ebx]
  42503c:	dec    eax
  42503d:	jno    0x425091
  42503f:	dec    ecx
  425040:	xchg   ecx,eax
  425041:	sub    ch,dl
  425043:	or     eax,0xed8f02ba
  425048:	pop    esp
  425049:	or     esp,DWORD PTR [ebp+0x2c]
  42504c:	stos   BYTE PTR es:[edi],al
  42504d:	nop
  42504e:	mov    eax,0xe5f1ec7a
  425053:	outs   dx,DWORD PTR ds:[esi]
  425054:	(bad)  
  425056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425057:	inc    ecx
  425058:	inc    eax
  425059:	stos   BYTE PTR es:[edi],al
  42505a:	or     eax,0x33e84808
  42505f:	xchg   ebx,eax
  425060:	test   ah,0xad
  425063:	(bad)  
  425064:	(bad)  
  425065:	xchg   esi,eax
  425066:	dec    eax
  425067:	in     al,dx
  425068:	std    
  425069:	cmp    dh,BYTE PTR [ecx-0x4c4816fb]
  42506f:	cmp    DWORD PTR [ebp+0x1e],0x3d
  425073:	aam    0xe6
  425075:	sbb    eax,0xd2ba8780
  42507a:	inc    edx
  42507b:	jmp    0x425092
  42507d:	ja     0x4250ef
  42507f:	pop    esp
  425080:	and    eax,0xda34df4b
  425085:	leave  
  425086:	ins    DWORD PTR es:[edi],dx
  425087:	and    al,0x55
  425089:	sbb    BYTE PTR [eax+esi*4],bl
  42508c:	hlt    
  42508d:	clc    
  42508e:	and    BYTE PTR cs:[eax],bl
  425091:	iret   
  425092:	sbb    al,0xb3
  425094:	push   0x4
  425096:	or     ah,BYTE PTR [eax+0x26]
  425099:	loopne 0x425063
  42509b:	es pop ebx
  42509d:	xchg   ebx,eax
  42509e:	mov    ebx,0x759bde30
  4250a3:	retf   0xc205
  4250a6:	loope  0x425114
  4250a8:	add    eax,0x34e96483
  4250ad:	cwde   
  4250ae:	dec    edx
  4250af:	xrelease xchg DWORD PTR ds:[esi-0x23],edi
  4250b4:	mov    ch,0xf8
  4250b6:	jl     0x42512f
  4250b8:	int    0xaf
  4250ba:	or     eax,0x4118fab0
  4250bf:	ins    BYTE PTR es:[edi],dx
  4250c0:	iret   
  4250c1:	inc    edi
  4250c2:	sbb    bh,BYTE PTR [edi+0x78def105]
  4250c8:	cmc    
  4250c9:	ds pop ebx
  4250cb:	xor    edi,DWORD PTR [ebp+0x38b0143d]
  4250d1:	adc    BYTE PTR [edx-0xe6eb2b1],0xf7
  4250d8:	xchg   edi,eax
  4250d9:	fs xchg ebx,eax
  4250db:	push   esi
  4250dc:	int    0xc7
  4250de:	sbb    ebp,ebp
  4250e0:	jnp    0x425105
  4250e2:	xchg   esi,eax
  4250e3:	mov    ebx,0x3766d830
  4250e8:	cli    
  4250e9:	aad    0x64
  4250eb:	push   ecx
  4250ec:	inc    esi
  4250ed:	add    DWORD PTR [eax-0x49],ebx
  4250f0:	leave  
  4250f1:	syscall 
  4250f3:	stos   BYTE PTR es:[edi],al
  4250f4:	test   esp,ebp
  4250f6:	dec    ecx
  4250f7:	in     eax,0x28
  4250f9:	mov    WORD PTR [ecx],?
  4250fb:	push   ecx
  4250fc:	popa   
  4250fd:	repz out 0x19,al
  425100:	or     ch,0x72
  425103:	adc    al,0x78
  425105:	add    eax,0xf60e2bd3
  42510a:	mov    bl,0x3f
  42510c:	pop    edi
  42510d:	std    
  42510e:	mov    bl,0x5d
  425110:	jae    0x425122
  425112:	push   edi
  425113:	jns    0x4250d5
  425115:	dec    esi
  425116:	nop
  425117:	adc    ebp,DWORD PTR [edx]
  425119:	jmp    0x9484a825
  42511e:	mov    esi,0xd2cf20b9
  425123:	mov    bl,0xbc
  425125:	es fmul st(1),st
  425128:	dec    eax
  425129:	pop    esp
  42512a:	jno    0x425110
  42512c:	into   
  42512d:	fwait
  42512e:	enter  0x1edc,0x6f
  425132:	loop   0x425171
  425134:	sbb    DWORD PTR [ecx-0x2dff2deb],0x1b
  42513b:	stc    
  42513c:	or     edi,DWORD PTR [edx+ebx*4-0x5b44fe3]
  425143:	lds    edx,FWORD PTR [eax-0xb469c94]
  425149:	mov    al,BYTE PTR [ecx]
  42514b:	adc    eax,0xe71d2565
  425150:	call   0xc7d7:0xf0a642d1
  425157:	inc    edx
  425158:	loop   0x425179
  42515a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42515b:	xchg   BYTE PTR [ebx+0x3d94e641],ah
  425161:	cs out dx,eax
  425163:	into   
  425164:	pop    ds
  425165:	stos   BYTE PTR es:[edi],al
  425166:	mov    dl,0xbd
  425168:	add    bl,dh
  42516a:	pop    esi
  42516b:	fdiv   DWORD PTR [edi-0x7bdd8ff4]
  425171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425172:	add    DWORD PTR [esi+ebx*8+0x562c10be],esi
  425179:	push   edx
  42517a:	xor    edx,DWORD PTR [edi+0x5]
  42517d:	lods   eax,DWORD PTR ds:[esi]
  42517e:	test   eax,0xc8d086c3
  425183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425184:	es fs arpl bp,ax
  425188:	cld    
  425189:	jle    0x42517f
  42518b:	test   DWORD PTR ds:0x4b99c65f,0x9122b73a
	...
  4251a1:	imul   edi,DWORD PTR [esi-0x480049c5],0x4a7bffed
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	sbb    eax,DWORD PTR [ebx]
  4251af:	xor    esp,DWORD PTR [edx-0x7]
  4251b2:	enter  0x1,0xac
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    dl,al
  4251ba:	add    ebx,DWORD PTR ds:0x707a23fe
  4251c0:	sbb    DWORD PTR [edx],ebp
  4251c2:	sti    
  4251c3:	push   esi
  4251c4:	dec    esi
  4251c5:	sbb    eax,0x6fa506a0
  4251ca:	shl    esp,1
  4251cc:	imul   ebx,eax,0xffffff84
  4251cf:	and    ebp,edx
  4251d1:	jmp    0xa73fabac
  4251d6:	cmp    BYTE PTR [edi-0x4d],ah
  4251d9:	fisubr DWORD PTR [edi+0x46e8f235]
  4251df:	mov    al,0x79
  4251e1:	jnp    0x425167
  4251e3:	outs   dx,DWORD PTR ds:[esi]
  4251e4:	xchg   esp,eax
  4251e5:	int3   
  4251e6:	pushf  
  4251e7:	test   BYTE PTR [ecx+ebx*8-0x24],bl
  4251eb:	shl    ecx,cl
  4251ed:	push   0x1
  4251ef:	int    0x5f
  4251f1:	dec    ebx
  4251f2:	pop    ebp
  4251f3:	call   0xa71cfed8
  4251f8:	xlat   BYTE PTR ds:[ebx]
  4251f9:	ins    DWORD PTR es:[edi],dx
  4251fa:	inc    esi
  4251fb:	sub    eax,0xdbee4b70
  425200:	mov    ah,0xdb
  425203:	into   
  425204:	(bad)  
  425205:	mov    bh,0x13
  425207:	mov    ds:0x6459e604,eax
  42520c:	imul   DWORD PTR [ecx+0x6dce2749]
  425212:	test   BYTE PTR [ebx],ch
  425214:	nop
  425215:	aaa    
  425216:	inc    esp
  425217:	jp     0x42521c
  425219:	jmp    DWORD PTR [eax-0x297e0f04]
  42521f:	mov    bh,0x53
  425221:	cmp    ebp,DWORD PTR [edi-0x718cad9d]
  425227:	push   edx
  425228:	add    al,BYTE PTR [ecx]
  42522a:	cmp    cl,dl
  42522c:	and    ch,0xa9
  42522f:	sbb    bl,cl
  425231:	inc    esi
  425232:	into   
  425233:	jbe    0x425287
  425235:	shl    DWORD PTR [ecx+0x63],0xa1
  425239:	add    BYTE PTR [edx-0x4662c142],bh
  42523f:	cmc    
  425240:	sub    al,BYTE PTR [esi]
  425242:	adc    dl,al
  425244:	ds push esp
  425246:	stc    
  425247:	test   eax,0x579452c
  42524c:	mov    dh,0x7e
  42524e:	mov    BYTE PTR [edi+0x66],al
  425251:	pmaddwd mm0,QWORD PTR [ecx-0x59925ea0]
  425258:	lock cmp DWORD PTR [edi+0x18200002],esi
  42525f:	xor    edi,DWORD PTR [edx-0x13fd46b5]
  425265:	mov    ds,edx
  425267:	leave  
  425268:	(bad)  
  425269:	cmc    
  42526a:	jno    0x42528a
  42526c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42526d:	int3   
  42526e:	scas   eax,DWORD PTR es:[edi]
  42526f:	mov    esi,0x3a806202
  425274:	je     0x425277
  425276:	outs   dx,DWORD PTR ds:[esi]
  425277:	rol    DWORD PTR [ecx],cl
  425279:	ds mov dh,0x96
  42527c:	repz es xchg ebp,eax
  42527f:	xor    edi,esi
  425281:	loop   0x425258
  425283:	sbb    ah,ch
  425285:	(bad)  
  425286:	sar    bl,0x83
  425289:	xchg   edi,eax
  42528a:	ins    DWORD PTR es:[edi],dx
  42528b:	ss out dx,eax
  42528d:	push   edi
  42528e:	push   esp
  42528f:	shr    DWORD PTR [eax-0x2e6c2cf],1
  425295:	xor    ah,BYTE PTR [edi-0x4b9c5679]
  42529b:	sub    cl,dh
  42529d:	std    
  42529e:	repnz sub DWORD PTR [eax+0x9],edi
  4252a2:	int    0x24
  4252a4:	xor    edi,ebp
  4252a6:	imul   ebp,DWORD PTR [ebp+0x7b],0xbd2aa9b5
  4252ad:	jge    0x4252ae
  4252af:	fsubr  DWORD PTR [ecx]
  4252b1:	inc    esi
  4252b2:	sub    esi,DWORD PTR [ebp+0x4a]
  4252b5:	ins    DWORD PTR es:[edi],dx
  4252b6:	jge    0x4252cd
  4252b8:	mov    esi,0x44b59e02
  4252bd:	add    BYTE PTR [ebp-0x4af0eff4],dl
  4252c3:	repz lds esi,FWORD PTR [eax+esi*4-0xdc29055]
  4252cb:	out    dx,eax
  4252cc:	jle    0x42534c
  4252ce:	mov    edx,0xd536eefd
  4252d3:	adc    ecx,DWORD PTR [edx]
  4252d5:	push   cs
  4252d6:	add    edi,DWORD PTR [esi]
  4252d8:	xchg   edi,eax
  4252d9:	inc    ebp
  4252da:	sub    ch,BYTE PTR [ecx-0x19]
  4252dd:	sahf   
  4252de:	push   0x27
  4252e0:	push   es
  4252e1:	add    DWORD PTR [edx+0x29f8e899],edi
  4252e7:	mov    DWORD PTR [esi],esi
  4252e9:	pop    ds
  4252ea:	mov    esi,0x6bb009b5
  4252ef:	out    0x1a,eax
  4252f1:	rcr    DWORD PTR [esi-0x4e260bb5],cl
  4252f7:	nop
  4252f8:	jb     0x42527e
  4252fa:	xor    eax,0x4c9954d8
  4252ff:	dec    esp
  425300:	xchg   ebp,eax
  425301:	push   edi
  425302:	xchg   edi,eax
  425303:	or     dh,BYTE PTR [esi+0x59e2e8a0]
  425309:	inc    edx
  42530a:	retf   0xdbe6
  42530d:	(bad)  
  42530e:	xlat   BYTE PTR ds:[ebx]
  42530f:	out    0x6e,al
  425311:	into   
  425312:	fcom   DWORD PTR [ebp-0x1b84cfc8]
  425318:	int    0x7b
  42531a:	stc    
  42531b:	test   DWORD PTR [edx],eax
  42531d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42531e:	in     eax,0x2e
  425320:	pop    ds
  425321:	and    ebx,edx
  425323:	(bad)  [edx]
  425325:	and    DWORD PTR [edx+0x5784cfa7],ebp
  42532b:	and    esp,ebp
  42532d:	sbb    ebx,ebp
  42532f:	dec    edx
  425330:	clc    
  425331:	loop   0x4252d7
  425333:	jge    0x425346
  425335:	jmp    0x7e1cd3f3
  42533a:	pop    eax
  42533b:	pusha  
  42533c:	ss nop
  42533e:	lea    esp,[ecx-0x47]
  425341:	shl    bh,0xe6
  425344:	nop
  425345:	lods   eax,DWORD PTR ds:[esi]
  425346:	xor    BYTE PTR [eax-0x3],0xaa
  42534a:	scas   al,BYTE PTR es:[edi]
  42534b:	ret    
  42534c:	retf   0x110d
  42534f:	hlt    
  425350:	pop    es
  425351:	sar    BYTE PTR [ebx],cl
  425353:	mov    esi,0x72c7b577
  425358:	xchg   ebx,ebx
  42535a:	imul   edi,DWORD PTR [ebx+eax*1+0x39],0xffffffb7
  42535f:	and    ebx,edx
  425361:	push   eax
  425362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425363:	sub    esp,DWORD PTR gs:[ebp+0x21]
  425367:	fiadd  WORD PTR [eax-0x31380203]
  42536d:	ins    DWORD PTR es:[edi],dx
  42536e:	inc    ebp
  42536f:	arpl   WORD PTR [eax-0xe],si
  425372:	cli    
  425373:	push   0x2f3abd76
  425378:	aad    0x3a
  42537a:	jg     0x42535c
  42537c:	mov    ch,0x2a
  42537e:	data16 jnp 0x425380
  425381:	into   
  425382:	fstp   QWORD PTR [eax-0x3fce0289]
  425388:	dec    ebx
  425389:	sbb    al,0x8c
  42538b:	int3   
  42538c:	pop    ecx
  42538d:	xor    eax,0x761650f4
  425392:	cmp    ecx,eax
  425394:	adc    esp,edi
  425396:	ret    0x9ac2
  425399:	vpaddusb xmm5,xmm0,XMMWORD PTR [eax]
  42539d:	inc    ebp
  42539e:	bound  ebp,QWORD PTR [ecx]
  4253a0:	push   esi
  4253a1:	push   edi
  4253a2:	fild   QWORD PTR [eax]
  4253a4:	push   0xffffffb7
  4253a6:	and    ebx,DWORD PTR [ebp-0x40]
  4253a9:	sbb    ecx,DWORD PTR [ecx]
  4253ab:	ret    0xe7ee
  4253ae:	ror    DWORD PTR [edi+0x71],cl
  4253b1:	vaddpd ymm4,ymm1,YMMWORD PTR [eax+ebx*2-0x2c269d90]
  4253ba:	aas    
  4253bb:	pop    ebx
  4253bc:	jecxz  0x42537c
  4253be:	repz push edx
  4253c0:	dec    edx
  4253c1:	jb     0x425439
  4253c3:	and    ah,BYTE PTR [edi-0x3d]
  4253c6:	in     eax,0xa8
  4253c8:	repnz mov bh,0xc8
  4253cb:	sbb    dl,BYTE PTR [esi+0x5d]
  4253ce:	cmp    al,0x1e
  4253d0:	push   ebx
  4253d1:	mov    esp,0x37bfe44
  4253d6:	dec    ebp
  4253d7:	in     al,dx
  4253d8:	test   al,0x8b
  4253da:	ret    0x741f
  4253dd:	lds    eax,FWORD PTR [esi-0x4]
  4253e0:	xchg   DWORD PTR [ecx],esp
  4253e2:	call   DWORD PTR [edi]
  4253e4:	push   es
  4253e5:	cmp    dh,BYTE PTR ds:0x904f2a09
  4253eb:	iret   
  4253ec:	cli    
  4253ed:	dec    edx
  4253ee:	sub    DWORD PTR [edi-0x8dbe89b],eax
  4253f4:	sub    eax,DWORD PTR [ebx-0x58]
  4253f7:	xlat   BYTE PTR ds:[ebx]
  4253f8:	(bad)  
  4253f9:	cld    
  4253fa:	push   ss
  4253fb:	jmp    0x57bba254
  425400:	adc    ecx,esi
  425402:	bound  eax,QWORD PTR [eax]
  425404:	mov    ecx,0x5184e401
  425409:	dec    esp
  42540a:	dec    esi
  42540b:	xor    eax,0xeee61a64
  425410:	jge    0x42540e
  425412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425413:	addr16 jmp 0x35a0f085
  425419:	aad    0x82
  42541b:	jmp    0x4253c3
  42541d:	push   ds
  42541e:	adc    edx,ebp
  425420:	inc    esp
  425421:	or     DWORD PTR [eax+0x5c],ebx
  425424:	jae    0x425455
  425426:	push   0xba6cf53c
  42542b:	xchg   esp,eax
  42542c:	sbb    ch,dh
  42542e:	jmp    0x66fe:0x2920247e
  425435:	repnz push 0x5b
  425438:	cmp    eax,0xf51c63e4
  42543d:	push   0x7c
  42543f:	rcl    BYTE PTR [edi-0x37253db0],1
  425445:	xlat   BYTE PTR ds:[ebx]
  425446:	sti    
  425447:	jmp    0x4536cabd
  42544c:	aas    
  42544d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42544e:	xor    BYTE PTR [edi],0x6
  425451:	fwait
  425452:	xchg   esp,eax
  425453:	rcr    DWORD PTR [ecx+0x2fddc5c4],0xe1
  42545a:	or     edx,esi
  42545c:	cmp    eax,edx
  42545e:	out    0x2d,al
  425460:	imul   eax,ebx,0x85fd9577
  425466:	xlat   BYTE PTR ds:[ebx]
  425467:	xor    eax,0x8c6aa933
  42546c:	add    bl,dl
  42546e:	mov    eax,0x41833399
  425473:	ror    cl,0x62
  425476:	mov    ecx,0xff4eafc8
  42547b:	pmulhw mm6,QWORD PTR [edi+0xf]
  42547f:	ins    DWORD PTR es:[edi],dx
  425480:	repnz mov al,0x0
  425483:	out    0x3d,eax
  425485:	cmp    DWORD PTR [eax-0x4f8ee5d0],0x4a
  42548c:	mov    cl,0x28
  42548e:	inc    ecx
  42548f:	bound  edi,QWORD PTR [ebx+0x7e]
  425492:	outs   dx,BYTE PTR ds:[esi]
  425493:	or     eax,0x66b30d5f
  425498:	push   ds
  425499:	jg     0x425487
  42549b:	jmp    0x4254f5
  42549d:	mov    al,0xa7
  42549f:	test   BYTE PTR [eax],bl
  4254a1:	mov    dh,0x95
  4254a3:	mov    ebx,0x5bc19d6e
  4254a8:	dec    esi
  4254a9:	mov    ebx,0x9e6feeb3
  4254ae:	jle    0x42544c
  4254b0:	push   esp
  4254b1:	add    BYTE PTR [esi-0x2b840397],0x7d
  4254b8:	paddusw mm0,QWORD PTR [eax]
  4254bb:	adc    al,0x9d
  4254bd:	(bad)  
  4254be:	sub    ebp,edx
  4254c0:	or     edi,DWORD PTR [eax+0x54]
  4254c3:	mov    dl,0x4b
  4254c5:	test   DWORD PTR [ebx+eax*4-0x66],eax
  4254c9:	iret   
  4254ca:	ror    DWORD PTR [ebx+0x192c99d4],1
  4254d0:	(bad)  
  4254d1:	int    0xbe
  4254d3:	fnstsw WORD PTR [ecx]
  4254d5:	not    DWORD PTR ds:0x671c3d7a
  4254db:	and    al,0x72
  4254dd:	sub    edi,DWORD PTR [ecx+0x7b971520]
  4254e3:	mov    al,ds:0xbcd202a7
  4254e8:	mov    ah,0x63
  4254ea:	xor    eax,0xc43b551c
  4254ef:	shl    DWORD PTR [ecx+0x2],1
  4254f2:	dec    edx
  4254f3:	loopne 0x42554e
  4254f5:	mov    eax,0xec2996b9
  4254fa:	adc    al,0x3
  4254fc:	mov    al,BYTE PTR [esi+eiz*8]
  4254ff:	fs or  ch,0x24
  425503:	cmp    al,0x26
  425505:	cwde   
  425506:	jae    0x425556
  425508:	and    BYTE PTR [edi+0x7],ah
  42550b:	out    0x1,eax
  42550d:	mov    eax,0x500280e5
  425512:	xor    al,0x41
  425514:	sub    ebp,DWORD PTR [ebx-0x1d]
  425517:	push   0x36c04996
  42551c:	stos   BYTE PTR es:[edi],al
  42551d:	fldenv [ebx+0x236e1350]
  425523:	stc    
  425524:	pop    ebp
  425525:	mov    cl,0x9c
  425527:	push   ebp
  425528:	popf   
  425529:	add    esi,esi
  42552b:	push   ss
  42552c:	stos   BYTE PTR es:[edi],al
  42552d:	fdivr  QWORD PTR [ebp+esi*1-0x22]
  425531:	cmc    
  425532:	(bad)  
  425533:	les    ecx,FWORD PTR [ecx]
  425535:	push   ss
  425536:	dec    edi
  425537:	loope  0x425580
  425539:	fwait
  42553a:	sbb    al,0x97
  42553c:	push   ds
  42553d:	je     0x425584
  42553f:	dec    edi
  425540:	in     al,dx
  425541:	outs   dx,DWORD PTR ds:[esi]
  425542:	fsub   st(4),st
  425544:	or     DWORD PTR [eax+0x3e243e28],eax
  42554a:	jmp    0x42556c
  42554c:	(bad)  
  42554d:	push   esi
  42554e:	mov    ebp,0x8e01ad20
  425553:	mov    ebx,0x5bc26739
  425558:	xchg   edx,eax
  425559:	icebp  
  42555a:	jg     0x4255b7
  42555c:	popa   
  42555d:	fisttp DWORD PTR [ebp+eax*4+0x76]
  425561:	mov    WORD PTR [edx+0xa532],ss
	...
  42556f:	add    BYTE PTR [eax],al
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     ecx,esp
  42557e:	add    eax,0xcca5b0c1
  425583:	add    DWORD PTR [eax],eax
  425585:	lods   al,BYTE PTR ds:[esi]
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    al,dh
  42558a:	ror    DWORD PTR [esi+eiz*8],cl
  42558d:	inc    esp
  42558e:	mov    eax,0xd085cf0e
  425593:	ja     0x4255d0
  425595:	ja     0x4255b3
  425597:	jge    0x4255c4
  425599:	call   0xb1160de6
  42559e:	stos   DWORD PTR es:[edi],eax
  42559f:	pop    ebp
  4255a0:	jp     0x4255b0
  4255a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255a3:	leave  
  4255a4:	int3   
  4255a5:	cwde   
  4255a6:	jle    0x42559c
  4255a8:	push   eax
  4255a9:	test   al,0x40
  4255ab:	adc    eax,0xcb263f5f
  4255b0:	mov    eax,ds:0xf9802f23
  4255b5:	mov    ebp,0x9782df41
  4255ba:	ds inc eax
  4255bc:	shl    DWORD PTR [edx],0x66
  4255bf:	in     al,0x8
  4255c1:	dec    ecx
  4255c2:	dec    edx
  4255c3:	int3   
  4255c4:	push   ebp
  4255c5:	xchg   edx,eax
  4255c6:	dec    esi
  4255c7:	jg     0x4255da
  4255c9:	cmp    eax,0x23e53f6b
  4255ce:	xlat   BYTE PTR ds:[ebx]
  4255cf:	xor    eax,0x9304772
  4255d4:	mov    bh,0xf7
  4255d6:	les    ebp,FWORD PTR [ecx-0xe]
  4255d9:	xchg   ebx,eax
  4255da:	rcr    DWORD PTR [esi+edx*2],1
  4255dd:	test   al,0x5f
  4255df:	push   ecx
  4255e0:	and    eax,0x86626ebd
  4255e5:	add    bl,0x9
  4255e8:	dec    eax
  4255e9:	push   ss
  4255ea:	ficomp DWORD PTR [esi+0x600c7160]
  4255f0:	cmp    eax,0x13cc0e08
  4255f5:	jne    0x425657
  4255f7:	in     al,dx
  4255f8:	push   edx
  4255f9:	sbb    BYTE PTR [esi],bl
  4255fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255fc:	lahf   
  4255fd:	mov    DWORD PTR [ecx],0x4f516dfa
  425603:	retf   
  425604:	sbb    esp,eax
  425606:	cmp    BYTE PTR [esp+ebx*4],bl
  425609:	bnd js 0x4255a3
  42560c:	cdq    
  42560d:	push   esi
  42560e:	(bad)  
  42560f:	ss mov dl,0x1
  425612:	and    al,BYTE PTR [ecx+0x3b]
  425615:	jmp    0x58f6ddce
  42561a:	cli    
  42561b:	(bad)  
  42561c:	pop    ebx
  42561d:	jbe    0x425682
  42561f:	jnp    0x4255ec
  425621:	dec    ebx
  425622:	xor    DWORD PTR [ecx+0x56],ebp
  425625:	xor    ebx,edi
  425627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425628:	cmp    DWORD PTR [eax],ebx
  42562a:	jmp    0x71170049
  42562f:	push   es
  425630:	in     al,0x41
  425632:	xchg   ebx,eax
  425633:	push   ss
  425634:	push   edx
  425635:	xor    eax,0xa580a2d3
  42563a:	mov    cl,0xed
  42563c:	cmp    eax,0x8ea63277
  425641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425642:	rcl    BYTE PTR [esi-0x67cb7644],0x3d
  425649:	jmp    0x43ab:0x3ec46de
  425650:	lods   eax,DWORD PTR fs:[esi]
  425652:	ja     0x4256bd
  425654:	ins    DWORD PTR es:[edi],dx
  425655:	js     0x425615
  425657:	aam    0xb
  425659:	hlt    
  42565a:	mov    ecx,0xbea2d12f
  42565f:	pusha  
  425660:	jnp    0x42563c
  425662:	mov    eax,ds:0x71f2af0d
  425667:	or     dh,BYTE PTR [ecx-0x420a94c0]
  42566d:	sbb    DWORD PTR [eax-0x10],ebp
  425670:	imul   edi,DWORD PTR [ebp+ebp*4+0x5ef11070],0xed4e5a71
  42567b:	test   DWORD PTR [edi-0x6d],0xa5b95f55
  425682:	adc    DWORD PTR [esi+0x32],edx
  425685:	pop    esi
  425686:	pusha  
  425687:	xor    BYTE PTR [ecx],cl
  425689:	mov    dh,0x77
  42568b:	pop    ecx
  42568c:	gs pop esi
  42568e:	pop    esi
  42568f:	arpl   WORD PTR ds:0x66830322,bp
  425695:	jmp    0x611d:0x7da83f3c
  42569c:	bound  edi,QWORD PTR [eax+0x47]
  42569f:	aam    0xe5
  4256a1:	setnp  BYTE PTR [edi+0x318bb38f]
  4256a8:	mov    cl,0xcc
  4256aa:	outs   dx,BYTE PTR ds:[esi]
  4256ab:	mov    esi,0xa39d3971
  4256b0:	xor    DWORD PTR [edx-0x6b],edi
  4256b3:	push   esp
  4256b4:	pop    edx
  4256b5:	nop
  4256b6:	sub    DWORD PTR [esi-0x32],esi
  4256b9:	mov    ch,0x70
  4256bb:	push   ebx
  4256bc:	scas   al,BYTE PTR es:[edi]
  4256bd:	jb     0x425652
  4256bf:	mov    BYTE PTR [edx-0x5c],cl
  4256c2:	pop    ebx
  4256c3:	adc    ebx,eax
  4256c5:	sub    al,BYTE PTR [edi+0x3d]
  4256c8:	push   ds
  4256c9:	push   0x2565e86b
  4256ce:	inc    esi
  4256cf:	jl     0xd2b3fcfc
  4256d5:	clc    
  4256d6:	lock pop ecx
  4256d8:	sbb    al,0xa9
  4256da:	cwde   
  4256db:	push   esi
  4256dc:	mov    esi,0x2546ad9e
  4256e1:	mov    esp,0x6be102c6
  4256e6:	jbe    0x4256d1
  4256e8:	cmp    DWORD PTR [edi-0x46],edi
  4256eb:	test   DWORD PTR [esi-0x40],0x389a47ea
  4256f2:	pop    ecx
  4256f3:	test   al,0x45
  4256f5:	adc    BYTE PTR [ebx],ch
  4256f7:	push   0xffffff92
  4256f9:	in     eax,dx
  4256fa:	xchg   esi,eax
  4256fb:	sub    eax,0x1d80faf1
  425700:	test   al,0x75
  425702:	jbe    0x425732
  425704:	cmp    ebx,DWORD PTR [edx]
  425706:	clc    
  425707:	sbb    al,bl
  425709:	push   ss
  42570a:	add    esi,ecx
  42570c:	iret   
  42570d:	pop    esi
  42570e:	pusha  
  42570f:	stc    
  425710:	pop    ebx
  425711:	adc    edi,DWORD PTR [ebp+0x863a8c2]
  425717:	dec    esi
  425718:	jecxz  0x42576b
  42571a:	and    bh,bl
  42571c:	rcl    DWORD PTR [ecx],0xcf
  42571f:	aas    
  425720:	fcomp  QWORD PTR [edi+0x22923722]
  425726:	fs jmp 0x3964:0xa8b5ec65
  42572e:	xor    edi,DWORD PTR [esi-0x34b1e026]
  425734:	dec    ecx
  425735:	jge    0x4256d7
  425737:	push   ecx
  425738:	sbb    bh,BYTE PTR [edi]
  42573a:	cmp    ecx,edx
  42573c:	or     eax,0xabb0b703
  425741:	xchg   ebp,eax
  425742:	fild   DWORD PTR [edi-0x6a7e046f]
  425748:	or     ecx,ebp
  42574a:	dec    esp
  42574b:	mov    eax,ds:0x552b4b90
  425750:	push   ss
  425751:	je     0x4256da
  425753:	mov    ah,0xa4
  425755:	add    ebp,eax
  425757:	jle    0x425739
  425759:	push   edx
  42575a:	sbb    eax,0xb9d57511
  42575f:	and    eax,0xf54ac449
  425764:	out    dx,al
  425765:	iret   
  425766:	aam    0x14
  425768:	xor    esp,DWORD PTR [eax+edi*8]
  42576b:	jnp    0x42571d
  42576d:	out    dx,eax
  42576e:	fdiv   QWORD PTR [ecx+eax*4+0x4d3f5f43]
  425775:	ret    
  425776:	fadd   QWORD PTR [ecx-0xe]
  425779:	mov    ecx,0xad82762f
  42577e:	out    0x6,eax
  425780:	add    DWORD PTR [edi+0x42e54e],0x93790234
  42578a:	dec    esp
  42578b:	sbb    dl,BYTE PTR [edi]
  42578d:	cmp    edi,DWORD PTR [edx+ebp*8]
  425790:	pop    esi
  425791:	jo     0x4257ea
  425793:	push   0x9d226819
  425798:	jno    0x4257bf
  42579a:	outs   dx,BYTE PTR ds:[esi]
  42579b:	(bad)  
  42579c:	clc    
  42579d:	adc    BYTE PTR [ebp+0x30],al
  4257a0:	mov    esp,0x2017bd06
  4257a5:	shl    DWORD PTR [edx+0x3cfd2be8],1
  4257ab:	imul   eax,DWORD PTR [edx],0x393a05bd
  4257b1:	mov    dl,0x2c
  4257b3:	mov    bl,0xbd
  4257b5:	xchg   edx,eax
  4257b6:	(bad)  
  4257b7:	fld    st(7)
  4257b9:	push   ebx
  4257ba:	loopne 0x425820
  4257bc:	es retf 0x9885
  4257c0:	add    esi,DWORD PTR [ecx-0x78]
  4257c3:	cs popf 
  4257c5:	or     al,0x49
  4257c7:	xchg   esp,eax
  4257c8:	out    dx,al
  4257c9:	stos   DWORD PTR es:[edi],eax
  4257ca:	xchg   esp,eax
  4257cb:	mov    dh,bl
  4257cd:	push   ss
  4257ce:	sbb    eax,0x38617474
  4257d3:	nop
  4257d4:	retf   
  4257d5:	add    al,0xef
  4257d7:	das    
  4257d8:	dec    ebx
  4257d9:	adc    dh,dl
  4257db:	pop    ebx
  4257dc:	jp     0x425813
  4257de:	hlt    
  4257df:	jmp    0x4257fa
  4257e1:	in     al,dx
  4257e2:	add    dl,BYTE PTR [edx]
  4257e4:	nop
  4257e5:	adc    al,BYTE PTR [ebp+esi*8+0x500d49e8]
  4257ec:	jmp    0x425815
  4257ee:	test   ebx,edx
  4257f0:	add    eax,0x5e8effc7
  4257f5:	pop    esp
  4257f6:	xor    eax,0xf24b3d1a
  4257fb:	es jns 0x42583f
  4257fe:	jecxz  0x4257ed
  425800:	mov    esi,0x2e0fa069
  425805:	mov    bh,0x74
  425807:	shl    BYTE PTR [eax+0x48],0x17
  42580b:	aad    0xbc
  42580d:	inc    esi
  42580e:	push   ebp
  42580f:	dec    esi
  425810:	popf   
  425811:	aad    0x38
  425813:	mov    edi,DWORD PTR [ebp-0x2597413b]
  425819:	je     0x42579e
  42581b:	sbb    BYTE PTR [esi+0x5e0423c5],dl
  425821:	out    dx,al
  425822:	mov    ebx,0x79a1bef1
  425827:	jl     0x425840
  425829:	(bad)  
  42582a:	in     al,dx
  42582b:	xlat   BYTE PTR ss:[ebx]
  42582d:	mov    ecx,0x22228ac2
  425832:	mov    WORD PTR [eax+eiz*4+0x373eb4d5],gs
  425839:	mov    ds,WORD PTR ds:[esi+0x17b123ef]
  425840:	sbb    eax,0xfe201aba
  425845:	sbb    eax,0xfc065555
  42584a:	(bad)  
  42584b:	fild   DWORD PTR [ebp+0x60a74ff]
  425851:	sahf   
  425852:	jecxz  0x42587d
  425854:	out    dx,al
  425855:	leave  
  425856:	cmc    
  425857:	and    cl,dh
  425859:	sbb    eax,0x52aa51e3
  42585e:	pop    ecx
  42585f:	aas    
  425860:	push   ds
  425861:	cmp    al,0xfa
  425863:	les    edi,FWORD PTR [ebx]
  425865:	in     eax,0x8e
  425867:	dec    edi
  425868:	clc    
  425869:	push   edx
  42586a:	or     bh,ch
  42586c:	push   esi
  42586d:	pop    eax
  42586e:	js     0x425800
  425870:	and    ebp,DWORD PTR [ecx-0x30]
  425873:	xchg   DWORD PTR [ebp+0x25],edx
  425876:	fnstcw WORD PTR [eax+0x124ae8eb]
  42587c:	push   eax
  42587d:	mov    esp,0x34907606
  425882:	in     eax,0x21
  425884:	das    
  425885:	sub    BYTE PTR [esp+eax*8-0x24],0xd9
  42588a:	stos   DWORD PTR es:[edi],eax
  42588b:	xchg   edi,eax
  42588c:	pop    edi
  42588d:	scas   al,BYTE PTR es:[edi]
  42588e:	inc    edx
  42588f:	lock leave 
  425891:	shl    bl,1
  425893:	clc    
  425894:	xchg   DWORD PTR [ebp+0x49],esp
  425897:	mov    ebp,0xeac7e643
  42589c:	lds    esi,FWORD PTR [ebx+0x69]
  42589f:	aam    0xa1
  4258a1:	mov    dh,0x54
  4258a3:	stos   DWORD PTR es:[edi],eax
  4258a4:	daa    
  4258a5:	bound  ebp,QWORD PTR [ebx+0x6a]
  4258a8:	(bad)  
  4258a9:	lea    ebx,[ebx]
  4258ab:	xor    eax,0x15548a9d
  4258b0:	cli    
  4258b1:	xchg   ebx,eax
  4258b2:	out    dx,al
  4258b3:	stc    
  4258b4:	retf   
  4258b5:	sbb    al,BYTE PTR [ecx+0xcbcf845]
  4258bb:	lods   al,BYTE PTR ds:[esi]
  4258bc:	sub    edi,DWORD PTR [edi]
  4258be:	ins    DWORD PTR es:[edi],dx
  4258bf:	or     BYTE PTR [eax],cl
  4258c1:	inc    ebp
  4258c2:	fimul  WORD PTR [ebp+edi*4+0x6e285a24]
  4258c9:	loop   0x4258c6
  4258cb:	(bad)  
  4258cc:	fadd   DWORD PTR [ebp+0x1f05437]
  4258d2:	loopne 0x4258e5
  4258d4:	retf   0xf5cd
  4258d7:	add    BYTE PTR [ebp-0x2c],ah
  4258da:	and    DWORD PTR [edi-0x58173e10],ecx
  4258e0:	das    
  4258e1:	out    dx,al
  4258e2:	imul   esi,esi,0x1d
  4258e5:	or     ebx,ecx
  4258e7:	outs   dx,BYTE PTR ds:[esi]
  4258e8:	or     al,0x3e
  4258ea:	retf   0xc15c
  4258ed:	test   esp,ebp
  4258ef:	inc    edx
  4258f0:	inc    ebx
  4258f1:	mov    cl,0xbe
  4258f3:	jecxz  0x4258da
  4258f5:	icebp  
  4258f6:	rcr    BYTE PTR [ebp-0x6081909a],0xa2
  4258fd:	sahf   
  4258fe:	mov    ah,0x7e
  425900:	push   ss
  425901:	pop    ebx
  425902:	cs (bad) 
  425904:	add    al,ch
  425906:	xchg   edi,eax
  425907:	dec    esp
  425908:	pop    ebp
  425909:	sahf   
  42590a:	mov    dl,0xde
  42590c:	pop    edi
  42590d:	pop    ss
  42590e:	stos   BYTE PTR es:[edi],al
  42590f:	adc    eax,0x7250cd45
  425914:	mov    dh,0xcf
  425916:	mov    DWORD PTR [esi+0x7c],ecx
  425919:	jae    0x42598b
  42591b:	add    bl,dh
  42591d:	mov    bh,0xbf
  42591f:	jle    0x425952
  425921:	sbb    eax,0xbe79ff09
  425926:	cmp    eax,0xe9eb029f
  42592b:	je     0x425917
  42592d:	jne    0x425951
  42592f:	imul   ecx,DWORD PTR [ecx+0x19],0x42
  425933:	jmp    0x0:0x1a
  42593a:	add    BYTE PTR [eax],al
  42593c:	add    BYTE PTR [eax],al
  42593e:	add    BYTE PTR [eax],al
  425940:	add    ah,ch
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx-0x3688e104],ah
  425951:	push   ecx
  425952:	rol    BYTE PTR [ecx],1
  425954:	add    BYTE PTR [ebx+eax*1+0x74070000],ch
  42595b:	xor    BYTE PTR [esi],al
  42595d:	or     al,0xb0
  42595f:	pop    esi
  425960:	inc    eax
  425961:	xor    al,0x54
  425963:	cmp    eax,0x8feb26b3
  425968:	sub    dl,BYTE PTR [edx+eiz*1]
  42596b:	or     eax,0xa4fab278
  425970:	sbb    DWORD PTR [edx-0x4b784d9],ebp
  425976:	dec    ebp
  425977:	mov    esp,0x8301f716
  42597c:	adc    eax,0x492b20b5
  425981:	call   FWORD PTR [ecx+ecx*4+0x43]
  425985:	pop    edi
  425986:	sahf   
  425987:	imul   edi,DWORD PTR [ecx-0x67d06004],0xffffff99
  42598e:	cmp    eax,0x206ab8b
  425993:	nop
  425994:	add    DWORD PTR [edx+0x50a539d6],edx
  42599a:	mov    esi,0x56f37599
  42599f:	cmp    al,0xfc
  4259a1:	jo     0x425971
  4259a3:	xchg   esi,eax
  4259a4:	push   0x43ee7429
  4259a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259ab:	daa    
  4259ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259ad:	mov    ch,0x5c
  4259af:	dec    ebp
  4259b0:	sub    al,0x81
  4259b2:	popf   
  4259b3:	test   BYTE PTR [ebp+0x5c],dl
  4259b6:	das    
  4259b7:	xchg   bl,bh
  4259b9:	sbb    ebx,edx
  4259bb:	mov    ss,WORD PTR [ebx-0x247b4506]
  4259c1:	test   DWORD PTR [eax-0x5a],0x8a5377b
  4259c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259c9:	and    DWORD PTR [edi-0x1ddcf6a7],ebx
  4259cf:	retf   
  4259d0:	cmp    DWORD PTR ds:0xe800ebc3,esp
  4259d6:	xchg   esp,eax
  4259d7:	call   0xbe62:0xb93c9d20
  4259de:	in     eax,dx
  4259df:	ds inc edi
  4259e1:	push   esi
  4259e2:	movq   QWORD PTR [ecx+edx*8],mm6
  4259e6:	fsin   
  4259e8:	das    
  4259e9:	mov    edi,0x503140
  4259ee:	in     eax,dx
  4259ef:	pop    esp
  4259f0:	in     al,dx
  4259f1:	xchg   ecx,eax
  4259f2:	sub    ecx,DWORD PTR [esi]
  4259f4:	rol    BYTE PTR [ecx+0x4d],0xa2
  4259f8:	sahf   
  4259f9:	vshufps xmm5,xmm6,XMMWORD PTR [ecx],0x47
  4259fe:	jns    0x42599a
  425a00:	jo     0x4259bf
  425a02:	adc    BYTE PTR [edi-0x63c547e9],ah
  425a08:	and    DWORD PTR [ecx],0xb13b6270
  425a0e:	aaa    
  425a0f:	(bad)  
  425a10:	jg     0x4259e8
  425a12:	sar    DWORD PTR [ebp*2-0x26f55eec],cl
  425a19:	add    ch,BYTE PTR [edi-0x5e1ac2a3]
  425a1f:	ror    DWORD PTR [ebx+eax*2+0x4a],1
  425a23:	cdq    
  425a24:	jae    0x425a4a
  425a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a27:	outs   dx,DWORD PTR ds:[esi]
  425a28:	gs inc ecx
  425a2a:	(bad)  
  425a2b:	repnz scas eax,DWORD PTR es:[edi]
  425a2d:	cmp    dl,dl
  425a2f:	mov    WORD PTR [edx-0x6d],ds
  425a32:	push   0xffffffed
  425a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a35:	popa   
  425a36:	ins    BYTE PTR es:[edi],dx
  425a37:	jno    0x4259ee
  425a39:	jo     0x425a1c
  425a3b:	push   eax
  425a3c:	jbe    0x425a6a
  425a3e:	sub    eax,0x2c8fb0ef
  425a43:	inc    edi
  425a44:	mov    edx,0x4063bf3
  425a49:	jmp    0xefcd:0x56d1e48b
  425a50:	inc    ebx
  425a51:	clc    
  425a52:	push   0x76
  425a54:	adc    al,0x84
  425a56:	dec    ecx
  425a57:	leave  
  425a58:	xor    ah,BYTE PTR [eax-0x7]
  425a5b:	pushf  
  425a5c:	loopne 0x425ac2
  425a5e:	push   0xffffffd4
  425a60:	mov    ah,0x14
  425a62:	ja     0x425a8d
  425a64:	xchg   ebx,eax
  425a65:	and    al,0x82
  425a67:	in     al,0xe6
  425a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a6a:	pop    edi
  425a6b:	ror    eax,0xda
  425a6e:	das    
  425a6f:	inc    esp
  425a70:	mov    dl,0x6a
  425a72:	out    0x26,eax
  425a74:	xchg   edi,eax
  425a75:	daa    
  425a76:	add    ah,BYTE PTR gs:[ebx]
  425a79:	fldenv [eax-0x5d]
  425a7c:	rcr    BYTE PTR [ebx-0x242e4f36],cl
  425a82:	pop    ebp
  425a83:	cld    
  425a84:	or     al,0xce
  425a86:	ret    
  425a87:	jne    0x425aa1
  425a89:	sub    al,0xed
  425a8b:	adc    eax,0xf4845c74
  425a90:	pop    ss
  425a91:	pop    ebp
  425a92:	mov    esi,0xc7319ea9
  425a97:	push   ecx
  425a98:	pop    ss
  425a99:	scas   al,BYTE PTR es:[edi]
  425a9a:	mov    al,ds:0x6cc5ca35
  425a9f:	pusha  
  425aa0:	out    dx,al
  425aa1:	mov    esp,0x987448bb
  425aa6:	cmp    eax,0x4d4a8dce
  425aab:	jge    0x425a3d
  425aad:	je     0x425ab6
  425aaf:	and    BYTE PTR [esi+0x57],bh
  425ab2:	aad    0x44
  425ab4:	in     eax,dx
  425ab5:	imul   ebx,DWORD PTR [ecx+0x3d8b4e54],0x908d44ff
  425abf:	dec    edi
  425ac0:	enter  0xd18,0x12
  425ac4:	adc    esi,DWORD PTR [ebp+ebx*8-0x63]
  425ac8:	xchg   ecx,eax
  425ac9:	aad    0xff
  425acb:	mov    ch,BYTE PTR ds:0x8cc8fcbe
  425ad1:	and    al,0xe9
  425ad3:	out    dx,al
  425ad4:	nop
  425ad5:	inc    edi
  425ad6:	retf   0x99cf
  425ad9:	pop    ecx
  425ada:	out    0x83,al
  425adc:	cmove  eax,DWORD PTR [esi+0x5497ba42]
  425ae3:	loopne 0x425b3d
  425ae5:	aas    
  425ae6:	(bad)  
  425ae7:	popa   
  425ae8:	aam    0x8a
  425aea:	cld    
  425aeb:	xchg   esp,eax
  425aec:	in     al,0x47
  425aee:	mov    al,0x29
  425af0:	inc    esp
  425af1:	ds push ss
  425af3:	fcmove st,st(3)
  425af5:	inc    ecx
  425af6:	add    DWORD PTR [esi+0x7600a5f7],ebx
  425afc:	dec    eax
  425afd:	(bad)  
  425aff:	sti    
  425b00:	loope  0x425b70
  425b02:	inc    edx
  425b03:	xor    DWORD PTR [eax],eax
  425b05:	inc    ebp
  425b06:	add    al,0x80
  425b08:	mov    bh,0x1d
  425b0a:	call   0x5585:0x7bf93bd2
  425b11:	push   esi
  425b12:	aaa    
  425b13:	push   0xffffffd0
  425b15:	enter  0x196e,0xbb
  425b19:	fist   DWORD PTR [edx+0x6e30fa30]
  425b1f:	and    dl,bh
  425b21:	mov    dl,0xc8
  425b23:	popa   
  425b24:	push   es
  425b25:	call   0x8dc88854
  425b2a:	dec    edx
  425b2b:	dec    ebp
  425b2c:	pusha  
  425b2d:	adc    DWORD PTR [esi+ecx*1+0x29ebc11],edx
  425b34:	stos   DWORD PTR es:[edi],eax
  425b35:	add    DWORD PTR [eax],ebp
  425b37:	mov    ds:0xc573139f,al
  425b3c:	notrack call DWORD PTR [ebp+0x3b832f7e]
  425b43:	out    dx,al
  425b44:	jne    0x425b53
  425b46:	and    bl,dl
  425b48:	imul   esi,ebx,0x55
  425b4b:	mov    DWORD PTR [esi+0x66],ecx
  425b4e:	adc    bh,dl
  425b50:	sbb    DWORD PTR [edx+eax*2-0x2fc3cb92],esp
  425b57:	retf   
  425b58:	mov    edx,0x481066c1
  425b5d:	lods   eax,DWORD PTR ds:[esi]
  425b5e:	mov    ebx,0xcd781bfa
  425b63:	aad    0x6
  425b65:	shl    DWORD PTR [edx-0x76d5850],0xa4
  425b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b6d:	xor    DWORD PTR [edx],ebp
  425b6f:	loope  0x425b7a
  425b71:	mov    ds:0x85362462,al
  425b76:	xor    al,0x4e
  425b78:	ror    DWORD PTR [edx+0x7],0xf8
  425b7c:	mov    eax,0x97170e78
  425b81:	xchg   esi,eax
  425b82:	mov    DWORD PTR [ebp-0x4],esi
  425b85:	ins    BYTE PTR es:[edi],dx
  425b86:	inc    BYTE PTR [ecx+0x5b]
  425b89:	(bad)  
  425b8a:	jecxz  0x425bb8
  425b8c:	mov    esi,0xd953146c
  425b91:	sub    ebp,DWORD PTR [ecx+0x4d]
  425b94:	stc    
  425b95:	ret    
  425b96:	inc    edi
  425b97:	xor    eax,0xffffffed
  425b9a:	jg     0x425be3
  425b9c:	cmp    ah,BYTE PTR ds:[edi+0x39]
  425ba0:	and    al,0x1
  425ba2:	inc    ebp
  425ba3:	imul   esp,ebp,0xed40511e
  425ba9:	mov    esi,0x2097c7ad
  425bae:	cdq    
  425baf:	test   BYTE PTR [eax-0x43e3b4bd],0x6b
  425bb6:	push   ss
  425bb7:	(bad)  
  425bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bb9:	imul   ebx,DWORD PTR [eax+0x34],0x24
  425bbd:	rcr    ch,cl
  425bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bc0:	add    BYTE PTR [edx-0x6ec5f4fb],ch
  425bc6:	out    0xc,al
  425bc8:	stos   DWORD PTR es:[edi],eax
  425bc9:	fst    st(1)
  425bcb:	inc    ebp
  425bcc:	fs mov bh,0x65
  425bcf:	popa   
  425bd0:	pop    ss
  425bd1:	pop    ebx
  425bd2:	sbb    edi,DWORD PTR [ebx-0x6ac068ee]
  425bd8:	retf   0x9f97
  425bdb:	xchg   DWORD PTR [esi+esi*4-0x53],edi
  425bdf:	and    DWORD PTR ss:[ebx-0x2e8d62c],edi
  425be6:	pop    edi
  425be7:	mov    eax,0x5abda12d
  425bec:	adc    DWORD PTR [ecx+ebp*2+0x42],0xc55dc7ed
  425bf4:	or     bl,ch
  425bf6:	repnz mov ds:0xd9c28a49,al
  425bfc:	pop    eax
  425bfd:	jmp    0x16a5:0xc551babe
  425c04:	cdq    
  425c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c06:	into   
  425c07:	or     bl,BYTE PTR [ebx+eax*4]
  425c0a:	or     al,0x61
  425c0c:	jns    0x425c7b
  425c0e:	push   edx
  425c0f:	repnz das 
  425c11:	test   ch,dh
  425c13:	dec    esp
  425c14:	sub    eax,0x5913916f
  425c19:	loope  0x425c37
  425c1b:	das    
  425c1c:	jmp    0x1f2a:0x287a1c16
  425c23:	sub    al,0xe7
  425c25:	xchg   edi,eax
  425c26:	retf   
  425c27:	jl     0x425c04
  425c29:	mov    BYTE PTR [ebx+0x369604f0],al
  425c2f:	(bad)  
  425c30:	xor    DWORD PTR [edi+0x65ec45c1],0x68e5a62f
  425c3a:	fs dec edx
  425c3c:	push   esp
  425c3d:	push   ebp
  425c3e:	lock pop edx
  425c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c41:	add    BYTE PTR [edx+eiz*4+0x78],dh
  425c45:	mov    ecx,0x329e054b
  425c4a:	sbb    DWORD PTR [esi],ecx
  425c4c:	mov    ds:0xe18419bd,al
  425c51:	cwde   
  425c52:	lods   al,BYTE PTR ds:[esi]
  425c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c54:	mov    cl,0xd
  425c56:	inc    edi
  425c57:	ror    BYTE PTR [ecx],0x57
  425c5a:	adc    eax,0x26349eef
  425c5f:	out    0x10,eax
  425c61:	repnz dec ebx
  425c63:	sar    DWORD PTR [esi+0x20e515fa],0xc
  425c6a:	inc    ebp
  425c6b:	inc    ebp
  425c6c:	jmp    0x715d8d0e
  425c71:	jp     0x425cec
  425c73:	hlt    
  425c74:	div    BYTE PTR [eax-0x3e581fd]
  425c7a:	push   ebx
  425c7b:	sbb    eax,ebp
  425c7d:	int3   
  425c7e:	pop    es
  425c7f:	mov    bh,0x5f
  425c81:	xchg   BYTE PTR [esi+0x7f3d9766],ch
  425c87:	scas   eax,DWORD PTR es:[edi]
  425c88:	sahf   
  425c89:	push   eax
  425c8a:	inc    ebp
  425c8b:	add    dh,BYTE PTR [ecx-0x5d]
  425c8e:	icebp  
  425c8f:	pop    ss
  425c90:	imul   ecx,DWORD PTR [eax],0xffffffed
  425c93:	push   0x29
  425c95:	lods   eax,DWORD PTR ds:[esi]
  425c96:	add    DWORD PTR [esi-0x3bb26dc4],edi
  425c9c:	jo     0x425d1d
  425c9e:	xor    al,dl
  425ca0:	(bad)  
  425ca1:	retf   0x1542
  425ca4:	push   ecx
  425ca5:	fwait
  425ca6:	arpl   WORD PTR [edx-0x1c],sp
  425ca9:	test   BYTE PTR [ebx+0x4123f1b8],al
  425caf:	into   
  425cb0:	add    bl,BYTE PTR [ecx+0x37]
  425cb3:	jnp    0x425c36
  425cb5:	xchg   edi,eax
  425cb6:	scas   al,BYTE PTR es:[edi]
  425cb7:	push   cs
  425cb8:	mov    BYTE PTR [ecx+eax*2],0x12
  425cbc:	popf   
  425cbd:	adc    bl,bh
  425cbf:	in     al,dx
  425cc0:	add    eax,0x3a7595fa
  425cc5:	(bad)  
  425cc6:	fnsave [eax]
  425cc8:	mov    ss,WORD PTR [edx]
  425cca:	mov    eax,ds:0x54d3d523
  425ccf:	push   ecx
  425cd0:	cli    
  425cd1:	or     BYTE PTR [ebx+eiz*8],0xa
  425cd5:	inc    ecx
  425cd6:	ret    0xebce
  425cd9:	cmp    DWORD PTR [edx+0x53],edi
  425cdc:	rol    BYTE PTR [eax+0x342f31d0],0xf1
  425ce3:	sbb    eax,0x6637534f
  425ce8:	(bad)
  425cec:	mov    ds:0x522b432e,eax
  425cf1:	loop   0x425c85
  425cf3:	fwait
  425cf4:	sub    al,BYTE PTR [ecx-0x3f]
  425cf7:	out    0x8f,eax
  425cf9:	bound  edi,QWORD PTR [esi]
  425cfb:	js     0x425caf
  425cfd:	out    0xde,eax
  425cff:	sar    BYTE PTR [ecx],1
  425d01:	fidivr DWORD PTR [esi]
  425d03:	xor    BYTE PTR [esi+0x0],ah
	...
  425d11:	pop    edx
  425d12:	push   ecx
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock jns 0x425d7b
  425d1f:	sahf   
  425d20:	mov    ds:0x1d3fd,al
  425d25:	lods   al,BYTE PTR ds:[esi]
  425d26:	add    eax,DWORD PTR [eax]
  425d28:	add    BYTE PTR [esi+0x39],ah
  425d2b:	fisttp WORD PTR [ebx-0x2dcbdde8]
  425d31:	mov    ds:0x7e39259,al
  425d36:	lea    ebx,[edx+0x3c]
  425d39:	clc    
  425d3a:	test   eax,0x4a9ec132
  425d3f:	mov    esp,0xd279a2d3
  425d44:	lods   eax,DWORD PTR ds:[esi]
  425d45:	jno    0x425da9
  425d47:	imul   esp,DWORD PTR [edi],0xd423e069
  425d4d:	fdivr  QWORD PTR [esp+edx*2-0x299949c9]
  425d54:	xchg   ebp,eax
  425d55:	cmp    eax,0x48095c59
  425d5a:	jmp    0x3408:0x3366e9dd
  425d61:	stos   BYTE PTR es:[edi],al
  425d62:	(bad)  
  425d63:	pop    ss
  425d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d66:	adc    BYTE PTR [eax-0x3a],bl
  425d69:	js     0x425d7b
  425d6b:	imul   esp,esp,0x940eef9a
  425d71:	cwde   
  425d72:	mov    bl,0x70
  425d74:	enter  0xdf20,0xad
  425d78:	add    eax,0x4d0d845b
  425d7d:	out    0x80,al
  425d7f:	fucomip st,st(6)
  425d81:	(bad)  
  425d82:	mov    ds:0x47718c61,al
  425d87:	test   BYTE PTR [edi+0x68],ah
  425d8a:	fcmovb st,st(6)
  425d8c:	std    
  425d8d:	sub    edx,DWORD PTR [ecx+edi*4-0x6cd62647]
  425d94:	(bad)  
  425d95:	aaa    
  425d96:	lods   eax,DWORD PTR ds:[esi]
  425d97:	fs mov dh,0x54
  425d9a:	xchg   esp,eax
  425d9b:	js     0x425d34
  425d9d:	adc    bh,cl
  425d9f:	or     esp,ecx
  425da1:	mov    esi,0xd22d7bb0
  425da6:	cmp    al,0xb2
  425da8:	mov    eax,ds:0x82db5bfb
  425dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dae:	retf   0x23aa
  425db1:	mov    al,0x45
  425db3:	mov    cl,0x0
  425db5:	fiadd  WORD PTR [edx-0xc]
  425db8:	xor    edx,DWORD PTR [edx-0x3ce3c339]
  425dbe:	popf   
  425dbf:	push   ds
  425dc0:	sbb    dh,0xe5
  425dc3:	cmp    BYTE PTR [esi+0x6],0xbc
  425dc7:	scas   eax,DWORD PTR es:[edi]
  425dc8:	jmp    0x7a52:0xa4230b1b
  425dcf:	dec    ebx
  425dd0:	mov    esp,DWORD PTR [edx+0x1]
  425dd3:	mov    edx,0x2bf66f43
  425dd8:	std    
  425dd9:	push   es
  425dda:	pop    ecx
  425ddb:	and    BYTE PTR [edi+eax*1-0x14],bl
  425ddf:	aad    0xf9
  425de1:	pop    esi
  425de2:	sbb    al,0xfe
  425de4:	pop    edx
  425de5:	hlt    
  425de6:	jmp    0xd09d:0x2442fac0
  425ded:	mov    BYTE PTR [ecx+eiz*1+0x2fa49316],ah
  425df4:	mov    WORD PTR [ebx],cs
  425df6:	fist   DWORD PTR [esi+0x64]
  425df9:	or     dl,BYTE PTR [ecx+eiz*4]
  425dfc:	inc    esp
  425dfd:	xchg   esi,eax
  425dfe:	jp     0x425e5e
  425e00:	jmp    0x425e6a
  425e02:	xchg   esi,eax
  425e03:	and    eax,0x5dd3b733
  425e08:	or     al,0x39
  425e0a:	sbb    eax,0x9117cb
  425e0f:	into   
  425e10:	pushf  
  425e11:	pop    es
  425e12:	ret    0xbc8a
  425e15:	xlat   BYTE PTR ss:[ebx]
  425e17:	add    ch,ah
  425e19:	fcmovbe st,st(5)
  425e1b:	ja     0x425e0a
  425e1d:	and    al,0x13
  425e1f:	mov    ds:0xdbd0b0c,eax
  425e24:	shl    BYTE PTR [ecx],cl
  425e26:	repnz and ebx,DWORD PTR [edx+0x26]
  425e2a:	cmc    
  425e2b:	xor    BYTE PTR [esp+ecx*8+0x2bbf8f52],ch
  425e32:	out    0xee,eax
  425e34:	jg     0x425e8d
  425e36:	sbb    al,0xb1
  425e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e39:	adc    DWORD PTR [eax],0x50861d06
  425e3f:	clc    
  425e40:	fucomp st(4)
  425e42:	mov    ah,0x5f
  425e44:	push   ds
  425e45:	mov    cl,0x66
  425e47:	mov    bl,0xf0
  425e49:	cli    
  425e4a:	mov    esi,0x8081c5af
  425e4f:	js     0x425e30
  425e51:	pushf  
  425e52:	xchg   edx,eax
  425e53:	jg     0x425eb7
  425e55:	dec    ebp
  425e56:	xor    DWORD PTR [ebx+0x2c],esi
  425e59:	push   eax
  425e5a:	in     eax,dx
  425e5b:	or     BYTE PTR [eax-0x4f],bl
  425e5e:	sbb    ebx,DWORD PTR [ebx-0x8b0494b]
  425e64:	jecxz  0x425e58
  425e66:	pop    edi
  425e67:	mov    edi,0xf22ac531
  425e6c:	jnp    0x425edb
  425e6e:	add    DWORD PTR [ebx],0x43eafab2
  425e74:	dec    esp
  425e75:	es scas eax,DWORD PTR es:[edi]
  425e77:	das    
  425e78:	dec    ebx
  425e79:	test   BYTE PTR [ecx],dl
  425e7b:	jg     0x425e85
  425e7d:	adc    eax,0x7223f498
  425e82:	add    esi,edi
  425e84:	sbb    eax,DWORD PTR [ecx-0x351ad5bb]
  425e8a:	das    
  425e8b:	inc    esp
  425e8c:	enter  0x8a59,0xb3
  425e90:	push   ebx
  425e91:	in     eax,0xe8
  425e93:	out    dx,eax
  425e94:	xchg   edx,eax
  425e95:	(bad)  
  425e96:	and    eax,0xef80a1a1
  425e9b:	pop    es
  425e9c:	iret   
  425e9d:	cmp    DWORD PTR [esi],eax
  425e9f:	mov    eax,0x480d972a
  425ea4:	aas    
  425ea5:	enter  0x1533,0xc5
  425ea9:	pushf  
  425eaa:	ins    DWORD PTR es:[edi],dx
  425eab:	lahf   
  425eac:	or     dh,dh
  425eae:	or     DWORD PTR [edi+0x4f],edi
  425eb1:	jg     0x425e98
  425eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eb4:	aad    0x2
  425eb6:	ja     0x425e75
  425eb8:	test   BYTE PTR [ebp-0x3a],0x83
  425ebc:	icebp  
  425ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ebe:	(bad)  
  425ebf:	fs fdivrp st(6),st
  425ec2:	and    ebx,eax
  425ec4:	xchg   edx,eax
  425ec5:	imul   esi,DWORD PTR [eax],0xffffff90
  425ec8:	fucomip st,st(3)
  425eca:	std    
  425ecb:	xor    ebp,DWORD PTR [ecx+0x1f1c518a]
  425ed1:	cld    
  425ed2:	cmp    BYTE PTR [esi+0x157a6ff8],al
  425ed8:	cld    
  425ed9:	push   ecx
  425eda:	add    eax,0xf69a6cbf
  425edf:	xlat   BYTE PTR ds:[ebx]
  425ee0:	mov    eax,ds:0x4d1b98b4
  425ee5:	pop    ss
  425ee6:	mov    edx,esi
  425ee8:	imul   esp,DWORD PTR [edi],0xffffff97
  425eeb:	int    0x7
  425eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eee:	call   0xfecc:0x984a6cbc
  425ef5:	and    DWORD PTR [eax-0x49b30bc0],0x40ef92be
  425eff:	mov    dl,0x3
  425f01:	adc    eax,0x8d6f2c9e
  425f06:	in     al,dx
  425f07:	aas    
  425f08:	pusha  
  425f09:	loope  0x425f60
  425f0b:	add    esi,DWORD PTR [ebx]
  425f0d:	jns    0x425ed7
  425f0f:	adc    BYTE PTR [esi+0x5457863],0x32
  425f16:	xor    BYTE PTR [ebp-0x40],dl
  425f19:	dec    edi
  425f1a:	rol    BYTE PTR [ebx],1
  425f1c:	jo     0x425ecc
  425f1e:	mov    dl,0x7b
  425f20:	ja     0x425f44
  425f22:	sub    BYTE PTR [edi-0x3ab5786e],0xc6
  425f29:	inc    esp
  425f2a:	shl    BYTE PTR [edx],cl
  425f2c:	xlat   BYTE PTR ds:[ebx]
  425f2d:	jb     0x425f55
  425f2f:	in     eax,dx
  425f30:	mov    edx,?
  425f32:	test   DWORD PTR ds:0xc991ebe6,ebp
  425f38:	inc    esp
  425f39:	pop    ecx
  425f3a:	pop    edx
  425f3b:	push   esp
  425f3c:	cmp    al,0x81
  425f3e:	inc    ecx
  425f3f:	scas   eax,DWORD PTR es:[edi]
  425f40:	dec    edi
  425f41:	in     eax,0x65
  425f43:	add    dl,BYTE PTR [edi-0x3d]
  425f46:	int3   
  425f47:	les    edx,FWORD PTR [eax-0x4e]
  425f4a:	in     al,dx
  425f4b:	dec    esp
  425f4c:	pop    ebp
  425f4d:	hlt    
  425f4e:	or     DWORD PTR [ebp-0x7f8befd3],0x5c
  425f55:	jl     0x425fb6
  425f57:	out    dx,eax
  425f58:	jne    0x425ef7
  425f5a:	sub    eax,0xe4813d71
  425f5f:	lods   al,BYTE PTR ds:[esi]
  425f60:	popf   
  425f61:	out    dx,eax
  425f62:	dec    edi
  425f63:	jbe    0x425f63
  425f65:	pop    edx
  425f66:	or     BYTE PTR [edi+0x50ddbe5f],bh
  425f6c:	cld    
  425f6d:	pop    ss
  425f6e:	mov    edx,0x19d25122
  425f73:	aaa    
  425f74:	cmp    DWORD PTR [edi-0x1],eax
  425f77:	xor    al,0x24
  425f79:	out    0x72,eax
  425f7b:	stc    
  425f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f7d:	mov    cs,WORD PTR [esi+edx*8-0x5c604668]
  425f84:	xor    ecx,DWORD PTR [edx+0x36]
  425f87:	sub    ebp,DWORD PTR [esi+ebx*4+0x9ed25f]
  425f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f8f:	clc    
  425f90:	or     esp,DWORD PTR [edi+0x2d]
  425f93:	sub    edx,DWORD PTR [ebp-0xb0e4020]
  425f99:	mov    eax,DWORD PTR [ebx]
  425f9b:	sbb    DWORD PTR [edx+0x69],eax
  425f9e:	push   ecx
  425f9f:	ins    DWORD PTR es:[edi],dx
  425fa0:	pop    esi
  425fa1:	imul   DWORD PTR [ecx+edx*4+0xfaa606b]
  425fa8:	inc    esp
  425fa9:	dec    ecx
  425faa:	add    ah,BYTE PTR [eax+0x2]
  425fad:	retf   0xb3f0
  425fb0:	gs ins BYTE PTR es:[edi],dx
  425fb2:	inc    esp
  425fb3:	ins    BYTE PTR es:[edi],dx
  425fb4:	or     DWORD PTR [esi+0x489fe926],eax
  425fba:	mov    fs,WORD PTR [edx+0x63cae502]
  425fc0:	sub    ecx,DWORD PTR [esi]
  425fc2:	sbb    cl,BYTE PTR [edx+ebp*1]
  425fc5:	loopne 0x426005
  425fc7:	adc    al,0xda
  425fc9:	aam    0xec
  425fcb:	rol    BYTE PTR [ebx+0x443ca725],1
  425fd1:	inc    esi
  425fd2:	and    BYTE PTR [eax],0xfc
  425fd5:	fdiv   DWORD PTR [eax]
  425fd7:	sbb    DWORD PTR [edx-0x36282bf0],esp
  425fdd:	fmul   DWORD PTR [edi+0x63f49d95]
  425fe3:	push   edi
  425fe4:	pop    ds
  425fe5:	mov    gs:0xd2ded9c,eax
  425feb:	pop    esp
  425fec:	mov    dl,0xc1
  425fee:	jecxz  0x425f94
  425ff0:	xlat   BYTE PTR ds:[ebx]
  425ff1:	or     dl,BYTE PTR [edi]
  425ff3:	sub    eax,0xeb6df403
  425ff8:	and    al,0x73
  425ffa:	mov    edi,0xaf0bf985
  425fff:	loopne 0x42605a
  426001:	nop
  426002:	push   ds
  426003:	sbb    edi,eax
  426005:	enter  0xc3cf,0x6e
  426009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42600a:	push   esp
  42600b:	sbb    al,0x86
  42600d:	mov    edi,DWORD PTR [edx]
  42600f:	jecxz  0x425fa3
  426011:	das    
  426012:	loope  0x426057
  426014:	add    eax,0xf288dc2e
  426019:	enter  0x7c59,0x5e
  42601d:	nop
  42601e:	fmul   st,st(5)
  426020:	lods   al,BYTE PTR ds:[esi]
  426021:	jmp    0x42608f
  426023:	push   ss
  426024:	hlt    
  426025:	add    BYTE PTR [eax-0x80],bl
  426028:	xchg   edi,eax
  426029:	pusha  
  42602a:	jae    0x42605a
  42602c:	stos   DWORD PTR es:[edi],eax
  42602d:	shl    edx,cl
  42602f:	mov    BYTE PTR [ebp-0x16],dl
  426032:	test   cl,ch
  426034:	cdq    
  426035:	cmp    eax,0x9ab878d4
  42603a:	pop    ss
  42603b:	mov    ebp,0x7cbab52d
  426040:	mov    esp,DWORD PTR [ebx+0x4e1f1f00]
  426046:	jae    0x42602b
  426048:	add    al,0x38
  42604a:	sbb    al,0x41
  42604c:	clc    
  42604d:	mov    bh,BYTE PTR [ebp-0x69]
  426050:	pushf  
  426051:	inc    ebp
  426052:	sub    ebx,esp
  426054:	pop    esp
  426055:	mov    bl,0xe5
  426057:	xor    al,0x67
  426059:	pusha  
  42605a:	(bad)  
  42605c:	dec    BYTE PTR [edx-0x1d]
  42605f:	mov    esi,?
  426061:	lea    eax,[ecx+0x26]
  426064:	loop   0x4260df
  426066:	dec    ebx
  426067:	mov    eax,0x5ab0b18b
  42606c:	mov    esp,0xa8cac87c
  426071:	push   esp
  426072:	or     bl,bl
  426074:	out    0xfe,eax
  426076:	aam    0x7f
  426078:	mov    edx,0xb1f4e871
  42607d:	mov    dl,BYTE PTR [esi-0x5]
  426080:	(bad)  
  426081:	pop    eax
  426082:	cmp    BYTE PTR [ebx-0x7cd001c4],0x99
  426089:	xchg   DWORD PTR [ebx+0x23],ebx
  42608c:	xchg   esp,eax
  42608d:	mov    al,0xa0
  42608f:	imul   ebx,DWORD PTR [ecx+0x17b5a107],0x92eeb8ae
  426099:	call   0xfc40:0xf0095789
  4260a0:	cdq    
  4260a1:	and    BYTE PTR [ebp+0x71],0xfa
  4260a5:	mov    DWORD PTR [ebp-0x31],0xf2460582
  4260ac:	int3   
  4260ad:	out    dx,eax
  4260ae:	xor    DWORD PTR [edi],0x2b
  4260b1:	jmp    0x4260a9
  4260b3:	adc    bl,0xdb
  4260b6:	or     DWORD PTR [edx-0x4b],0x4a
  4260ba:	(bad)  
  4260bb:	imul   DWORD PTR ds:0xd4299b7d
  4260c1:	xor    eax,0xd85ead56
  4260c6:	mov    al,ds:0xed106848
  4260cb:	xor    BYTE PTR [ebx-0xd],bl
  4260ce:	mov    esp,0x5a2a6a33
  4260d3:	ins    BYTE PTR es:[edi],dx
  4260d4:	fadd   DWORD PTR [eax]
	...
  4260de:	add    BYTE PTR [eax],al
  4260e0:	add    BYTE PTR [edx],bl
  4260e2:	call   0x3e3d72
  4260e7:	pop    edi
  4260e8:	out    dx,al
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    ecx,DWORD PTR [ecx-0x31]
  4260ef:	sub    DWORD PTR ds:0x1d7a9,esi
  4260f5:	lods   al,BYTE PTR ds:[esi]
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    BYTE PTR [ecx-0x7b],bh
  4260fb:	push   esi
  4260fc:	and    edi,DWORD PTR [ebp-0x1b]
  4260ff:	mov    dh,0x2
  426101:	imul   esp,DWORD PTR [eax-0x7e5ff29d],0x7ffd10b4
  42610b:	lea    esi,[edi-0x4c4b86f0]
  426111:	jo     0x4260b0
  426113:	shr    BYTE PTR [ebx],cl
  426115:	addr16 iret 
  426117:	fild   DWORD PTR [ecx]
  426119:	test   al,0x1
  42611b:	lds    ecx,FWORD PTR [edi]
  42611d:	add    ebp,ebp
  42611f:	dec    esi
  426120:	dec    ecx
  426121:	adc    BYTE PTR [ebx],al
  426123:	push   0xa976260c
  426128:	mov    al,0x8
  42612a:	inc    edi
  42612b:	jnp    0x4261a8
  42612d:	cmp    DWORD PTR ds:[ebx],esi
  426130:	adc    esp,DWORD PTR [ebp+0x3ebcdadb]
  426136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426137:	mov    bh,0x62
  426139:	lea    ebp,[ebp+0x3f611d7b]
  42613f:	and    eax,0x28bca582
  426144:	push   ds
  426145:	push   esp
  426146:	stos   DWORD PTR es:[edi],eax
  426147:	outs   dx,BYTE PTR ds:[esi]
  426148:	div    BYTE PTR [edi+0x6f768983]
  42614e:	fwait
  42614f:	ins    DWORD PTR es:[edi],dx
  426150:	daa    
  426151:	in     eax,dx
  426152:	add    dl,BYTE PTR [edx-0x6d]
  426155:	pop    esp
  426156:	cli    
  426157:	call   0x8fb4:0xbfc621b7
  42615e:	je     0x42611a
  426160:	scas   eax,DWORD PTR es:[edi]
  426161:	add    al,0xec
  426163:	je     0x426179
  426165:	pusha  
  426166:	push   ebp
  426167:	dec    edi
  426168:	add    al,al
  42616a:	pusha  
  42616b:	mov    ds:0x1ebe7f45,eax
  426170:	xor    al,0x26
  426172:	pop    ss
  426173:	sub    al,0xc3
  426175:	jns    0x426160
  426177:	adc    bh,0x5
  42617a:	jae    0x426127
  42617c:	push   ds
  42617d:	es out dx,al
  42617f:	iret   
  426180:	sar    BYTE PTR [ecx+0x27],cl
  426183:	popf   
  426184:	jge    0x426173
  426186:	ror    BYTE PTR [ebp*2-0x7cbd7b47],cl
  42618d:	or     cl,cl
  42618f:	push   es
  426190:	arpl   WORD PTR [edi],sp
  426192:	(bad)  
  426193:	or     eax,0xe63ebc85
  426198:	imul   dx,cx,0xffbf
  42619c:	dec    eax
  42619d:	sbb    dl,dh
  42619f:	push   eax
  4261a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261a1:	fcom   QWORD PTR [eax+0x595b1588]
  4261a7:	fadd   QWORD PTR [ebp-0x5c]
  4261aa:	xchg   BYTE PTR [ebp-0x37fb37db],dl
  4261b0:	adc    esi,DWORD PTR [ebp-0x34c5b292]
  4261b6:	in     al,0x78
  4261b8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261ba:	push   0xffffff88
  4261bc:	pop    edx
  4261bd:	sbb    al,0x3f
  4261bf:	call   0xbbfa:0xdf339c95
  4261c6:	stc    
  4261c7:	(bad)  
  4261c8:	into   
  4261c9:	and    ebx,DWORD PTR [edx]
  4261cb:	popf   
  4261cc:	ss push ss
  4261ce:	xchg   esi,eax
  4261cf:	rcr    DWORD PTR [eax-0x6d],cl
  4261d2:	and    ah,BYTE PTR [ecx+0x4c]
  4261d5:	jo     0x426232
  4261d7:	ficomp DWORD PTR [edx-0x4933730e]
  4261dd:	dec    ebp
  4261de:	dec    esi
  4261df:	mov    ah,0xc0
  4261e1:	dec    esi
  4261e2:	adc    DWORD PTR [edx],edi
  4261e4:	inc    eax
  4261e5:	dec    ebx
  4261e6:	jne    0x426212
  4261e8:	or     eax,0xcac98d54
  4261ed:	add    edi,edi
  4261ef:	lock cmp DWORD PTR [eax],0x29
  4261f3:	and    edi,ebx
  4261f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261f6:	shr    BYTE PTR [esi+0x5ce88bf],0x94
  4261fd:	(bad)  
  4261ff:	xor    DWORD PTR [edx+0x3c],esi
  426202:	stc    
  426203:	pop    ds
  426204:	sub    BYTE PTR gs:[ebp+0x5d],bh
  426208:	jge    0x4261ce
  42620a:	cli    
  42620b:	pop    ebp
  42620c:	dec    edx
  42620d:	aaa    
  42620e:	dec    esi
  42620f:	jno    0x42625b
  426211:	or     ebx,DWORD PTR [edx+ecx*4-0x42]
  426215:	lahf   
  426216:	ffree  st(6)
  426218:	mov    dl,0xfd
  42621a:	out    0x3,eax
  42621c:	jg     0x4261b9
  42621e:	add    bl,BYTE PTR [ebp+0x2a]
  426221:	xlat   BYTE PTR ds:[ebx]
  426222:	jmp    0x1357:0x32fed50c
  426229:	mov    ds:0x3eecccc9,al
  42622e:	push   esi
  42622f:	dec    eax
  426230:	inc    eax
  426231:	aaa    
  426232:	push   cs
  426233:	lahf   
  426234:	push   ss
  426235:	retf   
  426236:	or     al,0x63
  426238:	push   0xc26bf756
  42623d:	fs loop 0x42625d
  426240:	icebp  
  426241:	jb     0x426224
  426243:	dec    ebx
  426244:	out    0x99,eax
  426246:	pop    ss
  426247:	sbb    DWORD PTR [eax-0x2a541a94],ebx
  42624d:	xchg   esi,eax
  42624e:	mov    al,ds:0x9b59700d
  426253:	sbb    al,0x1a
  426255:	ret    
  426256:	mov    cl,0xe0
  426258:	aad    0xb2
  42625a:	lahf   
  42625b:	xchg   esi,eax
  42625c:	scas   eax,DWORD PTR es:[edi]
  42625d:	jle    0x426248
  42625f:	sub    al,0x39
  426261:	jmp    0x2764a56
  426266:	xlat   BYTE PTR ds:[ebx]
  426267:	imul   esi,DWORD PTR [ecx],0x98f41393
  42626d:	jp     0x426278
  42626f:	lods   al,BYTE PTR ds:[esi]
  426270:	dec    edx
  426271:	call   ecx
  426273:	(bad)
  426277:	inc    ebp
  426278:	ins    BYTE PTR es:[edi],dx
  426279:	and    al,0x5a
  42627b:	hlt    
  42627c:	(bad)  
  42627d:	(bad)  
  42627e:	leave  
  42627f:	dec    ebx
  426280:	mov    esp,0x7c152cc7
  426285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426286:	scas   eax,DWORD PTR es:[edi]
  426287:	stc    
  426288:	cmp    DWORD PTR [esi],0x67
  42628b:	out    0x51,eax
  42628d:	xor    edx,edx
  42628f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426290:	outs   dx,DWORD PTR ds:[esi]
  426291:	lock pop ss
  426293:	xchg   esp,eax
  426294:	push   ecx
  426295:	hlt    
  426296:	daa    
  426297:	daa    
  426298:	xchg   ebp,eax
  426299:	pop    ebp
  42629a:	fdivr  DWORD PTR [ebx+0x1740b714]
  4262a0:	retf   0xa645
  4262a3:	jno    0x4262c7
  4262a5:	pop    ebx
  4262a6:	sbb    eax,0x8ef0fda
  4262ab:	jg     0x4262ab
  4262ad:	dec    ecx
  4262ae:	xlat   BYTE PTR ds:[ebx]
  4262af:	arpl   WORD PTR [ebx],ax
  4262b1:	sub    dl,BYTE PTR [eax]
  4262b3:	hlt    
  4262b4:	pop    ds
  4262b5:	call   0xde34:0xa5e2c4bd
  4262bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262bd:	popf   
  4262be:	popf   
  4262bf:	std    
  4262c0:	jge    0x4262b0
  4262c2:	add    dh,BYTE PTR ss:[ecx+ebx*2+0x23]
  4262c7:	gs cdq 
  4262c9:	call   0x1d099197
  4262ce:	retf   
  4262cf:	mov    esi,0x24e5dd81
  4262d4:	mov    es,edx
  4262d6:	sub    DWORD PTR [edi+0x422e688d],ebx
  4262dc:	cli    
  4262dd:	lock repnz cmp esi,ebx
  4262e1:	push   esi
  4262e2:	inc    esp
  4262e3:	ins    BYTE PTR es:[edi],dx
  4262e4:	cmp    BYTE PTR [ecx+0x3a],cl
  4262e7:	pop    ebp
  4262e8:	rcl    BYTE PTR ds:0xb718874f,1
  4262ee:	jle    0x4262cd
  4262f0:	pop    ebp
  4262f1:	xor    al,0xd8
  4262f3:	imul   ebx,DWORD PTR [ecx],0xc1a2282d
  4262f9:	dec    ebx
  4262fa:	push   0xffffffd1
  4262fc:	clc    
  4262fd:	pop    edi
  4262fe:	adc    BYTE PTR [ebx+0x3e2ba2e0],ah
  426304:	in     al,dx
  426305:	mov    ?,WORD PTR [edx]
  426307:	sub    BYTE PTR [edi-0x26],ah
  42630a:	pop    edx
  42630b:	ror    DWORD PTR [ecx+edx*2],1
  42630e:	pop    es
  42630f:	lods   eax,DWORD PTR ss:[esi]
  426311:	pop    DWORD PTR [edx+0x53]
  426314:	outs   dx,BYTE PTR ds:[esi]
  426315:	dec    edx
  426316:	xchg   esp,eax
  426317:	mov    DWORD PTR [edx+0x6],esp
  42631a:	cmp    BYTE PTR [ecx+edi*2-0x1f],dl
  42631e:	adc    DWORD PTR [eax+edx*2-0x7b],esi
  426322:	pop    ebp
  426323:	loop   0x42637b
  426325:	das    
  426326:	lods   eax,DWORD PTR ds:[esi]
  426327:	outs   dx,DWORD PTR ds:[esi]
  426328:	and    ch,BYTE PTR [esi-0x14c23e7f]
  42632e:	out    0xd,al
  426330:	xor    BYTE PTR [ebx],bl
  426332:	scas   al,BYTE PTR es:[edi]
  426333:	jl     0x42631d
  426335:	loop   0x426338
  426337:	ss dec bp
  42633a:	shr    BYTE PTR [eax+edx*4-0x3f94cf48],1
  426341:	jb     0x4262f5
  426343:	xor    al,0x9b
  426345:	scas   eax,DWORD PTR es:[edi]
  426346:	push   ebp
  426347:	pushf  
  426348:	and    DWORD PTR [esi-0x7d],edi
  42634b:	mov    eax,ds:0xf45827f8
  426350:	sub    ebp,ebx
  426352:	mov    edx,0xcec339f4
  426357:	int3   
  426358:	xchg   esp,eax
  426359:	imul   DWORD PTR [ebp+0x79]
  42635c:	or     eax,0x5cfd84f0
  426361:	push   edx
  426362:	repz scas al,BYTE PTR es:[edi]
  426364:	add    eax,0x62841510
  426369:	lds    ebp,FWORD PTR [esp+ebp*4-0xb]
  42636d:	xchg   edi,eax
  42636e:	mov    ecx,0x9a4aa459
  426373:	jge    0x4263a0
  426375:	addr16 lock or edx,esp
  426379:	(bad)  
  42637a:	test   eax,0x71ee0bf5
  42637f:	mov    esp,0x9c854db3
  426384:	xor    edi,eax
  426386:	in     eax,dx
  426387:	push   ebx
  426388:	and    eax,0x8b2ca001
  42638d:	std    
  42638e:	cdq    
  42638f:	dec    esi
  426390:	js     0x4263e2
  426392:	(bad)  
  426393:	call   0x8271:0xc85ee8fb
  42639a:	add    al,0xc0
  42639c:	jae    0x42635f
  42639e:	xor    al,0x47
  4263a0:	inc    ebx
  4263a1:	rcl    BYTE PTR [esi],0x2b
  4263a4:	lods   eax,DWORD PTR ds:[esi]
  4263a5:	aam    0x80
  4263a7:	dec    esp
  4263a8:	cwde   
  4263a9:	(bad)  
  4263aa:	xor    ebp,ecx
  4263ac:	mov    eax,0x41d8a48c
  4263b1:	xor    BYTE PTR [esi-0x68],0xb3
  4263b5:	jp     0x42640f
  4263b7:	xchg   bl,dl
  4263b9:	leave  
  4263ba:	mov    ah,bh
  4263bc:	sbb    al,0x64
  4263be:	cwde   
  4263bf:	push   ebx
  4263c0:	shl    DWORD PTR [edi-0x48bbb2e7],0x98
  4263c7:	xchg   ebx,eax
  4263c8:	jg     0x426396
  4263ca:	adc    ch,BYTE PTR [ebx+0x10]
  4263cd:	jns    0x4263d5
  4263cf:	inc    edx
  4263d0:	push   ss
  4263d1:	push   ss
  4263d2:	or     eax,0x1d4ea111
  4263d7:	ret    0xa986
  4263da:	sub    cl,dl
  4263dc:	jle    0x42639e
  4263de:	xor    BYTE PTR [ecx+0x4e],dh
  4263e1:	sbb    ebx,DWORD PTR [edx]
  4263e3:	sub    bh,bl
  4263e5:	mov    edi,0x5877c086
  4263ea:	out    0x16,al
  4263ec:	cmp    DWORD PTR [ebp+0x3085c9fb],0x66482a3d
  4263f6:	mov    WORD PTR [ecx+0x11],fs
  4263f9:	sar    DWORD PTR [ecx+0x554ebc8b],0x31
  426400:	jmp    0xa5ded2a4
  426405:	xchg   BYTE PTR [edx-0x5f9d39d1],bh
  42640b:	and    BYTE PTR ds:0x1ec13145,al
  426411:	aad    0x86
  426413:	lods   al,BYTE PTR ds:[esi]
  426414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426415:	mov    al,ds:0xb26e1b46
  42641a:	pop    ebx
  42641b:	xchg   esi,eax
  42641c:	pushf  
  42641d:	in     eax,0x2
  42641f:	lods   eax,DWORD PTR ds:[esi]
  426420:	std    
  426421:	inc    esp
  426422:	cmc    
  426423:	mov    BYTE PTR [esp+esi*8+0x4b],bh
  426427:	xchg   esp,eax
  426428:	adc    eax,0x4b70f8d0
  42642d:	push   0xffffffc0
  42642f:	test   DWORD PTR [esp+edx*4],esi
  426432:	xor    DWORD PTR [eax],esi
  426434:	ja     0x4264a1
  426436:	call   0xd9e52bef
  42643b:	ret    0x9aaa
  42643e:	xchg   DWORD PTR [ebp-0x57],ebp
  426441:	push   ebp
  426442:	mov    ds:0xa63628cd,al
  426447:	call   0x18249678
  42644c:	adc    BYTE PTR [eax-0x12],bl
  42644f:	mov    ebx,0x880eeb54
  426454:	mov    ch,0xa5
  426456:	pop    esi
  426457:	es out 0x85,al
  42645a:	cmp    eax,0x5247bfa7
  42645f:	repz leave 
  426461:	div    BYTE PTR cs:[eax]
  426464:	mov    ch,0x70
  426466:	dec    ebp
  426467:	into   
  426468:	push   esp
  426469:	mov    al,0xc4
  42646b:	cmp    bh,dh
  42646d:	mul    DWORD PTR [edx]
  42646f:	mov    dh,0x31
  426471:	fdivr  DWORD PTR [ebx+0x17254462]
  426477:	add    eax,0xe2226fd
  42647c:	mov    ds:0xa60543b3,al
  426481:	push   eax
  426482:	leave  
  426483:	mov    ch,0xa4
  426485:	(bad)  
  426486:	(bad)  
  426487:	data16 (bad) [ebx+esi*2]
  42648b:	xlat   BYTE PTR ds:[ebx]
  42648c:	or     eax,0x353af135
  426491:	enter  0x689e,0x58
  426495:	imul   ecx,DWORD PTR [ebp+0x4a1a4e41],0xffffffd2
  42649c:	daa    
  42649d:	pushf  
  42649e:	jnp    0x4264a9
  4264a0:	imul   edi,DWORD PTR [ecx-0x47],0x9d01
	...
  4264af:	add    BYTE PTR [eax],al
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     edi,DWORD PTR [esi+eiz*4]
  4264bf:	fs das 
  4264c1:	push   ebp
  4264c2:	fild   DWORD PTR [ecx]
  4264c4:	add    BYTE PTR [ebx+eax*1-0x20170000],ch
  4264cb:	stc    
  4264cc:	sub    ecx,DWORD PTR [edx+0xf]
  4264cf:	addr16 jb 0x426495
  4264d2:	retf   0xe209
  4264d5:	xor    ebx,eax
  4264d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264d8:	mov    ds:0x3987a504,al
  4264dd:	mov    cl,0x86
  4264e0:	dec    esi
  4264e1:	shl    eax,0x2b
  4264e4:	fsubr  DWORD PTR [edi-0x76c4e119]
  4264ea:	cld    
  4264eb:	iret   
  4264ec:	(bad)  
  4264ed:	data16 jnp 0x4264d3
  4264f0:	shl    DWORD PTR [esi+0x40],1
  4264f3:	push   es
  4264f4:	mov    edi,0x80755441
  4264f9:	lods   eax,DWORD PTR ds:[esi]
  4264fa:	les    ebp,FWORD PTR [ebx-0x73cc701f]
  426500:	add    dl,dh
  426502:	xchg   ebx,eax
  426503:	ja     0x4264cd
  426505:	cmp    eax,0x23a07e6a
  42650a:	dec    sp
  42650c:	add    eax,0x1453df67
  426511:	iret   
  426512:	dec    esp
  426513:	pop    edi
  426514:	xor    al,0xea
  426516:	into   
  426517:	stc    
  426518:	sti    
  426519:	mov    al,ds:0x77b3e582
  42651e:	and    al,0x4a
  426520:	test   al,0x57
  426522:	xor    ebp,esi
  426524:	mov    ebp,DWORD PTR [edi]
  426526:	adc    ecx,eax
  426528:	sti    
  426529:	and    DWORD PTR [ebx+esi*4-0x4c3930f1],esi
  426530:	test   al,0x2
  426532:	add    al,0x40
  426534:	dec    ebx
  426535:	adc    DWORD PTR [ebx],edx
  426537:	or     al,0xbe
  426539:	cmp    esp,0xffffff94
  42653c:	sub    bh,dl
  42653e:	jne    0x42651c
  426540:	cdq    
  426541:	pop    esp
  426542:	rcr    bh,0x6d
  426545:	imul   edi,DWORD PTR [ebx],0x984f5886
  42654b:	das    
  42654c:	xchg   al,al
  42654e:	inc    ebx
  42654f:	(bad)  
  426550:	leave  
  426551:	cmp    DWORD PTR [eax-0x149c4547],ecx
  426557:	mov    al,bh
  426559:	imul   esp,edi,0xd1bfc6f4
  42655f:	cmp    ch,BYTE PTR [ecx-0x908eb65]
  426565:	mov    eax,ds:0xcf415d2b
  42656a:	inc    ebx
  42656b:	pop    esi
  42656c:	xchg   ebp,eax
  42656d:	shr    DWORD PTR [ebx-0xe2e3225],1
  426573:	es mov ebx,esp
  426576:	push   ebp
  426577:	and    DWORD PTR [esi],esi
  426579:	(bad)  
  42657a:	jmp    0x26bb:0x62ed6bf0
  426581:	add    BYTE PTR [edi+0x4b0089bd],bh
  426587:	out    dx,eax
  426588:	xchg   ebp,eax
  426589:	mov    cl,0xe5
  42658b:	adc    eax,0x9fffbb0f
  426590:	jae    0x42658c
  426592:	xchg   edi,edi
  426594:	jmp    0x4fb1:0xc8204e45
  42659b:	jns    0x42656c
  42659d:	dec    eax
  42659e:	into   
  42659f:	sub    cl,0xa2
  4265a2:	rep lods eax,DWORD PTR ds:[esi]
  4265a4:	mov    esp,0xe95989f5
  4265a9:	jbe    0x426606
  4265ab:	cmc    
  4265ac:	aaa    
  4265ad:	imul   ebp,DWORD PTR [edx+0xe],0x41aa528
  4265b4:	add    bl,BYTE PTR [edx]
  4265b6:	pop    eax
  4265b7:	ret    
  4265b8:	aaa    
  4265b9:	xor    eax,0xcc5b6ab1
  4265be:	(bad)  
  4265bf:	stc    
  4265c0:	xchg   edx,eax
  4265c1:	nop
  4265c2:	sbb    BYTE PTR [ebp+eax*2+0x72],al
  4265c6:	addr16 out 0x86,eax
  4265c9:	and    al,0x4a
  4265cb:	call   0x22aa:0x33f69e5c
  4265d2:	add    cl,BYTE PTR [edx+esi*4+0x4b]
  4265d6:	xor    BYTE PTR [esi+0x597620fd],0x3e
  4265dd:	or     DWORD PTR [edx+0x57],edi
  4265e0:	test   eax,0xe7ee151a
  4265e5:	push   0x2d
  4265e7:	push   edi
  4265e8:	bound  ebx,QWORD PTR [ebp+0x708024d]
  4265ee:	in     al,0x87
  4265f0:	dec    esp
  4265f1:	push   ebp
  4265f2:	dec    esi
  4265f3:	call   0xe9888cb5
  4265f8:	xchg   edi,eax
  4265f9:	int3   
  4265fa:	aaa    
  4265fb:	mov    ecx,0xc669eb0a
  426600:	popf   
  426601:	cmp    DWORD PTR [ebx+0x22c8aab6],esp
  426607:	pop    edx
  426608:	cdq    
  426609:	test   BYTE PTR [ebp-0x3a57b65a],0x7a
  426610:	push   eax
  426611:	mov    dl,0xfb
  426613:	sbb    ecx,DWORD PTR [edi-0x3f9f3e90]
  426619:	add    eax,0x3b2ed5da
  42661e:	ja     0x42666a
  426620:	pusha  
  426621:	fbld   TBYTE PTR [ecx]
  426623:	mov    al,ds:0x4db4d3c8
  426628:	cmp    al,0xdf
  42662a:	sub    eax,0x345a7a72
  42662f:	jo     0x426652
  426631:	push   edi
  426632:	jb     0x4265fc
  426634:	sub    DWORD PTR cs:[edi-0x64],edi
  426638:	adc    eax,0x2c7fee9b
  42663d:	inc    ebx
  42663e:	pushf  
  42663f:	fidiv  DWORD PTR [ebx+0x4777f3ef]
  426645:	in     eax,0xa1
  426647:	sub    ebp,esp
  426649:	dec    ebx
  42664a:	cmp    al,0xc8
  42664c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42664d:	retf   
  42664e:	xor    al,0x2d
  426650:	call   0xb5d4:0xaef0672d
  426657:	xlat   BYTE PTR ds:[ebx]
  426658:	fiadd  WORD PTR [edi]
  42665a:	mov    bh,0x77
  42665c:	and    cl,BYTE PTR [ecx+0x4a]
  42665f:	or     DWORD PTR [ecx-0x20],edx
  426662:	inc    ecx
  426663:	fidiv  WORD PTR [eax-0x7a]
  426666:	jle    0x42666c
  426668:	lods   al,BYTE PTR ds:[esi]
  426669:	stos   BYTE PTR es:[edi],al
  42666a:	jne    0x4266e1
  42666c:	xchg   ebx,eax
  42666d:	sbb    al,0x4f
  42666f:	cmp    al,0xbc
  426671:	mov    cl,0xed
  426673:	pop    esi
  426674:	into   
  426675:	dec    edi
  426676:	scas   al,BYTE PTR es:[edi]
  426677:	outs   dx,BYTE PTR ds:[esi]
  426678:	jp     0x4266b3
  42667a:	outs   dx,BYTE PTR ds:[esi]
  42667b:	cmp    al,0x16
  42667d:	xchg   DWORD PTR [esi+ecx*4-0x62ac5da4],ecx
  426684:	push   ds
  426685:	cmp    DWORD PTR [ebx+0x5],ecx
  426688:	scas   al,BYTE PTR es:[edi]
  426689:	clc    
  42668a:	rcr    esp,0x10
  42668d:	mov    BYTE PTR [edx+0x54],cl
  426690:	cmp    BYTE PTR [edi-0x79],al
  426693:	sbb    ebp,DWORD PTR [esi]
  426695:	mov    bh,BYTE PTR [esi]
  426697:	ret    
  426698:	push   ebx
  426699:	mov    ebx,0xae619c5b
  42669e:	mov    ecx,0x40591249
  4266a3:	mov    esi,0x682fbc7f
  4266a8:	pop    ecx
  4266a9:	lea    esi,[eax+0x26]
  4266ac:	shr    DWORD PTR [edi-0x5d47f26a],0x2c
  4266b3:	pop    esp
  4266b4:	outs   dx,DWORD PTR es:[esi]
  4266b6:	or     ebp,DWORD PTR [esi+0x479a37d7]
  4266bc:	jmp    0x53577938
  4266c1:	pushaw 
  4266c3:	sysenter 
  4266c5:	clc    
  4266c6:	ror    DWORD PTR [esi+0x1bc55bd2],1
  4266cc:	cli    
  4266cd:	loope  0x4266a3
  4266cf:	xchg   ecx,eax
  4266d0:	mov    ch,0x79
  4266d2:	lock xchg DWORD PTR [edi],edi
  4266d5:	sahf   
  4266d6:	pop    ecx
  4266d7:	outs   dx,BYTE PTR ds:[esi]
  4266d8:	xchg   esi,eax
  4266d9:	jmp    0x42669f
  4266db:	push   0x73
  4266dd:	std    
  4266de:	mov    eax,0x1e146977
  4266e3:	ins    DWORD PTR es:[edi],dx
  4266e4:	and    BYTE PTR [edi],dl
  4266e6:	ins    DWORD PTR es:[edi],dx
  4266e7:	loope  0x426730
  4266e9:	ins    BYTE PTR es:[edi],dx
  4266ea:	call   0x48895ec3
  4266ef:	push   esp
  4266f0:	xor    BYTE PTR [ecx+0x73],dh
  4266f3:	mov    dl,0x8c
  4266f5:	pop    edx
  4266f6:	rol    BYTE PTR [eax+0xf50e0ce],1
  4266fc:	out    0xef,al
  4266fe:	cli    
  4266ff:	jbe    0x4266ff
  426701:	or     eax,0x68b349e
  426706:	scas   eax,DWORD PTR es:[edi]
  426707:	retf   0xd370
  42670a:	add    bl,bl
  42670c:	add    edx,edx
  42670e:	mov    bl,0xb3
  426710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426711:	cmc    
  426712:	outs   dx,BYTE PTR ds:[esi]
  426713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426714:	in     al,0x34
  426716:	test   eax,0xbfda720b
  42671b:	dec    DWORD PTR [ecx]
  42671d:	iret   
  42671e:	xchg   esi,eax
  42671f:	inc    esp
  426720:	imul   ebx,ebp,0xffffff9c
  426723:	sub    esp,DWORD PTR ds:0x2bc3f82
  426729:	mov    ebx,0xa1d1c464
  42672e:	sub    DWORD PTR [esi+0x40],ecx
  426731:	and    al,0xe9
  426733:	ja     0x4266fe
  426735:	ins    DWORD PTR es:[edi],dx
  426736:	rol    DWORD PTR [edi],cl
  426738:	jl     0x4266d0
  42673a:	test   eax,0x80490f41
  42673f:	in     eax,dx
  426740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426741:	fwait
  426742:	xchg   edx,eax
  426743:	dec    eax
  426744:	sbb    eax,0x63456a7a
  426749:	lea    ebx,[edi+0x18]
  42674c:	dec    ecx
  42674d:	sbb    al,0xbe
  42674f:	retf   0xb01
  426752:	cmp    DWORD PTR [ebp-0x3d],eax
  426755:	add    BYTE PTR [ebx-0x66],cl
  426758:	ins    DWORD PTR es:[edi],dx
  426759:	jo     0x42670f
  42675b:	lds    edi,FWORD PTR [eax-0x7cfa7550]
  426761:	test   eax,0xfe10e2fa
  426766:	and    eax,0xa960af45
  42676b:	fsubr  DWORD PTR [edx-0x6577729e]
  426771:	mov    ch,BYTE PTR [edx+eiz*8-0x49d689b2]
  426778:	jmp    0x51e4903
  42677d:	jno    0x426737
  42677f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426780:	mov    edx,0x7bbfc6c9
  426785:	push   esi
  426786:	es mov al,0x25
  426789:	inc    esi
  42678a:	mov    bl,BYTE PTR [ebx]
  42678c:	test   eax,0x40da904c
  426791:	jmp    0x5c53:0xcd93a946
  426798:	mov    ecx,ss
  42679a:	adc    ebx,DWORD PTR [edx+ebp*2-0x1f]
  42679e:	stos   DWORD PTR es:[edi],eax
  42679f:	addr16 aad 0x43
  4267a2:	cli    
  4267a3:	je     0x426809
  4267a5:	ss push ds
  4267a7:	(bad)
  4267ab:	sub    eax,eax
  4267ad:	sub    ebx,ecx
  4267af:	push   ebx
  4267b0:	add    eax,0x37bb5f19
  4267b5:	xchg   BYTE PTR [esi-0x18],bl
  4267b8:	repnz (bad) 
  4267ba:	push   cs
  4267bb:	xor    eax,ecx
  4267bd:	and    eax,0x76bfc399
  4267c2:	into   
  4267c3:	(bad)  
  4267c4:	loop   0x42678e
  4267c6:	dec    ebx
  4267c7:	jmp    DWORD PTR [esi+0x5ce1a480]
  4267cd:	dec    ecx
  4267ce:	test   eax,0x1779148f
  4267d3:	fidivr WORD PTR [edi]
  4267d5:	outs   dx,DWORD PTR ds:[esi]
  4267d6:	cwde   
  4267d7:	pop    eax
  4267d8:	jb     0x426842
  4267da:	sub    DWORD PTR [ecx],edx
  4267dc:	pop    esp
  4267dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267de:	xchg   ecx,eax
  4267df:	push   ds
  4267e0:	xlat   BYTE PTR ds:[ebx]
  4267e1:	aaa    
  4267e2:	in     al,dx
  4267e3:	pop    ss
  4267e4:	add    eax,0x9d641ddf
  4267e9:	pop    edx
  4267ea:	stos   BYTE PTR es:[edi],al
  4267eb:	shr    DWORD PTR [eax-0x21],1
  4267ee:	mov    eax,ds:0x4b9ed5e6
  4267f3:	cmp    eax,0xa16a5c49
  4267f8:	add    cl,ah
  4267fa:	mov    DWORD PTR [edi-0x8ba00bd],esp
  426800:	ins    BYTE PTR es:[edi],dx
  426801:	out    dx,eax
  426802:	inc    ebp
  426803:	jle    0x426852
  426805:	jle    0x42679d
  426807:	cmp    al,0x79
  426809:	or     DWORD PTR [edi+edi*8],eax
  42680c:	ja     0x426859
  42680e:	and    BYTE PTR [edx-0x458cd1ea],0x5f
  426815:	xor    BYTE PTR [edx+0x7a],dl
  426818:	out    dx,eax
  426819:	loope  0x4267ba
  42681b:	jg     0x426884
  42681d:	inc    esi
  42681e:	enter  0x7fcf,0xb7
  426822:	repnz add ebp,DWORD PTR [ebp-0x28150c18]
  426829:	test   BYTE PTR [eax+0x41480739],ch
  42682f:	pop    eax
  426830:	pop    edi
  426831:	rol    ah,0xc9
  426834:	sub    edx,ecx
  426836:	retf   0xe898
  426839:	imul   edi,edx,0x439d4e01
  42683f:	or     DWORD PTR [ecx+0x11],eax
  426842:	sbb    al,0x8b
  426844:	(bad)  
  426845:	and    esp,esp
  426847:	ds jbe 0x426805
  42684a:	xor    DWORD PTR [edi-0x8],0xffffffdd
  42684e:	fs ins DWORD PTR es:[edi],dx
  426850:	cli    
  426851:	cwde   
  426852:	das    
  426853:	mov    edi,0x5443c2f
  426858:	ror    dl,cl
  42685a:	repnz out dx,al
  42685c:	retf   
  42685d:	jo     0x4268cf
  42685f:	cli    
  426860:	ret    0xe42f
  426863:	div    BYTE PTR [ecx-0x855dd21]
  426869:	push   ss
  42686a:	scas   eax,DWORD PTR es:[edi]
  42686b:	shl    dl,0xf4
  42686e:	mov    al,0x8d
  426870:	loop   0x4268df
  426872:	push   ecx
  426873:	inc    bh
	...
  426881:	ror    esi,0xf
  426884:	ror    BYTE PTR [edi],cl
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	popa   
  42688e:	test   edi,edi
  426890:	inc    edx
  426891:	add    edi,ebx
  426893:	add    DWORD PTR [eax],eax
  426895:	lods   al,BYTE PTR ds:[esi]
  426896:	add    eax,DWORD PTR [eax]
  426898:	add    BYTE PTR [ecx+0x104df14d],al
  42689e:	cld    
  42689f:	nop
  4268a0:	sub    ebp,edi
  4268a2:	popa   
  4268a3:	repnz xchg edx,eax
  4268a5:	and    eax,DWORD PTR [edx+0x1]
  4268a8:	test   al,0x8d
  4268aa:	cmp    DWORD PTR [edx+0x529d1c71],edx
  4268b0:	rcr    dh,0xb5
  4268b3:	cmc    
  4268b4:	and    eax,0x28ea677b
  4268b9:	mov    eax,ds:0x66ebec0f
  4268be:	mov    edx,0xc90c8c9b
  4268c3:	es in  al,dx
  4268c5:	aas    
  4268c6:	int3   
  4268c7:	fs xchg dx,ax
  4268ca:	mov    ecx,DWORD PTR [esi+0x5c7757b0]
  4268d0:	cmp    esi,DWORD PTR [edi+0x8c9b090]
  4268d6:	jnp    0x426918
  4268d8:	inc    eax
  4268d9:	jb     0x426900
  4268db:	scas   eax,DWORD PTR es:[edi]
  4268dc:	dec    ebx
  4268dd:	mov    BYTE PTR [ebp+0x4b243992],ch
  4268e3:	or     esi,DWORD PTR [ebx+0x7722499d]
  4268e9:	imul   eax,ebp,0x5e3254c7
  4268ef:	lods   al,BYTE PTR ds:[esi]
  4268f0:	and    eax,0xe19a0bc4
  4268f5:	mov    ?,ebp
  4268f7:	test   DWORD PTR [edx+eax*8],eax
  4268fa:	test   BYTE PTR [esi-0x76],0x8c
  4268fe:	fsubr  QWORD PTR [edi]
  426900:	enter  0x1e0b,0xba
  426904:	mov    DWORD PTR [eax-0x63],ecx
  426907:	pop    eax
  426908:	and    al,0xaa
  42690a:	pusha  
  42690b:	jno    0x4268c9
  42690d:	shl    DWORD PTR [esp+ebx*2+0x1db7ef62],1
  426914:	mov    ss,WORD PTR [si-0x331]
  426919:	dec    ebx
  42691a:	xchg   edx,eax
  42691b:	popf   
  42691c:	xor    DWORD PTR [edi+0x1852b6cc],ecx
  426922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426923:	push   esp
  426924:	push   edi
  426925:	(bad)  
  426926:	je     0x42698c
  426928:	xor    bh,BYTE PTR [esi]
  42692a:	pusha  
  42692b:	push   si
  42692d:	lods   al,BYTE PTR ds:[esi]
  42692e:	xor    edi,DWORD PTR [eax+0x4b]
  426931:	outs   dx,BYTE PTR ds:[esi]
  426932:	xchg   edx,eax
  426933:	jae    0x4268f4
  426935:	es stos BYTE PTR es:[edi],al
  426937:	pop    ds
  426938:	mov    dl,0x99
  42693a:	scas   al,BYTE PTR es:[edi]
  42693b:	dec    ebx
  42693c:	jo     0x426927
  42693e:	nop
  42693f:	add    ebp,ebp
  426941:	dec    ebp
  426942:	and    eax,0xa5fa4756
  426947:	mov    cl,0xc1
  426949:	pop    esp
  42694a:	call   0x7fa2:0x6e6efe1
  426951:	xchg   esi,eax
  426952:	ds popa 
  426954:	or     esi,DWORD PTR [esi-0x60]
  426957:	retf   
  426958:	popf   
  426959:	jmp    0x5a89b307
  42695e:	aad    0x85
  426960:	shl    DWORD PTR [ebp+0x1b],0x69
  426964:	mov    edx,0x23f4d2a6
  426969:	sbb    DWORD PTR [edi+esi*4-0x34326785],edi
  426970:	in     eax,dx
  426971:	mov    ah,BYTE PTR [ebx-0x1e7a9328]
  426977:	add    eax,0x6ef27fe2
  42697c:	es ja  0x4269dd
  42697f:	stc    
  426980:	sub    al,0x8a
  426982:	or     al,dl
  426984:	out    dx,eax
  426985:	pop    eax
  426986:	outs   dx,BYTE PTR ds:[esi]
  426987:	loope  0x42699f
  426989:	mov    dl,0xe5
  42698b:	hlt    
  42698c:	jl     0x426973
  42698e:	int3   
  42698f:	xchg   esi,eax
  426990:	cdq    
  426991:	or     esp,edx
  426993:	loop   0x4269a5
  426995:	jge    0x4269ef
  426997:	inc    esi
  426998:	test   eax,0xb1b527cd
  42699d:	inc    ecx
  42699e:	xchg   ecx,eax
  42699f:	ror    DWORD PTR [eax-0x1cfba3df],1
  4269a5:	int3   
  4269a6:	lods   eax,DWORD PTR ds:[esi]
  4269a7:	mov    ebp,0x2948770
  4269ac:	add    al,0xe7
  4269ae:	in     al,dx
  4269af:	xchg   ebp,eax
  4269b0:	pop    ecx
  4269b1:	clc    
  4269b2:	mov    BYTE PTR [edi-0x3],bh
  4269b5:	add    BYTE PTR fs:[ecx-0x2f],al
  4269b9:	mov    edx,0x7cf7debf
  4269be:	jl     0x4269f5
  4269c0:	rcr    DWORD PTR [eax],0x7e
  4269c3:	in     al,dx
  4269c4:	xchg   ebp,eax
  4269c5:	mov    ds:0xa3a92e10,eax
  4269ca:	loop   0x4269ca
  4269cc:	je     0x4269c3
  4269ce:	out    0x7,eax
  4269d0:	cmc    
  4269d1:	bound  ebp,QWORD PTR [esi+0x1d91d72e]
  4269d7:	es gs inc eax
  4269da:	retf   
  4269db:	loope  0x426a06
  4269dd:	mov    ds:0x4cd4d3df,al
  4269e2:	cld    
  4269e3:	mov    ds:0xbd2c6771,al
  4269e8:	popa   
  4269e9:	sar    esp,0x12
  4269ec:	mov    bl,0x7b
  4269ee:	pop    esi
  4269ef:	out    0xc3,al
  4269f1:	je     0x42698c
  4269f3:	push   es
  4269f4:	popa   
  4269f5:	ins    BYTE PTR es:[edi],dx
  4269f6:	scas   al,BYTE PTR es:[edi]
  4269f7:	and    al,BYTE PTR ds:0xfb36a61f
  4269fd:	inc    ebx
  4269fe:	or     edi,DWORD PTR [edi+0x56]
  426a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a02:	pop    ds
  426a03:	mov    al,ds:0x5804805e
  426a08:	and    edi,DWORD PTR [ebx]
  426a0a:	jno    0x426993
  426a0c:	or     DWORD PTR [edi-0x4fd9b0cd],ecx
  426a12:	mov    ebx,0x3e90c2b0
  426a17:	jnp    0x426a63
  426a19:	mov    cl,0x7b
  426a1b:	lock les eax,FWORD PTR [esi+0x1e57751b]
  426a22:	test   DWORD PTR [ecx],ebx
  426a24:	fadd   DWORD PTR [ebx-0x3e107c95]
  426a2a:	bswap  edi
  426a2c:	cmp    bl,0xdc
  426a2f:	pop    ds
  426a30:	loope  0x4269fc
  426a32:	push   0x14ea8f5a
  426a37:	xlat   BYTE PTR ds:[ebx]
  426a38:	dec    edi
  426a39:	mov    ds:0x8fccca4a,eax
  426a3e:	xchg   edx,eax
  426a3f:	sbb    eax,0x8fccd3ff
  426a44:	jp     0x426a2d
  426a46:	aas    
  426a47:	test   DWORD PTR [ebx-0x18bbe3bc],ebp
  426a4d:	sub    edx,eax
  426a4f:	ret    
  426a50:	inc    edx
  426a51:	adc    ecx,DWORD PTR [ebp+0x6bcae0f]
  426a57:	nop
  426a58:	xchg   DWORD PTR [ebx+0x1a509c5e],ebx
  426a5e:	sub    BYTE PTR [edx+0x63083005],bh
  426a64:	add    al,0x41
  426a66:	popa   
  426a67:	adc    BYTE PTR [ecx+edx*4-0x55],al
  426a6b:	js     0x4269ff
  426a6d:	jbe    0x426a19
  426a6f:	out    0x36,al
  426a71:	pop    es
  426a72:	call   0x304e:0x194bb318
  426a79:	aad    0xfe
  426a7b:	in     al,dx
  426a7c:	jmp    0x5c9cc2d6
  426a81:	mov    ah,0xaf
  426a83:	(bad)  
  426a84:	jmp    0x426af7
  426a86:	ins    DWORD PTR es:[edi],dx
  426a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a88:	dec    eax
  426a89:	and    eax,0xecccf10d
  426a8e:	jo     0x426a3a
  426a90:	or     al,0x5e
  426a92:	add    ch,BYTE PTR [edx-0x16de6ae4]
  426a98:	sbb    dh,dl
  426a9a:	sbb    edx,DWORD PTR [ecx-0x14]
  426a9d:	add    BYTE PTR [edx],dl
  426a9f:	xor    al,0x65
  426aa1:	dec    edx
  426aa2:	mov    cl,0xdb
  426aa4:	aas    
  426aa5:	sub    cl,bl
  426aa7:	hlt    
  426aa8:	xchg   DWORD PTR [edx],ecx
  426aaa:	jns    0x426a80
  426aac:	xchg   edi,eax
  426aad:	cli    
  426aae:	shr    ebp,1
  426ab0:	(bad)  
  426ab1:	in     al,dx
  426ab2:	(bad)
  426ab5:	mov    dh,0xa1
  426ab7:	xchg   esi,eax
  426ab8:	dec    ebp
  426ab9:	pop    esp
  426aba:	sbb    DWORD PTR [edi-0x18d319a7],esp
  426ac0:	mov    ecx,0x12200004
  426ac5:	sbb    bl,BYTE PTR [ebx+0x3621c515]
  426acb:	(bad)  
  426acc:	fist   DWORD PTR [edi-0x2d434420]
  426ad2:	inc    eax
  426ad3:	sbb    BYTE PTR [ebx+0x60f5c0a7],dl
  426ad9:	or     al,0x27
  426adb:	mov    eax,ds:0x52280f11
  426ae0:	mov    cs,WORD PTR [ebx-0x27]
  426ae3:	in     eax,0x2a
  426ae5:	aad    0x9b
  426ae7:	xchg   esi,eax
  426ae8:	sti    
  426ae9:	les    eax,FWORD PTR ds:0xf109b947
  426aef:	rcr    BYTE PTR [eax+0x25],1
  426af2:	ja     0x426abc
  426af4:	(bad)  
  426af5:	sbb    BYTE PTR [ebp+edx*2+0x1788e1f5],bh
  426afc:	pop    edi
  426afd:	mov    ebx,0x650def5e
  426b02:	clc    
  426b03:	cmp    eax,0xf55136e3
  426b08:	push   ebx
  426b09:	imul   esp,DWORD PTR ds:0x70d0d415,0x4360a89b
  426b13:	push   ecx
  426b14:	and    bh,BYTE PTR [ebp-0x6324dccb]
  426b1a:	sub    bh,BYTE PTR [ecx+0x690abbd8]
  426b20:	sub    ch,BYTE PTR [ecx+edx*8+0x68]
  426b24:	and    eax,0xec7088f8
  426b29:	push   0x2e4e988f
  426b2e:	clc    
  426b2f:	add    al,0xf6
  426b31:	push   eax
  426b32:	add    DWORD PTR [edi+edx*4+0x1b272729],0xe87a9d4f
  426b3d:	out    dx,al
  426b3e:	fstp   st(6)
  426b40:	js     0x426ba6
  426b42:	fadd   DWORD PTR ds:0x4cbc0677
  426b48:	popa   
  426b49:	stos   BYTE PTR es:[edi],al
  426b4a:	sbb    BYTE PTR [edx+0x61ad8c77],ch
  426b50:	mov    ebx,0x7d32aaee
  426b55:	sub    eax,0xbec0a571
  426b5a:	out    dx,al
  426b5b:	dec    esi
  426b5c:	inc    ebp
  426b5d:	pop    ds
  426b5e:	xor    esp,ecx
  426b60:	nop
  426b61:	popa   
  426b62:	xlat   BYTE PTR ds:[ebx]
  426b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b64:	lods   eax,DWORD PTR ds:[esi]
  426b65:	retf   0x79a9
  426b68:	out    dx,al
  426b69:	push   0xffffffcb
  426b6b:	inc    esi
  426b6c:	out    0x74,eax
  426b6e:	and    al,0x6e
  426b70:	addr16 dec eax
  426b72:	ins    BYTE PTR es:[edi],dx
  426b73:	data16 int 0x72
  426b76:	mov    ch,0x10
  426b78:	fs mov ebx,0xd3c775aa
  426b7e:	arpl   WORD PTR [ebx],si
  426b80:	in     al,dx
  426b81:	lea    esi,[esi+0x73]
  426b84:	mov    cl,0x4
  426b86:	mov    edi,0x85fa87e7
  426b8b:	cmp    edx,eax
  426b8d:	mov    ecx,0x34456745
  426b92:	div    BYTE PTR [ecx+ecx*8+0x66807d6a]
  426b99:	jmp    0x426bfb
  426b9b:	arpl   dx,bp
  426b9d:	cmc    
  426b9e:	mov    es,WORD PTR [ecx+0x36]
  426ba1:	dec    ecx
  426ba2:	ds in  al,dx
  426ba4:	psrlq  mm6,QWORD PTR [edi]
  426ba7:	outs   dx,DWORD PTR ds:[esi]
  426ba8:	xor    edi,DWORD PTR [edx]
  426baa:	sbb    al,0x9
  426bad:	push   eax
  426bae:	aas    
  426baf:	pop    edi
  426bb0:	push   eax
  426bb1:	in     al,0xcd
  426bb3:	gs inc esi
  426bb5:	fwait
  426bb6:	inc    ecx
  426bb7:	outs   dx,BYTE PTR ds:[esi]
  426bb8:	add    bh,BYTE PTR [ecx]
  426bba:	lods   eax,DWORD PTR ds:[esi]
  426bbb:	mov    ebx,0x2fb4841e
  426bc0:	dec    eax
  426bc1:	dec    esi
  426bc2:	repz ret 0xe264
  426bc6:	push   esp
  426bc7:	cmp    ecx,DWORD PTR [edx]
  426bc9:	ja     0x426c3b
  426bcb:	xchg   edi,eax
  426bcc:	lock fmulp st(2),st
  426bcf:	repnz test eax,0x106ea997
  426bd5:	daa    
  426bd6:	xchg   ebx,eax
  426bd7:	cs sbb al,0xdd
  426bda:	fcmove st,st(2)
  426bdc:	adc    eax,0x29040d7c
  426be1:	call   0x7d77:0x9bcf3bb1
  426be8:	dec    edi
  426be9:	adc    DWORD PTR [edi],esi
  426beb:	out    0x69,al
  426bed:	xor    DWORD PTR [ebx],0xf3850ffa
  426bf3:	arpl   WORD PTR [edx+ebx*1+0x45],ax
  426bf7:	xchg   ebp,eax
  426bf8:	mov    WORD PTR [edx+0x64],?
  426bfb:	and    BYTE PTR [edx+0x63ba0ed9],bl
  426c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c02:	test   BYTE PTR [edx+0x4d],al
  426c05:	fwait
  426c06:	jbe    0x426c79
  426c08:	push   0xffffffb9
  426c0a:	mov    BYTE PTR [ebp+0x70],al
  426c0d:	jp     0x426c5c
  426c0f:	xchg   ebp,eax
  426c10:	mov    esp,0x42adb4d9
  426c15:	and    esi,DWORD PTR [esi]
  426c17:	jno    0x426c74
  426c19:	mov    ebx,ebx
  426c1b:	mov    al,0xaf
  426c1d:	retf   
  426c1e:	clc    
  426c1f:	loopne 0x426be0
  426c21:	sahf   
  426c22:	adc    eax,DWORD PTR [ebp-0x19d11335]
  426c28:	jo     0x426c12
  426c2a:	in     eax,0x9b
  426c2c:	enter  0xb3ce,0x5c
  426c30:	shr    BYTE PTR [ecx],cl
  426c32:	in     al,0x67
  426c34:	and    DWORD PTR [eax+0x3a578bbc],esi
  426c3a:	(bad)  
  426c3b:	mov    bh,0x8e
  426c3d:	xchg   DWORD PTR [ecx],esp
  426c3f:	dec    edi
  426c40:	sub    BYTE PTR [ecx],cl
  426c42:	std    
  426c43:	call   0x0:0xac
  426c4a:	add    BYTE PTR [eax],al
  426c4c:	add    BYTE PTR [eax],al
  426c4e:	add    BYTE PTR [eax],al
  426c50:	add    al,dh
  426c52:	lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp ebp,DWORD PTR [ebx+0x7f]
  426c5f:	clc    
  426c60:	shr    BYTE PTR [ebp-0x53fffe1e],cl
  426c66:	add    eax,DWORD PTR [eax]
  426c68:	add    BYTE PTR [esi],al
  426c6a:	das    
  426c6b:	xchg   ebx,eax
  426c6c:	retf   0x9934
  426c6f:	jmp    0xcabd:0x5864e1dd
  426c76:	cld    
  426c77:	mov    WORD PTR [ebx],?
  426c79:	cli    
  426c7a:	cmpps  xmm4,XMMWORD PTR [edi],0x71
  426c7e:	mov    bl,0x84
  426c80:	mov    ch,0x26
  426c82:	into   
  426c83:	mov    dh,0x89
  426c85:	xor    ecx,DWORD PTR [ebx-0x7503eef9]
  426c8b:	mov    dl,BYTE PTR [edi]
  426c8d:	inc    ecx
  426c8e:	mov    eax,ds:0x71377165
  426c93:	int3   
  426c94:	jmp    0xf85f1245
  426c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c9a:	icebp  
  426c9b:	jp     0x426cd1
  426c9d:	pop    ebp
  426c9e:	dec    eax
  426c9f:	and    DWORD PTR [edi-0x5d77207b],esp
  426ca5:	shr    dh,0xb5
  426ca8:	mov    cl,0xfb
  426caa:	add    dh,BYTE PTR [ecx]
  426cac:	pop    esp
  426cad:	mov    ebp,DWORD PTR [ebp+0x3e9875f7]
  426cb3:	sbb    dh,BYTE PTR [ecx-0x1c52e8b2]
  426cb9:	inc    eax
  426cba:	pop    edi
  426cbb:	int3   
  426cbc:	shl    BYTE PTR [edx-0x6c],1
  426cbf:	nop
  426cc0:	jp     0x426cff
  426cc2:	inc    edi
  426cc3:	push   es
  426cc4:	push   cs
  426cc5:	and    DWORD PTR [ebx+0x22],ecx
  426cc8:	add    BYTE PTR [ebx],dh
  426cca:	lahf   
  426ccb:	inc    esi
  426ccc:	push   ebx
  426ccd:	mov    edx,0xeccce7c9
  426cd2:	sbb    BYTE PTR [edi+0x4e],ah
  426cd5:	jmp    DWORD PTR [ecx-0x7b485c47]
  426cdb:	retf   
  426cdc:	(bad)  
  426cdd:	ins    DWORD PTR es:[edi],dx
  426cde:	test   BYTE PTR [edx+0x3650e83],al
  426ce4:	sbb    ebp,DWORD PTR [ebx+0x3c]
  426ce7:	retf   
  426ce8:	mov    edx,0x7dc8b594
  426ced:	cdq    
  426cee:	inc    BYTE PTR [ebp+0x18e8c08c]
  426cf4:	sbb    eax,0x80ce7e8
  426cf9:	je     0x426cf4
  426cfb:	retf   
  426cfc:	loope  0x426cbe
  426cfe:	or     eax,0x148848da
  426d03:	fstp   TBYTE PTR [edx]
  426d05:	sbb    BYTE PTR [eax],0xde
  426d08:	jno    0x426cfe
  426d0a:	adc    al,0x44
  426d0c:	ins    DWORD PTR es:[edi],dx
  426d0d:	lds    ebp,FWORD PTR ds:0x994f478d
  426d13:	inc    ebp
  426d14:	and    eax,DWORD PTR [esi-0x937dc8b]
  426d1a:	push   edx
  426d1b:	pop    ss
  426d1c:	adc    ebp,DWORD PTR [eax]
  426d1e:	das    
  426d1f:	sub    al,0xca
  426d21:	push   ss
  426d22:	inc    eax
  426d23:	cmp    al,0x3b
  426d25:	hlt    
  426d26:	jbe    0x426ceb
  426d28:	jecxz  0x426d02
  426d2a:	sub    al,0xd2
  426d2c:	fadd   QWORD PTR [edi-0x1d]
  426d2f:	cmp    eax,0x9df0521d
  426d34:	mov    BYTE PTR [edi+edx*1-0x1c],cl
  426d38:	stos   BYTE PTR es:[edi],al
  426d39:	mov    esi,0x8ed3a09
  426d3e:	test   eax,0x9004ccd0
  426d43:	and    DWORD PTR [edx-0x3a],ebx
  426d46:	mov    edi,DWORD PTR [ebx-0x571f8b15]
  426d4c:	jns    0x426dba
  426d4e:	out    0x40,al
  426d50:	retf   0x8d3d
  426d53:	clc    
  426d54:	inc    esi
  426d55:	cwde   
  426d56:	sub    al,0xa0
  426d58:	stc    
  426d59:	icebp  
  426d5a:	repz xor esi,DWORD PTR [edx]
  426d5d:	sub    bl,ch
  426d5f:	mov    eax,0x3867dbbb
  426d64:	scas   al,BYTE PTR es:[edi]
  426d65:	rol    BYTE PTR [ebx-0x167cfe0a],0x3a
  426d6c:	aas    
  426d6d:	fstp   DWORD PTR [edi+0x4f09e8cf]
  426d73:	shl    DWORD PTR [edx],0xec
  426d76:	fidiv  DWORD PTR [ebp+0x12]
  426d79:	mov    bl,0x13
  426d7b:	dec    esp
  426d7c:	sbb    eax,0x116f615
  426d81:	out    0xb8,al
  426d83:	iret   
  426d84:	enter  0xcea8,0xfd
  426d88:	pop    ds
  426d89:	ja     0x426d44
  426d8b:	jge    0x426d5e
  426d8d:	inc    esp
  426d8e:	mov    al,ds:0x5df9ceb7
  426d93:	popf   
  426d94:	mov    edi,DWORD PTR [eax+ecx*4]
  426d97:	test   ecx,edi
  426d99:	imul   ch
  426d9b:	push   0x61981b5
  426da0:	add    DWORD PTR [esi],ecx
  426da2:	mov    edi,0xed236f6a
  426da7:	cld    
  426da8:	or     bh,0x3f
  426dab:	adc    ebp,DWORD PTR [ebx]
  426dad:	jg     0x426d96
  426daf:	or     eax,0x86460100
  426db4:	adc    al,0xb6
  426db6:	icebp  
  426db7:	and    BYTE PTR [ebx],cl
  426db9:	jbe    0x426e0c
  426dbb:	mov    eax,0xd7088fec
  426dc0:	int    0xa2
  426dc2:	pop    edx
  426dc3:	inc    esp
  426dc4:	dec    ebp
  426dc5:	sub    BYTE PTR [eax],al
  426dc7:	fdivr  QWORD PTR [edi-0x58]
  426dca:	not    DWORD PTR [edx+0x16462cf0]
  426dd0:	lds    esp,FWORD PTR [edi-0x63e8afa2]
  426dd6:	cmp    DWORD PTR [esi],esi
  426dd8:	add    DWORD PTR [ecx],ebx
  426dda:	outs   dx,DWORD PTR ds:[esi]
  426ddb:	call   0x9b7a:0xf150ea30
  426de2:	(bad)  
  426de3:	bound  ebx,QWORD PTR [eax+ecx*1+0x3eeb420d]
  426dea:	arpl   ax,di
  426dec:	shr    BYTE PTR [edi],cl
  426dee:	push   ss
  426def:	xchg   esp,ecx
  426df1:	shl    BYTE PTR [esi+ebp*2-0x13],0x5
  426df6:	scas   al,BYTE PTR es:[edi]
  426df7:	outs   dx,BYTE PTR ds:[esi]
  426df8:	xchg   ecx,eax
  426df9:	push   edx
  426dfa:	push   edx
  426dfb:	sub    cl,bl
  426dfd:	xchg   ebx,eax
  426dfe:	lds    ebx,FWORD PTR [esi-0x6ebdf512]
  426e04:	dec    ebx
  426e05:	sbb    BYTE PTR ds:0x453798dc,bh
  426e0b:	stos   DWORD PTR es:[edi],eax
  426e0c:	jle    0x426e29
  426e0e:	mov    esp,0xfbb6cc16
  426e13:	mov    ds:0x6e77ee0e,eax
  426e18:	push   cs
  426e19:	daa    
  426e1a:	push   esi
  426e1b:	fsubr  DWORD PTR [eax]
  426e1d:	call   FWORD PTR [esp+ecx*8+0x3c]
  426e21:	xchg   esi,eax
  426e22:	or     al,0x73
  426e24:	dec    edx
  426e25:	mov    dl,0xc2
  426e27:	dec    edi
  426e28:	adc    al,0x93
  426e2a:	cli    
  426e2b:	jne    0x426e4a
  426e2d:	loopne 0x426db0
  426e2f:	(bad)  
  426e30:	mov    bh,0xfe
  426e32:	jmp    0x34e4:0x2f045022
  426e39:	or     eax,0xd608ef4d
  426e3e:	(bad)  
  426e3f:	daa    
  426e40:	or     ecx,DWORD PTR [edx]
  426e42:	mov    ch,0xd9
  426e44:	jmp    0xa898:0xb200538c
  426e4b:	push   esi
  426e4c:	sub    al,0xb4
  426e4e:	add    esi,edx
  426e50:	leave  
  426e51:	and    DWORD PTR [ebp+0xc],0xffffffc8
  426e55:	push   0x69
  426e57:	shl    DWORD PTR [esp+eiz*8-0x5c1b707a],0x9d
  426e5f:	xchg   ebp,eax
  426e60:	mov    ebp,DWORD PTR [edi]
  426e62:	pop    esp
  426e63:	jecxz  0x426e83
  426e65:	adc    edx,DWORD PTR [eax+ebp*4]
  426e68:	fcmovnu st,st(6)
  426e6a:	sahf   
  426e6b:	sbb    BYTE PTR [esi+0x1bfe4d69],dl
  426e71:	(bad)  
  426e72:	mov    ds:0xb0f7f7ed,al
  426e77:	lea    ecx,[ebx]
  426e79:	add    eax,0x5c76cd7
  426e7e:	dec    edx
  426e7f:	mov    cl,0xa7
  426e81:	bound  edx,QWORD PTR [ebx]
  426e83:	xchg   ecx,eax
  426e84:	popf   
  426e85:	jb     0x426ebe
  426e87:	popf   
  426e88:	enter  0x27db,0xff
  426e8c:	mov    edi,0xbdeaba15
  426e91:	jb     0x426e3d
  426e93:	mov    esi,0x599786c4
  426e98:	cwde   
  426e99:	jl     0x426e7b
  426e9b:	ret    0x6127
  426e9e:	jae    0x426f1b
  426ea0:	retf   
  426ea1:	rcl    edx,0xf2
  426ea4:	ret    0xc3f1
  426ea7:	xchg   esi,eax
  426ea8:	dec    ebp
  426ea9:	inc    ebx
  426eaa:	sbb    edx,DWORD PTR [ebx+0x64]
  426ead:	loope  0x426e93
  426eaf:	cmp    ax,0xefab
  426eb3:	fisub  DWORD PTR [edx]
  426eb5:	out    0x68,eax
  426eb7:	xchg   edi,esp
  426eb9:	pop    ds
  426eba:	dec    ecx
  426ebb:	cmp    dh,BYTE PTR [ebx+0x280b5740]
  426ec1:	cld    
  426ec2:	in     eax,dx
  426ec3:	mov    eax,ds:0x3ecd57a2
  426ec8:	jne    0x426ed9
  426eca:	mov    ebp,ebx
  426ecc:	adc    DWORD PTR [ebx],edx
  426ece:	cli    
  426ecf:	cdq    
  426ed0:	fdivr  QWORD PTR [esi+eiz*8+0x5b8eca5f]
  426ed7:	xor    DWORD PTR [edx-0x29],0x5307f533
  426ede:	enter  0xc732,0xb6
  426ee2:	adc    cl,BYTE PTR [ebp+0x7d0e0e91]
  426ee8:	es and edi,esp
  426eeb:	ret    0x75f7
  426eee:	pop    es
  426eef:	pop    esi
  426ef0:	js     0x426eb1
  426ef2:	loopne 0x426ea6
  426ef4:	iret   
  426ef5:	or     al,0xc9
  426ef7:	loop   0x426e8e
  426ef9:	cmp    al,0x17
  426efb:	hlt    
  426efc:	xchg   BYTE PTR [ebx+0x1e],cl
  426eff:	popa   
  426f00:	inc    esi
  426f01:	cmc    
  426f02:	adc    eax,0x1367d6d1
  426f07:	mov    esp,0xc099a120
  426f0c:	cli    
  426f0d:	out    dx,al
  426f0e:	pop    edx
  426f0f:	cmc    
  426f10:	dec    ecx
  426f11:	pop    ebx
  426f12:	cmp    edi,esp
  426f14:	push   esp
  426f16:	into   
  426f17:	scas   al,BYTE PTR es:[edi]
  426f18:	icebp  
  426f19:	fstp   DWORD PTR [edx+0x28]
  426f1c:	(bad)  
  426f1d:	ficomp WORD PTR es:0x3526fc0d
  426f24:	scas   al,BYTE PTR es:[edi]
  426f25:	cli    
  426f26:	pop    es
  426f27:	outs   dx,BYTE PTR ds:[esi]
  426f28:	and    DWORD PTR [ebp-0x44],edi
  426f2b:	outs   dx,BYTE PTR ds:[esi]
  426f2c:	xchg   BYTE PTR [ebx-0x3aca115d],bh
  426f32:	fcom   DWORD PTR [eax+0x2a]
  426f35:	push   eax
  426f36:	enter  0x1f86,0xb0
  426f3a:	adc    BYTE PTR [ecx+0x234add4b],ch
  426f40:	fdivr  st,st(7)
  426f42:	and    bh,dl
  426f44:	pop    ecx
  426f45:	scas   al,BYTE PTR es:[edi]
  426f46:	xchg   edi,esp
  426f48:	imul   esp,DWORD PTR [esi+edx*1-0x502b40ac],0xb7c0a822
  426f53:	add    edi,DWORD PTR [ebx]
  426f55:	leave  
  426f56:	inc    ebp
  426f57:	cwde   
  426f58:	popa   
  426f59:	sub    dl,BYTE PTR [ebx+0x22]
  426f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f5d:	loope  0x426fc8
  426f5f:	test   al,0x3
  426f61:	add    esp,DWORD PTR [ecx]
  426f63:	mov    ecx,ecx
  426f65:	pop    edx
  426f66:	jmp    0x426f71
  426f68:	bound  ecx,QWORD PTR [eax-0x56]
  426f6b:	into   
  426f6c:	out    0x22,al
  426f6e:	mov    esi,0x1498788b
  426f73:	test   eax,0x62d67a53
  426f78:	sar    DWORD PTR [eax+0x7f57aa18],cl
  426f7e:	cmp    DWORD PTR [ebp+0x76e8d0ec],esi
  426f84:	dec    esp
  426f85:	mov    esi,0x754c823
  426f8a:	sar    DWORD PTR [edx+0x41f589c7],0x6b
  426f91:	push   0xca42d4b2
  426f96:	xchg   ecx,eax
  426f97:	add    eax,0x8272aa73
  426f9c:	push   ebx
  426f9d:	and    al,0xf9
  426f9f:	out    0x8a,eax
  426fa1:	ret    
  426fa2:	push   ebp
  426fa3:	pop    ebp
  426fa4:	mov    gs,WORD PTR [esi+ecx*2+0x25]
  426fa8:	fld    DWORD PTR [esi-0x6]
  426fab:	(bad)  
  426fad:	in     al,0x40
  426faf:	add    dh,bl
  426fb1:	adc    DWORD PTR [edi-0x3],esi
  426fb4:	sub    eax,0x3d15dc5b
  426fb9:	or     eax,0x62f3c9de
  426fbe:	bound  edi,QWORD PTR [edi-0x29e2ab37]
  426fc4:	dec    edi
  426fc5:	xchg   edx,eax
  426fc6:	fwait
  426fc7:	mov    al,0x5a
  426fc9:	and    ah,BYTE PTR [ecx+0x68c1b3e1]
  426fcf:	(bad)  
  426fd0:	xchg   esp,eax
  426fd1:	enter  0xf20e,0x9e
  426fd5:	xchg   edi,eax
  426fd6:	aam    0x8d
  426fd8:	pop    ds
  426fd9:	mov    cl,0x7a
  426fdb:	push   ecx
  426fdc:	in     al,dx
  426fdd:	dec    edx
  426fde:	inc    ecx
  426fdf:	rcr    DWORD PTR [ecx-0x7c],1
  426fe2:	dec    ebx
  426fe3:	cmp    al,BYTE PTR [ecx-0x22fb3b16]
  426fe9:	adc    eax,0x2209291c
  426fee:	pop    edi
  426fef:	mov    cs,WORD PTR [edx-0x29]
  426ff2:	dec    eax
  426ff3:	retf   
  426ff4:	xor    DWORD PTR [eax],esi
  426ff6:	mov    eax,0x4c7bed50
  426ffb:	push   eax
  426ffc:	adc    eax,0x8e69de54
  427001:	aas    
  427002:	ss out 0xa7,eax
  427005:	cwde   
  427006:	sub    BYTE PTR [esp+edi*2],ch
  427009:	mov    dh,0xbd
  42700b:	push   eax
  42700c:	xlat   BYTE PTR ds:[ebx]
  42700d:	sbb    BYTE PTR [edx-0x58],0x5f
  427011:	sub    BYTE PTR [ebx],0x61
  427014:	pushf  
	...
  427021:	sbb    eax,DWORD PTR [ebp+0x65]
  427024:	ret    
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	rol    BYTE PTR [ecx],cl
  42702e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42702f:	mov    edi,0x1e659bb
  427034:	add    BYTE PTR [ebx+eax*1-0x13940000],ch
  42703b:	push   cs
  42703c:	mov    ah,0x98
  42703e:	push   0x630185e3
  427043:	xchg   edi,eax
  427044:	xor    edx,edi
  427046:	push   ds
  427047:	mov    eax,0x7f029c6d
  42704c:	pushf  
  42704d:	test   al,0x93
  42704f:	inc    edi
  427050:	loop   0x426fec
  427052:	popf   
  427053:	and    BYTE PTR [esi+0x52b2e4b6],bl
  427059:	mov    ch,0x5a
  42705b:	push   eax
  42705c:	das    
  42705d:	sub    esi,ebp
  42705f:	inc    eax
  427060:	scas   eax,DWORD PTR es:[edi]
  427061:	inc    ebp
  427062:	xchg   esp,eax
  427063:	push   cs
  427064:	loopne 0x42702e
  427066:	pop    ebp
  427067:	sahf   
  427068:	aaa    
  427069:	gs pop esi
  42706b:	(bad)  
  42706c:	cdq    
  42706d:	test   al,0x43
  42706f:	loop   0x42706b
  427071:	and    al,0x51
  427073:	stos   BYTE PTR es:[edi],al
  427074:	mov    edx,0xd566e4e4
  427079:	les    esp,FWORD PTR fs:[ebx+eax*2-0x1bc62170]
  427081:	mov    ecx,0xde8ae8cc
  427086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427087:	std    
  427088:	sbb    DWORD PTR [edx+0x55abefb4],esp
  42708e:	in     eax,0x4c
  427090:	lahf   
  427091:	pop    esp
  427092:	cmp    esp,DWORD PTR [esi+ebx*2-0x6b]
  427096:	pop    edx
  427097:	jl     0x427087
  427099:	stos   DWORD PTR es:[edi],eax
  42709a:	jle    0x4270e5
  42709c:	fimul  WORD PTR [esi+ebx*1+0x1d]
  4270a0:	scas   eax,DWORD PTR es:[edi]
  4270a1:	clc    
  4270a2:	push   edi
  4270a3:	imul   ecx,DWORD PTR [ebx-0x1ae506bd],0x9dd9e771
  4270ad:	hlt    
  4270ae:	xchg   ecx,eax
  4270af:	xchg   BYTE PTR [esi+0x4923d14f],al
  4270b5:	bound  ebx,QWORD PTR [ecx-0x2e]
  4270b8:	adc    ch,BYTE PTR [edi]
  4270ba:	mov    al,gs:0x3f0815ba
  4270c0:	add    edx,DWORD PTR ds:0xc863938c
  4270c6:	scas   eax,DWORD PTR es:[edi]
  4270c7:	sbb    al,0x31
  4270c9:	mov    dh,0x5b
  4270cb:	das    
  4270cc:	jb     0x427098
  4270ce:	retf   0x6ce0
  4270d1:	(bad)  
  4270d3:	dec    ebx
  4270d4:	push   eax
  4270d5:	pop    es
  4270d6:	or     ecx,esi
  4270d8:	cmc    
  4270d9:	mov    dh,ch
  4270db:	cmp    DWORD PTR [ecx+0x4a8042f7],0xdd84f36a
  4270e5:	sub    eax,0x75b2f90
  4270ea:	data16 jle 0x4270b4
  4270ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270ee:	test   DWORD PTR [esi-0x7c5fab00],esi
  4270f4:	arpl   ax,bp
  4270f6:	mov    ch,0xaf
  4270f8:	mov    ebx,0x536dfe24
  4270fd:	and    BYTE PTR [ebx+0x26fd3f24],bl
  427103:	mov    al,fs:0x47ae4a83
  427109:	jmp    0x42711c
  42710b:	push   esp
  42710c:	or     eax,0x6057bad9
  427111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427112:	mov    dh,0x5
  427114:	mov    ch,BYTE PTR ds:0x8ef3f2b7
  42711a:	push   ebp
  42711b:	lods   al,BYTE PTR ds:[esi]
  42711c:	pop    ds
  42711d:	mov    edx,0x6aa06e0
  427122:	and    cl,ch
  427124:	test   eax,0x6383874c
  427129:	cmp    DWORD PTR [eax-0x7534874e],ebp
  42712f:	enter  0x3f41,0x69
  427133:	fstp   DWORD PTR [eax-0x7ff1ff72]
  427139:	repnz lock cmp al,0x22
  42713d:	inc    ebx
  42713e:	add    BYTE PTR [ebp+0x1fcf12b6],ah
  427144:	shl    ch,cl
  427146:	cmc    
  427147:	aam    0x78
  427149:	pushf  
  42714a:	std    
  42714b:	mov    ecx,0xc0306b47
  427150:	jg     0x4271b0
  427152:	add    eax,0x3e3cd645
  427157:	sar    al,1
  427159:	stos   BYTE PTR es:[edi],al
  42715a:	dec    eax
  42715b:	adc    al,0xcf
  42715d:	jle    0x427132
  42715f:	mov    dl,BYTE PTR [esp+edx*2]
  427162:	or     edx,DWORD PTR [edi-0x6cf64ea2]
  427168:	call   0x2cf6f311
  42716d:	enter  0x3878,0x43
  427171:	mov    bh,0xba
  427173:	stos   DWORD PTR es:[edi],eax
  427174:	pop    ebp
  427175:	outs   dx,DWORD PTR fs:[esi]
  427177:	sti    
  427178:	ret    0x8e9d
  42717b:	ja     0x427117
  42717d:	test   DWORD PTR [edx],0x13906036
  427183:	(bad)  
  427184:	rcr    BYTE PTR [ecx+0x1d144250],0x96
  42718b:	add    eax,0x7fd7248c
  427190:	test   eax,0x5aa373fb
  427195:	je     0x4271fb
  427197:	jl     0x427133
  427199:	stos   DWORD PTR es:[edi],eax
  42719a:	scas   eax,DWORD PTR es:[edi]
  42719b:	repnz stos BYTE PTR es:[edi],al
  42719d:	call   0x2250bf71
  4271a2:	aam    0x38
  4271a4:	xchg   ebp,eax
  4271a5:	push   ebp
  4271a6:	pop    esp
  4271a7:	pop    eax
  4271a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271a9:	mov    eax,0xff2c3f5a
  4271ae:	sbb    DWORD PTR [esi-0x2d465b0b],ebp
  4271b4:	push   ebx
  4271b5:	es pop esp
  4271b7:	dec    eax
  4271b8:	adc    BYTE PTR [ebp-0x37],dl
  4271bb:	inc    edx
  4271bc:	pop    esi
  4271bd:	in     al,dx
  4271be:	mov    cl,0x35
  4271c0:	inc    esp
  4271c1:	and    eax,0xaf48f357
  4271c6:	jns    0x427236
  4271c8:	fstp   st(3)
  4271ca:	inc    ebx
  4271cb:	dec    esi
  4271cc:	cmp    eax,DWORD PTR [ebp-0x34bdb49f]
  4271d2:	inc    ebx
  4271d3:	push   ebx
  4271d4:	fist   DWORD PTR ds:0x483c7d81
  4271da:	sbb    ebx,DWORD PTR [edi]
  4271dc:	mov    eax,ds:0xec4f0401
  4271e1:	mov    edx,0xd10c00c
  4271e6:	fwait
  4271e7:	cdq    
  4271e8:	inc    esi
  4271e9:	mov    esi,0xa7727de5
  4271ee:	lods   al,BYTE PTR ds:[esi]
  4271ef:	test   eax,eax
  4271f1:	aas    
  4271f2:	add    cl,BYTE PTR [edi+0x54ec91bf]
  4271f8:	mov    cl,0xbf
  4271fa:	fwait
  4271fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271fc:	outs   dx,BYTE PTR ds:[esi]
  4271fd:	pushf  
  4271fe:	into   
  4271ff:	pop    ds
  427200:	mov    gs,ecx
  427202:	aas    
  427203:	in     al,dx
  427204:	mov    esp,cs
  427206:	popa   
  427207:	in     eax,dx
  427208:	cld    
  427209:	xor    eax,0x6284f7e0
  42720e:	(bad)  
  42720f:	jbe    0x427239
  427211:	sbb    ebp,ecx
  427213:	jle    0x4271d1
  427215:	mov    edx,0x85e42777
  42721a:	aad    0x72
  42721c:	iret   
  42721d:	outs   dx,DWORD PTR ds:[esi]
  42721e:	rcl    dh,cl
  427220:	xchg   BYTE PTR [ebp+0x391b6822],dh
  427226:	fwait
  427227:	or     esi,DWORD PTR [edx-0x64]
  42722a:	jns    0x4271af
  42722c:	or     BYTE PTR [eax],dh
  42722e:	mov    es,WORD PTR [ebp+0x2d]
  427231:	xchg   esi,eax
  427232:	fnsave [edx+0x4a]
  427235:	out    0x9,eax
  427237:	daa    
  427238:	loope  0x42721f
  42723a:	push   cs
  42723b:	(bad)  [ebx+edx*8]
  42723e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42723f:	cmp    eax,0xf1a63b93
  427244:	inc    ebx
  427245:	xor    dh,BYTE PTR ds:0xefc022f4
  42724b:	and    BYTE PTR [ebp+0x2bd39150],dh
  427251:	cli    
  427252:	add    DWORD PTR [ebx],edi
  427254:	cs push ds
  427256:	ret    
  427257:	jae    0x4271de
  427259:	mov    ebx,0xf7541cfa
  42725e:	scas   eax,DWORD PTR es:[edi]
  42725f:	sub    al,0x82
  427261:	ret    0x35c8
  427264:	std    
  427265:	fld    TBYTE PTR [edx+0x7b]
  427268:	xchg   DWORD PTR [edi],edx
  42726a:	push   cs
  42726b:	mov    DWORD PTR [esi+ecx*2],eax
  42726e:	xlat   BYTE PTR ds:[ebx]
  42726f:	sub    eax,0x7b4abaf0
  427274:	pop    es
  427275:	add    BYTE PTR [edi],0x39
  427278:	dec    esi
  427279:	sub    eax,0x3ff76fbd
  42727e:	mov    ds:0x1f4a6f12,al
  427283:	jecxz  0x4272bb
  427285:	push   edi
  427286:	sar    BYTE PTR [ebp+0x171cdfb0],cl
  42728c:	lahf   
  42728d:	push   0xffffffdf
  42728f:	xchg   ebx,eax
  427290:	push   esi
  427291:	pusha  
  427292:	and    BYTE PTR [ebx+0x32],0xfe
  427296:	and    eax,0x42194160
  42729b:	fs jmp 0xfaae:0xb6510875
  4272a3:	sub    DWORD PTR [ecx],eax
  4272a5:	pop    ebx
  4272a6:	jecxz  0x4272bb
  4272a8:	sub    cl,BYTE PTR [ebp+0x21af9069]
  4272ae:	inc    esi
  4272af:	int    0x51
  4272b1:	enter  0xf35,0x85
  4272b5:	xor    BYTE PTR ds:0xf241fa86,al
  4272bb:	pop    esi
  4272bc:	sbb    eax,0x7224d7b
  4272c1:	loopne 0x4272bb
  4272c3:	icebp  
  4272c4:	mov    ?,WORD PTR [edx]
  4272c6:	dec    eax
  4272c7:	imul   edi,DWORD PTR [edx-0x7cd40d34],0xefc622d8
  4272d1:	push   esi
  4272d2:	jnp    0x4272f2
  4272d4:	sub    al,0xf7
  4272d6:	in     al,dx
  4272d7:	daa    
  4272d8:	mov    ds:0x3758b61a,al
  4272dd:	xor    BYTE PTR [esi+0xe6c698b],ah
  4272e3:	xor    ah,BYTE PTR [eax+0x40]
  4272e6:	jae    0x42730e
  4272e8:	inc    ebx
  4272e9:	jbe    0x427355
  4272eb:	mov    eax,ds:0x22a5429b
  4272f1:	repz xchg edx,eax
  4272f3:	jbe    0x4272da
  4272f5:	fsubr  DWORD PTR [esi+0x95c4d63]
  4272fb:	leave  
  4272fc:	push   ds
  4272fd:	add    ecx,DWORD PTR [ebx+0x26ea969f]
  427303:	lock adc eax,0x37580a2a
  427309:	cli    
  42730a:	ds std 
  42730c:	ins    BYTE PTR es:[edi],dx
  42730d:	jno    0x427351
  42730f:	aam    0xce
  427311:	mov    eax,ds:0xa2ba1ef6
  427316:	push   0x1da361e6
  42731b:	pop    edi
  42731c:	clc    
  42731d:	lock out dx,eax
  42731f:	inc    esi
  427320:	mov    bl,ch
  427322:	xchg   edx,eax
  427323:	outs   dx,DWORD PTR ds:[esi]
  427324:	push   ecx
  427325:	push   es
  427326:	int3   
  427327:	int    0x18
  427329:	or     al,0x81
  42732b:	push   ss
  42732c:	adc    esi,DWORD PTR es:[ecx-0x5452534c]
  427333:	sti    
  427334:	jne    0x42735a
  427336:	cdq    
  427337:	ret    
  427338:	call   0xaab7aa39
  42733d:	repnz retf 0x9261
  427341:	mov    esp,0x271ce501
  427346:	or     BYTE PTR [ecx],al
  427348:	fiadd  WORD PTR [edx]
  42734a:	aam    0xb
  42734c:	mov    edx,0xe1e259f5
  427351:	mov    WORD PTR [esi],cs
  427353:	and    DWORD PTR [edx-0x4f57f966],0xffffffc4
  42735a:	scas   al,BYTE PTR es:[edi]
  42735b:	out    dx,eax
  42735c:	sub    ah,BYTE PTR [eax]
  42735e:	outs   dx,DWORD PTR ds:[esi]
  42735f:	mov    ds:0x4ff07437,eax
  427364:	aas    
  427365:	shl    ah,cl
  427367:	(bad)  
  427368:	push   ebp
  427369:	add    eax,0x37b892e3
  42736e:	in     eax,dx
  42736f:	iret   
  427370:	xchg   DWORD PTR [ebp+0x55c6e0c0],edi
  427376:	ja     0x427399
  427378:	(bad)
  42737b:	ins    BYTE PTR es:[edi],dx
  42737c:	push   0x77ad5468
  427381:	xchg   BYTE PTR [ebp-0x2c],al
  427384:	sbb    DWORD PTR [ecx],edi
  427386:	or     ebx,DWORD PTR [esp+esi*8]
  427389:	test   DWORD PTR [edi-0x57621de9],0x6b37ddf0
  427393:	in     al,dx
  427394:	imul   ebp,ebp,0xd74a308c
  42739a:	cdq    
  42739b:	aaa    
  42739c:	loop   0x427320
  42739e:	lock or DWORD PTR [ecx+ecx*2-0x24],ebp
  4273a3:	pop    es
  4273a4:	into   
  4273a5:	rcl    BYTE PTR [edx-0x79],1
  4273a8:	sbb    ecx,DWORD PTR [ecx+eiz*4]
  4273ab:	sub    BYTE PTR [ebx],0x7f
  4273ae:	push   cs
  4273af:	bound  ebx,QWORD PTR [eax+ebx*8]
  4273b2:	add    eax,0xda85f73b
  4273b7:	aam    0x55
  4273b9:	inc    ecx
  4273ba:	xor    cl,BYTE PTR [edi]
  4273bc:	repz xor al,BYTE PTR [edx]
  4273bf:	pop    ss
  4273c0:	lods   eax,DWORD PTR ds:[esi]
  4273c1:	xlat   BYTE PTR ds:[ebx]
  4273c2:	sbb    BYTE PTR [eax+0x3d],0x4f
  4273c6:	jl     0x4273d8
  4273c8:	pop    es
  4273c9:	aas    
  4273ca:	sbb    al,0x71
  4273cc:	(bad)  
  4273cd:	das    
  4273ce:	dec    esi
  4273cf:	jmp    0x427401
  4273d1:	jl     0x42742c
  4273d3:	(bad)  
  4273d4:	dec    ebx
  4273d5:	or     ch,ah
  4273d7:	retf   0x188e
  4273da:	and    esp,DWORD PTR [edi]
  4273dc:	push   esp
  4273dd:	jns    0x4273a7
  4273df:	pop    ebx
  4273e0:	(bad)  
  4273e1:	repnz imul esi,eax,0xffffffbb
	...
  4273f1:	or     al,0x47
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0xc219f609
  4273fe:	pop    es
  4273ff:	xchg   ebx,eax
  427400:	jne    0x427407
  427402:	jmp    0x0:0x3ac0001
  427409:	and    BYTE PTR [edi+0x7e51b599],bh
  42740f:	sbb    dl,dl
  427411:	mov    cl,BYTE PTR [eax+0x3a]
  427414:	xchg   edx,eax
  427415:	jne    0x427428
  427417:	xchg   ecx,eax
  427418:	cld    
  427419:	push   ds
  42741a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42741b:	rol    BYTE PTR [esi],1
  42741d:	addr16 pop ebx
  42741f:	out    0x6b,al
  427421:	cmp    DWORD PTR ds:0xe71a8948,eax
  427427:	push   0xeb74d2e6
  42742c:	fcom   DWORD PTR [ecx]
  42742e:	push   ss
  42742f:	xchg   esp,eax
  427430:	frstor [ecx+0x3f]
  427433:	scas   al,BYTE PTR es:[edi]
  427434:	inc    edi
  427435:	dec    ax
  427437:	lss    edx,FWORD PTR fs:[ebx]
  42743b:	xor    DWORD PTR ds:0x26f7e8a,ecx
  427441:	lds    ebp,FWORD PTR [esi+ecx*4+0x3e79d0da]
  427448:	add    BYTE PTR [esi],dh
  42744a:	sub    DWORD PTR [edi-0x38],ecx
  42744d:	mov    cl,0x32
  42744f:	pop    ecx
  427450:	ss push esp
  427452:	pop    eax
  427453:	ret    
  427454:	mov    WORD PTR [edx+eiz*2-0x2c276e2c],?
  42745b:	adc    edx,DWORD PTR [edi-0x1b8cbdb3]
  427461:	push   0x4f
  427463:	aad    0x58
  427465:	push   ecx
  427466:	shl    ah,1
  427468:	or     eax,0x115c2101
  42746d:	(bad)  
  42746e:	sar    ch,1
  427470:	dec    ebx
  427471:	adc    DWORD PTR ds:0x513fe986,edi
  427477:	and    eax,0x12b01029
  42747c:	pop    esp
  42747d:	stos   DWORD PTR es:[edi],eax
  42747e:	dec    esi
  42747f:	das    
  427480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427481:	sub    eax,0xbdfd0939
  427486:	cld    
  427487:	icebp  
  427488:	fdivr  DWORD PTR [ebp+0x52c587b3]
  42748e:	inc    esi
  42748f:	js     0x4274f7
  427491:	or     dh,BYTE PTR [ebx]
  427493:	hlt    
  427494:	push   cs
  427495:	fdivp  st(0),st
  427497:	mov    eax,ds:0x54179fcb
  42749c:	sbb    BYTE PTR [ecx+0xc5177f8],al
  4274a2:	ds test eax,0xb47312c6
  4274a8:	xchg   esp,eax
  4274a9:	sti    
  4274aa:	adc    eax,0xda107ab2
  4274af:	mov    bh,dh
  4274b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274b2:	inc    edi
  4274b3:	add    DWORD PTR [esi+0xaca96bf],ecx
  4274b9:	xor    al,0xbc
  4274bb:	mov    esi,0x8406ad12
  4274c0:	inc    esp
  4274c1:	out    0x78,al
  4274c3:	aam    0x78
  4274c5:	sub    BYTE PTR [ebx],bl
  4274c7:	and    eax,0xabef6843
  4274cc:	daa    
  4274cd:	ss int 0x5d
  4274d0:	adc    al,0x16
  4274d2:	inc    edi
  4274d3:	push   edx
  4274d4:	fmul   QWORD PTR [ecx]
  4274d6:	test   al,0x5b
  4274d8:	mov    eax,ds:0x9f203137
  4274dd:	jmp    0x7f428fc0
  4274e2:	xchg   esi,eax
  4274e3:	sub    eax,0x96b18cda
  4274e8:	test   DWORD PTR [edx],edi
  4274ea:	es jle 0x427475
  4274ed:	fwait
  4274ee:	pminsw mm4,QWORD PTR [ecx]
  4274f1:	loop   0x427557
  4274f3:	push   eax
  4274f4:	and    al,0xc
  4274f6:	sbb    bl,cl
  4274f8:	(bad)  
  4274f9:	mov    esi,0x26eb6
  4274fe:	fnstsw WORD PTR [edx]
  427500:	mov    cl,0x50
  427502:	stc    
  427503:	outs   dx,DWORD PTR ds:[esi]
  427504:	mov    edx,0xf05282a8
  427509:	aas    
  42750a:	pop    esp
  42750b:	nop
  42750c:	push   ecx
  42750d:	dec    edi
  42750e:	pushf  
  42750f:	mov    ds:0x627d94c8,eax
  427514:	stos   BYTE PTR es:[edi],al
  427515:	dec    ebp
  427516:	lock cmp cl,al
  427519:	aas    
  42751a:	push   es
  42751b:	mov    bl,0x3d
  42751d:	jge    0x42755e
  42751f:	xchg   edx,ebx
  427521:	add    bl,BYTE PTR [eax+0x305fdc80]
  427527:	adc    BYTE PTR [ecx],bh
  427529:	mov    al,0xa7
  42752b:	out    dx,al
  42752c:	and    al,0xc2
  42752e:	xor    bh,cl
  427530:	sub    esp,eax
  427532:	inc    edx
  427533:	mov    ch,0xa0
  427535:	inc    edx
  427536:	jo     0x42759f
  427538:	inc    ebp
  427539:	inc    esp
  42753a:	adc    al,0xa5
  42753c:	int3   
  42753d:	std    
  42753e:	cmp    al,bl
  427540:	ret    
  427541:	or     eax,0x2ea8fefe
  427546:	sub    eax,0xe8601354
  42754b:	xchg   DWORD PTR [edx+0x284c430b],esp
  427551:	arpl   WORD PTR [edx+0x3a9b50ce],dx
  427557:	or     bl,BYTE PTR [ebx]
  427559:	push   eax
  42755a:	les    esp,FWORD PTR [eax]
  42755c:	pop    ecx
  42755d:	fcom   QWORD PTR [eax-0xe56cd21]
  427563:	shl    DWORD PTR [ecx],1
  427565:	nop
  427566:	popf   
  427567:	(bad)  
  427568:	repnz in al,dx
  42756a:	jge    0x4274f3
  42756c:	inc    ebp
  42756d:	repnz mov ah,0x6f
  427570:	dec    ecx
  427571:	je     0x42756e
  427573:	aad    0xe1
  427575:	stos   BYTE PTR es:[edi],al
  427576:	mov    dl,0xc4
  427578:	pusha  
  427579:	aad    0xaa
  42757b:	hlt    
  42757c:	inc    eax
  42757d:	out    0x49,al
  42757f:	icebp  
  427580:	lahf   
  427581:	scas   al,BYTE PTR es:[edi]
  427582:	stc    
  427583:	inc    ebx
  427584:	mov    al,0xfa
  427586:	es pop ss
  427588:	or     al,0xe6
  42758a:	sbb    al,0x24
  42758c:	fidiv  DWORD PTR [ecx+0x56]
  42758f:	xchg   esp,eax
  427590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427591:	inc    ecx
  427592:	std    
  427593:	ins    BYTE PTR es:[edi],dx
  427594:	shr    BYTE PTR [ebx+0x5b],0xf4
  427598:	xor    ah,BYTE PTR [esi]
  42759a:	addr16 pop ebx
  42759c:	(bad)  
  42759d:	js     0x42760f
  42759f:	and    bh,BYTE PTR [esi]
  4275a1:	mov    edx,0xaf656e19
  4275a6:	in     eax,dx
  4275a7:	xor    edx,DWORD PTR [esi-0x7559c50]
  4275ad:	in     eax,0x73
  4275af:	adc    bh,BYTE PTR ds:0x9654d192
  4275b5:	lock sbb BYTE PTR [eax+0x134fdc54],0xd8
  4275bd:	ja     0x427585
  4275bf:	and    dl,BYTE PTR [eax]
  4275c1:	in     al,dx
  4275c2:	add    al,0xe0
  4275c4:	or     BYTE PTR [eax+0x3d],0x38
  4275c8:	add    eax,0x971e4341
  4275cd:	and    dh,al
  4275cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d0:	cmp    al,BYTE PTR [esi+0x12]
  4275d3:	or     DWORD PTR [ecx+0x6a00835d],0x24
  4275da:	mov    ds:0xcd8d5291,eax
  4275df:	lock dec esi
  4275e1:	cwd    
  4275e3:	int    0xfe
  4275e5:	out    dx,eax
  4275e6:	fld    QWORD PTR ss:[esi]
  4275e9:	xlat   BYTE PTR ds:[ebx]
  4275ea:	add    DWORD PTR [edx],esp
  4275ec:	leave  
  4275ed:	clc    
  4275ee:	push   esp
  4275ef:	fcmovnu st,st(0)
  4275f1:	and    bh,al
  4275f3:	dec    edx
  4275f4:	std    
  4275f5:	retf   0x9a4e
  4275f8:	lahf   
  4275f9:	jp     0x4275d0
  4275fb:	test   al,0x1e
  4275fd:	retf   0x6f37
  427600:	hlt    
  427601:	retf   
  427602:	loop   0x42764f
  427604:	adc    eax,0xf0b33ba3
  427609:	inc    esp
  42760a:	test   DWORD PTR [ebx],ecx
  42760c:	add    cl,BYTE PTR [ebx]
  42760e:	lahf   
  42760f:	js     0x4275b2
  427611:	and    esp,eax
  427613:	div    DWORD PTR [esp+esi*2]
  427616:	xor    ah,cl
  427618:	ror    DWORD PTR [ebx],1
  42761a:	fwait
  42761b:	xchg   ebx,eax
  42761c:	aad    0x93
  42761e:	mov    dl,0x9f
  427620:	(bad)  
  427621:	rcr    BYTE PTR [eax],1
  427623:	lods   eax,DWORD PTR cs:[esi]
  427625:	sub    DWORD PTR [edx],esp
  427627:	repz daa 
  427629:	ficomp DWORD PTR [ebp-0x76]
  42762c:	add    eax,0x96fd73e2
  427631:	adc    DWORD PTR [edx-0x762265c4],edx
  427637:	and    dh,0x37
  42763a:	pop    ebp
  42763b:	cmp    al,0xd5
  42763d:	sub    DWORD PTR [edi-0x4fad961e],esp
  427643:	iret   
  427644:	sti    
  427645:	xor    edx,edx
  427647:	ins    DWORD PTR es:[edi],dx
  427648:	jle    0x4275da
  42764a:	in     al,dx
  42764b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42764c:	mov    dl,0xc0
  42764e:	push   edx
  42764f:	inc    eax
  427650:	shl    BYTE PTR [ecx],cl
  427652:	xchg   esi,eax
  427653:	fst    DWORD PTR [edi+edi*8-0x592a266c]
  42765a:	std    
  42765b:	les    esp,FWORD PTR [ecx-0xad86eb2]
  427661:	ins    DWORD PTR es:[edi],dx
  427662:	in     al,dx
  427663:	pop    es
  427664:	push   eax
  427665:	pop    ebp
  427666:	ss xchg edi,eax
  427668:	div    BYTE PTR [ecx+0xe]
  42766b:	add    bh,BYTE PTR [eax+0x57]
  42766e:	sub    BYTE PTR [edx-0x71cc37ea],bl
  427674:	xor    al,BYTE PTR [ecx-0x16b7c19]
  42767a:	(bad)  
  42767b:	xchg   esp,eax
  42767c:	sbb    edx,DWORD PTR [esi]
  42767e:	or     esi,DWORD PTR ds:0xe5a7e02d
  427684:	les    edx,FWORD PTR [edi-0x3]
  427687:	jne    0x427683
  427689:	jge    0x42766b
  42768b:	mov    ds:0xb9bf03a4,eax
  427690:	daa    
  427691:	add    cl,ch
  427693:	test   eax,0x690437d0
  427698:	ins    DWORD PTR es:[edi],dx
  427699:	adc    esi,esp
  42769b:	add    BYTE PTR [ecx-0x13],cl
  42769e:	mov    bh,0xa4
  4276a0:	je     0x42765e
  4276a2:	jnp    0x4276cf
  4276a4:	jae    0x4276be
  4276a6:	push   ss
  4276a7:	fwait
  4276a8:	push   edi
  4276a9:	or     eax,0x80b1282
  4276ae:	mov    ch,0xc2
  4276b0:	nop
  4276b1:	and    esi,eax
  4276b3:	rcl    DWORD PTR [eax],1
  4276b5:	pushf  
  4276b6:	cmp    eax,0x7431d316
  4276bb:	push   ecx
  4276bc:	in     al,0xf7
  4276be:	lods   al,BYTE PTR ds:[esi]
  4276bf:	mov    cl,0xa2
  4276c1:	imul   DWORD PTR [edi+0x61]
  4276c4:	xchg   edi,eax
  4276c5:	ins    DWORD PTR es:[edi],dx
  4276c6:	jae    0x42766c
  4276c8:	pop    ecx
  4276c9:	(bad)  
  4276ca:	mov    bl,0x5f
  4276cc:	cli    
  4276cd:	cld    
  4276ce:	(bad)  
  4276cf:	and    dl,BYTE PTR [edx]
  4276d1:	stc    
  4276d2:	cmp    eax,DWORD PTR ds:0xe793b4
  4276d8:	stos   DWORD PTR es:[edi],eax
  4276d9:	jp     0x4276db
  4276db:	hlt    
  4276dc:	loope  0x4276cf
  4276de:	test   ecx,ecx
  4276e0:	lock scas eax,DWORD PTR es:[edi]
  4276e2:	adc    ecx,DWORD PTR [eax+0x3a]
  4276e5:	sbb    BYTE PTR [ebx-0x6d],bl
  4276e8:	fstp   TBYTE PTR [eax]
  4276ea:	test   al,0xc2
  4276ec:	mov    edx,0x34c5d32b
  4276f1:	jb     0x427674
  4276f3:	mov    dl,0xc2
  4276f5:	pop    ebx
  4276f6:	imul   ecx,DWORD PTR [edx+0x1a],0x74eea149
  4276fd:	and    BYTE PTR [ecx],0x22
  427700:	rol    dh,0x40
  427703:	mov    esi,0xee85f30a
  427708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427709:	jecxz  0x427789
  42770b:	inc    esi
  42770c:	adc    al,0x9
  42770e:	(bad)  
  42770f:	out    dx,al
  427710:	dec    ebx
  427711:	xor    eax,0x3e06c750
  427716:	loop   0x42774c
  427718:	jmp    0x427759
  42771a:	mov    WORD PTR [edi],cs
  42771c:	mov    ds:0xc51f2e88,eax
  427721:	stos   DWORD PTR es:[edi],eax
  427722:	dec    esp
  427723:	mov    ebp,0x1952ef42
  427728:	mov    bh,0x6d
  42772a:	sub    BYTE PTR ds:0x19bb3720,bl
  427730:	fisttp QWORD PTR [edi-0x49]
  427733:	iret   
  427734:	mov    dh,0xa
  427736:	je     0x4276fd
  427738:	jle    0x42772b
  42773a:	xor    esi,ecx
  42773c:	push   edx
  42773d:	stos   BYTE PTR es:[edi],al
  42773e:	shr    esi,1
  427740:	outs   dx,BYTE PTR ds:[esi]
  427741:	jo     0x4276cf
  427743:	test   DWORD PTR [esi+ecx*8+0x4e853d15],0x317eea69
  42774e:	adc    al,0x92
  427750:	pop    esp
  427751:	adc    dh,BYTE PTR [ecx]
  427753:	ret    
  427754:	mov    ch,0x8c
  427756:	add    al,0x60
  427758:	ins    DWORD PTR es:[edi],dx
  427759:	rol    DWORD PTR [edx+0x56],1
  42775c:	fidivr WORD PTR [eax-0x41]
  42775f:	adc    eax,DWORD PTR [edi]
  427761:	adc    edi,DWORD PTR [edx+0x7859039b]
  427767:	cmp    eax,0x7cec386c
  42776c:	daa    
  42776d:	jle    0x4276fb
  42776f:	mov    eax,ds:0x8e3460c
  427774:	inc    ebx
  427775:	ret    0x9640
  427778:	mov    ebp,0xcb6e2699
  42777d:	fisttp QWORD PTR [ebx+edi*2]
  427780:	sub    ebp,DWORD PTR [ecx-0x2d]
  427783:	stos   DWORD PTR es:[edi],eax
  427784:	rcr    DWORD PTR [ecx+0x50],1
  427787:	xchg   BYTE PTR [ebp-0x26d1a58f],al
  42778d:	das    
  42778e:	ins    BYTE PTR es:[edi],dx
  42778f:	iret   
  427790:	sub    ecx,DWORD PTR [eax]
  427792:	or     DWORD PTR [ebp+edx*4-0xa],esp
  427796:	jnp    0x4277af
  427798:	and    al,0xf5
  42779a:	add    al,0x86
  42779c:	stos   DWORD PTR es:[edi],eax
  42779d:	cs pop ebp
  42779f:	enter  0x9f79,0x3
  4277a3:	push   ds
  4277a4:	sub    cl,dh
  4277a6:	xchg   DWORD PTR [edx+0x41],eax
  4277a9:	xchg   ecx,eax
  4277aa:	mov    eax,ds:0x4e925f99
  4277af:	cmc    
  4277b0:	mov    cl,0xdf
  4277b2:	shr    esp,cl
  4277b4:	add    DWORD PTR [eax],eax
	...
  4277be:	add    BYTE PTR [eax],al
  4277c0:	add    BYTE PTR [esp+eax*2],ch
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x5ca25d8a]
  4277cf:	push   ds
  4277d0:	fidiv  DWORD PTR [ecx-0x53fffe13]
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [edx+0x6946fc77],ch
  4277de:	bound  edx,QWORD PTR [eax+ecx*2-0x1f4f7d39]
  4277e5:	dec    BYTE PTR [edx]
  4277e7:	push   ecx
  4277e8:	dec    eax
  4277e9:	sub    BYTE PTR [ecx],dl
  4277eb:	pop    ecx
  4277ec:	out    dx,eax
  4277ed:	repnz sub al,0x31
  4277f0:	rcl    dl,cl
  4277f2:	sbb    BYTE PTR [ebx-0x716a7d6e],0x47
  4277f9:	inc    esp
  4277fa:	add    BYTE PTR [edx+0x68],cl
  4277fd:	in     al,0x97
  4277ff:	call   0x9be7:0x7b24b7dd
  427806:	ins    BYTE PTR es:[edi],dx
  427807:	push   edi
  427808:	cdq    
  427809:	enter  0x82b8,0xe8
  42780d:	adc    dl,BYTE PTR [ebx]
  42780f:	scas   al,BYTE PTR es:[edi]
  427810:	pop    ebp
  427811:	(bad)  
  427813:	(bad)  
  427814:	adc    cl,BYTE PTR [edx-0x6afa1267]
  42781a:	push   ebp
  42781b:	and    ebp,esi
  42781d:	jae    0x427846
  42781f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427820:	pop    esi
  427821:	jbe    0x427819
  427823:	lock dec edx
  427825:	mov    bl,0xe0
  427827:	dec    edi
  427828:	ja     0x4278a5
  42782a:	or     al,0x1
  42782c:	sbb    al,0x9b
  42782e:	sub    al,0x73
  427830:	inc    ecx
  427831:	(bad)  
  427832:	dec    BYTE PTR [edx+0x60]
  427835:	xor    al,0x98
  427837:	add    DWORD PTR [edx+esi*2],ecx
  42783a:	pop    ebp
  42783b:	pop    esp
  42783c:	jae    0x42788f
  42783e:	enter  0xbc5d,0x32
  427842:	jbe    0x427829
  427844:	(bad)  
  427845:	mov    dl,0xe2
  427847:	mov    eax,ds:0xda9dca1c
  42784c:	sbb    esi,ecx
  42784e:	mul    BYTE PTR [eax]
  427850:	(bad)  
  427851:	jo     0x427829
  427853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427854:	mov    ds:0xff295971,al
  427859:	adc    cl,BYTE PTR [eax]
  42785b:	mov    cs,edi
  42785d:	cld    
  42785e:	retf   
  42785f:	xchg   edi,eax
  427860:	push   ss
  427861:	cmp    eax,0x95f04f01
  427866:	mov    ah,0x9a
  427868:	fs inc edi
  42786a:	pop    edi
  42786b:	jbe    0x4278ea
  42786d:	pop    ecx
  42786e:	xchg   esi,eax
  42786f:	mov    bh,0x29
  427871:	add    bh,BYTE PTR [edi+0x51e7da0b]
  427877:	in     eax,0x71
  427879:	rcl    DWORD PTR [ebp+0x11],0x1e
  42787d:	mov    al,0x45
  42787f:	xor    edi,DWORD PTR [ebx]
  427881:	fistp  DWORD PTR [eax-0x66c3fc37]
  427887:	add    eax,0xedfae105
  42788c:	cmp    al,0x83
  42788e:	(bad)
  427892:	mov    bl,0x49
  427894:	adc    ah,bh
  427896:	(bad)  
  427897:	jl     0x427878
  427899:	outs   dx,BYTE PTR ds:[esi]
  42789a:	jnp    0x4278df
  42789c:	sbb    BYTE PTR [ebx+esi*8+0x78],al
  4278a0:	repz cmc 
  4278a2:	dec    esp
  4278a3:	ss (bad) 
  4278a5:	cmp    dl,BYTE PTR [edi-0x29]
  4278a8:	xchg   ebp,edx
  4278aa:	sbb    dh,BYTE PTR [edx+0x25e7d76e]
  4278b0:	hlt    
  4278b1:	test   eax,0x94dffe6c
  4278b6:	pop    ds
  4278b7:	rcr    DWORD PTR [esi],1
  4278b9:	not    BYTE PTR [esi+0x1847ad1b]
  4278bf:	mov    bl,0x1c
  4278c1:	pop    ss
  4278c2:	mov    esi,0x883b4aa0
  4278c7:	les    esp,FWORD PTR [eax+0x36e80624]
  4278cd:	ds sahf 
  4278cf:	loopne 0x427883
  4278d1:	add    edi,edi
  4278d3:	cwde   
  4278d4:	in     eax,dx
  4278d5:	mov    BYTE PTR [edx+eax*2],cl
  4278d8:	inc    edx
  4278d9:	xor    eax,0x42d40f2f
  4278de:	loopne 0x4278d3
  4278e0:	dec    edi
  4278e1:	fucomi st,st(3)
  4278e3:	or     al,0x6e
  4278e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278e6:	mov    edx,0xc6dff632
  4278eb:	jge    0x4278cc
  4278ed:	jne    0x4278b8
  4278ef:	scas   al,BYTE PTR es:[edi]
  4278f0:	inc    eax
  4278f1:	adc    esi,DWORD PTR [ebp+0x8d104b0]
  4278f7:	popa   
  4278f8:	mov    edi,DWORD PTR [ecx]
  4278fa:	xchg   esi,eax
  4278fb:	push   ebp
  4278fc:	lock xchg DWORD PTR [ebp+ebp*2-0x67],ebx
  427901:	jns    0x427957
  427903:	lea    eax,[esi-0x3c]
  427906:	sbb    ebp,DWORD PTR [ebp-0xd]
  427909:	inc    eax
  42790a:	nop
  42790b:	jbe    0x42789e
  42790d:	inc    esi
  42790e:	mov    WORD PTR [edx-0x71b5403],?
  427914:	cmp    BYTE PTR [eax+0x2a9b1126],ah
  42791a:	pop    edi
  42791b:	(bad)  
  42791c:	sti    
  42791d:	cmp    al,0xb6
  42791f:	out    dx,eax
  427920:	xor    edx,edx
  427922:	jle    0x427990
  427924:	cld    
  427925:	ja     0x427932
  427927:	imul   DWORD PTR [ebx-0x80]
  42792a:	pop    edx
  42792b:	adc    dl,BYTE PTR [edi]
  42792d:	jge    0x427954
  42792f:	push   esi
  427930:	std    
  427931:	out    0xcc,eax
  427933:	ins    DWORD PTR es:[edi],dx
  427934:	push   esi
  427935:	in     al,0xe7
  427937:	out    0x1f,eax
  427939:	inc    edx
  42793a:	or     edi,ebp
  42793c:	pop    ss
  42793d:	es push ss
  42793f:	dec    edi
  427940:	fadd   QWORD PTR [ebp+0x5bf6d598]
  427946:	adc    edi,DWORD PTR [ecx+0x4c]
  427949:	loope  0x4278f9
  42794b:	cs cmp eax,0x63cb565f
  427951:	sbb    BYTE PTR [edx],al
  427953:	jge    0x42797a
  427955:	inc    ebx
  427956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427957:	in     al,dx
  427958:	imul   ebp,DWORD PTR [ecx],0xc9919b6
  42795e:	retf   
  42795f:	fisttp DWORD PTR [esi+0x1d2c53c]
  427965:	xchg   DWORD PTR [edx+0x5f],esi
  427968:	adc    dh,ah
  42796a:	xor    BYTE PTR [ecx],ch
  42796c:	(bad)  
  42796e:	in     eax,0x42
  427970:	ins    BYTE PTR es:[edi],dx
  427971:	mov    ebp,0x1915a6fb
  427976:	stos   DWORD PTR es:[edi],eax
  427977:	push   esi
  427978:	(bad)  [ecx]
  42797a:	sub    ch,BYTE PTR [ebx-0x3f544713]
  427980:	(bad)  
  427981:	mov    ch,0xbf
  427983:	mov    dh,BYTE PTR [esi]
  427985:	cdq    
  427986:	inc    ebx
  427987:	(bad)  
  427988:	mov    edi,0x425f245a
  42798d:	ins    BYTE PTR es:[edi],dx
  42798e:	push   ebx
  42798f:	pop    edi
  427990:	mov    dl,0xbb
  427992:	iret   
  427993:	mov    bh,0xd4
  427995:	retf   
  427996:	dec    ebp
  427997:	xor    eax,DWORD PTR [ebp-0x7efb8e9c]
  42799d:	mov    WORD PTR [edx],ss
  42799f:	xor    edx,ebx
  4279a1:	sahf   
  4279a2:	dec    BYTE PTR [ebx-0x37]
  4279a5:	retf   
  4279a6:	inc    ebx
  4279a7:	adc    DWORD PTR ds:0xb007bdf8,ebp
  4279ad:	jg     0x4279ff
  4279af:	add    eax,0x9f283bf6
  4279b4:	mov    fs,WORD PTR [ebp-0x3c]
  4279b7:	ret    0x4fdc
  4279ba:	sbb    eax,0x83106d3e
  4279bf:	retf   0x255f
  4279c2:	sub    DWORD PTR [esi-0x36],0xfffffff8
  4279c6:	pop    esi
  4279c7:	sbb    edi,ebx
  4279c9:	or     al,BYTE PTR [esi-0x42]
  4279cc:	fdiv   QWORD PTR [ebx+eax*1+0x5b61af0]
  4279d3:	sub    eax,0x24a042c1
  4279d8:	aam    0xbb
  4279da:	in     eax,0x80
  4279dc:	int    0x21
  4279de:	fldcw  WORD PTR [eax]
  4279e0:	xor    dl,cl
  4279e2:	xchg   di,ax
  4279e4:	sub    BYTE PTR [ecx-0x47],dl
  4279e7:	jnp    0x4279c4
  4279e9:	gs data16 ins BYTE PTR es:[edi],dx
  4279ec:	push   ebx
  4279ed:	mov    ah,0x1f
  4279ef:	scas   al,BYTE PTR es:[edi]
  4279f0:	stc    
  4279f1:	pop    esp
  4279f2:	test   al,0xd0
  4279f4:	dec    esi
  4279f5:	(bad)  
  4279f6:	cmp    al,0xa0
  4279f8:	mov    bl,0xeb
  4279fa:	scas   al,BYTE PTR es:[edi]
  4279fb:	pop    edx
  4279fc:	xor    eax,esp
  4279fe:	leave  
  4279ff:	cmc    
  427a00:	mov    ecx,0x662b35f1
  427a05:	jge    0x42799b
  427a07:	cmp    BYTE PTR [esp+esi*2],dl
  427a0a:	out    0x38,al
  427a0c:	dec    esp
  427a0d:	fnstenv [esi]
  427a0f:	mov    ds:0xe9d2d06,al
  427a14:	pop    ds
  427a15:	mov    dl,0xac
  427a17:	bound  edi,QWORD PTR [edi]
  427a19:	lds    eax,FWORD PTR [edx-0x21]
  427a1c:	in     al,0x9a
  427a1e:	pusha  
  427a1f:	fmul   QWORD PTR [esp+edx*8+0x67]
  427a23:	es inc ebp
  427a25:	xchg   ebx,eax
  427a26:	jo     0x427a14
  427a28:	pop    eax
  427a29:	adc    ebx,ebx
  427a2b:	cmp    cl,ch
  427a2d:	packuswb mm2,QWORD PTR [eax]
  427a30:	xor    bl,BYTE PTR [edi]
  427a32:	xor    DWORD PTR [esi+0x4e],ebp
  427a35:	in     eax,dx
  427a36:	inc    esi
  427a37:	inc    ecx
  427a38:	outs   dx,DWORD PTR ds:[esi]
  427a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a3a:	fiadd  WORD PTR [esi+ecx*1]
  427a3d:	add    DWORD PTR [edi-0x5b],0x62
  427a41:	and    al,0x9f
  427a43:	fldenv ds:0x6470f747
  427a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a4a:	jae    0x4279fe
  427a4c:	add    al,0xab
  427a4e:	mov    eax,0xbb7644d4
  427a54:	pop    ecx
  427a55:	outs   dx,BYTE PTR ds:[esi]
  427a56:	loopne 0x427a5e
  427a58:	pop    eax
  427a59:	rol    DWORD PTR es:[ebp-0x71],0xba
  427a5e:	mov    esp,0xc78b7c87
  427a63:	jmp    ebx
  427a65:	jbe    0x427a9e
  427a67:	dec    esi
  427a68:	or     ch,dl
  427a6a:	aam    0xc5
  427a6c:	rcr    DWORD PTR [edx+ecx*8],cl
  427a6f:	pop    esp
  427a70:	push   0xffffffa6
  427a72:	call   0x8d5dbca2
  427a77:	loop   0x427a8d
  427a79:	inc    ecx
  427a7a:	xchg   edx,eax
  427a7b:	test   al,0xb0
  427a7d:	mov    eax,0x7495dc5e
  427a82:	in     al,0x67
  427a84:	adc    bl,BYTE PTR [eax+0x34]
  427a87:	pop    ebp
  427a88:	or     BYTE PTR [esi+ebx*2],dl
  427a8b:	ret    
  427a8c:	pop    ecx
  427a8d:	hlt    
  427a8e:	cs test al,0x6c
  427a91:	dec    esi
  427a92:	lods   eax,DWORD PTR ds:[esi]
  427a93:	dec    eax
  427a94:	xchg   DWORD PTR [ecx+0x5b5e532],ebp
  427a9a:	test   al,0x6f
  427a9c:	sahf   
  427a9d:	mov    ebp,0x1593d9fe
  427aa2:	ret    
  427aa3:	rcl    BYTE PTR [edx-0x50],0xe2
  427aa7:	mov    ch,0xe3
  427aa9:	out    dx,eax
  427aaa:	mov    al,bh
  427aac:	xchg   esi,eax
  427aad:	add    DWORD PTR [ebx+edx*4-0x29fbbca9],0xffffffd9
  427ab5:	sbb    BYTE PTR [eax-0x22fbc6c0],ah
  427abb:	adc    cl,BYTE PTR [eax-0x60d4c0b7]
  427ac1:	inc    edi
  427ac2:	xor    DWORD PTR [edx-0x31b06a05],0x70330449
  427acc:	rcr    DWORD PTR [ecx-0x40dab1a7],cl
  427ad2:	pop    edi
  427ad3:	gs out dx,al
  427ad5:	dec    edi
  427ad6:	cmp    eax,0xcde4b9d
  427adb:	and    DWORD PTR [edi],ebp
  427add:	pop    ebx
  427ade:	(bad)  
  427adf:	adc    ah,BYTE PTR [eax+eax*8+0x3d]
  427ae3:	mov    dl,0x32
  427ae5:	pop    ecx
  427ae6:	loope  0x427b08
  427ae8:	xor    ah,BYTE PTR [ebx-0x70]
  427aeb:	int3   
  427aec:	or     DWORD PTR [edi-0xca02b30],0xfffffff8
  427af3:	scas   al,BYTE PTR es:[edi]
  427af4:	inc    esp
  427af5:	adc    BYTE PTR [edi+0xf1fa981],cl
  427afb:	adc    BYTE PTR [ecx],bl
  427afd:	pop    ds
  427afe:	jle    0x427af8
  427b00:	mov    ecx,0x59c6b524
  427b05:	aam    0x79
  427b07:	lods   eax,DWORD PTR ds:[esi]
  427b08:	or     eax,0x657384b7
  427b0d:	daa    
  427b0e:	add    ecx,DWORD PTR [ebx]
  427b10:	mov    ds,WORD PTR [ecx-0x5c]
  427b13:	into   
  427b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b15:	popf   
  427b16:	jmp    0x427aba
  427b18:	cmc    
  427b19:	add    DWORD PTR [esi],ebx
  427b1b:	dec    eax
  427b1c:	daa    
  427b1d:	sbb    al,0x0
  427b1f:	data16 fbstp TBYTE PTR [esi-0x6e8fb48a]
  427b26:	sti    
  427b27:	outs   dx,DWORD PTR ds:[esi]
  427b28:	jo     0x427adb
  427b2a:	scas   eax,DWORD PTR es:[edi]
  427b2b:	push   ss
  427b2c:	mov    cl,0x9b
  427b2e:	fwait
  427b2f:	jg     0x427ae7
  427b31:	aad    0x9f
  427b33:	dec    eax
  427b34:	je     0x427b5d
  427b36:	(bad)  
  427b37:	push   0x98aaf49c
  427b3c:	(bad)  [ebx]
  427b3e:	xchg   edx,eax
  427b3f:	sahf   
  427b40:	dec    edi
  427b41:	imul   DWORD PTR [ecx+0xda89132]
  427b47:	fsubr  QWORD PTR [eax-0x4a]
  427b4a:	loope  0x427ae2
  427b4c:	fdiv   DWORD PTR [esi]
  427b4e:	imul   esi,DWORD PTR [eax+0x71],0x23c577a
  427b55:	cmp    ebx,0x77
  427b58:	or     eax,0x2aefc6a6
  427b5d:	or     al,0x93
  427b5f:	add    eax,0xce9c43f5
  427b64:	icebp  
  427b65:	arpl   WORD PTR [ebx-0x311327d9],dx
  427b6b:	arpl   WORD PTR [ebp-0x3daa5163],dx
  427b71:	sub    al,0xc5
  427b73:	sbb    BYTE PTR [ebx-0x4dbcdf29],bl
  427b79:	jg     0x427b10
  427b7b:	test   BYTE PTR [ebp+0x47],ch
  427b7e:	mov    ebp,DWORD PTR [ebx+0x30]
  427b81:	mov    esi,0xf9fa18
	...
  427b8e:	add    BYTE PTR [eax],al
  427b90:	add    BYTE PTR [ebx],ch
  427b92:	loopne 0x427c0f
  427b94:	cmp    bl,bh
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [eax+0x5d0466e1],ebx
  427ba2:	icebp  
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	lods   al,BYTE PTR ds:[esi]
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [ebp+0x65],dh
  427bab:	mov    dl,0x36
  427bad:	mov    bl,0x8a
  427baf:	or     eax,0x6fe5a9fd
  427bb4:	mov    BYTE PTR [edi+eax*4+0x66],ah
  427bb8:	cdq    
  427bb9:	inc    eax
  427bba:	xchg   esi,eax
  427bbb:	adc    al,0x9d
  427bbd:	scas   eax,DWORD PTR es:[edi]
  427bbe:	and    cl,ch
  427bc0:	or     eax,0xda38fd91
  427bc5:	dec    ebx
  427bc6:	ss sbb dl,0x2d
  427bca:	dec    ebx
  427bcb:	mov    esp,0xe031b475
  427bd0:	aaa    
  427bd1:	(bad)  
  427bd2:	cs push esp
  427bd4:	mov    edi,0xab09791c
  427bd9:	pushf  
  427bda:	ja     0x427b85
  427bdc:	fdiv   DWORD PTR [esi+0xb]
  427bdf:	clc    
  427be0:	cmp    DWORD PTR es:[ecx-0x5f],0xffffffe0
  427be5:	lahf   
  427be6:	cmp    ebx,ecx
  427be8:	loope  0x427b7e
  427bea:	fdivr  DWORD PTR [ebp+0x1f]
  427bed:	and    bh,cl
  427bef:	or     BYTE PTR [eax+edx*8],bl
  427bf2:	sbb    DWORD PTR [ecx],esp
  427bf4:	cwde   
  427bf5:	sbb    eax,0x302808bb
  427bfa:	or     eax,0xa68faf65
  427bff:	mov    ebp,esp
  427c01:	out    0x81,eax
  427c03:	fidiv  WORD PTR [edi+0x4e127a86]
  427c09:	sbb    al,0x8e
  427c0b:	int3   
  427c0c:	xchg   edx,eax
  427c0d:	mov    dl,0xbd
  427c0f:	xor    bl,al
  427c11:	or     edx,DWORD PTR [edx+0x5f]
  427c14:	repnz retf 0xffe9
  427c18:	xlat   BYTE PTR ds:[ebx]
  427c19:	jl     0x427ba7
  427c1b:	mov    bh,0x1e
  427c1d:	cmp    dh,ch
  427c1f:	and    DWORD PTR [edx+0x40],ebp
  427c22:	es test eax,0xb727b52c
  427c28:	fisttp QWORD PTR ds:0xd13be12a
  427c2e:	aaa    
  427c2f:	push   0xbb57506
  427c34:	inc    edi
  427c35:	retf   
  427c36:	cmp    BYTE PTR [eax],bh
  427c38:	sbb    al,0x2b
  427c3a:	or     cl,BYTE PTR [ecx]
  427c3c:	out    dx,al
  427c3d:	das    
  427c3e:	and    bl,bh
  427c40:	(bad)  
  427c41:	stos   BYTE PTR es:[edi],al
  427c42:	mov    eax,DWORD PTR [ebx+0x32]
  427c45:	jmp    0xf5f0:0x4d89b24d
  427c4c:	dec    ecx
  427c4d:	(bad)  
  427c4e:	aad    0x72
  427c50:	mov    dl,bl
  427c52:	jmp    0x6765:0x1d7d2f4a
  427c59:	inc    edi
  427c5a:	push   ebp
  427c5b:	(bad)  
  427c5d:	outs   dx,DWORD PTR ds:[esi]
  427c5e:	mov    al,0x9a
  427c60:	push   0xd302213c
  427c65:	add    al,0x20
  427c67:	loopne 0x427cb0
  427c69:	fnstcw WORD PTR [eax+eiz*8]
  427c6c:	stos   DWORD PTR es:[edi],eax
  427c6d:	aad    0x57
  427c6f:	xchg   esi,eax
  427c70:	mov    eax,ds:0x2cacc060
  427c75:	mov    esp,0x2c2be21a
  427c7a:	bound  edx,QWORD PTR [edi-0x358c77f2]
  427c80:	sbb    eax,0x686bbc83
  427c85:	ret    0xe00f
  427c88:	jne    0x427c2a
  427c8a:	jmp    0x427cac
  427c8c:	je     0x427c85
  427c8e:	adc    eax,0xeed36a47
  427c93:	scas   eax,DWORD PTR es:[edi]
  427c94:	jne    0x427cab
  427c96:	aam    0xdc
  427c98:	mov    esp,0xa95231f4
  427c9d:	cld    
  427c9e:	retf   0x1bac
  427ca1:	mov    ecx,0x74f1a8ac
  427ca6:	xor    esi,DWORD PTR [esi]
  427ca8:	jno    0x427c41
  427caa:	push   esi
  427cab:	fnstenv [ecx+ebx*2]
  427cae:	out    dx,eax
  427caf:	shl    al,1
  427cb1:	add    bh,dh
  427cb3:	dec    ecx
  427cb4:	lods   eax,DWORD PTR ds:[esi]
  427cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cb6:	ret    0xaf4f
  427cb9:	xor    ah,BYTE PTR [ecx]
  427cbb:	js     0x427c93
  427cbd:	cli    
  427cbe:	scas   al,BYTE PTR es:[edi]
  427cbf:	sti    
  427cc0:	lods   al,BYTE PTR ds:[esi]
  427cc1:	mov    esi,DWORD PTR [edi-0x4d]
  427cc4:	retf   
  427cc5:	xchg   ecx,eax
  427cc6:	and    eax,0xf4824087
  427ccb:	pop    ebx
  427ccc:	mov    WORD PTR [edx],?
  427cce:	aaa    
  427ccf:	mov    dl,BYTE PTR [eax-0x14]
  427cd2:	out    dx,al
  427cd3:	out    0xd3,al
  427cd5:	(bad)  
  427cd6:	mov    ch,0xc1
  427cd8:	xchg   ecx,eax
  427cd9:	push   esp
  427cda:	loopne 0x427cf9
  427cdc:	test   BYTE PTR [ecx-0x47],al
  427cdf:	dec    ebp
  427ce0:	adc    eax,0x7b929c84
  427ce5:	test   al,0xab
  427ce7:	leave  
  427ce8:	stos   BYTE PTR es:[edi],al
  427ce9:	lea    ecx,[esi]
  427ceb:	cdq    
  427cec:	cld    
  427ced:	xchg   esi,eax
  427cee:	mov    fs,WORD PTR [esi]
  427cf0:	sbb    al,0x44
  427cf2:	push   ebx
  427cf3:	pop    DWORD PTR [eax-0x6bc96ca2]
  427cf9:	cmp    eax,0x9c5b5a97
  427cfe:	sbb    ah,BYTE PTR [ebx]
  427d00:	add    eax,0x3a53508d
  427d05:	pop    esp
  427d06:	inc    edi
  427d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d08:	ins    DWORD PTR es:[edi],dx
  427d09:	sub    edx,ebp
  427d0b:	loope  0x427cce
  427d0d:	ss jle 0x427d86
  427d10:	jbe    0x427d81
  427d12:	jae    0x427cf9
  427d14:	mov    esi,0x5bf9bc9a
  427d19:	idiv   BYTE PTR [edi+eax*4+0x11594800]
  427d20:	push   ds
  427d21:	add    DWORD PTR [eax-0x13],ebx
  427d24:	cdq    
  427d25:	jge    0x427cfe
  427d27:	sub    eax,DWORD PTR [edi]
  427d29:	adc    BYTE PTR [esi-0x258952c0],bh
  427d2f:	or     ecx,DWORD PTR [edx]
  427d31:	fs jecxz 0x427da6
  427d34:	cdq    
  427d35:	adc    eax,0xb2226255
  427d3a:	push   0x9ea07fa2
  427d3f:	fadd   QWORD PTR [eax+0x7465deac]
  427d45:	mov    al,ds:0x100222b7
  427d4a:	inc    ebp
  427d4b:	mov    ebx,0xb98e6974
  427d50:	xchg   BYTE PTR [ebx],ah
  427d52:	mov    al,ds:0xa874bde
  427d57:	test   eax,0x5de868a4
  427d5c:	mov    eax,0xc866072a
  427d61:	and    BYTE PTR [ebx],0xb2
  427d64:	adc    ecx,esp
  427d66:	clc    
  427d67:	push   ss
  427d68:	jbe    0x427d82
  427d6a:	push   esp
  427d6b:	and    eax,0x93fe1079
  427d70:	add    BYTE PTR [edi+0x2af0cd22],ah
  427d76:	jne    0x427dd6
  427d78:	retf   0xa224
  427d7b:	sub    al,0xd6
  427d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d7e:	or     eax,0xf39e61eb
  427d83:	in     al,dx
  427d84:	xor    esi,eax
  427d86:	add    esp,DWORD PTR [ecx+0x66]
  427d89:	jmp    0xba70:0x29ddfeb7
  427d90:	shr    DWORD PTR [ebx-0x47bfa0a0],1
  427d96:	adc    al,0x39
  427d98:	sub    esp,DWORD PTR [ebx]
  427d9a:	cmp    al,BYTE PTR [edi]
  427d9c:	loop   0x427d80
  427d9e:	cwde   
  427d9f:	cmp    DWORD PTR [eax],esi
  427da1:	cmp    DWORD PTR [ecx+ebp*1+0x31e91a32],esi
  427da8:	push   ds
  427da9:	jge    0x427d8a
  427dab:	fincstp 
  427dad:	add    DWORD PTR [edx+0x758cae8b],esp
  427db3:	push   ebp
  427db4:	push   0xffffff8c
  427db6:	adc    al,0x3b
  427db8:	dec    edx
  427db9:	mov    dh,BYTE PTR [edi+0x38]
  427dbc:	out    0x47,al
  427dbe:	enter  0x103a,0xd9
  427dc2:	icebp  
  427dc3:	mov    cl,0xfc
  427dc5:	dec    edx
  427dc6:	pop    ecx
  427dc7:	mov    es,WORD PTR [ecx+0x3147d687]
  427dcd:	adc    al,0x6f
  427dcf:	add    ebp,DWORD PTR [ebp-0x3b]
  427dd2:	jp     0x427da0
  427dd4:	mov    bl,0x51
  427dd6:	fxch   st(0)
  427dd8:	pop    es
  427dd9:	add    ebx,0x13
  427ddc:	mov    dl,0xc5
  427dde:	mov    edi,0xd9bf04ce
  427de3:	lds    ebp,FWORD PTR [edx+0x30]
  427de6:	jmp    0xd62e571b
  427deb:	mov    BYTE PTR [eax],cl
  427ded:	or     BYTE PTR [eax-0x65],bl
  427df0:	ret    
  427df1:	cwde   
  427df2:	cmp    eax,0x60933528
  427df7:	bound  eax,QWORD PTR [esi-0x78aa3654]
  427dfd:	imul   ebp,ebp,0xca02314a
  427e03:	inc    edi
  427e04:	cs xchg edx,eax
  427e06:	hlt    
  427e07:	mov    ebx,0xef4a74e5
  427e0c:	push   ecx
  427e0d:	fs add al,0x4
  427e10:	jg     0x427e53
  427e12:	mov    eax,ds:0x77050531
  427e17:	mov    eax,0x3668afc3
  427e1c:	int3   
  427e1d:	lea    edi,[edx-0x6e]
  427e20:	std    
  427e21:	sub    ebx,DWORD PTR ds:0x5b28cdb6
  427e27:	sub    ah,ah
  427e29:	push   esp
  427e2a:	stos   BYTE PTR es:[edi],al
  427e2b:	jnp    0x427dd8
  427e2d:	sbb    al,0x4e
  427e2f:	ss pushf 
  427e31:	cmp    ch,dh
  427e33:	mov    BYTE PTR [esi+0x2b481129],0xf1
  427e3a:	ins    BYTE PTR es:[edi],dx
  427e3b:	xchg   edx,eax
  427e3c:	fwait
  427e3d:	je     0x427e30
  427e3f:	and    DWORD PTR [ebx],esp
  427e41:	and    bl,BYTE PTR [ecx-0x6476bcf5]
  427e47:	jns    0x427e2a
  427e49:	jp     0x427dcc
  427e4b:	aad    0x97
  427e4d:	mov    bh,0x12
  427e4f:	loope  0x427e98
  427e51:	mov    bh,BYTE PTR [ebp-0x80]
  427e54:	add    al,0x8b
  427e56:	mov    al,ds:0x5d9adb64
  427e5b:	call   0x4407:0x19a80901
  427e62:	int    0xba
  427e64:	in     eax,dx
  427e65:	add    eax,0x7d66788
  427e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e6b:	mov    ah,0x11
  427e6d:	jle    0x427e64
  427e6f:	cwde   
  427e70:	fist   WORD PTR [ebx+0x14]
  427e73:	out    0x94,eax
  427e75:	lds    edi,FWORD PTR [ebx-0x51]
  427e78:	add    DWORD PTR [eax+0x2d],eax
  427e7b:	rcl    DWORD PTR [eax-0x4efd3d6b],cl
  427e81:	xchg   edi,eax
  427e83:	push   ecx
  427e84:	adc    eax,0xb03968ef
  427e89:	lods   al,BYTE PTR ds:[esi]
  427e8a:	push   ss
  427e8b:	imul   esi,DWORD PTR [eax],0x4a
  427e8e:	dec    ebp
  427e8f:	shl    DWORD PTR [edx-0x48eeee0c],0x97
  427e96:	xchg   edx,eax
  427e97:	outs   dx,BYTE PTR ds:[esi]
  427e98:	push   edi
  427e99:	push   es
  427e9a:	test   BYTE PTR [ebx-0x3118aa7c],bl
  427ea0:	gs (bad) 
  427ea2:	jmp    0xfdc7d438
  427ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ea8:	jmp    0xee18:0x5703c1f5
  427eaf:	loop   0x427e31
  427eb1:	xor    DWORD PTR [eax],ecx
  427eb3:	and    al,0x23
  427eb5:	inc    eax
  427eb6:	mov    DWORD PTR [eax],eax
  427eb8:	push   es
  427eb9:	jnp    0x427e74
  427ebb:	test   al,0xfb
  427ebd:	pusha  
  427ebe:	sub    al,0x64
  427ec0:	nop
  427ec1:	jl     0x427f2c
  427ec3:	cmp    dl,BYTE PTR [ebp+0x42]
  427ec6:	in     al,dx
  427ec7:	cwde   
  427ec8:	and    ch,BYTE PTR [ebp-0x5efff2d1]
  427ece:	push   edx
  427ecf:	push   ecx
  427ed0:	fsubr  QWORD PTR ds:0x17fc2129
  427ed6:	pop    ss
  427ed7:	inc    esi
  427ed8:	fidivr DWORD PTR [ebp+0x23226824]
  427ede:	lds    esi,FWORD PTR [ecx-0x55025ed8]
  427ee4:	adc    bh,BYTE PTR [edi-0x40]
  427ee7:	(bad)  
  427ee8:	ss iret 
  427eea:	or     eax,0x72f10ebb
  427eef:	cdq    
  427ef0:	xor    DWORD PTR [esi-0x18d42a92],esp
  427ef6:	dec    ecx
  427ef7:	retf   0x195b
  427efa:	inc    eax
  427efb:	xchg   bl,dh
  427efd:	add    dl,dh
  427eff:	mov    eax,0x2371fe4e
  427f04:	lods   al,BYTE PTR ds:[esi]
  427f05:	push   es
  427f06:	mov    BYTE PTR [ebx-0x4bb42a99],dh
  427f0c:	sbb    al,0xcc
  427f0e:	xor    ebx,edx
  427f10:	mov    al,ds:0x97fa9963
  427f15:	xor    BYTE PTR [eax],cl
  427f17:	cwde   
  427f18:	in     eax,dx
  427f19:	cld    
  427f1a:	aam    0x88
  427f1c:	jnp    0x427f8f
  427f1e:	shl    DWORD PTR [eax+0x56],cl
  427f21:	loopne 0x427ec5
  427f23:	cld    
  427f24:	mov    ecx,0x459c468a
  427f29:	std    
  427f2a:	xchg   BYTE PTR [eax-0x2f],bh
  427f2d:	nop
  427f2e:	mov    ds:0xc59fd9eb,al
  427f33:	push   edx
  427f34:	leave  
  427f35:	repnz push 0x42
  427f38:	div    BYTE PTR [esi]
  427f3a:	sbb    esp,esp
  427f3c:	sbb    esp,DWORD PTR ds:0xbd809e2e
  427f42:	push   eax
  427f43:	push   ebp
  427f44:	mov    bl,0x2d
  427f46:	mov    ebp,0xcd58ee2e
  427f4b:	(bad)  
  427f4c:	mov    ds:0x8f338c35,al
  427f51:	mov    edi,0xf8eb12
	...
  427f5e:	add    BYTE PTR [eax],al
  427f60:	add    BYTE PTR [ebx+ecx*4-0x2000283b],dh
  427f67:	mov    dh,0xeb
  427f69:	xor    BYTE PTR [eax-0x72d2441f],ch
  427f6f:	mov    edi,0x1f509d4
  427f74:	add    BYTE PTR [ebx+eax*1-0x3ee60000],ch
  427f7b:	push   edi
  427f7c:	push   cs
  427f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f7e:	lods   eax,DWORD PTR ds:[esi]
  427f7f:	int3   
  427f80:	imul   esp,edx,0xffffffea
  427f83:	mov    ds:0xa4108e10,al
  427f88:	pop    eax
  427f89:	stos   DWORD PTR es:[edi],eax
  427f8a:	(bad)  
  427f8b:	jecxz  0x427f72
  427f8d:	lods   eax,DWORD PTR ds:[esi]
  427f8e:	inc    ebp
  427f8f:	mov    edi,0x3ad275b3
  427f94:	add    eax,eax
  427f96:	sbb    edx,DWORD PTR [ecx-0x67b26555]
  427f9c:	add    BYTE PTR [edx+0x68],ch
  427f9f:	push   ds
  427fa0:	(bad)  
  427fa1:	cmp    bh,BYTE PTR [edx+ecx*2]
  427fa4:	scas   al,BYTE PTR es:[edi]
  427fa5:	xor    dl,BYTE PTR [edi+edx*1]
  427fa8:	mov    al,cl
  427faa:	pop    ebx
  427fab:	frstor [edx+esi*4]
  427fae:	sbb    eax,0xc2319b2b
  427fb3:	dec    edi
  427fb4:	sub    BYTE PTR [ebp-0x7dac920],ah
  427fba:	shr    DWORD PTR [ecx+0x5520f6c5],cl
  427fc0:	inc    esi
  427fc1:	adc    ah,BYTE PTR [edx+0x6a301f59]
  427fc7:	jg     0x427f6f
  427fc9:	ins    DWORD PTR es:[edi],dx
  427fca:	lahf   
  427fcb:	dec    eax
  427fcc:	aad    0x95
  427fce:	and    ch,BYTE PTR [edx-0x8]
  427fd1:	das    
  427fd2:	xchg   esp,eax
  427fd3:	push   es
  427fd4:	fist   WORD PTR [edi]
  427fd6:	jecxz  0x427fa8
  427fd8:	sub    al,0x8
  427fda:	shr    DWORD PTR [ecx],1
  427fdc:	jo     0x427fd5
  427fde:	cmp    edx,DWORD PTR [ebx-0x4a]
  427fe1:	das    
  427fe2:	cmp    eax,0x288a58b0
  427fe7:	int3   
  427fe8:	mov    dl,0xe2
  427fea:	jecxz  0x427fd8
  427fec:	mov    bh,0x9c
  427fee:	sbb    bh,BYTE PTR [esi-0xa]
  427ff1:	(bad)  
  427ff2:	out    dx,al
  427ff3:	or     BYTE PTR [eax+0x2d],ch
  427ff6:	push   ss
  427ff7:	scas   al,BYTE PTR es:[edi]
  427ff8:	sar    DWORD PTR [edx+eiz*8+0x242cd395],1
  427fff:	mov    dh,0x61
  428001:	mov    esp,DWORD PTR [ebx-0x7f]
  428004:	(bad)  
  428006:	lods   al,BYTE PTR ds:[esi]
  428007:	mov    BYTE PTR [edi],dl
  428009:	out    dx,eax
  42800a:	pop    eax
  42800b:	shr    BYTE PTR [ecx],cl
  42800d:	inc    edi
  42800e:	xor    eax,0x698b7f35
  428013:	pop    esp
  428014:	shl    BYTE PTR [ecx],cl
  428016:	jns    0x42803a
  428018:	test   WORD PTR [ebx],dx
  42801b:	call   0xc8787fb6
  428020:	enter  0x61fc,0x5a
  428024:	sar    DWORD PTR [eax],1
  428026:	adc    DWORD PTR ds:0x8c76ce06,0x4e588266
  428030:	jns    0x4280ad
  428032:	inc    edi
  428033:	ss lahf 
  428035:	or     DWORD PTR [ecx+0x7005c7b4],esi
  42803b:	iret   
  42803c:	and    eax,0xeb5b4dba
  428041:	mov    edi,0xdcb30b06
  428046:	retf   0x329c
  428049:	mov    dl,dh
  42804b:	sar    BYTE PTR [edx+0x76366df4],0xae
  428052:	pop    ds
  428053:	daa    
  428054:	shl    DWORD PTR [ecx-0x32],cl
  428057:	(bad)  
  428058:	push   ebx
  428059:	push   edx
  42805a:	dec    ebx
  42805b:	sbb    dh,BYTE PTR ds:0xb07b2263
  428061:	lods   al,BYTE PTR ds:[esi]
  428062:	hlt    
  428063:	aad    0x58
  428065:	or     DWORD PTR [edi],ebp
  428067:	retf   
  428068:	xchg   edx,eax
  428069:	pop    ecx
  42806a:	cmp    ebx,DWORD PTR [ebp+0x31628308]
  428070:	loopne 0x428056
  428072:	sahf   
  428073:	int    0x51
  428075:	xchg   ebx,eax
  428076:	imul   edx,DWORD PTR [esi+esi*1],0xffffff85
  42807a:	mov    cl,0x6f
  42807c:	cwde   
  42807d:	or     al,al
  42807f:	sahf   
  428080:	jnp    0x4280b0
  428082:	addr16 retf 0x14e4
  428086:	mov    ah,0xec
  428088:	xor    BYTE PTR [eax-0xc042920],dh
  42808e:	and    edx,DWORD PTR [ebx+ebx*8]
  428091:	fnstenv [edx+0x2a]
  428094:	call   0x2e1c:0xa9fe5866
  42809b:	lods   eax,DWORD PTR ds:[esi]
  42809c:	in     eax,0x50
  42809e:	pop    ds
  42809f:	das    
  4280a0:	rcl    BYTE PTR [edi-0x2],cl
  4280a3:	fist   WORD PTR [edx+0x8]
  4280a6:	pop    esi
  4280a7:	dec    ebp
  4280a8:	pop    ds
  4280a9:	adc    cl,dl
  4280ab:	dec    edi
  4280ac:	(bad)  
  4280ad:	pop    esp
  4280ae:	daa    
  4280af:	xchg   edi,eax
  4280b0:	xchg   ecx,eax
  4280b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280b2:	add    DWORD PTR [ebx-0x16],ebx
  4280b5:	inc    edx
  4280b6:	jecxz  0x4280e6
  4280b8:	sub    DWORD PTR [esi],0xffffffa2
  4280bb:	lock and cl,BYTE PTR [ebp+0x507ee9d6]
  4280c2:	leave  
  4280c3:	fisttp DWORD PTR [edi+0x75]
  4280c6:	sbb    bh,cl
  4280c8:	in     eax,0x5c
  4280ca:	xchg   esi,eax
  4280cb:	test   al,0x0
  4280cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ce:	mov    dl,0xc
  4280d0:	inc    edx
  4280d1:	mov    dh,0x6f
  4280d3:	add    cl,ah
  4280d5:	push   ds
  4280d6:	jno    0x42811c
  4280d8:	dec    edx
  4280d9:	rol    DWORD PTR [esp+edx*2+0x3d44980d],0x3b
  4280e1:	cwde   
  4280e2:	xchg   ecx,eax
  4280e3:	mov    ch,0x4b
  4280e5:	xchg   ch,ah
  4280e7:	js     0x428133
  4280e9:	pop    ds
  4280ea:	ficom  WORD PTR [eax+0x1f]
  4280ed:	inc    edx
  4280ee:	sti    
  4280ef:	inc    eax
  4280f0:	in     eax,0x5d
  4280f2:	pushf  
  4280f3:	push   ecx
  4280f4:	push   0x68
  4280f6:	das    
  4280f7:	inc    esi
  4280f8:	and    BYTE PTR [edi],dh
  4280fa:	mov    al,0xba
  4280fc:	jae    0x428110
  4280fe:	xor    BYTE PTR [ecx],ah
  428100:	pop    ebp
  428101:	cmp    esi,ecx
  428103:	repz dec edi
  428105:	fwait
  428106:	ins    BYTE PTR es:[edi],dx
  428107:	repnz mov ch,0x11
  42810a:	adc    al,0xde
  42810c:	jo     0x428142
  42810e:	xor    al,0x5
  428110:	jb     0x428145
  428112:	push   0xffffffa6
  428114:	jb     0x42817c
  428116:	sub    dh,dl
  428118:	lock loop 0x4280f9
  42811b:	mov    bh,0x7d
  42811d:	xor    ah,ah
  42811f:	jne    0x4280c6
  428121:	dec    edx
  428122:	pop    edi
  428123:	jecxz  0x428193
  428125:	push   ecx
  428126:	retf   0x53b5
  428129:	fadd   DWORD PTR [edi+ebp*8+0x5f137d5f]
  428130:	sahf   
  428131:	fisub  DWORD PTR [eax+esi*2]
  428134:	dec    ecx
  428135:	outs   dx,DWORD PTR ds:[esi]
  428136:	repnz bound edx,QWORD PTR [eax+0x42]
  42813a:	xor    dl,BYTE PTR [edi+ebx*8]
  42813d:	mov    eax,ds:0xf0d8883f
  428142:	sub    al,0xd3
  428144:	es mov bl,0xaa
  428147:	idiv   BYTE PTR [edx]
  428149:	popa   
  42814a:	aad    0xc2
  42814c:	out    0xe2,eax
  42814e:	dec    ecx
  42814f:	pop    DWORD PTR [ecx]
  428151:	jmp    edi
  428153:	and    DWORD PTR [ecx+0x6395cf9a],ebx
  428159:	adc    eax,0xcaef4090
  42815e:	in     eax,dx
  42815f:	loope  0x428164
  428161:	aam    0xab
  428163:	ret    0x6a68
  428166:	aam    0xed
  428168:	popf   
  428169:	or     al,bh
  42816b:	mov    BYTE PTR [eax+0x71f73efc],bh
  428171:	mov    eax,ds:0x49cb3ced
  428176:	push   ebx
  428177:	es pop esp
  428179:	and    al,0x40
  42817b:	ds jae 0x4281fb
  42817e:	xchg   esi,eax
  42817f:	outs   dx,BYTE PTR ds:[esi]
  428180:	pop    ebp
  428181:	mov    edi,gs
  428183:	jg     0x42815b
  428185:	sti    
  428186:	mov    edx,0xd64a6cec
  42818b:	inc    eax
  42818c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42818d:	inc    edi
  42818e:	dec    edi
  42818f:	mov    ah,0x35
  428191:	retf   
  428192:	jno    0x4281ba
  428194:	je     0x428197
  428196:	pop    ebp
  428197:	and    DWORD PTR [esi],esp
  428199:	cmp    dl,dh
  42819b:	rcr    cl,cl
  42819d:	fiadd  WORD PTR [ebx-0x32ec8f0a]
  4281a3:	(bad)  
  4281a4:	xchg   esp,eax
  4281a5:	in     eax,dx
  4281a6:	cli    
  4281a7:	ins    DWORD PTR es:[edi],dx
  4281a8:	add    DWORD PTR [edi],ebp
  4281aa:	pusha  
  4281ab:	ss mov bh,0x65
  4281ae:	rcr    DWORD PTR [ebp+0x73],0xbf
  4281b2:	pop    eax
  4281b3:	pcmpgtw mm7,QWORD PTR [eax+ebp*4]
  4281b7:	out    0x4b,al
  4281b9:	popf   
  4281ba:	xor    DWORD PTR [ebx],esp
  4281bc:	and    ebp,DWORD PTR cs:[esi-0x49]
  4281c0:	fcomp  QWORD PTR [ebx+0x3a]
  4281c3:	mov    DWORD PTR [bp-0x1689],esp
  4281c8:	popf   
  4281c9:	rol    BYTE PTR [ebp+0x70b095ad],1
  4281cf:	rcr    edx,cl
  4281d1:	out    dx,al
  4281d2:	inc    eax
  4281d3:	rcl    BYTE PTR [esi],0xc4
  4281d6:	sbb    DWORD PTR ds:0x89b4a381,0xa59633bd
  4281e0:	xchg   ebx,eax
  4281e1:	mov    al,0x4f
  4281e3:	into   
  4281e4:	(bad)  
  4281e5:	xchg   ecx,eax
  4281e6:	aaa    
  4281e7:	jg     0x42821e
  4281e9:	loop   0x4281aa
  4281eb:	enter  0x8c66,0xd7
  4281ef:	fucomp st(5)
  4281f1:	cmp    DWORD PTR ds:0xf9e6b937,esp
  4281f7:	dec    edi
  4281f8:	cdq    
  4281f9:	stc    
  4281fa:	fsubr  QWORD PTR [edi-0x7f]
  4281fd:	cmp    al,0x22
  4281ff:	out    0x16,eax
  428201:	fst    QWORD PTR [ecx-0x156623ed]
  428207:	or     ecx,DWORD PTR [ecx-0x60186175]
  42820d:	ret    0xc661
  428210:	and    ebx,DWORD PTR [ecx+0x40929ded]
  428216:	pop    esi
  428217:	pop    ebp
  428218:	cmp    al,0xe8
  42821a:	popa   
  42821b:	lahf   
  42821c:	std    
  42821d:	and    al,0xc8
  42821f:	jp     0x4281ca
  428221:	mov    esi,0x7c3cbbb2
  428226:	add    BYTE PTR [ebp+0x75],ch
  428229:	cmp    eax,0xdd38109e
  42822e:	in     al,0x8e
  428230:	cmp    eax,0x9f815446
  428235:	sub    BYTE PTR [edx+0xb],bh
  428238:	add    BYTE PTR [esi],bh
  42823a:	neg    DWORD PTR [eax+0x7b]
  42823d:	pop    ebp
  42823e:	fst    DWORD PTR [edx+0x1fa48e10]
  428244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428245:	mov    edx,0xb6bf5202
  42824a:	fs aam 0x3c
  42824d:	fmul   st,st(3)
  42824f:	sbb    al,0xb5
  428251:	mov    esi,0xb420ca5e
  428256:	and    eax,0x2351e71a
  42825b:	(bad)  
  42825c:	cmc    
  42825d:	lds    edi,FWORD PTR [edx+0x17639bf5]
  428263:	std    
  428264:	and    DWORD PTR [eax],0xdbf401e7
  42826a:	xchg   DWORD PTR [edi],ecx
  42826c:	inc    edi
  42826d:	ffreep st(4)
  42826f:	enter  0xee2b,0x15
  428273:	xchg   esi,eax
  428274:	xor    ebx,DWORD PTR [eax+0x1e]
  428277:	pushf  
  428278:	enter  0x396c,0xaa
  42827c:	stos   BYTE PTR es:[edi],al
  42827d:	repz dec edi
  42827f:	jno    0x428237
  428281:	jecxz  0x4282e4
  428283:	cmp    bl,al
  428285:	es mov ah,0x4d
  428288:	jl     0x4282e3
  42828a:	mov    DWORD PTR [ecx],edi
  42828c:	adc    bl,dl
  42828e:	cmp    eax,eax
  428290:	je     0x42828f
  428292:	mov    ds:0x7abaa4cf,al
  428297:	jle    0x42830a
  428299:	sbb    cl,BYTE PTR [edx]
  42829b:	dec    ebx
  42829c:	mov    al,0xd0
  42829e:	(bad)  
  42829f:	xor    edx,DWORD PTR [eax-0x4934f191]
  4282a5:	mov    al,ds:0x6c40c22c
  4282aa:	dec    eax
  4282ab:	xchg   ebx,eax
  4282ac:	xchg   ebx,eax
  4282ad:	int    0xaa
  4282af:	and    BYTE PTR ds:0x7a2b6995,dh
  4282b5:	inc    ebp
  4282b6:	scas   al,BYTE PTR es:[edi]
  4282b7:	add    eax,0xacd5b47a
  4282bc:	hlt    
  4282bd:	adc    al,0x3f
  4282bf:	mov    esp,0xaf3de508
  4282c4:	xchg   edx,eax
  4282c5:	xor    DWORD PTR [edi+0x2611515],esp
  4282cb:	xor    eax,0x3eddc07c
  4282d0:	inc    edx
  4282d1:	inc    esp
  4282d2:	in     eax,dx
  4282d3:	and    esp,edx
  4282d5:	rcl    al,cl
  4282d7:	push   ecx
  4282d8:	mov    edx,0xd198c28e
  4282dd:	jmp    0xe15:0xc3863578
  4282e4:	fmul   DWORD PTR [edx-0x13cc61bf]
  4282ea:	adc    ch,bh
  4282ec:	mov    al,0xc8
  4282ee:	fadd   DWORD PTR [ebx]
  4282f0:	dec    ecx
  4282f1:	sub    al,0x37
  4282f3:	clc    
  4282f4:	test   eax,0x206893db
  4282f9:	mov    ebp,ebx
  4282fb:	pop    edi
  4282fc:	je     0x4282d4
  4282fe:	lock pop esp
  428300:	mov    edx,0xb3508758
  428305:	dec    ebx
  428306:	mov    ah,BYTE PTR [ebp-0x2a]
  428309:	je     0x4282ba
  42830b:	aam    0x15
  42830d:	mov    eax,0x758f4cc4
  428312:	clc    
  428313:	(bad)  
  428315:	push   es
  428316:	outs   dx,BYTE PTR ds:[esi]
  428317:	test   BYTE PTR [edi],bh
  428319:	aas    
  42831a:	pop    ecx
  42831b:	jg     0x4282b1
  42831d:	test   BYTE PTR [eax],al
  42831f:	cmp    dl,dl
  428321:	icebp  
  428322:	loopne 0x4282c6
  428324:	xor    al,BYTE PTR [eax]
	...
  42832e:	add    BYTE PTR [eax],al
  428330:	add    dl,al
  428332:	and    DWORD PTR [edi],ebp
  428334:	cdq    
  428335:	out    dx,eax
  428336:	lahf   
  428337:	idiv   BYTE PTR [ebx+0x4f]
  42833a:	js     0x428313
  42833c:	jg     0x42831f
  42833e:	xchg   edi,eax
  42833f:	cmp    BYTE PTR [esi+0x1f8b5],al
  428345:	sbb    eax,0xa4000000
  42834a:	xor    DWORD PTR [edx-0x18],esi
  42834d:	push   0x1bd7758b
  428352:	fistp  WORD PTR [ebp+0x44]
  428355:	(bad)  
  428356:	pop    ecx
  428357:	mov    ds:0x9d2375e9,al
  42835c:	fs pop es
  42835e:	mov    bl,dh
  428360:	dec    ebx
  428361:	adc    edi,DWORD PTR [edi+esi*2-0x4f]
  428365:	adc    al,BYTE PTR [eax]
	...
