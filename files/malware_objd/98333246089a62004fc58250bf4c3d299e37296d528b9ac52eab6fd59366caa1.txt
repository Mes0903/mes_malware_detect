
98333246089a62004fc58250bf4c3d299e37296d528b9ac52eab6fd59366caa1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a085
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	xchg   edx,eax
  401250:	add    al,0xd1
  401252:	mov    al,ds:0x7b7b7b7b
  401257:	mov    ch,0x9e
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   bl,al
  401265:	mov    BYTE PTR [edi-0x7473721d],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0x6af7e3e3,eax
  401302:	xchg   edi,eax
  401303:	inc    ebx
  401304:	jno    0x40130a
  401306:	in     al,dx
  401307:	adc    dh,BYTE PTR ds:0x18cb21f4
  40130d:	mov    esi,DWORD PTR [esi]
  40130f:	enter  0x76ff,0xd8
  401313:	or     eax,0xd17f7a7c
  401318:	push   ebp
  401319:	imul   esp,edi,0xe83c74f2
  40131f:	pop    ss
  401320:	sbb    cl,0x21
  401323:	call   0x46165356
  401328:	dec    edx
  401329:	pop    ebx
  40132a:	jb     0x4012b4
  40132c:	or     DWORD PTR [edi+0x4f],esp
  40132f:	(bad)  
  401330:	retf   
  401331:	xchg   edi,eax
  401332:	fsub   DWORD PTR [ebp+eiz*8+0x4a]
  401336:	das    
  401337:	aam    0x2b
  401339:	js     0x4012d5
  40133b:	and    eax,esp
  40133d:	not    ecx
  40133f:	cmp    bh,BYTE PTR [eax-0x322e04f6]
  401345:	cmc    
  401346:	dec    ebx
  401347:	sbb    DWORD PTR [edi+0x58],ebp
  40134a:	out    0xc3,eax
  40134c:	sbb    al,0xa
  40134e:	mov    esp,0x5f6ce047
  401353:	add    eax,0x43780220
  401358:	adc    ecx,ebx
  40135a:	cmc    
  40135b:	jg     0x4012f6
  40135d:	mov    eax,ds:0x6e0639ec
  401362:	sbb    DWORD PTR [edi-0x23b5775c],0xffffffdd
  401369:	cmp    eax,0x44b3dc38
  40136e:	repz pushf 
  401370:	xchg   ebp,eax
  401371:	fs dec edi
  401373:	stc    
  401374:	jo     0x40137a
  401376:	inc    edx
  401377:	test   DWORD PTR fs:[ecx],esi
  40137a:	xchg   BYTE PTR [eax+0x3561a7cd],bh
  401380:	fimul  WORD PTR [edx]
  401382:	call   0x64d0:0xc0855e1e
  401389:	dec    esp
  40138a:	aaa    
  40138b:	adc    eax,0x6e32588d
  401390:	add    edx,eax
  401392:	js     0x40133b
  401394:	adc    esi,ebx
  401396:	or     dh,ch
  401398:	sahf   
  401399:	pop    ebp
  40139a:	and    BYTE PTR [eax-0x3737f9a0],ah
  4013a0:	push   ebp
  4013a1:	cmp    al,0x15
  4013a3:	xchg   esp,eax
  4013a4:	ins    DWORD PTR es:[edi],dx
  4013a5:	test   BYTE PTR ds:0xd2d50f54,al
  4013ab:	sub    eax,DWORD PTR [esi+0x6b6ec724]
  4013b1:	sbb    al,BYTE PTR [esi-0x6c]
  4013b4:	add    BYTE PTR [edi+0x4c],0x70
  4013b8:	mov    WORD PTR [edi],ss
  4013ba:	push   eax
  4013bb:	ret    
  4013bc:	sub    DWORD PTR [ebx],edi
  4013be:	add    ch,ah
  4013c0:	arpl   WORD PTR [esi+0x4bb81797],dx
  4013c6:	push   es
  4013c7:	add    esi,DWORD PTR [edx+0x5ec8cd77]
  4013cd:	pop    ebx
  4013ce:	mov    WORD PTR [edi],ds
  4013d0:	xor    esi,DWORD PTR [edi-0x5ce798bc]
  4013d6:	mov    ecx,0x29288d39
  4013db:	ret    
  4013dc:	push   ebx
  4013dd:	lds    ecx,FWORD PTR [ebx]
  4013df:	jae    0x40144e
  4013e1:	and    al,0x5f
  4013e3:	cmp    ebx,ebp
  4013e5:	push   ss
  4013e6:	sub    BYTE PTR [esi+0x7e81fc43],cl
  4013ec:	xchg   DWORD PTR [esp+esi*8+0x7754f53f],esi
  4013f3:	xor    al,0xfe
  4013f5:	mov    ebp,0xbab1a4f8
  4013fa:	ss dec esi
  4013fc:	test   eax,0x34440059
  401401:	std    
  401402:	sub    dl,bl
  401404:	mov    ss,WORD PTR [eax+0x3a80ac72]
  40140a:	dec    esp
  40140b:	push   0xb2282e27
  401410:	add    esp,ecx
  401412:	add    BYTE PTR [ecx],0x41
  401415:	leave  
  401416:	and    edi,esp
  401418:	mov    al,0x6b
  40141a:	rol    BYTE PTR [ebp-0x4a7934c4],cl
  401420:	js     0x401404
  401422:	lds    ebp,FWORD PTR [eax]
  401424:	sub    DWORD PTR [ebp-0x59],edx
  401427:	adc    al,0xfd
  401429:	stc    
  40142a:	inc    ebx
  40142b:	jle    0x401441
  40142d:	cdq    
  40142e:	cmc    
  40142f:	aam    0xd2
  401431:	dec    ecx
  401432:	sbb    BYTE PTR [edx+0x3e],cl
  401435:	push   es
  401436:	mov    bl,0xcb
  401438:	add    bh,BYTE PTR [ecx-0x1d22a1be]
  40143e:	add    BYTE PTR [eax],dl
  401440:	mov    ebx,0xea5ba37
  401445:	pop    eax
  401446:	lods   al,BYTE PTR cs:[esi]
  401448:	xchg   esi,eax
  401449:	rol    ebx,1
  40144b:	pop    ds
  40144c:	repnz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40144f:	rol    DWORD PTR [esi+0xb],0x2a
  401453:	sbb    edx,edi
  401455:	cmp    BYTE PTR [esi+0x49],dh
  401458:	mov    bh,BYTE PTR [eax]
  40145a:	pop    es
  40145b:	or     ecx,DWORD PTR [ebp+0x5a]
  40145e:	test   eax,0x784cd0b1
  401463:	test   BYTE PTR [edx-0xf17eb57],dh
  401469:	mov    edx,0x1e5b965b
  40146e:	sbb    DWORD PTR [edi-0x40a0cb26],edi
  401474:	sub    ch,0x33
  401477:	clc    
  401478:	jmp    0x2cca551
  40147d:	rcl    DWORD PTR [edx+0x820865],cl
  401483:	mov    esp,0xe3d8038e
  401488:	add    al,0x8b
  40148a:	inc    edx
  40148b:	push   ebx
  40148c:	jle    0x401488
  40148e:	sub    BYTE PTR [ebx],ch
  401490:	(bad)  
  401491:	in     eax,0x7f
  401493:	jnp    0x401425
  401495:	xchg   edi,ecx
  401497:	test   BYTE PTR [eax],ah
  401499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40149a:	int3   
  40149b:	fistp  DWORD PTR [esi+0x2]
  40149e:	pop    edi
  40149f:	inc    edi
  4014a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014a1:	int    0x6
  4014a3:	(bad)  
  4014a4:	(bad)  
  4014a5:	xchg   edi,eax
  4014a6:	push   ebp
  4014a7:	cmp    cl,bh
  4014a9:	xor    al,0x5c
  4014ab:	cmp    eax,0x4d4fd3e3
  4014b0:	pusha  
  4014b1:	inc    esp
  4014b2:	pop    esp
  4014b3:	mov    bh,0xc3
  4014b5:	mov    al,0xe
  4014b7:	jo     0x401531
  4014b9:	mov    ch,bh
  4014bb:	push   ecx
  4014bc:	inc    ebp
  4014bd:	aad    0x4
  4014bf:	out    dx,eax
  4014c0:	or     DWORD PTR [ecx],esp
  4014c2:	data16 or BYTE PTR [esi+0xa],dl
  4014c6:	or     ebx,DWORD PTR [esp+eax*4]
  4014c9:	iret   
  4014ca:	ds xchg esi,eax
  4014cc:	(bad)  
  4014cd:	(bad)  
  4014ce:	into   
  4014cf:	rcr    al,cl
  4014d1:	out    0x34,al
  4014d3:	int3   
  4014d4:	sbb    BYTE PTR [esi+0x21622fc0],cl
  4014da:	push   edi
  4014db:	loop   0x40152c
  4014dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014de:	mov    ah,0x65
  4014e0:	jecxz  0x4014d0
  4014e2:	sub    BYTE PTR [eax+eiz*4],0xa
  4014e6:	xor    ebx,DWORD PTR [eax+0x74]
  4014e9:	xchg   BYTE PTR [edx-0x6abdd3fa],dl
  4014ef:	sbb    DWORD PTR [edx+ebp*1],esp
  4014f2:	sbb    BYTE PTR [ebp+0x4bbacb75],dl
  4014f8:	shl    bh,cl
  4014fa:	aas    
  4014fb:	call   0xa60e:0xa22b4bd0
  401502:	mov    bh,0xaf
  401504:	cmp    al,0x9a
  401506:	fwait
  401507:	jno    0x4014b1
  401509:	fmul   QWORD PTR [ecx+0x49]
  40150c:	inc    edi
  40150d:	inc    ebp
  40150e:	add    eax,0x7f942741
  401513:	das    
  401514:	cmp    BYTE PTR [esi],ah
  401516:	std    
  401517:	pop    es
  401518:	sbb    al,0x4b
  40151a:	mov    edi,0x9ff1a4de
  40151f:	mov    ah,0x52
  401521:	mov    dl,0x8b
  401523:	(bad)  [eax+edx*2]
  401526:	gs sti 
  401528:	arpl   WORD PTR ds:0x43fe977a,bx
  40152e:	jbe    0x401597
  401530:	xchg   ebp,eax
  401531:	adc    DWORD PTR [eax+0x47f306d0],ebp
  401537:	aaa    
  401538:	xchg   esp,eax
  401539:	rol    BYTE PTR [ebp-0x1b],0xcf
  40153d:	lods   eax,DWORD PTR ds:[esi]
  40153e:	or     DWORD PTR [eax+0x61],edx
  401541:	add    ecx,DWORD PTR [edi+0x44d04d80]
  401547:	cld    
  401548:	xlat   BYTE PTR ds:[ebx]
  401549:	and    BYTE PTR [edx+esi*1+0x78],dl
  40154d:	inc    ebx
  40154e:	dec    ecx
  40154f:	out    0x1b,al
  401551:	sub    dl,0x70
  401554:	loope  0x401515
  401556:	idiv   DWORD PTR ds:0x7b574de8
  40155c:	adc    al,0x9c
  40155e:	pushf  
  40155f:	xor    al,0x6c
  401561:	bound  esi,QWORD PTR [esi+0x27912ac2]
  401567:	in     al,dx
  401568:	adc    bh,cl
  40156a:	adc    al,0xdf
  40156c:	adc    bh,al
  40156e:	dec    edi
  40156f:	(bad)  
  401570:	fidivr WORD PTR [ebx-0x27]
  401573:	retf   
  401574:	clc    
  401575:	retf   
  401576:	cmp    BYTE PTR [ecx-0x2a32ffbb],cl
  40157c:	sahf   
  40157d:	xor    ch,BYTE PTR ds:0x544e54d3
  401583:	lea    ebx,[ecx-0x1575ec3c]
  401589:	popa   
  40158a:	sbb    al,0x25
  40158c:	jge    0x401527
  40158e:	scas   eax,DWORD PTR es:[edi]
  40158f:	lds    edx,FWORD PTR [ebp-0x2c]
  401592:	push   edx
  401593:	ret    
  401594:	xchg   DWORD PTR [ebx+0x3fdfee60],ebx
  40159a:	mov    eax,ds:0x851fce10
  40159f:	mov    al,ds:0xea2d599b
  4015a4:	test   DWORD PTR [esi],edx
  4015a6:	mov    ds:0x261fa4bf,al
  4015ab:	mov    cl,0xd3
  4015ad:	push   edi
  4015ae:	retf   
  4015af:	daa    
  4015b0:	pop    ds
  4015b1:	out    0x76,eax
  4015b3:	push   ecx
  4015b4:	inc    esi
  4015b5:	cmp    al,dl
  4015b7:	xchg   edi,eax
  4015b8:	mov    eax,ds:0x4f9d5071
  4015bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015be:	inc    eax
  4015bf:	lods   eax,DWORD PTR ds:[esi]
  4015c0:	mov    ah,0x56
  4015c2:	ins    BYTE PTR es:[edi],dx
  4015c3:	inc    ebx
  4015c4:	xor    DWORD PTR [eax-0x1c324efa],0xc4c52cda
  4015ce:	enter  0x3d47,0x80
  4015d2:	aaa    
  4015d3:	(bad)  
  4015d4:	jle    0x401593
  4015d6:	add    esp,DWORD PTR [edi+0x230adc6e]
  4015dc:	pop    edx
  4015dd:	fdivr  QWORD PTR [esi]
  4015df:	loopne 0x40158b
  4015e1:	test   al,0x4f
  4015e3:	enter  0x1a22,0x89
  4015e7:	adc    al,bh
  4015e9:	inc    ebp
  4015ea:	mov    ecx,0x21eb7a0b
  4015ef:	jb     0x401573
  4015f1:	scas   eax,DWORD PTR es:[edi]
  4015f2:	pop    edx
  4015f3:	aaa    
  4015f4:	push   eax
  4015f6:	xor    BYTE PTR [eax-0x21],ch
  4015f9:	cs scas al,BYTE PTR es:[edi]
  4015fb:	sub    BYTE PTR [ebp+0x587f7066],0x55
  401602:	sub    esp,DWORD PTR [esi-0x10]
  401605:	mov    dh,0x13
  401607:	mov    BYTE PTR [esi+0x27],0x7
  40160b:	push   es
  40160c:	ins    DWORD PTR es:[edi],dx
  40160d:	push   esi
  40160e:	ficomp WORD PTR [eax-0x4799b517]
  401614:	not    ebp
  401616:	les    ebp,FWORD PTR [eax+eiz*4+0x44]
  40161a:	adc    ebx,esi
  40161c:	sub    BYTE PTR [eax-0x13],0xb2
  401620:	js     0x4015de
  401622:	pusha  
  401623:	jb     0x40160e
  401625:	hlt    
  401626:	int    0x2b
  401628:	mov    al,0x87
  40162a:	pop    esp
  40162b:	sbb    BYTE PTR [eax],0x27
  40162e:	je     0x401697
  401630:	mov    ss,WORD PTR [eax+0x5f35c74f]
  401636:	lods   al,BYTE PTR ds:[esi]
  401637:	daa    
  401638:	repz mov ebp,0xbdf70f0c
  40163e:	or     ah,BYTE PTR ds:[edi]
  401641:	push   ebp
  401642:	jo     0x4015fc
  401644:	loopne 0x40169c
  401646:	jp     0x4016af
  401648:	xor    ecx,DWORD PTR [eax]
  40164a:	(bad)  
  40164b:	jbe    0x40168e
  40164d:	aaa    
  40164e:	(bad)  
  40164f:	imul   DWORD PTR [edx+0x4ca173e6]
  401655:	adc    al,0xd1
  401657:	das    
  401658:	adc    eax,0x1e621e9d
  40165d:	mov    BYTE PTR cs:[esi-0x42],bh
  401661:	sub    ah,BYTE PTR [ebx]
  401663:	mov    cl,0x73
  401665:	xor    DWORD PTR [esi+0x7945127f],esi
  40166b:	repnz inc ebx
  40166d:	xor    al,0x71
  40166f:	and    eax,0xacc8c65c
  401674:	jecxz  0x4015ff
  401676:	lock jl 0x401681
  401679:	xchg   edi,eax
  40167a:	push   0x5cde203e
  40167f:	pop    ebx
  401680:	mov    al,0x6f
  401682:	mov    bl,0xcc
  401684:	clc    
  401685:	jmp    0x401654
  401687:	fstp   DWORD PTR [eax]
  401689:	scas   al,BYTE PTR es:[edi]
  40168a:	(bad)  
  40168b:	jg     0x40165e
  40168d:	jge    0x4016d8
  40168f:	xor    bh,BYTE PTR [edi+0x1ae62bb4]
  401695:	loope  0x40169f
  401697:	xor    BYTE PTR [ebx+0x2decb118],cl
  40169d:	sbb    bh,BYTE PTR [esi]
  40169f:	mov    edi,0x3e4f0aad
  4016a4:	cmc    
  4016a5:	lods   al,BYTE PTR ds:[esi]
  4016a6:	sub    BYTE PTR [esi-0x3d],ah
  4016a9:	aas    
  4016aa:	push   eax
  4016ab:	and    edi,DWORD PTR [ebx+ebp*1-0x7f]
  4016af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016b0:	stc    
  4016b1:	mov    ah,0x3e
  4016b3:	or     BYTE PTR [edi-0x565437f2],dh
  4016b9:	(bad)  
  4016ba:	adc    DWORD PTR [edi],ecx
  4016bc:	and    ch,bl
  4016be:	jmp    0x6951:0xf43b7ec4
  4016c5:	popf   
  4016c6:	mov    esi,0xfe253217
  4016cb:	xchg   ebx,eax
  4016cc:	sub    al,BYTE PTR [edi]
  4016ce:	adc    ebp,edi
  4016d0:	and    al,0x3f
  4016d2:	jecxz  0x4016a2
  4016d4:	nop
  4016d5:	xchg   esi,eax
  4016d6:	mov    ds:0xa7aeaa15,al
  4016db:	lock lods al,BYTE PTR ds:[esi]
  4016dd:	sub    al,0xad
  4016df:	iret   
  4016e0:	loopne 0x40169b
  4016e2:	xchg   DWORD PTR [esi],eax
  4016e4:	jecxz  0x401765
  4016e6:	ja     0x40169f
  4016e8:	jbe    0x4016b5
  4016ea:	data16 fst QWORD PTR [ebx+0x619674fb]
  4016f1:	aas    
  4016f2:	sbb    DWORD PTR [ecx-0x71],esi
  4016f5:	enter  0x487a,0x75
  4016f9:	sbb    bh,BYTE PTR [esp+ebx*2+0x3a5c6a33]
  401700:	sub    ch,ch
  401702:	icebp  
  401703:	pop    ebx
  401704:	dec    esp
  401705:	pushf  
  401706:	popf   
  401707:	loopne 0x40168c
  401709:	mov    cl,0x2
  40170b:	ins    BYTE PTR es:[edi],dx
  40170c:	arpl   WORD PTR [eax],sp
  40170e:	sbb    DWORD PTR [eax],ebx
  401710:	ret    0x6294
  401713:	sbb    eax,0x2ecb27b9
  401718:	fwait
  401719:	(bad)  
  40171a:	xor    eax,0xa5748dd3
  40171f:	es or  al,0xf6
  401722:	sub    dl,BYTE PTR [edx+eax*2-0x69]
  401726:	xor    al,0x1a
  401728:	int    0xf2
  40172a:	mov    DWORD PTR [eax-0x7d90bd92],edi
  401730:	pusha  
  401731:	dec    ecx
  401732:	dec    edi
  401733:	inc    edi
  401734:	add    DWORD PTR [ebp-0x2f9895c6],0x4671767d
  40173e:	xchg   ecx,eax
  40173f:	arpl   WORD PTR [esi+eax*8],ax
  401742:	xchg   ebx,eax
  401743:	mov    WORD PTR [edi+0x5e],es
  401746:	js     0x401735
  401748:	div    BYTE PTR [ebx]
  40174a:	ror    BYTE PTR [eax],1
  40174c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40174e:	pop    esi
  40174f:	mov    eax,ds:0x4d8b40ab
  401754:	int    0xce
  401756:	mov    esi,DWORD PTR [ecx]
  401758:	dec    ecx
  401759:	inc    ebx
  40175a:	jmp    0xae04916f
  40175f:	lock xchg esp,eax
  401761:	and    al,0x5c
  401763:	xor    al,0x20
  401765:	mov    bl,0xd9
  401767:	push   ds
  401768:	sub    bh,BYTE PTR [eax+edi*8]
  40176b:	fsubr  DWORD PTR [eax+0x66d490de]
  401771:	cmp    edx,DWORD PTR [ecx+0x72]
  401774:	jge    0x401762
  401776:	jmp    0x401782
  401778:	push   0xfffffff2
  40177a:	mov    bh,0xc5
  40177c:	xchg   edx,ebp
  40177e:	push   ebp
  40177f:	push   ecx
  401780:	pop    ebp
  401781:	(bad)  
  401782:	loopne 0x40170d
  401784:	jl     0x4017cc
  401786:	xchg   esp,eax
  401788:	stos   DWORD PTR es:[edi],eax
  401789:	push   ecx
  40178a:	leave  
  40178b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40178c:	ret    0x867c
  40178f:	callw  0x9276
  401793:	cli    
  401794:	sub    BYTE PTR [esi-0x7b],bh
  401797:	xchg   ecx,eax
  401798:	in     eax,dx
  401799:	hlt    
  40179a:	js     0x401740
  40179c:	inc    eax
  40179d:	in     al,dx
  40179e:	imul   edx,DWORD PTR [ecx-0x2],0x3c
  4017a2:	dec    edi
  4017a3:	mov    ch,0xc2
  4017a5:	mov    edx,0x740df7b4
  4017aa:	and    al,0xf6
  4017ac:	dec    ebp
  4017ad:	je     0x401744
  4017af:	aad    0x9
  4017b1:	stc    
  4017b2:	mov    al,0x7b
  4017b4:	outs   dx,DWORD PTR ds:[esi]
  4017b5:	call   0x5b53b069
  4017ba:	mov    bl,0x65
  4017bc:	push   0x76
  4017be:	add    esp,esi
  4017c0:	in     al,0x32
  4017c2:	outs   dx,DWORD PTR ds:[esi]
  4017c3:	push   edx
  4017c4:	jbe    0x4017e0
  4017c6:	cli    
  4017c7:	repnz add eax,ecx
  4017ca:	and    al,0x8d
  4017cc:	jno    0x40177d
  4017ce:	test   eax,0xefacfd52
  4017d3:	mov    eax,0xcc6611d0
  4017d8:	dec    ebp
  4017d9:	push   ss
  4017da:	cdq    
  4017db:	(bad)  
  4017dc:	jne    0x4017f5
  4017de:	mov    ebp,0x56b6ec11
  4017e3:	dec    eax
  4017e4:	and    DWORD PTR [ebp+0x55ed219b],0x3dedc5c0
  4017ee:	int    0x6d
  4017f0:	sar    BYTE PTR [eax+0x29d88b1f],0xd3
  4017f7:	sub    eax,0xacb114b5
  4017fc:	and    BYTE PTR [ebp+ebp*8+0x65],0x43
  401801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401802:	mov    esi,0x3961793b
  401807:	loop   0x4017d0
  401809:	mov    edi,0x4da4fd5d
  40180e:	arpl   ax,di
  401810:	pop    edx
  401811:	mov    ch,0xf5
  401813:	xchg   edx,eax
  401814:	(bad)  
  401815:	or     eax,0x3a518abb
  40181a:	ret    
  40181b:	jno    0x4017a1
  40181d:	imul   edx,DWORD PTR [edx+esi*8],0x454c44e4
  401824:	xor    cl,BYTE PTR [ebp-0x60]
  401827:	sbb    DWORD PTR [eax],ebp
  401829:	dec    ebp
  40182a:	(bad)  
  40182b:	nop
  40182c:	mov    WORD PTR [eax],ds
  40182e:	adc    edi,DWORD PTR [ebp+0x50]
  401831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401832:	jp     0x401876
  401834:	mov    eax,ds:0x50cc7deb
  401839:	or     BYTE PTR [edx+0x68bff29f],bh
  40183f:	adc    al,0xe4
  401841:	xor    BYTE PTR [ebp+0x107c12ee],dl
  401847:	mov    ss,WORD PTR [ebx+0x39]
  40184a:	pop    eax
  40184b:	int3   
  40184c:	jecxz  0x4017e4
  40184e:	cmp    eax,0x54a65ce9
  401853:	test   al,0x80
  401855:	cmc    
  401856:	mov    ds:0x72028bf0,eax
  40185b:	js     0x40188b
  40185d:	scas   al,BYTE PTR es:[edi]
  40185e:	dec    edx
  40185f:	mov    al,al
  401861:	xchg   ebp,eax
  401862:	dec    DWORD PTR [edx-0x1a]
  401865:	xlat   BYTE PTR ds:[ebx]
  401866:	dec    ebp
  401867:	fcomp  QWORD PTR [esi-0x4b1a6677]
  40186d:	cmp    DWORD PTR [ebp+0x2dd7a72],esp
  401873:	mov    ah,0xf7
  401875:	and    eax,DWORD PTR cs:0x83b75870
  40187c:	pop    ebx
  40187d:	dec    esi
  40187e:	into   
  40187f:	adc    eax,0xaa9b6bab
  401884:	push   ebp
  401885:	loope  0x40189c
  401887:	mov    ds:0x113a3e1e,al
  40188c:	jle    0x401886
  40188e:	jecxz  0x4018bb
  401890:	dec    edi
  401891:	inc    edi
  401892:	ins    BYTE PTR es:[edi],dx
  401893:	jmp    0xc7763a39
  401898:	in     al,0xde
  40189a:	fst    QWORD PTR [eax-0x2a]
  40189d:	adc    ebx,DWORD PTR [eax-0x4957ccd7]
  4018a3:	add    BYTE PTR [ebp+ebp*2-0x13],dl
  4018a7:	push   ss
  4018a8:	cmp    BYTE PTR [esi],bh
  4018aa:	jmp    0x401864
  4018ac:	add    ch,BYTE PTR [ebp-0x30]
  4018af:	adc    BYTE PTR [esi],bh
  4018b1:	call   0x578f0cdc
  4018b6:	sub    BYTE PTR [esi-0x76],bh
  4018b9:	fwait
  4018ba:	in     al,dx
  4018bb:	je     0x401845
  4018bd:	pop    ecx
  4018be:	inc    esi
  4018bf:	int3   
  4018c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c1:	ins    DWORD PTR es:[edi],dx
  4018c2:	cwde   
  4018c3:	sub    al,0x4a
  4018c5:	xor    eax,0x91e4f56f
  4018ca:	int3   
  4018cb:	(bad)  
  4018cc:	xchg   ebp,eax
  4018cd:	pop    edi
  4018ce:	xchg   ebx,eax
  4018cf:	ins    DWORD PTR es:[edi],dx
  4018d0:	out    dx,al
  4018d1:	xchg   edx,eax
  4018d2:	or     ebp,DWORD PTR [edi-0x24820d2f]
  4018d8:	sbb    eax,0x7c8e991a
  4018dd:	ins    BYTE PTR es:[edi],dx
  4018de:	enter  0x75e0,0xa5
  4018e2:	pop    edx
  4018e3:	xchg   esp,eax
  4018e4:	mov    ds:0xc325a926,eax
  4018e9:	or     al,0xe4
  4018eb:	inc    edx
  4018ec:	test   esi,ebx
  4018ee:	ret    0x981f
  4018f1:	sbb    al,0x63
  4018f3:	ret    0xad58
  4018f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018f7:	sbb    ebx,DWORD PTR [edi+ecx*8-0x63b93d22]
  4018fe:	mov    esi,0xd5682681
  401903:	ss hlt 
  401905:	je     0x4018d5
  401907:	adc    eax,0x81dda060
  40190c:	aad    0x82
  40190e:	test   eax,0xf12424f5
  401913:	mov    ds:0x86aeb515,eax
  401918:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40191a:	ds aam 0x43
  40191d:	dec    ebx
  40191e:	xchg   esp,eax
  40191f:	and    DWORD PTR ds:0xd74ba763,eax
  401925:	idiv   BYTE PTR [edi-0x36]
  401928:	add    al,BYTE PTR [esi+eax*4]
  40192b:	fs cmp bl,bh
  40192e:	mov    ch,0x72
  401930:	outs   dx,DWORD PTR ds:[esi]
  401931:	test   DWORD PTR [ebx],0xc8844d31
  401937:	(bad)  
  401939:	rcr    BYTE PTR [edi+0x39],0xf
  40193d:	enter  0x511b,0xfc
  401941:	or     BYTE PTR ds:0xeb45a626,dh
  401947:	clc    
  401948:	int3   
  401949:	ds aas 
  40194b:	xchg   DWORD PTR [eax],edx
  40194d:	pop    ebp
  40194e:	jns    0x40192e
  401950:	xchg   esi,eax
  401951:	mov    ah,0xa9
  401953:	xchg   esi,eax
  401954:	les    esp,FWORD PTR [ebx-0x5cd41f82]
  40195a:	adc    DWORD PTR [eax+0x5fcc05cf],ebx
  401960:	xchg   ecx,eax
  401961:	or     al,ch
  401963:	test   DWORD PTR [ecx+0x7c5518a],eax
  401969:	jmp    FWORD PTR [ecx+0x0]
  40196c:	addr16 ja 0x401926
  40196f:	pop    ds
  401970:	sub    edi,ebx
  401972:	mov    esi,0x524f6390
  401977:	pop    ecx
  401978:	or     bh,0xda
  40197b:	int3   
  40197c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40197d:	je     0x40198a
  40197f:	ins    BYTE PTR es:[edi],dx
  401980:	cmp    eax,0xc2e293e7
  401985:	mov    ch,0xd2
  401987:	fnstsw WORD PTR [esi+0x10]
  40198a:	cmp    DWORD PTR [ebp+ecx*1+0xf5963e1],esp
  401991:	sub    eax,0x3306f85b
  401996:	imul   esi,DWORD PTR [ecx+eax*1],0xffffff80
  40199a:	arpl   sp,si
  40199c:	sub    esi,DWORD PTR [ecx-0x73]
  40199f:	les    ecx,FWORD PTR [ecx]
  4019a1:	imul   ebx,DWORD PTR [ebx+0x24],0xffffff9b
  4019a5:	cmp    ah,BYTE PTR ds:0x3983a480
  4019ab:	jb     0x4019ca
  4019ad:	nop
  4019ae:	inc    ebx
  4019af:	inc    edx
  4019b0:	lds    ecx,FWORD PTR [eax+0x4ec7294]
  4019b6:	push   edx
  4019b7:	sub    eax,0x22bf36e
  4019bc:	pop    eax
  4019bd:	stc    
  4019be:	jo     0x40198d
  4019c0:	push   es
  4019c1:	sbb    eax,0xd177d092
  4019c6:	mov    DWORD PTR [esi],edi
  4019c8:	xlat   BYTE PTR ds:[ebx]
  4019c9:	mov    ebp,0xa72a9893
  4019ce:	xchg   ebp,eax
  4019cf:	dec    edi
  4019d0:	aam    0xbf
  4019d2:	arpl   WORD PTR [edi+0x22ab8658],si
  4019d8:	call   0xa4b1:0x7772f88b
  4019df:	in     al,dx
  4019e0:	sub    eax,0xdd4d1daa
  4019e5:	mov    edi,0xbfafbb1b
  4019ea:	fcomp  QWORD PTR [esi+0x6f85374d]
  4019f0:	add    eax,0xf80c3821
  4019f5:	add    si,WORD PTR [ecx]
  4019f8:	or     ebx,0xffffffeb
  4019fb:	or     BYTE PTR [esi+0x47],ah
  4019fe:	les    ebx,FWORD PTR [esp+eax*2-0x16ad887c]
  401a05:	cmp    al,BYTE PTR [ebp+0x3669f153]
  401a0b:	mov    dl,BYTE PTR [edi-0x1785b290]
  401a11:	push   edx
  401a12:	ret    0x1459
  401a15:	jns    0x401a7e
  401a17:	mov    ah,0x73
  401a19:	fcomp  QWORD PTR [ebx+0x5c]
  401a1c:	scas   al,BYTE PTR es:[edi]
  401a1d:	push   ds
  401a1e:	inc    edi
  401a1f:	add    al,0x43
  401a21:	pop    ecx
  401a22:	es in  eax,0x64
  401a25:	xchg   DWORD PTR [eax],eax
  401a27:	es pop es
  401a29:	imul   esi,DWORD PTR [ecx],0x85d1e1cf
  401a2f:	daa    
  401a30:	cmp    bh,BYTE PTR [ebx]
  401a32:	imul   ebx,DWORD PTR [edi-0x7f],0x23
  401a36:	cld    
  401a37:	arpl   WORD PTR [eax],bp
  401a39:	dec    BYTE PTR [eax+edx*8]
  401a3c:	jle    0x401a65
  401a3e:	sahf   
  401a3f:	mov    ds:0xc84030e2,eax
  401a44:	mov    bl,0xa5
  401a46:	jmp    0x58b3:0x77b8e747
  401a4d:	rol    DWORD PTR [ecx+eiz*8+0x1f8047ff],0x43
  401a55:	xchg   esp,eax
  401a56:	daa    
  401a57:	fstp   QWORD PTR [ebp+ebx*4-0x6a]
  401a5b:	out    0xb2,eax
  401a5d:	jl     0x401a1d
  401a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a60:	jmp    FWORD PTR [esi]
  401a62:	pop    ss
  401a63:	scas   al,BYTE PTR es:[edi]
  401a64:	retf   0x6647
  401a67:	adc    BYTE PTR [ecx-0x50],bl
  401a6a:	add    dl,bh
  401a6c:	xchg   esi,eax
  401a6d:	(bad)  
  401a6e:	in     al,dx
  401a6f:	push   esp
  401a70:	or     dl,0xb6
  401a73:	and    eax,0x1b16487a
  401a78:	cmc    
  401a79:	fsubr  DWORD PTR [eax+ecx*2]
  401a7c:	or     al,0x38
  401a7e:	mov    ebx,0x79703a7c
  401a83:	xchg   ecx,eax
  401a84:	hlt    
  401a85:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  401a87:	(bad)  
  401a88:	stos   DWORD PTR es:[edi],eax
  401a89:	(bad)  
  401a8a:	fsub   QWORD PTR [edx-0x58c3ef49]
  401a90:	or     ecx,DWORD PTR [esi]
  401a92:	lods   eax,DWORD PTR ds:[esi]
  401a93:	in     al,0xb
  401a95:	add    DWORD PTR [ecx-0x18],esp
  401a98:	add    al,0xe7
  401a9a:	jmp    0x7277:0xa8c86ea2
  401aa1:	lods   al,BYTE PTR ds:[esi]
  401aa2:	(bad)  
  401aa3:	loope  0x401a40
  401aa5:	dec    esp
  401aa6:	dec    eax
  401aa7:	sub    bl,bh
  401aa9:	test   BYTE PTR [ebx-0x3d],0x3d
  401aad:	pop    ecx
  401aae:	aad    0xf7
  401ab0:	add    ah,BYTE PTR [edi+0x72]
  401ab3:	push   ebx
  401ab4:	dec    esi
  401ab5:	ds jmp 0x8f0:0x2f4f8fb6
  401abd:	jmp    0x401ae9
  401abf:	sub    ah,BYTE PTR [eax]
  401ac1:	in     al,0xf4
  401ac3:	or     BYTE PTR [edx-0x28],bl
  401ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ac7:	mov    edx,0x1eb1c5be
  401acc:	test   DWORD PTR [edx+0x36],edx
  401acf:	pop    esp
  401ad0:	pushf  
  401ad1:	pop    eax
  401ad2:	fst    QWORD PTR [ecx]
  401ad4:	push   esi
  401ad5:	inc    edi
  401ad6:	and    ebp,DWORD PTR [esi]
  401ad8:	pop    ebx
  401ad9:	in     eax,0x39
  401adb:	ret    0xfef7
  401ade:	test   eax,0x1cbefcb1
  401ae3:	or     BYTE PTR fs:[ecx+0x4ee2c764],bl
  401aea:	xchg   DWORD PTR [ecx+0x7c],eax
  401aed:	(bad)  
  401aee:	out    dx,al
  401aef:	cmc    
  401af0:	(bad)  
  401af2:	in     al,0x21
  401af4:	jmp    0xd2e9:0x1a10fa8c
  401afb:	pop    esp
  401afc:	cs jbe 0x401afb
  401aff:	inc    eax
  401b00:	adc    al,0x6
  401b02:	(bad)  
  401b03:	repz push 0x4d6fb814
  401b09:	cmp    BYTE PTR [ebx+edx*4-0x20],0x87
  401b0e:	in     eax,0x1
  401b10:	clc    
  401b11:	adc    DWORD PTR [edx-0x2d60a23a],0xffffffd0
  401b18:	dec    eax
  401b19:	std    
  401b1a:	shr    dh,1
  401b1c:	push   eax
  401b1d:	arpl   WORD PTR [edx+0x1cb8021b],sp
  401b23:	pop    es
  401b24:	fistp  QWORD PTR [edi+eiz*4+0x69ccd46d]
  401b2b:	out    dx,al
  401b2c:	(bad)  
  401b2d:	dec    esi
  401b2e:	retf   0x22c3
  401b31:	sbb    edx,DWORD PTR cs:[esi-0x6137e853]
  401b38:	aad    0x5
  401b3a:	adc    dh,dl
  401b3c:	retf   
  401b3d:	cli    
  401b3e:	pop    edx
  401b3f:	mov    gs,WORD PTR [ebx-0x35]
  401b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b43:	push   ebp
  401b44:	dec    edi
  401b45:	mov    ebp,0xdb14f332
  401b4a:	in     al,0x85
  401b4c:	ins    DWORD PTR es:[edi],dx
  401b4d:	outs   dx,DWORD PTR ds:[esi]
  401b4e:	fild   DWORD PTR [edx-0xf6d153b]
  401b54:	in     al,0xd7
  401b56:	es pop esi
  401b58:	jne    0x401b15
  401b5a:	xchg   DWORD PTR [eax-0x24dd00bc],ebp
  401b60:	popf   
  401b61:	xchg   ebp,eax
  401b62:	sahf   
  401b63:	inc    eax
  401b64:	jbe    0x401ba1
  401b66:	jnp    0x401b4b
  401b68:	lahf   
  401b69:	adc    al,0xc8
  401b6b:	sub    ecx,ecx
  401b6d:	xor    eax,ecx
  401b6f:	sub    DWORD PTR [eax+0x505bea36],edi
  401b75:	push   edi
  401b76:	adc    cl,BYTE PTR [edi-0x35]
  401b79:	loop   0x401b67
  401b7b:	outs   dx,DWORD PTR ds:[esi]
  401b7c:	ret    0x3ae0
  401b7f:	push   ecx
  401b80:	lds    edx,FWORD PTR [edi+ebx*2-0x6a]
  401b84:	xchg   ebx,eax
  401b85:	pusha  
  401b86:	xchg   DWORD PTR [ecx*4-0x43668a04],esp
  401b8d:	lods   al,BYTE PTR ds:[esi]
  401b8e:	out    dx,eax
  401b8f:	ss dec esp
  401b91:	test   DWORD PTR [edi],esp
  401b93:	mov    al,0x53
  401b95:	sbb    BYTE PTR [edx-0x75c6cd72],dl
  401b9b:	jmp    DWORD PTR [esi-0x3645084]
  401ba1:	push   0x74e2e6f8
  401ba6:	sbb    BYTE PTR [edx],al
  401ba8:	dec    edi
  401ba9:	cmp    esi,edx
  401bab:	dec    ebx
  401bac:	neg    BYTE PTR [ecx-0x21]
  401baf:	cmp    BYTE PTR ds:0x9fb3,cl
  401bb4:	pop    esp
  401bb5:	lea    edx,[esi]
  401bb7:	mov    ecx,?
  401bb9:	test   DWORD PTR [eax],0x2a62454e
  401bbf:	cwde   
  401bc0:	jecxz  0x401b9b
  401bc2:	add    ebx,ecx
  401bc4:	aam    0x9b
  401bc6:	push   es
  401bc7:	je     0x401b5d
  401bc9:	call   0x8f9519e8
  401bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bcf:	cld    
  401bd0:	(bad)  [edi-0x54]
  401bd3:	mov    ds:0xa086a725,eax
  401bd8:	pusha  
  401bd9:	das    
  401bda:	jge    0x401bd0
  401bdc:	sar    DWORD PTR [ebx+esi*8+0x7cdffb65],0xfc
  401be4:	inc    ebx
  401be5:	and    eax,0xcc360aba
  401bea:	enter  0x9f3b,0x67
  401bee:	js     0x401c21
  401bf0:	lea    edi,[edx]
  401bf2:	and    DWORD PTR [ebp-0x71],esi
  401bf5:	mov    edx,0xab932a0d
  401bfa:	(bad)  
  401bfb:	dec    ecx
  401bfc:	push   edi
  401bfd:	jg     0x401c33
  401bff:	lock mov edi,0x9d3a4250
  401c05:	fwait
  401c06:	dec    eax
  401c07:	mov    WORD PTR [esi+0x6638650d],?
  401c0d:	xchg   ecx,eax
  401c0e:	test   ah,bh
  401c10:	or     ebx,DWORD PTR [ebx+0x6a7d32d7]
  401c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c17:	bound  edi,QWORD PTR [eax+0x56d611cc]
  401c1d:	xchg   ebp,eax
  401c1e:	std    
  401c1f:	jmp    0x401c1e
  401c21:	pop    ecx
  401c22:	jecxz  0x401c33
  401c24:	out    dx,al
  401c25:	adc    BYTE PTR [ecx+0x2937191a],dh
  401c2b:	dec    ebx
  401c2c:	jne    0x401be2
  401c2e:	jmp    0x3401:0xc0eb1b9
  401c35:	jno    0x401ca6
  401c37:	xor    edx,ecx
  401c39:	in     al,0xeb
  401c3b:	pop    ebp
  401c3c:	or     BYTE PTR [edx],bl
  401c3e:	mov    esp,DWORD PTR [bx+si]
  401c41:	pop    esi
  401c43:	xchg   ebx,eax
  401c44:	push   ebx
  401c45:	push   edx
  401c46:	mov    eax,ds:0xcbc1db12
  401c4b:	sub    eax,0x680ea8d2
  401c50:	push   esi
  401c51:	dec    edi
  401c52:	(bad)  
  401c53:	int3   
  401c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c55:	popa   
  401c56:	and    edx,DWORD PTR [ecx-0x27]
  401c59:	shl    BYTE PTR [edi],cl
  401c5b:	push   eax
  401c5c:	xchg   ebx,eax
  401c5d:	xchg   eax,edx
  401c5f:	mov    esi,0x3bfdbd73
  401c64:	jg     0x401be9
  401c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c67:	outs   dx,BYTE PTR ds:[esi]
  401c68:	and    esp,DWORD PTR [ebp-0x5dac810a]
  401c6e:	in     eax,0xb6
  401c70:	cli    
  401c71:	hlt    
  401c72:	cli    
  401c73:	push   edi
  401c74:	sbb    ebx,DWORD PTR [esp+ebp*4]
  401c77:	mov    esi,0x45229e78
  401c7c:	(bad)
  401c80:	rcr    BYTE PTR [eax+0x30],1
  401c83:	je     0x401cdf
  401c85:	popf   
  401c86:	sar    DWORD PTR ss:[ebp-0x30],0xce
  401c8b:	xor    al,0xb5
  401c8d:	pop    esi
  401c8e:	jge    0x401cde
  401c90:	cli    
  401c91:	popf   
  401c92:	cmp    eax,0x2c86186b
  401c97:	dec    esi
  401c98:	lods   eax,DWORD PTR ds:[esi]
  401c99:	je     0x401c42
  401c9b:	call   0xacb6:0xdeef0adc
  401ca2:	cmp    al,0xb8
  401ca4:	inc    edi
  401ca5:	add    ebp,DWORD PTR [edx-0x6f]
  401ca8:	jle    0x401cab
  401caa:	ds cld 
  401cac:	nop
  401cad:	xor    cl,dl
  401caf:	jae    0x401cbb
  401cb1:	mov    esi,edi
  401cb3:	daa    
  401cb4:	dec    esi
  401cb5:	leave  
  401cb6:	iret   
  401cb7:	sbb    DWORD PTR [ecx-0x45],0xe4447c7c
  401cbe:	jmp    0xa90142ba
  401cc3:	push   ebx
  401cc4:	mov    ch,0x89
  401cc6:	sub    BYTE PTR [ebx],dl
  401cc8:	cdq    
  401cc9:	and    eax,0x4d065290
  401cce:	push   0xffffff8b
  401cd0:	popa   
  401cd1:	fist   DWORD PTR [esp+edx*4-0x58880747]
  401cd8:	je     0x401cd4
  401cda:	fisubr WORD PTR [edx]
  401cdc:	pop    eax
  401cdd:	pusha  
  401cde:	jle    0x401c7e
  401ce0:	test   eax,esi
  401ce2:	outs   dx,BYTE PTR ds:[esi]
  401ce3:	dec    esi
  401ce4:	cmp    BYTE PTR [ebx-0xa3ebde],bh
  401cea:	mov    gs,ebx
  401cec:	xchg   esp,eax
  401ced:	retf   
  401cee:	stc    
  401cef:	lods   al,BYTE PTR cs:[esi]
  401cf1:	xor    dh,bl
  401cf3:	test   BYTE PTR [esi+eiz*2+0x11],bh
  401cf7:	daa    
  401cf8:	shl    cl,1
  401cfa:	int    0x74
  401cfc:	loop   0x401cab
  401cfe:	mov    ecx,0x9bafaf29
  401d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d04:	lods   al,BYTE PTR ds:[esi]
  401d05:	cmp    dl,BYTE PTR [edi]
  401d07:	push   0x6a
  401d09:	push   cs
  401d0a:	shl    DWORD PTR [ecx+0x1d5b670],0xff
  401d11:	and    esp,DWORD PTR [edi+0x5a]
  401d14:	loop   0x401d94
  401d16:	out    0xfa,al
  401d18:	fwait
  401d19:	jne    0x401d1a
  401d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1c:	sbb    DWORD PTR [edx+0x5],0x6a7c4d53
  401d23:	scas   eax,DWORD PTR es:[edi]
  401d24:	or     eax,0x16e139a5
  401d29:	sub    eax,0x55b4cafe
  401d2e:	cmp    DWORD PTR [edx],eax
  401d30:	int    0xbe
  401d32:	adc    ebx,DWORD PTR ds:0x7b8c5471
  401d38:	mov    ebp,0xf9b8f361
  401d3d:	pop    ebx
  401d3e:	stos   DWORD PTR es:[edi],eax
  401d3f:	add    dl,ch
  401d41:	loope  0x401d85
  401d43:	add    BYTE PTR [ebp+ebx*4+0x35d76e79],0x9f
  401d4b:	cld    
  401d4c:	in     al,dx
  401d4d:	arpl   WORD PTR [ecx+0x235fbf4],si
  401d53:	push   esp
  401d54:	add    eax,0x96b82c3e
  401d59:	cmp    al,0x17
  401d5b:	inc    edi
  401d5c:	or     edi,ebx
  401d5e:	ins    DWORD PTR es:[edi],dx
  401d5f:	mov    dl,ah
  401d61:	dec    edx
  401d62:	leave  
  401d63:	and    al,0x93
  401d65:	push   esp
  401d66:	mov    esp,0x9fb299b
  401d6b:	sar    BYTE PTR [ecx-0x59],0x77
  401d6f:	shl    DWORD PTR [ebx-0x7f],cl
  401d72:	enter  0x6aad,0x8b
  401d76:	mov    ch,0xef
  401d78:	and    edi,DWORD PTR [eiz*1+0x6dde396e]
  401d7f:	pop    ds
  401d80:	push   cs
  401d81:	out    0x3a,al
  401d83:	or     bl,BYTE PTR [edi-0x595f932]
  401d89:	sahf   
  401d8a:	call   0x6f6f:0xd44573ac
  401d91:	mov    ebx,0x6d971a98
  401d96:	test   DWORD PTR [ebp-0x3d9f71c3],edi
  401d9c:	jb     0x401d62
  401d9e:	test   al,0xa9
  401da0:	mov    al,ds:0xbb82a99
  401da5:	inc    esi
  401da6:	cmp    esp,esi
  401da8:	adc    ah,BYTE PTR [esi+0x21f8d565]
  401dae:	mov    DWORD PTR [esi],0xe30b90d3
  401db4:	mov    edx,0x850586a5
  401db9:	sub    ecx,DWORD PTR [edx]
  401dbb:	shl    DWORD PTR [ebp+0x29c2203d],cl
  401dc1:	pop    edi
  401dc2:	add    DWORD PTR [edx],ebp
  401dc4:	pop    edi
  401dc5:	imul   eax,esi,0x16
  401dc8:	shl    DWORD PTR [edx+0x28],0x80
  401dcc:	mov    ecx,0x2eb70223
  401dd1:	pop    ecx
  401dd2:	mov    eax,0xdeb7359c
  401dd7:	sbb    BYTE PTR [edi],cl
  401dd9:	int    0xa1
  401ddb:	imul   edx,DWORD PTR ds:0x11a6c3d5,0x55
  401de2:	push   esp
  401de3:	imul   edx,DWORD PTR [edi],0xffffffb8
  401de6:	inc    esp
  401de7:	mov    ecx,0xd9ee8658
  401dec:	popf   
  401ded:	mov    edx,0x6b949a1f
  401df2:	push   ss
  401df3:	mov    ds:0x763f4ee8,eax
  401df8:	cmc    
  401df9:	fwait
  401dfa:	mov    ds:0xb84cab59,eax
  401dff:	out    dx,al
  401e00:	or     al,0x87
  401e02:	push   cs
  401e03:	dec    eax
  401e04:	sub    eax,DWORD PTR [esi+0x63]
  401e07:	ror    BYTE PTR [ecx],cl
  401e09:	std    
  401e0a:	out    0x56,al
  401e0c:	add    edx,esi
  401e0e:	cmp    eax,0xbe061ab7
  401e13:	xor    eax,0xc8260590
  401e18:	dec    esp
  401e19:	in     al,0xf5
  401e1b:	and    eax,0x4e8b29c3
  401e20:	rcr    al,0xf
  401e23:	pcmpgtw mm4,QWORD PTR [ebx+eiz*2-0x34ad5df5]
  401e2b:	sbb    cl,BYTE PTR [eax]
  401e2d:	pusha  
  401e2e:	(bad)  
  401e2f:	jae    0x401e31
  401e31:	in     eax,dx
  401e32:	into   
  401e33:	jno    0x401e78
  401e35:	icebp  
  401e36:	sbb    BYTE PTR [esi-0x75],ah
  401e39:	ins    BYTE PTR es:[edi],dx
  401e3a:	pop    ebx
  401e3b:	mov    edx,0x119b2a7d
  401e40:	rcl    ebx,1
  401e42:	adc    eax,0x8095b22a
  401e47:	sbb    ecx,edi
  401e49:	pop    ebp
  401e4a:	loope  0x401e38
  401e4c:	cwde   
  401e4d:	mov    ecx,0x852d92e6
  401e52:	arpl   WORD PTR [esp+eax*8-0x6],cx
  401e56:	mov    ebx,0x22946078
  401e5b:	jae    0x401e22
  401e5d:	xchg   edi,eax
  401e5e:	push   esi
  401e5f:	mov    eax,ds:0x7d3a8bad
  401e64:	icebp  
  401e65:	(bad)  
  401e66:	daa    
  401e67:	pop    eax
  401e68:	mov    eax,ds:0x32a1da5a
  401e6d:	inc    edx
  401e6e:	in     al,dx
  401e6f:	adc    edx,ecx
  401e71:	xchg   ecx,eax
  401e72:	adc    ch,dh
  401e74:	popf   
  401e75:	dec    ecx
  401e76:	and    edi,ebp
  401e78:	ins    BYTE PTR es:[edi],dx
  401e79:	dec    edi
  401e7a:	xchg   edx,eax
  401e7b:	xchg   BYTE PTR [ebx+0x1f3ff930],cl
  401e81:	fisubr WORD PTR [edx+0x58]
  401e84:	sbb    eax,0x34a5d05d
  401e89:	mov    ah,0xe
  401e8b:	sbb    eax,DWORD PTR [ecx]
  401e8d:	and    eax,0xc38a54fa
  401e92:	ficomp DWORD PTR [edx]
  401e94:	in     al,0xcf
  401e96:	push   esi
  401e97:	ins    DWORD PTR es:[edi],dx
  401e98:	dec    esi
  401e99:	aam    0xa2
  401e9b:	xchg   esp,eax
  401e9c:	repz cmp esp,DWORD PTR [ebx+0x58]
  401ea0:	or     al,0x4b
  401ea2:	jp     0x401ead
  401ea4:	mov    al,0x19
  401ea6:	ficomp DWORD PTR [edx]
  401ea8:	jmp    0xf2cc0c19
  401ead:	jle    0x401ec5
  401eaf:	push   cs
  401eb0:	xor    DWORD PTR gs:[edx+0x6dd70864],edx
  401eb7:	lods   al,BYTE PTR ds:[esi]
  401eb8:	bound  eax,QWORD PTR [edi]
  401eba:	out    0x6d,eax
  401ebc:	clc    
  401ebd:	jae    0x401f0d
  401ebf:	xchg   edi,eax
  401ec0:	or     BYTE PTR [edx-0x33],cl
  401ec3:	retf   0xe769
  401ec6:	cli    
  401ec7:	bound  ebp,QWORD PTR [eax+0xd]
  401eca:	or     BYTE PTR [edx+0x5],0x50
  401ece:	(bad)
  401ed2:	push   eax
  401ed3:	mov    eax,ds:0xbb61e0ec
  401ed8:	jnp    0x401eb7
  401eda:	mov    dh,BYTE PTR [edi-0x5a]
  401edd:	sti    
  401ede:	add    bh,BYTE PTR [edi-0x8]
  401ee1:	jg     0x401eea
  401ee3:	mov    al,ds:0xe0bdb96f
  401ee8:	mov    ch,0x7d
  401eea:	sbb    edi,DWORD PTR [esi+0x4c]
  401eed:	in     al,0x9a
  401eef:	jp     0x401f62
  401ef1:	stos   BYTE PTR es:[edi],al
  401ef2:	add    eax,0x7f739345
  401ef7:	(bad)  
  401ef8:	rcl    DWORD PTR [edi],1
  401efa:	clc    
  401efb:	paddusb mm1,QWORD PTR [esi]
  401efe:	mov    dh,BYTE PTR [esp+edx*2-0x27]
  401f02:	adc    edx,DWORD PTR [edx-0x4d7db08f]
  401f08:	pusha  
  401f09:	push   0xb2d08a71
  401f0e:	dec    ebp
  401f0f:	cld    
  401f10:	not    BYTE PTR [ebp-0x6585ceb5]
  401f16:	xor    ch,BYTE PTR [edx-0x14]
  401f19:	sbb    eax,0xe244cd1c
  401f1e:	rcl    cl,cl
  401f20:	fdivr  st,st(3)
  401f22:	(bad)  
  401f23:	rcr    BYTE PTR [ecx+0x67910be1],cl
  401f29:	arpl   WORD PTR [ebx+ebx*8-0x9c1601b],si
  401f30:	sar    bl,0x5a
  401f33:	pop    ebp
  401f34:	xor    eax,0x30e27b6e
  401f39:	lods   al,BYTE PTR ds:[esi]
  401f3a:	jae    0x401ec7
  401f3c:	jge    0x401fbc
  401f3e:	and    eax,0x1f68fa3e
  401f43:	rcr    DWORD PTR [edi+ecx*2-0x48],cl
  401f47:	lahf   
  401f48:	(bad)  
  401f4a:	sahf   
  401f4b:	mov    bl,0xc5
  401f4d:	stos   DWORD PTR es:[edi],eax
  401f4e:	stos   BYTE PTR es:[edi],al
  401f4f:	stos   BYTE PTR es:[edi],al
  401f50:	mov    edx,0x1ac191ca
  401f55:	rdtsc  
  401f57:	add    esi,DWORD PTR [ebp-0x6c80b9b9]
  401f5d:	int3   
  401f5e:	add    al,0xf2
  401f60:	dec    edx
  401f61:	pop    eax
  401f62:	fmul   DWORD PTR [edx+0x12]
  401f65:	fidivr DWORD PTR [esi+eax*1+0x265f646c]
  401f6c:	adc    eax,0x431db0bc
  401f71:	xchg   ecx,eax
  401f72:	xor    DWORD PTR [ebx-0x69],esi
  401f75:	scas   al,BYTE PTR es:[edi]
  401f76:	call   0xfc0a:0x779bb66a
  401f7d:	jnp    0x401fc4
  401f7f:	jle    0x401fea
  401f81:	leave  
  401f82:	rol    ch,cl
  401f84:	ret    
  401f85:	jne    0x401faf
  401f87:	pusha  
  401f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f89:	clc    
  401f8a:	inc    ecx
  401f8b:	mov    ah,0x80
  401f8d:	add    ebx,ebx
  401f8f:	cmp    DWORD PTR [edi-0x1c],ebx
  401f92:	adc    DWORD PTR [edx],esi
  401f94:	sub    ah,cl
  401f96:	das    
  401f97:	popf   
  401f98:	mov    WORD PTR [ebx-0x64de0f32],cs
  401f9e:	xor    edi,DWORD PTR [edx-0x4aa96ec9]
  401fa4:	xlat   BYTE PTR ds:[ebx]
  401fa5:	stos   DWORD PTR es:[edi],eax
  401fa6:	inc    eax
  401fa7:	mov    esi,0x32a3d2ed
  401fac:	iret   
  401fad:	lock xchg esi,eax
  401faf:	xchg   esp,eax
  401fb0:	inc    ecx
  401fb1:	dec    ecx
  401fb2:	jl     0x401f53
  401fb4:	lds    edi,FWORD PTR [ecx]
  401fb6:	stos   DWORD PTR es:[edi],eax
  401fb7:	mov    esi,0xc724a71b
  401fbc:	repz push 0x71
  401fbf:	fsubp  st(6),st
  401fc1:	repnz push ds
  401fc3:	add    BYTE PTR ds:0x330e06e0,ah
  401fc9:	and    DWORD PTR [esi],esi
  401fcb:	xchg   esi,ebx
  401fcd:	popf   
  401fce:	jno    0x401f60
  401fd0:	ret    
  401fd1:	jbe    0x401fef
  401fd3:	mov    ah,0x44
  401fd5:	ret    
  401fd6:	jg     0x401f98
  401fd8:	ins    BYTE PTR es:[edi],dx
  401fd9:	div    DWORD PTR [edi+0x5c9d37e5]
  401fdf:	ds dec edi
  401fe1:	dec    ebx
  401fe2:	jp     0x401fce
  401fe4:	xchg   DWORD PTR [ebx],ebp
  401fe6:	aas    
  401fe7:	push   ecx
  401fe8:	and    BYTE PTR [esi-0x6e7bbbb1],al
  401fee:	pop    edx
  401fef:	in     al,0xd2
  401ff1:	mov    al,0x33
  401ff3:	out    0x7d,al
  401ff5:	dec    esp
  401ff6:	mov    al,0x78
  401ff8:	(bad)  
  401ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ffa:	out    0xc7,al
  401ffc:	cmp    bh,dh
  401ffe:	push   cs
  401fff:	xor    bh,bl
  402001:	addr16 sub eax,0x99890025
  402007:	mov    bl,0x9f
  402009:	mov    eax,ds:0x7d452f66
  40200e:	sub    ebx,DWORD PTR [ebp-0x6b728ebf]
  402014:	sub    edi,DWORD PTR [ecx]
  402016:	jp     0x401fd9
  402018:	add    eax,0x23353df9
  40201d:	ja     0x40209d
  40201f:	cmp    DWORD PTR [edi-0x4f8a8687],esp
  402025:	push   ebx
  402026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402027:	adc    ecx,DWORD PTR [ebx+0x34]
  40202a:	dec    esi
  40202b:	mov    DWORD PTR [ebp+eax*8-0x3204da61],eax
  402032:	mov    eax,ds:0xf88133de
  402037:	dec    ecx
  402038:	cwde   
  402039:	sbb    ecx,ebx
  40203b:	test   BYTE PTR cs:[esi+ebx*8+0x5c0adc30],bh
  402043:	fild   WORD PTR [esi-0x61a2d3b6]
  402049:	call   0x6705d972
  40204e:	in     al,0xad
  402050:	cli    
  402051:	jecxz  0x402086
  402053:	jns    0x402079
  402055:	fdivrp st(5),st
  402057:	enter  0xbca2,0x37
  40205b:	ret    0x5cb0
  40205e:	push   ds
  40205f:	or     dh,ch
  402061:	inc    edx
  402062:	stos   BYTE PTR es:[edi],al
  402063:	cmp    al,0x53
  402065:	dec    ecx
  402066:	mov    esi,0x10abfa5b
  40206b:	adc    eax,0x13dd4a68
  402070:	inc    edi
  402071:	mov    esp,0x9ba0fd53
  402076:	sbb    eax,0x236026c9
  40207b:	jmp    0xb218:0x1e200061
  402082:	out    dx,al
  402083:	jl     0x40200d
  402085:	xchg   edi,eax
  402086:	sub    edi,ecx
  402088:	adc    cl,BYTE PTR [edx+0x2f]
  40208b:	push   es
  40208c:	push   esi
  40208d:	xchg   esi,eax
  40208e:	dec    esp
  40208f:	lock mov ebx,0x4e8a709d
  402095:	mov    bl,0xdf
  402097:	push   0x30d6be5c
  40209c:	js     0x402111
  40209e:	test   eax,0xca821d67
  4020a3:	mov    al,0x93
  4020a5:	sub    esi,DWORD PTR [ebp+0x406e8e0d]
  4020ab:	std    
  4020ac:	adc    eax,0xa6a10d46
  4020b1:	dec    eax
  4020b2:	sbb    al,BYTE PTR [ebx-0x5255cf6c]
  4020b8:	xor    al,0xb0
  4020ba:	call   0xeca0:0x38e6736d
  4020c1:	and    BYTE PTR [ebp-0x18],bl
  4020c4:	popa   
  4020c5:	pop    DWORD PTR [eax+eiz*8-0x5a]
  4020c9:	add    DWORD PTR [edx],ecx
  4020cb:	pop    ss
  4020cc:	inc    ebx
  4020cd:	arpl   WORD PTR [eax-0x51cc9229],si
  4020d3:	add    bl,al
  4020d5:	jne    0x4020a3
  4020d7:	dec    eax
  4020d8:	bound  esi,QWORD PTR [edx+0x59]
  4020db:	push   esi
  4020dc:	fmul   DWORD PTR [edi+0x5d021684]
  4020e2:	pop    edx
  4020e3:	pop    edi
  4020e4:	mov    edx,DWORD PTR [ebp-0x1147a753]
  4020ea:	jb     0x402114
  4020ec:	mov    eax,0xeecfdee4
  4020f1:	stos   DWORD PTR es:[edi],eax
  4020f2:	clc    
  4020f3:	les    esi,FWORD PTR [ebx]
  4020f5:	push   es
  4020f6:	push   cs
  4020f7:	jne    0x40213e
  4020f9:	jl     0x40212c
  4020fb:	(bad)  
  4020fc:	cmp    al,0x18
  4020fe:	out    dx,eax
  4020ff:	xchg   edx,eax
  402100:	dec    esp
  402101:	in     al,0x94
  402103:	cli    
  402104:	ror    BYTE PTR cs:[esi+0x66b1a01e],1
  40210b:	pop    ds
  40210c:	lods   eax,DWORD PTR ds:[esi]
  40210d:	add    al,0x7a
  40210f:	jne    0x4020bd
  402111:	and    DWORD PTR [edx+edi*2-0xf],ecx
  402115:	ins    BYTE PTR es:[edi],dx
  402116:	fsubr  DWORD PTR [edx*2-0x622a50dc]
  40211d:	lods   eax,DWORD PTR ds:[esi]
  40211e:	and    al,0x74
  402120:	or     cl,BYTE PTR [ebx]
  402122:	push   0xfffffff4
  402124:	pusha  
  402125:	jle    0x40210c
  402127:	sahf   
  402128:	fisubr DWORD PTR [esi]
  40212a:	(bad)  
  40212c:	cmc    
  40212d:	sti    
  40212e:	es cli 
  402130:	jl     0x402110
  402132:	jmp    0x9abdf46f
  402137:	cmp    esp,eax
  402139:	sbb    bh,BYTE PTR [ebp+0x46]
  40213c:	inc    esi
  40213d:	sti    
  40213e:	adc    eax,DWORD PTR [ebp+0x25cae257]
  402144:	xchg   ecx,eax
  402145:	and    ah,BYTE PTR [edx-0x505bd2d4]
  40214b:	addr16 (bad) 
  40214d:	outs   dx,DWORD PTR ds:[esi]
  40214e:	in     eax,0x7f
  402150:	push   es
  402151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402152:	push   edi
  402153:	pop    ecx
  402154:	sub    cl,dh
  402156:	mov    bh,BYTE PTR ds:[edi]
  402159:	adc    eax,0xd2e43121
  40215e:	xchg   BYTE PTR [ebp-0x38ed67fc],al
  402164:	push   eax
  402165:	cmp    BYTE PTR [edx],cl
  402167:	fiadd  DWORD PTR [ecx]
  402169:	pop    ds
  40216a:	xor    al,0x5
  40216c:	sub    al,0xb9
  40216e:	sbb    eax,0x2cc05ac2
  402173:	mov    esi,fs
  402175:	call   0x1353:0x2d6784e6
  40217c:	repnz add DWORD PTR [ebp-0x52],edx
  402180:	inc    esi
  402181:	adc    BYTE PTR [ecx],bh
  402183:	lahf   
  402184:	sahf   
  402185:	add    eax,0x9d6f4832
  40218a:	xchg   ecx,eax
  40218b:	out    0x77,eax
  40218d:	add    eax,0xb278b55d
  402192:	jg     0x4021d3
  402194:	fndisi(8087 only) 
  402196:	mov    ds:0x3f2a3ee7,al
  40219b:	or     eax,0x9d4b7ff0
  4021a0:	outs   dx,BYTE PTR ds:[esi]
  4021a1:	push   cs
  4021a2:	jecxz  0x4021bf
  4021a4:	std    
  4021a5:	call   0xa712f7a
  4021aa:	rol    BYTE PTR [ebp+0x7f],cl
  4021ad:	cmp    DWORD PTR [ecx+0x57047592],ebx
  4021b3:	xchg   ebp,eax
  4021b4:	sub    eax,0xa6400a1c
  4021b9:	sub    edi,eax
  4021bb:	test   eax,0xd9a5d730
  4021c0:	pop    ecx
  4021c1:	inc    DWORD PTR [edx]
  4021c3:	xor    al,0xe3
  4021c5:	aad    0x10
  4021c7:	pop    eax
  4021c8:	stos   DWORD PTR es:[edi],eax
  4021c9:	pop    ds
  4021ca:	jb     0x4021be
  4021cc:	sbb    bl,BYTE PTR [edx+0x5e]
  4021cf:	pusha  
  4021d0:	and    ch,BYTE PTR [ecx-0x3fa3bcca]
  4021d6:	cs sub al,0x43
  4021d9:	hlt    
  4021da:	mov    edx,0x825ecd68
  4021df:	sbb    BYTE PTR [ebp-0xc],bh
  4021e2:	fsub   DWORD PTR [ecx-0x2fbf43b7]
  4021e8:	not    edi
  4021ea:	inc    ebp
  4021eb:	push   ebp
  4021ec:	jl     0x40222a
  4021ee:	push   ds
  4021ef:	in     al,0x8d
  4021f1:	jmp    0x7db7d571
  4021f6:	fistp  DWORD PTR [eax]
  4021f8:	xor    ah,ah
  4021fa:	enter  0xca56,0x48
  4021fe:	jmp    0x15d6:0x47ba1bce
  402205:	mov    ecx,DWORD PTR [esi+0x307e607e]
  40220b:	inc    eax
  40220c:	mov    ch,0x27
  40220e:	mov    edx,?
  402210:	pop    edi
  402211:	je     0x4021bf
  402213:	mov    ebp,0x52b1e0e2
  402218:	inc    esi
  402219:	xchg   edx,eax
  40221a:	jecxz  0x40220a
  40221c:	aam    0x14
  40221e:	dec    esp
  40221f:	inc    esi
  402220:	push   ebx
  402221:	hlt    
  402222:	mov    eax,0x2d011b3e
  402227:	cmp    DWORD PTR [ecx-0x22],0x77
  40222b:	pop    ss
  40222c:	mov    WORD PTR [edx-0xe],?
  40222f:	sbb    BYTE PTR [ebx+0x3c],0x56
  402233:	shl    DWORD PTR [esi],1
  402235:	sbb    al,0xeb
  402237:	imul   DWORD PTR [edx+0x3beec6e3]
  40223d:	and    eax,0xca5c02f0
  402242:	inc    esi
  402243:	bound  ebp,QWORD PTR [eax+edi*8]
  402246:	(bad)  
  402247:	mov    WORD PTR [esi],cs
  402249:	adc    al,0x20
  40224b:	xor    dh,BYTE PTR [edx]
  40224d:	fisttp WORD PTR [esp+esi*2]
  402250:	(bad)  
  402251:	cld    
  402252:	jecxz  0x4022c4
  402254:	lods   eax,DWORD PTR ds:[esi]
  402255:	pop    ebx
  402256:	ds dec esi
  402258:	push   esp
  402259:	iret   
  40225a:	mov    bl,0x2f
  40225c:	in     eax,dx
  40225d:	(bad)  
  40225e:	pusha  
  40225f:	out    0x5c,al
  402261:	mov    edi,0x8e6d05db
  402266:	jb     0x40223a
  402268:	sar    BYTE PTR [edx+0x59d04314],cl
  40226e:	in     al,dx
  40226f:	jle    0x40224d
  402271:	add    al,0x58
  402273:	scas   eax,DWORD PTR es:[edi]
  402274:	imul   esp,DWORD PTR [eax+0x11281e8f],0xffffff95
  40227b:	cmp    BYTE PTR [esp+edi*8-0x15],al
  40227f:	outs   dx,DWORD PTR ds:[esi]
  402280:	rcl    ecx,cl
  402282:	adc    bl,BYTE PTR [eax+0x59]
  402285:	push   ecx
  402286:	push   ss
  402287:	ss (bad) 
  40228a:	adc    ecx,DWORD PTR [edi+edx*2+0x5a]
  40228e:	int3   
  40228f:	jecxz  0x402237
  402291:	xor    eax,0x4ae48081
  402296:	lahf   
  402297:	pop    eax
  402298:	sbb    BYTE PTR [ecx+0x25],dh
  40229b:	fmul   st,st(2)
  40229d:	shr    cl,cl
  40229f:	mov    edx,0x2c84aefa
  4022a4:	in     eax,dx
  4022a5:	dec    esp
  4022a6:	loop   0x402260
  4022a8:	dec    esp
  4022a9:	sbb    esp,DWORD PTR [eax+eax*8-0xa095973]
  4022b0:	jns    0x40223a
  4022b2:	in     al,0xa7
  4022b4:	push   0x8ad9ab76
  4022b9:	and    BYTE PTR [eax-0x41486c5c],ah
  4022bf:	add    DWORD PTR [ebx],0x12
  4022c2:	int    0x63
  4022c4:	mov    esp,0x45282299
  4022c9:	je     0x402252
  4022cb:	fs int 0x72
  4022ce:	arpl   WORD PTR [edi],sp
  4022d0:	gs inc eax
  4022d2:	push   ebp
  4022d3:	in     al,dx
  4022d4:	shl    BYTE PTR ds:0xa3222414,0x5a
  4022db:	ja     0x4022ba
  4022dd:	pop    ds
  4022de:	add    al,0xbb
  4022e0:	out    0x27,eax
  4022e2:	push   ss
  4022e3:	jmp    0x40228a
  4022e5:	add    eax,0x1869b88b
  4022ea:	mov    ecx,0x10294eaa
  4022ef:	in     eax,0x59
  4022f1:	push   es
  4022f2:	dec    ecx
  4022f3:	stc    
  4022f4:	(bad)  
  4022f5:	sbb    al,0x8d
  4022f7:	lods   al,BYTE PTR ds:[esi]
  4022f8:	adc    bh,ah
  4022fa:	imul   edx,DWORD PTR [esi-0x15],0x540a1ebd
  402301:	inc    esp
  402302:	cld    
  402303:	adc    eax,0x41150084
  402308:	and    edi,edx
  40230a:	stos   BYTE PTR es:[edi],al
  40230b:	xchg   edx,eax
  40230c:	fwait
  40230d:	jbe    0x402377
  40230f:	into   
  402310:	xor    al,BYTE PTR [ebp-0x7c8501e3]
  402316:	sbb    al,0x54
  402318:	int    0x50
  40231a:	lock pop esp
  40231c:	dec    edx
  40231d:	jmp    0x808874f1
  402322:	aam    0xcd
  402324:	out    dx,al
  402325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402326:	sbb    BYTE PTR [ebx+edx*2+0x217db2e8],al
  40232d:	fidiv  WORD PTR [edi]
  40232f:	loopne 0x40237e
  402331:	aad    0xc8
  402333:	fidivr DWORD PTR [ebp+0x95eaf34]
  402339:	int    0xe3
  40233b:	data16 cld 
  40233d:	or     al,0xef
  40233f:	adc    DWORD PTR [edi-0x5f978514],edi
  402345:	icebp  
  402346:	push   0xffffffe4
  402348:	jle    0x4022e6
  40234a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234b:	sub    al,0xb5
  40234d:	inc    esp
  40234e:	push   edi
  40234f:	jg     0x402318
  402351:	push   edx
  402352:	xlat   BYTE PTR ds:[ebx]
  402353:	addr16 mov edi,0x68788715
  402359:	jl     0x40231c
  40235b:	pop    esp
  40235c:	xchg   bl,al
  40235e:	or     al,BYTE PTR [ecx-0x2df79bea]
  402364:	mov    ds:0x5f1bc97c,al
  402369:	bound  edi,QWORD PTR [eax]
  40236b:	sbb    BYTE PTR [ebx+0x16937c59],bl
  402371:	(bad)  [ebx+0x5b]
  402374:	dec    ecx
  402375:	neg    BYTE PTR [edx]
  402377:	adc    BYTE PTR [esi+0x8],ch
  40237a:	cmc    
  40237b:	test   eax,0x2e8072d0
  402380:	dec    eax
  402381:	gs adc eax,0xe8ef7fb3
  402387:	pop    es
  402388:	sti    
  402389:	outs   dx,BYTE PTR ds:[esi]
  40238a:	xlat   BYTE PTR ds:[ebx]
  40238b:	mov    dl,0xcb
  40238d:	push   edx
  40238e:	addr16 pop edx
  402390:	cmp    bl,al
  402392:	push   es
  402393:	mov    ds:0x8947d4c1,eax
  402398:	xor    DWORD PTR [esi-0x3957139e],ebx
  40239e:	jnp    0x40233e
  4023a0:	dec    esp
  4023a1:	shl    dh,0x99
  4023a4:	and    BYTE PTR [eax],dh
  4023a6:	stc    
  4023a7:	ins    DWORD PTR es:[edi],dx
  4023a8:	loopne 0x4023f1
  4023aa:	mov    ah,0x68
  4023ac:	sbb    eax,0x43a3de2b
  4023b1:	loope  0x4023d1
  4023b3:	xchg   ecx,eax
  4023b4:	les    ebx,FWORD PTR [ebp+0x2dea7d1d]
  4023ba:	bound  ecx,QWORD PTR [edi+ebp*2-0x2a]
  4023be:	das    
  4023bf:	dec    ecx
  4023c0:	xchg   esp,eax
  4023c1:	inc    esi
  4023c2:	sub    dh,bh
  4023c4:	test   al,0xf1
  4023c6:	jmp    0xbe1c:0x89f4f4f8
  4023cd:	jmp    0x4023eb
  4023cf:	cmp    al,0x28
  4023d1:	adc    cl,ah
  4023d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d4:	jo     0x4023bd
  4023d6:	adc    al,0x79
  4023d8:	mov    dh,0x56
  4023da:	in     eax,0x69
  4023dc:	rcl    ecx,0x10
  4023df:	push   edx
  4023e0:	and    ch,cl
  4023e2:	mov    cl,0x48
  4023e4:	push   ds
  4023e5:	ret    0x5461
  4023e8:	mov    dh,0x1f
  4023ea:	push   ds
  4023eb:	fidivr WORD PTR [eax]
  4023ed:	dec    eax
  4023ee:	fwait
  4023ef:	cmc    
  4023f0:	mov    eax,ds:0x2fcb087
  4023f5:	pop    edx
  4023f6:	push   edx
  4023f7:	jb     0x40239e
  4023f9:	xchg   esp,eax
  4023fa:	and    eax,0x2112617f
  4023ff:	pusha  
  402400:	fs push es
  402402:	xorps  xmm7,XMMWORD PTR [eax-0x41]
  402406:	mov    ds:0xa003d4e,al
  40240b:	out    0xdc,al
  40240d:	nop
  40240e:	mov    ah,0xb9
  402410:	jae    0x402430
  402412:	push   ss
  402413:	mov    ds:0x472b6c82,eax
  402418:	lahf   
  402419:	repnz xor ecx,DWORD PTR [edi+eiz*4]
  40241d:	inc    esi
  40241e:	cmp    eax,0xce5e033b
  402423:	inc    esi
  402424:	pop    ebp
  402425:	loope  0x4024a6
  402427:	xor    ecx,DWORD PTR [esi]
  402429:	mov    ecx,esp
  40242b:	cmp    eax,0x6e0dad97
  402430:	das    
  402431:	ret    0xc431
  402434:	jmp    0xe0e3:0x9ca5f739
  40243b:	lea    eax,[esi]
  40243d:	fistp  WORD PTR [eax-0x4d]
  402440:	mov    ds:0xc70ecfaa,eax
  402445:	xor    eax,0xc49013ae
  40244a:	jno    0x4023d1
  40244c:	mov    bh,0x85
  40244e:	push   edi
  40244f:	and    eax,0xb159f133
  402454:	(bad)  
  402455:	lods   al,BYTE PTR ds:[esi]
  402456:	pop    esp
  402457:	sub    eax,0x51ddaeb
  40245c:	mov    edi,0xa64588b8
  402461:	jae    0x402436
  402463:	push   cs
  402464:	into   
  402465:	jp     0x402479
  402467:	mov    ah,0x81
  402469:	dec    edx
  40246a:	jge    0x402457
  40246c:	mov    ds:0x7ca1365,eax
  402471:	mov    cl,0x96
  402473:	dec    ecx
  402474:	gs test al,0x6a
  402477:	xor    bl,ch
  402479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40247a:	ds fwait
  40247c:	ins    DWORD PTR es:[edi],dx
  40247d:	sti    
  40247e:	cmp    ebx,ecx
  402480:	outs   dx,DWORD PTR ds:[esi]
  402481:	icebp  
  402482:	out    0xc7,al
  402484:	mov    edi,?
  402486:	std    
  402487:	pop    ebp
  402488:	fldcw  WORD PTR [edx]
  40248a:	mov    es,WORD PTR [esi]
  40248c:	ret    0xd45a
  40248f:	push   cs
  402490:	or     al,0xfa
  402492:	cmp    DWORD PTR [esi+0x6cd8d30d],eax
  402498:	je     0x40241b
  40249a:	dec    edi
  40249b:	int3   
  40249c:	push   edx
  40249d:	mov    DWORD PTR [ebx],edi
  40249f:	retf   
  4024a0:	jb     0x4024a7
  4024a2:	shr    BYTE PTR [esi+0x1b4847d2],0x33
  4024a9:	cdq    
  4024aa:	or     eax,0x29247c4
  4024af:	xor    DWORD PTR [edi+0x33ea648a],esp
  4024b5:	push   esi
  4024b6:	(bad)  
  4024b7:	in     al,0xe
  4024b9:	cld    
  4024ba:	push   ss
  4024bb:	push   esp
  4024bc:	dec    edx
  4024bd:	push   ecx
  4024be:	mov    ch,0xf2
  4024c0:	iret   
  4024c1:	jmp    0xd696:0x91979386
  4024c8:	hlt    
  4024c9:	mov    dh,0x59
  4024cb:	imul   edx,DWORD PTR [esi],0x1d08305b
  4024d1:	icebp  
  4024d2:	mov    ebx,ds
  4024d4:	lock dec esi
  4024d6:	push   edx
  4024d7:	mov    ds:0xa0d1213e,al
  4024dc:	push   ds
  4024dd:	fidiv  DWORD PTR [eax]
  4024df:	cmp    BYTE PTR ds:0x50d0691,al
  4024e5:	aas    
  4024e6:	fld    TBYTE PTR [ebx+0x1d]
  4024e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024ea:	adc    BYTE PTR ss:[ebx-0x14],dl
  4024ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024ef:	fisub  DWORD PTR [esi-0x38ede69c]
  4024f5:	inc    ecx
  4024f6:	leave  
  4024f7:	jmp    0xa96f:0x335f2967
  4024fe:	add    eax,0x193785d2
  402503:	adc    bl,cl
  402505:	sub    DWORD PTR [ecx+0x9066474],edx
  40250b:	je     0x40249b
  40250d:	pusha  
  40250e:	xchg   esi,eax
  40250f:	inc    esp
  402510:	bound  ebx,QWORD PTR [edx+0x1c]
  402513:	mov    ebp,0x35c3890d
  402518:	lea    edx,[ecx]
  40251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251b:	xor    eax,0x620e7bfa
  402520:	arpl   WORD PTR [esi+eax*8-0x22005fd],dx
  402527:	pop    edi
  402528:	adc    bh,BYTE PTR ds:0xba658e59
  40252e:	sti    
  40252f:	adc    bl,cl
  402531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402532:	shl    DWORD PTR [esi-0x2],0x54
  402536:	mov    esp,DWORD PTR [ebx]
  402538:	dec    edi
  402539:	loop   0x402538
  40253b:	xor    cl,BYTE PTR [edx-0x621a69fb]
  402541:	fcom   DWORD PTR [edi+0x17]
  402544:	int3   
  402545:	sub    eax,0x7b5353d5
  40254a:	call   0x647fcb7e
  40254f:	adc    DWORD PTR [edi+0x43b00309],0xeddca71
  402559:	pop    ebp
  40255a:	lea    edi,[edi]
  40255c:	jmp    FWORD PTR [edx-0x67746833]
  402562:	cmp    esi,ebx
  402564:	out    0xb5,eax
  402566:	fld    QWORD PTR [edx+0x1485d3a1]
  40256c:	xor    eax,0x40dc9a04
  402571:	sahf   
  402572:	pop    edx
  402573:	adc    eax,0xc73aaddf
  402578:	out    0x68,eax
  40257a:	pop    es
  40257b:	cmp    BYTE PTR [ebp+esi*4+0x4e],al
  40257f:	mov    BYTE PTR [ebp+0x6],dh
  402582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402583:	ret    0xafc3
  402586:	mov    al,ds:0x90a3af89
  40258b:	mov    dl,0x31
  40258d:	into   
  40258e:	(bad)  
  40258f:	(bad)  
  402590:	xor    eax,0x14751d70
  402595:	mov    bh,0xb5
  402597:	xchg   edi,eax
  402598:	rcl    BYTE PTR [esi+0x37],1
  40259b:	dec    edx
  40259c:	shl    ecx,1
  40259e:	call   0x36b1:0x3a8e47ad
  4025a5:	leave  
  4025a6:	add    esp,DWORD PTR [edx-0xf8c0c03]
  4025ac:	lock pop eax
  4025ae:	sub    BYTE PTR [eax-0x98cfe8d],0x9f
  4025b5:	jp     0x40262a
  4025b7:	xor    al,BYTE PTR [esp+ecx*8+0x6e]
  4025bb:	dec    ecx
  4025bc:	mov    ch,0x65
  4025be:	sub    DWORD PTR ds:0x51a1a653,edx
  4025c4:	sar    BYTE PTR [esi],0xf1
  4025c7:	sti    
  4025c8:	fwait
  4025c9:	dec    ebx
  4025ca:	cmc    
  4025cb:	push   edx
  4025cc:	ins    BYTE PTR es:[edi],dx
  4025cd:	loop   0x402625
  4025cf:	jbe    0x402647
  4025d1:	xchg   ecx,eax
  4025d2:	scas   al,BYTE PTR es:[edi]
  4025d3:	sbb    BYTE PTR [edi],bh
  4025d5:	xor    edi,DWORD PTR gs:[eax+0x49]
  4025d9:	stc    
  4025da:	int3   
  4025db:	mov    ecx,0xc8a92712
  4025e0:	repz push edx
  4025e2:	scas   eax,DWORD PTR es:[edi]
  4025e3:	pop    DWORD PTR [ecx+0x43]
  4025e6:	dec    BYTE PTR [esi]
  4025e8:	push   ss
  4025e9:	stos   DWORD PTR es:[edi],eax
  4025ea:	mov    esi,0xbe8c53f8
  4025ef:	mov    ch,0x89
  4025f1:	sub    al,0xb3
  4025f3:	or     al,0x56
  4025f5:	mov    edx,0xf91b7153
  4025fa:	ins    DWORD PTR es:[edi],dx
  4025fb:	das    
  4025fc:	cmp    al,0xbe
  4025fe:	xor    al,0x6d
  402600:	rcl    DWORD PTR [edx+eax*4+0x5e],0xb9
  402605:	xor    DWORD PTR [ecx],0x75
  402608:	ret    
  402609:	xor    DWORD PTR [ecx-0x22],0x81e9d639
  402610:	std    
  402611:	pop    edx
  402612:	dec    edx
  402613:	outs   dx,DWORD PTR ds:[esi]
  402614:	retf   0xa1ac
  402617:	pop    ecx
  402618:	jns    0x4025b3
  40261a:	sub    eax,DWORD PTR [ebx]
  40261c:	add    eax,0x744b7813
  402621:	cmp    al,0xf2
  402623:	or     eax,0xa31b24a8
  402628:	aam    0xda
  40262a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40262b:	out    0xdc,al
  40262d:	or     ch,al
  40262f:	stos   DWORD PTR es:[edi],eax
  402630:	dec    ebx
  402631:	mov    eax,0x1af92aae
  402636:	jge    0x4025d0
  402638:	(bad)  
  402639:	iret   
  40263a:	cdq    
  40263b:	imul   BYTE PTR [esi+0x40]
  40263e:	ret    
  40263f:	inc    esi
  402640:	repz test BYTE PTR [eax-0x458e6fd0],bh
  402647:	cmp    esi,DWORD PTR [eax-0x19]
  40264a:	inc    eax
  40264b:	sub    eax,0x46651b49
  402650:	jle    0x4025e5
  402652:	sbb    dh,cl
  402654:	sbb    BYTE PTR fs:[edx-0x1bef42e2],cl
  40265b:	mov    DWORD PTR [esi-0x54],0xe8211bab
  402662:	push   ebp
  402663:	dec    edi
  402664:	aaa    
  402665:	cs inc edx
  402667:	test   eax,0x43e4865e
  40266c:	icebp  
  40266d:	sbb    DWORD PTR [ebp-0x10],0xa6d37493
  402674:	test   eax,0xcb176683
  402679:	adc    eax,0x33c1da93
  40267e:	dec    eax
  40267f:	ret    
  402680:	xor    cl,BYTE PTR [edi+0x41b09836]
  402686:	push   cs
  402687:	xor    DWORD PTR [eax+eax*4-0x1c656b2a],ebx
  40268e:	dec    ecx
  40268f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402690:	cmp    dl,0x20
  402693:	push   esi
  402694:	xor    DWORD PTR [ecx],ecx
  402696:	lds    edi,FWORD PTR [eax+ecx*4]
  402699:	out    0xcd,eax
  40269b:	rcl    BYTE PTR [ecx-0x3a],1
  40269e:	stos   BYTE PTR es:[edi],al
  40269f:	mov    esp,0x5ea1cb3b
  4026a4:	push   ecx
  4026a5:	fsub   DWORD PTR [ebp-0x24fbae57]
  4026ab:	js     0x4026e2
  4026ad:	fs retf 0xb3a6
  4026b1:	out    0x89,eax
  4026b3:	scas   eax,DWORD PTR es:[edi]
  4026b4:	xor    al,0xa
  4026b6:	push   eax
  4026b7:	fwait
  4026b8:	loopne 0x4026b2
  4026ba:	std    
  4026bb:	loopne 0x402650
  4026bd:	and    dh,ch
  4026bf:	loop   0x4026bc
  4026c1:	and    eax,esi
  4026c3:	sbb    eax,0x6a5df9d8
  4026c8:	(bad)  
  4026ca:	push   esi
  4026cb:	out    dx,eax
  4026cc:	pop    ebp
  4026cd:	pop    es
  4026ce:	hlt    
  4026cf:	cmp    BYTE PTR [esi],ch
  4026d1:	sbb    BYTE PTR cs:[ebp-0x60df1132],ah
  4026d8:	(bad)  
  4026d9:	(bad)  [esi]
  4026db:	or     edi,DWORD PTR [esi]
  4026dd:	jmp    0xd878130f
  4026e2:	push   eax
  4026e3:	sbb    cl,dl
  4026e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e6:	push   esi
  4026e7:	sbb    DWORD PTR [edi],ebp
  4026e9:	es aam 0xf5
  4026ec:	xchg   edx,eax
  4026ed:	test   DWORD PTR [eax-0x2cb24693],0xcbc8202e
  4026f7:	xchg   edx,eax
  4026f8:	imul   eax,DWORD PTR [edx-0x5a],0x7652d879
  4026ff:	popa   
  402700:	test   al,0xee
  402702:	icebp  
  402703:	nop
  402704:	fidiv  DWORD PTR [edx]
  402706:	out    dx,al
  402707:	das    
  402708:	mov    edi,0xde44b8ae
  40270d:	test   BYTE PTR [esp+edx*1-0xc],dl
  402711:	pop    es
  402712:	lods   eax,DWORD PTR ds:[esi]
  402713:	sbb    DWORD PTR [ebp-0x48],esp
  402716:	mov    esp,0x7000ed08
  40271b:	dec    esp
  40271c:	adc    DWORD PTR [edx],ecx
  40271e:	push   ebx
  40271f:	outs   dx,DWORD PTR ds:[esi]
  402720:	inc    eax
  402721:	mov    fs,WORD PTR [esi-0x1a00b54a]
  402727:	xor    edi,DWORD PTR [ebx-0xf]
  40272a:	xor    esp,edi
  40272c:	popf   
  40272d:	and    eax,0xe4b4f369
  402732:	xchg   esi,eax
  402733:	adc    BYTE PTR [eax-0x10d1704],cl
  402739:	(bad)  
  40273a:	out    dx,al
  40273b:	adc    BYTE PTR [edx-0x18],cl
  40273e:	iret   
  40273f:	add    ecx,DWORD PTR [edi]
  402741:	mov    bh,bh
  402743:	cmp    BYTE PTR [ebx+0x2ca8d2c3],al
  402749:	std    
  40274a:	adc    al,0xd7
  40274c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40274d:	dec    edi
  40274e:	jne    0x4026d5
  402750:	dec    esi
  402751:	push   ss
  402752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402753:	(bad)  
  402754:	fdivr  st,st(4)
  402756:	sub    ch,cl
  402758:	cmp    eax,0xf5f82285
  40275d:	mov    ?,WORD PTR [ebp+0x459edabf]
  402763:	jnp    0x4027d4
  402765:	sbb    BYTE PTR [edi],bh
  402767:	pushf  
  402768:	dec    ecx
  402769:	mov    bh,0xc9
  40276b:	push   ebx
  40276c:	into   
  40276d:	cmp    esp,DWORD PTR [edx+0x67]
  402770:	out    0x11,eax
  402772:	push   ecx
  402773:	dec    ebp
  402774:	adc    al,0x47
  402776:	and    DWORD PTR [edx+0x47a39d39],ebp
  40277c:	(bad)  
  40277d:	dec    edx
  40277e:	int    0x24
  402780:	pusha  
  402781:	mov    ?,WORD PTR [esi]
  402783:	imul   BYTE PTR [ebx]
  402785:	pop    ss
  402786:	cld    
  402787:	(bad)  
  402788:	fstp   TBYTE PTR [edi+eax*1-0xc]
  40278c:	out    dx,al
  40278d:	sub    al,0xff
  40278f:	xchg   ebp,ebx
  402791:	cmp    dh,dh
  402793:	or     eax,0xb2b34c9e
  402798:	cmp    eax,0x6d14f50e
  40279d:	imul   ecx,DWORD PTR [edi],0x3047df70
  4027a3:	sub    DWORD PTR [ebp+ebx*8+0x69797354],ebx
  4027aa:	xchg   esp,eax
  4027ab:	add    DWORD PTR [ebx],ecx
  4027ad:	mov    ds:0x7474a7a2,eax
  4027b2:	jmp    0x402827
  4027b4:	mov    ebx,DWORD PTR [edx]
  4027b6:	push   esp
  4027b7:	lods   al,BYTE PTR ds:[esi]
  4027b8:	xchg   ebp,eax
  4027b9:	loope  0x402821
  4027bb:	or     eax,0xb9c7f85d
  4027c0:	call   0x39dd379a
  4027c5:	lods   al,BYTE PTR ds:[esi]
  4027c6:	and    ebp,ebp
  4027c8:	ret    0x4e28
  4027cb:	lods   eax,DWORD PTR ds:[esi]
  4027cc:	jge    0x40278e
  4027ce:	in     eax,dx
  4027cf:	(bad)  
  4027d0:	cmp    bl,BYTE PTR [esp+eiz*4+0x2753fd74]
  4027d7:	fmul   QWORD PTR ds:0x7b6f981b
  4027dd:	pop    edi
  4027de:	inc    esi
  4027df:	call   DWORD PTR [ebx+0x578c0b40]
  4027e5:	mov    ds:0xc01b2681,eax
  4027ea:	add    al,BYTE PTR [ecx]
  4027ec:	jge    0x402822
  4027ee:	test   eax,0x9095e105
  4027f3:	pop    es
  4027f4:	mov    ch,0x41
  4027f6:	inc    edx
  4027f7:	mov    edx,0x9bdbbbb9
  4027fc:	pop    edx
  4027fd:	repnz pop ebx
  4027ff:	xor    DWORD PTR [ebp-0x4f34e74c],ebp
  402805:	(bad)  
  402806:	neg    ebp
  402808:	fwait
  402809:	sub    ebp,DWORD PTR [ecx]
  40280b:	pop    ebx
  40280c:	rcl    BYTE PTR [esi+0x19],0xe8
  402810:	scas   eax,DWORD PTR es:[edi]
  402811:	dec    esi
  402812:	clc    
  402813:	push   ebp
  402814:	xor    bl,BYTE PTR [ebx-0x65530bcc]
  40281a:	xchg   ebp,eax
  40281b:	mov    eax,0x4e1346b6
  402820:	fbld   TBYTE PTR [edx+ebp*4+0x581e3372]
  402827:	je     0x40287b
  402829:	out    dx,al
  40282a:	stos   DWORD PTR es:[edi],eax
  40282b:	sbb    DWORD PTR [ecx-0x7ec7cac5],edi
  402831:	ret    
  402832:	jg     0x4027d3
  402834:	retf   
  402835:	scas   al,BYTE PTR es:[edi]
  402836:	or     BYTE PTR cs:[edx],bh
  402839:	dec    eax
  40283a:	les    ecx,FWORD PTR [ebx]
  40283c:	adc    bl,cl
  40283e:	inc    edi
  40283f:	mov    ah,0xfb
  402841:	(bad)  
  402842:	jmp    0x402850
  402844:	inc    edi
  402845:	inc    esi
  402846:	mov    dh,0x8b
  402848:	test   BYTE PTR [ecx+0x29],cl
  40284b:	mov    eax,0x9692180d
  402850:	test   eax,0x8ab384d4
  402855:	xchg   esp,eax
  402856:	lods   al,BYTE PTR ds:[esi]
  402857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402858:	ror    BYTE PTR [ebp-0x4d],0x88
  40285c:	hlt    
  40285d:	jecxz  0x4028b6
  40285f:	sbb    esp,eax
  402861:	mov    ebp,0xcafd0034
  402866:	adc    DWORD PTR [edi+0x6],eax
  402869:	xchg   ebx,eax
  40286a:	loope  0x4028a7
  40286c:	xchg   BYTE PTR [edi],bl
  40286e:	(bad)  
  40286f:	(bad)  
  402870:	and    BYTE PTR [eax-0x5728a905],cl
  402876:	clc    
  402877:	fucom  st(1)
  402879:	mov    DWORD PTR [edi],ebp
  40287b:	pop    ebx
  40287c:	cmp    al,0xa6
  40287e:	or     ecx,DWORD PTR [ecx+0x99c5fa3]
  402884:	or     al,BYTE PTR [ecx-0x5bd5219e]
  40288a:	jge    0x4028dc
  40288c:	not    DWORD PTR [esi+ecx*4-0x5a3d6cde]
  402893:	fcomp  DWORD PTR [ecx]
  402895:	retf   
  402896:	aad    0xe8
  402898:	test   BYTE PTR [ebp+0x70],bl
  40289b:	mov    dl,0xff
  40289d:	daa    
  40289e:	fmulp  st(2),st
  4028a0:	push   ds
  4028a1:	xor    ah,BYTE PTR [ebx]
  4028a3:	xlat   BYTE PTR ds:[ebx]
  4028a4:	jns    0x402893
  4028a6:	cmp    cl,BYTE PTR [ecx]
  4028a8:	ficom  DWORD PTR [esi+0x9db508]
  4028ae:	adc    al,0xb1
  4028b0:	mov    al,0xe7
  4028b2:	ja     0x4028b1
  4028b4:	sub    al,0x79
  4028b6:	push   cs
  4028b7:	jp     0x402880
  4028b9:	fucompp 
  4028bb:	retf   0xdb53
  4028be:	sbb    al,0x8c
  4028c0:	adc    ch,BYTE PTR [edx+0x1f]
  4028c3:	sub    al,0x5a
  4028c5:	xor    ebp,DWORD PTR ds:0x9e57ea90
  4028cb:	iret   
  4028cc:	add    al,0xe5
  4028ce:	adc    DWORD PTR [ebp+eax*1-0x6f874710],ecx
  4028d5:	mov    ebp,0x8c7743d4
  4028da:	or     edi,ecx
  4028dc:	aas    
  4028dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028de:	jle    0x4028c7
  4028e0:	jae    0x402868
  4028e2:	and    eax,0x7c832645
  4028e7:	test   eax,0x1c51dd68
  4028ec:	mov    BYTE PTR [esi-0x378964c5],dh
  4028f2:	adc    al,0x41
  4028f4:	arpl   WORD PTR [ecx+edi*4+0x3],ax
  4028f8:	xchg   edi,eax
  4028f9:	repnz cwde 
  4028fb:	push   esi
  4028fc:	lods   al,BYTE PTR ds:[esi]
  4028fd:	lea    edx,ds:0x4f8f891f
  402903:	pop    eax
  402904:	jge    0x402906
  402906:	ret    0xf8cf
  402909:	and    DWORD PTR [esi],ecx
  40290b:	mov    dl,0xd0
  40290d:	adc    DWORD PTR [esi-0x3398727c],eax
  402913:	je     0x40295e
  402915:	xor    al,0x91
  402917:	data16 repz out 0x8a,al
  40291b:	ffree  st(1)
  40291d:	cmp    ah,BYTE PTR [esp+eiz*4+0x1bd92736]
  402924:	xor    eax,0x331871a1
  402929:	pop    ss
  40292a:	jmp    0x402913
  40292c:	cld    
  40292d:	push   ss
  40292e:	mov    dl,0x5
  402930:	leave  
  402931:	cwde   
  402932:	push   ebp
  402933:	es jl  0x4028e7
  402936:	ss retf 0x9bf8
  40293a:	sbb    eax,0xca881a2
  40293f:	push   ecx
  402940:	and    DWORD PTR [ecx],ecx
  402942:	pop    eax
  402943:	push   esi
  402944:	pop    ecx
  402945:	rcr    ah,0x6d
  402948:	dec    BYTE PTR [edx-0x7a]
  40294b:	in     al,dx
  40294c:	xor    eax,ecx
  40294e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40294f:	loop   0x402976
  402951:	xor    DWORD PTR [ebx+0x2779725a],0x6d221c0b
  40295b:	mov    ah,0x83
  40295d:	cpuid  
  40295f:	iret   
  402960:	and    DWORD PTR [eax],edx
  402962:	fstp   DWORD PTR gs:0x9cca6a2
  402969:	in     al,dx
  40296a:	loopne 0x402942
  40296c:	mov    ebx,0xa904ed18
  402971:	dec    eax
  402972:	dec    ecx
  402973:	sbb    DWORD PTR [eax],esp
  402975:	jb     0x402917
  402977:	push   es
  402978:	adc    eax,0xaca67ca1
  40297d:	int    0xa8
  40297f:	ins    DWORD PTR es:[edi],dx
  402980:	es aaa 
  402982:	loop   0x4029d6
  402984:	test   DWORD PTR [esi+0x3e808b69],0x7f3565ff
  40298e:	aas    
  40298f:	xchg   edi,eax
  402990:	push   eax
  402991:	and    eax,0x6ca07519
  402996:	inc    ebp
  402997:	adc    eax,0x12273c86
  40299c:	test   esi,ebx
  40299e:	xchg   edi,eax
  40299f:	scas   eax,DWORD PTR es:[edi]
  4029a0:	mov    eax,0x29ddfb59
  4029a5:	repz jno 0x40296b
  4029a8:	mov    DWORD PTR [edx],ebp
  4029aa:	stos   DWORD PTR es:[edi],eax
  4029ab:	out    0x70,eax
  4029ad:	imul   ebx,DWORD PTR [ebx+0x14a2cff8],0xd
  4029b4:	lods   eax,DWORD PTR ds:[esi]
  4029b5:	mov    esi,DWORD PTR [eax]
  4029b7:	add    ch,BYTE PTR [edx-0x36]
  4029ba:	retf   0xcb5
  4029bd:	shl    ch,0x83
  4029c0:	jb     0x4029ee
  4029c2:	jne    0x40298c
  4029c4:	jecxz  0x40299a
  4029c6:	leave  
  4029c7:	cld    
  4029c8:	cli    
  4029c9:	sbb    bh,dh
  4029cb:	cmp    esp,DWORD PTR [edi-0x60c847c9]
  4029d1:	pop    esi
  4029d2:	add    DWORD PTR [ebp-0x2f298094],edx
  4029d8:	push   esi
  4029d9:	push   esi
  4029da:	repz jge 0x402a17
  4029dd:	and    eax,0x918eaf61
  4029e2:	out    dx,al
  4029e3:	sti    
  4029e4:	je     0x402a4b
  4029e6:	imul   esi,DWORD PTR [ebx+edi*4+0x25],0x3ba79e23
  4029ee:	inc    esp
  4029ef:	xchg   esp,eax
  4029f0:	cmp    BYTE PTR [ecx+0x6],bh
  4029f3:	xchg   ebp,eax
  4029f4:	push   ecx
  4029f5:	loopne 0x402995
  4029f7:	mov    esi,0x38744c69
  4029fc:	les    ebp,FWORD PTR [ecx-0x5d]
  4029ff:	jmp    0xd9cd:0x48495f6b
  402a06:	and    BYTE PTR [esi-0x76],0x9d
  402a0a:	xchg   BYTE PTR [ecx+0xc],bl
  402a0d:	and    esi,DWORD PTR [ebp-0x22]
  402a10:	inc    edi
  402a11:	fild   WORD PTR [edi]
  402a13:	inc    edi
  402a14:	mov    al,ds:0x7a4d3af1
  402a19:	jle    0x4029c9
  402a1b:	(bad)  
  402a1c:	jmp    0x8f88d401
  402a21:	jno    0x4029b7
  402a23:	adc    eax,0xc9880501
  402a28:	mov    esi,0x54018122
  402a2d:	xchg   edx,eax
  402a2e:	or     al,0x1b
  402a31:	sbb    DWORD PTR [edi+0x53],esp
  402a34:	or     al,0x48
  402a36:	cdq    
  402a37:	ss sti 
  402a39:	data16 mov dh,0xd
  402a3c:	in     al,0xca
  402a3e:	mov    cl,0xac
  402a40:	in     al,0x3
  402a42:	hlt    
  402a43:	std    
  402a44:	dec    eax
  402a45:	lock adc al,0x17
  402a48:	fwait
  402a49:	cmp    eax,0x90341e6d
  402a4e:	ja     0x402a92
  402a50:	push   DWORD PTR [eax-0x5b]
  402a53:	mul    BYTE PTR [edx+eiz*4+0x647a526e]
  402a5a:	adc    BYTE PTR ss:0x388210cc,bl
  402a61:	jo     0x402a99
  402a63:	pop    es
  402a64:	mov    edi,0xb2a165d
  402a69:	fs jnp 0x402ac1
  402a6c:	into   
  402a6d:	loopne 0x402ade
  402a6f:	cmp    al,0x78
  402a71:	mov    ecx,0x3f6fd17a
  402a76:	or     BYTE PTR [eax-0x9],bh
  402a79:	or     bh,BYTE PTR [ecx-0x62d4f762]
  402a7f:	pop    ecx
  402a80:	mov    dh,0xd
  402a82:	or     DWORD PTR [ebp+0x6a06eb05],esi
  402a88:	call   0x4ed9:0xebd8380e
  402a8f:	pop    ebp
  402a90:	sbb    al,0x55
  402a92:	cmp    DWORD PTR [edi],ecx
  402a94:	outs   dx,DWORD PTR ds:[esi]
  402a95:	shl    DWORD PTR [ebx-0x59bf7ed8],0x4a
  402a9c:	int3   
  402a9d:	adc    al,0x86
  402a9f:	add    esi,DWORD PTR [eax]
  402aa1:	rep ins BYTE PTR es:[edi],dx
  402aa3:	clc    
  402aa4:	push   ebp
  402aa5:	pop    ebp
  402aa6:	fisttp QWORD PTR [ebp-0x81f1f4e]
  402aac:	(bad)  
  402aad:	mov    dl,bh
  402aaf:	and    BYTE PTR [eax],0x15
  402ab2:	jmp    0xbf71:0xdbb46a75
  402ab9:	sbb    ch,al
  402abb:	cli    
  402abc:	pushf  
  402abd:	jne    0x402acd
  402abf:	fst    DWORD PTR [edx-0x17]
  402ac2:	lea    edx,[ecx+0x23ecb7d3]
  402ac8:	cld    
  402ac9:	add    BYTE PTR [esi-0x4e9060e0],dh
  402acf:	leave  
  402ad0:	sub    DWORD PTR [ecx+0x73b4000b],esi
  402ad6:	out    0x0,al
  402ad8:	js     0x402b0b
  402ada:	rdpmc  
  402adc:	lock or BYTE PTR [ebp-0x2a95585a],bh
  402ae3:	and    BYTE PTR [bx+di-0xa09],cl
  402ae8:	iret   
  402ae9:	retf   0x7c76
  402aec:	shl    esi,cl
  402aee:	or     dh,ah
  402af0:	mov    ebx,DWORD PTR [edx-0x6c]
  402af3:	rsm    
  402af5:	aam    0xde
  402af7:	inc    ebp
  402af8:	cmp    eax,0x3897681c
  402afd:	xor    eax,0xe2a384f3
  402b02:	push   0xffffffcf
  402b04:	rcl    BYTE PTR [ebx+0xe8a3a92],1
  402b0a:	dec    esi
  402b0b:	sub    eax,esp
  402b0d:	xor    dh,BYTE PTR [ebx-0x722ce789]
  402b13:	adc    DWORD PTR [ebx+0x2c],esi
  402b16:	and    bh,bl
  402b18:	dec    eax
  402b19:	inc    ebx
  402b1a:	into   
  402b1b:	in     al,0x7c
  402b1d:	test   DWORD PTR [esi+edx*4-0xa],edi
  402b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b22:	fiadd  DWORD PTR [ebx+0x2703a05e]
  402b28:	sub    eax,ebp
  402b2a:	or     DWORD PTR [edx+0x56],0x4b2eef70
  402b31:	loope  0x402b8b
  402b33:	inc    ebp
  402b34:	xor    eax,0xb3603dd8
  402b39:	inc    esi
  402b3a:	aad    0xb0
  402b3c:	add    bh,BYTE PTR [ebx]
  402b3e:	add    al,0x8d
  402b40:	jle    0x402b77
  402b42:	sub    al,0x7f
  402b44:	mov    dl,0xe2
  402b46:	sbb    esp,0x72e9f4fc
  402b4c:	jmp    0x1f3bc57f
  402b51:	stc    
  402b52:	repz js 0x402ae7
  402b55:	clc    
  402b56:	jl     0x402b0f
  402b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b59:	pusha  
  402b5a:	scas   al,BYTE PTR es:[edi]
  402b5b:	in     al,dx
  402b5c:	xor    BYTE PTR [ebx-0x2d68bc21],ah
  402b62:	cmp    esi,esp
  402b64:	and    ecx,DWORD PTR ds:0x2f9e2ac9
  402b6a:	stc    
  402b6b:	cmp    al,0xcc
  402b6d:	ds inc esp
  402b6f:	cmp    eax,0x196911da
  402b74:	sub    ah,BYTE PTR [ebx-0x6f]
  402b77:	loop   0x402b4b
  402b79:	pop    esp
  402b7a:	mov    ch,0x4
  402b7c:	aas    
  402b7d:	xchg   ch,cl
  402b7f:	or     esp,DWORD PTR [esi+eax*2]
  402b82:	mov    edi,DWORD PTR [eax]
  402b84:	lods   eax,DWORD PTR ds:[esi]
  402b85:	or     DWORD PTR [eax+0x4c],esi
  402b88:	push   ebp
  402b89:	pop    ss
  402b8a:	pop    ebx
  402b8b:	jo     0x402b43
  402b8d:	inc    edx
  402b8e:	mov    BYTE PTR [edx+0x25ffc5ed],ch
  402b94:	inc    esp
  402b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b96:	mov    dh,0xd1
  402b98:	addr16 out dx,al
  402b9a:	dec    esi
  402b9b:	sbb    DWORD PTR [edi-0x63],0xe6b51cfc
  402ba2:	xchg   esi,eax
  402ba3:	adc    eax,0x8bb82d6c
  402ba8:	imul   ebp,DWORD PTR [edx+0x694b8a7d],0x22e0fd91
  402bb2:	test   eax,0x4ad272d
  402bb7:	and    BYTE PTR [edx+0x41],dh
  402bba:	xchg   ebp,eax
  402bbb:	dec    ecx
  402bbc:	or     ah,dh
  402bbe:	mov    eax,ds:0xef36f9c8
  402bc3:	or     eax,0x57ba9eec
  402bc8:	test   eax,0xaccd2ee3
  402bcd:	pop    edi
  402bce:	jbe    0x402bdb
  402bd0:	cmp    ecx,DWORD PTR [edx+0x60]
  402bd3:	mov    ebp,edx
  402bd5:	jmp    0x5956:0xa5a5a33c
  402bdc:	cmp    al,0x7a
  402bde:	or     eax,0x523de0ae
  402be3:	repz dec edi
  402be5:	loope  0x402bb5
  402be7:	stc    
  402be8:	ss dec esp
  402bea:	cmc    
  402beb:	jae    0x402b85
  402bed:	cld    
  402bee:	mov    cl,0x1
  402bf0:	icebp  
  402bf1:	push   ecx
  402bf2:	(bad)  
  402bf3:	sbb    BYTE PTR [ebx],bh
  402bf5:	push   ss
  402bf6:	iret   
  402bf7:	add    ebp,DWORD PTR [edx-0x3d9aee1]
  402bfd:	pop    ebp
  402bfe:	mov    DWORD PTR [ebp+0x6e6e67a1],eax
  402c04:	sbb    eax,0x64ffc126
  402c09:	mov    ecx,0x56c49c0e
  402c0e:	mov    eax,0xb1e94123
  402c13:	sub    DWORD PTR [ebx],edx
  402c15:	pop    ebx
  402c16:	push   edi
  402c17:	cmp    esi,esp
  402c19:	test   eax,0xa1b2551f
  402c1e:	mov    al,0x79
  402c20:	mov    esi,0xcb1f486a
  402c25:	inc    ecx
  402c26:	das    
  402c27:	test   BYTE PTR [ebp+ebp*8+0x3d2b90a6],ah
  402c2e:	enter  0x504b,0x8e
  402c32:	push   ss
  402c33:	mov    ebx,0x1366b523
  402c38:	jb     0x402c5f
  402c3a:	mov    WORD PTR [esi+0x26],ds
  402c3d:	jb     0x402c91
  402c3f:	pop    esp
  402c40:	jnp    0x402c2a
  402c42:	mov    al,ds:0xc18257fd
  402c47:	xchg   ecx,eax
  402c48:	jmp    0x3e5d:0x3d7273e1
  402c4f:	lahf   
  402c50:	sub    al,ch
  402c52:	in     eax,dx
  402c53:	sub    bl,bl
  402c55:	or     al,0xce
  402c57:	test   cl,bh
  402c59:	inc    ebp
  402c5a:	out    0x37,eax
  402c5c:	(bad)  
  402c5e:	push   0x73
  402c60:	and    esi,DWORD PTR ds:0xfa0a98f1
  402c66:	dec    edi
  402c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c68:	(bad)  
  402c69:	fmul   QWORD PTR [ebp+edi*1+0x4f24ddfb]
  402c70:	outs   dx,BYTE PTR ds:[esi]
  402c71:	stos   DWORD PTR es:[edi],eax
  402c72:	pop    esp
  402c73:	sbb    ebp,DWORD PTR [ebx+edx*1+0x7a5fa66a]
  402c7a:	inc    ebp
  402c7b:	rcl    BYTE PTR es:[edx+eiz*1+0x175d7244],1
  402c83:	into   
  402c84:	mov    ebp,DWORD PTR [esi+0x64155fc2]
  402c8a:	xchg   esp,eax
  402c8b:	ins    BYTE PTR es:[edi],dx
  402c8c:	jo     0x402cd4
  402c8e:	lods   eax,DWORD PTR ds:[esi]
  402c8f:	fwait
  402c90:	bound  edi,QWORD PTR [edi+edx*8]
  402c93:	pop    esp
  402c94:	xor    DWORD PTR [edx-0x568f98c3],0x3f80e23d
  402c9e:	dec    ecx
  402c9f:	mov    edx,0x7b266d6
  402ca4:	pop    ebx
  402ca5:	int3   
  402ca6:	adc    DWORD PTR [ebx-0x4543a556],eax
  402cac:	cmp    cl,BYTE PTR [esi+0x24]
  402caf:	es pop ebp
  402cb1:	xchg   esp,eax
  402cb2:	in     eax,0xf0
  402cb4:	xchg   ebp,eax
  402cb5:	add    ecx,0x70
  402cb8:	or     DWORD PTR [bp+si+0x6a21],0x6c
  402cbe:	pop    ebp
  402cbf:	(bad)  
  402cc0:	popa   
  402cc1:	lods   eax,DWORD PTR ds:[esi]
  402cc2:	push   ebx
  402cc3:	sbb    BYTE PTR [ecx+0x4c],bl
  402cc6:	lahf   
  402cc7:	add    eax,0x22ec270c
  402ccc:	(bad)  
  402ccd:	out    0xb2,eax
  402ccf:	loopne 0x402d45
  402cd1:	pop    eax
  402cd2:	aas    
  402cd3:	sbb    dh,BYTE PTR [edi-0x559dcb2a]
  402cd9:	cmp    al,0xec
  402cdb:	push   ss
  402cdc:	push   esp
  402cdd:	call   0xad3bfb67
  402ce2:	mov    ebp,0x6c6151f2
  402ce7:	adc    esp,DWORD PTR [esi-0x65c184fe]
  402ced:	xor    cl,0x53
  402cf0:	pop    eax
  402cf1:	mov    esp,0xf996ad12
  402cf6:	jns    0x402ce9
  402cf8:	pushf  
  402cf9:	stc    
  402cfa:	loop   0x402d03
  402cfc:	inc    ebp
  402cfd:	dec    ebp
  402cfe:	and    esp,ebp
  402d00:	jae    0x402d27
  402d02:	test   DWORD PTR [ebx+0x30171e9e],edx
  402d08:	mov    edi,0xeda65e39
  402d0d:	(bad)  
  402d0e:	setno  BYTE PTR [ecx-0x4a]
  402d12:	inc    ebp
  402d13:	ds cmp al,0xe
  402d16:	adc    eax,0xedc1f6b1
  402d1b:	hlt    
  402d1c:	arpl   WORD PTR [esi],si
  402d1e:	push   cs
  402d1f:	push   eax
  402d20:	mov    bl,0xfb
  402d22:	xor    DWORD PTR [ebx+ecx*2+0x68],ebp
  402d26:	pop    ebx
  402d27:	test   BYTE PTR gs:[ebp-0x15],bh
  402d2b:	mov    eax,0x98d5fb59
  402d30:	pop    es
  402d31:	clc    
  402d32:	cmp    al,0xdf
  402d34:	aas    
  402d35:	in     eax,dx
  402d36:	cmp    ch,BYTE PTR [ebp-0x6d]
  402d39:	mov    BYTE PTR [ebx-0x59],cl
  402d3c:	enter  0xffbb,0x31
  402d40:	jns    0x402d47
  402d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d43:	mov    ah,0xe1
  402d45:	cmp    eax,0xee115d8
  402d4a:	cwde   
  402d4b:	shr    esp,1
  402d4d:	adc    al,0x3f
  402d4f:	call   0xdb7b:0xf754e996
  402d56:	sbb    al,0x66
  402d58:	test   al,0x78
  402d5a:	add    BYTE PTR [edi+0x23],ch
  402d5d:	xor    BYTE PTR [esi+edx*4],ah
  402d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d61:	jnp    0x402d26
  402d63:	fbstp  TBYTE PTR [esi+ebx*1+0x6bc81660]
  402d6a:	rcr    DWORD PTR [esi],0xa9
  402d6d:	outs   dx,DWORD PTR ds:[esi]
  402d6e:	call   0xd99ea0ae
  402d73:	repnz scas eax,DWORD PTR es:[edi]
  402d75:	push   esi
  402d76:	fst    QWORD PTR [eax]
  402d78:	sbb    esp,esp
  402d7a:	jmp    0x7adb93df
  402d7f:	dec    esp
  402d80:	sbb    edx,esi
  402d82:	and    ebp,DWORD PTR [esi]
  402d84:	mov    dl,0xa0
  402d86:	(bad)  
  402d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d88:	push   es
  402d89:	imul   ebx,DWORD PTR [esp+ebx*4-0x67],0x73930ad9
  402d91:	mov    bl,al
  402d93:	jb     0x402d97
  402d95:	rol    dh,1
  402d97:	das    
  402d98:	or     cl,BYTE PTR [edi-0x37]
  402d9b:	sar    DWORD PTR ds:0x4b0b358e,cl
  402da1:	shl    DWORD PTR [edx-0x466dd726],1
  402da7:	push   ecx
  402da8:	xor    BYTE PTR [edi+0x45ab14cd],dh
  402dae:	xchg   BYTE PTR [ebx-0x72],al
  402db1:	fild   DWORD PTR [ebp-0x22b00f48]
  402db7:	leave  
  402db8:	and    BYTE PTR [ebp+0x8396290],0x5a
  402dbf:	loope  0x402d93
  402dc1:	test   al,0x63
  402dc3:	xchg   ebp,eax
  402dc4:	loopne 0x402d78
  402dc6:	mov    ebp,0x8f8bca57
  402dcb:	push   ecx
  402dcc:	mov    bl,0x35
  402dce:	adc    eax,0xf1a29ac6
  402dd3:	sti    
  402dd4:	pop    ds
  402dd5:	mov    esi,0xc07ad56b
  402dda:	std    
  402ddb:	das    
  402ddc:	mov    eax,ds:0x4d555a3b
  402de1:	mov    WORD PTR [esp+ebx*1-0xf],ss
  402de5:	adc    edi,0xc
  402de8:	mov    bh,0xcd
  402dea:	lea    eax,[ebx-0x5db0811e]
  402df0:	cmc    
  402df1:	mov    eax,0xf39c8a7d
  402df6:	xchg   esp,eax
  402df7:	fwait
  402df8:	loopne 0x402d82
  402dfa:	nop
  402dfb:	xor    DWORD PTR [ecx-0x41],ecx
  402dfe:	and    BYTE PTR [ebx],0x43
  402e01:	or     eax,0xa6976c94
  402e06:	or     bh,BYTE PTR [ecx-0x6a]
  402e09:	jno    0x402dbb
  402e0b:	cdq    
  402e0c:	loopne 0x402e55
  402e0e:	sub    ebx,esp
  402e10:	add    DWORD PTR [ebp-0x2463b63b],ebp
  402e16:	cmp    al,0x5d
  402e18:	test   BYTE PTR [ebp+0x533e166f],0xda
  402e1f:	mov    esp,eax
  402e21:	mov    bh,0x9d
  402e23:	sub    ebp,DWORD PTR [ebp-0x2d068550]
  402e29:	into   
  402e2a:	push   0x20
  402e2c:	push   ss
  402e2d:	mov    eax,0xc872fd98
  402e32:	or     bh,BYTE PTR [edx+ebx*2]
  402e35:	scas   eax,DWORD PTR es:[edi]
  402e36:	cmc    
  402e37:	sbb    ch,BYTE PTR [esi+ebx*4]
  402e3a:	(bad)  
  402e3b:	mov    eax,0x9c8eecbf
  402e40:	mov    es,esi
  402e42:	jmp    0x60bf:0xa2d62eb1
  402e49:	loope  0x402df4
  402e4b:	push   0xffffffdd
  402e4d:	or     BYTE PTR [ebp+0x3e],al
  402e50:	mov    esi,0x92506cdd
  402e55:	scas   al,BYTE PTR es:[edi]
  402e56:	dec    eax
  402e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e58:	add    BYTE PTR [eax+edi*4+0x31d95297],dl
  402e5f:	fcmovne st,st(2)
  402e61:	inc    esp
  402e62:	jmp    0xc1cfaf92
  402e67:	add    bl,BYTE PTR [edx+ebx*4+0x31dc2ccc]
  402e6e:	aas    
  402e6f:	call   0x53e6ab0c
  402e74:	jns    0x402df7
  402e76:	ins    BYTE PTR es:[edi],dx
  402e77:	call   0xcb07:0x850eef4c
  402e7e:	cdq    
  402e7f:	in     eax,dx
  402e80:	scas   eax,DWORD PTR es:[edi]
  402e81:	mov    dh,0x4e
  402e83:	dec    eax
  402e84:	or     ah,BYTE PTR ds:0xc8c6af03
  402e8a:	bound  edi,QWORD PTR [edi-0x1597bf92]
  402e90:	stos   DWORD PTR es:[edi],eax
  402e91:	mov    DWORD PTR [ebx],edx
  402e93:	data16 test al,0x7c
  402e96:	ror    BYTE PTR [ebp+edx*4-0x1e233fd7],cl
  402e9d:	stos   BYTE PTR es:[edi],al
  402e9e:	(bad)  
  402e9f:	cli    
  402ea0:	mov    al,ds:0x81868f31
  402ea5:	call   0xd502eea8
  402eaa:	dec    ebx
  402eab:	add    al,0x7f
  402ead:	mov    dh,BYTE PTR [edx]
  402eaf:	sahf   
  402eb0:	fadd   QWORD PTR [ebx+0x8]
  402eb3:	test   BYTE PTR [esi+0x34605e64],ah
  402eb9:	inc    esp
  402eba:	sub    DWORD PTR [ebx+0x22],esp
  402ebd:	pop    esi
  402ebe:	mov    ch,0x17
  402ec0:	pop    ebx
  402ec1:	popa   
  402ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ec3:	mov    eax,ds:0xa0478c6
  402ec8:	xchg   ebx,eax
  402ec9:	fidivr WORD PTR [ecx]
  402ecb:	out    dx,eax
  402ecc:	mov    ds:0x87073d11,al
  402ed1:	and    al,0x9a
  402ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed4:	pop    ss
  402ed5:	mov    ds:0x3cdc63a2,al
  402eda:	ffreep st(4)
  402edc:	sub    eax,DWORD PTR [eax+eiz*2-0x33]
  402ee0:	(bad)  
  402ee1:	aas    
  402ee2:	cmc    
  402ee3:	int    0xb0
  402ee5:	push   cs
  402ee6:	jbe    0x402f66
  402ee8:	in     al,dx
  402ee9:	cdq    
  402eea:	pushf  
  402eeb:	push   esp
  402eec:	fbld   TBYTE PTR [edi+0x6e3c9fce]
  402ef2:	jecxz  0x402f69
  402ef4:	addr16 cld 
  402ef6:	loop   0x402e79
  402ef8:	lods   al,BYTE PTR ds:[esi]
  402ef9:	push   esp
  402efa:	cmp    al,0x7d
  402efc:	add    BYTE PTR [eax+0x27],dl
  402eff:	aad    0xef
  402f01:	out    dx,eax
  402f02:	call   0xfeeb4fc1
  402f07:	inc    edx
  402f08:	dec    edx
  402f09:	xor    ebp,DWORD PTR [esi]
  402f0b:	daa    
  402f0c:	pop    esp
  402f0d:	and    esp,DWORD PTR [edi-0x62b2a71e]
  402f13:	mov    eax,0x3b8f6483
  402f18:	ins    BYTE PTR es:[edi],dx
  402f19:	xor    eax,0x696f82b
  402f1e:	sbb    BYTE PTR [esi+ecx*2+0x71],ah
  402f22:	jo     0x402f76
  402f24:	dec    eax
  402f25:	sub    DWORD PTR ds:0x5a4103bb,ecx
  402f2b:	adc    DWORD PTR [edi+0x6b97206b],eax
  402f31:	outs   dx,BYTE PTR ds:[esi]
  402f32:	in     al,dx
  402f33:	jae    0x402f37
  402f35:	iret   
  402f36:	sbb    al,0x31
  402f38:	cwde   
  402f39:	pop    ebp
  402f3a:	sbb    esp,edi
  402f3c:	pop    edx
  402f3d:	pop    ecx
  402f3e:	cmp    BYTE PTR [eax],al
  402f40:	(bad)  
  402f41:	push   ebp
  402f42:	push   edi
  402f43:	jg     0x402f09
  402f45:	imul   edi,DWORD PTR [ecx+0x51c6615a],0xffffffae
  402f4c:	ins    BYTE PTR es:[edi],dx
  402f4d:	add    al,0xf0
  402f4f:	out    0xe2,eax
  402f51:	imul   edx,DWORD PTR [eax-0x46018c74],0xbbe50fb6
  402f5b:	sub    bl,dl
  402f5d:	icebp  
  402f5e:	inc    ebx
  402f5f:	fild   DWORD PTR [edi+0x6751acbd]
  402f65:	mov    esp,0x7e5942cb
  402f6a:	push   0xc
  402f6c:	ret    
  402f6d:	add    DWORD PTR [ebx+0x62bf4f2a],ebx
  402f73:	push   cs
  402f74:	add    edi,DWORD PTR [eax]
  402f76:	test   DWORD PTR [ebp+0x19],ecx
  402f79:	jnp    0x402f37
  402f7b:	adc    edx,esp
  402f7d:	xchg   esp,eax
  402f7e:	gs jns 0x402fd5
  402f81:	dec    ecx
  402f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f83:	sahf   
  402f84:	dec    ebx
  402f85:	aas    
  402f86:	mov    esp,0x34a5f8c7
  402f8b:	scas   eax,DWORD PTR es:[edi]
  402f8c:	mov    edi,0x3ad16b4b
  402f91:	xchg   ebp,eax
  402f92:	mov    esp,0x357d8e48
  402f97:	dec    eax
  402f98:	push   esp
  402f99:	ins    DWORD PTR es:[edi],dx
  402f9a:	cmp    cl,BYTE PTR [ebp+0x7c2ac8a5]
  402fa0:	ins    DWORD PTR es:[edi],dx
  402fa1:	cmp    al,0x52
  402fa3:	int    0xd4
  402fa5:	scas   eax,DWORD PTR es:[edi]
  402fa6:	pop    esi
  402fa7:	inc    ebx
  402fa8:	into   
  402fa9:	mov    ebx,ebp
  402fab:	addr16 inc esi
  402fad:	repz sub BYTE PTR [esp+ebp*1-0x3e],al
  402fb2:	xchg   ebx,eax
  402fb3:	xor    eax,0xea2fc93f
  402fb8:	lds    ebp,FWORD PTR [ecx]
  402fba:	retfw  0xf221
  402fbe:	mov    WORD PTR [eax],cs
  402fc0:	cmp    dl,dl
  402fc2:	js     0x40301e
  402fc4:	xchg   edx,eax
  402fc5:	lods   eax,DWORD PTR ds:[esi]
  402fc6:	pushf  
  402fc7:	add    eax,0xb90ffbd8
  402fcc:	xchg   edx,eax
  402fcd:	leavew 
  402fcf:	stc    
  402fd0:	jno    0x402fb7
  402fd2:	fstp   TBYTE PTR [esi-0x72]
  402fd5:	dec    esp
  402fd6:	retf   0xb97a
  402fd9:	nop
  402fda:	rcl    BYTE PTR [edx],0xc6
  402fdd:	mov    esi,DWORD PTR [ebx-0x585e5164]
  402fe3:	pop    esp
  402fe4:	mov    al,0xdd
  402fe6:	add    edi,DWORD PTR [edi-0x73]
  402fe9:	retf   0xefcd
  402fec:	popa   
  402fed:	cwde   
  402fee:	(bad)  
  402fef:	stos   DWORD PTR es:[edi],eax
  402ff0:	fistp  DWORD PTR [ebx+0x2b]
  402ff3:	sahf   
  402ff4:	xor    eax,0x6db1dc18
  402ff9:	push   ds
  402ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ffb:	aaa    
  402ffc:	inc    esi
  402ffd:	outs   dx,DWORD PTR ds:[esi]
  402ffe:	jmp    0x407b:0x13659b2a
  403005:	add    BYTE PTR [eax+0x5c],0xac
  403009:	sahf   
  40300a:	jnp    0x403074
  40300c:	fdivr  DWORD PTR ds:0xe36c5661
  403012:	dec    ebx
  403013:	push   0xffffffe3
  403015:	in     eax,dx
  403016:	pop    ss
  403017:	inc    esi
  403018:	pushf  
  403019:	pop    ebx
  40301a:	push   ebp
  40301b:	cmp    eax,0xc29abec2
  403020:	mov    dh,0x4e
  403022:	adc    DWORD PTR [ebp-0x4430b3c2],ebx
  403028:	dec    ebp
  403029:	xchg   esp,eax
  40302a:	jne    0x402fe2
  40302c:	pop    ss
  40302d:	adc    eax,0xbad844f2
  403032:	sbb    eax,0x62cabe4
  403037:	pop    ds
  403038:	imul   ebp,eax,0x0
  40303b:	mov    ebp,0xa57f91fc
  403040:	adc    esp,DWORD PTR [ecx-0x2d]
  403043:	mov    esi,gs
  403045:	xor    BYTE PTR [ebp-0x23013e9d],0x94
  40304c:	fsubr  QWORD PTR [edi+0x10b4bd23]
  403052:	je     0x403037
  403054:	ret    
  403055:	aam    0xd6
  403057:	std    
  403058:	or     edi,DWORD PTR [esi]
  40305a:	pop    edx
  40305b:	sub    edi,ebp
  40305d:	xchg   BYTE PTR [ebp-0x36],dl
  403060:	sbb    edi,DWORD PTR [ebp+0x161efed5]
  403066:	jmp    0xd6a40900
  40306b:	repnz cmp DWORD PTR [ebx],edx
  40306e:	ret    0x82ee
  403071:	mov    edx,edx
  403073:	lds    esp,FWORD PTR [edx]
  403075:	xchg   ebp,eax
  403076:	inc    ebx
  403077:	scas   al,BYTE PTR es:[edi]
  403078:	jae    0x403019
  40307a:	pop    ebp
  40307b:	stos   BYTE PTR es:[edi],al
  40307c:	js     0x403093
  40307e:	adc    DWORD PTR [ecx-0x2e26d8ae],edx
  403084:	cs mov edx,0xde7891e2
  40308a:	pusha  
  40308b:	addr16 cdq 
  40308d:	sbb    BYTE PTR [ecx-0x2b],al
  403090:	icebp  
  403091:	leave  
  403092:	mov    bh,0x99
  403094:	add    eax,0xc3f1d770
  403099:	and    BYTE PTR ds:0xea5c2cb,cl
  40309f:	fcomi  st,st(0)
  4030a1:	mov    ch,0x2d
  4030a3:	pop    ds
  4030a4:	cs jg  0x40309c
  4030a7:	out    dx,al
  4030a8:	gs dec edx
  4030aa:	sti    
  4030ab:	retf   
  4030ac:	jne    0x403112
  4030ae:	sub    eax,edi
  4030b0:	inc    edi
  4030b1:	and    eax,0xc142b2c7
  4030b6:	(bad)  
  4030b7:	fimul  DWORD PTR [ecx-0x131d3429]
  4030bd:	jl     0x403075
  4030bf:	and    DWORD PTR [edi],edi
  4030c1:	jl     0x403110
  4030c3:	lds    eax,FWORD PTR [edi]
  4030c5:	outs   dx,BYTE PTR ds:[esi]
  4030c6:	sub    dh,ch
  4030c8:	in     eax,dx
  4030c9:	nop
  4030ca:	xchg   ecx,eax
  4030cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030cc:	push   eax
  4030cd:	js     0x403069
  4030cf:	stc    
  4030d0:	dec    ebp
  4030d1:	inc    ebp
  4030d2:	and    DWORD PTR [eax+ebp*1],edx
  4030d5:	pop    ebx
  4030d6:	and    dl,BYTE PTR [ebx]
  4030d8:	push   eax
  4030d9:	pop    esi
  4030da:	cmp    BYTE PTR [edi+0x5],0xf6
  4030de:	dec    esi
  4030df:	lods   al,BYTE PTR ds:[esi]
  4030e0:	cmp    DWORD PTR [ebp-0x7f],esi
  4030e3:	or     al,0x65
  4030e5:	xchg   ebx,eax
  4030e6:	xchg   edi,eax
  4030e7:	nop
  4030e8:	sahf   
  4030e9:	mov    cl,0xa2
  4030eb:	fisttp WORD PTR [ecx]
  4030ed:	(bad)  
  4030ee:	cmc    
  4030ef:	(bad)  
  4030f0:	ds hlt 
  4030f2:	adc    esp,eax
  4030f4:	push   ds
  4030f5:	ret    0x9ded
  4030f8:	dec    ecx
  4030f9:	out    0x61,eax
  4030fb:	sub    DWORD PTR [ebx+0x55d5b83e],0xffffffcc
  403102:	hlt    
  403103:	(bad)
  403107:	sbb    cl,BYTE PTR [esi-0x5deb7216]
  40310d:	mov    dl,0xb8
  40310f:	inc    esi
  403110:	jl     0x403155
  403112:	nop
  403113:	repz mov edx,DWORD PTR [esi]
  403116:	mov    DWORD PTR [ebx+eiz*2],edx
  403119:	(bad)  
  40311b:	cmp    BYTE PTR [ebx],0x3e
  40311e:	icebp  
  40311f:	mov    bh,0x70
  403121:	leave  
  403122:	fldenv [ebx+0x5893bc3b]
  403128:	fs mov dl,0x16
  40312b:	mov    esi,0xb4476393
  403130:	pop    es
  403131:	rcl    DWORD PTR [ecx+0x35210cf6],1
  403137:	(bad)  
  403138:	inc    edi
  403139:	icebp  
  40313a:	jnp    0x403103
  40313c:	into   
  40313d:	xchg   edi,eax
  40313e:	imul   ebp,DWORD PTR [edi],0xffffff8e
  403141:	lods   eax,DWORD PTR ds:[esi]
  403142:	push   edi
  403143:	(bad)  
  403144:	ja     0x403102
  403146:	cmp    eax,0xae67ada1
  40314b:	inc    esp
  40314c:	ins    DWORD PTR es:[edi],dx
  40314d:	test   eax,0xc72e231f
  403152:	ret    
  403153:	dec    edx
  403154:	enter  0xa130,0xa1
  403158:	fnstcw WORD PTR [ebp-0x537ae5a1]
  40315e:	retf   0xa833
  403161:	pop    ebp
  403162:	sub    al,0x81
  403164:	sub    al,0x31
  403166:	fwait
  403167:	in     eax,dx
  403168:	repnz loope 0x403134
  40316b:	mov    cl,0x58
  40316d:	or     al,0x53
  40316f:	mov    ebx,0xc18132d2
  403174:	jbe    0x4031bc
  403176:	push   esp
  403177:	out    0xf4,al
  403179:	mov    al,BYTE PTR [ebp-0x68]
  40317c:	mov    ebp,0x2d7b79a8
  403181:	mov    al,BYTE PTR [ebp+0x64]
  403184:	ret    
  403185:	cmp    eax,0x61b4e089
  40318a:	inc    edx
  40318b:	pop    ebx
  40318c:	dec    edi
  40318d:	call   0xfca3:0x561135dd
  403194:	dec    ecx
  403195:	mov    eax,0x20397a88
  40319a:	aad    0x49
  40319c:	repz pop es
  40319e:	or     esi,DWORD PTR [edi-0x51]
  4031a1:	pop    esp
  4031a2:	add    eax,0xe29b5bc4
  4031a7:	adc    bl,BYTE PTR [ebx]
  4031a9:	pop    ebp
  4031aa:	ins    DWORD PTR es:[edi],dx
  4031ab:	mov    eax,DWORD PTR [ecx-0x4857920d]
  4031b1:	mov    DWORD PTR [esi+ebp*2],ebp
  4031b4:	xchg   DWORD PTR [ecx],ecx
  4031b6:	test   DWORD PTR [ebx+0x27d58d7a],ebp
  4031bc:	gs loopne 0x4031e4
  4031bf:	dec    edx
  4031c0:	cwde   
  4031c1:	push   ecx
  4031c2:	or     edi,DWORD PTR [esi]
  4031c4:	fdiv   DWORD PTR [edi]
  4031c6:	mov    esi,0x6a76594a
  4031cb:	push   edx
  4031cc:	scas   al,BYTE PTR es:[edi]
  4031cd:	push   0xfffffff3
  4031cf:	pop    edx
  4031d0:	fwait
  4031d1:	jno    0x4031af
  4031d3:	rcl    DWORD PTR [edx],1
  4031d5:	add    eax,ebp
  4031d7:	int    0x17
  4031d9:	add    esp,DWORD PTR [esi]
  4031db:	idiv   ah
  4031dd:	sbb    DWORD PTR [ecx-0x2e],ebp
  4031e0:	mov    ebx,0x5c463a88
  4031e5:	icebp  
  4031e6:	test   edx,0xa6708faf
  4031ec:	rol    ebx,0x8c
  4031ef:	xchg   esp,eax
  4031f0:	not    DWORD PTR ds:0xd4d8e52d
  4031f6:	stc    
  4031f7:	fisttp QWORD PTR [edi+0x28125319]
  4031fd:	and    BYTE PTR [ecx+0x62],dl
  403200:	fcomp  DWORD PTR [edi+0x2]
  403203:	fidiv  WORD PTR [esi]
  403205:	lea    esi,[esi]
  403207:	cmp    eax,0xb2a2ad3a
  40320c:	scas   al,BYTE PTR es:[edi]
  40320d:	xor    BYTE PTR [edi+0x78214657],bl
  403213:	jns    0x403262
  403215:	in     eax,0x8a
  403217:	sbb    dh,BYTE PTR [ecx+0x47]
  40321a:	fs push ecx
  40321c:	out    0xcb,al
  40321e:	dec    edx
  40321f:	mov    bl,0xbc
  403221:	mov    ebx,0x366d5ca1
  403226:	mov    bh,0x80
  403228:	or     DWORD PTR ds:0x386e73de,ecx
  40322e:	jno    0x403250
  403230:	add    DWORD PTR [edx+0x57],edx
  403233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403234:	not    DWORD PTR [eax]
  403236:	xchg   esp,eax
  403237:	mov    es,WORD PTR [ebp-0x1b]
  40323a:	inc    esi
  40323b:	jge    0x4032a1
  40323d:	mov    al,0xa9
  40323f:	cmp    eax,0x505e122d
  403244:	jne    0x403299
  403246:	mov    ebp,0x76ab5804
  40324b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40324c:	sahf   
  40324d:	popf   
  40324e:	pusha  
  40324f:	xchg   edx,eax
  403250:	and    ecx,DWORD PTR [edx-0x5e]
  403253:	in     al,0x25
  403255:	ror    BYTE PTR [esi+eax*4],0x69
  403259:	dec    ebx
  40325a:	fs ins BYTE PTR es:[edi],dx
  40325c:	mov    edi,ebx
  40325e:	ffreep st(0)
  403260:	sbb    eax,0xa54d3e9d
  403265:	mov    ?,WORD PTR ds:0xadad110
  40326b:	pop    edx
  40326c:	rcl    BYTE PTR [edx+edi*4],cl
  40326f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403271:	jmp    0x5c5f:0x2b7d1276
  403278:	adc    edi,DWORD PTR [eax-0x1a6a9515]
  40327e:	in     al,0x4f
  403280:	mov    ecx,0xad7e2c02
  403285:	dec    esi
  403286:	in     eax,0x80
  403288:	scas   eax,DWORD PTR es:[edi]
  403289:	jb     0x403235
  40328b:	or     bl,BYTE PTR [ecx-0x7c]
  40328e:	dec    eax
  40328f:	shl    DWORD PTR [edx+0x54],cl
  403292:	test   esi,eax
  403294:	or     al,0x2d
  403296:	stos   DWORD PTR es:[edi],eax
  403297:	xor    edx,ebx
  403299:	pop    ss
  40329a:	fisub  WORD PTR [edx-0x31bfa36e]
  4032a0:	test   al,0x58
  4032a2:	and    BYTE PTR [ebx],al
  4032a4:	shl    BYTE PTR [ebx],0x7a
  4032a7:	adc    BYTE PTR [edi+0xc],0x90
  4032ab:	dec    edx
  4032ac:	jg     0x403274
  4032ae:	pop    ecx
  4032af:	lods   eax,DWORD PTR ds:[esi]
  4032b0:	mov    eax,0xd944f06c
  4032b5:	sub    ah,BYTE PTR [ebp-0x27bb96a4]
  4032bb:	inc    ebp
  4032bc:	cmp    al,0x3
  4032be:	xchg   edx,eax
  4032bf:	fwait
  4032c0:	rol    DWORD PTR [eax],1
  4032c2:	lods   eax,DWORD PTR ds:[esi]
  4032c3:	cld    
  4032c4:	inc    edi
  4032c5:	jecxz  0x403337
  4032c7:	data16 fs aad 0x82
  4032cb:	scas   eax,DWORD PTR es:[edi]
  4032cc:	mov    edx,0xe910026c
  4032d1:	std    
  4032d2:	nop
  4032d3:	mov    dl,0x2b
  4032d5:	jnp    0x4032fe
  4032d7:	mov    bl,0xf8
  4032d9:	das    
  4032da:	inc    ebp
  4032db:	push   ss
  4032dc:	mov    bh,0x36
  4032de:	scas   eax,DWORD PTR es:[edi]
  4032df:	push   ebp
  4032e0:	not    DWORD PTR [esi]
  4032e2:	jge    0x40330f
  4032e4:	mov    dl,BYTE PTR [ebp+0xb43af45]
  4032ea:	fidiv  DWORD PTR [edi+0x7744c41b]
  4032f0:	aaa    
  4032f1:	dec    edi
  4032f2:	dec    ebx
  4032f3:	pop    edx
  4032f4:	out    dx,al
  4032f5:	adc    WORD PTR [ebx+0x7a],bp
  4032f9:	enter  0x5718,0xc2
  4032fd:	pop    edx
  4032fe:	test   DWORD PTR [ebx+0x11],edi
  403301:	xchg   edi,eax
  403302:	sbb    cl,BYTE PTR [edi+esi*4]
  403305:	sub    al,BYTE PTR [esi-0x58]
  403308:	in     eax,dx
  403309:	mov    cl,bl
  40330b:	out    dx,eax
  40330c:	ins    DWORD PTR es:[edi],dx
  40330d:	or     DWORD PTR [esp+edi*2],0xda00ccb4
  403314:	das    
  403315:	xchg   ecx,eax
  403316:	retf   0xf00d
  403319:	aam    0xbc
  40331b:	nop
  40331c:	sti    
  40331d:	and    BYTE PTR [ebx+edi*1-0x72],ah
  403321:	push   0xffffffba
  403323:	lahf   
  403324:	enter  0x5819,0xeb
  403328:	ror    BYTE PTR ds:0xcd5545eb,1
  40332e:	jae    0x403340
  403330:	xchg   dh,ah
  403332:	mov    bh,0xf1
  403334:	test   al,0xe2
  403336:	mov    ss,WORD PTR [ebx-0x3a]
  403339:	pop    edi
  40333a:	add    DWORD PTR [ecx-0x2f1d090b],0x2e815382
  403344:	xchg   esp,eax
  403345:	mov    eax,ds:0x7b520fb3
  40334a:	jp     0x4033a5
  40334c:	mov    cl,0x5b
  40334e:	mov    ah,ch
  403350:	sahf   
  403351:	mov    cs,ecx
  403353:	(bad)
  403356:	sub    al,0x60
  403358:	jmp    0x8baa0995
  40335d:	jnp    0x4033d3
  40335f:	clc    
  403360:	cmp    al,0x31
  403362:	jno    0x403342
  403364:	js     0x4032f5
  403366:	or     BYTE PTR [eax-0x6a],0x35
  40336a:	push   ds
  40336b:	add    eax,0xddc8b5f1
  403370:	lea    edx,[eax]
  403372:	call   0x41eb428b
  403377:	add    BYTE PTR [ecx+0xfeafdce],0x53
  40337e:	mov    DWORD PTR [ebx+0x3],ebx
  403381:	ror    DWORD PTR [eax+0x17729277],cl
  403387:	inc    edi
  403388:	adc    cl,bl
  40338a:	add    al,0x96
  40338c:	xchg   ebx,eax
  40338d:	add    eax,eax
  40338f:	lods   eax,DWORD PTR ds:[esi]
  403390:	cmp    ch,BYTE PTR [eax+eiz*2+0x5ee8fa49]
  403397:	in     eax,dx
  403398:	xor    al,0xaa
  40339a:	fabs   
  40339c:	mov    ds:0x4583e4cd,al
  4033a1:	xor    BYTE PTR [esi],dl
  4033a3:	pop    es
  4033a4:	jb     0x4033b1
  4033a6:	xchg   ebp,eax
  4033a7:	dec    esi
  4033a8:	xchg   ebx,eax
  4033a9:	jg     0x40337d
  4033ab:	mov    ebx,0xa5408ef2
  4033b0:	push   0x37789e6
  4033b5:	sbb    BYTE PTR [edx+eax*8-0x4b],0x78
  4033ba:	dec    esi
  4033bb:	je     0x40339a
  4033bd:	retf   
  4033be:	out    0x21,eax
  4033c0:	mov    dh,0x68
  4033c2:	adc    eax,0xcc64f0b0
  4033c7:	push   eax
  4033c8:	push   ebx
  4033c9:	ja     0x403431
  4033cb:	cmp    DWORD PTR [eax],esi
  4033cd:	mov    ebp,0xe14e9f2c
  4033d2:	inc    eax
  4033d3:	adc    al,0xf7
  4033d5:	fst    QWORD PTR [edi+0x13]
  4033d8:	imul   eax,DWORD PTR [ecx-0x11744257],0xffffffd7
  4033df:	js     0x403420
  4033e1:	pop    edi
  4033e2:	and    BYTE PTR [edx+0x2a],ch
  4033e5:	jg     0x4033d0
  4033e7:	push   es
  4033e8:	xchg   esp,eax
  4033e9:	push   ds
  4033ea:	fstp   TBYTE PTR [ebx+0x49]
  4033ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ee:	pop    ecx
  4033ef:	adc    al,0x3f
  4033f1:	sub    DWORD PTR [edi],ecx
  4033f3:	mov    dh,bh
  4033f5:	or     DWORD PTR [edi+0x49],edx
  4033f8:	jmp    0x3e07:0x4e8181aa
  4033ff:	repz mov cl,0x55
  403402:	xchg   edx,eax
  403403:	sahf   
  403404:	stos   BYTE PTR es:[edi],al
  403405:	int3   
  403406:	jge    0x40342b
  403408:	scas   al,BYTE PTR es:[edi]
  403409:	dec    ecx
  40340a:	mov    ch,0xeb
  40340c:	xchg   edx,eax
  40340d:	jmp    0x21cb:0x2f27ded3
  403414:	and    al,0xd2
  403416:	xor    al,0x26
  403418:	in     eax,dx
  403419:	or     BYTE PTR [ecx+eiz*4-0x1c3ca60c],cl
  403420:	push   ebp
  403421:	push   ebp
  403422:	(bad)  
  403423:	popa   
  403424:	mov    ebp,0x5c899a45
  403429:	test   BYTE PTR [esi+0x48],al
  40342c:	adc    ebx,DWORD PTR [edi-0x45]
  40342f:	repnz movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403432:	jle    0x4033de
  403434:	je     0x40347a
  403436:	loope  0x40347e
  403438:	je     0x4033cb
  40343a:	xchg   edi,eax
  40343b:	push   0xffffffd4
  40343d:	xchg   ebp,eax
  40343e:	in     al,0x37
  403440:	daa    
  403441:	and    ecx,DWORD PTR [ebp-0x30bff5c4]
  403447:	cmp    BYTE PTR [ebp+0x2550234e],cl
  40344d:	push   ebx
  40344e:	mov    WORD PTR [ecx-0x2e],ds
  403451:	iret   
  403452:	mov    esp,0xde485646
  403457:	nop
  403458:	stos   DWORD PTR es:[edi],eax
  403459:	cmc    
  40345a:	jge    0x403498
  40345c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40345e:	cmp    al,0x8d
  403460:	aad    0x43
  403462:	(bad)  
  403463:	clc    
  403464:	stos   DWORD PTR es:[edi],eax
  403465:	mov    al,BYTE PTR [esi+0x11]
  403468:	or     eax,0x1bdf99eb
  40346d:	inc    esi
  40346e:	xchg   esp,eax
  40346f:	fmul   QWORD PTR [eax+0x406563b5]
  403475:	stos   DWORD PTR es:[edi],eax
  403476:	cmp    BYTE PTR [eax-0x32061ef2],dl
  40347c:	adc    cl,BYTE PTR [edx+0x1c]
  40347f:	push   cs
  403480:	or     edx,ebp
  403482:	pop    ebx
  403483:	jp     0x403417
  403485:	pop    ebx
  403486:	psubd  mm6,QWORD PTR [eax+0x45]
  40348a:	dec    ch
  40348c:	pop    ecx
  40348d:	pusha  
  40348e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40348f:	inc    esp
  403490:	inc    esi
  403491:	lods   al,BYTE PTR ds:[esi]
  403492:	out    0x35,al
  403494:	sahf   
  403495:	pop    esi
  403496:	fstp   DWORD PTR [ebp+0xa]
  403499:	in     eax,dx
  40349a:	jb     0x4034dd
  40349c:	sar    BYTE PTR [ebx-0x5b],0x31
  4034a0:	ds aad 0x32
  4034a3:	jp     0x403488
  4034a5:	fist   DWORD PTR [ecx-0x33]
  4034a8:	iret   
  4034a9:	push   es
  4034aa:	inc    edx
  4034ab:	js     0x4034d2
  4034ad:	pop    ss
  4034ae:	imul   edi,DWORD PTR [esi+0x25],0x7a
  4034b2:	fist   DWORD PTR [ecx+0x7a689c4b]
  4034b8:	(bad)  
  4034b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ba:	std    
  4034bb:	sub    eax,0xd6423440
  4034c0:	cmc    
  4034c1:	ins    DWORD PTR es:[edi],dx
  4034c2:	in     eax,0xc7
  4034c4:	arpl   dx,dx
  4034c6:	lds    esi,FWORD PTR [esi]
  4034c8:	clc    
  4034c9:	cmp    eax,0xec1eaf42
  4034ce:	add    ebx,DWORD PTR [eax-0x3a426c0e]
  4034d4:	and    eax,0x8cea5c3
  4034d9:	ror    al,1
  4034db:	arpl   WORD PTR [edi+eiz*1+0x5d237e63],sp
  4034e2:	in     al,0xbe
  4034e4:	clc    
  4034e5:	push   edi
  4034e6:	adc    al,0x16
  4034e8:	xchg   ebp,eax
  4034e9:	dec    ecx
  4034ea:	cli    
  4034eb:	dec    ebp
  4034ec:	xor    ch,bl
  4034ee:	and    DWORD PTR [edi-0x18418cb8],0xbfc4cf0e
  4034f8:	mov    esi,0x677fb6ed
  4034fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034fe:	arpl   WORD PTR ss:[ebp-0x488c138b],cx
  403505:	push   esp
  403506:	dec    DWORD PTR [ecx+0x2a22406d]
  40350c:	add    DWORD PTR [ecx+0x1f],ebp
  40350f:	int3   
  403510:	dec    edx
  403511:	scas   al,BYTE PTR es:[edi]
  403512:	ds mov ecx,0x1deaa134
  403518:	(bad)  
  403519:	fld    DWORD PTR [esi]
  40351b:	fdivr  QWORD PTR [ebx+0x3ba0e9e4]
  403521:	sub    eax,0x11ceabaf
  403526:	lea    ebp,[edx-0x28bed1ad]
  40352c:	imul   edi,DWORD PTR [ebp-0x36095575],0x83778e3
  403536:	js     0x4035b0
  403538:	sbb    eax,0x50da2009
  40353d:	imul   ecx,ecx,0x15
  403540:	or     al,0x8b
  403542:	in     al,0xcc
  403544:	enter  0xa5e0,0x46
  403548:	repnz or eax,DWORD PTR [eax]
  40354b:	test   eax,0x395f3549
  403550:	push   edi
  403551:	les    eax,FWORD PTR [ecx-0x624e8d9c]
  403557:	addr16 ffreep st(5)
  40355a:	es pop eax
  40355c:	out    0x11,eax
  40355e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355f:	mov    esp,0xd9177798
  403564:	loop   0x403569
  403566:	stos   BYTE PTR es:[edi],al
  403567:	push   ss
  403568:	or     al,BYTE PTR [ebx]
  40356a:	aad    0x9f
  40356c:	jmp    0x92b0:0x3d7783d3
  403573:	daa    
  403574:	(bad)  
  403575:	rcr    ch,1
  403577:	in     al,0xe3
  403579:	inc    esp
  40357a:	adc    BYTE PTR [ecx],ah
  40357c:	hlt    
  40357d:	xor    eax,DWORD PTR [edx+0x6cdf3c52]
  403583:	jmp    0x403588
  403585:	imul   ebx,DWORD PTR [ecx-0x7d],0xdae10e55
  40358c:	mov    ch,bh
  40358e:	pop    ebp
  40358f:	xor    eax,0x38bf13f2
  403594:	aas    
  403595:	push   0x4
  403597:	pop    ecx
  403598:	and    DWORD PTR ds:0x428e5d,0x744e
  4035a2:	sub    ecx,eax
  4035a4:	and    DWORD PTR ds:0x428e5d,0x0
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x429305
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x429309
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429bf5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0xe130752
  403d86:	xlat   BYTE PTR ds:[ebx]
  403d87:	sub    DWORD PTR [ebp-0x4a848462],esi
  403d8d:	sahf   
  403d8e:	jnp    0x403e0b
  403d90:	adc    al,0xde
  403d92:	fcomp  st(2)
  403d94:	rol    eax,1
  403d96:	mov    dl,0xfd
  403d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d99:	fimul  WORD PTR [ebx-0x74]
  403d9c:	shr    DWORD PTR [ecx+0x17dbf611],0xb5
  403da3:	nop
  403da4:	jnp    0x403d49
  403da6:	(bad)  
  403da7:	fld    DWORD PTR [edx]
  403da9:	sbb    eax,0xa8aa7eae
  403dae:	ins    DWORD PTR es:[edi],dx
  403daf:	test   eax,0xb5cf2e41
  403db4:	stos   BYTE PTR es:[edi],al
  403db5:	test   al,0x7f
  403db7:	out    0x7e,al
  403db9:	stc    
  403dba:	mov    BYTE PTR [ebp+eax*4-0xd4841cc],bl
  403dc1:	dec    edx
  403dc2:	loope  0x403e34
  403dc4:	loopne 0x403e12
  403dc6:	jmp    0xff07:0xd92e8b9e
  403dcd:	dec    edx
  403dce:	mov    edx,DWORD PTR ds:0xd5637ad8
  403dd4:	cld    
  403dd5:	jnp    0x403dab
  403dd7:	and    BYTE PTR [edi],0x6d
  403dda:	loope  0x403e2a
  403ddc:	sbb    dh,BYTE PTR [edi+ebx*2]
  403ddf:	and    ecx,DWORD PTR [edi-0x196c1838]
  403de5:	scas   al,BYTE PTR es:[edi]
  403de6:	mov    edx,0x18248745
  403deb:	inc    ecx
  403dec:	sar    BYTE PTR [ebp+0x54eaaccf],cl
  403df2:	aam    0x74
  403df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df5:	das    
  403df6:	push   edx
  403df7:	fimul  WORD PTR [eax]
  403df9:	inc    BYTE PTR [eax]
  403dfb:	xlat   BYTE PTR ds:[ebx]
  403dfc:	sti    
  403dfd:	ret    0xa42b
  403e00:	mov    edi,0xa1ab8852
  403e05:	pop    ebx
  403e06:	mov    ebx,0x47235b6
  403e0b:	add    ecx,ecx
  403e0d:	jbe    0x403e58
  403e0f:	enter  0x420d,0x79
  403e13:	nop
  403e14:	xor    cl,cl
  403e16:	or     BYTE PTR [edi],ch
  403e18:	(bad)  
  403e19:	(bad)  
  403e1a:	out    dx,eax
  403e1b:	retf   
  403e1c:	xchg   ecx,eax
  403e1d:	or     al,0x4e
  403e1f:	pop    ds
  403e20:	in     al,dx
  403e21:	jmp    0x403dff
  403e23:	sbb    DWORD PTR [ecx+eax*8],esi
  403e26:	adc    al,0x51
  403e28:	cli    
  403e29:	and    esp,DWORD PTR [ebp-0x80]
  403e2c:	popf   
  403e2d:	popa   
  403e2e:	adc    BYTE PTR [ebx],dl
  403e30:	pop    esp
  403e31:	pusha  
  403e32:	lds    ebp,FWORD PTR [eax+0x5a]
  403e35:	mov    bl,0x1d
  403e37:	jae    0x403e09
  403e39:	gs loope 0x403e98
  403e3c:	pop    ebx
  403e3d:	inc    eax
  403e3e:	test   eax,0x63a85a19
  403e43:	inc    esi
  403e44:	mov    esi,0x56ac639b
  403e49:	fnstsw WORD PTR [edi]
  403e4b:	sub    edi,ecx
  403e4d:	rcl    DWORD PTR [edi-0x4d4c8b06],1
  403e53:	push   ss
  403e54:	mov    ds:0xc62c698,eax
  403e59:	sub    bh,BYTE PTR [edx+eax*4-0x7852a75b]
  403e60:	mov    ebp,0x624bc0f0
  403e65:	push   0x707d881d
  403e6a:	cld    
  403e6b:	scas   eax,DWORD PTR es:[edi]
  403e6c:	inc    eax
  403e6d:	fcom   st(5)
  403e6f:	icebp  
  403e70:	out    dx,al
  403e71:	pop    ss
  403e72:	fcmovne st,st(3)
  403e74:	mov    dl,0xf3
  403e76:	pop    ebp
  403e77:	clc    
  403e78:	push   edx
  403e79:	or     ebx,DWORD PTR [edi-0x43347a5f]
  403e7f:	fs dec edx
  403e81:	adc    al,dh
  403e83:	pop    esi
  403e84:	imul   ebp,DWORD PTR [ecx+ebp*8+0x4f9135ce],0x3c13b4a3
  403e8f:	mov    ebp,0x1ebf0eb5
  403e94:	adc    esi,ecx
  403e96:	jmp    0x8d16:0xf4620448
  403e9d:	dec    esi
  403e9e:	push   edx
  403e9f:	pop    eax
  403ea0:	shr    BYTE PTR ds:0x592501d,cl
  403ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ea7:	jae    0x403e79
  403ea9:	inc    edx
  403eaa:	out    0x15,al
  403eac:	add    DWORD PTR [edi-0x45],edx
  403eaf:	(bad)  
  403eb0:	cmp    al,0xbc
  403eb2:	stc    
  403eb3:	sbb    edi,esp
  403eb5:	dec    eax
  403eb6:	add    al,0x9b
  403eb8:	(bad)  
  403eba:	sbb    eax,0xa9799c7
  403ebf:	pop    ds
  403ec0:	jecxz  0x403e7f
  403ec2:	inc    eax
  403ec3:	sbb    BYTE PTR [ebx+0x34],0x2
  403ec7:	sub    eax,0x612dad5e
  403ecc:	mov    ebp,0x67dab2c3
  403ed1:	in     al,0x3
  403ed3:	imul   ebp,DWORD PTR [ecx],0x892c927d
  403ed9:	xor    bl,dl
  403edb:	mov    bl,ch
  403edd:	jg     0x403eb2
  403edf:	(bad)  
  403ee0:	in     eax,0x81
  403ee2:	push   ecx
  403ee3:	ds pop es
  403ee5:	or     ecx,DWORD PTR [eax]
  403ee7:	out    0xb8,al
  403ee9:	sahf   
  403eea:	jns    0x403f3c
  403eec:	mov    al,ds:0x8c4cc062
  403ef1:	push   edx
  403ef2:	pop    ss
  403ef3:	int3   
  403ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef5:	cmp    ah,BYTE PTR ds:0x582df382
  403efb:	adc    dl,0x6b
  403efe:	mov    eax,ds:0xbebbfc5e
  403f03:	mul    BYTE PTR [ecx-0x241ae37a]
  403f09:	xchg   ecx,eax
  403f0a:	shl    DWORD PTR [edi+0x6552a989],1
  403f10:	bound  eax,QWORD PTR [esp+ebx*8]
  403f13:	nop
  403f14:	push   0x27806747
  403f19:	and    edx,DWORD PTR [edi-0x3d]
  403f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f1d:	push   eax
  403f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f1f:	dec    eax
  403f20:	xor    ebx,edi
  403f22:	jne    0x403f65
  403f24:	retf   0x6ecb
  403f27:	fldcw  WORD PTR [edi-0x5c]
  403f2a:	mov    al,ds:0xe3bef0e
  403f2f:	mov    al,ds:0x292aaa7c
  403f34:	test   eax,0xf374683
  403f39:	outs   dx,BYTE PTR ds:[esi]
  403f3a:	mov    ebp,0x3475b3a1
  403f3f:	sub    edx,DWORD PTR [ebx]
  403f41:	mov    ds:0x926f8783,al
  403f46:	cmc    
  403f47:	pusha  
  403f48:	pop    ss
  403f49:	test   DWORD PTR [ecx-0x216c529a],ebp
  403f4f:	adc    BYTE PTR [eax-0x4d],cl
  403f52:	adc    al,0x13
  403f54:	inc    ebp
  403f55:	and    esp,ecx
  403f57:	cli    
  403f58:	repz dec edx
  403f5a:	lods   al,BYTE PTR ds:[esi]
  403f5b:	fs jae 0x403f26
  403f5e:	js     0x403ef1
  403f60:	jmp    0x47092e98
  403f65:	out    dx,eax
  403f66:	and    eax,0x8aeb2eb4
  403f6b:	xor    DWORD PTR [edx],ebx
  403f6d:	sbb    bl,dh
  403f6f:	mov    WORD PTR [esi],?
  403f71:	sbb    dh,ch
  403f73:	cli    
  403f74:	push   ss
  403f75:	lahf   
  403f76:	test   DWORD PTR [esi+0x32],0x53fb1344
  403f7d:	mov    edx,0x10a893c8
  403f82:	mov    ebp,DWORD PTR fs:[edi]
  403f85:	inc    edi
  403f86:	outs   dx,DWORD PTR ds:[esi]
  403f87:	enter  0xae22,0x41
  403f8b:	pop    edi
  403f8c:	xchg   BYTE PTR [ecx],al
  403f8e:	dec    ecx
  403f8f:	sub    BYTE PTR [ebp-0x56],bl
  403f92:	test   BYTE PTR [edx+ecx*1],ch
  403f95:	daa    
  403f96:	pop    ebx
  403f97:	not    dl
  403f99:	shr    DWORD PTR [ebp+0x4c],1
  403f9c:	aas    
  403f9d:	in     al,dx
  403f9e:	push   esi
  403f9f:	das    
  403fa0:	and    esi,ecx
  403fa2:	enter  0xfbc6,0x64
  403fa6:	push   edx
  403fa7:	mov    ah,BYTE PTR [ebx]
  403fa9:	cli    
  403faa:	mov    ebx,0x3b9bf650
  403faf:	out    dx,al
  403fb0:	icebp  
  403fb1:	xor    DWORD PTR [edx+0x15],edx
  403fb4:	mul    BYTE PTR [ebx-0x6abb890f]
  403fba:	into   
  403fbb:	dec    DWORD PTR [esi+esi*2]
  403fbe:	retf   
  403fbf:	(bad)  
  403fc0:	cmp    cl,BYTE PTR [ecx+0x21]
  403fc3:	and    al,0xd6
  403fc5:	xor    al,0xf3
  403fc7:	inc    eax
  403fc8:	jge    0x404019
  403fca:	dec    ecx
  403fcb:	jecxz  0x403f96
  403fcd:	sbb    al,0x89
  403fcf:	sub    BYTE PTR [esi],0xbf
  403fd2:	les    edi,FWORD PTR [esi+0x61]
  403fd5:	aaa    
  403fd6:	in     al,dx
  403fd7:	into   
  403fd8:	outs   dx,DWORD PTR ds:[esi]
  403fd9:	iret   
  403fda:	pop    ds
  403fdb:	les    esi,FWORD PTR [esi]
  403fdd:	sub    esp,esp
  403fdf:	push   esi
  403fe0:	dec    ebp
  403fe1:	repz out dx,eax
  403fe3:	inc    bx
  403fe5:	(bad)  
  403fe6:	cli    
  403fe7:	pushf  
  403fe8:	jp     0x5e0cbe57
  403fee:	lods   al,BYTE PTR ds:[esi]
  403fef:	pop    ss
  403ff0:	js     0x404045
  403ff2:	mov    dh,BYTE PTR [edi+0x5b]
  403ff5:	popa   
  403ff6:	add    esp,esp
  403ff8:	es push edx
  403ffa:	and    edi,ebp
  403ffc:	add    BYTE PTR [edi],bl
  403ffe:	sar    ch,1
  404000:	js     0x403f95
  404002:	add    ch,al
  404004:	jae    0x403fc1
  404006:	clc    
  404007:	fidivr DWORD PTR [esi+0x6f]
  40400a:	mov    ebp,0x7e0cbe3f
  40400f:	ja     0x404005
  404011:	sub    esi,DWORD PTR [esi-0x3f]
  404014:	js     0x40403e
  404016:	pop    edi
  404017:	mov    dh,0xab
  404019:	retf   
  40401a:	pop    esp
  40401b:	jne    0x403fe7
  40401d:	test   BYTE PTR [eax+ecx*4],bl
  404020:	adc    BYTE PTR [edx],ah
  404022:	cmc    
  404023:	cvtdq2ps xmm5,xmm7
  404026:	pop    ebp
  404027:	(bad)
  40402a:	adc    edx,DWORD PTR [ebx-0x1082d066]
  404030:	es in  al,dx
  404032:	adc    eax,0x5e7169a9
  404037:	into   
  404038:	add    eax,0xbfb5b078
  40403d:	pop    ebx
  40403e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40403f:	adc    BYTE PTR [ecx+0x3],ah
  404042:	rol    BYTE PTR [edi],1
  404044:	stos   DWORD PTR es:[edi],eax
  404045:	retf   0x724a
  404048:	and    al,cl
  40404a:	cmc    
  40404b:	dec    eax
  40404c:	add    BYTE PTR [ecx+0x49],0xb
  404050:	cmp    edx,esp
  404052:	cdq    
  404053:	push   esi
  404054:	push   es
  404055:	int3   
  404056:	lock adc DWORD PTR [eax+eax*4+0x11bfbd15],ebx
  40405e:	inc    edi
  40405f:	mov    edx,0x9fc8c34e
  404064:	jp     0x404063
  404066:	pxor   mm4,QWORD PTR [eax]
  404069:	loop   0x404064
  40406b:	xchg   edi,eax
  40406c:	lock mov al,cl
  40406f:	push   ecx
  404070:	xchg   edx,eax
  404071:	xchg   esp,eax
  404072:	in     eax,0xb7
  404074:	push   0x24
  404076:	adc    al,0x8e
  404078:	sbb    DWORD PTR [ebx+edi*2-0x37],edi
  40407c:	pop    ecx
  40407d:	js     0x404083
  40407f:	stos   DWORD PTR es:[edi],eax
  404080:	sub    edi,DWORD PTR [edx+0x14aaa26]
  404086:	pop    eax
  404087:	shl    BYTE PTR [ebx+ecx*1-0x43a3baa2],cl
  40408e:	das    
  40408f:	sub    eax,0x9fa3a805
  404094:	lock or BYTE PTR [edx+0x72],0x93
  404099:	push   0xffffffdd
  40409b:	retf   0x3bf3
  40409e:	inc    ebp
  40409f:	scas   al,BYTE PTR es:[edi]
  4040a0:	je     0x404064
  4040a2:	leave  
  4040a3:	lds    edi,FWORD PTR [esi]
  4040a5:	test   DWORD PTR ds:0xe442ebaa,0x39ef4b88
  4040af:	dec    eax
  4040b0:	mov    ds:0x109f0785,al
  4040b5:	xchg   esp,eax
  4040b6:	xchg   BYTE PTR [eax-0x42e19026],ch
  4040bc:	sbb    eax,0x7cbb5ec6
  4040c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c2:	dec    edi
  4040c3:	(bad)  
  4040c4:	dec    edx
  4040c5:	sahf   
  4040c6:	mov    WORD PTR [eax],?
  4040c8:	pop    ebx
  4040c9:	rol    DWORD PTR [eax*8+0x3c8e1ce5],0xa
  4040d1:	sub    esp,DWORD PTR ds:0xcd75d29c
  4040d7:	inc    ebp
  4040d8:	mov    esp,0xec29b62b
  4040dd:	cmp    esi,edi
  4040df:	mov    dl,0x9c
  4040e1:	fimul  WORD PTR [edx-0x10894807]
  4040e7:	aam    0x4a
  4040e9:	es out dx,eax
  4040eb:	inc    edi
  4040ec:	inc    edi
  4040ed:	add    al,0xd6
  4040ef:	inc    esi
  4040f0:	loopne 0x404118
  4040f2:	mov    dl,0x4
  4040f4:	pop    ebp
  4040f5:	xlat   BYTE PTR gs:[ebx]
  4040f7:	dec    edx
  4040f8:	popf   
  4040f9:	mov    ch,0x1
  4040fb:	call   0xca8:0x924da725
  404102:	test   eax,0x77d3d8ee
  404107:	shl    esi,cl
  404109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40410a:	xchg   esp,eax
  40410b:	adc    DWORD PTR [ebx],ebp
  40410d:	and    eax,0x173b8a49
  404112:	xchg   BYTE PTR [ebx-0x56],dl
  404115:	add    esi,DWORD PTR [eax-0x3a]
  404118:	mov    dl,0x5a
  40411a:	(bad)  
  40411c:	sbb    DWORD PTR [eax-0x66],edi
  40411f:	outs   dx,BYTE PTR ds:[esi]
  404120:	add    BYTE PTR [eax],0xc
  404123:	iret   
  404124:	or     edx,edi
  404126:	int    0xb8
  404128:	fistp  QWORD PTR [edi-0x70]
  40412b:	adc    BYTE PTR [eax-0x20],ah
  40412e:	loop   0x40415a
  404130:	popf   
  404131:	and    dl,BYTE PTR [esi+0x57]
  404134:	scas   al,BYTE PTR es:[edi]
  404135:	ret    
  404136:	mov    ebx,0x32d61949
  40413b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413c:	cmc    
  40413d:	sub    ebp,esi
  40413f:	xor    edi,ebp
  404141:	inc    edx
  404142:	out    0xa5,eax
  404144:	retf   0x97b8
  404147:	aam    0x9
  404149:	leave  
  40414a:	jecxz  0x4040ee
  40414c:	es loope 0x40414e
  40414f:	(bad)  
  404150:	jno    0x404178
  404152:	(bad)  
  404153:	cmp    eax,0x9a083d3c
  404158:	mov    esi,0xc4c62fb4
  40415d:	or     ebx,DWORD PTR [edx+0x63]
  404160:	scas   eax,DWORD PTR es:[edi]
  404161:	fild   QWORD PTR [ebp-0x6d0222f6]
  404167:	adc    edx,DWORD PTR [edx-0x4]
  40416a:	adc    ebx,ebp
  40416c:	jecxz  0x40417a
  40416e:	pop    ebp
  40416f:	pop    edi
  404170:	(bad)  
  404171:	fcmovnbe st,st(2)
  404173:	jbe    0x4041e8
  404175:	ins    DWORD PTR es:[edi],dx
  404176:	lock or al,0xf
  404179:	dec    edi
  40417a:	pop    ebp
  40417b:	adc    al,0xa9
  40417d:	mov    WORD PTR [ecx-0x5c8c6db8],gs
  404183:	stc    
  404184:	fiadd  DWORD PTR [eax]
  404186:	data16 jb 0x404148
  404189:	add    BYTE PTR [eax],dh
  40418b:	push   ebp
  40418c:	dec    DWORD PTR [edi-0x6a]
  40418f:	leave  
  404190:	test   eax,0x21b64c24
  404195:	gs sbb esi,0x571aa8df
  40419c:	mov    ah,0xa9
  40419e:	sub    al,0xc1
  4041a0:	je     0x404164
  4041a2:	aas    
  4041a3:	sbb    eax,0x9e2f0e89
  4041a8:	adc    eax,0x657a356
  4041ad:	fsub   st,st(4)
  4041af:	sub    DWORD PTR [esi+0x24],0x7e
  4041b3:	xor    al,0x7b
  4041b5:	ss jle 0x404194
  4041b8:	cwde   
  4041b9:	xchg   ebx,eax
  4041ba:	sub    al,0xd6
  4041bc:	inc    eax
  4041bd:	std    
  4041be:	add    DWORD PTR ds:0xe355797b,ebp
  4041c4:	jl     0x404212
  4041c6:	repz and al,BYTE PTR [eax+0x55]
  4041ca:	addr16 call 0xb3e0:0xf300cc52
  4041d2:	jns    0x404233
  4041d4:	sub    BYTE PTR [ecx+0x57],dl
  4041d7:	stos   BYTE PTR es:[edi],al
  4041d8:	je     0x40422f
  4041da:	sbb    bl,cl
  4041dc:	xchg   edx,eax
  4041dd:	xchg   BYTE PTR [ecx+edi*8],dh
  4041e0:	imul   ecx,DWORD PTR [ebp+eiz*8+0x35],0x268336a9
  4041e8:	cld    
  4041e9:	push   0xffffff8d
  4041eb:	retf   
  4041ec:	fs jg  0x4041b3
  4041ef:	(bad)  
  4041f0:	jle    0x4041e0
  4041f2:	stos   BYTE PTR es:[edi],al
  4041f3:	xchg   ebp,eax
  4041f4:	outs   dx,BYTE PTR ds:[esi]
  4041f5:	mov    dh,0x46
  4041f7:	(bad)  
  4041f8:	lahf   
  4041f9:	adc    esi,DWORD PTR [esi*1-0x7f7ae95f]
  404200:	popa   
  404201:	ins    BYTE PTR es:[edi],dx
  404202:	mov    ds:0xc19c8f8c,eax
  404207:	jl     0x404220
  404209:	xor    bh,al
  40420b:	inc    ebp
  40420c:	mov    cl,BYTE PTR [ebp-0x1e885778]
  404212:	iret   
  404213:	or     cl,al
  404215:	mov    cl,BYTE PTR [esi+0x20]
  404218:	inc    ecx
  404219:	cmp    ch,dh
  40421b:	sbb    edx,edx
  40421d:	ret    0x28fb
  404220:	fwait
  404221:	std    
  404222:	add    DWORD PTR [eax],edi
  404224:	or     al,0x16
  404226:	sub    cl,BYTE PTR [ebx]
  404228:	pop    ebp
  404229:	pushf  
  40422a:	xchg   ebp,eax
  40422b:	mov    al,0x2d
  40422d:	addr16 push edx
  40422f:	call   0x1b90560c
  404234:	pop    ecx
  404235:	in     al,0xe0
  404237:	dec    esp
  404238:	mov    esp,0xf4e8f574
  40423d:	mov    ebx,0x86a46a3b
  404242:	inc    ebp
  404243:	retf   0xa50c
  404246:	inc    edi
  404247:	dec    ebx
  404248:	cmp    cl,BYTE PTR [esi+esi*4+0xa605f22]
  40424f:	scas   al,BYTE PTR es:[edi]
  404250:	cmp    bh,BYTE PTR [ebp+0x2647d03d]
  404256:	pushf  
  404257:	mov    dl,0x67
  404259:	inc    ebp
  40425a:	add    bh,BYTE PTR [edi]
  40425c:	mov    ds:0x2a5b4396,eax
  404261:	cmp    al,0x1
  404263:	push   eax
  404264:	es xchg esi,eax
  404266:	cmp    BYTE PTR [ebp+0x1a466036],al
  40426c:	mov    ecx,0xebf3098f
  404271:	dec    esp
  404272:	push   0x39
  404274:	push   ebx
  404275:	xchg   ebp,eax
  404276:	and    al,0x71
  404278:	inc    BYTE PTR [eax-0x4642c9bc]
  40427e:	adc    bh,BYTE PTR [ebx+0x314e6b1]
  404284:	dec    edx
  404285:	adc    al,0xf3
  404287:	sahf   
  404288:	xchg   ecx,eax
  404289:	into   
  40428a:	jmp    0x40424e
  40428c:	fild   DWORD PTR [esi]
  40428e:	adc    DWORD PTR [ecx+0x37cc8520],edx
  404294:	(bad)
  404298:	mov    dh,0x7d
  40429a:	int    0x18
  40429c:	push   cs
  40429d:	jne    0x4042b1
  40429f:	int3   
  4042a0:	jbe    0x4042fc
  4042a2:	les    esi,FWORD PTR [edi-0x5d]
  4042a5:	mov    esi,0x38bc1bc2
  4042aa:	enter  0x2f4d,0x60
  4042ae:	mov    dl,0x0
  4042b0:	pop    ss
  4042b1:	jne    0x4042d1
  4042b3:	jg     0x40424b
  4042b5:	out    dx,eax
  4042b6:	dec    ecx
  4042b7:	jns    0x4042c6
  4042b9:	adc    DWORD PTR ds:0xf1e650d7,eax
  4042bf:	jne    0x404280
  4042c1:	cmp    bl,bl
  4042c3:	pop    esi
  4042c4:	shl    cl,cl
  4042c6:	adc    edi,DWORD PTR [edx-0x57]
  4042c9:	mov    BYTE PTR [ecx+0x18],bh
  4042cc:	lds    esi,FWORD PTR [edx-0x10]
  4042cf:	or     BYTE PTR [eiz*1-0x30e50387],dl
  4042d6:	mov    ds:0x1bfcfa0b,eax
  4042db:	dec    ecx
  4042dc:	mov    ebp,0xfd4cf62e
  4042e1:	dec    esp
  4042e3:	add    DWORD PTR [edi-0x354e49d0],esp
  4042e9:	mov    ch,BYTE PTR [eax+0x3045d0a1]
  4042ef:	clc    
  4042f0:	jne    0x404322
  4042f2:	imul   esi,DWORD PTR [edx-0x42],0x7f
  4042f6:	mov    esi,0x1370441b
  4042fb:	jp     0x404345
  4042fd:	mov    ebp,0xf642f6f4
  404302:	xor    al,0xb1
  404304:	push   ss
  404305:	and    BYTE PTR [esi+0x60],0xc
  404309:	call   0x5580:0x8c29ec62
  404310:	xchg   ecx,eax
  404311:	mov    ds:0x32efa201,al
  404316:	sbb    al,0x91
  404318:	je     0x4042f3
  40431a:	add    DWORD PTR [ebp-0xe],edx
  40431d:	pop    ss
  40431e:	push   ss
  40431f:	or     ecx,DWORD PTR [ebx+0x1]
  404322:	popf   
  404323:	loop   0x40431f
  404325:	fmul   QWORD PTR [eax]
  404327:	js     0x4042bc
  404329:	mov    ds,ebx
  40432b:	fdivrp st(6),st
  40432d:	push   esi
  40432e:	jge    0x404374
  404330:	je     0x40433c
  404332:	adc    edx,DWORD PTR [edi]
  404334:	mov    esi,0x9238cfaf
  404339:	mov    ds,WORD PTR [ecx+0x7466a0a2]
  40433f:	push   es
  404340:	dec    edx
  404341:	inc    esp
  404342:	sub    eax,0x35e256cc
  404347:	dec    edi
  404348:	retf   
  404349:	sbb    bh,BYTE PTR ds:0x59d8d6ac
  40434f:	push   esi
  404350:	dec    esp
  404351:	pop    ecx
  404352:	pop    eax
  404353:	out    dx,eax
  404354:	mov    ecx,0xd5f4cef3
  404359:	jo     0x40436d
  40435b:	cdq    
  40435c:	sbb    ebp,DWORD PTR [ebp-0x142bad2d]
  404362:	repz jmp 0x173febbc
  404368:	dec    ebp
  404369:	je     0x4043ab
  40436b:	push   ebx
  40436c:	dec    esp
  40436d:	dec    esp
  40436e:	xor    al,0x73
  404370:	daa    
  404371:	add    esp,esi
  404373:	add    ebp,DWORD PTR [ebp-0x40]
  404376:	xchg   ebp,eax
  404377:	dec    esp
  404378:	push   es
  404379:	scas   al,BYTE PTR es:[edi]
  40437a:	push   edx
  40437b:	test   al,0xb7
  40437d:	jae    0x40432c
  40437f:	cmp    DWORD PTR [esi-0x2fd29394],ebx
  404385:	push   ecx
  404386:	push   ss
  404387:	pushf  
  404388:	push   ds
  404389:	adc    esi,DWORD PTR [ebx]
  40438b:	dec    ebp
  40438c:	push   esi
  40438d:	bound  edx,QWORD PTR [edi-0x97c8eea]
  404393:	jnp    0x404357
  404395:	je     0x404332
  404397:	sbb    BYTE PTR [eax],al
  404399:	jle    0x4043fb
  40439b:	sub    al,0xa2
  40439d:	fwait
  40439e:	(bad)  
  40439f:	push   0x3e
  4043a1:	xchg   edx,eax
  4043a2:	repnz in al,0x71
  4043a5:	xor    edx,esp
  4043a7:	sub    ch,BYTE PTR [ebx+0x3989b3ad]
  4043ad:	das    
  4043ae:	js     0x40434c
  4043b0:	ret    0xfacc
  4043b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b4:	pop    esi
  4043b5:	(bad)  
  4043b6:	cmp    bh,BYTE PTR [esi-0x1dfafb8a]
  4043bc:	push   edi
  4043bd:	cmp    BYTE PTR [esp+ecx*1-0x48],ah
  4043c1:	sbb    eax,0x3e85f68e
  4043c6:	mov    dl,0x1d
  4043c8:	mov    DWORD PTR ds:0x9bfbf3be,esi
  4043ce:	in     eax,0xdb
  4043d0:	mov    al,0x2b
  4043d2:	dec    ebx
  4043d3:	xor    bl,bl
  4043d5:	rcl    BYTE PTR [ebp+0x161a4e3a],cl
  4043db:	cmp    BYTE PTR [edx-0x318b71c],ch
  4043e1:	loop   0x4043ca
  4043e3:	out    0xe3,eax
  4043e5:	nop
  4043e6:	popa   
  4043e7:	adc    esp,eax
  4043e9:	inc    edx
  4043ea:	xor    bl,BYTE PTR [edx+0xa50c89a]
  4043f0:	lahf   
  4043f1:	push   esp
  4043f2:	aam    0xaa
  4043f4:	mov    ch,0x80
  4043f6:	jb     0x404442
  4043f8:	imul   DWORD PTR [eax-0x48]
  4043fb:	fild   WORD PTR [ebp-0x4b10df01]
  404401:	popa   
  404402:	mov    ebx,0xe69f2fa9
  404407:	leave  
  404408:	cmp    edx,DWORD PTR [ebp+0x512e43db]
  40440e:	and    dh,BYTE PTR [esi]
  404410:	mov    ds:0x9c15146,al
  404415:	jp     0x4043a2
  404417:	jae    0x40448b
  404419:	mov    BYTE PTR [edi+eax*2-0xec6626],ah
  404420:	or     bh,BYTE PTR [esi+0x1434a51a]
  404426:	or     al,0x4d
  404428:	mov    eax,0x7d0a7798
  40442d:	scas   al,BYTE PTR es:[edi]
  40442e:	pusha  
  40442f:	test   eax,0x183b630d
  404434:	or     bh,0xe3
  404437:	and    eax,0x9e3e7e16
  40443c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40443d:	cli    
  40443e:	sbb    BYTE PTR [edi-0x32c5721],al
  404444:	vorps  ymm3{k1},ymm4,ymm1
  40444a:	xchg   esi,eax
  40444b:	pushf  
  40444c:	mov    al,ds:0x32734038
  404451:	inc    eax
  404452:	sub    cl,ch
  404454:	jecxz  0x40449a
  404456:	jg     0x404451
  404458:	mov    ch,0x15
  40445a:	out    0xfd,eax
  40445c:	sub    BYTE PTR [esi],ah
  40445e:	int    0xbf
  404460:	mov    ch,0x65
  404462:	out    0x24,eax
  404464:	mov    eax,0x86db08f7
  404469:	rol    DWORD PTR [edx+0x3c],0xa4
  40446d:	push   ebx
  40446e:	out    0xf,eax
  404470:	mov    DWORD PTR [edx-0x5b5d76d2],edx
  404476:	das    
  404477:	stos   DWORD PTR es:[edi],eax
  404478:	adc    edx,edi
  40447a:	not    BYTE PTR [ebx]
  40447c:	ror    BYTE PTR [edi+0x17],cl
  40447f:	pop    ss
  404480:	rcr    dh,cl
  404482:	or     al,0x9d
  404484:	pop    ebp
  404485:	in     eax,0x10
  404487:	cs mov ah,dh
  40448a:	jle    0x404445
  40448c:	jl     0x40441e
  40448e:	dec    eax
  40448f:	scas   eax,DWORD PTR es:[edi]
  404490:	shl    DWORD PTR [ecx+ebx*1-0x4a71d01c],1
  404497:	jae    0x4044d4
  404499:	jl     0x404504
  40449b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40449c:	mov    bl,0x2d
  40449e:	test   DWORD PTR [ebp-0x7a],ecx
  4044a1:	test   edx,ebp
  4044a3:	in     al,dx
  4044a4:	xchg   esi,eax
  4044a5:	mov    dl,0xc5
  4044a7:	rcr    DWORD PTR [eax+0x40],cl
  4044aa:	and    al,0x67
  4044ac:	dec    edi
  4044ad:	(bad)  
  4044ae:	adc    al,0x67
  4044b0:	in     al,0xe8
  4044b2:	pop    esi
  4044b3:	xchg   ebx,eax
  4044b4:	lods   al,BYTE PTR ds:[esi]
  4044b5:	std    
  4044b6:	add    eax,0x4f335ac6
  4044bb:	cmovno esp,DWORD PTR [edx]
  4044be:	nop
  4044bf:	jno    0x4044a8
  4044c1:	jle    0x40452e
  4044c3:	cmc    
  4044c4:	sbb    BYTE PTR ss:[edx-0x36],bh
  4044c8:	fsubr  DWORD PTR [ebp+0x30]
  4044cb:	enter  0x92dd,0x3e
  4044cf:	pop    ebp
  4044d0:	lods   al,BYTE PTR ds:[esi]
  4044d1:	jno    0x40450a
  4044d3:	iret   
  4044d4:	pop    ebx
  4044d5:	sub    al,0x28
  4044d7:	dec    edi
  4044d8:	mov    edi,0xe05fc2d8
  4044dd:	and    al,0xbf
  4044df:	addr16 mov ebp,0xe7832991
  4044e5:	jmp    0x404471
  4044e7:	fdivr  st,st(4)
  4044e9:	dec    esp
  4044ea:	inc    esp
  4044eb:	iret   
  4044ec:	adc    ebp,DWORD PTR [edi]
  4044ee:	out    dx,al
  4044ef:	ds mov esi,0xa5bea089
  4044f5:	into   
  4044f6:	icebp  
  4044f7:	push   ebx
  4044f8:	dec    ebp
  4044f9:	mov    eax,ds:0x3029e563
  4044fe:	or     edx,DWORD PTR [eax-0x2dbf8edd]
  404504:	dec    DWORD PTR [ebp-0x4eb41248]
  40450a:	or     ebp,DWORD PTR [ecx-0x7d]
  40450d:	int3   
  40450e:	in     al,dx
  40450f:	xor    al,0x8c
  404511:	mov    dh,0x29
  404513:	add    ebp,ecx
  404515:	cmp    eax,0xa8e71fa1
  40451a:	sub    esp,DWORD PTR [edx+edi*1]
  40451d:	push   ebx
  40451e:	mov    DWORD PTR [ebx],esi
  404520:	inc    ebx
  404521:	mov    al,0x78
  404523:	(bad)  
  404524:	sbb    cl,dl
  404526:	in     al,dx
  404527:	sti    
  404528:	cmp    BYTE PTR ds:0x69e91519,dl
  40452e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452f:	retf   
  404530:	add    DWORD PTR [ebp+0x41607f3d],ebx
  404536:	mov    esi,ebx
  404538:	or     esp,0xffffff87
  40453b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453c:	lahf   
  40453d:	jle    0x4045bd
  40453f:	push   cs
  404540:	push   esi
  404541:	loope  0x404535
  404543:	hlt    
  404544:	sub    BYTE PTR [ecx+0x770953d3],0xc2
  40454b:	jle    0x4044ff
  40454d:	cmp    ah,BYTE PTR [ebp+0x1b]
  404550:	mov    ebx,0x5f19e84b
  404555:	ins    DWORD PTR es:[edi],dx
  404556:	mov    DWORD PTR [edi-0xe7acc19],0x9a1f2cf1
  404560:	push   edi
  404561:	pop    edi
  404562:	psraw  mm7,mm6
  404565:	out    0x4d,al
  404567:	cdq    
  404568:	sbb    bh,cl
  40456a:	imul   edi,DWORD PTR [ebx],0x43428fa1
  404570:	lahf   
  404571:	mov    ch,0xfa
  404573:	daa    
  404574:	sbb    DWORD PTR [edi],ecx
  404576:	xchg   ebx,eax
  404577:	aad    0x5e
  404579:	stos   DWORD PTR es:[edi],eax
  40457a:	inc    ecx
  40457b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40457c:	arpl   WORD PTR ds:0xf6e6b4b5,bp
  404582:	cdq    
  404583:	adc    al,0x2
  404585:	mov    ebx,?
  404587:	push   es
  404588:	sbb    eax,0xcc33a51f
  40458d:	inc    ecx
  40458e:	adc    al,0x7e
  404590:	ret    0x6011
  404593:	mov    ah,0x16
  404595:	pop    edi
  404596:	mov    esi,0x33122d1e
  40459b:	fwait
  40459c:	push   edi
  40459d:	cli    
  40459e:	loope  0x404537
  4045a0:	out    dx,al
  4045a1:	dec    edx
  4045a2:	ds mov esi,0x1bfe6c15
  4045a8:	(bad)
  4045ad:	das    
  4045ae:	mov    eax,ds:0x26de1e77
  4045b3:	sub    BYTE PTR [edx-0x312c37de],cl
  4045b9:	fnsave [eax+0x19]
  4045bc:	popf   
  4045bd:	into   
  4045be:	pusha  
  4045bf:	outs   dx,BYTE PTR ds:[esi]
  4045c0:	add    DWORD PTR [edx],ecx
  4045c2:	sub    dh,BYTE PTR [esi]
  4045c4:	aam    0x14
  4045c6:	xchg   edi,eax
  4045c7:	sub    edi,ebp
  4045c9:	bound  esp,QWORD PTR [ebp+0x6e]
  4045cc:	(bad)  
  4045cd:	out    dx,eax
  4045ce:	pop    ds
  4045cf:	imul   BYTE PTR [edi]
  4045d1:	jno    0x4045b9
  4045d3:	dec    edx
  4045d4:	mov    ecx,0x6d734ca7
  4045d9:	inc    esp
  4045da:	imul   edi,DWORD PTR [ebx],0xffffffe6
  4045dd:	and    al,0x7
  4045df:	sub    DWORD PTR [esi-0x1fb20e2e],ecx
  4045e5:	out    dx,al
  4045e6:	jmp    0x404621
  4045e8:	adc    ebp,ebp
  4045ea:	jmp    FWORD PTR [edi-0x56ba72e2]
  4045f0:	stos   BYTE PTR es:[edi],al
  4045f1:	mov    al,0xf5
  4045f3:	pop    ss
  4045f4:	sub    esp,ebx
  4045f6:	outs   dx,DWORD PTR ds:[esi]
  4045f7:	push   edi
  4045f8:	jae    0x4045b7
  4045fa:	test   bl,bl
  4045fc:	jne    0x4045b5
  4045fe:	xor    DWORD PTR ds:0x99a2726d,ecx
  404604:	out    0x83,eax
  404606:	shl    DWORD PTR [eax-0x68c9cebd],0xd
  40460d:	popf   
  40460e:	cmp    DWORD PTR [ebx+0x475983c9],ebp
  404614:	outs   dx,BYTE PTR ds:[esi]
  404615:	mov    eax,ds:0x7126ec4e
  40461a:	mov    esp,DWORD PTR [esi-0x49]
  40461d:	data16 sub bh,cl
  404620:	jge    0x404678
  404622:	jno    0x4045cc
  404624:	fs xor ecx,esi
  404627:	std    
  404628:	add    al,0xdf
  40462a:	ret    0x3d77
  40462d:	and    esi,edi
  40462f:	lods   eax,DWORD PTR ds:[esi]
  404630:	jp     0x4045d7
  404632:	mov    bh,0xe2
  404634:	pop    ebx
  404635:	jp     0x4045bd
  404637:	xchg   ecx,eax
  404638:	and    esi,DWORD PTR [edx+eax*4]
  40463b:	inc    ebp
  40463c:	and    BYTE PTR [ecx+0x46],0x6b
  404640:	clc    
  404641:	(bad)  
  404642:	aas    
  404643:	mov    BYTE PTR [edi+0x2e4f614],ah
  404649:	inc    edi
  40464a:	dec    ebx
  40464b:	jae    0x404622
  40464d:	gs add al,bh
  404650:	mov    ecx,ss
  404652:	pop    ecx
  404653:	or     edi,DWORD PTR es:[eax]
  404656:	ins    BYTE PTR es:[edi],dx
  404657:	fdiv   QWORD PTR ds:0x2fc95195
  40465d:	aas    
  40465e:	mov    dh,0x28
  404660:	inc    esi
  404661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404663:	ins    DWORD PTR es:[edi],dx
  404664:	retf   0x6394
  404667:	pop    ebp
  404668:	pminub mm7,QWORD PTR [ebx-0x575d25d2]
  40466f:	ins    BYTE PTR es:[edi],dx
  404670:	mul    BYTE PTR [esi+ecx*8-0x63]
  404674:	sub    eax,0xfeead947
  404679:	aas    
  40467a:	inc    edx
  40467b:	push   0x1c
  40467d:	cmc    
  40467e:	cdq    
  40467f:	jecxz  0x40469e
  404681:	pop    edi
  404682:	loop   0x4046fb
  404684:	addr16 jbe 0x40466f
  404687:	out    0xa6,al
  404689:	ds push edx
  40468b:	pop    esp
  40468c:	push   ds
  40468d:	pop    ebx
  40468e:	sub    DWORD PTR [edx],0xba60d502
  404694:	(bad)  
  404695:	mov    al,0x28
  404697:	xchg   edi,eax
  404698:	push   ss
  404699:	ret    0x13c7
  40469c:	mov    al,0x80
  40469e:	lods   eax,DWORD PTR ds:[esi]
  40469f:	adc    al,0x96
  4046a1:	fcomi  st,st(0)
  4046a3:	test   edx,0x20795c3c
  4046a9:	bound  edi,QWORD PTR cs:[edi-0x75]
  4046ad:	mov    al,ds:0x78669d87
  4046b2:	pop    ds
  4046b3:	xchg   esp,eax
  4046b4:	xchg   DWORD PTR [esi+0x4b],ebp
  4046b7:	mov    ds:0xed3d66b6,eax
  4046bc:	cmp    BYTE PTR [edx-0x105fe1d4],bh
  4046c2:	cli    
  4046c3:	pop    DWORD PTR [ecx+ecx*4+0x4b248d1c]
  4046ca:	popf   
  4046cb:	aas    
  4046cc:	inc    edx
  4046cd:	inc    esi
  4046ce:	push   edx
  4046cf:	mov    ecx,0x998475bf
  4046d4:	jle    0x40473b
  4046d6:	mov    al,ds:0x10ea9992
  4046db:	in     al,dx
  4046dc:	leave  
  4046dd:	mov    dh,0x15
  4046df:	inc    ebp
  4046e0:	fcmovb st,st(7)
  4046e2:	xchg   ebp,eax
  4046e3:	lds    esi,FWORD PTR [ebp-0x5b]
  4046e6:	push   esi
  4046e7:	test   eax,0xf3f86e53
  4046ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ed:	xor    DWORD PTR [ebx-0x424829d4],0x1b
  4046f4:	and    DWORD PTR [ebx+ebx*2],0x18
  4046f8:	dec    BYTE PTR [esi+0x7ae016c3]
  4046fe:	push   0xffffff8f
  404700:	push   esp
  404701:	add    al,0x8e
  404703:	sti    
  404704:	ins    BYTE PTR es:[edi],dx
  404705:	mov    fs,WORD PTR [ecx+0x1b292084]
  40470b:	dec    eax
  40470c:	sbb    edi,DWORD PTR ds:0x3d6a08e3
  404712:	loop   0x4046ea
  404714:	sub    al,0x56
  404716:	nop
  404717:	rcl    BYTE PTR [edi+0x21ea6aef],0x9a
  40471e:	arpl   WORD PTR [edi],ax
  404720:	lods   al,BYTE PTR ds:[esi]
  404721:	(bad)  
  404722:	jne    0x4046fa
  404724:	xchg   edx,eax
  404725:	xchg   edi,eax
  404726:	add    cl,BYTE PTR [esi+ecx*4-0xa7d2aa3]
  40472d:	pusha  
  40472e:	dec    ecx
  40472f:	imul   eax,ebp,0x62
  404732:	gs xor al,0x3
  404735:	(bad)
  404739:	inc    eax
  40473a:	(bad)  
  40473b:	int    0x47
  40473d:	sub    eax,ebx
  40473f:	xchg   edx,eax
  404740:	jl     0x404749
  404742:	pop    ebx
  404743:	push   cs
  404744:	iret   
  404745:	lds    ecx,FWORD PTR [ebx-0x4]
  404748:	mov    ebp,0xf07080f0
  40474d:	mov    cl,0x3b
  40474f:	pop    esi
  404750:	pop    esp
  404751:	cmc    
  404752:	retf   
  404753:	clc    
  404754:	imul   ecx,esi,0xfffffffa
  404757:	push   ebp
  404758:	sub    al,0x73
  40475a:	nop
  40475b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475c:	pop    ebp
  40475d:	(bad)  
  40475e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40475f:	arpl   WORD PTR [ecx-0x2bfc9673],di
  404765:	mov    esp,0x1898d2df
  40476a:	bound  edi,QWORD PTR [ecx+0xe6a5302]
  404770:	(bad)  
  404771:	fadd   st(6),st
  404773:	repnz xor ch,BYTE PTR [ebx-0x7]
  404777:	fadd   DWORD PTR ds:0x7234469f
  40477d:	das    
  40477e:	sub    BYTE PTR [esi-0xe1d8ae9],dl
  404784:	mov    eax,0x39fef4a6
  404789:	or     edi,DWORD PTR [eax-0x9cb644e]
  40478f:	loop   0x4047be
  404791:	leave  
  404792:	add    eax,0x9a8859cf
  404797:	test   DWORD PTR [ebp-0xd51411b],edi
  40479d:	jb     0x40475b
  40479f:	(bad)
  4047a3:	bound  ecx,QWORD PTR [eax*2-0x6d2debd7]
  4047aa:	sti    
  4047ab:	ror    BYTE PTR [ebx+0xcdbeae],0xfd
  4047b2:	jle    0x40475f
  4047b4:	scas   al,BYTE PTR es:[edi]
  4047b5:	cli    
  4047b6:	cmp    BYTE PTR [edi+0x79],0x7e
  4047ba:	add    eax,DWORD PTR [edi-0x7863cb14]
  4047c0:	adc    eax,0x35cd3976
  4047c5:	jmp    0x2c8c2daf
  4047ca:	ret    
  4047cb:	push   edi
  4047cc:	xchg   ebp,eax
  4047cd:	cwde   
  4047ce:	rcr    al,0xc
  4047d1:	(bad)  
  4047d2:	jmp    DWORD PTR [edi]
  4047d4:	scas   eax,DWORD PTR es:[edi]
  4047d5:	mov    cl,0x59
  4047d7:	test   DWORD PTR [ecx],edx
  4047d9:	jecxz  0x404859
  4047db:	mov    esp,0xbcf78b21
  4047e0:	pop    ebp
  4047e1:	xchg   edi,eax
  4047e2:	nop
  4047e3:	ds aaa 
  4047e5:	out    dx,al
  4047e6:	aam    0xd6
  4047e8:	ds xchg edx,eax
  4047ea:	mov    bl,0x70
  4047ec:	inc    edi
  4047ed:	aas    
  4047ee:	scas   eax,DWORD PTR es:[edi]
  4047ef:	mov    ebp,0x2b981b8
  4047f4:	daa    
  4047f5:	aad    0x2f
  4047f7:	stos   BYTE PTR es:[edi],al
  4047f8:	popa   
  4047f9:	lods   al,BYTE PTR ds:[esi]
  4047fa:	fwait
  4047fb:	xchg   ebx,eax
  4047fc:	adc    eax,0xe97f1b3c
  404801:	imul   esp,DWORD PTR [ebx+0x3e],0xfffffffd
  404805:	mov    cl,0xc0
  404807:	loopne 0x404847
  404809:	cld    
  40480a:	push   ebx
  40480b:	xor    ah,BYTE PTR [eax-0x2132dfe6]
  404811:	stos   DWORD PTR es:[edi],eax
  404812:	sub    eax,0xca8033a7
  404817:	mov    cl,0x36
  404819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40481a:	sbb    al,0xbb
  40481c:	adc    eax,DWORD PTR [eax]
  40481e:	push   esp
  40481f:	test   DWORD PTR [eax],eax
  404821:	jle    0x4047b3
  404823:	and    dl,0x65
  404826:	lea    esi,[esi-0x7445d436]
  40482c:	test   al,0x27
  40482e:	leave  
  40482f:	inc    eax
  404830:	mul    cl
  404832:	push   es
  404833:	inc    esp
  404834:	fwait
  404835:	pop    ecx
  404836:	push   ss
  404837:	mov    edx,0x4f46df80
  40483c:	ins    BYTE PTR es:[edi],dx
  40483d:	(bad)  
  40483e:	ficom  WORD PTR [edx-0x1b]
  404841:	pusha  
  404842:	(bad)  
  404843:	and    dh,bl
  404845:	push   DWORD PTR [ebx-0x2e]
  404848:	dec    edx
  404849:	dec    edx
  40484a:	jle    0x40480e
  40484c:	jae    0x40487c
  40484e:	xor    ebx,DWORD PTR [ebx]
  404850:	xchg   ebx,eax
  404851:	mov    ah,0x8a
  404853:	and    bl,dl
  404855:	or     DWORD PTR [ebx-0x2a8773c6],esi
  40485b:	adc    cl,BYTE PTR [edx]
  40485d:	ins    DWORD PTR es:[edi],dx
  40485e:	inc    ebp
  40485f:	arpl   ax,bx
  404861:	in     eax,0x80
  404863:	(bad)  
  404864:	rdmsr  
  404866:	aad    0xce
  404868:	sbb    esp,ebx
  40486a:	sub    ecx,DWORD PTR [eax+0x41]
  40486d:	jbe    0x4048ce
  40486f:	cmp    BYTE PTR [ecx+0x2885606e],bl
  404875:	adc    eax,esi
  404877:	xchg   ebp,eax
  404878:	gs xchg edx,eax
  40487a:	xor    eax,0x30ceb485
  40487f:	jle    0x404882
  404881:	out    0xbb,eax
  404883:	mov    al,ds:0xe64f7630
  404888:	cs pop ebx
  40488a:	xchg   edi,eax
  40488b:	ins    DWORD PTR es:[edi],dx
  40488c:	jne    0x40490a
  40488e:	xlat   BYTE PTR ds:[ebx]
  40488f:	xlat   BYTE PTR ds:[ebx]
  404890:	stos   DWORD PTR es:[edi],eax
  404891:	loope  0x4048ec
  404893:	ret    0x7f19
  404896:	fs dec edi
  404898:	mov    esi,0xab3f02a6
  40489d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40489e:	in     al,dx
  40489f:	adc    dh,BYTE PTR [ebx-0x61f3314c]
  4048a5:	lods   al,BYTE PTR ds:[esi]
  4048a6:	mov    al,0x94
  4048a8:	mov    ah,0x68
  4048aa:	and    al,0x3c
  4048ac:	pop    ebx
  4048ad:	(bad)  
  4048ae:	sar    esp,0xc1
  4048b1:	std    
  4048b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b3:	xchg   ecx,eax
  4048b4:	xor    eax,0x4773e083
  4048b9:	dec    edi
  4048ba:	sub    edi,ebx
  4048bc:	mov    ah,0x33
  4048be:	js     0x40484c
  4048c0:	push   0x60
  4048c2:	in     eax,0x8d
  4048c4:	rol    BYTE PTR [ebx-0x2e64e5a4],1
  4048ca:	push   0x4a
  4048cc:	rcl    DWORD PTR [edi],0x4c
  4048cf:	ja     0x4048fb
  4048d1:	and    BYTE PTR [edx+0x3968b2d0],0xe9
  4048d8:	cmp    DWORD PTR [ecx+0x1b],edi
  4048db:	sti    
  4048dc:	aad    0xec
  4048de:	fld    DWORD PTR [ebx+ecx*8+0x23]
  4048e2:	inc    esp
  4048e3:	xor    ecx,0x3a33589b
  4048e9:	dec    edx
  4048ea:	(bad)  
  4048eb:	xor    ebp,esp
  4048ed:	mov    ah,0x6c
  4048ef:	fwait
  4048f0:	or     eax,0x54c90596
  4048f5:	retf   0x6f76
  4048f8:	lahf   
  4048f9:	iret   
  4048fa:	rcl    bh,1
  4048fc:	inc    esp
  4048fd:	cdq    
  4048fe:	add    eax,0xb6bf22d8
  404903:	jb     0x4048da
  404905:	das    
  404906:	cmp    ecx,DWORD PTR [edi+0x1]
  404909:	bnd jne 0x404969
  40490c:	sbb    edx,eax
  40490e:	adc    ch,cl
  404910:	js     0x4048e8
  404912:	pop    es
  404913:	dec    ecx
  404914:	pop    ebp
  404915:	mov    al,0x49
  404917:	ss stos BYTE PTR es:[edi],al
  404919:	mov    ds:0x3561b3c3,eax
  40491e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491f:	popf   
  404920:	mov    ch,0x28
  404922:	in     al,dx
  404923:	test   DWORD PTR [ecx],edx
  404925:	ins    DWORD PTR es:[edi],dx
  404926:	ror    BYTE PTR [esi],1
  404928:	out    0x7f,eax
  40492a:	mov    esi,0x8d4aefba
  40492f:	out    dx,al
  404930:	push   es
  404931:	cmp    al,BYTE PTR [eax]
  404933:	cmp    BYTE PTR [eax+0xa550a9c],cl
  404939:	xchg   DWORD PTR [edi+0x153c2d5f],ecx
  40493f:	idiv   bh
  404941:	mov    eax,ss:0x566304be
  404947:	push   esp
  404948:	xchg   edi,eax
  404949:	jg     0x404967
  40494b:	add    al,0xe8
  40494d:	inc    ebp
  40494e:	jns    0x404948
  404950:	adc    edx,eax
  404952:	adc    DWORD PTR [ebx-0x116a92f8],ebp
  404958:	or     dh,al
  40495a:	push   0x96140eb2
  40495f:	fsubr  DWORD PTR gs:[ebx+0x36e2d4f9]
  404966:	pusha  
  404967:	popf   
  404968:	pop    esp
  404969:	fwait
  40496a:	mov    BYTE PTR [ecx+0x6194302a],0xc4
  404971:	js     0x404926
  404973:	int    0x51
  404975:	fs jne 0x404994
  404978:	cmp    eax,0x49ff1d2c
  40497d:	stc    
  40497e:	jno    0x4049a2
  404980:	pop    ss
  404981:	call   0xb0419e39
  404986:	adc    al,0x37
  404988:	sub    eax,0x20ac39b1
  40498d:	cmp    DWORD PTR [edi-0x54d961b2],ebp
  404993:	or     dh,bh
  404995:	push   ebx
  404996:	data16 xor BYTE PTR [ecx],ah
  404999:	lds    ecx,FWORD PTR [ebp-0x14de197b]
  40499f:	cmp    dl,BYTE PTR [edx-0xe]
  4049a2:	jecxz  0x40497d
  4049a4:	xor    al,0xdb
  4049a6:	cs (bad) 
  4049a8:	push   ecx
  4049a9:	add    al,0xf6
  4049ab:	pushf  
  4049ac:	sub    cl,bh
  4049ae:	pop    esp
  4049af:	test   DWORD PTR [ebx-0x40],eax
  4049b2:	xchg   esi,eax
  4049b3:	in     eax,dx
  4049b4:	sbb    esi,esp
  4049b6:	ins    BYTE PTR es:[edi],dx
  4049b7:	aas    
  4049b8:	out    0xa,al
  4049ba:	mov    ebx,?
  4049bc:	fild   DWORD PTR [esi]
  4049be:	push   edi
  4049bf:	sbb    ebx,DWORD PTR [eax+0x60b7d0a4]
  4049c5:	addr16 stc 
  4049c7:	jle    0x40499a
  4049c9:	sub    ebp,DWORD PTR [ebx+edi*1]
  4049cc:	push   esp
  4049cd:	ins    BYTE PTR es:[edi],dx
  4049ce:	cwde   
  4049cf:	xlat   BYTE PTR ds:[ebx]
  4049d0:	lods   al,BYTE PTR ds:[esi]
  4049d1:	cmc    
  4049d2:	sub    esi,DWORD PTR [edx]
  4049d4:	jns    0x404a23
  4049d6:	loop   0x40497e
  4049d8:	and    DWORD PTR [eax-0x1618e43d],0xffffffa5
  4049df:	leave  
  4049e0:	pop    edx
  4049e1:	xchg   BYTE PTR [ecx+eiz*2-0x1],dl
  4049e5:	dec    esp
  4049e6:	into   
  4049e7:	pop    eax
  4049e8:	mov    ebx,0x1233b58e
  4049ed:	test   edi,0x951b8d56
  4049f3:	adc    BYTE PTR [edx],bl
  4049f5:	dec    ebx
  4049f6:	loopne 0x404993
  4049f8:	repz shl bl,1
  4049fb:	pop    esp
  4049fc:	in     al,0x2
  4049fe:	int    0x7
  404a00:	or     al,0x5
  404a02:	ret    0xa984
  404a05:	mov    edi,0xbab21a07
  404a0a:	arpl   WORD PTR [edx+0x58],bp
  404a0d:	xchg   esi,eax
  404a0e:	aam    0x25
  404a10:	stos   DWORD PTR es:[edi],eax
  404a11:	jg     0x404a70
  404a13:	pop    ebp
  404a14:	mov    al,0x75
  404a16:	mov    edx,0xdd2cdf37
  404a1b:	jne    0x4049e0
  404a1d:	(bad)
  404a20:	pop    ss
  404a21:	adc    dh,ah
  404a23:	sahf   
  404a24:	std    
  404a25:	stos   DWORD PTR es:[edi],eax
  404a26:	inc    edx
  404a27:	loop   0x404a9d
  404a29:	pop    ds
  404a2a:	ss jmp 0x1125702e
  404a30:	iret   
  404a31:	ins    DWORD PTR es:[edi],dx
  404a32:	call   0x807b:0xedc5ea25
  404a39:	into   
  404a3a:	sub    edi,DWORD PTR [edx+ecx*1]
  404a3d:	es push ds
  404a3f:	icebp  
  404a40:	fdiv   st(0),st
  404a42:	or     DWORD PTR [edi],ebp
  404a44:	nop
  404a45:	pushf  
  404a46:	cmp    dl,BYTE PTR [edi-0x61850b08]
  404a4c:	dec    esp
  404a4d:	(bad)  
  404a4e:	cld    
  404a4f:	xor    ch,BYTE PTR [edi-0x22]
  404a52:	inc    edx
  404a53:	out    dx,al
  404a54:	mov    WORD PTR [ecx],gs
  404a56:	jnp    0x4049f3
  404a58:	sbb    BYTE PTR [esi],ah
  404a5a:	ror    BYTE PTR [eax],cl
  404a5c:	loope  0x404ac2
  404a5e:	outs   dx,BYTE PTR ds:[esi]
  404a5f:	fdiv   QWORD PTR [eax+esi*4-0x51]
  404a63:	je     0x404a3b
  404a65:	or     DWORD PTR [edx-0x22bfaab],ebp
  404a6b:	ss int3 
  404a6d:	jl     0x404a72
  404a6f:	adc    eax,0xe607cd49
  404a74:	mov    es,WORD PTR [eax+0x1]
  404a77:	adc    eax,esi
  404a79:	stc    
  404a7a:	add    ebp,DWORD PTR [edx+0x39]
  404a7d:	pop    esp
  404a7e:	mov    ds:0x69d8f5b9,al
  404a83:	or     al,0xb4
  404a85:	jle    0x404a77
  404a87:	ss int 0x6d
  404a8a:	and    eax,0xa66f1c6d
  404a8f:	(bad)  
  404a90:	mov    ecx,0x4d842818
  404a95:	dec    ebp
  404a96:	inc    edi
  404a97:	sub    eax,0x6d7b50bf
  404a9c:	xchg   ebp,eax
  404a9d:	lahf   
  404a9e:	je     0x404b02
  404aa0:	lods   eax,DWORD PTR ds:[esi]
  404aa1:	adc    ebp,edi
  404aa3:	(bad)  
  404aa4:	nop
  404aa5:	ret    
  404aa6:	adc    DWORD PTR [edi-0x76],ecx
  404aa9:	dec    esi
  404aaa:	mov    dh,0x61
  404aac:	ja     0x404aaa
  404aae:	adc    cl,BYTE PTR [edx+eiz*8+0x4e98bc4f]
  404ab5:	sbb    DWORD PTR [ebp+0x2e61260c],esi
  404abb:	mov    eax,0xf979f55c
  404ac0:	xchg   edi,eax
  404ac1:	das    
  404ac2:	rol    DWORD PTR [esp+eiz*2-0x1a],1
  404ac6:	les    eax,FWORD PTR [ebx]
  404ac8:	sub    DWORD PTR [edx-0x5a],0xe6e3759a
  404acf:	cmp    BYTE PTR [ebp-0x11366659],ah
  404ad5:	mov    eax,ebx
  404ad7:	jl     0x404b10
  404ad9:	cli    
  404ada:	test   BYTE PTR [eax+0x59e592c5],0xf1
  404ae1:	neg    DWORD PTR fs:[ebx+esi*1]
  404ae5:	pop    esi
  404ae6:	loope  0x404b22
  404ae8:	and    dl,0x2d
  404aeb:	mov    ds:0x11fcdf22,eax
  404af0:	xchg   esp,eax
  404af1:	gs mov ch,0xcd
  404af4:	mov    bl,0x7a
  404af6:	enter  0xdc80,0x39
  404afa:	mov    fs,WORD PTR [ebx]
  404afc:	cld    
  404afd:	int3   
  404afe:	out    dx,al
  404aff:	and    eax,0x1b5bc26
  404b04:	fwait
  404b05:	stc    
  404b06:	pop    ecx
  404b07:	rcr    dh,1
  404b09:	adc    ebp,DWORD PTR [edi-0x45d1b30]
  404b0f:	push   eax
  404b10:	bswap  ebp
  404b12:	loop   0x404b3e
  404b14:	shr    DWORD PTR [ebp+0x6a3b3f3d],cl
  404b1a:	icebp  
  404b1b:	iret   
  404b1c:	mov    esp,0x10b0daf7
  404b21:	lahf   
  404b22:	in     eax,dx
  404b23:	frstor [edi+0x5807bcaf]
  404b29:	lea    ecx,[ecx-0x29]
  404b2c:	jg     0x404b86
  404b2e:	aaa    
  404b2f:	daa    
  404b30:	ja     0x404b4f
  404b32:	aad    0xda
  404b34:	xchg   ebx,eax
  404b35:	adc    BYTE PTR [esi+0x7e5fe7d9],0x9e
  404b3c:	(bad)  
  404b3e:	dec    esp
  404b3f:	dec    ebp
  404b40:	cmp    bl,BYTE PTR [edx]
  404b42:	ret    0x5737
  404b45:	dec    ebp
  404b46:	sub    al,0x7e
  404b48:	xlat   BYTE PTR ds:[ebx]
  404b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4a:	xchg   DWORD PTR [ebx+0x44],edx
  404b4d:	out    dx,al
  404b4e:	leave  
  404b4f:	mov    esp,0x93fe9290
  404b54:	jl     0x404aeb
  404b56:	pusha  
  404b57:	cmp    BYTE PTR [esi+0x31f86188],bh
  404b5d:	fstp   QWORD PTR [esi+0x7a]
  404b60:	sub    dh,BYTE PTR [ebp-0x6a]
  404b63:	push   0xd4d4a03f
  404b68:	or     BYTE PTR ss:[esi+ecx*2+0x6b75a0a0],dl
  404b70:	lods   al,BYTE PTR ds:[esi]
  404b71:	inc    ebp
  404b72:	jecxz  0x404b99
  404b74:	mov    al,ds:0xccbb52bd
  404b79:	jb     0x404b93
  404b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7c:	pop    ds
  404b7d:	add    DWORD PTR ds:0xbc125f9f,edx
  404b83:	and    ecx,DWORD PTR [ecx-0x21]
  404b86:	mov    al,0x93
  404b88:	push   ds
  404b89:	imul   ebp,DWORD PTR [ebp-0x114db374],0x530a7e7c
  404b93:	inc    ebx
  404b94:	popf   
  404b95:	pushf  
  404b96:	pop    esp
  404b97:	jno    0x404bc1
  404b99:	and    al,0xb
  404b9b:	cmp    DWORD PTR [eax+0x43b0bb9],ebx
  404ba1:	sub    ah,BYTE PTR [edi-0x423a7a85]
  404ba7:	mov    eax,ds:0x689aced4
  404bac:	out    dx,eax
  404bad:	jno    0x404c19
  404baf:	mov    DWORD PTR [ebx],eax
  404bb1:	push   ebx
  404bb2:	sbb    ebp,DWORD PTR [ebx-0x4143fe40]
  404bb8:	inc    edi
  404bb9:	jl     0x404b75
  404bbb:	bound  edx,QWORD PTR [edi+ebp*1]
  404bbe:	call   0xec97169f
  404bc3:	push   edx
  404bc4:	mov    edx,0x5272bc9f
  404bc9:	pop    esi
  404bca:	lods   al,BYTE PTR ds:[esi]
  404bcb:	and    DWORD PTR [eax+0x30c136c],esp
  404bd1:	adc    ah,BYTE PTR [edx+0x5ff1117d]
  404bd7:	push   ebp
  404bd8:	push   eax
  404bd9:	retf   
  404bda:	test   DWORD PTR [ebx],0x6a025800
  404be0:	fadd   QWORD PTR [edi-0x75]
  404be3:	pop    ss
  404be4:	mov    edx,0x70fff35b
  404be9:	(bad)  
  404bea:	pop    esp
  404beb:	fist   WORD PTR [edx-0x71533216]
  404bf1:	rcr    DWORD PTR [ebp+0x7c],1
  404bf4:	jno    0x404bb4
  404bf6:	sub    bh,BYTE PTR [esi]
  404bf8:	retf   0x2edd
  404bfb:	dec    DWORD PTR [edi]
  404bfd:	inc    edi
  404bfe:	jbe    0x404c30
  404c00:	and    DWORD PTR [esi-0x36],0x38
  404c04:	xchg   esi,eax
  404c05:	mov    ds:0xe4604b03,eax
  404c0a:	xchg   esi,eax
  404c0b:	lods   eax,DWORD PTR ds:[esi]
  404c0c:	cmc    
  404c0d:	add    ecx,DWORD PTR [ebx+0x53]
  404c10:	in     eax,0x5f
  404c12:	stos   BYTE PTR es:[edi],al
  404c13:	xchg   edi,eax
  404c14:	or     al,0xaf
  404c16:	aad    0xee
  404c18:	imul   esp,DWORD PTR [edx-0xa93b65b],0x4f
  404c1f:	loop   0x404c5f
  404c21:	popa   
  404c22:	(bad)  [ecx-0x6c21d192]
  404c28:	sbb    esp,edx
  404c2a:	movmskps ecx,xmm6
  404c2d:	int    0x3
  404c2f:	mov    ch,0x4d
  404c31:	xchg   edx,eax
  404c32:	xor    esp,DWORD PTR [ebx]
  404c34:	loope  0x404c77
  404c36:	mov    dl,0xaf
  404c38:	je     0x404c15
  404c3a:	mov    bh,0x1e
  404c3c:	loope  0x404c2e
  404c3e:	push   0x7131f957
  404c43:	in     al,dx
  404c44:	addr16 adc eax,0x98c7f38
  404c4a:	cmp    BYTE PTR [esp+eiz*2],ah
  404c4d:	sbb    ecx,eax
  404c4f:	and    ebx,DWORD PTR [ecx-0x3e]
  404c52:	jge    0x404cbe
  404c54:	ret    
  404c55:	push   ecx
  404c56:	imul   esp,DWORD PTR [ecx],0xcf69985f
  404c5c:	stos   BYTE PTR es:[edi],al
  404c5d:	std    
  404c5e:	outs   dx,BYTE PTR ds:[esi]
  404c5f:	retf   
  404c60:	shl    DWORD PTR [edx+0x3b],0xfa
  404c64:	ret    
  404c65:	jg     0x404c0c
  404c67:	cs jno 0x404c5b
  404c6a:	xor    al,0x46
  404c6c:	sbb    eax,0xa4e27911
  404c71:	aam    0x54
  404c73:	imul   ebp,eax,0x37eb9e34
  404c79:	mov    edi,0xa1f8ca5f
  404c7e:	addr16 int 0xa2
  404c81:	inc    eax
  404c82:	mov    eax,ds:0x8f96ca43
  404c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c89:	bound  esi,QWORD PTR [esi-0x3e]
  404c8c:	xchg   esp,eax
  404c8d:	in     eax,0x4e
  404c8f:	std    
  404c90:	clc    
  404c91:	mov    edx,gs
  404c93:	inc    esi
  404c94:	inc    esp
  404c95:	add    BYTE PTR [edx+ecx*2],0xb8
  404c99:	dec    ebp
  404c9a:	jg     0x404c5d
  404c9c:	add    BYTE PTR [ebx+0x4a],bh
  404c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca1:	arpl   WORD PTR [edx+esi*2],si
  404ca4:	push   esp
  404ca5:	daa    
  404ca6:	mov    ebx,0xc2dd0d75
  404cab:	iret   
  404cac:	jbe    0x404c50
  404cae:	push   ebp
  404caf:	add    al,0x93
  404cb1:	dec    ebx
  404cb2:	xor    al,0x5a
  404cb4:	shl    BYTE PTR [edi],1
  404cb6:	xor    ah,dl
  404cb8:	push   cs
  404cb9:	imul   ebp,DWORD PTR [esi+0x65],0x3b
  404cbd:	adc    DWORD PTR [ecx+0x10],edx
  404cc0:	in     al,dx
  404cc1:	push   esi
  404cc2:	(bad)
  404cc6:	ins    DWORD PTR es:[edi],dx
  404cc7:	inc    esi
  404cc8:	xchg   edx,eax
  404cc9:	popa   
  404cca:	call   0xd6e1:0xe4825aed
  404cd1:	dec    ebx
  404cd2:	pop    ebx
  404cd3:	iret   
  404cd4:	ja     0x404c7b
  404cd6:	pop    eax
  404cd7:	call   0x17ebf89b
  404cdc:	pop    esp
  404cdd:	adc    ecx,ebx
  404cdf:	xchg   ebx,eax
  404ce0:	dec    esp
  404ce1:	inc    ebp
  404ce2:	repnz dec ebp
  404ce4:	or     eax,0x881ac614
  404ce9:	push   ebp
  404cea:	out    0x1,al
  404cec:	mov    eax,0xa1e49687
  404cf1:	fdivr  DWORD PTR [ecx]
  404cf3:	pop    esi
  404cf4:	call   0xfc05c0de
  404cf9:	lds    eax,FWORD PTR [esi-0x12abb68f]
  404cff:	pop    ds
  404d00:	dec    edx
  404d01:	and    eax,0xdc57a62a
  404d06:	pop    ecx
  404d07:	adc    eax,0xe134407a
  404d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d0d:	test   eax,0x2b079724
  404d12:	imul   esp,DWORD PTR fs:[ebp-0x4d],0xaeb4132c
  404d1a:	sbb    DWORD PTR [edi],esp
  404d1c:	fmul   QWORD PTR [edx]
  404d1e:	stos   DWORD PTR es:[edi],eax
  404d1f:	lods   eax,DWORD PTR ds:[esi]
  404d20:	clc    
  404d21:	retf   0xb540
  404d24:	leave  
  404d25:	cvtdq2ps xmm1,xmm0
  404d28:	pop    es
  404d29:	retf   0xa672
  404d2c:	push   ebx
  404d2d:	jmp    0xb93baafc
  404d32:	int3   
  404d33:	nop
  404d34:	and    dh,0xb0
  404d37:	mov    bh,0x83
  404d39:	sbb    edi,ebp
  404d3b:	pop    esi
  404d3c:	ror    DWORD PTR [eax+ecx*8+0x1d],1
  404d40:	cmp    BYTE PTR [ecx+0x7d],dh
  404d43:	xor    al,BYTE PTR [edi+0x47]
  404d46:	xor    ecx,DWORD PTR [ecx]
  404d48:	nop
  404d49:	mov    WORD PTR [esi+0x52011844],ss
  404d4f:	inc    bx
  404d51:	xor    BYTE PTR [edi+eiz*2-0x5e],0xe8
  404d56:	inc    edi
  404d57:	rcr    BYTE PTR [edx-0x30],1
  404d5a:	xchg   ebx,eax
  404d5b:	in     al,dx
  404d5c:	ds xor esp,DWORD PTR ss:0x39f4d65e
  404d64:	or     ch,ch
  404d66:	fidiv  DWORD PTR [ebx+0x2f]
  404d69:	push   ebp
  404d6a:	into   
  404d6b:	mov    ecx,0xb833a17d
  404d70:	fwait
  404d71:	mov    esi,0xded2d46b
  404d76:	aas    
  404d77:	bound  edi,QWORD PTR [esi+0x51]
  404d7a:	aas    
  404d7b:	test   ebx,esp
  404d7d:	outs   dx,DWORD PTR ds:[esi]
  404d7e:	rcr    BYTE PTR ds:0xcbcf3141,0xd9
  404d85:	xchg   DWORD PTR [ecx-0x72],edx
  404d88:	int3   
  404d89:	arpl   WORD PTR es:[edi],ax
  404d8c:	sbb    ebx,DWORD PTR [ecx]
  404d8e:	sub    ecx,ebx
  404d90:	ret    0x4e45
  404d93:	aad    0x8a
  404d95:	inc    esp
  404d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d97:	xor    bh,BYTE PTR [ecx]
  404d99:	mov    al,BYTE PTR [edx+edx*2+0x1f]
  404d9d:	hlt    
  404d9e:	xchg   dh,bh
  404da0:	jns    0x404daf
  404da2:	in     eax,dx
  404da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da4:	in     al,0x36
  404da6:	mov    BYTE PTR [ebp-0x70],dh
  404da9:	add    eax,ebx
  404dab:	pop    esi
  404dac:	inc    ebx
  404dad:	daa    
  404dae:	popf   
  404daf:	cmp    BYTE PTR [edx+0xc],cl
  404db2:	in     eax,0x43
  404db4:	mov    ebx,0x81d852b6
  404db9:	das    
  404dba:	fdivr  QWORD PTR [edx+ecx*1]
  404dbd:	sub    edi,esp
  404dbf:	rcr    esi,1
  404dc1:	fcomp  DWORD PTR ss:[ebx-0xf]
  404dc5:	inc    esi
  404dc6:	icebp  
  404dc7:	dec    esi
  404dc8:	cmp    DWORD PTR [ecx],eax
  404dca:	cmp    BYTE PTR [eax-0x7a],0xec
  404dce:	xchg   edi,eax
  404dcf:	sub    edx,edx
  404dd1:	loopne 0x404d9e
  404dd3:	stos   DWORD PTR es:[edi],eax
  404dd4:	pop    ds
  404dd5:	retf   0xbaa0
  404dd8:	xchg   esi,eax
  404dd9:	xchg   BYTE PTR [edx],dl
  404ddb:	adc    esi,DWORD PTR [esi-0x3f19a12a]
  404de1:	xchg   esi,eax
  404de2:	arpl   ax,di
  404de4:	js     0x404db0
  404de6:	jle    0x404dcc
  404de8:	and    BYTE PTR [esi-0x47],ah
  404deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dec:	aaa    
  404ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dee:	sbb    BYTE PTR [edx+ebp*8],ch
  404df1:	sub    eax,0x70d4c0f1
  404df6:	nop
  404df7:	push   cs
  404df8:	int3   
  404df9:	xor    eax,0x6f229ed6
  404dfe:	fadd   st,st(5)
  404e00:	shr    BYTE PTR [eax+eax*2+0x21e12bf0],cl
  404e07:	aaa    
  404e08:	push   ebx
  404e09:	push   ss
  404e0a:	push   cs
  404e0b:	ret    
  404e0c:	xor    DWORD PTR [ebx],0x5f
  404e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e10:	sub    DWORD PTR [edx],0x33721848
  404e16:	fnstenv [esi-0x26]
  404e19:	adc    ah,ah
  404e1b:	jl     0x404e36
  404e1d:	and    al,0xaa
  404e1f:	rcl    BYTE PTR [ebp-0x110d46c3],1
  404e25:	dec    edi
  404e26:	test   DWORD PTR [edx-0x39aee629],esp
  404e2c:	push   0xffffffe9
  404e2e:	mov    eax,ds:0xa25ad4dc
  404e33:	mov    dl,0xb6
  404e35:	inc    ebp
  404e36:	inc    edx
  404e37:	rcr    ebp,0x76
  404e3a:	popf   
  404e3b:	add    DWORD PTR [edi+edi*2+0x1c],ecx
  404e3f:	addr16 sbb dh,dh
  404e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e43:	test   eax,0x815e466e
  404e48:	mov    dh,0x5e
  404e4a:	pop    esi
  404e4b:	dec    ebp
  404e4c:	lods   eax,DWORD PTR ds:[esi]
  404e4d:	int3   
  404e4e:	fisttp DWORD PTR [edx]
  404e50:	pop    edi
  404e51:	ret    0x2915
  404e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e55:	cmp    eax,0xee4a4056
  404e5a:	sub    dh,BYTE PTR [edx-0x45e5536f]
  404e60:	sbb    esi,DWORD PTR [edx-0x30]
  404e63:	gs sbb eax,edi
  404e66:	mov    ebx,0xdd7cb7e6
  404e6b:	mov    eax,ds:0x3ed6e501
  404e70:	add    al,0xab
  404e72:	dec    edi
  404e73:	dec    edi
  404e74:	call   0x709712bf
  404e79:	push   edx
  404e7a:	cli    
  404e7b:	sub    DWORD PTR [ecx-0x1e],ecx
  404e7e:	and    esp,0xd71ec632
  404e84:	aad    0xfd
  404e86:	adc    edx,DWORD PTR [ebx+0x75]
  404e89:	mov    edi,0xd220cda
  404e8e:	rol    BYTE PTR [ecx-0x6a96c7e4],1
  404e94:	fwait
  404e95:	xchg   BYTE PTR [ebx],bh
  404e97:	xlat   BYTE PTR ds:[ebx]
  404e98:	jge    0x404e90
  404e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e9b:	mov    edi,0x435fa14f
  404ea0:	xchg   ebx,eax
  404ea1:	jbe    0x404eb8
  404ea3:	dec    edx
  404ea4:	and    bl,bh
  404ea6:	or     cl,BYTE PTR es:[ebx+0x20]
  404eaa:	xor    edi,ebx
  404eac:	mov    ch,0x52
  404eae:	bound  edi,QWORD PTR [esp+ecx*1+0x43]
  404eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb3:	or     eax,DWORD PTR fs:[edi+0x3b153c55]
  404eba:	mov    DWORD PTR [edx],ebp
  404ebc:	push   esp
  404ebd:	or     edx,DWORD PTR [edx]
  404ebf:	dec    edi
  404ec0:	jbe    0x404e99
  404ec2:	ss icebp 
  404ec4:	ror    ebp,1
  404ec6:	cmp    DWORD PTR [edx+0xb],0xffffffa0
  404eca:	dec    edi
  404ecb:	cli    
  404ecc:	test   al,0xb9
  404ece:	inc    ebx
  404ecf:	daa    
  404ed0:	retf   
  404ed1:	push   eax
  404ed2:	dec    ebp
  404ed3:	mov    dl,BYTE PTR [edx-0x116d5dec]
  404ed9:	jbe    0x404eb1
  404edb:	call   0xe3df:0x428c04a5
  404ee2:	shl    DWORD PTR [ecx+0x51df71e7],1
  404ee8:	shl    ecx,cl
  404eea:	mov    bl,BYTE PTR [esp+esi*1]
  404eed:	in     al,0xff
  404eef:	dec    esi
  404ef0:	and    al,0xe1
  404ef2:	xor    al,0x91
  404ef4:	push   0x79fc5cba
  404ef9:	inc    edx
  404efa:	cmc    
  404efb:	out    dx,al
  404efc:	sar    BYTE PTR [edx+0x4b915830],0x17
  404f03:	ss inc ebx
  404f05:	dec    ebp
  404f06:	imul   esp,DWORD PTR [esi-0x75cd2b5e],0x9f242e44
  404f10:	mov    bh,0xd0
  404f12:	xchg   esi,eax
  404f13:	jmp    0x404f7f
  404f15:	shl    BYTE PTR [edi+0x34bdb346],0x9a
  404f1c:	loopne 0x404ec6
  404f1e:	dec    esp
  404f1f:	mov    edx,0xdc32fb3b
  404f24:	mov    dl,0xb5
  404f26:	(bad)  
  404f27:	push   esp
  404f28:	xchg   edx,eax
  404f29:	stos   DWORD PTR es:[edi],eax
  404f2a:	cmc    
  404f2b:	rcr    DWORD PTR [eax],cl
  404f2d:	(bad)  
  404f2e:	fimul  DWORD PTR [esi+0x69]
  404f31:	out    0x8c,al
  404f33:	mov    ds:0xd39650c1,eax
  404f38:	mov    ebp,0x937d0f99
  404f3d:	iret   
  404f3e:	lds    esp,FWORD PTR [esi+ebx*4+0x2d]
  404f42:	aad    0xe7
  404f44:	push   ds
  404f45:	jge    0x404eff
  404f47:	(bad)  
  404f48:	daa    
  404f49:	dec    ebx
  404f4a:	into   
  404f4b:	icebp  
  404f4c:	stc    
  404f4d:	dec    esi
  404f4e:	clc    
  404f4f:	sahf   
  404f50:	mul    ch
  404f52:	push   es
  404f53:	test   al,0xc0
  404f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f56:	xchg   edx,eax
  404f57:	inc    ebp
  404f58:	and    BYTE PTR [ecx-0x6f],al
  404f5b:	and    edi,DWORD PTR [eax-0x1548beab]
  404f61:	test   al,0x90
  404f63:	pop    ds
  404f64:	mov    ebp,0xe8903ff4
  404f69:	loope  0x404f2c
  404f6b:	jecxz  0x404fdd
  404f6d:	xlat   BYTE PTR ds:[ebx]
  404f6e:	mov    cl,0x0
  404f70:	enter  0x2243,0xda
  404f74:	cmp    eax,0x11a3d1b
  404f79:	sti    
  404f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f7b:	jle    0x404f48
  404f7d:	or     al,0x87
  404f7f:	in     eax,dx
  404f80:	mov    dl,bh
  404f82:	lock push ebp
  404f84:	inc    edx
  404f85:	(bad)  
  404f86:	aad    0x92
  404f88:	sub    al,0x64
  404f8a:	pop    eax
  404f8b:	mov    ?,WORD PTR [edi+ebx*2+0x223f0561]
  404f92:	or     ah,BYTE PTR [edx]
  404f94:	mov    edi,0x68a30844
  404f99:	sahf   
  404f9a:	call   0x4c6f24bf
  404f9f:	adc    dl,BYTE PTR [ebx+eax*1+0x54]
  404fa3:	aad    0x24
  404fa5:	adc    al,cl
  404fa7:	dec    esi
  404fa8:	popa   
  404fa9:	inc    esp
  404faa:	inc    ebx
  404fab:	in     al,dx
  404fac:	ins    DWORD PTR es:[edi],dx
  404fad:	jnp    0x405000
  404faf:	(bad)  
  404fb0:	in     eax,dx
  404fb1:	fldenv [edi-0x353b376]
  404fb7:	mov    bl,0x91
  404fb9:	retf   
  404fba:	pusha  
  404fbb:	fnstsw WORD PTR [ecx+0x4]
  404fbe:	shl    BYTE PTR [bp+si+0x7ce],0x5f
  404fc4:	mov    DWORD PTR [eax],ebx
  404fc6:	push   cs
  404fc7:	in     al,0xdb
  404fc9:	mov    eax,ds:0x58fdca49
  404fce:	sbb    cl,BYTE PTR [esi+0xb]
  404fd1:	mov    ebx,0x5639a2a3
  404fd6:	cmp    eax,0x6ffb6ca0
  404fdb:	dec    ebp
  404fdc:	mov    esi,ecx
  404fde:	loope  0x40501e
  404fe0:	arpl   WORD PTR [edi+0x262f8404],bx
  404fe6:	sbb    BYTE PTR ds:0x5d5b128b,ch
  404fec:	(bad)  
  404fed:	retf   0xee09
  404ff0:	ret    0xdd25
  404ff3:	scas   eax,DWORD PTR es:[edi]
  404ff4:	pop    ebx
  404ff5:	sbb    al,0xe4
  404ff7:	ins    BYTE PTR es:[edi],dx
  404ff8:	push   cs
  404ff9:	sahf   
  404ffa:	xchg   DWORD PTR [esi],ebp
  404ffc:	push   eax
  404ffd:	sbb    BYTE PTR [esi],dh
  404fff:	and    BYTE PTR [eax],dh
  405001:	xchg   esi,eax
  405002:	xor    al,0x37
  405004:	mov    esi,0x1345e453
  405009:	jne    0x405071
  40500b:	into   
  40500c:	cmp    BYTE PTR [edi+0x41eae627],dl
  405012:	adc    al,0x61
  405014:	add    ecx,esp
  405016:	ss std 
  405018:	sub    BYTE PTR [edx-0x5f],bl
  40501b:	mov    eax,0xf5f328e2
  405020:	fs adc dl,al
  405023:	pop    eax
  405024:	cmp    edx,DWORD PTR [ebp+0xd6754f9]
  40502a:	aad    0x55
  40502c:	xchg   esp,eax
  40502d:	ror    BYTE PTR [ebp-0x62a69dc6],0xd3
  405034:	mov    esp,ecx
  405036:	xchg   DWORD PTR [esi],ebx
  405038:	leave  
  405039:	aam    0x1e
  40503b:	int3   
  40503c:	scas   eax,DWORD PTR es:[edi]
  40503d:	pop    edi
  40503e:	sub    dl,al
  405040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405041:	mov    DWORD PTR [edx+eax*8],0x34993924
  405048:	inc    esp
  405049:	cs adc eax,0x189319a1
  40504f:	test   eax,0x5f7d3d99
  405054:	dec    eax
  405055:	iret   
  405056:	out    dx,eax
  405057:	loop   0x4050b8
  405059:	inc    eax
  40505a:	inc    esp
  40505b:	fxch   st(5)
  40505e:	stos   DWORD PTR es:[edi],eax
  40505f:	fistp  QWORD PTR [esi+0x79150e39]
  405065:	std    
  405066:	es dec edi
  405068:	outs   dx,BYTE PTR ds:[esi]
  405069:	int    0xf5
  40506b:	xchg   esi,eax
  40506c:	loopne 0x40503a
  40506e:	retf   
  40506f:	int3   
  405070:	stos   DWORD PTR es:[edi],eax
  405071:	out    dx,ax
  405073:	test   ecx,eax
  405075:	push   eax
  405076:	mov    BYTE PTR [ecx-0x2d],bl
  405079:	xor    al,0x47
  40507b:	adc    edx,DWORD PTR [esi-0x16]
  40507e:	jo     0x4050bc
  405080:	xor    edx,DWORD PTR ds:0x6f1db8ac
  405086:	(bad)
  405089:	int3   
  40508a:	mov    ebp,0xac649832
  40508f:	test   al,0xd4
  405091:	adc    bh,BYTE PTR [esp+eax*8+0x1b]
  405095:	xchg   ebx,eax
  405096:	jecxz  0x405084
  405098:	and    BYTE PTR [eax],bl
  40509a:	sahf   
  40509b:	mov    esp,0xa22655d3
  4050a0:	mov    ds:0xaacd1a85,al
  4050a5:	sub    eax,0xc0d1ada2
  4050aa:	sbb    esi,ebp
  4050ac:	sbb    al,0x29
  4050ae:	jae    0x4050ad
  4050b0:	inc    ebx
  4050b1:	sub    al,0xe5
  4050b3:	xchg   DWORD PTR [eax],esi
  4050b5:	xchg   esi,eax
  4050b6:	mov    ds:0x9e97f0c4,al
  4050bb:	(bad)  
  4050bc:	(bad)  [ebp-0x1]
  4050bf:	(bad)  
  4050c0:	into   
  4050c1:	sar    DWORD PTR [ebp+0x16],cl
  4050c4:	js     0x405083
  4050c6:	ja     0x405127
  4050c8:	sbb    bl,0xc3
  4050cb:	out    dx,al
  4050cc:	fwait
  4050cd:	iret   
  4050ce:	and    al,0xa6
  4050d0:	inc    ebp
  4050d1:	mov    esp,DWORD PTR [edi+0x4b]
  4050d4:	cmp    BYTE PTR [edx+0x50fdd8e9],dh
  4050da:	mov    ch,0x5f
  4050dc:	imul   esi,DWORD PTR [edi-0x2c],0x605eb231
  4050e3:	push   eax
  4050e4:	imul   si,WORD PTR [ebx-0x2b],0x83ca
  4050ea:	mov    edx,0xa3251b70
  4050ef:	(bad)  
  4050f0:	pop    ebp
  4050f1:	cdq    
  4050f2:	call   0x71ae:0x5719ee81
  4050f9:	cmp    al,0xd8
  4050fb:	mov    ebx,0x4e8790bb
  405100:	xor    BYTE PTR [esi+0x5d],ch
  405103:	dec    edi
  405104:	dec    ebx
  405105:	mov    ?,WORD PTR [eax+0x3a2c83fe]
  40510b:	div    BYTE PTR [edi]
  40510d:	jge    0x40513c
  40510f:	pop    ebx
  405110:	lods   al,BYTE PTR ds:[esi]
  405111:	xchg   esi,eax
  405112:	mov    cl,0x9
  405114:	push   ebp
  405115:	add    eax,0x977e72c0
  40511a:	into   
  40511b:	add    DWORD PTR [eax],edx
  40511d:	out    dx,al
  40511e:	retf   0xa010
  405121:	xor    cl,ah
  405123:	das    
  405124:	mov    ch,0x4a
  405126:	and    eax,edi
  405128:	mov    dh,0xb5
  40512a:	cmp    al,0x7c
  40512c:	pushf  
  40512d:	loope  0x405105
  40512f:	inc    edx
  405130:	imul   esi,DWORD PTR [ecx],0xfc32bc33
  405136:	fidiv  WORD PTR [ecx]
  405138:	shl    DWORD PTR [ebx],0x44
  40513b:	sbb    esi,DWORD PTR [ecx-0x47315c3f]
  405141:	and    eax,0xbcf2c74f
  405146:	sar    DWORD PTR [esp+edx*1+0x1e],cl
  40514a:	pop    ecx
  40514b:	jnp    0x4051b6
  40514d:	jno    0x4051a5
  40514f:	es dec ebp
  405151:	push   ebx
  405152:	ret    0xdaf5
  405155:	push   edi
  405156:	or     ch,ah
  405158:	xor    BYTE PTR [esp+eax*1+0x16580ca6],dl
  40515f:	jmp    0x8704:0xda8e8a85
  405166:	dec    ecx
  405167:	addr16 fmul st,st(1)
  40516a:	ret    0xb8a5
  40516d:	jns    0x405168
  40516f:	popf   
  405170:	call   0x8eea:0xf50f09e5
  405177:	rol    ah,0x32
  40517a:	sar    BYTE PTR [edx-0x49],0x36
  40517e:	test   BYTE PTR [eax-0x51775c79],0x7a
  405185:	bound  edi,QWORD PTR [ebp+0x53473c13]
  40518b:	jmp    0x1f33:0xf2cfe0a7
  405192:	jb     0x40511a
  405194:	sbb    DWORD PTR [ebx-0x17],edx
  405197:	jmp    0x40517e
  405199:	(bad)  
  40519a:	lock daa 
  40519c:	repnz fld QWORD PTR [esi+0x3360c684]
  4051a3:	jmp    0x95d0fb48
  4051a8:	outs   dx,BYTE PTR ds:[esi]
  4051a9:	out    dx,al
  4051aa:	scas   al,BYTE PTR es:[edi]
  4051ab:	in     eax,dx
  4051ac:	push   ss
  4051ad:	imul   ebx,DWORD PTR [ebp+0x77],0xffffffd1
  4051b1:	mov    edx,0x7abac3d4
  4051b6:	fild   QWORD PTR [ecx-0x50]
  4051b9:	pop    esi
  4051ba:	cdq    
  4051bb:	pop    edi
  4051bc:	sub    BYTE PTR [esi],dl
  4051be:	fild   QWORD PTR [esi-0x19]
  4051c1:	sbb    BYTE PTR [ebx],cl
  4051c3:	pop    ds
  4051c4:	inc    ebp
  4051c5:	ins    BYTE PTR es:[edi],dx
  4051c6:	adc    BYTE PTR [eax+0x50884c7e],0x2a
  4051cd:	mov    bl,0xaf
  4051cf:	enter  0xa70c,0x79
  4051d3:	inc    esp
  4051d4:	(bad)  
  4051d5:	retf   
  4051d6:	rcl    BYTE PTR [ebp+0x15],1
  4051d9:	push   es
  4051da:	loope  0x405246
  4051dc:	mov    eax,ds:0xa61bf2a2
  4051e1:	rcl    DWORD PTR [esi-0x18af3836],cl
  4051e7:	gs push cs
  4051e9:	hlt    
  4051ea:	mov    bh,0xd2
  4051ec:	test   eax,0x4877ab38
  4051f1:	inc    DWORD PTR [ebx+0x45]
  4051f4:	inc    esp
  4051f5:	daa    
  4051f6:	jne    0x4051e7
  4051f8:	sub    BYTE PTR [edi-0x725ee74d],bh
  4051fe:	icebp  
  4051ff:	add    eax,0x8c3651b
  405204:	call   0xb83d:0xb2e061bd
  40520b:	mov    ah,0xe8
  40520d:	and    eax,eax
  40520f:	jbe    0x4051f1
  405211:	add    al,0x2f
  405213:	and    al,BYTE PTR [ebp+0x29619dc7]
  405219:	aas    
  40521a:	and    ecx,edi
  40521c:	xor    al,BYTE PTR [edx+0x7fe209f3]
  405222:	pop    ebp
  405223:	loop   0x40527f
  405225:	add    esi,esp
  405227:	mov    al,ds:0xce090bea
  40522c:	jecxz  0x405237
  40522e:	jbe    0x405205
  405230:	add    BYTE PTR ds:0x7b22e79d,dh
  405236:	test   DWORD PTR ds:0x54385b26,0x5ec334a0
  405240:	jae    0x405224
  405242:	(bad)  [esi]
  405244:	pop    ecx
  405245:	sti    
  405246:	mov    eax,ds:0x762a8594
  40524b:	adc    dh,bl
  40524d:	clc    
  40524e:	fadd   st,st(2)
  405250:	sti    
  405251:	mov    edi,0xed3a006f
  405256:	test   al,0x6
  405258:	rcr    BYTE PTR [edi],cl
  40525a:	inc    ebp
  40525b:	jg     0x405274
  40525d:	sub    al,0xb
  40525f:	or     esi,DWORD PTR [edx+0x67449151]
  405265:	sahf   
  405266:	xor    dl,BYTE PTR [ecx-0x561bf43d]
  40526c:	scas   eax,DWORD PTR es:[edi]
  40526d:	push   ebp
  40526e:	xlat   BYTE PTR ds:[ebx]
  40526f:	mov    ecx,0xa5797a49
  405274:	icebp  
  405275:	push   edi
  405276:	or     ch,BYTE PTR [eax+ecx*1]
  405279:	mov    eax,0x2227567d
  40527e:	icebp  
  40527f:	mov    esi,0xf62b0223
  405284:	je     0x4052e7
  405286:	xchg   ebp,eax
  405287:	or     esp,DWORD PTR [ebx]
  405289:	loopne 0x40525c
  40528b:	mov    DWORD PTR [esi+0x40],ecx
  40528e:	ja     0x4052f1
  405290:	pop    ds
  405291:	fnstsw WORD PTR [eax]
  405293:	adc    al,0x39
  405295:	shr    DWORD PTR [eax-0xa],1
  405298:	fnstenv [esi]
  40529a:	push   eax
  40529b:	mov    ch,0x96
  40529d:	or     al,0x48
  40529f:	in     al,dx
  4052a0:	xor    ecx,ebx
  4052a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a3:	iret   
  4052a4:	and    eax,0x54860490
  4052a9:	sbb    al,0x76
  4052ab:	into   
  4052ac:	mov    dl,0x41
  4052ae:	pusha  
  4052af:	in     al,0x73
  4052b1:	pop    edx
  4052b2:	dec    esi
  4052b3:	clc    
  4052b4:	mov    esp,0xfccfb891
  4052b9:	in     eax,dx
  4052ba:	mov    ds:0xf7f50b7,ax
  4052c0:	scas   eax,DWORD PTR es:[edi]
  4052c1:	mov    dh,0x9c
  4052c3:	out    0xb,al
  4052c5:	stc    
  4052c6:	mov    ch,0xd6
  4052c8:	push   0xe
  4052ca:	and    eax,0x40811a71
  4052cf:	arpl   WORD PTR [esi],ax
  4052d1:	cmp    al,0x2f
  4052d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d4:	push   edx
  4052d5:	stc    
  4052d6:	jle    0x405310
  4052d8:	stos   DWORD PTR es:[edi],eax
  4052d9:	mov    ch,0x57
  4052db:	inc    ebp
  4052dc:	mov    edx,0x4ca304b8
  4052e1:	popf   
  4052e2:	xchg   ecx,eax
  4052e3:	repnz imul ebp,DWORD PTR [edi+0x4c],0x33
  4052e8:	(bad)  [esi]
  4052ea:	push   ecx
  4052eb:	and    BYTE PTR [edi],bl
  4052ed:	ins    BYTE PTR es:[edi],dx
  4052ee:	es inc edi
  4052f0:	xlat   BYTE PTR ds:[ebx]
  4052f1:	cmp    BYTE PTR [ebp-0x7c87d7b7],0x58
  4052f8:	dec    esi
  4052f9:	jp     0x4052d5
  4052fb:	mov    edx,0xb4a3f4f2
  405300:	or     DWORD PTR [edi+edi*2-0x5e8c539c],ecx
  405307:	xchg   ebp,eax
  405308:	sbb    edi,ebx
  40530a:	add    esp,edi
  40530c:	mov    dl,0x76
  40530e:	inc    eax
  40530f:	mov    dl,ah
  405311:	leave  
  405312:	cs das 
  405314:	xor    al,0x3e
  405316:	mov    ch,0x71
  405318:	mov    ds:0x75d9f32d,eax
  40531d:	sbb    al,0xcc
  40531f:	div    BYTE PTR ds:0xcffcd7b5
  405325:	arpl   ax,dx
  405327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405328:	adc    al,0xd1
  40532a:	dec    ah
  40532c:	icebp  
  40532d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40532e:	inc    edx
  40532f:	call   0x927c:0x5bb414c2
  405336:	sbb    dh,BYTE PTR [ebx-0x32bb865b]
  40533c:	mov    al,0xb6
  40533e:	aam    0x5f
  405340:	pop    edx
  405341:	fldenv [eax-0x408cd75f]
  405347:	enter  0xafd,0xfc
  40534b:	cmp    DWORD PTR [edx+0x72],edi
  40534e:	mov    dh,0xbb
  405350:	and    edi,edx
  405352:	sar    al,cl
  405354:	mov    cl,0xe1
  405356:	cli    
  405357:	ret    0xfe8
  40535a:	inc    eax
  40535b:	in     eax,0x79
  40535d:	pop    ebp
  40535e:	mov    al,0xee
  405360:	cli    
  405361:	or     eax,0xc458d56b
  405366:	sub    edx,ebx
  405368:	sti    
  405369:	add    bh,0x15
  40536c:	sbb    DWORD PTR [eax-0x6],0x62
  405370:	pushf  
  405371:	push   esi
  405372:	cmp    eax,0xfd5a71fb
  405377:	adc    BYTE PTR [edx+0x7f07d6e3],ch
  40537d:	(bad)  
  40537e:	mov    ds:0xd369ef9c,al
  405383:	div    BYTE PTR [edx+0x23]
  405386:	into   
  405387:	mov    edi,0x97f945f5
  40538c:	dec    ebp
  40538d:	fcomip st,st(7)
  40538f:	xchg   ebp,eax
  405390:	inc    ebx
  405391:	pop    ds
  405392:	mov    bh,BYTE PTR [edx-0x4dd771c5]
  405398:	sbb    edi,DWORD PTR [esi-0x6d]
  40539b:	dec    ebx
  40539c:	pop    ds
  40539d:	mov    fs,eax
  40539f:	mov    al,0x43
  4053a1:	out    dx,al
  4053a2:	dec    ecx
  4053a3:	out    0x12,al
  4053a5:	xor    DWORD PTR [edx],ecx
  4053a7:	out    dx,eax
  4053a8:	test   BYTE PTR [ecx],dh
  4053aa:	pop    ds
  4053ab:	rol    BYTE PTR ds:0xff1d9656,1
  4053b1:	mov    al,0xb
  4053b3:	cmp    bl,BYTE PTR [ecx-0x4b]
  4053b6:	(bad)  
  4053b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053b9:	repnz test BYTE PTR [edi-0x1b5daf25],dl
  4053c0:	fwait
  4053c1:	div    cl
  4053c3:	and    edi,esi
  4053c5:	mov    eax,0x1eb562a1
  4053ca:	jl     0x4053e2
  4053cc:	sbb    dh,bh
  4053ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053cf:	in     eax,0x33
  4053d1:	add    ebp,DWORD PTR [edi]
  4053d3:	out    dx,al
  4053d4:	stc    
  4053d5:	enter  0x5ed,0xa2
  4053d9:	adc    DWORD PTR [edx],eax
  4053db:	xor    edi,edx
  4053dd:	cmc    
  4053de:	xchg   ebx,eax
  4053df:	jle    0x4053d5
  4053e1:	add    al,0x14
  4053e3:	inc    edi
  4053e4:	xchg   esp,eax
  4053e5:	and    al,BYTE PTR [edi+0x555547ba]
  4053eb:	or     BYTE PTR [ebx-0x63],0xa3
  4053ef:	les    edx,FWORD PTR [ebx+edx*1-0x39a2d96f]
  4053f6:	retf   
  4053f7:	pop    ecx
  4053f8:	nop
  4053f9:	adc    al,0xb1
  4053fb:	cmova  ebp,ecx
  4053fe:	add    BYTE PTR [ebx-0x2],0x13
  405402:	push   edi
  405403:	(bad)  
  405404:	neg    BYTE PTR [ebx]
  405406:	pop    esi
  405407:	add    eax,0x9fa97826
  40540c:	push   ds
  40540d:	push   es
  40540e:	mov    gs,WORD PTR [edx-0x27]
  405411:	xchg   DWORD PTR [esi+0x83b4881],ebx
  405417:	jmp    0xcd3a:0x686f4f3
  40541e:	out    0x4c,eax
  405420:	int3   
  405421:	sbb    al,bh
  405423:	idiv   BYTE PTR [esi]
  405425:	jle    0x40548e
  405427:	xor    DWORD PTR [esi+0x6b],ebx
  40542a:	aam    0xb4
  40542c:	retf   0x8cd0
  40542f:	cdq    
  405430:	sbb    dh,BYTE PTR [eax-0x1d]
  405433:	popf   
  405434:	sbb    bh,0x19
  405437:	shr    DWORD PTR [esi+0x2a],0x37
  40543b:	adc    DWORD PTR [ecx+0x251f26ee],0xfcf6741c
  405445:	not    BYTE PTR [edi-0xa]
  405448:	loop   0x405494
  40544a:	add    edi,DWORD PTR [eax-0x536a0c08]
  405450:	jecxz  0x405408
  405452:	test   eax,0x224dd9a
  405457:	lahf   
  405458:	pusha  
  405459:	dec    BYTE PTR [ebx-0x1616809]
  40545f:	sub    DWORD PTR [edi+0x5b],0x31
  405463:	cmp    BYTE PTR [ecx+0x7ceb92c2],al
  405469:	mov    bl,0xc2
  40546b:	int    0x7d
  40546d:	test   eax,0xa51cf527
  405472:	dec    ebx
  405473:	push   edx
  405474:	sub    al,0x18
  405476:	popf   
  405477:	jle    0x405498
  405479:	das    
  40547a:	push   esp
  40547b:	cmp    ah,ah
  40547d:	ss inc ebx
  40547f:	dec    DWORD PTR es:[eax-0x23d10d72]
  405486:	pop    edi
  405487:	test   al,0xa3
  405489:	ror    BYTE PTR ds:0x6096399a,0xf1
  405490:	int3   
  405491:	or     eax,0x117f2d79
  405496:	popf   
  405497:	add    dl,BYTE PTR [ecx+ecx*4+0x50ae23a9]
  40549e:	jnp    0x405459
  4054a0:	mov    ah,0xb9
  4054a2:	scas   al,BYTE PTR es:[edi]
  4054a3:	out    dx,eax
  4054a4:	mov    al,ds:0xbb8955e3
  4054a9:	jnp    0x4054da
  4054ab:	jnp    0x405521
  4054ad:	gs pop ds
  4054af:	jl     0x4054d6
  4054b1:	xchg   edx,eax
  4054b2:	ss scas eax,DWORD PTR es:[edi]
  4054b4:	jo     0x405534
  4054b6:	adc    dl,ch
  4054b8:	add    DWORD PTR [edi+ebp*1+0x5a9a5af0],0x738027da
  4054c3:	cmp    ebx,ebp
  4054c5:	or     al,0xa3
  4054c7:	inc    esp
  4054c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c9:	mov    esp,DWORD PTR [edi]
  4054cb:	xchg   esi,eax
  4054cc:	jecxz  0x4054c3
  4054ce:	sub    esi,ecx
  4054d0:	adc    eax,0x66cd8519
  4054d5:	(bad)  
  4054d6:	mov    bl,0x3e
  4054d8:	sub    BYTE PTR [eax+0x750e8a8a],al
  4054de:	ret    0x8718
  4054e1:	test   al,0xc3
  4054e3:	jno    0x4054d8
  4054e5:	mov    edi,DWORD PTR [eax-0x1b]
  4054e8:	cmp    DWORD PTR [esi+0x2ff7d40],esp
  4054ee:	jmp    0x86ab:0xc3a88e99
  4054f5:	and    BYTE PTR [ecx+0x3c],cl
  4054f8:	push   esi
  4054f9:	test   al,0x1c
  4054fb:	addr16 adc eax,0xc6120557
  405501:	or     BYTE PTR [edx+0x54],ch
  405504:	loopne 0x4054b5
  405506:	rcr    BYTE PTR [edx+0x5d9d8f51],1
  40550c:	jp     0x405530
  40550e:	pop    ebp
  40550f:	(bad)  
  405510:	jmp    0x405568
  405512:	es pop edi
  405514:	fisttp DWORD PTR [edi]
  405516:	clc    
  405517:	jo     0x405540
  405519:	sahf   
  40551a:	jnp    0x4054a1
  40551c:	mov    al,ds:0x808e1fa0
  405521:	sub    ch,dh
  405523:	imul   esp,edx,0x8
  405526:	test   al,0x91
  405528:	mov    cl,0xd3
  40552a:	stos   DWORD PTR es:[edi],eax
  40552b:	xchg   esi,eax
  40552c:	hlt    
  40552d:	inc    edi
  40552e:	js     0x40559b
  405530:	or     DWORD PTR [esi+0x7e9fe336],ebx
  405536:	and    al,0xe0
  405538:	push   ebp
  405539:	push   ss
  40553a:	xor    al,0xff
  40553c:	inc    ebx
  40553d:	add    ebp,esp
  40553f:	mov    eax,0xfb180a65
  405544:	pop    edx
  405545:	mov    eax,0x80721d94
  40554a:	pop    edi
  40554b:	jmp    0x40555f
  40554d:	mov    edi,0x5757537e
  405552:	jecxz  0x405558
  405554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405555:	je     0x405592
  405557:	setb   BYTE PTR [eax-0x31beb738]
  40555e:	inc    edi
  40555f:	pop    esi
  405560:	loopne 0x4055be
  405562:	mov    WORD PTR [edx+0x16ebed7d],es
  405568:	(bad)  
  405569:	inc    esp
  40556a:	in     al,dx
  40556b:	add    al,0x93
  40556d:	sub    ecx,DWORD PTR [esp+ebp*1]
  405570:	je     0x40550a
  405572:	icebp  
  405573:	xchg   esi,eax
  405574:	fdivr  QWORD PTR [ecx]
  405576:	das    
  405577:	cmp    DWORD PTR [edx+esi*2+0x167f31b2],ebp
  40557e:	cmp    ecx,DWORD PTR [eax]
  405580:	dec    ecx
  405581:	pop    ss
  405582:	inc    eax
  405583:	sbb    ecx,edx
  405585:	xor    bh,0xe
  405588:	daa    
  405589:	jae    0x405536
  40558b:	rdpmc  
  40558d:	pop    es
  40558e:	jae    0x4055e2
  405590:	adc    eax,ebx
  405592:	mov    ds,WORD PTR [edi]
  405594:	(bad)  
  405595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405596:	adc    DWORD PTR [edi+0x23],0xcab744d6
  40559d:	add    bp,WORD PTR [edi+0x4d92cb9d]
  4055a4:	push   0x6a
  4055a6:	call   0x8ee7ab73
  4055ab:	scas   al,BYTE PTR es:[edi]
  4055ac:	add    eax,0x370bfd75
  4055b1:	out    dx,eax
  4055b2:	cmp    dl,BYTE PTR [ecx-0x3]
  4055b5:	call   FWORD PTR ds:0x46eb86c8
  4055bb:	jnp    0x40561b
  4055bd:	sbb    edx,ebp
  4055bf:	dec    eax
  4055c0:	and    eax,0x1c790616
  4055c5:	mov    ds:0x6ecaf454,al
  4055ca:	adc    al,cl
  4055cc:	ret    0xbd28
  4055cf:	scas   al,BYTE PTR es:[edi]
  4055d0:	std    
  4055d1:	ror    BYTE PTR [ebx-0x3f],cl
  4055d4:	push   ecx
  4055d5:	bound  ebp,QWORD PTR [ebp-0x5d]
  4055d8:	mov    dh,0xe5
  4055da:	cmp    ebx,DWORD PTR ds:0xed978a4d
  4055e0:	cli    
  4055e1:	jmp    0x2c75d6d4
  4055e6:	xor    eax,0x6f6babed
  4055eb:	pop    ebp
  4055ec:	xchg   ebx,eax
  4055ed:	dec    ecx
  4055ee:	ror    DWORD PTR [esi-0x3f47d2ad],0xe8
  4055f5:	retf   
  4055f6:	not    ebp
  4055f8:	mov    al,al
  4055fa:	and    eax,0x32decd3a
  4055ff:	jge    0x405598
  405601:	xchg   ebp,eax
  405602:	jl     0x4055e8
  405604:	cs add eax,0xfece489f
  40560a:	lods   al,BYTE PTR ds:[esi]
  40560b:	mov    ax,ds:0xf31861c
  405611:	pop    es
  405612:	mov    bl,0x27
  405614:	mov    al,ds:0x7cc7ef65
  405619:	mov    al,ds:0x56557c30
  40561e:	(bad)  
  405620:	hlt    
  405621:	xchg   edi,eax
  405622:	push   ecx
  405623:	ja     0x4055bc
  405625:	stc    
  405626:	add    bl,al
  405628:	pop    edi
  405629:	lods   eax,DWORD PTR ds:[esi]
  40562a:	inc    edi
  40562b:	fstp   QWORD PTR [eax]
  40562d:	and    esp,DWORD PTR fs:[eax+0x2bb3ef6e]
  405634:	aas    
  405635:	shr    DWORD PTR [esi],1
  405637:	jno    0x405637
  405639:	inc    ebx
  40563a:	hlt    
  40563b:	out    0xa8,eax
  40563d:	mov    eax,ds:0x15d500bb
  405642:	es mov edx,0x327636f5
  405648:	mov    ss,dx
  40564b:	mov    al,0xc5
  40564d:	pop    esp
  40564e:	fdivrp st(6),st
  405650:	adc    al,0x5a
  405652:	mov    dl,0x1e
  405654:	xchg   esp,eax
  405655:	loopne 0x40569c
  405657:	outs   dx,BYTE PTR ds:[esi]
  405658:	nop
  405659:	push   eax
  40565a:	test   eax,0x52f3e9eb
  40565f:	sbb    ecx,edi
  405661:	not    DWORD PTR [esi+0x23ee65bd]
  405667:	dec    edx
  405668:	push   ebx
  405669:	lds    edi,FWORD PTR [esi+0x3b]
  40566c:	pop    eax
  40566d:	lea    esi,[ebx-0xb3064d9]
  405673:	jmp    0xd1583fe
  405678:	loope  0x405693
  40567a:	add    al,0x5b
  40567c:	adc    eax,ecx
  40567e:	(bad)
  405681:	jb     0x4056c5
  405683:	xchg   ecx,eax
  405684:	push   ss
  405685:	or     DWORD PTR ds:0x9765146f,0xfffffffc
  40568c:	pushf  
  40568d:	sar    DWORD PTR [ecx+ebx*8+0x4c],0x37
  405692:	cmp    eax,0xb009ee79
  405697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405698:	push   ecx
  405699:	mov    BYTE PTR [edx],dh
  40569b:	ret    0xee30
  40569e:	ss jmp 0x4056aa
  4056a1:	in     al,dx
  4056a2:	loopne 0x4056d2
  4056a4:	mov    ch,0x3d
  4056a6:	dec    esi
  4056a7:	fadd   QWORD PTR [ebp+0x24fc69f6]
  4056ad:	jge    0x4056ff
  4056af:	mul    edi
  4056b1:	sub    dh,bl
  4056b3:	out    0x5b,eax
  4056b5:	adc    edi,esi
  4056b7:	cld    
  4056b8:	(bad)  
  4056b9:	mov    WORD PTR [edi+0x7b],es
  4056bc:	mov    eax,ebx
  4056be:	ds pop esi
  4056c0:	out    0xa1,al
  4056c2:	push   eax
  4056c3:	mov    ecx,0xebdd1ee6
  4056c8:	or     al,0x4b
  4056ca:	mov    DWORD PTR [esp+eiz*4-0x1674e7a2],esp
  4056d1:	and    al,0x23
  4056d3:	neg    DWORD PTR [esi+esi*2]
  4056d6:	and    DWORD PTR [esi-0x5f197769],0x71
  4056dd:	sub    edx,DWORD PTR [edx-0x71852cde]
  4056e3:	ror    DWORD PTR [eax],0x93
  4056e6:	es leave 
  4056e8:	int3   
  4056e9:	adc    DWORD PTR [edi-0x1a],ebp
  4056ec:	std    
  4056ed:	sti    
  4056ee:	push   edx
  4056ef:	sub    BYTE PTR [ecx-0x45],0x72
  4056f3:	dec    ebx
  4056f4:	aas    
  4056f5:	adc    esp,DWORD PTR [edx]
  4056f7:	mov    esi,0xc6bbab0
  4056fc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4056fe:	xor    edi,ebp
  405700:	or     ah,dh
  405702:	inc    edi
  405703:	retf   0x4a57
  405706:	xchg   esi,eax
  405707:	push   ebp
  405708:	ss ins BYTE PTR es:[edi],dx
  40570a:	imul   ebx,DWORD PTR [edi],0x85ea9d12
  405710:	(bad)  
  405711:	clc    
  405712:	cwde   
  405713:	pop    ds
  405714:	dec    edx
  405715:	mov    esp,0x671eb6b5
  40571a:	(bad)  
  40571b:	retf   0xcf0f
  40571e:	pop    ebx
  40571f:	ret    
  405720:	push   edi
  405721:	repnz into 
  405723:	inc    esi
  405724:	int3   
  405725:	test   DWORD PTR [eax-0x1550e41b],ebx
  40572b:	xchg   esp,eax
  40572c:	pop    ds
  40572d:	cmp    DWORD PTR [edi+ecx*8+0x4a],edi
  405731:	jmp    0xebe1f9f2
  405736:	fwait
  405737:	and    BYTE PTR [edx+0x28],dl
  40573a:	mov    eax,ds:0x256df93f
  40573f:	jae    0x405733
  405741:	dec    esp
  405742:	int3   
  405743:	sbb    ebp,eax
  405745:	aam    0x6c
  405747:	pop    esi
  405748:	mov    esi,0x86d31f13
  40574d:	hlt    
  40574e:	in     al,dx
  40574f:	cld    
  405750:	sbb    ebx,DWORD PTR [edi+0x10bf17da]
  405756:	sub    bh,bh
  405758:	ja     0x40579f
  40575a:	mov    ch,0xd7
  40575c:	iret   
  40575d:	ja     0x405760
  40575f:	add    eax,0xf3b7de30
  405764:	fistp  WORD PTR [eax+eax*4]
  405767:	test   dl,dl
  405769:	imul   ebx,ebp,0x56
  40576c:	mov    al,0xf0
  40576e:	or     DWORD PTR [ebx+edi*8+0x3a],0xfbb017
  405776:	add    ah,BYTE PTR ds:0xfc1dfc8f
  40577c:	int    0xbf
  40577e:	mov    esi,0x3be16be4
  405783:	shr    esp,1
  405785:	or     al,0x51
  405787:	mov    edi,0x8c942a93
  40578c:	sbb    edi,DWORD PTR [edx+0x41]
  40578f:	aas    
  405790:	dec    esp
  405791:	mov    edx,0x9eb4ea08
  405796:	in     eax,dx
  405797:	bound  ebp,QWORD PTR [esi-0x5b]
  40579a:	push   ds
  40579b:	int3   
  40579c:	fistp  QWORD PTR [ecx-0xafb4c2c]
  4057a2:	mov    dl,0x5c
  4057a4:	inc    edi
  4057a5:	sbb    ebx,ecx
  4057a7:	dec    ebp
  4057a8:	gs imul dx,cx,0x5f01
  4057ae:	mov    es,edx
  4057b0:	xor    eax,0x54ebdafa
  4057b5:	cwde   
  4057b6:	push   ebp
  4057b7:	mov    dl,0xba
  4057b9:	gs jle 0x405798
  4057bc:	push   ebp
  4057bd:	or     ecx,DWORD PTR [esi-0x58a935b8]
  4057c3:	mov    BYTE PTR [ebp+0x450b676],dh
  4057c9:	cmp    DWORD PTR [ebp+0x56476f05],edx
  4057cf:	adc    DWORD PTR [eax],eax
  4057d1:	daa    
  4057d2:	xchg   ebp,eax
  4057d3:	xchg   BYTE PTR [edi],al
  4057d5:	shl    DWORD PTR [esp+esi*1-0x52421046],1
  4057dc:	out    0xd0,eax
  4057de:	test   al,0x86
  4057e0:	jne    0x405810
  4057e2:	add    eax,0xa7c93219
  4057e7:	sahf   
  4057e8:	xor    dh,BYTE PTR [edx]
  4057ea:	test   eax,0x49d3fb39
  4057ef:	cmp    BYTE PTR [esi-0x61968a7b],al
  4057f5:	ins    DWORD PTR es:[edi],dx
  4057f6:	push   es
  4057f7:	mov    al,0x3b
  4057f9:	outs   dx,BYTE PTR ds:[esi]
  4057fa:	xchg   ebx,eax
  4057fb:	sbb    BYTE PTR [ecx],0x52
  4057fe:	sbb    al,0xab
  405800:	jne    0x405866
  405802:	int    0x47
  405804:	xor    BYTE PTR [ebx],0xfb
  405807:	nop
  405808:	ret    
  405809:	(bad)  
  40580a:	pusha  
  40580b:	mov    bh,0x58
  40580d:	repnz cmp DWORD PTR [eax+edi*4],0xffffffbd
  405812:	(bad)  
  405813:	sub    al,0x3b
  405815:	cmp    al,0x0
  405817:	push   cs
  405818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405819:	inc    esi
  40581a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40581b:	mov    dl,0xb
  40581d:	push   ds
  40581e:	in     al,dx
  40581f:	sti    
  405820:	xchg   ecx,eax
  405821:	int3   
  405822:	aas    
  405823:	jp     0x4057cc
  405825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405826:	xchg   esi,eax
  405827:	sub    al,BYTE PTR [esp+esi*4-0x442a592d]
  40582e:	mov    bh,0x30
  405830:	test   edx,0xcc1f3324
  405836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405837:	(bad)  
  405839:	xor    bh,BYTE PTR [edi+0x55]
  40583c:	gs mov edi,0xf1ae1b1b
  405842:	cmp    bl,BYTE PTR [edi-0x3a8bf098]
  405848:	scas   al,BYTE PTR es:[edi]
  405849:	daa    
  40584a:	jno    0x4057ec
  40584c:	shr    BYTE PTR [esi],0x77
  40584f:	fs in  eax,0x4
  405852:	inc    esp
  405853:	and    ah,BYTE PTR fs:[ecx+0x55c935ac]
  40585a:	popf   
  40585b:	sti    
  40585c:	inc    ebx
  40585d:	dec    eax
  40585e:	sub    al,0x68
  405860:	sahf   
  405861:	add    BYTE PTR [eax+0x51c990ad],bl
  405867:	fisub  DWORD PTR [edi+esi*2]
  40586a:	cmp    eax,0x5f4ea76d
  40586f:	iret   
  405870:	mov    ecx,0xb622c61f
  405875:	imul   esi,DWORD PTR [esp+ebp*2],0x72
  405879:	lods   eax,DWORD PTR ds:[esi]
  40587a:	(bad)  
  40587b:	out    0xfb,eax
  40587d:	out    0x60,eax
  40587f:	dec    ebp
  405880:	cmp    al,0x9b
  405882:	rol    DWORD PTR [ecx],cl
  405884:	mov    eax,0x6e4f26bc
  405889:	sbb    BYTE PTR [eax],ch
  40588b:	dec    ecx
  40588c:	lahf   
  40588d:	shl    BYTE PTR [edi-0x76],cl
  405890:	xor    esi,DWORD PTR [ebp+0x2f8a6dc4]
  405896:	mov    al,ds:0x900357f1
  40589b:	push   es
  40589c:	sub    BYTE PTR [edx-0x7b7cea65],ch
  4058a2:	xchg   esp,eax
  4058a3:	shr    BYTE PTR [esi+0xc],1
  4058a6:	push   eax
  4058a7:	inc    edi
  4058a8:	scas   al,BYTE PTR es:[edi]
  4058a9:	adc    eax,0x23104a6a
  4058ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058af:	inc    ebp
  4058b0:	dec    ebp
  4058b1:	or     cl,BYTE PTR [ebx]
  4058b3:	sbb    edi,ecx
  4058b5:	in     eax,0xfc
  4058b7:	dec    ecx
  4058b8:	jge    0x405930
  4058ba:	add    DWORD PTR [ecx],0x81fb377
  4058c0:	popf   
  4058c1:	das    
  4058c2:	out    dx,eax
  4058c3:	call   0x6ca4:0xc9b310c
  4058ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058cb:	and    BYTE PTR [edx-0x71],dl
  4058ce:	mov    ebp,0xa37233c4
  4058d3:	mov    dl,0x16
  4058d5:	inc    edx
  4058d6:	lods   eax,DWORD PTR ds:[esi]
  4058d7:	es jns 0x405933
  4058da:	jbe    0x40593b
  4058dc:	or     DWORD PTR [ecx],esi
  4058de:	sub    BYTE PTR [ecx-0x3d],al
  4058e1:	xchg   edx,eax
  4058e2:	mov    bh,0x76
  4058e4:	stos   DWORD PTR es:[edi],eax
  4058e5:	adc    bl,BYTE PTR [edx+0x29]
  4058e8:	push   ss
  4058e9:	mov    eax,ds:0xa63a1fe7
  4058ee:	or     BYTE PTR [edi+eiz*2],0x97
  4058f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f3:	cmp    cl,BYTE PTR [ecx]
  4058f5:	and    BYTE PTR [ebx+0x345f638d],ch
  4058fb:	neg    DWORD PTR [ebx-0x75]
  4058fe:	popf   
  4058ff:	mov    dh,0xf7
  405901:	cmp    edx,DWORD PTR [edi-0x43]
  405904:	lods   al,BYTE PTR ds:[esi]
  405905:	xchg   esi,eax
  405906:	xchg   esp,eax
  405907:	cmp    esp,DWORD PTR [edi-0x60]
  40590a:	test   eax,0x2a351ad
  40590f:	inc    esi
  405910:	hlt    
  405911:	clc    
  405912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405913:	pushf  
  405914:	rcl    DWORD PTR [eax+0x72d2d0fa],0xa0
  40591b:	in     al,dx
  40591c:	xchg   DWORD PTR [esi+0x2f],esi
  40591f:	or     DWORD PTR [edi],ebp
  405921:	cld    
  405922:	out    0x3d,eax
  405924:	je     0x40591c
  405926:	int3   
  405927:	retf   0xb76a
  40592a:	sbb    BYTE PTR [eax-0x7e],ah
  40592d:	push   ecx
  40592e:	fwait
  40592f:	xor    al,0x60
  405931:	call   0xa0f4:0x2dec15fe
  405938:	add    esp,edi
  40593a:	jmp    0x4c7e:0xdd45f949
  405941:	into   
  405942:	pop    eax
  405943:	cld    
  405944:	cwde   
  405945:	sbb    DWORD PTR [edi+0x0],ebp
  405948:	add    ebx,DWORD PTR [ebx-0x4]
  40594b:	xchg   BYTE PTR [ebx],dl
  40594d:	(bad)  [ecx]
  40594f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405950:	bound  esp,QWORD PTR [ebx]
  405952:	es xor ecx,DWORD PTR cs:[eax]
  405956:	inc    edi
  405957:	jl     0x405961
  405959:	xor    eax,DWORD PTR [eax+edx*1-0x1ba79c5]
  405960:	test   DWORD PTR [eax],edi
  405962:	and    BYTE PTR [edi+0x13148cc9],ah
  405968:	nop
  405969:	daa    
  40596a:	jnp    0x405911
  40596c:	lahf   
  40596d:	sub    BYTE PTR [edi-0x6a],cl
  405970:	push   cs
  405971:	lock mov ebx,0x9788a0ac
  405977:	enter  0x56ef,0x24
  40597b:	push   0x8b3b4fa4
  405980:	push   0x2644831b
  405985:	rcl    DWORD PTR [esi-0xc1f67b],cl
  40598b:	lea    esp,[ebp-0x2d6c4a8c]
  405991:	icebp  
  405992:	xchg   DWORD PTR ds:0x7ffca344,edi
  405998:	mov    esi,0x891e35ac
  40599d:	inc    edi
  40599e:	dec    edi
  40599f:	shl    DWORD PTR [ebx+0x6f6cc07d],1
  4059a5:	mov    eax,0x9915f84a
  4059aa:	scas   al,BYTE PTR es:[edi]
  4059ab:	pop    ecx
  4059ac:	xchg   DWORD PTR [ecx-0x480b1e2d],edx
  4059b2:	icebp  
  4059b3:	sbb    ah,ah
  4059b5:	and    cl,dl
  4059b7:	sbb    edi,DWORD PTR [edi]
  4059b9:	adc    edi,ecx
  4059bb:	sbb    ch,BYTE PTR [ebx+eax*4]
  4059be:	push   edx
  4059bf:	and    DWORD PTR [esi+edi*4+0x6d249fef],esi
  4059c6:	lahf   
  4059c7:	pop    eax
  4059c8:	aad    0x82
  4059ca:	or     al,0x7b
  4059cc:	mov    ebp,DWORD PTR [esi+0x38]
  4059cf:	(bad)  
  4059d1:	dec    esi
  4059d2:	call   0x364ccfca
  4059d7:	sti    
  4059d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059d9:	int    0x93
  4059db:	pop    es
  4059dc:	mov    edi,0x9371dcea
  4059e1:	fcomp  st(0)
  4059e3:	(bad)  
  4059e4:	jmp    0x4059f4
  4059e6:	lea    esp,[eax]
  4059e8:	daa    
  4059e9:	dec    ebp
  4059ea:	inc    ebp
  4059eb:	addr16 ret 
  4059ed:	xchg   esp,eax
  4059ee:	fcomp  st(5)
  4059f0:	fmul   DWORD PTR [ebp+ebp*1+0x6c]
  4059f4:	mov    bh,BYTE PTR [ebp-0x22]
  4059f7:	outs   dx,DWORD PTR ds:[esi]
  4059f8:	mov    ecx,0x4736616
  4059fd:	lods   al,BYTE PTR ds:[esi]
  4059fe:	add    bh,bl
  405a00:	inc    esp
  405a01:	sar    DWORD PTR [esi-0xe],0x8
  405a05:	aad    0x6b
  405a07:	das    
  405a08:	stos   DWORD PTR es:[edi],eax
  405a09:	sbb    al,0xdd
  405a0b:	push   es
  405a0c:	bnd jns 0x405a48
  405a0f:	adc    DWORD PTR [ebx-0x1e],0xffffffff
  405a13:	xchg   esp,eax
  405a14:	dec    edi
  405a15:	mov    ah,0x7e
  405a17:	outs   dx,DWORD PTR ds:[esi]
  405a18:	mov    eax,0x891ec45
  405a1d:	push   es
  405a1e:	sub    bh,BYTE PTR [esi+0x1]
  405a21:	call   0xee3cedde
  405a26:	mov    eax,ds:0x1a066b02
  405a2b:	mov    dl,0xc2
  405a2d:	jns    0x405aa2
  405a2f:	shr    BYTE PTR [edi+0x4e],0xf6
  405a33:	and    BYTE PTR [edx+0x1c2023c6],dh
  405a39:	xor    ebx,DWORD PTR [eax-0x15]
  405a3c:	mov    al,ds:0x9e0367a6
  405a41:	and    al,0xbf
  405a43:	clc    
  405a44:	xlat   BYTE PTR ds:[ebx]
  405a45:	or     BYTE PTR [eax+edi*1-0x69],cl
  405a49:	es (bad) 
  405a4b:	mul    BYTE PTR [eax]
  405a4d:	ss ja  0x405aae
  405a50:	mov    ds:0x6c651ca3,eax
  405a55:	xchg   ecx,eax
  405a56:	cs pop edi
  405a58:	push   ds
  405a59:	dec    esi
  405a5a:	(bad)  
  405a5c:	icebp  
  405a5d:	mov    ebx,0x850af9eb
  405a62:	ret    0xa3ce
  405a65:	lods   eax,DWORD PTR ds:[esi]
  405a66:	adc    esi,DWORD PTR ds:0x15fbe9b7
  405a6c:	dec    eax
  405a6d:	dec    bx
  405a6f:	xor    BYTE PTR [esi],bl
  405a71:	lock fs mov edx,0xb227e07d
  405a78:	mov    eax,ds:0x42b80107
  405a7d:	sahf   
  405a7e:	or     eax,0x8a41bae7
  405a83:	sub    ebx,edi
  405a85:	lods   al,BYTE PTR ds:[esi]
  405a86:	jbe    0x405a7e
  405a88:	dec    esp
  405a89:	inc    esp
  405a8a:	ja     0x405a60
  405a8c:	jnp    0x405a8c
  405a8e:	sub    ebx,DWORD PTR [ecx+ebp*1+0x72]
  405a92:	pop    esp
  405a93:	inc    edx
  405a94:	mov    dl,0x33
  405a96:	aam    0x70
  405a98:	ror    BYTE PTR gs:[ebx],0x99
  405a9c:	jle    0x405a66
  405a9e:	pop    edx
  405a9f:	mov    cl,ah
  405aa1:	mov    eax,0x3eaa5747
  405aa6:	shl    DWORD PTR ds:0xd190717b,0x4a
  405aad:	pop    ebp
  405aae:	xor    al,0x2e
  405ab0:	int3   
  405ab1:	mov    DWORD PTR [edi-0x16766d47],ecx
  405ab7:	in     al,0x72
  405ab9:	mov    BYTE PTR ds:0xbc03873d,dh
  405abf:	add    DWORD PTR [esi-0x17],0xffffffe9
  405ac3:	cs pop eax
  405ac5:	adc    DWORD PTR [ebp+0x73],edi
  405ac8:	adc    ebp,DWORD PTR [esi]
  405aca:	es das 
  405acc:	sub    DWORD PTR ds:0xedfc7803,esi
  405ad2:	(bad)  
  405ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad4:	hlt    
  405ad5:	mov    al,0xd1
  405ad7:	mov    bl,BYTE PTR [ebp+0x2d4df59f]
  405add:	fisub  DWORD PTR [edi+0x21674ba8]
  405ae3:	push   ebx
  405ae4:	jp     0x405ad9
  405ae6:	adc    dl,dh
  405ae8:	sbb    eax,0x80e19611
  405aed:	dec    eax
  405aee:	push   ss
  405aef:	jo     0x405b23
  405af1:	pushw  ss
  405af3:	ja     0x405ab3
  405af5:	push   ecx
  405af6:	push   edx
  405af7:	loopne 0x405adb
  405af9:	mov    ebx,0x319bb78c
  405afe:	test   BYTE PTR [eax-0x52],cl
  405b01:	les    esi,FWORD PTR [edi+0x4c]
  405b04:	icebp  
  405b05:	test   al,0xf0
  405b07:	out    dx,eax
  405b08:	xchg   ebp,eax
  405b09:	sub    ebp,ebx
  405b0b:	(bad)  
  405b0c:	retf   
  405b0d:	mov    ch,dl
  405b0f:	aaa    
  405b10:	out    dx,eax
  405b11:	xor    BYTE PTR [ebp+0x62825ead],cl
  405b17:	test   eax,0x173fa483
  405b1c:	ja     0x405b3a
  405b1e:	push   ebp
  405b1f:	xor    BYTE PTR [esp+eiz*8+0xbfc8c33],ch
  405b26:	imul   esi,edi,0xb
  405b29:	fcomp  DWORD PTR [eax+0x2be949e1]
  405b2f:	sub    eax,0x5dffe54a
  405b34:	or     BYTE PTR [eax+ebp*8],dh
  405b37:	ficomp WORD PTR [eax-0x5249a098]
  405b3d:	ja     0x405ace
  405b3f:	ja     0x405ad9
  405b41:	call   0xc266:0x21114a2e
  405b48:	adc    dl,bl
  405b4a:	std    
  405b4b:	dec    esp
  405b4c:	push   esi
  405b4d:	int3   
  405b4e:	or     ch,BYTE PTR [edi+ebp*8-0xd]
  405b52:	sar    BYTE PTR [edi-0x15738391],1
  405b58:	std    
  405b59:	add    BYTE PTR es:[esi],0x20
  405b5d:	cmc    
  405b5e:	or     al,0x1e
  405b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b61:	adc    dh,BYTE PTR [esp+ebp*2-0x6f]
  405b65:	dec    edi
  405b66:	push   0xffc6db7b
  405b6b:	ret    
  405b6c:	sub    eax,0x983615c
  405b71:	aam    0x8a
  405b73:	push   esp
  405b74:	mov    ch,0x51
  405b76:	ss scas al,BYTE PTR es:[edi]
  405b78:	jmp    0x641d:0x8fffbec4
  405b7f:	into   
  405b80:	push   esi
  405b81:	xor    DWORD PTR [ecx-0x15b429a],0x5b8ea288
  405b8b:	or     DWORD PTR [ebx+0x5e],edi
  405b8e:	ss inc esp
  405b90:	cbw    
  405b92:	adc    eax,0x3254b5aa
  405b97:	std    
  405b98:	in     al,0xae
  405b9a:	sbb    DWORD PTR [eax-0x6c7929a3],esi
  405ba0:	mov    dh,0xc3
  405ba2:	add    BYTE PTR [edi+0x6b],0xa4
  405ba6:	jmp    0x405b78
  405ba8:	push   esi
  405ba9:	pushf  
  405baa:	loope  0x405bcf
  405bac:	jo     0x405b8d
  405bae:	xchg   edi,eax
  405baf:	(bad)  
  405bb0:	leave  
  405bb1:	int3   
  405bb2:	div    DWORD PTR [esi-0x4f]
  405bb5:	test   DWORD PTR [esi-0x1],ebp
  405bb8:	mov    edi,0x8299ad60
  405bbd:	mov    al,ds:0xdddfab44
  405bc2:	and    dl,BYTE PTR [edi+0x22c7811d]
  405bc8:	shl    DWORD PTR [esi+edx*1-0x6],cl
  405bcc:	mov    dl,0xc3
  405bce:	mov    fs,WORD PTR [esi+0x3c]
  405bd1:	clc    
  405bd2:	add    DWORD PTR [esi-0x77b4dc63],0xad7096d0
  405bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bdd:	ret    
  405bde:	push   0x13016547
  405be3:	imul   edx,DWORD PTR [edi],0x76
  405be6:	sbb    al,BYTE PTR [ecx-0x4c]
  405be9:	mov    dl,0x76
  405beb:	pushf  
  405bec:	add    DWORD PTR [edi-0x23a39837],edx
  405bf2:	test   DWORD PTR [bx-0x5d07],edi
  405bf7:	int    0xc6
  405bf9:	mov    dl,0x84
  405bfb:	cmp    DWORD PTR [ebx+0x7f],edx
  405bfe:	push   esp
  405bff:	addr16 pop eax
  405c01:	inc    ebx
  405c02:	nop
  405c03:	mov    dh,BYTE PTR ds:0xa0f698eb
  405c09:	and    ebp,eax
  405c0b:	push   edx
  405c0c:	icebp  
  405c0d:	lods   al,BYTE PTR ds:[esi]
  405c0e:	mov    esi,eax
  405c10:	loopne 0x405b97
  405c12:	popa   
  405c13:	jl     0x405c94
  405c15:	stos   BYTE PTR es:[edi],al
  405c16:	fbstp  TBYTE PTR [ecx+0x50]
  405c19:	into   
  405c1a:	outs   dx,BYTE PTR ds:[esi]
  405c1b:	inc    ebp
  405c1c:	adc    al,0x26
  405c1e:	inc    esp
  405c1f:	sar    BYTE PTR [edx],1
  405c21:	(bad)  
  405c22:	stc    
  405c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c24:	stos   BYTE PTR es:[edi],al
  405c25:	lods   eax,DWORD PTR ds:[esi]
  405c26:	cmc    
  405c27:	pop    esi
  405c28:	jmp    0x667d:0x83731575
  405c2f:	dec    esi
  405c30:	mov    ch,0xe7
  405c32:	aaa    
  405c33:	mov    bl,0x4a
  405c35:	sti    
  405c36:	sbb    al,0x87
  405c38:	xchg   edx,eax
  405c39:	pop    edi
  405c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c3b:	add    eax,0x1342e71d
  405c40:	aas    
  405c41:	scas   al,BYTE PTR es:[edi]
  405c42:	les    edi,FWORD PTR [eax-0x3c6d7ab8]
  405c48:	lods   al,BYTE PTR ds:[esi]
  405c49:	sar    DWORD PTR [edi],1
  405c4b:	(bad)  
  405c4c:	mov    ebp,0x5fc3fc1c
  405c51:	ins    DWORD PTR es:[edi],dx
  405c52:	mov    eax,esp
  405c54:	iret   
  405c55:	fldenv [ecx]
  405c57:	scas   eax,DWORD PTR es:[edi]
  405c58:	repz xor al,ah
  405c5b:	pop    edx
  405c5c:	stc    
  405c5d:	ficomp WORD PTR [esi+0x5c27b183]
  405c63:	stos   DWORD PTR es:[edi],eax
  405c64:	test   al,0x7f
  405c66:	inc    ecx
  405c67:	addr16 punpcklwd mm1,mm4
  405c6b:	fwait
  405c6c:	cmc    
  405c6d:	or     DWORD PTR [ebp+0x7f],0x670c6960
  405c74:	jmp    0xa2e4866b
  405c79:	pop    ebp
  405c7a:	pop    eax
  405c7b:	xchg   esp,eax
  405c7c:	jmp    0x405c10
  405c7e:	add    eax,0x7441a04c
  405c83:	fs aad 0x6a
  405c86:	inc    ecx
  405c87:	in     eax,0x4c
  405c89:	sar    ecx,cl
  405c8b:	and    eax,0x5227924f
  405c90:	cli    
  405c91:	aas    
  405c92:	call   0x648ba878
  405c97:	pop    ss
  405c98:	jge    0x405c38
  405c9a:	nop
  405c9b:	fidivr WORD PTR [eax-0x28]
  405c9e:	cmp    eax,0x59a6a794
  405ca3:	jbe    0x405cc2
  405ca5:	iret   
  405ca6:	fs push 0xf
  405ca9:	nop
  405caa:	sub    edx,esi
  405cac:	jge    0x405c4d
  405cae:	jp     0x405d15
  405cb0:	mov    al,0xa7
  405cb2:	lods   eax,DWORD PTR ds:[esi]
  405cb3:	xchg   ah,ah
  405cb5:	clc    
  405cb6:	sub    DWORD PTR gs:[edx],ebx
  405cb9:	dec    edx
  405cba:	mov    ebx,0x2b66a15c
  405cbf:	or     eax,DWORD PTR [ecx+0x0]
  405cc2:	adc    DWORD PTR [esi],esp
  405cc4:	aam    0x9
  405cc6:	retf   
  405cc7:	(bad)  
  405cc8:	test   al,0xb8
  405cca:	inc    ecx
  405ccb:	or     edi,DWORD PTR [ecx+edx*1]
  405cce:	dec    DWORD PTR [edi-0x33]
  405cd1:	(bad)  
  405cd2:	das    
  405cd3:	(bad)  
  405cd4:	(bad)  [edi-0x66c22cbf]
  405cda:	mov    ecx,0xf8259a86
  405cdf:	aaa    
  405ce0:	and    eax,0x1cd05078
  405ce5:	or     al,0xad
  405ce7:	xor    eax,0x3b9731b3
  405cec:	test   eax,0x8703e2c1
  405cf1:	mov    bh,0xf0
  405cf3:	lea    eax,[ebx+0x25]
  405cf6:	or     BYTE PTR [ebp-0x25],ah
  405cf9:	out    0x89,al
  405cfb:	rol    BYTE PTR [esi-0x702a79ed],1
  405d01:	ror    BYTE PTR [ecx],cl
  405d03:	fidivr DWORD PTR [eax+0x8]
  405d06:	jl     0x405cee
  405d08:	dec    ebx
  405d09:	jnp    0x405cc1
  405d0b:	mov    ecx,0x4a15a0f1
  405d10:	push   ss
  405d11:	int    0xd7
  405d13:	out    dx,al
  405d14:	dec    edi
  405d15:	out    dx,eax
  405d16:	hlt    
  405d17:	sahf   
  405d18:	hlt    
  405d19:	stc    
  405d1a:	mov    eax,ds:0x1463fce
  405d1f:	test   eax,0x4e4c1a02
  405d24:	xor    BYTE PTR [edx+ebp*4+0x5413a693],dh
  405d2b:	sub    dh,BYTE PTR [eax+ebp*4]
  405d2e:	(bad)  
  405d2f:	int    0x1
  405d31:	dec    ebx
  405d32:	push   cs
  405d33:	adc    BYTE PTR [esi],0xea
  405d36:	lea    ebp,[ebp+0x72174bf2]
  405d3c:	call   0xa271047
  405d41:	sar    esp,cl
  405d43:	ja     0x405cc9
  405d45:	mov    ds:0x97241047,eax
  405d4a:	in     al,0xaa
  405d4c:	add    al,dl
  405d4e:	cwde   
  405d4f:	jmp    0xa9a22fb6
  405d54:	xchg   esp,eax
  405d55:	mov    ah,0x59
  405d57:	mov    ecx,0x2503071b
  405d5c:	aaa    
  405d5d:	dec    eax
  405d5e:	fisub  DWORD PTR [edi+0x15b6cd63]
  405d64:	je     0x405d3d
  405d66:	adc    BYTE PTR [ebx+0x1a],0x82
  405d6a:	mov    edx,0x54fd52a3
  405d6f:	mov    eax,0xb70858fe
  405d74:	rol    DWORD PTR [eax+0x6b892f70],cl
  405d7a:	leave  
  405d7b:	arpl   WORD PTR [eax+edi*1+0x58b9e8b],cx
  405d82:	(bad)  
  405d83:	jb     0x405ddd
  405d85:	retf   0x68c5
  405d88:	repnz or dl,al
  405d8b:	arpl   dx,cx
  405d8d:	cmp    BYTE PTR [edi-0x46],0x26
  405d91:	(bad)  
  405d93:	add    edx,esi
  405d95:	xchg   DWORD PTR [eax],ebp
  405d97:	ds daa 
  405d99:	test   eax,0xfa0c2980
  405d9e:	inc    ebp
  405d9f:	dec    esi
  405da0:	mov    ds:0xc2df50b4,eax
  405da5:	sub    al,0x83
  405da7:	mov    eax,0xa685b03a
  405dac:	cwde   
  405dad:	mov    ?,WORD PTR [esi]
  405daf:	addr16 dec eax
  405db1:	cld    
  405db2:	or     ecx,edi
  405db4:	sbb    dh,0xb3
  405db7:	fmul   DWORD PTR [edx]
  405db9:	xor    DWORD PTR [edi-0x3d83f1d1],ebx
  405dbf:	add    al,0x9e
  405dc1:	mov    ss,WORD PTR [eax-0x2a029bdd]
  405dc7:	out    dx,al
  405dc8:	sub    al,0x19
  405dca:	ret    
  405dcb:	push   ds
  405dcc:	push   eax
  405dcd:	pop    es
  405dce:	imul   eax,esi,0xffffff84
  405dd1:	out    dx,eax
  405dd2:	sti    
  405dd3:	jmp    0x405d91
  405dd5:	add    al,0x32
  405dd7:	xor    DWORD PTR [eax+0x63],esp
  405dda:	jo     0x405db2
  405ddc:	mov    cl,0x6f
  405dde:	lods   al,BYTE PTR ds:[esi]
  405ddf:	rol    DWORD PTR [ecx+edx*1],cl
  405de2:	xlat   BYTE PTR ds:[ebx]
  405de3:	fld    TBYTE PTR [eax]
  405de5:	cmp    edx,0xcd560ff0
  405deb:	jns    0x405e00
  405ded:	sti    
  405dee:	in     eax,0x54
  405df0:	int    0xc3
  405df2:	scas   al,BYTE PTR es:[edi]
  405df3:	nop
  405df4:	push   edi
  405df5:	int    0x61
  405df7:	cmp    DWORD PTR [esi-0x6e],edx
  405dfa:	mov    ds:0xfe10dab3,eax
  405dff:	mov    BYTE PTR ds:0xc1c56b3e,bl
  405e05:	enter  0x9a42,0xe
  405e09:	pop    es
  405e0a:	in     eax,0x47
  405e0c:	adc    esp,DWORD PTR [edi-0x4a]
  405e0f:	(bad)  
  405e10:	push   ds
  405e11:	sub    ebp,DWORD PTR [ebx]
  405e13:	sub    al,0x9
  405e15:	xor    al,0x5
  405e17:	push   es
  405e18:	mov    ch,bh
  405e1a:	cmp    DWORD PTR [edx-0x373019e],edx
  405e20:	test   WORD PTR [eax],bx
  405e23:	test   eax,0x9be25a43
  405e28:	aas    
  405e29:	xchg   DWORD PTR [eax],eax
  405e2b:	add    ebp,DWORD PTR [edx-0xbc4f9c0]
  405e31:	add    BYTE PTR [edi],ah
  405e33:	or     BYTE PTR [edi+ebp*4-0x172eca2a],ah
  405e3a:	push   0x7e
  405e3c:	inc    ebx
  405e3d:	retf   0x2d65
  405e40:	mov    edi,DWORD PTR [eax]
  405e42:	hlt    
  405e43:	aam    0xc
  405e45:	pop    esi
  405e46:	cmp    eax,0xe1a6a9f3
  405e4b:	inc    ecx
  405e4c:	add    BYTE PTR [esi-0x685113fb],ch
  405e52:	(bad)  
  405e53:	rdmsr  
  405e55:	push   es
  405e56:	mov    ecx,0x821018de
  405e5b:	je     0x405e91
  405e5d:	div    bl
  405e5f:	mov    edi,0xf44413e4
  405e64:	push   ecx
  405e65:	xor    DWORD PTR [ecx+0x5b5d0bc5],edx
  405e6b:	inc    ebp
  405e6c:	mov    dl,0xd
  405e6e:	xchg   edi,eax
  405e6f:	and    DWORD PTR [ecx],edx
  405e71:	fwait
  405e72:	sub    bh,BYTE PTR [eax+0x1ddcb16]
  405e78:	fwait
  405e79:	dec    ecx
  405e7a:	mov    ecx,0x4aec15d7
  405e7f:	sbb    eax,0x979939ba
  405e84:	jne    0x405e82
  405e86:	sbb    edi,DWORD PTR [esi+0x673d9f5c]
  405e8c:	mov    ebp,0x24aa89e8
  405e91:	fld    QWORD PTR [edi+esi*2]
  405e94:	mov    cs:0x865c6fdd,al
  405e9a:	adc    al,0x9e
  405e9c:	pop    es
  405e9d:	inc    esp
  405e9e:	mov    esi,0xf3c204ec
  405ea3:	push   ecx
  405ea4:	fisttp QWORD PTR [ecx-0x52]
  405ea7:	sub    edi,edi
  405ea9:	push   ebx
  405eaa:	adc    DWORD PTR [ebx-0x6d],edi
  405ead:	mov    ecx,0x82683bf0
  405eb2:	mov    dl,0x5e
  405eb4:	int    0xe9
  405eb6:	xchg   ebp,eax
  405eb7:	or     al,BYTE PTR [ebp+0x58005a35]
  405ebd:	push   cs
  405ebe:	mov    edi,0x8742d54a
  405ec3:	cli    
  405ec4:	push   ebx
  405ec5:	pop    ecx
  405ec6:	add    DWORD PTR [ebx],ebp
  405ec8:	and    DWORD PTR [ecx-0x37695bb4],eax
  405ece:	rcl    DWORD PTR [ebp+0x6c140f0a],0xa1
  405ed5:	mov    esi,0x84f9fd53
  405eda:	xor    al,0x1b
  405edc:	mov    bl,0xf5
  405ede:	mov    ebx,0x3cb6799
  405ee3:	jo     0x405e73
  405ee5:	scas   al,BYTE PTR es:[edi]
  405ee6:	cli    
  405ee7:	imul   esi,DWORD PTR [edi+0x3c],0xffffff89
  405eeb:	lahf   
  405eec:	adc    al,0x73
  405eee:	sti    
  405eef:	sbb    eax,0xac085d91
  405ef4:	arpl   WORD PTR [esi-0x5142ae8a],di
  405efa:	add    al,0x3e
  405efc:	push   ds
  405efd:	cmp    DWORD PTR [ecx],0x7e9bee57
  405f03:	rol    DWORD PTR [esi-0x55],0x4c
  405f07:	jns    0x405f6a
  405f09:	inc    esi
  405f0a:	pop    edi
  405f0b:	frstor [edx+0x15]
  405f0e:	fistp  DWORD PTR [ebp+0x6221be35]
  405f14:	sbb    al,0xb
  405f16:	add    edx,esp
  405f18:	pop    ebp
  405f19:	shl    edx,0xef
  405f1c:	cld    
  405f1d:	lods   al,BYTE PTR ds:[esi]
  405f1e:	push   ebx
  405f1f:	jo     0x405edc
  405f21:	dec    eax
  405f22:	adc    BYTE PTR ds:0xa223150d,cl
  405f28:	mov    ebx,0xa3655dff
  405f2d:	out    0x15,al
  405f2f:	nop
  405f30:	out    dx,eax
  405f31:	dec    edx
  405f32:	imul   ebx,DWORD PTR es:[ebx+0x1f],0xffffffbf
  405f37:	and    eax,0xb757ba4e
  405f3c:	arpl   WORD PTR [esp+eax*2-0x3a],sp
  405f40:	out    0x6f,eax
  405f42:	push   ebp
  405f43:	sar    DWORD PTR [ecx],0x5f
  405f46:	aas    
  405f47:	and    DWORD PTR [edx],ebp
  405f49:	ss pop ecx
  405f4b:	dec    eax
  405f4c:	outs   dx,DWORD PTR ds:[esi]
  405f4d:	xchg   edx,eax
  405f4e:	dec    ebp
  405f4f:	ret    0x8166
  405f52:	sub    BYTE PTR ds:0x8b3a90ac,ch
  405f58:	mov    dh,0xa6
  405f5a:	xchg   DWORD PTR [ebx+0x6a],edx
  405f5d:	test   al,0x49
  405f5f:	add    ch,BYTE PTR [ebp+0x0]
  405f62:	pop    edx
  405f63:	xchg   DWORD PTR [edi],esp
  405f65:	xor    al,dh
  405f67:	xchg   edx,eax
  405f68:	pop    ecx
  405f69:	mov    esi,?
  405f6b:	stc    
  405f6c:	push   edi
  405f6d:	jbe    0xe4386ce2
  405f73:	pop    ecx
  405f74:	add    DWORD PTR [ebx+eax*2],edx
  405f77:	aad    0xf2
  405f79:	adc    dh,ah
  405f7b:	inc    DWORD PTR [eax-0x6e59de5e]
  405f81:	pushf  
  405f82:	jecxz  0x405fcc
  405f84:	test   eax,0xe067983c
  405f89:	mov    esi,0x47314b5a
  405f8e:	clc    
  405f8f:	inc    edx
  405f90:	mov    dh,0xba
  405f92:	inc    edx
  405f93:	pusha  
  405f94:	(bad)  
  405f95:	es dec ecx
  405f97:	pusha  
  405f98:	aas    
  405f99:	imul   ebx,ebp,0xffffff8d
  405f9c:	fcom   QWORD PTR [ecx+0x4]
  405f9f:	jmp    0x9600:0xca35d255
  405fa6:	or     BYTE PTR [ebp+0x4a093c13],bh
  405fac:	jne    0x405f54
  405fae:	mov    cl,0x36
  405fb0:	jmp    0x405ffb
  405fb2:	push   cs
  405fb3:	enter  0xd43,0x9f
  405fb7:	jno    0x405fff
  405fb9:	das    
  405fba:	sub    BYTE PTR [esi-0x494be5cb],al
  405fc0:	or     cl,BYTE PTR [ebp+0x1e57c7ac]
  405fc6:	adc    eax,0xd9adb8a6
  405fcb:	sbb    eax,DWORD PTR [eax+0xd]
  405fce:	push   0xffffffaa
  405fd0:	popa   
  405fd1:	(bad)  
  405fd2:	retf   
  405fd3:	cmp    eax,0xee1aa5df
  405fd8:	fcmovnbe st,st(3)
  405fda:	adc    BYTE PTR [edi],0x59
  405fdd:	mov    ds,WORD PTR [ecx+0x40783319]
  405fe3:	mov    dl,0xf8
  405fe5:	sub    DWORD PTR [ecx],esp
  405fe7:	retf   
  405fe8:	sbb    dl,BYTE PTR [ebx+0x35]
  405feb:	and    BYTE PTR [edx-0x67],bl
  405fee:	mov    ds:0x2f6e18fe,al
  405ff3:	cld    
  405ff4:	lods   eax,DWORD PTR ds:[esi]
  405ff5:	mov    BYTE PTR [esi-0x3c29d0f9],dl
  405ffb:	mov    eax,0x2552e250
  406000:	mov    ebp,0xd57deabe
  406005:	sti    
  406006:	fwait
  406007:	inc    ecx
  406008:	sbb    eax,0xeb5785f3
  40600d:	out    0x16,al
  40600f:	pop    edx
  406010:	out    dx,eax
  406011:	adc    DWORD PTR [ecx],0xffffffc8
  406014:	cwde   
  406015:	inc    edi
  406016:	mov    ecx,DWORD PTR fs:0x59dc7082
  40601d:	outs   dx,DWORD PTR ds:[esi]
  40601e:	jge    0x406014
  406020:	sub    esi,DWORD PTR [edx+edx*1+0x5e]
  406024:	lea    esp,[ebp+edi*1+0xca0859b]
  40602b:	stc    
  40602c:	xchg   edi,eax
  40602d:	xchg   ebp,eax
  40602e:	pop    ebp
  40602f:	inc    eax
  406030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406031:	ins    BYTE PTR es:[edi],dx
  406032:	mov    bl,0xba
  406034:	inc    edx
  406035:	iret   
  406036:	stc    
  406037:	es or  bh,cl
  40603a:	mov    ebx,0xa8385258
  40603f:	daa    
  406040:	xchg   DWORD PTR ds:0x68012704,edi
  406046:	adc    al,0xcf
  406048:	cld    
  406049:	push   cs
  40604a:	sti    
  40604b:	in     eax,0x1d
  40604d:	add    eax,0x1986ada7
  406052:	mov    esp,DWORD PTR [ebp-0x5e8ac420]
  406058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406059:	fsubr  DWORD PTR ds:0xfae8ae27
  40605f:	push   eax
  406060:	inc    ecx
  406061:	mov    edi,0xa117ec4a
  406066:	repz pop edi
  406068:	bound  edx,QWORD PTR [ebp-0x29]
  40606b:	xchg   edx,ebx
  40606d:	xchg   ebx,eax
  40606e:	scas   al,BYTE PTR es:[edi]
  40606f:	jecxz  0x4060d2
  406071:	and    eax,0x3254e25
  406076:	nop
  406077:	xchg   esp,esi
  406079:	(bad)  
  40607a:	and    ecx,DWORD PTR [esi]
  40607c:	fnstcw WORD PTR [ebp+0x215189e4]
  406082:	cmp    bl,ch
  406084:	pop    ebx
  406085:	mov    ecx,0x8ac29ff6
  40608a:	mov    edi,0xd9cd22a0
  40608f:	ins    DWORD PTR es:[edi],dx
  406090:	mov    al,0xb5
  406092:	(bad)  
  406093:	jle    0x40606a
  406095:	dec    edi
  406096:	(bad)  
  406097:	jns    0x406040
  406099:	adc    DWORD PTR [esi-0x17],ebp
  40609c:	mov    edx,0xe5d5801
  4060a1:	dec    esi
  4060a2:	pop    es
  4060a3:	mov    bh,0xa7
  4060a5:	or     al,BYTE PTR [edi]
  4060a7:	imul   ebx,DWORD PTR [ebp+0x71bfb4a9],0x12d864b1
  4060b1:	int3   
  4060b2:	popa   
  4060b3:	fistp  DWORD PTR [ebp+0x5b]
  4060b6:	and    BYTE PTR [eax-0x14],bh
  4060b9:	call   0x66f5:0x59f4476e
  4060c0:	or     eax,0xdc9e65f
  4060c5:	fcom   DWORD PTR [ebx-0x7418e026]
  4060cb:	push   ebp
  4060cc:	hlt    
  4060cd:	xor    eax,esi
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	adc    ah,BYTE PTR [eax]
  40611e:	fcom   DWORD PTR [edx-0x11]
  406121:	sar    DWORD PTR [ebx+0x7b],0xb5
  406125:	sahf   
  406126:	jnp    0x4061a3
  406128:	neg    ebx
  40612a:	mov    dl,0x62
  40612c:	sbb    DWORD PTR [edi-0x2e],edi
  40612f:	push   ebp
  406130:	shr    DWORD PTR [eax+eiz*8+0x5c831fe4],cl
  406137:	adc    al,0x11
  406139:	dec    edx
  40613a:	xchg   ecx,eax
  40613b:	mov    ch,0xb3
  40613d:	(bad)  
  40613e:	push   ebp
  40613f:	mov    ebx,0x13694622
  406144:	aad    0xc8
  406146:	cmc    
  406147:	mov    ah,0x7b
  406149:	add    eax,0xaa340e38
  40614e:	adc    DWORD PTR [ebx+0xc],esi
  406151:	shl    BYTE PTR [si+0x11],cl
  406155:	mov    ah,cl
  406157:	pop    ds
  406158:	fisttp WORD PTR [edi+0x10786522]
  40615e:	stos   DWORD PTR es:[edi],eax
  40615f:	leave  
  406160:	add    cl,BYTE PTR ds:0x105a2c69
  406166:	cmp    DWORD PTR [ebp+0x4],0x79
  40616a:	xchg   edi,eax
  40616b:	shr    al,0x65
  40616e:	xor    edi,ecx
  406170:	mov    cl,0x26
  406172:	sub    eax,0xd6adeba8
  406177:	pop    edi
  406178:	mov    cl,0xfd
  40617a:	loop   0x40613a
  40617c:	(bad)  
  40617d:	fmul   st(4),st
  40617f:	dec    ebx
  406180:	jb     0x4061a2
  406182:	xchg   BYTE PTR [bp-0x24dc],dh
  406187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406188:	mov    edi,DWORD PTR [ebp-0xd4dbec2]
  40618e:	ffreep st(2)
  406190:	cmp    cl,BYTE PTR [ebp+0x930903e]
  406196:	pop    es
  406197:	sti    
  406198:	icebp  
  406199:	xlat   BYTE PTR ds:[ebx]
  40619a:	out    0x56,eax
  40619c:	rol    DWORD PTR [ebx+0x18],0x6a
  4061a0:	sub    cl,BYTE PTR [edx+eiz*4+0x2b4f6be4]
  4061a7:	lods   eax,DWORD PTR ds:[esi]
  4061a8:	bound  ecx,QWORD PTR [edi+ebx*4+0x4d]
  4061ac:	mov    ch,BYTE PTR [ebp-0x2f]
  4061af:	cs xor al,0xe0
  4061b2:	jb     0x406212
  4061b4:	icebp  
  4061b5:	lahf   
  4061b6:	scas   al,BYTE PTR es:[edi]
  4061b7:	dec    edi
  4061b8:	dec    ecx
  4061b9:	cld    
  4061ba:	sbb    eax,0xb316b3a0
  4061bf:	aaa    
  4061c0:	daa    
  4061c1:	ret    
  4061c2:	adc    al,0x20
  4061c4:	call   0x1f2e83c1
  4061c9:	xlat   BYTE PTR ds:[ebx]
  4061ca:	fcmovu st,st(0)
  4061cc:	ins    BYTE PTR es:[edi],dx
  4061cd:	(bad)  [esi+0x51]
  4061d0:	fdivp  st(4),st
  4061d2:	cmp    al,0x36
  4061d4:	call   0x31de5f68
  4061d9:	iret   
  4061da:	dec    eax
  4061db:	adc    al,0x42
  4061dd:	aaa    
  4061de:	and    al,0xcb
  4061e0:	invd   
  4061e2:	xor    esi,esi
  4061e4:	aaa    
  4061e5:	pop    esp
  4061e6:	jmp    0x90c1:0xeb0bbac4
  4061ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ee:	jmp    0x83b:0x2bcf7a7d
  4061f5:	scas   al,BYTE PTR es:[edi]
  4061f6:	or     eax,eax
  4061f8:	aam    0x85
  4061fa:	xchg   esp,eax
  4061fb:	cmp    edx,DWORD PTR [eax-0x13b8eedf]
  406201:	sub    BYTE PTR [edx],dl
  406203:	jno    0x40620c
  406205:	imul   DWORD PTR [eax+0x5d8e58a]
  40620b:	sbb    al,0x9b
  40620d:	xchg   ebx,eax
  40620e:	push   edx
  40620f:	adc    esp,esp
  406211:	or     dl,al
  406213:	popa   
  406214:	shl    BYTE PTR [edx-0x53],1
  406217:	loop   0x40626e
  406219:	gs jbe 0x40628f
  40621c:	dec    ebx
  40621d:	in     al,dx
  40621e:	int    0xd2
  406220:	pop    edx
  406221:	repz mul DWORD PTR ds:0xbb8f72e9
  406228:	mov    ch,0xea
  40622a:	push   edi
  40622b:	push   edi
  40622c:	sbb    BYTE PTR [esi-0x66],dl
  40622f:	and    ecx,0x812c4bc8
  406235:	cdq    
  406236:	push   esp
  406237:	mov    al,0x5f
  406239:	sub    eax,0x7c4f057
  40623e:	(bad)  
  40623f:	sub    BYTE PTR [edx*4-0x5ea1bd1e],dl
  406246:	xor    al,0x35
  406248:	cmp    BYTE PTR [ebx],ah
  40624a:	inc    esp
  40624b:	mov    al,ds:0x5f1291fd
  406250:	cmc    
  406251:	xchg   edx,eax
  406252:	sub    BYTE PTR [ebx-0x42],dh
  406255:	lods   al,BYTE PTR ds:[esi]
  406256:	cmp    BYTE PTR [edx+eiz*8+0x11eeecc9],ch
  40625d:	ss scas eax,DWORD PTR es:[edi]
  40625f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406260:	nop
  406261:	push   cs
  406262:	sub    BYTE PTR [ecx-0x3f],ah
  406265:	rcr    BYTE PTR [ebx-0x59a15750],1
  40626b:	ins    DWORD PTR es:[edi],dx
  40626c:	stos   BYTE PTR es:[edi],al
  40626d:	jp     0x406216
  40626f:	xchg   ecx,eax
  406270:	mov    al,0x75
  406272:	test   al,0x2d
  406274:	sbb    al,0x77
  406276:	mov    ecx,0x403599df
  40627b:	jns    0x4062f6
  40627d:	push   ebx
  40627e:	dec    BYTE PTR [esp+esi*8]
  406281:	into   
  406282:	jge    0x406284
  406284:	mov    BYTE PTR [esi],0x62
  406287:	and    al,cl
  406289:	mov    bl,0x4d
  40628b:	rcr    al,1
  40628d:	jp     0x4062bc
  40628f:	cmp    ah,BYTE PTR [eax]
  406291:	(bad)
  406294:	mov    ds:0x7f7922ab,al
  406299:	adc    eax,0xddb2b011
  40629e:	and    bl,bh
  4062a0:	mov    ch,0x57
  4062a2:	xchg   esp,eax
  4062a3:	inc    edi
  4062a4:	cmp    BYTE PTR [edi-0x5],dh
  4062a7:	dec    ebx
  4062a8:	inc    ebp
  4062a9:	loopne 0x4062ca
  4062ab:	aas    
  4062ac:	fiadd  WORD PTR [edx+0x50]
  4062af:	dec    ebx
  4062b0:	pop    esi
  4062b1:	cld    
  4062b2:	sub    al,0xa1
  4062b4:	(bad)  
  4062b5:	pop    es
  4062b6:	dec    edi
  4062b7:	std    
  4062b8:	mov    BYTE PTR [ebp-0x1445eb91],bh
  4062be:	pop    edx
  4062bf:	adc    al,0xa
  4062c1:	lods   al,BYTE PTR ds:[esi]
  4062c2:	fistp  DWORD PTR [eax-0x25]
  4062c5:	ins    BYTE PTR es:[edi],dx
  4062c6:	int3   
  4062c7:	pop    esp
  4062c8:	(bad)  
  4062c9:	std    
  4062ca:	sub    DWORD PTR ds:0x696882a7,0xfd7a045c
  4062d4:	dec    ebp
  4062d5:	aad    0xa6
  4062d7:	xor    al,0x83
  4062d9:	jns    0x40629e
  4062db:	dec    esp
  4062dc:	xor    eax,0xacb3ed55
  4062e1:	fisttp DWORD PTR [edx-0x37]
  4062e4:	imul   eax,DWORD PTR [edx],0xffffffa4
  4062e7:	and    DWORD PTR [edx],edi
  4062e9:	mov    ds:0xf425aa8e,eax
  4062ee:	das    
  4062ef:	sub    ecx,ecx
  4062f1:	dec    edx
  4062f2:	xchg   esp,eax
  4062f3:	std    
  4062f4:	pusha  
  4062f5:	es es add eax,0x85c26b37
  4062fc:	sbb    BYTE PTR [esi-0x3738767e],ah
  406302:	pop    eax
  406303:	pop    ebp
  406304:	(bad)  
  406305:	jg     0x40637a
  406307:	pop    ebx
  406308:	add    eax,0x7e17b3bf
  40630d:	push   es
  40630e:	xchg   ebx,eax
  40630f:	mov    al,al
  406311:	repnz push cs
  406313:	sbb    bh,BYTE PTR [ebx]
  406315:	cmp    ecx,DWORD PTR [ebx-0x3e]
  406318:	mov    edi,fs
  40631a:	mov    BYTE PTR ss:[eax],al
  40631d:	cmp    eax,ecx
  40631f:	dec    eax
  406320:	xchg   al,ah
  406322:	pop    eax
  406323:	enter  0x155b,0x49
  406327:	adc    al,0x2a
  406329:	pop    esp
  40632a:	add    DWORD PTR [edx],0x15
  40632d:	push   ss
  40632e:	cmp    DWORD PTR [ebp-0x1386a29a],esi
  406334:	out    0x26,al
  406336:	cdq    
  406337:	fidivr DWORD PTR [edi+0x4c]
  40633a:	adc    eax,0xb3739230
  40633f:	pop    ds
  406340:	in     al,dx
  406341:	jbe    0x4062f6
  406343:	inc    ebp
  406344:	push   cs
  406345:	in     eax,0x77
  406347:	test   DWORD PTR [esi-0x4008aec0],edx
  40634d:	into   
  40634e:	mov    al,ds:0xcbd8d74
  406353:	jle    0x406306
  406355:	mov    ebp,0x26d4c7fc
  40635a:	cmp    al,0x2d
  40635c:	and    BYTE PTR [ebp+0x1d],0x15
  406360:	cwde   
  406361:	fld    TBYTE PTR [eax+0x3b]
  406364:	rol    edi,cl
  406366:	jns    0x40636c
  406368:	mov    cl,0x85
  40636a:	lock cmc 
  40636c:	xchg   esp,eax
  40636d:	add    BYTE PTR [esi],ah
  40636f:	push   esi
  406370:	cli    
  406371:	lods   eax,DWORD PTR ds:[esi]
  406372:	sub    cl,BYTE PTR [ebx-0x21fb0f73]
  406378:	fwait
  406379:	jp     0x40631d
  40637b:	mov    ebp,0x5b63e63f
  406380:	inc    ebp
  406381:	fisubr WORD PTR ds:0xabbe297
  406387:	inc    ebx
  406388:	jmp    0x7f51:0xf505e05f
  40638f:	inc    edi
  406390:	adc    eax,DWORD PTR [edx+0x15]
  406393:	xchg   esi,eax
  406394:	aaa    
  406395:	inc    esi
  406396:	lods   eax,DWORD PTR ds:[esi]
  406397:	mov    ah,0xa3
  406399:	gs jb  0x406405
  40639c:	mov    eax,0x2bba28b8
  4063a1:	mov    ah,0x85
  4063a3:	retf   
  4063a4:	fs pop ss
  4063a6:	cmc    
  4063a7:	pop    ebx
  4063a8:	pushf  
  4063a9:	mov    DWORD PTR [edi],esp
  4063ab:	mov    al,0xac
  4063ad:	mov    esp,0x5bc237c8
  4063b2:	or     cl,BYTE PTR [edx+eiz*8+0x7c]
  4063b6:	pop    edi
  4063b7:	ins    DWORD PTR es:[edi],dx
  4063b8:	mov    ebx,0xe2f672cf
  4063bd:	jmp    0xe214:0x867bb367
  4063c4:	ret    
  4063c5:	pop    es
  4063c6:	adc    eax,0x79ffb2b6
  4063cb:	mov    ss,WORD PTR [ecx]
  4063cd:	call   0x973f:0x140ba51a
  4063d4:	in     al,0x17
  4063d6:	lods   eax,DWORD PTR ds:[esi]
  4063d7:	mov    cl,0x6d
  4063d9:	xchg   ebp,eax
  4063da:	pop    edi
  4063db:	test   DWORD PTR [eax+0x32],edi
  4063de:	inc    ebp
  4063df:	(bad)  
  4063e0:	cli    
  4063e1:	or     ebx,DWORD PTR [edx-0x7e2bcd8b]
  4063e7:	sub    ah,BYTE PTR [ecx]
  4063e9:	shl    ch,1
  4063eb:	lahf   
  4063ec:	mov    edi,0x8ff1f7f6
  4063f1:	sahf   
  4063f2:	idiv   BYTE PTR [ebp+0x11]
  4063f5:	outs   dx,WORD PTR ds:[esi]
  4063f7:	js     0x406426
  4063f9:	mov    ebp,0x5cf4376c
  4063fe:	mov    ebx,0x128d8f99
  406403:	int3   
  406404:	inc    edx
  406405:	cld    
  406406:	ins    BYTE PTR es:[edi],dx
  406407:	add    bh,ch
  406409:	js     0x40642f
  40640b:	and    ecx,eax
  40640d:	or     DWORD PTR [edi-0x27c724f1],edi
  406413:	jle    0x406456
  406415:	pop    ds
  406416:	nop
  406417:	rol    DWORD PTR [eax+0x4c116f5c],cl
  40641d:	bound  ebp,QWORD PTR ds:0x59ad87d4
  406423:	nop
  406424:	push   cs
  406425:	into   
  406426:	xchg   BYTE PTR [edx+0x779e332f],al
  40642c:	jecxz  0x406467
  40642e:	mov    eax,0xc916d2db
  406433:	inc    ebp
  406434:	ins    BYTE PTR es:[edi],dx
  406435:	xchg   esp,eax
  406436:	(bad)  
  406438:	and    DWORD PTR [eax-0x35],edx
  40643b:	or     eax,0x41847611
  406440:	retf   
  406441:	shl    DWORD PTR [edx],1
  406443:	xor    cl,BYTE PTR [ebx+0x67fb0c8c]
  406449:	mov    ecx,esi
  40644b:	sub    BYTE PTR [esi-0x308919cd],0xf0
  406452:	mov    ch,0x75
  406454:	push   ss
  406455:	push   0x8aef9d2e
  40645a:	mov    ebx,0xf818983
  40645f:	clc    
  406460:	push   edx
  406461:	sahf   
  406462:	js     0x4064c0
  406464:	mov    BYTE PTR [eax-0x11053fb5],ch
  40646a:	out    dx,eax
  40646b:	int    0x23
  40646d:	jo     0x40649d
  40646f:	aad    0x57
  406471:	mov    ds:0x4004813d,eax
  406476:	cld    
  406477:	retf   0xe669
  40647a:	shl    DWORD PTR [edi-0x7b5ca93d],1
  406480:	sbb    bl,bl
  406482:	cmp    eax,0x2b0e4b65
  406487:	sub    BYTE PTR [ebx+ebx*4+0x31],ch
  40648b:	cmp    eax,0xa6e53c2c
  406490:	push   ebx
  406491:	fnstsw WORD PTR [eax+eiz*2+0x12]
  406495:	push   eax
  406496:	adc    al,0x7b
  406498:	cmp    al,0xa4
  40649a:	cwde   
  40649b:	xor    edx,DWORD PTR [eax-0x46800bec]
  4064a1:	js     0x40646a
  4064a3:	outs   dx,DWORD PTR ds:[esi]
  4064a4:	pop    ss
  4064a5:	dec    ecx
  4064a6:	lock xor eax,0x9557ccd0
  4064ac:	inc    esp
  4064ad:	fwait
  4064ae:	jmp    0x2fa2:0x3f34e9d9
  4064b5:	lahf   
  4064b6:	cmp    bl,BYTE PTR ds:0xea343c69
  4064bc:	ret    
  4064bd:	pop    edx
  4064be:	test   DWORD PTR [edi+0x72a101d5],esi
  4064c4:	call   0x8cbe:0x451399fe
  4064cb:	repnz les ebx,FWORD PTR [ecx]
  4064ce:	jae    0x4064b5
  4064d0:	pop    ds
  4064d1:	and    BYTE PTR [ebp+0x47],bh
  4064d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d5:	loopne 0x406553
  4064d7:	add    al,0x92
  4064d9:	sbb    al,0xe7
  4064db:	jle    0x406533
  4064dd:	jmp    0x8e256e80
  4064e2:	fdiv   QWORD PTR [esi-0x6e08222c]
  4064e8:	adc    BYTE PTR [ebp+0x10641b45],ah
  4064ee:	lods   eax,DWORD PTR ds:[esi]
  4064ef:	rcr    BYTE PTR ds:0xa00aa2f6,0xf5
  4064f6:	(bad)  
  4064f8:	jg     0x406504
  4064fa:	retf   0x238b
  4064fd:	xor    eax,0xf61da04
  406502:	fcom   DWORD PTR [ebp+0xf]
  406505:	or     ch,BYTE PTR [esp+edx*1-0x10]
  406509:	fstp   DWORD PTR [edi]
  40650b:	(bad)  
  40650d:	inc    eax
  40650e:	xor    esi,ebp
  406510:	add    DWORD PTR [edi],ebp
  406512:	jp     0x40652c
  406514:	sbb    bh,BYTE PTR [ebp-0x13]
  406517:	into   
  406518:	ins    DWORD PTR es:[edi],dx
  406519:	mov    dh,0x8c
  40651b:	mov    ebx,0x3cf48700
  406520:	jno    0x406569
  406522:	das    
  406523:	push   esi
  406524:	mov    ah,0xd7
  406526:	test   DWORD PTR [ecx+eax*2-0x4b4e31a1],esi
  40652d:	int3   
  40652e:	ret    
  40652f:	jmp    0x4065ae
  406531:	fdiv   QWORD PTR [ecx]
  406533:	pop    esi
  406534:	adc    BYTE PTR [ebp-0x22],ah
  406537:	sahf   
  406538:	in     al,dx
  406539:	dec    esi
  40653a:	hlt    
  40653b:	arpl   cx,bx
  40653d:	jge    0x4064f5
  40653f:	sub    BYTE PTR [edi],bh
  406541:	or     eax,0x1673fa77
  406546:	out    dx,al
  406547:	dec    ecx
  406548:	stos   BYTE PTR es:[edi],al
  406549:	mov    edi,0x7c83e256
  40654e:	jbe    0x406524
  406550:	add    ebx,edx
  406552:	stc    
  406553:	jg     0x406594
  406555:	mov    ah,0x6
  406557:	push   0x9fe7eeba
  40655c:	jp     0x4065c6
  40655e:	sub    esp,DWORD PTR [edx+0x3aefcf15]
  406564:	xchg   edi,eax
  406565:	sahf   
  406566:	jo     0x4065ba
  406568:	aas    
  406569:	mov    edx,0x646ca1bf
  40656e:	push   esp
  40656f:	and    DWORD PTR ds:0xd808741f,esp
  406575:	(bad)  
  406576:	jp     0x406516
  406578:	xor    bl,BYTE PTR [ebx]
  40657a:	mov    ebp,0x1afcdaaf
  40657f:	int    0x5f
  406581:	ret    
  406582:	imul   esp,DWORD PTR [ecx+0x15b4791c],0x56260d40
  40658c:	scas   eax,DWORD PTR es:[edi]
  40658d:	xor    al,0x16
  40658f:	ret    
  406590:	iret   
  406591:	imul   edi,edi,0x5a9629d
  406597:	push   ds
  406598:	clc    
  406599:	add    DWORD PTR [ebp-0x1a],eax
  40659c:	icebp  
  40659d:	addr16 js 0x406554
  4065a0:	call   0xe1e3:0xe0439286
  4065a7:	sub    BYTE PTR [edx],cl
  4065a9:	jg     0x40659d
  4065ab:	repnz out 0xf9,al
  4065ae:	mov    edi,0xcd062c44
  4065b3:	call   0x22096a24
  4065b8:	je     0x4065b3
  4065ba:	mov    esi,0x6f0c7a82
  4065bf:	cs cmc 
  4065c1:	dec    eax
  4065c2:	in     al,dx
  4065c3:	mov    esp,0xaee5c5e7
  4065c8:	mov    edx,0xec2ce994
  4065cd:	mov    esi,0xac1d29e0
  4065d2:	je     0x406574
  4065d4:	mov    ecx,0xdcec0673
  4065d9:	aaa    
  4065da:	jb     0x40663f
  4065dc:	pop    es
  4065dd:	js     0x406652
  4065df:	cmp    eax,0x3d803365
  4065e4:	ficom  WORD PTR [esi]
  4065e6:	out    0x42,al
  4065e8:	scas   al,BYTE PTR es:[edi]
  4065e9:	ins    BYTE PTR es:[edi],dx
  4065ea:	int3   
  4065eb:	in     eax,dx
  4065ec:	(bad)  
  4065ed:	cmp    BYTE PTR [edi],bh
  4065ef:	dec    ebx
  4065f0:	jno    0x406632
  4065f2:	push   esi
  4065f3:	rcr    BYTE PTR es:[ebp-0x65],0xd3
  4065f8:	cli    
  4065f9:	jle    0x406652
  4065fb:	xchg   BYTE PTR [ebx+ebp*4+0x13],cl
  4065ff:	xchg   edx,eax
  406600:	nop
  406601:	xchg   esp,eax
  406602:	les    edx,FWORD PTR [edi]
  406604:	sub    BYTE PTR [esi+0x1ff16be8],cl
  40660a:	jge    0x406632
  40660c:	int    0x4f
  40660e:	jp     0x406666
  406610:	daa    
  406611:	pop    ss
  406612:	xor    BYTE PTR [esi-0x3fdac9ef],bh
  406618:	inc    esi
  406619:	cmp    ecx,eax
  40661b:	jae    0x40664e
  40661d:	inc    ebp
  40661e:	in     al,dx
  40661f:	push   ebx
  406620:	cmp    al,0x25
  406622:	sbb    DWORD PTR [eax+ebx*1-0x4],0xe917ab13
  40662a:	add    DWORD PTR [edx-0x3b],ecx
  40662d:	mov    esp,0x846c96f
  406632:	push   es
  406633:	imul   esp,DWORD PTR [ecx-0x38],0xffffff93
  406637:	jmp    0xa116:0x5e444b5d
  40663e:	es push edi
  406640:	pop    edi
  406641:	xchg   edx,eax
  406642:	dec    ebx
  406643:	pop    ecx
  406644:	retf   
  406645:	scas   al,BYTE PTR es:[edi]
  406646:	mov    dl,0x32
  406648:	mov    cl,0xd4
  40664a:	fisttp QWORD PTR [ebx]
  40664c:	or     esi,DWORD PTR [esi+0x73dd43c9]
  406652:	jbe    0x406663
  406654:	sub    eax,0x5ddc5dcb
  406659:	and    eax,0xf5339a5b
  40665e:	pop    ebx
  40665f:	out    0x69,eax
  406661:	or     al,0xd1
  406663:	mov    cl,0x14
  406665:	inc    edx
  406666:	sub    esp,DWORD PTR cs:[edi-0x69fafa91]
  40666d:	jl     0x40662f
  40666f:	mov    ?,WORD PTR [bx]
  406672:	adc    BYTE PTR [eax+0x5e728907],0x5c
  406679:	test   ebp,ebp
  40667b:	jge    0x406635
  40667d:	sbb    eax,0x4aef6b63
  406682:	fadd   QWORD PTR [esi]
  406684:	(bad)  
  406686:	sub    ebx,esp
  406688:	jmp    0x40664f
  40668a:	shl    DWORD PTR [eax],0x44
  40668d:	jmp    0x7db8:0x3d3e9cad
  406694:	lods   al,BYTE PTR ds:[esi]
  406695:	dec    edx
  406696:	test   ax,0x5820
  40669a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40669b:	mov    dl,0x27
  40669d:	div    DWORD PTR [esi-0x4e11fc4]
  4066a3:	das    
  4066a4:	ret    
  4066a5:	js     0x406683
  4066a7:	stos   DWORD PTR es:[edi],eax
  4066a8:	cmp    BYTE PTR [eax+0x54],ah
  4066ab:	scas   al,BYTE PTR es:[edi]
  4066ac:	and    al,0x22
  4066ae:	add    esi,DWORD PTR [ecx+0x2eeeae1d]
  4066b4:	bnd jg 0x4066fc
  4066b7:	xchg   edi,eax
  4066b8:	cmp    DWORD PTR [ecx+0x61],edi
  4066bb:	xor    al,0xa7
  4066bd:	into   
  4066be:	loopne 0x406712
  4066c0:	adc    eax,0xa42b99c0
  4066c5:	cmp    al,0xa0
  4066c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c8:	mov    edi,DWORD PTR [ecx]
  4066ca:	jbe    0x4066db
  4066cc:	jl     0x406731
  4066ce:	ror    BYTE PTR [edi],0x66
  4066d1:	hlt    
  4066d2:	out    0x5b,al
  4066d4:	mov    ebp,0x144b3767
  4066d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066db:	add    al,0x79
  4066dd:	ins    DWORD PTR es:[edi],dx
  4066de:	mov    ecx,0x255c1318
  4066e3:	aad    0x42
  4066e5:	fiadd  DWORD PTR [edi]
  4066e7:	out    0xe0,eax
  4066e9:	mov    ds:0x1c772751,eax
  4066ee:	push   0xfffffff3
  4066f0:	push   edx
  4066f1:	adc    al,0x66
  4066f3:	mov    eax,ds:0x437539ae
  4066f8:	aas    
  4066f9:	fdecstp 
  4066fb:	mov    ds:0x49e98ff2,eax
  406700:	das    
  406701:	adc    BYTE PTR [ecx-0x1c],0xe9
  406705:	xchg   edi,eax
  406706:	dec    BYTE PTR [esi+edx*1+0x4d060b6b]
  40670d:	xchg   edx,eax
  40670e:	dec    edi
  40670f:	xchg   BYTE PTR [esi-0x320f7530],cl
  406715:	and    ebp,DWORD PTR [ecx-0x78]
  406718:	test   al,0x4e
  40671a:	in     al,0xe0
  40671c:	ins    BYTE PTR es:[edi],dx
  40671d:	mov    dh,0x14
  40671f:	popa   
  406720:	push   cs
  406721:	enter  0xe473,0xc5
  406725:	sbb    BYTE PTR [ecx-0x43ad6223],0x23
  40672c:	sub    BYTE PTR [ebp-0x7b],0xf5
  406730:	int3   
  406731:	pop    esp
  406732:	mov    edx,0xa31302b3
  406737:	push   es
  406738:	xchg   ebp,eax
  406739:	fincstp 
  40673b:	dec    ecx
  40673c:	loopne 0x406770
  40673e:	lock pop ebx
  406740:	xchg   edi,eax
  406741:	in     eax,dx
  406742:	fstp   DWORD PTR [ebx-0x69]
  406745:	cmp    DWORD PTR [ecx+0x61],ebp
  406748:	(bad)  
  406749:	aas    
  40674a:	add    BYTE PTR [ebx-0x12],cl
  40674d:	call   0x26fdfdb4
  406752:	daa    
  406753:	scas   eax,DWORD PTR es:[edi]
  406754:	addr16 jp 0x406777
  406757:	repz pop ds
  406759:	aad    0x5c
  40675b:	mov    bl,0xbc
  40675d:	mov    ebx,0x1106dd69
  406762:	push   ds
  406763:	arpl   WORD PTR [ebx+0x2c960296],cx
  406769:	push   ecx
  40676a:	call   0x6bd0:0xe19ca0c1
  406771:	hlt    
  406772:	(bad)  
  406773:	sbb    dh,dh
  406775:	jne    0x406749
  406777:	jno    0x40675d
  406779:	xchg   esi,eax
  40677a:	xchg   edx,eax
  40677b:	push   edi
  40677c:	shl    DWORD PTR [ebp+0x13ac85],0xf0
  406783:	fcmovb st,st(5)
  406785:	inc    esp
  406786:	jmp    0x7f48d079
  40678b:	xchg   edx,eax
  40678c:	retf   0xca98
  40678f:	jnp    0x40677c
  406791:	mov    dh,0x3e
  406793:	aam    0xb4
  406795:	inc    ebx
  406796:	retf   
  406797:	cli    
  406798:	inc    esp
  406799:	inc    esp
  40679a:	daa    
  40679b:	or     BYTE PTR [esp+edx*4+0x1f],ch
  40679f:	jge    0x4067e6
  4067a1:	imul   dx,WORD PTR [esi-0x32acc00b],0xffa4
  4067a9:	scas   eax,DWORD PTR es:[edi]
  4067aa:	mov    ch,0x20
  4067ac:	leave  
  4067ad:	inc    ebx
  4067ae:	xor    DWORD PTR [ebp+0x7eb3593d],edi
  4067b4:	xchg   ecx,eax
  4067b5:	dec    DWORD PTR [ecx+0x14]
  4067b8:	cli    
  4067b9:	stc    
  4067ba:	mov    al,ds:0xcfb3bead
  4067bf:	pop    edx
  4067c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c1:	(bad)  
  4067c2:	pop    esp
  4067c3:	cmc    
  4067c4:	hlt    
  4067c5:	pop    es
  4067c6:	(bad)  
  4067c7:	aaa    
  4067c8:	adc    al,0xec
  4067ca:	cmc    
  4067cb:	iret   
  4067cc:	sti    
  4067cd:	sub    DWORD PTR [edi],eax
  4067cf:	das    
  4067d0:	inc    ebp
  4067d1:	mov    eax,ds:0x68ab24e3
  4067d6:	jmp    0x4067a2
  4067d8:	outs   dx,BYTE PTR ds:[esi]
  4067d9:	push   ebp
  4067da:	sub    al,0x63
  4067dc:	fprem1 
  4067de:	or     dl,dl
  4067e0:	and    ah,bl
  4067e2:	cs jmp 0x8390:0x877b76cb
  4067ea:	xlat   BYTE PTR ds:[ebx]
  4067eb:	and    eax,0x4b70bc8
  4067f0:	fstp   DWORD PTR [esi+0x61]
  4067f3:	pop    edx
  4067f4:	dec    eax
  4067f5:	fistp  QWORD PTR [ecx+0x6cec6eaf]
  4067fb:	sbb    bl,BYTE PTR ss:[ebx+eax*1+0x15]
  406800:	(bad)  
  406802:	add    BYTE PTR [esi+0x18e67192],0xc4
  406809:	arpl   WORD PTR [edi],di
  40680b:	or     al,0xbe
  40680d:	mov    dl,0x67
  40680f:	ror    DWORD PTR [esp+edi*2],1
  406812:	push   eax
  406813:	and    BYTE PTR [edi-0xff1b742],ch
  406819:	loop   0x406865
  40681b:	outs   dx,DWORD PTR ds:[esi]
  40681c:	jecxz  0x4067ba
  40681e:	or     al,0x53
  406820:	push   es
  406821:	xchg   ebp,eax
  406822:	cmp    al,0xb5
  406824:	sar    esi,0x25
  406827:	or     al,BYTE PTR ds:0x6f99c36b
  40682d:	inc    edx
  40682e:	loope  0x4068a5
  406830:	adc    al,0xcb
  406832:	mov    ecx,0x63806760
  406837:	stos   BYTE PTR es:[edi],al
  406838:	push   edx
  406839:	(bad)  
  40683b:	xchg   esi,eax
  40683c:	mov    edx,0x4514702d
  406841:	jno    0x40680d
  406843:	psubsb mm3,QWORD PTR [edi]
  406846:	js     0x40682e
  406848:	daa    
  406849:	mov    cs,WORD PTR [eax+0x4]
  40684c:	repnz add ah,al
  40684f:	xor    BYTE PTR [esi+0xf],cl
  406852:	cmp    al,0x3b
  406854:	retw   
  406856:	add    BYTE PTR [edi],ch
  406858:	jb     0x40681d
  40685a:	fadd   QWORD PTR [ecx-0x7a]
  40685d:	add    DWORD PTR [eax-0x3af7be7a],edx
  406863:	out    0xc2,eax
  406865:	cmp    eax,0x699d7d82
  40686a:	dec    esp
  40686b:	xchg   esp,eax
  40686c:	out    dx,al
  40686d:	xchg   esp,eax
  40686e:	dec    ecx
  40686f:	xchg   dh,bl
  406871:	mov    ds:0x4d4c3e0b,eax
  406876:	sub    eax,0x68a14d55
  40687b:	lahf   
  40687c:	fadd   QWORD PTR [ecx+ecx*8+0x69a00433]
  406883:	cmp    al,0xf1
  406885:	cmp    DWORD PTR [ebx-0x486a873a],edx
  40688b:	(bad)  [esi]
  40688d:	mov    dh,BYTE PTR [eax+0x3f]
  406890:	cdq    
  406891:	mov    gs,WORD PTR [edx]
  406893:	add    ebx,eax
  406895:	data16 sti 
  406897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406898:	and    DWORD PTR [ebx-0x517460f9],ebx
  40689e:	shr    DWORD PTR [ecx-0x35df0845],0x1f
  4068a5:	hlt    
  4068a6:	neg    bl
  4068a8:	cmp    eax,0x528ffe8
  4068ad:	inc    eax
  4068ae:	sub    eax,0x2abdaec1
  4068b3:	jecxz  0x40692c
  4068b5:	repz ja 0x406861
  4068b8:	scas   eax,DWORD PTR es:[edi]
  4068b9:	xchg   ebx,eax
  4068ba:	cmp    bh,BYTE PTR [edx+0x50]
  4068bd:	rcr    BYTE PTR [edi],0x3e
  4068c0:	sti    
  4068c1:	pop    edx
  4068c2:	call   0xb398:0xc7d82fc
  4068c9:	pop    eax
  4068ca:	pop    ss
  4068cb:	xor    bh,BYTE PTR [ebp-0x62f78b22]
  4068d1:	jp     0x406939
  4068d3:	push   cs
  4068d4:	jbe    0x406889
  4068d6:	push   ecx
  4068d7:	aas    
  4068d8:	minps  xmm7,XMMWORD PTR [ebx+0x66745da]
  4068df:	(bad)  
  4068e0:	push   cs
  4068e1:	js     0x4068df
  4068e3:	jne    0x4068ae
  4068e5:	xchg   esi,eax
  4068e6:	mov    esi,0x145e27b6
  4068eb:	nop
  4068ec:	jge    0x406948
  4068ee:	adc    al,0x36
  4068f0:	arpl   ax,di
  4068f2:	adc    dl,BYTE PTR [eax]
  4068f4:	pop    ebp
  4068f5:	out    0x2e,eax
  4068f7:	cwde   
  4068f8:	dec    edi
  4068f9:	sub    bl,BYTE PTR [ecx-0x2b6e1829]
  4068ff:	icebp  
  406900:	add    ecx,DWORD PTR [ebp+eax*1-0x75]
  406904:	int3   
  406905:	rol    bh,cl
  406907:	out    0x81,eax
  406909:	push   0xfffffff6
  40690b:	mov    ah,0x68
  40690d:	ss retf 0xfd49
  406911:	sbb    BYTE PTR [edi],0x38
  406914:	aaa    
  406915:	(bad)  
  406916:	sbb    edx,DWORD PTR [ecx+edx*1]
  406919:	dec    ebx
  40691a:	call   0x671f2350
  40691f:	fwait
  406920:	into   
  406921:	xchg   edi,eax
  406922:	lds    esp,FWORD PTR [eax+0x42]
  406925:	jecxz  0x406985
  406927:	fsubr  DWORD PTR [ebx]
  406929:	pop    esi
  40692a:	cmp    DWORD PTR [ecx+0x39],esi
  40692d:	mov    ds:0xebf4f2c8,eax
  406932:	aam    0x2b
  406934:	gs push cs
  406936:	push   edx
  406937:	(bad)
  40693a:	xor    esi,DWORD PTR [edx+0x34]
  40693d:	mov    ah,BYTE PTR [ebx]
  40693f:	jne    0x406907
  406941:	jae    0x40699b
  406943:	sub    edx,ebp
  406945:	cli    
  406946:	inc    ecx
  406947:	inc    ebp
  406948:	in     eax,0x8d
  40694a:	stos   DWORD PTR es:[edi],eax
  40694b:	push   ss
  40694c:	leave  
  40694d:	sbb    al,BYTE PTR [edx]
  40694f:	sub    BYTE PTR [eax+0x78c9957f],al
  406955:	dec    ebx
  406956:	pop    ds
  406957:	and    eax,DWORD PTR [edx-0x53]
  40695a:	call   0x2689:0xc0ef
  406960:	pop    ebp
  406961:	out    dx,al
  406962:	and    eax,0x2aab5d61
  406967:	pop    ss
  406968:	xchg   BYTE PTR [ebx+0x2b9cf0eb],bh
  40696e:	dec    ecx
  40696f:	rcl    DWORD PTR [ebp-0x633449be],cl
  406975:	jl     0x406917
  406977:	sti    
  406978:	sti    
  406979:	in     eax,dx
  40697a:	cmp    al,BYTE PTR [ebp-0x64a2bc45]
  406980:	sub    BYTE PTR [ebx-0x36],cl
  406983:	or     ah,BYTE PTR [esi]
  406985:	mov    ds:0x440979f0,al
  40698a:	mov    gs,WORD PTR [ebx]
  40698c:	mov    esp,DWORD PTR [ebx-0x47d8515f]
  406992:	pop    edx
  406993:	(bad)  
  406994:	clc    
  406995:	(bad)  
  406996:	jb     0x406943
  406998:	push   eax
  406999:	pusha  
  40699a:	gs inc esp
  40699c:	sub    al,0x16
  40699e:	mov    edi,0x38f6678b
  4069a3:	fimul  WORD PTR [esi-0x37256eed]
  4069a9:	or     DWORD PTR [ecx-0x67f8327a],edx
  4069af:	leave  
  4069b0:	jns    0x4069e7
  4069b2:	bound  edx,QWORD PTR [edi-0x77]
  4069b5:	es jne 0x406a25
  4069b8:	jmp    0x7847:0x9a240777
  4069bf:	mov    ecx,DWORD PTR [ebx]
  4069c1:	sahf   
  4069c2:	add    al,0xde
  4069c4:	(bad)  
  4069c5:	jmp    0x77999221
  4069ca:	loope  0x406958
  4069cc:	mov    DWORD PTR [ebx+0x29],ebx
  4069cf:	repnz loope 0x4069cc
  4069d2:	sbb    eax,0x96d368bc
  4069d7:	mov    edi,0xc7c9467
  4069dc:	call   0xb66e884a
  4069e1:	data16 fisttp WORD PTR [ebp-0x26e9be4e]
  4069e8:	inc    edi
  4069e9:	inc    esp
  4069ea:	gs cmp eax,0x1f322b8f
  4069f0:	jg     0x40699b
  4069f2:	jmp    0x30f6:0x53a6a1d3
  4069f9:	inc    esi
  4069fa:	stc    
  4069fb:	int    0xe8
  4069fd:	adc    esi,esp
  4069ff:	sbb    dh,BYTE PTR [ecx+0x6d22703d]
  406a05:	nop
  406a06:	std    
  406a07:	or     esi,DWORD PTR [ecx-0x2d5597a9]
  406a0d:	fwait
  406a0e:	add    bh,bl
  406a10:	dec    eax
  406a11:	gs dec edi
  406a13:	in     al,dx
  406a14:	dec    edi
  406a15:	shr    DWORD PTR [ebx+0x7401fc32],0x32
  406a1c:	adc    eax,0x6960c9b5
  406a21:	loop   0x406a47
  406a23:	sbb    eax,0x3230e67d
  406a28:	test   al,0x55
  406a2a:	ins    DWORD PTR es:[edi],dx
  406a2b:	sub    al,0x36
  406a2d:	daa    
  406a2e:	mov    cl,0xd4
  406a30:	xor    al,0xcf
  406a32:	ins    DWORD PTR es:[edi],dx
  406a33:	inc    edx
  406a34:	jmp    0x406a73
  406a36:	sub    DWORD PTR [esi+eiz*8-0x3],esi
  406a3a:	js     0x4069f8
  406a3c:	pop    ecx
  406a3d:	pop    esp
  406a3e:	ds jecxz 0x406a94
  406a41:	test   BYTE PTR fs:[ecx+0x40],ch
  406a45:	daa    
  406a46:	mov    WORD PTR [edi-0x7121b272],?
  406a4c:	out    0xb2,al
  406a4e:	mov    es,WORD PTR [ebx+0x51]
  406a51:	pop    ebp
  406a52:	jb     0x406a07
  406a54:	cmp    DWORD PTR ds:0xc59583a5,0x9e18e579
  406a5e:	jnp    0x406a2d
  406a60:	gs int3 
  406a62:	mov    al,0x16
  406a64:	add    eax,DWORD PTR [ebp-0x5b9ed8f2]
  406a6a:	sar    BYTE PTR [ecx-0x1021b301],1
  406a70:	jbe    0x406ab4
  406a72:	mov    ch,0xd
  406a74:	mov    ebp,0xb18109f5
  406a79:	call   0x925b:0x666b3e30
  406a80:	or     ebx,DWORD PTR [eax+0x35d3555]
  406a86:	jno    0x406b02
  406a88:	test   al,0x69
  406a8a:	add    BYTE PTR [eax+0xd],ah
  406a8d:	mov    bh,0x54
  406a8f:	mov    ah,0xfd
  406a91:	push   ebp
  406a92:	push   0x46cec700
  406a97:	xchg   bx,ax
  406a99:	dec    esp
  406a9a:	jns    0x406b0a
  406a9c:	cmp    eax,0x96442941
  406aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa2:	mov    edi,0xeb6670f9
  406aa7:	icebp  
  406aa8:	push   esi
  406aa9:	cmp    eax,0x41e729d3
  406aae:	mov    ebx,0x16279e7
  406ab3:	jb     0x406ac8
  406ab5:	mov    eax,ds:0x65193273
  406aba:	xchg   edi,eax
  406abb:	ret    
  406abc:	push   bx
  406abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406abf:	iret   
  406ac0:	or     DWORD PTR [ebp+0x24],ebp
  406ac3:	xchg   esp,eax
  406ac4:	ret    
  406ac5:	jns    0x406ab7
  406ac7:	jecxz  0x406a58
  406ac9:	adc    ebp,DWORD PTR [esp+ebp*1-0x27152ec6]
  406ad0:	xor    ah,ah
  406ad2:	mov    DWORD PTR [edi+0x5f8321d2],edx
  406ad8:	sub    eax,0x39600259
  406add:	out    0x3f,eax
  406adf:	fimul  WORD PTR [edi-0x64d36971]
  406ae5:	push   ss
  406ae6:	sub    eax,0xbc84ee73
  406aeb:	and    al,0xf3
  406aed:	xlat   BYTE PTR ds:[ebx]
  406aee:	pop    esp
  406aef:	jp     0x406ab1
  406af1:	fiadd  WORD PTR [ecx+edx*8+0x4928f637]
  406af8:	jecxz  0x406b0f
  406afa:	or     edx,eax
  406afc:	in     eax,0x85
  406afe:	repz dec ebp
  406b00:	(bad)  
  406b01:	lahf   
  406b02:	add    dh,BYTE PTR [esi+0x70]
  406b05:	adc    eax,0xb2709b87
  406b0a:	cld    
  406b0b:	pop    ebx
  406b0c:	retf   0x3b66
  406b0f:	fucom  st(4)
  406b11:	jno    0x406b29
  406b13:	mov    esp,0xa4d6accc
  406b18:	inc    ecx
  406b19:	inc    ebx
  406b1a:	push   ebx
  406b1b:	sub    ebp,DWORD PTR [eax-0x207b0c0]
  406b21:	add    eax,0xdcbfed11
  406b26:	mov    esi,DWORD PTR [edx+0x70cceeec]
  406b2c:	repnz arpl WORD PTR [ebp+0x7fcf0542],di
  406b33:	cmp    DWORD PTR [ecx+0x1d6d5097],ebx
  406b39:	adc    eax,0x3aad2dcb
  406b3e:	in     eax,0x88
  406b40:	aaa    
  406b41:	pop    ecx
  406b42:	es out 0xae,eax
  406b45:	pop    ds
  406b46:	jp     0x406ad6
  406b48:	cmc    
  406b49:	popf   
  406b4a:	daa    
  406b4b:	mov    al,cl
  406b4d:	push   esi
  406b4e:	adc    al,0x26
  406b50:	in     al,dx
  406b51:	sub    esp,edi
  406b53:	inc    esp
  406b54:	mul    DWORD PTR [edx-0x50]
  406b57:	ss pop edi
  406b59:	pop    eax
  406b5a:	mov    ebx,ds
  406b5c:	inc    ecx
  406b5d:	sar    DWORD PTR [ebp-0x72b19294],cl
  406b63:	dec    eax
  406b64:	and    al,0xf8
  406b66:	stos   DWORD PTR es:[edi],eax
  406b67:	xlat   BYTE PTR ds:[ebx]
  406b68:	pop    es
  406b69:	pusha  
  406b6a:	sbb    eax,0x6a1a31b2
  406b6f:	and    al,0xeb
  406b71:	mov    edi,0xcefa7873
  406b76:	mov    cl,0x78
  406b78:	lahf   
  406b79:	or     eax,0x268e2cfd
  406b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b7f:	into   
  406b80:	(bad)  
  406b81:	icebp  
  406b82:	jnp    0x406b69
  406b84:	pop    ds
  406b85:	outs   dx,DWORD PTR fs:[esi]
  406b87:	scas   eax,DWORD PTR es:[edi]
  406b88:	lock in eax,0xe4
  406b8b:	or     DWORD PTR [esp+ebp*2+0x48],edi
  406b8f:	cmp    al,BYTE PTR [eax+0x4c227f06]
  406b95:	mov    esi,DWORD PTR [edi]
  406b97:	outs   dx,DWORD PTR ds:[esi]
  406b99:	and    al,0xda
  406b9b:	pop    eax
  406b9c:	cmp    BYTE PTR [ebx-0x2e],dh
  406b9f:	jno    0x406b9e
  406ba1:	aad    0xb9
  406ba3:	jecxz  0x406b77
  406ba5:	adc    eax,0x600a3784
  406baa:	jl     0x406bae
  406bac:	mov    ebp,0x12c6ab5a
  406bb1:	add    DWORD PTR [ecx],ebp
  406bb3:	sub    eax,0xfdff315f
  406bb8:	clc    
  406bb9:	out    0x70,al
  406bbb:	das    
  406bbc:	sub    ebx,esp
  406bbe:	mov    ecx,0x86f7d9ed
  406bc3:	push   edx
  406bc4:	mov    esp,0xade49155
  406bc9:	repnz pop ebp
  406bcb:	sub    DWORD PTR [edi],esi
  406bcd:	daa    
  406bce:	stc    
  406bcf:	mov    eax,DWORD PTR [esi-0x741c9268]
  406bd5:	(bad)  
  406bd6:	push   esp
  406bd7:	ds pop es
  406bd9:	dec    ebx
  406bda:	jmp    0x68d969bb
  406bdf:	cmp    dl,cl
  406be1:	ret    0x4404
  406be4:	jle    0x406b78
  406be6:	xlat   BYTE PTR ds:[ebx]
  406be7:	sbb    al,BYTE PTR [ecx+0x4ff98176]
  406bed:	in     eax,dx
  406bee:	fs retf 0x1d0a
  406bf2:	xchg   ebx,eax
  406bf3:	out    dx,al
  406bf4:	jne    0x406bf2
  406bf6:	push   esp
  406bf7:	dec    ebx
  406bf8:	jo     0x406bcb
  406bfa:	loop   0x406bfe
  406bfc:	or     bl,bl
  406bfe:	repz xor al,BYTE PTR [edi-0x6300a336]
  406c05:	mov    ecx,0x251f84c8
  406c0a:	imul   edi,esp,0x6e1b9bc3
  406c10:	es pop ss
  406c12:	xchg   esp,eax
  406c13:	stos   BYTE PTR es:[edi],al
  406c14:	ror    BYTE PTR [eax+0x41],1
  406c17:	mov    bh,0x7e
  406c19:	xchg   edi,eax
  406c1a:	jg     0x406c8a
  406c1c:	(bad)  
  406c1d:	xor    ebx,DWORD PTR ds:0x9e193d8d
  406c23:	add    al,0xd4
  406c25:	fiadd  DWORD PTR [eax-0x2c58f665]
  406c2b:	or     dh,bl
  406c2d:	sbb    cl,BYTE PTR [edx+0x4b30d679]
  406c33:	sub    al,0x60
  406c35:	icebp  
  406c36:	popa   
  406c37:	icebp  
  406c38:	dec    edx
  406c39:	out    0x22,al
  406c3b:	mov    edi,0xaf7b2ac5
  406c40:	jns    0x406c53
  406c42:	add    ecx,ebx
  406c44:	lods   al,BYTE PTR ds:[esi]
  406c45:	sub    ebp,DWORD PTR [ecx]
  406c47:	add    edx,DWORD PTR [edx]
  406c49:	pusha  
  406c4a:	in     al,dx
  406c4b:	out    dx,al
  406c4c:	popf   
  406c4d:	sbb    edx,ebp
  406c4f:	in     al,0x14
  406c51:	inc    edi
  406c52:	pop    edi
  406c53:	repnz dec eax
  406c55:	not    DWORD PTR [ecx]
  406c57:	or     BYTE PTR [ebp-0x4dcbde4e],dh
  406c5d:	jl     0x406c9c
  406c5f:	xchg   DWORD PTR [ecx],ebx
  406c61:	popf   
  406c62:	xor    al,0x72
  406c64:	leave  
  406c65:	xor    edi,DWORD PTR [esi-0x7a]
  406c68:	fcom   DWORD PTR [ebp-0x7c]
  406c6b:	nop
  406c6c:	add    ah,cl
  406c6e:	mov    cs,WORD PTR [ebp-0x1192ff2d]
  406c74:	sub    esp,DWORD PTR [edi-0x5defe346]
  406c7a:	cmp    DWORD PTR [edi],0xad6c5464
  406c80:	jmp    0x406c95
  406c82:	mov    dh,0xbc
  406c84:	call   DWORD PTR [ebx]
  406c86:	mov    edx,0xe8a62719
  406c8b:	pop    eax
  406c8c:	or     al,0xa9
  406c8e:	neg    BYTE PTR [eax-0x21]
  406c91:	sub    ch,BYTE PTR [edx+0x77e1a5c6]
  406c97:	dec    esi
  406c98:	aam    0x1a
  406c9a:	outs   dx,DWORD PTR ds:[esi]
  406c9b:	dec    edi
  406c9c:	not    WORD PTR [edx+0x4e]
  406ca0:	sub    eax,DWORD PTR ss:[edi+0x4918dfc7]
  406ca7:	push   esi
  406ca8:	sub    dl,al
  406caa:	in     eax,0x50
  406cac:	cld    
  406cad:	scas   eax,DWORD PTR es:[edi]
  406cae:	fsubr  st,st(7)
  406cb0:	fmul   DWORD PTR [ebx+0x7]
  406cb3:	cmp    BYTE PTR [ebx],0xf
  406cb6:	fs js  0x406c69
  406cb9:	std    
  406cba:	push   cs
  406cbb:	xor    ch,BYTE PTR gs:[ebx]
  406cbe:	hlt    
  406cbf:	push   esi
  406cc0:	jnp    0x406c90
  406cc2:	shl    BYTE PTR [edx],cl
  406cc4:	adc    ah,ah
  406cc6:	and    ch,BYTE PTR [edi-0x50847e99]
  406ccc:	outs   dx,BYTE PTR ds:[esi]
  406ccd:	mov    dl,bh
  406ccf:	lods   eax,DWORD PTR es:[esi]
  406cd1:	adc    ebx,esp
  406cd3:	mov    esp,ebp
  406cd5:	jmp    0xba96:0x91258c56
  406cdc:	fisub  DWORD PTR [edx+0x7c]
  406cdf:	mov    esp,0xd3ae208c
  406ce4:	mov    ds:0x930115d5,eax
  406ce9:	pop    ecx
  406cea:	mov    dh,0xc0
  406cec:	sbb    al,0xc5
  406cee:	je     0x406d3b
  406cf0:	dec    ebp
  406cf1:	dec    esp
  406cf2:	cmp    ebp,DWORD PTR [ebp+0x78]
  406cf5:	push   ds
  406cf6:	(bad)  
  406cf7:	jl     0x406d1b
  406cf9:	pop    ds
  406cfa:	or     esi,DWORD PTR [ecx+0x31442437]
  406d00:	mov    bh,0x50
  406d02:	xchg   esi,eax
  406d03:	push   0x61
  406d05:	rcr    DWORD PTR [edx],cl
  406d07:	les    eax,FWORD PTR [edi-0x11]
  406d0a:	fisttp DWORD PTR [ecx+0x5476f20d]
  406d10:	sti    
  406d11:	retf   
  406d12:	xor    dh,BYTE PTR [esi+0x5]
  406d15:	pop    edi
  406d16:	fimul  DWORD PTR [ecx]
  406d18:	loop   0x406d81
  406d1a:	cmp    al,0xee
  406d1c:	(bad)  
  406d1d:	mov    WORD PTR [ebx],ss
  406d1f:	jne    0x406cbf
  406d21:	xchg   edx,eax
  406d22:	ds adc ebp,ebp
  406d25:	dec    eax
  406d26:	cs data16 mov al,0x26
  406d2a:	sbb    edx,esi
  406d2c:	and    esi,ecx
  406d2e:	ins    BYTE PTR es:[edi],dx
  406d2f:	out    dx,al
  406d30:	aad    0xb0
  406d32:	adc    eax,0x868be776
  406d37:	nop
  406d38:	test   DWORD PTR [ebp-0x1cfad477],0xd4bcaa0c
  406d42:	pop    esi
  406d43:	imul   ebp,DWORD PTR [edx+0x2e],0x67
  406d47:	rcl    dl,1
  406d49:	mov    ds:0x14974e23,al
  406d4e:	inc    ecx
  406d4f:	adc    DWORD PTR [ecx],0x44
  406d52:	test   DWORD PTR [ebx+0x3e],ebx
  406d55:	jmp    0x406d39
  406d57:	xchg   edx,eax
  406d58:	nop
  406d59:	pop    ss
  406d5a:	pop    ds
  406d5b:	sbb    DWORD PTR [esi+0x3a76f8ad],ebx
  406d61:	ficomp DWORD PTR [ebp+0x1684a13b]
  406d67:	test   al,0xa6
  406d69:	sub    eax,0x2baae884
  406d6e:	shl    BYTE PTR ss:[ebx-0x516cc01d],1
  406d75:	ret    
  406d76:	pop    eax
  406d77:	inc    ecx
  406d78:	repnz and al,0xec
  406d7b:	jne    0x406d3a
  406d7d:	std    
  406d7e:	lahf   
  406d7f:	repnz arpl WORD PTR [eax+0x1f097afc],dx
  406d86:	cld    
  406d87:	sbb    eax,0x1d16aea0
  406d8c:	adc    BYTE PTR [ecx-0x162c810b],dl
  406d92:	into   
  406d93:	add    BYTE PTR [eax],ch
  406d95:	xor    BYTE PTR ds:0x36fca6f2,bh
  406d9b:	and    DWORD PTR [eax+0xdc5f59f],esi
  406da1:	lock push es
  406da3:	and    al,0x2c
  406da5:	add    dl,ch
  406da7:	xor    DWORD PTR [esi+0x7b2745b9],ebx
  406dad:	sbb    al,BYTE PTR [esp+eax*8]
  406db0:	dec    esp
  406db1:	push   0x170c942f
  406db6:	add    al,0x45
  406db8:	jmp    0x406dd2
  406dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbb:	push   ecx
  406dbc:	cmp    esp,ebp
  406dbe:	mov    ds:0x17d3663f,al
  406dc3:	out    dx,eax
  406dc4:	je     0x406da9
  406dc6:	mov    ?,ecx
  406dc8:	cmp    eax,DWORD PTR [esi]
  406dca:	xchg   edi,eax
  406dcb:	mov    WORD PTR [ecx-0x4284f6d0],fs
  406dd1:	(bad)  
  406dd2:	aaa    
  406dd3:	pusha  
  406dd4:	add    BYTE PTR [ecx-0x1d],cl
  406dd7:	mov    al,ds:0x394df4b0
  406ddc:	jnp    0x406df4
  406dde:	data16 cmp cl,BYTE PTR ds:0x67c4f5b7
  406de5:	mov    ecx,0x403a030e
  406dea:	xor    al,0xc2
  406dec:	xchg   edx,eax
  406ded:	mov    esi,0x9604f90a
  406df2:	(bad)  
  406df3:	sub    cl,bh
  406df5:	fisttp DWORD PTR [edi+0x3e]
  406df8:	mov    bl,0x46
  406dfa:	pop    ecx
  406dfb:	lods   al,BYTE PTR ds:[esi]
  406dfc:	push   ss
  406dfd:	into   
  406dfe:	into   
  406dff:	ror    al,cl
  406e01:	dec    edx
  406e02:	out    dx,al
  406e03:	ret    0xd627
  406e06:	int    0x5b
  406e08:	fwait
  406e09:	leave  
  406e0a:	push   ebx
  406e0b:	push   0xb9411ebf
  406e10:	loop   0x406e10
  406e12:	lock mov ch,0x7a
  406e15:	repz add ecx,DWORD PTR [ebx+0x1882d8e7]
  406e1c:	stos   BYTE PTR es:[edi],al
  406e1d:	mov    edx,0x26b50bd2
  406e22:	cmp    esp,DWORD PTR [eax]
  406e24:	ss xbegin 0x814d0a8a
  406e2b:	add    edi,DWORD PTR [ebx+0x2ad59049]
  406e31:	fs mov edx,0x1162d044
  406e37:	push   es
  406e38:	in     eax,dx
  406e39:	test   BYTE PTR [edi],dh
  406e3b:	jge    0x406dbf
  406e3d:	xchg   edi,eax
  406e3e:	je     0x406e9c
  406e40:	mov    edx,0x65f237bb
  406e45:	in     eax,dx
  406e46:	in     al,dx
  406e47:	ret    0x3392
  406e4a:	push   es
  406e4b:	push   cs
  406e4c:	sbb    esi,DWORD PTR [ecx]
  406e4e:	mov    ecx,DWORD PTR [esi-0x382357f5]
  406e54:	pop    edi
  406e55:	adc    al,0xbc
  406e57:	jecxz  0x406e38
  406e59:	ja     0x406ec9
  406e5b:	ins    BYTE PTR es:[edi],dx
  406e5c:	adc    eax,DWORD PTR [edx+edi*4+0x0]
  406e60:	dec    edi
  406e61:	scas   eax,DWORD PTR es:[edi]
  406e62:	add    eax,0xca5b9ab
  406e67:	test   al,0xbb
  406e69:	xchg   ebp,eax
  406e6a:	inc    ecx
  406e6b:	push   0xd1a63423
  406e70:	test   al,0xa6
  406e72:	sbb    DWORD PTR [esp+edx*4+0x5f],ecx
  406e76:	inc    ecx
  406e77:	out    0xb4,al
  406e79:	sbb    ch,BYTE PTR [ecx+0x286be366]
  406e7f:	jb     0x406e38
  406e81:	sub    cl,al
  406e83:	dec    edi
  406e84:	(bad)  
  406e85:	pop    ebp
  406e86:	popf   
  406e87:	int    0xfb
  406e89:	dec    ebx
  406e8a:	jae    0x406ec3
  406e8c:	xor    esi,DWORD PTR [ebp-0x4]
  406e8f:	cli    
  406e90:	and    BYTE PTR [eax-0x70838207],bl
  406e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e97:	adc    ecx,DWORD PTR [edx]
  406e99:	in     al,0x1b
  406e9b:	jns    0x406e4d
  406e9d:	cmp    BYTE PTR [ecx-0x11],dh
  406ea0:	gs aad 0x36
  406ea3:	dec    ebx
  406ea4:	call   0x31daeb95
  406ea9:	into   
  406eaa:	cld    
  406eab:	fisttp DWORD PTR [ebx]
  406ead:	jmp    0xcd9f7bf4
  406eb2:	jg     0x406e6e
  406eb4:	push   esi
  406eb5:	rcr    DWORD PTR [eax-0x32],1
  406eb8:	dec    edx
  406eb9:	mov    eax,0x427312cc
  406ebe:	push   esp
  406ebf:	inc    ecx
  406ec0:	jp     0x406f0a
  406ec2:	dec    esi
  406ec3:	ins    DWORD PTR es:[edi],dx
  406ec4:	mov    eax,0xcd47c15f
  406ec9:	mov    esp,0x66c0a951
  406ece:	ins    DWORD PTR es:[edi],dx
  406ecf:	leave  
  406ed0:	aas    
  406ed1:	out    dx,eax
  406ed2:	sub    eax,0x71619193
  406ed7:	test   eax,0xc282b235
  406edc:	cwde   
  406edd:	lea    ebp,cs:[edx-0x2e]
  406ee1:	xchg   ebp,eax
  406ee2:	xor    al,0xd4
  406ee4:	sub    DWORD PTR [eax+0x41443187],edi
  406eea:	and    al,0xc2
  406eec:	cmp    al,0xf5
  406eee:	push   esi
  406eef:	stc    
  406ef0:	in     eax,dx
  406ef1:	iret   
  406ef2:	loope  0x406f73
  406ef4:	or     ebx,ebp
  406ef6:	push   eax
  406ef7:	fsub   DWORD PTR [ebx]
  406ef9:	pop    ecx
  406efa:	push   ebx
  406efb:	in     eax,0xbe
  406efd:	push   esp
  406efe:	ror    BYTE PTR [edi+0x8],1
  406f01:	jb     0x406eeb
  406f03:	fs adc al,0xb7
  406f06:	xor    eax,0x8c864c1f
  406f0b:	cli    
  406f0c:	rcl    eax,cl
  406f0e:	stos   DWORD PTR es:[edi],eax
  406f0f:	push   eax
  406f10:	push   edi
  406f11:	pop    esi
  406f12:	jae    0x406f3c
  406f14:	pop    ecx
  406f15:	inc    eax
  406f16:	cmovle esp,DWORD PTR ds:0xbaf11e66
  406f1d:	rcl    BYTE PTR [ebp-0x54],1
  406f20:	cmp    eax,0xe5a58ae5
  406f25:	in     al,dx
  406f26:	adc    bh,bl
  406f28:	ror    eax,0x14
  406f2b:	mov    ebx,0xc05d5915
  406f30:	mov    edi,0x9b907c06
  406f35:	cmp    edi,DWORD PTR [ebp-0x3e]
  406f38:	fidiv  WORD PTR [edi]
  406f3a:	mov    ch,0xf0
  406f3c:	fist   WORD PTR [edx]
  406f3e:	sbb    BYTE PTR [esi-0x44],cl
  406f41:	pop    esi
  406f42:	inc    eax
  406f43:	or     al,0xe8
  406f45:	fcomip st,st(1)
  406f47:	dec    edx
  406f48:	aas    
  406f49:	(bad)  
  406f4a:	call   FWORD PTR [edx-0x2d832c8c]
  406f50:	inc    esp
  406f51:	add    ebx,DWORD PTR [edx-0x22]
  406f54:	sub    bl,bl
  406f56:	push   cs
  406f57:	retf   0xeb7
  406f5a:	xchg   edx,eax
  406f5b:	out    0x25,al
  406f5d:	retf   
  406f5e:	cmp    eax,0x17316dc7
  406f63:	aad    0x17
  406f65:	or     eax,ebx
  406f67:	popf   
  406f68:	retf   
  406f69:	and    edx,DWORD PTR [esi-0x201bef93]
  406f6f:	in     eax,0x92
  406f71:	bound  ebp,QWORD PTR [eax]
  406f73:	ret    
  406f74:	daa    
  406f75:	mov    ds:0xabe177ef,al
  406f7a:	add    ebx,ecx
  406f7c:	xchg   ebx,eax
  406f7d:	dec    edi
  406f7e:	mov    dh,0x86
  406f80:	stc    
  406f81:	retf   0xc199
  406f84:	mov    edx,DWORD PTR [ecx]
  406f86:	lahf   
  406f87:	jno    0x406f50
  406f89:	inc    eax
  406f8a:	fs inc edx
  406f8c:	adc    cl,BYTE PTR [ecx]
  406f8e:	enter  0x2ce,0xee
  406f92:	dec    ecx
  406f93:	jns    0x406f3c
  406f95:	mov    esi,0x12302efd
  406f9a:	dec    edi
  406f9b:	sub    ecx,edi
  406f9d:	retf   0xc69
  406fa0:	cmp    ebx,ebp
  406fa2:	lea    esp,[eax+0x58]
  406fa5:	or     edi,ebp
  406fa7:	jae    0x406fa4
  406fa9:	stc    
  406faa:	pushf  
  406fab:	sub    al,0xed
  406fad:	adc    al,0x4a
  406faf:	std    
  406fb0:	adc    ebx,esp
  406fb2:	mov    ebx,0x7611dadc
  406fb7:	jae    0x407029
  406fb9:	adc    eax,0x249702ee
  406fbe:	test   al,0x71
  406fc0:	xchg   ebp,eax
  406fc1:	adc    DWORD PTR [ecx-0x5d0f7cd6],edx
  406fc7:	es dec ebx
  406fc9:	mov    cl,0x7b
  406fcb:	and    ebx,ebx
  406fcd:	push   edi
  406fce:	aam    0x87
  406fd0:	(bad)  
  406fd1:	psadbw mm3,mm7
  406fd4:	dec    esi
  406fd5:	pop    ebx
  406fd6:	xchg   ecx,eax
  406fd7:	xor    BYTE PTR [ecx-0x77],dl
  406fda:	std    
  406fdb:	cdq    
  406fdc:	cmp    dl,BYTE PTR [esi+0x3f]
  406fdf:	sahf   
  406fe0:	popf   
  406fe1:	test   dh,ah
  406fe3:	mov    eax,0xb1212c59
  406fe8:	fldenv [esi-0x60]
  406feb:	mov    edx,0xd2c49247
  406ff0:	mov    ecx,0xae2d3075
  406ff5:	jne    0x407073
  406ff7:	fidiv  WORD PTR [edi+0x60]
  406ffa:	jno    0x406f9b
  406ffc:	cdq    
  406ffd:	mov    ebx,0x34f11b9e
  407002:	push   es
  407003:	lds    esp,FWORD PTR [edi+0x70]
  407006:	sbb    DWORD PTR [esi+0x9],0xffffffc9
  40700a:	mov    ebp,0xa1ef33ca
  40700f:	pushf  
  407010:	out    dx,eax
  407011:	pop    esi
  407012:	cmc    
  407013:	in     eax,0x0
  407015:	stos   BYTE PTR es:[edi],al
  407016:	stc    
  407017:	mov    esi,0xfde178a0
  40701c:	fild   WORD PTR [ebp-0x2d]
  40701f:	js     0x40704e
  407021:	sbb    eax,0x8668b4f
  407026:	sar    BYTE PTR [edi-0x7e99dcd6],cl
  40702c:	jmp    0x97e553dc
  407031:	out    dx,al
  407032:	retf   
  407033:	inc    esi
  407034:	jg     0x407061
  407036:	cs mov ss,WORD PTR gs:[edx+0x78]
  40703b:	xor    dh,BYTE PTR [edi-0x1276d7dd]
  407041:	push   esi
  407042:	sub    ah,cl
  407044:	loope  0x40707e
  407046:	repz cmp eax,0x39c9c4e3
  40704c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40704d:	fs push ebp
  40704f:	jb     0x406ff3
  407051:	sbb    bh,0x89
  407054:	daa    
  407055:	xchg   ebx,eax
  407056:	fbld   TBYTE PTR [eax-0x357b1077]
  40705c:	int    0xe0
  40705e:	dec    ebp
  40705f:	mov    ah,BYTE PTR [edx-0x4a6570a9]
  407065:	aas    
  407066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407067:	jno    0x406ffa
  407069:	jmp    0x407062
  40706b:	push   cs
  40706c:	xchg   cl,bl
  40706e:	add    eax,0x17f0c9f5
  407073:	sub    DWORD PTR [ecx-0x1c],esi
  407076:	mov    ebx,0x6b5a91a6
  40707b:	retf   0x1241
  40707e:	add    DWORD PTR [ebx],0xb7d6d047
  407084:	fbld   TBYTE PTR [ebx-0x4c]
  407087:	daa    
  407088:	lds    eax,FWORD PTR [esi+0x34f5b656]
  40708e:	cwde   
  40708f:	mov    esi,0x3620222c
  407094:	das    
  407095:	add    bh,BYTE PTR es:[eax-0x62ff119e]
  40709c:	icebp  
  40709d:	scas   eax,DWORD PTR es:[edi]
  40709e:	and    BYTE PTR [eax+0x5],0xca
  4070a2:	into   
  4070a3:	or     bh,BYTE PTR [edi+0x2d42355e]
  4070a9:	retw   
  4070ab:	retf   0x1028
  4070ae:	xchg   esi,eax
  4070af:	mov    ch,0x62
  4070b1:	in     al,dx
  4070b2:	into   
  4070b3:	pop    ds
  4070b4:	dec    ebp
  4070b5:	outs   dx,DWORD PTR ds:[esi]
  4070b6:	dec    eax
  4070b7:	or     ebx,ebx
  4070b9:	jmp    FWORD PTR [edi]
  4070bb:	in     al,dx
  4070bc:	jbe    0x40709b
  4070be:	push   ss
  4070bf:	in     al,0x41
  4070c1:	cld    
  4070c2:	fdivr  QWORD PTR [esi]
  4070c4:	or     al,0x48
  4070c6:	add    DWORD PTR [esi],edi
  4070c8:	jb     0x407113
  4070ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cb:	sub    esi,edi
  4070cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ce:	xchg   esp,eax
  4070cf:	sbb    eax,0x8f07a969
  4070d4:	dec    ebp
  4070d5:	dec    esi
  4070d6:	add    edx,DWORD PTR [eax+ebx*8-0x15893f5a]
  4070dd:	stc    
  4070de:	sub    edx,edx
  4070e0:	push   esp
  4070e1:	sub    BYTE PTR [esi],0x14
  4070e4:	cmp    al,BYTE PTR [edi+0x4a]
  4070e7:	push   0xffffff8e
  4070e9:	dec    esi
  4070ea:	mov    esp,0x18031ab1
  4070ef:	pop    edi
  4070f0:	xor    eax,0x770a2e97
  4070f5:	and    eax,0xffd16d04
  4070fa:	jbe    0x40709f
  4070fc:	ss pop es
  4070fe:	push   ds
  4070ff:	in     al,0x2
  407101:	lock scas eax,DWORD PTR es:[edi]
  407103:	dec    dx
  407105:	iret   
  407106:	push   ss
  407107:	mov    BYTE PTR [edi-0x27],bl
  40710a:	or     DWORD PTR [edi+eiz*2+0x339ba1c5],ecx
  407111:	enter  0x2ac7,0xf8
  407115:	xor    edx,DWORD PTR [edi-0xd62bf01]
  40711b:	inc    edi
  40711c:	mov    dl,0xff
  40711e:	xchg   edi,eax
  40711f:	(bad)  
  407120:	fistp  QWORD PTR [ecx+0x47df3109]
  407126:	ficomp WORD PTR [eax]
  407128:	mov    dl,0x19
  40712a:	mov    dl,0x8d
  40712c:	mov    esp,0x7dc411d7
  407131:	sub    eax,0x347665b4
  407136:	add    BYTE PTR [ebp+0x259bfcfd],dl
  40713c:	xlat   BYTE PTR ds:[ebx]
  40713d:	loop   0x407147
  40713f:	jl     0x4071aa
  407141:	ja     0x407142
  407143:	add    DWORD PTR [esi-0x70],esp
  407146:	pop    ebp
  407147:	fs gs and eax,0x99d3e534
  40714e:	pop    ebp
  40714f:	jle    0x4071a7
  407151:	gs jne 0x407157
  407154:	jae    0x40719d
  407156:	(bad)  
  407158:	push   eax
  407159:	(bad)  
  40715b:	std    
  40715c:	nop
  40715d:	jmp    0xefd0:0x466e373a
  407164:	ds jno 0x407144
  407167:	adc    dl,BYTE PTR [ecx]
  407169:	push   0xdf0e28f9
  40716e:	sub    ebp,DWORD PTR [esi+0x59]
  407171:	repnz lds esp,FWORD PTR [edi]
  407174:	cmp    bh,dh
  407176:	inc    ecx
  407177:	hlt    
  407178:	adc    dh,bl
  40717a:	in     eax,0xbe
  40717c:	xor    bh,ch
  40717e:	dec    esi
  40717f:	lods   eax,DWORD PTR ds:[esi]
  407180:	push   edx
  407181:	scas   eax,DWORD PTR es:[edi]
  407182:	mov    eax,cs:0x7bf02e30
  407188:	and    esp,DWORD PTR [eax-0x63]
  40718b:	cdq    
  40718c:	out    dx,eax
  40718d:	std    
  40718e:	ds int 0x1e
  407191:	lea    ebp,[esi-0x2475222]
  407197:	xchg   esp,eax
  407198:	test   DWORD PTR [esi+0x507f1c34],0xc0709d3f
  4071a2:	in     al,0x3a
  4071a4:	xor    bl,dh
  4071a6:	inc    edi
  4071a7:	mov    bl,cl
  4071a9:	sub    eax,0xdcce1fa8
  4071ae:	leave  
  4071af:	cwde   
  4071b0:	dec    ebx
  4071b1:	add    DWORD PTR [eax-0x1c],0xdc829485
  4071b8:	test   al,0xe8
  4071ba:	adc    DWORD PTR ds:0x3b0d9f38,ebp
  4071c0:	jmp    DWORD PTR [ecx]
  4071c2:	xor    BYTE PTR [ecx-0x79812016],al
  4071c8:	cmp    bl,BYTE PTR [esi+0x13]
  4071cb:	(bad)  [ebp+0x65]
  4071ce:	jnp    0x4071dc
  4071d0:	ret    
  4071d1:	or     al,0x3e
  4071d3:	std    
  4071d4:	xchg   DWORD PTR [eax],esi
  4071d6:	test   eax,0x1ee7a146
  4071db:	push   ebp
  4071dc:	fwait
  4071dd:	xchg   BYTE PTR [edi-0x198db061],dh
  4071e3:	dec    esi
  4071e4:	arpl   dx,cx
  4071e6:	xchg   BYTE PTR [ecx],ch
  4071e8:	loopne 0x4071dc
  4071ea:	cmc    
  4071eb:	mov    dl,0xfa
  4071ed:	sbb    dh,ah
  4071ef:	ret    0x5fad
  4071f2:	adc    eax,0x58ac19d2
  4071f7:	imul   ebx,DWORD PTR [edx+0x1ee21c86],0x7a
  4071fe:	mov    ds:0xc75f6657,eax
  407203:	or     DWORD PTR [esi+esi*8-0x47594fac],ebp
  40720a:	sbb    ebx,esi
  40720c:	hlt    
  40720d:	dec    ebp
  40720e:	pushf  
  40720f:	div    edi
  407211:	jbe    0x4071c3
  407213:	outs   dx,DWORD PTR ds:[esi]
  407214:	retf   0xf21d
  407217:	cmp    esi,ecx
  407219:	daa    
  40721a:	inc    edi
  40721b:	xchg   dl,al
  40721d:	xchg   DWORD PTR [ebx+edi*2],esi
  407220:	sub    ch,al
  407222:	sub    eax,0x7ca3d900
  407227:	stos   DWORD PTR es:[edi],eax
  407228:	mov    cl,0x7c
  40722a:	push   ebx
  40722c:	lahf   
  40722d:	pop    ebx
  40722e:	mov    ebp,0xeb9c60b
  407233:	in     eax,0xca
  407235:	lock cwde 
  407237:	push   edi
  407238:	out    0xcf,al
  40723a:	inc    ecx
  40723b:	bnd jl 0x40725f
  40723e:	xor    ebx,DWORD PTR [eax]
  407240:	in     eax,dx
  407241:	push   esp
  407242:	sahf   
  407243:	jl     0x407267
  407245:	outs   dx,DWORD PTR ds:[esi]
  407246:	inc    esp
  407247:	enter  0x5eca,0x3a
  40724b:	sbb    DWORD PTR [esi+0x2d894e09],edi
  407251:	mov    edi,0xa523ee87
  407256:	icebp  
  407257:	ret    0x6af7
  40725a:	and    ecx,ecx
  40725c:	mov    ebp,0x4828f58d
  407261:	adc    DWORD PTR [eax],edi
  407263:	xor    al,0xcf
  407265:	stc    
  407266:	pop    edx
  407267:	je     0x40727b
  407269:	(bad)  
  40726a:	add    DWORD PTR [edx+0x4],edx
  40726d:	dec    ebp
  40726e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40726f:	xor    ch,BYTE PTR [edi-0x7c]
  407272:	dec    ebp
  407273:	jns    0x4072cc
  407275:	(bad)  
  407276:	inc    edi
  407277:	(bad)  
  407278:	mov    ebp,DWORD PTR [edx+edi*2+0xb]
  40727c:	and    esi,esi
  40727e:	test   BYTE PTR [edi],ah
  407280:	daa    
  407281:	dec    esp
  407282:	cmp    edx,esi
  407284:	stos   DWORD PTR es:[edi],eax
  407285:	cmp    ecx,DWORD PTR [ebp-0x67]
  407288:	or     BYTE PTR [edx+edx*1+0x273b9da4],cl
  40728f:	pop    ds
  407290:	in     al,dx
  407291:	push   ds
  407292:	lods   eax,DWORD PTR ds:[esi]
  407293:	pop    ss
  407294:	pushf  
  407295:	push   0x280dd9f
  40729a:	lods   al,BYTE PTR ds:[esi]
  40729b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40729c:	push   edi
  40729d:	ins    BYTE PTR es:[edi],dx
  40729e:	mov    ds:0x9ac8a3e7,al
  4072a3:	les    ebx,FWORD PTR [eax+0x6c9be953]
  4072a9:	and    BYTE PTR [edi+edi*2-0x19],al
  4072ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ae:	ss pop ebp
  4072b0:	inc    ebp
  4072b1:	lock mov fs,WORD PTR [bx+di-0x601a]
  4072b7:	mov    ah,0x45
  4072b9:	inc    eax
  4072ba:	mov    ah,0xc4
  4072bc:	ucomiss xmm7,xmm7
  4072bf:	retf   0x13ae
  4072c2:	sbb    eax,0xd3c400a9
  4072c7:	jne    0x407348
  4072c9:	adc    ebx,DWORD PTR [ebp+0x2]
  4072cc:	cwde   
  4072cd:	xchg   ecx,eax
  4072ce:	push   0xeb109180
  4072d3:	test   BYTE PTR [ebx],dh
  4072d5:	mov    dh,0xea
  4072d7:	rcl    DWORD PTR [ebp+0x67e192e4],1
  4072dd:	rol    DWORD PTR [ecx+0x19],cl
  4072e0:	cmp    ah,bh
  4072e2:	sub    al,0xb4
  4072e4:	dec    edi
  4072e5:	xor    BYTE PTR [ebx],cl
  4072e7:	mov    bh,0x6d
  4072e9:	push   esi
  4072ea:	sbb    BYTE PTR [esi],bl
  4072ec:	lock mov ebx,edx
  4072ef:	in     al,dx
  4072f0:	inc    ebp
  4072f1:	mov    ebx,0x62eed819
  4072f6:	ds jmp 0xe20d:0xf47c4bb1
  4072fe:	test   DWORD PTR cs:[edx-0x3efe73b],ebx
  407305:	jnp    0x407386
  407307:	push   edx
  407308:	sbb    bl,dh
  40730a:	rol    esp,cl
  40730c:	mov    ebp,0xe96fd44c
  407311:	mov    esp,0x86ddc072
  407316:	or     eax,0x9f55f1fb
  40731b:	push   0xa0e7c0a3
  407320:	and    DWORD PTR [edi+0x45608727],edi
  407326:	sbb    bl,bl
  407328:	scas   eax,DWORD PTR es:[edi]
  407329:	and    BYTE PTR [ebx-0x35],bh
  40732c:	mov    ds:0xa4bb9066,eax
  407331:	mov    al,ds:0xfb904b71
  407336:	xchg   edx,eax
  407337:	inc    ebx
  407338:	adc    al,0x27
  40733a:	pop    ds
  40733b:	loope  0x4072e9
  40733d:	mov    esp,0xc8cfcfb9
  407342:	jg     0x4073b7
  407344:	xchg   esi,eax
  407345:	jbe    0x40734a
  407347:	push   cs
  407348:	cli    
  407349:	or     BYTE PTR [ecx],ch
  40734b:	adc    DWORD PTR [esi+0x1ddcf6ec],edx
  407351:	adc    cl,BYTE PTR [esi]
  407353:	stos   DWORD PTR es:[edi],eax
  407354:	xchg   edx,eax
  407355:	sub    al,dl
  407357:	nop
  407358:	inc    edx
  407359:	add    al,0xf4
  40735b:	aad    0xb2
  40735d:	std    
  40735e:	add    BYTE PTR [edi],dh
  407360:	xchg   ecx,eax
  407361:	out    dx,eax
  407362:	add    al,0x49
  407364:	dec    BYTE PTR [edi-0x9]
  407367:	mov    WORD PTR [ebp+0x54],ds
  40736a:	jecxz  0x4073b9
  40736c:	cmc    
  40736d:	dec    edx
  40736e:	(bad)  
  40736f:	loope  0x4073eb
  407371:	push   es
  407372:	jnp    0x40735b
  407374:	inc    ebp
  407375:	sbb    DWORD PTR [eax+0x52],ebx
  407378:	shr    BYTE PTR [edi-0x592ac690],1
  40737e:	(bad)  
  40737f:	mov    ch,0xcc
  407381:	jl     0x4073be
  407383:	hlt    
  407384:	cld    
  407385:	xchg   ecx,eax
  407386:	xor    bh,BYTE PTR [edx-0x4e309e01]
  40738c:	shl    dl,cl
  40738e:	sbb    ecx,DWORD PTR [esi+0x8]
  407391:	sahf   
  407392:	es (bad) 
  407394:	test   eax,0x1f40e534
  407399:	sti    
  40739a:	bound  esp,QWORD PTR [edx+edx*4]
  40739d:	test   DWORD PTR [ebx-0x5e5048dc],edx
  4073a3:	je     0x40736c
  4073a5:	(bad)  
  4073a7:	dec    esp
  4073a8:	xchg   ebx,esp
  4073aa:	rcr    BYTE PTR [edx],1
  4073ac:	ret    
  4073ad:	mov    ch,0x7c
  4073af:	sub    eax,DWORD PTR [edi+0x16b38e6]
  4073b5:	pop    esi
  4073b6:	xlat   BYTE PTR ds:[ebx]
  4073b7:	js     0x407424
  4073b9:	add    dh,BYTE PTR [esp+eiz*8+0x7352cc02]
  4073c0:	mov    ebp,0x64918b0d
  4073c5:	xchg   ebp,eax
  4073c6:	arpl   WORD PTR [esi+0x243c1c6d],sp
  4073cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073cd:	adc    al,bl
  4073cf:	out    dx,eax
  4073d0:	push   ss
  4073d1:	dec    ecx
  4073d2:	or     DWORD PTR [edx+0x52fe7fc7],edx
  4073d8:	adc    BYTE PTR [eax],0x1f
  4073db:	and    al,0x9b
  4073dd:	inc    ebp
  4073de:	cdq    
  4073df:	addr16 jae 0x40737d
  4073e2:	cmp    BYTE PTR [esi-0x55970606],dh
  4073e8:	repnz xor DWORD PTR [ebx],0xffffffb6
  4073ec:	xchg   ecx,eax
  4073ed:	call   0x9106:0xefce1864
  4073f4:	popa   
  4073f5:	retf   
  4073f6:	lods   al,BYTE PTR ds:[esi]
  4073f8:	scas   al,BYTE PTR es:[edi]
  4073f9:	xchg   ebx,eax
  4073fa:	jecxz  0x407407
  4073fc:	pop    esp
  4073fd:	xor    eax,0x6bfdab33
  407402:	shr    DWORD PTR [edi-0x1a],0x51
  407406:	ret    0xc1a8
  407409:	nop
  40740a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40740c:	jmp    0x4073b2
  40740e:	sbb    dh,bl
  407410:	stc    
  407411:	cmp    DWORD PTR [esi+esi*8-0x17],ebx
  407415:	add    ebp,DWORD PTR [ecx+0x3745d0c9]
  40741b:	aam    0xe6
  40741d:	add    eax,DWORD PTR [eax-0x132dc34f]
  407423:	in     al,dx
  407424:	mov    eax,DWORD PTR [ecx-0x4ad5f9f3]
  40742a:	div    DWORD PTR [eax]
  40742c:	cli    
  40742d:	in     al,0x92
  40742f:	stos   BYTE PTR es:[edi],al
  407430:	pop    eax
  407431:	ins    BYTE PTR es:[edi],dx
  407432:	out    dx,al
  407433:	mov    DWORD PTR [edi+eax*4],ebp
  407436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407437:	mov    ecx,0x8e3422d7
  40743c:	mov    ebx,0x92f6bdaf
  407441:	jl     0x407426
  407443:	mov    eax,0x51ba149a
  407448:	aad    0xaa
  40744a:	sbb    eax,0xddd154ee
  40744f:	leave  
  407450:	pusha  
  407451:	pop    esp
  407452:	test   BYTE PTR [edi],cl
  407454:	pop    ebx
  407455:	movnti DWORD PTR [ebx],edx
  407458:	pop    ebp
  407459:	mov    eax,0x9d171fcb
  40745e:	inc    edx
  40745f:	jns    0x407454
  407461:	push   ebp
  407462:	mov    WORD PTR [eax],ds
  407464:	fcmovbe st,st(0)
  407466:	retf   0xbb4b
  407469:	sar    DWORD PTR [ebx-0x5fcfd5f0],1
  40746f:	test   DWORD PTR [edx+eax*2],edi
  407472:	loope  0x407409
  407474:	inc    esp
  407475:	arpl   WORD PTR [eax],ax
  407477:	sbb    al,0x98
  407479:	mov    ds,esp
  40747b:	or     BYTE PTR [ebp-0x1a],0xe8
  40747f:	gs (bad) 
  407482:	jbe    0x4074a5
  407484:	mov    ebp,0xd82a4e73
  407489:	add    al,0xd7
  40748b:	hlt    
  40748c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40748d:	jae    0x407480
  40748f:	sub    eax,0xe57ef2db
  407494:	add    al,0x3f
  407496:	pop    ds
  407497:	cmp    BYTE PTR ds:[edi+0x42],dl
  40749b:	sbb    BYTE PTR [esi+0x3e4be92f],dh
  4074a1:	mov    edi,0x989fffbc
  4074a6:	and    ah,BYTE PTR [ebx]
  4074a8:	jns    0x407475
  4074aa:	and    DWORD PTR ds:0x60efa89d,esp
  4074b0:	dec    ebp
  4074b1:	ror    BYTE PTR [ecx-0x4d],0xe4
  4074b5:	and    BYTE PTR [ecx+eiz*2+0x4a],dl
  4074b9:	retf   0x1f84
  4074bc:	mov    al,BYTE PTR [esp+edx*8]
  4074bf:	pop    esi
  4074c0:	mov    WORD PTR [ecx],gs
  4074c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c3:	xlat   BYTE PTR ds:[ebx]
  4074c4:	jmp    0xc64d432
  4074c9:	mov    ch,0x35
  4074cb:	push   cs
  4074cc:	fucomip st,st(0)
  4074ce:	mov    ch,0xa7
  4074d0:	mov    dl,0x50
  4074d2:	mov    ecx,0xf29d8394
  4074d7:	jecxz  0x40745f
  4074d9:	int3   
  4074da:	sar    DWORD PTR [edx+0x17],1
  4074dd:	out    dx,eax
  4074de:	jno    0x4074fc
  4074e0:	push   esp
  4074e1:	retf   
  4074e2:	push   esp
  4074e3:	jbe    0x4074aa
  4074e5:	add    eax,0xa6c10f4d
  4074ea:	pop    es
  4074eb:	in     eax,dx
  4074ec:	or     al,0x78
  4074ee:	xchg   DWORD PTR [ecx],eax
  4074f0:	dec    ebp
  4074f1:	int    0x38
  4074f3:	adc    ah,BYTE PTR [eax-0x56fa690e]
  4074f9:	pop    esi
  4074fa:	add    DWORD PTR [ecx+edx*4-0x30],0x7f
  4074ff:	xchg   BYTE PTR [edx-0x40],dh
  407502:	aam    0x24
  407504:	ret    
  407505:	jno    0x4074d4
  407507:	jmp    0x8655:0xd59755b0
  40750e:	outs   dx,DWORD PTR ds:[esi]
  40750f:	jmp    0xef46cae3
  407514:	(bad)  
  407515:	fdivp  st(5),st
  407517:	out    0xfa,eax
  407519:	dec    edx
  40751a:	ja     0x407519
  40751c:	dec    edi
  40751d:	or     ecx,DWORD PTR [ebp+0x70536103]
  407523:	cmc    
  407524:	add    BYTE PTR [ecx+0x5d],bl
  407527:	jle    0x407504
  407529:	loope  0x407537
  40752b:	jmp    0x58e46a73
  407530:	in     eax,0x1c
  407532:	gs (bad) 
  407534:	aas    
  407535:	test   DWORD PTR [edi-0x19],esi
  407538:	sub    esi,DWORD PTR [ecx+0x734b59d9]
  40753e:	jmp    0x66df39a7
  407543:	mov    BYTE PTR [ecx],dl
  407545:	sub    BYTE PTR [edi],dh
  407547:	xchg   ebx,eax
  407548:	and    eax,edi
  40754a:	scas   eax,DWORD PTR es:[edi]
  40754b:	mov    bh,0x80
  40754d:	(bad)  
  40754e:	imul   esp,DWORD PTR [ebx],0xfffffff3
  407551:	repz add eax,0x3e990263
  407557:	cmp    BYTE PTR [ecx+0x5b],cl
  40755a:	pop    ebp
  40755b:	or     al,0x33
  40755d:	pop    edi
  40755e:	push   edx
  40755f:	retf   0x6727
  407562:	(bad)  
  407563:	jecxz  0x4075a4
  407565:	adc    DWORD PTR [esi+ecx*4-0x43950296],edx
  40756c:	jne    0x4075bf
  40756e:	nop
  40756f:	xor    DWORD PTR [edi],0xffffffa2
  407572:	or     BYTE PTR ss:[esi+0x3f148f99],ch
  407579:	pop    ebp
  40757a:	inc    edi
  40757b:	pop    ecx
  40757c:	or     dh,0x66
  40757f:	or     al,0xa8
  407581:	cdq    
  407582:	jns    0x407569
  407584:	imul   ecx,DWORD PTR [edx-0x3e790280],0xffffffa2
  40758b:	cdq    
  40758c:	fcomp  DWORD PTR [esp+edi*2+0x49279cdd]
  407593:	sbb    bh,BYTE PTR [ecx+0x7a]
  407596:	dec    ecx
  407597:	loopne 0x4075a4
  407599:	fldenv [edx-0x64]
  40759c:	xchg   esi,eax
  40759d:	xchg   edx,eax
  40759e:	jle    0x407606
  4075a0:	nop
  4075a1:	add    al,0xc7
  4075a3:	lods   eax,DWORD PTR ds:[esi]
  4075a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075a5:	in     al,0x8a
  4075a7:	or     eax,0xed03fb9c
  4075ac:	sbb    al,0x13
  4075ae:	xchg   edx,eax
  4075af:	into   
  4075b0:	sbb    DWORD PTR [ebx+0x6b],ebx
  4075b3:	mov    edi,0x2fe400e5
  4075b8:	jo     0x4075fd
  4075ba:	lock jmp 0x4c1330a9
  4075c0:	xchg   esi,eax
  4075c1:	push   esp
  4075c2:	jp     0x40759f
  4075c4:	or     eax,esp
  4075c6:	dec    esi
  4075c7:	xlat   BYTE PTR ds:[ebx]
  4075c8:	aam    0xe3
  4075ca:	pop    ss
  4075cb:	out    0x52,al
  4075cd:	mov    ds:0x6a8b585e,eax
  4075d2:	mov    esp,0x2111ff96
  4075d7:	and    eax,0x9fbfce60
  4075dc:	mov    BYTE PTR [ebx+ebp*1],0xc
  4075e0:	ds ins DWORD PTR es:[edi],dx
  4075e2:	xchg   edi,eax
  4075e3:	cmp    BYTE PTR [edx-0x3],al
  4075e6:	aad    0x7c
  4075e8:	lds    edi,FWORD PTR [edi-0x6]
  4075eb:	shl    BYTE PTR ds:0x7f04596e,1
  4075f1:	pop    edx
  4075f2:	pop    edx
  4075f3:	cdq    
  4075f4:	push   esi
  4075f5:	adc    BYTE PTR ds:0xb94980c6,bl
  4075fb:	imul   esi,esi,0x6e2f0a6b
  407601:	push   edi
  407602:	lock jl 0x4075b0
  407605:	push   cs
  407606:	das    
  407607:	retf   
  407608:	mov    esp,ebp
  40760a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40760b:	or     BYTE PTR [ebp-0x66d86fe2],0xb6
  407612:	xor    DWORD PTR [edi+ebp*1-0x1e25d756],0xffffffcb
  40761a:	stos   BYTE PTR es:[edi],al
  40761b:	xchg   cl,bh
  40761d:	mov    DWORD PTR [eax],esi
  40761f:	cdq    
  407620:	dec    edx
  407621:	loope  0x407633
  407623:	sahf   
  407624:	gs jle 0x407672
  407627:	inc    ebp
  407628:	mov    al,BYTE PTR [edx-0x4e]
  40762b:	enter  0xcaad,0xb3
  40762f:	inc    esi
  407630:	jo     0x40768d
  407632:	add    eax,0xfb08ddde
  407637:	neg    ah
  407639:	(bad)  
  40763a:	xor    BYTE PTR [ebx-0x18],bh
  40763d:	push   ebx
  40763e:	mov    ah,0xf3
  407640:	push   es
  407641:	fwait
  407642:	pop    ds
  407643:	shl    DWORD PTR [edi+0x44],cl
  407646:	pop    edi
  407647:	mov    cl,0x89
  407649:	out    dx,al
  40764a:	cmp    DWORD PTR [ecx+0x28],esp
  40764d:	or     al,0x4e
  40764f:	mov    ah,0xa2
  407651:	push   cs
  407652:	sbb    al,0x90
  407654:	shl    DWORD PTR [esi+ebp*4-0xbce30bc],cl
  40765b:	loop   0x407659
  40765d:	push   ecx
  40765e:	mov    al,0xd1
  407660:	fs cdq 
  407662:	rcr    BYTE PTR [ecx+0x598e51c8],1
  407668:	xlat   BYTE PTR ds:[ebx]
  407669:	push   edi
  40766a:	fadd   QWORD PTR [ecx]
  40766c:	sub    BYTE PTR [ebx],cl
  40766e:	push   esi
  40766f:	jo     0x4076d8
  407671:	adc    eax,0x3cdc7f55
  407676:	cmp    eax,0x5cd09272
  40767b:	test   eax,0x70c29962
  407680:	add    al,BYTE PTR [edx-0x27e37be2]
  407686:	imul   ecx,DWORD PTR [esi-0x58b421fa],0x9c154c84
  407690:	nop
  407691:	in     al,dx
  407692:	mov    BYTE PTR [edx],ah
  407694:	sub    eax,0x29abbaa0
  407699:	cli    
  40769a:	mov    ecx,0xe9954785
  40769f:	iret   
  4076a0:	mov    fs:0x4b1d538f,eax
  4076a6:	(bad)  
  4076a8:	adc    al,0x9
  4076aa:	loope  0x4076f5
  4076ac:	pop    esi
  4076ad:	push   cs
  4076ae:	mov    ebp,0xfe943089
  4076b3:	mov    bl,0x4f
  4076b5:	mov    ebp,0x5cfd1737
  4076ba:	dec    ecx
  4076bb:	enter  0x7fef,0x53
  4076bf:	adc    DWORD PTR ds:0xfaf7c8be,eax
  4076c5:	jmp    0x40766d
  4076c7:	std    
  4076c8:	bound  ebx,QWORD PTR [ebx-0x52]
  4076cb:	inc    esi
  4076cc:	lods   al,BYTE PTR cs:[esi]
  4076ce:	push   ss
  4076cf:	mov    eax,ds:0x7fc08e37
  4076d4:	shl    edx,cl
  4076d6:	dec    ebx
  4076d7:	fdiv   DWORD PTR [ecx]
  4076d9:	dec    edx
  4076da:	pop    edi
  4076db:	mov    edx,0xb9f547d6
  4076e0:	jnp    0x407704
  4076e2:	shl    DWORD PTR [ecx],0x4e
  4076e5:	sar    BYTE PTR [esi+0x23],cl
  4076e8:	or     BYTE PTR [ebx+0x6381e856],bl
  4076ee:	loope  0x4076c2
  4076f0:	xchg   ebp,eax
  4076f1:	pop    es
  4076f2:	jo     0x40770f
  4076f4:	jl     0x4076b0
  4076f6:	mov    edx,0x34f71e3f
  4076fb:	(bad)  
  4076fc:	and    eax,0xf074a8a3
  407701:	cmp    al,0x59
  407703:	sahf   
  407704:	ret    
  407705:	in     al,0xbb
  407707:	dec    BYTE PTR [esi-0x66ca30ed]
  40770d:	stos   DWORD PTR es:[edi],eax
  40770e:	cmp    al,0xdc
  407710:	mov    dh,cl
  407712:	je     0x40770f
  407714:	loopne 0x4076e5
  407716:	inc    esi
  407717:	out    0x56,al
  407719:	mov    al,0x1a
  40771b:	loope  0x4076f2
  40771d:	sbb    eax,0x1c6447da
  407722:	mov    dh,0xe8
  407724:	int3   
  407725:	daa    
  407726:	pop    ebx
  407727:	jne    0x40776a
  407729:	sub    eax,DWORD PTR [ecx]
  40772b:	aas    
  40772c:	sbb    al,0x69
  40772e:	imul   DWORD PTR [ebp+0x56ed4589]
  407734:	jmp    0x407753
  407736:	hlt    
  407737:	setb   BYTE PTR [ebp-0x502597ca]
  40773e:	scas   al,BYTE PTR es:[edi]
  40773f:	push   0xffffffd5
  407741:	or     DWORD PTR [esp+edi*8+0x22],ecx
  407745:	stc    
  407746:	xchg   ecx,eax
  407747:	add    bh,BYTE PTR [ebx-0x62b11021]
  40774d:	call   FWORD PTR [ebx+ebp*8+0x2f]
  407751:	cld    
  407752:	jo     0x4077a6
  407754:	xor    BYTE PTR [eax+0x204c08ed],0x12
  40775b:	aad    0xdb
  40775d:	mov    edx,?
  40775f:	aas    
  407760:	leave  
  407761:	stos   BYTE PTR es:[edi],al
  407762:	iret   
  407763:	iret   
  407764:	jmp    0xae289aa5
  407769:	xchg   DWORD PTR [ebp-0x1c],edx
  40776c:	or     al,0x82
  40776e:	addr16 push ebx
  407770:	add    dl,BYTE PTR ds:[ecx+0x4d]
  407774:	xchg   edi,eax
  407775:	cdq    
  407776:	xor    DWORD PTR [ecx],eax
  407778:	pop    ebp
  407779:	cmp    ecx,esp
  40777b:	xor    eax,0x61d6441
  407780:	aam    0xab
  407782:	mov    DWORD PTR ds:[esi-0x30],ebx
  407786:	adc    cl,BYTE PTR [edx-0x75]
  407789:	xchg   edi,eax
  40778a:	add    bh,al
  40778c:	pop    edi
  40778d:	enter  0xbefb,0x70
  407791:	in     al,dx
  407792:	out    0xb4,eax
  407794:	sbb    ch,dh
  407796:	outs   dx,BYTE PTR ds:[esi]
  407797:	repnz bound eax,QWORD PTR [esi+ebp*1+0x396e5abc]
  40779f:	aad    0xf3
  4077a1:	fisubr WORD PTR [edi+0x38]
  4077a4:	xchg   ebx,eax
  4077a5:	into   
  4077a6:	in     al,dx
  4077a7:	mov    DWORD PTR [ecx+eiz*8-0x3a5746de],edx
  4077ae:	shr    edx,cl
  4077b0:	mov    edi,DWORD PTR [esi+ebx*8+0x5954b79c]
  4077b7:	inc    ebx
  4077b8:	xorps  xmm1,xmm7
  4077bb:	popa   
  4077bc:	xchg   edi,eax
  4077bd:	les    eax,FWORD PTR [esp+edi*8+0x46985f81]
  4077c4:	cmp    al,cl
  4077c6:	xchg   edx,eax
  4077c7:	mov    al,0xf1
  4077c9:	jp     0x40782a
  4077cb:	retf   
  4077cc:	push   ss
  4077cd:	mov    edi,0x7d20567c
  4077d2:	add    ch,dl
  4077d4:	scas   al,BYTE PTR es:[edi]
  4077d5:	push   eax
  4077d6:	test   DWORD PTR [edi],ebp
  4077d8:	adc    bl,BYTE PTR [eax-0xd]
  4077db:	outs   dx,BYTE PTR ds:[esi]
  4077dc:	std    
  4077dd:	jo     0x407786
  4077df:	mov    ecx,0x8ad5285c
  4077e4:	or     al,0x2b
  4077e6:	adc    eax,0xb4ab04b
  4077eb:	sti    
  4077ec:	aaa    
  4077ed:	pop    esi
  4077ee:	dec    ebx
  4077ef:	pop    ebp
  4077f0:	ret    0x957
  4077f3:	cmp    eax,0xbc743316
  4077f8:	mov    bh,0xa6
  4077fa:	push   0xffffffbb
  4077fc:	xor    eax,0x783ed837
  407801:	sti    
  407802:	xlat   BYTE PTR ds:[ebx]
  407803:	mov    ch,0xe7
  407805:	jmp    DWORD PTR [eax]
  407807:	pusha  
  407808:	add    DWORD PTR [eax],edx
  40780a:	fild   QWORD PTR [ecx-0x103b6e7c]
  407810:	jbe    0x407867
  407812:	adc    eax,0xa74abba9
  407817:	push   0xffffffea
  407819:	(bad)  
  40781a:	imul   ecx,DWORD PTR [esi],0x4c
  40781d:	fsubrp st(0),st
  40781f:	xchg   esp,eax
  407820:	sub    eax,0x984628bd
  407825:	aam    0x9b
  407827:	mov    WORD PTR [eax],ss
  407829:	push   ebp
  40782a:	std    
  40782b:	and    eax,edx
  40782d:	sbb    eax,0xcba1f25e
  407832:	das    
  407833:	test   eax,0x5ce9e580
  407838:	inc    edx
  407839:	pop    es
  40783a:	sahf   
  40783b:	cli    
  40783c:	cdq    
  40783d:	call   0xd65d5cbb
  407842:	dec    edi
  407843:	into   
  407844:	add    ah,bl
  407846:	mov    cl,0x4e
  407848:	dec    ebx
  407849:	mov    dl,0x34
  40784b:	(bad)  
  40784c:	ja     0x40785c
  40784e:	adc    ch,BYTE PTR [eax+ecx*1-0x58]
  407852:	sbb    al,0xab
  407854:	int    0xa3
  407856:	aas    
  407857:	mov    bl,0x2b
  407859:	mov    cl,0xa3
  40785b:	jmp    0x6f9b264b
  407860:	dec    edi
  407861:	test   al,0xaa
  407863:	aas    
  407864:	ds jmp 0xbd962390
  40786a:	loop   0x40788e
  40786c:	ret    
  40786d:	out    0x50,al
  40786f:	lahf   
  407870:	fild   WORD PTR [ebp-0x7d]
  407873:	add    ch,BYTE PTR [edi-0x15db6367]
  407879:	cld    
  40787a:	mov    eax,0x34383b7
  40787f:	int    0x7f
  407881:	pop    esi
  407882:	es cwde 
  407884:	push   ecx
  407885:	jl     0x4078fd
  407887:	push   ss
  407888:	push   esp
  407889:	inc    eax
  40788a:	sbb    eax,0x546fd5b5
  40788f:	adc    edi,edx
  407891:	cmp    DWORD PTR [esi],eax
  407893:	sbb    DWORD PTR [edi+0x7f],ecx
  407896:	inc    ebp
  407897:	jge    0x4078c7
  407899:	(bad)  
  40789a:	enter  0x6757,0x0
  40789e:	(bad)  
  40789f:	(bad)  
  4078a0:	mov    ebp,0xebf8841
  4078a5:	inc    ebx
  4078a6:	cmp    al,0x58
  4078a8:	in     eax,0x8c
  4078aa:	push   ebx
  4078ab:	adc    DWORD PTR [esi-0x70],0xffffffd0
  4078af:	dec    esp
  4078b0:	sub    BYTE PTR [esi+0x31],al
  4078b3:	cwde   
  4078b4:	jmp    0x3bda:0xaa7e7fe
  4078bb:	ss imul esi,ecx,0x816a8ae2
  4078c2:	lock inc edx
  4078c4:	sbb    BYTE PTR [edx-0x71],dl
  4078c7:	fcomp  QWORD PTR [esp+edi*4-0x5d]
  4078cb:	add    eax,DWORD PTR [ebp-0x2e537903]
  4078d1:	(bad)  
  4078d2:	xchg   ebx,eax
  4078d3:	mov    bh,bh
  4078d5:	daa    
  4078d6:	mov    dl,BYTE PTR [edx-0x4a]
  4078d9:	ja     0x4078a2
  4078db:	dec    esp
  4078dc:	fninit 
  4078de:	jmp    0x2c6d058b
  4078e3:	sar    DWORD PTR [eax],0x22
  4078e6:	dec    ebx
  4078e7:	js     0x4078dd
  4078e9:	dec    esp
  4078ea:	jmp    0xcb87:0x8339b01
  4078f1:	or     al,0xe0
  4078f3:	mov    esi,0xda75d93e
  4078f8:	loop   0x4078a3
  4078fa:	test   al,0x23
  4078fc:	push   ss
  4078fd:	add    eax,0xfb04793d
  407902:	add    cl,BYTE PTR [ebx+0x7e]
  407905:	dec    eax
  407906:	mov    eax,ds:0x86905e39
  40790b:	push   ebp
  40790c:	pop    DWORD PTR [edx]
  40790e:	or     bl,al
  407910:	fiadd  WORD PTR [ebx]
  407912:	sbb    cl,al
  407914:	loop   0x40789b
  407916:	aas    
  407917:	inc    ebp
  407918:	aad    0x45
  40791a:	add    al,al
  40791c:	mov    dl,0xc7
  40791e:	(bad)
  407921:	hlt    
  407922:	and    DWORD PTR [ebp+0x74bab53f],esi
  407928:	loopne 0x4078e5
  40792a:	xchg   BYTE PTR gs:0xbb84ed28,ch
  407931:	into   
  407932:	mov    edx,0x2a6b9436
  407937:	fadd   st(1),st
  407939:	inc    edi
  40793a:	inc    edx
  40793b:	cmp    eax,eax
  40793d:	vpshuflw ymm1,YMMWORD PTR [edx+0x6e],0xeb
  407943:	inc    eax
  407944:	mov    esp,0x4896fa11
  407949:	or     al,0xb4
  40794b:	enter  0x28d7,0xbd
  40794f:	loope  0x4079ac
  407951:	jnp    0x4079a1
  407953:	stos   BYTE PTR es:[edi],al
  407954:	addr16 jno 0x40794c
  407957:	mov    dh,0x23
  407959:	push   0x4c
  40795b:	push   edx
  40795c:	push   esi
  40795d:	or     esp,DWORD PTR [esi+0x491758dc]
  407963:	xor    BYTE PTR [edi-0x64],ah
  407966:	adc    al,0x4
  407968:	xor    cl,BYTE PTR [ebp+0x8962912]
  40796e:	inc    esp
  40796f:	sub    ebp,edi
  407971:	add    ebx,ebp
  407973:	add    al,0x15
  407975:	in     eax,dx
  407976:	repz mov esp,0x12733fe3
  40797c:	sbb    eax,0x6a0b2170
  407981:	mov    ds:0x4a6bf0a5,al
  407986:	or     BYTE PTR [ebx-0x3],ch
  407989:	push   edx
  40798a:	pop    ds
  40798b:	in     eax,0xff
  40798d:	popa   
  40798e:	rcl    BYTE PTR [edi],0x8d
  407991:	adc    cl,BYTE PTR [edi]
  407993:	mov    edi,0xba5b47bf
  407998:	fimul  DWORD PTR [edi-0x60787f0a]
  40799f:	fsubr  DWORD PTR [edi+0x5d]
  4079a2:	sbb    cl,BYTE PTR [ecx+0x38]
  4079a5:	lods   al,BYTE PTR ds:[esi]
  4079a6:	add    cl,bh
  4079a8:	fsub   st,st(3)
  4079aa:	jecxz  0x40795f
  4079ac:	ins    DWORD PTR es:[edi],dx
  4079ad:	push   ebx
  4079ae:	clc    
  4079af:	or     esp,edi
  4079b1:	mov    esi,0x74b9a406
  4079b6:	rcr    BYTE PTR [ebp-0x1f],cl
  4079b9:	fs and al,0xfa
  4079bc:	ror    ch,0xdc
  4079bf:	cmp    al,0xa3
  4079c1:	add    eax,0xe50629fd
  4079c6:	neg    DWORD PTR [edx+0x1b12d8e8]
  4079cc:	push   ss
  4079cd:	nop
  4079ce:	inc    ebx
  4079cf:	fsub   DWORD PTR [edx+0x5d]
  4079d2:	retf   0x1ede
  4079d5:	fstp   TBYTE PTR [eax]
  4079d7:	pop    esp
  4079d8:	xor    bl,BYTE PTR [ebp-0x66ea0767]
  4079de:	loop   0x407986
  4079e0:	pop    ss
  4079e1:	push   esi
  4079e2:	sbb    esi,DWORD PTR [ebx+0x4ae372b]
  4079e8:	mov    eax,ds:0xb3ec4502
  4079ed:	xor    BYTE PTR [esi-0x76],ah
  4079f0:	pop    esp
  4079f1:	sbb    al,0x21
  4079f3:	sbb    bl,bh
  4079f5:	test   BYTE PTR [edi],0xca
  4079f8:	pop    ss
  4079f9:	jle    0x4079cf
  4079fb:	arpl   WORD PTR [edi-0x744f884b],ax
  407a01:	stc    
  407a02:	(bad)  
  407a03:	mov    edi,0x59f86a32
  407a08:	jns    0x407a80
  407a0a:	sahf   
  407a0b:	gs int3 
  407a0d:	addr16 pop ecx
  407a0f:	jmp    0xd06b3997
  407a14:	and    eax,0xf00b9b20
  407a19:	in     al,0x4
  407a1b:	lock push es
  407a1d:	inc    BYTE PTR [edx+0x14]
  407a20:	or     al,0xfb
  407a22:	pushf  
  407a23:	dec    ecx
  407a24:	bound  ecx,QWORD PTR [ebp-0x4e21e5ef]
  407a2a:	xchg   esp,eax
  407a2b:	scas   al,BYTE PTR es:[edi]
  407a2c:	ins    DWORD PTR es:[edi],dx
  407a2d:	jp     0x407a95
  407a2f:	not    edi
  407a31:	ins    BYTE PTR es:[edi],dx
  407a32:	aas    
  407a33:	xchg   edi,eax
  407a34:	push   0x7b
  407a36:	daa    
  407a37:	inc    ebp
  407a38:	or     BYTE PTR [edx+0x50],ch
  407a3b:	stos   DWORD PTR es:[edi],eax
  407a3c:	and    ah,BYTE PTR [edx+0x6fa0ccc9]
  407a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a43:	loope  0x407aa5
  407a45:	test   DWORD PTR [ebp+0x39],esp
  407a48:	or     esp,0xffffffe5
  407a4b:	push   ss
  407a4c:	xlat   BYTE PTR ds:[ebx]
  407a4d:	cdq    
  407a4e:	(bad)  
  407a4f:	sbb    al,0x61
  407a51:	pop    eax
  407a52:	into   
  407a53:	pop    edx
  407a54:	cmp    ch,BYTE PTR ds:0x39f7979d
  407a5a:	mov    ebp,0x804cd2fe
  407a5f:	inc    esp
  407a60:	inc    DWORD PTR [eax]
  407a62:	xchg   edi,eax
  407a63:	(bad)  
  407a64:	push   esp
  407a65:	and    eax,0xcdd23aca
  407a6a:	mov    ebp,0x20399a00
  407a6f:	sti    
  407a70:	(bad)  
  407a71:	mov    BYTE PTR [esi-0x46f38fe8],ah
  407a77:	lds    edx,FWORD PTR [ebx+0x48]
  407a7a:	push   cs
  407a7b:	mov    ebp,0x548bf987
  407a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a81:	mov    eax,0xf59cb677
  407a86:	inc    edi
  407a87:	or     al,0x11
  407a89:	aam    0x78
  407a8b:	sar    edi,1
  407a8d:	dec    edx
  407a8e:	das    
  407a8f:	test   BYTE PTR [edx-0x445ceebe],bh
  407a95:	imul   edx,DWORD PTR ds:0xdd160999,0xffffffae
  407a9c:	mov    bl,0x5c
  407a9e:	xchg   DWORD PTR [ebx+0xd191e62],ebp
  407aa4:	xchg   edi,eax
  407aa5:	sub    edi,DWORD PTR [edi-0x47]
  407aa8:	add    DWORD PTR [edx],0xffffffed
  407aab:	test   eax,0xd0dc034
  407ab0:	idiv   bl
  407ab2:	sub    ecx,DWORD PTR [ebx-0x46ee39e5]
  407ab8:	jge    0x407b08
  407aba:	retf   
  407abb:	jg     0x407a4e
  407abd:	test   al,0x65
  407abf:	jnp    0x407ae2
  407ac1:	jmp    0x407ac5
  407ac3:	adc    al,0x40
  407ac5:	mov    cl,0xd6
  407ac7:	or     ch,al
  407ac9:	mov    esi,0x36c4120
  407ace:	sti    
  407acf:	les    esi,FWORD PTR [ebp-0x20]
  407ad2:	mov    bh,0x6c
  407ad4:	mov    ebx,0x69e6ac92
  407ad9:	repnz adc DWORD PTR [edi-0xc23e55a],edx
  407ae0:	fld    st(5)
  407ae2:	jb     0x407b0b
  407ae4:	mov    dl,0x61
  407ae6:	jo     0x407b3a
  407ae8:	sub    al,ah
  407aea:	or     BYTE PTR [edx],al
  407aec:	dec    ebp
  407aed:	sub    DWORD PTR [edx],edx
  407aef:	fidiv  DWORD PTR [ebp-0x30cbacc1]
  407af5:	jmp    0xbb16fb6c
  407afa:	xchg   esp,eax
  407afb:	pushf  
  407afc:	or     eax,0x46807b9b
  407b01:	aaa    
  407b02:	jle    0x407b07
  407b04:	mov    ah,0x77
  407b06:	mov    ebp,0xa7fe18d2
  407b0b:	xor    ebx,DWORD PTR [edx+0x45]
  407b0e:	std    
  407b0f:	xor    cl,bl
  407b11:	pop    edi
  407b12:	pushf  
  407b13:	in     al,0x9a
  407b15:	cmp    edi,DWORD PTR [eax+0x51472ad0]
  407b1b:	dec    edi
  407b1c:	leave  
  407b1d:	sbb    cl,cl
  407b1f:	mov    dl,0x9e
  407b21:	js     0x407ab4
  407b23:	xchg   edi,eax
  407b24:	test   DWORD PTR [eax+0x7b172478],ecx
  407b2a:	repnz xchg eax,edi
  407b2d:	dec    sp
  407b2f:	std    
  407b30:	jmp    0x407ae1
  407b32:	sbb    al,0xdc
  407b34:	push   cs
  407b35:	xor    eax,0xaaab998c
  407b3a:	sahf   
  407b3b:	call   0x7edb511
  407b40:	clc    
  407b41:	out    0x85,al
  407b43:	mov    al,0x56
  407b45:	mov    dl,0xba
  407b47:	ins    BYTE PTR es:[edi],dx
  407b48:	imul   ebx,esp,0x1c
  407b4b:	ja     0x407af5
  407b4d:	ret    0xd86b
  407b50:	mov    ah,0xde
  407b52:	push   esi
  407b53:	ror    DWORD PTR [edi+0x68340fd],0x6d
  407b5a:	test   al,0x37
  407b5c:	jmp    DWORD PTR [esi-0xf]
  407b5f:	bound  esi,QWORD PTR [ebp-0x50]
  407b62:	sub    BYTE PTR [ebx-0x24],al
  407b65:	mov    ecx,0xc682d99e
  407b6a:	pop    ecx
  407b6b:	(bad)  
  407b6c:	sub    al,BYTE PTR [ecx+0x59fad45e]
  407b72:	mov    cl,0x7b
  407b74:	imul   eax,ecx,0xcd1e8e8d
  407b7a:	adc    BYTE PTR [ebp-0x78],ah
  407b7d:	mov    dl,0x7d
  407b7f:	xor    esi,ecx
  407b81:	pop    edx
  407b82:	cmc    
  407b83:	pop    esi
  407b84:	leave  
  407b85:	rcl    BYTE PTR [ebx-0x23075905],1
  407b8b:	fisttp WORD PTR [eax+edi*4-0x8]
  407b8f:	or     ebx,ecx
  407b91:	dec    ebp
  407b92:	mov    edx,0x59372669
  407b97:	add    eax,0x7fa398e4
  407b9c:	es out dx,al
  407b9e:	mov    WORD PTR [eax-0x6bb14b93],ss
  407ba4:	fisttp QWORD PTR [eax+0x69]
  407ba7:	int    0x61
  407ba9:	mov    ss,esp
  407bab:	or     al,BYTE PTR [eax-0x440c8665]
  407bb1:	inc    eax
  407bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb3:	pop    ebx
  407bb4:	or     DWORD PTR [esi+ecx*2-0x69e769a2],ebp
  407bbb:	xchg   BYTE PTR [esi+0x7d],dl
  407bbe:	mov    dh,ch
  407bc0:	lds    esi,FWORD PTR [edi+0x3d35ffa1]
  407bc6:	pop    edi
  407bc7:	loopne 0x407bf1
  407bc9:	mov    bl,0xf
  407bcb:	mov    bh,0xed
  407bcd:	mov    al,0x11
  407bcf:	js     0x407c35
  407bd1:	mov    edx,0x46f76476
  407bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd7:	stos   DWORD PTR es:[edi],eax
  407bd8:	jne    0x407bcc
  407bda:	inc    eax
  407bdb:	inc    edx
  407bdc:	bound  esp,QWORD PTR [edx]
  407bde:	mov    DWORD PTR [ebx+eiz*8+0x4a],ebx
  407be2:	mov    ebx,0x5767874e
  407be7:	aaa    
  407be8:	outs   dx,DWORD PTR ds:[esi]
  407be9:	mov    al,0x3f
  407beb:	mov    edx,0xa3b008f1
  407bf0:	push   0x6733a887
  407bf5:	mov    edx,DWORD PTR [eax-0x1]
  407bf8:	cld    
  407bf9:	inc    ebp
  407bfa:	popf   
  407bfb:	aam    0xa3
  407bfd:	js     0x407c63
  407bff:	pop    edx
  407c00:	xchg   esp,eax
  407c01:	pushf  
  407c02:	mov    BYTE PTR [edi+0x32],dl
  407c05:	fdiv   QWORD PTR [edx+0x2d0e3866]
  407c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0c:	or     esp,edi
  407c0e:	div    ecx
  407c10:	jl     0x407bb8
  407c12:	out    0xc7,al
  407c14:	in     al,dx
  407c15:	jmp    0xcc98:0xa95d6e73
  407c1c:	push   ecx
  407c1d:	mov    al,ds:0x2b89742a
  407c22:	lahf   
  407c23:	sbb    BYTE PTR [ebp-0x2e],bh
  407c26:	inc    ebp
  407c27:	das    
  407c28:	stos   BYTE PTR es:[edi],al
  407c29:	jge    0x407bb3
  407c2b:	jno    0x407bb2
  407c2d:	shr    ah,1
  407c2f:	je     0x407c2a
  407c31:	stos   BYTE PTR es:[edi],al
  407c32:	add    al,0xcc
  407c34:	lahf   
  407c35:	loopne 0x407bef
  407c37:	fidivr WORD PTR [esi+0x33d4b332]
  407c3d:	inc    ebx
  407c3e:	push   ds
  407c3f:	in     eax,0xd8
  407c41:	fs iret 
  407c43:	lock out dx,eax
  407c45:	sub    al,0x63
  407c47:	ss cmp al,0x93
  407c4a:	gs cld 
  407c4c:	mov    eax,0x71aa90a9
  407c51:	sbb    ah,dh
  407c53:	cmp    DWORD PTR [ecx+0x5ec41cad],ebx
  407c59:	stc    
  407c5a:	aaa    
  407c5b:	stc    
  407c5c:	out    dx,eax
  407c5d:	int3   
  407c5e:	mov    bl,0xd5
  407c60:	cs fs cmp esi,ebp
  407c64:	jp     0x407c48
  407c66:	sar    BYTE PTR [edx+0x2bbe0d07],cl
  407c6c:	out    dx,al
  407c6d:	fld    QWORD PTR [si+0x2b3f]
  407c72:	xchg   ecx,eax
  407c73:	ret    
  407c74:	sbb    DWORD PTR [esi-0x28a90ca],eax
  407c7a:	xchg   ebp,eax
  407c7b:	pushf  
  407c7c:	shl    DWORD PTR [ebx],0x74
  407c7f:	adc    DWORD PTR [edi+0x3133ee8a],edx
  407c85:	or     edx,ebp
  407c87:	and    al,ch
  407c89:	xor    BYTE PTR ds:0xcb93f9ad,al
  407c8f:	hlt    
  407c90:	jp     0x407cb9
  407c92:	dec    edi
  407c93:	inc    eax
  407c94:	mov    ds:0xdc6f1bfa,eax
  407c99:	add    ecx,DWORD PTR [esi+0x2052bef7]
  407c9f:	xchg   ebx,eax
  407ca0:	mov    ebx,0xd8c5ae2b
  407ca5:	fisttp DWORD PTR [edi+0x3a542a52]
  407cab:	cmp    ah,BYTE PTR [esi+0x20]
  407cae:	rcl    BYTE PTR [ebx-0x3a],0xd5
  407cb2:	fdivrp st(0),st
  407cb4:	dec    esp
  407cb5:	sub    al,BYTE PTR [eax]
  407cb7:	xor    esp,ebx
  407cb9:	fisub  WORD PTR [edi]
  407cbb:	add    DWORD PTR [esp+edi*4+0x2],ebx
  407cbf:	add    BYTE PTR [edx-0x13],0x62
  407cc3:	arpl   WORD PTR [edx+0x7b],bx
  407cc6:	aas    
  407cc7:	xlat   BYTE PTR ds:[ebx]
  407cc8:	daa    
  407cc9:	es aam 0xfb
  407ccc:	and    al,BYTE PTR [edx+0x5f54a02e]
  407cd2:	cmp    BYTE PTR [ecx+0x44],0xbd
  407cd6:	fist   WORD PTR [edi]
  407cd8:	and    dh,BYTE PTR [bx+0x4a81]
  407cdd:	mov    bh,0xaf
  407cdf:	inc    esp
  407ce0:	adc    DWORD PTR [edx],edi
  407ce2:	dec    esi
  407ce3:	(bad)  
  407ce4:	out    dx,al
  407ce5:	test   eax,0x1fb33a7b
  407cea:	mov    ebx,0xb391cde2
  407cef:	sbb    ah,BYTE PTR [ecx+0x78]
  407cf2:	dec    ebx
  407cf3:	leave  
  407cf4:	cli    
  407cf5:	push   0x17
  407cf7:	ss clc 
  407cf9:	xchg   edx,eax
  407cfa:	mov    dh,0xba
  407cfc:	ins    DWORD PTR es:[edi],dx
  407cfd:	xor    eax,0x39489942
  407d02:	push   es
  407d03:	je     0x407d82
  407d05:	scas   al,BYTE PTR es:[edi]
  407d06:	jp     0x407d7e
  407d08:	mov    esp,0x736f9d7
  407d0d:	jge    0x407cf1
  407d0f:	jle    0x407cf9
  407d11:	jnp    0x407cda
  407d13:	xor    BYTE PTR [eax+0x14],al
  407d16:	cmp    al,0x83
  407d18:	out    0xed,al
  407d1a:	dec    edx
  407d1b:	pop    ebx
  407d1c:	ins    DWORD PTR es:[edi],dx
  407d1d:	jne    0x407d60
  407d1f:	stos   BYTE PTR es:[edi],al
  407d20:	xor    DWORD PTR [ecx+esi*1+0x49],esp
  407d24:	add    BYTE PTR [ebx-0x31f850f],bl
  407d2a:	mov    DWORD PTR es:[eax+0xb12d8cf],edx
  407d31:	pop    es
  407d32:	dec    edx
  407d33:	adc    bh,cl
  407d35:	fs push ecx
  407d37:	data16 (bad) 
  407d39:	adc    al,0x48
  407d3b:	add    bh,bl
  407d3d:	inc    ebx
  407d3e:	(bad)  
  407d3f:	sbb    ch,dh
  407d41:	aaa    
  407d42:	push   0xffffffca
  407d44:	lods   eax,DWORD PTR ds:[esi]
  407d45:	fnstenv [ebx-0x29]
  407d48:	dec    ebx
  407d49:	push   0x5b
  407d4b:	rcr    DWORD PTR [ebp-0x23d5b7a4],1
  407d51:	in     al,0xac
  407d53:	push   cs
  407d54:	push   esi
  407d55:	in     eax,dx
  407d56:	jno    0x407d02
  407d58:	sub    DWORD PTR [edx+0x4b],eax
  407d5b:	add    ch,BYTE PTR [edi+0x6cab4649]
  407d61:	jle    0x407dcc
  407d63:	sar    BYTE PTR [ecx],0x40
  407d66:	sbb    ebx,esp
  407d68:	ret    0x123
  407d6b:	add    BYTE PTR [ebx],dl
  407d6d:	and    BYTE PTR ds:[esi+esi*2-0x77],ch
  407d72:	into   
  407d73:	neg    BYTE PTR ds:0x9335cc26
  407d79:	ja     0x407d78
  407d7b:	inc    ebx
  407d7c:	aaa    
  407d7d:	stc    
  407d7e:	repz dec ecx
  407d80:	iret   
  407d81:	test   BYTE PTR [ecx],cl
  407d83:	dec    esp
  407d84:	(bad)  
  407d86:	jnp    0x407d74
  407d88:	push   edi
  407d89:	test   cl,0xe1
  407d8c:	leave  
  407d8d:	test   al,0x21
  407d8f:	xchg   ebx,eax
  407d90:	and    al,0x8b
  407d92:	xchg   DWORD PTR [ebp+0x90b59e0],ebx
  407d98:	imul   esi,DWORD PTR [eax-0x65f0f5be],0x36
  407d9f:	popa   
  407da0:	dec    ebx
  407da1:	pop    ecx
  407da2:	out    0xa2,al
  407da4:	inc    esp
  407da5:	add    ebp,edi
  407da7:	ficom  WORD PTR [eiz*1+0x33ceface]
  407dae:	imul   ebp,DWORD PTR [eax],0x4ca3a765
  407db4:	dec    esp
  407db5:	std    
  407db6:	jns    0x407d7c
  407db8:	daa    
  407db9:	test   al,0xcf
  407dbb:	aam    0xa0
  407dbd:	dec    edx
  407dbe:	das    
  407dbf:	or     al,0x56
  407dc1:	mov    esi,0xa0188c18
  407dc6:	mov    DWORD PTR [edx+0x4af4b937],eax
  407dcc:	in     al,0x1d
  407dce:	shl    DWORD PTR [ebx-0x774ee2bc],cl
  407dd4:	adc    eax,0xd54674d9
  407dd9:	loopne 0x407db5
  407ddb:	adc    al,0x1a
  407ddd:	xchg   esi,eax
  407dde:	mov    al,0x26
  407de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de1:	dec    eax
  407de3:	iret   
  407de4:	jecxz  0x407e1f
  407de6:	inc    edx
  407de7:	jbe    0x407e57
  407de9:	push   0x572bb1b7
  407dee:	int3   
  407def:	pusha  
  407df0:	out    0xac,eax
  407df2:	inc    esp
  407df3:	mov    bh,0xbb
  407df5:	out    0xd,al
  407df7:	jbe    0x407e09
  407df9:	fmul   st(3),st
  407dfb:	cdq    
  407dfc:	push   eax
  407dfd:	xlat   BYTE PTR ds:[ebx]
  407dfe:	jle    0x407df0
  407e00:	loop   0x407db8
  407e02:	inc    esp
  407e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e04:	push   ss
  407e05:	mov    ds,WORD PTR [edx+0x5b]
  407e08:	jge    0x407d8d
  407e0a:	ins    BYTE PTR es:[edi],dx
  407e0b:	xor    eax,0x241e0c15
  407e10:	or     DWORD PTR [ebx],ecx
  407e12:	lds    edx,FWORD PTR ds:0x16d3c5f7
  407e18:	sbb    al,0x9f
  407e1a:	stc    
  407e1b:	imul   edx,DWORD PTR ds:0x4866b530,0xffffff81
  407e22:	dec    eax
  407e23:	daa    
  407e24:	pop    esi
  407e25:	adc    eax,0x6a9f1dc9
  407e2a:	inc    ebx
  407e2b:	pop    ebp
  407e2c:	jne    0x407e2b
  407e2e:	mov    esi,0x8136d5bb
  407e33:	test   BYTE PTR [esi+0x14],al
  407e36:	add    eax,0xd4f2455e
  407e3b:	sub    BYTE PTR [edi+0x41],0x30
  407e3f:	add    ecx,ebp
  407e41:	out    0x41,al
  407e43:	(bad)  
  407e44:	div    DWORD PTR [eax]
  407e46:	outs   dx,BYTE PTR ds:[esi]
  407e47:	mov    al,ds:0x13c6f9ad
  407e4c:	test   eax,0x53200332
  407e51:	rcr    DWORD PTR [ecx-0x17],0x6e
  407e55:	jo     0x407eb2
  407e57:	in     eax,0x62
  407e59:	mov    DWORD PTR [esi-0x12d1cee2],edi
  407e5f:	out    dx,al
  407e60:	daa    
  407e61:	add    BYTE PTR [edi-0x39],al
  407e64:	jmp    0xbf4a:0xa1de0fae
  407e6b:	daa    
  407e6c:	in     al,0x73
  407e6e:	jle    0x407e77
  407e70:	pmulhw mm6,QWORD PTR [ebx+0x1a25d223]
  407e77:	xchg   ebx,eax
  407e78:	je     0x407ee8
  407e7a:	or     eax,0xe50d707
  407e7f:	addr16 pop ebx
  407e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e82:	xchg   ecx,eax
  407e83:	icebp  
  407e84:	push   cs
  407e85:	ror    DWORD PTR [ecx*1-0x74e5cec1],1
  407e8c:	push   cs
  407e8d:	test   al,0x9e
  407e8f:	xchg   ebx,eax
  407e90:	cmp    eax,0x249bc774
  407e95:	in     al,dx
  407e96:	dec    esp
  407e97:	pop    edi
  407e98:	imul   BYTE PTR [ebx-0x72b13ab8]
  407e9e:	pop    esi
  407e9f:	jne    0x407e4e
  407ea1:	jnp    0x407e62
  407ea3:	push   es
  407ea4:	fsubr  DWORD PTR [esp+edx*4]
  407ea7:	dec    edx
  407ea8:	push   ss
  407ea9:	push   ebp
  407eaa:	fcmove st,st(4)
  407eac:	mov    esp,0x8a524a0b
  407eb1:	retf   0xd67c
  407eb4:	jle    0x407eb4
  407eb6:	inc    edi
  407eb7:	fisttp QWORD PTR [ebx+0x7]
  407eba:	push   ecx
  407ebb:	mov    esi,0x5c245efa
  407ec0:	push   edi
  407ec1:	xor    DWORD PTR [ebp-0x40],0xbe06497
  407ec8:	cmp    al,0xf3
  407eca:	popf   
  407ecb:	cdq    
  407ecc:	std    
  407ecd:	inc    edx
  407ece:	mov    eax,ds:0x51a1a06f
  407ed3:	dec    ebp
  407ed4:	in     al,0xc2
  407ed6:	dec    eax
  407ed7:	imul   esi,DWORD PTR [esi+0x64],0x3f95b18e
  407ede:	and    eax,ebx
  407ee0:	call   0x83581296
  407ee5:	mov    es,esp
  407ee7:	sbb    eax,0xd674ea74
  407eec:	daa    
  407eed:	sub    al,0xdb
  407eef:	pop    ebx
  407ef0:	cmp    BYTE PTR [edx-0x5c],ah
  407ef3:	in     eax,dx
  407ef4:	push   eax
  407ef5:	mov    edi,0x79f4fe79
  407efa:	jo     0x407e91
  407efc:	call   0xa1af1e61
  407f01:	fcom   DWORD PTR [ebp+eax*1+0x5706b8dc]
  407f08:	cli    
  407f09:	fisub  WORD PTR [ebp+edi*8+0x7ef548ef]
  407f10:	lahf   
  407f11:	shr    dl,1
  407f13:	sbb    BYTE PTR [edi+0x21],ch
  407f16:	clc    
  407f17:	mov    eax,DWORD PTR [ecx+0x6f]
  407f1a:	clc    
  407f1b:	call   edi
  407f1d:	bound  edx,QWORD PTR [eax+0x38]
  407f20:	mov    bl,0x1a
  407f22:	pop    ss
  407f23:	fs jnp 0x407ed7
  407f26:	mov    ebp,0xa0d07b35
  407f2b:	cmp    al,0xd5
  407f2d:	lds    ecx,FWORD PTR [edx+eax*4+0x2a]
  407f31:	stc    
  407f32:	ins    BYTE PTR es:[edi],dx
  407f33:	sub    eax,0x72a94572
  407f38:	jbe    0x407fad
  407f3a:	lds    esi,FWORD PTR ds:0x422d6bd9
  407f41:	es xchg esp,eax
  407f43:	test   al,0xc1
  407f45:	stc    
  407f46:	int3   
  407f47:	mov    edx,0xcef2e061
  407f4c:	lahf   
  407f4d:	or     dl,dl
  407f4f:	add    al,0x40
  407f51:	repnz and BYTE PTR [edi],bl
  407f54:	leave  
  407f55:	test   DWORD PTR [edx+0x5337093c],edx
  407f5b:	shl    BYTE PTR [eax+0xd6b27e4],1
  407f61:	ret    0x7ebb
  407f64:	test   DWORD PTR [edi+0x645bd180],0x9c94a30c
  407f6e:	ja     0x407fac
  407f70:	cmp    esp,DWORD PTR [ecx-0x20b77f1c]
  407f76:	out    0xab,eax
  407f78:	push   ecx
  407f79:	outs   dx,BYTE PTR ds:[esi]
  407f7a:	out    dx,eax
  407f7b:	std    
  407f7c:	out    0xa7,ax
  407f7f:	lds    eax,FWORD PTR [edi-0x39]
  407f82:	push   ss
  407f83:	or     bh,bl
  407f85:	inc    ebp
  407f86:	aam    0x4d
  407f88:	clc    
  407f89:	inc    esi
  407f8a:	pop    es
  407f8b:	sub    esp,DWORD PTR [esi]
  407f8d:	lahf   
  407f8e:	mov    ch,ah
  407f90:	dec    eax
  407f91:	ins    BYTE PTR es:[edi],dx
  407f92:	push   ds
  407f93:	mov    ds:0x90ddee3f,eax
  407f98:	push   eax
  407f99:	xor    al,0x97
  407f9b:	ins    DWORD PTR es:[edi],dx
  407f9c:	and    DWORD PTR [ebp+0x3b1d833e],ebx
  407fa2:	aas    
  407fa3:	dec    edx
  407fa4:	push   ss
  407fa5:	retf   0xdde5
  407fa8:	lahf   
  407fa9:	xor    eax,0x6cadeaa7
  407fae:	shl    ecx,cl
  407fb0:	pop    ds
  407fb1:	popf   
  407fb2:	sub    esi,edx
  407fb4:	cld    
  407fb5:	jl     0x407f3a
  407fb7:	out    0xd0,al
  407fb9:	loop   0x408035
  407fbb:	pop    ebp
  407fbc:	or     edx,esi
  407fbe:	mov    ebx,0x71a59a68
  407fc3:	ins    BYTE PTR es:[edi],dx
  407fc4:	ret    
  407fc5:	fisub  WORD PTR [esi+0x249e410b]
  407fcb:	out    dx,al
  407fcc:	sbb    dh,BYTE PTR [edi]
  407fce:	popa   
  407fcf:	aaa    
  407fd0:	aas    
  407fd1:	and    edi,DWORD PTR [edx-0x3c]
  407fd4:	xchg   esi,eax
  407fd5:	lods   eax,DWORD PTR cs:[esi]
  407fd7:	inc    ecx
  407fd8:	call   0x669a:0x19c95b78
  407fdf:	loop   0x40805e
  407fe1:	pusha  
  407fe2:	xor    al,0x77
  407fe4:	xor    eax,0x5b4865b9
  407fe9:	stos   DWORD PTR es:[edi],eax
  407fea:	in     al,dx
  407feb:	(bad)  
  407fec:	pop    esp
  407fed:	or     ebp,DWORD PTR [edx]
  407fef:	add    dh,cl
  407ff1:	fldenv [edi-0x4b]
  407ff4:	pushf  
  407ff5:	mov    esp,0x6395a4c8
  407ffa:	ret    0x7cd2
  407ffd:	test   al,0x88
  407fff:	aas    
  408000:	imul   esi,DWORD PTR [edx-0x38],0x44e68aa4
  408007:	sub    eax,0x74f07914
  40800c:	dec    esp
  40800d:	inc    ecx
  40800e:	or     eax,0xeb79ae1c
  408013:	es pop edi
  408015:	fucomip st,st(3)
  408017:	adc    BYTE PTR [ecx+0x2842ea58],al
  40801d:	pop    ecx
  40801e:	mov    al,ds:0x6c6c4c32
  408023:	mov    al,ds:0x1de88185
  408028:	test   al,0x6a
  40802a:	dec    edx
  40802b:	sub    DWORD PTR [ebx],ecx
  40802d:	push   ds
  40802e:	call   0x703470bf
  408033:	add    edx,DWORD PTR [esi-0x45]
  408036:	add    eax,0xc344f55b
  40803b:	xor    BYTE PTR [esi],bl
  40803d:	adc    BYTE PTR [eax],0xba
  408040:	call   0xa9bc8ca5
  408045:	rcr    BYTE PTR [ebx-0x45],1
  408048:	sbb    ah,BYTE PTR [ecx-0x68c25033]
  40804e:	mov    ch,BYTE PTR [eax+0x70]
  408051:	ror    DWORD PTR [ebx+0x32],cl
  408054:	jno    0x408092
  408056:	inc    ecx
  408057:	ja     0x408070
  408059:	push   cs
  40805a:	add    bl,BYTE PTR [ebp-0x74]
  40805d:	(bad)
  408061:	mov    dl,0x6a
  408063:	add    ebp,DWORD PTR [eax+esi*1+0x21]
  408067:	add    al,0x4c
  408069:	mov    esp,cs
  40806b:	jae    0x40808c
  40806d:	xor    DWORD PTR [esi-0x1f73d225],ebx
  408073:	sbb    BYTE PTR [edi-0x11b2d825],dh
  408079:	sub    eax,0x70b62f79
  40807e:	xor    DWORD PTR [ebx-0x27f82d9],esi
  408084:	jecxz  0x408092
  408086:	mov    BYTE PTR [ecx-0x139e676f],ah
  40808c:	dec    ebx
  40808d:	push   ebp
  40808e:	or     BYTE PTR [edi],dl
  408090:	push   ds
  408091:	xchg   esp,eax
  408092:	xchg   esi,eax
  408093:	pop    ecx
  408094:	or     eax,0x89101367
  408099:	das    
  40809a:	push   ebp
  40809b:	rcl    DWORD PTR [ecx+0x59],0x0
  40809f:	addr16 cld 
  4080a1:	push   0xffffffae
  4080a3:	ret    
  4080a4:	jne    0x408029
  4080a6:	fiadd  DWORD PTR [edi+0x2]
  4080a9:	ret    0x23a0
  4080ac:	(bad)  
  4080ad:	pop    esi
  4080ae:	mov    ebx,0x135840ea
  4080b3:	xchg   BYTE PTR [eax],bl
  4080b5:	push   ss
  4080b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b7:	xchg   esi,eax
  4080b8:	cmp    BYTE PTR [eax],ah
  4080ba:	pop    edx
  4080bb:	xor    eax,0x3290c04
  4080c0:	xor    DWORD PTR [edi+0x6b],eax
  4080c3:	mov    edi,0xb1082078
  4080c8:	out    0xbd,eax
  4080ca:	xrelease mov BYTE PTR gs:[ebp+eiz*4+0x6dfaaf79],ch
  4080d3:	jle    0x4080a8
  4080d5:	adc    esp,ebp
  4080d7:	cmp    BYTE PTR [edx+0x5],ah
  4080da:	jmp    0x4080bd
  4080dc:	cli    
  4080dd:	jp     0x4080a4
  4080df:	(bad)  
  4080e0:	pusha  
  4080e1:	ret    0x9951
  4080e4:	or     DWORD PTR [esp+ebx*1],edx
  4080e7:	sub    BYTE PTR [ecx],dh
  4080e9:	stc    
  4080ea:	cmp    ebp,ebx
  4080ec:	push   ebp
  4080ed:	imul   edx,esi,0xffffffb3
  4080f0:	xchg   esi,eax
  4080f1:	xchg   ecx,eax
  4080f2:	iret   
  4080f3:	inc    esi
  4080f4:	mov    ebx,0xd51b5ce8
  4080f9:	aaa    
  4080fa:	mov    esi,0x1fb25ce0
  4080ff:	loope  0x408098
  408101:	push   ebp
  408102:	add    BYTE PTR [ebx],dh
  408104:	(bad)  
  408105:	dec    ebx
  408106:	(bad)  
  408107:	mov    ds:0xccce21be,al
  40810c:	repz mov esp,0x1b053553
  408112:	in     al,dx
  408113:	stos   DWORD PTR es:[edi],eax
  408114:	lods   eax,DWORD PTR ds:[esi]
  408115:	ja     0x4080e8
  408117:	pop    eax
  408118:	sub    al,0xd8
  40811a:	and    esi,ebx
  40811c:	stos   DWORD PTR es:[edi],eax
  40811d:	xor    ecx,ebp
  40811f:	cmpxchg BYTE PTR [eax],bh
  408122:	jmp    0x408126
  408124:	inc    edi
  408125:	cmp    BYTE PTR [edx+0xc],ch
  408128:	int3   
  408129:	push   edi
  40812a:	and    al,0x59
  40812c:	mov    ah,0xfc
  40812e:	pop    eax
  40812f:	push   0xe33bd0d0
  408134:	push   0xffffff93
  408136:	fs ret 0xb8dd
  40813a:	cdq    
  40813b:	fs xchg esi,eax
  40813d:	fcomi  st,st(0)
  40813f:	mov    ch,0xbe
  408141:	retf   0x51e1
  408144:	cmp    al,0x87
  408146:	pop    edi
  408147:	adc    ebp,edx
  408149:	fucomi st,st(3)
  40814b:	les    edx,FWORD PTR [esi-0x6dfb6bcf]
  408151:	mov    edx,ds
  408153:	mov    eax,ecx
  408155:	jge    0x40815b
  408157:	xchg   edx,eax
  408158:	push   esp
  408159:	pop    es
  40815a:	lods   eax,DWORD PTR ds:[esi]
  40815b:	iret   
  40815c:	pushf  
  40815d:	cmc    
  40815e:	pop    edi
  40815f:	test   eax,0x13cd5c7c
  408164:	xchg   esp,eax
  408165:	mov    WORD PTR [ebx],gs
  408167:	inc    eax
  408168:	das    
  408169:	fistp  QWORD PTR [ebx-0x38]
  40816c:	fnstsw WORD PTR ds:0xee292cbd
  408172:	and    BYTE PTR [ebx+0x3e],cl
  408175:	xchg   DWORD PTR [edi],eax
  408177:	into   
  408178:	mov    edi,0x5c5734ad
  40817d:	jmp    0x3c271145
  408182:	mov    bl,0xf3
  408184:	std    
  408185:	sbb    edx,DWORD PTR [edx+0x7b]
  408188:	mov    dl,0xec
  40818a:	xchg   esi,eax
  40818b:	jp     0x408151
  40818d:	mov    bh,0xf0
  40818f:	jbe    0x408120
  408191:	or     bh,cl
  408193:	dec    edi
  408194:	pop    edx
  408195:	push   ebp
  408196:	repz mov esp,0x954dead5
  40819c:	(bad)  
  40819d:	(bad)  
  40819e:	fst    DWORD PTR [edi+0x1a]
  4081a1:	repz je 0x408125
  4081a4:	dec    edx
  4081a5:	jne    0x40819a
  4081a7:	cmp    BYTE PTR [edx+eax*4],ch
  4081aa:	adc    dl,bh
  4081ac:	or     dh,BYTE PTR [esi]
  4081ae:	mov    cl,0x2d
  4081b0:	cli    
  4081b1:	xchg   ebp,eax
  4081b2:	cmp    DWORD PTR [ebp+0x40],eax
  4081b5:	fmul   st,st(0)
  4081b7:	pop    ds
  4081b8:	retf   0x88c7
  4081bb:	cmp    al,0x1a
  4081bd:	call   DWORD PTR [eax-0x48bfd4c6]
  4081c3:	push   ss
  4081c4:	outs   dx,DWORD PTR ds:[esi]
  4081c5:	mov    edx,0xc585ab51
  4081ca:	xchg   BYTE PTR [edi+0x77],dh
  4081cd:	inc    esi
  4081ce:	ror    BYTE PTR [esi+ebx*8],1
  4081d1:	inc    edi
  4081d2:	push   es
  4081d3:	rep outs dx,BYTE PTR ds:[esi]
  4081d5:	jno    0x4081f3
  4081d7:	cmp    dl,0xda
  4081da:	pop    ebx
  4081db:	enter  0xfcc6,0xa5
  4081df:	xor    eax,0xa5469ae
  4081e4:	sti    
  4081e5:	and    al,0xab
  4081e7:	jns    0x4081cb
  4081e9:	mov    ebp,DWORD PTR [esi+eax*4-0x38278ed5]
  4081f0:	jge    0x4081c5
  4081f2:	add    edx,ebx
  4081f4:	sub    edi,DWORD PTR [eax*4+0x4a53ac3a]
  4081fb:	mov    bh,0xe0
  4081fd:	shr    DWORD PTR [ecx],cl
  4081ff:	inc    edx
  408200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408201:	shr    DWORD PTR [esi-0x50],1
  408204:	fwait
  408205:	mov    cl,0x8
  408207:	pop    edi
  408208:	outs   dx,DWORD PTR ds:[esi]
  408209:	out    0xbb,al
  40820b:	adc    edi,DWORD PTR [ebx]
  40820d:	xchg   ebp,eax
  40820e:	not    ebp
  408210:	loop   0x408199
  408212:	mov    dh,0x39
  408214:	or     al,BYTE PTR [edi-0x29]
  408217:	jb     0x408291
  408219:	call   0x422e:0x2269fe91
  408220:	mov    ebx,0x667af14f
  408225:	mov    ds:0x543f6e54,al
  40822a:	mov    edi,0xb481be3d
  40822f:	hlt    
  408230:	rcl    BYTE PTR [ebp+ecx*2+0x413575de],0x15
  408238:	pop    ds
  408239:	ret    
  40823a:	stos   DWORD PTR es:[edi],eax
  40823b:	mov    DWORD PTR [ecx+eax*2+0x54],edi
  40823f:	mov    ah,0xcc
  408241:	stos   BYTE PTR es:[edi],al
  408242:	(bad)  
  408243:	jge    0x408245
  408245:	data16 sbb bl,BYTE PTR [esi]
  408248:	jmp    0x408230
  40824a:	jae    0x40822c
  40824c:	dec    ebp
  40824d:	xchg   BYTE PTR [esi+ecx*1+0xffdea8c],al
  408254:	fisub  WORD PTR [edx-0x25]
  408257:	and    eax,eax
  408259:	xor    al,0xb0
  40825b:	and    DWORD PTR ds:[ecx-0x28],edi
  40825f:	jmp    0x40827d
  408261:	pop    ebx
  408262:	call   0xd2a4:0xfe8db275
  408269:	cld    
  40826a:	push   ecx
  40826b:	adc    BYTE PTR [esi-0x73],0x6
  40826f:	cmp    ch,BYTE PTR [esi-0x40afbfcd]
  408275:	call   0x8fda:0x598d23e3
  40827c:	pop    ecx
  40827d:	mov    bl,0xe7
  40827f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408280:	into   
  408281:	mov    ebx,0xc961d582
  408286:	cdq    
  408287:	addr16 loope 0x408248
  40828a:	sbb    bh,BYTE PTR [ecx]
  40828c:	pop    ss
  40828d:	ror    DWORD PTR ds:0xb7945913,0xf3
  408294:	mov    ebp,0xa80306bd
  408299:	js     0x40829e
  40829b:	out    dx,eax
  40829c:	mov    edi,ss
  40829e:	push   es
  40829f:	hlt    
  4082a0:	lea    ebx,[ebx-0x48e847c4]
  4082a6:	arpl   bx,bx
  4082a8:	ret    0xd563
  4082ab:	int3   
  4082ac:	add    dh,cl
  4082ae:	jbe    0x40824b
  4082b0:	add    cl,0xb6
  4082b3:	push   esp
  4082b4:	inc    ecx
  4082b5:	xchg   esp,eax
  4082b6:	bound  edx,QWORD PTR [edx+0x2b]
  4082b9:	stc    
  4082ba:	arpl   WORD PTR [edx],di
  4082bc:	mov    esp,0x7b9d3d38
  4082c1:	jno    0x4082ee
  4082c3:	dec    esp
  4082c4:	add    eax,0x59c66a9a
  4082c9:	cmp    BYTE PTR [ecx+0x112c8dd2],al
  4082cf:	mov    al,ds:0xab808d2d
  4082d4:	imul   ebp,DWORD PTR [ecx+0x21],0x1dc0c4e5
  4082db:	cmp    eax,0x64fd2929
  4082e0:	inc    eax
  4082e1:	hlt    
  4082e2:	int    0x95
  4082e4:	sti    
  4082e5:	stc    
  4082e6:	or     al,0xfb
  4082e8:	or     al,0xae
  4082ea:	pushf  
  4082eb:	(bad)  
  4082ec:	(bad)  
  4082ed:	call   0xa6993097
  4082f2:	aam    0xbe
  4082f4:	add    esi,DWORD PTR [ecx]
  4082f6:	ds xchg ebx,eax
  4082f8:	jo     0x4082c1
  4082fa:	aam    0xd5
  4082fc:	ds clc 
  4082fe:	cmc    
  4082ff:	dec    esp
  408300:	sbb    DWORD PTR [ebp-0x17],esp
  408303:	arpl   WORD PTR [esi],di
  408305:	iret   
  408306:	iret   
  408307:	pop    edx
  408308:	rol    DWORD PTR [ecx+0x28f92c0f],0xa9
  40830f:	ins    DWORD PTR es:[edi],dx
  408310:	scas   al,BYTE PTR es:[edi]
  408311:	mov    esp,0x648f974c
  408316:	mov    ah,0xa2
  408318:	and    eax,0x3046fef5
  40831d:	cli    
  40831e:	and    DWORD PTR ds:0x6fc9fdc1,ebx
  408324:	push   edx
  408325:	into   
  408326:	lock cmp eax,0x3329cedb
  40832c:	retf   0xe639
  40832f:	pop    ds
  408330:	fimul  DWORD PTR [eax-0x78a78c60]
  408336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408337:	out    dx,al
  408338:	add    esi,esp
  40833a:	jne    0x408357
  40833c:	mov    eax,DWORD PTR [edi-0x1a]
  40833f:	rcr    BYTE PTR [esi],1
  408341:	sbb    eax,0xffbbdc19
  408346:	sub    eax,esp
  408348:	clc    
  408349:	test   BYTE PTR ds:0x9b7a692,0x55
  408350:	shl    ebp,cl
  408352:	cwde   
  408353:	pavgb  mm4,QWORD PTR [edx]
  408356:	and    BYTE PTR ds:[edx+0x14],dl
  40835a:	mov    ah,0xc4
  40835c:	ins    DWORD PTR es:[edi],dx
  40835d:	jns    0x408318
  40835f:	dec    edi
  408360:	mul    BYTE PTR [ebp-0x63]
  408363:	and    ah,BYTE PTR [edi-0x3a]
  408366:	clc    
  408367:	and    dh,0x34
  40836a:	fdivr  DWORD PTR [esi-0x29d91ec]
  408370:	xor    eax,0xc303c889
  408375:	pop    esp
  408376:	fisub  DWORD PTR cs:[ebx+0x7a10d390]
  40837d:	mov    esi,eax
  40837f:	jnp    0x408334
  408381:	rcr    BYTE PTR [edi],cl
  408383:	ds jae 0x40830e
  408386:	push   cs
  408387:	es icebp 
  408389:	or     eax,eax
  40838b:	push   edx
  40838c:	add    DWORD PTR [edi],0xcc9ce6ac
  408392:	inc    ebp
  408393:	cwde   
  408394:	js     0x4083b0
  408396:	xchg   ecx,eax
  408397:	cmp    edx,DWORD PTR [esi+0x2c]
  40839a:	jg     0x40837d
  40839c:	aam    0xc1
  40839e:	call   0x846f:0x2f54e571
  4083a5:	jge    0x4083a3
  4083a7:	jecxz  0x4083ba
  4083a9:	lods   eax,DWORD PTR ds:[esi]
  4083aa:	in     eax,0x33
  4083ac:	mov    ch,0x3b
  4083ae:	arpl   WORD PTR ds:0x89581718,sp
  4083b4:	pop    edx
  4083b5:	and    ah,BYTE PTR [edx-0xa]
  4083b8:	adc    ecx,DWORD PTR [eax+ebp*2+0x7b]
  4083bc:	mov    ecx,0xd6a77eda
  4083c1:	bound  ebp,QWORD PTR [ecx]
  4083c3:	or     al,0x5d
  4083c5:	or     edi,DWORD PTR [edi+0x22]
  4083c8:	les    ebx,FWORD PTR [ecx-0x11f951a7]
  4083ce:	adc    edi,DWORD PTR [edx+0x4f8fca67]
  4083d4:	jg     0x40841f
  4083d6:	lahf   
  4083d7:	(bad)  
  4083d8:	xor    eax,0x1714cc40
  4083dd:	mov    edx,0xdb310d90
  4083e2:	cld    
  4083e3:	mov    ah,0x68
  4083e5:	jg     0x408463
  4083e7:	daa    
  4083e8:	daa    
  4083e9:	out    dx,al
  4083ea:	icebp  
  4083eb:	push   0xbdeb0f9d
  4083f0:	push   ebx
  4083f1:	sbb    al,0x5f
  4083f3:	nop
  4083f4:	dec    esi
  4083f5:	loopne 0x408402
  4083f7:	push   esi
  4083f8:	cwde   
  4083f9:	test   DWORD PTR [esi+eiz*8+0x43],esp
  4083fd:	xchg   esi,eax
  4083fe:	push   0x4
  408400:	inc    eax
  408401:	(bad)  
  408402:	ja     0x4083ea
  408404:	xchg   esp,eax
  408405:	scas   eax,DWORD PTR es:[edi]
  408406:	je     0x408435
  408408:	pop    ss
  408409:	jno    0x408449
  40840b:	jb     0x408450
  40840d:	inc    BYTE PTR [edi-0x504ec282]
  408413:	fcmovu st,st(6)
  408415:	add    BYTE PTR [edi-0x80],al
  408418:	aam    0x70
  40841a:	jmp    0x87a:0x8e423cac
  408421:	jmp    0x408462
  408423:	dec    esp
  408424:	mov    al,0x7
  408426:	pop    ebp
  408427:	(bad)  
  408428:	fcom   QWORD PTR [eax]
  40842a:	outs   dx,BYTE PTR ds:[esi]
  40842b:	jmp    0x40845b
  40842d:	ds jg  0x40845e
  408430:	push   edx
  408431:	out    0x29,al
  408433:	out    0xf5,eax
  408435:	push   es
  408436:	pop    edx
  408437:	inc    ebx
  408438:	sbb    eax,0xf9c42a73
  40843d:	fwait
  40843e:	lods   al,BYTE PTR ds:[esi]
  40843f:	inc    ebp
  408440:	jmp    0xd43be882
  408445:	test   DWORD PTR [eax-0xe],edi
  408448:	or     al,BYTE PTR [edi+edx*8]
  40844b:	mov    ebp,0xef14ba0c
  408450:	in     eax,0x72
  408452:	mov    dl,0x52
  408454:	in     al,0xe9
  408456:	sub    BYTE PTR [esi-0x1e53f895],0xe2
  40845d:	rcr    DWORD PTR [ebp-0x24],cl
  408460:	push   ss
  408461:	inc    edi
  408462:	mov    ebx,DWORD PTR [ebp-0x8]
  408465:	mov    BYTE PTR [edx+ebx*1],al
  408468:	mov    eax,DWORD PTR [ebp-0x40]
  40846b:	mov    edx,DWORD PTR [ebp-0x28]
  40846e:	xor    eax,esi
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx+0x6d]
  408b1b:	fistp  DWORD PTR [esi+esi*4+0x7b7be429]
  408b22:	(bad)  
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	dec    ebp
  408b27:	mov    esp,0x49197113
  408b2c:	sar    esi,1
  408b2e:	jmp    0x743e:0xf4d05412
  408b35:	daa    
  408b36:	dec    ecx
  408b37:	or     al,0xd8
  408b39:	dec    esp
  408b3a:	iret   
  408b3b:	pusha  
  408b3c:	mov    cl,0x8e
  408b3e:	mov    edx,0x4589cddf
  408b43:	int    0x6
  408b45:	jo     0x408ba2
  408b47:	stc    
  408b48:	daa    
  408b49:	sub    eax,0x38f23cb9
  408b4e:	xor    dl,al
  408b50:	push   0xffffffd5
  408b52:	bound  esp,QWORD PTR [ebp+0x3f]
  408b55:	das    
  408b56:	xor    DWORD PTR [eax-0x24f65f9d],ebx
  408b5c:	push   cs
  408b5d:	scas   al,BYTE PTR es:[edi]
  408b5e:	inc    ecx
  408b5f:	inc    edi
  408b60:	mov    eax,0x39cc7e98
  408b65:	mov    BYTE PTR [edi+0x3c],cl
  408b68:	jmp    0x527:0x124b1fd6
  408b6f:	das    
  408b70:	fs cli 
  408b72:	jp     0x408b8e
  408b74:	add    BYTE PTR es:0x3553b3b4,0xdc
  408b7c:	mov    DWORD PTR [ecx+0x4c],edx
  408b7f:	inc    edi
  408b80:	cdq    
  408b81:	lods   eax,DWORD PTR ds:[esi]
  408b82:	shl    BYTE PTR cs:[ebx+0x6ecf0941],cl
  408b89:	outs   dx,DWORD PTR ds:[esi]
  408b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b8b:	jmp    0x408b4c
  408b8d:	iret   
  408b8e:	pop    es
  408b8f:	pop    edx
  408b90:	cwde   
  408b91:	adc    ebx,esp
  408b93:	das    
  408b94:	inc    esi
  408b95:	fnsave [ebx-0x461e9470]
  408b9b:	not    ch
  408b9d:	je     0x408c02
  408b9f:	jae    0x408b28
  408ba1:	push   0x65
  408ba3:	adc    al,0x58
  408ba5:	out    0xa7,al
  408ba7:	add    eax,0xd8677719
  408bac:	sub    ch,BYTE PTR [eax+0xd]
  408baf:	test   eax,0x2ed43109
  408bb4:	adc    cl,BYTE PTR [ebx+0x4f]
  408bb7:	gs out 0x64,al
  408bba:	lods   al,BYTE PTR ds:[esi]
  408bbb:	arpl   WORD PTR [ebx+ebx*4-0x2d64c6fa],sp
  408bc2:	(bad)  
  408bc3:	das    
  408bc4:	jp     0x408bb0
  408bc6:	mov    al,0x3c
  408bc8:	jecxz  0x408bd7
  408bca:	sbb    BYTE PTR [eax+0x5],ch
  408bcd:	punpckldq mm0,mm1
  408bd0:	pop    ecx
  408bd1:	xchg   edx,eax
  408bd2:	stos   BYTE PTR es:[edi],al
  408bd3:	xchg   edx,eax
  408bd4:	mov    bl,0x3
  408bd6:	or     DWORD PTR [edi+0x7076a4d],edi
  408bdc:	test   DWORD PTR [esp+esi*4+0x67ef3dbb],ecx
  408be3:	int3   
  408be4:	arpl   si,di
  408be6:	dec    esi
  408be7:	and    al,0xba
  408be9:	loopne 0x408b7e
  408beb:	je     0x408be1
  408bed:	scas   eax,DWORD PTR es:[edi]
  408bee:	sbb    bl,BYTE PTR [edx+0x60]
  408bf1:	push   esi
  408bf2:	test   al,0xa0
  408bf4:	dec    ebx
  408bf5:	shl    DWORD PTR [edx],cl
  408bf7:	test   DWORD PTR [edi*8+0x2ed99011],edi
  408bfe:	mov    edi,esp
  408c00:	add    eax,0x177e9a70
  408c05:	and    bh,al
  408c07:	jnp    0x408be5
  408c09:	nop
  408c0a:	push   edx
  408c0b:	adc    ch,BYTE PTR [eax-0x7571f0bd]
  408c11:	adc    eax,0xda2b148
  408c16:	je     0x408c4c
  408c18:	mov    edi,0x262d6f9c
  408c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1e:	xor    al,BYTE PTR [ebp-0x396d977e]
  408c24:	lods   eax,DWORD PTR ds:[esi]
  408c25:	or     DWORD PTR [edx+0x1e89ef7e],ebx
  408c2b:	ja     0x408c24
  408c2d:	popf   
  408c2e:	aam    0x23
  408c30:	dec    esi
  408c31:	mov    WORD PTR [esp+eax*8],ss
  408c34:	pop    es
  408c35:	add    BYTE PTR [edx-0xc235f69],ah
  408c3b:	je     0x408c18
  408c3d:	push   eax
  408c3e:	in     eax,dx
  408c3f:	loop   0x408c61
  408c41:	mov    bl,0x1b
  408c43:	jecxz  0x408bd3
  408c45:	in     al,0xb1
  408c47:	dec    eax
  408c48:	call   0x1ed3:0x5f18fd29
  408c4f:	and    cl,bl
  408c51:	or     DWORD PTR [ecx-0x54],edx
  408c54:	adc    ebx,ebp
  408c56:	sbb    BYTE PTR [edi-0x51],bh
  408c59:	add    dl,BYTE PTR [edx+0xa66489c]
  408c5f:	shl    ah,0x42
  408c62:	das    
  408c63:	pop    edi
  408c64:	and    DWORD PTR [eax*1+0x386842a7],ebx
  408c6b:	das    
  408c6c:	loopne 0x408cab
  408c6e:	out    dx,eax
  408c6f:	loop   0x408c2f
  408c71:	xchg   ebp,eax
  408c72:	cmc    
  408c73:	sbb    dh,BYTE PTR [edi+0x128c04c2]
  408c79:	inc    eax
  408c7a:	sub    bl,BYTE PTR [ecx-0x57999285]
  408c80:	pop    es
  408c81:	mov    edi,0x9007ed09
  408c86:	cmp    ecx,DWORD PTR [eax+0x3b]
  408c89:	pop    eax
  408c8a:	pop    ss
  408c8b:	push   edx
  408c8c:	inc    ebp
  408c8d:	or     al,0x59
  408c8f:	aad    0x6a
  408c91:	or     al,0x1f
  408c93:	sbb    eax,0x29197d88
  408c98:	sbb    ch,BYTE PTR [ecx-0x58]
  408c9b:	popf   
  408c9c:	xchg   esp,eax
  408c9d:	and    cl,BYTE PTR gs:[esi+eax*1+0x27]
  408ca2:	adc    al,0xee
  408ca4:	aaa    
  408ca5:	cld    
  408ca6:	inc    edx
  408ca7:	adc    edx,DWORD PTR [esi-0x32]
  408caa:	sub    ebx,DWORD PTR [esi-0x70]
  408cad:	inc    ebx
  408cae:	pop    eax
  408caf:	ss popf 
  408cb1:	in     al,dx
  408cb2:	(bad)  
  408cb3:	jmp    0x130c:0xff51d383
  408cba:	scas   eax,DWORD PTR es:[edi]
  408cbb:	cmp    edx,DWORD PTR [esi-0x65]
  408cbe:	mov    dl,0xdc
  408cc0:	and    eax,0x8f19f182
  408cc5:	add    al,0x19
  408cc7:	xor    bh,dl
  408cc9:	stc    
  408cca:	fsub   st,st(2)
  408ccc:	shr    BYTE PTR [edx-0x778837c0],0x40
  408cd3:	pop    ebx
  408cd4:	and    DWORD PTR [ebp+0x7],ebx
  408cd7:	dec    al
  408cd9:	ins    DWORD PTR es:[edi],dx
  408cda:	pop    edi
  408cdb:	mov    ecx,DWORD PTR [esi-0x42]
  408cde:	or     al,0xb7
  408ce0:	and    esp,DWORD PTR [esi-0x7b]
  408ce3:	sub    eax,0x3e02e31
  408ce8:	rcr    BYTE PTR [edi],0x60
  408ceb:	mov    esi,ss
  408ced:	jmp    0xa198:0xc619774e
  408cf4:	test   eax,0xb400bd1
  408cf9:	mov    eax,0xe75d3815
  408cfe:	mov    esi,0x9ee24e7f
  408d03:	daa    
  408d04:	xor    DWORD PTR [ecx+0xa],esi
  408d07:	mov    eax,0xb991e40f
  408d0c:	fisub  DWORD PTR [ecx-0x4b]
  408d0f:	aad    0x1f
  408d11:	jae    0x408d7c
  408d13:	push   cs
  408d14:	sub    al,BYTE PTR [ebx-0x66b3f8af]
  408d1a:	fbld   TBYTE PTR [edx+0x72685ba6]
  408d20:	push   esp
  408d21:	jmp    0x3cc4:0xac30ec03
  408d28:	and    dh,BYTE PTR [ebp-0x6ef79f30]
  408d2e:	call   0xbb4f:0x35b71113
  408d35:	repz add edx,esi
  408d38:	mov    ds,WORD PTR [esi-0x46bf576b]
  408d3e:	aad    0xa3
  408d40:	add    esp,DWORD PTR [ebp+esi*2-0x1344c3c8]
  408d47:	jmp    0x408d89
  408d49:	fsubr  DWORD PTR [ebx+0x1e84ebbc]
  408d4f:	add    BYTE PTR ds:0x73ab8dc4,ah
  408d55:	sub    DWORD PTR [edx+0xcfec7d0],edx
  408d5b:	xlat   BYTE PTR ds:[ebx]
  408d5c:	sbb    ah,bh
  408d5e:	lds    edi,FWORD PTR [ebx-0x4681c8fe]
  408d64:	in     eax,dx
  408d65:	scas   al,BYTE PTR es:[edi]
  408d66:	sub    al,0x59
  408d68:	mov    BYTE PTR [edx+0xf8fdfce],dh
  408d6e:	dec    eax
  408d6f:	gs xor eax,0x3eee8c3f
  408d75:	enter  0xd5ad,0xf3
  408d79:	nop
  408d7a:	addr16 fwait
  408d7c:	aas    
  408d7d:	mov    eax,0x2a22e767
  408d82:	sbb    eax,0x2e142866
  408d87:	popf   
  408d88:	mov    ecx,0x33584201
  408d8d:	and    al,0x17
  408d8f:	add    DWORD PTR [edx],ecx
  408d91:	les    edx,FWORD PTR [edx]
  408d93:	adc    dh,BYTE PTR [ebx+ebx*8+0x31d3a201]
  408d9a:	and    BYTE PTR [eax+0x4f],cl
  408d9d:	dec    edx
  408d9e:	sub    BYTE PTR ds:0xb947e005,dh
  408da4:	inc    ebx
  408da5:	jbe    0x408e15
  408da7:	jg     0x408d54
  408da9:	jb     0x408d7a
  408dab:	mov    ah,0x9f
  408dad:	push   eax
  408dae:	push   esi
  408daf:	inc    ecx
  408db0:	test   eax,0x9cc6b996
  408db5:	ficom  WORD PTR [ebx+ecx*4-0x3c7386a2]
  408dbc:	hlt    
  408dbd:	xor    eax,0x2f9b46bc
  408dc2:	xchg   DWORD PTR [edx],edx
  408dc4:	aaa    
  408dc5:	jno    0x408d83
  408dc7:	xor    ecx,DWORD PTR [esi+edi*4+0x4213f106]
  408dce:	adc    BYTE PTR ds:0x9d8959b8,al
  408dd4:	(bad)  
  408dd5:	push   ecx
  408dd6:	inc    eax
  408dd7:	in     al,dx
  408dd8:	dec    eax
  408dd9:	sub    DWORD PTR ds:0xa1227a5f,edi
  408ddf:	xchg   ebx,eax
  408de0:	push   edx
  408de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de2:	and    BYTE PTR [edi-0x1c],0x8f
  408de6:	(bad)  
  408de7:	jl     0x408e39
  408de9:	lods   eax,DWORD PTR ds:[esi]
  408dea:	fcmovu st,st(2)
  408dec:	popa   
  408ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dee:	stos   BYTE PTR es:[edi],al
  408def:	xchg   edx,eax
  408df0:	aaa    
  408df1:	ret    0xcd2c
  408df4:	ror    BYTE PTR [ecx],1
  408df6:	dec    ebp
  408df7:	sbb    BYTE PTR ds:0x5d6f7518,0x62
  408dfe:	imul   edx,DWORD PTR [ecx+edi*1],0x0
  408e02:	xor    esp,0x33f02bb0
  408e08:	mov    al,ds:0xdc82e7cb
  408e0d:	addr16 retf 0x78a0
  408e11:	mov    ah,0x4e
  408e13:	(bad)  
  408e14:	dec    edi
  408e15:	cdq    
  408e16:	mov    al,ds:0x163d48e1
  408e1b:	out    0x76,eax
  408e1d:	mov    ds:0xe848694e,eax
  408e22:	enter  0x904,0xdb
  408e26:	push   ebp
  408e27:	gs pop esp
  408e29:	popa   
  408e2a:	clc    
  408e2b:	sti    
  408e2c:	pop    ds
  408e2d:	sbb    eax,0x255f69a7
  408e32:	sub    edx,eax
  408e34:	jl     0x408e12
  408e36:	into   
  408e37:	sbb    DWORD PTR [eax+0x1e],esi
  408e3a:	rcl    BYTE PTR [ecx],cl
  408e3c:	rol    BYTE PTR [ecx],1
  408e3e:	jbe    0x408dcc
  408e40:	xlat   BYTE PTR ds:[ebx]
  408e41:	jmp    0xc00d544a
  408e46:	xor    cl,BYTE PTR [eax+0x35]
  408e49:	jbe    0x408eb8
  408e4b:	scas   al,BYTE PTR es:[edi]
  408e4c:	xlat   BYTE PTR ds:[ebx]
  408e4d:	addr16 pop es
  408e4f:	sub    al,dh
  408e51:	arpl   bp,sp
  408e53:	nop
  408e54:	and    DWORD PTR [ecx],0x0
  408e57:	dec    ecx
  408e58:	dec    esp
  408e59:	xchg   ebp,eax
  408e5a:	das    
  408e5b:	std    
  408e5c:	add    eax,0x34638057
  408e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e62:	aaa    
  408e63:	or     edx,DWORD PTR [ebx]
  408e65:	dec    ebx
  408e66:	mov    cs:0x4371246e,eax
  408e6c:	ja     0x408e1a
  408e6e:	xor    esp,edi
  408e70:	adc    BYTE PTR [ebp+0xd],bh
  408e73:	mov    edi,0xd7ef0cc4
  408e78:	dec    eax
  408e79:	and    bl,BYTE PTR [ebp+0x6c]
  408e7c:	mov    WORD PTR [eax],ss
  408e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e7f:	mov    al,ds:0x1e38b17e
  408e84:	xor    edx,eax
  408e86:	rep stos BYTE PTR es:[edi],al
  408e88:	pushf  
  408e89:	into   
  408e8a:	sbb    esi,eax
  408e8c:	std    
  408e8d:	xor    eax,0x19fc017b
  408e92:	adc    DWORD PTR [edi],esi
  408e94:	retf   
  408e95:	sahf   
  408e96:	mov    ebp,0x42d1c2eb
  408e9b:	mov    ecx,0xc2ec7823
  408ea0:	bound  esp,QWORD PTR [edx]
  408ea2:	and    edi,DWORD PTR [eax-0x4b01e76d]
  408ea8:	or     DWORD PTR [ebx+0x33],eax
  408eab:	or     ah,ch
  408ead:	push   esp
  408eae:	xchg   ebp,eax
  408eaf:	jmp    0xcc170179
  408eb4:	aas    
  408eb5:	or     al,0x61
  408eb7:	aam    0x12
  408eb9:	dec    esi
  408eba:	jp     0x408ed8
  408ebc:	pop    ebx
  408ebd:	mov    dh,0xd3
  408ebf:	int    0xc1
  408ec1:	dec    esi
  408ec2:	xor    BYTE PTR [edi],0x87
  408ec5:	add    DWORD PTR [esi+0x1cf56962],ebp
  408ecb:	sbb    eax,0xa3bc56a8
  408ed0:	ins    BYTE PTR es:[edi],dx
  408ed1:	aas    
  408ed2:	fld    DWORD PTR [edi]
  408ed4:	out    0x8,eax
  408ed6:	push   eax
  408ed7:	push   ds
  408ed8:	das    
  408ed9:	call   0xc6b:0x8daa3bf5
  408ee0:	sti    
  408ee1:	(bad)  
  408ee2:	or     ebp,DWORD PTR [ebx]
  408ee4:	arpl   bx,sp
  408ee6:	push   esi
  408ee7:	jnp    0x408ee7
  408ee9:	int3   
  408eea:	pop    ecx
  408eeb:	retf   
  408eec:	addr16 sub eax,0x4dfdb535
  408ef2:	sar    DWORD PTR ds:0x8c5ade2e,1
  408ef8:	jne    0x408ea7
  408efa:	das    
  408efb:	lods   al,BYTE PTR ds:[esi]
  408efc:	mov    bl,0x64
  408efe:	out    0x8a,eax
  408f00:	jnp    0x408f56
  408f02:	xlat   BYTE PTR ds:[ebx]
  408f03:	add    al,0x7b
  408f05:	push   esp
  408f06:	shl    BYTE PTR [edx+ecx*4-0x34],1
  408f0a:	notrack jmp DWORD PTR ds:0x1b300abe
  408f11:	push   esi
  408f12:	xchg   edi,eax
  408f13:	aad    0x2b
  408f15:	mov    ch,0x53
  408f17:	inc    ebx
  408f18:	inc    ecx
  408f19:	data16 fucomp st(0)
  408f1c:	add    al,BYTE PTR [esi+esi*2+0x1a]
  408f20:	add    esp,DWORD PTR [edx]
  408f22:	xchg   edx,eax
  408f23:	scas   eax,DWORD PTR es:[edi]
  408f24:	gs hlt 
  408f26:	adc    ebx,eax
  408f28:	add    al,0x4c
  408f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2b:	push   cs
  408f2c:	out    0xa1,al
  408f2e:	xchg   DWORD PTR [ebx-0x27],esi
  408f31:	fwait
  408f32:	xor    DWORD PTR [eax+0x1a],ecx
  408f35:	sar    esi,0xb3
  408f38:	ins    DWORD PTR es:[edi],dx
  408f39:	je     0x408f1a
  408f3b:	and    edx,DWORD PTR [ebp-0x20]
  408f3e:	shl    DWORD PTR [edx],0xa3
  408f41:	xor    al,0x9a
  408f43:	mov    ds:0x6f0d7b93,al
  408f48:	cdq    
  408f49:	fisub  DWORD PTR [edi+0x7e]
  408f4c:	pop    es
  408f4d:	inc    edx
  408f4e:	sbb    eax,0x9972827b
  408f53:	push   esp
  408f54:	(bad)  
  408f55:	fcmovbe st,st(2)
  408f57:	or     BYTE PTR [ecx-0x51],dl
  408f5a:	pop    ecx
  408f5b:	scas   al,BYTE PTR es:[edi]
  408f5c:	xor    ecx,DWORD PTR [esi+0x7b]
  408f5f:	sahf   
  408f60:	push   ecx
  408f61:	cvtpi2ps xmm4,QWORD PTR [eax+0x32]
  408f65:	pop    ebp
  408f66:	stos   BYTE PTR es:[edi],al
  408f67:	lahf   
  408f68:	fild   QWORD PTR [eax]
  408f6a:	jl     0x408fd0
  408f6c:	push   0xace505bb
  408f71:	inc    esp
  408f72:	(bad)
  408f75:	jmp    0x408fa0
  408f77:	cmp    DWORD PTR [edi-0x5834f679],eax
  408f7d:	sub    al,0x78
  408f7f:	jg     0x408f81
  408f81:	adc    edx,DWORD PTR [esi+0x5d]
  408f84:	sahf   
  408f85:	aam    0xc9
  408f87:	pop    ebp
  408f88:	data16 xor dh,0x32
  408f8c:	(bad)
  408f91:	leave  
  408f92:	cli    
  408f93:	ror    BYTE PTR [edi],cl
  408f95:	or     al,0x5a
  408f97:	scas   al,BYTE PTR es:[edi]
  408f98:	lods   al,BYTE PTR ds:[esi]
  408f99:	adc    cl,BYTE PTR [eax]
  408f9b:	hlt    
  408f9c:	inc    ebp
  408f9d:	dec    eax
  408f9e:	repnz or eax,0x46856d31
  408fa4:	addr16 pop esp
  408fa6:	mov    ds:0x55db7351,eax
  408fab:	std    
  408fac:	sbb    ch,ah
  408fae:	cdq    
  408faf:	jnp    0x408fbb
  408fb1:	leave  
  408fb2:	mov    al,ds:0xb8b5f598
  408fb7:	push   eax
  408fb8:	dec    BYTE PTR [edi]
  408fba:	cmp    DWORD PTR [edx-0x55640284],ebx
  408fc0:	pop    esp
  408fc1:	jmp    0x5f0c1add
  408fc6:	dec    BYTE PTR [esp+edx*4+0x34]
  408fca:	lds    esp,FWORD PTR [ecx]
  408fcc:	bound  esp,QWORD PTR [ecx-0x64]
  408fcf:	retf   
  408fd0:	xor    DWORD PTR ss:[ebp-0x2759e44b],0xffffff8c
  408fd8:	xor    eax,0x7ce8064b
  408fde:	loop   0x408f82
  408fe0:	jmp    0x40905b
  408fe2:	clc    
  408fe3:	std    
  408fe4:	xchg   ebx,eax
  408fe5:	push   edi
  408fe6:	sub    DWORD PTR ds:0xa685e0fc,0x18776dca
  408ff0:	js     0x409014
  408ff2:	pop    ss
  408ff3:	iret   
  408ff4:	scas   eax,DWORD PTR es:[edi]
  408ff5:	mov    ecx,DWORD PTR [edx+eiz*1-0x30f91493]
  408ffc:	lods   al,BYTE PTR ds:[esi]
  408ffd:	or     cl,BYTE PTR [ebp+0x9d743d4]
  409003:	fstp   TBYTE PTR [esi-0x36]
  409006:	in     eax,dx
  409007:	out    dx,al
  409008:	cmp    al,0x1
  40900a:	icebp  
  40900b:	push   edi
  40900c:	fist   DWORD PTR [edx-0x30d2c089]
  409012:	jbe    0x409071
  409014:	sbb    ecx,0x5f41bdf4
  40901a:	pop    ebp
  40901b:	add    eax,0xdba01f70
  409020:	mov    esp,DWORD PTR ds:0xb1b157c1
  409026:	dec    edx
  409027:	fbstp  TBYTE PTR cs:[ecx]
  40902a:	test   DWORD PTR [edx+esi*4-0x75],0x74d85a06
  409032:	cdq    
  409033:	mov    ds:0x74ec4b9a,al
  409038:	cmp    eax,0x91fddc39
  40903d:	fwait
  40903e:	jle    0x4090a9
  409040:	imul   edi,DWORD PTR [esi+0x30197cb5],0x3b1843ec
  40904a:	outs   dx,BYTE PTR ds:[esi]
  40904b:	pusha  
  40904c:	jecxz  0x4090bd
  40904e:	sbb    esi,DWORD PTR [ebp+0x1cef7a75]
  409054:	xor    dh,BYTE PTR [edi]
  409056:	jge    0x40906b
  409058:	fwait
  409059:	leave  
  40905a:	inc    ebx
  40905b:	dec    edx
  40905c:	and    al,0xb2
  40905e:	jecxz  0x408fe9
  409060:	sbb    cl,bl
  409062:	or     al,0xe7
  409064:	test   al,0x7e
  409067:	(bad)  
  409068:	push   esi
  409069:	(bad)  
  40906a:	xchg   ebx,eax
  40906b:	rcl    BYTE PTR [ebx-0x73],1
  40906e:	enter  0x7234,0xc9
  409072:	outs   dx,BYTE PTR ds:[esi]
  409073:	xor    eax,0xb19eae74
  409078:	bound  edi,QWORD PTR [ebx+esi*4]
  40907b:	jbe    0x409078
  40907d:	fistp  DWORD PTR [edi+0x66]
  409080:	mov    WORD PTR [ecx],ss
  409082:	push   esp
  409083:	or     eax,0x2cf2ef90
  409088:	push   ecx
  409089:	sub    al,0x6
  40908b:	loop   0x409065
  40908d:	push   edi
  40908e:	(bad)  
  40908f:	pop    esp
  409090:	jae    0x40903d
  409092:	or     DWORD PTR ds:0x3551b0fa,0x32
  409099:	jle    0x409116
  40909b:	jns    0x40906a
  40909d:	jo     0x409113
  40909f:	call   0x71bc:0x816235dc
  4090a6:	(bad)  
  4090a7:	mov    ds:0xa704e108,eax
  4090ac:	imul   edi,DWORD PTR [ebx],0xffffffec
  4090af:	jbe    0x409082
  4090b1:	jle    0x40909a
  4090b3:	cmovne edi,DWORD PTR [eax+edx*1]
  4090b7:	or     ebp,ebx
  4090b9:	out    dx,eax
  4090ba:	mov    edx,0xd43f316c
  4090bf:	loope  0x40909d
  4090c1:	pop    ebx
  4090c2:	dec    edx
  4090c3:	test   al,0xf5
  4090c5:	and    eax,0x65e9f91e
  4090ca:	mov    ebx,0x8fcb8fd5
  4090cf:	sub    eax,0xc4e8bf8
  4090d4:	inc    edx
  4090d5:	and    BYTE PTR cs:[ebp-0x3561c320],ch
  4090dc:	inc    esi
  4090dd:	add    DWORD PTR [ecx+0x47],edx
  4090e0:	xchg   ebp,eax
  4090e1:	push   edx
  4090e2:	push   ebx
  4090e3:	cmp    ebp,DWORD PTR [edx+0xb79e426]
  4090e9:	in     eax,0x72
  4090eb:	xchg   BYTE PTR [esi-0x76],al
  4090ee:	sti    
  4090ef:	jecxz  0x4090c2
  4090f1:	sbb    BYTE PTR [ecx+ebp*2+0x703788ec],0x5b
  4090f9:	mov    cl,0x9e
  4090fb:	pop    ebx
  4090fc:	mov    dl,bl
  4090fe:	outs   dx,BYTE PTR ds:[esi]
  4090ff:	sbb    eax,DWORD PTR [edx+eax*2-0xaa33d97]
  409106:	popf   
  409107:	jp     0x4090a4
  409109:	sub    al,0x87
  40910b:	or     ebx,DWORD PTR [edi]
  40910d:	push   edi
  40910e:	imul   esp,DWORD PTR [ecx],0xffffffa6
  409111:	sar    DWORD PTR [ecx-0x1b882878],cl
  409117:	stc    
  409118:	in     eax,0xa8
  40911a:	add    al,0x9f
  40911c:	mov    ebp,0xa811a841
  409121:	add    BYTE PTR [ebx],cl
  409123:	das    
  409124:	dec    eax
  409125:	lds    ebp,FWORD PTR [eax+edi*4-0x58]
  409129:	ficomp DWORD PTR [edx+0x42fdd0d0]
  40912f:	lea    esi,[ecx+0x1d9b603]
  409135:	adc    dh,BYTE PTR [ebp+0x3f]
  409138:	push   esp
  409139:	jmp    0x31b4:0x368d0aa4
  409140:	cwde   
  409141:	ja     0x409113
  409143:	lahf   
  409144:	test   DWORD PTR [edx+0x48],ecx
  409147:	push   ds
  409148:	mov    cl,0x74
  40914a:	inc    ecx
  40914b:	stos   BYTE PTR es:[edi],al
  40914c:	sub    ebx,DWORD PTR ss:[edi+ebx*2-0x75]
  409151:	lea    edx,[ebx+edx*4+0x66]
  409155:	add    eax,0xc8a82cdc
  40915a:	xchg   esi,eax
  40915b:	mov    cl,0x3e
  40915d:	fsub   QWORD PTR [eax-0x47]
  409160:	mov    BYTE PTR [esi+0x695d5ba6],ah
  409166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409167:	push   ebx
  409168:	cmc    
  409169:	and    al,0x84
  40916b:	xchg   esp,eax
  40916c:	jnp    0x409115
  40916e:	mov    dl,0xe
  409170:	jo     0x40910e
  409172:	mov    cs,esi
  409174:	sahf   
  409175:	mov    ch,0x77
  409177:	xchg   ecx,eax
  409178:	push   ebx
  409179:	sbb    BYTE PTR [edi+0x37c5c905],dh
  40917f:	ins    DWORD PTR es:[edi],dx
  409180:	(bad)  
  409181:	sbb    ch,BYTE PTR [ebx-0x59fb0f07]
  409187:	jp     0x409111
  409189:	push   ebp
  40918a:	cdq    
  40918b:	aad    0x64
  40918d:	out    0x7c,al
  40918f:	aam    0xdf
  409191:	adc    al,0x69
  409193:	push   ebp
  409194:	iret   
  409195:	add    edx,DWORD PTR [ebx-0x12]
  409198:	test   ch,bl
  40919a:	mov    ebp,0xd1781485
  40919f:	js     0x409134
  4091a1:	jne    0x40919b
  4091a3:	jmp    0x845d87e2
  4091a8:	or     eax,DWORD PTR [esi+0x8]
  4091ab:	loopne 0x409148
  4091ad:	iret   
  4091ae:	ficomp DWORD PTR [edx+esi*8]
  4091b1:	fisttp WORD PTR [ecx]
  4091b3:	(bad)  [eax-0x57435c20]
  4091b9:	(bad)  
  4091bb:	test   dl,dh
  4091bd:	inc    edx
  4091be:	sub    esp,DWORD PTR fs:[edi+0x19434446]
  4091c5:	add    DWORD PTR [edx+0x2a73d2b1],ecx
  4091cb:	hlt    
  4091cc:	mov    al,ds:0x678500eb
  4091d1:	or     ebx,ebx
  4091d3:	js     0x409249
  4091d5:	adc    bl,al
  4091d7:	outs   dx,DWORD PTR ds:[esi]
  4091d8:	sub    DWORD PTR [ecx+0x60],esi
  4091db:	sbb    eax,0xd9448823
  4091e0:	pop    ebx
  4091e1:	sub    ebx,ebp
  4091e3:	lds    edx,FWORD PTR [edx]
  4091e5:	xor    BYTE PTR [ebp-0x50],al
  4091e8:	and    DWORD PTR [ecx-0x61612875],edx
  4091ee:	xor    eax,0xc15df939
  4091f3:	add    al,0xb
  4091f5:	push   ss
  4091f6:	jmp    0x4091d9
  4091f8:	shl    BYTE PTR [ebx-0x7b],0xcf
  4091fc:	cs push ss
  4091fe:	mov    dl,0x9b
  409200:	mov    esi,?
  409202:	(bad)  
  409203:	in     al,0xeb
  409205:	sub    al,0x64
  409207:	push   ss
  409208:	mov    ecx,es
  40920a:	add    esi,DWORD PTR [ebx+eax*4]
  40920d:	xchg   ebx,eax
  40920e:	and    eax,0x400af2c4
  409213:	shr    DWORD PTR [ebp-0x5d7198f0],1
  409219:	adc    esp,DWORD PTR [edi]
  40921b:	add    DWORD PTR ds:0x183cbfe0,edi
  409221:	dec    edx
  409222:	(bad)  [edx]
  409224:	add    DWORD PTR ds:0x41b4d6f6,eax
  40922a:	fwait
  40922b:	(bad)  
  40922c:	adc    dh,BYTE PTR [edx-0x21a03e]
  409232:	inc    ebp
  409233:	pop    edi
  409234:	lds    ebp,FWORD PTR [edi-0x522bfec]
  40923a:	xchg   esp,eax
  40923b:	out    dx,al
  40923c:	std    
  40923d:	(bad)  
  40923e:	jmp    0xcad1:0x7c18e3d6
  409245:	mov    dl,0xfd
  409247:	adc    al,0xeb
  409249:	repz cld 
  40924b:	sbb    esp,eax
  40924d:	(bad)  
  40924e:	dec    ebx
  40924f:	sub    ah,ch
  409251:	mov    dl,0x6c
  409253:	sub    al,0x43
  409255:	or     ebx,DWORD PTR es:[ebp-0x6e0bcbcd]
  40925c:	xchg   BYTE PTR [ecx],bh
  40925e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40925f:	xchg   BYTE PTR [eax+0x2c],cl
  409262:	jp     0x409215
  409264:	pop    eax
  409265:	ins    BYTE PTR es:[edi],dx
  409266:	ja     0x40920c
  409268:	sub    ebx,DWORD PTR [ecx]
  40926a:	sub    edi,DWORD PTR [esi+0x1212ec8]
  409270:	imul   edx,DWORD PTR [ecx-0x3e483711],0x44
  409277:	outs   dx,DWORD PTR ds:[esi]
  409278:	sub    al,0x8b
  40927a:	inc    esi
  40927b:	dec    esi
  40927c:	mov    ch,0x86
  40927e:	test   DWORD PTR [esi+0x67],esp
  409281:	cld    
  409282:	push   edi
  409283:	mov    ch,0xb0
  409285:	sub    eax,0x3186ae44
  40928a:	and    bh,0xff
  40928d:	(bad)  
  40928e:	pop    ds
  40928f:	inc    edi
  409290:	mov    esp,0x99ed0377
  409295:	and    bl,bh
  409297:	pop    ebp
  409298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409299:	mov    al,dl
  40929b:	jo     0x4092e3
  40929d:	mov    ebx,0x9fc76276
  4092a2:	call   0xf67fe64e
  4092a7:	loop   0x4092cd
  4092a9:	mov    cl,0x22
  4092ab:	fwait
  4092ac:	(bad)  
  4092ad:	mov    al,0x5f
  4092af:	or     BYTE PTR [esi-0x2051ee5],bh
  4092b5:	cmp    bl,bl
  4092b7:	ds sub eax,0x6aebdc90
  4092bd:	(bad)  
  4092be:	(bad)  
  4092bf:	adc    eax,0xd251df42
  4092c4:	je     0x40933d
  4092c6:	mov    ecx,0x39754b56
  4092cb:	fcomp  QWORD PTR [eax-0x67]
  4092ce:	ins    BYTE PTR es:[edi],dx
  4092cf:	mov    bh,0xf9
  4092d1:	shr    edx,0xbb
  4092d4:	jmp    0x40927e
  4092d6:	sub    BYTE PTR [ebp+0x562ca2f8],ah
  4092dc:	mul    DWORD PTR [eax]
  4092de:	and    eax,0x78679631
  4092e3:	and    dh,dl
  4092e5:	mov    ch,0x79
  4092e7:	xchg   ebp,eax
  4092e8:	and    ch,al
  4092ea:	sub    bl,BYTE PTR [ecx]
  4092ec:	dec    ebx
  4092ed:	lods   eax,DWORD PTR ds:[esi]
  4092ee:	cmp    BYTE PTR [eax],ah
  4092f0:	addr16 (bad) 
  4092f2:	add    DWORD PTR [edi-0x2f],edx
  4092f5:	repnz bound ecx,QWORD PTR [ecx-0x35eb638d]
  4092fc:	std    
  4092fd:	daa    
  4092fe:	sbb    BYTE PTR ds:0x97cf6d0e,0x9e
  409305:	mov    esp,0x6bd355d8
  40930a:	sahf   
  40930b:	push   edi
  40930c:	repnz and al,0x92
  40930f:	xchg   edi,eax
  409310:	push   0xffffffa2
  409312:	add    dh,dh
  409314:	test   DWORD PTR cs:[eax],ebx
  409317:	xor    al,0x94
  409319:	push   ss
  40931a:	das    
  40931b:	adc    eax,0xed7e5307
  409320:	push   sp
  409322:	es ins DWORD PTR es:[edi],dx
  409324:	push   ds
  409325:	add    al,0xf4
  409327:	aam    0x47
  409329:	(bad)  
  40932a:	cmp    DWORD PTR [ecx+0x2c4fbfd3],ebp
  409330:	hlt    
  409331:	or     al,BYTE PTR [eax]
  409333:	jno    0x40936e
  409335:	aas    
  409336:	fcmove st,st(0)
  409338:	ficomp DWORD PTR [edi-0x403b924c]
  40933e:	jp     0x4093aa
  409340:	push   edx
  409341:	push   ss
  409342:	les    edi,FWORD PTR [ecx]
  409344:	mov    edx,0x53121e1a
  409349:	loop   0x4092d8
  40934b:	sahf   
  40934c:	pushf  
  40934d:	out    0xec,al
  40934f:	(bad)  
  409350:	(bad)  
  409351:	jmp    0xd193:0xbc452854
  409358:	aam    0x67
  40935a:	jl     0x409349
  40935c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40935d:	pop    ecx
  40935e:	adc    ebx,DWORD PTR [edi+ebx*1+0x58e5be2a]
  409365:	nop
  409366:	adc    DWORD PTR [eax+0x9],ebp
  409369:	(bad)  
  40936a:	jns    0x4093e4
  40936c:	jmp    0x4093ba
  40936e:	jmp    0x4092f3
  409370:	mov    esi,0x1b9955b0
  409375:	icebp  
  409376:	add    al,0x39
  409378:	inc    eax
  409379:	enter  0xac38,0x9a
  40937d:	push   0xffffffe7
  40937f:	and    BYTE PTR [eax-0x5918b039],al
  409385:	cmc    
  409386:	in     eax,dx
  409387:	(bad)  
  409388:	(bad)  
  409389:	icebp  
  40938a:	(bad)  
  40938b:	out    dx,eax
  40938c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40938d:	mov    bh,0xc0
  40938f:	pop    ds
  409390:	xor    DWORD PTR [eax-0x41],esi
  409393:	repz test BYTE PTR [edx-0x29e8e9a3],ah
  40939a:	icebp  
  40939b:	push   eax
  40939c:	inc    ebx
  40939d:	jecxz  0x4093ef
  40939f:	(bad)  
  4093a0:	loope  0x409418
  4093a2:	call   0xfda5:0x405a0f88
  4093a9:	(bad)  
  4093ab:	sbb    ebp,DWORD PTR [esi+0x1c84d1ae]
  4093b1:	mov    dl,0x0
  4093b3:	(bad)  
  4093b4:	xor    DWORD PTR [eax+ebp*4+0x16492a73],esp
  4093bb:	icebp  
  4093bc:	cmp    al,0x52
  4093be:	cld    
  4093bf:	jg     0x4093ac
  4093c1:	gs mov dh,0xf9
  4093c4:	mov    ebp,0xa9e5144c
  4093c9:	popf   
  4093ca:	or     esp,DWORD PTR [eax-0x1bcbc2d1]
  4093d0:	sbb    al,0xd4
  4093d2:	cwde   
  4093d3:	iret   
  4093d4:	fstp   TBYTE PTR [ebx]
  4093d6:	ret    0xcb3
  4093d9:	sbb    al,0xd6
  4093db:	mov    bl,0x97
  4093dd:	push   0xffffff81
  4093df:	loop   0x4093c5
  4093e1:	fcmovnbe st,st(2)
  4093e3:	addr16 test eax,0x2ec0c1fe
  4093e9:	sub    eax,0xce14c26d
  4093ee:	aam    0x5d
  4093f0:	sbb    al,0xde
  4093f2:	sbb    DWORD PTR ds:0x97d4218d,0x85374d0e
  4093fc:	iret   
  4093fd:	sub    DWORD PTR [ebp-0x63],ebx
  409400:	adc    esp,DWORD PTR [ecx-0x6e]
  409403:	cmp    al,0x3f
  409405:	adc    esp,ebx
  409407:	test   cl,ah
  409409:	push   cs
  40940a:	push   0x32
  40940c:	xor    dl,BYTE PTR [ebx-0x48]
  40940f:	push   cs
  409410:	mov    edx,DWORD PTR ds:0x77d6091a
  409416:	outs   dx,BYTE PTR fs:[esi]
  409418:	ret    
  409419:	std    
  40941a:	dec    ebx
  40941b:	fcomi  st,st(7)
  40941d:	pop    edi
  40941e:	(bad)  
  409420:	xor    esp,esi
  409422:	dec    edi
  409423:	dec    ebx
  409424:	mov    ebx,0x20a3fc68
  409429:	adc    edi,ecx
  40942b:	mov    ds:0xfd7858b7,eax
  409430:	adc    edi,DWORD PTR [ecx+eiz*8+0x40]
  409434:	stc    
  409435:	dec    edi
  409436:	repnz dec eax
  409438:	push   0x4c355b34
  40943d:	neg    BYTE PTR [esi+ebp*4+0x75]
  409441:	repz rcl DWORD PTR [eax+0x57],cl
  409445:	jp     0x40943b
  409447:	int3   
  409448:	in     al,0xb7
  40944a:	out    dx,eax
  40944b:	mov    eax,DWORD PTR [edi+0x43666102]
  409451:	mov    edx,0x70d7bb24
  409456:	ins    BYTE PTR es:[edi],dx
  409457:	xor    BYTE PTR [ebp-0x34],cl
  40945a:	cmp    DWORD PTR [eax+0x13800de4],0xffffffe2
  409461:	inc    edx
  409462:	call   0xb707:0x67824294
  409469:	cmp    ah,BYTE PTR es:[edx+0x3c22b6d]
  409470:	xchg   esp,eax
  409471:	add    DWORD PTR [ecx+edi*8-0x42],ebp
  409475:	pop    esi
  409476:	cmp    BYTE PTR [ebx+ecx*8-0x24],cl
  40947a:	xchg   BYTE PTR [esi],bl
  40947c:	cmp    al,al
  40947e:	(bad)  
  40947f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409480:	xlat   BYTE PTR ds:[ebx]
  409481:	xchg   BYTE PTR [eax+0x521d6979],ch
  409487:	stos   DWORD PTR es:[edi],eax
  409488:	retf   
  409489:	jae    0x409426
  40948b:	test   al,0xa8
  40948d:	leave  
  40948e:	mov    ds:0xef0becd2,al
  409493:	dec    edi
  409494:	shl    BYTE PTR [edx-0x4a],0xe9
  409498:	mov    ebx,0x7cc5589a
  40949d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949e:	jmp    0xb87d6f7a
  4094a3:	mov    ebx,0xba6d59a4
  4094a8:	cmp    al,0x31
  4094aa:	mov    ebp,DWORD PTR [ebp+0x5b6a6865]
  4094b0:	mov    bh,0x17
  4094b2:	sbb    esi,DWORD PTR [edx+0x11717fb2]
  4094b8:	sub    al,0xe7
  4094ba:	xchg   ebp,eax
  4094bb:	sub    ebp,DWORD PTR [eax]
  4094bd:	lahf   
  4094be:	xor    eax,0x35f03c57
  4094c3:	pop    es
  4094c4:	pop    ds
  4094c5:	sub    al,0xc6
  4094c7:	(bad)  
  4094c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c9:	dec    esi
  4094ca:	data16 sti 
  4094cc:	in     eax,dx
  4094cd:	cwde   
  4094ce:	ret    
  4094cf:	xchg   edx,eax
  4094d0:	mov    ah,BYTE PTR [esi+0x74]
  4094d3:	mov    al,ds:0x5a1717db
  4094d8:	adc    DWORD PTR [ebx-0x1700757b],eax
  4094de:	or     edx,DWORD PTR [eax+0x6c2e7303]
  4094e4:	into   
  4094e5:	pop    ebp
  4094e6:	sbb    cl,BYTE PTR [ebp-0x59321c67]
  4094ec:	mov    al,0x33
  4094ee:	clc    
  4094ef:	jae    0x409523
  4094f1:	cli    
  4094f2:	mov    dl,0xd
  4094f4:	adc    eax,0x2d6792f9
  4094f9:	fs or  al,0xe8
  4094fc:	push   edx
  4094fd:	push   edx
  4094fe:	jnp    0x4094c5
  409500:	or     esi,DWORD PTR [edi-0x56188d32]
  409506:	fisttp WORD PTR [esi]
  409508:	in     al,0x7d
  40950a:	jg     0x4094d0
  40950c:	popa   
  40950d:	sti    
  40950e:	xchg   DWORD PTR [ecx-0x57e9f936],edi
  409514:	lods   al,BYTE PTR ds:[esi]
  409515:	mov    dh,0x6b
  409517:	sub    al,dl
  409519:	dec    edx
  40951a:	es icebp 
  40951c:	pop    ecx
  40951d:	mov    al,ds:0xd29b3880
  409522:	jno    0x409524
  409524:	in     eax,dx
  409525:	jg     0x40958f
  409527:	xor    DWORD PTR [ebx],edi
  409529:	hlt    
  40952a:	inc    ecx
  40952b:	out    dx,al
  40952c:	nop
  40952d:	xor    al,0x48
  40952f:	enter  0x52b3,0x36
  409533:	add    ah,ah
  409535:	into   
  409536:	inc    esp
  409537:	jmp    0x1d071640
  40953c:	out    dx,eax
  40953d:	inc    ecx
  40953e:	xchg   esi,eax
  40953f:	push   ebx
  409540:	sub    eax,0x5e5e2b2a
  409545:	dec    ebp
  409546:	and    DWORD PTR [esi-0x5],edx
  409549:	lods   al,BYTE PTR ds:[esi]
  40954a:	mov    al,0xea
  40954c:	shr    DWORD PTR [esp+edx*1],1
  40954f:	cld    
  409550:	in     al,dx
  409551:	pop    eax
  409552:	je     0x409588
  409554:	cmp    al,0xb
  409556:	mov    gs,WORD PTR [edx+0x4c]
  409559:	dec    ecx
  40955a:	popa   
  40955b:	in     al,0x91
  40955d:	fld    QWORD PTR [eax+0x7e]
  409560:	mov    edx,DWORD PTR [ecx]
  409562:	push   cs
  409563:	lods   al,BYTE PTR ds:[esi]
  409564:	jle    0x40950b
  409566:	lods   al,BYTE PTR ds:[esi]
  409567:	xchg   esp,eax
  409568:	mov    esi,edx
  40956a:	mov    eax,ds:0x6c51a6fc
  40956f:	mov    WORD PTR [edx+0x67],ds
  409572:	add    bl,BYTE PTR ds:0xe5cdacd1
  409578:	cs push esp
  40957a:	aam    0xb4
  40957c:	sub    ecx,ebp
  40957e:	push   edi
  40957f:	nop
  409580:	push   eax
  409581:	out    0xd1,eax
  409583:	out    dx,eax
  409584:	and    BYTE PTR [edx+0x25513991],ah
  40958a:	ror    BYTE PTR [ebx],1
  40958c:	daa    
  40958d:	out    0xfc,al
  40958f:	inc    eax
  409590:	(bad)  
  409592:	xor    ah,BYTE PTR [eax+0x3be1b337]
  409598:	sbb    DWORD PTR [eax-0x80],ebx
  40959b:	adc    ebp,DWORD PTR [edx+0x469fda09]
  4095a1:	(bad)  
  4095a2:	retf   0x44a3
  4095a5:	inc    ebx
  4095a6:	int    0x4f
  4095a8:	jmp    0x3e1e:0xa5c44dc9
  4095af:	or     eax,DWORD PTR [ecx]
  4095b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b2:	jbe    0x4095f7
  4095b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b5:	test   esi,0xb7d73a3d
  4095bb:	test   al,0xf0
  4095bd:	call   0xe7c7:0x8527d61d
  4095c4:	fs dec eax
  4095c6:	cmp    bh,BYTE PTR [ecx-0x27]
  4095c9:	jne    0x409615
  4095cb:	repz xchg ebp,eax
  4095cd:	add    ecx,ecx
  4095cf:	das    
  4095d0:	outs   dx,DWORD PTR ds:[esi]
  4095d1:	dec    ecx
  4095d2:	mov    ecx,0x712e45bc
  4095d7:	clc    
  4095d8:	sub    BYTE PTR [edi-0x52d3c2a7],ch
  4095de:	test   BYTE PTR [ebp+0x1dd278cc],bh
  4095e4:	inc    eax
  4095e5:	repz scas al,BYTE PTR es:[edi]
  4095e7:	ins    DWORD PTR es:[edi],dx
  4095e8:	outs   dx,DWORD PTR ds:[esi]
  4095e9:	pop    ecx
  4095ea:	inc    esi
  4095eb:	int3   
  4095ec:	je     0x40956e
  4095ee:	cmp    BYTE PTR [esi-0x2c02399b],al
  4095f4:	dec    ecx
  4095f5:	inc    edi
  4095f6:	inc    edi
  4095f7:	xchg   BYTE PTR [ebp+0x2295be04],cl
  4095fd:	not    BYTE PTR [edi]
  4095ff:	jp     0x409587
  409601:	pop    eax
  409602:	cwde   
  409603:	sbb    DWORD PTR [edx-0x4186a359],ebx
  409609:	inc    edx
  40960a:	xor    ah,ah
  40960c:	arpl   si,ax
  40960e:	add    BYTE PTR [edx+0x4e81ca35],bh
  409614:	gs lock or eax,0x56263117
  40961b:	test   DWORD PTR [ebp+0xea4bc82],edi
  409621:	xchg   ebp,eax
  409622:	jmp    0x409683
  409624:	into   
  409625:	icebp  
  409626:	jmp    0x476a:0x510d1f43
  40962d:	scas   al,BYTE PTR es:[edi]
  40962e:	push   edx
  40962f:	dec    ebp
  409630:	jp     0x4095e5
  409632:	mov    edi,0x3070cdc7
  409637:	and    ah,cl
  409639:	nop
  40963a:	addr16 jbe 0x40969e
  40963d:	dec    edx
  40963e:	(bad)  
  40963f:	mov    ch,0x91
  409641:	stos   DWORD PTR es:[edi],eax
  409642:	retf   0xf5f5
  409645:	repz adc ebx,0x57b41de7
  40964c:	jp     0x409668
  40964e:	inc    eax
  40964f:	push   edx
  409650:	or     BYTE PTR [eax],0x33
  409653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409654:	out    0xee,al
  409656:	(bad)  
  409657:	push   0x2b62688b
  40965c:	rcr    DWORD PTR [ecx+0x45],1
  40965f:	stc    
  409660:	ins    DWORD PTR es:[edi],dx
  409661:	out    dx,eax
  409662:	push   cs
  409663:	cmp    esp,DWORD PTR [esi]
  409665:	mov    ah,0x3c
  409667:	ins    BYTE PTR es:[edi],dx
  409668:	sti    
  409669:	dec    esp
  40966a:	je     0x409695
  40966c:	cdq    
  40966d:	pop    edi
  40966e:	stc    
  40966f:	scas   eax,DWORD PTR es:[edi]
  409670:	int    0xcb
  409672:	or     eax,0x5693b627
  409677:	mov    al,0xd6
  409679:	rcr    DWORD PTR [edx-0x77],0x5b
  40967d:	mov    cl,0x88
  40967f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409680:	or     ah,BYTE PTR [eax-0x77]
  409683:	fbld   TBYTE PTR [edx-0x59]
  409686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409687:	and    esp,DWORD PTR [edi+0x72]
  40968a:	sub    ch,BYTE PTR [eax]
  40968c:	test   bh,bh
  40968e:	sub    DWORD PTR [edi-0x3c],edx
  409691:	jecxz  0x409672
  409693:	push   0x54
  409695:	sbb    al,0xb0
  409697:	(bad)  
  409699:	add    DWORD PTR [ecx+0x34],ecx
  40969c:	cmp    bl,bl
  40969e:	xchg   edi,eax
  40969f:	mov    esi,0xd3fdfa06
  4096a4:	mov    ah,0xb3
  4096a6:	xor    ch,cl
  4096a8:	sub    dl,dh
  4096aa:	scas   al,BYTE PTR es:[edi]
  4096ab:	or     eax,0xa1707fab
  4096b0:	fst    st(7)
  4096b2:	shr    BYTE PTR [eax],0x38
  4096b5:	fild   QWORD PTR [ecx-0x46]
  4096b8:	mov    ebp,0xc3f910cc
  4096bd:	add    al,0x73
  4096bf:	test   BYTE PTR [ecx],cl
  4096c1:	leave  
  4096c2:	adc    eax,0x11973bfd
  4096c7:	into   
  4096c8:	scas   eax,DWORD PTR es:[edi]
  4096c9:	inc    esi
  4096ca:	std    
  4096cb:	adc    al,0x85
  4096cd:	mov    ebp,0xc62b9ff9
  4096d2:	outs   dx,BYTE PTR ds:[esi]
  4096d3:	xchg   edi,eax
  4096d4:	pushf  
  4096d5:	sti    
  4096d6:	adc    cl,BYTE PTR [edx]
  4096d8:	jo     0x4096e9
  4096da:	inc    edi
  4096db:	mov    ch,0x7d
  4096dd:	call   FWORD PTR [edx]
  4096df:	out    dx,al
  4096e0:	fist   DWORD PTR [eax]
  4096e2:	jmp    0x4096d1
  4096e4:	cdq    
  4096e5:	adc    DWORD PTR [ebx+ecx*2],0xc749d864
  4096ec:	fcmovnu st,st(3)
  4096ee:	xor    dl,ch
  4096f0:	daa    
  4096f1:	outs   dx,DWORD PTR ds:[esi]
  4096f2:	fmul   st,st(4)
  4096f4:	push   ecx
  4096f5:	sbb    al,0x84
  4096f7:	pop    ecx
  4096f8:	mov    DWORD PTR [edx],edi
  4096fa:	dec    ebp
  4096fb:	mov    al,0x12
  4096fd:	mov    ah,0x50
  4096ff:	xchg   edx,eax
  409700:	das    
  409701:	pushf  
  409702:	jg     0x40971b
  409704:	jae    0x4096ba
  409706:	mov    al,0x96
  409708:	(bad)  
  409709:	(bad)  
  40970b:	bound  esi,QWORD PTR [ebx+edx*2+0x50]
  40970f:	mov    ch,BYTE PTR [edi+0x6abfd7fe]
  409715:	inc    ebp
  409716:	jl     0x4096d3
  409718:	dec    ebx
  409719:	sub    al,cl
  40971b:	push   edx
  40971c:	dec    eax
  40971d:	(bad)  
  40971e:	das    
  40971f:	aad    0x7
  409721:	jnp    0x4096e4
  409723:	out    0x3,eax
  409725:	jp     0x409718
  409727:	dec    ecx
  409728:	mov    ebx,0xfe305749
  40972d:	inc    esi
  40972e:	jne    0x409765
  409730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409731:	jp     0x4096ef
  409733:	mov    al,0x6b
  409735:	push   ecx
  409736:	neg    BYTE PTR [edi-0x2511d2ca]
  40973c:	std    
  40973d:	scas   eax,DWORD PTR es:[edi]
  40973e:	in     al,dx
  40973f:	lahf   
  409740:	sbb    bh,BYTE PTR [esi+0x3b2942a2]
  409746:	sbb    bl,0xbc
  409749:	cmp    DWORD PTR [edi],ebx
  40974b:	(bad)  
  40974c:	repnz stc 
  40974e:	dec    ecx
  40974f:	pop    ebx
  409750:	loop   0x4097a0
  409752:	xchg   edx,eax
  409753:	mov    DWORD PTR [eax-0x3ce4d523],eax
  409759:	ja     0x409797
  40975b:	(bad)  
  40975c:	scas   eax,DWORD PTR es:[edi]
  40975d:	xchg   edx,eax
  40975e:	lds    ecx,FWORD PTR ds:0x89007da0
  409764:	clc    
  409765:	cmc    
  409766:	out    0x6f,eax
  409768:	bswap  ecx
  40976a:	enter  0x37bd,0x69
  40976e:	sub    DWORD PTR [bx+si-0x37],ecx
  409772:	jl     0x409795
  409774:	rcl    BYTE PTR [esi+eax*8-0x691c49b4],1
  40977b:	bound  esi,QWORD PTR [ebp-0x5f]
  40977e:	or     ebx,DWORD PTR [ebx-0x97b145e]
  409784:	jae    0x4097f1
  409786:	scas   eax,DWORD PTR es:[edi]
  409787:	dec    edi
  409788:	mov    ebx,eax
  40978a:	and    al,0x93
  40978c:	push   esi
  40978d:	inc    esp
  40978e:	jecxz  0x409797
  409790:	in     al,0xe7
  409792:	fsubr  st(5),st
  409794:	jo     0x4097ce
  409796:	int    0xea
  409798:	or     ebp,ebp
  40979a:	pop    ecx
  40979b:	dec    esp
  40979c:	mov    esi,0x1a5b0aad
  4097a1:	and    eax,0xca3b37
  4097a6:	pop    ds
  4097a7:	and    bl,0x46
  4097aa:	imul   ecx,DWORD PTR [ebx+0x1a620f93],0x21277376
  4097b4:	inc    esp
  4097b5:	sub    bh,BYTE PTR [ebx+0x3f]
  4097b8:	xlat   BYTE PTR ds:[ebx]
  4097b9:	push   cs
  4097ba:	push   cs
  4097bb:	push   ss
  4097bc:	xchg   DWORD PTR [ebp+0x60],esp
  4097bf:	(bad)
  4097c2:	dec    ecx
  4097c3:	sbb    eax,0xdbac2ad6
  4097c8:	add    esp,ebx
  4097ca:	aam    0x57
  4097cc:	inc    esi
  4097cd:	xor    eax,0x6d1720a3
  4097d2:	sbb    DWORD PTR [ebp+esi*1+0x16a9ee04],eax
  4097d9:	jno    0x40976c
  4097db:	mov    al,BYTE PTR [ebp+0x52]
  4097de:	sbb    al,0x9f
  4097e0:	int3   
  4097e1:	xchg   ebp,eax
  4097e2:	int    0x30
  4097e4:	inc    esi
  4097e5:	inc    esp
  4097e6:	test   al,0x36
  4097e8:	mov    ch,0x26
  4097ea:	push   edi
  4097eb:	loop   0x409810
  4097ed:	shl    DWORD PTR [edi+edi*2],0xff
  4097f1:	daa    
  4097f2:	(bad)  
  4097f3:	dec    edi
  4097f4:	dec    ebx
  4097f5:	mov    cl,0xc5
  4097f7:	adc    DWORD PTR [esi],0xfffffffb
  4097fa:	retf   0x3a19
  4097fd:	ins    BYTE PTR es:[edi],dx
  4097fe:	mov    edx,0x1622e8e6
  409803:	mov    cl,0xdd
  409805:	ss aad 0x51
  409808:	pop    esp
  409809:	imul   eax,DWORD PTR [edx+0x44],0x4b3ee722
  409810:	lods   eax,DWORD PTR ds:[esi]
  409811:	mov    ecx,0x3a4ec029
  409816:	jp     0x409800
  409818:	jl     0x409819
  40981a:	jne    0x40984c
  40981c:	mov    ds:0xfc3333b1,al
  409821:	xchg   ebp,eax
  409822:	sub    al,cl
  409824:	ins    BYTE PTR es:[edi],dx
  409825:	cmp    al,0xd
  409827:	sbb    al,0x6f
  409829:	add    DWORD PTR [ecx+0x2624d074],eax
  40982f:	ret    0x1f93
  409832:	retf   0x6648
  409835:	in     eax,0x95
  409837:	push   ebx
  409838:	xchg   ecx,eax
  409839:	(bad)  
  40983a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983b:	repnz dec ecx
  40983d:	jecxz  0x4098a3
  40983f:	sub    DWORD PTR cs:[bp+si],edx
  409843:	push   0xf8101ca2
  409848:	stc    
  409849:	sub    eax,0x8b735b86
  40984e:	xor    BYTE PTR [esi+0x3f466964],dh
  409854:	sar    BYTE PTR [ecx],0x58
  409857:	pop    ecx
  409858:	enter  0x1c02,0xe1
  40985c:	cmp    DWORD PTR [ebx-0x18],ecx
  40985f:	mov    ebx,0x6cda0714
  409864:	and    al,0xb
  409866:	and    BYTE PTR [esi-0x8],al
  409869:	sbb    BYTE PTR [ebp+0x74],ah
  40986c:	mov    edi,0xcfec4340
  409871:	bound  ecx,QWORD PTR [ecx-0x61]
  409874:	frstor ds:0xc939438e
  40987a:	fcomp  QWORD PTR [eax]
  40987c:	jno    0x4098eb
  40987e:	int    0x91
  409880:	fiadd  DWORD PTR [eax-0x2997497b]
  409886:	test   DWORD PTR [edx+eax*8],esp
  409889:	in     al,dx
  40988a:	imul   DWORD PTR [edi]
  40988c:	xchg   ebx,eax
  40988d:	add    BYTE PTR [eax],dh
  40988f:	dec    eax
  409890:	mov    ebx,0xa91980f6
  409895:	push   0x30
  409897:	mov    ds:0xe6045c06,eax
  40989c:	push   cs
  40989d:	mov    ss,WORD PTR ds:0x548bf1a2
  4098a3:	and    eax,0x967d20e9
  4098a8:	lock sub BYTE PTR [edx+0x36b9b7fb],ah
  4098af:	xchg   edx,eax
  4098b0:	add    DWORD PTR [eax-0xa05c247],ebx
  4098b6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4098b8:	cwde   
  4098b9:	pop    esi
  4098ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098bb:	leave  
  4098bc:	push   ebp
  4098bd:	sbb    eax,0xed1b9d33
  4098c2:	push   ebp
  4098c3:	jno    0x40992b
  4098c5:	sti    
  4098c6:	in     eax,0x87
  4098c8:	mov    al,ds:0xd9117b25
  4098cd:	in     eax,0x77
  4098cf:	xor    esi,DWORD PTR [ecx-0x46]
  4098d2:	and    BYTE PTR [edx+0x33168b01],bh
  4098d8:	or     DWORD PTR [edi-0x73008aa3],ebx
  4098de:	sti    
  4098df:	pop    edx
  4098e0:	mov    ebp,0x1187a8bd
  4098e5:	gs push 0x62635106
  4098eb:	mov    bh,0xe
  4098ed:	retf   
  4098ee:	outs   dx,BYTE PTR ds:[esi]
  4098ef:	adc    BYTE PTR ds:0x430f4587,0x3d
  4098f6:	mov    cl,0xda
  4098f8:	leave  
  4098f9:	mov    ebp,0x6a96494f
  4098fe:	push   ebp
  4098ff:	cmp    ebx,DWORD PTR [ebx-0x4af0148d]
  409905:	nop
  409906:	mov    DWORD PTR [ecx-0x2c],esp
  409909:	ins    BYTE PTR es:[edi],dx
  40990a:	sti    
  40990b:	inc    edx
  40990c:	lds    edi,FWORD PTR [ebx-0x50]
  40990f:	gs test al,0x69
  409912:	shr    BYTE PTR [ebx],cl
  409914:	jo     0x40998c
  409916:	adc    DWORD PTR [edx-0x19],edx
  409919:	ins    BYTE PTR es:[edi],dx
  40991a:	mov    WORD PTR [eax+0x7d],cs
  40991d:	lds    edx,FWORD PTR [esi]
  40991f:	dec    esp
  409920:	pop    es
  409921:	ret    0x2483
  409924:	sub    BYTE PTR [ebx],bl
  409926:	in     eax,0x12
  409928:	mov    ds:0x8638202e,eax
  40992d:	or     BYTE PTR [eax],ch
  40992f:	ror    DWORD PTR [ebx-0x3c92c4fb],1
  409935:	cmp    BYTE PTR [esi-0x167f2819],al
  40993b:	jmp    0x4098d6
  40993d:	int3   
  40993e:	out    0x4d,eax
  409940:	in     eax,dx
  409941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409942:	fidiv  DWORD PTR [ebp-0x4965fc60]
  409948:	and    DWORD PTR [esi+eax*8+0x128f8dfa],eax
  40994f:	xchg   ebx,eax
  409950:	pop    ds
  409951:	aas    
  409952:	icebp  
  409953:	mov    ch,0x4b
  409955:	mov    dh,0xb4
  409957:	mov    dh,bl
  409959:	xor    al,BYTE PTR [eax]
  40995b:	sbb    al,BYTE PTR [esi]
  40995d:	xor    BYTE PTR [edi-0x50adf9a4],0x36
  409964:	lahf   
  409965:	retf   
  409966:	push   ebx
  409967:	icebp  
  409968:	int    0x0
  40996a:	stos   DWORD PTR es:[edi],eax
  40996b:	ret    
  40996c:	pop    es
  40996d:	int3   
  40996e:	fisub  DWORD PTR [ebp+0x6f34ce43]
  409974:	loopne 0x409925
  409976:	push   eax
  409977:	jbe    0x4099de
  409979:	inc    esi
  40997a:	pop    edx
  40997b:	shl    DWORD PTR [edi+0x3c1e8c5d],0x76
  409982:	mov    dh,0x1a
  409984:	inc    eax
  409985:	arpl   WORD PTR [ebx+0x35],sp
  409988:	or     DWORD PTR [esi],ebx
  40998a:	call   0x1774502c
  40998f:	jmp    0xf0f07be5
  409994:	pop    ebx
  409995:	push   esi
  409996:	cmp    BYTE PTR [esi+0x334056ff],dh
  40999c:	xor    ecx,eax
  40999e:	add    edx,DWORD PTR [edi+esi*4-0x2f]
  4099a2:	or     eax,0x1b74b94b
  4099a7:	int3   
  4099a8:	dec    ebx
  4099a9:	lock xchg edx,eax
  4099ab:	loope  0x4099b2
  4099ad:	xchg   edx,eax
  4099ae:	push   esp
  4099af:	outs   dx,BYTE PTR ds:[esi]
  4099b0:	jns    0x4099d7
  4099b2:	push   ecx
  4099b3:	xchg   BYTE PTR [edx+0x41],bl
  4099b6:	lock and bl,BYTE PTR [ebp+0x1d]
  4099ba:	push   es
  4099bb:	mov    dl,0x59
  4099bd:	call   0x2fbd06c
  4099c2:	jmp    0x6e98c307
  4099c7:	int3   
  4099c8:	ja     0x409a11
  4099ca:	inc    edi
  4099cb:	adc    DWORD PTR [eax],0xffffffde
  4099ce:	lods   eax,DWORD PTR ds:[esi]
  4099cf:	inc    eax
  4099d0:	(bad)  
  4099d1:	xor    eax,0x349b4753
  4099d6:	sub    esp,DWORD PTR [ecx+0x376b219]
  4099dc:	loope  0x4099f7
  4099de:	and    BYTE PTR [edx-0x5cd774d7],0xcf
  4099e5:	mov    ds:0x260faed1,eax
  4099ea:	pop    esi
  4099eb:	aaa    
  4099ec:	inc    ecx
  4099ed:	cwde   
  4099ee:	cli    
  4099ef:	mov    ah,BYTE PTR [edi+edx*4+0x1478e0cb]
  4099f6:	mov    eax,0x124258b9
  4099fb:	lea    esi,[eax+0x34]
  4099fe:	dec    ebp
  4099ff:	jecxz  0x409997
  409a01:	add    eax,0x1366760
  409a06:	das    
  409a07:	sbb    eax,0xe9b32024
  409a0c:	retf   0xd32b
  409a0f:	or     BYTE PTR [ecx-0x57d98d01],al
  409a15:	push   esi
  409a16:	jbe    0x409a3b
  409a18:	push   edx
  409a19:	xor    cl,bl
  409a1b:	ss add al,ch
  409a1e:	sub    bl,cl
  409a20:	xor    al,0x40
  409a22:	out    0x3e,al
  409a24:	mov    bh,0x6
  409a26:	pop    esi
  409a27:	mov    ch,0xf6
  409a29:	jbe    0x409a1c
  409a2b:	in     al,dx
  409a2c:	adc    bl,0xea
  409a2f:	pop    edx
  409a30:	shr    DWORD PTR [esi+0x3d1d52de],0xe5
  409a37:	je     0x4099da
  409a39:	cli    
  409a3a:	fidivr DWORD PTR [eax-0x3171ddd5]
  409a40:	xor    BYTE PTR [edi*1+0x2e6d1644],bl
  409a47:	mov    ch,0x6f
  409a49:	sub    BYTE PTR [edi-0x5f],bl
  409a4c:	rcr    edi,cl
  409a4e:	data16 into 
  409a50:	gs jns 0x409a60
  409a53:	mov    DWORD PTR [edi],ebp
  409a55:	mov    bl,0x1b
  409a57:	sahf   
  409a58:	outs   dx,BYTE PTR ds:[esi]
  409a59:	sbb    al,BYTE PTR [ebp+0x6c]
  409a5c:	cmp    ecx,ebx
  409a5e:	daa    
  409a5f:	inc    edi
  409a60:	adc    BYTE PTR [edx],dl
  409a62:	xchg   edi,eax
  409a63:	lea    esi,[esi-0xe]
  409a66:	fcomp  DWORD PTR [ecx+0x30]
  409a69:	adc    ebx,esi
  409a6b:	dec    esp
  409a6c:	fld    TBYTE PTR [eax]
  409a6e:	mov    eax,0x7fffc8c0
  409a73:	mov    dl,0xb0
  409a75:	hlt    
  409a76:	cmp    eax,0xfefe9489
  409a7b:	jae    0x409a41
  409a7d:	into   
  409a7e:	push   edx
  409a7f:	jl     0x409a84
  409a81:	sti    
  409a82:	add    eax,0x27f8f913
  409a87:	mov    ebx,0x2bd3fcbc
  409a8c:	js     0x409afc
  409a8e:	cli    
  409a8f:	jge    0x409a6d
  409a91:	lea    ecx,[esi-0x9e9ef77]
  409a97:	add    DWORD PTR [esi+0x459c6410],edx
  409a9d:	mov    cs,WORD PTR [edi+0x7f1bfc48]
  409aa3:	mov    esi,0xf9f70ac7
  409aa8:	mov    esi,0x64e21a21
  409aad:	clc    
  409aae:	test   BYTE PTR [eax-0x5b6482b0],bh
  409ab4:	cmp    BYTE PTR [esi+ebx*1-0x3378a81f],bh
  409abb:	cmp    ebp,DWORD PTR [ebx+0x40]
  409abe:	aam    0x1e
  409ac0:	and    bh,BYTE PTR [edi]
  409ac2:	mov    edx,0xf0b5f976
  409ac7:	pop    ecx
  409ac8:	and    esi,DWORD PTR [edx+0x77b78c]
  409ace:	mov    ebp,DWORD PTR [edx]
  409ad0:	xchg   ebx,eax
  409ad1:	mov    esi,0x992d2951
  409ad6:	(bad)
  409ada:	aad    0xe9
  409adc:	and    ebp,DWORD PTR [ebp+0x33a66f46]
  409ae2:	lock xchg ebx,eax
  409ae4:	outs   dx,DWORD PTR ds:[esi]
  409ae5:	inc    ebx
  409ae6:	hlt    
  409ae7:	xchg   ebx,eax
  409ae8:	adc    dh,BYTE PTR ds:0xfaed3beb
  409aee:	pop    ecx
  409aef:	outs   dx,BYTE PTR ds:[esi]
  409af0:	aad    0x76
  409af2:	call   0xf97f3768
  409af7:	mov    ch,0xa
  409af9:	inc    esp
  409afa:	mov    cs,WORD PTR [esi+0x7dd1a974]
  409b00:	mov    bl,0x5f
  409b02:	arpl   WORD PTR [edx-0x6c],ax
  409b05:	aaa    
  409b06:	xchg   esp,eax
  409b07:	test   al,0x61
  409b09:	jne    0x409ae4
  409b0b:	fstp   DWORD PTR [ebp+0x3f]
  409b0e:	loop   0x409ab7
  409b10:	popa   
  409b11:	dec    esi
  409b12:	cmp    BYTE PTR [eax],0xe3
  409b15:	xor    eax,0x5895dcdb
  409b1a:	sub    eax,0x3c4bd33f
  409b1f:	mov    ah,0x1b
  409b21:	das    
  409b22:	and    eax,0xd4172b9
  409b27:	xchg   ebx,eax
  409b28:	aaa    
  409b29:	(bad)  [ecx]
  409b2b:	jne    0x409af4
  409b2d:	sbb    al,0xae
  409b2f:	push   0x91c4b70c
  409b34:	arpl   WORD PTR cs:[edi+0x2d5a85ea],cx
  409b3b:	test   eax,0xbd910d1e
  409b40:	mov    ch,0x46
  409b42:	scas   al,BYTE PTR es:[edi]
  409b43:	push   0x53302ebc
  409b48:	push   ecx
  409b49:	mov    ebp,0xf39e567a
  409b4e:	mov    ebp,0x9de35b73
  409b53:	jno    0x409b39
  409b55:	pop    ebp
  409b56:	or     BYTE PTR [ebp+eax*2+0x21],bl
  409b5a:	jmp    0xea9dbb3e
  409b5f:	cdq    
  409b60:	loopne 0x409b2a
  409b62:	sbb    ch,BYTE PTR [ecx]
  409b64:	mov    eax,0x8c48014
  409b69:	cld    
  409b6a:	pop    ebp
  409b6b:	mov    ecx,0xe6bc200a
  409b70:	fisttp WORD PTR [edx]
  409b72:	test   al,0xee
  409b74:	inc    edx
  409b75:	jno    0x409b51
  409b77:	pop    ebp
  409b78:	mov    ecx,0x8d46a9b8
  409b7d:	jge    0x409bc3
  409b7f:	stos   BYTE PTR es:[edi],al
  409b80:	push   edi
  409b81:	ficomp WORD PTR [edx-0x9]
  409b84:	fisubr DWORD PTR [ebp-0x4]
  409b87:	push   ecx
  409b88:	(bad)
  409b8c:	xor    al,0x72
  409b8e:	mov    ah,0xed
  409b90:	xor    ch,0x79
  409b93:	outs   dx,DWORD PTR ds:[esi]
  409b94:	sar    BYTE PTR [edi-0x3e0c408],1
  409b9a:	sbb    eax,0x10338d10
  409b9f:	bound  edx,QWORD PTR [esi+0x43]
  409ba2:	int3   
  409ba3:	sub    al,BYTE PTR [esi+ebp*4]
  409ba6:	cmc    
  409ba7:	push   eax
  409ba8:	aad    0x1b
  409baa:	xchg   edx,eax
  409bab:	adc    al,0x80
  409bad:	adc    edx,DWORD PTR [ebp+0x53673b85]
  409bb3:	shr    DWORD PTR [edx-0x4b8326a2],0xe
  409bba:	push   ss
  409bbb:	popa   
  409bbc:	fmul   DWORD PTR [ebx+0x61]
  409bbf:	out    0xee,al
  409bc1:	mov    ds:0x95d64534,eax
  409bc6:	mov    dl,0x89
  409bc8:	test   DWORD PTR [esi-0xc46dd28],edi
  409bce:	xchg   DWORD PTR [ebp+0x63],esp
  409bd1:	imul   ebx,DWORD PTR [ecx+edx*4],0xffffff95
  409bd5:	xlat   BYTE PTR ds:[ebx]
  409bd6:	or     bh,BYTE PTR [ebp+ecx*2-0x7d]
  409bda:	jg     0x409c18
  409bdc:	cmp    BYTE PTR [ecx-0x74],bl
  409bdf:	fadd   DWORD PTR [ecx+0xf199167]
  409be5:	sbb    DWORD PTR [eax],ebp
  409be7:	pusha  
  409be8:	pop    ss
  409be9:	lar    ebp,bp
  409bec:	imul   ebx,DWORD PTR [eax-0x59f24560],0xf837cc0a
  409bf6:	sub    eax,0x3b1b8c44
  409bfc:	sbb    BYTE PTR [esi],al
  409bfe:	int3   
  409bff:	pop    eax
  409c00:	push   esi
  409c01:	mov    al,ds:0xecfce895
  409c06:	push   ebx
  409c07:	sub    eax,0x4ec369f6
  409c0c:	adc    DWORD PTR [ecx-0x6f],eax
  409c0f:	cmp    eax,0x15d7fc01
  409c14:	neg    BYTE PTR [eax+0x57b227da]
  409c1a:	sub    bl,dl
  409c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c1d:	pop    ecx
  409c1e:	leave  
  409c1f:	push   es
  409c20:	sub    al,BYTE PTR [esi-0x36c3fd33]
  409c26:	retf   
  409c27:	adc    DWORD PTR [edx+0x25e62c90],eax
  409c2d:	mov    ds:0x465e6043,al
  409c32:	xor    esp,edi
  409c34:	and    DWORD PTR [ecx],ecx
  409c36:	mov    esi,0xca4cabc3
  409c3b:	mov    eax,ds:0x7821c470
  409c40:	push   es
  409c41:	pop    eax
  409c42:	pushf  
  409c43:	lahf   
  409c44:	xor    eax,0x1de68b86
  409c49:	je     0x409cc4
  409c4b:	(bad)  
  409c4c:	aad    0x9b
  409c4e:	cmp    bl,BYTE PTR [edx-0x7185a749]
  409c54:	mov    ebp,0x937280df
  409c59:	inc    eax
  409c5a:	mov    eax,0x1e05134b
  409c5f:	cli    
  409c60:	(bad)  
  409c61:	jmp    0x2b798fc4
  409c66:	bound  ebx,QWORD PTR [ebp+0x9d3a893]
  409c6c:	int    0x8
  409c6e:	mov    ch,0x47
  409c70:	mov    al,0x8a
  409c72:	clc    
  409c73:	sub    BYTE PTR [esi+0x60],0xec
  409c77:	aam    0x8
  409c79:	mov    ecx,0xe0539472
  409c7e:	mov    ecx,0xed250ba6
  409c83:	dec    esp
  409c84:	or     BYTE PTR [ecx+0x7743b161],bl
  409c8a:	lock ins BYTE PTR es:[edi],dx
  409c8c:	sahf   
  409c8d:	int    0x4c
  409c8f:	mov    ebx,DWORD PTR [ecx-0xf]
  409c92:	ja     0x409ca5
  409c94:	and    eax,0xf8511f3e
  409c99:	mov    al,0xfc
  409c9b:	js     0x409ca5
  409c9d:	mov    ds:0xa02faf4f,eax
  409ca2:	push   ebp
  409ca3:	call   FWORD PTR [edi]
  409ca5:	mov    edi,0xd95b4cf7
  409caa:	je     0x409c39
  409cac:	int    0x28
  409cae:	lods   al,BYTE PTR ds:[esi]
  409caf:	xchg   esi,eax
  409cb0:	call   0x2302ae48
  409cb5:	xchg   ebx,eax
  409cb6:	sub    ecx,DWORD PTR [eax+0x2c]
  409cb9:	shl    BYTE PTR [edi-0x7d],0xe3
  409cbd:	and    DWORD PTR [edi+0x70],0xffffffcf
  409cc1:	out    dx,al
  409cc2:	adc    edi,DWORD PTR [edi-0x5e]
  409cc5:	dec    edx
  409cc6:	xor    eax,0x164bd6c7
  409ccb:	scas   eax,DWORD PTR es:[edi]
  409ccc:	ss aad 0xf8
  409ccf:	inc    BYTE PTR [esi-0x5d]
  409cd2:	call   DWORD PTR [edi+0x6b]
  409cd5:	and    DWORD PTR [edx+0x59],eax
  409cd8:	adc    al,0x1
  409cda:	sahf   
  409cdb:	mov    WORD PTR [ebx-0x19],cs
  409cde:	popa   
  409cdf:	stc    
  409ce0:	mov    dl,0xb9
  409ce2:	fs pop esp
  409ce4:	das    
  409ce5:	pushf  
  409ce6:	push   esi
  409ce7:	scas   eax,DWORD PTR es:[edi]
  409ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce9:	int    0xdd
  409ceb:	push   ds
  409cec:	mov    WORD PTR [eax+0xe],fs
  409cef:	push   0xe6c5080d
  409cf4:	mov    dh,bh
  409cf6:	jbe    0x409d59
  409cf8:	or     eax,DWORD PTR [esi+0x30]
  409cfb:	dec    ecx
  409cfc:	fst    st(3)
  409cfe:	lods   eax,DWORD PTR ds:[esi]
  409cff:	lods   al,BYTE PTR ds:[esi]
  409d00:	push   ecx
  409d01:	mov    es,esi
  409d03:	sub    BYTE PTR fs:[edi-0x3ffbce18],al
  409d0a:	jmp    0x163c:0x1d50934c
  409d11:	dec    esp
  409d12:	out    0x8b,eax
  409d14:	inc    ebp
  409d15:	bound  eax,QWORD PTR [edi-0x56]
  409d18:	aas    
  409d19:	sub    eax,0xa409438
  409d1e:	mov    ds:0x6e732bcf,al
  409d23:	imul   ebp,DWORD PTR [esp+edi*8+0x1f],0x5304611d
  409d2b:	add    BYTE PTR ds:0x15d81bb1,0x41
  409d32:	xor    al,dl
  409d34:	in     al,0xf7
  409d36:	mov    eax,ds:0xf107c3db
  409d3b:	sub    al,0xba
  409d3d:	dec    ecx
  409d3e:	jmp    0x409ce2
  409d40:	js     0x409cc8
  409d42:	mov    ds:0x5994d391,eax
  409d47:	ins    BYTE PTR es:[edi],dx
  409d48:	xor    esi,DWORD PTR [eax-0x7a]
  409d4b:	fcmovu st,st(4)
  409d4d:	aaa    
  409d4e:	xor    ebx,DWORD PTR ds:0x816edcf5
  409d54:	dec    ecx
  409d55:	mov    ah,0x7a
  409d57:	sbb    DWORD PTR [ebp-0x72],ebx
  409d5a:	dec    DWORD PTR [eax]
  409d5c:	test   eax,0x75f49550
  409d61:	js     0x409dac
  409d63:	sbb    ebp,DWORD PTR [eax+ebp*1+0x51]
  409d67:	pop    eax
  409d68:	or     ah,0x1f
  409d6b:	shl    BYTE PTR [ecx+0x7d76f4d6],0xfd
  409d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d73:	add    dh,BYTE PTR [ebx+0x71f98965]
  409d79:	scas   al,BYTE PTR es:[edi]
  409d7a:	daa    
  409d7b:	cmp    eax,0xec3f3a47
  409d80:	mov    gs,WORD PTR [ebx]
  409d82:	fdiv   st(7),st
  409d84:	adc    DWORD PTR [bx+si-0xb1e],esp
  409d89:	mov    edx,0x28af1b71
  409d8e:	iret   
  409d8f:	mov    edx,0x9ad58203
  409d94:	push   ds
  409d95:	daa    
  409d96:	add    al,ah
  409d98:	jl     0x409e0d
  409d9a:	sub    edx,DWORD PTR [edi+0x248a0560]
  409da0:	(bad)  
  409da1:	shl    DWORD PTR [ebx-0x740fda02],0x1d
  409da8:	push   edx
  409da9:	(bad)  
  409daa:	jmp    0x9397:0x9ad4bf11
  409db1:	xchg   ebx,eax
  409db2:	jg     0x409de4
  409db4:	jge    0x409d90
  409db6:	mov    cl,0x82
  409db8:	or     BYTE PTR [edi-0x1c],0xb7
  409dbc:	adc    eax,0x45a837e9
  409dc1:	popa   
  409dc2:	int3   
  409dc3:	adc    al,0xc5
  409dc5:	imul   edi,DWORD PTR [ecx],0x35
  409dc8:	frstor [eax]
  409dca:	adc    esi,DWORD PTR [eax+0x47]
  409dcd:	enter  0x5bcf,0x1f
  409dd1:	mov    ecx,0xf461824
  409dd6:	loop   0x409dfe
  409dd8:	jae    0x409e21
  409dda:	mov    dh,0xd5
  409ddc:	fwait
  409ddd:	mov    al,ds:0x7fd07ee5
  409de2:	push   eax
  409de3:	mov    WORD PTR [edi+eiz*2-0x2499fbff],cs
  409dea:	inc    edi
  409deb:	mov    al,0x23
  409ded:	test   al,0xa7
  409def:	daa    
  409df0:	arpl   WORD PTR [ebp+0x2e],si
  409df3:	hlt    
  409df4:	daa    
  409df5:	lods   eax,DWORD PTR ds:[esi]
  409df6:	mov    ecx,0x4a5feb2a
  409dfb:	sahf   
  409dfc:	lods   eax,DWORD PTR ds:[esi]
  409dfd:	sbb    eax,0x6f1353f7
  409e02:	jmp    0x9419719
  409e07:	sbb    cl,dl
  409e09:	mov    dh,0x26
  409e0b:	mov    al,0xb4
  409e0d:	in     eax,dx
  409e0e:	stc    
  409e0f:	adc    DWORD PTR [ebx+0x3382a214],esp
  409e15:	mov    edx,0xbe41ceb6
  409e1a:	cli    
  409e1b:	sbb    BYTE PTR [ebx],dh
  409e1d:	add    al,0x62
  409e1f:	push   ss
  409e20:	bswap  ecx
  409e22:	and    BYTE PTR [eax],0xda
  409e25:	dec    ebx
  409e26:	sub    DWORD PTR [eax-0x1792832],eax
  409e2c:	mov    cl,0xf2
  409e2e:	add    ebx,DWORD PTR [ebp+ebx*8+0x5de6c188]
  409e35:	sub    eax,DWORD PTR [ecx+edx*8]
  409e38:	sbb    BYTE PTR [ecx+edx*4-0x7cd9b71b],bl
  409e3f:	jno    0x409e74
  409e41:	xchg   edi,eax
  409e42:	or     eax,0xb71349b6
  409e47:	ins    DWORD PTR es:[edi],dx
  409e48:	dec    ecx
  409e49:	dec    edi
  409e4a:	adc    al,0x42
  409e4c:	xchg   DWORD PTR [esi],ebp
  409e4e:	cmp    DWORD PTR [ebp+0x7d3a047b],ebx
  409e54:	and    al,0x90
  409e56:	cmc    
  409e57:	dec    esp
  409e58:	xor    eax,DWORD PTR [edi-0x74]
  409e5b:	test   al,0x9d
  409e5d:	inc    ebp
  409e5e:	or     ch,dl
  409e60:	and    BYTE PTR [edx+0x16],dh
  409e63:	inc    ebp
  409e64:	xlat   BYTE PTR ds:[ebx]
  409e65:	imul   ebp,DWORD PTR [ebx],0xa8a0070a
  409e6b:	ret    0x5714
  409e6e:	mov    ebx,0x411b9fdd
  409e73:	mov    ah,BYTE PTR [ebx+0x3d]
  409e76:	push   0x13
  409e78:	leave  
  409e79:	jp     0x409e06
  409e7b:	ja     0x409e9d
  409e7d:	ror    DWORD PTR [edi],cl
  409e7f:	push   0x7b
  409e81:	dec    ebp
  409e82:	(bad)  
  409e83:	std    
  409e84:	mov    es,eax
  409e86:	pusha  
  409e87:	fsub   DWORD PTR [esp+edx*4-0x1]
  409e8b:	loope  0x409eac
  409e8d:	cmp    al,BYTE PTR [edx+edi*4+0x26]
  409e91:	imul   ecx,DWORD PTR [ebx-0x1ebb832a],0xea082c28
  409e9b:	bound  edx,QWORD PTR [edi-0x423807b3]
  409ea1:	out    dx,al
  409ea2:	pop    eax
  409ea4:	cmp    ecx,DWORD PTR [eax]
  409ea6:	daa    
  409ea7:	push   ss
  409ea8:	jo     0x409e9e
  409eaa:	adc    ebx,ebx
  409eac:	aad    0xae
  409eae:	dec    edx
  409eaf:	jle    0x409e54
  409eb1:	cmp    al,0x14
  409eb3:	dec    esi
  409eb4:	ret    0xf757
  409eb7:	adc    BYTE PTR [ebp-0x47],dh
  409eba:	out    dx,eax
  409ebb:	imul   edi,DWORD PTR [ecx-0x7c144b],0xffffff8a
  409ec2:	xor    al,0x46
  409ec4:	jo     0x409ef4
  409ec6:	push   esi
  409ec7:	pop    esi
  409ec8:	ret    
  409ec9:	enter  0x4b36,0x35
  409ecd:	fild   DWORD PTR [esp+edx*1+0x469bf404]
  409ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed5:	add    al,0xe6
  409ed7:	sub    bh,BYTE PTR [edx-0x4582d940]
  409edd:	xlat   BYTE PTR ds:[ebx]
  409ede:	add    bl,BYTE PTR [esi+0x5f]
  409ee1:	rol    DWORD PTR [eax-0x74],0x14
  409ee5:	push   esi
  409ee6:	into   
  409ee7:	mov    eax,0x5141a5d6
  409eec:	fmulp  st(3),st
  409eee:	cdq    
  409eef:	or     esp,DWORD PTR [ecx-0x38]
  409ef2:	lsl    ebp,WORD PTR [ebp+0xf]
  409ef6:	adc    ah,BYTE PTR [ebp+0x29]
  409ef9:	popf   
  409efa:	ja     0x409f1b
  409efc:	jnp    0x409f6b
  409efe:	inc    ebx
  409eff:	lds    esi,FWORD PTR [edx]
  409f01:	in     eax,dx
  409f02:	ja     0x409ed7
  409f04:	cmp    BYTE PTR [ebp-0x1c],cl
  409f07:	and    BYTE PTR [eax],ch
  409f09:	repz pop ebp
  409f0b:	in     eax,0x11
  409f0d:	mov    esp,0x153c97e0
  409f12:	lock fwait
  409f14:	mov    ebp,0x91f2ec5a
  409f19:	jecxz  0x409f44
  409f1b:	xchg   edi,eax
  409f1c:	push   eax
  409f1d:	sbb    BYTE PTR [ecx],al
  409f1f:	out    0x12,eax
  409f21:	and    al,bh
  409f23:	(bad)  
  409f24:	push   ss
  409f25:	jbe    0x409ef6
  409f27:	sbb    al,0x86
  409f29:	jb     0x409f9d
  409f2b:	adc    eax,DWORD PTR [esi+0x5e]
  409f2e:	jns    0x409f33
  409f30:	retf   0xc567
  409f33:	repz lds ebp,FWORD PTR fs:[edi]
  409f37:	data16 mov WORD PTR [edi],fs
  409f3a:	xor    al,cl
  409f3c:	cs dec eax
  409f3e:	iret   
  409f3f:	jb     0x409f2a
  409f41:	iret   
  409f42:	aam    0x69
  409f44:	jl     0x409f5b
  409f46:	imul   ebx,DWORD PTR [ebp+0x17],0x53d1b28d
  409f4d:	ret    
  409f4e:	jb     0x409f43
  409f50:	loopne 0x409fbb
  409f52:	pop    esi
  409f53:	popf   
  409f54:	and    eax,0xdb8b6b4d
  409f59:	xchg   DWORD PTR [ebp+ecx*2-0x3ef045aa],ecx
  409f60:	mov    ch,0xd4
  409f62:	and    eax,0x920707ac
  409f67:	pop    ebp
  409f68:	rcr    BYTE PTR [esi-0x3217420b],1
  409f6e:	aam    0xfe
  409f70:	xchg   BYTE PTR [ebp+edx*8+0x41],bl
  409f74:	or     BYTE PTR ds:0x536f5665,ah
  409f7a:	(bad)  
  409f7b:	xchg   BYTE PTR [eax+0x43],al
  409f7e:	xor    ch,BYTE PTR [ebx]
  409f80:	xor    DWORD PTR [eax],esi
  409f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f83:	lahf   
  409f84:	adc    DWORD PTR [ebx+0x5d],edx
  409f87:	arpl   WORD PTR [ebx],dx
  409f89:	mov    ds:0xb0c1596b,eax
  409f8e:	bound  ebp,QWORD PTR es:[ebx-0x40]
  409f92:	pop    edx
  409f93:	adc    al,0xdd
  409f95:	jmp    0x461c:0x291ea30a
  409f9c:	or     DWORD PTR [esi*8+0x20ed2977],0x2d99aee3
  409fa7:	jb     0x40a009
  409fa9:	fld    QWORD PTR [ecx+ecx*4]
  409fac:	cwde   
  409fad:	pop    ebx
  409fae:	sbb    BYTE PTR [esi],dl
  409fb0:	adc    esi,DWORD PTR [ebp-0x5b]
  409fb3:	ror    DWORD PTR [ebx+0x54445dd3],cl
  409fb9:	or     ah,BYTE PTR [ebx]
  409fbb:	jno    0x40a007
  409fbd:	sbb    al,0xdb
  409fbf:	mov    dl,BYTE PTR ds:[ebx-0x51]
  409fc3:	xor    dl,BYTE PTR [edi]
  409fc5:	idiv   DWORD PTR [edi+0xd4d26a6]
  409fcb:	inc    eax
  409fcc:	push   ebp
  409fcd:	mov    ch,0x72
  409fcf:	ret    0xf28b
  409fd2:	jbe    0x409fe6
  409fd4:	ja     0x40a045
  409fd6:	mov    al,ds:0x58f75252
  409fdb:	dec    ecx
  409fdc:	xchg   ecx,eax
  409fdd:	xchg   esi,ebp
  409fdf:	mov    ebp,0x2e3e0385
  409fe4:	cmp    eax,0x209c4dcf
  409fe9:	dec    edi
  409fea:	push   esi
  409feb:	xor    cl,bl
  409fed:	xchg   ebp,eax
  409fee:	sub    cl,BYTE PTR [edi-0x63]
  409ff1:	sub    ah,0x4b
  409ff4:	in     eax,dx
  409ff5:	xor    DWORD PTR cs:[esi],eax
  409ff8:	in     eax,dx
  409ff9:	(bad)  
  409ffa:	jmp    0xab2d:0x835aa340
  40a001:	gs push cs
  40a003:	scas   al,BYTE PTR es:[edi]
  40a004:	sub    DWORD PTR [ebx-0x3508e52f],ebx
  40a00a:	(bad)  
  40a00b:	push   ebx
  40a00c:	imul   ecx,DWORD PTR [edx],0xc67fc78a
  40a012:	xchg   esi,eax
  40a013:	mov    DWORD PTR [ecx],ebx
  40a015:	iret   
  40a016:	jns    0x40a04d
  40a018:	mov    dh,0xec
  40a01a:	or     al,0xcd
  40a01c:	push   esp
  40a01d:	fld    st(4)
  40a01f:	(bad)  
  40a021:	push   cs
  40a022:	push   ss
  40a023:	in     eax,dx
  40a024:	jecxz  0x40a09b
  40a026:	xchg   edi,eax
  40a027:	cmp    esi,0xa9935ca4
  40a02d:	xchg   esi,eax
  40a02e:	neg    BYTE PTR [edi]
  40a030:	ins    DWORD PTR es:[edi],dx
  40a031:	fidivr DWORD PTR [eax+0x237d8b99]
  40a037:	push   eax
  40a038:	pop    edi
  40a039:	fcmovu st,st(4)
  40a03b:	pop    ebx
  40a03c:	outs   dx,BYTE PTR fs:[esi]
  40a03e:	fsubr  QWORD PTR [edi+0x444f80aa]
  40a044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a045:	and    BYTE PTR [esi],0x44
  40a048:	test   edx,0x175ef0f8
  40a04e:	xchg   ebp,eax
  40a04f:	pop    esi
  40a050:	and    eax,0x5d80a66c
  40a055:	popf   
  40a056:	bound  esi,QWORD PTR [ebp+0x7f85dc20]
  40a05c:	cmp    edi,DWORD PTR [ebx+0x69da444]
  40a062:	stc    
  40a063:	leave  
  40a064:	dec    esp
  40a065:	in     eax,0x93
  40a067:	int    0x2b
  40a069:	adc    esi,DWORD PTR [ebx]
  40a06b:	mov    bh,0x2
  40a06d:	xchg   ebp,eax
  40a06e:	js     0x40a04a
  40a070:	push   edx
  40a071:	inc    ecx
  40a072:	inc    ebp
  40a073:	jle    0x40a020
  40a075:	sub    bh,BYTE PTR [esi-0x2]
  40a078:	popa   
  40a079:	xor    BYTE PTR [edi+0x70],al
  40a07c:	fidivr WORD PTR [ecx-0x26]
  40a07f:	imul   eax,DWORD PTR [esi-0x3c],0x3
  40a083:	repnz enter 0xf51e,0x46
  40a088:	sub    BYTE PTR [ebx],dl
  40a08a:	into   
  40a08b:	fcomp  QWORD PTR [ebx+0x66843014]
  40a091:	aaa    
  40a092:	inc    ebp
  40a093:	adc    eax,0xcb0ef47f
  40a098:	xchg   di,ax
  40a09a:	int    0xcc
  40a09c:	pop    es
  40a09d:	xchg   esi,eax
  40a09e:	fwait
  40a09f:	into   
  40a0a0:	pop    ds
  40a0a1:	jae    0x40a0f8
  40a0a3:	mov    esp,0x100b7f91
  40a0a8:	xor    DWORD PTR [esi-0x72],edx
  40a0ab:	aam    0x5e
  40a0ad:	sbb    al,0xff
  40a0af:	pop    ss
  40a0b0:	ds sub esi,edi
  40a0b3:	pop    ecx
  40a0b4:	test   eax,0xd9f801da
  40a0b9:	push   esp
  40a0ba:	out    dx,eax
  40a0bb:	sti    
  40a0bc:	or     cl,ch
  40a0be:	jo     0x40a07e
  40a0c0:	scas   eax,DWORD PTR es:[edi]
  40a0c1:	sub    BYTE PTR [eax-0x726f11c9],bl
  40a0c7:	pop    esp
  40a0c8:	push   esp
  40a0c9:	call   0xd3c86513
  40a0ce:	mov    bl,0x94
  40a0d0:	sbb    DWORD PTR [ebp-0x71],ecx
  40a0d3:	push   eax
  40a0d4:	xor    DWORD PTR es:[di],ebp
  40a0d8:	test   al,0x28
  40a0da:	stos   DWORD PTR es:[edi],eax
  40a0db:	mov    bh,0x1d
  40a0dd:	lock ins DWORD PTR es:[edi],dx
  40a0df:	jle    0x40a10e
  40a0e1:	ret    0xa69f
  40a0e4:	sbb    esp,eax
  40a0e6:	jle    0x40a0af
  40a0e8:	sub    ecx,eax
  40a0ea:	dec    ebx
  40a0eb:	cwde   
  40a0ec:	gs cli 
  40a0ee:	inc    eax
  40a0ef:	(bad)  
  40a0f0:	cmp    al,0x43
  40a0f2:	xchg   DWORD PTR [ecx],edx
  40a0f4:	sub    esi,esp
  40a0f6:	aaa    
  40a0f7:	dec    ecx
  40a0f8:	arpl   WORD PTR [ecx],si
  40a0fa:	or     eax,0x85675b14
  40a0ff:	jle    0x40a13f
  40a101:	xor    esp,DWORD PTR [ecx+0x42]
  40a104:	pop    edi
  40a105:	mov    edi,eax
  40a107:	dec    ebx
  40a108:	sub    bl,BYTE PTR [edi-0x50]
  40a10b:	mov    ah,0x85
  40a10d:	psadbw mm0,QWORD PTR ds:0x6fb31698
  40a114:	fadd   QWORD PTR [ebx-0x7f2a9c92]
  40a11a:	nop
  40a11b:	pop    es
  40a11c:	test   BYTE PTR [edx-0x76da31e0],dl
  40a122:	xchg   edx,eax
  40a123:	and    dh,BYTE PTR [edi-0x73]
  40a126:	and    eax,0x272c34c2
  40a12b:	nop
  40a12c:	ret    
  40a12d:	pushf  
  40a12e:	cmp    eax,0xf1de73cc
  40a133:	and    eax,0x242755bb
  40a138:	(bad)  
  40a139:	popf   
  40a13a:	and    dh,BYTE PTR [eax+eax*2-0x47]
  40a13e:	(bad)  
  40a13f:	movq   QWORD PTR [ebx+edx*1+0x5c2c26c4],mm0
  40a147:	test   al,0xaa
  40a149:	mov    bh,BYTE PTR [esi-0x23]
  40a14c:	sahf   
  40a14d:	jno    0x40a145
  40a14f:	jns    0x40a100
  40a151:	xchg   esi,eax
  40a152:	(bad)  
  40a153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a154:	addr16 xchg ebx,eax
  40a156:	stos   BYTE PTR es:[edi],al
  40a157:	and    ebp,edi
  40a159:	dec    edi
  40a15a:	rcl    BYTE PTR [ebx],cl
  40a15c:	(bad)  
  40a15d:	das    
  40a15e:	out    0x50,al
  40a160:	in     eax,0xab
  40a162:	sbb    BYTE PTR [ecx],ah
  40a164:	adc    dl,bl
  40a166:	mov    esp,0xed3b9003
  40a16b:	mov    dh,0xc3
  40a16d:	mov    WORD PTR [ebx],ds
  40a16f:	test   DWORD PTR [ecx-0x6a],edi
  40a172:	cdq    
  40a173:	cld    
  40a174:	mov    al,ds:0x8ae7bac5
  40a179:	mov    edx,DWORD PTR [ecx+0x24]
  40a17c:	fs and al,0xc
  40a17f:	xchg   edi,eax
  40a180:	(bad)  
  40a182:	dec    ecx
  40a183:	popf   
  40a184:	sub    al,0x67
  40a186:	(bad)  
  40a187:	addr16 in al,dx
  40a189:	dec    BYTE PTR [eax-0x5c]
  40a18c:	push   edx
  40a18d:	es push ecx
  40a18f:	mov    esi,0x99a46946
  40a194:	dec    ebp
  40a195:	jmp    0x40a1c2
  40a197:	xor    DWORD PTR [edi+esi*8+0x26],eax
  40a19b:	mov    bl,0x40
  40a19d:	mov    ebp,0x51170c94
  40a1a2:	and    dl,dh
  40a1a4:	sbb    eax,0xd6dead42
  40a1a9:	lock sub cl,bh
  40a1ac:	rol    BYTE PTR [esi+esi*2-0x549000f1],1
  40a1b3:	in     al,dx
  40a1b4:	ins    BYTE PTR es:[edi],dx
  40a1b5:	jle    0x40a1dc
  40a1b7:	cmp    DWORD PTR [ebx+0x2f05dafd],edx
  40a1bd:	pop    ecx
  40a1be:	xchg   ecx,eax
  40a1bf:	imul   edi,esi,0xffffffca
  40a1c2:	pop    ecx
  40a1c3:	fcmovu st,st(1)
  40a1c5:	xchg   BYTE PTR [eax-0x1c],cl
  40a1c8:	popf   
  40a1c9:	out    dx,eax
  40a1ca:	dec    ebx
  40a1cb:	ins    DWORD PTR es:[edi],dx
  40a1cc:	popf   
  40a1cd:	mov    al,0x2b
  40a1cf:	call   DWORD PTR [edi+0x50]
  40a1d2:	lds    eax,FWORD PTR [ebp-0x22]
  40a1d5:	mov    ecx,0xb9e3d25e
  40a1da:	out    0xa9,eax
  40a1dc:	mov    al,0x30
  40a1de:	inc    eax
  40a1df:	inc    edi
  40a1e0:	arpl   WORD PTR [ecx-0x1ee90484],dx
  40a1e6:	ss and bl,bl
  40a1e9:	cmp    eax,0xcffd01a
  40a1ee:	repz mov ds:0x40156d0d,al
  40a1f4:	xchg   ch,dl
  40a1f6:	je     0x40a1bd
  40a1f8:	popf   
  40a1f9:	mov    dl,0x19
  40a1fb:	call   0xd720:0xe560ff96
  40a202:	and    bl,dl
  40a204:	mov    esi,0xa996929b
  40a209:	adc    BYTE PTR [edx+0x4e],ah
  40a20c:	test   eax,0x38abaaac
  40a211:	int3   
  40a212:	lock pop ecx
  40a214:	xor    eax,0x621dccff
  40a219:	pop    eax
  40a21a:	pop    eax
  40a21b:	jae    0x40a22d
  40a21d:	cs jae 0x40a1a8
  40a220:	jle    0x40a1c5
  40a222:	jnp    0x40a1b3
  40a224:	xchg   edi,eax
  40a225:	ss cmp al,0x26
  40a228:	addr16 mov ds:0xf257,eax
  40a22c:	jmp    0x40a261
  40a22e:	(bad)  
  40a22f:	jecxz  0x40a1c5
  40a231:	jle    0x40a240
  40a233:	test   al,0xd0
  40a235:	gs xchg esp,eax
  40a237:	sub    al,0xff
  40a239:	push   0xe98acdc0
  40a23e:	clc    
  40a23f:	cmp    al,0x74
  40a241:	xchg   ebx,eax
  40a242:	inc    ebp
  40a243:	xchg   ebx,eax
  40a244:	sbb    DWORD PTR [eax+0x230c0884],0x258fa2c1
  40a24e:	jl     0x40a245
  40a250:	dec    ebx
  40a251:	fwait
  40a252:	or     DWORD PTR [edi+0x1b63b660],esi
  40a258:	xlat   BYTE PTR ds:[ebx]
  40a259:	xlat   BYTE PTR ds:[ebx]
  40a25a:	or     BYTE PTR cs:[edx-0x6802f8a7],bh
  40a261:	jl     0x40a240
  40a263:	mov    bl,0x6c
  40a265:	push   cs
  40a266:	push   eax
  40a267:	loop   0x40a295
  40a269:	xor    DWORD PTR [edx-0x6f134248],edi
  40a26f:	mul    eax
  40a271:	adc    DWORD PTR [esi],esi
  40a273:	shl    BYTE PTR [ebx],cl
  40a275:	inc    edx
  40a276:	ret    0xb4fd
  40a279:	xchg   ebx,eax
  40a27a:	jge    0x40a228
  40a27c:	sbb    cl,BYTE PTR [ebp-0x46f66c19]
  40a282:	pusha  
  40a283:	jo     0x40a2f9
  40a285:	jae    0x40a224
  40a287:	and    cl,bl
  40a289:	repnz shl DWORD PTR [esi+0x7e9c681f],0xe4
  40a291:	(bad)  
  40a292:	lahf   
  40a293:	push   esi
  40a294:	mov    dh,0x9f
  40a296:	retf   
  40a297:	or     al,dh
  40a299:	xor    BYTE PTR [edi],bh
  40a29b:	inc    edi
  40a29c:	sub    eax,0x67a85f60
  40a2a1:	lds    ebx,FWORD PTR [ecx]
  40a2a3:	sub    BYTE PTR [ecx+ebp*4+0x502e2172],0xe4
  40a2ab:	mov    ds:0xd4ae24bb,al
  40a2b0:	test   DWORD PTR [edx],esi
  40a2b2:	retf   
  40a2b3:	adc    BYTE PTR [edi+0x5dfda6a1],bl
  40a2b9:	inc    BYTE PTR [ebp+0x61ffb05]
  40a2bf:	push   ss
  40a2c0:	sub    bh,BYTE PTR [eax+ebp*1+0x61]
  40a2c4:	mov    edi,0x1f796db1
  40a2c9:	jno    0x40a2d8
  40a2cb:	ins    DWORD PTR es:[edi],dx
  40a2cc:	fisttp DWORD PTR [edi]
  40a2ce:	pop    esp
  40a2cf:	jge    0x40a253
  40a2d1:	popa   
  40a2d2:	in     eax,dx
  40a2d3:	inc    esp
  40a2d4:	fstp   QWORD PTR [ecx-0x18]
  40a2d7:	fucomp st(4)
  40a2d9:	test   BYTE PTR [edi-0x3a],ch
  40a2dc:	push   eax
  40a2dd:	imul   ebx,esp,0x7d
  40a2e0:	les    eax,FWORD PTR [ebx+edx*4]
  40a2e3:	cwde   
  40a2e4:	popf   
  40a2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e6:	outs   dx,DWORD PTR ds:[esi]
  40a2e7:	add    ebx,0x3c9f416
  40a2ed:	push   es
  40a2ee:	mov    ds:0x9af65e9,al
  40a2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2f4:	test   eax,0x56ce2764
  40a2f9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a2fb:	inc    edx
  40a2fc:	and    al,0xef
  40a2fe:	mov    bl,0x86
  40a300:	adc    eax,0x50cf05ec
  40a305:	imul   eax,esi,0x1c82f0a5
  40a30b:	mov    cl,0x28
  40a30d:	daa    
  40a30e:	call   DWORD PTR [ebx-0xed8daa8]
  40a314:	dec    esp
  40a315:	adc    ecx,DWORD PTR [esi]
  40a317:	inc    eax
  40a318:	xchg   edx,eax
  40a319:	mov    DWORD PTR [ebp+0x32],edi
  40a31c:	in     al,dx
  40a31d:	fidivr DWORD PTR [ebx+0x32]
  40a320:	mov    al,ds:0xc3d83667
  40a325:	jns    0x40a2b8
  40a327:	and    eax,0xc2214428
  40a32c:	mov    al,ds:0xe530d566
  40a331:	cmp    al,0x1b
  40a333:	test   DWORD PTR [ecx+0x4b],esi
  40a336:	test   edi,esp
  40a338:	sub    dh,BYTE PTR [ebx+0x59838dee]
  40a33e:	sub    BYTE PTR [eax],bl
  40a340:	mov    bh,0x7
  40a342:	inc    ecx
  40a343:	shr    edx,cl
  40a345:	mov    eax,ds:0x1a527d19
  40a34a:	xchg   edx,eax
  40a34b:	jecxz  0x40a2ea
  40a34d:	int    0xb6
  40a34f:	sub    eax,0xe2f5085d
  40a354:	cli    
  40a355:	stos   BYTE PTR es:[edi],al
  40a356:	cmp    al,0x4f
  40a358:	enter  0x5d8d,0x7d
  40a35c:	adc    esp,DWORD PTR [ecx]
  40a35e:	repz shl DWORD PTR [ecx-0x7b],cl
  40a362:	push   ds
  40a363:	dec    ecx
  40a364:	ins    BYTE PTR es:[edi],dx
  40a365:	in     al,0x80
  40a367:	jp     0x40a381
  40a369:	ret    
  40a36a:	repnz sub BYTE PTR [ecx],ah
  40a36d:	inc    ecx
  40a36e:	call   0xbf0b:0x2773878c
  40a375:	int3   
  40a376:	dec    ecx
  40a377:	dec    eax
  40a378:	cld    
  40a379:	mov    esi,0xa996c040
  40a37e:	gs ja  0x40a335
  40a381:	stos   BYTE PTR es:[edi],al
  40a382:	mov    eax,ds:0x8df3ecdd
  40a387:	pop    DWORD PTR [edx+0x35]
  40a38a:	jmp    0x40a3c6
  40a38c:	mov    ch,0xfa
  40a38e:	std    
  40a38f:	mov    esi,0x4ebf9e2f
  40a394:	rol    BYTE PTR [ebp+eiz*8-0x77],0x4e
  40a399:	stos   DWORD PTR es:[edi],eax
  40a39a:	sti    
  40a39b:	push   edx
  40a39c:	mov    dl,0x9b
  40a39e:	nop
  40a39f:	and    eax,0x2351acb
  40a3a4:	mov    dh,ah
  40a3a6:	cmp    al,0x40
  40a3a8:	rcr    BYTE PTR [eax-0x4262b6be],cl
  40a3ae:	push   es
  40a3af:	out    dx,eax
  40a3b0:	dec    ebx
  40a3b1:	pushf  
  40a3b2:	out    dx,eax
  40a3b3:	and    al,BYTE PTR [edx]
  40a3b5:	imul   BYTE PTR [edx]
  40a3b7:	in     al,0x69
  40a3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3ba:	sahf   
  40a3bb:	loopne 0x40a40e
  40a3bd:	fdiv   QWORD PTR [edx*1+0x696f7a94]
  40a3c4:	jnp    0x40a3a5
  40a3c6:	push   ecx
  40a3c7:	inc    eax
  40a3c8:	sbb    ebx,eax
  40a3ca:	xchg   esp,eax
  40a3cb:	mov    edx,0x9413ddd
  40a3d0:	mov    ecx,esi
  40a3d2:	xchg   ebx,eax
  40a3d3:	call   FWORD PTR [esi]
  40a3d5:	popf   
  40a3d6:	mov    ecx,0xf4824ac5
  40a3db:	push   esp
  40a3dc:	xor    ch,BYTE PTR [ebx]
  40a3de:	(bad)  
  40a3df:	(bad)  
  40a3e0:	stc    
  40a3e1:	(bad)  
  40a3e2:	xor    eax,0x7b5db817
  40a3e7:	push   ebx
  40a3e8:	and    esp,DWORD PTR ds:0xed163e81
  40a3ee:	(bad)  
  40a3ef:	inc    edx
  40a3f0:	adc    al,ch
  40a3f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3f3:	mov    ecx,0x8d08fee9
  40a3f8:	mov    esp,0xae73de20
  40a3fd:	xor    ecx,DWORD PTR [edi+0x4d]
  40a400:	ret    0x10d5
  40a403:	and    cl,BYTE PTR [ecx-0x34b1a4bd]
  40a409:	popf   
  40a40a:	ret    0x976d
  40a40d:	mov    ebp,DWORD PTR [ecx+0x2742f45c]
  40a413:	pop    ecx
  40a414:	ja     0x40a42b
  40a416:	mov    esi,0xf5f68cc
  40a41b:	push   esp
  40a41c:	imul   BYTE PTR [esi-0x7a]
  40a41f:	aaa    
  40a420:	mov    al,0xdc
  40a422:	mov    al,0x44
  40a424:	jbe    0x40a47e
  40a426:	call   0x4b956b32
  40a42b:	adc    eax,0x57e5023c
  40a430:	in     al,0x24
  40a432:	xchg   esp,eax
  40a433:	cli    
  40a434:	sub    al,0xd0
  40a436:	ins    BYTE PTR es:[edi],dx
  40a437:	mov    ebp,0x37f17155
  40a43c:	outs   dx,DWORD PTR ds:[esi]
  40a43d:	inc    esi
  40a43e:	xor    esp,DWORD PTR [ebp+0x7af53493]
  40a444:	out    0x1,al
  40a446:	mov    edi,0xd70cf6ee
  40a44b:	jnp    0x40a48c
  40a44d:	lods   eax,DWORD PTR ds:[esi]
  40a44e:	jmp    0x40a444
  40a450:	mov    DWORD PTR [ebx],ecx
  40a452:	adc    esi,DWORD PTR [eax+0x6d5f06c2]
  40a458:	push   eax
  40a459:	pop    ebp
  40a45a:	fidivr WORD PTR [ebx]
  40a45c:	test   BYTE PTR [esi],cl
  40a45e:	cli    
  40a45f:	popa   
  40a460:	ss ja  0x40a453
  40a463:	icebp  
  40a464:	pop    esp
  40a465:	sbb    cl,dl
  40a467:	xchg   esi,eax
  40a468:	cmc    
  40a469:	cmc    
  40a46a:	mov    ah,0x36
  40a46c:	(bad)  
  40a46d:	mov    eax,0xf100e43b
  40a472:	xor    eax,0x8ce3c046
  40a477:	and    BYTE PTR [esi],0x46
  40a47a:	xchg   BYTE PTR [ebx+0x49],dl
  40a47d:	outs   dx,DWORD PTR ds:[esi]
  40a47e:	ja     0x40a42a
  40a480:	stc    
  40a481:	xchg   ebx,eax
  40a482:	mov    dl,0xad
  40a484:	sub    al,0x37
  40a486:	ftst   
  40a488:	sbb    ah,BYTE PTR [edi]
  40a48a:	pop    esi
  40a48b:	jbe    0x40a4a3
  40a48d:	add    DWORD PTR ds:0xc1f66de7,esp
  40a493:	mov    ds,WORD PTR [edx+0x4]
  40a496:	(bad)  
  40a497:	mov    ebx,0xe9f8924a
  40a49c:	mov    esi,0x5285ce01
  40a4a1:	out    dx,eax
  40a4a2:	adc    BYTE PTR [eax+0x61c93870],cl
  40a4a8:	dec    edi
  40a4a9:	adc    DWORD PTR [ebx],ebp
  40a4ab:	ror    DWORD PTR [ebp-0x7b49921a],cl
  40a4b1:	sbb    BYTE PTR [esi-0x40466252],0x5d
  40a4b8:	add    WORD PTR [ebp-0x312b7660],di
  40a4bf:	and    ebx,edi
  40a4c1:	push   esi
  40a4c2:	or     eax,0xca65b824
  40a4c7:	mov    dh,0x4
  40a4c9:	ret    0x82ca
  40a4cc:	xlat   BYTE PTR ds:[ebx]
  40a4cd:	stos   DWORD PTR es:[edi],eax
  40a4ce:	lock mov ebp,DWORD PTR [edx+0x19d95a27]
  40a4d5:	xchg   edx,eax
  40a4d6:	pop    esp
  40a4d7:	push   edi
  40a4d8:	es jmp 0xe19e:0xb91f8065
  40a4e0:	adc    BYTE PTR [ebx],al
  40a4e2:	js     0x40a4b7
  40a4e4:	adc    ah,dh
  40a4e6:	daa    
  40a4e7:	push   esi
  40a4e8:	add    DWORD PTR [edi-0x7b988c54],esp
  40a4ee:	sbb    al,dh
  40a4f0:	jbe    0x40a4ee
  40a4f2:	jl     0x40a537
  40a4f4:	es repz fwait
  40a4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f8:	adc    ah,cl
  40a4fa:	jge    0x40a4fe
  40a4fc:	daa    
  40a4fd:	xor    dh,BYTE PTR [ebx]
  40a4ff:	mov    dl,BYTE PTR [eax+0x6a9f4032]
  40a505:	xlat   BYTE PTR ds:[ebx]
  40a506:	or     BYTE PTR [ebx+0x55],ch
  40a509:	cld    
  40a50a:	jns    0x40a519
  40a50c:	inc    ebx
  40a50d:	xchg   ecx,eax
  40a50e:	mov    cl,0x5e
  40a510:	sar    DWORD PTR [ecx+0x44],0xb8
  40a514:	in     eax,0x9a
  40a516:	ins    DWORD PTR es:[edi],dx
  40a517:	ret    0x5d39
  40a51a:	retf   
  40a51b:	jo     0x40a4e6
  40a51d:	in     eax,dx
  40a51e:	aas    
  40a51f:	pop    ss
  40a520:	fwait
  40a521:	inc    ecx
  40a522:	jmp    0xf2ca:0xdc4ea87a
  40a529:	or     DWORD PTR [esi],0xffffff9d
  40a52c:	lahf   
  40a52d:	jno    0x40a4f4
  40a52f:	jmp    0x2ce57e1d
  40a534:	mov    al,0x1c
  40a536:	push   edx
  40a537:	test   al,0xfb
  40a539:	in     eax,dx
  40a53a:	mov    ah,0xbd
  40a53c:	cmp    esi,edx
  40a53e:	push   ds
  40a53f:	pop    ss
  40a540:	mov    ds:0x1f74482,eax
  40a545:	ja     0x40a531
  40a547:	xor    WORD PTR [ecx-0x4aa2d491],bx
  40a54e:	dec    ebx
  40a54f:	adc    bh,BYTE PTR ds:0x7eb1e8bc
  40a555:	fstp   QWORD PTR [edx+esi*8]
  40a558:	xchg   esp,eax
  40a559:	gs pop ebp
  40a55b:	rol    ecx,0x58
  40a55e:	imul   ebp,DWORD PTR [edi-0x2ed1634b],0x57
  40a565:	mov    BYTE PTR [edi-0x4c],cl
  40a568:	nop
  40a569:	jp     0x40a5b3
  40a56b:	xchg   esi,eax
  40a56c:	mov    ebx,0x5f05a6c5
  40a571:	push   0x6892d6fc
  40a576:	sub    DWORD PTR [esi-0x1f62f80c],ebx
  40a57c:	js     0x40a5f7
  40a57e:	dec    edx
  40a57f:	pushf  
  40a580:	mov    al,0x50
  40a582:	fisttp WORD PTR [ecx]
  40a584:	xchg   ecx,eax
  40a585:	rcr    BYTE PTR [esp+edx*1-0x55ebd454],cl
  40a58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58d:	fidiv  DWORD PTR [esp+esi*8]
  40a590:	fwait
  40a591:	out    dx,eax
  40a592:	push   ecx
  40a593:	in     eax,0x3a
  40a595:	jge    0x40a5da
  40a597:	dec    DWORD PTR [esi-0x77]
  40a59a:	sub    BYTE PTR [esi+0xe2abfff],0xd8
  40a5a1:	enter  0xdb18,0xc8
  40a5a5:	sahf   
  40a5a6:	mov    ds:0x31a74fb8,al
  40a5ab:	inc    ebx
  40a5ac:	pop    edi
  40a5ad:	je     0x40a60e
  40a5af:	cmp    DWORD PTR [esi],ebp
  40a5b1:	ja     0x40a62c
  40a5b3:	jmp    0x40a5d3
  40a5b5:	mov    DWORD PTR ss:0xa89b9e5c,edx
  40a5bc:	test   eax,0x8afdefe4
  40a5c1:	adc    ecx,esp
  40a5c3:	xchg   ebx,eax
  40a5c4:	aam    0x78
  40a5c6:	lds    ebx,FWORD PTR [edx]
  40a5c8:	mov    ds:0x17846111,al
  40a5cd:	or     eax,0xf463b65c
  40a5d2:	iret   
  40a5d3:	push   cs
  40a5d4:	dec    edi
  40a5d5:	es jbe 0x40a5b4
  40a5d8:	call   0x98b4d61
  40a5dd:	mov    edx,0x84a9669d
  40a5e2:	fucom  st(0)
  40a5e4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40a5e6:	pop    esp
  40a5e7:	(bad)
  40a5eb:	cmc    
  40a5ec:	imul   eax,DWORD PTR [ebp+eiz*4+0x57f39d64],0x68
  40a5f4:	cs scas eax,DWORD PTR es:[edi]
  40a5f6:	cmp    ah,BYTE PTR [edx-0x58fb72ce]
  40a5fc:	mov    BYTE PTR [ecx-0x42],ch
  40a5ff:	pop    esp
  40a600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a601:	push   esp
  40a602:	cmp    al,0x3c
  40a604:	or     ch,BYTE PTR [ebp+0x334b698]
  40a60a:	and    BYTE PTR [ebp+0x119311d8],ch
  40a610:	adc    edi,ebx
  40a612:	push   esp
  40a613:	cmp    BYTE PTR [edx-0x3a],bl
  40a616:	fcomi  st,st(1)
  40a618:	sti    
  40a619:	add    BYTE PTR [edi],al
  40a61b:	adc    BYTE PTR [esp+0x2a8833f0],dh
  40a622:	mov    ah,bl
  40a624:	dec    esi
  40a625:	add    bh,BYTE PTR [esi-0x3f]
  40a628:	mov    edi,0x919d3a28
  40a62d:	pop    ds
  40a62e:	cmp    DWORD PTR [ecx+ebx*8],ebp
  40a631:	mov    bl,0x23
  40a633:	add    bl,BYTE PTR [edi+0x7e]
  40a636:	(bad)  
  40a638:	shr    BYTE PTR [ecx-0x43726bb9],cl
  40a63e:	sub    esi,ecx
  40a640:	stos   BYTE PTR es:[edi],al
  40a641:	inc    eax
  40a642:	add    bl,BYTE PTR [ebx+edx*8+0x3b]
  40a646:	into   
  40a647:	test   eax,0x924895c3
  40a64c:	dec    esi
  40a64d:	xchg   ecx,eax
  40a64e:	pop    eax
  40a64f:	aaa    
  40a650:	adc    BYTE PTR [ebp-0x64f558bb],bl
  40a656:	cdq    
  40a657:	pop    es
  40a658:	or     eax,0x51f38275
  40a65d:	jns    0x40a64a
  40a65f:	dec    esp
  40a660:	shl    ah,1
  40a662:	les    ebp,FWORD PTR [eax-0x187307c0]
  40a668:	jmp    0x2cd13759
  40a66d:	rcr    BYTE PTR [ecx-0x6d],1
  40a670:	stos   DWORD PTR es:[edi],eax
  40a671:	popf   
  40a672:	ret    0x79d1
  40a675:	mov    ch,0xc5
  40a677:	push   esi
  40a678:	push   ebx
  40a679:	adc    eax,0xa36434b3
  40a67e:	pop    edi
  40a67f:	and    al,0xc6
  40a681:	repz icebp 
  40a683:	xchg   cl,bh
  40a685:	popf   
  40a686:	dec    edx
  40a687:	pop    ds
  40a688:	scas   eax,DWORD PTR es:[edi]
  40a689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68a:	mov    ds:0xdb841346,eax
  40a68f:	push   ebx
  40a690:	aad    0x3b
  40a692:	xchg   ecx,eax
  40a693:	(bad)  
  40a694:	push   0x24
  40a696:	or     DWORD PTR [ecx],edx
  40a698:	fs ret 0xc69a
  40a69c:	cmc    
  40a69d:	pop    ebp
  40a69e:	(bad)  ds:0x5c9fb8f2
  40a6a4:	cli    
  40a6a5:	mov    ebp,0x13968082
  40a6aa:	rcl    BYTE PTR ds:0xbff7efd1,0x95
  40a6b1:	adc    ch,BYTE PTR [eax]
  40a6b3:	repz fwait
  40a6b5:	dec    edx
  40a6b6:	dec    esi
  40a6b7:	jnp    0x40a6ba
  40a6b9:	push   edi
  40a6ba:	cwde   
  40a6bb:	shr    DWORD PTR [esi+0x73],cl
  40a6be:	stos   BYTE PTR es:[edi],al
  40a6bf:	or     BYTE PTR [ecx],ch
  40a6c1:	lods   al,BYTE PTR ds:[esi]
  40a6c2:	xchg   ebx,eax
  40a6c3:	aad    0x70
  40a6c5:	es icebp 
  40a6c7:	mov    ebp,0x826acdf3
  40a6cc:	mov    al,ds:0x1a2d6ef3
  40a6d1:	push   esi
  40a6d2:	cmp    DWORD PTR [ebx+esi*1-0x2191df4e],0xe9407f4f
  40a6dd:	mov    BYTE PTR [ebx+0x9a5845b],ah
  40a6e3:	rcr    DWORD PTR [ecx+0x39],0x46
  40a6e7:	sahf   
  40a6e8:	jnp    0x40a70b
  40a6ea:	test   BYTE PTR [ebx+0x7468ab4b],dh
  40a6f0:	push   ss
  40a6f1:	mov    DWORD PTR [eax-0x6d98479a],esi
  40a6f7:	repnz mov bh,0xec
  40a6fa:	cmp    al,0xc1
  40a6fc:	or     al,0xc6
  40a6fe:	pop    esi
  40a6ff:	mov    WORD PTR [ebp-0x36],cs
  40a702:	rol    BYTE PTR [edx-0x7bb146c9],0xf3
  40a709:	add    ch,dl
  40a70b:	fild   DWORD PTR [eax-0x30]
  40a70e:	(bad)  
  40a70f:	pop    edi
  40a710:	daa    
  40a711:	push   es
  40a712:	dec    esp
  40a713:	(bad)  
  40a715:	mov    bl,0x47
  40a717:	mov    esp,0xd0f19145
  40a71c:	rcr    DWORD PTR [edi+0x58f045db],0x8c
  40a723:	and    bh,BYTE PTR ds:0x2f9fd75f
  40a729:	aas    
  40a72a:	push   cs
  40a72b:	ret    
  40a72c:	call   esp
  40a72e:	jle    0x40a75f
  40a730:	add    dh,BYTE PTR [ebp-0x5]
  40a733:	jbe    0x40a752
  40a735:	xchg   ebp,eax
  40a736:	xor    DWORD PTR [esi+0x25],edx
  40a739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a73a:	inc    eax
  40a73b:	clc    
  40a73c:	(bad)  
  40a73d:	in     al,0x83
  40a73f:	inc    eax
  40a740:	sbb    al,0x7b
  40a742:	repz adc esi,ecx
  40a745:	jnp    0x40a6ce
  40a747:	add    ebx,DWORD PTR [eax+0x5aa4a67c]
  40a74d:	sar    BYTE PTR [edi+0x60bb841f],0x7d
  40a754:	test   BYTE PTR [esp+ecx*8],al
  40a757:	sar    DWORD PTR [edi+0x54cf445e],cl
  40a75d:	mov    WORD PTR [esp+edi*1+0xf015080],fs
  40a764:	pop    esi
  40a765:	mov    cl,0x18
  40a767:	sar    eax,cl
  40a769:	mov    bl,0xb4
  40a76b:	(bad)  
  40a76c:	pop    edx
  40a76d:	sbb    BYTE PTR [eax],al
  40a76f:	das    
  40a770:	add    al,0xa3
  40a772:	push   0xffffffec
  40a774:	mov    eax,cs
  40a776:	or     eax,0xeced4827
  40a77b:	adc    eax,0xbedf8da7
  40a780:	pop    esp
  40a781:	shl    DWORD PTR [ebp-0x30],0x16
  40a785:	or     dl,BYTE PTR [eax]
  40a787:	jg     0x40a79d
  40a789:	jp     0x40a7df
  40a78b:	and    BYTE PTR [esi],ch
  40a78d:	mov    edx,0xafe16675
  40a792:	cld    
  40a793:	jge    0x40a74a
  40a795:	jmp    0x619135cb
  40a79a:	sbb    edx,DWORD PTR [ecx+0x3ab14946]
  40a7a0:	std    
  40a7a1:	jns    0x40a744
  40a7a3:	adc    ebx,DWORD PTR [ecx-0x43]
  40a7a6:	clc    
  40a7a7:	sti    
  40a7a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a9:	iret   
  40a7aa:	je     0x40a72f
  40a7ac:	mov    edi,0xc61da971
  40a7b1:	jg     0x40a77b
  40a7b3:	leave  
  40a7b4:	outs   dx,BYTE PTR ds:[esi]
  40a7b5:	jae    0x40a82d
  40a7b7:	jno    0x40a743
  40a7b9:	push   eax
  40a7ba:	mov    eax,0x9016cd3f
  40a7bf:	push   ebp
  40a7c0:	in     al,dx
  40a7c1:	repnz retf 
  40a7c3:	fld    QWORD PTR [edi]
  40a7c5:	or     DWORD PTR [esi-0x45],ecx
  40a7c8:	and    ch,cl
  40a7ca:	jmp    DWORD PTR [ebx-0x4c]
  40a7cd:	lods   eax,DWORD PTR ds:[esi]
  40a7ce:	adc    BYTE PTR [eax],0x1d
  40a7d1:	mov    ah,0x50
  40a7d3:	(bad)  
  40a7d4:	icebp  
  40a7d5:	pop    edx
  40a7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7d7:	sub    eax,0xdca2326f
  40a7dc:	es jmp 0xa276595e
  40a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7e3:	xor    eax,0x20b5cb86
  40a7e8:	mov    al,0x49
  40a7ea:	leave  
  40a7eb:	test   BYTE PTR [esi-0x42751b15],al
  40a7f1:	in     eax,dx
  40a7f2:	outs   dx,BYTE PTR ds:[esi]
  40a7f3:	dec    eax
  40a7f4:	call   0x4fc:0x67bc6708
  40a7fb:	(bad)  
  40a7fc:	test   al,0xa9
  40a7fe:	jbe    0x40a7fc
  40a800:	and    edi,DWORD PTR [esi-0xa804dde]
  40a806:	pop    esi
  40a807:	imul   ecx,DWORD PTR [eiz*1-0x129e3c19],0x9861d854
  40a812:	ins    DWORD PTR es:[edi],dx
  40a813:	lahf   
  40a814:	xlat   BYTE PTR ds:[ebx]
  40a815:	xor    ecx,DWORD PTR [ebx-0x20cf008c]
  40a81b:	and    al,0x38
  40a81d:	cdq    
  40a81e:	div    BYTE PTR [esi-0x2f]
  40a821:	push   es
  40a822:	jae    0x40a7fb
  40a824:	fistp  QWORD PTR ds:0x32017ddf
  40a82a:	test   DWORD PTR [eax-0x21],esp
  40a82d:	ror    DWORD PTR [edx-0x9],cl
  40a830:	jae    0x40a821
  40a832:	ret    
  40a833:	sbb    al,0x5d
  40a835:	pop    edx
  40a836:	imul   DWORD PTR [esi]
  40a838:	or     al,BYTE PTR [eax-0x59a3397e]
  40a83e:	sbb    DWORD PTR [ecx-0x667a9ec8],ebp
  40a844:	mov    esi,0xfbe267a1
  40a849:	(bad)  
  40a84a:	mov    edi,0x9129aff0
  40a84f:	test   BYTE PTR [eax-0x55],dl
  40a852:	push   esi
  40a853:	retf   0x19b
  40a856:	aaa    
  40a857:	test   al,0x79
  40a859:	fbld   TBYTE PTR [ebp+0x38af8b69]
  40a85f:	adc    al,BYTE PTR [edi-0x41]
  40a862:	or     edx,DWORD PTR [ecx-0x61]
  40a865:	outs   dx,DWORD PTR ds:[esi]
  40a866:	push   ds
  40a867:	jp     0x40a846
  40a869:	or     BYTE PTR [edi-0x12],al
  40a86c:	push   ss
  40a86d:	jle    0x40a84f
  40a86f:	outs   dx,DWORD PTR ds:[esi]
  40a870:	mov    ch,cl
  40a872:	xor    eax,0x524b6c0e
  40a877:	popf   
  40a878:	pop    ss
  40a879:	retf   
  40a87a:	ds stos DWORD PTR es:[edi],eax
  40a87c:	lahf   
  40a87d:	sub    DWORD PTR [eax+edx*8+0x5f],esp
  40a881:	shr    BYTE PTR [ebx-0x77d4bb80],cl
  40a887:	(bad)  
  40a888:	(bad)  
  40a889:	js     0x40a85c
  40a88b:	xchg   edi,eax
  40a88c:	xchg   esi,eax
  40a88d:	and    dl,BYTE PTR [edi-0x9]
  40a890:	mov    DWORD PTR [eax],ebp
  40a892:	stc    
  40a893:	pop    esi
  40a894:	out    dx,eax
  40a895:	xor    BYTE PTR [ebx],dl
  40a897:	jnp    0x40a849
  40a899:	dec    eax
  40a89a:	call   0x667ef821
  40a89f:	jmp    0x57d1:0x2085cf3a
  40a8a6:	mov    ds:0x5da90c28,al
  40a8ab:	pushf  
  40a8ac:	inc    ebp
  40a8ad:	push   ds
  40a8ae:	inc    edx
  40a8af:	add    al,0xae
  40a8b1:	mov    ah,0x3a
  40a8b3:	dec    ecx
  40a8b4:	out    0x60,al
  40a8b6:	aam    0x4c
  40a8b8:	retf   
  40a8b9:	push   esi
  40a8ba:	fnstsw WORD PTR [edx]
  40a8bc:	ret    
  40a8bd:	cmp    ecx,edi
  40a8bf:	daa    
  40a8c0:	lahf   
  40a8c1:	push   ebp
  40a8c2:	repnz cmp DWORD PTR [esi],ecx
  40a8c5:	fnstcw WORD PTR [edx-0x26]
  40a8c8:	push   edi
  40a8c9:	add    ecx,DWORD PTR [ecx+0x1805a9f4]
  40a8cf:	mov    BYTE PTR [edi+ecx*8],ch
  40a8d2:	cwde   
  40a8d3:	jno    0x40a8a9
  40a8d5:	ss jg  0x40a91f
  40a8d8:	inc    DWORD PTR [ecx+0x10c79cb4]
  40a8de:	jge    0x40a8c4
  40a8e0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40a8e2:	call   0xdfbb:0xdab32252
  40a8e9:	clc    
  40a8ea:	mov    eax,ds:0xab197213
  40a8ef:	dec    ecx
  40a8f0:	inc    esi
  40a8f1:	push   ebp
  40a8f2:	int    0x2b
  40a8f4:	sbb    cl,dh
  40a8f6:	dec    ebx
  40a8f7:	pinsrw mm0,WORD PTR [edx-0x3c],0xc0
  40a8fc:	mov    ds:0x903fa537,al
  40a901:	xor    eax,0x7caec096
  40a906:	aaa    
  40a907:	clc    
  40a908:	mov    dl,0x30
  40a90a:	mov    dh,0xcf
  40a90c:	and    ebp,DWORD PTR [eax]
  40a90e:	sar    BYTE PTR [ebx-0x5a],0x9c
  40a912:	ins    BYTE PTR es:[edi],dx
  40a913:	sbb    al,0x4c
  40a915:	or     DWORD PTR [edx+ebx*1-0x3bc35041],ebx
  40a91c:	xchg   ecx,eax
  40a91d:	mov    eax,ds:0x27f3b0ae
  40a922:	jns    0x40a987
  40a924:	pop    ss
  40a925:	je     0x40a950
  40a927:	jg     0x40a95e
  40a929:	hlt    
  40a92a:	or     DWORD PTR [eax+0x6c],esp
  40a92d:	and    BYTE PTR [ebx-0x4c2b8b50],0xe
  40a934:	(bad)  
  40a935:	fs aas 
  40a937:	cmp    al,0x8a
  40a939:	mov    eax,0xe8597816
  40a93e:	dec    ebp
  40a93f:	sbb    ecx,edx
  40a941:	add    ah,BYTE PTR ds:0x9b3b3824
  40a947:	pusha  
  40a948:	mov    BYTE PTR [edi],al
  40a94a:	xlat   BYTE PTR ds:[ebx]
  40a94b:	test   al,0xa0
  40a94d:	out    0x86,eax
  40a94f:	repnz or DWORD PTR [ecx-0x21f4b1df],eax
  40a956:	dec    ebp
  40a957:	or     al,0x64
  40a959:	push   edi
  40a95a:	dec    edi
  40a95b:	add    al,BYTE PTR [ebx+0x616b66fa]
  40a961:	sbb    al,0x9
  40a963:	shr    BYTE PTR [edx+0x273c05a8],0x8
  40a96a:	cmp    eax,0xe3ee33c9
  40a96f:	div    BYTE PTR [edi+0x5]
  40a972:	rcl    ebp,0xef
  40a975:	ror    esi,0x3e
  40a978:	sub    DWORD PTR [ebx-0x6d],esi
  40a97b:	or     DWORD PTR [ebp+0x2faddc4b],eax
  40a981:	xchg   ebp,eax
  40a982:	pop    edi
  40a983:	out    dx,al
  40a984:	out    0xa4,eax
  40a986:	retf   0x68f8
  40a989:	std    
  40a98a:	mov    al,0xce
  40a98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98d:	neg    ebp
  40a98f:	and    eax,0xae0acaf5
  40a994:	shl    DWORD PTR [ecx-0x7e],cl
  40a997:	clc    
  40a998:	mov    edi,DWORD PTR [esp+edx*8]
  40a99b:	jmp    0xaa6a:0xcad4a5ee
  40a9a2:	or     eax,0xb7051939
  40a9a7:	push   ss
  40a9a8:	xor    eax,DWORD PTR [edx]
  40a9aa:	leave  
  40a9ab:	inc    edx
  40a9ac:	xchg   dl,bl
  40a9ae:	or     ch,BYTE PTR [ebp-0xb7984f2]
  40a9b4:	dec    esp
  40a9b5:	enter  0xfe4a,0x51
  40a9b9:	(bad)  
  40a9ba:	jmp    0x40aa02
  40a9bc:	fild   DWORD PTR [ecx+0x2cca33cb]
  40a9c2:	sahf   
  40a9c3:	not    BYTE PTR [edi+ebp*1-0x4b6f59f9]
  40a9ca:	or     eax,0x52b9b703
  40a9cf:	inc    ebp
  40a9d0:	sub    dh,0x6
  40a9d3:	jge    0x40a976
  40a9d5:	ret    
  40a9d6:	sahf   
  40a9d7:	push   ecx
  40a9d8:	test   eax,0x24a61f0e
  40a9dd:	jne    0x40aa11
  40a9df:	std    
  40a9e0:	jno    0x40a985
  40a9e2:	jp     0x40aa36
  40a9e4:	std    
  40a9e5:	std    
  40a9e6:	stos   DWORD PTR es:[edi],eax
  40a9e7:	mov    ecx,0xf158d228
  40a9ec:	xchg   ebp,eax
  40a9ed:	jb     0x40aa1a
  40a9ef:	(bad)  
  40a9f0:	sub    al,0x75
  40a9f2:	xor    ebx,ecx
  40a9f4:	cmp    ah,BYTE PTR [ebp+ebp*8+0x17]
  40a9f8:	xor    eax,0x2ff39858
  40a9fd:	or     DWORD PTR [esi+0x1bf5f265],esi
  40aa03:	adc    BYTE PTR [eax-0x11],0x9
  40aa07:	mov    bl,0x63
  40aa09:	arpl   si,cx
  40aa0b:	icebp  
  40aa0c:	lea    esi,[esi-0x53]
  40aa0f:	mov    dl,0x1
  40aa11:	xchg   esi,eax
  40aa12:	fild   WORD PTR [edi-0x30]
  40aa15:	mov    ds:0x20f94785,al
  40aa1a:	(bad)  
  40aa1b:	mov    edx,DWORD PTR [eax-0x1e]
  40aa1e:	out    0xbc,eax
  40aa20:	lds    ecx,FWORD PTR [eax+0x1e029beb]
  40aa26:	push   esp
  40aa27:	test   eax,0x680e4f8b
  40aa2c:	addr16 push cs
  40aa2e:	sbb    DWORD PTR [esi-0x96e53d3],eax
  40aa34:	lea    edx,[edi-0x27]
  40aa37:	mov    ecx,0x13c16787
  40aa3c:	xor    BYTE PTR [ecx],ch
  40aa3e:	aam    0xbe
  40aa40:	icebp  
  40aa41:	mov    DWORD PTR [edi],ebp
  40aa43:	sbb    dl,BYTE PTR [eax-0x69]
  40aa46:	xchg   bx,ax
  40aa48:	mov    esp,0x617fc0b0
  40aa4d:	lods   eax,DWORD PTR ds:[esi]
  40aa4e:	push   esi
  40aa4f:	arpl   WORD PTR [esi+eiz*4+0x3fbd8ea],cx
  40aa56:	mov    ebx,0x7919e5b7
  40aa5b:	mov    cl,0x57
  40aa5d:	popf   
  40aa5e:	ret    
  40aa5f:	test   edx,edx
  40aa61:	std    
  40aa62:	icebp  
  40aa63:	dec    ecx
  40aa64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa65:	ds in  eax,dx
  40aa67:	pop    eax
  40aa68:	inc    ecx
  40aa69:	mov    WORD PTR [ebp+0x25],bx
  40aa6d:	daa    
  40aa6e:	lods   eax,DWORD PTR ds:[esi]
  40aa6f:	add    BYTE PTR [eax-0x61],0xbb
  40aa73:	cld    
  40aa74:	xchg   ecx,eax
  40aa75:	add    ah,dl
  40aa77:	ins    BYTE PTR es:[edi],dx
  40aa78:	fistp  WORD PTR [eax+0x2a]
  40aa7b:	std    
  40aa7c:	dec    ecx
  40aa7d:	nop
  40aa7e:	inc    edx
  40aa7f:	or     DWORD PTR ds:0x2711c5b7,edx
  40aa85:	or     DWORD PTR [esi+0x3b],esi
  40aa88:	std    
  40aa89:	fnstcw WORD PTR [eax-0x6730bea2]
  40aa8f:	sbb    eax,0x984bf1db
  40aa94:	and    bh,al
  40aa96:	xchg   edi,eax
  40aa97:	add    eax,0x21dc8ce8
  40aa9c:	dec    ebx
  40aa9d:	les    ebx,FWORD PTR [ebp+eiz*4+0xf]
  40aaa1:	not    DWORD PTR [ebx]
  40aaa3:	ret    0xf11
  40aaa6:	pop    ecx
  40aaa7:	call   0x3ce4daae
  40aaac:	rol    BYTE PTR [edi-0x63b6257],1
  40aab2:	arpl   bp,cx
  40aab4:	es xchg si,ax
  40aab7:	fld    TBYTE PTR [eax+0x43]
  40aaba:	and    DWORD PTR [ecx-0x5998ebf4],esp
  40aac0:	pop    ebx
  40aac1:	mov    DWORD PTR [edi+0x6a7945e7],esp
  40aac7:	jle    0x40ab3c
  40aac9:	cmp    BYTE PTR ds:0xd3c42169,bh
  40aacf:	leave  
  40aad0:	rcl    bh,1
  40aad2:	popf   
  40aad3:	sub    eax,0x8af90e6c
  40aad8:	test   DWORD PTR ds:0x10aa36c9,0x65b4f343
  40aae2:	mov    ebx,0x905169e9
  40aae7:	sbb    esi,DWORD PTR [eax+0x6]
  40aaea:	addr16 jno 0x40aa7f
  40aaed:	mov    edx,0xc5481e3
  40aaf2:	fcomp  QWORD PTR [ebx+ecx*8+0x5]
  40aaf6:	dec    esp
  40aaf7:	mov    bh,BYTE PTR [ecx]
  40aaf9:	adc    dh,BYTE PTR [ebx+0x65cd63bf]
  40aaff:	and    DWORD PTR [edi],ecx
  40ab01:	dec    ebp
  40ab02:	hlt    
  40ab03:	popf   
  40ab04:	jge    0x40ab36
  40ab06:	sbb    dl,ah
  40ab08:	push   esi
  40ab09:	clc    
  40ab0a:	ss das 
  40ab0c:	mov    ebx,fs
  40ab0e:	ficomp WORD PTR [ecx]
  40ab10:	loope  0x40aa93
  40ab12:	fisttp QWORD PTR [esi-0x534a7d2d]
  40ab18:	in     al,0xda
  40ab1a:	in     al,dx
  40ab1b:	dec    ebp
  40ab1c:	call   0x23eccc3
  40ab21:	mov    al,0xc1
  40ab23:	ins    BYTE PTR es:[edi],dx
  40ab24:	test   DWORD PTR [edi+0x11d2ef84],0x6d60f230
  40ab2e:	xor    DWORD PTR [eax+0x3b],edx
  40ab31:	ret    0xec7e
  40ab34:	jge    0x40aad6
  40ab36:	in     al,0xec
  40ab38:	aas    
  40ab39:	dec    ecx
  40ab3a:	cmp    eax,0xc8722ff5
  40ab3f:	mov    cl,0x12
  40ab41:	mov    ebx,0xaa6754b
  40ab46:	xor    BYTE PTR [ebx-0x6a044411],ch
  40ab4c:	jge    0x40ab7f
  40ab4e:	dec    esp
  40ab4f:	int3   
  40ab50:	mov    eax,0x510e5121
  40ab55:	adc    BYTE PTR [edi],al
  40ab57:	jnp    0x40aae7
  40ab59:	das    
  40ab5a:	(bad)  
  40ab5b:	mov    edi,DWORD PTR [edx+0x324cb6d4]
  40ab61:	out    dx,eax
  40ab62:	sub    ebx,DWORD PTR [esi-0x56]
  40ab65:	and    BYTE PTR [ecx-0x3],0x6b
  40ab69:	mov    eax,0x1fd59094
  40ab6e:	pop    edi
  40ab6f:	lock cli 
  40ab71:	cld    
  40ab72:	jbe    0x40ab46
  40ab74:	retf   0xa38c
  40ab77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab78:	push   ebp
  40ab79:	das    
  40ab7a:	arpl   WORD PTR [edi],si
  40ab7c:	xchg   BYTE PTR [ecx-0x7245c750],bh
  40ab82:	jnp    0x40ab2d
  40ab84:	and    DWORD PTR [edi+0x78],esi
  40ab87:	(bad)  [ebx+0x6654f5cc]
  40ab8d:	sbb    DWORD PTR [ebp-0x2],esi
  40ab90:	stos   BYTE PTR es:[edi],al
  40ab91:	xlat   BYTE PTR ds:[ebx]
  40ab92:	or     al,0x75
  40ab94:	sbb    esi,DWORD PTR [ecx]
  40ab96:	out    0xa2,al
  40ab98:	je     0x40abf9
  40ab9a:	test   al,0xc7
  40ab9c:	clc    
  40ab9d:	(bad)  
  40ab9e:	jne    0x40ab5c
  40aba0:	pop    ecx
  40aba1:	add    ebx,esp
  40aba3:	mov    esp,0x9ef395c2
  40aba8:	cli    
  40aba9:	jnp    0x40ab48
  40abab:	mov    cl,0xfd
  40abad:	inc    edi
  40abae:	outs   dx,BYTE PTR ds:[esi]
  40abaf:	or     eax,0x8e7d5a1a
  40abb4:	or     al,0xbe
  40abb6:	and    DWORD PTR [esi-0x754b8864],edx
  40abbc:	pushf  
  40abbd:	sub    cl,BYTE PTR [ebx+0x15]
  40abc0:	adc    DWORD PTR [edx],edi
  40abc2:	pusha  
  40abc3:	push   ebx
  40abc4:	jge    0x40ab5e
  40abc6:	and    DWORD PTR [eax+edx*4-0x39],ebx
  40abca:	mov    dh,0x8d
  40abcc:	pushf  
  40abcd:	enter  0xed36,0x52
  40abd1:	jns    0x40ab69
  40abd3:	fnstenv [eax-0x115d60aa]
  40abd9:	cdq    
  40abda:	inc    eax
  40abdb:	push   cs
  40abdc:	ret    
  40abdd:	cli    
  40abde:	rcl    BYTE PTR [eax+0x70],0x67
  40abe2:	es xchg esi,eax
  40abe4:	retf   0xea4b
  40abe7:	(bad)  
  40abe9:	sub    dl,al
  40abeb:	call   0x8de0:0x7375701a
  40abf2:	xlat   BYTE PTR ds:[bx]
  40abf4:	rcr    BYTE PTR [edx+0x1d],1
  40abf7:	and    DWORD PTR [eax+0x109351d6],edi
  40abfd:	js     0x40abb1
  40abff:	in     al,0xeb
  40ac01:	js     0x40ac56
  40ac03:	xor    DWORD PTR [eax+0xaa052e3],ebx
  40ac09:	mov    dh,0x84
  40ac0b:	dec    ecx
  40ac0c:	xchg   ecx,eax
  40ac0d:	cwde   
  40ac0e:	shl    ebx,1
  40ac10:	mov    DWORD PTR [esi],0xb3ae88b2
  40ac16:	rol    DWORD PTR [esi+0x59],1
  40ac19:	mov    esp,0xf987eab1
  40ac1e:	mov    esi,0x5a317c0
  40ac23:	stc    
  40ac24:	xor    cl,0x4
  40ac27:	inc    esp
  40ac28:	fnstsw WORD PTR [ebx+0x4dfa1c1b]
  40ac2e:	shr    BYTE PTR [esi-0x75],1
  40ac31:	adc    ah,BYTE PTR [edx+0x5d]
  40ac34:	push   ds
  40ac35:	dec    ecx
  40ac36:	lahf   
  40ac37:	fistp  WORD PTR ss:[edi]
  40ac3a:	fist   DWORD PTR [eax]
  40ac3c:	(bad)  
  40ac3d:	sar    DWORD PTR [edx+ebp*4],cl
  40ac40:	cmp    bl,BYTE PTR [edi]
  40ac42:	xor    ebp,DWORD PTR [esi]
  40ac44:	push   edx
  40ac45:	sbb    BYTE PTR [esi+0x2c],bl
  40ac48:	(bad)  
  40ac49:	cmp    BYTE PTR [ecx],al
  40ac4b:	test   BYTE PTR [edi-0x55],al
  40ac4e:	jmp    0x945e:0x2547500c
  40ac55:	mov    cl,0x77
  40ac57:	xchg   esp,eax
  40ac58:	dec    edx
  40ac59:	push   ss
  40ac5a:	out    dx,al
  40ac5b:	xor    al,0x19
  40ac5d:	leave  
  40ac5e:	inc    edi
  40ac5f:	or     esp,DWORD PTR [edx+0x65]
  40ac62:	pop    es
  40ac63:	pop    ebx
  40ac64:	ret    0x705d
  40ac67:	mov    edx,0xfc55e97c
  40ac6c:	lock mov bh,0xbb
  40ac6f:	mov    cl,0x78
  40ac71:	dec    ebx
  40ac72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac73:	mov    ds:0x33e1be57,al
  40ac78:	int    0x66
  40ac7a:	mov    eax,DWORD PTR [ebx]
  40ac7c:	push   ebp
  40ac7d:	sar    DWORD PTR ds:0x408fda33,0x4c
  40ac84:	in     al,dx
  40ac85:	into   
  40ac86:	sbb    al,0xd6
  40ac88:	test   eax,0x21222241
  40ac8d:	mov    esi,0x8646ba5d
  40ac92:	(bad)  
  40ac93:	scas   eax,DWORD PTR es:[edi]
  40ac94:	aas    
  40ac95:	outs   dx,DWORD PTR ds:[esi]
  40ac96:	cmc    
  40ac97:	or     esp,DWORD PTR [edx+0x1f]
  40ac9a:	dec    edi
  40ac9b:	pop    ebp
  40ac9c:	ret    0xf0d
  40ac9f:	add    eax,0x647ac291
  40aca4:	test   al,0xb8
  40aca6:	mov    esp,0x23f076c8
  40acab:	int3   
  40acac:	add    ecx,ebx
  40acae:	dec    ecx
  40acaf:	ins    DWORD PTR es:[edi],dx
  40acb0:	mov    BYTE PTR [ebp-0xea10554],bh
  40acb6:	jle    0x40acb2
  40acb8:	inc    eax
  40acb9:	mov    ebp,ecx
  40acbb:	cmp    BYTE PTR [esi+0x49],al
  40acbe:	mov    dh,0x24
  40acc0:	pop    esi
  40acc1:	sub    ch,dl
  40acc3:	scas   al,BYTE PTR es:[edi]
  40acc4:	pop    ebx
  40acc5:	test   eax,0xca0b9d91
  40acca:	sbb    BYTE PTR [ebp-0x6e32e1d],0x9e
  40acd1:	cmp    al,0x73
  40acd3:	(bad)  
  40acd4:	rcl    BYTE PTR [edi-0x77],cl
  40acd7:	push   edi
  40acd8:	int    0x24
  40acda:	fs fcmovb st,st(0)
  40acdd:	pop    es
  40acde:	test   edx,esp
  40ace0:	clc    
  40ace1:	lock xchg ebp,eax
  40ace3:	mov    bl,0x35
  40ace5:	inc    eax
  40ace6:	xchg   BYTE PTR [esi-0x526d2908],cl
  40acec:	adc    eax,0x129acdc0
  40acf1:	ins    DWORD PTR es:[edi],dx
  40acf2:	ficom  WORD PTR [ebp+0x23]
  40acf5:	mov    al,0x89
  40acf7:	pushf  
  40acf8:	pop    ebp
  40acf9:	xchg   BYTE PTR [ebx-0x1f00a574],ch
  40acff:	ret    
  40ad00:	jle    0x40ad54
  40ad02:	sub    DWORD PTR [eax+0x26],0xffffffdd
  40ad06:	mov    dl,0x74
  40ad08:	sti    
  40ad09:	mov    edx,0x864a2ce5
  40ad0e:	cmp    dl,dh
  40ad10:	nop
  40ad11:	dec    eax
  40ad12:	dec    esi
  40ad13:	enter  0x2202,0xb6
  40ad17:	jne    0x40ace7
  40ad19:	cwde   
  40ad1a:	add    ah,BYTE PTR [edi+0x2a]
  40ad1d:	xchg   ecx,eax
  40ad1e:	push   ss
  40ad1f:	call   0x1160293f
  40ad24:	push   fs
  40ad26:	fld    DWORD PTR [ecx-0x13f32548]
  40ad2c:	push   ecx
  40ad2d:	dec    ebp
  40ad2e:	mov    eax,ds:0xe211130c
  40ad33:	rcr    BYTE PTR [esi-0x1c],1
  40ad36:	jge    0x40acdb
  40ad38:	cli    
  40ad39:	pop    es
  40ad3a:	push   ebp
  40ad3b:	repnz cld 
  40ad3d:	fidiv  WORD PTR [ecx-0x5e96be48]
  40ad43:	lahf   
  40ad44:	in     al,dx
  40ad45:	mov    cs,WORD PTR [ecx]
  40ad47:	xor    al,0x19
  40ad49:	sub    dh,BYTE PTR [bx]
  40ad4c:	xor    cl,BYTE PTR [edx+edx*4]
  40ad4f:	mov    ?,WORD PTR [ebx]
  40ad51:	call   FWORD PTR [eax-0x109af680]
  40ad57:	test   dl,ah
  40ad59:	fcomp  DWORD PTR [ebx+ebp*2+0x26]
  40ad5d:	sub    BYTE PTR [ecx-0x1dfc41bf],0x3f
  40ad64:	add    BYTE PTR [ecx+0x56],ch
  40ad67:	adc    ecx,DWORD PTR [edx-0x3d430be9]
  40ad6d:	jbe    0x40ad10
  40ad6f:	stos   BYTE PTR es:[edi],al
  40ad70:	arpl   bx,bp
  40ad72:	icebp  
  40ad73:	int    0xf6
  40ad75:	icebp  
  40ad76:	mov    ?,eax
  40ad78:	xor    DWORD PTR [eax-0x4cbe4835],edx
  40ad7e:	mov    bh,0x99
  40ad80:	gs ds mov cx,0x1bc8
  40ad86:	(bad)  
  40ad87:	outs   dx,BYTE PTR ds:[esi]
  40ad88:	adc    cl,BYTE PTR [ecx+ebx*2-0xe]
  40ad8c:	adc    dh,ch
  40ad8e:	jp     0x40ad78
  40ad90:	and    eax,esp
  40ad92:	xchg   esi,eax
  40ad93:	xor    ecx,DWORD PTR [ecx+edx*1]
  40ad96:	mov    eax,0xc6355d99
  40ad9b:	ins    BYTE PTR es:[edi],dx
  40ad9c:	test   BYTE PTR [ebx],0x4a
  40ad9f:	push   ebx
  40ada0:	add    eax,0x73d6107d
  40ada5:	fst    DWORD PTR [ebp+0x3ce453ae]
  40adab:	jne    0x40ada1
  40adad:	cli    
  40adae:	lods   eax,DWORD PTR ds:[esi]
  40adaf:	add    BYTE PTR [edi+0x77a7ccb5],ah
  40adb5:	add    al,0xd6
  40adb7:	ins    BYTE PTR es:[edi],dx
  40adb8:	out    0x95,al
  40adba:	adc    al,BYTE PTR ds:0x15db99ce
  40adc0:	js     0x40ada5
  40adc2:	pushf  
  40adc3:	aam    0x63
  40adc5:	xchg   ebp,eax
  40adc6:	jmp    0xbbfcdea5
  40adcb:	mov    ds:0x59cef793,eax
  40add0:	ins    DWORD PTR es:[edi],dx
  40add1:	aaa    
  40add2:	inc    ecx
  40add3:	cmp    DWORD PTR [edx+0x47],eax
  40add6:	dec    eax
  40add7:	mov    esi,0x2a3cda60
  40addc:	movd   DWORD PTR [eax],mm2
  40addf:	outs   dx,BYTE PTR ds:[esi]
  40ade0:	jae    0x40ad72
  40ade2:	addr16 sbb esp,edx
  40ade5:	mov    ecx,0xee81411f
  40adea:	addr16 inc ebp
  40adec:	cmp    DWORD PTR [ecx-0x3f],0xffffffeb
  40adf0:	lds    edi,FWORD PTR [eax]
  40adf2:	loopne 0x40ae01
  40adf4:	lock ftst 
  40adf7:	imul   eax,eax,0xbbcee1b3
  40adfd:	test   BYTE PTR [ebx-0xd],ch
  40ae00:	jne    0x40ae45
  40ae02:	push   ds
  40ae03:	jno    0x40ae84
  40ae05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae06:	inc    edx
  40ae07:	add    al,0x9f
  40ae09:	pusha  
  40ae0a:	push   ebp
  40ae0b:	xchg   esp,eax
  40ae0c:	je     0x40adca
  40ae0e:	popf   
  40ae0f:	fnstcw WORD PTR [esi+0x1cb0f141]
  40ae15:	test   DWORD PTR [eax+0x55],esp
  40ae18:	mov    ecx,0xfa4f96e9
  40ae1d:	lds    edi,FWORD PTR [ebp-0x45]
  40ae20:	sub    al,BYTE PTR [ebp-0x6f]
  40ae23:	repz call 0x9873:0xd3a2232d
  40ae2b:	cdq    
  40ae2c:	dec    eax
  40ae2d:	fcmove st,st(1)
  40ae2f:	adc    dl,BYTE PTR [edi-0x57ef50b4]
  40ae35:	push   0x35
  40ae37:	and    DWORD PTR [eax+0x4a],0xd0ad5c7
  40ae3e:	mov    edx,DWORD PTR [ecx-0x3892fddc]
  40ae44:	mov    esi,DWORD PTR [esi+0x512ead8e]
  40ae4a:	stc    
  40ae4b:	sbb    al,0x27
  40ae4d:	lods   eax,DWORD PTR ds:[esi]
  40ae4e:	int    0xcd
  40ae50:	lea    eax,[ecx+0x72106a7]
  40ae56:	jl     0x40ae45
  40ae58:	inc    edx
  40ae59:	lahf   
  40ae5a:	pop    ebx
  40ae5b:	mov    eax,0x6e726a6
  40ae60:	add    ah,bl
  40ae62:	mov    bh,0x3a
  40ae64:	je     0x40aea7
  40ae66:	ficom  DWORD PTR [eax]
  40ae68:	jge    0x40adf4
  40ae6a:	pop    esi
  40ae6b:	lods   eax,DWORD PTR ds:[esi]
  40ae6c:	les    eax,FWORD PTR [edi]
  40ae6e:	stos   BYTE PTR es:[edi],al
  40ae6f:	popa   
  40ae70:	xchg   BYTE PTR [edi],cl
  40ae72:	xchg   BYTE PTR [eax],bh
  40ae74:	lock jns 0x40ae0b
  40ae77:	sbb    ecx,DWORD PTR [ebx]
  40ae79:	mov    ah,0xc6
  40ae7b:	aaa    
  40ae7c:	jmp    0x1b36a739
  40ae81:	mov    edi,0x8485ca5f
  40ae86:	lock enter 0x814,0x55
  40ae8b:	cmp    eax,0x3c439295
  40ae90:	lock lds esp,FWORD PTR [eax]
  40ae93:	in     eax,0xb8
  40ae95:	call   0x29120d93
  40ae9a:	imul   eax,DWORD PTR [eax-0x80],0xe2d3768f
  40aea1:	jns    0x40aef6
  40aea3:	pop    esi
  40aea4:	mov    ecx,0x3e2d9f00
  40aea9:	mov    DWORD PTR [edx+ecx*4],eax
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    eax,DWORD PTR [ebx]
  40aee5:	push   ebx
  40aee6:	enter  0xac9b,0x8
  40aeea:	jnp    0x40af67
  40aeec:	(bad)  
  40aeed:	sahf   
  40aeee:	jnp    0x40af6b
  40aef0:	sbb    dl,BYTE PTR [ecx+eiz*1+0x34776c20]
  40aef7:	xchg   esi,eax
  40aef8:	add    bh,BYTE PTR [ecx-0x78]
  40aefb:	in     al,dx
  40aefc:	dec    esi
  40aefd:	jl     0x40aee8
  40aeff:	inc    ebx
  40af00:	push   ds
  40af01:	icebp  
  40af02:	adc    al,0x77
  40af04:	(bad)  
  40af05:	aaa    
  40af06:	popa   
  40af07:	sbb    ch,BYTE PTR [esp+eax*1-0x36d6f0a1]
  40af0e:	xchg   DWORD PTR [esi],esi
  40af10:	fistp  WORD PTR [ebx+ecx*1]
  40af13:	xchg   ebp,eax
  40af14:	mov    bh,0x5e
  40af16:	sar    DWORD PTR [ecx+0x3a73a35d],0x55
  40af1d:	mov    bh,BYTE PTR [esi-0x46]
  40af20:	inc    ecx
  40af21:	and    bh,BYTE PTR [edx]
  40af23:	jnp    0x40aec7
  40af25:	cwde   
  40af26:	pop    ebx
  40af27:	das    
  40af28:	daa    
  40af29:	in     al,dx
  40af2a:	test   DWORD PTR [eax],ecx
  40af2c:	sbb    dh,BYTE PTR [esi+0x78]
  40af2f:	jne    0x40af7b
  40af31:	or     eax,0x795f44c4
  40af36:	and    al,0x80
  40af38:	shl    BYTE PTR [ebp+0x6f],1
  40af3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af3c:	loop   0x40af81
  40af3e:	retf   
  40af3f:	jbe    0x40aee0
  40af41:	cmp    eax,0x1e38c367
  40af46:	test   al,0x7e
  40af48:	stc    
  40af49:	fs pop ebp
  40af4b:	cs xchg edx,eax
  40af4d:	mov    bl,0x19
  40af4f:	xlat   BYTE PTR ds:[ebx]
  40af50:	jb     0x40afab
  40af52:	jnp    0x40aed6
  40af54:	mov    al,0x7d
  40af56:	mov    ds:0x670b85b6,eax
  40af5b:	imul   ebp,DWORD PTR [ebx+ebp*8+0x538e582],0x27
  40af63:	arpl   WORD PTR [esi+ebx*1],cx
  40af66:	je     0x40af56
  40af68:	fwait
  40af69:	stc    
  40af6a:	popf   
  40af6b:	mov    ?,WORD PTR [eax+0x5051ddb5]
  40af71:	jl     0x40afe9
  40af73:	(bad)  [edi+0x1fd1cca3]
  40af79:	test   BYTE PTR [ebx-0x69],0xba
  40af7d:	ja     0x40af57
  40af7f:	push   es
  40af80:	ins    BYTE PTR es:[edi],dx
  40af81:	mov    DWORD PTR [edx-0x14a0c344],ebp
  40af87:	pop    edx
  40af88:	mov    ds:0xaae36f87,al
  40af8d:	and    ch,BYTE PTR [edi+0x3380b8f9]
  40af93:	fsubrp st(2),st
  40af95:	aaa    
  40af96:	imul   ebp,edx,0xffffff86
  40af99:	fst    QWORD PTR [eax+0x1b]
  40af9c:	lods   eax,DWORD PTR ds:[esi]
  40af9d:	sub    DWORD PTR [ebx-0xf2a88f2],eax
  40afa3:	cmc    
  40afa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa5:	xchg   ecx,eax
  40afa6:	push   cs
  40afa7:	push   eax
  40afa8:	dec    ebx
  40afa9:	in     eax,dx
  40afaa:	leave  
  40afab:	cld    
  40afac:	outs   dx,DWORD PTR ds:[esi]
  40afad:	js     0x40af44
  40afaf:	dec    esp
  40afb0:	mov    ds:0x58c35283,eax
  40afb5:	retf   0xe5b6
  40afb8:	adc    bl,BYTE PTR [ecx-0x3f]
  40afbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afbc:	mov    ebx,es
  40afbe:	test   al,0xbe
  40afc0:	(bad)  
  40afc1:	xor    ch,BYTE PTR [ebx-0x6071f042]
  40afc7:	xor    ecx,edi
  40afc9:	test   BYTE PTR [edx],dl
  40afcb:	aad    0x1f
  40afcd:	sub    DWORD PTR [ebx+0x1e],esi
  40afd0:	sub    esp,edi
  40afd2:	dec    esi
  40afd3:	std    
  40afd4:	sbb    eax,0x267d6908
  40afd9:	sar    BYTE PTR [eax],1
  40afdb:	(bad)  
  40afdc:	pusha  
  40afdd:	loop   0x40b01c
  40afdf:	push   ds
  40afe0:	pop    edx
  40afe1:	test   DWORD PTR [ebp-0x9716bd],ebx
  40afe7:	cmc    
  40afe8:	push   eax
  40afe9:	bound  esp,QWORD PTR [ecx]
  40afeb:	add    BYTE PTR [edi],cl
  40afed:	cmc    
  40afee:	xchg   DWORD PTR cs:[ebx-0xb],ebx
  40aff2:	dec    eax
  40aff3:	test   al,0x90
  40aff5:	ficom  DWORD PTR [edi]
  40aff7:	mov    BYTE PTR [ebx],bl
  40aff9:	(bad)  
  40affa:	jb     0x40b002
  40affc:	or     al,BYTE PTR [esi]
  40affe:	and    edi,DWORD PTR [edx]
  40b000:	popa   
  40b001:	pop    eax
  40b002:	jmp    0xe971a3bd
  40b007:	push   esp
  40b008:	jae    0x40b045
  40b00a:	xor    esi,DWORD PTR [esi-0x52d626c7]
  40b010:	rol    BYTE PTR [esi+0x6b],cl
  40b013:	jae    0x40afff
  40b015:	idiv   DWORD PTR [eax-0x1a197654]
  40b01b:	aaa    
  40b01c:	dec    edi
  40b01d:	pop    ds
  40b01e:	lea    edi,[ebx]
  40b020:	xor    al,0x63
  40b022:	and    ebp,DWORD PTR [edi]
  40b024:	icebp  
  40b025:	or     al,0x6e
  40b027:	or     DWORD PTR [eax+0x13],edx
  40b02a:	mov    bh,0x6e
  40b02c:	cli    
  40b02d:	inc    edi
  40b02e:	das    
  40b02f:	outs   dx,BYTE PTR ds:[esi]
  40b030:	mov    bl,0x67
  40b032:	pop    ebp
  40b033:	and    al,BYTE PTR [edx]
  40b035:	pop    esp
  40b036:	mov    ebx,0x3110d82
  40b03b:	pop    es
  40b03c:	push   es
  40b03d:	add    eax,0x6a3316c7
  40b042:	call   0x7259:0xc8d14a2
  40b049:	add    DWORD PTR [esi-0x12ee765f],esi
  40b04f:	cmc    
  40b050:	fisubr WORD PTR [esi-0x10b7a5bc]
  40b056:	jne    0x40b06a
  40b058:	xchg   ch,dh
  40b05a:	add    al,0x82
  40b05c:	jl     0x40b09e
  40b05e:	daa    
  40b05f:	inc    esi
  40b060:	pop    edi
  40b061:	push   eax
  40b062:	dec    ebp
  40b063:	xchg   edi,eax
  40b064:	in     eax,0x83
  40b066:	pop    eax
  40b067:	imul   edx,DWORD PTR [esi+0x5c],0x3e
  40b06b:	mov    ds:0x4fb75ec6,eax
  40b070:	aaa    
  40b071:	jmp    0x5e7aaf
  40b076:	pushf  
  40b077:	scas   eax,DWORD PTR es:[edi]
  40b078:	lods   al,BYTE PTR ds:[esi]
  40b079:	mov    esp,0x3e4a95da
  40b07e:	pop    edi
  40b07f:	mov    ds:0x53c97d93,eax
  40b084:	jl     0x40b062
  40b086:	mov    ecx,0x960ff87c
  40b08b:	mov    BYTE PTR [ebp+eiz*4+0x1c45e197],ah
  40b092:	pop    edi
  40b093:	je     0x40b020
  40b095:	mov    ebp,0xeee1406f
  40b09a:	in     al,dx
  40b09b:	xchg   esi,eax
  40b09c:	into   
  40b09d:	push   ss
  40b09e:	inc    esp
  40b09f:	repz and al,0x90
  40b0a2:	pushf  
  40b0a3:	sub    al,0xca
  40b0a5:	inc    edi
  40b0a6:	das    
  40b0a7:	push   ebx
  40b0a8:	fs pop es
  40b0aa:	add    eax,0xc646cac7
  40b0af:	push   edx
  40b0b0:	stos   DWORD PTR es:[edi],eax
  40b0b1:	cmp    edi,DWORD PTR [edi-0x77]
  40b0b4:	repz xor DWORD PTR [esi+0x23],esp
  40b0b8:	mov    BYTE PTR [esi],bl
  40b0ba:	test   eax,0x9b19769f
  40b0bf:	aaa    
  40b0c0:	push   edi
  40b0c1:	jle    0x40b0d0
  40b0c3:	(bad)  [eax]
  40b0c5:	ins    DWORD PTR es:[edi],dx
  40b0c6:	ins    DWORD PTR es:[edi],dx
  40b0c7:	inc    eax
  40b0c8:	inc    ebp
  40b0c9:	pop    ss
  40b0ca:	rcl    BYTE PTR [ebx+0x41],cl
  40b0cd:	xchg   BYTE PTR [ebx-0x37],dh
  40b0d0:	mov    dh,0x12
  40b0d2:	out    0x5,al
  40b0d4:	(bad)  
  40b0d5:	out    0x62,al
  40b0d7:	ret    0x4afc
  40b0da:	fst    DWORD PTR [ecx+0x32]
  40b0dd:	sar    DWORD PTR [ecx-0x2fb22832],1
  40b0e3:	add    BYTE PTR [ecx-0x76],dh
  40b0e6:	and    edx,0x3e
  40b0e9:	aad    0xb
  40b0eb:	mov    cl,BYTE PTR ds:0x26120fbd
  40b0f1:	ror    BYTE PTR [ebp-0xb],0x8a
  40b0f5:	adc    eax,0x81a2b2a3
  40b0fa:	and    bl,BYTE PTR [ebx-0x44]
  40b0fd:	add    al,0xd5
  40b0ff:	out    dx,eax
  40b100:	in     al,0x4e
  40b102:	(bad)  
  40b103:	and    BYTE PTR [edx-0x21da5703],ah
  40b109:	loop   0x40b09b
  40b10b:	dec    ecx
  40b10c:	out    dx,eax
  40b10d:	pop    ebp
  40b10e:	outs   dx,DWORD PTR ds:[esi]
  40b10f:	sbb    bh,BYTE PTR [eax]
  40b111:	mov    bl,0xcd
  40b113:	int3   
  40b114:	jl     0x40b18d
  40b116:	sub    bl,BYTE PTR [edx+0x30354847]
  40b11c:	mov    ecx,0x7ac5f547
  40b121:	inc    eax
  40b122:	out    dx,al
  40b123:	(bad)  [eax-0x7b]
  40b126:	push   esi
  40b127:	xchg   esi,eax
  40b128:	cwde   
  40b129:	jmp    0x61bf:0x38f1e276
  40b130:	xchg   ecx,eax
  40b131:	inc    edi
  40b132:	fwait
  40b133:	pop    ecx
  40b134:	bound  ebp,QWORD PTR ds:0x74a54478
  40b13a:	pop    esp
  40b13b:	in     eax,dx
  40b13c:	or     bh,BYTE PTR [ebp-0x74]
  40b13f:	cmp    ebp,DWORD PTR [edx-0x6c817c78]
  40b145:	xchg   edi,eax
  40b146:	inc    edi
  40b147:	dec    ecx
  40b148:	or     DWORD PTR [ebx-0x55a33462],0xffffffe4
  40b14f:	mov    al,BYTE PTR [edx+0x63]
  40b152:	mov    ebp,0x7727779
  40b157:	jg     0x40b0f2
  40b159:	pop    ds
  40b15a:	pop    edi
  40b15b:	add    DWORD PTR [edi],0xdeb337e
  40b161:	call   0x6bf4ac4f
  40b166:	pop    ecx
  40b167:	fistp  DWORD PTR [edi-0x7e9e0f59]
  40b16d:	add    eax,0x914a6d8b
  40b172:	inc    ebx
  40b173:	retf   0x93bd
  40b176:	mov    ah,0x1d
  40b178:	retf   0x26ac
  40b17b:	cmp    al,BYTE PTR ds:0xf66ff78f
  40b181:	dec    esp
  40b182:	mov    dh,BYTE PTR [edx+0x6b99d2ad]
  40b188:	mov    bh,0xd3
  40b18a:	(bad)  
  40b18b:	pop    eax
  40b18c:	xor    DWORD PTR [edi-0x2b75f794],esp
  40b192:	leave  
  40b193:	push   cs
  40b194:	lods   eax,DWORD PTR ds:[esi]
  40b195:	cwde   
  40b196:	in     eax,0x50
  40b198:	lahf   
  40b199:	mov    ah,0xb0
  40b19b:	jno    0x40b170
  40b19d:	pop    ds
  40b19e:	xchg   ecx,eax
  40b19f:	int    0xee
  40b1a1:	jne    0x40b1a8
  40b1a3:	or     esp,DWORD PTR [edx+0x61e54f19]
  40b1a9:	ficomp DWORD PTR [edx]
  40b1ab:	popf   
  40b1ac:	xlat   BYTE PTR ds:[ebx]
  40b1ad:	xlat   BYTE PTR ds:[ebx]
  40b1ae:	into   
  40b1af:	xor    ah,BYTE PTR [edi]
  40b1b1:	aaa    
  40b1b2:	dec    ebp
  40b1b3:	adc    eax,0x9f4995d2
  40b1b8:	jno    0x40b16a
  40b1ba:	retf   0xfd99
  40b1bd:	cmp    dh,cl
  40b1bf:	mov    dh,0xcc
  40b1c1:	xchg   ecx,eax
  40b1c2:	push   ss
  40b1c3:	mov    eax,0xf53d0f0d
  40b1c8:	es inc esi
  40b1ca:	aaa    
  40b1cb:	cmp    eax,0xeb6a6a6f
  40b1d0:	call   0x1109:0x4ec33fe
  40b1d7:	pop    eax
  40b1d8:	cwde   
  40b1d9:	add    DWORD PTR [eax+0xd],edx
  40b1dc:	mov    ebx,0x6f723f0f
  40b1e1:	test   al,0x95
  40b1e3:	adc    eax,DWORD PTR [edi-0x3]
  40b1e6:	xchg   ebp,eax
  40b1e7:	sbb    BYTE PTR [esi],0xc3
  40b1ea:	pop    edx
  40b1eb:	mov    eax,ds:0xdfc28b75
  40b1f0:	mov    bl,0x8d
  40b1f2:	jmp    0x40b1d5
  40b1f4:	into   
  40b1f5:	push   0x5a
  40b1f7:	pop    eax
  40b1f8:	sti    
  40b1f9:	inc    ecx
  40b1fa:	inc    DWORD PTR [eax-0x585f12f5]
  40b200:	jb     0x40b280
  40b202:	outs   dx,BYTE PTR ds:[esi]
  40b203:	jbe    0x40b1ca
  40b205:	sbb    ch,BYTE PTR [eax+0x6f4bb064]
  40b20b:	fcmovnb st,st(6)
  40b20d:	test   BYTE PTR [eax-0x1f53f46f],0xf6
  40b214:	adc    DWORD PTR [eax],esi
  40b216:	fld    st(6)
  40b218:	out    0x61,eax
  40b21a:	int3   
  40b21b:	jnp    0x40b1c1
  40b21d:	ins    DWORD PTR es:[di],dx
  40b21f:	pop    esp
  40b220:	es (bad) 
  40b222:	out    dx,eax
  40b223:	inc    esi
  40b224:	out    dx,al
  40b225:	js     0x40b1e1
  40b227:	test   al,0x3e
  40b229:	out    dx,al
  40b22a:	xchg   ebx,eax
  40b22b:	push   esi
  40b22c:	xchg   edi,eax
  40b22d:	jmp    0x7db4308f
  40b232:	in     eax,dx
  40b233:	cs mov dl,0xb6
  40b236:	adc    al,0x58
  40b238:	fs inc eax
  40b23a:	sub    edx,eax
  40b23c:	mov    WORD PTR [eax+0x59a52c1c],cs
  40b242:	mov    al,ds:0xa6eeb0e1
  40b247:	sub    ch,BYTE PTR [ebp+0x79]
  40b24a:	idiv   dl
  40b24c:	xor    BYTE PTR [edi+esi*1+0x1b079742],bl
  40b253:	je     0x40b272
  40b255:	loopne 0x40b1fc
  40b257:	clc    
  40b258:	sub    ch,BYTE PTR [edx]
  40b25a:	jp     0x40b1f5
  40b25c:	popf   
  40b25d:	rol    DWORD PTR [ebp+0x1267dd60],cl
  40b263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b264:	xchg   esi,eax
  40b265:	nop
  40b266:	or     eax,0xdeb9ace7
  40b26b:	shr    DWORD PTR [edi+0x34],0xda
  40b26f:	(bad)  
  40b270:	icebp  
  40b271:	xor    BYTE PTR [ebx-0x38ad7271],dh
  40b277:	and    eax,0xaf816d10
  40b27c:	cdq    
  40b27d:	pushf  
  40b27e:	fcom   st(3)
  40b280:	out    dx,al
  40b281:	add    esp,DWORD PTR [esi+edx*1-0x1aecb9d7]
  40b288:	rol    BYTE PTR [eax],0x61
  40b28b:	xchg   BYTE PTR [eax],ah
  40b28d:	fistp  WORD PTR [eax+0x2f50a359]
  40b293:	popf   
  40b294:	ret    0x2cc9
  40b297:	xchg   ebp,eax
  40b298:	jbe    0x40b262
  40b29a:	and    DWORD PTR ds:0xc8056518,edi
  40b2a0:	div    BYTE PTR [edx-0x2fe92f05]
  40b2a6:	xor    DWORD PTR [edi-0x15],edx
  40b2a9:	arpl   dx,di
  40b2ab:	(bad)  
  40b2ac:	cwde   
  40b2ad:	test   DWORD PTR [edi-0x2fecef53],eax
  40b2b3:	push   esi
  40b2b4:	dec    esi
  40b2b5:	or     BYTE PTR [edx+0x5b777c20],bh
  40b2bb:	(bad)  
  40b2bc:	fcmovbe st,st(3)
  40b2be:	aam    0x89
  40b2c0:	jmp    0x28530333
  40b2c5:	xor    al,0x26
  40b2c7:	sub    ecx,DWORD PTR [ecx+0x22d3c5de]
  40b2cd:	adc    dl,BYTE PTR ds:0x8aace8c2
  40b2d3:	addr16 adc ah,cl
  40b2d6:	push   0xffffffb2
  40b2d8:	fdiv   st,st(7)
  40b2da:	out    0xf2,eax
  40b2dc:	push   cs
  40b2dd:	mov    eax,ds:0xc55cdcf9
  40b2e2:	mov    edx,0x762f59b1
  40b2e7:	sbb    DWORD PTR [edi+0x187ac962],0xa250292d
  40b2f1:	aam    0xfe
  40b2f3:	dec    ecx
  40b2f4:	test   al,ch
  40b2f6:	dec    esp
  40b2f7:	ror    al,cl
  40b2f9:	push   cs
  40b2fa:	lock mov ch,0x42
  40b2fd:	cwde   
  40b2fe:	leave  
  40b2ff:	mov    bh,0xd
  40b301:	fist   DWORD PTR [eax]
  40b303:	inc    edi
  40b304:	push   cs
  40b305:	ja     0x40b375
  40b307:	jo     0x40b2c0
  40b309:	and    al,0x84
  40b30b:	dec    ebp
  40b30c:	(bad)  
  40b30d:	mov    edi,0xb5f628ff
  40b312:	fs fwait
  40b314:	jb     0x40b2ed
  40b316:	stc    
  40b317:	xchg   edx,eax
  40b318:	pop    ebx
  40b319:	xchg   edx,eax
  40b31a:	(bad)  
  40b31b:	xchg   edx,eax
  40b31c:	sub    dl,BYTE PTR [esi+0x5127e0a]
  40b322:	mov    eax,DWORD PTR [ecx-0x448dc29d]
  40b328:	and    edi,ebp
  40b32a:	test   DWORD PTR [ebx+edi*2],edi
  40b32d:	mov    edi,0x7c5c65a
  40b332:	xor    bl,bh
  40b334:	mov    esp,0xae198cb9
  40b339:	xlat   BYTE PTR fs:[ebx]
  40b33b:	enter  0xec7b,0xe2
  40b33f:	cld    
  40b340:	ins    DWORD PTR es:[edi],dx
  40b341:	jbe    0x40b2c7
  40b343:	in     eax,0xf1
  40b345:	xchg   DWORD PTR [edi+0x7aa79994],edx
  40b34b:	jecxz  0x40b2f7
  40b34d:	jne    0x40b310
  40b34f:	ins    BYTE PTR es:[edi],dx
  40b350:	ds mov ebx,0xfac7436f
  40b356:	daa    
  40b357:	and    al,0x64
  40b359:	stc    
  40b35a:	add    dh,BYTE PTR [edi+0x21]
  40b35d:	popf   
  40b35e:	mov    ch,0x28
  40b360:	fs int3 
  40b362:	hlt    
  40b363:	fadd   DWORD PTR [esi]
  40b365:	and    DWORD PTR [eax],edx
  40b367:	mov    ss,WORD PTR [edi]
  40b369:	adc    dh,BYTE PTR es:[ecx-0x3b]
  40b36d:	push   edi
  40b36e:	sbb    al,0xed
  40b370:	jns    0x40b3cb
  40b372:	pushf  
  40b373:	inc    esi
  40b374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b375:	dec    ecx
  40b376:	push   edi
  40b377:	int3   
  40b378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b379:	push   es
  40b37a:	shr    ebx,cl
  40b37c:	int3   
  40b37d:	test   ah,ah
  40b37f:	pop    esp
  40b380:	outs   dx,BYTE PTR ds:[esi]
  40b381:	rcl    BYTE PTR [eax],cl
  40b383:	adc    dh,BYTE PTR [esi-0x11e17d52]
  40b389:	xchg   eax,esi
  40b38b:	jmp    0xbf41d490
  40b390:	loop   0x40b394
  40b392:	aam    0xaf
  40b394:	dec    edx
  40b395:	test   al,0x4b
  40b397:	lock hlt 
  40b399:	sti    
  40b39a:	pop    esp
  40b39b:	popf   
  40b39c:	clc    
  40b39d:	fsubr  st,st(2)
  40b39f:	clc    
  40b3a0:	dec    ecx
  40b3a1:	mov    edi,0x7e9540b4
  40b3a6:	sbb    eax,0xeb8baf9f
  40b3ab:	(bad)  
  40b3ac:	mov    esi,edi
  40b3ae:	mov    DWORD PTR [eax],ebp
  40b3b0:	icebp  
  40b3b1:	(bad)  
  40b3b2:	arpl   WORD PTR [ebx-0xf],dx
  40b3b5:	sbb    edi,0x6ed59d62
  40b3bb:	out    dx,al
  40b3bc:	sbb    esi,edx
  40b3be:	jns    0x40b433
  40b3c0:	mov    al,dh
  40b3c2:	mov    bl,0x95
  40b3c4:	sti    
  40b3c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c6:	ss pop esp
  40b3c8:	(bad)  
  40b3c9:	mov    ah,0x4a
  40b3cb:	(bad)
  40b3cf:	push   ecx
  40b3d0:	idiv   DWORD PTR [ecx+0x39]
  40b3d3:	sbb    dl,bl
  40b3d5:	add    BYTE PTR [ecx-0xa17e6c3],0x1c
  40b3dc:	bound  edi,QWORD PTR [edx-0x58c6d573]
  40b3e2:	in     eax,0x52
  40b3e4:	ss fs leave 
  40b3e7:	inc    ebp
  40b3e8:	rol    DWORD PTR [eax-0x3b9f7d7],cl
  40b3ee:	call   0xe4a2acd7
  40b3f3:	dec    esi
  40b3f4:	into   
  40b3f5:	mov    bh,0xf2
  40b3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f8:	retf   
  40b3f9:	jp     0x40b399
  40b3fb:	inc    ebp
  40b3fc:	jae    0x40b450
  40b3fe:	add    eax,0xd5a6f8de
  40b403:	into   
  40b404:	arpl   bp,bx
  40b406:	test   DWORD PTR [ecx-0x3b7bb67c],edi
  40b40c:	push   ecx
  40b40d:	(bad)  
  40b40e:	int3   
  40b40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b410:	es mov esi,0x8d850930
  40b416:	rcr    BYTE PTR [ebp-0x3e3d1506],cl
  40b41c:	rcl    BYTE PTR [eax-0x73cc4660],1
  40b422:	out    dx,eax
  40b423:	add    BYTE PTR [esi],ah
  40b425:	xor    al,dh
  40b427:	mov    ds:0xb3185e54,eax
  40b42c:	aas    
  40b42d:	enter  0x42a6,0xc
  40b431:	push   es
  40b432:	xchg   ebp,eax
  40b433:	pop    es
  40b434:	jp     0x40b3dc
  40b436:	push   eax
  40b437:	dec    ecx
  40b438:	rcl    BYTE PTR [eax-0x4f4576d1],1
  40b43e:	mov    ebp,0xbafaf89a
  40b443:	imul   ecx,DWORD PTR [esp+esi*8-0x25],0x79f52af5
  40b44b:	fs sub cl,al
  40b44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44f:	xchg   esp,eax
  40b450:	xor    ebx,0x79
  40b453:	gs popa 
  40b455:	push   ebx
  40b456:	jmp    0x40b46b
  40b458:	(bad)  
  40b459:	jae    0x40b443
  40b45b:	enter  0x9a51,0xe1
  40b45f:	and    BYTE PTR [ebx-0x603bee50],0xee
  40b466:	push   ebx
  40b467:	aaa    
  40b468:	mov    ch,0x3a
  40b46a:	in     al,0xba
  40b46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b46d:	xor    eax,0x70ab76be
  40b472:	sti    
  40b473:	stc    
  40b474:	pop    ds
  40b475:	int3   
  40b476:	xlat   BYTE PTR ds:[ebx]
  40b477:	xor    esp,0x3a
  40b47a:	inc    edx
  40b47b:	mov    ch,BYTE PTR ds:0xd3716467
  40b481:	push   esi
  40b482:	aas    
  40b483:	adc    al,ch
  40b485:	mov    dl,0x8b
  40b487:	xlat   BYTE PTR ds:[ebx]
  40b488:	or     al,0xa7
  40b48a:	mov    edi,0x337d285d
  40b48f:	ret    
  40b490:	imul   edx,DWORD PTR [edi+0x3f],0x8a5723
  40b497:	jmp    0x40b42f
  40b499:	dec    edi
  40b49a:	push   ecx
  40b49b:	fldenv [ecx+0x45a449d]
  40b4a1:	sbb    BYTE PTR [edx+esi*1+0x47bbadfb],bl
  40b4a8:	jno    0x40b50f
  40b4aa:	mov    bh,0x12
  40b4ac:	sub    ah,BYTE PTR [ebx]
  40b4ae:	dec    esi
  40b4af:	fwait
  40b4b0:	xchg   esp,eax
  40b4b1:	scas   eax,DWORD PTR es:[edi]
  40b4b2:	sub    al,BYTE PTR [ecx-0x5daa9e04]
  40b4b8:	mov    esi,0x5260bfd8
  40b4bd:	sbb    DWORD PTR [esi-0x52bad617],edi
  40b4c3:	adc    eax,0xe4b246b2
  40b4c8:	adc    al,0x9
  40b4ca:	jle    0x40b4a2
  40b4cc:	push   esi
  40b4cd:	scas   al,BYTE PTR es:[edi]
  40b4ce:	fild   QWORD PTR [esi+0x6]
  40b4d1:	movq   mm1,mm4
  40b4d4:	stos   DWORD PTR es:[edi],eax
  40b4d5:	fdiv   QWORD PTR [ecx-0x633505ea]
  40b4db:	stc    
  40b4dc:	cmp    BYTE PTR [esi+0x4b1ecfbe],ah
  40b4e2:	fistp  QWORD PTR [edi+ecx*8]
  40b4e5:	aas    
  40b4e6:	ins    BYTE PTR es:[edi],dx
  40b4e7:	sbb    bl,cl
  40b4e9:	push   es
  40b4ea:	rcr    BYTE PTR [ebp+0x51],cl
  40b4ed:	aas    
  40b4ee:	pop    edx
  40b4ef:	loopne 0x40b52a
  40b4f1:	mov    bh,0xfc
  40b4f3:	mov    dl,0x1a
  40b4f5:	inc    ebp
  40b4f6:	call   0x9d16bd2d
  40b4fb:	dec    edx
  40b4fc:	shl    DWORD PTR [ebp+ebp*2+0x71],cl
  40b500:	shl    esp,0xd3
  40b503:	pop    es
  40b504:	adc    esi,DWORD PTR [ebp+0x2c]
  40b507:	and    DWORD PTR [ecx+0x79cb49fa],0xac07322
  40b511:	sub    esp,DWORD PTR [edi+0x27]
  40b514:	xchg   edx,eax
  40b515:	xor    dh,BYTE PTR [edx-0x72b358b]
  40b51b:	jns    0x40b589
  40b51d:	sbb    cl,BYTE PTR [edx-0x7fda352b]
  40b523:	int    0x6c
  40b525:	push   edx
  40b526:	add    eax,0x97915d02
  40b52b:	(bad)  
  40b52c:	ficomp DWORD PTR [edx-0x6b]
  40b52f:	scas   eax,DWORD PTR es:[edi]
  40b530:	sub    esp,edx
  40b532:	jns    0x40b52c
  40b534:	or     edi,DWORD PTR [edx]
  40b536:	xchg   edi,eax
  40b537:	je     0x40b584
  40b539:	jo     0x40b560
  40b53b:	jl     0x40b544
  40b53d:	rcl    DWORD PTR [esi],0x37
  40b540:	stos   DWORD PTR es:[edi],eax
  40b541:	stc    
  40b542:	sbb    cl,dh
  40b544:	jb     0x40b599
  40b546:	(bad)  ds:[edi+0x4ae50550]
  40b54d:	pop    eax
  40b54e:	mov    bl,0xa4
  40b550:	pop    ecx
  40b551:	or     al,0x74
  40b553:	sbb    esp,ebx
  40b555:	aas    
  40b556:	jecxz  0x40b527
  40b558:	retf   
  40b559:	inc    edi
  40b55a:	pop    edx
  40b55b:	mov    ebx,0xbcd06cba
  40b560:	or     bh,BYTE PTR [esi+0x2]
  40b563:	stos   BYTE PTR es:[edi],al
  40b564:	inc    ebx
  40b565:	or     ecx,ebx
  40b567:	(bad)  
  40b568:	bound  esp,QWORD PTR [ebp-0x43b4bcf8]
  40b56e:	leave  
  40b56f:	jl     0x40b547
  40b571:	jo     0x40b592
  40b573:	pushf  
  40b574:	jmp    0x40b538
  40b576:	and    al,0x35
  40b578:	mov    bh,BYTE PTR [ebx-0x6d]
  40b57b:	add    al,0x7d
  40b57d:	inc    esi
  40b57e:	addr16 sub ebp,esp
  40b581:	mov    dl,BYTE PTR [ebp-0x5f7be71f]
  40b587:	inc    eax
  40b588:	clc    
  40b589:	jne    0xec0ac64f
  40b58f:	ins    BYTE PTR es:[edi],dx
  40b590:	or     BYTE PTR [eax+0x7d],bl
  40b593:	aad    0xf5
  40b595:	add    al,BYTE PTR [ebp+0x1edceb0]
  40b59b:	in     al,0x8e
  40b59d:	cwde   
  40b59e:	imul   eax,edi,0x5d4fd378
  40b5a4:	xor    BYTE PTR [edx],0xb2
  40b5a7:	push   ss
  40b5a8:	jmp    0x858c:0x414de532
  40b5af:	cmp    bl,BYTE PTR [esi-0x10]
  40b5b2:	arpl   WORD PTR [esi],bx
  40b5b4:	xor    al,0x8
  40b5b6:	cmp    eax,esi
  40b5b8:	sti    
  40b5b9:	jle    0x40b5af
  40b5bb:	outs   dx,DWORD PTR ds:[esi]
  40b5bc:	mov    dl,0x90
  40b5be:	retf   
  40b5bf:	xchg   ecx,eax
  40b5c0:	popa   
  40b5c1:	fidivr DWORD PTR [edx]
  40b5c3:	sbb    DWORD PTR [ecx+0x78d3313c],eax
  40b5c9:	leave  
  40b5ca:	or     al,0x5d
  40b5cc:	dec    ebx
  40b5cd:	les    eax,FWORD PTR [edx+0x50]
  40b5d0:	repz cmc 
  40b5d2:	sub    DWORD PTR [ecx],ebx
  40b5d4:	stos   BYTE PTR es:[edi],al
  40b5d5:	test   DWORD PTR [ebx+eax*2],edx
  40b5d8:	mov    ebp,0xc563715
  40b5dd:	push   esp
  40b5de:	int3   
  40b5df:	jg     0x40b60b
  40b5e1:	pop    eax
  40b5e2:	cli    
  40b5e3:	fst    QWORD PTR [esi+0x7e]
  40b5e6:	push   0x7825a093
  40b5eb:	inc    edx
  40b5ec:	lock cli 
  40b5ee:	mul    edx
  40b5f0:	or     BYTE PTR [eax+ebp*1],bh
  40b5f3:	test   dh,ah
  40b5f5:	in     eax,dx
  40b5f6:	sbb    dh,dl
  40b5f8:	popa   
  40b5f9:	jbe    0x40b5da
  40b5fb:	mov    ch,0x7e
  40b5fd:	lds    ebx,FWORD PTR [ecx+0x5b]
  40b600:	jp     0x40b586
  40b602:	adc    esi,DWORD PTR [ebp+0x48]
  40b605:	ss out dx,al
  40b607:	jmp    0x603:0xcd4c460
  40b60e:	sbb    ebx,esp
  40b610:	inc    ebx
  40b611:	sub    BYTE PTR [edi-0x1],dh
  40b614:	call   0xa417:0x6e0280d8
  40b61b:	into   
  40b61c:	lahf   
  40b61d:	inc    edx
  40b61e:	call   0xaed8:0x7daacde5
  40b625:	in     eax,0x4c
  40b627:	ja     0x40b603
  40b629:	mov    BYTE PTR [esi-0x29452edc],cl
  40b62f:	xchg   ebx,eax
  40b630:	jb     0x40b5fa
  40b632:	cli    
  40b633:	jge    0x40b660
  40b635:	(bad)  
  40b636:	jp     0x40b67c
  40b638:	jp     0x40b64c
  40b63a:	or     eax,0xc59c3184
  40b63f:	sahf   
  40b640:	(bad)  
  40b641:	xchg   edi,eax
  40b642:	xor    al,0x1b
  40b644:	(bad)  
  40b645:	cmp    eax,0xae7e90b1
  40b64a:	arpl   WORD PTR [edx],sp
  40b64c:	ret    
  40b64d:	stos   DWORD PTR es:[edi],eax
  40b64e:	mov    bh,0x4d
  40b650:	lock push eax
  40b652:	fs xor esp,DWORD PTR cs:[edx-0x32c07b89]
  40b65a:	aam    0x13
  40b65c:	std    
  40b65d:	push   ebx
  40b65e:	fbld   TBYTE PTR [ebx+0x12c0f00a]
  40b664:	mov    esi,0x46a58ea3
  40b669:	rol    DWORD PTR [edi+0x72ec0dff],1
  40b66f:	pushf  
  40b670:	fwait
  40b671:	inc    edx
  40b672:	icebp  
  40b673:	ins    BYTE PTR es:[edi],dx
  40b674:	xchg   esp,eax
  40b675:	adc    edi,DWORD PTR [ecx-0x69]
  40b678:	sub    ch,BYTE PTR [edx]
  40b67a:	push   ebx
  40b67b:	sbb    bl,al
  40b67d:	jo     0x40b6d1
  40b67f:	or     BYTE PTR [edi+0xbdc76c6],0x1a
  40b686:	retf   0x469e
  40b689:	xchg   esp,eax
  40b68a:	test   BYTE PTR [eax+0xa353fba],bh
  40b690:	jmp    DWORD PTR [esi*2-0x2509923a]
  40b697:	nop
  40b698:	shr    BYTE PTR [esi-0x3c],cl
  40b69b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b69c:	cmc    
  40b69d:	out    dx,al
  40b69e:	mov    esi,0x1b204f4c
  40b6a3:	xchg   esi,eax
  40b6a4:	jo     0x40b713
  40b6a6:	mov    dl,0x9f
  40b6a8:	nop
  40b6a9:	mov    esp,DWORD PTR [ecx+0x3b7fe98e]
  40b6af:	mov    dh,0xcb
  40b6b1:	mov    ch,0xd6
  40b6b3:	xchg   edx,eax
  40b6b4:	sbb    al,0xee
  40b6b6:	or     dh,bl
  40b6b8:	mov    eax,ds:0x60fe4fea
  40b6bd:	retf   0x908
  40b6c0:	mov    ebp,0x60c19cc9
  40b6c5:	sbb    BYTE PTR [edi-0x4b5efda7],dh
  40b6cb:	sbb    al,0x5f
  40b6cd:	push   esp
  40b6ce:	iret   
  40b6cf:	sbb    al,0x39
  40b6d1:	fs push edx
  40b6d3:	sbb    ch,al
  40b6d5:	test   DWORD PTR [edi-0x27],ebp
  40b6d8:	das    
  40b6d9:	xor    eax,0xb3f9e07e
  40b6de:	in     al,0x86
  40b6e0:	add    eax,0xf5ceb265
  40b6e5:	xlat   BYTE PTR ds:[ebx]
  40b6e6:	xchg   esi,eax
  40b6e7:	jmp    0xf7866c5e
  40b6ec:	or     edi,ebx
  40b6ee:	js     0x40b726
  40b6f0:	shl    DWORD PTR [ebp+0x4e],cl
  40b6f3:	sbb    esp,DWORD PTR [ebx]
  40b6f5:	les    edi,FWORD PTR [ecx-0x5d]
  40b6f8:	lods   eax,DWORD PTR ds:[esi]
  40b6f9:	out    dx,al
  40b6fa:	fwait
  40b6fb:	xor    ch,dl
  40b6fd:	xchg   BYTE PTR [eax],al
  40b6ff:	enter  0x5bdf,0x3b
  40b703:	sbb    ch,dh
  40b705:	add    eax,0xe4b2c485
  40b70a:	aam    0x4b
  40b70c:	jg     0x40b737
  40b70e:	mov    bh,0xad
  40b710:	aas    
  40b711:	add    dh,cl
  40b713:	ror    al,0x1b
  40b716:	lods   al,BYTE PTR ds:[esi]
  40b718:	mov    dl,0xbc
  40b71a:	dec    edi
  40b71b:	hlt    
  40b71c:	nop
  40b71d:	xchg   ebx,eax
  40b71e:	rol    ebx,0xe5
  40b721:	cmp    al,0x69
  40b723:	test   BYTE PTR [edx-0x10],dl
  40b726:	daa    
  40b727:	fld    st(5)
  40b729:	fdivrp st(7),st
  40b72b:	and    al,0x94
  40b72d:	out    dx,eax
  40b72e:	sbb    bl,al
  40b730:	xchg   ebp,eax
  40b731:	sub    ah,ah
  40b733:	cwde   
  40b734:	adc    esp,DWORD PTR [edi+0x3d]
  40b737:	mov    ah,0x5c
  40b739:	jbe    0x40b7ae
  40b73b:	test   eax,0x6d691430
  40b740:	jbe    0x40b6eb
  40b742:	test   DWORD PTR [edx+edx*4+0x75],ecx
  40b746:	into   
  40b747:	hlt    
  40b748:	add    ah,dh
  40b74a:	icebp  
  40b74b:	repnz mov ecx,0x53cf1b97
  40b751:	adc    eax,0x6a924844
  40b756:	mov    eax,0x56b5dd22
  40b75b:	jecxz  0x40b7cd
  40b75d:	and    eax,0x5337da1b
  40b762:	xor    DWORD PTR ds:0x44f43375,ebx
  40b768:	push   ecx
  40b769:	(bad)  
  40b76a:	xchg   esi,eax
  40b76b:	or     bl,0xa6
  40b76e:	test   al,0x8d
  40b770:	leave  
  40b771:	cdq    
  40b772:	(bad)  
  40b773:	mov    edx,0x94698d10
  40b778:	and    esp,DWORD PTR [ebx+edi*1-0x3bbff104]
  40b77f:	(bad)  
  40b780:	mul    DWORD PTR [ebp+0x231486b8]
  40b786:	hlt    
  40b787:	in     al,dx
  40b788:	js     0x40b731
  40b78a:	imul   cl
  40b78c:	bound  edx,QWORD PTR [ebx-0x6e19d7a6]
  40b792:	fcomp  st(0)
  40b794:	jae    0x40b730
  40b796:	or     ah,BYTE PTR [ebp-0x78c9310f]
  40b79c:	out    0x79,al
  40b79e:	mov    esi,0x7e0902d0
  40b7a3:	xchg   esp,eax
  40b7a4:	jb     0x40b7fd
  40b7a6:	test   bh,bl
  40b7a8:	mov    esp,0x2767946c
  40b7ad:	mov    cl,0x76
  40b7af:	dec    esp
  40b7b0:	(bad)  
  40b7b1:	cmp    eax,0x1ea6a8a3
  40b7b6:	sahf   
  40b7b7:	out    dx,eax
  40b7b8:	add    eax,0xfbec4cdf
  40b7bd:	xor    BYTE PTR [eax-0x30],0x5a
  40b7c1:	cmc    
  40b7c2:	outs   dx,BYTE PTR ds:[esi]
  40b7c3:	sbb    eax,0x19008aee
  40b7c8:	not    DWORD PTR [ecx+0x3a61bf9]
  40b7ce:	call   0xcbfa:0xfa284427
  40b7d5:	fistp  WORD PTR [edi+ebp*1+0x34]
  40b7d9:	adc    bh,BYTE PTR [edi]
  40b7db:	add    dl,ah
  40b7dd:	data16 add al,0xa
  40b7e0:	xchg   edx,eax
  40b7e1:	or     eax,0x1f001e08
  40b7e6:	call   0xd8221f3
  40b7eb:	call   0x4acc1688
  40b7f0:	gs pop eax
  40b7f2:	and    DWORD PTR [edx-0x3e],ebx
  40b7f5:	push   edi
  40b7f6:	add    eax,0x5106efe2
  40b7fb:	test   DWORD PTR [eax],edi
  40b7fd:	(bad)  
  40b7fe:	mov    es,WORD PTR ds:[ecx-0x727e275a]
  40b805:	sub    al,0x3e
  40b807:	test   dl,ch
  40b809:	cmp    al,0xda
  40b80b:	mov    al,ds:0xaf65cfe3
  40b810:	dec    DWORD PTR [ebp-0x47]
  40b813:	shr    DWORD PTR [eax+esi*8],0x47
  40b817:	jns    0x40b7b0
  40b819:	pop    esp
  40b81a:	sbb    al,0x79
  40b81c:	(bad)  
  40b81d:	out    0xd6,eax
  40b81f:	fimul  DWORD PTR [edx]
  40b821:	(bad)  [bx+di+0x3c78]
  40b826:	fidiv  WORD PTR [esi+0x7bb85d5]
  40b82c:	mov    ecx,0xb7f17730
  40b831:	pop    esi
  40b832:	dec    ebx
  40b833:	dec    edx
  40b834:	jp     0x40b824
  40b836:	push   0x3b
  40b838:	in     eax,0xe0
  40b83a:	xor    DWORD PTR ds:0x9d234c4a,0xb259f5c6
  40b844:	jp     0x40b890
  40b846:	xchg   ecx,eax
  40b847:	shr    DWORD PTR [di-0x4c76],1
  40b84c:	fsub   DWORD PTR [edx+0x36128391]
  40b852:	imul   edx,DWORD PTR [ebp+0x3a3caf2a],0x3c
  40b859:	ret    
  40b85a:	or     dl,BYTE PTR [ecx-0x57]
  40b85d:	dec    ebp
  40b85e:	xor    DWORD PTR [eax+0x46b9d6f1],ebx
  40b864:	int    0xfa
  40b866:	mov    DWORD PTR [ebx],eax
  40b868:	ins    BYTE PTR es:[edi],dx
  40b869:	mov    bh,0x70
  40b86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b86c:	push   ebp
  40b86d:	sub    dl,0x3a
  40b870:	mov    ecx,0x6864919e
  40b875:	fimul  DWORD PTR [eax-0x569a5485]
  40b87b:	fidivr DWORD PTR [edx+0x3c3ac8b4]
  40b881:	fldcw  WORD PTR [esi-0x27884647]
  40b887:	pop    ss
  40b888:	pop    ebx
  40b889:	add    ebp,DWORD PTR [ebx]
  40b88b:	cmp    ebp,esi
  40b88d:	pop    ds
  40b88e:	fisub  WORD PTR [eax]
  40b890:	cdq    
  40b891:	repnz (bad) [ecx+0x60]
  40b895:	xchg   esp,eax
  40b896:	cmp    al,0x9f
  40b898:	add    ebp,DWORD PTR [edi-0x20e9631f]
  40b89e:	xchg   ebp,eax
  40b89f:	shr    DWORD PTR [esi],cl
  40b8a1:	cdq    
  40b8a2:	fs jbe 0x40b82e
  40b8a5:	dec    ecx
  40b8a6:	popf   
  40b8a7:	push   edx
  40b8a8:	jne    0x40b91c
  40b8aa:	aam    0xb1
  40b8ac:	mov    ecx,es
  40b8ae:	and    eax,0x48cf2afb
  40b8b3:	sbb    eax,0x4350428c
  40b8b8:	mov    dh,0x4
  40b8ba:	add    BYTE PTR [esi+0x45],ah
  40b8bd:	jne    0x40b852
  40b8bf:	inc    edi
  40b8c0:	cmp    dl,bh
  40b8c2:	call   0x47763bdf
  40b8c7:	xchg   edx,eax
  40b8c8:	rcr    DWORD PTR [ebp-0x2],cl
  40b8cb:	mov    DWORD PTR [esi],0x674fcba2
  40b8d1:	fiadd  DWORD PTR [ebp+0x52f72fb8]
  40b8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d8:	mov    eax,0x8cc4aa65
  40b8dd:	in     eax,0x44
  40b8df:	inc    ebp
  40b8e0:	and    ebp,DWORD PTR [ebx-0x7]
  40b8e3:	push   edi
  40b8e4:	or     al,cl
  40b8e6:	and    dh,BYTE PTR [ebp-0x6c]
  40b8e9:	xchg   ecx,eax
  40b8ea:	std    
  40b8eb:	inc    edx
  40b8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ed:	neg    edi
  40b8ef:	push   0x7680aa8c
  40b8f4:	push   0x6e
  40b8f6:	nop
  40b8f7:	xchg   ebx,eax
  40b8f8:	mov    ebp,0x96f33e2e
  40b8fd:	rcr    BYTE PTR [ecx+0x4d],0xfd
  40b901:	std    
  40b902:	dec    eax
  40b903:	addr16 out 0xa4,eax
  40b906:	pop    ebp
  40b907:	nop
  40b908:	xor    bl,al
  40b90a:	dec    edi
  40b90b:	push   esi
  40b90c:	cdq    
  40b90d:	and    ah,BYTE PTR [eax]
  40b90f:	mov    ah,0xe0
  40b911:	fild   WORD PTR [edi-0x2bb3467f]
  40b917:	and    DWORD PTR [edx],edx
  40b919:	pop    edx
  40b91a:	lock mov esi,0x4631041e
  40b920:	imul   esp,DWORD PTR [edx-0x3c],0x50e05cf0
  40b927:	and    al,0x19
  40b929:	fdivp  st(3),st
  40b92b:	aam    0x53
  40b92d:	cmp    eax,0x9937304e
  40b932:	sub    al,0x37
  40b934:	cld    
  40b935:	sbb    al,0x47
  40b937:	push   ds
  40b938:	xor    eax,0x5b9dae22
  40b93d:	aas    
  40b93e:	xchg   DWORD PTR [edx+0x678b2cee],eax
  40b944:	and    al,0xd
  40b946:	lds    edx,FWORD PTR [esi]
  40b948:	or     BYTE PTR [eax-0x5507a7a9],ah
  40b94e:	sbb    DWORD PTR [ebp+0x94eb416],ebp
  40b954:	mov    DWORD PTR [ebp-0x48],edi
  40b957:	in     eax,0x9c
  40b959:	mov    edx,0x1a105578
  40b95e:	fdivr  st(4),st
  40b960:	mov    ecx,0x700606d0
  40b965:	loop   0x40b9a0
  40b967:	retf   0x1075
  40b96a:	out    dx,al
  40b96b:	outs   dx,BYTE PTR ds:[esi]
  40b96c:	mov    ebx,edx
  40b96e:	or     ebx,ecx
  40b970:	int    0xd5
  40b972:	push   ebx
  40b973:	daa    
  40b974:	mov    eax,0x3234dab7
  40b979:	adc    ebp,0x259278f1
  40b97f:	xchg   esp,eax
  40b980:	popa   
  40b981:	adc    eax,0x3ac399cf
  40b986:	or     dh,BYTE PTR [ebx+ecx*8]
  40b989:	in     al,dx
  40b98a:	test   BYTE PTR [ebp+0x5b],0x27
  40b98e:	(bad)  
  40b98f:	imul   edi,DWORD PTR [ebx+0x199a63c8],0xf92b4452
  40b999:	xor    DWORD PTR [ecx+eiz*1],ebp
  40b99c:	outs   dx,BYTE PTR ds:[esi]
  40b99d:	xchg   ebp,eax
  40b99e:	repz or DWORD PTR [ebx],0x4cc28f59
  40b9a5:	popf   
  40b9a6:	ins    DWORD PTR es:[edi],dx
  40b9a7:	xor    DWORD PTR [ebp+edi*2-0x6d],ebp
  40b9ab:	lds    edi,FWORD PTR [ecx]
  40b9ad:	in     eax,dx
  40b9ae:	and    al,0x7e
  40b9b0:	xor    ah,bl
  40b9b2:	dec    edx
  40b9b3:	popa   
  40b9b4:	sbb    bh,dh
  40b9b6:	test   eax,0x1437e795
  40b9bb:	fld    TBYTE PTR [esi]
  40b9bd:	mov    al,ds:0xa92bc26f
  40b9c2:	sub    eax,DWORD PTR [edx+edi*1-0x63443781]
  40b9c9:	fsub   st(3),st
  40b9cb:	xor    BYTE PTR [edi-0x772c945],dl
  40b9d1:	xchg   DWORD PTR [esi+0x6],esi
  40b9d4:	sti    
  40b9d5:	lods   al,BYTE PTR ds:[esi]
  40b9d6:	call   0xe681:0x3798c2bd
  40b9dd:	int3   
  40b9de:	ins    DWORD PTR es:[edi],dx
  40b9df:	dec    ebp
  40b9e0:	aam    0x96
  40b9e2:	scas   eax,DWORD PTR es:[edi]
  40b9e3:	inc    ebp
  40b9e4:	imul   esi,DWORD PTR [ecx-0x2e],0xf379f050
  40b9eb:	jge    0x40b9b4
  40b9ed:	jg     0x40b9e6
  40b9ef:	inc    edx
  40b9f0:	sub    DWORD PTR [ecx+0x3f],esi
  40b9f3:	sti    
  40b9f4:	sbb    DWORD PTR [edi],0xe2635b95
  40b9fa:	inc    esi
  40b9fb:	xchg   edx,eax
  40b9fc:	sbb    eax,DWORD PTR [eax+0x4ae8520c]
  40ba02:	dec    ebx
  40ba03:	xor    al,bh
  40ba05:	cli    
  40ba06:	pop    ss
  40ba07:	es cld 
  40ba09:	dec    edi
  40ba0a:	imul   edx,DWORD PTR [ecx+0x40],0xffffffb7
  40ba0e:	push   ecx
  40ba0f:	jle    0x40ba4d
  40ba11:	dec    ecx
  40ba12:	mov    ebp,0x9de773d5
  40ba17:	imul   edi,DWORD PTR [ebx+0x7bc86c81],0x62e925b7
  40ba21:	data16 fcom QWORD PTR [ebx+eiz*2-0x7195986e]
  40ba29:	sbb    eax,0x6197b67e
  40ba2e:	and    DWORD PTR [si],edi
  40ba31:	(bad)
  40ba35:	inc    ecx
  40ba36:	dec    esi
  40ba37:	sbb    esi,esi
  40ba39:	add    ebx,DWORD PTR ds:0xd62e35f7
  40ba3f:	out    0x1f,al
  40ba41:	stos   BYTE PTR es:[edi],al
  40ba42:	js     0x40ba5a
  40ba44:	mov    ah,0xe6
  40ba46:	xchg   esi,eax
  40ba47:	mov    ss,WORD PTR [eax-0x36ae735a]
  40ba4d:	sub    eax,0x84228500
  40ba52:	and    ebx,DWORD PTR [ecx-0x6d1b6135]
  40ba58:	scas   al,BYTE PTR es:[edi]
  40ba59:	mov    ch,0x19
  40ba5b:	(bad)  
  40ba5d:	inc    esp
  40ba5e:	push   ss
  40ba5f:	mov    ch,0xd4
  40ba61:	sahf   
  40ba62:	cmp    bl,ah
  40ba64:	leave  
  40ba65:	retf   0x4600
  40ba68:	cwde   
  40ba69:	dec    ebx
  40ba6a:	ins    BYTE PTR es:[edi],dx
  40ba6b:	cld    
  40ba6c:	int    0xc2
  40ba6e:	sub    bh,BYTE PTR [ebx-0x1692fbd9]
  40ba74:	sbb    DWORD PTR [edi],edi
  40ba76:	mov    ds:0xd1ecbd1f,al
  40ba7b:	xchg   esp,eax
  40ba7c:	pop    edi
  40ba7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba7e:	cmp    eax,0x8b01d93
  40ba83:	imul   edx,esp,0xffffff98
  40ba86:	adc    eax,0xfced0fdb
  40ba8b:	mov    ebp,0xdc30becc
  40ba90:	es jl  0x40ba15
  40ba93:	jns    0x40ba20
  40ba95:	and    ecx,DWORD PTR [ebp+0x7b]
  40ba98:	add    cl,BYTE PTR [ecx]
  40ba9a:	push   0xffffffce
  40ba9c:	inc    eax
  40ba9d:	test   al,0xc2
  40ba9f:	xor    esp,DWORD PTR [ebx]
  40baa1:	cmp    al,0x89
  40baa3:	ja     0x40ba2c
  40baa5:	sti    
  40baa6:	stos   BYTE PTR es:[edi],al
  40baa7:	fldenv [eax+0x5a6e529d]
  40baad:	adc    eax,0xa05d060c
  40bab2:	in     eax,dx
  40bab3:	js     0x40baa0
  40bab5:	sub    bl,BYTE PTR [esi+0x42]
  40bab8:	inc    edx
  40bab9:	push   esp
  40baba:	add    al,0x1c
  40babc:	cdq    
  40babd:	mov    ds:0xcc495ae2,al
  40bac2:	pop    ds
  40bac3:	push   esp
  40bac4:	fisttp QWORD PTR [esi+ebp*1-0x5b669055]
  40bacb:	sub    al,0xde
  40bacd:	leave  
  40bace:	dec    esi
  40bacf:	js     0x40bad5
  40bad1:	ins    BYTE PTR es:[edi],dx
  40bad2:	push   0xea720ede
  40bad7:	mov    edi,0x4dcfca6
  40badc:	test   DWORD PTR [edx],esp
  40bade:	(bad)  
  40badf:	jecxz  0x40bb16
  40bae1:	gs inc esi
  40bae3:	sbb    al,0x7f
  40bae5:	hlt    
  40bae6:	xor    bh,BYTE PTR [edi+0x5a]
  40bae9:	pop    ecx
  40baea:	scas   eax,DWORD PTR es:[edi]
  40baeb:	test   DWORD PTR [esi+0x40],edi
  40baee:	shr    esi,cl
  40baf0:	bound  edi,QWORD PTR [edx+eiz*2+0x1272dd27]
  40baf7:	scas   al,BYTE PTR es:[edi]
  40baf8:	cmp    ebx,DWORD PTR [ecx+0x7e]
  40bafb:	sti    
  40bafc:	call   0x21e6a4bc
  40bb01:	loope  0x40bb5d
  40bb03:	ins    DWORD PTR es:[edi],dx
  40bb04:	push   edx
  40bb05:	mov    edi,0x91039405
  40bb0a:	imul   esi,DWORD PTR [esi+edi*4],0x5a
  40bb0e:	xor    bl,bh
  40bb10:	jne    0x40bb59
  40bb12:	add    BYTE PTR [eax],dh
  40bb14:	xchg   BYTE PTR ss:[edx],cl
  40bb17:	dec    esp
  40bb18:	rol    DWORD PTR [edx+0x3eb48833],0xaa
  40bb1f:	jecxz  0x40bb94
  40bb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb22:	push   edi
  40bb23:	sub    ecx,edx
  40bb25:	cs and bl,ah
  40bb28:	xor    BYTE PTR [esi+eiz*8],ah
  40bb2b:	jnp    0x40bb40
  40bb2d:	inc    ecx
  40bb2e:	pusha  
  40bb2f:	jno    0x40bafe
  40bb31:	add    edi,esi
  40bb33:	outs   dx,DWORD PTR ds:[esi]
  40bb34:	outs   dx,DWORD PTR ds:[esi]
  40bb35:	push   ebp
  40bb36:	fstp   QWORD PTR [eax+0x581f48d7]
  40bb3c:	jnp    0x40bb79
  40bb3e:	cmp    al,ch
  40bb40:	push   esi
  40bb41:	mov    dl,BYTE PTR [edx+0x62]
  40bb44:	jmp    0x8f24:0x8c3c71ce
  40bb4b:	mov    dh,0xfc
  40bb4d:	and    al,0xeb
  40bb4f:	lods   al,BYTE PTR ds:[esi]
  40bb50:	and    BYTE PTR [edx-0xe],al
  40bb53:	sbb    eax,DWORD PTR [edi+0x5b]
  40bb56:	cmp    ebp,DWORD PTR [edi-0x27]
  40bb59:	pop    esp
  40bb5a:	fwait
  40bb5b:	(bad)  
  40bb5c:	fcomp  QWORD PTR [ecx+0x30]
  40bb5f:	sub    ch,dl
  40bb61:	leave  
  40bb62:	pop    esp
  40bb63:	adc    dh,BYTE PTR [eax-0x2d68f330]
  40bb69:	sti    
  40bb6a:	jge    0x40bb23
  40bb6c:	xlat   BYTE PTR ds:[ebx]
  40bb6d:	cs jmp 0x62875a13
  40bb73:	fcom   st(6)
  40bb75:	out    dx,eax
  40bb76:	(bad)  
  40bb78:	pop    edi
  40bb79:	(bad)  
  40bb7a:	xchg   esp,eax
  40bb7b:	push   esp
  40bb7c:	xchg   ecx,eax
  40bb7d:	xchg   ebp,eax
  40bb7e:	outs   dx,BYTE PTR ds:[esi]
  40bb7f:	xchg   esp,eax
  40bb80:	add    eax,0x29ba0c1b
  40bb85:	(bad)  
  40bb86:	iret   
  40bb87:	enter  0xdf10,0xd5
  40bb8b:	sub    al,BYTE PTR [ebx]
  40bb8d:	adc    ebp,ebx
  40bb8f:	cmc    
  40bb90:	jl     0x40bb6d
  40bb92:	aam    0x11
  40bb94:	ret    0xd9
  40bb97:	sar    DWORD PTR [esi],cl
  40bb99:	mov    edi,0xfc6d3b63
  40bb9e:	or     al,0xb1
  40bba0:	jmp    0x7d0abf2c
  40bba5:	int3   
  40bba6:	jns    0x40bb8b
  40bba8:	daa    
  40bba9:	rcl    BYTE PTR [ebx],cl
  40bbab:	bound  ebp,QWORD PTR [ebp+0x20e039c]
  40bbb1:	stos   DWORD PTR es:[edi],eax
  40bbb2:	xor    BYTE PTR [esi-0x22],dl
  40bbb5:	and    esp,DWORD PTR [esp+edx*1+0x70b46b0b]
  40bbbc:	sub    cl,BYTE PTR [edi-0x65d2a015]
  40bbc2:	mov    ecx,0x858f2981
  40bbc7:	fst    DWORD PTR [ebx-0x19]
  40bbca:	sbb    BYTE PTR [ebx+0x61],ah
  40bbcd:	adc    DWORD PTR [ebp-0x16],edx
  40bbd0:	shl    DWORD PTR [ebx+0x53],1
  40bbd3:	jnp    0x40bb86
  40bbd5:	inc    ecx
  40bbd6:	or     esi,DWORD PTR [ebp+0x37]
  40bbd9:	call   0x98ae33c3
  40bbde:	sub    ebx,edi
  40bbe0:	cwde   
  40bbe1:	jne    0x40bbb0
  40bbe3:	popf   
  40bbe4:	shl    DWORD PTR [ebx-0x6eb113ee],0x2e
  40bbeb:	pop    ss
  40bbec:	push   esi
  40bbed:	sbb    BYTE PTR [ecx-0x55e610ce],dl
  40bbf3:	jb     0x40bc5a
  40bbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf6:	daa    
  40bbf7:	xor    esp,DWORD PTR [ebx]
  40bbf9:	dec    eax
  40bbfa:	pop    ds
  40bbfb:	jo     0x40bbb7
  40bbfd:	sub    DWORD PTR [ecx+0xef8b325],ebx
  40bc03:	sub    ch,cl
  40bc05:	mov    ecx,0xa53b5e7e
  40bc0a:	sub    cx,WORD PTR [esi]
  40bc0d:	jmp    0x48e76412
  40bc12:	test   DWORD PTR [edi-0x274c1e96],esi
  40bc18:	test   al,0x90
  40bc1a:	and    eax,0x583a860c
  40bc1f:	fadd   st(0),st
  40bc21:	xchg   ebx,esi
  40bc23:	or     BYTE PTR [eax],dh
  40bc25:	(bad)  
  40bc26:	ror    BYTE PTR [esi],cl
  40bc28:	push   esi
  40bc29:	and    BYTE PTR [edx],al
  40bc2b:	adc    eax,0x7e29983
  40bc30:	(bad)  
  40bc31:	xchg   edx,eax
  40bc32:	cdq    
  40bc33:	cs (bad) 
  40bc35:	adc    eax,0x792a767f
  40bc3a:	and    eax,0x6eecfd48
  40bc3f:	sbb    BYTE PTR [edi+0x13],0x5b
  40bc43:	fs iret 
  40bc45:	(bad)  
  40bc47:	rcr    esp,0x94
  40bc4a:	outs   dx,DWORD PTR ds:[esi]
  40bc4b:	leave  
  40bc4c:	and    al,0x80
  40bc4e:	adc    ecx,DWORD PTR [ebx+0x72]
  40bc51:	cmp    bh,BYTE PTR [ebx-0x3465e967]
  40bc57:	les    esi,FWORD PTR [esp+edx*8]
  40bc5a:	js     0x40bc4b
  40bc5c:	pushf  
  40bc5d:	jae    0x40bc65
  40bc5f:	repnz fld QWORD PTR [edi+0x13]
  40bc63:	push   ecx
  40bc64:	add    ebx,DWORD PTR [ebx+0x3e96a216]
  40bc6a:	adc    DWORD PTR [ebp+0x2],ebx
  40bc6d:	invd   
  40bc6f:	mov    esp,0x4f63447
  40bc74:	out    dx,eax
  40bc75:	test   eax,0xeae948a6
  40bc7a:	cmp    al,0x46
  40bc7c:	adc    esi,ebx
  40bc7e:	iret   
  40bc7f:	adc    ecx,DWORD PTR [eax-0x56eee381]
  40bc85:	push   ebp
  40bc86:	or     bl,BYTE PTR [ebp-0x6c]
  40bc89:	sbb    al,0x10
  40bc8b:	push   edx
  40bc8c:	sbb    DWORD PTR [ebx-0x4129c538],esp
  40bc92:	ds scas al,BYTE PTR es:[edi]
  40bc94:	iret   
  40bc95:	push   ebx
  40bc96:	(bad)  
  40bc97:	fisub  WORD PTR [eax+ebp*4-0x53]
  40bc9b:	push   edi
  40bc9c:	cmc    
  40bc9d:	fadd   QWORD PTR [eax+0x30]
  40bca0:	jbe    0x40bca1
  40bca2:	sub    al,0x7d
  40bca4:	and    BYTE PTR [ebp+0x79525681],dl
  40bcaa:	mov    dh,0xe9
  40bcac:	jl     0x40bcc4
  40bcae:	xor    al,0x8a
  40bcb0:	or     DWORD PTR [ecx-0x56],ecx
  40bcb3:	mov    al,es:0x4d585d09
  40bcb9:	jbe    0x40bc93
  40bcbb:	fidiv  WORD PTR [edi]
  40bcbd:	push   ss
  40bcbe:	loope  0x40bd21
  40bcc0:	dec    ebx
  40bcc1:	or     DWORD PTR [edx+ebx*2-0x1691ad90],eax
  40bcc8:	(bad)
  40bccd:	pop    ebp
  40bcce:	add    dh,BYTE PTR [ebp-0x17d4aee8]
  40bcd4:	and    eax,0xb3f5f1f4
  40bcd9:	ror    BYTE PTR [eax],0x82
  40bcdc:	jp     0x40bd1d
  40bcde:	(bad)  
  40bcdf:	jns    0x40bc87
  40bce1:	out    dx,eax
  40bce2:	fsubr  st,st(5)
  40bce4:	packssdw mm3,QWORD PTR [ecx-0x13]
  40bce8:	push   ds
  40bce9:	popf   
  40bcea:	pop    edx
  40bceb:	(bad)  
  40bcec:	push   esp
  40bced:	jle    0x40bcac
  40bcef:	jp     0x40bd19
  40bcf1:	not    DWORD PTR [ebx]
  40bcf3:	add    eax,0x6d7b60ea
  40bcf8:	jp     0x40bc8a
  40bcfa:	xchg   esi,eax
  40bcfb:	inc    esi
  40bcfc:	mov    eax,DWORD PTR [ebx-0x80]
  40bcff:	cli    
  40bd00:	jo     0x40bcc1
  40bd02:	mov    ss,WORD PTR ds:0xcc04c89a
  40bd08:	jmp    0x40bcb2
  40bd0a:	ror    DWORD PTR [edx],cl
  40bd0c:	or     al,0xb
  40bd0e:	ins    DWORD PTR es:[edi],dx
  40bd0f:	ja     0x40bd18
  40bd11:	arpl   WORD PTR [eax+0x46],bp
  40bd14:	xchg   ecx,eax
  40bd15:	pop    es
  40bd16:	pop    esp
  40bd17:	or     al,0x9c
  40bd19:	lds    ebx,FWORD PTR [bp+si-0x79]
  40bd1d:	loope  0x40bd96
  40bd1f:	xchg   esi,eax
  40bd20:	stos   BYTE PTR es:[edi],al
  40bd21:	fwait
  40bd22:	test   bh,cl
  40bd24:	jo     0x40bd45
  40bd26:	jbe    0x40bd14
  40bd28:	stos   BYTE PTR es:[edi],al
  40bd29:	sub    eax,0xd6dbd740
  40bd2e:	aad    0xe0
  40bd30:	repnz mov edx,0x4d3c6a02
  40bd36:	into   
  40bd37:	rol    BYTE PTR [ecx-0x5],cl
  40bd3a:	gs aaa 
  40bd3c:	adc    eax,0x4530da60
  40bd41:	sti    
  40bd42:	jno    0x40bd9a
  40bd44:	cmc    
  40bd45:	dec    edx
  40bd46:	lods   al,BYTE PTR ds:[esi]
  40bd47:	or     BYTE PTR [esi+edx*1+0x1e3a29a0],ah
  40bd4e:	das    
  40bd4f:	aaa    
  40bd50:	lea    edi,ds:0x47a0c5a8
  40bd56:	add    al,0x3e
  40bd58:	mov    ecx,0xd22bddb
  40bd5d:	icebp  
  40bd5e:	cmp    eax,0xb539ee18
  40bd63:	shl    bh,0x94
  40bd66:	pop    ss
  40bd67:	es stos DWORD PTR es:[edi],eax
  40bd69:	push   ecx
  40bd6a:	mov    bl,0x60
  40bd6c:	aas    
  40bd6d:	std    
  40bd6e:	cmp    DWORD PTR [ebp-0x3b],ebp
  40bd71:	pop    ecx
  40bd72:	popf   
  40bd73:	push   esp
  40bd74:	sbb    al,0x4f
  40bd76:	scas   eax,DWORD PTR es:[edi]
  40bd77:	loopne 0x40bd22
  40bd79:	lods   eax,DWORD PTR ds:[esi]
  40bd7a:	fsubr  DWORD PTR [ebp+0x2e]
  40bd7d:	dec    bx
  40bd7f:	mov    edx,0x92396fb
  40bd84:	xchg   edx,eax
  40bd85:	test   edi,eax
  40bd87:	xchg   esp,eax
  40bd88:	xchg   ebx,eax
  40bd89:	ss js  0x40bdc6
  40bd8c:	dec    ebx
  40bd8d:	and    ch,al
  40bd8f:	mov    ds:0x88442618,eax
  40bd94:	daa    
  40bd95:	and    al,0xf8
  40bd97:	mov    BYTE PTR [edx],ah
  40bd99:	sub    ebp,DWORD PTR [ecx-0x5b]
  40bd9c:	sbb    dh,bh
  40bd9e:	or     DWORD PTR [eax+0x2807b3f9],ebp
  40bda4:	sbb    DWORD PTR [ebp+0x4d4bfb6a],edx
  40bdaa:	push   ss
  40bdab:	fdivr  st(5),st
  40bdad:	dec    ecx
  40bdae:	cmp    al,0x25
  40bdb0:	lods   eax,DWORD PTR ds:[esi]
  40bdb1:	shl    DWORD PTR [edx+0x34],0xa4
  40bdb5:	cmp    al,0x77
  40bdb7:	xor    BYTE PTR [eax-0x4eb15cca],bl
  40bdbd:	ins    BYTE PTR es:[edi],dx
  40bdbe:	pushf  
  40bdbf:	mov    esp,0x969113a9
  40bdc4:	mov    ebp,0x26e9c326
  40bdc9:	rol    edx,0xe8
  40bdcc:	pop    eax
  40bdcd:	mov    ebx,0x95780771
  40bdd2:	ret    
  40bdd3:	stc    
  40bdd4:	mov    bh,0xe3
  40bdd6:	int    0xe1
  40bdd8:	lods   eax,DWORD PTR ds:[esi]
  40bdd9:	fmul   st,st(0)
  40bddb:	(bad)  
  40bddc:	jmp    0xd757:0x32d0b57c
  40bde3:	inc    esi
  40bde4:	(bad)  
  40bde5:	xor    esp,DWORD PTR [edx-0x2de7b3fa]
  40bdeb:	cmp    ebp,DWORD PTR [esp+ebp*2-0xbd8660d]
  40bdf2:	push   ebp
  40bdf3:	dec    ebp
  40bdf4:	sub    al,0x27
  40bdf6:	mov    edx,0x656a774b
  40bdfb:	xchg   edx,eax
  40bdfc:	jnp    0x40bda0
  40bdfe:	mov    bh,0x8d
  40be00:	mov    eax,0xedcf7c53
  40be05:	add    DWORD PTR [edi-0xe595cd4],0x7f
  40be0c:	das    
  40be0d:	popa   
  40be0e:	loopne 0x40bda9
  40be10:	aam    0x46
  40be12:	imul   esi,DWORD PTR [edx],0x19
  40be15:	outs   dx,BYTE PTR ds:[esi]
  40be16:	xchg   ecx,eax
  40be17:	or     eax,0x220713e8
  40be1c:	test   ch,dh
  40be1e:	scas   al,BYTE PTR es:[edi]
  40be1f:	cmp    eax,0xa4b2eae2
  40be24:	xor    al,0x28
  40be26:	add    ebx,DWORD PTR [ebp-0x15]
  40be29:	push   eax
  40be2a:	add    edx,ebp
  40be2c:	fucomip st,st(5)
  40be2e:	jno    0x40bde7
  40be30:	lods   eax,DWORD PTR ds:[esi]
  40be31:	lods   eax,DWORD PTR ds:[esi]
  40be32:	ror    BYTE PTR [eiz*4+0x78aaa617],0xc0
  40be3a:	add    BYTE PTR [ebx+0x5d],0x30
  40be3e:	loope  0x40be4a
  40be40:	jp     0x40be43
  40be42:	sbb    al,0x68
  40be44:	jecxz  0x40be35
  40be46:	jb     0x40be6f
  40be48:	scas   eax,DWORD PTR es:[edi]
  40be49:	push   es
  40be4a:	fmul   QWORD PTR [ebx-0xae16fe5]
  40be50:	sbb    DWORD PTR [ebx-0x5e4dbf2b],0xfcf711c6
  40be5a:	xlat   BYTE PTR ds:[ebx]
  40be5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5c:	inc    edx
  40be5d:	push   eax
  40be5e:	or     al,0x95
  40be60:	outs   dx,BYTE PTR ds:[esi]
  40be61:	and    edi,ebx
  40be63:	mov    bh,0x61
  40be65:	push   ss
  40be66:	mov    dh,0x5b
  40be68:	ss loopne 0x40bdee
  40be6b:	dec    ecx
  40be6c:	mov    ecx,0xcf143b6f
  40be71:	mov    esp,ecx
  40be73:	adc    ch,dl
  40be75:	nop
  40be76:	xchg   ebp,eax
  40be77:	jo     0x40bebe
  40be79:	pusha  
  40be7a:	cli    
  40be7b:	xor    al,0x65
  40be7d:	xor    eax,0xe904d22
  40be82:	jp     0x40bed3
  40be84:	mov    esp,0x4daadfcc
  40be89:	dec    edx
  40be8a:	jg     0x40be32
  40be8c:	sbb    al,0x5a
  40be8e:	xchg   esp,eax
  40be8f:	cmc    
  40be90:	mov    al,0xad
  40be92:	xchg   ecx,eax
  40be93:	xlat   BYTE PTR ds:[ebx]
  40be94:	shl    BYTE PTR [edi],0xdc
  40be97:	imul   esi,esp,0xffffffe2
  40be9a:	ins    DWORD PTR es:[edi],dx
  40be9b:	adc    DWORD PTR [ebp+0x164b6732],edx
  40bea1:	xchg   ecx,eax
  40bea2:	push   0x64da65a1
  40bea7:	mov    ah,0x96
  40bea9:	mov    ecx,0xc3336c4
  40beae:	ret    
  40beaf:	call   0x7d7ce0b8
  40beb4:	sbb    DWORD PTR [ebx+eiz*1+0x5b],0x384c3f03
  40bebc:	pop    ss
  40bebd:	leave  
  40bebe:	mov    ecx,0xccea8065
  40bec3:	xchg   edx,eax
  40bec4:	mov    BYTE PTR [eax],al
  40bec6:	add    DWORD PTR [eax+0x50f1e351],edi
  40becc:	icebp  
  40becd:	int3   
  40bece:	cs add edx,esi
  40bed1:	jns    0x40be58
  40bed3:	stc    
  40bed4:	push   0xe47a816c
  40bed9:	push   ds
  40beda:	cmp    eax,0x37e24283
  40bedf:	dec    edi
  40bee0:	popf   
  40bee1:	je     0x40be78
  40bee3:	out    0x98,al
  40bee5:	out    0xef,al
  40bee7:	and    esi,0x25
  40beea:	mov    ah,0xde
  40beec:	outs   dx,DWORD PTR ds:[esi]
  40beed:	cs in  al,0xe8
  40bef0:	push   edx
  40bef1:	sbb    eax,0x26914dc0
  40bef6:	lea    ecx,[edx+ebp*2+0x1418182c]
  40befd:	inc    ebp
  40befe:	addr16 pop es
  40bf00:	mov    ebp,0x906a324a
  40bf05:	jge    0x40bf20
  40bf07:	mov    ebx,0xd9ac41e8
  40bf0c:	sbb    eax,0x2e48a645
  40bf11:	enter  0x28fa,0x3e
  40bf15:	popa   
  40bf16:	shl    BYTE PTR [esp+edi*8+0x4d80d8a5],1
  40bf1d:	ins    BYTE PTR es:[edi],dx
  40bf1e:	mov    al,ds:0x2f1ed33e
  40bf23:	dec    ebx
  40bf24:	xchg   ebp,eax
  40bf25:	sub    edx,ebp
  40bf27:	icebp  
  40bf28:	gs ins BYTE PTR es:[edi],dx
  40bf2a:	(bad)  
  40bf2b:	shl    BYTE PTR [edi-0x2343ef0],1
  40bf31:	loop   0x40bfa7
  40bf33:	aad    0xc
  40bf35:	jge    0x40bf63
  40bf37:	and    eax,DWORD PTR [eax-0x61]
  40bf3a:	out    dx,al
  40bf3b:	add    DWORD PTR [eax+ebx*8-0x559f6ac7],0x3041c2b7
  40bf46:	sbb    edx,DWORD PTR [ebx]
  40bf48:	push   edi
  40bf49:	sub    eax,0x20312137
  40bf4e:	pop    ds
  40bf4f:	out    0xf1,eax
  40bf51:	int3   
  40bf52:	inc    edi
  40bf53:	mov    es,WORD PTR [ebp-0x5d098305]
  40bf59:	add    eax,0x87251e79
  40bf5e:	pop    ss
  40bf5f:	cmp    BYTE PTR [edi+0x65265cb1],dh
  40bf65:	retf   
  40bf66:	test   BYTE PTR [edi],dl
  40bf68:	dec    bp
  40bf6a:	pusha  
  40bf6b:	jns    0x40bfa6
  40bf6d:	cmp    DWORD PTR [edi+edx*1-0x3e],edi
  40bf71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf72:	jp     0x40bf7e
  40bf74:	inc    ecx
  40bf75:	inc    esp
  40bf76:	pop    eax
  40bf77:	adc    bh,BYTE PTR [eax-0x50]
  40bf7a:	jle    0x40bf3c
  40bf7c:	lds    ecx,FWORD PTR [esi-0x7c]
  40bf7f:	scas   eax,DWORD PTR es:[edi]
  40bf80:	lea    edi,fs:[ebx-0x34]
  40bf84:	cmp    al,BYTE PTR [ecx]
  40bf86:	pop    ebp
  40bf87:	cmp    dl,BYTE PTR ds:0xe838e33a
  40bf8d:	sahf   
  40bf8e:	cli    
  40bf8f:	vmread DWORD PTR [edx+0x6b60183d],ebx
  40bf96:	jnp    0x40bfec
  40bf98:	stos   BYTE PTR es:[edi],al
  40bf99:	jmp    0x90910992
  40bf9e:	int    0x1a
  40bfa0:	sbb    DWORD PTR [ebx-0x10eaba5d],0xffffffbf
  40bfa7:	pop    ss
  40bfa8:	shl    ebp,1
  40bfaa:	push   0x513c2865
  40bfaf:	inc    edx
  40bfb0:	ja     0x40c024
  40bfb2:	sbb    eax,0x25400e6d
  40bfb7:	stc    
  40bfb8:	sbb    ch,BYTE PTR [edx]
  40bfba:	sub    DWORD PTR [eax+ecx*2+0x34],ebx
  40bfbe:	arpl   WORD PTR [eax],di
  40bfc0:	stos   BYTE PTR es:[edi],al
  40bfc1:	jle    0x40bfe2
  40bfc3:	mov    ch,0x83
  40bfc5:	push   edi
  40bfc6:	nop
  40bfc7:	fadd   DWORD PTR [ebx-0x3a]
  40bfca:	sbb    al,0x5d
  40bfcc:	inc    eax
  40bfcd:	call   0x9b6d70bc
  40bfd2:	cmp    ebp,DWORD PTR [ecx+0x180be596]
  40bfd8:	jg     0x40bf7a
  40bfda:	pop    esi
  40bfdb:	mov    WORD PTR [edx+0x5f],gs
  40bfde:	rcr    ebp,0xc6
  40bfe1:	push   ebx
  40bfe2:	push   0xf4492d67
  40bfe7:	pushf  
  40bfe8:	daa    
  40bfe9:	pusha  
  40bfea:	les    edx,FWORD PTR [ecx]
  40bfec:	(bad)  
  40bfed:	xor    DWORD PTR [esi+0x3ad51838],ebp
  40bff3:	mov    al,al
  40bff5:	dec    eax
  40bff6:	inc    eax
  40bff7:	(bad)  
  40bff8:	xchg   esp,eax
  40bff9:	cli    
  40bffa:	scas   eax,DWORD PTR es:[edi]
  40bffb:	das    
  40bffc:	lahf   
  40bffd:	lods   al,BYTE PTR ds:[esi]
  40bffe:	push   esp
  40bfff:	mov    eax,DWORD PTR [esp+edi*2+0x1]
  40c003:	push   ebp
  40c004:	ins    DWORD PTR es:[edi],dx
  40c005:	fwait
  40c006:	es prefetchwt1 (bad)
  40c008:	or     eax,0x8190f2d0
  40c00d:	mov    esi,0x1e1b00d4
  40c012:	loop   0x40c005
  40c014:	in     al,dx
  40c015:	mov    bh,0x4e
  40c017:	xor    al,0x68
  40c019:	add    ch,BYTE PTR [ebp+0x354e2543]
  40c01f:	imul   eax,eax,0x9602d789
  40c025:	nop
  40c026:	in     eax,dx
  40c027:	retf   0x681e
  40c02a:	dec    esp
  40c02b:	mov    ah,0x73
  40c02d:	aas    
  40c02e:	cmp    esi,ecx
  40c030:	lahf   
  40c031:	fld    st(7)
  40c033:	inc    ebx
  40c034:	push   ebp
  40c035:	(bad)  
  40c036:	pop    ss
  40c037:	and    esi,DWORD PTR [ebx]
  40c039:	sti    
  40c03a:	push   cs
  40c03b:	test   eax,0x49601b1e
  40c040:	jp     0x40c093
  40c042:	fbld   TBYTE PTR [eax]
  40c044:	retf   0x45bc
  40c047:	pop    esp
  40c048:	in     al,dx
  40c049:	xor    DWORD PTR [eax],eax
  40c04b:	(bad)  
  40c04c:	xor    eax,0x588257d9
  40c051:	cmp    bl,0x3d
  40c054:	or     eax,0xa33b9479
  40c059:	cmc    
  40c05a:	rol    BYTE PTR [ebp-0x3],0x2f
  40c05e:	ret    
  40c05f:	push   eax
  40c060:	retf   0xad6c
  40c063:	lods   eax,DWORD PTR ds:[esi]
  40c064:	jae    0x40bffe
  40c066:	jle    0x40bfe9
  40c068:	xchg   ebp,eax
  40c069:	sub    DWORD PTR [edi],0xb5fb64c1
  40c06f:	cli    
  40c070:	aas    
  40c071:	xchg   edx,eax
  40c072:	and    ah,BYTE PTR [ebp+0x165c2f74]
  40c078:	adc    eax,0xc2a4567e
  40c07d:	in     eax,dx
  40c07e:	jecxz  0x40c07c
  40c080:	adc    BYTE PTR [ecx+ecx*2+0xa],ch
  40c084:	push   0x78
  40c086:	arpl   WORD PTR [esi],di
  40c088:	daa    
  40c089:	fst    DWORD PTR [esi-0x4bf140bd]
  40c08f:	inc    eax
  40c090:	call   0x590a:0x7655b5b5
  40c097:	mov    ecx,DWORD PTR [esi+ebx*1-0x54a8b70e]
  40c09e:	in     eax,dx
  40c09f:	push   ebp
  40c0a0:	dec    edx
  40c0a1:	or     esi,DWORD PTR [edi+0x286d986]
  40c0a7:	test   BYTE PTR [ebx],bh
  40c0a9:	dec    BYTE PTR [eax+0xbd0153d]
  40c0af:	mul    DWORD PTR [ecx+0x81c3325]
  40c0b5:	add    al,0x6
  40c0b7:	outs   dx,DWORD PTR ds:[esi]
  40c0b8:	ja     0x40c08b
  40c0ba:	outs   dx,BYTE PTR ds:[esi]
  40c0bb:	sub    eax,0xaa8f606a
  40c0c0:	cs sbb al,0xdc
  40c0c3:	mov    dh,0xc8
  40c0c5:	data16 jnp 0x40c0df
  40c0c8:	xchg   edi,eax
  40c0c9:	aad    0xc9
  40c0cb:	mov    dl,0x94
  40c0cd:	popa   
  40c0ce:	iret   
  40c0cf:	sbb    BYTE PTR [esi],bh
  40c0d1:	cs (bad) 
  40c0d4:	out    dx,al
  40c0d5:	loop   0x40c108
  40c0d7:	adc    dh,BYTE PTR [esi-0x65]
  40c0da:	out    0xc2,al
  40c0dc:	dec    esi
  40c0dd:	add    eax,DWORD PTR [ecx-0x4b]
  40c0e0:	sbb    BYTE PTR ds:0x4240f913,al
  40c0e6:	xor    eax,edi
  40c0e8:	in     al,dx
  40c0e9:	lea    eax,[esi]
  40c0eb:	shl    al,cl
  40c0ed:	shl    DWORD PTR [edi+0x20],1
  40c0f0:	nop
  40c0f1:	sbb    DWORD PTR ds:0x371cabc1,edi
  40c0f7:	dec    edx
  40c0f8:	push   ebp
  40c0f9:	addr16 cli 
  40c0fb:	jecxz  0x40c102
  40c0fd:	xor    DWORD PTR [ebp-0x7a],edi
  40c100:	mov    cl,0x62
  40c102:	fwait
  40c103:	cmp    dl,al
  40c105:	jne    0x40c159
  40c107:	ins    DWORD PTR es:[edi],dx
  40c108:	mov    dh,0x91
  40c10a:	dec    edx
  40c10b:	jle    0x40c187
  40c10d:	mov    esp,DWORD PTR [edx]
  40c10f:	push   ebx
  40c110:	int3   
  40c111:	ins    DWORD PTR es:[edi],dx
  40c112:	lahf   
  40c113:	lods   eax,DWORD PTR ds:[esi]
  40c114:	call   DWORD PTR gs:[edi]
  40c117:	sub    esi,DWORD PTR [esi+eiz*1]
  40c11a:	test   ch,dh
  40c11c:	inc    esi
  40c11d:	hlt    
  40c11e:	pop    DWORD PTR [edi+edx*2-0x16]
  40c122:	xor    DWORD PTR [edx-0x1b78284a],0x3ead3dc0
  40c12c:	add    eax,0x2aaed5eb
  40c131:	sub    al,0x11
  40c133:	jns    0x40c173
  40c135:	xchg   ebx,eax
  40c136:	cdq    
  40c137:	fucomp st(1)
  40c139:	out    0xb8,eax
  40c13b:	in     al,dx
  40c13c:	aaa    
  40c13d:	dec    edi
  40c13e:	mov    ecx,0xc7c4973d
  40c143:	dec    ecx
  40c144:	jno    0x40c110
  40c146:	fwait
  40c147:	jnp    0x40c0fa
  40c149:	add    al,0xd1
  40c14b:	out    0x25,eax
  40c14d:	adc    eax,0xfd295221
  40c152:	lods   al,BYTE PTR ds:[esi]
  40c153:	xchg   esp,eax
  40c154:	xor    eax,0x2aaee890
  40c159:	xor    DWORD PTR [edi-0x16],ecx
  40c15c:	outs   dx,BYTE PTR ds:[esi]
  40c15d:	xor    al,0xad
  40c15f:	idiv   DWORD PTR [esi]
  40c161:	mov    bh,0x4e
  40c163:	sub    eax,0x4cfd8bac
  40c168:	shr    DWORD PTR [edi],1
  40c16a:	jmp    FWORD PTR [ebx+0x60188a8a]
  40c170:	dec    esi
  40c171:	clc    
  40c172:	and    esp,DWORD PTR [edx+0x24]
  40c175:	push   ebx
  40c176:	in     eax,0xb0
  40c178:	jbe    0x40c1d1
  40c17a:	repz ds cmp dl,ah
  40c17e:	pop    ebx
  40c17f:	push   0xffffffe1
  40c181:	jle    0x40c15f
  40c183:	jo     0x40c14e
  40c185:	and    ah,bl
  40c187:	xchg   ebp,eax
  40c188:	repnz inc ebx
  40c18a:	and    BYTE PTR [edi],al
  40c18c:	sbb    cl,dl
  40c18e:	scas   eax,DWORD PTR es:[edi]
  40c18f:	push   es
  40c190:	test   DWORD PTR [esi+0x75],0xcba762fa
  40c197:	lods   eax,DWORD PTR ds:[esi]
  40c198:	xor    ebp,ebx
  40c19a:	shl    BYTE PTR [eax+0x29],0x27
  40c19e:	and    BYTE PTR [esi+0x70632949],al
  40c1a4:	xor    ebp,DWORD PTR [esi+0x39bb8d33]
  40c1aa:	xchg   ebx,eax
  40c1ab:	gs pushf 
  40c1ad:	or     al,0x17
  40c1af:	xor    bl,BYTE PTR [edi+0x28]
  40c1b2:	jae    0x40c225
  40c1b4:	jg     0x40c231
  40c1b6:	cmp    al,0x9f
  40c1b8:	shr    DWORD PTR [esi+esi*4-0x772aaee8],1
  40c1bf:	xchg   esi,eax
  40c1c0:	xchg   ebp,eax
  40c1c1:	aam    0xd5
  40c1c3:	xacquire xchg BYTE PTR [ebp-0x18],ch
  40c1c7:	(bad)  
  40c1c8:	xchg   edi,eax
  40c1c9:	out    0xed,al
  40c1cb:	fnstsw WORD PTR es:[ecx-0x64]
  40c1cf:	xor    cl,BYTE PTR [ebp-0x4d]
  40c1d2:	fwait
  40c1d3:	ror    BYTE PTR [ecx],0x5a
  40c1d6:	imul   ebx,edi,0x94ca6626
  40c1dc:	aas    
  40c1dd:	arpl   di,cx
  40c1df:	gs aad 0x57
  40c1e2:	sub    BYTE PTR [ebx+edx*4+0x7b],bh
  40c1e6:	ret    
  40c1e7:	inc    ecx
  40c1e8:	setnp  BYTE PTR [eax]
  40c1eb:	mov    WORD PTR ds:0x4d68fd81,fs
  40c1f1:	mov    dl,0x9c
  40c1f3:	scas   al,BYTE PTR es:[edi]
  40c1f4:	gs stos BYTE PTR es:[edi],al
  40c1f6:	push   esi
  40c1f7:	dec    ebx
  40c1f8:	adc    al,0x2b
  40c1fa:	(bad)
  40c1fd:	dec    edi
  40c1fe:	xor    ch,al
  40c200:	mov    ds:0xaec98806,eax
  40c205:	gs dec edi
  40c207:	loopne 0x40c1bc
  40c209:	sti    
  40c20a:	daa    
  40c20b:	mov    eax,0x4c3e4466
  40c210:	mov    ecx,0xb1680e21
  40c215:	aaa    
  40c216:	mov    esi,0x65a4e463
  40c21b:	cdq    
  40c21c:	add    eax,0x2b0ac167
  40c221:	test   BYTE PTR [ebx+0x77ef9c20],ah
  40c227:	aam    0x1a
  40c229:	sbb    ebp,ecx
  40c22b:	push   esp
  40c22c:	dec    esp
  40c22d:	pop    edi
  40c22e:	les    ebp,FWORD PTR [esi-0x38]
  40c231:	sub    cl,BYTE PTR [edi]
  40c233:	add    bp,WORD PTR [bx-0x1a7f]
  40c239:	dec    esp
  40c23a:	out    dx,eax
  40c23b:	imul   edx,DWORD PTR [ebx-0x130b268b],0x3a6e425e
  40c245:	add    esi,ebp
  40c247:	push   cs
  40c248:	aad    0xc8
  40c24a:	mov    bl,0x7e
  40c24c:	inc    edi
  40c24d:	push   edi
  40c24e:	jp     0x40c2ce
  40c250:	add    DWORD PTR [eax-0x25868c0d],edi
  40c256:	xchg   esi,eax
  40c257:	jg     0x40c1f5
  40c259:	jp     0x40c2b2
  40c25b:	neg    BYTE PTR [edi+0x26]
  40c25e:	add    BYTE PTR [ecx+ebp*2-0x70],bl
  40c262:	fld    QWORD PTR [ecx+0x28761aad]
  40c268:	adc    eax,0x9a7bba33
  40c26d:	sbb    edx,edx
  40c26f:	shufps xmm3,XMMWORD PTR cs:[edx-0x4a],0x1c
  40c275:	xchg   ebx,eax
  40c276:	cvtps2pd xmm1,xmm4
  40c279:	call   FWORD PTR [ebx+0x46]
  40c27c:	push   cs
  40c27d:	sub    eax,0xb43666e
  40c282:	stos   BYTE PTR es:[edi],al
  40c283:	lds    eax,FWORD PTR [ebx+0x6c6c62e8]
  40c289:	loop   0x40c2f9
  40c28b:	retf   0x971
  40c28e:	ret    
  40c28f:	div    DWORD PTR [eax+0x45]
  40c292:	push   DWORD PTR [esi+0x1e11dc83]
  40c298:	and    eax,0x89e9c12a
  40c29d:	mov    WORD PTR [eax-0x1e90a0ee],gs
  40c2a3:	fsub   DWORD PTR [ebp-0x515ee277]
  40c2a9:	pop    ebx
  40c2aa:	sub    al,0x3f
  40c2ac:	stos   DWORD PTR es:[edi],eax
  40c2ad:	inc    eax
  40c2ae:	push   ss
  40c2af:	jbe    0x40c28b
  40c2b1:	out    dx,eax
  40c2b2:	sub    eax,0xa2610309
  40c2b7:	inc    ecx
  40c2b8:	arpl   WORD PTR [ebp+0x3a],si
  40c2bb:	ja     0x40c2da
  40c2bd:	cmp    al,0x32
  40c2bf:	mov    cl,0x3
  40c2c1:	aaa    
  40c2c2:	jl     0x40c27a
  40c2c4:	mov    eax,DWORD PTR [ecx-0x7f]
  40c2c7:	clc    
  40c2c8:	jmp    0x8f154968
  40c2cd:	mov    WORD PTR [ecx+0x2d],es
  40c2d0:	cli    
  40c2d1:	(bad)  
  40c2d2:	aad    0x77
  40c2d4:	popf   
  40c2d5:	and    esi,DWORD PTR [ebx-0x3a]
  40c2d8:	mov    esp,eax
  40c2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2db:	nop
  40c2dc:	adc    eax,0x5ab7c434
  40c2e1:	out    dx,al
  40c2e2:	out    dx,al
  40c2e3:	(bad)  
  40c2e4:	shl    DWORD PTR ds:0xab7c216f,1
  40c2ea:	inc    ebp
  40c2eb:	jmp    0xfb24:0xdf1e
  40c2f1:	cld    
  40c2f2:	loopne 0x40c2f5
  40c2f4:	mov    ebx,0xe0289d96
  40c2f9:	sar    DWORD PTR [ebp+0x3b],1
  40c2fc:	jl     0x40c336
  40c2fe:	inc    edi
  40c2ff:	xchg   edx,eax
  40c300:	cmp    eax,0xe28652ce
  40c305:	push   0xcb2614d1
  40c30a:	push   0x492dc88d
  40c30f:	(bad)  
  40c310:	shr    al,1
  40c312:	or     BYTE PTR [ebx+ebp*8+0x713163b4],cl
  40c319:	(bad)  
  40c31a:	loopne 0x40c390
  40c31c:	and    dl,BYTE PTR [eax+ebp*2]
  40c31f:	les    ebp,FWORD PTR [ebx+0x7b]
  40c322:	push   ebx
  40c323:	push   ds
  40c324:	add    eax,0x8899b78e
  40c329:	push   es
  40c32a:	ins    BYTE PTR es:[edi],dx
  40c32b:	mov    BYTE PTR [edi-0x31],bh
  40c32e:	test   eax,0x2a41c333
  40c333:	into   
  40c334:	jg     0x40c30c
  40c336:	clc    
  40c337:	dec    ebp
  40c338:	xchg   edi,eax
  40c339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33a:	in     al,dx
  40c33b:	inc    esi
  40c33d:	push   edx
  40c33e:	loopne 0x40c2db
  40c340:	out    dx,eax
  40c341:	push   edi
  40c342:	leave  
  40c343:	jge    0x40c32d
  40c345:	inc    esi
  40c346:	and    eax,0xf08da84f
  40c34b:	retf   0x8261
  40c34e:	add    DWORD PTR [ebp+0xbc45f3e],edx
  40c354:	test   eax,0x4808642
  40c359:	pop    es
  40c35a:	xor    ch,BYTE PTR [eax]
  40c35c:	pusha  
  40c35d:	and    BYTE PTR [esi+0x42],0x34
  40c361:	push   0x9aca0e6c
  40c366:	sti    
  40c367:	sbb    ecx,DWORD PTR [ebx+0x51814684]
  40c36d:	and    esp,edx
  40c36f:	stos   DWORD PTR es:[edi],eax
  40c370:	fwait
  40c371:	mov    al,ds:0xd6c74d4d
  40c376:	popa   
  40c377:	jo     0x40c358
  40c379:	mov    WORD PTR [edi],ds
  40c37b:	sbb    eax,0xce24b062
  40c380:	js     0x40c3ca
  40c382:	test   al,0xf0
  40c384:	mov    al,0x2b
  40c386:	add    al,0x4f
  40c388:	fnsave [edx+0x2c951d01]
  40c38e:	or     ebx,DWORD PTR [ecx+edx*2]
  40c391:	sbb    BYTE PTR ds:0x140d76c2,0xe
  40c398:	push   ecx
  40c399:	int    0x78
  40c39b:	xchg   edx,eax
  40c39c:	mov    bh,0xe
  40c39e:	pop    ebp
  40c39f:	or     DWORD PTR [ebx+0x3aef383b],esp
  40c3a5:	push   ebx
  40c3a6:	pop    edx
  40c3a7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c3a9:	mov    edi,DWORD PTR [esi+edx*2+0x5]
  40c3ad:	dec    esi
  40c3ae:	mov    dl,BYTE PTR [edi+0x26]
  40c3b1:	fist   DWORD PTR [di+0x3d2a]
  40c3b6:	rol    BYTE PTR [eax-0x5],1
  40c3b9:	pop    es
  40c3ba:	in     al,0x79
  40c3bc:	dec    ebx
  40c3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3be:	outs   dx,BYTE PTR ds:[esi]
  40c3bf:	jl     0x40c34a
  40c3c1:	dec    esi
  40c3c2:	ror    DWORD PTR [eax],0xd
  40c3c5:	cwde   
  40c3c6:	cdq    
  40c3c7:	or     DWORD PTR [ecx],0x8ba9cad1
  40c3cd:	jmp    0x40c3fb
  40c3cf:	xor    al,0x95
  40c3d1:	push   esp
  40c3d2:	fs jp  0x40c37b
  40c3d5:	sbb    al,BYTE PTR [ebp+0xdbe9272]
  40c3db:	mov    edi,0x83135bec
  40c3e0:	push   es
  40c3e1:	xchg   edx,eax
  40c3e2:	jns    0x40c375
  40c3e4:	sbb    ecx,ebx
  40c3e6:	sbb    eax,0xc0aaa935
  40c3eb:	in     al,dx
  40c3ec:	in     eax,0x4f
  40c3ee:	push   ds
  40c3ef:	loope  0x40c40c
  40c3f1:	sbb    esp,ecx
  40c3f3:	and    al,0xea
  40c3f5:	in     eax,dx
  40c3f6:	hlt    
  40c3f7:	jb     0x40c3d0
  40c3f9:	push   esi
  40c3fa:	cli    
  40c3fb:	dec    ecx
  40c3fc:	dec    esi
  40c3fd:	inc    esi
  40c3fe:	cdq    
  40c3ff:	pop    ss
  40c400:	popa   
  40c401:	cmp    bl,dh
  40c403:	ins    BYTE PTR es:[edi],dx
  40c404:	icebp  
  40c405:	xchg   esi,eax
  40c406:	mov    cl,0x3c
  40c408:	sub    eax,0x324d14ac
  40c40d:	jmp    0xed38:0x572d4a47
  40c414:	xor    ah,BYTE PTR [edi-0x71]
  40c417:	clc    
  40c418:	mov    edi,0xafd61175
  40c41d:	in     eax,dx
  40c41e:	cli    
  40c41f:	xor    ecx,DWORD PTR [eax-0x16]
  40c422:	or     al,0x5f
  40c424:	mov    cl,0x2a
  40c426:	sub    eax,DWORD PTR [ebx+0x44b1f00e]
  40c42c:	sub    al,0x12
  40c42e:	call   0x1e764f64
  40c433:	pop    edx
  40c434:	shl    BYTE PTR [ebp+0x76],cl
  40c437:	aaa    
  40c438:	in     al,0xf2
  40c43a:	add    BYTE PTR [eax+0xa9a4c8f],bl
  40c440:	in     eax,dx
  40c441:	lds    bp,DWORD PTR [ebp-0x4385bd4c]
  40c448:	sub    eax,0x425a8c91
  40c44d:	mov    al,ds:0x6c7f0dad
  40c452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c453:	mov    ah,0xc3
  40c455:	push   edi
  40c456:	dec    edx
  40c457:	xor    al,0xf6
  40c459:	inc    edi
  40c45a:	pop    edx
  40c45b:	dec    eax
  40c45c:	xor    eax,0xca552933
  40c461:	inc    ecx
  40c462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c463:	push   ebx
  40c464:	inc    esp
  40c465:	xchg   ebp,eax
  40c466:	push   edi
  40c467:	xor    ecx,DWORD PTR [ecx]
  40c469:	sub    ah,BYTE PTR [esi+ebp*4+0x9d137c5]
  40c470:	out    0x5b,eax
  40c472:	mul    esp
  40c474:	push   ds
  40c475:	mov    dh,0x15
  40c477:	adc    esp,ebp
  40c479:	push   ebp
  40c47a:	stos   BYTE PTR es:[edi],al
  40c47b:	mov    eax,0x72120846
  40c480:	push   eax
  40c481:	inc    ebx
  40c482:	(bad)  
  40c484:	sub    DWORD PTR [ecx-0x55],0x976f9b16
  40c48b:	add    esp,eax
  40c48d:	in     eax,dx
  40c48e:	and    DWORD PTR [edi],0xffffffd5
  40c491:	ja     0x40c507
  40c493:	push   0xffffffa9
  40c495:	mov    ebx,0x34ed5e8c
  40c49a:	fdiv   DWORD PTR ds:0xc32b924e
  40c4a0:	cdq    
  40c4a1:	add    al,0x30
  40c4a3:	cli    
  40c4a4:	dec    edi
  40c4a5:	push   es
  40c4a6:	lahf   
  40c4a7:	lea    esi,[ecx+0xc603084]
  40c4ad:	leave  
  40c4ae:	retf   
  40c4af:	push   esp
  40c4b0:	xor    DWORD PTR [ebp+0x12],esi
  40c4b3:	fisttp QWORD PTR [esp+ecx*8]
  40c4b6:	data16 out 0xe1,al
  40c4b9:	xchg   BYTE PTR [ebp+0x40],ah
  40c4bc:	aam    0x60
  40c4be:	xchg   BYTE PTR [eax-0x4cdc0de8],dh
  40c4c4:	es hlt 
  40c4c6:	jge    0x40c544
  40c4c8:	adc    DWORD PTR [ebp-0x40],ebx
  40c4cb:	xlat   BYTE PTR ds:[ebx]
  40c4cc:	jge    0x40c4d8
  40c4ce:	ret    0x77ad
  40c4d1:	jmp    0x40c516
  40c4d3:	loope  0x40c511
  40c4d5:	jg     0x40c465
  40c4d7:	jle    0x40c52d
  40c4d9:	jp     0x40c53b
  40c4db:	add    esi,DWORD PTR [ebp+ecx*2-0x2718b932]
  40c4e2:	mov    DWORD PTR [esi+ebx*4+0x70868361],ecx
  40c4e9:	xchg   ecx,eax
  40c4ea:	push   es
  40c4eb:	jne    0x40c525
  40c4ed:	jne    0x40c4be
  40c4ef:	(bad)  
  40c4f3:	jle    0x40c4b7
  40c4f5:	ins    BYTE PTR es:[edi],dx
  40c4f6:	adc    ebx,esi
  40c4f8:	xor    al,0x16
  40c4fa:	jne    0x40c554
  40c4fc:	in     eax,dx
  40c4fd:	ins    BYTE PTR es:[edi],dx
  40c4fe:	aaa    
  40c4ff:	push   0x58
  40c501:	sbb    DWORD PTR [esi],edx
  40c503:	add    bl,bl
  40c505:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  40c508:	mov    ds:0x917df104,eax
  40c50d:	(bad)  
  40c50e:	das    
  40c50f:	ds mov ebp,0xf1cc8a9f
  40c515:	pop    eax
  40c516:	shl    DWORD PTR [ebp+0x7],0x64
  40c51a:	cmp    edi,eax
  40c51c:	pop    edi
  40c51d:	mov    ah,ch
  40c51f:	or     edx,edi
  40c521:	nop
  40c522:	enter  0xb391,0x69
  40c526:	cld    
  40c527:	and    eax,0x2381a567
  40c52c:	inc    esi
  40c52d:	xor    bh,BYTE PTR ds:0x1c477495
  40c533:	jg     0x40c504
  40c535:	jb     0x40c538
  40c537:	jns    0x40c4e6
  40c539:	mov    al,0xab
  40c53b:	ror    DWORD PTR [ecx],cl
  40c53d:	fadd   QWORD PTR [edi+0x21]
  40c540:	int3   
  40c541:	aaa    
  40c542:	mov    dl,ah
  40c544:	pop    eax
  40c545:	and    BYTE PTR [ebp-0x340840e1],dl
  40c54b:	add    ebx,esi
  40c54d:	dec    edx
  40c54e:	lock test al,dh
  40c551:	aad    0x87
  40c553:	mov    ?,WORD PTR [ebx]
  40c555:	aas    
  40c556:	xlat   BYTE PTR ds:[ebx]
  40c557:	pop    eax
  40c558:	aam    0x15
  40c55a:	in     eax,dx
  40c55b:	adc    ah,BYTE PTR [edi+0x5740a570]
  40c561:	inc    ecx
  40c562:	jmp    0xc4:0x21309bac
  40c569:	std    
  40c56a:	scas   al,BYTE PTR es:[edi]
  40c56b:	xor    ah,dh
  40c56d:	fwait
  40c56e:	(bad)  
  40c56f:	lds    esi,FWORD PTR [ebx+0x5e0a9a14]
  40c575:	dec    esp
  40c576:	xor    DWORD PTR [edx+0x1d],eax
  40c579:	and    BYTE PTR [edi+eax*8],ah
  40c57c:	test   BYTE PTR [ebx+0x2317141e],al
  40c582:	ficomp DWORD PTR [ecx-0x6c]
  40c585:	xchg   DWORD PTR [ebp-0x4c],esp
  40c588:	jmp    0x472054d5
  40c58d:	mov    WORD PTR [ebp-0x44],?
  40c590:	push   esp
  40c591:	mov    BYTE PTR [ebp+ecx*1-0x7f],cl
  40c595:	sbb    dh,0xac
  40c598:	jno    0x40c522
  40c59a:	std    
  40c59b:	sub    eax,0xd3c80686
  40c5a0:	je     0x40c5c8
  40c5a2:	ficom  WORD PTR [ecx+edi*8-0x66]
  40c5a6:	in     eax,dx
  40c5a7:	mov    ah,0x3b
  40c5a9:	cmc    
  40c5aa:	push   edx
  40c5ab:	and    bl,ah
  40c5ad:	mov    dl,BYTE PTR [edx+0x57]
  40c5b0:	adc    eax,ecx
  40c5b2:	mov    edi,DWORD PTR [edx]
  40c5b4:	and    eax,0x39f17cb8
  40c5b9:	sbb    bl,al
  40c5bb:	and    DWORD PTR [esi+0x66db1975],0xd68d0a3
  40c5c5:	mov    cl,0x67
  40c5c7:	fisttp DWORD PTR [ebx-0x4dfa948e]
  40c5cd:	ss pop edi
  40c5cf:	adc    BYTE PTR [ebp+0x55c19bf1],0x8b
  40c5d6:	(bad)  [esi]
  40c5d8:	sahf   
  40c5d9:	sub    eax,DWORD PTR [ebx+0x37]
  40c5dc:	stos   DWORD PTR es:[edi],eax
  40c5dd:	jle    0x40c5a8
  40c5df:	pop    edi
  40c5e0:	push   es
  40c5e1:	ret    
  40c5e2:	jns    0x40c5c7
  40c5e4:	adc    bh,cl
  40c5e6:	cmc    
  40c5e7:	mov    edi,0x532f8dce
  40c5ec:	arpl   bx,di
  40c5ee:	or     BYTE PTR [eax-0xf5e182],bh
  40c5f4:	mov    bh,0x38
  40c5f6:	cld    
  40c5f7:	sub    edi,DWORD PTR [eax+0x73]
  40c5fa:	push   cs
  40c5fb:	ja     0x40c5a1
  40c5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fe:	sub    DWORD PTR [ebx],edx
  40c600:	push   es
  40c601:	jnp    0x40c5b1
  40c603:	sbb    DWORD PTR [esi+0x75],esi
  40c606:	nop
  40c607:	mov    dh,0x6c
  40c609:	stc    
  40c60a:	repnz data16 or al,0xf7
  40c60e:	iret   
  40c60f:	sub    ch,dl
  40c611:	clc    
  40c612:	jmp    0xd3d5:0x43b19fc1
  40c619:	add    DWORD PTR [edi-0x257a4f26],edi
  40c61f:	or     bl,bl
  40c621:	clc    
  40c622:	call   0x89c7:0x8078a3f4
  40c629:	sahf   
  40c62a:	dec    DWORD PTR [edx-0x1c]
  40c62d:	and    cl,BYTE PTR [eax]
  40c62f:	std    
  40c630:	jg     0x40c684
  40c632:	in     eax,dx
  40c633:	cwde   
  40c634:	loop   0x40c5f8
  40c636:	pop    esi
  40c637:	or     BYTE PTR [edi],bl
  40c639:	inc    ebp
  40c63a:	push   edx
  40c63b:	dec    ebp
  40c63c:	loope  0x40c67f
  40c63e:	pop    ds
  40c63f:	test   eax,0x30756002
  40c644:	dec    esi
  40c645:	fcom   st(5)
  40c647:	mov    dl,0xc2
  40c649:	pop    ss
  40c64a:	sub    DWORD PTR [esi+0x11b865c4],0x6
  40c651:	xchg   edx,eax
  40c652:	ficom  DWORD PTR [ecx]
  40c654:	mov    al,0x68
  40c656:	and    eax,0x16a07599
  40c65b:	sbb    al,0xc6
  40c65d:	adc    DWORD PTR [edi-0xcc5d327],ebp
  40c663:	push   0x3e
  40c665:	test   BYTE PTR [esi-0x6a],cl
  40c668:	lock in al,0xb2
  40c66b:	and    DWORD PTR [edi+0x6279b84a],ebx
  40c671:	mov    ebx,0xe9ddb084
  40c676:	pop    esp
  40c677:	outs   dx,BYTE PTR ds:[esi]
  40c678:	cli    
  40c679:	shr    DWORD PTR [esi+0x72],1
  40c67c:	std    
  40c67d:	ret    
  40c67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c67f:	mov    al,ds:0xcefdd55b
  40c684:	mov    ch,0x32
  40c686:	dec    ebx
  40c687:	sahf   
  40c688:	leave  
  40c689:	ins    DWORD PTR es:[edi],dx
  40c68a:	outs   dx,DWORD PTR ds:[esi]
  40c68b:	xlat   BYTE PTR ds:[ebx]
  40c68c:	loopne 0x40c709
  40c68e:	xchg   edx,eax
  40c68f:	idiv   DWORD PTR [edi]
  40c691:	sbb    BYTE PTR [eax],dh
  40c693:	jp     0x40c62f
  40c695:	or     esp,esp
  40c697:	fld1   
  40c699:	cmp    dh,al
  40c69b:	sub    BYTE PTR [esi+0x2c4bd540],dh
  40c6a1:	and    al,0x80
  40c6a3:	fidiv  WORD PTR [edi]
  40c6a5:	hlt    
  40c6a6:	outs   dx,DWORD PTR ds:[esi]
  40c6a7:	fcomp  st(2)
  40c6a9:	scas   al,BYTE PTR es:[edi]
  40c6aa:	and    DWORD PTR [edi+0x79],edx
  40c6ad:	sahf   
  40c6ae:	call   FWORD PTR [edx+0x5ed7ce52]
  40c6b4:	cmp    eax,0x8adfe5dc
  40c6b9:	push   ebx
  40c6ba:	add    eax,0x58de3fbb
  40c6bf:	sti    
  40c6c0:	popa   
  40c6c1:	xchg   ebx,eax
  40c6c2:	mov    ecx,0x24388afb
  40c6c7:	lods   al,BYTE PTR ds:[esi]
  40c6c8:	popa   
  40c6c9:	mov    BYTE PTR [ebx],bh
  40c6cb:	sub    al,0x3a
  40c6cd:	or     al,0x9d
  40c6cf:	push   ebp
  40c6d0:	fdivr  DWORD PTR [edx+0x34ce7c69]
  40c6d6:	das    
  40c6d7:	mov    ah,0x64
  40c6d9:	aas    
  40c6da:	retf   0x2eb1
  40c6dd:	adc    ch,BYTE PTR [edi-0x78b966bb]
  40c6e3:	push   0xffffff98
  40c6e5:	dec    eax
  40c6e6:	es jmp 0xcc22c157
  40c6ec:	mov    eax,cs
  40c6ee:	mov    edi,0x31c56824
  40c6f3:	stos   DWORD PTR es:[edi],eax
  40c6f4:	xor    esp,DWORD PTR ds:0x678e3e5e
  40c6fa:	jne    0x40c74f
  40c6fc:	adc    al,0xeb
  40c6fe:	call   0x4aab9ee3
  40c703:	lods   al,BYTE PTR ds:[esi]
  40c704:	mov    ds,esi
  40c706:	fdiv   QWORD PTR [ebx-0x54]
  40c709:	pop    es
  40c70a:	leave  
  40c70b:	add    ch,BYTE PTR ds:0x19af9f51
  40c711:	ss jne 0x40c704
  40c714:	adc    DWORD PTR [ecx],eax
  40c716:	xchg   BYTE PTR [ebp-0x4b70f12b],ah
  40c71c:	mov    dl,0xcb
  40c71e:	mov    ?,WORD PTR [esi+ebx*2]
  40c721:	adc    dl,BYTE PTR [ecx-0x398deabd]
  40c727:	sbb    bh,dl
  40c729:	push   esi
  40c72a:	outs   dx,DWORD PTR ds:[esi]
  40c72b:	mov    edx,0xaa1a0a28
  40c730:	jecxz  0x40c6ef
  40c732:	xchg   ebx,eax
  40c733:	mov    eax,ds:0xee670a79
  40c738:	and    ebp,DWORD PTR [edi-0x4]
  40c73b:	int3   
  40c73c:	(bad)  
  40c73d:	and    cl,BYTE PTR [esi+0x5e]
  40c740:	add    dl,bh
  40c742:	or     ebx,edx
  40c744:	inc    ecx
  40c745:	int3   
  40c746:	pop    ss
  40c747:	pop    ds
  40c748:	jmp    0x23224d8c
  40c74d:	js     0x40c7af
  40c74f:	adc    DWORD PTR [ebp-0x7],0xc9dd8f9c
  40c756:	sahf   
  40c757:	dec    edi
  40c758:	adc    eax,0x5ff8f6df
  40c75d:	xchg   edi,eax
  40c75e:	sub    esp,ebx
  40c760:	adc    al,0xee
  40c762:	dec    ebx
  40c763:	int    0xc1
  40c765:	icebp  
  40c766:	or     eax,0xa65f4bf
  40c76b:	(bad)  
  40c76c:	rcl    DWORD PTR [esi+0x44f5dbd0],cl
  40c772:	mov    edx,DWORD PTR [ecx-0x2a]
  40c775:	sub    DWORD PTR [edi-0x79],edx
  40c778:	addr16 leave 
  40c77a:	mov    BYTE PTR [esi],ch
  40c77c:	or     ch,al
  40c77e:	xchg   esi,eax
  40c77f:	leave  
  40c780:	enter  0xd02b,0xd4
  40c784:	xchg   esp,eax
  40c785:	loope  0x40c7c5
  40c787:	jp     0x40c76e
  40c789:	mov    eax,cs
  40c78b:	hlt    
  40c78c:	ins    DWORD PTR es:[edi],dx
  40c78d:	outs   dx,DWORD PTR ds:[esi]
  40c78e:	inc    DWORD PTR [edx+0x6b30c58d]
  40c794:	add    DWORD PTR [esi+esi*2+0x16e4dee1],edi
  40c79b:	xchg   esi,eax
  40c79c:	add    esp,DWORD PTR [edi]
  40c79e:	std    
  40c79f:	push   esi
  40c7a0:	in     eax,dx
  40c7a1:	bound  ebx,QWORD PTR [edx]
  40c7a3:	add    bh,BYTE PTR [edi+0x4f]
  40c7a6:	in     eax,0x71
  40c7a8:	dec    ebx
  40c7a9:	sar    BYTE PTR [esp+esi*8+0x5c844e05],0xd7
  40c7b1:	arpl   WORD PTR [eax+0x4c72cb01],bp
  40c7b7:	mov    ecx,0xd8da1342
  40c7bc:	xor    edi,esi
  40c7be:	pop    ebx
  40c7bf:	mov    WORD PTR [edi-0x80],cs
  40c7c2:	ds push ebp
  40c7c4:	int3   
  40c7c5:	retf   
  40c7c6:	adc    al,0x28
  40c7c8:	loope  0x40c7dd
  40c7ca:	test   BYTE PTR [eax-0x5d],al
  40c7cd:	jbe    0x40c7a6
  40c7cf:	rol    BYTE PTR [eax+0x55],0x83
  40c7d3:	push   esp
  40c7d4:	loope  0x40c7cc
  40c7d6:	or     esi,DWORD PTR [edi+0x758e8890]
  40c7dc:	hlt    
  40c7dd:	pop    ds
  40c7de:	dec    ebp
  40c7df:	je     0x40c851
  40c7e1:	or     al,0x81
  40c7e3:	icebp  
  40c7e4:	lds    ebp,FWORD PTR [ebx+eax*8+0x6b]
  40c7e8:	push   esp
  40c7e9:	and    al,0xa3
  40c7eb:	in     al,0x8c
  40c7ed:	xor    DWORD PTR [eax+0x22],esi
  40c7f0:	adc    eax,DWORD PTR [eax-0x26]
  40c7f3:	mov    bh,0xfe
  40c7f5:	test   al,0x10
  40c7f7:	jb     0x40c811
  40c7f9:	aad    0x64
  40c7fb:	and    ebp,DWORD PTR [ecx-0x24]
  40c7fe:	inc    eax
  40c7ff:	icebp  
  40c800:	and    edi,ecx
  40c802:	push   eax
  40c804:	or     DWORD PTR [edi],ecx
  40c806:	add    edx,edi
  40c808:	xlat   BYTE PTR ds:[ebx]
  40c809:	pop    edx
  40c80a:	adc    bl,cl
  40c80c:	xor    DWORD PTR [eax-0x78],ebp
  40c80f:	sar    DWORD PTR [eax-0x6b],0x3f
  40c813:	fidiv  WORD PTR [eax]
  40c815:	aad    0x47
  40c817:	push   ds
  40c818:	fwait
  40c819:	mov    eax,ds:0x73a6c406
  40c81e:	xor    al,0xaa
  40c820:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c822:	lahf   
  40c823:	inc    ebp
  40c824:	xor    ch,BYTE PTR [edi-0x58]
  40c827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c828:	scas   eax,DWORD PTR es:[edi]
  40c829:	jmp    0x40c847
  40c82b:	retf   0x5c18
  40c82e:	jle    0x40c7d4
  40c830:	xchg   edx,eax
  40c831:	cmp    al,0xc7
  40c833:	cmp    ah,BYTE PTR [edi+0x21]
  40c836:	std    
  40c837:	and    al,0xa8
  40c839:	arpl   WORD PTR [ebp+0x73],sp
  40c83c:	add    dl,ah
  40c83e:	rol    BYTE PTR [edi-0x47da2251],1
  40c844:	mov    al,0xd6
  40c846:	mov    dl,BYTE PTR [edx+0x3c]
  40c849:	lea    edx,ds:0x712bfdb4
  40c84f:	in     al,0xe3
  40c851:	inc    eax
  40c852:	adc    eax,0xe4652877
  40c857:	rcl    DWORD PTR [ebp+eax*2-0x3982adfe],0x8d
  40c85f:	adc    bh,cl
  40c861:	sub    DWORD PTR [edi-0x4aa16e67],ebp
  40c867:	mov    bh,0xd1
  40c869:	pop    ds
  40c86a:	sub    BYTE PTR [edi+0x5c653015],dl
  40c870:	mov    esp,DWORD PTR [eax+0x3c]
  40c873:	sub    bh,ch
  40c875:	(bad)
  40c878:	dec    esi
  40c879:	fimul  DWORD PTR [ecx]
  40c87b:	call   0x6d1191c6
  40c880:	rcr    DWORD PTR [ecx-0x42],cl
  40c883:	jmp    DWORD PTR [edx-0x53cb8e0]
  40c889:	call   0x600a:0xb2386942
  40c890:	clc    
  40c891:	mov    bl,ch
  40c893:	jmp    DWORD PTR [esi+eiz*2-0x2a16ca3e]
  40c89a:	push   0x59b1384c
  40c89f:	cmp    bh,BYTE PTR [edi-0x49910a9e]
  40c8a5:	pop    edx
  40c8a6:	pop    ss
  40c8a7:	jno    0x40c8dc
  40c8a9:	pop    esi
  40c8aa:	fwait
  40c8ab:	arpl   WORD PTR [esp+eax*1+0x2b],cx
  40c8af:	mov    ah,BYTE PTR [ebx]
  40c8b1:	mov    ch,0x88
  40c8b3:	mov    ah,0x10
  40c8b5:	pop    ebp
  40c8b6:	retf   
  40c8b7:	popf   
  40c8b8:	pop    eax
  40c8b9:	clc    
  40c8ba:	and    al,0x24
  40c8bc:	adc    esp,DWORD PTR [esi+ebp*4-0x5f6ad6e9]
  40c8c3:	or     esi,esi
  40c8c5:	fisub  DWORD PTR [esi+0x72]
  40c8c8:	fwait
  40c8c9:	lea    edx,[edx]
  40c8cb:	int    0x60
  40c8cd:	sbb    al,0x17
  40c8cf:	out    dx,al
  40c8d0:	sar    BYTE PTR [eax],cl
  40c8d2:	lods   al,BYTE PTR ds:[esi]
  40c8d3:	or     DWORD PTR [ebp-0x2d],edi
  40c8d6:	jo     0x40c900
  40c8d8:	pop    ecx
  40c8d9:	hlt    
  40c8da:	jno    0x40c875
  40c8dc:	in     al,dx
  40c8dd:	mov    ecx,0xe99e734c
  40c8e2:	pop    ss
  40c8e3:	stos   BYTE PTR es:[edi],al
  40c8e4:	push   cs
  40c8e5:	frstor [edi+0x5]
  40c8e8:	mov    dl,0xa8
  40c8ea:	leave  
  40c8eb:	lahf   
  40c8ec:	push   eax
  40c8ed:	nop
  40c8ee:	imul   ecx,DWORD PTR [edi+0x6e817f48],0x973ced3
  40c8f8:	mov    edx,0x21599567
  40c8fd:	lahf   
  40c8fe:	outs   dx,BYTE PTR ds:[esi]
  40c8ff:	rcl    BYTE PTR [ecx-0x4ffe86a],cl
  40c905:	sti    
  40c906:	or     al,bl
  40c908:	xor    eax,0x95dedfb6
  40c90d:	or     BYTE PTR ds:0x76f36c5e,ah
  40c913:	fnstsw WORD PTR [ecx]
  40c915:	scas   al,BYTE PTR es:[edi]
  40c916:	cli    
  40c917:	fcmovnb st,st(2)
  40c919:	mov    al,0x87
  40c91b:	jle    0x40c8c4
  40c91d:	sbb    al,0xba
  40c91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c920:	pushf  
  40c921:	cwde   
  40c922:	sbb    DWORD PTR [eax+edx*2-0x39],eax
  40c926:	popfw  
  40c928:	stc    
  40c929:	lds    esp,FWORD PTR [bx+di]
  40c92c:	cmp    esp,ebp
  40c92e:	mov    al,0x76
  40c930:	sub    eax,0xb4113a42
  40c935:	mov    ah,0x1c
  40c937:	les    esi,FWORD PTR [ecx+0x4c]
  40c93a:	lahf   
  40c93b:	out    dx,eax
  40c93c:	adc    bh,BYTE PTR [esp+eiz*2-0x3b]
  40c940:	and    bl,BYTE PTR [ecx]
  40c942:	xlat   BYTE PTR ds:[ebx]
  40c943:	addr16 loope 0x40c904
  40c946:	(bad)  
  40c947:	dec    edx
  40c948:	rol    DWORD PTR [edx-0x6b],1
  40c94b:	inc    esp
  40c94c:	sbb    al,0x37
  40c94e:	jp     0x40c95b
  40c950:	leave  
  40c951:	jle    0x40c97a
  40c953:	in     al,0x9a
  40c955:	dec    edx
  40c956:	sub    BYTE PTR [ebp-0x668b698c],cl
  40c95c:	dec    edi
  40c95d:	out    0xf4,al
  40c95f:	mov    ds,WORD PTR [edi+0x72]
  40c962:	xchg   ebp,eax
  40c963:	repz repnz adc BYTE PTR [esi],bh
  40c967:	push   0x40
  40c969:	fs rcl bl,0x32
  40c96d:	clc    
  40c96e:	repz je 0x40c9d3
  40c971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c972:	or     cl,BYTE PTR [ebx+0x4a]
  40c975:	out    dx,al
  40c976:	call   0xebb8:0xe66cca1d
  40c97d:	out    dx,al
  40c97e:	xchg   edx,eax
  40c97f:	cmp    BYTE PTR [ebx+0xce98b96],0x86
  40c986:	sbb    BYTE PTR [ebp+0x58],ah
  40c989:	inc    esi
  40c98a:	loopne 0x40c915
  40c98c:	jmp    0xccda802a
  40c991:	(bad)  
  40c992:	and    cl,BYTE PTR [esi+edi*2-0x5d]
  40c996:	fst    QWORD PTR ds:0x5e9a553c
  40c99c:	mov    eax,ds:0x68eb832b
  40c9a1:	out    dx,al
  40c9a2:	addr16 and eax,0x4b73af8b
  40c9a8:	mov    ebp,DWORD PTR [eax]
  40c9aa:	pop    es
  40c9ab:	ins    BYTE PTR es:[edi],dx
  40c9ac:	imul   edx,ebp,0x6
  40c9af:	div    esi
  40c9b1:	push   eax
  40c9b2:	mov    edx,0xc97a568c
  40c9b7:	repz sub eax,0x78ce37fb
  40c9bd:	mov    dh,0xd8
  40c9bf:	call   DWORD PTR [edx+0x31]
  40c9c2:	test   eax,0x530ffb4f
  40c9c7:	lods   eax,DWORD PTR ds:[esi]
  40c9c8:	outs   dx,BYTE PTR ds:[esi]
  40c9c9:	mov    ch,0xd6
  40c9cb:	retf   0xaec8
  40c9ce:	xchg   edi,eax
  40c9cf:	and    BYTE PTR [edi+0x5268b4c],0xae
  40c9d6:	sub    DWORD PTR [esp+ebx*1+0x1f],esi
  40c9da:	and    esp,DWORD PTR [edi+0x68]
  40c9dd:	or     eax,0x73e03924
  40c9e2:	lds    ebx,FWORD PTR [edi]
  40c9e4:	pusha  
  40c9e5:	jmp    0xd3f200c
  40c9ea:	lea    esi,[ebx+ebp*4]
  40c9ed:	mul    BYTE PTR [ebp-0x3bf9d859]
  40c9f3:	bnd jmp 0x40c976
  40c9f6:	stos   BYTE PTR es:[edi],al
  40c9f7:	ss cmp esi,ecx
  40c9fa:	jbe    0x40ca25
  40c9fc:	mov    ds:0xf6c89767,eax
  40ca01:	mov    eax,ds:0xe0130177
  40ca06:	fbstp  TBYTE PTR [ebx]
  40ca08:	mov    ecx,0x71e8daeb
  40ca0d:	fs in  eax,0x73
  40ca10:	jae    0x40c9e4
  40ca12:	adc    esi,ebx
  40ca14:	push   ecx
  40ca15:	lods   al,BYTE PTR ds:[esi]
  40ca16:	fld    DWORD PTR ds:[edx-0x44]
  40ca1a:	test   BYTE PTR [edx],bl
  40ca1c:	xchg   ebp,eax
  40ca1d:	dec    esi
  40ca1e:	aam    0x66
  40ca20:	stc    
  40ca21:	and    eax,0xab520057
  40ca26:	setae  BYTE PTR [ecx]
  40ca29:	out    dx,eax
  40ca2a:	loope  0x40ca4e
  40ca2c:	inc    eax
  40ca2d:	je     0x40ca8d
  40ca2f:	sub    BYTE PTR [edx-0x3fb0d041],al
  40ca35:	nop
  40ca36:	and    ch,BYTE PTR [ebx-0x6e]
  40ca39:	and    bh,cl
  40ca3b:	js     0x40ca06
  40ca3d:	jp     0x40ca9b
  40ca3f:	xchg   BYTE PTR [esi+ecx*8-0x7bbac4bb],dl
  40ca46:	and    BYTE PTR [eax-0x64],ch
  40ca49:	mov    ds:0x4b0e1954,eax
  40ca4e:	stc    
  40ca4f:	jnp    0x40ca14
  40ca51:	fistp  DWORD PTR [edi]
  40ca53:	stos   BYTE PTR es:[edi],al
  40ca54:	push   0xad82ee4a
  40ca59:	jnp    0x40c9f2
  40ca5b:	sbb    ebx,DWORD PTR [ecx+eiz*1-0x291dfcaa]
  40ca62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca63:	xchg   esp,eax
  40ca64:	lahf   
  40ca65:	clc    
  40ca66:	adc    al,BYTE PTR [ecx-0x40770c0d]
  40ca6c:	in     eax,dx
  40ca6d:	pop    eax
  40ca6e:	rcr    edx,cl
  40ca70:	cdq    
  40ca71:	sub    ebx,DWORD PTR [edx-0xa]
  40ca74:	shr    DWORD PTR [ecx],1
  40ca76:	loope  0x40ca73
  40ca78:	sti    
  40ca79:	in     al,0x31
  40ca7b:	iret   
  40ca7c:	lods   eax,DWORD PTR ds:[esi]
  40ca7d:	inc    esi
  40ca7e:	rcr    esi,cl
  40ca80:	cld    
  40ca81:	loope  0x40cac1
  40ca83:	xchg   edi,eax
  40ca84:	mov    edx,0xcb9705cc
  40ca89:	add    BYTE PTR [ecx+esi*1],dh
  40ca8c:	jae    0x40caf5
  40ca8e:	xchg   ebp,eax
  40ca8f:	pushf  
  40ca90:	out    dx,al
  40ca91:	push   esp
  40ca92:	js     0x40ca14
  40ca94:	cmp    BYTE PTR [esp+eax*1+0x37a6df2b],dh
  40ca9b:	push   0x32
  40ca9d:	pushf  
  40ca9e:	dec    edi
  40ca9f:	or     bl,BYTE PTR [ebx+0x67]
  40caa2:	fs jae 0x40ca6b
  40caa5:	and    bh,BYTE PTR [edi+0x44424109]
  40caab:	sbb    ecx,0xbc48f25b
  40cab1:	inc    ecx
  40cab2:	cld    
  40cab3:	test   edx,ecx
  40cab5:	dec    ebx
  40cab6:	fcom   st(1)
  40cab8:	sbb    BYTE PTR [ebp-0x2],al
  40cabb:	xchg   dl,bh
  40cabd:	sbb    DWORD PTR [ebx],0x30
  40cac0:	sub    DWORD PTR [edx+0x28],esp
  40cac3:	jnp    0x40cb34
  40cac5:	mov    WORD PTR [ebx+0x34],es
  40cac8:	push   ebp
  40cac9:	sbb    al,0xf6
  40cacb:	sub    BYTE PTR [edx-0x6499b0e9],cl
  40cad1:	vprotd xmm9,xmm7,0xba
  40cad7:	pop    ss
  40cad8:	sbb    eax,0x6242ede5
  40cadd:	push   ax
  40cadf:	and    al,0xbf
  40cae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae3:	nop
  40cae4:	cmp    DWORD PTR [edi],eax
  40cae6:	mov    ah,BYTE PTR ds:0x9300c41f
  40caec:	pushf  
  40caed:	push   edx
  40caee:	jns    0x40ca75
  40caf0:	data16 fnstcw WORD PTR [edi+0xe]
  40caf4:	add    BYTE PTR [eax+0x46b49fa9],bh
  40cafa:	pop    es
  40cafb:	sbb    eax,0x48eec1b9
  40cb00:	xchg   esi,eax
  40cb01:	push   0xf60581e2
  40cb06:	fisttp DWORD PTR ds:0x536b9c41
  40cb0c:	xor    esp,DWORD PTR [edi]
  40cb0e:	sbb    al,0x2e
  40cb10:	pop    ecx
  40cb11:	or     eax,0xcef5ad93
  40cb16:	pop    bp
  40cb18:	(bad)  
  40cb19:	(bad)  [ecx+0x35]
  40cb1c:	push   edi
  40cb1d:	fidiv  DWORD PTR [ecx+ebp*4-0x71]
  40cb21:	pop    esp
  40cb22:	in     eax,0xca
  40cb24:	popf   
  40cb25:	popf   
  40cb26:	icebp  
  40cb27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb28:	pop    esp
  40cb29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb2a:	fldcw  WORD PTR [ebp+0x2729e7e]
  40cb30:	push   ebp
  40cb31:	push   ebp
  40cb32:	and    esp,DWORD PTR [esi-0x6b2592bd]
  40cb38:	mov    eax,0x441cccc3
  40cb3d:	dec    esi
  40cb3e:	pop    esi
  40cb3f:	cmp    DWORD PTR [edi-0x6f941d5d],0x0
  40cb46:	dec    ebx
  40cb47:	jge    0x40cb97
  40cb49:	int3   
  40cb4a:	shl    BYTE PTR ds:0x31ea6853,cl
  40cb50:	lock (bad) 
  40cb52:	(bad)  
  40cb53:	in     eax,dx
  40cb54:	iret   
  40cb55:	int    0x67
  40cb57:	push   eax
  40cb58:	push   ebp
  40cb59:	sub    DWORD PTR [edi+0x5a],edx
  40cb5c:	xor    esi,DWORD PTR [ebp-0x3c]
  40cb5f:	stos   DWORD PTR es:[edi],eax
  40cb60:	test   eax,0x7771828d
  40cb65:	push   eax
  40cb66:	sub    ebx,DWORD PTR [ecx+0x41df6a6e]
  40cb6c:	xchg   esp,eax
  40cb6d:	push   cs
  40cb6e:	adc    BYTE PTR [edi-0x619b1e74],dl
  40cb74:	mov    bl,0x65
  40cb76:	xchg   esp,eax
  40cb77:	enter  0x8a5d,0x5e
  40cb7b:	push   edx
  40cb7c:	hlt    
  40cb7d:	out    0xef,eax
  40cb7f:	retf   
  40cb80:	inc    edi
  40cb81:	push   es
  40cb82:	cli    
  40cb83:	inc    esp
  40cb84:	lahf   
  40cb85:	neg    ecx
  40cb87:	add    dh,BYTE PTR [esp+ecx*8-0x67]
  40cb8b:	scas   eax,DWORD PTR es:[edi]
  40cb8c:	cmp    BYTE PTR [eax+0x14f839ee],cl
  40cb92:	dec    BYTE PTR ss:[ecx-0x1faaee63]
  40cb99:	xor    bl,0xda
  40cb9c:	sbb    BYTE PTR ds:0x1cb6e44c,bh
  40cba2:	es sbb eax,0x1702b581
  40cba8:	add    DWORD PTR [edx-0x2d162c91],esi
  40cbae:	sbb    DWORD PTR [ecx-0x91f72fe],esp
  40cbb4:	jge    0x40cbb1
  40cbb6:	jo     0x40cbfa
  40cbb8:	sbb    eax,0xaef5265e
  40cbbd:	sub    BYTE PTR [esi+0x72],cl
  40cbc0:	and    DWORD PTR [edi+eiz*8+0x5c],0xffffff8d
  40cbc5:	mov    eax,0x8ed20033
  40cbca:	mov    esp,0xb292d635
  40cbcf:	xchg   BYTE PTR [edx],ah
  40cbd1:	aas    
  40cbd2:	jp     0x40cba9
  40cbd4:	out    0xa3,al
  40cbd6:	jne    0x40cc37
  40cbd8:	mov    ah,0xf
  40cbda:	mov    al,ds:0xefbdbb97
  40cbdf:	enter  0xd90b,0x88
  40cbe3:	rcl    DWORD PTR [esi+0x71089146],0x33
  40cbea:	out    dx,al
  40cbeb:	fwait
  40cbec:	imul   edi,DWORD PTR [edi+0x2185ed54],0xa26a43aa
  40cbf6:	xor    al,0x16
  40cbf8:	mov    esi,DWORD PTR [edx+ebx*2+0x14]
  40cbfc:	mov    ds:0xb06bbddd,al
  40cc01:	cs int3 
  40cc03:	std    
  40cc04:	add    eax,0xeb1d156e
  40cc09:	ss ins DWORD PTR es:[edi],dx
  40cc0b:	sbb    eax,0xe1295087
  40cc10:	cwde   
  40cc11:	jmp    0xc6b93da5
  40cc16:	push   esp
  40cc17:	pop    esp
  40cc18:	bound  edi,QWORD PTR [ecx]
  40cc1a:	xchg   esp,eax
  40cc1b:	mov    dl,0x9e
  40cc1d:	retf   0x960d
  40cc20:	(bad)  
  40cc21:	xor    al,0xf8
  40cc23:	push   0xa1e26a14
  40cc28:	mov    ds:0x633f9764,eax
  40cc2d:	(bad)  
  40cc2e:	loope  0x40cc5b
  40cc30:	and    dl,al
  40cc32:	push   ecx
  40cc33:	add    edi,DWORD PTR [edx]
  40cc35:	lds    edx,FWORD PTR [ecx]
  40cc37:	mov    cl,0x6a
  40cc39:	pusha  
  40cc3a:	jno    0x40cbbf
  40cc3c:	mov    al,ds:0x404445d5
  40cc41:	mov    BYTE PTR [esi-0x143cedfb],0xee
  40cc48:	mov    WORD PTR [ebx],?
  40cc4a:	adc    esp,esi
  40cc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc4d:	adc    edi,DWORD PTR [edx]
  40cc4f:	bound  eax,QWORD PTR [edi+0x58]
  40cc52:	outs   dx,BYTE PTR ds:[esi]
  40cc53:	lds    ecx,FWORD PTR [esi+edi*1]
  40cc56:	xor    edx,eax
  40cc58:	mov    al,0x95
  40cc5a:	iret   
  40cc5b:	sbb    ebp,DWORD PTR [esp+ebx*2+0x4b45e593]
  40cc62:	lea    ebx,[ebx]
  40cc64:	push   ecx
  40cc65:	pop    eax
  40cc66:	mov    edx,0xffeb3b2
  40cc6b:	push   ss
  40cc6c:	pop    ss
  40cc6d:	inc    ebx
  40cc6e:	push   esi
  40cc6f:	jl     0x40cc89
  40cc71:	and    DWORD PTR [ecx],0x6b
  40cc74:	mov    BYTE PTR [esi+0x23],0x87
  40cc78:	icebp  
  40cc79:	and    BYTE PTR [edi],al
  40cc7b:	int    0xf4
  40cc7d:	daa    
  40cc7e:	push   ss
  40cc7f:	add    edi,DWORD PTR [edx+eax*2+0x7ab7ca5a]
  40cc86:	mov    ebx,0x99637816
  40cc8b:	mov    esi,0xf96c5afa
  40cc90:	xor    ch,BYTE PTR [edx+ebp*4+0x62]
  40cc94:	lods   al,BYTE PTR ds:[esi]
  40cc95:	mov    ds:0x1165e7f3,eax
  40cc9a:	and    ebx,DWORD PTR [esi+0x65]
  40cc9d:	and    al,0x69
  40cc9f:	pop    esp
  40cca0:	xlat   BYTE PTR ds:[ebx]
  40cca1:	pop    ss
  40cca2:	or     BYTE PTR [ecx+esi*1+0x1a],bl
  40cca6:	inc    esi
  40cca7:	int3   
  40cca8:	daa    
  40cca9:	inc    ecx
  40ccaa:	test   al,0x9
  40ccac:	xchg   edi,eax
  40ccad:	inc    eax
  40ccae:	fadd   QWORD PTR [eax-0x5a]
  40ccb1:	int3   
  40ccb2:	dec    esp
  40ccb3:	xor    DWORD PTR ds:0x2d34edc,ebp
  40ccb9:	sahf   
  40ccba:	mov    ebx,0x5dbc12b
  40ccbf:	mov    ch,0xe6
  40ccc1:	pop    eax
  40ccc2:	leavew 
  40ccc4:	sbb    dh,ah
  40ccc6:	dec    ecx
  40ccc7:	lahf   
  40ccc8:	mov    esi,0xe25c97bf
  40cccd:	mov    eax,ds:0x256717d6
  40ccd3:	add    DWORD PTR [eax+0x60],ebx
  40ccd6:	xor    ebx,edi
  40ccd8:	pop    es
  40ccd9:	shl    DWORD PTR [edi],0xa6
  40ccdc:	add    esp,ecx
  40ccde:	fist   WORD PTR [edi+0x69d44d22]
  40cce4:	fs cli 
  40cce6:	lods   al,BYTE PTR ds:[esi]
  40cce7:	inc    ebp
  40cce8:	nop
  40cce9:	jb     0x40cca5
  40cceb:	or     dh,BYTE PTR [edi+0x20]
  40ccee:	jo     0x40cd59
  40ccf0:	sti    
  40ccf1:	ja     0x40ccab
  40ccf3:	sbb    eax,0xcee9f96c
  40ccf8:	pop    eax
  40ccf9:	jae    0x40cc8a
  40ccfb:	dec    edx
  40ccfc:	xor    al,0x14
  40ccfe:	xor    bl,BYTE PTR [ecx]
  40cd00:	popf   
  40cd01:	aad    0x86
  40cd03:	jmp    0x38f7ea14
  40cd08:	test   al,0x12
  40cd0a:	xor    eax,DWORD PTR [ecx-0x2cf34ee3]
  40cd10:	sub    edx,DWORD PTR [eax+0x62ddddee]
  40cd16:	sti    
  40cd17:	mov    edx,0x7ab003ed
  40cd1c:	fldlg2 
  40cd1e:	in     al,dx
  40cd1f:	imul   BYTE PTR [edx+0x3cc49589]
  40cd25:	push   edx
  40cd26:	lods   eax,DWORD PTR ds:[esi]
  40cd27:	jnp    0x40ccd0
  40cd29:	mov    esp,DWORD PTR [ebp-0x67a338c4]
  40cd2f:	in     al,0xca
  40cd31:	sahf   
  40cd32:	sahf   
  40cd33:	mov    al,0x5b
  40cd35:	into   
  40cd36:	pop    edx
  40cd37:	ds push ds
  40cd39:	push   ecx
  40cd3a:	inc    edx
  40cd3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3c:	ficom  WORD PTR [ebx]
  40cd3e:	dec    esi
  40cd3f:	arpl   WORD PTR [eax],ax
  40cd41:	inc    ebx
  40cd42:	mov    eax,0x80a26172
  40cd47:	lds    esp,FWORD PTR [ebx]
  40cd49:	not    DWORD PTR es:[esi]
  40cd4c:	aas    
  40cd4d:	lds    edi,FWORD PTR [esp+esi*8]
  40cd50:	ror    eax,1
  40cd52:	pop    esi
  40cd53:	not    BYTE PTR [eax]
  40cd55:	sub    al,0x20
  40cd57:	fisub  WORD PTR [edi+0x4bef1fa0]
  40cd5d:	jmp    0x879e:0x73e64a98
  40cd64:	mov    ebp,0xc176d928
  40cd69:	ror    eax,0x68
  40cd6c:	pop    esi
  40cd6d:	sti    
  40cd6e:	cdq    
  40cd6f:	dec    esp
  40cd70:	dec    edx
  40cd71:	fcom   QWORD PTR [esi]
  40cd73:	add    esp,DWORD PTR [edx]
  40cd75:	dec    esi
  40cd76:	sub    al,0x9e
  40cd78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd79:	dec    ebx
  40cd7a:	fwait
  40cd7b:	enter  0x4dea,0x35
  40cd7f:	in     al,0xb
  40cd81:	call   FWORD PTR [ecx+0x229f518d]
  40cd87:	sbb    ch,BYTE PTR [edi+0x12]
  40cd8a:	es xor edi,esp
  40cd8d:	test   al,0xc2
  40cd8f:	pop    ss
  40cd90:	xchg   ebx,eax
  40cd91:	aad    0x4a
  40cd93:	xchg   edi,eax
  40cd94:	aas    
  40cd95:	call   0x4c7b:0xf86aab0e
  40cd9c:	out    0x34,al
  40cd9e:	mov    al,0x80
  40cda0:	or     dh,BYTE PTR [esi-0x6cbc6fcd]
  40cda6:	pop    edi
  40cda7:	sbb    eax,0xc1817745
  40cdac:	dec    edi
  40cdad:	stos   DWORD PTR es:[edi],eax
  40cdae:	ss push esp
  40cdb0:	fstp   st(0)
  40cdb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb3:	ret    
  40cdb4:	js     0x40ce1b
  40cdb6:	aad    0xc5
  40cdb8:	cmp    ah,dh
  40cdba:	mov    ecx,0x7a24e0ca
  40cdbf:	imul   DWORD PTR [ecx+0x6d]
  40cdc2:	loopne 0x40ce2a
  40cdc4:	iret   
  40cdc5:	jo     0x40cda0
  40cdc7:	inc    ebp
  40cdc8:	popf   
  40cdc9:	shr    edx,cl
  40cdcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcc:	repnz shl ebx,1
  40cdcf:	test   eax,0x8b5f751a
  40cdd4:	mov    eax,0x62b309f4
  40cdd9:	test   eax,0xfec0a43a
  40cdde:	adc    BYTE PTR [edx-0x6ad37d3d],dl
  40cde4:	xchg   DWORD PTR [eax-0xc],ebp
  40cde7:	shl    DWORD PTR [ecx-0x6e19e882],0xff
  40cdee:	ja     0x40cdb3
  40cdf0:	jp     0x40cd81
  40cdf2:	stc    
  40cdf3:	cmp    DWORD PTR [ecx+0x9895678],ebx
  40cdf9:	dec    ebx
  40cdfa:	repnz (bad) 
  40cdfc:	add    cl,cl
  40cdfe:	jmp    0x40ce14
  40ce00:	imul   esi,DWORD PTR [eax],0x2337b0eb
  40ce06:	sbb    esp,DWORD PTR ds:0x604ccd70
  40ce0c:	(bad)  
  40ce0e:	xor    edi,edi
  40ce10:	sub    edx,ebp
  40ce12:	jg     0x40cdbd
  40ce14:	cmc    
  40ce15:	adc    al,0xa2
  40ce17:	sbb    al,0xc2
  40ce19:	pop    esi
  40ce1a:	call   0x2f930eeb
  40ce1f:	ror    DWORD PTR [ebx+ebx*1-0x39],1
  40ce23:	fcmovnbe st,st(1)
  40ce25:	leave  
  40ce26:	sub    eax,0x6ede2187
  40ce2b:	lds    ebx,FWORD PTR [esp+ecx*8+0x339282c5]
  40ce32:	out    0xad,al
  40ce34:	lea    esp,[edx+ebx*4-0x65]
  40ce38:	fucomip st,st(0)
  40ce3a:	std    
  40ce3b:	and    ebx,eax
  40ce3d:	int    0x2d
  40ce3f:	push   edi
  40ce40:	xchg   ebx,eax
  40ce41:	push   ebp
  40ce42:	inc    eax
  40ce43:	mov    ecx,0xa6e486de
  40ce48:	jns    0x40ce30
  40ce4a:	imul   esi,DWORD PTR [eax-0xa],0x2f
  40ce4e:	sub    dh,BYTE PTR gs:[esi]
  40ce51:	jnp    0x40ce7c
  40ce53:	stos   BYTE PTR es:[edi],al
  40ce54:	xor    esi,DWORD PTR [edi]
  40ce56:	jmp    0x40cea7
  40ce58:	test   DWORD PTR [esi+0x5c],ebp
  40ce5b:	push   es
  40ce5c:	jmp    FWORD PTR [ebx]
  40ce5e:	sub    DWORD PTR [ecx+0x4c2446fe],0x3c5653c1
  40ce68:	mov    bl,0x9b
  40ce6a:	stos   BYTE PTR es:[edi],al
  40ce6b:	pop    esi
  40ce6c:	outs   dx,BYTE PTR ds:[esi]
  40ce6d:	in     al,dx
  40ce6e:	stc    
  40ce6f:	jge    0x40ce7a
  40ce71:	(bad)  
  40ce72:	cmp    cl,BYTE PTR [esi]
  40ce74:	push   ebx
  40ce75:	jmp    0xb001:0x8785bb4
  40ce7c:	or     eax,0x732ded2
  40ce81:	dec    edx
  40ce82:	dec    edi
  40ce83:	(bad)
  40ce86:	add    DWORD PTR [ebx+0x32682ce1],0xb2abc69f
  40ce90:	stos   BYTE PTR es:[edi],al
  40ce91:	cli    
  40ce92:	jne    0x40ce3b
  40ce94:	nop
  40ce95:	cld    
  40ce96:	push   cs
  40ce97:	inc    ebp
  40ce98:	lea    esi,[esp+ecx*2+0x194fd0c7]
  40ce9f:	cs jp  0x40ce7a
  40cea2:	jmp    0x8ef4:0x73fd2c9a
  40cea9:	cs push ebp
  40ceab:	sub    DWORD PTR [ecx+0x72],ebx
  40ceae:	jne    0x40cf16
  40ceb0:	mov    bh,0x38
  40ceb2:	icebp  
  40ceb3:	gs xchg esi,eax
  40ceb5:	scas   eax,DWORD PTR es:[edi]
  40ceb6:	xchg   edx,eax
  40ceb7:	ret    
  40ceb8:	arpl   WORD PTR [esi+ebx*1+0x19],di
  40cebc:	out    0xe1,al
  40cebe:	cmp    BYTE PTR [ecx],dl
  40cec0:	or     ch,BYTE PTR [edi+0x6b0bd8cf]
  40cec6:	js     0x40cea0
  40cec8:	jmp    edi
  40ceca:	enter  0x6ac5,0x65
  40cece:	stos   DWORD PTR es:[edi],eax
  40cecf:	call   0xa1d3:0x4634c284
  40ced6:	imul   ecx,DWORD PTR [edi+ecx*8+0x165f5582],0x41
  40cede:	fdivr  QWORD PTR [ecx+0x5b]
  40cee1:	cmp    al,0x11
  40cee3:	add    BYTE PTR [edx],0xad
  40cee6:	sub    bh,BYTE PTR [esi+0xf]
  40cee9:	sar    BYTE PTR [edi],cl
  40ceeb:	jle    0x40cedd
  40ceed:	adc    BYTE PTR [eax-0x61cce2c5],dh
  40cef3:	fs test al,0xb0
  40cef6:	jns    0x40ceae
  40cef8:	mov    ebp,0x7cdef9d2
  40cefd:	sub    esi,DWORD PTR [ebp-0x41]
  40cf00:	repnz sub esp,esp
  40cf03:	or     esp,DWORD PTR [ebp+0x68]
  40cf06:	pop    eax
  40cf07:	pop    ebx
  40cf08:	ficom  DWORD PTR [ebx-0x42]
  40cf0b:	jg     0x40cf40
  40cf0d:	inc    edi
  40cf0e:	in     al,dx
  40cf0f:	pop    ss
  40cf10:	lods   al,BYTE PTR ds:[esi]
  40cf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf12:	std    
  40cf13:	xchg   edi,eax
  40cf14:	push   eax
  40cf15:	mov    bl,BYTE PTR [edx]
  40cf17:	daa    
  40cf18:	or     edx,DWORD PTR fs:[ebx-0x5271f309]
  40cf1f:	cmp    BYTE PTR [eax-0x531397e0],cl
  40cf25:	popf   
  40cf26:	stos   DWORD PTR es:[edi],eax
  40cf27:	sub    DWORD PTR [ebx+0x58],0xffffffef
  40cf2b:	fidiv  WORD PTR [eax-0x2b]
  40cf2e:	jnp    0x40cf12
  40cf30:	sub    eax,0xa73fcea2
  40cf35:	ficomp WORD PTR [edi+0x71d15eac]
  40cf3b:	or     edx,DWORD PTR [ecx+0x4509f3f4]
  40cf41:	push   esp
  40cf42:	inc    edx
  40cf43:	pop    es
  40cf44:	push   edi
  40cf45:	cld    
  40cf46:	lock or eax,edx
  40cf49:	rcl    BYTE PTR [edi+edx*8],cl
  40cf4c:	dec    ecx
  40cf4d:	retf   0xb93d
  40cf50:	dec    ebx
  40cf51:	jg     0x40cedc
  40cf53:	inc    ebp
  40cf54:	imul   ebp,edi,0x56c7b034
  40cf5a:	sar    DWORD PTR [ebx],cl
  40cf5c:	out    dx,al
  40cf5d:	in     al,dx
  40cf5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf5f:	and    BYTE PTR [esp+esi*4+0x3],ch
  40cf63:	cmp    DWORD PTR [edi+0x33],eax
  40cf66:	mov    edx,0xd6f9eeba
  40cf6b:	cmp    al,al
  40cf6d:	cmp    DWORD PTR [esi],eax
  40cf6f:	leave  
  40cf70:	jae    0x40cf30
  40cf72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf73:	stc    
  40cf74:	retf   
  40cf75:	jnp    0x40cf40
  40cf77:	fdivr  DWORD PTR [esi+0x5d]
  40cf7a:	mov    edx,0x6794af5e
  40cf7f:	fist   WORD PTR [ebx-0xe415049]
  40cf85:	call   0x6012f21a
  40cf8a:	dec    esp
  40cf8b:	xlat   BYTE PTR ds:[ebx]
  40cf8c:	or     esi,eax
  40cf8e:	(bad)  [esi]
  40cf90:	daa    
  40cf91:	push   ebx
  40cf92:	rol    DWORD PTR [ebp+0x18],1
  40cf95:	pop    es
  40cf96:	add    DWORD PTR [ebx-0x3a8a57ce],ebp
  40cf9c:	mov    ebp,0x5954ce9e
  40cfa1:	and    dl,ch
  40cfa3:	mov    ds:0xc50fd0a5,al
  40cfa8:	and    eax,0x7d5284a4
  40cfad:	test   eax,0xa87d0fd4
  40cfb2:	mov    ebp,0xfda0ea91
  40cfb7:	outs   dx,BYTE PTR ds:[esi]
  40cfb8:	scas   al,BYTE PTR es:[edi]
  40cfb9:	shl    BYTE PTR [edi],1
  40cfbb:	sar    DWORD PTR [esi],0xc6
  40cfbe:	daa    
  40cfbf:	sar    BYTE PTR [edi+0x7c],cl
  40cfc2:	into   
  40cfc3:	pop    ebx
  40cfc4:	hlt    
  40cfc5:	push   0x462175f9
  40cfca:	add    cl,BYTE PTR [esp+edi*4]
  40cfcd:	or     DWORD PTR [ecx+0x35],ebp
  40cfd0:	or     BYTE PTR [esi],ch
  40cfd2:	or     BYTE PTR [esi],ah
  40cfd4:	and    al,0x82
  40cfd6:	cmp    bl,BYTE PTR [edi+0x43a551c9]
  40cfdc:	ins    BYTE PTR es:[edi],dx
  40cfdd:	inc    ecx
  40cfde:	mov    WORD PTR [edi],?
  40cfe0:	dec    edx
  40cfe1:	pushf  
  40cfe2:	sbb    BYTE PTR ds:0xd77082e5,dl
  40cfe8:	mov    BYTE PTR [eax+0x58edcd9a],bl
  40cfee:	pop    esp
  40cfef:	out    0xa0,eax
  40cff1:	enter  0xc5b3,0x76
  40cff5:	ret    
  40cff6:	aas    
  40cff7:	and    BYTE PTR [ebp-0x8],dl
  40cffa:	(bad)  
  40cffb:	fadd   st,st(5)
  40cffd:	mov    ah,0x12
  40cfff:	cmp    al,0xb4
  40d001:	leave  
  40d002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d003:	aas    
  40d004:	pop    ebx
  40d005:	xchg   ebp,eax
  40d006:	test   DWORD PTR [edi-0x2c64a163],esi
  40d00c:	(bad)  [edx-0x78ed5e2f]
  40d012:	(bad)  
  40d013:	xor    al,0x36
  40d015:	cdq    
  40d016:	loopne 0x40d005
  40d018:	(bad)  
  40d019:	jl     0x40d069
  40d01b:	xor    dh,BYTE PTR [edx]
  40d01d:	int    0xa1
  40d01f:	pop    edx
  40d020:	push   cs
  40d021:	stos   BYTE PTR es:[edi],al
  40d022:	hlt    
  40d023:	inc    esp
  40d024:	sub    BYTE PTR [edx+0x22],al
  40d027:	sahf   
  40d028:	add    DWORD PTR [esi+edx*2],eax
  40d02b:	fisub  DWORD PTR [esi]
  40d02d:	leave  
  40d02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d02f:	adc    ch,cl
  40d031:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d033:	das    
  40d034:	lods   al,BYTE PTR ds:[esi]
  40d035:	pop    esp
  40d036:	(bad)  
  40d037:	loop   0x40d075
  40d039:	cs push esp
  40d03b:	loop   0x40d0a8
  40d03d:	jno    0x40d057
  40d03f:	and    BYTE PTR [edx+0x308ca57b],cl
  40d045:	add    edi,ebp
  40d047:	jnp    0x40d01b
  40d049:	cli    
  40d04a:	xor    DWORD PTR [edx+0x21],0x60d58db5
  40d051:	popa   
  40d052:	xor    edi,edi
  40d054:	pop    ecx
  40d055:	sbb    ecx,DWORD PTR [edi-0x75efca2e]
  40d05b:	aad    0x1e
  40d05d:	test   BYTE PTR [ebx],ah
  40d05f:	dec    ebx
  40d060:	popa   
  40d061:	mov    ebx,ss
  40d063:	xchg   DWORD PTR [edi],esi
  40d065:	call   0x63c8:0xc4672fe5
  40d06c:	inc    edx
  40d06d:	fnstcw WORD PTR [ebx-0x8]
  40d070:	gs retf 
  40d072:	xchg   ebp,eax
  40d073:	add    DWORD PTR [eax-0x6bd2d3f4],esp
  40d079:	fwait
  40d07a:	mov    ecx,0x6424f7a9
  40d07f:	mov    edx,0x11f4fd73
  40d084:	sub    esi,DWORD PTR [esi]
  40d086:	add    DWORD PTR [ebp+0x65],eax
  40d089:	ins    BYTE PTR es:[edi],dx
  40d08a:	sbb    eax,0xaa0e8902
  40d08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d090:	stos   BYTE PTR es:[edi],al
  40d091:	push   esp
  40d092:	inc    eax
  40d093:	mov    ecx,DWORD PTR [eax]
  40d095:	aas    
  40d096:	mov    cl,0x29
  40d098:	mov    esi,0xaf33d626
  40d09d:	mov    esi,DWORD PTR [edx+0x2517d85b]
  40d0a3:	in     al,dx
  40d0a4:	mov    bl,0x24
  40d0a6:	pop    ebp
  40d0a7:	fld    DWORD PTR [edx+ecx*8]
  40d0aa:	cmp    al,0x3c
  40d0ac:	(bad)  
  40d0ad:	pop    ebp
  40d0ae:	add    DWORD PTR [esi],eax
  40d0b0:	in     eax,dx
  40d0b1:	push   0x3c306459
  40d0b6:	and    al,0x28
  40d0b8:	ret    
  40d0b9:	mov    BYTE PTR [esi],ah
  40d0bb:	mov    eax,ds:0xeb520ebf
  40d0c0:	ins    DWORD PTR es:[edi],dx
  40d0c1:	call   0x9a9c337e
  40d0c6:	scas   al,BYTE PTR es:[edi]
  40d0c7:	ins    DWORD PTR es:[edi],dx
  40d0c8:	xchg   bl,ch
  40d0ca:	mov    cl,BYTE PTR [ecx]
  40d0cc:	sbb    ch,ch
  40d0ce:	aaa    
  40d0cf:	sub    eax,0x670e2d6a
  40d0d4:	jae    0x40d0f9
  40d0d6:	int3   
  40d0d7:	(bad)
  40d0da:	sbb    ch,BYTE PTR [ecx-0x1b01b0fb]
  40d0e0:	ret    
  40d0e1:	mov    edi,0x8870ff8f
  40d0e6:	push   edx
  40d0e7:	adc    esp,DWORD PTR ds:0x14ac60c0
  40d0ed:	sbb    eax,0x4421bf1
  40d0f2:	repnz lock clc 
  40d0f5:	mov    cl,0x40
  40d0f7:	mov    ecx,0x2fe230a6
  40d0fc:	and    eax,0x12d4fbea
  40d101:	aad    0x9e
  40d103:	in     al,0x1c
  40d105:	sub    eax,0xa58aec3c
  40d10a:	mov    eax,ds:0x1610343c
  40d10f:	mov    ds:0xd55634f7,al
  40d114:	int3   
  40d115:	and    eax,0xeb0e4452
  40d11a:	jbe    0x40d14d
  40d11c:	xor    DWORD PTR ds:[esi+eax*8+0x7feca4d5],eax
  40d124:	loop   0x40d188
  40d126:	jnp    0x40d114
  40d128:	and    al,0x36
  40d12a:	xlat   BYTE PTR ds:[ebx]
  40d12b:	adc    eax,esp
  40d12d:	test   dh,bh
  40d12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d130:	xor    BYTE PTR [eax+0x2bd008b7],cl
  40d136:	xor    al,0x4
  40d138:	jge    0x40d139
  40d13a:	sbb    al,0x47
  40d13c:	sar    BYTE PTR [esi+edx*8+0x2883ed04],1
  40d143:	in     al,dx
  40d144:	jg     0x40d1ab
  40d146:	and    eax,0x7532d4d9
  40d14b:	adc    esi,DWORD PTR [esp+ebp*1+0x5f2fbbae]
  40d152:	fstp   QWORD PTR [ebx+eax*4]
  40d155:	inc    edi
  40d156:	xor    dh,BYTE PTR ds:0xfb3eaf59
  40d15c:	mov    esi,0xd5d121b2
  40d161:	mov    dh,0xbb
  40d163:	bswap  ecx
  40d165:	cdq    
  40d166:	jl     0x40d135
  40d168:	xchg   ecx,eax
  40d169:	sub    BYTE PTR [eax-0x12],bh
  40d16c:	fisub  DWORD PTR [edx+0x3e]
  40d16f:	jbe    0x40d0f7
  40d171:	or     DWORD PTR [ecx],ebx
  40d173:	pop    ss
  40d174:	mov    ecx,0xb9a01ef4
  40d179:	inc    ecx
  40d17a:	dec    ecx
  40d17b:	rcr    BYTE PTR [ebp+0x68f04f8a],1
  40d181:	sahf   
  40d182:	pusha  
  40d183:	push   eax
  40d184:	pop    es
  40d185:	lahf   
  40d186:	sub    ch,cl
  40d188:	neg    ah
  40d18a:	sub    al,0xa
  40d18c:	mov    esp,esi
  40d18e:	cwde   
  40d18f:	adc    eax,0x8b62a649
  40d194:	lds    eax,FWORD PTR [eax]
  40d196:	mov    esp,0x961a2b83
  40d19b:	hlt    
  40d19c:	xor    eax,0x5715670a
  40d1a1:	dec    esi
  40d1a2:	(bad)  
  40d1a3:	std    
  40d1a4:	and    esp,DWORD PTR [ebx-0x16]
  40d1a7:	outs   dx,BYTE PTR ds:[esi]
  40d1a8:	xchg   esi,eax
  40d1a9:	aas    
  40d1aa:	cmp    al,0x5d
  40d1ac:	jbe    0x40d1cf
  40d1ae:	inc    ecx
  40d1af:	cmp    dl,BYTE PTR [ebp-0x7632e9f9]
  40d1b5:	lea    eax,[ecx+esi*8-0x1cc90ac0]
  40d1bc:	cmp    eax,DWORD PTR [edi-0x3b6dc44]
  40d1c2:	pop    edx
  40d1c4:	adc    ah,0xda
  40d1c7:	mov    ebp,0x39a01035
  40d1cc:	pop    ebp
  40d1cd:	clc    
  40d1ce:	xbegin 0xf652437c
  40d1d4:	cmp    eax,ecx
  40d1d6:	ss xchg edx,eax
  40d1d8:	mov    eax,ds:0x819fc258
  40d1dd:	add    BYTE PTR [eax+0x44],ah
  40d1e0:	pop    edi
  40d1e1:	cmp    DWORD PTR [ecx-0x66],esi
  40d1e4:	ret    
  40d1e5:	mov    WORD PTR [esi],es
  40d1e7:	xlat   BYTE PTR ds:[ebx]
  40d1e8:	mov    eax,0x81dc3fc7
  40d1ed:	xor    DWORD PTR [esi],eax
  40d1ef:	push   cs
  40d1f0:	jno    0x40d188
  40d1f2:	mov    cl,0xcc
  40d1f4:	pushf  
  40d1f5:	divps  xmm3,XMMWORD PTR [eax-0x2c]
  40d1f9:	push   esp
  40d1fa:	push   edi
  40d1fb:	or     cl,BYTE PTR [edx+ebx*4]
  40d1fe:	call   0x7c49:0xbf7fd9b1
  40d205:	sbb    edx,DWORD PTR [ebx+0x1ce1d032]
  40d20b:	retf   0xeddb
  40d20e:	inc    ecx
  40d20f:	(bad)  
  40d210:	fldcw  WORD PTR [eax+0x2b]
  40d213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d214:	(bad)  
  40d216:	xchg   esi,eax
  40d217:	pop    ebx
  40d218:	jmp    0x75d48cf
  40d21d:	sub    DWORD PTR [esi+0x1541d1a4],ebx
  40d223:	imul   ebx,DWORD PTR [edx+eax*2],0x55b007a4
  40d22a:	inc    edx
  40d22b:	jmp    0x40d1e6
  40d22d:	sbb    DWORD PTR [ebp+esi*4-0x60],0xffffff89
  40d232:	rol    BYTE PTR ds:0xefb33678,0x51
  40d239:	and    ebp,esp
  40d23b:	mov    ch,0x13
  40d23d:	ror    DWORD PTR [eax+0x665b0015],1
  40d243:	sbb    al,0x71
  40d245:	call   0x447123ae
  40d24a:	repnz es cdq 
  40d24d:	out    0x60,eax
  40d24f:	cwde   
  40d250:	adc    ebx,esi
  40d252:	cs enter 0x97ed,0x7
  40d257:	add    eax,DWORD PTR [eax+edx*8+0x7c1dfb54]
  40d25e:	adc    cl,BYTE PTR [eax-0x459be2d6]
  40d264:	psrlq  mm1,QWORD PTR [ebx+ebx*2-0x7971287e]
  40d26c:	cmp    eax,0x3b24f620
  40d271:	xor    ecx,DWORD PTR [edx-0x7ee7373]
  40d277:	jb     0x40d2ab
  40d279:	add    BYTE PTR [ebx],bh
  40d27b:	enter  0x850f,0x60
  40d27f:	mov    eax,0x458bffff
  40d284:	cld    
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     bl,dh
  40d2a9:	sub    esi,esp
  40d2ab:	je     0x40d2dc
  40d2ad:	sub    edi,DWORD PTR [ebx+0x7b]
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	cmp    BYTE PTR ds:0xb8846f0b,bh
  40d2ba:	sub    cl,BYTE PTR [edi]
  40d2bc:	or     al,0xa7
  40d2be:	mov    eax,0xb5d4c5fa
  40d2c3:	xchg   edx,eax
  40d2c4:	jb     0x40d2e1
  40d2c6:	jmp    0xfe8c:0xa2eb6ac2
  40d2cd:	pop    ebp
  40d2ce:	ja     0x40d344
  40d2d0:	outs   dx,DWORD PTR ds:[esi]
  40d2d1:	loope  0x40d2f0
  40d2d3:	mov    eax,ds:0x57ff3204
  40d2d8:	cld    
  40d2d9:	xlat   BYTE PTR ds:[ebx]
  40d2da:	dec    ebp
  40d2db:	push   ds
  40d2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2dd:	sbb    al,0xc7
  40d2df:	(bad)  
  40d2e0:	clc    
  40d2e1:	rcr    BYTE PTR [esi-0x1a81221f],cl
  40d2e7:	rcr    DWORD PTR [di],1
  40d2ea:	dec    esi
  40d2eb:	pusha  
  40d2ec:	mov    edi,0xb5fdb37d
  40d2f1:	add    edi,ecx
  40d2f3:	jg     0x40d2a1
  40d2f5:	das    
  40d2f6:	test   al,0x98
  40d2f8:	fwait
  40d2f9:	push   ss
  40d2fa:	dec    esi
  40d2fb:	ds loope 0x40d2e6
  40d2fe:	jno    0x40d349
  40d300:	(bad)  
  40d302:	push   esi
  40d303:	aad    0x78
  40d305:	retf   0xb732
  40d308:	and    bl,bh
  40d30a:	int3   
  40d30b:	ret    0xf46f
  40d30e:	loope  0x40d362
  40d310:	xlat   BYTE PTR ds:[ebx]
  40d311:	xor    DWORD PTR [edx+eax*2],ecx
  40d314:	xor    bl,dl
  40d316:	and    BYTE PTR [eax+edi*4],0x52
  40d31a:	test   DWORD PTR [edi+0x13],0xb6172422
  40d321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d322:	cmp    eax,0x8ed552d2
  40d327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d328:	cmp    DWORD PTR [eax+0x4cdd8b0f],ebp
  40d32e:	addr16 adc al,0xbb
  40d331:	popa   
  40d332:	jns    0x40d375
  40d334:	in     eax,0x9d
  40d336:	fwait
  40d337:	jo     0x40d37c
  40d339:	aas    
  40d33a:	fcomip st,st(5)
  40d33c:	call   0x67a2:0xb7e739f9
  40d343:	jne    0x40d2d5
  40d345:	jle    0x40d2ed
  40d347:	add    al,0x45
  40d349:	mov    esi,0x35cd6947
  40d34e:	push   ecx
  40d34f:	mov    bl,0x4e
  40d351:	xchg   edi,eax
  40d352:	in     eax,dx
  40d353:	jmp    0x126c:0xe1077e0c
  40d35a:	retf   0x6fd6
  40d35d:	fs inc ebp
  40d35f:	pop    ecx
  40d360:	in     al,dx
  40d361:	mov    dh,0xa
  40d363:	push   esp
  40d364:	xchg   ecx,eax
  40d365:	and    BYTE PTR [edi+0x40],dl
  40d368:	pushf  
  40d369:	(bad)  [ecx+0x2e0d0584]
  40d36f:	add    BYTE PTR fs:[ecx],0xa4
  40d373:	xor    al,0x64
  40d375:	dec    ecx
  40d376:	retf   0x687c
  40d379:	inc    ebx
  40d37a:	sbb    BYTE PTR [edi+0x1b],dl
  40d37d:	aad    0xc8
  40d37f:	mov    edx,0xda5323e1
  40d384:	xor    al,0x25
  40d386:	jecxz  0x40d395
  40d388:	adc    al,0xc7
  40d38a:	dec    esp
  40d38b:	test   esp,eax
  40d38d:	dec    esp
  40d38e:	xor    al,0x6a
  40d390:	aad    0xc
  40d392:	in     al,0xcd
  40d394:	sbb    edi,DWORD PTR [ebx-0x17156a9f]
  40d39a:	mov    ebp,0xa19db50a
  40d39f:	ror    BYTE PTR [edi+0x9],0x90
  40d3a3:	jae    0x40d41d
  40d3a5:	call   FWORD PTR [ecx+ebp*1]
  40d3a8:	pop    ss
  40d3a9:	mov    gs,ebp
  40d3ab:	sbb    BYTE PTR [ebx],ah
  40d3ad:	fnsave [ebx]
  40d3af:	pop    ebp
  40d3b0:	add    al,0x81
  40d3b2:	and    ebx,DWORD PTR [eax]
  40d3b4:	adc    al,0x35
  40d3b6:	pop    esi
  40d3b7:	mov    DWORD PTR [edx-0x3],ebp
  40d3ba:	pop    eax
  40d3bb:	stos   BYTE PTR es:[edi],al
  40d3bc:	add    BYTE PTR [edx],bl
  40d3be:	test   al,0x6f
  40d3c0:	mov    esp,0x8f2a4a4c
  40d3c5:	mov    ch,0x96
  40d3c7:	xchg   ebx,eax
  40d3c8:	(bad)  
  40d3c9:	and    BYTE PTR [ebx-0x60bd7f1b],cl
  40d3cf:	and    DWORD PTR [ecx+ebp*2+0x1189efa8],0xe3f55696
  40d3da:	das    
  40d3db:	cwde   
  40d3dc:	into   
  40d3dd:	rcr    ebp,1
  40d3df:	mov    WORD PTR [ecx],cs
  40d3e1:	cmp    al,0xe3
  40d3e3:	ins    BYTE PTR es:[edi],dx
  40d3e4:	sub    ch,bl
  40d3e6:	mov    ecx,0x78aa2866
  40d3eb:	adc    eax,0xc6a0635e
  40d3f0:	in     al,0x2e
  40d3f2:	pop    ebp
  40d3f3:	fld    TBYTE PTR [ebx-0x1744726]
  40d3f9:	pop    eax
  40d3fa:	in     eax,dx
  40d3fb:	iret   
  40d3fc:	lahf   
  40d3fd:	jno    0x40d3de
  40d3ff:	inc    ebp
  40d400:	pop    ecx
  40d401:	mov    ds:0xca944d95,eax
  40d406:	iret   
  40d407:	xchg   esp,eax
  40d408:	jne    0x40d441
  40d40a:	test   ah,bl
  40d40c:	retf   0xdddf
  40d40f:	(bad)  
  40d410:	cdq    
  40d411:	test   al,0x6c
  40d413:	cwde   
  40d414:	imul   esp,esp,0xffffffc4
  40d417:	push   ebx
  40d418:	aas    
  40d419:	mov    eax,ds:0xa75c45a2
  40d41e:	mov    al,0xc0
  40d420:	xchg   esp,eax
  40d421:	jge    0x40d429
  40d423:	and    ah,bh
  40d425:	retf   
  40d426:	lods   eax,DWORD PTR ds:[esi]
  40d427:	inc    eax
  40d428:	retf   0xfb0c
  40d42b:	mov    ebx,0xc47d953a
  40d430:	or     bl,ch
  40d432:	mov    dl,0xf4
  40d434:	mov    ecx,0xdf841360
  40d439:	ficom  WORD PTR [ebx+0x4b]
  40d43c:	inc    ebp
  40d43d:	sub    al,0x8d
  40d43f:	xchg   ebp,eax
  40d440:	jmp    0x40d410
  40d442:	les    ebx,FWORD PTR [ecx+0x47]
  40d445:	gs pop edi
  40d447:	pop    es
  40d448:	jae    0x40d488
  40d44a:	sub    ch,al
  40d44c:	mov    ebx,0x26eccc62
  40d451:	pop    eax
  40d452:	xor    DWORD PTR [ecx],ebp
  40d454:	sar    DWORD PTR [eax+0x9],1
  40d457:	xlat   BYTE PTR ds:[ebx]
  40d458:	cmp    eax,0x64542fbe
  40d45d:	(bad)  
  40d45e:	mov    ds:0xbd6a41e1,al
  40d463:	adc    DWORD PTR [ebx+ecx*8+0x5ecab621],esi
  40d46a:	mov    bl,0x20
  40d46c:	fstp   QWORD PTR [esi]
  40d46e:	xchg   ecx,eax
  40d46f:	jecxz  0x40d47a
  40d471:	(bad)  
  40d472:	push   eax
  40d473:	mov    cl,0x46
  40d475:	adc    eax,ebx
  40d477:	les    eax,FWORD PTR [ebx+0x48]
  40d47a:	inc    edx
  40d47b:	jne    0x40d4ae
  40d47d:	cmp    DWORD PTR [ebp+ecx*8-0x68],edi
  40d481:	ss or  ebp,ebx
  40d484:	push   es
  40d485:	push   ebx
  40d486:	dec    ebx
  40d487:	jmp    FWORD PTR [edi-0x3d]
  40d48a:	inc    DWORD PTR [ebx-0x21]
  40d48d:	mov    eax,ds:0x6ea8ddb3
  40d492:	daa    
  40d493:	mov    WORD PTR ds:0xffdb705a,ds
  40d499:	jl     0x40d444
  40d49b:	mov    esp,0x7e900db
  40d4a0:	cs mov dh,0x2
  40d4a3:	or     esi,DWORD PTR [ebp+0x62]
  40d4a6:	mov    ebp,0x1d678aff
  40d4ab:	mov    dh,BYTE PTR [edi]
  40d4ad:	push   ss
  40d4ae:	dec    eax
  40d4af:	pop    esp
  40d4b0:	arpl   si,bx
  40d4b2:	dec    edx
  40d4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4b4:	fwait
  40d4b5:	cmp    eax,0x3dc96d5b
  40d4ba:	xor    eax,0x1cde82de
  40d4bf:	aas    
  40d4c0:	sbb    dl,BYTE PTR [ecx-0x700eb242]
  40d4c6:	dec    esp
  40d4c7:	push   esi
  40d4c8:	jmp    0xc05e8d90
  40d4cd:	jmp    0xacde8a7b
  40d4d2:	fisttp DWORD PTR [ecx-0x6c]
  40d4d5:	pop    eax
  40d4d6:	sub    al,0x73
  40d4d8:	iret   
  40d4d9:	fst    DWORD PTR [eax+0x154c7df1]
  40d4df:	shr    DWORD PTR [ebp-0x4e],1
  40d4e2:	or     DWORD PTR [edx+0x36681fc9],edi
  40d4e8:	mov    ch,BYTE PTR [edi-0x18]
  40d4eb:	sub    DWORD PTR [ebp-0x4a],edx
  40d4ee:	aam    0xce
  40d4f0:	scas   al,BYTE PTR es:[edi]
  40d4f1:	mov    ebx,0x1d48c62e
  40d4f6:	mov    esp,0xb470cf2
  40d4fb:	loope  0x40d4c0
  40d4fd:	push   0x5e29303e
  40d502:	mov    al,0x2e
  40d504:	and    cl,BYTE PTR [ebp-0x37]
  40d507:	and    eax,0x4183cadb
  40d50c:	(bad)  [ecx-0x317d7ea5]
  40d512:	bound  ebx,QWORD PTR [ebx+esi*1+0x41272d92]
  40d519:	sahf   
  40d51a:	sbb    eax,0xd2e32ead
  40d51f:	xchg   ah,ch
  40d521:	or     eax,0x90ffd751
  40d526:	add    DWORD PTR ds:0x112f307d,ebx
  40d52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d52d:	stos   DWORD PTR es:[edi],eax
  40d52e:	add    al,0xb4
  40d530:	nop
  40d531:	jge    0x40d596
  40d533:	mov    bl,0xa4
  40d535:	xchg   edx,eax
  40d536:	les    ecx,FWORD PTR [edx]
  40d538:	leave  
  40d539:	neg    ecx
  40d53b:	adc    DWORD PTR [edi+0x340fb5ae],0xef4f5dc0
  40d545:	cwde   
  40d546:	ds pop esp
  40d548:	int    0x89
  40d54a:	stos   DWORD PTR es:[edi],eax
  40d54b:	neg    BYTE PTR [eax-0x7d7f78ea]
  40d551:	mov    bl,0xe5
  40d553:	clc    
  40d554:	jnp    0x40d51e
  40d556:	xchg   DWORD PTR [eax+0x708cb941],edi
  40d55c:	lods   eax,DWORD PTR ds:[esi]
  40d55d:	jge    0x40d577
  40d55f:	shr    ebx,cl
  40d561:	mov    al,BYTE PTR [ecx-0x57]
  40d564:	add    DWORD PTR [edx],ebx
  40d566:	mov    cl,0x73
  40d568:	add    dh,al
  40d56a:	jp     0x40d547
  40d56c:	loop   0x40d52c
  40d56e:	add    DWORD PTR [esi],0xc5b57c40
  40d574:	jb     0x40d554
  40d576:	pop    edi
  40d577:	or     dh,BYTE PTR [eax+eiz*4-0x37609abb]
  40d57e:	repnz adc ebp,0x78aa4a1c
  40d585:	jp     0x40d56e
  40d587:	cmp    eax,0x53ddfa3c
  40d58c:	pop    ds
  40d58d:	test   ebx,0x365b85e8
  40d593:	dec    ecx
  40d594:	mov    al,0xb8
  40d596:	push   esp
  40d597:	cmp    ecx,DWORD PTR [ebp-0x4834e903]
  40d59d:	out    dx,al
  40d59e:	pusha  
  40d59f:	leave  
  40d5a0:	jo     0x40d604
  40d5a2:	sub    BYTE PTR [ebp-0x5f9bfa6a],dl
  40d5a8:	jns    0x40d56b
  40d5aa:	std    
  40d5ab:	adc    BYTE PTR [ebp+0x71],dl
  40d5ae:	xchg   DWORD PTR [ebx-0x771c2b4],esi
  40d5b4:	pop    esp
  40d5b5:	aam    0xf
  40d5b7:	das    
  40d5b8:	in     eax,dx
  40d5b9:	fucomip st,st(0)
  40d5bb:	imul   ebx,DWORD PTR ds:[edx-0x52],0xffffffa6
  40d5c0:	jo     0x40d557
  40d5c2:	fsubr  QWORD PTR [ebx+0x71c0c9c8]
  40d5c8:	sub    DWORD PTR [ecx+0x6710fedd],ecx
  40d5ce:	lods   eax,DWORD PTR ds:[esi]
  40d5cf:	ds pop edx
  40d5d1:	in     eax,0xac
  40d5d3:	idiv   DWORD PTR [edi+edx*2+0x7b]
  40d5d7:	call   0xdcad:0x60cb9253
  40d5de:	pop    ds
  40d5df:	xor    eax,0xada5cf08
  40d5e4:	xor    esp,DWORD PTR [esi]
  40d5e6:	mov    ch,0x75
  40d5e8:	fild   QWORD PTR [ebp-0x51]
  40d5eb:	int    0x61
  40d5ed:	call   FWORD PTR [esi]
  40d5ef:	cmc    
  40d5f0:	aaa    
  40d5f1:	jmp    0x272f:0x64f23f70
  40d5f8:	in     al,0x6e
  40d5fa:	jle    0x40d63d
  40d5fc:	in     al,0x86
  40d5fe:	repz mov ah,0x9a
  40d601:	jns    0x40d590
  40d603:	inc    esp
  40d604:	mov    edx,0xb5c8c987
  40d609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d60a:	cli    
  40d60b:	inc    ebx
  40d60c:	add    DWORD PTR [ebp*4-0x3b75821],0xffffffce
  40d614:	adc    BYTE PTR [ebx-0x3f62e2a6],ah
  40d61a:	jmp    0x40d600
  40d61c:	dec    eax
  40d61d:	adc    ebx,DWORD PTR [ebx+0x8]
  40d620:	inc    edx
  40d621:	dec    esp
  40d622:	lock adc cl,al
  40d625:	ins    BYTE PTR es:[edi],dx
  40d626:	lahf   
  40d627:	cld    
  40d628:	mov    al,0x1e
  40d62a:	jns    0x40d5b8
  40d62c:	sbb    eax,0xc86ecd6b
  40d631:	addr16 cmp eax,0xf7b17213
  40d637:	ret    
  40d638:	repz push esp
  40d63a:	pop    edi
  40d63b:	push   eax
  40d63d:	neg    esp
  40d63f:	adc    BYTE PTR [ecx],0xd4
  40d642:	popf   
  40d643:	repnz or BYTE PTR [ebp+eax*8+0x65],al
  40d648:	(bad)  
  40d64a:	or     esi,ecx
  40d64c:	mov    ecx,0x97f4cc72
  40d651:	mov    ah,BYTE PTR [ecx-0x13]
  40d654:	mov    cl,0xab
  40d656:	nop
  40d657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d658:	cmp    al,bh
  40d65a:	jecxz  0x40d62a
  40d65c:	push   ebx
  40d65d:	rcr    ch,cl
  40d65f:	data16 repz in al,dx
  40d662:	imul   DWORD PTR [edx+0xa]
  40d665:	in     eax,dx
  40d666:	push   eax
  40d667:	imul   DWORD PTR [eax+0x23]
  40d66a:	imul   DWORD PTR [eax]
  40d66c:	rcr    BYTE PTR [eax],0x79
  40d66f:	jnp    0x40d658
  40d671:	mov    WORD PTR [ebp-0x19],cs
  40d674:	pop    esi
  40d675:	jmp    0x6e67:0x2ea2e2d8
  40d67c:	mov    bl,0x83
  40d67e:	pop    esp
  40d67f:	pop    esp
  40d680:	cmp    eax,0xe602cd65
  40d685:	sar    BYTE PTR [ecx-0x34d04e45],cl
  40d68b:	call   0xdc4b:0xc114b1b2
  40d692:	es or  eax,0x9bef0b9c
  40d698:	clc    
  40d699:	popa   
  40d69a:	cwde   
  40d69b:	pop    edi
  40d69c:	push   ecx
  40d69d:	mov    bh,0xcd
  40d69f:	fs mov ecx,0xc43c7a33
  40d6a5:	mov    bl,0x85
  40d6a7:	jbe    0x40d6db
  40d6a9:	test   DWORD PTR [ecx+0x1e3c079b],ecx
  40d6af:	mov    ss,WORD PTR [ecx+eiz*1]
  40d6b2:	das    
  40d6b3:	xor    BYTE PTR [eax+0x46467d93],ah
  40d6b9:	xor    al,0x70
  40d6bb:	int    0xd6
  40d6bd:	xchg   esp,eax
  40d6be:	scas   eax,DWORD PTR es:[edi]
  40d6bf:	in     eax,dx
  40d6c0:	cmp    eax,DWORD PTR [edx+0x48]
  40d6c3:	nop
  40d6c4:	out    dx,eax
  40d6c5:	xchg   ebp,eax
  40d6c6:	cli    
  40d6c7:	jecxz  0x40d692
  40d6c9:	mov    esi,0x7d66cb97
  40d6ce:	stos   BYTE PTR es:[edi],al
  40d6cf:	scas   eax,DWORD PTR es:[edi]
  40d6d0:	leave  
  40d6d1:	push   ebp
  40d6d2:	jmp    0xc31041e2
  40d6d7:	cmp    DWORD PTR [ebx+0x62],edx
  40d6da:	fwait
  40d6db:	arpl   WORD PTR [edi-0x33],ax
  40d6de:	int    0x61
  40d6e0:	mov    WORD PTR [edi],ss
  40d6e2:	push   ecx
  40d6e3:	sub    bh,BYTE PTR [esi]
  40d6e5:	mov    ds,WORD PTR [ebp+ebp*4-0x3d710ce8]
  40d6ec:	xlat   BYTE PTR ds:[ebx]
  40d6ed:	test   ebx,esp
  40d6ef:	gs leave 
  40d6f1:	mov    BYTE PTR [eax],bl
  40d6f3:	aad    0xa2
  40d6f5:	les    ecx,FWORD PTR [eax+0x58d3b3ac]
  40d6fb:	scas   al,BYTE PTR es:[edi]
  40d6fc:	jns    0x40d701
  40d6fe:	jg     0x40d76c
  40d700:	pop    ds
  40d701:	mov    al,0xc0
  40d703:	and    BYTE PTR [esi+0x47],al
  40d706:	jp     0x40d731
  40d708:	lahf   
  40d709:	cmp    esi,DWORD PTR [edi]
  40d70b:	push   0xffffff85
  40d70d:	add    edi,DWORD PTR [eax-0x275c39e2]
  40d713:	loopne 0x40d75a
  40d715:	mov    ch,0x54
  40d717:	mov    ebx,0xb2c68c98
  40d71c:	jp     0x40d6fa
  40d71e:	dec    ecx
  40d71f:	scas   al,BYTE PTR es:[edi]
  40d720:	dec    esp
  40d721:	rol    BYTE PTR [ebx],1
  40d723:	imul   esp,eax,0xa
  40d726:	cmp    al,dl
  40d728:	ror    BYTE PTR [ecx+0x67],cl
  40d72b:	call   0x6e98:0x9542eac3
  40d732:	pop    ecx
  40d733:	loop   0x40d6cd
  40d735:	mov    DWORD PTR [ebx-0x65],ebp
  40d738:	cmp    al,0x48
  40d73a:	xlat   BYTE PTR ds:[ebx]
  40d73b:	pop    edx
  40d73c:	xchg   edi,eax
  40d73d:	ja     0x40d6df
  40d73f:	test   BYTE PTR [ebx],0x31
  40d742:	pop    ebx
  40d743:	adc    ebp,DWORD PTR [ebp+0x34]
  40d746:	add    al,0x5c
  40d748:	int    0xf0
  40d74a:	hlt    
  40d74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d74c:	adc    DWORD PTR [edi+0x7],edx
  40d74f:	mov    edx,0xcf145c52
  40d754:	lods   al,BYTE PTR ds:[esi]
  40d755:	repnz pop edi
  40d757:	enter  0xec3,0xc4
  40d75b:	gs or  al,0x2a
  40d75e:	mov    ebp,0x446db00e
  40d763:	cld    
  40d764:	jle    0x40d754
  40d766:	sti    
  40d767:	mov    gs,WORD PTR [edi+0x5f]
  40d76a:	pop    edi
  40d76b:	or     ebp,DWORD PTR [edi]
  40d76d:	fdiv   QWORD PTR [ebx]
  40d76f:	shl    BYTE PTR [eax-0x62],1
  40d772:	sub    DWORD PTR [edx+0xc],edx
  40d775:	mov    esp,0x42f9184a
  40d77a:	xor    BYTE PTR [eax],cl
  40d77c:	sub    al,0xf8
  40d77e:	inc    esp
  40d77f:	dec    esp
  40d780:	and    al,0x58
  40d782:	add    al,0x41
  40d784:	jle    0x40d7cc
  40d786:	lahf   
  40d787:	xchg   BYTE PTR [esi-0x1c],bh
  40d78a:	jae    0x40d745
  40d78c:	fwait
  40d78d:	imul   ebx,DWORD PTR [ecx-0x1edeb46e],0xc5077a7d
  40d797:	cmp    eax,0x39d0cc86
  40d79c:	fisub  WORD PTR [edi+edi*4+0x4735a1e8]
  40d7a3:	iret   
  40d7a4:	mov    bh,0x64
  40d7a6:	int3   
  40d7a7:	enter  0xe96e,0x1b
  40d7ab:	repnz fadd QWORD PTR [esi]
  40d7ae:	or     dl,ch
  40d7b0:	aas    
  40d7b1:	dec    edi
  40d7b2:	sahf   
  40d7b3:	retf   0x5d72
  40d7b6:	loopne 0x40d7c6
  40d7b8:	(bad)  
  40d7bb:	adc    eax,0x2c585de4
  40d7c0:	sbb    DWORD PTR [ebp+0x35a7128e],esi
  40d7c6:	inc    esi
  40d7c7:	mov    eax,0x72c493cf
  40d7cc:	sbb    dl,BYTE PTR [esi+0x18]
  40d7cf:	mov    ecx,0xadc11410
  40d7d4:	mov    ah,0x4d
  40d7d6:	pop    ds
  40d7d7:	sub    DWORD PTR [ebx+esi*8-0x631780d0],ebp
  40d7de:	gs jl  0x40d7d8
  40d7e1:	cli    
  40d7e2:	cs pop eax
  40d7e4:	sbb    eax,0xb6123195
  40d7e9:	ins    DWORD PTR es:[edi],dx
  40d7ea:	cmp    bl,BYTE PTR [edi-0x336233cb]
  40d7f0:	add    ch,bh
  40d7f2:	ds test al,0x0
  40d7f5:	fmul   QWORD PTR [edx+0x23]
  40d7f8:	not    BYTE PTR [esi+ebp*2]
  40d7fb:	std    
  40d7fc:	ror    BYTE PTR [esp+eax*2+0x38],cl
  40d800:	jmp    0x40d81d
  40d802:	push   edi
  40d803:	fisub  DWORD PTR [edi]
  40d805:	in     al,0x1d
  40d807:	adc    DWORD PTR [eax],eax
  40d809:	das    
  40d80a:	test   eax,0x73fa38ad
  40d80f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40d811:	adc    ecx,DWORD PTR [edx]
  40d813:	mov    al,ds:0x97bc67f4
  40d818:	add    DWORD PTR [esi+0x1c],esp
  40d81b:	or     al,0xa6
  40d81d:	jbe    0x40d7df
  40d81f:	pop    eax
  40d820:	push   0xe8c61a2c
  40d825:	jmp    0xd7c7:0xe32951e0
  40d82c:	dec    edi
  40d82d:	pusha  
  40d82e:	push   ebp
  40d82f:	xor    DWORD PTR [ebp-0x380b17d6],ecx
  40d835:	out    dx,eax
  40d836:	inc    edx
  40d837:	jmp    0x6fda48c8
  40d83c:	fisubr WORD PTR [esi]
  40d83e:	inc    ecx
  40d83f:	sbb    eax,DWORD PTR [esi-0x2f]
  40d842:	fwait
  40d843:	pop    ss
  40d844:	and    DWORD PTR ds:0x113d40e,esi
  40d84a:	fdivr  QWORD PTR [ebp+0x3c4ab175]
  40d850:	jle    0x40d7d2
  40d852:	shl    BYTE PTR [eax+ebp*1+0x3ae2be42],1
  40d859:	ror    DWORD PTR [ebp+0xa],1
  40d85c:	data16 and al,0xe7
  40d85f:	fiadd  DWORD PTR [edi-0x1]
  40d862:	inc    esi
  40d863:	cmp    al,0x20
  40d865:	push   ds
  40d866:	shl    DWORD PTR [edx+0x78],cl
  40d869:	adc    ah,BYTE PTR [edx]
  40d86b:	add    DWORD PTR [ebp+0x369627c4],ecx
  40d871:	xor    al,0xbc
  40d873:	push   ecx
  40d874:	lds    edx,FWORD PTR [esp+esi*4+0x6f]
  40d878:	add    ah,dl
  40d87a:	add    DWORD PTR [ebp+ecx*1-0x492a558c],ebp
  40d881:	push   edx
  40d882:	imul   esi,DWORD PTR [edi-0x1a],0x52
  40d886:	cmp    DWORD PTR [ebx+0x69ec5d94],0x4e
  40d88d:	or     dh,ch
  40d88f:	pop    esp
  40d890:	mov    al,0xec
  40d892:	sub    eax,0xf564227b
  40d897:	daa    
  40d898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d899:	enter  0xb536,0x5f
  40d89d:	out    0x5c,al
  40d89f:	out    0xd0,al
  40d8a1:	xor    BYTE PTR [eax+0xd9e5a85],0x25
  40d8a8:	mov    ds:0xd9f44ea3,al
  40d8ad:	inc    ebx
  40d8ae:	jmp    0x4a464255
  40d8b3:	adc    bh,dh
  40d8b5:	xchg   esp,eax
  40d8b6:	xor    dh,bl
  40d8b8:	pusha  
  40d8b9:	mov    ds:0xa51767fb,eax
  40d8be:	cdq    
  40d8bf:	xor    eax,0xc281c045
  40d8c4:	mov    ds:0xe7f5bdf2,al
  40d8c9:	jecxz  0x40d935
  40d8cb:	add    DWORD PTR [ebx+0x25877d3f],esp
  40d8d1:	jg     0x40d8a6
  40d8d3:	pop    esi
  40d8d4:	adc    bh,0x58
  40d8d7:	or     BYTE PTR [eax],dl
  40d8d9:	jns    0x40d885
  40d8db:	inc    edx
  40d8dc:	cmc    
  40d8dd:	imul   ebx,DWORD PTR [ebp-0x153770c0],0x1d47e79
  40d8e7:	in     eax,dx
  40d8e8:	or     DWORD PTR [ebx],0x3e
  40d8eb:	loop   0x40d8ab
  40d8ed:	out    dx,eax
  40d8ee:	xchg   edi,eax
  40d8ef:	xchg   DWORD PTR [esp+ecx*1-0x2c836b2c],edx
  40d8f6:	in     eax,0xc5
  40d8f8:	dec    edx
  40d8f9:	stos   DWORD PTR es:[edi],eax
  40d8fa:	hlt    
  40d8fb:	mov    edi,0x3e157699
  40d900:	sbb    ah,BYTE PTR [esi]
  40d902:	mul    DWORD PTR [esi+0x64]
  40d905:	cld    
  40d906:	jp     0x40d8fb
  40d908:	in     eax,0xc0
  40d90a:	jmp    0x43cc:0x1ed3ff37
  40d911:	pop    ebx
  40d912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d913:	mov    ecx,0xc6748ba9
  40d918:	retf   
  40d919:	push   eax
  40d91a:	shld   DWORD PTR [esi+edi*8+0x173c71e9],esi,0x5a
  40d923:	aaa    
  40d924:	pop    ecx
  40d925:	scas   eax,DWORD PTR es:[edi]
  40d926:	sbb    ah,BYTE PTR [esi+0x75]
  40d929:	lods   al,BYTE PTR ds:[esi]
  40d92a:	sbb    al,0x68
  40d92c:	mov    dl,0xb0
  40d92e:	mov    al,ds:0x44a31fdf
  40d933:	push   edx
  40d934:	adc    al,0x6b
  40d936:	sbb    ecx,esi
  40d938:	add    BYTE PTR [ebx-0x2f],0x65
  40d93c:	out    dx,eax
  40d93d:	lods   eax,DWORD PTR ds:[esi]
  40d93e:	mov    ah,0x2f
  40d940:	inc    eax
  40d941:	sub    DWORD PTR [ebp-0x4cbefd84],ebx
  40d947:	and    al,0x75
  40d949:	or     al,0x22
  40d94b:	popf   
  40d94c:	mov    edi,0x5d9f467b
  40d951:	adc    eax,0xc82f4928
  40d956:	test   eax,0x861337a1
  40d95b:	cmp    DWORD PTR ds:0x49a23b67,edx
  40d961:	pushf  
  40d962:	sbb    ch,BYTE PTR [ebx-0x8ab0c9]
  40d968:	jecxz  0x40d9da
  40d96a:	jle    0x40d94a
  40d96c:	ficomp DWORD PTR [esi]
  40d96e:	aad    0xd1
  40d970:	pop    es
  40d971:	mov    BYTE PTR [edi-0x6498f2ab],ah
  40d977:	mov    BYTE PTR [esi+0x61],ch
  40d97a:	cld    
  40d97b:	xor    BYTE PTR [edi],ah
  40d97d:	adc    DWORD PTR [ebp+0x141765eb],ebx
  40d983:	and    BYTE PTR [esi-0x544079db],al
  40d989:	sbb    al,0x31
  40d98b:	std    
  40d98c:	or     dh,BYTE PTR [ebx]
  40d98e:	mov    ebp,DWORD PTR [edi]
  40d990:	dec    esp
  40d991:	stos   BYTE PTR es:[edi],al
  40d992:	sbb    al,0x82
  40d994:	sbb    eax,0xa0ab902e
  40d999:	xchg   edx,eax
  40d99a:	push   ecx
  40d99b:	adc    BYTE PTR ds:0x44b23ccc,dl
  40d9a1:	and    esi,DWORD PTR [ebp+0x9]
  40d9a4:	xor    eax,0xdbbf9e63
  40d9a9:	xor    DWORD PTR [edx-0x47],ebx
  40d9ac:	shr    DWORD PTR [edx-0x3c08b7db],1
  40d9b2:	xchg   ecx,eax
  40d9b3:	push   esp
  40d9b4:	jbe    0x40d97f
  40d9b6:	dec    ebx
  40d9b7:	ret    
  40d9b8:	test   BYTE PTR [eax-0x5f],dh
  40d9bb:	scas   al,BYTE PTR es:[edi]
  40d9bc:	pop    ss
  40d9bd:	arpl   WORD PTR [ecx-0x26],ax
  40d9c0:	mov    bh,0x61
  40d9c2:	push   esi
  40d9c3:	inc    ecx
  40d9c4:	fcom   DWORD PTR [ebx+0x5]
  40d9c7:	loop   0x40da3c
  40d9c9:	lods   eax,DWORD PTR ds:[esi]
  40d9ca:	popa   
  40d9cb:	cmc    
  40d9cc:	xchg   ecx,eax
  40d9cd:	cmp    al,0x9d
  40d9d0:	mov    cl,0x5f
  40d9d2:	jl     0x40da10
  40d9d4:	mov    cl,0x7e
  40d9d6:	nop
  40d9d7:	adc    esp,DWORD PTR [ecx]
  40d9d9:	cdq    
  40d9da:	sbb    eax,0x7944e868
  40d9df:	and    eax,0x412ac85b
  40d9e4:	scas   eax,DWORD PTR es:[edi]
  40d9e5:	out    0x21,al
  40d9e7:	jle    0x40d979
  40d9e9:	out    dx,al
  40d9ea:	xchg   esp,eax
  40d9eb:	or     bl,BYTE PTR [ebp+0x2a]
  40d9ee:	pop    ecx
  40d9ef:	pop    ds
  40d9f0:	push   edi
  40d9f1:	xor    eax,0xd7bf153a
  40d9f6:	inc    ebp
  40d9f7:	call   0x8052d48c
  40d9fc:	lods   eax,DWORD PTR ds:[esi]
  40d9fd:	pushf  
  40d9fe:	xchg   DWORD PTR [edx+0x7e83eb78],esi
  40da04:	stos   BYTE PTR es:[edi],al
  40da05:	fcmove st,st(3)
  40da07:	add    eax,ecx
  40da09:	mov    bl,0xf4
  40da0b:	inc    eax
  40da0c:	stos   DWORD PTR es:[edi],eax
  40da0d:	push   ss
  40da0e:	dec    ebp
  40da0f:	pop    edx
  40da10:	jb     0x40da7e
  40da12:	ja     0x40d9c2
  40da14:	pusha  
  40da15:	pop    edx
  40da16:	pop    esp
  40da17:	jbe    0x40d99c
  40da19:	rcl    DWORD PTR [eax+0x58b780fc],0x8f
  40da20:	sbb    eax,0x6149bc09
  40da25:	inc    edx
  40da26:	and    al,0xe1
  40da28:	push   ebx
  40da29:	jbe    0x40da38
  40da2b:	and    DWORD PTR [edi-0x3f336eca],0xffffff86
  40da32:	mov    eax,ds:0xe2cd763d
  40da37:	mov    ah,0x3e
  40da39:	fmul   QWORD PTR [esi+eax*1+0x56]
  40da3d:	test   BYTE PTR [ecx],ah
  40da3f:	inc    ebx
  40da40:	pop    ss
  40da41:	add    edx,esp
  40da43:	sub    al,0x54
  40da45:	adc    eax,0x8abef411
  40da4a:	shr    DWORD PTR [esi],cl
  40da4c:	mov    edx,cs
  40da4e:	sti    
  40da4f:	mov    WORD PTR [esi],ds
  40da51:	idiv   BYTE PTR [ebp+0x6926057]
  40da57:	add    eax,0x242d230f
  40da5c:	lds    ebx,FWORD PTR [edx-0x1b73166a]
  40da62:	pop    ds
  40da63:	cli    
  40da64:	adc    eax,0xd1eb23b5
  40da69:	out    0x9f,al
  40da6b:	call   0x7032:0xb02582a8
  40da72:	outs   dx,BYTE PTR ds:[esi]
  40da73:	mov    ?,WORD PTR [edi-0x20c7604a]
  40da79:	add    dh,ch
  40da7b:	add    ah,ch
  40da7d:	xlat   BYTE PTR ds:[ebx]
  40da7e:	xchg   edi,eax
  40da7f:	imul   esp,DWORD PTR [edi-0x127c9a84],0x21fd503e
  40da89:	scas   eax,DWORD PTR es:[edi]
  40da8a:	dec    esi
  40da8b:	sub    bh,cl
  40da8d:	test   DWORD PTR [ebx+0x6778e6a1],esi
  40da93:	out    0xaf,eax
  40da95:	xchg   esp,eax
  40da96:	pop    ecx
  40da97:	lds    ecx,FWORD PTR [eax+0x4d]
  40da9a:	pop    ebp
  40da9b:	jmp    0x7366:0xa4c12fcd
  40daa2:	test   BYTE PTR [edx-0x19],dl
  40daa5:	test   bl,bh
  40daa7:	(bad)  
  40daa8:	data16 inc BYTE PTR [edi-0x34]
  40daac:	pop    edx
  40daad:	dec    esi
  40daae:	jl     0x40da5e
  40dab0:	push   es
  40dab1:	inc    eax
  40dab2:	fidivr WORD PTR [ecx-0x9]
  40dab5:	sub    DWORD PTR [edx-0x40],0x3d
  40dab9:	cs test al,0x87
  40dabc:	push   edx
  40dabd:	(bad)
  40dac1:	in     eax,0x4
  40dac3:	sbb    al,0x1e
  40dac5:	fisub  WORD PTR [ecx-0x9]
  40dac8:	and    DWORD PTR [edi+0x1e3d5673],0xffffffdf
  40dacf:	xchg   ecx,eax
  40dad0:	jne    0x40dabb
  40dad2:	lock push ecx
  40dad4:	cmp    ch,BYTE PTR [eax]
  40dad6:	cwde   
  40dad7:	cli    
  40dad8:	fcomp  st(7)
  40dada:	icebp  
  40dadb:	cmp    cl,ch
  40dadd:	ds push esp
  40dadf:	and    DWORD PTR [ebx-0x25fdd10d],ecx
  40dae5:	cld    
  40dae6:	inc    ebp
  40dae7:	push   esp
  40dae8:	dec    eax
  40dae9:	mov    eax,0xcc8483ee
  40daee:	(bad)  
  40daef:	cld    
  40daf0:	lds    ecx,FWORD PTR [ebx-0x30]
  40daf3:	adc    edx,DWORD PTR [ebp+0x60]
  40daf6:	jnp    0x40db2f
  40daf8:	sub    DWORD PTR [edi+0x60],edx
  40dafb:	jle    0x40db09
  40dafd:	push   ss
  40dafe:	ficomp DWORD PTR [eax+0x14]
  40db01:	jns    0x40db63
  40db03:	jnp    0x40db2b
  40db05:	mov    BYTE PTR [ebx+0x6fdbd90],bl
  40db0b:	jle    0x40db1c
  40db0d:	add    eax,0xfb3d55b7
  40db12:	call   0x49e8:0xfe1a0eb8
  40db19:	mov    esi,0x5b74a5b6
  40db1e:	xor    eax,0xc56bb1ec
  40db23:	icebp  
  40db24:	jle    0x40db9d
  40db26:	add    edi,DWORD PTR [ebp-0x25]
  40db29:	jecxz  0x40db81
  40db2b:	test   BYTE PTR [ebx+0x10],bl
  40db2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db2f:	loope  0x40dafb
  40db31:	xor    al,0x47
  40db33:	nop
  40db34:	imul   edi,DWORD PTR [ebp-0x8],0xffffff98
  40db38:	cmp    al,0x1d
  40db3a:	mov    al,0x3d
  40db3c:	adc    DWORD PTR [ebx+eax*8],0x7
  40db40:	push   0x6a
  40db42:	xchg   edx,eax
  40db43:	sbb    BYTE PTR [bx+si-0x28],bh
  40db47:	popf   
  40db48:	aas    
  40db49:	in     al,0x21
  40db4b:	push   es
  40db4c:	call   0x6f43:0x9b877fea
  40db53:	push   eax
  40db54:	dec    edx
  40db55:	jp     0x40db13
  40db57:	mov    ah,0x66
  40db59:	xor    bl,BYTE PTR [edi+0x1c6d408d]
  40db5f:	jecxz  0x40db50
  40db61:	and    BYTE PTR [esi-0xf79c7e9],al
  40db67:	mov    cl,0xd
  40db69:	popa   
  40db6a:	(bad)  
  40db6b:	sub    bl,BYTE PTR [esi-0x392786eb]
  40db71:	out    0x35,al
  40db73:	add    eax,0x26942a33
  40db78:	cmp    bh,BYTE PTR [ebp+0x54]
  40db7b:	and    DWORD PTR [ecx-0x10],ecx
  40db7e:	dec    ecx
  40db7f:	clc    
  40db80:	in     al,dx
  40db81:	adc    BYTE PTR [ebp-0x1f],dh
  40db84:	jge    0x40dbe4
  40db86:	mov    eax,0x3af93ec2
  40db8b:	xchg   esp,eax
  40db8c:	or     bl,BYTE PTR [ecx+edx*8]
  40db8f:	jle    0x40dbb8
  40db91:	(bad)  
  40db92:	mov    esp,0x179473ef
  40db97:	and    DWORD PTR [edx-0x4d],0x7a
  40db9b:	push   esi
  40db9c:	js     0x40dc13
  40db9e:	loope  0x40db29
  40dba0:	sahf   
  40dba1:	xor    ebp,DWORD PTR [ebp-0x58]
  40dba4:	xor    eax,0xde1ac434
  40dba9:	(bad)  
  40dbaa:	out    dx,al
  40dbab:	cs inc ebp
  40dbad:	repnz and eax,DWORD PTR [ebx+0x52]
  40dbb1:	fwait
  40dbb2:	add    BYTE PTR [edx],ch
  40dbb4:	mov    ecx,0x37140ed4
  40dbb9:	inc    edx
  40dbba:	push   ecx
  40dbbb:	mov    BYTE PTR [edi+0x24a32915],dh
  40dbc1:	xchg   esi,eax
  40dbc2:	inc    ebp
  40dbc3:	icebp  
  40dbc4:	je     0x40db85
  40dbc6:	adc    ch,BYTE PTR [ebx-0x481f2c9f]
  40dbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbcd:	xor    eax,0x18598c69
  40dbd2:	mov    ah,0x33
  40dbd4:	sub    al,0x4a
  40dbd6:	into   
  40dbd7:	dec    edi
  40dbd8:	xchg   DWORD PTR [edx-0x6e4f902e],edi
  40dbde:	bound  edx,QWORD PTR [edx-0x2df27b34]
  40dbe4:	call   0x372c8311
  40dbe9:	shr    BYTE PTR es:[edx+ebx*1-0x29d2bb87],0xbd
  40dbf2:	jp     0x40dbb7
  40dbf4:	dec    edi
  40dbf5:	and    ecx,DWORD PTR [ecx-0x5b245368]
  40dbfb:	cmp    al,0xef
  40dbfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbfe:	lds    ebp,FWORD PTR [edi]
  40dc00:	popa   
  40dc01:	push   esi
  40dc02:	leave  
  40dc03:	outs   dx,DWORD PTR ds:[esi]
  40dc04:	push   ss
  40dc05:	adc    BYTE PTR [ecx+0x11a1b9aa],cl
  40dc0b:	ds aaa 
  40dc0d:	mov    dl,BYTE PTR [ecx]
  40dc0f:	fbld   TBYTE PTR ds:0xd31ebe8f
  40dc15:	lea    ebp,[ecx+0xd]
  40dc18:	call   0x5f9c:0xb91e2cfd
  40dc1f:	mov    ebx,0x3b86b504
  40dc24:	adc    edi,DWORD PTR [ecx-0x4d]
  40dc27:	fldl2t 
  40dc29:	ins    DWORD PTR es:[edi],dx
  40dc2a:	ins    DWORD PTR es:[edi],dx
  40dc2b:	fcomi  st,st(7)
  40dc2d:	jg     0x40dbf4
  40dc2f:	iret   
  40dc30:	mov    edx,DWORD PTR ds:0x7abf54ed
  40dc36:	push   ds
  40dc37:	scas   eax,DWORD PTR es:[edi]
  40dc38:	mov    eax,0xbb193e24
  40dc3d:	dec    eax
  40dc3e:	mov    eax,ecx
  40dc40:	mov    bh,0x39
  40dc42:	mov    ah,0x36
  40dc44:	mov    ecx,0xbee74cce
  40dc49:	dec    eax
  40dc4a:	xor    al,0xfb
  40dc4c:	push   ecx
  40dc4d:	mov    al,0xda
  40dc4f:	lds    edx,FWORD PTR [ecx]
  40dc51:	addr16 setno dl
  40dc55:	repz add al,0x36
  40dc58:	dec    edi
  40dc59:	(bad)  [esi-0x22]
  40dc5c:	adc    ecx,DWORD PTR [edi+0x1f]
  40dc5f:	ret    
  40dc60:	out    0xcc,eax
  40dc62:	pop    ebp
  40dc63:	ds xchg ecx,eax
  40dc65:	je     0x40dc25
  40dc67:	outs   dx,BYTE PTR ds:[esi]
  40dc68:	pusha  
  40dc69:	xchg   ebx,eax
  40dc6a:	out    dx,al
  40dc6b:	pop    esp
  40dc6c:	pusha  
  40dc6d:	and    BYTE PTR [edx+0xc],cl
  40dc70:	or     DWORD PTR [ecx],esi
  40dc72:	loop   0x40dc8d
  40dc74:	xchg   esp,eax
  40dc75:	out    dx,eax
  40dc76:	iret   
  40dc77:	lds    esi,FWORD PTR [edx-0xe43b725]
  40dc7d:	add    eax,DWORD PTR [ebx-0x27bb2ef4]
  40dc83:	dec    ebx
  40dc84:	inc    ecx
  40dc85:	fcomp  DWORD PTR [esi-0x49]
  40dc88:	push   esi
  40dc89:	lahf   
  40dc8a:	fidiv  DWORD PTR [ecx+0x659af3ed]
  40dc90:	repz sub eax,0x760c9a4e
  40dc97:	in     eax,dx
  40dc98:	adc    cl,0x89
  40dc9b:	lods   al,BYTE PTR ds:[esi]
  40dc9c:	mov    dh,0xe0
  40dc9e:	fsub   QWORD PTR [ecx-0x2e]
  40dca1:	iret   
  40dca2:	shl    edi,cl
  40dca4:	cmc    
  40dca5:	and    al,0xb9
  40dca7:	push   ss
  40dca8:	mov    edi,0xe6969a4a
  40dcad:	or     BYTE PTR [ebx-0x1cc76653],bh
  40dcb3:	xchg   ebp,eax
  40dcb4:	cmp    bl,bl
  40dcb6:	inc    eax
  40dcb7:	push   ebx
  40dcb8:	test   eax,0x389f1532
  40dcbd:	dec    ecx
  40dcbe:	(bad)  
  40dcbf:	imul   ebp,eax,0x2
  40dcc2:	scas   eax,DWORD PTR es:[edi]
  40dcc3:	int3   
  40dcc4:	xchg   BYTE PTR [ecx+0x23],dl
  40dcc7:	jne    0x40dc54
  40dcc9:	jno    0x40dca8
  40dccb:	jns    0x40dca5
  40dccd:	or     BYTE PTR [ebx],0xf9
  40dcd0:	add    DWORD PTR [edx+edx*1],eax
  40dcd3:	(bad)  
  40dcd4:	pop    eax
  40dcd5:	ins    BYTE PTR es:[edi],dx
  40dcd6:	and    ecx,DWORD PTR [ecx-0x3c0517a9]
  40dcdc:	leave  
  40dcdd:	gs in  al,0x7f
  40dce0:	add    DWORD PTR [edx],edx
  40dce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce3:	mov    esp,0x607ea2da
  40dce8:	int    0x75
  40dcea:	cwde   
  40dceb:	jae    0x40dd2c
  40dced:	cli    
  40dcee:	sti    
  40dcef:	inc    ebx
  40dcf0:	mov    edi,0x82a3cd4c
  40dcf5:	jg     0x40dca9
  40dcf7:	fld    QWORD PTR [eax]
  40dcf9:	sbb    al,0x97
  40dcfb:	mov    ds:0x22665ad4,al
  40dd00:	fdivrp st(1),st
  40dd02:	loopne 0x40dcd2
  40dd04:	xor    BYTE PTR [ebx+0x662c236],al
  40dd0a:	shl    BYTE PTR [esi+edi*4-0x43b07b04],cl
  40dd11:	mov    al,0xd1
  40dd13:	pusha  
  40dd14:	inc    esp
  40dd15:	jno    0x40dd36
  40dd17:	mov    al,ds:0xcb8c971a
  40dd1c:	test   BYTE PTR [eax],0x4
  40dd1f:	test   DWORD PTR [eax],edi
  40dd21:	or     ecx,esi
  40dd23:	dec    ebp
  40dd24:	cdq    
  40dd25:	(bad)  
  40dd26:	rcl    cl,cl
  40dd28:	or     ebx,DWORD PTR [ebx-0x4f]
  40dd2b:	cmp    DWORD PTR [edx+0x69ee0cf7],esp
  40dd31:	mov    ch,0xeb
  40dd33:	add    eax,0x572eafe6
  40dd38:	mov    bl,0xb
  40dd3a:	(bad)  
  40dd3b:	loop   0x40dda0
  40dd3d:	data16 aad 0xc4
  40dd40:	push   ebx
  40dd41:	mov    edx,0xae3c6358
  40dd46:	pop    ebx
  40dd47:	jge    0x40dd8d
  40dd49:	fist   WORD PTR [eax]
  40dd4b:	std    
  40dd4c:	(bad)  
  40dd4d:	int3   
  40dd4e:	push   esi
  40dd4f:	and    BYTE PTR [ecx],al
  40dd51:	fisubr DWORD PTR [esp+esi*8]
  40dd54:	sar    ebx,1
  40dd56:	pop    edi
  40dd57:	mov    esp,0x6fa906bb
  40dd5c:	add    esp,esp
  40dd5e:	(bad)  
  40dd5f:	dec    esi
  40dd60:	scas   al,BYTE PTR es:[edi]
  40dd61:	test   al,0x57
  40dd63:	cwde   
  40dd64:	mov    ah,BYTE PTR [edx]
  40dd66:	fldcw  WORD PTR [edx-0x6dfe65c1]
  40dd6c:	xor    DWORD PTR [eax],esp
  40dd6e:	nop
  40dd6f:	cli    
  40dd70:	jmp    0x177320cc
  40dd75:	call   0x664b:0x3967ff05
  40dd7c:	in     eax,0x1b
  40dd7e:	rol    cl,1
  40dd80:	(bad)
  40dd84:	fild   DWORD PTR [eax]
  40dd86:	jge    0x40ddf9
  40dd88:	mov    edi,0xb32ae28e
  40dd8d:	mov    WORD PTR [edi-0x70],cs
  40dd90:	adc    DWORD PTR [ebx+0x40],eax
  40dd93:	mov    dl,BYTE PTR [ebx+0x4c35ce01]
  40dd99:	mov    al,0x91
  40dd9b:	pop    esi
  40dd9c:	inc    edi
  40dd9d:	loop   0x40ddc3
  40dd9f:	std    
  40dda0:	fcom   DWORD PTR [ebp+0x59]
  40dda3:	or     DWORD PTR [ecx+ebx*2-0x36],ebx
  40dda7:	mov    al,0x7d
  40dda9:	inc    esp
  40ddaa:	inc    edx
  40ddab:	cmc    
  40ddac:	ins    BYTE PTR es:[edi],dx
  40ddad:	push   ebx
  40ddae:	xchg   esp,eax
  40ddaf:	lock es push ss
  40ddb2:	jno    0x40de09
  40ddb4:	sti    
  40ddb5:	and    BYTE PTR [ecx+0xf0aeca9],ch
  40ddbb:	xor    al,0x1f
  40ddbd:	push   0x4f7fac38
  40ddc2:	and    al,0xe3
  40ddc4:	pop    esp
  40ddc5:	jo     0x40ddc6
  40ddc7:	or     DWORD PTR [ebp+eiz*2-0x31],0xfffffff1
  40ddcc:	jp     0x40ddf9
  40ddce:	daa    
  40ddcf:	pusha  
  40ddd0:	push   edi
  40ddd1:	cwde   
  40ddd2:	mov    ebx,DWORD PTR [edi+0x6e]
  40ddd5:	mov    ebx,0x9e321f24
  40ddda:	fsub   QWORD PTR [ebx-0x956cbd7]
  40dde0:	daa    
  40dde1:	sbb    dl,BYTE PTR gs:[esi-0x4d]
  40dde5:	xchg   ch,bl
  40dde7:	sbb    ah,BYTE PTR [ecx-0x77]
  40ddea:	iret   
  40ddeb:	cwde   
  40ddec:	push   0xfffffff7
  40ddee:	(bad)  
  40ddef:	cmp    eax,0xca479c
  40ddf4:	push   esp
  40ddf5:	(bad)  
  40ddf6:	mov    eax,0x733282cb
  40ddfb:	in     al,dx
  40ddfc:	jecxz  0x40de4c
  40ddfe:	cmp    BYTE PTR [edi],dl
  40de00:	push   ebp
  40de01:	sbb    edi,DWORD PTR [edx-0x5ab4f669]
  40de07:	sbb    DWORD PTR [eax+0x2e],ebx
  40de0a:	test   DWORD PTR [edi],ecx
  40de0c:	(bad)  
  40de0d:	jnp    0x40ddec
  40de0f:	nop
  40de10:	cmova  edx,DWORD PTR [esi+0x55]
  40de14:	inc    edx
  40de15:	xchg   ebp,eax
  40de16:	mov    bh,0xe8
  40de18:	dec    ebp
  40de19:	jae    0x40de23
  40de1b:	add    eax,0x1253fa4d
  40de20:	hlt    
  40de21:	cli    
  40de22:	push   0x850769b7
  40de27:	repz ja 0x40dde9
  40de2a:	mov    ds:0x2d2d0be7,eax
  40de2f:	mov    dh,0xbf
  40de31:	arpl   WORD PTR [edx+ebp*2],ax
  40de34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de35:	mov    dh,0x11
  40de37:	mov    DWORD PTR [edx+0x14],ebx
  40de3a:	dec    ecx
  40de3b:	jl     0x40dddb
  40de3d:	pop    ebp
  40de3e:	cmp    al,0x58
  40de40:	xor    edi,edx
  40de42:	cmp    bh,BYTE PTR [esi]
  40de44:	js     0x40de54
  40de46:	push   esi
  40de47:	adc    al,0x65
  40de49:	test   eax,0x2db03653
  40de4e:	add    eax,0xcc6c07e5
  40de53:	pushf  
  40de54:	inc    edi
  40de55:	mov    edi,DWORD PTR [ebx-0x63]
  40de58:	rol    DWORD PTR ds:0xfcbfd08a,1
  40de5e:	dec    edi
  40de5f:	dec    edi
  40de60:	cmp    eax,0x2a776683
  40de65:	out    dx,al
  40de66:	xor    eax,0xe7e3c78e
  40de6b:	lea    ecx,[edi-0x4b]
  40de6e:	adc    DWORD PTR [ebx-0x6773c7ec],esi
  40de74:	popa   
  40de75:	mov    bh,ch
  40de77:	and    ch,dl
  40de79:	pop    edi
  40de7a:	sub    ch,dl
  40de7c:	js     0x40deba
  40de7e:	xchg   esp,eax
  40de7f:	mov    dh,0x9d
  40de81:	xor    dl,BYTE PTR [ebp-0x17]
  40de84:	lahf   
  40de85:	cdq    
  40de86:	lock iret 
  40de88:	imul   esp,ebp,0xd2adb1ba
  40de8e:	fist   DWORD PTR [esp+edx*1+0x21]
  40de92:	retf   
  40de93:	mov    ebx,0x59f6212c
  40de98:	stos   BYTE PTR es:[edi],al
  40de99:	in     eax,0x8c
  40de9b:	inc    esp
  40de9c:	mov    si,WORD PTR [esi]
  40de9f:	push   esi
  40dea0:	cmp    edx,DWORD PTR [eax-0x64]
  40dea3:	add    eax,0x96c7d067
  40dea8:	fwait
  40dea9:	pop    eax
  40deaa:	mov    dh,0x71
  40deac:	xchg   edx,eax
  40dead:	add    al,0x41
  40deaf:	inc    ecx
  40deb0:	jmp    0x9a3bab4e
  40deb5:	jl     0x40df23
  40deb7:	je     0x40de61
  40deb9:	add    al,0xf3
  40debb:	or     DWORD PTR [edx+0x8b3ef4d],0xffffffdc
  40dec2:	or     ebx,DWORD PTR [esi+0x7f]
  40dec5:	ret    
  40dec6:	test   ah,ah
  40dec8:	sbb    DWORD PTR [edx-0x10],ecx
  40decb:	mov    eax,ds:0xeae78a9b
  40ded0:	add    esp,0x6a35364c
  40ded6:	xchg   DWORD PTR [esp+esi*2],ebx
  40ded9:	mov    ch,cl
  40dedb:	mov    dl,0x60
  40dedd:	dec    edx
  40dede:	pushf  
  40dedf:	clc    
  40dee0:	jbe    0x40dec0
  40dee2:	and    DWORD PTR [eax],edi
  40dee4:	adc    ah,BYTE PTR [edi+0x2a268c7a]
  40deea:	jmp    0xf8ca:0x2a512473
  40def1:	iret   
  40def2:	mov    eax,ds:0x3a2a624a
  40def7:	xor    al,0xfe
  40def9:	mov    ah,0x4
  40defb:	dec    edi
  40defc:	ss retf 0x5b37
  40df00:	xor    eax,DWORD PTR [eax]
  40df02:	jecxz  0x40df45
  40df04:	mov    ?,WORD PTR [ebp+0x53]
  40df07:	cmp    eax,0xb2d17901
  40df0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df0d:	repnz dec edx
  40df0f:	sbb    al,0xfc
  40df11:	clc    
  40df12:	out    dx,eax
  40df13:	mov    eax,DWORD PTR es:[edi-0x23bac3ae]
  40df1a:	stc    
  40df1b:	mov    dh,0x99
  40df1d:	sub    dh,0x58
  40df20:	sub    BYTE PTR [edi-0x1a4fbaf9],bh
  40df26:	inc    ebx
  40df27:	fimul  WORD PTR [edx+0x4a6f553b]
  40df2d:	pop    edx
  40df2e:	jle    0x40df74
  40df30:	enter  0xf7da,0xc
  40df34:	xor    eax,0x725435b2
  40df39:	sub    edi,DWORD PTR [edx-0x48]
  40df3c:	pop    ebp
  40df3d:	mov    ds:0xc61aa32e,eax
  40df42:	daa    
  40df43:	(bad)  
  40df44:	sbb    eax,0x7cacfd80
  40df49:	push   ecx
  40df4a:	push   ecx
  40df4b:	push   ebp
  40df4c:	and    bh,BYTE PTR [ebx-0x548c3d9e]
  40df52:	jmp    0x69a564d5
  40df57:	les    esp,FWORD PTR [edx]
  40df59:	inc    edi
  40df5a:	rcr    BYTE PTR [edx-0x5c500cd0],1
  40df60:	or     al,bh
  40df62:	pushf  
  40df63:	jno    0x40df5a
  40df65:	mov    WORD PTR [esi+0x7a],gs
  40df68:	fwait
  40df69:	pop    eax
  40df6a:	data16 jle 0x40df37
  40df6d:	jp     0x40df1f
  40df6f:	stos   BYTE PTR es:[edi],al
  40df70:	nop
  40df71:	imul   esp,ebp,0x94c861c6
  40df77:	jb     0x40dff5
  40df79:	jl     0x40df5f
  40df7b:	test   eax,0xa4263ead
  40df80:	outs   dx,DWORD PTR ds:[esi]
  40df81:	adc    eax,0x4a914472
  40df86:	or     edx,DWORD PTR [edx]
  40df88:	add    eax,0xd0478023
  40df8d:	jo     0x40e00d
  40df8f:	loop   0x40df6c
  40df91:	mov    ecx,0x36542d47
  40df96:	pop    ds
  40df97:	jb     0x40df48
  40df99:	push   cs
  40df9a:	xchg   ebp,eax
  40df9b:	repz shl DWORD PTR [esi-0x3e],1
  40df9f:	into   
  40dfa0:	call   DWORD PTR [edi-0x719443f3]
  40dfa6:	cmp    DWORD PTR [esi+0x61],0x64b78dd2
  40dfad:	push   ds
  40dfae:	aam    0x85
  40dfb0:	cwde   
  40dfb1:	iret   
  40dfb2:	push   ebp
  40dfb3:	add    edi,DWORD PTR [edx]
  40dfb5:	push   edx
  40dfb6:	add    edx,DWORD PTR [ebp-0x59]
  40dfb9:	mov    dl,0x5f
  40dfbb:	add    bl,cl
  40dfbd:	in     eax,0x7b
  40dfbf:	dec    esp
  40dfc0:	adc    ebp,DWORD PTR [esi+0x410851e8]
  40dfc6:	loop   0x40df94
  40dfc8:	sub    esp,DWORD PTR [edi]
  40dfca:	stos   BYTE PTR es:[edi],al
  40dfcb:	push   esi
  40dfcc:	stos   BYTE PTR es:[edi],al
  40dfcd:	and    BYTE PTR [edx+0x4290c859],0x11
  40dfd4:	xchg   ebx,eax
  40dfd5:	shl    DWORD PTR [ebp+0x50],cl
  40dfd8:	and    DWORD PTR [ebx+0x7f],ecx
  40dfdb:	imul   ecx,DWORD PTR [esp+eax*1-0x24],0x60e0c7d5
  40dfe3:	push   ds
  40dfe4:	xchg   esp,eax
  40dfe5:	xor    al,0x3
  40dfe7:	xchg   esp,eax
  40dfe8:	fs scas eax,DWORD PTR es:[edi]
  40dfea:	or     al,0x2c
  40dfec:	mov    cl,0x67
  40dfee:	sbb    bl,bl
  40dff0:	sahf   
  40dff1:	pop    eax
  40dff2:	aaa    
  40dff3:	ret    0xb0c2
  40dff6:	addr16 loop 0x40e068
  40dff9:	dec    ebp
  40dffa:	cmp    bl,BYTE PTR [ebp+0x42]
  40dffd:	stos   BYTE PTR es:[edi],al
  40dffe:	leave  
  40dfff:	test   eax,0x9d7c47d7
  40e004:	retf   
  40e005:	into   
  40e006:	ror    DWORD PTR [eax],0x84
  40e009:	(bad)  
  40e00a:	cmp    eax,0x8243b4b8
  40e00f:	sub    DWORD PTR [esi+0x68],esp
  40e012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e013:	retf   
  40e014:	(bad)  
  40e015:	mov    esp,0x59a7e619
  40e01a:	mov    al,0x28
  40e01c:	aam    0x47
  40e01e:	fwait
  40e01f:	in     eax,0x8b
  40e021:	pop    ebp
  40e022:	test   eax,0x3752c52f
  40e027:	lock pusha 
  40e029:	push   esp
  40e02a:	ds cmc 
  40e02c:	mov    ecx,0x4e4b009d
  40e031:	shl    cl,0x7b
  40e034:	xchg   DWORD PTR [esi-0xa],ebp
  40e037:	mov    esp,DWORD PTR [eax+ecx*4+0x1401b6fb]
  40e03e:	imul   BYTE PTR [esi]
  40e040:	in     eax,0xa3
  40e042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e043:	xlat   BYTE PTR ds:[ebx]
  40e044:	dec    ebp
  40e045:	inc    esp
  40e046:	dec    edi
  40e047:	add    BYTE PTR [esi],bh
  40e049:	lods   al,BYTE PTR ds:[esi]
  40e04a:	jno    0x40dfe5
  40e04c:	out    dx,al
  40e04d:	pop    edx
  40e04e:	(bad)
  40e051:	in     eax,dx
  40e052:	cmp    esi,DWORD PTR [ecx*8+0x311cce89]
  40e059:	lahf   
  40e05a:	or     ecx,DWORD PTR [ebx-0x3d]
  40e05d:	or     eax,0xa664b8d5
  40e062:	es mov edi,0xdb32dc76
  40e068:	fnstcw WORD PTR [ecx-0x1c833253]
  40e06e:	in     al,dx
  40e06f:	pop    esp
  40e070:	xlat   BYTE PTR ds:[ebx]
  40e071:	push   ebp
  40e072:	ins    BYTE PTR es:[edi],dx
  40e073:	jmp    0x40e0d7
  40e075:	hlt    
  40e076:	lea    ebp,[ecx+eax*2-0xf2af44a]
  40e07d:	cmp    BYTE PTR ds:0xc595f28f,al
  40e083:	inc    eax
  40e084:	enter  0xd7c7,0x6
  40e088:	pop    eax
  40e089:	push   ds
  40e08a:	(bad)  
  40e08c:	jno    0x40e092
  40e08e:	push   ecx
  40e08f:	je     0x40e0bd
  40e091:	int3   
  40e092:	fwait
  40e093:	pop    ss
  40e094:	ja     0x40e031
  40e096:	and    DWORD PTR [eax+0x4e880174],esi
  40e09c:	pop    edx
  40e09d:	xor    edx,esp
  40e09f:	loope  0x40e118
  40e0a1:	adc    edx,DWORD PTR ss:[ecx+ebx*8+0x66]
  40e0a6:	ins    DWORD PTR es:[edi],dx
  40e0a7:	add    dh,BYTE PTR [eax+0x7c]
  40e0aa:	fmul   DWORD PTR [edi+ebp*2+0x52c9d369]
  40e0b1:	ins    BYTE PTR es:[edi],dx
  40e0b2:	pop    esp
  40e0b3:	inc    ecx
  40e0b4:	xor    al,0xd8
  40e0b6:	and    cl,BYTE PTR [ecx+0xd]
  40e0b9:	inc    ebx
  40e0ba:	icebp  
  40e0bb:	enter  0x951b,0x8d
  40e0bf:	ret    0xe8ec
  40e0c2:	inc    edi
  40e0c3:	xchg   edx,eax
  40e0c4:	xor    esp,DWORD PTR [esp+ebx*8-0x1d]
  40e0c8:	or     al,0xc4
  40e0ca:	or     DWORD PTR [esi+0x5145f171],esp
  40e0d0:	mov    ecx,0xc601c5a9
  40e0d5:	dec    edi
  40e0d6:	dec    esp
  40e0d7:	int3   
  40e0d8:	push   0xb458e33d
  40e0dd:	sar    BYTE PTR [ecx-0x161959f1],1
  40e0e3:	add    dh,BYTE PTR [ecx+0x63ce52f1]
  40e0e9:	mov    ebp,0xa3d71dfa
  40e0ee:	xor    ebp,ebx
  40e0f0:	jns    0x40e095
  40e0f2:	xor    bh,BYTE PTR [edi]
  40e0f4:	jb     0x40e14f
  40e0f6:	pushf  
  40e0f7:	aaa    
  40e0f8:	and    eax,0xe206447d
  40e0fd:	shl    DWORD PTR [ebx+eax*2],0x5
  40e101:	sahf   
  40e102:	xor    cl,BYTE PTR [eax]
  40e104:	sbb    esp,DWORD PTR [esi-0x57335fb3]
  40e10a:	loop   0x40e14e
  40e10c:	int    0x18
  40e10e:	jmp    0xa069:0xf446488f
  40e115:	mov    eax,0x693c9366
  40e11a:	pushf  
  40e11b:	out    dx,al
  40e11c:	adc    bl,BYTE PTR [ecx+0x6d]
  40e11f:	lods   eax,DWORD PTR ds:[esi]
  40e120:	xor    esp,DWORD PTR [ebx+esi*4-0xc]
  40e124:	cmp    al,0x71
  40e126:	fwait
  40e127:	add    eax,0xaeb4647f
  40e12c:	mov    cl,BYTE PTR [eax-0x1c]
  40e12f:	mov    edx,0x18f46344
  40e134:	test   eax,0x2aa3dea7
  40e139:	bound  ebx,QWORD PTR ds:[ecx+0x2a05a768]
  40e140:	inc    DWORD PTR [ebp-0x159c256d]
  40e146:	mov    eax,ds:0xcc4aedcc
  40e14b:	jmp    0x40e1a9
  40e14d:	loopne 0x40e0ed
  40e14f:	push   ss
  40e150:	sbb    edx,edi
  40e152:	loope  0x40e0d4
  40e154:	and    edx,DWORD PTR [edi+0x43]
  40e157:	sbb    bl,cl
  40e159:	scas   eax,DWORD PTR es:[edi]
  40e15a:	int3   
  40e15b:	push   es
  40e15c:	push   es
  40e15d:	jb     0x40e1a2
  40e15f:	into   
  40e160:	lahf   
  40e161:	sub    DWORD PTR [ebp+0x60],edx
  40e164:	nop
  40e165:	add    DWORD PTR [esi-0x50],0x5810db70
  40e16c:	mov    esp,0xe8041f1b
  40e171:	xor    bh,BYTE PTR [ecx]
  40e173:	fist   WORD PTR [ebp-0x59ae58b0]
  40e179:	out    0x93,al
  40e17b:	(bad)
  40e17e:	scas   eax,DWORD PTR es:[edi]
  40e17f:	int3   
  40e180:	xchg   esi,esi
  40e182:	test   eax,0xb7ffab9a
  40e187:	mov    bl,0x1c
  40e189:	push   cs
  40e18a:	mov    ebx,0xe965e4c0
  40e18f:	xor    DWORD PTR [ebx-0x1d],esi
  40e192:	xchg   edx,eax
  40e193:	or     DWORD PTR [eax-0xcec1585],edi
  40e199:	adc    al,0xc7
  40e19b:	scas   al,BYTE PTR es:[di]
  40e19d:	push   ebp
  40e19e:	pop    esp
  40e19f:	das    
  40e1a0:	in     al,0x89
  40e1a2:	ja     0x40e21f
  40e1a4:	jae    0x40e149
  40e1a6:	int3   
  40e1a7:	or     eax,0xd7f053df
  40e1ac:	mov    gs,WORD PTR [ebp-0x62]
  40e1af:	aad    0xaf
  40e1b1:	cmp    DWORD PTR [edx],edi
  40e1b3:	inc    edx
  40e1b4:	lods   eax,DWORD PTR ds:[esi]
  40e1b5:	test   DWORD PTR [ebx-0x32],ebx
  40e1b8:	xchg   edx,eax
  40e1b9:	jb     0x40e152
  40e1bb:	push   esp
  40e1bc:	in     al,dx
  40e1bd:	push   ebx
  40e1be:	xchg   DWORD PTR [edi],ecx
  40e1c0:	sub    eax,0x455d685b
  40e1c5:	mov    ds,eax
  40e1c7:	mov    al,ds:0xd679acb4
  40e1cc:	loope  0x40e19f
  40e1ce:	mov    al,0x1
  40e1d0:	dec    eax
  40e1d1:	stos   DWORD PTR es:[edi],eax
  40e1d2:	pusha  
  40e1d3:	scas   al,BYTE PTR es:[edi]
  40e1d4:	mov    al,ds:0xb7181031
  40e1d9:	jo     0x40e1c6
  40e1db:	jae    0x40e21e
  40e1dd:	loope  0x40e25e
  40e1df:	cmp    eax,DWORD PTR [edi-0x2ae08f6a]
  40e1e5:	arpl   WORD PTR [edi-0x40fa43c0],ax
  40e1eb:	call   0x629d:0x74edbdc6
  40e1f2:	jnp    0x40e263
  40e1f4:	sbb    dl,0x88
  40e1f7:	rcr    DWORD PTR [edi+0x36],0x2f
  40e1fb:	inc    ebx
  40e1fc:	fwait
  40e1fd:	icebp  
  40e1fe:	sbb    ebx,DWORD PTR [esi-0x68d759ab]
  40e204:	mov    ds:0x3f49ed49,eax
  40e209:	imul   ebp,DWORD PTR ds:0xfef9b27,0xffffffbb
  40e210:	push   ecx
  40e211:	sbb    DWORD PTR [esi+0x40],eax
  40e214:	lock and DWORD PTR [ebp-0x51],ecx
  40e218:	sub    al,0xcf
  40e21a:	cwde   
  40e21b:	ret    0x13b
  40e21e:	test   al,0xfc
  40e220:	mov    ebx,0xa68241dc
  40e225:	test   al,0xaf
  40e227:	sti    
  40e228:	or     al,0x15
  40e22a:	enter  0x39e1,0xd2
  40e22e:	mov    eax,0x3bf55677
  40e233:	pop    cx
  40e235:	push   cs
  40e236:	rcr    DWORD PTR [ecx-0x563d132d],1
  40e23c:	fcmove st,st(2)
  40e23e:	adc    bh,bl
  40e240:	mov    ds,ebx
  40e242:	das    
  40e243:	mov    dl,0xec
  40e245:	jmp    0x40e1db
  40e247:	stos   DWORD PTR es:[edi],eax
  40e248:	lea    esp,[eax+0x25d213b5]
  40e24e:	sbb    BYTE PTR [eax],bl
  40e250:	and    BYTE PTR [ecx-0x6f08e6af],al
  40e256:	scas   al,BYTE PTR es:[edi]
  40e257:	push   edi
  40e258:	cmp    bl,cl
  40e25a:	push   cs
  40e25b:	sub    BYTE PTR [ecx+0x2f2e2021],al
  40e261:	retfw  
  40e263:	pop    es
  40e264:	dec    edx
  40e265:	mov    esp,0x745ec43f
  40e26a:	(bad)  [ecx+0x13cedb13]
  40e270:	push   ds
  40e271:	xor    ch,0x1
  40e274:	div    BYTE PTR [esi-0x15]
  40e277:	std    
  40e278:	inc    esi
  40e279:	and    DWORD PTR [eax-0x7baa0e29],ebp
  40e27f:	add    ch,bl
  40e281:	push   ds
  40e282:	xchg   edi,eax
  40e283:	mov    ds:0xec9567e7,al
  40e288:	lds    ecx,FWORD PTR [ebx-0x791426b6]
  40e28e:	cli    
  40e28f:	cld    
  40e290:	arpl   cx,dx
  40e292:	dec    esp
  40e293:	aam    0xe6
  40e295:	leave  
  40e296:	ins    DWORD PTR es:[edi],dx
  40e297:	dec    edx
  40e298:	pop    ebp
  40e299:	retf   0x730d
  40e29c:	leave  
  40e29d:	cwde   
  40e29e:	dec    ebx
  40e29f:	jmp    0x65f:0xfe23ddb6
  40e2a6:	sbb    al,0x54
  40e2a8:	aad    0x8
  40e2aa:	pop    ebp
  40e2ab:	test   DWORD PTR [edi+eiz*4],edx
  40e2ae:	mov    eax,ds:0x23f66917
  40e2b3:	push   es
  40e2b4:	xchg   ebx,eax
  40e2b5:	cmp    BYTE PTR [edx+0x1],dh
  40e2b8:	cmp    eax,0xb144ef08
  40e2bd:	pop    edi
  40e2be:	test   al,0x6
  40e2c0:	iret   
  40e2c1:	call   0x579f7199
  40e2c6:	inc    eax
  40e2c7:	dec    edi
  40e2c8:	aad    0x58
  40e2ca:	inc    eax
  40e2cb:	mov    dl,0xc8
  40e2cd:	pop    ebp
  40e2ce:	gs idiv DWORD PTR ss:[ebp-0x69]
  40e2d3:	pushf  
  40e2d4:	dec    ebp
  40e2d5:	xchg   edx,eax
  40e2d6:	lds    eax,FWORD PTR [ecx]
  40e2d8:	or     esp,ebx
  40e2da:	jmp    0x2b99:0x3cc3db45
  40e2e1:	sbb    BYTE PTR [ebp-0x42f9378f],ah
  40e2e7:	cmp    eax,0xc9a8d13
  40e2ec:	xacquire xchg BYTE PTR [ebp-0x13],ah
  40e2f0:	outs   dx,DWORD PTR ds:[esi]
  40e2f1:	in     eax,dx
  40e2f2:	mov    fs,esi
  40e2f4:	jb     0x40e2e9
  40e2f6:	and    cl,BYTE PTR [ecx-0x44]
  40e2f9:	adc    bl,0xea
  40e2fc:	pop    edx
  40e2fd:	push   ss
  40e2fe:	retf   
  40e2ff:	call   0x2a3b:0x60eb38e9
  40e306:	mov    ch,0x9c
  40e308:	sti    
  40e309:	cmp    BYTE PTR [edx+0x3e5a6751],dl
  40e30f:	ret    0xfa09
  40e312:	xor    esp,esp
  40e314:	sbb    ch,BYTE PTR [edi+ebx*8-0x3f]
  40e318:	push   eax
  40e319:	inc    ecx
  40e31a:	mov    ebx,esp
  40e31c:	push   eax
  40e31d:	mov    ecx,0x32bee50b
  40e322:	jmp    0x1c3f:0x94c9fce9
  40e329:	je     0x40e34a
  40e32b:	lock sbb DWORD PTR [edx+0xb767f91],0xffffffbb
  40e333:	lds    esi,FWORD PTR [edx]
  40e335:	jne    0x40e2ca
  40e337:	pop    eax
  40e338:	mov    dh,0xb5
  40e33a:	mov    ecx,0x860cf611
  40e33f:	js     0x40e2dc
  40e341:	fst    DWORD PTR [ecx-0x55]
  40e344:	fisubr WORD PTR [edx]
  40e346:	pop    edi
  40e347:	mov    ebx,0xab89ac4
  40e34c:	test   DWORD PTR [eax],0x5efc7d78
  40e352:	mov    ds:0x92cf737c,eax
  40e357:	out    0x26,al
  40e359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e35a:	out    0xae,eax
  40e35c:	cdq    
  40e35d:	pop    esi
  40e35e:	int3   
  40e35f:	jo     0x40e31b
  40e361:	clc    
  40e362:	adc    bl,bl
  40e364:	(bad)  
  40e365:	not    BYTE PTR [edx+0x55cd35f3]
  40e36b:	xchg   esp,eax
  40e36c:	jmp    0x40e3ae
  40e36e:	fsub   QWORD PTR [ebx-0x78e951b0]
  40e374:	aaa    
  40e375:	retf   
  40e376:	aad    0xc
  40e378:	loop   0x40e383
  40e37a:	xor    DWORD PTR [ecx+0x7ccf049d],esi
  40e380:	aam    0x44
  40e382:	aam    0x9e
  40e384:	(bad)  [edx]
  40e386:	(bad)  
  40e387:	dec    edx
  40e388:	xchg   edi,eax
  40e389:	and    bh,BYTE PTR [esi]
  40e38b:	dec    edi
  40e38c:	sub    eax,0x7a68a445
  40e391:	xor    edx,DWORD PTR [ebx-0x50e34a13]
  40e397:	lea    esi,[edi-0x63faade]
  40e39d:	sbb    DWORD PTR [ecx+0x29],edx
  40e3a0:	push   edx
  40e3a1:	cmp    al,BYTE PTR ds:0x149f7332
  40e3a7:	mov    ebp,0x88542913
  40e3ac:	xchg   esp,eax
  40e3ad:	mov    edx,0x8efe64eb
  40e3b2:	out    dx,al
  40e3b3:	jmp    0x5704d4b4
  40e3b8:	mov    al,0x3d
  40e3ba:	in     eax,dx
  40e3bb:	sbb    eax,eax
  40e3bd:	push   edi
  40e3be:	inc    esp
  40e3bf:	fisubr WORD PTR [esi-0x44]
  40e3c2:	or     edx,ebp
  40e3c4:	mov    al,ds:0xfc6ae7a0
  40e3c9:	fsubr  QWORD PTR [edi-0x64]
  40e3cc:	int    0x1
  40e3ce:	adc    ebp,DWORD PTR [esi+0x71]
  40e3d1:	(bad)  
  40e3d2:	push   eax
  40e3d3:	fmul   st,st(6)
  40e3d5:	scas   al,BYTE PTR es:[edi]
  40e3d6:	(bad)  
  40e3d7:	ja     0x40e44d
  40e3d9:	jno    0x40e3e3
  40e3db:	and    edi,edx
  40e3dd:	adc    bh,BYTE PTR [edx-0xffe4d41]
  40e3e3:	or     eax,DWORD PTR [esi+esi*2-0x77]
  40e3e7:	mov    cl,0xc2
  40e3e9:	sbb    edi,DWORD PTR [eax-0x2aff43b6]
  40e3ef:	dec    ebp
  40e3f0:	and    DWORD PTR [edx],ebp
  40e3f2:	shl    ebx,0x3d
  40e3f5:	lock push edx
  40e3f7:	jbe    0x40e391
  40e3f9:	push   0x5f09c361
  40e3fe:	cmp    eax,0x5c27044
  40e403:	popf   
  40e404:	push   ebp
  40e405:	mov    ds:0xe57111dc,eax
  40e40a:	cmp    edi,edi
  40e40c:	xchg   edx,eax
  40e40d:	or     dh,BYTE PTR [esi]
  40e40f:	cdq    
  40e410:	dec    edi
  40e411:	call   0xb2274ffa
  40e416:	cmp    BYTE PTR [ecx+0x64d48931],al
  40e41c:	aas    
  40e41d:	imul   edi,DWORD PTR [ecx-0x12],0xffffff9c
  40e421:	xor    al,0x63
  40e423:	cmp    BYTE PTR [ebp+0x73],0x52
  40e427:	hlt    
  40e428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e429:	xchg   ecx,eax
  40e42a:	pop    edi
  40e42b:	call   FWORD PTR [ebx-0x1cff250e]
  40e431:	dec    ebx
  40e432:	std    
  40e433:	scas   eax,DWORD PTR es:[edi]
  40e434:	mov    BYTE PTR [eax+0x1c],dl
  40e437:	pop    eax
  40e438:	adc    esp,DWORD PTR [edx-0x5a]
  40e43b:	out    0x41,eax
  40e43d:	in     al,0x50
  40e43f:	lods   eax,DWORD PTR ds:[esi]
  40e440:	movsx  ebx,BYTE PTR [eax+0xf]
  40e444:	pop    es
  40e445:	add    al,0xbf
  40e447:	shl    ah,0xf8
  40e44a:	pop    ds
  40e44b:	pop    ds
  40e44c:	fcom   QWORD PTR [ebx+0x5fde5d3d]
  40e452:	jmp    0x40e3d7
  40e454:	xor    BYTE PTR [ecx+0x63],bh
  40e457:	(bad)  
  40e458:	sbb    eax,0x5fcbf920
  40e45d:	aas    
  40e45e:	sub    BYTE PTR [edx-0x36],cl
  40e461:	mov    WORD PTR [esi+0x7a],?
  40e464:	clc    
  40e465:	aas    
  40e466:	(bad)  
  40e467:	add    ecx,DWORD PTR [eax]
  40e469:	or     ebx,DWORD PTR [esp+edi*2]
  40e46c:	in     al,dx
  40e46d:	dec    esp
  40e46e:	add    al,0x45
  40e470:	push   ecx
  40e471:	sbb    esp,ecx
  40e473:	pop    edi
  40e474:	or     edx,DWORD PTR [ecx-0x47]
  40e477:	or     al,BYTE PTR [esp+esi*4-0x29]
  40e47b:	call   0x50de7d57
  40e480:	icebp  
  40e481:	xlat   BYTE PTR ds:[ebx]
  40e482:	and    al,0xa0
  40e484:	dec    ebp
  40e485:	mov    BYTE PTR [edi],ch
  40e487:	test   eax,0x8720f1e7
  40e48c:	aaa    
  40e48d:	shl    ecx,cl
  40e48f:	xor    BYTE PTR [edi-0x69],0x77
  40e493:	dec    eax
  40e494:	repz inc ecx
  40e496:	sbb    dl,0x8b
  40e499:	das    
  40e49a:	cmp    al,0x6e
  40e49c:	shl    DWORD PTR [edx+edx*2-0x11],1
  40e4a0:	sub    esp,DWORD PTR [esi+0x7e331855]
  40e4a6:	outs   dx,DWORD PTR ds:[esi]
  40e4a7:	fdiv   DWORD PTR [ebx+0x55]
  40e4aa:	mov    WORD PTR [ebx-0x68],?
  40e4ad:	loope  0x40e441
  40e4af:	fwait
  40e4b0:	mov    ebx,edi
  40e4b2:	dec    edx
  40e4b3:	dec    esp
  40e4b4:	stc    
  40e4b5:	pop    edx
  40e4b6:	dec    edx
  40e4b7:	shr    ecx,1
  40e4b9:	push   edx
  40e4ba:	jb     0x40e48f
  40e4bc:	inc    ecx
  40e4bd:	fistp  DWORD PTR [ebp-0x1b8d238c]
  40e4c3:	daa    
  40e4c4:	sbb    eax,0x99fe486a
  40e4c9:	pop    edx
  40e4ca:	xchg   ebx,eax
  40e4cb:	dec    eax
  40e4cc:	(bad)  
  40e4cd:	stc    
  40e4ce:	inc    esi
  40e4cf:	dec    edx
  40e4d0:	and    ch,BYTE PTR [esi+0x5b]
  40e4d3:	pop    edx
  40e4d4:	cmp    BYTE PTR [ecx-0x4c7c0304],ch
  40e4da:	pop    eax
  40e4db:	jae    0x40e471
  40e4dd:	syscall 
  40e4df:	fwait
  40e4e0:	jo     0x40e50d
  40e4e2:	or     eax,0xd98b163a
  40e4e8:	fstp   QWORD PTR ds:0x5fff22bf
  40e4ee:	adc    bh,BYTE PTR [ecx+edi*1+0x2498275e]
  40e4f5:	cmp    cl,ah
  40e4f7:	dec    ecx
  40e4f8:	jl     0x40e4cc
  40e4fa:	fiadd  WORD PTR [esi+0x6e]
  40e4fd:	loope  0x40e497
  40e4ff:	dec    ebx
  40e500:	fisub  WORD PTR [ecx-0x31337135]
  40e506:	lods   eax,DWORD PTR ss:[esi]
  40e508:	sbb    ch,BYTE PTR [ecx+0x14]
  40e50b:	fadd   st,st(6)
  40e50d:	add    eax,0xe82a59d6
  40e512:	loope  0x40e564
  40e514:	and    ch,BYTE PTR [edi-0xa]
  40e517:	and    eax,DWORD PTR [ebx+0x46]
  40e51a:	cli    
  40e51b:	out    dx,eax
  40e51c:	and    eax,0xa0ba8ae6
  40e521:	xchg   BYTE PTR [edi+ecx*4],bh
  40e524:	adc    esp,DWORD PTR [esi]
  40e526:	xchg   ebp,eax
  40e527:	add    al,BYTE PTR [ebx+esi*2+0x8]
  40e52b:	aam    0xd7
  40e52d:	sbb    edi,DWORD PTR [edx+0x31d05af2]
  40e533:	mov    BYTE PTR [ebx],ah
  40e535:	mov    ebx,0xe27186e9
  40e53a:	(bad)
  40e53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e53f:	ret    
  40e540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e541:	shl    DWORD PTR [ebx+ebp*1-0x38cb3d16],0xdf
  40e549:	fadd   QWORD PTR [esi+0x47]
  40e54c:	sub    DWORD PTR [esi],edx
  40e54e:	in     eax,dx
  40e54f:	adc    al,0x79
  40e551:	inc    edi
  40e552:	sti    
  40e553:	dec    ecx
  40e554:	pop    ds
  40e555:	jns    0x40e5c2
  40e557:	enter  0x8f2c,0x3
  40e55b:	inc    BYTE PTR [esi-0x39]
  40e55e:	jns    0x40e559
  40e560:	sahf   
  40e561:	push   es
  40e562:	inc    esp
  40e563:	sbb    BYTE PTR [edi+0x6223cd82],bh
  40e569:	cmp    eax,0xd2dcce5d
  40e56e:	or     BYTE PTR [esi-0x14],0x92
  40e572:	adc    al,0xe8
  40e574:	xchg   edx,eax
  40e575:	int    0x9c
  40e577:	add    al,0xbf
  40e579:	xor    al,0x51
  40e57b:	das    
  40e57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e57d:	in     eax,0x8f
  40e57f:	in     eax,dx
  40e580:	fcom   QWORD PTR [ebp+0x7a]
  40e583:	je     0x40e572
  40e585:	leave  
  40e586:	adc    BYTE PTR [ebp-0x50],dh
  40e589:	add    al,0xe0
  40e58b:	(bad)  
  40e58c:	jns    0x40e5a7
  40e58e:	and    esp,ecx
  40e590:	fwait
  40e591:	xchg   ecx,eax
  40e592:	mov    dh,0x5f
  40e594:	cmp    ch,dh
  40e596:	adc    edx,eax
  40e598:	sbb    BYTE PTR [ebx+0x2f],bl
  40e59b:	out    dx,al
  40e59c:	stos   DWORD PTR es:[edi],eax
  40e59d:	and    eax,0x18423a2a
  40e5a2:	inc    eax
  40e5a3:	nop
  40e5a4:	pop    ecx
  40e5a5:	fadd   DWORD PTR [ecx-0x39]
  40e5a8:	sbb    al,0x2c
  40e5aa:	inc    edi
  40e5ab:	pop    ecx
  40e5ac:	dec    ebp
  40e5ad:	xor    BYTE PTR [eax],ch
  40e5af:	and    eax,0xe8c9d966
  40e5b4:	jnp    0x40e56d
  40e5b6:	mov    BYTE PTR [edi],al
  40e5b8:	mov    bl,0x8e
  40e5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5bb:	mov    ebp,0xddb35d
  40e5c0:	pop    ebx
  40e5c1:	ror    al,1
  40e5c3:	pop    esi
  40e5c4:	inc    si
  40e5c6:	adc    dl,BYTE PTR [edx-0x7f]
  40e5c9:	inc    ebp
  40e5ca:	mov    esi,0x421967b5
  40e5cf:	mov    ebp,0x7e019138
  40e5d4:	or     al,0xa0
  40e5d6:	daa    
  40e5d7:	(bad)  
  40e5d8:	cmp    DWORD PTR [eax],esp
  40e5da:	(bad)  
  40e5db:	(bad)  
  40e5dc:	sbb    eax,0x9b5e2c10
  40e5e1:	xchg   edi,eax
  40e5e2:	sti    
  40e5e3:	in     al,dx
  40e5e4:	(bad)  
  40e5e5:	xchg   esp,eax
  40e5e6:	ins    DWORD PTR es:[edi],dx
  40e5e7:	sbb    BYTE PTR [edx-0x45e11916],bh
  40e5ed:	pop    ds
  40e5ee:	or     eax,0x845631f4
  40e5f3:	(bad)  
  40e5f4:	dec    eax
  40e5f5:	jbe    0x40e5f0
  40e5f7:	popf   
  40e5f8:	es dec ecx
  40e5fa:	push   ecx
  40e5fb:	cld    
  40e5fc:	rcl    DWORD PTR [ebx],0xd8
  40e5ff:	inc    esp
  40e600:	fcom   QWORD PTR [edx]
  40e602:	call   0xeff5:0xccf112d1
  40e609:	mov    ebx,0x9dcb2de9
  40e60e:	repz pop esp
  40e610:	retf   0x508f
  40e613:	loope  0x40e5f8
  40e615:	xchg   edi,eax
  40e616:	aam    0x93
  40e618:	stos   BYTE PTR es:[edi],al
  40e619:	fisub  DWORD PTR [esi+esi*1-0x63f3605c]
  40e620:	or     cl,ch
  40e622:	fstp   DWORD PTR [esi]
  40e624:	cmp    bh,BYTE PTR [ebx]
  40e626:	lds    ebx,FWORD PTR [ecx]
  40e628:	test   BYTE PTR [ebp+0x261fd16e],dh
  40e62e:	inc    ecx
  40e62f:	push   ds
  40e630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e631:	loopne 0x40e689
  40e633:	pop    ebx
  40e634:	xlat   BYTE PTR ds:[ebx]
  40e635:	push   cs
  40e636:	pushf  
  40e637:	clc    
  40e638:	adc    bl,BYTE PTR [edi+0x626cf40e]
  40e63e:	enter  0xee37,0x70
  40e642:	scas   al,BYTE PTR es:[edi]
  40e643:	not    BYTE PTR [ebp+0x1973a5e5]
  40e649:	dec    edi
  40e64a:	fwait
  40e64b:	loopne 0x40e67c
  40e64d:	jns    0x40e6cc
  40e64f:	scas   eax,DWORD PTR es:[edi]
  40e650:	xchg   edx,eax
  40e651:	loopne 0x40e6bc
  40e653:	cmp    eax,0x3f6f4bd
  40e658:	mov    ds:0xdf821b1e,eax
  40e65d:	ss or  bl,bh
  40e660:	inc    edx
  40e661:	je     0x40e6ba
  40e663:	push   ebx
  40e664:	aam    0xc2
  40e666:	mov    edi,0xccd6a5e6
  40e66b:	(bad)  
  40e66c:	mov    bh,0x8a
  40e66e:	sub    BYTE PTR [eax],bl
  40e670:	fiadd  DWORD PTR [edx+eiz*4]
  40e673:	mov    bl,dh
  40e675:	mov    ah,BYTE PTR [eax-0x17113aa6]
  40e67b:	adc    al,0xd9
  40e67d:	add    dl,BYTE PTR [ebp-0x29]
  40e680:	fsubr  st(6),st
  40e682:	xchg   edx,eax
  40e683:	popa   
  40e684:	stos   BYTE PTR es:[edi],al
  40e685:	repnz cmp al,0xd3
  40e688:	fmulp  st(7),st
  40e68a:	fisubr WORD PTR [edi+0x57520a28]
  40e690:	adc    bl,BYTE PTR [esi+0x72a5a34b]
  40e696:	icebp  
  40e697:	and    edx,esi
  40e699:	inc    ecx
  40e69b:	mov    al,0xe4
  40e69d:	repnz mov esp,0xcb1e993c
  40e6a3:	add    edx,ebp
  40e6a5:	stc    
  40e6a6:	xchg   BYTE PTR [esi+ecx*1],cl
  40e6a9:	pop    ds
  40e6aa:	mov    dl,0x30
  40e6ac:	pop    eax
  40e6ad:	jle    0x40e65f
  40e6af:	fstp   QWORD PTR [edi]
  40e6b1:	cmc    
  40e6b2:	inc    ecx
  40e6b3:	hlt    
  40e6b4:	add    DWORD PTR [ebx+0x5df85f9],0xffffffc5
  40e6bb:	shr    BYTE PTR ds:0x4352d233,0xfb
  40e6c2:	repnz ror ebp,0x11
  40e6c6:	mov    ebx,0xc2c32576
  40e6cb:	push   esi
  40e6cc:	and    eax,0x73a7c422
  40e6d1:	dec    ebp
  40e6d2:	test   al,0x51
  40e6d4:	cmp    bh,dh
  40e6d6:	mov    ebp,0x7fc1ced0
  40e6db:	add    eax,0x49542fe6
  40e6e0:	push   0x313fc48c
  40e6e5:	je     0x40e710
  40e6e7:	imul   eax,edi,0x970e368f
  40e6ed:	(bad)  
  40e6ee:	mov    ebp,0x4c48df24
  40e6f3:	mov    ss,WORD PTR [ecx-0x580255e4]
  40e6f9:	ret    
  40e6fa:	test   DWORD PTR [edi+0xa9da653],edx
  40e700:	push   ss
  40e701:	inc    ebp
  40e702:	arpl   WORD PTR [ecx-0x6a],bp
  40e705:	push   ss
  40e706:	neg    cl
  40e708:	(bad)  
  40e709:	sbb    ecx,esp
  40e70b:	mov    ch,0xdb
  40e70d:	iret   
  40e70e:	cmp    ebp,ebx
  40e710:	add    esp,ecx
  40e712:	cdq    
  40e713:	ins    DWORD PTR es:[edi],dx
  40e714:	push   esi
  40e715:	jl     0x40e6d1
  40e717:	ds dec ecx
  40e719:	push   0xffffff95
  40e71b:	jae    0x40e731
  40e71d:	mov    ebx,0x795552ba
  40e722:	push   ebp
  40e723:	popa   
  40e724:	rol    DWORD PTR [edx],0xbb
  40e727:	mov    eax,ds:0xfcfc6028
  40e72c:	mov    dh,0x87
  40e72e:	aas    
  40e72f:	push   esi
  40e730:	cmp    cl,bl
  40e732:	enter  0xd5a1,0xf3
  40e736:	into   
  40e737:	xor    al,0xfa
  40e739:	jp     0x40e7a8
  40e73b:	mov    eax,ds:0x79f06bdc
  40e740:	adc    DWORD PTR [edx-0x318a3b36],esi
  40e746:	xor    BYTE PTR [edx],ah
  40e748:	shl    ecx,cl
  40e74a:	leave  
  40e74b:	dec    edi
  40e74c:	jns    0x40e6d9
  40e74e:	sbb    BYTE PTR [eax+0x41],ch
  40e751:	adc    ebx,DWORD PTR [ebx-0x40]
  40e754:	mov    cl,0xb1
  40e756:	stos   BYTE PTR es:[edi],al
  40e757:	imul   ebx,DWORD PTR [edi+edx*8+0x3a],0x47
  40e75c:	sub    al,0x33
  40e75e:	jmp    0x35a95eff
  40e763:	or     bl,BYTE PTR [edx+edx*8-0x2efcbbc0]
  40e76a:	stos   DWORD PTR es:[edi],eax
  40e76b:	shl    ah,0x45
  40e76e:	in     eax,0x83
  40e770:	pop    esi
  40e771:	sbb    DWORD PTR [ebx+edx*1],0xffffff86
  40e775:	push   esp
  40e776:	test   al,0x4d
  40e778:	pop    ebp
  40e779:	popa   
  40e77a:	loope  0x40e7cc
  40e77c:	scas   eax,DWORD PTR es:[edi]
  40e77d:	rcl    BYTE PTR [edi-0x309d77ab],cl
  40e783:	adc    DWORD PTR [eax],esp
  40e785:	jle    0x40e799
  40e787:	pop    esp
  40e788:	or     al,0x7c
  40e78a:	mov    BYTE PTR [ebp-0x33],cl
  40e78d:	ins    BYTE PTR es:[edi],dx
  40e78e:	cmp    ebx,edx
  40e790:	ret    
  40e791:	sbb    dh,cl
  40e793:	shl    DWORD PTR [ebx+0xf013670],1
  40e799:	jle    0x40e756
  40e79b:	push   esi
  40e79c:	shl    DWORD PTR [ebx],0xb1
  40e79f:	not    BYTE PTR [ebp-0x2]
  40e7a2:	dec    ebp
  40e7a3:	push   edx
  40e7a4:	xor    al,0xf
  40e7a6:	pop    edi
  40e7a7:	inc    edi
  40e7a8:	mov    ds:0xfeb5bc9a,al
  40e7ad:	sbb    BYTE PTR [edi-0x13],ch
  40e7b0:	lahf   
  40e7b1:	icebp  
  40e7b2:	xchg   esi,eax
  40e7b3:	fwait
  40e7b4:	ror    DWORD PTR [ebp-0x25],0x1e
  40e7b8:	iret   
  40e7b9:	mov    ebp,0x74f847f7
  40e7be:	call   0xed43ecd0
  40e7c3:	adc    al,0xd9
  40e7c5:	mov    ecx,0xf8de8ef3
  40e7ca:	or     cl,dh
  40e7cc:	mov    al,bh
  40e7ce:	push   esp
  40e7cf:	sub    DWORD PTR [edi+edx*4-0x58],0x2e
  40e7d4:	int3   
  40e7d5:	dec    ecx
  40e7d6:	gs cmp al,0x8d
  40e7d9:	xchg   BYTE PTR [ecx+0x6ad04d7d],al
  40e7df:	dec    edi
  40e7e0:	and    ebx,DWORD PTR [ebx]
  40e7e2:	dec    ecx
  40e7e3:	add    eax,0xb12b1685
  40e7e8:	mov    ah,0x7d
  40e7ea:	add    ebp,edx
  40e7ec:	iret   
  40e7ed:	aas    
  40e7ee:	jl     0x40e7e5
  40e7f0:	pop    ecx
  40e7f1:	(bad)  
  40e7f2:	xlat   BYTE PTR ds:[ebx]
  40e7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f4:	fistp  DWORD PTR [edi]
  40e7f6:	add    eax,0x12d9e7fe
  40e7fb:	jae    0x40e7f8
  40e7fd:	enter  0x8bd5,0x55
  40e801:	and    edx,DWORD PTR [eax]
  40e803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e804:	mov    es,WORD PTR [ebx+0x33666fc4]
  40e80a:	jmp    0x40e7b4
  40e80c:	cmp    eax,DWORD PTR [edi]
  40e80e:	pop    ecx
  40e80f:	xor    cl,BYTE PTR [edx+eiz*2-0x77068469]
  40e816:	rol    BYTE PTR [edi+0x4a],0x2f
  40e81a:	sub    al,0xcd
  40e81c:	lods   al,BYTE PTR ds:[esi]
  40e81d:	cmp    eax,0xb43428c0
  40e822:	push   0xffffffa4
  40e824:	repz out 0xa0,al
  40e827:	inc    ebp
  40e828:	jl     0x40e7f0
  40e82a:	sbb    bl,dh
  40e82c:	sahf   
  40e82d:	add    al,0x66
  40e82f:	sahf   
  40e830:	pop    es
  40e831:	test   BYTE PTR [edx-0x15a293ab],ah
  40e837:	xchg   edx,eax
  40e838:	xor    ebp,DWORD PTR es:[esi-0x1c]
  40e83c:	adc    dh,dl
  40e83e:	jecxz  0x40e7c4
  40e840:	or     BYTE PTR [di-0x785d],ch
  40e845:	cmp    BYTE PTR es:[edi],bl
  40e848:	mov    ecx,0xf6e3905
  40e84d:	push   esi
  40e84e:	sub    BYTE PTR [ebx+ecx*8+0x77],cl
  40e852:	cli    
  40e853:	in     al,0x6a
  40e855:	jbe    0x40e851
  40e857:	int    0xe2
  40e859:	outs   dx,DWORD PTR ds:[esi]
  40e85a:	fild   QWORD PTR fs:[esi-0x1527a263]
  40e861:	cmp    ah,BYTE PTR [ebx]
  40e863:	pushw  0xffd8
  40e866:	push   ss
  40e867:	push   esp
  40e868:	or     cl,ch
  40e86a:	cs mov dl,0xd4
  40e86d:	rcl    BYTE PTR [esi-0x27],0x3d
  40e871:	mov    ecx,0xe1df0357
  40e876:	sub    BYTE PTR [eax],0xc0
  40e879:	das    
  40e87a:	mov    ebp,0x86c1595a
  40e87f:	pop    edi
  40e880:	(bad)  
  40e881:	in     eax,dx
  40e882:	xchg   ebx,eax
  40e883:	test   BYTE PTR [esi+eax*1],ah
  40e886:	enter  0x2d5a,0x5d
  40e88a:	lahf   
  40e88b:	pusha  
  40e88c:	in     eax,dx
  40e88d:	mov    edi,0xed36d579
  40e892:	pop    ebp
  40e893:	leave  
  40e894:	rcl    dh,0x6
  40e897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e898:	mov    ds:0xe6c8b8fa,al
  40e89d:	mov    eax,0xee9a8298
  40e8a2:	mov    ebp,0x23f3defe
  40e8a7:	dec    eax
  40e8a8:	into   
  40e8a9:	stc    
  40e8aa:	dec    ecx
  40e8ab:	mov    edi,0x766b23a7
  40e8b0:	mov    eax,0xf811f154
  40e8b5:	std    
  40e8b6:	sbb    bl,BYTE PTR [edi]
  40e8b8:	lea    ebp,[esi+0x403781b3]
  40e8be:	lods   al,BYTE PTR ds:[esi]
  40e8bf:	scas   eax,DWORD PTR es:[edi]
  40e8c0:	call   0x81b23901
  40e8c5:	xchg   edi,eax
  40e8c6:	inc    edi
  40e8c7:	jmp    0xaa3b:0x57e9bcec
  40e8ce:	sbb    bl,cl
  40e8d0:	inc    ecx
  40e8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d2:	hlt    
  40e8d3:	mov    ebx,0x9f9a5283
  40e8d8:	iret   
  40e8d9:	xor    ah,bl
  40e8db:	jns    0x40e8b0
  40e8dd:	xor    al,0xfd
  40e8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e0:	and    BYTE PTR ds:0x46daca82,dl
  40e8e6:	push   ebx
  40e8e7:	inc    esp
  40e8e8:	push   cs
  40e8e9:	xor    BYTE PTR [ebp-0x60],bl
  40e8ec:	dec    eax
  40e8ed:	jmp    0xf739:0x50a3a5ef
  40e8f4:	xchg   ebx,eax
  40e8f5:	nop
  40e8f6:	aad    0xfd
  40e8f8:	shl    DWORD PTR [eax+esi*4+0x2c],cl
  40e8fc:	or     BYTE PTR [ebx-0x56],ah
  40e8ff:	jae    0x40e945
  40e901:	mov    es,eax
  40e903:	ss das 
  40e905:	xchg   edi,eax
  40e906:	xchg   ebp,eax
  40e907:	aam    0x89
  40e909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e90a:	clc    
  40e90b:	icebp  
  40e90c:	push   0x8
  40e90e:	ss dec esp
  40e910:	pushf  
  40e911:	xchg   esi,ebx
  40e913:	aas    
  40e914:	push   eax
  40e915:	xchg   esi,eax
  40e916:	scas   al,BYTE PTR es:[edi]
  40e917:	aaa    
  40e918:	add    ebx,eax
  40e91a:	test   eax,0x82d1513f
  40e91f:	add    esi,DWORD PTR [edx]
  40e921:	mov    BYTE PTR [ebp-0x568fba01],0x6e
  40e928:	retf   0x738e
  40e92b:	push   0x1eb5c071
  40e930:	jge    0x40e990
  40e932:	add    ebx,DWORD PTR [eax-0x3842173]
  40e938:	and    al,0x11
  40e93a:	out    0x63,eax
  40e93c:	xchg   esi,eax
  40e93d:	xchg   DWORD PTR [eax],ecx
  40e93f:	push   edx
  40e940:	nop
  40e941:	imul   edx,DWORD PTR fs:[esi+0x7a7160eb],0xadb173f0
  40e94c:	out    dx,al
  40e94d:	and    edx,ecx
  40e94f:	not    BYTE PTR [eax+0x42]
  40e952:	in     al,dx
  40e953:	adc    eax,0x45f68e98
  40e958:	jge    0x40e914
  40e95a:	xchg   ecx,eax
  40e95b:	jle    0x40e979
  40e95d:	stos   DWORD PTR es:[edi],eax
  40e95e:	gs sbb al,0x82
  40e961:	mov    ds:0xe6dbe85e,al
  40e966:	cs mov dl,0xa4
  40e969:	cdq    
  40e96a:	scas   eax,DWORD PTR es:[edi]
  40e96b:	ja     0x40e96f
  40e96d:	pop    es
  40e96e:	pop    ss
  40e96f:	xchg   ebp,eax
  40e970:	fucom  st(1)
  40e972:	mov    ecx,0x6516c638
  40e977:	or     BYTE PTR [eax-0x3],bh
  40e97a:	(bad)  
  40e97b:	pop    ebx
  40e97c:	shr    ecx,cl
  40e97e:	jne    0x40e9a4
  40e980:	je     0x40e919
  40e982:	cld    
  40e983:	add    DWORD PTR [eax+0x4114dff2],eax
  40e989:	retf   
  40e98a:	inc    edx
  40e98b:	mov    cl,0x57
  40e98d:	xchg   esp,eax
  40e98e:	sub    ebx,DWORD PTR [edi-0x33]
  40e991:	jl     0x40e9ad
  40e993:	scas   eax,DWORD PTR es:[edi]
  40e994:	lods   eax,DWORD PTR ds:[esi]
  40e995:	lods   al,BYTE PTR ds:[esi]
  40e996:	je     0x40e944
  40e998:	mov    al,ds:0xaeb941ea
  40e99d:	mov    al,BYTE PTR [edi+ebx*8-0x3da29e19]
  40e9a4:	mov    bh,0x64
  40e9a6:	rcl    DWORD PTR [edx],0xb9
  40e9a9:	test   al,0x3f
  40e9ab:	jmp    0x533aa085
  40e9b0:	push   cs
  40e9b1:	jp     0x40e988
  40e9b3:	jno    0x40e9ad
  40e9b5:	adc    cl,BYTE PTR [edx]
  40e9b7:	sar    DWORD PTR [edx-0x78f59b1a],1
  40e9bd:	leave  
  40e9be:	popa   
  40e9bf:	or     ah,0x5d
  40e9c2:	and    al,0x12
  40e9c4:	fisttp DWORD PTR [esi+eax*8+0x6d75c98e]
  40e9cb:	dec    esi
  40e9cc:	mov    edi,0x1f1199a5
  40e9d1:	xlat   BYTE PTR ds:[ebx]
  40e9d2:	popa   
  40e9d3:	jne    0x40e98e
  40e9d5:	(bad)  
  40e9d6:	mov    ecx,0xf3535fa9
  40e9db:	lahf   
  40e9dc:	test   eax,0x913e99cd
  40e9e1:	sub    DWORD PTR es:[ecx],ebx
  40e9e4:	in     eax,0x25
  40e9e6:	mov    bh,0xc
  40e9e8:	pushf  
  40e9e9:	int3   
  40e9ea:	pop    edx
  40e9eb:	inc    esp
  40e9ec:	xor    al,ch
  40e9ee:	and    al,0x75
  40e9f0:	mov    dl,0xa1
  40e9f2:	imul   edx,DWORD PTR [ecx+0x7b8202ef],0xfd0fcd8a
  40e9fc:	adc    ebx,edx
  40e9fe:	inc    eax
  40e9ff:	loop   0x40ea25
  40ea01:	mov    ds,WORD PTR [edx+0x21ce319c]
  40ea07:	repz sub ecx,esp
  40ea0a:	lds    esp,FWORD PTR [esi+0x5]
  40ea0d:	imul   edi,DWORD PTR [ebx+0x37b1c671],0xffffffe1
  40ea14:	mov    DWORD PTR [ecx-0x3e199b1f],ebp
  40ea1a:	lock inc ebp
  40ea1c:	jnp    0x40ea80
  40ea1e:	mov    ds:0xce2aab03,al
  40ea23:	xchg   esp,eax
  40ea24:	mov    al,0xce
  40ea26:	pop    esp
  40ea27:	mov    WORD PTR [edx+0x5f],ds
  40ea2a:	fld    QWORD PTR [ebx+0x5b7c2bd3]
  40ea30:	mov    al,ds:0x63f56220
  40ea35:	bound  ecx,QWORD PTR [ebp-0x6123fec7]
  40ea3b:	xchg   edx,eax
  40ea3c:	mov    ds:0xc120429b,al
  40ea41:	mov    ch,0x9a
  40ea43:	adc    DWORD PTR [ebp+esi*4+0x10],0x5ae3e5cc
  40ea4b:	ins    BYTE PTR es:[edi],dx
  40ea4c:	int3   
  40ea4d:	jmp    0x57c0:0xa4d3aff6
  40ea54:	jp     0x40ea0b
  40ea56:	dec    eax
  40ea57:	addr16 lahf 
  40ea59:	data16 into 
  40ea5b:	fmul   DWORD PTR [eax+edi*4]
  40ea5e:	fisub  DWORD PTR [edx]
  40ea60:	mov    esp,0xa111bcc4
  40ea65:	retf   
  40ea66:	inc    ebp
  40ea67:	adc    bl,BYTE PTR [ecx+0x3ddd8286]
  40ea6d:	cs push 0x2c
  40ea70:	xor    al,0xc0
  40ea72:	ret    0x5aeb
  40ea75:	test   al,0x40
  40ea77:	es fsubrp st(6),st
  40ea7a:	idiv   DWORD PTR [ebx+0x334b5e12]
  40ea80:	and    al,0xaf
  40ea82:	fistp  DWORD PTR ds:0x751fcf3
  40ea88:	leave  
  40ea89:	dec    eax
  40ea8a:	pusha  
  40ea8b:	sbb    bl,BYTE PTR [eax]
  40ea8d:	inc    ebp
  40ea8e:	lods   eax,DWORD PTR ds:[esi]
  40ea8f:	and    ecx,DWORD PTR [ebp+edi*2-0x5a]
  40ea93:	xchg   esp,eax
  40ea94:	aaa    
  40ea95:	retf   0x5517
  40ea98:	jne    0x40ea4f
  40ea9a:	or     eax,0x209ea94d
  40ea9f:	fs ss sti 
  40eaa2:	cmp    dh,bh
  40eaa4:	pop    ebx
  40eaa5:	fwait
  40eaa6:	pop    esp
  40eaa7:	in     al,0xc4
  40eaa9:	test   DWORD PTR [ebx-0x15d70e51],edi
  40eaaf:	sahf   
  40eab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eab1:	add    eax,0xbeefe29a
  40eab6:	lods   al,BYTE PTR ds:[esi]
  40eab7:	fwait
  40eab8:	push   es
  40eab9:	or     ch,BYTE PTR [esi+0x72d31a52]
  40eabf:	(bad)  
  40eac0:	retf   
  40eac1:	mov    cs,WORD PTR [ecx-0x3d]
  40eac4:	fisubr WORD PTR [edi+0x6b]
  40eac7:	(bad)  
  40eac9:	mov    eax,ds:0xad1daac7
  40eace:	aam    0x69
  40ead0:	imul   eax,eax,0xffffffda
  40ead3:	shr    DWORD PTR [edi+0x2087cdd1],0x42
  40eada:	hlt    
  40eadb:	clc    
  40eadc:	sbb    al,0xf0
  40eade:	fisttp QWORD PTR [esi]
  40eae0:	std    
  40eae1:	fisub  DWORD PTR [esp+ebp*4-0x61]
  40eae5:	lea    edx,[eax]
  40eae7:	ret    
  40eae8:	xchg   DWORD PTR [esi+ebp*4+0x37585553],esi
  40eaef:	pop    es
  40eaf0:	jmp    0x40eb35
  40eaf2:	dec    eax
  40eaf3:	sbb    eax,0x5f2870b9
  40eaf8:	mov    bl,0x2
  40eafa:	pop    ecx
  40eafb:	sbb    al,0x38
  40eafd:	or     al,0x4e
  40eaff:	dec    DWORD PTR [ebp+0x36]
  40eb02:	jbe    0x40eb1c
  40eb04:	and    BYTE PTR [ecx],dl
  40eb06:	mov    ah,0xf7
  40eb08:	mov    ah,0x8
  40eb0a:	inc    ebp
  40eb0b:	jo     0x40ea95
  40eb0d:	mov    eax,ds:0x4ffda19
  40eb12:	and    edi,DWORD PTR [eax]
  40eb14:	xchg   ecx,eax
  40eb15:	loope  0x40eb35
  40eb17:	pusha  
  40eb18:	sbb    DWORD PTR [ebx+0x6d3c31bf],0x202ff026
  40eb22:	jnp    0x40eae1
  40eb24:	sub    esp,DWORD PTR [edx-0x74]
  40eb27:	fcomp  QWORD PTR [edx]
  40eb29:	pop    esi
  40eb2a:	jle    0x40eacc
  40eb2c:	or     BYTE PTR [edi],dl
  40eb2e:	jmp    0x638f6c41
  40eb33:	cs sub al,0x1c
  40eb36:	iret   
  40eb37:	and    BYTE PTR [eax],bh
  40eb39:	adc    esi,DWORD PTR [eax+0x3223c394]
  40eb3f:	jecxz  0x40eba6
  40eb41:	dec    esp
  40eb42:	and    eax,0x2139f14c
  40eb47:	mov    cl,0x58
  40eb49:	out    dx,al
  40eb4a:	push   0xffffffe0
  40eb4c:	out    dx,eax
  40eb4d:	pop    edx
  40eb4e:	cmp    BYTE PTR [si-0x7df5],cl
  40eb53:	fistp  WORD PTR [ebx+0x7181362d]
  40eb59:	daa    
  40eb5a:	(bad)  
  40eb5b:	ja     0x40eba4
  40eb5d:	cmp    edx,edi
  40eb5f:	ins    BYTE PTR es:[edi],dx
  40eb60:	jo     0x40eaec
  40eb62:	dec    eax
  40eb63:	(bad)  
  40eb64:	mov    ds:0x55816336,eax
  40eb69:	jno    0x40eb46
  40eb6b:	mov    cl,0x98
  40eb6d:	out    dx,eax
  40eb6e:	jmp    0xfac3ab41
  40eb73:	and    ebx,esp
  40eb75:	imul   ebp,DWORD PTR [ebx],0x206f4ea4
  40eb7b:	rcr    dl,cl
  40eb7d:	fwait
  40eb7e:	or     edx,DWORD PTR [ecx]
  40eb80:	pop    ebp
  40eb81:	js     0x40eb4b
  40eb83:	push   ecx
  40eb84:	sbb    ecx,DWORD PTR [ecx]
  40eb86:	sub    esi,ebp
  40eb88:	jb     0x40ebb4
  40eb8a:	jno    0x40eb65
  40eb8c:	(bad)  
  40eb8d:	rcl    edx,cl
  40eb8f:	scas   eax,DWORD PTR es:[edi]
  40eb90:	sti    
  40eb91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb92:	inc    edx
  40eb93:	(bad)  
  40eb94:	js     0x40ec02
  40eb96:	ret    0x9d6f
  40eb99:	ret    
  40eb9a:	push   esp
  40eb9b:	pop    esp
  40eb9c:	mov    edx,0x183ec52e
  40eba1:	clc    
  40eba2:	dec    edx
  40eba3:	mov    ebp,0x691d17b
  40eba8:	out    0xbc,al
  40ebaa:	pushf  
  40ebab:	(bad)  
  40ebac:	mov    cl,0xfe
  40ebae:	repz jge 0x40ebad
  40ebb1:	mov    ?,WORD PTR [ebx-0x38]
  40ebb4:	popf   
  40ebb5:	push   es
  40ebb6:	pop    eax
  40ebb7:	js     0x40ebb0
  40ebb9:	rcr    ebx,1
  40ebbb:	cli    
  40ebbc:	das    
  40ebbd:	popa   
  40ebbe:	xor    al,0xa5
  40ebc0:	call   0xaffb:0xc4e8418a
  40ebc7:	lock mov dl,0xfd
  40ebca:	enter  0x519b,0x57
  40ebce:	and    esp,DWORD PTR [edx]
  40ebd0:	add    BYTE PTR [edi],dl
  40ebd2:	push   0x2e0c3fd3
  40ebd7:	and    ebx,DWORD PTR [ebx-0x320a2335]
  40ebdd:	call   0x1f139221
  40ebe2:	xor    edi,DWORD PTR [edx+0x4b]
  40ebe5:	retf   
  40ebe6:	stos   BYTE PTR es:[edi],al
  40ebe7:	or     esp,DWORD PTR [ebx]
  40ebe9:	add    BYTE PTR [edx-0x2e4320b4],cl
  40ebef:	aad    0xe6
  40ebf1:	repnz push cs
  40ebf3:	retf   0x426f
  40ebf6:	cli    
  40ebf7:	cwde   
  40ebf8:	mov    esp,DWORD PTR [edx+edi*1-0x2a019c85]
  40ebff:	xor    al,0x40
  40ec01:	gs popf 
  40ec03:	mov    ecx,0x4ff9cf21
  40ec08:	mov    edi,ebx
  40ec0a:	call   0x8f218b4b
  40ec0f:	xchg   esi,eax
  40ec10:	(bad)  
  40ec12:	cdq    
  40ec13:	shl    bl,cl
  40ec15:	mov    ds:0x8fb8484a,al
  40ec1a:	pop    edi
  40ec1b:	out    0x15,al
  40ec1d:	clc    
  40ec1e:	mov    eax,ds:0xbc70272e
  40ec23:	dec    eax
  40ec24:	or     eax,0x1962168
  40ec29:	pusha  
  40ec2a:	out    dx,eax
  40ec2b:	push   esi
  40ec2c:	mov    al,0x5c
  40ec2e:	jg     0x40ebf5
  40ec30:	adc    al,0x86
  40ec32:	inc    ecx
  40ec33:	retf   0xd23a
  40ec36:	ins    DWORD PTR es:[edi],dx
  40ec37:	and    dl,ch
  40ec39:	ds cli 
  40ec3b:	pop    ds
  40ec3c:	pop    edi
  40ec3d:	sub    eax,0xed95e2e3
  40ec42:	arpl   WORD PTR [edx-0x68],si
  40ec45:	push   0xffffffff
  40ec47:	pop    ss
  40ec48:	and    ecx,DWORD PTR [ebx-0x6a]
  40ec4b:	fxch   st(1)
  40ec4d:	retf   0x5a97
  40ec50:	fistp  WORD PTR [eax+edi*1]
  40ec53:	sbb    al,0x4b
  40ec55:	(bad)  
  40ec56:	jno    0x40ec81
  40ec58:	inc    eax
  40ec59:	stos   DWORD PTR es:[edi],eax
  40ec5a:	and    ax,0x9cd9
  40ec5e:	xor    dh,BYTE PTR [esi]
  40ec60:	gs std 
  40ec62:	leave  
  40ec63:	ins    BYTE PTR es:[edi],dx
  40ec64:	push   ebx
  40ec65:	hlt    
  40ec66:	xor    ebx,DWORD PTR [ecx]
  40ec68:	mov    al,0x8
  40ec6a:	dec    edx
  40ec6b:	cwde   
  40ec6c:	clc    
  40ec6d:	fild   DWORD PTR [ebx-0x5645efd1]
  40ec73:	test   eax,0xb5a123d9
  40ec78:	mov    edx,ebp
  40ec7a:	pop    edx
  40ec7b:	pusha  
  40ec7c:	mov    al,al
  40ec7e:	mov    esi,DWORD PTR [esi+0x38527cd9]
  40ec84:	sahf   
  40ec85:	scas   al,BYTE PTR es:[edi]
  40ec86:	inc    ebp
  40ec87:	int3   
  40ec88:	inc    esp
  40ec89:	pop    ss
  40ec8a:	jle    0x40ec8e
  40ec8c:	sbb    BYTE PTR [ebp+ebx*1-0x31],ch
  40ec90:	mov    eax,ds:0xf09105b1
  40ec95:	inc    BYTE PTR [ebx+0x5e]
  40ec98:	mov    dh,0x3
  40ec9a:	repnz fs mov bl,0xe1
  40ec9e:	gs mov edi,0x9a7d18e3
  40eca4:	xor    BYTE PTR [ebx+0x44966c1],bl
  40ecaa:	(bad)  
  40ecab:	push   ss
  40ecac:	loope  0x40ec37
  40ecae:	test   edx,edx
  40ecb0:	rcr    BYTE PTR [edi],cl
  40ecb2:	fistp  DWORD PTR [ebp-0x51]
  40ecb5:	fwait
  40ecb6:	adc    eax,0xe147b340
  40ecbb:	and    esp,DWORD PTR [eax+0x4f]
  40ecbe:	mov    ebx,0x50321c9
  40ecc3:	aam    0xcf
  40ecc5:	enter  0x63f6,0xe1
  40ecc9:	test   DWORD PTR [edi],eax
  40eccb:	adc    esp,DWORD PTR [ebx+0x168c66a6]
  40ecd1:	push   0xffffffbc
  40ecd3:	out    dx,al
  40ecd4:	sti    
  40ecd5:	das    
  40ecd6:	xchg   ecx,eax
  40ecd7:	dec    edi
  40ecd8:	mov    ebx,DWORD PTR [ebx-0x18]
  40ecdb:	pusha  
  40ecdc:	push   eax
  40ecdd:	jg     0x40ec95
  40ecdf:	pop    ebp
  40ece0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ece1:	retf   0xd6d2
  40ece4:	jne    0x40ed39
  40ece6:	lds    ecx,FWORD PTR [esi+0x7cbe7b01]
  40ecec:	push   ds
  40eced:	scas   al,BYTE PTR es:[edi]
  40ecee:	lods   al,BYTE PTR ds:[esi]
  40ecef:	test   eax,0x41f8c536
  40ecf4:	call   0x74d8:0x4df5a43b
  40ecfb:	stos   BYTE PTR es:[edi],al
  40ecfc:	outs   dx,DWORD PTR ds:[esi]
  40ecfd:	mov    ah,0xc6
  40ecff:	pusha  
  40ed00:	(bad)  [ecx]
  40ed02:	lahf   
  40ed03:	sbb    al,0x24
  40ed05:	jmp    0xdbbb:0x6755db69
  40ed0c:	push   0x31
  40ed0e:	mov    bl,0xb4
  40ed10:	test   BYTE PTR [ebp-0x33f41867],bl
  40ed16:	cmp    BYTE PTR [ebp+0x6f],0x16
  40ed1a:	outs   dx,DWORD PTR ds:[esi]
  40ed1b:	jno    0x40ed4f
  40ed1d:	in     al,0xc0
  40ed1f:	inc    edx
  40ed20:	dec    ebp
  40ed21:	fsubr  QWORD PTR [eax]
  40ed23:	out    dx,al
  40ed24:	sbb    eax,ebp
  40ed26:	shl    DWORD PTR [edi+edi*8-0x5514e4b1],0x22
  40ed2e:	lock shl DWORD PTR [ecx-0x44],cl
  40ed32:	or     ecx,DWORD PTR [edx]
  40ed34:	pop    ecx
  40ed35:	enter  0x2180,0xaa
  40ed39:	xchg   ebx,eax
  40ed3a:	mov    esp,0xdcf40226
  40ed3f:	jno    0x40ed3e
  40ed41:	(bad)
  40ed45:	jg     0x40ed14
  40ed47:	out    0x15,eax
  40ed49:	push   0x4c
  40ed4b:	repz cli 
  40ed4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed4e:	sub    al,0x1c
  40ed50:	lea    esi,[ebx]
  40ed52:	xor    al,cl
  40ed54:	or     al,0x62
  40ed56:	test   ebx,ebp
  40ed58:	stos   BYTE PTR es:[edi],al
  40ed59:	mul    BYTE PTR [edx]
  40ed5b:	ror    BYTE PTR [edx+0x6e1a525c],cl
  40ed61:	aas    
  40ed62:	mov    eax,ds:0x7b895b70
  40ed67:	sahf   
  40ed68:	cmc    
  40ed69:	pushf  
  40ed6a:	fisubr DWORD PTR [esp+eax*1]
  40ed6d:	mov    eax,0x99a4d42e
  40ed72:	jns    0x40ed74
  40ed74:	in     al,dx
  40ed75:	or     al,BYTE PTR [edx-0x1abbdb84]
  40ed7b:	loope  0x40ed26
  40ed7d:	in     eax,0xc3
  40ed7f:	jnp    0x40ed99
  40ed81:	adc    al,ah
  40ed83:	int3   
  40ed84:	ret    
  40ed85:	cmp    eax,0x1600cc42
  40ed8a:	rcr    BYTE PTR [esi+eiz*2-0x5b],1
  40ed8e:	jge    0x40edd2
  40ed90:	xchg   edi,eax
  40ed91:	test   al,0x59
  40ed93:	push   ds
  40ed94:	push   edi
  40ed95:	inc    esp
  40ed96:	add    al,0x76
  40ed98:	dec    ebp
  40ed99:	jmp    0x40eda4
  40ed9b:	packssdw mm6,QWORD PTR [ebp+0x27]
  40ed9f:	push   ecx
  40eda0:	lahf   
  40eda1:	cmp    BYTE PTR [ebp+0x589e1d76],ch
  40eda7:	daa    
  40eda8:	sub    al,0xbd
  40edaa:	dec    eax
  40edab:	fst    DWORD PTR [ebp+0x6c]
  40edae:	xchg   ecx,eax
  40edaf:	add    eax,0xff9eb97e
  40edb4:	sub    eax,0x55365824
  40edb9:	cli    
  40edba:	mov    eax,ds:0x1e79f511
  40edbf:	popf   
  40edc0:	les    edx,FWORD PTR [ebx-0x71716832]
  40edc6:	push   ds
  40edc7:	adc    eax,0x2d954e0e
  40edcc:	or     eax,0x51fa822f
  40edd1:	push   cs
  40edd2:	pop    esp
  40edd3:	fistp  WORD PTR [ebx+0x35]
  40edd6:	adc    BYTE PTR [ebx-0x31eb569a],0xe1
  40eddd:	int    0xb8
  40eddf:	aas    
  40ede0:	hlt    
  40ede1:	mov    esp,0xa6a0d104
  40ede6:	call   0x9f493565
  40edeb:	cwde   
  40edec:	imul   ebp,DWORD PTR [eax],0x5
  40edef:	jmp    0x398f2748
  40edf4:	sbb    bh,BYTE PTR [ebx-0x41]
  40edf7:	sub    eax,edx
  40edf9:	mov    edi,0x5b36f94f
  40edfe:	je     0x40edee
  40ee00:	das    
  40ee01:	je     0x40ee3c
  40ee03:	cdq    
  40ee04:	jnp    0x40ee7c
  40ee06:	mov    cl,0x2a
  40ee08:	ret    0xfedc
  40ee0b:	and    eax,0xeb508c21
  40ee10:	sub    DWORD PTR [esi+0x798c5b96],edi
  40ee16:	in     eax,0xb9
  40ee18:	js     0x40ee74
  40ee1a:	pop    edi
  40ee1b:	sub    DWORD PTR [ebp-0x56],0x20
  40ee1f:	in     eax,0x40
  40ee21:	std    
  40ee22:	mov    eax,0xbd6e18ce
  40ee27:	add    eax,0xe429ad3d
  40ee2c:	xchg   ecx,eax
  40ee2d:	xor    al,0x72
  40ee2f:	frstor [eax-0x40]
  40ee32:	mov    ebp,edx
  40ee34:	and    cl,dl
  40ee36:	push   edi
  40ee37:	mov    al,bh
  40ee39:	jge    0x40eeb0
  40ee3b:	mov    dl,0x4b
  40ee3d:	jecxz  0x40ee5a
  40ee3f:	or     al,BYTE PTR [edx]
  40ee41:	mov    bl,0x3c
  40ee43:	sub    al,0xb5
  40ee45:	test   eax,0x2837dada
  40ee4a:	inc    edx
  40ee4b:	aad    0xa2
  40ee4d:	xor    al,BYTE PTR [edi-0x4]
  40ee50:	sub    BYTE PTR [eax],ah
  40ee52:	mov    esi,0x33efdf13
  40ee57:	cld    
  40ee58:	loopne 0x40ee5c
  40ee5a:	mov    eax,ds:0xa5f5357f
  40ee5f:	jle    0x40eeba
  40ee61:	call   0xcfb42dc
  40ee66:	fwait
  40ee67:	dec    ecx
  40ee68:	mov    esi,0x6d5270cf
  40ee6d:	xchg   edi,eax
  40ee6e:	loope  0x40ee2b
  40ee70:	(bad)  
  40ee71:	sub    ebx,DWORD PTR [ebp+0x64f99f15]
  40ee77:	add    DWORD PTR [edx-0x6f1ba3c1],edx
  40ee7d:	jns    0x40eedd
  40ee7f:	push   ecx
  40ee80:	outs   dx,BYTE PTR ds:[esi]
  40ee81:	mov    ds:0xf7a93f93,al
  40ee86:	inc    esi
  40ee87:	mov    ds:0x95242652,eax
  40ee8c:	icebp  
  40ee8d:	stc    
  40ee8e:	into   
  40ee8f:	sub    edi,DWORD PTR [ecx-0x9]
  40ee92:	daa    
  40ee93:	loop   0x40eeec
  40ee95:	scas   al,BYTE PTR es:[edi]
  40ee96:	fadd   DWORD PTR [edx]
  40ee98:	jmp    0x40ee27
  40ee9a:	pop    esi
  40ee9b:	ds retf 0xe5cc
  40ee9f:	out    dx,al
  40eea0:	inc    ax
  40eea2:	xor    dh,ah
  40eea4:	rcl    DWORD PTR [ebp+0x56],0x4b
  40eea8:	sbb    DWORD PTR [edx],ebp
  40eeaa:	mov    cl,0x9c
  40eeac:	aas    
  40eead:	xchg   edi,eax
  40eeae:	aad    0xf2
  40eeb0:	dec    edi
  40eeb1:	repnz inc BYTE PTR [edx-0x38]
  40eeb5:	data16 je 0x40ee60
  40eeb8:	add    eax,0xf23952f8
  40eebd:	sbb    BYTE PTR [eax+eiz*1],al
  40eec0:	push   edx
  40eec1:	and    edi,DWORD PTR [esi-0x4d]
  40eec4:	pop    ss
  40eec5:	mov    edx,0x33df0cef
  40eeca:	xor    al,0xf7
  40eecc:	jecxz  0x40eed2
  40eece:	mov    eax,ds:0xb383700f
  40eed3:	adc    esi,esp
  40eed5:	arpl   WORD PTR [esi-0x4b],bp
  40eed8:	shl    DWORD PTR ds:0x43899867,0xac
  40eedf:	adc    ebx,ecx
  40eee1:	ja     0x40ef01
  40eee3:	(bad)  
  40eee4:	sub    BYTE PTR [edx+0x39a35c39],0x8f
  40eeeb:	enter  0xe853,0x2a
  40eeef:	test   dh,ah
  40eef1:	outs   dx,DWORD PTR ds:[esi]
  40eef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eef3:	jno    0x40eef9
  40eef5:	pop    eax
  40eef6:	xor    ah,BYTE PTR [ebp+ebx*1-0x1b24d172]
  40eefd:	inc    ecx
  40eefe:	dec    ebx
  40eeff:	jbe    0x40eed7
  40ef01:	jecxz  0x40ef35
  40ef03:	dec    BYTE PTR [eax+0x3e219193]
  40ef09:	inc    ebp
  40ef0a:	pop    esi
  40ef0b:	out    0x0,eax
  40ef0d:	push   cs
  40ef0e:	push   ebp
  40ef0f:	dec    ecx
  40ef10:	pop    esp
  40ef11:	in     al,0x96
  40ef13:	and    DWORD PTR [edx],eax
  40ef15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef16:	cmp    esi,esp
  40ef18:	pop    edi
  40ef19:	test   al,0xd4
  40ef1b:	hlt    
  40ef1c:	jne    0x40ef30
  40ef1e:	xchg   ebx,eax
  40ef1f:	loopne 0x40ef08
  40ef21:	adc    ecx,DWORD PTR [eax]
  40ef23:	into   
  40ef24:	scas   al,BYTE PTR es:[edi]
  40ef25:	test   ch,dl
  40ef27:	lods   al,BYTE PTR ds:[esi]
  40ef28:	ret    0x1f14
  40ef2b:	repnz xor BYTE PTR [edx+0x7e],0x40
  40ef30:	cmp    DWORD PTR [edx+0xaeebe31],0xffffff93
  40ef37:	sub    al,0xa5
  40ef39:	lods   eax,DWORD PTR ds:[esi]
  40ef3a:	scas   al,BYTE PTR es:[edi]
  40ef3b:	(bad)  
  40ef3c:	rol    cl,1
  40ef3e:	lea    esi,[edi+0xa6c7de1]
  40ef44:	xchg   DWORD PTR [edi],ebp
  40ef46:	inc    edx
  40ef47:	ret    
  40ef48:	push   ecx
  40ef49:	cmp    DWORD PTR [ebx+eiz*2+0x21],eax
  40ef4d:	sub    eax,0xb59ef090
  40ef52:	(bad)
  40ef55:	cmp    cl,ch
  40ef57:	and    cl,bh
  40ef59:	sub    BYTE PTR [edi+0x3bf39af1],0x87
  40ef60:	dec    esi
  40ef61:	adc    al,0xe3
  40ef63:	call   DWORD PTR [edi]
  40ef65:	jl     0x40ef70
  40ef67:	inc    esp
  40ef68:	data16 das 
  40ef6a:	ins    BYTE PTR es:[edi],dx
  40ef6b:	add    eax,0x47b5e8ae
  40ef70:	sbb    al,0x26
  40ef72:	xor    BYTE PTR [ecx+0x1d],dh
  40ef75:	adc    al,0xe0
  40ef77:	fs pop esi
  40ef79:	int    0x96
  40ef7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef7c:	test   al,0x98
  40ef7e:	xor    BYTE PTR [edi-0x5c],0x6
  40ef82:	dec    ecx
  40ef83:	xchg   ebx,eax
  40ef84:	mov    ecx,0xb3c697e4
  40ef89:	int3   
  40ef8a:	dec    edi
  40ef8b:	cli    
  40ef8c:	sahf   
  40ef8d:	outs   dx,DWORD PTR ds:[esi]
  40ef8e:	sbb    edx,eax
  40ef90:	or     ebx,ebx
  40ef92:	fsub   QWORD PTR [esi-0x5]
  40ef95:	shr    ah,0x7b
  40ef98:	loope  0x40effa
  40ef9a:	mov    ch,BYTE PTR [eax-0xd]
  40ef9d:	adc    edi,edx
  40ef9f:	push   esi
  40efa0:	mov    edi,0x3ddc056b
  40efa5:	push   DWORD PTR [edi+0x55bce942]
  40efab:	mov    eax,0x1cef1a3
  40efb0:	mov    ah,0x55
  40efb2:	push   ds
  40efb3:	cmp    eax,0x3fb811d2
  40efb8:	mov    eax,0x6c6ea1c5
  40efbd:	sub    eax,0x462dcf4d
  40efc2:	in     eax,dx
  40efc3:	xchg   edi,eax
  40efc4:	iret   
  40efc5:	dec    esi
  40efc6:	add    DWORD PTR [edx-0x695f12a5],ecx
  40efcc:	cmp    al,0x7f
  40efce:	inc    esi
  40efcf:	jb     0x40efdd
  40efd1:	xchg   edx,eax
  40efd2:	fsub   st(0),st
  40efd4:	mov    bl,0xe0
  40efd6:	push   ss
  40efd7:	jnp    0x40ef7c
  40efd9:	shl    bl,0x26
  40efdc:	sti    
  40efdd:	inc    esp
  40efde:	mov    ah,0x43
  40efe0:	sub    edx,DWORD PTR [edi+0x70]
  40efe3:	lea    esi,[ebx-0x3e]
  40efe6:	pop    eax
  40efe7:	icebp  
  40efe8:	int    0x2f
  40efea:	mov    al,ds:0x91c29d33
  40efef:	jne    0x40ef85
  40eff1:	fidivr DWORD PTR [edx-0x22]
  40eff4:	xor    esi,DWORD PTR fs:[eax-0x4596a7fc]
  40effb:	sbb    bl,BYTE PTR [esi-0x20]
  40effe:	or     edi,DWORD PTR [esi+0x59e86d9]
  40f004:	and    dh,BYTE PTR [edi+0x29]
  40f007:	or     al,0x38
  40f009:	lahf   
  40f00a:	push   ebp
  40f00b:	dec    ebp
  40f00c:	out    0xf7,eax
  40f00e:	es sbb eax,0xfb328fd5
  40f014:	int    0x2
  40f016:	sti    
  40f017:	stos   DWORD PTR es:[edi],eax
  40f018:	push   eax
  40f019:	out    dx,eax
  40f01a:	dec    ecx
  40f01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f01c:	repnz or al,0x99
  40f01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f020:	mov    eax,ds:0xf5d71b30
  40f025:	out    0x35,al
  40f027:	hlt    
  40f028:	cli    
  40f029:	xchg   ebp,eax
  40f02a:	fsubrp st(7),st
  40f02c:	pop    esp
  40f02d:	mov    esp,0xbb6bf744
  40f032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f033:	out    dx,eax
  40f034:	fcmovb st,st(2)
  40f036:	sbb    ebp,esi
  40f038:	sub    edx,eax
  40f03a:	inc    esi
  40f03b:	pop    ecx
  40f03c:	xchg   ebp,eax
  40f03d:	fdivr  DWORD PTR [edx+0x1f]
  40f040:	mov    edi,0x27274e16
  40f045:	push   ss
  40f046:	jnp    0x40efda
  40f048:	leave  
  40f049:	dec    ecx
  40f04a:	sub    al,0xf0
  40f04c:	cli    
  40f04d:	mov    ebp,0x71514bc5
  40f052:	aam    0xfe
  40f054:	shl    dh,0x51
  40f057:	cld    
  40f058:	xchg   esp,eax
  40f059:	nop
  40f05a:	stos   DWORD PTR es:[edi],eax
  40f05b:	jp     0x40f07f
  40f05d:	xor    ch,BYTE PTR [edx+0x1a]
  40f060:	je     0x40eff0
  40f062:	test   eax,0x2c95fad8
  40f067:	pushf  
  40f068:	jmp    0x685fd184
  40f06d:	loopne 0x40f0b6
  40f06f:	jg     0x40f06a
  40f071:	cmp    DWORD PTR [eax+0x2f4057d1],ebx
  40f077:	cld    
  40f078:	cdq    
  40f079:	les    ebx,FWORD PTR [edx-0x275198d8]
  40f07f:	mov    dh,0x63
  40f081:	out    0x4f,eax
  40f083:	in     eax,dx
  40f084:	in     eax,0xf
  40f086:	push   esi
  40f087:	je     0x40f0a7
  40f089:	cmp    BYTE PTR [esp+eiz*2-0x1b10d6d],0xdf
  40f091:	leave  
  40f092:	imul   ecx,DWORD PTR [ecx-0x22],0xffffffc6
  40f096:	punpckhwd mm6,QWORD PTR [ecx+0x30]
  40f09a:	push   DWORD PTR [eax-0x36b25477]
  40f0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a1:	shr    DWORD PTR [eax],cl
  40f0a3:	or     bh,ch
  40f0a5:	add    al,0xba
  40f0a7:	add    DWORD PTR ds:0xb794dda5,ecx
  40f0ad:	push   cs
  40f0ae:	push   edx
  40f0af:	addr16 cdq 
  40f0b1:	loope  0x40f0b6
  40f0b3:	scas   eax,DWORD PTR es:[edi]
  40f0b4:	xor    BYTE PTR [ebx+0x2c],dh
  40f0b7:	sub    bh,dl
  40f0b9:	adc    al,0xa7
  40f0bb:	popf   
  40f0bc:	fwait
  40f0bd:	nop
  40f0be:	icebp  
  40f0bf:	dec    ebp
  40f0c0:	jmp    0xb1ea5fb9
  40f0c5:	loope  0x40f0f8
  40f0c7:	sbb    al,BYTE PTR [edx-0x78]
  40f0ca:	dec    bx
  40f0cc:	sub    al,0xa1
  40f0ce:	jns    0x40f0dd
  40f0d0:	ss dec esp
  40f0d2:	sbb    eax,0x2c1692e0
  40f0d7:	cmp    al,0x75
  40f0d9:	fnstcw WORD PTR [esi+edi*1+0x30f13cd3]
  40f0e0:	neg    BYTE PTR [ebp+0x68]
  40f0e3:	mov    dl,0x36
  40f0e5:	push   edx
  40f0e6:	pop    ebp
  40f0e7:	ss add al,0xd0
  40f0ea:	pusha  
  40f0eb:	mov    ebp,0xc6ad5b86
  40f0f0:	and    edx,esi
  40f0f2:	inc    ebp
  40f0f3:	retf   0xf63a
  40f0f6:	push   ds
  40f0f7:	dec    ebp
  40f0f8:	mov    esi,0x277ed386
  40f0fd:	push   ecx
  40f0fe:	cli    
  40f0ff:	cmp    cl,BYTE PTR [eax+edi*1-0x7fbce14]
  40f106:	xor    eax,DWORD PTR [ebx]
  40f108:	push   es
  40f109:	mov    bh,0xe7
  40f10b:	and    eax,0xe5d71120
  40f110:	or     al,0xec
  40f112:	inc    eax
  40f113:	xor    eax,0x96081f81
  40f118:	(bad)  
  40f119:	pop    esi
  40f11a:	add    bl,BYTE PTR [edi+0x64c29122]
  40f120:	nop
  40f121:	push   esi
  40f122:	cmp    eax,0x2409e131
  40f127:	or     eax,0x8514cce7
  40f12c:	sub    DWORD PTR cs:[ebx],0xfc4cc567
  40f133:	addr16 mov esp,0x47c14c3
  40f139:	ja     0x40f0cf
  40f13b:	pop    ecx
  40f13c:	loop   0x40f12f
  40f13e:	(bad)  
  40f140:	adc    ch,BYTE PTR [ebp-0x41e9aba3]
  40f146:	shl    DWORD PTR [edi],cl
  40f148:	in     al,dx
  40f149:	mov    DWORD PTR [edi],ebx
  40f14b:	cs stc 
  40f14d:	mov    es,WORD PTR [edi]
  40f14f:	push   0xb79f5128
  40f154:	jo     0x40f163
  40f156:	les    eax,FWORD PTR [ebp+0x5f]
  40f159:	mov    ah,0x37
  40f15b:	add    eax,0xa61505c7
  40f160:	mov    DWORD PTR ds:0x3ee45d07,0x6507739d
  40f16a:	in     al,0x75
  40f16c:	cmp    eax,0x260e784
  40f171:	pop    ss
  40f172:	nop
  40f173:	mov    bh,0x88
  40f175:	fxam   
  40f177:	adc    esp,DWORD PTR [edx-0x4e]
  40f17a:	in     eax,dx
  40f17b:	cld    
  40f17c:	idiv   BYTE PTR [esi+0x2e]
  40f17f:	adc    eax,0x6561da78
  40f184:	je     0x40f1ba
  40f186:	or     eax,0x39facfd
  40f18b:	pusha  
  40f18c:	jecxz  0x40f175
  40f18e:	enter  0xaf62,0x2b
  40f192:	loope  0x40f1eb
  40f194:	sti    
  40f195:	outs   dx,DWORD PTR ds:[esi]
  40f196:	pop    ds
  40f197:	push   edx
  40f198:	cmp    BYTE PTR [ebp-0x1a42c066],al
  40f19e:	xor    BYTE PTR ds:0x1fc22edb,ah
  40f1a4:	clc    
  40f1a5:	aaa    
  40f1a6:	inc    eax
  40f1a7:	add    esi,0xffffffdc
  40f1aa:	mov    esi,0xf80611d5
  40f1af:	aas    
  40f1b0:	jge    0x40f15c
  40f1b2:	jb     0x40f16c
  40f1b4:	mov    al,ds:0xb2429bfa
  40f1b9:	mov    bl,0x8e
  40f1bb:	lds    eax,FWORD PTR [eax+0x4a8d75f1]
  40f1c1:	scas   eax,DWORD PTR es:[edi]
  40f1c2:	cmc    
  40f1c3:	push   eax
  40f1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1c5:	retf   0x270c
  40f1c8:	push   eax
  40f1c9:	and    BYTE PTR [ebx+0x78c8f09c],0xca
  40f1d0:	adc    DWORD PTR [eax],eax
  40f1d2:	mov    ebx,0x3daaf879
  40f1d7:	std    
  40f1d8:	or     bl,BYTE PTR [ebx]
  40f1da:	jae    0x40f1d4
  40f1dc:	or     al,BYTE PTR ds:0xe3f337c1
  40f1e2:	mov    ss,ecx
  40f1e4:	mov    ecx,0x92b4b216
  40f1e9:	or     eax,0xb6f4e6f3
  40f1ee:	ret    0xcea7
  40f1f1:	test   al,0xa0
  40f1f3:	mov    BYTE PTR [esi+0x208d8251],dh
  40f1f9:	xchg   ebx,eax
  40f1fa:	cs cmp eax,0xeb64ec5b
  40f200:	mov    ebp,0xca5c72ea
  40f205:	sbb    ecx,edx
  40f207:	jb     0x40f217
  40f209:	in     al,0xc2
  40f20b:	xchg   ebp,eax
  40f20c:	out    dx,al
  40f20d:	leave  
  40f20e:	(bad)  
  40f20f:	std    
  40f210:	cmp    al,0x20
  40f212:	fild   WORD PTR [ebp-0x9d3c4cd]
  40f218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f219:	jle    0x40f205
  40f21b:	pop    ebx
  40f21c:	push   edi
  40f21d:	das    
  40f21e:	out    0x21,al
  40f220:	mul    ah
  40f222:	shr    DWORD PTR [ebx],cl
  40f224:	push   0x23f9a80a
  40f229:	pop    es
  40f22a:	sbb    eax,ecx
  40f22c:	cmp    eax,0xc99a8968
  40f231:	pop    ebp
  40f232:	in     eax,0x63
  40f234:	dec    esi
  40f235:	inc    ecx
  40f236:	aam    0x22
  40f238:	or     dl,BYTE PTR ds:0xf7d9dfb5
  40f23e:	add    ebx,DWORD PTR [eax+0x44f3a677]
  40f244:	clc    
  40f245:	push   0x5b
  40f247:	test   eax,0x2d025cb5
  40f24c:	or     esi,DWORD PTR [ebp-0x23647bbe]
  40f252:	popa   
  40f253:	enter  0xdcd9,0xf7
  40f257:	xor    eax,DWORD PTR [esi]
  40f259:	sbb    BYTE PTR [ecx],0xb0
  40f25c:	cdq    
  40f25d:	ret    
  40f25e:	out    dx,eax
  40f25f:	inc    ebp
  40f260:	call   0x83046489
  40f265:	mov    BYTE PTR [edx],al
  40f267:	in     al,dx
  40f268:	inc    eax
  40f269:	fisubr WORD PTR [eax-0x35457f46]
  40f26f:	imul   BYTE PTR [ebp-0x3c]
  40f272:	std    
  40f273:	inc    eax
  40f274:	mov    cs,WORD PTR [esi]
  40f276:	push   cs
  40f277:	cmp    BYTE PTR [ebx-0x5a410b37],bl
  40f27d:	das    
  40f27e:	fs in  eax,0x9
  40f281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f282:	mov    ds:0x3f3d6559,eax
  40f287:	dec    ebp
  40f288:	sub    BYTE PTR [ebx],al
  40f28a:	daa    
  40f28b:	xor    ch,BYTE PTR [esi]
  40f28d:	push   0xffffffec
  40f28f:	retf   
  40f290:	in     eax,dx
  40f291:	fadd   DWORD PTR [edi+0x1e]
  40f294:	adc    al,BYTE PTR ds:0x51be67ad
  40f29a:	ins    BYTE PTR es:[edi],dx
  40f29b:	outs   dx,DWORD PTR ds:[esi]
  40f29c:	lock shl BYTE PTR [edx],1
  40f29f:	sub    al,0x25
  40f2a1:	ja     0x40f243
  40f2a3:	push   ecx
  40f2a4:	dec    ecx
  40f2a5:	mov    edi,0x88e80bba
  40f2aa:	out    0xf2,eax
  40f2ac:	cli    
  40f2ad:	jne    0x40f2b9
  40f2af:	pop    ss
  40f2b0:	ret    0xc2b
  40f2b3:	shl    esi,1
  40f2b5:	cdq    
  40f2b6:	shr    BYTE PTR es:0x3a2c06b0,1
  40f2bd:	cmp    eax,0x1ca4b51b
  40f2c2:	ficomp DWORD PTR [edx-0x41]
  40f2c5:	xchg   edx,eax
  40f2c6:	bound  esi,QWORD PTR [esi-0x2]
  40f2c9:	(bad)  
  40f2ca:	(bad)  
  40f2cb:	retf   0xb77a
  40f2ce:	sbb    DWORD PTR ss:[esi+0x489e597e],edx
  40f2d5:	pushf  
  40f2d6:	out    0xb3,eax
  40f2d8:	or     eax,0xa8c2ab91
  40f2dd:	mov    ds:0x4cb170d7,eax
  40f2e2:	fimul  WORD PTR [esi+0x5a2ccf9d]
  40f2e8:	data16 jp 0x40f285
  40f2eb:	repnz inc eax
  40f2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ee:	(bad)
  40f2f1:	adc    al,0xc6
  40f2f3:	fisub  WORD PTR [esi]
  40f2f5:	sbb    eax,0x7afde0dd
  40f2fa:	jp     0x40f2af
  40f2fc:	jbe    0x40f320
  40f2fe:	mov    ?,WORD PTR [ebx]
  40f300:	jp     0x40f2e1
  40f302:	ins    DWORD PTR es:[edi],dx
  40f303:	fisub  WORD PTR [edx*4+0x2c20c096]
  40f30a:	leave  
  40f30b:	mov    eax,ds:0x858c50b0
  40f310:	into   
  40f311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f312:	retf   
  40f313:	or     DWORD PTR [eax+eax*2+0x4c],eax
  40f317:	ret    0xff7b
  40f31a:	mov    ecx,0xf1c09c3e
  40f31f:	mov    ebx,0xed799eee
  40f324:	push   esp
  40f325:	ins    BYTE PTR es:[edi],dx
  40f326:	leave  
  40f327:	jmp    0x40f37c
  40f329:	cmp    al,0x6c
  40f32b:	pop    ecx
  40f32c:	push   edi
  40f32d:	arpl   WORD PTR [edi],ax
  40f32f:	(bad)  
  40f330:	shr    BYTE PTR [edx+0x25],1
  40f333:	not    ecx
  40f335:	xchg   edi,eax
  40f336:	(bad)  
  40f337:	test   al,0xa9
  40f339:	repz mov bh,0x92
  40f33c:	mov    dh,0x9f
  40f33e:	es call 0x1b59f6da
  40f344:	idiv   DWORD PTR [ebx]
  40f346:	in     eax,0x31
  40f348:	adc    dh,dl
  40f34a:	xor    ebp,esi
  40f34c:	ja     0x40f304
  40f34e:	and    DWORD PTR [edi],edx
  40f350:	dec    edx
  40f351:	lods   al,BYTE PTR ds:[esi]
  40f352:	mov    eax,ds:0x6953af71
  40f357:	pop    eax
  40f358:	cs dec edx
  40f35a:	mov    WORD PTR [ecx+ecx*4-0xa1d2a06],gs
  40f361:	iret   
  40f362:	mov    al,ds:0x631e5247
  40f367:	and    al,al
  40f369:	fistp  QWORD PTR [edi+edx*4-0x55]
  40f36d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f36e:	into   
  40f36f:	nop
  40f370:	ins    BYTE PTR es:[edi],dx
  40f371:	jp     0x40f3e6
  40f373:	and    al,0x87
  40f375:	seta   BYTE PTR [edx+0x54186283]
  40f37c:	(bad)  
  40f37d:	xor    edi,DWORD PTR [esi]
  40f37f:	cli    
  40f380:	dec    edx
  40f381:	mov    eax,DWORD PTR [edx]
  40f383:	mov    bh,0x5a
  40f385:	out    dx,al
  40f386:	mov    cl,0xdd
  40f388:	aad    0x0
  40f38a:	ret    
  40f38b:	popa   
  40f38c:	aaa    
  40f38d:	outs   dx,DWORD PTR ds:[esi]
  40f38e:	push   ebp
  40f38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f390:	jg     0x40f3d6
  40f392:	dec    ecx
  40f393:	je     0x40f31f
  40f395:	jns    0x40f35e
  40f397:	inc    ebx
  40f398:	xor    edi,DWORD PTR [edi+0x279a8bcb]
  40f39e:	mov    dl,0xb9
  40f3a0:	mov    edi,0xa6d65c82
  40f3a5:	add    al,0xc0
  40f3a7:	jge    0x40f3fa
  40f3a9:	jns    0x40f354
  40f3ab:	ja     0x40f42c
  40f3ad:	adc    ebp,ecx
  40f3af:	dec    ebp
  40f3b0:	retf   0xfd28
  40f3b3:	pop    edi
  40f3b4:	in     eax,dx
  40f3b5:	leave  
  40f3b6:	sbb    al,0xab
  40f3b8:	stos   BYTE PTR es:[edi],al
  40f3b9:	in     eax,dx
  40f3ba:	lods   al,BYTE PTR ds:[esi]
  40f3bb:	cmp    cl,BYTE PTR [eax-0x69e479f6]
  40f3c1:	bound  ebx,QWORD PTR [edi+0x3fdbb01]
  40f3c7:	mov    ch,dl
  40f3c9:	(bad)  
  40f3ca:	mov    ebx,0xc83c6ac0
  40f3cf:	and    eax,0x38fed186
  40f3d4:	dec    esi
  40f3d5:	and    ebp,0x4f
  40f3d8:	mov    eax,0x6968917d
  40f3dd:	lods   al,BYTE PTR ds:[esi]
  40f3de:	mov    DWORD PTR [ebx],ebx
  40f3e0:	or     BYTE PTR [ebx+0x6fd15f00],0x97
  40f3e7:	mov    WORD PTR [esi],ds
  40f3e9:	cld    
  40f3ea:	stos   DWORD PTR es:[edi],eax
  40f3eb:	inc    ebp
  40f3ec:	aad    0x92
  40f3ee:	and    DWORD PTR [ebp-0x2b],esi
  40f3f1:	pop    edi
  40f3f2:	rcr    DWORD PTR [eax-0x7a],0xad
  40f3f6:	popf   
  40f3f7:	pop    ebp
  40f3f8:	mov    ebp,DWORD PTR [edx]
  40f3fa:	sbb    BYTE PTR [edi],0xc0
  40f3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3fe:	scas   eax,DWORD PTR es:[edi]
  40f3ff:	or     ch,BYTE PTR [edx+edx*2-0x4c]
  40f403:	push   ss
  40f404:	mov    bh,0x21
  40f406:	repnz aaa 
  40f408:	je     0x40f3f9
  40f40a:	cmp    eax,0x36647f95
  40f40f:	jmp    0x2c481f2a
  40f414:	mov    ch,0x3c
  40f416:	sar    ecx,cl
  40f418:	push   0xffffff98
  40f41a:	and    cl,ch
  40f41c:	xor    esp,DWORD PTR [esi]
  40f41e:	sti    
  40f41f:	cmp    ebp,DWORD PTR [eax+0xa164da1]
  40f425:	or     al,BYTE PTR [edi-0x45e266cd]
  40f42b:	cdq    
  40f42c:	pushf  
  40f42d:	or     eax,0x6929a84f
  40f432:	es call 0x87d11b32
  40f438:	and    DWORD PTR [ebx+edi*1],esp
  40f43b:	or     BYTE PTR [edi-0x7d],ah
  40f43e:	xor    DWORD PTR [eax],edi
  40f440:	imul   esp,DWORD PTR [eax+0x17],0x70
  40f444:	mov    DWORD PTR [esp+ecx*2+0x43],esi
  40f448:	push   ebx
  40f449:	sbb    DWORD PTR [eax+0x20e2fba8],esp
  40f44f:	mov    esp,0x194cc1cd
  40f454:	sub    ch,BYTE PTR [eax+0x6a]
  40f457:	fadd   QWORD PTR [eax+0x41f40ee]
  40f45d:	ss xchg esp,eax
  40f45f:	shr    DWORD PTR [ebx+0x795e6929],1
  40f465:	cmp    ebp,DWORD PTR [esp+esi*8-0x767097bb]
  40f46c:	in     al,0x8
  40f46e:	mov    dl,0xc6
  40f470:	repnz pop ecx
  40f472:	sbb    BYTE PTR [edx+0x6e3e4c1c],bl
  40f478:	mov    dl,0x6e
  40f47a:	xor    BYTE PTR [ebp+0x23],ch
  40f47d:	mov    ds:0x80d9dbbd,eax
  40f482:	cwde   
  40f483:	mov    dh,0x4b
  40f485:	ret    0x60d3
  40f488:	pop    eax
  40f489:	outs   dx,BYTE PTR ds:[esi]
  40f48a:	call   FWORD PTR [eax]
  40f48c:	cmp    ebp,DWORD PTR [esi-0x10ce9054]
  40f492:	jmp    0x813f70b3
  40f497:	cli    
  40f498:	int    0xa1
  40f49a:	cmp    cl,BYTE PTR [ecx+0x1d2b2781]
  40f4a0:	pop    es
  40f4a1:	in     al,dx
  40f4a2:	lock pop ecx
  40f4a4:	fisttp QWORD PTR [eax]
  40f4a6:	jle    0x40f445
  40f4a8:	or     DWORD PTR [edi],ebp
  40f4aa:	repz mov ah,0x33
  40f4ad:	mov    al,0x2d
  40f4af:	(bad)  
  40f4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b1:	dec    eax
  40f4b2:	aad    0x1d
  40f4b4:	inc    ebp
  40f4b5:	mov    ebx,0xe9c783c0
  40f4ba:	fimul  WORD PTR [edi-0x5]
  40f4bd:	sbb    eax,0xb8a1588
  40f4c2:	(bad)  
  40f4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c4:	add    esi,edi
  40f4c6:	push   ebx
  40f4c7:	mov    esp,esi
  40f4c9:	lds    esi,FWORD PTR [ecx-0x6e2b1354]
  40f4cf:	sbb    eax,0x663072dd
  40f4d4:	sub    al,0xa7
  40f4d6:	dec    esi
  40f4d7:	jne    0x40f50e
  40f4d9:	push   ss
  40f4da:	call   0x73f5c8bb
  40f4df:	mov    ecx,0xc8d5c3b5
  40f4e4:	mov    DWORD PTR [ebx-0x21],ebp
  40f4e7:	test   BYTE PTR [eax-0x6db54bc9],ah
  40f4ed:	fs or  bh,cl
  40f4f0:	sti    
  40f4f1:	xor    eax,0xddfe0c72
  40f4f6:	loop   0x40f4a6
  40f4f8:	dec    edi
  40f4f9:	and    eax,DWORD PTR [ebx]
  40f4fb:	xchg   esp,eax
  40f4fc:	pop    ds
  40f4fd:	and    al,0x51
  40f4ff:	cmp    esp,DWORD PTR [eax-0x2f]
  40f502:	arpl   si,cx
  40f504:	fidivr DWORD PTR [esi]
  40f506:	fimul  WORD PTR [ecx+0x3e436b10]
  40f50c:	mov    ecx,0x6aae96e4
  40f511:	icebp  
  40f512:	mov    eax,ds:0xa4aa0257
  40f517:	and    al,bl
  40f519:	fadd   QWORD PTR [esi+eiz*4-0xb672193]
  40f520:	dec    edx
  40f521:	pushf  
  40f522:	cmp    al,0x24
  40f524:	sub    ecx,DWORD PTR [eax]
  40f526:	clc    
  40f527:	or     al,0xf9
  40f529:	mov    edx,0xdb683a7e
  40f52e:	cs mov ah,0x3b
  40f531:	stc    
  40f532:	jecxz  0x40f57d
  40f534:	mov    eax,0xf90216a1
  40f539:	lods   al,BYTE PTR ds:[esi]
  40f53a:	inc    esp
  40f53b:	icebp  
  40f53c:	popf   
  40f53d:	mov    dh,0x46
  40f53f:	mov    eax,DWORD PTR [ecx+0x5d64add1]
  40f545:	adc    edx,esp
  40f547:	add    eax,0xad71c532
  40f54c:	cdq    
  40f54d:	sahf   
  40f54e:	xchg   ebp,eax
  40f54f:	pop    edx
  40f550:	jmp    0xca10:0xea490ed6
  40f557:	outs   dx,BYTE PTR ds:[esi]
  40f558:	cmp    DWORD PTR [edi-0x5891cb1b],edx
  40f55e:	or     esp,DWORD PTR [edi]
  40f560:	push   es
  40f561:	rcr    esi,0x77
  40f564:	inc    esp
  40f565:	cli    
  40f566:	mov    esp,0xf63a073b
  40f56b:	pop    edi
  40f56c:	test   DWORD PTR [esi+ebx*2-0x7a],0x4a76c6a0
  40f574:	pop    ebx
  40f575:	sbb    ebp,DWORD PTR [ebp+0x4beade8f]
  40f57b:	shl    BYTE PTR [edx],1
  40f57d:	adc    edi,edx
  40f57f:	jmp    0x40f594
  40f581:	aam    0x9d
  40f583:	and    al,0xf9
  40f585:	xor    esp,ebx
  40f587:	mov    WORD PTR [ecx+eax*4],cs
  40f58a:	push   eax
  40f58b:	fistp  WORD PTR ds:0xf5e969
  40f591:	inc    eax
  40f592:	(bad)  
  40f593:	push   eax
  40f594:	adc    edi,DWORD PTR [esi+edi*8-0x5f5b5584]
  40f59b:	ja     0x40f616
  40f59d:	xor    ebx,edx
  40f59f:	cli    
  40f5a0:	jo     0x40f579
  40f5a2:	(bad)  
  40f5a3:	rcr    BYTE PTR [ebp+0x18308f20],cl
  40f5a9:	aas    
  40f5aa:	pop    edx
  40f5ab:	or     eax,0xd3752c35
  40f5b0:	push   edi
  40f5b1:	cmp    eax,0x684261c3
  40f5b6:	outs   dx,DWORD PTR ds:[esi]
  40f5b7:	nop
  40f5b8:	xchg   edx,eax
  40f5b9:	jno    0x40f5ef
  40f5bb:	jecxz  0x40f56c
  40f5bd:	mov    al,0xea
  40f5bf:	sub    esp,edx
  40f5c1:	sub    BYTE PTR [edi-0x6c],dl
  40f5c4:	lods   eax,DWORD PTR ds:[esi]
  40f5c5:	jno    0x40f559
  40f5c7:	fsubrp st(2),st
  40f5c9:	(bad)  
  40f5ca:	push   edx
  40f5cb:	pop    edx
  40f5cc:	aas    
  40f5cd:	jb     0x40f646
  40f5cf:	in     al,dx
  40f5d0:	mov    ebp,0x944a2455
  40f5d5:	jns    0x40f580
  40f5d7:	aam    0x26
  40f5d9:	test   al,0x58
  40f5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5dc:	imul   esi,esi,0x51
  40f5df:	fiadd  WORD PTR [ecx-0x22]
  40f5e2:	sub    BYTE PTR [eax+edi*2],dh
  40f5e5:	les    ebx,FWORD PTR cs:[eax+0x61]
  40f5e9:	jle    0x40f656
  40f5eb:	pop    edx
  40f5ec:	enter  0x9c8a,0x45
  40f5f0:	push   esp
  40f5f1:	repz sub bh,BYTE PTR [ebx]
  40f5f4:	cdq    
  40f5f5:	ins    DWORD PTR es:[edi],dx
  40f5f6:	push   esi
  40f5f7:	xchg   edi,eax
  40f5f8:	mov    ecx,DWORD PTR [esp+ebp*1+0x6e1f689a]
  40f5ff:	push   ecx
  40f600:	mov    ah,0xbd
  40f602:	popf   
  40f603:	inc    edx
  40f604:	and    al,0x8c
  40f606:	cmp    dh,BYTE PTR [edi+0x77]
  40f609:	add    eax,ecx
  40f60b:	sbb    BYTE PTR [ecx+0x68c6a23d],bl
  40f611:	outs   dx,DWORD PTR ds:[esi]
  40f612:	pop    ds
  40f613:	push   ss
  40f614:	mov    ds:0xd7ea59b3,ax
  40f61a:	adc    eax,0xe5da836
  40f61f:	call   0xff2e:0xb59a8c02
  40f626:	jmp    0x40f664
  40f628:	fcom   st(4)
  40f62a:	mov    al,ds:0x6abf366e
  40f62f:	ror    esi,0x71
  40f632:	jae    0x40f64f
  40f634:	stos   BYTE PTR es:[edi],al
  40f635:	add    al,0xd1
  40f637:	xchg   ebx,esi
  40f639:	xor    ebx,ebx
  40f63b:	push   esi
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	idiv   BYTE PTR ds:[edi]
  40fde3:	inc    ecx
  40fde4:	mov    dl,0x4f
  40fde6:	jnp    0x40fe63
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	cmp    dl,BYTE PTR [ebp-0x2f5278]
  40fdf2:	ins    BYTE PTR es:[edi],dx
  40fdf3:	jb     0x40fdd1
  40fdf5:	cmp    ebx,eax
  40fdf7:	repnz dec edx
  40fdf9:	bound  eax,QWORD PTR [edi-0x3a26377e]
  40fdff:	adc    al,0x12
  40fe01:	or     DWORD PTR ds:0x8e5a2308,esi
  40fe07:	adc    DWORD PTR [edi],edi
  40fe09:	ds jmp 0x7147b159
  40fe0f:	cld    
  40fe10:	sub    eax,0xb4868cc1
  40fe15:	adc    al,0x30
  40fe17:	mov    esp,0x8005a19f
  40fe1c:	into   
  40fe1d:	clc    
  40fe1e:	xor    al,0x4c
  40fe20:	ins    DWORD PTR es:[edi],dx
  40fe21:	sub    cl,BYTE PTR ds:0xb54e45d8
  40fe27:	dec    eax
  40fe28:	and    al,0x41
  40fe2a:	cmp    BYTE PTR [ecx+0x72],cl
  40fe2d:	xor    DWORD PTR [eax+0x67fc8f51],ebx
  40fe33:	mov    ch,0x45
  40fe35:	push   0x85a798b
  40fe3a:	aaa    
  40fe3b:	push   ds
  40fe3c:	retf   
  40fe3d:	ret    0xf8fc
  40fe40:	jbe    0x40fe6e
  40fe42:	sub    edi,DWORD PTR [ecx+0x15]
  40fe45:	or     al,BYTE PTR [ebp+0x5a557600]
  40fe4b:	fbstp  TBYTE PTR [eax+esi*4+0x3e]
  40fe4f:	lds    esi,FWORD PTR [ecx+0x213eb878]
  40fe55:	cdq    
  40fe56:	inc    edi
  40fe57:	aad    0x97
  40fe59:	pop    edi
  40fe5a:	or     eax,0x8c338a43
  40fe5f:	sbb    al,0x3d
  40fe61:	dec    ebx
  40fe62:	rcr    DWORD PTR [edi+0x5e11582],cl
  40fe68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe69:	arpl   WORD PTR [ecx-0x615982bc],si
  40fe6f:	sub    al,0xbf
  40fe71:	stos   DWORD PTR es:[edi],eax
  40fe72:	test   DWORD PTR [esi],ebp
  40fe74:	mov    BYTE PTR [ebp-0x4d277378],dh
  40fe7a:	fcomp  QWORD PTR [edi-0x1dc3c382]
  40fe80:	xor    BYTE PTR [ebx],bl
  40fe82:	add    dh,BYTE PTR [edx+0x59]
  40fe85:	outs   dx,DWORD PTR ds:[esi]
  40fe86:	dec    edi
  40fe87:	jne    0x40fef6
  40fe89:	repnz push edx
  40fe8b:	mov    bh,BYTE PTR [ecx]
  40fe8d:	sbb    DWORD PTR [ebx-0x2],0x2b
  40fe91:	push   esp
  40fe92:	stos   DWORD PTR es:[edi],eax
  40fe93:	in     eax,0x10
  40fe95:	dec    edx
  40fe96:	jmp    0x40fe1e
  40fe98:	(bad)  
  40fe99:	(bad)  [edi]
  40fe9b:	lock mov al,ds:0xe06fa741
  40fea1:	inc    edx
  40fea2:	test   dh,al
  40fea4:	dec    esi
  40fea5:	push   es
  40fea6:	jne    0x40fe5e
  40fea8:	in     al,0x6
  40feaa:	iret   
  40feab:	iret   
  40feac:	fadd   DWORD PTR [ebp-0x6c010a64]
  40feb2:	push   edi
  40feb3:	stos   DWORD PTR es:[edi],eax
  40feb4:	test   BYTE PTR [ebx-0x3d4a8fc],ch
  40feba:	xor    cl,cl
  40febc:	push   ebx
  40febd:	das    
  40febe:	stc    
  40febf:	jecxz  0x40fe54
  40fec1:	cmp    ebp,ecx
  40fec3:	loopne 0x40ff2f
  40fec5:	xchg   BYTE PTR [ecx+0x79e93883],ah
  40fecb:	xor    DWORD PTR [eax+ecx*4+0x71f31928],esi
  40fed2:	in     al,0xec
  40fed4:	mov    al,BYTE PTR [ecx+0x49]
  40fed7:	out    dx,al
  40fed8:	imul   edi,esi,0x42e51436
  40fede:	sub    eax,0x230452cf
  40fee3:	es aad 0xe3
  40fee6:	mov    al,ds:0x6b26aba5
  40feeb:	and    eax,0xecff4132
  40fef0:	or     esi,DWORD PTR [esp+ebx*1+0x453b6317]
  40fef7:	sbb    al,0x45
  40fef9:	fadd   QWORD PTR [eax-0x8e929b6]
  40feff:	sar    DWORD PTR [esi-0x42a758ab],0xbe
  40ff06:	mov    ecx,DWORD PTR [eax+0x37]
  40ff09:	sbb    DWORD PTR [esi],0xffffffae
  40ff0c:	pop    es
  40ff0d:	lock mov esp,0x128817a6
  40ff13:	stos   DWORD PTR es:[edi],eax
  40ff14:	adc    DWORD PTR [ebx+0x7fd4ca22],eax
  40ff1a:	jmp    0x40feca
  40ff1c:	scas   eax,DWORD PTR es:[edi]
  40ff1d:	cmp    al,0x5f
  40ff1f:	fstp   DWORD PTR [edx-0x1697743e]
  40ff25:	cmp    ch,ah
  40ff27:	jae    0x40ff02
  40ff29:	sahf   
  40ff2a:	in     al,dx
  40ff2b:	or     cl,cl
  40ff2d:	or     DWORD PTR [ecx],ecx
  40ff2f:	loop   0x40fede
  40ff31:	aad    0x5d
  40ff33:	data16 je 0x40ff52
  40ff36:	rol    ah,1
  40ff38:	call   0xbfe2:0xcec8c966
  40ff3f:	popf   
  40ff40:	add    ah,dl
  40ff42:	lahf   
  40ff43:	sub    BYTE PTR cs:[ebx+eiz*1-0x4a],bh
  40ff48:	iret   
  40ff49:	inc    ecx
  40ff4a:	or     edx,DWORD PTR [edx+0x58]
  40ff4d:	mov    ebx,0xef22cc2f
  40ff52:	fisub  DWORD PTR [ecx+ebp*1+0x3ac26856]
  40ff59:	dec    esi
  40ff5a:	add    eax,0xf277b3a1
  40ff5f:	push   ds
  40ff60:	arpl   WORD PTR [esi],bx
  40ff62:	sub    DWORD PTR ds:[eax+0x23603023],ecx
  40ff69:	xchg   ebp,eax
  40ff6a:	ret    0xe89c
  40ff6d:	sbb    BYTE PTR [edx],dh
  40ff6f:	mov    ds:0xa6f9b53b,eax
  40ff74:	ins    DWORD PTR es:[edi],dx
  40ff75:	adc    BYTE PTR [ecx+eiz*2+0x2b],ch
  40ff79:	shl    BYTE PTR [ebp+0x2d20a30],cl
  40ff7f:	dec    edi
  40ff80:	daa    
  40ff81:	stos   BYTE PTR es:[edi],al
  40ff82:	lods   eax,DWORD PTR ds:[esi]
  40ff83:	xchg   esp,eax
  40ff84:	sub    DWORD PTR ds:0xbf4d087,edx
  40ff8a:	sbb    al,0x4a
  40ff8c:	mov    eax,ds:0xe5d6e21d
  40ff91:	rep lods eax,DWORD PTR ds:[esi]
  40ff94:	pop    ebx
  40ff95:	add    dh,ch
  40ff97:	outs   dx,DWORD PTR ds:[esi]
  40ff98:	cmp    cl,BYTE PTR [edx]
  40ff9a:	pop    esi
  40ff9b:	pop    ebx
  40ff9c:	or     bh,0x74
  40ff9f:	and    DWORD PTR [eax+edx*4],esi
  40ffa2:	lea    edi,[ebp-0x28]
  40ffa5:	cs pushf 
  40ffa7:	loopne 0x40ff53
  40ffa9:	mov    al,0x74
  40ffab:	xor    ebx,esi
  40ffad:	xor    al,BYTE PTR [eax]
  40ffaf:	mov    ecx,0x6a0377e9
  40ffb4:	aas    
  40ffb5:	jg     0x40ff72
  40ffb7:	stc    
  40ffb8:	sub    BYTE PTR [edx-0x1a],0x84
  40ffbc:	xchg   BYTE PTR [esi-0x24],al
  40ffbf:	pop    ds
  40ffc0:	mov    ah,0x2
  40ffc2:	lods   eax,DWORD PTR ds:[esi]
  40ffc3:	xchg   esi,eax
  40ffc4:	popf   
  40ffc5:	cmp    BYTE PTR [ebp+0x5f],0x5b
  40ffc9:	(bad)  
  40ffca:	fdiv   DWORD PTR [ebp+ecx*8+0xa]
  40ffce:	les    edx,FWORD PTR [edx+0x66]
  40ffd1:	test   eax,0x14289c65
  40ffd6:	jle    0x40ffa5
  40ffd8:	jb     0x410005
  40ffda:	push   0x3f48d05f
  40ffdf:	pusha  
  40ffe0:	jl     0x40ff7b
  40ffe2:	ror    ecx,0xae
  40ffe5:	cmp    DWORD PTR [ecx-0x75],edi
  40ffe8:	mov    ebp,DWORD PTR [edi]
  40ffea:	(bad)  
  40ffec:	enter  0xf2f9,0x68
  40fff0:	loop   0x40ff83
  40fff2:	xor    eax,0x595be16d
  40fff7:	add    ax,WORD PTR ds:0x315ac41e
  40fffe:	xor    eax,0xe31328bf
  410003:	cmp    eax,0xe66abd5a
  410008:	ds int 0xda
  41000b:	cdq    
  41000c:	or     edx,ebp
  41000e:	rcl    BYTE PTR [edi],1
  410010:	(bad)  
  410011:	push   0xea24313c
  410016:	dec    ecx
  410017:	xchg   DWORD PTR [ecx+0x21],ebx
  41001a:	out    0x12,al
  41001c:	inc    eax
  41001d:	mov    bl,0xa8
  41001f:	loopne 0x40ffaa
  410021:	rcr    DWORD PTR [edi-0x2ca21568],1
  410027:	bound  eax,QWORD PTR [eax+0x3bc0a78c]
  41002d:	or     al,bl
  41002f:	stos   BYTE PTR es:[edi],al
  410030:	pop    ecx
  410031:	or     bl,BYTE PTR ds:0x3230d5ac
  410037:	xor    DWORD PTR [esi+0x5b25a36e],edx
  41003d:	or     al,BYTE PTR [esi]
  41003f:	shr    BYTE PTR [ebp+0x33],cl
  410042:	jne    0x410045
  410044:	xor    BYTE PTR [ebx-0x19],bh
  410047:	addr16 dec ebp
  410049:	and    DWORD PTR [edi-0x1],edi
  41004c:	push   edi
  41004d:	fs retf 
  41004f:	push   ebx
  410050:	out    0x18,al
  410052:	xchg   edx,eax
  410053:	ja     0x410091
  410055:	cmp    bh,0xf3
  410058:	and    ecx,0x7d
  41005b:	lock sbb BYTE PTR [ebx-0x40858c8f],ch
  410062:	rcl    BYTE PTR [ecx+0x289df701],cl
  410068:	(bad)  
  410069:	test   eax,0x3df39b7d
  41006e:	mov    al,0x8f
  410070:	arpl   si,dx
  410072:	mov    bl,0x82
  410074:	inc    ebp
  410075:	inc    edx
  410076:	call   0x268204de
  41007b:	mov    edx,0xaf04d71d
  410081:	inc    esp
  410082:	out    0x4c,al
  410084:	push   ebx
  410085:	mov    edi,0xb43feb6a
  41008a:	test   ebx,0x6c573392
  410090:	fwait
  410091:	aam    0xb4
  410093:	mov    BYTE PTR [bx+si],al
  410096:	je     0x4100c2
  410098:	out    0x68,al
  41009a:	dec    edi
  41009b:	fbstp  TBYTE PTR [eax-0x42]
  41009e:	retf   0xbbe3
  4100a1:	mov    edi,0xf49ed2c2
  4100a6:	scas   eax,DWORD PTR es:[edi]
  4100a7:	jl     0x41008e
  4100a9:	stos   DWORD PTR es:[edi],eax
  4100aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ab:	cli    
  4100ac:	push   edx
  4100ad:	test   BYTE PTR [esi+0xd],cl
  4100b0:	outs   dx,DWORD PTR fs:[esi]
  4100b2:	cld    
  4100b3:	jmp    ebp
  4100b5:	in     eax,dx
  4100b6:	sub    esp,edx
  4100b8:	and    al,0xac
  4100ba:	shl    DWORD PTR [eax+0x56],0x84
  4100be:	xor    BYTE PTR [ebp+0x54],al
  4100c1:	jp     0x410103
  4100c3:	bound  esp,QWORD PTR [edi+edx*8]
  4100c6:	in     al,dx
  4100c7:	(bad)  
  4100c8:	pop    esp
  4100c9:	lds    esi,FWORD PTR [edx+edx*8-0x34]
  4100cd:	lock jno 0x41009a
  4100d0:	mov    al,0x49
  4100d2:	jl     0x4100dc
  4100d4:	xor    DWORD PTR [ecx-0x43],eax
  4100d7:	push   edi
  4100d8:	aas    
  4100d9:	jmp    0xda8261c8
  4100de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100df:	push   ds
  4100e0:	cwde   
  4100e1:	add    DWORD PTR [edi],edi
  4100e3:	stos   DWORD PTR es:[edi],eax
  4100e4:	sbb    BYTE PTR [ebx-0x35],dh
  4100e7:	cmp    WORD PTR [esi*1+0x6318cf34],di
  4100ef:	(bad)  
  4100f0:	out    dx,al
  4100f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100f2:	mov    bl,0xd8
  4100f4:	xor    DWORD PTR [eax],ecx
  4100f6:	jo     0x4100b9
  4100f8:	jg     0x410099
  4100fa:	sbb    eax,0xe3b13f62
  4100ff:	mov    esi,es
  410101:	sub    BYTE PTR [edx],0xd3
  410104:	xchg   DWORD PTR [edx],ecx
  410106:	jge    0x410178
  410108:	adc    ebp,ebp
  41010a:	adc    eax,0xb635d392
  41010f:	inc    ecx
  410110:	ret    
  410111:	rcl    DWORD PTR [esi],cl
  410113:	pop    ecx
  410114:	lahf   
  410115:	mov    al,0xb8
  410117:	data16 or bh,BYTE PTR [esi]
  41011a:	xor    esp,DWORD PTR [edi-0x3d37ec5c]
  410120:	sbb    edx,DWORD PTR [ebx-0x1a]
  410123:	pop    ebp
  410124:	cmp    DWORD PTR [edx],edi
  410126:	leave  
  410127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410128:	loope  0x4100d3
  41012a:	iret   
  41012b:	imul   esi,edi,0xf63a7410
  410131:	ret    0xed22
  410134:	mov    edx,0x34b5a273
  410139:	outs   dx,DWORD PTR ds:[esi]
  41013a:	jb     0x41010a
  41013c:	arpl   WORD PTR [edx-0x23],di
  41013f:	xchg   esi,eax
  410140:	jg     0x4100d9
  410142:	xor    BYTE PTR ss:[eax+eiz*4],bl
  410146:	mov    edx,0xbc19c41c
  41014b:	sbb    dl,bl
  41014d:	mov    ecx,0xdfb370f2
  410152:	jmp    0x41015b
  410154:	mov    ah,0x8a
  410156:	cs push 0x7ff78c92
  41015c:	int3   
  41015d:	xchg   ecx,eax
  41015e:	int3   
  41015f:	and    ebp,edi
  410161:	out    dx,eax
  410162:	add    BYTE PTR [edx+ebx*8+0x57],ch
  410166:	pop    ebx
  410167:	(bad)  
  410168:	jmp    0x4101d1
  41016a:	repnz xchg esp,eax
  41016c:	fcmovbe st,st(3)
  41016e:	or     dl,BYTE PTR [esi-0x99617ff]
  410174:	add    ah,bh
  410176:	out    dx,al
  410177:	mov    edi,0x535690d0
  41017c:	mov    ecx,0xe98407ea
  410181:	fidivr WORD PTR [edx+0x497ce7ae]
  410187:	ffreep st(2)
  410189:	cld    
  41018a:	fwait
  41018b:	dec    edi
  41018c:	and    eax,0x19b9331c
  410191:	int3   
  410192:	loopne 0x4101c7
  410194:	or     DWORD PTR [ebx],edx
  410196:	mov    eax,ds:0x956ce6f5
  41019b:	add    DWORD PTR [eax-0x7addd19c],0x76
  4101a2:	sbb    al,0x59
  4101a4:	xlat   BYTE PTR ds:[ebx]
  4101a5:	scas   ax,WORD PTR es:[edi]
  4101a7:	ja     0x4101b7
  4101a9:	xchg   BYTE PTR [esi+0x7b],dh
  4101ac:	fstp   st(3)
  4101ae:	imul   DWORD PTR [esp+esi*8+0x75115f88]
  4101b5:	sub    eax,0x3fc8c3fe
  4101ba:	sub    BYTE PTR [ebp-0x51],bh
  4101bd:	in     al,0xd3
  4101bf:	inc    eax
  4101c0:	or     BYTE PTR [edx+esi*8+0x1b],bh
  4101c4:	(bad)
  4101c7:	out    dx,al
  4101c8:	mov    ds,WORD PTR [ecx]
  4101ca:	adc    bl,BYTE PTR [esi-0x54bb55ec]
  4101d0:	jae    0x41017a
  4101d2:	jecxz  0x410180
  4101d4:	(bad)  
  4101d5:	adc    esp,DWORD PTR [eax]
  4101d7:	jmp    0x860e21cb
  4101dc:	jns    0x4101fa
  4101de:	inc    eax
  4101df:	aaa    
  4101e0:	(bad)  
  4101e1:	in     al,dx
  4101e2:	and    ch,ah
  4101e4:	add    al,0x2d
  4101e6:	pop    esp
  4101e7:	sub    eax,0x1e3c4be7
  4101ec:	cmp    esp,DWORD PTR [ecx]
  4101ee:	mov    al,0x11
  4101f0:	adc    ch,cl
  4101f2:	or     BYTE PTR [eax],0x92
  4101f5:	pop    ds
  4101f6:	out    0xdf,al
  4101f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f9:	fs (bad) 
  4101fb:	sub    ecx,DWORD PTR [eax+0x7d]
  4101fe:	sub    bl,BYTE PTR [ebx]
  410200:	pusha  
  410201:	mov    dl,0x7d
  410203:	cmp    al,0xf5
  410205:	cmp    al,0x12
  410207:	push   edi
  410208:	dec    eax
  410209:	sub    eax,0xe9e92b0d
  41020e:	sbb    edx,0xffffffe2
  410211:	mov    esi,DWORD PTR [ebx+0x38]
  410214:	out    dx,eax
  410215:	sbb    ebp,DWORD PTR [edx-0x6848a2d7]
  41021b:	dec    ebp
  41021c:	jg     0x4101cd
  41021e:	cmp    BYTE PTR [ebx],cl
  410220:	cmp    DWORD PTR [ecx],eax
  410222:	dec    ebp
  410224:	adc    al,bh
  410226:	stos   DWORD PTR es:[edi],eax
  410227:	sbb    DWORD PTR [edi+ebp*4],0xfffffffa
  41022b:	call   0x29fb6e8f
  410230:	push   0x2f
  410232:	push   ds
  410233:	fdiv   st(5),st
  410235:	(bad)  
  410236:	jo     0x41027b
  410238:	sbb    edx,DWORD PTR [edx+0x2ec4e5ae]
  41023e:	arpl   WORD PTR [ecx],ax
  410240:	pop    ss
  410241:	mov    dl,0xe5
  410243:	cmc    
  410244:	ja     0x410251
  410246:	push   0xf0eb0ebe
  41024b:	and    eax,0x380097d1
  410250:	shl    DWORD PTR [ebp-0x2e],cl
  410253:	mov    es,ecx
  410255:	xor    eax,DWORD PTR [di-0x50]
  410259:	test   al,0x61
  41025b:	hlt    
  41025c:	mov    ah,0x3
  41025e:	cmp    DWORD PTR [ebx+0x3],edx
  410261:	jb     0x41025a
  410263:	jnp    0x41027d
  410265:	mov    bh,0xb5
  410267:	sbb    al,0xbe
  410269:	add    DWORD PTR [edi-0x7a],0x95823138
  410270:	inc    esp
  410271:	cmp    ecx,DWORD PTR [eax+ebp*8+0x7d8a7f89]
  410278:	das    
  410279:	sbb    ebx,DWORD PTR [edx+0x5b889dbd]
  41027f:	cmp    bl,BYTE PTR [edi+0x2a]
  410282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410283:	hlt    
  410284:	or     DWORD PTR [esi+0x9],esi
  410287:	in     al,dx
  410288:	and    eax,DWORD PTR [ebp+ebp*1-0x71]
  41028c:	sub    cl,BYTE PTR [edx-0x19cbdf67]
  410292:	inc    ecx
  410293:	cmp    ah,BYTE PTR [ecx+0x41a3c3a7]
  410299:	je     0x4102ef
  41029b:	loop   0x41027a
  41029d:	mov    bl,0x12
  41029f:	or     eax,0x7790366e
  4102a4:	call   0xa966:0xc88d6895
  4102ab:	xor    bl,ah
  4102ad:	push   ebp
  4102ae:	sub    al,0xc0
  4102b0:	xchg   edi,eax
  4102b1:	(bad)  
  4102b2:	and    al,BYTE PTR [edx-0x28]
  4102b5:	stos   BYTE PTR es:[edi],al
  4102b6:	pop    edi
  4102b7:	or     BYTE PTR [edi-0x3f],bh
  4102ba:	rcr    edi,cl
  4102bc:	mov    eax,ds:0x4f433597
  4102c1:	cmp    eax,0xe374c730
  4102c6:	or     BYTE PTR [edi-0x783fe2f8],dh
  4102cc:	jo     0x4102d2
  4102ce:	mov    al,0x46
  4102d0:	cmp    ebx,ebx
  4102d2:	mov    bh,0x45
  4102d4:	loop   0x41029c
  4102d6:	mov    edi,0x73e649e1
  4102db:	jmp    FWORD PTR [edi+ecx*1-0x71]
  4102df:	xor    al,0x3c
  4102e1:	in     eax,0x4f
  4102e3:	xchg   dh,ch
  4102e5:	outs   dx,DWORD PTR ds:[esi]
  4102e6:	jo     0x410282
  4102e8:	and    cl,BYTE PTR [esi]
  4102ea:	enter  0x976c,0xec
  4102ee:	pop    edx
  4102ef:	jge    0x4102aa
  4102f1:	mov    eax,ds:0xef56761c
  4102f6:	popa   
  4102f7:	dec    ecx
  4102f8:	mov    ebp,0xfe1d4f3c
  4102fd:	imul   eax,ecx,0x42
  410300:	addr16 mov dh,0x89
  410303:	jnp    0x410303
  410305:	and    ebp,DWORD PTR [eax-0x6390b306]
  41030b:	jmp    0xd2:0x417d1ccf
  410312:	sbb    al,0x95
  410314:	fwait
  410315:	sbb    eax,0xe1c67b4a
  41031a:	mov    dh,0x20
  41031c:	fstp   QWORD PTR [ecx]
  41031e:	ret    
  41031f:	mov    ebp,0xa256e9ff
  410324:	ins    DWORD PTR es:[edi],dx
  410325:	jne    0x410310
  410327:	imul   BYTE PTR [edx+0x7c4fc34a]
  41032d:	into   
  41032e:	add    BYTE PTR [ecx+0x73],ah
  410331:	repnz sbb eax,eax
  410334:	rcl    BYTE PTR [ebx+0x68],cl
  410337:	inc    ecx
  410338:	pop    ss
  410339:	loope  0x41035e
  41033b:	sti    
  41033c:	dec    edi
  41033d:	ins    BYTE PTR es:[edi],dx
  41033e:	leave  
  41033f:	ret    
  410340:	sar    bh,1
  410342:	mov    al,cl
  410344:	sbb    dl,bh
  410346:	xchg   DWORD PTR [eax-0x6751a48b],esp
  41034c:	and    ebp,esp
  41034e:	jmp    0xf4a2:0x3f4884c0
  410355:	push   esi
  410356:	mov    DWORD PTR [esi-0x17],esi
  410359:	cwde   
  41035a:	clc    
  41035b:	and    al,0xf9
  41035d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41035e:	inc    ebx
  41035f:	inc    edx
  410360:	xor    bh,BYTE PTR [edi+0x6da144a6]
  410366:	jge    0x410326
  410368:	mov    eax,ds:0x53964210
  41036d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41036e:	adc    BYTE PTR [ebp+ebx*2+0x29272e2f],ah
  410375:	jecxz  0x41036c
  410377:	jb     0x41038b
  410379:	jae    0x410337
  41037b:	xchg   BYTE PTR [ebp+0x39],ah
  41037e:	pop    ebx
  41037f:	retf   0x71ec
  410382:	push   ecx
  410383:	scas   eax,DWORD PTR es:[edi]
  410384:	ja     0x410390
  410386:	cmp    BYTE PTR [edi],0x29
  410389:	pushf  
  41038a:	in     eax,0xd6
  41038c:	dec    ebx
  41038d:	push   eax
  41038e:	sbb    ch,BYTE PTR [edi+0x59]
  410391:	push   ds
  410392:	shl    bl,0x6
  410395:	xchg   ecx,eax
  410396:	fs je  0x410362
  410399:	push   esi
  41039a:	sub    esi,esi
  41039c:	push   eax
  41039d:	fs test eax,0xc71d5195
  4103a3:	jecxz  0x410340
  4103a5:	adc    ah,BYTE PTR [edx-0x33]
  4103a8:	retf   0x8e10
  4103ab:	enter  0xdbce,0xb4
  4103af:	shr    DWORD PTR [edx+edi*4],1
  4103b2:	arpl   WORD PTR [edx-0x71],cx
  4103b5:	adc    bl,BYTE PTR [edi]
  4103b7:	mov    eax,ds:0xee190d33
  4103bc:	jnp    0x41037e
  4103be:	in     eax,0xb4
  4103c0:	fnstcw WORD PTR [ebx+0x20ac9db7]
  4103c6:	xchg   ebp,eax
  4103c7:	sti    
  4103c8:	lods   al,BYTE PTR ds:[esi]
  4103c9:	adc    BYTE PTR [edi+0x4],bl
  4103cc:	sub    BYTE PTR [edi+0x5b2de74f],dh
  4103d2:	stc    
  4103d3:	mov    bh,0xfa
  4103d5:	cmp    al,0xcf
  4103d7:	xchg   BYTE PTR [ebp+eax*8+0x22],ah
  4103db:	and    DWORD PTR [eax],esp
  4103dd:	rcr    dh,0x12
  4103e0:	xchg   ebp,eax
  4103e1:	or     al,0x33
  4103e3:	shl    BYTE PTR [edi-0x36],cl
  4103e6:	sahf   
  4103e7:	mov    cl,BYTE PTR [ebx]
  4103e9:	push   eax
  4103ea:	pusha  
  4103eb:	adc    bh,BYTE PTR [ecx]
  4103ed:	cwde   
  4103ee:	sub    al,0x4
  4103f0:	jno    0x41042d
  4103f2:	mov    ds:0x6a82c1d2,al
  4103f7:	jmp    0x410446
  4103f9:	xchg   DWORD PTR [edx-0x6c],eax
  4103fc:	or     al,0x96
  4103fe:	mov    ebx,0x15ba86d
  410403:	icebp  
  410404:	scas   al,BYTE PTR es:[edi]
  410405:	in     al,0xb
  410407:	xor    cl,BYTE PTR [ebx]
  410409:	cmp    cl,dh
  41040b:	mov    edx,0x6809192e
  410410:	pushf  
  410411:	or     esi,DWORD PTR [ebp+0x67]
  410414:	xor    al,0x19
  410416:	push   ds
  410417:	adc    edx,DWORD PTR [ebx+0x46]
  41041a:	or     al,0x5d
  41041c:	push   ecx
  41041d:	jno    0x4103c0
  41041f:	das    
  410420:	or     eax,0xdf870698
  410425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410426:	or     BYTE PTR [edi+edi*2],cl
  410429:	bound  ecx,QWORD PTR [ebx]
  41042b:	pop    ecx
  41042c:	pushf  
  41042d:	retf   
  41042e:	mov    dh,0xbf
  410430:	cli    
  410431:	pusha  
  410432:	jno    0x410450
  410434:	fs (bad) 
  410436:	ja     0x4103c5
  410438:	popf   
  410439:	fwait
  41043a:	inc    edi
  41043b:	xor    eax,0xca08bfd4
  410440:	jle    0x4103f9
  410442:	jne    0x4104b6
  410444:	pushf  
  410445:	add    DWORD PTR [edi+0x7a245fe5],ecx
  41044b:	sub    bh,bh
  41044d:	jbe    0x410446
  41044f:	pop    esp
  410450:	stc    
  410451:	int3   
  410452:	fld    DWORD PTR [esi+edx*1-0x48]
  410456:	dec    eax
  410457:	(bad)  
  410458:	fdivrp st(1),st
  41045a:	jle    0x4104cb
  41045c:	fwait
  41045d:	aam    0x9
  41045f:	scas   al,BYTE PTR es:[edi]
  410460:	and    eax,0x16de59eb
  410465:	mov    esp,0x94b02c52
  41046a:	std    
  41046b:	mov    dh,bh
  41046d:	add    al,0xcd
  41046f:	loope  0x41045e
  410471:	xor    eax,0x934266dd
  410476:	mov    dh,0xde
  410478:	mov    fs,WORD PTR [ecx-0x64]
  41047b:	or     eax,0xd79b79f8
  410480:	fstp   TBYTE PTR [esi]
  410482:	nop
  410483:	xchg   ebp,eax
  410484:	xchg   BYTE PTR [esi+0x70dc6840],cl
  41048a:	stc    
  41048b:	xchg   edi,eax
  41048c:	mov    ah,0x73
  41048e:	pop    edx
  41048f:	xchg   esp,eax
  410490:	dec    BYTE PTR [esi+0x60a02d8f]
  410496:	(bad)  
  410498:	xor    DWORD PTR ds:0xd7e07844,0x33
  41049f:	pop    esp
  4104a0:	sbb    esi,DWORD PTR [ebp+eax*1-0x1e]
  4104a4:	neg    BYTE PTR [ebp+0x37]
  4104a7:	ss je  0x41044f
  4104aa:	(bad)  
  4104ab:	dec    edi
  4104ac:	sbb    esi,esp
  4104ae:	sub    bl,BYTE PTR [edx-0x29]
  4104b1:	ret    
  4104b2:	push   eax
  4104b3:	inc    esi
  4104b4:	mov    eax,ds:0x2d8435ff
  4104b9:	or     eax,0x705b6c04
  4104be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104bf:	add    BYTE PTR [esi+0x4dff1a86],bl
  4104c5:	mov    ebx,0x3ed1a9ce
  4104ca:	add    BYTE PTR [ecx+0x3],ch
  4104cd:	vpsllq xmm4,xmm2,XMMWORD PTR [edx-0x13]
  4104d2:	push   ecx
  4104d3:	xor    eax,DWORD PTR [ebp-0x2d]
  4104d6:	inc    ecx
  4104d7:	push   esp
  4104d8:	xchg   ecx,eax
  4104d9:	mov    gs,eax
  4104db:	xor    BYTE PTR [ecx+0x515a4de3],dl
  4104e1:	out    dx,eax
  4104e2:	xor    cl,BYTE PTR [ecx]
  4104e4:	xor    eax,0x3a7e848
  4104e9:	jmp    0x41054d
  4104eb:	jne    0x4104d6
  4104ed:	jmp    0xbcfb:0xb5f16385
  4104f4:	aam    0xe3
  4104f6:	push   ecx
  4104f7:	cs dec edi
  4104f9:	ret    
  4104fa:	adc    BYTE PTR [ebx],dl
  4104fc:	pop    edx
  4104fd:	pop    ds
  4104fe:	daa    
  4104ff:	jmp    0x41051b
  410501:	loop   0x41048d
  410503:	ja     0x410526
  410505:	repz scas al,BYTE PTR es:[edi]
  410507:	and    al,0x64
  410509:	jl     0x4104f4
  41050b:	fidiv  DWORD PTR [ecx]
  41050d:	inc    ebx
  41050e:	pop    esp
  41050f:	rol    DWORD PTR [ebp+0x473c5afa],0xc2
  410516:	popf   
  410517:	sbb    eax,DWORD PTR [ebx+0x38]
  41051a:	sub    cl,BYTE PTR [eax-0x13]
  41051d:	mov    eax,ds:0x2e69a013
  410522:	sub    eax,0xefb9d21e
  410527:	js     0x410572
  410529:	addr16 add bh,dh
  41052c:	push   ds
  41052d:	xchg   esp,eax
  41052e:	sar    DWORD PTR [ebx+eiz*1],1
  410531:	adc    bl,BYTE PTR [ebp-0x3f]
  410534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410535:	dec    esi
  410536:	add    bh,0x9f
  410539:	inc    ebx
  41053b:	in     eax,0xeb
  41053d:	in     eax,dx
  41053e:	inc    ebp
  41053f:	mov    dl,0x99
  410541:	in     al,0x32
  410543:	sbb    eax,0xecaa2382
  410548:	pop    ebx
  410549:	in     eax,0xad
  41054b:	ror    DWORD PTR [ebp+0x2403a66b],0x35
  410552:	cmp    eax,0xaa4ab669
  410557:	pusha  
  410558:	pop    esi
  410559:	mov    BYTE PTR [esi],cl
  41055b:	test   BYTE PTR [ebp+0xb],ch
  41055e:	call   0x4221f13e
  410563:	xchg   ebx,eax
  410564:	and    edi,ebp
  410566:	or     DWORD PTR ds:0x72b92966,ebx
  41056c:	popf   
  41056d:	aas    
  41056e:	jno    0x4105ca
  410570:	cmp    edi,DWORD PTR [edi]
  410572:	jl     0x4105d0
  410574:	mov    al,0x80
  410576:	call   0x39396f25
  41057b:	sub    al,0x2d
  41057d:	fmul   DWORD PTR [edi+0x5720c279]
  410583:	xchg   esp,eax
  410584:	cdq    
  410585:	(bad)  
  410586:	or     al,0xeb
  410588:	jmp    0x4105d9
  41058a:	jbe    0x41057f
  41058c:	inc    edx
  41058d:	and    al,0x91
  41058f:	lahf   
  410590:	jnp    0x410522
  410592:	gs inc ecx
  410594:	sbb    ebp,DWORD PTR [ebp-0x3282ffc3]
  41059a:	adc    dl,0x7
  41059d:	cmc    
  41059e:	fpatan 
  4105a0:	iret   
  4105a1:	ret    
  4105a2:	xchg   ebp,eax
  4105a3:	mov    ch,0xad
  4105a5:	test   al,0xd3
  4105a7:	or     eax,0xeea928f
  4105ac:	mov    bh,0x5e
  4105ae:	iret   
  4105af:	aam    0x49
  4105b1:	adc    esp,DWORD PTR [edx]
  4105b3:	xor    dl,ch
  4105b5:	sbb    DWORD PTR ss:[edx+ebp*4],ebx
  4105b9:	ins    BYTE PTR es:[edi],dx
  4105ba:	stos   BYTE PTR es:[edi],al
  4105bb:	push   0x183933c4
  4105c0:	mov    esp,0xb4688599
  4105c5:	aas    
  4105c6:	mov    eax,ds:0xf039e09
  4105cb:	mov    esi,0xbdd5a4d5
  4105d0:	and    DWORD PTR [ebx+0xd],edi
  4105d3:	(bad)  
  4105d4:	jmp    0x74bd:0xeae677e6
  4105db:	fimul  DWORD PTR [ecx-0x13]
  4105de:	fs inc eax
  4105e0:	les    ebx,FWORD PTR [esi]
  4105e2:	not    eax
  4105e4:	ret    0x34f8
  4105e7:	enter  0xd861,0xbb
  4105eb:	loopne 0x41057a
  4105ed:	scas   al,BYTE PTR es:[edi]
  4105ee:	sub    DWORD PTR [edx],ebp
  4105f0:	pop    es
  4105f1:	add    al,0xac
  4105f3:	mov    edx,0x65d4de24
  4105f8:	xchg   edi,eax
  4105f9:	call   0xed4ac63e
  4105fe:	retf   0xa500
  410601:	test   BYTE PTR [bx+si+0x1a],0xe4
  410606:	push   ds
  410607:	je     0x410629
  410609:	sbb    al,0xae
  41060b:	or     DWORD PTR [ebx],esi
  41060d:	lods   al,BYTE PTR ds:[esi]
  41060e:	lods   eax,DWORD PTR ds:[esi]
  41060f:	mov    bh,0x1c
  410611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410612:	cmp    esp,esi
  410614:	xchg   esp,eax
  410615:	mov    BYTE PTR [ebp+0x21b42ee6],dl
  41061b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41061c:	mov    esp,0x33f23adc
  410621:	push   ds
  410622:	outs   dx,DWORD PTR ds:[esi]
  410623:	out    0x4d,al
  410625:	enter  0x12ae,0x33
  410629:	or     eax,0xdb54e625
  41062e:	pop    ss
  41062f:	arpl   WORD PTR [eax+0x64f14464],di
  410635:	hlt    
  410636:	retf   
  410637:	push   0xb
  410639:	inc    edi
  41063a:	push   ds
  41063b:	inc    ecx
  41063c:	mov    al,ds:0x1625e45a
  410641:	xchg   esp,eax
  410642:	mov    ecx,ebx
  410644:	lods   eax,DWORD PTR ds:[esi]
  410645:	pop    ebx
  410646:	shl    bh,1
  410648:	mov    ds:0xbe9fae26,al
  41064d:	enter  0xbce9,0x5f
  410651:	imul   ebx,DWORD PTR [ebp-0x57],0x25
  410655:	(bad)  ds:0x8b4e9554
  41065b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065c:	leave  
  41065d:	fidivr WORD PTR [edi-0x73856c92]
  410663:	or     al,0x1b
  410665:	loop   0x4106cf
  410667:	and    BYTE PTR [edi-0x3f],ah
  41066a:	popf   
  41066b:	into   
  41066c:	lds    esi,FWORD PTR [edx-0x8545d93]
  410672:	add    edi,DWORD PTR [edi+0x68]
  410675:	and    ecx,eax
  410677:	add    al,0x78
  410679:	mov    ecx,fs
  41067b:	push   esp
  41067c:	push   es
  41067d:	repz ret 0x6f97
  410681:	fldcw  WORD PTR [esi-0x23]
  410684:	retf   0x5903
  410687:	mov    edi,0x8581e331
  41068c:	and    al,0x97
  41068e:	dec    esp
  41068f:	in     eax,0xa5
  410691:	jno    0x41065d
  410693:	(bad)  
  410694:	sub    cl,BYTE PTR [edi-0x2dc3e623]
  41069a:	mov    ecx,0x85fa7bb9
  41069f:	in     eax,0x6
  4106a1:	jp     0x41062b
  4106a3:	pop    edi
  4106a4:	jmp    0xae0:0xbd4b6471
  4106ab:	pusha  
  4106ac:	or     cl,ah
  4106ae:	mov    dl,0xab
  4106b0:	mov    edx,0xdd2dd95f
  4106b5:	sub    al,0xe8
  4106b7:	mov    ebp,0x475c18b0
  4106bc:	mov    ds:0x428b744,eax
  4106c1:	repz adc DWORD PTR [ebp-0x48fb6ee0],edx
  4106c8:	iret   
  4106c9:	cli    
  4106ca:	pcmpeqd mm3,QWORD PTR [ebx+esi*8]
  4106ce:	test   BYTE PTR [esi+0x5c7463e8],al
  4106d4:	mov    eax,0x6a1f61c0
  4106d9:	je     0x41069e
  4106db:	test   BYTE PTR [ebx+0x41b76c39],dh
  4106e1:	mov    eax,ds:0xe47d66e6
  4106e6:	das    
  4106e7:	in     al,0xf9
  4106e9:	shl    BYTE PTR [ebp-0x2d],0x38
  4106ed:	and    al,0x65
  4106ef:	addr16 clc 
  4106f1:	lahf   
  4106f2:	inc    ecx
  4106f3:	into   
  4106f4:	dec    edx
  4106f5:	mov    esp,DWORD PTR [edx*8+0x4ad5360b]
  4106fc:	jge    0x41069a
  4106fe:	dec    edi
  4106ff:	or     BYTE PTR [ebx+0x4a8a9b55],dh
  410705:	dec    esp
  410706:	or     ecx,DWORD PTR [edi]
  410708:	test   al,0xa4
  41070a:	push   edi
  41070b:	sbb    DWORD PTR [ecx],edx
  41070d:	fadd   DWORD PTR [ebp+0x68]
  410710:	fnstenv [ebx-0x5a11119e]
  410716:	rol    edi,1
  410718:	push   edx
  410719:	xchg   BYTE PTR [ecx+0x14],dh
  41071c:	in     al,0x49
  41071e:	jns    0x4106a1
  410720:	out    0xdb,eax
  410722:	dec    esp
  410723:	lock push ecx
  410725:	or     eax,0xd9b90bf1
  41072a:	imul   edx,DWORD PTR [esp+ebp*2-0x3c],0x42bfbe8b
  410732:	retf   0x9ff8
  410735:	mov    dl,0x7e
  410737:	sti    
  410738:	push   esi
  410739:	mov    ds:0x305e7cd7,eax
  41073e:	and    BYTE PTR [ecx-0x23964d0a],bh
  410744:	cmp    BYTE PTR [eax+0x652e842b],cl
  41074a:	inc    ecx
  41074b:	fucomi st,st(0)
  41074d:	push   cs
  41074e:	pop    edx
  41074f:	mov    cs:0x7d696dfe,al
  410755:	mul    ch
  410757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410758:	add    eax,DWORD PTR [ebp+ebp*1-0x61]
  41075c:	mov    eax,0x2b1e39ee
  410761:	nop
  410762:	mov    ebx,0xc03f4164
  410767:	cmp    ecx,DWORD PTR [ebx-0xac632f2]
  41076d:	pop    ss
  41076e:	cli    
  41076f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410770:	sub    BYTE PTR [esi-0x64826a40],bl
  410776:	sub    BYTE PTR [edx-0x225b5964],ch
  41077c:	data16 fstp DWORD PTR [edi]
  41077f:	jge    0x410705
  410781:	and    BYTE PTR [esi+eax*2+0x21060dfd],bl
  410788:	(bad)  
  410789:	cmp    BYTE PTR [edi+edx*1],bh
  41078c:	jmp    DWORD PTR [eax-0x45af4aaf]
  410792:	xchg   dh,bh
  410794:	or     eax,0x639ff393
  410799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41079a:	bound  eax,QWORD PTR [eax-0x58]
  41079d:	retf   0x4bcf
  4107a0:	pop    ss
  4107a1:	test   eax,0x8398ff1d
  4107a6:	retf   0x36cd
  4107a9:	sbb    ebx,DWORD PTR [ecx-0x4898036]
  4107af:	loopne 0x410801
  4107b1:	ret    0x26ef
  4107b4:	jne    0x4107ed
  4107b6:	lock pop edx
  4107b8:	xor    edi,edx
  4107ba:	ins    DWORD PTR es:[edi],dx
  4107bb:	mov    ds:0x881ef5a3,al
  4107c0:	fwait
  4107c1:	xor    BYTE PTR ds:0x42dad9a6,bl
  4107c7:	sbb    DWORD PTR [eax+0x1eef34c5],ebp
  4107cd:	push   edx
  4107ce:	aam    0x1b
  4107d0:	xchg   ebx,eax
  4107d1:	ficom  WORD PTR [ebx+0x6a]
  4107d4:	mov    bl,0xe6
  4107d6:	xor    ebx,DWORD PTR [eax-0x26]
  4107d9:	pop    ebx
  4107da:	inc    eax
  4107db:	outs   dx,BYTE PTR ds:[esi]
  4107dc:	pop    ecx
  4107dd:	or     esi,DWORD PTR [ebx+0x12]
  4107e0:	fstp   QWORD PTR [ebp+0x14a541df]
  4107e6:	and    cl,BYTE PTR [edx+esi*8+0x4a]
  4107ea:	mov    edi,0xe155e689
  4107ef:	fild   DWORD PTR [edx-0x395e9d56]
  4107f5:	das    
  4107f6:	mov    ecx,0x8f219032
  4107fb:	cmp    eax,0x92c079f
  410800:	lods   eax,DWORD PTR ds:[esi]
  410801:	pop    ebp
  410802:	outs   dx,DWORD PTR ds:[esi]
  410803:	outs   dx,BYTE PTR ds:[esi]
  410804:	adc    ah,BYTE PTR [eax-0x10]
  410807:	inc    eax
  410808:	xchg   ebp,eax
  410809:	scas   al,BYTE PTR es:[edi]
  41080a:	and    DWORD PTR [eax],esi
  41080c:	mov    dh,al
  41080e:	push   ebx
  41080f:	mov    bl,0xb0
  410811:	popa   
  410812:	xchg   esp,eax
  410813:	imul   ecx,DWORD PTR [esi-0x60],0x76
  410817:	add    edx,DWORD PTR [edx-0xc]
  41081a:	or     DWORD PTR [ebp+esi*2+0x7544e7c3],ecx
  410821:	lea    ecx,[edi+0x530342f5]
  410827:	out    0xb0,eax
  410829:	push   esi
  41082a:	les    edi,FWORD PTR [esi]
  41082c:	jae    0x41080b
  41082e:	sbb    eax,0xb041090e
  410833:	data16 fistp DWORD PTR [ebx-0x49]
  410837:	nop
  410838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410839:	sbb    ch,BYTE PTR [ecx+0x59]
  41083c:	ja     0x4108b8
  41083e:	(bad)  
  41083f:	mov    eax,ds:0x270c9ec4
  410844:	arpl   bp,bx
  410846:	les    ebx,FWORD PTR [ebx-0x661960bc]
  41084c:	push   0x545a7ef1
  410851:	nop
  410852:	add    al,0xca
  410854:	scas   al,BYTE PTR es:[edi]
  410855:	mov    esi,0xea8ebf10
  41085a:	jmp    0x98641b3f
  41085f:	leave  
  410860:	xor    esi,0x836e8a63
  410866:	add    BYTE PTR [ebx+0x5cd15e25],ch
  41086c:	dec    ebx
  41086d:	fwait
  41086e:	call   0xb73426
  410873:	lea    si,[edi-0x19]
  410877:	fwait
  410878:	push   ecx
  410879:	jmp    0x29d2:0x2f2082b3
  410880:	adc    al,0x4a
  410883:	sti    
  410884:	sbb    BYTE PTR [ebx-0x18],cl
  410887:	out    dx,eax
  410888:	(bad)  
  410889:	inc    edi
  41088a:	add    bl,BYTE PTR [edx]
  41088c:	xor    edi,DWORD PTR [esi+esi*2]
  41088f:	dec    edi
  410890:	lods   eax,DWORD PTR ds:[esi]
  410891:	div    BYTE PTR [edx-0x80]
  410894:	or     BYTE PTR [eax+0x112d16b],al
  41089a:	mov    ebx,0x37cba25b
  41089f:	mov    bh,0xdc
  4108a1:	mov    ebx,DWORD PTR [ebp-0x35]
  4108a4:	dec    esi
  4108a5:	gs stc 
  4108a7:	mov    eax,0xd7c636b2
  4108ac:	inc    ebp
  4108ad:	outs   dx,DWORD PTR ds:[esi]
  4108ae:	dec    ebp
  4108af:	cld    
  4108b0:	les    ecx,FWORD PTR [ecx-0x17]
  4108b3:	xor    dh,BYTE PTR [esi+0x729c3279]
  4108b9:	cld    
  4108ba:	out    dx,eax
  4108bb:	aad    0xea
  4108bd:	hlt    
  4108be:	(bad)
  4108c1:	mov    ch,0x5a
  4108c3:	das    
  4108c4:	into   
  4108c5:	ins    BYTE PTR es:[edi],dx
  4108c6:	push   0xc1c6698d
  4108cb:	fs pop ebx
  4108cd:	bound  ebp,QWORD PTR ds:0xbf5c9667
  4108d3:	mov    eax,0x30701cc1
  4108d8:	or     BYTE PTR [edx-0x13381f14],bl
  4108de:	and    DWORD PTR [ecx+edi*4-0x717d3708],0xffffff9b
  4108e6:	pop    esp
  4108e7:	mov    esi,ebp
  4108e9:	sbb    BYTE PTR [ecx+0x78],al
  4108ec:	xor    al,0x2
  4108ee:	rdpmc  
  4108f0:	imul   edx,DWORD PTR [esp+edx*8],0xdc71f76e
  4108f7:	cmp    eax,0xc5ee9cc2
  4108fc:	rol    DWORD PTR [esi-0x3c329c1],1
  410902:	repnz adc DWORD PTR [edx-0xe],ebp
  410906:	ror    BYTE PTR [esi],0xb3
  410909:	popf   
  41090a:	adc    al,0x2
  41090c:	mov    al,0xbd
  41090e:	ret    
  41090f:	repnz cmp al,0x36
  410912:	and    BYTE PTR [esi],bh
  410914:	add    DWORD PTR [edx+ebx*1-0x80],0xec4ba852
  41091c:	addr16 dec esi
  41091e:	adc    BYTE PTR [esp+eiz*4],ch
  410921:	(bad)  
  410922:	in     al,dx
  410923:	arpl   WORD PTR [ecx],ax
  410925:	pop    ds
  410926:	jne    0x41091f
  410928:	sbb    ebp,ebp
  41092a:	mov    ebp,0xeede98de
  41092f:	test   al,0x84
  410931:	xchg   ecx,eax
  410932:	ret    0x9dfa
  410935:	sbb    eax,0xf874dcfa
  41093a:	jae    0x410910
  41093c:	mov    dh,0x35
  41093e:	outs   dx,DWORD PTR ds:[esi]
  41093f:	cmp    al,0x52
  410941:	jecxz  0x4108e1
  410943:	pop    esp
  410944:	pop    esi
  410945:	int3   
  410946:	fld    QWORD PTR ds:0x3d1d4751
  41094c:	mov    eax,ds:0xf7b1ad90
  410951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410952:	lods   eax,DWORD PTR ds:[esi]
  410953:	xlat   BYTE PTR ds:[ebx]
  410954:	loop   0x4108f2
  410956:	lods   al,BYTE PTR ds:[esi]
  410957:	xchg   ecx,eax
  410958:	xchg   ebx,eax
  410959:	dec    ecx
  41095a:	mov    ah,BYTE PTR [ecx-0x64]
  41095d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41095e:	cmp    ch,BYTE PTR [esi+0xcd12996]
  410964:	pop    esp
  410965:	or     al,0x5b
  410967:	addr16 sahf 
  410969:	pop    es
  41096a:	fcomp  st(4)
  41096c:	sbb    eax,0x8bc0e6ad
  410971:	aad    0xea
  410973:	das    
  410974:	xchg   ebp,eax
  410975:	lahf   
  410976:	test   ecx,edx
  410978:	mov    esp,0x8dddf0e4
  41097d:	add    eax,0x7ca81f9f
  410982:	hlt    
  410983:	into   
  410984:	dec    ebp
  410985:	popf   
  410986:	js     0x410927
  410988:	dec    esp
  410989:	push   esi
  41098a:	ret    0x906d
  41098d:	sub    al,BYTE PTR [ebx]
  41098f:	xor    edx,eax
  410991:	and    eax,ecx
  410993:	popa   
  410994:	pop    ecx
  410995:	rcl    BYTE PTR cs:[edx+0x4b],0x5e
  41099a:	fwait
  41099b:	add    ecx,DWORD PTR [ebx+0x34]
  41099e:	call   0x638b:0xcc47b7e6
  4109a5:	aaa    
  4109a6:	and    BYTE PTR [esp+ebp*8],dh
  4109a9:	jecxz  0x4109ad
  4109ab:	jg     0x4109c6
  4109ad:	outs   dx,BYTE PTR ds:[esi]
  4109ae:	mov    eax,ds:0x28fe94a5
  4109b3:	stos   DWORD PTR es:[edi],eax
  4109b4:	rcl    BYTE PTR [esi+edx*2-0x1b],cl
  4109b8:	jno    0x4109bf
  4109ba:	push   esi
  4109bb:	test   DWORD PTR [edx],edx
  4109bd:	daa    
  4109be:	call   0x996e0373
  4109c3:	pop    ds
  4109c4:	push   ss
  4109c5:	xchg   edx,eax
  4109c6:	mov    ah,0xdc
  4109c8:	jmp    0xfacd:0x94dbdfa5
  4109cf:	fcos   
  4109d1:	lods   eax,DWORD PTR ds:[esi]
  4109d2:	fs xor al,0x19
  4109d5:	(bad)  
  4109d6:	in     eax,0xc9
  4109d8:	push   ds
  4109d9:	jnp    0x410a4a
  4109db:	call   0x97e:0x16974b54
  4109e2:	or     BYTE PTR [edx-0x67],dh
  4109e5:	inc    ecx
  4109e6:	test   bh,bl
  4109e8:	pop    ebp
  4109e9:	iret   
  4109ea:	xchg   ecx,eax
  4109eb:	mov    al,0x44
  4109ed:	fsub   st(5),st
  4109ef:	sar    BYTE PTR [esi+0x7639ada7],cl
  4109f5:	ror    DWORD PTR [ecx],0xa8
  4109f8:	les    edx,FWORD PTR gs:[ebx+0x37]
  4109fc:	jo     0x410a4f
  4109fe:	gs or  bh,ah
  410a01:	neg    BYTE PTR [eax+0x2d0ce551]
  410a07:	adc    BYTE PTR [edx],bh
  410a09:	test   BYTE PTR [esi+esi*2],al
  410a0c:	out    0x4,al
  410a0e:	push   ebp
  410a0f:	push   cs
  410a10:	shl    DWORD PTR [edi+0x12],0x4a
  410a14:	das    
  410a15:	cmc    
  410a16:	ffreep st(3)
  410a18:	fucomp st(0)
  410a1a:	mov    cl,BYTE PTR [edi]
  410a1c:	inc    ebx
  410a1d:	adc    edx,DWORD PTR [eax]
  410a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a20:	ins    DWORD PTR es:[edi],dx
  410a21:	mov    eax,ds:0x1a7883ca
  410a26:	clc    
  410a27:	mov    edi,0x4203d0cf
  410a2c:	iret   
  410a2d:	sub    BYTE PTR [esi+0x4d120a60],ah
  410a33:	inc    esp
  410a34:	sbb    DWORD PTR [edx-0x73],esp
  410a37:	xor    BYTE PTR [ebx],cl
  410a39:	(bad)  
  410a3a:	xor    al,BYTE PTR [esi+0x76]
  410a3d:	push   eax
  410a3e:	jmp    0xfabce104
  410a43:	mov    edi,0xdc891230
  410a48:	jno    0x410a5c
  410a4a:	outs   dx,BYTE PTR ds:[esi]
  410a4b:	(bad)  
  410a4c:	stos   BYTE PTR es:[edi],al
  410a4d:	sub    ch,BYTE PTR [edi+ecx*2-0x288c45a7]
  410a54:	dec    eax
  410a55:	pminsw mm1,QWORD PTR [esi]
  410a58:	jmp    0xb57a:0xbc40af13
  410a5f:	pop    ebx
  410a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a61:	or     al,BYTE PTR [eax-0x6414d01a]
  410a67:	sub    BYTE PTR [edx-0xa],cl
  410a6a:	xchg   esi,eax
  410a6b:	pop    es
  410a6c:	pop    ds
  410a6d:	mov    ebx,0xb5d8a09c
  410a72:	daa    
  410a73:	fsubr  QWORD PTR [ebx+edi*2+0x16f1c3f]
  410a7a:	loope  0x410ad0
  410a7c:	mov    bh,0x4b
  410a7e:	pop    edi
  410a7f:	and    ebx,DWORD PTR [ebx+ecx*8+0x2d7c160c]
  410a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a87:	mov    ds,WORD PTR [eax]
  410a89:	cmp    eax,0xff88893f
  410a8e:	out    0x54,eax
  410a90:	cwde   
  410a91:	sub    al,0xe6
  410a93:	lods   eax,DWORD PTR ds:[esi]
  410a94:	jo     0x410ad7
  410a96:	xor    edi,DWORD PTR [ecx-0x17]
  410a99:	push   ebx
  410a9a:	fnstcw WORD PTR [edx+0x45]
  410a9d:	nop
  410a9e:	xchg   esp,eax
  410a9f:	push   ds
  410aa0:	push   esi
  410aa1:	xor    DWORD PTR ds:0xa69b8db,esi
  410aa7:	stc    
  410aa8:	daa    
  410aa9:	mov    ah,0xb3
  410aab:	pusha  
  410aac:	into   
  410aad:	jmp    0x264e:0xe1a54be7
  410ab4:	pop    edi
  410ab5:	out    0x42,eax
  410ab7:	adc    ebp,esi
  410ab9:	cmp    DWORD PTR [ebp-0x260ca637],edi
  410abf:	dec    esi
  410ac0:	mov    al,ds:0xa4a85644
  410ac5:	test   eax,0x51945cbe
  410aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410acb:	xchg   edx,eax
  410acc:	(bad)
  410ad0:	imul   DWORD PTR [ebp-0x6a1b281f]
  410ad6:	mov    dh,0x9e
  410ad8:	inc    edx
  410ad9:	push   es
  410ada:	xor    al,0xf3
  410adc:	add    eax,0xc2bc0aa3
  410ae1:	out    dx,eax
  410ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae3:	jae    0x410af7
  410ae5:	sbb    BYTE PTR [ecx-0x4f],dl
  410ae8:	cmc    
  410ae9:	test   BYTE PTR [edi+0x5a],0xbc
  410aed:	inc    edi
  410aee:	repz das 
  410af0:	in     al,dx
  410af1:	enter  0x9c80,0x3d
  410af5:	call   0xa077:0xd5b6490f
  410afc:	icebp  
  410afd:	call   0x61be:0x891ffcaf
  410b04:	inc    ebp
  410b05:	pop    esi
  410b06:	adc    DWORD PTR [eax],0x72
  410b09:	lods   eax,DWORD PTR ds:[esi]
  410b0a:	push   0xe6c50f9
  410b0f:	mov    esp,0x865bb749
  410b14:	icebp  
  410b15:	test   al,0x2e
  410b17:	jns    0x410b4b
  410b19:	nop
  410b1a:	fisubr WORD PTR [eax+0x2073c6b4]
  410b20:	mov    WORD PTR [ebp+ecx*4-0x71],ss
  410b24:	out    0xf,al
  410b26:	shr    BYTE PTR [esi+0x660edc9],1
  410b2c:	cmp    eax,esp
  410b2e:	fidivr DWORD PTR [ecx+0x66]
  410b31:	and    eax,0x7a480d42
  410b36:	test   al,0x5e
  410b38:	push   ebx
  410b39:	and    eax,0x14979705
  410b3e:	sub    DWORD PTR [esi],0x6106ff68
  410b44:	pop    edx
  410b45:	mov    DWORD PTR [esi-0x2c],ecx
  410b48:	pusha  
  410b49:	sbb    eax,0x1a4e802b
  410b4e:	lock jne 0x410b43
  410b51:	ret    
  410b52:	int3   
  410b53:	xor    DWORD PTR [esi-0x6230fc29],ebx
  410b59:	call   0xc93c5bdd
  410b5e:	and    eax,esp
  410b60:	sahf   
  410b61:	mov    ds:0xc112b59b,al
  410b66:	dec    eax
  410b67:	sbb    dh,BYTE PTR [ebp+0x71]
  410b6a:	addr16 cmp eax,0xd6160570
  410b70:	lods   al,BYTE PTR ds:[esi]
  410b71:	jp     0x410bf1
  410b73:	push   0xddd6b82b
  410b78:	pop    es
  410b79:	lods   eax,DWORD PTR ds:[esi]
  410b7a:	sbb    al,BYTE PTR [ecx+0x1ad08176]
  410b80:	mov    esp,0x6300e629
  410b85:	leave  
  410b86:	pop    esp
  410b87:	sbb    dl,BYTE PTR [ebx-0x5a1beba]
  410b8d:	jo     0x410bc3
  410b8f:	dec    esp
  410b90:	adc    DWORD PTR [eax],0x2a
  410b93:	adc    eax,ebp
  410b95:	or     al,dh
  410b97:	cmc    
  410b98:	pop    ds
  410b99:	adc    ebp,DWORD PTR [ebx-0x44]
  410b9c:	popw   ds
  410b9e:	xor    BYTE PTR [esi],ch
  410ba0:	stos   BYTE PTR es:[edi],al
  410ba1:	ins    BYTE PTR es:[edi],dx
  410ba2:	test   eax,0xb2269d52
  410ba7:	pop    ss
  410ba8:	or     bh,BYTE PTR [eax+0x357b194d]
  410bae:	inc    esp
  410baf:	(bad)  
  410bb1:	push   ds
  410bb2:	shl    BYTE PTR [eax+0x902cc1a],0x70
  410bb9:	pop    esi
  410bba:	and    eax,0x5578788a
  410bbf:	adc    esp,DWORD PTR [esi+0x2c]
  410bc2:	jnp    0x410c0d
  410bc4:	dec    esi
  410bc5:	mov    esi,0x497270c0
  410bca:	jp     0x410c3b
  410bcc:	jne    0x410b8c
  410bce:	mov    bh,0x7e
  410bd0:	retf   
  410bd1:	push   esp
  410bd2:	ret    
  410bd3:	mov    ecx,DWORD PTR [ebp-0x3c]
  410bd6:	jp     0x410ba8
  410bd8:	lods   al,BYTE PTR ds:[esi]
  410bd9:	jo     0x410bad
  410bdb:	icebp  
  410bdc:	clc    
  410bdd:	out    dx,al
  410bde:	repnz pop es
  410be0:	or     ch,BYTE PTR [ebp+0x56]
  410be3:	pop    esi
  410be4:	pop    ebp
  410be5:	lds    edi,FWORD PTR [edx]
  410be7:	cmp    eax,0xe6b001b4
  410bec:	add    BYTE PTR [eax+0x7d00c8b1],bl
  410bf2:	sub    ebp,DWORD PTR [eax]
  410bf4:	sub    BYTE PTR [ebx],bh
  410bf6:	xor    eax,DWORD PTR [esi+0xbf7885a]
  410bfc:	div    esp
  410bfe:	push   edi
  410bff:	into   
  410c00:	nop
  410c01:	out    dx,al
  410c02:	aaa    
  410c03:	jmp    0x410bad
  410c05:	jge    0x410c5d
  410c07:	scas   eax,DWORD PTR es:[edi]
  410c08:	hlt    
  410c09:	jge    0x410c41
  410c0b:	stos   BYTE PTR es:[edi],al
  410c0c:	imul   esi,DWORD PTR [edi],0x12
  410c0f:	scas   al,BYTE PTR es:[edi]
  410c10:	xor    BYTE PTR [eax],dh
  410c12:	jmp    0x398d5302
  410c17:	inc    ebp
  410c18:	jl     0x410c27
  410c1a:	sbb    al,0x3d
  410c1c:	mov    dl,0xb1
  410c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1f:	lods   eax,DWORD PTR ds:[esi]
  410c20:	aas    
  410c21:	inc    esi
  410c22:	xchg   ecx,eax
  410c23:	push   0x95a07496
  410c28:	shl    BYTE PTR [edi],0x7e
  410c2b:	and    ch,BYTE PTR [edx+0x5e9f95e1]
  410c31:	inc    DWORD PTR [esi-0x26777362]
  410c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c38:	in     eax,0xd
  410c3a:	ins    BYTE PTR es:[edi],dx
  410c3b:	inc    eax
  410c3c:	jnp    0x410c31
  410c3e:	(bad)  
  410c3f:	push   edi
  410c40:	out    dx,al
  410c41:	enter  0x6d62,0x79
  410c45:	inc    esi
  410c46:	pop    ebx
  410c47:	jnp    0x410c35
  410c49:	push   ds
  410c4a:	call   0x79b4bd8c
  410c4f:	sub    BYTE PTR [eax-0x24],dh
  410c52:	jg     0x410c4a
  410c54:	test   al,0xab
  410c56:	stos   BYTE PTR es:[edi],al
  410c57:	jbe    0x410c71
  410c59:	push   edi
  410c5a:	xchg   ebp,eax
  410c5b:	clc    
  410c5c:	in     al,0x66
  410c5e:	dec    edx
  410c5f:	mov    bl,0xfd
  410c61:	mov    ebx,0x46e7a92c
  410c66:	mov    eax,0x1ad5ffe6
  410c6b:	pusha  
  410c6c:	test   al,0xa6
  410c6e:	push   ss
  410c6f:	mov    edi,0x5410d95c
  410c74:	xor    al,0x82
  410c76:	std    
  410c77:	or     al,0x96
  410c79:	or     al,ah
  410c7b:	nop
  410c7c:	fnstsw WORD PTR [ecx+0x29]
  410c7f:	addr16 add bl,0xd6
  410c83:	loop   0x410c5e
  410c85:	jg     0x410c19
  410c87:	aam    0xa4
  410c89:	and    eax,0x6d6628e9
  410c8e:	inc    esi
  410c8f:	add    DWORD PTR [ebx-0x4f55b699],esi
  410c95:	rcr    BYTE PTR [edx+0x43],0xc4
  410c99:	test   eax,0x5e76917d
  410c9e:	dec    edx
  410c9f:	jmp    0x7390:0x32c9f0ef
  410ca6:	sahf   
  410ca7:	mov    al,0x27
  410ca9:	jge    0x410cbc
  410cab:	leave  
  410cac:	cmp    DWORD PTR [edi-0x7c],edx
  410caf:	jl     0x410d06
  410cb1:	xor    eax,ebx
  410cb3:	cmp    ah,BYTE PTR [edi+ebx*1+0x6b]
  410cb7:	xor    eax,DWORD PTR [edx-0x1445f7a7]
  410cbd:	mov    ds,eax
  410cbf:	push   eax
  410cc0:	pusha  
  410cc1:	out    dx,al
  410cc2:	pop    ds
  410cc3:	pop    edx
  410cc4:	(bad)  
  410cc6:	dec    esi
  410cc7:	popa   
  410cc8:	push   ebx
  410cc9:	mov    esp,0xb66fbef4
  410cce:	(bad)  
  410ccf:	aas    
  410cd0:	fsub   QWORD PTR [eax-0x2c]
  410cd3:	ret    0x53d9
  410cd6:	imul   BYTE PTR [esi+0x1258eb4a]
  410cdc:	push   0xdb03e03
  410ce1:	mov    edi,0x912a735e
  410ce6:	push   edi
  410ce7:	popf   
  410ce8:	vpsllq xmm0,xmm1,XMMWORD PTR [ebp+0x79]
  410ced:	outs   dx,DWORD PTR ds:[esi]
  410cee:	push   esi
  410cef:	lock cmp eax,0x10aacf98
  410cf5:	ror    ah,1
  410cf7:	inc    DWORD PTR [ecx+0x4070dfc4]
  410cfd:	or     bh,dl
  410cff:	scas   eax,DWORD PTR es:[edi]
  410d00:	aas    
  410d01:	ss in  eax,0xac
  410d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d05:	(bad)  
  410d08:	dec    ebx
  410d09:	jo     0x410d68
  410d0b:	jb     0x410d43
  410d0d:	mov    ah,0xc4
  410d0f:	loopne 0x410d90
  410d11:	jp     0x410d17
  410d13:	sbb    BYTE PTR [esi+0xc],dh
  410d16:	dec    ebp
  410d17:	jne    0x410d52
  410d19:	xor    DWORD PTR [edx+0x15],0xffffffe9
  410d1d:	or     eax,0x6859ff7c
  410d22:	and    ecx,esp
  410d24:	daa    
  410d25:	cmc    
  410d26:	sbb    DWORD PTR [edx],esp
  410d28:	adc    al,0x23
  410d2a:	mov    ecx,0x4b7a5c78
  410d2f:	dec    esp
  410d30:	cmp    al,0x67
  410d32:	dec    eax
  410d33:	cwde   
  410d34:	test   eax,0x3028b3a0
  410d39:	lds    ecx,FWORD PTR [edi+eiz*8-0xf4a5e6f]
  410d40:	clc    
  410d41:	adc    ebp,esi
  410d43:	add    DWORD PTR [ecx-0xc9d3884],edi
  410d49:	int    0xae
  410d4b:	and    ebx,DWORD PTR [edi]
  410d4d:	adc    DWORD PTR [ecx+0x1d],esp
  410d50:	nop
  410d51:	sbb    eax,0xcd95a97a
  410d56:	out    dx,eax
  410d57:	inc    esi
  410d58:	jns    0x410cf5
  410d5a:	dec    esp
  410d5b:	cmp    cl,BYTE PTR [ebp-0x28]
  410d5e:	or     BYTE PTR [esi+eax*4+0x66],0xd3
  410d63:	into   
  410d64:	sub    cl,BYTE PTR [edi-0x85eb51b]
  410d6a:	inc    eax
  410d6b:	(bad)  
  410d6c:	idiv   DWORD PTR [ebp-0x1ce0cf4]
  410d72:	(bad)  
  410d73:	mov    esi,0xeccd805d
  410d78:	and    eax,0xedd63789
  410d7d:	push   edi
  410d7e:	retf   0x2234
  410d81:	cli    
  410d82:	pushf  
  410d83:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410d85:	and    eax,0xca9c8b43
  410d8a:	clc    
  410d8b:	jmp    0x53e0cf4
  410d90:	mov    ah,0x2e
  410d92:	lods   al,BYTE PTR ds:[esi]
  410d93:	mov    BYTE PTR [eax+0x61],dl
  410d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d97:	xor    eax,0x80155f1
  410d9c:	pop    eax
  410d9d:	pushf  
  410d9e:	jne    0x410d89
  410da0:	js     0x410d78
  410da2:	(bad)  [esi+0x70794024]
  410da8:	pushf  
  410da9:	mov    ebx,0xec90840e
  410dae:	fimul  WORD PTR [ebx+0x1bb0a1c1]
  410db4:	jno    0x410dcd
  410db6:	mov    ds:0x1eec00b8,al
  410dbb:	xchg   ebx,eax
  410dbc:	mov    eax,0x48d55ee
  410dc1:	mov    WORD PTR [eax+0x738d4708],ss
  410dc7:	test   BYTE PTR [eax+edx*1+0x1917e49c],0xd1
  410dcf:	jge    0x410dfc
  410dd1:	jmp    0x2b0cbd80
  410dd6:	(bad)  
  410dd7:	mov    dl,0x5
  410dd9:	cmp    bh,BYTE PTR [ebx-0x5d]
  410ddc:	pop    esi
  410ddd:	lds    eax,FWORD PTR [esi]
  410ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410de0:	int3   
  410de1:	sbb    esp,ecx
  410de3:	aam    0xe2
  410de5:	jmp    0x477f0b3d
  410dea:	ins    BYTE PTR es:[edi],dx
  410deb:	dec    ebp
  410dec:	aaa    
  410ded:	dec    eax
  410dee:	mov    ecx,0x53599df
  410df3:	xor    eax,DWORD PTR [esp+eiz*8]
  410df6:	xchg   BYTE PTR [esi+ecx*1+0x672af8f6],cl
  410dfd:	test   al,0x52
  410dff:	dec    edx
  410e00:	push   0x103ab277
  410e05:	fcomp  QWORD PTR [esi+ebx*1+0x75]
  410e09:	adc    eax,0xfcd566ed
  410e0e:	cmp    ebx,DWORD PTR [edx+0x7f]
  410e11:	mov    al,ds:0xec65c0e7
  410e16:	repz inc edi
  410e18:	adc    edx,0x4c
  410e1b:	sbb    DWORD PTR [esi-0x72],ecx
  410e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e1f:	mov    ecx,0x9a11baf
  410e24:	adc    eax,DWORD PTR [eax+0x3f]
  410e27:	cmp    al,0x79
  410e29:	xchg   DWORD PTR [esi-0x2b],edx
  410e2c:	mov    ch,0x4f
  410e2e:	data16 sti 
  410e30:	aas    
  410e31:	mov    dl,0xe1
  410e33:	(bad)  
  410e34:	(bad)  
  410e35:	daa    
  410e36:	cmp    ah,BYTE PTR ds:0x7efe4b9
  410e3c:	xchg   edx,eax
  410e3d:	and    DWORD PTR [ecx+0x74],edx
  410e40:	stos   BYTE PTR es:[edi],al
  410e41:	fsubp  st(1),st
  410e43:	dec    eax
  410e44:	push   edi
  410e45:	fwait
  410e46:	cmp    ebp,DWORD PTR [edx]
  410e48:	leave  
  410e49:	int    0xc9
  410e4b:	fwait
  410e4c:	or     eax,0x12fb44cf
  410e51:	inc    esi
  410e52:	push   esi
  410e53:	retf   
  410e54:	aad    0x1
  410e56:	fcom   DWORD PTR [edx+0x4b]
  410e59:	aam    0xe5
  410e5b:	push   ebx
  410e5c:	sbb    eax,0xba711fc4
  410e61:	ds lahf 
  410e63:	mov    ds:0xda98ee5c,eax
  410e68:	cmp    ebx,DWORD PTR [ecx]
  410e6a:	leave  
  410e6b:	stc    
  410e6c:	or     DWORD PTR [esi+ebp*8-0x545a8b04],esp
  410e73:	jecxz  0x410e41
  410e75:	mov    eax,ds:0x7d099b84
  410e7a:	idiv   dh
  410e7c:	add    ebx,ebx
  410e7e:	cmp    al,0x4a
  410e80:	add    DWORD PTR [eax+0x15],0x35
  410e84:	imul   ebp,DWORD PTR [ecx+edx*1+0x343eee8],0xd2b7013
  410e8f:	ret    
  410e90:	xchg   DWORD PTR [esi-0x58],edx
  410e93:	cli    
  410e94:	fs cmc 
  410e96:	fistp  QWORD PTR [eax-0x11]
  410e99:	sbb    BYTE PTR [eax-0x49],bh
  410e9c:	sti    
  410e9d:	lds    eax,FWORD PTR [eax]
  410e9f:	mov    ds:0x7619707b,al
  410ea4:	mov    BYTE PTR [edi+0x2d],ch
  410ea7:	nop
  410ea8:	ja     0x410e8e
  410eaa:	mov    ch,0xe5
  410eac:	lahf   
  410ead:	int3   
  410eae:	daa    
  410eaf:	int3   
  410eb0:	(bad)  
  410eb1:	cwde   
  410eb2:	(bad)  
  410eb4:	lea    esi,[ecx-0x65e02c43]
  410eba:	mov    BYTE PTR cs:[ebx+eax*2-0x7f],dh
  410ebf:	push   eax
  410ec0:	cli    
  410ec1:	ja     0x410f28
  410ec3:	rcl    ah,0x88
  410ec6:	or     ah,BYTE PTR [eax]
  410ec8:	mov    ebp,DWORD PTR ds:0xc5be575c
  410ece:	jb     0x410e99
  410ed0:	add    eax,0xe45d25bc
  410ed5:	add    eax,0x5e1220af
  410eda:	jge    0x410e62
  410edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410edd:	add    eax,0xbbbb00b7
  410ee2:	es mov al,0x13
  410ee5:	daa    
  410ee6:	mov    esi,0x79b560c4
  410eeb:	jmp    0x9d7c:0x5c64e117
  410ef2:	mov    ebx,0xd0f1e969
  410ef7:	div    ebx
  410ef9:	and    BYTE PTR [esi-0x407a1a9f],dl
  410eff:	dec    eax
  410f00:	sub    BYTE PTR ds:0x9768318a,cl
  410f06:	lock xor eax,0x672d8916
  410f0c:	xlat   BYTE PTR ds:[ebx]
  410f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f0e:	jnp    0x410ea7
  410f10:	sub    dh,BYTE PTR [esi+0x41]
  410f13:	aad    0xf7
  410f15:	clc    
  410f16:	jo     0x410f05
  410f18:	loop   0x410f0b
  410f1a:	and    al,0x77
  410f1c:	call   0xadb2d0bf
  410f21:	xchg   esi,eax
  410f22:	mov    ecx,0x73b98851
  410f27:	pusha  
  410f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f29:	imul   ecx,DWORD PTR [eax-0x3f],0xffffffe9
  410f2d:	jns    0x410eb6
  410f2f:	adc    eax,0x844867dd
  410f34:	mov    al,0x46
  410f36:	jne    0x410f8d
  410f38:	test   al,0x79
  410f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f3b:	aad    0x73
  410f3d:	xchg   BYTE PTR [ecx+0x55],dl
  410f40:	push   ss
  410f41:	lahf   
  410f42:	loopne 0x410f7e
  410f44:	xor    edx,ebp
  410f46:	clc    
  410f47:	mov    ds:0x818aaa02,eax
  410f4c:	enter  0xac22,0x29
  410f50:	cmp    eax,0x65cfea8d
  410f55:	xor    al,0x3f
  410f57:	lods   eax,DWORD PTR ds:[esi]
  410f58:	cdq    
  410f59:	fmul   QWORD PTR [edi]
  410f5b:	sub    BYTE PTR [esi+ecx*8+0xf9a3ca7],al
  410f62:	mov    dh,0xb5
  410f64:	idiv   DWORD PTR [esp+ebp*8]
  410f67:	cmp    eax,0xdb621b85
  410f6c:	xlat   BYTE PTR ds:[ebx]
  410f6d:	push   ss
  410f6e:	fdiv   DWORD PTR [ecx-0x220ce995]
  410f74:	push   edi
  410f75:	fst    st(4)
  410f77:	cwde   
  410f78:	xchg   ebp,eax
  410f79:	sub    eax,0xf585d9a9
  410f7e:	mov    BYTE PTR [edx-0x5d0e090e],ch
  410f84:	cmp    DWORD PTR [edi+0x1a9e0408],eax
  410f8a:	outs   dx,DWORD PTR ds:[esi]
  410f8b:	pusha  
  410f8c:	les    ecx,FWORD PTR [esi+0x39cfc23d]
  410f92:	jmp    0x626e:0x6ff0373b
  410f99:	adc    al,0x2b
  410f9b:	xchg   ecx,eax
  410f9c:	lock lds ebx,FWORD PTR [ebp+0x20aa7add]
  410fa3:	inc    ebx
  410fa4:	sub    BYTE PTR [esi],dl
  410fa6:	cmp    DWORD PTR [eax-0x16],esi
  410fa9:	cmp    eax,0x6bce15c2
  410fae:	neg    BYTE PTR ds:0x64568757
  410fb4:	test   al,0x7b
  410fb6:	xor    esp,DWORD PTR [eax-0x3]
  410fb9:	bound  ebp,QWORD PTR [ebx-0x994eba7]
  410fbf:	(bad)  
  410fc0:	fcomp  DWORD PTR [ecx]
  410fc2:	outs   dx,DWORD PTR fs:[esi]
  410fc4:	mov    dh,0xa2
  410fc6:	cmc    
  410fc7:	dec    ebx
  410fc8:	push   edi
  410fc9:	pop    ss
  410fca:	jmp    0x41102d
  410fcc:	lods   eax,DWORD PTR ds:[esi]
  410fcd:	xchg   edx,eax
  410fce:	xor    DWORD PTR [edx+0x4d],0x1374ee41
  410fd5:	mov    dl,BYTE PTR [ebx]
  410fd7:	pop    ds
  410fd8:	mov    BYTE PTR [edi+0x1d],0xa9
  410fdc:	call   0xd79f:0xbc7a4aa
  410fe3:	and    DWORD PTR [edx-0x7e7da4f2],esi
  410fe9:	xchg   edi,eax
  410fea:	and    eax,0x859559ea
  410fef:	xor    ch,BYTE PTR [ebp+0x4f0e6293]
  410ff5:	int3   
  410ff6:	and    DWORD PTR [edi+edi*4],esi
  410ff9:	aaa    
  410ffa:	xchg   edx,eax
  410ffb:	in     al,dx
  410ffc:	mov    dh,0xa0
  410ffe:	cmp    BYTE PTR [eax+0x7d],ah
  411001:	bound  edx,QWORD PTR [edi-0x3a2ffcc4]
  411007:	and    eax,0xc68390d2
  41100c:	dec    ebx
  41100d:	rcl    DWORD PTR [ecx+eiz*4],cl
  411010:	dec    eax
  411011:	push   DWORD PTR [edx-0x5a245eb1]
  411017:	loopne 0x411030
  411019:	mov    dl,0xf9
  41101b:	aaa    
  41101c:	cs in  eax,dx
  41101e:	pop    esp
  41101f:	sub    eax,DWORD PTR [edx*2-0x128aaa01]
  411026:	xor    BYTE PTR [ecx-0x66365254],ah
  41102c:	mov    esp,0xb4555ab4
  411031:	mov    edi,0x57fb866c
  411036:	mov    ebp,0x75697d81
  41103b:	fs hlt 
  41103d:	cmp    al,0x4f
  41103f:	dec    edi
  411040:	out    dx,eax
  411041:	jbe    0x411041
  411043:	js     0x41104d
  411045:	or     eax,0x7cb59124
  41104a:	call   0x8b98:0x7be58f7c
  411051:	mov    cl,0x2c
  411053:	xlat   BYTE PTR ds:[bx]
  411055:	jo     0x410fec
  411057:	mov    edi,0x530df5c9
  41105c:	inc    esp
  41105d:	mov    bl,0xa5
  41105f:	ja     0x411087
  411061:	jb     0x411053
  411063:	aas    
  411064:	out    0xdf,al
  411066:	ins    BYTE PTR es:[edi],dx
  411067:	cld    
  411068:	nop
  411069:	cmp    BYTE PTR [ecx],dh
  41106b:	ficom  DWORD PTR [eax-0x10]
  41106e:	cwde   
  41106f:	mov    dh,0x9c
  411071:	inc    eax
  411072:	cmp    eax,0xc8e7f843
  411077:	and    bh,BYTE PTR [ebx-0x41071da4]
  41107d:	pop    es
  41107e:	push   0xa378e358
  411083:	sbb    ch,bh
  411085:	les    edx,FWORD PTR [edi+0x6795ae5e]
  41108b:	jmp    0x411043
  41108d:	outs   dx,BYTE PTR ds:[esi]
  41108e:	xor    ebx,edi
  411090:	stc    
  411091:	sub    al,0xce
  411093:	inc    ebp
  411094:	int    0xf
  411096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411097:	inc    esp
  411098:	jno    0x41106a
  41109a:	pop    edi
  41109b:	rol    BYTE PTR [eax+0x49a2b834],0x4b
  4110a2:	fadd   QWORD PTR [edx]
  4110a4:	imul   edx,esi,0xf
  4110a7:	sub    eax,0x8bbb2125
  4110ac:	push   ecx
  4110ad:	ins    BYTE PTR es:[edi],dx
  4110ae:	outs   dx,DWORD PTR ds:[esi]
  4110af:	add    DWORD PTR [eax-0x7b],0x6eebb846
  4110b6:	outs   dx,DWORD PTR ds:[esi]
  4110b7:	shl    BYTE PTR [ecx],cl
  4110b9:	or     al,BYTE PTR [edx-0x29]
  4110bc:	mov    WORD PTR [ecx],cs
  4110be:	loope  0x4110ce
  4110c0:	sbb    DWORD PTR [edx],ebx
  4110c2:	push   esp
  4110c3:	(bad)  
  4110c4:	(bad)
  4110c8:	ficomp DWORD PTR [ebx]
  4110ca:	shl    DWORD PTR [edx+0x75],1
  4110cd:	(bad)  
  4110ce:	inc    edi
  4110cf:	xchg   edi,eax
  4110d0:	addr16 push ss
  4110d2:	mov    esi,0xf1bf935e
  4110d7:	(bad)  
  4110d8:	out    0xf2,eax
  4110da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110db:	addr16 push cs
  4110dd:	or     dh,BYTE PTR [ebp+0x204dfac8]
  4110e3:	mov    bl,0x31
  4110e5:	lahf   
  4110e6:	hlt    
  4110e7:	icebp  
  4110e8:	std    
  4110e9:	dec    eax
  4110ea:	loope  0x411074
  4110ec:	cmp    edx,edx
  4110ee:	cmp    DWORD PTR [ebx],0xd5ed4368
  4110f4:	inc    DWORD PTR [ebx+0x3e]
  4110f7:	mov    ebx,0x7c3d6c94
  4110fc:	rcl    DWORD PTR [edx],0x9e
  4110ff:	out    dx,eax
  411100:	rol    edi,0x41
  411103:	sub    dl,dh
  411105:	shl    DWORD PTR [edi],0xae
  411108:	ret    
  411109:	aad    0xc2
  41110b:	pop    es
  41110c:	inc    esp
  41110d:	cmp    al,0x82
  41110f:	push   ss
  411110:	xchg   ebx,eax
  411111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411112:	test   al,0xd1
  411114:	add    ebx,edi
  411116:	mov    eax,ds:0x6df61757
  41111b:	mov    ecx,0xddcaf25b
  411120:	cwde   
  411121:	test   al,0xf7
  411123:	in     al,0xe6
  411125:	and    edx,DWORD PTR [ebx-0x6ab60fa9]
  41112b:	fbld   TBYTE PTR [ecx]
  41112d:	push   ebx
  41112e:	push   ebx
  41112f:	aas    
  411130:	sub    dh,dh
  411132:	push   edi
  411133:	adc    ch,al
  411135:	adc    al,BYTE PTR [ebp+0x7bf98c77]
  41113b:	mov    WORD PTR [ebp+0x189f4672],?
  411141:	pop    ecx
  411142:	sahf   
  411143:	mov    BYTE PTR [ecx-0x2630090f],ah
  411149:	test   BYTE PTR [esi+ecx*8],al
  41114c:	(bad)  [edx+0x6bb5754a]
  411152:	mov    eax,ds:0x268e92c8
  411157:	or     eax,0xf8396219
  41115c:	jo     0x41115c
  41115e:	clc    
  41115f:	jns    0x41118f
  411161:	add    dl,BYTE PTR [esi+0x19]
  411164:	je     0x4111bd
  411166:	sbb    edx,DWORD PTR [ebp+0x54dce76]
  41116c:	aam    0x7d
  41116e:	pop    ecx
  41116f:	adc    ebp,DWORD PTR [edx+0x18]
  411172:	xor    BYTE PTR [ebx],bh
  411174:	sbb    cl,BYTE PTR [esi-0x1f]
  411177:	sub    eax,0x68df4b7
  41117c:	xchg   ecx,eax
  41117d:	repnz pop ebp
  41117f:	cmc    
  411180:	fisubr WORD PTR [eax+0x451c6e62]
  411186:	fadd   DWORD PTR [edx]
  411188:	jb     0x411145
  41118a:	aam    0xce
  41118c:	mov    edx,DWORD PTR [ebx]
  41118e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41118f:	stos   DWORD PTR es:[edi],eax
  411190:	gs inc esp
  411192:	mul    DWORD PTR [ebp-0x7e63a2ab]
  411198:	jbe    0x41112d
  41119a:	js     0x411149
  41119c:	rcpps  xmm2,XMMWORD PTR [eax-0x6a0b64ac]
  4111a3:	(bad)  
  4111a4:	ss jg  0x411178
  4111a7:	pop    ebx
  4111a8:	mov    ebp,0x8bad80f1
  4111ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ae:	ret    
  4111af:	dec    edi
  4111b0:	sbb    BYTE PTR [ebp+0x6d004d3b],al
  4111b6:	rcr    ebx,cl
  4111b8:	push   0x39
  4111ba:	mov    ah,0x14
  4111bc:	lods   eax,DWORD PTR ds:[esi]
  4111bd:	das    
  4111be:	sbb    DWORD PTR [esi],ebx
  4111c0:	dec    edi
  4111c1:	mov    fs:0x45ec1e7d,eax
  4111c7:	sbb    BYTE PTR [ebx-0x3d],ah
  4111ca:	stc    
  4111cb:	xchg   esi,eax
  4111cc:	mov    bh,0x3a
  4111ce:	scas   al,BYTE PTR es:[edi]
  4111cf:	shr    eax,0x64
  4111d2:	cmp    esp,edi
  4111d4:	inc    ebp
  4111d5:	sbb    ch,BYTE PTR [edx+0x6e2d38e3]
  4111db:	mov    dh,0x4b
  4111dd:	aad    0x4a
  4111df:	cdq    
  4111e0:	mov    BYTE PTR [edx+0x24],0x4e
  4111e4:	add    DWORD PTR [ecx+0x73a497c8],ecx
  4111ea:	xor    DWORD PTR [eax-0x14],edi
  4111ed:	sahf   
  4111ee:	push   es
  4111ef:	xor    eax,0x35586f18
  4111f4:	sbb    DWORD PTR [edx],ecx
  4111f6:	add    edx,DWORD PTR [ecx+edx*8-0x2f9592c3]
  4111fd:	pop    ss
  4111fe:	jmp    0x90bf:0xdef68848
  411205:	xor    eax,0xa15bcc0f
  41120a:	lahf   
  41120b:	aam    0xe
  41120d:	jb     0x41119e
  41120f:	mov    ds:0x2a4af900,eax
  411214:	outs   dx,DWORD PTR ds:[esi]
  411215:	jne    0x4111dc
  411217:	ret    
  411218:	xchg   BYTE PTR [edi-0x6f],bh
  41121b:	into   
  41121c:	pusha  
  41121d:	int3   
  41121e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41121f:	sar    BYTE PTR [edx-0x28],0x44
  411223:	pop    esp
  411224:	sub    BYTE PTR [edi],0x95
  411227:	daa    
  411228:	and    bl,ah
  41122a:	add    esi,ebx
  41122c:	mov    DWORD PTR [ebp-0x5bc5c614],ecx
  411232:	push   0xb2487473
  411237:	das    
  411238:	mov    al,ds:0x771db810
  41123d:	or     DWORD PTR [edi],ebx
  41123f:	fcomi  st,st(2)
  411241:	add    eax,0x8a89baf9
  411246:	ret    0x24f8
  411249:	mov    ecx,0x6193684a
  41124e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41124f:	fisttp DWORD PTR [edx+esi*4-0x73]
  411253:	inc    ebp
  411254:	jmp    0x4112b0
  411256:	pop    esp
  411257:	(bad)  
  411258:	jno    0x4112b3
  41125a:	mov    ah,ch
  41125c:	ss addr16 jne 0x41127f
  411260:	xor    eax,0x773fe4ee
  411265:	pop    ebx
  411266:	mov    ds:0x1b159a20,al
  41126b:	mov    cl,0xc9
  41126d:	or     BYTE PTR [edi-0x3cde0816],dh
  411273:	(bad)  
  411275:	les    eax,FWORD PTR [ecx+0x7b382ce0]
  41127b:	int3   
  41127c:	jnp    0x41125a
  41127e:	pusha  
  41127f:	rcl    bh,0x92
  411282:	and    al,0x7c
  411284:	or     BYTE PTR [eax],dh
  411286:	jge    0x4112af
  411288:	shl    BYTE PTR [ebx-0x2ea25c01],0xea
  41128f:	jnp    0x41128e
  411291:	dec    ebx
  411292:	jl     0x4112ab
  411294:	cmp    DWORD PTR [ecx-0x6e436fe],ecx
  41129a:	or     esp,esi
  41129c:	pusha  
  41129d:	sub    ebx,esi
  41129f:	in     eax,dx
  4112a0:	jp     0x4112b5
  4112a2:	jnp    0x4112ed
  4112a4:	ja     0x41131b
  4112a6:	fld    DWORD PTR [edx]
  4112a8:	sar    BYTE PTR [edx+0x348e251f],1
  4112ae:	lock push edi
  4112b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b1:	xor    ebx,DWORD PTR [edx]
  4112b3:	inc    edx
  4112b4:	aas    
  4112b5:	jae    0x411290
  4112b7:	in     al,0xc6
  4112b9:	addr16 push ebp
  4112bb:	xlat   BYTE PTR ds:[ebx]
  4112bc:	adc    BYTE PTR [ebp-0x40],ah
  4112bf:	ret    0x97a
  4112c2:	jmp    0x697e:0xdc4c3067
  4112c9:	dec    esp
  4112ca:	nop
  4112cb:	ds add al,0xf1
  4112ce:	jecxz  0x41133b
  4112d0:	adc    BYTE PTR [edx+ecx*4-0x4acef4f5],dh
  4112d7:	mov    al,0x61
  4112d9:	cmp    DWORD PTR [ecx+0x43],eax
  4112dc:	pop    eax
  4112dd:	js     0x41134a
  4112df:	push   cs
  4112e0:	xchg   ebp,eax
  4112e1:	mov    ah,0xed
  4112e3:	pushf  
  4112e4:	xchg   edx,eax
  4112e5:	sbb    eax,0xf0549977
  4112ea:	dec    ebp
  4112eb:	outs   dx,BYTE PTR ds:[esi]
  4112ec:	jno    0x411304
  4112ee:	das    
  4112ef:	jns    0x411289
  4112f1:	rol    BYTE PTR ds:0x1cc808a0,1
  4112f7:	icebp  
  4112f8:	dec    eax
  4112f9:	mov    edx,0x5e6ca810
  4112fe:	idiv   DWORD PTR [edx-0x5a]
  411301:	push   cs
  411302:	xor    dh,BYTE PTR [ebp-0x1cc5e4ec]
  411308:	in     eax,0x3c
  41130a:	lods   al,BYTE PTR ds:[esi]
  41130b:	add    ch,BYTE PTR [eax]
  41130d:	mov    al,BYTE PTR [ecx]
  41130f:	in     al,0x44
  411311:	inc    edi
  411312:	(bad)  
  411313:	(bad)  
  411314:	jo     0x4112bc
  411316:	fild   DWORD PTR [esi+0x3258c1c1]
  41131c:	inc    ebp
  41131d:	les    edx,FWORD PTR [edx-0x4361c7f3]
  411323:	add    BYTE PTR [ecx-0x21],ah
  411326:	out    0x30,al
  411328:	arpl   bx,sp
  41132a:	aad    0x1b
  41132c:	mov    ds:0x2312b646,eax
  411331:	or     al,0x72
  411333:	shl    BYTE PTR [eax],cl
  411335:	mov    gs:0x265a473c,eax
  41133b:	and    DWORD PTR [ebx+0x20],edx
  41133e:	aad    0x23
  411340:	repz add BYTE PTR [ebx],al
  411343:	jno    0x4112ff
  411345:	mov    esi,0x4f4ac744
  41134a:	sti    
  41134b:	cmp    eax,0xd97bdacf
  411350:	mov    edi,0x76c462a5
  411355:	sub    eax,0xaa5a4b3f
  41135a:	xchg   esi,eax
  41135b:	jge    0x4113b5
  41135d:	(bad)  
  41135f:	dec    edi
  411360:	jecxz  0x4113bd
  411362:	jne    0x411399
  411364:	pop    ebx
  411365:	into   
  411366:	sub    edx,DWORD PTR [edi]
  411368:	mov    eax,ds:0x50ab6faa
  41136d:	xor    esp,edi
  41136f:	xor    esi,edi
  411371:	icebp  
  411372:	or     DWORD PTR [edx-0x7e],ebx
  411375:	pop    ds
  411376:	rol    DWORD PTR [ebp+0x2400c1d8],1
  41137c:	jl     0x411319
  41137e:	sar    dl,1
  411380:	scas   eax,DWORD PTR es:[edi]
  411381:	out    0xb1,eax
  411383:	lock not dl
  411386:	pop    edx
  411387:	and    dl,BYTE PTR ds:0xab51d228
  41138d:	push   esi
  41138e:	test   al,0xc6
  411390:	add    eax,0x7a41ebde
  411395:	aaa    
  411396:	sbb    eax,0xcf52f5c1
  41139b:	popf   
  41139c:	sub    eax,DWORD PTR [ebp-0xb]
  41139f:	retf   
  4113a0:	stc    
  4113a1:	push   esi
  4113a2:	mov    al,BYTE PTR [edi]
  4113a4:	or     ch,dl
  4113a6:	dec    esp
  4113a7:	mov    eax,0x528e1ddd
  4113ac:	fadd   QWORD PTR [ebx+0x3fc6b82b]
  4113b2:	ss push ebx
  4113b4:	adc    DWORD PTR [edi-0x60e71f41],0xe72c20f3
  4113be:	adc    DWORD PTR [edx+ebp*1],ebx
  4113c1:	lods   al,BYTE PTR ds:[esi]
  4113c2:	jp     0x411435
  4113c4:	mov    al,0x31
  4113c6:	iret   
  4113c7:	call   0x376a:0xd9ca387c
  4113ce:	cmp    DWORD PTR [esi],0xfc707355
  4113d4:	jbe    0x411359
  4113d6:	lds    esp,FWORD PTR [ecx-0x1522305e]
  4113dc:	jg     0x4113e2
  4113de:	mov    ch,0x69
  4113e0:	(bad)  
  4113e1:	jmp    0xee41ce75
  4113e6:	pop    es
  4113e7:	push   ebx
  4113e8:	fimul  DWORD PTR [ecx-0x50]
  4113eb:	cs dec edx
  4113ed:	mov    esp,0xd42e6a9e
  4113f2:	into   
  4113f3:	pop    es
  4113f4:	push   ds
  4113f5:	xchg   edi,eax
  4113f6:	mov    BYTE PTR [eax],ch
  4113f8:	inc    edi
  4113f9:	inc    ecx
  4113fa:	mov    eax,0x9a77f678
  4113ff:	retf   
  411400:	aas    
  411401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411402:	inc    esp
  411403:	cmp    eax,0xe3f29c5c
  411408:	scas   eax,DWORD PTR es:[edi]
  411409:	repnz es inc ebx
  41140c:	mov    dh,0x68
  41140e:	mov    ebx,es
  411410:	loope  0x41140b
  411412:	mov    ds:0x52b479e3,eax
  411417:	pushf  
  411418:	(bad)  
  411419:	gs push ss
  41141b:	div    BYTE PTR [edx]
  41141d:	clc    
  41141e:	jecxz  0x411455
  411420:	and    eax,0x9f6da239
  411425:	lea    edx,[edi]
  411427:	cld    
  411428:	fstp   TBYTE PTR [edx]
  41142a:	cmp    eax,0x2000e0ed
  41142f:	sti    
  411430:	mov    eax,ds:0xdc099842
  411435:	aam    0xa9
  411437:	push   0xffffffc3
  411439:	mov    ds:0xd64b3081,al
  41143e:	push   0xffffffb3
  411440:	add    BYTE PTR [edi+0x70],ah
  411443:	xchg   ebx,esi
  411445:	inc    ecx
  411446:	or     DWORD PTR [ebp-0x79],edx
  411449:	(bad)  
  41144a:	jnp    0x411428
  41144c:	pop    ebp
  41144d:	arpl   WORD PTR [ebx-0x47],di
  411450:	(bad)  [esi+ebx*4-0x42]
  411454:	sbb    ecx,0xffffffb1
  411457:	call   0x721d:0x48cd5c82
  41145e:	adc    eax,edi
  411460:	(bad)  
  411461:	jae    0x41148a
  411463:	xchg   ebp,eax
  411464:	xor    eax,0xda9a9bae
  411469:	xlat   BYTE PTR ds:[ebx]
  41146a:	jecxz  0x411478
  41146c:	std    
  41146d:	int    0x76
  41146f:	mov    esp,0x43454b8b
  411474:	xor    ebp,DWORD PTR [esi]
  411476:	jno    0x41147c
  411478:	aaa    
  411479:	cli    
  41147a:	rcl    dl,0xd1
  41147d:	adc    dl,BYTE PTR [esi]
  41147f:	xchg   esi,eax
  411480:	lock lahf 
  411482:	outs   dx,DWORD PTR ds:[esi]
  411483:	out    0x4e,eax
  411485:	xchg   ebp,eax
  411486:	sub    BYTE PTR ds:0xed239fe6,al
  41148c:	in     eax,dx
  41148d:	pop    esi
  41148e:	inc    esi
  41148f:	ret    0x7a43
  411492:	ja     0x4114af
  411494:	inc    BYTE PTR [edx+0x47]
  411497:	push   eax
  411498:	int3   
  411499:	mov    al,ds:0x160261cc
  41149e:	mov    esi,0xd16f03a5
  4114a3:	shl    BYTE PTR ss:[ebx+0x6d],0xd
  4114a8:	loopne 0x4114c2
  4114aa:	out    dx,al
  4114ab:	gs test ebx,edi
  4114ae:	mov    DWORD PTR [ecx-0x3885b21a],edi
  4114b4:	loopne 0x41147f
  4114b6:	ret    0x6e5c
  4114b9:	mov    WORD PTR [esp+edi*8-0x23],ds
  4114bd:	adc    ch,ah
  4114bf:	in     al,0x83
  4114c1:	xchg   ecx,eax
  4114c2:	(bad)  
  4114c3:	mov    edi,0x2cb1b6f9
  4114c8:	mov    esp,0xfe25fd88
  4114cd:	or     esi,DWORD PTR [edx]
  4114cf:	sub    edx,DWORD PTR [edi-0x2e7e80ee]
  4114d5:	push   esi
  4114d6:	xchg   esp,eax
  4114d7:	push   esi
  4114d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d9:	int    0x8e
  4114db:	inc    ecx
  4114dc:	mov    ebx,es
  4114de:	pop    ebp
  4114df:	jae    0x411488
  4114e1:	arpl   WORD PTR [edi],ax
  4114e3:	in     eax,dx
  4114e4:	sub    al,0x53
  4114e6:	mov    BYTE PTR [edx-0x8],dh
  4114e9:	repnz adc ch,BYTE PTR [ebx-0x29eb5e8e]
  4114f0:	sbb    BYTE PTR [edx],al
  4114f2:	or     BYTE PTR ds:0x659576a0,al
  4114f8:	add    DWORD PTR [ecx],ecx
  4114fa:	ss sti 
  4114fc:	push   ebx
  4114fd:	mov    ebp,0xd57df0e1
  411502:	(bad)  
  411504:	fidiv  DWORD PTR [eax-0x16375c73]
  41150a:	shr    BYTE PTR [edi-0x7bb7b5d],1
  411510:	retf   
  411511:	jo     0x411580
  411513:	into   
  411514:	sbb    BYTE PTR [eax+0x343d3e7],bl
  41151a:	inc    ecx
  41151b:	loopne 0x4114ae
  41151d:	mov    esp,0x706da2eb
  411522:	les    esp,FWORD PTR [esi+0x1f09a455]
  411528:	and    ecx,DWORD PTR [ebx]
  41152a:	pop    ecx
  41152b:	stos   BYTE PTR es:[edi],al
  41152c:	dec    esi
  41152d:	into   
  41152e:	mov    ch,BYTE PTR [eax+0x2b]
  411531:	mov    esp,0x3740c368
  411536:	or     dl,BYTE PTR [ecx+0x5c]
  411539:	or     ch,BYTE PTR [ebp+0x5897b36c]
  41153f:	pmaddwd mm1,QWORD PTR [eax+0x31989072]
  411546:	cmc    
  411547:	in     al,0x9b
  411549:	es dec ebp
  41154b:	je     0x411537
  41154d:	clc    
  41154e:	xor    edi,esi
  411550:	jae    0x4114f1
  411552:	and    al,0xe9
  411554:	jns    0x4115a9
  411556:	dec    eax
  411557:	mov    DWORD PTR [ecx],eax
  411559:	ret    0xd4ff
  41155c:	into   
  41155d:	pop    ds
  41155e:	pop    ss
  41155f:	mov    edi,0x2cd05667
  411564:	sbb    DWORD PTR [ecx+0x6550aa9b],0x64
  41156b:	out    0x34,eax
  41156d:	ret    0xebcf
  411570:	add    al,0x8
  411572:	and    al,BYTE PTR [edx-0x1b]
  411575:	cmp    eax,0xd8541b10
  41157a:	push   es
  41157b:	(bad)  
  41157c:	inc    esi
  41157d:	(bad)  
  41157e:	dec    BYTE PTR [edx-0x4a8959]
  411584:	dec    esi
  411585:	mov    DWORD PTR [eax+0x6887387c],ecx
  41158b:	adc    al,BYTE PTR [esp+ebp*4]
  41158e:	rcr    esi,cl
  411590:	in     eax,dx
  411591:	gs mov bh,0x4a
  411594:	shl    edx,1
  411596:	sbb    esp,DWORD PTR [ecx-0x3bc0be05]
  41159c:	cld    
  41159d:	sbb    esi,esi
  41159f:	js     0x411550
  4115a1:	mov    cl,0x9d
  4115a3:	leave  
  4115a4:	xchg   ebp,eax
  4115a5:	cdq    
  4115a6:	test   bl,bl
  4115a8:	lea    edx,[eax+0x1f]
  4115ab:	addr16 mov cl,0xc9
  4115ae:	xchg   esi,eax
  4115af:	mov    dl,0xdf
  4115b1:	mov    WORD PTR [ecx+0x21],ss
  4115b4:	test   DWORD PTR [eax+edx*2+0x6d97996b],ebx
  4115bb:	cdq    
  4115bc:	jo     0x411626
  4115be:	js     0x41163f
  4115c0:	fstp   QWORD PTR [edx]
  4115c2:	pop    eax
  4115c3:	(bad)  
  4115c4:	out    dx,eax
  4115c5:	aam    0xbb
  4115c7:	sahf   
  4115c8:	ja     0x41155a
  4115ca:	cmc    
  4115cb:	outs   dx,DWORD PTR ds:[esi]
  4115cc:	push   esi
  4115cd:	pop    ebx
  4115ce:	ss pop edi
  4115d0:	push   esp
  4115d2:	(bad)  
  4115d3:	shl    DWORD PTR [ebx+esi*8],cl
  4115d6:	and    cl,cl
  4115d8:	sub    bh,BYTE PTR [esi]
  4115da:	leave  
  4115db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115dc:	jo     0x411565
  4115de:	daa    
  4115df:	adc    ecx,DWORD PTR [ebp-0x6e830956]
  4115e5:	xor    ecx,DWORD PTR [ebx-0x52043b1c]
  4115eb:	cld    
  4115ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ed:	lds    eax,FWORD PTR [edx-0x4436937f]
  4115f3:	mov    esp,0xd10d75bc
  4115f8:	lods   al,BYTE PTR ds:[esi]
  4115f9:	xchg   ecx,eax
  4115fa:	scas   al,BYTE PTR es:[edi]
  4115fb:	scas   eax,DWORD PTR es:[edi]
  4115fc:	fucomi st,st(7)
  4115fe:	gs scas eax,DWORD PTR es:[edi]
  411600:	pop    ebx
  411601:	adc    eax,0xfc10ec4c
  411606:	jle    0x411599
  411608:	and    al,0x43
  41160a:	retf   
  41160b:	ret    
  41160c:	lods   al,BYTE PTR ds:[esi]
  41160d:	out    0x7d,al
  41160f:	mov    ebp,0xe52b68db
  411614:	adc    al,ah
  411616:	ins    WORD PTR es:[edi],dx
  411618:	arpl   WORD PTR [edx],ax
  41161a:	adc    ebp,DWORD PTR [esi-0x5ea4d2cd]
  411620:	or     esp,0xbcaa54ad
  411626:	test   al,0x4a
  411628:	pop    edx
  411629:	mov    al,0xaf
  41162b:	add    al,0x85
  41162d:	rcr    al,cl
  41162f:	mov    eax,0x8814cac
  411634:	aad    0x8d
  411636:	xchg   esp,eax
  411637:	std    
  411638:	out    0xbf,al
  41163a:	nop
  41163b:	sbb    eax,0x8dffac6f
  411640:	and    bl,ah
  411642:	paddusb mm7,QWORD PTR [eax]
  411645:	adc    al,BYTE PTR [esi]
  411647:	outs   dx,DWORD PTR ds:[esi]
  411648:	sahf   
  411649:	or     ecx,DWORD PTR [ebp-0x3b50f3bf]
  41164f:	js     0x411616
  411651:	fs pop edx
  411653:	or     edx,DWORD PTR [edi-0x9]
  411656:	sti    
  411657:	pop    ebp
  411658:	retf   
  411659:	das    
  41165a:	push   edi
  41165b:	out    0x46,al
  41165d:	mov    al,0x1
  41165f:	hlt    
  411660:	mov    ch,BYTE PTR [eax-0x52]
  411663:	cs inc esi
  411665:	cwde   
  411666:	loope  0x411681
  411668:	mov    ds:0x2df795da,al
  41166d:	adc    al,0xd9
  41166f:	sbb    BYTE PTR [ebp-0x5a],ch
  411672:	sbb    BYTE PTR [edx+0xf20836c],cl
  411678:	test   eax,0x53050b2f
  41167d:	dec    eax
  41167e:	std    
  41167f:	mov    al,ds:0x8a910adf
  411684:	mov    ecx,0x4f00924a
  411689:	test   DWORD PTR [ebp+0x30],ebp
  41168c:	jne    0x411699
  41168e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168f:	data16 adc BYTE PTR [eax+0x6],cl
  411693:	call   0x53ac:0xb83323d6
  41169a:	(bad)  
  41169b:	call   0x69986bb3
  4116a0:	adc    ebp,DWORD PTR [esi-0x7e693640]
  4116a6:	retf   
  4116a7:	loopne 0x4116a2
  4116a9:	icebp  
  4116aa:	cs sub eax,0x335eb0b6
  4116b0:	shl    DWORD PTR [esi+0x2539b98c],0xb0
  4116b7:	or     al,0x8a
  4116b9:	mov    ss,WORD PTR [esi+0x34ace66]
  4116bf:	jl     0x411736
  4116c1:	mov    al,0x7a
  4116c3:	push   ebp
  4116c4:	(bad)  
  4116c5:	retf   
  4116c6:	inc    ecx
  4116c7:	add    ch,BYTE PTR [esi]
  4116c9:	out    0x47,al
  4116cb:	je     0x41169f
  4116cd:	dec    ebx
  4116cf:	jne    0x4116dd
  4116d1:	inc    ebx
  4116d2:	in     eax,0xc9
  4116d4:	mov    DWORD PTR [eax-0x5b576efe],esi
  4116da:	lea    edx,ds:0xa72495b5
  4116e0:	dec    esp
  4116e1:	aad    0x6e
  4116e3:	bound  esp,QWORD PTR [ebp-0x78091cae]
  4116e9:	mov    cl,0xb1
  4116eb:	out    dx,eax
  4116ec:	mov    ebx,DWORD PTR [edx]
  4116ee:	mov    edi,0x89b19077
  4116f3:	pop    ds
  4116f4:	stc    
  4116f5:	mov    esi,0x216e2e35
  4116fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116fb:	arpl   WORD PTR [eax-0x4a],bp
  4116fe:	sar    DWORD PTR [ecx+0x5bad3d3a],cl
  411704:	jns    0x411757
  411706:	arpl   WORD PTR ds:0xba7f885c,ax
  41170c:	cmc    
  41170d:	pusha  
  41170e:	rol    ah,0xc
  411711:	neg    BYTE PTR [edi+0x7f]
  411714:	xor    eax,0x86551341
  411719:	cmovae ebp,DWORD PTR [ebx]
  41171c:	inc    ecx
  41171d:	push   esi
  41171e:	dec    edx
  41171f:	sbb    dh,0x59
  411722:	clc    
  411723:	lahf   
  411724:	jg     0x4116b3
  411726:	stc    
  411727:	repnz sbb eax,0x201c5b8d
  41172d:	sbb    edx,DWORD PTR [ebx+0x68]
  411730:	pushf  
  411731:	lods   eax,DWORD PTR ds:[esi]
  411732:	mov    ds:0xea583655,al
  411737:	shr    BYTE PTR [ebx],0xa1
  41173a:	ret    
  41173b:	mov    bl,0xf0
  41173d:	mov    ebp,0x3ed107b4
  411742:	iret   
  411743:	jecxz  0x4117a3
  411745:	in     eax,dx
  411746:	inc    ecx
  411747:	jg     0x411718
  411749:	retf   0x4966
  41174c:	ror    esp,0xbf
  41174f:	xor    ah,cl
  411751:	lds    esi,FWORD PTR [edx]
  411753:	mov    ch,0xe6
  411755:	jnp    0x411729
  411757:	push   esi
  411758:	cwde   
  411759:	pop    ebp
  41175a:	xor    esi,edi
  41175c:	cmp    DWORD PTR [ebp-0x6a],eax
  41175f:	inc    ebx
  411760:	rcl    BYTE PTR [ecx-0xf],1
  411763:	mov    ah,0x66
  411765:	test   eax,0x2059cca1
  41176a:	test   dl,0xe9
  41176d:	in     eax,0xa9
  41176f:	stc    
  411770:	add    esi,ebp
  411772:	mov    esi,0x71a7b8c7
  411777:	xchg   DWORD PTR es:[ecx-0x6f3ffb95],esi
  41177e:	stos   BYTE PTR es:[edi],al
  41177f:	push   eax
  411780:	mov    ebx,0xb8bf7917
  411785:	lock rcl ah,1
  411788:	sub    dl,ah
  41178a:	xchg   ebx,eax
  41178b:	leave  
  41178c:	mov    esp,0x624e6b0
  411791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411792:	mov    al,0x9b
  411794:	dec    edi
  411795:	mov    ah,0x9f
  411797:	test   al,0xa9
  411799:	sub    al,0x42
  41179b:	aas    
  41179c:	iret   
  41179d:	shl    DWORD PTR [ebp+0x71],1
  4117a0:	adc    ecx,DWORD PTR [edx-0x4b312c68]
  4117a6:	mov    cl,BYTE PTR [esi]
  4117a8:	adc    DWORD PTR [esi+ecx*1],ecx
  4117ab:	cmp    al,0x35
  4117ad:	inc    ebx
  4117ae:	aas    
  4117af:	jmp    0x4117fa
  4117b1:	mov    ch,0x4e
  4117b3:	aad    0xe2
  4117b5:	rcpps  xmm4,XMMWORD PTR [eax+edi*2+0x35]
  4117ba:	dec    esi
  4117bb:	pop    esi
  4117bc:	imul   esi,DWORD PTR [edi+0x6a964298],0x5a
  4117c3:	mov    bh,0x28
  4117c5:	fbstp  TBYTE PTR [esi+0x63]
  4117c8:	call   0xf290:0xcb7089a9
  4117cf:	pop    ebx
  4117d0:	ror    ah,cl
  4117d2:	aad    0x50
  4117d4:	fcom   QWORD PTR [ebx+0x334a267e]
  4117da:	mov    bl,0xce
  4117dc:	sub    eax,0x1cf8bca6
  4117e1:	pop    es
  4117e2:	lea    ebx,[esi-0x46]
  4117e5:	imul   ebx,DWORD PTR [ebx],0x907749ef
  4117eb:	sbb    edx,DWORD PTR [edi]
  4117ed:	mov    esp,0x9947eb17
  4117f2:	pushf  
  4117f3:	pop    esp
  4117f4:	xor    al,0xea
  4117f6:	jg     0x41180d
  4117f8:	adc    DWORD PTR [ecx+0x3b],0xf9e1e282
  4117ff:	je     0x4117d8
  411801:	shl    BYTE PTR [edx+eiz*4],0x2d
  411805:	sub    edx,ebx
  411807:	cs test eax,0x48bb136
  41180d:	pop    ebx
  41180e:	mul    DWORD PTR [ebp-0xd]
  411811:	mov    edx,0xe1a1c604
  411816:	aad    0x3a
  411818:	inc    ecx
  411819:	pop    ecx
  41181a:	mov    edx,0xd0643652
  41181f:	sub    eax,esi
  411821:	jmp    0x680c:0xd843ee1
  411828:	repz and ch,BYTE PTR [eax+0x3d088a52]
  41182f:	or     cl,BYTE PTR [edx+0x5c1cb7cf]
  411835:	mov    bl,0x7b
  411837:	mov    cl,0x16
  411839:	out    dx,al
  41183a:	stc    
  41183b:	out    0x32,al
  41183d:	jo     0x411871
  41183f:	and    esp,ebx
  411841:	(bad)  
  411843:	xor    eax,0x8109b1cc
  411848:	mov    bl,0x6a
  41184a:	shr    DWORD PTR [eax+0x3d983c90],0xb2
  411851:	or     BYTE PTR [eax],dl
  411853:	or     DWORD PTR [edx],0xc2612102
  411859:	or     BYTE PTR [esi-0x6d16c83a],ah
  41185f:	call   0x4abcf3e
  411864:	inc    eax
  411865:	mov    edi,0x2d6fc35f
  41186a:	iret   
  41186b:	imul   eax,DWORD PTR ds:0x6c4b8585,0x4b29e4b4
  411875:	addr16 pop ds
  411877:	and    cl,bh
  411879:	fsub   DWORD PTR [esi+edx*4+0x5c]
  41187d:	lds    esp,FWORD PTR [edi-0x443bb4e2]
  411883:	push   edi
  411884:	dec    ecx
  411885:	push   ecx
  411886:	push   ss
  411887:	jge    0x912e6847
  41188d:	mov    ds:0xa85ed535,eax
  411892:	in     al,0x25
  411894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411895:	push   esi
  411896:	xlat   BYTE PTR ds:[ebx]
  411897:	push   ss
  411898:	cmp    al,0xea
  41189a:	les    edi,FWORD PTR [edx-0x2ea1a0ea]
  4118a0:	dec    esi
  4118a1:	xchg   esp,eax
  4118a2:	xor    DWORD PTR [esi],edx
  4118a4:	popf   
  4118a5:	out    0xc8,al
  4118a7:	(bad)  
  4118a8:	push   esi
  4118a9:	sbb    cl,BYTE PTR [ecx+0x22d40684]
  4118af:	fimul  DWORD PTR [esi-0x24]
  4118b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118b3:	sub    bh,BYTE PTR [ebp+0x4d]
  4118b6:	popf   
  4118b7:	pop    ss
  4118b8:	push   esi
  4118b9:	jmp    0xd3173f17
  4118be:	mov    dh,0x4e
  4118c0:	sub    DWORD PTR [ebx+ebp*8+0x3d14aa97],edi
  4118c7:	(bad)  
  4118c8:	lahf   
  4118c9:	pusha  
  4118ca:	(bad)  
  4118cb:	rol    ebx,1
  4118cd:	sub    DWORD PTR [ecx+0x102ed44b],edx
  4118d3:	inc    edx
  4118d4:	jae    0x4118c4
  4118d6:	fistp  WORD PTR [ecx-0x62]
  4118d9:	lods   al,BYTE PTR ds:[esi]
  4118da:	mov    ds:0x9b7e91fd,al
  4118df:	or     eax,0xad130085
  4118e4:	push   ebp
  4118e5:	scas   al,BYTE PTR es:[edi]
  4118e6:	scas   al,BYTE PTR es:[edi]
  4118e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e9:	nop
  4118ea:	sbb    BYTE PTR [ebx-0x75e9c1a6],bh
  4118f0:	jo     0x411940
  4118f2:	(bad)  
  4118f3:	push   esi
  4118f4:	inc    esp
  4118f5:	pushf  
  4118f6:	xchg   ebp,eax
  4118f7:	pop    ss
  4118f8:	out    0x46,eax
  4118fa:	(bad)  
  4118fb:	icebp  
  4118fc:	loope  0x41193d
  4118fe:	mov    eax,ds:0xd917fc7f
  411903:	js     0x411936
  411905:	aam    0x8e
  411907:	ret    
  411908:	int3   
  411909:	xchg   edx,eax
  41190a:	sbb    al,0xf9
  41190c:	jnp    0x4118c1
  41190e:	add    al,0xa6
  411910:	ficom  DWORD PTR [ecx]
  411913:	mov    WORD PTR [eax-0x6b],?
  411916:	push   ebx
  411917:	rcr    ah,cl
  411919:	mov    eax,0x33f1dff
  41191e:	out    dx,eax
  41191f:	inc    ebx
  411920:	xchg   BYTE PTR [ecx-0x8],dh
  411923:	pop    ebx
  411924:	rol    DWORD PTR [esi-0x51],0xf5
  411928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192a:	data16 je 0x411978
  41192d:	mov    bh,0xdd
  41192f:	arpl   WORD PTR [esi*4+0x39d1035],di
  411936:	pop    ebp
  411937:	sbb    edx,DWORD PTR [ecx+eiz*8+0x5c]
  41193b:	dec    ecx
  41193c:	imul   ecx,DWORD PTR [edx+0x73],0xc56a9e7a
  411943:	lods   al,BYTE PTR ds:[esi]
  411944:	sbb    BYTE PTR [edx],0xe4
  411947:	addr16 loop 0x411903
  41194a:	jg     0x411949
  41194c:	and    cl,ah
  41194e:	(bad)  
  411950:	mov    bh,0xc3
  411952:	out    0xac,eax
  411954:	dec    edx
  411955:	pop    esp
  411956:	(bad)  
  411957:	push   ss
  411958:	fnsave [esi]
  41195a:	mov    ebx,0xeb837ad7
  41195f:	add    DWORD PTR [edi],ebp
  411961:	ud2    
  411963:	cmc    
  411964:	and    eax,0xc7ace3d8
  411969:	add    BYTE PTR [ebx+ebx*1],bl
  41196c:	icebp  
  41196d:	add    eax,0x755d1f2d
  411972:	in     eax,0x69
  411974:	mov    ds:0x56d9d1e2,eax
  411979:	xor    ch,dl
  41197b:	loopne 0x411902
  41197d:	call   0x7baf:0x6dda769
  411984:	mov    ebx,0xf1445acc
  411989:	pusha  
  41198a:	and    eax,0x201b00d7
  41198f:	rcl    ecx,0xc3
  411992:	add    bl,BYTE PTR [ecx-0x48]
  411995:	ins    BYTE PTR es:[edi],dx
  411996:	dec    esi
  411997:	pop    eax
  411998:	loop   0x4119f1
  41199a:	mov    edi,0xf3a59b3a
  41199f:	sub    al,0x5c
  4119a1:	cmovae ecx,esp
  4119a4:	(bad)  
  4119a5:	ins    BYTE PTR es:[edi],dx
  4119a6:	and    ebp,ebx
  4119a8:	gs add al,0x1b
  4119ab:	adc    BYTE PTR [esi-0x60],0xa9
  4119af:	pushf  
  4119b0:	(bad)
  4119b5:	add    BYTE PTR [ecx+0x531ca3b5],0xe3
  4119bc:	es dec edi
  4119be:	in     al,dx
  4119bf:	inc    edx
  4119c0:	les    edi,FWORD PTR [ecx]
  4119c2:	push   eax
  4119c3:	jle    0x4119a7
  4119c5:	sbb    al,0xb2
  4119c7:	cmc    
  4119c8:	sub    DWORD PTR [edx],edi
  4119ca:	and    BYTE PTR [eax],bh
  4119cc:	lahf   
  4119cd:	push   ss
  4119ce:	xchg   esi,eax
  4119cf:	fsub   QWORD PTR [esi+0x67b535a1]
  4119d5:	aaa    
  4119d6:	fwait
  4119d7:	test   al,0x10
  4119d9:	mov    bl,0xe6
  4119db:	add    esp,eax
  4119dd:	out    dx,eax
  4119de:	mov    ebx,0x3ea9f7f3
  4119e3:	test   eax,0x3862c5b0
  4119e8:	push   esp
  4119e9:	shl    BYTE PTR [ebp+0x5a],cl
  4119ec:	adc    DWORD PTR [ebx-0x6a1e7625],ecx
  4119f2:	scas   eax,DWORD PTR es:[edi]
  4119f3:	outs   dx,DWORD PTR ds:[esi]
  4119f4:	int3   
  4119f5:	stos   DWORD PTR es:[edi],eax
  4119f6:	xlat   BYTE PTR ds:[ebx]
  4119f7:	or     al,0x65
  4119f9:	or     bh,BYTE PTR [edi-0x50]
  4119fc:	inc    ebp
  4119fd:	xchg   edi,eax
  4119fe:	int3   
  4119ff:	sub    al,0xe3
  411a01:	and    eax,0xa17f05f8
  411a06:	rcl    dh,0xbf
  411a09:	push   ebx
  411a0a:	ret    0x4c19
  411a0d:	jo     0x411a71
  411a0f:	cmp    eax,0xbf030ba7
  411a14:	daa    
  411a15:	mov    ds:0x9fed5f80,eax
  411a1a:	stc    
  411a1b:	sbb    cl,BYTE PTR [ebp+0x25e3c4b3]
  411a21:	push   edi
  411a22:	xor    eax,0x36593b34
  411a27:	ret    
  411a28:	dec    ebp
  411a29:	mov    al,0x37
  411a2b:	jbe    0x411a31
  411a2d:	xlat   BYTE PTR ds:[ebx]
  411a2e:	mov    bl,0x90
  411a30:	inc    esp
  411a31:	rcl    BYTE PTR [ebx-0xd0e243],1
  411a37:	cmp    cl,0xcd
  411a3a:	test   BYTE PTR [ecx+0x4],bh
  411a3d:	sbb    dl,ch
  411a3f:	ficom  WORD PTR [ecx+0x147e7015]
  411a45:	or     eax,0x7b7b8db6
  411a4a:	lahf   
  411a4b:	enter  0x58e2,0xd7
  411a4f:	cwde   
  411a50:	fisub  WORD PTR [ebx]
  411a52:	cmp    DWORD PTR ds:0xd2cd2e80,ecx
  411a58:	jae    0x411a64
  411a5a:	ins    DWORD PTR es:[edi],dx
  411a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a5c:	scas   eax,DWORD PTR es:[edi]
  411a5d:	les    eax,FWORD PTR [ecx+0x2e]
  411a60:	bound  ecx,QWORD PTR [edi]
  411a62:	sbb    al,0xe2
  411a64:	(bad)  
  411a65:	sbb    dh,BYTE PTR [esi+0x4a79ef39]
  411a6b:	xchg   DWORD PTR [eax-0x49711c0],edx
  411a71:	(bad)  
  411a72:	adc    BYTE PTR [ecx-0x2],dl
  411a75:	call   0x37e0ae7f
  411a7a:	fdivr  st,st(2)
  411a7c:	jne    0x411a82
  411a7e:	out    0xe9,al
  411a80:	shl    edx,1
  411a82:	push   0xfb25c5f6
  411a87:	push   0xffffffd0
  411a89:	and    ebp,DWORD PTR [ecx]
  411a8b:	mov    bl,0xf
  411a8d:	mov    DWORD PTR [eax+ecx*8-0x3ce2e88c],esp
  411a94:	out    dx,al
  411a95:	and    eax,0x835e5e3f
  411a9a:	push   ss
  411a9b:	ds scas eax,DWORD PTR es:[edi]
  411a9d:	mov    cl,dh
  411a9f:	shl    DWORD PTR [ebx+0x22],1
  411aa2:	adc    al,0xa1
  411aa4:	mov    dh,0xe0
  411aa6:	shl    BYTE PTR [ecx+0x42],1
  411aa9:	lds    esp,FWORD PTR [esi+ebx*1-0x60]
  411aad:	nop
  411aae:	idiv   DWORD PTR [edi+0x49]
  411ab1:	(bad)  
  411ab2:	and    bh,dh
  411ab4:	sbb    esp,DWORD PTR [ecx]
  411ab6:	repnz stos BYTE PTR es:[edi],al
  411ab8:	xor    DWORD PTR [edx],edi
  411aba:	sbb    BYTE PTR [esi+0x556df41d],bh
  411ac0:	jl     0x411a7e
  411ac2:	xchg   BYTE PTR [ebp+0x37],bl
  411ac5:	mov    bh,dh
  411ac7:	je     0x411afe
  411ac9:	jbe    0x411ad9
  411acb:	(bad)  
  411acd:	cmp    dh,dh
  411acf:	ret    0x68a9
  411ad2:	in     eax,dx
  411ad3:	mov    ebx,0xea843d42
  411ad8:	jmp    0x411b28
  411ada:	out    0x14,eax
  411adc:	pop    eax
  411add:	imul   ebp,DWORD PTR [ecx+0x632b63fc],0x5c
  411ae4:	fmul   QWORD PTR [edi]
  411ae6:	fdivr  DWORD PTR [edi-0x44]
  411ae9:	imul   edi,ebx,0x61
  411aec:	pop    ebp
  411aed:	or     BYTE PTR [edx-0x62b506e],ah
  411af3:	nop
  411af4:	mov    al,0xa
  411af6:	push   edi
  411af7:	adc    DWORD PTR [edi],esp
  411af9:	mov    al,0x94
  411afb:	ins    DWORD PTR es:[edi],dx
  411afc:	inc    DWORD PTR [eax+0x5b]
  411aff:	or     al,0xb2
  411b01:	outs   dx,DWORD PTR ds:[esi]
  411b02:	ror    DWORD PTR [ebx],1
  411b04:	cmp    DWORD PTR [edx+ecx*4-0x41da91b8],ebp
  411b0b:	loope  0x411b3a
  411b0d:	inc    esi
  411b0e:	push   0xa973d049
  411b13:	mov    al,0xb2
  411b15:	xchg   edi,eax
  411b16:	mov    al,ds:0xeb54131b
  411b1b:	fsubr  QWORD PTR [ecx+0x8]
  411b1e:	fldcw  WORD PTR [edx-0x75f8bb96]
  411b24:	xor    dl,BYTE PTR [edx]
  411b26:	or     BYTE PTR [edi-0x4749b496],ah
  411b2c:	sbb    bh,bl
  411b2e:	mov    eax,ds:0xf37b0d48
  411b33:	pop    edx
  411b34:	loop   0x411ad5
  411b36:	nop
  411b37:	xor    eax,0xd15bd4dc
  411b3c:	call   0x93265416
  411b41:	cmc    
  411b42:	retf   
  411b43:	xlat   BYTE PTR ds:[ebx]
  411b44:	and    edi,esi
  411b46:	sub    eax,0xd66b8907
  411b4b:	jb     0x411b99
  411b4d:	mov    ds:0x565fbac4,eax
  411b52:	bound  esp,QWORD PTR [ebx+ebp*2-0x14]
  411b56:	push   0xcfd1524d
  411b5b:	jbe    0x411b66
  411b5d:	mov    esp,0x5fdf60c7
  411b62:	fsubr  DWORD PTR [eax]
  411b64:	mov    eax,ds:0xa3776498
  411b69:	jmp    0x411b5c
  411b6b:	sahf   
  411b6c:	dec    eax
  411b6d:	pusha  
  411b6e:	mov    bl,0x24
  411b70:	das    
  411b71:	ds jmp 0xc047:0x4a2854b3
  411b79:	jo     0x411b6f
  411b7b:	ret    0x1b9d
  411b7e:	mov    ah,0x40
  411b80:	cmp    ebp,DWORD PTR ds:0x86c0f2b
  411b86:	push   ebx
  411b87:	xor    DWORD PTR [ebx+0x76],ecx
  411b8a:	mov    ss,WORD PTR [edi+0x56]
  411b8d:	repnz add BYTE PTR [ebp+0x178f8546],ah
  411b94:	sbb    dl,bh
  411b96:	pushf  
  411b97:	adc    al,BYTE PTR [esi]
  411b99:	dec    esi
  411b9a:	fucomp st(5)
  411b9c:	fisubr WORD PTR [edx]
  411b9e:	ins    DWORD PTR es:[edi],dx
  411b9f:	inc    eax
  411ba0:	sbb    BYTE PTR [eax+0x43],al
  411ba3:	retf   
  411ba4:	mov    ah,0x1a
  411ba6:	ja     0x411b72
  411ba8:	jo     0x411b59
  411baa:	push   0xffffffa2
  411bac:	mov    cl,0xed
  411bae:	aad    0xac
  411bb0:	pop    edi
  411bb1:	pop    edi
  411bb2:	bound  eax,QWORD PTR [esi+0x26f4218b]
  411bb8:	js     0x411bf4
  411bba:	scas   eax,DWORD PTR es:[edi]
  411bbb:	pop    ds
  411bbc:	add    edi,ebx
  411bbe:	mov    al,0xa7
  411bc0:	dec    esp
  411bc1:	cmp    dl,ch
  411bc3:	sub    al,BYTE PTR [ebp+0x0]
  411bc6:	cdq    
  411bc7:	stos   DWORD PTR es:[edi],eax
  411bc8:	fstp   TBYTE PTR [ecx]
  411bca:	and    cl,BYTE PTR [edx-0x11]
  411bcd:	mov    dh,0xd6
  411bcf:	imul   edx,DWORD PTR [edx],0x748180f7
  411bd5:	pop    edi
  411bd6:	sahf   
  411bd7:	pop    ds
  411bd8:	jmp    0x408e:0x63904279
  411bdf:	sahf   
  411be0:	icebp  
  411be1:	xor    BYTE PTR [edx],ch
  411be3:	xchg   DWORD PTR [esi],ebx
  411be5:	mul    eax
  411be7:	sar    DWORD PTR [ecx],0xa7
  411bea:	mov    edi,0x6d5cfa58
  411bef:	xor    ebx,esp
  411bf1:	nop
  411bf2:	jmp    0xdca:0x7635a687
  411bf9:	aas    
  411bfa:	lods   eax,DWORD PTR ds:[esi]
  411bfb:	mov    edi,0x11ceb861
  411c00:	jnp    0x411bd3
  411c02:	push   0xffffffda
  411c04:	mov    al,0x28
  411c06:	fwait
  411c07:	(bad)  
  411c08:	xor    edx,esp
  411c0a:	and    BYTE PTR [ecx],dl
  411c0c:	pop    eax
  411c0d:	pop    ecx
  411c0e:	hlt    
  411c0f:	jp     0x411c24
  411c11:	aad    0x76
  411c13:	mov    BYTE PTR ds:0xfef92249,ah
  411c19:	push   edx
  411c1a:	leave  
  411c1b:	enter  0xe000,0xe7
  411c1f:	mov    esi,0xd0bd7e7f
  411c24:	xchg   edi,eax
  411c25:	pop    edx
  411c26:	(bad)  
  411c27:	test   eax,0xc19eea48
  411c2c:	push   ss
  411c2d:	pop    eax
  411c2e:	sbb    al,0x97
  411c30:	into   
  411c31:	int    0xa4
  411c33:	adc    al,0xc
  411c35:	pop    es
  411c36:	add    BYTE PTR [edx+0x6],bh
  411c39:	shr    DWORD PTR [esi-0x3e],0x9b
  411c3d:	mov    DWORD PTR [ecx-0x5ddb2800],0xe5e69165
  411c47:	push   edi
  411c48:	mov    BYTE PTR [edx],ah
  411c4a:	aaa    
  411c4b:	jne    0x411c44
  411c4d:	lock mov ds:0x6f1ce65a,al
  411c53:	out    0x13,eax
  411c55:	jle    0x411c18
  411c57:	cli    
  411c58:	or     ah,BYTE PTR [ebp-0x677f37a9]
  411c5e:	pop    eax
  411c5f:	into   
  411c60:	jb     0x411caf
  411c62:	xchg   DWORD PTR [ecx+ecx*2-0xb],eax
  411c66:	push   cs
  411c67:	add    DWORD PTR [edi],esi
  411c69:	lds    esp,FWORD PTR [edx+0x58c51804]
  411c6f:	rol    DWORD PTR [edi],0x87
  411c72:	pop    ecx
  411c73:	lds    ebx,FWORD PTR [ebx-0x74]
  411c76:	fld    QWORD PTR [esi]
  411c78:	or     bl,cl
  411c7a:	mov    bl,0x3a
  411c7c:	retf   0xfaf3
  411c7f:	sub    al,0x4a
  411c81:	jle    0x411cce
  411c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c84:	call   0xd35f:0x99b98395
  411c8b:	pusha  
  411c8c:	lahf   
  411c8d:	mov    al,0x53
  411c8f:	push   0x44
  411c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c92:	ss jae 0x411c73
  411c95:	xor    edx,DWORD PTR [esi+ecx*8+0x567af4fb]
  411c9c:	mov    cl,0x12
  411c9e:	imul   ebp,DWORD PTR [eax+0x2c034104],0x9aa80682
  411ca8:	leave  
  411ca9:	call   0xa125a8da
  411cae:	mov    esp,0x48fc63ff
  411cb3:	ds in  eax,dx
  411cb5:	fwait
  411cb6:	je     0x411c97
  411cb8:	ins    BYTE PTR es:[edi],dx
  411cb9:	lods   eax,DWORD PTR ds:[esi]
  411cba:	push   0xfffffff2
  411cbc:	inc    eax
  411cbd:	xor    BYTE PTR [edx-0x65],al
  411cc0:	add    eax,0x7e5e668d
  411cc5:	add    DWORD PTR [edx-0x63094b30],0xccf54cfb
  411ccf:	in     eax,0xa1
  411cd1:	add    DWORD PTR [edx-0x574b4a93],edi
  411cd7:	or     BYTE PTR [esi],cl
  411cd9:	pinsrw mm3,WORD PTR [ebx-0x55],0x1e
  411cde:	rcl    DWORD PTR [edi+eax*1-0x209c5226],1
  411ce5:	mov    ch,0x71
  411ce7:	cdq    
  411ce8:	mov    bh,0x60
  411cea:	mov    edi,0x89045683
  411cef:	mov    DWORD PTR [edx+0x36],edx
  411cf2:	pop    ss
  411cf3:	mov    cl,0xef
  411cf5:	add    al,0x5b
  411cf7:	and    esp,DWORD PTR [ecx+edx*2]
  411cfa:	mov    edx,0x1773caa9
  411cff:	and    BYTE PTR [ebp+0x2b],bh
  411d02:	pop    esi
  411d03:	repz push edi
  411d05:	mov    BYTE PTR [edi],bh
  411d07:	push   esi
  411d08:	aad    0x64
  411d0a:	jb     0x411c92
  411d0c:	jo     0x411c90
  411d0e:	inc    ebp
  411d0f:	cmp    al,0x30
  411d11:	scas   eax,DWORD PTR es:[edi]
  411d12:	pushf  
  411d13:	retf   0x9cdd
  411d16:	adc    DWORD PTR [ebx+0x4c],0x8653826c
  411d1d:	(bad)  
  411d1e:	popf   
  411d1f:	xchg   edi,ebx
  411d21:	mov    esp,0x26a44231
  411d26:	(bad)  fs:[ecx-0x2ff57b75]
  411d2d:	es inc esp
  411d2f:	aas    
  411d30:	add    ebp,ecx
  411d32:	sbb    BYTE PTR [edx-0x1a26993d],cl
  411d38:	xchg   esi,eax
  411d39:	daa    
  411d3a:	aaa    
  411d3b:	mov    WORD PTR [edi+0x78],es
  411d3e:	xchg   BYTE PTR [esi+0x1],al
  411d41:	aaa    
  411d42:	retf   
  411d43:	jl     0x411d0c
  411d45:	aaa    
  411d46:	mov    ch,0x46
  411d48:	sbb    esp,DWORD PTR [ebp-0x725b58a1]
  411d4e:	push   0xffffffcb
  411d50:	sub    al,0x3f
  411d52:	xor    bl,BYTE PTR [edi+0x3935d633]
  411d58:	fldcw  WORD PTR [ebx+ebp*2+0x4f]
  411d5c:	cdq    
  411d5d:	int    0xa7
  411d5f:	es stos DWORD PTR es:[edi],eax
  411d61:	sbb    al,0xf3
  411d63:	lds    edx,FWORD PTR [eax]
  411d65:	cmp    BYTE PTR [eax-0x6e],dl
  411d68:	retf   
  411d69:	cmp    eax,0xa27b8c01
  411d6e:	enter  0xb02e,0xe6
  411d72:	inc    esp
  411d73:	fldenv ds:0x6e562b67
  411d79:	dec    edx
  411d7a:	mov    BYTE PTR [esi+edx*8],al
  411d7d:	mov    edi,0x4588d3f6
  411d82:	or     al,0x8e
  411d84:	lea    ebp,[ebp+0x2f]
  411d87:	les    ebx,FWORD PTR [eax+0x6e]
  411d8a:	push   ds
  411d8b:	arpl   WORD PTR [esi],bp
  411d8d:	ficomp DWORD PTR ds:0x9a896627
  411d93:	jns    0x411d7c
  411d95:	mov    ebx,0x4e9d217b
  411d9a:	dec    esi
  411d9b:	mov    DWORD PTR [ebp+0x1d],ecx
  411d9e:	adc    eax,0x93d7e3b0
  411da3:	out    dx,eax
  411da4:	xor    esi,DWORD PTR ds:0x17dafa72
  411daa:	adc    DWORD PTR [ecx-0x54],0xce9499b7
  411db1:	push   ss
  411db2:	adc    bl,bl
  411db4:	xchg   edx,eax
  411db5:	push   ebx
  411db6:	jle    0x411e2a
  411db8:	dec    DWORD PTR [esi-0x1fa3aac8]
  411dbe:	sar    bh,1
  411dc0:	call   0x31f2:0x34d68b15
  411dc7:	mov    esp,0x316d4191
  411dcc:	hlt    
  411dcd:	mov    al,ds:0xfeae4fad
  411dd2:	xlat   BYTE PTR ds:[ebx]
  411dd3:	add    ebx,0x54
  411dd6:	aam    0x79
  411dd8:	fcomp  QWORD PTR [edi+0x7d]
  411ddb:	out    dx,eax
  411ddc:	daa    
  411ddd:	push   ecx
  411dde:	mov    bh,0xb8
  411de0:	or     BYTE PTR [ebx],bh
  411de2:	mov    esp,0xc5fe879
  411de7:	iret   
  411de8:	and    al,0x31
  411dea:	scas   al,BYTE PTR es:[edi]
  411deb:	cli    
  411dec:	out    dx,eax
  411ded:	test   BYTE PTR [ecx-0x1f4d5baa],0x69
  411df4:	xchg   esi,eax
  411df5:	int3   
  411df6:	or     ebp,DWORD PTR [esi+ebx*8-0x7e9ca9e1]
  411dfd:	fwait
  411dfe:	jl     0x411dde
  411e00:	scas   al,BYTE PTR es:[edi]
  411e01:	xor    eax,0xdc4cec09
  411e06:	cmp    cl,cl
  411e08:	adc    DWORD PTR [eax-0x1ac0caee],ecx
  411e0e:	imul   edi,DWORD PTR [ecx-0x61],0x8e15e03f
  411e15:	adc    al,0x36
  411e17:	pusha  
  411e18:	lea    edi,[ebx+0x1f9bcd04]
  411e1e:	mov    ds,ecx
  411e20:	aam    0x59
  411e22:	in     eax,dx
  411e23:	mov    eax,ds:0xeed8e600
  411e28:	push   eax
  411e29:	repnz jecxz 0x411e15
  411e2c:	pop    ds
  411e2d:	mov    cl,0x1d
  411e2f:	sbb    eax,0xeb56247a
  411e34:	inc    edx
  411e35:	and    ah,cl
  411e37:	dec    ebp
  411e38:	int    0xfd
  411e3a:	pushf  
  411e3b:	push   esi
  411e3c:	ins    DWORD PTR es:[edi],dx
  411e3d:	push   esp
  411e3e:	lods   eax,DWORD PTR ds:[esi]
  411e3f:	jg     0x411e35
  411e41:	inc    esp
  411e42:	shl    DWORD PTR [eax+edi*4],0xca
  411e46:	jl     0x411e7a
  411e48:	cmp    DWORD PTR [ebx-0x42c42e23],ebp
  411e4e:	lock inc ecx
  411e50:	pop    es
  411e51:	les    esi,FWORD PTR [ebp-0x3f98286d]
  411e57:	(bad)  
  411e58:	test   BYTE PTR [ebx+0x4047b545],0xbf
  411e5f:	or     al,0x4e
  411e61:	inc    esi
  411e62:	pop    eax
  411e63:	jne    0x411e1d
  411e65:	rol    edi,cl
  411e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e68:	repnz sub edi,DWORD PTR [ebp+0x3c18631e]
  411e6f:	std    
  411e70:	pusha  
  411e71:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e73:	pusha  
  411e74:	ja     0x411e57
  411e76:	cs test al,0x3
  411e79:	out    0xf3,al
  411e7b:	pusha  
  411e7c:	inc    ecx
  411e7d:	loope  0x411e0f
  411e7f:	jmp    0x411e3a
  411e81:	loope  0x411e6d
  411e83:	out    dx,eax
  411e84:	loope  0x411e78
  411e86:	inc    esp
  411e87:	mov    ch,0xdf
  411e89:	sar    BYTE PTR [ebx+0x6f30fd1],cl
  411e8f:	or     BYTE PTR [eax],dh
  411e91:	pop    esi
  411e92:	push   ds
  411e93:	fsub   QWORD PTR [esi-0x6ceafa46]
  411e99:	sbb    BYTE PTR [ecx-0x5],bl
  411e9c:	dec    esi
  411e9d:	mov    edx,0x6593a490
  411ea2:	cmc    
  411ea3:	popf   
  411ea4:	repz out 0xde,al
  411ea7:	daa    
  411ea8:	dec    edi
  411ea9:	xchg   DWORD PTR ss:[esi-0x68],ecx
  411ead:	pop    ecx
  411eae:	loope  0x411ee1
  411eb0:	xchg   ebp,eax
  411eb1:	mov    ds:0x2599e0c9,eax
  411eb6:	pushf  
  411eb7:	xor    BYTE PTR [esi+0x74],dl
  411eba:	ror    DWORD PTR [bp+si+0x24],cl
  411ebe:	iret   
  411ebf:	dec    edi
  411ec0:	and    al,0xaf
  411ec2:	loope  0x411ea8
  411ec4:	jle    0x411f03
  411ec6:	mov    al,ds:0xb413899e
  411ecb:	test   eax,0xb9cba442
  411ed0:	jno    0x411f44
  411ed2:	daa    
  411ed3:	mov    ds:0x2fcc89a1,al
  411ed8:	mov    al,ds:0xf8643ced
  411edd:	cmp    DWORD PTR [edi+0x30c5b063],ebp
  411ee3:	add    dh,ah
  411ee5:	(bad)  
  411ee6:	jne    0x411e98
  411ee8:	retf   0xb1ae
  411eeb:	xor    eax,0x714634e7
  411ef0:	and    dl,BYTE PTR [esi]
  411ef2:	push   esp
  411ef3:	iret   
  411ef4:	arpl   WORD PTR [ecx-0x60c89fd5],di
  411efa:	in     al,dx
  411efb:	clc    
  411efc:	jb     0x411ec2
  411efe:	jnp    0x411ed4
  411f00:	imul   ebx,DWORD PTR [eax-0x6f505f99],0x56
  411f07:	and    ebx,DWORD PTR [ebx-0x22]
  411f0a:	outs   dx,BYTE PTR ds:[esi]
  411f0b:	retf   0xa0de
  411f0e:	scas   al,BYTE PTR es:[edi]
  411f0f:	iret   
  411f10:	mov    DWORD PTR [edi],ebp
  411f12:	scas   al,BYTE PTR es:[edi]
  411f13:	dec    ebx
  411f14:	and    ebp,DWORD PTR [ebp+0x3bf1cb18]
  411f1a:	repnz sbb ebx,DWORD PTR [ecx-0x37740bbc]
  411f21:	repz adc eax,0x62375207
  411f27:	jne    0x411ed2
  411f29:	jge    0x411f11
  411f2b:	jns    0x411eff
  411f2d:	int3   
  411f2e:	scas   eax,DWORD PTR es:[edi]
  411f2f:	dec    edx
  411f30:	(bad)  
  411f32:	inc    edi
  411f33:	adc    BYTE PTR [esi+0x68],bh
  411f36:	jle    0x411ef6
  411f38:	aas    
  411f39:	cwde   
  411f3a:	ss cpuid 
  411f3d:	or     edx,0xb
  411f40:	gs xchg edx,eax
  411f42:	xchg   ebx,eax
  411f43:	dec    esp
  411f44:	jmp    0x5c28daa9
  411f49:	pop    edx
  411f4a:	add    esp,0xaebb2df5
  411f50:	bound  ebp,QWORD PTR [edx+0x7c]
  411f53:	jno    0x411f62
  411f55:	imul   ebp,edx,0x1fa29746
  411f5b:	or     esp,ebp
  411f5d:	cwde   
  411f5e:	hlt    
  411f5f:	in     eax,dx
  411f60:	ds jbe 0x411f87
  411f63:	ret    0x3f41
  411f66:	ss jg  0x411fd8
  411f69:	or     BYTE PTR [eax+eax*4-0x7a],0x7
  411f6e:	xchg   DWORD PTR [ecx+0x32d9e788],esi
  411f74:	add    DWORD PTR [eax+edx*4],esp
  411f77:	lock and al,0x20
  411f7a:	nop
  411f7b:	push   edx
  411f7c:	xor    BYTE PTR [edi-0x5b0c41d2],dl
  411f82:	(bad)  
  411f83:	js     0x411f68
  411f85:	jns    0x411f6b
  411f87:	mov    ds:0x98a7e8d3,al
  411f8c:	adc    BYTE PTR [edx-0x9],cl
  411f8f:	push   0xfffffff2
  411f91:	xchg   DWORD PTR [ebx],ebp
  411f93:	into   
  411f94:	loopne 0x412015
  411f96:	add    eax,0xa83a9c0e
  411f9b:	cmc    
  411f9c:	ins    DWORD PTR es:[edi],dx
  411f9d:	ror    DWORD PTR fs:[ecx+esi*2-0x1073e73e],cl
  411fa5:	jno    0x411fcb
  411fa7:	test   eax,0xf01881f7
  411fac:	aas    
  411fad:	mov    edi,0x421d1df7
  411fb2:	outs   dx,DWORD PTR ds:[esi]
  411fb3:	adc    al,0x64
  411fb5:	mov    ah,0x19
  411fb7:	out    0xab,al
  411fb9:	mov    esp,0xc69b3df0
  411fbe:	test   DWORD PTR [eax],edi
  411fc0:	mov    ecx,0xb2f93c1e
  411fc5:	jg     0x411fea
  411fc7:	sub    ecx,DWORD PTR [esi]
  411fc9:	sbb    al,0x26
  411fcb:	or     esi,esp
  411fcd:	aas    
  411fce:	sub    bl,bl
  411fd0:	je     0x411fda
  411fd2:	clc    
  411fd3:	sbb    al,0x74
  411fd5:	and    BYTE PTR ds:0x115747e6,dh
  411fdb:	retf   
  411fdc:	imul   edi,DWORD PTR [edx],0x196bbd7e
  411fe2:	dec    edi
  411fe3:	push   ebp
  411fe4:	add    al,0xd5
  411fe6:	mov    bh,BYTE PTR [ebx]
  411fe8:	lahf   
  411fe9:	fcmovu st,st(2)
  411feb:	jge    0x41201b
  411fed:	jecxz  0x412000
  411fef:	(bad)  
  411ff0:	daa    
  411ff1:	(bad)  
  411ff2:	icebp  
  411ff3:	enter  0x8d76,0x90
  411ff7:	xor    ah,BYTE PTR ds:[edi+0x2e209d50]
  411ffe:	cwde   
  411fff:	sbb    al,0x5f
  412001:	jmp    0x412057
  412003:	fimul  DWORD PTR [eax-0x64]
  412006:	fisubr WORD PTR [ebx+ecx*2+0x48337f5]
  41200d:	cdq    
  41200e:	sbb    DWORD PTR [eax],ebp
  412010:	sub    esi,DWORD PTR [eax-0x58]
  412013:	outs   dx,DWORD PTR ds:[esi]
  412014:	inc    esp
  412015:	aas    
  412016:	xor    DWORD PTR [ecx+ebx*4-0x288eb9aa],edx
  41201d:	mov    al,ds:0xbfebaeb8
  412022:	dec    edi
  412023:	and    BYTE PTR [edx-0x9],bh
  412026:	mov    esi,edi
  412028:	imul   ecx,DWORD PTR [edi+0x52d0c7a],0x2eacae91
  412032:	retf   0x319a
  412035:	in     eax,dx
  412036:	ins    BYTE PTR es:[edi],dx
  412037:	or     eax,0xaea4fc0
  41203c:	pop    ss
  41203d:	mov    ebx,0x3dcbfc86
  412042:	scas   al,BYTE PTR es:[edi]
  412043:	mov    bh,0xcb
  412045:	push   esp
  412046:	pusha  
  412047:	cmp    edx,DWORD PTR [ebx]
  412049:	in     al,0xa7
  41204b:	into   
  41204c:	rcl    edi,1
  41204e:	sub    eax,0x26b7eee9
  412053:	or     DWORD PTR [ecx+0x21],ecx
  412056:	sbb    ebp,ebp
  412058:	inc    edi
  412059:	sti    
  41205a:	and    bh,bl
  41205c:	out    0x8d,eax
  41205e:	mov    fs,WORD PTR [ebp-0x31a99]
  412064:	ror    DWORD PTR [edx*1+0x7d4dbd51],1
  41206b:	mov    al,0xbc
  41206d:	xchg   esi,eax
  41206e:	sti    
  41206f:	ja     0x41206e
  412071:	mov    esi,0xeec3a49b
  412076:	dec    esi
  412077:	(bad)  
  412078:	aad    0x50
  41207a:	jp     0x41208e
  41207c:	mov    edi,0xc6db5d87
  412081:	test   al,0xcf
  412083:	sahf   
  412084:	(bad)  
  412085:	mulps  xmm3,XMMWORD PTR [ecx+0x6d24883]
  41208c:	jecxz  0x41203f
  41208e:	cmp    edx,esi
  412090:	imul   edi,DWORD PTR [edx],0xd13648
  412096:	nop
  412097:	pop    esp
  412098:	xor    DWORD PTR [edx-0x43],esi
  41209b:	std    
  41209c:	popa   
  41209d:	imul   ebx,DWORD PTR [edi+0x4e],0xfef994c9
  4120a4:	arpl   WORD PTR [ecx-0x5e7dfda8],bp
  4120aa:	pushf  
  4120ab:	pushf  
  4120ac:	cmp    ah,ah
  4120ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120af:	xor    al,al
  4120b1:	arpl   WORD PTR [esp+ebp*1+0x7f],ax
  4120b5:	xchg   ebx,eax
  4120b6:	addr16 fwait
  4120b8:	pop    es
  4120b9:	add    bh,cl
  4120bb:	daa    
  4120bc:	ret    0xa626
  4120bf:	(bad)  
  4120c0:	pop    ecx
  4120c1:	xchg   DWORD PTR [edi-0x14],ebp
  4120c4:	sub    ebx,DWORD PTR [eax+0x5a]
  4120c7:	and    esp,DWORD PTR [ebx]
  4120c9:	xchg   ecx,eax
  4120ca:	push   ecx
  4120cb:	pop    ebx
  4120cc:	push   edx
  4120cd:	cli    
  4120ce:	out    0x43,al
  4120d0:	scas   eax,DWORD PTR es:[edi]
  4120d1:	pop    es
  4120d2:	ds sahf 
  4120d4:	inc    eax
  4120d5:	repz mov edx,0x6ba92d7d
  4120db:	ins    BYTE PTR es:[edi],dx
  4120dc:	add    eax,0x3e1c4bc4
  4120e1:	(bad)  
  4120e2:	pop    esp
  4120e3:	jp     0x412097
  4120e5:	call   0x8bbfc691
  4120ea:	mov    al,BYTE PTR [edx]
  4120ec:	sbb    DWORD PTR [edi-0x33],ebp
  4120ef:	and    al,0x46
  4120f1:	dec    ebp
  4120f2:	mov    al,ds:0x8160d4da
  4120f7:	jno    0x41209f
  4120f9:	sbb    eax,0xbcf259e8
  4120fe:	(bad)  
  4120ff:	cmp    eax,0xcb5d5a9d
  412104:	add    eax,0x523f6ba0
  412109:	test   BYTE PTR [ebp+0x76],dh
  41210c:	fld    TBYTE PTR [ebx]
  41210e:	addr16 ret 
  412110:	daa    
  412111:	xor    esp,esi
  412113:	and    esi,ebp
  412115:	pop    ecx
  412116:	xchg   di,ax
  412118:	push   cs
  412119:	inc    esi
  41211a:	mov    edi,DWORD PTR [ecx]
  41211c:	mov    BYTE PTR [ebx+0x5b],0xcc
  412120:	jae    0x412119
  412122:	sbb    edi,DWORD PTR [esi]
  412124:	mov    ch,0x45
  412126:	std    
  412127:	sbb    dh,BYTE PTR [edi]
  412129:	out    dx,eax
  41212a:	adc    al,0x8c
  41212c:	mov    edx,0x186f4d13
  412131:	jle    0x4121a8
  412133:	leave  
  412134:	in     al,dx
  412135:	or     BYTE PTR [ecx-0x5f],dl
  412138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412139:	mov    ebp,0x856ab21b
  41213e:	imul   ebp,DWORD PTR [edx+0x61],0x9a307ca1
  412145:	outs   dx,BYTE PTR ds:[esi]
  412146:	js     0x4120f9
  412148:	mov    DWORD PTR [ebp-0x50],edx
  41214b:	adc    ebx,ebx
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	mov    esi,esi
  412720:	int    0xde
  412722:	push   cs
  412723:	jb     0x4127a0
  412725:	jnp    0x4126fe
  412727:	sahf   
  412728:	jnp    0x4127a5
  41272a:	mov    BYTE PTR [ebp*8-0x7d9897ac],ah
  412731:	jge    0x41277e
  412733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412734:	add    al,0x97
  412736:	cmp    DWORD PTR [ebx+0x7d8fa216],ebp
  41273c:	(bad)  
  41273d:	mov    eax,ds:0x2771983d
  412742:	add    dl,BYTE PTR [esi+0x425d9e82]
  412748:	stc    
  412749:	pop    edx
  41274a:	call   DWORD PTR [edx+0xf81e1e4]
  412750:	mov    edi,0xc8276b17
  412755:	pop    eax
  412756:	arpl   WORD PTR [ebx+0x5d],si
  412759:	lock add al,ah
  41275c:	xchg   ebx,eax
  41275d:	adc    al,0xbd
  41275f:	sub    edx,DWORD PTR [edx]
  412761:	mov    bh,ch
  412763:	ds jmp 0x412729
  412766:	mov    DWORD PTR [ebp-0x7],edx
  412769:	sar    bh,1
  41276b:	pop    edx
  41276c:	shl    BYTE PTR [ecx],cl
  41276e:	call   0x559ddae1
  412773:	sbb    ecx,DWORD PTR [eax-0x74ba5dd9]
  412779:	push   eax
  41277a:	cmp    eax,0x6ba2ab41
  41277f:	mov    dh,0x85
  412781:	mov    ds,WORD PTR [esi-0x31]
  412784:	std    
  412785:	fstp   DWORD PTR [eax-0x54]
  412788:	hlt    
  412789:	call   FWORD PTR [ebx-0x30574289]
  41278f:	mov    ah,0xe7
  412791:	arpl   dx,dx
  412793:	fild   WORD PTR [eax+0x4c11c30b]
  412799:	cmp    DWORD PTR [edi+0x5c453607],0x7a35260f
  4127a3:	mov    ch,0xa7
  4127a5:	int    0xec
  4127a7:	mov    ebp,0xfb4dc41d
  4127ac:	retf   0x9179
  4127af:	push   edx
  4127b0:	cmc    
  4127b1:	outs   dx,BYTE PTR ds:[esi]
  4127b2:	jae    0x41280d
  4127b4:	jne    0x4127d9
  4127b6:	xchg   ebp,eax
  4127b7:	mov    ebx,0xf682219b
  4127bc:	mov    ebx,0x8d45cca4
  4127c1:	js     0x412764
  4127c3:	and    eax,0xecb9a64a
  4127c8:	push   0xf440490d
  4127cd:	ins    BYTE PTR es:[edi],dx
  4127ce:	sbb    dh,BYTE PTR [esi]
  4127d0:	pop    ecx
  4127d1:	jbe    0x41284c
  4127d3:	icebp  
  4127d4:	out    dx,eax
  4127d5:	add    DWORD PTR [esi+0x2e],edi
  4127d8:	int    0x3c
  4127da:	inc    ebp
  4127db:	nop
  4127dc:	rcr    BYTE PTR [eax+0x2c01abbe],cl
  4127e2:	mov    cl,0xcf
  4127e4:	and    BYTE PTR [ebx-0x1e],al
  4127e7:	sbb    BYTE PTR [ebp+0x2b],ch
  4127ea:	and    esp,ebx
  4127ec:	pop    eax
  4127ed:	stc    
  4127ee:	and    eax,0x89a99f91
  4127f3:	jecxz  0x41282d
  4127f5:	sub    DWORD PTR ds:0x1868a41f,0x4c
  4127fc:	or     BYTE PTR [edi],dl
  4127fe:	mov    edx,DWORD PTR [esi-0x41683a0]
  412804:	ret    0x610f
  412807:	cmp    BYTE PTR [ebx+0x66169031],ah
  41280d:	fsubp  st(4),st
  41280f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412810:	loope  0x4127bf
  412812:	sar    DWORD PTR [edx+0x3cb31a44],1
  412818:	cmp    edx,DWORD PTR [ebx-0x2dd84fef]
  41281e:	or     BYTE PTR [ecx],0x41
  412821:	int3   
  412822:	sub    DWORD PTR [ebp-0xc6da154],ebp
  412828:	sahf   
  412829:	inc    ebp
  41282a:	pusha  
  41282b:	mov    ah,0xfd
  41282d:	push   esi
  41282e:	jmp    0x412856
  412830:	jbe    0x412800
  412832:	jns    0x4127e3
  412834:	add    al,0xeb
  412836:	cmc    
  412837:	mov    cl,0xca
  412839:	adc    DWORD PTR [ebx+edi*2],edi
  41283c:	imul   bl
  41283e:	scas   al,BYTE PTR es:[edi]
  41283f:	out    0x10,al
  412841:	(bad)  
  412842:	rcr    DWORD PTR [ecx+0x56],1
  412845:	mov    ch,0xfb
  412847:	retf   0xbaee
  41284a:	cmps   BYTE PTR cs:[si],BYTE PTR es:[di]
  41284d:	mov    ecx,0x80f915e9
  412852:	idiv   cl
  412854:	inc    ecx
  412855:	in     al,0x7a
  412857:	jne    0x4128a6
  412859:	stos   DWORD PTR es:[edi],eax
  41285a:	sbb    DWORD PTR [esi],edi
  41285c:	pop    esp
  41285d:	adc    al,0x2e
  41285f:	mov    bh,0x1a
  412861:	mov    ah,0xb9
  412863:	mov    bh,0xd
  412865:	imul   DWORD PTR [ebp+0x262a4712]
  41286b:	jmp    0x41286d
  41286d:	mov    ebp,0x5c0450d8
  412872:	enter  0x2de2,0x6b
  412876:	jge    0x4128b9
  412878:	out    0xdf,al
  41287a:	mov    eax,0x8089d618
  41287f:	je     0x412838
  412881:	mov    bh,0x89
  412883:	mov    ah,0x1a
  412885:	repz div BYTE PTR [ebx]
  412888:	mov    ebx,0x107ad1d0
  41288d:	inc    esi
  41288e:	imul   BYTE PTR [eax-0xb]
  412891:	adc    eax,0x7d9082a
  412896:	fld    QWORD PTR [eax-0x7e]
  412899:	push   ds
  41289a:	pop    ds
  41289b:	outs   dx,BYTE PTR ds:[esi]
  41289c:	inc    eax
  41289d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289e:	lods   al,BYTE PTR ds:[esi]
  41289f:	or     BYTE PTR [ecx],dl
  4128a1:	int3   
  4128a2:	ins    BYTE PTR es:[edi],dx
  4128a3:	jg     0x412883
  4128a5:	sub    eax,0xecc8e52b
  4128aa:	test   DWORD PTR [edx-0x7c],ecx
  4128ad:	sbb    bl,bh
  4128af:	jmp    0x4128df
  4128b1:	dec    eax
  4128b2:	pop    ecx
  4128b3:	(bad)  
  4128b4:	push   ebx
  4128b5:	(bad)  
  4128b6:	cli    
  4128b7:	fsqrt  
  4128b9:	sti    
  4128ba:	jae    0x4128ac
  4128bc:	gs jl  0x4128dd
  4128bf:	les    ebx,FWORD PTR [esi]
  4128c1:	xchg   edx,eax
  4128c2:	cmp    ecx,DWORD PTR [edi+ebp*8+0x5f7d4973]
  4128c9:	sbb    dl,al
  4128cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128cc:	sbb    BYTE PTR [ebx+ecx*2],ch
  4128cf:	imul   ax,WORD PTR [ecx+edi*8],0x9ca
  4128d5:	mov    ebp,esi
  4128d7:	pushf  
  4128d8:	loope  0x412918
  4128da:	lahf   
  4128db:	add    al,0x39
  4128dd:	rcpps  xmm2,XMMWORD PTR [esi]
  4128e0:	sbb    dl,BYTE PTR [ecx+0x3e1f4299]
  4128e6:	in     al,0xf0
  4128e8:	add    BYTE PTR [edx-0x6f],bh
  4128eb:	in     eax,0x37
  4128ed:	std    
  4128ee:	mov    ah,0x2c
  4128f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128f1:	pop    ecx
  4128f2:	mov    bh,0xf5
  4128f4:	dec    edx
  4128f5:	mov    ds:0x302b1f23,eax
  4128fa:	sub    ebx,edi
  4128fc:	adc    eax,esp
  4128fe:	cmp    edx,ebx
  412900:	ror    BYTE PTR [esi+0x2d5392ae],0xc8
  412907:	add    eax,0xfc1a0727
  41290c:	(bad)  
  41290d:	xor    DWORD PTR [esi],esp
  41290f:	loop   0x41294c
  412911:	ja     0x41293b
  412913:	mov    DWORD PTR [edx],ebx
  412915:	jp     0x412943
  412917:	cmp    BYTE PTR [edi+ebx*1+0x56b872a4],dl
  41291e:	jo     0x412935
  412920:	in     al,0x8c
  412922:	bound  edx,QWORD PTR [esi+0x641b2d46]
  412928:	mov    edi,0x41746f8
  41292d:	mov    ds:0x6d068dc,al
  412932:	sub    al,0x9a
  412934:	and    bh,cl
  412936:	xor    eax,0x97ffd197
  41293b:	fst    DWORD PTR [ecx-0x21]
  41293e:	mov    bh,0x9e
  412940:	lahf   
  412941:	loope  0x412984
  412943:	mov    ebx,gs
  412945:	in     eax,dx
  412946:	pop    es
  412947:	pop    ebx
  412948:	mov    eax,ds:0xd15d10ea
  41294d:	shl    BYTE PTR [ecx+0x47faad67],0xf0
  412954:	aaa    
  412955:	inc    ecx
  412956:	xor    DWORD PTR [ebp-0x46],edx
  412959:	sbb    BYTE PTR [esi],dh
  41295b:	lds    edi,FWORD PTR [ebp-0x457cbf7d]
  412961:	scas   eax,DWORD PTR es:[edi]
  412962:	push   ss
  412963:	ja     0x412957
  412965:	jno    0x4128f3
  412967:	sub    BYTE PTR [ebx-0x5f],al
  41296a:	pusha  
  41296b:	xor    ch,BYTE PTR [esi+0x43e4f160]
  412971:	pop    esp
  412972:	push   edi
  412973:	and    BYTE PTR [ecx-0x48],dl
  412976:	fcomip st,st(5)
  412978:	in     al,dx
  412979:	push   ecx
  41297a:	xchg   al,ah
  41297c:	test   esp,ebp
  41297e:	lods   eax,DWORD PTR ds:[esi]
  41297f:	test   BYTE PTR [eax-0x6a],al
  412982:	cmp    al,0xce
  412984:	cmc    
  412985:	ror    BYTE PTR [esi+0x32],0x16
  412989:	fadd   QWORD PTR [ebp+ecx*1-0x1f]
  41298d:	imul   ecx,DWORD PTR [ebx-0x48],0xffffffb8
  412991:	sbb    eax,0x758cc735
  412996:	imul   edi,DWORD PTR ds:0x856664bc,0x89d60254
  4129a0:	xor    eax,0xf0ba86
  4129a5:	lods   eax,DWORD PTR ds:[esi]
  4129a6:	ins    DWORD PTR es:[edi],dx
  4129a7:	jecxz  0x41294b
  4129a9:	mov    ebp,0xe33d3b49
  4129ae:	xchg   edi,eax
  4129af:	loope  0x412a1b
  4129b1:	cdq    
  4129b2:	frstor [edi+0x5d]
  4129b5:	inc    edx
  4129b6:	mov    al,0xe3
  4129b8:	pop    edi
  4129b9:	pop    edx
  4129ba:	daa    
  4129bb:	loop   0x412a3b
  4129bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129be:	add    ecx,DWORD PTR [ecx+ecx*2-0xc6d25ec]
  4129c5:	ret    0x9f50
  4129c8:	xor    BYTE PTR ds:0x839caf37,al
  4129ce:	dec    edx
  4129cf:	sub    eax,0x6697bdaa
  4129d4:	or     DWORD PTR [edx],0x1c1a18d3
  4129da:	pop    ecx
  4129db:	or     ch,BYTE PTR [ebx+edi*1-0x2]
  4129df:	jne    0x412a60
  4129e1:	pop    esp
  4129e2:	pop    edx
  4129e3:	(bad)  
  4129e4:	repz add eax,0x15766994
  4129ea:	cmp    cl,BYTE PTR [ebx]
  4129ec:	adc    al,0x98
  4129ee:	aad    0x7c
  4129f0:	xor    al,0xe3
  4129f2:	scas   eax,DWORD PTR es:[edi]
  4129f3:	mov    ebp,edi
  4129f5:	fisubr WORD PTR [edx]
  4129f7:	dec    edi
  4129f8:	push   ecx
  4129f9:	mulps  xmm0,XMMWORD PTR [ebx-0x1ad99252]
  412a00:	and    BYTE PTR [ebx],al
  412a02:	add    eax,0x751ae47d
  412a07:	mov    esi,0x6d582a4f
  412a0c:	jecxz  0x412a56
  412a0e:	fs dec esp
  412a10:	pop    ecx
  412a11:	inc    eax
  412a12:	adc    eax,DWORD PTR [edi]
  412a14:	mov    bh,0xd2
  412a16:	icebp  
  412a17:	and    esi,0x9feb380
  412a1d:	mov    cl,BYTE PTR [esp+ebp*1]
  412a20:	out    dx,eax
  412a21:	xor    BYTE PTR [esi+0x690f3642],al
  412a27:	ret    0xcb4
  412a2a:	and    eax,0x29bab93c
  412a2f:	and    BYTE PTR [edx+0x3a],bl
  412a32:	sbb    ch,BYTE PTR ds:[eax+0x25198678]
  412a39:	or     esp,DWORD PTR [ebp-0x55]
  412a3c:	jne    0x412a98
  412a3e:	push   es
  412a3f:	rol    BYTE PTR [edx-0x15],cl
  412a42:	dec    esp
  412a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a44:	sbb    BYTE PTR [edi-0x7f],ch
  412a47:	(bad)  
  412a48:	and    BYTE PTR [ecx-0x7e79fafa],bl
  412a4e:	push   ebx
  412a4f:	adc    ebx,DWORD PTR [edx+0x6e]
  412a52:	retf   0xe002
  412a55:	pop    eax
  412a56:	and    ch,BYTE PTR [edx-0x2c]
  412a59:	mov    cl,BYTE PTR [ecx+0x2a12980e]
  412a5f:	ret    
  412a60:	sbb    bh,BYTE PTR [ecx+0x3570e239]
  412a66:	hlt    
  412a67:	xchg   DWORD PTR [edx+ebx*2+0x242607df],ecx
  412a6e:	mov    al,ds:0x52dd34c5
  412a73:	fld    QWORD PTR [eax]
  412a75:	xchg   ebx,eax
  412a76:	dec    ebp
  412a77:	xchg   ecx,eax
  412a78:	mov    dh,0xb7
  412a7a:	dec    ebp
  412a7b:	(bad)  
  412a7c:	jp     0x412a19
  412a7e:	jg     0x412ae0
  412a80:	(bad)  
  412a81:	int    0x5
  412a83:	lea    eax,ds:0xab4ef31a
  412a89:	xor    BYTE PTR [edi-0x2f],ah
  412a8c:	call   0x12db:0x827c3ff8
  412a93:	sub    DWORD PTR [esi],ecx
  412a95:	or     DWORD PTR [esi],edi
  412a97:	adc    eax,0x7d03acc2
  412a9c:	dec    esp
  412a9d:	push   ebx
  412a9e:	lock dec esi
  412aa0:	xchg   BYTE PTR [esi-0x42],dh
  412aa3:	push   ss
  412aa4:	or     dh,cl
  412aa6:	std    
  412aa7:	jns    0x412a64
  412aa9:	jmp    0x412b01
  412aab:	in     al,dx
  412aac:	aas    
  412aad:	cld    
  412aae:	mov    edx,0x7971f6b4
  412ab3:	pop    ecx
  412ab4:	jle    0x412a90
  412ab6:	cdq    
  412ab7:	and    cl,BYTE PTR [eax+0x33]
  412aba:	retf   
  412abb:	jmp    0x412a77
  412abd:	push   cs
  412abe:	push   0x5b
  412ac0:	lods   eax,DWORD PTR ds:[esi]
  412ac1:	or     DWORD PTR [ecx-0x3df1edb7],eax
  412ac7:	les    eax,FWORD PTR [ecx]
  412ac9:	stc    
  412aca:	jmp    0x58793e4a
  412acf:	and    eax,0x8882c284
  412ad4:	mov    eax,ds:0x97a8b30c
  412ad9:	bound  eax,QWORD PTR ds:0x1461bfab
  412adf:	push   0x935bddcc
  412ae4:	enter  0x9e65,0xee
  412ae8:	out    dx,eax
  412ae9:	fisttp WORD PTR [eax]
  412aeb:	mov    eax,0x9f5e2f1c
  412af0:	mov    esp,0x36bb88c3
  412af5:	push   eax
  412af6:	popa   
  412af7:	shr    DWORD PTR [esp+ebp*1-0x2ded4b8e],1
  412afe:	(bad)  
  412aff:	jns    0x412ad1
  412b01:	xchg   edx,eax
  412b02:	jl     0x412b78
  412b04:	xchg   DWORD PTR [edi-0x22e426a4],eax
  412b0a:	popa   
  412b0b:	sbb    DWORD PTR [ebx],0xffffffdd
  412b0e:	loope  0x412aeb
  412b10:	repnz mov dh,0xf1
  412b13:	xchg   ecx,eax
  412b14:	mov    ebx,0xcfa7cdd4
  412b19:	sbb    dl,ch
  412b1b:	or     DWORD PTR [edx-0x6b],ebx
  412b1e:	or     DWORD PTR [esi+0x6a],ebx
  412b21:	mov    dh,0x31
  412b23:	icebp  
  412b24:	mov    ds:0x64225b27,eax
  412b29:	out    dx,al
  412b2a:	std    
  412b2b:	and    edi,edi
  412b2d:	hlt    
  412b2e:	dec    eax
  412b2f:	push   ecx
  412b30:	pop    ecx
  412b31:	mov    edi,0xa5ad78d4
  412b36:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412b38:	icebp  
  412b39:	test   eax,eax
  412b3b:	cmp    al,0x6c
  412b3d:	and    BYTE PTR [esi+edi*8-0x39235d7],dl
  412b44:	in     al,0x6e
  412b46:	dec    esi
  412b47:	ret    0x7a35
  412b4a:	lds    ebx,FWORD PTR [ecx-0x1a367bed]
  412b50:	cmp    ebx,eax
  412b52:	aaa    
  412b53:	leave  
  412b54:	lahf   
  412b55:	das    
  412b56:	push   ebx
  412b57:	repz imul ecx,DWORD PTR [ecx+0x6c],0x18
  412b5c:	mov    WORD PTR [eax+ebp*4+0x76],cs
  412b60:	loop   0x412b9d
  412b62:	pop    ecx
  412b63:	sar    edx,1
  412b65:	rol    edi,cl
  412b67:	test   eax,0x45f7d0a4
  412b6c:	mov    ah,0xab
  412b6e:	cmp    ecx,DWORD PTR [edi+ebx*1-0x3673888b]
  412b75:	das    
  412b76:	add    BYTE PTR [edi],0x40
  412b79:	mov    al,ds:0xcd04a2cb
  412b7e:	in     eax,dx
  412b7f:	xchg   esi,eax
  412b80:	rcl    DWORD PTR [edx+0x46],cl
  412b83:	retf   0xe18e
  412b86:	arpl   WORD PTR [edx+0x1292606e],ax
  412b8c:	int    0xaf
  412b8e:	jnp    0x412c0e
  412b90:	aas    
  412b91:	push   edi
  412b92:	adc    edx,esp
  412b94:	jnp    0x412c0b
  412b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b97:	into   
  412b98:	inc    ecx
  412b99:	sub    eax,0xb855af20
  412b9e:	mov    dh,0xc0
  412ba0:	fsub   QWORD PTR [esi-0x69eba68]
  412ba6:	(bad)  
  412ba7:	mov    esp,DWORD PTR [eax-0x76]
  412baa:	(bad)  
  412bab:	fld    DWORD PTR [eax+0xc9e1041]
  412bb1:	adc    eax,0x3423af64
  412bb6:	jae    0x412c32
  412bb8:	push   ebx
  412bb9:	stos   BYTE PTR es:[edi],al
  412bba:	(bad)  
  412bbb:	(bad)  
  412bbc:	ja     0x412bbc
  412bbe:	sbb    dh,BYTE PTR ds:0xdb7b8126
  412bc4:	mov    eax,ds:0x8e975282
  412bc9:	cmp    eax,0x88e8d81b
  412bce:	push   cs
  412bcf:	inc    edi
  412bd0:	test   eax,0x481497a8
  412bd5:	data16 clc 
  412bd7:	inc    edx
  412bd8:	daa    
  412bd9:	loop   0x412c31
  412bdb:	ss push 0x30dd9dfc
  412be1:	rol    BYTE PTR [eax-0x2d87bcbe],0x3f
  412be8:	xchg   WORD PTR [ebx+0x9],di
  412bec:	in     al,0x68
  412bee:	pop    ss
  412bef:	test   al,0x3e
  412bf1:	pop    ecx
  412bf2:	push   ebx
  412bf3:	out    dx,al
  412bf4:	lods   eax,DWORD PTR ds:[esi]
  412bf5:	popf   
  412bf6:	add    DWORD PTR [edi-0x3d],edi
  412bf9:	sub    BYTE PTR [ebx-0x2578d59c],dl
  412bff:	or     BYTE PTR [ecx],ah
  412c01:	fbstp  TBYTE PTR [esi]
  412c03:	pop    edx
  412c04:	aad    0x34
  412c06:	mov    DWORD PTR [ebp+0x501a72b5],esi
  412c0c:	adc    esi,ebx
  412c0e:	in     eax,0x35
  412c10:	pop    ecx
  412c11:	sub    al,0xe2
  412c13:	(bad)  
  412c14:	hlt    
  412c15:	pop    ss
  412c16:	adc    al,0x1
  412c18:	pop    ds
  412c19:	mov    al,0xe2
  412c1b:	jg     0x412bf0
  412c1d:	aad    0x26
  412c1f:	xchg   ecx,eax
  412c20:	adc    eax,0xa8d2cf33
  412c25:	(bad)  
  412c26:	and    esi,DWORD PTR [edi]
  412c28:	push   eax
  412c29:	fist   WORD PTR ds:[ebp-0x1ab9134b]
  412c30:	jbe    0x412bf9
  412c32:	fisttp WORD PTR [ecx+0x72]
  412c35:	xchg   BYTE PTR [esi+0x74401fe2],dl
  412c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3c:	out    0x66,al
  412c3e:	pop    esp
  412c3f:	and    eax,0xfd42cb36
  412c44:	ss inc ebx
  412c46:	sub    BYTE PTR [ebx],cl
  412c48:	jge    0x412c95
  412c4a:	retf   
  412c4b:	neg    BYTE PTR [edx+0x7e00c9c9]
  412c51:	sbb    edi,DWORD PTR [ebp+eax*4+0x40]
  412c55:	sahf   
  412c56:	push   esi
  412c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c58:	rol    BYTE PTR [eax+0x7e4c056f],1
  412c5e:	dec    ecx
  412c5f:	sub    edi,ebp
  412c61:	inc    edx
  412c62:	std    
  412c63:	lds    ecx,FWORD PTR [esi+edi*8]
  412c66:	cmp    BYTE PTR [edx-0x39b5c035],dl
  412c6c:	in     eax,0x36
  412c6e:	push   0x8b038043
  412c73:	loope  0x412c7b
  412c75:	loope  0x412c26
  412c77:	mov    edi,0x41400ec9
  412c7c:	dec    esi
  412c7d:	daa    
  412c7e:	push   ebx
  412c7f:	icebp  
  412c80:	cmp    ebx,esi
  412c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c83:	push   0xf17d477c
  412c88:	xor    bh,dl
  412c8a:	shl    DWORD PTR [edi],cl
  412c8c:	in     al,dx
  412c8d:	loopne 0x412c48
  412c8f:	sbb    BYTE PTR gs:[edx],0x9a
  412c93:	sahf   
  412c94:	in     al,dx
  412c95:	in     eax,dx
  412c96:	fdiv   st(5),st
  412c98:	gs jle 0x412cdc
  412c9b:	in     eax,dx
  412c9c:	dec    edi
  412c9d:	scas   eax,DWORD PTR es:[di]
  412c9f:	imul   edx,DWORD PTR [ebp+0x63],0xcb1e5c72
  412ca6:	sahf   
  412ca7:	add    ebp,esp
  412ca9:	sbb    bh,ch
  412cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cac:	or     al,0x66
  412cae:	push   ss
  412caf:	ss jo  0x412d04
  412cb2:	hlt    
  412cb3:	xchg   BYTE PTR ds:0x47f4b489,dl
  412cb9:	std    
  412cba:	jnp    0x412c55
  412cbc:	popa   
  412cbd:	mov    bl,0xd7
  412cbf:	retf   
  412cc0:	aam    0xdf
  412cc2:	enter  0x10b3,0xde
  412cc6:	(bad)  
  412cc7:	adc    eax,0x6c14ac42
  412ccc:	xor    esp,DWORD PTR [ebx]
  412cce:	leave  
  412ccf:	xchg   BYTE PTR [edi-0x23c05826],dl
  412cd5:	scas   al,BYTE PTR es:[edi]
  412cd6:	cwde   
  412cd7:	bnd jl 0x412d3a
  412cda:	jns    0x412caf
  412cdc:	pop    edx
  412cdd:	dec    esp
  412cde:	dec    edi
  412cdf:	outs   dx,BYTE PTR ds:[esi]
  412ce0:	dec    edi
  412ce1:	jns    0x412cba
  412ce3:	mov    ds:0x8cec1bc,al
  412ce8:	popf   
  412ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cea:	jge    0x412d4b
  412cec:	jmp    0x412d67
  412cee:	push   esi
  412cef:	je     0x412ce7
  412cf1:	adc    esi,DWORD PTR [eax-0x30585f00]
  412cf7:	pop    edi
  412cf8:	add    edx,ebp
  412cfa:	lds    ebp,FWORD PTR [esi+0x23]
  412cfd:	push   esi
  412cfe:	rcl    edx,1
  412d00:	imul   edi,DWORD PTR [ebp-0x5f206dbe],0xc27fe28c
  412d0a:	imul   edi,DWORD PTR [eax],0xffffffcf
  412d0d:	jno    0x412cda
  412d0f:	jg     0x412d62
  412d11:	(bad)  
  412d12:	repz jmp 0x7f411e4
  412d18:	out    dx,al
  412d19:	(bad)  
  412d1a:	lods   al,BYTE PTR ds:[esi]
  412d1b:	aas    
  412d1c:	cmp    al,0xc5
  412d1e:	xchg   edx,eax
  412d1f:	icebp  
  412d20:	cmc    
  412d21:	jecxz  0x412ccc
  412d23:	in     eax,0xc9
  412d25:	retf   0xb2c6
  412d28:	or     edi,edi
  412d2a:	(bad)  
  412d2b:	icebp  
  412d2c:	data16 sbb al,0x98
  412d2f:	fwait
  412d30:	xchg   ecx,eax
  412d31:	xchg   edi,eax
  412d32:	repnz mov esi,0x1ff3cee1
  412d38:	retf   0x4feb
  412d3b:	xor    dh,BYTE PTR [esi-0x4f80507d]
  412d41:	mov    ch,0x46
  412d43:	or     DWORD PTR [ebp-0x33],ecx
  412d46:	sub    al,0xb4
  412d48:	scas   al,BYTE PTR es:[edi]
  412d49:	push   eax
  412d4a:	or     ebx,DWORD PTR [edx]
  412d4c:	cs xchg esi,eax
  412d4e:	xor    bl,cl
  412d50:	call   0x619291e0
  412d55:	fldenv [ebx-0x1b]
  412d58:	push   cs
  412d59:	into   
  412d5a:	or     eax,0x7b5d84d
  412d5f:	loop   0x412d7b
  412d61:	pop    edx
  412d62:	out    0x8b,eax
  412d64:	mov    al,0x6c
  412d66:	cmp    bl,BYTE PTR [edi]
  412d68:	enter  0x3973,0x4e
  412d6c:	push   0xb26f6c10
  412d71:	mov    esi,DWORD PTR [ebp+0x5545be81]
  412d77:	pop    ecx
  412d78:	jg     0x412d19
  412d7a:	pop    ebp
  412d7b:	lds    ebx,FWORD PTR [ebx-0x20]
  412d7e:	mov    ds:0x81cba820,al
  412d83:	sbb    ecx,ebx
  412d85:	jns    0x412d63
  412d87:	ds test al,0x98
  412d8a:	shr    DWORD PTR [ebp+0x65],1
  412d8d:	out    dx,eax
  412d8e:	popa   
  412d8f:	push   edi
  412d90:	stos   DWORD PTR es:[edi],eax
  412d91:	lods   al,BYTE PTR ds:[esi]
  412d92:	xchg   ebx,eax
  412d93:	cmp    BYTE PTR [esi],0x86
  412d96:	adc    dh,bl
  412d98:	cmp    bh,ch
  412d9a:	mov    edx,0x332d87b
  412d9f:	ss (bad) 
  412da1:	mov    eax,ds:0x19e1c0cf
  412da6:	sbb    BYTE PTR ds:0x3e9b082e,ah
  412dac:	push   ecx
  412dad:	mov    al,0xc7
  412daf:	test   DWORD PTR [edx],ecx
  412db1:	sahf   
  412db2:	dec    eax
  412db3:	test   DWORD PTR [edx+0x24244972],ecx
  412db9:	pop    eax
  412dba:	pop    esp
  412dbb:	arpl   ax,di
  412dbd:	mov    bh,0xc1
  412dbf:	cld    
  412dc0:	into   
  412dc1:	shl    DWORD PTR [esi],1
  412dc3:	jae    0x412d68
  412dc5:	call   0x6b0b:0x1508ed31
  412dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dcd:	mov    edx,0x17ff85d0
  412dd2:	je     0x412e1b
  412dd4:	jns    0x412d86
  412dd6:	(bad)  
  412dd8:	pop    ecx
  412dd9:	jno    0x412e26
  412ddb:	sti    
  412ddc:	xor    eax,0x119aeb77
  412de1:	sub    eax,0xf04a2f44
  412de6:	xor    eax,0x64cccf8d
  412deb:	les    edi,FWORD PTR [ebp+ecx*8-0x4ca1bca5]
  412df2:	repnz ins BYTE PTR es:[edi],dx
  412df4:	push   eax
  412df5:	lods   eax,DWORD PTR ds:[esi]
  412df6:	adc    ch,cl
  412df8:	ror    DWORD PTR [esi],1
  412dfa:	lods   eax,DWORD PTR ds:[esi]
  412dfb:	popa   
  412dfc:	retf   
  412dfd:	sbb    DWORD PTR [ebx-0x6ade16de],edx
  412e03:	cmc    
  412e04:	(bad)  
  412e05:	adc    ch,dl
  412e07:	stos   BYTE PTR es:[edi],al
  412e08:	cmp    ecx,DWORD PTR [ecx]
  412e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e0b:	jne    0x412e5d
  412e0d:	push   ecx
  412e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e0f:	jae    0x412e00
  412e11:	repz mov eax,ds:0x72848879
  412e17:	or     DWORD PTR [eax+edx*1-0x940a43a],esp
  412e1e:	xor    dh,ch
  412e20:	shl    DWORD PTR [ebx],0x8f
  412e23:	cs jo  0x412e25
  412e26:	(bad)  
  412e27:	daa    
  412e28:	dec    ebp
  412e29:	mov    fs,WORD PTR [esi-0x1d90b846]
  412e2f:	fdivr  DWORD PTR [edx+0x46674684]
  412e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e36:	pushf  
  412e37:	push   eax
  412e38:	jb     0x412ea6
  412e3a:	call   0xaf345316
  412e3f:	cmp    BYTE PTR [edx+0x518d348b],dl
  412e45:	ret    0xd279
  412e48:	mov    ecx,0xeec7ec38
  412e4d:	push   ecx
  412e4e:	push   0xffffffcb
  412e50:	mov    cl,0x94
  412e52:	push   edx
  412e53:	pop    esp
  412e54:	mov    ebp,0xb080c85b
  412e59:	das    
  412e5a:	and    bh,BYTE PTR [eax+eiz*1-0x3c]
  412e5e:	stos   BYTE PTR es:[edi],al
  412e5f:	sub    BYTE PTR [esi],bl
  412e61:	adc    eax,0x91365243
  412e66:	mov    BYTE PTR [si-0x68],bh
  412e6a:	and    al,0xc3
  412e6c:	add    al,0xfb
  412e6e:	stos   BYTE PTR es:[edi],al
  412e6f:	ret    0x8909
  412e72:	outs   dx,BYTE PTR ds:[esi]
  412e73:	icebp  
  412e74:	jl     0x412e63
  412e76:	outs   dx,BYTE PTR ds:[esi]
  412e77:	ds stc 
  412e79:	fadd   QWORD PTR [edi-0x50]
  412e7c:	push   cs
  412e7d:	mov    ch,0xef
  412e7f:	pushf  
  412e80:	cmp    al,0xe6
  412e82:	mov    cl,0xe5
  412e84:	scas   eax,DWORD PTR es:[edi]
  412e85:	ud2    
  412e87:	addr16 nop
  412e89:	pop    esp
  412e8a:	les    ebp,FWORD PTR [eax-0x63]
  412e8d:	rcr    bh,cl
  412e8f:	aas    
  412e90:	test   al,0x5e
  412e92:	mov    ebx,0x26dab530
  412e97:	push   0x561c590d
  412e9c:	test   al,0xf9
  412e9e:	adc    edi,esp
  412ea0:	test   eax,0xfe313fea
  412ea5:	int3   
  412ea6:	rol    BYTE PTR [ecx],1
  412ea8:	inc    esi
  412ea9:	push   edx
  412eaa:	cli    
  412eab:	scas   eax,DWORD PTR es:[edi]
  412eac:	popa   
  412ead:	dec    si
  412eaf:	cmp    al,0xb3
  412eb1:	rol    BYTE PTR [esp+eiz*8],cl
  412eb4:	push   esp
  412eb5:	in     al,0xa3
  412eb7:	jb     0x412ee4
  412eb9:	nop
  412eba:	shr    BYTE PTR [edx],1
  412ebc:	arpl   WORD PTR [ebx],si
  412ebe:	ret    0xd243
  412ec1:	cdq    
  412ec2:	loopne 0x412f0c
  412ec4:	(bad)  
  412ec5:	lock sbb eax,0x9dae7a94
  412ecb:	adc    DWORD PTR [edx-0x3],esp
  412ece:	out    dx,eax
  412ecf:	cmp    eax,0x4539949b
  412ed4:	jb     0x412f52
  412ed6:	aad    0xb1
  412ed8:	sub    al,0x77
  412eda:	or     al,0x2a
  412edc:	rol    edx,0x6b
  412edf:	out    dx,eax
  412ee0:	jl     0x412ec5
  412ee2:	sahf   
  412ee3:	inc    esi
  412ee4:	ror    BYTE PTR [ecx],1
  412ee6:	int    0x66
  412ee8:	mov    ebx,ecx
  412eea:	mov    edi,0x1109906a
  412eef:	add    esp,DWORD PTR [edx]
  412ef1:	or     edx,DWORD PTR [eax-0x66598661]
  412ef7:	inc    ebp
  412ef8:	clc    
  412ef9:	pop    esi
  412efa:	add    BYTE PTR [edx+edx*2+0x65b61b19],0x89
  412f02:	(bad)  
  412f03:	cwde   
  412f04:	scas   eax,DWORD PTR es:[edi]
  412f05:	pusha  
  412f06:	ds pushf 
  412f08:	fs scas eax,DWORD PTR es:[edi]
  412f0a:	dec    esp
  412f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0c:	cdq    
  412f0d:	pop    edi
  412f0e:	int    0x4
  412f10:	pop    ss
  412f11:	push   0x6f
  412f13:	xchg   ebx,eax
  412f14:	call   FWORD PTR [ebp-0x4cb88807]
  412f1a:	sbb    al,0x29
  412f1c:	and    ebp,ecx
  412f1e:	add    al,0xcb
  412f20:	cmp    bl,0x3a
  412f23:	jb     0x412eb9
  412f25:	arpl   WORD PTR [eax-0x7b],bx
  412f28:	fnsave [edx]
  412f2a:	std    
  412f2b:	scas   eax,DWORD PTR es:[edi]
  412f2c:	hlt    
  412f2d:	pop    edx
  412f2e:	jg     0x412f11
  412f30:	sbb    eax,0x133e06d8
  412f35:	cmp    DWORD PTR [esi-0x3b95ea11],0xffffffcf
  412f3c:	in     eax,0x7a
  412f3e:	fsubr  QWORD PTR [edi+0x24]
  412f41:	(bad)  [edx]
  412f43:	jp     0x412f53
  412f45:	stos   DWORD PTR es:[edi],eax
  412f46:	push   esi
  412f47:	loop   0x412ed6
  412f49:	mov    al,BYTE PTR [di]
  412f4c:	(bad)  
  412f4d:	xchg   esp,eax
  412f4e:	inc    ecx
  412f4f:	jae    0x412f9f
  412f51:	xchg   WORD PTR [ebp-0x34b1dae7],ax
  412f58:	pusha  
  412f59:	mov    ah,bh
  412f5b:	inc    ecx
  412f5c:	ret    
  412f5d:	lods   al,BYTE PTR ds:[esi]
  412f5e:	sub    al,0x3c
  412f60:	fnstsw WORD PTR [ebx+edx*8]
  412f63:	jnp    0x412f1a
  412f65:	add    DWORD PTR [eax+esi*2],eax
  412f68:	test   BYTE PTR [eax-0x5a],dl
  412f6b:	mov    WORD PTR [ecx+0x70],fs
  412f6e:	sub    ch,BYTE PTR [ecx+0x5d711882]
  412f74:	mov    bl,0x8f
  412f76:	je     0x412f6a
  412f78:	fnstcw WORD PTR [edx+edi*4]
  412f7b:	or     BYTE PTR [ecx],dl
  412f7d:	dec    ebp
  412f7e:	xchg   ebp,eax
  412f7f:	in     al,dx
  412f80:	stc    
  412f81:	and    WORD PTR [eax-0x7a],0xffc3
  412f86:	mov    bl,BYTE PTR [eax-0x26b91ce5]
  412f8c:	and    eax,0x9e572080
  412f91:	push   edx
  412f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	mov    ah,cl
  412f96:	xor    eax,0x113a7a9d
  412f9b:	sbb    eax,0xcdb1f94c
  412fa0:	inc    edx
  412fa1:	mov    eax,ds:0x84de02a0
  412fa6:	cs aaa 
  412fa8:	leave  
  412fa9:	sti    
  412faa:	xchg   esi,eax
  412fab:	mov    ebp,0x2f73f86d
  412fb0:	sub    DWORD PTR [ecx+0x7d],eax
  412fb3:	xor    edi,DWORD PTR ds:0xbd4a1a5a
  412fb9:	ja     0x412f78
  412fbb:	aad    0x7c
  412fbd:	test   BYTE PTR [ebx-0x7d772942],bl
  412fc3:	test   ebp,0x436d2b46
  412fc9:	rol    DWORD PTR [edi-0x3b],1
  412fcc:	dec    edi
  412fcd:	or     ch,BYTE PTR [eax-0x119f8a91]
  412fd3:	pop    edi
  412fd4:	pop    eax
  412fd5:	jnp    0x413016
  412fd7:	in     al,dx
  412fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd9:	test   eax,0xcc84eabf
  412fde:	inc    ebp
  412fdf:	in     al,0xc
  412fe1:	int3   
  412fe2:	adc    eax,0xdb0ce6ca
  412fe7:	adc    edx,ebp
  412fe9:	pop    edx
  412fea:	inc    edx
  412feb:	jl     0x413055
  412fed:	hlt    
  412fee:	outs   dx,BYTE PTR ds:[esi]
  412fef:	std    
  412ff0:	test   DWORD PTR [edx],edi
  412ff2:	jbe    0x412fb9
  412ff4:	out    dx,al
  412ff5:	push   es
  412ff6:	jo     0x412ff7
  412ff8:	loop   0x412fdf
  412ffa:	xor    al,0xca
  412ffc:	jecxz  0x41302c
  412ffe:	jle    0x413053
  413000:	popf   
  413001:	push   edx
  413002:	mov    ch,0xc7
  413004:	sti    
  413005:	sbb    bh,BYTE PTR [eax-0x11]
  413008:	popa   
  413009:	(bad)  
  41300a:	out    0xff,eax
  41300c:	mov    ds,WORD PTR [ebx-0x29bdb30d]
  413012:	in     eax,dx
  413013:	mov    dh,0x41
  413015:	pop    esi
  413016:	add    ecx,DWORD PTR [eax-0x4c396bfd]
  41301c:	push   ebp
  41301e:	mov    bh,0xb
  413020:	cli    
  413021:	jle    0x412ff3
  413023:	sahf   
  413024:	lods   al,BYTE PTR ds:[esi]
  413025:	xchg   edx,eax
  413026:	fisttp WORD PTR [esi+eax*4-0x6f]
  41302a:	int    0xf8
  41302c:	in     eax,dx
  41302d:	push   edi
  41302e:	and    ch,BYTE PTR [edi+0x59]
  413031:	cmp    eax,0x60af516e
  413036:	cmp    DWORD PTR [esp+ebx*1-0x7071c984],edx
  41303d:	mov    al,0x1
  41303f:	inc    ebp
  413040:	add    BYTE PTR ds:[ecx+0x7a3d4581],0x7b
  413048:	test   BYTE PTR ds:0x4ef3348e,0x5b
  41304f:	mov    edi,0xf2359651
  413054:	rcr    BYTE PTR [edx+0x622b45e8],1
  41305a:	xchg   ebx,eax
  41305b:	icebp  
  41305c:	neg    BYTE PTR ds:0x325290a0
  413062:	push   0xffffffdb
  413064:	fs dec esi
  413066:	jae    0x41306d
  413068:	lods   al,BYTE PTR ds:[esi]
  413069:	or     al,BYTE PTR [edi+edi*4-0x26af908f]
  413070:	bound  ebx,QWORD PTR [esi]
  413072:	out    dx,eax
  413073:	int3   
  413074:	jge    0x413018
  413076:	stos   DWORD PTR es:[edi],eax
  413077:	aad    0x1
  413079:	jnp    0x4130e1
  41307b:	imul   eax,DWORD PTR [eax],0x492c8464
  413081:	jbe    0x41306c
  413083:	mov    ebp,0xe3f7f3bf
  413088:	xor    esp,ebx
  41308a:	pop    esp
  41308b:	xor    esi,ebp
  41308d:	icebp  
  41308e:	cli    
  41308f:	loopne 0x413056
  413091:	out    0xc6,al
  413093:	rcr    BYTE PTR [ecx],1
  413095:	ins    BYTE PTR es:[edi],dx
  413096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413097:	enter  0xd362,0x99
  41309b:	test   esp,0x6873a0dd
  4130a1:	psubusb mm1,QWORD PTR [ebx]
  4130a4:	mov    al,ds:0x73d73627
  4130a9:	fcom   QWORD PTR [ebx]
  4130ab:	sub    DWORD PTR [eax-0x37],0xffffff8c
  4130af:	out    0xd2,eax
  4130b1:	fwait
  4130b2:	pop    esp
  4130b3:	xchg   edx,eax
  4130b4:	test   DWORD PTR [esi],0x3bd01869
  4130ba:	push   eax
  4130bb:	nop
  4130bc:	jg     0x4130cd
  4130be:	push   eax
  4130bf:	pop    eax
  4130c0:	jle    0x41307b
  4130c2:	mov    ch,0xf4
  4130c4:	sub    al,dh
  4130c6:	in     al,dx
  4130c7:	fisttp WORD PTR [edx]
  4130c9:	cmp    esi,ebx
  4130cb:	jo     0x413064
  4130cd:	lods   eax,DWORD PTR ds:[esi]
  4130ce:	adc    BYTE PTR [edx],ch
  4130d0:	ss in  eax,dx
  4130d2:	outs   dx,DWORD PTR ds:[esi]
  4130d3:	mov    ebx,0x320d18f1
  4130d8:	adc    DWORD PTR cs:[esi],edi
  4130db:	ins    BYTE PTR es:[edi],dx
  4130dc:	jnp    0x4130da
  4130de:	xor    al,0xc2
  4130e0:	shl    ch,cl
  4130e2:	ja     0x4130c0
  4130e4:	lea    edx,[esi+esi*8-0x5e50e184]
  4130eb:	mov    edx,0xabd6ef96
  4130f0:	or     eax,0x1b0d48f5
  4130f5:	out    dx,eax
  4130f6:	or     BYTE PTR fs:[esi],ah
  4130f9:	mov    bh,0x70
  4130fb:	sbb    dh,BYTE PTR [eax+ebp*8-0x17]
  4130ff:	and    DWORD PTR ds:0x2cd77666,esp
  413105:	mov    esp,DWORD PTR [edi+0x1be44de3]
  41310b:	in     eax,dx
  41310c:	lahf   
  41310d:	adc    DWORD PTR [ecx],ecx
  41310f:	cli    
  413110:	mov    eax,ebx
  413112:	and    bl,ah
  413114:	jne    0x413126
  413116:	xor    ebp,esp
  413118:	pop    esp
  413119:	xchg   ebx,eax
  41311a:	loope  0x413196
  41311c:	xor    al,0x12
  41311e:	push   ebx
  41311f:	mov    esi,0x3288cac2
  413124:	shr    BYTE PTR ss:[ebx-0x5c],1
  413128:	xchg   esi,eax
  413129:	adc    eax,0x26e854ec
  41312e:	jg     0x413142
  413130:	daa    
  413131:	push   ebx
  413132:	cdq    
  413133:	dec    edx
  413134:	ficom  WORD PTR [eax]
  413136:	cmp    al,0x50
  413138:	push   ds
  413139:	ja     0x4130cd
  41313b:	(bad)  
  41313c:	cli    
  41313d:	xlat   BYTE PTR ds:[ebx]
  41313e:	inc    esi
  41313f:	out    0x48,eax
  413141:	pop    esp
  413142:	mov    bl,0x51
  413144:	pop    edx
  413145:	and    bl,BYTE PTR [esi-0x60]
  413148:	or     BYTE PTR [edi+eax*2+0x1d],ah
  41314c:	pop    edx
  41314d:	mov    bl,0x10
  41314f:	push   eax
  413150:	mov    bl,0xa0
  413152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413153:	mov    dl,0x86
  413155:	jo     0x413157
  413157:	psrld  mm4,QWORD PTR [ebx+0x73]
  41315b:	or     ebp,esp
  41315d:	inc    edi
  41315e:	mov    edx,DWORD PTR [ebp-0x766d41a9]
  413164:	dec    edi
  413165:	repnz push esp
  413167:	sub    DWORD PTR [esi+edx*2+0x43],edi
  41316b:	rcl    DWORD PTR [ebx],1
  41316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41316e:	ret    0xfa17
  413171:	add    al,0xa8
  413173:	imul   esp,ebx,0xad128f8d
  413179:	(bad)  
  41317a:	pop    ds
  41317b:	rol    cl,1
  41317d:	sti    
  41317e:	int    0x6c
  413180:	out    0xd9,eax
  413182:	mov    eax,ds:0xd7bfe5cb
  413187:	jbe    0x413117
  413189:	xchg   bl,ch
  41318b:	out    0x39,eax
  41318d:	call   DWORD PTR ds:0xc93ee109
  413193:	icebp  
  413194:	je     0x41320b
  413196:	jmp    0x4131ce
  413198:	mov    edx,0xacc8e086
  41319d:	repz cmp eax,0xd11d42a0
  4131a3:	mov    eax,ss
  4131a5:	leave  
  4131a6:	jne    0x4131a6
  4131a8:	adc    al,0xcd
  4131aa:	inc    ebx
  4131ab:	das    
  4131ac:	push   esp
  4131ad:	inc    edx
  4131ae:	or     al,0xea
  4131b0:	jnp    0x4131c6
  4131b2:	les    eax,FWORD PTR [ecx]
  4131b4:	mov    cl,0x28
  4131b6:	jmp    0xea73:0x7ddf79a3
  4131bd:	pop    ecx
  4131be:	fdivr  QWORD PTR [ebx+ebx*8-0x2]
  4131c2:	mov    ebx,0x8cc8cdb0
  4131c7:	mov    dh,0x2c
  4131c9:	inc    esp
  4131ca:	push   ecx
  4131cb:	inc    ebx
  4131cc:	push   ds
  4131cd:	sub    DWORD PTR [ebp+0x47],ebx
  4131d0:	inc    esi
  4131d1:	gs iret 
  4131d3:	int    0xd9
  4131d5:	icebp  
  4131d6:	loope  0x4131ec
  4131d8:	sahf   
  4131d9:	xchg   BYTE PTR [ebp-0x15db3525],al
  4131df:	aas    
  4131e0:	gs pop eax
  4131e2:	add    esp,esp
  4131e4:	xchg   esp,eax
  4131e5:	(bad)  
  4131e6:	cmp    DWORD PTR [esi],edx
  4131e8:	jne    0x413183
  4131ea:	js     0x413211
  4131ec:	ret    0xd4be
  4131ef:	mov    ch,ah
  4131f1:	inc    ecx
  4131f2:	ja     0x4131aa
  4131f4:	mov    ds:0xba9cadff,eax
  4131f9:	inc    edx
  4131fa:	std    
  4131fb:	clc    
  4131fc:	cmp    ch,BYTE PTR [ecx]
  4131fe:	(bad)  
  413200:	cwde   
  413201:	pop    esp
  413202:	in     eax,0xd7
  413204:	mov    bh,0x99
  413206:	imul   edx,DWORD PTR [edx+ecx*1-0x1b9a3ab9],0x49
  41320e:	sbb    al,BYTE PTR [ecx]
  413210:	push   ss
  413211:	ins    BYTE PTR es:[edi],dx
  413212:	or     eax,DWORD PTR [edi]
  413214:	adc    edi,DWORD PTR [eax-0x14]
  413217:	mov    WORD PTR [eax],fs
  413219:	lock mov al,0x69
  41321c:	jb     0x413272
  41321e:	(bad)  
  41321f:	mov    edi,0x3acede95
  413224:	sub    dl,dh
  413226:	cdq    
  413227:	adc    cl,0x67
  41322a:	xor    edi,DWORD PTR [eax]
  41322c:	or     al,0x5f
  41322e:	mov    edx,0xd4f97ede
  413233:	and    al,0xec
  413235:	or     BYTE PTR [edx],cl
  413237:	push   ebp
  413238:	hlt    
  413239:	fwait
  41323a:	jo     0x413239
  41323c:	(bad)  
  41323d:	aad    0x3d
  41323f:	cdq    
  413240:	jo     0x413229
  413242:	ins    DWORD PTR es:[edi],dx
  413243:	push   0x5240db49
  413248:	ror    edi,cl
  41324a:	sub    eax,0x1a207e1c
  41324f:	and    edi,esp
  413251:	test   DWORD PTR [ebp+0xe],ecx
  413254:	adc    eax,0x12
  413257:	pop    ss
  413258:	inc    ecx
  413259:	dec    esp
  41325a:	xchg   esi,eax
  41325b:	lock jp 0x413246
  41325e:	nop
  41325f:	lods   al,BYTE PTR ds:[esi]
  413260:	scas   eax,DWORD PTR es:[edi]
  413261:	out    dx,eax
  413262:	int3   
  413263:	repz pop esp
  413265:	ret    
  413266:	paddusw mm1,QWORD PTR [edi-0x666a0ca9]
  41326d:	add    ah,BYTE PTR [ebp+ebx*8+0x2c146427]
  413274:	sbb    eax,DWORD PTR [edi+0x40]
  413277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413278:	in     al,0x87
  41327a:	loope  0x4132c1
  41327c:	(bad)  
  41327d:	jns    0x4132f3
  41327f:	mov    dl,0xce
  413281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413282:	(bad)  [edi-0x51717ff7]
  413288:	adc    eax,0xebb6d59e
  41328d:	cli    
  41328e:	ret    0xb583
  413291:	add    cl,dl
  413293:	adc    DWORD PTR [edi],0xffffff87
  413296:	ja     0x413247
  413298:	cmp    dh,BYTE PTR [edx+0x5b002d2c]
  41329e:	sbb    eax,0x3a2917af
  4132a3:	and    ebp,eax
  4132a5:	add    eax,0xcdf9790
  4132aa:	or     DWORD PTR [edx+eiz*4-0x4eca8a90],esi
  4132b1:	adc    al,0x3
  4132b3:	inc    ebp
  4132b4:	mov    ds:0xc70e9612,eax
  4132b9:	push   esi
  4132ba:	clc    
  4132bb:	sbb    ecx,ebx
  4132bd:	imul   ebp,DWORD PTR [edi+0x6a776e9e],0xaec3af65
  4132c7:	das    
  4132c8:	dec    BYTE PTR [edx]
  4132ca:	cdq    
  4132cb:	mov    BYTE PTR ds:0x93d311,dl
  4132d1:	stos   DWORD PTR es:[edi],eax
  4132d2:	sahf   
  4132d3:	sub    eax,0x17345522
  4132d8:	sbb    eax,0xc90f51d2
  4132dd:	addr16 mov ch,0xb8
  4132e0:	(bad)  
  4132e1:	mov    edi,ebp
  4132e3:	mov    dh,0x67
  4132e5:	and    dl,BYTE PTR [edi]
  4132e7:	int3   
  4132e8:	mov    esi,DWORD PTR [esi+ebp*2+0x6b]
  4132ec:	xchg   ecx,eax
  4132ed:	std    
  4132ee:	test   al,0xf2
  4132f0:	mov    ds:0xafee21be,eax
  4132f5:	popf   
  4132f6:	add    eax,0xf7da9c67
  4132fb:	hlt    
  4132fc:	clc    
  4132fd:	push   ds
  4132fe:	pop    ecx
  4132ff:	repz fwait
  413301:	xor    al,0x91
  413303:	adc    eax,0x7b1e5e36
  413308:	lock out 0x40,eax
  41330b:	lahf   
  41330c:	and    al,0x76
  41330e:	sub    al,0x20
  413310:	dec    ebp
  413311:	icebp  
  413312:	dec    ecx
  413313:	inc    edx
  413314:	add    ch,bh
  413316:	fcmovu st,st(5)
  413318:	add    DWORD PTR [eax],edx
  41331a:	test   DWORD PTR [esi-0x3b89ae9d],ebx
  413320:	rol    BYTE PTR [ecx],1
  413322:	sbb    al,0x54
  413324:	pop    esi
  413325:	jmp    0x78d5:0xf7791fd3
  41332c:	and    BYTE PTR [edi+0x37],dl
  41332f:	mov    eax,ds:0xde4dc92c
  413334:	mov    dl,0x65
  413336:	lea    esi,ds:0x9275155b
  41333c:	sbb    ch,BYTE PTR [edx-0x6101249b]
  413342:	and    eax,0xb802bca3
  413347:	in     al,0x62
  413349:	and    al,0x6d
  41334b:	(bad)  
  41334c:	cld    
  41334d:	mov    WORD PTR [ecx],gs
  41334f:	les    ecx,FWORD PTR [esi+edi*8-0x33cc677c]
  413356:	cmp    BYTE PTR [edx+0x3c8359ea],bl
  41335c:	jne    0x413337
  41335e:	pushf  
  41335f:	push   0xa
  413361:	push   esp
  413362:	lods   eax,DWORD PTR ds:[esi]
  413363:	je     0x413315
  413365:	call   0x6aae3477
  41336a:	inc    edx
  41336b:	(bad)
  41336e:	sbb    BYTE PTR [ebx-0x19],dh
  413371:	ja     0x41338e
  413373:	arpl   WORD PTR [esp+ecx*4+0x44],bp
  413377:	xchg   edi,eax
  413378:	mov    bh,0xa8
  41337a:	and    BYTE PTR [ebp-0x4b],dl
  41337d:	xchg   BYTE PTR [esi+0x4f49a3c1],ah
  413383:	adc    esi,DWORD PTR [esi-0x67359669]
  413389:	call   0x4558:0x196d65
  413390:	rol    DWORD PTR [eax+0x80d0e72],cl
  413396:	push   esi
  413397:	(bad)  
  413398:	mov    esp,0xa79134bb
  41339d:	push   esi
  41339e:	pop    ebx
  41339f:	shl    edx,cl
  4133a1:	test   al,0xa4
  4133a3:	sbb    BYTE PTR [edi],bl
  4133a5:	add    BYTE PTR [ecx],0x1
  4133a8:	push   eax
  4133a9:	cmp    bh,BYTE PTR [ebx+0x6ffd6364]
  4133af:	pop    ecx
  4133b0:	out    0x74,eax
  4133b2:	shld   DWORD PTR [edi+0x76f85472],esp,0xec
  4133ba:	and    BYTE PTR [ebx],ah
  4133bc:	(bad)  
  4133bd:	mov    ds:0xc7c75a61,al
  4133c2:	and    al,0x81
  4133c4:	(bad)  
  4133c5:	mov    dl,0x28
  4133c7:	sub    ecx,ebx
  4133c9:	inc    edi
  4133ca:	mov    ds:0x8b4cd88e,al
  4133cf:	js     0x4133f6
  4133d1:	push   cs
  4133d2:	imul   esp,DWORD PTR [esi+0x653b3cf9],0xffffffd5
  4133d9:	sbb    edx,DWORD PTR [eax+ebp*4-0x4e1cf54]
  4133e0:	pop    edx
  4133e1:	mov    ch,0x26
  4133e3:	mov    esi,0x7201114c
  4133e8:	push   edx
  4133e9:	adc    BYTE PTR [eax+0x12892ff5],al
  4133ef:	jle    0x4133ba
  4133f1:	sub    eax,0x2b99dd64
  4133f6:	inc    esp
  4133f7:	test   BYTE PTR [esi-0x7a],bh
  4133fa:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4133fc:	and    BYTE PTR [ecx+0x41fe0af1],ch
  413402:	cmp    ebp,DWORD PTR [ecx+0x24c56759]
  413408:	lock adc al,0xa1
  41340b:	stos   DWORD PTR es:[edi],eax
  41340c:	int3   
  41340d:	popf   
  41340e:	popa   
  41340f:	aad    0x4e
  413411:	lods   al,BYTE PTR ds:[esi]
  413412:	data16 cmp BYTE PTR [edx+0x2e],0xe9
  413417:	sub    DWORD PTR [edi+esi*2+0x72],ebp
  41341b:	in     al,dx
  41341c:	jbe    0x4133a6
  41341e:	pop    ds
  41341f:	push   esi
  413420:	and    cl,BYTE PTR [esi]
  413422:	xor    eax,0xb8ee9e0f
  413427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413428:	adc    eax,0xc547054c
  41342d:	xlat   BYTE PTR ds:[ebx]
  41342e:	lds    esi,FWORD PTR [edi+0x198c70c0]
  413434:	(bad)  
  413436:	aaa    
  413437:	or     al,0xbd
  413439:	aaa    
  41343a:	(bad)  
  41343b:	fnstenv [ecx+0x1]
  41343e:	pop    esi
  41343f:	xor    ecx,DWORD PTR [ecx-0x393aa2f]
  413445:	or     al,0xcb
  413447:	xor    BYTE PTR [edi],dh
  413449:	mov    ecx,0xc0c0b59b
  41344e:	and    eax,0x5528e6fa
  413453:	and    ah,BYTE PTR [ebp+ebx*1-0x430a7b4d]
  41345a:	cwde   
  41345b:	sub    ah,BYTE PTR [ebx+0x21]
  41345e:	fisub  WORD PTR [eax+0x3b]
  413461:	mov    ebx,0x7a6fc2c9
  413466:	mov    ah,0x6a
  413468:	mov    WORD PTR [eax-0x3576a725],fs
  41346e:	jp     0x413497
  413470:	fisubr WORD PTR [edi-0x55e54086]
  413476:	out    dx,eax
  413477:	sbb    al,0x72
  413479:	adc    al,0x3a
  41347b:	jmp    0x413440
  41347d:	sub    ebx,DWORD PTR ds:0xc7d5e970
  413483:	sbb    edi,eax
  413485:	and    bl,bl
  413487:	sar    DWORD PTR [ebp-0x7b],0x10
  41348b:	aaa    
  41348c:	sub    al,0xca
  41348e:	je     0x41344e
  413490:	int3   
  413491:	bound  ebp,QWORD PTR ds:0x6dffc5f0
  413497:	sbb    esp,esi
  413499:	push   0x0
  41349b:	shl    BYTE PTR [esi+0x260fa3cf],0x41
  4134a2:	sub    eax,0x5641eaf9
  4134a7:	rep ins DWORD PTR es:[edi],dx
  4134a9:	mov    esp,0xbe9cd05f
  4134ae:	mov    edi,0x30dba050
  4134b3:	js     0x4134e9
  4134b5:	jmp    0x9232864b
  4134ba:	leave  
  4134bb:	dec    eax
  4134bc:	push   cs
  4134bd:	and    ah,BYTE PTR [edi-0x65c4beda]
  4134c3:	mov    cl,0x9a
  4134c6:	cmp    edx,DWORD PTR [ecx-0x3477ec84]
  4134cc:	inc    esp
  4134cd:	adc    BYTE PTR [eax],cl
  4134cf:	adc    DWORD PTR ds:0xfe91171,edx
  4134d5:	or     edi,eax
  4134d7:	pop    esp
  4134d8:	ror    BYTE PTR [edi],0x63
  4134db:	call   0xc3e4c9b9
  4134e0:	sub    ebx,ebp
  4134e2:	add    al,0x58
  4134e4:	jmp    0xaab34add
  4134e9:	and    ah,ch
  4134eb:	push   ds
  4134ec:	cmp    eax,DWORD PTR es:[ebp+0x4e]
  4134f0:	test   eax,0x34facd0d
  4134f5:	pop    ecx
  4134f6:	cld    
  4134f7:	dec    esi
  4134f8:	cmp    DWORD PTR [edi+0x79],esp
  4134fb:	mov    edi,DWORD PTR [edi+0x47]
  4134fe:	inc    esi
  4134ff:	pop    edx
  413500:	(bad)  
  413502:	jg     0x41356e
  413504:	iret   
  413505:	out    dx,eax
  413506:	mov    esp,0x4ecc41f5
  41350b:	fadd   st(2),st
  41350d:	add    eax,ebp
  41350f:	xchg   edx,eax
  413510:	inc    esi
  413511:	iret   
  413512:	mov    WORD PTR [ebp-0x40],cs
  413515:	dec    eax
  413516:	inc    edx
  413517:	outs   dx,DWORD PTR ds:[esi]
  413518:	fldcw  WORD PTR [eax]
  41351a:	sbb    eax,0x5e23ceaa
  41351f:	retf   0x7217
  413522:	and    eax,0xeb8522fd
  413527:	cmp    eax,0x64bf8e89
  41352c:	and    BYTE PTR [ebx-0x1a],cl
  41352f:	add    edx,DWORD PTR [esi+0x77b2904e]
  413535:	xchg   ebp,eax
  413536:	mov    edx,0x43a26de6
  41353b:	and    al,0xe2
  41353d:	std    
  41353e:	push   ebx
  41353f:	add    DWORD PTR [esi-0x6b],edi
  413542:	das    
  413543:	and    dl,BYTE PTR [edi]
  413545:	enter  0x8db7,0x6
  413549:	(bad)  
  41354a:	push   ebp
  41354b:	mov    edx,DWORD PTR [esi+edx*2-0x49d71bb1]
  413552:	pop    ds
  413553:	xor    al,0xe3
  413555:	push   ss
  413556:	rcl    DWORD PTR [ebp+0x5b],cl
  413559:	pop    esp
  41355a:	sbb    al,0x98
  41355c:	test   al,0x6f
  41355e:	in     al,0x19
  413560:	mov    dh,0x6b
  413562:	lods   eax,DWORD PTR ds:[esi]
  413563:	pop    ss
  413564:	test   al,0x27
  413566:	retf   
  413567:	fs pop ebx
  413569:	es and eax,0xcb34594e
  41356f:	(bad)  
  413570:	pop    ds
  413571:	lahf   
  413572:	call   0x3b3f:0x20bf0b99
  413579:	not    bh
  41357b:	sbb    eax,0x2407a1d2
  413580:	fidivr WORD PTR [eax+0x44]
  413583:	call   0x89b2cff8
  413588:	std    
  413589:	pop    edx
  41358a:	jo     0x413605
  41358c:	sbb    al,BYTE PTR [edx+0x1afb0b7e]
  413592:	pushf  
  413593:	inc    esp
  413594:	push   ecx
  413595:	scas   eax,DWORD PTR es:[edi]
  413596:	push   edx
  413597:	cmp    esi,DWORD PTR [edx+0x20]
  41359a:	sti    
  41359b:	inc    esp
  41359c:	in     al,dx
  41359d:	daa    
  41359e:	into   
  41359f:	sar    BYTE PTR [eax-0x78],0x41
  4135a3:	retf   
  4135a4:	dec    esp
  4135a5:	inc    edx
  4135a6:	xor    edx,DWORD PTR [ebp+0x5d6762e]
  4135ac:	in     eax,0x8b
  4135ae:	or     al,0xdd
  4135b0:	ins    BYTE PTR es:[edi],dx
  4135b1:	(bad)  
  4135b3:	sbb    dh,ah
  4135b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135b6:	fisubr WORD PTR [ebx]
  4135b8:	mov    BYTE PTR [esi],dh
  4135ba:	loope  0x4135f5
  4135bc:	sub    al,bl
  4135be:	add    WORD PTR cs:[eax-0x2ec8cd78],bx
  4135c6:	popf   
  4135c7:	rol    DWORD PTR [edx],1
  4135c9:	add    DWORD PTR [ecx],0xffffff94
  4135cc:	push   es
  4135cd:	fimul  DWORD PTR [edx]
  4135cf:	jae    0x41364f
  4135d1:	dec    ebx
  4135d2:	std    
  4135d3:	inc    ebp
  4135d4:	and    BYTE PTR [ecx-0xffddbf6],bh
  4135da:	fist   WORD PTR [eax-0x1c]
  4135dd:	shl    al,1
  4135df:	mov    BYTE PTR [ecx],0x9b
  4135e2:	repz shl esi,1
  4135e5:	push   ebx
  4135e6:	or     dh,BYTE PTR [ebx+0x3f]
  4135e9:	ficomp DWORD PTR [eax+0x4f]
  4135ec:	outs   dx,DWORD PTR ds:[esi]
  4135ed:	int3   
  4135ee:	cmp    bh,bl
  4135f0:	or     ebp,DWORD PTR ds:0x26bce4b
  4135f6:	jbe    0x4135ea
  4135f8:	xchg   DWORD PTR [edx+0xf6ec94a],esi
  4135fe:	pusha  
  4135ff:	(bad)  
  413600:	sti    
  413601:	(bad)  
  413602:	mov    eax,0x20ddbf84
  413607:	pop    esi
  413608:	retf   
  413609:	sbb    bl,BYTE PTR [esi+0x3d968855]
  41360f:	mov    WORD PTR [edx+0x73a178b5],?
  413615:	ficomp DWORD PTR [edi-0x15]
  413618:	push   eax
  413619:	retf   
  41361a:	(bad)  
  41361b:	aas    
  41361c:	adc    al,0xa8
  41361e:	cpuid  
  413620:	sbb    al,0x68
  413622:	mov    dl,ah
  413624:	hlt    
  413625:	xchg   DWORD PTR [ebx+0x9],ebx
  413628:	and    BYTE PTR [edx+0x3],dl
  41362b:	xor    dl,BYTE PTR [ecx+0x7d039bd1]
  413631:	stos   BYTE PTR es:[edi],al
  413632:	xchg   edi,eax
  413633:	and    BYTE PTR [eax-0x7a5107b0],ah
  413639:	push   edx
  41363a:	mov    esp,0xcd2e4752
  41363f:	sbb    al,0xf
  413641:	sbb    WORD PTR [edi-0x4bf0382],cx
  413648:	ficomp WORD PTR [eax]
  41364a:	jg     0x4135ef
  41364c:	mov    ah,0xc4
  41364e:	adc    edx,DWORD PTR [esi]
  413650:	fwait
  413651:	in     al,0x52
  413653:	push   eax
  413654:	pop    ebp
  413655:	xor    bh,BYTE PTR [ecx+0x19f865bc]
  41365b:	ds dec edx
  41365d:	mov    ds:0xe660b74b,eax
  413662:	inc    edx
  413663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413664:	sahf   
  413665:	inc    edx
  413666:	push   cs
  413667:	push   eax
  413668:	ins    DWORD PTR es:[edi],dx
  413669:	xor    DWORD PTR [ebp-0x31],esi
  41366c:	into   
  41366d:	jb     0x4135f8
  41366f:	rol    BYTE PTR [edi],0xd1
  413672:	dec    ebx
  413673:	add    DWORD PTR [edx+0x278dfa4f],esi
  413679:	ins    BYTE PTR es:[edi],dx
  41367a:	cli    
  41367b:	sbb    eax,0x954d1f65
  413680:	gs pop eax
  413682:	adc    esp,DWORD PTR [esi+esi*8+0xd16fcb5]
  413689:	jne    0x41364c
  41368b:	xchg   esi,eax
  41368c:	mov    ecx,0xb32faa3
  413691:	jg     0x41370b
  413693:	xor    DWORD PTR [esp+edi*4-0x16fc014b],ecx
  41369a:	dec    ecx
  41369b:	sub    ecx,DWORD PTR [eax-0x499bdaf]
  4136a1:	sti    
  4136a2:	sbb    eax,DWORD PTR [esi]
  4136a4:	bound  ecx,QWORD PTR [ecx]
  4136a6:	sahf   
  4136a7:	xchg   ebp,eax
  4136a8:	sti    
  4136a9:	add    ebp,esp
  4136ab:	jnp    0x4136a7
  4136ad:	sub    edx,esp
  4136af:	shr    DWORD PTR ds:0xe814b3d8,1
  4136b6:	adc    eax,0xaaf3c3e0
  4136bb:	push   esp
  4136bc:	inc    esp
  4136bd:	mov    esi,0xb2384df8
  4136c2:	adc    ebp,esi
  4136c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c5:	inc    ebp
  4136c6:	push   edx
  4136c7:	outs   dx,BYTE PTR ds:[esi]
  4136c8:	add    bh,BYTE PTR [esi+0x34]
  4136cb:	jmp    0x63eca1ce
  4136d0:	mov    ah,0x6f
  4136d2:	xor    eax,0x3be9931b
  4136d7:	fadd   QWORD PTR [eax+0x1c8d65b6]
  4136dd:	data16 jl 0x4136ea
  4136e0:	fisub  DWORD PTR [ebx+0x1f]
  4136e3:	gs xor al,0x6a
  4136e6:	inc    ebx
  4136e7:	fdivrp st(2),st
  4136e9:	je     0x41368f
  4136eb:	js     0x413675
  4136ed:	mov    ebp,0xc002e65e
  4136f2:	inc    eax
  4136f3:	(bad)  
  4136f4:	fmul   QWORD PTR [edx]
  4136f6:	push   ebx
  4136f7:	shl    BYTE PTR [eax+eax*1-0x7f3b9659],0x1
  4136ff:	pop    esp
  413700:	sbb    DWORD PTR [eax-0x56],ebx
  413703:	add    ch,BYTE PTR [ebx+esi*8+0x5c]
  413707:	add    DWORD PTR [ecx-0x4d7d4d6c],ebp
  41370d:	sar    DWORD PTR [edx-0x46],1
  413710:	imul   eax,ecx,0x5304b3c9
  413716:	in     al,0x9e
  413718:	push   eax
  413719:	pop    ebx
  41371a:	fcomp  DWORD PTR cs:[esp+ebp*8]
  41371e:	sbb    al,0xa4
  413720:	inc    ecx
  413721:	rcr    DWORD PTR [edx+0x36],1
  413724:	mov    esi,0x8849cc5d
  413729:	cs mov esp,0x78678d1
  41372f:	imul   ecx,DWORD PTR ds:0xc1f10b37,0xffffffff
  413736:	pop    ecx
  413737:	cdq    
  413738:	fadd   QWORD PTR [ebx+ebx*2+0x9]
  41373c:	outs   dx,DWORD PTR ds:[esi]
  41373d:	dec    eax
  41373e:	inc    eax
  41373f:	into   
  413740:	or     ebx,DWORD PTR [edi]
  413742:	gs cli 
  413744:	jge    0x41374c
  413746:	out    dx,al
  413747:	fidivr WORD PTR [ecx]
  413749:	out    0x33,al
  41374b:	std    
  41374c:	ss add eax,0x76c96f8e
  413752:	test   al,0xbb
  413754:	scas   al,BYTE PTR es:[edi]
  413755:	lods   al,BYTE PTR ds:[esi]
  413756:	mov    edx,0x2feedb0c
  41375b:	ror    DWORD PTR [ebx],0xc4
  41375e:	add    BYTE PTR [ebx+ecx*2+0x4c],0xba
  413763:	ja     0x413730
  413765:	jp     0x413731
  413767:	lea    ebp,[ecx-0x20366c7b]
  41376d:	mov    eax,0x7fc30bf
  413772:	jmp    0x413791
  413774:	push   0xf93c7724
  413779:	xlat   BYTE PTR ds:[ebx]
  41377a:	add    edx,ebx
  41377c:	(bad)  
  41377d:	repnz sbb ah,BYTE PTR [esi-0x33f51a96]
  413784:	adc    ebp,ecx
  413786:	popa   
  413787:	call   0x7280:0x980e45c0
  41378e:	clc    
  41378f:	shr    DWORD PTR [edx+eiz*1-0x434eb128],cl
  413796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413797:	loopne 0x4137fb
  413799:	in     al,0xeb
  41379b:	test   al,0x54
  41379d:	or     al,0x6a
  41379f:	ret    
  4137a0:	es loopne 0x413737
  4137a3:	dec    ebx
  4137a4:	addr16 push ecx
  4137a6:	dec    eax
  4137a7:	inc    ebp
  4137a8:	add    eax,0x3cf9c5a9
  4137ad:	pop    eax
  4137ae:	call   0xe5d71b78
  4137b3:	call   0x363e600b
  4137b8:	mov    es,ebp
  4137ba:	sbb    DWORD PTR ds:0x711899a9,ebx
  4137c0:	ja     0x413786
  4137c2:	mov    eax,0xa0fe27d5
  4137c7:	xor    bl,dl
  4137c9:	sbb    ebx,DWORD PTR [edi+ecx*1-0x3]
  4137cd:	jg     0x4137e8
  4137cf:	push   esi
  4137d0:	mov    dh,0x1e
  4137d2:	mov    ds:0x69ef2a2e,al
  4137d7:	into   
  4137d8:	adc    BYTE PTR [esi-0x24],ch
  4137db:	cmp    ebp,DWORD PTR [eax+0x63]
  4137de:	pop    ecx
  4137df:	add    eax,0x8c2a6b58
  4137e4:	cdq    
  4137e5:	push   edx
  4137e6:	sub    al,0x28
  4137e8:	movsx  edx,WORD PTR [edx-0x133c2fab]
  4137ef:	dec    esi
  4137f0:	push   es
  4137f1:	call   0x3afc:0x4edc009c
  4137f8:	sqrtps xmm7,xmm7
  4137fb:	push   esi
  4137fc:	lods   eax,DWORD PTR ds:[esi]
  4137fd:	(bad)  
  4137fe:	mov    ch,BYTE PTR ds:0xef775402
  413804:	mov    edx,?
  413806:	mov    dh,0x85
  413808:	enter  0xf97e,0x54
  41380c:	sbb    al,0x37
  41380e:	inc    esp
  41380f:	mov    ah,0xa8
  413811:	sub    dl,ch
  413813:	pop    ebx
  413814:	and    dl,cl
  413816:	shl    DWORD PTR [ebp-0x65d9bbad],1
  41381c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41381d:	dec    eax
  41381e:	dec    esi
  41381f:	lds    esi,FWORD PTR [esi+ebp*1+0x1c]
  413823:	cmp    al,0x75
  413825:	jbe    0x41381d
  413827:	adc    ebp,DWORD PTR [eax]
  413829:	int    0x6f
  41382b:	mov    esi,0x1e51095f
  413830:	(bad)
  413834:	loopne 0x413882
  413836:	jne    0x4138ad
  413838:	adc    ecx,esi
  41383a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41383b:	pushf  
  41383c:	jnp    0x413840
  41383e:	popa   
  41383f:	push   edx
  413840:	jns    0x413881
  413842:	mov    al,0x14
  413844:	mov    eax,ds:0x45c247a6
  413849:	jge    0x413816
  41384b:	stos   BYTE PTR es:[edi],al
  41384c:	jg     0x413830
  41384e:	inc    esi
  41384f:	out    0x2d,eax
  413851:	(bad)  
  413853:	iret   
  413854:	adc    bl,cl
  413856:	xor    edx,DWORD PTR [ebx-0x3b853b54]
  41385c:	sbb    ebp,0x66
  41385f:	pop    ecx
  413860:	sbb    bh,BYTE PTR [edi]
  413862:	dec    ebx
  413863:	jnp    0x413891
  413865:	or     al,0x20
  413867:	pop    ebx
  413869:	fst    DWORD PTR [ebp-0x5d]
  41386c:	ds mov dl,0x5b
  41386f:	lea    esi,[ecx+esi*4]
  413872:	retf   
  413873:	pop    eax
  413874:	jnp    0x41386d
  413876:	push   0x88e26000
  41387b:	jne    0x413809
  41387d:	mov    bh,0x9a
  41387f:	mov    edi,0x8648063f
  413884:	scas   eax,DWORD PTR es:[edi]
  413885:	adc    BYTE PTR [edi+0x4733197e],al
  41388b:	fdivr  st,st(6)
  41388d:	cwde   
  41388e:	xlat   BYTE PTR ds:[ebx]
  41388f:	repnz stc 
  413891:	sti    
  413892:	repz lock push ebx
  413895:	lods   eax,DWORD PTR ds:[esi]
  413896:	lea    ecx,[ebx]
  413898:	(bad)  
  413899:	js     0x41383a
  41389b:	cmp    ebp,ebp
  41389d:	lods   al,BYTE PTR ds:[esi]
  41389e:	shl    DWORD PTR [ecx-0x73],1
  4138a1:	mov    BYTE PTR [esi*1+0x6fb474c],dl
  4138a8:	add    DWORD PTR [ebx+0x27],ebx
  4138ab:	push   edi
  4138ac:	fadd   st(6),st
  4138ae:	dec    ebp
  4138af:	jp     0x4138aa
  4138b1:	fisttp WORD PTR [ebx+0x33392bd5]
  4138b7:	cmp    cl,bl
  4138b9:	add    eax,0x9903a92a
  4138be:	add    DWORD PTR [ecx+0x62dfd610],edx
  4138c4:	out    dx,al
  4138c5:	jmp    0x4db7:0x726b2be5
  4138cc:	push   0x17
  4138ce:	or     DWORD PTR [edi-0x8],eax
  4138d1:	(bad)  
  4138d2:	sbb    dh,bh
  4138d4:	add    BYTE PTR [ebp-0x6],cl
  4138d7:	loopne 0x413938
  4138d9:	data16 jge 0x4138f6
  4138dc:	imul   DWORD PTR [ecx-0x55a7c8fd]
  4138e2:	ss sti 
  4138e4:	aaa    
  4138e5:	pop    esp
  4138e6:	push   ecx
  4138e7:	popa   
  4138e8:	addr16 mov edx,0x645623d4
  4138ee:	push   cs
  4138ef:	js     0x413892
  4138f1:	div    ch
  4138f3:	bound  esi,QWORD PTR ds:0xb98f939e
  4138f9:	ret    0x5d9f
  4138fc:	dec    ebp
  4138fd:	jmp    0x41390c
  4138ff:	mov    ebx,0x13264209
  413904:	les    eax,FWORD PTR [esi]
  413906:	(bad)  
  413907:	mov    edx,DWORD PTR ds:0x5f3d1586
  41390d:	lahf   
  41390e:	mov    DWORD PTR [ebx+0x70798961],ebp
  413914:	loopne 0x4138c0
  413916:	sti    
  413917:	dec    esp
  413918:	mov    ebp,esi
  41391a:	loopne 0x4138b0
  41391c:	fist   WORD PTR [ebx-0x41]
  41391f:	cmp    eax,0xac15af86
  413924:	aaa    
  413925:	je     0x4138da
  413927:	arpl   WORD PTR [edx-0xc],bp
  41392a:	mov    dl,0x66
  41392c:	lock stc 
  41392e:	jne    0x41395c
  413930:	in     al,dx
  413931:	adc    edx,DWORD PTR [esi-0x55b9371a]
  413937:	jmp    0x308ea32e
  41393c:	mov    eax,0x11093ca0
  413941:	mov    ebx,0xfb8c9717
  413946:	test   al,0xd6
  413948:	enter  0xf37c,0x4b
  41394c:	xor    eax,0x961e8b13
  413951:	pushf  
  413952:	popa   
  413953:	sbb    bh,cl
  413955:	retf   0x8b0f
  413958:	push   ebx
  413959:	stos   DWORD PTR es:[edi],eax
  41395a:	call   FWORD PTR [ecx]
  41395c:	clc    
  41395d:	lods   eax,DWORD PTR ds:[esi]
  41395e:	jg     0x4139dd
  413960:	xlat   BYTE PTR ds:[ebx]
  413961:	repz or al,0xec
  413964:	call   0xeb8f:0x14afb2d0
  41396b:	jmp    0x4138f8
  41396d:	push   0x398f6226
  413972:	pop    ebp
  413973:	jbe    0x41398a
  413975:	into   
  413976:	add    al,bh
  413978:	adc    eax,0x3a703d77
  41397d:	and    eax,0x50dcac09
  413982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413983:	jmp    0x8dc31df7
  413988:	enter  0xcc5c,0x3d
  41398c:	add    ch,BYTE PTR [edx]
  41398e:	inc    esp
  41398f:	fiadd  DWORD PTR [eax]
  413991:	xchg   BYTE PTR [eax],al
  413993:	push   bx
  413995:	mov    esi,0x699b373b
  41399a:	(bad)  
  41399b:	adc    DWORD PTR [esi+0x61],ebp
  41399e:	lods   al,BYTE PTR ds:[esi]
  41399f:	fisttp WORD PTR [edi-0x5ff4d14e]
  4139a5:	push   ebx
  4139a6:	inc    edi
  4139a7:	loop   0x41394d
  4139a9:	nop
  4139aa:	pop    ds
  4139ab:	jecxz  0x4139cc
  4139ad:	push   0xffffffa9
  4139af:	in     eax,0xa6
  4139b1:	add    DWORD PTR [eax-0x59],0xaeff4663
  4139b8:	xor    dh,ch
  4139ba:	stos   DWORD PTR es:[edi],eax
  4139bb:	dec    ebx
  4139bc:	rcr    DWORD PTR [eax],0x51
  4139bf:	out    0x4c,eax
  4139c1:	mov    ecx,0x75047399
  4139c6:	mov    ah,0x33
  4139c8:	call   FWORD PTR [ebx-0x68]
  4139cb:	push   edx
  4139cc:	sbb    BYTE PTR [esi+ebx*1],ah
  4139cf:	sbb    BYTE PTR [esi],bl
  4139d1:	add    ebx,DWORD PTR [esi+0x3305d2b6]
  4139d7:	xor    eax,0x773745c0
  4139dc:	lds    esp,FWORD PTR [edi+0x78]
  4139df:	cwde   
  4139e0:	and    DWORD PTR [esi+0x22],ecx
  4139e3:	dec    edx
  4139e4:	and    al,0xd5
  4139e6:	cmp    BYTE PTR [esp+ebp*4-0x57d8bfb2],0x59
  4139ee:	mov    DWORD PTR gs:[ecx-0x85a39f0],esi
  4139f5:	sub    BYTE PTR [ebx+0x5b],ah
  4139f8:	arpl   WORD PTR [esi],di
  4139fa:	loopne 0x4139a2
  4139fc:	addr16 data16 jge 0x413a02
  413a00:	hlt    
  413a01:	or     al,0x8c
  413a03:	xchg   ebx,eax
  413a04:	mov    ds:0xb12e0e6a,al
  413a09:	sub    BYTE PTR [ecx],bh
  413a0b:	test   BYTE PTR [edx-0x42],cl
  413a0e:	loope  0x4139d5
  413a10:	faddp  st(3),st
  413a12:	inc    ebp
  413a13:	leave  
  413a14:	popa   
  413a15:	add    eax,0xb838608c
  413a1a:	daa    
  413a1b:	or     BYTE PTR [edi+0x2e3d1510],al
  413a21:	xor    eax,0x534e9df5
  413a26:	jo     0x413a39
  413a28:	or     DWORD PTR [ebx],ecx
  413a2a:	push   0xffffffc2
  413a2c:	mov    al,ds:0x65e698ac
  413a31:	mov    ds:0xdafc3700,eax
  413a36:	inc    eax
  413a37:	pop    ebx
  413a38:	ss jmp 0xa05608b9
  413a3e:	fnstsw WORD PTR [eax-0x3a40057d]
  413a44:	mov    ch,0x88
  413a46:	icebp  
  413a47:	push   ds
  413a48:	aad    0xc8
  413a4a:	or     dh,BYTE PTR [ebp+0x5a]
  413a4d:	sbb    edi,esi
  413a4f:	rol    cl,cl
  413a51:	in     eax,0xcc
  413a53:	enter  0x1573,0xdb
  413a57:	adc    BYTE PTR [ebx+0x73],cl
  413a5a:	pop    esp
  413a5b:	xchg   ecx,eax
  413a5c:	dec    eax
  413a5d:	aaa    
  413a5e:	mov    BYTE PTR [ebp+0x20],bl
  413a61:	push   0x64
  413a63:	add    al,0x61
  413a65:	add    DWORD PTR [ebx-0x7c332512],0x3b6c06e4
  413a6f:	loop   0x413a17
  413a71:	adc    BYTE PTR [edx],ch
  413a73:	or     DWORD PTR [ecx-0x3d],ebp
  413a76:	sub    BYTE PTR [edi+0x34],cl
  413a79:	in     eax,0xfc
  413a7b:	fdivrp st(4),st
  413a7d:	push   ebp
  413a7e:	xor    ch,BYTE PTR [eax]
  413a80:	mov    dh,0xc3
  413a82:	aaa    
  413a83:	pushf  
  413a84:	(bad)  
  413a85:	fld    DWORD PTR [eax-0x5483cb99]
  413a8b:	xchg   DWORD PTR [ebx+0x58],edi
  413a8e:	ror    esi,0x1b
  413a91:	sbb    esi,DWORD PTR [esi-0x1526f6b4]
  413a97:	adc    al,bl
  413a99:	arpl   WORD PTR [ecx-0x8975f38],dx
  413a9f:	pop    ds
  413aa0:	inc    ecx
  413aa1:	sbb    eax,0x4ee41fc9
  413aa6:	cmp    al,0xe1
  413aa8:	push   esi
  413aa9:	jo     0x413a34
  413aab:	add    al,0xa9
  413aad:	shl    BYTE PTR [edi-0x5c7caf76],cl
  413ab3:	push   eax
  413ab4:	call   0xdf17:0x32618a82
  413abb:	pop    edx
  413abc:	xor    al,0x25
  413abe:	xchg   edi,eax
  413abf:	and    cl,dl
  413ac1:	icebp  
  413ac2:	popa   
  413ac3:	ret    
  413ac4:	lock retf 
  413ac6:	jae    0x413a7f
  413ac8:	sbb    DWORD PTR [edi],esp
  413aca:	pusha  
  413acb:	stos   BYTE PTR es:[edi],al
  413acc:	hlt    
  413acd:	clc    
  413ace:	dec    esp
  413acf:	test   al,0x99
  413ad1:	sbb    al,0xc9
  413ad3:	dec    ebp
  413ad4:	mov    edx,0xdbca3d4e
  413ad9:	stos   DWORD PTR es:[edi],eax
  413ada:	jmp    0x413a6c
  413adc:	ins    BYTE PTR es:[edi],dx
  413add:	jg     0x413b0b
  413adf:	pop    ecx
  413ae0:	mov    esi,0xa52d2b98
  413ae5:	sub    ebx,0x53febb8b
  413aeb:	add    BYTE PTR [ebx],bh
  413aed:	and    dl,bl
  413aef:	movzx  esp,WORD PTR [edi+0x75ac4a96]
  413af6:	jne    0x413b3d
  413af8:	fwait
  413af9:	sti    
  413afa:	ja     0x413b54
  413afc:	xor    ebx,DWORD PTR [edi*2-0x18cafd0a]
  413b03:	jb     0x413ae1
  413b05:	dec    ebx
  413b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b07:	jmp    0x413b7a
  413b09:	outs   dx,BYTE PTR ds:[esi]
  413b0a:	sub    BYTE PTR [edx-0x19],bl
  413b0d:	test   eax,0x818afae7
  413b12:	mov    esp,0x50829cec
  413b17:	iret   
  413b18:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413b1a:	jmp    0x1bcda89c
  413b1f:	mov    esp,0x370cdfea
  413b24:	add    dh,al
  413b26:	aam    0x83
  413b28:	gs cmp eax,0xd817ea80
  413b2e:	push   edx
  413b2f:	popa   
  413b30:	add    al,0x69
  413b32:	xor    DWORD PTR [eax-0x2f],esi
  413b35:	fdiv   DWORD PTR [eax]
  413b37:	loope  0x413b93
  413b39:	dec    al
  413b3b:	sub    eax,0xfc2400a6
  413b40:	adc    eax,0x61356763
  413b45:	lahf   
  413b46:	dec    esi
  413b47:	ret    0x9405
  413b4a:	fneni(8087 only) 
  413b4c:	dec    edx
  413b4d:	call   0xc1bdeb54
  413b52:	mov    eax,0x6f2428dc
  413b57:	mov    edx,ebp
  413b59:	outs   dx,BYTE PTR ds:[esi]
  413b5a:	sti    
  413b5b:	and    al,0x9d
  413b5d:	and    eax,0x239f54bc
  413b63:	das    
  413b64:	sub    ecx,DWORD PTR [ebp+0x61925ef7]
  413b6a:	les    edi,FWORD PTR [esi+0x34]
  413b6d:	out    0xa4,eax
  413b6f:	out    dx,al
  413b70:	mov    al,0xd0
  413b72:	push   esp
  413b73:	fcomp  QWORD PTR [ecx-0x12]
  413b76:	in     eax,0x41
  413b78:	add    eax,DWORD PTR [eax]
  413b7a:	ror    ecx,cl
  413b7c:	dec    esp
  413b7d:	sub    DWORD PTR [ebx],esp
  413b7f:	pushf  
  413b80:	(bad)  
  413b81:	lods   eax,DWORD PTR ds:[esi]
  413b82:	push   eax
  413b83:	inc    ebx
  413b84:	xchg   esi,eax
  413b85:	into   
  413b86:	scas   al,BYTE PTR es:[edi]
  413b87:	sbb    edi,DWORD PTR [edx-0x4bc2f354]
  413b8d:	scas   al,BYTE PTR es:[edi]
  413b8e:	xchg   edx,eax
  413b8f:	in     eax,dx
  413b90:	js     0x413b84
  413b92:	add    DWORD PTR [esi-0x22],0x1a
  413b96:	xchg   DWORD PTR [ecx-0x1c],esi
  413b99:	mov    BYTE PTR [eax],0xbc
  413b9c:	loopne 0x413b7f
  413b9e:	jp     0x413b69
  413ba0:	call   0x9cc3ebc2
  413ba5:	hlt    
  413ba6:	sti    
  413ba7:	push   0x26
  413ba9:	dec    esp
  413baa:	fidiv  WORD PTR [eax]
  413bac:	lahf   
  413bad:	call   0x9cc06e0a
  413bb2:	dec    esp
  413bb3:	adc    eax,DWORD PTR [edx+0x6a853a47]
  413bb9:	shl    DWORD PTR [ecx-0x4e],0x5b
  413bbd:	mov    ds:0x57029c8e,al
  413bc2:	sbb    eax,0x1ca4b8ed
  413bc7:	aas    
  413bc8:	push   cs
  413bc9:	loop   0x413b88
  413bcb:	xor    DWORD PTR ds:0x14c74de3,eax
  413bd1:	push   ecx
  413bd2:	(bad)  {k7}
  413bd7:	rol    BYTE PTR [eax],cl
  413bd9:	stc    
  413bda:	inc    edi
  413bdb:	sub    bh,cl
  413bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bde:	push   ebp
  413bdf:	int3   
  413be0:	add    bh,al
  413be2:	call   0x4387:0x24460f84
  413be9:	aam    0x73
  413beb:	add    BYTE PTR [ebx],dl
  413bed:	mov    ah,0x5f
  413bef:	push   es
  413bf0:	push   es
  413bf1:	test   al,0xa0
  413bf3:	or     al,0x9e
  413bf5:	xor    DWORD PTR [esp+eax*8-0x4fedde51],ecx
  413bfc:	hlt    
  413bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bfe:	jp     0x413bfd
  413c00:	ins    BYTE PTR es:[edi],dx
  413c01:	sti    
  413c02:	dec    eax
  413c03:	data16 arpl WORD PTR [esi-0x4d],ax
  413c07:	shr    dl,1
  413c09:	xor    eax,0x30638014
  413c0e:	add    BYTE PTR [ecx+0x442b17be],bh
  413c14:	jmp    0xa43:0xd0893a12
  413c1b:	pusha  
  413c1c:	push   ds
  413c1d:	aaa    
  413c1e:	jmp    0x413c76
  413c20:	or     BYTE PTR [ebx-0x439cdfc9],bh
  413c26:	neg    dl
  413c28:	push   cs
  413c29:	enter  0x6268,0xa7
  413c2d:	je     0x413c1b
  413c2f:	jmp    FWORD PTR [eax+0x449bfce1]
  413c35:	(bad)  
  413c36:	in     al,0x9e
  413c38:	mov    al,ds:0x52e59347
  413c3d:	das    
  413c3e:	or     esi,esp
  413c40:	ret    
  413c41:	retf   0xb54f
  413c44:	xchg   DWORD PTR [edi],ebx
  413c46:	iret   
  413c47:	fbstp  TBYTE PTR [edi]
  413c49:	lea    esi,[edi-0x7caa250e]
  413c4f:	cmp    dl,bl
  413c51:	mov    eax,ds:0xcdea9f70
  413c56:	push   ebx
  413c57:	xlat   BYTE PTR ds:[ebx]
  413c58:	cmp    esi,eax
  413c5a:	mov    ecx,esi
  413c5c:	or     DWORD PTR [edx],ebx
  413c5e:	out    dx,eax
  413c5f:	xor    BYTE PTR [ecx-0x18],ch
  413c62:	cld    
  413c63:	sahf   
  413c64:	sbb    ecx,DWORD PTR [ebp+0x42d5aec7]
  413c6a:	xchg   ebx,eax
  413c6b:	mov    ecx,0x9c137a65
  413c70:	push   esi
  413c71:	sbb    bh,BYTE PTR [eax+eax*2-0x7f]
  413c75:	or     ebp,DWORD PTR [eax-0x5ff45d2]
  413c7b:	adc    DWORD PTR [esi-0x4e],ebp
  413c7e:	xor    DWORD PTR [ebx],ecx
  413c80:	rcl    BYTE PTR [ebp-0x6847cc96],1
  413c86:	outs   dx,DWORD PTR ds:[esi]
  413c87:	bound  edi,QWORD PTR [edx]
  413c89:	js     0x413c27
  413c8b:	push   edi
  413c8c:	mov    cs,WORD PTR [esi]
  413c8e:	loop   0x413ca3
  413c90:	pop    ds
  413c91:	je     0x413c59
  413c93:	test   DWORD PTR [eax+0x4609b760],edx
  413c99:	or     BYTE PTR [edi+ebp*4+0x7c77a4a0],ah
  413ca0:	cmc    
  413ca1:	adc    edx,DWORD PTR [ebp+0x6c]
  413ca4:	pop    esp
  413ca5:	inc    ecx
  413ca6:	jp     0x413c2d
  413ca8:	loopne 0x413c89
  413caa:	ret    
  413cab:	clc    
  413cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cad:	jns    0x413c47
  413caf:	(bad)  
  413cb0:	test   al,0x7b
  413cb2:	ins    BYTE PTR es:[edi],dx
  413cb3:	mov    ebx,0x782089ae
  413cb8:	ret    
  413cb9:	jmp    0x8633:0x9f2c5404
  413cc0:	xor    eax,0x519c00fd
  413cc5:	dec    ebp
  413cc6:	mov    ah,0xe2
  413cc8:	lods   eax,DWORD PTR ds:[esi]
  413cc9:	pushf  
  413cca:	inc    esp
  413ccb:	pop    esi
  413ccc:	jecxz  0x413c6f
  413cce:	push   esp
  413ccf:	fadd   QWORD PTR [eax+0x2053c141]
  413cd5:	fbld   TBYTE PTR [ecx-0x63]
  413cd8:	hlt    
  413cd9:	mov    dh,0x99
  413cdb:	jne    0x413d10
  413cdd:	in     al,dx
  413cde:	int    0xbe
  413ce0:	sbb    eax,0x55485f03
  413ce5:	add    eax,0xb1c40b1f
  413cea:	test   al,0xc7
  413cec:	lods   eax,DWORD PTR ds:[esi]
  413ced:	mov    al,ds:0x838e69dc
  413cf2:	stc    
  413cf3:	and    DWORD PTR [eax+0x11b4fbca],edi
  413cf9:	or     DWORD PTR [esi+0x48],edi
  413cfc:	jns    0x413d14
  413cfe:	sbb    eax,0xe5302d77
  413d03:	repnz add BYTE PTR [edi-0x71b0776a],0x2e
  413d0b:	out    0x3d,eax
  413d0d:	push   ecx
  413d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d0f:	sbb    al,0xc1
  413d11:	adc    DWORD PTR [esp+esi*4+0x78af0512],0xe7a6cf05
  413d1c:	adc    DWORD PTR ds:0x17ae2ead,ebp
  413d22:	jle    0x413cca
  413d24:	das    
  413d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d26:	retf   
  413d27:	mul    ecx
  413d29:	dec    edx
  413d2a:	jle    0x413da0
  413d2c:	inc    edx
  413d2d:	sar    BYTE PTR [ebx+0x2a7556ad],0x9f
  413d34:	add    al,0xb8
  413d36:	dec    edi
  413d37:	in     eax,0xce
  413d39:	xchg   esi,eax
  413d3a:	xor    ebp,DWORD PTR [ecx-0x74669249]
  413d40:	fs retf 
  413d42:	xor    al,0xe5
  413d44:	test   eax,0x1b25f35c
  413d49:	repz dec ebp
  413d4b:	imul   ebx,DWORD PTR ds:0xabe5c41c,0x32
  413d52:	test   ebp,ebx
  413d54:	inc    edi
  413d55:	push   esp
  413d56:	fimul  WORD PTR [edx-0x75bfdef3]
  413d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d5d:	xchg   ecx,eax
  413d5e:	test   eax,0x8f6861ed
  413d63:	in     eax,dx
  413d64:	retf   0xae15
  413d67:	inc    ebp
  413d68:	or     BYTE PTR [ecx+0x77ba7d29],0x1c
  413d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d70:	ja     0x413d4a
  413d72:	inc    eax
  413d73:	pop    ecx
  413d74:	stc    
  413d75:	inc    ebp
  413d76:	dec    esi
  413d77:	pop    esi
  413d78:	and    ch,dh
  413d7a:	in     eax,0xda
  413d7c:	cs dec ecx
  413d7e:	scas   al,BYTE PTR es:[edi]
  413d7f:	xor    edi,edi
  413d81:	jg     0x413d14
  413d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d84:	dec    ecx
  413d85:	sbb    al,0x6c
  413d87:	test   eax,0x3238a632
  413d8c:	data16 cld 
  413d8e:	popf   
  413d8f:	and    DWORD PTR [edx],ecx
  413d91:	sub    BYTE PTR [ebx],0xf8
  413d94:	call   0xf9a9424d
  413d99:	gs test al,0x18
  413d9c:	sahf   
  413d9d:	call   0x624:0x8fc9b6e2
  413da4:	sar    DWORD PTR [edx+0x5a08a859],1
  413daa:	inc    esp
  413dab:	pop    esi
  413dac:	pop    esi
  413dad:	inc    edx
  413dae:	adc    cl,BYTE PTR [ebp+eax*4-0x3b]
  413db2:	fisub  DWORD PTR [edx]
  413db4:	sub    BYTE PTR [edx],bh
  413db6:	pop    ecx
  413db7:	dec    ebp
  413db8:	xor    al,0x76
  413dba:	mul    bh
  413dbc:	jne    0x413e2c
  413dbe:	jp     0x413deb
  413dc0:	inc    ebx
  413dc1:	fcom   QWORD PTR [ecx]
  413dc3:	push   cs
  413dc4:	ins    BYTE PTR es:[edi],dx
  413dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc6:	sbb    ecx,DWORD PTR [ecx]
  413dc8:	in     al,0x50
  413dca:	js     0x413e35
  413dcc:	push   ss
  413dcd:	push   ecx
  413dce:	imul   ebp,DWORD PTR [edx+esi*1],0x76
  413dd2:	jl     0x413d7c
  413dd4:	out    0x7e,al
  413dd6:	das    
  413dd7:	push   0x78059f5c
  413ddc:	ret    
  413ddd:	cmp    eax,0x724f1701
  413de2:	stc    
  413de3:	xchg   DWORD PTR [esi],eax
  413de5:	lds    ecx,FWORD PTR [edx-0x2d]
  413de8:	sar    DWORD PTR [edi-0x7ed52598],cl
  413dee:	push   es
  413def:	clc    
  413df0:	icebp  
  413df1:	cmp    al,0xe7
  413df3:	pop    ds
  413df4:	dec    edx
  413df5:	les    ecx,FWORD PTR [edi]
  413df7:	test   eax,0x5f20f69e
  413dfc:	in     al,dx
  413dfd:	inc    edx
  413dfe:	data16 or bh,dh
  413e01:	pop    esp
  413e02:	pushf  
  413e03:	push   ss
  413e04:	sar    DWORD PTR [edi-0x57],cl
  413e07:	(bad)  
  413e08:	icebp  
  413e09:	pop    ebx
  413e0a:	cmp    eax,DWORD PTR [edx+0x1c]
  413e0d:	lock mov esp,0x652080df
  413e13:	push   ds
  413e14:	lock scas al,BYTE PTR es:[edi]
  413e16:	stos   BYTE PTR es:[edi],al
  413e17:	mov    ah,0xae
  413e19:	add    al,0x86
  413e1b:	xchg   ebp,edx
  413e1d:	fwait
  413e1e:	inc    ecx
  413e1f:	push   esi
  413e20:	push   es
  413e21:	or     eax,0xba590b58
  413e26:	lods   eax,DWORD PTR ds:[esi]
  413e27:	push   es
  413e28:	fnstsw ax
  413e2a:	mov    dl,0xf9
  413e2c:	jp     0x413dbf
  413e2e:	inc    esp
  413e2f:	pop    eax
  413e30:	(bad)  
  413e31:	enter  0xedf4,0x94
  413e35:	adc    eax,0x6bdd9cb9
  413e3a:	inc    edi
  413e3b:	(bad)  
  413e3c:	and    bl,BYTE PTR [ebx+0x56f85505]
  413e42:	xchg   ecx,eax
  413e43:	adc    al,0x99
  413e45:	sbb    BYTE PTR [ebx+0x22367886],al
  413e4b:	mov    ds:0xe2aa4db4,eax
  413e50:	dec    ecx
  413e51:	cmp    al,0xdb
  413e53:	xor    DWORD PTR [ecx+0x5a],ebx
  413e56:	sub    dl,ch
  413e58:	adc    dl,BYTE PTR [ebx-0x69]
  413e5b:	mov    ds:0xe74f46db,al
  413e60:	mov    al,ds:0xf0c70443
  413e65:	push   ss
  413e66:	stos   BYTE PTR es:[edi],al
  413e67:	inc    ebp
  413e68:	imul   esp,DWORD PTR [ecx-0x5ff69ef1],0x3b95d8f4
  413e72:	mov    dl,0x3b
  413e74:	mov    DWORD PTR [edi+0x2d],esi
  413e77:	sbb    al,0x3a
  413e79:	mul    DWORD PTR [edx+0x70ca9f9c]
  413e7f:	dec    eax
  413e80:	inc    ebx
  413e81:	aad    0x63
  413e83:	jno    0x413efe
  413e85:	mov    ebp,DWORD PTR [ecx-0x57f728c2]
  413e8b:	aas    
  413e8c:	sahf   
  413e8d:	into   
  413e8e:	out    0x9a,al
  413e90:	lahf   
  413e91:	mov    ds:0x68587b66,al
  413e96:	xchg   edi,eax
  413e97:	dec    esi
  413e98:	fwait
  413e99:	es popa 
  413e9b:	or     bl,BYTE PTR [ebx-0x76]
  413e9e:	mov    al,0x20
  413ea0:	pop    esp
  413ea1:	sbb    DWORD PTR [eax-0x13],esp
  413ea4:	mov    cl,0x69
  413ea6:	push   ecx
  413ea7:	pop    ds
  413ea8:	arpl   ax,bp
  413eaa:	jmp    0x413e92
  413eac:	ds out dx,eax
  413eae:	mov    gs,WORD PTR [ecx-0x6265cddc]
  413eb4:	pop    es
  413eb5:	dec    ebx
  413eb6:	out    dx,eax
  413eb7:	(bad)  
  413eb8:	in     al,dx
  413eb9:	push   eax
  413eba:	mov    cl,0xf9
  413ebc:	inc    esp
  413ebd:	int    0x42
  413ebf:	div    BYTE PTR [ecx]
  413ec1:	enter  0x68c8,0xe5
  413ec5:	sub    ch,dl
  413ec7:	fwait
  413ec8:	repz in eax,0x87
  413ecb:	dec    edi
  413ecc:	push   esi
  413ecd:	les    edx,FWORD PTR [edx+0xab29276]
  413ed3:	out    dx,eax
  413ed4:	jae    0x413e73
  413ed6:	mov    al,0x99
  413ed8:	cmp    al,0x2b
  413eda:	push   ecx
  413edb:	fimul  DWORD PTR [ebx+0x9193ab5]
  413ee1:	pop    esi
  413ee2:	xor    DWORD PTR [ebx],ebp
  413ee4:	mov    al,ds:0xb1e1f90b
  413ee9:	sbb    ecx,DWORD PTR [esi+0x76be48bd]
  413eef:	pop    esi
  413ef0:	dec    esp
  413ef1:	dec    eax
  413ef2:	sub    al,0x95
  413ef4:	sub    DWORD PTR [ebx-0x634d71a7],ebp
  413efa:	into   
  413efb:	ret    0xee78
  413efe:	push   ss
  413eff:	int3   
  413f00:	ja     0x413ed9
  413f02:	or     eax,0x6f6c1d53
  413f07:	ins    DWORD PTR es:[edi],dx
  413f08:	ins    DWORD PTR es:[edi],dx
  413f09:	mov    BYTE PTR [eax],ch
  413f0b:	sbb    ah,dh
  413f0d:	jge    0x413efe
  413f0f:	test   eax,0x70ed79d2
  413f14:	fld    QWORD PTR [edi-0x23]
  413f17:	fs dec edx
  413f19:	pop    ebp
  413f1a:	cld    
  413f1b:	sub    esi,ebp
  413f1d:	dec    eax
  413f1e:	jmp    0x30b3:0x2150445f
  413f25:	in     al,0xee
  413f27:	je     0x413eb0
  413f29:	out    0xc7,al
  413f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2c:	xchg   ecx,eax
  413f2d:	jmp    0x413f65
  413f2f:	xchg   esi,eax
  413f30:	pop    eax
  413f31:	and    edi,ecx
  413f33:	(bad)  
  413f34:	jge    0x413edf
  413f36:	outs   dx,DWORD PTR ds:[esi]
  413f37:	loopne 0x413f09
  413f39:	or     edx,esi
  413f3b:	add    eax,0xd57593bf
  413f40:	ficomp DWORD PTR [edx]
  413f42:	mov    ebx,0xba96178f
  413f47:	bound  eax,QWORD PTR [ebp+0x5c]
  413f4a:	test   eax,0x98b7a0f0
  413f4f:	mov    bl,0x19
  413f51:	cmp    ebx,edi
  413f53:	iret   
  413f54:	into   
  413f55:	pushf  
  413f56:	xchg   ebx,eax
  413f57:	xlat   BYTE PTR ds:[ebx]
  413f58:	fmul   DWORD PTR [eax+eiz*2+0x41]
  413f5c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5e:	mov    esi,0x5b2e6e1a
  413f63:	cmp    al,0xa0
  413f65:	cmc    
  413f66:	loopne 0x413f14
  413f68:	push   ebx
  413f69:	pop    esp
  413f6a:	jge    0x413f6c
  413f6c:	loop   0x413f72
  413f6e:	xchg   edx,eax
  413f6f:	lods   al,BYTE PTR ds:[esi]
  413f70:	ja     0x413fdd
  413f72:	mov    esi,0x6dce1a94
  413f77:	jg     0x413f04
  413f79:	inc    esi
  413f7a:	xor    esp,DWORD PTR [ebx]
  413f7c:	mov    edx,0x330ff783
  413f81:	and    ebp,DWORD PTR [edi+0x10]
  413f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f85:	adc    cl,bh
  413f87:	sbb    al,al
  413f89:	add    al,0xff
  413f8b:	fadd   st(1),st
  413f8d:	sti    
  413f8e:	fiadd  DWORD PTR [ecx+ecx*8+0x454495b0]
  413f95:	stos   DWORD PTR es:[edi],eax
  413f96:	or     bl,dh
  413f98:	pextrw edx,(bad),0xc5
  413f9a:	push   eax
  413f9b:	sbb    bl,ch
  413f9d:	nop
  413f9e:	arpl   WORD PTR [edx],di
  413fa0:	ja     0x413fd1
  413fa2:	xor    al,0x86
  413fa4:	adc    esi,DWORD PTR [edi-0x2728a95b]
  413faa:	inc    ebp
  413fab:	inc    ebp
  413fac:	lahf   
  413fad:	retf   0x267
  413fb0:	lea    eax,[eax-0x620f1b6e]
  413fb6:	lods   al,BYTE PTR ds:[esi]
  413fb7:	ficom  WORD PTR [ebx+eiz*4]
  413fba:	rcr    DWORD PTR [ebx-0x64],0xf4
  413fbe:	sub    BYTE PTR [ebp-0x75],bl
  413fc1:	mov    ecx,0x8bc4a81b
  413fc6:	jp     0x413f76
  413fc8:	shl    DWORD PTR [esi-0x10],cl
  413fcb:	nop
  413fcc:	(bad)  
  413fcd:	jl     0xcbab307e
  413fd3:	dec    edx
  413fd4:	les    eax,FWORD PTR [eax-0x35]
  413fd7:	mov    al,0x7e
  413fd9:	jne    0x413fe7
  413fdb:	ret    0x5eb9
  413fde:	and    edx,DWORD PTR [edx-0x1f]
  413fe1:	sahf   
  413fe2:	xchg   edi,eax
  413fe3:	shl    ecx,0xc6
  413fe6:	jge    0x414064
  413fe8:	jmp    0x414004
  413fea:	in     eax,0x31
  413fec:	addr16 call 0x82ce:0x8dd8e1de
  413ff4:	mov    eax,ds:0x78f29e3e
  413ff9:	mov    edi,0x291fa0e
  413ffe:	test   al,0x83
  414000:	lea    esp,[edi]
  414002:	pop    ecx
  414003:	push   es
  414004:	pop    ss
  414005:	addr16 jp 0x414053
  414008:	call   0x22d:0xa3655397
  41400f:	push   ebp
  414010:	lds    esi,FWORD PTR [ebx+0xd2c5c94]
  414016:	repz push ebx
  414018:	(bad)  
  414019:	retf   0xee3f
  41401c:	das    
  41401d:	xchg   edi,eax
  41401e:	dec    eax
  41401f:	ss shr bl,1
  414022:	ja     0x41407d
  414024:	lock cmovae ebx,edi
  414028:	xchg   esi,eax
  414029:	outs   dx,DWORD PTR ds:[esi]
  41402a:	lahf   
  41402b:	cdq    
  41402c:	ins    DWORD PTR es:[edi],dx
  41402d:	inc    eax
  41402e:	add    al,0x71
  414030:	sbb    DWORD PTR [esi],0xffffff8f
  414033:	sar    BYTE PTR [ebx],cl
  414035:	jns    0x41400b
  414037:	jne    0x414077
  414039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41403a:	dec    edx
  41403b:	mov    esi,0x8cb54457
  414040:	dec    ebp
  414041:	xchg   esp,eax
  414042:	test   eax,0x9edf734b
  414047:	mov    ebx,0x35591687
  41404c:	mov    dh,0x46
  41404e:	loope  0x41405e
  414050:	mov    BYTE PTR [esp+eax*1+0x23],bl
  414054:	add    DWORD PTR [esi-0x5a],edi
  414057:	pop    ds
  414058:	xor    al,0xd9
  41405a:	adc    DWORD PTR [edx*8+0x1f139b78],0xffffff82
  414062:	je     0x41405d
  414064:	xchg   esi,eax
  414065:	sahf   
  414066:	dec    esi
  414067:	pop    ds
  414068:	ret    0xb8d
  41406b:	mov    ah,0x4a
  41406d:	dec    ebp
  41406e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41406f:	add    edx,DWORD PTR [eax]
  414071:	js     0x4140ef
  414073:	(bad)  cs:[eax+0x26]
  414077:	xor    ecx,DWORD PTR [ecx]
  414079:	stc    
  41407a:	or     BYTE PTR [ebx+0x62],0x3d
  41407e:	popa   
  41407f:	jb     0x4140ca
  414081:	xchg   esp,eax
  414082:	jae    0x4140f1
  414084:	cs add esp,edx
  414087:	mov    ecx,0x1d32fe49
  41408c:	sar    DWORD PTR [ebp+ebp*2+0x51],1
  414090:	add    eax,0x9cb2802a
  414095:	test   al,0x44
  414097:	or     eax,0x239aee62
  41409c:	mov    ecx,0x74234b8d
  4140a1:	popa   
  4140a2:	cdq    
  4140a3:	inc    eax
  4140a4:	aas    
  4140a5:	(bad)  
  4140a6:	shl    bl,1
  4140a8:	dec    edi
  4140a9:	and    cl,0xa3
  4140ac:	pop    esi
  4140ad:	rcr    BYTE PTR [esi],1
  4140af:	and    DWORD PTR [eax+ebp*1],ebp
  4140b2:	push   ebx
  4140b3:	mov    ecx,DWORD PTR [esi]
  4140b5:	sub    eax,0x46e91d5b
  4140ba:	push   0xffffffc4
  4140bc:	das    
  4140bd:	inc    esi
  4140be:	jg     0x4140e4
  4140c0:	cmp    BYTE PTR [edx],cl
  4140c2:	inc    ebx
  4140c3:	ss rdtsc 
  4140c6:	cli    
  4140c7:	jge    0x414063
  4140c9:	inc    eax
  4140ca:	or     eax,0x6caa169b
  4140cf:	or     DWORD PTR [edi+0x33d13d8],esi
  4140d5:	(bad)  
  4140d6:	pop    ss
  4140d7:	cdq    
  4140d8:	popa   
  4140d9:	aas    
  4140da:	pusha  
  4140db:	jno    0x472ed86b
  4140e1:	xchg   ch,al
  4140e3:	sbb    eax,0x7a258be8
  4140e8:	scas   eax,DWORD PTR es:[edi]
  4140e9:	leave  
  4140ea:	in     eax,dx
  4140eb:	stos   BYTE PTR es:[edi],al
  4140ec:	mov    ecx,0x9d618b9e
  4140f1:	popf   
  4140f2:	xchg   DWORD PTR [edx+0x2a],ecx
  4140f5:	jle    0x4140bb
  4140f7:	in     eax,dx
  4140f8:	arpl   WORD PTR [ecx],sp
  4140fa:	in     eax,dx
  4140fb:	or     eax,0xa24b1705
  414100:	jns    0x41408d
  414102:	pop    esi
  414103:	mov    ecx,0xe1fb33ea
  414108:	adc    bh,BYTE PTR [ebx]
  41410a:	mov    eax,ds:0x2590c647
  41410f:	pop    esp
  414110:	adc    BYTE PTR [ebp+0x1f],bh
  414113:	(bad)  
  414114:	(bad)  
  414115:	pushw  ds
  414117:	mov    ch,BYTE PTR [eax+0x7bb5e9ee]
  41411d:	shl    BYTE PTR gs:[ebp-0x26],0xc4
  414122:	out    0x72,al
  414124:	push   ss
  414125:	imul   edx,DWORD PTR [edx-0x64],0x8c9e213c
  41412c:	lahf   
  41412d:	xchg   DWORD PTR [ecx-0x7811922b],ecx
  414133:	sbb    eax,0xdd6a4c0f
  414138:	(bad)  
  414139:	sar    BYTE PTR [bp+di+0x57bd],cl
  41413e:	(bad)  
  41413f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414140:	repz out 0xc9,eax
  414143:	shr    DWORD PTR [eax+0x44],1
  414146:	mov    esi,0x2caf287d
  41414b:	in     eax,dx
  41414c:	out    dx,al
  41414d:	dec    edx
  41414e:	pop    es
  41414f:	popf   
  414150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414151:	in     al,0xc
  414153:	sbb    cl,cl
  414155:	ret    
  414156:	mov    eax,ds:0x96162d6c
  41415b:	repz int 0x41
  41415e:	adc    dl,BYTE PTR [edx+edi*8]
  414161:	add    DWORD PTR [edi-0x1070baf6],ecx
  414167:	mov    ah,0xfc
  414169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41416a:	aas    
  41416b:	enter  0xa6e4,0x1f
  41416f:	push   edi
  414170:	repnz inc esp
  414172:	lods   eax,DWORD PTR ds:[esi]
  414173:	cmp    eax,0x92039350
  414178:	push   es
  414179:	and    al,0xd4
  41417b:	mov    ch,0xd
  41417d:	dec    ebx
  41417e:	pushf  
  41417f:	in     al,dx
  414180:	mov    eax,ds:0xf1d37048
  414185:	ficom  WORD PTR [ecx-0x73]
  414188:	push   ecx
  414189:	nop
  41418a:	shrd   DWORD PTR [esi],ebp,0xb3
  41418e:	mov    al,0x1
  414190:	mov    dl,0x27
  414192:	xchg   ecx,eax
  414193:	inc    ebx
  414194:	bswap  ebp
  414196:	push   ebx
  414197:	fsincos 
  414199:	sbb    edi,DWORD PTR [edx+edx*4]
  41419c:	sbb    ebp,DWORD PTR [ebx-0x45a4d4f1]
  4141a2:	test   DWORD PTR [ebx],edx
  4141a4:	imul   ebx,DWORD PTR [eax+edx*1],0xd
  4141a8:	mov    cl,0x4
  4141aa:	inc    DWORD PTR [eax-0x7d]
  4141ad:	push   edx
  4141ae:	call   0x87af:0x46983740
  4141b5:	(bad)  
  4141b6:	(bad)  
  4141b7:	jmp    0xd46db417
  4141bc:	shl    BYTE PTR [edi],cl
  4141be:	jecxz  0x41418b
  4141c0:	fidivr DWORD PTR [ebx-0x44]
  4141c3:	inc    esp
  4141c4:	hlt    
  4141c5:	xchg   DWORD PTR [edi-0x2b132185],esi
  4141cb:	popf   
  4141cc:	mov    ?,WORD PTR ds:0x61f8fdf3
  4141d2:	xchg   BYTE PTR [edx+0x38b991b4],bh
  4141d8:	mov    ecx,0x4200252b
  4141dd:	inc    edi
  4141de:	iret   
  4141df:	retf   
  4141e0:	mov    edi,DWORD PTR [eax-0x1007d656]
  4141e6:	(bad)  
  4141e7:	fnsave [ebx-0x7]
  4141ea:	jle    0x41420a
  4141ec:	imul   ebp,DWORD PTR ds:0x44dc91e7,0x34a85c86
  4141f6:	fadd   DWORD PTR [edx-0x23502b7b]
  4141fc:	sub    eax,0xe6236631
  414201:	pop    ds
  414202:	mul    ch
  414204:	mov    edi,0x4598f995
  414209:	data16 or dh,BYTE PTR ds:0xbc768aba
  414210:	test   eax,0x116d9e84
  414215:	sub    dl,al
  414217:	mov    edi,0x191e70ab
  41421c:	pusha  
  41421d:	(bad)  
  41421e:	int    0x89
  414220:	dec    ebx
  414221:	stos   BYTE PTR es:[edi],al
  414222:	daa    
  414223:	bound  eax,QWORD PTR [eax-0x4f]
  414226:	mov    dl,0x9b
  414228:	les    edi,FWORD PTR [edi]
  41422a:	dec    DWORD PTR [edx+ebp*8]
  41422d:	xchg   edi,eax
  41422e:	cmp    ebp,DWORD PTR [ecx-0x6480e1f4]
  414234:	mov    bl,BYTE PTR [edx]
  414236:	xor    BYTE PTR [ebp+0x43],cl
  414239:	icebp  
  41423a:	pusha  
  41423b:	into   
  41423c:	and    DWORD PTR [ebx+0x5a],ebx
  41423f:	cmc    
  414240:	out    0x5e,al
  414242:	and    al,BYTE PTR [eax]
  414244:	mov    ebp,0x2011a240
  414249:	(bad)  
  41424a:	jmp    0x4142c0
  41424c:	ja     0x4142b7
  41424e:	movzx  esp,WORD PTR [eax-0x57]
  414252:	call   0xf5d7973b
  414257:	push   ecx
  414258:	lock std 
  41425a:	sub    DWORD PTR [edi],edx
  41425c:	xor    eax,ebx
  41425e:	retf   0x8745
  414261:	jmp    0xa9f2:0xec7c3a97
  414268:	into   
  414269:	push   ds
  41426a:	das    
  41426b:	mov    WORD PTR [edx+0x19],fs
  41426e:	mov    cl,0x6f
  414270:	repnz push es
  414272:	mov    ebx,edx
  414274:	test   al,0x9
  414276:	paddusw mm5,QWORD PTR [ecx-0x61]
  41427a:	aad    0x8d
  41427c:	loopne 0x414288
  41427e:	arpl   sp,sp
  414280:	adc    ah,dl
  414282:	cld    
  414283:	rcl    DWORD PTR ds:0x89b61659,cl
  414289:	mul    DWORD PTR [ebx]
  41428b:	or     dh,al
  41428d:	fild   WORD PTR [ecx+0x33]
  414290:	and    DWORD PTR [edx+edi*8],edi
  414293:	or     al,0x2
  414295:	sbb    ebx,eax
  414297:	xchg   ebx,eax
  414298:	mov    ch,0x6f
  41429a:	cwde   
  41429b:	adc    al,BYTE PTR ds:0x53afd600
  4142a1:	xchg   esi,eax
  4142a2:	sbb    BYTE PTR [ebp+0x7ee5bcb],0x5b
  4142a9:	rol    DWORD PTR [ebx-0x1d],cl
  4142ac:	xchg   ebp,eax
  4142ad:	scas   eax,DWORD PTR es:[edi]
  4142ae:	dec    ebx
  4142af:	jmp    0x414308
  4142b1:	sbb    esp,esp
  4142b3:	fmulp  st(1),st
  4142b5:	push   edx
  4142b6:	mov    ebx,DWORD PTR [ebp-0x1e]
  4142b9:	dec    edi
  4142ba:	sub    DWORD PTR [esi-0x45],ebp
  4142bd:	rol    al,1
  4142bf:	mov    edx,0xbd4b1d1d
  4142c4:	mov    ss,WORD PTR [ebx-0x4f]
  4142c7:	sbb    al,0x49
  4142c9:	inc    eax
  4142ca:	push   DWORD PTR [ebx+0x61]
  4142cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ce:	inc    ecx
  4142cf:	mov    dh,0xeb
  4142d1:	rcl    ebx,0x1f
  4142d4:	retf   
  4142d5:	into   
  4142d6:	or     ecx,DWORD PTR [esi-0x1d]
  4142d9:	cli    
  4142da:	sbb    bh,BYTE PTR [ecx]
  4142dc:	cmp    edx,DWORD PTR [ebp+0x58]
  4142df:	adc    eax,0xb977db8
  4142e4:	loope  0x41433b
  4142e6:	int    0xc5
  4142e8:	retf   0x808e
  4142eb:	lods   eax,DWORD PTR ds:[esi]
  4142ec:	retf   
  4142ed:	cmp    bl,BYTE PTR [ebx]
  4142ef:	cmp    al,0x47
  4142f1:	and    al,0x48
  4142f3:	xchg   esi,eax
  4142f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f5:	jle    0x41432f
  4142f7:	sub    edi,esi
  4142f9:	sbb    DWORD PTR [esi-0x51826e98],esp
  4142ff:	loop   0x414313
  414301:	arpl   WORD PTR [ebp+0x4b],si
  414304:	xor    eax,esi
  414306:	xor    ebx,ecx
  414308:	ficom  WORD PTR [esp+ecx*4]
  41430b:	ret    
  41430c:	jp     0x414378
  41430e:	daa    
  41430f:	mov    ds:0x877c408a,eax
  414314:	cmp    BYTE PTR [edx-0x4b],ch
  414317:	inc    edx
  414318:	and    al,0xfe
  41431a:	jp     0x41432f
  41431c:	push   edi
  41431d:	mov    esp,DWORD PTR [edx]
  41431f:	adc    bh,bh
  414321:	sbb    BYTE PTR [edx+0x45],0x2c
  414325:	int    0x65
  414327:	adc    dl,BYTE PTR [edi]
  414329:	lods   eax,DWORD PTR ds:[esi]
  41432a:	pop    esi
  41432b:	shl    DWORD PTR [esi-0x656f1c45],0x6a
  414332:	dec    esi
  414333:	fidivr WORD PTR [edx-0x66]
  414336:	adc    BYTE PTR [ebx],ch
  414338:	gs adc eax,0x803f2cce
  41433e:	xchg   edi,eax
  41433f:	pop    edx
  414340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414341:	jge    0x4143a4
  414343:	cmp    edi,edi
  414345:	xor    esp,DWORD PTR [esi-0x38806827]
  41434b:	cld    
  41434c:	push   eax
  41434d:	push   esi
  41434e:	push   0xfffffff0
  414350:	icebp  
  414351:	xchg   edi,eax
  414352:	in     eax,0x7c
  414354:	adc    DWORD PTR [ebp+eax*1+0x79],esi
  414358:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41435b:	jmp    0x38a55909
  414360:	stc    
  414361:	xor    edi,DWORD PTR [ecx]
  414363:	popf   
  414364:	aas    
  414365:	dec    ebp
  414366:	popf   
  414367:	lock add al,0x92
  41436a:	sub    eax,0x7006b7aa
  41436f:	mov    edx,DWORD PTR [esi-0x7ae34d55]
  414375:	mov    al,0x9d
  414377:	pop    eax
  414378:	call   0xdf84:0xa8f40892
  41437f:	das    
  414380:	and    al,0x69
  414382:	sti    
  414383:	add    al,0x8d
  414385:	mov    DWORD PTR [ebx],ebx
  414387:	mov    es,WORD PTR [ebp-0xc4d04cc]
  41438d:	adc    DWORD PTR [esi-0x74b5c9e],esp
  414393:	xor    DWORD PTR [ebp+0x59],ecx
  414396:	mov    bl,ah
  414398:	(bad)  
  414399:	adc    al,BYTE PTR [eax-0x22]
  41439c:	push   es
  41439d:	out    0x81,al
  41439f:	lock jecxz 0x414335
  4143a2:	xchg   ecx,eax
  4143a3:	loopne 0x4143eb
  4143a5:	adc    eax,0xf769d49b
  4143aa:	arpl   WORD PTR [esi-0x59caeacc],bx
  4143b0:	into   
  4143b1:	cld    
  4143b2:	or     BYTE PTR [ebx+eiz*1],cl
  4143b5:	pop    ecx
  4143b6:	mov    ecx,0x75d9a6a3
  4143bb:	xchg   ecx,eax
  4143bc:	push   ebp
  4143bd:	rcl    DWORD PTR [eax+eax*8+0x60],1
  4143c1:	pushf  
  4143c2:	or     eax,0x8e5c8661
  4143c7:	jno    0x4143ac
  4143c9:	push   esi
  4143ca:	loope  0x4143cf
  4143cc:	push   edx
  4143cd:	shl    DWORD PTR [edi-0x2074d3aa],0xee
  4143d4:	sbb    al,BYTE PTR [edi-0x63]
  4143d7:	and    esp,edx
  4143d9:	mov    dh,BYTE PTR [ebp+0x4e]
  4143dc:	jmp    0x894f25e3
  4143e1:	ss (bad) fs:[edx+0x66a629b3]
  4143e9:	bound  esp,QWORD PTR [edx-0x785209ef]
  4143ef:	iret   
  4143f0:	call   DWORD PTR [eax+0x62969372]
  4143f6:	aad    0x1
  4143f8:	add    BYTE PTR [edi-0x47555714],cl
  4143fe:	imul   edx,edi,0x29e00c98
  414404:	push   cs
  414405:	xlat   BYTE PTR ds:[ebx]
  414406:	cmp    eax,0x6ad39e70
  41440b:	sbb    al,0x27
  41440d:	inc    esp
  41440e:	and    ch,BYTE PTR [ebp-0x3c5ff40d]
  414414:	or     ch,BYTE PTR [ebx]
  414416:	data16 daa 
  414418:	add    ebp,DWORD PTR [edi-0x72]
  41441b:	add    dl,bl
  41441d:	pop    ebp
  41441e:	mov    ch,0xfa
  414420:	pop    es
  414421:	push   es
  414422:	cmp    ch,BYTE PTR ds:0x64d5d0ab
  414428:	sti    
  414429:	sbb    DWORD PTR [esi-0x1],0xfffffff3
  41442d:	outs   dx,BYTE PTR ds:[esi]
  41442e:	call   0x6b5ad513
  414433:	mov    ebx,edx
  414435:	mov    esi,edi
  414437:	fidiv  WORD PTR [edi]
  414439:	jnp    0x4144a7
  41443b:	std    
  41443c:	and    eax,0x73f750bf
  414441:	xchg   ebp,eax
  414442:	repnz push ss
  414444:	inc    eax
  414445:	xor    eax,DWORD PTR [eax-0x5e255504]
  41444b:	push   eax
  41444c:	pop    edi
  41444d:	adc    BYTE PTR [ebx+0x67],al
  414450:	mov    DWORD PTR [edi],eax
  414452:	sbb    al,0x38
  414454:	mov    al,ds:0x2e16a2f8
  414459:	mov    ebx,DWORD PTR [esi+0x3a]
  41445c:	rcr    BYTE PTR [esi-0x11ea6df0],1
  414462:	push   esi
  414463:	add    al,0xe9
  414465:	inc    esp
  414466:	dec    edx
  414467:	fs jmp 0x7c81:0xc1873993
  41446f:	out    dx,eax
  414470:	sub    al,0x51
  414472:	mov    edx,0x8f149d93
  414477:	jne    0x414420
  414479:	xor    al,0x92
  41447b:	cdq    
  41447c:	fwait
  41447d:	sub    eax,0xb6ceef98
  414482:	cmp    ebp,ecx
  414484:	cmp    DWORD PTR [edx],ebx
  414486:	push   esp
  414487:	jo     0x4144f3
  414489:	test   al,0xcb
  41448b:	imul   ebx,DWORD PTR ds:0xc92f79e5,0xffffffac
  414492:	fcomp  DWORD PTR [edi+0x665541e2]
  414498:	mov    ebx,0xa3b35dc2
  41449d:	popf   
  41449e:	mov    bh,0xa
  4144a0:	sub    al,0xe8
  4144a2:	inc    ebp
  4144a3:	jb     0x4144dc
  4144a5:	inc    ecx
  4144a6:	push   es
  4144a7:	js     0x414471
  4144a9:	dec    eax
  4144aa:	push   es
  4144ab:	sub    eax,0x2792b1d2
  4144b0:	test   ecx,ebp
  4144b2:	je     0x41448c
  4144b4:	jg     0x41444c
  4144b6:	add    BYTE PTR [esi-0x4b],al
  4144b9:	xor    esp,DWORD PTR [edi-0x483477c1]
  4144bf:	and    BYTE PTR [ebx-0x103cfb4a],bl
  4144c5:	jl     0x414468
  4144c7:	dec    esi
  4144c8:	in     eax,0xd6
  4144ca:	ss jb  0x41454b
  4144cd:	mov    dl,0x9f
  4144cf:	cld    
  4144d0:	add    bh,dl
  4144d2:	inc    edx
  4144d3:	and    DWORD PTR [ebx+0x796689a8],ebx
  4144d9:	pop    edi
  4144da:	mov    ebp,0xbb5cfad6
  4144df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e0:	sub    al,0xba
  4144e2:	sub    DWORD PTR [esi+0x34],edi
  4144e5:	test   DWORD PTR ds:0x37d80c06,edx
  4144eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ec:	call   0x9ec78563
  4144f1:	sbb    eax,0x77049f09
  4144f6:	dec    edx
  4144f7:	and    dl,cl
  4144f9:	inc    ebx
  4144fa:	jmp    0x569e:0x37eddb7d
  414501:	push   cs
  414502:	popf   
  414503:	in     eax,0x19
  414505:	fs ds push esi
  414508:	jb     0x41457b
  41450a:	gs cwde 
  41450c:	addr16 adc eax,0x74b54775
  414512:	mov    edi,eax
  414514:	dec    esi
  414515:	jecxz  0x414553
  414517:	(bad)  
  414518:	jno    0x41453b
  41451a:	ds xchg esi,eax
  41451c:	and    DWORD PTR [esi+0x69],ecx
  41451f:	adc    al,0x6a
  414521:	jmp    0x2e8d:0x867cdf31
  414528:	xor    al,0x2a
  41452a:	dec    eax
  41452b:	adc    edx,DWORD PTR [esi]
  41452d:	sbb    eax,0x1f5d7ad8
  414532:	imul   ecx,edi,0x60
  414535:	add    eax,0x3cb75e0d
  41453a:	cmp    al,0x3b
  41453c:	retf   0xe6e0
  41453f:	mov    edx,0x4aab92a3
  414544:	or     BYTE PTR [ebp+0x56],dh
  414547:	aaa    
  414548:	mov    dh,0xdd
  41454a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41454b:	loopne 0x414512
  41454d:	shr    DWORD PTR [eax+0x5a],cl
  414550:	inc    eax
  414551:	push   es
  414552:	pop    ecx
  414553:	pop    ecx
  414554:	jp     0x414551
  414556:	inc    eax
  414557:	arpl   WORD PTR [eax+0x4d],dx
  41455a:	rol    DWORD PTR [edx+0x790e9338],1
  414560:	arpl   WORD PTR [edx+0x7a],bx
  414563:	mov    bh,0x9c
  414565:	rol    DWORD PTR [esi],cl
  414567:	ja     0x41453b
  414569:	add    eax,0x3f6b6105
  41456e:	arpl   WORD PTR [ebx-0x47942081],ax
  414574:	or     eax,0xc7f1ea0e
  414579:	inc    ebx
  41457a:	mov    eax,0x35d1a90b
  41457f:	pop    ds
  414580:	(bad)  
  414581:	aas    
  414582:	sub    al,0xe
  414584:	xor    al,0x97
  414586:	add    eax,0x903f3b33
  41458b:	add    al,0x26
  41458d:	adc    eax,0xeca34ced
  414592:	xchg   ebx,eax
  414593:	cmp    eax,0x56fc9857
  414598:	hlt    
  414599:	aaa    
  41459a:	rol    dl,cl
  41459c:	cmp    edx,DWORD PTR [ebx-0x51]
  41459f:	mov    ah,0xd1
  4145a1:	adc    BYTE PTR [ebx+0x1210fd10],ah
  4145a7:	inc    eax
  4145a8:	push   ds
  4145a9:	inc    esp
  4145aa:	pop    eax
  4145ab:	mov    ch,0x14
  4145ad:	xchg   esi,eax
  4145ae:	jmp    FWORD PTR ss:[ebx+0x0]
  4145b2:	sub    BYTE PTR [eax-0x4d1d76cf],dh
  4145b8:	aad    0xff
  4145ba:	sbb    al,0xea
  4145bc:	in     eax,dx
  4145bd:	(bad)  
  4145be:	and    al,0xa1
  4145c0:	out    dx,al
  4145c1:	mov    esp,0x3bc4ac3d
  4145c6:	jnp    0x414625
  4145c8:	rol    edi,cl
  4145ca:	loope  0x4145ba
  4145cc:	test   al,0xf7
  4145ce:	test   DWORD PTR [ecx-0x31],esp
  4145d1:	hlt    
  4145d2:	cmp    eax,0x4bc67d1f
  4145d7:	jb     0x414618
  4145d9:	cld    
  4145da:	shl    DWORD PTR [esi+0x5f],cl
  4145dd:	mov    dh,0x2a
  4145df:	push   ebx
  4145e0:	std    
  4145e1:	inc    esp
  4145e2:	lock fild DWORD PTR [ebx]
  4145e5:	retf   
  4145e6:	xchg   ecx,eax
  4145e7:	sub    al,dl
  4145e9:	xor    eax,0xd126a706
  4145ee:	inc    ebx
  4145ef:	adc    al,0x73
  4145f1:	pusha  
  4145f2:	in     al,0x92
  4145f4:	xchg   BYTE PTR [esi-0x74],ch
  4145f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145f8:	lock mov cl,0xe7
  4145fb:	and    BYTE PTR [edx+0x1c],al
  4145fe:	jmp    0x5ca0c93a
  414603:	(bad)  
  414604:	aad    0x8e
  414606:	mov    cl,0xbf
  414608:	inc    ebp
  414609:	and    BYTE PTR [edi-0x2c5a9826],dh
  41460f:	jge    0x4145e3
  414611:	push   esi
  414612:	ss sbb eax,0x271e1377
  414618:	and    BYTE PTR [edi+eax*1],0xb8
  41461c:	inc    edx
  41461d:	lahf   
  41461e:	mov    esp,0xf12ca1f4
  414623:	xchg   DWORD PTR [edi-0x20],eax
  414626:	push   edx
  414627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414628:	xor    al,0xea
  41462a:	ficom  WORD PTR [ebp-0x3]
  41462d:	pop    edx
  41462e:	push   eax
  41462f:	push   eax
  414630:	add    BYTE PTR [eax+0x47],0xa8
  414634:	or     al,0x23
  414636:	pop    ss
  414637:	lea    esi,[ebx+0x32]
  41463a:	cli    
  41463b:	inc    ebx
  41463c:	test   eax,0xeeea2488
  414641:	shl    ah,1
  414643:	(bad)  
  414644:	push   esp
  414645:	sub    DWORD PTR [edx+ebp*8],edi
  414648:	mov    ebp,0xb1e3c98a
  41464d:	mov    BYTE PTR [ecx],dh
  41464f:	and    BYTE PTR [edx],dl
  414651:	aam    0xc9
  414653:	inc    ebx
  414654:	sub    al,bh
  414656:	inc    esp
  414657:	sub    ebp,DWORD PTR [ebx+ecx*1+0x3e9d7eb]
  41465e:	cmp    bl,dl
  414660:	popa   
  414661:	inc    eax
  414662:	inc    esi
  414663:	and    DWORD PTR [ecx],ebp
  414665:	xchg   ebx,eax
  414666:	loopne 0x4146cf
  414668:	aaa    
  414669:	les    edx,FWORD PTR [ebx-0xe]
  41466c:	popf   
  41466d:	in     al,0xf8
  41466f:	sub    al,ah
  414671:	mov    ecx,0xe5017124
  414676:	xor    eax,0xbbec9dd6
  41467b:	(bad)  
  41467c:	repz cmp DWORD PTR [esp+ebp*2+0x34],edx
  414681:	test   eax,0xd218787d
  414686:	and    edx,ecx
  414688:	cld    
  414689:	imul   ebp,edx,0x62
  41468c:	push   ecx
  41468d:	or     edx,DWORD PTR [ecx+0x679183f7]
  414693:	out    0x5b,eax
  414695:	in     al,dx
  414696:	dec    ebp
  414697:	adc    eax,0x15a9151f
  41469c:	mov    BYTE PTR [edx+0x59],dh
  41469f:	dec    ebp
  4146a0:	dec    eax
  4146a1:	test   eax,0x4eaa2f57
  4146a6:	inc    ebp
  4146a7:	adc    al,0x33
  4146a9:	inc    ebp
  4146aa:	int    0x3c
  4146ac:	call   0x1d6b3c0c
  4146b1:	int    0xa8
  4146b3:	call   0x14e4:0x547bc659
  4146ba:	in     al,dx
  4146bb:	mov    eax,0x4f012b26
  4146c0:	repz sbb al,0x17
  4146c3:	push   ds
  4146c4:	popa   
  4146c5:	mov    ds:0xbdfb7f1a,eax
  4146ca:	les    ebp,FWORD PTR ss:[esi+0x6925d745]
  4146d1:	push   0xffffffd5
  4146d3:	and    al,0x0
  4146d5:	mov    ah,0x46
  4146d7:	icebp  
  4146d8:	rcr    eax,1
  4146da:	(bad)  
  4146dc:	add    DWORD PTR [ebx],0x4f8a7858
  4146e2:	pop    ds
  4146e3:	and    al,0x77
  4146e5:	pushf  
  4146e6:	sbb    esp,0x11
  4146e9:	mov    fs,WORD PTR [edx-0xdbf81d3]
  4146ef:	sbb    eax,0xba914ad0
  4146f4:	lods   al,BYTE PTR ds:[esi]
  4146f5:	imul   eax,DWORD PTR [ecx+0xdc2df1d],0xffffffcc
  4146fc:	adc    ch,al
  4146fe:	(bad)  
  4146ff:	fsubr  QWORD PTR [edx-0x4a]
  414702:	cmp    eax,0xa80a1c90
  414707:	jo     0x414751
  414709:	aaa    
  41470a:	add    cl,BYTE PTR [ecx+0x3f]
  41470d:	mov    ebp,eax
  41470f:	mov    edi,0x1214c812
  414714:	inc    eax
  414715:	mov    dl,0x6e
  414717:	shr    DWORD PTR [edi-0x80],1
  41471a:	jo     0x4146b2
  41471c:	inc    DWORD PTR [edx-0x646e5d13]
  414722:	inc    eax
  414723:	mov    eax,0x9530ab7c
  414728:	sbb    dl,BYTE PTR [esi+0x52d470eb]
  41472e:	adc    BYTE PTR [edi+edi*8-0x4c0d0f86],0x45
  414736:	or     bl,ch
  414738:	jb     0x414720
  41473a:	push   ecx
  41473b:	inc    eax
  41473c:	out    dx,eax
  41473d:	push   ebp
  41473e:	(bad)  
  41473f:	stc    
  414740:	add    ebx,DWORD PTR [ebp+edx*2-0x16a019cf]
  414747:	xor    eax,0x13b9ffc2
  41474c:	ds ret 0xf779
  414750:	mov    WORD PTR ds:0xec2cb0ca,?
  414756:	aam    0x80
  414758:	mov    ebp,ebp
  41475a:	scas   al,BYTE PTR es:[edi]
  41475b:	fild   DWORD PTR [ecx+0x4f]
  41475e:	shl    ebp,cl
  414760:	(bad)  
  414761:	xor    ecx,DWORD PTR [eax-0x4]
  414764:	fucomp st(7)
  414766:	pop    edi
  414767:	sub    edi,edi
  414769:	inc    edi
  41476a:	out    dx,al
  41476b:	push   es
  41476c:	ins    BYTE PTR es:[edi],dx
  41476d:	call   0x6331fade
  414772:	imul   esp,edx,0xfacf8d22
  414778:	pop    ebx
  414779:	je     0x414773
  41477b:	icebp  
  41477c:	ret    
  41477d:	mov    ch,0xce
  41477f:	ds hlt 
  414781:	mov    ds:0x2ebb4374,eax
  414786:	daa    
  414787:	mov    dh,BYTE PTR [ecx]
  414789:	pop    ebp
  41478a:	mov    bh,0x42
  41478c:	lods   eax,DWORD PTR ds:[esi]
  41478d:	pop    esi
  41478e:	mov    ebp,0x7aa3754a
  414793:	mov    ds:0x2af224d1,eax
  414798:	inc    edx
  414799:	in     eax,0xee
  41479b:	jmp    0x3524b81d
  4147a0:	fistp  WORD PTR [edi-0x47]
  4147a3:	cmp    eax,0xdfdc8e53
  4147a8:	shl    DWORD PTR [ebx+0x3600ca64],cl
  4147ae:	ret    
  4147af:	mov    edi,0x4103df56
  4147b4:	mov    eax,DWORD PTR [ebp+0x51]
  4147b7:	(bad)  
  4147b9:	mov    al,bh
  4147bb:	es push ds
  4147bd:	jae    0x4147d9
  4147bf:	shl    edi,0xc7
  4147c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147c3:	sbb    dl,dl
  4147c5:	mov    cl,0x89
  4147c7:	mov    bl,BYTE PTR [ebp-0x1c]
  4147ca:	pushf  
  4147cb:	or     DWORD PTR [edi+edx*1-0x25],esi
  4147cf:	or     ch,BYTE PTR [edx-0x69]
  4147d2:	push   esp
  4147d3:	jge    0x41481d
  4147d5:	jnp    0x41475e
  4147d7:	xor    al,0xd0
  4147d9:	and    al,0x6e
  4147db:	mov    dh,al
  4147dd:	in     al,0x89
  4147df:	add    edi,esp
  4147e1:	out    dx,al
  4147e2:	inc    BYTE PTR [edx]
  4147e4:	push   esi
  4147e5:	int    0x3f
  4147e7:	into   
  4147e8:	cmp    eax,edi
  4147ea:	test   BYTE PTR [ebx+0x62aa55f3],dl
  4147f0:	pop    ds
  4147f1:	add    al,0x17
  4147f3:	sbb    cl,cl
  4147f5:	cmp    DWORD PTR [ecx],edx
  4147f7:	jnp    0x414874
  4147f9:	ret    
  4147fa:	xchg   edi,eax
  4147fb:	cmp    esp,DWORD PTR [edi+0x16]
  4147fe:	dec    ebp
  4147ff:	test   al,0x10
  414801:	pop    ds
  414802:	cmp    eax,0xdb3dd3a9
  414807:	jbe    0x4147b6
  414809:	(bad)  
  41480a:	ins    DWORD PTR es:[edi],dx
  41480b:	loope  0x4147a8
  41480d:	aam    0xdb
  41480f:	iret   
  414810:	call   0x912b:0xb63b6152
  414817:	gs dec ebx
  414819:	fsubr  st,st(0)
  41481b:	push   ss
  41481c:	jae    0x414863
  41481e:	cmp    al,0x93
  414820:	jno    0x9db7836c
  414826:	call   0x17f5:0x2cbedf4e
  41482d:	int3   
  41482e:	add    BYTE PTR [ebp-0x55],bl
  414831:	arpl   WORD PTR [ebx-0x66],ax
  414834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414835:	inc    esi
  414836:	pop    ecx
  414837:	or     ah,ah
  414839:	cmp    DWORD PTR [ebx],ebp
  41483b:	inc    eax
  41483c:	imul   ebx,DWORD PTR [edi+edi*4],0x7b8197ac
  414843:	xchg   BYTE PTR [ebx+edi*8-0x21],dl
  414847:	clc    
  414848:	jle    0x4147d5
  41484a:	data16 (bad) 
  41484c:	call   0x66a442f5
  414851:	mov    bl,cl
  414853:	mov    ecx,0x339081db
  414858:	dec    esp
  414859:	lahf   
  41485a:	mov    ebp,0x4d6e0a9a
  41485f:	jns    0x4148c3
  414861:	adc    dl,bh
  414863:	pushf  
  414864:	inc    edi
  414865:	jge    0x4147f8
  414867:	fpatan 
  414869:	inc    edi
  41486a:	push   cs
  41486b:	loop   0x414833
  41486d:	out    dx,al
  41486e:	xor    ch,BYTE PTR [edi]
  414870:	test   DWORD PTR [ebx+0x5ffcaf91],ebx
  414876:	icebp  
  414877:	idiv   BYTE PTR [eax-0x2be1bf93]
  41487d:	xchg   ebx,eax
  41487e:	pop    ds
  41487f:	xchg   esi,eax
  414880:	lock leave 
  414882:	xlat   BYTE PTR ds:[ebx]
  414883:	and    al,0x2c
  414885:	ss stc 
  414887:	arpl   WORD PTR [edx-0x5c],di
  41488a:	fnstenv ds:0xb0980c55
  414890:	mov    ecx,0x17230a7a
  414895:	adc    DWORD PTR [ebp-0x27],0xffffffc0
  414899:	sahf   
  41489a:	cmp    bh,bl
  41489c:	stos   BYTE PTR es:[edi],al
  41489d:	call   0x1cc9:0xe2517c65
  4148a4:	and    DWORD PTR [esi],esi
  4148a6:	(bad)  
  4148a7:	out    dx,al
  4148a8:	lea    eax,[esi]
  4148aa:	stc    
  4148ab:	ret    
  4148ac:	jg     0x414866
  4148ae:	fwait
  4148af:	or     BYTE PTR [esi+0x28],dh
  4148b2:	mov    al,ds:0xd42a2da5
  4148b7:	or     BYTE PTR [ebp+0x21382f74],cl
  4148bd:	inc    eax
  4148be:	fs cwde 
  4148c0:	hlt    
  4148c1:	push   eax
  4148c2:	add    al,0x87
  4148c4:	hlt    
  4148c5:	lds    edi,FWORD PTR [ebx-0x81866eb]
  4148cb:	pusha  
  4148cc:	sahf   
  4148cd:	popa   
  4148ce:	addr16 adc bh,ch
  4148d1:	xor    DWORD PTR [esi-0xbc831],ebx
  4148d7:	not    BYTE PTR [edx+edi*1-0x6a]
  4148db:	pop    esp
  4148dc:	pusha  
  4148dd:	test   DWORD PTR [ebp+0xc],ebp
  4148e0:	inc    eax
  4148e1:	lods   eax,DWORD PTR ds:[esi]
  4148e2:	cli    
  4148e3:	pop    DWORD PTR [ecx+0x3c481286]
  4148e9:	inc    ecx
  4148ea:	es (bad) 
  4148ec:	and    al,0xf6
  4148ee:	out    0xe1,eax
  4148f0:	adc    eax,DWORD PTR [ecx]
  4148f2:	sbb    bp,sp
  4148f5:	stc    
  4148f6:	mov    ecx,cr5
  4148f9:	cmc    
  4148fa:	jbe    0x41490b
  4148fc:	mov    ss,WORD PTR [ebx+0x7e8b43ae]
  414902:	dec    esp
  414903:	leave  
  414904:	loope  0x4148a6
  414906:	lahf   
  414907:	popa   
  414908:	aaa    
  414909:	sub    eax,0xd08943c9
  41490e:	add    ebp,DWORD PTR [esi+edi*8-0x77e6d519]
  414915:	xchg   ebp,eax
  414916:	inc    ecx
  414917:	cmp    eax,0x473b8c8e
  41491c:	jmp    0x521b:0xf0cf8b25
  414923:	lods   eax,DWORD PTR ds:[esi]
  414924:	pop    edx
  414925:	popa   
  414926:	mov    al,ds:0x56691bf3
  41492b:	gs push ebx
  41492d:	dec    esp
  41492e:	pop    ebp
  41492f:	cmp    edi,0xffffff9a
  414932:	icebp  
  414933:	ds jno 0x4149af
  414936:	in     eax,0x2
  414938:	cwde   
  414939:	mov    ds:0x8dd89d3d,eax
  41493e:	mov    dh,0xe0
  414940:	out    dx,al
  414941:	in     eax,0x18
  414943:	inc    DWORD PTR [ebx]
  414945:	dec    ebx
  414946:	jecxz  0x41494d
  414948:	dec    esp
  414949:	or     esi,esi
  41494b:	mov    ah,0xdb
  41494d:	cmp    esi,DWORD PTR ds:0xd696a8b7
  414953:	push   ebp
  414954:	pop    edi
  414955:	mov    ds:0x878fd153,al
  41495a:	fcom   QWORD PTR [ebx+ebx*2]
  41495d:	fst    st(1)
  41495f:	inc    ecx
  414960:	pop    ss
  414961:	mov    esi,0x46934afe
  414966:	xor    dh,BYTE PTR [esi]
  414968:	jl     0x4149a6
  41496a:	out    0x8a,al
  41496c:	data16 adc al,0xf6
  41496f:	xchg   esp,eax
  414970:	pushf  
  414971:	pop    esi
  414972:	in     eax,dx
  414973:	jno    0x414985
  414975:	aas    
  414976:	iret   
  414977:	adc    DWORD PTR [ecx-0x1c],esp
  41497a:	dec    ecx
  41497b:	scas   al,BYTE PTR es:[edi]
  41497c:	lea    ecx,[esi]
  41497e:	call   0x986caac2
  414983:	retf   
  414984:	retf   
  414985:	sbb    edi,DWORD PTR [esi-0x650aaebd]
  41498b:	in     eax,dx
  41498c:	lds    eax,FWORD PTR [ebx+0x1ec78d07]
  414992:	xlat   BYTE PTR ds:[ebx]
  414993:	sbb    ah,BYTE PTR [ecx+0x44236170]
  414999:	scas   al,BYTE PTR es:[edi]
  41499a:	sbb    dh,ah
  41499c:	jl     0x414a0c
  41499e:	add    BYTE PTR [ebx+0x41],dh
  4149a1:	rcl    BYTE PTR [edx+0x22],cl
  4149a4:	push   si
  4149a6:	inc    edi
  4149a7:	dec    esp
  4149a8:	or     bl,al
  4149aa:	in     eax,dx
  4149ab:	sbb    ah,BYTE PTR [esp+eiz*4-0x7b4bb9f1]
  4149b2:	jg     0x41494a
  4149b4:	jo     0x414966
  4149b6:	sbb    BYTE PTR [ebx+0x7c3b9701],0x79
  4149bd:	or     BYTE PTR [esi-0x80],cl
  4149c0:	aas    
  4149c1:	jnp    0x4149a4
  4149c3:	aam    0xc2
  4149c5:	(bad)  
  4149c6:	arpl   ax,di
  4149c8:	cmp    DWORD PTR [eax],0x62
  4149cb:	out    0x92,eax
  4149cd:	xor    dh,cl
  4149cf:	leave  
  4149d0:	inc    edi
  4149d1:	xchg   ebp,eax
  4149d2:	adc    al,0x5d
  4149d4:	inc    esi
  4149d5:	jmp    0x47b1db57
  4149da:	jbe    0x414a2b
  4149dc:	inc    esi
  4149dd:	jmp    0x4149d6
  4149df:	mov    eax,0xfc976ec1
  4149e4:	or     al,0x76
  4149e6:	lods   eax,DWORD PTR ds:[esi]
  4149e7:	lds    ebp,FWORD PTR [ebx+0x6afb7fac]
  4149ed:	and    BYTE PTR [esp+ebx*1],0x7b
  4149f1:	mov    eax,ds:0xcaa53cb6
  4149f6:	mov    bl,0xdf
  4149f8:	jmp    0x4149fa
  4149fa:	inc    ebx
  4149fb:	lahf   
  4149fc:	mov    al,0x32
  4149fe:	adc    bl,bl
  414a00:	push   ebx
  414a01:	cmp    eax,0xa6b64b64
  414a06:	fmul   st(5),st
  414a08:	call   0x527c:0x89260cab
  414a0f:	mov    dl,0x48
  414a11:	retf   
  414a12:	cmp    eax,0x406517a9
  414a17:	in     eax,0xd
  414a19:	sbb    DWORD PTR [ecx+eiz*4+0x23caf903],edx
  414a20:	mov    dh,0xe1
  414a22:	sbb    bh,bl
  414a24:	push   esp
  414a25:	and    ch,BYTE PTR [ecx-0x44]
  414a28:	jo     0x414a56
  414a2a:	adc    al,0x57
  414a2c:	mov    edi,cs
  414a2e:	aaa    
  414a2f:	adc    eax,0x9e461823
  414a34:	(bad)  [esi-0x4714500b]
  414a3a:	mov    DWORD PTR [eax+0x51],ebx
  414a3d:	sub    eax,0xd36a15c3
  414a42:	(bad)  
  414a43:	popa   
  414a44:	sahf   
  414a45:	push   ebp
  414a46:	jmp    0xcdfceff1
  414a4b:	xchg   edx,eax
  414a4c:	lods   eax,DWORD PTR ds:[esi]
  414a4d:	mov    ch,0xc
  414a4f:	fs jae 0x414a8e
  414a52:	into   
  414a53:	sub    al,0x5c
  414a55:	mov    WORD PTR [eax-0x60],ss
  414a58:	dec    ebx
  414a59:	into   
  414a5a:	repnz dec esp
  414a5c:	xchg   edi,eax
  414a5d:	jo     0x414a4d
  414a5f:	test   eax,ecx
  414a61:	push   eax
  414a62:	dec    esp
  414a63:	sub    DWORD PTR [ebp+0x3e],0xffffffbc
  414a67:	or     al,0xad
  414a69:	add    BYTE PTR [edi+0x73],cl
  414a6c:	mov    ebx,0x8943798f
  414a71:	scas   eax,DWORD PTR es:[edi]
  414a72:	cs xchg edx,eax
  414a74:	fst    QWORD PTR [ecx]
  414a76:	aad    0xcb
  414a78:	ins    DWORD PTR es:[edi],dx
  414a79:	add    dh,bl
  414a7b:	cmp    BYTE PTR [edx*4-0x220bd2d2],al
  414a82:	int3   
  414a83:	xchg   esi,eax
  414a84:	cmp    eax,0xb44d8947
  414a89:	mov    ecx,DWORD PTR [ebp+0x8]
  414a8c:	mov    edx,0xfdbe0321
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a089
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a08d
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x429305
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429c05
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	or     al,0x33
  414dd9:	popf   
  414dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ddb:	push   0xffffff95
  414ddd:	jl     0x414e5a
  414ddf:	mov    ebx,0xcc7b7b9e
  414de4:	jb     0x414e2a
  414de6:	dec    esi
  414de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de8:	repnz in al,0x63
  414deb:	add    DWORD PTR [edx+0x42],0xb5a54df
  414df2:	dec    esi
  414df3:	js     0x414da7
  414df5:	pop    esi
  414df6:	mov    al,ds:0x7721597b
  414dfb:	lds    edi,FWORD PTR [eax+0x79a0da19]
  414e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e02:	push   ecx
  414e03:	jle    0x414e7c
  414e05:	mov    edx,es
  414e07:	sbb    al,0x8
  414e09:	arpl   cx,dx
  414e0b:	mov    WORD PTR [eax+0x25e496c4],ds
  414e11:	outs   dx,DWORD PTR ds:[esi]
  414e12:	js     0x414dee
  414e14:	push   0xffffffdf
  414e16:	stos   BYTE PTR es:[edi],al
  414e17:	cmp    edx,DWORD PTR [edi+edx*8+0x295228f1]
  414e1e:	rcr    edi,cl
  414e20:	mov    ah,0x32
  414e22:	retf   0x652c
  414e25:	iret   
  414e26:	jbe    0x414e37
  414e28:	jns    0x414dcd
  414e2a:	mov    ds:0xd03818fc,eax
  414e2f:	mov    dl,0x55
  414e31:	xchg   ebx,eax
  414e32:	rol    BYTE PTR [ebx-0x2661d99c],0xdc
  414e39:	push   ebx
  414e3a:	aam    0xa1
  414e3c:	mov    al,0xff
  414e3e:	dec    esp
  414e3f:	inc    edx
  414e40:	jl     0x414e6f
  414e42:	fst    QWORD PTR [eax+0x67306114]
  414e48:	xchg   ecx,eax
  414e49:	jns    0x414e08
  414e4b:	enter  0xea52,0xa6
  414e4f:	dec    eax
  414e50:	push   0x74347491
  414e55:	push   edx
  414e56:	pavgb  mm6,QWORD PTR [eax-0x6b]
  414e5a:	mov    bl,0x75
  414e5c:	loop   0x414e91
  414e5e:	mov    esi,0x87a99eea
  414e63:	jbe    0x414edb
  414e65:	ja     0x414e8e
  414e67:	test   edx,ebx
  414e69:	cmc    
  414e6a:	ror    BYTE PTR [edi],0xd5
  414e6d:	mov    bh,0xff
  414e6f:	jae    0x414df6
  414e71:	mov    eax,ds:0x35278408
  414e76:	lods   eax,DWORD PTR ds:[esi]
  414e77:	scas   al,BYTE PTR es:[edi]
  414e78:	jl     0x414e52
  414e7a:	xchg   ecx,eax
  414e7b:	sub    ch,BYTE PTR [ebp+0x35a34416]
  414e81:	out    0xb7,eax
  414e83:	aam    0x2d
  414e85:	sub    al,0x8b
  414e87:	and    ch,dl
  414e89:	test   ch,bl
  414e8b:	push   0xfff703f0
  414e90:	hlt    
  414e91:	xchg   edi,eax
  414e92:	(bad)  
  414e93:	jns    0x414e92
  414e95:	adc    al,0x29
  414e97:	inc    edx
  414e98:	xchg   edi,eax
  414e99:	arpl   WORD PTR [ebx],ax
  414e9b:	popa   
  414e9c:	shr    DWORD PTR [eax],0xfc
  414e9f:	in     eax,0x11
  414ea1:	adc    eax,0xde61236f
  414ea6:	les    esi,FWORD PTR [ecx+0x6d]
  414ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eaa:	out    0xda,eax
  414eac:	mov    ebp,0x855463ed
  414eb1:	pop    edi
  414eb2:	mov    ds:0x9bddd486,al
  414eb7:	jo     0x414ea3
  414eb9:	pop    esp
  414eba:	or     eax,0xe86d486f
  414ebf:	push   ebx
  414ec0:	jns    0x414edd
  414ec2:	cs dec esp
  414ec4:	mov    ah,0x98
  414ec6:	sti    
  414ec7:	loopne 0x414e8f
  414ec9:	sbb    al,0xc6
  414ecb:	push   edi
  414ecc:	push   0xaa8a7483
  414ed1:	bound  ebp,QWORD PTR [edx+0x33232fc4]
  414ed7:	mov    dl,0xee
  414ed9:	jmp    FWORD PTR [ebx]
  414edb:	js     0x414f30
  414edd:	ror    edx,cl
  414edf:	pop    esi
  414ee0:	inc    ecx
  414ee1:	mov    ds:0x73a47338,al
  414ee6:	int3   
  414ee7:	stos   DWORD PTR es:[edi],eax
  414ee8:	cmc    
  414ee9:	(bad)  
  414eeb:	rcl    BYTE PTR [ecx-0x7c12c2e7],1
  414ef1:	retf   0xf40
  414ef4:	retf   
  414ef5:	sbb    DWORD PTR [esi-0x221d45e7],0xb7c43aba
  414eff:	mov    bl,0x33
  414f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f02:	push   0xffffffa4
  414f04:	(bad)  [edx+0x5c803f9e]
  414f0a:	inc    esi
  414f0b:	stos   DWORD PTR es:[edi],eax
  414f0c:	sar    BYTE PTR [esi-0x3e17d1d4],cl
  414f12:	retf   
  414f13:	pop    ecx
  414f14:	jg     0x414f71
  414f16:	loopne 0x414f37
  414f18:	add    eax,0xc4fb1bd9
  414f1d:	aaa    
  414f1e:	push   esp
  414f1f:	or     DWORD PTR [edx+eax*4],edx
  414f22:	jae    0x414ec2
  414f24:	data16 mov bl,0xe8
  414f27:	and    eax,0xd7375841
  414f2c:	pusha  
  414f2d:	add    BYTE PTR [edi],bh
  414f2f:	sub    DWORD PTR [edi+0x41bb3b5f],0xda5fe44b
  414f39:	hlt    
  414f3a:	aaa    
  414f3b:	fistp  DWORD PTR [edx+0x4c]
  414f3e:	dec    ebp
  414f3f:	push   cs
  414f40:	maxps  xmm3,XMMWORD PTR [ecx-0x3a]
  414f44:	inc    ebp
  414f45:	into   
  414f46:	xor    bl,BYTE PTR [edi]
  414f48:	test   eax,edx
  414f4a:	mov    dh,0x7
  414f4c:	push   ds
  414f4d:	ja     0x414faa
  414f4f:	add    dh,0x7e
  414f52:	xor    bl,al
  414f54:	jmp    0x1faa3b3e
  414f59:	sub    bl,BYTE PTR [ebp+0x68]
  414f5c:	xchg   ebp,eax
  414f5d:	enter  0xb67d,0xf4
  414f61:	(bad)  
  414f62:	or     eax,0xcb8917b8
  414f67:	push   esp
  414f68:	shr    DWORD PTR [eax+0x39],cl
  414f6b:	inc    edx
  414f6c:	xor    bh,BYTE PTR [eax-0x3893b681]
  414f72:	fnstcw WORD PTR [ecx]
  414f74:	ror    dh,0x26
  414f77:	xor    al,0x42
  414f79:	test   DWORD PTR [esi],ebx
  414f7b:	inc    edi
  414f7c:	fst    DWORD PTR [ebx]
  414f7e:	sub    ecx,edi
  414f80:	les    ecx,FWORD PTR [ebx-0x78]
  414f83:	sub    esp,DWORD PTR [eax]
  414f85:	dec    ebx
  414f86:	sub    eax,0xfd91fb89
  414f8b:	mov    dl,0xd
  414f8d:	enter  0x52c6,0x77
  414f91:	lea    edi,[edx-0x5598a458]
  414f97:	add    al,bh
  414f99:	gs xor al,0xc1
  414f9c:	lahf   
  414f9d:	je     0x414f31
  414f9f:	scas   eax,DWORD PTR es:[edi]
  414fa0:	daa    
  414fa1:	push   edx
  414fa2:	scas   al,BYTE PTR es:[edi]
  414fa3:	xchg   esp,eax
  414fa4:	and    al,0x1c
  414fa6:	jbe    0x41501f
  414fa8:	dec    edx
  414fa9:	cli    
  414faa:	addr16 retf 
  414fac:	stos   DWORD PTR es:[edi],eax
  414fad:	into   
  414fae:	sti    
  414faf:	jmp    0x414f78
  414fb1:	aad    0x98
  414fb3:	in     eax,0x4d
  414fb5:	push   ss
  414fb6:	mov    cl,0x5d
  414fb8:	sub    al,0x97
  414fba:	aas    
  414fbb:	out    dx,eax
  414fbc:	retf   
  414fbd:	jge    0x414f63
  414fbf:	test   edx,ebp
  414fc1:	sbb    bl,dl
  414fc3:	jecxz  0x415040
  414fc5:	mov    dh,0x9e
  414fc7:	sbb    edx,esi
  414fc9:	push   eax
  414fca:	mov    WORD PTR [eax-0x1067c215],fs
  414fd0:	inc    esi
  414fd1:	ret    0x97c6
  414fd4:	mov    ds:0x434e9e40,al
  414fd9:	mov    cl,0xdb
  414fdb:	inc    ebp
  414fdc:	call   0x66ef:0xe47c2d61
  414fe3:	mov    bl,0x2d
  414fe5:	xor    al,BYTE PTR [edx+0x36]
  414fe8:	cmp    ch,BYTE PTR [edx+0x5d66c539]
  414fee:	jnp    0x414fc6
  414ff0:	adc    al,0xa9
  414ff2:	in     eax,0xb8
  414ff4:	es sub ebp,eax
  414ff7:	ja     0x414fb3
  414ff9:	push   0x79
  414ffb:	jmp    0x6848b3c6
  415000:	lea    ebp,[ebx-0x76]
  415003:	dec    ecx
  415004:	lahf   
  415005:	add    al,0xcf
  415007:	push   eax
  415008:	test   BYTE PTR [ecx],ch
  41500a:	gs jns 0x41506c
  41500d:	(bad)  
  41500e:	int    0x8
  415010:	pop    eax
  415011:	jbe    0x414fbb
  415013:	push   0xffffff96
  415015:	mov    ch,0x4b
  415017:	iret   
  415018:	pop    eax
  415019:	sub    eax,0x52b7125
  41501e:	pop    edx
  41501f:	push   edi
  415020:	mov    edi,0xaa8a0591
  415025:	sti    
  415026:	rcr    DWORD PTR es:[edi],0x6d
  41502a:	cmp    ebp,DWORD PTR [ecx+edx*2]
  41502d:	xchg   ebp,eax
  41502e:	xchg   esi,eax
  41502f:	adc    al,0xae
  415031:	jne    0x415016
  415033:	mov    eax,0x3fd21678
  415038:	in     eax,dx
  415039:	shl    bl,1
  41503b:	retf   
  41503c:	in     eax,dx
  41503d:	push   0xffffff9e
  41503f:	push   cs
  415040:	lods   eax,DWORD PTR ds:[esi]
  415041:	cmp    BYTE PTR [ebp+0x683be4e4],0xf3
  415048:	fstp   QWORD PTR [edi]
  41504a:	mov    al,ds:0xd6cac319
  41504f:	mov    bh,0x7e
  415051:	int3   
  415052:	in     eax,0x20
  415054:	pop    ds
  415055:	rcr    BYTE PTR [edx+0x55391bb6],1
  41505b:	xor    ah,BYTE PTR [ebp+0x27526223]
  415061:	call   0x5463:0x35459db1
  415068:	es ror ch,1
  41506b:	inc    ebp
  41506c:	push   edi
  41506d:	jno    0x4150e0
  41506f:	sub    edx,edi
  415071:	mov    bl,BYTE PTR [esi-0x72]
  415074:	jns    0x415023
  415076:	shr    DWORD PTR [esi-0x4fb353ce],0x42
  41507d:	dec    esi
  41507e:	pop    eax
  41507f:	test   eax,0x2dea940f
  415084:	jl     0x41504b
  415086:	jmp    0x4db089da
  41508b:	xchg   DWORD PTR [ebp-0x618e0385],eax
  415091:	aad    0x22
  415093:	leave  
  415094:	stos   DWORD PTR es:[edi],eax
  415095:	dec    edi
  415096:	and    dh,ch
  415098:	shl    DWORD PTR [ecx],0xdb
  41509b:	pusha  
  41509c:	test   DWORD PTR ds:0xc4fcd9e1,0x8e19d94e
  4150a6:	pop    ebp
  4150a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a8:	inc    esp
  4150a9:	(bad)  
  4150aa:	cmp    al,0x34
  4150ac:	shl    DWORD PTR [ebx+ecx*1+0x6d],0xbf
  4150b1:	icebp  
  4150b2:	inc    ecx
  4150b3:	pusha  
  4150b4:	dec    ebp
  4150b5:	jo     0x415077
  4150b7:	(bad)
  4150ba:	mov    ds:0x37a35512,eax
  4150bf:	push   cs
  4150c0:	repz je 0x415107
  4150c3:	std    
  4150c4:	mov    eax,0xe09cc752
  4150c9:	mov    edx,0x89f40d2c
  4150ce:	xchg   BYTE PTR [esi+0x30],bh
  4150d1:	nop
  4150d2:	test   DWORD PTR [eax+0x3],edi
  4150d5:	sub    edi,DWORD PTR [eax-0x59ce4592]
  4150db:	lahf   
  4150dc:	inc    ecx
  4150dd:	out    dx,eax
  4150de:	scas   eax,DWORD PTR es:[edi]
  4150df:	outs   dx,DWORD PTR ds:[esi]
  4150e0:	clc    
  4150e1:	dec    edi
  4150e2:	aas    
  4150e3:	sub    al,0x7c
  4150e5:	pop    ds
  4150e6:	mov    ah,bh
  4150e8:	xchg   BYTE PTR ds:0x5620e30,dh
  4150ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ef:	icebp  
  4150f0:	inc    eax
  4150f1:	cs jl  0x41508f
  4150f4:	mov    dh,0xe9
  4150f6:	test   DWORD PTR [ebp+edi*1-0x49d6a561],esi
  4150fd:	and    BYTE PTR [edi],ah
  4150ff:	pop    esp
  415100:	or     bh,bh
  415102:	push   ecx
  415103:	mov    ch,BYTE PTR [ebx]
  415105:	pop    esi
  415106:	ds pop ss
  415108:	repz jb 0x415180
  41510b:	mov    ah,0x1b
  41510d:	stc    
  41510e:	jmp    0x4150cc
  415110:	aas    
  415111:	sbb    edx,DWORD PTR [esp+eiz*2-0xb]
  415115:	cwde   
  415116:	popa   
  415117:	imul   edi,DWORD PTR [eax-0x5d3a5ae1],0x72eaba95
  415121:	dec    ebx
  415122:	inc    ecx
  415123:	mov    al,0xf8
  415125:	(bad)  
  415127:	xchg   esp,eax
  415128:	push   edi
  415129:	pop    eax
  41512a:	ffreep st(6)
  41512c:	mov    esp,0x284ca889
  415131:	and    eax,0x85ec7680
  415136:	lock and al,0x90
  415139:	in     eax,0xb7
  41513b:	or     al,BYTE PTR [ecx-0x4d6866e]
  415141:	dec    esi
  415142:	test   DWORD PTR ds:0x7fabe400,esp
  415148:	aam    0x8
  41514a:	xor    eax,0xc538ad37
  41514f:	inc    edx
  415150:	dec    esi
  415151:	test   DWORD PTR gs:[eax-0x27],ebx
  415155:	test   DWORD PTR [ebx],0xc5ce35a7
  41515b:	mov    eax,ds:0x35d04649
  415160:	sbb    dh,dh
  415162:	mov    esi,0xf204a2ce
  415167:	sbb    ecx,ebx
  415169:	pop    esi
  41516a:	cld    
  41516b:	jae    0x415164
  41516d:	outs   dx,DWORD PTR ds:[esi]
  41516e:	bound  ecx,QWORD PTR [ebp-0x23]
  415171:	into   
  415172:	sub    BYTE PTR [ecx],bh
  415174:	pusha  
  415175:	xchg   esi,eax
  415176:	mov    ecx,0xbca12840
  41517b:	inc    ecx
  41517c:	aas    
  41517d:	push   ebp
  41517e:	mov    esp,edx
  415180:	jecxz  0x415180
  415182:	xchg   DWORD PTR [edi],ecx
  415184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415185:	fldenv [ebp+0x11d503fa]
  41518b:	sub    al,0x16
  41518d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518e:	ins    DWORD PTR es:[edi],dx
  41518f:	or     BYTE PTR [edx-0x5e],0xbd
  415193:	mov    eax,ds:0xc5cdf94f
  415198:	xchg   ebp,eax
  415199:	mov    ?,esp
  41519b:	icebp  
  41519c:	call   0x2b26:0xf1d457e8
  4151a3:	nop
  4151a4:	push   esp
  4151a5:	adc    eax,0x57b6d8b1
  4151aa:	ins    BYTE PTR es:[edi],dx
  4151ab:	adc    al,0x4f
  4151ad:	lods   eax,DWORD PTR ds:[esi]
  4151ae:	jle    0x4151ee
  4151b0:	inc    ebx
  4151b1:	data16 cld 
  4151b3:	(bad)  
  4151b4:	aam    0x61
  4151b6:	sub    ebp,edi
  4151b8:	xchg   edx,eax
  4151b9:	jae    0x415204
  4151bb:	jl     0x4151a4
  4151bd:	push   0x40
  4151bf:	pop    edx
  4151c0:	test   DWORD PTR [esp+ebp*8],eax
  4151c3:	add    BYTE PTR [eax+0x21],dh
  4151c6:	out    dx,eax
  4151c7:	test   al,0x88
  4151c9:	dec    ebx
  4151ca:	push   ebx
  4151cb:	xor    eax,DWORD PTR [ebx-0x5a]
  4151ce:	or     ebx,DWORD PTR [ebx-0x69]
  4151d1:	dec    edi
  4151d2:	xchg   BYTE PTR [esp+ebx*8],ah
  4151d5:	loopne 0x4151d9
  4151d7:	mov    al,0xe6
  4151d9:	mov    cl,0x74
  4151db:	adc    bl,BYTE PTR [edx]
  4151dd:	cli    
  4151de:	dec    edi
  4151df:	cld    
  4151e0:	fistp  WORD PTR ds:0x9dc42002
  4151e6:	daa    
  4151e7:	test   BYTE PTR [edi-0x48],al
  4151ea:	mov    cs,WORD PTR [edx]
  4151ec:	xor    ebp,DWORD PTR [edx+0x5607b58e]
  4151f2:	inc    ebp
  4151f3:	inc    esi
  4151f4:	and    BYTE PTR [eax-0xfd85f44],dh
  4151fa:	sub    al,0xc4
  4151fc:	stc    
  4151fd:	cmp    eax,DWORD PTR [ebx-0x5211b2e5]
  415203:	push   ecx
  415204:	mov    cl,0x94
  415206:	into   
  415207:	mov    dl,0xd0
  415209:	lock or eax,0xcc1f92fc
  41520f:	lods   eax,DWORD PTR ds:[esi]
  415210:	sub    dh,BYTE PTR [edx+0x18]
  415213:	pushf  
  415214:	or     dl,BYTE PTR [ebp+0x79]
  415217:	push   edx
  415218:	dec    ebp
  415219:	fiadd  WORD PTR [edx+0x65084c85]
  41521f:	sub    eax,DWORD PTR [ebx]
  415221:	mov    ch,0x31
  415223:	push   WORD PTR [ebx]
  415226:	cmp    BYTE PTR [ebx+0x139e5fa],0x5e
  41522d:	push   es
  41522e:	sbb    edx,DWORD PTR [edx-0x39de8551]
  415234:	inc    ecx
  415235:	jge    0x415202
  415237:	pop    esi
  415238:	push   edi
  415239:	repnz dec ebx
  41523b:	mov    esp,0x5df08196
  415240:	pop    ds
  415241:	cmp    eax,0x9fbe9372
  415246:	jns    0x4151ce
  415248:	data16 into 
  41524a:	gs add ebx,edi
  41524d:	mov    ebx,0x53307897
  415252:	loop   0x415205
  415254:	call   0x54c5:0x6e6dabf0
  41525b:	mov    esi,ecx
  41525d:	sbb    eax,0x546b70a1
  415262:	imul   eax,DWORD PTR [eax],0x67f8b9f5
  415268:	nop
  415269:	ss cli 
  41526b:	and    dh,BYTE PTR [eax]
  41526d:	sbb    eax,0x5d646b16
  415272:	aaa    
  415273:	add    DWORD PTR [ebp+0x64],esp
  415276:	xchg   ecx,eax
  415277:	iret   
  415278:	sub    esp,eax
  41527a:	jae    0x4152f0
  41527c:	mov    BYTE PTR [edx+0x45],bl
  41527f:	pushw  0x4a
  415282:	sbb    bh,BYTE PTR [esi]
  415284:	dec    ecx
  415285:	jmp    0x415305
  415287:	sbb    ah,al
  415289:	xlat   BYTE PTR ds:[ebx]
  41528a:	fild   WORD PTR [ebx+0x4f]
  41528d:	leave  
  41528e:	psllq  mm0,QWORD PTR [edi+esi*1+0x6]
  415293:	test   edi,eax
  415295:	xchg   dl,ch
  415297:	pop    esp
  415298:	mov    ?,esp
  41529a:	inc    ecx
  41529b:	mov    bh,0xb4
  41529d:	cmp    ah,dh
  41529f:	mov    ds:0x6bd688c4,al
  4152a4:	leave  
  4152a5:	bswap  ecx
  4152a7:	out    0xd,al
  4152a9:	mov    esi,0x52fd6fd2
  4152ae:	arpl   WORD PTR [edx-0x14],di
  4152b1:	pop    eax
  4152b2:	and    esp,edx
  4152b4:	inc    esi
  4152b5:	rcl    DWORD PTR [edi+0x57c65065],cl
  4152bb:	and    cl,BYTE PTR [edx+0x6a]
  4152be:	popf   
  4152bf:	test   eax,0xb5944d29
  4152c4:	and    edx,DWORD PTR [esi-0x3f]
  4152c7:	stc    
  4152c8:	sub    esi,ecx
  4152ca:	xchg   esi,eax
  4152cb:	mov    cs,WORD PTR [ecx]
  4152cd:	pusha  
  4152ce:	les    edi,FWORD PTR [esi+0x25]
  4152d1:	adc    al,0xa1
  4152d3:	xchg   ebx,eax
  4152d4:	fcom   QWORD PTR [ebx-0x24e9c4a0]
  4152da:	cmc    
  4152db:	outs   dx,DWORD PTR ds:[esi]
  4152dc:	jne    0x41533d
  4152de:	stos   BYTE PTR es:[edi],al
  4152df:	mov    ecx,0xcaf2d361
  4152e4:	sbb    eax,0xb73a3e05
  4152e9:	fiadd  WORD PTR [esi-0x4a5f51c7]
  4152ef:	clc    
  4152f0:	pop    edx
  4152f1:	in     al,dx
  4152f2:	xchg   edx,eax
  4152f3:	xlat   BYTE PTR ds:[ebx]
  4152f4:	jmp    0x6b0ca5ce
  4152f9:	lea    ebx,[edx-0x5c]
  4152fc:	jne    0x415359
  4152fe:	enter  0x8316,0x43
  415302:	or     DWORD PTR [eax-0x7e932497],edx
  415308:	cdq    
  415309:	fisubr WORD PTR [ebp+0x74493e3]
  41530f:	inc    ecx
  415310:	aad    0xde
  415312:	fbld   TBYTE PTR [esi-0x55aa4013]
  415318:	and    esi,DWORD PTR [edx]
  41531a:	in     al,dx
  41531b:	mov    esp,0xec32c2b9
  415320:	adc    eax,0xc7df3039
  415325:	or     BYTE PTR [ecx+0x41098049],dh
  41532b:	adc    esi,DWORD PTR [ebp-0x19c14f8c]
  415331:	lds    esp,FWORD PTR [ebx+0x58]
  415334:	cld    
  415335:	aam    0x36
  415337:	jb     0x415306
  415339:	(bad)
  41533d:	cli    
  41533e:	mov    esp,0x1cd34560
  415343:	sbb    ch,dl
  415345:	fstp   QWORD PTR [ecx]
  415347:	adc    eax,0x8497fe4b
  41534c:	dec    ebp
  41534d:	sub    DWORD PTR [eax+eax*1+0x22846371],0x13
  415355:	mov    esp,0x663ca695
  41535a:	dec    esi
  41535b:	lea    esi,[ebp+0x6ac3d8a8]
  415361:	ins    BYTE PTR es:[edi],dx
  415362:	(bad)  
  415363:	mov    eax,0xdee2c72d
  415368:	mov    edi,0x87df01a4
  41536d:	mov    edi,0x257a2bc3
  415372:	jne    0x415349
  415374:	hlt    
  415375:	ja     0x4153d5
  415377:	add    edx,DWORD PTR [eax+0x65262335]
  41537d:	aam    0x94
  41537f:	fild   QWORD PTR [eax+ecx*8]
  415382:	sbb    eax,DWORD PTR [esi+0x6b]
  415385:	mov    ch,0x9
  415387:	popa   
  415388:	push   es
  415389:	test   al,0xe5
  41538b:	dec    ebx
  41538c:	ss sbb eax,0x95ed820d
  415392:	mov    cl,0x9d
  415394:	aam    0x49
  415396:	and    BYTE PTR [esi-0xe],ah
  415399:	loope  0x415360
  41539b:	bnd jl 0x4153b1
  41539e:	jnp    0x4153ef
  4153a0:	mov    ds:0xe12c7be5,eax
  4153a5:	mov    esi,DWORD PTR [eax+0x76]
  4153a8:	hlt    
  4153a9:	in     eax,0xe1
  4153ab:	jmp    0x7443:0x6cfc06c2
  4153b2:	dec    edx
  4153b3:	xchg   ebx,eax
  4153b4:	dec    eax
  4153b5:	addr16 in eax,dx
  4153b7:	push   ebx
  4153b8:	pop    ss
  4153b9:	add    bl,0xd8
  4153bc:	inc    ecx
  4153bd:	add    eax,0x1ef73370
  4153c2:	dec    ebx
  4153c3:	mov    dl,0xc2
  4153c5:	jns    0x415390
  4153c7:	into   
  4153c8:	sti    
  4153c9:	xchg   ebp,eax
  4153ca:	mov    al,0x54
  4153cc:	sub    esp,DWORD PTR [eax-0x48]
  4153cf:	xchg   BYTE PTR [edi-0x40e41f25],dl
  4153d5:	dec    esp
  4153d6:	outs   dx,DWORD PTR ds:[esi]
  4153d7:	in     al,dx
  4153d8:	push   cs
  4153d9:	ret    0x832f
  4153dc:	mov    esi,0xb76553ca
  4153e1:	into   
  4153e2:	add    ecx,ebp
  4153e4:	and    eax,ebp
  4153e6:	or     eax,0x4ea7694a
  4153eb:	popa   
  4153ec:	or     ecx,DWORD PTR [esi+0x78]
  4153ef:	jae    0x4153f4
  4153f1:	sbb    edi,DWORD PTR [edi]
  4153f3:	jo     0x4153bf
  4153f5:	loop   0x415468
  4153f7:	test   al,0x6f
  4153f9:	dec    ebp
  4153fa:	or     BYTE PTR [edx+0x6c],ch
  4153fd:	cdq    
  4153fe:	pop    ds
  4153ff:	js     0x4153e0
  415401:	dec    ebx
  415402:	fisttp DWORD PTR [ecx]
  415404:	xchg   edi,eax
  415405:	or     ch,0xfd
  415408:	pushf  
  415409:	(bad)  
  41540c:	arpl   cx,bp
  41540e:	test   BYTE PTR [edx-0x68941405],ah
  415414:	jg     0x415443
  415416:	scas   eax,DWORD PTR es:[edi]
  415417:	inc    ebx
  415418:	(bad)  
  415419:	test   DWORD PTR [edx+0x43284017],edx
  41541f:	jno    0x4153d1
  415421:	inc    ecx
  415422:	ja     0x415423
  415424:	adc    cl,BYTE PTR [ebx]
  415426:	not    DWORD PTR [edi-0x35]
  415429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41542a:	adc    ebp,DWORD PTR [edi]
  41542c:	lds    esi,FWORD PTR [edx+0x51]
  41542f:	cmp    esi,DWORD PTR [edx]
  415431:	or     ebp,DWORD PTR [ebp+0x4d]
  415434:	and    DWORD PTR [ebx-0x1],ebp
  415437:	jno    0x4154b5
  415439:	mov    bh,0xe4
  41543b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543c:	outs   dx,BYTE PTR ds:[esi]
  41543d:	pop    ecx
  41543e:	pop    eax
  41543f:	loop   0x415439
  415441:	xchg   ecx,eax
  415442:	add    ecx,DWORD PTR ds:0xb848ac4
  415448:	mov    ebp,0xdc9e61e6
  41544d:	cmp    BYTE PTR [edx+eiz*1-0x6c3fa8f0],ah
  415454:	fmul   QWORD PTR [edx]
  415456:	adc    eax,0xe32dc295
  41545b:	(bad)  
  41545c:	cmp    DWORD PTR [edi],esp
  41545e:	fwait
  41545f:	or     al,0x34
  415461:	cs or  al,0x5e
  415464:	ins    BYTE PTR es:[edi],dx
  415465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415466:	outs   dx,DWORD PTR ds:[esi]
  415467:	push   eax
  415468:	sub    esi,DWORD PTR [ebx-0x5a]
  41546b:	push   cs
  41546c:	fwait
  41546d:	imul   ebp,esp,0x1f
  415470:	(bad)  
  415471:	(bad)  
  415472:	mov    ebx,0xd2017cec
  415477:	not    BYTE PTR [esi+0x2dbdb545]
  41547d:	mov    dh,0x96
  41547f:	out    dx,al
  415480:	sub    bh,BYTE PTR [eax]
  415482:	pusha  
  415483:	cld    
  415484:	ret    0x709e
  415487:	jno    0x41544f
  415489:	into   
  41548a:	push   ds
  41548b:	mov    ecx,0xbe0659f6
  415490:	inc    ebp
  415491:	jns    0x415507
  415493:	xchg   ebx,eax
  415494:	retf   0x6ca0
  415497:	sar    edx,cl
  415499:	dec    esi
  41549a:	xlat   BYTE PTR ds:[ebx]
  41549b:	fs fwait
  41549d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41549e:	mov    DWORD PTR [edx],eax
  4154a0:	das    
  4154a1:	ret    0x96eb
  4154a4:	scas   eax,DWORD PTR es:[edi]
  4154a5:	mov    ds:0x73bcc543,al
  4154aa:	rcr    esi,0x89
  4154ad:	mov    ds:0x8f4c1421,al
  4154b2:	daa    
  4154b3:	ins    BYTE PTR es:[edi],dx
  4154b4:	push   esp
  4154b5:	add    al,0x55
  4154b7:	loop   0x415459
  4154b9:	mov    dl,0x8a
  4154bb:	inc    ecx
  4154bc:	xchg   esp,eax
  4154bd:	call   0x7ccb:0x2d4e100a
  4154c4:	imul   ebx,DWORD PTR [edi+0x10],0x3f66f8ef
  4154cb:	outs   dx,DWORD PTR ds:[esi]
  4154cc:	loop   0x415529
  4154ce:	sahf   
  4154cf:	cdq    
  4154d0:	xor    BYTE PTR [ebx+0x4a515deb],al
  4154d6:	push   eax
  4154d7:	push   edx
  4154d8:	jle    0x41550e
  4154da:	inc    ebp
  4154db:	test   DWORD PTR [edi-0x32483efc],0x5b77b3
  4154e5:	mov    WORD PTR [ecx-0x6b],es
  4154e8:	or     eax,0xb3ed4d8
  4154ed:	loopne 0x41554d
  4154ef:	out    0x89,eax
  4154f1:	sub    BYTE PTR [ecx],0x77
  4154f4:	cmc    
  4154f5:	push   edx
  4154f6:	push   0x9506a8e3
  4154fb:	test   bh,bh
  4154fd:	retf   0xb7db
  415500:	das    
  415501:	push   edx
  415502:	int    0x30
  415504:	mov    eax,ds:0xf55d949c
  415509:	mov    DWORD PTR [eax+ecx*8],ecx
  41550c:	dec    ecx
  41550d:	mov    ds:0x4e30e9ea,al
  415512:	ss pushf 
  415514:	ins    BYTE PTR es:[edi],dx
  415515:	mov    ds:0x8ed27845,eax
  41551a:	push   eax
  41551b:	ds xchg ecx,eax
  41551d:	jge    0x4154a1
  41551f:	ss mov ah,0xa6
  415522:	out    dx,eax
  415523:	je     0x41551d
  415525:	and    eax,0x69c4d476
  41552a:	rcl    DWORD PTR [eax+ecx*2],0xbc
  41552e:	stos   BYTE PTR es:[edi],al
  41552f:	mov    dl,0xf6
  415531:	jp     0x415544
  415533:	fwait
  415534:	inc    edi
  415535:	mov    bh,0x8
  415537:	(bad)  
  415538:	jl     0x41557c
  41553a:	or     eax,0x598a3148
  41553f:	scas   al,BYTE PTR es:[edi]
  415540:	xor    ebx,ebp
  415542:	mov    dl,0xed
  415544:	fdiv   st,st(3)
  415546:	xor    DWORD PTR ds:0x8e738f74,ebx
  41554c:	shl    BYTE PTR [eax+0x29cb1c27],1
  415552:	mov    eax,ds:0xe3364cf6
  415557:	sub    DWORD PTR [ebx],esi
  415559:	shl    cl,0x3
  41555c:	es lock jmp 0x415549
  415560:	jnp    0x415512
  415562:	loop   0x415584
  415564:	int3   
  415565:	dec    edx
  415566:	or     al,0x67
  415568:	inc    esp
  415569:	dec    edx
  41556a:	and    esi,DWORD PTR [esi]
  41556c:	hlt    
  41556d:	sbb    ebp,DWORD PTR [edi-0x72fd3f46]
  415573:	shufps xmm4,XMMWORD PTR [eax-0x21],0x96
  415578:	mov    bh,0xcb
  41557a:	les    ebx,FWORD PTR [ebp-0x36]
  41557d:	retf   
  41557e:	ins    DWORD PTR es:[edi],dx
  41557f:	aaa    
  415580:	and    BYTE PTR cs:[esi+ebp*2+0x6767577c],ch
  415588:	xchg   BYTE PTR [ecx],dh
  41558a:	clc    
  41558b:	and    bl,BYTE PTR [ebx+0x5f59464d]
  415591:	(bad)  
  415592:	pop    ss
  415593:	mov    ch,0xd7
  415595:	mov    ebx,0xce2740b5
  41559a:	mov    edi,0x75fe1d7b
  41559f:	call   0x1dcf:0x382d274f
  4155a6:	mov    ds:0x5cd14e3,eax
  4155ab:	aas    
  4155ac:	arpl   WORD PTR [edi+0x64],bp
  4155af:	in     al,0x71
  4155b1:	mov    ah,0xc2
  4155b3:	mov    bh,0xd1
  4155b5:	or     BYTE PTR [edi+0xb],al
  4155b8:	les    ebp,FWORD PTR [edi+eax*4+0x174b2325]
  4155bf:	sbb    BYTE PTR [edi+0x5a],bh
  4155c2:	retf   
  4155c3:	test   DWORD PTR [ecx+esi*8-0x36],esi
  4155c7:	dec    ebx
  4155c8:	jnp    0x41555a
  4155ca:	fs jbe 0x415644
  4155cd:	ret    
  4155ce:	in     eax,0x73
  4155d0:	sub    dh,BYTE PTR [esi+0x730c4811]
  4155d6:	ret    
  4155d7:	dec    ebx
  4155d8:	int    0x85
  4155da:	jp     0x4155f4
  4155dc:	enter  0x1e18,0x65
  4155e0:	test   BYTE PTR [edx],dl
  4155e2:	or     al,0xa9
  4155e4:	ffree  st(2)
  4155e6:	sbb    dl,dh
  4155e8:	and    ah,BYTE PTR [eax]
  4155ea:	ja     0x415643
  4155ec:	call   0x1b5a:0xc6435ce4
  4155f3:	cmp    ah,BYTE PTR [esi+0x6212d379]
  4155f9:	jne    0x4155f4
  4155fb:	ins    BYTE PTR es:[edi],dx
  4155fc:	aam    0x64
  4155fe:	std    
  4155ff:	pushf  
  415600:	mov    ch,0x49
  415602:	in     eax,0x6a
  415604:	mov    edi,0x2d7fd410
  415609:	adc    BYTE PTR [edx-0x10],dl
  41560c:	cdq    
  41560d:	push   ds
  41560e:	xor    al,BYTE PTR [ecx+0x232cb584]
  415614:	clc    
  415615:	jae    0x415668
  415617:	sub    BYTE PTR [esi-0x689d68b7],dl
  41561d:	xchg   edi,eax
  41561e:	add    eax,0xb98b3bd6
  415623:	and    al,0xc4
  415625:	adc    ebp,DWORD PTR [edi-0x391bab8d]
  41562b:	add    eax,0xb33c4ace
  415630:	sbb    DWORD PTR [eax+0x5e],0x57a1fb28
  415637:	out    dx,eax
  415638:	test   BYTE PTR [ebx+0x38],ah
  41563b:	fbstp  TBYTE PTR [edx]
  41563d:	mov    al,ds:0xac336a88
  415642:	das    
  415643:	sub    eax,0xd4bc5346
  415648:	enter  0xbe31,0xf3
  41564c:	jmp    0x415684
  41564e:	in     eax,0xe8
  415650:	std    
  415651:	rol    DWORD PTR [esi+0x60],0x67
  415655:	repnz mov eax,0x5201db5
  41565b:	outs   dx,BYTE PTR ds:[esi]
  41565c:	js     0x4156c0
  41565e:	dec    esp
  41565f:	inc    esp
  415660:	mov    eax,ds:0xba64668d
  415665:	cmp    BYTE PTR [edi-0x5fef5ff7],dl
  41566b:	out    0x6d,al
  41566d:	add    eax,0xcf590e0d
  415672:	aas    
  415673:	or     BYTE PTR [edx],bh
  415675:	test   al,0x72
  415677:	fild   DWORD PTR [eax]
  415679:	test   al,0x65
  41567b:	cmp    BYTE PTR [eax-0x4f862913],dl
  415681:	jae    0x4156c0
  415683:	pusha  
  415684:	stos   BYTE PTR es:[edi],al
  415685:	xlat   BYTE PTR ds:[ebx]
  415686:	int3   
  415687:	xor    bl,ch
  415689:	loopne 0x4156f1
  41568b:	and    DWORD PTR ds:[edi+edx*2+0x5f],0xed3d71f2
  415694:	pop    ds
  415695:	push   ss
  415696:	fld    st(5)
  415698:	in     al,0xef
  41569a:	push   edx
  41569b:	pop    ebx
  41569c:	push   0x70
  41569e:	(bad)  
  4156a0:	jge    0x415659
  4156a2:	jne    0x41571e
  4156a4:	or     dl,dh
  4156a6:	jmp    0x9a5b8f37
  4156ab:	test   eax,0x5654f5c1
  4156b0:	in     al,0x14
  4156b2:	xor    al,0xf4
  4156b4:	aad    0x62
  4156b6:	dec    esp
  4156b7:	pop    ds
  4156b8:	sti    
  4156b9:	add    bh,BYTE PTR [edx-0x3d]
  4156bc:	jno    0x4156ee
  4156be:	jmp    DWORD PTR [esp+ecx*1+0x25]
  4156c2:	lods   al,BYTE PTR ds:[esi]
  4156c3:	inc    edx
  4156c4:	aam    0x53
  4156c6:	mov    al,bh
  4156c8:	sub    BYTE PTR [ecx+0x201f8bc9],al
  4156ce:	add    al,0x71
  4156d0:	push   edi
  4156d1:	pop    edi
  4156d2:	or     al,0x58
  4156d4:	test   ebx,0x4279234d
  4156da:	ror    DWORD PTR [ebx-0x8],0xc2
  4156de:	ins    DWORD PTR es:[edi],dx
  4156df:	pop    ds
  4156e0:	jno    0x4156ee
  4156e2:	push   ds
  4156e3:	or     eax,0x200393c2
  4156e8:	mov    DWORD PTR [esi-0x67],esp
  4156eb:	sbb    al,BYTE PTR [edi]
  4156ed:	sub    BYTE PTR [ebx+0x2300af7d],dh
  4156f3:	stos   BYTE PTR es:[edi],al
  4156f4:	and    BYTE PTR [ebx-0x74484981],al
  4156fa:	adc    eax,0x6f25b141
  4156ff:	push   cs
  415700:	loop   0x4156e8
  415702:	jne    0x41575a
  415704:	mov    edx,0x291b2a96
  415709:	pop    ebp
  41570a:	pop    ebx
  41570b:	sar    ch,0xc2
  41570e:	hlt    
  41570f:	call   0x583d:0x8bc3b7e0
  415716:	and    DWORD PTR [esi+0x8],ebp
  415719:	test   al,0x90
  41571b:	jbe    0x41579a
  41571d:	sub    DWORD PTR [edx],0xffffff8f
  415720:	jnp    0x41570f
  415722:	out    dx,eax
  415723:	fisub  WORD PTR [ecx-0x1a138781]
  415729:	sub    esp,ebx
  41572b:	xchg   edx,eax
  41572c:	int    0x58
  41572e:	lock xlat BYTE PTR ds:[ebx]
  415730:	ins    BYTE PTR es:[edi],dx
  415731:	sub    eax,0xff7da6e4
  415736:	sahf   
  415737:	push   ecx
  415738:	repz imul edi,edi,0x4e
  41573c:	neg    BYTE PTR [esi]
  41573e:	repz sub DWORD PTR [edx],ebx
  415741:	fdiv   QWORD PTR ds:0xecbd9413
  415747:	and    DWORD PTR [ecx-0x7a5415da],0x21539e4b
  415751:	test   ecx,ecx
  415753:	sub    cl,BYTE PTR [esi]
  415755:	fnstcw WORD PTR [edx-0x32e8187f]
  41575b:	daa    
  41575c:	sbb    BYTE PTR [edx+0x7e1ef35d],ch
  415762:	or     ah,BYTE PTR [ebx+ebp*8]
  415765:	add    DWORD PTR [ecx+0x4f07e9ab],eax
  41576b:	ret    0xc3bb
  41576e:	mov    edi,0x77a72a6a
  415773:	test   al,0xce
  415775:	fstp   TBYTE PTR [esi-0x77a52047]
  41577b:	mov    edx,0x1c6a8c49
  415780:	fwait
  415781:	rcr    DWORD PTR [edi+0x42dc868f],cl
  415787:	mov    ecx,0xcce7bf18
  41578c:	rcr    cl,0x9
  41578f:	inc    eax
  415790:	sbb    dl,BYTE PTR [eax]
  415792:	add    BYTE PTR [ebp-0x8],cl
  415795:	push   ebp
  415796:	out    dx,al
  415797:	xchg   ebp,eax
  415798:	fldenv [ebp+0x8]
  41579b:	pop    edx
  41579c:	and    edi,DWORD PTR [eax+0x598f2cc5]
  4157a2:	mov    al,ds:0xcca6bc8a
  4157a7:	xchg   DWORD PTR [ebp+0x149b039f],eax
  4157ad:	inc    ecx
  4157ae:	or     BYTE PTR [eax+0x5c],dl
  4157b1:	ins    BYTE PTR es:[edi],dx
  4157b2:	or     bh,BYTE PTR [eax+0x62]
  4157b5:	sub    dl,bh
  4157b7:	test   al,0x34
  4157b9:	adc    BYTE PTR [esi-0x2b],0x86
  4157bd:	je     0x41573f
  4157bf:	dec    edx
  4157c0:	push   es
  4157c1:	sahf   
  4157c2:	or     BYTE PTR [edx-0x52],bh
  4157c5:	xlat   BYTE PTR ds:[ebx]
  4157c6:	pop    ebp
  4157c7:	icebp  
  4157c8:	mov    ds:0xe8c2c564,al
  4157cd:	cld    
  4157ce:	(bad)  
  4157cf:	mov    dh,0x12
  4157d1:	mov    eax,ds:0x21468823
  4157d6:	arpl   WORD PTR [eax-0x1e9f085f],di
  4157dc:	cld    
  4157dd:	ret    0x6b2
  4157e0:	mov    ds:0x6c3a2da4,al
  4157e5:	stos   DWORD PTR es:[edi],eax
  4157e6:	outs   dx,BYTE PTR ds:[esi]
  4157e7:	jno    0x4157fa
  4157e9:	sub    DWORD PTR [ecx+edx*8+0x2c11616d],eax
  4157f0:	mov    ds:0xe841681a,eax
  4157f5:	mov    esi,0x408c3ae4
  4157fa:	fnsave [ebx+eax*4]
  4157fd:	call   0x4ff3:0x9e0c0b23
  415804:	xchg   ebp,eax
  415805:	dec    ecx
  415806:	mov    bh,0xf4
  415808:	pop    ds
  415809:	les    ebx,FWORD PTR [edi+0x29afa1c9]
  41580f:	dec    esi
  415810:	sbb    DWORD PTR [edi-0x7fb6c346],ebp
  415816:	add    BYTE PTR [ebx+0x1a],bl
  415819:	sbb    edx,edx
  41581b:	cmc    
  41581c:	dec    esi
  41581d:	jle    0x4157f0
  41581f:	and    eax,0xf7e4adfa
  415824:	jns    0x41589d
  415826:	adc    eax,0x6ee3628c
  41582b:	push   esp
  41582c:	hlt    
  41582d:	xchg   BYTE PTR [ecx],al
  41582f:	mov    esi,0x21412fc6
  415834:	into   
  415835:	xor    eax,0xfe888041
  41583a:	jle    0x415854
  41583c:	pop    esi
  41583d:	xchg   DWORD PTR [eax],edi
  41583f:	pushf  
  415840:	in     al,dx
  415841:	in     al,dx
  415842:	jecxz  0x41586b
  415844:	sbb    al,0x8e
  415846:	jle    0x41580b
  415848:	fldcw  WORD PTR [edi+0x2cbd5801]
  41584e:	inc    edi
  41584f:	icebp  
  415850:	shr    BYTE PTR [edx+0x11c454ba],cl
  415856:	mov    ds:0x8ed3cd9d,eax
  41585b:	inc    eax
  41585c:	lahf   
  41585d:	out    dx,eax
  41585e:	mov    eax,0xcba94d7a
  415863:	mov    ah,0x5a
  415865:	sbb    al,0xa3
  415867:	pop    ds
  415868:	lock mov bl,0x24
  41586b:	cld    
  41586c:	bound  eax,QWORD PTR [esi+0x12ddcd98]
  415872:	hlt    
  415873:	dec    edx
  415874:	inc    esp
  415875:	mov    cl,0x71
  415877:	fldlg2 
  415879:	xor    al,0x53
  41587b:	daa    
  41587c:	and    eax,0x3be09b6f
  415881:	pushf  
  415882:	xchg   ecx,eax
  415883:	(bad)  
  415884:	sbb    dh,BYTE PTR [ebx]
  415886:	mov    al,ds:0x7a885679
  41588b:	call   0x4bd7:0x3ec6a3ce
  415892:	js     0x415884
  415894:	push   ds
  415895:	dec    eax
  415896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415897:	dec    BYTE PTR [ebx+0x7af59050]
  41589d:	outs   dx,DWORD PTR ds:[esi]
  41589e:	shr    ebx,cl
  4158a0:	pop    es
  4158a1:	mov    DWORD PTR [ebp-0x7b15ee2d],edi
  4158a7:	push   edi
  4158a8:	or     dh,bl
  4158aa:	add    esi,DWORD PTR [edx]
  4158ac:	sub    al,0x74
  4158ae:	inc    ecx
  4158af:	xchg   ebp,eax
  4158b0:	out    0x8e,al
  4158b2:	mov    bh,0x3b
  4158b4:	or     edx,DWORD PTR [edx-0x41333a4b]
  4158ba:	mov    al,ds:0x2e1f154c
  4158bf:	loop   0x4158e7
  4158c1:	pop    ecx
  4158c2:	lods   eax,DWORD PTR ds:[esi]
  4158c3:	stos   DWORD PTR es:[edi],eax
  4158c4:	dec    edx
  4158c5:	xchg   esp,eax
  4158c6:	test   eax,0x1c9740d9
  4158cb:	fwait
  4158cc:	mov    ?,WORD PTR ds:0xeee5dccf
  4158d2:	mov    dh,BYTE PTR [ebp-0xb007abf]
  4158d8:	push   ebp
  4158d9:	dec    esp
  4158da:	and    BYTE PTR [esi+0x33d17693],cl
  4158e0:	dec    edx
  4158e1:	inc    ecx
  4158e2:	or     bh,BYTE PTR [esp+ebx*2-0x2]
  4158e6:	std    
  4158e7:	push   ss
  4158e8:	dec    ebp
  4158e9:	leave  
  4158ea:	push   cs
  4158eb:	mov    ds:0x6659d02e,al
  4158f0:	ror    DWORD PTR [ebx+0x789fb778],cl
  4158f6:	imul   edi,edx,0x4e
  4158f9:	push   ebx
  4158fa:	mul    edi
  4158fc:	neg    edi
  4158fe:	or     al,0x16
  415900:	adc    al,0xba
  415902:	test   al,0x26
  415904:	and    al,0xef
  415906:	or     edi,DWORD PTR [edi+0x42]
  415909:	iret   
  41590a:	pop    eax
  41590b:	mov    cl,BYTE PTR [edi]
  41590d:	pop    ecx
  41590e:	fwait
  41590f:	xchg   BYTE PTR ds:0x80b6e6a6,ch
  415915:	aam    0xf7
  415917:	das    
  415918:	cmp    ch,BYTE PTR [ecx]
  41591a:	pop    edi
  41591b:	int3   
  41591c:	setae  BYTE PTR [edi-0x66]
  415920:	or     al,BYTE PTR [ebp+0x50d495c7]
  415926:	shl    DWORD PTR [eax],0x48
  415929:	pushf  
  41592a:	mov    bl,ch
  41592c:	int3   
  41592d:	ss lahf 
  41592f:	shl    BYTE PTR ds:0xf7986982,1
  415935:	push   esp
  415936:	cli    
  415937:	inc    edx
  415938:	out    0xcc,eax
  41593a:	pusha  
  41593b:	push   0x37da4992
  415940:	xchg   ebp,eax
  415941:	lock scas al,BYTE PTR es:[edi]
  415943:	mov    dh,ah
  415945:	loopne 0x4159b5
  415947:	cmp    DWORD PTR [ebp+0x61],ebp
  41594a:	jl     0x4158ce
  41594c:	pop    ds
  41594d:	push   esi
  41594e:	stos   DWORD PTR es:[edi],eax
  41594f:	popf   
  415950:	je     0x415953
  415952:	idiv   DWORD PTR [esp+edi*8]
  415955:	pusha  
  415956:	push   0x34
  415958:	cld    
  415959:	cmovp  edx,DWORD PTR [edi+0x23]
  41595d:	ret    0x8d1d
  415960:	push   eax
  415961:	fcomip st,st(3)
  415963:	into   
  415964:	mov    dh,0x7e
  415966:	cld    
  415967:	xchg   edx,eax
  415968:	repnz pusha 
  41596a:	add    edx,DWORD PTR [eax-0x18]
  41596d:	dec    ebx
  41596e:	lock push es
  415970:	sub    bl,bl
  415972:	cmp    eax,0xeca4c6bf
  415977:	mov    edi,0x724cdb8b
  41597c:	or     eax,0x6152415
  415981:	xchg   esi,eax
  415982:	adc    BYTE PTR [eax+0x6327f164],ch
  415988:	push   0x35c5313f
  41598d:	je     0x4159c6
  41598f:	adc    bh,BYTE PTR [edi+0x73]
  415992:	cli    
  415993:	inc    ebp
  415994:	daa    
  415995:	push   esi
  415996:	test   al,0x5c
  415998:	imul   esi,DWORD PTR [ebp+edi*4-0x3a],0xa353b291
  4159a0:	inc    esi
  4159a1:	lea    esi,[ebx-0x50]
  4159a4:	add    DWORD PTR [esi+0x44a7067c],0x5cf9af22
  4159ae:	push   esp
  4159af:	adc    eax,0x2aa51790
  4159b4:	fsubp  st(3),st
  4159b6:	mov    bl,0x1c
  4159b8:	jae    0x415997
  4159ba:	push   ds
  4159bb:	retf   
  4159bc:	pop    edi
  4159bd:	push   ebp
  4159be:	in     eax,0x1d
  4159c0:	in     eax,0x33
  4159c2:	jmp    0x935a:0x67c87db6
  4159c9:	stc    
  4159ca:	pop    esp
  4159cb:	mov    dh,0x79
  4159cd:	out    0xd1,al
  4159cf:	aas    
  4159d0:	ss jg  0x415a13
  4159d3:	cmp    al,0xe7
  4159d5:	push   ebx
  4159d6:	mov    ebp,0x47ea3fe0
  4159db:	push   ebx
  4159dc:	inc    esp
  4159dd:	sar    BYTE PTR [edi+0x13],1
  4159e0:	dec    eax
  4159e1:	jns    0x415a5b
  4159e3:	bound  ecx,QWORD PTR [esi]
  4159e5:	out    0xf1,eax
  4159e7:	aaa    
  4159e8:	bound  eax,QWORD PTR [edx]
  4159ea:	icebp  
  4159eb:	mov    ?,WORD PTR [esi]
  4159ed:	lea    ebp,[ebx-0x34]
  4159f0:	mov    bh,0xfc
  4159f2:	dec    eax
  4159f3:	lds    edi,FWORD PTR [eax]
  4159f5:	and    DWORD PTR [esp+ecx*1],edx
  4159f8:	fwait
  4159f9:	imul   DWORD PTR [ebx+ebx*2]
  4159fc:	sar    ch,0x4
  4159ff:	push   esp
  415a00:	xor    eax,0x4c6d113d
  415a05:	mov    dh,0x76
  415a07:	mov    al,0x92
  415a09:	xchg   edi,eax
  415a0a:	jae    0x415994
  415a0c:	xor    ebp,DWORD PTR [edi]
  415a0e:	adc    bl,bl
  415a10:	or     dl,BYTE PTR [esi]
  415a12:	(bad)  
  415a13:	cld    
  415a14:	inc    edi
  415a15:	hlt    
  415a16:	jmp    0x415a1c
  415a18:	ins    DWORD PTR es:[edi],dx
  415a19:	or     BYTE PTR [eax+0x3d],cl
  415a1c:	inc    eax
  415a1d:	aas    
  415a1e:	stos   BYTE PTR es:[edi],al
  415a1f:	stos   BYTE PTR es:[edi],al
  415a20:	sub    al,0x6b
  415a22:	call   DWORD PTR [edi+0x5e]
  415a25:	sbb    DWORD PTR [esi+ebp*1+0x66830a2f],edx
  415a2c:	stc    
  415a2d:	std    
  415a2e:	sub    BYTE PTR [edx+0x42c69b43],dh
  415a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a35:	icebp  
  415a36:	test   DWORD PTR [edi],edx
  415a38:	cwde   
  415a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3a:	or     BYTE PTR [edi-0x1d],al
  415a3d:	sub    al,BYTE PTR [ebx]
  415a3f:	xchg   DWORD PTR [ecx],edx
  415a41:	jbe    0x415a24
  415a43:	je     0x415ac2
  415a45:	pop    ebx
  415a46:	stos   BYTE PTR es:[edi],al
  415a47:	and    al,0x40
  415a49:	or     ebx,DWORD PTR [edx-0x19]
  415a4c:	repnz fcmovb st,st(0)
  415a4f:	(bad)  
  415a50:	inc    DWORD PTR [ebx]
  415a52:	ja     0x415aa2
  415a54:	jl     0x415a29
  415a56:	popf   
  415a57:	test   BYTE PTR [esi],dl
  415a59:	jl     0x415a79
  415a5b:	dec    ecx
  415a5c:	pop    esi
  415a5d:	pushf  
  415a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5f:	fwait
  415a60:	sub    eax,0xe9993e31
  415a65:	repnz fldenv [edi-0x2ddf3c05]
  415a6c:	and    eax,0xe7a67b73
  415a71:	iret   
  415a72:	adc    eax,0x8e57d9f
  415a77:	(bad)  
  415a78:	jne    0x415a00
  415a7a:	shr    BYTE PTR [esi-0x6bd1339d],cl
  415a80:	outs   dx,BYTE PTR ds:[esi]
  415a81:	add    eax,0xdc90e7a0
  415a86:	push   eax
  415a87:	inc    edx
  415a88:	jnp    0x415a77
  415a8a:	inc    edi
  415a8b:	bnd jmp 0x415a45
  415a8e:	mov    edx,0x4f9fe149
  415a93:	paddb  mm1,mm1
  415a96:	(bad)
  415a9a:	outs   dx,BYTE PTR ds:[esi]
  415a9b:	retf   
  415a9c:	xor    DWORD PTR [eax+0x3a],ebp
  415a9f:	push   eax
  415aa0:	xor    ecx,esp
  415aa2:	mov    ds:0xaf66517d,al
  415aa7:	adc    ecx,DWORD PTR [esi-0xf4158bf]
  415aad:	inc    ecx
  415aae:	stos   BYTE PTR es:[edi],al
  415aaf:	arpl   WORD PTR [ebp+0x831856d],si
  415ab5:	cld    
  415ab6:	mov    ecx,0x60b9b14b
  415abb:	shr    BYTE PTR [esi],1
  415abd:	hlt    
  415abe:	mov    ch,0x55
  415ac0:	jle    0x415a95
  415ac2:	in     eax,dx
  415ac3:	das    
  415ac4:	inc    edx
  415ac5:	in     al,0x75
  415ac7:	int    0xf9
  415ac9:	and    al,0x32
  415acb:	int3   
  415acc:	mov    esi,0xd9b8151b
  415ad1:	pop    es
  415ad2:	aad    0x73
  415ad4:	call   0x5349c162
  415ad9:	sbb    esp,DWORD PTR [edx]
  415adb:	push   ds
  415adc:	pop    edx
  415add:	lahf   
  415ade:	xchg   ebp,eax
  415adf:	push   esp
  415ae0:	fistp  WORD PTR [ecx+0xf]
  415ae3:	cdq    
  415ae4:	cmp    BYTE PTR [ecx],0x20
  415ae7:	pop    ecx
  415ae8:	inc    ebp
  415ae9:	jmp    FWORD PTR [ebx-0x38d6acf2]
  415aef:	push   esp
  415af0:	mov    bh,0x43
  415af2:	sub    dl,cl
  415af4:	in     al,dx
  415af5:	jmp    0x9baf8048
  415afa:	int3   
  415afb:	fiadd  WORD PTR [eax]
  415afd:	retf   
  415afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aff:	sbb    eax,0x3f37cca5
  415b04:	jg     0x415b1c
  415b06:	mov    al,0xd
  415b08:	(bad)  
  415b09:	mov    ecx,es
  415b0b:	cmp    DWORD PTR [ebx],ebx
  415b0d:	cdq    
  415b0e:	cmc    
  415b0f:	shl    BYTE PTR [edi+0x48],0xe
  415b13:	sbb    BYTE PTR [edi],dh
  415b15:	loope  0x415b72
  415b17:	or     bh,ch
  415b19:	dec    edi
  415b1a:	and    al,0x8d
  415b1c:	loope  0x415b59
  415b1e:	adc    eax,0x8abf9bee
  415b23:	inc    esp
  415b24:	push   ebp
  415b25:	push   eax
  415b26:	jno    0x415b05
  415b28:	test   ecx,esp
  415b2a:	lea    edx,[edi-0xb92b86a]
  415b30:	pop    edi
  415b31:	fwait
  415b32:	ja     0x415bb1
  415b34:	lock int3 
  415b36:	es pop ebp
  415b38:	in     eax,dx
  415b39:	in     eax,0xb4
  415b3b:	and    eax,0xea8e26ed
  415b40:	adc    ah,cl
  415b42:	test   al,0xac
  415b44:	push   ebp
  415b45:	aam    0xdf
  415b47:	xor    DWORD PTR [ecx+0x45],ecx
  415b4a:	jmp    0x3255:0x6732672d
  415b51:	mov    bl,0x69
  415b53:	ins    DWORD PTR es:[edi],dx
  415b54:	push   edx
  415b55:	loope  0x415b18
  415b57:	sbb    DWORD PTR [esi+0x3b947a52],edx
  415b5d:	sti    
  415b5e:	xchg   DWORD PTR [ebx-0x3f5f193e],ebp
  415b64:	inc    ebp
  415b65:	sub    DWORD PTR [ebp+0x3e],0x56
  415b69:	pop    esp
  415b6a:	jl     0x415b78
  415b6c:	outs   dx,DWORD PTR ds:[esi]
  415b6d:	mov    dl,0xe9
  415b6f:	repnz mov cl,0xf9
  415b72:	and    esi,DWORD PTR [ecx+0x1f]
  415b75:	inc    ebp
  415b76:	into   
  415b77:	or     BYTE PTR [ecx-0x378d3420],ch
  415b7d:	mov    ds:0x4a0c9edf,al
  415b82:	inc    ebp
  415b83:	jb     0x415b66
  415b85:	mov    eax,0x5ee6ec8f
  415b8a:	lods   eax,DWORD PTR ds:[esi]
  415b8b:	cdq    
  415b8c:	mov    al,0xcc
  415b8e:	je     0x415b77
  415b90:	jno    0x415b9c
  415b92:	mov    cl,ch
  415b94:	(bad)  
  415b95:	mov    eax,0xd75eba6c
  415b9a:	rcl    BYTE PTR [eax],1
  415b9c:	pop    ebx
  415b9d:	jbe    0x415b63
  415b9f:	retf   0xce5f
  415ba2:	test   eax,0x837bb78b
  415ba7:	xor    dl,BYTE PTR [ebx-0x43]
  415baa:	js     0x415b77
  415bac:	nop
  415bad:	in     eax,0x5b
  415baf:	or     al,0xab
  415bb1:	mov    bh,0xa7
  415bb3:	mov    esp,DWORD PTR [edx-0x52f374cb]
  415bb9:	loope  0x415b6c
  415bbb:	(bad)  
  415bbc:	jnp    0x415b75
  415bbe:	sar    DWORD PTR [eax],0x5f
  415bc1:	es repnz sbb eax,0xcc4bb7c4
  415bc8:	es (bad) 
  415bca:	cmp    bl,al
  415bcc:	xor    cl,BYTE PTR [ecx-0x5c]
  415bcf:	int3   
  415bd0:	xchg   edx,eax
  415bd1:	adc    edi,DWORD PTR [ebx-0x3d6f4ab5]
  415bd7:	dec    ebx
  415bd8:	push   0x57
  415bda:	and    DWORD PTR [ebx-0xd9c4e5f],ebp
  415be0:	(bad)  
  415be1:	push   0x3e6514ad
  415be6:	jo     0x415c0a
  415be8:	or     DWORD PTR [ecx],edi
  415bea:	das    
  415beb:	push   ebx
  415bec:	xchg   BYTE PTR [ebx+0x37a956a1],cl
  415bf2:	pop    ss
  415bf3:	fcmovnb st,st(6)
  415bf5:	pop    eax
  415bf6:	stc    
  415bf7:	mov    edx,0x46bb23f8
  415bfc:	dec    edi
  415bfd:	and    DWORD PTR [ecx-0x1f],edi
  415c00:	scas   eax,DWORD PTR es:[edi]
  415c01:	mov    bh,0xac
  415c03:	inc    ecx
  415c04:	cmp    BYTE PTR [esi+0x53],cl
  415c07:	push   ds
  415c08:	fdiv   DWORD PTR [esi+edx*8]
  415c0b:	popa   
  415c0c:	cld    
  415c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0e:	dec    edi
  415c0f:	cmp    eax,0x14fa3432
  415c14:	leave  
  415c15:	lds    esi,FWORD PTR [eax-0x7ba6773b]
  415c1b:	cli    
  415c1c:	mov    dh,0xc3
  415c1e:	add    DWORD PTR [eax],edx
  415c20:	jno    0x415c08
  415c22:	shl    BYTE PTR [edx],0x68
  415c25:	xchg   edx,eax
  415c26:	inc    edi
  415c27:	addr16 pop ebx
  415c29:	cs js  0x415c0b
  415c2c:	add    ah,0x53
  415c2f:	push   cs
  415c30:	jp     0x415c31
  415c32:	cmp    eax,0x58f189fc
  415c37:	rcl    edx,cl
  415c39:	hlt    
  415c3a:	jge    0x415c1d
  415c3c:	or     DWORD PTR [esi-0x4b0c3055],0x28
  415c43:	jae    0x415bf7
  415c45:	mov    dl,0x8f
  415c47:	fucomip st,st(5)
  415c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c4a:	sbb    DWORD PTR [ebp-0x75],0x5335e429
  415c51:	lahf   
  415c52:	fdivr  DWORD PTR [ecx-0x54d5aacc]
  415c58:	adc    ebx,ebp
  415c5a:	mov    bl,0xbd
  415c5c:	xor    BYTE PTR cs:[ecx+ebx*1],bl
  415c60:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  415c62:	inc    eax
  415c63:	mov    ebx,0xe0e0f467
  415c68:	jp     0x415ca7
  415c6a:	shl    DWORD PTR [esi-0x59],cl
  415c6d:	mov    eax,0x1bf21f61
  415c72:	or     bl,bh
  415c74:	xchg   BYTE PTR [esi],dh
  415c76:	push   esi
  415c77:	cli    
  415c78:	cmp    BYTE PTR [ebx-0x7d],dl
  415c7b:	ror    DWORD PTR [edi],1
  415c7d:	div    BYTE PTR [ebx+0xb]
  415c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c81:	fimul  DWORD PTR [ecx+0x21ac0712]
  415c87:	push   esi
  415c88:	mov    BYTE PTR [edi+eiz*1],ch
  415c8b:	xor    al,0x3b
  415c8d:	mov    es,eax
  415c8f:	cwde   
  415c90:	xor    DWORD PTR [eax],0xb9386a96
  415c96:	daa    
  415c97:	jmp    0x415c93
  415c99:	push   esp
  415c9a:	sub    al,BYTE PTR [edx-0x5f7008c1]
  415ca0:	cmp    eax,DWORD PTR ds:0xc30d8af4
  415ca6:	push   esi
  415ca7:	in     al,0xe4
  415ca9:	xchg   ecx,eax
  415caa:	nop
  415cab:	mov    ah,0xb4
  415cad:	mov    al,0x48
  415caf:	lahf   
  415cb0:	mov    bl,0x6d
  415cb2:	cld    
  415cb3:	jbe    0x415d23
  415cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cb6:	mul    DWORD PTR [ebx]
  415cb8:	sub    al,dh
  415cba:	fcmovne st,st(1)
  415cbc:	ins    BYTE PTR es:[edi],dx
  415cbd:	fadd   st,st(4)
  415cbf:	mov    ch,0x54
  415cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cc2:	push   ebp
  415cc3:	cdq    
  415cc4:	out    0x3d,al
  415cc6:	pushf  
  415cc7:	jle    0x415ce2
  415cc9:	das    
  415cca:	push   ds
  415ccb:	cmc    
  415ccc:	or     bl,bh
  415cce:	inc    ebx
  415ccf:	add    BYTE PTR [eax],al
  415cd1:	stc    
  415cd2:	mov    ds:0xd92d7b6d,eax
  415cd7:	cmp    BYTE PTR [eax+0x29598100],0xd6
  415cde:	imul   edi,DWORD PTR [ebx],0x82431071
  415ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce5:	gs mov ecx,0x822ce678
  415ceb:	lock nop
  415ced:	push   edi
  415cee:	inc    ebp
  415cef:	scas   eax,DWORD PTR es:[edi]
  415cf0:	and    al,BYTE PTR [edx]
  415cf2:	jmp    0xc81be755
  415cf7:	(bad)  
  415cf9:	mov    bh,0xd2
  415cfb:	aas    
  415cfc:	cmp    BYTE PTR [ecx-0x7556f701],bh
  415d02:	ret    
  415d03:	retf   0xf99
  415d06:	push   ebx
  415d07:	push   ecx
  415d08:	adc    eax,0xb2fa6988
  415d0d:	pop    ebx
  415d0e:	jl     0x415ce7
  415d10:	dec    edx
  415d11:	icebp  
  415d12:	out    0xc7,al
  415d14:	or     ah,BYTE PTR [ecx]
  415d16:	xchg   ebp,eax
  415d17:	mov    ah,0x32
  415d19:	das    
  415d1a:	jle    0x415d6e
  415d1c:	mov    edx,0xa419f6cf
  415d21:	or     cl,BYTE PTR ds:0x1b8b456c
  415d27:	js     0x415d82
  415d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d2a:	aaa    
  415d2b:	push   es
  415d2c:	jmp    0x415cb6
  415d2e:	sbb    BYTE PTR [esp+ebx*1],0x6c
  415d32:	leave  
  415d33:	adc    DWORD PTR [ebx+ebp*4],ebx
  415d36:	mov    edi,DWORD PTR [eax-0x4]
  415d39:	test   ebp,edi
  415d3b:	mov    al,0x6f
  415d3d:	call   0xbcf1:0x22f65a33
  415d44:	aaa    
  415d45:	pop    ebx
  415d46:	xchg   BYTE PTR [ecx+edi*4+0x68],ch
  415d4a:	daa    
  415d4b:	sbb    ebp,eax
  415d4d:	sub    dh,cl
  415d4f:	es mov eax,0x24c9eaa4
  415d55:	mov    ebp,0xe707e58a
  415d5a:	addr16 dec eax
  415d5c:	aas    
  415d5d:	scas   eax,DWORD PTR es:[edi]
  415d5e:	aaa    
  415d5f:	ret    0x52e0
  415d62:	push   edx
  415d63:	xchg   BYTE PTR [ebp-0x179d053d],dl
  415d69:	into   
  415d6a:	or     eax,0x948b916f
  415d6f:	adc    eax,0xeac55d84
  415d74:	fisubr DWORD PTR ds:0x43f3cf6a
  415d7a:	jmp    0x415db1
  415d7c:	daa    
  415d7d:	or     BYTE PTR [edx+0x1d27faf3],bl
  415d83:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415d85:	cs sbb bh,ch
  415d88:	push   cs
  415d89:	repnz push ecx
  415d8b:	(bad)  
  415d8c:	sti    
  415d8d:	xchg   ecx,eax
  415d8e:	push   edi
  415d8f:	or     DWORD PTR [esi-0x3d8afd33],0x9e1f2c2b
  415d99:	jbe    0x415dd5
  415d9b:	fst    QWORD PTR [ebx+eiz*1-0x6d]
  415d9f:	xchg   edi,eax
  415da0:	inc    esp
  415da1:	mov    dh,0x52
  415da3:	mov    bl,0xe7
  415da5:	push   edx
  415da6:	push   cs
  415da7:	ja     0x415dfc
  415da9:	lahf   
  415daa:	xor    esp,DWORD PTR [esi]
  415dac:	mov    al,ds:0xdcf1427c
  415db1:	retf   0xb887
  415db4:	(bad)  
  415db7:	xchg   BYTE PTR es:[eax+ebx*1-0x55],bh
  415dbc:	add    DWORD PTR [edi-0x7d16d838],ebx
  415dc2:	rcl    DWORD PTR [ecx-0x3b87c62c],0xd8
  415dc9:	cmp    eax,0xa05aaecc
  415dce:	or     eax,0xe10369cc
  415dd3:	and    al,BYTE PTR [edx-0x1563f921]
  415dd9:	in     eax,0x70
  415ddb:	mov    ds:0x235d1448,eax
  415de0:	adc    BYTE PTR [edi-0x5b],0x83
  415de4:	jg     0x415e43
  415de6:	loop   0x415e0c
  415de8:	and    al,0x39
  415dea:	cmp    eax,0xfc2e150f
  415def:	jmp    FWORD PTR [ecx+0x4fa1dd44]
  415df5:	or     al,0xd0
  415df7:	sub    cl,bh
  415df9:	dec    edi
  415dfa:	sub    esi,edi
  415dfc:	js     0x415e02
  415dfe:	add    BYTE PTR [edi*2+0x7b884f77],ah
  415e05:	add    bh,bh
  415e07:	sub    ebp,ecx
  415e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0a:	or     eax,0xba156eb3
  415e0f:	aam    0xce
  415e11:	mov    al,0xd6
  415e13:	mov    ch,0x9f
  415e15:	cmp    al,0xa6
  415e17:	fidiv  WORD PTR [ecx+0x53f93cb9]
  415e1d:	mov    DWORD PTR [edx-0x3c0fc899],esi
  415e23:	pop    edx
  415e24:	nop
  415e25:	out    0x31,al
  415e27:	xor    BYTE PTR [edi],ch
  415e29:	and    eax,0x8e5a53f1
  415e2e:	mov    ds:0x458e590d,al
  415e33:	push   0x27dc6b35
  415e38:	not    BYTE PTR [edx]
  415e3a:	mov    edi,0xf3d070b9
  415e3f:	pop    eax
  415e40:	push   ebp
  415e41:	cld    
  415e42:	(bad)  
  415e43:	or     dl,cl
  415e45:	sub    BYTE PTR [edi-0x4ea81900],bl
  415e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e4c:	aad    0x68
  415e4e:	add    DWORD PTR [edi-0x484076b3],0x2fb5d4d8
  415e58:	xchg   ecx,eax
  415e59:	mov    ch,0x78
  415e5b:	shl    DWORD PTR [edx+esi*2+0x63],0x17
  415e60:	shl    BYTE PTR [ebp+0x68],1
  415e63:	popf   
  415e64:	rcr    DWORD PTR [ebx+0x1c46af74],0xfc
  415e6b:	ja     0x415e04
  415e6d:	adc    DWORD PTR [esi+edi*8],edx
  415e70:	sub    DWORD PTR [ebx+ecx*4+0x12b00cee],edx
  415e77:	dec    ebp
  415e78:	out    dx,al
  415e79:	loope  0x415eb3
  415e7b:	inc    esp
  415e7c:	mov    dl,0xcb
  415e7e:	inc    ecx
  415e7f:	jmp    0xda29b70d
  415e84:	xor    eax,0x863d2a92
  415e89:	xchg   ebx,eax
  415e8a:	jmp    0x98264850
  415e8f:	xlat   BYTE PTR ds:[ebx]
  415e90:	jns    0x415f08
  415e92:	outs   dx,DWORD PTR ds:[esi]
  415e93:	add    esp,DWORD PTR [ebp+0x17]
  415e96:	loop   0x415ee5
  415e98:	mov    WORD PTR [edi],ds
  415e9a:	adc    ecx,ecx
  415e9c:	shl    dh,0x65
  415e9f:	mov    esp,0xc03cde1b
  415ea4:	adc    BYTE PTR [ecx+edi*2-0x13],ah
  415ea8:	adc    al,al
  415eaa:	mov    eax,ds:0x78cab857
  415eaf:	(bad)  
  415eb0:	loopne 0x415e81
  415eb2:	out    dx,ax
  415eb4:	ss dec ebx
  415eb6:	jmp    0xff77:0x144ea27c
  415ebd:	pushf  
  415ebe:	or     DWORD PTR [eax+0x6d],eax
  415ec1:	mov    ds:0x706ab7f9,eax
  415ec6:	ins    DWORD PTR es:[edi],dx
  415ec7:	xor    eax,0x851707e4
  415ecc:	loopne 0x415e67
  415ece:	mov    eax,DWORD PTR [ecx+0x30]
  415ed1:	enter  0x8315,0x13
  415ed5:	push   ds
  415ed6:	out    dx,eax
  415ed7:	mov    ecx,0x8ff53962
  415edc:	call   0xa5e8:0xd95a9f01
  415ee3:	mov    al,ds:0x4000da5f
  415ee8:	fsubr  st,st(6)
  415eea:	jp     0x415e8d
  415eec:	stos   BYTE PTR es:[edi],al
  415eed:	mov    WORD PTR [edx+eax*4],ss
  415ef0:	sub    BYTE PTR [esi],dl
  415ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef3:	pop    DWORD PTR [eax+0x6cf72ab1]
  415ef9:	dec    edx
  415efa:	push   DWORD PTR [esp+eax*1+0x306935c5]
  415f01:	(bad)  
  415f02:	(bad)  
  415f03:	adc    ebx,esi
  415f05:	into   
  415f06:	pusha  
  415f07:	sar    BYTE PTR [ecx],0x75
  415f0a:	in     eax,0x4f
  415f0c:	ss mov ebp,0x726fc4f3
  415f12:	push   esi
  415f13:	sbb    al,0xee
  415f15:	push   esp
  415f16:	push   cs
  415f17:	push   eax
  415f18:	or     DWORD PTR [esi+0x1a],ebx
  415f1b:	fsub   QWORD PTR [esi+0x4b]
  415f1e:	cmp    eax,0x24
  415f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f22:	mov    bh,0xc7
  415f24:	(bad)  
  415f25:	jl     0x415f0f
  415f27:	fwait
  415f28:	jmp    0x26d8:0x620ac410
  415f2f:	mov    ds:0x690b70a,eax
  415f34:	call   0x52e6ec85
  415f39:	ret    0x8ee4
  415f3c:	jecxz  0x415f88
  415f3e:	xor    al,0x26
  415f40:	cli    
  415f41:	fadd   st,st(7)
  415f43:	bound  ebp,QWORD PTR [edi]
  415f45:	push   ecx
  415f46:	data16 jecxz 0x415f4c
  415f49:	imul   esp,DWORD PTR [esi],0x11
  415f4c:	pop    ds
  415f4d:	xchg   BYTE PTR [esi-0x5b9b9176],bl
  415f53:	fdivr  DWORD PTR [ecx-0x16dfbb84]
  415f59:	xor    al,0xf8
  415f5b:	xor    BYTE PTR [edx-0x74316e10],0x41
  415f62:	jp     0x415fae
  415f64:	pushf  
  415f65:	sub    BYTE PTR [edx-0x76],0x3c
  415f69:	retf   
  415f6a:	shr    BYTE PTR [eax],1
  415f6c:	mov    edx,DWORD PTR [ebx]
  415f6e:	es push 0xffffffec
  415f71:	mov    bh,al
  415f73:	jae    0x415fcf
  415f75:	mov    dl,0xa1
  415f77:	outs   dx,BYTE PTR ds:[esi]
  415f78:	jmp    0x70bcd579
  415f7d:	(bad)  
  415f7e:	fmul   st,st(5)
  415f80:	mov    BYTE PTR [eax],0xa5
  415f83:	mov    edx,0xfe31b9b8
  415f88:	test   DWORD PTR [esi],esp
  415f8a:	data16 jmp 0x415f24
  415f8d:	iret   
  415f8e:	adc    al,0xfb
  415f90:	xchg   esp,eax
  415f91:	jnp    0x415f5c
  415f93:	and    bl,BYTE PTR [ebx-0x11ce38e3]
  415f99:	loop   0x416017
  415f9b:	outs   dx,DWORD PTR ds:[esi]
  415f9c:	pop    edx
  415f9d:	clc    
  415f9e:	xor    bl,BYTE PTR [eax]
  415fa0:	in     al,0x2
  415fa2:	jmp    0x496132f0
  415fa7:	sub    DWORD PTR [edi+0x21],eax
  415faa:	sbb    al,BYTE PTR [ebx-0x74]
  415fad:	push   edx
  415fae:	retf   0xf0fb
  415fb1:	cmc    
  415fb2:	out    dx,al
  415fb3:	push   ds
  415fb4:	pop    ss
  415fb5:	cmp    al,0x34
  415fb7:	push   esi
  415fb8:	and    BYTE PTR [esi+0x5f71e680],cl
  415fbe:	mov    bh,BYTE PTR [eax]
  415fc0:	push   ebx
  415fc1:	rcr    DWORD PTR [esi+0x33608027],1
  415fc7:	sbb    DWORD PTR [eax+ebx*2-0x7],ecx
  415fcb:	les    esi,FWORD PTR [eax-0x28]
  415fce:	es scas al,BYTE PTR es:[edi]
  415fd0:	dec    edi
  415fd1:	enter  0x4430,0x6a
  415fd5:	ins    DWORD PTR es:[edi],dx
  415fd6:	sub    ebx,DWORD PTR [edx+0x7e]
  415fd9:	fmul   QWORD PTR [ebx+ebp*2]
  415fdc:	mov    ebx,0xcaebe30a
  415fe1:	loopne 0x416050
  415fe3:	xor    esi,DWORD PTR [eax-0x76a8a705]
  415fe9:	inc    esp
  415fea:	ins    DWORD PTR es:[edi],dx
  415feb:	cld    
  415fec:	push   cs
  415fed:	mov    ebx,0x3890594c
  415ff2:	repnz gs pushf 
  415ff5:	arpl   WORD PTR [esi+eax*8-0x1247e416],cx
  415ffc:	mov    bh,0x34
  415ffe:	(bad)  
  415fff:	pop    edx
  416000:	or     eax,DWORD PTR [ebp+0x1540cded]
  416006:	pop    ebp
  416007:	and    bl,BYTE PTR [ebx-0x152be309]
  41600d:	mov    eax,0xe3f2c8b5
  416012:	std    
  416013:	xor    al,BYTE PTR [ecx+esi*2]
  416016:	aaa    
  416017:	push   ebp
  416018:	scas   eax,DWORD PTR es:[edi]
  416019:	(bad)  
  41601a:	sbb    DWORD PTR [eax+0x439c8137],esi
  416020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416021:	sbb    al,0x1d
  416023:	push   cs
  416024:	xlat   BYTE PTR ds:[ebx]
  416025:	mov    edi,0x44585c65
  41602a:	sub    BYTE PTR [edi],bl
  41602c:	mov    eax,DWORD PTR [edx-0x40]
  41602f:	in     al,dx
  416030:	jo     0x416064
  416032:	ds xor ah,ah
  416035:	push   ss
  416036:	push   ss
  416037:	push   0x477947ae
  41603c:	int    0x96
  41603e:	mov    edi,0x546f5851
  416043:	add    BYTE PTR [eax+0x54],ch
  416046:	sbb    eax,0xaaae37c3
  41604b:	je     0x416093
  41604d:	inc    esp
  41604e:	es clc 
  416050:	add    BYTE PTR [ebp-0x56b6b6b8],cl
  416056:	pop    esi
  416057:	pushf  
  416058:	(bad)  
  416059:	outs   dx,BYTE PTR ds:[esi]
  41605a:	mov    al,0xc4
  41605c:	ja     0x41601e
  41605e:	xchg   esp,eax
  41605f:	mov    al,ds:0x8c9a8176
  416064:	pop    ss
  416065:	jmp    0x7f0711b0
  41606a:	leave  
  41606b:	push   0x4ef2c866
  416070:	int    0xcd
  416072:	cmc    
  416073:	ins    BYTE PTR es:[edi],dx
  416074:	add    ebx,DWORD PTR [eax+0x33]
  416077:	mov    esi,0xeda48b13
  41607c:	in     al,0xbf
  41607e:	imul   edx,ecx,0x5c511594
  416084:	and    eax,0x473eb8ef
  416089:	fwait
  41608a:	jb     0x416088
  41608c:	adc    eax,DWORD PTR [ecx+ecx*8+0x5e339903]
  416093:	inc    ecx
  416094:	push   esi
  416095:	mov    esi,0xa6691f25
  41609a:	jae    0x416038
  41609c:	xor    esp,DWORD PTR [ebx-0x2f]
  41609f:	je     0x4160bc
  4160a1:	shl    DWORD PTR [ebp+0x15e310cd],0x28
  4160a8:	pop    ecx
  4160a9:	mov    DWORD PTR [esi-0xd4b5195],0xe79b5430
  4160b3:	xchg   esp,eax
  4160b4:	stos   DWORD PTR es:[edi],eax
  4160b5:	or     DWORD PTR [eax+0x28],0xbd2de821
  4160bc:	adc    DWORD PTR [esp+esi*2-0x5],0xffffffe0
  4160c1:	dec    edi
  4160c2:	pop    ss
  4160c3:	sub    eax,0x6b1eb03c
  4160c8:	push   cs
  4160c9:	and    al,bl
  4160cb:	aam    0xfb
  4160cd:	(bad)  
  4160ce:	mov    ds:0xb49253dd,eax
  4160d3:	xchg   cl,bl
  4160d5:	dec    ecx
  4160d6:	gs fs test al,0xe8
  4160da:	ins    BYTE PTR es:[edi],dx
  4160db:	out    0xf8,eax
  4160dd:	xchg   ecx,eax
  4160de:	sar    DWORD PTR [ebx],cl
  4160e0:	fwait
  4160e1:	and    bl,dl
  4160e3:	popa   
  4160e4:	xor    dl,BYTE PTR [edi+eiz*1-0x781da0da]
  4160eb:	enter  0xa433,0xf2
  4160ef:	inc    esi
  4160f0:	fnstcw WORD PTR [eax]
  4160f2:	imul   eax,esp,0xffffffa2
  4160f5:	push   esp
  4160f6:	pop    esi
  4160f7:	clc    
  4160f8:	dec    ebp
  4160f9:	imul   eax,DWORD PTR [esi-0x28134f95],0xda2cae87
  416103:	aaa    
  416104:	mov    ds:0x36897dc3,eax
  416109:	dec    ecx
  41610a:	or     eax,0xffffff9b
  41610d:	jmp    0x416124
  41610f:	xchg   edi,eax
  416110:	jg     0x416136
  416112:	mov    ch,0xc2
  416114:	test   DWORD PTR [ecx-0x58965c5a],0x87d3373f
  41611e:	je     0x41614c
  416120:	hlt    
  416121:	xor    BYTE PTR [ebp+0x13],dl
  416124:	in     eax,0x15
  416126:	push   esi
  416127:	or     BYTE PTR [edi+0x6c],bl
  41612a:	lahf   
  41612b:	nop
  41612c:	fldcw  WORD PTR [edi+ecx*4-0x65bcb3ab]
  416133:	xor    DWORD PTR [edi],esi
  416135:	repz retf 0x795f
  416139:	inc    ecx
  41613a:	adc    al,0xc4
  41613c:	sbb    bl,BYTE PTR [esi+0x37]
  41613f:	nop
  416140:	or     edi,esi
  416142:	scas   eax,DWORD PTR es:[edi]
  416143:	adc    cl,BYTE PTR [ebp+0x5b]
  416146:	or     DWORD PTR [ecx],edi
  416148:	cmp    ax,0x5396
  41614c:	jmp    0x416169
  41614e:	dec    eax
  41614f:	mov    dl,0x37
  416151:	ins    BYTE PTR es:[di],dx
  416153:	jae    0x416126
  416155:	(bad)  
  416156:	mov    edi,0xe5edbd23
  41615b:	xchg   ecx,eax
  41615c:	sub    DWORD PTR [ebx+0x36],ebx
  41615f:	sub    eax,0x35a26263
  416164:	mov    ebx,ss
  416166:	add    edx,DWORD PTR [eax+0x1bd6b61]
  41616c:	jmp    0x60294cad
  416171:	xchg   dl,ch
  416173:	xor    al,0xe9
  416175:	jmp    0x416142
  416177:	push   ebp
  416178:	arpl   WORD PTR [ebp-0x17],di
  41617b:	(bad)  
  41617c:	mov    WORD PTR [ecx+0x54cd4477],gs
  416182:	mov    al,ds:0xcbecd1ee
  416187:	cmc    
  416188:	out    dx,al
  416189:	icebp  
  41618a:	xor    esi,ebp
  41618c:	ror    DWORD PTR [eax],1
  41618e:	add    cl,BYTE PTR [eax]
  416190:	arpl   cx,bx
  416192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416193:	push   ss
  416194:	call   0x96be:0x78164260
  41619b:	inc    ebx
  41619c:	inc    edi
  41619d:	mov    ecx,0xa57615a0
  4161a2:	xchg   ecx,eax
  4161a3:	sbb    eax,0xaef3c5bb
  4161a8:	sbb    eax,0x6fdea861
  4161ad:	cmp    eax,0x66f502dd
  4161b2:	add    al,0x49
  4161b4:	dec    edi
  4161b5:	add    eax,0x4c2a0844
  4161ba:	ret    0xa515
  4161bd:	add    al,0xd6
  4161bf:	cmp    DWORD PTR [esi],eax
  4161c1:	mov    cl,0xd0
  4161c3:	inc    ebx
  4161c4:	(bad)  
  4161c5:	lds    edx,FWORD PTR [ecx]
  4161c7:	xor    eax,0x4de02a79
  4161cc:	in     al,0xa0
  4161ce:	jae    0x416153
  4161d0:	and    eax,0x53678978
  4161d5:	xor    ecx,edx
  4161d7:	int3   
  4161d8:	les    ecx,FWORD PTR [edi]
  4161da:	inc    ebp
  4161db:	test   eax,0x603f28f9
  4161e0:	mov    ebp,0xbd61bd
  4161e5:	and    DWORD PTR [edi],eax
  4161e7:	lods   al,BYTE PTR ds:[esi]
  4161e8:	and    dh,cl
  4161ea:	add    ebx,DWORD PTR [esi-0x749940f4]
  4161f0:	inc    DWORD PTR [ecx-0x4b6a299b]
  4161f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161f7:	xlat   BYTE PTR ds:[ebx]
  4161f8:	jp     0x41624e
  4161fa:	jbe    0x41622a
  4161fc:	inc    DWORD PTR [eax+ecx*8-0x79]
  416200:	jmp    0x66c7194
  416205:	or     bh,BYTE PTR [edi]
  416207:	mov    ss,WORD PTR [eax-0x3b80289f]
  41620d:	push   ds
  41620e:	fisub  DWORD PTR [edx+eiz*1]
  416211:	dec    edx
  416212:	mov    bl,0xcc
  416214:	repz mov ebp,0xdc2f11bb
  41621a:	int    0xaf
  41621c:	add    DWORD PTR [edx-0xf8f0f69],esi
  416222:	mov    ss,WORD PTR [edx-0x6b848554]
  416228:	adc    BYTE PTR [edi],0xf7
  41622b:	cmp    edx,DWORD PTR [eax+0x1c66d2ae]
  416231:	aas    
  416232:	out    dx,eax
  416233:	jno    0x41629b
  416235:	adc    al,0x7a
  416237:	lds    ebp,FWORD PTR [ecx]
  416239:	or     DWORD PTR [ebp+edi*4+0x27],esi
  41623d:	pop    ds
  41623e:	cwde   
  41623f:	mov    dl,0x61
  416241:	imul   esi,DWORD PTR [esi+esi*2+0x7],0xb04345e5
  416249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41624a:	push   cs
  41624b:	pop    ebp
  41624c:	fs inc esp
  41624e:	dec    ebx
  41624f:	pop    ds
  416250:	mov    esi,0x6c651430
  416255:	mov    ebx,0x66b2474e
  41625a:	add    DWORD PTR [eax-0x69],0x58985696
  416261:	fiadd  DWORD PTR [edx-0x1bedb7a8]
  416267:	mov    cl,0x57
  416269:	xor    ebp,edi
  41626b:	mov    eax,0x8c63dccc
  416270:	(bad)  
  416271:	aam    0xa8
  416273:	jno    0x416224
  416275:	or     al,0xe8
  416277:	rol    DWORD PTR gs:[ecx+0x45446512],1
  41627e:	mov    eax,ds:0x65a1f789
  416283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416284:	das    
  416285:	jnp    0x416213
  416287:	mov    BYTE PTR [ebp-0x8],dl
  41628a:	add    esp,DWORD PTR [ebx]
  41628c:	push   0xc82a640b
  416291:	xchg   esi,eax
  416292:	icebp  
  416293:	add    al,0xb4
  416295:	mov    cl,BYTE PTR [edi+0x22acfa08]
  41629b:	pushf  
  41629c:	icebp  
  41629d:	std    
  41629e:	jb     0x416259
  4162a0:	xchg   ebx,eax
  4162a1:	push   0xe08fcd82
  4162a6:	mov    ecx,0x2f8bb42
  4162ab:	outs   dx,DWORD PTR ds:[esi]
  4162ac:	pop    es
  4162ad:	or     BYTE PTR [ebp+0x5e],bh
  4162b0:	lods   eax,DWORD PTR ds:[esi]
  4162b1:	inc    edx
  4162b2:	push   0x93d95c36
  4162b7:	sahf   
  4162b8:	xchg   esi,eax
  4162b9:	inc    ebx
  4162ba:	(bad)  
  4162bb:	daa    
  4162bc:	xchg   edi,eax
  4162bd:	push   edi
  4162be:	and    edi,ecx
  4162c0:	mov    ebx,0xdbfb0ee5
  4162c5:	(bad)  
  4162c6:	leave  
  4162c7:	or     eax,0x4ea4fc67
  4162cc:	stc    
  4162cd:	xor    eax,0xc546e304
  4162d2:	sub    DWORD PTR ds:0x79c3f355,esi
  4162d8:	rcr    BYTE PTR [ebp+eiz*4-0x653d6228],1
  4162df:	mov    bl,0xb9
  4162e1:	js     0x41635f
  4162e3:	xor    DWORD PTR [edx],eax
  4162e5:	push   ss
  4162e6:	cmp    bl,dh
  4162e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162e9:	sbb    dl,al
  4162eb:	mov    dh,0xff
  4162ed:	adc    DWORD PTR [eax-0x184b24be],esi
  4162f3:	add    ch,BYTE PTR [edi*8-0x763cb49]
  4162fa:	mov    esp,gs
  4162fc:	cmp    edi,DWORD PTR [esi]
  4162fe:	sub    eax,0xe0d0c1a2
  416303:	dec    esi
  416304:	repnz gs xor eax,0x301e5f26
  41630b:	out    dx,al
  41630c:	push   0xffffffbf
  41630e:	mov    dl,0x7e
  416310:	cmp    DWORD PTR [edi-0x1d],edx
  416313:	stos   DWORD PTR es:[edi],eax
  416314:	shl    DWORD PTR [edx+ebx*8+0x437f84ec],1
  41631b:	cmp    al,BYTE PTR [edi]
  41631d:	jno    0x416358
  41631f:	cld    
  416320:	es pop edi
  416322:	gs adc edx,eax
  416325:	loope  0x41634b
  416327:	or     BYTE PTR [esi+0x32275bed],bl
  41632d:	scas   al,BYTE PTR es:[edi]
  41632e:	popf   
  41632f:	dec    ecx
  416330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416331:	fsubr  DWORD PTR [edi]
  416333:	les    ecx,FWORD PTR [esi]
  416335:	popw   ds
  416337:	jmp    0x6997:0xf442f488
  41633e:	inc    ebx
  41633f:	aaa    
  416340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416341:	mov    WORD PTR [edi+0x37c596d],ss
  416347:	push   edi
  416348:	pushf  
  416349:	scas   al,BYTE PTR es:[edi]
  41634a:	or     eax,0x2260aa6c
  41634f:	pop    ss
  416350:	int    0xa2
  416352:	pusha  
  416353:	out    dx,al
  416354:	mov    bh,0x5
  416356:	or     al,0x11
  416358:	or     ah,ch
  41635a:	ds out 0x92,eax
  41635d:	not    BYTE PTR [edi+edi*2-0x5849725b]
  416364:	mov    edi,0x4c6887c4
  416369:	or     DWORD PTR [ecx],edx
  41636b:	mov    ecx,0x9ec03556
  416370:	push   0xffffffeb
  416372:	aad    0x87
  416374:	daa    
  416375:	inc    BYTE PTR [eax]
  416377:	iret   
  416378:	pop    eax
  416379:	rcl    DWORD PTR [edi],cl
  41637b:	popf   
  41637c:	jecxz  0x4163b3
  41637e:	mov    al,ds:0x374567d1
  416383:	(bad)  
  416384:	xor    eax,0x25966753
  416389:	pop    eax
  41638a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41638b:	xor    eax,0x353f3fae
  416390:	(bad)  
  416391:	scas   eax,DWORD PTR es:[edi]
  416392:	pop    edx
  416393:	fnstcw WORD PTR [edi-0xeceaf1c]
  416399:	and    bh,0xfc
  41639c:	(bad)  
  41639d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639e:	clc    
  41639f:	xor    bl,BYTE PTR [ebx-0xd]
  4163a2:	mov    cl,0x64
  4163a4:	cmp    eax,0x77c15247
  4163a9:	out    dx,al
  4163aa:	int    0x6b
  4163ac:	dec    eax
  4163ad:	cmp    DWORD PTR [edi+0x6b],ebx
  4163b0:	dec    esi
  4163b1:	dec    esi
  4163b2:	sbb    BYTE PTR [eax-0x2eec73b5],0x7b
  4163b9:	lock div DWORD PTR [edi-0x38]
  4163bd:	cmp    DWORD PTR [ebx-0x99f2487],0xadb468dc
  4163c7:	mov    al,ds:0x67e24237
  4163cc:	(bad)  
  4163cd:	jbe    0x416417
  4163cf:	outs   dx,BYTE PTR ds:[esi]
  4163d0:	inc    ebp
  4163d1:	xor    al,0x29
  4163d3:	and    al,0xf0
  4163d5:	and    edx,edi
  4163d7:	iret   
  4163d8:	xor    bl,ah
  4163da:	cli    
  4163db:	frstor [edi+ebx*8]
  4163de:	stos   BYTE PTR es:[edi],al
  4163df:	icebp  
  4163e0:	pop    edi
  4163e1:	in     al,0xbc
  4163e3:	push   ebp
  4163e4:	loopne 0x4163a0
  4163e6:	push   ebp
  4163e7:	rol    BYTE PTR [ebx],cl
  4163e9:	adc    DWORD PTR [edi+0x47f84a13],eax
  4163ef:	cmp    bh,bh
  4163f1:	xlat   BYTE PTR ds:[ebx]
  4163f2:	mov    ah,0x94
  4163f4:	lods   eax,DWORD PTR ds:[esi]
  4163f5:	clc    
  4163f6:	sbb    eax,0xf154ba73
  4163fb:	push   cs
  4163fc:	add    al,0x31
  4163fe:	xor    edi,DWORD PTR [ecx+0x702e8e46]
  416404:	inc    ebx
  416405:	div    BYTE PTR [ecx]
  416407:	sbb    bl,BYTE PTR [ebx]
  416409:	fs std 
  41640b:	inc    ecx
  41640c:	leave  
  41640d:	push   eax
  41640e:	stos   DWORD PTR es:[edi],eax
  41640f:	adc    al,0x8a
  416411:	cmp    al,0xe0
  416413:	mov    al,ds:0xd3ee8f8d
  416418:	push   ebx
  416419:	push   esi
  41641a:	data16 into 
  41641c:	cli    
  41641d:	inc    ecx
  41641e:	mov    WORD PTR [ecx],?
  416420:	outs   dx,DWORD PTR ds:[esi]
  416421:	or     eax,0x5204cc19
  416426:	xor    edi,DWORD PTR [eax+0x9e98d25]
  41642c:	loopne 0x41641f
  41642e:	xor    esp,DWORD PTR [ebp-0x6ea45f04]
  416434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416435:	lods   al,BYTE PTR ds:[esi]
  416436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416437:	ins    DWORD PTR es:[edi],dx
  416438:	(bad)  
  416439:	gs add esp,ebp
  41643c:	enter  0x727f,0x67
  416440:	imul   edx,DWORD PTR [eax-0x56d39d20],0x45
  416447:	cmp    eax,0xc4d03bb8
  41644c:	ds xor cl,dh
  41644f:	sbb    al,0x4c
  416451:	imul   DWORD PTR [ecx+0x432da7be]
  416457:	pop    edx
  416458:	pop    esp
  416459:	cmp    eax,0x94ba1e68
  41645e:	jno    0x416479
  416460:	xchg   ecx,eax
  416461:	mov    ebx,0x6001a2c8
  416466:	cmp    eax,0xc9875eca
  41646b:	adc    DWORD PTR [esp+eiz*2-0x3a],0xffffffeb
  416470:	pop    esp
  416471:	adc    ah,BYTE PTR [ecx]
  416473:	or     DWORD PTR [edx],eax
  416475:	push   0x1125166
  41647a:	(bad)  
  41647b:	adc    edi,eax
  41647d:	ins    BYTE PTR es:[edi],dx
  41647e:	loopne 0x416430
  416480:	call   0xf957c1f4
  416485:	sub    bl,BYTE PTR [eax+0x64e8dd96]
  41648b:	jne    0x4164cb
  41648d:	sahf   
  41648e:	pop    ecx
  41648f:	pop    esp
  416490:	inc    ebx
  416491:	ret    0x93dc
  416494:	add    al,0x35
  416496:	cmp    eax,0x6d92135b
  41649b:	lds    edi,FWORD PTR [esi+0x11]
  41649e:	loop   0x416501
  4164a0:	xor    dl,al
  4164a2:	clc    
  4164a3:	ins    DWORD PTR es:[edi],dx
  4164a4:	arpl   WORD PTR [edi-0x5937320],dx
  4164aa:	retf   0xa422
  4164ad:	push   0x6032e2ce
  4164b2:	ror    DWORD PTR [ebp+0x6df648b0],1
  4164b8:	jl     0x416494
  4164ba:	xchg   ebp,eax
  4164bb:	es dec esp
  4164bd:	adc    al,0x9d
  4164bf:	xchg   DWORD PTR [ebx+ebp*8],eax
  4164c2:	lods   eax,DWORD PTR ds:[esi]
  4164c3:	pushf  
  4164c4:	jne    0x4164cf
  4164c6:	cmp    dl,BYTE PTR [esi-0x14]
  4164c9:	cmp    esi,DWORD PTR [ebx+0x1b]
  4164cc:	mov    dl,ah
  4164ce:	popa   
  4164cf:	(bad)  
  4164d0:	xchg   ebp,eax
  4164d1:	dec    esi
  4164d2:	(bad)  
  4164d3:	in     eax,dx
  4164d4:	push   es
  4164d5:	out    dx,al
  4164d6:	dec    ecx
  4164d7:	out    dx,al
  4164d8:	lahf   
  4164d9:	les    ebx,FWORD PTR [edi+0x31]
  4164dc:	cmp    eax,0x7c7f1d3a
  4164e1:	mov    al,0xed
  4164e3:	push   eax
  4164e4:	mov    esp,0x6d02b6e4
  4164e9:	mov    ebp,0x76eed18f
  4164ee:	push   cs
  4164ef:	cmp    BYTE PTR [ebx],cl
  4164f1:	repz add al,0xad
  4164f4:	mov    edx,0xef7a59db
  4164f9:	inc    esi
  4164fa:	lahf   
  4164fb:	scas   eax,DWORD PTR es:[edi]
  4164fc:	or     BYTE PTR [ebp+0x53ae3668],0x69
  416503:	xor    DWORD PTR [ebp+0x43],esi
  416506:	shl    DWORD PTR [esi],cl
  416508:	fs xchg esi,eax
  41650a:	jmp    0xfd61f42c
  41650f:	out    0x71,al
  416511:	mov    al,ds:0xf21d58a
  416516:	xchg   edi,eax
  416517:	add    eax,0xda321446
  41651c:	cmp    dh,bh
  41651e:	rcr    DWORD PTR [ebx-0x65],1
  416521:	cwde   
  416522:	pop    ebx
  416523:	inc    ebp
  416524:	jne    0x416556
  416526:	pop    esi
  416527:	mov    al,ds:0xacf7d381
  41652c:	inc    ecx
  41652d:	jne    0x416524
  41652f:	sub    al,0x1
  416531:	jnp    0x416532
  416533:	push   ebx
  416534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416535:	div    DWORD PTR [eax+0xe]
  416538:	inc    esi
  416539:	rol    dl,1
  41653b:	pop    ds
  41653c:	push   0x84502208
  416541:	mov    DWORD PTR [edi+ebp*4+0x1b],edi
  416545:	retf   
  416546:	cmp    al,cl
  416548:	or     DWORD PTR [eax-0x78],edi
  41654b:	jle    0x4165bf
  41654d:	pushf  
  41654e:	and    BYTE PTR [esi+0x53],bh
  416551:	and    al,0x9b
  416553:	sbb    ecx,edx
  416555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416556:	imul   ecx,DWORD PTR [edx],0xffffffa3
  416559:	push   ecx
  41655a:	xchg   BYTE PTR [ebx],dl
  41655c:	stos   DWORD PTR es:[edi],eax
  41655d:	arpl   WORD PTR [esi],dx
  41655f:	jmp    0x416518
  416561:	enter  0xc096,0x4
  416565:	dec    esp
  416566:	aas    
  416567:	xchg   esp,eax
  416568:	lods   eax,DWORD PTR ds:[esi]
  416569:	push   ecx
  41656a:	in     al,dx
  41656b:	sar    DWORD PTR [edi-0x78ad705a],cl
  416571:	inc    ebx
  416572:	in     al,0x4a
  416574:	mov    dl,0xa7
  416576:	xchg   edx,eax
  416577:	sar    DWORD PTR [esi+ecx*4],1
  41657a:	nop
  41657b:	adc    dl,BYTE PTR [ecx+edx*1]
  41657e:	pop    esi
  41657f:	aam    0x9c
  416581:	in     eax,dx
  416582:	cmp    dl,BYTE PTR [eax]
  416584:	push   esi
  416585:	sub    DWORD PTR [ebp+0x1e],edx
  416588:	loope  0x416541
  41658a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41658b:	and    eax,0xde2447f5
  416590:	mov    bh,0x5c
  416592:	and    esp,DWORD PTR [ebp-0x24]
  416595:	outs   dx,BYTE PTR ds:[esi]
  416596:	jo     0x416581
  416598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416599:	dec    edx
  41659a:	mov    dl,0xfb
  41659c:	and    eax,0x2be5adc5
  4165a1:	mov    ecx,0x3ba24ec1
  4165a6:	jb     0x4165e2
  4165a8:	mov    dl,BYTE PTR [ebx-0x9]
  4165ab:	push   ds
  4165ac:	jp     0x4165ca
  4165ae:	xor    ebx,DWORD PTR [esi]
  4165b0:	loope  0x41660e
  4165b2:	pop    ds
  4165b3:	mov    esp,0x95a26182
  4165b8:	add    DWORD PTR es:[ebx-0x24],esp
  4165bc:	lock jo 0x4165eb
  4165bf:	jne    0x416549
  4165c1:	xchg   ebp,eax
  4165c2:	cmp    eax,0x4be6f262
  4165c7:	pushf  
  4165c8:	int3   
  4165c9:	push   ebp
  4165ca:	pushf  
  4165cb:	std    
  4165cc:	fst    QWORD PTR [ecx]
  4165ce:	inc    esp
  4165cf:	sti    
  4165d0:	push   eax
  4165d1:	xchg   DWORD PTR [edi],esp
  4165d3:	jp     0x416593
  4165d5:	xlat   BYTE PTR ds:[ebx]
  4165d6:	in     al,dx
  4165d7:	lock mov ebp,0xf069fa6d
  4165dd:	pop    esi
  4165de:	mov    ebx,0xb2533176
  4165e3:	dec    edx
  4165e4:	call   0x456be036
  4165e9:	outs   dx,BYTE PTR ds:[esi]
  4165ea:	mul    al
  4165ec:	retf   
  4165ed:	adc    al,0xc9
  4165ef:	or     eax,0x9a2b6157
  4165f4:	mov    edx,0xbb18c3c
  4165f9:	dec    esp
  4165fa:	pop    es
  4165fb:	icebp  
  4165fc:	aad    0x83
  4165fe:	hlt    
  4165ff:	or     ebp,DWORD PTR [edx]
  416601:	sbb    BYTE PTR [ecx+ebp*1+0x1ccd6d4a],ah
  416608:	and    bh,BYTE PTR [esi]
  41660a:	fcmovnu st,st(0)
  41660c:	inc    edi
  41660d:	aaa    
  41660e:	xlat   BYTE PTR ds:[ebx]
  41660f:	stc    
  416610:	dec    eax
  416611:	push   0xfde0686
  416616:	aaa    
  416617:	xchg   ebx,eax
  416618:	xor    dh,ah
  41661a:	add    dh,BYTE PTR [edx]
  41661c:	dec    ebx
  41661d:	push   eax
  41661e:	xor    ecx,DWORD PTR [eax]
  416620:	cmp    ebp,ebp
  416622:	cmp    eax,0x2e38b9b5
  416627:	cmp    ch,al
  416629:	fld    TBYTE PTR [ebx]
  41662b:	xor    al,0xce
  41662d:	mov    al,0x1a
  41662f:	repz xchg esp,eax
  416631:	and    DWORD PTR [ebx-0x2582eab7],ebp
  416637:	mov    DWORD PTR [edx+ebx*1],edi
  41663a:	dec    ecx
  41663b:	push   ecx
  41663c:	stos   BYTE PTR es:[edi],al
  41663d:	mov    esp,0x512a019
  416642:	aad    0x51
  416644:	inc    edi
  416645:	or     BYTE PTR [eax],bl
  416647:	add    ebp,esp
  416649:	push   eax
  41664a:	hlt    
  41664b:	iret   
  41664c:	mov    dl,0x3a
  41664e:	repz push ebx
  416650:	cmc    
  416651:	daa    
  416652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416653:	in     al,0xfa
  416655:	ret    0x9cdf
  416658:	xor    bl,ch
  41665a:	and    BYTE PTR [edi],cl
  41665c:	ss test al,0x77
  41665f:	iret   
  416660:	cdq    
  416661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416662:	mov    WORD PTR [ecx+0x68],ds
  416665:	xor    esi,DWORD PTR [esi*4+0x3d92d82a]
  41666c:	imul   edx,DWORD PTR [edi+eiz*8-0x1d],0x6e
  416671:	mov    edi,0xb62d363a
  416676:	sahf   
  416677:	bound  esp,QWORD PTR [ecx+0x37]
  41667a:	mov    al,ds:0xad8022a1
  41667f:	fist   WORD PTR [eax]
  416681:	loop   0x4166c7
  416683:	jmp    0x38cb25da
  416688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416689:	sar    BYTE PTR [edx+edx*2+0x72],0xe6
  41668e:	mov    edx,DWORD PTR [esi-0x20]
  416691:	inc    ebp
  416692:	sub    al,0x11
  416694:	lods   eax,DWORD PTR ds:[esi]
  416695:	jb     0x416703
  416697:	cli    
  416698:	in     al,dx
  416699:	pop    es
  41669a:	sub    BYTE PTR [esi+0x4b3b1f41],ah
  4166a0:	fs popa 
  4166a2:	mov    ebp,0x4a7b6dd5
  4166a7:	in     eax,0xf4
  4166a9:	unpckhps xmm1,XMMWORD PTR [edx+0x24]
  4166ad:	inc    esp
  4166ae:	xchg   edi,eax
  4166af:	xchg   BYTE PTR [ebp+eax*4+0x62],bl
  4166b3:	xor    al,0xd0
  4166b5:	gs sub ch,al
  4166b8:	xchg   DWORD PTR [edi+0x49],esi
  4166bb:	mov    bl,0xa
  4166bd:	stos   DWORD PTR es:[edi],eax
  4166be:	stc    
  4166bf:	pop    ebx
  4166c0:	mov    ebx,0xf0e4db82
  4166c5:	xchg   esi,eax
  4166c6:	in     al,dx
  4166c7:	out    0x17,eax
  4166c9:	mov    WORD PTR [ebx+0x2],?
  4166cc:	and    eax,0x3ccc3b4f
  4166d1:	mov    edi,0x4f36a087
  4166d6:	jbe    0x4166cd
  4166d8:	mov    ebx,0xf363eaa4
  4166dd:	push   ecx
  4166de:	retf   0xf460
  4166e1:	int3   
  4166e2:	es pop ecx
  4166e4:	add    BYTE PTR [esi+0x7b5be996],bh
  4166ea:	adc    DWORD PTR [ecx-0x37916319],edx
  4166f0:	push   esp
  4166f1:	mov    bl,0xeb
  4166f3:	sbb    cl,BYTE PTR [eax-0x6e]
  4166f6:	cld    
  4166f7:	or     eax,0xff3294d8
  4166fc:	add    dl,BYTE PTR [edx-0x13b18ccd]
  416702:	imul   ecx,ebx,0xffffffb7
  416705:	xor    al,0x50
  416707:	pop    es
  416708:	sbb    eax,0xb123a6f6
  41670d:	or     ecx,esi
  41670f:	dec    esi
  416710:	mov    al,0x4b
  416712:	enter  0x3a6c,0x15
  416716:	dec    ebx
  416717:	aaa    
  416718:	push   esp
  416719:	pop    edx
  41671a:	push   ds
  41671b:	icebp  
  41671c:	mov    ebp,0x7c525c3
  416721:	jo     0x7ba661bc
  416727:	xchg   esi,eax
  416728:	loop   0x4166f4
  41672a:	jmp    0x1e88:0x353b44c
  416731:	sar    DWORD PTR [edi],1
  416733:	push   ss
  416734:	dec    ecx
  416735:	nop
  416736:	add    BYTE PTR [ecx-0x74ab05b7],ch
  41673c:	fwait
  41673d:	dec    ecx
  41673e:	cli    
  41673f:	sbb    bl,dh
  416741:	test   eax,0x1bdd324a
  416746:	add    edx,DWORD PTR [ebx+0x20dc8cd1]
  41674c:	jle    0x41679b
  41674e:	cli    
  41674f:	jno    0x41673f
  416751:	je     0x41673c
  416753:	or     bh,BYTE PTR [ecx-0x4740ba74]
  416759:	jne    0x416701
  41675b:	or     ebx,DWORD PTR [edx]
  41675d:	iret   
  41675e:	popf   
  41675f:	push   esi
  416760:	sahf   
  416761:	lods   eax,DWORD PTR ds:[esi]
  416762:	sar    DWORD PTR ds:0xfefc4a0c,1
  416768:	repz inc edx
  41676a:	adc    dh,cl
  41676c:	inc    ebp
  41676d:	sbb    BYTE PTR [eax+0x68],bl
  416770:	lods   eax,DWORD PTR ds:[esi]
  416771:	aam    0xd6
  416773:	mov    edx,0x24efd05f
  416778:	add    eax,ebp
  41677a:	arpl   WORD PTR [ebx-0x10],dx
  41677d:	pop    ecx
  41677e:	mov    ch,0x8d
  416780:	push   ebp
  416781:	xchg   esp,eax
  416782:	fist   WORD PTR [edi+0x52]
  416785:	xor    al,0xbb
  416787:	fst    st(4)
  416789:	cmp    eax,edx
  41678b:	cmp    bh,BYTE PTR [ecx-0x30]
  41678e:	cdq    
  41678f:	iret   
  416790:	lods   eax,DWORD PTR ds:[esi]
  416791:	push   ss
  416792:	push   ebp
  416793:	pop    es
  416794:	or     edx,DWORD PTR [edi]
  416796:	(bad)  
  416798:	rcl    esi,cl
  41679a:	xchg   BYTE PTR [eax+0x517cd060],al
  4167a0:	pop    es
  4167a1:	cmp    ebp,ebx
  4167a3:	call   0xb9f9f157
  4167a8:	xor    al,0xce
  4167aa:	mov    bh,0x84
  4167ac:	repz mov al,0xd2
  4167af:	jbe    0x416817
  4167b1:	pop    ecx
  4167b2:	mov    ebx,0xa41f918f
  4167b7:	(bad)  
  4167b8:	hlt    
  4167b9:	xchg   DWORD PTR [ebp-0x3c6161d7],ebp
  4167bf:	out    dx,eax
  4167c0:	mov    edi,eax
  4167c2:	sub    DWORD PTR [ebx+ecx*1-0x57],esp
  4167c6:	dec    edi
  4167c7:	pushf  
  4167c8:	mov    DWORD PTR [eax],ebp
  4167ca:	push   0xa8d3d4a5
  4167cf:	leave  
  4167d0:	gs sub ecx,esi
  4167d3:	adc    bl,dh
  4167d5:	das    
  4167d6:	cmp    al,0x69
  4167d8:	jnp    0x4167fe
  4167da:	jl     0x416761
  4167dc:	imul   edi,ebp,0xffffffb5
  4167df:	es jmp 0xbffb:0xd6616455
  4167e7:	jl     0x416815
  4167e9:	add    DWORD PTR [esi+0x55],0xfffffff7
  4167ed:	push   ebx
  4167ee:	out    dx,al
  4167ef:	xor    eax,0xa43401c
  4167f4:	adc    BYTE PTR [ebx-0x4196a809],0x5c
  4167fb:	scas   al,BYTE PTR es:[edi]
  4167fc:	and    DWORD PTR [eax+0x5bfc05ec],ecx
  416802:	jmp    0x62eef9fd
  416807:	and    BYTE PTR [ecx-0x45],dh
  41680a:	pushf  
  41680b:	out    0x41,eax
  41680d:	adc    eax,0x9535f563
  416812:	pushf  
  416813:	out    0x3b,eax
  416815:	fidiv  WORD PTR [ebx-0x6c]
  416818:	add    ah,BYTE PTR [edi-0x861e9b5]
  41681e:	vdivpd xmm7,xmm1,XMMWORD PTR [ebx-0x6d55f9eb]
  416826:	sbb    dh,BYTE PTR [eax+ebp*4]
  416829:	nop    DWORD PTR [edi+0x57]
  41682d:	mov    ds:0x1a68015e,eax
  416832:	sbb    bh,BYTE PTR [ecx-0x61]
  416835:	pop    ecx
  416836:	jnp    0x416813
  416838:	pop    esi
  416839:	popf   
  41683a:	sahf   
  41683b:	xor    cl,BYTE PTR [esi-0x761c19e1]
  416841:	pusha  
  416842:	mov    dl,0xc1
  416844:	mov    eax,ds:0x5ffdc82d
  416849:	imul   esi,DWORD PTR [edx],0xfffffff3
  41684c:	adc    eax,0xb0246d
  416851:	mov    bh,0x51
  416853:	xor    eax,0x1a54e7ac
  416858:	mov    ah,0xff
  41685a:	pop    eax
  41685b:	mov    DWORD PTR [ebx-0x74],esp
  41685e:	scas   al,BYTE PTR es:[edi]
  41685f:	cmp    al,0x67
  416861:	pop    esi
  416862:	push   0x32
  416864:	test   al,0x37
  416866:	lea    esi,[ebp+0x5]
  416869:	bound  edx,QWORD PTR [edx-0x7]
  41686c:	mov    BYTE PTR [ecx+0x16],ah
  41686f:	lods   eax,DWORD PTR ds:[esi]
  416870:	mov    bl,0x7d
  416872:	push   0x120df9ab
  416877:	mov    dh,0xd8
  416879:	aad    0xcd
  41687b:	pop    ds
  41687c:	movlps xmm2,QWORD PTR [eax]
  41687f:	fisubr WORD PTR [ecx-0x28]
  416882:	xchg   esp,eax
  416883:	push   edi
  416884:	push   eax
  416885:	mov    ecx,0x52a3e072
  41688a:	sub    al,0xa6
  41688c:	gs jmp 0x590e44c8
  416892:	sub    ecx,DWORD PTR [edx]
  416894:	mov    ah,0x45
  416896:	xor    bl,dl
  416898:	mov    esi,0xf5f4203b
  41689d:	cli    
  41689e:	xlat   BYTE PTR ds:[ebx]
  41689f:	data16 add ch,BYTE PTR [eax*4+0x20697a0c]
  4168a7:	mov    edx,0x66997523
  4168ac:	(bad)  
  4168ad:	sbb    BYTE PTR [edx-0x18],ah
  4168b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168b1:	push   0xffffffe0
  4168b3:	sbb    BYTE PTR [ebx],bh
  4168b5:	fdiv   QWORD PTR [eax-0x26]
  4168b8:	and    DWORD PTR [esi+0x7e82970d],0xffffffed
  4168bf:	mov    ds:0x4da9f429,eax
  4168c4:	and    DWORD PTR [ecx+ebx*2],edi
  4168c7:	fisubr WORD PTR [ebp-0x7c]
  4168ca:	add    esp,DWORD PTR [ebx+0x7eb4f12b]
  4168d0:	xor    BYTE PTR [eax+eiz*1-0x3787707d],cl
  4168d7:	pushf  
  4168d8:	sub    eax,0xc3ec0c4a
  4168dd:	inc    esi
  4168de:	cdq    
  4168df:	sbb    BYTE PTR [esi-0x30],bl
  4168e2:	and    ah,BYTE PTR [esp]
  4168e5:	jb     0x416963
  4168e7:	sub    bh,BYTE PTR [ecx+0x2fe27333]
  4168ed:	lock sub BYTE PTR [eax+ecx*8-0x3734203f],ah
  4168f5:	jae    0x4168e9
  4168f7:	push   ds
  4168f8:	mov    ah,0xb9
  4168fa:	out    0xdf,eax
  4168fc:	xchg   edx,eax
  4168fd:	aad    0x6e
  4168ff:	(bad)  
  416900:	ret    0xa0cd
  416903:	jb     0x4168aa
  416905:	lock sbb cl,al
  416908:	es sub dl,al
  41690b:	lock pop esi
  41690d:	mov    ebx,0xa23ca4ce
  416912:	leave  
  416913:	add    eax,0x70eb62c3
  416918:	rcl    BYTE PTR [esi-0x6f],1
  41691b:	sbb    al,0x3d
  41691d:	dec    ecx
  41691e:	jo     0x416941
  416920:	test   eax,0x4ff1d016
  416925:	lods   eax,DWORD PTR ds:[esi]
  416926:	jmp    0x39ee7c7e
  41692b:	movq   mm0,QWORD PTR [esi+0x23833377]
  416932:	adc    al,0x86
  416934:	or     dh,al
  416936:	mov    al,0xef
  416938:	lods   al,BYTE PTR ds:[esi]
  416939:	iret   
  41693a:	fwait
  41693b:	ja     0x4168e6
  41693d:	std    
  41693e:	pop    esi
  41693f:	mov    dh,0xd3
  416941:	in     al,0x4b
  416943:	xchg   ebx,eax
  416944:	xor    bl,BYTE PTR [esi]
  416946:	scas   eax,DWORD PTR es:[edi]
  416947:	xchg   ebx,eax
  416948:	data16 mov bl,dh
  41694b:	retf   0xa5c2
  41694e:	mov    eax,ds:0xd8b6cce2
  416953:	dec    esp
  416954:	and    BYTE PTR [ebx+0x271e80ee],dh
  41695a:	jmp    0x416954
  41695c:	inc    esp
  41695d:	mov    ah,0x2c
  41695f:	and    BYTE PTR [ebp-0x56],ah
  416962:	imul   edi,DWORD PTR [esi+0x7e],0x7a
  416966:	addr16 cwde 
  416968:	pushf  
  416969:	and    esi,DWORD PTR [eax-0xfd1155a]
  41696f:	xchg   DWORD PTR [edx],edx
  416971:	jmp    0x41691d
  416973:	and    eax,0x498e9b4d
  416978:	mov    eax,ds:0x85e5ba79
  41697d:	xchg   DWORD PTR [eax],edi
  41697f:	add    eax,0xc4560cee
  416984:	(bad)  
  416985:	fwait
  416986:	jmp    0x9f08:0x400fb6f0
  41698d:	push   DWORD PTR ds:0x17a1b060
  416993:	pop    edi
  416994:	lods   eax,DWORD PTR ds:[esi]
  416995:	and    eax,DWORD PTR [edi+0x17f0a33c]
  41699b:	pop    esi
  41699c:	mov    ch,0xbd
  41699e:	call   0x335c:0x275f56ad
  4169a5:	add    DWORD PTR [ecx+ecx*2],esi
  4169a8:	add    al,0xb6
  4169aa:	mov    BYTE PTR [eax],0x84
  4169ad:	or     esp,edx
  4169af:	lods   al,BYTE PTR ds:[esi]
  4169b0:	inc    ebx
  4169b1:	iret   
  4169b2:	push   di
  4169b4:	out    0xea,al
  4169b6:	dec    eax
  4169b7:	(bad)  
  4169b9:	retf   
  4169ba:	inc    edx
  4169bb:	jge    0x416986
  4169bd:	fstp   QWORD PTR [esi-0x54b83124]
  4169c3:	ins    DWORD PTR es:[edi],dx
  4169c4:	push   0xffffff84
  4169c6:	inc    eax
  4169c7:	xchg   esi,eax
  4169c8:	pop    es
  4169c9:	xor    ah,0xac
  4169cc:	push   0xc057f899
  4169d1:	addr16 add eax,0x9cc6e9aa
  4169d7:	add    ch,BYTE PTR [esp+edi*8-0x44205c6c]
  4169de:	and    bl,BYTE PTR [eax-0xf]
  4169e1:	(bad)  
  4169e2:	aas    
  4169e3:	fidivr WORD PTR ds:0x715c3abf
  4169e9:	pop    ebx
  4169ea:	fnstsw ax
  4169ec:	inc    eax
  4169ed:	push   0x5b517c39
  4169f2:	fs loop 0x416991
  4169f5:	mov    bl,0x68
  4169f7:	cmc    
  4169f8:	and    al,BYTE PTR [esi+0x34105895]
  4169fe:	inc    edi
  4169ff:	mov    WORD PTR [edi-0x72],fs
  416a02:	push   esi
  416a03:	std    
  416a04:	xchg   BYTE PTR [edx+0x5f],bl
  416a07:	jnp    0x4169dd
  416a09:	aaa    
  416a0a:	adc    al,0x99
  416a0c:	(bad)  
  416a0d:	push   ds
  416a0e:	fnstsw WORD PTR [ecx+0x66]
  416a11:	aad    0x19
  416a13:	xchg   edx,eax
  416a14:	call   0xfa8ec0f0
  416a19:	in     al,0xae
  416a1b:	xchg   BYTE PTR [edx],dh
  416a1d:	mov    ds,edi
  416a1f:	jne    0x416a90
  416a21:	inc    edx
  416a22:	out    dx,eax
  416a23:	adc    dl,0x34
  416a26:	jbe    0x416a3b
  416a28:	hlt    
  416a29:	inc    ebp
  416a2a:	(bad)  
  416a2b:	sub    eax,ecx
  416a2d:	aaa    
  416a2e:	(bad)  
  416a2f:	stc    
  416a30:	mov    dl,0x9e
  416a32:	push   edx
  416a33:	and    ah,BYTE PTR [ebp+edi*4+0x3]
  416a37:	inc    ebp
  416a38:	and    eax,0x61449bf0
  416a3d:	inc    esi
  416a3e:	fs hlt 
  416a40:	cmp    BYTE PTR [edi-0x4f6eb14e],ah
  416a46:	adc    al,0x69
  416a48:	mov    cl,0x43
  416a4a:	xor    al,0x8c
  416a4c:	xchg   DWORD PTR [edx-0x5d],ebx
  416a4f:	leave  
  416a50:	mov    al,0x13
  416a52:	inc    ecx
  416a53:	mov    dh,0xe6
  416a55:	dec    ebp
  416a56:	push   ebp
  416a57:	and    bh,BYTE PTR [esi]
  416a59:	fwait
  416a5a:	not    DWORD PTR [ecx-0x2c]
  416a5d:	sbb    ah,BYTE PTR [edi+0x33f63f1b]
  416a63:	outs   dx,BYTE PTR ds:[esi]
  416a64:	test   BYTE PTR [ecx-0x4d],0x21
  416a68:	ret    
  416a69:	(bad)  
  416a6a:	in     al,dx
  416a6b:	cli    
  416a6c:	jb     0x416a8e
  416a6e:	adc    cl,BYTE PTR [esi]
  416a70:	push   ds
  416a71:	int3   
  416a72:	push   ds
  416a73:	mov    ecx,0xb71901b9
  416a78:	adc    BYTE PTR [ebx+0x45],ah
  416a7b:	push   cs
  416a7c:	mov    eax,0x25be4904
  416a81:	in     eax,0x71
  416a83:	es adc BYTE PTR cs:[ebp-0x75],ch
  416a88:	pop    es
  416a89:	(bad)  
  416a8a:	mov    eax,0x3bb22426
  416a8f:	jno    0x416aad
  416a91:	adc    edi,DWORD PTR [edx+0x1e68c989]
  416a97:	add    bh,ah
  416a99:	dec    eax
  416a9a:	cmc    
  416a9b:	(bad)  
  416a9c:	mov    eax,0x91ab93fb
  416aa1:	mov    ecx,0xe77a0807
  416aa6:	dec    esp
  416aa7:	je     0x416a68
  416aa9:	cmp    BYTE PTR [edx+ecx*4],bl
  416aac:	xor    bl,BYTE PTR [edx+0x22d5b304]
  416ab2:	in     eax,dx
  416ab3:	in     al,dx
  416ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ab5:	bound  ecx,QWORD PTR [eax+0x3d]
  416ab8:	pop    ebp
  416ab9:	jno    0x416a9d
  416abb:	dec    esp
  416abc:	add    dl,dh
  416abe:	pop    esi
  416abf:	cld    
  416ac0:	retf   0xbce7
  416ac3:	or     ebp,DWORD PTR [ebx]
  416ac5:	jge    0x416adb
  416ac7:	faddp  st(3),st
  416ac9:	rcl    esi,cl
  416acb:	jl     0x416a9d
  416acd:	mov    bl,0x69
  416acf:	mov    esp,0x90bb54de
  416ad4:	pop    ebp
  416ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad6:	cmp    eax,0x22d96ada
  416adb:	mov    dh,BYTE PTR [ecx-0x4d]
  416ade:	jne    0x416a9c
  416ae0:	dec    ecx
  416ae1:	ret    
  416ae2:	push   ebp
  416ae3:	push   ebx
  416ae4:	not    DWORD PTR [ebx]
  416ae6:	mov    edx,0xb6df85a4
  416aeb:	fisubr DWORD PTR [eax+edx*4+0x24efa3a]
  416af2:	in     eax,dx
  416af3:	es add edx,ebx
  416af6:	mov    ds:0x6edf56a8,al
  416afb:	test   al,0xc8
  416afd:	add    esp,esp
  416aff:	inc    ebx
  416b00:	pop    edx
  416b01:	sub    BYTE PTR [edx-0x682eef04],dh
  416b07:	jle    0x416b01
  416b09:	inc    BYTE PTR [ecx+0x28]
  416b0c:	into   
  416b0d:	push   ds
  416b0e:	dec    eax
  416b0f:	xchg   DWORD PTR [esi-0x1f],ebp
  416b12:	or     ch,0x96
  416b15:	mov    al,0xb6
  416b17:	loop   0x416ae4
  416b19:	or     ch,ch
  416b1b:	(bad)  
  416b1c:	mov    ebp,0x9b56004c
  416b21:	cld    
  416b22:	gs dec esp
  416b24:	dec    ecx
  416b25:	in     eax,dx
  416b26:	imul   ebp,DWORD PTR [eax],0x67
  416b29:	scas   eax,DWORD PTR es:[edi]
  416b2a:	jo     0x416b22
  416b2c:	in     eax,0x3f
  416b2e:	pop    es
  416b2f:	sub    ch,dh
  416b31:	(bad)  
  416b32:	adc    ch,BYTE PTR [edi-0x53]
  416b35:	cmp    eax,0xd43b8dec
  416b3a:	and    BYTE PTR [esi+0xa],dl
  416b3d:	sub    esp,edi
  416b3f:	jle    0x416b8a
  416b41:	cld    
  416b42:	enter  0x1ef8,0x85
  416b46:	push   esp
  416b47:	outs   dx,BYTE PTR ds:[esi]
  416b48:	stos   DWORD PTR es:[edi],eax
  416b49:	aas    
  416b4a:	daa    
  416b4b:	jo     0x416af1
  416b4d:	imul   edi,DWORD PTR [ecx],0x496a3781
  416b53:	add    bl,dl
  416b55:	rcr    bh,0x4d
  416b58:	stc    
  416b59:	pop    ds
  416b5a:	(bad)  
  416b5b:	mov    BYTE PTR gs:[ebx+0x6b2e6669],bh
  416b62:	add    esi,DWORD PTR [edx]
  416b64:	or     ebp,DWORD PTR [ebx]
  416b66:	xor    al,0x4d
  416b68:	gs xchg edx,eax
  416b6a:	xor    al,0xe8
  416b6c:	fwait
  416b6d:	jno    0x416b55
  416b6f:	aad    0xbf
  416b71:	jo     0x416baa
  416b73:	push   ebp
  416b74:	dec    eax
  416b75:	mov    ch,BYTE PTR [edx]
  416b77:	pop    edx
  416b78:	test   eax,0x3d2b4bb2
  416b7d:	xor    BYTE PTR [edx],ch
  416b7f:	xchg   ebp,eax
  416b80:	sub    ch,BYTE PTR [edx-0x6e]
  416b83:	call   FWORD PTR [eax+0x27]
  416b86:	and    eax,0xf8ab67b8
  416b8b:	adc    al,0x9d
  416b8d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b8f:	dec    eax
  416b90:	add    BYTE PTR [ebx-0x59],ah
  416b93:	add    ch,bh
  416b95:	dec    esp
  416b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b97:	or     eax,0xafc09720
  416b9c:	lock sbb edx,ecx
  416b9f:	fs ja  0x416b59
  416ba2:	and    BYTE PTR ds:0xf5fedaed,ah
  416ba8:	mov    ch,0x6f
  416baa:	mul    BYTE PTR [edi+ecx*8-0x3f23ebea]
  416bb1:	int    0xf3
  416bb3:	adc    al,0xf1
  416bb5:	popf   
  416bb6:	aaa    
  416bb7:	inc    ecx
  416bb8:	jle    0x416c0a
  416bba:	xchg   esi,eax
  416bbb:	add    eax,0x1d6f098e
  416bc0:	and    DWORD PTR [edi+0x53dd6063],0x14
  416bc7:	jmp    0xde09:0x74217db
  416bce:	ret    0x92b7
  416bd1:	not    DWORD PTR [edx+0x2d]
  416bd4:	jl     0x416b94
  416bd6:	xchg   ebp,eax
  416bd7:	shl    BYTE PTR [eax+0x7a],1
  416bda:	pop    ebp
  416bdb:	sub    al,0x72
  416bdd:	cdq    
  416bde:	popf   
  416bdf:	cwde   
  416be0:	jne    0x416bdc
  416be2:	shl    BYTE PTR [eax-0x9],0x2
  416be6:	mov    ds:0x21d36eac,al
  416beb:	ret    0x3cd6
  416bee:	inc    esp
  416bef:	dec    edx
  416bf0:	mov    al,0xe8
  416bf2:	sbb    BYTE PTR [ebx],ah
  416bf4:	fsub   QWORD PTR [ebx-0x79]
  416bf7:	sbb    ebp,eax
  416bf9:	mov    ds:0x3847251,eax
  416bfe:	adc    DWORD PTR [ebx+eax*4+0x7cb42c8e],edx
  416c05:	in     eax,dx
  416c06:	mov    dh,0xfe
  416c08:	mov    al,0x6b
  416c0a:	jle    0x416c44
  416c0c:	inc    ebp
  416c0d:	cmp    eax,0xa3720319
  416c12:	je     0x416bff
  416c14:	lock std 
  416c16:	cld    
  416c17:	push   0x6c4d43b4
  416c1c:	int3   
  416c1d:	dec    ecx
  416c1e:	es ss inc esp
  416c21:	das    
  416c22:	mov    dl,0x91
  416c24:	sbb    cl,BYTE PTR [edx-0x34a0d118]
  416c2a:	xor    al,0x45
  416c2c:	in     eax,0xdb
  416c2e:	std    
  416c2f:	ret    
  416c30:	(bad)  
  416c31:	std    
  416c32:	lea    ecx,[ebp-0x59]
  416c35:	jle    0x416bcc
  416c37:	mov    eax,0x194912ce
  416c3c:	loope  0x416c08
  416c3e:	test   al,0xdf
  416c40:	retf   0x7ad2
  416c43:	push   0x5dc96976
  416c48:	pop    esi
  416c49:	fst    QWORD PTR [edx+0x32]
  416c4c:	icebp  
  416c4d:	lods   eax,DWORD PTR ds:[esi]
  416c4e:	pop    esp
  416c4f:	push   edx
  416c50:	push   ebx
  416c51:	ret    0xb14a
  416c54:	cs pop esi
  416c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c57:	pop    es
  416c58:	loope  0x416cc7
  416c5a:	inc    ebp
  416c5b:	xor    eax,0x8faa0b44
  416c60:	push   esp
  416c61:	(bad)  
  416c62:	fs retf 
  416c64:	fist   WORD PTR [ebp-0x1542fd0b]
  416c6a:	cmp    dl,dl
  416c6c:	cwde   
  416c6d:	or     cl,0xe3
  416c70:	jg     0x416cd0
  416c72:	xor    dh,BYTE PTR [ebx]
  416c74:	ror    ecx,0xf3
  416c77:	jbe    0x416c9f
  416c79:	mov    al,ds:0x74c8de90
  416c7e:	inc    edi
  416c7f:	or     DWORD PTR [ebx],esp
  416c81:	adc    al,0x1a
  416c83:	lods   al,BYTE PTR fs:[esi]
  416c85:	xor    eax,0x58bc9657
  416c8a:	pop    es
  416c8b:	sti    
  416c8c:	(bad)  
  416c8d:	or     BYTE PTR [edi-0x45],dh
  416c90:	inc    ebx
  416c91:	adc    ch,ch
  416c93:	cmp    al,0xd4
  416c95:	out    0xba,eax
  416c97:	mov    bh,0x6c
  416c99:	dec    eax
  416c9a:	cli    
  416c9b:	lods   al,BYTE PTR ds:[esi]
  416c9c:	inc    edi
  416c9d:	data16 cmp dl,BYTE PTR [esi]
  416ca0:	jmp    0xd695:0xcc637ce7
  416ca7:	out    0xfb,eax
  416ca9:	add    edx,DWORD PTR [edi]
  416cab:	loope  0x416c58
  416cad:	outs   dx,DWORD PTR ds:[esi]
  416cae:	int    0x99
  416cb0:	repnz hlt 
  416cb2:	adc    cl,BYTE PTR [edi-0x3326fedf]
  416cb8:	or     eax,0xbed89af3
  416cbd:	push   DWORD PTR [ebx-0x67]
  416cc0:	cwde   
  416cc1:	dec    eax
  416cc2:	add    bh,ah
  416cc4:	push   edx
  416cc5:	fisub  WORD PTR [edx]
  416cc7:	les    ebp,FWORD PTR [ecx-0x28]
  416cca:	imul   ebx,DWORD PTR [edx+0x72],0x8a490de3
  416cd1:	hlt    
  416cd2:	mov    ch,0x1b
  416cd4:	push   esi
  416cd5:	push   es
  416cd6:	cmp    ch,bh
  416cd8:	sub    DWORD PTR [ebp+esi*4-0x3ea2e201],eax
  416cdf:	pop    esp
  416ce0:	aaa    
  416ce1:	scas   al,BYTE PTR es:[edi]
  416ce2:	test   DWORD PTR [eax+ebx*1-0x63],esi
  416ce6:	sbb    al,0xc3
  416ce8:	sbb    BYTE PTR [esi],bl
  416cea:	inc    ebp
  416ceb:	push   cs
  416cec:	retf   
  416ced:	jae    0x416d21
  416cef:	call   0x8356:0x3509f602
  416cf6:	mov    ch,BYTE PTR [ecx+0x73]
  416cf9:	iret   
  416cfa:	adc    al,0x26
  416cfc:	mov    eax,0xda18d68
  416d01:	into   
  416d02:	push   ebp
  416d03:	xor    eax,0x991b362c
  416d08:	or     eax,0x2480ce5b
  416d0d:	repnz frstor [edi+eax*1]
  416d11:	sbb    eax,edx
  416d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d14:	xor    al,BYTE PTR [ecx+0x0]
  416d17:	lods   eax,DWORD PTR ds:[esi]
  416d18:	lea    edi,[ecx+eax*8]
  416d1b:	adc    DWORD PTR [edx-0x10727837],ecx
  416d21:	call   0x2b7a19df
  416d26:	mov    bh,0xb1
  416d28:	inc    eax
  416d29:	fcomp  QWORD PTR [eax]
  416d2b:	pop    DWORD PTR [edi+0x791c126d]
  416d31:	cmp    eax,0xf977e78b
  416d36:	push   0x2c
  416d38:	adc    al,BYTE PTR [edx]
  416d3a:	jbe    0x416dbb
  416d3c:	xchg   DWORD PTR [ebx],ebp
  416d3e:	adc    ebx,ebp
  416d40:	aad    0xcf
  416d42:	fmul   QWORD PTR [eax-0x62]
  416d45:	pusha  
  416d46:	push   eax
  416d47:	jecxz  0x416da7
  416d49:	fs out 0x7b,al
  416d4c:	or     esp,edi
  416d4e:	and    BYTE PTR [esi+esi*2+0x3a19e06d],dl
  416d55:	mov    edx,0x9b481633
  416d5a:	loop   0x416ce6
  416d5c:	xchg   BYTE PTR [ebp+0x2845af60],dh
  416d62:	inc    edi
  416d63:	push   edi
  416d64:	stos   DWORD PTR es:[edi],eax
  416d65:	lahf   
  416d66:	sti    
  416d67:	in     eax,0x39
  416d69:	push   0xffffffb0
  416d6b:	dec    ecx
  416d6c:	sub    al,0xdc
  416d6e:	sbb    eax,DWORD PTR [esp+ebx*4-0x57]
  416d72:	mov    DWORD PTR [edx],ebx
  416d74:	or     DWORD PTR [edx],ecx
  416d76:	cmp    al,0x5b
  416d78:	inc    eax
  416d79:	repz std 
  416d7b:	or     DWORD PTR [ebx],edx
  416d7d:	call   0x86ba631a
  416d82:	sbb    ch,BYTE PTR [esi]
  416d84:	imul   eax,DWORD PTR [edi],0xc029b547
  416d8a:	mov    BYTE PTR [edx+0x1555fa7f],bh
  416d90:	sub    al,0x98
  416d92:	inc    esp
  416d93:	inc    ebp
  416d94:	aam    0xd7
  416d96:	dec    esi
  416d97:	add    DWORD PTR ds:0xbe9f2574,ebp
  416d9d:	mov    al,ch
  416d9f:	in     al,dx
  416da0:	sub    eax,0x7c335b23
  416da5:	lods   eax,DWORD PTR ds:[esi]
  416da6:	sub    eax,0x8482bfc5
  416dab:	inc    edi
  416dac:	icebp  
  416dad:	loop   0x416d56
  416daf:	mov    ss,WORD PTR [ebp-0x668dc182]
  416db5:	jl     0x416d3f
  416db7:	test   BYTE PTR [esi-0x5a],bh
  416dba:	pop    edx
  416dbb:	out    0x52,al
  416dbd:	push   ecx
  416dbe:	cli    
  416dbf:	fwait
  416dc0:	icebp  
  416dc1:	fisubr WORD PTR [eax]
  416dc3:	pop    esi
  416dc4:	out    dx,eax
  416dc5:	(bad)  
  416dc6:	pop    ebp
  416dc7:	out    0xb9,eax
  416dc9:	sub    ah,bl
  416dcb:	mov    ah,0x63
  416dcd:	mov    ch,0x15
  416dcf:	(bad)  
  416dd0:	adc    eax,0xee7daa2c
  416dd5:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  416dd7:	std    
  416dd8:	dec    ecx
  416dd9:	in     al,0x1f
  416ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ddc:	sbb    al,0xdc
  416dde:	mov    esp,gs
  416de0:	cmp    al,0xaa
  416de2:	mov    edi,ebx
  416de4:	cmp    eax,0x25412e8c
  416de9:	sub    al,0x47
  416deb:	add    al,0xd3
  416ded:	fnstsw WORD PTR [ebp+0x4]
  416df0:	push   esp
  416df1:	xchg   esi,eax
  416df2:	loopne 0x416df2
  416df4:	test   BYTE PTR [eax-0x54088ba4],0x8c
  416dfb:	sbb    esp,esi
  416dfd:	push   ss
  416dfe:	jl     0x416e6a
  416e00:	fdivr  QWORD PTR [ecx+0x563f613c]
  416e06:	mov    ss,WORD PTR [esi+0x7e]
  416e09:	inc    eax
  416e0a:	adc    eax,0xb0498e6c
  416e0f:	fld    st(0)
  416e11:	pop    ds
  416e12:	cmp    esi,DWORD PTR ds:[edx+0x317d143e]
  416e19:	inc    ebp
  416e1a:	call   0x93e152bf
  416e1f:	jae    0xe44c024d
  416e25:	dec    esp
  416e26:	out    0x81,al
  416e28:	xlat   BYTE PTR ds:[ebx]
  416e29:	mov    edi,0x4f614832
  416e2e:	inc    edi
  416e2f:	popa   
  416e30:	and    BYTE PTR [ecx-0x3729b28f],cl
  416e36:	xchg   ecx,eax
  416e37:	xor    eax,0x213fc9d3
  416e3c:	pop    ebp
  416e3d:	neg    BYTE PTR [ecx-0x32]
  416e40:	mov    esp,esi
  416e42:	mov    BYTE PTR ds:0x32e1b600,al
  416e48:	das    
  416e49:	rcl    BYTE PTR [edx],0xd8
  416e4c:	fisttp WORD PTR [ebx]
  416e4e:	stos   BYTE PTR es:[edi],al
  416e4f:	outs   dx,BYTE PTR ds:[esi]
  416e50:	inc    edi
  416e51:	pop    ecx
  416e52:	cmp    bh,ah
  416e54:	mov    DWORD PTR [ecx+eiz*8],ecx
  416e57:	sbb    eax,0xff2ece9
  416e5c:	xchg   esp,eax
  416e5d:	call   0x6e23:0x67533014
  416e64:	repnz adc DWORD PTR [ebx],esp
  416e67:	or     esp,esi
  416e69:	adc    DWORD PTR [eax-0x16307f84],edi
  416e6f:	adc    eax,0x65643557
  416e74:	sahf   
  416e75:	adc    BYTE PTR [esi+0x37],al
  416e78:	jmp    0x3f4ae07c
  416e7d:	dec    ebx
  416e7e:	call   0x4f1036b0
  416e83:	sbb    ebp,0xffffff86
  416e86:	inc    ebp
  416e87:	aas    
  416e88:	xor    DWORD PTR [ebp+0x4ea4990d],edi
  416e8e:	xor    bl,cl
  416e90:	xor    esp,0x382f0876
  416e96:	add    ah,0xb0
  416e99:	outs   dx,BYTE PTR ds:[esi]
  416e9a:	pop    es
  416e9b:	and    dh,BYTE PTR [eax]
  416e9d:	inc    ebx
  416e9e:	xor    BYTE PTR [ebx-0x28],0x3b
  416ea2:	push   eax
  416ea3:	ret    
  416ea4:	popf   
  416ea5:	mov    ds:0x3b00fc71,al
  416eaa:	(bad)  
  416eac:	add    DWORD PTR cs:[ebx+eax*4-0x3c5e608e],eax
  416eb4:	jnp    0x416e60
  416eb6:	cmp    al,0x52
  416eb8:	fldcw  WORD PTR [ecx-0x64405f01]
  416ebe:	push   edi
  416ebf:	sbb    DWORD PTR [ebp-0x1665a2fe],ebp
  416ec5:	xor    bh,BYTE PTR [edx]
  416ec7:	inc    eax
  416ec8:	jmp    0x416ec7
  416eca:	cmc    
  416ecb:	jmp    FWORD PTR [ebp+0x6efe0008]
  416ed1:	xchg   ebx,eax
  416ed2:	sub    al,0xaf
  416ed4:	inc    ecx
  416ed5:	or     ecx,esi
  416ed7:	push   cs
  416ed8:	dec    esi
  416ed9:	imul   esi,DWORD PTR [esi],0x35
  416edc:	int    0x61
  416ede:	sbb    al,0xbd
  416ee0:	jns    0x416e69
  416ee2:	mov    ebx,0x305c510f
  416ee7:	test   DWORD PTR cs:[edx],ecx
  416eea:	mov    ch,0x12
  416eec:	push   0xf9f20c9f
  416ef1:	into   
  416ef2:	cmp    al,0xa2
  416ef4:	pop    ecx
  416ef5:	mov    esp,0x71e7d490
  416efa:	icebp  
  416efb:	mov    ecx,0x246e9a2b
  416f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f01:	test   DWORD PTR [edx-0x53],edx
  416f04:	(bad)  
  416f05:	rcr    BYTE PTR [edi],cl
  416f07:	imul   esp,edx,0x10
  416f0a:	inc    edx
  416f0b:	pop    ebx
  416f0c:	scas   eax,DWORD PTR es:[edi]
  416f0d:	sub    al,0xc4
  416f0f:	int3   
  416f10:	push   edi
  416f11:	rol    DWORD PTR [ecx],cl
  416f13:	xchg   esp,eax
  416f14:	or     al,0x28
  416f16:	shl    BYTE PTR [edi+eax*8],1
  416f19:	cmp    ah,ch
  416f1b:	cmp    edi,0x198278dc
  416f21:	mov    bh,0x15
  416f23:	cwde   
  416f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f26:	pop    ebx
  416f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f28:	enter  0xb690,0xf4
  416f2c:	cmp    al,0x36
  416f2e:	dec    ecx
  416f2f:	repz mov cl,0xe5
  416f32:	cwde   
  416f33:	mov    DWORD PTR [eax-0x48],edi
  416f36:	arpl   WORD PTR [edi-0x158e575f],cx
  416f3c:	adc    DWORD PTR ds:0xdda59e0c,esp
  416f42:	jno    0x416fb2
  416f44:	adc    al,BYTE PTR [edx]
  416f46:	add    edi,esi
  416f48:	mov    edx,0x136d2610
  416f4d:	xchg   esp,eax
  416f4e:	adc    al,0xaa
  416f50:	fbstp  TBYTE PTR [ebp+0x20]
  416f53:	clc    
  416f54:	sbb    dl,BYTE PTR [esi]
  416f56:	aam    0x8f
  416f58:	popa   
  416f59:	cmp    DWORD PTR [edx],0x43b74481
  416f5f:	ja     0x416f22
  416f61:	dec    esp
  416f62:	ret    
  416f63:	adc    al,0x79
  416f65:	sub    al,bl
  416f67:	or     cl,cl
  416f69:	jp     0x416fcd
  416f6b:	lea    ecx,[ecx]
  416f6d:	mov    ch,0x2b
  416f6f:	push   DWORD PTR [edi+0x348f8094]
  416f75:	mov    ah,0x8f
  416f77:	stc    
  416f78:	pop    es
  416f79:	ror    DWORD PTR [ecx+ebx*8],0x83
  416f7d:	ror    DWORD PTR [eax],cl
  416f7f:	nop
  416f80:	out    0xd1,al
  416f82:	ret    
  416f83:	popa   
  416f84:	jns    0x416f6a
  416f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f87:	cmp    al,0x0
  416f89:	ds leave 
  416f8b:	pop    edx
  416f8c:	push   ebx
  416f8d:	call   0x85fb:0xad0ab830
  416f94:	mov    al,0xed
  416f96:	xchg   esi,ebx
  416f98:	loope  0x416fee
  416f9a:	or     eax,0x18823531
  416f9f:	jbe    0x416f6e
  416fa1:	pop    esi
  416fa2:	clc    
  416fa3:	ins    DWORD PTR es:[edi],dx
  416fa4:	and    edx,DWORD PTR [eax+0x77]
  416fa7:	xchg   esi,eax
  416fa8:	pusha  
  416fa9:	fisttp QWORD PTR [esi]
  416fab:	push   ds
  416fac:	pop    esi
  416fad:	cmc    
  416fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416faf:	xchg   DWORD PTR [ebp-0x2fc95b34],esp
  416fb5:	lods   al,BYTE PTR ds:[esi]
  416fb6:	mov    eax,0x6a4cf997
  416fbb:	jmp    0xa1c0:0xfccffa2d
  416fc2:	adc    eax,DWORD PTR [edi]
  416fc4:	ret    0x5d26
  416fc7:	mov    es,WORD PTR [edx-0x2c5c6587]
  416fcd:	(bad)  
  416fcf:	mov    al,ds:0x6f4d1e0
  416fd4:	fisubr WORD PTR [esi+0x28]
  416fd7:	xor    eax,0xe62ba0ba
  416fdc:	dec    ebx
  416fdd:	fmulp  st(6),st
  416fdf:	jne    0x417042
  416fe1:	xchg   DWORD PTR [edi],eax
  416fe3:	xchg   esi,eax
  416fe4:	outs   dx,DWORD PTR ds:[esi]
  416fe5:	repz ret 0xb60
  416fe9:	imul   ebx,DWORD PTR [ecx],0x2e6e9d8f
  416fef:	xor    al,0xc7
  416ff1:	push   eax
  416ff2:	xor    al,0x9
  416ff4:	mov    ch,0x91
  416ff6:	sbb    dh,BYTE PTR [ebx-0x75]
  416ff9:	lods   al,BYTE PTR ds:[esi]
  416ffa:	dec    edx
  416ffb:	sub    BYTE PTR [ecx-0x26],ch
  416ffe:	sub    DWORD PTR [ebx-0x75],eax
  417001:	mov    bh,0x50
  417003:	sub    ecx,DWORD PTR [esp+edi*8+0x3e41e318]
  41700a:	add    eax,0x74bd7cab
  41700f:	adc    BYTE PTR [eax-0x79],al
  417012:	sbb    eax,0x63223420
  417017:	aaa    
  417018:	aam    0xbe
  41701a:	pop    ebp
  41701b:	push   ebp
  41701c:	stc    
  41701d:	shr    edi,1
  41701f:	(bad)  
  417020:	cmp    al,0x8b
  417022:	(bad)  
  417023:	loopne 0x41700f
  417025:	dec    ebp
  417026:	ja     0x416fa9
  417028:	repnz call 0xdcab:0x60b4af3a
  417030:	ficom  WORD PTR [eax+0x3311a152]
  417036:	lahf   
  417037:	inc    ebx
  417038:	gs jmp 0xdc14:0x461152e3
  417040:	mov    edi,0x154172aa
  417045:	push   ss
  417046:	dec    edx
  417047:	cmp    dl,bh
  417049:	push   ds
  41704a:	sub    al,0xc1
  41704c:	lods   al,BYTE PTR ds:[esi]
  41704d:	adc    cl,bl
  41704f:	mov    ebx,0x55612700
  417054:	mov    cs,WORD PTR [ecx+esi*8+0x28f92bca]
  41705b:	sub    esp,0x3ab929b7
  417061:	add    eax,0x6939e8dc
  417066:	cmp    bh,BYTE PTR [esi+0x7ad8dcf7]
  41706c:	ret    
  41706d:	xchg   bh,al
  41706f:	jge    0x4170aa
  417071:	jmp    0x41703a
  417073:	imul   eax,DWORD PTR ds:0x94484945,0x7b7d8631
  41707d:	fwait
  41707e:	mov    al,0x8f
  417080:	mov    cs,esi
  417082:	mov    ds:0x72acfaef,al
  417087:	les    ebp,FWORD PTR [edi]
  417089:	mov    ah,0xec
  41708b:	jl     0x41703e
  41708d:	(bad)  
  41708e:	aaa    
  41708f:	fadd   DWORD PTR [eax+0x21261c61]
  417095:	jns    0x41709d
  417097:	popa   
  417098:	popa   
  417099:	popa   
  41709a:	loopne 0x41701c
  41709c:	lods   eax,DWORD PTR ds:[esi]
  41709d:	cmc    
  41709e:	sbb    eax,0x299a44fd
  4170a3:	jne    0x4170d0
  4170a5:	lahf   
  4170a6:	retf   0x12d8
  4170a9:	lea    esi,[ecx]
  4170ab:	cs lahf 
  4170ad:	lea    edx,[edx]
  4170af:	int3   
  4170b0:	mov    eax,0xff328592
  4170b5:	out    0x75,eax
  4170b7:	jle    0x41711a
  4170b9:	xor    edx,DWORD PTR [edx]
  4170bb:	and    BYTE PTR [ecx],0x5d
  4170be:	scas   al,BYTE PTR es:[edi]
  4170bf:	mov    BYTE PTR [edi+0x347327],bh
  4170c5:	retf   
  4170c6:	dec    edx
  4170c7:	and    al,cl
  4170c9:	sub    eax,0x3eb9df3
  4170ce:	mov    ah,0xd
  4170d0:	adc    eax,0x6285cab2
  4170d5:	ins    DWORD PTR es:[edi],dx
  4170d6:	dec    ecx
  4170d7:	jmp    0x8849fec0
  4170dc:	xchg   eax,eax
  4170de:	imul   edi,DWORD PTR [ecx],0xffffff8a
  4170e1:	fidiv  DWORD PTR [ebx+edx*1-0xc6a999b]
  4170e8:	mov    eax,0x47b1e3fd
  4170ed:	ja     0x4170f5
  4170ef:	jg     0x417165
  4170f1:	jmp    0x5af5e066
  4170f6:	xchg   ebx,eax
  4170f7:	cmp    al,0xa5
  4170f9:	clc    
  4170fa:	cmp    al,0xa6
  4170fc:	pop    es
  4170fd:	jne    0x41710b
  4170ff:	daa    
  417100:	sbb    eax,DWORD PTR [esi+0x31]
  417103:	and    cl,bh
  417105:	sub    al,cl
  417107:	ss popa 
  417109:	mov    al,0xd6
  41710b:	jmp    0x45bf:0x248eab17
  417112:	out    dx,eax
  417113:	add    ebp,esi
  417115:	ror    BYTE PTR [edx+0x38],1
  417118:	jo     0x41715c
  41711a:	cmp    ah,bh
  41711c:	sbb    ah,BYTE PTR [edi+0x50]
  41711f:	shl    BYTE PTR [ebx-0x3ed4a8a3],0x89
  417126:	inc    ebp
  417127:	clc    
  417128:	mov    ecx,DWORD PTR [ebp-0x4]
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	and    ecx,eax
  417743:	xchg   BYTE PTR [edx+0x7b7cb9aa],bh
  417749:	sbb    BYTE PTR [esi-0x26708485],bl
  41774f:	jb     0x417781
  417751:	add    ebp,DWORD PTR [eax+eax*4+0x2c277bf4]
  417758:	mov    dh,BYTE PTR [ebx-0x61913613]
  41775e:	sub    BYTE PTR [ecx-0x34d63329],al
  417764:	jbe    0x4177b9
  417766:	inc    esi
  417767:	jecxz  0x41773b
  417769:	push   ecx
  41776a:	sti    
  41776b:	push   esi
  41776c:	adc    DWORD PTR [edi+0x28],edi
  41776f:	sub    BYTE PTR [eax],dh
  417771:	hlt    
  417772:	mov    eax,0x7fb2319b
  417777:	mov    al,0x27
  417779:	les    edx,FWORD PTR [eax+0xcf31718]
  41777f:	xchg   edx,eax
  417780:	cmp    cl,al
  417782:	cmp    esp,DWORD PTR [esi+ebp*8-0x17]
  417786:	je     0x4177de
  417788:	and    dh,BYTE PTR [ecx]
  41778a:	add    al,0xa2
  41778c:	lods   al,BYTE PTR ds:[esi]
  41778e:	(bad)  [esi-0x52]
  417791:	pop    edx
  417792:	hlt    
  417793:	jo     0x417734
  417795:	(bad)  [si]
  417798:	test   dh,bh
  41779a:	mov    bl,0x37
  41779c:	cdq    
  41779d:	pop    ds
  41779e:	jmp    0xcf26:0x5b6223f7
  4177a5:	xor    eax,0x2a3ca853
  4177aa:	in     eax,0x58
  4177ac:	outs   dx,DWORD PTR ds:[esi]
  4177ad:	xchg   BYTE PTR [edi],bh
  4177af:	cmp    al,0x91
  4177b1:	rol    DWORD PTR [ebx],cl
  4177b3:	jle    0x4177cd
  4177b5:	mov    ecx,0x3113e8a0
  4177ba:	in     al,0x25
  4177bc:	cs sahf 
  4177be:	jle    0x417774
  4177c0:	inc    ebp
  4177c1:	imul   ebp,DWORD PTR [ecx+ecx*2],0xffffffe4
  4177c5:	rcl    edi,cl
  4177c7:	shl    DWORD PTR [edi-0xd],cl
  4177ca:	in     eax,dx
  4177cb:	jl     0x417792
  4177cd:	or     ecx,DWORD PTR [ebx-0x66799d41]
  4177d3:	mov    cl,0xea
  4177d5:	mov    dl,0xd3
  4177d7:	enter  0x8d22,0x1f
  4177db:	clc    
  4177dc:	or     DWORD PTR [ebp-0x12d5f1ce],edi
  4177e2:	cli    
  4177e3:	pop    edi
  4177e4:	dec    esp
  4177e5:	int    0xec
  4177e7:	mov    dh,0x0
  4177e9:	jg     0x4177f4
  4177eb:	push   ebp
  4177ec:	xchg   esi,eax
  4177ed:	les    ebx,FWORD PTR [esi]
  4177ef:	jmp    0xb0b54e8d
  4177f4:	outs   dx,BYTE PTR ds:[esi]
  4177f5:	or     al,0xaf
  4177f7:	fs pop ss
  4177f9:	inc    edi
  4177fa:	outs   dx,DWORD PTR ds:[esi]
  4177fb:	mov    bl,0x19
  4177fd:	test   cl,0x51
  417800:	push   0x3f845a43
  417805:	in     eax,0x7c
  417807:	fiadd  WORD PTR ss:[ebp+0x7c]
  41780b:	jb     0x417863
  41780d:	pop    edx
  41780e:	mov    BYTE PTR [eax],0x41
  417811:	mov    eax,DWORD PTR [esi-0x7d877a98]
  417817:	or     BYTE PTR [eax+0x70],dl
  41781a:	stos   BYTE PTR es:[edi],al
  41781b:	emms   
  41781d:	cmp    dl,BYTE PTR [esi-0x1a]
  417820:	mov    edx,0xf0027ab3
  417825:	push   esi
  417826:	or     al,0xcd
  417828:	pop    ebx
  417829:	pop    ss
  41782a:	dec    bh
  41782c:	leave  
  41782d:	ret    0xd41c
  417830:	enter  0xc9cb,0x25
  417834:	lock (bad) 
  417836:	enter  0x6cbd,0x42
  41783a:	add    BYTE PTR [ebp+0x9],ch
  41783d:	inc    esp
  41783e:	and    ebx,ecx
  417840:	xor    eax,0xe52ff1ba
  417845:	ins    DWORD PTR es:[edi],dx
  417846:	rcr    ebp,cl
  417848:	sub    eax,0x4fe3e230
  41784d:	and    dl,BYTE PTR [edi+0x17]
  417850:	(bad)  
  417851:	rcl    BYTE PTR [edx+edi*2-0x522fb87d],1
  417858:	or     al,0x2d
  41785a:	retf   0x5d81
  41785d:	stc    
  41785e:	aam    0xc6
  417860:	int    0x30
  417862:	and    ebp,DWORD PTR [eax+0x78]
  417865:	es ins DWORD PTR es:[edi],dx
  417867:	rol    DWORD PTR [esi],1
  417869:	jae    0x4177f1
  41786b:	xor    ebx,DWORD PTR [ecx-0x36]
  41786e:	mov    al,dl
  417870:	das    
  417871:	mov    ds,WORD PTR [eax+0x42]
  417874:	mov    ecx,0xb562602c
  417879:	(bad)  
  41787b:	mov    edx,0xffc92bd8
  417880:	jl     0x4178f6
  417882:	xchg   edx,eax
  417883:	(bad)  
  417884:	rcl    bl,1
  417886:	fwait
  417887:	add    al,0xd
  417889:	inc    ebx
  41788a:	pushf  
  41788b:	icebp  
  41788c:	pop    ecx
  41788d:	in     al,dx
  41788e:	cmc    
  41788f:	repz popa 
  417891:	test   ebp,0xfa871052
  417897:	gs pop ecx
  417899:	sbb    al,0xf0
  41789b:	pop    eax
  41789c:	ds xchg edi,eax
  41789e:	popa   
  41789f:	pop    eax
  4178a0:	mov    DWORD PTR [ebx-0x37],ecx
  4178a3:	push   edi
  4178a4:	xchg   esp,eax
  4178a5:	dec    esp
  4178a6:	dec    esp
  4178a7:	pop    edx
  4178a8:	popf   
  4178a9:	jns    0x417877
  4178ab:	(bad)  
  4178ac:	xchg   ecx,eax
  4178ad:	(bad)  
  4178ae:	fisttp DWORD PTR [edx+0x6a]
  4178b1:	jns    0x417901
  4178b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b4:	test   eax,0x56b6f024
  4178b9:	add    DWORD PTR ds:0x6d8be59b,esp
  4178bf:	xchg   edx,eax
  4178c0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4178c2:	mov    ebp,0x5983355f
  4178c7:	sub    DWORD PTR [ebp-0xa77dbb6],0x50
  4178ce:	(bad)  
  4178d0:	(bad)  
  4178d1:	xor    edx,DWORD PTR [esi-0x677c98d7]
  4178d7:	aaa    
  4178d8:	ret    0x192c
  4178db:	inc    ecx
  4178dc:	pop    ds
  4178dd:	dec    ebx
  4178de:	sub    BYTE PTR [edx+0x5f],bl
  4178e1:	cmc    
  4178e2:	sbb    bl,cl
  4178e4:	add    eax,0xf204fb9b
  4178e9:	les    ebp,FWORD PTR ds:0x8f3c95f
  4178ef:	mov    esp,edi
  4178f1:	fist   DWORD PTR [ecx+0x2e]
  4178f4:	or     ch,BYTE PTR [ecx]
  4178f6:	mov    edi,0x913fb132
  4178fb:	adc    BYTE PTR [edi],dh
  4178fd:	mov    ah,0xb5
  4178ff:	data16 fcomp DWORD PTR gs:[eax]
  417903:	fcom   QWORD PTR cs:[edi]
  417906:	retf   
  417907:	sub    al,0x57
  417909:	adc    bh,BYTE PTR [edi]
  41790b:	and    edx,ebp
  41790d:	push   ecx
  41790e:	jg     0x4178cf
  417910:	lods   al,BYTE PTR ds:[esi]
  417911:	dec    esp
  417912:	ds dec edx
  417914:	sub    eax,0x4fd897f7
  417919:	mov    cl,BYTE PTR [eax]
  41791b:	std    
  41791c:	jns    0x417966
  41791e:	add    eax,0x6ebf87c
  417923:	bound  ebp,QWORD PTR [edi+0x2c6ea70d]
  417929:	dec    ecx
  41792a:	ret    0xa977
  41792d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41792e:	ret    
  41792f:	shr    al,1
  417931:	mov    ah,0x92
  417933:	lds    esp,FWORD PTR [esi+0x7a]
  417936:	sti    
  417937:	fist   DWORD PTR [ecx+0x23]
  41793a:	sbb    eax,0x6364a38e
  41793f:	pop    ss
  417940:	fisubr DWORD PTR [ebx+0x2a]
  417943:	dec    ebx
  417944:	pop    esp
  417945:	test   DWORD PTR [esi],edi
  417947:	xchg   edx,eax
  417948:	push   esi
  417949:	repnz mov DWORD PTR [ebp-0x3d],0xf650b5
  417951:	jle    0x417970
  417953:	call   0x3afdc8b5
  417958:	push   esp
  417959:	pop    edx
  41795a:	and    eax,0x226671cf
  41795f:	cmp    eax,0x27350841
  417964:	in     al,0x74
  417966:	mov    eax,0xa7a43796
  41796b:	mov    bh,0x8e
  41796d:	clc    
  41796e:	icebp  
  41796f:	nop
  417970:	imul   al
  417972:	addr16 aad 0xe3
  417975:	push   es
  417976:	mov    dh,0x1b
  417978:	fbstp  TBYTE PTR [ebx]
  41797a:	cld    
  41797b:	mov    BYTE PTR [ebx-0x25],ah
  41797e:	popa   
  41797f:	pop    edi
  417980:	outs   dx,BYTE PTR ds:[esi]
  417981:	inc    edi
  417982:	lods   al,BYTE PTR ds:[esi]
  417983:	or     eax,0xab8663ce
  417988:	jmp    0x4179a6
  41798a:	(bad)  
  41798b:	call   0x2db79223
  417990:	and    al,0x86
  417992:	lea    edi,[ecx-0x79]
  417995:	call   0x90c9:0xe6350f10
  41799c:	mov    eax,0x9df9eae6
  4179a1:	in     eax,0xa3
  4179a3:	xor    eax,0x3bd9068f
  4179a8:	xchg   ebp,eax
  4179a9:	mov    cl,BYTE PTR [edx-0x69]
  4179ac:	or     al,BYTE PTR [edx]
  4179ae:	cmp    ah,BYTE PTR [ebp-0x33]
  4179b1:	pop    es
  4179b2:	adc    eax,ebp
  4179b4:	xor    edi,DWORD PTR [eax-0x6c]
  4179b7:	cmp    eax,0x96ee1a71
  4179bc:	addr16 jge 0x417a28
  4179bf:	jo     0x417996
  4179c1:	jle    0x417977
  4179c3:	dec    ebp
  4179c4:	pop    esi
  4179c5:	aas    
  4179c6:	cmp    edi,ecx
  4179c8:	daa    
  4179c9:	mov    edi,0x3e6e83ba
  4179ce:	cld    
  4179cf:	imul   ebx,DWORD PTR [ebx],0x6e0868f
  4179d5:	pop    ds
  4179d6:	and    DWORD PTR [ecx+0x512524f3],eax
  4179dc:	lea    edx,[ecx+0x3272bd2b]
  4179e2:	popa   
  4179e3:	bound  edx,QWORD PTR [edx+0x55]
  4179e6:	outs   dx,BYTE PTR ds:[esi]
  4179e7:	hlt    
  4179e8:	sbb    esi,DWORD PTR [ecx+0x55cecd01]
  4179ee:	add    ebx,ebp
  4179f0:	aas    
  4179f1:	pusha  
  4179f2:	mov    ds:0xdaae65db,al
  4179f7:	rep lods eax,DWORD PTR ds:[esi]
  4179f9:	bound  ebp,QWORD PTR [ebx+eiz*2-0x55]
  4179fd:	int    0x59
  4179ff:	jae    0x417a7a
  417a01:	lahf   
  417a02:	popf   
  417a03:	imul   edi,DWORD PTR [ecx-0x72],0x23
  417a07:	leave  
  417a08:	cmp    ch,BYTE PTR [edx-0x2336fec5]
  417a0e:	mov    ecx,DWORD PTR [eax-0x2cebd36d]
  417a14:	cmc    
  417a15:	mov    dh,BYTE PTR [ecx]
  417a17:	popf   
  417a18:	ret    0x32f3
  417a1b:	out    0xe5,al
  417a1d:	sub    eax,0xcf45a754
  417a22:	adc    eax,0x840ceee
  417a27:	cmp    eax,0xa088c78d
  417a2c:	cdq    
  417a2d:	(bad)  [esi-0x6]
  417a30:	mov    cl,0xe8
  417a32:	and    BYTE PTR [edi+0x34],dl
  417a35:	ja     0x417a42
  417a37:	mov    dh,0xd2
  417a39:	xchg   esi,eax
  417a3a:	sub    al,0xe1
  417a3c:	ja     0x417ab2
  417a3e:	xchg   ecx,eax
  417a3f:	ins    DWORD PTR es:[edi],dx
  417a40:	aam    0xb0
  417a42:	mov    ebx,0xb754bffb
  417a47:	adc    ah,BYTE PTR [ebp+0x2f9d770f]
  417a4d:	test   esp,ecx
  417a4f:	xchg   ecx,eax
  417a50:	xlat   BYTE PTR ds:[ebx]
  417a51:	xchg   esi,eax
  417a52:	fild   DWORD PTR [esp+ebp*8+0x3c45e6ee]
  417a59:	add    eax,0x27438b69
  417a5e:	out    0x47,eax
  417a60:	dec    esp
  417a61:	dec    edx
  417a62:	mov    esp,0xe08cc688
  417a67:	push   esp
  417a68:	cmp    DWORD PTR [esi-0x2e],edi
  417a6b:	jo     0x417aaa
  417a6d:	dec    ebp
  417a6e:	jmp    0x417a2c
  417a70:	xlat   BYTE PTR ds:[ebx]
  417a71:	out    dx,al
  417a72:	mov    al,0xac
  417a74:	fwait
  417a75:	adc    BYTE PTR [ebx+0x500cac6a],0xa8
  417a7c:	xchg   DWORD PTR ds:0xf7c3172b,esp
  417a82:	ffreep st(2)
  417a84:	fwait
  417a85:	inc    ebp
  417a86:	inc    edx
  417a87:	add    BYTE PTR [esi],bl
  417a89:	dec    ebp
  417a8a:	xchg   BYTE PTR [edx],dl
  417a8c:	cmp    ah,bh
  417a8e:	mov    dl,0x3e
  417a90:	adc    BYTE PTR [edi],cl
  417a92:	retf   0x5cfd
  417a95:	arpl   WORD PTR [eax+eiz*4+0x5e7275db],bp
  417a9c:	aam    0x93
  417a9e:	push   cs
  417a9f:	(bad)  
  417aa0:	sub    esi,ebp
  417aa2:	xchg   ecx,eax
  417aa3:	sub    DWORD PTR [esi+eiz*2-0x5630bb0a],ebx
  417aaa:	jle    0x417a75
  417aac:	and    BYTE PTR [ebx],dl
  417aae:	lahf   
  417aaf:	xor    al,0x40
  417ab1:	dec    edx
  417ab2:	jmp    FWORD PTR [esi-0x58]
  417ab5:	dec    edi
  417ab6:	cmp    ebx,ebp
  417ab8:	mov    ah,0xc1
  417aba:	pop    edi
  417abb:	enter  0xcb76,0x2a
  417abf:	inc    ebx
  417ac0:	pop    ebx
  417ac2:	xor    ebx,DWORD PTR [eax+0x445c576f]
  417ac8:	sub    al,0xd
  417aca:	mov    ch,0xd7
  417acc:	stos   BYTE PTR es:[edi],al
  417acd:	into   
  417ace:	daa    
  417acf:	mov    ebp,0xbbb84746
  417ad4:	cmp    BYTE PTR [eax+0x693efcfe],dl
  417ada:	pop    ss
  417adb:	jg     0x417ace
  417add:	jno    0x417a9a
  417adf:	in     al,dx
  417ae0:	js     0x417b17
  417ae2:	(bad)  
  417ae3:	lahf   
  417ae4:	pop    ecx
  417ae5:	in     eax,dx
  417ae6:	and    al,0xb7
  417ae8:	push   0x2214e377
  417aed:	hlt    
  417aee:	aam    0xb
  417af0:	sbb    ebx,DWORD PTR [esi]
  417af2:	hlt    
  417af3:	out    dx,al
  417af4:	gs pop esp
  417af6:	mov    ecx,0xa785cb30
  417afb:	jmp    0xe8c04330
  417b00:	popf   
  417b01:	cmp    DWORD PTR [ecx+esi*1-0x1],0xc2dc390b
  417b09:	sbb    BYTE PTR [esi+0x632d3b9a],cl
  417b0f:	lea    ebx,ds:0x2519be41
  417b15:	or     al,0xaa
  417b17:	and    dl,0x3
  417b1a:	ret    
  417b1b:	loop   0x417b37
  417b1d:	fldcw  WORD PTR [ebx+0x33dbae8]
  417b23:	dec    esp
  417b24:	rcr    DWORD PTR [ebx+0x37304d2b],1
  417b2a:	repnz add esi,ebp
  417b2d:	ror    DWORD PTR [edx+0x7b2d712f],0xb9
  417b34:	and    DWORD PTR [edx+0x51],0xb713926c
  417b3b:	shr    BYTE PTR [ebx+0x61],0xf4
  417b3f:	xchg   edi,eax
  417b40:	rcr    BYTE PTR [ebx-0x6cc14e4c],1
  417b46:	sub    al,0x6e
  417b48:	repnz pop esi
  417b4a:	in     eax,0xc0
  417b4c:	mov    esi,0xe60ca64
  417b51:	add    eax,0x89ccc99d
  417b56:	mov    al,0x24
  417b58:	das    
  417b59:	lods   eax,DWORD PTR ds:[esi]
  417b5a:	pop    esp
  417b5b:	sub    esi,DWORD PTR [edi*2-0x1b658c6b]
  417b62:	push   ss
  417b63:	stc    
  417b64:	adc    al,0x98
  417b66:	dec    esp
  417b67:	outs   dx,DWORD PTR ds:[esi]
  417b68:	aas    
  417b69:	mov    cl,0x86
  417b6b:	fild   DWORD PTR [eax]
  417b6d:	lds    edx,FWORD PTR [edx]
  417b6f:	es pop ss
  417b71:	xchg   edi,eax
  417b72:	xchg   ebp,eax
  417b73:	shl    DWORD PTR [ebx+0x6a2b6a53],1
  417b79:	dec    ebx
  417b7a:	aas    
  417b7b:	iret   
  417b7c:	mov    ebx,0x9220152b
  417b81:	dec    ebx
  417b82:	test   al,0xa7
  417b84:	inc    edx
  417b85:	fnstenv [eax-0x48]
  417b88:	je     0x417baa
  417b8a:	push   esp
  417b8b:	fwait
  417b8c:	mov    bl,BYTE PTR [edx-0x3b2d0ff6]
  417b92:	pop    ebp
  417b93:	xor    DWORD PTR [edi-0x1aea6075],ecx
  417b99:	mov    ?,WORD PTR [ebx]
  417b9b:	pusha  
  417b9c:	popf   
  417b9d:	or     DWORD PTR [esi-0x6ae49478],edi
  417ba3:	aas    
  417ba4:	mov    dl,0x2
  417ba6:	xchg   esi,eax
  417ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba8:	xlat   BYTE PTR ds:[ebx]
  417ba9:	hlt    
  417baa:	mov    BYTE PTR [ebp+0x45],bl
  417bad:	sub    dl,BYTE PTR [ebx-0x51]
  417bb0:	in     eax,0x98
  417bb2:	enter  0x6773,0xd
  417bb6:	adc    bh,BYTE PTR [edx-0x7a2aadad]
  417bbc:	test   al,0x71
  417bbe:	in     al,dx
  417bbf:	mov    ecx,0x6fb0222f
  417bc4:	adc    bl,BYTE PTR [eax+0xea926a7]
  417bca:	xchg   ebx,eax
  417bcb:	or     al,0x47
  417bcd:	cld    
  417bce:	test   DWORD PTR [ecx+0x17ea8093],esi
  417bd4:	das    
  417bd5:	sbb    eax,0x51984e85
  417bda:	dec    ebp
  417bdb:	mov    eax,0x3bb72417
  417be0:	cmp    dl,BYTE PTR [esp+ebp*1+0x329065a4]
  417be7:	std    
  417be8:	sbb    eax,0x78ed65e9
  417bed:	nop
  417bee:	and    DWORD PTR [edx-0x197baf7],0x4f
  417bf5:	ss mov esi,0xfbd7d7ad
  417bfb:	(bad)  
  417bfc:	pop    ebx
  417bfd:	js     0x417c34
  417bff:	aaa    
  417c00:	icebp  
  417c01:	icebp  
  417c02:	stos   DWORD PTR es:[edi],eax
  417c03:	push   esi
  417c04:	push   esi
  417c05:	jns    0x417c18
  417c07:	loope  0x417bfa
  417c09:	cli    
  417c0a:	adc    al,0xe0
  417c0c:	ds jno 0xef39c69
  417c13:	cwde   
  417c14:	jg     0x417c5f
  417c16:	push   DWORD PTR [eax]
  417c18:	mov    eax,ds
  417c1a:	(bad)  
  417c1b:	loopne 0x417bf0
  417c1d:	xchg   BYTE PTR [edi],al
  417c1f:	aam    0xed
  417c21:	shl    bh,1
  417c23:	std    
  417c24:	dec    ebp
  417c25:	jg     0x417ca6
  417c27:	jns    0x417bae
  417c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c2a:	les    ecx,FWORD PTR [edi+0x41]
  417c2d:	pop    esp
  417c2e:	ret    
  417c2f:	out    0xfa,eax
  417c31:	sbb    al,0xf7
  417c33:	das    
  417c34:	inc    edx
  417c35:	iret   
  417c36:	in     eax,dx
  417c37:	test   eax,0x44f8be21
  417c3c:	mov    dl,0x59
  417c3e:	add    al,0xc5
  417c40:	das    
  417c41:	cdq    
  417c42:	sti    
  417c43:	mov    ebp,0xc85a28c3
  417c48:	sub    al,0xfb
  417c4a:	mov    edx,0xe494970b
  417c4f:	test   al,0x94
  417c51:	das    
  417c52:	sub    eax,0xf99874b9
  417c57:	jns    0x417cd5
  417c59:	mov    esp,0x286ae763
  417c5e:	pop    ss
  417c5f:	test   BYTE PTR [edx-0x47],ch
  417c62:	jo     0x417c52
  417c64:	push   eax
  417c65:	and    esi,DWORD PTR [ebp+0x19]
  417c68:	jne    0x417cac
  417c6a:	ss ror edi,1
  417c6d:	xor    eax,0x3a906d55
  417c72:	sub    al,0x9c
  417c74:	pop    ds
  417c75:	jge    0x417cb1
  417c77:	xor    al,0x19
  417c79:	scas   eax,DWORD PTR es:[edi]
  417c7a:	jne    0x417cec
  417c7c:	and    DWORD PTR [edx],ecx
  417c7e:	and    al,0x9
  417c80:	rcr    BYTE PTR [esi+0x35a6ceaf],cl
  417c86:	aam    0xa5
  417c88:	es pop esi
  417c8a:	dec    ecx
  417c8b:	inc    esi
  417c8c:	mov    al,ds:0x97c69458
  417c91:	xchg   esp,eax
  417c92:	or     DWORD PTR [eax+0x44],0xffffff94
  417c96:	icebp  
  417c97:	add    BYTE PTR [ebp-0x3b],ch
  417c9a:	mov    edx,0x3e6500b4
  417c9f:	inc    esi
  417ca0:	popa   
  417ca1:	cmp    DWORD PTR [edx+0x2dd37a0b],edi
  417ca7:	mov    cl,0x50
  417ca9:	arpl   WORD PTR [esi-0x1e316281],di
  417caf:	ret    0x1277
  417cb2:	imul   edx,DWORD PTR [ebx],0x36
  417cb5:	pop    ss
  417cb6:	aad    0x4d
  417cb8:	out    dx,eax
  417cb9:	lea    esi,ss:[ecx-0x67302261]
  417cc0:	paddw  mm4,QWORD PTR [ebx+0x5a499278]
  417cc7:	retf   
  417cc8:	(bad)  
  417cc9:	jecxz  0x417c61
  417ccb:	(bad)  
  417ccd:	mov    ds:0x26727c29,eax
  417cd2:	jne    0x417c54
  417cd4:	ret    0x97cc
  417cd7:	retf   0x899
  417cda:	add    eax,0xc803db75
  417cdf:	das    
  417ce0:	test   esp,0xf652c271
  417ce6:	mov    eax,ds:0xe742d25d
  417ceb:	shl    ebp,1
  417ced:	iret   
  417cee:	call   0x2fb1:0xe49ca453
  417cf5:	xchg   ecx,eax
  417cf6:	loopne 0x417cf4
  417cf8:	std    
  417cf9:	fldenv [ecx-0x25]
  417cfc:	in     eax,0xdb
  417cfe:	jmp    0x16b9c130
  417d03:	iret   
  417d04:	dec    ebx
  417d05:	mov    ecx,0x688c650f
  417d0a:	aam    0x6c
  417d0c:	inc    eax
  417d0d:	mov    ch,0xe1
  417d0f:	push   0xc967aec7
  417d14:	xchg   esp,eax
  417d15:	dec    ebx
  417d16:	or     BYTE PTR [ebp+eiz*2+0x562f653c],dl
  417d1d:	cmp    DWORD PTR ds:0x10ff4311,edi
  417d23:	jnp    0x417d10
  417d25:	lods   al,BYTE PTR ds:[esi]
  417d26:	stc    
  417d27:	leave  
  417d28:	in     al,0x80
  417d2a:	adc    DWORD PTR [eax+0x50df0cd0],0x67
  417d31:	adc    dh,BYTE PTR [ebx-0x2c]
  417d34:	sbb    al,0x7b
  417d36:	add    esp,DWORD PTR [eax-0x10a2f8c1]
  417d3c:	add    al,0xf1
  417d3e:	in     eax,0xb2
  417d40:	jge    0x417db1
  417d42:	pop    ecx
  417d43:	adc    eax,0x4fe5df3d
  417d48:	test   DWORD PTR [edx+0x5e4f4280],eax
  417d4e:	adc    BYTE PTR [ebx],cl
  417d50:	and    eax,0x1f9f1998
  417d55:	aam    0x91
  417d57:	ja     0x417d6c
  417d59:	ficomp DWORD PTR [esi-0x4f]
  417d5c:	dec    ecx
  417d5d:	test   eax,0x59fe9291
  417d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d63:	test   eax,0x9f2ac298
  417d68:	(bad)  
  417d69:	icebp  
  417d6a:	jo     0x417d1a
  417d6c:	pop    ds
  417d6d:	sub    al,0xb2
  417d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d70:	mov    bl,0x48
  417d72:	imul   edx,DWORD PTR [ebx+0x5d],0x61a7b84e
  417d79:	and    esi,0xca96f54e
  417d7f:	sbb    dl,BYTE PTR [eax]
  417d81:	cmp    edx,DWORD PTR [bx+si+0x1529]
  417d86:	aas    
  417d87:	add    BYTE PTR [edi+0x10],0x32
  417d8b:	mov    ds:0xe45d187c,eax
  417d90:	dec    esp
  417d91:	out    0x9c,al
  417d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d94:	cmc    
  417d95:	mov    ecx,DWORD PTR [esi+0x209219e7]
  417d9b:	sbb    al,0x92
  417d9d:	in     eax,0xd7
  417d9f:	mov    al,ds:0xa8ffac0c
  417da4:	mov    dh,0xa9
  417da6:	aaa    
  417da7:	pushf  
  417da8:	pop    esp
  417da9:	loop   0x417d73
  417dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dac:	call   0xce06ba0a
  417db1:	pop    eax
  417db2:	mov    esp,0x8e9528f3
  417db7:	rcr    edi,0x43
  417dba:	test   BYTE PTR [edi],al
  417dbc:	lods   eax,DWORD PTR ds:[esi]
  417dbd:	rcl    BYTE PTR [ebp+0x95f45],cl
  417dc3:	popf   
  417dc4:	ret    0xabec
  417dc7:	mov    cl,0xb5
  417dc9:	cdq    
  417dca:	(bad)  
  417dcb:	cmp    DWORD PTR [esi-0x3c1d547d],eax
  417dd1:	fdiv   DWORD PTR [ebp-0x66]
  417dd4:	iret   
  417dd5:	mov    ebp,0x460f413d
  417dda:	push   esp
  417ddb:	cli    
  417ddc:	xor    bl,cl
  417dde:	and    al,0x3c
  417de0:	push   0x7173b464
  417de5:	ins    DWORD PTR es:[edi],dx
  417de6:	mov    cs,eax
  417de8:	pop    ebx
  417de9:	inc    esp
  417dea:	scas   eax,DWORD PTR es:[edi]
  417deb:	push   eax
  417dec:	lods   al,BYTE PTR ds:[esi]
  417ded:	cld    
  417dee:	pop    ds
  417def:	pop    ecx
  417df0:	test   BYTE PTR [edx],cl
  417df2:	xchg   edx,eax
  417df3:	push   0x4fce5e34
  417df8:	cwde   
  417df9:	mov    cl,0x1b
  417dfb:	(bad)  
  417dfd:	and    DWORD PTR [ebx-0x20],0xffffff9f
  417e01:	dec    esi
  417e02:	ss out 0xf8,eax
  417e05:	retf   
  417e06:	sbb    bl,BYTE PTR ds:0xc6c8bad2
  417e0c:	mov    edx,0x6ac2f5bb
  417e11:	push   cs
  417e12:	xchg   edx,eax
  417e13:	pop    esp
  417e14:	or     dl,dh
  417e16:	mov    WORD PTR [eax],fs
  417e18:	call   0x30db7abf
  417e1d:	xchg   ebp,eax
  417e1e:	push   es
  417e1f:	stos   DWORD PTR es:[edi],eax
  417e20:	cli    
  417e21:	adc    edx,DWORD PTR [ebp+0x42f66034]
  417e27:	fwait
  417e28:	jp     0x417e7d
  417e2a:	leave  
  417e2b:	pop    ecx
  417e2c:	push   edi
  417e2d:	addr16 out 0xd2,al
  417e30:	sbb    al,0xbc
  417e32:	shl    DWORD PTR [esi-0x3a1a19ef],0xee
  417e39:	jmp    0x2d4a4c3f
  417e3e:	xchg   esi,eax
  417e3f:	mov    ds:0x3521cf49,eax
  417e44:	enter  0x7f3f,0x76
  417e48:	xlat   BYTE PTR ds:[ebx]
  417e49:	push   es
  417e4a:	and    ch,BYTE PTR [edx+0x351bf812]
  417e50:	inc    esp
  417e51:	sub    al,0xc9
  417e53:	jbe    0x417e67
  417e55:	mov    dh,0xb
  417e57:	sbb    eax,0x71cfe642
  417e5c:	aas    
  417e5d:	pop    ebx
  417e5e:	cmp    eax,0x7ff642af
  417e63:	ja     0x417e3f
  417e65:	mov    edi,0xc2cbce81
  417e6a:	ror    DWORD PTR [edx],1
  417e6c:	in     eax,0x26
  417e6e:	aad    0x8a
  417e70:	xor    dh,BYTE PTR [ebx+0x62ac050e]
  417e76:	add    edi,DWORD PTR [ebx+0x5f]
  417e79:	aad    0xae
  417e7b:	cwde   
  417e7c:	imul   ecx,eax,0x21
  417e7f:	fneni(8087 only) 
  417e81:	dec    esi
  417e82:	inc    esp
  417e83:	sbb    ah,ch
  417e85:	adc    esp,ecx
  417e87:	scas   eax,DWORD PTR es:[edi]
  417e88:	mov    ds:0xc9995b0,al
  417e8d:	adc    edx,DWORD PTR [ebx+0x4ca42110]
  417e93:	imul   BYTE PTR [esi+0x51]
  417e96:	idiv   BYTE PTR [ebp+0x39a030d6]
  417e9c:	fst    DWORD PTR [edx]
  417e9e:	sar    DWORD PTR [ebp+ebp*1+0x30791a02],1
  417ea5:	jns    0x417e7c
  417ea7:	mov    cl,0x2b
  417ea9:	mov    ds:0x39ae3f44,eax
  417eae:	cdq    
  417eaf:	mov    ds:0xa6bd91ed,al
  417eb4:	push   0x5e
  417eb6:	dec    esp
  417eb7:	ins    DWORD PTR es:[edi],dx
  417eb8:	xchg   DWORD PTR [ebp+0x58f8fead],ecx
  417ebe:	aad    0x5e
  417ec0:	pop    ss
  417ec1:	dec    esi
  417ec2:	shl    BYTE PTR [ebx-0x47689095],cl
  417ec8:	fisub  WORD PTR [edi-0x26]
  417ecb:	xor    ah,ch
  417ecd:	sub    eax,0x1836bbc6
  417ed2:	nop
  417ed3:	shl    edi,0xdf
  417ed6:	test   BYTE PTR [edi+0x58],dh
  417ed9:	dec    eax
  417eda:	sub    ebx,ebp
  417edc:	inc    edi
  417edd:	sub    BYTE PTR [eax],dl
  417edf:	adc    eax,0xd4f78b1f
  417ee4:	mov    esi,0x7d041df7
  417ee9:	xor    DWORD PTR [edx-0x68fb1f96],0x31
  417ef0:	loopne 0x417f04
  417ef2:	or     al,0xa2
  417ef4:	fistp  DWORD PTR [eax+eiz*1-0x73]
  417ef8:	nop
  417ef9:	jge    0x417eb2
  417efb:	nop
  417efc:	dec    ebp
  417efd:	jmp    0x417ef7
  417eff:	xchg   edi,eax
  417f00:	xor    eax,0x16e10499
  417f05:	jge    0x417ef4
  417f07:	fwait
  417f08:	pop    eax
  417f09:	test   BYTE PTR [eax-0x5d],0x3b
  417f0d:	jnp    0x417f39
  417f0f:	sar    BYTE PTR fs:[esi-0x25],0x53
  417f14:	add    cl,BYTE PTR [ebp-0x706cf464]
  417f1a:	adc    DWORD PTR [ecx+0x66],ebp
  417f1d:	adc    eax,0x6c392878
  417f22:	ja     0x417eec
  417f24:	dec    esp
  417f25:	sbb    al,0xa7
  417f27:	hlt    
  417f28:	sub    cl,BYTE PTR [edi]
  417f2a:	add    ah,dh
  417f2c:	cmp    ebp,DWORD PTR [esi]
  417f2e:	ret    
  417f2f:	sbb    esi,DWORD PTR [ebp-0x57]
  417f32:	stos   DWORD PTR es:[edi],eax
  417f33:	test   BYTE PTR [edi+0x6],ah
  417f36:	lea    esp,[edi-0x571533e5]
  417f3c:	pop    ds
  417f3d:	ds inc ebp
  417f3f:	clc    
  417f40:	xchg   ecx,eax
  417f41:	dec    ebp
  417f42:	add    DWORD PTR [eax],ebx
  417f44:	push   ebp
  417f45:	shl    BYTE PTR [edx+edi*8],1
  417f48:	shr    BYTE PTR [ebx-0x3794717b],0xbc
  417f4f:	fs xchg ebp,edi
  417f52:	dec    eax
  417f53:	in     al,0xfd
  417f55:	sbb    cl,dh
  417f57:	adc    eax,0x300a71ac
  417f5c:	pop    eax
  417f5d:	cmc    
  417f5e:	cs and al,dl
  417f61:	(bad)  
  417f62:	or     ecx,ecx
  417f64:	in     al,0x79
  417f66:	pop    esp
  417f67:	inc    esp
  417f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f69:	dec    ebp
  417f6a:	hlt    
  417f6b:	jecxz  0x417fcb
  417f6d:	push   ebp
  417f6e:	push   ecx
  417f6f:	div    BYTE PTR [esi+0x1a4ac3e7]
  417f75:	xchg   ebx,eax
  417f76:	and    BYTE PTR ds:0x6d23c76f,bl
  417f7c:	push   es
  417f7d:	mov    ch,0x1e
  417f7f:	shr    edi,1
  417f81:	call   0x25ad:0x7128b67f
  417f88:	jbe    0x417f5f
  417f8a:	mov    eax,0x689c6c1e
  417f8f:	bound  eax,QWORD PTR [ebx+0x5cbe008f]
  417f95:	ret    0xb800
  417f98:	(bad)
  417f9b:	and    dl,dh
  417f9d:	dec    ecx
  417f9e:	push   cs
  417f9f:	sub    al,BYTE PTR [edi-0x72ac7c11]
  417fa5:	jae    0x417fe0
  417fa7:	xchg   ebp,eax
  417fa8:	xchg   ecx,eax
  417fa9:	icebp  
  417faa:	out    dx,al
  417fab:	and    eax,ecx
  417fad:	jb     0x418015
  417faf:	retf   0x5cf4
  417fb2:	adc    BYTE PTR [ebx-0x7948025d],dh
  417fb8:	adc    BYTE PTR [ebp+0x13],0x23
  417fbc:	sbb    al,0x4a
  417fbe:	sahf   
  417fbf:	mov    dh,0x19
  417fc1:	repz dec ebp
  417fc3:	dec    esi
  417fc4:	cmp    BYTE PTR [ebx],dl
  417fc6:	xor    al,0xdd
  417fc8:	push   edx
  417fc9:	inc    edi
  417fca:	test   eax,0xf990780a
  417fcf:	(bad)  
  417fd0:	int3   
  417fd1:	repnz sub al,0x87
  417fd4:	sub    eax,0x80bf3d8a
  417fd9:	fdiv   DWORD PTR [esi+edx*4]
  417fdd:	scas   al,BYTE PTR es:[edi]
  417fde:	call   0x513a:0xcd225eb0
  417fe5:	push   0xffffff96
  417fe7:	int3   
  417fe8:	and    BYTE PTR [ebp-0x2c63bd57],cl
  417fee:	inc    sp
  417ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ff2:	cmp    eax,0x9efa2a43
  417ff7:	jl     0x418032
  417ff9:	pop    ds
  417ffa:	call   FWORD PTR [ebx-0x40]
  417ffd:	xchg   DWORD PTR [edx-0x79],eax
  418000:	pusha  
  418001:	mov    dl,0x4a
  418003:	jb     0x41800a
  418005:	dec    BYTE PTR [esp+edx*4]
  418008:	dec    esp
  418009:	pop    ss
  41800a:	xchg   esi,eax
  41800b:	sbb    al,0xe0
  41800d:	test   BYTE PTR [si-0x2734],ah
  418012:	mov    esp,0x927d63d6
  418017:	hlt    
  418018:	mov    ebp,0x75b39e89
  41801d:	lahf   
  41801e:	mov    ebx,0x9dd341a
  418023:	add    ebx,ecx
  418025:	xchg   DWORD PTR [edi],edi
  418027:	and    BYTE PTR [ecx+0x50c9de7c],bh
  41802d:	outs   dx,BYTE PTR ds:[esi]
  41802e:	mov    eax,0xc7c7bd73
  418033:	into   
  418034:	add    eax,0xdd9dd5ac
  418039:	push   cs
  41803a:	add    al,0xf4
  41803c:	or     esi,ecx
  41803e:	aaa    
  41803f:	push   ebp
  418040:	push   0xffffff91
  418042:	ins    DWORD PTR es:[edi],dx
  418043:	xchg   edx,eax
  418044:	dec    edx
  418045:	xor    bl,BYTE PTR [edx]
  418047:	sub    edx,0x6650d0ba
  41804d:	jb     0x41803f
  41804f:	into   
  418050:	shl    DWORD PTR [ecx],cl
  418052:	push   ebx
  418053:	dec    ebx
  418054:	adc    DWORD PTR [ecx+0x23],ecx
  418057:	xor    al,0x49
  418059:	sbb    DWORD PTR [edi-0x2f1ea3e6],ecx
  41805f:	cmp    BYTE PTR [esi+edx*2+0x6],dl
  418063:	mov    ah,0xb8
  418065:	stos   DWORD PTR es:[edi],eax
  418066:	pushf  
  418067:	and    DWORD PTR ds:0xc3be3110,0xffffffa0
  41806e:	push   esp
  41806f:	clc    
  418070:	test   eax,0x8c28157c
  418075:	ficomp WORD PTR [eax-0x1f]
  418078:	gs adc eax,0x1cc6a5de
  41807e:	or     eax,0x36aeb597
  418083:	xor    al,0x90
  418085:	es mov esp,0x1cf6b4cb
  41808b:	and    BYTE PTR [ecx+0xd171fea],bh
  418091:	fld    TBYTE PTR [ecx+0x55]
  418094:	addr16 jmp 0x4180da
  418097:	sub    ch,al
  418099:	ret    0x2a15
  41809c:	(bad)
  4180a0:	push   0xdedca24
  4180a5:	and    BYTE PTR [edx-0x77b4fd6d],dl
  4180ab:	inc    edx
  4180ac:	sbb    ecx,ebp
  4180ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180af:	neg    al
  4180b1:	gs stos BYTE PTR es:[edi],al
  4180b3:	lods   eax,DWORD PTR ds:[esi]
  4180b4:	pushw  0xc6a6
  4180b8:	popw   ds
  4180ba:	push   edx
  4180bb:	inc    eax
  4180bc:	inc    ecx
  4180bd:	jp     0x4180cb
  4180bf:	sbb    bl,BYTE PTR [edx+0x27]
  4180c2:	adc    DWORD PTR [edi-0x6e7ab2a],eax
  4180c8:	aam    0x5f
  4180ca:	adc    DWORD PTR [edx-0x166a5dee],eax
  4180d0:	inc    esi
  4180d1:	pop    eax
  4180d2:	mov    al,ds:0xa75bc6d4
  4180d7:	arpl   WORD PTR [edx+eiz*1+0x1a],si
  4180db:	hlt    
  4180dc:	xchg   ebp,eax
  4180dd:	pusha  
  4180de:	sbb    DWORD PTR [ebx+0x11],0x668d3014
  4180e5:	sbb    DWORD PTR [ecx],edx
  4180e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e8:	scas   al,BYTE PTR es:[edi]
  4180e9:	fs test al,0x81
  4180ec:	loop   0x418169
  4180ee:	sbb    DWORD PTR [ebx],0x3b4f519
  4180f4:	add    BYTE PTR [eax-0x50],al
  4180f7:	adc    al,0xd6
  4180f9:	cld    
  4180fa:	inc    esp
  4180fb:	std    
  4180fc:	sti    
  4180fd:	cwde   
  4180fe:	stos   BYTE PTR es:[edi],al
  4180ff:	pop    eax
  418100:	jle    0x418109
  418102:	mov    DWORD PTR [ecx+0x5b],0x4df2c508
  418109:	xor    ch,BYTE PTR [edx+0x45dffc3]
  41810f:	fbld   TBYTE PTR [ecx]
  418111:	jmp    0xf6f4:0x45445eef
  418118:	fldpi  
  41811a:	out    dx,eax
  41811b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41811c:	push   esp
  41811d:	aam    0x46
  41811f:	(bad)  
  418121:	aas    
  418122:	into   
  418123:	aas    
  418124:	add    eax,0xa60ef234
  418129:	outs   dx,BYTE PTR ds:[esi]
  41812a:	add    al,0xac
  41812c:	jge    0x41816a
  41812e:	out    0xf0,eax
  418130:	sbb    edi,DWORD PTR [edi+edx*1+0x76]
  418134:	repnz lods eax,DWORD PTR ds:[esi]
  418136:	xor    eax,0xcba0df4b
  41813b:	loopne 0x418101
  41813d:	js     0x41810c
  41813f:	push   edx
  418140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418141:	arpl   WORD PTR [edi+0x373080dd],di
  418147:	xchg   edi,eax
  418148:	adc    DWORD PTR [eax+ebx*1+0x357d328],edx
  41814f:	ss mov bh,0xfe
  418152:	jne    0x4180d4
  418154:	mov    al,ds:0xdda54c8f
  418159:	add    al,BYTE PTR [eax+eax*8+0x4835c3ab]
  418160:	jge    0x4181c0
  418162:	cs mov edi,0xfd17e65d
  418168:	adc    DWORD PTR [edi],0x616dc779
  41816e:	mov    esp,0x32bec080
  418173:	xchg   ch,dh
  418175:	scas   eax,DWORD PTR es:[edi]
  418176:	shl    BYTE PTR cs:[eax+0x4cf86e5b],1
  41817d:	push   es
  41817e:	out    dx,al
  41817f:	ficomp WORD PTR [esp+eiz*8]
  418182:	or     BYTE PTR [edi],bh
  418184:	cwde   
  418185:	xchg   DWORD PTR ds:0xcf5a5ac1,esp
  41818b:	pop    ebx
  41818c:	xchg   esp,eax
  41818d:	jne    0x4181c7
  41818f:	add    ebp,ecx
  418191:	jb     0x4181de
  418193:	inc    ebx
  418194:	jbe    0x41817e
  418196:	cwde   
  418197:	mov    cl,0xdf
  418199:	jns    0x4181b3
  41819b:	mov    DWORD PTR [edi-0x4f],0x3f1bc73e
  4181a2:	data16 cmp al,0x9d
  4181a5:	test   DWORD PTR [edx+0xc1c3187],esp
  4181ab:	retf   0x3794
  4181ae:	add    bh,dl
  4181b0:	xchg   edx,eax
  4181b1:	jp     0x4181d4
  4181b3:	in     al,dx
  4181b4:	mov    eax,ds:0x19512c74
  4181b9:	(bad)  
  4181bb:	pop    esi
  4181bc:	xor    DWORD PTR [esi+esi*4-0x11],edx
  4181c0:	cmp    esi,DWORD PTR [ebx+0x1e352555]
  4181c6:	leave  
  4181c7:	mov    bl,0x22
  4181c9:	push   ebp
  4181ca:	and    dl,0x1c
  4181cd:	cmp    ebp,DWORD PTR [esi-0x23]
  4181d0:	or     DWORD PTR [ebp+0x58d06c34],eax
  4181d6:	inc    edi
  4181d7:	sub    al,0x84
  4181d9:	push   eax
  4181da:	cmp    dh,0x66
  4181dd:	xlat   BYTE PTR ds:[ebx]
  4181de:	inc    edi
  4181df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e0:	mov    bh,0xd
  4181e2:	scas   eax,DWORD PTR es:[edi]
  4181e3:	hlt    
  4181e4:	les    ebp,FWORD PTR [eax]
  4181e6:	sub    dh,0x8f
  4181e9:	push   esp
  4181ea:	pop    esi
  4181eb:	xchg   edx,eax
  4181ec:	retf   0xb803
  4181ef:	jnp    0x418249
  4181f1:	js     0x4181ef
  4181f3:	cmp    al,0x34
  4181f5:	dec    esi
  4181f6:	fstp   QWORD PTR [esp+edi*4-0x78ba32c3]
  4181fd:	mov    ds,WORD PTR [edi]
  4181ff:	cmp    eax,0xa071c178
  418204:	or     edx,esp
  418206:	and    eax,0xcce7b668
  41820b:	bound  esi,QWORD PTR [ebx]
  41820d:	adc    al,0x81
  41820f:	fist   WORD PTR [eax]
  418211:	pop    es
  418212:	lahf   
  418213:	mov    ecx,0x6e7a70ac
  418218:	in     eax,dx
  418219:	xchg   edx,eax
  41821a:	(bad)
  418220:	inc    edx
  418221:	je     0x4181e6
  418223:	(bad)
  418226:	add    DWORD PTR [ebx+eiz*2-0x1e],esp
  41822a:	out    dx,eax
  41822b:	and    cl,BYTE PTR [edi+0x37]
  41822e:	and    cl,0x21
  418231:	(bad)  
  418232:	pop    es
  418233:	add    al,0xd0
  418235:	xor    ecx,esp
  418237:	leave  
  418238:	lock jae 0x418242
  41823b:	add    edi,DWORD PTR [esp+ebp*4]
  41823e:	fmul   DWORD PTR [esi-0x5d]
  418241:	dec    esi
  418242:	jmp    0xf7dfc5b4
  418247:	mov    dl,BYTE PTR [ebp-0x7f]
  41824a:	xchg   edi,eax
  41824b:	adc    al,0xf8
  41824d:	popf   
  41824e:	mov    cl,0x78
  418250:	pop    es
  418251:	aas    
  418252:	cdq    
  418253:	mov    ds:0x9b7cef56,al
  418258:	inc    ecx
  418259:	cmp    edi,DWORD PTR [eax-0x8]
  41825c:	pop    ss
  41825d:	arpl   WORD PTR [ebp+0x25441a8a],bx
  418263:	xor    ch,al
  418265:	test   al,0xc8
  418267:	in     eax,0x8c
  418269:	in     al,dx
  41826a:	inc    edx
  41826b:	cwde   
  41826c:	ss adc edx,edx
  41826f:	xor    BYTE PTR [eax],0x7d
  418272:	out    dx,eax
  418273:	ss pop esp
  418275:	inc    esp
  418276:	aad    0x35
  418278:	mov    DWORD PTR [ebx-0x5c533064],edx
  41827e:	cmp    DWORD PTR [edi],0x41
  418281:	(bad)  
  418282:	into   
  418283:	std    
  418284:	adc    eax,0x2cd2fc51
  418289:	ret    
  41828a:	jmp    0xc095:0xc5625832
  418291:	arpl   WORD PTR [eax-0x5f],ax
  418294:	in     al,dx
  418295:	dec    edx
  418296:	in     al,0xe8
  418298:	ret    
  418299:	repz bound ecx,QWORD PTR [edx-0x1466c9b2]
  4182a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a1:	aas    
  4182a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a3:	mov    esi,0x3c975f26
  4182a8:	out    0xe5,eax
  4182aa:	neg    dl
  4182ac:	sar    BYTE PTR [edi-0x5fbded41],0xe5
  4182b3:	test   DWORD PTR [edi],edx
  4182b5:	in     eax,0xf6
  4182b7:	mov    al,0xf6
  4182b9:	mov    eax,0x4bf19185
  4182be:	cmc    
  4182bf:	int3   
  4182c0:	sbb    al,BYTE PTR [ebp+0x72961c9d]
  4182c6:	adc    al,0xdc
  4182c8:	imul   ebp,DWORD PTR [ecx+0x39309f67],0xd6f2e6f5
  4182d2:	push   ss
  4182d3:	sub    BYTE PTR [ebx],cl
  4182d5:	jns    0x4182d4
  4182d7:	es push ecx
  4182d9:	repz xor al,0xa0
  4182dc:	dec    edx
  4182dd:	loop   0x4182a8
  4182df:	in     eax,dx
  4182e0:	xchg   ebp,eax
  4182e1:	lds    eax,FWORD PTR [edi+0x5e]
  4182e4:	dec    eax
  4182e5:	cmp    ebx,esp
  4182e7:	adc    dh,ch
  4182e9:	jmp    0x879bc67
  4182ee:	scas   eax,DWORD PTR es:[edi]
  4182ef:	cmp    BYTE PTR [edx-0x480d53c1],dl
  4182f5:	jae    0x418281
  4182f7:	aaa    
  4182f8:	jae    0x4182bb
  4182fa:	sar    BYTE PTR [esi],cl
  4182fc:	js     0x4182fe
  4182fe:	inc    edx
  4182ff:	pop    es
  418300:	mov    dh,0xc
  418302:	sti    
  418303:	loope  0x418340
  418305:	retf   0xb897
  418308:	dec    ebx
  418309:	sub    al,0x80
  41830b:	pushf  
  41830c:	(bad)  
  41830e:	adc    DWORD PTR [ecx],esp
  418310:	call   0xd981:0x339c390b
  418317:	and    ebx,ebx
  418319:	and    dh,BYTE PTR [eax]
  41831b:	imul   esp,DWORD PTR [ecx+eax*8-0xf7b75e7],0x68
  418323:	cmp    eax,0x1ad6f429
  418328:	sbb    bh,BYTE PTR [eax+esi*1]
  41832b:	push   esp
  41832c:	pop    ebx
  41832d:	xor    bl,BYTE PTR [esi]
  41832f:	stc    
  418330:	sbb    DWORD PTR [edx+0x24],eax
  418333:	ds inc eax
  418335:	lds    edi,FWORD PTR [ecx+eax*4+0x62e244f]
  41833c:	mov    edx,0x32be3f12
  418341:	dec    ebp
  418342:	lock shl DWORD PTR [edx+0x6d33db41],1
  418349:	xchg   edi,edx
  41834b:	dec    ebx
  41834c:	ins    DWORD PTR es:[edi],dx
  41834d:	shl    WORD PTR [eax+0x3bd590fe],cl
  418354:	fs (bad) 
  418356:	imul   DWORD PTR [ebx+0x769c0828]
  41835c:	mov    ch,0xdf
  41835e:	and    eax,0xe0417b0e
  418363:	push   edx
  418364:	pop    edx
  418365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418366:	clc    
  418367:	fs call 0xc3560417
  41836d:	xor    BYTE PTR [ebp+0xb86f3ff],cl
  418373:	adc    al,0xe1
  418375:	test   eax,0x7467df36
  41837a:	sbb    al,BYTE PTR [edx-0x726ad09d]
  418380:	lock fild QWORD PTR [ecx-0x3f58a067]
  418387:	xchg   ecx,eax
  418388:	js     0x4183a0
  41838a:	mov    cl,ah
  41838c:	push   esi
  41838d:	sub    BYTE PTR [edx+0x52],dl
  418390:	inc    ebx
  418391:	mov    edi,0xad6ba2ba
  418396:	(bad)  
  418397:	cmp    eax,0x5ed5a54c
  41839c:	push   ebx
  41839d:	mov    al,0x5c
  41839f:	jmp    0xe8617602
  4183a4:	sub    DWORD PTR ds:0xba1406c0,eax
  4183aa:	pop    esp
  4183ab:	inc    edx
  4183ac:	inc    esi
  4183ad:	outs   dx,DWORD PTR ds:[esi]
  4183ae:	sbb    al,0x20
  4183b0:	sbb    esi,DWORD PTR [edx+0x49]
  4183b3:	jmp    0xe694668c
  4183b8:	sbb    eax,0x26bf01e7
  4183bd:	cmc    
  4183be:	icebp  
  4183bf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4183c1:	hlt    
  4183c2:	inc    ebx
  4183c3:	arpl   sp,bx
  4183c5:	in     al,dx
  4183c6:	sub    DWORD PTR [ebx],edi
  4183c8:	pushf  
  4183c9:	jg     0x41840f
  4183cb:	mov    bl,0xe8
  4183cd:	jp     0x4183ad
  4183cf:	push   0xffffffa8
  4183d1:	icebp  
  4183d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d3:	push   ss
  4183d4:	xchg   ecx,eax
  4183d5:	test   bh,dh
  4183d7:	js     0x41835a
  4183d9:	sub    eax,0xed21a8d7
  4183de:	inc    cx
  4183e0:	mov    al,ds:0xccc57318
  4183e5:	aam    0xe8
  4183e7:	mov    esp,0xa5f30037
  4183ec:	hlt    
  4183ed:	add    BYTE PTR [eax-0x6451e60e],dh
  4183f3:	lock cmp al,0x19
  4183f6:	dec    esi
  4183f7:	inc    ebp
  4183f8:	test   DWORD PTR [ebx+eiz*1+0x2273a0a1],eax
  4183ff:	add    DWORD PTR [ebx-0x7a60c54f],esp
  418405:	push   0xaa9d36ae
  41840a:	xor    DWORD PTR [ecx+0x23a2e1a],0x95206c87
  418414:	dec    esi
  418415:	xchg   esp,eax
  418416:	enter  0x80ce,0x20
  41841a:	nop
  41841b:	dec    edi
  41841c:	sub    al,bl
  41841e:	fild   QWORD PTR [esi]
  418420:	push   ebx
  418421:	mov    DWORD PTR [ebp+0x72],edi
  418424:	ret    0x8a55
  418427:	push   0x20
  418429:	jge    0x418488
  41842b:	mov    ch,0xdf
  41842d:	sbb    dh,BYTE PTR [eax-0x1]
  418430:	or     dh,bl
  418432:	adc    ebp,edx
  418434:	pop    ebx
  418435:	add    DWORD PTR ds:0x797dab91,ecx
  41843b:	stc    
  41843c:	imul   edi,DWORD PTR es:[edx-0x301a47f4],0x571a3bf0
  418447:	loop   0x4183df
  418449:	cmc    
  41844a:	push   cs
  41844b:	push   edx
  41844c:	lahf   
  41844d:	les    ecx,FWORD PTR [esi+0x232f6a35]
  418453:	mov    ds:0x2f053a75,eax
  418458:	cld    
  418459:	in     al,dx
  41845a:	js     0x4183f3
  41845c:	jb     0x41848d
  41845e:	dec    ebp
  41845f:	xchg   DWORD PTR [esi+0x3f],edx
  418462:	and    BYTE PTR [edi+0x2b],0xfd
  418466:	(bad)  
  418467:	(bad)  
  418468:	idiv   DWORD PTR [eax-0x38b75327]
  41846e:	into   
  41846f:	arpl   WORD PTR [edx+ebx*2-0x7],dx
  418473:	lea    eax,[ecx+0x6c]
  418476:	stos   BYTE PTR es:[edi],al
  418477:	and    al,0xe7
  418479:	jge    0x4184f6
  41847b:	or     eax,0x3a294b5
  418480:	setl   BYTE PTR [ebx+0x25]
  418484:	popf   
  418485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418486:	in     al,0xa9
  418488:	in     eax,dx
  418489:	pop    ebx
  41848a:	adc    eax,0x6175c4ae
  41848f:	sub    edi,DWORD PTR [esi-0x33ee8dea]
  418495:	(bad)  
  418496:	dec    ebx
  418497:	mov    esp,eax
  418499:	inc    eax
  41849a:	add    ah,al
  41849c:	mov    edx,0x31ddfd0b
  4184a1:	lock sbb BYTE PTR [esi+0x4b],dh
  4184a5:	xor    eax,0x892205ae
  4184aa:	ret    0xeb4c
  4184ad:	scas   al,BYTE PTR es:[edi]
  4184ae:	mov    eax,ds:0xea35fd16
  4184b3:	loope  0x418508
  4184b5:	jecxz  0x4184ce
  4184b7:	push   edi
  4184b8:	sub    ebx,0x93db9248
  4184be:	stc    
  4184bf:	jmp    DWORD PTR [ecx-0x6a3eca9c]
  4184c5:	xchg   ecx,eax
  4184c6:	sub    DWORD PTR [esi+0x3a9db1d8],esi
  4184cc:	mov    ch,0xc6
  4184ce:	jne    0x418485
  4184d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d1:	jl     0x418549
  4184d3:	in     al,0xa4
  4184d5:	sub    DWORD PTR [eax-0x78],ecx
  4184d8:	xor    eax,0xe125f9e4
  4184dd:	mov    bl,0x11
  4184df:	inc    ecx
  4184e0:	outs   dx,BYTE PTR ds:[esi]
  4184e1:	sbb    eax,DWORD PTR [edx-0x8432b32]
  4184e7:	push   0xffffffc8
  4184e9:	stc    
  4184ea:	mov    ecx,0x43480e5
  4184ef:	push   es
  4184f0:	in     eax,dx
  4184f1:	popf   
  4184f2:	mov    ecx,0x7213cf62
  4184f7:	push   esp
  4184f8:	std    
  4184f9:	(bad)  [edi+0x53]
  4184fc:	and    edx,DWORD PTR [esp+ebx*2-0x28ac20e9]
  418503:	jle    0x4184f9
  418505:	hlt    
  418506:	xchg   esp,eax
  418507:	pop    es
  418508:	add    dl,ah
  41850a:	icebp  
  41850b:	int    0x7d
  41850d:	aas    
  41850e:	stos   DWORD PTR es:[edi],eax
  41850f:	inc    ebp
  418510:	mov    BYTE PTR [esi+eax*8-0x71],ah
  418514:	jle    0x41852f
  418516:	loopne 0x418536
  418518:	retf   0xf6cd
  41851b:	lock adc DWORD PTR [edi+0x75],edx
  41851f:	inc    edx
  418520:	in     eax,dx
  418521:	push   ds
  418522:	jl     0x4184d7
  418524:	shl    ch,0x98
  418527:	inc    ebx
  418528:	xor    eax,0xd3e014e9
  41852d:	dec    esi
  41852e:	adc    DWORD PTR [esi+0x75c6e129],0x7d
  418535:	or     DWORD PTR [ebx],edi
  418537:	or     bl,dl
  418539:	push   ebx
  41853a:	mov    ds:0x28f8bb7e,eax
  41853f:	es dec eax
  418541:	xor    eax,0x1fdafffe
  418546:	ds jmp 0xfbf5:0x7184c2cd
  41854e:	xchg   esp,eax
  41854f:	pop    ebx
  418550:	jne    0x41854c
  418552:	call   0x9837:0xa6547cd
  418559:	imul   esp,ebp,0x5f46f88c
  41855f:	sub    eax,DWORD PTR [edi+0xd477a5b]
  418565:	loope  0x418525
  418567:	lods   al,BYTE PTR ds:[esi]
  418568:	retf   
  418569:	inc    ebx
  41856a:	popf   
  41856b:	inc    eax
  41856c:	ins    BYTE PTR es:[edi],dx
  41856d:	adc    BYTE PTR [edx],dl
  41856f:	call   0xd83ae321
  418574:	or     ebp,DWORD PTR [esi-0x4bc84e36]
  41857a:	aad    0x6
  41857c:	add    al,bh
  41857e:	pop    ebx
  41857f:	dec    eax
  418580:	out    dx,eax
  418581:	in     eax,dx
  418582:	or     al,0xa1
  418584:	icebp  
  418585:	cdq    
  418586:	inc    esp
  418587:	mov    ebx,0x61da5739
  41858c:	stc    
  41858d:	push   ebp
  41858e:	mov    al,0x8
  418590:	ror    BYTE PTR [edi-0xa45e3fa],0xbc
  418597:	or     BYTE PTR [edx+0x3307d82b],al
  41859d:	ja     0x41860e
  41859f:	jp     0x418617
  4185a1:	ja     0x4185ac
  4185a3:	mov    ch,0x7
  4185a5:	inc    edi
  4185a6:	outs   dx,BYTE PTR ds:[esi]
  4185a7:	pop    ecx
  4185a8:	mov    esp,0xc271b01f
  4185ad:	inc    ecx
  4185ae:	mov    ds:0xc99df4f7,al
  4185b3:	ret    
  4185b4:	jg     0x418616
  4185b6:	shl    ch,0xfd
  4185b9:	push   0xffffffe3
  4185bb:	jl     0x418618
  4185bd:	add    edi,DWORD PTR [ecx]
  4185bf:	call   0xc6afbe40
  4185c4:	jl     0x41860e
  4185c6:	mov    ds:0x224fb678,eax
  4185cb:	push   edi
  4185cc:	ror    esp,cl
  4185ce:	rcl    dl,1
  4185d0:	jno    0x418618
  4185d2:	enter  0xf692,0xde
  4185d6:	sahf   
  4185d7:	or     ecx,edx
  4185d9:	addr16 mov edi,0x18401ce3
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	fnstcw WORD PTR [edi+eiz*8+0x35a1c4ab]
  4185e7:	enter  0xc4dd,0x81
  4185eb:	aas    
  4185ec:	fimul  WORD PTR [ebp+0x5294e722]
  4185f2:	repnz int3 
  4185f4:	ins    DWORD PTR es:[edi],dx
  4185f5:	bound  ecx,QWORD PTR [edi+0x24]
  4185f8:	test   DWORD PTR [esp+edx*4+0x47a208a],esp
  4185ff:	push   edi
  418600:	jmp    0xef20b54
  418605:	mov    cl,0xbc
  418607:	dec    edx
  418608:	sub    al,0x9a
  41860a:	xchg   esp,eax
  41860b:	std    
  41860c:	lock push ebp
  41860e:	sbb    eax,0x4814d7bf
  418613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418614:	ds idiv cl
  418617:	xchg   ecx,eax
  418618:	jne    0x4185ca
  41861a:	xchg   ecx,eax
  41861b:	cli    
  41861c:	dec    esp
  41861d:	out    0x8c,eax
  41861f:	jg     0x418634
  418621:	xchg   edx,eax
  418622:	sbb    DWORD PTR ds:0x6c325a4,0xcd33c310
  41862c:	cwde   
  41862d:	outs   dx,DWORD PTR ds:[esi]
  41862e:	les    esi,FWORD PTR [edi]
  418630:	xchg   ebp,eax
  418631:	popa   
  418632:	(bad)  
  418633:	pop    eax
  418634:	add    al,0x3f
  418636:	jg     0x4185eb
  418638:	push   eax
  418639:	jmp    0x9f40:0xa03a3cc1
  418640:	adc    eax,0x9dfb44a0
  418645:	aas    
  418646:	pop    ss
  418647:	in     al,dx
  418648:	cmc    
  418649:	(bad)  
  41864a:	shr    BYTE PTR [ebx+0x1c],1
  41864d:	push   esi
  41864e:	add    bh,BYTE PTR [edx+0x761e8604]
  418654:	xlat   BYTE PTR ds:[ebx]
  418655:	or     al,0x35
  418657:	stos   DWORD PTR es:[edi],eax
  418658:	ja     0x41860c
  41865a:	dec    edx
  41865b:	sbb    ch,ch
  41865d:	jp     0x4186a5
  41865f:	out    dx,eax
  418660:	xor    dh,BYTE PTR [eax+0x1e]
  418663:	jne    0x41867a
  418665:	and    ch,ch
  418667:	sub    eax,0xda04d0e4
  41866c:	nop
  41866d:	dec    ebp
  41866e:	into   
  41866f:	(bad)  
  418670:	jecxz  0x418602
  418672:	inc    esi
  418673:	jo     0x418615
  418675:	cdq    
  418676:	cwde   
  418677:	push   edi
  418678:	imul   ebx,DWORD PTR [esi],0xffffffb2
  41867b:	sub    ch,cl
  41867d:	push   0xffffff80
  41867f:	in     eax,dx
  418680:	mov    bl,0x67
  418682:	dec    ecx
  418683:	cmp    BYTE PTR [eax],dl
  418685:	loop   0x4186ca
  418687:	cmp    al,0x3d
  418689:	rcl    BYTE PTR [esi+ebx*1-0x25],0xdc
  41868e:	push   0x57
  418690:	loop   0x4186a8
  418692:	push   ebx
  418693:	sbb    BYTE PTR [eax+0x6fcdd2bb],0x82
  41869a:	aas    
  41869b:	sbb    cl,bl
  41869d:	mov    ch,0x54
  41869f:	mov    al,0x2b
  4186a1:	test   BYTE PTR [ebx+0x1d68220d],dl
  4186a7:	mov    eax,0x9f5717f9
  4186ac:	repnz push ss
  4186ae:	mov    BYTE PTR [edi+0x3a03063f],ah
  4186b4:	fwait
  4186b5:	jns    0x418688
  4186b7:	mov    bl,0x7d
  4186b9:	(bad)  
  4186bb:	pop    es
  4186bc:	out    dx,al
  4186bd:	xchg   esi,eax
  4186be:	sbb    eax,0x1377b051
  4186c3:	test   BYTE PTR [edx+0x3294cde9],bh
  4186c9:	sub    dh,cl
  4186cb:	mov    cl,0x1c
  4186cd:	clc    
  4186ce:	jp     0x4186cd
  4186d0:	mov    bh,0xd
  4186d2:	dec    esp
  4186d3:	repnz xchg esi,eax
  4186d5:	fcom   QWORD PTR [edi*1+0x4c963a21]
  4186dc:	cli    
  4186dd:	or     bh,BYTE PTR [eax+0x20291198]
  4186e3:	cs stos BYTE PTR es:[edi],al
  4186e5:	add    ecx,ebx
  4186e7:	bnd jle 0x418676
  4186ea:	mov    BYTE PTR [esi+0x44],ah
  4186ed:	enter  0x427f,0xdb
  4186f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186f2:	mov    eax,ds:0xa1462d99
  4186f7:	fs dec ebp
  4186f9:	(bad)  
  4186fa:	sub    al,0xab
  4186fc:	sbb    al,0x45
  4186fe:	jmp    0xbf2f3cf3
  418703:	adc    al,0x6b
  418705:	push   eax
  418706:	xchg   esp,eax
  418707:	mov    gs,WORD PTR [eax+ebp*4-0x33]
  41870b:	xor    cl,BYTE PTR [edi-0x40]
  41870e:	jmp    0xd1d6:0xa389e0d0
  418715:	sub    BYTE PTR [eax+0x37],bh
  418718:	stos   BYTE PTR es:[edi],al
  418719:	sub    esp,DWORD PTR [esi+0x30c0ff7]
  41871f:	xchg   BYTE PTR [esi+ebx*2-0x75],bh
  418723:	cmp    al,0x6b
  418725:	icebp  
  418726:	outs   dx,BYTE PTR ds:[esi]
  418727:	addr16 dec ecx
  418729:	in     eax,0xb8
  41872b:	mov    WORD PTR [ebp+0x6f],ds
  41872e:	mov    cl,0xfb
  418730:	mov    WORD PTR [ecx+eax*4],cs
  418733:	ins    BYTE PTR es:[edi],dx
  418734:	mov    edi,0xf6facfdb
  418739:	imul   edx,DWORD PTR [esi],0x8339ffa9
  41873f:	sbb    DWORD PTR [esi],0x21b4b009
  418745:	mov    al,ds:0x69109da4
  41874a:	outs   dx,BYTE PTR ds:[esi]
  41874b:	cmp    al,0x60
  41874d:	inc    esi
  41874e:	(bad)  
  41874f:	fs cli 
  418751:	pop    eax
  418752:	jl     0x418723
  418754:	jmp    0x4187b0
  418756:	mov    ah,0x64
  418758:	call   0xb7dd:0xf26c733a
  41875f:	dec    esi
  418760:	xchg   ebp,eax
  418761:	and    BYTE PTR [edx-0x78],dl
  418764:	mov    dl,0x95
  418766:	add    al,0x67
  418768:	sub    ebp,DWORD PTR ds:0xbb6dc17f
  41876e:	ins    BYTE PTR es:[edi],dx
  41876f:	(bad)  
  418770:	jge    0x4187e0
  418772:	mov    dl,0xae
  418774:	stos   DWORD PTR es:[edi],eax
  418775:	test   eax,0x3418f81c
  41877a:	jno    0x418764
  41877c:	imul   ebx,DWORD PTR [ebx-0x15a711a7],0xffffffec
  418783:	jns    0x4187a8
  418785:	xor    al,0x39
  418787:	sub    eax,0x13e86453
  41878c:	push   edx
  41878d:	lahf   
  41878e:	cli    
  41878f:	int    0x9e
  418791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418792:	sbb    BYTE PTR [edx+0x246c6eb9],al
  418798:	bound  ebx,QWORD PTR [ecx+0x6d38ba85]
  41879e:	test   BYTE PTR [esi+edx*4+0x6c],bl
  4187a2:	ins    BYTE PTR es:[edi],dx
  4187a3:	js     0x41875a
  4187a5:	shl    BYTE PTR [eax],0xff
  4187a8:	xchg   edi,eax
  4187a9:	jo     0x4187ce
  4187ab:	ficomp WORD PTR [edx]
  4187ad:	ins    DWORD PTR es:[edi],dx
  4187ae:	pop    edx
  4187af:	add    al,0xc6
  4187b1:	xchg   DWORD PTR [ebp-0x5aa7c6a6],eax
  4187b7:	and    BYTE PTR [eax+eiz*8],cl
  4187ba:	retf   
  4187bb:	call   FWORD PTR [ebp+0x752ccf14]
  4187c1:	cs xchg esi,eax
  4187c3:	test   al,0x61
  4187c5:	inc    ecx
  4187c6:	mov    cs,eax
  4187c8:	loopne 0x41878c
  4187ca:	icebp  
  4187cb:	fsub   QWORD PTR [ebx-0x21fce722]
  4187d1:	xchg   al,dh
  4187d3:	xchg   ebp,eax
  4187d4:	dec    edx
  4187d5:	dec    edi
  4187d6:	arpl   WORD PTR [eax+0xf35c807],dx
  4187dc:	pop    gs
  4187de:	sbb    al,0x38
  4187e0:	inc    esi
  4187e1:	mov    esp,0x573780e7
  4187e6:	ret    0x3fa
  4187e9:	outs   dx,DWORD PTR ds:[esi]
  4187ea:	mov    eax,ds:0x9f182be
  4187ef:	inc    ecx
  4187f0:	xor    esi,DWORD PTR [ecx]
  4187f2:	xor    dh,BYTE PTR [ecx-0x45]
  4187f5:	push   es
  4187f6:	dec    eax
  4187f7:	retf   0xfdbf
  4187fa:	mov    DWORD PTR [ebp+0x3c],esp
  4187fd:	mov    ecx,0xf332a6a8
  418802:	xchg   edi,eax
  418803:	in     eax,dx
  418804:	test   al,0xa8
  418806:	sub    eax,0xb8ce4298
  41880b:	pop    eax
  41880c:	inc    ecx
  41880d:	imul   ecx,DWORD PTR [ecx-0x6a],0x42
  418811:	cld    
  418812:	and    DWORD PTR [ebx*4-0x3a59e277],eax
  418819:	dec    ebx
  41881a:	inc    edx
  41881b:	jne    0x4187eb
  41881d:	xchg   edx,eax
  41881e:	mov    edi,0xf34e3ac1
  418823:	xor    eax,edx
  418825:	adc    ebx,DWORD PTR [esi+eax*2]
  418828:	cdq    
  418829:	shr    DWORD PTR ds:0x7594b889,0xe7
  418830:	mov    ds:0xe8ec14ce,al
  418835:	bound  esi,QWORD PTR [edx-0x59]
  418838:	dec    ecx
  418839:	mov    cl,0x69
  41883b:	test   al,0xca
  41883d:	jge    0x41887c
  41883f:	stos   BYTE PTR es:[edi],al
  418840:	xchg   ebp,eax
  418841:	mov    ebp,DWORD PTR [ecx+ebx*1+0x5]
  418845:	rcl    BYTE PTR [edi],1
  418847:	(bad)  
  418848:	imul   ebp,DWORD PTR [ebx+0x48119ea8],0x10c15900
  418852:	call   0xed84:0x78f1cd40
  418859:	or     eax,0x29189b9b
  41885e:	push   esi
  41885f:	(bad)  
  418861:	inc    esp
  418862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418863:	adc    edx,esi
  418865:	jecxz  0x41880d
  418867:	dec    ecx
  418868:	pop    edi
  418869:	jne    0x4188db
  41886b:	push   esp
  41886c:	fsub   DWORD PTR [ebp-0x7b]
  41886f:	retf   0x6cac
  418872:	ins    BYTE PTR es:[edi],dx
  418873:	xor    BYTE PTR [edx-0x2],bl
  418876:	popa   
  418877:	aad    0x66
  418879:	sub    bh,BYTE PTR [ebx]
  41887b:	or     esi,eax
  41887d:	sub    al,0x16
  41887f:	in     al,dx
  418880:	push   ss
  418881:	pop    esp
  418882:	xor    ebp,edi
  418884:	in     al,0x65
  418886:	mov    bl,0xd4
  418888:	fsubr  DWORD PTR [edx]
  41888a:	adc    eax,0x735dfcc7
  41888f:	cmp    BYTE PTR [esi+0x10],al
  418892:	in     al,0xef
  418894:	sub    al,0x76
  418896:	stc    
  418897:	cmp    edx,DWORD PTR [eax-0x65bd332b]
  41889d:	popf   
  41889e:	sbb    al,0xab
  4188a0:	pop    ds
  4188a1:	xchg   edi,eax
  4188a2:	stos   BYTE PTR es:[edi],al
  4188a3:	imul   BYTE PTR [ecx+0x3]
  4188a6:	pop    edx
  4188a7:	iret   
  4188a8:	jp     0x4188ea
  4188aa:	test   al,0x18
  4188ac:	or     esi,ecx
  4188ae:	enter  0x8107,0x8c
  4188b2:	and    al,BYTE PTR [esi-0x41013668]
  4188b8:	jp     0x4188a2
  4188ba:	lods   al,BYTE PTR ds:[esi]
  4188bb:	mov    cl,0x1d
  4188bd:	outs   dx,DWORD PTR ds:[esi]
  4188be:	adc    BYTE PTR [esi+0x4e56ffb2],dh
  4188c4:	jbe    0x4188d4
  4188c6:	push   ebp
  4188c7:	mov    dl,0xe7
  4188c9:	pop    ds
  4188ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188cb:	retf   0x2
  4188ce:	mov    esp,0x8bd4cc64
  4188d3:	popa   
  4188d4:	dec    edi
  4188d5:	retf   
  4188d6:	(bad)  
  4188d7:	stc    
  4188d8:	ret    
  4188d9:	xchg   ebx,eax
  4188da:	out    0x9e,al
  4188dc:	fst    QWORD PTR [edi+edx*4+0x2f5f4b11]
  4188e3:	mov    ecx,0x9690597e
  4188e8:	cmp    ecx,DWORD PTR [edx+ebx*2-0x7bc0a00c]
  4188ef:	jmp    FWORD PTR [edi+eiz*8]
  4188f2:	push   esp
  4188f3:	push   eax
  4188f4:	sbb    al,0x9
  4188f6:	mov    ch,0x94
  4188f8:	lds    esi,FWORD PTR [edi-0x80]
  4188fb:	in     al,dx
  4188fc:	dec    esi
  4188fd:	push   es
  4188fe:	mov    al,ds:0xc6699d17
  418903:	add    al,ch
  418905:	adc    BYTE PTR [esi-0x23b76e3b],bl
  41890b:	mov    esp,0xa9c9c264
  418910:	pop    edx
  418911:	mov    ds:0x43769c87,eax
  418916:	add    eax,0x56a711e9
  41891b:	add    ebp,DWORD PTR [esi+0x15]
  41891e:	pop    ds
  41891f:	je     0x418969
  418921:	or     BYTE PTR ds:0x74833aaa,dl
  418927:	cmp    BYTE PTR [edx],bh
  418929:	jo     0x41899d
  41892b:	xchg   ebx,eax
  41892c:	pop    es
  41892d:	push   ecx
  41892e:	pop    esi
  41892f:	dec    DWORD PTR [esi+0x401d3a35]
  418935:	add    ebp,ecx
  418937:	fisub  DWORD PTR ds:0x554d01eb
  41893d:	in     eax,dx
  41893e:	inc    ecx
  41893f:	inc    esp
  418940:	fwait
  418941:	aas    
  418942:	fisub  WORD PTR [ecx]
  418944:	sti    
  418945:	loope  0x4189a8
  418947:	ret    0xcf91
  41894a:	out    dx,eax
  41894b:	div    DWORD PTR [ecx-0x65]
  41894e:	je     0x41897d
  418950:	addr16 pop esi
  418952:	mov    DWORD PTR [eax],esi
  418954:	cmp    al,0x87
  418956:	clc    
  418957:	aas    
  418958:	pop    ecx
  418959:	lahf   
  41895a:	ds nop
  41895c:	(bad)  
  41895d:	xchg   esi,eax
  41895e:	jmp    0x41892f
  418960:	push   ebx
  418961:	push   ecx
  418962:	cmp    eax,0x67e1656a
  418967:	iret   
  418968:	shr    ch,cl
  41896a:	imul   esp,DWORD PTR [ebx],0xffffff85
  41896d:	mov    ah,0x9b
  41896f:	mov    ds:0xf6f4df2e,al
  418974:	cdq    
  418975:	pop    ebp
  418976:	add    DWORD PTR [ecx-0x80],ebx
  418979:	in     eax,dx
  41897a:	push   cs
  41897b:	fnsave [eax]
  41897d:	ret    
  41897e:	int    0x25
  418980:	jae    0x418902
  418982:	pop    edx
  418983:	stos   DWORD PTR es:[edi],eax
  418984:	sbb    eax,0xcfc4d3fe
  418989:	and    DWORD PTR [ebp+0x70],0x9f048291
  418990:	sbb    dh,ch
  418992:	loop   0x418a11
  418994:	dec    ecx
  418995:	ds jmp 0xa36c:0x9c9735c6
  41899d:	mov    cl,0x6a
  41899f:	lods   al,BYTE PTR ds:[esi]
  4189a0:	shl    DWORD PTR [ebx],0xc
  4189a3:	mov    al,0xb2
  4189a5:	mov    ds:0x2197c5c2,eax
  4189aa:	pop    ebx
  4189ab:	jno    0x418968
  4189ad:	fs scas eax,DWORD PTR es:[edi]
  4189af:	mov    ch,0xba
  4189b1:	ins    DWORD PTR es:[edi],dx
  4189b2:	jnp    0x418984
  4189b4:	(bad)  
  4189b5:	gs mov ch,0x97
  4189b8:	fxch   st(5)
  4189ba:	js     0x41895a
  4189bc:	mov    eax,0xf46fd2cb
  4189c1:	lods   eax,DWORD PTR ds:[esi]
  4189c2:	cli    
  4189c3:	dec    edi
  4189c4:	sub    DWORD PTR [ebx-0x7b1225f9],esp
  4189ca:	pop    eax
  4189cb:	sbb    ebp,DWORD PTR ds:0xd2720c5f
  4189d1:	cdq    
  4189d2:	pop    es
  4189d3:	ja     0x418a3f
  4189d5:	mov    al,0x8f
  4189d7:	fadd   QWORD PTR [ecx-0x37]
  4189da:	mov    WORD PTR [esi+0x66],es
  4189dd:	gs jle 0x418981
  4189e0:	cld    
  4189e1:	ja     0x418969
  4189e3:	add    al,0xbe
  4189e5:	scas   al,BYTE PTR es:[edi]
  4189e6:	add    BYTE PTR [edi+0xd],dh
  4189e9:	and    al,0xe3
  4189eb:	pop    ecx
  4189ec:	bound  ebx,QWORD PTR [ebx]
  4189ee:	mov    esi,0xbd24536a
  4189f3:	popf   
  4189f4:	adc    esi,DWORD PTR [ebx]
  4189f6:	daa    
  4189f7:	sbb    bl,bl
  4189f9:	ins    BYTE PTR es:[edi],dx
  4189fa:	sub    edx,DWORD PTR [ecx]
  4189fc:	mov    ebx,0xb41b248d
  418a01:	cmp    al,0x8
  418a03:	sar    ebx,cl
  418a05:	add    al,0xea
  418a07:	adc    DWORD PTR [ebp+0x37f07e83],0xf7587503
  418a11:	inc    ebx
  418a12:	in     eax,dx
  418a13:	pop    eax
  418a14:	jge    0x418a39
  418a16:	or     al,0x49
  418a18:	jp     0x418a3b
  418a1a:	ins    BYTE PTR es:[edi],dx
  418a1b:	or     ebx,DWORD PTR [eax+0x21]
  418a1e:	xchg   esi,eax
  418a1f:	mov    al,0xb7
  418a21:	mov    bh,BYTE PTR [edx]
  418a23:	shl    BYTE PTR ds:0x3b189c4c,1
  418a29:	lea    edi,[ebp-0xa22879d]
  418a2f:	cmp    eax,0x8a39ef59
  418a34:	shl    DWORD PTR [esi+0x2f0466ce],1
  418a3a:	mov    fs,ebp
  418a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a3d:	jne    0x418a7e
  418a3f:	ss in  al,dx
  418a41:	jl     0x418a8e
  418a43:	popf   
  418a44:	test   al,0x22
  418a46:	je     0x418a11
  418a48:	call   0x1b3329e
  418a4d:	xor    eax,0xf6083c0b
  418a52:	imul   edx,DWORD PTR [ecx-0x49],0x75
  418a56:	and    DWORD PTR [esi+0x33],eax
  418a59:	pop    ebp
  418a5a:	mov    ah,0x0
  418a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5d:	test   edx,edi
  418a5f:	stos   BYTE PTR es:[edi],al
  418a60:	lahf   
  418a61:	mov    eax,0xa8326496
  418a66:	xchg   esp,eax
  418a67:	inc    edx
  418a68:	jo     0x418a8b
  418a6a:	cli    
  418a6b:	or     BYTE PTR [ecx-0x2e],cl
  418a6e:	inc    ebp
  418a6f:	xchg   ecx,eax
  418a70:	xchg   ebp,eax
  418a71:	push   esi
  418a72:	(bad)
  418a75:	mov    ds:0xb5da066f,eax
  418a7a:	std    
  418a7b:	or     eax,0xe4801a69
  418a80:	pop    esi
  418a81:	imul   ecx,DWORD PTR [ebx+0x6b27d754],0x95775a22
  418a8b:	fbstp  TBYTE PTR [edx]
  418a8d:	test   BYTE PTR [eax],ch
  418a8f:	fild   WORD PTR [eax-0x70]
  418a92:	pop    ebx
  418a93:	xchg   ebp,eax
  418a94:	inc    edx
  418a95:	pop    edx
  418a96:	vpunpckhqdq xmm0,xmm0,XMMWORD PTR es:[edx-0x62245796]
  418a9f:	adc    esi,DWORD PTR [esi]
  418aa1:	rcr    BYTE PTR [edx-0x5a],0x84
  418aa5:	das    
  418aa6:	and    DWORD PTR [edx+0x1f797c20],esi
  418aac:	int3   
  418aad:	in     eax,0x44
  418aaf:	retf   
  418ab0:	push   0xffffffe3
  418ab2:	sub    ebx,edx
  418ab4:	jae    0x418a55
  418ab6:	or     eax,0xfe20b636
  418abb:	clc    
  418abc:	mov    ebp,0x6b8bbba9
  418ac1:	or     edx,DWORD PTR [ebx-0x3e]
  418ac4:	bound  ecx,QWORD PTR [ecx-0x2f]
  418ac7:	and    eax,eax
  418ac9:	arpl   bp,di
  418acb:	xchg   esp,eax
  418acc:	lods   eax,DWORD PTR ds:[esi]
  418acd:	or     BYTE PTR [esi-0x2a3568f9],0x4f
  418ad4:	enter  0x3d0a,0xa6
  418ad8:	mov    ebx,0xc107a20b
  418add:	xor    esi,edx
  418adf:	mov    ebx,ebp
  418ae1:	sbb    edi,DWORD PTR [edi+0x7]
  418ae4:	pop    es
  418ae5:	mov    edx,0x7682d4a3
  418aea:	scas   eax,DWORD PTR es:[edi]
  418aeb:	jp     0x418b38
  418aed:	jecxz  0x418b14
  418aef:	inc    ebp
  418af0:	jb     0x418b11
  418af2:	push   0xf7d8f37b
  418af7:	cmc    
  418af8:	or     eax,0x6d4501ab
  418afd:	mov    ah,0xd3
  418aff:	jmp    DWORD PTR [edi-0x54]
  418b02:	cld    
  418b03:	xchg   eax,eax
  418b05:	mov    al,0x6f
  418b07:	sbb    DWORD PTR [ebx-0x3b],ebp
  418b0a:	inc    edi
  418b0b:	pop    edx
  418b0c:	out    0x95,al
  418b0e:	pop    ds
  418b0f:	sar    DWORD PTR [esi],1
  418b11:	add    al,0x9a
  418b13:	and    al,0x81
  418b15:	retf   0xf845
  418b18:	xchg   DWORD PTR [esi-0x1518a292],edi
  418b1e:	shl    BYTE PTR fs:[eax-0x4f61f6e7],1
  418b25:	mov    BYTE PTR [edi],dl
  418b27:	mul    DWORD PTR [edi-0x2e8a7f9a]
  418b2d:	nop
  418b2e:	retf   
  418b2f:	popf   
  418b30:	ret    
  418b31:	adc    eax,DWORD PTR [eax-0x168494fa]
  418b37:	push   esi
  418b38:	loopne 0x418abc
  418b3a:	dec    eax
  418b3b:	push   0x40e744e4
  418b40:	js     0x418ad4
  418b42:	mov    eax,0xd3b0fa39
  418b47:	inc    ebp
  418b48:	xchg   DWORD PTR [eax-0x3246301],ebx
  418b4e:	xor    BYTE PTR [edx-0x7cea91ec],ah
  418b54:	sbb    eax,0x9f210498
  418b59:	lock fisttp DWORD PTR [edx-0x7f]
  418b5d:	(bad)  
  418b5e:	(bad)  
  418b60:	sbb    BYTE PTR [ebp-0x29],ch
  418b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b64:	ds cdq 
  418b66:	xor    dl,BYTE PTR [ebp-0x19]
  418b69:	cmp    eax,0x479deea7
  418b6e:	inc    eax
  418b6f:	(bad)  
  418b70:	pop    edi
  418b71:	pushf  
  418b72:	cld    
  418b73:	popf   
  418b74:	dec    ebx
  418b75:	(bad)  
  418b76:	jmp    0x1c83:0x6474cb8c
  418b7d:	out    0xa8,al
  418b7f:	cs or  al,0xd5
  418b82:	xchg   ebx,eax
  418b83:	cdq    
  418b84:	sbb    eax,0x24ef889f
  418b89:	leave  
  418b8a:	add    BYTE PTR fs:[ebx],cl
  418b8d:	outs   dx,DWORD PTR ds:[esi]
  418b8e:	jb     0x418ba7
  418b90:	dec    esp
  418b91:	pop    edi
  418b92:	mov    edi,0x265e5e8d
  418b97:	or     eax,0x38ca7362
  418b9c:	cmp    eax,0x9e66e615
  418ba1:	jo     0x418b75
  418ba3:	add    al,0xc3
  418ba5:	into   
  418ba6:	divps  xmm5,xmm4
  418ba9:	push   eax
  418baa:	ror    DWORD PTR [edx-0x1d],0xdf
  418bae:	stos   DWORD PTR es:[edi],eax
  418baf:	jne    0x418b4a
  418bb1:	aaa    
  418bb2:	aaa    
  418bb3:	fsub   DWORD PTR [edi+0x73]
  418bb6:	clc    
  418bb7:	loop   0x418c0b
  418bb9:	push   ds
  418bba:	add    DWORD PTR [ecx],edi
  418bbc:	xchg   ebx,eax
  418bbd:	jg     0x418bc9
  418bbf:	and    eax,0x1c572831
  418bc4:	(bad)  
  418bc5:	out    dx,eax
  418bc6:	sbb    DWORD PTR [ecx],ebx
  418bc8:	add    eax,0xa3fc4ba9
  418bcd:	imul   esi,DWORD PTR [ebx+0x669c6adb],0x27
  418bd4:	xchg   esp,eax
  418bd5:	pushw  0x2f
  418bd8:	mov    ebx,0x25746ed
  418bdd:	mov    DWORD PTR [edx+0x4671a5dc],ebx
  418be3:	xor    eax,0xd09d34ea
  418be8:	mov    ah,0xe0
  418bea:	repnz sbb DWORD PTR [edi+ebp*8+0x6e310629],eax
  418bf2:	enter  0x7995,0xcd
  418bf6:	shr    DWORD PTR [eax+0x6f6beac7],1
  418bfc:	push   ecx
  418bfd:	cdq    
  418bfe:	jmp    0x418b87
  418c00:	cmp    edi,DWORD PTR [esp+ecx*2+0x384b199d]
  418c07:	cmp    BYTE PTR [eax-0x8],bh
  418c0a:	add    DWORD PTR [eax],ebx
  418c0c:	mov    dh,0xd8
  418c0e:	stos   DWORD PTR es:[edi],eax
  418c0f:	pop    eax
  418c10:	jecxz  0x418beb
  418c12:	imul   ebx,DWORD PTR [edi+0x6467ef21],0x45
  418c19:	leave  
  418c1a:	pop    ebp
  418c1b:	xchg   ebx,eax
  418c1c:	add    ch,ch
  418c1e:	call   0x3c497301
  418c23:	loopne 0x418be7
  418c25:	pop    es
  418c26:	xor    DWORD PTR [ebx-0x74bc1bef],edi
  418c2c:	into   
  418c2d:	pop    ss
  418c2e:	or     edx,DWORD PTR [esi]
  418c30:	sub    eax,0xa2568dad
  418c35:	push   ecx
  418c36:	daa    
  418c37:	call   0x758c:0xf65b8897
  418c3e:	push   0xffffff84
  418c40:	pop    esi
  418c41:	jle    0x418bd2
  418c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c44:	cmp    al,0xa9
  418c46:	call   0xd253:0x34f5725a
  418c4d:	cld    
  418c4e:	xor    eax,DWORD PTR [esi+0x500793d6]
  418c54:	add    eax,0x9584ea31
  418c59:	(bad)  
  418c5a:	aas    
  418c5b:	sbb    BYTE PTR [edi+0x3af1c7a6],bl
  418c61:	xor    DWORD PTR [ebx+0x45f4bb57],eax
  418c67:	and    DWORD PTR [edx*4+0x1ac3bace],ebp
  418c6e:	jbe    0x418cb8
  418c70:	int3   
  418c71:	retf   0x5fc7
  418c74:	xchg   esp,eax
  418c75:	into   
  418c76:	and    cl,BYTE PTR ds:0x26cdc9fb
  418c7c:	dec    ebx
  418c7d:	lods   al,BYTE PTR ds:[esi]
  418c7e:	jno    0x418ccc
  418c80:	push   esp
  418c81:	fwait
  418c82:	mov    edx,0x5d635c10
  418c87:	mov    bh,0xa2
  418c89:	int    0xe5
  418c8b:	cdq    
  418c8c:	pop    eax
  418c8d:	aaa    
  418c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c8f:	mov    bl,0x6e
  418c91:	rol    esi,1
  418c93:	repnz popa 
  418c95:	add    ebx,ebp
  418c97:	pop    ecx
  418c98:	inc    edx
  418c99:	ins    DWORD PTR es:[edi],dx
  418c9a:	mov    dl,0x3
  418c9c:	paddusw mm3,QWORD PTR [eax]
  418c9f:	stc    
  418ca0:	(bad)  
  418ca1:	jge    0x418cc2
  418ca3:	push   cs
  418ca4:	adc    bl,0x3f
  418ca7:	(bad)  
  418ca8:	mov    ebp,0xfc968ffe
  418cad:	mov    ebx,0x6940335d
  418cb2:	ret    
  418cb3:	and    bl,BYTE PTR [ebx+0x7e149d74]
  418cb9:	mov    eax,fs
  418cbb:	aas    
  418cbc:	add    DWORD PTR [ecx-0x4a],esi
  418cbf:	adc    eax,0x945953bf
  418cc4:	push   ebp
  418cc5:	xlat   BYTE PTR ds:[ebx]
  418cc6:	mov    edx,0xe359e6e5
  418ccb:	push   edx
  418ccc:	mov    ah,0x11
  418cce:	icebp  
  418ccf:	sbb    eax,0xad3d5a69
  418cd4:	jecxz  0x418d18
  418cd6:	pop    ebp
  418cd8:	adc    esi,ebx
  418cda:	ins    DWORD PTR es:[edi],dx
  418cdb:	push   es
  418cdc:	add    edi,DWORD PTR [esi+0x4e]
  418cdf:	call   0x75d8:0x5a9b6019
  418ce6:	retf   0x806f
  418ce9:	fisubr WORD PTR [ebx-0x19ebfe3b]
  418cef:	in     eax,dx
  418cf0:	push   ecx
  418cf1:	pop    es
  418cf2:	test   eax,0x25cf6f
  418cf7:	xchg   DWORD PTR [eax-0x24],ecx
  418cfa:	je     0x418d5a
  418cfc:	iret   
  418cfd:	dec    DWORD PTR [ecx+0x26725ca8]
  418d03:	popf   
  418d04:	xchg   edi,eax
  418d05:	mov    WORD PTR [ebx-0x4e],?
  418d08:	sete   BYTE PTR [eax]
  418d0b:	jae    0x418caf
  418d0d:	cwde   
  418d0e:	hlt    
  418d0f:	stc    
  418d10:	mov    dh,0x4a
  418d12:	aas    
  418d13:	hlt    
  418d14:	push   es
  418d15:	(bad)  
  418d16:	retf   
  418d17:	push   esi
  418d18:	dec    esp
  418d19:	test   DWORD PTR [ecx+0x6a8384f4],edi
  418d1f:	loop   0x418d6a
  418d21:	xor    BYTE PTR [ecx-0x43d3e812],bh
  418d27:	push   ebx
  418d28:	fs sbb eax,0x9ee7b8c5
  418d2e:	xchg   ebp,eax
  418d2f:	mov    bh,0x68
  418d31:	cld    
  418d32:	stos   BYTE PTR es:[edi],al
  418d33:	cmc    
  418d34:	and    edx,ebx
  418d36:	mov    esi,0xf5a2a9fa
  418d3b:	or     BYTE PTR [ecx+esi*2-0x3c],bh
  418d3f:	out    0x9a,eax
  418d41:	sbb    ch,al
  418d43:	ffree  st(3)
  418d45:	adc    DWORD PTR [eax],ebx
  418d47:	lea    eax,[eax+0xb252a63]
  418d4d:	xchg   esi,eax
  418d4e:	(bad)  
  418d50:	cmp    eax,DWORD PTR [edi-0x3a5563b]
  418d56:	dec    esi
  418d57:	jb     0x418d93
  418d59:	adc    eax,DWORD PTR [eax+0x71d4b74]
  418d5f:	fsubr  DWORD PTR [esi+0x37]
  418d62:	in     al,dx
  418d63:	ror    BYTE PTR [edi],1
  418d65:	stc    
  418d66:	jno    0x418d92
  418d68:	pop    es
  418d69:	inc    esp
  418d6a:	add    DWORD PTR [ebp+0x10],edi
  418d6d:	loope  0x418d3b
  418d6f:	fucomi st,st(0)
  418d71:	fadd   QWORD PTR [edi+0x56354d8e]
  418d77:	push   edi
  418d78:	stos   BYTE PTR es:[edi],al
  418d79:	loope  0x418daf
  418d7b:	loope  0x418d62
  418d7d:	cmp    BYTE PTR [edx-0x53efb261],ch
  418d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d84:	dec    esp
  418d85:	pop    edx
  418d86:	push   ebp
  418d87:	inc    edi
  418d88:	add    DWORD PTR [edx],esi
  418d8a:	pop    es
  418d8b:	fsub   st,st(7)
  418d8d:	test   edi,esi
  418d8f:	test   DWORD PTR [eax],esp
  418d91:	js     0x418d70
  418d93:	mov    BYTE PTR [ecx-0x1f],dl
  418d96:	ja     0x418d34
  418d98:	xchg   DWORD PTR [eax-0x40ea8bf6],esp
  418d9e:	mov    dl,0x2c
  418da0:	in     al,dx
  418da1:	sub    ebp,ebp
  418da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da4:	jne    0x418dde
  418da6:	add    eax,0x965c1215
  418dab:	shr    BYTE PTR [edi-0x17cbd65],0x66
  418db2:	cmp    BYTE PTR [ecx-0x40b2dc8c],bh
  418db8:	cmp    eax,0x51982604
  418dbd:	cmp    dl,dl
  418dbf:	push   0xe5498a09
  418dc4:	aam    0xfc
  418dc6:	dec    ebp
  418dc7:	and    BYTE PTR [esp+edx*1+0x7a],al
  418dcb:	shr    eax,1
  418dcd:	imul   edi,DWORD PTR [edi+0x4e65a155],0xffffffd3
  418dd4:	add    DWORD PTR [ecx+0x1e09f7ce],0x2e
  418ddb:	add    al,0x8d
  418ddd:	jmp    0xcbdb841d
  418de2:	sub    eax,0x8f6dbdfb
  418de7:	popf   
  418de8:	pusha  
  418de9:	fistp  WORD PTR [edi+0x38]
  418dec:	js     0x418e57
  418dee:	(bad)  
  418def:	in     al,0x53
  418df1:	add    ah,BYTE PTR ds:0x6d418b2a
  418df7:	les    ebx,FWORD PTR [esi-0x25b14fcd]
  418dfd:	xchg   BYTE PTR [edi],ch
  418dff:	inc    edi
  418e00:	sub    esp,DWORD PTR [ebx]
  418e02:	add    eax,0xb5966290
  418e07:	in     ax,0x4
  418e0a:	jmp    0x5228:0x65845071
  418e11:	clc    
  418e12:	push   esp
  418e13:	bnd jns 0x418e31
  418e16:	pop    es
  418e17:	pop    esi
  418e18:	cdq    
  418e19:	scas   eax,DWORD PTR es:[edi]
  418e1a:	mov    dl,0xcf
  418e1c:	aad    0x4e
  418e1e:	mov    ebp,0x9e393a66
  418e23:	or     al,0xf4
  418e25:	jo     0x418e39
  418e27:	pop    ss
  418e28:	jge    0x418dcf
  418e2a:	inc    ah
  418e2c:	addr16 call 0x8059:0x805f0d59
  418e34:	sub    BYTE PTR [eax],0x32
  418e37:	push   ecx
  418e38:	pop    es
  418e39:	call   0x4b45:0xd9c52add
  418e40:	mov    bh,bl
  418e42:	int3   
  418e43:	inc    esp
  418e44:	rcr    DWORD PTR [eax],1
  418e46:	mov    ss,ecx
  418e48:	inc    edx
  418e49:	adc    DWORD PTR [ebx+0x29],0xc787e5f3
  418e50:	adc    eax,0xbb7f5a6c
  418e55:	pop    ds
  418e56:	out    0x12,eax
  418e58:	aas    
  418e59:	call   0xad63:0x7470f408
  418e60:	lea    ebp,[ebx]
  418e62:	sti    
  418e63:	dec    esp
  418e64:	lods   eax,DWORD PTR ds:[esi]
  418e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e66:	jne    0x418e98
  418e68:	lds    ecx,FWORD PTR [ebx-0x6ec51971]
  418e6e:	inc    BYTE PTR ds:0x9fb0b88
  418e74:	mov    edi,0xae07fb6f
  418e79:	jp     0x418ecb
  418e7b:	enter  0xc743,0x0
  418e7f:	inc    esp
  418e80:	or     ah,BYTE PTR [ecx+ebp*1+0x1a]
  418e84:	pop    ds
  418e85:	test   eax,0x1aa626d0
  418e8a:	btc    DWORD PTR [eax-0x80],esi
  418e8e:	push   esp
  418e8f:	or     eax,0x6cd4b8f2
  418e94:	jae    0x418f09
  418e96:	inc    ecx
  418e97:	xchg   edx,ecx
  418e99:	cmp    al,0x3f
  418e9b:	mov    ebp,0x1d995c3d
  418ea0:	pop    edi
  418ea1:	xchg   al,cl
  418ea3:	ins    DWORD PTR es:[edi],dx
  418ea4:	aad    0xf8
  418ea6:	xchg   ecx,eax
  418ea7:	call   0x71cea885
  418eac:	scas   al,BYTE PTR es:[edi]
  418ead:	stc    
  418eae:	xor    ch,BYTE PTR [esp+eax*8+0x7f]
  418eb2:	add    DWORD PTR [edi],0xffffffe4
  418eb5:	jmp    0x8ef8:0x2323ac1
  418ebc:	fs jno 0x418f05
  418ebf:	mov    ebx,0xffb7b325
  418ec4:	sbb    DWORD PTR [ebx+0x2b],ecx
  418ec7:	pop    es
  418ec8:	and    eax,0xc346bf3
  418ecd:	test   al,bh
  418ecf:	cmp    DWORD PTR [esi-0x2f],edx
  418ed2:	jp     0x418e77
  418ed4:	mov    ecx,0x1b6b561
  418ed9:	inc    ebx
  418eda:	icebp  
  418edb:	pop    ds
  418edc:	ss cmp dh,al
  418edf:	add    al,0xb7
  418ee1:	push   ds
  418ee2:	rol    al,0xfc
  418ee5:	je     0x418eed
  418ee7:	pop    ecx
  418ee8:	mov    BYTE PTR [ebx],cl
  418eea:	cld    
  418eeb:	loop   0x418f3e
  418eed:	ret    
  418eee:	inc    esp
  418eef:	pop    ss
  418ef0:	scas   al,BYTE PTR es:[edi]
  418ef1:	cmp    al,0x24
  418ef3:	lods   eax,DWORD PTR ds:[esi]
  418ef4:	les    ebp,FWORD PTR [edi+0x9b5d59c]
  418efa:	sub    dl,BYTE PTR [esi+0x74a915fd]
  418f00:	cmp    ch,bh
  418f02:	sbb    eax,0xb5e0102e
  418f07:	dec    edi
  418f08:	pop    esp
  418f09:	(bad)  
  418f0a:	xchg   esp,eax
  418f0b:	lods   eax,DWORD PTR ds:[esi]
  418f0c:	push   cs
  418f0d:	mul    BYTE PTR [edx]
  418f0f:	fdiv   DWORD PTR [eax+eax*2+0x61c175c]
  418f16:	sbb    al,0x8
  418f18:	fs jno 0x418f4e
  418f1b:	or     bl,BYTE PTR [ecx+0x52]
  418f1e:	push   bp
  418f20:	jbe    0x418f56
  418f22:	out    0xf9,eax
  418f24:	push   0x76
  418f26:	adc    al,0xf5
  418f28:	push   eax
  418f29:	callw  0xa2df
  418f2d:	fcmovnu st,st(4)
  418f2f:	adc    BYTE PTR [esi],ah
  418f31:	lea    ecx,[edi-0x68]
  418f34:	sub    eax,0x1c8ab001
  418f39:	ret    0x29eb
  418f3c:	xor    DWORD PTR [edi],ecx
  418f3e:	adc    ebx,DWORD PTR [edx-0x2947c599]
  418f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f45:	push   ecx
  418f46:	icebp  
  418f47:	xchg   edi,eax
  418f48:	and    al,0xdc
  418f4a:	xor    al,0x51
  418f4c:	push   edi
  418f4d:	iret   
  418f4e:	shl    DWORD PTR [edx+0x68f75551],1
  418f54:	push   ds
  418f55:	jg     0x418f2f
  418f57:	retf   0x3e3
  418f5a:	sub    BYTE PTR [eax+0x6],ah
  418f5d:	clc    
  418f5e:	ret    
  418f5f:	and    dl,BYTE PTR [esi]
  418f61:	xchg   esp,eax
  418f62:	push   0x427a270e
  418f67:	dec    edi
  418f68:	jbe    0x418f5f
  418f6a:	or     DWORD PTR [ebx],ebp
  418f6c:	fcmovnbe st,st(5)
  418f6e:	add    al,0xad
  418f70:	mov    cl,0x21
  418f72:	outs   dx,DWORD PTR ds:[esi]
  418f73:	mov    al,0xcb
  418f75:	mov    esi,0x8ca43e55
  418f7a:	aam    0x73
  418f7c:	mov    dh,BYTE PTR [esi+0x3c]
  418f7f:	jno    0x418fd6
  418f81:	adc    esi,ebx
  418f83:	loop   0x418f5f
  418f85:	or     dl,ch
  418f87:	mov    eax,0x7275f500
  418f8c:	aaa    
  418f8d:	(bad)  
  418f8e:	clc    
  418f8f:	sbb    ecx,esi
  418f91:	sub    esp,eax
  418f93:	popa   
  418f94:	jbe    0x418f33
  418f96:	je     0x41900c
  418f98:	imul   ebx,DWORD PTR [esi-0x11],0xfffffff3
  418f9c:	mov    bh,0x23
  418f9e:	pop    edx
  418f9f:	mov    BYTE PTR ds:0x4328440,bl
  418fa5:	clc    
  418fa6:	jg     0x418f9c
  418fa8:	test   esi,ecx
  418faa:	xor    eax,0x342585c9
  418fb0:	es or  bl,dl
  418fb3:	cmp    ch,BYTE PTR [ecx-0x4c]
  418fb6:	add    DWORD PTR [ecx+0x64],eax
  418fb9:	mov    bh,0x0
  418fbb:	dec    ebp
  418fbc:	xchg   ebx,eax
  418fbd:	hlt    
  418fbe:	adc    eax,0xc3d605ee
  418fc3:	dec    ecx
  418fc4:	lahf   
  418fc5:	pop    ecx
  418fc6:	test   dh,dh
  418fc8:	dec    esp
  418fc9:	in     al,0xc9
  418fcb:	xchg   edx,eax
  418fcc:	jae    0x41904c
  418fce:	push   ds
  418fcf:	rcr    DWORD PTR [ebx+0x51],0x9b
  418fd3:	cld    
  418fd4:	xor    al,0x9c
  418fd6:	sub    BYTE PTR [ebp-0x69275648],dh
  418fdc:	inc    esp
  418fdd:	addr16 cli 
  418fdf:	dec    edi
  418fe0:	or     edx,ecx
  418fe2:	xor    ebx,DWORD PTR [esp+eax*1-0x7c]
  418fe6:	sub    esi,DWORD PTR [eax]
  418fe8:	(bad)  
  418fe9:	icebp  
  418fea:	push   esi
  418feb:	inc    ebx
  418fec:	push   edi
  418fed:	jge    0x418fca
  418fef:	lods   al,BYTE PTR ds:[esi]
  418ff0:	lds    ebp,FWORD PTR [ebp+0x361bd0d]
  418ff6:	mov    edi,0x7869f876
  418ffb:	adc    ah,dh
  418ffd:	out    0xe8,eax
  418fff:	into   
  419000:	(bad)  [eax+0x3378ed20]
  419006:	popf   
  419007:	jge    0x418fbe
  419009:	cmp    BYTE PTR [eax+0x5f],ah
  41900c:	ret    
  41900d:	mov    cl,0xf1
  41900f:	mov    ah,0xc9
  419011:	sub    BYTE PTR [edi-0x13],0x9
  419015:	lods   eax,DWORD PTR ds:[esi]
  419016:	push   ss
  419017:	in     al,0xe0
  419019:	jmp    0x418fe3
  41901b:	scas   eax,DWORD PTR es:[edi]
  41901c:	rcr    ebp,1
  41901e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41901f:	jp     0x419039
  419021:	rcl    DWORD PTR [edx],1
  419023:	dec    eax
  419024:	push   ds
  419025:	xor    eax,0x383c3f1f
  41902a:	fiadd  WORD PTR [edx+eiz*1]
  41902d:	in     al,dx
  41902e:	cmc    
  41902f:	stc    
  419030:	lea    esi,[ecx+0x31]
  419033:	jge    0x418ff1
  419035:	fdivr  DWORD PTR [ebx-0xa593797]
  41903b:	loopne 0x4190b2
  41903d:	rol    DWORD PTR [edi],1
  41903f:	imul   ebp,DWORD PTR [edx+0x460fd1ab],0xd956e5f9
  419049:	addr16 or ah,ch
  41904c:	gs xlat BYTE PTR ds:[ebx]
  41904f:	js     0x419027
  419051:	or     edx,esi
  419053:	push   eax
  419054:	and    DWORD PTR [esi-0x5b],0x10
  419058:	mov    ds:0x31a02baa,eax
  41905d:	mov    edx,0x42a95fa0
  419062:	stos   BYTE PTR es:[edi],al
  419063:	ficom  WORD PTR [ecx]
  419065:	call   0x1dab21d8
  41906a:	scas   eax,DWORD PTR es:[edi]
  41906b:	mov    al,dl
  41906d:	cld    
  41906e:	pop    ss
  41906f:	pushf  
  419070:	add    al,BYTE PTR [esi]
  419072:	inc    eax
  419073:	rol    DWORD PTR [ecx+0x4c],cl
  419076:	mov    esi,0xd0cbc561
  41907b:	cmp    eax,0x25d937d3
  419080:	add    eax,0x5657d13e
  419085:	xlat   BYTE PTR ds:[ebx]
  419086:	inc    ecx
  419087:	in     al,dx
  419088:	pop    edi
  419089:	or     esp,DWORD PTR [ecx+0x1f]
  41908c:	and    esi,esi
  41908e:	in     eax,0xe2
  419090:	jg     0x4190f1
  419092:	and    ah,ah
  419094:	pusha  
  419095:	sahf   
  419096:	push   ebx
  419097:	pop    eax
  419098:	or     al,0x46
  41909a:	(bad)  
  41909b:	js     0x4190a9
  41909d:	dec    eax
  41909e:	cmp    al,0x2f
  4190a0:	mov    dl,0x6a
  4190a2:	aam    0xd3
  4190a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a5:	mov    dh,0x78
  4190a7:	aaa    
  4190a8:	jne    0x419103
  4190aa:	dec    edx
  4190ab:	leave  
  4190ac:	xchg   edi,eax
  4190ad:	push   edi
  4190ae:	mov    bh,0x35
  4190b0:	mov    ah,0x85
  4190b2:	(bad)
  4190b6:	fist   DWORD PTR [edx+0x55]
  4190b9:	fcom   QWORD PTR [edi+0x68f28f8d]
  4190bf:	outs   dx,BYTE PTR ds:[esi]
  4190c0:	test   al,0x35
  4190c2:	adc    eax,0x168dffce
  4190c7:	xor    DWORD PTR [edi-0x5a],edi
  4190ca:	fldcw  WORD PTR [esi-0x2dab1b41]
  4190d0:	adc    BYTE PTR [eax+0x77],0x27
  4190d4:	sub    edi,DWORD PTR [eax+0x1830008e]
  4190da:	mov    cl,0xe8
  4190dc:	fstp   TBYTE PTR [ecx]
  4190de:	mov    al,ds:0x890ee970
  4190e3:	fdivr  DWORD PTR [esi-0x7e]
  4190e6:	fst    QWORD PTR ds:0xf0df1333
  4190ec:	inc    eax
  4190ed:	mov    BYTE PTR [edi+eiz*2-0x2d],bl
  4190f1:	or     ch,al
  4190f3:	mov    ebx,0xbe38280b
  4190f8:	(bad)  
  4190f9:	xchg   ecx,eax
  4190fa:	inc    ebp
  4190fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190fc:	mov    ds:0x64eed2b6,al
  419101:	retf   
  419102:	adc    DWORD PTR ds:[esi+0x33b007b2],ebx
  419109:	lods   eax,DWORD PTR ds:[esi]
  41910a:	mov    WORD PTR [ebx],?
  41910c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41910d:	pop    ecx
  41910e:	jne    0x4190e0
  419110:	adc    eax,0x88238a0c
  419115:	and    dl,BYTE PTR [edi+0x2a]
  419118:	push   eax
  419119:	or     DWORD PTR [edx+edi*1-0x3d8bff66],esi
  419120:	jno    0x4190a2
  419122:	fild   WORD PTR [edi-0xf05417e]
  419128:	sar    DWORD PTR [ecx],1
  41912a:	out    dx,al
  41912b:	ins    BYTE PTR es:[edi],dx
  41912c:	adc    ch,dl
  41912e:	fwait
  41912f:	xchg   esp,eax
  419130:	jb     0x41915f
  419132:	push   edi
  419133:	fs daa 
  419135:	jp     0x419122
  419137:	in     eax,dx
  419138:	dec    esp
  419139:	mov    ds:0x123a53e,eax
  41913e:	lock inc esp
  419140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419141:	retf   
  419142:	add    BYTE PTR [ecx-0xca5dca0],cl
  419148:	dec    ebx
  419149:	int3   
  41914a:	mov    ch,0x31
  41914c:	out    0xd3,eax
  41914e:	jl     0x4190fd
  419150:	int3   
  419151:	push   eax
  419152:	push   ss
  419153:	xchg   edx,eax
  419154:	pop    es
  419155:	sbb    BYTE PTR [esp+ecx*2],cl
  419158:	inc    esp
  419159:	or     eax,0x14e79a1e
  41915e:	sbb    esi,DWORD PTR [eax-0x2ce9dfbf]
  419164:	rol    DWORD PTR [ebx-0x72],1
  419167:	hlt    
  419168:	push   es
  419169:	outs   dx,DWORD PTR ds:[esi]
  41916a:	or     al,0x5e
  41916c:	in     eax,0xeb
  41916e:	jecxz  0x419136
  419170:	adc    DWORD PTR cs:[edx],eax
  419173:	cld    
  419174:	xchg   DWORD PTR [ebx-0x4cfd5d1a],ebx
  41917a:	jmp    DWORD PTR ds:0xb6ef89aa
  419180:	mov    ds:0x6dd3db67,eax
  419185:	ja     0x419146
  419187:	and    eax,0xffffffe8
  41918a:	or     BYTE PTR [edi],dh
  41918c:	push   ss
  41918d:	repz mov bl,0x20
  419190:	mov    dl,BYTE PTR [esi]
  419192:	fidivr DWORD PTR [ebx]
  419194:	or     bl,BYTE PTR [esi]
  419196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419197:	dec    esi
  419198:	int    0xe
  41919a:	xchg   cl,al
  41919c:	push   ss
  41919d:	sti    
  41919e:	jns    0x41921c
  4191a0:	sbb    ebp,ecx
  4191a2:	dec    esp
  4191a3:	fs (bad) 
  4191a5:	xor    ch,dl
  4191a7:	dec    edi
  4191a8:	inc    esi
  4191a9:	inc    edx
  4191aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ab:	das    
  4191ac:	or     BYTE PTR [eax+0x2f],ch
  4191af:	mov    ds:0xf36eaadd,eax
  4191b4:	aam    0x85
  4191b6:	je     0x419182
  4191b8:	fsub   QWORD PTR [edi-0x24]
  4191bb:	jns    0x419156
  4191bd:	ret    0xe02d
  4191c0:	mov    ds:0x79697db6,al
  4191c5:	inc    dh
  4191c7:	and    eax,DWORD PTR [ecx+0x51]
  4191ca:	dec    edi
  4191cb:	push   0x28569dbb
  4191d0:	sar    DWORD PTR [esi-0x66],1
  4191d3:	repnz adc esi,DWORD PTR [ebx+eiz*4+0x76]
  4191d8:	sbb    edi,esi
  4191da:	sbb    eax,edi
  4191dc:	push   esi
  4191dd:	ror    DWORD PTR [ecx+0x62],cl
  4191e0:	adc    dl,BYTE PTR [edx+ebx*4+0x5c]
  4191e4:	xchg   edi,eax
  4191e5:	arpl   WORD PTR ds:0x61574a92,ax
  4191eb:	scas   eax,DWORD PTR es:[edi]
  4191ec:	xor    DWORD PTR [ecx+0x4c],0x71374967
  4191f3:	inc    esi
  4191f4:	bound  eax,QWORD PTR [edi+edx*1+0x79c9e465]
  4191fb:	hlt    
  4191fc:	cld    
  4191fd:	loope  0x4191a8
  4191ff:	mov    esp,0x761df3c0
  419204:	xor    ebx,DWORD PTR [edx-0x4d990ec1]
  41920a:	mov    edi,0x7d1bf884
  41920f:	ret    0x51fe
  419212:	rol    DWORD PTR [ecx-0x341c71ef],cl
  419218:	fs stos DWORD PTR es:[edi],eax
  41921a:	test   eax,0xe488a07c
  41921f:	dec    ebx
  419220:	push   es
  419221:	cwde   
  419222:	xchg   ecx,eax
  419223:	loope  0x419288
  419225:	clc    
  419226:	add    eax,0x9ba1ab97
  41922b:	es int3 
  41922d:	fcomp  DWORD PTR [edi]
  41922f:	xor    BYTE PTR [edi+0x59],bh
  419232:	push   edi
  419233:	push   esp
  419234:	inc    edi
  419235:	enter  0x82dd,0x59
  419239:	or     DWORD PTR [edi+0x8],edx
  41923c:	jmp    0x41925d
  41923e:	jl     0x419221
  419240:	sbb    al,0xf
  419242:	adc    edi,esp
  419244:	jl     0x4191cb
  419246:	dec    ebx
  419247:	pushf  
  419248:	add    BYTE PTR [esi-0x23],ah
  41924b:	jmp    FWORD PTR [ebp+0x7d]
  41924e:	push   es
  41924f:	ins    DWORD PTR es:[edi],dx
  419250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419251:	and    edx,ebp
  419253:	test   BYTE PTR [ecx],0x36
  419256:	adc    eax,0xf30a4f46
  41925b:	stc    
  41925c:	clc    
  41925d:	adc    ecx,DWORD PTR [esi+0xbf090fe]
  419263:	jp     0x4192d0
  419265:	call   0xd909:0x720e547
  41926c:	je     0x419282
  41926e:	and    ebp,DWORD PTR [esi+0x7fb5b615]
  419274:	sub    eax,0x545139bc
  419279:	adc    al,0x88
  41927b:	int3   
  41927c:	sub    al,0xd
  41927e:	adc    edi,esi
  419280:	pop    ebp
  419281:	sbb    BYTE PTR [ebx-0x4c],dl
  419284:	imul   edi,DWORD PTR [ebx],0x8ea93e26
  41928a:	sbb    esi,DWORD PTR [eax+0x1f2c52cb]
  419290:	jb     0x41927c
  419292:	pop    ebx
  419293:	cmp    esp,DWORD PTR [eax+0x2942cf82]
  419299:	jl     0x41924f
  41929b:	pop    ecx
  41929c:	pop    DWORD PTR [edi-0x4c]
  41929f:	mov    eax,ds:0xef648c09
  4192a4:	lock outs dx,DWORD PTR ds:[esi]
  4192a6:	or     al,0xb4
  4192a8:	mov    ecx,0x740e3f21
  4192ad:	cmpxchg DWORD PTR [ebx+0x6],edi
  4192b1:	(bad)  
  4192b2:	sar    BYTE PTR [eax],0xb3
  4192b5:	push   cs
  4192b6:	or     bh,BYTE PTR [di]
  4192b9:	aaa    
  4192ba:	ins    BYTE PTR es:[edi],dx
  4192bb:	pushf  
  4192bc:	adc    BYTE PTR ss:0x97808f67,cl
  4192c3:	loop   0x419305
  4192c5:	mov    al,0x79
  4192c7:	mov    ds:0xc1c2e5fa,al
  4192cc:	xchg   edi,eax
  4192cd:	loopne 0x419334
  4192cf:	(bad)  
  4192d0:	mov    ecx,0x30c3543b
  4192d5:	or     DWORD PTR [edx+0x1cba793c],edi
  4192db:	mov    WORD PTR [edx],ss
  4192dd:	jae    0x4192db
  4192df:	mov    ah,0x15
  4192e1:	jge    0x4192b2
  4192e3:	pushf  
  4192e4:	mov    dl,0xd6
  4192e6:	das    
  4192e7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4192e9:	jl     0x4192f4
  4192eb:	cwde   
  4192ec:	xchg   edi,eax
  4192ed:	stos   BYTE PTR es:[edi],al
  4192ee:	mov    al,0x56
  4192f0:	loop   0x41936f
  4192f2:	addr16 mov esi,0xd0ef032d
  4192f8:	and    DWORD PTR [edi],0x51
  4192fb:	test   bl,al
  4192fd:	inc    ebx
  4192fe:	lea    eax,[ecx+0x4b]
  419301:	(bad)  
  419302:	push   ss
  419303:	or     ecx,DWORD PTR [ecx]
  419305:	jmp    0xcad1:0x4542212c
  41930c:	jecxz  0x41934a
  41930e:	xor    DWORD PTR [ebp+edi*1-0x50c54c3e],0x47
  419316:	jle    0x419311
  419318:	lea    ebp,[eax+0x1c]
  41931b:	ja     0x41931c
  41931d:	sahf   
  41931e:	fmul   QWORD PTR [edx-0x2b24b158]
  419324:	inc    DWORD PTR [ecx+0x0]
  419327:	adc    BYTE PTR [ebp-0x55be9bf2],dh
  41932d:	mov    ebx,0x9aa5b96d
  419332:	scas   eax,DWORD PTR es:[edi]
  419333:	sub    DWORD PTR [ebx+esi*8+0x1d],0xffffff91
  419338:	daa    
  419339:	pop    eax
  41933a:	(bad)  
  41933b:	adc    al,0x22
  41933d:	loope  0x4193b8
  41933f:	cwde   
  419340:	loop   0x419312
  419342:	aaa    
  419343:	xchg   ebx,eax
  419344:	xor    dh,BYTE PTR [ebx]
  419346:	retf   
  419347:	mov    dl,0xfe
  419349:	mov    ss,WORD PTR [edi]
  41934b:	pop    ebx
  41934c:	stos   DWORD PTR es:[edi],eax
  41934d:	or     eax,0x9a5d2e10
  419352:	pop    ebp
  419353:	pop    edi
  419354:	sub    BYTE PTR [eax-0x330aa84a],0xe4
  41935b:	retf   0xc576
  41935e:	sub    eax,0xaf2c5968
  419363:	cmp    DWORD PTR ds:0xe8828af0,eax
  419369:	iret   
  41936a:	dec    eax
  41936b:	je     0x4193a1
  41936d:	loopne 0x4193d4
  41936f:	pop    ecx
  419370:	leave  
  419371:	inc    esp
  419372:	pop    eax
  419373:	cwde   
  419374:	adc    ebp,DWORD PTR [ecx+0x6fac27fc]
  41937a:	int3   
  41937b:	jne    0x4193c9
  41937d:	(bad)  
  41937e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41937f:	sbb    cl,BYTE PTR [ebx+0x45]
  419382:	fst    DWORD PTR [bp+si+0x3]
  419386:	xchg   DWORD PTR [eax-0x5e],esi
  419389:	outs   dx,DWORD PTR ds:[esi]
  41938a:	in     al,0xe5
  41938c:	data16 jge 0x41936f
  41938f:	fsub   QWORD PTR ds:0x5339fa88
  419395:	xchg   esp,eax
  419396:	xchg   esi,eax
  419398:	data16 fistp DWORD PTR [eax]
  41939b:	data16 jnp 0x419344
  41939e:	outs   dx,DWORD PTR ds:[esi]
  41939f:	fst    DWORD PTR [ebp-0x6732cccf]
  4193a5:	mov    edi,0xd883376e
  4193aa:	test   BYTE PTR [esi],ch
  4193ac:	fdiv   DWORD PTR [ebp-0x7500c2cd]
  4193b2:	out    0x9b,eax
  4193b4:	xor    eax,0xf35edf13
  4193b9:	and    bl,ah
  4193bb:	inc    ebp
  4193bc:	mul    BYTE PTR [edx+0x6f]
  4193bf:	js     0x4193d4
  4193c1:	dec    esi
  4193c2:	imul   eax,DWORD PTR [edi+0x60],0x80252b1c
  4193c9:	add    DWORD PTR [ecx],eax
  4193cb:	shl    DWORD PTR [edi+eiz*4],0xa
  4193cf:	inc    ebx
  4193d0:	push   0xc58b354f
  4193d5:	int3   
  4193d6:	mov    edx,DWORD PTR [edx+0x69]
  4193d9:	loope  0x419370
  4193db:	mov    dh,0x4d
  4193dd:	je     0x4193ed
  4193df:	xchg   edi,eax
  4193e0:	jmp    0x700c:0x74b361bd
  4193e7:	imul   ebp,DWORD PTR [esi-0x7dc0ba9e],0x6b
  4193ee:	hlt    
  4193ef:	mov    ebp,0x6cc22fde
  4193f4:	std    
  4193f5:	jns    0x4193e2
  4193f7:	fistp  WORD PTR ds:0xc057ac40
  4193fd:	sub    eax,0x10962a4e
  419402:	mov    esi,0x3c84b0e3
  419407:	mov    ?,eax
  419409:	xchg   ebp,eax
  41940a:	xor    BYTE PTR [ecx+0x41b5d036],bh
  419410:	adc    eax,esi
  419412:	cmc    
  419413:	addr16 xchg ebx,eax
  419415:	push   esi
  419416:	mov    cl,ch
  419418:	lea    ebp,[esi+0x7dac9836]
  41941e:	int3   
  41941f:	xchg   esp,eax
  419420:	mov    edx,0xe9947499
  419425:	push   0x2f85bbd0
  41942a:	shl    BYTE PTR [ebx+0x16],0xc9
  41942e:	xor    ebp,0x6d
  419431:	mov    esp,DWORD PTR [eax]
  419433:	inc    edx
  419434:	jp     0x41942d
  419436:	jl     0x4193de
  419438:	xchg   BYTE PTR [edi+0x46a87a5],cl
  41943e:	lock ins BYTE PTR es:[edi],dx
  419440:	ins    BYTE PTR es:[edi],dx
  419441:	cmp    BYTE PTR [esi+0x22],ch
  419444:	sar    ecx,0x3
  419447:	aad    0x72
  419449:	in     al,dx
  41944a:	mov    edi,gs
  41944c:	sbb    eax,0x7b7973dd
  419451:	push   0x4008a4d7
  419456:	loopne 0x4194a6
  419458:	mov    ebp,0xa3eda9b2
  41945d:	jge    0x419476
  41945f:	icebp  
  419460:	int3   
  419461:	xor    eax,0x14b9d00b
  419466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419467:	jle    0x4194d4
  419469:	je     0x4193ef
  41946b:	loopne 0x419465
  41946d:	in     al,dx
  41946e:	jae    0x419426
  419470:	dec    edi
  419471:	fucomi st,st(2)
  419473:	adc    al,0xd0
  419475:	inc    esp
  419476:	cwde   
  419477:	mov    BYTE PTR [edx-0x66],bh
  41947a:	out    0x8c,eax
  41947c:	mov    bl,0xcb
  41947e:	add    DWORD PTR [edi-0xf],edi
  419481:	mov    ds:0xf6fa29e,al
  419486:	mov    esp,0xe8fff6a0
  41948b:	xchg   ebx,eax
  41948c:	xchg   ecx,esp
  41948e:	cmp    al,0xa3
  419490:	xor    al,0x90
  419492:	cwde   
  419493:	dec    esp
  419494:	push   ds
  419495:	xor    DWORD PTR [edx],0x68d9fe2a
  41949b:	xor    eax,0x66234a88
  4194a0:	and    eax,0x343f8afd
  4194a5:	jb     0x4194d5
  4194a7:	dec    edx
  4194a8:	lods   al,BYTE PTR ds:[esi]
  4194a9:	cld    
  4194aa:	pop    eax
  4194ab:	jbe    0x419522
  4194ad:	repnz out 0x5d,al
  4194b0:	jmp    DWORD PTR [edi+0x6d6c4d9c]
  4194b6:	ja     0x419505
  4194b8:	gs test eax,0xe9755399
  4194be:	xlat   BYTE PTR ds:[ebx]
  4194bf:	cdq    
  4194c0:	add    edx,DWORD PTR [eax-0x6c]
  4194c3:	mov    ds:0xa3d894b,eax
  4194c8:	out    dx,al
  4194c9:	pop    edi
  4194ca:	xor    al,0xb4
  4194cc:	adc    esp,DWORD PTR [ecx-0x56618ea7]
  4194d2:	dec    esp
  4194d3:	ror    esp,cl
  4194d5:	in     al,dx
  4194d6:	mov    ebp,gs
  4194d8:	jno    0x4194c5
  4194da:	mov    dh,0xf5
  4194dc:	sbb    DWORD PTR [edx-0x247e554d],0x7a
  4194e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e4:	jmp    0x33b1b92d
  4194e9:	inc    edx
  4194ea:	icebp  
  4194eb:	or     ebx,DWORD PTR [ecx-0x55c63206]
  4194f1:	push   0xb58217e9
  4194f6:	push   es
  4194f7:	clc    
  4194f8:	outs   dx,DWORD PTR ds:[esi]
  4194f9:	add    ebp,ebp
  4194fb:	hlt    
  4194fc:	or     BYTE PTR [ecx],cl
  4194fe:	jle    0x4194f0
  419500:	push   ecx
  419501:	adc    al,0x79
  419503:	pop    ebp
  419504:	adc    BYTE PTR [ebx],al
  419506:	jmp    0x4194a4
  419508:	fnstsw WORD PTR cs:[ebx*4-0x13ab094f]
  419510:	adc    BYTE PTR [edi-0x1a],dl
  419513:	loop   0x41957c
  419515:	fimul  WORD PTR [esi-0x166d1b57]
  41951b:	add    al,0x34
  41951d:	push   esp
  41951e:	jmp    DWORD PTR [esi]
  419520:	adc    ah,BYTE PTR [edi+0x3d63d9e7]
  419526:	or     eax,DWORD PTR [edi+eax*1]
  419529:	pop    eax
  41952a:	pop    ds
  41952b:	mov    eax,ds:0x49eb50da
  419530:	in     eax,dx
  419531:	cmp    ebx,DWORD PTR ds:0x6da39e6
  419537:	aad    0xe7
  419539:	sub    DWORD PTR [esi],0xffffff9d
  41953c:	push   ds
  41953d:	cdq    
  41953e:	mov    esp,ebx
  419540:	dec    edx
  419541:	call   0x527f:0xb4c554b3
  419548:	pop    ebx
  419549:	aas    
  41954a:	sahf   
  41954b:	pop    ebp
  41954c:	loopne 0x419594
  41954e:	lock jnp 0x4195ce
  419551:	out    0xf8,al
  419553:	mov    ch,0x16
  419555:	mov    dl,0x95
  419557:	dec    esi
  419558:	add    ebp,0x38
  41955b:	jl     0x4195a0
  41955d:	out    dx,eax
  41955e:	xchg   ecx,eax
  41955f:	bound  eax,QWORD PTR [ebx+ecx*2]
  419562:	imul   edx,esp,0x64fe70bd
  419568:	and    esp,ebx
  41956a:	imul   edi,DWORD PTR [ebp+0x2c],0x41
  41956e:	or     BYTE PTR [edx-0x2ae2d933],ch
  419574:	adc    eax,0x4d9c327d
  419579:	and    ebx,eax
  41957b:	mov    DWORD PTR [ebx-0x720d9dcd],esp
  419581:	dec    eax
  419582:	ficom  WORD PTR [ebp+0x31c84642]
  419588:	or     dh,BYTE PTR [eax+0x33]
  41958b:	jmp    0x41953b
  41958d:	(bad)
  419590:	lds    ecx,FWORD PTR [ecx-0x1b6a753c]
  419596:	(bad)  
  419597:	cld    
  419598:	int    0x8e
  41959a:	push   eax
  41959b:	test   eax,0x91f07590
  4195a0:	(bad)  
  4195a1:	mov    cl,0x48
  4195a3:	push   ebx
  4195a4:	xchg   BYTE PTR [esp+ecx*8],ch
  4195a7:	mov    ss,WORD PTR [eax-0x76]
  4195aa:	cmp    ecx,0x86749ab7
  4195b0:	xchg   BYTE PTR [edx+0x56d1106c],ah
  4195b6:	xor    BYTE PTR [esi-0x8fc2543],dl
  4195bc:	adc    dh,BYTE PTR [eax+ebx*4+0x6c1d0790]
  4195c3:	in     al,dx
  4195c4:	(bad)  
  4195c5:	mov    ds:0xd41994d2,eax
  4195ca:	call   0x6530:0x3e28367f
  4195d1:	add    edi,DWORD PTR [edi+0x9]
  4195d4:	mov    eax,ds:0x41e1280c
  4195d9:	pop    ebx
  4195da:	jmp    0xc286:0x11afb500
  4195e1:	ret    0xbcbf
  4195e4:	mov    eax,0xd4593d1c
  4195e9:	inc    esp
  4195ea:	push   ebx
  4195eb:	sub    BYTE PTR [esi],cl
  4195ed:	imul   eax,DWORD PTR [ecx],0x5dc75c84
  4195f3:	mov    ch,0x50
  4195f5:	scas   al,BYTE PTR es:[edi]
  4195f6:	test   eax,ebx
  4195f8:	pop    ecx
  4195f9:	pop    es
  4195fa:	test   eax,0xf31f4b3
  4195ff:	or     BYTE PTR [esi],al
  419601:	fmul   DWORD PTR [edi-0xc]
  419604:	sub    cl,BYTE PTR [edx-0x75683b1a]
  41960a:	xor    DWORD PTR [ebx+0x2b],0x3b7272b2
  419611:	sbb    BYTE PTR [edi],cl
  419613:	ins    DWORD PTR es:[edi],dx
  419614:	cmp    bl,BYTE PTR [ebx]
  419616:	mov    esp,DWORD PTR [eax-0x7831ee60]
  41961c:	cmp    ah,ch
  41961e:	pop    ds
  41961f:	inc    edx
  419620:	dec    esi
  419621:	push   0x185899a2
  419626:	jbe    0x419617
  419628:	inc    edi
  419629:	mov    ds:0x5e79b28b,al
  41962e:	ss xchg ecx,esp
  419631:	cs cwde 
  419633:	fcomp  QWORD PTR [eax]
  419635:	je     0x41961a
  419637:	or     ebx,DWORD PTR [edi-0x10]
  41963a:	jmp    0x8180628d
  41963f:	addr16 xchg esp,eax
  419641:	out    0x20,eax
  419643:	sahf   
  419644:	jbe    0x4196c0
  419646:	cdq    
  419647:	mov    ah,BYTE PTR [edx-0x529b22a5]
  41964d:	inc    edi
  41964e:	inc    ecx
  41964f:	mov    WORD PTR [ebx-0x55718b1d],ds
  419655:	adc    BYTE PTR [ecx+0x22419874],cl
  41965b:	fwait
  41965c:	or     BYTE PTR [eiz*1-0x5485def5],al
  419663:	push   esp
  419664:	(bad)  
  419665:	cli    
  419666:	outs   dx,DWORD PTR ds:[esi]
  419667:	popaw  
  419669:	push   edx
  41966a:	inc    eax
  41966b:	aad    0x9f
  41966d:	or     ecx,edx
  41966f:	int    0x2f
  419671:	fdivr  DWORD PTR [esi]
  419673:	addr16 leave 
  419675:	(bad)  
  419676:	in     eax,dx
  419677:	stos   DWORD PTR es:[edi],eax
  419678:	outs   dx,BYTE PTR ds:[esi]
  419679:	push   cs
  41967a:	sub    BYTE PTR [ebp+esi*8-0xd],ch
  41967e:	div    BYTE PTR [eax-0x2285d7a4]
  419684:	test   eax,0xba2ea56c
  419689:	and    al,BYTE PTR [edx-0x64cb55f4]
  41968f:	mov    ah,0x5d
  419691:	int3   
  419692:	(bad)  
  419693:	pop    edx
  419694:	enter  0xcc6e,0x53
  419698:	jecxz  0x41964a
  41969a:	push   edi
  41969b:	bound  cx,DWORD PTR [eax+0x7]
  41969f:	pushf  
  4196a0:	(bad)  
  4196a1:	cld    
  4196a2:	fidivr WORD PTR cs:0x19f6f4e2
  4196a9:	mov    edx,0xad0cfa6b
  4196ae:	mov    eax,ds:0x6d62b91d
  4196b3:	faddp  st(3),st
  4196b5:	adc    DWORD PTR [esi-0x682d205],edx
  4196bb:	out    dx,eax
  4196bc:	cs (bad) 
  4196be:	jmp    0x4196dc
  4196c0:	mov    DWORD PTR [edi],ebx
  4196c2:	lods   eax,DWORD PTR ds:[esi]
  4196c3:	stos   BYTE PTR es:[edi],al
  4196c4:	popf   
  4196c5:	dec    eax
  4196c6:	ss jae 0x4196d1
  4196c9:	mov    al,ds:0xb74ae308
  4196ce:	mov    ebp,0x23601250
  4196d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d4:	jno    0x41968c
  4196d6:	stc    
  4196d7:	or     DWORD PTR ds:0x9ab04014,edi
  4196dd:	iret   
  4196de:	dec    edi
  4196df:	pop    ebp
  4196e0:	js     0x41972d
  4196e2:	fst    DWORD PTR [eax]
  4196e4:	jns    0x41969b
  4196e6:	aam    0x71
  4196e8:	out    dx,al
  4196e9:	dec    ebp
  4196ea:	xor    ebx,ebp
  4196ec:	jge    0x41976a
  4196ee:	jns    0x419711
  4196f0:	pop    edi
  4196f1:	(bad)  
  4196f2:	sti    
  4196f3:	mov    bl,0x81
  4196f5:	or     ecx,DWORD PTR [eax+eax*8]
  4196f8:	push   cs
  4196f9:	and    bl,BYTE PTR [edi-0x1b]
  4196fc:	mov    ds:0x9d9f4856,eax
  419701:	popf   
  419702:	repz mov ebp,0x1f37e8b5
  419708:	mov    BYTE PTR [ebx-0x57cf7139],ch
  41970e:	jmp    0xec3d5b94
  419713:	cwde   
  419714:	sar    DWORD PTR [edi+0x2e2f2edb],cl
  41971a:	jo     0x419782
  41971c:	lock mov edi,0x8d9f098
  419722:	add    al,0xf6
  419724:	inc    edi
  419725:	pop    ebp
  419726:	popf   
  419727:	inc    eax
  419728:	xlat   BYTE PTR ds:[ebx]
  419729:	mov    dl,0x5b
  41972b:	and    eax,0x2cc4cbbf
  419730:	push   edi
  419731:	and    dh,BYTE PTR [edi+0x1bb34126]
  419737:	dec    eax
  419738:	sahf   
  419739:	leave  
  41973a:	xor    eax,0x5e1cd59d
  41973f:	lahf   
  419740:	dec    ebx
  419741:	out    dx,eax
  419742:	cs pop eax
  419744:	and    al,0xac
  419746:	ins    BYTE PTR es:[edi],dx
  419747:	push   eax
  419748:	sub    BYTE PTR [esi-0x52b70d81],bl
  41974e:	fist   DWORD PTR [ecx+0x5c5d83b7]
  419754:	adc    DWORD PTR [ecx-0x72a4d773],0xa3dc0343
  41975e:	stos   DWORD PTR es:[edi],eax
  41975f:	fistp  QWORD PTR [ecx-0x76]
  419762:	imul   ecx,DWORD PTR [ebp-0x69],0xffffffd3
  419766:	pop    eax
  419767:	sub    esi,DWORD PTR [edx+0x3847ae68]
  41976d:	or     eax,0x9f6dc5
  419772:	iret   
  419773:	test   eax,0x934a1827
  419778:	daa    
  419779:	mov    edi,0xec4d7ca6
  41977e:	xchg   edx,eax
  41977f:	pop    ss
  419780:	test   al,0xe4
  419782:	xchg   ecx,eax
  419783:	mov    BYTE PTR [esp+ebx*1-0x154fb3c1],dh
  41978a:	push   0xc7471b96
  41978f:	fldenv [ecx]
  419791:	add    al,0x15
  419793:	outs   dx,DWORD PTR ds:[esi]
  419794:	xchg   edx,eax
  419795:	pop    edi
  419796:	jae    0x419778
  419798:	lock shl DWORD PTR [esi+0x2c],cl
  41979c:	mov    dh,0x12
  41979e:	fistp  DWORD PTR [edx-0x6e]
  4197a1:	aam    0x62
  4197a3:	xor    al,0x80
  4197a5:	std    
  4197a6:	imul   DWORD PTR [ebp+0x39]
  4197a9:	ret    0xa372
  4197ac:	or     dh,BYTE PTR [ecx-0x2d367edb]
  4197b2:	push   esp
  4197b3:	push   es
  4197b4:	push   edi
  4197b5:	jne    0x419740
  4197b7:	adc    bh,BYTE PTR [ebp-0x35]
  4197ba:	xor    dh,BYTE PTR [ebx]
  4197bc:	loopne 0x41983b
  4197be:	push   ebp
  4197bf:	cmp    al,BYTE PTR [ecx+ebp*4+0x30]
  4197c3:	mov    al,ds:0x637da751
  4197c8:	lods   al,BYTE PTR ds:[esi]
  4197c9:	sub    ebx,ebp
  4197cb:	out    dx,al
  4197cc:	es inc ebx
  4197ce:	adc    bl,0x47
  4197d1:	out    dx,eax
  4197d2:	lods   al,BYTE PTR ds:[si]
  4197d4:	stc    
  4197d5:	in     al,0xd7
  4197d7:	xor    ecx,DWORD PTR [ebp-0x53]
  4197da:	lock clc 
  4197dc:	mov    edx,0x889b936e
  4197e1:	mov    eax,ds:0xf6be2b9e
  4197e6:	dec    ecx
  4197e7:	cmp    bh,cl
  4197e9:	and    DWORD PTR [esp+eax*1-0x7c],ecx
  4197ed:	or     dh,cl
  4197ef:	adc    cl,BYTE PTR [edx]
  4197f1:	popf   
  4197f2:	cdq    
  4197f3:	cmp    BYTE PTR [eax+0x43e6e7c0],cl
  4197f9:	jne    0x4197d4
  4197fb:	aas    
  4197fc:	js     0x4197d3
  4197fe:	add    DWORD PTR [esi],ebx
  419800:	dec    ebx
  419801:	scas   eax,DWORD PTR es:[edi]
  419802:	fwait
  419803:	jmp    ebp
  419805:	mul    BYTE PTR [ebx-0x4e]
  419808:	int    0xb8
  41980a:	add    eax,0x420a5dd9
  41980f:	jnp    0x419814
  419811:	js     0x4197a3
  419813:	lahf   
  419814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419815:	loopne 0x419813
  419817:	int3   
  419818:	pop    ss
  419819:	je     0x4197b3
  41981b:	and    ebx,DWORD PTR [esp+eax*8-0x4e83951b]
  419822:	pop    ebp
  419823:	aas    
  419824:	sbb    BYTE PTR [ecx+0x36],dl
  419827:	das    
  419828:	in     eax,0x74
  41982a:	pop    edx
  41982b:	add    ecx,DWORD PTR [edi+0x65]
  41982e:	add    edi,ecx
  419830:	popa   
  419831:	cmp    bh,al
  419833:	adc    DWORD PTR [ecx+0x48],0xab1fbda0
  41983a:	inc    esi
  41983b:	cmp    DWORD PTR [esi+0x54],ecx
  41983e:	imul   esi,DWORD PTR [ecx-0x74],0x5b
  419842:	pop    es
  419843:	adc    eax,0x8c246a65
  419848:	dec    ebp
  419849:	scas   al,BYTE PTR es:[edi]
  41984a:	sub    cl,al
  41984c:	add    ebp,DWORD PTR [ebp+0x52]
  41984f:	push   ecx
  419850:	addr16 mov eax,ds:0x3349
  419854:	lea    esp,[esi]
  419856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419857:	ss push 0x2ef88bf8
  41985d:	jno    0x419883
  41985f:	mov    esp,0x121a58a
  419864:	aad    0x60
  419866:	mov    edx,0x98b22678
  41986b:	(bad)  
  41986c:	(bad)  
  41986e:	xor    esp,DWORD PTR [esi+0x19cef07d]
  419874:	inc    eax
  419875:	arpl   cx,bp
  419877:	lods   al,BYTE PTR ds:[esi]
  419878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419879:	retf   0x858f
  41987c:	pop    ebx
  41987d:	or     BYTE PTR [esi+eiz*1-0x5fb7f21f],0x51
  419885:	test   DWORD PTR ds:[eax-0xf486275],edi
  41988c:	cwde   
  41988d:	xchg   ebp,eax
  41988e:	daa    
  41988f:	test   al,0x74
  419891:	mov    edx,0xf08dbb98
  419896:	sti    
  419897:	icebp  
  419898:	jae    0x4198b6
  41989a:	mov    dl,0x65
  41989c:	push   edx
  41989d:	push   0xffffffaa
  41989f:	xor    DWORD PTR [edx+0x18],ebp
  4198a2:	mov    ch,BYTE PTR [ecx]
  4198a4:	jmp    0x419923
  4198a6:	adc    dh,BYTE PTR [edx+0x1f0dc8]
  4198ac:	cmc    
  4198ad:	mul    esp
  4198af:	into   
  4198b0:	pusha  
  4198b1:	lock sti 
  4198b3:	xchg   esp,eax
  4198b4:	cmp    ebx,esi
  4198b6:	sub    dl,0xce
  4198b9:	ror    bh,1
  4198bb:	out    0x42,al
  4198bd:	cld    
  4198be:	int3   
  4198bf:	repz out dx,al
  4198c1:	adc    bh,dl
  4198c3:	ins    DWORD PTR es:[edi],dx
  4198c4:	push   ebp
  4198c5:	fst    st(0)
  4198c7:	div    BYTE PTR [ebx-0x62eb98d9]
  4198cd:	ins    BYTE PTR es:[edi],dx
  4198ce:	out    0xd8,al
  4198d0:	jmp    0xf747750e
  4198d5:	sub    cl,BYTE PTR [ecx-0x7b]
  4198d8:	or     eax,0xd03b8539
  4198dd:	fcmovu st,st(3)
  4198df:	xor    edi,DWORD PTR [edx+0x550979c1]
  4198e5:	ja     0x4198e5
  4198e7:	in     al,0x37
  4198e9:	add    DWORD PTR [edx+0x63],ecx
  4198ec:	jo     0x419926
  4198ee:	xor    edi,DWORD PTR [edx+0x544c44b]
  4198f4:	test   al,0xbc
  4198f6:	mov    ds:0x700432f6,al
  4198fb:	pushf  
  4198fc:	pop    eax
  4198fd:	xchg   esp,eax
  4198fe:	lods   al,BYTE PTR ds:[esi]
  4198ff:	jae    0x4198d8
  419901:	push   ebp
  419902:	in     eax,dx
  419903:	cld    
  419904:	xchg   esi,eax
  419905:	sbb    eax,0x146d4054
  41990a:	jnp    0x419961
  41990c:	cmc    
  41990d:	outs   dx,BYTE PTR ds:[esi]
  41990e:	repnz xchg ebp,eax
  419910:	aas    
  419911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419912:	mov    bh,0x5f
  419914:	into   
  419915:	loope  0x419956
  419917:	in     al,dx
  419918:	out    0xb2,al
  41991a:	int3   
  41991b:	dec    ebx
  41991c:	popf   
  41991d:	add    BYTE PTR [edx],al
  41991f:	cmp    cl,BYTE PTR [ebp-0x67]
  419922:	xchg   ebx,eax
  419923:	xchg   esi,esp
  419925:	pop    esp
  419926:	jg     0x41990a
  419928:	jns    0x419979
  41992a:	ret    0x9ada
  41992d:	int3   
  41992e:	in     eax,dx
  41992f:	mov    ebp,0x6627b4d5
  419934:	sub    dh,ch
  419936:	test   eax,0xcd81ceff
  41993b:	xor    esp,esp
  41993d:	out    0x59,eax
  41993f:	scas   eax,DWORD PTR es:[edi]
  419940:	push   ebp
  419941:	das    
  419942:	popf   
  419943:	pushf  
  419944:	cmc    
  419945:	dec    ecx
  419946:	sub    BYTE PTR [esi],cl
  419948:	jge    0x419920
  41994a:	iret   
  41994b:	push   esp
  41994c:	inc    ecx
  41994d:	jo     0x41997f
  41994f:	ins    BYTE PTR es:[edi],dx
  419950:	inc    ebx
  419951:	stos   BYTE PTR es:[edi],al
  419952:	mov    al,0xaa
  419954:	adc    al,0x96
  419956:	mov    edi,ds
  419958:	sbb    esi,DWORD PTR [eax+0x51]
  41995b:	(bad)  
  41995c:	adc    ebx,DWORD PTR [edx-0x5f3a8e96]
  419962:	push   0xffffffa0
  419964:	in     eax,0xf8
  419966:	adc    BYTE PTR [ebx+0x28ad1331],ah
  41996c:	adc    DWORD PTR [ebx-0x74],ecx
  41996f:	xor    edi,DWORD PTR ds:0xb0524d32
  419975:	mov    eax,0xe0d280b2
  41997a:	aad    0xe5
  41997c:	shl    BYTE PTR [ebx],cl
  41997e:	pop    ecx
  41997f:	xchg   ecx,eax
  419980:	dec    eax
  419981:	inc    ecx
  419982:	lock hlt 
  419984:	scas   eax,DWORD PTR es:[edi]
  419985:	sti    
  419986:	dec    ebx
  419987:	scas   eax,DWORD PTR es:[edi]
  419988:	sub    eax,0x12a40390
  41998d:	frstor [eax]
  41998f:	scas   al,BYTE PTR es:[edi]
  419990:	sahf   
  419991:	jmp    0x4199f7
  419993:	ror    BYTE PTR [ebp+0x473b5172],cl
  419999:	and    edx,ebp
  41999b:	jmp    0x9e63:0xb9c03f26
  4199a2:	mov    esp,0xac5fa761
  4199a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a8:	stos   DWORD PTR es:[edi],eax
  4199a9:	repnz fs pushf 
  4199ac:	cwde   
  4199ad:	pop    edx
  4199ae:	pop    edx
  4199af:	xchg   edi,eax
  4199b0:	xor    ebp,DWORD PTR [ebx-0x3b486364]
  4199b6:	scas   eax,DWORD PTR es:[edi]
  4199b7:	sub    DWORD PTR [eax+0x3a],ebx
  4199ba:	shl    BYTE PTR [ecx-0xb2381e],cl
  4199c0:	jmp    0x31724640
  4199c5:	jbe    0x419962
  4199c7:	cs lock ja 0x4199b6
  4199cb:	mov    bl,0x91
  4199cd:	adc    BYTE PTR [eax-0x23876986],ch
  4199d3:	dec    esi
  4199d4:	cwde   
  4199d5:	daa    
  4199d6:	cmp    ah,BYTE PTR [edx+0x46]
  4199d9:	icebp  
  4199da:	mov    edi,0x4abe4571
  4199df:	or     eax,0x6fffb759
  4199e4:	xor    al,0xd2
  4199e6:	mov    dh,0x86
  4199e8:	(bad)  
  4199e9:	dec    edi
  4199ea:	inc    ebx
  4199eb:	jmp    0x419a64
  4199ed:	ja     0x419a15
  4199ef:	call   0xae78ccda
  4199f4:	clc    
  4199f5:	ja     0x4199cd
  4199f7:	pop    esp
  4199f8:	shr    dl,0xf1
  4199fb:	or     eax,0x641e42b6
  419a00:	mov    ebp,0x2492eba2
  419a05:	xchg   edi,eax
  419a06:	lods   eax,DWORD PTR ds:[esi]
  419a07:	sbb    bh,BYTE PTR [eax+0x6ddbfcde]
  419a0d:	lock jae 0x419a58
  419a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a11:	fcomip st,st(3)
  419a13:	in     al,0x5f
  419a15:	call   0xa447:0x65a0a5e2
  419a1c:	test   DWORD PTR [ebp+0x5d],0xd02f694f
  419a23:	retf   0x7556
  419a26:	das    
  419a27:	sbb    al,cl
  419a29:	xchg   ecx,eax
  419a2a:	ficom  DWORD PTR [edx+0x46]
  419a2d:	fist   WORD PTR [ecx+0x5e7f3b3c]
  419a33:	arpl   WORD PTR [ecx+0x6b],cx
  419a36:	test   eax,0x5149fa87
  419a3b:	push   esp
  419a3c:	xor    DWORD PTR [esi],eax
  419a3e:	(bad)  [eax-0x4b253b63]
  419a44:	jp     0x419aa3
  419a46:	gs jns 0x419ab8
  419a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a4a:	push   0xb4574b8
  419a4f:	shl    BYTE PTR [ebp+eiz*1-0x3beacc2],1
  419a56:	cli    
  419a57:	scas   al,BYTE PTR es:[edi]
  419a58:	fcomp  DWORD PTR [ecx]
  419a5a:	and    esi,esi
  419a5c:	test   al,0x98
  419a5e:	dec    ecx
  419a5f:	or     edx,esp
  419a61:	jbe    0x419aa3
  419a63:	cli    
  419a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a65:	stos   DWORD PTR es:[edi],eax
  419a66:	rcl    DWORD PTR [esp+eax*1],1
  419a69:	jne    0x419a4a
  419a6b:	sbb    DWORD PTR [edi-0x19],eax
  419a6e:	pop    ss
  419a6f:	sub    DWORD PTR [esi+0x77605ceb],esi
  419a75:	cmc    
  419a76:	js     0x419a32
  419a78:	jp     0x419a51
  419a7a:	inc    ebp
  419a7b:	jecxz  0x419a16
  419a7d:	jo     0x419a0d
  419a7f:	cld    
  419a80:	xchg   BYTE PTR [edi-0x24],ch
  419a83:	dec    edi
  419a84:	or     eax,0x86746ae4
  419a89:	push   ebp
  419a8a:	dec    ebp
  419a8b:	xor    BYTE PTR [esp+ebx*4-0xfa8856b],0x8c
  419a93:	scas   eax,DWORD PTR es:[edi]
  419a94:	aam    0x54
  419a96:	es (bad) 
  419a98:	ins    BYTE PTR es:[edi],dx
  419a99:	mov    ecx,0xeaa27b5c
  419a9e:	imul   ebp,ebp,0x90e79184
  419aa4:	xchg   DWORD PTR [ecx-0x3682ae8e],edx
  419aaa:	mov    edx,0x57940fb7
  419aaf:	test   esp,ecx
  419ab1:	inc    ebx
  419ab2:	mov    ds:0xd851f47,eax
  419ab7:	test   ch,dh
  419ab9:	pushf  
  419aba:	mov    ah,0xf1
  419abc:	cmc    
  419abd:	in     al,0x9
  419abf:	sbb    DWORD PTR [edx+0x5b],ecx
  419ac2:	sbb    DWORD PTR [edi],ebx
  419ac4:	dec    esi
  419ac5:	fiadd  WORD PTR [eax+ebx*4+0x22]
  419ac9:	push   ebx
  419aca:	dec    edx
  419acb:	and    al,0x99
  419acd:	inc    esp
  419ace:	jne    0x419b4b
  419ad0:	std    
  419ad1:	push   0xffffffd8
  419ad3:	jmp    0xba5771f0
  419ad8:	fimul  DWORD PTR [ebx+0x4e]
  419adb:	das    
  419adc:	xor    al,0x31
  419ade:	jne    0x419a9e
  419ae0:	dec    edi
  419ae1:	and    DWORD PTR [ecx+0x55],edx
  419ae4:	and    dl,ah
  419ae6:	lea    esp,[ecx-0xecca555]
  419aec:	sub    esi,eax
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	retf   
  419b13:	stos   DWORD PTR es:[edi],eax
  419b14:	(bad)  
  419b15:	pop    ss
  419b16:	inc    edi
  419b17:	fdivr  QWORD PTR [ebx+edi*2+0x18]
  419b1b:	sahf   
  419b1c:	jnp    0x419b99
  419b1e:	jg     0x419b3b
  419b20:	mov    eax,DWORD PTR [edi]
  419b22:	in     al,0x6c
  419b24:	test   DWORD PTR [ebx],esi
  419b26:	pusha  
  419b27:	or     DWORD PTR [ebp+0x33],ebp
  419b2a:	shl    BYTE PTR [ecx-0x46992231],cl
  419b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b31:	dec    edi
  419b32:	mov    cl,0xd2
  419b34:	pop    ds
  419b35:	cmc    
  419b36:	add    DWORD PTR [ebp-0x71],ebx
  419b39:	adc    esp,DWORD PTR [eax+0x59e27780]
  419b3f:	loope  0x419b9e
  419b41:	fnstcw WORD PTR [edx-0x4ccfd4e]
  419b47:	ret    0x3ff5
  419b4a:	xchg   esp,eax
  419b4b:	cmp    al,0x9c
  419b4d:	stos   DWORD PTR es:[edi],eax
  419b4e:	cdq    
  419b4f:	out    0x4a,eax
  419b51:	push   edx
  419b52:	sbb    ah,BYTE PTR [ecx+0x44]
  419b55:	dec    ebp
  419b56:	and    esp,DWORD PTR [ecx-0x2eb1d589]
  419b5c:	shl    DWORD PTR [esi],0xce
  419b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b60:	jbe    0x419af1
  419b62:	jmp    0x419b6a
  419b64:	mov    eax,0x383dc064
  419b69:	daa    
  419b6a:	xchg   esi,eax
  419b6b:	cdq    
  419b6c:	mov    eax,fs:0x2691b47f
  419b72:	sbb    bh,bl
  419b74:	and    al,0xd6
  419b76:	shl    BYTE PTR ds:0x7ea62579,cl
  419b7c:	enter  0x5459,0x8
  419b80:	xchg   esp,eax
  419b81:	pop    edi
  419b82:	aad    0xbf
  419b84:	dec    edi
  419b85:	and    DWORD PTR [edi],edx
  419b87:	cwde   
  419b88:	sub    al,0x14
  419b8a:	inc    ebx
  419b8b:	add    esi,DWORD PTR [eax+0x79]
  419b8e:	sbb    al,0x6c
  419b90:	jmp    0xff98:0x1b8bc997
  419b97:	xchg   edi,eax
  419b98:	jns    0x419c0d
  419b9a:	add    DWORD PTR [esi+edx*1],edi
  419b9d:	inc    esi
  419b9e:	enter  0x63be,0xee
  419ba2:	push   eax
  419ba3:	in     al,0xd7
  419ba5:	cld    
  419ba6:	ja     0x419c1b
  419ba8:	or     eax,0x84b760f5
  419bad:	(bad)  
  419bae:	jnp    0x419b63
  419bb0:	scas   al,BYTE PTR es:[edi]
  419bb1:	add    al,0x53
  419bb3:	add    al,0x25
  419bb5:	in     al,dx
  419bb6:	xor    DWORD PTR [edi*1+0x1ab6a928],ebx
  419bbd:	aam    0xdd
  419bbf:	adc    BYTE PTR [eax-0x19],dl
  419bc2:	mov    edi,0xf0511e91
  419bc7:	aas    
  419bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc9:	jmp    0x419c13
  419bcb:	cmp    edx,eax
  419bcd:	mov    esp,0x55dd218e
  419bd2:	test   DWORD PTR [edx+0x1995ba97],edx
  419bd8:	xchg   ebx,eax
  419bd9:	pop    ebp
  419bda:	out    0x54,eax
  419bdc:	push   ss
  419bdd:	popw   ds
  419bdf:	js     0x419c2b
  419be1:	push   edi
  419be2:	dec    esp
  419be3:	adc    al,0x9c
  419be5:	pushf  
  419be6:	xchg   esp,eax
  419be7:	scas   eax,DWORD PTR es:[edi]
  419be8:	sub    edx,edi
  419bea:	jecxz  0x419c21
  419bec:	call   FWORD PTR [ebx-0x5cda9314]
  419bf2:	daa    
  419bf3:	jl     0x419c0c
  419bf5:	and    BYTE PTR [ecx],ah
  419bf7:	cmp    al,0x92
  419bf9:	rcr    BYTE PTR [esi+0x5d],0x8
  419bfd:	inc    ebp
  419bfe:	xchg   ebp,eax
  419bff:	cld    
  419c00:	jmp    0x1bf6:0x2c446449
  419c07:	fwait
  419c08:	aas    
  419c09:	(bad)  
  419c0a:	call   0x6d566bf4
  419c0f:	push   edx
  419c10:	cmp    BYTE PTR [ebp+0x23],dl
  419c13:	fist   DWORD PTR fs:[eax]
  419c16:	inc    ebx
  419c17:	or     DWORD PTR [edi],edi
  419c19:	add    DWORD PTR [ebx+0x2c1130c1],eax
  419c1f:	(bad)  
  419c20:	call   DWORD PTR ds:0x6c8f7f3d
  419c26:	dec    eax
  419c27:	aam    0x4d
  419c29:	popf   
  419c2a:	push   edi
  419c2b:	ror    BYTE PTR [edx+0x466ace8d],cl
  419c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c32:	aaa    
  419c33:	popa   
  419c34:	pop    ds
  419c35:	add    al,0xc9
  419c37:	test   BYTE PTR [edx-0x4ed67b01],al
  419c3d:	dec    ecx
  419c3e:	sbb    al,0x99
  419c40:	ds pop esi
  419c42:	cmp    al,0x2c
  419c44:	dec    edx
  419c45:	out    0x83,al
  419c47:	(bad)  
  419c48:	jmp    0x44c60bc2
  419c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c4e:	in     al,dx
  419c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c50:	dec    esp
  419c51:	fnstsw WORD PTR [esi]
  419c53:	int    0x17
  419c55:	pop    esi
  419c56:	jmp    0x419c14
  419c58:	push   eax
  419c59:	rcl    BYTE PTR [ebx],1
  419c5b:	out    0xd9,eax
  419c5d:	dec    ebx
  419c5e:	in     eax,0xd7
  419c60:	mov    ah,0x19
  419c62:	or     DWORD PTR [ebx-0x4d],0x4e
  419c66:	test   DWORD PTR [ecx+edi*4-0x30],0xf3f344cc
  419c6e:	lock nop
  419c70:	out    dx,eax
  419c71:	mov    eax,0x7de23ee3
  419c76:	ror    DWORD PTR [ecx+0x0],1
  419c79:	icebp  
  419c7a:	sub    eax,0x5bed215a
  419c7f:	xlat   BYTE PTR ds:[ebx]
  419c80:	dec    esi
  419c81:	xchg   ebp,eax
  419c82:	and    BYTE PTR [ebp-0x3a],al
  419c85:	ret    
  419c86:	jmp    0x2e42fc81
  419c8b:	push   esp
  419c8c:	lods   eax,DWORD PTR ds:[esi]
  419c8d:	adc    DWORD PTR [ecx-0x3d],0xe4010253
  419c94:	mov    bh,0x4c
  419c96:	repnz std 
  419c98:	sub    ebp,esp
  419c9a:	cmp    ecx,ebx
  419c9c:	aad    0x8a
  419c9e:	fisttp DWORD PTR [ebx+ecx*2-0x69]
  419ca2:	fcmove st,st(4)
  419ca4:	fs add bh,dl
  419ca7:	inc    ebp
  419ca8:	push   edi
  419ca9:	nop
  419caa:	cmp    al,0xc4
  419cac:	cli    
  419cad:	mov    ah,0xf5
  419caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cb0:	cmp    dh,BYTE PTR [edx-0x2082ea53]
  419cb6:	xchg   ebp,eax
  419cb7:	test   al,0x9b
  419cb9:	pop    ds
  419cba:	push   esp
  419cbb:	mov    eax,0xa664531f
  419cc0:	lods   eax,DWORD PTR ds:[esi]
  419cc1:	clc    
  419cc2:	dec    edx
  419cc3:	test   DWORD PTR [esi-0x59],edi
  419cc6:	lahf   
  419cc7:	mov    esp,0xb144a4c4
  419ccc:	pop    ebx
  419ccd:	scas   al,BYTE PTR es:[edi]
  419cce:	iret   
  419ccf:	bswap  esi
  419cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd2:	fstp   st(4)
  419cd4:	sub    al,0x1c
  419cd6:	jmp    0x641c2aeb
  419cdb:	xchg   DWORD PTR [edx+0x5a],ebp
  419cde:	jno    0x419ced
  419ce0:	mov    ah,0xb9
  419ce2:	xchg   DWORD PTR [bp+di],ebx
  419ce5:	sub    al,0xd0
  419ce7:	adc    ch,ch
  419ce9:	lock push ss
  419ceb:	sub    bh,bh
  419ced:	addr16 push 0x4a
  419cf0:	pusha  
  419cf1:	push   esi
  419cf2:	mov    ds:0x22d62903,eax
  419cf7:	cwde   
  419cf8:	push   eax
  419cf9:	mul    DWORD PTR [ecx+0x3f]
  419cfc:	xor    BYTE PTR [edx],dh
  419cfe:	push   0x1a81c887
  419d03:	das    
  419d04:	mov    al,0xe5
  419d06:	icebp  
  419d07:	adc    BYTE PTR [edi+ebp*2-0x572d325d],ch
  419d0e:	ins    DWORD PTR es:[edi],dx
  419d0f:	shl    esi,cl
  419d11:	fnstsw WORD PTR [edx+0x71]
  419d14:	sub    dh,BYTE PTR [edi+0x2d]
  419d17:	add    BYTE PTR [ecx-0x19f9251c],bl
  419d1d:	dec    ebx
  419d1e:	sar    edx,0xb3
  419d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d22:	inc    ebp
  419d23:	pop    eax
  419d24:	inc    esp
  419d25:	lds    ecx,FWORD PTR [eax+0x1b6fdef]
  419d2b:	ins    BYTE PTR es:[edi],dx
  419d2c:	add    BYTE PTR [ebx+0x6bcd6404],bl
  419d32:	out    0x26,al
  419d34:	nop
  419d35:	mov    ecx,0xa0f3d5e1
  419d3a:	retf   0x41a8
  419d3d:	sub    DWORD PTR [edi],esi
  419d3f:	mov    esp,0x91a3d2d
  419d44:	fucomi st,st(4)
  419d46:	sbb    bh,BYTE PTR [edi-0x1e]
  419d49:	lahf   
  419d4a:	cmp    al,0xf7
  419d4c:	xchg   ebx,eax
  419d4d:	sti    
  419d4e:	test   DWORD PTR [edi+0x40f64759],ecx
  419d54:	mov    eax,0x93f10163
  419d59:	sbb    edi,ebx
  419d5b:	arpl   dx,sp
  419d5d:	cmp    al,0xb7
  419d5f:	push   ds
  419d60:	ror    DWORD PTR [ebp+0xf619410],cl
  419d66:	leave  
  419d67:	test   BYTE PTR [edi-0xe],al
  419d6a:	out    0x30,al
  419d6c:	mov    dl,0xc4
  419d6e:	add    BYTE PTR [edi+0x2a7b9077],ch
  419d74:	mov    esi,0x90a14831
  419d79:	call   0x5d3688a4
  419d7e:	es and eax,0xd29d8d7c
  419d84:	loope  0x419d09
  419d86:	test   eax,0x80f28aba
  419d8b:	adc    cl,bl
  419d8d:	mov    esi,esp
  419d8f:	xchg   esp,eax
  419d90:	std    
  419d91:	sbb    ch,bl
  419d93:	ja     0x419d94
  419d95:	cmc    
  419d96:	inc    esp
  419d97:	in     al,0x4c
  419d99:	gs fs dec esp
  419d9c:	xchg   edx,eax
  419d9d:	add    ecx,DWORD PTR [edx-0x70]
  419da0:	loope  0x419d58
  419da2:	adc    ch,BYTE PTR [esi+0x18]
  419da5:	mov    al,ds:0x800394a1
  419daa:	into   
  419dab:	cmp    DWORD PTR fs:[ebx],0xf62aa930
  419db2:	pushf  
  419db3:	push   esp
  419db4:	xor    al,0x55
  419db6:	imul   edx,DWORD PTR [esi+ebp*8-0x5c],0x3ae68055
  419dbe:	fadd   DWORD PTR [edx-0x5345c68c]
  419dc4:	ja     0x419de7
  419dc6:	addr16 or eax,0x1abcea37
  419dcc:	lea    edx,[edi+0x6a]
  419dcf:	(bad)  
  419dd0:	clc    
  419dd1:	pushf  
  419dd2:	cmp    DWORD PTR [ebx+0x539037dd],edi
  419dd8:	dec    eax
  419dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dda:	ins    DWORD PTR es:[edi],dx
  419ddb:	xchg   BYTE PTR [ecx],al
  419ddd:	add    DWORD PTR [edx-0x14c2576],esp
  419de3:	jno    0x419dd0
  419de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de6:	sbb    eax,0x55e33e44
  419deb:	sbb    eax,0xe90316bc
  419df0:	dec    ebp
  419df1:	and    BYTE PTR [ebx-0x63],dh
  419df4:	cmp    eax,0x889a702e
  419df9:	lods   al,BYTE PTR ds:[esi]
  419dfa:	repz inc DWORD PTR [eax]
  419dfd:	and    ah,BYTE PTR [edi-0x904aec1]
  419e03:	ret    0xdbe8
  419e06:	bnd jno 0x419d90
  419e09:	jbe    0x419e4d
  419e0b:	(bad)  
  419e0c:	rol    ecx,cl
  419e0e:	popf   
  419e0f:	retf   
  419e10:	xchg   BYTE PTR [eax+ebp*1-0x542cfbe3],bl
  419e17:	mov    edx,0xaf56f9de
  419e1c:	inc    ecx
  419e1d:	rcl    BYTE PTR [esi+0x73],0x33
  419e21:	jmp    0x419e46
  419e23:	aad    0xb8
  419e25:	and    edx,esi
  419e27:	das    
  419e28:	mov    cl,0x5f
  419e2a:	adc    eax,0x37789bb5
  419e2f:	pop    edi
  419e30:	or     al,0x79
  419e32:	sbb    BYTE PTR [ebp-0x7f],bl
  419e35:	xchg   DWORD PTR [esp+ebp*2+0x7255aaf],esi
  419e3c:	test   BYTE PTR [eax+ecx*2+0x7c4e60ac],cl
  419e43:	stc    
  419e44:	lds    ebx,FWORD PTR [esi]
  419e46:	jp     0x419ea9
  419e48:	out    dx,al
  419e49:	jmp    FWORD PTR [esi+0x6b]
  419e4c:	pop    eax
  419e4d:	sti    
  419e4e:	xchg   ebx,eax
  419e4f:	add    edx,DWORD PTR [eax]
  419e51:	mov    dh,0x6a
  419e53:	ss int 0x64
  419e56:	scas   ax,WORD PTR es:[edi]
  419e58:	push   0xffffffb0
  419e5a:	bound  ebp,QWORD PTR ds:0xfcf56353
  419e60:	push   edi
  419e61:	inc    ebx
  419e62:	out    dx,al
  419e63:	nop    DWORD PTR [ebx+0x7e7c5c0a]
  419e6a:	push   ebp
  419e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e6c:	and    al,0x70
  419e6e:	dec    esi
  419e6f:	and    ah,BYTE PTR [ebp+0xf]
  419e72:	adc    esp,esp
  419e74:	pop    ss
  419e75:	shl    BYTE PTR [ecx-0x1ef01118],0x84
  419e7c:	sub    eax,0x77812cd5
  419e81:	ficom  DWORD PTR [edx+0x4b]
  419e84:	addr16 in eax,0x64
  419e87:	inc    ebx
  419e88:	mov    esi,0x6b4635dc
  419e8d:	and    eax,0x4f07599d
  419e92:	lahf   
  419e93:	mov    dh,bl
  419e95:	fstp   QWORD PTR [eax]
  419e97:	bnd jle 0x419eeb
  419e9a:	push   edx
  419e9b:	stc    
  419e9c:	mov    al,0x31
  419e9e:	xchg   BYTE PTR [edi+0x16dadc4e],dl
  419ea4:	addr16 imul eax,esp,0xfb5e881
  419eab:	loopne 0x419e95
  419ead:	or     eax,0xfa9d2dc8
  419eb2:	(bad)  
  419eb3:	popa   
  419eb4:	push   esi
  419eb5:	mov    esi,0x279343f0
  419eba:	(bad)  
  419ebb:	sti    
  419ebc:	mov    ebx,fs
  419ebe:	pop    edx
  419ebf:	out    0x7e,al
  419ec1:	lahf   
  419ec2:	fstp   TBYTE PTR [eax+0x569e1c0]
  419ec8:	xchg   ebp,eax
  419ec9:	jb     0x419ed9
  419ecb:	ds xchg edi,eax
  419ecd:	and    dl,BYTE PTR [esi+eax*1]
  419ed0:	test   edx,esi
  419ed2:	mov    ds:0x65089a,al
  419ed7:	dec    eax
  419ed8:	pop    edi
  419ed9:	mov    ebx,0x8532eccc
  419ede:	out    dx,al
  419edf:	mov    esp,ds
  419ee1:	adc    dl,BYTE PTR [esi-0x53]
  419ee4:	mov    eax,ds:0xb38e0d8d
  419ee9:	jns    0x419f6a
  419eeb:	inc    ecx
  419eec:	cmc    
  419eed:	dec    esp
  419eee:	shl    ebx,1
  419ef0:	xchg   edi,ebp
  419ef2:	in     eax,0x6c
  419ef4:	xlat   BYTE PTR ds:[ebx]
  419ef5:	jnp    0x419f56
  419ef7:	sbb    DWORD PTR [esi-0x6db64043],ebx
  419efd:	mov    BYTE PTR [ebx-0x3468590c],0x19
  419f04:	add    DWORD PTR [esi],ebx
  419f06:	xchg   esi,eax
  419f07:	xchg   edx,eax
  419f08:	(bad)  
  419f09:	sbb    DWORD PTR [ebp+eiz*1+0x1c],ecx
  419f0d:	dec    esp
  419f0e:	test   BYTE PTR [edi+eax*4],cl
  419f11:	or     al,0x63
  419f13:	push   0x1d
  419f15:	mov    dl,0x2c
  419f17:	hlt    
  419f18:	and    WORD PTR [esi+0x27],ax
  419f1c:	xchg   esi,eax
  419f1d:	xchg   ebx,eax
  419f1e:	xor    edi,eax
  419f20:	punpckhwd mm3,QWORD PTR [eax+0x1baa5101]
  419f27:	xchg   edx,eax
  419f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f29:	jle    0x419f8a
  419f2b:	retf   
  419f2c:	mov    bl,0x90
  419f2e:	bound  esp,QWORD PTR [esi]
  419f30:	fldl2e 
  419f32:	outs   dx,BYTE PTR ds:[esi]
  419f33:	pop    edi
  419f34:	push   es
  419f35:	lock jg 0x419f8d
  419f38:	adc    esi,DWORD PTR [eax-0x58]
  419f3b:	xor    BYTE PTR ds:0xf4b3b001,dl
  419f41:	jae    0x419f83
  419f43:	mov    ds,ebx
  419f45:	daa    
  419f46:	or     dh,bh
  419f48:	nop    ecx
  419f4b:	(bad)  
  419f4c:	pusha  
  419f4d:	pusha  
  419f4e:	mov    bh,0x85
  419f50:	xor    eax,0xcd329f49
  419f55:	and    DWORD PTR [ebx],esi
  419f57:	mov    esp,0xfaa21be3
  419f5c:	dec    esp
  419f5d:	std    
  419f5e:	rol    DWORD PTR [esi],0xc0
  419f61:	pop    es
  419f62:	cmp    al,0xc6
  419f64:	xchg   edi,eax
  419f65:	iret   
  419f66:	mov    bl,BYTE PTR [ebx-0x5a5c533f]
  419f6c:	push   ss
  419f6d:	pop    eax
  419f6e:	out    dx,al
  419f6f:	pop    esi
  419f70:	sub    bh,BYTE PTR [edi+0x15]
  419f73:	dec    esi
  419f74:	sub    ah,BYTE PTR [esi]
  419f76:	imul   ebx,DWORD PTR [esi],0xaea1faf0
  419f7c:	mov    ds:0xe937bc48,eax
  419f81:	mov    ch,BYTE PTR [esi+0x242dc81d]
  419f87:	mov    eax,fs
  419f89:	sub    BYTE PTR [ecx+0x9],cl
  419f8c:	xchg   edx,eax
  419f8d:	adc    eax,0xbca48a3d
  419f92:	inc    edx
  419f93:	rcl    BYTE PTR [ebp-0x3f2ef912],cl
  419f99:	inc    eax
  419f9a:	xor    BYTE PTR [ecx+0x73],ah
  419f9d:	aad    0x49
  419f9f:	inc    edx
  419fa0:	mov    ch,bh
  419fa2:	mov    al,0x2b
  419fa4:	les    esi,FWORD PTR [esi]
  419fa6:	fwait
  419fa7:	mov    ebx,0x7e5923af
  419fac:	shl    DWORD PTR [ecx+edx*4+0xa],1
  419fb0:	or     BYTE PTR [eax+eax*1-0x6f4101cb],dl
  419fb7:	imul   DWORD PTR [eax-0x14]
  419fba:	js     0x419fa5
  419fbc:	fadd   st(5),st
  419fbe:	and    cl,dh
  419fc0:	jno    0x419f9f
  419fc2:	ins    DWORD PTR es:[edi],dx
  419fc3:	mov    bl,0x2
  419fc5:	jl     0x419f71
  419fc7:	fdiv   DWORD PTR [esi]
  419fc9:	mov    ds:0x9542d96e,eax
  419fce:	dec    edx
  419fcf:	dec    edx
  419fd0:	xor    bl,0x1f
  419fd3:	ds push ds
  419fd5:	leave  
  419fd6:	gs add al,0x9a
  419fd9:	inc    edi
  419fda:	fild   WORD PTR [eax+ebp*4-0x7aea3fa6]
  419fe1:	add    al,0xd4
  419fe3:	add    ebx,esp
  419fe5:	mov    ch,0x26
  419fe7:	jecxz  0x419f69
  419fe9:	ret    0x93eb
  419fec:	sbb    DWORD PTR [ecx],ebx
  419fee:	stos   DWORD PTR es:[edi],eax
  419fef:	mov    cl,0xf5
  419ff1:	add    edi,ecx
  419ff3:	push   eax
  419ff4:	stos   DWORD PTR es:[edi],eax
  419ff5:	pop    edx
  419ff6:	cmp    al,0xe8
  419ff8:	xchg   ebp,eax
  419ff9:	je     0x41a067
  419ffb:	and    eax,0xa73c4828
  41a000:	sub    edx,DWORD PTR [esp+edx*1-0x4c9028e9]
  41a007:	cmp    DWORD PTR [eax],ebx
  41a009:	sub    BYTE PTR [ecx-0x3407b809],cl
  41a00f:	fdivr  QWORD PTR [ecx]
  41a011:	not    ch
  41a013:	jns    0x41a07f
  41a015:	mov    WORD PTR [edx+0x49],cs
  41a018:	pusha  
  41a019:	or     ax,0x5ab9
  41a01d:	outs   dx,BYTE PTR ds:[esi]
  41a01e:	mov    al,ds:0x97e64f35
  41a023:	mov    ah,BYTE PTR [edx]
  41a025:	jmp    0xc55b:0xb4306b5a
  41a02c:	sub    al,0x2d
  41a02e:	leave  
  41a02f:	xor    al,0xbb
  41a031:	mov    eax,ds:0xd6362a36
  41a036:	(bad)  
  41a037:	jl     0x41a029
  41a039:	or     ebx,DWORD PTR ds:0x8a734094
  41a03f:	lods   al,BYTE PTR ds:[esi]
  41a040:	jp     0x419fee
  41a042:	and    dh,0xa8
  41a045:	(bad)  
  41a046:	icebp  
  41a047:	in     al,dx
  41a048:	cmp    esp,DWORD PTR [ebp-0x78986a97]
  41a04e:	test   bh,al
  41a050:	adc    eax,0xda5ebc57
  41a055:	out    0x31,al
  41a057:	cwde   
  41a058:	inc    edi
  41a059:	fst    DWORD PTR [esi]
  41a05b:	adc    edi,DWORD PTR [eax+0x5152a637]
  41a061:	mov    cl,al
  41a063:	cmp    al,0x56
  41a065:	dec    ebp
  41a066:	ins    DWORD PTR es:[edi],dx
  41a067:	sbb    eax,DWORD PTR [edi]
  41a069:	adc    BYTE PTR [ebx+edx*4],ch
  41a06c:	push   0xfffffff4
  41a06e:	test   eax,0x638d5674
  41a073:	xchg   esi,eax
  41a074:	add    bh,BYTE PTR [ecx+0x7a]
  41a077:	dec    edi
  41a078:	out    dx,ax
  41a07a:	call   0x9553:0xd6202e02
  41a081:	popa   
  41a082:	fmul   st,st(0)
  41a084:	xchg   esp,eax
  41a085:	jns    0x41a0d1
  41a087:	push   0xd4574102
  41a08c:	dec    edx
  41a08d:	inc    esp
  41a08e:	xchg   esi,eax
  41a08f:	int3   
  41a090:	(bad)  
  41a091:	cld    
  41a092:	adc    eax,0xcb8ffee1
  41a097:	ror    BYTE PTR [edx-0x7d],0xce
  41a09b:	fcmovnu st,st(2)
  41a09d:	je     0x41a095
  41a09f:	in     eax,0x62
  41a0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a3:	cmp    eax,0xd3939ad8
  41a0a8:	iret   
  41a0a9:	mov    ah,0xe0
  41a0ab:	ror    BYTE PTR [esi],cl
  41a0ad:	add    eax,0x24dd3edd
  41a0b2:	adc    al,0x56
  41a0b4:	sete   BYTE PTR [ebx+0x2275bbf7]
  41a0bb:	js     0x41a0f4
  41a0bd:	imul   ebp,DWORD PTR [edx],0xbd0c5e4b
  41a0c3:	mov    eax,0xf97ffde4
  41a0c8:	xor    edx,DWORD PTR [eax]
  41a0ca:	jmp    DWORD PTR [eax-0x56ec14c]
  41a0d0:	cs sahf 
  41a0d2:	dec    esp
  41a0d3:	ret    
  41a0d4:	ins    BYTE PTR es:[edi],dx
  41a0d5:	jbe    0x41a061
  41a0d7:	cdq    
  41a0d8:	push   0x137c7b30
  41a0dd:	fs mov bl,0x5e
  41a0e0:	mov    edi,0xf474d824
  41a0e5:	(bad)  
  41a0e6:	hlt    
  41a0e7:	add    BYTE PTR [ecx],0x1c
  41a0ea:	mov    bh,0x7f
  41a0ec:	fisubr WORD PTR [edi-0x5b]
  41a0ef:	out    0x99,eax
  41a0f1:	sub    al,0xf3
  41a0f3:	dec    ecx
  41a0f4:	mov    cl,0x99
  41a0f6:	jo     0x41a0bf
  41a0f8:	sbb    BYTE PTR [eax+0x52],ah
  41a0fb:	and    DWORD PTR [esi],esp
  41a0fd:	xchg   ecx,eax
  41a0fe:	push   esi
  41a0ff:	mov    ds:0x4668a76c,eax
  41a104:	pop    es
  41a105:	xor    ecx,edi
  41a107:	sub    DWORD PTR [ecx+0x45],esi
  41a10a:	lock push cs
  41a10c:	test   DWORD PTR [ebp-0x3b],ebx
  41a10f:	retf   
  41a110:	inc    esp
  41a111:	mov    ebx,0x19105e2
  41a116:	mov    bh,0xe7
  41a118:	add    BYTE PTR [esi-0x5865adad],dl
  41a11e:	imul   ebp,DWORD PTR [eax],0x79f3e22f
  41a124:	adc    ch,BYTE PTR [ecx-0x16]
  41a127:	in     al,dx
  41a128:	in     al,dx
  41a129:	mov    esp,0x4bc599c6
  41a12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a12f:	push   ebp
  41a130:	test   al,0x7d
  41a132:	mov    esi,eax
  41a134:	int    0x72
  41a136:	or     eax,0x743fe329
  41a13b:	xlat   BYTE PTR cs:[ebx]
  41a13d:	out    0x46,eax
  41a13f:	retf   
  41a140:	push   ss
  41a141:	outs   dx,BYTE PTR ds:[esi]
  41a142:	retf   
  41a143:	fstp   TBYTE PTR [ecx]
  41a145:	sub    eax,0x192a87c1
  41a14a:	xchg   DWORD PTR [ebx-0xe],eax
  41a14d:	push   edi
  41a14e:	aaa    
  41a14f:	inc    ebp
  41a150:	(bad)  
  41a151:	jle    0x41a1b2
  41a153:	aad    0x53
  41a155:	mov    ah,0x63
  41a157:	xlat   BYTE PTR ds:[ebx]
  41a158:	lods   al,BYTE PTR ds:[esi]
  41a159:	or     eax,0xe58aa9f0
  41a15e:	or     bh,dh
  41a160:	loopne 0x41a1b2
  41a162:	mov    al,ds:0xbfd5546f
  41a167:	fcomp  DWORD PTR ds:0x8a986d2a
  41a16d:	jle    0x41a1e0
  41a16f:	xor    ah,BYTE PTR [eax]
  41a171:	fstp   QWORD PTR [eax]
  41a173:	mov    edx,0x991eb6af
  41a178:	mov    bh,0xca
  41a17a:	push   edi
  41a17b:	ins    DWORD PTR es:[edi],dx
  41a17c:	mov    edi,DWORD PTR [esi]
  41a17e:	outs   dx,BYTE PTR ds:[esi]
  41a17f:	push   0x44
  41a181:	inc    edx
  41a182:	cmp    dl,dl
  41a184:	dec    ecx
  41a185:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a187:	jg     0x41a120
  41a189:	dec    eax
  41a18a:	repnz enter 0xcea3,0x4b
  41a18f:	stos   BYTE PTR es:[edi],al
  41a190:	scas   eax,DWORD PTR es:[edi]
  41a191:	push   ds
  41a192:	gs jb  0x41a134
  41a195:	add    esp,DWORD PTR [edi+0x2]
  41a198:	outs   dx,BYTE PTR ds:[esi]
  41a199:	fst    QWORD PTR [edi+eax*8]
  41a19c:	sub    eax,0x9719770b
  41a1a1:	dec    ecx
  41a1a2:	push   cs
  41a1a3:	test   DWORD PTR [ebx-0x5e1b7796],0x6629eeba
  41a1ad:	and    esi,DWORD PTR [edi]
  41a1af:	mov    dh,0xc6
  41a1b1:	out    0xf8,eax
  41a1b3:	loopne 0x41a208
  41a1b5:	inc    esi
  41a1b6:	sub    DWORD PTR [eax+0x66],ebx
  41a1b9:	xchg   ecx,eax
  41a1ba:	fs add eax,0xa0335f4
  41a1c0:	add    esi,DWORD PTR [ecx]
  41a1c2:	inc    ecx
  41a1c3:	mov    eax,ds:0xacddd5b4
  41a1c8:	sbb    al,0x97
  41a1ca:	mov    ah,0xc6
  41a1cc:	ds in  eax,0xed
  41a1cf:	sub    ah,BYTE PTR [eax+0x66]
  41a1d2:	sahf   
  41a1d3:	rcr    BYTE PTR [eax+edi*4-0x3a],0x18
  41a1d8:	es mov edx,0xed02901d
  41a1de:	or     ebp,edx
  41a1e0:	fstp   TBYTE PTR [esi+0x6d]
  41a1e3:	inc    edx
  41a1e5:	iret   
  41a1e6:	push   ds
  41a1e7:	lea    edx,[ebp-0x171a2ece]
  41a1ed:	inc    edi
  41a1ee:	nop
  41a1ef:	ins    DWORD PTR es:[edi],dx
  41a1f0:	mov    cl,0x9f
  41a1f2:	lock pop edi
  41a1f4:	pop    es
  41a1f5:	mov    dl,0x40
  41a1f7:	enter  0x210,0x69
  41a1fb:	shl    DWORD PTR [eax+0x63],0x4d
  41a1ff:	xchg   ecx,eax
  41a200:	mov    cl,0x72
  41a202:	add    DWORD PTR [esi+edx*2-0x4d],0xfffffff6
  41a207:	pop    edi
  41a208:	fcom   DWORD PTR [eax+0x75]
  41a20b:	mov    al,ds:0x3b32fa6f
  41a210:	mov    cl,0x41
  41a212:	push   ebx
  41a213:	adc    eax,0xd0fd75e8
  41a218:	xor    al,0xf5
  41a21a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a21d:	fdiv   QWORD PTR [ebp+0x6819bc64]
  41a223:	push   0x51
  41a225:	xchg   edi,eax
  41a226:	mov    BYTE PTR [edx+0x26],ch
  41a229:	into   
  41a22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a22b:	in     al,dx
  41a22c:	mov    ebx,0x3d05d241
  41a231:	std    
  41a232:	jl     0x41a1ef
  41a234:	sbb    edx,DWORD PTR [edi]
  41a236:	cwde   
  41a237:	inc    edi
  41a238:	fstp   QWORD PTR [eax-0x47]
  41a23b:	ficomp WORD PTR [ebx-0x55]
  41a23e:	int    0x9f
  41a240:	push   edx
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	daa    
  41a243:	aam    0x4
  41a245:	addr16 aam 0x56
  41a248:	mov    ebx,0x9a981ee0
  41a24d:	inc    edi
  41a24e:	call   0x9f9a:0x35a14c76
  41a255:	in     eax,dx
  41a256:	loop   0x41a22b
  41a258:	adc    DWORD PTR [edi-0x45],ebx
  41a25b:	pop    ss
  41a25c:	dec    esp
  41a25d:	cs mov ch,0x60
  41a260:	mov    dl,BYTE PTR [ebx+0x13aeb0e6]
  41a266:	xchg   esp,eax
  41a267:	mov    WORD PTR [esi],cs
  41a269:	jmp    0x7f5ff0e9
  41a26e:	stc    
  41a26f:	inc    esp
  41a270:	push   ss
  41a271:	fsubrp st(0),st
  41a273:	add    edi,esi
  41a275:	jp     0x41a223
  41a277:	or     BYTE PTR [edx],ch
  41a279:	sub    eax,edx
  41a27b:	mov    ch,0x9d
  41a27d:	xchg   ebp,eax
  41a27e:	repz pop esp
  41a280:	cmp    al,0xac
  41a282:	inc    ebx
  41a283:	mov    al,0xf2
  41a285:	dec    ebp
  41a286:	xor    eax,0x2535379b
  41a28b:	popf   
  41a28c:	ins    BYTE PTR es:[edi],dx
  41a28d:	(bad)  
  41a28f:	add    al,0x85
  41a291:	jle    0x41a266
  41a293:	mov    al,ds:0x7b480a0d
  41a298:	aad    0xe0
  41a29a:	xor    al,0x9d
  41a29c:	sbb    al,0xae
  41a29e:	push   es
  41a29f:	mov    ah,0x95
  41a2a1:	in     eax,dx
  41a2a2:	and    bl,BYTE PTR [ecx]
  41a2a4:	add    al,0x86
  41a2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a7:	out    dx,al
  41a2a8:	ins    BYTE PTR es:[edi],dx
  41a2a9:	pop    esp
  41a2aa:	add    al,0x13
  41a2ac:	inc    eax
  41a2ad:	stc    
  41a2ae:	popa   
  41a2af:	iret   
  41a2b0:	mov    ss,WORD PTR [ebx]
  41a2b2:	fs dec eax
  41a2b4:	sub    ebx,DWORD PTR [ebp+0x70]
  41a2b7:	je     0x41a2e2
  41a2b9:	jle    0x41a2ef
  41a2bb:	popa   
  41a2bc:	not    esp
  41a2be:	adc    BYTE PTR [ebp+0x7b79a74d],ch
  41a2c4:	cmp    eax,0x82a2597c
  41a2c9:	jp     0x41a2d9
  41a2cb:	push   edi
  41a2cc:	leave  
  41a2cd:	adc    esi,DWORD PTR [edi]
  41a2cf:	rcr    BYTE PTR [esi*2-0x3b18c277],cl
  41a2d6:	les    esp,FWORD PTR [ecx+0x3f]
  41a2d9:	mov    es,WORD PTR [esi]
  41a2db:	jnp    0x41a2b7
  41a2dd:	pusha  
  41a2de:	in     eax,dx
  41a2df:	adc    DWORD PTR [eax+0x3e],0xbebf08b6
  41a2e6:	cmp    bh,bh
  41a2e8:	repz xor BYTE PTR [esi-0x4],0x81
  41a2ed:	out    0x5a,al
  41a2ef:	loope  0x41a2ab
  41a2f1:	xchg   ecx,eax
  41a2f2:	fdivr  DWORD PTR ds:0x70100bf8
  41a2f8:	mov    dh,0x92
  41a2fa:	std    
  41a2fb:	mov    ebx,0xec041ef4
  41a300:	sub    eax,DWORD PTR [eax+ecx*4-0x5b7942a6]
  41a307:	mov    ch,0x98
  41a309:	mov    bh,0xca
  41a30b:	data16 jbe 0x41a2ae
  41a30e:	mov    cl,0xdc
  41a310:	loope  0x41a2b4
  41a312:	fisub  WORD PTR [eax+0x534a67fd]
  41a318:	lods   eax,DWORD PTR ds:[esi]
  41a319:	enter  0xc325,0xd6
  41a31d:	add    ch,dh
  41a31f:	sbb    ebx,DWORD PTR [edx-0x5814b803]
  41a325:	bnd ret 0xf6a8
  41a329:	mov    edx,esp
  41a32b:	pop    ds
  41a32c:	gs pop eax
  41a32e:	adc    bh,BYTE PTR fs:[ecx+0x75]
  41a332:	sub    bl,cl
  41a334:	cmp    ebx,0xd78e9ca3
  41a33a:	mov    ch,0x5c
  41a33c:	adc    edx,DWORD PTR [edx+0x6c]
  41a33f:	cmp    eax,0xee3db7ea
  41a344:	cld    
  41a345:	scas   al,BYTE PTR es:[edi]
  41a346:	mov    cl,0xca
  41a348:	ja     0x41a308
  41a34a:	sub    al,BYTE PTR [esi]
  41a34c:	cmp    DWORD PTR [eax-0x49298ea4],ebp
  41a352:	(bad)  
  41a353:	cwde   
  41a354:	xor    BYTE PTR [eax+eiz*1],ch
  41a357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a358:	fistp  WORD PTR [edx+0x75]
  41a35b:	cmc    
  41a35c:	fstp   QWORD PTR [esp+ecx*8-0x600f9288]
  41a363:	dec    eax
  41a364:	add    edx,DWORD PTR [eax]
  41a366:	fs dec eax
  41a368:	xlat   BYTE PTR ds:[ebx]
  41a369:	(bad)  
  41a36a:	out    0x3b,eax
  41a36c:	mov    edx,DWORD PTR [ebp*4-0x202250aa]
  41a373:	push   ebx
  41a374:	jmp    0xc374cf98
  41a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a37a:	ins    BYTE PTR es:[edi],dx
  41a37b:	fild   QWORD PTR [edx]
  41a37d:	cmp    ecx,ecx
  41a37f:	mov    DWORD PTR [edi],ebp
  41a381:	push   ebp
  41a382:	(bad)  
  41a383:	push   edx
  41a384:	add    eax,esi
  41a386:	xchg   ebx,eax
  41a387:	popf   
  41a388:	xchg   edi,eax
  41a389:	sahf   
  41a38a:	xor    cl,bl
  41a38c:	fnstcw WORD PTR [ecx]
  41a38e:	inc    esi
  41a38f:	ficom  WORD PTR [ebx+edi*8-0x17]
  41a393:	and    BYTE PTR [ebp+0x319d7b27],al
  41a399:	push   eax
  41a39a:	xor    esi,ebp
  41a39c:	jle    0x41a3ed
  41a39e:	sub    ecx,DWORD PTR [eax-0x4a5569bc]
  41a3a4:	dec    ebp
  41a3a5:	(bad)  
  41a3a6:	loopne 0x41a3ca
  41a3a8:	daa    
  41a3a9:	and    DWORD PTR [edx-0x6d],esp
  41a3ac:	fwait
  41a3ad:	pop    es
  41a3ae:	ret    0x78cb
  41a3b1:	cmp    al,0xed
  41a3b3:	xor    eax,0x8e5f805b
  41a3b8:	dec    ebx
  41a3b9:	fstp   st(2)
  41a3bb:	adc    cl,bl
  41a3bd:	div    DWORD PTR [ebx+0x6e774d73]
  41a3c3:	fnsave [ecx+0x1a]
  41a3c6:	mov    DWORD PTR [ecx-0x30],edi
  41a3c9:	push   eax
  41a3ca:	mov    esi,0x807f20f6
  41a3cf:	nop
  41a3d0:	xchg   esp,eax
  41a3d1:	gs jmp 0x17d328e4
  41a3d7:	push   cs
  41a3d8:	xchg   esp,eax
  41a3d9:	arpl   bx,bp
  41a3db:	lea    esi,[edi]
  41a3dd:	(bad)  
  41a3de:	mov    bh,0x97
  41a3e0:	sahf   
  41a3e1:	pop    ebx
  41a3e2:	fdiv   DWORD PTR [edi]
  41a3e4:	(bad)  
  41a3e5:	mov    ebx,0xf484e86f
  41a3ea:	pop    ebx
  41a3eb:	jbe    0x41a391
  41a3ed:	out    0xd4,eax
  41a3ef:	mov    edx,0x12272d75
  41a3f4:	jo     0x41a3bd
  41a3f6:	cmp    dl,al
  41a3f8:	adc    bh,BYTE PTR [edi-0xb8ced6c]
  41a3fe:	aad    0x33
  41a400:	sbb    DWORD PTR [ebp+0x34],eax
  41a403:	stos   BYTE PTR es:[edi],al
  41a404:	cli    
  41a405:	in     eax,0x2e
  41a407:	nop
  41a408:	dec    esi
  41a409:	rol    DWORD PTR [ecx],0xab
  41a40c:	xchg   esp,eax
  41a40d:	mov    esp,0xe58e0265
  41a412:	fs push edx
  41a414:	inc    bl
  41a416:	mov    DWORD PTR [edi],ebx
  41a418:	es aam 0x78
  41a41b:	jae    0x41a46d
  41a41d:	inc    ebp
  41a41e:	dec    edi
  41a41f:	inc    DWORD PTR [edi+0xf]
  41a422:	iret   
  41a423:	fstp   QWORD PTR [ebx+0x64]
  41a426:	outs   dx,BYTE PTR ds:[esi]
  41a427:	ficom  DWORD PTR ds:0x8781157d
  41a42d:	pop    ds
  41a42e:	scas   eax,DWORD PTR es:[edi]
  41a42f:	imul   cx,WORD PTR [ecx+0x30],0xffa3
  41a434:	dec    ebx
  41a435:	and    al,0xb4
  41a437:	sub    bh,bh
  41a439:	sub    al,0xac
  41a43b:	lods   al,BYTE PTR ds:[esi]
  41a43c:	stos   DWORD PTR es:[edi],eax
  41a43d:	cmc    
  41a43e:	inc    esi
  41a43f:	jp     0x41a4ac
  41a441:	shl    esp,0x7
  41a444:	or     bh,BYTE PTR [ebp-0x35ae81d6]
  41a44a:	cmp    al,0x1a
  41a44c:	push   ebp
  41a44d:	add    ebp,DWORD PTR [edi]
  41a44f:	xchg   DWORD PTR [esi+0x1],esp
  41a452:	xor    bl,BYTE PTR [ecx-0x59]
  41a455:	mov    al,0x5c
  41a457:	xor    al,0x21
  41a459:	mov    ebx,0x9cae77f5
  41a45e:	pop    esi
  41a45f:	inc    ecx
  41a460:	add    DWORD PTR [eax-0x3b],edx
  41a463:	out    dx,al
  41a464:	in     al,dx
  41a465:	jle    0x41a42f
  41a467:	mov    DWORD PTR [edi],ecx
  41a469:	sub    DWORD PTR [esi],ebx
  41a46b:	loope  0x41a405
  41a46d:	mov    edi,0xb30560fe
  41a472:	lods   al,BYTE PTR ds:[esi]
  41a473:	cmp    cl,BYTE PTR [ecx-0x794fa92c]
  41a479:	cmc    
  41a47a:	ret    
  41a47b:	sub    BYTE PTR [ecx],bl
  41a47d:	test   BYTE PTR [edi+0x18],bh
  41a480:	xchg   esi,eax
  41a481:	jl     0x41a482
  41a483:	aad    0xcd
  41a485:	stos   BYTE PTR es:[edi],al
  41a486:	mov    cl,0x57
  41a488:	mov    ecx,0x23846f2b
  41a48d:	aad    0xf
  41a48f:	mov    BYTE PTR [ecx],dl
  41a491:	inc    eax
  41a492:	inc    edi
  41a493:	add    ah,al
  41a495:	icebp  
  41a496:	repz or eax,0xbe44eebe
  41a49c:	mov    ebx,0xc7d7911b
  41a4a1:	add    esp,edx
  41a4a3:	imul   edx,DWORD PTR [eax],0xd6913add
  41a4a9:	or     dl,BYTE PTR [esi+eax*2-0x3c]
  41a4ad:	test   al,ch
  41a4af:	daa    
  41a4b0:	into   
  41a4b1:	arpl   WORD PTR [ecx-0x934ebf],sp
  41a4b7:	hlt    
  41a4b8:	loop   0x41a48c
  41a4ba:	inc    edi
  41a4bb:	mov    ebp,DWORD PTR [ecx+0x37]
  41a4be:	enter  0xebf3,0xe2
  41a4c2:	xor    bl,BYTE PTR [edx]
  41a4c4:	imul   edx,DWORD PTR [esi+0x2aa0edfd],0x422e07bd
  41a4ce:	repz push ss
  41a4d0:	imul   eax,DWORD PTR [edi],0x53653ffb
  41a4d6:	(bad)  
  41a4d7:	jns    0x41a4e5
  41a4d9:	and    DWORD PTR [edx-0x70e56af9],0x35
  41a4e0:	and    ebx,DWORD PTR [ebx+0x30b3ee68]
  41a4e6:	hlt    
  41a4e7:	sbb    al,0xe8
  41a4e9:	ins    DWORD PTR es:[edi],dx
  41a4ea:	xor    DWORD PTR ds:0x1b287917,esi
  41a4f0:	sub    eax,DWORD PTR [ebp-0x66]
  41a4f3:	push   es
  41a4f4:	cmp    al,0x7c
  41a4f6:	add    cl,BYTE PTR [eax+0x0]
  41a4f9:	mov    esi,DWORD PTR ds:0x24b36a83
  41a4ff:	cld    
  41a500:	dec    esp
  41a501:	add    al,0xd7
  41a503:	mov    eax,ds:0x65c456c9
  41a508:	aaa    
  41a509:	inc    esp
  41a50a:	pop    eax
  41a50b:	jne    0x41a4a2
  41a50d:	xcrypt-cbc (bad)
  41a50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a50f:	pop    ss
  41a510:	jae    0x41a58b
  41a512:	add    al,0xc5
  41a514:	je     0x41a579
  41a516:	scas   eax,DWORD PTR es:[edi]
  41a517:	test   eax,0x32ca6486
  41a51c:	rcr    DWORD PTR [edi+0x13],0x5e
  41a520:	mov    dh,0xda
  41a522:	jns    0x41a590
  41a524:	or     edi,ecx
  41a526:	push   edi
  41a527:	inc    ebx
  41a528:	dec    ebx
  41a529:	enter  0x9594,0xf1
  41a52d:	ja     0x41a57e
  41a52f:	mov    al,0x6c
  41a531:	xchg   edx,eax
  41a532:	xor    esp,esp
  41a534:	sub    DWORD PTR [edi+0x59],esi
  41a537:	repnz xor BYTE PTR [ecx-0x1de120c4],cl
  41a53e:	ins    BYTE PTR es:[edi],dx
  41a53f:	lds    esp,FWORD PTR [esi+0x75]
  41a542:	mov    cl,0xf
  41a544:	xlat   BYTE PTR ds:[ebx]
  41a545:	mov    edx,0x7f54710b
  41a54a:	enter  0xee36,0x2b
  41a54e:	in     eax,dx
  41a54f:	jns    0x41a4e6
  41a551:	add    BYTE PTR [eax+eiz*8],al
  41a554:	fwait
  41a555:	jge    0x41a56c
  41a557:	std    
  41a558:	pop    es
  41a559:	sbb    eax,0xf3bd57ac
  41a55e:	adc    DWORD PTR [edx-0x2369d671],eax
  41a564:	pop    ecx
  41a565:	fiadd  DWORD PTR [ebp+0x61]
  41a568:	sub    dh,BYTE PTR [ecx]
  41a56a:	dec    ebx
  41a56b:	pop    ecx
  41a56c:	sbb    eax,0x55eaab30
  41a571:	or     eax,0x1479f0a
  41a576:	std    
  41a577:	push   eax
  41a578:	(bad)  
  41a579:	fidiv  WORD PTR [ebx+0x6e]
  41a57c:	cmp    cl,BYTE PTR [edx+ecx*1-0x13595551]
  41a583:	sahf   
  41a584:	ret    0xe052
  41a587:	mov    ah,0x41
  41a589:	jge    0x41a5ab
  41a58b:	sub    dh,al
  41a58d:	pop    ebx
  41a58e:	pusha  
  41a58f:	lods   al,BYTE PTR ds:[esi]
  41a590:	mov    ecx,0x245dd579
  41a595:	das    
  41a596:	and    DWORD PTR [edi-0xe42a5ff],0x2da224ab
  41a5a0:	retf   0xf47a
  41a5a3:	mov    ebx,0x5e968b66
  41a5a8:	cld    
  41a5a9:	test   eax,0xd2610053
  41a5ae:	jge    0x41a5f4
  41a5b0:	test   DWORD PTR [edi+esi*2-0x45],ecx
  41a5b4:	lahf   
  41a5b5:	int3   
  41a5b6:	fwait
  41a5b7:	imul   esp,DWORD PTR [esp+edx*2+0x34],0xfffffff1
  41a5bc:	sub    al,0xd4
  41a5be:	mov    DWORD PTR [edi-0x2e],0xc968a172
  41a5c5:	xor    ebx,edi
  41a5c7:	lock add DWORD PTR [edi+eax*2],0x44
  41a5cc:	jno    0x41a58b
  41a5ce:	sbb    ebx,edx
  41a5d0:	addr16 lahf 
  41a5d2:	cmp    BYTE PTR [ebx+0x5dedc39b],0x36
  41a5d9:	push   eax
  41a5da:	cmp    al,ch
  41a5dc:	outs   dx,BYTE PTR ds:[esi]
  41a5dd:	jns    0x41a5a8
  41a5df:	cmp    BYTE PTR [ecx+0xe],dh
  41a5e2:	je     0x41a56c
  41a5e4:	out    0x6b,eax
  41a5e6:	sbb    DWORD PTR [eax+edx*8],edi
  41a5e9:	imul   eax,DWORD PTR [ecx-0x6bc0e8fc],0xf0074a5c
  41a5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f4:	push   0x5460a1c8
  41a5f9:	cmp    eax,0x83eaabaa
  41a5fe:	inc    esp
  41a5ff:	pop    eax
  41a600:	sbb    al,0x1c
  41a602:	dec    ecx
  41a603:	jl     0x41a5d7
  41a605:	stos   DWORD PTR es:[edi],eax
  41a606:	(bad)  
  41a607:	cmp    ecx,DWORD PTR [ebx-0x5fcf3ab4]
  41a60d:	and    DWORD PTR [eax+eax*8+0x2d2a87a],esp
  41a614:	sbb    BYTE PTR [ebx],dl
  41a616:	push   edx
  41a617:	popa   
  41a618:	jg     0x41a636
  41a61a:	dec    ebp
  41a61b:	cmp    BYTE PTR [ebx-0x7925396c],ch
  41a621:	cmp    DWORD PTR [edx],esi
  41a623:	pop    esp
  41a624:	leave  
  41a625:	mov    ebx,0xc5d30060
  41a62a:	lock enter 0x3645,0x50
  41a62f:	cmp    esp,DWORD PTR [edx+0x23b63656]
  41a635:	cmp    al,0xa6
  41a637:	or     DWORD PTR [eax+0x2b],edx
  41a63a:	cmp    esi,DWORD PTR [ecx]
  41a63c:	push   edi
  41a63d:	or     DWORD PTR [edi-0x4],ecx
  41a640:	and    al,0x67
  41a642:	mov    WORD PTR [ecx+esi*1-0x66],ds
  41a646:	or     DWORD PTR [edx-0x5e],eax
  41a649:	int3   
  41a64a:	fldcw  WORD PTR [ebp-0x4c]
  41a64d:	inc    ecx
  41a64e:	addr16 cmp al,0x3d
  41a651:	imul   esi,esi,0xe10750e5
  41a657:	es ins DWORD PTR es:[edi],dx
  41a659:	nop
  41a65a:	neg    DWORD PTR [esi-0x4a123ac7]
  41a660:	arpl   WORD PTR [edi+0x47],si
  41a663:	nop
  41a664:	popa   
  41a665:	sub    BYTE PTR [esi-0x2b],ah
  41a668:	jg     0x41a68b
  41a66a:	bound  edx,QWORD PTR [ebp-0x4befd671]
  41a670:	mov    ecx,0xad31059c
  41a675:	loop   0x41a6a8
  41a677:	mov    esi,DWORD PTR [eax-0x21]
  41a67a:	outs   dx,BYTE PTR ds:[esi]
  41a67b:	pop    ss
  41a67c:	push   esi
  41a67d:	enter  0x647b,0x2f
  41a681:	push   ecx
  41a682:	jg     0x41a6f9
  41a684:	das    
  41a685:	std    
  41a686:	test   eax,0x5230cdd3
  41a68b:	pop    ebx
  41a68c:	cmp    DWORD PTR [eax+0x6d7f3693],ebx
  41a692:	scas   eax,DWORD PTR es:[edi]
  41a693:	fbld   TBYTE PTR [edi+0x28]
  41a696:	adc    al,0xcf
  41a699:	pop    edi
  41a69a:	push   ebp
  41a69b:	jp     0x41a70f
  41a69d:	sub    eax,0xd6ae914e
  41a6a2:	pop    esi
  41a6a3:	or     edi,DWORD PTR [edi]
  41a6a5:	sub    ebx,ebp
  41a6a7:	mov    dh,0xb8
  41a6a9:	push   0x78
  41a6ab:	add    al,0xff
  41a6ad:	je     0x41a67b
  41a6af:	jp     0x41a635
  41a6b1:	imul   ebx,ebp,0x4076677
  41a6b7:	out    0x30,al
  41a6b9:	dec    ebp
  41a6ba:	add    BYTE PTR [ecx],cl
  41a6bc:	sbb    bh,BYTE PTR [edi+0x2032d9e4]
  41a6c2:	cmp    al,ah
  41a6c4:	sub    dl,dh
  41a6c6:	lods   al,BYTE PTR ds:[esi]
  41a6c7:	cld    
  41a6c8:	enter  0x4ebb,0x88
  41a6cc:	icebp  
  41a6cd:	mov    eax,0xe869752d
  41a6d2:	lods   al,BYTE PTR ds:[esi]
  41a6d3:	lods   eax,DWORD PTR ds:[esi]
  41a6d4:	repnz test al,0xc5
  41a6d7:	mov    WORD PTR [esi+esi*8-0x436018c2],cs
  41a6de:	addr16 jne 0x41a69a
  41a6e1:	fdivr  QWORD PTR [eax+0x3b47bf4a]
  41a6e7:	std    
  41a6e8:	(bad)  
  41a6e9:	cld    
  41a6ea:	jecxz  0x41a6c1
  41a6ec:	and    BYTE PTR [ebx+edx*2-0x2e],bh
  41a6f0:	pop    edi
  41a6f1:	xchg   BYTE PTR [ebp+0x629435e8],ch
  41a6f7:	mov    eax,0x95c2c703
  41a6fc:	sbb    edx,DWORD PTR [ebx]
  41a6fe:	push   ds
  41a6ff:	sub    ch,bh
  41a701:	xchg   edi,eax
  41a702:	xor    edx,edi
  41a704:	test   BYTE PTR [edi-0x6],ah
  41a707:	sbb    dh,BYTE PTR [ebx+0x15]
  41a70a:	and    DWORD PTR [edx+0x18],ebp
  41a70d:	loopne 0x41a72d
  41a70f:	js     0x41a763
  41a711:	pop    ebp
  41a712:	mov    esp,0xb86c7271
  41a717:	mov    ch,BYTE PTR [ebx-0x386ee9f2]
  41a71d:	xchg   esi,eax
  41a71e:	jns    0x41a74b
  41a720:	mov    BYTE PTR [ecx-0x61e53c66],0x1c
  41a727:	ins    BYTE PTR es:[edi],dx
  41a728:	call   0x29db2e92
  41a72d:	jbe    0x41a6ed
  41a72f:	push   ss
  41a730:	push   esp
  41a731:	sub    eax,0x9b5e3126
  41a736:	pushf  
  41a737:	jl     0x41a6dc
  41a739:	pop    ds
  41a73a:	add    BYTE PTR [edi+0x14432503],ah
  41a740:	pop    ebp
  41a741:	dec    ebx
  41a742:	mov    ah,0x21
  41a744:	adc    eax,0xf0b90bd3
  41a749:	lods   eax,DWORD PTR ds:[esi]
  41a74a:	jno    0x41a6fe
  41a74c:	pop    eax
  41a74d:	gs out dx,al
  41a74f:	ret    0xe4c1
  41a752:	push   0x7e
  41a754:	adc    bh,BYTE PTR [edx+0x2900cc88]
  41a75a:	dec    edx
  41a75b:	mov    ch,0xfd
  41a75d:	mov    ds,WORD PTR [edx]
  41a75f:	jnp    0x41a701
  41a761:	cmc    
  41a762:	in     al,0xa3
  41a764:	push   es
  41a765:	test   BYTE PTR [edi],bh
  41a767:	loope  0x41a6e9
  41a769:	xchg   esp,eax
  41a76a:	push   eax
  41a76b:	ficomp DWORD PTR ds:0x6c502fc
  41a771:	rol    BYTE PTR [edi+0x41],0xfb
  41a775:	out    0xb5,eax
  41a777:	and    al,0x3e
  41a779:	les    esi,FWORD PTR [ecx]
  41a77b:	dec    ebx
  41a77c:	fild   QWORD PTR [esi+0x248ca011]
  41a782:	lods   eax,DWORD PTR ds:[esi]
  41a784:	jno    0x41a73c
  41a786:	dec    esi
  41a787:	pop    ss
  41a788:	and    al,0x31
  41a78a:	lods   eax,DWORD PTR ds:[esi]
  41a78b:	rcr    edi,0x69
  41a78e:	sub    al,0xae
  41a790:	int    0xcf
  41a792:	add    dh,BYTE PTR [edx]
  41a794:	jecxz  0x41a7d9
  41a796:	(bad)  
  41a797:	xor    esp,eax
  41a799:	shr    DWORD PTR [eax+0x78],1
  41a79c:	push   edx
  41a79d:	leave  
  41a79e:	adc    eax,0x768a635d
  41a7a3:	xchg   esp,eax
  41a7a4:	mov    al,ds:0x59c80c68
  41a7a9:	adc    eax,0x4f15692f
  41a7ae:	sbb    bh,BYTE PTR [esi]
  41a7b0:	not    esi
  41a7b2:	cmp    DWORD PTR [ecx+0x2d8840f],esi
  41a7b8:	sbb    eax,0x2b4f02c1
  41a7bd:	repnz mov ss,WORD PTR [ebx]
  41a7c0:	push   es
  41a7c1:	(bad)  
  41a7c3:	and    eax,0x7f3c36ab
  41a7c8:	scas   al,BYTE PTR es:[edi]
  41a7c9:	mov    al,0x91
  41a7cb:	mov    bl,0x76
  41a7cd:	mov    ecx,0x6e4b05e7
  41a7d2:	in     eax,0x1f
  41a7d4:	stos   BYTE PTR es:[edi],al
  41a7d5:	mov    BYTE PTR [edx-0x44],dh
  41a7d8:	xor    eax,edi
  41a7da:	ret    0xa75d
  41a7dd:	shl    DWORD PTR [bx+di],cl
  41a7e0:	push   ds
  41a7e1:	xlat   BYTE PTR ds:[ebx]
  41a7e2:	cwde   
  41a7e3:	inc    ecx
  41a7e4:	aaa    
  41a7e5:	push   0xffffff93
  41a7e7:	leave  
  41a7e8:	push   es
  41a7e9:	or     esp,DWORD PTR [eax+0xf]
  41a7ec:	mov    eax,esp
  41a7ee:	sti    
  41a7ef:	mov    ds:0x768488b3,eax
  41a7f4:	sbb    al,0xf
  41a7f6:	icebp  
  41a7f7:	xor    al,0xd6
  41a7f9:	daa    
  41a7fa:	fadd   DWORD PTR ds:0xbb9ca9b5
  41a800:	pushf  
  41a801:	mov    bh,0x4c
  41a803:	xchg   edx,eax
  41a804:	(bad)  
  41a805:	mov    esp,0x67d44f14
  41a80a:	in     eax,0x7c
  41a80c:	call   0xbe40:0x2b94d1e9
  41a813:	and    eax,0xe8b30c
  41a818:	mov    al,ds:0xb8b0cf93
  41a81d:	stos   BYTE PTR es:[edi],al
  41a81e:	dec    ebp
  41a81f:	inc    ecx
  41a820:	mov    ds:0x213e8dfb,eax
  41a825:	call   0x741e:0xe4b37e87
  41a82c:	imul   edi,esp,0x23
  41a82f:	test   al,0x3a
  41a831:	dec    ecx
  41a832:	iret   
  41a833:	cmp    dl,BYTE PTR [ebx+eax*4]
  41a836:	out    dx,al
  41a837:	lock mov ds:0xfcceacf1,al
  41a83d:	mov    dl,0x77
  41a83f:	push   es
  41a840:	(bad)  
  41a841:	dec    edx
  41a842:	push   ebx
  41a843:	andps  xmm0,XMMWORD PTR [eax]
  41a846:	mov    eax,0x30ec5d85
  41a84b:	pop    fs
  41a84d:	pop    ebx
  41a84e:	or     eax,0xfbffc412
  41a853:	out    dx,al
  41a854:	push   esp
  41a855:	pop    edx
  41a856:	xor    al,BYTE PTR [ebp-0x5b]
  41a859:	pop    esp
  41a85a:	mov    ebx,0x7461ca19
  41a85f:	add    BYTE PTR [ebp+0x40eb54be],dl
  41a865:	cs push ds
  41a867:	push   ecx
  41a868:	cmp    eax,0xe261ab72
  41a86d:	add    eax,0x49a6686
  41a872:	sub    ecx,edi
  41a874:	in     al,0x4a
  41a876:	xor    al,0x94
  41a878:	fcmovnu st,st(4)
  41a87a:	hlt    
  41a87b:	movups xmm4,XMMWORD PTR [eax]
  41a87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a87f:	imul   eax,DWORD PTR gs:[ebx+0x30346e38],0xffffffac
  41a887:	in     eax,0x71
  41a889:	fmul   DWORD PTR [edi+0x72]
  41a88c:	lea    eax,[ebp-0x6b]
  41a88f:	dec    edx
  41a890:	sub    al,0x68
  41a892:	jg     0x41a824
  41a894:	ja     0x41a87c
  41a896:	add    dh,ch
  41a898:	pop    ebx
  41a899:	loope  0x41a87b
  41a89b:	jg     0x41a88c
  41a89d:	push   esi
  41a89e:	in     al,0x2c
  41a8a0:	inc    eax
  41a8a1:	das    
  41a8a2:	cmp    cl,0x45
  41a8a5:	add    eax,0x2ffc8db5
  41a8aa:	dec    eax
  41a8ab:	mov    eax,0xd55b66eb
  41a8b0:	loopne 0x41a874
  41a8b2:	mov    ah,0x42
  41a8b4:	add    ch,BYTE PTR [ebp+0x6292beea]
  41a8ba:	nop
  41a8bb:	pop    ss
  41a8bc:	dec    esi
  41a8bd:	rol    BYTE PTR [eax],0x6a
  41a8c0:	retf   
  41a8c1:	push   ecx
  41a8c2:	pop    ebx
  41a8c3:	test   BYTE PTR [edx+edi*4+0x63],ch
  41a8c7:	aam    0xa1
  41a8c9:	clc    
  41a8ca:	mov    fs,WORD PTR [esi-0x6da79c30]
  41a8d0:	test   eax,0x44da66c6
  41a8d5:	in     eax,dx
  41a8d6:	or     DWORD PTR ds:0xa57343ce,edi
  41a8dc:	and    ah,BYTE PTR [edi+0x6c7e17b9]
  41a8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e3:	inc    BYTE PTR [edx]
  41a8e5:	in     al,0x9
  41a8e7:	push   cs
  41a8e8:	adc    esp,esp
  41a8ea:	mov    dh,0xe
  41a8ec:	jmp    0xc9fa629a
  41a8f1:	push   ebx
  41a8f2:	icebp  
  41a8f3:	mov    ebx,0x89a0389b
  41a8f8:	ficomp DWORD PTR [esp+esi*2]
  41a8fb:	or     esp,DWORD PTR [eax]
  41a8fd:	jno    0x41a8d5
  41a8ff:	scas   al,BYTE PTR es:[edi]
  41a900:	(bad)  
  41a901:	rol    BYTE PTR [edi-0x2d],cl
  41a904:	icebp  
  41a905:	jp     0x41a95b
  41a907:	adc    ch,dl
  41a909:	(bad)
  41a90c:	jge    0x41a8b6
  41a90e:	mov    ah,0xaa
  41a910:	inc    BYTE PTR [ebx-0x61f40b3f]
  41a916:	cwde   
  41a917:	sti    
  41a918:	sub    eax,0xf3888db0
  41a91d:	lds    ebp,FWORD PTR [esi+0x34]
  41a920:	jno    0x41a995
  41a922:	dec    BYTE PTR [esp+ecx*2-0x6e]
  41a926:	fisub  DWORD PTR [ebx]
  41a928:	sbb    ebp,ebp
  41a92a:	jp     0x41a9a7
  41a92c:	xor    ecx,DWORD PTR [ebp-0x6afbe90f]
  41a932:	jns    0x41a90f
  41a934:	ja     0x41a8e1
  41a936:	mov    ?,WORD PTR [edx-0x75922b0]
  41a93c:	hlt    
  41a93d:	sub    eax,0x5ffe44b
  41a942:	xchg   esp,eax
  41a943:	xchg   edi,eax
  41a944:	rcl    BYTE PTR ds:[edx+0x1738d81e],1
  41a94b:	shl    DWORD PTR [esp+edx*2+0x31],1
  41a94f:	outs   dx,DWORD PTR ds:[esi]
  41a950:	cmp    eax,0xccbce8d
  41a955:	mov    ecx,DWORD PTR [esi]
  41a957:	imul   ecx,DWORD PTR cs:[edx+0x2c8fe13f],0xe85d1fa2
  41a962:	push   0xffffffb9
  41a964:	inc    ebx
  41a965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a966:	xchg   edx,eax
  41a967:	jle    0x41a9e3
  41a969:	dec    edi
  41a96a:	jo     0x41a95e
  41a96c:	add    dl,al
  41a96e:	xchg   dh,dh
  41a970:	leave  
  41a971:	mov    cl,0xd8
  41a973:	loop   0x41a9d5
  41a975:	ret    0x9fe3
  41a978:	inc    eax
  41a979:	cld    
  41a97a:	dec    BYTE PTR [eax]
  41a97c:	adc    BYTE PTR [ebx-0x49],0x70
  41a980:	into   
  41a981:	or     dl,bh
  41a983:	mov    cl,0x6f
  41a985:	(bad)  
  41a986:	adc    eax,ebp
  41a988:	lods   al,BYTE PTR ds:[esi]
  41a989:	and    eax,0xf7763996
  41a98e:	cs pop esi
  41a990:	fimul  DWORD PTR [esi+0x78]
  41a993:	mov    ch,0x5c
  41a995:	mov    ds:0xee2470b6,eax
  41a99a:	and    BYTE PTR [esi],0x48
  41a99d:	repz xchg ebx,eax
  41a99f:	and    eax,0x1f830c80
  41a9a4:	adc    eax,0xfb24cf8f
  41a9a9:	jbe    0x41a93e
  41a9ab:	mov    dh,0x25
  41a9ad:	mov    eax,0x1037c9a2
  41a9b2:	jb     0x41a963
  41a9b4:	mov    ds:0xe2a995ed,eax
  41a9b9:	not    BYTE PTR [edx+0x36]
  41a9bc:	add    eax,0x8f776a30
  41a9c1:	shl    DWORD PTR [ebx-0x7e],cl
  41a9c4:	or     DWORD PTR [edx],edi
  41a9c6:	mov    ss,esi
  41a9c8:	bound  ebx,QWORD PTR [eax+0x19220323]
  41a9ce:	jle    0x41a9cd
  41a9d0:	or     eax,esp
  41a9d2:	sub    edi,DWORD PTR [eax]
  41a9d4:	mov    dh,0x1d
  41a9d6:	mov    eax,ds:0x6ac5a54d
  41a9db:	add    DWORD PTR [edx-0x535556ee],0xb09de90f
  41a9e5:	rol    DWORD PTR [esi-0x5b],0xe3
  41a9e9:	fmul   st,st(6)
  41a9eb:	leave  
  41a9ec:	popf   
  41a9ed:	xor    BYTE PTR [ebx],cl
  41a9ef:	mov    al,ds:0xf2c52476
  41a9f4:	pop    esi
  41a9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f6:	mov    ebx,0x8352b481
  41a9fb:	jno    0x41aa65
  41a9fd:	sar    ecx,1
  41a9ff:	out    dx,eax
  41aa00:	hlt    
  41aa01:	xchg   ecx,eax
  41aa02:	jmp    0x41a9f3
  41aa04:	call   0xbc9d2c6c
  41aa09:	inc    edi
  41aa0a:	dec    esi
  41aa0b:	out    0x22,al
  41aa0d:	mov    ds:0x7d148eb9,al
  41aa12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa13:	sbb    al,0x3c
  41aa15:	dec    esp
  41aa16:	ds pop edi
  41aa18:	es clc 
  41aa1a:	jg     0x41aa45
  41aa1c:	aas    
  41aa1d:	std    
  41aa1e:	jecxz  0x41aa1e
  41aa20:	xor    BYTE PTR [edi-0x4e750a62],0x80
  41aa27:	xchg   edi,eax
  41aa28:	pusha  
  41aa29:	xor    eax,0xacb0d329
  41aa2e:	jmp    0x5451:0xee13150
  41aa35:	out    dx,al
  41aa36:	dec    esi
  41aa37:	add    al,0xd9
  41aa39:	dec    edi
  41aa3a:	test   DWORD PTR [esi-0x5f4df699],edx
  41aa40:	pushf  
  41aa41:	xchg   ebx,eax
  41aa42:	call   0xcbe49c81
  41aa47:	cli    
  41aa48:	inc    ebx
  41aa49:	pusha  
  41aa4a:	adc    dh,bh
  41aa4c:	sub    BYTE PTR [ebp-0x1b0f1f09],dh
  41aa52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa53:	shl    BYTE PTR [esi+0x68],cl
  41aa56:	test   ecx,ebp
  41aa58:	adc    al,0xce
  41aa5a:	addr16 (bad) 
  41aa5d:	adc    dh,bl
  41aa5f:	shr    ebx,0x34
  41aa62:	mov    ch,0xe0
  41aa64:	test   BYTE PTR [ebp*2+0x6958641a],0x8a
  41aa6c:	(bad)  
  41aa6d:	icebp  
  41aa6e:	ret    0x1b8
  41aa71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa72:	inc    ebx
  41aa73:	xor    eax,0xc2569960
  41aa78:	add    al,bl
  41aa7a:	or     eax,0x3da87b23
  41aa7f:	out    dx,al
  41aa80:	pop    esi
  41aa81:	popf   
  41aa82:	(bad)  
  41aa83:	jb     0x41aa30
  41aa85:	or     DWORD PTR [edx],edx
  41aa87:	mov    ebp,0xd1383a0d
  41aa8c:	dec    edx
  41aa8d:	test   BYTE PTR [eax+0x11],0xb7
  41aa91:	dec    edi
  41aa92:	sub    eax,esi
  41aa94:	xchg   ebx,eax
  41aa95:	aas    
  41aa96:	inc    ecx
  41aa97:	fmul   QWORD PTR [eax+0x32]
  41aa9a:	(bad)  
  41aa9b:	and    DWORD PTR [edx+eax*8+0x45],ebx
  41aa9f:	and    dl,al
  41aaa1:	xlat   BYTE PTR ds:[ebx]
  41aaa2:	sti    
  41aaa3:	push   edi
  41aaa4:	repnz mov edx,edx
  41aaa7:	pop    ebp
  41aaa8:	out    dx,al
  41aaa9:	xlat   BYTE PTR ds:[ebx]
  41aaaa:	aam    0x60
  41aaac:	xchg   edi,eax
  41aaad:	or     ah,BYTE PTR [ebx-0x43]
  41aab0:	mov    cl,0x91
  41aab2:	inc    ebp
  41aab3:	xor    DWORD PTR [ecx+ebp*1+0xaf0c3f3],esi
  41aaba:	and    ah,cl
  41aabc:	sub    DWORD PTR [ebx+0x11fc3901],ecx
  41aac2:	jno    0x41ab3d
  41aac4:	jb     0x41ab24
  41aac6:	push   es
  41aac7:	les    ecx,FWORD PTR [ebp-0x4f019dc1]
  41aacd:	fincstp 
  41aacf:	data16 xor dl,BYTE PTR [esp+ebx*4]
  41aad3:	jecxz  0x41aa88
  41aad5:	mov    bl,0xd
  41aad7:	fwait
  41aad8:	test   al,0xd3
  41aada:	cs (bad) 
  41aadc:	or     eax,0xdd3da399
  41aae1:	lock and eax,0x11846db7
  41aae7:	mov    ss,WORD PTR [ecx-0x71b8dfb6]
  41aaed:	inc    edi
  41aaee:	sub    eax,0x9fade0d0
  41aaf3:	pop    ds
  41aaf4:	test   BYTE PTR [esi],cl
  41aaf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaf7:	jo     0x41ab22
  41aaf9:	mov    ebp,0xfb4b76cd
  41aafe:	mov    esi,0x642a5926
  41ab03:	or     eax,DWORD PTR [edx-0x71]
  41ab06:	popf   
  41ab07:	enter  0xc324,0xd5
  41ab0b:	loopne 0x41ab3f
  41ab0d:	cld    
  41ab0e:	mov    bl,BYTE PTR [ebx-0x7dee40f8]
  41ab14:	and    bl,BYTE PTR [ebx+0x74]
  41ab17:	mov    ch,0x44
  41ab19:	adc    eax,0xfa8b62a
  41ab1e:	cmp    DWORD PTR [ebp+0x7df11053],ecx
  41ab24:	es retf 
  41ab26:	int    0xff
  41ab28:	aas    
  41ab29:	in     eax,dx
  41ab2a:	cmp    al,0x2c
  41ab2c:	push   ebx
  41ab2d:	(bad)  
  41ab2e:	cdq    
  41ab2f:	test   al,0x94
  41ab31:	push   cx
  41ab33:	loopne 0x41ab0a
  41ab35:	fdivrp st(1),st
  41ab37:	push   esp
  41ab38:	push   cs
  41ab39:	or     ah,BYTE PTR ds:0x63253e73
  41ab3f:	mov    bl,0xad
  41ab41:	mov    edi,0x2c100115
  41ab46:	in     al,dx
  41ab47:	dec    eax
  41ab48:	jb     0x41aacb
  41ab4a:	jmp    0x41ab06
  41ab4c:	xchg   esp,eax
  41ab4d:	jae    0x41ab7d
  41ab4f:	arpl   WORD PTR [esi+esi*2],bx
  41ab52:	adc    BYTE PTR [ebx+0x6b],ah
  41ab55:	test   BYTE PTR [edi],ch
  41ab57:	jo     0x41ab88
  41ab59:	les    ecx,FWORD PTR [ebx+0x796ca346]
  41ab5f:	lahf   
  41ab60:	ins    BYTE PTR es:[edi],dx
  41ab61:	or     al,0xd4
  41ab63:	ja     0x41ab83
  41ab65:	push   esp
  41ab66:	sub    BYTE PTR ds:0x41ef5771,ah
  41ab6c:	inc    edx
  41ab6d:	retf   0x9ea4
  41ab70:	pop    edi
  41ab71:	outs   dx,DWORD PTR ds:[esi]
  41ab72:	repnz sub al,0x5d
  41ab75:	mov    bl,0x68
  41ab77:	mov    edi,0x79dd9114
  41ab7c:	cmp    dh,dl
  41ab7e:	int3   
  41ab7f:	adc    ebx,ebx
  41ab81:	in     eax,0xc5
  41ab83:	shl    BYTE PTR [ecx+0x4c],cl
  41ab86:	jno    0x41ab0d
  41ab88:	call   0x9397:0x9ce653aa
  41ab8f:	or     ah,BYTE PTR [edi]
  41ab91:	je     0x41ac03
  41ab93:	fldenv [ebp-0x22]
  41ab96:	ficomp DWORD PTR [edi]
  41ab98:	or     ebp,DWORD PTR [ecx-0x9bb056]
  41ab9e:	outs   dx,BYTE PTR ds:[esi]
  41ab9f:	out    0x4d,eax
  41aba1:	xchg   BYTE PTR [ebp+edx*4-0x3c],ah
  41aba5:	in     al,0x73
  41aba7:	test   al,0xc0
  41aba9:	shl    ah,0x36
  41abac:	inc    ebp
  41abad:	loop   0x41abc8
  41abaf:	cmp    eax,0xbfca54b1
  41abb4:	adc    bh,BYTE PTR [edx]
  41abb6:	in     al,dx
  41abb7:	hlt    
  41abb8:	and    BYTE PTR [ebx+0x5e],0x96
  41abbc:	test   DWORD PTR [edx-0x72edef9b],esp
  41abc2:	loop   0x41abf2
  41abc4:	sub    cl,BYTE PTR [ecx+0x15]
  41abc7:	das    
  41abc8:	das    
  41abc9:	fist   DWORD PTR [eax*8+0x42959b88]
  41abd0:	or     al,0x1f
  41abd2:	fsub   DWORD PTR [edx+edx*1-0x1851f772]
  41abd9:	clc    
  41abda:	lods   al,BYTE PTR ds:[esi]
  41abdb:	jmp    0x5455ef9b
  41abe0:	fwait
  41abe1:	push   0xa79b2e51
  41abe6:	jno    0x41abcf
  41abe8:	lock inc esp
  41abea:	push   ebp
  41abeb:	leave  
  41abec:	mov    DWORD PTR [eax+edx*1+0x11],edi
  41abf0:	pop    ss
  41abf1:	push   eax
  41abf2:	inc    edi
  41abf3:	rol    ch,cl
  41abf5:	ins    BYTE PTR es:[edi],dx
  41abf6:	(bad)  
  41abf7:	fwait
  41abf8:	ret    0x9b51
  41abfb:	mov    ecx,0x8596a3a
  41ac00:	jmp    0x1eea49e9
  41ac05:	pop    ss
  41ac06:	es inc ebx
  41ac08:	mov    bh,0x3f
  41ac0a:	sbb    eax,0x17bf4994
  41ac0f:	or     eax,0x1f8bf4d9
  41ac14:	stos   BYTE PTR es:[edi],al
  41ac15:	sub    DWORD PTR [ebx-0x77],esi
  41ac18:	in     eax,0xcd
  41ac1a:	mov    ah,0xfa
  41ac1c:	dec    ebx
  41ac1d:	sub    BYTE PTR [eax+0x1a],ch
  41ac20:	leave  
  41ac21:	or     BYTE PTR [esi+0x60977795],dh
  41ac27:	ret    
  41ac28:	fdivr  QWORD PTR [edi]
  41ac2a:	pop    edx
  41ac2b:	js     0x41abce
  41ac2d:	adc    al,0x6c
  41ac2f:	jecxz  0x41abe0
  41ac31:	mov    eax,ds:0xd6188bbc
  41ac36:	(bad)  
  41ac37:	and    ebp,DWORD PTR [ebx-0xb70cef9]
  41ac3d:	mov    ah,0x4b
  41ac3f:	xchg   esi,eax
  41ac40:	enter  0x92b2,0xb7
  41ac44:	dec    esp
  41ac45:	push   esp
  41ac46:	neg    DWORD PTR [edx]
  41ac48:	mov    BYTE PTR [edi],ah
  41ac4a:	out    0x16,eax
  41ac4c:	and    eax,DWORD PTR [edx-0x79e00727]
  41ac52:	into   
  41ac53:	cmp    ebx,DWORD PTR [edx+esi*8]
  41ac56:	cmp    eax,0x204c8209
  41ac5b:	pop    ebp
  41ac5c:	bound  edx,QWORD PTR [eax]
  41ac5e:	fadd   DWORD PTR [ebx+0x6e]
  41ac61:	pop    ss
  41ac62:	ret    0xb685
  41ac65:	lds    edi,FWORD PTR [esi-0x7f04dc6d]
  41ac6b:	sbb    al,BYTE PTR [ebx]
  41ac6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac6e:	mov    esi,0xe41d9e8f
  41ac73:	jl     0x41ac1e
  41ac75:	adc    bl,BYTE PTR [edx+ebx*2+0xd]
  41ac79:	aam    0xe2
  41ac7b:	sahf   
  41ac7c:	push   ebx
  41ac7d:	loope  0x41accb
  41ac7f:	repz xor DWORD PTR gs:[esi+eiz*2+0x7],esi
  41ac85:	dec    edx
  41ac86:	jno    0x41ac8b
  41ac88:	mov    bl,0xd1
  41ac8a:	dec    ebx
  41ac8b:	push   ds
  41ac8c:	mov    al,ds:0x1527a48c
  41ac91:	push   edi
  41ac92:	cdq    
  41ac93:	jns    0x41ac21
  41ac95:	out    dx,eax
  41ac96:	mov    bl,0x17
  41ac98:	xor    DWORD PTR [ecx],ecx
  41ac9a:	pop    ebx
  41ac9b:	push   esp
  41ac9c:	mov    dl,0x63
  41ac9e:	add    BYTE PTR [esi+0x35],ch
  41aca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aca2:	dec    edi
  41aca3:	push   ecx
  41aca4:	dec    esp
  41aca5:	xlat   BYTE PTR ds:[ebx]
  41aca6:	push   ss
  41aca7:	in     eax,0x55
  41aca9:	cmp    esi,edi
  41acab:	sahf   
  41acac:	lds    ebx,FWORD PTR [ebp-0x8b5fbc7]
  41acb2:	scas   eax,DWORD PTR es:[edi]
  41acb3:	xor    al,0x2f
  41acb5:	test   DWORD PTR [eax+edx*1],edi
  41acb8:	jae    0x41acbf
  41acba:	and    dh,BYTE PTR [ebp-0x74]
  41acbd:	inc    DWORD PTR [edi]
  41acbf:	cmp    al,0xa8
  41acc1:	bound  edx,QWORD PTR [ecx+edi*8+0x45]
  41acc5:	cmc    
  41acc6:	mov    al,BYTE PTR [ecx+edx*8-0x5469da06]
  41accd:	sbb    DWORD PTR [ebx],ebx
  41accf:	test   eax,0xfa8e2272
  41acd4:	or     al,0x49
  41acd6:	ins    DWORD PTR es:[edi],dx
  41acd7:	dec    edi
  41acd8:	sti    
  41acd9:	int3   
  41acda:	int    0x3b
  41acdc:	dec    esi
  41acdd:	cmp    BYTE PTR [eax+esi*8+0x34aa8b8e],cl
  41ace4:	out    dx,eax
  41ace5:	jnp    0x41ad0b
  41ace7:	clc    
  41ace8:	and    DWORD PTR [edx-0x75],0xa
  41acec:	retf   0x80f5
  41acef:	nop
  41acf0:	add    bh,BYTE PTR [ebx+0x4f]
  41acf3:	retf   0x2e53
  41acf6:	fdivr  QWORD PTR [ebp*8-0x6991b717]
  41acfd:	and    bh,dh
  41acff:	mov    esi,0x4c9154bf
  41ad04:	mov    dh,0x5a
  41ad06:	mov    WORD PTR ds:0x5986ca39,es
  41ad0c:	dec    edx
  41ad0d:	idiv   edx
  41ad0f:	add    DWORD PTR [ecx-0x17a707fd],eax
  41ad15:	sub    ebp,DWORD PTR [edx-0x58]
  41ad18:	mov    dh,0x8a
  41ad1a:	push   esp
  41ad1b:	les    eax,FWORD PTR [edx]
  41ad1d:	outs   dx,BYTE PTR ds:[esi]
  41ad1e:	loop   0x41acc9
  41ad20:	lods   eax,DWORD PTR ds:[esi]
  41ad21:	jb     0x41acec
  41ad23:	or     bh,dl
  41ad25:	xchg   ecx,eax
  41ad26:	mov    al,ds:0x66052449
  41ad2b:	inc    esp
  41ad2c:	xor    bl,ah
  41ad2e:	les    edi,FWORD PTR [edx]
  41ad30:	(bad)  
  41ad31:	test   eax,0xed33495f
  41ad36:	pusha  
  41ad37:	adc    DWORD PTR [ecx],edi
  41ad39:	xchg   esp,eax
  41ad3a:	out    0xd,eax
  41ad3c:	lds    esp,FWORD PTR [esi+0x2d]
  41ad3f:	push   ds
  41ad40:	rcr    al,0x5d
  41ad43:	push   edi
  41ad44:	in     eax,dx
  41ad45:	lds    ebx,FWORD PTR [edx]
  41ad47:	adc    al,0x46
  41ad49:	cmp    cl,BYTE PTR [ebx-0x1999fe3a]
  41ad4f:	xor    bl,BYTE PTR [ebp+0x1b]
  41ad52:	fisub  DWORD PTR [esi]
  41ad54:	je     0x41ad86
  41ad56:	lahf   
  41ad57:	or     al,0x20
  41ad59:	push   ecx
  41ad5a:	jne    0x41add1
  41ad5c:	out    0xff,eax
  41ad5e:	imul   BYTE PTR [ebx-0x63]
  41ad61:	fimul  WORD PTR [esi]
  41ad63:	add    edi,edi
  41ad65:	pop    es
  41ad66:	js     0x41ada2
  41ad68:	jo     0x41ad11
  41ad6a:	gs loope 0x41ad5b
  41ad6d:	adc    dl,al
  41ad6f:	fldcw  WORD PTR [edi-0x45843dee]
  41ad75:	(bad)  
  41ad76:	inc    ebx
  41ad77:	pop    es
  41ad78:	outs   dx,DWORD PTR ds:[esi]
  41ad79:	fisubr DWORD PTR [edi-0x2ced9c21]
  41ad7f:	push   0xf25806e3
  41ad84:	inc    edx
  41ad85:	adc    ch,al
  41ad87:	mov    ?,esp
  41ad89:	leave  
  41ad8a:	inc    esp
  41ad8b:	in     eax,dx
  41ad8c:	sahf   
  41ad8d:	adc    BYTE PTR [esi+0x6],dh
  41ad90:	mov    eax,0xaceb2c98
  41ad95:	mov    cl,0x4e
  41ad97:	(bad)  
  41ad98:	sub    BYTE PTR [eax-0x7c9c5c61],cl
  41ad9e:	pushf  
  41ad9f:	ins    DWORD PTR es:[edi],dx
  41ada0:	ins    DWORD PTR es:[edi],dx
  41ada1:	xchg   edi,eax
  41ada2:	cli    
  41ada3:	mov    edx,0xb0f98ad7
  41ada8:	sbb    bl,bl
  41adaa:	push   esi
  41adab:	xchg   esp,eax
  41adac:	(bad)
  41adaf:	data16 sbb BYTE PTR [ebx+esi*2],dl
  41adb3:	addr16 lahf 
  41adb5:	cmp    DWORD PTR [edx+0x59],0xffffffd8
  41adb9:	inc    ecx
  41adba:	imul   ebp,DWORD PTR [edi-0x46e0039f],0x67
  41adc1:	or     ah,BYTE PTR [edi]
  41adc3:	fwait
  41adc4:	push   esi
  41adc5:	(bad)  
  41adc6:	push   ebp
  41adc7:	cmp    eax,0x9cc0101a
  41adcc:	sub    bh,BYTE PTR [ebp-0x468a639e]
  41add2:	dec    edi
  41add3:	ins    BYTE PTR es:[edi],dx
  41add4:	push   esp
  41add5:	retf   0xacd
  41add8:	ds pop eax
  41adda:	or     BYTE PTR [eax+0x14197d37],cl
  41ade0:	mov    eax,DWORD PTR [esp+ecx*2+0x7e]
  41ade4:	lahf   
  41ade5:	mov    bh,0x62
  41ade7:	dec    ecx
  41ade8:	je     0x41ae53
  41adea:	(bad)  
  41adeb:	mov    cl,0x78
  41aded:	jl     0x41adb7
  41adef:	in     eax,0x36
  41adf1:	inc    ebp
  41adf2:	lock mov ds:0x38c5be57,al
  41adf8:	jp     0x41ad80
  41adfa:	rol    ebp,0xaa
  41adfd:	inc    esi
  41adfe:	hlt    
  41adff:	or     edx,DWORD PTR [esp+edx*2]
  41ae02:	sbb    cl,bl
  41ae04:	lds    esp,FWORD PTR [edi-0x4f]
  41ae07:	out    dx,eax
  41ae08:	adc    eax,0xaa97a281
  41ae0d:	rol    DWORD PTR [ebp-0x53f17966],1
  41ae13:	jecxz  0x41ae2f
  41ae15:	inc    edx
  41ae16:	(bad)  
  41ae17:	imul   edi,ecx,0xffffff99
  41ae1a:	sub    eax,0x5ef7761c
  41ae1f:	mov    bl,0x28
  41ae21:	mov    bh,0x56
  41ae23:	xchg   BYTE PTR [esi+0x73f4114c],ah
  41ae29:	xchg   ecx,eax
  41ae2a:	out    0xf9,al
  41ae2c:	cmc    
  41ae2d:	(bad)  
  41ae2e:	outs   dx,BYTE PTR ds:[esi]
  41ae2f:	pop    edi
  41ae30:	pop    edi
  41ae31:	inc    ebp
  41ae32:	add    dl,dh
  41ae34:	or     esp,edi
  41ae36:	dec    ecx
  41ae37:	add    ebx,DWORD PTR [esi+0x7b2e43dc]
  41ae3d:	stc    
  41ae3e:	fsub   QWORD PTR [ebx+edi*2]
  41ae41:	iret   
  41ae42:	ret    0xefa5
  41ae45:	xlat   BYTE PTR ds:[ebx]
  41ae46:	or     eax,0x5c729bf1
  41ae4b:	sahf   
  41ae4c:	cld    
  41ae4d:	(bad)  
  41ae4e:	test   BYTE PTR cs:[ecx-0x317ba9b5],cl
  41ae55:	mov    edi,0x5e7d8793
  41ae5a:	jp     0x41ae5c
  41ae5c:	pushf  
  41ae5d:	in     al,dx
  41ae5e:	sti    
  41ae5f:	sub    BYTE PTR [edx-0x123e27f9],bl
  41ae65:	xchg   BYTE PTR [ebp-0x47bd19d3],ah
  41ae6b:	cli    
  41ae6c:	into   
  41ae6d:	adc    eax,DWORD PTR [ebp-0x42]
  41ae70:	popa   
  41ae71:	dec    esp
  41ae72:	fucom  st(5)
  41ae74:	int3   
  41ae75:	sbb    cl,ah
  41ae77:	fsub   QWORD PTR [ecx-0x351f7304]
  41ae7d:	clc    
  41ae7e:	adc    BYTE PTR [edx],bh
  41ae80:	test   BYTE PTR [esi+edi*2+0x21],cl
  41ae84:	rcl    BYTE PTR [ecx],1
  41ae86:	mov    dl,0xa1
  41ae88:	push   ds
  41ae89:	test   eax,0xd8c7d69c
  41ae8e:	aad    0x63
  41ae90:	dec    ebp
  41ae91:	cdq    
  41ae92:	or     cl,ah
  41ae94:	loop   0x41aed4
  41ae96:	pop    eax
  41ae97:	cld    
  41ae98:	jno    0x41af08
  41ae9a:	jno    0x41ae30
  41ae9c:	ja     0x41aedf
  41ae9e:	or     al,dl
  41aea0:	in     eax,dx
  41aea1:	add    bl,BYTE PTR [eax+0x63d242b4]
  41aea7:	xor    DWORD PTR [esp+eax*2+0x1a],eax
  41aeab:	xchg   ebp,eax
  41aeac:	call   0x175f:0xaa8ff2bf
  41aeb3:	pop    eax
  41aeb4:	push   edi
  41aeb5:	jo     0x41af29
  41aeb7:	sbb    bl,dh
  41aeb9:	adc    dh,BYTE PTR cs:[esi]
  41aebc:	xchg   esi,eax
  41aebd:	mov    al,0x54
  41aebf:	sar    BYTE PTR [esi-0x76],1
  41aec2:	xchg   edi,eax
  41aec3:	inc    edi
  41aec4:	push   0xffffffdc
  41aec6:	xor    al,0x9e
  41aec8:	sbb    ch,BYTE PTR [eax]
  41aeca:	call   0x7c45d557
  41aecf:	xchg   ebx,eax
  41aed0:	dec    ebp
  41aed1:	div    DWORD PTR [edi+0x4e34ce33]
  41aed7:	add    ebx,edx
  41aed9:	fst    QWORD PTR [esp+ecx*1+0x29]
  41aedd:	cmp    cl,BYTE PTR [esi+eax*2+0x26]
  41aee1:	cmp    eax,DWORD PTR [esi]
  41aee3:	push   ebx
  41aee4:	fist   DWORD PTR [edi-0x6d]
  41aee7:	xchg   edi,eax
  41aee8:	std    
  41aee9:	adc    dl,BYTE PTR [edi-0x15]
  41aeec:	mov    esp,0x54a0cc0
  41aef1:	sar    BYTE PTR [esi],cl
  41aef3:	jl     0x41ae80
  41aef5:	xchg   WORD PTR [ebx],si
  41aef8:	mov    DWORD PTR [eax-0x9924cc0],eax
  41aefe:	xor    DWORD PTR [edx-0x19],eax
  41af01:	xchg   edx,eax
  41af02:	pop    edi
  41af03:	int    0xba
  41af05:	mov    esp,0x2bf76a97
  41af0a:	jge    0x41aefd
  41af0c:	or     esi,edx
  41af0e:	push   es
  41af0f:	or     dl,BYTE PTR [ecx-0x48572fde]
  41af15:	dec    ebx
  41af16:	dec    ecx
  41af17:	mov    eax,0x8bd5db6b
  41af1c:	add    eax,0xd95ac866
  41af21:	shr    ah,1
  41af23:	dec    ebx
  41af24:	xchg   DWORD PTR ds:0x739d5531,ebp
  41af2a:	and    al,0x8d
  41af2c:	fsubr  DWORD PTR [ebx+0x5]
  41af2f:	jo     0x41af4c
  41af31:	in     eax,0x23
  41af33:	ret    0x3633
  41af36:	xchg   esp,eax
  41af37:	pop    edi
  41af38:	and    bl,BYTE PTR [esi-0x37499dc8]
  41af3e:	adc    BYTE PTR [edi-0x6d16d676],dl
  41af44:	dec    edi
  41af45:	das    
  41af46:	mov    WORD PTR [esi-0x223c90aa],gs
  41af4c:	inc    edx
  41af4d:	lock jg 0x8ba13e42
  41af54:	lock scas eax,DWORD PTR es:[edi]
  41af56:	jmp    0x1bd8c943
  41af5b:	fwait
  41af5c:	adc    al,0x39
  41af5e:	xchg   edx,eax
  41af5f:	push   cs
  41af60:	xor    DWORD PTR [ebx+ebx*1],esi
  41af63:	daa    
  41af64:	and    BYTE PTR [ebp-0x7b],bh
  41af67:	lds    eax,FWORD PTR [edi+0x61]
  41af6a:	adc    eax,0xc7fb7815
  41af6f:	in     eax,dx
  41af70:	pop    ebp
  41af71:	sub    DWORD PTR [edx-0x69],esp
  41af74:	sar    DWORD PTR [edi-0x7c538425],0x3b
  41af7b:	(bad)  
  41af7c:	ss ins BYTE PTR es:[edi],dx
  41af7e:	cld    
  41af7f:	pop    ss
  41af80:	es pop es
  41af82:	push   ebp
  41af83:	sbb    DWORD PTR ds:0x70827561,eax
  41af89:	int3   
  41af8a:	xchg   ecx,ebx
  41af8c:	test   BYTE PTR [eax+eiz*4-0x18],bh
  41af90:	outs   dx,DWORD PTR ds:[esi]
  41af91:	mov    ecx,0xb47338e8
  41af96:	jbe    0x41af59
  41af98:	mul    cl
  41af9a:	test   eax,0x26be2cca
  41af9f:	clc    
  41afa0:	test   al,0x5f
  41afa2:	xchg   edx,eax
  41afa3:	xchg   esi,eax
  41afa4:	mov    ebp,0x9382f4ce
  41afa9:	daa    
  41afaa:	imul   esp,DWORD PTR [ebx],0x2bfd5a8d
  41afb0:	pop    esi
  41afb1:	sbb    ebx,DWORD PTR ds:0xa134dbf0
  41afb7:	fld    TBYTE PTR [ecx+0x3ab961b0]
  41afbd:	pop    edi
  41afbe:	js     0x41afe8
  41afc0:	push   ds
  41afc1:	fisttp QWORD PTR [edi]
  41afc3:	adc    DWORD PTR [ebx-0x54],0x151aa770
  41afca:	xor    dl,dh
  41afcc:	and    al,0x6c
  41afce:	fcmovnu st,st(2)
  41afd0:	(bad)  
  41afd1:	adc    DWORD PTR [edi],ecx
  41afd3:	cmp    ebx,DWORD PTR [edx]
  41afd5:	and    cl,BYTE PTR [eax]
  41afd7:	cmp    al,0x73
  41afd9:	test   eax,0x812a6d6b
  41afde:	test   DWORD PTR [ecx+0x53b9e2ca],esp
  41afe4:	push   0xa357bb44
  41afe9:	out    dx,al
  41afea:	xor    ah,BYTE PTR [esi+0x8b80203]
  41aff0:	xor    al,0xfb
  41aff3:	aam    0x30
  41aff5:	pop    es
  41aff6:	jnp    0x41afaa
  41aff8:	and    ebp,ebx
  41affa:	es aam 0xf7
  41affd:	imul   ebp,DWORD PTR [esi-0x327c58e9],0x6db3bc2e
  41b007:	jbe    0x41b05a
  41b009:	adc    al,0xe9
  41b00b:	bound  eax,QWORD PTR [eax-0x2ba69c1b]
  41b011:	aas    
  41b012:	inc    edi
  41b013:	jmp    0xa963:0x8fd7617c
  41b01a:	addr16 int 0x7
  41b01d:	xor    DWORD PTR [ebx-0x72],0x6c10525c
  41b024:	push   es
  41b025:	add    cl,dh
  41b027:	add    BYTE PTR [ebx],0x9b
  41b02a:	pop    ss
  41b02b:	outs   dx,DWORD PTR ds:[esi]
  41b02c:	in     eax,dx
  41b02d:	mov    edx,0x8d7a3771
  41b032:	xchg   esi,eax
  41b033:	mov    cl,bh
  41b035:	add    DWORD PTR [ecx+0x11],ebx
  41b038:	or     DWORD PTR [edi-0x7c273c14],edi
  41b03e:	icebp  
  41b03f:	ret    
  41b040:	inc    edi
  41b041:	jecxz  0x41b013
  41b043:	dec    esi
  41b044:	arpl   WORD PTR [esi],di
  41b046:	cmp    ecx,eax
  41b048:	push   cs
  41b049:	rcr    DWORD PTR [ecx],0xcc
  41b04c:	aam    0x40
  41b04e:	and    dh,BYTE PTR [esi]
  41b050:	and    DWORD PTR [eax+0x6c],edi
  41b053:	fst    DWORD PTR [eax+0x38a7c15f]
  41b059:	stos   DWORD PTR es:[edi],eax
  41b05a:	call   0x2964:0xdaaee79a
  41b061:	sbb    eax,0xb408204e
  41b066:	xchg   ebp,eax
  41b067:	add    eax,0x9f1943ce
  41b06c:	jns    0x41b070
  41b06e:	or     ebx,DWORD PTR [ebx-0x46]
  41b071:	or     DWORD PTR [edx+0x78],ebx
  41b074:	lea    esi,[eax]
  41b076:	or     eax,0x68fec0d1
  41b07b:	(bad)  [edi]
  41b07d:	mov    WORD PTR [ecx+0x10],cs
  41b080:	gs test DWORD PTR es:[edx],edx
  41b084:	mov    al,ds:0xa28454cf
  41b089:	fadd   QWORD PTR [esi+0x7d8fa81]
  41b08f:	retf   
  41b090:	test   DWORD PTR [eax],ebx
  41b092:	clc    
  41b093:	addr16 out 0x44,al
  41b096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b097:	mov    bl,0x23
  41b099:	xchg   ecx,eax
  41b09a:	or     ch,BYTE PTR [esi+ebp*4]
  41b09d:	das    
  41b09e:	xchg   BYTE PTR [ebx],bl
  41b0a0:	mov    ah,0x40
  41b0a2:	cmp    dl,BYTE PTR [ebp+0x24]
  41b0a5:	(bad)  
  41b0a7:	push   ebx
  41b0a8:	mov    ecx,0x22c0c806
  41b0ad:	xchg   esp,eax
  41b0ae:	(bad)  
  41b0af:	pop    esi
  41b0b0:	mov    edx,esi
  41b0b2:	pop    eax
  41b0b3:	mov    ds:0xba6ac2b5,al
  41b0b8:	adc    ch,bh
  41b0ba:	inc    edi
  41b0bb:	lds    esi,FWORD PTR [ebp-0x344442cb]
  41b0c1:	xor    BYTE PTR [ebx-0x41],cl
  41b0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0c5:	and    dl,bl
  41b0c7:	inc    esi
  41b0c8:	scas   al,BYTE PTR es:[edi]
  41b0c9:	mov    DWORD PTR [ecx],ecx
  41b0cb:	cmp    ax,0xf8db
  41b0cf:	out    0x90,eax
  41b0d1:	cmp    edi,esi
  41b0d3:	or     esp,edx
  41b0d5:	and    bl,bh
  41b0d7:	cdq    
  41b0d8:	inc    ecx
  41b0d9:	shl    cl,1
  41b0db:	in     al,0xf2
  41b0dd:	mov    al,ds:0xf9c1c95a
  41b0e2:	imul   ebx,DWORD PTR [ebx-0x49],0x754ac46b
  41b0e9:	adc    al,0x5b
  41b0eb:	or     bh,BYTE PTR [ecx-0x2a]
  41b0ee:	cdq    
  41b0ef:	aas    
  41b0f0:	jp     0x41b11e
  41b0f2:	pop    ebx
  41b0f3:	fisub  WORD PTR [ebp+0x16]
  41b0f6:	imul   DWORD PTR [ecx-0x6d55b365]
  41b0fc:	add    eax,0xd442c5d2
  41b101:	push   ebx
  41b102:	aad    0xe5
  41b104:	mov    dl,0x84
  41b106:	out    0xd5,al
  41b108:	mov    ds:0x204687b6,eax
  41b10d:	dec    eax
  41b10e:	xor    al,0x43
  41b110:	sub    ch,dl
  41b112:	add    al,0x9
  41b114:	mov    BYTE PTR [ebx+ebx*1+0x43963b9],0x49
  41b11c:	and    DWORD PTR [edx],esi
  41b11e:	adc    eax,0xbc6b77a7
  41b123:	pop    ebp
  41b124:	push   ecx
  41b125:	inc    esi
  41b126:	add    eax,DWORD PTR [ecx+0x2bc3962a]
  41b12c:	test   eax,0x26423572
  41b131:	leave  
  41b132:	jno    0x41b0fe
  41b134:	ret    
  41b135:	stos   DWORD PTR es:[edi],eax
  41b136:	push   ss
  41b137:	mov    DWORD PTR [ecx-0x59bed9bd],esp
  41b13d:	add    al,0x58
  41b13f:	sar    BYTE PTR [edx+0x1989578f],1
  41b145:	hlt    
  41b146:	mov    edi,0x9b21e2de
  41b14b:	cmp    edx,DWORD PTR [ebx]
  41b14d:	mov    cs,WORD PTR [ebx]
  41b14f:	push   esp
  41b150:	imul   esp,DWORD PTR [eax+0x3a],0x417ca590
  41b157:	repnz in al,0x9
  41b15a:	jbe    0x41b1c3
  41b15c:	push   cs
  41b15d:	cs cmc 
  41b15f:	dec    ebp
  41b160:	mov    esp,0xaae35e30
  41b165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b166:	cmp    eax,0xa67206af
  41b16b:	add    DWORD PTR [edx+0x8c60ee],edx
  41b171:	(bad)  
  41b172:	push   ebx
  41b173:	mov    ds:0x60c4a9a5,al
  41b178:	retf   0x5df6
  41b17b:	in     al,dx
  41b17c:	outs   dx,BYTE PTR ds:[esi]
  41b17d:	adc    bh,ah
  41b17f:	xor    DWORD PTR [esi-0x537daf6],esi
  41b185:	dec    esp
  41b186:	iret   
  41b187:	imul   esi,DWORD PTR [edi+eax*4],0xf7ba4868
  41b18e:	sub    edi,edi
  41b190:	ret    0x6980
  41b193:	jno    0x41b182
  41b195:	popf   
  41b196:	xchg   esi,eax
  41b197:	(bad)  
  41b198:	cwde   
  41b199:	jo     0x41b205
  41b19b:	lods   eax,DWORD PTR ds:[esi]
  41b19c:	js     0x41b125
  41b19e:	add    al,0x51
  41b1a0:	mov    bl,0x9a
  41b1a2:	pusha  
  41b1a3:	adc    eax,0x572ffcad
  41b1a8:	cld    
  41b1a9:	xchg   esi,eax
  41b1aa:	mov    ds:0xcba945ed,eax
  41b1af:	sbb    BYTE PTR [edi+ebp*4+0x25],bl
  41b1b3:	pop    ebx
  41b1b4:	sub    al,0x47
  41b1b6:	fs icebp 
  41b1b8:	inc    eax
  41b1b9:	mov    WORD PTR [esi-0x4c14e9f5],ss
  41b1bf:	js     0x41b23e
  41b1c1:	jb     0x41b1e8
  41b1c3:	ins    BYTE PTR es:[edi],dx
  41b1c4:	or     esi,DWORD PTR [edi-0x4658b5f0]
  41b1ca:	loope  0x41b174
  41b1cc:	cmp    cl,BYTE PTR [edx-0x6857c49f]
  41b1d2:	xchg   ebp,eax
  41b1d3:	dec    esi
  41b1d4:	out    0x78,eax
  41b1d6:	ja     0x41b184
  41b1d8:	enter  0xef65,0x88
  41b1dc:	jle    0x41b254
  41b1de:	pusha  
  41b1df:	test   DWORD PTR [ecx],edi
  41b1e1:	add    esp,ebx
  41b1e3:	(bad)  
  41b1e4:	imul   eax,DWORD PTR [ebp+0x65],0x7deee404
  41b1eb:	pop    ebp
  41b1ec:	dec    DWORD PTR [ebp+0x71]
  41b1ef:	out    dx,eax
  41b1f0:	stos   DWORD PTR es:[edi],eax
  41b1f1:	iret   
  41b1f2:	inc    eax
  41b1f3:	in     eax,dx
  41b1f4:	popa   
  41b1f5:	fwait
  41b1f6:	cmp    eax,0xf15fb6f3
  41b1fb:	push   edx
  41b1fd:	pop    esp
  41b1fe:	jno    0x41b18f
  41b200:	jne    0x41b236
  41b202:	jo     0x41b27a
  41b204:	idiv   BYTE PTR [ecx-0x1adbb183]
  41b20a:	fild   QWORD PTR [edx]
  41b20c:	enter  0x5a24,0x91
  41b210:	sbb    eax,0x8a7a2674
  41b215:	xchg   ebx,eax
  41b216:	retf   0xadf5
  41b219:	sbb    al,0xc2
  41b21b:	inc    ebp
  41b21c:	xor    ebx,DWORD PTR ss:[ebp-0x1015c393]
  41b223:	dec    edi
  41b224:	inc    eax
  41b225:	dec    edx
  41b226:	mov    ds:0xdf82b100,al
  41b22b:	pop    ecx
  41b22c:	push   eax
  41b22d:	aad    0xa
  41b22f:	inc    ebp
  41b230:	xchg   edx,eax
  41b231:	adc    DWORD PTR [eax-0x384a0548],ecx
  41b237:	and    ch,BYTE PTR [eax-0x57a37e7f]
  41b23d:	push   esi
  41b23e:	addr16 int3 
  41b240:	clc    
  41b241:	mov    esp,0xa024f76e
  41b246:	xor    BYTE PTR [eax],0xc3
  41b249:	xchg   ecx,eax
  41b24a:	stos   DWORD PTR es:[edi],eax
  41b24b:	sbb    dh,BYTE PTR [eax]
  41b24d:	ins    DWORD PTR es:[edi],dx
  41b24e:	xchg   BYTE PTR [ebx+0x3f34c309],cl
  41b254:	xchg   edi,eax
  41b255:	(bad)  
  41b256:	and    DWORD PTR ds:[eax+edx*4],0x744ddaa3
  41b25e:	cs push ss
  41b260:	push   esi
  41b261:	icebp  
  41b262:	repz dec ebx
  41b264:	xchg   ecx,eax
  41b265:	adc    esp,esi
  41b267:	jnp    0x41b232
  41b269:	je     0x41b211
  41b26b:	pusha  
  41b26c:	fs popa 
  41b26e:	fld    QWORD PTR [eax]
  41b270:	sub    BYTE PTR [edi],cl
  41b272:	and    esi,eax
  41b274:	jge    0x41b2f4
  41b276:	mov    bl,0x5
  41b278:	inc    esp
  41b279:	ja     0x41b200
  41b27b:	jae    0x41b20e
  41b27d:	fdiv   QWORD PTR [ebx+0x57]
  41b280:	sub    eax,0x973659f8
  41b285:	sub    dh,BYTE PTR [edx*1+0x66f88c9d]
  41b28c:	xlat   BYTE PTR ds:[ebx]
  41b28d:	mov    dl,0x30
  41b28f:	cs pop edx
  41b291:	test   ebx,edx
  41b293:	or     eax,edi
  41b295:	bound  edx,QWORD PTR [esi+0x7f12f02b]
  41b29b:	adc    DWORD PTR [edx+0x442fa099],ebx
  41b2a1:	mov    edi,0xbd232e60
  41b2a6:	fucomi st,st(6)
  41b2a8:	mov    ebx,0x29d24557
  41b2ad:	or     bl,dl
  41b2af:	je     0x41b2dc
  41b2b1:	or     BYTE PTR [esi-0x68],0xee
  41b2b5:	lods   al,BYTE PTR ds:[esi]
  41b2b6:	loop   0x41b245
  41b2b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b9:	and    eax,0xdf88e871
  41b2be:	xchg   edx,eax
  41b2bf:	xor    edx,DWORD PTR [ebx]
  41b2c1:	test   al,0x51
  41b2c3:	or     BYTE PTR [ebp-0xb],ch
  41b2c6:	sub    ch,0xe8
  41b2c9:	scas   eax,DWORD PTR es:[edi]
  41b2ca:	(bad)  
  41b2cb:	push   esi
  41b2cc:	bound  ecx,QWORD PTR [esp+ebp*8]
  41b2cf:	xor    esi,DWORD PTR [ebp+0x51850054]
  41b2d5:	mov    bh,dh
  41b2d7:	jae    0x41b2b7
  41b2d9:	(bad)
  41b2dc:	and    edx,DWORD PTR [eax-0x1ad09b8e]
  41b2e2:	aaa    
  41b2e3:	clc    
  41b2e4:	cmp    al,0x9a
  41b2e6:	jo     0x41b324
  41b2e8:	mov    esp,0xdaa0e256
  41b2ed:	shl    DWORD PTR ds:0xa51c5ee6,1
  41b2f3:	sbb    DWORD PTR ds:0x1789633b,0xa
  41b2fa:	xchg   esi,eax
  41b2fb:	xchg   edx,eax
  41b2fc:	addps  xmm7,xmm0
  41b2ff:	xchg   ecx,eax
  41b300:	std    
  41b301:	jbe    0x41b336
  41b303:	xchg   ebp,eax
  41b304:	scas   al,BYTE PTR es:[edi]
  41b305:	mov    dh,0xed
  41b307:	ins    DWORD PTR es:[edi],dx
  41b308:	cmp    BYTE PTR [ebp-0x39],bh
  41b30b:	push   ecx
  41b30c:	js     0x41b325
  41b30e:	inc    esp
  41b30f:	out    dx,al
  41b310:	mov    cl,0x20
  41b312:	add    al,0x66
  41b314:	into   
  41b315:	adc    edx,DWORD PTR [edx-0x57fccc25]
  41b31b:	mov    edx,0x575351e1
  41b320:	rcl    BYTE PTR [esi-0x6d131aa3],0xf9
  41b327:	mov    ebp,0x7c81fca7
  41b32c:	(bad)  
  41b32d:	mov    dh,0x2f
  41b32f:	popf   
  41b330:	dec    ebx
  41b331:	out    dx,al
  41b332:	loope  0x41b360
  41b334:	adc    edx,DWORD PTR [ecx]
  41b336:	push   edx
  41b337:	jp     0x41b34b
  41b339:	(bad)  
  41b33a:	xchg   esi,eax
  41b33b:	inc    edx
  41b33c:	aad    0x8a
  41b33e:	mov    ecx,0xe57cdb67
  41b343:	sub    ebx,esi
  41b345:	xor    DWORD PTR [esi-0x1c],esp
  41b348:	dec    esp
  41b349:	push   esi
  41b34a:	in     eax,dx
  41b34b:	jbe    0x41b3c1
  41b34d:	push   eax
  41b34e:	fldenv [ebx]
  41b350:	and    al,0xf2
  41b352:	ds popf 
  41b354:	out    0x5e,eax
  41b356:	dec    ecx
  41b357:	out    0x11,al
  41b359:	mov    edx,0x8961afb6
  41b35e:	hlt    
  41b35f:	or     BYTE PTR [ebx-0x3fedf571],bh
  41b365:	xchg   ebx,eax
  41b366:	ret    
  41b367:	sbb    bh,dh
  41b369:	(bad)  
  41b36a:	lahf   
  41b36b:	lods   eax,DWORD PTR ds:[esi]
  41b36c:	cmp    DWORD PTR cs:[eax],ebx
  41b36f:	and    BYTE PTR [edi],dl
  41b371:	pop    ds
  41b372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b373:	jae    0x41b357
  41b375:	pop    ebx
  41b376:	dec    ebx
  41b377:	aaa    
  41b378:	inc    eax
  41b379:	mov    ch,0x2a
  41b37b:	xchg   edi,eax
  41b37c:	std    
  41b37d:	fucom  st(6)
  41b37f:	ret    0xd241
  41b382:	test   eax,0xd847c1
  41b387:	inc    edx
  41b388:	xor    dl,bl
  41b38a:	add    dl,0xb2
  41b38d:	int3   
  41b38e:	das    
  41b38f:	sahf   
  41b390:	pusha  
  41b391:	dec    ebp
  41b392:	sub    al,0x8c
  41b394:	xor    al,0x95
  41b396:	fidiv  DWORD PTR [ebx-0x4ad30a22]
  41b39c:	and    DWORD PTR [edx],esi
  41b39e:	mov    DWORD PTR [edi-0x4c2a2b21],edi
  41b3a4:	popa   
  41b3a5:	daa    
  41b3a6:	jns    0x41b3ee
  41b3a8:	xchg   esp,eax
  41b3a9:	mov    ebx,0x17c2ae2c
  41b3ae:	int3   
  41b3af:	push   0x258eefb1
  41b3b4:	mov    dl,0x24
  41b3b6:	inc    eax
  41b3b7:	adc    al,0xcc
  41b3b9:	mov    DWORD PTR [edi],ebx
  41b3bb:	mov    ds:0xd91050f7,al
  41b3c0:	addr16 xchg ecx,eax
  41b3c2:	popa   
  41b3c3:	cmp    esi,DWORD PTR [ebx-0x2079970c]
  41b3c9:	(bad)  
  41b3cb:	(bad)  
  41b3cc:	push   esp
  41b3ce:	xchg   DWORD PTR [edx-0x19],ecx
  41b3d1:	loopne 0x41b39f
  41b3d3:	and    BYTE PTR ds:0x91741dc5,bh
  41b3d9:	aad    0x2a
  41b3db:	in     eax,dx
  41b3dc:	int3   
  41b3dd:	mov    dh,0x8
  41b3df:	lds    ebp,FWORD PTR [esi+0x2b9fe1ff]
  41b3e5:	adc    DWORD PTR [esi+0x68],0x7342df2e
  41b3ec:	test   ebx,edi
  41b3ee:	pop    esi
  41b3ef:	test   al,0xdd
  41b3f1:	fisub  DWORD PTR [ebp+0x2a1de1b8]
  41b3f7:	or     DWORD PTR [edi+0x19],edi
  41b3fa:	xchg   ebx,eax
  41b3fb:	xchg   edi,eax
  41b3fc:	pop    ebx
  41b3fd:	cs or  ebp,esp
  41b400:	std    
  41b401:	ror    BYTE PTR [edi],0x72
  41b404:	cmp    ebx,edi
  41b406:	adc    DWORD PTR [ecx],esi
  41b408:	cli    
  41b409:	mov    ?,WORD PTR [ebx-0x39dc657c]
  41b40f:	pop    edi
  41b410:	aam    0xb5
  41b412:	push   ebp
  41b413:	retf   0x3439
  41b416:	xor    BYTE PTR es:[ecx],ah
  41b419:	pop    ebp
  41b41a:	mov    ds:0xacdb32f8,eax
  41b41f:	xchg   DWORD PTR [eax-0x71],edx
  41b422:	jnp    0x41b43e
  41b424:	pop    edi
  41b425:	les    ebx,FWORD PTR [eax-0x388a4b3]
  41b42b:	cdq    
  41b42c:	and    eax,0xe450427a
  41b431:	ret    
  41b432:	mov    bh,0x71
  41b434:	dec    esp
  41b435:	into   
  41b436:	iret   
  41b437:	mov    ebx,0xf505cd32
  41b43c:	cmp    cl,BYTE PTR [esi-0x5c]
  41b43f:	std    
  41b440:	sub    eax,0xe785cdab
  41b445:	inc    eax
  41b446:	ins    DWORD PTR es:[edi],dx
  41b447:	loopne 0x41b421
  41b449:	adc    DWORD PTR [edi-0x610a8f16],edi
  41b44f:	clc    
  41b450:	loopne 0x41b3f3
  41b452:	inc    ebp
  41b453:	int3   
  41b454:	sbb    ebp,DWORD PTR [ebp-0x4e]
  41b457:	pop    ebp
  41b458:	into   
  41b459:	outs   dx,DWORD PTR ds:[esi]
  41b45a:	test   BYTE PTR [esi+0xb8d6c26],dl
  41b460:	mov    cl,0xc9
  41b462:	push   ss
  41b463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b464:	shl    BYTE PTR [esi+0x20],1
  41b467:	aas    
  41b468:	or     eax,0x8990fc05
  41b46d:	jnp    0x41b4cf
  41b46f:	je     0x41b4c9
  41b471:	sub    DWORD PTR [edi-0x1662a33d],eax
  41b477:	neg    DWORD PTR [ebx+0x746fa3a2]
  41b47d:	and    cl,bh
  41b47f:	push   ss
  41b480:	push   ss
  41b481:	or     al,0x8f
  41b483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b484:	jle    0x41b4f1
  41b486:	loopne 0x41b4cd
  41b488:	rcl    BYTE PTR [eax+0x3c514c06],0xb6
  41b48f:	ret    0x326
  41b492:	fmulp  st(1),st
  41b494:	inc    esp
  41b495:	aam    0xfa
  41b497:	push   ss
  41b498:	xacquire xchg BYTE PTR [edi],ch
  41b49b:	or     ebx,DWORD PTR [edx-0x26]
  41b49e:	bound  ecx,QWORD PTR [esi-0x2db447b3]
  41b4a4:	push   ecx
  41b4a5:	sahf   
  41b4a6:	test   al,0x97
  41b4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a9:	stos   DWORD PTR es:[edi],eax
  41b4aa:	into   
  41b4ab:	adc    eax,0xbe067839
  41b4b0:	fild   WORD PTR [edi]
  41b4b2:	push   cs
  41b4b3:	xchg   ebp,eax
  41b4b4:	mov    ebx,0x3d5a7e68
  41b4b9:	bound  edi,QWORD PTR [eax+eiz*1+0x8f59d9d]
  41b4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c1:	jp     0x41b471
  41b4c3:	or     eax,0x5252b94c
  41b4c8:	pop    esi
  41b4c9:	loop   0x41b4fe
  41b4cb:	sub    eax,0xf27a1eef
  41b4d0:	adc    DWORD PTR [esi+0x2e],esp
  41b4d3:	dec    ebx
  41b4d4:	and    dh,cl
  41b4d6:	ss lahf 
  41b4d8:	jp     0x41b4d4
  41b4da:	or     eax,0x3cb16490
  41b4df:	xchg   edi,eax
  41b4e0:	ds dec edi
  41b4e2:	retf   
  41b4e3:	in     eax,dx
  41b4e4:	ins    BYTE PTR es:[edi],dx
  41b4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4e6:	push   ebp
  41b4e7:	inc    esi
  41b4e8:	dec    edi
  41b4e9:	(bad)
  41b4ee:	dec    esp
  41b4ef:	ja     0x41b4c4
  41b4f1:	pop    ebp
  41b4f2:	stos   DWORD PTR es:[edi],eax
  41b4f3:	xlat   BYTE PTR ds:[ebx]
  41b4f4:	inc    edx
  41b4f5:	xor    eax,0x6a9b6901
  41b4fa:	pop    ebp
  41b4fb:	dec    ebx
  41b4fc:	std    
  41b4fd:	sub    al,BYTE PTR [ecx]
  41b4ff:	adc    al,0x4b
  41b501:	and    eax,0x5f89f9eb
  41b506:	jnp    0x41b4bf
  41b508:	xor    dh,BYTE PTR [ecx]
  41b50a:	in     eax,dx
  41b50b:	sub    ebp,DWORD PTR [edx+0x417fcc5d]
  41b511:	adc    esp,ecx
  41b513:	sbb    BYTE PTR [edx],ah
  41b515:	aaa    
  41b516:	call   0x3a05a5d7
  41b51b:	inc    ebp
  41b51c:	jbe    0x41b50c
  41b51e:	inc    eax
  41b51f:	jnp    0x41b589
  41b521:	out    0x19,eax
  41b523:	cld    
  41b524:	imul   ebp,esi,0xaaf408ce
  41b52a:	xor    BYTE PTR [edx-0x4d],dl
  41b52d:	je     0x41b589
  41b52f:	xor    eax,0x2a5757df
  41b534:	mov    ds:0x83af6ce5,al
  41b539:	push   cs
  41b53a:	in     eax,0x3e
  41b53c:	push   esp
  41b53d:	lods   al,BYTE PTR ds:[esi]
  41b53e:	push   ebp
  41b53f:	cmp    dl,al
  41b541:	inc    edx
  41b542:	aam    0x1a
  41b544:	cmp    bh,bh
  41b546:	push   es
  41b547:	adc    al,bh
  41b549:	mov    eax,ds:0x8a7b2086
  41b54e:	cmp    eax,0xb46b269
  41b553:	std    
  41b554:	add    DWORD PTR [esp+eax*2],ecx
  41b557:	popa   
  41b558:	inc    esp
  41b559:	jno    0x41b5c9
  41b55b:	ins    BYTE PTR es:[edi],dx
  41b55c:	mov    BYTE PTR [ebx],al
  41b55e:	sbb    al,0x72
  41b560:	lods   al,BYTE PTR ds:[esi]
  41b561:	(bad)  
  41b562:	gs sub eax,0xcebd77f3
  41b568:	fcmovb st,st(0)
  41b56a:	sti    
  41b56b:	pushf  
  41b56c:	repnz data16 mov bl,0x2d
  41b570:	xchg   ecx,eax
  41b571:	add    ebp,eax
  41b573:	push   ecx
  41b574:	mov    al,ds:0x2ded681c
  41b579:	mov    al,BYTE PTR [eax+0x71ace8ca]
  41b57f:	loope  0x41b5e3
  41b581:	or     BYTE PTR ds:0x5d6dfd8c,ah
  41b587:	retf   0x58bc
  41b58a:	arpl   WORD PTR [edx],ax
  41b58c:	or     bl,ah
  41b58e:	lahf   
  41b58f:	inc    eax
  41b590:	adc    dl,bl
  41b592:	aad    0xff
  41b594:	pop    ds
  41b595:	inc    edx
  41b596:	loop   0x41b51c
  41b598:	mov    DWORD PTR [eax],eax
  41b59a:	pop    esp
  41b59b:	pop    ds
  41b59c:	push   0x11d98227
  41b5a1:	add    ebx,DWORD PTR [eax+eax*2+0x5686e1c4]
  41b5a8:	fld    TBYTE PTR [eax-0x56d0bf0a]
  41b5ae:	sub    al,0xee
  41b5b0:	jb     0x41b575
  41b5b2:	or     esi,DWORD PTR [edi]
  41b5b4:	mov    al,0x15
  41b5b6:	in     eax,dx
  41b5b7:	lock jge 0x41b610
  41b5ba:	ret    0xd138
  41b5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5be:	sahf   
  41b5bf:	shr    BYTE PTR [edi],0x89
  41b5c2:	stc    
  41b5c3:	fadd   DWORD PTR [edi+0x71]
  41b5c6:	dec    edx
  41b5c7:	push   es
  41b5c8:	inc    ecx
  41b5c9:	pop    ss
  41b5ca:	dec    esp
  41b5cb:	or     al,0x7d
  41b5cd:	fsub   DWORD PTR [edi]
  41b5cf:	lods   eax,DWORD PTR ds:[esi]
  41b5d0:	xchg   edx,eax
  41b5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d2:	mov    cl,0x93
  41b5d4:	inc    ecx
  41b5d5:	(bad)  
  41b5d6:	lock rol al,cl
  41b5d9:	pop    eax
  41b5da:	into   
  41b5db:	loop   0x41b5a4
  41b5dd:	jg     0x41b5be
  41b5df:	or     DWORD PTR [edi+0x16],0xab534128
  41b5e6:	int    0x65
  41b5e8:	jmp    0xf7030c79
  41b5ed:	jg     0x41b5ad
  41b5ef:	adc    bl,BYTE PTR [eax-0x39]
  41b5f2:	inc    ebx
  41b5f3:	aam    0x2f
  41b5f5:	pop    ecx
  41b5f6:	mov    ch,0xb1
  41b5f8:	xor    eax,0x25c0fc98
  41b5fd:	ds xor eax,0x7df0df75
  41b603:	inc    edi
  41b604:	add    bl,dh
  41b606:	push   esi
  41b607:	repnz adc bl,BYTE PTR [ecx+esi*2+0x10]
  41b60c:	ficom  WORD PTR [ecx]
  41b60e:	shr    BYTE PTR [ebx-0x4fa3fe54],cl
  41b614:	xchg   esp,eax
  41b615:	das    
  41b616:	ficomp DWORD PTR [ebx+0x378276e7]
  41b61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b61d:	mov    ah,0xf7
  41b61f:	and    eax,0x964f0c0d
  41b624:	push   es
  41b625:	or     BYTE PTR [ebp+0x30],cl
  41b628:	cwde   
  41b629:	fiadd  DWORD PTR [edx-0x43b114f2]
  41b62f:	pop    esi
  41b630:	icebp  
  41b631:	or     eax,0x84ff1efb
  41b636:	sahf   
  41b637:	in     al,0xb6
  41b639:	mov    bl,bl
  41b63b:	mov    bl,0x74
  41b63d:	rcr    BYTE PTR [ebx-0x72],0xaa
  41b641:	jns    0x41b6be
  41b643:	pop    esp
  41b644:	add    BYTE PTR [ebp-0x20],ah
  41b647:	(bad)  
  41b648:	and    esi,DWORD PTR [ebp-0x46]
  41b64b:	lsl    esp,WORD PTR [esi-0x35]
  41b64f:	out    dx,eax
  41b650:	jb     0x41b5fa
  41b652:	loope  0x41b654
  41b654:	mov    dh,0x46
  41b656:	int    0x7c
  41b658:	cdq    
  41b659:	push   ebx
  41b65a:	outs   dx,DWORD PTR ds:[esi]
  41b65b:	sub    ebx,esi
  41b65d:	jl     0x41b64e
  41b65f:	jge    0x41b5fe
  41b661:	ret    
  41b662:	xor    al,cl
  41b664:	out    0x9e,eax
  41b666:	imul   esi,DWORD PTR [ebx+0x35],0xffffff9c
  41b66a:	enter  0x23bd,0x2a
  41b66e:	gs or  eax,0x8d49ccb1
  41b674:	and    ebp,DWORD PTR [ebx-0x1f3d8500]
  41b67a:	ror    BYTE PTR [ecx+eax*2-0x4a],cl
  41b67e:	(bad)  
  41b67f:	pop    ss
  41b680:	mov    ch,0x5a
  41b682:	aaa    
  41b683:	cmp    DWORD PTR [ebx],ebp
  41b685:	lahf   
  41b686:	and    eax,DWORD PTR [ecx+0x6babdbea]
  41b68c:	sub    al,0x10
  41b68e:	and    esi,DWORD PTR [edi]
  41b690:	in     al,dx
  41b691:	je     0x41b66f
  41b693:	sbb    eax,0xfc4d6417
  41b698:	push   edx
  41b699:	sub    edi,DWORD PTR [ebx+eax*2+0x63]
  41b69d:	cmp    eax,0x89d5804c
  41b6a2:	inc    edx
  41b6a3:	xchg   ebp,eax
  41b6a4:	lods   eax,DWORD PTR ds:[esi]
  41b6a5:	mov    bh,0x8d
  41b6a7:	sbb    eax,DWORD PTR [ecx-0x7db8205e]
  41b6ad:	sbb    edi,ebp
  41b6af:	pop    ss
  41b6b0:	das    
  41b6b1:	aas    
  41b6b2:	and    BYTE PTR [esi+0xb01dee0],dh
  41b6b8:	cs retf 
  41b6ba:	add    DWORD PTR [esi+0xc3596c2],0xffffff84
  41b6c1:	test   DWORD PTR [edi-0xa6dd3fe],edx
  41b6c7:	jns    0x41b71e
  41b6c9:	leave  
  41b6ca:	cld    
  41b6cb:	sbb    eax,0x18299524
  41b6d0:	mov    ecx,0xa9366a70
  41b6d5:	test   eax,0xfd79f220
  41b6da:	hlt    
  41b6db:	gs (bad) 
  41b6df:	mov    ah,0x5f
  41b6e1:	je     0x41b6b7
  41b6e3:	xchg   esp,eax
  41b6e4:	leave  
  41b6e5:	mov    ebp,0xe3d42296
  41b6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6eb:	pop    es
  41b6ec:	lahf   
  41b6ed:	inc    eax
  41b6ee:	fadd   QWORD PTR [ebx+eiz*8+0x1707b35d]
  41b6f5:	ficomp DWORD PTR [eax-0x23]
  41b6f8:	or     DWORD PTR ds:0xe3039cd0,0xffffffb5
  41b6ff:	loopne 0x41b6a1
  41b701:	mov    eax,0xac9303eb
  41b706:	cdq    
  41b707:	ret    0x49f8
  41b70a:	enter  0x72b0,0xa2
  41b70e:	out    dx,eax
  41b70f:	or     DWORD PTR [edi+edx*2+0x48de8629],esp
  41b716:	add    al,dh
  41b718:	jg     0x41b6dc
  41b71a:	std    
  41b71b:	ret    0xecb
  41b71e:	sbb    al,0xbf
  41b720:	stos   BYTE PTR es:[edi],al
  41b721:	fwait
  41b722:	mov    esp,0xd22b173e
  41b727:	push   ebp
  41b728:	add    ebx,DWORD PTR [ebp-0x21]
  41b72b:	cmc    
  41b72c:	cmp    cl,BYTE PTR [esi-0x12]
  41b72f:	ror    DWORD PTR [edi],0x43
  41b732:	mov    dh,BYTE PTR [ecx+0x284fe4f8]
  41b738:	mov    edi,0x2e99daa1
  41b73d:	dec    ebp
  41b73e:	test   DWORD PTR [edi+edi*1+0x57b9ecce],esi
  41b745:	div    DWORD PTR [eax]
  41b747:	push   ebx
  41b748:	pop    ss
  41b749:	out    0xa9,al
  41b74b:	jbe    0x41b6ef
  41b74d:	into   
  41b74e:	fs out dx,eax
  41b750:	lods   eax,DWORD PTR ds:[esi]
  41b751:	mov    esp,0x1c032b05
  41b756:	jp     0x41b73e
  41b758:	rol    DWORD PTR [esi],1
  41b75a:	pop    ebp
  41b75b:	mov    cl,0xe7
  41b75d:	mov    es:0x3c95a5a9,eax
  41b763:	dec    ebp
  41b764:	jnp    0x41b701
  41b766:	clc    
  41b767:	add    DWORD PTR [ebp+0x2c96c411],ecx
  41b76d:	sbb    eax,0x13377bf8
  41b772:	sbb    edx,DWORD PTR [ecx]
  41b774:	dec    esi
  41b775:	sbb    DWORD PTR [ecx*1-0x35e5762],ebp
  41b77c:	cs sahf 
  41b77e:	inc    ebx
  41b77f:	es xchg ebp,eax
  41b781:	cmp    edx,DWORD PTR fs:[eax-0x5358e14e]
  41b788:	sub    eax,0x1360a46d
  41b78d:	mov    al,ds:0x36551e3e
  41b792:	arpl   WORD PTR [ebp+ebx*8+0x53],bp
  41b796:	dec    DWORD PTR [ecx]
  41b798:	dec    ebp
  41b799:	mov    ah,BYTE PTR [ebp+0x6c17ed8b]
  41b79f:	stc    
  41b7a0:	mov    esi,0x2f15d340
  41b7a5:	mov    DWORD PTR [edx+0x0],eax
  41b7a8:	(bad)  
  41b7a9:	outs   dx,BYTE PTR ds:[esi]
  41b7aa:	iret   
  41b7ab:	pusha  
  41b7ac:	sub    bl,ah
  41b7ae:	pushf  
  41b7af:	dec    esi
  41b7b0:	pop    ebx
  41b7b1:	call   0x24de:0x481c6732
  41b7b8:	leave  
  41b7b9:	cwde   
  41b7ba:	test   BYTE PTR [ecx+0x11],ch
  41b7bd:	nop
  41b7be:	cmp    eax,0x1b9762
  41b7c3:	fild   WORD PTR ds:0xab91631e
  41b7c9:	mov    eax,ds:0x9ef3035a
  41b7ce:	sbb    eax,0x6606a6f2
  41b7d3:	mov    dl,0xc5
  41b7d5:	in     al,0x58
  41b7d7:	popf   
  41b7d8:	mov    esi,0x43c8c9a2
  41b7dd:	inc    ebp
  41b7de:	dec    edi
  41b7df:	ret    0x1ce0
  41b7e2:	xchg   edi,eax
  41b7e3:	popf   
  41b7e4:	mov    bh,0x95
  41b7e6:	xchg   ebx,eax
  41b7e7:	retf   0xdb0a
  41b7ea:	les    esp,FWORD PTR [eax]
  41b7ec:	mov    DWORD PTR [ebx+0x28],ebp
  41b7ef:	ja     0x41b7ab
  41b7f1:	fistp  WORD PTR [ebx-0x17]
  41b7f4:	fcomip st,st(2)
  41b7f6:	ins    DWORD PTR es:[edi],dx
  41b7f7:	xchg   ecx,eax
  41b7f8:	cld    
  41b7f9:	add    bl,BYTE PTR [ebp+edi*4+0x50]
  41b7fd:	out    dx,al
  41b7fe:	sub    dl,BYTE PTR [edi]
  41b800:	sbb    al,0x1d
  41b802:	mov    ebp,0x916537e2
  41b807:	jl     0x41b7cc
  41b809:	sahf   
  41b80a:	punpckhdq mm5,mm5
  41b80d:	repnz fld TBYTE PTR [ebp+esi*1-0x1]
  41b812:	scas   eax,DWORD PTR es:[edi]
  41b813:	xchg   DWORD PTR ds:0xa93865b5,ebp
  41b819:	push   es
  41b81a:	fidiv  DWORD PTR [esi+0x68]
  41b81d:	sub    BYTE PTR [ecx-0x33],dl
  41b820:	mov    bl,0xe3
  41b822:	inc    cl
  41b824:	push   eax
  41b825:	push   0x7fe8fe68
  41b82a:	or     al,0x7c
  41b82c:	js     0x41b7c8
  41b82e:	mov    esi,0x634d65ec
  41b833:	mov    bl,0x51
  41b835:	pop    esp
  41b836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b837:	or     edx,DWORD PTR [ebp-0x18b9a3b5]
  41b83d:	push   esi
  41b83e:	out    dx,eax
  41b83f:	les    eax,FWORD PTR [edi+ebx*4+0x6dac45b3]
  41b846:	call   0xd9b7b2ae
  41b84b:	sbb    esi,ebp
  41b84d:	pushf  
  41b84e:	sar    BYTE PTR [esi-0x16],cl
  41b851:	jae    0x41b871
  41b853:	aaa    
  41b854:	popa   
  41b855:	push   edi
  41b856:	or     BYTE PTR [esi+0x70],bh
  41b859:	(bad)  
  41b85a:	adc    al,al
  41b85c:	(bad)  
  41b85d:	std    
  41b85e:	cmp    DWORD PTR [ecx-0xa],ecx
  41b861:	lea    edx,[ebx+eiz*1+0x51c55a7e]
  41b868:	push   edi
  41b869:	xchg   DWORD PTR [eax],esp
  41b86b:	stc    
  41b86c:	push   ds
  41b86d:	stos   DWORD PTR es:[edi],eax
  41b86e:	mov    ch,ah
  41b870:	enter  0x2b35,0xb4
  41b874:	adc    eax,0xc06e734b
  41b879:	sub    DWORD PTR [ecx],0x4f7eb708
  41b87f:	popa   
  41b880:	push   esi
  41b881:	add    eax,0x21d947ed
  41b886:	jbe    0x41b8a9
  41b888:	fstp   QWORD PTR [edx+0x1]
  41b88b:	iret   
  41b88c:	adc    BYTE PTR [eax],al
  41b88e:	cmp    DWORD PTR [ebx+0x612d1fa9],ebx
  41b894:	push   ebp
  41b895:	add    BYTE PTR [ecx],0x1f
  41b898:	adc    BYTE PTR [ebp-0x489f2c0b],ch
  41b89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b89f:	mov    ds:0x6e783d8d,eax
  41b8a4:	adc    edx,DWORD PTR [ebp+0x3b3138d4]
  41b8aa:	push   eax
  41b8ab:	or     edx,0xae9fb070
  41b8b1:	bound  esp,QWORD PTR [edi-0x3bfcd36c]
  41b8b7:	push   edi
  41b8b8:	cmp    al,0x29
  41b8ba:	cli    
  41b8bb:	jae    0x41b864
  41b8bd:	mov    dl,0xe6
  41b8bf:	fnstsw WORD PTR [edi-0x22]
  41b8c2:	mov    ?,WORD PTR [ecx]
  41b8c4:	aad    0x65
  41b8c6:	out    0x47,al
  41b8c8:	cmp    eax,ebx
  41b8ca:	push   esi
  41b8cb:	dec    esp
  41b8cc:	inc    ebx
  41b8cd:	sbb    al,0x1b
  41b8cf:	sub    eax,0xf53ed90e
  41b8d4:	rcl    DWORD PTR [esp+ebp*8-0x5cd52e26],0xe2
  41b8dc:	ret    0x2b6c
  41b8df:	jmp    0x4d9e3ec0
  41b8e4:	call   0xdd816c9c
  41b8e9:	mov    DWORD PTR [edi],ebp
  41b8eb:	cmp    ch,dl
  41b8ed:	je     0x41b910
  41b8ef:	xchg   ecx,eax
  41b8f0:	jbe    0x41b8c5
  41b8f2:	in     eax,dx
  41b8f3:	sbb    eax,0x1c475e16
  41b8f8:	and    BYTE PTR [edi+eax*4+0x56],dh
  41b8fc:	inc    BYTE PTR [edi]
  41b8fe:	bound  edi,QWORD PTR [eax+0x1]
  41b901:	jmp    0xd350:0xef04ca5a
  41b908:	mov    cl,0x8
  41b90a:	and    eax,0x960a9982
  41b90f:	dec    esi
  41b910:	in     al,dx
  41b911:	pusha  
  41b912:	sub    al,0x22
  41b914:	nop
  41b915:	stos   DWORD PTR es:[edi],eax
  41b916:	leave  
  41b917:	push   0x0
  41b919:	or     edx,DWORD PTR [edi+0x21e1c7a6]
  41b91f:	mov    ebx,0xd85f95b4
  41b924:	pop    ds
  41b925:	pop    esi
  41b926:	int    0xdd
  41b928:	fsub   DWORD PTR [ecx]
  41b92a:	xor    dl,BYTE PTR [esi-0x6c]
  41b92d:	outs   dx,BYTE PTR ds:[esi]
  41b92e:	inc    ecx
  41b92f:	stc    
  41b930:	cmp    ah,cl
  41b932:	(bad)  
  41b933:	and    bl,ah
  41b935:	mov    cl,0x45
  41b937:	or     DWORD PTR [ecx],ebp
  41b939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b93a:	adc    DWORD PTR [esi],edx
  41b93c:	lahf   
  41b93d:	sub    eax,0x617cc020
  41b942:	dec    ebx
  41b943:	aam    0x40
  41b945:	loope  0x41b97c
  41b947:	xor    cl,bl
  41b949:	pop    ss
  41b94a:	or     al,0xd4
  41b94c:	sbb    BYTE PTR [eax+0x30],bh
  41b94f:	out    dx,al
  41b950:	dec    ebx
  41b951:	dec    ebp
  41b952:	sub    eax,0xaec707eb
  41b957:	fdiv   st(4),st
  41b959:	out    dx,eax
  41b95a:	ds push eax
  41b95d:	push   edx
  41b95e:	stos   DWORD PTR es:[edi],eax
  41b95f:	mov    eax,0x4a49fd0f
  41b964:	loope  0x41b9de
  41b966:	sbb    bl,dh
  41b968:	cmc    
  41b969:	or     eax,0x703b1b55
  41b96e:	addr16 test eax,0x7121e581
  41b974:	fbld   TBYTE PTR [esi]
  41b976:	push   esp
  41b977:	mov    edi,0x54355b82
  41b97c:	mov    eax,0xa92b345
  41b981:	lods   eax,DWORD PTR ds:[esi]
  41b982:	sub    BYTE PTR [ecx+0x7e48f072],al
  41b988:	mov    ch,0xf0
  41b98a:	push   edi
  41b98b:	test   DWORD PTR fs:[eax+0x78262d3],eax
  41b992:	adc    BYTE PTR [ebp-0x1c73b994],al
  41b998:	ins    DWORD PTR es:[edi],dx
  41b999:	nop
  41b99a:	cmp    al,0x5
  41b99c:	mov    cl,0x1
  41b99e:	dec    edx
  41b99f:	mov    al,ds:0x34ad02d8
  41b9a4:	adc    DWORD PTR [ebx+ebp*2+0x424319c6],eax
  41b9ab:	call   0x533d0624
  41b9b0:	cmp    ecx,edi
  41b9b2:	paddsw mm2,mm1
  41b9b5:	inc    edi
  41b9b6:	rcr    edi,0xf4
  41b9b9:	ret    
  41b9ba:	frstor [ebx-0x65dfed40]
  41b9c0:	push   esi
  41b9c1:	ret    0xaf7e
  41b9c4:	push   ds
  41b9c5:	test   esp,ecx
  41b9c7:	pushf  
  41b9c8:	shl    eax,cl
  41b9ca:	es js  0x41b981
  41b9cd:	std    
  41b9ce:	in     eax,dx
  41b9cf:	hlt    
  41b9d0:	push   cs
  41b9d1:	push   cs
  41b9d2:	cs xor eax,ebx
  41b9d5:	repnz push ebx
  41b9d7:	mov    edx,0x56cd7036
  41b9dc:	add    ebx,esi
  41b9de:	mov    ebx,DWORD PTR [ebp+0x603b8dc8]
  41b9e4:	fwait
  41b9e5:	aam    0xb5
  41b9e7:	mov    esp,0x33ca8024
  41b9ec:	aam    0xd2
  41b9ee:	pop    edx
  41b9ef:	adc    DWORD PTR [esi-0xd],ebx
  41b9f2:	jle    0x41ba33
  41b9f4:	mov    al,0x8d
  41b9f6:	mov    cl,0xe0
  41b9f8:	fldenv [edi+0x6d]
  41b9fb:	sub    ecx,DWORD PTR [ecx-0xe]
  41b9fe:	push   ebp
  41b9ff:	xchg   esp,eax
  41ba00:	shl    DWORD PTR [edx],cl
  41ba02:	xor    al,0x78
  41ba04:	jmp    0x1e31:0xcd9f30d4
  41ba0b:	xlat   BYTE PTR ds:[ebx]
  41ba0c:	leave  
  41ba0d:	sbb    bh,BYTE PTR [edx+ecx*8]
  41ba10:	mov    ds:0x77256ebe,eax
  41ba15:	loope  0x41b9ab
  41ba17:	(bad)  
  41ba18:	pop    es
  41ba19:	jmp    0xf991d529
  41ba1e:	xchg   ecx,eax
  41ba1f:	lahf   
  41ba20:	repz test al,0xc3
  41ba23:	les    edi,FWORD PTR [ebx]
  41ba25:	sbb    dh,al
  41ba27:	sub    al,0x6a
  41ba29:	dec    ebx
  41ba2a:	pusha  
  41ba2b:	sti    
  41ba2c:	mov    al,ds:0x78575441
  41ba31:	sti    
  41ba32:	mov    edx,0xa35216ff
  41ba37:	mov    BYTE PTR [esi-0x1a55f72a],0xd6
  41ba3e:	mov    edi,0xf4b4f4a9
  41ba43:	cli    
  41ba44:	pop    ebp
  41ba45:	stos   BYTE PTR es:[edi],al
  41ba46:	inc    ecx
  41ba47:	adc    eax,0xe56ec005
  41ba4c:	adc    eax,0x96e280e4
  41ba51:	pop    ebp
  41ba52:	lods   al,BYTE PTR ds:[esi]
  41ba53:	push   edx
  41ba54:	xchg   edi,eax
  41ba55:	jge    0x41baa8
  41ba57:	fwait
  41ba58:	sub    eax,0x372330c4
  41ba5d:	jmp    0x68bdf6e8
  41ba62:	test   BYTE PTR [edx+0x5c3fbd41],bl
  41ba68:	jle    0x41ba3a
  41ba6a:	xor    DWORD PTR [ebx],esp
  41ba6c:	mov    cl,0x22
  41ba6e:	add    al,0x13
  41ba70:	leavew 
  41ba72:	stc    
  41ba73:	icebp  
  41ba74:	xchg   edx,eax
  41ba75:	adc    al,0x7c
  41ba77:	mov    cs,ecx
  41ba79:	jmp    0x41ba74
  41ba7b:	adc    ebp,DWORD PTR [edx-0x1e6fed47]
  41ba81:	hlt    
  41ba82:	sbb    al,0x22
  41ba84:	xor    DWORD PTR [esi-0x4d],0x8cfa667d
  41ba8b:	mov    esp,0x6077df0f
  41ba90:	fcmovu st,st(2)
  41ba92:	cmp    al,0x24
  41ba94:	rcr    BYTE PTR [ecx-0x193fec24],1
  41ba9a:	shl    ch,0xea
  41ba9d:	xor    DWORD PTR [ebp-0x41],esi
  41baa0:	inc    eax
  41baa1:	and    BYTE PTR ds:0x9e492d5c,ah
  41baa7:	mov    esp,DWORD PTR [esi+eiz*4-0x77]
  41baab:	call   0xd30ac6b0
  41bab0:	sub    bl,BYTE PTR [edi+0x50]
  41bab3:	xchg   esi,eax
  41bab4:	mov    esi,0x1e1ab605
  41bab9:	jmp    0x41ba9f
  41babb:	mov    esp,0xd460582a
  41bac0:	push   0x28a8347a
  41bac5:	ss inc esi
  41bac7:	push   esp
  41bac8:	popa   
  41bac9:	lods   al,BYTE PTR ds:[esi]
  41baca:	mov    dl,0x65
  41bacc:	xor    edi,eax
  41bace:	xchg   ecx,ebp
  41bad0:	adc    eax,0x79d8ad5c
  41bad5:	jg     0x41baed
  41bad7:	mov    eax,ds:0xd7dac5bb
  41badc:	jb     0x41bae3
  41bade:	mov    ebp,0xb3632fd5
  41bae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bae4:	sub    dl,BYTE PTR [eax]
  41bae6:	lock test eax,0x33ce2a48
  41baec:	xor    DWORD PTR [ebx+ebp*1+0x69],esp
  41baf0:	scas   al,BYTE PTR es:[edi]
  41baf1:	xor    esp,edi
  41baf3:	in     eax,0xe1
  41baf5:	imul   esi,DWORD PTR [eax-0x24],0xc7dece27
  41bafc:	dec    edi
  41bafd:	jmp    0xe875e842
  41bb02:	jns    0x41baab
  41bb04:	rcr    BYTE PTR [ebx+ecx*1],cl
  41bb07:	js     0x41baee
  41bb09:	mov    bl,0xd8
  41bb0b:	stos   BYTE PTR es:[edi],al
  41bb0c:	mov    eax,ds:0xd6f21a6
  41bb11:	and    al,0xfc
  41bb13:	retf   0x1526
  41bb16:	or     eax,DWORD PTR [edi]
  41bb18:	sub    al,dh
  41bb1a:	enter  0xfdc4,0xd8
  41bb1e:	push   esp
  41bb1f:	jbe    0x41bb17
  41bb21:	sbb    al,0x51
  41bb23:	add    DWORD PTR [eax+0x40],0x805f186b
  41bb2a:	shl    DWORD PTR [ecx+0x64],1
  41bb2d:	push   ecx
  41bb2e:	enter  0xa435,0x24
  41bb32:	pop    edx
  41bb33:	in     al,0x26
  41bb35:	(bad)  
  41bb36:	jmp    0x41bb68
  41bb38:	xor    eax,0x45b502dd
  41bb3d:	add    ecx,DWORD PTR [edi-0x3fd9878c]
  41bb43:	cmp    al,0x7e
  41bb45:	stos   BYTE PTR es:[edi],al
  41bb46:	mov    BYTE PTR [edx+0xe],ah
  41bb49:	sti    
  41bb4a:	pop    edx
  41bb4b:	(bad)  
  41bb4c:	add    DWORD PTR es:[edi],ecx
  41bb4f:	sar    DWORD PTR [edx-0x1cf1f9e3],1
  41bb55:	leave  
  41bb56:	cmp    ah,dl
  41bb58:	xchg   ebp,eax
  41bb59:	outs   dx,BYTE PTR ds:[esi]
  41bb5a:	cmp    BYTE PTR [esi],ch
  41bb5c:	stos   BYTE PTR es:[edi],al
  41bb5d:	inc    eax
  41bb5e:	sahf   
  41bb5f:	std    
  41bb60:	enter  0x16a,0x7b
  41bb64:	sbb    edi,DWORD PTR [ecx+0x30]
  41bb67:	js     0x41bb62
  41bb69:	sti    
  41bb6a:	sbb    DWORD PTR [edi-0x35],eax
  41bb6d:	stos   DWORD PTR es:[edi],eax
  41bb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb6f:	or     al,0xf8
  41bb71:	or     eax,0xcbfc8af
  41bb76:	cmp    eax,0x61da2ae5
  41bb7b:	nop
  41bb7c:	cmp    bh,BYTE PTR [ebx+ebp*4+0x1b]
  41bb80:	sbb    edx,DWORD PTR [ecx+0x1]
  41bb83:	mov    eax,ds:0x1d3fae6
  41bb88:	mov    dl,0xc9
  41bb8a:	pop    edx
  41bb8b:	loopne 0x41bb88
  41bb8d:	and    edi,DWORD PTR [esi-0x60539d69]
  41bb93:	and    BYTE PTR [esi+ebp*8-0x41c4ae1d],ah
  41bb9a:	les    esi,FWORD PTR [ecx]
  41bb9c:	add    esi,DWORD PTR [eax]
  41bb9e:	in     al,0x62
  41bba0:	out    0x3b,al
  41bba2:	fs aas 
  41bba4:	iret   
  41bba5:	jecxz  0x41bba4
  41bba7:	mov    al,ds:0x68507d5b
  41bbac:	dec    esp
  41bbad:	xchg   ecx,eax
  41bbae:	jne    0x41bbf5
  41bbb0:	ss jg  0x41bb4b
  41bbb3:	cwde   
  41bbb4:	xchg   esp,eax
  41bbb5:	and    DWORD PTR [esi+edi*4+0x6f],ebp
  41bbb9:	mov    dh,0xa4
  41bbbb:	pushf  
  41bbbc:	rol    ebx,cl
  41bbbe:	pop    ebp
  41bbbf:	mov    WORD PTR [eax],cs
  41bbc1:	ins    BYTE PTR es:[edi],dx
  41bbc2:	and    eax,0x8a31f353
  41bbc7:	fsubr  QWORD PTR [esi+0x5d]
  41bbca:	or     eax,0x4cb25415
  41bbcf:	ins    DWORD PTR es:[edi],dx
  41bbd0:	push   0x7b95c543
  41bbd5:	fnstenv [edx]
  41bbd7:	jnp    0x41bbda
  41bbd9:	mov    bh,dh
  41bbdb:	(bad)  
  41bbdc:	aaa    
  41bbdd:	ds mov esi,0x8c4020b8
  41bbe3:	inc    ebx
  41bbe4:	sub    ebx,ebx
  41bbe6:	cmp    edx,DWORD PTR [edi-0x3e]
  41bbe9:	loop   0x41bbc0
  41bbeb:	into   
  41bbec:	je     0x41bbb3
  41bbee:	fisubr WORD PTR [ecx+0x67d04205]
  41bbf4:	clc    
  41bbf5:	je     0x41bbb0
  41bbf7:	sahf   
  41bbf8:	dec    dh
  41bbfa:	into   
  41bbfb:	(bad)  
  41bbfd:	fs jg  0x41bc26
  41bc00:	add    BYTE PTR [edx-0x46a3568f],al
  41bc06:	loope  0x41bc17
  41bc08:	mov    eax,ebp
  41bc0a:	out    dx,al
  41bc0b:	push   esp
  41bc0c:	ja     0x41bc02
  41bc0e:	jecxz  0x41bb9a
  41bc10:	mov    eax,ds:0xb2fcd4b4
  41bc15:	leave  
  41bc16:	lahf   
  41bc17:	dec    ebx
  41bc18:	adc    eax,0x8f5e23ad
  41bc1d:	(bad)  
  41bc1e:	push   ecx
  41bc1f:	pusha  
  41bc20:	sbb    eax,0x2437bca3
  41bc25:	mov    bl,0x81
  41bc27:	jecxz  0x41bc8b
  41bc29:	ficom  WORD PTR [edi+0x739009c1]
  41bc2f:	loope  0x41bca2
  41bc31:	repnz loope 0x41bbe7
  41bc34:	loopne 0x41bc3b
  41bc36:	ret    0xe4c1
  41bc39:	dec    ebp
  41bc3a:	cmp    cl,BYTE PTR [edx-0x47]
  41bc3d:	test   al,0x5
  41bc3f:	inc    ebp
  41bc40:	jp     0x41bca0
  41bc42:	push   0x53
  41bc44:	stos   BYTE PTR es:[edi],al
  41bc45:	jge    0x41bcc1
  41bc47:	mov    ?,WORD PTR [ecx+0x64]
  41bc4a:	retf   
  41bc4b:	mov    ds:0x5f65c331,al
  41bc50:	push   0x8c545ea0
  41bc55:	dec    edx
  41bc56:	js     0x41bcaa
  41bc58:	pop    ecx
  41bc59:	pop    ecx
  41bc5a:	sub    dh,al
  41bc5c:	dec    ebp
  41bc5d:	mov    bl,BYTE PTR [eax-0x19]
  41bc60:	mov    al,0x94
  41bc62:	adc    ch,BYTE PTR [eax]
  41bc64:	mov    ss,WORD PTR [eax+0x43]
  41bc67:	lods   eax,DWORD PTR ds:[esi]
  41bc68:	xchg   BYTE PTR [esi+0x2e7df1ec],dh
  41bc6e:	outs   dx,BYTE PTR ds:[esi]
  41bc6f:	leave  
  41bc70:	clc    
  41bc71:	inc    ecx
  41bc72:	mov    ah,0xb7
  41bc74:	cld    
  41bc75:	int3   
  41bc76:	into   
  41bc77:	sub    DWORD PTR [ebx-0x62],ecx
  41bc7a:	push   0xffffff85
  41bc7c:	ds dec ecx
  41bc7e:	sub    BYTE PTR [ebx+0x7a169d],dl
  41bc84:	pop    ss
  41bc85:	std    
  41bc86:	outs   dx,BYTE PTR ds:[esi]
  41bc87:	jo     0x41bc38
  41bc89:	mov    eax,ds:0xfdb2f542
  41bc8e:	pop    ebp
  41bc8f:	xor    DWORD PTR [edi+0x2f],0xffffff88
  41bc93:	inc    ecx
  41bc94:	out    0xe5,al
  41bc96:	pop    edi
  41bc97:	jbe    0x41bd0a
  41bc99:	rcr    BYTE PTR [ebx-0x66896db1],cl
  41bc9f:	adc    eax,0x23e77c2c
  41bca4:	sbb    cl,bl
  41bca6:	adc    dh,BYTE PTR [edi+0x14483c1d]
  41bcac:	sbb    edi,DWORD PTR [ebx]
  41bcae:	inc    esp
  41bcaf:	push   ss
  41bcb0:	mov    bl,0x64
  41bcb2:	xor    eax,0xd461ead1
  41bcb7:	(bad)  
  41bcb8:	shl    DWORD PTR [ebp-0x3634ec76],1
  41bcbe:	ds pop edi
  41bcc0:	std    
  41bcc1:	fidivr DWORD PTR [esi+ebp*4]
  41bcc4:	push   ebp
  41bcc5:	ins    BYTE PTR es:[edi],dx
  41bcc6:	shl    DWORD PTR [ecx+0x4ab0dca5],0x38
  41bccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcce:	cmp    BYTE PTR ds:0xd06dc1b,dh
  41bcd4:	xor    BYTE PTR [edx],ch
  41bcd6:	adc    edx,DWORD PTR [eax-0x3140e495]
  41bcdc:	retf   
  41bcdd:	mov    eax,0xed034efe
  41bce2:	mov    ss,eax
  41bce4:	pop    eax
  41bce5:	dec    ebx
  41bce6:	aad    0xd1
  41bce8:	mov    al,BYTE PTR [ebx]
  41bcea:	cmp    al,0xa5
  41bcec:	test   al,0x7e
  41bcee:	ss aas 
  41bcf0:	(bad)  
  41bcf1:	jmp    0x41bcca
  41bcf3:	mov    edi,0x51e512c
  41bcf8:	adc    BYTE PTR [edi+0x74],cl
  41bcfb:	mul    BYTE PTR [eax+0xb]
  41bcfe:	aaa    
  41bcff:	test   DWORD PTR [eax+0x1b],0x165e3f14
  41bd06:	or     al,BYTE PTR ds:0xb4de5ffa
  41bd0c:	sbb    edi,eax
  41bd0e:	fwait
  41bd0f:	sbb    DWORD PTR [eax+0x1f],esi
  41bd12:	out    0x64,eax
  41bd14:	lds    edi,FWORD PTR [ecx-0x4524422d]
  41bd1a:	fcom   DWORD PTR [edi]
  41bd1c:	jbe    0x41bcf8
  41bd1e:	or     eax,0x5a5ce3b8
  41bd23:	mov    ebp,0x7243ee34
  41bd28:	mov    bh,0x2d
  41bd2a:	jns    0x41bcb5
  41bd2c:	fstp   QWORD PTR [ebx+ebx*4+0x59810212]
  41bd33:	addr16 jl 0x41bcba
  41bd36:	cmp    eax,0xd2290a36
  41bd3b:	fsubr  QWORD PTR [edi+ebp*4]
  41bd3e:	inc    edi
  41bd3f:	xor    eax,0xb2a8fb00
  41bd44:	jmp    0x15dd:0x17e39e3c
  41bd4b:	nop
  41bd4c:	mov    ebp,0x663c242c
  41bd51:	dec    eax
  41bd52:	das    
  41bd53:	pop    edx
  41bd54:	push   edx
  41bd55:	add    esi,DWORD PTR [ecx+ebx*8]
  41bd58:	jb     0x41bdaf
  41bd5a:	mov    al,ds:0xaaa0ed4e
  41bd5f:	(bad)  
  41bd60:	jmp    0x41bce8
  41bd62:	(bad)  
  41bd63:	les    ebp,FWORD PTR [esp+esi*4]
  41bd66:	outs   dx,BYTE PTR ds:[esi]
  41bd67:	and    BYTE PTR [esi-0x10],dl
  41bd6a:	retf   
  41bd6b:	(bad)  
  41bd6c:	lea    esi,[ebp-0x70]
  41bd6f:	add    al,0x22
  41bd71:	jge    0x41bd81
  41bd73:	fidiv  WORD PTR [eax+0x41473f48]
  41bd79:	jl     0x41bd1e
  41bd7b:	aas    
  41bd7c:	adc    eax,0x697495b1
  41bd81:	mov    ebx,0xcf83d1e5
  41bd86:	fwait
  41bd87:	mul    BYTE PTR [esi]
  41bd89:	sbb    BYTE PTR [edi],cl
  41bd8b:	bound  edi,QWORD PTR [ecx+0x26]
  41bd8e:	inc    ebp
  41bd8f:	or     al,BYTE PTR [ecx+ebx*8-0x70afde55]
  41bd96:	sub    eax,0xde6760c5
  41bd9b:	jb     0x41bd46
  41bd9d:	sbb    cl,bl
  41bd9f:	iret   
  41bda0:	pushf  
  41bda1:	sbb    eax,0xe4b2555e
  41bda6:	mov    eax,0xc2cc7c63
  41bdab:	test   eax,0x28371170
  41bdb0:	aad    0x8c
  41bdb2:	jecxz  0x41bd92
  41bdb4:	adc    cl,dh
  41bdb6:	xor    eax,0x7e557dec
  41bdbb:	inc    edx
  41bdbc:	pop    es
  41bdbd:	cmp    BYTE PTR [ebx],bh
  41bdbf:	ins    DWORD PTR es:[edi],dx
  41bdc0:	push   eax
  41bdc1:	adc    ebp,DWORD PTR [ecx+0x4c99d82a]
  41bdc7:	dec    edi
  41bdc8:	xchg   DWORD PTR [esi-0x6973f10f],edi
  41bdce:	adc    DWORD PTR [ebp-0x63],esi
  41bdd1:	hlt    
  41bdd2:	mov    ah,0xd5
  41bdd4:	outs   dx,BYTE PTR ds:[esi]
  41bdd5:	inc    esi
  41bdd6:	leave  
  41bdd7:	lahf   
  41bdd8:	ins    DWORD PTR es:[edi],dx
  41bdd9:	hlt    
  41bdda:	std    
  41bddb:	or     al,0xe0
  41bddd:	adc    BYTE PTR [ecx+0x63d7303c],bl
  41bde3:	cmc    
  41bde4:	fst    st(3)
  41bde6:	add    al,BYTE PTR [ebx]
  41bde8:	sbb    BYTE PTR [eax],dl
  41bdea:	ret    0x1c74
  41bded:	lods   al,BYTE PTR ds:[esi]
  41bdee:	sti    
  41bdef:	push   ebx
  41bdf0:	push   ds
  41bdf1:	push   ebx
  41bdf2:	add    edi,DWORD PTR [edx-0x3b6ae441]
  41bdf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdf9:	test   BYTE PTR [edx+esi*1],dl
  41bdfc:	inc    ebp
  41bdfd:	scas   al,BYTE PTR es:[edi]
  41bdfe:	iret   
  41bdff:	popa   
  41be00:	jo     0x41be0e
  41be02:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41be04:	inc    ebp
  41be05:	addr16 push esi
  41be07:	push   0x1bb3575a
  41be0c:	add    BYTE PTR [edi],ch
  41be0e:	jp     0x41be2a
  41be10:	push   ebp
  41be11:	add    esp,DWORD PTR [ebp+0x24b314e4]
  41be17:	inc    ebx
  41be18:	jp     0x41bdf8
  41be1a:	repz sbb edi,esp
  41be1d:	lea    esi,[edx-0xebcb3b8]
  41be23:	imul   eax,DWORD PTR [esi],0x19
  41be26:	pop    ebx
  41be27:	scas   eax,DWORD PTR es:[edi]
  41be28:	push   ss
  41be29:	and    DWORD PTR [edi],0x7f3591a3
  41be2f:	(bad)
  41be32:	cli    
  41be33:	mov    bh,0xbf
  41be35:	dec    esp
  41be36:	loope  0x41bde3
  41be38:	adc    BYTE PTR [ecx+0x6bd3ee80],al
  41be3e:	cmp    BYTE PTR [edx-0x6eba5a6c],0xb0
  41be45:	and    eax,DWORD PTR [esi]
  41be47:	inc    edx
  41be48:	aas    
  41be49:	imul   esp,edi,0x3e
  41be4c:	mov    dl,0x9a
  41be4e:	stos   DWORD PTR es:[edi],eax
  41be4f:	xchg   edi,eax
  41be50:	outs   dx,DWORD PTR ds:[esi]
  41be51:	int    0xe6
  41be53:	es inc edi
  41be55:	mov    BYTE PTR [ebx],cl
  41be57:	push   ss
  41be58:	dec    ecx
  41be59:	pop    es
  41be5a:	loope  0x41be9d
  41be5c:	aad    0x76
  41be5e:	bnd jns 0x41bde9
  41be61:	pop    esi
  41be62:	iret   
  41be63:	stos   BYTE PTR es:[edi],al
  41be64:	icebp  
  41be65:	es gs pop ss
  41be68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be69:	adc    cl,BYTE PTR [eax]
  41be6b:	fistp  WORD PTR [ebx+0x623facec]
  41be71:	adc    al,0x6f
  41be73:	nop
  41be74:	push   0xdcdead7a
  41be79:	fisub  DWORD PTR [edx+0x349248cc]
  41be7f:	inc    eax
  41be80:	add    BYTE PTR [ebp+0x27a71161],bl
  41be86:	jle    0x41bebb
  41be88:	push   ss
  41be89:	xlat   BYTE PTR ds:[ebx]
  41be8a:	and    BYTE PTR [eax],cl
  41be8c:	adc    DWORD PTR [esi],edi
  41be8e:	sub    ah,ch
  41be90:	push   ecx
  41be92:	xchg   ebp,eax
  41be93:	jns    0x41be45
  41be95:	push   esi
  41be96:	dec    esi
  41be97:	call   0xe700b913
  41be9c:	sub    ebp,DWORD PTR [ecx-0x11fda5a6]
  41bea2:	test   BYTE PTR [eax],dl
  41bea4:	cmp    al,0x90
  41bea6:	jmp    0xf3ec:0x9b8b9df1
  41bead:	sub    cl,BYTE PTR [edx+0x59]
  41beb0:	inc    edi
  41beb1:	sahf   
  41beb2:	or     edi,DWORD PTR [ebx+0x12]
  41beb5:	jle    0x41be98
  41beb7:	pop    esi
  41beb8:	fist   DWORD PTR [ebx-0x400ecc94]
  41bebe:	or     BYTE PTR [ebp-0x1d40033],cl
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	xor    BYTE PTR ds:0xe4f700,ch
  41bf76:	jl     0x41bff3
  41bf78:	sbb    BYTE PTR [esi+0x47377b7b],bl
  41bf7e:	test   BYTE PTR [ebx+0x259beee3],dh
  41bf84:	sahf   
  41bf85:	shl    DWORD PTR [edi+0x3a],1
  41bf88:	mov    eax,0xc5224007
  41bf8d:	jge    0x41bf55
  41bf8f:	jbe    0x41bf62
  41bf91:	xor    al,0x50
  41bf93:	pop    ebx
  41bf94:	sbb    eax,0x3ae0dc8c
  41bf99:	jmp    0x451:0xc796e8b9
  41bfa0:	(bad)  
  41bfa1:	sahf   
  41bfa2:	lds    ebp,FWORD PTR [eax+eiz*2+0x4e97ac08]
  41bfa9:	sub    eax,0x552dee29
  41bfae:	pushf  
  41bfaf:	inc    ecx
  41bfb0:	std    
  41bfb1:	xchg   esi,eax
  41bfb2:	mov    esp,0x891949b8
  41bfb7:	pop    ebx
  41bfb8:	or     DWORD PTR [edx],ecx
  41bfba:	ins    BYTE PTR es:[edi],dx
  41bfbb:	cdq    
  41bfbc:	popa   
  41bfbd:	inc    esp
  41bfbe:	jb     0x41bf6e
  41bfc0:	dec    ebp
  41bfc1:	mov    esp,cs
  41bfc3:	add    dh,al
  41bfc5:	cli    
  41bfc6:	or     ebx,DWORD PTR [ebx+0x2797a5c9]
  41bfcc:	enter  0x1d31,0x3b
  41bfd0:	mov    esp,0x944fa4f3
  41bfd5:	fldcw  WORD PTR [bp+di+0x2c]
  41bfd9:	and    DWORD PTR [edx+0x28ffd935],edx
  41bfdf:	aam    0xd1
  41bfe1:	retf   0x9bb4
  41bfe4:	push   cs
  41bfe5:	sub    al,0x1b
  41bfe7:	and    DWORD PTR [ebp-0x487ff451],edx
  41bfed:	les    esi,FWORD PTR [edi-0xe6ac3cb]
  41bff3:	inc    esi
  41bff4:	add    al,0x4c
  41bff6:	test   al,0xa4
  41bff8:	pop    ebp
  41bff9:	push   es
  41bffa:	(bad)  
  41bffb:	lods   eax,DWORD PTR ds:[esi]
  41bffc:	or     eax,0x9f53f9
  41c001:	ss pop eax
  41c003:	dec    esi
  41c004:	aam    0x95
  41c006:	or     edi,DWORD PTR [edx]
  41c008:	cmp    al,BYTE PTR [edx-0x30]
  41c00b:	mov    ds:0x1382f32f,al
  41c010:	es and esp,edx
  41c013:	les    edx,FWORD PTR [ebx]
  41c015:	imul   ebx,edi,0x13
  41c018:	inc    esp
  41c019:	inc    ecx
  41c01a:	and    al,0x7a
  41c01c:	sbb    DWORD PTR [ebx],eax
  41c01e:	adc    ebp,DWORD PTR [edx-0x5723c7]
  41c024:	pinsrw mm3,eax,0xf4
  41c028:	jne    0x41c035
  41c02a:	(bad)  
  41c02b:	mov    eax,ds:0x2a8c4c3a
  41c030:	ret    0x9928
  41c033:	mov    ecx,DWORD PTR cs:[ebx+0x45f4fde4]
  41c03a:	fdiv   DWORD PTR [ebx+esi*2]
  41c03d:	xchg   esp,eax
  41c03e:	push   ebp
  41c03f:	xchg   DWORD PTR [ecx+ecx*4],edi
  41c042:	inc    ebp
  41c043:	lods   al,BYTE PTR ds:[esi]
  41c044:	imul   edx,DWORD PTR [esi],0xaa84440
  41c04a:	push   edx
  41c04b:	sub    BYTE PTR [edx+0x20],0xa
  41c04f:	xchg   edx,eax
  41c050:	sub    al,0x9f
  41c052:	jb     0x41bff5
  41c054:	stos   DWORD PTR es:[edi],eax
  41c055:	(bad)  
  41c056:	fs addr16 jae 0x41c054
  41c05a:	or     BYTE PTR [ebx],0x81
  41c05d:	fsub   DWORD PTR [esi-0x41]
  41c060:	adc    eax,0xb25af91e
  41c065:	xchg   edx,eax
  41c066:	inc    esi
  41c067:	or     ch,bl
  41c069:	jmp    0xe8f0:0xf507259a
  41c070:	ins    DWORD PTR es:[edi],dx
  41c071:	jnp    0x41c0bb
  41c073:	scas   eax,DWORD PTR es:[edi]
  41c074:	shl    DWORD PTR [eax],cl
  41c076:	pop    ebp
  41c077:	aas    
  41c078:	adc    al,0x86
  41c07a:	xor    al,0x8e
  41c07c:	lods   al,BYTE PTR ds:[esi]
  41c07d:	xor    BYTE PTR [ecx+0x1502768],al
  41c083:	push   edx
  41c084:	leave  
  41c085:	dec    ecx
  41c086:	(bad)
  41c089:	inc    edx
  41c08a:	mov    eax,0xee37adee
  41c08f:	pop    edi
  41c090:	sbb    BYTE PTR [ebx+ebx*2+0x554faf82],ah
  41c097:	into   
  41c098:	adc    edi,DWORD PTR [edi]
  41c09a:	mov    ebp,0x5e328829
  41c09f:	cmp    al,0x0
  41c0a1:	xor    DWORD PTR [esi],ebp
  41c0a3:	jmp    0xe74d264e
  41c0a8:	sbb    ah,dl
  41c0aa:	mov    edx,DWORD PTR [esp+ebx*8+0x6ad4aa84]
  41c0b1:	xchg   esp,eax
  41c0b2:	gs inc eax
  41c0b4:	lds    eax,FWORD PTR [edi-0x5476e29c]
  41c0ba:	pop    esi
  41c0bb:	fld    DWORD PTR [ebx+0x72]
  41c0be:	jbe    0x41c0f1
  41c0c0:	cmp    BYTE PTR ds:0xa029e101,0xa4
  41c0c7:	push   ds
  41c0c8:	inc    eax
  41c0c9:	dec    edx
  41c0ca:	ins    BYTE PTR es:[edi],dx
  41c0cb:	retf   0xea15
  41c0ce:	push   ebx
  41c0cf:	stc    
  41c0d0:	or     BYTE PTR [edx-0x6b],ch
  41c0d3:	mov    ebp,0x6b272dc
  41c0d8:	ret    
  41c0d9:	sub    al,0xae
  41c0db:	int    0x46
  41c0dd:	cdq    
  41c0de:	jb     0x41c0bb
  41c0e0:	pop    ds
  41c0e1:	and    eax,0x4c78e6d5
  41c0e6:	cmp    BYTE PTR [ecx-0x7d],0x17
  41c0ea:	pushf  
  41c0eb:	ja     0x41c0d9
  41c0ed:	inc    ecx
  41c0ee:	lea    esi,[eax+0x19]
  41c0f1:	rcl    al,0x23
  41c0f4:	repnz outs dx,DWORD PTR ds:[esi]
  41c0f6:	push   ss
  41c0f7:	iret   
  41c0f8:	jb     0x41c0db
  41c0fa:	dec    ecx
  41c0fb:	(bad)  
  41c0fc:	xor    al,0x17
  41c0fe:	jnp    0x41c17b
  41c100:	(bad)  
  41c102:	xor    al,0x63
  41c104:	out    dx,eax
  41c105:	jmp    0xe432:0xd5e68db0
  41c10c:	mov    esi,0xf07e17f4
  41c111:	popf   
  41c112:	daa    
  41c113:	mov    cl,0xbc
  41c115:	mov    ch,0x24
  41c117:	add    al,0xf1
  41c119:	fst    DWORD PTR [esp+ecx*8]
  41c11c:	icebp  
  41c11d:	sub    dh,BYTE PTR [esi-0x7b246ec8]
  41c123:	dec    ebp
  41c124:	inc    eax
  41c125:	sbb    eax,0xc111c038
  41c12a:	ss xchg edi,eax
  41c12c:	sub    ch,bl
  41c12e:	inc    esi
  41c12f:	mov    al,ds:0xecb2b64a
  41c134:	shl    DWORD PTR [esi],cl
  41c136:	push   ebx
  41c137:	arpl   bp,si
  41c139:	(bad)  
  41c13b:	add    eax,0x2e7fc83d
  41c140:	jecxz  0x41c194
  41c142:	pop    ds
  41c143:	mov    BYTE PTR [ebx],ah
  41c145:	(bad)  
  41c146:	xchg   esi,eax
  41c147:	mov    ds:0xb4d63320,al
  41c14c:	mov    esp,DWORD PTR [edi+edx*1]
  41c14f:	inc    ebx
  41c150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c151:	cmp    DWORD PTR [esi-0xc8af799],esi
  41c157:	(bad)  
  41c158:	pop    edx
  41c159:	sub    eax,ebx
  41c15b:	pop    ecx
  41c15c:	push   es
  41c15d:	sbb    ebx,DWORD PTR [edi+0x438b74f3]
  41c163:	push   ds
  41c164:	nop
  41c165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c166:	jns    0x41c0f3
  41c168:	lea    ecx,[ebx]
  41c16a:	adc    DWORD PTR [ecx],edx
  41c16c:	push   ss
  41c16d:	jno    0x41c15c
  41c16f:	push   cs
  41c170:	mov    bl,0xa3
  41c172:	mov    eax,ds:0xfe9fc53b
  41c177:	cld    
  41c178:	outs   dx,DWORD PTR ds:[esi]
  41c179:	push   cs
  41c17a:	ret    0x1a3b
  41c17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c17e:	adc    BYTE PTR [esi-0x2c],cl
  41c181:	jg     0x41c1bc
  41c183:	fwait
  41c184:	call   0xa1a18354
  41c189:	icebp  
  41c18a:	cmp    eax,0x230ec6cb
  41c18f:	push   es
  41c190:	pushf  
  41c191:	pop    ss
  41c192:	nop
  41c193:	jbe    0x41c1c5
  41c195:	sbb    al,0xdd
  41c197:	sti    
  41c198:	cmc    
  41c199:	loopne 0x41c1bf
  41c19b:	push   0xffffffd1
  41c19d:	push   esi
  41c19e:	ret    0x3c44
  41c1a1:	imul   eax,DWORD PTR [ebp+0x487d57ca],0xc6bb223a
  41c1ab:	or     dh,BYTE PTR [edi]
  41c1ad:	or     eax,0x52e8a9d8
  41c1b2:	loope  0x41c1b4
  41c1b4:	xor    edx,edi
  41c1b6:	cmp    al,0xe0
  41c1b8:	sub    eax,DWORD PTR [ebx]
  41c1ba:	and    BYTE PTR [ebx-0x30068c51],ch
  41c1c0:	pop    ebp
  41c1c1:	xor    cl,al
  41c1c3:	clc    
  41c1c4:	push   0x40
  41c1c6:	repz push es
  41c1c8:	dec    ebx
  41c1c9:	xor    ebx,DWORD PTR [edi+0x2b]
  41c1cc:	mov    dh,0xf2
  41c1ce:	push   ds
  41c1cf:	jmp    0xd3a62007
  41c1d4:	add    eax,0x81885290
  41c1d9:	inc    ebx
  41c1da:	sahf   
  41c1db:	out    0x94,eax
  41c1dd:	mov    ds:0x553534e5,al
  41c1e2:	int    0xcc
  41c1e4:	sbb    dh,ah
  41c1e6:	cmp    BYTE PTR [edx-0x27],al
  41c1e9:	popf   
  41c1ea:	or     eax,0x6f118f2a
  41c1ef:	imul   ebx,DWORD PTR [ebp-0xe],0x315ba2ef
  41c1f6:	cmp    DWORD PTR [edx+0x6d43ba16],0xffffffa8
  41c1fd:	jo     0x41c200
  41c1ff:	call   0xf3098685
  41c204:	jo     0x41c23b
  41c206:	test   BYTE PTR [ebx+0x72b59078],cl
  41c20c:	xor    ah,BYTE PTR [edi-0x66579036]
  41c212:	and    BYTE PTR [esi+0x63],dh
  41c215:	jae    0x41c284
  41c217:	shl    edi,0xfa
  41c21a:	and    eax,0x8dd61d7b
  41c21f:	cmc    
  41c220:	cmp    eax,DWORD PTR [esi+0x4d90026b]
  41c226:	div    DWORD PTR [ebx-0x13]
  41c229:	sbb    esp,edi
  41c22b:	push   eax
  41c22c:	aam    0x51
  41c22e:	push   ds
  41c22f:	std    
  41c230:	jnp    0x41c1e2
  41c232:	push   0xffffffbc
  41c234:	push   edx
  41c235:	push   eax
  41c236:	ror    BYTE PTR [edx+0x5b],1
  41c239:	pop    ss
  41c23a:	jne    0x41c1c1
  41c23c:	jl     0x41c1d7
  41c23e:	lahf   
  41c23f:	xchg   BYTE PTR [edi+0x63d19157],dh
  41c245:	sub    BYTE PTR [edx+0x661e799a],cl
  41c24b:	mov    ebx,0x57fe6cc8
  41c250:	cmp    al,0xa6
  41c252:	stos   DWORD PTR es:[edi],eax
  41c253:	lds    esp,FWORD PTR [ecx+0x6067b06f]
  41c259:	sub    eax,0x16395260
  41c25e:	fnstcw WORD PTR [edi]
  41c260:	(bad)  
  41c261:	ror    DWORD PTR [ebp-0x2a03564d],cl
  41c267:	stos   DWORD PTR es:[edi],eax
  41c268:	xchg   esp,eax
  41c269:	lea    ebp,[eax-0x2065e62b]
  41c26f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c270:	retf   
  41c271:	js     0x41c266
  41c273:	dec    edx
  41c274:	and    DWORD PTR [eax-0x208082a1],edx
  41c27a:	jle    0x41c2df
  41c27c:	push   ds
  41c27d:	lods   eax,DWORD PTR ds:[esi]
  41c27e:	or     DWORD PTR [eax],ebx
  41c280:	in     eax,0x28
  41c282:	outs   dx,BYTE PTR ds:[esi]
  41c283:	xchg   ebp,eax
  41c284:	and    bh,BYTE PTR [esi-0x544deb4d]
  41c28a:	add    BYTE PTR [edi-0x7a],cl
  41c28d:	ins    DWORD PTR es:[edi],dx
  41c28e:	push   ebp
  41c28f:	in     eax,dx
  41c290:	dec    edi
  41c291:	ds jecxz 0x41c2c3
  41c294:	mov    ds,WORD PTR [edx+0x4c38934f]
  41c29a:	std    
  41c29b:	lods   eax,DWORD PTR ds:[esi]
  41c29c:	loopne 0x41c2f5
  41c29e:	or     al,ch
  41c2a0:	push   edi
  41c2a1:	rcl    DWORD PTR [eax+0x50a892cf],1
  41c2a7:	retf   0xb4d0
  41c2aa:	sahf   
  41c2ab:	enter  0x2be,0xfa
  41c2af:	xor    dh,BYTE PTR [ecx+eax*4+0x59fabf26]
  41c2b6:	cmp    al,0x58
  41c2b8:	inc    ebp
  41c2b9:	daa    
  41c2ba:	stc    
  41c2bb:	adc    al,0x4b
  41c2bd:	adc    ebx,esi
  41c2bf:	ss cmc 
  41c2c1:	pop    ds
  41c2c2:	pop    es
  41c2c3:	and    eax,0x3039eb5d
  41c2c8:	outs   dx,DWORD PTR ds:[esi]
  41c2c9:	arpl   WORD PTR [edi],bp
  41c2cb:	sub    ecx,DWORD PTR [ebp+0x2]
  41c2ce:	mov    eax,0x2d726780
  41c2d3:	popa   
  41c2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d5:	cmp    DWORD PTR [ebx-0xa],0x7694ee8a
  41c2dc:	sub    eax,0x7a889e98
  41c2e1:	mov    ah,0x48
  41c2e3:	in     eax,0x4a
  41c2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e6:	out    dx,eax
  41c2e7:	scas   al,BYTE PTR es:[edi]
  41c2e8:	dec    ebp
  41c2e9:	mov    esp,0x59a7c237
  41c2ee:	mov    cl,0x7f
  41c2f0:	retf   0x762c
  41c2f3:	inc    esi
  41c2f4:	cwde   
  41c2f5:	mov    dh,0x86
  41c2f7:	or     eax,0x2cbd3fe5
  41c2fc:	shl    BYTE PTR [edx-0x37686f10],0xf0
  41c303:	jmp    0x80fc:0x8480ddff
  41c30a:	jae    0x41c2f8
  41c30c:	jmp    0x4865d6fa
  41c311:	jb     0x41c30d
  41c313:	cmp    bl,0x1e
  41c316:	xor    eax,0x2cecd70f
  41c31b:	jge    0x41c311
  41c31d:	(bad)  
  41c31e:	xchg   edx,eax
  41c31f:	call   0xaf66ff7
  41c324:	(bad)  
  41c325:	ins    BYTE PTR es:[edi],dx
  41c326:	dec    ecx
  41c327:	push   esp
  41c328:	scas   eax,DWORD PTR es:[edi]
  41c329:	pop    es
  41c32a:	xchg   edi,eax
  41c32b:	loopne 0x41c2fd
  41c32d:	dec    esp
  41c32e:	add    eax,0x357e2cd1
  41c333:	mov    eax,ds:0x13e907ca
  41c338:	sub    ah,ch
  41c33a:	cmp    ah,BYTE PTR [esi-0x39]
  41c33d:	cmp    DWORD PTR [edx],ebp
  41c33f:	jecxz  0x41c389
  41c341:	jp     0x41c320
  41c343:	iret   
  41c344:	jnp    0x41c387
  41c346:	mov    esi,0x5926cd76
  41c34b:	pop    esi
  41c34c:	cld    
  41c34d:	xchg   DWORD PTR [edi],ecx
  41c34f:	adc    eax,0x54b10b7c
  41c354:	pop    ecx
  41c355:	div    DWORD PTR [esi]
  41c357:	xor    ecx,ecx
  41c359:	push   esp
  41c35a:	cmp    eax,0xf2354fb8
  41c35f:	jnp    0x41c30a
  41c361:	shr    ch,0x7e
  41c364:	xor    BYTE PTR [esi+edi*8-0x25],dl
  41c368:	(bad)  
  41c369:	es push edi
  41c36b:	clc    
  41c36c:	jmp    0xcce8340e
  41c371:	test   al,0x86
  41c373:	bound  edx,QWORD PTR [ebx]
  41c375:	jns    0x41c3c0
  41c377:	dec    eax
  41c378:	sar    DWORD PTR [edx+0x411a0127],1
  41c37e:	pop    es
  41c37f:	xchg   esi,eax
  41c380:	hlt    
  41c381:	ja     0x41c34b
  41c383:	pusha  
  41c384:	xchg   edi,eax
  41c385:	out    0xad,al
  41c387:	out    dx,eax
  41c388:	lods   eax,DWORD PTR ds:[esi]
  41c389:	pop    ecx
  41c38a:	or     esi,DWORD PTR [eax+0x15619297]
  41c390:	sbb    DWORD PTR [edi-0x95e9e25],0x67
  41c397:	or     edx,DWORD PTR [edi+0x18]
  41c39a:	psubsw mm2,QWORD PTR [eax+eax*4]
  41c39e:	repnz or eax,0x79bf032b
  41c3a4:	fucomip st,st(1)
  41c3a6:	cmp    al,0x47
  41c3a8:	sub    ah,dh
  41c3aa:	mov    bh,ch
  41c3ac:	adc    ebp,DWORD PTR [edi+ecx*4-0x6a]
  41c3b0:	pop    ebx
  41c3b1:	push   0xb639cc3c
  41c3b6:	add    ecx,DWORD PTR [esi-0x13]
  41c3b9:	lods   eax,DWORD PTR ds:[esi]
  41c3ba:	lea    esp,[edx+0x7a]
  41c3bd:	and    ebx,edx
  41c3bf:	push   esp
  41c3c0:	and    BYTE PTR [edx+0x3a],ah
  41c3c3:	mov    dl,0x43
  41c3c5:	push   0x436ac981
  41c3ca:	test   BYTE PTR [ecx],ch
  41c3cc:	fcomp  QWORD PTR [ecx+0x4617dc50]
  41c3d2:	mov    esi,DWORD PTR [edi+0x7264e454]
  41c3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3d9:	(bad)  
  41c3da:	jmp    0x5694:0xd2c97a1a
  41c3e1:	lods   al,BYTE PTR ds:[esi]
  41c3e2:	int3   
  41c3e3:	jne    0x41c3bf
  41c3e5:	add    al,0xce
  41c3e7:	push   edi
  41c3e8:	xchg   BYTE PTR [eax-0x3f],bh
  41c3eb:	and    ecx,ecx
  41c3ed:	push   eax
  41c3ee:	rcr    bh,cl
  41c3f0:	or     bl,BYTE PTR [ecx-0x601582c2]
  41c3f6:	fsubr  QWORD PTR [edi+0x7d80e9ae]
  41c3fd:	loop   0x41c3c9
  41c3ff:	int3   
  41c400:	sbb    al,0xc4
  41c402:	rol    DWORD PTR [edi+0x5ba6742c],1
  41c408:	mov    DWORD PTR [edx-0x7d],edx
  41c40b:	rcl    cl,1
  41c40d:	jno    0x41c419
  41c40f:	inc    ecx
  41c410:	hlt    
  41c411:	jge    0x41c41b
  41c413:	jecxz  0x41c3bb
  41c415:	inc    esp
  41c416:	inc    ebx
  41c417:	mov    ds:0x29c4e116,eax
  41c41c:	pusha  
  41c41d:	adc    BYTE PTR [ebp-0x7645a157],0xe0
  41c424:	sbb    dl,dh
  41c426:	or     eax,0x51e39584
  41c42b:	into   
  41c42c:	in     eax,dx
  41c42d:	mov    al,0xcd
  41c42f:	cmp    WORD PTR [esp+eax*8],ax
  41c433:	dec    edi
  41c434:	pop    ecx
  41c435:	or     eax,ebx
  41c437:	lea    ebx,[edx+0x72fa9f12]
  41c43d:	jmp    0xd783:0x6f0aba66
  41c444:	loope  0x41c448
  41c446:	ins    BYTE PTR es:[edi],dx
  41c447:	cwde   
  41c448:	in     eax,dx
  41c449:	jb     0x41c40e
  41c44b:	mov    cl,0x9b
  41c44d:	push   edi
  41c44e:	sti    
  41c44f:	mov    ah,0x2
  41c451:	fwait
  41c452:	hlt    
  41c453:	and    ebp,esi
  41c455:	pop    ebx
  41c456:	je     0x41c48a
  41c458:	cmp    BYTE PTR [esi+0xa],cl
  41c45b:	scas   al,BYTE PTR es:[edi]
  41c45c:	mov    ebp,0x92d9407
  41c461:	pop    esi
  41c462:	fsubr  st(6),st
  41c464:	ret    
  41c465:	sti    
  41c466:	loop   0x41c4b9
  41c468:	mov    dl,0x7c
  41c46a:	sub    esp,edi
  41c46c:	cli    
  41c46d:	mov    eax,ebp
  41c46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c470:	adc    al,0xde
  41c472:	jns    0x41c429
  41c474:	jb     0x41c472
  41c476:	rcr    BYTE PTR [ebp+0x2f],0x4
  41c47a:	test   al,0x10
  41c47c:	jg     0x41c4a6
  41c47e:	and    dh,ah
  41c480:	ret    
  41c481:	pop    ebp
  41c482:	lock push edx
  41c484:	outs   dx,BYTE PTR cs:[esi]
  41c486:	fwait
  41c487:	call   0x17d0081c
  41c48c:	sbb    edi,ecx
  41c48e:	cdq    
  41c48f:	pop    esp
  41c490:	fcmovnb st,st(1)
  41c492:	push   es
  41c493:	in     eax,0x5a
  41c495:	cld    
  41c496:	(bad)  
  41c497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c498:	add    dh,BYTE PTR [ebx]
  41c49a:	sahf   
  41c49b:	jns    0x41c499
  41c49d:	dec    ebp
  41c49e:	cmp    eax,0x324463c7
  41c4a3:	add    DWORD PTR [edx-0x30de824d],esi
  41c4a9:	pop    ecx
  41c4aa:	inc    edi
  41c4ab:	or     bl,cl
  41c4ad:	add    al,0x26
  41c4af:	das    
  41c4b0:	and    eax,DWORD PTR [ecx+0x6c]
  41c4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4b4:	stos   BYTE PTR es:[edi],al
  41c4b5:	jnp    0x41c45c
  41c4b7:	pop    eax
  41c4b8:	outs   dx,DWORD PTR ds:[esi]
  41c4b9:	inc    ebx
  41c4ba:	mov    bh,0x1e
  41c4bc:	xor    DWORD PTR ds:0x39b57dbb,edx
  41c4c2:	push   ecx
  41c4c3:	xor    BYTE PTR [ebx+edi*4+0x3b],ch
  41c4c7:	pop    edx
  41c4c8:	cmp    BYTE PTR [ebx+0x6d1dfdfa],cl
  41c4ce:	aam    0xaf
  41c4d0:	sub    BYTE PTR [ebx+ecx*2+0x27],ah
  41c4d4:	cmp    BYTE PTR [edx],cl
  41c4d6:	test   eax,edi
  41c4d8:	sahf   
  41c4d9:	mov    WORD PTR [ebp-0x22],ds
  41c4dc:	jecxz  0x41c519
  41c4de:	fcom   st(3)
  41c4e0:	cmc    
  41c4e1:	arpl   WORD PTR [edi+0x3c],bx
  41c4e4:	data16 jl 0x41c531
  41c4e7:	cdq    
  41c4e8:	fdivr  QWORD PTR [edi+ecx*8-0x5b]
  41c4ec:	dec    ebx
  41c4ed:	xchg   esi,eax
  41c4ee:	aas    
  41c4ef:	pop    eax
  41c4f0:	pop    ebp
  41c4f1:	or     ebx,ebp
  41c4f3:	(bad)  [eax+eax*4]
  41c4f6:	jmp    0x41c539
  41c4f8:	es mov esp,0x815f0ff3
  41c4fe:	ins    DWORD PTR es:[edi],dx
  41c4ff:	bound  edx,QWORD PTR [eax-0x224352bd]
  41c505:	add    cl,dl
  41c507:	push   DWORD PTR [ebp-0xd9c8b17]
  41c50d:	mov    ah,ch
  41c50f:	mov    ds:0xcfa294f7,eax
  41c514:	push   ecx
  41c515:	pop    es
  41c516:	cs push es
  41c518:	mov    dh,0xf1
  41c51a:	cmp    BYTE PTR [edx+0x1da552d],bh
  41c520:	dec    ebx
  41c521:	and    DWORD PTR [esi+0x20],eax
  41c524:	jg     0x41c4dd
  41c526:	sbb    WORD PTR [ebx],0x739c
  41c52b:	int3   
  41c52c:	int3   
  41c52d:	sbb    eax,0xecfa06d4
  41c532:	mov    ecx,0x623cdafb
  41c537:	jle    0x41c4d4
  41c539:	cmp    eax,0xaf80f45
  41c53e:	sti    
  41c53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c540:	dec    eax
  41c541:	jae    0x41c5c1
  41c543:	inc    esi
  41c544:	outs   dx,BYTE PTR ds:[esi]
  41c545:	jge    0x41c540
  41c547:	scas   al,BYTE PTR es:[edi]
  41c548:	sar    DWORD PTR [edi+0x5b],1
  41c54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c54c:	mov    eax,ebp
  41c54e:	mov    esi,0xa0bfd49c
  41c553:	call   0xa38c:0x58438ed8
  41c55a:	mov    dl,BYTE PTR [esi-0x76c275ae]
  41c560:	repnz retf 
  41c562:	inc    esp
  41c563:	jne    0x41c5ce
  41c565:	jmp    FWORD PTR [ecx+0x3a]
  41c568:	jecxz  0x41c599
  41c56a:	outs   dx,DWORD PTR ds:[esi]
  41c56b:	jae    0x41c5ec
  41c56d:	mov    edi,0x96f06173
  41c572:	add    al,0x32
  41c574:	fadd   DWORD PTR [ebp+0x52]
  41c577:	leave  
  41c578:	jg     0x41c573
  41c57a:	outs   dx,DWORD PTR ds:[esi]
  41c57b:	pop    es
  41c57c:	ret    0xd49b
  41c57f:	sub    BYTE PTR [esi+0x6ff33c15],0x88
  41c586:	aaa    
  41c587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c588:	and    al,0xc
  41c58a:	add    al,0x53
  41c58c:	jne    0x41c57b
  41c58e:	iret   
  41c58f:	mov    ss,WORD PTR [ecx]
  41c591:	adc    ecx,DWORD PTR [eax]
  41c593:	retf   0x2ee4
  41c596:	or     BYTE PTR [edx-0x544c300f],0xf4
  41c59d:	and    ebx,DWORD PTR [ebp+0x66]
  41c5a0:	cmp    bh,BYTE PTR [ebx+0x3ad307a8]
  41c5a6:	and    dh,bl
  41c5a8:	out    dx,eax
  41c5a9:	mov    DWORD PTR [ebp+0x15],esi
  41c5ac:	xchg   edx,eax
  41c5ad:	addr16 adc eax,0x34c7a7f9
  41c5b3:	pop    ebp
  41c5b4:	repz jl 0x41c5a0
  41c5b7:	std    
  41c5b8:	dec    esp
  41c5b9:	(bad)  
  41c5ba:	call   0x6c83a7e1
  41c5bf:	and    bh,BYTE PTR [edx+edx*1+0x7ee00be2]
  41c5c6:	dec    eax
  41c5c7:	aam    0x7c
  41c5c9:	mov    ds:0x9c22ce23,al
  41c5ce:	jg     0x41c582
  41c5d0:	xor    DWORD PTR [edx-0x33],ecx
  41c5d3:	inc    esp
  41c5d4:	mov    ah,0x15
  41c5d6:	sbb    al,0x39
  41c5d8:	(bad)  
  41c5d9:	lahf   
  41c5da:	int    0x36
  41c5dc:	enter  0xb001,0x9b
  41c5e0:	sbb    ebp,DWORD PTR [esi]
  41c5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5e3:	jno    0x41c5fc
  41c5e5:	mov    WORD PTR [ecx],?
  41c5e7:	imul   esp,DWORD PTR [esi],0x3b
  41c5ea:	mov    edi,DWORD PTR [ebp-0x61]
  41c5ed:	aad    0x25
  41c5ef:	adc    eax,0x37186d2b
  41c5f4:	in     al,0xf7
  41c5f6:	mov    eax,0xbec3b446
  41c5fb:	ja     0x41c604
  41c5fd:	dec    ecx
  41c5fe:	pop    edx
  41c5ff:	add    DWORD PTR [esi+ebp*4-0x18bb8cc7],eax
  41c606:	push   eax
  41c607:	inc    esp
  41c608:	mov    dl,BYTE PTR [ebp-0x37]
  41c60b:	xchg   DWORD PTR [ebx],edx
  41c60d:	mov    ebx,0xe1fef7f8
  41c612:	pop    ebp
  41c613:	sbb    eax,0x2bdd6ba6
  41c618:	adc    DWORD PTR [edx],ebx
  41c61a:	lea    ebx,[ecx+0x58]
  41c61d:	sbb    DWORD PTR [eax],0xea2b5c62
  41c623:	mov    bl,BYTE PTR [edi+0x2f621ce9]
  41c629:	jecxz  0x41c6a1
  41c62b:	cmp    dl,dh
  41c62d:	in     al,dx
  41c62e:	mov    al,ds:0xa43a3e27
  41c633:	js     0x41c64b
  41c635:	(bad)  
  41c636:	in     al,dx
  41c637:	test   DWORD PTR [edx],ebp
  41c639:	(bad)  
  41c63a:	sbb    al,0xfe
  41c63c:	scas   eax,DWORD PTR es:[edi]
  41c63d:	clc    
  41c63e:	lahf   
  41c63f:	cld    
  41c640:	loop   0x41c6a2
  41c642:	xor    edx,esi
  41c644:	mov    ecx,0xacdce8c8
  41c649:	jp     0x41c5f6
  41c64b:	leave  
  41c64c:	xchg   edx,eax
  41c64d:	sub    ecx,DWORD PTR [esi+esi*1]
  41c650:	or     edx,ebx
  41c652:	dec    ebx
  41c653:	aam    0x9f
  41c655:	inc    ebp
  41c656:	out    0xbb,eax
  41c658:	(bad)  
  41c65a:	enter  0x8501,0xe
  41c65e:	mov    ch,0xe7
  41c660:	add    al,0x89
  41c662:	push   0xb7fe699b
  41c667:	(bad)  
  41c668:	mov    esi,0x3b30d853
  41c66d:	mov    ds:0x889f26ce,eax
  41c672:	push   ss
  41c673:	jl     0x41c6ba
  41c675:	jp     0x41c62e
  41c677:	fild   DWORD PTR [edx+0x58]
  41c67a:	sub    ebp,DWORD PTR [esi+0x44]
  41c67d:	sub    ebp,DWORD PTR [eax]
  41c67f:	and    eax,ecx
  41c681:	dec    ebp
  41c682:	fwait
  41c683:	jae    0x41c6f0
  41c685:	xor    al,0xdb
  41c687:	xlat   BYTE PTR es:[bx]
  41c68a:	mov    ah,0xc1
  41c68c:	cli    
  41c68d:	fwait
  41c68e:	inc    edx
  41c68f:	(bad)  [ebp+0x19]
  41c692:	das    
  41c693:	test   cl,0x21
  41c696:	mov    bl,0x48
  41c698:	mov    ss,WORD PTR [esi]
  41c69a:	mov    BYTE PTR [edi-0x31bd83bf],bl
  41c6a0:	(bad)  
  41c6a2:	hlt    
  41c6a3:	sbb    al,0xca
  41c6a5:	ret    
  41c6a6:	(bad)  
  41c6a7:	pop    esi
  41c6a8:	(bad)  
  41c6a9:	out    dx,eax
  41c6aa:	mov    eax,0x3037a920
  41c6af:	xor    eax,0xd44d71f2
  41c6b4:	lock mov WORD PTR ds:0x6d07d09,cs
  41c6bb:	xchg   edi,eax
  41c6bc:	fiadd  DWORD PTR [esp+eax*2+0x44]
  41c6c0:	in     al,0xff
  41c6c2:	lahf   
  41c6c3:	xor    esp,DWORD PTR [eax+0x679e4987]
  41c6c9:	xchg   ecx,eax
  41c6ca:	xchg   ebp,eax
  41c6cb:	cld    
  41c6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6cd:	dec    edx
  41c6ce:	out    dx,eax
  41c6cf:	pop    ebp
  41c6d0:	xor    DWORD PTR [edx],esp
  41c6d2:	dec    ebx
  41c6d3:	inc    ecx
  41c6d4:	inc    DWORD PTR [ecx]
  41c6d6:	repz mov al,0x57
  41c6d9:	(bad)  
  41c6da:	xchg   BYTE PTR [esi],al
  41c6dc:	and    dl,BYTE PTR [eax-0x23]
  41c6df:	add    BYTE PTR [eax+0x467e10a0],dl
  41c6e5:	mov    ds:0xe11f9a5d,eax
  41c6ea:	mov    al,ds:0xe1cfc00f
  41c6ef:	pop    ecx
  41c6f0:	jmp    0x41c6cc
  41c6f2:	mov    ah,0xb4
  41c6f4:	pusha  
  41c6f5:	repnz cmp BYTE PTR fs:[eiz*8+0x2182318e],al
  41c6fe:	sbb    DWORD PTR [edx+0x6e],ecx
  41c701:	mov    BYTE PTR [eax-0x69],ah
  41c704:	lods   eax,DWORD PTR ds:[esi]
  41c705:	add    dh,BYTE PTR [ebx+0x2b]
  41c708:	fld    QWORD PTR [esi]
  41c70a:	cmp    ch,BYTE PTR [edx]
  41c70c:	clc    
  41c70d:	popa   
  41c70e:	icebp  
  41c70f:	pop    ds
  41c710:	ret    
  41c711:	fwait
  41c712:	mov    ds:0x26d6270a,al
  41c717:	or     ch,BYTE PTR [ebx-0x49a1b24f]
  41c71d:	sbb    esp,DWORD PTR [ebx+0x6b]
  41c720:	jmp    0x1741dc5b
  41c725:	sub    bh,BYTE PTR [ebp+0x1d214935]
  41c72b:	aam    0x47
  41c72d:	hlt    
  41c72e:	xor    BYTE PTR [eax+0x1a456893],bl
  41c734:	xchg   edx,eax
  41c735:	dec    ebx
  41c736:	in     eax,dx
  41c737:	in     al,dx
  41c738:	pusha  
  41c739:	mov    ch,0x71
  41c73b:	hlt    
  41c73c:	jecxz  0x41c77c
  41c73e:	ja     0x41c733
  41c740:	dec    esi
  41c741:	and    al,0x6
  41c743:	mov    dl,ch
  41c745:	or     esp,DWORD PTR [edx-0x29]
  41c748:	mov    al,0x21
  41c74a:	sub    BYTE PTR [ebp+0x30c3b22c],dl
  41c750:	jle    0x41c796
  41c752:	inc    edx
  41c753:	mov    ebx,0xb2b7047
  41c758:	mov    esi,0x55e97257
  41c75d:	and    bh,al
  41c75f:	mov    bl,0x17
  41c761:	pop    esp
  41c762:	fisubr DWORD PTR [ecx+ecx*1]
  41c765:	(bad)  ds:0x9f2f6307
  41c76b:	add    WORD PTR [ebp+0x96cd5ca],si
  41c772:	xchg   edx,eax
  41c773:	icebp  
  41c774:	pop    ecx
  41c775:	sbb    DWORD PTR [esi-0x2db14eed],esp
  41c77b:	push   cs
  41c77c:	adc    BYTE PTR [edx-0x1f2a6c61],bl
  41c782:	push   eax
  41c783:	xchg   ebx,eax
  41c784:	outs   dx,BYTE PTR ds:[esi]
  41c785:	shr    DWORD PTR [ebp-0x746d073f],cl
  41c78b:	out    dx,eax
  41c78c:	clc    
  41c78d:	mov    ds:0xdb107677,eax
  41c792:	xor    ebx,DWORD PTR [edi+0xff51d1d]
  41c798:	add    DWORD PTR [ecx],ecx
  41c79a:	push   ds
  41c79b:	cmp    BYTE PTR [edx+0x5398e1b4],0xa
  41c7a2:	aad    0xb9
  41c7a4:	call   0x51ae0e53
  41c7a9:	and    dh,BYTE PTR [ebx-0x4a]
  41c7ac:	xor    al,0xb
  41c7ae:	test   DWORD PTR [ebp+0x6422a13f],edi
  41c7b4:	adc    DWORD PTR [ecx-0x3a990b17],eax
  41c7ba:	out    0x64,eax
  41c7bc:	or     ecx,DWORD PTR [eax+0x4a187044]
  41c7c2:	xchg   edi,eax
  41c7c3:	sub    edi,esi
  41c7c5:	xor    BYTE PTR [ebp+0x18],0x66
  41c7c9:	cld    
  41c7ca:	mov    ds:0x671de89,eax
  41c7cf:	cmp    ebp,ecx
  41c7d1:	popa   
  41c7d2:	push   ebp
  41c7d3:	inc    esi
  41c7d4:	sub    ah,0x65
  41c7d7:	popa   
  41c7d8:	pop    edx
  41c7d9:	aam    0xb
  41c7db:	mov    esi,0x3f606df2
  41c7e0:	clc    
  41c7e1:	je     0x41c7c9
  41c7e3:	aam    0x2b
  41c7e5:	mov    ebp,0xa1143a93
  41c7ea:	test   eax,0x8e3bf462
  41c7ef:	sbb    esi,DWORD PTR [ebx+0x73c1ee7c]
  41c7f5:	shr    BYTE PTR [edi-0x56],0xa8
  41c7f9:	clc    
  41c7fa:	adc    edx,esi
  41c7fc:	or     al,0x18
  41c7fe:	shr    DWORD PTR cs:[edx+0x46],0xa7
  41c803:	(bad)  
  41c805:	repnz mov ecx,0xcc34868e
  41c80b:	and    DWORD PTR [edi],edx
  41c80d:	les    eax,FWORD PTR [ecx+0x72b4801d]
  41c813:	jmp    0xf962:0x547117d9
  41c81a:	push   ds
  41c81b:	add    eax,0x5338882b
  41c821:	xor    DWORD PTR [esp+edx*4+0x6e],eax
  41c825:	dec    edi
  41c826:	inc    esp
  41c827:	and    bh,ah
  41c829:	daa    
  41c82a:	dec    ecx
  41c82b:	and    BYTE PTR es:[edi+0x46],0xd4
  41c830:	mov    bh,0xa5
  41c832:	inc    esp
  41c833:	inc    esi
  41c834:	jmp    0x9af2:0x239c7b70
  41c83b:	inc    edi
  41c83c:	js     0x41c8ad
  41c83e:	imul   edi,DWORD PTR [eax+0x15],0x3d7b3b30
  41c845:	adc    cl,BYTE PTR [esi]
  41c847:	inc    ecx
  41c848:	aam    0x12
  41c84a:	or     DWORD PTR [ebx+0xf7e2773],ebp
  41c850:	dec    esp
  41c851:	fsubr  QWORD PTR [ecx-0x6a]
  41c854:	(bad)  
  41c855:	lock repnz mov ch,0x4
  41c859:	inc    ebp
  41c85a:	mov    al,0x4b
  41c85c:	iret   
  41c85d:	inc    WORD PTR [ecx]
  41c860:	or     edi,ebp
  41c862:	xor    al,0xad
  41c864:	jg     0x41c86a
  41c866:	or     ecx,DWORD PTR [ebp-0x59]
  41c869:	rcr    DWORD PTR [edx+0x61],0x18
  41c86d:	lock aaa 
  41c86f:	push   edi
  41c870:	mov    ebp,0x7e85fedb
  41c875:	mov    al,ds:0xb99de6fc
  41c87a:	mov    WORD PTR [ebx],fs
  41c87c:	ret    0xcfe6
  41c87f:	mov    esi,0x3f4b129
  41c884:	sbb    al,0xe5
  41c886:	(bad)  
  41c888:	sub    eax,0x262ea5c0
  41c88d:	add    DWORD PTR [edx+0x7f],ebp
  41c890:	shr    BYTE PTR [esi*8-0x6100fa79],0x95
  41c898:	push   eax
  41c899:	imul   edx,DWORD PTR [ebx-0x1756f637],0x791b62ab
  41c8a3:	cmp    DWORD PTR [esi],eax
  41c8a5:	add    esp,DWORD PTR [edx-0x62]
  41c8a8:	rcr    DWORD PTR ds:[ebx+eax*4],cl
  41c8ac:	retf   0x8fdd
  41c8af:	in     al,0xe3
  41c8b1:	and    dh,BYTE PTR [eax-0xd48e2fe]
  41c8b7:	xchg   esi,eax
  41c8b8:	cmc    
  41c8b9:	and    DWORD PTR [ecx+0x42],edx
  41c8bc:	push   es
  41c8bd:	cmp    ecx,DWORD PTR [eax]
  41c8bf:	(bad)  [ebx]
  41c8c1:	div    DWORD PTR [ecx-0x3721031b]
  41c8c7:	call   0x36c32ff8
  41c8cc:	ins    BYTE PTR es:[edi],dx
  41c8cd:	jecxz  0x41c90f
  41c8cf:	jno    0x41c867
  41c8d1:	xchg   esi,eax
  41c8d2:	cmp    eax,0x3a1b55
  41c8d7:	ins    DWORD PTR es:[edi],dx
  41c8d8:	pop    ebp
  41c8d9:	out    dx,eax
  41c8da:	call   0x3d5a:0x3a7dd41a
  41c8e1:	fsubr  DWORD PTR [eax-0x2f6ab136]
  41c8e7:	imul   ebp,DWORD PTR [edx+ecx*8],0x14187fa6
  41c8ee:	int3   
  41c8ef:	sub    DWORD PTR [eax-0x59f6ba4a],esp
  41c8f5:	add    DWORD PTR [edi+0x19],esi
  41c8f8:	add    ebp,ebx
  41c8fa:	cmp    eax,0x575adc2e
  41c8ff:	ss pusha 
  41c901:	add    eax,0x160d924a
  41c906:	cs push edi
  41c908:	aaa    
  41c909:	sub    bl,al
  41c90b:	test   al,0x1f
  41c90d:	xor    ebp,DWORD PTR [eax]
  41c90f:	pop    edi
  41c910:	mov    al,ds:0x9832c297
  41c915:	jle    0x41c970
  41c917:	fcmovne st,st(0)
  41c919:	into   
  41c91a:	xor    eax,0xd1dbc87c
  41c91f:	sub    DWORD PTR [ecx],esi
  41c921:	icebp  
  41c922:	scas   al,BYTE PTR es:[edi]
  41c923:	fs dec edx
  41c925:	jg     0x41c8f3
  41c927:	retf   
  41c928:	adc    eax,0x6f2d7a1c
  41c92d:	imul   esp,DWORD PTR [edx-0x1a42f130],0x38
  41c934:	in     eax,0x7a
  41c936:	adc    DWORD PTR [eax-0x2e],edx
  41c939:	xchg   BYTE PTR [edi-0x465b6678],cl
  41c93f:	or     DWORD PTR [edx+0x7da27a89],edi
  41c945:	mov    dl,0xd
  41c947:	mov    DWORD PTR [ecx],edi
  41c949:	dec    esi
  41c94a:	push   0xfffffff1
  41c94c:	js     0x41c9b2
  41c94e:	and    al,0x2a
  41c950:	std    
  41c951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c952:	inc    esi
  41c953:	pushf  
  41c954:	stc    
  41c955:	not    edx
  41c957:	fucomp st(3)
  41c959:	popf   
  41c95a:	dec    ecx
  41c95b:	invd   
  41c95d:	mov    bl,ah
  41c95f:	cmp    esi,DWORD PTR [ecx]
  41c961:	inc    eax
  41c962:	loop   0x41c9c0
  41c964:	pop    ebx
  41c965:	add    DWORD PTR [edi+0x54],0xffffffeb
  41c969:	xor    sp,WORD PTR [esi]
  41c96c:	and    bh,BYTE PTR ds:0xdb8a5267
  41c972:	xchg   ebx,eax
  41c973:	je     0x41c92a
  41c975:	loope  0x41c99a
  41c977:	jle    0x41c941
  41c979:	xchg   ebx,eax
  41c97a:	inc    eax
  41c97b:	(bad)  
  41c97c:	loope  0x41c9c5
  41c97e:	jno    0x41c9d9
  41c980:	div    BYTE PTR [edx-0x3727a63e]
  41c986:	les    esp,FWORD PTR [ebx-0x63]
  41c989:	push   0x37d9ddf5
  41c98e:	xchg   DWORD PTR [edi],esi
  41c990:	pop    es
  41c991:	dec    ebp
  41c992:	(bad)  
  41c993:	fdivr  QWORD PTR [ebx]
  41c995:	mov    esp,0x1e32dd07
  41c99a:	sub    BYTE PTR [ebp-0x3a],bh
  41c99d:	and    al,0x8e
  41c99f:	loope  0x41c953
  41c9a1:	sbb    dh,BYTE PTR [ecx-0x6f]
  41c9a4:	jb     0x41c9b3
  41c9a6:	xchg   edi,eax
  41c9a7:	out    0x14,eax
  41c9a9:	lods   eax,DWORD PTR ds:[esi]
  41c9aa:	dec    esp
  41c9ab:	out    0x2a,al
  41c9ad:	lock inc edi
  41c9af:	mov    ah,0x51
  41c9b1:	stos   BYTE PTR es:[edi],al
  41c9b2:	sbb    al,0x95
  41c9b4:	fs mov edx,0x31f6bde1
  41c9ba:	inc    esi
  41c9bb:	repz shl BYTE PTR ds:0x4d4e2baa,0x86
  41c9c3:	mov    bh,0xd9
  41c9c5:	push   es
  41c9c6:	fcomip st,st(7)
  41c9c8:	xor    BYTE PTR [edi+0x38bff203],al
  41c9ce:	push   edx
  41c9cf:	push   ss
  41c9d0:	sahf   
  41c9d1:	inc    esp
  41c9d2:	inc    edi
  41c9d3:	lods   eax,DWORD PTR ds:[esi]
  41c9d4:	jl     0x41ca29
  41c9d6:	add    BYTE PTR [ebx+0xde65447],bh
  41c9dc:	je     0x41c9bd
  41c9de:	xor    eax,0x50ce6871
  41c9e3:	sbb    eax,0x9d0551bb
  41c9e8:	outs   dx,BYTE PTR ds:[esi]
  41c9e9:	lods   al,BYTE PTR ds:[esi]
  41c9ea:	mov    bh,0xb2
  41c9ec:	ins    DWORD PTR es:[edi],dx
  41c9ed:	ins    BYTE PTR es:[edi],dx
  41c9ee:	cmc    
  41c9ef:	in     eax,0x4c
  41c9f1:	out    dx,al
  41c9f2:	dec    ebx
  41c9f3:	scas   al,BYTE PTR es:[edi]
  41c9f4:	xlat   BYTE PTR ds:[ebx]
  41c9f5:	adc    eax,0x91b742b4
  41c9fa:	jge    0x41ca5a
  41c9fc:	add    DWORD PTR [ebx],ebx
  41c9fe:	push   ss
  41c9ff:	xchg   ebx,eax
  41ca00:	call   0xbe5f3f12
  41ca05:	dec    esi
  41ca06:	test   al,0x5a
  41ca08:	out    0x22,al
  41ca0a:	in     eax,0x82
  41ca0c:	dec    edi
  41ca0d:	mov    ds:0xb7b4d405,al
  41ca12:	das    
  41ca13:	jp     0x41c9f6
  41ca15:	push   eax
  41ca16:	inc    ebp
  41ca17:	cmp    al,0x45
  41ca19:	(bad)  
  41ca1a:	outs   dx,BYTE PTR ds:[esi]
  41ca1b:	loop   0x41ca73
  41ca1d:	sub    al,0xde
  41ca1f:	cmp    edx,DWORD PTR [ecx+0x3f1ed545]
  41ca25:	fstp   DWORD PTR [edi+0x71]
  41ca28:	in     al,0x6b
  41ca2a:	in     eax,0x4f
  41ca2c:	cmp    ebx,DWORD PTR [ebx]
  41ca2e:	adc    al,0x76
  41ca30:	xchg   ebp,eax
  41ca31:	and    eax,0xbbc65ef
  41ca36:	shrd   DWORD PTR [ebp+0x11],ebp,cl
  41ca3a:	add    BYTE PTR [edi],cl
  41ca3c:	(bad)  
  41ca3d:	fdiv   QWORD PTR [esi]
  41ca3f:	in     al,0x9d
  41ca41:	or     eax,eax
  41ca43:	xchg   ecx,eax
  41ca44:	in     eax,0xdc
  41ca46:	int3   
  41ca47:	mov    ebx,fs
  41ca49:	xor    dl,BYTE PTR [ebx-0x16]
  41ca4c:	add    eax,0x5b51efe2
  41ca51:	xchg   ebp,eax
  41ca52:	lahf   
  41ca53:	out    0xe7,eax
  41ca55:	cmp    esp,eax
  41ca57:	sbb    eax,edx
  41ca59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5a:	fidivr WORD PTR [edi-0x1f6adc5b]
  41ca60:	aaa    
  41ca61:	dec    esi
  41ca62:	in     eax,0xf8
  41ca64:	dec    BYTE PTR [ebx-0x3]
  41ca67:	mov    ebx,0xf3c74df9
  41ca6c:	mov    ebp,0x13a5010a
  41ca71:	mov    dh,0x6a
  41ca73:	fmul   QWORD PTR ds:0x9a24c04f
  41ca79:	sub    eax,0x64f5619d
  41ca7e:	std    
  41ca7f:	ja     0x41ca48
  41ca81:	fst    QWORD PTR [edi*4-0x6d9fc1d4]
  41ca88:	ss ins BYTE PTR es:[edi],dx
  41ca8a:	pop    es
  41ca8b:	cmp    DWORD PTR [eax+0x18],edi
  41ca8e:	cmovge eax,DWORD PTR [esi]
  41ca91:	test   DWORD PTR [esi],esp
  41ca93:	jmp    0x812cfb7a
  41ca98:	fisttp WORD PTR ss:[eax+0xa5231d3]
  41ca9f:	dec    edx
  41caa0:	leave  
  41caa1:	and    al,BYTE PTR [edi+0x3745d570]
  41caa7:	ins    DWORD PTR es:[edi],dx
  41caa8:	push   esp
  41caa9:	jae    0x41caf3
  41caab:	cmp    bh,ah
  41caad:	jae    0x41caca
  41caaf:	pop    edi
  41cab0:	(bad)  
  41cab1:	sbb    ebp,DWORD PTR [edi]
  41cab3:	popf   
  41cab4:	icebp  
  41cab5:	adc    eax,0xfd9c0689
  41caba:	ror    BYTE PTR [esi-0x66],0xb8
  41cabe:	cdq    
  41cabf:	jmp    0xf10f:0x2970bea7
  41cac6:	jno    0x41cafe
  41cac8:	sub    ah,ch
  41caca:	sahf   
  41cacb:	cmp    al,0x9f
  41cacd:	mov    eax,ds:0x37608e15
  41cad2:	jbe    0x41ca98
  41cad4:	mov    BYTE PTR [esi+0x20],al
  41cad7:	pop    edi
  41cad8:	inc    ebp
  41cad9:	adc    eax,0xe0ba0d0d
  41cade:	cdq    
  41cadf:	push   ds
  41cae0:	jecxz  0x41cabc
  41cae2:	ds pushf 
  41cae4:	mov    esp,DWORD PTR [esi]
  41cae6:	adc    DWORD PTR [edi+0x171d9d34],edx
  41caec:	and    edi,ebx
  41caee:	mov    eax,ds:0x932e2fc
  41caf3:	cdq    
  41caf4:	stos   DWORD PTR es:[edi],eax
  41caf5:	push   0xffffff88
  41caf7:	mov    al,ds:0x9b516b2b
  41cafc:	out    dx,eax
  41cafd:	out    0xab,al
  41caff:	ds ins DWORD PTR es:[edi],dx
  41cb01:	xchg   ebx,eax
  41cb02:	jl     0x41caec
  41cb04:	sbb    eax,0xbdba5ebc
  41cb09:	cli    
  41cb0a:	ins    BYTE PTR es:[edi],dx
  41cb0b:	mov    bl,0x3b
  41cb0d:	jg     0x41cafe
  41cb0f:	enter  0xdbde,0x9b
  41cb13:	mov    ah,0xbb
  41cb15:	fcom   QWORD PTR [ebx]
  41cb17:	out    dx,eax
  41cb18:	gs mov bl,0x77
  41cb1b:	dec    ebx
  41cb1c:	rcr    BYTE PTR [ebx],cl
  41cb1e:	out    0x9b,al
  41cb20:	imul   ebp,DWORD PTR [eax+esi*8],0xb
  41cb24:	(bad)  
  41cb26:	outs   dx,BYTE PTR ds:[esi]
  41cb27:	mov    ebx,eax
  41cb29:	nop
  41cb2a:	sub    ch,BYTE PTR [eax+0x13]
  41cb2d:	outs   dx,BYTE PTR ds:[esi]
  41cb2e:	test   al,0xa
  41cb30:	dec    ebx
  41cb31:	sub    al,0x2e
  41cb33:	stc    
  41cb34:	sbb    esi,esp
  41cb36:	push   ebp
  41cb37:	imul   DWORD PTR [edi-0x30]
  41cb3a:	dec    ebx
  41cb3b:	xchg   DWORD PTR [ebx+esi*2],edx
  41cb3e:	inc    ebx
  41cb3f:	idiv   BYTE PTR [edx+edi*4]
  41cb42:	mov    ds:0x8da52edd,al
  41cb47:	push   edi
  41cb48:	push   eax
  41cb49:	mov    edx,DWORD PTR [edi]
  41cb4b:	push   cs
  41cb4c:	in     eax,dx
  41cb4d:	loope  0x41cb4b
  41cb4f:	pop    ebx
  41cb50:	push   0x870d7c73
  41cb55:	xchg   edi,eax
  41cb56:	xor    BYTE PTR [ebx+eax*4-0x5acaa362],al
  41cb5d:	inc    BYTE PTR [esp+esi*2-0x72518f33]
  41cb64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb65:	aam    0x40
  41cb67:	ins    BYTE PTR es:[edi],dx
  41cb68:	mul    BYTE PTR [eax+0xdf51a25]
  41cb6e:	in     eax,dx
  41cb6f:	imul   ebx,DWORD PTR [ebx-0x7a],0x3b497866
  41cb76:	jmp    0xa4d2fc6c
  41cb7b:	and    al,0x3e
  41cb7d:	and    eax,0xb258d9e8
  41cb82:	outs   dx,BYTE PTR ds:[esi]
  41cb83:	loope  0x41cb38
  41cb85:	jl     0x41cb5c
  41cb87:	push   ebx
  41cb88:	mov    WORD PTR [edi],es
  41cb8a:	dec    eax
  41cb8b:	xlat   BYTE PTR ds:[ebx]
  41cb8c:	jns    0x41cb7a
  41cb8e:	out    dx,eax
  41cb8f:	pop    eax
  41cb90:	int    0x96
  41cb92:	sbb    DWORD PTR [eax-0x19d7e375],0x4c8230b5
  41cb9c:	xchg   bh,ah
  41cb9e:	mov    edi,0x82409617
  41cba3:	in     eax,dx
  41cba4:	cdq    
  41cba5:	jb     0x41cc1f
  41cba7:	sub    eax,0x38a81146
  41cbac:	add    DWORD PTR [ebx],esp
  41cbae:	push   edi
  41cbaf:	lods   al,BYTE PTR ds:[esi]
  41cbb0:	test   eax,0x4df61812
  41cbb5:	dec    esp
  41cbb6:	ror    DWORD PTR [edx-0x5607ce86],1
  41cbbc:	sbb    DWORD PTR [edi+0x10b510d9],edx
  41cbc2:	rol    BYTE PTR [edx+edx*2],cl
  41cbc5:	popf   
  41cbc6:	(bad)  
  41cbc7:	xchg   edx,eax
  41cbc8:	cwde   
  41cbc9:	xchg   BYTE PTR [ebx+0xf],dl
  41cbcc:	stos   BYTE PTR es:[edi],al
  41cbcd:	push   0x4c
  41cbcf:	(bad)  
  41cbd1:	sub    al,0x84
  41cbd3:	pop    ecx
  41cbd4:	scas   eax,DWORD PTR es:[edi]
  41cbd5:	and    ebx,DWORD PTR [edx+0x5]
  41cbd8:	and    al,0x7f
  41cbda:	into   
  41cbdb:	push   ss
  41cbdc:	mov    al,0x3f
  41cbde:	add    bl,ch
  41cbe0:	inc    ecx
  41cbe1:	(bad)  
  41cbe2:	test   eax,0x5f799aa8
  41cbe7:	stos   DWORD PTR es:[edi],eax
  41cbe8:	jecxz  0x41cb7f
  41cbea:	pop    edx
  41cbeb:	push   0xffffffc3
  41cbed:	push   esp
  41cbee:	or     ecx,esp
  41cbf0:	popf   
  41cbf1:	jb     0x41cc17
  41cbf3:	ins    BYTE PTR es:[edi],dx
  41cbf4:	or     eax,0xaa64221
  41cbf9:	add    DWORD PTR [edx],esi
  41cbfb:	int3   
  41cbfc:	and    esi,DWORD PTR [esi]
  41cbfe:	pushf  
  41cbff:	xchg   edx,eax
  41cc00:	pusha  
  41cc01:	enter  0xe193,0x98
  41cc05:	sbb    cl,BYTE PTR [esi]
  41cc07:	jecxz  0x41cc0b
  41cc09:	clc    
  41cc0a:	sahf   
  41cc0b:	jg     0x41cc75
  41cc0d:	enter  0xebb2,0x37
  41cc11:	outs   dx,DWORD PTR ds:[esi]
  41cc12:	stos   DWORD PTR es:[edi],eax
  41cc13:	scas   al,BYTE PTR es:[edi]
  41cc14:	cmp    bl,BYTE PTR [ebp+0x67218bb6]
  41cc1a:	int    0x32
  41cc1c:	dec    esi
  41cc1d:	cli    
  41cc1e:	pop    ecx
  41cc1f:	adc    edx,ecx
  41cc21:	dec    ebp
  41cc22:	or     DWORD PTR [edx+0x6a17ccf2],ecx
  41cc28:	cld    
  41cc29:	adc    esp,ebp
  41cc2b:	(bad)  
  41cc2c:	jge    0x41cc72
  41cc2e:	iret   
  41cc2f:	add    eax,0xdcad87d9
  41cc34:	mov    edi,0x547a5a78
  41cc39:	outs   dx,DWORD PTR ds:[esi]
  41cc3a:	mov    BYTE PTR [edx],ch
  41cc3c:	fwait
  41cc3d:	mov    eax,0xa650e976
  41cc42:	sbb    al,0x1a
  41cc44:	test   BYTE PTR [ebp+0x27],cl
  41cc47:	cs leave 
  41cc49:	mov    bh,0x7c
  41cc4b:	inc    esi
  41cc4c:	test   BYTE PTR ds:0x79b7dda5,al
  41cc52:	int3   
  41cc53:	cmp    eax,0x27ea7073
  41cc58:	pop    esp
  41cc59:	fs js  0x41ccd2
  41cc5c:	test   ebp,0x7cb433b3
  41cc62:	mov    eax,0xe9ba9b61
  41cc67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc68:	xchg   esp,eax
  41cc69:	or     al,0x9a
  41cc6b:	or     eax,0x1701cc83
  41cc70:	sub    BYTE PTR [ebx],cl
  41cc72:	stos   BYTE PTR es:[edi],al
  41cc73:	lock (bad) [ebp+0x932523]
  41cc7a:	xor    bl,BYTE PTR [ebp-0x46]
  41cc7d:	repnz pop ebx
  41cc7f:	cli    
  41cc80:	mov    bh,0xe4
  41cc82:	or     ebx,DWORD PTR [ecx+0x13f41706]
  41cc88:	push   eax
  41cc89:	and    DWORD PTR [esp+ebx*1-0x47792435],esi
  41cc90:	cmp    eax,0x37956134
  41cc95:	dec    esp
  41cc96:	sbb    edx,esi
  41cc98:	das    
  41cc99:	cs jp  0x41cd11
  41cc9c:	scas   eax,DWORD PTR es:[edi]
  41cc9d:	imul   esi,DWORD PTR [ecx+edi*2+0x24],0x2a
  41cca2:	mov    eax,ds:0xf4a4d65e
  41cca7:	xor    al,0xa5
  41cca9:	xor    eax,0x9f2b24fd
  41ccae:	jnp    0x41ccf5
  41ccb0:	loopne 0x41cd21
  41ccb2:	outs   dx,BYTE PTR ds:[esi]
  41ccb3:	xchg   ebp,eax
  41ccb4:	adc    esi,DWORD PTR [edi-0x12]
  41ccb7:	(bad)  
  41ccb8:	aam    0xb0
  41ccba:	xor    BYTE PTR [edi+esi*4-0x4a981216],bl
  41ccc1:	lock xchg edx,eax
  41ccc3:	sbb    esi,eax
  41ccc5:	mov    dh,0xf4
  41ccc7:	pause  
  41ccc9:	mov    ds:0x2376d8fe,al
  41ccce:	cmp    eax,0xdf599248
  41ccd3:	cld    
  41ccd4:	fimul  DWORD PTR [edx]
  41ccd6:	pop    edx
  41ccd7:	ret    0x5c95
  41ccda:	leave  
  41ccdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccdc:	dec    esi
  41ccdd:	sub    eax,0xc071cae0
  41cce2:	test   al,0x69
  41cce4:	mov    esp,DWORD PTR [ebx-0x2d649b80]
  41ccea:	pop    ebx
  41cceb:	xor    eax,0x7d4d9be0
  41ccf0:	iret   
  41ccf1:	pop    edi
  41ccf2:	cmp    DWORD PTR [ebp+0x49],0x1eb1870a
  41ccf9:	fnstsw WORD PTR [ebx+0x77]
  41ccfc:	jo     0x41cce6
  41ccfe:	dec    ebx
  41ccff:	mov    WORD PTR [ebx-0x12d29460],ds
  41cd05:	inc    esi
  41cd06:	mov    ecx,0x5bfc0ef9
  41cd0b:	push   ss
  41cd0c:	(bad)  
  41cd0d:	mul    DWORD PTR [ebx]
  41cd0f:	cld    
  41cd10:	enter  0x75ad,0x3e
  41cd14:	bound  esp,QWORD PTR [esi+0xa]
  41cd17:	loopne 0x41cd3a
  41cd19:	xchg   edx,eax
  41cd1a:	sub    BYTE PTR [ebp-0x6a27b329],ah
  41cd20:	cmp    DWORD PTR [edi],ebp
  41cd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd23:	(bad)  
  41cd24:	shl    esi,1
  41cd26:	pop    es
  41cd27:	add    BYTE PTR [eax+0x10],dh
  41cd2a:	mov    dh,0x6b
  41cd2c:	and    ebx,0xffffffa7
  41cd2f:	xor    BYTE PTR [esi],cl
  41cd31:	aas    
  41cd32:	aaa    
  41cd33:	mov    BYTE PTR [ebx],dl
  41cd35:	xor    DWORD PTR [eax+0x49],esi
  41cd38:	inc    ebx
  41cd39:	mov    edx,0x97deb8aa
  41cd3e:	dec    ebp
  41cd3f:	fwait
  41cd40:	add    ebx,edi
  41cd42:	or     esi,0xd0e1b6ad
  41cd48:	in     eax,dx
  41cd49:	aam    0xd0
  41cd4b:	pop    edi
  41cd4c:	inc    esp
  41cd4d:	aam    0xa3
  41cd4f:	mov    bl,0x54
  41cd51:	stc    
  41cd52:	xor    BYTE PTR ds:0x781320fa,dl
  41cd58:	sbb    eax,0x1c3a7d53
  41cd5d:	ret    
  41cd5e:	popf   
  41cd5f:	mov    eax,0x76522e35
  41cd64:	xchg   ebp,eax
  41cd65:	leave  
  41cd66:	out    dx,al
  41cd67:	dec    ecx
  41cd68:	loopne 0x41cdb5
  41cd6a:	fs inc ebx
  41cd6c:	pop    ebx
  41cd6d:	mov    al,0x3a
  41cd6f:	xchg   edi,eax
  41cd70:	or     BYTE PTR [esi+0x61],bh
  41cd73:	jns    0x41cde8
  41cd75:	fcmove st,st(4)
  41cd77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd78:	mov    esi,0xe6c65f09
  41cd7d:	add    DWORD PTR [esi-0x7ed45906],esp
  41cd83:	ja     0x41cdef
  41cd85:	shr    BYTE PTR [ebp-0x7c],1
  41cd88:	out    0xc6,eax
  41cd8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd8b:	push   edx
  41cd8c:	fcmovne st,st(5)
  41cd8e:	xchg   ebp,eax
  41cd8f:	js     0x41cda4
  41cd91:	mov    ecx,DWORD PTR ds:0x9f3361c7
  41cd97:	lods   al,BYTE PTR ds:[esi]
  41cd98:	(bad)  
  41cd99:	push   ebx
  41cd9a:	mov    ds:0x7746c241,al
  41cd9f:	pop    ecx
  41cda0:	aam    0xb4
  41cda2:	and    dh,bh
  41cda4:	and    al,0xe5
  41cda6:	pushf  
  41cda7:	or     ch,BYTE PTR [eax-0xa]
  41cdaa:	add    DWORD PTR [esi],0xffffffe4
  41cdad:	adc    BYTE PTR [ecx+eiz*2],0xb7
  41cdb1:	ins    BYTE PTR es:[edi],dx
  41cdb2:	(bad)  
  41cdb3:	dec    ebx
  41cdb4:	mov    ebx,0x3028c5ad
  41cdb9:	pop    ds
  41cdba:	mov    edi,0x992984f0
  41cdbf:	pop    esp
  41cdc0:	and    al,0xba
  41cdc2:	xchg   edx,eax
  41cdc3:	dec    DWORD PTR [eax-0x4e5b71e0]
  41cdc9:	inc    edx
  41cdca:	cli    
  41cdcb:	xor    al,0x9f
  41cdcd:	jl     0x41cdea
  41cdcf:	xchg   edx,eax
  41cdd0:	dec    ebp
  41cdd1:	jecxz  0x41ce41
  41cdd3:	neg    ah
  41cdd5:	inc    edx
  41cdd6:	xlat   BYTE PTR ds:[ebx]
  41cdd7:	jmp    0x974962c2
  41cddc:	sar    esi,cl
  41cdde:	xchg   ebp,eax
  41cddf:	pop    ebx
  41cde0:	rcl    BYTE PTR [edi+eax*4+0x74],cl
  41cde4:	je     0x41ce5f
  41cde6:	push   ecx
  41cde7:	das    
  41cde8:	dec    ebp
  41cde9:	pop    es
  41cdea:	mov    edi,0x8b2d28bd
  41cdef:	ret    0xe57d
  41cdf2:	pop    sp
  41cdf4:	cwde   
  41cdf5:	push   ebx
  41cdf6:	imul   edi,DWORD PTR [edx+0x5535e4ed],0x27
  41cdfd:	out    0xee,al
  41cdff:	inc    eax
  41ce00:	push   edi
  41ce01:	jg     0x41ce7d
  41ce03:	les    ecx,FWORD PTR [esi]
  41ce05:	xchg   esp,eax
  41ce06:	mov    dh,BYTE PTR [ebx+ebx*1-0x6f833c66]
  41ce0d:	add    al,0xa1
  41ce0f:	jbe    0x41ce42
  41ce11:	or     DWORD PTR [esi+0x37024756],edx
  41ce17:	pushf  
  41ce18:	std    
  41ce19:	or     bl,BYTE PTR ds:0x1a540f93
  41ce1f:	pop    edi
  41ce20:	into   
  41ce21:	lahf   
  41ce22:	adc    eax,0x3b24f310
  41ce27:	adc    dh,0x8a
  41ce2a:	outs   dx,DWORD PTR ds:[esi]
  41ce2b:	or     DWORD PTR [ebx],eax
  41ce2d:	cli    
  41ce2e:	repnz xchg esi,eax
  41ce30:	lods   al,BYTE PTR ds:[esi]
  41ce31:	xor    dh,BYTE PTR [ebx+0x4065cafc]
  41ce37:	mov    al,0xdd
  41ce39:	stos   BYTE PTR es:[edi],al
  41ce3a:	jmp    0xee05ccef
  41ce3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce40:	mov    esp,0x3de7713f
  41ce45:	clc    
  41ce46:	mov    bh,0x51
  41ce48:	(bad)  
  41ce49:	cmp    dl,BYTE PTR [ebp+0x30cd1d23]
  41ce4f:	aaa    
  41ce50:	cmp    BYTE PTR [eax+eiz*2],bl
  41ce53:	jns    0x41cea2
  41ce55:	shl    DWORD PTR [esi-0x4104fd12],cl
  41ce5b:	fidivr DWORD PTR [edi+0x41]
  41ce5e:	arpl   WORD PTR [eax+0x52],bx
  41ce61:	xor    esi,DWORD PTR [eax+0x2ead62d5]
  41ce67:	(bad)  
  41ce68:	rcr    DWORD PTR [edx+ebx*8+0x65],cl
  41ce6c:	and    ecx,DWORD PTR ds:0x6de3e22d
  41ce72:	adc    al,0x7f
  41ce74:	adc    bl,ch
  41ce76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce77:	cmp    ah,BYTE PTR [ebp-0x4abe2f51]
  41ce7d:	jg     0x41ce18
  41ce7f:	cmp    al,0x99
  41ce81:	adc    DWORD PTR [ecx],0x7
  41ce84:	ror    bl,cl
  41ce86:	mov    dh,0x12
  41ce88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce89:	add    ebp,DWORD PTR [edi+0x47c5f3df]
  41ce8f:	xor    BYTE PTR [edi+edi*2],bl
  41ce92:	ret    
  41ce93:	(bad)  
  41ce94:	fcmovb st,st(4)
  41ce96:	fstp   QWORD PTR [edx-0x67]
  41ce99:	push   edi
  41ce9a:	test   DWORD PTR [edx-0x6a],ebx
  41ce9d:	aas    
  41ce9e:	dec    edx
  41ce9f:	and    al,0xec
  41cea1:	add    DWORD PTR [esi-0x4db6655e],edx
  41cea7:	sub    ah,BYTE PTR [edx+0x2fb6e7ec]
  41cead:	fcmovbe st,st(4)
  41ceaf:	fnsave [ebp+0x6a629a07]
  41ceb5:	inc    esi
  41ceb6:	shr    BYTE PTR [esi+eiz*4+0x5a],1
  41ceba:	xlat   BYTE PTR ds:[ebx]
  41cebb:	outs   dx,DWORD PTR ds:[esi]
  41cebc:	(bad)  
  41cebe:	sub    DWORD PTR [ecx+0x3a],0xffffffc9
  41cec2:	je     0x41ce97
  41cec4:	lea    ecx,[esi]
  41cec6:	lods   al,BYTE PTR ds:[esi]
  41cec7:	dec    ebx
  41cec8:	inc    ebp
  41cec9:	js     0x41cedd
  41cecb:	and    ebp,ecx
  41cecd:	aam    0xaa
  41cecf:	mov    esi,0x3e91be31
  41ced4:	repnz cmp DWORD PTR [eax],ebp
  41ced7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced8:	repz popw ss
  41cedb:	jmp    0xf4c373fe
  41cee0:	pop    ebp
  41cee1:	push   eax
  41cee2:	mov    edi,0x5141794a
  41cee7:	mov    ebp,0x78544266
  41ceec:	xchg   ebx,eax
  41ceed:	sbb    dh,BYTE PTR [eax]
  41ceef:	xor    al,0x4b
  41cef1:	cli    
  41cef2:	stc    
  41cef3:	add    DWORD PTR [ebp+eax*4+0x1ab965df],0xf
  41cefb:	push   ebx
  41cefc:	sar    BYTE PTR [edi+0x22],0xb9
  41cf00:	popa   
  41cf01:	out    dx,al
  41cf02:	mov    bh,0xab
  41cf04:	or     al,0x1c
  41cf06:	xor    al,0x88
  41cf08:	aam    0xe8
  41cf0a:	xchg   DWORD PTR [edx+0x411a739c],edi
  41cf10:	cmp    eax,ebp
  41cf12:	mov    eax,0x9e40f797
  41cf17:	dec    DWORD PTR [edi+0x592a040d]
  41cf1d:	xchg   BYTE PTR [esi],bl
  41cf1f:	inc    eax
  41cf20:	pop    ebp
  41cf21:	sti    
  41cf22:	enter  0x822e,0x70
  41cf26:	in     eax,0x4e
  41cf28:	mov    dh,0xc5
  41cf2a:	or     DWORD PTR [edi],0xffffffd4
  41cf2d:	push   eax
  41cf2e:	push   esi
  41cf2f:	into   
  41cf30:	or     BYTE PTR [esi+0x14],al
  41cf33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf34:	jge    0x41ced7
  41cf36:	xchg   BYTE PTR [edi+0x425a1c32],dl
  41cf3c:	sbb    dh,dl
  41cf3e:	xor    eax,DWORD PTR [eax-0x5d]
  41cf41:	repz push eax
  41cf43:	nop
  41cf44:	push   esi
  41cf45:	jecxz  0x41cf7e
  41cf47:	cmp    al,0x91
  41cf49:	xchg   BYTE PTR [ebp+0x4e],ah
  41cf4c:	fld    QWORD PTR [ecx+0x47]
  41cf4f:	cmp    BYTE PTR [esi],0x8
  41cf52:	loop   0x41cf10
  41cf54:	pop    ebx
  41cf55:	cmp    bh,BYTE PTR [esp+eax*8+0x74]
  41cf59:	(bad)  
  41cf5a:	(bad)  
  41cf5b:	(bad)  [edx-0x6df8349]
  41cf61:	daa    
  41cf62:	jbe    0x41cf4f
  41cf64:	aad    0x48
  41cf66:	mov    BYTE PTR [eax-0x4a0570bc],ch
  41cf6c:	mov    ch,0xec
  41cf6e:	aam    0x4d
  41cf70:	inc    esi
  41cf71:	mov    al,ds:0xbbbed05f
  41cf76:	cli    
  41cf77:	rcr    DWORD PTR [ebx+0x3ba5e3e9],cl
  41cf7d:	lds    esi,FWORD PTR [esi-0x3be0e929]
  41cf83:	daa    
  41cf84:	push   edi
  41cf85:	add    al,0x6a
  41cf87:	outs   dx,DWORD PTR ds:[esi]
  41cf88:	adc    DWORD PTR [esi-0x393578f],edi
  41cf8e:	aas    
  41cf8f:	mov    dl,0x27
  41cf91:	pop    eax
  41cf92:	cmp    eax,0xc1520230
  41cf97:	neg    edx
  41cf99:	sbb    al,0xe3
  41cf9b:	xchg   ebp,eax
  41cf9c:	jl     0x41cfca
  41cf9e:	dec    BYTE PTR [edi]
  41cfa0:	xchg   ebx,eax
  41cfa1:	dec    ecx
  41cfa2:	adc    BYTE PTR [ecx+edx*1+0x73],ah
  41cfa6:	in     al,dx
  41cfa7:	mov    BYTE PTR [ebx],cl
  41cfa9:	nop
  41cfaa:	stos   DWORD PTR es:[edi],eax
  41cfab:	div    DWORD PTR [edi-0x206ef20d]
  41cfb1:	jo     0x41d02d
  41cfb3:	push   es
  41cfb4:	cmp    DWORD PTR [esi-0x22],esi
  41cfb7:	pusha  
  41cfb8:	(bad)  
  41cfb9:	push   esp
  41cfba:	shl    eax,0x87
  41cfbd:	test   al,0x70
  41cfbf:	push   cs
  41cfc0:	push   es
  41cfc1:	arpl   WORD PTR [ebp-0x2f],sp
  41cfc4:	(bad)  
  41cfc5:	mov    edi,0xb89033a6
  41cfca:	sub    DWORD PTR [ebx],esp
  41cfcc:	dec    ebx
  41cfcd:	jb     0x41cfb5
  41cfcf:	test   DWORD PTR [ebp-0x7],eax
  41cfd2:	jge    0x41d04f
  41cfd4:	or     edi,eax
  41cfd6:	retf   
  41cfd7:	push   cs
  41cfd8:	jnp    0x41cf5e
  41cfda:	sbb    BYTE PTR [eax+ebp*2+0x1f],0x30
  41cfdf:	pop    esi
  41cfe0:	rol    BYTE PTR [edx-0x14],0x3c
  41cfe4:	push   ss
  41cfe5:	inc    eax
  41cfe6:	sub    al,0x55
  41cfe8:	stc    
  41cfe9:	mov    DWORD PTR [edx+0x4c],edx
  41cfec:	fimul  WORD PTR [edx+0x2b064fdf]
  41cff2:	pop    esi
  41cff3:	lds    ebp,FWORD PTR [ecx-0x3f]
  41cff6:	mov    ebp,0xf6c962d7
  41cffb:	xchg   esi,eax
  41cffc:	loope  0x41cfc8
  41cffe:	dec    ebp
  41cfff:	daa    
  41d000:	adc    ah,BYTE PTR [ebp+0x6922a991]
  41d006:	sahf   
  41d007:	adc    ah,BYTE PTR [ebx]
  41d009:	jmp    0x4d4:0xc41dc4ee
  41d010:	jg     0x41d060
  41d012:	mov    al,ds:0xb6147c66
  41d017:	sbb    al,0x32
  41d019:	and    bh,BYTE PTR [eax-0x1c]
  41d01c:	icebp  
  41d01d:	xchg   edi,eax
  41d01e:	dec    ecx
  41d01f:	in     al,dx
  41d020:	jmp    DWORD PTR ds:0x3701bb04
  41d026:	inc    esi
  41d027:	xchg   edi,eax
  41d028:	(bad)  
  41d029:	sub    ax,0xc880
  41d02d:	jno    0x41d06c
  41d02f:	test   DWORD PTR [esi+0x2eddf0a3],ecx
  41d035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d036:	adc    ecx,edx
  41d038:	sbb    DWORD PTR [esi],ecx
  41d03a:	pop    edx
  41d03b:	bound  ebp,QWORD PTR [edi-0x521100d3]
  41d041:	data16 and BYTE PTR [esi+0x2c4b9e54],dh
  41d048:	int3   
  41d049:	cmp    BYTE PTR [edi+0xd],al
  41d04c:	pushf  
  41d04d:	inc    edx
  41d04e:	lds    ebp,FWORD PTR [ecx-0x60]
  41d051:	push   ecx
  41d052:	cmp    DWORD PTR [edi+0x1b],0xffffffc0
  41d056:	int3   
  41d057:	imul   esp,DWORD PTR [eax+ecx*4],0xffffff84
  41d05b:	shr    al,1
  41d05d:	retf   
  41d05e:	add    esp,DWORD PTR [ebx+0x5]
  41d061:	scas   al,BYTE PTR es:[edi]
  41d062:	xor    dh,dl
  41d064:	in     al,0x46
  41d066:	ret    0xe4e4
  41d069:	xchg   ebp,eax
  41d06a:	imul   ebx,DWORD PTR [edi+edx*4],0xffffffbd
  41d06e:	mov    eax,0xd98851fc
  41d073:	dec    edi
  41d074:	sub    ebp,ebx
  41d076:	push   esp
  41d077:	out    0x94,eax
  41d079:	je     0x41d02e
  41d07b:	rcr    DWORD PTR [eax],1
  41d07d:	jecxz  0x41d045
  41d07f:	pop    ebx
  41d080:	xchg   BYTE PTR [eax+esi*2],bh
  41d083:	data16 sbb al,0xda
  41d086:	aas    
  41d087:	test   al,0xdd
  41d089:	and    dl,al
  41d08b:	dec    esi
  41d08c:	call   0x621a9fc3
  41d091:	push   ss
  41d092:	test   al,0x6d
  41d094:	mov    edx,0xa895c0e5
  41d099:	sbb    DWORD PTR [ebx+0x1c],0xd57749f0
  41d0a0:	icebp  
  41d0a1:	xor    eax,0x7edd4a68
  41d0a6:	inc    edi
  41d0a7:	inc    ebp
  41d0a8:	mov    eax,ds:0xc7ec7f19
  41d0ad:	sbb    al,0x0
  41d0af:	pop    edx
  41d0b0:	fcomp  DWORD PTR ds:0xccb459a9
  41d0b6:	add    esp,ecx
  41d0b8:	mov    dl,0x26
  41d0ba:	lods   al,BYTE PTR ds:[esi]
  41d0bb:	add    ebx,0xffffff93
  41d0be:	imul   esi,eax,0xfffffffb
  41d0c1:	shr    DWORD PTR [ecx-0x23d657b7],1
  41d0c7:	std    
  41d0c8:	sbb    BYTE PTR [edx],bh
  41d0ca:	out    0xd6,eax
  41d0cc:	pop    eax
  41d0cd:	push   edx
  41d0ce:	cmp    esp,ebp
  41d0d0:	pop    ds
  41d0d1:	fwait
  41d0d2:	iret   
  41d0d3:	or     eax,edi
  41d0d5:	sbb    edx,DWORD PTR [ebx+edx*8-0x24]
  41d0d9:	dec    ebp
  41d0da:	adc    DWORD PTR ds:0x397c12,edx
  41d0e0:	adc    esi,eax
  41d0e2:	pop    ds
  41d0e3:	icebp  
  41d0e4:	add    eax,0x7cab0790
  41d0e9:	(bad)  
  41d0ea:	mov    ss,ebp
  41d0ec:	fisttp DWORD PTR [edx+0xa80649]
  41d0f2:	dec    edx
  41d0f3:	pop    ss
  41d0f4:	xchg   edx,eax
  41d0f5:	daa    
  41d0f6:	pop    es
  41d0f7:	dec    ebx
  41d0f8:	pop    edi
  41d0f9:	dec    eax
  41d0fa:	cli    
  41d0fb:	or     ebp,esi
  41d0fd:	jmp    0x9d60fa37
  41d102:	je     0x41d171
  41d104:	mov    WORD PTR [esi+0x16],ss
  41d107:	in     al,dx
  41d108:	jb     0x41d145
  41d10a:	push   esi
  41d10b:	pop    esp
  41d10c:	push   ebp
  41d10d:	mov    ebp,DWORD PTR [ebx+0xbd29d3e]
  41d113:	inc    esi
  41d114:	sbb    DWORD PTR [ecx+edi*2],edx
  41d117:	cld    
  41d118:	add    BYTE PTR [esp+ecx*8+0x260367f4],cl
  41d11f:	(bad)  
  41d120:	cwde   
  41d121:	inc    esi
  41d122:	jmp    0xac4c25c2
  41d127:	xor    edi,edi
  41d129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d12a:	mov    esp,0xc16514ec
  41d12f:	xlat   BYTE PTR ds:[ebx]
  41d130:	mov    esi,0x6fb0642d
  41d135:	jle    0x41d117
  41d137:	mov    edi,ds
  41d139:	add    BYTE PTR [ebx],ch
  41d13b:	pop    ecx
  41d13c:	jle    0x41d148
  41d13e:	sti    
  41d13f:	cmc    
  41d140:	ja     0x41d165
  41d142:	dec    edx
  41d143:	loopne 0x41d11b
  41d145:	ret    0x1152
  41d148:	pop    edi
  41d149:	pop    ss
  41d14a:	sub    BYTE PTR [ebx-0x27ccfd4b],al
  41d150:	dec    edi
  41d151:	out    dx,eax
  41d152:	jmp    0x5de5c94b
  41d157:	and    al,BYTE PTR [edx+0x7e]
  41d15a:	mov    ds:0x520a561e,al
  41d15f:	cdq    
  41d160:	shl    eax,1
  41d162:	lods   al,BYTE PTR ds:[esi]
  41d163:	fcomp  DWORD PTR [edi+0x58c68925]
  41d169:	fdiv   DWORD PTR [edi]
  41d16b:	mov    ecx,0x1f636974
  41d170:	cmp    eax,0xa93c863e
  41d175:	push   ebx
  41d176:	xor    BYTE PTR [edx],ah
  41d178:	fxch   st(6)
  41d17a:	dec    eax
  41d17b:	ret    
  41d17c:	mov    dl,0x2b
  41d17e:	fndisi(8087 only) 
  41d180:	push   ds
  41d181:	xchg   ebp,eax
  41d182:	xchg   ebp,eax
  41d183:	pushf  
  41d184:	dec    esp
  41d185:	not    DWORD PTR [edx]
  41d187:	cmc    
  41d188:	loopne 0x41d1ad
  41d18a:	stc    
  41d18b:	or     ebx,DWORD PTR [ecx-0x9]
  41d18e:	xor    al,0xb5
  41d190:	add    eax,0x5fbb48ca
  41d195:	cs push 0x536a90d9
  41d19b:	stos   DWORD PTR es:[edi],eax
  41d19c:	das    
  41d19d:	mov    bl,0x94
  41d19f:	scas   al,BYTE PTR es:[edi]
  41d1a0:	add    eax,DWORD PTR [edi+eax*4+0x31]
  41d1a4:	pop    edi
  41d1a5:	add    BYTE PTR [ecx],dh
  41d1a7:	dec    ebx
  41d1a8:	leave  
  41d1a9:	cmp    ebp,ebp
  41d1ab:	xor    dl,BYTE PTR [edi+ebx*8+0x10cda710]
  41d1b2:	pop    eax
  41d1b3:	test   DWORD PTR [ecx+ebx*4],esp
  41d1b6:	pop    ebp
  41d1b7:	dec    ebp
  41d1b8:	xchg   edx,eax
  41d1b9:	add    bh,dl
  41d1bb:	inc    eax
  41d1bc:	mov    edi,0x5d25fcb0
  41d1c1:	push   ds
  41d1c2:	inc    ebx
  41d1c3:	out    dx,eax
  41d1c4:	std    
  41d1c5:	jp     0x41d17d
  41d1c7:	pop    ebp
  41d1c8:	packsswb mm2,QWORD PTR [ebp+ecx*1+0x123dd12d]
  41d1d0:	lea    eax,[ebx-0x2d7cb600]
  41d1d6:	or     ecx,esp
  41d1d8:	cld    
  41d1d9:	xchg   DWORD PTR [edx+0x31],esi
  41d1dc:	mov    ?,WORD PTR [esi+0x59]
  41d1df:	push   esi
  41d1e0:	xchg   edi,eax
  41d1e1:	mov    ds:0xc14ad135,eax
  41d1e6:	(bad)  
  41d1e7:	or     esp,DWORD PTR [esi-0x31]
  41d1ea:	fimul  DWORD PTR [edx]
  41d1ec:	pop    ebp
  41d1ed:	mov    ds:0xd5d8cdc3,al
  41d1f2:	add    bh,BYTE PTR [ecx]
  41d1f4:	loopne 0x41d248
  41d1f6:	inc    esp
  41d1f7:	cdq    
  41d1f8:	fwait
  41d1f9:	xlat   BYTE PTR ds:[ebx]
  41d1fa:	test   DWORD PTR [edx],edx
  41d1fc:	pop    es
  41d1fd:	stc    
  41d1fe:	pop    ebp
  41d1ff:	cwde   
  41d200:	or     al,0x6b
  41d202:	mov    BYTE PTR [edx-0x4d],ch
  41d205:	pushf  
  41d206:	push   edi
  41d207:	or     BYTE PTR [esi-0x7a],cl
  41d20a:	mov    BYTE PTR [esi+0x6b35a44d],bh
  41d210:	imul   ebx,edx,0x29702b6c
  41d216:	mov    bl,0xb0
  41d218:	xor    eax,0xaea404f7
  41d21d:	aad    0x50
  41d21f:	test   al,0x1e
  41d221:	cwde   
  41d222:	shl    dh,1
  41d224:	mov    al,ds:0x7d5f000e
  41d229:	popf   
  41d22a:	mov    esp,DWORD PTR [edi-0x5]
  41d22d:	imul   edx,DWORD PTR [edi],0x22
  41d230:	fidivr DWORD PTR [ebp-0x1b]
  41d233:	or     ebx,edx
  41d235:	loop   0x41d244
  41d237:	dec    esi
  41d238:	pop    ds
  41d239:	sub    BYTE PTR [ebp-0x3e],ah
  41d23c:	(bad)  
  41d23d:	ret    0x29db
  41d240:	inc    ebx
  41d241:	enter  0xcc96,0x48
  41d245:	jo     0x41d28b
  41d247:	data16 sub dl,0x4a
  41d24b:	std    
  41d24c:	sub    al,BYTE PTR [ebx]
  41d24e:	and    dl,dh
  41d250:	icebp  
  41d251:	xchg   ecx,eax
  41d252:	add    DWORD PTR [edi],0xcebbe377
  41d258:	mov    dl,BYTE PTR [ebx+0x5e]
  41d25b:	and    ebx,eax
  41d25d:	xchg   BYTE PTR [edi+0x668441ea],ah
  41d263:	shl    eax,1
  41d265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d266:	or     BYTE PTR [esp+ecx*2],dh
  41d269:	mov    dl,cl
  41d26b:	mov    ch,0xf8
  41d26d:	or     eax,0x719e20b3
  41d272:	test   eax,0xe330f39c
  41d277:	mov    esi,0x42541b99
  41d27c:	fnsave [ebp+0x4f]
  41d27f:	mov    cl,0x1a
  41d281:	aas    
  41d282:	and    al,0x89
  41d284:	ds jecxz 0x41d243
  41d287:	xchg   ebx,eax
  41d288:	idiv   DWORD PTR [edi-0x30]
  41d28b:	mov    esi,0x7b822c75
  41d290:	sub    DWORD PTR [edi-0x3c],eax
  41d293:	sti    
  41d294:	loop   0x41d2e7
  41d296:	or     BYTE PTR [eax],0x20
  41d299:	inc    esp
  41d29a:	inc    esi
  41d29b:	mov    edi,0xd64c8cbb
  41d2a0:	shl    DWORD PTR [ebx],1
  41d2a2:	(bad)  
  41d2a3:	call   0x74f5c858
  41d2a8:	push   edi
  41d2a9:	repnz bt DWORD PTR [eax+0x11a76041],0xa5
  41d2b2:	jmp    0x22c:0x8c836a
  41d2b9:	out    dx,al
  41d2ba:	sub    bl,0xc
  41d2bd:	(bad)  
  41d2bf:	pop    ds
  41d2c0:	cwde   
  41d2c1:	cs stc 
  41d2c3:	jecxz  0x41d2a9
  41d2c5:	imul   edi,DWORD PTR [edx],0xa2dd980
  41d2cb:	jp     0x41d2d0
  41d2cd:	push   esi
  41d2ce:	add    al,0xe8
  41d2d0:	add    DWORD PTR [edi],ebp
  41d2d2:	test   eax,0xa8ec38d9
  41d2d7:	fstp   DWORD PTR [edi]
  41d2d9:	fnstenv [ebp+0x5270831]
  41d2df:	push   es
  41d2e0:	mov    ebx,0x690e0cee
  41d2e5:	sub    al,BYTE PTR [edi]
  41d2e7:	out    0xde,eax
  41d2e9:	shl    DWORD PTR [ebx+0x6a06d97b],0xac
  41d2f0:	mov    eax,ds:0x65f31a5d
  41d2f5:	nop
  41d2f6:	out    0xd1,al
  41d2f8:	imul   edx,DWORD PTR [eax-0x2c],0x45
  41d2fc:	jg     0x41d29f
  41d2fe:	inc    edx
  41d2ff:	mov    esi,0xdc0bd70a
  41d304:	pop    esi
  41d305:	sti    
  41d306:	inc    ecx
  41d307:	and    DWORD PTR [edx+0x1f2a1d01],0xd2044ea3
  41d311:	sbb    eax,0x91dbe457
  41d316:	xchg   edx,eax
  41d317:	cmp    al,BYTE PTR [edi]
  41d319:	arpl   bx,bp
  41d31b:	and    eax,0x8789ca91
  41d320:	pop    ecx
  41d321:	out    dx,eax
  41d322:	shl    BYTE PTR [ebx],1
  41d324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d325:	push   edx
  41d326:	es out 0xe1,al
  41d329:	ror    DWORD PTR [edx-0x42a20ae4],cl
  41d32f:	dec    eax
  41d330:	cs xor eax,0xeaea811b
  41d336:	lods   al,BYTE PTR ds:[esi]
  41d337:	and    DWORD PTR [eax+edi*4],ebp
  41d33a:	xlat   BYTE PTR ds:[ebx]
  41d33b:	int    0x6b
  41d33d:	sti    
  41d33e:	loopne 0x41d363
  41d340:	cs dec edx
  41d342:	imul   edi,ecx,0xffffff96
  41d345:	aam    0x47
  41d347:	repnz sbb al,0xad
  41d34a:	(bad)  [edi+ebx*2]
  41d34d:	std    
  41d34e:	sub    ch,BYTE PTR [esi-0x3b]
  41d351:	mov    eax,ss
  41d353:	adc    eax,0x3b4b1efd
  41d358:	addr16 sub al,0xa9
  41d35b:	xor    eax,0x4b9460e
  41d360:	xor    ebp,esi
  41d362:	test   DWORD PTR [edi+0x46864594],eax
  41d368:	out    dx,eax
  41d369:	and    edi,edi
  41d36b:	xchg   esi,eax
  41d36c:	push   ebx
  41d36d:	cdq    
  41d36e:	jne    0x41d3c1
  41d370:	mov    dh,0x17
  41d372:	jl     0x41d3cb
  41d374:	sbb    DWORD PTR [ecx],esp
  41d376:	mov    bl,0x73
  41d378:	dec    ebx
  41d379:	mov    al,0x8b
  41d37b:	in     al,0x7c
  41d37d:	cdq    
  41d37e:	adc    al,0xb9
  41d380:	mov    ebx,0x69e88dd3
  41d385:	(bad)  
  41d386:	mov    edx,0xda661aa1
  41d38b:	test   esi,edi
  41d38d:	push   es
  41d38e:	shl    BYTE PTR [esi+eiz*1+0x54],cl
  41d392:	push   eax
  41d393:	outs   dx,BYTE PTR ds:[esi]
  41d394:	push   ds
  41d395:	sub    dh,cl
  41d397:	mov    dl,0x6
  41d399:	retf   
  41d39a:	das    
  41d39b:	push   ebx
  41d39c:	ins    DWORD PTR es:[edi],dx
  41d39d:	stos   DWORD PTR es:[edi],eax
  41d39e:	mov    bh,0xd3
  41d3a0:	iret   
  41d3a1:	fsubr  st(6),st
  41d3a3:	xor    edi,DWORD PTR [esp+ebp*2+0x1c7137d5]
  41d3aa:	mov    eax,ds:0x823edd29
  41d3af:	and    al,0xec
  41d3b1:	les    ebp,FWORD PTR [edi]
  41d3b3:	cwde   
  41d3b4:	cmp    ebp,ecx
  41d3b6:	scas   eax,DWORD PTR es:[edi]
  41d3b7:	sti    
  41d3b8:	aas    
  41d3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ba:	mov    BYTE PTR [edi-0x69],dl
  41d3bd:	push   esi
  41d3be:	add    eax,0x7e5eba65
  41d3c3:	sbb    edi,DWORD PTR [eax]
  41d3c5:	jmp    0xe952:0x27502020
  41d3cc:	xchg   edx,eax
  41d3cd:	fnsavew [ebx-0x69]
  41d3d1:	mov    ecx,0xa858f2ef
  41d3d6:	nop
  41d3d7:	aas    
  41d3d8:	mov    edx,0x70bbab50
  41d3dd:	jl     0x41d413
  41d3df:	ins    BYTE PTR es:[edi],dx
  41d3e0:	test   DWORD PTR [edi+ebp*2+0x20a8e0d5],esp
  41d3e7:	inc    esp
  41d3e8:	into   
  41d3e9:	mov    al,ds:0x8d3dcb9a
  41d3ee:	sbb    esi,DWORD PTR [edx-0x66]
  41d3f1:	fidivr WORD PTR [ebx+ebx*8-0x72]
  41d3f5:	pop    esi
  41d3f6:	pop    ecx
  41d3f7:	adc    DWORD PTR [eax-0x3d],ebp
  41d3fa:	cmc    
  41d3fb:	pop    edx
  41d3fc:	pop    edi
  41d3fd:	je     0x41d46d
  41d3ff:	mov    dh,0xf3
  41d401:	pushf  
  41d402:	fnsave [edi+0x1433a300]
  41d408:	cmp    eax,0x1ebf49be
  41d40d:	dec    esp
  41d40e:	sbb    al,0x37
  41d410:	aas    
  41d411:	clc    
  41d412:	mov    ecx,0x3f242781
  41d417:	inc    ecx
  41d418:	cmp    eax,0x555d853f
  41d41d:	lahf   
  41d41e:	daa    
  41d41f:	and    edi,edi
  41d421:	pop    edx
  41d422:	lds    ebp,FWORD PTR [edi+eax*2+0x4f9476]
  41d429:	sbb    BYTE PTR [ebx],ch
  41d42b:	pop    ebx
  41d42c:	cs in  eax,0x14
  41d42f:	dec    esi
  41d430:	mov    esp,0xdd892555
  41d435:	or     BYTE PTR [edx],dl
  41d437:	mov    edx,0x9eec3f33
  41d43c:	jg     0x41d3f1
  41d43e:	mov    WORD PTR [ebx+0x5a],?
  41d441:	cmp    al,0x9d
  41d443:	loop   0x41d43f
  41d445:	jns    0x41d45e
  41d447:	fistp  DWORD PTR [eax]
  41d449:	pushf  
  41d44a:	mov    esp,0xc8706c3b
  41d44f:	arpl   ax,bp
  41d451:	push   0xd4330aa
  41d456:	dec    ebp
  41d457:	cmp    eax,0x3798b6dd
  41d45c:	fidiv  WORD PTR [ebx-0x25008318]
  41d462:	pop    ebp
  41d463:	dec    esi
  41d464:	gs cmp al,0x58
  41d467:	popf   
  41d468:	push   esp
  41d469:	jl     0x41d408
  41d46b:	dec    ecx
  41d46c:	dec    ebp
  41d46d:	dec    si
  41d46f:	out    0x8f,al
  41d471:	nop
  41d472:	div    dl
  41d474:	scas   eax,DWORD PTR es:[edi]
  41d475:	mov    esp,0xbf8f6e86
  41d47a:	fadd   st(2),st
  41d47c:	fsub   DWORD PTR [edi-0x15202d9]
  41d482:	inc    ecx
  41d483:	neg    DWORD PTR [esi+0x2c]
  41d486:	(bad)  
  41d487:	scas   eax,DWORD PTR es:[edi]
  41d488:	dec    edi
  41d489:	shl    al,1
  41d48b:	pop    esi
  41d48c:	jb     0x41d441
  41d48e:	jmp    0xb66c:0x3218d61b
  41d495:	fs mov ecx,0xfa7ce82c
  41d49b:	pop    esi
  41d49c:	pop    edx
  41d49d:	scas   al,BYTE PTR es:[edi]
  41d49e:	ja     0x41d43a
  41d4a0:	add    al,0x55
  41d4a2:	or     ah,al
  41d4a4:	test   DWORD PTR [ecx-0x3c],ebx
  41d4a7:	jb     0x41d4ed
  41d4a9:	in     al,0x99
  41d4ab:	ret    0xd5b
  41d4ae:	xchg   edi,eax
  41d4af:	ret    0x85a9
  41d4b2:	jmp    0x1e7a:0xb2edaba8
  41d4b9:	(bad)  
  41d4ba:	pop    ss
  41d4bb:	(bad)  
  41d4bc:	lahf   
  41d4bd:	xchg   esi,eax
  41d4be:	jl     0x41d461
  41d4c0:	test   cl,dl
  41d4c2:	sub    eax,0xf739e799
  41d4c7:	js     0x41d53c
  41d4c9:	jle    0x41d536
  41d4cb:	cvttps2pi mm6,QWORD PTR [ebp+0x47]
  41d4cf:	sub    bh,BYTE PTR [ecx-0x2a]
  41d4d2:	sbb    bh,BYTE PTR [edx]
  41d4d4:	cmp    ebx,ecx
  41d4d6:	(bad)  
  41d4d8:	pop    ecx
  41d4d9:	retf   
  41d4da:	jp     0x41d4b8
  41d4dc:	imul   edx,ebp,0xffffffca
  41d4df:	sub    ah,al
  41d4e1:	jae    0x41d47a
  41d4e3:	neg    ebx
  41d4e5:	test   al,0x46
  41d4e7:	mov    ebp,0x1d0e24ab
  41d4ec:	sbb    al,0x96
  41d4ee:	push   ds
  41d4ef:	push   0xef4532aa
  41d4f4:	sbb    bl,BYTE PTR [edx+0x714c1d4]
  41d4fa:	lods   al,BYTE PTR ds:[esi]
  41d4fb:	mov    dl,0x50
  41d4fd:	and    eax,0x910ee7f
  41d502:	adc    al,0xbd
  41d504:	fimul  WORD PTR [ebp+0x65671d27]
  41d50a:	ja     0x41d57c
  41d50c:	and    al,0x3f
  41d50e:	sub    al,0x36
  41d510:	icebp  
  41d511:	inc    ebp
  41d512:	(bad)  
  41d513:	clc    
  41d514:	repz cmc 
  41d516:	call   0xc265:0x4527e848
  41d51d:	mov    ebp,0x806656a2
  41d522:	sub    DWORD PTR ds:0xc5361230,0xeed97d90
  41d52c:	or     al,0x32
  41d52e:	fistp  QWORD PTR [edi-0x45b03008]
  41d534:	fnstcw WORD PTR [edi]
  41d536:	sbb    al,0x67
  41d538:	jo     0x41d556
  41d53a:	push   0xffffffa9
  41d53c:	mov    ds:0xa86d674,eax
  41d541:	daa    
  41d542:	inc    ebp
  41d543:	cli    
  41d544:	pop    ecx
  41d545:	sbb    ah,bl
  41d547:	aas    
  41d548:	xchg   esi,eax
  41d549:	push   edx
  41d54a:	xor    BYTE PTR [esp+edi*8],dh
  41d54d:	call   0xaf97e8d1
  41d552:	and    eax,0xb72f230b
  41d557:	sub    cl,0x59
  41d55a:	add    al,0x25
  41d55c:	cli    
  41d55d:	mov    edx,edx
  41d55f:	cwde   
  41d560:	inc    ebp
  41d561:	and    DWORD PTR [esi-0x120bd9a8],esi
  41d567:	xor    eax,0x623ab24a
  41d56c:	push   ds
  41d56d:	aad    0xc4
  41d56f:	outs   dx,DWORD PTR ds:[esi]
  41d570:	pop    ebp
  41d571:	jge    0x41d5c4
  41d573:	mov    esi,0xb65a2d3
  41d578:	mov    dh,0xc
  41d57a:	lahf   
  41d57b:	pop    esi
  41d57c:	mov    al,ds:0x272bf5ab
  41d581:	and    BYTE PTR [edi+eax*8+0x60],0x54
  41d586:	ins    BYTE PTR es:[edi],dx
  41d587:	call   0x10fd2556
  41d58c:	dec    edx
  41d58d:	dec    ebp
  41d58e:	nop
  41d58f:	dec    ecx
  41d590:	(bad)  
  41d591:	jmp    0x41d54f
  41d593:	clc    
  41d594:	ud0    eax,ecx
  41d597:	ret    0xba98
  41d59a:	mov    DWORD PTR [ecx],esp
  41d59c:	(bad)  [edi-0x2c]
  41d59f:	call   FWORD PTR [ebx-0x2a006ae5]
  41d5a5:	jge    0x41d5c0
  41d5a7:	mov    al,ds:0xe761261a
  41d5ac:	mov    ds:0x97de090f,al
  41d5b1:	mov    al,ds:0xa2c07516
  41d5b6:	imul   esi,ebp,0xb10ed67c
  41d5bc:	sub    al,0x98
  41d5be:	cmp    al,0x79
  41d5c0:	or     al,0x82
  41d5c2:	rol    DWORD PTR [ecx],0xc7
  41d5c5:	fidivr DWORD PTR [ebp+0x6f1ab2ae]
  41d5cb:	cmp    bh,0xf8
  41d5ce:	dec    ebp
  41d5cf:	jns    0x41d5d5
  41d5d1:	mov    eax,DWORD PTR [eax+0xc85f8fc]
  41d5d7:	scas   eax,DWORD PTR es:[edi]
  41d5d8:	out    dx,eax
  41d5d9:	aas    
  41d5da:	mov    esp,DWORD PTR [esi]
  41d5dc:	gs (bad) 
  41d5de:	retf   0xc5f6
  41d5e1:	push   ds
  41d5e2:	or     eax,0x40d07f5b
  41d5e7:	or     ecx,esp
  41d5e9:	fcomp  st(6)
  41d5eb:	lahf   
  41d5ec:	stos   BYTE PTR es:[edi],al
  41d5ed:	xor    esi,0x21562ccb
  41d5f3:	push   ss
  41d5f4:	mov    ds:0x871b3a76,eax
  41d5f9:	push   ss
  41d5fa:	push   cs
  41d5fb:	pop    edx
  41d5fc:	xor    al,BYTE PTR [edi-0x39b446c2]
  41d602:	icebp  
  41d603:	push   ebp
  41d604:	dec    ecx
  41d605:	(bad)  
  41d606:	adc    eax,0xfa797e52
  41d60b:	nop
  41d60c:	adc    DWORD PTR [esi+0x2b],ebx
  41d60f:	add    esi,DWORD PTR cs:[edi+0x41]
  41d613:	test   BYTE PTR [esi],ch
  41d615:	mov    bl,0xcf
  41d617:	sbb    eax,0x4215e8ed
  41d61c:	or     BYTE PTR [edx-0x29da6605],dl
  41d622:	fimul  DWORD PTR [edi+ecx*8-0x71]
  41d626:	and    DWORD PTR [ebx],edx
  41d628:	rcr    BYTE PTR [ebx],0x6d
  41d62b:	mov    al,ds:0x277763b2
  41d630:	outs   dx,BYTE PTR ds:[esi]
  41d631:	sub    al,0xed
  41d633:	fisub  WORD PTR [edi-0x47042ec6]
  41d639:	xor    eax,0x9c2b51eb
  41d63e:	inc    edi
  41d63f:	add    al,0xb3
  41d641:	repnz xchg ebx,eax
  41d643:	sahf   
  41d644:	xchg   ebx,eax
  41d645:	pushf  
  41d646:	dec    edx
  41d647:	xor    eax,0x20803182
  41d64c:	xor    al,0x1b
  41d64e:	jo     0x41d627
  41d650:	nop
  41d651:	in     al,0xf3
  41d653:	in     eax,0xcb
  41d655:	add    eax,0x20f9a30e
  41d65a:	sbb    al,0xc
  41d65c:	xor    esi,DWORD PTR [ebp+0x37028d71]
  41d662:	lahf   
  41d663:	jmp    0x41d669
  41d665:	scas   eax,DWORD PTR es:[edi]
  41d666:	cdq    
  41d667:	inc    edi
  41d668:	jb     0x41d61a
  41d66a:	loop   0x41d61a
  41d66c:	mov    ah,0x20
  41d66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d66f:	rcl    DWORD PTR [ecx],1
  41d671:	leave  
  41d672:	clc    
  41d673:	aad    0xf1
  41d675:	push   edi
  41d676:	scas   eax,DWORD PTR es:[edi]
  41d677:	add    eax,0x94d99603
  41d67c:	retf   0x6812
  41d67f:	nop
  41d680:	jmp    0x6b4f:0x84769299
  41d687:	dec    esp
  41d688:	fcmovne st,st(2)
  41d68a:	inc    esi
  41d68b:	mov    bh,0x7f
  41d68d:	dec    ebx
  41d68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d68f:	popa   
  41d690:	fdiv   DWORD PTR [edi+ebp*4]
  41d693:	xor    al,0xc4
  41d695:	outs   dx,BYTE PTR ds:[esi]
  41d696:	(bad)  
  41d697:	jl     0x41d638
  41d699:	pop    edi
  41d69a:	mov    DWORD PTR [ebp+0x1e],esp
  41d69d:	sbb    ah,ah
  41d69f:	stos   BYTE PTR es:[edi],al
  41d6a0:	sahf   
  41d6a1:	xchg   esi,eax
  41d6a2:	xchg   BYTE PTR [edx-0x58adaf58],cl
  41d6a8:	out    dx,eax
  41d6a9:	mov    si,WORD PTR [ecx-0x17]
  41d6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ae:	adc    BYTE PTR ds:0x34da769b,al
  41d6b4:	ins    BYTE PTR es:[edi],dx
  41d6b5:	cmc    
  41d6b6:	dec    eax
  41d6b7:	stos   DWORD PTR es:[edi],eax
  41d6b8:	sub    cl,BYTE PTR [edi]
  41d6ba:	addr16 push 0xffffffb6
  41d6bd:	sbb    edx,ebx
  41d6bf:	jb     0x41d64b
  41d6c1:	sti    
  41d6c2:	adc    al,0x37
  41d6c4:	loopne 0x41d6d0
  41d6c6:	pushf  
  41d6c7:	jno    0x41d651
  41d6c9:	fdivr  DWORD PTR [edi+0x4772ad1e]
  41d6cf:	pop    esp
  41d6d0:	cmp    ch,BYTE PTR [edi]
  41d6d2:	inc    DWORD PTR [eax+0x36a17e13]
  41d6d8:	imul   ebp,DWORD PTR [edi+0xa],0x67
  41d6dc:	cld    
  41d6dd:	inc    esi
  41d6de:	neg    DWORD PTR [ebx-0x5e]
  41d6e1:	inc    edi
  41d6e2:	jmp    0x41d72a
  41d6e4:	lock outs dx,BYTE PTR ds:[esi]
  41d6e6:	inc    ecx
  41d6e7:	dec    esp
  41d6e8:	or     ebx,DWORD PTR [eax+eiz*2]
  41d6eb:	adc    esi,DWORD PTR [esi-0x69]
  41d6ee:	add    eax,0x48341aa
  41d6f3:	add    al,0xb9
  41d6f5:	pop    esi
  41d6f6:	push   esp
  41d6f7:	je     0x41d70a
  41d6f9:	daa    
  41d6fa:	sbb    bh,BYTE PTR [esi-0xe]
  41d6fd:	rcr    bl,cl
  41d6ff:	adc    BYTE PTR [ebx],ch
  41d701:	fistp  DWORD PTR [edi-0x1a3b2bab]
  41d707:	cdq    
  41d708:	in     al,0x5f
  41d70a:	xchg   BYTE PTR [ebp-0x62149c60],dl
  41d710:	aam    0xe4
  41d712:	inc    edx
  41d713:	sbb    DWORD PTR [edi],edx
  41d715:	fisttp DWORD PTR [esi]
  41d717:	repz and eax,0x53d77083
  41d71d:	in     eax,0x78
  41d71f:	sub    DWORD PTR [ebx+ebp*2],ebp
  41d722:	sar    ebx,0xad
  41d725:	js     0x41d791
  41d727:	and    ebx,DWORD PTR [esp+edx*4-0x2c]
  41d72b:	xor    al,0xb1
  41d72d:	out    0x31,eax
  41d72f:	test   al,0x5e
  41d731:	pop    edi
  41d732:	lods   eax,DWORD PTR ds:[esi]
  41d733:	mov    ah,0xb9
  41d735:	push   cs
  41d736:	pusha  
  41d737:	cmp    eax,0x9c9bd2af
  41d73c:	cmp    ecx,ebx
  41d73e:	cmp    al,0xc2
  41d740:	cmp    al,BYTE PTR [ebp-0x2b4eff12]
  41d746:	dec    ebp
  41d747:	jge    0x41d72a
  41d749:	add    ebx,esi
  41d74b:	out    0x57,al
  41d74d:	mov    eax,0xd7ac4e29
  41d752:	clc    
  41d753:	mov    bh,0x3f
  41d755:	lods   eax,DWORD PTR ds:[esi]
  41d756:	xor    ecx,DWORD PTR [edx+0x4280f165]
  41d75c:	or     al,0xf6
  41d75e:	test   al,0x7e
  41d760:	dec    eax
  41d761:	imul   esp
  41d763:	pop    eax
  41d764:	pushf  
  41d765:	xor    eax,0xbe94847e
  41d76a:	ins    DWORD PTR es:[edi],dx
  41d76b:	dec    eax
  41d76c:	push   edx
  41d76d:	mov    bh,0xa
  41d76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d770:	and    edi,DWORD PTR [ecx+0x6ec995f1]
  41d776:	hlt    
  41d777:	or     eax,0x5b0a3155
  41d77c:	jo     0x41d7a4
  41d77e:	clc    
  41d77f:	cli    
  41d780:	jmp    0x4112f343
  41d785:	stos   BYTE PTR es:[edi],al
  41d786:	xor    eax,0x904a8067
  41d78b:	les    edi,FWORD PTR ds:0xbfd877c8
  41d791:	sti    
  41d792:	das    
  41d793:	ja     0x41d736
  41d795:	sbb    eax,0xaf803de2
  41d79a:	mov    edx,esp
  41d79c:	xor    esp,DWORD PTR [ebx]
  41d79e:	clc    
  41d79f:	fxtract 
  41d7a1:	imul   BYTE PTR [edi-0x79]
  41d7a4:	add    al,0xf7
  41d7a6:	loope  0x41d75b
  41d7a8:	js     0x41d7de
  41d7aa:	sahf   
  41d7ab:	pusha  
  41d7ac:	imul   esp,DWORD PTR [esi+eax*8-0x51b864d],0x155add90
  41d7b7:	inc    esi
  41d7b8:	stos   DWORD PTR es:[edi],eax
  41d7b9:	push   es
  41d7ba:	pusha  
  41d7bb:	mov    ebx,0x3d056324
  41d7c0:	call   0xc9ebe575
  41d7c5:	sbb    ah,BYTE PTR [edx-0xdcf6b7d]
  41d7cb:	js     0x41d835
  41d7cd:	inc    esi
  41d7ce:	shl    BYTE PTR [eax-0x12],1
  41d7d1:	pop    ecx
  41d7d2:	adc    ebx,DWORD PTR [edx]
  41d7d4:	push   edi
  41d7d5:	std    
  41d7d6:	pop    esp
  41d7d7:	mov    bl,0x2
  41d7d9:	fcom   DWORD PTR [eax+0x1c]
  41d7dc:	in     eax,0x4f
  41d7de:	sub    BYTE PTR [esi+ebx*8-0x9],ch
  41d7e2:	mov    ecx,0x829bcaf6
  41d7e7:	xchg   esp,eax
  41d7e8:	xchg   esp,eax
  41d7e9:	adc    cl,dh
  41d7eb:	popf   
  41d7ec:	lahf   
  41d7ed:	jno    0x41d7c0
  41d7ef:	add    ebx,DWORD PTR [edi+0x6]
  41d7f2:	aad    0xb
  41d7f4:	mov    ch,0xcc
  41d7f6:	shl    DWORD PTR [ecx],1
  41d7f8:	ins    BYTE PTR es:[edi],dx
  41d7f9:	push   es
  41d7fa:	repnz mov ah,0x68
  41d7fd:	repnz pop ecx
  41d7ff:	xor    bh,BYTE PTR [esi]
  41d801:	xchg   bh,dl
  41d803:	(bad)  
  41d804:	cmp    al,0x25
  41d806:	sahf   
  41d807:	and    DWORD PTR [edi-0x5d],ecx
  41d80a:	mov    ecx,0x70da9aac
  41d80f:	pop    ss
  41d810:	xor    al,0x3c
  41d812:	sbb    DWORD PTR [ebp-0x70],0x36
  41d816:	pop    ebp
  41d817:	lea    ebp,[ebx]
  41d819:	aam    0x95
  41d81b:	push   eax
  41d81c:	or     dh,BYTE PTR [eax]
  41d81e:	adc    BYTE PTR [edi],dh
  41d820:	jae    0x41d827
  41d822:	in     al,dx
  41d823:	jmp    0xd1daf67d
  41d828:	mov    ah,0xd5
  41d82a:	js     0x41d841
  41d82c:	nop
  41d82d:	in     eax,dx
  41d82e:	inc    ecx
  41d82f:	mov    ds:0x3d1f1836,al
  41d834:	adc    DWORD PTR [esi-0xa],ecx
  41d837:	push   edx
  41d838:	das    
  41d839:	cs jae 0x41d818
  41d83c:	add    al,0x3b
  41d83e:	mov    ah,0x3b
  41d840:	or     esi,DWORD PTR [edx-0x3d]
  41d843:	xchg   ecx,eax
  41d844:	shr    ecx,cl
  41d846:	or     eax,0x20cc066c
  41d84b:	mov    ecx,edx
  41d84d:	sbb    ch,bh
  41d84f:	inc    edx
  41d850:	(bad)  
  41d851:	sub    ch,bl
  41d853:	jne    0x41d86a
  41d855:	and    al,0xdf
  41d857:	out    0x31,al
  41d859:	out    0xea,al
  41d85b:	inc    edi
  41d85c:	not    dl
  41d85e:	mov    bh,0xe
  41d860:	inc    edi
  41d861:	mov    ah,bl
  41d863:	inc    ecx
  41d864:	dec    ecx
  41d865:	pop    esp
  41d866:	inc    edi
  41d867:	mov    ch,0xcb
  41d869:	mov    eax,0x356ab1b7
  41d86e:	or     DWORD PTR [eax+esi*4-0x10],esi
  41d872:	cmp    bh,0x36
  41d875:	addr16 clc 
  41d877:	adc    eax,0x4aaaf2bb
  41d87c:	daa    
  41d87d:	in     eax,0xdd
  41d87f:	loope  0x41d809
  41d881:	jge    0x41d8ed
  41d883:	push   ecx
  41d884:	mov    ss,WORD PTR [ebp-0x743575bb]
  41d88a:	jnp    0x41d80f
  41d88c:	dec    ecx
  41d88d:	push   esi
  41d88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d88f:	fdiv   QWORD PTR [esi]
  41d891:	sbb    DWORD PTR [esi],edx
  41d893:	pop    ds
  41d894:	cwde   
  41d895:	cmp    ebx,DWORD PTR [esi-0x6ceca558]
  41d89b:	outs   dx,DWORD PTR ds:[esi]
  41d89c:	adc    ah,BYTE PTR [ebp-0x2c]
  41d89f:	aaa    
  41d8a0:	pusha  
  41d8a1:	sub    ebp,DWORD PTR [edx]
  41d8a3:	sbb    ah,ah
  41d8a5:	dec    esi
  41d8a6:	pop    edi
  41d8a7:	lods   eax,DWORD PTR ds:[esi]
  41d8a8:	push   edi
  41d8a9:	lods   eax,DWORD PTR ds:[esi]
  41d8aa:	rol    BYTE PTR [eax-0x1a],cl
  41d8ad:	ret    0x88d8
  41d8b0:	sbb    eax,esp
  41d8b2:	jae    0x41d890
  41d8b4:	mov    edi,0x4dc1db20
  41d8b9:	adc    dl,BYTE PTR [ebx+0x393a0e7a]
  41d8bf:	(bad)  
  41d8c0:	and    eax,0xde87d5e4
  41d8c5:	adc    BYTE PTR [edx-0xe],dh
  41d8c8:	pop    esp
  41d8c9:	js     0x41d85a
  41d8cb:	mov    ah,0x64
  41d8cd:	sub    edx,DWORD PTR [edi-0x7a058cb3]
  41d8d3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d8d5:	xchg   esp,eax
  41d8d6:	jle    0x41d868
  41d8d8:	inc    ebp
  41d8d9:	push   ecx
  41d8da:	std    
  41d8db:	pop    es
  41d8dc:	jnp    0x41d93e
  41d8de:	lock lahf 
  41d8e0:	in     al,dx
  41d8e1:	idiv   ebx
  41d8e3:	jns    0x41d8c7
  41d8e5:	cmp    eax,ebx
  41d8e7:	jne    0x41d89a
  41d8e9:	mov    ds:0xbf7cdc16,al
  41d8ee:	sbb    edi,edx
  41d8f0:	xchg   edi,eax
  41d8f1:	daa    
  41d8f2:	fsubr  DWORD PTR [eax+0x73]
  41d8f5:	ins    BYTE PTR es:[edi],dx
  41d8f6:	mov    ah,0xa
  41d8f8:	mov    es,WORD PTR ds:0x8de77779
  41d8fe:	repz call 0xf0f6:0x311067f3
  41d906:	es add eax,0xab4b362
  41d90c:	gs sbb al,0xb7
  41d90f:	lds    ebx,FWORD PTR [ebp+0x37]
  41d912:	scas   al,BYTE PTR es:[edi]
  41d913:	aam    0x41
  41d915:	call   0x4d5d2fc3
  41d91a:	fiadd  DWORD PTR [ebx]
  41d91c:	pop    ax
  41d91e:	stc    
  41d91f:	arpl   WORD PTR [ecx+0x44],cx
  41d922:	cdq    
  41d923:	mov    cl,0x38
  41d925:	adc    DWORD PTR [ebp+0x70],eax
  41d928:	adc    eax,0x6ac7da09
  41d92d:	dec    eax
  41d92e:	push   edi
  41d92f:	xchg   edi,eax
  41d930:	dec    ecx
  41d931:	jle    0x41d996
  41d933:	imul   edi,DWORD PTR [esi+0x1f],0x97f0facf
  41d93a:	add    BYTE PTR [ebx+0x14],0x7b
  41d93e:	arpl   WORD PTR [eax-0x6],sp
  41d941:	outs   dx,DWORD PTR ds:[esi]
  41d942:	mov    es,WORD PTR [ecx+eax*1]
  41d945:	out    0x35,al
  41d947:	mov    esp,0x4074cee
  41d94c:	adc    BYTE PTR [ebx+0x51e2ce2b],0xca
  41d953:	sbb    bh,bh
  41d955:	add    al,0x2e
  41d957:	scas   al,BYTE PTR es:[edi]
  41d958:	loope  0x41d917
  41d95a:	scas   eax,DWORD PTR es:[edi]
  41d95b:	add    eax,0x5f334c44
  41d960:	mov    edi,0x1aea98de
  41d965:	mov    al,0x7d
  41d967:	out    dx,eax
  41d968:	loopne 0x41d9bb
  41d96a:	jns    0x41d92e
  41d96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d96d:	dec    edi
  41d96e:	out    dx,al
  41d96f:	push   es
  41d970:	std    
  41d971:	sahf   
  41d972:	rcl    BYTE PTR ds:0x2c2d1e66,0x44
  41d979:	jg     0x41d907
  41d97b:	push   0xffffffaf
  41d97d:	or     BYTE PTR [ebx-0x3a5ae5da],al
  41d983:	push   eax
  41d984:	in     eax,0xb3
  41d986:	mov    bh,0xb8
  41d988:	jmp    0xfcf6:0x23aa1b73
  41d98f:	pop    ds
  41d990:	pop    es
  41d991:	scas   al,BYTE PTR es:[edi]
  41d992:	xchg   DWORD PTR [ebp+0x72],esi
  41d995:	push   ebx
  41d996:	enter  0x12c1,0x38
  41d99a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d99b:	mov    ds:0x6173d63f,eax
  41d9a0:	sbb    bh,al
  41d9a2:	fild   DWORD PTR [edx]
  41d9a4:	jnp    0x41d944
  41d9a6:	pop    ds
  41d9a7:	inc    eax
  41d9a8:	dec    edx
  41d9a9:	retf   0xde59
  41d9ac:	mov    esi,0x40b07f5e
  41d9b1:	push   edx
  41d9b2:	jl     0x41d9e4
  41d9b4:	pop    esp
  41d9b5:	jbe    0x41d938
  41d9b7:	inc    ebx
  41d9b8:	xchg   edx,eax
  41d9b9:	clc    
  41d9ba:	jge    0x41d942
  41d9bc:	pop    ds
  41d9bd:	mov    edx,0xf2800fa2
  41d9c2:	xchg   edi,eax
  41d9c3:	mov    eax,ds:0x1ceacde7
  41d9c8:	jmp    0x9017b93d
  41d9cd:	fist   WORD PTR [ecx+0x51]
  41d9d0:	push   es
  41d9d1:	push   es
  41d9d2:	or     bl,BYTE PTR [eax+0x7c]
  41d9d5:	arpl   WORD PTR [ebx-0x1d],bp
  41d9d8:	adc    bh,dl
  41d9da:	push   0x24f855e2
  41d9df:	push   esp
  41d9e0:	stos   BYTE PTR es:[edi],al
  41d9e1:	imul   edi,DWORD PTR [edi+0x6905c34],0x8e803bb1
  41d9eb:	adc    dl,cl
  41d9ed:	arpl   sp,dx
  41d9ef:	xchg   edx,eax
  41d9f0:	aam    0xb9
  41d9f2:	sbb    ch,BYTE PTR [edx+esi*2-0x6b]
  41d9f6:	retf   
  41d9f7:	add    bh,ah
  41d9f9:	ja     0x41d9f4
  41d9fb:	dec    esp
  41d9fc:	inc    ebp
  41d9fd:	jle    0x41d9d6
  41d9ff:	(bad)  
  41da00:	mov    dh,0x31
  41da02:	cmp    BYTE PTR [eax],cl
  41da04:	lahf   
  41da05:	in     eax,0xaa
  41da07:	mov    esi,0x75ee7706
  41da0c:	loop   0x41da86
  41da0e:	js     0x41d9b6
  41da10:	pop    ds
  41da11:	fwait
  41da12:	ret    0x9049
  41da15:	dec    ebp
  41da16:	bound  ebx,QWORD PTR ds:0xd66cba74
  41da1c:	sbb    al,0x6e
  41da1e:	sbb    al,0x5d
  41da20:	dec    ecx
  41da21:	dec    eax
  41da22:	scas   al,BYTE PTR es:[edi]
  41da23:	fstp   QWORD PTR [eax]
  41da25:	aas    
  41da26:	stos   BYTE PTR es:[edi],al
  41da27:	(bad)  
  41da28:	neg    bh
  41da2a:	call   0x24a6a615
  41da2f:	rcl    DWORD PTR [ebx-0x1f],1
  41da32:	stc    
  41da33:	dec    ebp
  41da34:	sbb    al,0x67
  41da36:	add    ah,bh
  41da38:	lods   al,BYTE PTR ds:[esi]
  41da39:	std    
  41da3a:	mov    al,0x9b
  41da3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3d:	add    bh,bl
  41da3f:	inc    ecx
  41da40:	mov    cl,0x1d
  41da42:	xchg   DWORD PTR [edx],ebp
  41da44:	scas   al,BYTE PTR es:[edi]
  41da45:	js     0x41d9ff
  41da47:	sbb    eax,0x1086d36e
  41da4c:	repnz xor ecx,edx
  41da4f:	out    dx,al
  41da50:	xchg   ecx,eax
  41da51:	jl     0x41da5f
  41da53:	inc    edi
  41da54:	xor    dl,BYTE PTR [esi+0x333d3d53]
  41da5a:	(bad)  
  41da5b:	mov    dl,bl
  41da5d:	mov    ebp,0x48694a4a
  41da62:	sbb    ebx,edx
  41da64:	ret    
  41da65:	jmp    0x41da7c
  41da67:	mov    ebx,0x61191ed1
  41da6c:	out    dx,al
  41da6d:	xchg   BYTE PTR [esi+0x4b],ch
  41da70:	shl    DWORD PTR [edi+0x11],0x15
  41da74:	pop    ebp
  41da75:	ret    
  41da76:	lock or al,0x51
  41da79:	aad    0x6f
  41da7b:	or     esp,esp
  41da7d:	scas   eax,DWORD PTR es:[edi]
  41da7e:	loope  0x41da51
  41da80:	les    edx,FWORD PTR [esi-0x3b]
  41da83:	pop    eax
  41da84:	daa    
  41da85:	es and al,0x78
  41da88:	enter  0x6e8a,0x6f
  41da8c:	add    edx,esp
  41da8e:	out    0x73,eax
  41da90:	mov    DWORD PTR [edi+eax*4],ebx
  41da93:	adc    eax,0xc94232f7
  41da98:	cmp    DWORD PTR [edi],esi
  41da9a:	in     eax,0xf9
  41da9c:	stos   DWORD PTR es:[edi],eax
  41da9d:	dec    ecx
  41da9e:	jecxz  0x41db14
  41daa0:	lods   al,BYTE PTR ds:[esi]
  41daa1:	cmp    edi,eax
  41daa3:	adc    DWORD PTR [eax-0x2249a0db],ecx
  41daa9:	lahf   
  41daaa:	xchg   edi,eax
  41daab:	adc    al,0xe7
  41daad:	jnp    0x41dac8
  41daaf:	ins    DWORD PTR es:[edi],dx
  41dab0:	ins    BYTE PTR es:[edi],dx
  41dab1:	lds    edx,FWORD PTR [edi-0x2dea14dd]
  41dab7:	sahf   
  41dab8:	push   cs
  41dab9:	int    0x81
  41dabb:	shl    BYTE PTR [eax],cl
  41dabd:	adc    DWORD PTR [edx-0x3c501e66],edx
  41dac3:	loopne 0x41da5d
  41dac5:	mov    WORD PTR [ebx+eiz*8-0x3d],gs
  41dac9:	mov    ch,0x50
  41dacb:	and    BYTE PTR [edi+0x39],al
  41dace:	scas   eax,DWORD PTR es:[edi]
  41dacf:	out    0x79,al
  41dad1:	in     eax,0x4b
  41dad3:	add    BYTE PTR [ebx+eax*4],bh
  41dad6:	outs   dx,BYTE PTR ds:[esi]
  41dad7:	popf   
  41dad8:	sbb    al,0x57
  41dada:	ret    0x30d1
  41dadd:	dec    ebx
  41dade:	out    dx,eax
  41dadf:	add    DWORD PTR [edx+0x56],ebx
  41dae2:	or     BYTE PTR ds:0x793fa237,dh
  41dae8:	jo     0x41db12
  41daea:	in     al,0x85
  41daec:	ds mov esp,0xe48b35e7
  41daf2:	or     al,0x71
  41daf4:	in     eax,0xdf
  41daf6:	lea    edx,[ebp-0x7c8e25e8]
  41dafc:	shl    BYTE PTR [edx],0x36
  41daff:	adc    bh,ah
  41db01:	rcl    DWORD PTR [ebx],cl
  41db03:	or     al,0xf3
  41db05:	mov    ds:0x9f8960aa,eax
  41db0a:	test   eax,0x8c9f60b7
  41db0f:	inc    ebp
  41db10:	cld    
  41db11:	adc    bl,bh
  41db13:	cmp    eax,0xcfba6b48
  41db18:	adc    eax,0xdf470fed
  41db1d:	adc    ecx,DWORD PTR [edi-0x2077b58d]
  41db23:	jb     0x41db98
  41db25:	shr    BYTE PTR [eax-0x6a2838ec],0xd5
  41db2c:	push   edi
  41db2d:	enter  0xd8fc,0xb
  41db31:	rcr    cl,cl
  41db33:	std    
  41db34:	rol    DWORD PTR [ebx],1
  41db36:	jmp    0xe692:0xced2a489
  41db3d:	dec    ecx
  41db3e:	mov    ds:0x8bb34a8a,eax
  41db43:	fucomip st,st(7)
  41db45:	arpl   WORD PTR [ecx+0x2f],di
  41db48:	jne    0x41db12
  41db4a:	clc    
  41db4b:	pop    ebx
  41db4c:	mov    bl,0x4e
  41db4e:	jle    0x41dbba
  41db50:	adc    cl,dl
  41db52:	jo     0x41dbb2
  41db54:	xor    edx,DWORD PTR [edx-0x3facd5f0]
  41db5a:	aam    0x90
  41db5c:	mov    esi,0xf0a27ad6
  41db61:	cmp    dl,cl
  41db63:	pop    esp
  41db64:	jns    0x41db9f
  41db66:	jno    0x41db0c
  41db68:	mov    DWORD PTR [edi+0x4dfd1c25],ebx
  41db6e:	pusha  
  41db6f:	stos   BYTE PTR es:[edi],al
  41db70:	or     BYTE PTR [ebp+0x6623ecc7],ah
  41db76:	nop
  41db77:	pop    ds
  41db78:	bnd jle 0x41dbd9
  41db7b:	mov    esi,0x7fdb18cc
  41db80:	fld    DWORD PTR [ebx]
  41db82:	jae    0x41db7c
  41db84:	adc    eax,0x98fb84b4
  41db89:	or     eax,DWORD PTR [edi]
  41db8b:	jo     0x41db33
  41db8d:	(bad)  
  41db8e:	push   ebx
  41db8f:	add    eax,0x33cfe839
  41db94:	xchg   ebp,eax
  41db95:	dec    eax
  41db96:	inc    esp
  41db97:	cmp    DWORD PTR [edi-0x76],eax
  41db9a:	jnp    0x41db7a
  41db9c:	(bad)  
  41db9e:	inc    al
  41dba0:	stc    
  41dba1:	out    0x5,al
  41dba3:	cdq    
  41dba4:	and    BYTE PTR [ecx+0x19f3469],dh
  41dbaa:	int    0xfc
  41dbac:	add    al,0xba
  41dbae:	pop    eax
  41dbaf:	imul   esp,DWORD PTR [ebx+0x5ef06bbd],0x5b983748
  41dbb9:	and    eax,0x9f83192
  41dbbe:	push   cs
  41dbbf:	mov    edi,0x75a70da3
  41dbc4:	mov    edi,es
  41dbc6:	sub    eax,0x85a67947
  41dbcb:	imul   edi,DWORD PTR [esi-0x1e],0xffffff93
  41dbcf:	fadd   st,st(0)
  41dbd1:	stc    
  41dbd2:	pop    eax
  41dbd3:	xor    DWORD PTR [edx*1-0x51e3cb4c],esp
  41dbda:	jecxz  0x41dbf5
  41dbdc:	sub    ebx,DWORD PTR [edi]
  41dbde:	fsub   QWORD PTR [ecx-0x52]
  41dbe1:	cmp    DWORD PTR [eax-0x24],edx
  41dbe4:	loop   0x41dc44
  41dbe6:	(bad)  
  41dbe7:	nop
  41dbe8:	sub    eax,0x125a0aba
  41dbed:	pop    ecx
  41dbee:	popa   
  41dbef:	pop    esi
  41dbf0:	dec    ebp
  41dbf1:	dec    ebx
  41dbf2:	sbb    edi,ecx
  41dbf4:	in     eax,dx
  41dbf5:	cmc    
  41dbf6:	cdq    
  41dbf7:	inc    edx
  41dbf8:	and    al,0xb8
  41dbfa:	adc    dl,ch
  41dbfc:	les    esi,FWORD PTR [ecx+0x1d]
  41dbff:	mov    bl,0x7c
  41dc01:	push   esi
  41dc02:	popa   
  41dc03:	test   edx,ebx
  41dc05:	mov    eax,fs
  41dc07:	xchg   ebp,eax
  41dc08:	sbb    DWORD PTR [edx+0x39c4066f],edi
  41dc0e:	mov    edi,DWORD PTR [edi]
  41dc10:	adc    cl,0x1f
  41dc13:	das    
  41dc14:	(bad)  
  41dc15:	(bad)  
  41dc16:	mov    ch,0x10
  41dc18:	dec    esi
  41dc19:	loope  0x41dc1b
  41dc1b:	pushf  
  41dc1c:	adc    al,0x8d
  41dc1e:	push   esi
  41dc1f:	(bad)  [esi+0x18]
  41dc22:	add    al,0x6f
  41dc24:	repnz pop edi
  41dc26:	call   0x74a16e97
  41dc2b:	sbb    al,0x55
  41dc2d:	cwde   
  41dc2e:	xor    BYTE PTR [ebx+0x3aedb6c0],ah
  41dc34:	push   ebx
  41dc35:	jmp    0x41dbee
  41dc37:	shl    ch,0x5a
  41dc3a:	cld    
  41dc3b:	nop
  41dc3c:	sub    ecx,DWORD PTR [ecx]
  41dc3e:	sbb    esi,0xffffffad
  41dc41:	mov    bh,0xd
  41dc43:	adc    bl,BYTE PTR [ebx+0x6d]
  41dc46:	repz (bad) 
  41dc48:	bound  esp,QWORD PTR [ebx+esi*4-0x5d]
  41dc4c:	sub    edx,ecx
  41dc4e:	sbb    al,0xeb
  41dc50:	xlat   BYTE PTR ds:[ebx]
  41dc51:	cmp    DWORD PTR [eax+0x484fc985],esp
  41dc57:	shl    BYTE PTR [ebp+0x1],cl
  41dc5a:	xchg   DWORD PTR [edx-0x32],eax
  41dc5d:	inc    ebx
  41dc5e:	sub    BYTE PTR [edi],0xb5
  41dc61:	(bad)  
  41dc63:	jnp    0x41dce4
  41dc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc66:	pcmpgtb mm7,QWORD PTR [edx]
  41dc69:	mov    bl,0x7d
  41dc6b:	sbb    BYTE PTR [ebx],bl
  41dc6d:	popf   
  41dc6e:	outs   dx,BYTE PTR ds:[esi]
  41dc6f:	dec    BYTE PTR ss:[ebp+0xf]
  41dc73:	inc    esi
  41dc74:	or     al,BYTE PTR [ebx+0x14]
  41dc77:	sub    ah,BYTE PTR [ecx-0x16dabc8d]
  41dc7d:	ja     0x41dcdb
  41dc7f:	or     cl,BYTE PTR [edx+0x4623cfbd]
  41dc85:	mov    esp,0x83377a77
  41dc8a:	adc    al,0x1a
  41dc8c:	sbb    al,0x5c
  41dc8e:	jne    0x41dcec
  41dc90:	inc    ebp
  41dc91:	lods   eax,DWORD PTR ds:[esi]
  41dc92:	ja     0x41dcb7
  41dc94:	aad    0x4a
  41dc96:	xchg   esi,eax
  41dc97:	xchg   esi,eax
  41dc98:	push   esp
  41dc99:	and    cl,bh
  41dc9b:	retf   0xec50
  41dc9e:	jecxz  0x41dcbf
  41dca0:	lock std 
  41dca2:	xchg   edi,eax
  41dca3:	cmp    DWORD PTR [ecx],esp
  41dca5:	dec    eax
  41dca6:	sbb    eax,0xe4bea11f
  41dcab:	xor    bh,BYTE PTR [esi+0x7]
  41dcae:	iret   
  41dcaf:	lock loope 0x41dc9a
  41dcb2:	out    dx,eax
  41dcb3:	or     DWORD PTR [esi+0x1a],esi
  41dcb6:	cwde   
  41dcb7:	dec    edx
  41dcb8:	iret   
  41dcb9:	out    dx,al
  41dcba:	mov    ebx,0x86533b5e
  41dcbf:	repz repnz xchg ebx,eax
  41dcc2:	jns    0x41dcd3
  41dcc4:	int    0x29
  41dcc6:	xchg   esi,eax
  41dcc7:	dec    edx
  41dcc8:	mov    esi,0x3e9cfdbd
  41dccd:	xchg   ecx,eax
  41dcce:	fimul  WORD PTR [eax+eax*4-0x73bd8007]
  41dcd5:	mov    dh,0x76
  41dcd7:	mov    DWORD PTR [ecx-0x7b],ebx
  41dcda:	or     BYTE PTR [edx+0x35],ch
  41dcdd:	shl    WORD PTR [edx-0x223b821a],0x39
  41dce5:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41dce7:	daa    
  41dce8:	pushf  
  41dce9:	fnstenv [ecx+eiz*4+0xf52dee]
  41dcf0:	std    
  41dcf1:	xchg   edx,eax
  41dcf2:	sbb    edi,ecx
  41dcf4:	add    BYTE PTR [eax+esi*8+0x73],dl
  41dcf8:	add    esp,DWORD PTR [edx-0x1cd27b4d]
  41dcfe:	stc    
  41dcff:	xchg   edx,eax
  41dd00:	xlat   BYTE PTR ds:[ebx]
  41dd01:	jnp    0x41dd34
  41dd03:	or     BYTE PTR [ecx],bl
  41dd05:	(bad)  
  41dd06:	push   ebx
  41dd07:	jbe    0x41dd20
  41dd09:	xor    al,0x1
  41dd0b:	mul    BYTE PTR [ecx-0x3cc52195]
  41dd11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd12:	jns    0x41dd77
  41dd14:	mov    bl,BYTE PTR [ebp+0x4376c5c5]
  41dd1a:	ficom  WORD PTR [ebp+0x39]
  41dd1d:	and    ebp,edx
  41dd1f:	fisttp WORD PTR [esi+0x521b136f]
  41dd25:	popf   
  41dd26:	rcl    BYTE PTR [edi-0x9],cl
  41dd29:	pushf  
  41dd2a:	dec    esp
  41dd2b:	push   eax
  41dd2c:	xor    DWORD PTR [ebp-0x11],0xf99459d7
  41dd33:	retf   0x1262
  41dd36:	dec    esp
  41dd37:	mov    ecx,ebp
  41dd39:	pushf  
  41dd3a:	rol    BYTE PTR [esi],cl
  41dd3c:	xchg   esi,eax
  41dd3d:	test   DWORD PTR gs:[esi-0x32],ebp
  41dd41:	adc    DWORD PTR [edi],0x1f
  41dd44:	cmp    dl,BYTE PTR [edx]
  41dd46:	arpl   WORD PTR [ebx-0x4caa3e6a],di
  41dd4c:	out    0x68,eax
  41dd4e:	fadd   st(4),st
  41dd50:	push   0x2a
  41dd52:	add    eax,0x81cf87d0
  41dd57:	sbb    bl,0x8c
  41dd5a:	jns    0x41dcf2
  41dd5c:	pop    esi
  41dd5d:	xchg   esp,eax
  41dd5e:	xchg   BYTE PTR [edi+0x7cacb7da],bl
  41dd64:	dec    eax
  41dd65:	cmc    
  41dd66:	xchg   ecx,eax
  41dd67:	loope  0x41ddae
  41dd69:	nop
  41dd6a:	xor    BYTE PTR [ebx+edx*8],cl
  41dd6d:	jp     0x41dd11
  41dd6f:	repz pushf 
  41dd71:	imul   BYTE PTR [ecx-0x71]
  41dd74:	enter  0xf2f9,0xa0
  41dd78:	cmp    al,0x68
  41dd7a:	inc    ebp
  41dd7b:	adc    al,0x1f
  41dd7d:	mov    ch,0x8d
  41dd7f:	push   cs
  41dd80:	mov    cl,0x19
  41dd82:	(bad)  
  41dd83:	sti    
  41dd84:	jmp    0x41dda1
  41dd86:	xor    esp,esi
  41dd88:	mov    dl,0x93
  41dd8a:	(bad)  
  41dd8b:	xchg   esp,eax
  41dd8c:	xlat   BYTE PTR ds:[ebx]
  41dd8d:	mov    al,0x43
  41dd8f:	pop    eax
  41dd90:	sub    BYTE PTR [edi-0x50],ch
  41dd93:	shr    BYTE PTR [eax-0x1c463e21],cl
  41dd99:	fwait
  41dd9a:	xor    esi,DWORD PTR [edx-0x16]
  41dd9d:	sbb    al,0x3d
  41dd9f:	addr16 (bad) 
  41dda1:	xchg   ebp,eax
  41dda2:	push   0xffffff9f
  41dda4:	(bad)  
  41dda5:	(bad)  
  41dda6:	mov    ebp,0xae177ad8
  41ddab:	sti    
  41ddac:	leave  
  41ddad:	scas   eax,DWORD PTR es:[edi]
  41ddae:	js     0x41ddd7
  41ddb0:	ret    0xfc43
  41ddb3:	xor    eax,0xce01d53c
  41ddb8:	scas   eax,DWORD PTR es:[edi]
  41ddb9:	mov    ch,0xe6
  41ddbb:	ret    0x2ade
  41ddbe:	pop    es
  41ddbf:	jno    0x41dd65
  41ddc1:	stc    
  41ddc2:	xor    bl,ch
  41ddc4:	loope  0x41ddf9
  41ddc6:	fcom   QWORD PTR [ecx+edi*2-0xd]
  41ddca:	dec    esp
  41ddcb:	xchg   edi,eax
  41ddcc:	shl    BYTE PTR [ebp-0x5e],cl
  41ddcf:	fs mov edi,0x3f13f91d
  41ddd5:	and    eax,0xfff83314
  41ddda:	test   BYTE PTR [ecx],dh
  41dddc:	(bad)  
  41dddd:	adc    al,0x69
  41dddf:	or     al,0xac
  41dde1:	cmp    ah,bh
  41dde3:	ror    DWORD PTR [edi],cl
  41dde5:	inc    ebp
  41dde6:	or     eax,0x50d20b5e
  41ddeb:	pop    esp
  41ddec:	or     DWORD PTR [eax+0x6e],edx
  41ddef:	push   esi
  41ddf0:	inc    ebp
  41ddf1:	dec    ebx
  41ddf2:	xchg   ecx,eax
  41ddf3:	pop    ebx
  41ddf4:	ds sar ecx,cl
  41ddf7:	out    dx,al
  41ddf8:	sbb    bl,BYTE PTR [edi+0x5389e16a]
  41ddfe:	call   0xb0dd:0x662b20de
  41de05:	add    eax,0xa6e88bf2
  41de0a:	xchg   ebx,eax
  41de0b:	inc    edx
  41de0c:	xor    BYTE PTR [ebp+0x1f],ah
  41de0f:	repz cwde 
  41de11:	ror    DWORD PTR ds:0x61fd45dc,cl
  41de17:	popf   
  41de18:	add    cl,BYTE PTR [ecx-0x15de24a2]
  41de1e:	push   cs
  41de1f:	mov    al,0xbd
  41de21:	out    0xd1,eax
  41de23:	pop    DWORD PTR [edi]
  41de25:	adc    al,0xb3
  41de27:	sahf   
  41de28:	inc    ecx
  41de29:	ins    DWORD PTR es:[edi],dx
  41de2a:	imul   eax,DWORD PTR [edx],0xffffffe6
  41de2d:	jno    0x41de23
  41de2f:	out    dx,al
  41de30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de31:	lods   al,BYTE PTR ds:[esi]
  41de32:	in     eax,dx
  41de33:	neg    DWORD PTR es:[edi-0x4b18abd0]
  41de3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de3b:	or     DWORD PTR [eax-0x3e],esi
  41de3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de3f:	ja     0x41de53
  41de41:	fdivr  st(7),st
  41de43:	gs aam 0x26
  41de46:	mov    al,ds:0xf87d0888
  41de4b:	imul   ebp,DWORD PTR [edi+0x1e],0x34cdb0c8
  41de52:	nop
  41de53:	xchg   ebp,eax
  41de54:	arpl   WORD PTR [edi+0x3a0774b1],di
  41de5a:	push   edx
  41de5b:	jmp    0x86ae:0xf1f639b6
  41de62:	and    al,0xac
  41de64:	add    al,0xe9
  41de66:	(bad)  
  41de67:	xchg   al,bl
  41de69:	into   
  41de6a:	or     edx,DWORD PTR [edi-0x22]
  41de6d:	pop    ebp
  41de6e:	inc    edi
  41de6f:	aam    0x44
  41de71:	push   0xdea98e25
  41de76:	jecxz  0x41de4c
  41de78:	inc    ebx
  41de79:	mov    DWORD PTR [eax+0x8],0xf8934dec
  41de80:	sub    DWORD PTR [esi+ebx*4-0x46fb2022],ebx
  41de87:	add    dl,BYTE PTR [eax+eiz*8]
  41de8a:	inc    esp
  41de8b:	xchg   DWORD PTR [edi+0x41],ebx
  41de8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de8f:	push   cs
  41de90:	dec    ebx
  41de91:	cld    
  41de92:	test   al,0xf2
  41de94:	int    0xdf
  41de96:	(bad)  
  41de97:	xchg   ebp,eax
  41de98:	mov    dl,0xbc
  41de9a:	jne    0x41de87
  41de9c:	adc    BYTE PTR [ecx-0x4dd7f4b7],cl
  41dea2:	adc    esp,DWORD PTR [ebp+0x3921c829]
  41dea8:	aad    0xbe
  41deaa:	cmp    al,0x8e
  41deac:	daa    
  41dead:	or     DWORD PTR [ecx+0x68371c25],ebp
  41deb3:	sbb    BYTE PTR ds:0x5663499b,dh
  41deb9:	adc    dl,BYTE PTR [ecx+eiz*2-0x5e88ca93]
  41dec0:	in     al,dx
  41dec1:	lods   eax,DWORD PTR ds:[esi]
  41dec2:	cmc    
  41dec3:	ja     0x41deb3
  41dec5:	test   BYTE PTR [edx-0x3a0de85b],cl
  41decb:	int3   
  41decc:	xor    DWORD PTR [ecx],eax
  41dece:	pop    ds
  41decf:	adc    eax,0xb15075a4
  41ded4:	inc    esp
  41ded5:	arpl   WORD PTR [ecx+0x1b],si
  41ded8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41deda:	sti    
  41dedb:	mov    edx,0x4b57d738
  41dee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dee1:	mov    esi,0xb2268b16
  41dee6:	jnp    0x41df53
  41dee8:	xchg   edi,eax
  41dee9:	aas    
  41deea:	dec    ecx
  41deeb:	test   BYTE PTR [edx+ebp*4],0xce
  41deef:	fistp  QWORD PTR [ebp-0x5a]
  41def2:	outs   dx,DWORD PTR ds:[esi]
  41def3:	outs   dx,DWORD PTR ds:[esi]
  41def4:	ins    BYTE PTR es:[edi],dx
  41def5:	test   BYTE PTR [ecx+0x1c],ah
  41def8:	pop    esp
  41def9:	(bad)  
  41defa:	in     eax,dx
  41defb:	icebp  
  41defc:	cli    
  41defd:	imul   edi,DWORD PTR gs:[ecx-0x2b3fcf48],0x47f9e19a
  41df08:	das    
  41df09:	sbb    bh,BYTE PTR [esi]
  41df0b:	push   cs
  41df0c:	les    esp,FWORD PTR [edi+0x746a39d8]
  41df12:	or     eax,0x8aa3856d
  41df17:	adc    ch,bl
  41df19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df1a:	pop    ebx
  41df1b:	sbb    al,0xd6
  41df1d:	push   ds
  41df1e:	iret   
  41df1f:	pop    edi
  41df20:	jmp    0x4203:0x6fd2e91f
  41df27:	xor    eax,ebp
  41df29:	hlt    
  41df2a:	inc    esi
  41df2b:	ss inc ebx
  41df2d:	pusha  
  41df2e:	ins    DWORD PTR es:[edi],dx
  41df2f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41df31:	mov    edx,0xea73283f
  41df36:	xor    eax,0x34c77910
  41df3b:	jnp    0x41ded0
  41df3d:	clc    
  41df3e:	lock sbb eax,0x9bf56965
  41df44:	repz cmp DWORD PTR [edi],0xffffffc3
  41df48:	scas   eax,DWORD PTR es:[edi]
  41df49:	out    dx,al
  41df4a:	out    dx,eax
  41df4b:	lods   al,BYTE PTR ds:[esi]
  41df4c:	xchg   ebx,eax
  41df4d:	fwait
  41df4e:	(bad)  
  41df4f:	mov    eax,ds:0xed159492
  41df54:	xchg   esp,eax
  41df55:	mov    eax,ds:0xa319fe4b
  41df5a:	(bad)  
  41df5b:	fistp  QWORD PTR [ecx+0x6c62b61e]
  41df61:	pushf  
  41df62:	xchg   ecx,eax
  41df63:	adc    ecx,DWORD PTR ds:0x39601688
  41df69:	cmp    al,0xe7
  41df6b:	std    
  41df6c:	loopne 0x41df7b
  41df6e:	dec    ebx
  41df6f:	sub    ch,dl
  41df71:	xor    ebp,ebp
  41df73:	mov    ch,0x86
  41df75:	mov    ebx,0x9d1001a8
  41df7a:	nop
  41df7b:	loopne 0x41dfdf
  41df7d:	add    eax,0xfb4de418
  41df82:	fdiv   st(0),st
  41df84:	and    al,0x55
  41df86:	adc    eax,0x96719dfa
  41df8b:	push   edx
  41df8c:	push   esp
  41df8d:	mov    ss,WORD PTR [ebx+0x776464e9]
  41df93:	dec    ebp
  41df94:	inc    eax
  41df95:	neg    DWORD PTR [edx+edi*1]
  41df98:	fiadd  DWORD PTR [edx-0x4e]
  41df9b:	pop    ebx
  41df9c:	xor    ecx,DWORD PTR [edi-0x7079696a]
  41dfa2:	lds    ebp,FWORD PTR [eax+ebp*2-0x2f]
  41dfa6:	mov    ch,0x40
  41dfa8:	mov    esp,DWORD PTR [eax-0x4e]
  41dfab:	xor    esi,esi
  41dfad:	fist   DWORD PTR [ebx-0x37ac4f1d]
  41dfb3:	dec    ebp
  41dfb4:	stos   BYTE PTR es:[edi],al
  41dfb5:	adc    ebp,edi
  41dfb7:	(bad)  
  41dfb9:	imul   edx,DWORD PTR [edx],0x45
  41dfbc:	sbb    edi,DWORD PTR [edi+0x4a546d51]
  41dfc2:	fadd   DWORD PTR [ebx+0x78aac03d]
  41dfc8:	pop    ds
  41dfc9:	dec    edi
  41dfca:	cld    
  41dfcb:	dec    edi
  41dfcc:	sub    bl,BYTE PTR [ebp+0x52]
  41dfcf:	and    DWORD PTR [edi-0x35fbf70b],ebx
  41dfd5:	xchg   edx,eax
  41dfd6:	repz sbb ah,BYTE PTR ds:[ecx+0x77]
  41dfdb:	mov    gs,WORD PTR [ebp-0x76b2be54]
  41dfe1:	adc    ah,BYTE PTR [eax-0x63b1dcb5]
  41dfe7:	push   ds
  41dfe8:	pcmpeqd mm3,mm4
  41dfeb:	mov    ah,0x7e
  41dfed:	sub    bh,BYTE PTR [edx+0x696e7234]
  41dff3:	mov    ebp,DWORD PTR [ebx+0x75]
  41dff6:	xchg   BYTE PTR [eax+0x440b8bd8],bl
  41dffc:	nop
  41dffd:	test   DWORD PTR [ebx],esp
  41dfff:	stos   BYTE PTR es:[edi],al
  41e000:	mov    esp,0x69c7955a
  41e005:	je     0x41df8d
  41e007:	xor    eax,0x4d62fbd1
  41e00c:	xchg   ebx,eax
  41e00d:	inc    esp
  41e00e:	push   ds
  41e00f:	popa   
  41e010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e011:	xchg   edi,esp
  41e013:	xchg   ecx,eax
  41e014:	fcomp  DWORD PTR [ebp-0x1e7596c7]
  41e01a:	sbb    BYTE PTR [ecx-0xe6b2350],0x85
  41e021:	inc    esp
  41e022:	out    0x12,eax
  41e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e025:	and    esp,0x1d
  41e028:	xchg   ecx,eax
  41e029:	xor    edi,DWORD PTR [esi-0x5a]
  41e02c:	dec    edx
  41e02d:	imul   ecx,esp,0xffffffa2
  41e030:	xor    BYTE PTR [esi-0x2a],ah
  41e033:	cmp    DWORD PTR [esi-0xdd57e5d],0xffffffb6
  41e03a:	aad    0xe9
  41e03c:	jg     0x41e0a3
  41e03e:	lahf   
  41e03f:	test   ebx,ebp
  41e041:	aas    
  41e042:	mov    ecx,0x731e7aad
  41e047:	or     DWORD PTR [ecx+0x73f1c56e],esi
  41e04d:	outs   dx,BYTE PTR ds:[esi]
  41e04e:	jg     0x41e030
  41e050:	mov    edx,0x77f7a57d
  41e055:	xchg   ecx,eax
  41e056:	stos   BYTE PTR es:[edi],al
  41e057:	inc    ecx
  41e058:	call   0x3a7a:0x4809ad25
  41e05f:	pop    edi
  41e060:	mov    ebx,0xa1691495
  41e065:	not    DWORD PTR fs:[ecx]
  41e068:	jl     0x41e085
  41e06a:	nop
  41e06b:	sbb    cl,BYTE PTR [edi+ecx*2]
  41e06e:	push   ebx
  41e06f:	or     al,0x9c
  41e071:	add    cl,BYTE PTR [edx+0x72]
  41e074:	xor    DWORD PTR [esi-0x69],ebx
  41e077:	mul    BYTE PTR [edi+edx*1+0x6]
  41e07b:	out    dx,al
  41e07c:	stos   DWORD PTR es:[edi],eax
  41e07d:	jno    0x41e021
  41e07f:	es mov eax,0xbf3f1b8a
  41e085:	ds pop eax
  41e087:	push   esp
  41e088:	xor    edi,DWORD PTR [esi]
  41e08a:	(bad)  
  41e08c:	aam    0xfd
  41e08e:	outs   dx,DWORD PTR ds:[esi]
  41e08f:	xor    bh,BYTE PTR [edx-0x4c772cc9]
  41e095:	mov    ds:0x15c4bb9c,al
  41e09a:	inc    ecx
  41e09b:	fs mov ebp,0x720da0fd
  41e0a1:	test   BYTE PTR [ebp-0x627f94c8],cl
  41e0a7:	iret   
  41e0a8:	rol    BYTE PTR [ebp-0x60],1
  41e0ab:	pop    ebp
  41e0ac:	adc    BYTE PTR [esi-0x7e70b96a],0x2
  41e0b3:	test   edi,edx
  41e0b5:	mov    al,ds:0x5b161724
  41e0ba:	and    eax,0xf11071d3
  41e0bf:	hlt    
  41e0c0:	xchg   ebp,eax
  41e0c1:	adc    al,0x62
  41e0c3:	aam    0x96
  41e0c5:	cmp    al,0xaa
  41e0c7:	adc    DWORD PTR [ebx-0x2],edi
  41e0ca:	and    ebp,esp
  41e0cc:	call   0x798f:0x2b576fc0
  41e0d3:	hlt    
  41e0d4:	or     cl,BYTE PTR [esi+0x1955d636]
  41e0da:	sub    ch,BYTE PTR [ebp-0x8]
  41e0dd:	std    
  41e0de:	imul   ebx,DWORD PTR [ebx+0x75],0xffffffe5
  41e0e2:	stos   BYTE PTR es:[edi],al
  41e0e3:	outs   dx,DWORD PTR ds:[esi]
  41e0e4:	inc    edx
  41e0e5:	cmp    ch,bh
  41e0e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0e8:	cmp    DWORD PTR [edi],edi
  41e0ea:	stos   BYTE PTR es:[edi],al
  41e0eb:	dec    esp
  41e0ec:	fistp  DWORD PTR [edx+0x49f5f3ed]
  41e0f2:	jnp    0x41e16d
  41e0f4:	xor    eax,0xb1853ee5
  41e0f9:	jo     0x41e11d
  41e0fb:	ror    DWORD PTR [edx],0xfe
  41e0fe:	stos   BYTE PTR es:[edi],al
  41e0ff:	ficom  WORD PTR [ecx]
  41e101:	jp     0x41e0f3
  41e103:	mov    dl,0x93
  41e106:	pop    ss
  41e107:	cwde   
  41e108:	or     al,0x82
  41e10a:	aam    0x90
  41e10c:	(bad)  
  41e10e:	fnstcw WORD PTR [esi+edx*1+0x1203298e]
  41e115:	add    edx,edx
  41e117:	sub    al,0x68
  41e119:	dec    ecx
  41e11a:	mov    esp,0x9f69f37a
  41e11f:	js     0x41e17b
  41e121:	adc    ebp,DWORD PTR [esi]
  41e123:	inc    ebx
  41e124:	sub    DWORD PTR [edx],edi
  41e126:	mov    edx,0x9090974f
  41e12b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e12c:	pop    eax
  41e12d:	sbb    ch,BYTE PTR [ecx+eiz*8]
  41e130:	lods   al,BYTE PTR ds:[esi]
  41e131:	mov    DWORD PTR [ebp-0x24c5fd49],edx
  41e137:	adc    eax,DWORD PTR ds:[esi]
  41e13a:	xchg   ebp,eax
  41e13b:	add    al,BYTE PTR [ebx+0x50]
  41e13e:	or     al,0xea
  41e140:	pop    ecx
  41e141:	(bad)  
  41e142:	jno    0x41e0c5
  41e144:	mov    WORD PTR [esi-0x7a],es
  41e147:	leave  
  41e148:	mov    al,ds:0x49d4aa65
  41e14d:	cmp    bl,BYTE PTR [edi+0x7b]
  41e150:	inc    edx
  41e151:	xchg   BYTE PTR [esp+eax*2],ch
  41e154:	jmp    0xc826:0xab3b270f
  41e15b:	xor    ebp,esp
  41e15d:	popf   
  41e15e:	xor    ebx,edx
  41e160:	les    esi,FWORD PTR [edx]
  41e162:	repz cwde 
  41e164:	sub    BYTE PTR [esi+0x37559eac],dh
  41e16a:	add    edi,DWORD PTR [edx-0x7a0fca7b]
  41e170:	and    ch,BYTE PTR [eax]
  41e172:	out    dx,al
  41e173:	test   esi,edx
  41e175:	push   ds
  41e176:	pop    eax
  41e177:	es ror ebx,1
  41e17a:	in     eax,dx
  41e17b:	repz push esp
  41e17d:	out    dx,eax
  41e17e:	cwde   
  41e17f:	cmp    bl,BYTE PTR [esi+0x0]
  41e182:	aas    
  41e183:	jmp    0x41e163
  41e185:	mov    ah,bl
  41e187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e188:	add    DWORD PTR [edi-0x5a],ecx
  41e18b:	inc    esi
  41e18c:	inc    DWORD PTR [eax]
  41e18e:	xchg   BYTE PTR [eax+0x4d435dc0],al
  41e194:	pop    esp
  41e195:	push   esp
  41e196:	xchg   esp,eax
  41e197:	loopne 0x41e1c0
  41e199:	retf   
  41e19a:	sub    ah,BYTE PTR [ebx]
  41e19c:	jo     0x41e133
  41e19e:	fidivr DWORD PTR [ebx+ebx*4]
  41e1a1:	int    0xf4
  41e1a3:	repz sbb ebx,DWORD PTR [eax+0x25]
  41e1a7:	cmp    ebp,DWORD PTR [edx]
  41e1a9:	sub    al,0x5c
  41e1ab:	adc    eax,0x49124774
  41e1b0:	or     BYTE PTR [ecx],dl
  41e1b2:	fld    DWORD PTR [ebp+0x5b69e437]
  41e1b8:	fisttp QWORD PTR [ebp+0x16]
  41e1bb:	mov    BYTE PTR [eax-0x20fb18f],dh
  41e1c1:	in     eax,dx
  41e1c2:	and    ecx,DWORD PTR [esi+0x674efe0]
  41e1c8:	adc    dl,bl
  41e1ca:	adc    edx,DWORD PTR [ecx+ebx*4]
  41e1cd:	and    DWORD PTR [edx],edi
  41e1cf:	xchg   ebp,eax
  41e1d0:	xor    dh,BYTE PTR [ecx]
  41e1d2:	cdq    
  41e1d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d4:	sbb    eax,0xab25f123
  41e1d9:	rcl    BYTE PTR [eax+0x19],1
  41e1dc:	mov    ch,0x33
  41e1de:	sbb    BYTE PTR [ebx+0xafd5884],dl
  41e1e4:	mov    ds:0xcf04e416,eax
  41e1e9:	aaa    
  41e1ea:	mov    ss,WORD PTR [eax+ecx*8]
  41e1ed:	(bad)  [ebx]
  41e1ef:	retf   0x51f2
  41e1f2:	mov    ebx,DWORD PTR [ecx]
  41e1f4:	mov    bh,0x1
  41e1f6:	idiv   DWORD PTR [ebx-0x2e7889cb]
  41e1fc:	(bad)  
  41e1fd:	repnz test BYTE PTR [edx+eax*1-0x4c45551e],bl
  41e205:	cmp    BYTE PTR [eax],bh
  41e207:	mov    bl,BYTE PTR [ebx]
  41e209:	inc    BYTE PTR [esi]
  41e20b:	cmc    
  41e20c:	hlt    
  41e20d:	ins    DWORD PTR es:[edi],dx
  41e20e:	leave  
  41e20f:	rcr    DWORD PTR [ebp+ebx*8+0x697489e2],0xcc
  41e217:	pop    ebp
  41e218:	dec    ebp
  41e219:	pop    esi
  41e21a:	std    
  41e21b:	jle    0x41e286
  41e21d:	icebp  
  41e21e:	mov    al,ds:0xc25aa409
  41e223:	lea    eax,ds:0xeb0c136
  41e229:	aas    
  41e22a:	pop    eax
  41e22b:	ja     0x41e1df
  41e22d:	sub    ebp,DWORD PTR [ebx+0x2df16c7f]
  41e233:	push   ecx
  41e234:	sysexit 
  41e236:	les    esp,FWORD PTR [ebp-0x2c3dca05]
  41e23c:	push   ss
  41e23d:	xor    edi,eax
  41e23f:	inc    ecx
  41e240:	jo     0x41e1e6
  41e242:	test   ebp,ebp
  41e244:	popf   
  41e245:	xchg   bl,ch
  41e247:	xchg   BYTE PTR [ebx+0x4495b2c9],ah
  41e24d:	repnz sti 
  41e24f:	mov    eax,DWORD PTR [edx-0xc]
  41e252:	pop    ebx
  41e253:	test   DWORD PTR [ebp-0x54aa22cd],edx
  41e259:	cmp    BYTE PTR [ebp+0x21],cl
  41e25c:	jg     0x41e23e
  41e25e:	xchg   edi,eax
  41e25f:	inc    ebp
  41e260:	xor    al,0x92
  41e262:	adc    al,bl
  41e264:	test   edi,esp
  41e266:	ror    DWORD PTR [ebp-0x7103b47b],cl
  41e26c:	mov    ecx,0x4314252a
  41e271:	fisttp WORD PTR [esp+ebx*2-0x383d1e15]
  41e278:	(bad)  
  41e279:	inc    DWORD PTR [ebp+0x23]
  41e27c:	shr    DWORD PTR ds:0xdc1fad1a,0x7f
  41e283:	les    cx,DWORD PTR ds:0x472a34f5
  41e28a:	dec    edi
  41e28b:	aas    
  41e28c:	retf   0x75a
  41e28f:	dec    esi
  41e290:	cdq    
  41e291:	push   ecx
  41e292:	pushf  
  41e293:	mov    ebx,edi
  41e295:	fisttp WORD PTR [ecx-0x15]
  41e298:	xchg   ebx,eax
  41e299:	push   ss
  41e29a:	dec    esi
  41e29b:	lahf   
  41e29c:	jmp    0xa3b:0x50cbea64
  41e2a3:	jmp    0x9f6d37a3
  41e2a8:	push   ds
  41e2a9:	and    al,0x7
  41e2ab:	or     BYTE PTR [esp+esi*8],dl
  41e2ae:	sbb    eax,0x350548c
  41e2b3:	push   ebx
  41e2b4:	call   0x357f5ea
  41e2b9:	xor    eax,0xc989be51
  41e2be:	in     eax,0x59
  41e2c0:	mov    eax,ds:0x373c06f4
  41e2c5:	out    0xcb,eax
  41e2c7:	fadd   DWORD PTR [ebx+ebx*8]
  41e2ca:	jecxz  0x41e33f
  41e2cc:	pop    ecx
  41e2cd:	(bad)  
  41e2cf:	adc    eax,DWORD PTR [ecx+0x7]
  41e2d2:	sahf   
  41e2d3:	fs inc sp
  41e2d6:	fadd   QWORD PTR [edx-0x24]
  41e2d9:	outs   dx,BYTE PTR ds:[esi]
  41e2da:	(bad)  
  41e2dc:	int3   
  41e2dd:	mov    WORD PTR [ebx+0x26],ds
  41e2e0:	sar    esp,cl
  41e2e2:	pop    ebx
  41e2e3:	jl     0x41e298
  41e2e5:	mov    ah,0xd7
  41e2e7:	dec    ebp
  41e2e8:	add    al,ch
  41e2ea:	in     al,0xa4
  41e2ec:	xor    BYTE PTR [esi],0x97
  41e2ef:	lahf   
  41e2f0:	mov    edx,0xec8be6fb
  41e2f5:	adc    eax,0x9530f0bd
  41e2fa:	adc    eax,0x54a3c444
  41e2ff:	push   esi
  41e300:	popf   
  41e301:	retf   0xfad2
  41e304:	mov    dh,0x79
  41e306:	(bad)  
  41e307:	jmp    0x7acf273a
  41e30c:	xchg   dh,bh
  41e30e:	jne    0x41e332
  41e310:	imul   edx,DWORD PTR [edx+ecx*1+0x6d244e8a],0x3f8bdf5f
  41e31b:	mov    ebx,DWORD PTR [eax+0x3c]
  41e31e:	lea    edi,[ebx+edi*8+0x78]
  41e322:	mov    edi,DWORD PTR [edi+eax*1]
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0x52f0de9
  41f721:	jp     0x41f708
  41f723:	and    DWORD PTR [esp+edi*2],0x7b9e1d7b
  41f72a:	jnp    0x41f75b
  41f72c:	xchg   cl,bl
  41f72e:	fimul  DWORD PTR [ecx+0x4b]
  41f731:	mov    edx,0x8d23cfbc
  41f736:	push   es
  41f737:	or     al,ch
  41f739:	loopne 0x41f6fe
  41f73b:	popa   
  41f73c:	sub    BYTE PTR [ebp-0x51c3fa53],dh
  41f742:	out    0x3e,eax
  41f744:	out    dx,eax
  41f745:	out    dx,eax
  41f746:	sub    BYTE PTR [ebp-0x1305427],0x15
  41f74d:	mov    ecx,0x4bb10fde
  41f752:	cwde   
  41f753:	xchg   cl,bl
  41f755:	ins    DWORD PTR es:[edi],dx
  41f756:	das    
  41f757:	cs test edx,0x405c6132
  41f75e:	stc    
  41f75f:	(bad)  
  41f760:	or     al,0x28
  41f762:	push   ds
  41f763:	lds    eax,FWORD PTR [ebp+0x106439ef]
  41f769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76a:	dec    ebx
  41f76b:	add    eax,0xa1a333da
  41f770:	sub    eax,0x3e13d9e3
  41f775:	add    eax,esp
  41f777:	mov    bh,0x78
  41f779:	add    DWORD PTR [eax+ebx*2],0xcdac5769
  41f780:	lahf   
  41f781:	lea    ebp,[esp+eax*8+0x57563c2e]
  41f788:	push   es
  41f789:	inc    ebx
  41f78a:	(bad)  
  41f78b:	outs   dx,BYTE PTR ds:[esi]
  41f78c:	push   ss
  41f78d:	push   edx
  41f78e:	adc    bh,dh
  41f790:	retf   0xa6f0
  41f793:	mov    dl,0x52
  41f795:	loopne 0x41f800
  41f797:	sbb    ch,dh
  41f799:	mov    al,ds:0xc5eb5e74
  41f79e:	push   ebx
  41f79f:	pop    ecx
  41f7a0:	in     al,0x54
  41f7a2:	idiv   DWORD PTR [esi-0x48]
  41f7a5:	nop
  41f7a6:	push   0xb85fbc41
  41f7ab:	dec    ebp
  41f7ac:	or     BYTE PTR [ebp+0x45],bl
  41f7af:	sbb    BYTE PTR [ecx+0x2b],0x53
  41f7b3:	and    BYTE PTR [esi-0x45],bl
  41f7b6:	rol    DWORD PTR [esi+0x7],0x15
  41f7ba:	sub    bh,0x18
  41f7bd:	std    
  41f7be:	dec    edi
  41f7bf:	cmp    al,0x90
  41f7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c2:	push   cs
  41f7c3:	jmp    0x41f81d
  41f7c5:	pushf  
  41f7c6:	fsubr  DWORD PTR [eax+0x79]
  41f7c9:	outs   dx,BYTE PTR ds:[esi]
  41f7ca:	pusha  
  41f7cb:	add    DWORD PTR [ecx+0x1d8778c6],edx
  41f7d1:	mov    al,ds:0x895c7eab
  41f7d6:	shl    DWORD PTR [eax+0x2f5fbdc8],1
  41f7dc:	out    dx,eax
  41f7dd:	pop    ebp
  41f7de:	xchg   edi,eax
  41f7df:	inc    edx
  41f7e0:	ret    0x870b
  41f7e3:	mov    ebx,0xa00dd87b
  41f7e8:	test   esi,esi
  41f7ea:	es jmp 0x3aa2:0xd5cfb98
  41f7f2:	dec    ecx
  41f7f3:	mov    edi,0x57cf58d7
  41f7f8:	mov    bl,0x7c
  41f7fa:	mov    bh,0x94
  41f7fc:	xchg   edx,eax
  41f7fd:	pop    gs
  41f7ff:	cmp    ah,BYTE PTR [ecx-0x68dc4011]
  41f805:	ss xchg edx,eax
  41f807:	loope  0x41f829
  41f809:	loop   0x41f7dd
  41f80b:	lock jmp 0x16ca456
  41f811:	pop    esi
  41f812:	xchg   ecx,eax
  41f813:	fist   WORD PTR [eax]
  41f815:	xor    esp,DWORD PTR [esi-0x19]
  41f818:	dec    BYTE PTR [ecx-0x20]
  41f81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f81c:	cmp    eax,0x96f85859
  41f821:	jp     0x41f83c
  41f823:	test   ch,0x35
  41f826:	and    ah,BYTE PTR [ecx+0x25]
  41f829:	or     cl,BYTE PTR [ebx-0x4]
  41f82c:	mov    dh,0xe5
  41f82e:	out    dx,eax
  41f82f:	xchg   edx,eax
  41f830:	jge    0x41f7d2
  41f832:	mov    DWORD PTR [eax+ebx*2-0x13],eax
  41f836:	jb     0x41f7b9
  41f838:	cmp    DWORD PTR [ecx],0x11
  41f83b:	dec    esp
  41f83c:	mov    al,BYTE PTR [ebx]
  41f83e:	retf   0x31be
  41f841:	or     eax,0x83e6ca0e
  41f846:	bound  ebx,QWORD PTR [ebx-0x4d]
  41f849:	jmp    0x122d:0x379085f
  41f850:	or     BYTE PTR [edx+ebx*8],dh
  41f853:	fist   WORD PTR [edx-0x5c]
  41f856:	nop
  41f857:	outs   dx,BYTE PTR ds:[esi]
  41f858:	int3   
  41f859:	icebp  
  41f85a:	jge    0x41f87b
  41f85c:	dec    ebx
  41f85d:	cli    
  41f85e:	into   
  41f85f:	jge    0x41f86e
  41f861:	add    cl,BYTE PTR [edx]
  41f863:	cmp    al,0x65
  41f865:	daa    
  41f866:	push   es
  41f867:	jae    0x41f7fa
  41f869:	push   esp
  41f86a:	bound  esp,QWORD PTR [eax]
  41f86c:	retf   0x6988
  41f86f:	nop
  41f870:	pop    ebp
  41f871:	in     eax,0x9d
  41f873:	stc    
  41f874:	ficom  WORD PTR [edx]
  41f876:	test   esp,ecx
  41f878:	mov    ch,0x82
  41f87a:	push   esp
  41f87b:	test   BYTE PTR [esi-0x368481aa],ch
  41f881:	std    
  41f882:	mov    cl,0x80
  41f884:	sbb    dl,BYTE PTR ds:0x5e41c0ef
  41f88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f88b:	xor    BYTE PTR [edi+0x52955ea2],ch
  41f891:	stc    
  41f892:	add    al,BYTE PTR [ebp-0x4d]
  41f895:	aad    0xc8
  41f897:	out    dx,eax
  41f898:	aas    
  41f899:	mov    bh,0x50
  41f89b:	fild   DWORD PTR [eax]
  41f89d:	mov    ds:0xaf0c2878,al
  41f8a2:	ror    dl,cl
  41f8a4:	ficomp DWORD PTR [esp+ecx*2+0x3e]
  41f8a8:	cmp    ebp,DWORD PTR [eax]
  41f8aa:	dec    esi
  41f8ab:	hlt    
  41f8ac:	and    DWORD PTR [esi-0x6d5495b0],ebx
  41f8b2:	push   es
  41f8b3:	imul   esp,DWORD PTR ds:0xd51837aa,0xffffffa1
  41f8ba:	jnp    0x41f852
  41f8bc:	xchg   esi,eax
  41f8bd:	jno    0x41f915
  41f8bf:	xor    BYTE PTR [ebp+0xe],al
  41f8c2:	out    dx,eax
  41f8c3:	test   al,0x3c
  41f8c5:	aaa    
  41f8c6:	icebp  
  41f8c7:	jae    0x41f929
  41f8c9:	sti    
  41f8ca:	shr    BYTE PTR [ecx-0x211a2f63],cl
  41f8d0:	mov    edi,0x880a401a
  41f8d5:	and    BYTE PTR [eax-0x274ed0ee],dh
  41f8db:	dec    ebp
  41f8dc:	and    eax,eax
  41f8de:	in     eax,dx
  41f8df:	sub    ecx,ebx
  41f8e1:	mov    al,0x7f
  41f8e3:	int3   
  41f8e4:	mov    ds:0x73b9bee3,al
  41f8e9:	adc    ch,BYTE PTR [ebp+0x3bb390a5]
  41f8ef:	mov    ds:0xfbeb87da,al
  41f8f4:	addr16 push ds
  41f8f6:	sbb    al,0x3f
  41f8f8:	pop    esi
  41f8f9:	xlat   BYTE PTR ds:[ebx]
  41f8fa:	mov    ds:0x16887f30,al
  41f8ff:	fist   WORD PTR [eax]
  41f901:	in     eax,0x29
  41f903:	and    al,0x5d
  41f905:	enter  0x2ad5,0x38
  41f909:	mov    BYTE PTR [edx+esi*4],dh
  41f90c:	mov    DWORD PTR ds:0xb48746c9,ecx
  41f912:	aas    
  41f913:	inc    esi
  41f914:	icebp  
  41f915:	mov    al,0xa6
  41f917:	hlt    
  41f918:	pop    edi
  41f919:	fwait
  41f91a:	cmc    
  41f91b:	lock (bad) 
  41f91d:	sti    
  41f91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f91f:	es mov al,0x62
  41f922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f923:	xlat   BYTE PTR ds:[ebx]
  41f924:	outs   dx,BYTE PTR ds:[esi]
  41f925:	retf   0xc2e2
  41f928:	pop    es
  41f929:	xchg   edi,eax
  41f92a:	in     eax,dx
  41f92b:	jecxz  0x41f946
  41f92d:	aas    
  41f92e:	adc    al,0x2e
  41f930:	adc    ecx,DWORD PTR [edx]
  41f932:	lods   eax,DWORD PTR ds:[esi]
  41f933:	xchg   edx,eax
  41f934:	jl     0x41f944
  41f936:	ror    BYTE PTR [ecx-0x5a2d1c8c],1
  41f93c:	pop    eax
  41f93d:	jecxz  0x41f8dc
  41f93f:	(bad)  
  41f940:	cmc    
  41f941:	fbld   TBYTE PTR [esi]
  41f943:	into   
  41f944:	fsubr  QWORD PTR [edx]
  41f946:	jnp    0x41f9b4
  41f948:	call   0xfee5:0x25d4bf54
  41f94f:	jnp    0x41f8d9
  41f951:	inc    ecx
  41f952:	mov    cl,0xb0
  41f954:	adc    eax,0x6b29e666
  41f959:	ja     0x41f9ae
  41f95b:	cs jge 0x41f8f9
  41f95e:	pushf  
  41f95f:	dec    eax
  41f960:	ror    BYTE PTR [eax-0x85dfd1e],cl
  41f966:	jmp    0x8c2d88d2
  41f96b:	in     eax,dx
  41f96c:	cs adc al,0xc6
  41f96f:	jmp    0xf7d576e
  41f974:	(bad)  
  41f975:	call   0x74ce:0xffbff899
  41f97c:	adc    BYTE PTR [ebp-0x6fcfa96f],al
  41f982:	xor    DWORD PTR [ebx-0x76],ebp
  41f985:	pop    esi
  41f986:	aam    0x39
  41f988:	jmp    0xccbc:0x568b54de
  41f98f:	jo     0x41f93d
  41f991:	loopne 0x41f9f2
  41f993:	shl    DWORD PTR [edi+0x62b4bb2e],1
  41f999:	jne    0x41f9a0
  41f99b:	out    0xdd,al
  41f99d:	jne    0x41fa1b
  41f99f:	leave  
  41f9a0:	jp     0x41f96c
  41f9a2:	and    ch,BYTE PTR [ebx+0x65f54a89]
  41f9a8:	sub    eax,0x80ef1c58
  41f9ad:	xor    dl,BYTE PTR [esi]
  41f9af:	fnstsw WORD PTR [edi+0x57778ae5]
  41f9b5:	into   
  41f9b6:	or     dl,ah
  41f9b8:	test   eax,0x4ebf56c1
  41f9bd:	adc    ebx,0xffffffd3
  41f9c0:	loop   0x41f990
  41f9c2:	inc    esp
  41f9c3:	pop    ebp
  41f9c4:	pop    esi
  41f9c5:	fwait
  41f9c6:	adc    dh,BYTE PTR [ebp+edi*4-0x4509e5f0]
  41f9cd:	dec    ebp
  41f9ce:	test   al,0xef
  41f9d0:	shr    ebp,cl
  41f9d2:	sbb    DWORD PTR [edi],ecx
  41f9d4:	lods   eax,DWORD PTR ds:[esi]
  41f9d5:	iret   
  41f9d6:	int3   
  41f9d7:	mov    dh,0x36
  41f9d9:	inc    eax
  41f9da:	pop    ds
  41f9db:	neg    ebx
  41f9dd:	mov    bl,BYTE PTR [edi-0x24]
  41f9e0:	jmp    0xd9eeb07e
  41f9e5:	dec    edi
  41f9e6:	inc    ebp
  41f9e7:	(bad)  
  41f9e8:	leave  
  41f9e9:	lock sbb bl,BYTE PTR [ebp+0x3df59bf9]
  41f9f0:	in     eax,0x79
  41f9f2:	sbb    eax,0xed3ecaf
  41f9f7:	pusha  
  41f9f8:	lea    ecx,[esi-0x5c355fed]
  41f9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ff:	xchg   DWORD PTR [edi],esp
  41fa01:	pop    es
  41fa02:	push   0x758e359b
  41fa07:	nop
  41fa08:	test   eax,0xbabbd34a
  41fa0d:	jo     0x41f9ef
  41fa0f:	sbb    eax,0x5d114571
  41fa14:	xchg   esp,eax
  41fa15:	stos   DWORD PTR es:[edi],eax
  41fa16:	ficomp WORD PTR [esi+0x18]
  41fa19:	pop    eax
  41fa1a:	data16 jge 0x41fa89
  41fa1d:	pop    ebx
  41fa1e:	loop   0x41fa47
  41fa20:	sbb    BYTE PTR [ecx+eax*8+0x12ecdf64],dh
  41fa27:	and    ch,BYTE PTR [edi*4-0x7d3a5538]
  41fa2e:	jecxz  0x41f9ea
  41fa30:	pusha  
  41fa31:	fld    TBYTE PTR [edx-0x8]
  41fa34:	(bad)  
  41fa35:	pop    edi
  41fa36:	test   al,0x82
  41fa38:	push   0x74
  41fa3a:	xchg   edi,eax
  41fa3b:	loope  0x41fa9a
  41fa3d:	(bad)  
  41fa3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa3f:	shr    DWORD PTR [ebx+0x11],0x86
  41fa43:	xor    eax,0x291d2e87
  41fa48:	repnz sub ebp,DWORD PTR [edi+0xf]
  41fa4c:	into   
  41fa4d:	xchg   esi,eax
  41fa4e:	rcr    DWORD PTR [edi],1
  41fa50:	mov    ecx,0x992e3453
  41fa55:	(bad)  
  41fa56:	jne    0x41fa90
  41fa58:	or     dl,BYTE PTR [edx-0x21]
  41fa5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa5c:	xor    ch,BYTE PTR [edx+0x44]
  41fa5f:	fimul  WORD PTR [ebx+0x5465489]
  41fa65:	add    eax,ebp
  41fa67:	and    al,0x6b
  41fa69:	mov    ebp,0x6f34e2b4
  41fa6e:	sbb    esp,DWORD PTR [ebx+0x43]
  41fa71:	push   es
  41fa72:	dec    esp
  41fa73:	mov    ebp,0x86104ffb
  41fa78:	inc    esi
  41fa79:	sbb    DWORD PTR [edi+0x6],ebp
  41fa7c:	mov    bl,0x10
  41fa7e:	cmp    DWORD PTR [ebx+0x3031b1ed],eax
  41fa84:	mov    bl,0xb
  41fa86:	inc    edx
  41fa87:	js     0x41fa4b
  41fa89:	cmp    eax,0x15def525
  41fa8e:	and    eax,0x598baa64
  41fa93:	xor    DWORD PTR [edx+0x3495ee2b],edx
  41fa99:	jecxz  0x41fae1
  41fa9b:	in     eax,dx
  41fa9c:	aaa    
  41fa9d:	dec    ebx
  41fa9e:	mov    ecx,0x7e1ffaf1
  41faa3:	push   esi
  41faa4:	lock fnstcw WORD PTR [esp+0x8]
  41faa9:	fdivr  st(1),st
  41faab:	pop    es
  41faac:	fstp   DWORD PTR [esi-0xb]
  41faaf:	call   0x1f4e:0xed6778c1
  41fab6:	push   0xde2114f1
  41fabb:	jae    0x41fac9
  41fabd:	jne    0x41fa4a
  41fabf:	adc    edi,0xffffffec
  41fac2:	or     dh,al
  41fac4:	dec    edi
  41fac5:	mov    esi,0xa30ab653
  41faca:	mov    al,ds:0xd639d407
  41facf:	loope  0x41fabb
  41fad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad2:	inc    edi
  41fad3:	scas   al,BYTE PTR es:[edi]
  41fad4:	mov    esp,0x687e04a9
  41fad9:	int    0xf6
  41fadb:	lds    esp,FWORD PTR [edx+0xe66adee]
  41fae1:	test   al,0x43
  41fae3:	daa    
  41fae4:	sub    edx,DWORD PTR [edx-0x3779ce49]
  41faea:	(bad)  
  41faeb:	mov    cl,0x53
  41faed:	clc    
  41faee:	or     BYTE PTR [ebp-0x4ac33c48],0xd2
  41faf5:	sub    esi,edi
  41faf7:	or     cl,0xdb
  41fafa:	inc    ecx
  41fafb:	ins    DWORD PTR es:[edi],dx
  41fafc:	push   0xffffffc7
  41fafe:	(bad)  
  41faff:	lock adc esi,DWORD PTR [ecx+0x4f9e1d36]
  41fb06:	push   edx
  41fb07:	push   ss
  41fb08:	in     al,0x4f
  41fb0a:	adc    eax,0xbf5492b3
  41fb0f:	nop
  41fb10:	fdivr  QWORD PTR [edx-0x5a]
  41fb13:	mov    edi,DWORD PTR [ebp-0x50fd02e3]
  41fb19:	xor    al,0xce
  41fb1b:	adc    al,0xe
  41fb1d:	add    DWORD PTR [ebx],0xfffffff8
  41fb20:	cli    
  41fb21:	test   DWORD PTR [edx],ebx
  41fb23:	cmp    al,BYTE PTR ds:0x64db8543
  41fb29:	in     al,0x64
  41fb2b:	jo     0x41fb12
  41fb2d:	jns    0x41fad6
  41fb2f:	xchg   DWORD PTR [esi-0x24f0fdef],ecx
  41fb35:	outs   dx,DWORD PTR ds:[esi]
  41fb36:	pop    esp
  41fb37:	pop    ds
  41fb38:	je     0x41facc
  41fb3a:	and    DWORD PTR [eax-0x28],edi
  41fb3d:	sbb    eax,0x848b741d
  41fb42:	mov    dh,0xca
  41fb44:	mov    edx,0x9041b68b
  41fb49:	stc    
  41fb4a:	in     eax,dx
  41fb4b:	(bad)  
  41fb4d:	mov    BYTE PTR [esp+ecx*2-0x11],ch
  41fb51:	out    dx,eax
  41fb52:	arpl   WORD PTR [ecx+0xa],di
  41fb55:	mov    cl,0x4f
  41fb57:	out    dx,eax
  41fb58:	push   0x653a2119
  41fb5d:	stc    
  41fb5e:	dec    ecx
  41fb5f:	xor    dl,0xa1
  41fb62:	not    BYTE PTR [edi]
  41fb64:	mov    WORD PTR [ecx-0x42],es
  41fb67:	(bad)  
  41fb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb69:	sub    bh,BYTE PTR [edi]
  41fb6b:	cmp    DWORD PTR [edx+0x5a],ebx
  41fb6e:	push   ds
  41fb6f:	mov    al,0x11
  41fb71:	mov    ebp,0xb0ade65e
  41fb76:	aas    
  41fb77:	rcr    BYTE PTR [edi+0x4291d776],cl
  41fb7d:	popa   
  41fb7e:	rcr    DWORD PTR [edi+0x6b],0xb8
  41fb82:	pop    es
  41fb83:	cmp    dl,bl
  41fb85:	xor    cl,BYTE PTR [edi-0x1fed56a2]
  41fb8b:	sti    
  41fb8c:	jp     0x41fb51
  41fb8e:	out    0xfc,eax
  41fb90:	in     eax,dx
  41fb91:	inc    ebx
  41fb92:	adc    cl,bl
  41fb94:	sti    
  41fb95:	imul   ebx,DWORD PTR [esi-0xd],0x5b
  41fb99:	or     bh,0x44
  41fb9c:	cli    
  41fb9d:	and    eax,0xad50137
  41fba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fba3:	mov    bl,0x6a
  41fba5:	out    0x1d,al
  41fba7:	xlat   BYTE PTR ds:[ebx]
  41fba8:	push   ds
  41fba9:	popf   
  41fbaa:	test   al,0xb7
  41fbac:	xchg   edi,eax
  41fbad:	jp     0x41fb55
  41fbaf:	(bad)  
  41fbb0:	pop    DWORD PTR [esi-0x7c]
  41fbb3:	and    eax,0xc7bf4183
  41fbb8:	add    al,0xce
  41fbba:	mov    edx,DWORD PTR [ebx-0x6935086]
  41fbc0:	push   cs
  41fbc1:	(bad)  
  41fbc2:	dec    ebp
  41fbc3:	jb     0x41fc2b
  41fbc5:	rcl    DWORD PTR [esi],0xfe
  41fbc8:	out    0xbf,al
  41fbca:	repz xchg ebx,eax
  41fbcc:	sti    
  41fbcd:	stos   BYTE PTR es:[edi],al
  41fbce:	mov    al,0xcc
  41fbd0:	std    
  41fbd1:	add    DWORD PTR [edx+ebx*8],ebp
  41fbd4:	pop    ebp
  41fbd5:	in     al,0x1
  41fbd7:	frstor [edx+0x7b27a259]
  41fbdd:	pop    ecx
  41fbde:	(bad)  
  41fbdf:	idiv   BYTE PTR [esi-0xe]
  41fbe2:	mov    al,0x58
  41fbe4:	add    eax,0xf375ac1d
  41fbe9:	outs   dx,BYTE PTR ds:[esi]
  41fbea:	stos   DWORD PTR es:[edi],eax
  41fbeb:	popf   
  41fbec:	call   0x7fcb:0x5ef58016
  41fbf3:	mov    edx,0xc845115a
  41fbf9:	pop    ecx
  41fbfa:	addr16 neg bh
  41fbfd:	mov    al,ds:0x172c6798
  41fc02:	test   al,dl
  41fc04:	sbb    DWORD PTR [esi+ebx*2-0x2f],esp
  41fc08:	adc    ebx,DWORD PTR [ebx]
  41fc0a:	data16 jns 0x41fc6d
  41fc0d:	sar    eax,0x58
  41fc10:	in     eax,dx
  41fc11:	cs fwait
  41fc13:	(bad)  
  41fc14:	imul   BYTE PTR [esi+0x75]
  41fc17:	jae    0x41fbd5
  41fc19:	push   cs
  41fc1a:	inc    ebp
  41fc1b:	jo     0x41fbd5
  41fc1d:	adc    al,BYTE PTR [edx]
  41fc1f:	xor    edi,DWORD PTR [ecx-0x38]
  41fc22:	jbe    0x41fc99
  41fc24:	xor    BYTE PTR [ecx+0x55236904],dl
  41fc2a:	popa   
  41fc2b:	retf   0xcc9e
  41fc2e:	mov    ah,0xb0
  41fc30:	cwde   
  41fc31:	cmp    dl,0xfb
  41fc34:	cdq    
  41fc35:	dec    esi
  41fc36:	cmp    bh,BYTE PTR [ecx+0x4902710b]
  41fc3c:	rcl    cl,1
  41fc3e:	dec    ebx
  41fc3f:	scas   eax,DWORD PTR es:[edi]
  41fc40:	sub    cl,ah
  41fc42:	pop    esp
  41fc43:	adc    ebp,eax
  41fc45:	dec    edi
  41fc46:	fisttp WORD PTR [edx]
  41fc48:	test   DWORD PTR [eax-0x37],0x14975727
  41fc4f:	fwait
  41fc50:	mul    ebx
  41fc52:	in     al,0x3f
  41fc54:	aaa    
  41fc55:	pop    edx
  41fc56:	scas   eax,DWORD PTR es:[edi]
  41fc57:	lods   al,BYTE PTR ds:[esi]
  41fc58:	ds loop 0x41fc89
  41fc5b:	sub    BYTE PTR [eax+0x74ec500f],0xcc
  41fc62:	and    al,0xd3
  41fc64:	outs   dx,DWORD PTR ds:[esi]
  41fc65:	sbb    dh,BYTE PTR [edi-0x67]
  41fc68:	sbb    al,0x45
  41fc6a:	test   BYTE PTR [edx-0x3b],cl
  41fc6d:	mov    ebx,0x5b4a51c3
  41fc72:	push   es
  41fc73:	jmp    0x740d015d
  41fc78:	into   
  41fc79:	aam    0x7b
  41fc7b:	push   0x641d7914
  41fc80:	cs mov cl,0x9f
  41fc83:	add    DWORD PTR [ebp+0x4eb6c8a0],0xb612c158
  41fc8d:	call   0x4d6cfaaa
  41fc92:	or     al,0x95
  41fc94:	(bad)  
  41fc95:	fdivr  QWORD PTR [ebx+0x6833bc16]
  41fc9b:	fist   WORD PTR [edx+0x23323f80]
  41fca1:	add    esp,eax
  41fca3:	stc    
  41fca4:	loope  0x41fcd1
  41fca6:	test   BYTE PTR [eax+0x510d1193],cl
  41fcac:	sbb    eax,0x506832ab
  41fcb1:	(bad)  
  41fcb2:	mov    dl,0x69
  41fcb4:	mov    ebx,0xabeb234
  41fcb9:	sub    DWORD PTR [ecx+0x334b7cb7],ebp
  41fcbf:	cli    
  41fcc0:	(bad)  
  41fcc1:	std    
  41fcc2:	add    al,0x9
  41fcc4:	popa   
  41fcc5:	mov    ch,0x97
  41fcc7:	cmc    
  41fcc8:	enter  0x73f7,0x6a
  41fccc:	aad    0x7e
  41fcce:	or     ecx,esi
  41fcd0:	mov    al,ds:0xf6da629f
  41fcd5:	xchg   esp,eax
  41fcd6:	lahf   
  41fcd7:	in     al,0x5c
  41fcd9:	shl    BYTE PTR [esi-0x80],cl
  41fcdc:	add    eax,0x3d2bc4b8
  41fce1:	daa    
  41fce2:	retf   0x9b21
  41fce5:	cld    
  41fce6:	or     eax,0xbf3f0c3a
  41fceb:	in     al,dx
  41fcec:	ds xchg ebx,eax
  41fcee:	popf   
  41fcef:	pushf  
  41fcf0:	cmp    ebp,DWORD PTR [eax-0x22]
  41fcf3:	clc    
  41fcf4:	(bad)  
  41fcf5:	dec    esi
  41fcf6:	add    BYTE PTR [edx],cl
  41fcf8:	pop    esi
  41fcf9:	fist   DWORD PTR [edx]
  41fcfb:	push   ecx
  41fcfc:	xchg   DWORD PTR [ebx],ecx
  41fcfe:	sbb    eax,0xfd052f33
  41fd03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd04:	stc    
  41fd05:	mov    ds:0xc47a89b4,al
  41fd0a:	aad    0xaa
  41fd0c:	loope  0x41fd2a
  41fd0e:	jmp    0x41fcc0
  41fd10:	dec    ebx
  41fd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd12:	and    ebx,DWORD PTR [ecx-0x53]
  41fd15:	enter  0x9fa,0x2a
  41fd19:	cmp    eax,0xb41e0310
  41fd1e:	sub    al,0x9a
  41fd20:	inc    eax
  41fd21:	pmuludq mm5,QWORD PTR [ebx+0x68]
  41fd25:	sub    ch,al
  41fd27:	imul   ebp,DWORD PTR [ebx+0x8],0x4ce7f913
  41fd2e:	in     eax,dx
  41fd2f:	adc    bl,al
  41fd31:	pop    esp
  41fd32:	xlat   BYTE PTR ds:[ebx]
  41fd33:	retf   0x948c
  41fd36:	or     bl,BYTE PTR [ebp+0x7d]
  41fd39:	push   ds
  41fd3a:	mov    WORD PTR ds:0xacd6c36,ds
  41fd40:	xor    DWORD PTR [esi-0x6d],0xae26167f
  41fd47:	sbb    ebx,DWORD PTR [ebx]
  41fd49:	dec    esp
  41fd4a:	ror    DWORD PTR [edx-0x10],cl
  41fd4d:	fld    TBYTE PTR [ecx-0xc18022e]
  41fd53:	xchg   esp,eax
  41fd54:	jnp    0x41fd5b
  41fd56:	xlat   BYTE PTR ds:[ebx]
  41fd57:	jae    0x41fd28
  41fd59:	mov    WORD PTR [esi+eax*1+0x356a1b18],gs
  41fd60:	nop
  41fd61:	push   cs
  41fd62:	sbb    esp,DWORD PTR [ecx+0x63]
  41fd65:	adc    DWORD PTR [edi-0x61b17790],edx
  41fd6b:	int3   
  41fd6c:	ins    DWORD PTR es:[edi],dx
  41fd6d:	stos   DWORD PTR es:[edi],eax
  41fd6e:	add    edx,DWORD PTR [esi-0x2fd15564]
  41fd74:	(bad)
  41fd77:	fwait
  41fd78:	jmp    0x41fd59
  41fd7a:	push   ebp
  41fd7b:	push   edi
  41fd7c:	nop    edi
  41fd7f:	mov    eax,ds:0x34156ee
  41fd84:	and    al,0x17
  41fd86:	mov    ecx,ds
  41fd88:	rcl    BYTE PTR [esi+eax*1],cl
  41fd8b:	(bad)  
  41fd8d:	cdq    
  41fd8e:	push   edx
  41fd8f:	iret   
  41fd90:	and    al,0x95
  41fd92:	push   esi
  41fd93:	mov    cl,al
  41fd95:	sbb    ecx,DWORD PTR [edx]
  41fd97:	bound  ebp,QWORD PTR [esi]
  41fd99:	imul   ecx,DWORD PTR [edi+eiz*8+0x61],0x1e
  41fd9e:	outs   dx,DWORD PTR ds:[esi]
  41fd9f:	sbb    bl,BYTE PTR [eax+ebx*2]
  41fda2:	daa    
  41fda3:	je     0x41fdde
  41fda5:	dec    ecx
  41fda6:	bound  edi,QWORD PTR [esi]
  41fda8:	or     eax,0x2796b1fe
  41fdad:	mov    al,ds:0xcbe41100
  41fdb2:	fadd   DWORD PTR ss:[eax]
  41fdb5:	mov    ch,0x80
  41fdb7:	jno    0x41fd8c
  41fdb9:	jle    0x41fd3f
  41fdbb:	aaa    
  41fdbc:	scas   eax,DWORD PTR es:[edi]
  41fdbd:	sbb    al,0xc4
  41fdbf:	stos   BYTE PTR es:[edi],al
  41fdc0:	mov    ecx,0xb1f4b1ae
  41fdc5:	push   0x30
  41fdc7:	ins    DWORD PTR es:[edi],dx
  41fdc8:	xabort 0xe6
  41fdcb:	cmp    edi,esi
  41fdcd:	aaa    
  41fdce:	sub    eax,ebx
  41fdd0:	leave  
  41fdd1:	nop
  41fdd2:	sub    esi,DWORD PTR [ebp-0x74]
  41fdd5:	cmp    BYTE PTR [eax-0x9],ah
  41fdd8:	sbb    DWORD PTR [esi+0x640f1b5a],edx
  41fdde:	ror    BYTE PTR [edx-0x6c],cl
  41fde1:	push   ds
  41fde2:	(bad)  
  41fde3:	out    dx,eax
  41fde4:	call   0x7517:0x485955f7
  41fdeb:	pushf  
  41fdec:	pop    eax
  41fded:	cmc    
  41fdee:	adc    eax,0x959d66d3
  41fdf3:	aad    0xc3
  41fdf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdf6:	mov    eax,ds:0xf057a1ff
  41fdfb:	fistp  DWORD PTR [eax-0x5d1b36b2]
  41fe01:	adc    al,0x88
  41fe03:	dec    ebx
  41fe04:	jbe    0x41fd86
  41fe06:	lahf   
  41fe07:	leave  
  41fe08:	xchg   ecx,eax
  41fe09:	sahf   
  41fe0a:	aaa    
  41fe0b:	inc    ecx
  41fe0c:	stc    
  41fe0d:	push   es
  41fe0e:	xchg   esp,edi
  41fe10:	push   ds
  41fe11:	dec    ebp
  41fe12:	inc    edi
  41fe13:	lea    edx,[ecx+0x3d]
  41fe16:	inc    esi
  41fe17:	inc    esi
  41fe18:	repnz mov ds,esp
  41fe1b:	dec    ebx
  41fe1c:	mov    ah,0x43
  41fe1e:	dec    edx
  41fe1f:	xchg   BYTE PTR [ecx+0x27],ah
  41fe22:	ja     0x41fdab
  41fe24:	cmc    
  41fe25:	pop    ecx
  41fe26:	jo     0x41fe39
  41fe28:	nop
  41fe29:	or     DWORD PTR [edi],eax
  41fe2b:	inc    ecx
  41fe2c:	sub    BYTE PTR [ebx],dh
  41fe2e:	inc    ecx
  41fe2f:	and    dh,BYTE PTR [edi+eiz*8-0x1db2e846]
  41fe36:	xchg   ebx,eax
  41fe37:	jp     0x41fe23
  41fe39:	mov    al,0xae
  41fe3b:	mov    bl,0x37
  41fe3d:	fnsave [ebp-0x7e949924]
  41fe43:	xor    bh,dh
  41fe45:	ds xchg edx,eax
  41fe47:	in     eax,0xf4
  41fe49:	nop
  41fe4a:	jbe    0x41fe5b
  41fe4c:	xor    al,BYTE PTR [ecx-0x6b]
  41fe4f:	pop    ebx
  41fe50:	retf   
  41fe51:	pop    ss
  41fe52:	test   BYTE PTR [eax],ch
  41fe54:	jl     0x41fe0f
  41fe56:	dec    edx
  41fe57:	cs jno 0x41fe3d
  41fe5a:	mov    ah,0x7a
  41fe5c:	aam    0x78
  41fe5e:	sbb    al,0x26
  41fe60:	push   edx
  41fe61:	out    dx,eax
  41fe62:	shr    DWORD PTR [eax-0x56],cl
  41fe65:	push   edx
  41fe66:	mov    dh,0xb6
  41fe68:	and    edi,ebp
  41fe6a:	fmul   QWORD PTR [edi]
  41fe6c:	jecxz  0x41fe71
  41fe6e:	stos   BYTE PTR es:[edi],al
  41fe6f:	int3   
  41fe70:	sahf   
  41fe71:	cmp    eax,0xfacd223a
  41fe76:	cmp    edx,DWORD PTR [esi-0x54]
  41fe79:	retf   0x1906
  41fe7c:	ror    BYTE PTR [ecx],cl
  41fe7e:	test   eax,0x78502281
  41fe83:	ret    0x7152
  41fe86:	adc    eax,0xa3457715
  41fe8b:	ins    BYTE PTR es:[edi],dx
  41fe8c:	jmp    0xaabc:0xffa1c661
  41fe93:	dec    edx
  41fe94:	dec    ecx
  41fe95:	mov    ebp,0xae13952d
  41fe9a:	jnp    0x41fe39
  41fe9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9d:	popf   
  41fe9e:	imul   ecx,DWORD PTR [esi],0x4b988c82
  41fea4:	inc    eax
  41fea5:	or     eax,0x37a139e
  41feaa:	clc    
  41feab:	ja     0x41fea0
  41fead:	cmp    bl,0x7a
  41feb0:	push   edx
  41feb1:	mov    BYTE PTR [edi],al
  41feb3:	pop    ebx
  41feb4:	add    dl,BYTE PTR ds:0x91345f0e
  41feba:	push   0xffffffae
  41febc:	and    BYTE PTR [ebx],dl
  41febe:	or     DWORD PTR [edi-0x31c02f0c],0x8878548e
  41fec8:	clc    
  41fec9:	mov    dh,0x5e
  41fecb:	dec    edx
  41fecc:	or     BYTE PTR [eax],bh
  41fece:	rol    DWORD PTR [edx-0x5ef92ece],1
  41fed4:	pop    esi
  41fed5:	sbb    bh,BYTE PTR [ebp+0x613d5cf3]
  41fedb:	mov    bl,BYTE PTR [esi]
  41fedd:	sub    al,BYTE PTR [ecx+0x587a286]
  41fee3:	push   cs
  41fee4:	xor    eax,0x79801692
  41fee9:	ins    DWORD PTR es:[edi],dx
  41feea:	xor    DWORD PTR [ebx-0x50],edx
  41feed:	mov    es,WORD PTR [esi+0x2e593cb2]
  41fef3:	loop   0x41fee5
  41fef5:	mov    dl,0x92
  41fef7:	adc    al,0x9c
  41fef9:	jecxz  0x41fee5
  41fefb:	int    0x2d
  41fefd:	lods   al,BYTE PTR ds:[esi]
  41fefe:	js     0x41fe8e
  41ff00:	push   esi
  41ff01:	push   eax
  41ff02:	repnz pop ebp
  41ff04:	dec    ebp
  41ff05:	and    ebp,esp
  41ff07:	in     eax,dx
  41ff08:	daa    
  41ff09:	sbb    al,BYTE PTR [ebx]
  41ff0b:	aam    0x8c
  41ff0d:	adc    eax,DWORD PTR [ebp+0x3d]
  41ff10:	or     edx,esi
  41ff12:	and    al,0x62
  41ff14:	mov    esp,DWORD PTR ds:0xc976dff3
  41ff1a:	(bad)  [edi+0x154b3d85]
  41ff20:	or     al,0x2
  41ff22:	inc    ebx
  41ff23:	pushf  
  41ff24:	push   esp
  41ff25:	repz dec ebx
  41ff27:	repz retf 0x37c5
  41ff2b:	sbb    DWORD PTR [esi+0x35],edi
  41ff2e:	out    dx,eax
  41ff2f:	cmp    al,BYTE PTR [ebx+0x3a58361a]
  41ff35:	enter  0x15e9,0x1d
  41ff39:	dec    ebp
  41ff3a:	fwait
  41ff3b:	push   esp
  41ff3c:	ins    DWORD PTR es:[edi],dx
  41ff3d:	dec    ebx
  41ff3e:	aaa    
  41ff3f:	aam    0xd0
  41ff41:	(bad)  [ebp-0x555a913a]
  41ff47:	pop    ds
  41ff48:	mul    BYTE PTR [edx-0x6c]
  41ff4b:	fbld   TBYTE PTR [ecx+edi*1-0x60]
  41ff4f:	xor    DWORD PTR [ecx-0x77e3b106],0x6493e007
  41ff59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff5a:	ror    ah,cl
  41ff5c:	aam    0xf7
  41ff5e:	les    ecx,FWORD PTR [ecx+0x624a996c]
  41ff64:	lds    esi,FWORD PTR [edx]
  41ff66:	adc    al,BYTE PTR [ebp-0x6b26ea42]
  41ff6c:	dec    ecx
  41ff6d:	lods   al,BYTE PTR ds:[esi]
  41ff6e:	add    BYTE PTR [ecx+0x58],bh
  41ff71:	fcom   QWORD PTR [ecx+0x14]
  41ff74:	call   0x3f1b:0x28822104
  41ff7b:	adc    al,0x93
  41ff7d:	scas   al,BYTE PTR es:[edi]
  41ff7e:	pop    ss
  41ff7f:	mov    esi,0xdfc0bbcd
  41ff84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff85:	in     al,0x10
  41ff87:	mov    ebx,0xf4aa253d
  41ff8c:	mov    edi,eax
  41ff8e:	dec    ebx
  41ff8f:	push   edx
  41ff90:	jne    0x41ff64
  41ff92:	jbe    0x41ff83
  41ff94:	cs (bad) 
  41ff96:	loope  0x41ff9c
  41ff98:	mov    bl,0x32
  41ff9a:	cld    
  41ff9b:	jb     0x41ff8f
  41ff9d:	add    eax,0xfebeb4fa
  41ffa2:	adc    edx,DWORD PTR [edi]
  41ffa4:	or     DWORD PTR [ebp-0x65bbccb2],esi
  41ffaa:	xchg   edi,eax
  41ffac:	fisubr DWORD PTR [esi-0x19b7bc16]
  41ffb2:	mov    eax,?
  41ffb4:	fwait
  41ffb5:	lods   eax,DWORD PTR ds:[esi]
  41ffb6:	scas   eax,DWORD PTR es:[edi]
  41ffb7:	into   
  41ffb8:	gs cwde 
  41ffba:	and    eax,0x21380fec
  41ffbf:	or     ah,bh
  41ffc1:	repz mov al,ds:0x6b484e57
  41ffc7:	and    DWORD PTR [eax-0x22e0225b],edi
  41ffcd:	retf   0xa015
  41ffd0:	pop    ds
  41ffd1:	idiv   DWORD PTR [edx+0x61]
  41ffd4:	repz jb 0x41ffa4
  41ffd7:	retf   
  41ffd8:	sub    BYTE PTR [esp+edi*1],bh
  41ffdb:	push   ss
  41ffdc:	mov    cl,0x77
  41ffde:	adc    dl,ah
  41ffe0:	pop    edx
  41ffe1:	xlat   BYTE PTR ds:[ebx]
  41ffe2:	add    BYTE PTR [edi-0x75],cl
  41ffe5:	adc    eax,0x99535444
  41ffea:	mov    edx,0xd5dbc899
  41ffef:	dec    esi
  41fff0:	xchg   DWORD PTR [edx+ebx*4],eax
  41fff3:	jle    0x41fffe
  41fff5:	adc    DWORD PTR [ebp+edi*1-0x48],ecx
  41fff9:	daa    
  41fffa:	mov    cl,0x4e
  41fffc:	shr    ch,1
  41fffe:	and    BYTE PTR [eax-0x4f35230c],bl
  420004:	neg    BYTE PTR ds:0xad9054f
  42000a:	pop    edi
  42000b:	mov    edi,0x6208649d
  420010:	push   esi
  420011:	mov    ecx,0x4d37bd6d
  420016:	ins    DWORD PTR es:[edi],dx
  420017:	xor    eax,0xdecc791a
  42001c:	test   eax,edx
  42001e:	push   0x5f
  420020:	daa    
  420021:	sub    ch,BYTE PTR [ebx]
  420023:	lds    esp,FWORD PTR [eax]
  420025:	rol    DWORD PTR [esi],0x76
  420028:	add    DWORD PTR [eax+0x51],0xd0809eee
  42002f:	lods   eax,DWORD PTR ds:[esi]
  420030:	or     al,0x39
  420032:	int    0x9d
  420034:	retf   0x6040
  420037:	push   edx
  420038:	mov    ebx,edx
  42003a:	jbe    0x41fff2
  42003c:	fisttp QWORD PTR [esi]
  42003e:	xlat   BYTE PTR ds:[ebx]
  42003f:	loopne 0x41ffc1
  420041:	jle    0x420049
  420043:	rcl    BYTE PTR [ecx-0x71],1
  420046:	call   0xa16e939a
  42004b:	adc    esi,DWORD PTR [esi-0x50]
  42004e:	mov    esi,0xe9eba461
  420053:	int3   
  420054:	ficomp WORD PTR [ecx+eax*4+0x1e]
  420058:	or     al,0x4e
  42005a:	jno    0x420015
  42005c:	int    0x56
  42005e:	or     ecx,DWORD PTR [edx-0x602f8b6f]
  420064:	jecxz  0x42001a
  420066:	repnz or eax,0xc5d2ece6
  42006c:	pop    eax
  42006d:	jb     0x4200d1
  42006f:	les    edi,FWORD PTR [edi+0x7e]
  420072:	add    BYTE PTR [ebx],ch
  420074:	int    0xf5
  420076:	pushf  
  420077:	rcl    BYTE PTR [edi+0x49ef956],0xa8
  42007e:	jmp    0x27e72817
  420083:	sbb    DWORD PTR ds:0xc0e042d3,edi
  420089:	out    0xc5,al
  42008b:	sahf   
  42008c:	mov    ?,WORD PTR [ebp+0x1bcdb757]
  420092:	and    al,0x2c
  420094:	jg     0x42001b
  420096:	jl     0x420023
  420098:	pop    esp
  420099:	adc    eax,ecx
  42009b:	sbb    eax,0x78f44b2e
  4200a0:	push   cs
  4200a1:	mov    cl,0x37
  4200a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200a4:	and    eax,DWORD PTR [edx+0x7af9a808]
  4200aa:	jne    0x420059
  4200ac:	mov    esi,0x1c7e97e9
  4200b1:	dec    eax
  4200b2:	sbb    BYTE PTR [ebx-0x7d5791ff],al
  4200b8:	int3   
  4200b9:	xor    eax,esp
  4200bb:	iret   
  4200bc:	shl    DWORD PTR es:0xfc14244,0xaf
  4200c4:	cdq    
  4200c5:	into   
  4200c6:	sub    eax,0x60cad365
  4200cb:	and    cl,BYTE PTR [eax]
  4200cd:	xor    edx,0xfbf9f16f
  4200d3:	mov    al,0x2e
  4200d5:	fwait
  4200d6:	call   0xb550:0xdf3fa603
  4200dd:	retf   0xb37a
  4200e0:	sti    
  4200e1:	shr    BYTE PTR [ecx-0x18d0ace0],cl
  4200e7:	cdq    
  4200e8:	es dec ecx
  4200ea:	mov    al,ds:0x3dec9f58
  4200ef:	mov    esp,0x50a4e23a
  4200f4:	mov    ecx,fs
  4200f6:	dec    ecx
  4200f7:	mov    eax,ds:0x8cf2df42
  4200fc:	daa    
  4200fd:	xor    DWORD PTR [ebp-0x6a0c4433],esi
  420103:	mov    ds:0x2199bcc4,eax
  420108:	mov    ecx,0x4cacef11
  42010d:	jns    0x4200d4
  42010f:	lahf   
  420110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420111:	mov    edi,0x1aae660a
  420116:	popf   
  420117:	xchg   edx,eax
  420118:	pop    edx
  420119:	add    eax,0x67730160
  42011e:	in     al,dx
  42011f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420120:	xor    al,BYTE PTR [esi+0x23]
  420123:	xchg   edi,eax
  420124:	enter  0x981a,0xa
  420128:	loopne 0x42015e
  42012a:	pop    esi
  42012b:	data16 xor al,0xef
  42012e:	push   eax
  42012f:	js     0x420164
  420131:	and    eax,0x9ba27666
  420136:	pop    edi
  420137:	dec    ebp
  420138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420139:	adc    DWORD PTR [eax+eiz*2-0x13],ebp
  42013d:	sbb    cl,BYTE PTR [edi-0x23]
  420140:	ds add ah,dh
  420143:	mov    WORD PTR [ebx],gs
  420145:	daa    
  420146:	inc    esp
  420147:	bound  eax,QWORD PTR [ecx+0x12]
  42014a:	ret    0x89ae
  42014d:	xlat   BYTE PTR ds:[ebx]
  42014e:	fcomp  QWORD PTR [ecx+0x2b030690]
  420154:	adc    ah,0xe
  420157:	out    0x22,eax
  420159:	addr16 (bad) 
  42015b:	cmp    dl,BYTE PTR [esi+0x6cc07ad8]
  420161:	xor    cl,BYTE PTR [esi+eiz*2]
  420164:	rcr    DWORD PTR [esi+edx*8+0x217ebc31],cl
  42016b:	xchg   ebp,eax
  42016c:	cmp    eax,0xfe4d3dff
  420171:	jnp    0x4201e8
  420173:	sti    
  420174:	loop   0x4201a5
  420176:	xor    ecx,DWORD PTR [esi-0x7f]
  420179:	jecxz  0x42018e
  42017b:	dec    ebx
  42017c:	mov    DWORD PTR [ebp-0x244669cc],edx
  420182:	or     al,0x45
  420184:	cdq    
  420185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420186:	sbb    eax,0x3d3eef
  42018b:	xabort 0x3d
  42018e:	adc    edx,DWORD PTR [ebp-0x5c]
  420191:	cmp    eax,0xad1f1e0d
  420196:	lock retf 0x7665
  42019a:	(bad)  
  42019b:	cld    
  42019c:	lds    eax,FWORD PTR [esi+0x3c]
  42019f:	lock push edx
  4201a1:	mov    cl,0x82
  4201a3:	fcom   DWORD PTR [ecx-0x69ecbe81]
  4201a9:	mov    DWORD PTR [ecx-0x50],ebp
  4201ac:	dec    eax
  4201ad:	(bad)  [ebp+0x68]
  4201b0:	sub    BYTE PTR [edi],0x5e
  4201b3:	popa   
  4201b4:	inc    edx
  4201b5:	mov    ebx,0x687d5f2e
  4201ba:	mov    ds:0x5b40bab1,eax
  4201bf:	mov    ds,WORD PTR [eax+0x39614b1f]
  4201c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c6:	popf   
  4201c7:	mov    dl,0x3f
  4201c9:	es pop eax
  4201cb:	mov    eax,0xb30bc180
  4201d0:	dec    esp
  4201d1:	xchg   ebp,eax
  4201d2:	sbb    ecx,DWORD PTR [ebp+0x43749d0c]
  4201d8:	push   ss
  4201d9:	stos   BYTE PTR es:[edi],al
  4201da:	clc    
  4201db:	xchg   esi,eax
  4201dc:	out    dx,al
  4201dd:	xchg   esp,eax
  4201de:	xor    DWORD PTR [esi],ebx
  4201e0:	repnz cmp ecx,edx
  4201e3:	xor    ebx,edx
  4201e5:	push   0x52c1a4e4
  4201ea:	(bad)  
  4201eb:	inc    ebp
  4201ec:	out    0xd1,al
  4201ee:	cmp    BYTE PTR [ebx+0x51c67771],ch
  4201f4:	pop    ebp
  4201f5:	daa    
  4201f6:	pop    esp
  4201f7:	push   esp
  4201f8:	jp     0x42025b
  4201fa:	cmp    ebx,edx
  4201fc:	fs out 0x6d,eax
  4201ff:	xchg   DWORD PTR [ecx+0x1e],ebx
  420202:	jmp    0x42020d
  420204:	cmc    
  420205:	jle    0x42022e
  420207:	pusha  
  420208:	lods   eax,DWORD PTR ds:[esi]
  420209:	or     edx,0x9cc7d69b
  42020f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420210:	cmc    
  420211:	or     bh,ah
  420213:	push   edx
  420214:	xchg   edi,eax
  420215:	mov    WORD PTR [edx+0x703d0215],fs
  42021b:	push   es
  42021c:	loopne 0x42024a
  42021e:	sbb    dh,BYTE PTR [edi]
  420220:	xor    edi,DWORD PTR [edi-0x7]
  420223:	out    0x3e,eax
  420225:	push   eax
  420226:	sbb    eax,0x98245943
  42022b:	in     al,dx
  42022c:	ror    esp,0x9
  42022f:	jle    0x4201fe
  420231:	inc    edi
  420232:	adc    al,0x89
  420234:	mov    ecx,0x8c4e1d76
  420239:	leave  
  42023a:	adc    eax,DWORD PTR [eax-0x7f]
  42023d:	imul   ebx,DWORD PTR [edi],0x2c53ad2a
  420243:	les    ebp,FWORD PTR [ecx-0x1a7b1ff8]
  420249:	inc    edx
  42024a:	push   eax
  42024b:	mov    esi,0x87e0b4b1
  420250:	add    BYTE PTR [ebx+ebp*8+0x507026aa],cl
  420257:	sub    ebx,esp
  420259:	popa   
  42025a:	mov    fs,esi
  42025c:	std    
  42025d:	add    edi,DWORD PTR [ebx+0x737887b6]
  420263:	ret    
  420264:	frstor [esi+0x59cc4c4c]
  42026a:	stos   DWORD PTR es:[edi],eax
  42026b:	jno    0x420270
  42026d:	and    esi,ebp
  42026f:	push   edi
  420270:	xchg   ebx,eax
  420271:	test   al,0x69
  420273:	xor    cl,BYTE PTR [edi+0x5b]
  420276:	xlat   BYTE PTR ds:[ebx]
  420277:	sub    eax,0xdedb08a0
  42027c:	inc    ecx
  42027d:	sub    ah,BYTE PTR [ebx-0x3d]
  420280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420281:	repnz or dl,BYTE PTR [edi-0x62107d9d]
  420288:	outs   dx,BYTE PTR ds:[esi]
  420289:	iret   
  42028a:	xchg   edx,eax
  42028b:	xor    eax,0xc162a304
  420290:	or     ecx,ebp
  420292:	je     0x42022a
  420294:	adc    DWORD PTR [eax-0xaed1307],0xffffffb4
  42029b:	leave  
  42029c:	push   eax
  42029d:	dec    esp
  42029e:	xor    ebx,DWORD PTR [edx-0x44]
  4202a1:	stos   DWORD PTR es:[edi],eax
  4202a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202a3:	out    dx,eax
  4202a4:	mov    ds:0x74c36cfc,eax
  4202a9:	(bad)  
  4202aa:	stc    
  4202ab:	sub    al,BYTE PTR [ecx-0x39ad320e]
  4202b1:	and    ebx,ecx
  4202b3:	sub    al,0x3f
  4202b5:	push   ds
  4202b6:	push   ss
  4202b7:	mov    eax,0x9303a4ec
  4202bc:	outs   dx,DWORD PTR ds:[esi]
  4202bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202be:	jnp    0x420316
  4202c0:	enter  0xed69,0x85
  4202c4:	stc    
  4202c5:	push   edi
  4202c6:	mov    ecx,0xa8a8c479
  4202cb:	mov    al,ds:0xe41dc77
  4202d0:	add    eax,0xe4be2875
  4202d5:	popf   
  4202d6:	lock shl DWORD PTR [eax-0x11d7b4eb],cl
  4202dd:	ja     0x420350
  4202df:	jbe    0x4202cf
  4202e1:	and    DWORD PTR [ebx],edx
  4202e3:	aas    
  4202e4:	rcl    ebx,1
  4202e6:	not    dh
  4202e8:	jmp    0x4202f5
  4202ea:	das    
  4202eb:	test   al,0x9d
  4202ed:	addr16 cli 
  4202ef:	mov    ecx,0x1f963fd3
  4202f4:	adc    esp,DWORD PTR [ebp+0x9]
  4202f7:	mov    edi,0x9ecc6d86
  4202fc:	sti    
  4202fd:	cs aas 
  4202ff:	push   es
  420300:	or     BYTE PTR ds:0x78d7a7b7,ah
  420306:	ret    
  420307:	jl     0x420304
  420309:	repnz sub BYTE PTR [ebp+0x74b623d4],bh
  420310:	adc    bl,BYTE PTR ds:0xaaa77bef
  420316:	sbb    BYTE PTR [esi],bh
  420318:	gs in  eax,0x77
  42031b:	jmp    0x868f:0xc8ebdc07
  420322:	ss sbb ecx,ebp
  420325:	sbb    eax,0x4f6b0906
  42032a:	loope  0x4202f7
  42032c:	push   esi
  42032d:	add    eax,0x60994f0d
  420332:	cli    
  420333:	mov    ss:0x570ba4e1,eax
  420339:	mov    al,ds:0xe633e6ef
  42033e:	or     eax,0x3366b4d
  420343:	mov    eax,DWORD PTR [ecx]
  420345:	out    dx,eax
  420346:	repnz mov eax,ds:0xa8df8acf
  42034c:	sub    BYTE PTR [ecx+0x7362075d],bh
  420352:	mov    eax,ds:0xf885819a
  420357:	into   
  420358:	pusha  
  420359:	mov    edx,0x980352bd
  42035e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42035f:	push   0x6764b5d4
  420364:	mov    bl,0x4d
  420366:	and    esi,DWORD PTR ds:0xa495f8e0
  42036c:	push   ebx
  42036d:	dec    eax
  42036e:	sub    al,0xd1
  420370:	lahf   
  420371:	lods   eax,DWORD PTR ds:[esi]
  420372:	add    ah,BYTE PTR [ecx]
  420374:	pop    ebp
  420375:	test   eax,0x17beb113
  42037a:	call   0xdf46:0xec7042fb
  420381:	and    ebp,DWORD PTR [edx+0x28faa7b3]
  420387:	ja     0x4203a1
  420389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42038a:	retf   0x469a
  42038d:	stos   BYTE PTR es:[edi],al
  42038e:	out    dx,al
  42038f:	sub    al,0x12
  420391:	mov    ebx,0x3a739f89
  420396:	jae    0x420332
  420398:	outs   dx,DWORD PTR ds:[esi]
  420399:	jb     0x42037d
  42039b:	mov    ecx,0x337eb457
  4203a0:	aas    
  4203a1:	scas   al,BYTE PTR es:[edi]
  4203a2:	(bad)  
  4203a3:	and    BYTE PTR [eax],dl
  4203a5:	sbb    cl,dh
  4203a7:	fdiv   DWORD PTR [ebp+0x4a]
  4203aa:	and    bl,BYTE PTR [edx-0x28]
  4203ad:	pop    ecx
  4203ae:	push   edx
  4203af:	(bad)  [ecx+0x2f]
  4203b2:	sub    eax,0x12e6c5cd
  4203b7:	sbb    bl,al
  4203b9:	sbb    ah,BYTE PTR [ebx]
  4203bb:	in     eax,dx
  4203bc:	(bad)  
  4203be:	and    esi,edi
  4203c0:	in     al,dx
  4203c1:	aas    
  4203c2:	xchg   edx,eax
  4203c3:	or     BYTE PTR [edi+0x18f7e02f],ah
  4203c9:	pop    eax
  4203ca:	fst    DWORD PTR [ebx]
  4203cc:	xor    eax,0x277d137f
  4203d1:	dec    ebp
  4203d2:	pop    edx
  4203d3:	xchg   edi,eax
  4203d4:	mov    esi,ebx
  4203d6:	fsubr  QWORD PTR [edi]
  4203d8:	out    dx,eax
  4203d9:	dec    ebx
  4203da:	in     al,0x68
  4203dc:	js     0x4203a5
  4203de:	inc    edi
  4203df:	fs mov ebp,0x2bdac55d
  4203e5:	in     al,dx
  4203e6:	aam    0xaa
  4203e8:	scas   eax,DWORD PTR es:[edi]
  4203e9:	push   ds
  4203ea:	xchg   esi,eax
  4203eb:	add    bh,bl
  4203ed:	adc    DWORD PTR [eax-0x7b12e474],0xffffffa9
  4203f4:	xchg   ecx,eax
  4203f5:	fist   DWORD PTR [esi+0x6d740551]
  4203fb:	mov    bl,0xd7
  4203fd:	scas   eax,DWORD PTR es:[edi]
  4203fe:	jle    0x420425
  420400:	xchg   edx,eax
  420401:	pop    ecx
  420402:	xor    eax,DWORD PTR [edi]
  420404:	lods   eax,DWORD PTR ds:[esi]
  420405:	not    BYTE PTR [ebx+ebp*2+0xf]
  420409:	fcomip st,st(3)
  42040b:	pop    edx
  42040c:	shl    DWORD PTR [edi],0x92
  42040f:	scas   eax,DWORD PTR es:[edi]
  420410:	ret    0x757f
  420413:	dec    edi
  420414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420415:	inc    ebx
  420416:	lock inc eax
  420418:	mov    ebp,0x4388e2ff
  42041d:	jge    0x4203e3
  42041f:	imul   ecx,DWORD PTR [edx+0x1b],0xffffffbb
  420423:	stos   DWORD PTR es:[edi],eax
  420424:	push   ebx
  420425:	(bad)  
  420427:	leave  
  420428:	sahf   
  420429:	push   ss
  42042a:	and    eax,0x691c192
  42042f:	aad    0xb2
  420431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420432:	int3   
  420433:	aaa    
  420434:	mov    ah,0x3c
  420436:	imul   BYTE PTR [esi+0x18b6204d]
  42043c:	adc    DWORD PTR [edi+0x12],eax
  42043f:	cmp    DWORD PTR [ebx-0x4493884a],ebp
  420445:	add    BYTE PTR [esi+ebp*4-0x3c],0xfa
  42044a:	push   eax
  42044b:	ret    
  42044c:	jo     0x4204bc
  42044e:	dec    ecx
  42044f:	jge    0x42048a
  420451:	shl    bh,cl
  420453:	mov    bh,0x87
  420455:	xchg   ebx,eax
  420456:	pop    eax
  420457:	popa   
  420458:	and    al,0xbe
  42045a:	and    BYTE PTR [edi-0x63],bl
  42045d:	adc    BYTE PTR [esi-0x5a3c798c],bl
  420463:	mov    eax,0x82de8977
  420468:	ins    DWORD PTR es:[edi],dx
  420469:	add    BYTE PTR [edx+0x7ba17394],dl
  42046f:	aaa    
  420470:	pop    ebx
  420471:	call   0x7737:0x82c89c75
  420478:	adc    ah,cl
  42047a:	fs js  0x4204d4
  42047d:	xchg   edi,eax
  42047e:	stos   BYTE PTR es:[edi],al
  42047f:	(bad)  
  420480:	mov    bl,0xc4
  420482:	sub    ecx,DWORD PTR [edx+edx*2]
  420485:	adc    ecx,DWORD PTR [ebp+0x1b]
  420488:	sub    dl,BYTE PTR [ebx-0x27]
  42048b:	pop    ds
  42048c:	retf   0xd5a6
  42048f:	add    al,0x30
  420491:	cmp    bh,al
  420493:	fldenv [ebp+0x2a4f4730]
  420499:	and    al,0x3f
  42049b:	mov    ah,0xf0
  42049d:	jo     0x42042e
  42049f:	in     al,dx
  4204a0:	sbb    eax,0x2b277f1
  4204a5:	add    eax,0xd5daea14
  4204aa:	sub    DWORD PTR [ebp-0xb],0xffffffe2
  4204ae:	dec    esp
  4204af:	pop    edx
  4204b0:	(bad)  
  4204b1:	mov    edx,eax
  4204b3:	add    esi,DWORD PTR [edi+0x24]
  4204b6:	adc    ah,0xa2
  4204b9:	add    DWORD PTR [eax+0x72b1639a],0x2c0bbd12
  4204c3:	rol    DWORD PTR [ebx],0xd6
  4204c6:	sar    DWORD PTR ss:[ebx+eiz*2],1
  4204ca:	in     al,dx
  4204cb:	pop    es
  4204cc:	pusha  
  4204cd:	pushf  
  4204ce:	pop    ss
  4204cf:	mov    edi,0x243c0257
  4204d4:	sbb    ecx,ecx
  4204d6:	push   es
  4204d7:	loop   0x42045c
  4204d9:	xchg   DWORD PTR [edi],esi
  4204db:	jp     0x420480
  4204dd:	and    ebx,DWORD PTR [ecx]
  4204df:	jp     0x4204fa
  4204e1:	(bad)  
  4204e2:	rol    cl,0xc8
  4204e5:	shr    BYTE PTR [ecx+0x26bae0f0],cl
  4204eb:	adc    ebx,DWORD PTR [ecx]
  4204ed:	les    edx,FWORD PTR [esp+ebx*2]
  4204f0:	push   0xffffffb7
  4204f2:	xlat   BYTE PTR ds:[ebx]
  4204f3:	mov    dl,0xf8
  4204f5:	pop    ebp
  4204f6:	inc    edi
  4204f7:	cmp    eax,0x244b5688
  4204fc:	cmp    BYTE PTR [esi-0x6dae5cd7],dh
  420502:	imul   esp,DWORD PTR [edx],0x444bf3f1
  420508:	int    0xb6
  42050a:	mov    esp,0xa68d9a4c
  42050f:	mov    esi,0x39c9d211
  420514:	fwait
  420515:	sbb    bh,BYTE PTR [edi-0xb66dbc8]
  42051b:	dec    ecx
  42051c:	loopne 0x420593
  42051e:	jnp    0x420505
  420520:	popa   
  420521:	mov    cl,0x61
  420523:	mov    bl,0x41
  420525:	cdq    
  420526:	push   edx
  420527:	mov    bl,BYTE PTR [eax-0x29]
  42052a:	mov    edx,0xd4d64b81
  42052f:	mov    ds,WORD PTR [esp+ebx*1]
  420532:	adc    ch,BYTE PTR [esi]
  420534:	lahf   
  420535:	scas   eax,DWORD PTR es:[edi]
  420536:	mov    ds:0x7d157346,al
  42053b:	xchg   DWORD PTR [eax],ebp
  42053d:	sub    ch,BYTE PTR [edx-0x7b]
  420540:	retf   
  420541:	fdivp  st(1),st
  420543:	std    
  420544:	shl    DWORD PTR [ebx+ecx*2-0x51],0x53
  420549:	mov    ecx,0x8c650c72
  42054e:	pop    esi
  42054f:	shr    DWORD PTR [ecx-0x680f060c],cl
  420555:	pop    esi
  420556:	es dec ebp
  420558:	call   0xb4be:0xb9e38f92
  42055f:	cmc    
  420560:	jns    0x420587
  420562:	(bad)  [edi+0x1b]
  420565:	xchg   edi,eax
  420566:	loop   0x42051d
  420568:	fdiv   st(0),st
  42056a:	or     al,0x4a
  42056c:	in     eax,0xa6
  42056e:	data16 cmp ah,BYTE PTR [edx]
  420571:	pop    ebp
  420572:	std    
  420573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420574:	bnd jge 0x4205d5
  420577:	cmp    ecx,DWORD PTR [eax+eax*4]
  42057a:	aas    
  42057b:	push   edi
  42057c:	sbb    dh,BYTE PTR [edi-0x575509bb]
  420582:	jge    0x4205a8
  420584:	sbb    al,0xc1
  420586:	ret    0x7aa1
  420589:	shl    BYTE PTR [eax-0x3d],cl
  42058c:	pop    ebx
  42058d:	jnp    0x4205cf
  42058f:	inc    esp
  420590:	mov    ebx,0xc7948ec8
  420595:	sbb    ebx,DWORD PTR [ebp-0x4b371706]
  42059b:	je     0x4205c6
  42059d:	jno    0x42055e
  42059f:	inc    esp
  4205a0:	sti    
  4205a1:	inc    esp
  4205a2:	inc    ecx
  4205a3:	mov    ah,0x7b
  4205a5:	adc    eax,0x23d53c73
  4205aa:	xchg   esp,eax
  4205ab:	mov    esp,0xe255edd9
  4205b0:	xchg   DWORD PTR [edi],ebx
  4205b2:	ror    bl,1
  4205b4:	add    ecx,DWORD PTR [esi-0x16096725]
  4205ba:	out    0xac,al
  4205bc:	or     al,0x78
  4205be:	cmp    al,0x73
  4205c0:	mov    ecx,0x94c5c647
  4205c5:	sub    al,bh
  4205c7:	and    DWORD PTR [ebx+ebp*1+0x53],eax
  4205cb:	stos   BYTE PTR es:[edi],al
  4205cc:	sub    dh,bh
  4205ce:	ins    DWORD PTR es:[edi],dx
  4205cf:	scas   eax,DWORD PTR es:[edi]
  4205d0:	or     esi,edx
  4205d2:	(bad)  
  4205d3:	cmp    al,al
  4205d5:	adc    bh,BYTE PTR [esi+0x7d]
  4205d8:	xor    al,0xa8
  4205da:	loope  0x4205ff
  4205dc:	fsub   QWORD PTR [eax]
  4205de:	xchg   DWORD PTR [esi-0x7],ebx
  4205e1:	sub    DWORD PTR [edx-0x7f],0xffffffbc
  4205e5:	add    BYTE PTR [esi-0xa4656b7],0x3d
  4205ec:	push   cs
  4205ed:	(bad)  
  4205ee:	pop    esp
  4205ef:	loop   0x420667
  4205f1:	sahf   
  4205f2:	jae    0x420584
  4205f4:	inc    edi
  4205f5:	jle    0x4205b6
  4205f7:	fidiv  DWORD PTR ds:0xf1619c11
  4205fd:	sub    eax,0xd0df26c
  420602:	add    cl,BYTE PTR [edx]
  420604:	mov    cl,0x22
  420606:	not    al
  420608:	mov    ebx,0x60c5d429
  42060d:	or     BYTE PTR [ebx-0x75],bl
  420610:	cmp    al,0x7c
  420612:	xor    al,0xb8
  420614:	test   DWORD PTR [ebx+0x26],ebx
  420617:	push   es
  420618:	cld    
  420619:	mov    ecx,0x81254768
  42061e:	sub    al,0x9a
  420620:	ret    
  420621:	ss dec esp
  420623:	adc    BYTE PTR [ebx],ch
  420625:	dec    esp
  420626:	scas   eax,DWORD PTR es:[edi]
  420627:	adc    edx,ebx
  420629:	cwde   
  42062a:	test   eax,0x6696282f
  42062f:	(bad)  
  420630:	jns    0x42069a
  420632:	cld    
  420633:	cdq    
  420634:	iret   
  420635:	(bad)  
  420636:	fwait
  420637:	push   ebx
  420638:	add    eax,DWORD PTR [edi]
  42063a:	sti    
  42063b:	mov    ecx,0xe0ce700c
  420640:	repz addr16 out 0x9f,al
  420644:	xchg   BYTE PTR [eax-0x3b2001f8],dl
  42064a:	or     eax,0x42400126
  42064f:	out    0xe1,al
  420651:	cmp    DWORD PTR [edi+0x3e],0x912548f0
  420658:	out    0x3d,eax
  42065a:	ja     0x420659
  42065c:	push   edi
  42065d:	adc    al,0x92
  42065f:	sub    bl,BYTE PTR [eax+0xe443125]
  420665:	in     eax,0xa1
  420667:	cmp    BYTE PTR [edx],dh
  420669:	aaa    
  42066a:	enter  0xd656,0x4f
  42066e:	push   ds
  42066f:	xor    BYTE PTR [edx],dh
  420671:	xchg   ebp,ecx
  420673:	mov    eax,0x81e54a57
  420678:	repz adc al,0x2d
  42067b:	pop    esi
  42067c:	mov    dh,0x98
  42067e:	push   edx
  42067f:	cwde   
  420680:	cli    
  420681:	dec    esp
  420682:	add    BYTE PTR [edx],dh
  420684:	repnz pop ebp
  420686:	test   eax,0xde051a4b
  42068b:	xchg   ecx,eax
  42068c:	rcl    BYTE PTR [ebx+0x6171efef],0x8
  420693:	into   
  420694:	and    eax,DWORD PTR [ecx-0x55]
  420697:	imul   ecx,DWORD PTR [ecx],0x6b
  42069a:	dec    eax
  42069b:	sti    
  42069c:	inc    ebp
  42069d:	(bad)  
  42069e:	mov    eax,0xffaa78b3
  4206a3:	icebp  
  4206a4:	xor    eax,0x51cf9d56
  4206a9:	loopne 0x4206c3
  4206ab:	cdq    
  4206ac:	xchg   esi,eax
  4206ad:	pop    ebp
  4206ae:	ss nop
  4206b0:	popf   
  4206b1:	push   ebx
  4206b2:	hlt    
  4206b3:	add    bl,BYTE PTR [ebx]
  4206b5:	or     BYTE PTR [edi+eiz*4],cl
  4206b8:	fld    DWORD PTR [esi-0x495448b9]
  4206be:	mov    esp,gs
  4206c0:	stos   BYTE PTR es:[edi],al
  4206c1:	xor    BYTE PTR [edi-0x27],dh
  4206c4:	popf   
  4206c5:	pop    es
  4206c6:	fadd   QWORD PTR [edi]
  4206c8:	pop    ecx
  4206c9:	in     eax,dx
  4206ca:	dec    eax
  4206cb:	or     eax,0x38781942
  4206d0:	cmp    BYTE PTR [ebp+0x39],ch
  4206d3:	jne    0x420714
  4206d5:	mov    dl,0x8b
  4206d7:	dec    esi
  4206d8:	outs   dx,BYTE PTR ds:[esi]
  4206d9:	shl    DWORD PTR [edi+0x2c],0xb5
  4206dd:	pop    esp
  4206de:	inc    ebx
  4206df:	xchg   BYTE PTR [edx],dh
  4206e1:	pop    edx
  4206e2:	call   0x2543:0x93335b82
  4206e9:	ret    
  4206ea:	mov    esi,ecx
  4206ec:	sub    BYTE PTR [ebp-0x6ab56796],ah
  4206f2:	cld    
  4206f3:	lods   al,BYTE PTR ds:[esi]
  4206f4:	outs   dx,BYTE PTR ds:[esi]
  4206f5:	mov    dl,0xa2
  4206f7:	dec    ebp
  4206f8:	jae    0x520ad5b9
  4206fe:	test   BYTE PTR [ebx+0x1d],0xc8
  420702:	xchg   edx,eax
  420703:	std    
  420704:	or     dh,BYTE PTR [esi]
  420706:	idiv   cl
  420708:	jns    0x42074e
  42070a:	cmp    bh,bl
  42070c:	fisub  DWORD PTR [ecx+0x43c457fe]
  420712:	dec    esp
  420713:	mov    ds:0x3ed25aa8,eax
  420718:	arpl   WORD PTR [edx],ax
  42071a:	cmp    BYTE PTR [esi+0x78d4fb72],ah
  420720:	sub    DWORD PTR [edx+0x11e907b8],eax
  420726:	xlat   BYTE PTR ds:[ebx]
  420727:	cmp    dl,al
  420729:	sbb    ch,bl
  42072b:	dec    esi
  42072c:	mov    bl,0xeb
  42072e:	mov    eax,ds:0x2ec1f56e
  420733:	and    bh,dl
  420735:	pop    esp
  420736:	adc    al,0xb9
  420738:	inc    edx
  420739:	add    eax,0x668d7b86
  42073e:	push   edi
  42073f:	sbb    al,BYTE PTR [edx]
  420741:	sub    al,0x9c
  420743:	dec    esp
  420744:	leave  
  420745:	mov    ch,0x5e
  420747:	test   DWORD PTR ds:0x99bc516e,eax
  42074d:	bound  ecx,QWORD PTR [ebp-0x54]
  420750:	add    ebx,0x65
  420753:	mov    ebp,DWORD PTR [esi+0x3d]
  420756:	jge    0x42073e
  420758:	xchg   ebp,eax
  420759:	pop    edx
  42075a:	shl    BYTE PTR [edi-0x53],0xe0
  42075e:	arpl   WORD PTR [esi+0x7ca663dc],dx
  420764:	cmp    DWORD PTR [eax],esp
  420766:	out    dx,eax
  420767:	ror    BYTE PTR fs:[ebp-0x6a],cl
  42076b:	sbb    al,0x2
  42076d:	addr16 push ebx
  42076f:	pop    edx
  420770:	popf   
  420771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420772:	or     al,0xe9
  420774:	jno    0x4207d9
  420776:	gs inc edi
  420778:	push   cs
  420779:	leave  
  42077a:	clc    
  42077b:	fs cmc 
  42077d:	repz or ecx,ebp
  420780:	mov    eax,ds:0xa33b919e
  420785:	enter  0x54ed,0x8a
  420789:	sub    al,0x69
  42078b:	into   
  42078c:	jle    0x42072c
  42078e:	std    
  42078f:	ud2    
  420791:	sub    bh,BYTE PTR [esi]
  420793:	(bad)  
  420795:	cs sahf 
  420797:	mov    cl,0xb4
  420799:	cmp    WORD PTR [eax-0x1d],bp
  42079d:	jo     0x42073c
  42079f:	fistp  DWORD PTR [edx-0x397cb463]
  4207a5:	jo     0x420731
  4207a7:	cmp    bl,ah
  4207a9:	sbb    BYTE PTR [eax+0x3a32aea4],ah
  4207af:	mov    DWORD PTR [esi+0x20],esp
  4207b2:	fiadd  DWORD PTR [edx+0x18c1e14]
  4207b8:	jne    0x420740
  4207ba:	(bad)  
  4207bb:	dec    edx
  4207bc:	sbb    dh,BYTE PTR [ebp+0x14]
  4207bf:	xor    al,0x9d
  4207c1:	sub    eax,0xe13e8172
  4207c6:	cli    
  4207c7:	mov    BYTE PTR [ebx+0x2e],cl
  4207ca:	cmp    BYTE PTR [ebx+0x51],0x60
  4207ce:	mov    DWORD PTR [ebp-0x48366584],edx
  4207d4:	ret    
  4207d5:	dec    ecx
  4207d6:	pop    ebx
  4207d7:	ja     0x4207d2
  4207d9:	or     DWORD PTR [edx+0x19],ebp
  4207dc:	loopne 0x420831
  4207de:	pop    ss
  4207df:	mov    eax,0x6b6beb2d
  4207e4:	jg     0x420850
  4207e6:	div    ah
  4207e8:	or     eax,DWORD PTR [ebp-0x6ec7275d]
  4207ee:	xchg   edx,eax
  4207ef:	mov    dh,0xab
  4207f1:	jle    0x42079f
  4207f3:	lahf   
  4207f4:	push   esp
  4207f5:	dec    ecx
  4207f6:	mov    BYTE PTR [edi+0x45],0xd6
  4207fa:	(bad)  
  4207fb:	cwde   
  4207fc:	fdivp  st(5),st
  4207fe:	inc    edi
  4207ff:	into   
  420800:	cdq    
  420801:	pop    ds
  420802:	mov    dh,BYTE PTR [edx-0x6b]
  420805:	mov    edi,0x4ecc41c5
  42080a:	jg     0x420810
  42080c:	repz sub al,0xc5
  42080f:	bound  ecx,QWORD PTR gs:[edi]
  420812:	cdq    
  420813:	ror    ah,0xfd
  420816:	mov    BYTE PTR [ecx+ebx*2],0xf4
  42081a:	mov    ah,BYTE PTR [edi]
  42081c:	mov    eax,0xb47e77fc
  420821:	inc    ecx
  420822:	mov    ds:0x58d11005,al
  420827:	cmp    eax,0x7560a4ec
  42082c:	aaa    
  42082d:	cmp    BYTE PTR [esi+ecx*4],0x12
  420831:	and    al,0xa4
  420833:	out    dx,al
  420834:	test   BYTE PTR [eax+0x7a],0xfb
  420838:	dec    ecx
  420839:	xor    ebx,DWORD PTR [edi+ebx*1-0x498d0089]
  420840:	jge    0x420811
  420842:	sbb    bl,BYTE PTR [eax-0x2650cf13]
  420848:	es mov ebp,0xe6a52d53
  42084f:	jg     0x420887
  420851:	pop    es
  420852:	int3   
  420853:	mov    bh,0x66
  420855:	(bad)  
  420856:	mov    al,ds:0x5574603
  42085b:	add    al,0x3c
  42085d:	xchg   BYTE PTR [ebp-0x77ac58d9],ah
  420863:	inc    eax
  420864:	pop    esp
  420865:	mov    ebx,0x16f61b8a
  42086a:	adc    DWORD PTR [edx+0x1],esi
  42086d:	rol    DWORD PTR [ebx-0x3f],cl
  420870:	bound  esp,QWORD PTR [eax-0x4293aa68]
  420876:	faddp  st(5),st
  420878:	dec    ebp
  420879:	in     eax,0x82
  42087b:	pop    ebx
  42087c:	dec    esp
  42087d:	outs   dx,BYTE PTR ds:[esi]
  42087e:	mov    dh,0xfa
  420880:	pop    es
  420881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420882:	(bad)  
  420883:	sbb    ch,BYTE PTR [eax]
  420885:	ins    BYTE PTR es:[edi],dx
  420886:	scas   eax,DWORD PTR es:[edi]
  420887:	inc    al
  420889:	xor    eax,0xc58a7899
  42088f:	test   BYTE PTR [ebp+0x5b],dh
  420892:	xor    edi,DWORD PTR [edx+esi*1]
  420895:	test   DWORD PTR [edi],eax
  420897:	xor    DWORD PTR [eax-0x31fd47f9],eax
  42089d:	retf   
  42089e:	jbe    0x42086e
  4208a0:	aad    0x8c
  4208a2:	test   DWORD PTR [ecx+0x56],ebx
  4208a5:	xchg   esp,eax
  4208a6:	push   edx
  4208a7:	inc    esp
  4208a8:	je     0x4208f3
  4208aa:	jbe    0x42083e
  4208ac:	adc    al,0xdf
  4208ae:	pop    ds
  4208af:	mov    eax,0x918dec91
  4208b4:	add    al,0xbc
  4208b6:	les    edi,FWORD PTR [ebx+ecx*8+0x7e]
  4208ba:	daa    
  4208bb:	inc    esi
  4208bc:	dec    esi
  4208bd:	and    DWORD PTR [ebx+eiz*2],eax
  4208c0:	cmp    esp,eax
  4208c2:	repz push ebx
  4208c4:	mov    dh,0x66
  4208c6:	pop    ebp
  4208c7:	cmp    DWORD PTR [esi+0x65],eax
  4208ca:	jge    0x4208c3
  4208cc:	sti    
  4208cd:	sahf   
  4208ce:	dec    esi
  4208cf:	cmp    bl,ah
  4208d1:	ret    0xafd3
  4208d4:	ds imul ebp,ecx,0xffffff95
  4208d8:	pop    ecx
  4208d9:	push   edx
  4208da:	fidivr WORD PTR [ebx*1-0x172947be]
  4208e1:	gs jnp 0x420946
  4208e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208e5:	fbld   TBYTE PTR ds:0x7be296c8
  4208eb:	adc    cl,cl
  4208ed:	pop    esp
  4208ee:	cmc    
  4208ef:	cwde   
  4208f0:	push   esi
  4208f1:	mov    ds:0xe4c0550b,eax
  4208f6:	mov    bl,0x4f
  4208f8:	jno    0x4208d6
  4208fa:	mov    esp,DWORD PTR [esi+eiz*2-0x54d73a13]
  420901:	repz mov dh,cl
  420904:	fs loopne 0x42092f
  420907:	outs   dx,DWORD PTR ds:[esi]
  420908:	mov    bl,0x9c
  42090a:	inc    eax
  42090b:	push   esp
  42090c:	stos   BYTE PTR es:[edi],al
  42090d:	lahf   
  42090e:	es push edi
  420910:	ror    DWORD PTR [edx+0x38],1
  420913:	pop    ebp
  420914:	jle    0x4208a9
  420916:	mov    ebx,0x8a82cd38
  42091b:	pop    esi
  42091c:	sbb    al,0x6
  42091e:	pop    ds
  42091f:	jle    0x4208c6
  420921:	xchg   esp,eax
  420922:	mov    cs,WORD PTR [esi]
  420924:	and    BYTE PTR [eax-0x57],dh
  420927:	sub    DWORD PTR [eax+eax*2],eax
  42092a:	retf   
  42092b:	sub    DWORD PTR [esi+ebp*1+0x7b],ecx
  42092f:	out    dx,al
  420930:	xor    al,0x60
  420932:	xor    al,0xf0
  420935:	dec    eax
  420936:	repz fsubr QWORD PTR [esp+ecx*2-0x2c]
  42093b:	mov    ds:0x34df9e73,al
  420940:	mov    dh,0xb5
  420942:	out    0xb4,eax
  420944:	sub    BYTE PTR [ebx+0x21],dh
  420947:	push   es
  420948:	fsubr  st,st(2)
  42094a:	inc    edx
  42094b:	outs   dx,BYTE PTR ds:[esi]
  42094c:	clc    
  42094d:	cmp    dh,ah
  42094f:	sbb    BYTE PTR [edx-0x19],cl
  420952:	push   ebp
  420953:	xchg   edx,eax
  420954:	pop    ecx
  420955:	in     al,dx
  420956:	lods   eax,DWORD PTR ds:[esi]
  420957:	(bad)  
  420958:	aad    0xdb
  42095a:	and    ecx,DWORD PTR [eax+edi*4-0x79]
  42095e:	push   eax
  42095f:	sub    ah,ah
  420961:	fist   DWORD PTR [ebp-0x71b82ce4]
  420967:	fcomp  QWORD PTR [ecx]
  420969:	in     eax,dx
  42096a:	pop    ebx
  42096b:	dec    eax
  42096c:	fwait
  42096d:	test   al,0x86
  42096f:	mov    cl,0xdd
  420971:	in     al,0x5d
  420973:	dec    eax
  420974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420975:	dec    eax
  420976:	push   ebx
  420977:	retf   
  420978:	cwde   
  420979:	ds push esp
  42097b:	jmp    0x42091e
  42097d:	xchg   BYTE PTR [ecx],cl
  42097f:	sbb    bl,BYTE PTR [ecx-0x1c]
  420982:	add    eax,0x24e99e06
  420987:	cdq    
  420988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42098a:	lods   eax,DWORD PTR ds:[esi]
  42098b:	in     eax,0x19
  42098d:	adc    esi,DWORD PTR [edx+0x724c08cc]
  420993:	in     eax,dx
  420994:	or     edi,DWORD PTR [ecx-0x9]
  420997:	clc    
  420998:	hlt    
  420999:	sbb    BYTE PTR [edx-0x8b42a93],dl
  42099f:	mov    edx,0x291935b9
  4209a4:	inc    esp
  4209a5:	dec    eax
  4209a6:	lods   al,BYTE PTR ds:[esi]
  4209a7:	cmp    edi,DWORD PTR [ecx]
  4209a9:	lea    ebx,[edx]
  4209ab:	sub    al,BYTE PTR [edi+eiz*4]
  4209ae:	jae    0x4209f1
  4209b0:	and    eax,0x8f56d68
  4209b5:	es add al,0xd6
  4209b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b9:	mov    ebp,0x82051755
  4209be:	pushf  
  4209bf:	and    DWORD PTR [esi-0x269160df],esi
  4209c5:	dec    edi
  4209c6:	loopne 0x4209ce
  4209c8:	retf   
  4209c9:	retf   0xe226
  4209cc:	(bad)  
  4209cd:	rcr    BYTE PTR [edx+0x61],cl
  4209d0:	pop    ebx
  4209d1:	adc    DWORD PTR [ebx+0x92a46ff],edx
  4209d7:	out    dx,al
  4209d8:	mov    al,ds:0x62d7326e
  4209dd:	dec    esi
  4209de:	sahf   
  4209df:	clc    
  4209e0:	inc    edi
  4209e1:	dec    ebp
  4209e2:	sbb    al,0x5b
  4209e4:	add    eax,0xe0c13e37
  4209e9:	rcr    DWORD PTR [ebp+0x5d242984],1
  4209ef:	imul   esp,DWORD PTR [esi+edx*4],0xfffffffa
  4209f3:	jecxz  0x42097c
  4209f5:	push   es
  4209f6:	inc    ebp
  4209f7:	imul   edi,DWORD PTR [eax+0x6d],0x5849bf80
  4209fe:	jb     0x4209d4
  420a00:	or     al,0xc2
  420a03:	popf   
  420a04:	sub    al,0x2c
  420a06:	inc    esp
  420a07:	sbb    esp,DWORD PTR [ebp-0x5096a3b3]
  420a0d:	out    0x8,eax
  420a0f:	jmp    0x420a8a
  420a11:	adc    dh,BYTE PTR [edi+ecx*1-0x7ae70348]
  420a18:	das    
  420a19:	out    dx,eax
  420a1a:	(bad)  
  420a1b:	mov    bh,0x87
  420a1d:	push   edi
  420a1e:	mov    esp,0x97cdf8c1
  420a23:	fs ret 0x47f5
  420a27:	or     al,0xf5
  420a29:	push   ecx
  420a2a:	ins    DWORD PTR es:[edi],dx
  420a2b:	les    sp,DWORD PTR [ebp+ebx*1-0x2cffa48f]
  420a33:	mov    esi,0xb8e22c2f
  420a38:	pop    ss
  420a39:	adc    DWORD PTR [ebp+0x7e],ebx
  420a3c:	outs   dx,BYTE PTR ds:[esi]
  420a3d:	mov    ebp,0xa6206222
  420a42:	sahf   
  420a43:	mov    al,ds:0x8e6452d2
  420a48:	push   esi
  420a49:	xchg   edx,eax
  420a4a:	adc    eax,0x9e2b5373
  420a4f:	cdq    
  420a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a51:	dec    esi
  420a52:	cld    
  420a53:	out    dx,eax
  420a54:	imul   BYTE PTR [esi]
  420a56:	pop    eax
  420a57:	push   es
  420a58:	scas   eax,DWORD PTR es:[edi]
  420a59:	pop    ebx
  420a5a:	or     DWORD PTR [ebp+0x7cd64caf],esp
  420a60:	ins    BYTE PTR es:[edi],dx
  420a61:	or     al,0x29
  420a63:	pop    ecx
  420a64:	push   edi
  420a65:	mov    bl,0x7
  420a67:	test   al,0x33
  420a69:	lahf   
  420a6a:	test   BYTE PTR [esi+0x25],ah
  420a6d:	sub    cl,BYTE PTR [ebx+0x13]
  420a70:	mov    esi,0x6804a835
  420a75:	xchg   ecx,eax
  420a76:	rcl    edi,0xae
  420a79:	pop    ds
  420a7a:	push   ds
  420a7b:	ficom  WORD PTR [edx-0x72]
  420a7e:	sti    
  420a7f:	jb     0x420af2
  420a81:	cmp    bl,BYTE PTR [edi+0x9]
  420a84:	movhps QWORD PTR [ecx],xmm2
  420a87:	jno    0x420a3c
  420a89:	enter  0x5b53,0x77
  420a8d:	into   
  420a8e:	int    0x21
  420a90:	xor    WORD PTR [ebp-0x19b29029],0x9a0
  420a99:	jle    0x420b10
  420a9b:	mov    ds:0xab796dd7,eax
  420aa0:	xchg   DWORD PTR [eax+edx*1-0x7c4184c9],edx
  420aa7:	rcr    DWORD PTR [esi+0x10],0x31
  420aab:	or     al,0x54
  420aad:	les    esp,FWORD PTR [eax]
  420aaf:	mov    cl,0x10
  420ab1:	cmp    eax,0xfd3900d8
  420ab6:	(bad)  
  420ab7:	imul   eax,DWORD PTR [ecx+0x10],0xd98cf189
  420abe:	adc    DWORD PTR [esp+ebp*4+0xa],ebx
  420ac2:	and    DWORD PTR cs:[esi-0x45],0xffffff9c
  420ac7:	stc    
  420ac8:	ficom  DWORD PTR [edi-0x36d5fdfd]
  420ace:	pop    es
  420acf:	xchg   cl,al
  420ad1:	test   eax,0xe6162443
  420ad6:	lea    edi,[edi]
  420ad8:	sti    
  420ad9:	jl     0x420a5d
  420adb:	and    BYTE PTR [ecx],ch
  420add:	fist   DWORD PTR [esi]
  420adf:	jbe    0x420b5c
  420ae1:	add    edi,edx
  420ae3:	inc    edi
  420ae4:	and    eax,0x5f0df70c
  420ae9:	lods   eax,DWORD PTR ds:[esi]
  420aea:	xchg   ebx,eax
  420aeb:	rcr    DWORD PTR [edx-0x2b1ad05c],1
  420af1:	push   0x6543bc87
  420af6:	adc    al,0x62
  420af8:	inc    edx
  420af9:	je     0x420aef
  420afb:	in     eax,dx
  420afc:	fstp   TBYTE PTR [ecx]
  420afe:	inc    ebx
  420aff:	jg     0x420b07
  420b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b02:	dec    esp
  420b03:	or     ch,BYTE PTR [eax+0x8b9e8ca]
  420b09:	push   es
  420b0a:	xchg   esi,eax
  420b0b:	sbb    DWORD PTR ds:0x2d6288f4,ecx
  420b11:	jmp    0x51db:0xad68261e
  420b18:	fimul  WORD PTR [ecx+esi*8+0x3cb13c56]
  420b1f:	imul   ebx,DWORD PTR [edi-0x7e],0x4a2ad5bb
  420b26:	xlat   BYTE PTR ds:[ebx]
  420b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b28:	adc    ecx,esi
  420b2a:	ins    BYTE PTR es:[edi],dx
  420b2b:	mov    dh,0xd9
  420b2d:	adc    dl,ah
  420b2f:	push   0xd551a255
  420b34:	aad    0x4
  420b36:	js     0x420abb
  420b38:	ret    
  420b39:	pop    es
  420b3a:	nop
  420b3b:	xor    eax,0x4861c93e
  420b40:	pop    edx
  420b41:	cwde   
  420b42:	daa    
  420b43:	mov    cl,0x7e
  420b45:	push   eax
  420b46:	mov    WORD PTR [eax+0x5d6337b5],cs
  420b4c:	xor    al,0xa
  420b4e:	lea    ebx,[ecx-0x4eff8e49]
  420b54:	or     al,0xef
  420b56:	adc    al,0xbc
  420b58:	pop    esp
  420b59:	imul   eax,DWORD PTR [eax],0x721ec5d0
  420b5f:	not    DWORD PTR [ecx]
  420b61:	dec    esi
  420b62:	(bad)  
  420b63:	dec    edx
  420b64:	fwait
  420b65:	xchg   ecx,eax
  420b66:	ja     0x420b45
  420b68:	retf   0xdd40
  420b6b:	sbb    DWORD PTR [edx],ecx
  420b6d:	jb     0x420ba4
  420b6f:	call   0x66196428
  420b74:	arpl   di,cx
  420b76:	add    al,0xa3
  420b78:	cmp    al,0x78
  420b7a:	sbb    ah,ch
  420b7c:	iret   
  420b7d:	jmp    0xd79752b5
  420b82:	add    eax,DWORD PTR [esi]
  420b84:	shl    DWORD PTR [ebx+esi*8-0x273d31c2],1
  420b8b:	jmp    0x2854:0x9b105456
  420b92:	cmp    eax,0xa1d6b5d3
  420b97:	lods   eax,DWORD PTR gs:[esi]
  420b99:	xchg   ebp,eax
  420b9a:	push   eax
  420b9b:	xor    ebp,0x606adf92
  420ba1:	es jmp 0x420b81
  420ba4:	add    ah,BYTE PTR [edx-0x58e73813]
  420baa:	pop    eax
  420bab:	push   cs
  420bac:	jmp    0x420b60
  420bae:	sub    eax,0x1d1cae7b
  420bb3:	mov    ch,0x96
  420bb5:	ret    0x1716
  420bb8:	cmp    cl,BYTE PTR [eax-0x2a]
  420bbb:	mov    al,0x3
  420bbd:	dec    ebp
  420bbe:	mov    WORD PTR [ebp+0x558cd684],?
  420bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc5:	mov    edx,0xf499016
  420bca:	pop    ebx
  420bcb:	es into 
  420bcd:	mov    edi,0xe1ce9b1b
  420bd2:	xor    al,0xe9
  420bd4:	(bad)  
  420bd6:	jmp    0x5429ccea
  420bdb:	push   sp
  420bdd:	jnp    0x420bd9
  420bdf:	mov    eax,0xc2934671
  420be4:	popf   
  420be5:	fidiv  DWORD PTR [ebx+ebx*2-0x7a]
  420be9:	lods   eax,DWORD PTR ds:[esi]
  420bea:	call   0x24bdfb2e
  420bef:	adc    dl,dh
  420bf1:	test   DWORD PTR ss:[ebp-0x6d],ebx
  420bf5:	loop   0x420c6a
  420bf7:	arpl   WORD PTR [ecx-0x1a],si
  420bfa:	popa   
  420bfb:	dec    edi
  420bfc:	repz add DWORD PTR [ebp-0x5e6cf53],edx
  420c03:	pop    edx
  420c04:	mov    eax,0xa9b6b067
  420c09:	or     eax,DWORD PTR [edi+ebp*2+0x5e]
  420c0d:	ror    DWORD PTR [eax-0x2d68fab5],cl
  420c13:	push   0x7b
  420c15:	out    dx,eax
  420c16:	cli    
  420c17:	cmp    eax,0x87d061a4
  420c1c:	inc    esi
  420c1d:	push   edi
  420c1e:	mov    DWORD PTR [edx+0x7e3dde31],ebx
  420c24:	sub    al,0xb0
  420c26:	mov    ds:0xb381b746,al
  420c2b:	out    0x73,eax
  420c2d:	push   ds
  420c2e:	repz cmp DWORD PTR [eax],edx
  420c31:	fs push ebp
  420c33:	xor    edx,DWORD PTR [esi]
  420c35:	and    BYTE PTR [edi-0x361f2c06],cl
  420c3b:	push   ss
  420c3c:	jge    0x420c77
  420c3e:	mov    ecx,0x9b08a835
  420c43:	ja     0x420c40
  420c45:	jnp    0x420cc6
  420c47:	lods   al,BYTE PTR ds:[esi]
  420c48:	mov    cl,0x13
  420c4a:	inc    ebp
  420c4b:	mov    bh,cl
  420c4d:	jg     0x420c81
  420c4f:	shrd   DWORD PTR [ecx],edx,cl
  420c52:	adc    DWORD PTR [edx],ebp
  420c54:	add    al,0xb6
  420c56:	sub    BYTE PTR [ebp-0x6b],0xdd
  420c5a:	and    eax,0x1fab1706
  420c5f:	add    al,0x39
  420c61:	mov    ch,0xda
  420c63:	in     eax,dx
  420c64:	jnp    0x420c61
  420c66:	mov    dh,0xf7
  420c68:	mov    ebx,DWORD PTR [eax-0x28]
  420c6b:	push   ecx
  420c6c:	cmp    BYTE PTR ds:0x2e751a9a,0xcf
  420c73:	jbe    0x420c11
  420c75:	push   ecx
  420c77:	jo     0x420c49
  420c79:	xchg   DWORD PTR [edi+0x5f],ebp
  420c7c:	xchg   esi,eax
  420c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c7e:	imul   ebp,DWORD PTR [edx-0x35],0x165667e7
  420c85:	int3   
  420c86:	inc    esi
  420c87:	push   esi
  420c88:	mov    cl,0x48
  420c8a:	ins    DWORD PTR es:[edi],dx
  420c8b:	inc    eax
  420c8c:	or     ebp,DWORD PTR [eax+ebp*4+0x54]
  420c90:	or     DWORD PTR [edx+0x5d],ebx
  420c93:	push   eax
  420c94:	sbb    DWORD PTR [ecx+0x6306040e],ebp
  420c9a:	outs   dx,DWORD PTR ds:[esi]
  420c9b:	push   0x23939ed5
  420ca0:	mov    ah,0x37
  420ca2:	aad    0x62
  420ca4:	test   eax,0x4c1a5dc2
  420ca9:	ins    DWORD PTR es:[edi],dx
  420caa:	jae    0x420c6e
  420cac:	adc    DWORD PTR [eax+0x1f9d0703],edx
  420cb2:	pop    ecx
  420cb3:	xchg   esp,eax
  420cb4:	test   al,0x51
  420cb6:	outs   dx,DWORD PTR ds:[esi]
  420cb7:	mov    cl,0x67
  420cb9:	int    0xef
  420cbb:	xchg   edi,eax
  420cbc:	mov    esi,0xf9b9ad92
  420cc1:	ret    0x7b52
  420cc4:	ret    
  420cc5:	mov    DWORD PTR [ecx-0x13],esi
  420cc8:	mov    ds:0x6cf2ca73,eax
  420ccd:	aas    
  420cce:	mov    esi,0x9cf1e316
  420cd3:	mov    edx,0x2f98c5a3
  420cd8:	push   eax
  420cd9:	jae    0x420d20
  420cdb:	and    cl,BYTE PTR [eax+0x5c89fe13]
  420ce1:	sbb    bh,ch
  420ce3:	xchg   esp,eax
  420ce4:	jbe    0x420d07
  420ce6:	daa    
  420ce7:	dec    ebp
  420ce8:	fsub   DWORD PTR [ebp+0x7f]
  420ceb:	xchg   edx,eax
  420cec:	mov    cl,0xfb
  420cee:	push   es
  420cef:	add    al,0x14
  420cf1:	xchg   ecx,eax
  420cf2:	mul    BYTE PTR [ecx]
  420cf4:	push   ds
  420cf5:	js     0x420ce5
  420cf7:	jle    0x420cbe
  420cf9:	mov    al,BYTE PTR [eax+esi*1]
  420cfc:	pushf  
  420cfd:	int    0x1c
  420cff:	ret    
  420d00:	add    BYTE PTR [ecx],dl
  420d02:	jb     0x420d0e
  420d04:	fild   DWORD PTR es:[eax+0x31b37f04]
  420d0b:	ins    DWORD PTR es:[edi],dx
  420d0c:	and    DWORD PTR [ebp+ebx*4+0x39685a14],eax
  420d13:	std    
  420d14:	mov    ebp,0x17dbfc57
  420d19:	ins    BYTE PTR es:[edi],dx
  420d1a:	in     eax,0x9b
  420d1c:	push   0xb7673c33
  420d21:	psubb  mm2,QWORD PTR [ecx+0x57]
  420d25:	cmp    esp,DWORD PTR [esi-0x2e3cdf25]
  420d2b:	jg     0x420d72
  420d2d:	adc    DWORD PTR [ebp+0x3e],edx
  420d30:	(bad)  
  420d31:	ficomp WORD PTR [ecx]
  420d33:	fs out 0xe1,al
  420d36:	leave  
  420d37:	xor    dl,ah
  420d39:	mov    edi,0xab2180ed
  420d3e:	push   0x58
  420d40:	shr    BYTE PTR ds:0xcfbb3b5b,1
  420d46:	jns    0x420d11
  420d48:	xor    ch,BYTE PTR [ecx-0x21]
  420d4b:	inc    edi
  420d4c:	cmp    BYTE PTR [edi+0x53],ch
  420d4f:	sbb    ecx,DWORD PTR ds:0x9222fc81
  420d55:	lods   eax,DWORD PTR ds:[esi]
  420d56:	mov    dh,0x5b
  420d58:	pop    ebx
  420d59:	sub    eax,0x790eb0c6
  420d5e:	shl    DWORD PTR [ecx],1
  420d60:	dec    ecx
  420d61:	jnp    0x420d9d
  420d63:	inc    edx
  420d64:	jp     0x420d56
  420d66:	jle    0x420d8e
  420d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d69:	sbb    BYTE PTR [ebp+0x2e0a30d8],cl
  420d6f:	lahf   
  420d70:	add    eax,esp
  420d72:	das    
  420d73:	dec    edx
  420d74:	scas   eax,DWORD PTR es:[edi]
  420d75:	mov    dl,0xce
  420d77:	ss and eax,0x892ecb42
  420d7d:	adc    esi,DWORD PTR ds:0xb9e3ab68
  420d83:	imul   edi,eax,0xffffff87
  420d86:	mov    bl,0x2d
  420d88:	pop    es
  420d89:	sub    eax,0x8c2d2e5d
  420d8e:	lahf   
  420d8f:	(bad)  
  420d90:	add    BYTE PTR [edi-0x52],dh
  420d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d94:	and    DWORD PTR [eax-0x37],eax
  420d97:	sar    bh,0x28
  420d9a:	(bad)  
  420d9c:	xchg   ebx,eax
  420d9d:	popa   
  420d9e:	test   edx,edi
  420da0:	xchg   edi,eax
  420da1:	inc    ebp
  420da2:	mov    edx,0x4b182f82
  420da7:	dec    ebx
  420da8:	xchg   DWORD PTR [esi-0x5ada2c7],eax
  420dae:	mov    bl,0x4
  420db0:	xchg   esp,eax
  420db1:	jle    0x420e31
  420db3:	pop    ebx
  420db4:	loop   0x420de0
  420db6:	mov    eax,ds:0x95b1263
  420dbb:	dec    edx
  420dbc:	arpl   WORD PTR [edx],ax
  420dbe:	add    al,0x87
  420dc0:	push   ecx
  420dc1:	inc    eax
  420dc2:	jg     0x420ddc
  420dc4:	inc    edi
  420dc5:	mov    gs,WORD PTR [edx-0x13684371]
  420dcb:	out    0xe9,eax
  420dcd:	cmp    al,0xf1
  420dd0:	ret    0x5a68
  420dd3:	push   edi
  420dd4:	les    ecx,FWORD PTR [esi]
  420dd6:	push   0x39
  420dd8:	pop    eax
  420dd9:	fbstp  TBYTE PTR [eax-0xaae44dd]
  420ddf:	and    DWORD PTR [edx+0x52995c57],0x7dfceeb
  420de9:	pop    edx
  420dea:	fild   DWORD PTR [eax+0x49]
  420ded:	test   BYTE PTR [edx-0x308e4d6e],bh
  420df3:	dec    ebp
  420df4:	into   
  420df5:	es push ebx
  420df7:	push   0xf
  420df9:	and    BYTE PTR [ebx+0x37],bh
  420dfc:	mov    esp,0xf4c1df33
  420e01:	mov    edx,0x7f7f79f1
  420e06:	mov    ebp,0x5457370b
  420e0b:	stos   BYTE PTR es:[edi],al
  420e0c:	sbb    ebp,DWORD PTR [esi-0x518896c6]
  420e12:	out    0xa4,eax
  420e14:	retf   0x8a08
  420e17:	or     dh,bh
  420e19:	sub    DWORD PTR [esp+edx*4-0x1f3e46f4],ebx
  420e20:	shl    DWORD PTR [edi+0x61],0x87
  420e24:	ja     0x420e7b
  420e26:	push   0x89c66f91
  420e2b:	jg     0x420e08
  420e2d:	push   edx
  420e2e:	int    0xc8
  420e30:	iret   
  420e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e32:	cwde   
  420e33:	lahf   
  420e34:	sar    dh,0x30
  420e37:	ficomp DWORD PTR [edi]
  420e39:	ret    0x5bc2
  420e3c:	adc    al,0xc9
  420e3e:	push   ebx
  420e3f:	(bad)  
  420e40:	out    dx,al
  420e41:	ins    BYTE PTR es:[edi],dx
  420e42:	pop    ss
  420e43:	and    al,0xc8
  420e45:	retf   
  420e46:	je     0x420e29
  420e48:	add    ah,BYTE PTR [edi+0x1b65bf0c]
  420e4e:	ret    
  420e4f:	push   0x6ef0dfa4
  420e54:	jns    0x420ea9
  420e56:	cwde   
  420e57:	stos   BYTE PTR es:[edi],al
  420e58:	cmp    ch,BYTE PTR ds:[esi+0x4c922536]
  420e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e60:	js     0x420e72
  420e62:	retf   
  420e63:	push   ecx
  420e64:	test   al,0x13
  420e66:	test   DWORD PTR [edx],ebx
  420e68:	cwde   
  420e69:	(bad)  
  420e6b:	push   ss
  420e6c:	sbb    cl,BYTE PTR [edx+0x2]
  420e6f:	mov    bl,0xa9
  420e71:	arpl   WORD PTR [edi+0x73],di
  420e74:	ja     0x420eaa
  420e76:	or     ebx,DWORD PTR [ecx]
  420e78:	ret    
  420e79:	mov    ebx,0x559fa110
  420e7e:	push   es
  420e7f:	mov    edi,0xbd35e3ac
  420e84:	icebp  
  420e85:	bound  ebp,QWORD PTR [ecx+0x2d]
  420e88:	mov    dh,0xb2
  420e8a:	pop    eax
  420e8b:	dec    edx
  420e8c:	pop    edi
  420e8d:	jnp    0x420ea1
  420e8f:	or     eax,0xe5da9a2a
  420e94:	imul   esi,DWORD PTR [edi+0x2717a311],0x6
  420e9b:	dec    ecx
  420e9c:	add    eax,0xf136261
  420ea1:	jle    0x420eda
  420ea3:	mov    ecx,0xa54e54b0
  420ea8:	pop    esi
  420ea9:	dec    eax
  420eaa:	jmp    0x16b1:0x892e2611
  420eb1:	jg     0x420e94
  420eb3:	pushf  
  420eb4:	stos   DWORD PTR es:[edi],eax
  420eb5:	fld    QWORD PTR [eax+0x3f18d8e3]
  420ebb:	mov    ah,bl
  420ebd:	push   es
  420ebe:	ss pop ss
  420ec0:	dec    ebp
  420ec1:	cmp    ebp,esi
  420ec3:	jmp    0x420eb3
  420ec5:	adc    DWORD PTR [edx+ecx*2+0x16baa92d],edi
  420ecc:	cmp    DWORD PTR [ebx+0x46],0x7250fc04
  420ed3:	nop
  420ed4:	imul   ecx,eax,0xffffffa9
  420ed7:	ror    bh,cl
  420ed9:	in     al,0x58
  420edb:	sbb    al,0x17
  420edd:	sub    al,BYTE PTR [edi+0x31]
  420ee0:	xor    dl,0x82
  420ee3:	retf   0xba8c
  420ee6:	xchg   ecx,eax
  420ee7:	xor    ebp,DWORD PTR [ebx+0x2a]
  420eea:	(bad)  
  420eeb:	test   al,0x46
  420eed:	pop    ebp
  420eee:	lds    ebx,FWORD PTR [ebp-0x530bc2f5]
  420ef4:	xlat   BYTE PTR ds:[ebx]
  420ef5:	(bad)  
  420ef6:	nop
  420ef7:	and    DWORD PTR [ebp+0x72f4fef1],0xc3431870
  420f01:	ins    BYTE PTR es:[edi],dx
  420f02:	fcmovne st,st(5)
  420f04:	(bad)  
  420f05:	jae    0x420eb0
  420f07:	cs inc eax
  420f09:	(bad)  
  420f0a:	lods   eax,DWORD PTR ds:[esi]
  420f0b:	fcomp  QWORD PTR [esi-0x3225d593]
  420f11:	pop    es
  420f12:	mov    bl,0x19
  420f14:	push   eax
  420f15:	rcl    DWORD PTR [edi-0x2d],1
  420f18:	push   cs
  420f19:	dec    edi
  420f1a:	mov    dl,0x4
  420f1c:	add    ebp,eax
  420f1e:	mov    cl,0x5b
  420f20:	fwait
  420f21:	in     eax,0xf8
  420f23:	test   BYTE PTR [ecx-0x37],dl
  420f26:	sar    esp,cl
  420f28:	or     ch,cl
  420f2a:	iret   
  420f2b:	lods   al,BYTE PTR ds:[esi]
  420f2c:	dec    ebp
  420f2d:	jae    0x420f51
  420f2f:	outs   dx,BYTE PTR ds:[esi]
  420f30:	xor    eax,0xc1d33a46
  420f35:	ret    
  420f36:	inc    esi
  420f37:	das    
  420f38:	loope  0x420ef7
  420f3a:	mov    ds,WORD PTR [edx+eax*4-0x48]
  420f3e:	stos   DWORD PTR es:[edi],eax
  420f3f:	test   eax,0x9cbaade5
  420f44:	sub    BYTE PTR [eax+0x6233210c],ch
  420f4a:	add    eax,0xa6c02e3e
  420f4f:	sub    BYTE PTR [edx],ch
  420f51:	call   0xb4e5e77
  420f56:	xchg   ebp,eax
  420f57:	outs   dx,DWORD PTR ds:[esi]
  420f58:	pop    esi
  420f59:	xchg   esi,eax
  420f5a:	lea    edi,[esi-0x548cf29b]
  420f60:	js     0x420eee
  420f62:	inc    edx
  420f63:	lods   eax,DWORD PTR ds:[esi]
  420f64:	xchg   esp,eax
  420f65:	sbb    ebx,DWORD PTR [ebx-0x322aaf82]
  420f6b:	sahf   
  420f6c:	cmp    eax,0x4dd541fd
  420f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f72:	sbb    ebp,edi
  420f74:	pop    ebx
  420f75:	jbe    0x420f3c
  420f77:	sub    BYTE PTR [ecx-0x6d],al
  420f7a:	adc    eax,0xacdf6f2
  420f7f:	push   eax
  420f80:	popf   
  420f81:	test   BYTE PTR [esi-0x51],ah
  420f84:	gs push 0x483d18f2
  420f8a:	sahf   
  420f8b:	jl     0xec86c9f8
  420f91:	dec    ebp
  420f92:	arpl   WORD PTR [eax+ecx*4],bx
  420f95:	mov    BYTE PTR [eax+0x2a],bl
  420f98:	in     eax,dx
  420f99:	inc    esp
  420f9a:	inc    esp
  420f9b:	dec    esi
  420f9c:	stc    
  420f9d:	shl    DWORD PTR [ebx],0x5b
  420fa0:	ss (bad) 
  420fa3:	je     0x420fcf
  420fa5:	push   ebx
  420fa6:	sub    bh,dh
  420fa8:	shl    DWORD PTR [edx],cl
  420faa:	xchg   edi,eax
  420fab:	adc    ebx,DWORD PTR [ebx]
  420fad:	lea    ecx,[ecx+0x35ea7c3b]
  420fb3:	leave  
  420fb4:	push   0xf99c5219
  420fb9:	inc    esi
  420fba:	sbb    dl,BYTE PTR [ebx]
  420fbc:	jns    0x420f91
  420fbe:	pop    ss
  420fbf:	mov    bl,0x95
  420fc1:	lods   al,BYTE PTR ds:[esi]
  420fc2:	fmul   DWORD PTR [edx]
  420fc4:	mov    eax,ds:0x3a66f146
  420fc9:	(bad)  
  420fcb:	xor    al,0x3a
  420fcd:	fwait
  420fce:	imul   ebp,DWORD PTR [edi+edi*1+0x49a6d6b],0x3bb74895
  420fd9:	fimul  DWORD PTR [ebp+0x5fcf6565]
  420fdf:	mov    ds:0x6e46afdf,eax
  420fe4:	enter  0xb776,0x50
  420fe8:	out    0xf4,al
  420fea:	jne    0x420f90
  420fec:	sbb    dh,BYTE PTR [ebp+0x17]
  420fef:	adc    ch,dl
  420ff1:	and    eax,0xaab549bd
  420ff6:	in     eax,0xdd
  420ff8:	mov    ebx,DWORD PTR ds:0x89a82891
  420ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fff:	les    ecx,FWORD PTR [ecx-0x6b]
  421002:	pop    ds
  421003:	sub    esi,esp
  421005:	call   0xc42a:0x8e7612b9
  42100c:	(bad)  
  42100d:	pop    ss
  42100e:	inc    esi
  42100f:	(bad)  
  421010:	outs   dx,BYTE PTR ds:[esi]
  421011:	add    DWORD PTR [edi],eax
  421013:	and    al,0xcb
  421015:	dec    esi
  421016:	sub    DWORD PTR [ebx+0x28],eax
  421019:	inc    ecx
  42101a:	cld    
  42101b:	std    
  42101c:	es fcmovu st,st(0)
  42101f:	shl    BYTE PTR [eax],cl
  421021:	inc    esi
  421022:	push   cs
  421023:	clc    
  421024:	cmp    al,0xcf
  421026:	cmp    al,0xb2
  421028:	adc    al,0xde
  42102a:	push   ecx
  42102b:	out    0xd7,al
  42102d:	cmp    DWORD PTR [ebx],0x3f
  421030:	mov    al,0x52
  421032:	imul   edx,esp,0x23
  421035:	dec    esi
  421036:	cwde   
  421037:	and    al,BYTE PTR [esi+0x21]
  42103a:	inc    edi
  42103b:	call   0x6295:0x14f3a8fb
  421042:	xchg   edx,eax
  421043:	out    dx,al
  421044:	sbb    di,WORD PTR [esi+0x58]
  421048:	mov    ebx,0x843dda21
  42104d:	xor    cl,BYTE PTR [eax]
  42104f:	jecxz  0x42109f
  421051:	add    BYTE PTR [esi],dh
  421053:	sbb    eax,0xa18c4c09
  421058:	lahf   
  421059:	adc    bh,cl
  42105b:	sahf   
  42105c:	enter  0xda84,0xf2
  421060:	cdq    
  421061:	shl    BYTE PTR [esp+eiz*2-0x3ef142d1],1
  421068:	xchg   esi,eax
  421069:	adc    BYTE PTR [esi-0x6519f0e8],cl
  42106f:	mov    ch,0xab
  421071:	pop    esp
  421072:	das    
  421073:	loope  0x421095
  421075:	mov    esi,0x95e3b6de
  42107a:	push   esi
  42107b:	pop    esi
  42107c:	enter  0xd7dd,0xfe
  421080:	hlt    
  421081:	jecxz  0x421085
  421083:	addr16 leave 
  421085:	push   ebx
  421086:	mov    dl,0x40
  421088:	sub    BYTE PTR [ecx],ah
  42108a:	(bad)  [ecx+ebx*1]
  42108d:	inc    esi
  42108e:	jbe    0x4210d1
  421090:	pop    edi
  421091:	scas   al,BYTE PTR es:[edi]
  421092:	mov    edi,0x97a8dc7d
  421097:	sbb    eax,0x93c17536
  42109c:	adc    eax,0x66cbe655
  4210a1:	sbb    esp,DWORD PTR [ebx]
  4210a3:	pop    esi
  4210a4:	xchg   esp,eax
  4210a5:	mov    edx,0xc511af8a
  4210aa:	and    BYTE PTR [ecx-0x3e57be83],0xe2
  4210b1:	mov    ds:0xfd86ddb5,eax
  4210b6:	pushf  
  4210b7:	jge    0x4210ff
  4210b9:	jae    0x4210c1
  4210bb:	imul   eax,edi,0x40849859
  4210c1:	xchg   edi,eax
  4210c2:	and    DWORD PTR [ecx-0xb],esi
  4210c5:	adc    edx,DWORD PTR [esi+0x61b02c25]
  4210cb:	test   eax,0xb653dcc7
  4210d0:	in     eax,0xf9
  4210d2:	sbb    ebx,DWORD PTR [eax]
  4210d4:	scas   eax,DWORD PTR es:[edi]
  4210d5:	repz std 
  4210d7:	adc    ebp,DWORD PTR [eax+0x5efa1b88]
  4210dd:	jp     0x4210d0
  4210df:	sbb    edx,ebx
  4210e1:	jbe    0x421136
  4210e3:	jecxz  0x421152
  4210e5:	scas   eax,DWORD PTR es:[edi]
  4210e6:	test   DWORD PTR [esi-0x48],esp
  4210e9:	dec    edx
  4210ea:	int3   
  4210eb:	sub    DWORD PTR [esi-0x6b],0xaeee9b92
  4210f2:	and    al,0xcc
  4210f4:	adc    eax,0x7d8e2c7
  4210f9:	adc    cl,cl
  4210fb:	and    eax,DWORD PTR [ecx]
  4210fd:	(bad)  
  4210fe:	bound  eax,QWORD PTR [edx]
  421100:	out    0x78,al
  421102:	mov    eax,ds:0x44db7a71
  421107:	imul   esp,ecx,0x11
  42110a:	(bad)  
  42110b:	xor    BYTE PTR [esi-0x7b],ch
  42110e:	inc    esi
  42110f:	fidiv  DWORD PTR [edx]
  421111:	and    al,0x9d
  421113:	es inc ebx
  421115:	daa    
  421116:	fiadd  DWORD PTR [edi-0x187a80a4]
  42111c:	cmc    
  42111d:	jl     0x421125
  42111f:	(bad)  
  421121:	jle    0x4210f8
  421123:	stos   BYTE PTR es:[edi],al
  421124:	cmp    cl,BYTE PTR [esi-0x73]
  421127:	loop   0x4210f2
  421129:	inc    ecx
  42112a:	iret   
  42112b:	mov    bh,0x5b
  42112d:	int    0x70
  42112f:	lahf   
  421130:	or     al,BYTE PTR [ebx]
  421132:	xchg   esp,eax
  421133:	popa   
  421134:	and    eax,0xddaa9eb2
  421139:	ins    DWORD PTR es:[edi],dx
  42113a:	add    al,0x2
  42113c:	aas    
  42113d:	mov    edi,0x55bf5d0d
  421142:	jle    0x4210d3
  421144:	push   0x9574ad70
  421149:	jp     0x4210ce
  42114b:	stos   DWORD PTR es:[edi],eax
  42114c:	into   
  42114d:	xchg   edx,eax
  42114e:	pop    eax
  42114f:	pop    eax
  421150:	or     dl,ch
  421152:	xor    edi,ebx
  421154:	mov    edi,0x45257098
  421159:	aaa    
  42115a:	lods   al,BYTE PTR ds:[esi]
  42115b:	les    esi,FWORD PTR [ebp-0x1b]
  42115e:	fmul   DWORD PTR [ecx]
  421160:	lahf   
  421161:	mov    cl,0xac
  421163:	cmp    edx,DWORD PTR [ebp+0x2]
  421166:	sub    BYTE PTR [edi-0x21d06a01],dl
  42116c:	xlat   BYTE PTR ds:[ebx]
  42116d:	ja     0x4211bf
  42116f:	mov    dh,0xfe
  421171:	sbb    al,0x5f
  421173:	mov    bl,0xe4
  421175:	scas   eax,DWORD PTR es:[edi]
  421176:	imul   eax,DWORD PTR [ecx],0xffffffa1
  421179:	fisttp DWORD PTR [ebx]
  42117b:	popa   
  42117c:	(bad)  
  42117d:	mov    edx,0xc66cd3ec
  421182:	sbb    al,0x61
  421184:	mov    dh,0x19
  421186:	push   edx
  421187:	sbb    al,0xec
  421189:	sahf   
  42118a:	fst    QWORD PTR [esi-0x60]
  42118d:	push   esi
  42118e:	bswap  ebx
  421190:	fwait
  421191:	push   esi
  421192:	test   bh,0x3d
  421195:	aaa    
  421196:	pop    esp
  421197:	(bad)  
  421198:	bound  esp,QWORD PTR [esi+0x6c]
  42119b:	pop    ecx
  42119c:	inc    ecx
  42119d:	pop    ebx
  42119e:	push   0xffffffbb
  4211a0:	push   ecx
  4211a1:	fcom   DWORD PTR [ecx]
  4211a3:	nop
  4211a4:	xor    BYTE PTR [ecx+0x1260f668],0x6d
  4211ab:	cmp    eax,0x6b36e3c9
  4211b0:	retf   0x65e8
  4211b3:	repz sbb al,0x66
  4211b6:	(bad)  
  4211b7:	shr    DWORD PTR [ebx-0x24d80319],0x60
  4211be:	dec    ecx
  4211bf:	in     al,0x44
  4211c1:	xchg   ebp,eax
  4211c2:	jp     0x42116f
  4211c4:	(bad)  
  4211c5:	mov    eax,ds:0x7c32fc42
  4211ca:	jecxz  0x42121b
  4211cc:	mov    edx,0x982cdb20
  4211d1:	jbe    0x4211e4
  4211d3:	push   0x1d
  4211d5:	loopne 0x42122c
  4211d7:	fld    TBYTE PTR [edx+0x6dc9d1d0]
  4211dd:	in     eax,dx
  4211de:	jp     0x42122c
  4211e0:	pop    esp
  4211e1:	shl    dh,0xc3
  4211e4:	or     eax,ecx
  4211e6:	push   es
  4211e7:	push   esi
  4211e8:	retf   0x6598
  4211eb:	ficomp DWORD PTR [ecx]
  4211ed:	test   al,0xee
  4211ef:	push   cs
  4211f0:	pop    ecx
  4211f1:	das    
  4211f2:	pop    es
  4211f3:	or     BYTE PTR [edi+ecx*1-0x67253000],dl
  4211fa:	jae    0x421257
  4211fc:	mov    bh,0xc3
  4211fe:	popa   
  4211ff:	inc    edx
  421200:	cwde   
  421201:	cmp    ecx,DWORD PTR [ebx+0xa]
  421204:	jnp    0x42124d
  421206:	test   DWORD PTR [eax+edx*4-0x2c3735c9],esi
  42120d:	or     DWORD PTR [ebp-0x7facdbe8],ecx
  421213:	pop    eax
  421214:	pop    ss
  421215:	and    al,0x1e
  421217:	jno    0x4211df
  421219:	jno    0x4211dd
  42121b:	mov    dh,0x92
  42121d:	dec    edi
  42121e:	dec    esi
  42121f:	pop    eax
  421220:	jg     0x4211cf
  421222:	mov    esi,0xa90433b7
  421227:	ret    0x5796
  42122a:	jecxz  0x42122b
  42122c:	and    al,0x2a
  42122e:	call   0xc982f700
  421233:	xor    eax,0x722a6e5c
  421238:	cli    
  421239:	pop    edx
  42123a:	dec    edx
  42123b:	mov    cl,0xd9
  42123d:	std    
  42123e:	(bad)  
  42123f:	popa   
  421240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421241:	call   0x627b2288
  421246:	addr16 shl al,cl
  421249:	in     al,dx
  42124a:	cmp    esi,edi
  42124c:	pop    ss
  42124d:	repz out dx,eax
  42124f:	shl    DWORD PTR [esi+0x22],cl
  421252:	adc    al,0x7c
  421254:	and    DWORD PTR ds:0x37bec049,0xffffffb5
  42125b:	xor    edi,ebx
  42125d:	in     al,dx
  42125e:	mov    al,0xfd
  421260:	mov    ebp,0x8b9a783d
  421265:	cld    
  421266:	stos   BYTE PTR es:[edi],al
  421267:	adc    ah,bh
  421269:	cmp    bl,BYTE PTR ds:0xd283d19
  42126f:	js     0x421269
  421271:	loope  0x421273
  421273:	cmp    cl,BYTE PTR [edx+ebp*2-0x6c744744]
  42127a:	and    al,0xda
  42127c:	fcomp  DWORD PTR [eax+0x13]
  42127f:	jo     0x4212c0
  421281:	(bad)  
  421282:	imul   eax,DWORD PTR [eax+0x76],0xe1b4f347
  421289:	xchg   BYTE PTR [ebp-0x64],ch
  42128c:	inc    edi
  42128d:	or     DWORD PTR [esi+0x1d],eax
  421290:	cmp    esi,DWORD PTR [ecx+0x46]
  421293:	hlt    
  421294:	cmc    
  421295:	repnz cmp BYTE PTR [bx+0x23],ch
  42129a:	dec    ebp
  42129b:	push   cs
  42129c:	test   dl,al
  42129e:	sbb    eax,0x39431860
  4212a3:	push   ecx
  4212a4:	retf   0x6a03
  4212a7:	pop    eax
  4212a8:	jle    0x42131f
  4212aa:	fwait
  4212ab:	lods   eax,DWORD PTR ds:[esi]
  4212ac:	cmp    dh,bh
  4212ae:	(bad)  
  4212b0:	repnz das 
  4212b2:	in     al,dx
  4212b3:	std    
  4212b4:	int3   
  4212b5:	in     eax,dx
  4212b6:	lea    edi,[edx+0x3f06ce2b]
  4212bc:	xchg   BYTE PTR [eax-0x32],ch
  4212bf:	cmp    al,0x63
  4212c1:	push   ss
  4212c2:	repz pop eax
  4212c4:	or     DWORD PTR [ebx],0x748540bc
  4212ca:	pop    ebx
  4212cb:	xchg   ebp,eax
  4212cc:	sar    DWORD PTR [eax],1
  4212ce:	imul   edx,DWORD PTR [ecx+0x61cc6a34],0x4c
  4212d5:	mov    ds:0xb65243cc,eax
  4212da:	xchg   esp,eax
  4212db:	fadd   QWORD PTR [bp+0x4f8b]
  4212e0:	inc    eax
  4212e1:	xlat   BYTE PTR ds:[ebx]
  4212e2:	(bad)  
  4212e3:	push   esp
  4212e4:	mov    al,ds:0xf55e37f8
  4212e9:	cmp    al,0x3c
  4212eb:	jbe    0x42134d
  4212ed:	xchg   ecx,eax
  4212ee:	in     al,dx
  4212ef:	pop    es
  4212f0:	shl    DWORD PTR [ebx+ecx*1-0x21],1
  4212f4:	fsub   QWORD PTR [edx]
  4212f6:	xlat   BYTE PTR ds:[ebx]
  4212f7:	jnp    0x4212d1
  4212f9:	retf   0x7d2f
  4212fc:	lods   eax,DWORD PTR ds:[esi]
  4212fd:	push   eax
  4212fe:	popf   
  4212ff:	scas   eax,DWORD PTR es:[edi]
  421300:	(bad)  
  421301:	or     eax,0x2939da9c
  421306:	add    ebp,ebp
  421308:	xchg   esp,eax
  421309:	iret   
  42130a:	ja     0x42137f
  42130c:	loope  0x421338
  42130e:	xchg   BYTE PTR [edx+0x7a589cc8],dh
  421314:	es adc al,0x69
  421317:	popf   
  421318:	ret    0x867
  42131b:	mov    edx,esp
  42131d:	nop
  42131e:	pop    esi
  42131f:	dec    esi
  421320:	mov    bl,BYTE PTR [eax-0x43be7830]
  421326:	stos   BYTE PTR es:[edi],al
  421327:	iret   
  421328:	jp     0x42131d
  42132a:	adc    ecx,DWORD PTR [edi+esi*8-0x6cc681ab]
  421331:	push   edx
  421332:	(bad)  
  421333:	out    dx,al
  421334:	mov    DWORD PTR [ecx+edx*8],edx
  421337:	cld    
  421338:	gs mov dl,0x1
  42133b:	lods   al,BYTE PTR ds:[esi]
  42133c:	fmul   QWORD PTR [edi]
  42133e:	ror    DWORD PTR [esi+0x63ad597a],1
  421344:	jo     0x421351
  421346:	out    0xa3,eax
  421348:	lahf   
  421349:	stos   DWORD PTR es:[edi],eax
  42134a:	cmp    DWORD PTR [esi],ebx
  42134c:	mov    edi,0xa3f56d1c
  421351:	jne    0x421393
  421353:	in     eax,0xda
  421355:	fsub   st(3),st
  421357:	add    al,0xbc
  421359:	or     DWORD PTR [edx+0x2602243d],0xcce33614
  421363:	sbb    bl,ah
  421365:	xchg   ecx,eax
  421366:	lods   eax,DWORD PTR ds:[esi]
  421367:	test   BYTE PTR [ebp-0x5382cfb],0x16
  42136e:	jp     0x42132a
  421370:	mov    ch,0x1f
  421372:	repz in al,0x97
  421375:	sub    DWORD PTR [edi],ebp
  421377:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421379:	lahf   
  42137a:	push   0xffffff8b
  42137c:	fcomp  st(7)
  42137e:	fdiv   QWORD PTR [ebx]
  421380:	in     eax,0x5b
  421382:	sbb    BYTE PTR [edi+0x588e29a5],cl
  421388:	mov    edi,0x72dc2a31
  42138d:	jmp    0x543e0e2
  421392:	adc    eax,0x8071dcd7
  421397:	loop   0x421335
  421399:	jl     0x42136a
  42139b:	iret   
  42139c:	aam    0x94
  42139e:	je     0x42140a
  4213a0:	mov    ch,0xe1
  4213a2:	mov    ds:0xb6c40e35,al
  4213a7:	mov    ebx,0x2c49c66e
  4213ac:	xor    edx,ecx
  4213ae:	(bad)  
  4213b0:	add    ah,cl
  4213b2:	div    DWORD PTR [ecx]
  4213b4:	iret   
  4213b5:	mov    bl,dl
  4213b7:	inc    BYTE PTR [edx]
  4213b9:	shl    BYTE PTR [eax+0x10f29e78],0xa2
  4213c0:	rcl    bh,cl
  4213c2:	pushf  
  4213c3:	lods   eax,DWORD PTR ds:[esi]
  4213c4:	arpl   sp,bx
  4213c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213c7:	jle    0x42134c
  4213c9:	loop   0x4213d8
  4213cb:	xor    DWORD PTR [eax+0x2],esi
  4213ce:	dec    edx
  4213cf:	hlt    
  4213d0:	clc    
  4213d1:	leave  
  4213d2:	mov    cl,0x17
  4213d4:	xchg   edi,eax
  4213d5:	shr    eax,cl
  4213d7:	mov    ch,0x5f
  4213d9:	adc    BYTE PTR [ebx+ebp*4-0x25],dl
  4213dd:	leave  
  4213de:	call   0x6eb8:0x9891641f
  4213e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213e6:	add    ah,ah
  4213e8:	das    
  4213e9:	xchg   ebp,eax
  4213ea:	int    0xcc
  4213ec:	jb     0x4213e7
  4213ee:	cmp    eax,0x6c904d55
  4213f3:	fwait
  4213f4:	outs   dx,DWORD PTR ds:[esi]
  4213f5:	inc    ebx
  4213f6:	xchg   BYTE PTR [ebp-0x21],al
  4213f9:	jmp    0xb61bc166
  4213fe:	sbb    eax,0x8ef67ff5
  421403:	sbb    eax,DWORD PTR [ecx-0x7424be20]
  421409:	icebp  
  42140a:	jbe    0x4213e2
  42140c:	clc    
  42140d:	neg    BYTE PTR [esp+ebx*4+0x1ca29729]
  421414:	in     al,0xd
  421416:	fwait
  421417:	jb     0x4213e8
  421419:	nop
  42141a:	lods   ax,WORD PTR ds:[esi]
  42141c:	add    eax,0x19b145b8
  421421:	pop    ss
  421422:	(bad)  
  421423:	out    0x1,eax
  421425:	push   ebp
  421426:	repz sbb BYTE PTR [eax],al
  421429:	mov    BYTE PTR [edx+ebp*4+0x71],al
  42142d:	pop    edx
  42142e:	fwait
  42142f:	fwait
  421430:	stos   DWORD PTR es:[edi],eax
  421431:	rcr    DWORD PTR [ecx],cl
  421433:	dec    ebx
  421434:	xchg   esp,eax
  421435:	mov    bl,bl
  421437:	and    bh,BYTE PTR [esi]
  421439:	mov    bh,0xde
  42143b:	pop    ds
  42143c:	jbe    0x421418
  42143e:	push   ebp
  42143f:	call   0x56bd:0x77f3a630
  421446:	not    DWORD PTR [ebp+0xd46fe4d]
  42144c:	outs   dx,BYTE PTR ds:[esi]
  42144d:	stos   DWORD PTR es:[edi],eax
  42144e:	mov    ebx,0xf3a0425b
  421453:	sub    dh,0xee
  421456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421457:	push   eax
  421458:	push   cs
  421459:	cdq    
  42145a:	popa   
  42145b:	call   0x6104743c
  421460:	in     eax,dx
  421461:	xchg   BYTE PTR [ebp-0xcc54999],ah
  421467:	popf   
  421468:	or     ecx,DWORD PTR [eax]
  42146a:	jp     0x421484
  42146c:	int    0x37
  42146e:	repnz sbb al,0xe0
  421471:	mov    dh,0x33
  421473:	xchg   esp,eax
  421474:	sbb    al,0x13
  421476:	loop   0x42147d
  421478:	xor    eax,0x85db2b24
  42147d:	fs lock std 
  421480:	loop   0x4214a2
  421482:	in     al,0x9e
  421484:	pusha  
  421485:	imul   ebp,ebx,0xa776949a
  42148b:	pop    edx
  42148c:	jp     0x421490
  42148e:	pop    edi
  42148f:	in     al,dx
  421490:	pop    ss
  421491:	jge    0x421480
  421493:	hlt    
  421494:	jno    0x421437
  421496:	inc    ebp
  421497:	loope  0x421429
  421499:	data16 aad 0x92
  42149c:	into   
  42149d:	mov    ah,0x41
  42149f:	fild   DWORD PTR [ecx+0x7a72d8df]
  4214a5:	inc    esi
  4214a6:	je     0x42147e
  4214a8:	retf   0x4976
  4214ab:	adc    DWORD PTR [ebp+0x3d053ba8],esi
  4214b1:	ret    
  4214b2:	sar    BYTE PTR ds:[ebp+ecx*1+0x21],cl
  4214b7:	mov    dh,0xa2
  4214b9:	scas   al,BYTE PTR es:[edi]
  4214ba:	xor    ch,dl
  4214bc:	pop    edx
  4214bd:	cmp    eax,0x4b4ccea9
  4214c2:	adc    eax,0x2f083324
  4214c7:	(bad)  
  4214c8:	push   eax
  4214c9:	daa    
  4214ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214cb:	xchg   ecx,eax
  4214cc:	je     0x4214f7
  4214ce:	stos   DWORD PTR es:[edi],eax
  4214cf:	fnstenv [eax-0x29]
  4214d2:	mov    esi,0x436b58c8
  4214d7:	(bad)  
  4214d8:	xchg   esp,eax
  4214d9:	imul   ecx,DWORD PTR [edi],0x29
  4214dc:	dec    BYTE PTR ds:0xe0934845
  4214e2:	enter  0xb53e,0x22
  4214e6:	and    al,0x2f
  4214e8:	gs stc 
  4214ea:	(bad)  
  4214eb:	outs   dx,DWORD PTR ds:[esi]
  4214ec:	(bad)  [esi-0x25]
  4214ef:	test   DWORD PTR [ebx],ebx
  4214f1:	xchg   edi,eax
  4214f2:	jg     0x4214ef
  4214f4:	fild   WORD PTR [esi+0x4ee38e0c]
  4214fa:	mov    DWORD PTR [edx+0x6c6ce4fb],eax
  421500:	in     al,0x19
  421502:	shl    BYTE PTR [edi],cl
  421504:	imul   ebx,eax,0x91010c3d
  42150a:	push   es
  42150b:	or     BYTE PTR ds:0xb08150bb,dl
  421511:	sbb    ebp,edi
  421513:	sub    al,0x7f
  421515:	mov    edi,0x61b60586
  42151a:	or     eax,0x1aa3e0b2
  42151f:	jo     0x421524
  421521:	or     eax,0xe64ec01c
  421526:	aaa    
  421527:	sbb    dh,BYTE PTR [ecx+0x4]
  42152a:	icebp  
  42152b:	in     eax,0x5b
  42152d:	std    
  42152e:	mov    edi,0xe6c4e95e
  421533:	out    0xb3,al
  421535:	cmc    
  421536:	cmp    bh,cl
  421538:	(bad)  
  421539:	cmp    esp,DWORD PTR [ecx]
  42153b:	jb     0x4214d9
  42153d:	test   al,0x41
  42153f:	pop    esi
  421540:	xchg   ebp,eax
  421541:	dec    eax
  421542:	cmc    
  421543:	test   dh,bl
  421545:	addr16 xchg ebx,eax
  421547:	test   BYTE PTR [edx+0x2bb816c0],bl
  42154d:	sbb    eax,0x6996069b
  421552:	repnz test eax,0x1a93d686
  421558:	cmp    al,0x97
  42155a:	jnp    0x421510
  42155c:	cs mov dl,0x70
  42155f:	push   ebx
  421560:	cwde   
  421561:	mov    ch,0xc
  421563:	jp     0x421562
  421565:	ss ret 
  421567:	adc    ah,ch
  421569:	jp     0x4215e7
  42156b:	adc    dl,BYTE PTR [eax]
  42156d:	mov    dl,0x5c
  42156f:	test   DWORD PTR [edi],0x7d1986e7
  421575:	(bad)  
  421576:	pop    esi
  421577:	test   cl,dl
  421579:	inc    edx
  42157a:	jnp    0x42156f
  42157c:	(bad)  
  42157d:	int3   
  42157e:	test   eax,0x132929a
  421583:	sub    BYTE PTR [esi+0x51697c07],dl
  421589:	pop    edx
  42158a:	sti    
  42158b:	sahf   
  42158c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42158d:	cld    
  42158e:	(bad)  
  42158f:	fcmovne st,st(3)
  421591:	hlt    
  421592:	int    0x9
  421594:	das    
  421595:	in     eax,dx
  421596:	mov    esi,0xf0105a4
  42159b:	dec    eax
  42159c:	stc    
  42159d:	adc    dh,ah
  42159f:	xor    eax,0x9903d94d
  4215a4:	push   ebp
  4215a5:	jmp    0xc73b:0xfd8ded9b
  4215ac:	dec    ebp
  4215ad:	out    0xb0,eax
  4215af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b0:	push   ss
  4215b1:	ret    
  4215b2:	adc    eax,ebp
  4215b4:	repnz inc ebp
  4215b6:	es inc ebx
  4215b8:	scas   al,BYTE PTR es:[edi]
  4215b9:	xchg   ebx,eax
  4215ba:	and    DWORD PTR [ebx+eiz*8],edx
  4215bd:	mov    ebx,0x4c3d0461
  4215c2:	adc    DWORD PTR [eax+edx*8-0x59],0x1
  4215c7:	call   0x30a7:0x1fdb0f24
  4215ce:	mov    ds:0x92e96647,al
  4215d3:	xchg   esi,eax
  4215d4:	(bad)  
  4215d5:	outs   dx,BYTE PTR ds:[esi]
  4215d6:	and    ecx,0x44
  4215d9:	dec    ebx
  4215da:	popw   es
  4215dc:	xor    al,0x9a
  4215de:	test   al,dh
  4215e0:	loop   0x4215a3
  4215e2:	ja     0x42165f
  4215e4:	add    eax,0x1ffd51ff
  4215e9:	popa   
  4215ea:	je     0x42158b
  4215ec:	ret    0x2a40
  4215ef:	mul    edi
  4215f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215f2:	lods   eax,DWORD PTR ds:[esi]
  4215f3:	bound  edx,QWORD PTR [ecx]
  4215f5:	mov    al,ds:0x2fb44973
  4215fa:	jne    0x421630
  4215fc:	jae    0x4215dd
  4215fe:	fld1   
  421600:	stc    
  421601:	lods   al,BYTE PTR ds:[esi]
  421602:	aaa    
  421603:	mov    ds:0x9834ae59,al
  421608:	xchg   BYTE PTR [ebx+0x7e],bh
  42160b:	scas   eax,DWORD PTR es:[edi]
  42160c:	fnstcw WORD PTR ds:0xeee5db00
  421612:	faddp  st(3),st
  421614:	xor    DWORD PTR [ecx+0x1c817ac1],eax
  42161a:	sub    DWORD PTR [edi],ebp
  42161c:	adc    dl,BYTE PTR ds:0x6ca24320
  421622:	out    0xec,al
  421624:	inc    esi
  421625:	aad    0xe
  421627:	xchg   ecx,eax
  421628:	mov    DWORD PTR [eax-0x57],esp
  42162b:	jge    0x4215d5
  42162d:	dec    esp
  42162e:	iret   
  42162f:	xor    esp,DWORD PTR [ebx+0x5b565630]
  421635:	rcr    al,0xbe
  421638:	(bad)  
  421639:	mov    dl,0x5b
  42163b:	cmc    
  42163c:	shr    ebx,cl
  42163e:	xchg   edi,eax
  42163f:	sti    
  421640:	daa    
  421641:	and    DWORD PTR ds:0xe9742b4a,ecx
  421647:	inc    ebx
  421648:	xchg   ebx,ecx
  42164a:	ja     0x421638
  42164c:	inc    ebx
  42164d:	inc    edx
  42164e:	xlat   BYTE PTR ds:[ebx]
  42164f:	push   es
  421650:	inc    edx
  421651:	mov    eax,ds:0xe507cb62
  421656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421657:	jo     0x4216b1
  421659:	mov    ebp,0xf2c093bf
  42165e:	mov    ch,0xd4
  421660:	inc    esp
  421661:	mov    esp,0x91e3975a
  421666:	test   DWORD PTR [esi-0x46],eax
  421669:	add    al,0xeb
  42166b:	clc    
  42166c:	mov    ds:0x25dd24c,eax
  421671:	xor    ah,BYTE PTR [esi]
  421673:	mov    ch,0x6b
  421675:	add    bh,bl
  421677:	cmp    bh,BYTE PTR [edx-0x42cc17b5]
  42167d:	xlat   BYTE PTR ds:[ebx]
  42167e:	add    al,0xe3
  421680:	mov    bl,0xdf
  421682:	mov    eax,0xdd67b963
  421687:	xchg   ebp,eax
  421688:	jmp    0x7033fbb6
  42168d:	mov    edx,DWORD PTR ds:[eax+0x517a5e43]
  421694:	enter  0x8f23,0xcb
  421698:	sar    BYTE PTR [esi],0xe8
  42169b:	xor    dh,cl
  42169d:	(bad)
  4216a0:	cmp    al,0xd7
  4216a2:	nop
  4216a3:	and    edi,DWORD PTR [ecx-0x5f]
  4216a6:	mov    ah,0x2e
  4216a8:	mov    bh,0xe7
  4216aa:	mov    ss,ebp
  4216ac:	fist   DWORD PTR [edx]
  4216ae:	leave  
  4216af:	sbb    DWORD PTR [edx+0x49],eax
  4216b2:	sbb    al,0xc6
  4216b4:	push   0x54
  4216b6:	js     0x4216b7
  4216b8:	outs   dx,BYTE PTR ds:[esi]
  4216b9:	xor    ah,BYTE PTR [edi+0x5d]
  4216bc:	(bad)  
  4216bd:	dec    al
  4216bf:	lods   al,BYTE PTR ds:[esi]
  4216c0:	mov    ?,ecx
  4216c2:	mov    WORD PTR [edi+0x57],?
  4216c5:	clc    
  4216c6:	fyl2x  
  4216c8:	in     al,0x35
  4216ca:	es xchg edi,eax
  4216cc:	scas   al,BYTE PTR es:[edi]
  4216cd:	js     0x4216fa
  4216cf:	push   cs
  4216d0:	pop    ecx
  4216d1:	cmp    al,0xb
  4216d3:	mov    bh,0x14
  4216d5:	imul   eax,DWORD PTR [esi-0x3ad488bc],0xffffff94
  4216dc:	mov    DWORD PTR [ecx+0x44],esi
  4216df:	leave  
  4216e0:	mov    bl,0x9f
  4216e2:	push   cs
  4216e3:	dec    ebx
  4216e4:	pop    eax
  4216e5:	pop    esi
  4216e6:	gs cmp al,0x5b
  4216e9:	jg     0x421672
  4216eb:	dec    ebx
  4216ec:	mov    esi,0x4ef3c5b7
  4216f1:	outs   dx,BYTE PTR ds:[esi]
  4216f2:	jo     0x421747
  4216f4:	pop    ebx
  4216f5:	mov    esp,0x3bba810
  4216fa:	out    0xa3,eax
  4216fc:	push   cs
  4216fd:	jge    0x421693
  4216ff:	icebp  
  421700:	fadd   QWORD PTR [esi-0xb02c1b3]
  421706:	sahf   
  421707:	sbb    eax,0xb77b0ca1
  42170c:	cmp    eax,0x75503475
  421711:	cli    
  421712:	xchg   ecx,eax
  421713:	lods   al,BYTE PTR cs:[esi]
  421715:	adc    DWORD PTR [ecx-0x77d7fba1],eax
  42171b:	mov    edx,edx
  42171d:	(bad)  
  42171f:	into   
  421720:	leave  
  421721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421722:	push   edx
  421723:	int    0x8f
  421725:	jmp    0xd59d6f1e
  42172a:	fs retf 0x958e
  42172e:	sbb    esp,DWORD PTR [ebp+0x7d]
  421731:	outs   dx,DWORD PTR ds:[esi]
  421732:	adc    eax,0x140e52cc
  421737:	std    
  421738:	adc    al,0x93
  42173a:	jl     0x421746
  42173c:	call   0x9607:0x433c116d
  421743:	rol    ah,cl
  421745:	adc    al,0x4c
  421747:	xchg   edi,eax
  421748:	jb     0x42174e
  42174a:	push   0x36
  42174c:	pop    DWORD PTR [ebx]
  42174e:	fimul  DWORD PTR [ecx+0x25]
  421751:	mov    ebp,0x1c4b0b3d
  421756:	mov    ds:0xba02365b,al
  42175b:	dec    ecx
  42175c:	bound  edx,QWORD PTR [ebx]
  42175e:	mov    bl,0x26
  421760:	sbb    DWORD PTR [edi-0x58],ecx
  421763:	daa    
  421764:	in     eax,dx
  421765:	dec    ebp
  421766:	sub    dl,BYTE PTR [eax+0x79]
  421769:	xchg   esi,eax
  42176a:	sahf   
  42176b:	xchg   ebp,eax
  42176c:	or     al,0xf7
  42176e:	std    
  42176f:	(bad)  
  421770:	stos   BYTE PTR es:[edi],al
  421771:	inc    ebx
  421772:	and    al,0xe6
  421774:	cdq    
  421775:	scas   al,BYTE PTR es:[edi]
  421776:	ss rdmsr 
  421779:	in     al,0x67
  42177b:	aam    0xb7
  42177d:	aam    0x50
  42177f:	dec    DWORD PTR [ecx]
  421781:	xchg   ebp,eax
  421782:	sub    DWORD PTR [edi-0x76],esi
  421785:	add    ah,dl
  421787:	and    eax,0xf33e1242
  42178c:	xor    dl,BYTE PTR [edx+0x37]
  42178f:	sub    BYTE PTR [ecx+eiz*2-0xf],al
  421793:	ja     0x421787
  421795:	ins    BYTE PTR es:[edi],dx
  421796:	mov    bh,0x7a
  421798:	cmp    eax,0xcdfea82c
  42179d:	das    
  42179e:	loope  0x421796
  4217a0:	sub    esi,DWORD PTR [ebp+0x277aff55]
  4217a6:	lahf   
  4217a7:	aas    
  4217a8:	push   edi
  4217a9:	xchg   edi,eax
  4217aa:	and    DWORD PTR [edx-0x22],0x1c
  4217ae:	retf   0xcfd3
  4217b1:	(bad)  
  4217b2:	outs   dx,DWORD PTR ds:[esi]
  4217b3:	icebp  
  4217b4:	xchg   ebp,eax
  4217b5:	addr16 clc 
  4217b7:	fsubr  DWORD PTR [ebx+0x4b]
  4217ba:	leave  
  4217bb:	icebp  
  4217bc:	ins    BYTE PTR es:[edi],dx
  4217bd:	lods   al,BYTE PTR ds:[esi]
  4217be:	cdq    
  4217bf:	and    al,0xc1
  4217c1:	cmp    DWORD PTR [edx+0x58],ebx
  4217c4:	mov    ecx,0xb4c3c2af
  4217c9:	mov    bl,0x6f
  4217cb:	sub    eax,0x9bcd757f
  4217d0:	scas   al,BYTE PTR es:[edi]
  4217d1:	mov    bh,BYTE PTR [ebx-0x470d76f8]
  4217d7:	mov    ecx,0xa15e6f02
  4217dc:	cmc    
  4217dd:	jp     0x4217a5
  4217df:	dec    ecx
  4217e0:	cwde   
  4217e1:	ret    0x442f
  4217e4:	addr16 mov ecx,0xecaae92a
  4217ea:	dec    edx
  4217eb:	sahf   
  4217ec:	std    
  4217ed:	mov    ds:0x52bfeae0,eax
  4217f2:	int    0x7c
  4217f4:	push   ecx
  4217f5:	in     eax,0x7e
  4217f7:	and    ch,BYTE PTR [ecx]
  4217f9:	scas   eax,DWORD PTR es:[edi]
  4217fa:	(bad)  
  4217fb:	mov    fs,WORD PTR [ebp-0x7]
  4217fe:	dec    edi
  4217ff:	xor    ch,BYTE PTR [ebx+eiz*1]
  421802:	jmp    0x364453a3
  421807:	sbb    BYTE PTR [ecx-0x63],dl
  42180a:	stc    
  42180b:	fdiv   QWORD PTR [esp+eiz*4]
  42180e:	dec    ebp
  42180f:	std    
  421810:	pop    ds
  421811:	cmp    eax,0x2641779
  421816:	mov    cl,0x6c
  421818:	mov    edi,0x8f7391a0
  42181d:	lods   eax,DWORD PTR ds:[esi]
  42181e:	je     0x421812
  421820:	lahf   
  421821:	loopne 0x4217eb
  421823:	jns    0x4217d1
  421825:	fnstsw WORD PTR [ebx-0x38]
  421828:	frstor [ecx]
  42182a:	sbb    bl,BYTE PTR fs:[eax+0x249d7484]
  421831:	inc    esi
  421832:	mov    edx,0x8c54f20d
  421837:	int3   
  421838:	inc    esp
  421839:	push   0xad454cc2
  42183e:	call   0x5aec7e5f
  421843:	stc    
  421844:	mov    ebx,0x5f6e1bdd
  421849:	or     eax,0x74d7ecdc
  42184e:	in     al,dx
  42184f:	inc    esp
  421850:	jecxz  0x4217f2
  421852:	mov    al,ds:0x9ce9e15
  421857:	nop
  421858:	inc    ebp
  421859:	rol    DWORD PTR [ecx-0x6f55e6d5],1
  42185f:	dec    edi
  421860:	mov    edx,0xd71dae6
  421865:	push   edx
  421866:	clc    
  421867:	and    ecx,0xe00dfbaf
  42186d:	retf   
  42186e:	mov    ds:0x846ff0ac,eax
  421873:	or     DWORD PTR [ebx-0x66],eax
  421876:	data16 mov ds:0x7fbba427,al
  42187c:	loopne 0x4218bc
  42187e:	mov    al,ds:0x1b8242ef
  421883:	stos   DWORD PTR es:[edi],eax
  421884:	push   0x1c1b63ee
  421889:	sahf   
  42188a:	sub    al,BYTE PTR [edi+0x3b09aee1]
  421890:	pop    esi
  421891:	push   0x451acc6d
  421896:	jae    0x42188d
  421898:	sbb    eax,0xd4ea14cf
  42189d:	push   eax
  42189e:	cmc    
  42189f:	jne    0x4218be
  4218a1:	sar    DWORD PTR [ecx+ebp*1+0x26f67110],1
  4218a8:	aaa    
  4218a9:	jmp    0x421839
  4218ab:	xchg   esp,eax
  4218ac:	aad    0x0
  4218ae:	leave  
  4218af:	jge    0x421884
  4218b1:	popa   
  4218b2:	jae    0x4218fd
  4218b4:	pop    ecx
  4218b5:	scas   eax,DWORD PTR es:[edi]
  4218b6:	sar    dh,0x9f
  4218b9:	rcl    DWORD PTR [esi-0x7b],0xaf
  4218bd:	xor    BYTE PTR [ebx-0x2c3da210],0xd3
  4218c4:	cmp    al,0x38
  4218c6:	sub    esi,esi
  4218c8:	sub    DWORD PTR [esi-0x59],edx
  4218cb:	hlt    
  4218cc:	mov    ds:0xd19bc1d5,al
  4218d1:	pop    ebx
  4218d2:	inc    esi
  4218d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d4:	inc    edi
  4218d5:	lds    esi,FWORD PTR [ebx+ebp*4+0x4fb8a281]
  4218dc:	stos   BYTE PTR es:[edi],al
  4218dd:	test   eax,0xdef220da
  4218e2:	cwde   
  4218e3:	shl    DWORD PTR [esi-0x46],0x96
  4218e7:	sub    BYTE PTR ds:0x921d4632,ah
  4218ed:	sub    BYTE PTR [ecx-0x56],dl
  4218f0:	push   es
  4218f1:	xor    BYTE PTR [edi-0x55ba7f67],dh
  4218f7:	addr16 nop
  4218f9:	sub    ebx,eax
  4218fb:	mov    gs,WORD PTR [edx+0x33f62a86]
  421901:	cmc    
  421902:	pop    edx
  421903:	mov    dh,0xef
  421905:	in     eax,dx
  421906:	jle    0x421962
  421908:	pop    edi
  421909:	and    ch,BYTE PTR [esi+edi*1]
  42190c:	clc    
  42190d:	dec    esi
  42190e:	fs shl edi,0x61
  421912:	mov    cl,0x72
  421914:	ins    DWORD PTR es:[edi],dx
  421915:	cmp    eax,0x8a2bfedc
  42191a:	push   ebx
  42191b:	cmc    
  42191c:	(bad)  
  42191d:	xchg   ebp,eax
  42191e:	add    BYTE PTR es:[edi],dh
  421921:	adc    edi,DWORD PTR [eax]
  421923:	data16 jns 0x421954
  421926:	cwde   
  421927:	fsubr  st,st(5)
  421929:	mov    bl,0xfa
  42192b:	cmp    ebp,esp
  42192d:	pop    edi
  42192e:	addr16 push edx
  421930:	sbb    DWORD PTR [eax],ebx
  421932:	jmp    0x50492a32
  421937:	fdivr  DWORD PTR [eax-0x73]
  42193a:	adc    DWORD PTR [ecx],edx
  42193c:	dec    edx
  42193e:	push   0xa9639040
  421943:	mov    ah,0xe7
  421945:	mov    cl,0xbd
  421947:	push   esi
  421948:	mov    ebp,0xfc8a010b
  42194d:	cmp    bl,bh
  42194f:	pop    esi
  421950:	xor    dl,BYTE PTR [ebx+0x1fec0ef2]
  421956:	inc    ebp
  421957:	mov    al,0x81
  421959:	mov    dh,BYTE PTR [eax-0x7a58677d]
  42195f:	push   eax
  421960:	in     al,dx
  421961:	add    ecx,0xee8e8f41
  421967:	mov    eax,ds:0xfc550820
  42196c:	imul   edx,DWORD PTR [ecx+0x4a4b4f50],0xffffffa7
  421973:	or     al,0xc
  421975:	dec    esp
  421976:	sub    BYTE PTR [esi-0x41],al
  421979:	fldcw  WORD PTR ds:0x6811f60e
  42197f:	mov    al,ds:0x106aace
  421984:	mov    ch,0x22
  421986:	call   0xeb418319
  42198b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42198c:	scas   al,BYTE PTR es:[edi]
  42198d:	mov    ebx,0x1845651b
  421992:	adc    dh,BYTE PTR [edx-0x7d]
  421995:	aas    
  421996:	mov    esi,0xf967fba5
  42199b:	mov    edx,0xc06e7df
  4219a0:	sti    
  4219a1:	and    DWORD PTR [ecx+0x3e],0x530d5e57
  4219a8:	cmc    
  4219a9:	push   es
  4219aa:	sar    BYTE PTR [ebx+ecx*4],0x6b
  4219ae:	mov    cl,0x70
  4219b0:	pop    ebp
  4219b1:	or     bh,ah
  4219b3:	jo     0x421984
  4219b5:	xor    ah,al
  4219b7:	fisub  WORD PTR gs:[eax+0x5f]
  4219bb:	sahf   
  4219bc:	adc    BYTE PTR [edx],cl
  4219be:	test   DWORD PTR [edx-0x358a72f8],ebx
  4219c4:	je     0x421965
  4219c6:	enter  0x73a4,0xa1
  4219ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219cb:	add    DWORD PTR [eax+0x3fb75fc8],0xd054c7cb
  4219d5:	inc    esi
  4219d6:	pushf  
  4219d7:	hlt    
  4219d8:	fdivr  DWORD PTR [edi-0x23]
  4219db:	sbb    BYTE PTR [ebx-0x44],0x1
  4219df:	mov    ah,0x91
  4219e1:	pop    edx
  4219e2:	retf   0xfd6d
  4219e5:	and    BYTE PTR [ebp+0x470b52f1],ch
  4219eb:	(bad)  
  4219ec:	mov    ebp,0x94625fdb
  4219f1:	sbb    eax,0xdf3dae5b
  4219f6:	dec    edi
  4219f7:	imul   ecx,DWORD PTR [esi],0xffffffd3
  4219fa:	pusha  
  4219fb:	mov    ds:0x80602fa5,al
  421a00:	imul   eax,DWORD PTR [edi],0x985d2dd0
  421a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a07:	lods   eax,DWORD PTR ds:[esi]
  421a08:	daa    
  421a09:	dec    esp
  421a0a:	xor    DWORD PTR [eax-0x56bef13f],esi
  421a10:	mov    bl,0xc0
  421a12:	push   edi
  421a13:	xor    DWORD PTR [ebp+0x4b],esi
  421a16:	sbb    al,0xe0
  421a18:	sub    dl,bh
  421a1a:	push   esp
  421a1b:	mov    WORD PTR [ebx],cs
  421a1d:	xchg   esp,eax
  421a1e:	add    al,0x20
  421a20:	(bad)  
  421a21:	enter  0xf7e4,0xa5
  421a25:	icebp  
  421a26:	dec    edi
  421a27:	in     al,dx
  421a28:	and    ah,dh
  421a2a:	pop    es
  421a2b:	test   DWORD PTR es:[ecx-0x47],ecx
  421a2f:	adc    al,0x12
  421a31:	rol    BYTE PTR [ebx-0x6232dc8a],0x7f
  421a38:	pop    ebx
  421a39:	ficomp DWORD PTR [ebx]
  421a3b:	fcmovu st,st(1)
  421a3d:	rol    cl,cl
  421a3f:	ret    0x62e5
  421a42:	add    DWORD PTR [ebp+0x399ec44b],eax
  421a48:	sub    ecx,edi
  421a4a:	sub    ch,0xce
  421a4d:	in     eax,0xae
  421a4f:	(bad)  
  421a50:	sbb    al,0xb5
  421a52:	pop    esp
  421a53:	fs out dx,al
  421a55:	push   0xffffffc7
  421a57:	es sbb al,0x10
  421a5a:	sub    al,0x40
  421a5c:	push   cs
  421a5d:	cmc    
  421a5e:	in     al,0xdf
  421a60:	or     BYTE PTR [ebx+0x54],ah
  421a63:	pushf  
  421a64:	xlat   BYTE PTR ds:[ebx]
  421a65:	xchg   edi,eax
  421a66:	mov    ecx,0xcb485dc0
  421a6b:	sub    al,0xf7
  421a6d:	xor    al,0x4a
  421a6f:	ins    DWORD PTR es:[edi],dx
  421a70:	push   ebp
  421a71:	adc    eax,0xc8dfc191
  421a76:	icebp  
  421a77:	setge  BYTE PTR [eax-0x2d3c987e]
  421a7e:	stos   BYTE PTR es:[edi],al
  421a7f:	or     BYTE PTR [ecx+0x33],bh
  421a82:	mov    ch,0x54
  421a84:	mov    eax,0x61533efa
  421a89:	jge    0x421a49
  421a8b:	call   DWORD PTR [ebx]
  421a8d:	ins    BYTE PTR es:[edi],dx
  421a8e:	push   ss
  421a8f:	test   eax,0x9f82da66
  421a94:	jg     0x421ad3
  421a96:	pop    ss
  421a97:	ud1    eax,DWORD PTR [edx-0x3fd589ed]
  421a9e:	lds    esi,FWORD PTR [edi+edx*1+0x8db2c25]
  421aa5:	jne    0x421b10
  421aa7:	xchg   BYTE PTR [ecx+0x2e4af92e],cl
  421aad:	arpl   bx,bx
  421aaf:	imul   esi,DWORD PTR [eax],0x31
  421ab2:	pop    ebp
  421ab3:	mov    al,0x82
  421ab5:	jbe    0x421abf
  421ab7:	iret   
  421ab8:	mov    ebx,0xf4786e5e
  421abd:	(bad)  
  421abe:	arpl   cx,cx
  421ac0:	xchg   BYTE PTR [edi],ch
  421ac2:	inc    edx
  421ac3:	cld    
  421ac4:	push   0x1c28c924
  421ac9:	nop
  421aca:	fstp   QWORD PTR [ecx+0x13850fae]
  421ad0:	add    BYTE PTR [eax],al
  421ad2:	add    BYTE PTR [ebx],bh
  421ad4:	pop    ebp
  421ad5:	hlt    
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	retf   0x9811
  421b3d:	dec    ebp
  421b3e:	and    eax,DWORD PTR [edi+0x7c]
  421b41:	jnp    0x421b60
  421b43:	sahf   
  421b44:	jnp    0x421bc1
  421b46:	adc    eax,0x6b68bb3c
  421b4b:	jmp    0xeb186530
  421b50:	lds    esi,FWORD PTR [eax-0x490fb27a]
  421b56:	stc    
  421b57:	push   ecx
  421b58:	sub    eax,0x9b8b44f5
  421b5d:	sahf   
  421b5e:	mov    esp,esi
  421b60:	push   esi
  421b61:	out    dx,al
  421b62:	mov    ebx,DWORD PTR [edi+ecx*8]
  421b65:	inc    edi
  421b66:	or     BYTE PTR [esi-0x15a7cb00],ch
  421b6c:	and    BYTE PTR [ecx-0x1a],0x0
  421b70:	test   al,0x96
  421b72:	in     eax,0x28
  421b74:	stc    
  421b75:	gs data16 jae 0x421bca
  421b79:	fldenv [ebp+0x3b3cc523]
  421b7f:	jbe    0x421b40
  421b81:	adc    BYTE PTR [eax],ch
  421b83:	(bad)
  421b86:	dec    ecx
  421b87:	xchg   cl,ch
  421b89:	lahf   
  421b8a:	adc    eax,0x5ab2445b
  421b8f:	gs aad 0xe6
  421b92:	lar    edx,WORD PTR ds:0x2fca26eb
  421b99:	adc    eax,0x2bab9b9e
  421b9e:	jnp    0x421bd8
  421ba0:	sub    BYTE PTR [ebx+0x29],al
  421ba3:	inc    esp
  421ba4:	mov    ebp,DWORD PTR [eax+edi*8+0x7a]
  421ba8:	test   eax,esp
  421baa:	dec    esi
  421bab:	jp     0x421bfd
  421bad:	adc    BYTE PTR [edi+0x65],0x6
  421bb1:	iret   
  421bb2:	ret    
  421bb3:	dec    ecx
  421bb4:	outs   dx,BYTE PTR ds:[esi]
  421bb5:	jp     0x421b63
  421bb7:	cmp    DWORD PTR [edx],ebp
  421bb9:	ins    BYTE PTR es:[edi],dx
  421bba:	mov    bl,0xd3
  421bbc:	int    0xc8
  421bbe:	or     edi,ebp
  421bc0:	sbb    dl,BYTE PTR [ebx+0xfe60911]
  421bc6:	push   cx
  421bc8:	xlat   BYTE PTR ds:[ebx]
  421bc9:	jecxz  0x421c48
  421bcb:	push   0xc0eafc8f
  421bd0:	inc    ebx
  421bd1:	mov    edi,0xf3029767
  421bd6:	dec    ebx
  421bd7:	cmc    
  421bd8:	enter  0xcf84,0x44
  421bdc:	sbb    eax,0x63942941
  421be1:	shl    BYTE PTR [edx+ebp*2-0x5fb43ca8],1
  421be8:	cli    
  421be9:	push   ecx
  421bea:	imul   ebx,DWORD PTR [edx+0x493605f3],0x3cd0b0cf
  421bf4:	push   edx
  421bf5:	pop    ecx
  421bf6:	cmp    eax,0xfa811b0c
  421bfb:	sbb    eax,0x1203009f
  421c00:	dec    ecx
  421c01:	mov    ebx,0xc10ab030
  421c06:	aad    0xed
  421c08:	fiadd  DWORD PTR [ecx+eax*4-0x5b]
  421c0c:	into   
  421c0d:	inc    esi
  421c0e:	jg     0x421c40
  421c10:	mov    ds:0x42b4f721,eax
  421c15:	mov    ebx,ecx
  421c17:	jo     0x421c3e
  421c19:	xchg   ebp,eax
  421c1a:	in     eax,dx
  421c1b:	arpl   WORD PTR [edx],cx
  421c1d:	cld    
  421c1e:	inc    edi
  421c1f:	sub    edx,DWORD PTR [edi-0x5b]
  421c22:	js     0x421bcd
  421c24:	adc    DWORD PTR ds:0x64b63852,0x791b14b8
  421c2e:	call   0x8dac:0x1832743f
  421c35:	ins    DWORD PTR es:[edi],dx
  421c36:	and    BYTE PTR [esi+eax*1-0x3e6f5bf0],dl
  421c3d:	retf   
  421c3e:	ds xchg edi,eax
  421c40:	inc    BYTE PTR [edi+0x3a]
  421c43:	lea    eax,[ebx+0x1b3b0c25]
  421c49:	fisttp DWORD PTR [ebp+esi*1-0x1e]
  421c4d:	(bad)  [edx]
  421c4f:	aas    
  421c50:	pop    es
  421c51:	retf   0xd19
  421c54:	neg    BYTE PTR [edx-0x11066f19]
  421c5a:	pop    ebx
  421c5b:	push   0x4f
  421c5d:	mov    edi,0x8f9985f4
  421c62:	fdivrp st(1),st
  421c64:	and    DWORD PTR [edi+0x4f],ecx
  421c67:	lods   eax,DWORD PTR ds:[esi]
  421c68:	test   al,0x41
  421c6a:	shl    BYTE PTR [ebx],1
  421c6c:	pop    eax
  421c6d:	mov    bh,BYTE PTR [ebx-0x34a6fd4a]
  421c73:	(bad)  
  421c74:	sub    DWORD PTR [ebx-0x45dc502f],esi
  421c7a:	jl     0x421c01
  421c7c:	mov    ds:0x637e4c84,eax
  421c81:	imul   edx,DWORD PTR [edi],0x5e
  421c84:	adc    DWORD PTR [edi],esi
  421c86:	stc    
  421c87:	cs in  al,0x29
  421c8a:	bound  edi,QWORD PTR [eax-0x74]
  421c8d:	xor    DWORD PTR [esi-0x7846559a],edx
  421c93:	push   ss
  421c94:	dec    edx
  421c95:	lods   al,BYTE PTR ds:[esi]
  421c96:	aad    0xcc
  421c98:	test   al,0x41
  421c9a:	and    BYTE PTR [edx+0x6b],bl
  421c9d:	stc    
  421c9e:	shl    ebp,1
  421ca0:	xor    al,0x95
  421ca2:	jmp    0x4f28e4d7
  421ca7:	test   al,0x25
  421ca9:	sbb    eax,0x3816e803
  421cae:	nop
  421caf:	iret   
  421cb0:	(bad)  
  421cb1:	pop    eax
  421cb2:	daa    
  421cb3:	mul    DWORD PTR [eax]
  421cb5:	and    eax,0x9a9d2fdc
  421cba:	rol    BYTE PTR gs:[edx-0x58],cl
  421cbe:	ret    0x97b8
  421cc1:	stos   DWORD PTR es:[edi],eax
  421cc2:	push   esp
  421cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc4:	mov    eax,ds:0x4de5756d
  421cc9:	mov    bh,0x25
  421ccb:	push   esi
  421ccc:	mov    dl,0x4f
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	stos   BYTE PTR es:[edi],al
  421cd0:	aam    0x9c
  421cd2:	and    ebx,esp
  421cd4:	lea    ecx,[edi-0x6c1fa151]
  421cda:	jp     0x421d34
  421cdc:	sbb    BYTE PTR [ebx+0x3d948d1b],0x96
  421ce3:	mov    ecx,0xfeed48c1
  421ce8:	in     eax,dx
  421ce9:	add    eax,0xef5099ac
  421cee:	stos   BYTE PTR es:[edi],al
  421cef:	add    esp,0xffffff94
  421cf2:	and    al,0x20
  421cf4:	dec    eax
  421cf5:	pop    ebp
  421cf6:	in     al,dx
  421cf7:	fild   WORD PTR [ebx-0x5d679c61]
  421cfd:	cs enterw 0x8b77,0x51
  421d03:	adc    eax,0xa2a1415c
  421d08:	lods   al,BYTE PTR ds:[esi]
  421d09:	adc    ebp,esp
  421d0b:	shr    DWORD PTR [edx+0x3328006d],cl
  421d11:	mov    ah,0xfc
  421d13:	shl    BYTE PTR [edx+eiz*8],cl
  421d16:	lock daa 
  421d18:	push   edx
  421d19:	(bad)  [esi]
  421d1b:	sub    eax,0xa30f2a83
  421d20:	or     DWORD PTR [eiz*8-0x46ae5176],esi
  421d27:	add    dl,BYTE PTR [esi+ebp*8]
  421d2a:	scas   eax,DWORD PTR es:[edi]
  421d2b:	sub    al,0x67
  421d2d:	xchg   esi,eax
  421d2e:	xor    bh,BYTE PTR [esi+0x7d8082e9]
  421d34:	xlat   BYTE PTR ds:[ebx]
  421d35:	jge    0x421cd6
  421d37:	(bad)  
  421d38:	xor    DWORD PTR ds:0xf134b2ae,esp
  421d3e:	call   0xb0fd:0xb5626781
  421d45:	fadd   st,st(5)
  421d47:	sbb    DWORD PTR ds:0x582d50df,ecx
  421d4d:	xor    al,0x6e
  421d4f:	sbb    al,0x49
  421d51:	lock jne 0x421cf2
  421d54:	mov    WORD PTR [esi],cs
  421d56:	xchg   ecx,eax
  421d57:	mov    edx,0x49f89f74
  421d5c:	mov    esp,0x41b346b9
  421d61:	push   edx
  421d62:	bound  esi,QWORD PTR [edx+edi*4]
  421d65:	push   edx
  421d66:	and    ch,BYTE PTR [esi]
  421d68:	pop    edx
  421d69:	inc    ecx
  421d6a:	mov    edx,0xf3905e2
  421d6f:	inc    esi
  421d70:	cdq    
  421d71:	sub    dl,0x7b
  421d74:	mov    al,0x1d
  421d76:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d78:	pop    ss
  421d79:	jl     0x421cfd
  421d7b:	pop    ss
  421d7c:	in     al,0x48
  421d7e:	mov    al,0x7a
  421d80:	push   ecx
  421d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d82:	cwde   
  421d83:	sbb    eax,0x5940098a
  421d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d89:	or     al,0x81
  421d8b:	icebp  
  421d8c:	in     eax,0x2e
  421d8e:	mov    WORD PTR ds:0x97af11f1,fs
  421d94:	int    0xbd
  421d96:	call   DWORD PTR [ebp-0x72]
  421d99:	mov    WORD PTR [ebx+0xe1adc43],?
  421d9f:	mov    dh,0x46
  421da1:	out    0xd,eax
  421da3:	pop    ebp
  421da4:	inc    eax
  421da5:	dec    eax
  421da6:	sub    bh,BYTE PTR [edi-0x30]
  421da9:	fnstenv [ecx]
  421dab:	data16 adc BYTE PTR [edi],al
  421dae:	repz xlat BYTE PTR ds:[ebx]
  421db0:	push   edx
  421db1:	pop    ebp
  421db2:	mov    esp,0x73d97c89
  421db7:	lods   al,BYTE PTR ds:[esi]
  421db8:	add    eax,0xf1f6f69f
  421dbd:	add    bh,dl
  421dbf:	jmp    0x60e3314f
  421dc4:	and    bh,BYTE PTR [ebp+0x5c46f768]
  421dca:	cmc    
  421dcb:	ins    BYTE PTR es:[edi],dx
  421dcc:	adc    BYTE PTR [edx],cl
  421dce:	aas    
  421dcf:	mov    bh,0x49
  421dd1:	outs   dx,DWORD PTR ds:[esi]
  421dd2:	xchg   esi,eax
  421dd3:	mov    ecx,fs
  421dd5:	mov    ecx,0x64aaaa2f
  421dda:	mov    ebx,0x8f186cbe
  421ddf:	and    eax,0xb1c36ade
  421de4:	cwde   
  421de5:	scas   al,BYTE PTR es:[edi]
  421de6:	icebp  
  421de7:	pusha  
  421de8:	fcomp  QWORD PTR [ebx]
  421dea:	int3   
  421deb:	sbb    dl,bl
  421ded:	mov    BYTE PTR [ebx],ch
  421def:	mov    bh,0x8f
  421df1:	mov    ah,0xe3
  421df3:	and    esi,DWORD PTR [ebx-0x6f]
  421df6:	fld    DWORD PTR [eax-0x2bc2bceb]
  421dfc:	outs   dx,DWORD PTR ds:[esi]
  421dfd:	in     al,dx
  421dfe:	sahf   
  421dff:	push   es
  421e00:	mov    eax,0xa695bc65
  421e05:	sub    eax,0xccec1055
  421e0a:	test   DWORD PTR [eax],eax
  421e0c:	adc    edx,DWORD PTR [eax+0x45]
  421e0f:	sub    sp,WORD PTR [edx]
  421e12:	xchg   ebx,eax
  421e13:	pop    edx
  421e14:	test   eax,0x87ec91fb
  421e19:	jp     0x421db9
  421e1b:	es daa 
  421e1d:	imul   ebp,DWORD PTR [ebx-0x13],0xffffff9e
  421e21:	xor    eax,DWORD PTR [ebp-0x5b]
  421e24:	rcr    BYTE PTR [eax+0x38a14c91],cl
  421e2a:	pushf  
  421e2b:	in     eax,0xb6
  421e2d:	call   0x793777e5
  421e32:	add    eax,0x7bbf7615
  421e37:	sub    eax,0x73fc990f
  421e3c:	mov    edx,0x698c2a05
  421e41:	jecxz  0x421dd8
  421e43:	sahf   
  421e44:	add    ah,cl
  421e46:	call   0x8b6c92a4
  421e4b:	fmul   DWORD PTR [ebp+ecx*1-0x5a3fb22]
  421e52:	jge    0x421e73
  421e54:	xlat   BYTE PTR ds:[ebx]
  421e55:	call   0xc0461610
  421e5a:	xor    BYTE PTR [edx],0xd5
  421e5d:	je     0x421eb4
  421e5f:	cmp    BYTE PTR [esi+ebp*8+0x36],ah
  421e63:	into   
  421e64:	(bad)  
  421e65:	ds ds sti 
  421e68:	dec    ecx
  421e69:	pop    ss
  421e6a:	popf   
  421e6b:	fcmovnb st,st(4)
  421e6d:	outs   dx,DWORD PTR ds:[esi]
  421e6e:	push   0xffffffcf
  421e70:	push   0xffffff89
  421e72:	out    0x6d,al
  421e74:	nop
  421e75:	mov    eax,ds:0xfaf6b273
  421e7a:	into   
  421e7b:	sbb    bl,BYTE PTR [ecx-0xd]
  421e7e:	out    dx,eax
  421e7f:	sub    dl,BYTE PTR [edi-0x54]
  421e82:	(bad)  
  421e83:	aaa    
  421e84:	push   esp
  421e85:	xor    esi,eax
  421e87:	out    0xe5,eax
  421e89:	adc    BYTE PTR [ecx],al
  421e8b:	mov    DWORD PTR [esp+ecx*1-0x7cbf4d94],eax
  421e92:	dec    ebx
  421e93:	dec    edi
  421e94:	jp     0x421e7d
  421e96:	add    DWORD PTR [ecx+edi*4],ecx
  421e99:	push   ebx
  421e9a:	jge    0x421eae
  421e9c:	sub    ch,BYTE PTR [ebx+0x3a]
  421e9f:	sub    DWORD PTR ds:[ecx+0x723c6aef],0x3f9822a4
  421eaa:	pop    es
  421eab:	aad    0xb8
  421ead:	aad    0xce
  421eaf:	fcmovnbe st,st(0)
  421eb1:	fcmovnb st,st(2)
  421eb3:	and    BYTE PTR [ebx],0x9
  421eb6:	mov    cl,BYTE PTR [ecx-0x50]
  421eb9:	push   esi
  421eba:	(bad)  
  421ebc:	sub    BYTE PTR [edx-0x29],0xda
  421ec0:	xchg   edi,eax
  421ec1:	mov    edi,0x1b979041
  421ec6:	jg     0x421e9e
  421ec8:	jns    0x421ec6
  421eca:	cwde   
  421ecb:	pop    ss
  421ecc:	inc    esi
  421ecd:	pop    eax
  421ece:	xchg   ecx,eax
  421ecf:	je     0x421f1a
  421ed1:	imul   esp,DWORD PTR [eax-0x62],0xa3264f6d
  421ed8:	push   esp
  421ed9:	fwait
  421eda:	mov    eax,ds:0xbbe21e2c
  421edf:	rol    DWORD PTR [ebx],1
  421ee1:	sbb    dl,BYTE PTR [ebx+0x52]
  421ee4:	sbb    BYTE PTR [eax+0x24],bl
  421ee7:	(bad)  
  421ee8:	jle    0x421ee0
  421eea:	dec    esp
  421eeb:	sbb    al,0xbb
  421eed:	ret    
  421eee:	add    al,0x1b
  421ef0:	and    edi,edx
  421ef2:	cld    
  421ef3:	test   al,0x2b
  421ef5:	in     al,dx
  421ef6:	lds    esp,FWORD PTR [edx]
  421ef8:	cld    
  421ef9:	push   0xffffffac
  421efb:	das    
  421efc:	loopne 0x421ebc
  421efe:	pop    ecx
  421eff:	mov    dl,0xa5
  421f01:	idiv   BYTE PTR [eax]
  421f03:	mov    edi,0xd762aa52
  421f08:	jmp    0x76f3:0x5fc9ea6f
  421f0f:	(bad)  
  421f10:	mov    eax,ds:0x66ce0785
  421f15:	js     0x421f26
  421f17:	or     DWORD PTR [ecx],esp
  421f19:	xchg   esi,eax
  421f1a:	inc    esp
  421f1b:	lods   al,BYTE PTR ds:[esi]
  421f1c:	fwait
  421f1d:	scas   al,BYTE PTR es:[edi]
  421f1e:	and    ah,BYTE PTR [ebx+ecx*2]
  421f21:	xchg   BYTE PTR [esi],dh
  421f23:	addr16 inc ebp
  421f25:	jecxz  0x421ede
  421f27:	(bad)  
  421f28:	jae    0x421f52
  421f2a:	xor    BYTE PTR [edx+0x3d],bh
  421f2d:	fld    DWORD PTR [edi-0x6f]
  421f30:	push   ds
  421f31:	mov    ds:0x50f82e6d,eax
  421f36:	mov    dl,0x5f
  421f38:	scas   eax,DWORD PTR es:[edi]
  421f39:	cmc    
  421f3a:	xchg   edi,eax
  421f3b:	add    DWORD PTR [eax+0x3],eax
  421f3e:	fcom   QWORD PTR [ecx-0x10]
  421f41:	inc    ecx
  421f42:	and    esi,esp
  421f44:	fcmovne st,st(4)
  421f46:	pop    esp
  421f47:	pushf  
  421f48:	jbe    0x421fc6
  421f4a:	mov    al,0x73
  421f4c:	mov    edi,0xeb4b01f7
  421f51:	sar    bl,0x4f
  421f54:	mov    esi,0x17b29a42
  421f59:	push   ecx
  421f5a:	fwait
  421f5b:	jae    0x421f41
  421f5d:	out    dx,eax
  421f5e:	ret    
  421f5f:	ror    DWORD PTR [edx+0x5a7d654],1
  421f65:	pop    eax
  421f66:	aad    0xd8
  421f68:	loop   0x421f1c
  421f6a:	pop    ds
  421f6b:	and    BYTE PTR [edx],dl
  421f6d:	push   0x2e1ad2b6
  421f72:	cmp    eax,0x16e02365
  421f77:	clc    
  421f78:	pop    ss
  421f79:	or     edi,DWORD PTR [eax]
  421f7b:	fdivr  st(1),st
  421f7d:	ds push eax
  421f7f:	add    edi,esi
  421f81:	xor    al,0xa2
  421f83:	pop    es
  421f84:	or     ebx,eax
  421f86:	adc    edx,DWORD PTR [ecx-0x1]
  421f89:	sbb    al,0xba
  421f8b:	aad    0x9b
  421f8d:	sub    edx,eax
  421f8f:	shl    DWORD PTR [edx-0x64f192ca],cl
  421f95:	dec    ebx
  421f96:	xchg   ecx,eax
  421f97:	mov    cl,0x43
  421f99:	retf   0xb276
  421f9c:	bound  ebx,QWORD PTR [edi+0x4]
  421f9f:	bound  esp,QWORD PTR [edx+0x60]
  421fa2:	cmp    dh,0x58
  421fa5:	push   ds
  421fa6:	seta   BYTE PTR [esi+0x3d]
  421faa:	mov    edi,fs
  421fac:	mov    cl,0x39
  421fae:	dec    edi
  421faf:	sub    ah,BYTE PTR [edx]
  421fb1:	push   ebp
  421fb2:	adc    al,0x13
  421fb4:	hlt    
  421fb5:	call   0xc84f:0x6fa2a2e3
  421fbc:	xor    al,0x9a
  421fbe:	lods   al,BYTE PTR ds:[esi]
  421fbf:	sub    dl,cl
  421fc1:	popa   
  421fc2:	or     ebx,DWORD PTR [edx+eiz*1]
  421fc5:	repnz mov esp,0x8fdf5934
  421fcb:	sub    ah,BYTE PTR ds:0x9f2bf36a
  421fd1:	xchg   edi,eax
  421fd2:	scas   al,BYTE PTR es:[edi]
  421fd3:	xor    edx,DWORD PTR [edx-0x66]
  421fd6:	sahf   
  421fd7:	shl    edx,0x14
  421fda:	scas   eax,DWORD PTR es:[edi]
  421fdb:	push   ds
  421fdc:	das    
  421fdd:	xor    BYTE PTR [eax+0x3308276e],ah
  421fe3:	pop    ecx
  421fe4:	idiv   ch
  421fe6:	push   ebp
  421fe7:	and    eax,DWORD PTR [ecx-0x3a]
  421fea:	xlat   BYTE PTR ds:[ebx]
  421feb:	push   ecx
  421fec:	das    
  421fed:	add    edx,0x94c9b50f
  421ff3:	or     edx,DWORD PTR [edx]
  421ff5:	and    al,0x74
  421ff7:	stos   DWORD PTR es:[edi],eax
  421ff8:	inc    edi
  421ff9:	out    dx,eax
  421ffa:	sbb    eax,0xbb6b368f
  421fff:	arpl   WORD PTR [edi+0x2b],ax
  422002:	(bad)  
  422003:	ds nop
  422005:	add    bh,BYTE PTR [ecx]
  422007:	cld    
  422008:	push   ebx
  422009:	loopne 0x421fb5
  42200b:	test   al,0x59
  42200d:	neg    BYTE PTR [ebp-0x2269e96d]
  422013:	pop    esp
  422014:	fmul   QWORD PTR [esi-0x70]
  422017:	mov    dl,0x38
  422019:	ja     0x422026
  42201b:	or     al,0x7d
  42201d:	rcl    ecx,1
  42201f:	add    ebp,edi
  422021:	adc    eax,0x913696d7
  422026:	out    dx,al
  422027:	lds    esp,FWORD PTR [esi]
  422029:	das    
  42202a:	xchg   esp,eax
  42202b:	pop    esi
  42202c:	nop
  42202d:	sti    
  42202e:	xor    BYTE PTR [edx-0x4ae07dfd],bh
  422034:	punpcklbw mm2,mm3
  422037:	push   edx
  422038:	test   DWORD PTR [ecx-0x22],edi
  42203b:	jle    0x42209e
  42203d:	dec    esp
  42203e:	stos   DWORD PTR es:[edi],eax
  42203f:	lea    eax,[edi+0x19704fa2]
  422045:	jae    0x4220c0
  422047:	or     BYTE PTR [eax+0x1bc2b07d],bl
  42204d:	push   cs
  42204e:	retf   0x647f
  422051:	test   DWORD PTR [esi+ecx*1+0x73fc17ff],edx
  422058:	cs push ebp
  42205a:	push   0x8
  42205c:	xchg   BYTE PTR [ebp-0x6e7a9035],ch
  422062:	inc    ebx
  422063:	cli    
  422064:	xchg   ecx,eax
  422065:	jmp    0x3845089f
  42206a:	(bad)  
  42206b:	enter  0xf142,0x84
  42206f:	cdq    
  422070:	lahf   
  422071:	mov    ecx,0x886df64f
  422076:	sar    dh,0x35
  422079:	loop   0x422065
  42207b:	pop    ds
  42207c:	mov    ds:0x34023aa0,eax
  422081:	sbb    eax,0xd25bbdb2
  422086:	dec    ebx
  422087:	mov    eax,0x9aa2c3bc
  42208c:	or     al,0xf5
  42208e:	pop    edi
  42208f:	or     cl,cl
  422091:	push   edi
  422092:	or     BYTE PTR [ebp+0x69],bl
  422095:	jge    0x42204d
  422097:	mov    bl,0x5d
  422099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42209a:	mov    dh,0x23
  42209c:	add    ebx,DWORD PTR [ebx]
  42209e:	and    eax,0x6c7565f7
  4220a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220a4:	push   eax
  4220a5:	repz inc ebp
  4220a7:	sub    al,0x8a
  4220a9:	inc    ecx
  4220aa:	fs dec ebx
  4220ac:	sbb    DWORD PTR [ecx+0x54],0x7f
  4220b0:	aad    0x7d
  4220b2:	lods   al,BYTE PTR ds:[esi]
  4220b3:	mov    ecx,0x75a223db
  4220b8:	(bad)  
  4220ba:	retf   0x8221
  4220bd:	pop    ss
  4220be:	mov    ecx,0x15d9e4d8
  4220c3:	xchg   DWORD PTR [ebp-0x33dbd54b],esp
  4220c9:	jmp    0x4220bc
  4220cb:	push   ebp
  4220cc:	cmc    
  4220cd:	popa   
  4220ce:	pop    ebx
  4220cf:	mov    esi,0xfe786f50
  4220d4:	sub    cl,dl
  4220d6:	icebp  
  4220d7:	lahf   
  4220d8:	mov    ds:0x8a930af5,al
  4220dd:	test   al,ah
  4220df:	xor    edi,ecx
  4220e1:	xor    al,0x81
  4220e3:	pop    esi
  4220e4:	or     ecx,ecx
  4220e6:	jb     0x422094
  4220e8:	iret   
  4220e9:	ret    
  4220ea:	sub    edx,ecx
  4220ec:	jmp    0x51157089
  4220f1:	mov    bh,0xfd
  4220f3:	sbb    BYTE PTR [eax],ch
  4220f5:	test   DWORD PTR [ecx+0x6f],0xb1991545
  4220fc:	(bad)  
  4220fd:	frstor [ebx+eax*4]
  422100:	(bad)  
  422101:	icebp  
  422102:	or     edx,edx
  422104:	push   cs
  422105:	ins    BYTE PTR es:[edi],dx
  422106:	fld    DWORD PTR ds:0xc169d317
  42210c:	in     al,dx
  42210d:	aam    0x4a
  42210f:	sbb    al,BYTE PTR [edi-0x10]
  422112:	fiadd  DWORD PTR [eax]
  422114:	mov    ebp,0x768b6eac
  422119:	shl    BYTE PTR [eax],cl
  42211b:	cmp    eax,0x984043a8
  422120:	sbb    al,0x25
  422122:	mov    esi,DWORD PTR [edx-0x4f]
  422125:	ret    
  422126:	add    al,0xf2
  422128:	jp     0x4220bd
  42212a:	inc    esi
  42212b:	sub    eax,0x2b0ed6bd
  422130:	jmp    0x8cba:0x6d1337b3
  422137:	mov    dh,0x56
  422139:	mov    ebp,0x4219ed25
  42213e:	retf   
  42213f:	in     al,0x2
  422141:	ins    DWORD PTR es:[edi],dx
  422142:	ret    0xe5bd
  422145:	or     edi,DWORD PTR [edi+0x7052a6ff]
  42214b:	push   es
  42214c:	jnp    0x4221a5
  42214e:	retf   
  42214f:	iret   
  422150:	cmp    eax,0x3d37c8c5
  422155:	ds dec edx
  422157:	jmp    0x5dafbd0f
  42215c:	inc    ebx
  42215d:	mov    bl,0x7d
  42215f:	test   BYTE PTR [edi],0xee
  422162:	mov    ebp,ebp
  422164:	pop    edx
  422165:	or     esi,esp
  422167:	lds    esi,FWORD PTR [eax-0x124e0252]
  42216d:	fcom   QWORD PTR [edi-0x2]
  422170:	xchg   BYTE PTR [ebp-0xf],dh
  422173:	mov    bh,0xe3
  422175:	pusha  
  422176:	add    eax,0x2b787421
  42217b:	stos   BYTE PTR es:[edi],al
  42217c:	test   BYTE PTR [edx-0x21794737],dl
  422182:	inc    edi
  422183:	lock adc cl,BYTE PTR [ebp-0x1b447538]
  42218a:	push   edx
  42218b:	rol    DWORD PTR [edx+0x42],1
  42218e:	dec    ebx
  42218f:	mov    dh,0x24
  422191:	xor    edx,ebx
  422193:	les    ebp,FWORD PTR [edi]
  422195:	ins    DWORD PTR es:[edi],dx
  422196:	xor    al,0xe1
  422199:	imul   eax,DWORD PTR [esi],0x52
  42219c:	mov    ebp,0x2bd751ac
  4221a1:	inc    ebx
  4221a2:	in     al,dx
  4221a3:	add    edi,DWORD PTR [eax]
  4221a5:	xor    cl,dh
  4221a7:	out    0xe5,al
  4221a9:	fldenv [eax-0x6b936c62]
  4221af:	sub    BYTE PTR [ebx+0x6a35fddf],0x70
  4221b6:	push   edi
  4221b7:	lods   al,BYTE PTR ds:[esi]
  4221b8:	scas   eax,DWORD PTR es:[edi]
  4221b9:	addr16 pop ss
  4221bb:	or     eax,0x38d233a6
  4221c0:	push   cs
  4221c1:	push   ebx
  4221c2:	mov    ah,0x0
  4221c4:	push   ds
  4221c5:	jge    0x4221bc
  4221c7:	outs   dx,DWORD PTR ds:[esi]
  4221c8:	or     al,0x57
  4221ca:	push   edx
  4221cb:	mov    bh,0x4
  4221cd:	or     cl,ah
  4221cf:	mov    edi,DWORD PTR [ebx+0x55]
  4221d2:	jb     0x422245
  4221d4:	outs   dx,DWORD PTR ds:[esi]
  4221d5:	adc    eax,0x8ce861e2
  4221da:	sbb    al,0xef
  4221dc:	repz pop esi
  4221de:	cmp    BYTE PTR [edi+0x3a9a5d00],0x3f
  4221e5:	mov    al,0xd5
  4221e7:	dec    ecx
  4221e8:	push   ss
  4221e9:	cld    
  4221ea:	adc    DWORD PTR [esp+esi*1-0x58921fed],ecx
  4221f1:	aas    
  4221f2:	mov    cl,0x5e
  4221f4:	lods   eax,DWORD PTR ds:[esi]
  4221f5:	in     al,dx
  4221f6:	aam    0xf5
  4221f8:	repnz outs dx,DWORD PTR ds:[esi]
  4221fa:	cmp    eax,0x8ee1d722
  4221ff:	sahf   
  422200:	mov    dh,0xf2
  422202:	mov    edi,0xee2c2576
  422207:	stos   DWORD PTR es:[edi],eax
  422208:	sub    eax,0x60c12b82
  42220d:	push   edi
  42220e:	sub    BYTE PTR [eax],cl
  422210:	bound  edx,QWORD PTR [esi-0x42]
  422213:	cmc    
  422214:	lods   al,BYTE PTR ds:[esi]
  422215:	imul   edx,DWORD PTR [edx-0x34e810e6],0xa31f13df
  42221f:	xor    al,0xc
  422221:	call   0x172883b1
  422226:	sbb    eax,0x8f833c85
  42222b:	jecxz  0x422227
  42222d:	ret    0xa772
  422230:	sti    
  422231:	mov    DWORD PTR [eax],esi
  422233:	fsubr  QWORD PTR [ecx+ebp*8+0x7b]
  422237:	inc    ebx
  422238:	adc    eax,0xfa0411c9
  42223d:	popa   
  42223e:	mov    ebx,0x687053dd
  422243:	(bad)  
  422244:	inc    esp
  422245:	push   ecx
  422246:	xchg   DWORD PTR [esi-0x1f870222],esi
  42224c:	mov    al,ds:0x43fbfc9c
  422251:	retf   0x42e8
  422254:	icebp  
  422255:	call   0x4814:0xfea42e8c
  42225c:	daa    
  42225d:	(bad)  
  42225e:	add    bh,BYTE PTR [ecx]
  422260:	stos   DWORD PTR es:[edi],eax
  422261:	mov    bl,0xe5
  422263:	jp     0x4222b9
  422265:	scas   eax,DWORD PTR es:[edi]
  422266:	jmp    0xf38262cb
  42226b:	aam    0xa5
  42226d:	xor    eax,0x2b596f77
  422272:	outs   dx,DWORD PTR ds:[esi]
  422273:	xor    DWORD PTR [edx],ebp
  422275:	jb     0x422257
  422277:	push   esi
  422278:	or     al,bh
  42227a:	push   ss
  42227b:	jno    0x422236
  42227d:	pop    ds
  42227e:	sahf   
  42227f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422280:	rol    al,1
  422282:	call   0x5af3:0xd4db7324
  422289:	fild   QWORD PTR [edi]
  42228b:	bound  esi,QWORD PTR [esi]
  42228d:	lock and eax,0x8d79fe4d
  422293:	stos   DWORD PTR es:[edi],eax
  422294:	fs aam 0x49
  422297:	inc    ebp
  422298:	xabort 0xe2
  42229b:	adc    DWORD PTR ds:0xaef5503d,0xffffff8c
  4222a2:	push   ss
  4222a3:	cmp    BYTE PTR [eax],dh
  4222a5:	cmp    al,0xfd
  4222a7:	arpl   WORD PTR [edi-0x1fc3f0ba],bp
  4222ad:	adc    dh,al
  4222af:	or     BYTE PTR [ecx+ebx*1],bl
  4222b2:	int3   
  4222b3:	ins    DWORD PTR es:[edi],dx
  4222b4:	es dec esi
  4222b6:	push   ecx
  4222b7:	fdivr  QWORD PTR fs:[esi+0x671e81cd]
  4222be:	rol    DWORD PTR [edi-0x3c],1
  4222c1:	mov    cl,0xdc
  4222c3:	sub    edx,DWORD PTR [esi+0x26]
  4222c6:	test   DWORD PTR [esi+0x5b28295],0xe615ea24
  4222d0:	xor    eax,0x4b16dc95
  4222d5:	add    esi,DWORD PTR [ebp-0x52]
  4222d8:	leave  
  4222d9:	bound  ecx,QWORD PTR [edi+0x1bba0651]
  4222df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222e0:	scas   eax,DWORD PTR es:[edi]
  4222e1:	fwait
  4222e2:	cmp    esp,DWORD PTR [ebp+ebx*4-0x1e]
  4222e6:	out    dx,eax
  4222e7:	pop    ss
  4222e8:	cli    
  4222e9:	retf   
  4222ea:	call   0x753:0x5f4ca612
  4222f1:	sbb    ebx,DWORD PTR [esi+0x1d5bebc]
  4222f7:	mov    ch,0x5c
  4222f9:	add    eax,0x2faf8646
  4222fe:	mov    ch,0x53
  422300:	aaa    
  422301:	retf   0x73dc
  422304:	dec    esp
  422305:	call   0xb565:0xa2e3b041
  42230c:	or     esp,DWORD PTR [ecx-0x22]
  42230f:	push   es
  422310:	adc    edx,DWORD PTR [ecx+0x20]
  422313:	pusha  
  422314:	fst    DWORD PTR [edi-0x502b63c8]
  42231a:	mov    WORD PTR [edi],es
  42231c:	hlt    
  42231d:	cdq    
  42231e:	loop   0x42239d
  422320:	mov    al,BYTE PTR [eax+ebp*2-0x11]
  422324:	jmp    0x17d2638c
  422329:	lahf   
  42232a:	mov    ds:0x9c9452fc,eax
  42232f:	cmp    ecx,DWORD PTR [ebp-0x1e5d310a]
  422335:	adc    DWORD PTR [edi-0x44541b84],esp
  42233b:	scas   eax,DWORD PTR es:[edi]
  42233c:	and    BYTE PTR [esi-0xbbdbba3],ch
  422342:	fld    TBYTE PTR cs:[eax+0x1b]
  422346:	xchg   esi,eax
  422347:	inc    ebp
  422348:	mov    ebp,0xf46a16a
  42234d:	mov    ah,0x0
  42234f:	loop   0x422353
  422351:	adc    DWORD PTR [ecx+edi*8+0x15],0x3a3f8858
  422359:	push   ebx
  42235a:	jne    0x422367
  42235c:	mov    esi,0xf718107b
  422361:	pop    edx
  422362:	mov    ch,0x26
  422364:	mov    bh,0x8b
  422366:	outs   dx,BYTE PTR ds:[esi]
  422367:	pop    edx
  422368:	test   DWORD PTR [edi+0x7f890302],0x8979ce56
  422372:	jnp    0x42235c
  422374:	inc    esp
  422375:	jge    0x42237a
  422377:	jl     0x4223af
  422379:	dec    esi
  42237a:	jl     0x422333
  42237c:	out    dx,al
  42237d:	or     eax,0xd6896b8b
  422382:	fiadd  DWORD PTR [eiz*1-0x23af1612]
  422389:	fnstsw WORD PTR [esi+ebp*1-0x4f]
  42238d:	or     DWORD PTR [edx+0x2e],ebx
  422390:	repz push esi
  422392:	aad    0x2b
  422394:	(bad)  
  422396:	sahf   
  422397:	lods   eax,DWORD PTR ds:[esi]
  422398:	pop    ebp
  422399:	dec    eax
  42239a:	mov    ds:0x2c11e7b3,eax
  42239f:	mov    esp,?
  4223a1:	fwait
  4223a2:	repz push ebx
  4223a4:	sbb    DWORD PTR [edi+0x513e9b03],esp
  4223aa:	es sbb dl,cl
  4223ad:	lock cmp BYTE PTR [esi+eax*8+0xc240ad1],ah
  4223b5:	retf   0x314
  4223b8:	or     bl,ah
  4223ba:	ja     0x42239c
  4223bc:	cmp    BYTE PTR [ecx],0x28
  4223bf:	pop    ecx
  4223c0:	jp     0x422395
  4223c2:	fbld   TBYTE PTR [eax]
  4223c4:	sub    esp,DWORD PTR [edi-0x17]
  4223c7:	test   BYTE PTR [ecx],al
  4223c9:	cmp    eax,0x1519717e
  4223ce:	or     dl,ch
  4223d0:	sub    al,0x7d
  4223d2:	mov    ah,0xa
  4223d4:	into   
  4223d5:	shl    dh,0xb4
  4223d8:	cmp    al,0x42
  4223da:	mov    eax,ds:0x9977c7cc
  4223df:	mov    dh,BYTE PTR [eax-0x37d2d3cc]
  4223e5:	jle    0x422395
  4223e7:	xor    ebp,esi
  4223e9:	cmp    ch,cl
  4223eb:	imul   esp,DWORD PTR [esi+0x7c325542],0x22
  4223f2:	jp     0x42239e
  4223f4:	stos   DWORD PTR es:[edi],eax
  4223f5:	xchg   esp,eax
  4223f6:	xchg   esi,eax
  4223f7:	pop    eax
  4223f8:	aam    0x51
  4223fa:	push   0x5
  4223fc:	outs   dx,WORD PTR ds:[esi]
  4223fe:	adc    DWORD PTR [edx],ecx
  422400:	(bad)  
  422401:	loopne 0x422456
  422403:	addr16 retf 
  422405:	mov    al,0x83
  422407:	fild   WORD PTR [eax+0x68]
  42240a:	leave  
  42240b:	xor    ch,BYTE PTR [edx+0x76]
  42240e:	jae    0x4223b4
  422410:	pop    esi
  422411:	nop
  422412:	test   BYTE PTR [edx+eiz*4+0x5b],0xc7
  422417:	and    eax,0xd17d907d
  42241c:	in     eax,dx
  42241d:	jo     0x4223c3
  42241f:	push   eax
  422420:	cmp    DWORD PTR [esi+esi*2-0x10],edi
  422424:	pop    eax
  422425:	jnp    0x422471
  422427:	iret   
  422428:	mov    esp,0xb5d30a88
  42242d:	add    eax,0xa6b75fc6
  422432:	add    BYTE PTR [edi-0x512341db],ah
  422438:	cmp    DWORD PTR [edi],eax
  42243a:	ja     0x422431
  42243c:	jno    0x42241f
  42243e:	cmp    eax,0xf2b98848
  422443:	xchg   ebx,eax
  422444:	mov    edi,0x1fda5acb
  422449:	hlt    
  42244a:	ins    BYTE PTR es:[edi],dx
  42244b:	call   0xba2b7548
  422450:	add    BYTE PTR [ebx+0x4fb617b2],dh
  422456:	pop    ecx
  422457:	sti    
  422458:	or     bh,BYTE PTR [esi]
  42245a:	xchg   edi,eax
  42245b:	push   edx
  42245c:	xor    BYTE PTR [edx-0x55],dl
  42245f:	sbb    ah,BYTE PTR [edx+0x57e36eba]
  422465:	ss sub al,0xe7
  422468:	dec    edx
  422469:	sbb    cl,BYTE PTR [esi+0x5358f465]
  42246f:	sahf   
  422470:	sub    al,0x7b
  422472:	outs   dx,DWORD PTR ds:[esi]
  422473:	cmc    
  422474:	ins    DWORD PTR es:[edi],dx
  422475:	inc    esi
  422476:	imul   DWORD PTR [ecx-0x34]
  422479:	ds dec ebp
  42247b:	sub    edx,DWORD PTR [ebp-0x2b]
  42247e:	retf   0xbded
  422481:	pop    esp
  422482:	in     al,dx
  422483:	pop    edx
  422484:	pushf  
  422485:	into   
  422486:	mov    al,0x9d
  422488:	loope  0x4224f9
  42248a:	leave  
  42248b:	mov    bh,0x8d
  42248d:	adc    DWORD PTR [esi+0x1d],ebp
  422490:	sbb    esp,ebp
  422492:	hlt    
  422493:	xor    BYTE PTR [ebp+0x38],ch
  422496:	int3   
  422497:	or     edx,DWORD PTR [edx]
  422499:	popa   
  42249a:	rcl    BYTE PTR [esi+ebp*2-0x4b],cl
  42249e:	les    edx,FWORD PTR [ecx-0x3a6286a6]
  4224a4:	fnstsw WORD PTR ds:0xce60cdf8
  4224aa:	in     al,dx
  4224ab:	aaa    
  4224ac:	push   ebx
  4224ad:	cmc    
  4224ae:	or     eax,0xca425616
  4224b3:	test   al,0x82
  4224b5:	add    ah,BYTE PTR [edx-0x48]
  4224b8:	dec    ecx
  4224b9:	push   cs
  4224ba:	retf   
  4224bb:	add    eax,0xaff440be
  4224c0:	aad    0x57
  4224c2:	stos   DWORD PTR es:[edi],eax
  4224c3:	jno    0x4224bb
  4224c5:	inc    esp
  4224c6:	push   0x21
  4224c8:	cli    
  4224c9:	outs   dx,BYTE PTR ds:[esi]
  4224ca:	ins    BYTE PTR es:[edi],dx
  4224cb:	or     bh,BYTE PTR [ebx-0x5d]
  4224ce:	and    BYTE PTR [esi-0x2b],ch
  4224d1:	rol    edx,1
  4224d3:	stos   BYTE PTR es:[edi],al
  4224d4:	dec    ebp
  4224d5:	sbb    cl,bh
  4224d7:	imul   ecx,DWORD PTR [bp+si+0x5ccf],0xffffffdb
  4224dd:	mov    eax,0x6d608b71
  4224e2:	jmp    0x329f:0x86eace21
  4224e9:	stos   DWORD PTR es:[edi],eax
  4224ea:	jle    0x4224c4
  4224ec:	clc    
  4224ed:	inc    esi
  4224ee:	(bad)  
  4224ef:	jmp    0xfb8f:0x812230b
  4224f6:	xlat   BYTE PTR ds:[ebx]
  4224f7:	pop    ss
  4224f8:	fcmovu st,st(0)
  4224fa:	xchg   edi,eax
  4224fb:	and    al,0x50
  4224fd:	clc    
  4224fe:	(bad)  
  4224ff:	outs   dx,DWORD PTR cs:[esi]
  422501:	inc    esp
  422502:	(bad)  
  422503:	icebp  
  422504:	sti    
  422505:	pop    edx
  422506:	push   esp
  422507:	mov    esi,0x1efbee36
  42250c:	and    eax,0xe59f12ec
  422511:	pop    esi
  422512:	iret   
  422513:	cmp    cl,bh
  422515:	cmp    edi,ebx
  422517:	fadd   QWORD PTR [esi]
  422519:	adc    eax,0x28e8e39c
  42251e:	daa    
  42251f:	lds    ecx,FWORD PTR [ecx+0x1becaa59]
  422525:	outs   dx,BYTE PTR ds:[esi]
  422526:	dec    eax
  422527:	imul   edi,DWORD PTR [ecx],0x5eea1bf2
  42252d:	adc    al,0xc1
  42252f:	or     eax,0xf9b9a672
  422534:	(bad)  
  422535:	repnz push 0xffffffba
  422538:	xlat   BYTE PTR ds:[ebx]
  422539:	add    ah,cl
  42253b:	push   ecx
  42253c:	loopne 0x4225b1
  42253e:	dec    ecx
  42253f:	stos   DWORD PTR es:[edi],eax
  422540:	ds jge 0x4225b5
  422543:	test   DWORD PTR [ecx+edx*1-0x495e741b],0xea6bb45f
  42254e:	jmp    0x4224f6
  422550:	cmc    
  422551:	mov    ch,0xa2
  422553:	xchg   edi,eax
  422554:	fs ret 0xad08
  422558:	cmp    al,0x52
  42255a:	adc    eax,0xf2e302fa
  42255f:	addr16 iret 
  422561:	mov    ds:0xec773697,eax
  422566:	stos   DWORD PTR es:[edi],eax
  422567:	mov    ebp,0xc93af4ad
  42256c:	gs out 0x15,eax
  42256f:	(bad)  
  422570:	push   edx
  422571:	xchg   ecx,eax
  422572:	adc    ah,BYTE PTR [eax-0x67]
  422575:	add    al,0xa
  422577:	pop    ebp
  422578:	push   ds
  422579:	idiv   BYTE PTR [ebx+0xb716458]
  42257f:	xor    ah,BYTE PTR [ecx+eiz*4+0x73]
  422583:	popf   
  422584:	pop    ebp
  422585:	arpl   bp,bp
  422587:	arpl   WORD PTR [ecx-0x734da2bf],bx
  42258d:	cmp    ch,BYTE PTR [esi-0x3f]
  422590:	das    
  422591:	sbb    ebp,DWORD PTR [ebp+ebx*1+0x48]
  422595:	add    eax,0xdddcfb8e
  42259a:	pusha  
  42259b:	mov    bh,0x14
  42259d:	xchg   DWORD PTR [edx+0xb],edi
  4225a0:	and    al,0xdb
  4225a2:	in     eax,dx
  4225a3:	ror    edx,1
  4225a5:	es sti 
  4225a7:	js     0x422585
  4225a9:	inc    edx
  4225aa:	out    0x2d,eax
  4225ac:	inc    esp
  4225ad:	dec    edx
  4225ae:	push   edi
  4225af:	cdq    
  4225b0:	jmp    0x35e0:0x46c563bd
  4225b7:	jmp    0x38b2974e
  4225bc:	dec    edx
  4225bd:	and    al,0xd2
  4225bf:	mov    eax,0x4ee39f12
  4225c4:	mov    dh,0x58
  4225c6:	push   cs
  4225c7:	shl    eax,0x54
  4225ca:	mov    BYTE PTR [ecx-0x29],ah
  4225cd:	iret   
  4225ce:	ja     0x42258f
  4225d0:	repz mov edi,0x6986db41
  4225d6:	imul   ebx,esi,0x5f
  4225d9:	sub    al,0x3a
  4225db:	hlt    
  4225dc:	fistp  WORD PTR ss:[esi+eax*1+0x7596e125]
  4225e4:	cmp    eax,0x523f91d3
  4225e9:	xor    al,0x91
  4225eb:	jmp    0x422610
  4225ed:	dec    ecx
  4225ee:	cmp    eax,0xec6ac05f
  4225f3:	mov    eax,0x122e1c79
  4225f8:	mov    dh,cl
  4225fa:	pushf  
  4225fb:	push   edx
  4225fc:	pop    DWORD PTR [esi]
  4225fe:	leave  
  4225ff:	sbb    ebp,eax
  422601:	cwde   
  422602:	jecxz  0x4225db
  422604:	(bad)  
  422605:	loop   0x4225ce
  422607:	outs   dx,BYTE PTR ds:[esi]
  422608:	cmp    bh,BYTE PTR [ebx-0x7a41a8de]
  42260e:	and    BYTE PTR [edi-0x6358ee7f],0x97
  422615:	lahf   
  422616:	pop    ds
  422617:	mov    dl,BYTE PTR [ebx-0x48]
  42261a:	sub    edx,DWORD PTR [ecx]
  42261c:	jge    0x4225ec
  42261e:	in     ax,dx
  422620:	xchg   esp,eax
  422621:	lahf   
  422622:	lods   eax,DWORD PTR ds:[esi]
  422623:	pop    ss
  422624:	xor    BYTE PTR [edi+eax*4],0x4a
  422628:	sub    eax,0x7d392200
  42262d:	push   ebp
  42262e:	sar    al,1
  422630:	mov    eax,ds:0x9d8e068a
  422635:	mov    cl,0xe9
  422637:	sbb    BYTE PTR [ecx],ch
  422639:	pop    edx
  42263a:	cld    
  42263b:	(bad)  
  42263c:	or     eax,0xbfad7a54
  422641:	jl     0x4225c4
  422643:	inc    ebx
  422644:	and    al,bl
  422646:	sub    BYTE PTR [esi],bh
  422648:	mov    WORD PTR [eax-0x5eebddd5],es
  42264e:	jg     0x4226a9
  422650:	adc    ch,BYTE PTR [ebx]
  422652:	pop    edx
  422653:	adc    edx,DWORD PTR [ecx+edi*8]
  422656:	(bad)  
  422657:	lahf   
  422658:	dec    edi
  422659:	mov    ds:0x2d4842e,eax
  42265e:	call   0xaa82:0xba902d58
  422665:	adc    ecx,esp
  422667:	add    ecx,esp
  422669:	inc    esp
  42266a:	(bad)  
  42266b:	hlt    
  42266c:	leave  
  42266d:	lock cmp bl,BYTE PTR [eiz*2+0x389fe903]
  422675:	xor    al,0x13
  422677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422678:	dec    eax
  422679:	cmovg  esi,DWORD PTR [edx]
  42267c:	jg     0x422618
  42267e:	add    al,0x8b
  422680:	mov    fs,WORD PTR [ecx-0x442260ac]
  422686:	cmp    BYTE PTR [edi+0x2eb4d65e],ah
  42268c:	mov    BYTE PTR [ecx-0x50],dl
  42268f:	adc    eax,0x18eb60b8
  422694:	cmp    eax,DWORD PTR [ebx]
  422696:	lahf   
  422697:	(bad)  
  422698:	aas    
  422699:	add    dl,al
  42269b:	jnp    0x4226e2
  42269d:	mov    ecx,0xec66b29d
  4226a2:	xchg   ebx,eax
  4226a3:	outs   dx,BYTE PTR ds:[esi]
  4226a4:	sahf   
  4226a5:	fimul  DWORD PTR [ebx-0x7388e92e]
  4226ab:	inc    edi
  4226ac:	push   0xffffff9a
  4226ae:	jbe    0x42270c
  4226b0:	in     eax,0xe6
  4226b2:	xor    ebx,eax
  4226b4:	not    DWORD PTR [ecx-0x461e10ac]
  4226ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226bb:	cmp    al,0x1d
  4226bd:	fwait
  4226be:	mov    cl,0xdc
  4226c0:	pop    ss
  4226c1:	or     BYTE PTR ds:[esi-0x49],bh
  4226c5:	xchg   DWORD PTR [ecx-0x64],ebp
  4226c8:	mov    ebx,0x84fdc180
  4226cd:	sub    ebx,DWORD PTR [ebx+0x7b]
  4226d0:	fwait
  4226d1:	sbb    al,0x76
  4226d3:	jg     0x42270d
  4226d5:	nop
  4226d6:	or     eax,0xa430b8d2
  4226db:	xor    BYTE PTR [eax-0x7e],bl
  4226de:	inc    edi
  4226df:	call   0xe305c15c
  4226e4:	out    0x4,eax
  4226e6:	fistp  DWORD PTR [esi+0x263727c8]
  4226ec:	das    
  4226ed:	hlt    
  4226ee:	sar    bh,cl
  4226f0:	and    esp,esp
  4226f2:	adc    BYTE PTR [eax-0x6a064b5e],al
  4226f8:	fstp   QWORD PTR [ebx+0x329f3034]
  4226fe:	or     eax,0x7a2680de
  422703:	jb     0x422695
  422705:	ja     0x422734
  422707:	push   edx
  422708:	(bad)  
  422709:	dec    edx
  42270a:	lods   eax,DWORD PTR ds:[esi]
  42270b:	int3   
  42270c:	daa    
  42270d:	je     0x422720
  42270f:	js     0x42271e
  422711:	loopne 0x422782
  422713:	inc    edi
  422714:	adc    cl,bl
  422716:	retf   
  422717:	add    ch,BYTE PTR [esi]
  422719:	inc    edi
  42271a:	fstp   DWORD PTR [edi-0x4b]
  42271d:	and    esi,esi
  42271f:	sahf   
  422720:	xchg   ecx,eax
  422721:	out    0x5d,eax
  422723:	std    
  422724:	add    eax,0x7d895a82
  422729:	push   ds
  42272a:	pop    esi
  42272b:	(bad)  [edx+0x3aaa8ab6]
  422731:	sub    DWORD PTR [ecx],edi
  422733:	push   esp
  422734:	xchg   edi,eax
  422735:	push   es
  422736:	pop    ss
  422737:	dec    edi
  422738:	jae    0x42278f
  42273a:	mov    ebx,0x4045b6cd
  42273f:	push   cs
  422740:	dec    ebp
  422741:	ds or  al,0x90
  422744:	mov    esp,0xbb10141c
  422749:	jecxz  0x422794
  42274b:	mov    ecx,0x1b63aced
  422750:	xor    al,al
  422752:	adc    DWORD PTR [edx-0x47],edi
  422755:	jne    0x4227b2
  422757:	in     eax,dx
  422758:	in     eax,0x5b
  42275a:	out    0x90,al
  42275c:	sar    BYTE PTR [eax-0x78],1
  42275f:	not    BYTE PTR [edi+0x3b]
  422762:	dec    esi
  422763:	xchg   DWORD PTR [ebx-0x7d63f74b],edi
  422769:	jne    0x42277f
  42276b:	imul   edx,DWORD PTR [ebp-0x8b914ef],0xfffffff2
  422772:	push   eax
  422773:	clc    
  422774:	fld    DWORD PTR [ebx]
  422776:	mov    al,ds:0xd3ec7b10
  42277b:	push   ss
  42277c:	je     0x422791
  42277e:	jge    0x422780
  422780:	fcmovnu st,st(1)
  422782:	jmp    0xe88ae908
  422787:	loop   0x42270b
  422789:	bound  eax,QWORD PTR [ebx]
  42278b:	fwait
  42278c:	test   DWORD PTR [edi-0x53d0917d],edi
  422792:	daa    
  422793:	mov    esi,esp
  422795:	add    BYTE PTR [ebx-0x53493b64],bl
  42279b:	mov    edx,0x4014bdee
  4227a0:	mov    cl,0xe3
  4227a2:	jo     0x42274e
  4227a4:	or     eax,0xcb5f59b3
  4227a9:	stos   BYTE PTR es:[edi],al
  4227aa:	xor    al,0x4c
  4227ac:	mov    ds:0xb14f70b,al
  4227b1:	jns    0x42279f
  4227b3:	shl    BYTE PTR [ebp-0x49],0x88
  4227b7:	adc    al,al
  4227b9:	xor    esi,DWORD PTR [edi+0x68af2e81]
  4227bf:	mov    ecx,0x1ae21a1
  4227c4:	aad    0x2f
  4227c6:	and    eax,0x562e6ad7
  4227cb:	cdq    
  4227cc:	xchg   ecx,eax
  4227cd:	inc    esi
  4227ce:	mov    ch,bh
  4227d0:	mov    ds:0xf0b487b8,eax
  4227d5:	(bad)  
  4227d6:	in     eax,dx
  4227d7:	imul   ebx,DWORD PTR ds:0xe259fd75,0x34
  4227de:	and    bl,BYTE PTR [ebp-0x57]
  4227e1:	mov    al,0x68
  4227e3:	or     eax,0x35831138
  4227e8:	dec    ebx
  4227e9:	retf   0x9cee
  4227ec:	mov    edi,0xaa6554cf
  4227f1:	repnz (bad) 
  4227f3:	int3   
  4227f4:	xlat   BYTE PTR ds:[ebx]
  4227f5:	xchg   ecx,eax
  4227f6:	mov    WORD PTR [ecx+0x2],cs
  4227f9:	neg    DWORD PTR [edx+0x21]
  4227fc:	push   esi
  4227fd:	or     eax,0xbbc903dd
  422802:	jmp    0xfcc751fa
  422807:	inc    eax
  422808:	daa    
  422809:	mov    al,ds:0x67a20d8a
  42280e:	push   edi
  42280f:	or     al,0x18
  422811:	fs dec ebx
  422813:	outs   dx,BYTE PTR ds:[esi]
  422814:	and    BYTE PTR [ebp+0x5a],cl
  422817:	mov    cl,0xe6
  422819:	xchg   DWORD PTR [ebx],ebp
  42281b:	pop    edx
  42281c:	adc    BYTE PTR [edi-0x4a],ch
  42281f:	cmp    eax,0x9457bfe4
  422824:	clc    
  422825:	xchg   ebx,eax
  422826:	ja     0x422892
  422828:	cwde   
  422829:	push   ecx
  42282a:	jl     0x422899
  42282c:	dec    ecx
  42282d:	sub    al,BYTE PTR [eax+0x1]
  422830:	jmp    0x6219:0xc97feb13
  422837:	add    eax,0x8914008a
  42283c:	(bad)  
  42283d:	sub    BYTE PTR [edx-0x3a930fbf],dl
  422843:	inc    ebx
  422844:	imul   ebx,DWORD PTR [ebp-0x6f],0x2385e532
  42284b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42284c:	sub    eax,0xf347a898
  422851:	in     eax,dx
  422852:	or     eax,0x14a7f6e5
  422857:	(bad)  
  422858:	mov    edx,0xa3d25d8f
  42285d:	stos   BYTE PTR es:[edi],al
  42285e:	(bad)  
  42285f:	xchg   edx,eax
  422860:	scas   al,BYTE PTR es:[edi]
  422861:	jecxz  0x422837
  422863:	cmp    al,0xad
  422865:	jmp    0xebfec311
  42286a:	or     al,0xa4
  42286d:	cld    
  42286e:	mov    ah,0x57
  422870:	addr16 mov ebp,esi
  422873:	sub    al,0x4a
  422875:	ins    BYTE PTR es:[edi],dx
  422876:	(bad)  
  422877:	and    esi,edx
  422879:	lahf   
  42287a:	scas   eax,DWORD PTR es:[edi]
  42287b:	push   eax
  42287c:	mov    ch,0x4f
  42287e:	pop    eax
  42287f:	jae    0x422852
  422881:	sbb    edx,DWORD PTR [ebx-0x716ff29f]
  422887:	sub    dh,bh
  422889:	icebp  
  42288a:	dec    BYTE PTR [esi-0x3fab60e6]
  422890:	and    ah,BYTE PTR [edx]
  422892:	jae    0x4228c5
  422894:	int3   
  422895:	cli    
  422896:	bound  edi,QWORD PTR [edx+eax*2+0x1d]
  42289a:	dec    esp
  42289b:	pusha  
  42289c:	scas   al,BYTE PTR es:[edi]
  42289d:	inc    ecx
  42289e:	leave  
  42289f:	out    0xba,eax
  4228a1:	gs fsubr st,st(2)
  4228a4:	jge    0x4228e7
  4228a6:	ss pop edi
  4228a8:	outs   dx,DWORD PTR ds:[esi]
  4228a9:	stc    
  4228aa:	xlat   BYTE PTR ds:[ebx]
  4228ab:	cdq    
  4228ac:	xchg   esi,eax
  4228ad:	inc    edi
  4228ae:	mov    ebx,0xd4e800ac
  4228b3:	xchg   edx,eax
  4228b4:	cdq    
  4228b5:	and    edi,DWORD PTR [esi]
  4228b7:	mov    edi,0xf51478f
  4228bc:	xor    ecx,DWORD PTR [edx]
  4228be:	iret   
  4228bf:	ror    BYTE PTR [esi-0x37],cl
  4228c2:	(bad)  
  4228c3:	mov    ds:0x4af2e22a,al
  4228c8:	sub    esi,DWORD PTR [edx]
  4228ca:	repnz dec ebx
  4228cc:	push   edx
  4228cd:	leave  
  4228ce:	lds    edi,FWORD PTR [ebx+0x28]
  4228d1:	push   edx
  4228d2:	(bad)  
  4228d4:	fcomp  DWORD PTR [esi+edi*4+0x1b]
  4228d8:	shr    BYTE PTR [ebx+0x7d],1
  4228db:	mov    cl,0x8c
  4228dd:	inc    ebp
  4228de:	push   es
  4228df:	cmp    al,0x38
  4228e1:	rcl    BYTE PTR [ebx-0x45],cl
  4228e4:	lea    ebp,[esi-0x584a8fa5]
  4228ea:	out    dx,eax
  4228eb:	pop    ecx
  4228ec:	xchg   ecx,eax
  4228ed:	rcl    DWORD PTR [eax+0x5a33faa1],1
  4228f3:	add    edx,esp
  4228f5:	inc    ecx
  4228f6:	fild   QWORD PTR [eax]
  4228f8:	mov    esi,0x568c2b7e
  4228fd:	and    DWORD PTR [ebp-0x9],esp
  422900:	xor    ecx,DWORD PTR [edx-0x60]
  422903:	mov    eax,0xb8ec837
  422908:	cmp    ch,dl
  42290a:	in     eax,0xde
  42290c:	xchg   ecx,eax
  42290d:	inc    eax
  42290e:	jnp    0x422943
  422910:	rcl    DWORD PTR [ecx+esi*4+0x12],cl
  422914:	mov    bh,0x68
  422916:	or     BYTE PTR [eax+0xb],bh
  422919:	pop    ebx
  42291a:	sbb    edx,esp
  42291c:	loope  0x422956
  42291e:	dec    ecx
  42291f:	test   DWORD PTR [ecx+eax*8-0x21cdc765],0xa392474f
  42292a:	outs   dx,BYTE PTR ds:[esi]
  42292b:	jno    0x4228da
  42292d:	push   eax
  42292e:	out    0x1f,al
  422930:	retf   
  422931:	push   esp
  422932:	jns    0x42290e
  422934:	sub    al,bl
  422936:	push   es
  422937:	xchg   ebx,eax
  422938:	jbe    0x422915
  42293a:	cld    
  42293b:	xor    eax,0x279a9a6b
  422940:	jg     0x42291e
  422942:	and    ecx,DWORD PTR [edx]
  422944:	sbb    BYTE PTR [ebx+0x4],0x7b
  422948:	or     al,0xc8
  42294a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294b:	jmp    0x886fd31b
  422950:	pop    ss
  422951:	pop    eax
  422952:	js     0x4228f9
  422954:	popa   
  422955:	popf   
  422956:	and    al,0xb8
  422958:	cmp    DWORD PTR [edi-0x60],esp
  42295b:	sub    BYTE PTR [eax],cl
  42295d:	push   eax
  42295e:	(bad)  ds:0xec5d1cb8
  422964:	cs mov edx,eax
  422967:	jecxz  0x42299f
  422969:	std    
  42296a:	lock add eax,0x71549bd8
  422970:	rol    DWORD PTR [ebx],0x9a
  422973:	jns    0x422962
  422975:	call   0x7b4e:0xdc191e7f
  42297c:	lods   eax,DWORD PTR ds:[esi]
  42297d:	into   
  42297e:	jp     0x4229be
  422980:	mov    eax,0x7322e15b
  422985:	int3   
  422986:	outs   dx,BYTE PTR ds:[esi]
  422987:	ds jge 0x422945
  42298a:	or     al,0x81
  42298c:	test   al,0x3c
  42298e:	pushf  
  42298f:	aas    
  422990:	mov    ebx,0x64bb8d0d
  422995:	pop    ss
  422996:	je     0x4229f7
  422998:	retf   0xa6ab
  42299b:	adc    al,0x6f
  42299d:	int3   
  42299e:	ds sbb al,0x49
  4229a1:	pop    ebp
  4229a2:	sub    bl,BYTE PTR [edi-0x4f]
  4229a5:	xor    DWORD PTR ds:0xb1ea2529,esi
  4229ab:	out    dx,eax
  4229ac:	ja     0x4229a1
  4229ae:	out    0x50,eax
  4229b0:	ja     0x422a08
  4229b2:	lods   eax,DWORD PTR ds:[esi]
  4229b3:	nop    ecx
  4229b6:	fidivr DWORD PTR [eax+ecx*1]
  4229b9:	mov    ebx,0x4e628cff
  4229be:	or     DWORD PTR [ebp-0x300e66c5],eax
  4229c4:	cmp    bh,BYTE PTR [edi+eiz*1+0x6263193f]
  4229cb:	jb     0x422962
  4229cd:	std    
  4229ce:	out    0xbb,al
  4229d0:	pop    ss
  4229d1:	and    DWORD PTR [ecx-0x7156799f],edx
  4229d7:	(bad)  
  4229d8:	sub    esi,edi
  4229da:	pop    ebp
  4229db:	mov    eax,0xfabd69ca
  4229e0:	mov    bh,0xb9
  4229e2:	jo     0x422a4f
  4229e4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4229e6:	in     eax,dx
  4229e7:	cmp    eax,0x39411adf
  4229ec:	jecxz  0x4229e2
  4229ee:	inc    ebp
  4229ef:	dec    ecx
  4229f0:	test   eax,0x70760a74
  4229f5:	cmp    al,0xc3
  4229f7:	(bad)  [ecx+0x2ccc557e]
  4229fd:	lods   eax,DWORD PTR ds:[esi]
  4229fe:	push   es
  4229ff:	jmp    0xa1a5:0x3304de4d
  422a06:	adc    ebx,ebx
  422a08:	retf   0x9701
  422a0b:	inc    esp
  422a0c:	xchg   ecx,eax
  422a0d:	retf   
  422a0e:	cmp    eax,0x23e4ce5f
  422a13:	cmp    dl,0x19
  422a16:	mov    eax,DWORD PTR [esi-0x1]
  422a19:	jg     0x4229c7
  422a1b:	xchg   edi,eax
  422a1c:	sbb    DWORD PTR [ebx],ebx
  422a1e:	mov    ch,BYTE PTR [ecx-0x2783c3c9]
  422a24:	in     eax,0xec
  422a26:	mov    bh,0xb3
  422a28:	sbb    eax,0x78c2e1e2
  422a2d:	jae    0x4229f3
  422a2f:	sti    
  422a30:	cmp    eax,0x2d1728a3
  422a35:	int3   
  422a36:	add    ah,dh
  422a38:	mov    edx,0x89ca8b47
  422a3d:	inc    esp
  422a3e:	and    ebp,eax
  422a40:	or     ebp,edx
  422a42:	je     0x422a1d
  422a44:	test   dh,0x2c
  422a47:	jl     0x422a9f
  422a49:	and    DWORD PTR [edx],esi
  422a4b:	mov    al,ds:0x4a0cee3f
  422a50:	mov    DWORD PTR [ecx-0x27],ebx
  422a53:	iret   
  422a54:	pop    edx
  422a55:	fld    st(6)
  422a57:	mov    ch,0x71
  422a59:	shr    DWORD PTR [eax-0x5ea810be],1
  422a5f:	ret    
  422a60:	aas    
  422a61:	aas    
  422a62:	scas   eax,DWORD PTR es:[edi]
  422a63:	stc    
  422a64:	nop
  422a65:	mov    DWORD PTR [ebx-0x648e49ef],ecx
  422a6b:	neg    DWORD PTR [ebx]
  422a6d:	push   ebp
  422a6e:	and    eax,0x417386ac
  422a73:	fisttp DWORD PTR [ecx]
  422a75:	mov    ecx,0x101e497b
  422a7a:	or     DWORD PTR [ebx+0x2c],ecx
  422a7d:	dec    esi
  422a7e:	in     eax,dx
  422a7f:	test   al,0xa5
  422a81:	sti    
  422a82:	xlat   BYTE PTR ds:[ebx]
  422a83:	and    BYTE PTR [edi],dh
  422a85:	js     0x422aaf
  422a87:	(bad)  
  422a88:	test   BYTE PTR [edi],0x70
  422a8b:	adc    BYTE PTR [eax-0x13],ch
  422a8e:	jnp    0x422a15
  422a90:	imul   esi,DWORD PTR ds:0xb4426a8f,0x3cb0b15d
  422a9a:	mov    al,ds:0x73e97336
  422a9f:	leave  
  422aa0:	fs pop esi
  422aa2:	dec    edi
  422aa3:	dec    esi
  422aa4:	jl     0x422a5d
  422aa6:	mov    bh,0xcc
  422aa8:	cmp    eax,0xe09bb2ce
  422aad:	add    dh,ah
  422aaf:	adc    BYTE PTR [eax-0x3a],bl
  422ab2:	xor    ebp,ecx
  422ab4:	sar    ebx,1
  422ab6:	jae    0x422b01
  422ab8:	ds das 
  422aba:	cmp    ch,BYTE PTR [ecx*1-0x3ee15e04]
  422ac1:	imul   esi,DWORD PTR [ebp-0x1c],0x31ea6f70
  422ac8:	pop    ebx
  422ac9:	jmp    0x9093:0x80c347e1
  422ad0:	sar    BYTE PTR [ebp-0x5d],1
  422ad3:	add    ebp,DWORD PTR [ebp+0x6d24cf78]
  422ad9:	arpl   WORD PTR [edx],bx
  422adb:	jecxz  0x422a6b
  422add:	jb     0x422ac3
  422adf:	dec    ebx
  422ae0:	fimul  DWORD PTR [esi+0x69]
  422ae3:	or     edi,ecx
  422ae5:	in     al,dx
  422ae6:	in     al,dx
  422ae7:	and    BYTE PTR [edx+edi*2+0x490fa6dc],ah
  422aee:	cmp    BYTE PTR [edi-0x474f15b3],0x36
  422af5:	sub    al,bh
  422af7:	sub    eax,0x221fe7fb
  422afc:	sti    
  422afd:	int3   
  422afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aff:	sub    edi,eax
  422b01:	push   0xfffffffc
  422b03:	cmp    dh,BYTE PTR [ecx+0x4e9a517a]
  422b09:	pusha  
  422b0a:	stc    
  422b0b:	nop
  422b0c:	push   0xffffff94
  422b0e:	cmp    al,0x5f
  422b10:	pop    es
  422b11:	cmp    BYTE PTR [ecx+0x72676580],bh
  422b17:	js     0x422b65
  422b19:	add    al,0xc1
  422b1b:	cmp    eax,0xdf238172
  422b20:	fimul  WORD PTR [eax-0x3ac8ef90]
  422b26:	es loope 0x422ba1
  422b29:	call   0x3cab:0x60530945
  422b30:	daa    
  422b31:	and    al,0xdb
  422b33:	into   
  422b34:	sbb    dh,BYTE PTR [esi+0x791df6ea]
  422b3a:	clc    
  422b3b:	mov    es,WORD PTR [ecx-0x6c]
  422b3e:	(bad)  
  422b3f:	sub    al,0x38
  422b41:	push   0x3bd477df
  422b46:	ja     0x422ba1
  422b48:	js     0x422b04
  422b4a:	out    dx,al
  422b4b:	dec    esi
  422b4c:	sbb    DWORD PTR [ebx+0x15],ebx
  422b4f:	jmp    0xf507:0xf168c1a4
  422b56:	loop   0x422ba6
  422b58:	jp     0x422b61
  422b5a:	sub    eax,eax
  422b5c:	mov    ecx,0xbc6141ee
  422b61:	ds sbb eax,0x9f927d2
  422b67:	add    cl,dh
  422b69:	cmc    
  422b6a:	dec    esi
  422b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b6c:	mov    bh,0xa3
  422b6e:	dec    ecx
  422b6f:	imul   esp,DWORD PTR [ebx+0x3737174c],0x47a0c23c
  422b79:	or     dl,ah
  422b7b:	arpl   WORD PTR [esi-0xe4b9742],bp
  422b81:	pop    ebp
  422b82:	lea    ebx,[ebx]
  422b84:	pop    ecx
  422b85:	mov    dl,0xe3
  422b87:	xor    bl,al
  422b89:	ret    0x400d
  422b8c:	in     eax,dx
  422b8d:	(bad)  
  422b8f:	repnz mov ebx,0x6fb79b03
  422b95:	nop
  422b96:	xor    ebx,edx
  422b98:	sbb    dh,BYTE PTR [ecx-0x26145f4]
  422b9e:	daa    
  422b9f:	jb     0x422c0f
  422ba1:	push   edi
  422ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ba3:	add    DWORD PTR [edi],esi
  422ba5:	je     0x422b7f
  422ba7:	into   
  422ba8:	dec    edi
  422ba9:	or     esi,esp
  422bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bac:	xlat   BYTE PTR ds:[ebx]
  422bad:	outs   dx,BYTE PTR ds:[esi]
  422bae:	pop    ebx
  422baf:	and    eax,0x610ee01f
  422bb4:	dec    ebp
  422bb5:	test   al,0x48
  422bb7:	mov    edx,0x8651142b
  422bbc:	(bad)  
  422bbd:	addr16 out dx,al
  422bbf:	clc    
  422bc0:	stos   BYTE PTR es:[edi],al
  422bc1:	mov    bl,BYTE PTR [edx]
  422bc3:	in     eax,dx
  422bc4:	pop    ecx
  422bc5:	test   eax,0xf5b339e6
  422bca:	mov    esi,0xd87a755f
  422bcf:	jns    0x422b75
  422bd1:	mov    eax,0x3dbe773d
  422bd6:	and    BYTE PTR [ebp-0x6d],dl
  422bd9:	inc    edi
  422bda:	cli    
  422bdb:	and    al,0xf3
  422bdd:	dec    edi
  422bde:	jp     0x422c40
  422be0:	pop    es
  422be1:	add    DWORD PTR [ebx],edi
  422be3:	sbb    ecx,DWORD PTR [ebx+0x41]
  422be6:	and    DWORD PTR ds:0x62d0afd8,edx
  422bec:	cmp    DWORD PTR [ebx+ebp*2+0x2a1256a6],esp
  422bf3:	scas   al,BYTE PTR es:[edi]
  422bf4:	mov    BYTE PTR [esi+edi*1-0x6f510f97],0xfb
  422bfc:	inc    esp
  422bfd:	adc    al,0x7b
  422bff:	add    BYTE PTR [ecx-0x7eed6f0e],ah
  422c05:	cwde   
  422c06:	aad    0x45
  422c08:	add    DWORD PTR [esi+ebp*8-0x663115d7],eax
  422c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c10:	xchg   edx,eax
  422c11:	or     BYTE PTR [ebp-0x5a60520d],0x61
  422c18:	mov    eax,ds:0xef4a3413
  422c1d:	mov    ds:0xdfec1553,al
  422c22:	mov    ecx,0x4fe5bcad
  422c27:	pop    ebp
  422c28:	test   eax,0x51f09fb4
  422c2d:	leave  
  422c2e:	les    esi,FWORD PTR [edi+0x3b8af098]
  422c34:	ins    DWORD PTR es:[edi],dx
  422c35:	pop    esp
  422c36:	mov    WORD PTR [edx],gs
  422c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c39:	sub    esi,0xb369944a
  422c3f:	cld    
  422c40:	neg    DWORD PTR [ebx]
  422c42:	mov    eax,DWORD PTR [ecx]
  422c44:	ror    BYTE PTR ds:0x1fdfe13c,0x71
  422c4b:	or     edx,DWORD PTR [ebp+0x41]
  422c4e:	xor    al,BYTE PTR ds:0xf4d8d488
  422c54:	lds    edx,FWORD PTR [eax-0x26]
  422c57:	loopne 0x422c72
  422c59:	rcr    ebx,cl
  422c5b:	jae    0x422c83
  422c5d:	jg     0x422cad
  422c5f:	ret    0x5bf8
  422c62:	imul   ebp,ebp,0xffffffaf
  422c65:	je     0x422c5f
  422c67:	aaa    
  422c68:	fdiv   QWORD PTR [ecx+0x4f026813]
  422c6e:	and    bh,bl
  422c70:	lock aas 
  422c72:	mov    DWORD PTR [ebx],edi
  422c74:	(bad)  
  422c75:	sbb    BYTE PTR [ecx+0x6b],dh
  422c78:	push   esp
  422c79:	cdq    
  422c7a:	lock sbb eax,0xabb039de
  422c80:	cld    
  422c81:	das    
  422c82:	inc    edx
  422c83:	das    
  422c84:	repnz out dx,eax
  422c86:	mov    bl,0x6b
  422c88:	shl    DWORD PTR [edx+0x77155392],1
  422c8e:	jno    0x422d07
  422c90:	sbb    al,dl
  422c92:	and    eax,0x475a85cc
  422c97:	and    al,0xfc
  422c99:	jae    0x422cd7
  422c9b:	mov    dh,0xda
  422c9d:	daa    
  422c9e:	sti    
  422c9f:	dec    ebx
  422ca0:	and    cl,BYTE PTR [edx-0x2afa8068]
  422ca6:	outs   dx,DWORD PTR ds:[esi]
  422ca7:	in     al,dx
  422ca8:	(bad)  
  422ca9:	pop    esi
  422caa:	inc    edi
  422cab:	cli    
  422cac:	hlt    
  422cad:	and    DWORD PTR [ecx+0xd],edx
  422cb0:	inc    edx
  422cb1:	dec    eax
  422cb2:	sbb    al,ch
  422cb4:	mov    ebx,0xaf3414bc
  422cb9:	and    al,0xa2
  422cbb:	mov    al,ds:0x30a22fb5
  422cc0:	fsubr  QWORD PTR [edx]
  422cc2:	icebp  
  422cc3:	mov    ah,0x18
  422cc5:	add    eax,0x3b688b21
  422cca:	fiadd  WORD PTR [ecx-0x3e05e8f]
  422cd0:	sbb    al,0xbd
  422cd2:	mov    fs,WORD PTR ds:0xd40d084e
  422cd8:	fild   WORD PTR [esi+0x51]
  422cdb:	push   ebx
  422cdc:	retf   0x9146
  422cdf:	dec    ecx
  422ce0:	mov    eax,ds:0x6dec6f1e
  422ce5:	out    dx,eax
  422ce6:	add    BYTE PTR [edi-0x6ad6d8b3],dh
  422cec:	pusha  
  422ced:	mov    ds,ecx
  422cef:	test   eax,0xc24b7508
  422cf4:	push   esi
  422cf5:	retf   0x6120
  422cf8:	in     eax,0x62
  422cfa:	jmp    0x9272:0x1cb3d5dd
  422d01:	xchg   ecx,eax
  422d02:	xor    al,bl
  422d04:	aad    0x5b
  422d06:	hlt    
  422d07:	adc    BYTE PTR [ecx+0x5879a6fd],bh
  422d0d:	adc    DWORD PTR [ecx],0xffffffda
  422d10:	fiadd  DWORD PTR [eax]
  422d12:	sub    edx,DWORD PTR [esi]
  422d14:	sbb    BYTE PTR [edi-0x2a],0xfd
  422d18:	mov    BYTE PTR [eax],cl
  422d1a:	es cmp al,0xac
  422d1d:	jns    0x422d95
  422d1f:	add    eax,ebp
  422d21:	call   0x4f81d324
  422d26:	or     BYTE PTR [edx-0x32],dh
  422d29:	sub    esi,DWORD PTR [edi]
  422d2b:	xchg   esp,eax
  422d2c:	jnp    0x422d9a
  422d2e:	retf   0xf6bf
  422d31:	js     0x422d3e
  422d33:	mov    bh,0x76
  422d35:	fldenv [edx+0x1d]
  422d38:	test   DWORD PTR [esi+edx*8],edi
  422d3b:	or     al,0x66
  422d3d:	in     al,dx
  422d3e:	outs   dx,DWORD PTR ds:[esi]
  422d3f:	cmp    edx,DWORD PTR [eax-0x69]
  422d42:	sbb    ebx,DWORD PTR [eax]
  422d44:	call   0x2df99825
  422d49:	mov    al,ds:0xbf576fe
  422d4e:	inc    esp
  422d4f:	or     DWORD PTR [edx],ebx
  422d51:	jne    0x422dc2
  422d53:	shl    DWORD PTR [eax+0x2dab5ca9],cl
  422d59:	das    
  422d5a:	out    0x69,al
  422d5c:	jl     0x422d8a
  422d5e:	fist   DWORD PTR ds:0x9245e2f3
  422d64:	jl     0x422d6c
  422d66:	lods   al,BYTE PTR ds:[esi]
  422d67:	loop   0x422d67
  422d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d6a:	adc    ch,cl
  422d6c:	mov    ebx,0x481ce606
  422d71:	dec    edi
  422d72:	pop    ecx
  422d73:	sbb    BYTE PTR [ebp-0x396dceb5],cl
  422d79:	stos   DWORD PTR es:[edi],eax
  422d7a:	push   ebx
  422d7b:	outs   dx,BYTE PTR ds:[esi]
  422d7c:	inc    ecx
  422d7d:	or     ebp,esp
  422d7f:	jne    0x422df7
  422d81:	mov    DWORD PTR ds:0xe0fd2f32,esp
  422d87:	sub    eax,0x294357f5
  422d8c:	adc    esp,ecx
  422d8e:	and    eax,0xa56c4acb
  422d93:	pop    ds
  422d94:	sub    edx,ecx
  422d96:	mov    ds:0x6f9066f3,eax
  422d9b:	pop    esp
  422d9c:	(bad)  [edi]
  422d9e:	int3   
  422d9f:	into   
  422da0:	xchg   ebp,eax
  422da1:	fstp   TBYTE PTR [edx-0x367a02eb]
  422da7:	in     al,0x3b
  422da9:	and    al,0x9
  422dab:	daa    
  422dac:	adc    BYTE PTR [esi],dl
  422dae:	xor    ecx,DWORD PTR [eax+esi*2-0x121a040d]
  422db5:	(bad)  [edx-0x53]
  422db8:	push   esp
  422db9:	ins    DWORD PTR es:[edi],dx
  422dba:	xchg   DWORD PTR [esi-0x70],eax
  422dbd:	pushf  
  422dbe:	sub    BYTE PTR [edi+0x27451564],0xe1
  422dc5:	xchg   esi,eax
  422dc6:	(bad)  
  422dc7:	mov    dh,0x90
  422dc9:	aaa    
  422dca:	adc    eax,0xad1e4150
  422dcf:	in     eax,0x32
  422dd1:	aam    0xd0
  422dd3:	iret   
  422dd4:	nop
  422dd5:	add    al,0x4a
  422dd7:	loop   0x422e57
  422dd9:	ins    BYTE PTR es:[edi],dx
  422dda:	mov    bh,BYTE PTR ds:0xc8d4cfd6
  422de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422de1:	xor    ch,BYTE PTR [edi-0x5c]
  422de4:	sbb    edi,esi
  422de6:	sar    BYTE PTR [ecx+0x5],cl
  422de9:	shl    cl,1
  422deb:	adc    ecx,0x6a112570
  422df1:	add    al,0x28
  422df3:	test   al,0x2a
  422df5:	xchg   edx,eax
  422df6:	pop    esi
  422df7:	mov    esi,0xebb46e46
  422dfc:	cmp    eax,0x5f008922
  422e01:	push   0xda4cccca
  422e06:	fld    QWORD PTR [ebx-0x6]
  422e09:	jl     0x422e4a
  422e0b:	add    al,0x66
  422e0d:	mov    eax,0xd3a85f13
  422e12:	mov    ah,0x77
  422e14:	pop    ebx
  422e15:	cli    
  422e16:	mov    esp,0x7b24f7d6
  422e1b:	imul   edx,edi,0xffffffb8
  422e1e:	inc    ecx
  422e1f:	push   ebx
  422e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e21:	shr    DWORD PTR [bp+si],0x23
  422e25:	or     al,0x5
  422e27:	mov    dh,0xd2
  422e29:	cmp    DWORD PTR [ebp-0x1f],ebp
  422e2c:	or     al,0xf1
  422e2e:	bound  ecx,QWORD PTR ds:0x27c72d2e
  422e34:	cmp    bh,BYTE PTR [ebx+esi*2]
  422e37:	cmp    DWORD PTR [ecx],esp
  422e39:	jns    0x422ea4
  422e3b:	aas    
  422e3c:	mov    dh,0x80
  422e3e:	cmp    edi,edx
  422e40:	push   0xffffffc8
  422e42:	sbb    BYTE PTR [eax-0x42],cl
  422e45:	inc    ecx
  422e46:	(bad)  
  422e47:	cmp    al,0x17
  422e49:	popa   
  422e4a:	mov    ah,0xa
  422e4c:	sbb    ecx,DWORD PTR [ebx+eax*2+0x7c]
  422e50:	jb     0x422e12
  422e52:	jns    0x422e05
  422e54:	and    eax,0x6d406906
  422e59:	sub    dl,dl
  422e5b:	mov    ?,WORD PTR [esi-0x780fa53d]
  422e61:	mov    dl,0xcb
  422e63:	enter  0x5fb,0x38
  422e67:	pop    es
  422e68:	xor    edi,ebx
  422e6a:	mov    dl,0x31
  422e6c:	jecxz  0x422ece
  422e6e:	inc    ecx
  422e6f:	test   eax,0xed72b147
  422e74:	into   
  422e75:	inc    DWORD PTR [esi+edx*2]
  422e78:	dec    ebx
  422e79:	fcomp  st(6)
  422e7b:	xor    eax,0x5c08fbd4
  422e80:	push   0xffffff90
  422e82:	xor    eax,0xb480d34f
  422e87:	mov    ecx,edi
  422e89:	mov    ah,0xb1
  422e8b:	loopne 0x422e9f
  422e8d:	ins    DWORD PTR es:[edi],dx
  422e8e:	repnz dec ebx
  422e90:	push   edx
  422e91:	mov    DWORD PTR [ebp-0x6587104f],edi
  422e97:	scas   eax,DWORD PTR es:[edi]
  422e98:	sub    edi,edi
  422e9a:	sub    ah,BYTE PTR [edi+ecx*2+0x424e00f8]
  422ea1:	imul   edx,DWORD PTR [edi],0x3e6de439
  422ea7:	cmp    esp,ecx
  422ea9:	dec    edi
  422eaa:	pop    esi
  422eab:	add    ebp,ecx
  422ead:	fnstcw WORD PTR [esi]
  422eaf:	ror    BYTE PTR [esi+0x5f348149],cl
  422eb5:	aad    0x2e
  422eb7:	leavew 
  422eb9:	les    esi,FWORD PTR [ebp+0x6548cbcf]
  422ebf:	mov    ebx,0x2820fa20
  422ec4:	sbb    al,0xc9
  422ec6:	(bad)  
  422ec7:	add    dl,bl
  422ec9:	(bad)  
  422eca:	sub    DWORD PTR [ebx],esp
  422ecc:	xchg   ecx,eax
  422ecd:	inc    ebx
  422ece:	shl    eax,0x22
  422ed1:	mov    edx,0x7005b284
  422ed6:	adc    BYTE PTR [esi],cl
  422ed8:	sub    dl,cl
  422eda:	mov    cl,0x32
  422edc:	int    0xaa
  422ede:	hlt    
  422edf:	adc    BYTE PTR [ebx+0x31],0x2f
  422ee3:	mov    esi,0x90dacc59
  422ee8:	pushf  
  422ee9:	popa   
  422eea:	(bad)  [eax-0x85b6e94]
  422ef0:	and    BYTE PTR [edi+0xc],cl
  422ef3:	mov    DWORD PTR ds:0xf65b8998,eax
  422ef9:	retf   0xbff7
  422efc:	(bad)  
  422efd:	fs and eax,0xe703ef53
  422f03:	scas   al,BYTE PTR es:[edi]
  422f04:	pop    eax
  422f05:	xchg   esp,eax
  422f06:	into   
  422f07:	int    0x52
  422f09:	dec    eax
  422f0a:	push   ebx
  422f0b:	xchg   ebp,eax
  422f0c:	xor    BYTE PTR [eax-0x40dd1376],ah
  422f12:	test   eax,0x2d497f60
  422f17:	push   eax
  422f18:	divps  xmm2,xmm5
  422f1b:	(bad)  
  422f1c:	in     al,0x88
  422f1e:	sbb    eax,ecx
  422f20:	gs stos DWORD PTR es:[edi],eax
  422f22:	ja     0x422f4f
  422f24:	lock jmp 0x9234c2a7
  422f2a:	mov    ds:0x465cd8ca,al
  422f2f:	xlat   BYTE PTR ds:[ebx]
  422f30:	xor    edx,DWORD PTR [edx+edi*2]
  422f33:	dec    esp
  422f34:	xor    eax,0xad6eed23
  422f39:	aam    0xd2
  422f3b:	cmp    al,0xb1
  422f3d:	ins    DWORD PTR es:[edi],dx
  422f3e:	bound  esi,QWORD PTR [eax]
  422f40:	push   ecx
  422f41:	pop    ebx
  422f42:	hlt    
  422f43:	out    0x16,eax
  422f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f46:	mov    ecx,0xb3e4fd6c
  422f4b:	mov    ebp,0xa9ea97c5
  422f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f51:	daa    
  422f52:	fadd   DWORD PTR [ecx-0x6df5ce2b]
  422f58:	mov    ebx,0xd91828f0
  422f5d:	mov    al,0xe
  422f5f:	sbb    al,0x32
  422f61:	popa   
  422f62:	or     DWORD PTR [esi-0x4ef64882],eax
  422f68:	repnz sub al,0xbd
  422f6b:	mov    dl,0x95
  422f6d:	pop    esp
  422f6e:	sbb    esi,ebp
  422f70:	mov    ah,0xe4
  422f72:	add    ebx,ebp
  422f74:	jecxz  0x422f08
  422f76:	dec    edi
  422f77:	or     DWORD PTR [edx+ebp*2+0x12c61516],esp
  422f7e:	cmp    DWORD PTR [ebp+eiz*1-0x36700fb],edx
  422f85:	arpl   WORD PTR [ecx+0x4066b32c],ax
  422f8b:	fs dec edi
  422f8d:	cmp    BYTE PTR [edi+0x61],dh
  422f90:	scas   eax,DWORD PTR es:[edi]
  422f91:	dec    ebx
  422f92:	mov    eax,ds:0x135afcc8
  422f97:	stos   BYTE PTR es:[edi],al
  422f98:	push   ecx
  422f99:	cs pop esp
  422f9b:	aas    
  422f9c:	jb     0x422fea
  422f9e:	cli    
  422f9f:	mov    ds:0x1f03b791,eax
  422fa4:	stos   DWORD PTR es:[edi],eax
  422fa5:	popf   
  422fa6:	aam    0xb3
  422fa8:	or     eax,0x9aa32e76
  422fad:	repnz arpl WORD PTR [eax],ax
  422fb0:	xor    BYTE PTR [eax+0x19241880],dl
  422fb6:	add    edx,0x85c76176
  422fbc:	into   
  422fbd:	xor    BYTE PTR ds:0x5f460a34,0xb8
  422fc4:	js     0x422f8c
  422fc6:	retf   
  422fc7:	sbb    BYTE PTR [esi+0x7367c4e4],ch
  422fcd:	rcr    DWORD PTR [ecx],0x82
  422fd0:	sub    eax,0x53e55c5b
  422fd5:	push   ebx
  422fd6:	hlt    
  422fd7:	lock xor cl,BYTE PTR [ebx]
  422fda:	inc    ebx
  422fdb:	aaa    
  422fdc:	aam    0xf8
  422fde:	and    DWORD PTR [ebx-0x62f5a1c5],ecx
  422fe4:	mov    eax,ds:0x7c638fd9
  422fe9:	sub    eax,0x37ab1b0b
  422fee:	and    ah,ch
  422ff0:	sbb    dl,0x82
  422ff3:	mov    bl,0x35
  422ff5:	push   eax
  422ff6:	jle    0x423061
  422ff8:	ret    
  422ff9:	jae    0x423011
  422ffb:	scas   al,BYTE PTR es:[edi]
  422ffc:	loop   0x422ff2
  422ffe:	ret    
  422fff:	sbb    al,BYTE PTR [esi]
  423001:	ror    ebp,0x34
  423004:	add    BYTE PTR [ecx],al
  423006:	cmp    esp,DWORD PTR [esi-0x3c]
  423009:	pop    esi
  42300a:	adc    al,0x32
  42300c:	aam    0xb5
  42300e:	addr16 pop ds
  423010:	sbb    cl,BYTE PTR [edx]
  423012:	les    esi,FWORD PTR [ebp+0x4c948567]
  423018:	lea    edx,[ebp-0x38]
  42301b:	sbb    DWORD PTR [eax+ebp*1+0x1],0x14826922
  423023:	xor    esi,DWORD PTR [ebp-0x7c]
  423026:	in     al,dx
  423027:	mov    edi,0x29a6b5dd
  42302c:	adc    edx,ebx
  42302e:	dec    esp
  42302f:	inc    al
  423031:	dec    eax
  423032:	jns    0x423039
  423034:	dec    esi
  423035:	divps  xmm6,XMMWORD PTR [eax+0x12]
  423039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42303a:	out    dx,eax
  42303b:	and    BYTE PTR [esi+ecx*8-0x76],0x7c
  423040:	sbb    al,0xc2
  423042:	clc    
  423043:	mov    DWORD PTR [edx-0xd8281f7],ecx
  423049:	(bad)
  42304c:	ins    BYTE PTR es:[edi],dx
  42304d:	xchg   DWORD PTR [ecx],esp
  42304f:	in     eax,dx
  423050:	mov    esp,0x7236ad6b
  423055:	adc    bl,BYTE PTR [ebx]
  423057:	adc    BYTE PTR [ecx-0x34],bl
  42305a:	fldcw  WORD PTR [ecx-0x39b168e8]
  423060:	lea    edx,[edx]
  423062:	mov    BYTE PTR [ecx],dl
  423064:	aas    
  423065:	jmp    0x42b3:0x324ca820
  42306c:	gs jb  0x423070
  42306f:	pusha  
  423070:	add    ebp,ecx
  423072:	push   ebx
  423073:	jne    0x42305f
  423075:	pop    ecx
  423076:	aam    0x4d
  423078:	cmp    ebx,0xf33ffe66
  42307e:	pop    ss
  42307f:	aas    
  423080:	jg     0x4230c4
  423082:	add    ch,ch
  423084:	push   cs
  423085:	in     al,0x71
  423087:	dec    eax
  423088:	push   ebx
  423089:	popa   
  42308a:	cdq    
  42308b:	cmp    al,BYTE PTR [edx-0x36]
  42308e:	mov    DWORD PTR [ecx+0x50d566d8],0x26f9b9d
  423098:	lds    ebx,FWORD PTR [edx+ebx*2]
  42309b:	neg    DWORD PTR [ecx]
  42309d:	popa   
  42309e:	and    eax,0xa07f7501
  4230a3:	jmp    0xb3f1e198
  4230a8:	fcmove st,st(7)
  4230aa:	sahf   
  4230ab:	sub    BYTE PTR [esi],ch
  4230ad:	push   eax
  4230ae:	sub    dh,0xba
  4230b1:	dec    edi
  4230b2:	sbb    DWORD PTR [ebp-0x7d],ecx
  4230b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230b6:	xchg   edi,eax
  4230b7:	inc    esp
  4230b8:	scas   al,BYTE PTR es:[edi]
  4230b9:	xchg   edx,eax
  4230ba:	sbb    ebx,ebp
  4230bc:	pop    ebp
  4230bd:	jne    0x4230e9
  4230bf:	imul   ebp,DWORD PTR [edi-0x7f0a53ad],0xffffffca
  4230c6:	mov    dh,0xea
  4230c8:	mov    BYTE PTR [ebx+0x5b],ah
  4230cb:	int    0x96
  4230cd:	push   0xffffffe7
  4230cf:	mov    eax,0x9ef9e191
  4230d4:	pop    ecx
  4230d5:	hlt    
  4230d6:	mov    ds:0x5d5f4927,eax
  4230db:	push   cs
  4230dc:	push   esi
  4230dd:	inc    edx
  4230de:	inc    edx
  4230df:	sub    eax,0xbdfd46f9
  4230e4:	mov    ecx,0xa8fb0bba
  4230e9:	push   0x32
  4230eb:	inc    ebx
  4230ec:	mov    ch,0x17
  4230ee:	fadd   DWORD PTR [edx]
  4230f0:	xchg   DWORD PTR [ebp-0x1da6d17f],ebx
  4230f6:	clc    
  4230f7:	leave  
  4230f8:	cli    
  4230f9:	test   eax,edx
  4230fb:	ror    BYTE PTR ds:0x202f94b7,0x5e
  423102:	sahf   
  423103:	arpl   WORD PTR [ecx-0x2f],bp
  423106:	adc    al,0xce
  423108:	pop    ds
  423109:	xchg   esi,eax
  42310a:	or     edx,DWORD PTR [esi-0x3aa98177]
  423110:	push   edi
  423111:	stos   BYTE PTR es:[edi],al
  423112:	(bad)  
  423113:	retf   0xc0c9
  423116:	mov    ds:0xbef0990d,al
  42311b:	retf   0xb864
  42311e:	js     0x4230d2
  423120:	aaa    
  423121:	rol    DWORD PTR [ebx-0x34],cl
  423124:	bound  edi,QWORD PTR [edx-0x649badda]
  42312a:	jno    0x42314b
  42312c:	add    bh,BYTE PTR [ebx+0x23ea233a]
  423132:	sbb    eax,esp
  423134:	daa    
  423135:	fist   WORD PTR [eax-0x3c81a2b7]
  42313b:	mov    DWORD PTR [ebx+0x73],eax
  42313e:	inc    ecx
  42313f:	sub    DWORD PTR [edi+0x2f],ebp
  423142:	mov    ebp,DWORD PTR [ecx+0x7]
  423145:	dec    edi
  423146:	aaa    
  423147:	mov    cl,0xb9
  423149:	addr16 mov ebx,0xc4853820
  42314f:	add    al,0x59
  423151:	ss loope 0x42311f
  423154:	out    0x53,al
  423156:	fs cmp edi,0x3626a6
  42315d:	mov    ebp,0xaab11e60
  423162:	push   edx
  423163:	mov    eax,0xe11d1eac
  423168:	lock mov edx,0x12206185
  42316e:	das    
  42316f:	out    dx,eax
  423170:	adc    al,0xe7
  423172:	retf   
  423173:	shl    BYTE PTR ds:0x9a764dc8,0x2f
  42317a:	push   0x8c86aada
  42317f:	out    0x8,al
  423181:	mov    dl,0x6b
  423183:	inc    edx
  423184:	push   edx
  423185:	xor    edi,DWORD PTR [esi]
  423187:	aas    
  423188:	ins    BYTE PTR es:[edi],dx
  423189:	push   ds
  42318a:	or     eax,DWORD PTR ds:[esi+0x4a]
  42318e:	loope  0x423116
  423190:	in     eax,dx
  423191:	test   BYTE PTR [edx-0x7da81319],0x66
  423198:	xor    eax,0x7e0ee824
  42319d:	mov    ds,WORD PTR [eax+eax*1-0x49c58dc]
  4231a4:	push   ss
  4231a5:	sub    BYTE PTR [edi+eiz*2+0x1c9ac202],cl
  4231ac:	test   BYTE PTR [ebp-0x68],cl
  4231af:	cli    
  4231b0:	jnp    0x42319e
  4231b2:	test   eax,0x87093ccf
  4231b7:	ins    BYTE PTR es:[edi],dx
  4231b8:	push   esp
  4231b9:	pop    ss
  4231ba:	std    
  4231bb:	pop    ss
  4231bc:	cli    
  4231bd:	inc    esp
  4231be:	cmp    esp,DWORD PTR [esi+0x12da0928]
  4231c4:	pop    esp
  4231c5:	sbb    ah,BYTE PTR [edx-0x41b92fe0]
  4231cb:	cmc    
  4231cc:	retf   
  4231cd:	ds sahf 
  4231cf:	push   ecx
  4231d0:	out    0x39,al
  4231d2:	push   esp
  4231d3:	jnp    0x4231bd
  4231d5:	mov    ?,WORD PTR [ebx]
  4231d7:	scas   eax,DWORD PTR es:[edi]
  4231d8:	dec    ebp
  4231d9:	popw   ss
  4231db:	jnp    0x42320b
  4231dd:	imul   edx,esp,0xadd592ee
  4231e3:	es add esp,edx
  4231e6:	xor    ebp,eax
  4231e8:	jg     0x423252
  4231ea:	les    edi,FWORD PTR [ecx-0x73fb54a3]
  4231f0:	xlat   BYTE PTR ds:[ebx]
  4231f1:	push   ebx
  4231f2:	adc    bh,BYTE PTR [eax-0x33060663]
  4231f8:	pop    edi
  4231f9:	xchg   ebx,eax
  4231fa:	adc    DWORD PTR [esi],esp
  4231fc:	out    dx,al
  4231fd:	inc    ebx
  4231fe:	outs   dx,DWORD PTR ds:[esi]
  4231ff:	pusha  
  423200:	cli    
  423201:	div    ah
  423203:	int3   
  423204:	sbb    ecx,esp
  423206:	les    ecx,FWORD PTR [eax+0x2d]
  423209:	int3   
  42320a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42320b:	adc    eax,0xd8aac18d
  423210:	push   ss
  423211:	cmp    BYTE PTR ds:0x70a5c464,bh
  423217:	or     DWORD PTR [ebp-0x5a016dde],ebx
  42321d:	mov    edx,0x51d35bb0
  423222:	pop    ecx
  423223:	inc    ebp
  423224:	jmp    0x9514:0xc7ff288d
  42322b:	cmp    eax,0x72cd585f
  423230:	ror    BYTE PTR [ebx],0x80
  423233:	js     0x4231e5
  423235:	dec    edi
  423236:	ds adc cl,cl
  423239:	add    eax,0xec8cf834
  42323e:	mov    edi,0xfca116ff
  423243:	addr16 int 0xe
  423246:	call   0xbfce:0x67f9e77e
  42324d:	test   eax,0x8f6a53cd
  423252:	mov    edx,esi
  423254:	or     al,0x11
  423256:	loop   0x42328c
  423258:	jns    0x4231e6
  42325a:	adc    ebx,DWORD PTR [ecx]
  42325c:	retf   
  42325d:	popa   
  42325e:	mov    cl,0xaa
  423260:	clc    
  423261:	fsubrp st(2),st
  423263:	lods   eax,DWORD PTR ds:[esi]
  423264:	out    dx,al
  423265:	and    DWORD PTR [ebx+edi*1],edi
  423268:	out    dx,eax
  423269:	fwait
  42326a:	mov    eax,ds:0xbae1f8fd
  42326f:	enter  0x84cd,0xb1
  423273:	rol    DWORD PTR [bx+di],0x15
  423277:	aaa    
  423278:	hlt    
  423279:	movq   QWORD PTR [esi],mm7
  42327c:	xor    DWORD PTR [ebp+0x2fad3f2a],edi
  423282:	push   ds
  423283:	sub    al,0x54
  423285:	jp     0x423292
  423287:	sub    ebx,DWORD PTR [esi-0x72e2f4f4]
  42328d:	pop    ecx
  42328e:	in     eax,dx
  42328f:	mov    ebx,0x72dd47e1
  423294:	push   0x5575337b
  423299:	pop    ecx
  42329a:	pop    es
  42329b:	or     bl,cl
  42329d:	and    BYTE PTR [esi],dh
  42329f:	adc    eax,0xbf2ce023
  4232a4:	xor    eax,0x1f7bd8e8
  4232a9:	loop   0x423253
  4232ab:	add    ch,BYTE PTR [ebx+0x646d77c8]
  4232b1:	ja     0x42330d
  4232b3:	mov    edi,0xf1e88c73
  4232b8:	dec    ebp
  4232b9:	mov    DWORD PTR [eax-0x6841cb4c],esp
  4232bf:	es hlt 
  4232c1:	push   ebp
  4232c2:	js     0x42333c
  4232c4:	and    ebp,eax
  4232c6:	jbe    0x423319
  4232c8:	data16 (bad) 
  4232ca:	pop    esi
  4232cb:	test   eax,0x7452a273
  4232d0:	and    ah,BYTE PTR [ebx-0x2e]
  4232d3:	mov    ds:0x368b71d3,al
  4232d8:	xchg   esi,eax
  4232d9:	jnp    0x423272
  4232db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232dd:	and    DWORD PTR [esi],eax
  4232df:	call   0xd2d21edc
  4232e4:	jle    0x42328b
  4232e6:	stos   BYTE PTR es:[edi],al
  4232e7:	sub    BYTE PTR [edx+edi*4-0x3a],bh
  4232eb:	addr16 gs mov al,0x5
  4232ef:	sbb    BYTE PTR [esp+edx*4-0x352280f6],al
  4232f6:	ret    0xc1be
  4232f9:	pop    edx
  4232fa:	and    DWORD PTR [eax+0x44cf03c4],ebp
  423300:	sti    
  423301:	in     eax,0x8a
  423303:	adc    edi,DWORD PTR ds:0x67a43b0a
  423309:	xchg   dx,ax
  42330b:	lock cmp esp,ebx
  42330e:	mov    ah,0xed
  423310:	jmp    0x48c:0xb40e3fd9
  423317:	das    
  423318:	cmp    esp,DWORD PTR [ebp-0x2569c510]
  42331e:	mov    WORD PTR ds:0x648bac6,fs
  423324:	ins    BYTE PTR es:[edi],dx
  423325:	and    DWORD PTR ds:0x345e2bd0,ecx
  42332b:	outs   dx,BYTE PTR ds:[esi]
  42332c:	mov    DWORD PTR [ecx+0x3a],ebp
  42332f:	jbe    0x4233a4
  423331:	jle    0x42339e
  423333:	rol    BYTE PTR [eax+0x62],1
  423336:	cwde   
  423337:	lock pusha 
  423339:	jb     0x42334c
  42333b:	xor    esp,DWORD PTR [edi+0x4030a13d]
  423341:	jl     0x4232cd
  423343:	mov    ebp,eax
  423345:	or     eax,0xc56869d2
  42334a:	mov    ecx,0x64c12e95
  42334f:	sub    DWORD PTR [edi-0x78434586],ebp
  423355:	stos   BYTE PTR es:[edi],al
  423356:	push   ss
  423357:	adc    DWORD PTR [edi+0x16397833],ebx
  42335d:	xchg   ecx,eax
  42335e:	leave  
  42335f:	jbe    0x42336e
  423361:	adc    ch,bl
  423363:	cmc    
  423364:	hlt    
  423365:	cs jge 0x423317
  423368:	loope  0x4233a3
  42336a:	cmp    BYTE PTR [ebp+0x21bf74f0],cl
  423370:	xchg   ebx,eax
  423371:	cmp    eax,0x748fa305
  423376:	and    al,BYTE PTR [ebx+esi*4-0x57]
  42337a:	jb     0x423399
  42337c:	rol    BYTE PTR [eax+0x5fddcdea],cl
  423382:	icebp  
  423383:	sbb    dl,BYTE PTR [edi+esi*8+0x3f70ffe6]
  42338a:	je     0x4233ac
  42338c:	xor    cl,0x98
  42338f:	outs   dx,DWORD PTR ds:[esi]
  423390:	mov    BYTE PTR [eax+eiz*2+0x7e7ad927],bh
  423397:	(bad)  
  423398:	xchg   edx,eax
  423399:	sbb    ah,0x6c
  42339c:	outs   dx,BYTE PTR ds:[esi]
  42339d:	mov    al,ds:0xe676ba83
  4233a2:	rcl    DWORD PTR [eax+0x46],cl
  4233a5:	scas   eax,DWORD PTR es:[edi]
  4233a6:	pop    ss
  4233a7:	imul   esp,edx,0xb1579b47
  4233ad:	mov    dl,0xdc
  4233af:	aas    
  4233b0:	lods   al,BYTE PTR ds:[esi]
  4233b1:	and    dl,ah
  4233b3:	je     0x423383
  4233b5:	aad    0xb8
  4233b7:	(bad)  
  4233b8:	push   ebp
  4233b9:	xor    dh,BYTE PTR [ebx-0xf]
  4233bc:	xlat   BYTE PTR ds:[ebx]
  4233bd:	pop    ecx
  4233be:	leave  
  4233bf:	test   al,0x2c
  4233c1:	jl     0x423370
  4233c3:	es and al,0x77
  4233c6:	inc    edi
  4233c7:	pop    edi
  4233c8:	aas    
  4233c9:	sahf   
  4233ca:	and    esp,edx
  4233cc:	inc    ebp
  4233cd:	push   ecx
  4233ce:	sub    eax,0x1d944c3b
  4233d3:	mov    eax,0x59bf34e
  4233d8:	adc    BYTE PTR [edx-0x80],dl
  4233db:	sbb    dl,BYTE PTR [esi+ecx*2+0x66]
  4233df:	mov    WORD PTR [ebx+0x54],sp
  4233e3:	xor    BYTE PTR [edx-0x414af62e],ch
  4233e9:	pop    edi
  4233ea:	mov    dl,0x26
  4233ec:	ficom  DWORD PTR [edx+0x31]
  4233ef:	push   0xe166bf0
  4233f4:	neg    DWORD PTR [edx-0x13]
  4233f7:	dec    esp
  4233f8:	and    dl,BYTE PTR [edi]
  4233fa:	sbb    BYTE PTR [ecx+edx*1-0x5f],ch
  4233fe:	aas    
  4233ff:	and    ebx,DWORD PTR [edx-0x265455d2]
  423405:	rol    BYTE PTR [ecx],0xba
  423408:	dec    esp
  423409:	lock mov ah,ch
  42340c:	icebp  
  42340d:	pop    edi
  42340e:	adc    ch,BYTE PTR [ecx]
  423410:	sbb    BYTE PTR [ecx+0x146e6c56],cl
  423416:	push   ds
  423417:	cdq    
  423418:	inc    ebp
  423419:	das    
  42341a:	mov    BYTE PTR fs:[eax+0x45],dh
  42341e:	jg     0x4233d7
  423420:	imul   edi,eax,0xfffffffe
  423423:	jo     0x42349d
  423425:	das    
  423426:	adc    DWORD PTR [esi],edx
  423428:	pop    esi
  423429:	data16 jge 0x4233f3
  42342c:	bound  esp,QWORD PTR [ecx]
  42342e:	retf   
  42342f:	stos   BYTE PTR es:[edi],al
  423430:	pop    edi
  423431:	(bad)  
  423432:	sbb    DWORD PTR [esi],ebp
  423434:	imul   edx,DWORD PTR [ebx+0x49],0xb5fc7e4b
  42343b:	jg     0x423477
  42343d:	push   edx
  42343e:	ins    DWORD PTR es:[edi],dx
  42343f:	or     eax,0x8c4eeb96
  423444:	mov    edi,0xab36cda6
  423449:	push   edi
  42344a:	mov    edx,0xe03a53d3
  42344f:	mov    DWORD PTR [edi-0x547ee02e],ebx
  423455:	fst    DWORD PTR [ebx]
  423457:	push   es
  423458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423459:	and    bl,BYTE PTR [ebp-0x4e]
  42345c:	aad    0xc1
  42345e:	fwait
  42345f:	jp     0x4234ae
  423461:	mov    dh,0x93
  423463:	cmp    al,0x31
  423465:	jns    0x423411
  423467:	jecxz  0x423488
  423469:	jl     0x4234da
  42346b:	lea    ebx,[esi]
  42346d:	xor    BYTE PTR ds:0xea79bb61,ch
  423473:	inc    esi
  423474:	sbb    eax,0xaec954cd
  423479:	push   esi
  42347a:	pop    edi
  42347b:	iret   
  42347c:	mov    ebp,0xe2397b2b
  423482:	ss push edi
  423484:	mov    WORD PTR ds:0x546a45e,ds
  42348a:	mov    ch,0xe7
  42348c:	out    dx,eax
  42348d:	pop    edi
  42348e:	rcr    edi,1
  423490:	inc    eax
  423491:	xor    esi,edi
  423493:	dec    ecx
  423494:	push   edi
  423495:	ss popa 
  423497:	add    esp,DWORD PTR [ebp-0x4aa69dc]
  42349d:	lods   al,BYTE PTR ds:[esi]
  42349e:	popa   
  42349f:	dec    ecx
  4234a0:	inc    edx
  4234a1:	and    eax,0x61b63100
  4234a6:	scas   eax,DWORD PTR es:[edi]
  4234a7:	add    BYTE PTR [eax+0xe1f7217],al
  4234ad:	scas   al,BYTE PTR es:[edi]
  4234ae:	adc    eax,0x87c5ab11
  4234b3:	add    eax,0x6073db07
  4234b8:	ret    0xe2af
  4234bb:	pop    ecx
  4234bc:	mov    dh,0x9b
  4234be:	(bad)  
  4234bf:	or     eax,DWORD PTR [edx+0x482b6497]
  4234c5:	pushf  
  4234c6:	add    cl,0x5e
  4234c9:	lahf   
  4234ca:	xor    al,0xc0
  4234cc:	hlt    
  4234cd:	sub    BYTE PTR [esi+0x2b],dh
  4234d0:	scas   al,BYTE PTR es:[edi]
  4234d1:	sar    DWORD PTR [ecx],0x4e
  4234d4:	fstp   DWORD PTR [ecx-0x59]
  4234d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234d8:	and    BYTE PTR [edi+0x3ae4c2bf],cl
  4234de:	dec    edi
  4234df:	and    ax,0x20a4
  4234e3:	mov    ebp,0xbd05b6aa
  4234e8:	aad    0xab
  4234ea:	add    al,0x9d
  4234ec:	xor    BYTE PTR [esi+0x3a13bbf1],al
  4234f2:	add    eax,0x2d58009d
  4234f7:	sub    eax,0xfda2ede8
  4234fc:	lods   eax,DWORD PTR ds:[esi]
  4234fd:	es jmp 0x1749b17e
  423503:	push   ebx
  423504:	and    ch,BYTE PTR [ebp+0x75]
  423507:	pusha  
  423508:	inc    esi
  423509:	inc    eax
  42350a:	inc    edi
  42350b:	xchg   ebp,eax
  42350c:	je     0x423500
  42350e:	and    dl,BYTE PTR [ecx-0x6aabc511]
  423514:	mov    bl,0x40
  423516:	cmp    BYTE PTR [edx+0x46fe669e],ch
  42351c:	nop
  42351d:	push   ss
  42351e:	push   ecx
  42351f:	push   ebp
  423520:	imul   eax,DWORD PTR [eax-0x1d],0xffffffe4
  423524:	jmp    0x2a3ae0b1
  423529:	pop    ds
  42352a:	inc    esp
  42352b:	sbb    al,0x2c
  42352d:	push   ecx
  42352e:	add    bl,bl
  423530:	cmp    BYTE PTR [ebx-0x5fbd8518],al
  423536:	pop    ebx
  423537:	in     eax,dx
  423538:	outs   dx,DWORD PTR ds:[esi]
  423539:	(bad)  
  42353a:	scas   eax,DWORD PTR es:[edi]
  42353b:	(bad)  
  42353c:	fsubp  st(1),st
  42353e:	or     bh,BYTE PTR [esi+0x64576d2d]
  423544:	cmc    
  423545:	cli    
  423546:	fisub  DWORD PTR [ebp-0x67]
  423549:	mov    ecx,0xdefa5751
  42354e:	xor    al,0x80
  423550:	pop    es
  423551:	hlt    
  423552:	cdq    
  423553:	cli    
  423554:	cld    
  423555:	pop    ecx
  423557:	fimul  WORD PTR [esi+0x7e]
  42355a:	addr16 call 0x88c7d3be
  423560:	imul   esp,ebp,0xa432bca5
  423566:	into   
  423567:	push   esp
  423568:	add    cl,bl
  42356a:	std    
  42356b:	aaa    
  42356c:	jl     0x4235bb
  42356e:	or     esi,edx
  423570:	mov    al,0x8b
  423572:	out    0xd0,al
  423574:	mov    edx,0x30c020de
  423579:	loop   0x4235bd
  42357b:	and    al,0xf9
  42357d:	or     eax,0x99123598
  423582:	mov    DWORD PTR [ecx+0x472a52f7],ebx
  423588:	jo     0x42352f
  42358a:	mov    dh,0x43
  42358c:	enter  0x3cf6,0x1f
  423590:	fadd   DWORD PTR [edi-0x4683222b]
  423596:	mov    al,ds:0xc388e93e
  42359b:	mov    BYTE PTR [eax],dl
  42359d:	sbb    al,0xe3
  42359f:	(bad)  
  4235a1:	inc    eax
  4235a2:	xchg   esi,eax
  4235a3:	push   ebx
  4235a4:	loop   0x42353a
  4235a6:	shl    BYTE PTR [edx-0x54],cl
  4235a9:	test   al,ah
  4235ab:	(bad)  
  4235ac:	jl     0x42359a
  4235ae:	cmc    
  4235af:	adc    esi,edi
  4235b1:	loope  0x423607
  4235b3:	cld    
  4235b4:	btr    DWORD PTR [ebp-0x4f94c996],eax
  4235bb:	fmul   QWORD PTR [edi+0x5ef5ca4b]
  4235c1:	jl     0x42363b
  4235c3:	stos   DWORD PTR es:[edi],eax
  4235c4:	pop    eax
  4235c5:	(bad)  
  4235c6:	(bad)  
  4235c7:	mov    ecx,0xa3bf6404
  4235cc:	cmp    esi,DWORD PTR [edx+0x13250f6d]
  4235d2:	pusha  
  4235d3:	xchg   esi,eax
  4235d4:	add    edi,edx
  4235d6:	adc    esi,ebx
  4235d8:	add    eax,DWORD PTR [ebx-0x5897f7ff]
  4235de:	pop    ebp
  4235df:	fs xchg dl,bh
  4235e2:	(bad)  
  4235e3:	int3   
  4235e4:	inc    ecx
  4235e5:	loop   0x4235ee
  4235e7:	dec    esi
  4235e8:	scas   eax,DWORD PTR es:[edi]
  4235e9:	pop    ecx
  4235ea:	add    DWORD PTR [ebx-0xadefac8],0x24
  4235f1:	ffreep st(7)
  4235f3:	cwde   
  4235f4:	mov    dh,0x16
  4235f6:	fldenv [eax+edi*1+0x178a0b92]
  4235fd:	jne    0x4235be
  4235ff:	push   ss
  423600:	popf   
  423601:	leave  
  423602:	and    esi,edi
  423604:	or     eax,0x9e820d2c
  423609:	into   
  42360a:	mov    edx,0x9ba89c9c
  42360f:	dec    esi
  423610:	sub    ebp,eax
  423612:	stos   BYTE PTR es:[edi],al
  423613:	push   0xaef2f6b4
  423618:	dec    ecx
  423619:	shl    DWORD PTR [ecx+0x2a],0x51
  42361d:	sbb    BYTE PTR [esi+0x28],ah
  423620:	fisttp DWORD PTR [ebx]
  423622:	jmp    0x7c8f423
  423627:	push   edx
  423628:	scas   al,BYTE PTR es:[edi]
  423629:	push   ebx
  42362a:	pop    ebx
  42362b:	es push ecx
  42362d:	fist   DWORD PTR [ebx+ecx*2+0x462f9df3]
  423634:	outs   dx,BYTE PTR ds:[esi]
  423635:	push   edx
  423636:	push   0xfffffff9
  423638:	xchg   edx,eax
  423639:	sbb    eax,DWORD PTR [ebx+0x50]
  42363c:	sahf   
  42363d:	fcmovu st,st(2)
  42363f:	pop    esi
  423640:	dec    edi
  423641:	mov    ah,0x43
  423643:	lahf   
  423644:	mov    es,WORD PTR [ecx-0x31d9e2e1]
  42364a:	pop    es
  42364b:	inc    eax
  42364c:	loop   0x423652
  42364e:	nop
  42364f:	(bad)  
  423650:	jl     0x423688
  423652:	sub    al,0xe6
  423654:	(bad)  
  423655:	mov    ds:0x2982bae8,eax
  42365a:	mov    cl,0x2f
  42365c:	test   cl,bh
  42365e:	or     al,0xd0
  423660:	popa   
  423661:	mov    edi,0xdb93e0d
  423666:	jmp    0x42369d
  423668:	in     eax,0xfe
  42366a:	adc    esi,DWORD PTR [edx+0x2d581687]
  423670:	mov    DWORD PTR [edi-0x64ce4351],eax
  423676:	int3   
  423677:	mov    bl,0x1c
  423679:	add    eax,0xbb8aa45
  42367e:	fnstcw WORD PTR [edi-0x3cdb3d71]
  423684:	(bad)  
  423685:	lock cs or al,0xd7
  423689:	clc    
  42368a:	and    BYTE PTR [ebx],0x60
  42368d:	out    0xbf,al
  42368f:	mov    ecx,0xfd40fc46
  423694:	pop    ebx
  423695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423696:	stos   DWORD PTR es:[edi],eax
  423697:	add    ebx,DWORD PTR [edi]
  423699:	in     al,dx
  42369a:	aam    0x14
  42369c:	jl     0x4236cd
  42369e:	mov    eax,ds:0x86029c30
  4236a3:	call   0xe648:0x592978c
  4236aa:	test   bl,dh
  4236ac:	daa    
  4236ad:	push   esi
  4236ae:	or     BYTE PTR [eax+0x33],al
  4236b1:	scas   al,BYTE PTR es:[edi]
  4236b2:	or     eax,0xe9ac51dd
  4236b7:	(bad)  
  4236b8:	retf   0x36c5
  4236bb:	popw   ds
  4236bd:	xchg   esp,eax
  4236be:	adc    bl,BYTE PTR [ebx+0x49e8d75f]
  4236c4:	sbb    ecx,DWORD PTR [edi]
  4236c6:	push   edi
  4236c7:	add    BYTE PTR [eax+edi*4],cl
  4236ca:	dec    edx
  4236cb:	add    ebx,DWORD PTR [ebx-0x339c8ce5]
  4236d1:	sbb    al,0x23
  4236d3:	xchg   ebx,eax
  4236d4:	int    0xfd
  4236d6:	dec    ebp
  4236d7:	dec    edx
  4236d8:	xchg   ebp,eax
  4236d9:	repz cwde 
  4236db:	mov    bh,0xf4
  4236dd:	or     esp,0x25878477
  4236e3:	iret   
  4236e4:	xchg   eax,edi
  4236e6:	iret   
  4236e7:	ret    
  4236e8:	lods   al,BYTE PTR ds:[esi]
  4236e9:	jmp    0xcfed3f4d
  4236ee:	xchg   esp,eax
  4236ef:	jecxz  0x42376f
  4236f1:	push   ecx
  4236f2:	mov    ds:0x1f6477d3,eax
  4236f7:	shl    DWORD PTR [ecx],1
  4236f9:	div    BYTE PTR [esi]
  4236fb:	hlt    
  4236fc:	cdq    
  4236fd:	pop    ecx
  4236fe:	shl    DWORD PTR [edx+0x24],cl
  423701:	inc    esi
  423702:	push   esp
  423703:	xchg   edi,eax
  423704:	mov    al,ds:0xc983abf9
  423709:	dec    esp
  42370a:	mov    bl,0x13
  42370c:	mov    bh,0xf8
  42370e:	xchg   ebp,eax
  42370f:	shl    DWORD PTR [esi],cl
  423711:	dec    esp
  423712:	pop    ebp
  423713:	xchg   edi,eax
  423714:	popa   
  423715:	xchg   edx,eax
  423716:	add    dh,BYTE PTR ds:0x66172986
  42371c:	and    esp,DWORD PTR ds:0xf7a4401a
  423722:	std    
  423723:	loope  0x423763
  423725:	pop    ss
  423726:	lahf   
  423727:	pop    esi
  423728:	(bad)  
  423729:	popf   
  42372a:	mov    al,0x39
  42372c:	rol    BYTE PTR [ecx-0x3dab5512],1
  423732:	dec    edi
  423733:	test   eax,0xa327f913
  423738:	shl    DWORD PTR [edx+ebp*2-0x5b5e2a43],cl
  42373f:	fucom  st(2)
  423741:	loope  0x4236ee
  423743:	adc    eax,0x30d19da4
  423748:	retf   0x4c5a
  42374b:	js     0x42371a
  42374d:	dec    esp
  42374e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42374f:	iret   
  423750:	mov    dl,0x8d
  423752:	imul   BYTE PTR [esi+eiz*8+0x7d2d9cbe]
  423759:	jne    0x4237bf
  42375b:	pop    esi
  42375c:	popa   
  42375d:	pop    ds
  42375e:	sbb    al,0x24
  423760:	call   0xba4d35b5
  423765:	call   0x6dd36883
  42376a:	popf   
  42376b:	leave  
  42376c:	push   ebx
  42376d:	sbb    dh,cl
  42376f:	dec    ebp
  423770:	mov    ch,0xb4
  423772:	sub    BYTE PTR [edx+ebp*8],bh
  423775:	fs pusha 
  423777:	fs push edi
  423779:	inc    edx
  42377a:	sub    al,0xc4
  42377c:	mov    dh,ah
  42377e:	mov    al,ds:0xb3a42c9a
  423783:	pop    ss
  423784:	mov    ch,0xf5
  423786:	out    dx,eax
  423787:	(bad)  
  423788:	shl    ch,0x45
  42378b:	push   ecx
  42378c:	adc    ch,bh
  42378e:	(bad)  
  42378f:	(bad)  
  423790:	and    al,0x36
  423792:	add    edx,DWORD PTR [esi+0x143c242c]
  423798:	or     BYTE PTR [edi-0x7a887311],0x1e
  42379f:	mov    ecx,0x9504d887
  4237a4:	out    dx,eax
  4237a5:	out    0xb0,eax
  4237a7:	into   
  4237a8:	inc    edi
  4237a9:	xor    BYTE PTR [eax-0x80],bl
  4237ac:	push   ebx
  4237ad:	aaa    
  4237ae:	pop    edi
  4237af:	jno    0x4237a0
  4237b1:	in     eax,0x7c
  4237b3:	or     al,0x54
  4237b5:	pop    es
  4237b6:	hlt    
  4237b7:	hlt    
  4237b8:	lods   al,BYTE PTR ds:[esi]
  4237b9:	push   ss
  4237ba:	(bad)  
  4237bc:	int    0x8a
  4237be:	mov    al,0x33
  4237c0:	dec    esp
  4237c1:	push   ebp
  4237c2:	mov    DWORD PTR [ebx-0x618c93ce],eax
  4237c8:	pop    ds
  4237c9:	sbb    cl,BYTE PTR [ebp-0x67ebdb5c]
  4237cf:	sbb    edi,DWORD PTR [esi]
  4237d1:	in     al,dx
  4237d2:	test   cl,cl
  4237d4:	xor    ebx,DWORD PTR [ebx-0x797c7e2b]
  4237da:	xchg   BYTE PTR [ebx],bl
  4237dc:	push   esi
  4237dd:	out    dx,eax
  4237de:	jl     0x423811
  4237e0:	xchg   esp,eax
  4237e1:	out    0x40,eax
  4237e3:	mov    ecx,0xcae44f
  4237e8:	icebp  
  4237e9:	test   bl,ch
  4237eb:	sbb    dh,bl
  4237ed:	add    al,BYTE PTR [esi+0x14]
  4237f0:	out    dx,eax
  4237f1:	or     DWORD PTR [ecx],0x40
  4237f4:	or     ebx,esi
  4237f6:	pop    edx
  4237f7:	test   DWORD PTR [ebx],ecx
  4237f9:	and    edx,DWORD PTR [eax]
  4237fb:	rol    al,0xa0
  4237fe:	in     al,dx
  4237ff:	repz scas eax,DWORD PTR es:[edi]
  423801:	into   
  423802:	into   
  423803:	or     DWORD PTR [esi],ebp
  423805:	retf   
  423806:	mov    eax,0x4b6997a7
  42380b:	pop    ecx
  42380c:	test   ah,0x6a
  42380f:	jg     0x42387b
  423811:	dec    ebx
  423812:	xor    DWORD PTR [ecx-0x7e75bd9b],ebp
  423818:	push   ecx
  423819:	xor    eax,0x9c338a07
  42381e:	sub    edi,ebx
  423820:	inc    ebx
  423821:	mov    al,0xf5
  423823:	shl    ebp,1
  423825:	and    eax,DWORD PTR fs:[esi+esi*2-0x2a124236]
  42382d:	sbb    ecx,esp
  42382f:	mul    BYTE PTR [edx]
  423831:	nop
  423832:	mov    ecx,0xd338cf4c
  423837:	inc    esp
  423838:	jg     0x42380c
  42383a:	xor    edx,DWORD PTR [ebx+0x9]
  42383d:	rol    DWORD PTR [esi+0x3524cd11],cl
  423843:	test   BYTE PTR [edx+0xc65fb76],ah
  423849:	mov    al,ds:0xd22ecaba
  42384e:	jae    0x423804
  423850:	sbb    eax,0xc6d346c7
  423855:	inc    edx
  423856:	int3   
  423857:	adc    eax,0xb34a35de
  42385c:	scas   al,BYTE PTR es:[edi]
  42385d:	aas    
  42385e:	pushf  
  42385f:	cmp    bl,BYTE PTR [edi]
  423861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423863:	rcr    DWORD PTR [ecx],0xa9
  423866:	mov    eax,0x8642789
  42386b:	(bad)  
  42386d:	mov    ebx,0x63aef58
  423872:	hlt    
  423873:	mov    ecx,0x20c07bac
  423878:	lahf   
  423879:	inc    ecx
  42387a:	ins    BYTE PTR es:[edi],dx
  42387b:	mov    esp,0x34323dcf
  423880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423881:	xor    eax,0x186560e
  423886:	es out 0x26,al
  423889:	adc    edi,DWORD PTR [edx+0x6c672aad]
  42388f:	pop    es
  423890:	ror    DWORD PTR [ebp+0x749e1cc5],0x2f
  423897:	ret    0x616d
  42389a:	mov    DWORD PTR [eax],esi
  42389c:	cwde   
  42389d:	lahf   
  42389e:	dec    ax
  4238a0:	les    edi,FWORD PTR [edi+0x2c]
  4238a3:	xor    al,0x95
  4238a5:	pop    esp
  4238a6:	adc    eax,0x7d04c01c
  4238ab:	push   esp
  4238ac:	xor    DWORD PTR [edx-0x17282194],ebx
  4238b2:	or     bh,BYTE PTR [edx]
  4238b4:	dec    eax
  4238b5:	push   es
  4238b6:	dec    edi
  4238b7:	push   0xdad5c6b6
  4238bc:	cmp    ecx,eax
  4238be:	sbb    DWORD PTR [ecx+0x1fb6aafd],eax
  4238c4:	pop    es
  4238c5:	push   0xc02d13b1
  4238ca:	ja     0x4238b7
  4238cc:	mov    ah,0x66
  4238ce:	shl    BYTE PTR [ebx+ebx*8],cl
  4238d1:	push   edx
  4238d2:	jne    0x4238a4
  4238d4:	mov    edx,DWORD PTR [ebx+0x1409dd5f]
  4238da:	jno    0x4238b7
  4238dc:	adc    DWORD PTR [edx],ebp
  4238de:	(bad)  
  4238df:	vpackuswb ymm7,ymm7,YMMWORD PTR [ebp-0x455af07b]
  4238e7:	pop    ebx
  4238e8:	push   ebx
  4238e9:	mov    eax,ds:0xa86a277
  4238ee:	jl     0x4238b2
  4238f0:	mov    ah,0x30
  4238f2:	bound  edx,QWORD PTR [edi+ebx*4-0xb]
  4238f6:	inc    eax
  4238f7:	adc    al,0x8
  4238f9:	push   edx
  4238fa:	popf   
  4238fb:	push   ecx
  4238fc:	mov    DWORD PTR [edi-0x49],eax
  4238ff:	test   eax,0xd0a0e82f
  423904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423905:	adc    eax,0x7348d624
  42390a:	mov    ah,0x9e
  42390c:	inc    ecx
  42390d:	ret    0xfaba
  423910:	add    BYTE PTR [ebx+0x39],dh
  423913:	cmp    ch,BYTE PTR [edx-0x41]
  423916:	gs jecxz 0x423985
  423919:	mov    esp,0x58742402
  42391e:	mov    cl,0x7d
  423920:	and    BYTE PTR [ebx],0x62
  423923:	and    al,0x3b
  423925:	dec    eax
  423926:	mov    WORD PTR [eax+0x3bdd828f],cs
  42392c:	sbb    eax,0x552bdbfa
  423931:	dec    ecx
  423932:	inc    edx
  423933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423934:	mov    ecx,0x9955b505
  423939:	xor    eax,0x4fe629ff
  42393e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42393f:	imul   edi,DWORD PTR [ecx-0x49],0xa2541e2e
  423946:	fdivr  QWORD PTR [ebp-0x55]
  423949:	aam    0xb8
  42394b:	push   esp
  42394c:	fiadd  DWORD PTR ds:0xef0d49ad
  423952:	push   edx
  423953:	cmp    DWORD PTR [ecx+eiz*4-0x696d0434],0x4e
  42395b:	shl    DWORD PTR [ebp-0x6f0a26bd],1
  423961:	cmp    eax,esp
  423963:	les    ebx,FWORD PTR [esi+0x2a]
  423966:	in     ax,dx
  423968:	repnz nop
  42396a:	push   edx
  42396b:	mov    BYTE PTR [ecx],dh
  42396d:	lock outs dx,DWORD PTR ds:[esi]
  42396f:	std    
  423970:	xor    DWORD PTR [eax+0x4afe82ca],esi
  423976:	popf   
  423977:	dec    esp
  423978:	lods   al,BYTE PTR ds:[esi]
  423979:	imul   edi,ebp,0x6c2134f
  42397f:	dec    ecx
  423980:	in     eax,dx
  423981:	inc    ebp
  423982:	addr16 ja 0x4239d0
  423985:	mul    BYTE PTR ds:0x62d6c0fb
  42398b:	sbb    DWORD PTR [ecx],ecx
  42398d:	jb     0x4239e5
  42398f:	mov    WORD PTR [esi-0x47],?
  423992:	and    ebx,DWORD PTR [edx+edi*8]
  423995:	and    eax,0xc7404c24
  42399a:	adc    eax,0xb78f8a2f
  42399f:	xlat   BYTE PTR es:[ebx]
  4239a1:	jns    0x423a1d
  4239a3:	sbb    edi,esi
  4239a5:	js     0x4239fe
  4239a7:	idiv   DWORD PTR [eax]
  4239a9:	test   BYTE PTR [ebx],dh
  4239ab:	lea    esp,[eax]
  4239ad:	call   0x7a53fa4b
  4239b2:	popa   
  4239b3:	ja     0x42396a
  4239b5:	leave  
  4239b6:	push   cs
  4239b7:	ds jge 0x42399c
  4239ba:	mov    ebp,0xf3986ff3
  4239bf:	mov    esi,0x78e9c68d
  4239c4:	ret    
  4239c5:	and    BYTE PTR ds:0x1477f627,al
  4239cb:	sub    dl,BYTE PTR [ecx+0x38]
  4239ce:	call   0x1cea:0x157317aa
  4239d5:	call   0xd28a:0xfd5e5d5f
  4239dc:	inc    esp
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	retf   
  4239df:	ins    BYTE PTR es:[edi],dx
  4239e0:	or     dl,bl
  4239e2:	fs cdq 
  4239e4:	(bad)  
  4239e5:	(bad)  
  4239e7:	outs   dx,BYTE PTR ds:[esi]
  4239e8:	jl     0x4239ee
  4239ea:	enter  0xcfc2,0xfa
  4239ee:	pop    ss
  4239ef:	jo     0x423a35
  4239f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239f2:	inc    ebp
  4239f3:	pop    esi
  4239f4:	jb     0x423a26
  4239f6:	ror    BYTE PTR [edx],0x11
  4239f9:	mov    ds:0x6327bae4,eax
  4239fe:	ss test al,0x30
  423a01:	push   edi
  423a02:	(bad)  
  423a03:	push   esi
  423a04:	jmp    0x423a17
  423a06:	out    0x5,al
  423a08:	stos   DWORD PTR es:[edi],eax
  423a09:	int3   
  423a0a:	imul   edi,DWORD PTR [edi+0x20f6fc3f],0x8cbb7065
  423a14:	push   edx
  423a15:	sahf   
  423a16:	test   BYTE PTR [esi-0x7a7b82df],0x50
  423a1d:	aam    0xbc
  423a1f:	cwde   
  423a20:	outs   dx,BYTE PTR ds:[esi]
  423a21:	adc    eax,0xfaa7b799
  423a26:	inc    eax
  423a27:	les    esi,FWORD PTR [edx+0x3699a1ed]
  423a2d:	mov    bl,0xc9
  423a2f:	sub    ah,0x52
  423a32:	int    0x5a
  423a34:	daa    
  423a35:	hlt    
  423a36:	mov    ss,WORD PTR [edi]
  423a38:	out    dx,eax
  423a39:	sahf   
  423a3a:	out    0xcb,al
  423a3c:	inc    ebx
  423a3d:	xchg   ebx,eax
  423a3e:	mov    edx,DWORD PTR es:[ebp+ecx*1+0x2b]
  423a43:	scas   eax,DWORD PTR es:[edi]
  423a44:	pop    ds
  423a45:	xchg   edi,eax
  423a46:	inc    edx
  423a47:	and    al,BYTE PTR [edi]
  423a49:	js     0x423a8a
  423a4b:	xor    edi,DWORD PTR [edx+0x83fd679]
  423a51:	test   edx,0x97fb8f37
  423a57:	jecxz  0x423a03
  423a59:	or     eax,0xfcd784db
  423a5e:	sub    ebx,edi
  423a60:	fimul  WORD PTR [ebx+0x67788e8c]
  423a66:	pop    ds
  423a67:	pop    ss
  423a68:	loop   0x4239f5
  423a6a:	test   eax,0x2812463
  423a6f:	push   edi
  423a71:	(bad)  
  423a74:	cmc    
  423a75:	mov    ss,WORD PTR es:[edi+0x7c005cd]
  423a7c:	test   eax,0x1740f6cf
  423a81:	fidivr DWORD PTR [ebx-0x7d6b9b7b]
  423a87:	xlat   BYTE PTR ds:[ebx]
  423a88:	leave  
  423a89:	hlt    
  423a8a:	cwde   
  423a8b:	std    
  423a8c:	adc    BYTE PTR [esi-0x5254549a],ah
  423a92:	gs pop ds
  423a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a95:	bound  ebp,QWORD PTR ds:0x3fa1c613
  423a9b:	mov    ah,0x54
  423a9d:	lea    edx,[ebx+0xe]
  423aa0:	add    BYTE PTR [eax+0x70],ch
  423aa3:	stos   DWORD PTR es:[edi],eax
  423aa4:	mov    al,0x97
  423aa6:	stc    
  423aa7:	adc    al,0xa
  423aa9:	xor    BYTE PTR [esp+ebp*2-0x70],ah
  423aad:	addr16 in al,0xde
  423ab0:	cmc    
  423ab1:	(bad)  
  423ab2:	mov    edi,0xfcd5f04f
  423ab7:	adc    eax,0xc91f98e6
  423abc:	and    DWORD PTR [ebx*1-0x2010965d],ecx
  423ac3:	pop    edx
  423ac4:	les    esi,FWORD PTR [eax]
  423ac6:	lahf   
  423ac7:	into   
  423ac8:	cwde   
  423ac9:	xor    al,0x25
  423acb:	(bad)  
  423acc:	shl    DWORD PTR [ecx+ebp*4+0x39],0xf2
  423ad1:	cli    
  423ad2:	pop    ss
  423ad3:	lds    ecx,FWORD PTR [eax+0x2b]
  423ad6:	mov    gs,WORD PTR [ebx+0x6a07f550]
  423adc:	shl    al,0xef
  423adf:	stc    
  423ae0:	add    ch,bl
  423ae2:	dec    esi
  423ae3:	dec    esi
  423ae4:	rcl    BYTE PTR [ecx+0x1f],cl
  423ae7:	xor    ebp,DWORD PTR [ecx+0x13]
  423aea:	ror    DWORD PTR [ebx-0x65],1
  423aed:	call   DWORD PTR [edi-0x7acbf0ef]
  423af3:	inc    esp
  423af4:	adc    DWORD PTR [ecx+ecx*8],esi
  423af7:	sub    DWORD PTR [edi-0x28],esi
  423afa:	dec    edx
  423afb:	sar    DWORD PTR [ecx+eax*2+0x7e],cl
  423aff:	test   BYTE PTR [ebx+0x155b6d45],0xb3
  423b06:	mov    ebx,0x6504198b
  423b0b:	cmp    edx,DWORD PTR [edi-0x7c]
  423b0e:	cmc    
  423b0f:	mov    al,0xd1
  423b11:	or     BYTE PTR [edx],ah
  423b13:	mov    eax,ds:0xc1e258d4
  423b18:	fistp  WORD PTR [esi]
  423b1a:	or     ch,BYTE PTR [edi]
  423b1c:	add    al,0x23
  423b1e:	dec    esi
  423b1f:	pop    ebp
  423b20:	and    DWORD PTR [ecx],ebx
  423b22:	dec    esi
  423b23:	push   edi
  423b24:	cmp    DWORD PTR [esi],ebp
  423b26:	scas   al,BYTE PTR es:[edi]
  423b27:	mov    eax,ds:0x99fb0bf1
  423b2c:	rol    DWORD PTR [ecx-0x2ad6f7ca],cl
  423b32:	or     DWORD PTR [eax+0x1b272107],ecx
  423b38:	cdq    
  423b39:	or     al,0x75
  423b3b:	pop    ebp
  423b3c:	dec    esi
  423b3d:	cli    
  423b3e:	cmp    BYTE PTR [edi-0x6dc2f00d],dh
  423b44:	into   
  423b45:	int    0xaf
  423b47:	adc    ah,BYTE PTR [eax+0x28]
  423b4a:	sbb    al,0xd3
  423b4c:	pop    ebx
  423b4d:	int    0xca
  423b4f:	popf   
  423b50:	mov    esp,0x4c81a115
  423b55:	lods   al,BYTE PTR ds:[esi]
  423b56:	dec    ebp
  423b57:	mov    BYTE PTR [edx],cl
  423b59:	pop    ebp
  423b5a:	les    ebx,FWORD PTR [eax+0x6d970bc1]
  423b60:	mov    ch,0x6e
  423b62:	xchg   DWORD PTR ds:0xd5eeb83b,ebx
  423b68:	call   0xe5e5:0xc28f24e1
  423b6f:	call   0x6289:0x7f938237
  423b76:	sbb    eax,0x3e8a271e
  423b7b:	popa   
  423b7c:	cdq    
  423b7d:	jmp    0x423b16
  423b7f:	call   0xd869cffa
  423b84:	sub    eax,0x2ce1463e
  423b89:	push   0x2e711987
  423b8e:	shl    dl,0x25
  423b91:	jg     0x423c07
  423b93:	pop    esi
  423b94:	inc    ebx
  423b95:	outs   dx,BYTE PTR ds:[esi]
  423b96:	stc    
  423b97:	lods   al,BYTE PTR ds:[esi]
  423b99:	scas   al,BYTE PTR es:[edi]
  423b9a:	and    BYTE PTR [ebx+0x41],0xde
  423b9e:	fild   QWORD PTR cs:[esi-0x294ff90d]
  423ba5:	and    BYTE PTR [esi+0x6cd29acd],cl
  423bab:	imul   ebp,esp,0x996e09e6
  423bb1:	pop    ebx
  423bb2:	psubw  mm0,QWORD PTR ds:0x327a3936
  423bb9:	mov    al,0x6a
  423bbb:	imul   ebp,DWORD PTR [ecx],0x5f
  423bbe:	pushw  0xffa4
  423bc1:	xor    al,0xe4
  423bc3:	push   0x2a
  423bc5:	loope  0x423b77
  423bc7:	mov    es,WORD PTR [ebp+0x5f]
  423bca:	jle    0x423b5a
  423bcc:	stos   DWORD PTR es:[edi],eax
  423bcd:	sbb    ah,BYTE PTR [eax-0x2f6f4934]
  423bd3:	in     eax,dx
  423bd4:	in     eax,dx
  423bd5:	ret    
  423bd6:	dec    ecx
  423bd7:	(bad)  
  423bd8:	jb     0x423c06
  423bda:	jle    0x423bc4
  423bdc:	adc    DWORD PTR [edi+0x72],eax
  423bdf:	(bad)  
  423be0:	jno    0x423ba1
  423be2:	jo     0x423b77
  423be4:	pop    ss
  423be5:	pusha  
  423be6:	pop    eax
  423be7:	call   0x464affcd
  423bec:	icebp  
  423bed:	(bad)  
  423bee:	sbb    al,dh
  423bf0:	jp     0x423bbd
  423bf2:	clc    
  423bf3:	and    DWORD PTR [edi+ebx*4-0x27],edi
  423bf7:	adc    DWORD PTR [ebx-0x6027f4db],ebp
  423bfd:	pop    fs
  423bff:	ss js  0x423c69
  423c02:	xchg   edx,eax
  423c03:	into   
  423c04:	inc    edx
  423c05:	(bad)  
  423c06:	inc    edx
  423c07:	or     edi,ecx
  423c09:	test   al,0x9b
  423c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c0c:	mov    bl,0x34
  423c0e:	mov    esi,0x1a1af897
  423c13:	(bad)  
  423c14:	adc    al,0xd3
  423c16:	dec    edx
  423c17:	xchg   ecx,eax
  423c18:	and    edx,ebp
  423c1a:	xor    eax,0xd1406947
  423c1f:	adc    ecx,DWORD PTR [ebx-0x3]
  423c22:	shl    DWORD PTR [ebx+0x1c589c53],0x86
  423c29:	or     al,0x21
  423c2b:	or     dh,BYTE PTR [edx-0x634488cd]
  423c31:	or     dh,cl
  423c33:	rol    BYTE PTR [edx],cl
  423c35:	leave  
  423c36:	icebp  
  423c37:	dec    esi
  423c38:	sbb    esi,DWORD PTR [esi]
  423c3a:	fnstenv [eax+esi*2-0x7e69e33b]
  423c41:	jo     0x423bcb
  423c43:	sub    ch,BYTE PTR fs:[esp+ebp*4+0x702703c3]
  423c4b:	jmp    0x5445c891
  423c50:	out    0xd0,al
  423c52:	shl    al,0xa4
  423c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c56:	lea    esi,cs:[ebx-0x3d]
  423c5a:	je     0x423ca3
  423c5c:	std    
  423c5d:	pop    eax
  423c5e:	shl    bl,cl
  423c60:	xchg   esi,eax
  423c61:	outs   dx,BYTE PTR ds:[esi]
  423c62:	inc    ecx
  423c63:	sbb    BYTE PTR [esp+ebp*2+0x24],ah
  423c67:	sti    
  423c68:	and    ebp,ebx
  423c6a:	sti    
  423c6b:	mov    al,ds:0xb371112
  423c70:	retf   0x78dd
  423c73:	retf   
  423c74:	push   eax
  423c75:	(bad)  
  423c77:	cld    
  423c78:	repz sti 
  423c7a:	adc    eax,0xbfe3e171
  423c7f:	mov    bl,0x9b
  423c81:	shr    BYTE PTR [eax+0x40],1
  423c84:	fstp   TBYTE PTR ds:0xa5fea377
  423c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c8b:	pop    ecx
  423c8c:	stos   BYTE PTR es:[edi],al
  423c8d:	loop   0x423c28
  423c8f:	repz sar BYTE PTR [esi],1
  423c92:	ffree  st(0)
  423c94:	(bad)  
  423c95:	mov    ebp,0xb97cf37c
  423c9a:	inc    esi
  423c9b:	push   edx
  423c9c:	fist   DWORD PTR cs:[eax+0x6f]
  423ca0:	jb     0x423ca9
  423ca2:	ror    BYTE PTR [edx+0x3cb57e81],cl
  423ca8:	and    BYTE PTR [ebx-0x48],bl
  423cab:	faddp  st(7),st
  423cad:	xchg   ebp,eax
  423cae:	and    ebx,DWORD PTR ds:0x7e1f067b
  423cb4:	outs   dx,BYTE PTR ds:[esi]
  423cb5:	mov    dh,0x3d
  423cb7:	aam    0x4
  423cb9:	cmp    BYTE PTR gs:[ebx],bl
  423cbc:	xor    eax,0xb1c38fb7
  423cc1:	fxtract 
  423cc3:	aam    0xa0
  423cc5:	xchg   DWORD PTR [esi+eax*4-0x44],esp
  423cc9:	mov    ds:0xb4c645d8,eax
  423cce:	in     al,dx
  423ccf:	test   al,0x2d
  423cd1:	std    
  423cd2:	add    bh,BYTE PTR [edx-0x19fb36ae]
  423cd8:	push   cs
  423cd9:	pop    eax
  423cda:	rcr    DWORD PTR [edi-0x21fd312b],cl
  423ce0:	fcomp  QWORD PTR [esi+0x7e]
  423ce3:	mov    eax,ds:0xa73997df
  423ce8:	pop    esp
  423ce9:	shr    ebp,1
  423ceb:	or     ch,BYTE PTR [esi]
  423ced:	mov    gs,WORD PTR [ebp-0x479b942b]
  423cf3:	inc    ebp
  423cf4:	dec    edi
  423cf5:	call   0x4b534cd5
  423cfa:	les    edi,FWORD PTR [ebx+0x36]
  423cfd:	int    0x34
  423cff:	dec    esi
  423d00:	pop    edx
  423d01:	sbb    eax,0x3843a78a
  423d06:	jb     0x423cd3
  423d08:	mov    ds,WORD PTR [esi]
  423d0a:	pop    edi
  423d0b:	mov    ah,0xc9
  423d0d:	push   ebx
  423d0e:	lods   al,BYTE PTR ds:[esi]
  423d0f:	jno    0x423c93
  423d11:	cmc    
  423d12:	aam    0xa0
  423d14:	ret    
  423d15:	addr16 dec esp
  423d17:	scas   al,BYTE PTR es:[edi]
  423d18:	shr    edx,cl
  423d1a:	jae    0x423cc1
  423d1c:	cmp    dl,BYTE PTR [esi]
  423d1e:	adc    al,0x74
  423d20:	xchg   DWORD PTR [ebx],ecx
  423d22:	test   al,0xa2
  423d24:	(bad)  
  423d25:	mov    eax,ds:0x144ad24c
  423d2a:	test   BYTE PTR [ecx-0x72],bh
  423d2d:	gs pop ds
  423d2f:	popf   
  423d30:	xor    al,0x6c
  423d32:	adc    al,0x19
  423d34:	jle    0x423dab
  423d36:	cmp    bh,BYTE PTR [edx-0x33]
  423d39:	mov    al,ds:0x1ed0fc31
  423d3e:	mov    ch,0x48
  423d40:	(bad)  
  423d41:	js     0x423d81
  423d43:	inc    ecx
  423d44:	test   DWORD PTR [edx+0x5],ebp
  423d47:	jne    0x423d3b
  423d49:	retf   
  423d4a:	call   DWORD PTR [ebp+0x60]
  423d4d:	lods   eax,DWORD PTR ds:[esi]
  423d4e:	stos   BYTE PTR es:[edi],al
  423d4f:	add    eax,0x8fea76f3
  423d54:	and    eax,0xffcde34f
  423d59:	pop    esp
  423d5a:	cmc    
  423d5b:	cmp    eax,ebx
  423d5d:	xchg   ecx,eax
  423d5e:	out    dx,eax
  423d5f:	pop    edi
  423d60:	or     BYTE PTR [ebp+esi*4-0x71d9a3d1],ah
  423d67:	(bad)  
  423d68:	cdq    
  423d69:	push   edx
  423d6a:	test   eax,0x56dc0e2f
  423d6f:	stc    
  423d70:	fisttp WORD PTR es:[ecx+0x22d860f2]
  423d77:	ins    BYTE PTR es:[edi],dx
  423d78:	popa   
  423d79:	xchg   edx,eax
  423d7a:	cmp    bh,BYTE PTR [ebx]
  423d7c:	dec    eax
  423d7d:	pop    ebx
  423d7e:	push   es
  423d7f:	pusha  
  423d80:	pop    DWORD PTR [edx-0x5f]
  423d83:	retf   0x71d7
  423d86:	cli    
  423d87:	pop    ds
  423d88:	rcl    BYTE PTR ds:0xbf05081f,cl
  423d8e:	xchg   edx,eax
  423d8f:	mov    dh,0xea
  423d91:	hlt    
  423d92:	push   DWORD PTR [ecx-0x75c4e02e]
  423d98:	push   ss
  423d99:	loop   0x423d91
  423d9b:	jo     0x423d4f
  423d9d:	sahf   
  423d9e:	dec    esi
  423d9f:	out    0xb1,eax
  423da1:	and    eax,0xe6f6c998
  423da6:	xor    al,0xbb
  423da8:	mov    dh,0xa9
  423daa:	pushf  
  423dab:	test   eax,0xd76ca6ab
  423db0:	jae    0x423d5b
  423db2:	xchg   ebp,eax
  423db3:	mov    bl,0x8c
  423db5:	icebp  
  423db6:	pop    edi
  423db7:	mov    bl,0x93
  423db9:	js     0x423de7
  423dbb:	inc    esi
  423dbc:	xor    DWORD PTR [esi],edi
  423dbe:	cmp    BYTE PTR [ebx-0x74],bh
  423dc1:	inc    sp
  423dc3:	lods   eax,DWORD PTR ds:[esi]
  423dc4:	adc    BYTE PTR [esi+0x49],bl
  423dc7:	or     eax,DWORD PTR [esi-0x34]
  423dca:	cld    
  423dcb:	nop
  423dcc:	shl    ebp,cl
  423dce:	in     al,dx
  423dcf:	xor    bh,dl
  423dd1:	js     0x423db7
  423dd3:	test   al,0xa9
  423dd5:	cmp    DWORD PTR [eax+0x5c],edi
  423dd8:	nop
  423dd9:	outs   dx,BYTE PTR ds:[esi]
  423dda:	dec    esp
  423ddb:	sub    al,0xce
  423ddd:	push   ecx
  423dde:	jmp    0x423d78
  423de0:	jg     0x423d65
  423de2:	inc    edx
  423de3:	rcr    BYTE PTR [edx],cl
  423de5:	push   ebp
  423de6:	jmp    0x423d70
  423de8:	outs   dx,BYTE PTR ds:[esi]
  423de9:	sbb    BYTE PTR [edi-0x55],bl
  423dec:	cmc    
  423ded:	sbb    BYTE PTR [ecx],dh
  423def:	clc    
  423df0:	mov    edi,0xb0ef37f4
  423df5:	add    eax,0x27e588e7
  423dfa:	sub    dh,BYTE PTR [eax+edi*1+0x7c]
  423dfe:	inc    esp
  423dff:	test   eax,0x71eeedeb
  423e04:	fwait
  423e05:	pop    esp
  423e06:	cmp    ah,BYTE PTR [edi-0x2fa70903]
  423e0c:	in     eax,dx
  423e0d:	sbb    edx,DWORD PTR [edi]
  423e0f:	or     ch,BYTE PTR [ebp+0x28]
  423e12:	(bad)  
  423e13:	xchg   ebp,eax
  423e14:	dec    ebx
  423e15:	retf   
  423e16:	mov    ah,0x5
  423e18:	xor    dh,dh
  423e1a:	call   0xcad3:0xe3fa7186
  423e21:	fnstsw WORD PTR [ecx+0x6e3a8205]
  423e27:	cmp    DWORD PTR [ebx-0x155dcf6f],esi
  423e2d:	xchg   DWORD PTR [ebx+0x72],ebp
  423e30:	inc    ebp
  423e31:	mov    al,ds:0xbea3eefc
  423e36:	out    dx,al
  423e37:	push   0x6bcb265
  423e3c:	imul   ebp,DWORD PTR [ecx],0x43
  423e3f:	ins    DWORD PTR es:[edi],dx
  423e40:	inc    eax
  423e41:	outs   dx,DWORD PTR ds:[esi]
  423e42:	cli    
  423e43:	gs jns 0x423ddc
  423e46:	jno    0x423e26
  423e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e49:	retf   0x379d
  423e4c:	call   0xc82:0x4e1865f2
  423e53:	jg     0x423ec9
  423e55:	or     DWORD PTR [edx-0x64],ebx
  423e58:	sub    esi,0xfffffff9
  423e5b:	in     eax,0xa5
  423e5d:	in     al,0x9d
  423e5f:	out    0x1c,eax
  423e61:	sub    bh,al
  423e63:	pop    es
  423e64:	jmp    0x7a0d0cc1
  423e69:	xchg   esi,eax
  423e6a:	outs   dx,BYTE PTR ds:[esi]
  423e6b:	cdq    
  423e6c:	fstp   QWORD PTR [ebx-0x3d]
  423e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e70:	jmp    0x2e23f25b
  423e75:	std    
  423e76:	push   ecx
  423e77:	inc    edx
  423e78:	jns    0x423e1e
  423e7a:	stos   DWORD PTR es:[edi],eax
  423e7b:	add    ebp,DWORD PTR [ebx-0x1e685e81]
  423e81:	mov    ebp,cs
  423e83:	(bad)  
  423e84:	leave  
  423e85:	(bad)  
  423e86:	retf   0xf89f
  423e89:	rcl    DWORD PTR [edi+0x56],1
  423e8c:	je     0x423ebf
  423e8e:	out    0x24,eax
  423e90:	mov    ebp,0xcb76d200
  423e95:	push   cs
  423e96:	(bad)  
  423e97:	rcr    BYTE PTR [edx+ebp*1],1
  423e9a:	enter  0xa995,0xb3
  423e9e:	cmp    dl,dl
  423ea0:	inc    esi
  423ea1:	lock leave 
  423ea3:	fmul   DWORD PTR [edx+0x5581c5fd]
  423ea9:	jmp    0x91f9:0x6e6a3188
  423eb0:	arpl   WORD PTR [ebp+0x55],di
  423eb3:	mov    es,WORD PTR [eax-0x15dad1a9]
  423eb9:	or     eax,0x351dcf0
  423ebe:	clc    
  423ebf:	pushf  
  423ec0:	add    eax,0xd53a6675
  423ec5:	mov    bh,0xd8
  423ec7:	(bad)  
  423ec8:	retf   0xd631
  423ecb:	mov    dl,0xc0
  423ecd:	in     eax,dx
  423ece:	mov    eax,0x7270cf77
  423ed3:	ins    BYTE PTR es:[edi],dx
  423ed4:	into   
  423ed5:	fld    st(2)
  423ed7:	rol    BYTE PTR [ecx],cl
  423ed9:	mov    ds,eax
  423edb:	mov    ds:0xab651308,al
  423ee0:	jg     0x423f40
  423ee2:	jmp    0x83d2:0xe7d16cc3
  423ee9:	repz add BYTE PTR [ebx-0x4130fa3f],cl
  423ef0:	mov    ebp,0xffd783fa
  423ef5:	xor    eax,0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	and    al,0x11
  4241e6:	test   eax,0xb886844c
  4241eb:	dec    edx
  4241ec:	mov    edx,0x717f549b
  4241f1:	(bad)  [edi-0xd]
  4241f4:	add    DWORD PTR [eax],eax
  4241f6:	add    BYTE PTR [eax],al
  4241f8:	inc    ebx
  4241f9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
